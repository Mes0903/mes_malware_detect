
b5703fd17c3ae58ef1f0efb174c8d6f7421c1b6976d1d963327e57675b95a28c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x38
   140001004:	mov    eax,DWORD PTR [rip+0x46036]        # 0x140047040
   14000100a:	lea    rcx,[rip+0x3176f]        # 0x140032780
   140001011:	mov    r9d,0x2
   140001017:	mov    DWORD PTR [rsp+0x20],eax
   14000101b:	xor    r8d,r8d
   14000101e:	xor    edx,edx
   140001020:	call   QWORD PTR [rip+0x3148a]        # 0x1400324b0
   140001026:	mov    DWORD PTR [rip+0x46018],eax        # 0x140047044
   14000102c:	add    rsp,0x38
   140001030:	ret    
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	sub    rsp,0x28
   140001044:	mov    eax,DWORD PTR [rip+0x46036]        # 0x140047080
   14000104a:	bt     eax,0x1a
   14000104e:	jb     0x14000105e
   140001050:	mov    dl,0x1
   140001052:	lea    rcx,[rip+0x4601f]        # 0x140047078
   140001059:	call   0x140007500
   14000105e:	lock or DWORD PTR [rip+0x46017],0x8000000        # 0x140047080
   140001069:	lea    rcx,[rip+0x2fee0]        # 0x140030f50
   140001070:	add    rsp,0x28
   140001074:	jmp    0x1400266d0
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x38
   140001084:	mov    eax,DWORD PTR [rip+0x4607e]        # 0x140047108
   14000108a:	lea    rcx,[rip+0x332d7]        # 0x140034368
   140001091:	mov    r9d,0x2
   140001097:	mov    DWORD PTR [rsp+0x20],eax
   14000109b:	xor    r8d,r8d
   14000109e:	xor    edx,edx
   1400010a0:	call   QWORD PTR [rip+0x3140a]        # 0x1400324b0
   1400010a6:	mov    DWORD PTR [rip+0x46060],eax        # 0x14004710c
   1400010ac:	add    rsp,0x38
   1400010b0:	ret    
   1400010b1:	int3   
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	int3   
   1400010b5:	int3   
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	sub    rsp,0x38
   1400010c4:	mov    eax,DWORD PTR [rip+0x4603e]        # 0x140047108
   1400010ca:	lea    rcx,[rip+0x332a7]        # 0x140034378
   1400010d1:	mov    r9d,0x2
   1400010d7:	mov    DWORD PTR [rsp+0x20],eax
   1400010db:	xor    r8d,r8d
   1400010de:	xor    edx,edx
   1400010e0:	call   QWORD PTR [rip+0x313ca]        # 0x1400324b0
   1400010e6:	mov    DWORD PTR [rip+0x46014],eax        # 0x140047100
   1400010ec:	add    rsp,0x38
   1400010f0:	ret    
   1400010f1:	int3   
   1400010f2:	int3   
   1400010f3:	int3   
   1400010f4:	int3   
   1400010f5:	int3   
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	sub    rsp,0x38
   140001104:	mov    eax,DWORD PTR [rip+0x45ffe]        # 0x140047108
   14000110a:	lea    rcx,[rip+0x3327f]        # 0x140034390
   140001111:	mov    r9d,0x2
   140001117:	mov    DWORD PTR [rsp+0x20],eax
   14000111b:	xor    r8d,r8d
   14000111e:	xor    edx,edx
   140001120:	call   QWORD PTR [rip+0x3138a]        # 0x1400324b0
   140001126:	mov    DWORD PTR [rip+0x45fd8],eax        # 0x140047104
   14000112c:	add    rsp,0x38
   140001130:	ret    
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	lea    rcx,[rip+0x44f69]        # 0x1400460b0
   140001147:	rex.W jmp QWORD PTR [rip+0x311c2]        # 0x140032310
   14000114e:	int3   
   14000114f:	int3   
   140001150:	lea    rcx,[rip+0x2fe59]        # 0x140030fb0
   140001157:	jmp    0x1400266d0
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    eax,DWORD PTR [rip+0x46d32]        # 0x140047e98
   140001166:	mov    DWORD PTR [rip+0x46d28],eax        # 0x140047e94
   14000116c:	ret    
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	lea    r9,[rip+0x17a49]        # 0x140018bc0
   140001177:	lea    r8,[rip+0x44f7a]        # 0x1400460f8
   14000117e:	lea    rdx,[rip+0x44eb3]        # 0x140046038
   140001185:	lea    rcx,[rip+0x44f44]        # 0x1400460d0
   14000118c:	jmp    0x140018650
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	lea    r9,[rip+0x17c39]        # 0x140018de0
   1400011a7:	lea    r8,[rip+0x44eaa]        # 0x140046058
   1400011ae:	lea    rdx,[rip+0x44e83]        # 0x140046038
   1400011b5:	lea    rcx,[rip+0x44f14]        # 0x1400460d0
   1400011bc:	jmp    0x140018650
   1400011c1:	int3   
   1400011c2:	int3   
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	lea    r9,[rip+0x17c79]        # 0x140018e50
   1400011d7:	lea    r8,[rip+0x44f2a]        # 0x140046108
   1400011de:	lea    rdx,[rip+0x44f13]        # 0x1400460f8
   1400011e5:	lea    rcx,[rip+0x44ee4]        # 0x1400460d0
   1400011ec:	jmp    0x140018650
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	lea    r9,[rip+0x17e79]        # 0x140019080
   140001207:	lea    r8,[rip+0x44f0a]        # 0x140046118
   14000120e:	lea    rdx,[rip+0x44ef3]        # 0x140046108
   140001215:	lea    rcx,[rip+0x44eb4]        # 0x1400460d0
   14000121c:	jmp    0x140018650
   140001221:	int3   
   140001222:	int3   
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	lea    r9,[rip+0x18049]        # 0x140019280
   140001237:	lea    r8,[rip+0x44eea]        # 0x140046128
   14000123e:	lea    rdx,[rip+0x44ed3]        # 0x140046118
   140001245:	lea    rcx,[rip+0x44e84]        # 0x1400460d0
   14000124c:	jmp    0x140018650
   140001251:	int3   
   140001252:	int3   
   140001253:	int3   
   140001254:	int3   
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	lea    r9,[rip+0x18189]        # 0x1400193f0
   140001267:	lea    r8,[rip+0x44eca]        # 0x140046138
   14000126e:	lea    rdx,[rip+0x44eb3]        # 0x140046128
   140001275:	lea    rcx,[rip+0x44e54]        # 0x1400460d0
   14000127c:	jmp    0x140018650
   140001281:	int3   
   140001282:	int3   
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	lea    r9,[rip+0x18279]        # 0x140019510
   140001297:	lea    r8,[rip+0x44eaa]        # 0x140046148
   14000129e:	lea    rdx,[rip+0x44e93]        # 0x140046138
   1400012a5:	lea    rcx,[rip+0x44e24]        # 0x1400460d0
   1400012ac:	jmp    0x140018650
   1400012b1:	int3   
   1400012b2:	int3   
   1400012b3:	int3   
   1400012b4:	int3   
   1400012b5:	int3   
   1400012b6:	int3   
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	lea    r9,[rip+0x18519]        # 0x1400197e0
   1400012c7:	lea    r8,[rip+0x44e8a]        # 0x140046158
   1400012ce:	lea    rdx,[rip+0x44e73]        # 0x140046148
   1400012d5:	lea    rcx,[rip+0x44df4]        # 0x1400460d0
   1400012dc:	jmp    0x140018650
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	lea    r9,[rip+0x18799]        # 0x140019a90
   1400012f7:	lea    r8,[rip+0x44e6a]        # 0x140046168
   1400012fe:	lea    rdx,[rip+0x44e53]        # 0x140046158
   140001305:	lea    rcx,[rip+0x44dc4]        # 0x1400460d0
   14000130c:	jmp    0x140018650
   140001311:	int3   
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	lea    r9,[rip+0x188d9]        # 0x140019c00
   140001327:	lea    r8,[rip+0x44e4a]        # 0x140046178
   14000132e:	lea    rdx,[rip+0x44e33]        # 0x140046168
   140001335:	lea    rcx,[rip+0x44d94]        # 0x1400460d0
   14000133c:	jmp    0x140018650
   140001341:	int3   
   140001342:	int3   
   140001343:	int3   
   140001344:	int3   
   140001345:	int3   
   140001346:	int3   
   140001347:	int3   
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	lea    r9,[rip+0x18a99]        # 0x140019df0
   140001357:	lea    r8,[rip+0x44cfa]        # 0x140046058
   14000135e:	lea    rdx,[rip+0x44ce3]        # 0x140046048
   140001365:	lea    rcx,[rip+0x44d64]        # 0x1400460d0
   14000136c:	jmp    0x140018650
   140001371:	int3   
   140001372:	int3   
   140001373:	int3   
   140001374:	int3   
   140001375:	int3   
   140001376:	int3   
   140001377:	int3   
   140001378:	int3   
   140001379:	int3   
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	lea    r9,[rip+0x18ad9]        # 0x140019e60
   140001387:	lea    r8,[rip+0x44cda]        # 0x140046068
   14000138e:	lea    rdx,[rip+0x44cc3]        # 0x140046058
   140001395:	lea    rcx,[rip+0x44d34]        # 0x1400460d0
   14000139c:	jmp    0x140018650
   1400013a1:	int3   
   1400013a2:	int3   
   1400013a3:	int3   
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	lea    r9,[rip+0x18b19]        # 0x140019ed0
   1400013b7:	lea    r8,[rip+0x44cba]        # 0x140046078
   1400013be:	lea    rdx,[rip+0x44ca3]        # 0x140046068
   1400013c5:	lea    rcx,[rip+0x44d04]        # 0x1400460d0
   1400013cc:	jmp    0x140018650
   1400013d1:	int3   
   1400013d2:	int3   
   1400013d3:	int3   
   1400013d4:	int3   
   1400013d5:	int3   
   1400013d6:	int3   
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	lea    r9,[rip+0x18b59]        # 0x140019f40
   1400013e7:	lea    r8,[rip+0x44c9a]        # 0x140046088
   1400013ee:	lea    rdx,[rip+0x44c73]        # 0x140046068
   1400013f5:	lea    rcx,[rip+0x44cd4]        # 0x1400460d0
   1400013fc:	jmp    0x140018650
   140001401:	int3   
   140001402:	int3   
   140001403:	int3   
   140001404:	int3   
   140001405:	int3   
   140001406:	int3   
   140001407:	int3   
   140001408:	int3   
   140001409:	int3   
   14000140a:	int3   
   14000140b:	int3   
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	mov    eax,DWORD PTR [rip+0x46a76]        # 0x140047e8c
   140001416:	mov    DWORD PTR [rip+0x46a84],eax        # 0x140047ea0
   14000141c:	ret    
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	movups xmm0,XMMWORD PTR [rip+0x44d69]        # 0x140046190
   140001427:	movups XMMWORD PTR [rip+0x46a9a],xmm0        # 0x140047ec8
   14000142e:	ret    
   14000142f:	int3   
   140001430:	sub    rsp,0x28
   140001434:	cmp    BYTE PTR [rip+0x46a77],0x0        # 0x140047eb2
   14000143b:	jne    0x140001449
   14000143d:	call   0x140019fb0
   140001442:	mov    BYTE PTR [rip+0x46a6a],0x1        # 0x140047eb3
   140001449:	add    rsp,0x28
   14000144d:	ret    
   14000144e:	int3   
   14000144f:	int3   
   140001450:	lea    rcx,[rip+0x2fc19]        # 0x140031070
   140001457:	jmp    0x1400266d0
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rsp,0x28
   140001464:	lea    rcx,[rip+0x46d05]        # 0x140048170
   14000146b:	call   0x140024620
   140001470:	lea    rcx,[rip+0x2fc49]        # 0x1400310c0
   140001477:	add    rsp,0x28
   14000147b:	jmp    0x1400266d0
   140001480:	sub    rsp,0x28
   140001484:	lea    rcx,[rip+0x46db5]        # 0x140048240
   14000148b:	call   0x140022080
   140001490:	lea    rcx,[rip+0x2fc39]        # 0x1400310d0
   140001497:	add    rsp,0x28
   14000149b:	jmp    0x1400266d0
   1400014a0:	sub    rsp,0x28
   1400014a4:	lea    rcx,[rip+0x36c9d]        # 0x140038148
   1400014ab:	call   QWORD PTR [rip+0x30d87]        # 0x140032238
   1400014b1:	test   rax,rax
   1400014b4:	setne  BYTE PTR [rip+0x46dad]        # 0x140048268
   1400014bb:	add    rsp,0x28
   1400014bf:	ret    
   1400014c0:	sub    rsp,0x38
   1400014c4:	mov    DWORD PTR [rsp+0x40],0xffeeaff5
   1400014cc:	lea    rcx,[rip+0x36de5]        # 0x1400382b8
   1400014d3:	mov    eax,DWORD PTR [rsp+0x40]
   1400014d7:	mov    r9d,0x2
   1400014dd:	xor    r8d,r8d
   1400014e0:	mov    DWORD PTR [rsp+0x20],eax
   1400014e4:	xor    edx,edx
   1400014e6:	call   QWORD PTR [rip+0x30fc4]        # 0x1400324b0
   1400014ec:	mov    DWORD PTR [rip+0x46db2],eax        # 0x1400482a4
   1400014f2:	add    rsp,0x38
   1400014f6:	ret    
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	sub    rsp,0x38
   140001504:	mov    DWORD PTR [rsp+0x40],0xffc075ee
   14000150c:	lea    rcx,[rip+0x36dad]        # 0x1400382c0
   140001513:	mov    eax,DWORD PTR [rsp+0x40]
   140001517:	mov    r9d,0x2
   14000151d:	xor    r8d,r8d
   140001520:	mov    DWORD PTR [rsp+0x20],eax
   140001524:	xor    edx,edx
   140001526:	call   QWORD PTR [rip+0x30f84]        # 0x1400324b0
   14000152c:	mov    DWORD PTR [rip+0x46d52],eax        # 0x140048284
   140001532:	add    rsp,0x38
   140001536:	ret    
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	sub    rsp,0x28
   140001544:	mov    edx,0x7fffffff
   140001549:	lea    rcx,[rip+0x46d38]        # 0x140048288
   140001550:	call   0x14000bb60
   140001555:	lea    rax,[rip+0x36d7c]        # 0x1400382d8
   14000155c:	mov    QWORD PTR [rip+0x46d25],rax        # 0x140048288
   140001563:	add    rsp,0x28
   140001567:	ret    
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    QWORD PTR [rsp+0x10],rdx
   140001575:	mov    QWORD PTR [rsp+0x18],r8
   14000157a:	mov    QWORD PTR [rsp+0x20],r9
   14000157f:	sub    rsp,0x28
   140001583:	mov    r8,rdx
   140001586:	lea    r9,[rsp+0x40]
   14000158b:	mov    edx,0x104
   140001590:	call   QWORD PTR [rip+0x30fb2]        # 0x140032548
   140001596:	add    rsp,0x28
   14000159a:	ret    
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400015a5:	mov    QWORD PTR [rsp+0x18],r8
   1400015aa:	mov    QWORD PTR [rsp+0x20],r9
   1400015af:	sub    rsp,0x28
   1400015b3:	mov    r8,rdx
   1400015b6:	lea    r9,[rsp+0x40]
   1400015bb:	mov    edx,0x200
   1400015c0:	call   QWORD PTR [rip+0x30f82]        # 0x140032548
   1400015c6:	add    rsp,0x28
   1400015ca:	ret    
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400015d5:	mov    QWORD PTR [rsp+0x18],r8
   1400015da:	mov    QWORD PTR [rsp+0x20],r9
   1400015df:	sub    rsp,0x28
   1400015e3:	mov    r8,rdx
   1400015e6:	lea    r9,[rsp+0x40]
   1400015eb:	mov    edx,0x400
   1400015f0:	call   QWORD PTR [rip+0x30f52]        # 0x140032548
   1400015f6:	add    rsp,0x28
   1400015fa:	ret    
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	mov    QWORD PTR [rsp+0x10],rdx
   140001605:	mov    QWORD PTR [rsp+0x18],r8
   14000160a:	mov    QWORD PTR [rsp+0x20],r9
   14000160f:	push   rbx
   140001610:	push   rsi
   140001611:	push   rdi
   140001612:	sub    rsp,0x40
   140001616:	lea    rax,[rip+0x31cc3]        # 0x1400332e0
   14000161d:	mov    BYTE PTR [rcx+0x8],0x0
   140001621:	mov    QWORD PTR [rcx],rax
   140001624:	lea    r9,[rsp+0x70]
   140001629:	lea    rax,[rsp+0x30]
   14000162e:	mov    BYTE PTR [rsp+0x30],0x0
   140001633:	mov    rbx,rcx
   140001636:	mov    QWORD PTR [rsp+0x20],rax
   14000163b:	mov    r8,rdx
   14000163e:	add    rcx,0x9
   140001642:	mov    edx,0xff
   140001647:	call   QWORD PTR [rip+0x30ef3]        # 0x140032540
   14000164d:	cmp    BYTE PTR [rsp+0x30],0x0
   140001652:	mov    edi,eax
   140001654:	mov    BYTE PTR [rbx+0x108],0x0
   14000165b:	je     0x140001688
   14000165d:	cmp    BYTE PTR [rbx+0x8],0x0
   140001661:	jne    0x140001688
   140001663:	cmp    DWORD PTR [rip+0x45a06],0x5        # 0x140047070
   14000166a:	jge    0x140001688
   14000166c:	lea    r8,[rbx+0x9]
   140001670:	mov    edx,0x100
   140001675:	lea    rcx,[rip+0x326d4]        # 0x140033d50
   14000167c:	call   QWORD PTR [rip+0x30d2e]        # 0x1400323b0
   140001682:	inc    DWORD PTR [rip+0x459e8]        # 0x140047070
   140001688:	mov    rax,rbx
   14000168b:	mov    DWORD PTR [rbx+0x10c],edi
   140001691:	add    rsp,0x40
   140001695:	pop    rdi
   140001696:	pop    rsi
   140001697:	pop    rbx
   140001698:	ret    
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400016aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400016af:	mov    QWORD PTR [rsp+0x20],rdi
   1400016b4:	push   r14
   1400016b6:	sub    rsp,0x40
   1400016ba:	movzx  eax,BYTE PTR [rsp+0x80]
   1400016c2:	movzx  esi,dl
   1400016c5:	movzx  r14d,BYTE PTR [rsp+0x78]
   1400016cb:	mov    rdi,rcx
   1400016ce:	mov    BYTE PTR [rsp+0x30],al
   1400016d2:	mov    eax,DWORD PTR [rsp+0x70]
   1400016d6:	mov    BYTE PTR [rsp+0x28],r14b
   1400016db:	mov    DWORD PTR [rsp+0x20],eax
   1400016df:	call   0x140007e60
   1400016e4:	mov    BYTE PTR [rdi+0x148],0x0
   1400016eb:	lea    rax,[rip+0x319be]        # 0x1400330b0
   1400016f2:	mov    QWORD PTR [rdi],rax
   1400016f5:	xor    ebp,ebp
   1400016f7:	mov    DWORD PTR [rdi+0x150],ebp
   1400016fd:	mov    QWORD PTR [rdi+0x158],rbp
   140001704:	mov    QWORD PTR [rdi+0x160],0x20
   14000170f:	call   QWORD PTR [rip+0x30dab]        # 0x1400324c0
   140001715:	mov    rax,QWORD PTR [rip+0x30c74]        # 0x140032390
   14000171c:	movsxd rdx,DWORD PTR [rdi+0x160]
   140001723:	shl    rdx,0x2
   140001727:	mov    rcx,QWORD PTR [rax]
   14000172a:	mov    rax,QWORD PTR [rcx]
   14000172d:	call   QWORD PTR [rax+0x8]
   140001730:	lea    rcx,[rdi+0x168]
   140001737:	mov    r9b,0x1
   14000173a:	lea    r8d,[rbp+0x20]
   14000173e:	mov    QWORD PTR [rdi+0x158],rax
   140001745:	xor    edx,edx
   140001747:	call   0x14001c880
   14000174c:	mov    DWORD PTR [rdi+0x1c0],ebp
   140001752:	lea    rbx,[rdi+0x1f8]
   140001759:	mov    QWORD PTR [rdi+0x1c8],rbp
   140001760:	lea    rcx,[rdi+0x210]
   140001767:	mov    QWORD PTR [rdi+0x1d0],rbp
   14000176e:	mov    DWORD PTR [rdi+0x1e4],ebp
   140001774:	mov    QWORD PTR [rdi+0x1e8],rbp
   14000177b:	mov    QWORD PTR [rbx],rbp
   14000177e:	mov    QWORD PTR [rdi+0x200],rbp
   140001785:	call   0x1400259d0
   14000178a:	mov    BYTE PTR [rdi+0x1e3],bpl
   140001791:	lea    rdx,[rip+0x31948]        # 0x1400330e0
   140001798:	mov    eax,ebp
   14000179a:	mov    rcx,rbx
   14000179d:	xchg   DWORD PTR [rdi+0x1e4],eax
   1400017a3:	mov    eax,DWORD PTR [rdi+0x1e4]
   1400017a9:	mov    DWORD PTR [rdi+0x1d8],ebp
   1400017af:	mov    WORD PTR [rdi+0x1dc],bp
   1400017b6:	mov    QWORD PTR [rdi+0x1b8],rbp
   1400017bd:	mov    DWORD PTR [rdi+0x1df],ebp
   1400017c3:	call   0x14001aae0
   1400017c8:	mov    rcx,QWORD PTR [rdi+0xe8]
   1400017cf:	lea    rdx,[rip+0x31916]        # 0x1400330ec
   1400017d6:	xor    r8d,r8d
   1400017d9:	mov    BYTE PTR [rdi+0x208],bpl
   1400017e0:	mov    DWORD PTR [rdi+0x20c],0xffffffff
   1400017ea:	mov    QWORD PTR [rdi+0x1f0],rbp
   1400017f1:	mov    BYTE PTR [rdi+0x1de],bpl
   1400017f8:	call   0x14001e240
   1400017fd:	test   eax,eax
   1400017ff:	setne  bl
   140001802:	call   QWORD PTR [rip+0x30cb0]        # 0x1400324b8
   140001808:	lea    rdx,[rip+0x318e5]        # 0x1400330f4
   14000180f:	mov    rcx,rax
   140001812:	mov    r8,QWORD PTR [rax]
   140001815:	call   QWORD PTR [r8+0x40]
   140001819:	test   eax,eax
   14000181b:	sete   bpl
   14000181f:	call   QWORD PTR [rip+0x30c93]        # 0x1400324b8
   140001825:	lea    rdx,[rip+0x318d0]        # 0x1400330fc
   14000182c:	mov    rcx,rax
   14000182f:	mov    r8,QWORD PTR [rax]
   140001832:	call   QWORD PTR [r8+0x40]
   140001836:	test   eax,eax
   140001838:	jne    0x14000183f
   14000183a:	test   bpl,bpl
   14000183d:	je     0x140001841
   14000183f:	xor    bl,bl
   140001841:	call   QWORD PTR [rip+0x30c71]        # 0x1400324b8
   140001847:	lea    rdx,[rip+0x318b2]        # 0x140033100
   14000184e:	mov    rcx,rax
   140001851:	mov    r8,QWORD PTR [rax]
   140001854:	call   QWORD PTR [r8+0x40]
   140001858:	test   eax,eax
   14000185a:	jne    0x14000187f
   14000185c:	call   QWORD PTR [rip+0x30c56]        # 0x1400324b8
   140001862:	lea    rdx,[rip+0x318a7]        # 0x140033110
   140001869:	mov    rcx,rax
   14000186c:	mov    r8,QWORD PTR [rax]
   14000186f:	call   QWORD PTR [r8+0x40]
   140001873:	test   eax,eax
   140001875:	jne    0x14000187f
   140001877:	test   bl,bl
   140001879:	je     0x14000192b
   14000187f:	mov    rcx,QWORD PTR [rdi+0xe8]
   140001886:	lea    rdx,[rip+0x3185f]        # 0x1400330ec
   14000188d:	xor    r8d,r8d
   140001890:	call   0x14001e240
   140001895:	test   eax,eax
   140001897:	setne  al
   14000189a:	test   sil,sil
   14000189d:	je     0x1400018bd
   14000189f:	test   al,al
   1400018a1:	jne    0x1400018bd
   1400018a3:	call   QWORD PTR [rip+0x30c0f]        # 0x1400324b8
   1400018a9:	xor    r8d,r8d
   1400018ac:	lea    rdx,[rip+0x3186d]        # 0x140033120
   1400018b3:	mov    rcx,rax
   1400018b6:	mov    r9,QWORD PTR [rax]
   1400018b9:	call   QWORD PTR [r9+0x30]
   1400018bd:	xor    r9d,r9d
   1400018c0:	lea    r8,[rip+0x31869]        # 0x140033130
   1400018c7:	lea    rdx,[rip+0x31872]        # 0x140033140
   1400018ce:	mov    rcx,rdi
   1400018d1:	call   0x140008980
   1400018d6:	mov    rbx,rax
   1400018d9:	test   rax,rax
   1400018dc:	jne    0x1400018f4
   1400018de:	lea    rdx,[rip+0x3184b]        # 0x140033130
   1400018e5:	lea    rcx,[rip+0x31864]        # 0x140033150
   1400018ec:	call   QWORD PTR [rip+0x30abe]        # 0x1400323b0
   1400018f2:	jmp    0x14000192b
   1400018f4:	test   sil,sil
   1400018f7:	je     0x14000191d
   1400018f9:	test   r14b,r14b
   1400018fc:	jne    0x14000191d
   1400018fe:	call   QWORD PTR [rip+0x30bb4]        # 0x1400324b8
   140001904:	lea    rdx,[rip+0x317f5]        # 0x140033100
   14000190b:	mov    rcx,rax
   14000190e:	mov    r8,QWORD PTR [rax]
   140001911:	call   QWORD PTR [r8+0x40]
   140001915:	test   eax,eax
   140001917:	je     0x14000191d
   140001919:	mov    dl,0x1
   14000191b:	jmp    0x14000191f
   14000191d:	xor    edx,edx
   14000191f:	mov    rax,QWORD PTR [rbx]
   140001922:	mov    rcx,rbx
   140001925:	call   QWORD PTR [rax+0xa8]
   14000192b:	mov    rbx,QWORD PTR [rsp+0x50]
   140001930:	mov    rax,rdi
   140001933:	mov    rdi,QWORD PTR [rsp+0x68]
   140001938:	mov    rbp,QWORD PTR [rsp+0x58]
   14000193d:	mov    rsi,QWORD PTR [rsp+0x60]
   140001942:	add    rsp,0x40
   140001946:	pop    r14
   140001948:	ret    
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	mov    QWORD PTR [rsp+0x18],rbx
   140001955:	push   rbp
   140001956:	sub    rsp,0x20
   14000195a:	lea    rax,[rip+0x3174f]        # 0x1400330b0
   140001961:	xor    ebp,ebp
   140001963:	mov    QWORD PTR [rcx],rax
   140001966:	mov    rbx,rcx
   140001969:	cmp    QWORD PTR [rip+0x45858],rbp        # 0x1400471c8
   140001970:	je     0x1400019e0
   140001972:	mov    QWORD PTR [rsp+0x38],rdi
   140001977:	movsxd rdi,DWORD PTR [rcx+0x1c0]
   14000197e:	test   edi,edi
   140001980:	jle    0x1400019db
   140001982:	mov    edx,edi
   140001984:	mov    QWORD PTR [rsp+0x30],rsi
   140001989:	lea    rcx,[rip+0x317f8]        # 0x140033188
   140001990:	call   QWORD PTR [rip+0x30a22]        # 0x1400323b8
   140001996:	mov    rsi,rdi
   140001999:	mov    edi,ebp
   14000199b:	test   rsi,rsi
   14000199e:	jle    0x1400019c3
   1400019a0:	mov    rcx,QWORD PTR [rip+0x45821]        # 0x1400471c8
   1400019a7:	mov    rdx,QWORD PTR [rbx+0x1c8]
   1400019ae:	mov    rax,QWORD PTR [rcx]
   1400019b1:	mov    rdx,QWORD PTR [rdx+rdi*8]
   1400019b5:	call   QWORD PTR [rax+0xd8]
   1400019bb:	inc    rdi
   1400019be:	cmp    rdi,rsi
   1400019c1:	jl     0x1400019a0
   1400019c3:	mov    rcx,QWORD PTR [rip+0x457fe]        # 0x1400471c8
   1400019ca:	mov    rax,QWORD PTR [rcx]
   1400019cd:	call   QWORD PTR [rax+0x70]
   1400019d0:	mov    rsi,QWORD PTR [rsp+0x30]
   1400019d5:	mov    DWORD PTR [rbx+0x1c0],ebp
   1400019db:	mov    rdi,QWORD PTR [rsp+0x38]
   1400019e0:	cmp    BYTE PTR [rbx+0x208],bpl
   1400019e7:	je     0x140001a09
   1400019e9:	mov    edx,DWORD PTR [rbx+0x20c]
   1400019ef:	lea    rcx,[rbx+0x210]
   1400019f6:	mov    rax,QWORD PTR [rcx]
   1400019f9:	call   QWORD PTR [rax+0x28]
   1400019fc:	mov    BYTE PTR [rbx+0x208],bpl
   140001a03:	call   QWORD PTR [rip+0x30a7f]        # 0x140032488
   140001a09:	cmp    BYTE PTR [rbx+0x1de],bpl
   140001a10:	je     0x140001a1e
   140001a12:	call   0x140024f60
   140001a17:	mov    BYTE PTR [rbx+0x1de],bpl
   140001a1e:	lea    rcx,[rbx+0x210]
   140001a25:	call   0x140025a70
   140001a2a:	lea    rcx,[rbx+0x200]
   140001a31:	cmp    QWORD PTR [rcx],rbp
   140001a34:	je     0x140001a3b
   140001a36:	call   0x14001b030
   140001a3b:	lea    rcx,[rbx+0x1f8]
   140001a42:	cmp    QWORD PTR [rcx],rbp
   140001a45:	je     0x140001a4c
   140001a47:	call   0x14001b030
   140001a4c:	lea    rcx,[rbx+0x1e8]
   140001a53:	cmp    QWORD PTR [rcx],rbp
   140001a56:	je     0x140001a5d
   140001a58:	call   0x14001b030
   140001a5d:	mov    DWORD PTR [rbx+0x1c0],ebp
   140001a63:	test   DWORD PTR [rbx+0x1d4],0xc0000000
   140001a6d:	jne    0x140001acd
   140001a6f:	mov    rdx,QWORD PTR [rbx+0x1c8]
   140001a76:	test   rdx,rdx
   140001a79:	je     0x140001a92
   140001a7b:	mov    rax,QWORD PTR [rip+0x3090e]        # 0x140032390
   140001a82:	mov    rcx,QWORD PTR [rax]
   140001a85:	mov    rax,QWORD PTR [rcx]
   140001a88:	call   QWORD PTR [rax+0x28]
   140001a8b:	mov    QWORD PTR [rbx+0x1c8],rbp
   140001a92:	mov    DWORD PTR [rbx+0x1d0],ebp
   140001a98:	test   DWORD PTR [rbx+0x1d4],0xc0000000
   140001aa2:	jne    0x140001acd
   140001aa4:	mov    rdx,QWORD PTR [rbx+0x1c8]
   140001aab:	test   rdx,rdx
   140001aae:	je     0x140001ac7
   140001ab0:	mov    rax,QWORD PTR [rip+0x308d9]        # 0x140032390
   140001ab7:	mov    rcx,QWORD PTR [rax]
   140001aba:	mov    rax,QWORD PTR [rcx]
   140001abd:	call   QWORD PTR [rax+0x28]
   140001ac0:	mov    QWORD PTR [rbx+0x1c8],rbp
   140001ac7:	mov    DWORD PTR [rbx+0x1d0],ebp
   140001acd:	lea    rcx,[rbx+0x168]
   140001ad4:	call   0x14001c950
   140001ad9:	mov    DWORD PTR [rbx+0x150],ebp
   140001adf:	test   DWORD PTR [rbx+0x164],0xc0000000
   140001ae9:	jne    0x140001b49
   140001aeb:	mov    rdx,QWORD PTR [rbx+0x158]
   140001af2:	test   rdx,rdx
   140001af5:	je     0x140001b0e
   140001af7:	mov    rax,QWORD PTR [rip+0x30892]        # 0x140032390
   140001afe:	mov    rcx,QWORD PTR [rax]
   140001b01:	mov    rax,QWORD PTR [rcx]
   140001b04:	call   QWORD PTR [rax+0x28]
   140001b07:	mov    QWORD PTR [rbx+0x158],rbp
   140001b0e:	mov    DWORD PTR [rbx+0x160],ebp
   140001b14:	test   DWORD PTR [rbx+0x164],0xc0000000
   140001b1e:	jne    0x140001b49
   140001b20:	mov    rdx,QWORD PTR [rbx+0x158]
   140001b27:	test   rdx,rdx
   140001b2a:	je     0x140001b43
   140001b2c:	mov    rax,QWORD PTR [rip+0x3085d]        # 0x140032390
   140001b33:	mov    rcx,QWORD PTR [rax]
   140001b36:	mov    rax,QWORD PTR [rcx]
   140001b39:	call   QWORD PTR [rax+0x28]
   140001b3c:	mov    QWORD PTR [rbx+0x158],rbp
   140001b43:	mov    DWORD PTR [rbx+0x160],ebp
   140001b49:	mov    rcx,rbx
   140001b4c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b51:	add    rsp,0x20
   140001b55:	pop    rbp
   140001b56:	jmp    0x140008080
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	rex push rbx
   140001b62:	sub    rsp,0x20
   140001b66:	lea    rax,[rip+0x30c63]        # 0x1400327d0
   140001b6d:	mov    rbx,rcx
   140001b70:	mov    QWORD PTR [rcx],rax
   140001b73:	test   dl,0x1
   140001b76:	je     0x140001b82
   140001b78:	mov    edx,0x10
   140001b7d:	call   0x14002639c
   140001b82:	mov    rax,rbx
   140001b85:	add    rsp,0x20
   140001b89:	pop    rbx
   140001b8a:	ret    
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	mov    QWORD PTR [rsp+0x8],rbx
   140001b95:	push   rdi
   140001b96:	sub    rsp,0x20
   140001b9a:	mov    ebx,edx
   140001b9c:	mov    rdi,rcx
   140001b9f:	call   0x140001950
   140001ba4:	test   bl,0x1
   140001ba7:	je     0x140001bb6
   140001ba9:	mov    edx,0x6a0
   140001bae:	mov    rcx,rdi
   140001bb1:	call   0x14002639c
   140001bb6:	mov    rax,rdi
   140001bb9:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bbe:	add    rsp,0x20
   140001bc2:	pop    rdi
   140001bc3:	ret    
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	rex push rbx
   140001bd2:	sub    rsp,0x20
   140001bd6:	lea    rax,[rip+0x30bf3]        # 0x1400327d0
   140001bdd:	mov    rbx,rcx
   140001be0:	mov    QWORD PTR [rcx],rax
   140001be3:	test   dl,0x1
   140001be6:	je     0x140001bf2
   140001be8:	mov    edx,0x18
   140001bed:	call   0x14002639c
   140001bf2:	mov    rax,rbx
   140001bf5:	add    rsp,0x20
   140001bf9:	pop    rbx
   140001bfa:	ret    
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	rex push rbx
   140001c02:	sub    rsp,0x20
   140001c06:	lea    rax,[rip+0x30bc3]        # 0x1400327d0
   140001c0d:	mov    rbx,rcx
   140001c10:	mov    QWORD PTR [rcx],rax
   140001c13:	test   dl,0x1
   140001c16:	je     0x140001c22
   140001c18:	mov    edx,0x8
   140001c1d:	call   0x14002639c
   140001c22:	mov    rax,rbx
   140001c25:	add    rsp,0x20
   140001c29:	pop    rbx
   140001c2a:	ret    
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c34:	xor    r9d,r9d
   140001c37:	jmp    0x140008490
   140001c3c:	int3   
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c44:	jmp    0x140008720
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	int3   
   140001c4d:	int3   
   140001c4e:	int3   
   140001c4f:	int3   
   140001c50:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c54:	xor    r9d,r9d
   140001c57:	jmp    0x140008980
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	rex push rbx
   140001c62:	sub    rsp,0x20
   140001c66:	mov    rax,QWORD PTR [rcx+0x8]
   140001c6a:	mov    rbx,rcx
   140001c6d:	inc    DWORD PTR [rax+0x13c]
   140001c73:	mov    rax,QWORD PTR [rcx]
   140001c76:	call   QWORD PTR [rax+0x68]
   140001c79:	mov    rcx,QWORD PTR [rbx+0x8]
   140001c7d:	dec    DWORD PTR [rcx+0x13c]
   140001c83:	add    rsp,0x20
   140001c87:	pop    rbx
   140001c88:	ret    
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c94:	jmp    0x140008c40
   140001c99:	int3   
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	mov    rcx,QWORD PTR [rcx+0x8]
   140001ca4:	mov    rax,QWORD PTR [rcx]
   140001ca7:	rex.W jmp QWORD PTR [rax+0x18]
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	rex push rbx
   140001cb2:	sub    rsp,0x30
   140001cb6:	mov    rbx,rcx
   140001cb9:	add    rcx,0x200
   140001cc0:	call   0x14001aae0
   140001cc5:	cmp    DWORD PTR [rbx+0x20c],0xffffffff
   140001ccc:	je     0x140001d20
   140001cce:	mov    rax,QWORD PTR [rbx]
   140001cd1:	lea    rdx,[rsp+0x40]
   140001cd6:	mov    rcx,rbx
   140001cd9:	call   QWORD PTR [rax+0x10]
   140001cdc:	mov    rcx,rax
   140001cdf:	call   0x14001b050
   140001ce4:	lea    rdx,[rip+0x314f9]        # 0x1400331e4
   140001ceb:	mov    r8,rax
   140001cee:	lea    rcx,[rbx+0x210]
   140001cf5:	mov    QWORD PTR [rsp+0x20],rdx
   140001cfa:	mov    r10,QWORD PTR [rcx]
   140001cfd:	lea    r9,[rip+0x3150c]        # 0x140033210
   140001d04:	mov    edx,DWORD PTR [rbx+0x20c]
   140001d0a:	call   QWORD PTR [r10+0x50]
   140001d0e:	cmp    QWORD PTR [rsp+0x40],0x0
   140001d14:	je     0x140001d20
   140001d16:	lea    rcx,[rsp+0x40]
   140001d1b:	call   0x14001b030
   140001d20:	add    rsp,0x30
   140001d24:	pop    rbx
   140001d25:	ret    
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rsp+0x10],rdx
   140001d35:	sub    rsp,0x28
   140001d39:	mov    edx,0x1
   140001d3e:	lea    rcx,[rsp+0x38]
   140001d43:	call   0x14001c7e0
   140001d48:	mov    al,0x1
   140001d4a:	add    rsp,0x28
   140001d4e:	ret    
   140001d4f:	int3   
   140001d50:	mov    QWORD PTR [rsp+0x10],rdx
   140001d55:	push   rbx
   140001d56:	sub    rsp,0x20
   140001d5a:	mov    rbx,rcx
   140001d5d:	mov    QWORD PTR [rsp+0x40],rdx
   140001d62:	mov    edx,0x1
   140001d67:	lea    rcx,[rsp+0x40]
   140001d6c:	call   0x14001c7e0
   140001d71:	mov    edx,0x1
   140001d76:	lea    rcx,[rsp+0x38]
   140001d7b:	call   0x140024f20
   140001d80:	inc    DWORD PTR [rbx+0x10]
   140001d83:	mov    al,0x1
   140001d85:	add    rsp,0x20
   140001d89:	pop    rbx
   140001d8a:	ret    
   140001d8b:	int3   
   140001d8c:	int3   
   140001d8d:	int3   
   140001d8e:	int3   
   140001d8f:	int3   
   140001d90:	rex push rbx
   140001d92:	sub    rsp,0x20
   140001d96:	mov    rbx,rcx
   140001d99:	mov    ecx,0x18
   140001d9e:	call   0x140007bf0
   140001da3:	test   rax,rax
   140001da6:	je     0x140001dc3
   140001da8:	lea    rcx,[rip+0x31141]        # 0x140032ef0
   140001daf:	mov    QWORD PTR [rax+0x8],rbx
   140001db3:	mov    QWORD PTR [rax],rcx
   140001db6:	mov    DWORD PTR [rax+0x10],0x0
   140001dbd:	add    rsp,0x20
   140001dc1:	pop    rbx
   140001dc2:	ret    
   140001dc3:	add    rsp,0x20
   140001dc7:	pop    rbx
   140001dc8:	ret    
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	jmp    0x14001c800
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	rex push rbx
   140001de2:	sub    rsp,0x20
   140001de6:	cmp    DWORD PTR [rcx+0x10],0x0
   140001dea:	mov    rbx,rcx
   140001ded:	jle    0x140001dfe
   140001def:	nop
   140001df0:	call   0x140024f60
   140001df5:	dec    DWORD PTR [rbx+0x10]
   140001df8:	cmp    DWORD PTR [rbx+0x10],0x0
   140001dfc:	jg     0x140001df0
   140001dfe:	add    rsp,0x20
   140001e02:	pop    rbx
   140001e03:	jmp    0x14001c800
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    rcx,QWORD PTR [rcx+0x8]
   140001e14:	jmp    0x140009500
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x8],rbx
   140001e25:	mov    QWORD PTR [rsp+0x10],rsi
   140001e2a:	push   rdi
   140001e2b:	sub    rsp,0x30
   140001e2f:	mov    rsi,r8
   140001e32:	mov    rbx,rdx
   140001e35:	mov    rdi,rcx
   140001e38:	test   rdx,rdx
   140001e3b:	jne    0x140001e4f
   140001e3d:	xor    al,al
   140001e3f:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e44:	mov    rsi,QWORD PTR [rsp+0x48]
   140001e49:	add    rsp,0x30
   140001e4d:	pop    rdi
   140001e4e:	ret    
   140001e4f:	mov    dl,0x1
   140001e51:	call   0x140004d40
   140001e56:	mov    rdx,rsi
   140001e59:	mov    rcx,rdi
   140001e5c:	call   0x140003ef0
   140001e61:	mov    rax,QWORD PTR [rip+0x45320]        # 0x140047188
   140001e68:	test   rax,rax
   140001e6b:	je     0x140001e73
   140001e6d:	lea    rdx,[rax+0x8]
   140001e71:	jmp    0x140001e75
   140001e73:	xor    edx,edx
   140001e75:	lea    r9,[rip+0x31368]        # 0x1400331e4
   140001e7c:	mov    QWORD PTR [rsp+0x20],0x0
   140001e85:	lea    r8,[rip+0x31b8c]        # 0x140033a18
   140001e8c:	mov    rcx,rbx
   140001e8f:	call   0x14001f2c0
   140001e94:	mov    rdx,rsi
   140001e97:	mov    rcx,rdi
   140001e9a:	movzx  ebx,al
   140001e9d:	call   0x140006650
   140001ea2:	xor    edx,edx
   140001ea4:	mov    rcx,rdi
   140001ea7:	call   0x140004d40
   140001eac:	mov    rsi,QWORD PTR [rsp+0x48]
   140001eb1:	movzx  eax,bl
   140001eb4:	mov    rbx,QWORD PTR [rsp+0x40]
   140001eb9:	add    rsp,0x30
   140001ebd:	pop    rdi
   140001ebe:	ret    
   140001ebf:	int3   
   140001ec0:	mov    rcx,QWORD PTR [rcx+0x8]
   140001ec4:	jmp    0x140001e20
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ed5:	push   rdi
   140001ed6:	sub    rsp,0x130
   140001edd:	mov    rbx,QWORD PTR [rcx+0x8]
   140001ee1:	mov    rdi,rdx
   140001ee4:	lea    rdx,[rip+0x308d1]        # 0x1400327bc
   140001eeb:	lea    rcx,[rsp+0x20]
   140001ef0:	call   0x140001600
   140001ef5:	lea    r8,[rsp+0x29]
   140001efa:	mov    rdx,rdi
   140001efd:	mov    rcx,rbx
   140001f00:	call   0x140002db0
   140001f05:	mov    rbx,QWORD PTR [rsp+0x140]
   140001f0d:	mov    rax,rdi
   140001f10:	add    rsp,0x130
   140001f17:	pop    rdi
   140001f18:	ret    
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	mov    BYTE PTR [rdx],0x0
   140001f23:	xor    al,al
   140001f25:	ret    
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    QWORD PTR [rsp+0x10],rbx
   140001f35:	push   rdi
   140001f36:	sub    rsp,0x460
   140001f3d:	mov    rcx,QWORD PTR [rip+0x45244]        # 0x140047188
   140001f44:	lea    r9,[rsp+0x50]
   140001f49:	mov    ebx,r8d
   140001f4c:	mov    DWORD PTR [rsp+0x20],0x410
   140001f54:	mov    rdi,rdx
   140001f57:	xor    r8d,r8d
   140001f5a:	lea    rdx,[rip+0x31597]        # 0x1400334f8
   140001f61:	mov    rax,QWORD PTR [rcx]
   140001f64:	call   QWORD PTR [rax+0xc0]
   140001f6a:	test   eax,eax
   140001f6c:	jne    0x140001f8e
   140001f6e:	lea    rcx,[rip+0x31a4b]        # 0x1400339c0
   140001f75:	call   QWORD PTR [rip+0x30435]        # 0x1400323b0
   140001f7b:	xor    al,al
   140001f7d:	mov    rbx,QWORD PTR [rsp+0x478]
   140001f85:	add    rsp,0x460
   140001f8c:	pop    rdi
   140001f8d:	ret    
   140001f8e:	mov    QWORD PTR [rsp+0x470],rsi
   140001f96:	lea    r8,[rsp+0x30]
   140001f9b:	xor    esi,esi
   140001f9d:	lea    rdx,[rip+0x31898]        # 0x14003383c
   140001fa4:	lea    rcx,[rsp+0x50]
   140001fa9:	mov    DWORD PTR [rsp+0x30],esi
   140001fad:	mov    QWORD PTR [rsp+0x38],rsi
   140001fb2:	mov    QWORD PTR [rsp+0x40],rsi
   140001fb7:	call   QWORD PTR [rip+0x30613]        # 0x1400325d0
   140001fbd:	mov    rdx,QWORD PTR [rsp+0x38]
   140001fc2:	mov    r8d,ebx
   140001fc5:	mov    rcx,rdi
   140001fc8:	mov    rdx,QWORD PTR [rdx]
   140001fcb:	call   QWORD PTR [rip+0x30587]        # 0x140032558
   140001fd1:	mov    eax,DWORD PTR [rsp+0x44]
   140001fd5:	mov    rdx,QWORD PTR [rsp+0x38]
   140001fda:	mov    DWORD PTR [rsp+0x30],esi
   140001fde:	test   eax,0xc0000000
   140001fe3:	jne    0x140002009
   140001fe5:	test   rdx,rdx
   140001fe8:	je     0x140002005
   140001fea:	mov    rax,QWORD PTR [rip+0x3039f]        # 0x140032390
   140001ff1:	mov    rcx,QWORD PTR [rax]
   140001ff4:	mov    rax,QWORD PTR [rcx]
   140001ff7:	call   QWORD PTR [rax+0x28]
   140001ffa:	mov    eax,DWORD PTR [rsp+0x44]
   140001ffe:	mov    edx,esi
   140002000:	mov    QWORD PTR [rsp+0x38],rdx
   140002005:	mov    DWORD PTR [rsp+0x40],esi
   140002009:	mov    rsi,QWORD PTR [rsp+0x470]
   140002011:	test   eax,0xc0000000
   140002016:	jne    0x14000202d
   140002018:	test   rdx,rdx
   14000201b:	je     0x14000202d
   14000201d:	mov    rax,QWORD PTR [rip+0x3036c]        # 0x140032390
   140002024:	mov    rcx,QWORD PTR [rax]
   140002027:	mov    rax,QWORD PTR [rcx]
   14000202a:	call   QWORD PTR [rax+0x28]
   14000202d:	mov    al,0x1
   14000202f:	mov    rbx,QWORD PTR [rsp+0x478]
   140002037:	add    rsp,0x460
   14000203e:	pop    rdi
   14000203f:	ret    
   140002040:	mov    rcx,QWORD PTR [rcx+0x8]
   140002044:	jmp    0x140001f30
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	mov    QWORD PTR [rsp+0x10],rbx
   140002055:	push   rdi
   140002056:	sub    rsp,0x460
   14000205d:	mov    rcx,QWORD PTR [rip+0x45124]        # 0x140047188
   140002064:	lea    r9,[rsp+0x50]
   140002069:	mov    ebx,r8d
   14000206c:	mov    DWORD PTR [rsp+0x20],0x410
   140002074:	mov    rdi,rdx
   140002077:	xor    r8d,r8d
   14000207a:	lea    rdx,[rip+0x3146b]        # 0x1400334ec
   140002081:	mov    rax,QWORD PTR [rcx]
   140002084:	call   QWORD PTR [rax+0xc0]
   14000208a:	test   eax,eax
   14000208c:	jne    0x1400020ae
   14000208e:	lea    rcx,[rip+0x318f3]        # 0x140033988
   140002095:	call   QWORD PTR [rip+0x30315]        # 0x1400323b0
   14000209b:	xor    al,al
   14000209d:	mov    rbx,QWORD PTR [rsp+0x478]
   1400020a5:	add    rsp,0x460
   1400020ac:	pop    rdi
   1400020ad:	ret    
   1400020ae:	mov    QWORD PTR [rsp+0x470],rsi
   1400020b6:	lea    r8,[rsp+0x30]
   1400020bb:	xor    esi,esi
   1400020bd:	lea    rdx,[rip+0x31778]        # 0x14003383c
   1400020c4:	lea    rcx,[rsp+0x50]
   1400020c9:	mov    DWORD PTR [rsp+0x30],esi
   1400020cd:	mov    QWORD PTR [rsp+0x38],rsi
   1400020d2:	mov    QWORD PTR [rsp+0x40],rsi
   1400020d7:	call   QWORD PTR [rip+0x304f3]        # 0x1400325d0
   1400020dd:	mov    rdx,QWORD PTR [rsp+0x38]
   1400020e2:	mov    r8d,ebx
   1400020e5:	mov    rcx,rdi
   1400020e8:	mov    rdx,QWORD PTR [rdx]
   1400020eb:	call   QWORD PTR [rip+0x30467]        # 0x140032558
   1400020f1:	mov    eax,DWORD PTR [rsp+0x44]
   1400020f5:	mov    rdx,QWORD PTR [rsp+0x38]
   1400020fa:	mov    DWORD PTR [rsp+0x30],esi
   1400020fe:	test   eax,0xc0000000
   140002103:	jne    0x140002129
   140002105:	test   rdx,rdx
   140002108:	je     0x140002125
   14000210a:	mov    rax,QWORD PTR [rip+0x3027f]        # 0x140032390
   140002111:	mov    rcx,QWORD PTR [rax]
   140002114:	mov    rax,QWORD PTR [rcx]
   140002117:	call   QWORD PTR [rax+0x28]
   14000211a:	mov    eax,DWORD PTR [rsp+0x44]
   14000211e:	mov    edx,esi
   140002120:	mov    QWORD PTR [rsp+0x38],rdx
   140002125:	mov    DWORD PTR [rsp+0x40],esi
   140002129:	mov    rsi,QWORD PTR [rsp+0x470]
   140002131:	test   eax,0xc0000000
   140002136:	jne    0x14000214d
   140002138:	test   rdx,rdx
   14000213b:	je     0x14000214d
   14000213d:	mov    rax,QWORD PTR [rip+0x3024c]        # 0x140032390
   140002144:	mov    rcx,QWORD PTR [rax]
   140002147:	mov    rax,QWORD PTR [rcx]
   14000214a:	call   QWORD PTR [rax+0x28]
   14000214d:	mov    al,0x1
   14000214f:	mov    rbx,QWORD PTR [rsp+0x478]
   140002157:	add    rsp,0x460
   14000215e:	pop    rdi
   14000215f:	ret    
   140002160:	mov    rcx,QWORD PTR [rcx+0x8]
   140002164:	jmp    0x140002050
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	mov    rax,QWORD PTR [rcx+0x8]
   140002174:	mov    rax,QWORD PTR [rax+0xf0]
   14000217b:	ret    
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	mov    rax,QWORD PTR [rcx+0x8]
   140002184:	mov    rax,QWORD PTR [rax+0xe8]
   14000218b:	ret    
   14000218c:	int3   
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	test   rdx,rdx
   140002193:	je     0x140002240
   140002199:	mov    QWORD PTR [rsp+0x10],rbx
   14000219e:	mov    QWORD PTR [rsp+0x18],rsi
   1400021a3:	push   rdi
   1400021a4:	sub    rsp,0x20
   1400021a8:	mov    rdi,r8
   1400021ab:	mov    rsi,rdx
   1400021ae:	mov    rbx,rcx
   1400021b1:	test   r8,r8
   1400021b4:	je     0x140002231
   1400021b6:	mov    rcx,rdx
   1400021b9:	call   0x140004a60
   1400021be:	mov    dl,0x1
   1400021c0:	mov    rcx,rbx
   1400021c3:	call   0x140004d40
   1400021c8:	mov    rdx,rdi
   1400021cb:	mov    rcx,rbx
   1400021ce:	call   0x140003ef0
   1400021d3:	mov    ecx,0x14
   1400021d8:	call   0x14001dc70
   1400021dd:	test   rax,rax
   1400021e0:	je     0x14000221c
   1400021e2:	lea    rdx,[rip+0x3186f]        # 0x140033a58
   1400021e9:	mov    QWORD PTR [rsp+0x30],rbp
   1400021ee:	mov    rcx,rax
   1400021f1:	call   0x14001dbb0
   1400021f6:	mov    rbp,rax
   1400021f9:	test   rax,rax
   1400021fc:	je     0x140002217
   1400021fe:	mov    r9,rsi
   140002201:	mov    r8,rdi
   140002204:	mov    rdx,rax
   140002207:	mov    rcx,rbx
   14000220a:	call   0x140002260
   14000220f:	mov    rcx,rbp
   140002212:	call   0x140020790
   140002217:	mov    rbp,QWORD PTR [rsp+0x30]
   14000221c:	mov    rdx,rdi
   14000221f:	mov    rcx,rbx
   140002222:	call   0x140006650
   140002227:	xor    edx,edx
   140002229:	mov    rcx,rbx
   14000222c:	call   0x140004d40
   140002231:	mov    rbx,QWORD PTR [rsp+0x38]
   140002236:	mov    rsi,QWORD PTR [rsp+0x40]
   14000223b:	add    rsp,0x20
   14000223f:	pop    rdi
   140002240:	ret    
   140002241:	int3   
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	mov    rcx,QWORD PTR [rcx+0x8]
   140002254:	jmp    0x140002190
   140002259:	int3   
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	int3   
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	mov    QWORD PTR [rsp+0x8],rbx
   140002265:	mov    QWORD PTR [rsp+0x10],rsi
   14000226a:	mov    QWORD PTR [rsp+0x20],rdi
   14000226f:	mov    QWORD PTR [rsp+0x18],r8
   140002274:	push   rbp
   140002275:	push   r12
   140002277:	push   r13
   140002279:	push   r14
   14000227b:	push   r15
   14000227d:	lea    rbp,[rsp-0x5e0]
   140002285:	sub    rsp,0x6e0
   14000228c:	mov    rbx,r9
   14000228f:	mov    rdi,rdx
   140002292:	call   0x140001e20
   140002297:	xor    r13d,r13d
   14000229a:	lea    rdx,[rip+0x317d3]        # 0x140033a74
   1400022a1:	xor    r9d,r9d
   1400022a4:	mov    QWORD PTR [rsp+0x20],r13
   1400022a9:	xor    r8d,r8d
   1400022ac:	mov    rcx,rdi
   1400022af:	call   0x14001e360
   1400022b4:	mov    DWORD PTR [rsp+0x48],r13d
   1400022b9:	mov    QWORD PTR [rsp+0x50],r13
   1400022be:	mov    QWORD PTR [rsp+0x58],r13
   1400022c3:	test   rax,rax
   1400022c6:	je     0x1400023ba
   1400022cc:	lea    r8,[rsp+0x48]
   1400022d1:	mov    rcx,rax
   1400022d4:	lea    rdx,[rip+0x30c09]        # 0x140032ee4
   1400022db:	call   QWORD PTR [rip+0x302ef]        # 0x1400325d0
   1400022e1:	mov    esi,r13d
   1400022e4:	cmp    DWORD PTR [rsp+0x48],r13d
   1400022e9:	jle    0x140002362
   1400022eb:	mov    r14d,r13d
   1400022ee:	lea    r12d,[r13+0x1]
   1400022f2:	mov    rax,QWORD PTR [rsp+0x50]
   1400022f7:	lea    rcx,[rsp+0x40]
   1400022fc:	mov    rdx,QWORD PTR [r14+rax*1]
   140002300:	mov    QWORD PTR [rsp+0x40],r13
   140002305:	call   0x14001b3a0
   14000230a:	movsxd rdi,DWORD PTR [rbx]
   14000230d:	cmp    edi,DWORD PTR [rbx+0x10]
   140002310:	jne    0x14000231e
   140002312:	mov    edx,r12d
   140002315:	lea    rcx,[rbx+0x8]
   140002319:	call   0x140013420
   14000231e:	mov    rax,QWORD PTR [rbx+0x8]
   140002322:	inc    DWORD PTR [rbx]
   140002324:	lea    rdi,[rax+rdi*8]
   140002328:	test   rdi,rdi
   14000232b:	je     0x140002345
   14000232d:	lea    rcx,[rsp+0x40]
   140002332:	mov    QWORD PTR [rdi],r13
   140002335:	call   0x14001b050
   14000233a:	mov    rdx,rax
   14000233d:	mov    rcx,rdi
   140002340:	call   0x14001b3a0
   140002345:	cmp    QWORD PTR [rsp+0x40],r13
   14000234a:	je     0x140002356
   14000234c:	lea    rcx,[rsp+0x40]
   140002351:	call   0x14001b030
   140002356:	inc    esi
   140002358:	add    r14,0x8
   14000235c:	cmp    esi,DWORD PTR [rsp+0x48]
   140002360:	jl     0x1400022f2
   140002362:	mov    eax,DWORD PTR [rsp+0x5c]
   140002366:	mov    rdx,QWORD PTR [rsp+0x50]
   14000236b:	mov    DWORD PTR [rsp+0x48],r13d
   140002370:	test   eax,0xc0000000
   140002375:	jne    0x1400026ea
   14000237b:	test   rdx,rdx
   14000237e:	je     0x14000239c
   140002380:	mov    rax,QWORD PTR [rip+0x30009]        # 0x140032390
   140002387:	mov    rcx,QWORD PTR [rax]
   14000238a:	mov    rax,QWORD PTR [rcx]
   14000238d:	call   QWORD PTR [rax+0x28]
   140002390:	mov    eax,DWORD PTR [rsp+0x5c]
   140002394:	mov    rdx,r13
   140002397:	mov    QWORD PTR [rsp+0x50],rdx
   14000239c:	mov    DWORD PTR [rsp+0x58],r13d
   1400023a1:	test   eax,0xc0000000
   1400023a6:	jne    0x1400026ea
   1400023ac:	test   rdx,rdx
   1400023af:	je     0x1400026ea
   1400023b5:	jmp    0x1400026da
   1400023ba:	mov    rcx,QWORD PTR [rip+0x44dc7]        # 0x140047188
   1400023c1:	lea    r9,[rsp+0x68]
   1400023c6:	mov    rdx,QWORD PTR [rip+0x43c33]        # 0x140046000
   1400023cd:	lea    r8,[rip+0x30e10]        # 0x1400331e4
   1400023d4:	xorps  xmm0,xmm0
   1400023d7:	mov    QWORD PTR [rsp+0x78],r13
   1400023dc:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   1400023e2:	mov    rax,QWORD PTR [rcx]
   1400023e5:	xor    edi,edi
   1400023e7:	mov    esi,r13d
   1400023ea:	mov    DWORD PTR [rsp+0x40],edi
   1400023ee:	mov    r15,r13
   1400023f1:	call   QWORD PTR [rax+0x150]
   1400023f7:	lea    r12d,[rdi+0x1]
   1400023fb:	mov    r14,rax
   1400023fe:	test   rax,rax
   140002401:	je     0x1400025ea
   140002407:	mov    rcx,r14
   14000240a:	call   QWORD PTR [rip+0x300e0]        # 0x1400324f0
   140002410:	mov    rcx,rax
   140002413:	lea    rdx,[rip+0x3141e]        # 0x140033838
   14000241a:	call   QWORD PTR [rip+0x30140]        # 0x140032560
   140002420:	test   eax,eax
   140002422:	jne    0x1400025bc
   140002428:	mov    r9d,0x103
   14000242e:	lea    r8,[rbp+0x1a0]
   140002435:	mov    rdx,r14
   140002438:	lea    rcx,[rip+0x3163d]        # 0x140033a7c
   14000243f:	call   QWORD PTR [rip+0x300bb]        # 0x140032500
   140002445:	mov    rcx,QWORD PTR [rip+0x44d3c]        # 0x140047188
   14000244c:	lea    r9,[rbp-0x80]
   140002450:	xor    edx,edx
   140002452:	lea    r8,[rip+0x30d8b]        # 0x1400331e4
   140002459:	mov    QWORD PTR [rsp+0x30],rdx
   14000245e:	xor    dil,dil
   140002461:	mov    DWORD PTR [rsp+0x28],edx
   140002465:	lea    rdx,[rbp+0x1a0]
   14000246c:	mov    rax,QWORD PTR [rcx]
   14000246f:	mov    DWORD PTR [rsp+0x20],0x104
   140002477:	call   QWORD PTR [rax+0xb8]
   14000247d:	lea    r9,[rbp+0x2b0]
   140002484:	mov    DWORD PTR [rsp+0x28],0x104
   14000248c:	xor    r8d,r8d
   14000248f:	mov    QWORD PTR [rsp+0x20],0x0
   140002498:	lea    rdx,[rip+0x30ef1]        # 0x140033390
   14000249f:	lea    rcx,[rbp-0x80]
   1400024a3:	call   0x1400255b0
   1400024a8:	test   al,al
   1400024aa:	je     0x1400024df
   1400024ac:	mov    r9d,0x104
   1400024b2:	lea    rax,[rbp+0x2b0]
   1400024b9:	mov    edx,r9d
   1400024bc:	mov    QWORD PTR [rsp+0x20],rax
   1400024c1:	lea    r8,[rbp+0x3c0]
   1400024c8:	lea    rcx,[rbp+0x4d0]
   1400024cf:	call   0x140025370
   1400024d4:	cmp    BYTE PTR [rbp+0x3c0],dil
   1400024db:	setne  dil
   1400024df:	mov    rcx,QWORD PTR [rbp+0x620]
   1400024e6:	call   QWORD PTR [rip+0x3001c]        # 0x140032508
   1400024ec:	test   rax,rax
   1400024ef:	je     0x14000250d
   1400024f1:	test   dil,dil
   1400024f4:	jne    0x14000250d
   1400024f6:	mov    rdx,rax
   1400024f9:	lea    rcx,[rbp-0x80]
   1400024fd:	call   0x1400273a8
   140002502:	test   rax,rax
   140002505:	movzx  edi,dil
   140002509:	cmovne edi,r12d
   14000250d:	mov    r8d,0x104
   140002513:	lea    rdx,[rbp+0x90]
   14000251a:	mov    rcx,r14
   14000251d:	call   QWORD PTR [rip+0x2fffd]        # 0x140032520
   140002523:	xor    r14d,r14d
   140002526:	lea    rdx,[rbp+0x90]
   14000252d:	lea    rcx,[rsp+0x40]
   140002532:	mov    QWORD PTR [rsp+0x40],r14
   140002537:	call   0x14001b3a0
   14000253c:	test   dil,dil
   14000253f:	je     0x140002561
   140002541:	movsxd rdi,DWORD PTR [rbx]
   140002544:	cmp    edi,DWORD PTR [rbx+0x10]
   140002547:	jne    0x140002555
   140002549:	lea    rcx,[rbx+0x8]
   14000254d:	mov    edx,r12d
   140002550:	call   0x140013420
   140002555:	mov    rax,QWORD PTR [rbx+0x8]
   140002559:	inc    DWORD PTR [rbx]
   14000255b:	lea    rdi,[rax+rdi*8]
   14000255f:	jmp    0x14000258e
   140002561:	movsxd rdi,esi
   140002564:	cmp    esi,r13d
   140002567:	jne    0x140002584
   140002569:	mov    edx,r12d
   14000256c:	lea    rcx,[rsp+0x50]
   140002571:	call   0x140013420
   140002576:	mov    r13d,DWORD PTR [rsp+0x58]
   14000257b:	mov    r15,QWORD PTR [rsp+0x50]
   140002580:	mov    esi,DWORD PTR [rsp+0x48]
   140002584:	inc    esi
   140002586:	lea    rdi,[r15+rdi*8]
   14000258a:	mov    DWORD PTR [rsp+0x48],esi
   14000258e:	test   rdi,rdi
   140002591:	je     0x1400025ab
   140002593:	lea    rcx,[rsp+0x40]
   140002598:	mov    QWORD PTR [rdi],r14
   14000259b:	call   0x14001b050
   1400025a0:	mov    rdx,rax
   1400025a3:	mov    rcx,rdi
   1400025a6:	call   0x14001b3a0
   1400025ab:	cmp    QWORD PTR [rsp+0x40],r14
   1400025b0:	je     0x1400025bc
   1400025b2:	lea    rcx,[rsp+0x40]
   1400025b7:	call   0x14001b030
   1400025bc:	mov    rcx,QWORD PTR [rip+0x44bc5]        # 0x140047188
   1400025c3:	lea    rdx,[rsp+0x68]
   1400025c8:	mov    rax,QWORD PTR [rcx]
   1400025cb:	call   QWORD PTR [rax+0x138]
   1400025d1:	mov    r14,rax
   1400025d4:	test   rax,rax
   1400025d7:	jne    0x140002407
   1400025dd:	mov    eax,DWORD PTR [rsp+0x5c]
   1400025e1:	mov    DWORD PTR [rsp+0x40],eax
   1400025e5:	mov    QWORD PTR [rsp+0x78],r15
   1400025ea:	cmp    DWORD PTR [rbx],0x0
   1400025ed:	jne    0x14000264c
   1400025ef:	lea    edi,[rsi-0x1]
   1400025f2:	test   edi,edi
   1400025f4:	js     0x14000264c
   1400025f6:	movsxd rax,edi
   1400025f9:	lea    r15,[r15+rax*8]
   1400025fd:	nop    DWORD PTR [rax]
   140002600:	movsxd r14,DWORD PTR [rbx]
   140002603:	cmp    r14d,DWORD PTR [rbx+0x10]
   140002607:	jne    0x140002615
   140002609:	mov    edx,r12d
   14000260c:	lea    rcx,[rbx+0x8]
   140002610:	call   0x140013420
   140002615:	mov    rax,QWORD PTR [rbx+0x8]
   140002619:	inc    DWORD PTR [rbx]
   14000261b:	lea    r14,[rax+r14*8]
   14000261f:	test   r14,r14
   140002622:	je     0x14000263e
   140002624:	mov    rcx,r15
   140002627:	mov    QWORD PTR [r14],0x0
   14000262e:	call   0x14001b050
   140002633:	mov    rdx,rax
   140002636:	mov    rcx,r14
   140002639:	call   0x14001b3a0
   14000263e:	sub    r15,0x8
   140002642:	sub    edi,r12d
   140002645:	jns    0x140002600
   140002647:	mov    r15,QWORD PTR [rsp+0x78]
   14000264c:	mov    rcx,QWORD PTR [rip+0x44b35]        # 0x140047188
   140002653:	lea    rdx,[rsp+0x68]
   140002658:	mov    rax,QWORD PTR [rcx]
   14000265b:	call   QWORD PTR [rax+0x148]
   140002661:	mov    rcx,QWORD PTR [rsp+0x68]
   140002666:	test   rcx,rcx
   140002669:	je     0x140002679
   14000266b:	mov    rax,QWORD PTR [rcx]
   14000266e:	lea    rdx,[rsp+0x68]
   140002673:	call   QWORD PTR [rax+0x148]
   140002679:	lea    eax,[rsi-0x1]
   14000267c:	xorps  xmm0,xmm0
   14000267f:	movsxd rdi,eax
   140002682:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   140002688:	test   eax,eax
   14000268a:	js     0x1400026a7
   14000268c:	lea    rbx,[r15+rdi*8]
   140002690:	cmp    QWORD PTR [rbx],0x0
   140002694:	je     0x14000269e
   140002696:	mov    rcx,rbx
   140002699:	call   0x14001b030
   14000269e:	sub    rbx,0x8
   1400026a2:	sub    rdi,r12
   1400026a5:	jns    0x140002690
   1400026a7:	mov    ebx,DWORD PTR [rsp+0x40]
   1400026ab:	and    ebx,0xc0000000
   1400026b1:	jne    0x1400026ce
   1400026b3:	test   r15,r15
   1400026b6:	je     0x1400026ce
   1400026b8:	mov    rax,QWORD PTR [rip+0x2fcd1]        # 0x140032390
   1400026bf:	mov    rdx,r15
   1400026c2:	mov    rcx,QWORD PTR [rax]
   1400026c5:	mov    rax,QWORD PTR [rcx]
   1400026c8:	call   QWORD PTR [rax+0x28]
   1400026cb:	xor    r15d,r15d
   1400026ce:	test   ebx,ebx
   1400026d0:	jne    0x1400026ea
   1400026d2:	test   r15,r15
   1400026d5:	je     0x1400026ea
   1400026d7:	mov    rdx,r15
   1400026da:	mov    rax,QWORD PTR [rip+0x2fcaf]        # 0x140032390
   1400026e1:	mov    rcx,QWORD PTR [rax]
   1400026e4:	mov    rax,QWORD PTR [rcx]
   1400026e7:	call   QWORD PTR [rax+0x28]
   1400026ea:	lea    r11,[rsp+0x6e0]
   1400026f2:	mov    rbx,QWORD PTR [r11+0x30]
   1400026f6:	mov    rsi,QWORD PTR [r11+0x38]
   1400026fa:	mov    rdi,QWORD PTR [r11+0x48]
   1400026fe:	mov    rsp,r11
   140002701:	pop    r15
   140002703:	pop    r14
   140002705:	pop    r13
   140002707:	pop    r12
   140002709:	pop    rbp
   14000270a:	ret    
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	test   rdx,rdx
   140002713:	je     0x140002bd7
   140002719:	mov    rax,rsp
   14000271c:	push   rbp
   14000271d:	push   rbx
   14000271e:	push   r12
   140002720:	lea    rbp,[rax-0x5d8]
   140002727:	sub    rsp,0x6c0
   14000272e:	mov    QWORD PTR [rax-0x20],rdi
   140002732:	mov    rcx,rdx
   140002735:	mov    QWORD PTR [rax-0x38],r15
   140002739:	mov    r12d,r8d
   14000273c:	mov    rbx,rdx
   14000273f:	call   0x140004a60
   140002744:	mov    rcx,QWORD PTR [rip+0x44a3d]        # 0x140047188
   14000274b:	lea    r9,[rbp+0x190]
   140002752:	xor    r8d,r8d
   140002755:	mov    DWORD PTR [rsp+0x20],0x410
   14000275d:	lea    rdx,[rip+0x30d88]        # 0x1400334ec
   140002764:	mov    rax,QWORD PTR [rcx]
   140002767:	call   QWORD PTR [rax+0xc0]
   14000276d:	xor    edi,edi
   14000276f:	lea    r8,[rsp+0x30]
   140002774:	lea    rdx,[rip+0x310c1]        # 0x14003383c
   14000277b:	mov    DWORD PTR [rsp+0x30],edi
   14000277f:	lea    rcx,[rbp+0x190]
   140002786:	mov    QWORD PTR [rsp+0x38],rdi
   14000278b:	mov    QWORD PTR [rsp+0x40],rdi
   140002790:	call   QWORD PTR [rip+0x2fe3a]        # 0x1400325d0
   140002796:	mov    r15d,edi
   140002799:	mov    rdx,QWORD PTR [rsp+0x38]
   14000279e:	cmp    DWORD PTR [rsp+0x30],edi
   1400027a2:	jle    0x140002b6c
   1400027a8:	mov    QWORD PTR [rsp+0x6e0],rsi
   1400027b0:	lea    rax,[rip+0x31251]        # 0x140033a08
   1400027b7:	mov    QWORD PTR [rsp+0x6b0],r13
   1400027bf:	mov    r13d,r12d
   1400027c2:	and    r13d,0x2
   1400027c6:	mov    QWORD PTR [rsp+0x6a8],r14
   1400027ce:	and    r12d,0x1
   1400027d2:	mov    r14d,edi
   1400027d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400027e0:	mov    rsi,QWORD PTR [r14+rdx*1]
   1400027e4:	test   r13d,r13d
   1400027e7:	je     0x14000299d
   1400027ed:	mov    r9d,0x104
   1400027f3:	lea    r8,[rsp+0x70]
   1400027f8:	mov    rdx,rax
   1400027fb:	mov    rcx,rsi
   1400027fe:	call   QWORD PTR [rip+0x2fcfc]        # 0x140032500
   140002804:	mov    r9d,0x104
   14000280a:	lea    r8,[rsp+0x70]
   14000280f:	lea    rdx,[rip+0x311fa]        # 0x140033a10
   140002816:	lea    rcx,[rsp+0x70]
   14000281b:	call   QWORD PTR [rip+0x2fcdf]        # 0x140032500
   140002821:	mov    rcx,QWORD PTR [rip+0x44960]        # 0x140047188
   140002828:	lea    r8,[rsp+0x60]
   14000282d:	xorps  xmm0,xmm0
   140002830:	lea    rdx,[rsp+0x70]
   140002835:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14000283b:	mov    rax,QWORD PTR [rcx]
   14000283e:	call   QWORD PTR [rax+0x130]
   140002844:	mov    rdi,rax
   140002847:	test   rax,rax
   14000284a:	je     0x140002962
   140002850:	cmp    BYTE PTR [rdi],0x2e
   140002853:	je     0x140002941
   140002859:	mov    rcx,rdi
   14000285c:	call   QWORD PTR [rip+0x2fc8e]        # 0x1400324f0
   140002862:	mov    rcx,rax
   140002865:	lea    rdx,[rip+0x30fcc]        # 0x140033838
   14000286c:	call   QWORD PTR [rip+0x2fcee]        # 0x140032560
   140002872:	test   eax,eax
   140002874:	jne    0x140002941
   14000287a:	mov    rcx,rdi
   14000287d:	call   QWORD PTR [rip+0x2fc85]        # 0x140032508
   140002883:	mov    r8d,0x104
   140002889:	lea    rdx,[rbp+0x80]
   140002890:	mov    rcx,rax
   140002893:	call   QWORD PTR [rip+0x2fc87]        # 0x140032520
   140002899:	lea    rdx,[rbp+0x80]
   1400028a0:	mov    QWORD PTR [rbp+0x5e8],0x0
   1400028ab:	lea    rcx,[rbp+0x5e8]
   1400028b2:	call   0x14001b3a0
   1400028b7:	xor    edi,edi
   1400028b9:	cmp    DWORD PTR [rbx],edi
   1400028bb:	jle    0x1400028e8
   1400028bd:	nop    DWORD PTR [rax]
   1400028c0:	mov    rax,QWORD PTR [rbx+0x8]
   1400028c4:	lea    rdx,[rbp+0x5e8]
   1400028cb:	movsxd rcx,edi
   1400028ce:	lea    rcx,[rax+rcx*8]
   1400028d2:	call   0x14001ab20
   1400028d7:	test   al,al
   1400028d9:	jne    0x1400028e3
   1400028db:	inc    edi
   1400028dd:	cmp    edi,DWORD PTR [rbx]
   1400028df:	jl     0x1400028c0
   1400028e1:	jmp    0x1400028e8
   1400028e3:	cmp    edi,0xffffffff
   1400028e6:	jne    0x14000292b
   1400028e8:	movsxd rdi,DWORD PTR [rbx]
   1400028eb:	cmp    edi,DWORD PTR [rbx+0x10]
   1400028ee:	jne    0x1400028fe
   1400028f0:	lea    rcx,[rbx+0x8]
   1400028f4:	mov    edx,0x1
   1400028f9:	call   0x140013420
   1400028fe:	mov    rax,QWORD PTR [rbx+0x8]
   140002902:	inc    DWORD PTR [rbx]
   140002904:	lea    rdi,[rax+rdi*8]
   140002908:	test   rdi,rdi
   14000290b:	je     0x14000292b
   14000290d:	lea    rcx,[rbp+0x5e8]
   140002914:	mov    QWORD PTR [rdi],0x0
   14000291b:	call   0x14001b050
   140002920:	mov    rdx,rax
   140002923:	mov    rcx,rdi
   140002926:	call   0x14001b3a0
   14000292b:	cmp    QWORD PTR [rbp+0x5e8],0x0
   140002933:	je     0x140002941
   140002935:	lea    rcx,[rbp+0x5e8]
   14000293c:	call   0x14001b030
   140002941:	mov    rcx,QWORD PTR [rip+0x44840]        # 0x140047188
   140002948:	lea    rdx,[rsp+0x60]
   14000294d:	mov    rax,QWORD PTR [rcx]
   140002950:	call   QWORD PTR [rax+0x138]
   140002956:	mov    rdi,rax
   140002959:	test   rax,rax
   14000295c:	jne    0x140002850
   140002962:	mov    rcx,QWORD PTR [rip+0x4481f]        # 0x140047188
   140002969:	lea    rdx,[rsp+0x60]
   14000296e:	mov    rax,QWORD PTR [rcx]
   140002971:	call   QWORD PTR [rax+0x148]
   140002977:	mov    rcx,QWORD PTR [rsp+0x60]
   14000297c:	test   rcx,rcx
   14000297f:	je     0x14000298f
   140002981:	mov    rax,QWORD PTR [rcx]
   140002984:	lea    rdx,[rsp+0x60]
   140002989:	call   QWORD PTR [rax+0x148]
   14000298f:	mov    rdx,QWORD PTR [rsp+0x38]
   140002994:	xorps  xmm0,xmm0
   140002997:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14000299d:	test   r12d,r12d
   1400029a0:	je     0x140002b39
   1400029a6:	mov    r9d,0x104
   1400029ac:	lea    r8,[rsp+0x70]
   1400029b1:	lea    rdx,[rip+0x31058]        # 0x140033a10
   1400029b8:	mov    rcx,rsi
   1400029bb:	call   QWORD PTR [rip+0x2fb3f]        # 0x140032500
   1400029c1:	mov    rcx,QWORD PTR [rip+0x447c0]        # 0x140047188
   1400029c8:	lea    r8,[rsp+0x50]
   1400029cd:	xorps  xmm0,xmm0
   1400029d0:	lea    rdx,[rsp+0x70]
   1400029d5:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   1400029db:	mov    rax,QWORD PTR [rcx]
   1400029de:	call   QWORD PTR [rax+0x130]
   1400029e4:	mov    rdi,rax
   1400029e7:	test   rax,rax
   1400029ea:	je     0x140002afe
   1400029f0:	cmp    BYTE PTR [rdi],0x2e
   1400029f3:	je     0x140002add
   1400029f9:	xor    esi,esi
   1400029fb:	lea    rdx,[rip+0x31006]        # 0x140033a08
   140002a02:	mov    ecx,esi
   140002a04:	nop    DWORD PTR [rax+0x0]
   140002a08:	nop    DWORD PTR [rax+rax*1+0x0]
   140002a10:	movzx  eax,BYTE PTR [rdi+rcx*1]
   140002a14:	inc    rcx
   140002a17:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   140002a1b:	jne    0x140002a28
   140002a1d:	cmp    rcx,0x5
   140002a21:	jne    0x140002a10
   140002a23:	jmp    0x140002add
   140002a28:	mov    rcx,QWORD PTR [rip+0x44759]        # 0x140047188
   140002a2f:	lea    rdx,[rsp+0x50]
   140002a34:	mov    rax,QWORD PTR [rcx]
   140002a37:	call   QWORD PTR [rax+0x140]
   140002a3d:	test   al,al
   140002a3f:	je     0x140002add
   140002a45:	mov    rdx,rdi
   140002a48:	mov    QWORD PTR [rbp+0x5f8],rsi
   140002a4f:	lea    rcx,[rbp+0x5f8]
   140002a56:	call   0x14001b3a0
   140002a5b:	mov    edi,esi
   140002a5d:	cmp    DWORD PTR [rbx],esi
   140002a5f:	jle    0x140002a89
   140002a61:	mov    rax,QWORD PTR [rbx+0x8]
   140002a65:	lea    rdx,[rbp+0x5f8]
   140002a6c:	movsxd rcx,edi
   140002a6f:	lea    rcx,[rax+rcx*8]
   140002a73:	call   0x14001ab20
   140002a78:	test   al,al
   140002a7a:	jne    0x140002a84
   140002a7c:	inc    edi
   140002a7e:	cmp    edi,DWORD PTR [rbx]
   140002a80:	jl     0x140002a61
   140002a82:	jmp    0x140002a89
   140002a84:	cmp    edi,0xffffffff
   140002a87:	jne    0x140002ac8
   140002a89:	movsxd rdi,DWORD PTR [rbx]
   140002a8c:	cmp    edi,DWORD PTR [rbx+0x10]
   140002a8f:	jne    0x140002a9f
   140002a91:	lea    rcx,[rbx+0x8]
   140002a95:	mov    edx,0x1
   140002a9a:	call   0x140013420
   140002a9f:	mov    rax,QWORD PTR [rbx+0x8]
   140002aa3:	inc    DWORD PTR [rbx]
   140002aa5:	lea    rdi,[rax+rdi*8]
   140002aa9:	test   rdi,rdi
   140002aac:	je     0x140002ac8
   140002aae:	lea    rcx,[rbp+0x5f8]
   140002ab5:	mov    QWORD PTR [rdi],rsi
   140002ab8:	call   0x14001b050
   140002abd:	mov    rdx,rax
   140002ac0:	mov    rcx,rdi
   140002ac3:	call   0x14001b3a0
   140002ac8:	cmp    QWORD PTR [rbp+0x5f8],rsi
   140002acf:	je     0x140002add
   140002ad1:	lea    rcx,[rbp+0x5f8]
   140002ad8:	call   0x14001b030
   140002add:	mov    rcx,QWORD PTR [rip+0x446a4]        # 0x140047188
   140002ae4:	lea    rdx,[rsp+0x50]
   140002ae9:	mov    rax,QWORD PTR [rcx]
   140002aec:	call   QWORD PTR [rax+0x138]
   140002af2:	mov    rdi,rax
   140002af5:	test   rax,rax
   140002af8:	jne    0x1400029f0
   140002afe:	mov    rcx,QWORD PTR [rip+0x44683]        # 0x140047188
   140002b05:	lea    rdx,[rsp+0x50]
   140002b0a:	mov    rax,QWORD PTR [rcx]
   140002b0d:	call   QWORD PTR [rax+0x148]
   140002b13:	mov    rcx,QWORD PTR [rsp+0x50]
   140002b18:	test   rcx,rcx
   140002b1b:	je     0x140002b2b
   140002b1d:	mov    rax,QWORD PTR [rcx]
   140002b20:	lea    rdx,[rsp+0x50]
   140002b25:	call   QWORD PTR [rax+0x148]
   140002b2b:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b30:	xorps  xmm0,xmm0
   140002b33:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140002b39:	inc    r15d
   140002b3c:	lea    rax,[rip+0x30ec5]        # 0x140033a08
   140002b43:	add    r14,0x8
   140002b47:	cmp    r15d,DWORD PTR [rsp+0x30]
   140002b4c:	jl     0x1400027e0
   140002b52:	mov    r14,QWORD PTR [rsp+0x6a8]
   140002b5a:	xor    edi,edi
   140002b5c:	mov    r13,QWORD PTR [rsp+0x6b0]
   140002b64:	mov    rsi,QWORD PTR [rsp+0x6e0]
   140002b6c:	mov    eax,DWORD PTR [rsp+0x44]
   140002b70:	mov    r15,QWORD PTR [rsp+0x6a0]
   140002b78:	mov    DWORD PTR [rsp+0x30],edi
   140002b7c:	test   eax,0xc0000000
   140002b81:	jne    0x140002ba8
   140002b83:	test   rdx,rdx
   140002b86:	je     0x140002ba4
   140002b88:	mov    rax,QWORD PTR [rip+0x2f801]        # 0x140032390
   140002b8f:	mov    rcx,QWORD PTR [rax]
   140002b92:	mov    rax,QWORD PTR [rcx]
   140002b95:	call   QWORD PTR [rax+0x28]
   140002b98:	mov    eax,DWORD PTR [rsp+0x44]
   140002b9c:	mov    rdx,rdi
   140002b9f:	mov    QWORD PTR [rsp+0x38],rdx
   140002ba4:	mov    DWORD PTR [rsp+0x40],edi
   140002ba8:	mov    rdi,QWORD PTR [rsp+0x6b8]
   140002bb0:	test   eax,0xc0000000
   140002bb5:	jne    0x140002bcc
   140002bb7:	test   rdx,rdx
   140002bba:	je     0x140002bcc
   140002bbc:	mov    rax,QWORD PTR [rip+0x2f7cd]        # 0x140032390
   140002bc3:	mov    rcx,QWORD PTR [rax]
   140002bc6:	mov    rax,QWORD PTR [rcx]
   140002bc9:	call   QWORD PTR [rax+0x28]
   140002bcc:	add    rsp,0x6c0
   140002bd3:	pop    r12
   140002bd5:	pop    rbx
   140002bd6:	pop    rbp
   140002bd7:	ret    
   140002bd8:	int3   
   140002bd9:	int3   
   140002bda:	int3   
   140002bdb:	int3   
   140002bdc:	int3   
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	mov    rcx,QWORD PTR [rcx+0x8]
   140002be4:	jmp    0x140002710
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	mov    eax,0x2
   140002bf5:	ret    
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	mov    QWORD PTR [rdx],0x0
   140002c07:	mov    rax,rdx
   140002c0a:	ret    
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	rex push rbx
   140002c12:	sub    rsp,0x20
   140002c16:	mov    rcx,QWORD PTR [rcx+0x8]
   140002c1a:	mov    rbx,rdx
   140002c1d:	mov    rax,QWORD PTR [rcx]
   140002c20:	call   QWORD PTR [rax+0x10]
   140002c23:	mov    rax,rbx
   140002c26:	add    rsp,0x20
   140002c2a:	pop    rbx
   140002c2b:	ret    
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	rex push rbx
   140002c32:	push   rsi
   140002c33:	push   rdi
   140002c34:	sub    rsp,0x20
   140002c38:	lea    rsi,[rcx+0x200]
   140002c3f:	mov    QWORD PTR [rdx],0x0
   140002c46:	add    rcx,0x1f8
   140002c4d:	mov    rdi,rdx
   140002c50:	call   0x14001b050
   140002c55:	mov    rdx,rax
   140002c58:	mov    rcx,rdi
   140002c5b:	call   0x14001b3a0
   140002c60:	mov    rcx,rsi
   140002c63:	call   0x14001b050
   140002c68:	test   rax,rax
   140002c6b:	je     0x140002d22
   140002c71:	lea    rdx,[rsp+0x40]
   140002c76:	mov    rcx,rdi
   140002c79:	call   0x14001b060
   140002c7e:	lea    rcx,[rsp+0x40]
   140002c83:	call   0x14001b050
   140002c88:	test   rax,rax
   140002c8b:	je     0x140002cfd
   140002c8d:	lea    rdx,[rsp+0x48]
   140002c92:	mov    QWORD PTR [rsp+0x50],rbp
   140002c97:	mov    rcx,rdi
   140002c9a:	call   0x14001b640
   140002c9f:	cmp    QWORD PTR [rdi],0x0
   140002ca3:	mov    rbx,rax
   140002ca6:	mov    rbp,QWORD PTR [rax]
   140002ca9:	je     0x140002cb3
   140002cab:	mov    rcx,rdi
   140002cae:	call   0x14001b030
   140002cb3:	mov    QWORD PTR [rdi],rbp
   140002cb6:	mov    rbp,QWORD PTR [rsp+0x50]
   140002cbb:	mov    QWORD PTR [rbx],0x0
   140002cc2:	cmp    QWORD PTR [rsp+0x48],0x0
   140002cc8:	je     0x140002cd4
   140002cca:	lea    rcx,[rsp+0x48]
   140002ccf:	call   0x14001b030
   140002cd4:	mov    rcx,rsi
   140002cd7:	call   0x14001b050
   140002cdc:	mov    rdx,rax
   140002cdf:	mov    rcx,rdi
   140002ce2:	call   0x14001ad40
   140002ce7:	lea    rdx,[rip+0x30526]        # 0x140033214
   140002cee:	mov    rcx,rdi
   140002cf1:	call   0x14001ad40
   140002cf6:	lea    rcx,[rsp+0x40]
   140002cfb:	jmp    0x140002d00
   140002cfd:	mov    rcx,rsi
   140002d00:	call   0x14001b050
   140002d05:	mov    rdx,rax
   140002d08:	mov    rcx,rdi
   140002d0b:	call   0x14001ad40
   140002d10:	cmp    QWORD PTR [rsp+0x40],0x0
   140002d16:	je     0x140002d22
   140002d18:	lea    rcx,[rsp+0x40]
   140002d1d:	call   0x14001b030
   140002d22:	mov    rax,rdi
   140002d25:	add    rsp,0x20
   140002d29:	pop    rdi
   140002d2a:	pop    rsi
   140002d2b:	pop    rbx
   140002d2c:	ret    
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    rcx,QWORD PTR [rcx+0x8]
   140002d34:	add    rcx,0x128
   140002d3b:	mov    rax,QWORD PTR [rcx]
   140002d3e:	test   rax,rax
   140002d41:	je     0x140002d4c
   140002d43:	cmp    BYTE PTR [rax],0x0
   140002d46:	jne    0x14001b050
   140002d4c:	xor    eax,eax
   140002d4e:	ret    
   140002d4f:	int3   
   140002d50:	mov    eax,DWORD PTR [rip+0x44312]        # 0x140047068
   140002d56:	test   al,0x1
   140002d58:	jne    0x140002d8a
   140002d5a:	or     eax,0x1
   140002d5d:	xorps  xmm0,xmm0
   140002d60:	mov    DWORD PTR [rip+0x44302],eax        # 0x140047068
   140002d66:	lea    rax,[rip+0x2fe5b]        # 0x140032bc8
   140002d6d:	mov    QWORD PTR [rip+0x442d4],rax        # 0x140047048
   140002d74:	lea    rax,[rip+0x2fe3d]        # 0x140032bb8
   140002d7b:	mov    QWORD PTR [rip+0x442ce],rax        # 0x140047050
   140002d82:	movdqu XMMWORD PTR [rip+0x442ce],xmm0        # 0x140047058
   140002d8a:	lea    rax,[rip+0x442b7]        # 0x140047048
   140002d91:	ret    
   140002d92:	int3   
   140002d93:	int3   
   140002d94:	int3   
   140002d95:	int3   
   140002d96:	int3   
   140002d97:	int3   
   140002d98:	int3   
   140002d99:	int3   
   140002d9a:	int3   
   140002d9b:	int3   
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	mov    rcx,QWORD PTR [rcx+0x8]
   140002da4:	add    rcx,0x118
   140002dab:	jmp    0x14001b050
   140002db0:	mov    QWORD PTR [rsp+0x8],rbx
   140002db5:	mov    QWORD PTR [rsp+0x10],rsi
   140002dba:	push   rdi
   140002dbb:	sub    rsp,0x540
   140002dc2:	mov    rsi,r8
   140002dc5:	mov    rbx,rdx
   140002dc8:	mov    rdi,rcx
   140002dcb:	call   QWORD PTR [rip+0x2f6e7]        # 0x1400324b8
   140002dd1:	lea    r9,[rsp+0x30]
   140002dd6:	mov    QWORD PTR [rsp+0x20],0x104
   140002ddf:	lea    r8,[rip+0x2f9ba]        # 0x1400327a0
   140002de6:	mov    rcx,rax
   140002de9:	lea    rdx,[rip+0x30c58]        # 0x140033a48
   140002df0:	mov    r10,QWORD PTR [rax]
   140002df3:	call   QWORD PTR [r10+0x50]
   140002df7:	cmp    BYTE PTR [rsp+0x30],0x0
   140002dfc:	je     0x140002e05
   140002dfe:	lea    rdx,[rsp+0x30]
   140002e03:	jmp    0x140002e4c
   140002e05:	mov    rdi,QWORD PTR [rdi+0x1f0]
   140002e0c:	test   rdi,rdi
   140002e0f:	jne    0x140002e16
   140002e11:	mov    rdx,rsi
   140002e14:	jmp    0x140002e4c
   140002e16:	xor    edx,edx
   140002e18:	lea    rcx,[rsp+0x140]
   140002e20:	mov    r8d,0x400
   140002e26:	call   0x1400277b0
   140002e2b:	mov    rax,QWORD PTR [rdi]
   140002e2e:	lea    r8,[rsp+0x140]
   140002e36:	mov    r9d,0x400
   140002e3c:	mov    rdx,rsi
   140002e3f:	mov    rcx,rdi
   140002e42:	call   QWORD PTR [rax]
   140002e44:	lea    rdx,[rsp+0x140]
   140002e4c:	mov    rcx,rbx
   140002e4f:	mov    QWORD PTR [rbx],0x0
   140002e56:	call   0x14001b3a0
   140002e5b:	lea    r11,[rsp+0x540]
   140002e63:	mov    rax,rbx
   140002e66:	mov    rbx,QWORD PTR [r11+0x10]
   140002e6a:	mov    rsi,QWORD PTR [r11+0x18]
   140002e6e:	mov    rsp,r11
   140002e71:	pop    rdi
   140002e72:	ret    
   140002e73:	int3   
   140002e74:	int3   
   140002e75:	int3   
   140002e76:	int3   
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	rex push rbx
   140002e82:	sub    rsp,0x20
   140002e86:	mov    rcx,QWORD PTR [rcx+0x8]
   140002e8a:	mov    rbx,rdx
   140002e8d:	call   0x140002db0
   140002e92:	mov    rax,rbx
   140002e95:	add    rsp,0x20
   140002e99:	pop    rbx
   140002e9a:	ret    
   140002e9b:	int3   
   140002e9c:	int3   
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	mov    rax,QWORD PTR [rcx+0x8]
   140002ea4:	mov    rax,QWORD PTR [rax+0xe0]
   140002eab:	ret    
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	mov    rdx,QWORD PTR [rcx+0x8]
   140002eb4:	xor    eax,eax
   140002eb6:	cmp    BYTE PTR [rdx+0xfb],al
   140002ebc:	je     0x140002ec9
   140002ebe:	cmp    BYTE PTR [rdx+0xfc],al
   140002ec4:	setne  al
   140002ec7:	inc    eax
   140002ec9:	ret    
   140002eca:	int3   
   140002ecb:	int3   
   140002ecc:	int3   
   140002ecd:	int3   
   140002ece:	int3   
   140002ecf:	int3   
   140002ed0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ed5:	push   rbx
   140002ed6:	sub    rsp,0x20
   140002eda:	mov    rcx,rdx
   140002edd:	lea    r8,[rsp+0x30]
   140002ee2:	xor    ebx,ebx
   140002ee4:	lea    rdx,[rip+0x2f8c9]        # 0x1400327b4
   140002eeb:	mov    QWORD PTR [rsp+0x30],rbx
   140002ef0:	call   QWORD PTR [rip+0x2f642]        # 0x140032538
   140002ef6:	test   eax,eax
   140002ef8:	cmovne rbx,QWORD PTR [rsp+0x30]
   140002efe:	mov    rax,rbx
   140002f01:	add    rsp,0x20
   140002f05:	pop    rbx
   140002f06:	ret    
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	mov    rcx,QWORD PTR [rcx+0x8]
   140002f14:	jmp    0x1400095f0
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	mov    rax,QWORD PTR [rcx+0x8]
   140002f24:	lea    rcx,[rax+0x100]
   140002f2b:	cmp    edx,0x1
   140002f2e:	jne    0x140002f45
   140002f30:	add    rax,0x108
   140002f36:	mov    rdx,QWORD PTR [rax]
   140002f39:	test   rdx,rdx
   140002f3c:	je     0x140002f45
   140002f3e:	cmp    BYTE PTR [rdx],0x0
   140002f41:	cmovne rcx,rax
   140002f45:	mov    rax,QWORD PTR [rcx]
   140002f48:	test   rax,rax
   140002f4b:	je     0x140002f56
   140002f4d:	cmp    BYTE PTR [rax],0x0
   140002f50:	jne    0x14001b050
   140002f56:	xor    eax,eax
   140002f58:	ret    
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    rcx,QWORD PTR [rcx+0x8]
   140002f64:	add    rcx,0x120
   140002f6b:	mov    rax,QWORD PTR [rcx]
   140002f6e:	test   rax,rax
   140002f71:	je     0x140002f7c
   140002f73:	cmp    BYTE PTR [rax],0x0
   140002f76:	jne    0x14001b050
   140002f7c:	xor    eax,eax
   140002f7e:	ret    
   140002f7f:	int3   
   140002f80:	mov    rcx,QWORD PTR [rcx+0x8]
   140002f84:	add    rcx,0x110
   140002f8b:	mov    rax,QWORD PTR [rcx]
   140002f8e:	test   rax,rax
   140002f91:	je     0x140002f9c
   140002f93:	cmp    BYTE PTR [rax],0x0
   140002f96:	jne    0x14001b050
   140002f9c:	xor    eax,eax
   140002f9e:	ret    
   140002f9f:	int3   
   140002fa0:	mov    QWORD PTR [rsp+0x18],rbx
   140002fa5:	mov    QWORD PTR [rsp+0x10],rdx
   140002faa:	push   rbp
   140002fab:	push   rsi
   140002fac:	push   rdi
   140002fad:	push   r12
   140002faf:	push   r13
   140002fb1:	push   r14
   140002fb3:	push   r15
   140002fb5:	sub    rsp,0x20
   140002fb9:	xor    esi,esi
   140002fbb:	mov    r15,rcx
   140002fbe:	mov    edi,esi
   140002fc0:	cmp    si,WORD PTR [rcx+0x182]
   140002fc7:	jae    0x14000305d
   140002fcd:	movsxd r13,r8d
   140002fd0:	mov    ebx,esi
   140002fd2:	cmp    rbx,r13
   140002fd5:	jge    0x14000305d
   140002fdb:	lea    rcx,[r15+0x168]
   140002fe2:	mov    WORD PTR [rsp+0x60],di
   140002fe7:	lea    rdx,[rsp+0x60]
   140002fec:	call   0x14001db60
   140002ff1:	lea    rcx,[r15+0x168]
   140002ff8:	mov    r8,rax
   140002ffb:	lea    rdx,[rsp+0x78]
   140003000:	mov    r12,rax
   140003003:	call   0x14001c980
   140003008:	movzx  ebp,WORD PTR [rsp+0x78]
   14000300d:	mov    edx,DWORD PTR [r15+0x150]
   140003014:	cmp    edx,ebp
   140003016:	jg     0x140003030
   140003018:	lea    r8d,[rbp+0x1]
   14000301c:	cmp    edx,r8d
   14000301f:	jge    0x140003030
   140003021:	sub    r8d,edx
   140003024:	lea    rcx,[r15+0x150]
   14000302b:	call   0x1400038c0
   140003030:	mov    rax,QWORD PTR [r15+0x158]
   140003037:	cmp    DWORD PTR [rax+rbp*4],0x0
   14000303b:	jle    0x14000304b
   14000303d:	mov    rax,QWORD PTR [rsp+0x68]
   140003042:	inc    esi
   140003044:	mov    QWORD PTR [rax+rbx*8],r12
   140003048:	inc    rbx
   14000304b:	movzx  eax,WORD PTR [r15+0x182]
   140003053:	inc    edi
   140003055:	cmp    edi,eax
   140003057:	jl     0x140002fd2
   14000305d:	mov    eax,esi
   14000305f:	mov    rbx,QWORD PTR [rsp+0x70]
   140003064:	add    rsp,0x20
   140003068:	pop    r15
   14000306a:	pop    r14
   14000306c:	pop    r13
   14000306e:	pop    r12
   140003070:	pop    rdi
   140003071:	pop    rsi
   140003072:	pop    rbp
   140003073:	ret    
   140003074:	int3   
   140003075:	int3   
   140003076:	int3   
   140003077:	int3   
   140003078:	int3   
   140003079:	int3   
   14000307a:	int3   
   14000307b:	int3   
   14000307c:	int3   
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	rex push rbx
   140003082:	push   rbp
   140003083:	push   rdi
   140003084:	sub    rsp,0x40
   140003088:	xor    eax,eax
   14000308a:	mov    rbx,rdx
   14000308d:	mov    rbp,rcx
   140003090:	mov    edi,eax
   140003092:	cmp    ax,WORD PTR [rcx+0x182]
   140003099:	jae    0x14000318a
   14000309f:	mov    QWORD PTR [rsp+0x68],rsi
   1400030a4:	mov    QWORD PTR [rsp+0x38],r12
   1400030a9:	mov    QWORD PTR [rsp+0x30],r13
   1400030ae:	mov    QWORD PTR [rsp+0x28],r14
   1400030b3:	mov    QWORD PTR [rsp+0x20],r15
   1400030b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400030c0:	lea    rdx,[rsp+0x60]
   1400030c5:	mov    WORD PTR [rsp+0x60],di
   1400030ca:	lea    rcx,[rbp+0x168]
   1400030d1:	call   0x14001db60
   1400030d6:	mov    r8,rax
   1400030d9:	lea    rdx,[rsp+0x70]
   1400030de:	lea    rcx,[rbp+0x168]
   1400030e5:	mov    r15,rax
   1400030e8:	call   0x14001c980
   1400030ed:	movzx  esi,WORD PTR [rsp+0x70]
   1400030f2:	mov    edx,DWORD PTR [rbp+0x150]
   1400030f8:	cmp    edx,esi
   1400030fa:	jg     0x140003114
   1400030fc:	lea    r8d,[rsi+0x1]
   140003100:	cmp    edx,r8d
   140003103:	jge    0x140003114
   140003105:	sub    r8d,edx
   140003108:	lea    rcx,[rbp+0x150]
   14000310f:	call   0x1400038c0
   140003114:	mov    rax,QWORD PTR [rbp+0x158]
   14000311b:	cmp    DWORD PTR [rax+rsi*4],0x0
   14000311f:	jle    0x140003160
   140003121:	movsxd rsi,DWORD PTR [rbx]
   140003124:	cmp    esi,DWORD PTR [rbx+0x10]
   140003127:	jne    0x140003137
   140003129:	lea    rcx,[rbx+0x8]
   14000312d:	mov    edx,0x1
   140003132:	call   0x140013420
   140003137:	inc    DWORD PTR [rbx]
   140003139:	lea    rdx,[rsi*8+0x0]
   140003141:	mov    rcx,QWORD PTR [rbx+0x8]
   140003145:	add    rcx,rdx
   140003148:	je     0x140003151
   14000314a:	mov    QWORD PTR [rcx],0x0
   140003151:	mov    rcx,QWORD PTR [rbx+0x8]
   140003155:	add    rcx,rdx
   140003158:	mov    rdx,r15
   14000315b:	call   0x14001b3a0
   140003160:	movzx  eax,WORD PTR [rbp+0x182]
   140003167:	inc    edi
   140003169:	cmp    edi,eax
   14000316b:	jl     0x1400030c0
   140003171:	mov    r15,QWORD PTR [rsp+0x20]
   140003176:	mov    r14,QWORD PTR [rsp+0x28]
   14000317b:	mov    r13,QWORD PTR [rsp+0x30]
   140003180:	mov    r12,QWORD PTR [rsp+0x38]
   140003185:	mov    rsi,QWORD PTR [rsp+0x68]
   14000318a:	add    rsp,0x40
   14000318e:	pop    rdi
   14000318f:	pop    rbp
   140003190:	pop    rbx
   140003191:	ret    
   140003192:	int3   
   140003193:	int3   
   140003194:	int3   
   140003195:	int3   
   140003196:	int3   
   140003197:	int3   
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400031a4:	jmp    0x140002fa0
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400031b4:	jmp    0x140003080
   1400031b9:	int3   
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400031c4:	cmp    BYTE PTR [rcx+0x1e3],0x0
   1400031cb:	jne    0x1400031d0
   1400031cd:	xor    eax,eax
   1400031cf:	ret    
   1400031d0:	add    rcx,0x1e8
   1400031d7:	jmp    0x14001b050
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	rex push rdi
   1400031e2:	sub    rsp,0x20
   1400031e6:	mov    eax,edx
   1400031e8:	mov    rdi,rcx
   1400031eb:	mov    edx,DWORD PTR [rcx+0xc]
   1400031ee:	bt     edx,0x1e
   1400031f2:	jb     0x1400032d8
   1400031f8:	mov    ecx,DWORD PTR [rcx+0x8]
   1400031fb:	and    edx,0x3fffffff
   140003201:	mov    QWORD PTR [rsp+0x30],rbx
   140003206:	mov    r9d,0x4
   14000320c:	mov    QWORD PTR [rsp+0x38],rsi
   140003211:	lea    esi,[rcx+rax*1]
   140003214:	mov    r8d,esi
   140003217:	call   0x14001aa30
   14000321c:	mov    ebx,eax
   14000321e:	cmp    eax,esi
   140003220:	jge    0x14000323e
   140003222:	test   eax,eax
   140003224:	jne    0x140003230
   140003226:	cmp    esi,0xffffffff
   140003229:	jg     0x140003230
   14000322b:	or     ebx,0xffffffff
   14000322e:	jmp    0x14000323e
   140003230:	lea    eax,[rbx+rsi*1]
   140003233:	cdq    
   140003234:	sub    eax,edx
   140003236:	sar    eax,1
   140003238:	mov    ebx,eax
   14000323a:	cmp    eax,esi
   14000323c:	jl     0x140003230
   14000323e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140003245:	mov    rax,QWORD PTR [rip+0x2f144]        # 0x140032390
   14000324c:	mov    rcx,QWORD PTR [rax]
   14000324f:	mov    rax,QWORD PTR [rcx]
   140003252:	jne    0x14000329c
   140003254:	mov    rdx,QWORD PTR [rdi]
   140003257:	test   rdx,rdx
   14000325a:	je     0x14000327c
   14000325c:	movsxd r8,ebx
   14000325f:	shl    r8,0x2
   140003263:	call   QWORD PTR [rax+0x18]
   140003266:	mov    rsi,QWORD PTR [rsp+0x38]
   14000326b:	mov    DWORD PTR [rdi+0x8],ebx
   14000326e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003273:	mov    QWORD PTR [rdi],rax
   140003276:	add    rsp,0x20
   14000327a:	pop    rdi
   14000327b:	ret    
   14000327c:	movsxd rdx,ebx
   14000327f:	shl    rdx,0x2
   140003283:	call   QWORD PTR [rax+0x8]
   140003286:	mov    rsi,QWORD PTR [rsp+0x38]
   14000328b:	mov    DWORD PTR [rdi+0x8],ebx
   14000328e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003293:	mov    QWORD PTR [rdi],rax
   140003296:	add    rsp,0x20
   14000329a:	pop    rdi
   14000329b:	ret    
   14000329c:	mov    rsi,QWORD PTR [rdi]
   14000329f:	movsxd rdx,ebx
   1400032a2:	shl    rdx,0x2
   1400032a6:	call   QWORD PTR [rax+0x8]
   1400032a9:	mov    QWORD PTR [rdi],rax
   1400032ac:	test   rsi,rsi
   1400032af:	je     0x1400032c4
   1400032b1:	movsxd r8,DWORD PTR [rdi+0x8]
   1400032b5:	mov    rdx,rsi
   1400032b8:	shl    r8,0x2
   1400032bc:	mov    rcx,rax
   1400032bf:	call   0x140026f70
   1400032c4:	and    DWORD PTR [rdi+0xc],0x3fffffff
   1400032cb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400032d0:	mov    DWORD PTR [rdi+0x8],ebx
   1400032d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032d8:	add    rsp,0x20
   1400032dc:	pop    rdi
   1400032dd:	ret    
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	sub    rsp,0x28
   1400032e4:	cmp    QWORD PTR [rip+0x43e44],0x0        # 0x140047130
   1400032ec:	je     0x1400032f3
   1400032ee:	call   0x14001c630
   1400032f3:	cmp    QWORD PTR [rip+0x4421d],0x0        # 0x140047518
   1400032fb:	je     0x140003306
   1400032fd:	xor    edx,edx
   1400032ff:	xor    ecx,ecx
   140003301:	call   0x14001ba50
   140003306:	mov    eax,0x1
   14000330b:	add    rsp,0x28
   14000330f:	ret    
   140003310:	rex push rbx
   140003312:	sub    rsp,0x830
   140003319:	mov    rbx,rcx
   14000331c:	call   0x140009b60
   140003321:	test   al,al
   140003323:	jne    0x14000332e
   140003325:	add    rsp,0x830
   14000332c:	pop    rbx
   14000332d:	ret    
   14000332e:	mov    rcx,QWORD PTR [rbx+0xe8]
   140003335:	mov    QWORD PTR [rsp+0x850],rdi
   14000333d:	movzx  edi,BYTE PTR [rbx+0xfb]
   140003344:	mov    QWORD PTR [rsp+0x858],r14
   14000334c:	xor    r14d,r14d
   14000334f:	test   rcx,rcx
   140003352:	je     0x140003370
   140003354:	mov    r8d,r14d
   140003357:	lea    rdx,[rip+0x2f872]        # 0x140032bd0
   14000335e:	test   dil,dil
   140003361:	sete   r8b
   140003365:	call   0x14001e240
   14000336a:	test   eax,eax
   14000336c:	sete   dil
   140003370:	cmp    QWORD PTR [rbx+0xe0],r14
   140003377:	jne    0x1400033b6
   140003379:	call   QWORD PTR [rip+0x2f139]        # 0x1400324b8
   14000337f:	lea    r9,[rsp+0x30]
   140003384:	mov    QWORD PTR [rsp+0x20],0x200
   14000338d:	xor    r8d,r8d
   140003390:	lea    rdx,[rip+0x2f84d]        # 0x140032be4
   140003397:	mov    rcx,rax
   14000339a:	mov    r10,QWORD PTR [rax]
   14000339d:	call   QWORD PTR [r10+0x50]
   1400033a1:	test   al,al
   1400033a3:	je     0x140003436
   1400033a9:	lea    rdx,[rsp+0x30]
   1400033ae:	mov    rcx,rbx
   1400033b1:	call   0x140004f60
   1400033b6:	mov    QWORD PTR [rsp+0x840],rbp
   1400033be:	xor    bpl,bpl
   1400033c1:	mov    QWORD PTR [rsp+0x848],rsi
   1400033c9:	call   QWORD PTR [rip+0x2f0e9]        # 0x1400324b8
   1400033cf:	lea    rdx,[rip+0x2f8ba]        # 0x140032c90
   1400033d6:	mov    rcx,rax
   1400033d9:	mov    r8,QWORD PTR [rax]
   1400033dc:	call   QWORD PTR [r8+0x20]
   1400033e0:	movzx  edi,al
   1400033e3:	cmp    BYTE PTR [rbx+0x144],bpl
   1400033ea:	jne    0x1400033f4
   1400033ec:	test   al,al
   1400033ee:	je     0x1400034a4
   1400033f4:	xor    edx,edx
   1400033f6:	lea    ecx,[rdx+0x1]
   1400033f9:	call   QWORD PTR [rip+0x2efc1]        # 0x1400323c0
   1400033ff:	xor    edx,edx
   140003401:	xor    ecx,ecx
   140003403:	call   QWORD PTR [rip+0x2efb7]        # 0x1400323c0
   140003409:	mov    bpl,0x1
   14000340c:	test   dil,dil
   14000340f:	je     0x1400034a4
   140003415:	call   QWORD PTR [rip+0x2f09d]        # 0x1400324b8
   14000341b:	lea    rdx,[rip+0x2f876]        # 0x140032c98
   140003422:	mov    rcx,rax
   140003425:	mov    r8,QWORD PTR [rax]
   140003428:	call   QWORD PTR [r8+0x20]
   14000342c:	test   al,al
   14000342e:	jne    0x1400034a4
   140003430:	movzx  esi,bpl
   140003434:	jmp    0x1400034a7
   140003436:	test   dil,dil
   140003439:	je     0x1400033b6
   14000343f:	lea    rcx,[rip+0x2f7a6]        # 0x140032bec
   140003446:	call   QWORD PTR [rip+0x2edec]        # 0x140032238
   14000344c:	test   rax,rax
   14000344f:	je     0x140003459
   140003451:	mov    rdx,rax
   140003454:	jmp    0x1400033ae
   140003459:	mov    edx,0x200
   14000345e:	lea    rcx,[rsp+0x230]
   140003466:	call   QWORD PTR [rip+0x2f10c]        # 0x140032578
   14000346c:	lea    r8,[rsp+0x230]
   140003474:	lea    rdx,[rip+0x2f785]        # 0x140032c00
   14000347b:	lea    rcx,[rsp+0x430]
   140003483:	call   0x1400015d0
   140003488:	lea    rdx,[rsp+0x430]
   140003490:	lea    rcx,[rip+0x2f7e9]        # 0x140032c80
   140003497:	call   QWORD PTR [rip+0x2ed93]        # 0x140032230
   14000349d:	xor    al,al
   14000349f:	jmp    0x140003657
   1400034a4:	xor    sil,sil
   1400034a7:	call   QWORD PTR [rip+0x2f00b]        # 0x1400324b8
   1400034ad:	xor    r8d,r8d
   1400034b0:	lea    rdx,[rip+0x2f7f1]        # 0x140032ca8
   1400034b7:	mov    rcx,rax
   1400034ba:	mov    r9,QWORD PTR [rax]
   1400034bd:	call   QWORD PTR [r9+0x18]
   1400034c1:	mov    edi,0x2
   1400034c6:	test   rax,rax
   1400034c9:	je     0x140003501
   1400034cb:	test   sil,sil
   1400034ce:	jne    0x140003501
   1400034d0:	call   QWORD PTR [rip+0x2f0aa]        # 0x140032580
   1400034d6:	mov    edx,edi
   1400034d8:	lea    ecx,[rdi-0x1]
   1400034db:	test   al,al
   1400034dd:	cmovne edx,r14d
   1400034e1:	call   QWORD PTR [rip+0x2eed9]        # 0x1400323c0
   1400034e7:	lea    edx,[rdi+0x1]
   1400034ea:	xor    ecx,ecx
   1400034ec:	call   QWORD PTR [rip+0x2eece]        # 0x1400323c0
   1400034f2:	mov    bpl,0x1
   1400034f5:	mov    rcx,rbx
   1400034f8:	movzx  edx,bpl
   1400034fc:	call   0x14000b3f0
   140003501:	call   QWORD PTR [rip+0x2efb1]        # 0x1400324b8
   140003507:	lea    rdx,[rip+0x2f7a6]        # 0x140032cb4
   14000350e:	mov    rcx,rax
   140003511:	mov    r8,QWORD PTR [rax]
   140003514:	call   QWORD PTR [r8+0x20]
   140003518:	test   al,al
   14000351a:	je     0x140003538
   14000351c:	test   sil,sil
   14000351f:	jne    0x14000352e
   140003521:	mov    edx,edi
   140003523:	xor    ecx,ecx
   140003525:	call   QWORD PTR [rip+0x2ee95]        # 0x1400323c0
   14000352b:	mov    bpl,0x1
   14000352e:	mov    dl,0x1
   140003530:	mov    rcx,rbx
   140003533:	call   0x14000b3f0
   140003538:	call   QWORD PTR [rip+0x2ef7a]        # 0x1400324b8
   14000353e:	lea    rdx,[rip+0x2f753]        # 0x140032c98
   140003545:	mov    rcx,rax
   140003548:	mov    r8,QWORD PTR [rax]
   14000354b:	call   QWORD PTR [r8+0x20]
   14000354f:	mov    rsi,QWORD PTR [rsp+0x848]
   140003557:	test   al,al
   140003559:	je     0x14000356e
   14000355b:	mov    edx,edi
   14000355d:	xor    ecx,ecx
   14000355f:	call   QWORD PTR [rip+0x2ee5b]        # 0x1400323c0
   140003565:	mov    edx,edi
   140003567:	mov    ecx,0x1
   14000356c:	jmp    0x1400035d3
   14000356e:	test   bpl,bpl
   140003571:	jne    0x1400035d9
   140003573:	call   QWORD PTR [rip+0x2f017]        # 0x140032590
   140003579:	test   al,al
   14000357b:	je     0x14000359a
   14000357d:	call   QWORD PTR [rip+0x2effd]        # 0x140032580
   140003583:	mov    edx,edi
   140003585:	mov    ecx,0x1
   14000358a:	test   al,al
   14000358c:	cmovne edx,r14d
   140003590:	call   QWORD PTR [rip+0x2ee2a]        # 0x1400323c0
   140003596:	mov    edx,edi
   140003598:	jmp    0x1400035d1
   14000359a:	call   QWORD PTR [rip+0x2f010]        # 0x1400325b0
   1400035a0:	test   eax,eax
   1400035a2:	je     0x1400035b3
   1400035a4:	xor    edx,edx
   1400035a6:	lea    ecx,[rdx+0x1]
   1400035a9:	call   QWORD PTR [rip+0x2ee11]        # 0x1400323c0
   1400035af:	mov    edx,edi
   1400035b1:	jmp    0x1400035d1
   1400035b3:	call   QWORD PTR [rip+0x2efc7]        # 0x140032580
   1400035b9:	test   al,al
   1400035bb:	mov    ecx,0x1
   1400035c0:	cmovne edi,r14d
   1400035c4:	mov    edx,edi
   1400035c6:	call   QWORD PTR [rip+0x2edf4]        # 0x1400323c0
   1400035cc:	mov    edx,0x3
   1400035d1:	xor    ecx,ecx
   1400035d3:	call   QWORD PTR [rip+0x2ede7]        # 0x1400323c0
   1400035d9:	call   0x140019fb0
   1400035de:	call   QWORD PTR [rip+0x2eed4]        # 0x1400324b8
   1400035e4:	xor    r8d,r8d
   1400035e7:	lea    rdx,[rip+0x2f6d2]        # 0x140032cc0
   1400035ee:	mov    rcx,rax
   1400035f1:	mov    r9,QWORD PTR [rax]
   1400035f4:	call   QWORD PTR [r9+0x18]
   1400035f8:	mov    rbp,QWORD PTR [rsp+0x840]
   140003600:	test   rax,rax
   140003603:	je     0x140003617
   140003605:	call   0x140027ca8
   14000360a:	mov    edx,0x8001f
   14000360f:	lea    ecx,[rdx-0x1c]
   140003612:	call   0x140027cfc
   140003617:	call   QWORD PTR [rip+0x2ee9b]        # 0x1400324b8
   14000361d:	xor    r8d,r8d
   140003620:	lea    rdx,[rip+0x2f6a9]        # 0x140032cd0
   140003627:	mov    rcx,rax
   14000362a:	mov    r9,QWORD PTR [rax]
   14000362d:	call   QWORD PTR [r9+0x18]
   140003631:	test   rax,rax
   140003634:	je     0x14000363c
   140003636:	call   QWORD PTR [rip+0x2ef5c]        # 0x140032598
   14000363c:	xor    r9d,r9d
   14000363f:	lea    r8,[rip+0x2f69a]        # 0x140032ce0
   140003646:	lea    rdx,[rip+0x2f57b]        # 0x140032bc8
   14000364d:	mov    rcx,rbx
   140003650:	call   0x140008980
   140003655:	mov    al,0x1
   140003657:	mov    rdi,QWORD PTR [rsp+0x850]
   14000365f:	mov    r14,QWORD PTR [rsp+0x858]
   140003667:	add    rsp,0x830
   14000366e:	pop    rbx
   14000366f:	ret    
   140003670:	rex push rbx
   140003672:	sub    rsp,0x20
   140003676:	mov    rbx,rcx
   140003679:	call   0x140003310
   14000367e:	test   al,al
   140003680:	jne    0x14000368a
   140003682:	xor    al,al
   140003684:	add    rsp,0x20
   140003688:	pop    rbx
   140003689:	ret    
   14000368a:	xor    r9d,r9d
   14000368d:	lea    r8,[rip+0x2fb84]        # 0x140033218
   140003694:	lea    rdx,[rip+0x2fb8d]        # 0x140033228
   14000369b:	mov    rcx,rbx
   14000369e:	call   0x140008980
   1400036a3:	test   rax,rax
   1400036a6:	je     0x140003682
   1400036a8:	mov    rcx,rbx
   1400036ab:	call   0x1400095e0
   1400036b0:	mov    edx,0x1
   1400036b5:	mov    QWORD PTR [rsp+0x38],rax
   1400036ba:	lea    rcx,[rsp+0x38]
   1400036bf:	call   0x140024f20
   1400036c4:	mov    rcx,rbx
   1400036c7:	mov    BYTE PTR [rbx+0x1de],0x1
   1400036ce:	call   0x140005390
   1400036d3:	test   al,al
   1400036d5:	je     0x140003682
   1400036d7:	mov    rcx,QWORD PTR [rip+0x43e42]        # 0x140047520
   1400036de:	test   rcx,rcx
   1400036e1:	je     0x1400036e9
   1400036e3:	mov    rax,QWORD PTR [rcx]
   1400036e6:	call   QWORD PTR [rax+0x60]
   1400036e9:	mov    rcx,rbx
   1400036ec:	call   0x140003700
   1400036f1:	mov    al,0x1
   1400036f3:	add    rsp,0x20
   1400036f7:	pop    rbx
   1400036f8:	ret    
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	mov    QWORD PTR [rsp+0x18],rbx
   140003705:	mov    QWORD PTR [rsp+0x20],rsi
   14000370a:	push   rdi
   14000370b:	sub    rsp,0x20
   14000370f:	mov    rdi,rcx
   140003712:	call   QWORD PTR [rip+0x2eda0]        # 0x1400324b8
   140003718:	lea    rdx,[rip+0x2fa99]        # 0x1400331b8
   14000371f:	mov    rcx,rax
   140003722:	mov    r8,QWORD PTR [rax]
   140003725:	call   QWORD PTR [r8+0x20]
   140003729:	lea    rsi,[rip+0x2fa98]        # 0x1400331c8
   140003730:	lea    rbx,[rip+0x2faa1]        # 0x1400331d8
   140003737:	test   al,al
   140003739:	jne    0x14000376d
   14000373b:	call   QWORD PTR [rip+0x2ed77]        # 0x1400324b8
   140003741:	mov    rdx,rsi
   140003744:	mov    rcx,rax
   140003747:	mov    r8,QWORD PTR [rax]
   14000374a:	call   QWORD PTR [r8+0x20]
   14000374e:	test   al,al
   140003750:	jne    0x14000376d
   140003752:	call   QWORD PTR [rip+0x2ed60]        # 0x1400324b8
   140003758:	mov    rdx,rbx
   14000375b:	mov    rcx,rax
   14000375e:	mov    r8,QWORD PTR [rax]
   140003761:	call   QWORD PTR [r8+0x20]
   140003765:	test   al,al
   140003767:	je     0x140003896
   14000376d:	mov    QWORD PTR [rsp+0x30],rbp
   140003772:	call   QWORD PTR [rip+0x2ed40]        # 0x1400324b8
   140003778:	mov    rdx,rbx
   14000377b:	mov    rcx,rax
   14000377e:	mov    r8,QWORD PTR [rax]
   140003781:	call   QWORD PTR [r8+0x20]
   140003785:	test   al,al
   140003787:	mov    BYTE PTR [rdi+0x208],0x1
   14000378e:	cmove  rbx,rsi
   140003792:	call   QWORD PTR [rip+0x2ed20]        # 0x1400324b8
   140003798:	lea    r8,[rip+0x2f941]        # 0x1400330e0
   14000379f:	mov    rdx,rbx
   1400037a2:	mov    rcx,rax
   1400037a5:	mov    r9,QWORD PTR [rax]
   1400037a8:	call   QWORD PTR [r9+0x68]
   1400037ac:	mov    rdx,rax
   1400037af:	lea    rcx,[rdi+0x1f8]
   1400037b6:	call   0x14001aae0
   1400037bb:	call   QWORD PTR [rip+0x2ecf7]        # 0x1400324b8
   1400037c1:	lea    rdx,[rip+0x2fa28]        # 0x1400331f0
   1400037c8:	mov    rcx,rax
   1400037cb:	mov    r8,QWORD PTR [rax]
   1400037ce:	call   QWORD PTR [r8+0x20]
   1400037d2:	movzx  ebp,al
   1400037d5:	call   QWORD PTR [rip+0x2ecdd]        # 0x1400324b8
   1400037db:	lea    rdx,[rip+0x2fa1e]        # 0x140033200
   1400037e2:	mov    rcx,rax
   1400037e5:	mov    r8,QWORD PTR [rax]
   1400037e8:	call   QWORD PTR [r8+0x20]
   1400037ec:	test   al,al
   1400037ee:	je     0x14000381d
   1400037f0:	mov    rdx,QWORD PTR [rip+0x43991]        # 0x140047188
   1400037f7:	lea    rcx,[rdi+0x1f8]
   1400037fe:	mov    rbx,QWORD PTR [rdx]
   140003801:	call   0x14001b050
   140003806:	mov    rcx,QWORD PTR [rip+0x4397b]        # 0x140047188
   14000380d:	lea    r8,[rip+0x2f9d0]        # 0x1400331e4
   140003814:	mov    rdx,rax
   140003817:	call   QWORD PTR [rbx+0xc8]
   14000381d:	lea    rbx,[rdi+0x210]
   140003824:	movzx  edx,bpl
   140003828:	mov    rcx,rbx
   14000382b:	call   0x140025e50
   140003830:	mov    rax,QWORD PTR [rdi]
   140003833:	lea    rdx,[rsp+0x38]
   140003838:	mov    rcx,rdi
   14000383b:	call   QWORD PTR [rax+0x10]
   14000383e:	mov    rcx,rax
   140003841:	call   0x14001b050
   140003846:	mov    r10,QWORD PTR [rbx]
   140003849:	lea    r9,[rip+0x2f994]        # 0x1400331e4
   140003850:	lea    r8,[rip+0x2f9b9]        # 0x140033210
   140003857:	mov    rdx,rax
   14000385a:	mov    rcx,rbx
   14000385d:	call   QWORD PTR [r10+0x20]
   140003861:	cmp    QWORD PTR [rsp+0x38],0x0
   140003867:	mov    rbp,QWORD PTR [rsp+0x30]
   14000386c:	mov    DWORD PTR [rdi+0x20c],eax
   140003872:	je     0x14000387e
   140003874:	lea    rcx,[rsp+0x38]
   140003879:	call   0x14001b030
   14000387e:	mov    rax,QWORD PTR [rbx]
   140003881:	mov    rcx,rbx
   140003884:	mov    edx,DWORD PTR [rdi+0x20c]
   14000388a:	call   QWORD PTR [rax+0x40]
   14000388d:	mov    rcx,rbx
   140003890:	call   QWORD PTR [rip+0x2ebfa]        # 0x140032490
   140003896:	mov    rbx,QWORD PTR [rsp+0x40]
   14000389b:	mov    rsi,QWORD PTR [rsp+0x48]
   1400038a0:	add    rsp,0x20
   1400038a4:	pop    rdi
   1400038a5:	ret    
   1400038a6:	int3   
   1400038a7:	int3   
   1400038a8:	int3   
   1400038a9:	int3   
   1400038aa:	int3   
   1400038ab:	int3   
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	mov    BYTE PTR [rcx+0x8],0x0
   1400038b4:	ret    
   1400038b5:	int3   
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	mov    QWORD PTR [rsp+0x10],rsi
   1400038c5:	mov    QWORD PTR [rsp+0x18],rdi
   1400038ca:	push   r14
   1400038cc:	sub    rsp,0x20
   1400038d0:	movsxd rdi,edx
   1400038d3:	mov    esi,r8d
   1400038d6:	mov    r14,rcx
   1400038d9:	test   r8d,r8d
   1400038dc:	je     0x14000392e
   1400038de:	mov    eax,DWORD PTR [rcx+0x10]
   1400038e1:	mov    QWORD PTR [rsp+0x30],rbx
   1400038e6:	mov    ebx,DWORD PTR [rcx]
   1400038e8:	add    ebx,r8d
   1400038eb:	cmp    ebx,eax
   1400038ed:	jle    0x1400038fc
   1400038ef:	mov    edx,ebx
   1400038f1:	add    rcx,0x8
   1400038f5:	sub    edx,eax
   1400038f7:	call   0x1400031e0
   1400038fc:	mov    DWORD PTR [r14],ebx
   1400038ff:	sub    ebx,edi
   140003901:	sub    ebx,esi
   140003903:	test   ebx,ebx
   140003905:	jle    0x140003929
   140003907:	test   esi,esi
   140003909:	jle    0x140003929
   14000390b:	mov    r9,QWORD PTR [r14+0x8]
   14000390f:	lea    eax,[rdi+rsi*1]
   140003912:	movsxd rcx,eax
   140003915:	movsxd r8,ebx
   140003918:	shl    r8,0x2
   14000391c:	lea    rdx,[r9+rdi*4]
   140003920:	lea    rcx,[r9+rcx*4]
   140003924:	call   0x140026f70
   140003929:	mov    rbx,QWORD PTR [rsp+0x30]
   14000392e:	mov    rsi,QWORD PTR [rsp+0x38]
   140003933:	mov    eax,edi
   140003935:	mov    rdi,QWORD PTR [rsp+0x40]
   14000393a:	add    rsp,0x20
   14000393e:	pop    r14
   140003940:	ret    
   140003941:	int3   
   140003942:	int3   
   140003943:	int3   
   140003944:	int3   
   140003945:	int3   
   140003946:	int3   
   140003947:	int3   
   140003948:	int3   
   140003949:	int3   
   14000394a:	int3   
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	mov    rax,QWORD PTR [rcx+0x8]
   140003954:	movzx  eax,BYTE PTR [rax+0xf8]
   14000395b:	ret    
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	sub    rsp,0x28
   140003964:	mov    rcx,QWORD PTR [rcx+0xe0]
   14000396b:	test   rcx,rcx
   14000396e:	je     0x1400039a3
   140003970:	xor    r8d,r8d
   140003973:	lea    rdx,[rip+0x2fa26]        # 0x1400333a0
   14000397a:	call   0x14001ded0
   14000397f:	test   rax,rax
   140003982:	je     0x1400039a3
   140003984:	mov    r8d,0x1
   14000398a:	lea    rdx,[rip+0x2fc9f]        # 0x140033630
   140003991:	mov    rcx,rax
   140003994:	call   0x14001e240
   140003999:	test   eax,eax
   14000399b:	setne  al
   14000399e:	add    rsp,0x28
   1400039a2:	ret    
   1400039a3:	mov    al,0x1
   1400039a5:	add    rsp,0x28
   1400039a9:	ret    
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	xor    al,al
   1400039b2:	ret    
   1400039b3:	int3   
   1400039b4:	int3   
   1400039b5:	int3   
   1400039b6:	int3   
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	rex push rbx
   1400039c2:	sub    rsp,0x260
   1400039c9:	mov    rbx,rcx
   1400039cc:	mov    QWORD PTR [rsp+0x30],0x0
   1400039d5:	mov    rcx,QWORD PTR [rip+0x437ac]        # 0x140047188
   1400039dc:	lea    r9,[rsp+0x150]
   1400039e4:	mov    DWORD PTR [rsp+0x28],0x0
   1400039ec:	lea    r8,[rip+0x2f7f1]        # 0x1400331e4
   1400039f3:	mov    DWORD PTR [rsp+0x20],0x104
   1400039fb:	mov    rax,QWORD PTR [rcx]
   1400039fe:	call   QWORD PTR [rax+0xb8]
   140003a04:	test   rax,rax
   140003a07:	jne    0x140003a12
   140003a09:	add    rsp,0x260
   140003a10:	pop    rbx
   140003a11:	ret    
   140003a12:	mov    QWORD PTR [rsp+0x270],rbp
   140003a1a:	mov    QWORD PTR [rsp+0x278],rsi
   140003a22:	mov    esi,DWORD PTR [rbx+0x150]
   140003a28:	mov    QWORD PTR [rsp+0x288],rdi
   140003a30:	xor    edi,edi
   140003a32:	test   esi,esi
   140003a34:	jle    0x140003aeb
   140003a3a:	lea    rbp,[rip+0x2ffe7]        # 0x140033a28
   140003a41:	nop    DWORD PTR [rax+0x0]
   140003a45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003a50:	lea    rdx,[rsp+0x280]
   140003a58:	mov    WORD PTR [rsp+0x280],di
   140003a60:	lea    rcx,[rbx+0x168]
   140003a67:	call   0x14001db60
   140003a6c:	mov    r8,rax
   140003a6f:	or     rax,0xffffffffffffffff
   140003a73:	inc    rax
   140003a76:	cmp    BYTE PTR [r8+rax*1],0x0
   140003a7b:	jne    0x140003a73
   140003a7d:	cmp    eax,0x4
   140003a80:	jl     0x140003aa9
   140003a82:	add    eax,0xfffffffc
   140003a85:	movsxd rdx,eax
   140003a88:	add    rdx,r8
   140003a8b:	xor    eax,eax
   140003a8d:	nop    DWORD PTR [rax]
   140003a90:	movzx  ecx,BYTE PTR [rdx+rax*1]
   140003a94:	inc    rax
   140003a97:	cmp    cl,BYTE PTR [rax+rbp*1-0x1]
   140003a9b:	jne    0x140003aa9
   140003a9d:	cmp    rax,0x5
   140003aa1:	jne    0x140003a90
   140003aa3:	cmp    cl,BYTE PTR [rax+rbp*1-0x1]
   140003aa7:	je     0x140003acc
   140003aa9:	lea    rdx,[rip+0x2ff80]        # 0x140033a30
   140003ab0:	lea    rcx,[rsp+0x40]
   140003ab5:	call   0x140001570
   140003aba:	mov    dl,0x5c
   140003abc:	lea    rcx,[rsp+0x40]
   140003ac1:	call   QWORD PTR [rip+0x2ea09]        # 0x1400324d0
   140003ac7:	lea    r8,[rsp+0x40]
   140003acc:	mov    rdx,r8
   140003acf:	lea    rcx,[rsp+0x150]
   140003ad7:	call   0x1400273a8
   140003adc:	test   rax,rax
   140003adf:	jne    0x140003b0e
   140003ae1:	inc    edi
   140003ae3:	cmp    edi,esi
   140003ae5:	jl     0x140003a50
   140003aeb:	xor    al,al
   140003aed:	mov    rsi,QWORD PTR [rsp+0x278]
   140003af5:	mov    rbp,QWORD PTR [rsp+0x270]
   140003afd:	mov    rdi,QWORD PTR [rsp+0x288]
   140003b05:	add    rsp,0x260
   140003b0c:	pop    rbx
   140003b0d:	ret    
   140003b0e:	mov    al,0x1
   140003b10:	jmp    0x140003aed
   140003b12:	int3   
   140003b13:	int3   
   140003b14:	int3   
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	mov    rcx,QWORD PTR [rcx+0x8]
   140003b24:	jmp    0x1400039c0
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	mov    rax,QWORD PTR [rcx+0x8]
   140003b34:	movzx  eax,BYTE PTR [rax+0xfa]
   140003b3b:	ret    
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	mov    rax,QWORD PTR [rcx+0x8]
   140003b44:	movzx  eax,BYTE PTR [rax+0xf9]
   140003b4b:	ret    
   140003b4c:	int3   
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	mov    rax,QWORD PTR [rcx+0x8]
   140003b54:	movzx  eax,BYTE PTR [rax+0x145]
   140003b5b:	ret    
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	mov    rax,QWORD PTR [rcx+0x8]
   140003b64:	movzx  eax,BYTE PTR [rax+0x144]
   140003b6b:	ret    
   140003b6c:	int3   
   140003b6d:	int3   
   140003b6e:	int3   
   140003b6f:	int3   
   140003b70:	rex push rbx
   140003b72:	sub    rsp,0x20
   140003b76:	mov    rcx,rdx
   140003b79:	lea    r8,[rsp+0x40]
   140003b7e:	xor    ebx,ebx
   140003b80:	lea    rdx,[rip+0x2ec2d]        # 0x1400327b4
   140003b87:	mov    QWORD PTR [rsp+0x40],rbx
   140003b8c:	call   QWORD PTR [rip+0x2e9a6]        # 0x140032538
   140003b92:	test   eax,eax
   140003b94:	cmovne rbx,QWORD PTR [rsp+0x40]
   140003b9a:	test   rbx,rbx
   140003b9d:	setne  al
   140003ba0:	add    rsp,0x20
   140003ba4:	pop    rbx
   140003ba5:	ret    
   140003ba6:	int3   
   140003ba7:	int3   
   140003ba8:	int3   
   140003ba9:	int3   
   140003baa:	int3   
   140003bab:	int3   
   140003bac:	int3   
   140003bad:	int3   
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	mov    QWORD PTR [rsp+0x18],rbp
   140003bb5:	push   rsi
   140003bb6:	push   r14
   140003bb8:	push   r15
   140003bba:	sub    rsp,0x250
   140003bc1:	mov    r15,r9
   140003bc4:	movzx  ebp,r8b
   140003bc8:	movzx  r14d,dl
   140003bcc:	lea    r8,[rsp+0x140]
   140003bd4:	mov    r9d,0x104
   140003bda:	xor    edx,edx
   140003bdc:	mov    rsi,rcx
   140003bdf:	call   0x140025290
   140003be4:	test   al,al
   140003be6:	je     0x140003d02
   140003bec:	mov    QWORD PTR [rsp+0x270],rbx
   140003bf4:	lea    rcx,[rsp+0x140]
   140003bfc:	mov    QWORD PTR [rsp+0x278],rdi
   140003c04:	call   QWORD PTR [rip+0x2e8fe]        # 0x140032508
   140003c0a:	mov    r8d,0x104
   140003c10:	lea    rdx,[rsp+0x140]
   140003c18:	lea    rcx,[rsp+0x30]
   140003c1d:	mov    rdi,rax
   140003c20:	call   QWORD PTR [rip+0x2e932]        # 0x140032558
   140003c26:	lea    rcx,[rsp+0x30]
   140003c2b:	call   QWORD PTR [rip+0x2e8e7]        # 0x140032518
   140003c31:	mov    dl,0x5c
   140003c33:	lea    rcx,[rsp+0x30]
   140003c38:	call   QWORD PTR [rip+0x2e892]        # 0x1400324d0
   140003c3e:	lea    rcx,[rsp+0x30]
   140003c43:	call   QWORD PTR [rip+0x2e87f]        # 0x1400324c8
   140003c49:	mov    ebx,DWORD PTR [r15]
   140003c4c:	lea    rcx,[rsp+0x30]
   140003c51:	movzx  r9d,r14b
   140003c55:	mov    QWORD PTR [rsp+0x20],r15
   140003c5a:	xor    r8d,r8d
   140003c5d:	mov    rdx,rdi
   140003c60:	call   0x140024fb0
   140003c65:	mov    edi,DWORD PTR [r15]
   140003c68:	sub    edi,ebx
   140003c6a:	mov    rbx,QWORD PTR [rsp+0x270]
   140003c72:	jne    0x140003ca6
   140003c74:	mov    ecx,DWORD PTR [rip+0x433ca]        # 0x140047044
   140003c7a:	mov    edx,0x2
   140003c7f:	call   QWORD PTR [rip+0x2e823]        # 0x1400324a8
   140003c85:	test   al,al
   140003c87:	je     0x140003cfa
   140003c89:	mov    ecx,DWORD PTR [rip+0x433b5]        # 0x140047044
   140003c8f:	lea    r8,[rip+0x2fdf2]        # 0x140033a88
   140003c96:	mov    r9,rsi
   140003c99:	mov    edx,0x2
   140003c9e:	call   QWORD PTR [rip+0x2e7fc]        # 0x1400324a0
   140003ca4:	jmp    0x140003cfa
   140003ca6:	test   bpl,bpl
   140003ca9:	je     0x140003cfa
   140003cab:	mov    ecx,DWORD PTR [rip+0x43393]        # 0x140047044
   140003cb1:	mov    edx,0x1
   140003cb6:	call   QWORD PTR [rip+0x2e7ec]        # 0x1400324a8
   140003cbc:	test   al,al
   140003cbe:	je     0x140003cfa
   140003cc0:	lea    rcx,[rip+0x2fde9]        # 0x140033ab0
   140003cc7:	mov    QWORD PTR [rsp+0x28],rsi
   140003ccc:	test   r14b,r14b
   140003ccf:	lea    rax,[rip+0x2fdea]        # 0x140033ac0
   140003cd6:	mov    r9d,edi
   140003cd9:	lea    r8,[rip+0x2fdf0]        # 0x140033ad0
   140003ce0:	cmovne rax,rcx
   140003ce4:	mov    edx,0x1
   140003ce9:	mov    ecx,DWORD PTR [rip+0x43355]        # 0x140047044
   140003cef:	mov    QWORD PTR [rsp+0x20],rax
   140003cf4:	call   QWORD PTR [rip+0x2e7a6]        # 0x1400324a0
   140003cfa:	mov    rdi,QWORD PTR [rsp+0x278]
   140003d02:	mov    rbp,QWORD PTR [rsp+0x280]
   140003d0a:	add    rsp,0x250
   140003d11:	pop    r15
   140003d13:	pop    r14
   140003d15:	pop    rsi
   140003d16:	ret    
   140003d17:	int3   
   140003d18:	int3   
   140003d19:	int3   
   140003d1a:	int3   
   140003d1b:	int3   
   140003d1c:	int3   
   140003d1d:	int3   
   140003d1e:	int3   
   140003d1f:	int3   
   140003d20:	mov    QWORD PTR [rsp+0x8],rbx
   140003d25:	mov    QWORD PTR [rsp+0x10],rsi
   140003d2a:	push   rdi
   140003d2b:	sub    rsp,0x20
   140003d2f:	movzx  eax,BYTE PTR [rcx+0xf9]
   140003d36:	mov    rbx,rcx
   140003d39:	mov    BYTE PTR [rcx+0x1dc],0x0
   140003d40:	test   al,al
   140003d42:	jne    0x140003d51
   140003d44:	cmp    BYTE PTR [rcx+0x1df],al
   140003d4a:	jne    0x140003d51
   140003d4c:	xor    dil,dil
   140003d4f:	jmp    0x140003d54
   140003d51:	mov    dil,0x1
   140003d54:	movzx  ecx,BYTE PTR [rcx+0xf8]
   140003d5b:	test   cl,cl
   140003d5d:	jne    0x140003d63
   140003d5f:	test   al,al
   140003d61:	je     0x140003d76
   140003d63:	test   dil,dil
   140003d66:	jne    0x140003d76
   140003d68:	cmp    BYTE PTR [rbx+0x1e1],dil
   140003d6f:	jne    0x140003d76
   140003d71:	xor    sil,sil
   140003d74:	jmp    0x140003d79
   140003d76:	mov    sil,0x1
   140003d79:	test   cl,cl
   140003d7b:	jne    0x140003d8b
   140003d7d:	test   sil,sil
   140003d80:	jne    0x140003d8b
   140003d82:	cmp    BYTE PTR [rbx+0x1e2],sil
   140003d89:	je     0x140003d9a
   140003d8b:	lea    rdx,[rip+0x2f4ae]        # 0x140033240
   140003d92:	mov    rcx,rbx
   140003d95:	call   0x140003e20
   140003d9a:	test   dil,dil
   140003d9d:	je     0x140003dae
   140003d9f:	lea    rdx,[rip+0x2f4aa]        # 0x140033250
   140003da6:	mov    rcx,rbx
   140003da9:	call   0x140003e20
   140003dae:	test   sil,sil
   140003db1:	je     0x140003dc2
   140003db3:	lea    rdx,[rip+0x2f4ae]        # 0x140033268
   140003dba:	mov    rcx,rbx
   140003dbd:	call   0x140003e20
   140003dc2:	cmp    BYTE PTR [rbx+0xf8],0x0
   140003dc9:	jne    0x140003dee
   140003dcb:	mov    rcx,rbx
   140003dce:	call   0x140009d50
   140003dd3:	test   al,al
   140003dd5:	jne    0x140003ddf
   140003dd7:	cmp    BYTE PTR [rbx+0x1e0],al
   140003ddd:	je     0x140003dee
   140003ddf:	lea    rdx,[rip+0x2f492]        # 0x140033278
   140003de6:	mov    rcx,rbx
   140003de9:	call   0x140003e20
   140003dee:	test   dil,dil
   140003df1:	je     0x140003e02
   140003df3:	lea    rdx,[rip+0x2f48e]        # 0x140033288
   140003dfa:	mov    rcx,rbx
   140003dfd:	call   0x140003e20
   140003e02:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e07:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e0c:	add    rsp,0x20
   140003e10:	pop    rdi
   140003e11:	ret    
   140003e12:	int3   
   140003e13:	int3   
   140003e14:	int3   
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	mov    QWORD PTR [rsp+0x10],rbx
   140003e25:	push   rdi
   140003e26:	sub    rsp,0x30
   140003e2a:	mov    rbx,rcx
   140003e2d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140003e35:	mov    rcx,QWORD PTR [rip+0x4338c]        # 0x1400471c8
   140003e3c:	lea    r9,[rip+0x2f455]        # 0x140033298
   140003e43:	xor    r8d,r8d
   140003e46:	mov    rax,QWORD PTR [rcx]
   140003e49:	call   QWORD PTR [rax+0xb0]
   140003e4f:	mov    rdi,rax
   140003e52:	test   rax,rax
   140003e55:	je     0x140003ecb
   140003e57:	mov    rcx,QWORD PTR [rip+0x4336a]        # 0x1400471c8
   140003e5e:	mov    rdx,rax
   140003e61:	mov    QWORD PTR [rsp+0x40],rsi
   140003e66:	mov    r8,QWORD PTR [rcx]
   140003e69:	call   QWORD PTR [r8+0xe8]
   140003e70:	mov    rcx,QWORD PTR [rip+0x43351]        # 0x1400471c8
   140003e77:	mov    rdx,QWORD PTR [rcx]
   140003e7a:	call   QWORD PTR [rdx+0x170]
   140003e80:	mov    rcx,QWORD PTR [rip+0x43341]        # 0x1400471c8
   140003e87:	mov    rdx,QWORD PTR [rcx]
   140003e8a:	call   QWORD PTR [rdx+0x70]
   140003e8d:	movsxd rsi,DWORD PTR [rbx+0x1c0]
   140003e94:	cmp    esi,DWORD PTR [rbx+0x1d0]
   140003e9a:	jne    0x140003ead
   140003e9c:	lea    rcx,[rbx+0x1c8]
   140003ea3:	mov    edx,0x1
   140003ea8:	call   0x140013420
   140003ead:	mov    rax,QWORD PTR [rbx+0x1c8]
   140003eb4:	inc    DWORD PTR [rbx+0x1c0]
   140003eba:	lea    rdx,[rax+rsi*8]
   140003ebe:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ec3:	test   rdx,rdx
   140003ec6:	je     0x140003ecb
   140003ec8:	mov    QWORD PTR [rdx],rdi
   140003ecb:	mov    rbx,QWORD PTR [rsp+0x48]
   140003ed0:	add    rsp,0x30
   140003ed4:	pop    rdi
   140003ed5:	ret    
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	mov    rcx,QWORD PTR [rcx+0x8]
   140003ee4:	jmp    0x140003e20
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	rex push rbp
   140003ef2:	push   rsi
   140003ef3:	push   rdi
   140003ef4:	push   r12
   140003ef6:	push   r13
   140003ef8:	push   r14
   140003efa:	push   r15
   140003efc:	sub    rsp,0x3d0
   140003f03:	lea    rbp,[rsp+0x30]
   140003f08:	mov    QWORD PTR [rbp+0x3e0],rbx
   140003f0f:	mov    rbx,rcx
   140003f12:	mov    rdi,rdx
   140003f15:	test   rdx,rdx
   140003f18:	je     0x14000455e
   140003f1e:	cmp    BYTE PTR [rdx],0x0
   140003f21:	je     0x14000455e
   140003f27:	mov    eax,DWORD PTR [rcx+0x1e4]
   140003f2d:	test   eax,eax
   140003f2f:	jne    0x140003fcd
   140003f35:	lea    edx,[rax+0x4]
   140003f38:	mov    rax,QWORD PTR [rip+0x2e449]        # 0x140032388
   140003f3f:	mov    ecx,DWORD PTR [rax]
   140003f41:	call   QWORD PTR [rip+0x2e561]        # 0x1400324a8
   140003f47:	test   al,al
   140003f49:	je     0x140003f8c
   140003f4b:	lea    rax,[rip+0x2f68e]        # 0x1400335e0
   140003f52:	mov    DWORD PTR [rbp+0x38],0x50d
   140003f59:	mov    QWORD PTR [rbp+0x30],rax
   140003f5d:	lea    r9,[rip+0x2f6ec]        # 0x140033650
   140003f64:	lea    rax,[rip+0x2f775]        # 0x1400336e0
   140003f6b:	mov    QWORD PTR [rsp+0x20],rdi
   140003f70:	mov    QWORD PTR [rbp+0x40],rax
   140003f74:	lea    r8,[rbp+0x30]
   140003f78:	mov    rax,QWORD PTR [rip+0x2e409]        # 0x140032388
   140003f7f:	mov    edx,0x4
   140003f84:	mov    ecx,DWORD PTR [rax]
   140003f86:	call   QWORD PTR [rip+0x2e50c]        # 0x140032498
   140003f8c:	call   QWORD PTR [rip+0x2e5f6]        # 0x140032588
   140003f92:	test   al,al
   140003f94:	je     0x140003fc1
   140003f96:	call   QWORD PTR [rip+0x2e4e4]        # 0x140032480
   140003f9c:	lea    rcx,[rip+0x2e809]        # 0x1400327ac
   140003fa3:	xorps  xmm0,xmm0
   140003fa6:	lea    rdx,[rbp+0x48]
   140003faa:	mov    DWORD PTR [rbp+0x50],eax
   140003fad:	mov    QWORD PTR [rbp+0x48],rcx
   140003fb1:	mov    r8b,0x1
   140003fb4:	xor    ecx,ecx
   140003fb6:	movdqu XMMWORD PTR [rbp+0x58],xmm0
   140003fbb:	call   QWORD PTR [rip+0x2e4b7]        # 0x140032478
   140003fc1:	mov    ecx,0x1
   140003fc6:	call   QWORD PTR [rip+0x2e27c]        # 0x140032248
   140003fcc:	int3   
   140003fcd:	cmp    BYTE PTR [rcx+0x1e3],0x0
   140003fd4:	je     0x140004028
   140003fd6:	add    rcx,0x1e8
   140003fdd:	call   0x14001b050
   140003fe2:	mov    rsi,rax
   140003fe5:	test   rax,rax
   140003fe8:	jne    0x140004000
   140003fea:	cmp    BYTE PTR [rax],al
   140003fec:	jne    0x140004000
   140003fee:	lea    rcx,[rip+0x2f70b]        # 0x140033700
   140003ff5:	call   QWORD PTR [rip+0x2e3b5]        # 0x1400323b0
   140003ffb:	jmp    0x14000455e
   140004000:	mov    rdx,rsi
   140004003:	mov    rcx,rdi
   140004006:	call   QWORD PTR [rip+0x2e554]        # 0x140032560
   14000400c:	test   eax,eax
   14000400e:	je     0x140004028
   140004010:	mov    r8,rsi
   140004013:	lea    rcx,[rip+0x2f766]        # 0x140033780
   14000401a:	mov    rdx,rdi
   14000401d:	call   QWORD PTR [rip+0x2e38d]        # 0x1400323b0
   140004023:	jmp    0x14000455e
   140004028:	lea    rcx,[rbx+0x168]
   14000402f:	mov    r8,rdi
   140004032:	lea    rdx,[rbp+0x3f8]
   140004039:	call   0x14001ce30
   14000403e:	mov    ecx,0xffff
   140004043:	xor    r13d,r13d
   140004046:	cmp    WORD PTR [rax],cx
   140004049:	jne    0x140004097
   14000404b:	lea    rcx,[rbx+0x168]
   140004052:	mov    r8,rdi
   140004055:	lea    rdx,[rbp+0x3e8]
   14000405c:	call   0x14001c980
   140004061:	movzx  r14d,WORD PTR [rbp+0x3e8]
   140004069:	mov    edx,DWORD PTR [rbx+0x150]
   14000406f:	cmp    edx,r14d
   140004072:	jg     0x14000408c
   140004074:	lea    r8d,[r14+0x1]
   140004078:	cmp    edx,r8d
   14000407b:	jge    0x14000408c
   14000407d:	sub    r8d,edx
   140004080:	lea    rcx,[rbx+0x150]
   140004087:	call   0x1400038c0
   14000408c:	mov    rax,QWORD PTR [rbx+0x158]
   140004093:	mov    DWORD PTR [rax+r14*4],r13d
   140004097:	lea    rcx,[rbx+0x168]
   14000409e:	mov    r8,rdi
   1400040a1:	lea    rdx,[rbp+0x3f0]
   1400040a8:	call   0x14001c980
   1400040ad:	movzx  r14d,WORD PTR [rbp+0x3f0]
   1400040b5:	mov    edx,DWORD PTR [rbx+0x150]
   1400040bb:	cmp    edx,r14d
   1400040be:	jg     0x1400040d8
   1400040c0:	lea    r8d,[r14+0x1]
   1400040c4:	cmp    edx,r8d
   1400040c7:	jge    0x1400040d8
   1400040c9:	sub    r8d,edx
   1400040cc:	lea    rcx,[rbx+0x150]
   1400040d3:	call   0x1400038c0
   1400040d8:	mov    rax,QWORD PTR [rbx+0x158]
   1400040df:	mov    ecx,DWORD PTR [rax+r14*4]
   1400040e3:	lea    rdx,[rax+r14*4]
   1400040e7:	lea    eax,[rcx+0x1]
   1400040ea:	mov    DWORD PTR [rdx],eax
   1400040ec:	test   ecx,ecx
   1400040ee:	jg     0x14000455e
   1400040f4:	mov    rcx,QWORD PTR [rip+0x4308d]        # 0x140047188
   1400040fb:	lea    rdx,[rip+0x2f3ea]        # 0x1400334ec
   140004102:	xor    r9d,r9d
   140004105:	mov    DWORD PTR [rsp+0x20],r13d
   14000410a:	xor    r8d,r8d
   14000410d:	mov    rax,QWORD PTR [rcx]
   140004110:	call   QWORD PTR [rax+0xc0]
   140004116:	mov    rcx,QWORD PTR [rip+0x4306b]        # 0x140047188
   14000411d:	lea    rdx,[rip+0x2f3d4]        # 0x1400334f8
   140004124:	xor    r9d,r9d
   140004127:	mov    DWORD PTR [rsp+0x20],r13d
   14000412c:	xor    r8d,r8d
   14000412f:	mov    esi,eax
   140004131:	mov    r10,QWORD PTR [rcx]
   140004134:	call   QWORD PTR [r10+0xc0]
   14000413b:	cmp    esi,eax
   14000413d:	cmovl  esi,eax
   140004140:	lea    eax,[rsi+0x20]
   140004143:	movsxd rcx,eax
   140004146:	and    rcx,0xfffffffffffffff0
   14000414a:	lea    rax,[rcx+0xf]
   14000414e:	cmp    rax,rcx
   140004151:	ja     0x14000415d
   140004153:	movabs rax,0xffffffffffffff0
   14000415d:	and    rax,0xfffffffffffffff0
   140004161:	call   0x1400263c0
   140004166:	mov    rcx,QWORD PTR [rip+0x4301b]        # 0x140047188
   14000416d:	lea    r12d,[rsi+0x1]
   140004171:	sub    rsp,rax
   140004174:	lea    rdx,[rip+0x2f371]        # 0x1400334ec
   14000417b:	xor    r8d,r8d
   14000417e:	mov    rax,QWORD PTR [rcx]
   140004181:	lea    r14,[rsp+0x30]
   140004186:	mov    DWORD PTR [rsp+0x20],r12d
   14000418b:	add    r14,0x10
   14000418f:	and    r14,0xffffffffffffffef
   140004193:	mov    r9,r14
   140004196:	call   QWORD PTR [rax+0xc0]
   14000419c:	test   eax,eax
   14000419e:	jne    0x1400041b2
   1400041a0:	lea    rcx,[rip+0x2f661]        # 0x140033808
   1400041a7:	call   QWORD PTR [rip+0x2e203]        # 0x1400323b0
   1400041ad:	jmp    0x14000455e
   1400041b2:	mov    rcx,rbx
   1400041b5:	call   0x140003960
   1400041ba:	mov    rdx,rdi
   1400041bd:	mov    QWORD PTR [rbp+0x0],r13
   1400041c1:	mov    rcx,rbx
   1400041c4:	movzx  r15d,al
   1400041c8:	call   0x140003b70
   1400041cd:	test   al,al
   1400041cf:	je     0x140004239
   1400041d1:	mov    r8,rdi
   1400041d4:	lea    rdx,[rbp+0x28]
   1400041d8:	mov    rcx,rbx
   1400041db:	call   0x140002db0
   1400041e0:	mov    rbx,rax
   1400041e3:	mov    rsi,QWORD PTR [rax]
   1400041e6:	cmp    QWORD PTR [rbp+0x0],r13
   1400041ea:	je     0x1400041f5
   1400041ec:	lea    rcx,[rbp+0x0]
   1400041f0:	call   0x14001b030
   1400041f5:	mov    QWORD PTR [rbp+0x0],rsi
   1400041f9:	mov    QWORD PTR [rbx],r13
   1400041fc:	cmp    QWORD PTR [rbp+0x28],r13
   140004200:	je     0x14000420b
   140004202:	lea    rcx,[rbp+0x28]
   140004206:	call   0x14001b030
   14000420b:	mov    rax,QWORD PTR [rbp+0x0]
   14000420f:	test   rax,rax
   140004212:	je     0x140004239
   140004214:	or     rcx,0xffffffffffffffff
   140004218:	nop    DWORD PTR [rax+rax*1+0x0]
   140004220:	inc    rcx
   140004223:	cmp    BYTE PTR [rax+rcx*1],r13b
   140004227:	jne    0x140004220
   140004229:	test   ecx,ecx
   14000422b:	jle    0x140004239
   14000422d:	lea    rcx,[rbp+0x0]
   140004231:	call   0x14001b050
   140004236:	mov    rdi,rax
   140004239:	mov    rcx,rdi
   14000423c:	call   QWORD PTR [rip+0x2e296]        # 0x1400324d8
   140004242:	test   al,al
   140004244:	je     0x14000431d
   14000424a:	mov    rcx,rdi
   14000424d:	call   QWORD PTR [rip+0x2e2a5]        # 0x1400324f8
   140004253:	test   rax,rax
   140004256:	je     0x1400042a9
   140004258:	lea    rdx,[rip+0x2f5d9]        # 0x140033838
   14000425f:	mov    rcx,rax
   140004262:	call   QWORD PTR [rip+0x2e2f8]        # 0x140032560
   140004268:	test   eax,eax
   14000426a:	jne    0x1400042a9
   14000426c:	mov    rcx,QWORD PTR [rip+0x42f15]        # 0x140047188
   140004273:	xor    r8d,r8d
   140004276:	add    rcx,0x8
   14000427a:	mov    rdx,rdi
   14000427d:	mov    rax,QWORD PTR [rcx]
   140004280:	call   QWORD PTR [rax+0x50]
   140004283:	test   al,al
   140004285:	je     0x1400042a9
   140004287:	mov    rcx,QWORD PTR [rip+0x42efa]        # 0x140047188
   14000428e:	lea    r8,[rip+0x2ef4f]        # 0x1400331e4
   140004295:	xor    r9d,r9d
   140004298:	mov    rdx,rdi
   14000429b:	mov    rax,QWORD PTR [rcx]
   14000429e:	call   QWORD PTR [rax+0x390]
   1400042a4:	jmp    0x14000454f
   1400042a9:	mov    rcx,QWORD PTR [rip+0x42ed8]        # 0x140047188
   1400042b0:	lea    r8,[rip+0x2ef2d]        # 0x1400331e4
   1400042b7:	mov    rdx,rdi
   1400042ba:	mov    rax,QWORD PTR [rcx]
   1400042bd:	call   QWORD PTR [rax+0xe0]
   1400042c3:	test   al,al
   1400042c5:	je     0x14000454f
   1400042cb:	mov    rcx,QWORD PTR [rip+0x42eb6]        # 0x140047188
   1400042d2:	lea    r8,[rip+0x2ef0b]        # 0x1400331e4
   1400042d9:	xor    r9d,r9d
   1400042dc:	mov    DWORD PTR [rsp+0x20],0x2
   1400042e4:	mov    rdx,rdi
   1400042e7:	mov    rax,QWORD PTR [rcx]
   1400042ea:	call   QWORD PTR [rax+0x68]
   1400042ed:	test   r15b,r15b
   1400042f0:	je     0x14000454f
   1400042f6:	mov    rcx,QWORD PTR [rip+0x42e8b]        # 0x140047188
   1400042fd:	lea    r8,[rip+0x2f0bc]        # 0x1400333c0
   140004304:	xor    r9d,r9d
   140004307:	mov    DWORD PTR [rsp+0x20],0x2
   14000430f:	mov    rdx,rdi
   140004312:	mov    rax,QWORD PTR [rcx]
   140004315:	call   QWORD PTR [rax+0x68]
   140004318:	jmp    0x14000454f
   14000431d:	lea    r8,[rbp+0x8]
   140004321:	mov    DWORD PTR [rbp+0x8],r13d
   140004325:	lea    rdx,[rip+0x2f510]        # 0x14003383c
   14000432c:	mov    QWORD PTR [rbp+0x10],r13
   140004330:	mov    rcx,r14
   140004333:	mov    QWORD PTR [rbp+0x18],r13
   140004337:	call   QWORD PTR [rip+0x2e293]        # 0x1400325d0
   14000433d:	mov    eax,DWORD PTR [rbp+0x8]
   140004340:	sub    eax,0x1
   140004343:	movsxd rsi,eax
   140004346:	js     0x140004434
   14000434c:	nop    DWORD PTR [rax+0x0]
   140004350:	mov    rax,QWORD PTR [rbp+0x10]
   140004354:	lea    r8,[rbp+0x70]
   140004358:	mov    r9d,0x104
   14000435e:	mov    rdx,rdi
   140004361:	mov    rbx,QWORD PTR [rax+rsi*8]
   140004365:	mov    rcx,rbx
   140004368:	call   QWORD PTR [rip+0x2e192]        # 0x140032500
   14000436e:	mov    r9,rdi
   140004371:	lea    rdx,[rip+0x2f4c8]        # 0x140033840
   140004378:	mov    r8,rbx
   14000437b:	lea    rcx,[rbp+0x180]
   140004382:	call   0x140001570
   140004387:	mov    rcx,QWORD PTR [rip+0x42dfa]        # 0x140047188
   14000438e:	lea    rdx,[rbp+0x70]
   140004392:	add    rcx,0x8
   140004396:	xor    r8d,r8d
   140004399:	mov    rax,QWORD PTR [rcx]
   14000439c:	call   QWORD PTR [rax+0x50]
   14000439f:	mov    rcx,QWORD PTR [rip+0x42de2]        # 0x140047188
   1400043a6:	test   al,al
   1400043a8:	je     0x1400043f0
   1400043aa:	mov    rax,QWORD PTR [rcx]
   1400043ad:	lea    r8,[rip+0x2ee30]        # 0x1400331e4
   1400043b4:	xor    r9d,r9d
   1400043b7:	mov    DWORD PTR [rsp+0x20],0x2
   1400043bf:	lea    rdx,[rbp+0x70]
   1400043c3:	call   QWORD PTR [rax+0x68]
   1400043c6:	test   r15b,r15b
   1400043c9:	je     0x14000442a
   1400043cb:	mov    rcx,QWORD PTR [rip+0x42db6]        # 0x140047188
   1400043d2:	lea    r8,[rip+0x2efe7]        # 0x1400333c0
   1400043d9:	xor    r9d,r9d
   1400043dc:	mov    DWORD PTR [rsp+0x20],0x2
   1400043e4:	lea    rdx,[rbp+0x70]
   1400043e8:	mov    rax,QWORD PTR [rcx]
   1400043eb:	call   QWORD PTR [rax+0x68]
   1400043ee:	jmp    0x14000442a
   1400043f0:	mov    rax,QWORD PTR [rcx+0x8]
   1400043f4:	lea    rdx,[rbp+0x180]
   1400043fb:	add    rcx,0x8
   1400043ff:	xor    r8d,r8d
   140004402:	call   QWORD PTR [rax+0x50]
   140004405:	test   al,al
   140004407:	je     0x14000442a
   140004409:	mov    rcx,QWORD PTR [rip+0x42d78]        # 0x140047188
   140004410:	lea    r8,[rip+0x2edcd]        # 0x1400331e4
   140004417:	xor    r9d,r9d
   14000441a:	lea    rdx,[rbp+0x180]
   140004421:	mov    rax,QWORD PTR [rcx]
   140004424:	call   QWORD PTR [rax+0x390]
   14000442a:	sub    rsi,0x1
   14000442e:	jns    0x140004350
   140004434:	mov    rcx,QWORD PTR [rip+0x42d4d]        # 0x140047188
   14000443b:	lea    rdx,[rip+0x2f0b6]        # 0x1400334f8
   140004442:	mov    r9,r14
   140004445:	mov    DWORD PTR [rsp+0x20],r12d
   14000444a:	xor    r8d,r8d
   14000444d:	mov    rax,QWORD PTR [rcx]
   140004450:	call   QWORD PTR [rax+0xc0]
   140004456:	test   eax,eax
   140004458:	jne    0x14000446c
   14000445a:	lea    rcx,[rip+0x2f3ef]        # 0x140033850
   140004461:	call   QWORD PTR [rip+0x2df49]        # 0x1400323b0
   140004467:	jmp    0x1400044f6
   14000446c:	lea    r8,[rbp+0x8]
   140004470:	mov    DWORD PTR [rbp+0x8],r13d
   140004474:	lea    rdx,[rip+0x2f3c1]        # 0x14003383c
   14000447b:	mov    rcx,r14
   14000447e:	call   QWORD PTR [rip+0x2e14c]        # 0x1400325d0
   140004484:	mov    eax,DWORD PTR [rbp+0x8]
   140004487:	sub    eax,0x1
   14000448a:	movsxd rbx,eax
   14000448d:	js     0x1400044f6
   14000448f:	nop
   140004490:	mov    rcx,QWORD PTR [rbp+0x10]
   140004494:	lea    r8,[rbp+0x290]
   14000449b:	mov    r9d,0x104
   1400044a1:	mov    rdx,rdi
   1400044a4:	mov    rcx,QWORD PTR [rcx+rbx*8]
   1400044a8:	call   QWORD PTR [rip+0x2e052]        # 0x140032500
   1400044ae:	mov    rcx,QWORD PTR [rip+0x42cd3]        # 0x140047188
   1400044b5:	lea    rdx,[rbp+0x290]
   1400044bc:	add    rcx,0x8
   1400044c0:	xor    r8d,r8d
   1400044c3:	mov    rax,QWORD PTR [rcx]
   1400044c6:	call   QWORD PTR [rax+0x50]
   1400044c9:	test   al,al
   1400044cb:	je     0x1400044f0
   1400044cd:	mov    rcx,QWORD PTR [rip+0x42cb4]        # 0x140047188
   1400044d4:	lea    r8,[rip+0x2efa5]        # 0x140033480
   1400044db:	xor    r9d,r9d
   1400044de:	mov    DWORD PTR [rsp+0x20],r13d
   1400044e3:	lea    rdx,[rbp+0x290]
   1400044ea:	mov    rax,QWORD PTR [rcx]
   1400044ed:	call   QWORD PTR [rax+0x68]
   1400044f0:	sub    rbx,0x1
   1400044f4:	jns    0x140004490
   1400044f6:	mov    eax,DWORD PTR [rbp+0x1c]
   1400044f9:	mov    rdx,QWORD PTR [rbp+0x10]
   1400044fd:	mov    DWORD PTR [rbp+0x8],r13d
   140004501:	test   eax,0xc0000000
   140004506:	jne    0x14000454f
   140004508:	test   rdx,rdx
   14000450b:	je     0x140004527
   14000450d:	mov    rax,QWORD PTR [rip+0x2de7c]        # 0x140032390
   140004514:	mov    rcx,QWORD PTR [rax]
   140004517:	mov    rax,QWORD PTR [rcx]
   14000451a:	call   QWORD PTR [rax+0x28]
   14000451d:	mov    eax,DWORD PTR [rbp+0x1c]
   140004520:	mov    rdx,r13
   140004523:	mov    QWORD PTR [rbp+0x10],rdx
   140004527:	mov    DWORD PTR [rbp+0x18],r13d
   14000452b:	test   eax,0xc0000000
   140004530:	jne    0x14000454f
   140004532:	test   rdx,rdx
   140004535:	je     0x14000454b
   140004537:	mov    rax,QWORD PTR [rip+0x2de52]        # 0x140032390
   14000453e:	mov    rcx,QWORD PTR [rax]
   140004541:	mov    rax,QWORD PTR [rcx]
   140004544:	call   QWORD PTR [rax+0x28]
   140004547:	mov    QWORD PTR [rbp+0x10],r13
   14000454b:	mov    DWORD PTR [rbp+0x18],r13d
   14000454f:	cmp    QWORD PTR [rbp+0x0],r13
   140004553:	je     0x14000455e
   140004555:	lea    rcx,[rbp+0x0]
   140004559:	call   0x14001b030
   14000455e:	mov    rbx,QWORD PTR [rbp+0x3e0]
   140004565:	lea    rsp,[rbp+0x3a0]
   14000456c:	pop    r15
   14000456e:	pop    r14
   140004570:	pop    r13
   140004572:	pop    r12
   140004574:	pop    rdi
   140004575:	pop    rsi
   140004576:	pop    rbp
   140004577:	ret    
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	mov    rcx,QWORD PTR [rcx+0x8]
   140004584:	jmp    0x140003ef0
   140004589:	int3   
   14000458a:	int3   
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	rex push rbx
   140004592:	sub    rsp,0x20
   140004596:	mov    rbx,rcx
   140004599:	mov    rcx,QWORD PTR [rip+0x42c18]        # 0x1400471b8
   1400045a0:	test   rcx,rcx
   1400045a3:	je     0x1400045b5
   1400045a5:	mov    rax,QWORD PTR [rcx]
   1400045a8:	movzx  edx,BYTE PTR [rbx+0xf8]
   1400045af:	call   QWORD PTR [rax+0xb0]
   1400045b5:	cmp    QWORD PTR [rip+0x42c0b],0x0        # 0x1400471c8
   1400045bd:	je     0x1400045eb
   1400045bf:	cmp    DWORD PTR [rbx+0x13c],0x0
   1400045c6:	jg     0x1400045eb
   1400045c8:	cmp    DWORD PTR [rbx+0x1d8],0x0
   1400045cf:	jle    0x1400045de
   1400045d1:	mov    BYTE PTR [rbx+0x1dc],0x1
   1400045d8:	add    rsp,0x20
   1400045dc:	pop    rbx
   1400045dd:	ret    
   1400045de:	mov    rcx,rbx
   1400045e1:	add    rsp,0x20
   1400045e5:	pop    rbx
   1400045e6:	jmp    0x140003d20
   1400045eb:	add    rsp,0x20
   1400045ef:	pop    rbx
   1400045f0:	ret    
   1400045f1:	int3   
   1400045f2:	int3   
   1400045f3:	int3   
   1400045f4:	int3   
   1400045f5:	int3   
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	int3   
   1400045f9:	int3   
   1400045fa:	int3   
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	sub    rsp,0x28
   140004604:	mov    ecx,DWORD PTR [rip+0x42a3a]        # 0x140047044
   14000460a:	mov    edx,0x1
   14000460f:	call   QWORD PTR [rip+0x2de93]        # 0x1400324a8
   140004615:	test   al,al
   140004617:	je     0x140004631
   140004619:	mov    ecx,DWORD PTR [rip+0x42a25]        # 0x140047044
   14000461f:	lea    r8,[rip+0x2f4e2]        # 0x140033b08
   140004626:	mov    edx,0x1
   14000462b:	call   QWORD PTR [rip+0x2de6f]        # 0x1400324a0
   140004631:	mov    ecx,DWORD PTR [rip+0x42a0d]        # 0x140047044
   140004637:	mov    edx,0x1
   14000463c:	call   QWORD PTR [rip+0x2de66]        # 0x1400324a8
   140004642:	test   al,al
   140004644:	je     0x14000465e
   140004646:	mov    ecx,DWORD PTR [rip+0x429f8]        # 0x140047044
   14000464c:	lea    r8,[rip+0x2f4dd]        # 0x140033b30
   140004653:	mov    edx,0x1
   140004658:	call   QWORD PTR [rip+0x2de42]        # 0x1400324a0
   14000465e:	mov    ecx,DWORD PTR [rip+0x429e0]        # 0x140047044
   140004664:	mov    edx,0x1
   140004669:	call   QWORD PTR [rip+0x2de39]        # 0x1400324a8
   14000466f:	test   al,al
   140004671:	je     0x14000468b
   140004673:	mov    ecx,DWORD PTR [rip+0x429cb]        # 0x140047044
   140004679:	lea    r8,[rip+0x2f4c0]        # 0x140033b40
   140004680:	mov    edx,0x1
   140004685:	call   QWORD PTR [rip+0x2de15]        # 0x1400324a0
   14000468b:	mov    ecx,DWORD PTR [rip+0x429b3]        # 0x140047044
   140004691:	mov    edx,0x1
   140004696:	call   QWORD PTR [rip+0x2de0c]        # 0x1400324a8
   14000469c:	test   al,al
   14000469e:	je     0x1400046b8
   1400046a0:	mov    ecx,DWORD PTR [rip+0x4299e]        # 0x140047044
   1400046a6:	lea    r8,[rip+0x2f4ab]        # 0x140033b58
   1400046ad:	mov    edx,0x1
   1400046b2:	call   QWORD PTR [rip+0x2dde8]        # 0x1400324a0
   1400046b8:	mov    ecx,DWORD PTR [rip+0x42986]        # 0x140047044
   1400046be:	mov    edx,0x1
   1400046c3:	call   QWORD PTR [rip+0x2dddf]        # 0x1400324a8
   1400046c9:	test   al,al
   1400046cb:	je     0x1400046ea
   1400046cd:	mov    ecx,DWORD PTR [rip+0x42971]        # 0x140047044
   1400046d3:	lea    r8,[rip+0x2f4b6]        # 0x140033b90
   1400046da:	mov    edx,0x1
   1400046df:	add    rsp,0x28
   1400046e3:	rex.W jmp QWORD PTR [rip+0x2ddb6]        # 0x1400324a0
   1400046ea:	add    rsp,0x28
   1400046ee:	ret    
   1400046ef:	int3   
   1400046f0:	mov    rax,rsp
   1400046f3:	push   rsi
   1400046f4:	push   r14
   1400046f6:	sub    rsp,0x78
   1400046fa:	mov    QWORD PTR [rax+0x8],rbx
   1400046fe:	xor    r14d,r14d
   140004701:	mov    QWORD PTR [rax-0x18],rbp
   140004705:	xor    ebp,ebp
   140004707:	mov    QWORD PTR [rax-0x20],rdi
   14000470b:	xor    edi,edi
   14000470d:	mov    QWORD PTR [rax-0x28],r12
   140004711:	xor    r12b,r12b
   140004714:	mov    QWORD PTR [rax-0x30],r13
   140004718:	mov    r13,rdx
   14000471b:	mov    QWORD PTR [rax-0x38],r15
   14000471f:	mov    r15,rcx
   140004722:	mov    DWORD PTR [rax-0x60],edi
   140004725:	mov    QWORD PTR [rax-0x68],r14
   140004729:	mov    QWORD PTR [rax-0x58],r14
   14000472d:	mov    QWORD PTR [rax-0x50],rbp
   140004731:	mov    BYTE PTR [rsp+0xa0],0x0
   140004739:	call   QWORD PTR [rip+0x2dd79]        # 0x1400324b8
   14000473f:	mov    rcx,rax
   140004742:	mov    rdx,QWORD PTR [rax]
   140004745:	call   QWORD PTR [rdx+0x38]
   140004748:	cmp    eax,0x1
   14000474b:	jne    0x14000475a
   14000474d:	call   0x140004600
   140004752:	xor    sil,sil
   140004755:	jmp    0x1400049bf
   14000475a:	mov    esi,0x1
   14000475f:	call   QWORD PTR [rip+0x2dd53]        # 0x1400324b8
   140004765:	mov    rcx,rax
   140004768:	mov    rdx,QWORD PTR [rax]
   14000476b:	call   QWORD PTR [rdx+0x38]
   14000476e:	cmp    eax,esi
   140004770:	jle    0x14000489d
   140004776:	call   QWORD PTR [rip+0x2dd3c]        # 0x1400324b8
   14000477c:	mov    edx,esi
   14000477e:	mov    rcx,rax
   140004781:	mov    r8,QWORD PTR [rax]
   140004784:	call   QWORD PTR [r8+0x48]
   140004788:	mov    rcx,rax
   14000478b:	lea    rdx,[rip+0x2f446]        # 0x140033bd8
   140004792:	mov    rbx,rax
   140004795:	call   QWORD PTR [rip+0x2ddc5]        # 0x140032560
   14000479b:	test   eax,eax
   14000479d:	je     0x14000474d
   14000479f:	lea    rdx,[rip+0x2f436]        # 0x140033bdc
   1400047a6:	mov    rcx,rbx
   1400047a9:	call   QWORD PTR [rip+0x2ddb1]        # 0x140032560
   1400047af:	test   eax,eax
   1400047b1:	jne    0x1400047c0
   1400047b3:	mov    BYTE PTR [rsp+0xa0],0x1
   1400047bb:	jmp    0x140004884
   1400047c0:	lea    rdx,[rip+0x2f419]        # 0x140033be0
   1400047c7:	mov    rcx,rbx
   1400047ca:	call   QWORD PTR [rip+0x2dd90]        # 0x140032560
   1400047d0:	test   eax,eax
   1400047d2:	jne    0x1400047de
   1400047d4:	mov    BYTE PTR [r13+0x0],0x1
   1400047d9:	jmp    0x140004884
   1400047de:	lea    rdx,[rip+0x2f3ff]        # 0x140033be4
   1400047e5:	mov    rcx,rbx
   1400047e8:	call   QWORD PTR [rip+0x2dd72]        # 0x140032560
   1400047ee:	test   eax,eax
   1400047f0:	jne    0x1400047fa
   1400047f2:	mov    r12b,0x1
   1400047f5:	jmp    0x140004884
   1400047fa:	mov    rdx,rbx
   1400047fd:	mov    QWORD PTR [rsp+0xa8],0x0
   140004809:	lea    rcx,[rsp+0xa8]
   140004811:	call   0x14001b3a0
   140004816:	movsxd rbx,edi
   140004819:	cmp    edi,ebp
   14000481b:	jne    0x14000483e
   14000481d:	mov    edx,0x1
   140004822:	lea    rcx,[rsp+0x30]
   140004827:	call   0x140013420
   14000482c:	mov    r14,QWORD PTR [rsp+0x30]
   140004831:	mov    ebp,DWORD PTR [rsp+0x38]
   140004835:	mov    edi,DWORD PTR [rsp+0x28]
   140004839:	mov    QWORD PTR [rsp+0x20],r14
   14000483e:	inc    edi
   140004840:	lea    rbx,[r14+rbx*8]
   140004844:	mov    DWORD PTR [rsp+0x28],edi
   140004848:	test   rbx,rbx
   14000484b:	je     0x14000486c
   14000484d:	lea    rcx,[rsp+0xa8]
   140004855:	mov    QWORD PTR [rbx],0x0
   14000485c:	call   0x14001b050
   140004861:	mov    rdx,rax
   140004864:	mov    rcx,rbx
   140004867:	call   0x14001b3a0
   14000486c:	cmp    QWORD PTR [rsp+0xa8],0x0
   140004875:	je     0x140004884
   140004877:	lea    rcx,[rsp+0xa8]
   14000487f:	call   0x14001b030
   140004884:	inc    esi
   140004886:	call   QWORD PTR [rip+0x2dc2c]        # 0x1400324b8
   14000488c:	mov    rcx,rax
   14000488f:	mov    rdx,QWORD PTR [rax]
   140004892:	call   QWORD PTR [rdx+0x38]
   140004895:	cmp    esi,eax
   140004897:	jl     0x140004776
   14000489d:	test   edi,edi
   14000489f:	jle    0x1400048ec
   1400048a1:	mov    rsi,r14
   1400048a4:	mov    ebp,edi
   1400048a6:	movzx  r14d,BYTE PTR [rsp+0xa0]
   1400048af:	nop
   1400048b0:	cmp    BYTE PTR [r13+0x0],0x0
   1400048b5:	jne    0x1400048c0
   1400048b7:	test   r12b,r12b
   1400048ba:	jne    0x1400048c0
   1400048bc:	xor    ebx,ebx
   1400048be:	jmp    0x1400048c2
   1400048c0:	mov    bl,0x1
   1400048c2:	mov    rcx,rsi
   1400048c5:	call   0x14001b050
   1400048ca:	mov    rcx,rax
   1400048cd:	mov    r9,r15
   1400048d0:	movzx  r8d,bl
   1400048d4:	movzx  edx,r14b
   1400048d8:	call   0x140003bb0
   1400048dd:	add    rsi,0x8
   1400048e1:	sub    rbp,0x1
   1400048e5:	jne    0x1400048b0
   1400048e7:	mov    r14,QWORD PTR [rsp+0x20]
   1400048ec:	cmp    DWORD PTR [r15],0x0
   1400048f0:	jne    0x14000492b
   1400048f2:	mov    ecx,DWORD PTR [rip+0x4274c]        # 0x140047044
   1400048f8:	mov    edx,0x2
   1400048fd:	call   QWORD PTR [rip+0x2dba5]        # 0x1400324a8
   140004903:	test   al,al
   140004905:	je     0x1400049b7
   14000490b:	mov    ecx,DWORD PTR [rip+0x42733]        # 0x140047044
   140004911:	lea    r8,[rip+0x2f2d0]        # 0x140033be8
   140004918:	mov    edx,0x2
   14000491d:	call   QWORD PTR [rip+0x2db7d]        # 0x1400324a0
   140004923:	xor    sil,sil
   140004926:	jmp    0x1400049bf
   14000492b:	test   r12b,r12b
   14000492e:	je     0x1400049bc
   140004934:	mov    ecx,DWORD PTR [rip+0x4270a]        # 0x140047044
   14000493a:	mov    edx,0x1
   14000493f:	call   QWORD PTR [rip+0x2db63]        # 0x1400324a8
   140004945:	test   al,al
   140004947:	je     0x140004961
   140004949:	mov    ecx,DWORD PTR [rip+0x426f5]        # 0x140047044
   14000494f:	lea    r8,[rip+0x2f2b2]        # 0x140033c08
   140004956:	mov    edx,0x1
   14000495b:	call   QWORD PTR [rip+0x2db3f]        # 0x1400324a0
   140004961:	xor    ebx,ebx
   140004963:	cmp    DWORD PTR [r15],ebx
   140004966:	jle    0x1400049b7
   140004968:	nop    DWORD PTR [rax+rax*1+0x0]
   140004970:	mov    ecx,DWORD PTR [rip+0x426ce]        # 0x140047044
   140004976:	mov    edx,0x1
   14000497b:	call   QWORD PTR [rip+0x2db27]        # 0x1400324a8
   140004981:	test   al,al
   140004983:	je     0x1400049b0
   140004985:	mov    rax,QWORD PTR [r15+0x8]
   140004989:	movsxd rcx,ebx
   14000498c:	lea    rcx,[rax+rcx*8]
   140004990:	call   0x14001b050
   140004995:	mov    ecx,DWORD PTR [rip+0x426a9]        # 0x140047044
   14000499b:	lea    r8,[rip+0x2f286]        # 0x140033c28
   1400049a2:	mov    r9,rax
   1400049a5:	mov    edx,0x1
   1400049aa:	call   QWORD PTR [rip+0x2daf0]        # 0x1400324a0
   1400049b0:	inc    ebx
   1400049b2:	cmp    ebx,DWORD PTR [r15]
   1400049b5:	jl     0x140004970
   1400049b7:	xor    sil,sil
   1400049ba:	jmp    0x1400049bf
   1400049bc:	mov    sil,0x1
   1400049bf:	mov    r15,QWORD PTR [rsp+0x50]
   1400049c4:	lea    eax,[rdi-0x1]
   1400049c7:	mov    r13,QWORD PTR [rsp+0x58]
   1400049cc:	mov    r12,QWORD PTR [rsp+0x60]
   1400049d1:	mov    rbp,QWORD PTR [rsp+0x70]
   1400049d6:	movsxd rdi,eax
   1400049d9:	test   eax,eax
   1400049db:	js     0x1400049f9
   1400049dd:	lea    rbx,[r14+rdi*8]
   1400049e1:	cmp    QWORD PTR [rbx],0x0
   1400049e5:	je     0x1400049ef
   1400049e7:	mov    rcx,rbx
   1400049ea:	call   0x14001b030
   1400049ef:	sub    rbx,0x8
   1400049f3:	sub    rdi,0x1
   1400049f7:	jns    0x1400049e1
   1400049f9:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400049fd:	mov    rdi,QWORD PTR [rsp+0x68]
   140004a02:	and    ebx,0xc0000000
   140004a08:	jne    0x140004a25
   140004a0a:	test   r14,r14
   140004a0d:	je     0x140004a25
   140004a0f:	mov    rax,QWORD PTR [rip+0x2d97a]        # 0x140032390
   140004a16:	mov    rdx,r14
   140004a19:	mov    rcx,QWORD PTR [rax]
   140004a1c:	mov    rax,QWORD PTR [rcx]
   140004a1f:	call   QWORD PTR [rax+0x28]
   140004a22:	xor    r14d,r14d
   140004a25:	test   ebx,ebx
   140004a27:	mov    rbx,QWORD PTR [rsp+0x90]
   140004a2f:	jne    0x140004a4a
   140004a31:	test   r14,r14
   140004a34:	je     0x140004a4a
   140004a36:	mov    rcx,QWORD PTR [rip+0x2d953]        # 0x140032390
   140004a3d:	mov    rdx,r14
   140004a40:	mov    rcx,QWORD PTR [rcx]
   140004a43:	mov    r8,QWORD PTR [rcx]
   140004a46:	call   QWORD PTR [r8+0x28]
   140004a4a:	movzx  eax,sil
   140004a4e:	add    rsp,0x78
   140004a52:	pop    r14
   140004a54:	pop    rsi
   140004a55:	ret    
   140004a56:	int3   
   140004a57:	int3   
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    QWORD PTR [rsp+0x8],rbx
   140004a65:	push   rdi
   140004a66:	sub    rsp,0x20
   140004a6a:	mov    eax,DWORD PTR [rcx]
   140004a6c:	mov    rdi,rcx
   140004a6f:	sub    eax,0x1
   140004a72:	movsxd rbx,eax
   140004a75:	js     0x140004a9a
   140004a77:	nop    WORD PTR [rax+rax*1+0x0]
   140004a80:	mov    rax,QWORD PTR [rdi+0x8]
   140004a84:	cmp    QWORD PTR [rax+rbx*8],0x0
   140004a89:	lea    rcx,[rax+rbx*8]
   140004a8d:	je     0x140004a94
   140004a8f:	call   0x14001b030
   140004a94:	sub    rbx,0x1
   140004a98:	jns    0x140004a80
   140004a9a:	xor    ebx,ebx
   140004a9c:	mov    DWORD PTR [rdi],ebx
   140004a9e:	test   DWORD PTR [rdi+0x14],0xc0000000
   140004aa5:	jne    0x140004ac7
   140004aa7:	mov    rdx,QWORD PTR [rdi+0x8]
   140004aab:	test   rdx,rdx
   140004aae:	je     0x140004ac4
   140004ab0:	mov    rax,QWORD PTR [rip+0x2d8d9]        # 0x140032390
   140004ab7:	mov    rcx,QWORD PTR [rax]
   140004aba:	mov    rax,QWORD PTR [rcx]
   140004abd:	call   QWORD PTR [rax+0x28]
   140004ac0:	mov    QWORD PTR [rdi+0x8],rbx
   140004ac4:	mov    DWORD PTR [rdi+0x10],ebx
   140004ac7:	mov    rbx,QWORD PTR [rsp+0x30]
   140004acc:	add    rsp,0x20
   140004ad0:	pop    rdi
   140004ad1:	ret    
   140004ad2:	int3   
   140004ad3:	int3   
   140004ad4:	int3   
   140004ad5:	int3   
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	int3   
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	int3   
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	xor    eax,eax
   140004ae2:	ret    
   140004ae3:	int3   
   140004ae4:	int3   
   140004ae5:	int3   
   140004ae6:	int3   
   140004ae7:	int3   
   140004ae8:	int3   
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	mov    rcx,rdx
   140004af3:	mov    rdx,r8
   140004af6:	jmp    0x14000bf90
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	mov    QWORD PTR [rsp+0x10],rdx
   140004b05:	push   rbx
   140004b06:	sub    rsp,0x20
   140004b0a:	mov    rax,rdx
   140004b0d:	mov    rbx,rcx
   140004b10:	mov    rcx,rax
   140004b13:	mov    rdx,r8
   140004b16:	call   0x14000bf90
   140004b1b:	mov    edx,0x1
   140004b20:	lea    rcx,[rsp+0x38]
   140004b25:	call   0x140024f20
   140004b2a:	inc    DWORD PTR [rbx+0x10]
   140004b2d:	add    rsp,0x20
   140004b31:	pop    rbx
   140004b32:	ret    
   140004b33:	int3   
   140004b34:	int3   
   140004b35:	int3   
   140004b36:	int3   
   140004b37:	int3   
   140004b38:	int3   
   140004b39:	int3   
   140004b3a:	int3   
   140004b3b:	int3   
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	int3   
   140004b3f:	int3   
   140004b40:	rex push rbp
   140004b42:	push   r14
   140004b44:	push   r15
   140004b46:	sub    rsp,0x450
   140004b4d:	lea    rbp,[rsp+0x30]
   140004b52:	mov    rcx,QWORD PTR [rip+0x4262f]        # 0x140047188
   140004b59:	mov    r14,r9
   140004b5c:	mov    QWORD PTR [rbp+0x440],rbx
   140004b63:	mov    r15,rdx
   140004b66:	mov    QWORD PTR [rbp+0x448],rsi
   140004b6d:	xor    r9d,r9d
   140004b70:	mov    QWORD PTR [rbp+0x450],rdi
   140004b77:	mov    rdi,r8
   140004b7a:	mov    rax,QWORD PTR [rcx]
   140004b7d:	xor    r8d,r8d
   140004b80:	mov    QWORD PTR [rbp+0x458],r12
   140004b87:	mov    rdx,rdi
   140004b8a:	xor    r12d,r12d
   140004b8d:	mov    DWORD PTR [rsp+0x20],r12d
   140004b92:	call   QWORD PTR [rax+0xc0]
   140004b98:	mov    edx,eax
   140004b9a:	lea    ecx,[rax+0x20]
   140004b9d:	movsxd r8,ecx
   140004ba0:	and    r8,0xfffffffffffffff0
   140004ba4:	lea    rax,[r8+0xf]
   140004ba8:	cmp    rax,r8
   140004bab:	ja     0x140004bb7
   140004bad:	movabs rax,0xffffffffffffff0
   140004bb7:	and    rax,0xfffffffffffffff0
   140004bbb:	call   0x1400263c0
   140004bc0:	mov    rcx,QWORD PTR [rip+0x425c1]        # 0x140047188
   140004bc7:	sub    rsp,rax
   140004bca:	lea    eax,[rdx+0x1]
   140004bcd:	xor    r8d,r8d
   140004bd0:	mov    rdx,rdi
   140004bd3:	mov    r10,QWORD PTR [rcx]
   140004bd6:	lea    rbx,[rsp+0x30]
   140004bdb:	add    rbx,0x10
   140004bdf:	mov    DWORD PTR [rsp+0x20],eax
   140004be3:	and    rbx,0xffffffffffffffef
   140004be7:	mov    r9,rbx
   140004bea:	call   QWORD PTR [r10+0xc0]
   140004bf1:	test   eax,eax
   140004bf3:	jne    0x140004c0a
   140004bf5:	mov    rdx,rdi
   140004bf8:	lea    rcx,[rip+0x2ec99]        # 0x140033898
   140004bff:	call   QWORD PTR [rip+0x2d7ab]        # 0x1400323b0
   140004c05:	jmp    0x140004cfe
   140004c0a:	lea    r8,[rbp+0x0]
   140004c0e:	mov    DWORD PTR [rbp+0x0],r12d
   140004c12:	lea    rdx,[rip+0x2ec23]        # 0x14003383c
   140004c19:	mov    QWORD PTR [rbp+0x8],r12
   140004c1d:	mov    rcx,rbx
   140004c20:	mov    QWORD PTR [rbp+0x10],r12
   140004c24:	call   QWORD PTR [rip+0x2d9a6]        # 0x1400325d0
   140004c2a:	mov    esi,r12d
   140004c2d:	cmp    DWORD PTR [rbp+0x0],r12d
   140004c31:	jle    0x140004cad
   140004c33:	mov    rdi,r12
   140004c36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004c40:	mov    rax,QWORD PTR [rbp+0x8]
   140004c44:	lea    r8,[rbp+0x20]
   140004c48:	mov    r9d,0x200
   140004c4e:	mov    rdx,r14
   140004c51:	mov    rbx,QWORD PTR [rdi+rax*1]
   140004c55:	mov    rcx,rbx
   140004c58:	call   QWORD PTR [rip+0x2d8a2]        # 0x140032500
   140004c5e:	mov    r9,r14
   140004c61:	lea    rdx,[rip+0x2ebd8]        # 0x140033840
   140004c68:	mov    r8,rbx
   140004c6b:	lea    rcx,[rbp+0x220]
   140004c72:	call   0x1400015a0
   140004c77:	mov    rcx,QWORD PTR [rip+0x4250a]        # 0x140047188
   140004c7e:	lea    rdx,[rbp+0x20]
   140004c82:	mov    r8,r15
   140004c85:	mov    rax,QWORD PTR [rcx]
   140004c88:	call   QWORD PTR [rax+0x70]
   140004c8b:	mov    rcx,QWORD PTR [rip+0x424f6]        # 0x140047188
   140004c92:	lea    rdx,[rbp+0x220]
   140004c99:	mov    r8,r15
   140004c9c:	mov    rax,QWORD PTR [rcx]
   140004c9f:	call   QWORD PTR [rax+0x70]
   140004ca2:	inc    esi
   140004ca4:	lea    rdi,[rdi+0x8]
   140004ca8:	cmp    esi,DWORD PTR [rbp+0x0]
   140004cab:	jl     0x140004c40
   140004cad:	mov    eax,DWORD PTR [rbp+0x14]
   140004cb0:	mov    rdx,QWORD PTR [rbp+0x8]
   140004cb4:	mov    DWORD PTR [rbp+0x0],r12d
   140004cb8:	test   eax,0xc0000000
   140004cbd:	jne    0x140004cfe
   140004cbf:	test   rdx,rdx
   140004cc2:	je     0x140004cde
   140004cc4:	mov    rax,QWORD PTR [rip+0x2d6c5]        # 0x140032390
   140004ccb:	mov    rcx,QWORD PTR [rax]
   140004cce:	mov    rax,QWORD PTR [rcx]
   140004cd1:	call   QWORD PTR [rax+0x28]
   140004cd4:	mov    eax,DWORD PTR [rbp+0x14]
   140004cd7:	mov    rdx,r12
   140004cda:	mov    QWORD PTR [rbp+0x8],rdx
   140004cde:	mov    DWORD PTR [rbp+0x10],r12d
   140004ce2:	test   eax,0xc0000000
   140004ce7:	jne    0x140004cfe
   140004ce9:	test   rdx,rdx
   140004cec:	je     0x140004cfe
   140004cee:	mov    rax,QWORD PTR [rip+0x2d69b]        # 0x140032390
   140004cf5:	mov    rcx,QWORD PTR [rax]
   140004cf8:	mov    rax,QWORD PTR [rcx]
   140004cfb:	call   QWORD PTR [rax+0x28]
   140004cfe:	mov    rbx,QWORD PTR [rbp+0x440]
   140004d05:	mov    rsi,QWORD PTR [rbp+0x448]
   140004d0c:	mov    rdi,QWORD PTR [rbp+0x450]
   140004d13:	mov    r12,QWORD PTR [rbp+0x458]
   140004d1a:	lea    rsp,[rbp+0x420]
   140004d21:	pop    r15
   140004d23:	pop    r14
   140004d25:	pop    rbp
   140004d26:	ret    
   140004d27:	int3   
   140004d28:	int3   
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	mov    rcx,QWORD PTR [rcx+0x8]
   140004d34:	jmp    0x14000b2c0
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	sub    rsp,0x68
   140004d44:	test   dl,dl
   140004d46:	je     0x140004d51
   140004d48:	lock inc DWORD PTR [rcx+0x1e4]
   140004d4f:	jmp    0x140004d58
   140004d51:	lock dec DWORD PTR [rcx+0x1e4]
   140004d58:	mov    eax,DWORD PTR [rcx+0x1e4]
   140004d5e:	test   eax,eax
   140004d60:	jns    0x140004e03
   140004d66:	mov    rax,QWORD PTR [rip+0x2d61b]        # 0x140032388
   140004d6d:	mov    edx,0x4
   140004d72:	mov    ecx,DWORD PTR [rax]
   140004d74:	call   QWORD PTR [rip+0x2d72e]        # 0x1400324a8
   140004d7a:	test   al,al
   140004d7c:	je     0x140004dbe
   140004d7e:	lea    rax,[rip+0x2e85b]        # 0x1400335e0
   140004d85:	mov    DWORD PTR [rsp+0x28],0x4ee
   140004d8d:	mov    QWORD PTR [rsp+0x20],rax
   140004d92:	lea    r9,[rip+0x2e7d7]        # 0x140033570
   140004d99:	lea    rax,[rip+0x2e810]        # 0x1400335b0
   140004da0:	mov    edx,0x4
   140004da5:	mov    QWORD PTR [rsp+0x30],rax
   140004daa:	lea    r8,[rsp+0x20]
   140004daf:	mov    rax,QWORD PTR [rip+0x2d5d2]        # 0x140032388
   140004db6:	mov    ecx,DWORD PTR [rax]
   140004db8:	call   QWORD PTR [rip+0x2d6da]        # 0x140032498
   140004dbe:	call   QWORD PTR [rip+0x2d7c4]        # 0x140032588
   140004dc4:	test   al,al
   140004dc6:	je     0x140004df7
   140004dc8:	call   QWORD PTR [rip+0x2d6b2]        # 0x140032480
   140004dce:	lea    rcx,[rip+0x2d9d7]        # 0x1400327ac
   140004dd5:	xorps  xmm0,xmm0
   140004dd8:	lea    rdx,[rsp+0x38]
   140004ddd:	mov    DWORD PTR [rsp+0x40],eax
   140004de1:	mov    QWORD PTR [rsp+0x38],rcx
   140004de6:	mov    r8b,0x1
   140004de9:	xor    ecx,ecx
   140004deb:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140004df1:	call   QWORD PTR [rip+0x2d681]        # 0x140032478
   140004df7:	mov    ecx,0x1
   140004dfc:	call   QWORD PTR [rip+0x2d446]        # 0x140032248
   140004e02:	int3   
   140004e03:	add    rsp,0x68
   140004e07:	ret    
   140004e08:	int3   
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	mov    rcx,QWORD PTR [rcx+0x8]
   140004e14:	jmp    0x140004d40
   140004e19:	int3   
   140004e1a:	int3   
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	mov    QWORD PTR [rsp+0x8],rbx
   140004e25:	mov    QWORD PTR [rsp+0x10],rbp
   140004e2a:	mov    QWORD PTR [rsp+0x18],rsi
   140004e2f:	push   rdi
   140004e30:	sub    rsp,0x430
   140004e37:	mov    rbx,QWORD PTR [rcx+0xe0]
   140004e3e:	mov    rsi,r8
   140004e41:	mov    rbp,rdx
   140004e44:	mov    rdi,rcx
   140004e47:	test   rbx,rbx
   140004e4a:	je     0x140004e5c
   140004e4c:	mov    rcx,rbx
   140004e4f:	call   0x14001dc50
   140004e54:	mov    rcx,rbx
   140004e57:	call   0x14001dc90
   140004e5c:	mov    r8d,0x200
   140004e62:	mov    QWORD PTR [rdi+0xe0],rbp
   140004e69:	mov    rdx,rsi
   140004e6c:	lea    rcx,[rsp+0x30]
   140004e71:	call   QWORD PTR [rip+0x2d6e1]        # 0x140032558
   140004e77:	mov    dl,0x5c
   140004e79:	lea    rcx,[rsp+0x30]
   140004e7e:	call   QWORD PTR [rip+0x2d64c]        # 0x1400324d0
   140004e84:	lea    rcx,[rdi+0x110]
   140004e8b:	lea    rdx,[rsp+0x30]
   140004e90:	call   0x14001aae0
   140004e95:	mov    rcx,rsi
   140004e98:	call   QWORD PTR [rip+0x2d66a]        # 0x140032508
   140004e9e:	mov    rdx,rax
   140004ea1:	lea    rcx,[rdi+0x120]
   140004ea8:	call   0x14001aae0
   140004ead:	mov    dl,0x2f
   140004eaf:	lea    rcx,[rsp+0x30]
   140004eb4:	call   QWORD PTR [rip+0x2d616]        # 0x1400324d0
   140004eba:	lea    r9,[rsp+0x230]
   140004ec2:	mov    BYTE PTR [rsp+0x28],0x0
   140004ec7:	lea    r8,[rip+0x2daba]        # 0x140032988
   140004ece:	mov    DWORD PTR [rsp+0x20],0x200
   140004ed6:	lea    rdx,[rip+0x2dab7]        # 0x140032994
   140004edd:	lea    rcx,[rsp+0x30]
   140004ee2:	call   QWORD PTR [rip+0x2d648]        # 0x140032530
   140004ee8:	test   al,al
   140004eea:	jne    0x140004efc
   140004eec:	mov    rdx,rsi
   140004eef:	lea    rcx,[rip+0x2daaa]        # 0x1400329a0
   140004ef6:	call   QWORD PTR [rip+0x2d4b4]        # 0x1400323b0
   140004efc:	mov    dl,0x5c
   140004efe:	lea    rcx,[rsp+0x230]
   140004f06:	call   QWORD PTR [rip+0x2d5c4]        # 0x1400324d0
   140004f0c:	lea    rcx,[rdi+0x128]
   140004f13:	lea    rdx,[rsp+0x230]
   140004f1b:	call   0x14001aae0
   140004f20:	lea    r11,[rsp+0x430]
   140004f28:	mov    rbx,QWORD PTR [r11+0x10]
   140004f2c:	mov    rbp,QWORD PTR [r11+0x18]
   140004f30:	mov    rsi,QWORD PTR [r11+0x20]
   140004f34:	mov    rsp,r11
   140004f37:	pop    rdi
   140004f38:	ret    
   140004f39:	int3   
   140004f3a:	int3   
   140004f3b:	int3   
   140004f3c:	int3   
   140004f3d:	int3   
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	mov    rcx,QWORD PTR [rcx+0x8]
   140004f44:	jmp    0x14000b430
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	mov    rax,QWORD PTR [rcx+0x8]
   140004f54:	mov    BYTE PTR [rax+0x145],dl
   140004f5a:	ret    
   140004f5b:	int3   
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	mov    QWORD PTR [rsp+0x8],rbx
   140004f65:	mov    QWORD PTR [rsp+0x10],rsi
   140004f6a:	mov    QWORD PTR [rsp+0x18],rdi
   140004f6f:	push   rbp
   140004f70:	lea    rbp,[rsp-0x960]
   140004f78:	sub    rsp,0xa60
   140004f7f:	mov    rsi,rcx
   140004f82:	mov    rdi,rdx
   140004f85:	add    rcx,0x118
   140004f8c:	call   0x14001b050
   140004f91:	mov    r8d,0x200
   140004f97:	lea    rcx,[rbp+0x160]
   140004f9e:	mov    rdx,rax
   140004fa1:	call   QWORD PTR [rip+0x2d5b1]        # 0x140032558
   140004fa7:	mov    dl,0x5c
   140004fa9:	lea    rcx,[rbp+0x160]
   140004fb0:	call   QWORD PTR [rip+0x2d532]        # 0x1400324e8
   140004fb6:	mov    r8d,0x200
   140004fbc:	lea    rdx,[rbp+0x160]
   140004fc3:	lea    rcx,[rsp+0x60]
   140004fc8:	call   QWORD PTR [rip+0x2d58a]        # 0x140032558
   140004fce:	lea    rax,[rsp+0x60]
   140004fd3:	or     rbx,0xffffffffffffffff
   140004fd7:	inc    rbx
   140004fda:	cmp    BYTE PTR [rax+rbx*1],0x0
   140004fde:	jne    0x140004fd7
   140004fe0:	lea    rcx,[rsp+0x60]
   140004fe5:	call   QWORD PTR [rip+0x2d5b5]        # 0x1400325a0
   140004feb:	test   al,al
   140004fed:	je     0x1400050d2
   140004ff3:	mov    r9d,0x200
   140004ff9:	lea    r8,[rbp+0x360]
   140005000:	lea    rdx,[rip+0x2dd09]        # 0x140032d10
   140005007:	lea    rcx,[rsp+0x60]
   14000500c:	call   QWORD PTR [rip+0x2d4ee]        # 0x140032500
   140005012:	lea    rcx,[rbp+0x360]
   140005019:	call   QWORD PTR [rip+0x2d581]        # 0x1400325a0
   14000501f:	mov    r9d,0x200
   140005025:	lea    rcx,[rsp+0x60]
   14000502a:	test   al,al
   14000502c:	jne    0x1400050be
   140005032:	lea    r8,[rbp+0x360]
   140005039:	lea    rdx,[rip+0x2dcb8]        # 0x140032cf8
   140005040:	call   QWORD PTR [rip+0x2d4ba]        # 0x140032500
   140005046:	lea    rcx,[rbp+0x360]
   14000504d:	call   QWORD PTR [rip+0x2d555]        # 0x1400325a8
   140005053:	test   al,al
   140005055:	jne    0x1400050a4
   140005057:	mov    edx,0x200
   14000505c:	lea    rcx,[rsp+0x60]
   140005061:	call   QWORD PTR [rip+0x2d4a9]        # 0x140032510
   140005067:	test   al,al
   140005069:	je     0x1400050d2
   14000506b:	lea    rcx,[rsp+0x60]
   140005070:	call   QWORD PTR [rip+0x2d4b2]        # 0x140032528
   140005076:	lea    rcx,[rsp+0x60]
   14000507b:	or     rax,0xffffffffffffffff
   14000507f:	nop
   140005080:	inc    rax
   140005083:	cmp    BYTE PTR [rcx+rax*1],0x0
   140005087:	jne    0x140005080
   140005089:	cmp    eax,ebx
   14000508b:	jge    0x1400050d2
   14000508d:	lea    rcx,[rsp+0x60]
   140005092:	mov    ebx,eax
   140005094:	call   QWORD PTR [rip+0x2d506]        # 0x1400325a0
   14000509a:	test   al,al
   14000509c:	jne    0x140004ff3
   1400050a2:	jmp    0x1400050d2
   1400050a4:	mov    r8d,0x200
   1400050aa:	lea    rdx,[rsp+0x60]
   1400050af:	lea    rcx,[rbp+0x160]
   1400050b6:	call   QWORD PTR [rip+0x2d49c]        # 0x140032558
   1400050bc:	jmp    0x1400050d2
   1400050be:	lea    r8,[rbp+0x160]
   1400050c5:	lea    rdx,[rip+0x2dc50]        # 0x140032d1c
   1400050cc:	call   QWORD PTR [rip+0x2d42e]        # 0x140032500
   1400050d2:	mov    rcx,rdi
   1400050d5:	call   QWORD PTR [rip+0x2d3fd]        # 0x1400324d8
   1400050db:	test   al,al
   1400050dd:	jne    0x1400051b8
   1400050e3:	mov    r9d,0x200
   1400050e9:	lea    r8,[rbp+0x560]
   1400050f0:	mov    rdx,rdi
   1400050f3:	lea    rcx,[rbp+0x160]
   1400050fa:	call   QWORD PTR [rip+0x2d400]        # 0x140032500
   140005100:	lea    rdi,[rbp+0x560]
   140005107:	mov    rcx,rdi
   14000510a:	call   0x14000b860
   14000510f:	test   rax,rax
   140005112:	jne    0x14000534a
   140005118:	lea    edx,[rax+0x4]
   14000511b:	mov    rax,QWORD PTR [rip+0x2d266]        # 0x140032388
   140005122:	mov    ecx,DWORD PTR [rax]
   140005124:	call   QWORD PTR [rip+0x2d37e]        # 0x1400324a8
   14000512a:	test   al,al
   14000512c:	je     0x140005173
   14000512e:	lea    rax,[rip+0x2dd1b]        # 0x140032e50
   140005135:	mov    DWORD PTR [rsp+0x48],0x25f
   14000513d:	mov    QWORD PTR [rsp+0x40],rax
   140005142:	lea    r9,[rip+0x2dd57]        # 0x140032ea0
   140005149:	lea    rax,[rip+0x2dce0]        # 0x140032e30
   140005150:	mov    QWORD PTR [rsp+0x20],rdi
   140005155:	mov    QWORD PTR [rsp+0x50],rax
   14000515a:	lea    r8,[rsp+0x40]
   14000515f:	mov    rax,QWORD PTR [rip+0x2d222]        # 0x140032388
   140005166:	mov    edx,0x4
   14000516b:	mov    ecx,DWORD PTR [rax]
   14000516d:	call   QWORD PTR [rip+0x2d325]        # 0x140032498
   140005173:	call   QWORD PTR [rip+0x2d40f]        # 0x140032588
   140005179:	test   al,al
   14000517b:	je     0x1400051ac
   14000517d:	call   QWORD PTR [rip+0x2d2fd]        # 0x140032480
   140005183:	lea    rcx,[rip+0x2d622]        # 0x1400327ac
   14000518a:	xorps  xmm0,xmm0
   14000518d:	lea    rdx,[rsp+0x40]
   140005192:	mov    DWORD PTR [rsp+0x48],eax
   140005196:	mov    QWORD PTR [rsp+0x40],rcx
   14000519b:	mov    r8b,0x1
   14000519e:	xor    ecx,ecx
   1400051a0:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   1400051a6:	call   QWORD PTR [rip+0x2d2cc]        # 0x140032478
   1400051ac:	mov    ecx,0x1
   1400051b1:	call   QWORD PTR [rip+0x2d091]        # 0x140032248
   1400051b7:	int3   
   1400051b8:	call   QWORD PTR [rip+0x2d2fa]        # 0x1400324b8
   1400051be:	lea    rdx,[rip+0x2db63]        # 0x140032d28
   1400051c5:	mov    rcx,rax
   1400051c8:	mov    r8,QWORD PTR [rax]
   1400051cb:	call   QWORD PTR [r8+0x20]
   1400051cf:	test   al,al
   1400051d1:	jne    0x140005107
   1400051d7:	cmp    BYTE PTR [rsi+0x148],al
   1400051dd:	jne    0x140005107
   1400051e3:	mov    r8d,0x200
   1400051e9:	lea    rdx,[rbp+0x360]
   1400051f0:	mov    rcx,rdi
   1400051f3:	call   QWORD PTR [rip+0x2d047]        # 0x140032240
   1400051f9:	lea    rcx,[rbp+0x360]
   140005200:	call   QWORD PTR [rip+0x2d312]        # 0x140032518
   140005206:	xor    r9d,r9d
   140005209:	lea    r8,[rbp+0x360]
   140005210:	mov    edx,0x200
   140005215:	lea    rcx,[rsp+0x60]
   14000521a:	call   QWORD PTR [rip+0x2d2c0]        # 0x1400324e0
   140005220:	lea    rdx,[rbp+0x160]
   140005227:	lea    rcx,[rsp+0x60]
   14000522c:	call   QWORD PTR [rip+0x2d32e]        # 0x140032560
   140005232:	test   eax,eax
   140005234:	je     0x140005107
   14000523a:	lea    rdx,[rip+0x2daf7]        # 0x140032d38
   140005241:	lea    rcx,[rbp+0x160]
   140005248:	call   QWORD PTR [rip+0x2d31a]        # 0x140032568
   14000524e:	test   rax,rax
   140005251:	jne    0x140005107
   140005257:	lea    rdx,[rip+0x2daea]        # 0x140032d48
   14000525e:	lea    rcx,[rbp+0x160]
   140005265:	call   QWORD PTR [rip+0x2d2fd]        # 0x140032568
   14000526b:	test   rax,rax
   14000526e:	jne    0x140005107
   140005274:	mov    edx,0x200
   140005279:	lea    rcx,[rbp+0x760]
   140005280:	call   QWORD PTR [rip+0x2d2f2]        # 0x140032578
   140005286:	mov    rax,QWORD PTR [rip+0x2d0fb]        # 0x140032388
   14000528d:	mov    edx,0x4
   140005292:	mov    ecx,DWORD PTR [rax]
   140005294:	call   QWORD PTR [rip+0x2d20e]        # 0x1400324a8
   14000529a:	test   al,al
   14000529c:	je     0x140005305
   14000529e:	lea    rax,[rip+0x2dbab]        # 0x140032e50
   1400052a5:	mov    DWORD PTR [rsp+0x48],0x24f
   1400052ad:	mov    QWORD PTR [rsp+0x40],rax
   1400052b2:	lea    r9,[rip+0x2daa7]        # 0x140032d60
   1400052b9:	lea    rax,[rip+0x2db70]        # 0x140032e30
   1400052c0:	mov    edx,0x4
   1400052c5:	mov    QWORD PTR [rsp+0x50],rax
   1400052ca:	lea    r8,[rsp+0x40]
   1400052cf:	lea    rax,[rsp+0x60]
   1400052d4:	mov    QWORD PTR [rsp+0x38],rax
   1400052d9:	lea    rax,[rbp+0x160]
   1400052e0:	mov    QWORD PTR [rsp+0x30],rax
   1400052e5:	lea    rax,[rbp+0x760]
   1400052ec:	mov    QWORD PTR [rsp+0x28],rdi
   1400052f1:	mov    QWORD PTR [rsp+0x20],rax
   1400052f6:	mov    rax,QWORD PTR [rip+0x2d08b]        # 0x140032388
   1400052fd:	mov    ecx,DWORD PTR [rax]
   1400052ff:	call   QWORD PTR [rip+0x2d193]        # 0x140032498
   140005305:	call   QWORD PTR [rip+0x2d27d]        # 0x140032588
   14000530b:	test   al,al
   14000530d:	je     0x14000533e
   14000530f:	call   QWORD PTR [rip+0x2d16b]        # 0x140032480
   140005315:	lea    rcx,[rip+0x2d490]        # 0x1400327ac
   14000531c:	xorps  xmm0,xmm0
   14000531f:	lea    rdx,[rsp+0x40]
   140005324:	mov    DWORD PTR [rsp+0x48],eax
   140005328:	mov    QWORD PTR [rsp+0x40],rcx
   14000532d:	mov    r8b,0x1
   140005330:	xor    ecx,ecx
   140005332:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140005338:	call   QWORD PTR [rip+0x2d13a]        # 0x140032478
   14000533e:	mov    ecx,0x1
   140005343:	call   QWORD PTR [rip+0x2ceff]        # 0x140032248
   140005349:	int3   
   14000534a:	mov    r8,rdi
   14000534d:	mov    rdx,rax
   140005350:	mov    rcx,rsi
   140005353:	call   0x140004e20
   140005358:	lea    r11,[rsp+0xa60]
   140005360:	mov    rbx,QWORD PTR [r11+0x10]
   140005364:	mov    rsi,QWORD PTR [r11+0x18]
   140005368:	mov    rdi,QWORD PTR [r11+0x20]
   14000536c:	mov    rsp,r11
   14000536f:	pop    rbp
   140005370:	ret    
   140005371:	int3   
   140005372:	int3   
   140005373:	int3   
   140005374:	int3   
   140005375:	int3   
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	int3   
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	mov    rax,QWORD PTR [rcx+0x8]
   140005384:	mov    QWORD PTR [rax+0x1f0],rdx
   14000538b:	ret    
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	rex push rbp
   140005392:	push   rbx
   140005393:	push   r13
   140005395:	lea    rbp,[rsp-0xd40]
   14000539d:	sub    rsp,0xe40
   1400053a4:	cmp    QWORD PTR [rip+0x42164],0x0        # 0x140047510
   1400053ac:	mov    r13,rcx
   1400053af:	je     0x1400053de
   1400053b1:	call   QWORD PTR [rip+0x2d101]        # 0x1400324b8
   1400053b7:	lea    rdx,[rip+0x2df36]        # 0x1400332f4
   1400053be:	mov    rcx,rax
   1400053c1:	mov    r8,QWORD PTR [rax]
   1400053c4:	call   QWORD PTR [r8+0x40]
   1400053c8:	test   eax,eax
   1400053ca:	jne    0x1400053de
   1400053cc:	mov    rcx,QWORD PTR [rip+0x41db5]        # 0x140047188
   1400053d3:	mov    dl,0x1
   1400053d5:	mov    rax,QWORD PTR [rcx]
   1400053d8:	call   QWORD PTR [rax+0x3a8]
   1400053de:	mov    rcx,QWORD PTR [r13+0xe8]
   1400053e5:	mov    BYTE PTR [rbp+0xd78],0x1
   1400053ec:	test   rcx,rcx
   1400053ef:	je     0x140005409
   1400053f1:	xor    r8d,r8d
   1400053f4:	lea    rdx,[rip+0x2d7d5]        # 0x140032bd0
   1400053fb:	call   0x14001e240
   140005400:	test   eax,eax
   140005402:	sete   BYTE PTR [rbp+0xd78]
   140005409:	xor    edx,edx
   14000540b:	lea    rcx,[rbp+0x380]
   140005412:	mov    r8d,0x104
   140005418:	call   0x1400277b0
   14000541d:	cmp    BYTE PTR [r13+0x1dd],0x0
   140005425:	je     0x14000548b
   140005427:	lea    rcx,[r13+0x110]
   14000542e:	mov    rax,QWORD PTR [rcx]
   140005431:	test   rax,rax
   140005434:	je     0x14000548b
   140005436:	cmp    BYTE PTR [rax],0x0
   140005439:	je     0x14000548b
   14000543b:	call   0x14001b050
   140005440:	test   rax,rax
   140005443:	je     0x14000548b
   140005445:	mov    r8d,0x104
   14000544b:	lea    rcx,[rbp+0x380]
   140005452:	mov    rdx,rax
   140005455:	call   QWORD PTR [rip+0x2d0fd]        # 0x140032558
   14000545b:	mov    edx,0x104
   140005460:	lea    rcx,[rbp+0x380]
   140005467:	call   QWORD PTR [rip+0x2d0a3]        # 0x140032510
   14000546d:	or     r9d,0xffffffff
   140005471:	lea    rdx,[rip+0x2de70]        # 0x1400332e8
   140005478:	mov    r8d,0x104
   14000547e:	lea    rcx,[rbp+0x380]
   140005485:	call   QWORD PTR [rip+0x2d0c5]        # 0x140032550
   14000548b:	cmp    BYTE PTR [rbp+0x380],0x0
   140005492:	jne    0x1400054b6
   140005494:	lea    rcx,[r13+0x118]
   14000549b:	call   0x14001b050
   1400054a0:	mov    r8d,0x104
   1400054a6:	lea    rcx,[rbp+0x380]
   1400054ad:	mov    rdx,rax
   1400054b0:	call   QWORD PTR [rip+0x2d0a2]        # 0x140032558
   1400054b6:	mov    rcx,QWORD PTR [rip+0x41ccb]        # 0x140047188
   1400054bd:	lea    r8,[rip+0x2de3c]        # 0x140033300
   1400054c4:	mov    r9d,0x1
   1400054ca:	mov    DWORD PTR [rsp+0x20],0x0
   1400054d2:	lea    rdx,[rbp+0x380]
   1400054d9:	mov    rax,QWORD PTR [rcx]
   1400054dc:	call   QWORD PTR [rax+0x68]
   1400054df:	mov    r9d,0x104
   1400054e5:	lea    r8,[rbp+0x50]
   1400054e9:	lea    rdx,[rip+0x2de20]        # 0x140033310
   1400054f0:	lea    rcx,[rbp+0x380]
   1400054f7:	call   QWORD PTR [rip+0x2d003]        # 0x140032500
   1400054fd:	mov    r9b,0x1
   140005500:	lea    r8,[rbp+0x50]
   140005504:	mov    edx,0x104
   140005509:	lea    rcx,[rbp+0x270]
   140005510:	call   QWORD PTR [rip+0x2cfca]        # 0x1400324e0
   140005516:	mov    rcx,QWORD PTR [rip+0x41c6b]        # 0x140047188
   14000551d:	lea    r8,[rip+0x2dddc]        # 0x140033300
   140005524:	mov    r9d,0x1
   14000552a:	mov    DWORD PTR [rsp+0x20],0x0
   140005532:	lea    rdx,[rbp+0x270]
   140005539:	mov    rax,QWORD PTR [rcx]
   14000553c:	call   QWORD PTR [rax+0x68]
   14000553f:	mov    rcx,QWORD PTR [rip+0x41c42]        # 0x140047188
   140005546:	lea    rdx,[rip+0x2ddb3]        # 0x140033300
   14000554d:	mov    r8b,0x1
   140005550:	mov    rax,QWORD PTR [rcx]
   140005553:	call   QWORD PTR [rax+0xa0]
   140005559:	xor    edx,edx
   14000555b:	lea    rcx,[rbp+0x490]
   140005562:	mov    r8d,0x104
   140005568:	call   0x1400277b0
   14000556d:	xor    r9d,r9d
   140005570:	lea    r8,[rbp+0x380]
   140005577:	mov    edx,0x104
   14000557c:	lea    rcx,[rsp+0x40]
   140005581:	call   QWORD PTR [rip+0x2cf59]        # 0x1400324e0
   140005587:	lea    rax,[rsp+0x40]
   14000558c:	or     rbx,0xffffffffffffffff
   140005590:	inc    rbx
   140005593:	cmp    BYTE PTR [rax+rbx*1],0x0
   140005597:	jne    0x140005590
   140005599:	lea    rcx,[rsp+0x40]
   14000559e:	call   QWORD PTR [rip+0x2cffc]        # 0x1400325a0
   1400055a4:	test   al,al
   1400055a6:	je     0x140005692
   1400055ac:	nop    DWORD PTR [rax+0x0]
   1400055b0:	mov    r9d,0x104
   1400055b6:	lea    r8,[rbp+0x160]
   1400055bd:	lea    rdx,[rip+0x2d74c]        # 0x140032d10
   1400055c4:	lea    rcx,[rsp+0x40]
   1400055c9:	call   QWORD PTR [rip+0x2cf31]        # 0x140032500
   1400055cf:	lea    rcx,[rbp+0x160]
   1400055d6:	call   QWORD PTR [rip+0x2cfc4]        # 0x1400325a0
   1400055dc:	mov    r9d,0x104
   1400055e2:	lea    rcx,[rsp+0x40]
   1400055e7:	test   al,al
   1400055e9:	jne    0x14000567e
   1400055ef:	lea    r8,[rbp+0x160]
   1400055f6:	lea    rdx,[rip+0x2d6fb]        # 0x140032cf8
   1400055fd:	call   QWORD PTR [rip+0x2cefd]        # 0x140032500
   140005603:	lea    rcx,[rbp+0x160]
   14000560a:	call   QWORD PTR [rip+0x2cf98]        # 0x1400325a8
   140005610:	test   al,al
   140005612:	jne    0x140005664
   140005614:	mov    edx,0x104
   140005619:	lea    rcx,[rsp+0x40]
   14000561e:	call   QWORD PTR [rip+0x2ceec]        # 0x140032510
   140005624:	test   al,al
   140005626:	je     0x140005692
   140005628:	lea    rcx,[rsp+0x40]
   14000562d:	call   QWORD PTR [rip+0x2cef5]        # 0x140032528
   140005633:	lea    rcx,[rsp+0x40]
   140005638:	or     rax,0xffffffffffffffff
   14000563c:	nop    DWORD PTR [rax+0x0]
   140005640:	inc    rax
   140005643:	cmp    BYTE PTR [rcx+rax*1],0x0
   140005647:	jne    0x140005640
   140005649:	cmp    eax,ebx
   14000564b:	jge    0x140005692
   14000564d:	lea    rcx,[rsp+0x40]
   140005652:	mov    ebx,eax
   140005654:	call   QWORD PTR [rip+0x2cf46]        # 0x1400325a0
   14000565a:	test   al,al
   14000565c:	jne    0x1400055b0
   140005662:	jmp    0x140005692
   140005664:	mov    r8d,0x104
   14000566a:	lea    rdx,[rsp+0x40]
   14000566f:	lea    rcx,[rbp+0x490]
   140005676:	call   QWORD PTR [rip+0x2cedc]        # 0x140032558
   14000567c:	jmp    0x140005692
   14000567e:	lea    r8,[rbp+0x490]
   140005685:	lea    rdx,[rip+0x2d690]        # 0x140032d1c
   14000568c:	call   QWORD PTR [rip+0x2ce6e]        # 0x140032500
   140005692:	cmp    BYTE PTR [rbp+0x490],0x0
   140005699:	jne    0x1400056d4
   14000569b:	lea    r8,[rbp+0x380]
   1400056a2:	lea    rdx,[rip+0x2dc6f]        # 0x140033318
   1400056a9:	lea    rcx,[rbp+0x5a0]
   1400056b0:	call   0x140001600
   1400056b5:	lea    rcx,[rip+0x2d0e8]        # 0x1400327a4
   1400056bc:	lea    rdx,[rax+0x9]
   1400056c0:	call   QWORD PTR [rip+0x2cb6a]        # 0x140032230
   1400056c6:	xor    al,al
   1400056c8:	add    rsp,0xe40
   1400056cf:	pop    r13
   1400056d1:	pop    rbx
   1400056d2:	pop    rbp
   1400056d3:	ret    
   1400056d4:	mov    r9d,0x104
   1400056da:	lea    r8,[rbp+0xaf0]
   1400056e1:	lea    rdx,[rip+0x2dc60]        # 0x140033348
   1400056e8:	lea    rcx,[rbp+0x490]
   1400056ef:	call   QWORD PTR [rip+0x2ce0b]        # 0x140032500
   1400056f5:	mov    rcx,QWORD PTR [rip+0x41a8c]        # 0x140047188
   1400056fc:	lea    r8,[rip+0x2dc4d]        # 0x140033350
   140005703:	mov    r9d,0x1
   140005709:	mov    DWORD PTR [rsp+0x20],0x0
   140005711:	lea    rdx,[rbp+0xaf0]
   140005718:	mov    rax,QWORD PTR [rcx]
   14000571b:	call   QWORD PTR [rax+0x68]
   14000571e:	mov    rcx,QWORD PTR [rip+0x41a63]        # 0x140047188
   140005725:	lea    rdx,[rip+0x2dc24]        # 0x140033350
   14000572c:	mov    r8b,0x1
   14000572f:	mov    rax,QWORD PTR [rcx]
   140005732:	call   QWORD PTR [rax+0xa0]
   140005738:	call   QWORD PTR [rip+0x2cd7a]        # 0x1400324b8
   14000573e:	lea    r8,[rip+0x2d05b]        # 0x1400327a0
   140005745:	mov    rcx,rax
   140005748:	lea    rdx,[rip+0x2dc11]        # 0x140033360
   14000574f:	mov    r9,QWORD PTR [rax]
   140005752:	call   QWORD PTR [r9+0x68]
   140005756:	test   rax,rax
   140005759:	je     0x140005778
   14000575b:	cmp    BYTE PTR [rax],0x0
   14000575e:	je     0x140005778
   140005760:	mov    r8d,0x104
   140005766:	lea    rcx,[rbp+0x9e0]
   14000576d:	mov    rdx,rax
   140005770:	call   QWORD PTR [rip+0x2cde2]        # 0x140032558
   140005776:	jmp    0x140005799
   140005778:	mov    r9d,0x104
   14000577e:	lea    r8,[rbp+0x9e0]
   140005785:	lea    rdx,[rip+0x2dbe4]        # 0x140033370
   14000578c:	lea    rcx,[rbp+0x490]
   140005793:	call   QWORD PTR [rip+0x2cd67]        # 0x140032500
   140005799:	xor    r9d,r9d
   14000579c:	lea    r8,[rbp+0x9e0]
   1400057a3:	mov    edx,0x104
   1400057a8:	lea    rcx,[rbp+0x6b0]
   1400057af:	call   QWORD PTR [rip+0x2cd2b]        # 0x1400324e0
   1400057b5:	mov    rcx,QWORD PTR [rip+0x419cc]        # 0x140047188
   1400057bc:	lea    r8,[rip+0x2dbbd]        # 0x140033380
   1400057c3:	mov    r9d,0x1
   1400057c9:	mov    DWORD PTR [rsp+0x20],0x0
   1400057d1:	lea    rdx,[rbp+0x6b0]
   1400057d8:	mov    rax,QWORD PTR [rcx]
   1400057db:	call   QWORD PTR [rax+0x68]
   1400057de:	mov    rcx,QWORD PTR [rip+0x419a3]        # 0x140047188
   1400057e5:	lea    rdx,[rip+0x2db94]        # 0x140033380
   1400057ec:	mov    r8b,0x1
   1400057ef:	mov    rax,QWORD PTR [rcx]
   1400057f2:	call   QWORD PTR [rax+0xa0]
   1400057f8:	mov    rcx,QWORD PTR [rip+0x41989]        # 0x140047188
   1400057ff:	lea    r8,[rip+0x2db8a]        # 0x140033390
   140005806:	mov    r9d,0x1
   14000580c:	mov    DWORD PTR [rsp+0x20],0x0
   140005814:	lea    rdx,[rbp+0x490]
   14000581b:	mov    rax,QWORD PTR [rcx]
   14000581e:	call   QWORD PTR [rax+0x68]
   140005821:	mov    rcx,QWORD PTR [rip+0x41960]        # 0x140047188
   140005828:	lea    rdx,[rip+0x2db61]        # 0x140033390
   14000582f:	mov    r8b,0x1
   140005832:	mov    rax,QWORD PTR [rcx]
   140005835:	call   QWORD PTR [rax+0xa0]
   14000583b:	mov    rcx,QWORD PTR [r13+0xe0]
   140005842:	test   rcx,rcx
   140005845:	je     0x1400065b1
   14000584b:	xor    r8d,r8d
   14000584e:	lea    rdx,[rip+0x2db4b]        # 0x1400333a0
   140005855:	call   0x14001ded0
   14000585a:	test   rax,rax
   14000585d:	je     0x1400065b1
   140005863:	xor    r8d,r8d
   140005866:	lea    rdx,[rip+0x2db43]        # 0x1400333b0
   14000586d:	mov    rcx,rax
   140005870:	call   0x14001ded0
   140005875:	mov    QWORD PTR [rsp+0x38],rax
   14000587a:	mov    rbx,rax
   14000587d:	test   rax,rax
   140005880:	je     0x1400065b1
   140005886:	movzx  eax,BYTE PTR [r13+0x145]
   14000588e:	mov    QWORD PTR [rsp+0xe38],rsi
   140005896:	mov    QWORD PTR [rsp+0xe30],rdi
   14000589e:	mov    QWORD PTR [rsp+0xe28],r12
   1400058a6:	mov    QWORD PTR [rsp+0xe20],r14
   1400058ae:	mov    QWORD PTR [rsp+0xe18],r15
   1400058b6:	mov    BYTE PTR [rsp+0x30],al
   1400058ba:	call   QWORD PTR [rip+0x2cbf8]        # 0x1400324b8
   1400058c0:	lea    rdx,[rip+0x2db11]        # 0x1400333d8
   1400058c7:	mov    rcx,rax
   1400058ca:	mov    r8,QWORD PTR [rax]
   1400058cd:	call   QWORD PTR [r8+0x20]
   1400058d1:	xor    dil,dil
   1400058d4:	mov    BYTE PTR [rbp+0xd70],0x0
   1400058db:	xor    edx,edx
   1400058dd:	mov    BYTE PTR [rbp+0xd68],dil
   1400058e4:	mov    r8d,0x104
   1400058ea:	mov    BYTE PTR [rbp+0xd60],0x0
   1400058f1:	lea    rcx,[rbp+0x8d0]
   1400058f8:	movzx  r14d,al
   1400058fc:	call   0x1400277b0
   140005901:	call   QWORD PTR [rip+0x2cbb1]        # 0x1400324b8
   140005907:	lea    rdx,[rip+0x2dada]        # 0x1400333e8
   14000590e:	mov    rcx,rax
   140005911:	mov    r8,QWORD PTR [rax]
   140005914:	call   QWORD PTR [r8+0x20]
   140005918:	mov    rcx,rbx
   14000591b:	movzx  r15d,al
   14000591f:	call   0x14001e200
   140005924:	mov    r12,rax
   140005927:	test   rax,rax
   14000592a:	je     0x140005a34
   140005930:	mov    rcx,r12
   140005933:	call   0x14001e270
   140005938:	xor    r9d,r9d
   14000593b:	mov    QWORD PTR [rsp+0x20],0x0
   140005944:	lea    r8,[rip+0x2ce55]        # 0x1400327a0
   14000594b:	xor    edx,edx
   14000594d:	mov    rcx,r12
   140005950:	mov    rbx,rax
   140005953:	call   0x14001e360
   140005958:	mov    r9d,0x104
   14000595e:	lea    r8,[rsp+0x40]
   140005963:	mov    rdx,rax
   140005966:	lea    rcx,[rbp+0x490]
   14000596d:	mov    rsi,rax
   140005970:	call   QWORD PTR [rip+0x2cb8a]        # 0x140032500
   140005976:	lea    rdx,[rip+0x2da7b]        # 0x1400333f8
   14000597d:	mov    rcx,rbx
   140005980:	call   QWORD PTR [rip+0x2cbda]        # 0x140032560
   140005986:	test   eax,eax
   140005988:	jne    0x140005c3f
   14000598e:	lea    rdx,[r13+0x108]
   140005995:	mov    rax,QWORD PTR [rdx]
   140005998:	lea    rcx,[r13+0x100]
   14000599f:	test   rax,rax
   1400059a2:	je     0x1400059ab
   1400059a4:	cmp    BYTE PTR [rax],0x0
   1400059a7:	cmovne rcx,rdx
   1400059ab:	mov    rax,QWORD PTR [rcx]
   1400059ae:	test   rax,rax
   1400059b1:	je     0x140005a11
   1400059b3:	cmp    BYTE PTR [rax],0x0
   1400059b6:	je     0x140005a11
   1400059b8:	call   0x14001b050
   1400059bd:	mov    rdi,rax
   1400059c0:	test   rax,rax
   1400059c3:	je     0x140005a0a
   1400059c5:	lea    rdx,[rip+0x2da3c]        # 0x140033408
   1400059cc:	mov    rcx,rax
   1400059cf:	call   QWORD PTR [rip+0x2cb8b]        # 0x140032560
   1400059d5:	test   eax,eax
   1400059d7:	je     0x140005a0a
   1400059d9:	lea    rdx,[rip+0x2da30]        # 0x140033410
   1400059e0:	lea    rcx,[rsp+0x40]
   1400059e5:	call   QWORD PTR [rip+0x2cb7d]        # 0x140032568
   1400059eb:	mov    rbx,rax
   1400059ee:	test   rax,rax
   1400059f1:	jne    0x140005a6d
   1400059f3:	lea    r8,[rip+0x2da16]        # 0x140033410
   1400059fa:	mov    rdx,rsi
   1400059fd:	lea    rcx,[rip+0x2da1c]        # 0x140033420
   140005a04:	call   QWORD PTR [rip+0x2c9a6]        # 0x1400323b0
   140005a0a:	movzx  edi,BYTE PTR [rbp+0xd68]
   140005a11:	movzx  ebx,BYTE PTR [rbp+0xd60]
   140005a18:	mov    rcx,r12
   140005a1b:	call   0x14001e330
   140005a20:	mov    r12,rax
   140005a23:	test   rax,rax
   140005a26:	jne    0x140005930
   140005a2c:	test   bl,bl
   140005a2e:	jne    0x1400062d4
   140005a34:	xor    r15d,r15d
   140005a37:	cmp    BYTE PTR [rbp+0xd78],r15b
   140005a3e:	je     0x1400062d7
   140005a44:	mov    rcx,QWORD PTR [rip+0x4173d]        # 0x140047188
   140005a4b:	lea    r9d,[r15+0x1]
   140005a4f:	lea    r8,[rip+0x2da82]        # 0x1400334d8
   140005a56:	mov    DWORD PTR [rsp+0x20],r15d
   140005a5b:	lea    rdx,[rbp+0x8d0]
   140005a62:	mov    rax,QWORD PTR [rcx]
   140005a65:	call   QWORD PTR [rax+0x68]
   140005a68:	jmp    0x1400062d7
   140005a6d:	lea    rax,[rsp+0x40]
   140005a72:	mov    r8d,ebx
   140005a75:	sub    r8d,eax
   140005a78:	lea    rdx,[rsp+0x40]
   140005a7d:	inc    r8d
   140005a80:	lea    rcx,[rbp+0x160]
   140005a87:	call   QWORD PTR [rip+0x2cacb]        # 0x140032558
   140005a8d:	or     r9d,0xffffffff
   140005a91:	lea    rcx,[rbp+0x160]
   140005a98:	mov    r8d,0x104
   140005a9e:	mov    rdx,rdi
   140005aa1:	call   QWORD PTR [rip+0x2caa9]        # 0x140032550
   140005aa7:	lea    rdx,[rbx+0xa]
   140005aab:	or     r9d,0xffffffff
   140005aaf:	mov    r8d,0x104
   140005ab5:	lea    rcx,[rbp+0x160]
   140005abc:	call   QWORD PTR [rip+0x2ca8e]        # 0x140032550
   140005ac2:	test   r14b,r14b
   140005ac5:	je     0x140005b0a
   140005ac7:	lea    r9,[rbp+0x160]
   140005ace:	mov    edx,0x104
   140005ad3:	lea    r8,[rip+0x2d7ee]        # 0x1400332c8
   140005ada:	lea    rcx,[rbp+0x50]
   140005ade:	call   QWORD PTR [rip+0x2ca8c]        # 0x140032570
   140005ae4:	mov    rcx,QWORD PTR [rip+0x4169d]        # 0x140047188
   140005aeb:	lea    r8,[rip+0x2d6f2]        # 0x1400331e4
   140005af2:	mov    r9d,0x1
   140005af8:	mov    DWORD PTR [rsp+0x20],0x0
   140005b00:	lea    rdx,[rbp+0x50]
   140005b04:	mov    rax,QWORD PTR [rcx]
   140005b07:	call   QWORD PTR [rax+0x68]
   140005b0a:	mov    rcx,QWORD PTR [rip+0x41677]        # 0x140047188
   140005b11:	lea    r8,[rip+0x2d6cc]        # 0x1400331e4
   140005b18:	mov    r9d,0x1
   140005b1e:	mov    DWORD PTR [rsp+0x20],0x0
   140005b26:	lea    rdx,[rbp+0x160]
   140005b2d:	mov    rax,QWORD PTR [rcx]
   140005b30:	call   QWORD PTR [rax+0x68]
   140005b33:	test   r15b,r15b
   140005b36:	jne    0x140005a0a
   140005b3c:	mov    r9d,0x104
   140005b42:	lea    r8,[rbp+0x270]
   140005b49:	mov    rdx,rsi
   140005b4c:	lea    rcx,[rbp+0x6b0]
   140005b53:	call   QWORD PTR [rip+0x2c9a7]        # 0x140032500
   140005b59:	lea    rdx,[rip+0x2d8b0]        # 0x140033410
   140005b60:	lea    rcx,[rbp+0x270]
   140005b67:	call   QWORD PTR [rip+0x2c9fb]        # 0x140032568
   140005b6d:	mov    rbx,rax
   140005b70:	lea    rdx,[rbp+0x270]
   140005b77:	mov    r8d,ebx
   140005b7a:	lea    rax,[rbp+0x270]
   140005b81:	sub    r8d,eax
   140005b84:	lea    rcx,[rbp+0x160]
   140005b8b:	inc    r8d
   140005b8e:	call   QWORD PTR [rip+0x2c9c4]        # 0x140032558
   140005b94:	or     r9d,0xffffffff
   140005b98:	lea    rcx,[rbp+0x160]
   140005b9f:	mov    r8d,0x104
   140005ba5:	mov    rdx,rdi
   140005ba8:	call   QWORD PTR [rip+0x2c9a2]        # 0x140032550
   140005bae:	lea    rdx,[rbx+0xa]
   140005bb2:	or     r9d,0xffffffff
   140005bb6:	mov    r8d,0x104
   140005bbc:	lea    rcx,[rbp+0x160]
   140005bc3:	call   QWORD PTR [rip+0x2c987]        # 0x140032550
   140005bc9:	test   r14b,r14b
   140005bcc:	je     0x140005c11
   140005bce:	lea    r9,[rbp+0x160]
   140005bd5:	mov    edx,0x104
   140005bda:	lea    r8,[rip+0x2d6e7]        # 0x1400332c8
   140005be1:	lea    rcx,[rbp+0x50]
   140005be5:	call   QWORD PTR [rip+0x2c985]        # 0x140032570
   140005beb:	mov    rcx,QWORD PTR [rip+0x41596]        # 0x140047188
   140005bf2:	lea    r8,[rip+0x2d887]        # 0x140033480
   140005bf9:	mov    r9d,0x1
   140005bff:	mov    DWORD PTR [rsp+0x20],0x0
   140005c07:	lea    rdx,[rbp+0x50]
   140005c0b:	mov    rax,QWORD PTR [rcx]
   140005c0e:	call   QWORD PTR [rax+0x68]
   140005c11:	mov    rcx,QWORD PTR [rip+0x41570]        # 0x140047188
   140005c18:	lea    r8,[rip+0x2d861]        # 0x140033480
   140005c1f:	mov    r9d,0x1
   140005c25:	mov    DWORD PTR [rsp+0x20],0x0
   140005c2d:	lea    rdx,[rbp+0x160]
   140005c34:	mov    rax,QWORD PTR [rcx]
   140005c37:	call   QWORD PTR [rax+0x68]
   140005c3a:	jmp    0x140005a0a
   140005c3f:	lea    rdx,[rip+0x2d842]        # 0x140033488
   140005c46:	mov    rcx,rbx
   140005c49:	call   QWORD PTR [rip+0x2c911]        # 0x140032560
   140005c4f:	test   eax,eax
   140005c51:	jne    0x140005d6a
   140005c57:	cmp    BYTE PTR [rsp+0x30],al
   140005c5b:	je     0x140005a11
   140005c61:	test   r14b,r14b
   140005c64:	je     0x140005ca7
   140005c66:	lea    r9,[rsp+0x40]
   140005c6b:	mov    edx,0x104
   140005c70:	lea    r8,[rip+0x2d651]        # 0x1400332c8
   140005c77:	lea    rcx,[rbp+0x50]
   140005c7b:	call   QWORD PTR [rip+0x2c8ef]        # 0x140032570
   140005c81:	mov    rcx,QWORD PTR [rip+0x41500]        # 0x140047188
   140005c88:	lea    r8,[rip+0x2d555]        # 0x1400331e4
   140005c8f:	mov    r9d,0x1
   140005c95:	mov    DWORD PTR [rsp+0x20],0x0
   140005c9d:	lea    rdx,[rbp+0x50]
   140005ca1:	mov    rax,QWORD PTR [rcx]
   140005ca4:	call   QWORD PTR [rax+0x68]
   140005ca7:	mov    rcx,QWORD PTR [rip+0x414da]        # 0x140047188
   140005cae:	lea    r8,[rip+0x2d52f]        # 0x1400331e4
   140005cb5:	mov    r9d,0x1
   140005cbb:	mov    DWORD PTR [rsp+0x20],0x0
   140005cc3:	lea    rdx,[rsp+0x40]
   140005cc8:	mov    rax,QWORD PTR [rcx]
   140005ccb:	call   QWORD PTR [rax+0x68]
   140005cce:	test   r15b,r15b
   140005cd1:	jne    0x140005a11
   140005cd7:	mov    r9d,0x104
   140005cdd:	lea    r8,[rbp+0x270]
   140005ce4:	mov    rdx,rsi
   140005ce7:	lea    rcx,[rbp+0x6b0]
   140005cee:	call   QWORD PTR [rip+0x2c80c]        # 0x140032500
   140005cf4:	test   r14b,r14b
   140005cf7:	je     0x140005d3c
   140005cf9:	lea    r9,[rbp+0x270]
   140005d00:	mov    edx,0x104
   140005d05:	lea    r8,[rip+0x2d5bc]        # 0x1400332c8
   140005d0c:	lea    rcx,[rbp+0x50]
   140005d10:	call   QWORD PTR [rip+0x2c85a]        # 0x140032570
   140005d16:	mov    rcx,QWORD PTR [rip+0x4146b]        # 0x140047188
   140005d1d:	lea    r8,[rip+0x2d75c]        # 0x140033480
   140005d24:	mov    r9d,0x1
   140005d2a:	mov    DWORD PTR [rsp+0x20],0x0
   140005d32:	lea    rdx,[rbp+0x50]
   140005d36:	mov    rax,QWORD PTR [rcx]
   140005d39:	call   QWORD PTR [rax+0x68]
   140005d3c:	mov    rcx,QWORD PTR [rip+0x41445]        # 0x140047188
   140005d43:	lea    r8,[rip+0x2d736]        # 0x140033480
   140005d4a:	mov    r9d,0x1
   140005d50:	mov    DWORD PTR [rsp+0x20],0x0
   140005d58:	lea    rdx,[rbp+0x270]
   140005d5f:	mov    rax,QWORD PTR [rcx]
   140005d62:	call   QWORD PTR [rax+0x68]
   140005d65:	jmp    0x140005a11
   140005d6a:	lea    rdx,[rip+0x2cfab]        # 0x140032d1c
   140005d71:	mov    rcx,rbx
   140005d74:	call   QWORD PTR [rip+0x2c7e6]        # 0x140032560
   140005d7a:	test   eax,eax
   140005d7c:	jne    0x1400060e8
   140005d82:	test   r14b,r14b
   140005d85:	je     0x140005dc6
   140005d87:	lea    r9,[rsp+0x40]
   140005d8c:	mov    edx,0x104
   140005d91:	lea    r8,[rip+0x2d530]        # 0x1400332c8
   140005d98:	lea    rcx,[rbp+0x50]
   140005d9c:	call   QWORD PTR [rip+0x2c7ce]        # 0x140032570
   140005da2:	mov    rcx,QWORD PTR [rip+0x413df]        # 0x140047188
   140005da9:	lea    r8,[rip+0x2d434]        # 0x1400331e4
   140005db0:	xor    ebx,ebx
   140005db2:	lea    rdx,[rbp+0x50]
   140005db6:	mov    DWORD PTR [rsp+0x20],ebx
   140005dba:	mov    rax,QWORD PTR [rcx]
   140005dbd:	lea    r9d,[rbx+0x1]
   140005dc1:	call   QWORD PTR [rax+0x68]
   140005dc4:	jmp    0x140005dc8
   140005dc6:	xor    ebx,ebx
   140005dc8:	mov    rcx,QWORD PTR [rip+0x413b9]        # 0x140047188
   140005dcf:	lea    r8,[rip+0x2d40e]        # 0x1400331e4
   140005dd6:	mov    r9d,0x1
   140005ddc:	mov    DWORD PTR [rsp+0x20],ebx
   140005de0:	lea    rdx,[rsp+0x40]
   140005de5:	mov    rax,QWORD PTR [rcx]
   140005de8:	call   QWORD PTR [rax+0x68]
   140005deb:	cmp    BYTE PTR [rip+0x4127a],0x0        # 0x14004706c
   140005df2:	jne    0x140005ec7
   140005df8:	call   QWORD PTR [rip+0x2c6ba]        # 0x1400324b8
   140005dfe:	lea    rdx,[rip+0x2d69b]        # 0x1400334a0
   140005e05:	mov    rcx,rax
   140005e08:	mov    r8,QWORD PTR [rax]
   140005e0b:	call   QWORD PTR [r8+0x20]
   140005e0f:	test   al,al
   140005e11:	je     0x140005ec7
   140005e17:	call   QWORD PTR [rip+0x2c69b]        # 0x1400324b8
   140005e1d:	lea    rdx,[rip+0x2d2d0]        # 0x1400330f4
   140005e24:	mov    rcx,rax
   140005e27:	mov    r8,QWORD PTR [rax]
   140005e2a:	call   QWORD PTR [r8+0x20]
   140005e2e:	test   al,al
   140005e30:	jne    0x140005ec7
   140005e36:	mov    r9d,0x104
   140005e3c:	lea    r8,[rbp+0x160]
   140005e43:	lea    rdx,[rip+0x2d666]        # 0x1400334b0
   140005e4a:	lea    rcx,[rbp+0x490]
   140005e51:	call   QWORD PTR [rip+0x2c6a9]        # 0x140032500
   140005e57:	test   r14b,r14b
   140005e5a:	je     0x140005e9b
   140005e5c:	lea    r9,[rbp+0x160]
   140005e63:	mov    edx,0x104
   140005e68:	lea    r8,[rip+0x2d459]        # 0x1400332c8
   140005e6f:	lea    rcx,[rbp+0x50]
   140005e73:	call   QWORD PTR [rip+0x2c6f7]        # 0x140032570
   140005e79:	mov    rcx,QWORD PTR [rip+0x41308]        # 0x140047188
   140005e80:	lea    r8,[rip+0x2d35d]        # 0x1400331e4
   140005e87:	mov    r9d,0x1
   140005e8d:	mov    DWORD PTR [rsp+0x20],ebx
   140005e91:	lea    rdx,[rbp+0x50]
   140005e95:	mov    rax,QWORD PTR [rcx]
   140005e98:	call   QWORD PTR [rax+0x68]
   140005e9b:	mov    rcx,QWORD PTR [rip+0x412e6]        # 0x140047188
   140005ea2:	lea    r8,[rip+0x2d33b]        # 0x1400331e4
   140005ea9:	mov    r9d,0x1
   140005eaf:	mov    DWORD PTR [rsp+0x20],ebx
   140005eb3:	lea    rdx,[rbp+0x160]
   140005eba:	mov    rax,QWORD PTR [rcx]
   140005ebd:	call   QWORD PTR [rax+0x68]
   140005ec0:	mov    BYTE PTR [rip+0x411a5],0x1        # 0x14004706c
   140005ec7:	test   r15b,r15b
   140005eca:	jne    0x14000602f
   140005ed0:	mov    r9d,0x104
   140005ed6:	lea    r8,[rbp+0x160]
   140005edd:	mov    rdx,rsi
   140005ee0:	lea    rcx,[rbp+0x6b0]
   140005ee7:	call   QWORD PTR [rip+0x2c613]        # 0x140032500
   140005eed:	test   r14b,r14b
   140005ef0:	je     0x140005f31
   140005ef2:	lea    r9,[rbp+0x160]
   140005ef9:	mov    edx,0x104
   140005efe:	lea    r8,[rip+0x2d3c3]        # 0x1400332c8
   140005f05:	lea    rcx,[rbp+0x50]
   140005f09:	call   QWORD PTR [rip+0x2c661]        # 0x140032570
   140005f0f:	mov    rcx,QWORD PTR [rip+0x41272]        # 0x140047188
   140005f16:	lea    r8,[rip+0x2d563]        # 0x140033480
   140005f1d:	mov    r9d,0x1
   140005f23:	mov    DWORD PTR [rsp+0x20],ebx
   140005f27:	lea    rdx,[rbp+0x50]
   140005f2b:	mov    rax,QWORD PTR [rcx]
   140005f2e:	call   QWORD PTR [rax+0x68]
   140005f31:	mov    rcx,QWORD PTR [rip+0x41250]        # 0x140047188
   140005f38:	lea    r8,[rip+0x2d541]        # 0x140033480
   140005f3f:	mov    r9d,0x1
   140005f45:	mov    DWORD PTR [rsp+0x20],ebx
   140005f49:	lea    rdx,[rbp+0x160]
   140005f50:	mov    rax,QWORD PTR [rcx]
   140005f53:	call   QWORD PTR [rax+0x68]
   140005f56:	cmp    BYTE PTR [rip+0x41110],0x0        # 0x14004706d
   140005f5d:	jne    0x14000602f
   140005f63:	call   QWORD PTR [rip+0x2c54f]        # 0x1400324b8
   140005f69:	lea    rdx,[rip+0x2d530]        # 0x1400334a0
   140005f70:	mov    rcx,rax
   140005f73:	mov    r8,QWORD PTR [rax]
   140005f76:	call   QWORD PTR [r8+0x20]
   140005f7a:	test   al,al
   140005f7c:	je     0x14000602f
   140005f82:	call   QWORD PTR [rip+0x2c530]        # 0x1400324b8
   140005f88:	lea    rdx,[rip+0x2d165]        # 0x1400330f4
   140005f8f:	mov    rcx,rax
   140005f92:	mov    r8,QWORD PTR [rax]
   140005f95:	call   QWORD PTR [r8+0x20]
   140005f99:	test   al,al
   140005f9b:	jne    0x14000602f
   140005fa1:	mov    r9d,0x104
   140005fa7:	lea    r8,[rbp+0x50]
   140005fab:	lea    rdx,[rip+0x2d4fe]        # 0x1400334b0
   140005fb2:	lea    rcx,[rbp+0x6b0]
   140005fb9:	call   QWORD PTR [rip+0x2c541]        # 0x140032500
   140005fbf:	test   r14b,r14b
   140005fc2:	je     0x140006006
   140005fc4:	lea    r9,[rbp+0x50]
   140005fc8:	mov    edx,0x104
   140005fcd:	lea    r8,[rip+0x2d2f4]        # 0x1400332c8
   140005fd4:	lea    rcx,[rbp+0x5a0]
   140005fdb:	call   QWORD PTR [rip+0x2c58f]        # 0x140032570
   140005fe1:	mov    rcx,QWORD PTR [rip+0x411a0]        # 0x140047188
   140005fe8:	lea    r8,[rip+0x2d491]        # 0x140033480
   140005fef:	mov    r9d,0x1
   140005ff5:	mov    DWORD PTR [rsp+0x20],ebx
   140005ff9:	lea    rdx,[rbp+0x5a0]
   140006000:	mov    rax,QWORD PTR [rcx]
   140006003:	call   QWORD PTR [rax+0x68]
   140006006:	mov    rcx,QWORD PTR [rip+0x4117b]        # 0x140047188
   14000600d:	lea    r8,[rip+0x2d46c]        # 0x140033480
   140006014:	mov    r9d,0x1
   14000601a:	mov    DWORD PTR [rsp+0x20],ebx
   14000601e:	lea    rdx,[rbp+0x50]
   140006022:	mov    rax,QWORD PTR [rcx]
   140006025:	call   QWORD PTR [rax+0x68]
   140006028:	mov    BYTE PTR [rip+0x4103e],0x1        # 0x14004706d
   14000602f:	mov    r9d,0x104
   140006035:	lea    r8,[rbp+0x270]
   14000603c:	lea    rdx,[rip+0x2d2a5]        # 0x1400332e8
   140006043:	lea    rcx,[rsp+0x40]
   140006048:	call   QWORD PTR [rip+0x2c4b2]        # 0x140032500
   14000604e:	mov    rcx,QWORD PTR [rip+0x41133]        # 0x140047188
   140006055:	lea    r8,[rip+0x2d46c]        # 0x1400334c8
   14000605c:	mov    r9d,0x1
   140006062:	mov    DWORD PTR [rsp+0x20],ebx
   140006066:	lea    rdx,[rbp+0x270]
   14000606d:	mov    rax,QWORD PTR [rcx]
   140006070:	call   QWORD PTR [rax+0x68]
   140006073:	mov    r9d,0x104
   140006079:	lea    r8,[rbp+0x270]
   140006080:	lea    rdx,[rip+0x2d449]        # 0x1400334d0
   140006087:	lea    rcx,[rsp+0x40]
   14000608c:	call   QWORD PTR [rip+0x2c46e]        # 0x140032500
   140006092:	mov    rcx,QWORD PTR [rip+0x410ef]        # 0x140047188
   140006099:	lea    r8,[rip+0x2d428]        # 0x1400334c8
   1400060a0:	mov    r9d,0x1
   1400060a6:	mov    DWORD PTR [rsp+0x20],ebx
   1400060aa:	lea    rdx,[rbp+0x270]
   1400060b1:	mov    rax,QWORD PTR [rcx]
   1400060b4:	call   QWORD PTR [rax+0x68]
   1400060b7:	cmp    BYTE PTR [rbp+0xd70],0x0
   1400060be:	jne    0x140005a11
   1400060c4:	mov    r8d,0x104
   1400060ca:	lea    rdx,[rsp+0x40]
   1400060cf:	lea    rcx,[rbp+0x8d0]
   1400060d6:	call   QWORD PTR [rip+0x2c47c]        # 0x140032558
   1400060dc:	mov    BYTE PTR [rbp+0xd70],0x1
   1400060e3:	jmp    0x140005a11
   1400060e8:	lea    rdx,[rip+0x2d3e5]        # 0x1400334d4
   1400060ef:	mov    rcx,rbx
   1400060f2:	call   QWORD PTR [rip+0x2c468]        # 0x140032560
   1400060f8:	test   eax,eax
   1400060fa:	jne    0x140006130
   1400060fc:	mov    rcx,QWORD PTR [rip+0x41085]        # 0x140047188
   140006103:	lea    r8,[rip+0x2d3ce]        # 0x1400334d8
   14000610a:	mov    bl,0x1
   14000610c:	mov    DWORD PTR [rsp+0x20],0x0
   140006114:	mov    r9d,0x1
   14000611a:	mov    BYTE PTR [rbp+0xd60],bl
   140006120:	lea    rdx,[rsp+0x40]
   140006125:	mov    rax,QWORD PTR [rcx]
   140006128:	call   QWORD PTR [rax+0x68]
   14000612b:	jmp    0x140005a18
   140006130:	lea    rdx,[rip+0x2d3a9]        # 0x1400334e0
   140006137:	mov    rcx,rbx
   14000613a:	call   QWORD PTR [rip+0x2c420]        # 0x140032560
   140006140:	test   eax,eax
   140006142:	jne    0x1400061d4
   140006148:	mov    r8d,0x104
   14000614e:	lea    rdx,[rsp+0x40]
   140006153:	lea    rcx,[rbp+0xc00]
   14000615a:	call   QWORD PTR [rip+0x2c3f8]        # 0x140032558
   140006160:	mov    rcx,QWORD PTR [rip+0x41021]        # 0x140047188
   140006167:	lea    r8,[rip+0x2d37e]        # 0x1400334ec
   14000616e:	mov    r9d,0x1
   140006174:	mov    DWORD PTR [rsp+0x20],0x0
   14000617c:	lea    rdx,[rbp+0xc00]
   140006183:	mov    rax,QWORD PTR [rcx]
   140006186:	call   QWORD PTR [rax+0x68]
   140006189:	mov    r9d,0x104
   14000618f:	lea    r8,[rbp+0x5a0]
   140006196:	mov    rdx,rsi
   140006199:	lea    rcx,[rbp+0x6b0]
   1400061a0:	call   QWORD PTR [rip+0x2c35a]        # 0x140032500
   1400061a6:	mov    rcx,QWORD PTR [rip+0x40fdb]        # 0x140047188
   1400061ad:	lea    r8,[rip+0x2d344]        # 0x1400334f8
   1400061b4:	mov    r9d,0x1
   1400061ba:	mov    DWORD PTR [rsp+0x20],0x0
   1400061c2:	lea    rdx,[rbp+0x5a0]
   1400061c9:	mov    rax,QWORD PTR [rcx]
   1400061cc:	call   QWORD PTR [rax+0x68]
   1400061cf:	jmp    0x140005a11
   1400061d4:	test   dil,dil
   1400061d7:	jne    0x140006223
   1400061d9:	lea    rdx,[rip+0x2d328]        # 0x140033508
   1400061e0:	mov    rcx,rbx
   1400061e3:	call   QWORD PTR [rip+0x2c377]        # 0x140032560
   1400061e9:	test   eax,eax
   1400061eb:	jne    0x140006223
   1400061ed:	mov    rcx,QWORD PTR [rip+0x40f94]        # 0x140047188
   1400061f4:	lea    r8,[rip+0x2d1c5]        # 0x1400333c0
   1400061fb:	mov    dil,0x1
   1400061fe:	mov    DWORD PTR [rsp+0x20],0x0
   140006206:	mov    r9d,0x1
   14000620c:	mov    BYTE PTR [rbp+0xd68],dil
   140006213:	lea    rdx,[rsp+0x40]
   140006218:	mov    rax,QWORD PTR [rcx]
   14000621b:	call   QWORD PTR [rax+0x68]
   14000621e:	jmp    0x140005a11
   140006223:	test   r15b,r15b
   140006226:	je     0x140005a11
   14000622c:	lea    rdx,[rip+0x2d2dd]        # 0x140033510
   140006233:	mov    rcx,rbx
   140006236:	call   QWORD PTR [rip+0x2c324]        # 0x140032560
   14000623c:	test   eax,eax
   14000623e:	jne    0x140005a11
   140006244:	mov    r9d,0x104
   14000624a:	lea    r8,[rbp+0x50]
   14000624e:	mov    rdx,rsi
   140006251:	lea    rcx,[rbp+0x6b0]
   140006258:	call   QWORD PTR [rip+0x2c2a2]        # 0x140032500
   14000625e:	test   r14b,r14b
   140006261:	je     0x1400062a9
   140006263:	lea    r9,[rbp+0x50]
   140006267:	mov    edx,0x104
   14000626c:	lea    r8,[rip+0x2d055]        # 0x1400332c8
   140006273:	lea    rcx,[rbp+0x5a0]
   14000627a:	call   QWORD PTR [rip+0x2c2f0]        # 0x140032570
   140006280:	mov    rcx,QWORD PTR [rip+0x40f01]        # 0x140047188
   140006287:	lea    r8,[rip+0x2d1f2]        # 0x140033480
   14000628e:	mov    r9d,0x1
   140006294:	mov    DWORD PTR [rsp+0x20],0x0
   14000629c:	lea    rdx,[rbp+0x5a0]
   1400062a3:	mov    rax,QWORD PTR [rcx]
   1400062a6:	call   QWORD PTR [rax+0x68]
   1400062a9:	mov    rcx,QWORD PTR [rip+0x40ed8]        # 0x140047188
   1400062b0:	lea    r8,[rip+0x2d1c9]        # 0x140033480
   1400062b7:	mov    r9d,0x1
   1400062bd:	mov    DWORD PTR [rsp+0x20],0x0
   1400062c5:	lea    rdx,[rbp+0x50]
   1400062c9:	mov    rax,QWORD PTR [rcx]
   1400062cc:	call   QWORD PTR [rax+0x68]
   1400062cf:	jmp    0x140005a11
   1400062d4:	xor    r15d,r15d
   1400062d7:	mov    r12,QWORD PTR [rsp+0xe28]
   1400062df:	test   dil,dil
   1400062e2:	jne    0x14000630a
   1400062e4:	mov    rcx,QWORD PTR [rip+0x40e9d]        # 0x140047188
   1400062eb:	lea    r8,[rip+0x2d0ce]        # 0x1400333c0
   1400062f2:	mov    r9d,0x1
   1400062f8:	mov    DWORD PTR [rsp+0x20],r15d
   1400062fd:	lea    rdx,[rbp+0x8d0]
   140006304:	mov    rax,QWORD PTR [rcx]
   140006307:	call   QWORD PTR [rax+0x68]
   14000630a:	mov    rcx,QWORD PTR [rip+0x40e77]        # 0x140047188
   140006311:	lea    r8,[rip+0x2cecc]        # 0x1400331e4
   140006318:	mov    r9d,0x1
   14000631e:	mov    DWORD PTR [rsp+0x20],r15d
   140006323:	lea    rdx,[rbp+0xaf0]
   14000632a:	mov    rax,QWORD PTR [rcx]
   14000632d:	call   QWORD PTR [rax+0x68]
   140006330:	mov    rcx,r15
   140006333:	nop    DWORD PTR [rax+0x0]
   140006337:	nop    WORD PTR [rax+rax*1+0x0]
   140006340:	movzx  eax,BYTE PTR [rbp+rcx*1+0x490]
   140006348:	mov    BYTE PTR [rbp+rcx*1+0x7c0],al
   14000634f:	lea    rcx,[rcx+0x1]
   140006353:	test   al,al
   140006355:	jne    0x140006340
   140006357:	lea    rcx,[rbp+0x7c0]
   14000635e:	call   QWORD PTR [rip+0x2c1b4]        # 0x140032518
   140006364:	or     r9d,0xffffffff
   140006368:	lea    rdx,[rip+0x2d1b1]        # 0x140033520
   14000636f:	mov    r8d,0x104
   140006375:	lea    rcx,[rbp+0x7c0]
   14000637c:	call   QWORD PTR [rip+0x2c1ce]        # 0x140032550
   140006382:	mov    rcx,QWORD PTR [rsp+0x38]
   140006387:	xor    sil,sil
   14000638a:	call   0x14001e200
   14000638f:	mov    rbx,rax
   140006392:	test   rax,rax
   140006395:	je     0x140006499
   14000639b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400063a0:	mov    rcx,rbx
   1400063a3:	call   0x14001e270
   1400063a8:	xor    r9d,r9d
   1400063ab:	mov    QWORD PTR [rsp+0x20],r15
   1400063b0:	lea    r8,[rip+0x2c3e9]        # 0x1400327a0
   1400063b7:	xor    edx,edx
   1400063b9:	mov    rcx,rbx
   1400063bc:	mov    rdi,rax
   1400063bf:	call   0x14001e360
   1400063c4:	lea    rdx,[rip+0x2d02d]        # 0x1400333f8
   1400063cb:	mov    rcx,rdi
   1400063ce:	mov    r14,rax
   1400063d1:	call   QWORD PTR [rip+0x2c189]        # 0x140032560
   1400063d7:	test   eax,eax
   1400063d9:	je     0x140006485
   1400063df:	lea    rdx,[rip+0x2d0a2]        # 0x140033488
   1400063e6:	mov    rcx,rdi
   1400063e9:	call   QWORD PTR [rip+0x2c171]        # 0x140032560
   1400063ef:	test   eax,eax
   1400063f1:	je     0x140006485
   1400063f7:	mov    r9d,0x104
   1400063fd:	lea    r8,[rbp+0x50]
   140006401:	mov    rdx,r14
   140006404:	lea    rcx,[rbp+0x7c0]
   14000640b:	call   QWORD PTR [rip+0x2c0ef]        # 0x140032500
   140006411:	test   sil,sil
   140006414:	jne    0x140006462
   140006416:	mov    rcx,QWORD PTR [rip+0x40d6b]        # 0x140047188
   14000641d:	lea    r8,[rip+0x2d10c]        # 0x140033530
   140006424:	mov    r9d,0x1
   14000642a:	mov    DWORD PTR [rsp+0x20],r15d
   14000642f:	lea    rdx,[rbp+0x7c0]
   140006436:	mov    sil,0x1
   140006439:	mov    rax,QWORD PTR [rcx]
   14000643c:	call   QWORD PTR [rax+0x68]
   14000643f:	mov    rcx,QWORD PTR [rip+0x40d42]        # 0x140047188
   140006446:	lea    r8,[rip+0x2d0fb]        # 0x140033548
   14000644d:	mov    r9d,0x1
   140006453:	mov    DWORD PTR [rsp+0x20],r15d
   140006458:	lea    rdx,[rbp+0x50]
   14000645c:	mov    rax,QWORD PTR [rcx]
   14000645f:	call   QWORD PTR [rax+0x68]
   140006462:	mov    rcx,QWORD PTR [rip+0x40d1f]        # 0x140047188
   140006469:	lea    r8,[rip+0x2d0f0]        # 0x140033560
   140006470:	mov    r9d,0x1
   140006476:	mov    DWORD PTR [rsp+0x20],r15d
   14000647b:	lea    rdx,[rbp+0x50]
   14000647f:	mov    rax,QWORD PTR [rcx]
   140006482:	call   QWORD PTR [rax+0x68]
   140006485:	mov    rcx,rbx
   140006488:	call   0x14001e330
   14000648d:	mov    rbx,rax
   140006490:	test   rax,rax
   140006493:	jne    0x1400063a0
   140006499:	mov    rcx,QWORD PTR [rip+0x40ce8]        # 0x140047188
   1400064a0:	lea    rdx,[rip+0x2d045]        # 0x1400334ec
   1400064a7:	mov    r8b,0x1
   1400064aa:	mov    rax,QWORD PTR [rcx]
   1400064ad:	call   QWORD PTR [rax+0xa0]
   1400064b3:	mov    rcx,QWORD PTR [rip+0x40cce]        # 0x140047188
   1400064ba:	lea    rdx,[rip+0x2d037]        # 0x1400334f8
   1400064c1:	mov    r8b,0x1
   1400064c4:	mov    rax,QWORD PTR [rcx]
   1400064c7:	call   QWORD PTR [rax+0xa0]
   1400064cd:	mov    rcx,QWORD PTR [rip+0x40cb4]        # 0x140047188
   1400064d4:	lea    rdx,[rip+0x2cfa5]        # 0x140033480
   1400064db:	mov    r8b,0x1
   1400064de:	mov    rax,QWORD PTR [rcx]
   1400064e1:	call   QWORD PTR [rax+0xa0]
   1400064e7:	mov    rcx,QWORD PTR [rip+0x40c9a]        # 0x140047188
   1400064ee:	lea    rdx,[rip+0x2cecb]        # 0x1400333c0
   1400064f5:	mov    r8b,0x1
   1400064f8:	mov    rax,QWORD PTR [rcx]
   1400064fb:	call   QWORD PTR [rax+0xa0]
   140006501:	mov    rcx,QWORD PTR [rip+0x40c80]        # 0x140047188
   140006508:	lea    rdx,[rip+0x2cdf1]        # 0x140033300
   14000650f:	mov    r8b,0x1
   140006512:	mov    rax,QWORD PTR [rcx]
   140006515:	call   QWORD PTR [rax+0xa0]
   14000651b:	mov    rcx,QWORD PTR [rip+0x40c66]        # 0x140047188
   140006522:	lea    rdx,[rip+0x2cf9f]        # 0x1400334c8
   140006529:	mov    r8b,0x1
   14000652c:	mov    rax,QWORD PTR [rcx]
   14000652f:	call   QWORD PTR [rax+0xa0]
   140006535:	mov    rcx,QWORD PTR [rip+0x40c4c]        # 0x140047188
   14000653c:	lea    rdx,[rip+0x2cf95]        # 0x1400334d8
   140006543:	mov    r8b,0x1
   140006546:	mov    rax,QWORD PTR [rcx]
   140006549:	call   QWORD PTR [rax+0xa0]
   14000654f:	mov    rcx,QWORD PTR [rip+0x40c32]        # 0x140047188
   140006556:	lea    rdx,[rip+0x2cfeb]        # 0x140033548
   14000655d:	mov    r8b,0x1
   140006560:	mov    rax,QWORD PTR [rcx]
   140006563:	call   QWORD PTR [rax+0xa0]
   140006569:	mov    rcx,QWORD PTR [rip+0x40c18]        # 0x140047188
   140006570:	lea    rdx,[rip+0x2cfe9]        # 0x140033560
   140006577:	mov    r8b,0x1
   14000657a:	mov    rax,QWORD PTR [rcx]
   14000657d:	call   QWORD PTR [rax+0xa0]
   140006583:	mov    r15,QWORD PTR [rsp+0xe18]
   14000658b:	mov    al,0x1
   14000658d:	mov    r14,QWORD PTR [rsp+0xe20]
   140006595:	mov    rdi,QWORD PTR [rsp+0xe30]
   14000659d:	mov    rsi,QWORD PTR [rsp+0xe38]
   1400065a5:	add    rsp,0xe40
   1400065ac:	pop    r13
   1400065ae:	pop    rbx
   1400065af:	pop    rbp
   1400065b0:	ret    
   1400065b1:	mov    r8b,0x1
   1400065b4:	lea    rcx,[rbp+0x5a0]
   1400065bb:	mov    edx,0x104
   1400065c0:	call   QWORD PTR [rip+0x2bc92]        # 0x140032258
   1400065c6:	mov    rcx,QWORD PTR [rip+0x40bbb]        # 0x140047188
   1400065cd:	lea    r8,[rip+0x2cdec]        # 0x1400333c0
   1400065d4:	mov    r9d,0x1
   1400065da:	mov    DWORD PTR [rsp+0x20],0x0
   1400065e2:	lea    rdx,[rbp+0x5a0]
   1400065e9:	mov    rax,QWORD PTR [rcx]
   1400065ec:	call   QWORD PTR [rax+0x68]
   1400065ef:	mov    rcx,QWORD PTR [rip+0x40b92]        # 0x140047188
   1400065f6:	lea    rdx,[rip+0x2cdc3]        # 0x1400333c0
   1400065fd:	mov    r8b,0x1
   140006600:	mov    rax,QWORD PTR [rcx]
   140006603:	call   QWORD PTR [rax+0xa0]
   140006609:	mov    rcx,QWORD PTR [rip+0x40b78]        # 0x140047188
   140006610:	lea    rdx,[rip+0x2cd39]        # 0x140033350
   140006617:	xor    r8d,r8d
   14000661a:	mov    rax,QWORD PTR [rcx]
   14000661d:	call   QWORD PTR [rax+0xa0]
   140006623:	mov    al,0x1
   140006625:	add    rsp,0xe40
   14000662c:	pop    r13
   14000662e:	pop    rbx
   14000662f:	pop    rbp
   140006630:	ret    
   140006631:	int3   
   140006632:	int3   
   140006633:	int3   
   140006634:	int3   
   140006635:	int3   
   140006636:	int3   
   140006637:	int3   
   140006638:	int3   
   140006639:	int3   
   14000663a:	int3   
   14000663b:	int3   
   14000663c:	int3   
   14000663d:	int3   
   14000663e:	int3   
   14000663f:	int3   
   140006640:	cmp    QWORD PTR [rip+0x40ed0],0x0        # 0x140047518
   140006648:	jne    0x14001bb20
   14000664e:	ret    
   14000664f:	int3   
   140006650:	test   rdx,rdx
   140006653:	je     0x140006987
   140006659:	push   rbp
   14000665a:	push   rbx
   14000665b:	push   rdi
   14000665c:	lea    rbp,[rsp-0x47]
   140006661:	sub    rsp,0x90
   140006668:	cmp    BYTE PTR [rdx],0x0
   14000666b:	mov    rbx,rdx
   14000666e:	mov    rdi,rcx
   140006671:	je     0x14000697d
   140006677:	mov    eax,DWORD PTR [rcx+0x1e4]
   14000667d:	test   eax,eax
   14000667f:	jne    0x14000671d
   140006685:	lea    edx,[rax+0x4]
   140006688:	mov    rax,QWORD PTR [rip+0x2bcf9]        # 0x140032388
   14000668f:	mov    ecx,DWORD PTR [rax]
   140006691:	call   QWORD PTR [rip+0x2be11]        # 0x1400324a8
   140006697:	test   al,al
   140006699:	je     0x1400066dc
   14000669b:	lea    rax,[rip+0x2cf3e]        # 0x1400335e0
   1400066a2:	mov    DWORD PTR [rbp-0x1],0x5cb
   1400066a9:	mov    QWORD PTR [rbp-0x9],rax
   1400066ad:	lea    r9,[rip+0x2d21c]        # 0x1400338d0
   1400066b4:	lea    rax,[rip+0x2d2a5]        # 0x140033960
   1400066bb:	mov    QWORD PTR [rsp+0x20],rbx
   1400066c0:	mov    QWORD PTR [rbp+0x7],rax
   1400066c4:	lea    r8,[rbp-0x9]
   1400066c8:	mov    rax,QWORD PTR [rip+0x2bcb9]        # 0x140032388
   1400066cf:	mov    edx,0x4
   1400066d4:	mov    ecx,DWORD PTR [rax]
   1400066d6:	call   QWORD PTR [rip+0x2bdbc]        # 0x140032498
   1400066dc:	call   QWORD PTR [rip+0x2bea6]        # 0x140032588
   1400066e2:	test   al,al
   1400066e4:	je     0x140006711
   1400066e6:	call   QWORD PTR [rip+0x2bd94]        # 0x140032480
   1400066ec:	lea    rcx,[rip+0x2c0b9]        # 0x1400327ac
   1400066f3:	xorps  xmm0,xmm0
   1400066f6:	lea    rdx,[rbp+0xf]
   1400066fa:	mov    DWORD PTR [rbp+0x17],eax
   1400066fd:	mov    QWORD PTR [rbp+0xf],rcx
   140006701:	mov    r8b,0x1
   140006704:	xor    ecx,ecx
   140006706:	movdqu XMMWORD PTR [rbp+0x1f],xmm0
   14000670b:	call   QWORD PTR [rip+0x2bd67]        # 0x140032478
   140006711:	mov    ecx,0x1
   140006716:	call   QWORD PTR [rip+0x2bb2c]        # 0x140032248
   14000671c:	int3   
   14000671d:	add    rcx,0x168
   140006724:	lea    rdx,[rbp+0x7f]
   140006728:	mov    r8,rbx
   14000672b:	call   0x14001ce30
   140006730:	mov    ecx,0xffff
   140006735:	cmp    WORD PTR [rax],cx
   140006738:	je     0x14000697d
   14000673e:	mov    QWORD PTR [rsp+0x88],rsi
   140006746:	lea    rdx,[rbp+0x6f]
   14000674a:	lea    rsi,[rdi+0x150]
   140006751:	mov    QWORD PTR [rsp+0x80],r14
   140006759:	lea    rcx,[rsi+0x18]
   14000675d:	mov    r8,rbx
   140006760:	call   0x14001c980
   140006765:	movzx  r14d,WORD PTR [rbp+0x6f]
   14000676a:	mov    edx,DWORD PTR [rsi]
   14000676c:	cmp    edx,r14d
   14000676f:	jg     0x140006785
   140006771:	lea    r8d,[r14+0x1]
   140006775:	cmp    edx,r8d
   140006778:	jge    0x140006785
   14000677a:	sub    r8d,edx
   14000677d:	mov    rcx,rsi
   140006780:	call   0x1400038c0
   140006785:	mov    rax,QWORD PTR [rsi+0x8]
   140006789:	cmp    DWORD PTR [rax+r14*4],0x0
   14000678e:	je     0x14000696d
   140006794:	lea    rcx,[rsi+0x18]
   140006798:	mov    r8,rbx
   14000679b:	lea    rdx,[rbp+0x77]
   14000679f:	call   0x14001c980
   1400067a4:	movzx  r14d,WORD PTR [rbp+0x77]
   1400067a9:	mov    edx,DWORD PTR [rsi]
   1400067ab:	cmp    edx,r14d
   1400067ae:	jg     0x1400067c4
   1400067b0:	lea    r8d,[r14+0x1]
   1400067b4:	cmp    edx,r8d
   1400067b7:	jge    0x1400067c4
   1400067b9:	sub    r8d,edx
   1400067bc:	mov    rcx,rsi
   1400067bf:	call   0x1400038c0
   1400067c4:	mov    rax,QWORD PTR [rsi+0x8]
   1400067c8:	dec    DWORD PTR [rax+r14*4]
   1400067cc:	cmp    DWORD PTR [rax+r14*4],0x0
   1400067d1:	jg     0x14000696d
   1400067d7:	mov    rdx,rbx
   1400067da:	mov    QWORD PTR [rbp-0x19],0x0
   1400067e2:	mov    rcx,rdi
   1400067e5:	call   0x140003b70
   1400067ea:	test   al,al
   1400067ec:	je     0x140006859
   1400067ee:	mov    r8,rbx
   1400067f1:	lea    rdx,[rbp-0x11]
   1400067f5:	mov    rcx,rdi
   1400067f8:	call   0x140002db0
   1400067fd:	cmp    QWORD PTR [rbp-0x19],0x0
   140006802:	mov    rsi,rax
   140006805:	mov    r14,QWORD PTR [rax]
   140006808:	je     0x140006813
   14000680a:	lea    rcx,[rbp-0x19]
   14000680e:	call   0x14001b030
   140006813:	mov    QWORD PTR [rbp-0x19],r14
   140006817:	mov    QWORD PTR [rsi],0x0
   14000681e:	cmp    QWORD PTR [rbp-0x11],0x0
   140006823:	je     0x14000682e
   140006825:	lea    rcx,[rbp-0x11]
   140006829:	call   0x14001b030
   14000682e:	mov    rax,QWORD PTR [rbp-0x19]
   140006832:	test   rax,rax
   140006835:	je     0x140006859
   140006837:	or     rcx,0xffffffffffffffff
   14000683b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006840:	inc    rcx
   140006843:	cmp    BYTE PTR [rax+rcx*1],0x0
   140006847:	jne    0x140006840
   140006849:	test   ecx,ecx
   14000684b:	jle    0x140006859
   14000684d:	lea    rcx,[rbp-0x19]
   140006851:	call   0x14001b050
   140006856:	mov    rbx,rax
   140006859:	mov    rcx,rdi
   14000685c:	call   0x140003960
   140006861:	mov    rcx,rbx
   140006864:	movzx  esi,al
   140006867:	call   QWORD PTR [rip+0x2bc6b]        # 0x1400324d8
   14000686d:	test   al,al
   14000686f:	je     0x14000690d
   140006875:	mov    rcx,rbx
   140006878:	call   QWORD PTR [rip+0x2bc7a]        # 0x1400324f8
   14000687e:	test   rax,rax
   140006881:	je     0x1400068b6
   140006883:	lea    rdx,[rip+0x2cfae]        # 0x140033838
   14000688a:	mov    rcx,rax
   14000688d:	call   QWORD PTR [rip+0x2bccd]        # 0x140032560
   140006893:	test   eax,eax
   140006895:	jne    0x1400068b6
   140006897:	mov    rcx,QWORD PTR [rip+0x408ea]        # 0x140047188
   14000689e:	lea    r8,[rip+0x2c93f]        # 0x1400331e4
   1400068a5:	mov    rdx,rbx
   1400068a8:	mov    rax,QWORD PTR [rcx]
   1400068ab:	call   QWORD PTR [rax+0x398]
   1400068b1:	jmp    0x14000695d
   1400068b6:	mov    rcx,QWORD PTR [rip+0x408cb]        # 0x140047188
   1400068bd:	lea    r8,[rip+0x2c920]        # 0x1400331e4
   1400068c4:	mov    rdx,rbx
   1400068c7:	mov    rax,QWORD PTR [rcx]
   1400068ca:	call   QWORD PTR [rax+0xe0]
   1400068d0:	test   al,al
   1400068d2:	je     0x14000695d
   1400068d8:	mov    rcx,QWORD PTR [rip+0x408a9]        # 0x140047188
   1400068df:	lea    r8,[rip+0x2c8fe]        # 0x1400331e4
   1400068e6:	mov    rdx,rbx
   1400068e9:	mov    rax,QWORD PTR [rcx]
   1400068ec:	call   QWORD PTR [rax+0x70]
   1400068ef:	test   sil,sil
   1400068f2:	je     0x14000695d
   1400068f4:	mov    rcx,QWORD PTR [rip+0x4088d]        # 0x140047188
   1400068fb:	lea    r8,[rip+0x2cabe]        # 0x1400333c0
   140006902:	mov    rdx,rbx
   140006905:	mov    rax,QWORD PTR [rcx]
   140006908:	call   QWORD PTR [rax+0x70]
   14000690b:	jmp    0x14000695d
   14000690d:	mov    r9,rbx
   140006910:	lea    r8,[rip+0x2cbd5]        # 0x1400334ec
   140006917:	lea    rdx,[rip+0x2c8c6]        # 0x1400331e4
   14000691e:	mov    rcx,rdi
   140006921:	call   0x140004b40
   140006926:	test   sil,sil
   140006929:	je     0x140006944
   14000692b:	mov    r9,rbx
   14000692e:	lea    r8,[rip+0x2cbb7]        # 0x1400334ec
   140006935:	lea    rdx,[rip+0x2ca84]        # 0x1400333c0
   14000693c:	mov    rcx,rdi
   14000693f:	call   0x140004b40
   140006944:	mov    r9,rbx
   140006947:	lea    r8,[rip+0x2cbaa]        # 0x1400334f8
   14000694e:	lea    rdx,[rip+0x2cb2b]        # 0x140033480
   140006955:	mov    rcx,rdi
   140006958:	call   0x140004b40
   14000695d:	cmp    QWORD PTR [rbp-0x19],0x0
   140006962:	je     0x14000696d
   140006964:	lea    rcx,[rbp-0x19]
   140006968:	call   0x14001b030
   14000696d:	mov    rsi,QWORD PTR [rsp+0x88]
   140006975:	mov    r14,QWORD PTR [rsp+0x80]
   14000697d:	add    rsp,0x90
   140006984:	pop    rdi
   140006985:	pop    rbx
   140006986:	pop    rbp
   140006987:	ret    
   140006988:	int3   
   140006989:	int3   
   14000698a:	int3   
   14000698b:	int3   
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	mov    rcx,QWORD PTR [rcx+0x8]
   140006994:	jmp    0x140006650
   140006999:	int3   
   14000699a:	int3   
   14000699b:	int3   
   14000699c:	int3   
   14000699d:	int3   
   14000699e:	int3   
   14000699f:	int3   
   1400069a0:	mov    QWORD PTR [rsp+0x10],rsi
   1400069a5:	mov    QWORD PTR [rsp+0x18],rdi
   1400069aa:	push   rbp
   1400069ab:	lea    rbp,[rsp-0x630]
   1400069b3:	sub    rsp,0x730
   1400069ba:	mov    BYTE PTR [rsp+0x30],0x0
   1400069bf:	mov    BYTE PTR [rsp+0x28],0x0
   1400069c4:	mov    DWORD PTR [rsp+0x20],r9d
   1400069c9:	mov    r9,r8
   1400069cc:	mov    r8,rdx
   1400069cf:	movzx  edx,cl
   1400069d2:	lea    rcx,[rbp-0x70]
   1400069d6:	call   0x1400016a0
   1400069db:	lea    rcx,[rbp-0x70]
   1400069df:	call   0x140003310
   1400069e4:	mov    edi,0x1
   1400069e9:	test   al,al
   1400069eb:	je     0x140006b7c
   1400069f1:	xor    r9d,r9d
   1400069f4:	lea    r8,[rip+0x2c81d]        # 0x140033218
   1400069fb:	lea    rdx,[rip+0x2c826]        # 0x140033228
   140006a02:	lea    rcx,[rbp-0x70]
   140006a06:	call   0x140008980
   140006a0b:	test   rax,rax
   140006a0e:	je     0x140006b7c
   140006a14:	lea    rcx,[rbp-0x70]
   140006a18:	call   0x1400095e0
   140006a1d:	mov    edx,edi
   140006a1f:	mov    QWORD PTR [rsp+0x68],rax
   140006a24:	lea    rcx,[rsp+0x68]
   140006a29:	call   0x140024f20
   140006a2e:	lea    rcx,[rbp-0x70]
   140006a32:	mov    BYTE PTR [rbp+0x16e],dil
   140006a39:	call   0x140005390
   140006a3e:	test   al,al
   140006a40:	je     0x140006b7c
   140006a46:	mov    rcx,QWORD PTR [rip+0x40ad3]        # 0x140047520
   140006a4d:	test   rcx,rcx
   140006a50:	je     0x140006a58
   140006a52:	mov    rax,QWORD PTR [rcx]
   140006a55:	call   QWORD PTR [rax+0x60]
   140006a58:	lea    rcx,[rbp-0x70]
   140006a5c:	call   0x140003700
   140006a61:	lea    rax,[rip+0x2d2c0]        # 0x140033d28
   140006a68:	mov    edx,0x2
   140006a6d:	mov    QWORD PTR [rsp+0x70],rax
   140006a72:	lea    r8,[rsp+0x70]
   140006a77:	lea    rax,[rip+0x2d292]        # 0x140033d10
   140006a7e:	mov    QWORD PTR [rsp+0x78],rax
   140006a83:	lea    rcx,[rbp-0x70]
   140006a87:	lea    rax,[rip+0x2d2b2]        # 0x140033d40
   140006a8e:	mov    QWORD PTR [rbp-0x80],rax
   140006a92:	lea    rax,[rip+0x2d29f]        # 0x140033d38
   140006a99:	mov    QWORD PTR [rbp-0x78],rax
   140006a9d:	call   0x140008c40
   140006aa2:	test   al,al
   140006aa4:	je     0x140006b7c
   140006aaa:	mov    QWORD PTR [rsp+0x740],rbx
   140006ab2:	call   0x140019fb0
   140006ab7:	xor    esi,esi
   140006ab9:	lea    rdx,[rsp+0x40]
   140006abe:	lea    rcx,[rsp+0x48]
   140006ac3:	mov    DWORD PTR [rsp+0x48],esi
   140006ac7:	mov    QWORD PTR [rsp+0x50],rsi
   140006acc:	mov    QWORD PTR [rsp+0x58],rsi
   140006ad1:	mov    BYTE PTR [rsp+0x40],sil
   140006ad6:	call   0x1400046f0
   140006adb:	test   al,al
   140006add:	je     0x140006af0
   140006adf:	movzx  edx,BYTE PTR [rsp+0x40]
   140006ae4:	lea    rcx,[rsp+0x48]
   140006ae9:	call   0x140006e80
   140006aee:	mov    edi,esi
   140006af0:	mov    eax,DWORD PTR [rsp+0x48]
   140006af4:	mov    rdx,QWORD PTR [rsp+0x50]
   140006af9:	sub    eax,0x1
   140006afc:	movsxd rbx,eax
   140006aff:	js     0x140006b1b
   140006b01:	cmp    QWORD PTR [rdx+rbx*8],rsi
   140006b05:	lea    rcx,[rdx+rbx*8]
   140006b09:	je     0x140006b15
   140006b0b:	call   0x14001b030
   140006b10:	mov    rdx,QWORD PTR [rsp+0x50]
   140006b15:	sub    rbx,0x1
   140006b19:	jns    0x140006b01
   140006b1b:	mov    eax,DWORD PTR [rsp+0x5c]
   140006b1f:	mov    rbx,QWORD PTR [rsp+0x740]
   140006b27:	mov    DWORD PTR [rsp+0x48],esi
   140006b2b:	test   eax,0xc0000000
   140006b30:	jne    0x140006b7c
   140006b32:	test   rdx,rdx
   140006b35:	je     0x140006b53
   140006b37:	mov    rax,QWORD PTR [rip+0x2b852]        # 0x140032390
   140006b3e:	mov    rcx,QWORD PTR [rax]
   140006b41:	mov    rax,QWORD PTR [rcx]
   140006b44:	call   QWORD PTR [rax+0x28]
   140006b47:	mov    eax,DWORD PTR [rsp+0x5c]
   140006b4b:	mov    rdx,rsi
   140006b4e:	mov    QWORD PTR [rsp+0x50],rdx
   140006b53:	mov    DWORD PTR [rsp+0x58],esi
   140006b57:	test   eax,0xc0000000
   140006b5c:	jne    0x140006b7c
   140006b5e:	test   rdx,rdx
   140006b61:	je     0x140006b78
   140006b63:	mov    rax,QWORD PTR [rip+0x2b826]        # 0x140032390
   140006b6a:	mov    rcx,QWORD PTR [rax]
   140006b6d:	mov    rax,QWORD PTR [rcx]
   140006b70:	call   QWORD PTR [rax+0x28]
   140006b73:	mov    QWORD PTR [rsp+0x50],rsi
   140006b78:	mov    DWORD PTR [rsp+0x58],esi
   140006b7c:	lea    rcx,[rbp-0x70]
   140006b80:	call   0x140001950
   140006b85:	lea    r11,[rsp+0x730]
   140006b8d:	mov    eax,edi
   140006b8f:	mov    rsi,QWORD PTR [r11+0x18]
   140006b93:	mov    rdi,QWORD PTR [r11+0x20]
   140006b97:	mov    rsp,r11
   140006b9a:	pop    rbp
   140006b9b:	ret    
   140006b9c:	int3   
   140006b9d:	int3   
   140006b9e:	int3   
   140006b9f:	int3   
   140006ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140006ba5:	push   rdi
   140006ba6:	sub    rsp,0x70
   140006baa:	mov    rbx,rdx
   140006bad:	mov    edi,ecx
   140006baf:	lea    rax,[rsp+0x30]
   140006bb4:	test   al,0x7
   140006bb6:	je     0x140006bc3
   140006bb8:	call   QWORD PTR [rip+0x2b9f2]        # 0x1400325b0
   140006bbe:	test   eax,eax
   140006bc0:	je     0x140006bc3
   140006bc2:	int3   
   140006bc3:	xor    r8d,r8d
   140006bc6:	xor    edx,edx
   140006bc8:	lea    rcx,[rsp+0x30]
   140006bcd:	call   QWORD PTR [rip+0x2b7cd]        # 0x1400323a0
   140006bd3:	call   QWORD PTR [rip+0x2b7cf]        # 0x1400323a8
   140006bd9:	call   QWORD PTR [rip+0x2b8d9]        # 0x1400324b8
   140006bdf:	mov    r9,QWORD PTR [rax]
   140006be2:	mov    r8,rbx
   140006be5:	mov    edx,edi
   140006be7:	mov    rcx,rax
   140006bea:	call   QWORD PTR [r9]
   140006bed:	mov    r8b,0x1
   140006bf0:	movzx  edx,r8b
   140006bf4:	xor    ecx,ecx
   140006bf6:	call   QWORD PTR [rip+0x2b874]        # 0x140032470
   140006bfc:	call   QWORD PTR [rip+0x2b8b6]        # 0x1400324b8
   140006c02:	mov    r8,QWORD PTR [rax]
   140006c05:	lea    rdx,[rip+0x2bdbc]        # 0x1400329c8
   140006c0c:	mov    rcx,rax
   140006c0f:	call   QWORD PTR [r8+0x20]
   140006c13:	movzx  ebx,al
   140006c16:	call   QWORD PTR [rip+0x2b89c]        # 0x1400324b8
   140006c1c:	mov    r8,QWORD PTR [rax]
   140006c1f:	lea    rdx,[rip+0x2bdba]        # 0x1400329e0
   140006c26:	mov    rcx,rax
   140006c29:	call   QWORD PTR [r8+0x20]
   140006c2d:	test   bl,bl
   140006c2f:	jne    0x140006c35
   140006c31:	test   al,al
   140006c33:	je     0x140006c40
   140006c35:	xor    edx,edx
   140006c37:	movzx  ecx,al
   140006c3a:	call   QWORD PTR [rip+0x2b610]        # 0x140032250
   140006c40:	mov    DWORD PTR [rsp+0x90],0x1
   140006c4b:	lea    r9,[rip+0x2cfde]        # 0x140033c30
   140006c52:	mov    r8d,0x96
   140006c58:	lea    rdx,[rip+0x2cfe1]        # 0x140033c40
   140006c5f:	lea    rcx,[rip+0x2d02a]        # 0x140033c90
   140006c66:	call   QWORD PTR [rip+0x2b764]        # 0x1400323d0
   140006c6c:	nop
   140006c6d:	lea    rcx,[rip+0x2d04c]        # 0x140033cc0
   140006c74:	call   QWORD PTR [rip+0x2b756]        # 0x1400323d0
   140006c7a:	xor    r9d,r9d
   140006c7d:	xor    r8d,r8d
   140006c80:	xor    edx,edx
   140006c82:	mov    cl,0x1
   140006c84:	call   0x1400069a0
   140006c89:	mov    ebx,eax
   140006c8b:	mov    DWORD PTR [rsp+0x90],eax
   140006c92:	jmp    0x140006ca8
   140006c94:	lea    rcx,[rip+0x2d04d]        # 0x140033ce8
   140006c9b:	call   QWORD PTR [rip+0x2b72f]        # 0x1400323d0
   140006ca1:	mov    ebx,DWORD PTR [rsp+0x90]
   140006ca8:	lea    rcx,[rsp+0x30]
   140006cad:	call   QWORD PTR [rip+0x2b6e5]        # 0x140032398
   140006cb3:	mov    eax,ebx
   140006cb5:	mov    rbx,QWORD PTR [rsp+0x80]
   140006cbd:	add    rsp,0x70
   140006cc1:	pop    rdi
   140006cc2:	ret    
   140006cc3:	int3   
   140006cc4:	int3   
   140006cc5:	int3   
   140006cc6:	int3   
   140006cc7:	int3   
   140006cc8:	int3   
   140006cc9:	int3   
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	mov    QWORD PTR [rsp+0x8],rbx
   140006cd5:	mov    QWORD PTR [rsp+0x10],rsi
   140006cda:	push   rdi
   140006cdb:	sub    rsp,0x20
   140006cdf:	mov    rbx,rcx
   140006ce2:	mov    edi,r8d
   140006ce5:	mov    ecx,0x18
   140006cea:	mov    rsi,rdx
   140006ced:	call   0x140007bf0
   140006cf2:	test   rax,rax
   140006cf5:	je     0x140006d05
   140006cf7:	mov    r8d,edi
   140006cfa:	mov    rdx,rsi
   140006cfd:	mov    rcx,rax
   140006d00:	call   0x140025ee0
   140006d05:	mov    QWORD PTR [rbx],rax
   140006d08:	mov    rcx,rax
   140006d0b:	mov    BYTE PTR [rbx+0x8],0x1
   140006d0f:	mov    rax,QWORD PTR [rax]
   140006d12:	call   QWORD PTR [rax+0x10]
   140006d15:	cmp    eax,0x1
   140006d18:	jl     0x140006d41
   140006d1a:	je     0x140006d2a
   140006d1c:	cmp    eax,0x2
   140006d1f:	jne    0x140006d41
   140006d21:	mov    rcx,QWORD PTR [rbx]
   140006d24:	mov    rax,QWORD PTR [rcx]
   140006d27:	call   QWORD PTR [rax+0x28]
   140006d2a:	mov    BYTE PTR [rbx+0x8],0x0
   140006d2e:	mov    rax,rbx
   140006d31:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d36:	mov    rsi,QWORD PTR [rsp+0x38]
   140006d3b:	add    rsp,0x20
   140006d3f:	pop    rdi
   140006d40:	ret    
   140006d41:	mov    rsi,QWORD PTR [rsp+0x38]
   140006d46:	mov    rax,rbx
   140006d49:	mov    BYTE PTR [rbx+0x8],0x1
   140006d4d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d52:	add    rsp,0x20
   140006d56:	pop    rdi
   140006d57:	ret    
   140006d58:	int3   
   140006d59:	int3   
   140006d5a:	int3   
   140006d5b:	int3   
   140006d5c:	int3   
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	mov    QWORD PTR [rsp+0x10],rbx
   140006d65:	push   rdi
   140006d66:	sub    rsp,0x130
   140006d6d:	mov    edx,0x1
   140006d72:	mov    rdi,rcx
   140006d75:	call   0x14000f1c0
   140006d7a:	test   al,al
   140006d7c:	je     0x140006deb
   140006d7e:	xor    edx,edx
   140006d80:	mov    rcx,rdi
   140006d83:	call   0x14000f030
   140006d88:	mov    rbx,rax
   140006d8b:	test   rax,rax
   140006d8e:	je     0x140006deb
   140006d90:	cmp    BYTE PTR [rax],0x0
   140006d93:	je     0x140006deb
   140006d95:	mov    r8d,0x104
   140006d9b:	lea    rdx,[rsp+0x20]
   140006da0:	mov    rcx,rax
   140006da3:	call   0x14001a1a0
   140006da8:	test   al,al
   140006daa:	je     0x140006dbb
   140006dac:	lea    rdx,[rsp+0x20]
   140006db1:	mov    rcx,rdi
   140006db4:	call   0x1400116c0
   140006db9:	jmp    0x140006deb
   140006dbb:	mov    ecx,DWORD PTR [rip+0x40283]        # 0x140047044
   140006dc1:	mov    edx,0x2
   140006dc6:	call   QWORD PTR [rip+0x2b6dc]        # 0x1400324a8
   140006dcc:	test   al,al
   140006dce:	je     0x140006deb
   140006dd0:	mov    ecx,DWORD PTR [rip+0x4026e]        # 0x140047044
   140006dd6:	lea    r8,[rip+0x2d0d3]        # 0x140033eb0
   140006ddd:	mov    r9,rbx
   140006de0:	mov    edx,0x2
   140006de5:	call   QWORD PTR [rip+0x2b6b5]        # 0x1400324a0
   140006deb:	mov    rcx,rdi
   140006dee:	mov    QWORD PTR [rsp+0x140],rsi
   140006df6:	call   0x14000f090
   140006dfb:	mov    rcx,rdi
   140006dfe:	cmp    al,0x8
   140006e00:	jne    0x140006e2a
   140006e02:	call   0x14000ea00
   140006e07:	xor    ebx,ebx
   140006e09:	mov    esi,eax
   140006e0b:	test   eax,eax
   140006e0d:	jle    0x140006e5b
   140006e0f:	nop
   140006e10:	mov    edx,ebx
   140006e12:	mov    rcx,rdi
   140006e15:	call   0x14000e9b0
   140006e1a:	mov    rcx,rax
   140006e1d:	call   0x140006d60
   140006e22:	inc    ebx
   140006e24:	cmp    ebx,esi
   140006e26:	jl     0x140006e10
   140006e28:	jmp    0x140006e5b
   140006e2a:	call   0x14000f090
   140006e2f:	cmp    al,0x9
   140006e31:	jne    0x140006e5b
   140006e33:	mov    rcx,rdi
   140006e36:	call   0x14000ec10
   140006e3b:	xor    ebx,ebx
   140006e3d:	mov    esi,eax
   140006e3f:	test   eax,eax
   140006e41:	jle    0x140006e5b
   140006e43:	mov    edx,ebx
   140006e45:	mov    rcx,rdi
   140006e48:	call   0x14000ebc0
   140006e4d:	mov    rcx,rax
   140006e50:	call   0x140006d60
   140006e55:	inc    ebx
   140006e57:	cmp    ebx,esi
   140006e59:	jl     0x140006e43
   140006e5b:	mov    rsi,QWORD PTR [rsp+0x140]
   140006e63:	mov    rbx,QWORD PTR [rsp+0x148]
   140006e6b:	add    rsp,0x130
   140006e72:	pop    rdi
   140006e73:	ret    
   140006e74:	int3   
   140006e75:	int3   
   140006e76:	int3   
   140006e77:	int3   
   140006e78:	int3   
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	mov    QWORD PTR [rsp+0x8],rbx
   140006e85:	mov    QWORD PTR [rsp+0x10],rsi
   140006e8a:	mov    QWORD PTR [rsp+0x18],rdi
   140006e8f:	mov    QWORD PTR [rsp+0x20],r12
   140006e94:	push   rbp
   140006e95:	push   r14
   140006e97:	push   r15
   140006e99:	mov    eax,0x1040
   140006e9e:	call   0x1400263c0
   140006ea3:	sub    rsp,rax
   140006ea6:	lea    rbp,[rsp+0x440]
   140006eae:	and    rbp,0xfffffffffffffc00
   140006eb5:	mov    r15,rcx
   140006eb8:	mov    rcx,QWORD PTR [rip+0x40359]        # 0x140047218
   140006ebf:	test   rcx,rcx
   140006ec2:	je     0x140006ed4
   140006ec4:	mov    rax,QWORD PTR [rcx]
   140006ec7:	lea    rdx,[rip+0x2d00a]        # 0x140033ed8
   140006ece:	call   QWORD PTR [rax+0x138]
   140006ed4:	xor    r12d,r12d
   140006ed7:	lea    rdx,[rip+0x2d022]        # 0x140033f00
   140006ede:	lea    rcx,[rbp+0x0]
   140006ee2:	mov    DWORD PTR [rbp+0x8],r12d
   140006ee6:	mov    QWORD PTR [rbp+0x10],r12
   140006eea:	mov    QWORD PTR [rbp+0x18],r12
   140006eee:	mov    QWORD PTR [rbp+0x0],r12
   140006ef2:	call   0x14001b3a0
   140006ef7:	movsxd rax,DWORD PTR [rbp+0x8]
   140006efb:	mov    rbx,rax
   140006efe:	cmp    eax,DWORD PTR [rbp+0x18]
   140006f01:	jne    0x140006f14
   140006f03:	lea    edx,[r12+0x1]
   140006f08:	lea    rcx,[rbp+0x10]
   140006f0c:	call   0x140013420
   140006f11:	mov    eax,DWORD PTR [rbp+0x8]
   140006f14:	inc    eax
   140006f16:	mov    DWORD PTR [rbp+0x8],eax
   140006f19:	mov    rax,QWORD PTR [rbp+0x10]
   140006f1d:	lea    rbx,[rax+rbx*8]
   140006f21:	test   rbx,rbx
   140006f24:	je     0x140006f3d
   140006f26:	lea    rcx,[rbp+0x0]
   140006f2a:	mov    QWORD PTR [rbx],r12
   140006f2d:	call   0x14001b050
   140006f32:	mov    rdx,rax
   140006f35:	mov    rcx,rbx
   140006f38:	call   0x14001b3a0
   140006f3d:	cmp    QWORD PTR [rbp+0x0],r12
   140006f41:	je     0x140006f4c
   140006f43:	lea    rcx,[rbp+0x0]
   140006f47:	call   0x14001b030
   140006f4c:	mov    rcx,QWORD PTR [rip+0x40265]        # 0x1400471b8
   140006f53:	lea    rdx,[rbp+0x8]
   140006f57:	mov    rax,QWORD PTR [rcx]
   140006f5a:	call   QWORD PTR [rax+0xa0]
   140006f60:	mov    r14d,r12d
   140006f63:	cmp    DWORD PTR [r15],r12d
   140006f66:	jle    0x1400072f2
   140006f6c:	nop    DWORD PTR [rax+0x0]
   140006f70:	mov    rax,QWORD PTR [r15+0x8]
   140006f74:	mov    r9d,0x1
   140006f7a:	movsxd rcx,r14d
   140006f7d:	xor    r8d,r8d
   140006f80:	xor    edx,edx
   140006f82:	lea    rsi,[rax+rcx*8]
   140006f86:	lea    rcx,[rbp+0x70]
   140006f8a:	call   0x140020850
   140006f8f:	mov    rax,QWORD PTR [rip+0x401f2]        # 0x140047188
   140006f96:	mov    rcx,rsi
   140006f99:	mov    rbx,QWORD PTR [rax+0x8]
   140006f9d:	call   0x14001b050
   140006fa2:	mov    rcx,QWORD PTR [rip+0x401df]        # 0x140047188
   140006fa9:	lea    r9,[rbp+0x70]
   140006fad:	mov    QWORD PTR [rsp+0x30],r12
   140006fb2:	add    rcx,0x8
   140006fb6:	mov    rdx,rax
   140006fb9:	mov    DWORD PTR [rsp+0x28],r12d
   140006fbe:	xor    r8d,r8d
   140006fc1:	mov    DWORD PTR [rsp+0x20],r12d
   140006fc6:	call   QWORD PTR [rbx+0x70]
   140006fc9:	test   al,al
   140006fcb:	jne    0x14000700e
   140006fcd:	mov    ecx,DWORD PTR [rip+0x40071]        # 0x140047044
   140006fd3:	mov    edx,0x2
   140006fd8:	call   QWORD PTR [rip+0x2b4ca]        # 0x1400324a8
   140006fde:	test   al,al
   140006fe0:	je     0x1400072c4
   140006fe6:	mov    rcx,rsi
   140006fe9:	call   0x14001b050
   140006fee:	mov    ecx,DWORD PTR [rip+0x40050]        # 0x140047044
   140006ff4:	lea    r8,[rip+0x2cf15]        # 0x140033f10
   140006ffb:	mov    r9,rax
   140006ffe:	mov    edx,0x2
   140007003:	call   QWORD PTR [rip+0x2b497]        # 0x1400324a0
   140007009:	jmp    0x1400072c4
   14000700e:	lea    rcx,[rbp+0x400]
   140007015:	call   0x14000c4e0
   14000701a:	lea    r9,[rip+0x3f017]        # 0x140046038
   140007021:	mov    QWORD PTR [rbp+0x0],r12
   140007025:	lea    r8,[rbp+0x70]
   140007029:	lea    rdx,[rbp+0x0]
   14000702d:	lea    rcx,[rbp+0x400]
   140007034:	call   0x14000ff10
   140007039:	test   al,al
   14000703b:	jne    0x14000708f
   14000703d:	mov    ecx,DWORD PTR [rip+0x40001]        # 0x140047044
   140007043:	mov    edx,0x2
   140007048:	call   QWORD PTR [rip+0x2b45a]        # 0x1400324a8
   14000704e:	test   al,al
   140007050:	je     0x1400072a9
   140007056:	lea    rcx,[rbp+0x0]
   14000705a:	call   0x14001b050
   14000705f:	mov    rcx,rsi
   140007062:	mov    rbx,rax
   140007065:	call   0x14001b050
   14000706a:	mov    ecx,DWORD PTR [rip+0x3ffd4]        # 0x140047044
   140007070:	lea    r8,[rip+0x2ceb9]        # 0x140033f30
   140007077:	mov    r9,rax
   14000707a:	mov    QWORD PTR [rsp+0x20],rbx
   14000707f:	mov    edx,0x2
   140007084:	call   QWORD PTR [rip+0x2b416]        # 0x1400324a0
   14000708a:	jmp    0x1400072a9
   14000708f:	lea    rcx,[rbp+0x400]
   140007096:	call   0x140011170
   14000709b:	mov    rcx,rax
   14000709e:	lea    rdx,[rip+0x2ceb3]        # 0x140033f58
   1400070a5:	call   0x140013520
   1400070aa:	lea    rcx,[rbp+0x400]
   1400070b1:	call   0x140011170
   1400070b6:	mov    rcx,rax
   1400070b9:	call   0x140013970
   1400070be:	lea    rcx,[rbp+0x400]
   1400070c5:	call   0x140011170
   1400070ca:	mov    rcx,rax
   1400070cd:	call   0x140013da0
   1400070d2:	lea    rcx,[rbp+0x400]
   1400070d9:	call   0x140011170
   1400070de:	mov    rcx,rax
   1400070e1:	call   0x140006d60
   1400070e6:	mov    r9d,0x1
   1400070ec:	lea    rcx,[rbp+0x30]
   1400070f0:	xor    r8d,r8d
   1400070f3:	xor    edx,edx
   1400070f5:	call   0x140020850
   1400070fa:	lea    rcx,[rbp+0x400]
   140007101:	call   0x140011170
   140007106:	mov    r8,rax
   140007109:	lea    r9,[rbp+0x0]
   14000710d:	lea    rax,[rbp+0x30]
   140007111:	lea    rdx,[rip+0x3ef20]        # 0x140046038
   140007118:	mov    QWORD PTR [rsp+0x20],rax
   14000711d:	lea    rcx,[rip+0x3eee4]        # 0x140046008
   140007124:	call   0x140011860
   140007129:	test   al,al
   14000712b:	jne    0x14000717f
   14000712d:	mov    ecx,DWORD PTR [rip+0x3ff11]        # 0x140047044
   140007133:	mov    edx,0x2
   140007138:	call   QWORD PTR [rip+0x2b36a]        # 0x1400324a8
   14000713e:	test   al,al
   140007140:	je     0x14000727f
   140007146:	lea    rcx,[rbp+0x0]
   14000714a:	call   0x14001b050
   14000714f:	mov    rcx,rsi
   140007152:	mov    rbx,rax
   140007155:	call   0x14001b050
   14000715a:	mov    ecx,DWORD PTR [rip+0x3fee4]        # 0x140047044
   140007160:	lea    r8,[rip+0x2ce11]        # 0x140033f78
   140007167:	mov    r9,rax
   14000716a:	mov    QWORD PTR [rsp+0x20],rbx
   14000716f:	mov    edx,0x2
   140007174:	call   QWORD PTR [rip+0x2b326]        # 0x1400324a0
   14000717a:	jmp    0x14000727f
   14000717f:	cmp    QWORD PTR [rip+0x40092],r12        # 0x140047218
   140007186:	mov    rcx,rsi
   140007189:	setne  bl
   14000718c:	call   0x14001b050
   140007191:	mov    rdi,rax
   140007194:	test   bl,bl
   140007196:	je     0x1400071ba
   140007198:	mov    ecx,0x10
   14000719d:	call   0x140007bf0
   1400071a2:	test   rax,rax
   1400071a5:	je     0x1400071ba
   1400071a7:	xor    r8d,r8d
   1400071aa:	mov    rdx,rdi
   1400071ad:	mov    rcx,rax
   1400071b0:	call   0x140006cd0
   1400071b5:	mov    rbx,rax
   1400071b8:	jmp    0x1400071bd
   1400071ba:	mov    rbx,r12
   1400071bd:	mov    rax,QWORD PTR [rip+0x3ffc4]        # 0x140047188
   1400071c4:	mov    rcx,rsi
   1400071c7:	mov    rdi,QWORD PTR [rax+0x8]
   1400071cb:	call   0x14001b050
   1400071d0:	mov    rcx,QWORD PTR [rip+0x3ffb1]        # 0x140047188
   1400071d7:	lea    r9,[rbp+0x30]
   1400071db:	add    rcx,0x8
   1400071df:	mov    rdx,rax
   1400071e2:	xor    r8d,r8d
   1400071e5:	call   QWORD PTR [rdi+0x78]
   1400071e8:	mov    ecx,DWORD PTR [rip+0x3fe56]        # 0x140047044
   1400071ee:	test   al,al
   1400071f0:	jne    0x140007217
   1400071f2:	mov    edx,0x2
   1400071f7:	call   QWORD PTR [rip+0x2b2ab]        # 0x1400324a8
   1400071fd:	test   al,al
   1400071ff:	je     0x140007249
   140007201:	mov    rcx,rsi
   140007204:	call   0x14001b050
   140007209:	lea    r8,[rip+0x2cd90]        # 0x140033fa0
   140007210:	mov    edx,0x2
   140007215:	jmp    0x14000723a
   140007217:	mov    edx,0x1
   14000721c:	call   QWORD PTR [rip+0x2b286]        # 0x1400324a8
   140007222:	test   al,al
   140007224:	je     0x140007249
   140007226:	mov    rcx,rsi
   140007229:	call   0x14001b050
   14000722e:	lea    r8,[rip+0x2cd8b]        # 0x140033fc0
   140007235:	mov    edx,0x1
   14000723a:	mov    ecx,DWORD PTR [rip+0x3fe04]        # 0x140047044
   140007240:	mov    r9,rax
   140007243:	call   QWORD PTR [rip+0x2b257]        # 0x1400324a0
   140007249:	test   rbx,rbx
   14000724c:	je     0x14000727f
   14000724e:	cmp    BYTE PTR [rbx+0x8],r12b
   140007252:	je     0x14000725d
   140007254:	mov    rcx,QWORD PTR [rbx]
   140007257:	mov    rax,QWORD PTR [rcx]
   14000725a:	call   QWORD PTR [rax+0x18]
   14000725d:	mov    rcx,QWORD PTR [rbx]
   140007260:	mov    QWORD PTR [rbx],r12
   140007263:	test   rcx,rcx
   140007266:	je     0x140007272
   140007268:	mov    rax,QWORD PTR [rcx]
   14000726b:	mov    edx,0x1
   140007270:	call   QWORD PTR [rax]
   140007272:	mov    edx,0x10
   140007277:	mov    rcx,rbx
   14000727a:	call   0x14002639c
   14000727f:	test   DWORD PTR [rbp+0x3c],0xc0000000
   140007286:	jne    0x1400072a9
   140007288:	mov    rdx,QWORD PTR [rbp+0x30]
   14000728c:	test   rdx,rdx
   14000728f:	je     0x1400072a5
   140007291:	mov    rax,QWORD PTR [rip+0x2b0f8]        # 0x140032390
   140007298:	mov    rcx,QWORD PTR [rax]
   14000729b:	mov    rax,QWORD PTR [rcx]
   14000729e:	call   QWORD PTR [rax+0x28]
   1400072a1:	mov    QWORD PTR [rbp+0x30],r12
   1400072a5:	mov    DWORD PTR [rbp+0x38],r12d
   1400072a9:	cmp    QWORD PTR [rbp+0x0],r12
   1400072ad:	je     0x1400072b8
   1400072af:	lea    rcx,[rbp+0x0]
   1400072b3:	call   0x14001b030
   1400072b8:	lea    rcx,[rbp+0x400]
   1400072bf:	call   0x14000c850
   1400072c4:	test   DWORD PTR [rbp+0x7c],0xc0000000
   1400072cb:	jne    0x1400072e6
   1400072cd:	mov    rdx,QWORD PTR [rbp+0x70]
   1400072d1:	test   rdx,rdx
   1400072d4:	je     0x1400072e6
   1400072d6:	mov    rax,QWORD PTR [rip+0x2b0b3]        # 0x140032390
   1400072dd:	mov    rcx,QWORD PTR [rax]
   1400072e0:	mov    rax,QWORD PTR [rcx]
   1400072e3:	call   QWORD PTR [rax+0x28]
   1400072e6:	inc    r14d
   1400072e9:	cmp    r14d,DWORD PTR [r15]
   1400072ec:	jl     0x140006f70
   1400072f2:	mov    eax,DWORD PTR [rbp+0x8]
   1400072f5:	mov    rdx,QWORD PTR [rbp+0x10]
   1400072f9:	sub    eax,0x1
   1400072fc:	movsxd rbx,eax
   1400072ff:	js     0x14000731a
   140007301:	cmp    QWORD PTR [rdx+rbx*8],r12
   140007305:	lea    rcx,[rdx+rbx*8]
   140007309:	je     0x140007314
   14000730b:	call   0x14001b030
   140007310:	mov    rdx,QWORD PTR [rbp+0x10]
   140007314:	sub    rbx,0x1
   140007318:	jns    0x140007301
   14000731a:	mov    eax,DWORD PTR [rbp+0x1c]
   14000731d:	mov    DWORD PTR [rbp+0x8],r12d
   140007321:	test   eax,0xc0000000
   140007326:	jne    0x140007367
   140007328:	test   rdx,rdx
   14000732b:	je     0x140007347
   14000732d:	mov    rax,QWORD PTR [rip+0x2b05c]        # 0x140032390
   140007334:	mov    rcx,QWORD PTR [rax]
   140007337:	mov    rax,QWORD PTR [rcx]
   14000733a:	call   QWORD PTR [rax+0x28]
   14000733d:	mov    eax,DWORD PTR [rbp+0x1c]
   140007340:	mov    rdx,r12
   140007343:	mov    QWORD PTR [rbp+0x10],rdx
   140007347:	mov    DWORD PTR [rbp+0x18],r12d
   14000734b:	test   eax,0xc0000000
   140007350:	jne    0x140007367
   140007352:	test   rdx,rdx
   140007355:	je     0x140007367
   140007357:	mov    rax,QWORD PTR [rip+0x2b032]        # 0x140032390
   14000735e:	mov    rcx,QWORD PTR [rax]
   140007361:	mov    rax,QWORD PTR [rcx]
   140007364:	call   QWORD PTR [rax+0x28]
   140007367:	lea    r11,[rsp+0x1040]
   14000736f:	mov    rbx,QWORD PTR [r11+0x20]
   140007373:	mov    rsi,QWORD PTR [r11+0x28]
   140007377:	mov    rdi,QWORD PTR [r11+0x30]
   14000737b:	mov    r12,QWORD PTR [r11+0x38]
   14000737f:	mov    rsp,r11
   140007382:	pop    r15
   140007384:	pop    r14
   140007386:	pop    rbp
   140007387:	ret    
   140007388:	int3   
   140007389:	int3   
   14000738a:	int3   
   14000738b:	int3   
   14000738c:	int3   
   14000738d:	int3   
   14000738e:	int3   
   14000738f:	int3   
   140007390:	mov    QWORD PTR [rsp+0x8],rbx
   140007395:	push   rdi
   140007396:	sub    rsp,0x20
   14000739a:	mov    rbx,rdx
   14000739d:	movsxd rdi,ecx
   1400073a0:	prefetchw BYTE PTR [rip+0x3fcd9]        # 0x140047080
   1400073a7:	mov    eax,DWORD PTR [rip+0x3fcd3]        # 0x140047080
   1400073ad:	nop    DWORD PTR [rax]
   1400073b0:	mov    r8d,eax
   1400073b3:	bts    r8d,0x1e
   1400073b8:	lock cmpxchg DWORD PTR [rip+0x3fcbf],r8d        # 0x140047080
   1400073c1:	jne    0x1400073b0
   1400073c3:	cmp    eax,0xbfffffff
   1400073c8:	jne    0x1400073de
   1400073ca:	lea    rdx,[rip+0x3fca7]        # 0x140047078
   1400073d1:	lea    rcx,[rip+0x2cc40]        # 0x140034018
   1400073d8:	call   QWORD PTR [rip+0x2afa2]        # 0x140032380
   1400073de:	cmp    edi,0x8
   1400073e1:	ja     0x140007496
   1400073e7:	lea    rdx,[rip+0xffffffffffff8c12]        # 0x140000000
   1400073ee:	mov    ecx,DWORD PTR [rdx+rdi*4+0x74a4]
   1400073f5:	add    rcx,rdx
   1400073f8:	jmp    rcx
   1400073fa:	lea    rax,[rip+0x2cbff]        # 0x140034000
   140007401:	mov    DWORD PTR [rbx+0x8],0x0
   140007408:	mov    QWORD PTR [rbx],rax
   14000740b:	mov    eax,0x1
   140007410:	mov    rbx,QWORD PTR [rsp+0x30]
   140007415:	add    rsp,0x20
   140007419:	pop    rdi
   14000741a:	ret    
   14000741b:	mov    DWORD PTR [rbx+0x8],0x1
   140007422:	mov    eax,0x1
   140007427:	mov    QWORD PTR [rbx],0x0
   14000742e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007433:	add    rsp,0x20
   140007437:	pop    rdi
   140007438:	ret    
   140007439:	mov    DWORD PTR [rbx+0x8],0x1
   140007440:	mov    eax,0x1
   140007445:	mov    QWORD PTR [rbx],0x1
   14000744c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007451:	add    rsp,0x20
   140007455:	pop    rdi
   140007456:	ret    
   140007457:	lea    rax,[rip+0x2cbaa]        # 0x140034008
   14000745e:	mov    DWORD PTR [rbx+0x8],0x0
   140007465:	mov    QWORD PTR [rbx],rax
   140007468:	mov    eax,0x1
   14000746d:	mov    rbx,QWORD PTR [rsp+0x30]
   140007472:	add    rsp,0x20
   140007476:	pop    rdi
   140007477:	ret    
   140007478:	mov    DWORD PTR [rbx+0x8],0x1
   14000747f:	mov    eax,0x1
   140007484:	mov    QWORD PTR [rbx],0x100000
   14000748b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007490:	add    rsp,0x20
   140007494:	pop    rdi
   140007495:	ret    
   140007496:	xor    eax,eax
   140007498:	mov    rbx,QWORD PTR [rsp+0x30]
   14000749d:	add    rsp,0x20
   1400074a1:	pop    rdi
   1400074a2:	ret    
   1400074a3:	nop
   1400074a4:	cli    
   1400074a5:	jae    0x1400074a7
   1400074a7:	add    BYTE PTR [rbx],bl
   1400074a9:	je     0x1400074ab
   1400074ab:	add    BYTE PTR [rcx],bh
   1400074ad:	je     0x1400074af
   1400074af:	add    BYTE PTR [rdi+0x74],dl
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	push   rdi
   1400074b5:	je     0x1400074b7
   1400074b7:	add    BYTE PTR [rbx],bl
   1400074b9:	je     0x1400074bb
   1400074bb:	add    BYTE PTR [rcx],bh
   1400074bd:	je     0x1400074bf
   1400074bf:	add    BYTE PTR [rcx],bh
   1400074c1:	je     0x1400074c3
   1400074c3:	add    BYTE PTR [rax+0x74],bh
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	int3   
   1400074c9:	int3   
   1400074ca:	int3   
   1400074cb:	int3   
   1400074cc:	int3   
   1400074cd:	int3   
   1400074ce:	int3   
   1400074cf:	int3   
   1400074d0:	mov    QWORD PTR [rcx],rdx
   1400074d3:	mov    rax,rcx
   1400074d6:	mov    QWORD PTR [rcx+0x8],r8
   1400074da:	ret    
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	mov    QWORD PTR [rcx],rdx
   1400074e3:	mov    DWORD PTR [rcx+0x8],r8d
   1400074e7:	mov    rax,QWORD PTR [r9]
   1400074ea:	mov    QWORD PTR [rcx+0x10],rax
   1400074ee:	mov    rax,QWORD PTR [r9+0x8]
   1400074f2:	mov    QWORD PTR [rcx+0x18],rax
   1400074f6:	mov    rax,rcx
   1400074f9:	ret    
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	int3   
   1400074fd:	int3   
   1400074fe:	int3   
   1400074ff:	int3   
   140007500:	mov    QWORD PTR [rsp+0x8],rbx
   140007505:	push   rdi
   140007506:	sub    rsp,0x20
   14000750a:	movzx  edi,dl
   14000750d:	mov    rbx,rcx
   140007510:	mov    eax,0x1
   140007515:	lock xadd DWORD PTR [rcx+0x8],eax
   14000751a:	add    eax,0x1
   14000751d:	jns    0x140007529
   14000751f:	nop
   140007520:	pause  
   140007522:	mov    eax,DWORD PTR [rcx+0x8]
   140007525:	test   eax,eax
   140007527:	js     0x140007520
   140007529:	bt     eax,0x19
   14000752d:	jb     0x14000758d
   14000752f:	nop
   140007530:	prefetchw BYTE PTR [rbx+0x8]
   140007534:	mov    eax,DWORD PTR [rbx+0x8]
   140007537:	nop    WORD PTR [rax+rax*1+0x0]
   140007540:	mov    ecx,eax
   140007542:	or     ecx,0x80000000
   140007548:	lock cmpxchg DWORD PTR [rbx+0x8],ecx
   14000754d:	jne    0x140007540
   14000754f:	test   eax,eax
   140007551:	js     0x140007530
   140007553:	mov    eax,DWORD PTR [rbx+0x8]
   140007556:	bt     eax,0x19
   14000755a:	jb     0x140007585
   14000755c:	mov    rcx,rbx
   14000755f:	call   QWORD PTR [rip+0x2ae13]        # 0x140032378
   140007565:	lea    rcx,[rip+0x174]        # 0x1400076e0
   14000756c:	call   0x140026f24
   140007571:	lea    rcx,[rip+0x138]        # 0x1400076b0
   140007578:	call   0x140028214
   14000757d:	lock or DWORD PTR [rbx+0x8],0x2000000
   140007585:	lock and DWORD PTR [rbx+0x8],0x7fffffff
   14000758d:	test   dil,dil
   140007590:	jne    0x1400075a0
   140007592:	mov    eax,DWORD PTR [rbx+0x8]
   140007595:	test   eax,0xc000000
   14000759a:	jne    0x1400075cb
   14000759c:	lock inc DWORD PTR [rbx+0x8]
   1400075a0:	prefetchw BYTE PTR [rbx+0x8]
   1400075a4:	mov    eax,DWORD PTR [rbx+0x8]
   1400075a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400075b0:	mov    ecx,eax
   1400075b2:	bts    ecx,0x1a
   1400075b6:	lock cmpxchg DWORD PTR [rbx+0x8],ecx
   1400075bb:	jne    0x1400075b0
   1400075bd:	bt     eax,0x1a
   1400075c1:	jae    0x1400075cb
   1400075c3:	mov    rcx,rbx
   1400075c6:	call   0x1400075e0
   1400075cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075d0:	add    rsp,0x20
   1400075d4:	pop    rdi
   1400075d5:	ret    
   1400075d6:	int3   
   1400075d7:	int3   
   1400075d8:	int3   
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	rex push rbx
   1400075e2:	sub    rsp,0x20
   1400075e6:	mov    rbx,rcx
   1400075e9:	or     eax,0xffffffff
   1400075ec:	lock xadd DWORD PTR [rcx+0x8],eax
   1400075f1:	dec    eax
   1400075f3:	test   eax,0x1ffffff
   1400075f8:	jne    0x14000764e
   1400075fa:	nop    WORD PTR [rax+rax*1+0x0]
   140007600:	prefetchw BYTE PTR [rbx+0x8]
   140007604:	mov    eax,DWORD PTR [rbx+0x8]
   140007607:	nop    WORD PTR [rax+rax*1+0x0]
   140007610:	mov    ecx,eax
   140007612:	or     ecx,0x80000000
   140007618:	lock cmpxchg DWORD PTR [rbx+0x8],ecx
   14000761d:	jne    0x140007610
   14000761f:	test   eax,eax
   140007621:	js     0x140007600
   140007623:	mov    eax,DWORD PTR [rbx+0x8]
   140007626:	test   eax,0x1ffffff
   14000762b:	jne    0x140007646
   14000762d:	mov    eax,DWORD PTR [rbx+0x8]
   140007630:	bt     eax,0x19
   140007634:	jae    0x140007646
   140007636:	lock and DWORD PTR [rbx+0x8],0xfdffffff
   14000763e:	mov    rcx,rbx
   140007641:	call   0x140007660
   140007646:	lock and DWORD PTR [rbx+0x8],0x7fffffff
   14000764e:	add    rsp,0x20
   140007652:	pop    rbx
   140007653:	ret    
   140007654:	int3   
   140007655:	int3   
   140007656:	int3   
   140007657:	int3   
   140007658:	int3   
   140007659:	int3   
   14000765a:	int3   
   14000765b:	int3   
   14000765c:	int3   
   14000765d:	int3   
   14000765e:	int3   
   14000765f:	int3   
   140007660:	mov    QWORD PTR [rsp+0x8],rbx
   140007665:	push   rdi
   140007666:	sub    rsp,0x20
   14000766a:	mov    rbx,QWORD PTR [rcx]
   14000766d:	mov    rdi,rcx
   140007670:	test   rbx,rbx
   140007673:	je     0x140007692
   140007675:	mov    rcx,QWORD PTR [rbx]
   140007678:	call   QWORD PTR [rbx+0x8]
   14000767b:	mov    rbx,QWORD PTR [rbx+0x10]
   14000767f:	test   rbx,rbx
   140007682:	jne    0x140007675
   140007684:	mov    QWORD PTR [rdi],rbx
   140007687:	mov    rbx,QWORD PTR [rsp+0x30]
   14000768c:	add    rsp,0x20
   140007690:	pop    rdi
   140007691:	ret    
   140007692:	mov    QWORD PTR [rcx],0x0
   140007699:	mov    rbx,QWORD PTR [rsp+0x30]
   14000769e:	add    rsp,0x20
   1400076a2:	pop    rdi
   1400076a3:	ret    
   1400076a4:	int3   
   1400076a5:	int3   
   1400076a6:	int3   
   1400076a7:	int3   
   1400076a8:	int3   
   1400076a9:	int3   
   1400076aa:	int3   
   1400076ab:	int3   
   1400076ac:	int3   
   1400076ad:	int3   
   1400076ae:	int3   
   1400076af:	int3   
   1400076b0:	mov    DWORD PTR [rsp+0x20],r9d
   1400076b5:	mov    QWORD PTR [rsp+0x18],r8
   1400076ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400076bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400076c4:	sub    rsp,0x28
   1400076c8:	lea    rcx,[rip+0x2c919]        # 0x140033fe8
   1400076cf:	call   0x140007700
   1400076d4:	add    rsp,0x28
   1400076d8:	ret    
   1400076d9:	int3   
   1400076da:	int3   
   1400076db:	int3   
   1400076dc:	int3   
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	sub    rsp,0x28
   1400076e4:	lea    rcx,[rip+0x2c8ed]        # 0x140033fd8
   1400076eb:	call   0x140007700
   1400076f0:	add    rsp,0x28
   1400076f4:	ret    
   1400076f5:	int3   
   1400076f6:	int3   
   1400076f7:	int3   
   1400076f8:	int3   
   1400076f9:	int3   
   1400076fa:	int3   
   1400076fb:	int3   
   1400076fc:	int3   
   1400076fd:	int3   
   1400076fe:	int3   
   1400076ff:	int3   
   140007700:	mov    QWORD PTR [rsp+0x8],rcx
   140007705:	sub    rsp,0x68
   140007709:	call   QWORD PTR [rip+0x2aea1]        # 0x1400325b0
   14000770f:	test   eax,eax
   140007711:	je     0x14000771a
   140007713:	mov    BYTE PTR [rsp+0x20],0x1
   140007718:	jmp    0x14000771f
   14000771a:	mov    BYTE PTR [rsp+0x20],0x0
   14000771f:	movzx  eax,BYTE PTR [rsp+0x20]
   140007724:	test   eax,eax
   140007726:	je     0x14000772b
   140007728:	int3   
   140007729:	jmp    0x14000777a
   14000772b:	xor    r8d,r8d
   14000772e:	xor    edx,edx
   140007730:	lea    rcx,[rsp+0x30]
   140007735:	call   0x1400074d0
   14000773a:	mov    QWORD PTR [rsp+0x28],rax
   14000773f:	call   QWORD PTR [rip+0x2ad3b]        # 0x140032480
   140007745:	mov    rcx,QWORD PTR [rsp+0x28]
   14000774a:	mov    r9,rcx
   14000774d:	mov    r8d,eax
   140007750:	mov    rdx,QWORD PTR [rsp+0x70]
   140007755:	lea    rcx,[rsp+0x40]
   14000775a:	call   0x1400074e0
   14000775f:	xor    r8d,r8d
   140007762:	lea    rdx,[rsp+0x40]
   140007767:	xor    ecx,ecx
   140007769:	call   QWORD PTR [rip+0x2ad09]        # 0x140032478
   14000776f:	mov    ecx,0x1
   140007774:	call   QWORD PTR [rip+0x2aace]        # 0x140032248
   14000777a:	add    rsp,0x68
   14000777e:	ret    
   14000777f:	int3   
   140007780:	mov    QWORD PTR [rsp+0x8],rbx
   140007785:	mov    QWORD PTR [rsp+0x10],rbp
   14000778a:	mov    QWORD PTR [rsp+0x18],rsi
   14000778f:	push   rdi
   140007790:	push   r12
   140007792:	push   r13
   140007794:	push   r14
   140007796:	push   r15
   140007798:	sub    rsp,0x30
   14000779c:	mov    rbp,rdx
   14000779f:	mov    rdi,rcx
   1400077a2:	cmp    rcx,rdx
   1400077a5:	je     0x1400078d1
   1400077ab:	lea    r12,[rip+0xffffffffffff884e]        # 0x140000000
   1400077b2:	lea    r15,[rip+0x2c9b7]        # 0x140034170
   1400077b9:	lea    r13,[rip+0x2c960]        # 0x140034120
   1400077c0:	mov    eax,DWORD PTR [rdi]
   1400077c2:	xor    ecx,ecx
   1400077c4:	lea    r14,[rax*8+0x0]
   1400077cc:	xor    eax,eax
   1400077ce:	lock cmpxchg QWORD PTR [r14+r12*1+0x47090],rcx
   1400077d8:	mov    rbx,rax
   1400077db:	je     0x1400077ec
   1400077dd:	cmp    rax,0xffffffffffffffff
   1400077e1:	je     0x1400078c4
   1400077e7:	jmp    0x14000787c
   1400077ec:	mov    rsi,QWORD PTR [r14+r12*1+0x34048]
   1400077f4:	xor    edx,edx
   1400077f6:	mov    rcx,rsi
   1400077f9:	mov    r8d,0x800
   1400077ff:	call   QWORD PTR [rip+0x2a9c3]        # 0x1400321c8
   140007805:	mov    rbx,rax
   140007808:	test   rax,rax
   14000780b:	jne    0x140007829
   14000780d:	call   QWORD PTR [rip+0x2a9f5]        # 0x140032208
   140007813:	cmp    eax,0x57
   140007816:	jne    0x140007886
   140007818:	xor    r8d,r8d
   14000781b:	xor    edx,edx
   14000781d:	mov    rcx,rsi
   140007820:	call   QWORD PTR [rip+0x2a9a2]        # 0x1400321c8
   140007826:	mov    rbx,rax
   140007829:	test   rbx,rbx
   14000782c:	je     0x140007886
   14000782e:	mov    rax,rbx
   140007831:	xchg   QWORD PTR [r14+r12*1+0x47090],rax
   140007839:	test   rax,rax
   14000783c:	je     0x14000787c
   14000783e:	cmp    rax,rbx
   140007841:	je     0x140007873
   140007843:	xor    r9d,r9d
   140007846:	lea    rax,[rip+0x2c9cb]        # 0x140034218
   14000784d:	mov    QWORD PTR [rsp+0x28],rax
   140007852:	lea    rdx,[rip+0x2c927]        # 0x140034180
   140007859:	mov    r8d,0x128
   14000785f:	mov    QWORD PTR [rsp+0x20],r15
   140007864:	lea    ecx,[r9+0x2]
   140007868:	call   0x140004ae0
   14000786d:	cmp    eax,0x1
   140007870:	jne    0x140007873
   140007872:	int3   
   140007873:	mov    rcx,rbx
   140007876:	call   QWORD PTR [rip+0x2a95c]        # 0x1400321d8
   14000787c:	test   rbx,rbx
   14000787f:	je     0x1400078c4
   140007881:	mov    rax,rbx
   140007884:	jmp    0x1400078d3
   140007886:	or     rax,0xffffffffffffffff
   14000788a:	xchg   QWORD PTR [r14+r12*1+0x47090],rax
   140007892:	dec    rax
   140007895:	cmp    rax,0xfffffffffffffffd
   140007899:	ja     0x1400078c4
   14000789b:	xor    r9d,r9d
   14000789e:	mov    QWORD PTR [rsp+0x28],r13
   1400078a3:	mov    r8d,0x11c
   1400078a9:	mov    QWORD PTR [rsp+0x20],r15
   1400078ae:	lea    rdx,[rip+0x2c8cb]        # 0x140034180
   1400078b5:	lea    ecx,[r9+0x2]
   1400078b9:	call   0x140004ae0
   1400078be:	cmp    eax,0x1
   1400078c1:	jne    0x1400078c4
   1400078c3:	int3   
   1400078c4:	add    rdi,0x4
   1400078c8:	cmp    rdi,rbp
   1400078cb:	jne    0x1400077c0
   1400078d1:	xor    eax,eax
   1400078d3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400078d8:	mov    rbp,QWORD PTR [rsp+0x68]
   1400078dd:	mov    rsi,QWORD PTR [rsp+0x70]
   1400078e2:	add    rsp,0x30
   1400078e6:	pop    r15
   1400078e8:	pop    r14
   1400078ea:	pop    r13
   1400078ec:	pop    r12
   1400078ee:	pop    rdi
   1400078ef:	ret    
   1400078f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078f5:	push   rdi
   1400078f6:	sub    rsp,0x30
   1400078fa:	mov    eax,ecx
   1400078fc:	mov    rbx,rdx
   1400078ff:	lea    rcx,[rip+0x3f7aa]        # 0x1400470b0
   140007906:	lea    rdi,[rcx+rax*8]
   14000790a:	xor    ecx,ecx
   14000790c:	xor    eax,eax
   14000790e:	lock cmpxchg QWORD PTR [rdi],rcx
   140007913:	mov    r10,QWORD PTR [rip+0x3e8ce]        # 0x1400461e8
   14000791a:	mov    ecx,r10d
   14000791d:	xor    r10,rax
   140007920:	and    ecx,0x3f
   140007923:	ror    r10,cl
   140007926:	cmp    r10,0xffffffffffffffff
   14000792a:	je     0x140007a68
   140007930:	test   r10,r10
   140007933:	je     0x140007943
   140007935:	mov    rax,r10
   140007938:	mov    rbx,QWORD PTR [rsp+0x40]
   14000793d:	add    rsp,0x30
   140007941:	pop    rdi
   140007942:	ret    
   140007943:	mov    rdx,r9
   140007946:	mov    rcx,r8
   140007949:	call   0x140007780
   14000794e:	test   rax,rax
   140007951:	je     0x1400079f5
   140007957:	mov    rdx,rbx
   14000795a:	mov    rcx,rax
   14000795d:	call   QWORD PTR [rip+0x2a86d]        # 0x1400321d0
   140007963:	mov    rbx,rax
   140007966:	test   rax,rax
   140007969:	je     0x1400079f5
   14000796f:	mov    rdx,QWORD PTR [rip+0x3e872]        # 0x1400461e8
   140007976:	mov    r9d,0x40
   14000797c:	mov    ecx,edx
   14000797e:	mov    r8,rax
   140007981:	and    ecx,0x3f
   140007984:	sub    r9d,ecx
   140007987:	movzx  ecx,r9b
   14000798b:	ror    r8,cl
   14000798e:	xor    r8,rdx
   140007991:	xchg   QWORD PTR [rdi],r8
   140007994:	mov    rdx,QWORD PTR [rip+0x3e84d]        # 0x1400461e8
   14000799b:	mov    ecx,edx
   14000799d:	xor    rdx,r8
   1400079a0:	and    ecx,0x3f
   1400079a3:	ror    rdx,cl
   1400079a6:	test   rdx,rdx
   1400079a9:	je     0x1400079e7
   1400079ab:	cmp    rdx,rax
   1400079ae:	je     0x1400079e7
   1400079b0:	xor    r9d,r9d
   1400079b3:	lea    rax,[rip+0x2c8ee]        # 0x1400342a8
   1400079ba:	mov    QWORD PTR [rsp+0x28],rax
   1400079bf:	lea    rdx,[rip+0x2c7ba]        # 0x140034180
   1400079c6:	lea    rax,[rip+0x2c7a3]        # 0x140034170
   1400079cd:	mov    r8d,0x185
   1400079d3:	mov    QWORD PTR [rsp+0x20],rax
   1400079d8:	lea    ecx,[r9+0x2]
   1400079dc:	call   0x140004ae0
   1400079e1:	cmp    eax,0x1
   1400079e4:	jne    0x1400079e7
   1400079e6:	int3   
   1400079e7:	mov    rax,rbx
   1400079ea:	mov    rbx,QWORD PTR [rsp+0x40]
   1400079ef:	add    rsp,0x30
   1400079f3:	pop    rdi
   1400079f4:	ret    
   1400079f5:	mov    rdx,QWORD PTR [rip+0x3e7ec]        # 0x1400461e8
   1400079fc:	or     r8,0xffffffffffffffff
   140007a00:	mov    eax,edx
   140007a02:	mov    ecx,0x40
   140007a07:	and    eax,0x3f
   140007a0a:	sub    ecx,eax
   140007a0c:	ror    r8,cl
   140007a0f:	xor    r8,rdx
   140007a12:	xchg   QWORD PTR [rdi],r8
   140007a15:	mov    rdx,QWORD PTR [rip+0x3e7cc]        # 0x1400461e8
   140007a1c:	mov    ecx,edx
   140007a1e:	xor    rdx,r8
   140007a21:	and    ecx,0x3f
   140007a24:	ror    rdx,cl
   140007a27:	lea    rax,[rdx-0x1]
   140007a2b:	cmp    rax,0xfffffffffffffffd
   140007a2f:	ja     0x140007a68
   140007a31:	xor    r9d,r9d
   140007a34:	lea    rax,[rip+0x2c815]        # 0x140034250
   140007a3b:	mov    QWORD PTR [rsp+0x28],rax
   140007a40:	lea    rdx,[rip+0x2c739]        # 0x140034180
   140007a47:	lea    rax,[rip+0x2c722]        # 0x140034170
   140007a4e:	mov    r8d,0x173
   140007a54:	mov    QWORD PTR [rsp+0x20],rax
   140007a59:	lea    ecx,[r9+0x2]
   140007a5d:	call   0x140004ae0
   140007a62:	cmp    eax,0x1
   140007a65:	jne    0x140007a68
   140007a67:	int3   
   140007a68:	xor    eax,eax
   140007a6a:	mov    rbx,QWORD PTR [rsp+0x40]
   140007a6f:	add    rsp,0x30
   140007a73:	pop    rdi
   140007a74:	ret    
   140007a75:	int3   
   140007a76:	int3   
   140007a77:	int3   
   140007a78:	int3   
   140007a79:	int3   
   140007a7a:	int3   
   140007a7b:	int3   
   140007a7c:	int3   
   140007a7d:	int3   
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	rex.W jmp QWORD PTR [rip+0x2a771]        # 0x1400321f8
   140007a87:	int3   
   140007a88:	int3   
   140007a89:	int3   
   140007a8a:	int3   
   140007a8b:	int3   
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	rex.W jmp QWORD PTR [rip+0x2a749]        # 0x1400321e0
   140007a97:	int3   
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	rex.W jmp QWORD PTR [rip+0x2a741]        # 0x1400321e8
   140007aa7:	int3   
   140007aa8:	int3   
   140007aa9:	int3   
   140007aaa:	int3   
   140007aab:	int3   
   140007aac:	int3   
   140007aad:	int3   
   140007aae:	int3   
   140007aaf:	int3   
   140007ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140007aba:	push   rdi
   140007abb:	sub    rsp,0x20
   140007abf:	mov    esi,r8d
   140007ac2:	lea    r9,[rip+0x2c80f]        # 0x1400342d8
   140007ac9:	mov    ebx,edx
   140007acb:	lea    r8,[rip+0x2c7fe]        # 0x1400342d0
   140007ad2:	mov    rdi,rcx
   140007ad5:	lea    rdx,[rip+0x2c7fc]        # 0x1400342d8
   140007adc:	mov    ecx,0x8
   140007ae1:	call   0x1400078f0
   140007ae6:	mov    edx,ebx
   140007ae8:	mov    rcx,rdi
   140007aeb:	test   rax,rax
   140007aee:	je     0x140007b05
   140007af0:	mov    r8d,esi
   140007af3:	mov    rbx,QWORD PTR [rsp+0x30]
   140007af8:	mov    rsi,QWORD PTR [rsp+0x38]
   140007afd:	add    rsp,0x20
   140007b01:	pop    rdi
   140007b02:	rex.W jmp rax
   140007b05:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b0a:	mov    rsi,QWORD PTR [rsp+0x38]
   140007b0f:	add    rsp,0x20
   140007b13:	pop    rdi
   140007b14:	rex.W jmp QWORD PTR [rip+0x2a6e5]        # 0x140032200
   140007b1b:	int3   
   140007b1c:	int3   
   140007b1d:	int3   
   140007b1e:	int3   
   140007b1f:	int3   
   140007b20:	mov    rdx,QWORD PTR [rip+0x3e6c1]        # 0x1400461e8
   140007b27:	lea    r9,[rip+0x3f5ca]        # 0x1400470f8
   140007b2e:	mov    eax,edx
   140007b30:	mov    ecx,0x40
   140007b35:	and    eax,0x3f
   140007b38:	sub    ecx,eax
   140007b3a:	xor    eax,eax
   140007b3c:	mov    r8d,eax
   140007b3f:	ror    r8,cl
   140007b42:	lea    rcx,[rip+0x3f567]        # 0x1400470b0
   140007b49:	xor    r8,rdx
   140007b4c:	mov    edx,0x9
   140007b51:	cmp    rcx,r9
   140007b54:	cmova  edx,eax
   140007b57:	nop    WORD PTR [rax+rax*1+0x0]
   140007b60:	inc    rax
   140007b63:	mov    QWORD PTR [rcx],r8
   140007b66:	lea    rcx,[rcx+0x8]
   140007b6a:	cmp    rax,rdx
   140007b6d:	jne    0x140007b60
   140007b6f:	ret    
   140007b70:	sub    rsp,0x28
   140007b74:	test   cl,cl
   140007b76:	jne    0x140007bc6
   140007b78:	mov    QWORD PTR [rsp+0x30],rbx
   140007b7d:	lea    rbx,[rip+0x3f50c]        # 0x140047090
   140007b84:	mov    QWORD PTR [rsp+0x38],rsi
   140007b89:	lea    rsi,[rip+0x3f520]        # 0x1400470b0
   140007b90:	mov    QWORD PTR [rsp+0x20],rdi
   140007b95:	xor    edi,edi
   140007b97:	mov    rcx,QWORD PTR [rbx]
   140007b9a:	test   rcx,rcx
   140007b9d:	je     0x140007bae
   140007b9f:	cmp    rcx,0xffffffffffffffff
   140007ba3:	je     0x140007bab
   140007ba5:	call   QWORD PTR [rip+0x2a62d]        # 0x1400321d8
   140007bab:	mov    QWORD PTR [rbx],rdi
   140007bae:	add    rbx,0x8
   140007bb2:	cmp    rbx,rsi
   140007bb5:	jne    0x140007b97
   140007bb7:	mov    rdi,QWORD PTR [rsp+0x20]
   140007bbc:	mov    rsi,QWORD PTR [rsp+0x38]
   140007bc1:	mov    rbx,QWORD PTR [rsp+0x30]
   140007bc6:	add    rsp,0x28
   140007bca:	ret    
   140007bcb:	int3   
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	mov    rax,QWORD PTR [rip+0x2a7b9]        # 0x140032390
   140007bd7:	mov    rdx,rcx
   140007bda:	mov    rcx,QWORD PTR [rax]
   140007bdd:	mov    rax,QWORD PTR [rcx]
   140007be0:	rex.W jmp QWORD PTR [rax+0x28]
   140007be4:	int3   
   140007be5:	int3   
   140007be6:	int3   
   140007be7:	int3   
   140007be8:	int3   
   140007be9:	int3   
   140007bea:	int3   
   140007beb:	int3   
   140007bec:	int3   
   140007bed:	int3   
   140007bee:	int3   
   140007bef:	int3   
   140007bf0:	mov    rax,QWORD PTR [rip+0x2a799]        # 0x140032390
   140007bf7:	mov    rdx,rcx
   140007bfa:	mov    rcx,QWORD PTR [rax]
   140007bfd:	mov    rax,QWORD PTR [rcx]
   140007c00:	rex.W jmp QWORD PTR [rax+0x8]
   140007c04:	int3   
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	lea    rax,[rip+0x2c6e1]        # 0x1400342f8
   140007c17:	ret    
   140007c18:	int3   
   140007c19:	int3   
   140007c1a:	int3   
   140007c1b:	int3   
   140007c1c:	int3   
   140007c1d:	int3   
   140007c1e:	int3   
   140007c1f:	int3   
   140007c20:	mov    QWORD PTR [rsp+0x8],rbx
   140007c25:	push   rdi
   140007c26:	sub    rsp,0x20
   140007c2a:	mov    rax,QWORD PTR [rip+0x2a75f]        # 0x140032390
   140007c31:	mov    rdi,rcx
   140007c34:	imul   rdi,rdx
   140007c38:	mov    rcx,QWORD PTR [rax]
   140007c3b:	mov    rdx,rdi
   140007c3e:	mov    rax,QWORD PTR [rcx]
   140007c41:	call   QWORD PTR [rax+0x8]
   140007c44:	mov    r8,rdi
   140007c47:	xor    edx,edx
   140007c49:	mov    rcx,rax
   140007c4c:	mov    rbx,rax
   140007c4f:	call   0x1400277b0
   140007c54:	mov    rax,rbx
   140007c57:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c5c:	add    rsp,0x20
   140007c60:	pop    rdi
   140007c61:	ret    
   140007c62:	int3   
   140007c63:	int3   
   140007c64:	int3   
   140007c65:	int3   
   140007c66:	int3   
   140007c67:	int3   
   140007c68:	int3   
   140007c69:	int3   
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	int3   
   140007c6d:	int3   
   140007c6e:	int3   
   140007c6f:	int3   
   140007c70:	imul   rdx,r8
   140007c74:	jmp    0x140007c80
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	mov    QWORD PTR [rsp+0x8],rbx
   140007c85:	mov    QWORD PTR [rsp+0x10],rsi
   140007c8a:	push   rdi
   140007c8b:	sub    rsp,0x20
   140007c8f:	mov    rax,QWORD PTR [rip+0x2a6fa]        # 0x140032390
   140007c96:	mov    rbx,rcx
   140007c99:	mov    rdi,rdx
   140007c9c:	mov    rdx,rbx
   140007c9f:	mov    rcx,QWORD PTR [rax]
   140007ca2:	mov    rax,QWORD PTR [rcx]
   140007ca5:	call   QWORD PTR [rax+0x98]
   140007cab:	mov    r8,QWORD PTR [rip+0x2a6de]        # 0x140032390
   140007cb2:	mov    rdx,rbx
   140007cb5:	mov    rsi,rax
   140007cb8:	mov    rcx,QWORD PTR [r8]
   140007cbb:	mov    r8,rdi
   140007cbe:	mov    r9,QWORD PTR [rcx]
   140007cc1:	call   QWORD PTR [r9+0x18]
   140007cc5:	mov    rbx,rax
   140007cc8:	cmp    rdi,rsi
   140007ccb:	jbe    0x140007ce1
   140007ccd:	sub    rdi,rsi
   140007cd0:	lea    rcx,[rax+rsi*1]
   140007cd4:	mov    r8,rdi
   140007cd7:	xor    edx,edx
   140007cd9:	call   0x1400277b0
   140007cde:	mov    rax,rbx
   140007ce1:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ce6:	mov    rsi,QWORD PTR [rsp+0x38]
   140007ceb:	add    rsp,0x20
   140007cef:	pop    rdi
   140007cf0:	ret    
   140007cf1:	int3   
   140007cf2:	int3   
   140007cf3:	int3   
   140007cf4:	int3   
   140007cf5:	int3   
   140007cf6:	int3   
   140007cf7:	int3   
   140007cf8:	int3   
   140007cf9:	int3   
   140007cfa:	int3   
   140007cfb:	int3   
   140007cfc:	int3   
   140007cfd:	int3   
   140007cfe:	int3   
   140007cff:	int3   
   140007d00:	mov    QWORD PTR [rsp+0x10],rbx
   140007d05:	mov    QWORD PTR [rsp+0x18],rbp
   140007d0a:	push   rdi
   140007d0b:	sub    rsp,0x30
   140007d0f:	cmp    BYTE PTR [rcx+0x8],0x0
   140007d13:	mov    rbp,r8
   140007d16:	mov    rdi,rdx
   140007d19:	mov    rbx,rcx
   140007d1c:	jne    0x140007dd1
   140007d22:	mov    eax,DWORD PTR [rcx+0x1c]
   140007d25:	mov    QWORD PTR [rsp+0x40],rsi
   140007d2a:	cmp    eax,0xffffff00
   140007d2f:	je     0x140007d54
   140007d31:	mov    ecx,DWORD PTR [rdx+0x8]
   140007d34:	cmp    eax,ecx
   140007d36:	je     0x140007d54
   140007d38:	cmp    ecx,0x2
   140007d3b:	jl     0x140007d54
   140007d3d:	call   QWORD PTR [rip+0x2a5b5]        # 0x1400322f8
   140007d43:	test   eax,eax
   140007d45:	je     0x140007d54
   140007d47:	lea    rcx,[rip+0x2c5ea]        # 0x140034338
   140007d4e:	call   QWORD PTR [rip+0x2a604]        # 0x140032358
   140007d54:	mov    eax,DWORD PTR [rip+0x3f3ae]        # 0x140047108
   140007d5a:	or     esi,0xffffffff
   140007d5d:	cmp    DWORD PTR [rdi+0xc],eax
   140007d60:	je     0x140007dab
   140007d62:	movzx  edx,BYTE PTR [rdi+0xc]
   140007d66:	movzx  ecx,BYTE PTR [rdi+0xd]
   140007d6a:	movzx  r9d,BYTE PTR [rdi+0xe]
   140007d6f:	cmp    dl,cl
   140007d71:	mov    eax,ecx
   140007d73:	cmova  eax,edx
   140007d76:	cmp    al,r9b
   140007d79:	jbe    0x140007d86
   140007d7b:	cmp    dl,cl
   140007d7d:	mov    r8d,ecx
   140007d80:	cmova  r8d,edx
   140007d84:	jmp    0x140007d8a
   140007d86:	movzx  r8d,r9b
   140007d8a:	xor    eax,eax
   140007d8c:	movzx  r9d,r9b
   140007d90:	cmp    r8b,0x80
   140007d94:	mov    r8d,ecx
   140007d97:	lea    rcx,[rbx+0x10]
   140007d9b:	seta   al
   140007d9e:	mov    DWORD PTR [rsp+0x20],eax
   140007da2:	call   QWORD PTR [rip+0x2a560]        # 0x140032308
   140007da8:	movzx  esi,ax
   140007dab:	mov    rdx,rbp
   140007dae:	lea    rcx,[rip+0x2c553]        # 0x140034308
   140007db5:	call   QWORD PTR [rip+0x2a59d]        # 0x140032358
   140007dbb:	test   esi,esi
   140007dbd:	js     0x140007dcc
   140007dbf:	lea    rcx,[rbx+0x10]
   140007dc3:	movzx  edx,si
   140007dc6:	call   QWORD PTR [rip+0x2a534]        # 0x140032300
   140007dcc:	mov    rsi,QWORD PTR [rsp+0x40]
   140007dd1:	cmp    BYTE PTR [rbx+0x9],0x0
   140007dd5:	jne    0x140007dea
   140007dd7:	call   QWORD PTR [rip+0x2a7d3]        # 0x1400325b0
   140007ddd:	test   eax,eax
   140007ddf:	je     0x140007dea
   140007de1:	mov    rcx,rbp
   140007de4:	call   QWORD PTR [rip+0x2a586]        # 0x140032370
   140007dea:	mov    eax,DWORD PTR [rdi+0x8]
   140007ded:	mov    rbp,QWORD PTR [rsp+0x50]
   140007df2:	mov    DWORD PTR [rbx+0x1c],eax
   140007df5:	mov    rbx,QWORD PTR [rsp+0x48]
   140007dfa:	add    rsp,0x30
   140007dfe:	pop    rdi
   140007dff:	ret    
   140007e00:	mov    QWORD PTR [rsp+0x8],rbx
   140007e05:	push   rdi
   140007e06:	sub    rsp,0x20
   140007e0a:	test   BYTE PTR [rdx+0x4],0x10
   140007e0e:	mov    rbx,r8
   140007e11:	mov    rdi,rdx
   140007e14:	jne    0x140007e29
   140007e16:	call   QWORD PTR [rip+0x2a794]        # 0x1400325b0
   140007e1c:	test   eax,eax
   140007e1e:	je     0x140007e29
   140007e20:	mov    rcx,rbx
   140007e23:	call   QWORD PTR [rip+0x2a547]        # 0x140032370
   140007e29:	cmp    DWORD PTR [rdi+0x8],0x4
   140007e2d:	jne    0x140007e54
   140007e2f:	call   QWORD PTR [rip+0x2a77b]        # 0x1400325b0
   140007e35:	test   eax,eax
   140007e37:	je     0x140007e3a
   140007e39:	int3   
   140007e3a:	call   QWORD PTR [rip+0x2a750]        # 0x140032590
   140007e40:	test   al,al
   140007e42:	jne    0x140007e54
   140007e44:	mov    rdx,rbx
   140007e47:	lea    rcx,[rip+0x2a956]        # 0x1400327a4
   140007e4e:	call   QWORD PTR [rip+0x2a3dc]        # 0x140032230
   140007e54:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e59:	add    rsp,0x20
   140007e5d:	pop    rdi
   140007e5e:	ret    
   140007e5f:	int3   
   140007e60:	mov    QWORD PTR [rsp+0x8],rbx
   140007e65:	mov    QWORD PTR [rsp+0x10],rbp
   140007e6a:	mov    QWORD PTR [rsp+0x18],rsi
   140007e6f:	push   rdi
   140007e70:	push   r14
   140007e72:	push   r15
   140007e74:	sub    rsp,0x220
   140007e7b:	xor    edi,edi
   140007e7d:	lea    rax,[rip+0x2c52c]        # 0x1400343b0
   140007e84:	mov    QWORD PTR [rcx],rax
   140007e87:	mov    r15,r8
   140007e8a:	mov    DWORD PTR [rcx+0x8],edi
   140007e8d:	movzx  esi,dl
   140007e90:	mov    QWORD PTR [rcx+0x10],rdi
   140007e94:	mov    rbx,rcx
   140007e97:	mov    QWORD PTR [rcx+0x18],rdi
   140007e9b:	mov    DWORD PTR [rcx+0x20],edi
   140007e9e:	mov    QWORD PTR [rcx+0x28],rdi
   140007ea2:	mov    QWORD PTR [rcx+0x30],rdi
   140007ea6:	mov    DWORD PTR [rcx+0x38],edi
   140007ea9:	mov    QWORD PTR [rcx+0x40],rdi
   140007ead:	mov    QWORD PTR [rcx+0x48],rdi
   140007eb1:	mov    DWORD PTR [rcx+0x50],edi
   140007eb4:	mov    QWORD PTR [rcx+0x58],rdi
   140007eb8:	mov    QWORD PTR [rcx+0x60],rdi
   140007ebc:	mov    DWORD PTR [rcx+0x68],edi
   140007ebf:	mov    QWORD PTR [rcx+0x70],rdi
   140007ec3:	mov    QWORD PTR [rcx+0x78],0x20
   140007ecb:	call   QWORD PTR [rip+0x2a5ef]        # 0x1400324c0
   140007ed1:	mov    rax,QWORD PTR [rip+0x2a4b8]        # 0x140032390
   140007ed8:	movsxd rdx,DWORD PTR [rbx+0x78]
   140007edc:	add    rdx,rdx
   140007edf:	mov    rcx,QWORD PTR [rax]
   140007ee2:	mov    rax,QWORD PTR [rcx]
   140007ee5:	call   QWORD PTR [rax+0x8]
   140007ee8:	lea    rcx,[rbx+0x80]
   140007eef:	mov    r9b,0x1
   140007ef2:	lea    r8d,[rdi+0x20]
   140007ef6:	mov    QWORD PTR [rbx+0x70],rax
   140007efa:	xor    edx,edx
   140007efc:	call   0x14001c880
   140007f01:	mov    QWORD PTR [rbx+0x100],rdi
   140007f08:	mov    QWORD PTR [rbx+0x108],rdi
   140007f0f:	mov    QWORD PTR [rbx+0x110],rdi
   140007f16:	mov    QWORD PTR [rbx+0x118],rdi
   140007f1d:	mov    QWORD PTR [rbx+0x120],rdi
   140007f24:	mov    QWORD PTR [rbx+0x128],rdi
   140007f2b:	mov    QWORD PTR [rbx+0x13c],rdi
   140007f32:	mov    BYTE PTR [rbx+0x139],dil
   140007f39:	mov    BYTE PTR [rbx+0x146],dil
   140007f40:	call   QWORD PTR [rip+0x2a40a]        # 0x140032350
   140007f46:	movzx  ebp,BYTE PTR [rsp+0x268]
   140007f4e:	mov    BYTE PTR [rbx+0x144],al
   140007f54:	movzx  eax,BYTE PTR [rsp+0x270]
   140007f5c:	mov    BYTE PTR [rbx+0xfc],al
   140007f62:	mov    QWORD PTR [rip+0x3f1a7],rbx        # 0x140047110
   140007f69:	mov    QWORD PTR [rbx+0x130],rdi
   140007f70:	mov    QWORD PTR [rbx+0xe0],rdi
   140007f77:	mov    BYTE PTR [rbx+0xf8],sil
   140007f7e:	mov    BYTE PTR [rbx+0xfb],bpl
   140007f85:	call   QWORD PTR [rip+0x2a63d]        # 0x1400325c8
   140007f8b:	lea    ecx,[rdi+0x14]
   140007f8e:	call   0x14001dc70
   140007f93:	test   rax,rax
   140007f96:	je     0x140007fa9
   140007f98:	lea    rdx,[rip+0x2c451]        # 0x1400343f0
   140007f9f:	mov    rcx,rax
   140007fa2:	call   0x14001dbb0
   140007fa7:	jmp    0x140007fac
   140007fa9:	mov    rax,rdi
   140007fac:	test   bpl,bpl
   140007faf:	mov    QWORD PTR [rbx+0xe8],rax
   140007fb6:	lea    rdx,[rip+0x2b12f]        # 0x1400330ec
   140007fbd:	mov    rcx,rax
   140007fc0:	setne  dil
   140007fc4:	mov    r8d,edi
   140007fc7:	call   0x140020740
   140007fcc:	lea    rax,[rip+0x3e0cd]        # 0x1400460a0
   140007fd3:	test   sil,sil
   140007fd6:	jne    0x140007fdf
   140007fd8:	lea    rax,[rip+0x3e0b9]        # 0x140046098
   140007fdf:	xor    ecx,ecx
   140007fe1:	mov    QWORD PTR [rbx+0xd8],rax
   140007fe8:	call   QWORD PTR [rip+0x2a2e2]        # 0x1400322d0
   140007fee:	mov    dl,0x1
   140007ff0:	xor    ecx,ecx
   140007ff2:	mov    DWORD PTR [rbx+0xd0],eax
   140007ff8:	call   QWORD PTR [rip+0x2a2e2]        # 0x1400322e0
   140007ffe:	mov    rcx,QWORD PTR [rbx+0xd8]
   140008005:	call   QWORD PTR [rip+0x2a2e5]        # 0x1400322f0
   14000800b:	mov    edx,0x200
   140008010:	mov    QWORD PTR [rbx+0xf0],r15
   140008017:	lea    rcx,[rsp+0x20]
   14000801c:	mov    WORD PTR [rbx+0xf9],0x0
   140008025:	call   QWORD PTR [rip+0x2a54d]        # 0x140032578
   14000802b:	lea    rcx,[rsp+0x20]
   140008030:	call   QWORD PTR [rip+0x2a4e2]        # 0x140032518
   140008036:	lea    rdx,[rsp+0x20]
   14000803b:	lea    rcx,[rbx+0x118]
   140008042:	call   0x14001aae0
   140008047:	lea    r11,[rsp+0x220]
   14000804f:	mov    BYTE PTR [rbx+0x138],0x0
   140008056:	mov    rbp,QWORD PTR [r11+0x28]
   14000805a:	mov    rax,rbx
   14000805d:	mov    rsi,QWORD PTR [r11+0x30]
   140008061:	mov    BYTE PTR [rbx+0x145],0x0
   140008068:	mov    rbx,QWORD PTR [r11+0x20]
   14000806c:	mov    rsp,r11
   14000806f:	pop    r15
   140008071:	pop    r14
   140008073:	pop    rdi
   140008074:	ret    
   140008075:	int3   
   140008076:	int3   
   140008077:	int3   
   140008078:	int3   
   140008079:	int3   
   14000807a:	int3   
   14000807b:	int3   
   14000807c:	int3   
   14000807d:	int3   
   14000807e:	int3   
   14000807f:	int3   
   140008080:	mov    QWORD PTR [rsp+0x20],rbx
   140008085:	push   rbp
   140008086:	sub    rsp,0x20
   14000808a:	lea    rax,[rip+0x2c31f]        # 0x1400343b0
   140008091:	mov    QWORD PTR [rsp+0x38],rdi
   140008096:	xor    edx,edx
   140008098:	mov    QWORD PTR [rcx],rax
   14000809b:	mov    rbx,rcx
   14000809e:	call   0x14000b440
   1400080a3:	xor    ecx,ecx
   1400080a5:	call   QWORD PTR [rip+0x2a22d]        # 0x1400322d8
   1400080ab:	xor    ecx,ecx
   1400080ad:	call   QWORD PTR [rip+0x2a21d]        # 0x1400322d0
   1400080b3:	cmp    DWORD PTR [rbx+0xd0],eax
   1400080b9:	je     0x1400080db
   1400080bb:	call   QWORD PTR [rip+0x2a227]        # 0x1400322e8
   1400080c1:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400080c8:	call   QWORD PTR [rip+0x2a222]        # 0x1400322f0
   1400080ce:	lea    rcx,[rip+0x2c32b]        # 0x140034400
   1400080d5:	call   QWORD PTR [rip+0x2a2d5]        # 0x1400323b0
   1400080db:	mov    eax,DWORD PTR [rbx+0x20]
   1400080de:	sub    eax,0x1
   1400080e1:	mov    QWORD PTR [rsp+0x30],rsi
   1400080e6:	movsxd rdi,eax
   1400080e9:	js     0x140008158
   1400080eb:	mov    QWORD PTR [rsp+0x40],r14
   1400080f0:	lea    r14,[rdi+rdi*4]
   1400080f4:	shl    r14,0x3
   1400080f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140008100:	mov    rsi,QWORD PTR [rbx+0x28]
   140008104:	mov    rdx,QWORD PTR [rsi+r14*1+0x18]
   140008109:	test   rdx,rdx
   14000810c:	je     0x140008116
   14000810e:	mov    rcx,rbx
   140008111:	call   0x14000b780
   140008116:	mov    rdx,QWORD PTR [rsi+r14*1]
   14000811a:	test   rdx,rdx
   14000811d:	je     0x14000812f
   14000811f:	mov    rax,QWORD PTR [rip+0x2a26a]        # 0x140032390
   140008126:	mov    rcx,QWORD PTR [rax]
   140008129:	mov    rax,QWORD PTR [rcx]
   14000812c:	call   QWORD PTR [rax+0x28]
   14000812f:	mov    rdx,QWORD PTR [rsi+r14*1+0x8]
   140008134:	test   rdx,rdx
   140008137:	je     0x140008149
   140008139:	mov    rax,QWORD PTR [rip+0x2a250]        # 0x140032390
   140008140:	mov    rcx,QWORD PTR [rax]
   140008143:	mov    rax,QWORD PTR [rcx]
   140008146:	call   QWORD PTR [rax+0x28]
   140008149:	sub    r14,0x28
   14000814d:	sub    rdi,0x1
   140008151:	jns    0x140008100
   140008153:	mov    r14,QWORD PTR [rsp+0x40]
   140008158:	xor    ebp,ebp
   14000815a:	lea    rcx,[rbx+0x80]
   140008161:	mov    DWORD PTR [rbx+0x20],ebp
   140008164:	mov    DWORD PTR [rbx+0x68],ebp
   140008167:	call   0x14001d800
   14000816c:	mov    rcx,QWORD PTR [rbx+0xe0]
   140008173:	test   rcx,rcx
   140008176:	je     0x140008184
   140008178:	call   0x140020790
   14000817d:	mov    QWORD PTR [rbx+0xe0],rbp
   140008184:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000818b:	test   rcx,rcx
   14000818e:	je     0x14000819c
   140008190:	call   0x140020790
   140008195:	mov    QWORD PTR [rbx+0xe8],rbp
   14000819c:	mov    rcx,QWORD PTR [rbx+0x130]
   1400081a3:	test   rcx,rcx
   1400081a6:	je     0x1400081ba
   1400081a8:	mov    rax,QWORD PTR [rcx]
   1400081ab:	mov    edx,0x1
   1400081b0:	call   QWORD PTR [rax+0x58]
   1400081b3:	mov    QWORD PTR [rbx+0x130],rbp
   1400081ba:	mov    QWORD PTR [rip+0x3ef4f],rbp        # 0x140047110
   1400081c1:	call   QWORD PTR [rip+0x2a0e9]        # 0x1400322b0
   1400081c7:	test   rax,rax
   1400081ca:	je     0x1400081d5
   1400081cc:	call   QWORD PTR [rax+0x8]
   1400081cf:	call   QWORD PTR [rip+0x2a0d3]        # 0x1400322a8
   1400081d5:	cmp    BYTE PTR [rbx+0x139],bpl
   1400081dc:	jne    0x1400081e4
   1400081de:	call   QWORD PTR [rip+0x2a13c]        # 0x140032320
   1400081e4:	lea    rcx,[rbx+0x128]
   1400081eb:	cmp    QWORD PTR [rcx],rbp
   1400081ee:	je     0x1400081f5
   1400081f0:	call   0x14001b030
   1400081f5:	lea    rcx,[rbx+0x120]
   1400081fc:	cmp    QWORD PTR [rcx],rbp
   1400081ff:	je     0x140008206
   140008201:	call   0x14001b030
   140008206:	lea    rcx,[rbx+0x118]
   14000820d:	cmp    QWORD PTR [rcx],rbp
   140008210:	je     0x140008217
   140008212:	call   0x14001b030
   140008217:	lea    rcx,[rbx+0x110]
   14000821e:	cmp    QWORD PTR [rcx],rbp
   140008221:	je     0x140008228
   140008223:	call   0x14001b030
   140008228:	lea    rcx,[rbx+0x108]
   14000822f:	cmp    QWORD PTR [rcx],rbp
   140008232:	je     0x140008239
   140008234:	call   0x14001b030
   140008239:	lea    rcx,[rbx+0x100]
   140008240:	cmp    QWORD PTR [rcx],rbp
   140008243:	je     0x14000824a
   140008245:	call   0x14001b030
   14000824a:	lea    rcx,[rbx+0x80]
   140008251:	call   0x14001c950
   140008256:	mov    DWORD PTR [rbx+0x68],ebp
   140008259:	test   DWORD PTR [rbx+0x7c],0xc0000000
   140008260:	jne    0x1400082ab
   140008262:	mov    rdx,QWORD PTR [rbx+0x70]
   140008266:	test   rdx,rdx
   140008269:	je     0x14000827f
   14000826b:	mov    rax,QWORD PTR [rip+0x2a11e]        # 0x140032390
   140008272:	mov    rcx,QWORD PTR [rax]
   140008275:	mov    rax,QWORD PTR [rcx]
   140008278:	call   QWORD PTR [rax+0x28]
   14000827b:	mov    QWORD PTR [rbx+0x70],rbp
   14000827f:	mov    DWORD PTR [rbx+0x78],ebp
   140008282:	test   DWORD PTR [rbx+0x7c],0xc0000000
   140008289:	jne    0x1400082ab
   14000828b:	mov    rdx,QWORD PTR [rbx+0x70]
   14000828f:	test   rdx,rdx
   140008292:	je     0x1400082a8
   140008294:	mov    rax,QWORD PTR [rip+0x2a0f5]        # 0x140032390
   14000829b:	mov    rcx,QWORD PTR [rax]
   14000829e:	mov    rax,QWORD PTR [rcx]
   1400082a1:	call   QWORD PTR [rax+0x28]
   1400082a4:	mov    QWORD PTR [rbx+0x70],rbp
   1400082a8:	mov    DWORD PTR [rbx+0x78],ebp
   1400082ab:	mov    edi,ebp
   1400082ad:	cmp    DWORD PTR [rbx+0x50],ebp
   1400082b0:	jle    0x1400082e3
   1400082b2:	mov    rsi,rbp
   1400082b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400082c0:	mov    rax,QWORD PTR [rip+0x2a0c9]        # 0x140032390
   1400082c7:	mov    rdx,QWORD PTR [rbx+0x58]
   1400082cb:	mov    rcx,QWORD PTR [rax]
   1400082ce:	mov    rdx,QWORD PTR [rdx+rsi*1]
   1400082d2:	mov    rax,QWORD PTR [rcx]
   1400082d5:	call   QWORD PTR [rax+0x28]
   1400082d8:	inc    edi
   1400082da:	lea    rsi,[rsi+0x8]
   1400082de:	cmp    edi,DWORD PTR [rbx+0x50]
   1400082e1:	jl     0x1400082c0
   1400082e3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400082e8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400082ed:	mov    DWORD PTR [rbx+0x50],ebp
   1400082f0:	test   DWORD PTR [rbx+0x64],0xc0000000
   1400082f7:	jne    0x140008342
   1400082f9:	mov    rdx,QWORD PTR [rbx+0x58]
   1400082fd:	test   rdx,rdx
   140008300:	je     0x140008316
   140008302:	mov    rax,QWORD PTR [rip+0x2a087]        # 0x140032390
   140008309:	mov    rcx,QWORD PTR [rax]
   14000830c:	mov    rax,QWORD PTR [rcx]
   14000830f:	call   QWORD PTR [rax+0x28]
   140008312:	mov    QWORD PTR [rbx+0x58],rbp
   140008316:	mov    DWORD PTR [rbx+0x60],ebp
   140008319:	test   DWORD PTR [rbx+0x64],0xc0000000
   140008320:	jne    0x140008342
   140008322:	mov    rdx,QWORD PTR [rbx+0x58]
   140008326:	test   rdx,rdx
   140008329:	je     0x14000833f
   14000832b:	mov    rax,QWORD PTR [rip+0x2a05e]        # 0x140032390
   140008332:	mov    rcx,QWORD PTR [rax]
   140008335:	mov    rax,QWORD PTR [rcx]
   140008338:	call   QWORD PTR [rax+0x28]
   14000833b:	mov    QWORD PTR [rbx+0x58],rbp
   14000833f:	mov    DWORD PTR [rbx+0x60],ebp
   140008342:	mov    DWORD PTR [rbx+0x38],ebp
   140008345:	test   DWORD PTR [rbx+0x4c],0xc0000000
   14000834c:	jne    0x140008397
   14000834e:	mov    rdx,QWORD PTR [rbx+0x40]
   140008352:	test   rdx,rdx
   140008355:	je     0x14000836b
   140008357:	mov    rax,QWORD PTR [rip+0x2a032]        # 0x140032390
   14000835e:	mov    rcx,QWORD PTR [rax]
   140008361:	mov    rax,QWORD PTR [rcx]
   140008364:	call   QWORD PTR [rax+0x28]
   140008367:	mov    QWORD PTR [rbx+0x40],rbp
   14000836b:	mov    DWORD PTR [rbx+0x48],ebp
   14000836e:	test   DWORD PTR [rbx+0x4c],0xc0000000
   140008375:	jne    0x140008397
   140008377:	mov    rdx,QWORD PTR [rbx+0x40]
   14000837b:	test   rdx,rdx
   14000837e:	je     0x140008394
   140008380:	mov    rax,QWORD PTR [rip+0x2a009]        # 0x140032390
   140008387:	mov    rcx,QWORD PTR [rax]
   14000838a:	mov    rax,QWORD PTR [rcx]
   14000838d:	call   QWORD PTR [rax+0x28]
   140008390:	mov    QWORD PTR [rbx+0x40],rbp
   140008394:	mov    DWORD PTR [rbx+0x48],ebp
   140008397:	mov    DWORD PTR [rbx+0x20],ebp
   14000839a:	test   DWORD PTR [rbx+0x34],0xc0000000
   1400083a1:	jne    0x1400083ec
   1400083a3:	mov    rdx,QWORD PTR [rbx+0x28]
   1400083a7:	test   rdx,rdx
   1400083aa:	je     0x1400083c0
   1400083ac:	mov    rax,QWORD PTR [rip+0x29fdd]        # 0x140032390
   1400083b3:	mov    rcx,QWORD PTR [rax]
   1400083b6:	mov    rax,QWORD PTR [rcx]
   1400083b9:	call   QWORD PTR [rax+0x28]
   1400083bc:	mov    QWORD PTR [rbx+0x28],rbp
   1400083c0:	mov    DWORD PTR [rbx+0x30],ebp
   1400083c3:	test   DWORD PTR [rbx+0x34],0xc0000000
   1400083ca:	jne    0x1400083ec
   1400083cc:	mov    rdx,QWORD PTR [rbx+0x28]
   1400083d0:	test   rdx,rdx
   1400083d3:	je     0x1400083e9
   1400083d5:	mov    rax,QWORD PTR [rip+0x29fb4]        # 0x140032390
   1400083dc:	mov    rcx,QWORD PTR [rax]
   1400083df:	mov    rax,QWORD PTR [rcx]
   1400083e2:	call   QWORD PTR [rax+0x28]
   1400083e5:	mov    QWORD PTR [rbx+0x28],rbp
   1400083e9:	mov    DWORD PTR [rbx+0x30],ebp
   1400083ec:	mov    DWORD PTR [rbx+0x8],ebp
   1400083ef:	test   DWORD PTR [rbx+0x1c],0xc0000000
   1400083f6:	jne    0x140008441
   1400083f8:	mov    rdx,QWORD PTR [rbx+0x10]
   1400083fc:	test   rdx,rdx
   1400083ff:	je     0x140008415
   140008401:	mov    rax,QWORD PTR [rip+0x29f88]        # 0x140032390
   140008408:	mov    rcx,QWORD PTR [rax]
   14000840b:	mov    rax,QWORD PTR [rcx]
   14000840e:	call   QWORD PTR [rax+0x28]
   140008411:	mov    QWORD PTR [rbx+0x10],rbp
   140008415:	mov    DWORD PTR [rbx+0x18],ebp
   140008418:	test   DWORD PTR [rbx+0x1c],0xc0000000
   14000841f:	jne    0x140008441
   140008421:	mov    rdx,QWORD PTR [rbx+0x10]
   140008425:	test   rdx,rdx
   140008428:	je     0x14000843e
   14000842a:	mov    rax,QWORD PTR [rip+0x29f5f]        # 0x140032390
   140008431:	mov    rcx,QWORD PTR [rax]
   140008434:	mov    rax,QWORD PTR [rcx]
   140008437:	call   QWORD PTR [rax+0x28]
   14000843a:	mov    QWORD PTR [rbx+0x10],rbp
   14000843e:	mov    DWORD PTR [rbx+0x18],ebp
   140008441:	mov    rbx,QWORD PTR [rsp+0x48]
   140008446:	add    rsp,0x20
   14000844a:	pop    rbp
   14000844b:	ret    
   14000844c:	int3   
   14000844d:	int3   
   14000844e:	int3   
   14000844f:	int3   
   140008450:	mov    QWORD PTR [rsp+0x8],rbx
   140008455:	push   rdi
   140008456:	sub    rsp,0x20
   14000845a:	mov    ebx,edx
   14000845c:	mov    rdi,rcx
   14000845f:	call   0x140008080
   140008464:	test   bl,0x1
   140008467:	je     0x140008476
   140008469:	mov    edx,0x148
   14000846e:	mov    rcx,rdi
   140008471:	call   0x14002639c
   140008476:	mov    rax,rdi
   140008479:	mov    rbx,QWORD PTR [rsp+0x30]
   14000847e:	add    rsp,0x20
   140008482:	pop    rdi
   140008483:	ret    
   140008484:	int3   
   140008485:	int3   
   140008486:	int3   
   140008487:	int3   
   140008488:	int3   
   140008489:	int3   
   14000848a:	int3   
   14000848b:	int3   
   14000848c:	int3   
   14000848d:	int3   
   14000848e:	int3   
   14000848f:	int3   
   140008490:	mov    QWORD PTR [rsp+0x18],rbx
   140008495:	mov    QWORD PTR [rsp+0x20],rsi
   14000849a:	push   rbp
   14000849b:	push   rdi
   14000849c:	push   r15
   14000849e:	lea    rbp,[rsp-0x47]
   1400084a3:	sub    rsp,0xa0
   1400084aa:	mov    ebx,r9d
   1400084ad:	mov    r15,r8
   1400084b0:	mov    rdi,rdx
   1400084b3:	mov    rsi,rcx
   1400084b6:	test   rdx,rdx
   1400084b9:	jne    0x1400084c2
   1400084bb:	xor    eax,eax
   1400084bd:	jmp    0x1400086fa
   1400084c2:	sub    rcx,0xffffffffffffff80
   1400084c6:	mov    QWORD PTR [rsp+0xc0],r14
   1400084ce:	lea    rdx,[rbp+0x6f]
   1400084d2:	call   0x14001ce30
   1400084d7:	movzx  ecx,WORD PTR [rax]
   1400084da:	mov    eax,0xffff
   1400084df:	cmp    cx,ax
   1400084e2:	je     0x1400085ef
   1400084e8:	mov    rax,QWORD PTR [rsi+0x70]
   1400084ec:	movzx  ecx,cx
   1400084ef:	movzx  ecx,WORD PTR [rax+rcx*2]
   1400084f3:	mov    rax,QWORD PTR [rsi+0x28]
   1400084f7:	lea    rdx,[rcx+rcx*4]
   1400084fb:	cmp    QWORD PTR [rax+rdx*8+0x18],rdi
   140008500:	lea    r14,[rax+rdx*8]
   140008504:	je     0x1400085ef
   14000850a:	mov    rcx,QWORD PTR [r14+0x10]
   14000850e:	mov    rax,QWORD PTR [rcx]
   140008511:	call   QWORD PTR [rax+0x48]
   140008514:	test   al,al
   140008516:	je     0x1400085ef
   14000851c:	test   ebx,ebx
   14000851e:	jne    0x1400085c8
   140008524:	mov    rax,QWORD PTR [rip+0x29e5d]        # 0x140032388
   14000852b:	lea    edx,[rbx+0x4]
   14000852e:	mov    ecx,DWORD PTR [rax]
   140008530:	call   QWORD PTR [rip+0x29f72]        # 0x1400324a8
   140008536:	test   al,al
   140008538:	je     0x140008587
   14000853a:	lea    rax,[rip+0x2c04f]        # 0x140034590
   140008541:	mov    QWORD PTR [rsp+0x30],rdi
   140008546:	mov    QWORD PTR [rbp-0x19],rax
   14000854a:	lea    r9,[rip+0x2c08f]        # 0x1400345e0
   140008551:	lea    rax,[rip+0x2c018]        # 0x140034570
   140008558:	mov    DWORD PTR [rbp-0x11],0x1f7
   14000855f:	mov    QWORD PTR [rbp-0x9],rax
   140008563:	lea    r8,[rbp-0x19]
   140008567:	mov    rax,QWORD PTR [r14+0x18]
   14000856b:	lea    edx,[rbx+0x4]
   14000856e:	mov    QWORD PTR [rsp+0x28],rax
   140008573:	mov    rax,QWORD PTR [rip+0x29e0e]        # 0x140032388
   14000857a:	mov    QWORD PTR [rsp+0x20],r15
   14000857f:	mov    ecx,DWORD PTR [rax]
   140008581:	call   QWORD PTR [rip+0x29f11]        # 0x140032498
   140008587:	call   QWORD PTR [rip+0x29ffb]        # 0x140032588
   14000858d:	test   al,al
   14000858f:	je     0x1400085bc
   140008591:	call   QWORD PTR [rip+0x29ee9]        # 0x140032480
   140008597:	lea    rcx,[rip+0x2a20e]        # 0x1400327ac
   14000859e:	xorps  xmm0,xmm0
   1400085a1:	lea    rdx,[rbp-0x19]
   1400085a5:	mov    DWORD PTR [rbp-0x11],eax
   1400085a8:	mov    QWORD PTR [rbp-0x19],rcx
   1400085ac:	mov    r8b,0x1
   1400085af:	xor    ecx,ecx
   1400085b1:	movdqu XMMWORD PTR [rbp-0x9],xmm0
   1400085b6:	call   QWORD PTR [rip+0x29ebc]        # 0x140032478
   1400085bc:	mov    ecx,0x1
   1400085c1:	call   QWORD PTR [rip+0x29c81]        # 0x140032248
   1400085c7:	int3   
   1400085c8:	cmp    ebx,0x1
   1400085cb:	jne    0x1400086b3
   1400085d1:	mov    r8,QWORD PTR [r14+0x18]
   1400085d5:	lea    rcx,[rip+0x2c004]        # 0x1400345e0
   1400085dc:	mov    r9,rdi
   1400085df:	mov    rdx,r15
   1400085e2:	call   QWORD PTR [rip+0x29dc8]        # 0x1400323b0
   1400085e8:	xor    eax,eax
   1400085ea:	jmp    0x1400086f2
   1400085ef:	xor    eax,eax
   1400085f1:	mov    QWORD PTR [rbp+0x2f],rdi
   1400085f5:	mov    QWORD PTR [rbp+0x7],rax
   1400085f9:	mov    QWORD PTR [rbp+0xf],rax
   1400085fd:	mov    QWORD PTR [rbp+0x17],rax
   140008601:	mov    QWORD PTR [rbp+0x27],rax
   140008605:	mov    QWORD PTR [rbp+0x37],rax
   140008609:	mov    QWORD PTR [rbp+0x1f],r15
   14000860d:	mov    QWORD PTR [rbp-0x9],0x40
   140008615:	call   QWORD PTR [rip+0x29ea5]        # 0x1400324c0
   14000861b:	mov    rax,QWORD PTR [rip+0x29d6e]        # 0x140032390
   140008622:	mov    edx,0xe00
   140008627:	mov    rcx,QWORD PTR [rax]
   14000862a:	mov    rax,QWORD PTR [rcx]
   14000862d:	call   QWORD PTR [rax+0x8]
   140008630:	mov    QWORD PTR [rbp-0x11],rax
   140008634:	mov    DWORD PTR [rbp-0x19],0x1
   14000863b:	test   rax,rax
   14000863e:	je     0x140008661
   140008640:	movups xmm0,XMMWORD PTR [rbp+0x7]
   140008644:	movups xmm1,XMMWORD PTR [rbp+0x17]
   140008648:	movups XMMWORD PTR [rax],xmm0
   14000864b:	movups xmm0,XMMWORD PTR [rbp+0x27]
   14000864f:	movups XMMWORD PTR [rax+0x10],xmm1
   140008653:	movsd  xmm1,QWORD PTR [rbp+0x37]
   140008658:	movups XMMWORD PTR [rax+0x20],xmm0
   14000865c:	movsd  QWORD PTR [rax+0x30],xmm1
   140008661:	mov    r8d,ebx
   140008664:	lea    rdx,[rbp-0x19]
   140008668:	mov    rcx,rsi
   14000866b:	call   0x14000a170
   140008670:	mov    ebx,DWORD PTR [rbp-0x5]
   140008673:	mov    rdx,QWORD PTR [rbp-0x11]
   140008677:	test   al,al
   140008679:	jne    0x1400086b7
   14000867b:	and    ebx,0xc0000000
   140008681:	jne    0x14000869a
   140008683:	test   rdx,rdx
   140008686:	je     0x14000869a
   140008688:	mov    rax,QWORD PTR [rip+0x29d01]        # 0x140032390
   14000868f:	mov    rcx,QWORD PTR [rax]
   140008692:	mov    rax,QWORD PTR [rcx]
   140008695:	call   QWORD PTR [rax+0x28]
   140008698:	xor    edx,edx
   14000869a:	test   ebx,ebx
   14000869c:	jne    0x1400086b3
   14000869e:	test   rdx,rdx
   1400086a1:	je     0x1400086b3
   1400086a3:	mov    rax,QWORD PTR [rip+0x29ce6]        # 0x140032390
   1400086aa:	mov    rcx,QWORD PTR [rax]
   1400086ad:	mov    rax,QWORD PTR [rcx]
   1400086b0:	call   QWORD PTR [rax+0x28]
   1400086b3:	xor    eax,eax
   1400086b5:	jmp    0x1400086f2
   1400086b7:	mov    rdi,QWORD PTR [rdx+0x20]
   1400086bb:	and    ebx,0xc0000000
   1400086c1:	jne    0x1400086d5
   1400086c3:	mov    rax,QWORD PTR [rip+0x29cc6]        # 0x140032390
   1400086ca:	mov    rcx,QWORD PTR [rax]
   1400086cd:	mov    rax,QWORD PTR [rcx]
   1400086d0:	call   QWORD PTR [rax+0x28]
   1400086d3:	xor    edx,edx
   1400086d5:	test   ebx,ebx
   1400086d7:	jne    0x1400086ef
   1400086d9:	test   rdx,rdx
   1400086dc:	je     0x1400086ef
   1400086de:	mov    rcx,QWORD PTR [rip+0x29cab]        # 0x140032390
   1400086e5:	mov    rcx,QWORD PTR [rcx]
   1400086e8:	mov    r8,QWORD PTR [rcx]
   1400086eb:	call   QWORD PTR [r8+0x28]
   1400086ef:	mov    rax,rdi
   1400086f2:	mov    r14,QWORD PTR [rsp+0xc0]
   1400086fa:	lea    r11,[rsp+0xa0]
   140008702:	mov    rbx,QWORD PTR [r11+0x30]
   140008706:	mov    rsi,QWORD PTR [r11+0x38]
   14000870a:	mov    rsp,r11
   14000870d:	pop    r15
   14000870f:	pop    rdi
   140008710:	pop    rbp
   140008711:	ret    
   140008712:	int3   
   140008713:	int3   
   140008714:	int3   
   140008715:	int3   
   140008716:	int3   
   140008717:	int3   
   140008718:	int3   
   140008719:	int3   
   14000871a:	int3   
   14000871b:	int3   
   14000871c:	int3   
   14000871d:	int3   
   14000871e:	int3   
   14000871f:	int3   
   140008720:	mov    QWORD PTR [rsp+0x8],rbx
   140008725:	mov    QWORD PTR [rsp+0x18],rsi
   14000872a:	mov    QWORD PTR [rsp+0x20],rdi
   14000872f:	push   rbp
   140008730:	lea    rbp,[rsp-0x57]
   140008735:	sub    rsp,0xb0
   14000873c:	mov    rsi,r8
   14000873f:	mov    rbx,rdx
   140008742:	mov    rdi,rcx
   140008745:	test   rdx,rdx
   140008748:	je     0x14000891f
   14000874e:	mov    rax,QWORD PTR [rdx]
   140008751:	mov    rcx,rdx
   140008754:	call   QWORD PTR [rax+0x48]
   140008757:	test   al,al
   140008759:	je     0x14000885b
   14000875f:	lea    rcx,[rdi+0x80]
   140008766:	mov    r8,rsi
   140008769:	lea    rdx,[rbp+0x6f]
   14000876d:	call   0x14001ce30
   140008772:	movzx  ecx,WORD PTR [rax]
   140008775:	mov    eax,0xffff
   14000877a:	cmp    cx,ax
   14000877d:	je     0x14000885b
   140008783:	mov    rax,QWORD PTR [rdi+0x70]
   140008787:	movzx  ecx,cx
   14000878a:	movzx  ecx,WORD PTR [rax+rcx*2]
   14000878e:	mov    rax,QWORD PTR [rdi+0x28]
   140008792:	lea    rdx,[rcx+rcx*4]
   140008796:	cmp    QWORD PTR [rax+rdx*8+0x10],rbx
   14000879b:	lea    rdi,[rax+rdx*8]
   14000879f:	je     0x14000895e
   1400087a5:	mov    rax,QWORD PTR [rip+0x29bdc]        # 0x140032388
   1400087ac:	mov    edx,0x4
   1400087b1:	mov    ecx,DWORD PTR [rax]
   1400087b3:	call   QWORD PTR [rip+0x29cef]        # 0x1400324a8
   1400087b9:	test   al,al
   1400087bb:	je     0x14000881a
   1400087bd:	mov    QWORD PTR [rsp+0x40],rbx
   1400087c2:	lea    rax,[rip+0x2bdc7]        # 0x140034590
   1400087c9:	mov    QWORD PTR [rbp-0x9],rax
   1400087cd:	lea    r9,[rip+0x2bcfc]        # 0x1400344d0
   1400087d4:	mov    QWORD PTR [rsp+0x38],rsi
   1400087d9:	lea    rax,[rip+0x2bd90]        # 0x140034570
   1400087e0:	mov    QWORD PTR [rbp+0x7],rax
   1400087e4:	lea    r8,[rbp-0x9]
   1400087e8:	mov    rax,QWORD PTR [rdi+0x10]
   1400087ec:	mov    edx,0x4
   1400087f1:	mov    QWORD PTR [rsp+0x30],rax
   1400087f6:	mov    rax,QWORD PTR [rdi+0x8]
   1400087fa:	mov    QWORD PTR [rsp+0x28],rax
   1400087ff:	mov    rax,QWORD PTR [rip+0x29b82]        # 0x140032388
   140008806:	mov    DWORD PTR [rbp-0x1],0x1b5
   14000880d:	mov    QWORD PTR [rsp+0x20],rsi
   140008812:	mov    ecx,DWORD PTR [rax]
   140008814:	call   QWORD PTR [rip+0x29c7e]        # 0x140032498
   14000881a:	call   QWORD PTR [rip+0x29d68]        # 0x140032588
   140008820:	test   al,al
   140008822:	je     0x14000884f
   140008824:	call   QWORD PTR [rip+0x29c56]        # 0x140032480
   14000882a:	lea    rcx,[rip+0x29f7b]        # 0x1400327ac
   140008831:	xorps  xmm0,xmm0
   140008834:	lea    rdx,[rbp-0x9]
   140008838:	mov    DWORD PTR [rbp-0x1],eax
   14000883b:	mov    QWORD PTR [rbp-0x9],rcx
   14000883f:	mov    r8b,0x1
   140008842:	xor    ecx,ecx
   140008844:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140008849:	call   QWORD PTR [rip+0x29c29]        # 0x140032478
   14000884f:	mov    ecx,0x1
   140008854:	call   QWORD PTR [rip+0x299ee]        # 0x140032248
   14000885a:	int3   
   14000885b:	xor    eax,eax
   14000885d:	mov    QWORD PTR [rbp+0x37],rbx
   140008861:	mov    QWORD PTR [rbp+0x17],rax
   140008865:	mov    QWORD PTR [rbp+0x1f],rax
   140008869:	mov    QWORD PTR [rbp+0x27],rax
   14000886d:	mov    QWORD PTR [rbp+0x3f],rax
   140008871:	mov    QWORD PTR [rbp+0x47],rax
   140008875:	mov    QWORD PTR [rbp+0x2f],rsi
   140008879:	mov    QWORD PTR [rbp+0x7],0x40
   140008881:	call   QWORD PTR [rip+0x29c39]        # 0x1400324c0
   140008887:	mov    rax,QWORD PTR [rip+0x29b02]        # 0x140032390
   14000888e:	mov    edx,0xe00
   140008893:	mov    rcx,QWORD PTR [rax]
   140008896:	mov    rax,QWORD PTR [rcx]
   140008899:	call   QWORD PTR [rax+0x8]
   14000889c:	mov    QWORD PTR [rbp-0x1],rax
   1400088a0:	mov    DWORD PTR [rbp-0x9],0x1
   1400088a7:	test   rax,rax
   1400088aa:	je     0x1400088cd
   1400088ac:	movups xmm0,XMMWORD PTR [rbp+0x17]
   1400088b0:	movups xmm1,XMMWORD PTR [rbp+0x27]
   1400088b4:	movups XMMWORD PTR [rax],xmm0
   1400088b7:	movups xmm0,XMMWORD PTR [rbp+0x37]
   1400088bb:	movups XMMWORD PTR [rax+0x10],xmm1
   1400088bf:	movsd  xmm1,QWORD PTR [rbp+0x47]
   1400088c4:	movups XMMWORD PTR [rax+0x20],xmm0
   1400088c8:	movsd  QWORD PTR [rax+0x30],xmm1
   1400088cd:	xor    r8d,r8d
   1400088d0:	lea    rdx,[rbp-0x9]
   1400088d4:	mov    rcx,rdi
   1400088d7:	call   0x14000a170
   1400088dc:	mov    rdx,QWORD PTR [rbp-0x1]
   1400088e0:	test   al,al
   1400088e2:	jne    0x140008923
   1400088e4:	mov    ebx,DWORD PTR [rbp+0xb]
   1400088e7:	and    ebx,0xc0000000
   1400088ed:	jne    0x140008906
   1400088ef:	test   rdx,rdx
   1400088f2:	je     0x140008906
   1400088f4:	mov    rax,QWORD PTR [rip+0x29a95]        # 0x140032390
   1400088fb:	mov    rcx,QWORD PTR [rax]
   1400088fe:	mov    rax,QWORD PTR [rcx]
   140008901:	call   QWORD PTR [rax+0x28]
   140008904:	xor    edx,edx
   140008906:	test   ebx,ebx
   140008908:	jne    0x14000891f
   14000890a:	test   rdx,rdx
   14000890d:	je     0x14000891f
   14000890f:	mov    rax,QWORD PTR [rip+0x29a7a]        # 0x140032390
   140008916:	mov    rcx,QWORD PTR [rax]
   140008919:	mov    rax,QWORD PTR [rcx]
   14000891c:	call   QWORD PTR [rax+0x28]
   14000891f:	xor    eax,eax
   140008921:	jmp    0x140008961
   140008923:	mov    edi,DWORD PTR [rbp+0xb]
   140008926:	and    edi,0xc0000000
   14000892c:	jne    0x140008945
   14000892e:	test   rdx,rdx
   140008931:	je     0x140008945
   140008933:	mov    rax,QWORD PTR [rip+0x29a56]        # 0x140032390
   14000893a:	mov    rcx,QWORD PTR [rax]
   14000893d:	mov    rax,QWORD PTR [rcx]
   140008940:	call   QWORD PTR [rax+0x28]
   140008943:	xor    edx,edx
   140008945:	test   edi,edi
   140008947:	jne    0x14000895e
   140008949:	test   rdx,rdx
   14000894c:	je     0x14000895e
   14000894e:	mov    rax,QWORD PTR [rip+0x29a3b]        # 0x140032390
   140008955:	mov    rcx,QWORD PTR [rax]
   140008958:	mov    rax,QWORD PTR [rcx]
   14000895b:	call   QWORD PTR [rax+0x28]
   14000895e:	mov    rax,rbx
   140008961:	lea    r11,[rsp+0xb0]
   140008969:	mov    rbx,QWORD PTR [r11+0x10]
   14000896d:	mov    rsi,QWORD PTR [r11+0x20]
   140008971:	mov    rdi,QWORD PTR [r11+0x28]
   140008975:	mov    rsp,r11
   140008978:	pop    rbp
   140008979:	ret    
   14000897a:	int3   
   14000897b:	int3   
   14000897c:	int3   
   14000897d:	int3   
   14000897e:	int3   
   14000897f:	int3   
   140008980:	mov    QWORD PTR [rsp+0x18],rbx
   140008985:	mov    QWORD PTR [rsp+0x20],rsi
   14000898a:	push   rbp
   14000898b:	push   rdi
   14000898c:	push   r14
   14000898e:	lea    rbp,[rsp-0x1a0]
   140008996:	sub    rsp,0x2a0
   14000899d:	mov    ebx,r9d
   1400089a0:	mov    rdi,r8
   1400089a3:	mov    r14,rdx
   1400089a6:	mov    rsi,rcx
   1400089a9:	test   rdx,rdx
   1400089ac:	jne    0x1400089b5
   1400089ae:	xor    eax,eax
   1400089b0:	jmp    0x140008c25
   1400089b5:	sub    rcx,0xffffffffffffff80
   1400089b9:	mov    QWORD PTR [rsp+0x2c0],r15
   1400089c1:	lea    rdx,[rbp+0x1c8]
   1400089c8:	call   0x14001ce30
   1400089cd:	movzx  ecx,WORD PTR [rax]
   1400089d0:	mov    eax,0xffff
   1400089d5:	cmp    cx,ax
   1400089d8:	je     0x140008b0e
   1400089de:	mov    rax,QWORD PTR [rsi+0x70]
   1400089e2:	movzx  ecx,cx
   1400089e5:	movzx  ecx,WORD PTR [rax+rcx*2]
   1400089e9:	mov    rax,QWORD PTR [rsi+0x28]
   1400089ed:	lea    rdx,[rcx+rcx*4]
   1400089f1:	mov    rcx,QWORD PTR [rax+rdx*8+0x10]
   1400089f6:	lea    r15,[rax+rdx*8]
   1400089fa:	mov    rax,QWORD PTR [rcx]
   1400089fd:	call   QWORD PTR [rax+0x48]
   140008a00:	test   al,al
   140008a02:	je     0x140008b0e
   140008a08:	mov    r8d,0x200
   140008a0e:	lea    rdx,[rbp-0x60]
   140008a12:	mov    rcx,r14
   140008a15:	call   QWORD PTR [rip+0x29b05]        # 0x140032520
   140008a1b:	mov    rcx,QWORD PTR [r15]
   140008a1e:	lea    rdx,[rbp-0x60]
   140008a22:	call   QWORD PTR [rip+0x29b38]        # 0x140032560
   140008a28:	test   eax,eax
   140008a2a:	je     0x140008b0e
   140008a30:	test   ebx,ebx
   140008a32:	jne    0x140008ae7
   140008a38:	mov    rax,QWORD PTR [rip+0x29949]        # 0x140032388
   140008a3f:	lea    edx,[rbx+0x4]
   140008a42:	mov    ecx,DWORD PTR [rax]
   140008a44:	call   QWORD PTR [rip+0x29a5e]        # 0x1400324a8
   140008a4a:	test   al,al
   140008a4c:	je     0x140008aa2
   140008a4e:	lea    rax,[rip+0x2bb3b]        # 0x140034590
   140008a55:	mov    DWORD PTR [rsp+0x48],0x21b
   140008a5d:	mov    QWORD PTR [rsp+0x40],rax
   140008a62:	lea    r9,[rip+0x2bc07]        # 0x140034670
   140008a69:	lea    rax,[rip+0x2bb00]        # 0x140034570
   140008a70:	mov    QWORD PTR [rsp+0x50],rax
   140008a75:	lea    r8,[rsp+0x40]
   140008a7a:	lea    rax,[rbp-0x60]
   140008a7e:	mov    QWORD PTR [rsp+0x30],rax
   140008a83:	lea    edx,[rbx+0x4]
   140008a86:	mov    rax,QWORD PTR [r15]
   140008a89:	mov    QWORD PTR [rsp+0x28],rax
   140008a8e:	mov    rax,QWORD PTR [rip+0x298f3]        # 0x140032388
   140008a95:	mov    QWORD PTR [rsp+0x20],rdi
   140008a9a:	mov    ecx,DWORD PTR [rax]
   140008a9c:	call   QWORD PTR [rip+0x299f6]        # 0x140032498
   140008aa2:	call   QWORD PTR [rip+0x29ae0]        # 0x140032588
   140008aa8:	test   al,al
   140008aaa:	je     0x140008adb
   140008aac:	call   QWORD PTR [rip+0x299ce]        # 0x140032480
   140008ab2:	lea    rcx,[rip+0x29cf3]        # 0x1400327ac
   140008ab9:	xorps  xmm0,xmm0
   140008abc:	lea    rdx,[rsp+0x40]
   140008ac1:	mov    DWORD PTR [rsp+0x48],eax
   140008ac5:	mov    QWORD PTR [rsp+0x40],rcx
   140008aca:	mov    r8b,0x1
   140008acd:	xor    ecx,ecx
   140008acf:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140008ad5:	call   QWORD PTR [rip+0x2999d]        # 0x140032478
   140008adb:	mov    ecx,0x1
   140008ae0:	call   QWORD PTR [rip+0x29762]        # 0x140032248
   140008ae6:	int3   
   140008ae7:	cmp    ebx,0x1
   140008aea:	jne    0x140008bde
   140008af0:	mov    r8,QWORD PTR [r15]
   140008af3:	lea    r9,[rbp-0x60]
   140008af7:	mov    rdx,rdi
   140008afa:	lea    rcx,[rip+0x2bb6f]        # 0x140034670
   140008b01:	call   QWORD PTR [rip+0x298a9]        # 0x1400323b0
   140008b07:	xor    eax,eax
   140008b09:	jmp    0x140008c1d
   140008b0e:	xor    eax,eax
   140008b10:	mov    QWORD PTR [rsp+0x70],r14
   140008b15:	mov    QWORD PTR [rsp+0x60],rax
   140008b1a:	mov    QWORD PTR [rsp+0x68],rax
   140008b1f:	mov    QWORD PTR [rbp-0x80],rax
   140008b23:	mov    QWORD PTR [rbp-0x78],rax
   140008b27:	mov    QWORD PTR [rbp-0x70],rax
   140008b2b:	mov    QWORD PTR [rsp+0x78],rdi
   140008b30:	mov    QWORD PTR [rsp+0x50],0x40
   140008b39:	call   QWORD PTR [rip+0x29981]        # 0x1400324c0
   140008b3f:	mov    rax,QWORD PTR [rip+0x2984a]        # 0x140032390
   140008b46:	mov    edx,0xe00
   140008b4b:	mov    rcx,QWORD PTR [rax]
   140008b4e:	mov    rax,QWORD PTR [rcx]
   140008b51:	call   QWORD PTR [rax+0x8]
   140008b54:	mov    QWORD PTR [rsp+0x48],rax
   140008b59:	mov    DWORD PTR [rsp+0x40],0x1
   140008b61:	test   rax,rax
   140008b64:	je     0x140008b89
   140008b66:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140008b6b:	movups xmm1,XMMWORD PTR [rsp+0x70]
   140008b70:	movups XMMWORD PTR [rax],xmm0
   140008b73:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140008b77:	movups XMMWORD PTR [rax+0x10],xmm1
   140008b7b:	movsd  xmm1,QWORD PTR [rbp-0x70]
   140008b80:	movups XMMWORD PTR [rax+0x20],xmm0
   140008b84:	movsd  QWORD PTR [rax+0x30],xmm1
   140008b89:	mov    r8d,ebx
   140008b8c:	lea    rdx,[rsp+0x40]
   140008b91:	mov    rcx,rsi
   140008b94:	call   0x14000a170
   140008b99:	mov    ebx,DWORD PTR [rsp+0x54]
   140008b9d:	mov    rdx,QWORD PTR [rsp+0x48]
   140008ba2:	test   al,al
   140008ba4:	jne    0x140008be2
   140008ba6:	and    ebx,0xc0000000
   140008bac:	jne    0x140008bc5
   140008bae:	test   rdx,rdx
   140008bb1:	je     0x140008bc5
   140008bb3:	mov    rax,QWORD PTR [rip+0x297d6]        # 0x140032390
   140008bba:	mov    rcx,QWORD PTR [rax]
   140008bbd:	mov    rax,QWORD PTR [rcx]
   140008bc0:	call   QWORD PTR [rax+0x28]
   140008bc3:	xor    edx,edx
   140008bc5:	test   ebx,ebx
   140008bc7:	jne    0x140008bde
   140008bc9:	test   rdx,rdx
   140008bcc:	je     0x140008bde
   140008bce:	mov    rax,QWORD PTR [rip+0x297bb]        # 0x140032390
   140008bd5:	mov    rcx,QWORD PTR [rax]
   140008bd8:	mov    rax,QWORD PTR [rcx]
   140008bdb:	call   QWORD PTR [rax+0x28]
   140008bde:	xor    eax,eax
   140008be0:	jmp    0x140008c1d
   140008be2:	mov    rdi,QWORD PTR [rdx+0x20]
   140008be6:	and    ebx,0xc0000000
   140008bec:	jne    0x140008c00
   140008bee:	mov    rax,QWORD PTR [rip+0x2979b]        # 0x140032390
   140008bf5:	mov    rcx,QWORD PTR [rax]
   140008bf8:	mov    rax,QWORD PTR [rcx]
   140008bfb:	call   QWORD PTR [rax+0x28]
   140008bfe:	xor    edx,edx
   140008c00:	test   ebx,ebx
   140008c02:	jne    0x140008c1a
   140008c04:	test   rdx,rdx
   140008c07:	je     0x140008c1a
   140008c09:	mov    rcx,QWORD PTR [rip+0x29780]        # 0x140032390
   140008c10:	mov    rcx,QWORD PTR [rcx]
   140008c13:	mov    r8,QWORD PTR [rcx]
   140008c16:	call   QWORD PTR [r8+0x28]
   140008c1a:	mov    rax,rdi
   140008c1d:	mov    r15,QWORD PTR [rsp+0x2c0]
   140008c25:	lea    r11,[rsp+0x2a0]
   140008c2d:	mov    rbx,QWORD PTR [r11+0x30]
   140008c31:	mov    rsi,QWORD PTR [r11+0x38]
   140008c35:	mov    rsp,r11
   140008c38:	pop    r14
   140008c3a:	pop    rdi
   140008c3b:	pop    rbp
   140008c3c:	ret    
   140008c3d:	int3   
   140008c3e:	int3   
   140008c3f:	int3   
   140008c40:	mov    DWORD PTR [rsp+0x10],edx
   140008c44:	push   rbp
   140008c45:	push   rbx
   140008c46:	push   r13
   140008c48:	push   r14
   140008c4a:	lea    rbp,[rsp-0x1e8]
   140008c52:	sub    rsp,0x2e8
   140008c59:	cmp    BYTE PTR [rcx+0x138],0x0
   140008c60:	mov    rbx,r8
   140008c63:	mov    r14d,edx
   140008c66:	mov    r13,rcx
   140008c69:	jne    0x140008d0c
   140008c6f:	mov    rax,QWORD PTR [rip+0x29712]        # 0x140032388
   140008c76:	mov    edx,0x4
   140008c7b:	mov    ecx,DWORD PTR [rax]
   140008c7d:	call   QWORD PTR [rip+0x29825]        # 0x1400324a8
   140008c83:	test   al,al
   140008c85:	je     0x140008cc7
   140008c87:	lea    rax,[rip+0x2b902]        # 0x140034590
   140008c8e:	mov    DWORD PTR [rsp+0x48],0x238
   140008c96:	mov    QWORD PTR [rsp+0x40],rax
   140008c9b:	lea    r9,[rip+0x2ba5e]        # 0x140034700
   140008ca2:	lea    rax,[rip+0x2bab7]        # 0x140034760
   140008ca9:	mov    edx,0x4
   140008cae:	mov    QWORD PTR [rsp+0x50],rax
   140008cb3:	lea    r8,[rsp+0x40]
   140008cb8:	mov    rax,QWORD PTR [rip+0x296c9]        # 0x140032388
   140008cbf:	mov    ecx,DWORD PTR [rax]
   140008cc1:	call   QWORD PTR [rip+0x297d1]        # 0x140032498
   140008cc7:	call   QWORD PTR [rip+0x298bb]        # 0x140032588
   140008ccd:	test   al,al
   140008ccf:	je     0x140008d00
   140008cd1:	call   QWORD PTR [rip+0x297a9]        # 0x140032480
   140008cd7:	lea    rcx,[rip+0x29ace]        # 0x1400327ac
   140008cde:	xorps  xmm0,xmm0
   140008ce1:	lea    rdx,[rsp+0x40]
   140008ce6:	mov    DWORD PTR [rsp+0x48],eax
   140008cea:	mov    QWORD PTR [rsp+0x40],rcx
   140008cef:	mov    r8b,0x1
   140008cf2:	xor    ecx,ecx
   140008cf4:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140008cfa:	call   QWORD PTR [rip+0x29778]        # 0x140032478
   140008d00:	mov    ecx,0x1
   140008d05:	call   QWORD PTR [rip+0x2953d]        # 0x140032248
   140008d0b:	int3   
   140008d0c:	mov    QWORD PTR [rsp+0x320],rsi
   140008d14:	mov    QWORD PTR [rsp+0x2e0],rdi
   140008d1c:	xor    edi,edi
   140008d1e:	mov    QWORD PTR [rsp+0x2d8],r12
   140008d26:	mov    QWORD PTR [rsp+0x2d0],r15
   140008d2e:	mov    r15d,0x40
   140008d34:	movaps XMMWORD PTR [rsp+0x2c0],xmm6
   140008d3c:	movaps XMMWORD PTR [rsp+0x2b0],xmm7
   140008d44:	movaps XMMWORD PTR [rsp+0x2a0],xmm8
   140008d4d:	mov    QWORD PTR [rsp+0x50],r15
   140008d52:	mov    DWORD PTR [rsp+0x40],edi
   140008d56:	call   QWORD PTR [rip+0x29764]        # 0x1400324c0
   140008d5c:	mov    rax,QWORD PTR [rip+0x2962d]        # 0x140032390
   140008d63:	mov    edx,0xe00
   140008d68:	mov    rcx,QWORD PTR [rax]
   140008d6b:	mov    rax,QWORD PTR [rcx]
   140008d6e:	call   QWORD PTR [rax+0x8]
   140008d71:	mov    r12,rax
   140008d74:	mov    QWORD PTR [rsp+0x48],rax
   140008d79:	xor    eax,eax
   140008d7b:	xor    esi,esi
   140008d7d:	mov    QWORD PTR [rsp+0x60],rax
   140008d82:	mov    QWORD PTR [rsp+0x68],rax
   140008d87:	mov    QWORD PTR [rsp+0x70],rax
   140008d8c:	mov    QWORD PTR [rsp+0x78],rax
   140008d91:	mov    QWORD PTR [rbp-0x80],rax
   140008d95:	mov    QWORD PTR [rbp-0x78],rax
   140008d99:	mov    QWORD PTR [rbp-0x70],rax
   140008d9d:	test   r14d,r14d
   140008da0:	jle    0x140008e99
   140008da6:	movsd  xmm6,QWORD PTR [rbp-0x70]
   140008dab:	movups xmm7,XMMWORD PTR [rbp-0x80]
   140008daf:	movups xmm8,XMMWORD PTR [rsp+0x60]
   140008db5:	mov    r8,QWORD PTR [rbx+0x8]
   140008db9:	lea    rax,[r13+0x80]
   140008dc0:	mov    rcx,rax
   140008dc3:	lea    rdx,[rbp+0x210]
   140008dca:	mov    r14d,0xffff
   140008dd0:	call   0x14001ce30
   140008dd5:	movzx  ecx,WORD PTR [rax]
   140008dd8:	cmp    cx,r14w
   140008ddc:	je     0x140008e2c
   140008dde:	mov    rax,QWORD PTR [r13+0x70]
   140008de2:	movzx  ecx,cx
   140008de5:	movzx  ecx,WORD PTR [rax+rcx*2]
   140008de9:	mov    rax,QWORD PTR [r13+0x28]
   140008ded:	lea    rdx,[rcx+rcx*4]
   140008df1:	mov    rcx,QWORD PTR [rax+rdx*8+0x10]
   140008df6:	lea    r14,[rax+rdx*8]
   140008dfa:	mov    rax,QWORD PTR [rcx]
   140008dfd:	call   QWORD PTR [rax+0x48]
   140008e00:	test   al,al
   140008e02:	je     0x140008e2c
   140008e04:	mov    rcx,QWORD PTR [rbx]
   140008e07:	lea    rdx,[rbp-0x60]
   140008e0b:	mov    r8d,0x200
   140008e11:	call   QWORD PTR [rip+0x29709]        # 0x140032520
   140008e17:	mov    rcx,QWORD PTR [r14]
   140008e1a:	lea    rdx,[rbp-0x60]
   140008e1e:	call   QWORD PTR [rip+0x2973c]        # 0x140032560
   140008e24:	test   eax,eax
   140008e26:	jne    0x140008f39
   140008e2c:	mov    rax,QWORD PTR [rbx]
   140008e2f:	mov    QWORD PTR [rsp+0x70],rax
   140008e34:	mov    rax,QWORD PTR [rbx+0x8]
   140008e38:	mov    QWORD PTR [rsp+0x78],rax
   140008e3d:	movsxd r14,edi
   140008e40:	cmp    edi,r15d
   140008e43:	jne    0x140008e62
   140008e45:	mov    edx,0x1
   140008e4a:	lea    rcx,[rsp+0x48]
   140008e4f:	call   0x140009700
   140008e54:	mov    r15d,DWORD PTR [rsp+0x50]
   140008e59:	mov    r12,QWORD PTR [rsp+0x48]
   140008e5e:	mov    edi,DWORD PTR [rsp+0x40]
   140008e62:	inc    edi
   140008e64:	imul   rcx,r14,0x38
   140008e68:	mov    DWORD PTR [rsp+0x40],edi
   140008e6c:	add    rcx,r12
   140008e6f:	je     0x140008e87
   140008e71:	movups xmm1,XMMWORD PTR [rsp+0x70]
   140008e76:	movups XMMWORD PTR [rcx],xmm8
   140008e7a:	movups XMMWORD PTR [rcx+0x10],xmm1
   140008e7e:	movups XMMWORD PTR [rcx+0x20],xmm7
   140008e82:	movsd  QWORD PTR [rcx+0x30],xmm6
   140008e87:	inc    esi
   140008e89:	add    rbx,0x10
   140008e8d:	cmp    esi,DWORD PTR [rbp+0x218]
   140008e93:	jl     0x140008db5
   140008e99:	xor    r8d,r8d
   140008e9c:	lea    rdx,[rsp+0x40]
   140008ea1:	mov    rcx,r13
   140008ea4:	call   0x14000a170
   140008ea9:	mov    ebx,DWORD PTR [rsp+0x54]
   140008ead:	movzx  edi,al
   140008eb0:	mov    rdx,QWORD PTR [rsp+0x48]
   140008eb5:	and    ebx,0xc0000000
   140008ebb:	jne    0x140008ed5
   140008ebd:	test   rdx,rdx
   140008ec0:	je     0x140008ed5
   140008ec2:	mov    rcx,QWORD PTR [rip+0x294c7]        # 0x140032390
   140008ec9:	mov    rcx,QWORD PTR [rcx]
   140008ecc:	mov    r8,QWORD PTR [rcx]
   140008ecf:	call   QWORD PTR [r8+0x28]
   140008ed3:	xor    edx,edx
   140008ed5:	test   ebx,ebx
   140008ed7:	jne    0x140008eee
   140008ed9:	test   rdx,rdx
   140008edc:	je     0x140008eee
   140008ede:	mov    rax,QWORD PTR [rip+0x294ab]        # 0x140032390
   140008ee5:	mov    rcx,QWORD PTR [rax]
   140008ee8:	mov    rax,QWORD PTR [rcx]
   140008eeb:	call   QWORD PTR [rax+0x28]
   140008eee:	movaps xmm7,XMMWORD PTR [rsp+0x2b0]
   140008ef6:	movzx  eax,dil
   140008efa:	mov    rdi,QWORD PTR [rsp+0x2e0]
   140008f02:	movaps xmm6,XMMWORD PTR [rsp+0x2c0]
   140008f0a:	mov    r15,QWORD PTR [rsp+0x2d0]
   140008f12:	mov    r12,QWORD PTR [rsp+0x2d8]
   140008f1a:	mov    rsi,QWORD PTR [rsp+0x320]
   140008f22:	movaps xmm8,XMMWORD PTR [rsp+0x2a0]
   140008f2b:	add    rsp,0x2e8
   140008f32:	pop    r14
   140008f34:	pop    r13
   140008f36:	pop    rbx
   140008f37:	pop    rbp
   140008f38:	ret    
   140008f39:	mov    rax,QWORD PTR [rip+0x29448]        # 0x140032388
   140008f40:	mov    edx,0x4
   140008f45:	mov    ecx,DWORD PTR [rax]
   140008f47:	call   QWORD PTR [rip+0x2955b]        # 0x1400324a8
   140008f4d:	test   al,al
   140008f4f:	je     0x140008fab
   140008f51:	lea    rax,[rip+0x2b638]        # 0x140034590
   140008f58:	mov    DWORD PTR [rsp+0x48],0x24f
   140008f60:	mov    QWORD PTR [rsp+0x40],rax
   140008f65:	lea    r9,[rip+0x2b704]        # 0x140034670
   140008f6c:	lea    rax,[rip+0x2b7ed]        # 0x140034760
   140008f73:	mov    edx,0x4
   140008f78:	mov    QWORD PTR [rsp+0x50],rax
   140008f7d:	lea    r8,[rsp+0x40]
   140008f82:	lea    rax,[rbp-0x60]
   140008f86:	mov    QWORD PTR [rsp+0x30],rax
   140008f8b:	mov    rax,QWORD PTR [r14]
   140008f8e:	mov    QWORD PTR [rsp+0x28],rax
   140008f93:	mov    rax,QWORD PTR [rbx+0x8]
   140008f97:	mov    QWORD PTR [rsp+0x20],rax
   140008f9c:	mov    rax,QWORD PTR [rip+0x293e5]        # 0x140032388
   140008fa3:	mov    ecx,DWORD PTR [rax]
   140008fa5:	call   QWORD PTR [rip+0x294ed]        # 0x140032498
   140008fab:	call   QWORD PTR [rip+0x295d7]        # 0x140032588
   140008fb1:	test   al,al
   140008fb3:	je     0x140008fe4
   140008fb5:	call   QWORD PTR [rip+0x294c5]        # 0x140032480
   140008fbb:	lea    rcx,[rip+0x297ea]        # 0x1400327ac
   140008fc2:	xorps  xmm0,xmm0
   140008fc5:	lea    rdx,[rsp+0x40]
   140008fca:	mov    DWORD PTR [rsp+0x48],eax
   140008fce:	mov    QWORD PTR [rsp+0x40],rcx
   140008fd3:	mov    r8b,0x1
   140008fd6:	xor    ecx,ecx
   140008fd8:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140008fde:	call   QWORD PTR [rip+0x29494]        # 0x140032478
   140008fe4:	mov    ecx,0x1
   140008fe9:	call   QWORD PTR [rip+0x29259]        # 0x140032248
   140008fef:	int3   
   140008ff0:	rex push rbx
   140008ff2:	sub    rsp,0x20
   140008ff6:	mov    rbx,rdx
   140008ff9:	mov    rdx,rcx
   140008ffc:	mov    rcx,QWORD PTR [rip+0x3e10d]        # 0x140047110
   140009003:	call   0x140009500
   140009008:	test   rbx,rbx
   14000900b:	je     0x140009017
   14000900d:	xor    ecx,ecx
   14000900f:	test   rax,rax
   140009012:	sete   cl
   140009015:	mov    DWORD PTR [rbx],ecx
   140009017:	add    rsp,0x20
   14000901b:	pop    rbx
   14000901c:	ret    
   14000901d:	int3   
   14000901e:	int3   
   14000901f:	int3   
   140009020:	mov    QWORD PTR [rsp+0x8],rbx
   140009025:	push   rbp
   140009026:	push   rsi
   140009027:	push   rdi
   140009028:	push   r12
   14000902a:	push   r13
   14000902c:	push   r14
   14000902e:	push   r15
   140009030:	sub    rsp,0x40
   140009034:	mov    rsi,rdx
   140009037:	mov    r14d,0xffff
   14000903d:	nop    DWORD PTR [rax]
   140009040:	movzx  eax,WORD PTR [rsi+0x32]
   140009044:	xor    edi,edi
   140009046:	mov    BYTE PTR [rsp+0x90],0x1
   14000904e:	mov    DWORD PTR [rsp+0x34],eax
   140009052:	mov    DWORD PTR [rsp+0x2c],edi
   140009056:	test   eax,eax
   140009058:	jle    0x1400091e4
   14000905e:	xchg   ax,ax
   140009060:	movzx  eax,di
   140009063:	xor    r12d,r12d
   140009066:	imul   rbp,rax,0x78
   14000906a:	mov    rax,QWORD PTR [rsi+0x8]
   14000906e:	mov    DWORD PTR [rsp+0x30],r12d
   140009073:	movzx  r15d,WORD PTR [rax+rbp*1+0x42]
   140009079:	test   r15d,r15d
   14000907c:	jle    0x1400091c4
   140009082:	lea    rbx,[rsi+0x18]
   140009086:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009090:	mov    rcx,QWORD PTR [rsi+0x8]
   140009094:	lea    rdx,[rsp+0x98]
   14000909c:	add    rcx,0x28
   1400090a0:	mov    WORD PTR [rsp+0x98],r12w
   1400090a9:	add    rcx,rbp
   1400090ac:	call   0x14001db60
   1400090b1:	mov    r8,rax
   1400090b4:	lea    rdx,[rsp+0x24]
   1400090b9:	mov    rcx,rbx
   1400090bc:	call   0x14001ce30
   1400090c1:	movzx  ecx,WORD PTR [rax]
   1400090c4:	cmp    ecx,r14d
   1400090c7:	je     0x1400091af
   1400090cd:	mov    rax,QWORD PTR [rsi+0x8]
   1400090d1:	xor    ebx,ebx
   1400090d3:	imul   r13,rcx,0x78
   1400090d7:	movzx  r14d,WORD PTR [rax+r13*1+0x42]
   1400090dd:	test   r14d,r14d
   1400090e0:	jle    0x1400091a5
   1400090e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400090f0:	mov    rcx,QWORD PTR [rsi+0x8]
   1400090f4:	lea    rdx,[rsp+0x20]
   1400090f9:	add    rcx,0x28
   1400090fd:	mov    WORD PTR [rsp+0x20],bx
   140009102:	add    rcx,r13
   140009105:	call   0x14001db60
   14000910a:	mov    rcx,QWORD PTR [rsi+0x8]
   14000910e:	lea    rdx,[rsp+0x26]
   140009113:	add    rcx,0x28
   140009117:	mov    r8,rax
   14000911a:	add    rcx,rbp
   14000911d:	mov    rdi,rax
   140009120:	call   0x14001ce30
   140009125:	mov    ecx,0xffff
   14000912a:	cmp    WORD PTR [rax],cx
   14000912d:	jne    0x140009195
   14000912f:	mov    ecx,DWORD PTR [rsp+0x2c]
   140009133:	lea    rdx,[rsp+0x22]
   140009138:	movzx  eax,cx
   14000913b:	lea    rcx,[rsi+0x18]
   14000913f:	mov    WORD PTR [rsp+0x22],ax
   140009144:	call   0x14001db60
   140009149:	mov    rdx,rax
   14000914c:	mov    rcx,rdi
   14000914f:	call   QWORD PTR [rip+0x2940b]        # 0x140032560
   140009155:	test   eax,eax
   140009157:	jne    0x14000916b
   140009159:	mov    rdx,rdi
   14000915c:	lea    rcx,[rip+0x2b61d]        # 0x140034780
   140009163:	call   QWORD PTR [rip+0x29247]        # 0x1400323b0
   140009169:	jmp    0x140009195
   14000916b:	mov    rcx,QWORD PTR [rsi+0x8]
   14000916f:	lea    rdx,[rsp+0x28]
   140009174:	add    rcx,0x28
   140009178:	mov    BYTE PTR [rsp+0x90],0x0
   140009180:	add    rcx,rbp
   140009183:	mov    r8,rdi
   140009186:	call   0x14001c980
   14000918b:	mov    rax,QWORD PTR [rsi+0x8]
   14000918f:	movzx  r15d,WORD PTR [rax+rbp*1+0x42]
   140009195:	inc    ebx
   140009197:	cmp    ebx,r14d
   14000919a:	jl     0x1400090f0
   1400091a0:	mov    r12d,DWORD PTR [rsp+0x30]
   1400091a5:	mov    r14d,0xffff
   1400091ab:	lea    rbx,[rsi+0x18]
   1400091af:	inc    r12d
   1400091b2:	mov    DWORD PTR [rsp+0x30],r12d
   1400091b7:	cmp    r12d,r15d
   1400091ba:	jl     0x140009090
   1400091c0:	mov    edi,DWORD PTR [rsp+0x2c]
   1400091c4:	inc    edi
   1400091c6:	mov    DWORD PTR [rsp+0x2c],edi
   1400091ca:	cmp    edi,DWORD PTR [rsp+0x34]
   1400091ce:	jl     0x140009060
   1400091d4:	movzx  eax,BYTE PTR [rsp+0x90]
   1400091dc:	test   al,al
   1400091de:	je     0x140009040
   1400091e4:	mov    rbx,QWORD PTR [rsp+0x80]
   1400091ec:	add    rsp,0x40
   1400091f0:	pop    r15
   1400091f2:	pop    r14
   1400091f4:	pop    r13
   1400091f6:	pop    r12
   1400091f8:	pop    rdi
   1400091f9:	pop    rsi
   1400091fa:	pop    rbp
   1400091fb:	ret    
   1400091fc:	int3   
   1400091fd:	int3   
   1400091fe:	int3   
   1400091ff:	int3   
   140009200:	rex push rbx
   140009202:	sub    rsp,0x20
   140009206:	mov    rbx,rcx
   140009209:	mov    ecx,0x10
   14000920e:	call   0x140007bf0
   140009213:	test   rax,rax
   140009216:	je     0x14000922c
   140009218:	lea    rcx,[rip+0x297e1]        # 0x140032a00
   14000921f:	mov    QWORD PTR [rax+0x8],rbx
   140009223:	mov    QWORD PTR [rax],rcx
   140009226:	add    rsp,0x20
   14000922a:	pop    rbx
   14000922b:	ret    
   14000922c:	add    rsp,0x20
   140009230:	pop    rbx
   140009231:	ret    
   140009232:	int3   
   140009233:	int3   
   140009234:	int3   
   140009235:	int3   
   140009236:	int3   
   140009237:	int3   
   140009238:	int3   
   140009239:	int3   
   14000923a:	int3   
   14000923b:	int3   
   14000923c:	int3   
   14000923d:	int3   
   14000923e:	int3   
   14000923f:	int3   
   140009240:	rex push rbp
   140009242:	push   rbx
   140009243:	push   rsi
   140009244:	push   rdi
   140009245:	push   r12
   140009247:	push   r15
   140009249:	mov    rbp,rsp
   14000924c:	sub    rsp,0x68
   140009250:	movzx  eax,WORD PTR [rdx]
   140009253:	mov    rdi,rcx
   140009256:	lea    rdx,[rbp+0x38]
   14000925a:	mov    WORD PTR [rbp+0x38],ax
   14000925e:	add    rcx,0x18
   140009262:	mov    rbx,r8
   140009265:	call   0x14001db60
   14000926a:	movzx  edx,WORD PTR [rbx]
   14000926d:	lea    rcx,[rdi+0x18]
   140009271:	mov    WORD PTR [rbp+0x40],dx
   140009275:	mov    r15,rax
   140009278:	lea    rdx,[rbp+0x40]
   14000927c:	call   0x14001db60
   140009281:	mov    r8,rax
   140009284:	lea    rdx,[rbp+0x48]
   140009288:	lea    rcx,[rdi+0x18]
   14000928c:	mov    r12,rax
   14000928f:	call   0x14001c980
   140009294:	movzx  ebx,WORD PTR [rbp+0x48]
   140009298:	mov    edx,DWORD PTR [rdi]
   14000929a:	cmp    edx,ebx
   14000929c:	jg     0x1400092b2
   14000929e:	lea    r8d,[rbx+0x1]
   1400092a2:	cmp    edx,r8d
   1400092a5:	jge    0x1400092b2
   1400092a7:	sub    r8d,edx
   1400092aa:	mov    rcx,rdi
   1400092ad:	call   0x140009c90
   1400092b2:	imul   rcx,rbx,0x78
   1400092b6:	mov    r8,r15
   1400092b9:	mov    QWORD PTR [rsp+0x60],r14
   1400092be:	add    rcx,0x28
   1400092c2:	lea    rdx,[rbp+0x50]
   1400092c6:	add    rcx,QWORD PTR [rdi+0x8]
   1400092ca:	call   0x14001ce30
   1400092cf:	mov    ecx,0xffff
   1400092d4:	lea    rdx,[rbp+0x48]
   1400092d8:	cmp    WORD PTR [rax],cx
   1400092db:	lea    rcx,[rdi+0x18]
   1400092df:	je     0x140009477
   1400092e5:	mov    r8,r12
   1400092e8:	call   0x14001c980
   1400092ed:	movzx  ebx,WORD PTR [rbp+0x48]
   1400092f1:	mov    edx,DWORD PTR [rdi]
   1400092f3:	cmp    edx,ebx
   1400092f5:	jg     0x14000930b
   1400092f7:	lea    r8d,[rbx+0x1]
   1400092fb:	cmp    edx,r8d
   1400092fe:	jge    0x14000930b
   140009300:	sub    r8d,edx
   140009303:	mov    rcx,rdi
   140009306:	call   0x140009c90
   14000930b:	imul   r14,rbx,0x78
   14000930f:	mov    r8,r15
   140009312:	lea    rdx,[rbp+0x50]
   140009316:	add    r14,QWORD PTR [rdi+0x8]
   14000931a:	lea    rcx,[rdi+0x18]
   14000931e:	call   0x14001c980
   140009323:	movzx  ebx,WORD PTR [rbp+0x50]
   140009327:	mov    edx,DWORD PTR [rdi]
   140009329:	cmp    edx,ebx
   14000932b:	jg     0x140009341
   14000932d:	lea    r8d,[rbx+0x1]
   140009331:	cmp    edx,r8d
   140009334:	jge    0x140009341
   140009336:	sub    r8d,edx
   140009339:	mov    rcx,rdi
   14000933c:	call   0x140009c90
   140009341:	mov    rax,QWORD PTR [rdi+0x8]
   140009345:	imul   rcx,rbx,0x78
   140009349:	mov    ecx,DWORD PTR [rcx+rax*1]
   14000934c:	cmp    DWORD PTR [r14],ecx
   14000934f:	jge    0x140009473
   140009355:	mov    rax,QWORD PTR [rip+0x2902c]        # 0x140032388
   14000935c:	mov    edx,0x4
   140009361:	mov    ecx,DWORD PTR [rax]
   140009363:	call   QWORD PTR [rip+0x2913f]        # 0x1400324a8
   140009369:	test   al,al
   14000936b:	je     0x140009432
   140009371:	mov    r8,r15
   140009374:	lea    rdx,[rbp+0x48]
   140009378:	lea    rcx,[rdi+0x18]
   14000937c:	call   0x14001c980
   140009381:	movzx  ebx,WORD PTR [rbp+0x48]
   140009385:	mov    edx,DWORD PTR [rdi]
   140009387:	cmp    edx,ebx
   140009389:	jg     0x14000939f
   14000938b:	lea    r8d,[rbx+0x1]
   14000938f:	cmp    edx,r8d
   140009392:	jge    0x14000939f
   140009394:	sub    r8d,edx
   140009397:	mov    rcx,rdi
   14000939a:	call   0x140009c90
   14000939f:	imul   r14,rbx,0x78
   1400093a3:	mov    r8,r12
   1400093a6:	lea    rdx,[rbp+0x50]
   1400093aa:	add    r14,QWORD PTR [rdi+0x8]
   1400093ae:	lea    rcx,[rdi+0x18]
   1400093b2:	call   0x14001c980
   1400093b7:	movzx  ebx,WORD PTR [rbp+0x50]
   1400093bb:	mov    edx,DWORD PTR [rdi]
   1400093bd:	cmp    edx,ebx
   1400093bf:	jg     0x1400093d5
   1400093c1:	lea    r8d,[rbx+0x1]
   1400093c5:	cmp    edx,r8d
   1400093c8:	jge    0x1400093d5
   1400093ca:	sub    r8d,edx
   1400093cd:	mov    rcx,rdi
   1400093d0:	call   0x140009c90
   1400093d5:	mov    rcx,QWORD PTR [rdi+0x8]
   1400093d9:	lea    rax,[rip+0x2b1b0]        # 0x140034590
   1400093e0:	mov    QWORD PTR [rbp-0x28],rax
   1400093e4:	lea    r9,[rip+0x2b3d5]        # 0x1400347c0
   1400093eb:	mov    DWORD PTR [rbp-0x20],0x364
   1400093f2:	lea    rax,[rip+0x2b42f]        # 0x140034828
   1400093f9:	mov    QWORD PTR [rbp-0x18],rax
   1400093fd:	mov    edx,0x4
   140009402:	mov    eax,DWORD PTR [r14]
   140009405:	mov    DWORD PTR [rsp+0x38],eax
   140009409:	imul   r8,rbx,0x78
   14000940d:	mov    QWORD PTR [rsp+0x30],r15
   140009412:	mov    eax,DWORD PTR [r8+rcx*1]
   140009416:	lea    r8,[rbp-0x28]
   14000941a:	mov    DWORD PTR [rsp+0x28],eax
   14000941e:	mov    rax,QWORD PTR [rip+0x28f63]        # 0x140032388
   140009425:	mov    QWORD PTR [rsp+0x20],r12
   14000942a:	mov    ecx,DWORD PTR [rax]
   14000942c:	call   QWORD PTR [rip+0x29066]        # 0x140032498
   140009432:	call   QWORD PTR [rip+0x29150]        # 0x140032588
   140009438:	test   al,al
   14000943a:	je     0x140009467
   14000943c:	call   QWORD PTR [rip+0x2903e]        # 0x140032480
   140009442:	lea    rcx,[rip+0x29363]        # 0x1400327ac
   140009449:	xorps  xmm0,xmm0
   14000944c:	lea    rdx,[rbp-0x28]
   140009450:	mov    DWORD PTR [rbp-0x20],eax
   140009453:	mov    QWORD PTR [rbp-0x28],rcx
   140009457:	mov    r8b,0x1
   14000945a:	xor    ecx,ecx
   14000945c:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140009461:	call   QWORD PTR [rip+0x29011]        # 0x140032478
   140009467:	mov    ecx,0x1
   14000946c:	call   QWORD PTR [rip+0x28dd6]        # 0x140032248
   140009472:	int3   
   140009473:	mov    al,0x1
   140009475:	jmp    0x1400094e4
   140009477:	mov    r8,r15
   14000947a:	call   0x14001c980
   14000947f:	movzx  ebx,WORD PTR [rbp+0x48]
   140009483:	mov    edx,DWORD PTR [rdi]
   140009485:	cmp    edx,ebx
   140009487:	jg     0x14000949d
   140009489:	lea    r8d,[rbx+0x1]
   14000948d:	cmp    edx,r8d
   140009490:	jge    0x14000949d
   140009492:	sub    r8d,edx
   140009495:	mov    rcx,rdi
   140009498:	call   0x140009c90
   14000949d:	imul   r14,rbx,0x78
   1400094a1:	mov    r8,r12
   1400094a4:	lea    rdx,[rbp+0x38]
   1400094a8:	add    r14,QWORD PTR [rdi+0x8]
   1400094ac:	lea    rcx,[rdi+0x18]
   1400094b0:	call   0x14001c980
   1400094b5:	movzx  ebx,WORD PTR [rbp+0x38]
   1400094b9:	mov    edx,DWORD PTR [rdi]
   1400094bb:	cmp    edx,ebx
   1400094bd:	jg     0x1400094d3
   1400094bf:	lea    r8d,[rbx+0x1]
   1400094c3:	cmp    edx,r8d
   1400094c6:	jge    0x1400094d3
   1400094c8:	sub    r8d,edx
   1400094cb:	mov    rcx,rdi
   1400094ce:	call   0x140009c90
   1400094d3:	mov    rdx,QWORD PTR [rdi+0x8]
   1400094d7:	imul   rcx,rbx,0x78
   1400094db:	mov    eax,DWORD PTR [rcx+rdx*1]
   1400094de:	cmp    DWORD PTR [r14],eax
   1400094e1:	setl   al
   1400094e4:	mov    r14,QWORD PTR [rsp+0x60]
   1400094e9:	add    rsp,0x68
   1400094ed:	pop    r15
   1400094ef:	pop    r12
   1400094f1:	pop    rdi
   1400094f2:	pop    rsi
   1400094f3:	pop    rbx
   1400094f4:	pop    rbp
   1400094f5:	ret    
   1400094f6:	int3   
   1400094f7:	int3   
   1400094f8:	int3   
   1400094f9:	int3   
   1400094fa:	int3   
   1400094fb:	int3   
   1400094fc:	int3   
   1400094fd:	int3   
   1400094fe:	int3   
   1400094ff:	int3   
   140009500:	rex push rbp
   140009502:	push   r15
   140009504:	sub    rsp,0x28
   140009508:	mov    r15,rdx
   14000950b:	mov    rbp,rcx
   14000950e:	mov    r8,rdx
   140009511:	sub    rcx,0xffffffffffffff80
   140009515:	lea    rdx,[rsp+0x40]
   14000951a:	call   0x14001ce30
   14000951f:	movzx  ecx,WORD PTR [rax]
   140009522:	mov    eax,0xffff
   140009527:	cmp    cx,ax
   14000952a:	je     0x14000954c
   14000952c:	mov    rax,QWORD PTR [rbp+0x70]
   140009530:	movzx  edx,cx
   140009533:	movzx  edx,WORD PTR [rax+rdx*2]
   140009537:	mov    rax,QWORD PTR [rbp+0x28]
   14000953b:	lea    rcx,[rdx+rdx*4]
   14000953f:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
   140009544:	add    rsp,0x28
   140009548:	pop    r15
   14000954a:	pop    rbp
   14000954b:	ret    
   14000954c:	mov    QWORD PTR [rsp+0x48],rbx
   140009551:	xor    ebx,ebx
   140009553:	mov    QWORD PTR [rsp+0x50],rsi
   140009558:	mov    QWORD PTR [rsp+0x58],rdi
   14000955d:	mov    edi,ebx
   14000955f:	mov    QWORD PTR [rsp+0x20],r14
   140009564:	movsxd r14,DWORD PTR [rbp+0x20]
   140009568:	test   r14,r14
   14000956b:	jle    0x140009599
   14000956d:	mov    esi,ebx
   14000956f:	nop
   140009570:	mov    rax,QWORD PTR [rbp+0x28]
   140009574:	cmp    BYTE PTR [rax+rsi*1+0x24],bl
   140009578:	jne    0x14000958d
   14000957a:	mov    rcx,QWORD PTR [rax+rsi*1+0x10]
   14000957f:	mov    rdx,r15
   140009582:	mov    rax,QWORD PTR [rcx]
   140009585:	call   QWORD PTR [rax+0x10]
   140009588:	test   rax,rax
   14000958b:	jne    0x1400095bd
   14000958d:	inc    rdi
   140009590:	add    rsi,0x28
   140009594:	cmp    rdi,r14
   140009597:	jl     0x140009570
   140009599:	movsxd rdi,DWORD PTR [rbp+0x38]
   14000959d:	test   rdi,rdi
   1400095a0:	jle    0x1400095bb
   1400095a2:	mov    rax,QWORD PTR [rbp+0x40]
   1400095a6:	xor    edx,edx
   1400095a8:	mov    rcx,r15
   1400095ab:	call   QWORD PTR [rax+rbx*8]
   1400095ae:	test   rax,rax
   1400095b1:	jne    0x1400095bd
   1400095b3:	inc    rbx
   1400095b6:	cmp    rbx,rdi
   1400095b9:	jl     0x1400095a2
   1400095bb:	xor    eax,eax
   1400095bd:	mov    rdi,QWORD PTR [rsp+0x58]
   1400095c2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400095c7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400095cc:	mov    r14,QWORD PTR [rsp+0x20]
   1400095d1:	add    rsp,0x28
   1400095d5:	pop    r15
   1400095d7:	pop    rbp
   1400095d8:	ret    
   1400095d9:	int3   
   1400095da:	int3   
   1400095db:	int3   
   1400095dc:	int3   
   1400095dd:	int3   
   1400095de:	int3   
   1400095df:	int3   
   1400095e0:	lea    rax,[rip+0xfffffffffffffa09]        # 0x140008ff0
   1400095e7:	ret    
   1400095e8:	int3   
   1400095e9:	int3   
   1400095ea:	int3   
   1400095eb:	int3   
   1400095ec:	int3   
   1400095ed:	int3   
   1400095ee:	int3   
   1400095ef:	int3   
   1400095f0:	mov    eax,DWORD PTR [rcx+0x140]
   1400095f6:	ret    
   1400095f7:	int3   
   1400095f8:	int3   
   1400095f9:	int3   
   1400095fa:	int3   
   1400095fb:	int3   
   1400095fc:	int3   
   1400095fd:	int3   
   1400095fe:	int3   
   1400095ff:	int3   
   140009600:	rex push rdi
   140009602:	sub    rsp,0x20
   140009606:	mov    eax,edx
   140009608:	mov    rdi,rcx
   14000960b:	mov    edx,DWORD PTR [rcx+0xc]
   14000960e:	bt     edx,0x1e
   140009612:	jb     0x1400096f4
   140009618:	mov    ecx,DWORD PTR [rcx+0x8]
   14000961b:	and    edx,0x3fffffff
   140009621:	mov    QWORD PTR [rsp+0x30],rbx
   140009626:	mov    r9d,0x2
   14000962c:	mov    QWORD PTR [rsp+0x38],rsi
   140009631:	lea    esi,[rcx+rax*1]
   140009634:	mov    r8d,esi
   140009637:	call   0x14001aa30
   14000963c:	mov    ebx,eax
   14000963e:	cmp    eax,esi
   140009640:	jge    0x14000965e
   140009642:	test   eax,eax
   140009644:	jne    0x140009650
   140009646:	cmp    esi,0xffffffff
   140009649:	jg     0x140009650
   14000964b:	or     ebx,0xffffffff
   14000964e:	jmp    0x14000965e
   140009650:	lea    eax,[rbx+rsi*1]
   140009653:	cdq    
   140009654:	sub    eax,edx
   140009656:	sar    eax,1
   140009658:	mov    ebx,eax
   14000965a:	cmp    eax,esi
   14000965c:	jl     0x140009650
   14000965e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009665:	mov    rax,QWORD PTR [rip+0x28d24]        # 0x140032390
   14000966c:	mov    rcx,QWORD PTR [rax]
   14000966f:	mov    rax,QWORD PTR [rcx]
   140009672:	jne    0x1400096ba
   140009674:	mov    rdx,QWORD PTR [rdi]
   140009677:	test   rdx,rdx
   14000967a:	je     0x14000969b
   14000967c:	movsxd r8,ebx
   14000967f:	add    r8,r8
   140009682:	call   QWORD PTR [rax+0x18]
   140009685:	mov    rsi,QWORD PTR [rsp+0x38]
   14000968a:	mov    DWORD PTR [rdi+0x8],ebx
   14000968d:	mov    rbx,QWORD PTR [rsp+0x30]
   140009692:	mov    QWORD PTR [rdi],rax
   140009695:	add    rsp,0x20
   140009699:	pop    rdi
   14000969a:	ret    
   14000969b:	movsxd rdx,ebx
   14000969e:	add    rdx,rdx
   1400096a1:	call   QWORD PTR [rax+0x8]
   1400096a4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400096a9:	mov    DWORD PTR [rdi+0x8],ebx
   1400096ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096b1:	mov    QWORD PTR [rdi],rax
   1400096b4:	add    rsp,0x20
   1400096b8:	pop    rdi
   1400096b9:	ret    
   1400096ba:	mov    rsi,QWORD PTR [rdi]
   1400096bd:	movsxd rdx,ebx
   1400096c0:	add    rdx,rdx
   1400096c3:	call   QWORD PTR [rax+0x8]
   1400096c6:	mov    QWORD PTR [rdi],rax
   1400096c9:	test   rsi,rsi
   1400096cc:	je     0x1400096e0
   1400096ce:	movsxd r8,DWORD PTR [rdi+0x8]
   1400096d2:	mov    rdx,rsi
   1400096d5:	add    r8,r8
   1400096d8:	mov    rcx,rax
   1400096db:	call   0x140026f70
   1400096e0:	and    DWORD PTR [rdi+0xc],0x3fffffff
   1400096e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400096ec:	mov    DWORD PTR [rdi+0x8],ebx
   1400096ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096f4:	add    rsp,0x20
   1400096f8:	pop    rdi
   1400096f9:	ret    
   1400096fa:	int3   
   1400096fb:	int3   
   1400096fc:	int3   
   1400096fd:	int3   
   1400096fe:	int3   
   1400096ff:	int3   
   140009700:	rex push rdi
   140009702:	sub    rsp,0x20
   140009706:	mov    eax,edx
   140009708:	mov    rdi,rcx
   14000970b:	mov    edx,DWORD PTR [rcx+0xc]
   14000970e:	bt     edx,0x1e
   140009712:	jb     0x1400097fb
   140009718:	mov    ecx,DWORD PTR [rcx+0x8]
   14000971b:	and    edx,0x3fffffff
   140009721:	mov    QWORD PTR [rsp+0x30],rbx
   140009726:	mov    r9d,0x38
   14000972c:	mov    QWORD PTR [rsp+0x38],rsi
   140009731:	lea    esi,[rcx+rax*1]
   140009734:	mov    r8d,esi
   140009737:	call   0x14001aa30
   14000973c:	mov    ebx,eax
   14000973e:	cmp    eax,esi
   140009740:	jge    0x14000975e
   140009742:	test   eax,eax
   140009744:	jne    0x140009750
   140009746:	cmp    esi,0xffffffff
   140009749:	jg     0x140009750
   14000974b:	or     ebx,0xffffffff
   14000974e:	jmp    0x14000975e
   140009750:	lea    eax,[rbx+rsi*1]
   140009753:	cdq    
   140009754:	sub    eax,edx
   140009756:	sar    eax,1
   140009758:	mov    ebx,eax
   14000975a:	cmp    eax,esi
   14000975c:	jl     0x140009750
   14000975e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009765:	mov    rax,QWORD PTR [rip+0x28c24]        # 0x140032390
   14000976c:	mov    rcx,QWORD PTR [rax]
   14000976f:	movsxd rax,ebx
   140009772:	jne    0x1400097be
   140009774:	mov    rdx,QWORD PTR [rdi]
   140009777:	test   rdx,rdx
   14000977a:	je     0x14000979d
   14000977c:	mov    r9,QWORD PTR [rcx]
   14000977f:	imul   r8,rax,0x38
   140009783:	call   QWORD PTR [r9+0x18]
   140009787:	mov    rsi,QWORD PTR [rsp+0x38]
   14000978c:	mov    DWORD PTR [rdi+0x8],ebx
   14000978f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009794:	mov    QWORD PTR [rdi],rax
   140009797:	add    rsp,0x20
   14000979b:	pop    rdi
   14000979c:	ret    
   14000979d:	mov    r8,QWORD PTR [rcx]
   1400097a0:	imul   rdx,rax,0x38
   1400097a4:	call   QWORD PTR [r8+0x8]
   1400097a8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400097ad:	mov    DWORD PTR [rdi+0x8],ebx
   1400097b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097b5:	mov    QWORD PTR [rdi],rax
   1400097b8:	add    rsp,0x20
   1400097bc:	pop    rdi
   1400097bd:	ret    
   1400097be:	mov    r8,QWORD PTR [rcx]
   1400097c1:	mov    rsi,QWORD PTR [rdi]
   1400097c4:	imul   rdx,rax,0x38
   1400097c8:	call   QWORD PTR [r8+0x8]
   1400097cc:	mov    QWORD PTR [rdi],rax
   1400097cf:	test   rsi,rsi
   1400097d2:	je     0x1400097e7
   1400097d4:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400097d8:	mov    rdx,rsi
   1400097db:	imul   r8,rcx,0x38
   1400097df:	mov    rcx,rax
   1400097e2:	call   0x140026f70
   1400097e7:	and    DWORD PTR [rdi+0xc],0x3fffffff
   1400097ee:	mov    rsi,QWORD PTR [rsp+0x38]
   1400097f3:	mov    DWORD PTR [rdi+0x8],ebx
   1400097f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097fb:	add    rsp,0x20
   1400097ff:	pop    rdi
   140009800:	ret    
   140009801:	int3   
   140009802:	int3   
   140009803:	int3   
   140009804:	int3   
   140009805:	int3   
   140009806:	int3   
   140009807:	int3   
   140009808:	int3   
   140009809:	int3   
   14000980a:	int3   
   14000980b:	int3   
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	rex push rdi
   140009812:	sub    rsp,0x20
   140009816:	mov    eax,edx
   140009818:	mov    rdi,rcx
   14000981b:	mov    edx,DWORD PTR [rcx+0xc]
   14000981e:	bt     edx,0x1e
   140009822:	jb     0x14000991b
   140009828:	mov    ecx,DWORD PTR [rcx+0x8]
   14000982b:	and    edx,0x3fffffff
   140009831:	mov    QWORD PTR [rsp+0x30],rbx
   140009836:	mov    r9d,0x28
   14000983c:	mov    QWORD PTR [rsp+0x38],rsi
   140009841:	lea    esi,[rcx+rax*1]
   140009844:	mov    r8d,esi
   140009847:	call   0x14001aa30
   14000984c:	mov    ebx,eax
   14000984e:	cmp    eax,esi
   140009850:	jge    0x14000986e
   140009852:	test   eax,eax
   140009854:	jne    0x140009860
   140009856:	cmp    esi,0xffffffff
   140009859:	jg     0x140009860
   14000985b:	or     ebx,0xffffffff
   14000985e:	jmp    0x14000986e
   140009860:	lea    eax,[rbx+rsi*1]
   140009863:	cdq    
   140009864:	sub    eax,edx
   140009866:	sar    eax,1
   140009868:	mov    ebx,eax
   14000986a:	cmp    eax,esi
   14000986c:	jl     0x140009860
   14000986e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009875:	mov    rax,QWORD PTR [rip+0x28b14]        # 0x140032390
   14000987c:	mov    rcx,QWORD PTR [rax]
   14000987f:	movsxd rax,ebx
   140009882:	jne    0x1400098d6
   140009884:	mov    rdx,QWORD PTR [rdi]
   140009887:	test   rdx,rdx
   14000988a:	je     0x1400098b1
   14000988c:	mov    r9,QWORD PTR [rcx]
   14000988f:	lea    r8,[rax+rax*4]
   140009893:	shl    r8,0x3
   140009897:	call   QWORD PTR [r9+0x18]
   14000989b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400098a0:	mov    DWORD PTR [rdi+0x8],ebx
   1400098a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098a8:	mov    QWORD PTR [rdi],rax
   1400098ab:	add    rsp,0x20
   1400098af:	pop    rdi
   1400098b0:	ret    
   1400098b1:	mov    r8,QWORD PTR [rcx]
   1400098b4:	lea    rdx,[rax+rax*4]
   1400098b8:	shl    rdx,0x3
   1400098bc:	call   QWORD PTR [r8+0x8]
   1400098c0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400098c5:	mov    DWORD PTR [rdi+0x8],ebx
   1400098c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098cd:	mov    QWORD PTR [rdi],rax
   1400098d0:	add    rsp,0x20
   1400098d4:	pop    rdi
   1400098d5:	ret    
   1400098d6:	mov    r8,QWORD PTR [rcx]
   1400098d9:	lea    rdx,[rax+rax*4]
   1400098dd:	mov    rsi,QWORD PTR [rdi]
   1400098e0:	shl    rdx,0x3
   1400098e4:	call   QWORD PTR [r8+0x8]
   1400098e8:	mov    QWORD PTR [rdi],rax
   1400098eb:	test   rsi,rsi
   1400098ee:	je     0x140009907
   1400098f0:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400098f4:	mov    rdx,rsi
   1400098f7:	lea    r8,[rcx+rcx*4]
   1400098fb:	mov    rcx,rax
   1400098fe:	shl    r8,0x3
   140009902:	call   0x140026f70
   140009907:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14000990e:	mov    rsi,QWORD PTR [rsp+0x38]
   140009913:	mov    DWORD PTR [rdi+0x8],ebx
   140009916:	mov    rbx,QWORD PTR [rsp+0x30]
   14000991b:	add    rsp,0x20
   14000991f:	pop    rdi
   140009920:	ret    
   140009921:	int3   
   140009922:	int3   
   140009923:	int3   
   140009924:	int3   
   140009925:	int3   
   140009926:	int3   
   140009927:	int3   
   140009928:	int3   
   140009929:	int3   
   14000992a:	int3   
   14000992b:	int3   
   14000992c:	int3   
   14000992d:	int3   
   14000992e:	int3   
   14000992f:	int3   
   140009930:	rex push rdi
   140009932:	sub    rsp,0x20
   140009936:	mov    eax,edx
   140009938:	mov    rdi,rcx
   14000993b:	mov    edx,DWORD PTR [rcx+0xc]
   14000993e:	bt     edx,0x1e
   140009942:	jb     0x140009a2b
   140009948:	mov    ecx,DWORD PTR [rcx+0x8]
   14000994b:	and    edx,0x3fffffff
   140009951:	mov    QWORD PTR [rsp+0x30],rbx
   140009956:	mov    r9d,0x78
   14000995c:	mov    QWORD PTR [rsp+0x38],rsi
   140009961:	lea    esi,[rcx+rax*1]
   140009964:	mov    r8d,esi
   140009967:	call   0x14001aa30
   14000996c:	mov    ebx,eax
   14000996e:	cmp    eax,esi
   140009970:	jge    0x14000998e
   140009972:	test   eax,eax
   140009974:	jne    0x140009980
   140009976:	cmp    esi,0xffffffff
   140009979:	jg     0x140009980
   14000997b:	or     ebx,0xffffffff
   14000997e:	jmp    0x14000998e
   140009980:	lea    eax,[rbx+rsi*1]
   140009983:	cdq    
   140009984:	sub    eax,edx
   140009986:	sar    eax,1
   140009988:	mov    ebx,eax
   14000998a:	cmp    eax,esi
   14000998c:	jl     0x140009980
   14000998e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009995:	mov    rax,QWORD PTR [rip+0x289f4]        # 0x140032390
   14000999c:	mov    rcx,QWORD PTR [rax]
   14000999f:	movsxd rax,ebx
   1400099a2:	jne    0x1400099ee
   1400099a4:	mov    rdx,QWORD PTR [rdi]
   1400099a7:	test   rdx,rdx
   1400099aa:	je     0x1400099cd
   1400099ac:	mov    r9,QWORD PTR [rcx]
   1400099af:	imul   r8,rax,0x78
   1400099b3:	call   QWORD PTR [r9+0x18]
   1400099b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400099bc:	mov    DWORD PTR [rdi+0x8],ebx
   1400099bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400099c4:	mov    QWORD PTR [rdi],rax
   1400099c7:	add    rsp,0x20
   1400099cb:	pop    rdi
   1400099cc:	ret    
   1400099cd:	mov    r8,QWORD PTR [rcx]
   1400099d0:	imul   rdx,rax,0x78
   1400099d4:	call   QWORD PTR [r8+0x8]
   1400099d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400099dd:	mov    DWORD PTR [rdi+0x8],ebx
   1400099e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400099e5:	mov    QWORD PTR [rdi],rax
   1400099e8:	add    rsp,0x20
   1400099ec:	pop    rdi
   1400099ed:	ret    
   1400099ee:	mov    r8,QWORD PTR [rcx]
   1400099f1:	mov    rsi,QWORD PTR [rdi]
   1400099f4:	imul   rdx,rax,0x78
   1400099f8:	call   QWORD PTR [r8+0x8]
   1400099fc:	mov    QWORD PTR [rdi],rax
   1400099ff:	test   rsi,rsi
   140009a02:	je     0x140009a17
   140009a04:	movsxd rcx,DWORD PTR [rdi+0x8]
   140009a08:	mov    rdx,rsi
   140009a0b:	imul   r8,rcx,0x78
   140009a0f:	mov    rcx,rax
   140009a12:	call   0x140026f70
   140009a17:	and    DWORD PTR [rdi+0xc],0x3fffffff
   140009a1e:	mov    rsi,QWORD PTR [rsp+0x38]
   140009a23:	mov    DWORD PTR [rdi+0x8],ebx
   140009a26:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a2b:	add    rsp,0x20
   140009a2f:	pop    rdi
   140009a30:	ret    
   140009a31:	int3   
   140009a32:	int3   
   140009a33:	int3   
   140009a34:	int3   
   140009a35:	int3   
   140009a36:	int3   
   140009a37:	int3   
   140009a38:	int3   
   140009a39:	int3   
   140009a3a:	int3   
   140009a3b:	int3   
   140009a3c:	int3   
   140009a3d:	int3   
   140009a3e:	int3   
   140009a3f:	int3   
   140009a40:	rex push rdi
   140009a42:	sub    rsp,0x20
   140009a46:	mov    eax,edx
   140009a48:	mov    rdi,rcx
   140009a4b:	mov    edx,DWORD PTR [rcx+0xc]
   140009a4e:	bt     edx,0x1e
   140009a52:	jb     0x140009b4b
   140009a58:	mov    ecx,DWORD PTR [rcx+0x8]
   140009a5b:	and    edx,0x3fffffff
   140009a61:	mov    QWORD PTR [rsp+0x30],rbx
   140009a66:	mov    r9d,0x18
   140009a6c:	mov    QWORD PTR [rsp+0x38],rsi
   140009a71:	lea    esi,[rcx+rax*1]
   140009a74:	mov    r8d,esi
   140009a77:	call   0x14001aa30
   140009a7c:	mov    ebx,eax
   140009a7e:	cmp    eax,esi
   140009a80:	jge    0x140009a9e
   140009a82:	test   eax,eax
   140009a84:	jne    0x140009a90
   140009a86:	cmp    esi,0xffffffff
   140009a89:	jg     0x140009a90
   140009a8b:	or     ebx,0xffffffff
   140009a8e:	jmp    0x140009a9e
   140009a90:	lea    eax,[rbx+rsi*1]
   140009a93:	cdq    
   140009a94:	sub    eax,edx
   140009a96:	sar    eax,1
   140009a98:	mov    ebx,eax
   140009a9a:	cmp    eax,esi
   140009a9c:	jl     0x140009a90
   140009a9e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009aa5:	mov    rax,QWORD PTR [rip+0x288e4]        # 0x140032390
   140009aac:	mov    rcx,QWORD PTR [rax]
   140009aaf:	movsxd rax,ebx
   140009ab2:	jne    0x140009b06
   140009ab4:	mov    rdx,QWORD PTR [rdi]
   140009ab7:	test   rdx,rdx
   140009aba:	je     0x140009ae1
   140009abc:	mov    r9,QWORD PTR [rcx]
   140009abf:	lea    r8,[rax+rax*2]
   140009ac3:	shl    r8,0x3
   140009ac7:	call   QWORD PTR [r9+0x18]
   140009acb:	mov    rsi,QWORD PTR [rsp+0x38]
   140009ad0:	mov    DWORD PTR [rdi+0x8],ebx
   140009ad3:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ad8:	mov    QWORD PTR [rdi],rax
   140009adb:	add    rsp,0x20
   140009adf:	pop    rdi
   140009ae0:	ret    
   140009ae1:	mov    r8,QWORD PTR [rcx]
   140009ae4:	lea    rdx,[rax+rax*2]
   140009ae8:	shl    rdx,0x3
   140009aec:	call   QWORD PTR [r8+0x8]
   140009af0:	mov    rsi,QWORD PTR [rsp+0x38]
   140009af5:	mov    DWORD PTR [rdi+0x8],ebx
   140009af8:	mov    rbx,QWORD PTR [rsp+0x30]
   140009afd:	mov    QWORD PTR [rdi],rax
   140009b00:	add    rsp,0x20
   140009b04:	pop    rdi
   140009b05:	ret    
   140009b06:	mov    r8,QWORD PTR [rcx]
   140009b09:	lea    rdx,[rax+rax*2]
   140009b0d:	mov    rsi,QWORD PTR [rdi]
   140009b10:	shl    rdx,0x3
   140009b14:	call   QWORD PTR [r8+0x8]
   140009b18:	mov    QWORD PTR [rdi],rax
   140009b1b:	test   rsi,rsi
   140009b1e:	je     0x140009b37
   140009b20:	movsxd rcx,DWORD PTR [rdi+0x8]
   140009b24:	mov    rdx,rsi
   140009b27:	lea    r8,[rcx+rcx*2]
   140009b2b:	mov    rcx,rax
   140009b2e:	shl    r8,0x3
   140009b32:	call   0x140026f70
   140009b37:	and    DWORD PTR [rdi+0xc],0x3fffffff
   140009b3e:	mov    rsi,QWORD PTR [rsp+0x38]
   140009b43:	mov    DWORD PTR [rdi+0x8],ebx
   140009b46:	mov    rbx,QWORD PTR [rsp+0x30]
   140009b4b:	add    rsp,0x20
   140009b4f:	pop    rdi
   140009b50:	ret    
   140009b51:	int3   
   140009b52:	int3   
   140009b53:	int3   
   140009b54:	int3   
   140009b55:	int3   
   140009b56:	int3   
   140009b57:	int3   
   140009b58:	int3   
   140009b59:	int3   
   140009b5a:	int3   
   140009b5b:	int3   
   140009b5c:	int3   
   140009b5d:	int3   
   140009b5e:	int3   
   140009b5f:	int3   
   140009b60:	rex push rbx
   140009b62:	sub    rsp,0x20
   140009b66:	mov    rax,QWORD PTR [rcx]
   140009b69:	mov    rbx,rcx
   140009b6c:	call   QWORD PTR [rax+0x20]
   140009b6f:	cmp    BYTE PTR [rbx+0x139],0x0
   140009b76:	mov    QWORD PTR [rbx+0x130],rax
   140009b7d:	jne    0x140009b85
   140009b7f:	call   QWORD PTR [rip+0x287a3]        # 0x140032328
   140009b85:	cmp    BYTE PTR [rbx+0xf8],0x0
   140009b8c:	mov    QWORD PTR [rsp+0x30],rdi
   140009b91:	jne    0x140009bc5
   140009b93:	cmp    BYTE PTR [rbx+0xfc],0x0
   140009b9a:	jne    0x140009bc5
   140009b9c:	call   QWORD PTR [rip+0x28716]        # 0x1400322b8
   140009ba2:	mov    rdi,rax
   140009ba5:	mov    rax,QWORD PTR [rax]
   140009ba8:	test   rax,rax
   140009bab:	je     0x140009bf4
   140009bad:	mov    ecx,0x20
   140009bb2:	call   rax
   140009bb4:	lea    rdx,[rip+0x2a8d5]        # 0x140034490
   140009bbb:	lea    rcx,[rip+0x2a8d6]        # 0x140034498
   140009bc2:	call   QWORD PTR [rdi+0x30]
   140009bc5:	mov    rdx,QWORD PTR [rbx+0x130]
   140009bcc:	lea    r8,[rip+0x2a8ad]        # 0x140034480
   140009bd3:	mov    rcx,rbx
   140009bd6:	call   0x140008720
   140009bdb:	test   rax,rax
   140009bde:	je     0x140009bf4
   140009be0:	mov    BYTE PTR [rbx+0x138],0x1
   140009be7:	mov    al,0x1
   140009be9:	mov    rdi,QWORD PTR [rsp+0x30]
   140009bee:	add    rsp,0x20
   140009bf2:	pop    rbx
   140009bf3:	ret    
   140009bf4:	xor    al,al
   140009bf6:	mov    rdi,QWORD PTR [rsp+0x30]
   140009bfb:	add    rsp,0x20
   140009bff:	pop    rbx
   140009c00:	ret    
   140009c01:	int3   
   140009c02:	int3   
   140009c03:	int3   
   140009c04:	int3   
   140009c05:	int3   
   140009c06:	int3   
   140009c07:	int3   
   140009c08:	int3   
   140009c09:	int3   
   140009c0a:	int3   
   140009c0b:	int3   
   140009c0c:	int3   
   140009c0d:	int3   
   140009c0e:	int3   
   140009c0f:	int3   
   140009c10:	mov    QWORD PTR [rsp+0x10],rsi
   140009c15:	mov    QWORD PTR [rsp+0x18],rdi
   140009c1a:	push   r14
   140009c1c:	sub    rsp,0x20
   140009c20:	movsxd rdi,edx
   140009c23:	mov    esi,r8d
   140009c26:	mov    r14,rcx
   140009c29:	test   r8d,r8d
   140009c2c:	je     0x140009c7d
   140009c2e:	mov    eax,DWORD PTR [rcx+0x10]
   140009c31:	mov    QWORD PTR [rsp+0x30],rbx
   140009c36:	mov    ebx,DWORD PTR [rcx]
   140009c38:	add    ebx,r8d
   140009c3b:	cmp    ebx,eax
   140009c3d:	jle    0x140009c4c
   140009c3f:	mov    edx,ebx
   140009c41:	add    rcx,0x8
   140009c45:	sub    edx,eax
   140009c47:	call   0x140009600
   140009c4c:	mov    DWORD PTR [r14],ebx
   140009c4f:	sub    ebx,edi
   140009c51:	sub    ebx,esi
   140009c53:	test   ebx,ebx
   140009c55:	jle    0x140009c78
   140009c57:	test   esi,esi
   140009c59:	jle    0x140009c78
   140009c5b:	mov    r9,QWORD PTR [r14+0x8]
   140009c5f:	lea    eax,[rdi+rsi*1]
   140009c62:	movsxd rcx,eax
   140009c65:	movsxd r8,ebx
   140009c68:	add    r8,r8
   140009c6b:	lea    rdx,[r9+rdi*2]
   140009c6f:	lea    rcx,[r9+rcx*2]
   140009c73:	call   0x140026f70
   140009c78:	mov    rbx,QWORD PTR [rsp+0x30]
   140009c7d:	mov    rsi,QWORD PTR [rsp+0x38]
   140009c82:	mov    eax,edi
   140009c84:	mov    rdi,QWORD PTR [rsp+0x40]
   140009c89:	add    rsp,0x20
   140009c8d:	pop    r14
   140009c8f:	ret    
   140009c90:	mov    QWORD PTR [rsp+0x10],rsi
   140009c95:	mov    QWORD PTR [rsp+0x18],rdi
   140009c9a:	push   r14
   140009c9c:	sub    rsp,0x20
   140009ca0:	mov    edi,r8d
   140009ca3:	mov    rsi,rcx
   140009ca6:	movsxd r14,edx
   140009ca9:	test   r8d,r8d
   140009cac:	je     0x140009d3a
   140009cb2:	mov    eax,DWORD PTR [rcx+0x10]
   140009cb5:	mov    QWORD PTR [rsp+0x30],rbx
   140009cba:	mov    ebx,DWORD PTR [rcx]
   140009cbc:	add    ebx,edi
   140009cbe:	cmp    ebx,eax
   140009cc0:	jle    0x140009ccf
   140009cc2:	mov    edx,ebx
   140009cc4:	add    rcx,0x8
   140009cc8:	sub    edx,eax
   140009cca:	call   0x140009930
   140009ccf:	mov    DWORD PTR [rsi],ebx
   140009cd1:	sub    ebx,r14d
   140009cd4:	sub    ebx,edi
   140009cd6:	test   ebx,ebx
   140009cd8:	jle    0x140009d01
   140009cda:	test   edi,edi
   140009cdc:	jle    0x140009d35
   140009cde:	movsxd rax,ebx
   140009ce1:	imul   r8,rax,0x78
   140009ce5:	imul   rdx,r14,0x78
   140009ce9:	lea    eax,[r14+rdi*1]
   140009ced:	movsxd rcx,eax
   140009cf0:	imul   rcx,rcx,0x78
   140009cf4:	add    rdx,QWORD PTR [rsi+0x8]
   140009cf8:	add    rcx,QWORD PTR [rsi+0x8]
   140009cfc:	call   0x140026f70
   140009d01:	test   edi,edi
   140009d03:	jle    0x140009d35
   140009d05:	imul   rbx,r14,0x78
   140009d09:	nop    DWORD PTR [rax+0x0]
   140009d10:	mov    rcx,QWORD PTR [rsi+0x8]
   140009d14:	add    rcx,rbx
   140009d17:	je     0x140009d2b
   140009d19:	xor    r9d,r9d
   140009d1c:	add    rcx,0x28
   140009d20:	xor    edx,edx
   140009d22:	lea    r8d,[r9+0x10]
   140009d26:	call   0x14001c880
   140009d2b:	add    rbx,0x78
   140009d2f:	sub    rdi,0x1
   140009d33:	jne    0x140009d10
   140009d35:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d3a:	mov    rsi,QWORD PTR [rsp+0x38]
   140009d3f:	mov    eax,r14d
   140009d42:	mov    rdi,QWORD PTR [rsp+0x40]
   140009d47:	add    rsp,0x20
   140009d4b:	pop    r14
   140009d4d:	ret    
   140009d4e:	int3   
   140009d4f:	int3   
   140009d50:	sub    rsp,0x28
   140009d54:	mov    rcx,QWORD PTR [rip+0x3d505]        # 0x140047260
   140009d5b:	test   rcx,rcx
   140009d5e:	je     0x140009d71
   140009d60:	mov    rax,QWORD PTR [rcx]
   140009d63:	call   QWORD PTR [rax+0x70]
   140009d66:	test   al,al
   140009d68:	je     0x140009d71
   140009d6a:	mov    al,0x1
   140009d6c:	add    rsp,0x28
   140009d70:	ret    
   140009d71:	xor    al,al
   140009d73:	add    rsp,0x28
   140009d77:	ret    
   140009d78:	int3   
   140009d79:	int3   
   140009d7a:	int3   
   140009d7b:	int3   
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	mov    QWORD PTR [rsp+0x20],rbx
   140009d85:	mov    QWORD PTR [rsp+0x10],rdx
   140009d8a:	push   rbp
   140009d8b:	push   rsi
   140009d8c:	push   rdi
   140009d8d:	push   r12
   140009d8f:	push   r13
   140009d91:	push   r14
   140009d93:	push   r15
   140009d95:	lea    rbp,[rsp-0x430]
   140009d9d:	sub    rsp,0x530
   140009da4:	test   r8,r8
   140009da7:	lea    r13,[rbp+0x470]
   140009dae:	mov    rdi,rdx
   140009db1:	mov    r15,rcx
   140009db4:	cmovne r13,r8
   140009db8:	lea    rdx,[rbp+0x120]
   140009dbf:	xor    esi,esi
   140009dc1:	mov    r8d,0x104
   140009dc7:	mov    rcx,rdi
   140009dca:	mov    DWORD PTR [r13+0x0],esi
   140009dce:	call   QWORD PTR [rip+0x2874c]        # 0x140032520
   140009dd4:	mov    rcx,rdi
   140009dd7:	call   0x14000b950
   140009ddc:	mov    rbx,rax
   140009ddf:	cmp    rax,rdi
   140009de2:	je     0x140009e01
   140009de4:	mov    r8d,0x104
   140009dea:	lea    rcx,[rbp+0x120]
   140009df1:	mov    rdx,rax
   140009df4:	call   QWORD PTR [rip+0x2875e]        # 0x140032558
   140009dfa:	mov    QWORD PTR [rbp+0x478],rbx
   140009e01:	movsxd r12,DWORD PTR [r15+0x8]
   140009e05:	mov    r14d,esi
   140009e08:	mov    rbx,rsi
   140009e0b:	test   r12,r12
   140009e0e:	jle    0x140009e4c
   140009e10:	mov    rdi,rsi
   140009e13:	nop    DWORD PTR [rax+0x0]
   140009e17:	nop    WORD PTR [rax+rax*1+0x0]
   140009e20:	mov    rdx,QWORD PTR [r15+0x10]
   140009e24:	lea    rcx,[rbp+0x120]
   140009e2b:	mov    rdx,QWORD PTR [rdi+rdx*1]
   140009e2f:	call   QWORD PTR [rip+0x2872b]        # 0x140032560
   140009e35:	test   eax,eax
   140009e37:	je     0x140009f55
   140009e3d:	inc    r14d
   140009e40:	inc    rbx
   140009e43:	add    rdi,0x18
   140009e47:	cmp    rbx,r12
   140009e4a:	jl     0x140009e20
   140009e4c:	call   QWORD PTR [rip+0x28516]        # 0x140032368
   140009e52:	lea    rcx,[r15+0x118]
   140009e59:	mov    QWORD PTR [rbp+0x480],rsi
   140009e60:	mov    rbx,rax
   140009e63:	call   0x14001b050
   140009e68:	mov    r8d,0x200
   140009e6e:	lea    rdx,[rip+0x2892b]        # 0x1400327a0
   140009e75:	lea    rcx,[rsp+0x20]
   140009e7a:	mov    rdi,rax
   140009e7d:	call   QWORD PTR [rip+0x286d5]        # 0x140032558
   140009e83:	or     r14,0xffffffffffffffff
   140009e87:	lea    rdx,[rbp+0x120]
   140009e8e:	mov    r9d,r14d
   140009e91:	lea    rcx,[rsp+0x20]
   140009e96:	mov    r8d,0x200
   140009e9c:	call   QWORD PTR [rip+0x286ae]        # 0x140032550
   140009ea2:	mov    r9d,0x200
   140009ea8:	lea    r8,[rbp+0x230]
   140009eaf:	lea    rdx,[rsp+0x20]
   140009eb4:	mov    rcx,rdi
   140009eb7:	call   QWORD PTR [rip+0x28643]        # 0x140032500
   140009ebd:	xor    r9d,r9d
   140009ec0:	lea    r8,[rbp+0x230]
   140009ec7:	mov    edx,0x200
   140009ecc:	lea    rcx,[rsp+0x20]
   140009ed1:	call   QWORD PTR [rip+0x28609]        # 0x1400324e0
   140009ed7:	mov    r8d,0x200
   140009edd:	lea    rdx,[rsp+0x20]
   140009ee2:	lea    rcx,[rsp+0x20]
   140009ee7:	call   QWORD PTR [rip+0x28633]        # 0x140032520
   140009eed:	mov    r9d,r14d
   140009ef0:	lea    rdx,[rip+0x288a9]        # 0x1400327a0
   140009ef7:	mov    r8d,0x200
   140009efd:	lea    rcx,[rsp+0x20]
   140009f02:	call   QWORD PTR [rip+0x28648]        # 0x140032550
   140009f08:	mov    r8d,0x200
   140009f0e:	lea    rdx,[rip+0x2a937]        # 0x14003484c
   140009f15:	lea    rcx,[rsp+0x20]
   140009f1a:	call   QWORD PTR [rip+0x283f8]        # 0x140032318
   140009f20:	lea    rcx,[rsp+0x20]
   140009f25:	call   QWORD PTR [rip+0x2867d]        # 0x1400325a8
   140009f2b:	test   al,al
   140009f2d:	je     0x140009f72
   140009f2f:	or     r8d,0xffffffff
   140009f33:	lea    rdx,[rbp+0x480]
   140009f3a:	lea    rcx,[rsp+0x20]
   140009f3f:	call   QWORD PTR [rip+0x283fb]        # 0x140032340
   140009f45:	mov    rsi,QWORD PTR [rbp+0x478]
   140009f4c:	mov    DWORD PTR [r13+0x0],eax
   140009f50:	jmp    0x14000a072
   140009f55:	movsxd rax,r14d
   140009f58:	lea    rcx,[rax+rax*2]
   140009f5c:	mov    rax,QWORD PTR [r15+0x10]
   140009f60:	inc    DWORD PTR [rax+rcx*8+0x10]
   140009f64:	mov    rax,QWORD PTR [r15+0x10]
   140009f68:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
   140009f6d:	jmp    0x14000a149
   140009f72:	movsxd r12,DWORD PTR [r15+0x50]
   140009f76:	test   r12,r12
   140009f79:	jle    0x14000a058
   140009f7f:	nop
   140009f80:	mov    rax,QWORD PTR [r15+0x58]
   140009f84:	lea    rdx,[rip+0x28815]        # 0x1400327a0
   140009f8b:	mov    r8d,0x200
   140009f91:	lea    rcx,[rsp+0x20]
   140009f96:	mov    rdi,QWORD PTR [rax+rsi*8]
   140009f9a:	call   QWORD PTR [rip+0x285b8]        # 0x140032558
   140009fa0:	mov    r9d,r14d
   140009fa3:	lea    rdx,[rbp+0x120]
   140009faa:	mov    r8d,0x200
   140009fb0:	lea    rcx,[rsp+0x20]
   140009fb5:	call   QWORD PTR [rip+0x28595]        # 0x140032550
   140009fbb:	mov    r9d,0x200
   140009fc1:	lea    r8,[rbp+0x230]
   140009fc8:	lea    rdx,[rsp+0x20]
   140009fcd:	mov    rcx,rdi
   140009fd0:	call   QWORD PTR [rip+0x2852a]        # 0x140032500
   140009fd6:	xor    r9d,r9d
   140009fd9:	lea    r8,[rbp+0x230]
   140009fe0:	mov    edx,0x200
   140009fe5:	lea    rcx,[rsp+0x20]
   140009fea:	call   QWORD PTR [rip+0x284f0]        # 0x1400324e0
   140009ff0:	mov    r8d,0x200
   140009ff6:	lea    rdx,[rsp+0x20]
   140009ffb:	lea    rcx,[rsp+0x20]
   14000a000:	call   QWORD PTR [rip+0x2851a]        # 0x140032520
   14000a006:	mov    r9d,r14d
   14000a009:	lea    rdx,[rip+0x28790]        # 0x1400327a0
   14000a010:	mov    r8d,0x200
   14000a016:	lea    rcx,[rsp+0x20]
   14000a01b:	call   QWORD PTR [rip+0x2852f]        # 0x140032550
   14000a021:	mov    r8d,0x200
   14000a027:	lea    rdx,[rip+0x2a81e]        # 0x14003484c
   14000a02e:	lea    rcx,[rsp+0x20]
   14000a033:	call   QWORD PTR [rip+0x282df]        # 0x140032318
   14000a039:	lea    rcx,[rsp+0x20]
   14000a03e:	call   QWORD PTR [rip+0x28564]        # 0x1400325a8
   14000a044:	test   al,al
   14000a046:	jne    0x140009f2f
   14000a04c:	inc    rsi
   14000a04f:	cmp    rsi,r12
   14000a052:	jl     0x140009f80
   14000a058:	mov    rsi,QWORD PTR [rbp+0x478]
   14000a05f:	mov    rdx,r13
   14000a062:	mov    rcx,rsi
   14000a065:	call   QWORD PTR [rip+0x282dd]        # 0x140032348
   14000a06b:	mov    QWORD PTR [rbp+0x480],rax
   14000a072:	movsxd rdi,DWORD PTR [r15+0x8]
   14000a076:	cmp    edi,DWORD PTR [r15+0x18]
   14000a07a:	jne    0x14000a08a
   14000a07c:	lea    rcx,[r15+0x10]
   14000a080:	mov    edx,0x1
   14000a085:	call   0x140009a40
   14000a08a:	inc    DWORD PTR [r15+0x8]
   14000a08e:	lea    r12,[rdi+rdi*2]
   14000a092:	mov    rax,QWORD PTR [r15+0x10]
   14000a096:	mov    DWORD PTR [rax+r12*8+0x10],0x1
   14000a09f:	mov    rax,QWORD PTR [rbp+0x480]
   14000a0a6:	mov    rcx,QWORD PTR [r15+0x10]
   14000a0aa:	mov    QWORD PTR [rcx+r12*8+0x8],rax
   14000a0af:	lea    rax,[rbp+0x120]
   14000a0b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a0c0:	cmp    BYTE PTR [rax+r14*1+0x1],0x0
   14000a0c6:	lea    r14,[r14+0x1]
   14000a0ca:	jne    0x14000a0c0
   14000a0cc:	mov    rax,QWORD PTR [rip+0x282bd]        # 0x140032390
   14000a0d3:	lea    rdx,[r14+0x1]
   14000a0d7:	lea    rdi,[rbp+0x120]
   14000a0de:	mov    rcx,QWORD PTR [rax]
   14000a0e1:	mov    rax,QWORD PTR [rcx]
   14000a0e4:	call   QWORD PTR [rax+0x8]
   14000a0e7:	mov    r8,rax
   14000a0ea:	lea    rax,[rbp+0x120]
   14000a0f1:	mov    rdx,r8
   14000a0f4:	sub    rdx,rax
   14000a0f7:	nop    WORD PTR [rax+rax*1+0x0]
   14000a100:	movzx  ecx,BYTE PTR [rdi]
   14000a103:	mov    BYTE PTR [rdx+rdi*1],cl
   14000a106:	lea    rdi,[rdi+0x1]
   14000a10a:	test   cl,cl
   14000a10c:	jne    0x14000a100
   14000a10e:	mov    rax,QWORD PTR [r15+0x10]
   14000a112:	mov    QWORD PTR [rax+r12*8],r8
   14000a116:	call   QWORD PTR [rip+0x2824c]        # 0x140032368
   14000a11c:	sub    rax,rbx
   14000a11f:	xor    ecx,ecx
   14000a121:	mov    rdx,rax
   14000a124:	call   QWORD PTR [rip+0x28236]        # 0x140032360
   14000a12a:	mov    rdx,rsi
   14000a12d:	lea    rcx,[rip+0x2a724]        # 0x140034858
   14000a134:	movaps xmm2,xmm0
   14000a137:	movq   r8,xmm2
   14000a13c:	call   QWORD PTR [rip+0x2817e]        # 0x1400322c0
   14000a142:	mov    rax,QWORD PTR [rbp+0x480]
   14000a149:	mov    rbx,QWORD PTR [rsp+0x588]
   14000a151:	add    rsp,0x530
   14000a158:	pop    r15
   14000a15a:	pop    r14
   14000a15c:	pop    r13
   14000a15e:	pop    r12
   14000a160:	pop    rdi
   14000a161:	pop    rsi
   14000a162:	pop    rbp
   14000a163:	ret    
   14000a164:	int3   
   14000a165:	int3   
   14000a166:	int3   
   14000a167:	int3   
   14000a168:	int3   
   14000a169:	int3   
   14000a16a:	int3   
   14000a16b:	int3   
   14000a16c:	int3   
   14000a16d:	int3   
   14000a16e:	int3   
   14000a16f:	int3   
   14000a170:	mov    DWORD PTR [rsp+0x18],r8d
   14000a175:	mov    QWORD PTR [rsp+0x8],rcx
   14000a17a:	push   rbp
   14000a17b:	push   rbx
   14000a17c:	push   rsi
   14000a17d:	push   rdi
   14000a17e:	push   r12
   14000a180:	push   r13
   14000a182:	push   r14
   14000a184:	push   r15
   14000a186:	lea    rbp,[rsp-0x218]
   14000a18e:	sub    rsp,0x318
   14000a195:	mov    r15,rdx
   14000a198:	mov    DWORD PTR [rbp-0x70],0x0
   14000a19f:	mov    r12,rcx
   14000a1a2:	mov    QWORD PTR [rbp-0x68],0x0
   14000a1aa:	mov    QWORD PTR [rbp-0x60],0x20
   14000a1b2:	call   QWORD PTR [rip+0x28308]        # 0x1400324c0
   14000a1b8:	mov    rax,QWORD PTR [rip+0x281d1]        # 0x140032390
   14000a1bf:	mov    rcx,QWORD PTR [rax]
   14000a1c2:	movsxd rax,DWORD PTR [rbp-0x60]
   14000a1c6:	imul   rdx,rax,0x78
   14000a1ca:	mov    r9,QWORD PTR [rcx]
   14000a1cd:	call   QWORD PTR [r9+0x8]
   14000a1d1:	xor    edx,edx
   14000a1d3:	lea    rcx,[rbp-0x58]
   14000a1d7:	mov    r9b,0x1
   14000a1da:	mov    QWORD PTR [rbp-0x68],rax
   14000a1de:	lea    r8d,[rdx+0x20]
   14000a1e2:	call   0x14001c880
   14000a1e7:	cmp    DWORD PTR [r15],0x0
   14000a1eb:	mov    DWORD PTR [rbp-0x78],0x0
   14000a1f2:	jle    0x14000a4f2
   14000a1f8:	xor    edi,edi
   14000a1fa:	mov    ebx,0xffff
   14000a1ff:	nop
   14000a200:	mov    rsi,QWORD PTR [r15+0x8]
   14000a204:	xor    edx,edx
   14000a206:	mov    rcx,QWORD PTR [rdi+rsi*1+0x18]
   14000a20b:	call   0x140008ff0
   14000a210:	test   rax,rax
   14000a213:	je     0x14000a21f
   14000a215:	mov    QWORD PTR [rdi+rsi*1+0x20],rax
   14000a21a:	jmp    0x14000a4d6
   14000a21f:	mov    r8,QWORD PTR [rdi+rsi*1+0x18]
   14000a224:	lea    rdx,[rbp+0x0]
   14000a228:	lea    rcx,[rbp-0x58]
   14000a22c:	call   0x14001ce30
   14000a231:	cmp    WORD PTR [rax],bx
   14000a234:	je     0x14000a27f
   14000a236:	mov    r8,QWORD PTR [rdi+rsi*1+0x18]
   14000a23b:	lea    rdx,[rbp-0x80]
   14000a23f:	lea    rcx,[rbp-0x58]
   14000a243:	call   0x14001c980
   14000a248:	movzx  ebx,WORD PTR [rbp-0x80]
   14000a24c:	mov    edx,DWORD PTR [rbp-0x70]
   14000a24f:	cmp    edx,ebx
   14000a251:	jg     0x14000a268
   14000a253:	lea    r8d,[rbx+0x1]
   14000a257:	cmp    edx,r8d
   14000a25a:	jge    0x14000a268
   14000a25c:	sub    r8d,edx
   14000a25f:	lea    rcx,[rbp-0x70]
   14000a263:	call   0x140009c90
   14000a268:	mov    rax,QWORD PTR [rbp-0x68]
   14000a26c:	imul   rcx,rbx,0x78
   14000a270:	mov    rcx,QWORD PTR [rcx+rax*1+0x18]
   14000a275:	mov    QWORD PTR [rdi+rsi*1+0x20],rcx
   14000a27a:	jmp    0x14000a4d1
   14000a27f:	xor    r13d,r13d
   14000a282:	xor    cl,cl
   14000a284:	mov    DWORD PTR [rsp+0x40],r13d
   14000a289:	mov    r12,QWORD PTR [rdi+rsi*1+0x20]
   14000a28e:	mov    QWORD PTR [rbp+0x8],r13
   14000a292:	mov    BYTE PTR [rbp+0x268],cl
   14000a298:	test   r12,r12
   14000a29b:	jne    0x14000a34b
   14000a2a1:	mov    rax,QWORD PTR [rdi+rsi*1+0x30]
   14000a2a6:	test   rax,rax
   14000a2a9:	je     0x14000a2b4
   14000a2ab:	mov    rbx,QWORD PTR [rbp+0x260]
   14000a2b2:	jmp    0x14000a321
   14000a2b4:	mov    rcx,QWORD PTR [rdi+rsi*1+0x28]
   14000a2b9:	test   rcx,rcx
   14000a2bc:	je     0x14000a2d7
   14000a2be:	lea    rdx,[rsp+0x40]
   14000a2c3:	call   QWORD PTR [rip+0x28067]        # 0x140032330
   14000a2c9:	mov    r13,QWORD PTR [rdi+rsi*1+0x28]
   14000a2ce:	mov    rbx,QWORD PTR [rbp+0x260]
   14000a2d5:	jmp    0x14000a31a
   14000a2d7:	mov    rbx,QWORD PTR [rbp+0x260]
   14000a2de:	lea    r8,[rsp+0x40]
   14000a2e3:	mov    rdx,QWORD PTR [rdi+rsi*1+0x10]
   14000a2e8:	mov    rcx,rbx
   14000a2eb:	call   0x140009d80
   14000a2f0:	mov    r13,rax
   14000a2f3:	mov    BYTE PTR [rbp+0x268],0x1
   14000a2fa:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a2ff:	mov    QWORD PTR [rbp+0x8],rax
   14000a303:	test   r13,r13
   14000a306:	je     0x14000a7ac
   14000a30c:	lea    rdx,[rsp+0x40]
   14000a311:	mov    rcx,r13
   14000a314:	call   QWORD PTR [rip+0x28016]        # 0x140032330
   14000a31a:	movzx  ecx,BYTE PTR [rbp+0x268]
   14000a321:	test   rax,rax
   14000a324:	je     0x14000a667
   14000a32a:	mov    rcx,QWORD PTR [rdi+rsi*1+0x18]
   14000a32f:	lea    rdx,[rbp+0x4]
   14000a333:	call   rax
   14000a335:	cmp    DWORD PTR [rbp+0x4],0x0
   14000a339:	mov    r12,rax
   14000a33c:	jne    0x14000a53e
   14000a342:	test   rax,rax
   14000a345:	je     0x14000a53e
   14000a34b:	mov    r8,QWORD PTR [rdi+rsi*1+0x18]
   14000a350:	lea    rdx,[rbp+0x278]
   14000a357:	lea    rcx,[rbp-0x58]
   14000a35b:	mov    QWORD PTR [rdi+rsi*1+0x20],r12
   14000a360:	call   0x14001c980
   14000a365:	movzx  ecx,WORD PTR [rbp+0x278]
   14000a36c:	mov    edx,DWORD PTR [rbp-0x70]
   14000a36f:	mov    r8d,ecx
   14000a372:	cmp    edx,ecx
   14000a374:	jg     0x14000a391
   14000a376:	inc    r8d
   14000a379:	cmp    edx,r8d
   14000a37c:	jge    0x14000a391
   14000a37e:	sub    r8d,edx
   14000a381:	lea    rcx,[rbp-0x70]
   14000a385:	call   0x140009c90
   14000a38a:	movzx  ecx,WORD PTR [rbp+0x278]
   14000a391:	movzx  eax,cx
   14000a394:	mov    rcx,r12
   14000a397:	imul   rbx,rax,0x78
   14000a39b:	mov    rax,QWORD PTR [r12]
   14000a39f:	add    rbx,QWORD PTR [rbp-0x68]
   14000a3a3:	call   QWORD PTR [rax+0x38]
   14000a3a6:	mov    QWORD PTR [rbx+0x18],r12
   14000a3aa:	mov    rcx,r12
   14000a3ad:	mov    DWORD PTR [rbx],eax
   14000a3af:	mov    rax,QWORD PTR [rbp+0x8]
   14000a3b3:	mov    QWORD PTR [rbx+0x8],rax
   14000a3b7:	mov    QWORD PTR [rbx+0x20],r13
   14000a3bb:	mov    rax,QWORD PTR [rdi+rsi*1+0x18]
   14000a3c0:	mov    QWORD PTR [rbx+0x10],rax
   14000a3c4:	mov    rax,QWORD PTR [r12]
   14000a3c8:	call   QWORD PTR [rax+0x30]
   14000a3cb:	test   rax,rax
   14000a3ce:	je     0x14000a4d1
   14000a3d4:	cmp    QWORD PTR [rax+0x8],0x0
   14000a3d9:	lea    rbx,[rax+0x8]
   14000a3dd:	je     0x14000a4d1
   14000a3e3:	mov    rax,QWORD PTR [rbx]
   14000a3e6:	cmp    BYTE PTR [rax],0x0
   14000a3e9:	je     0x14000a4d1
   14000a3ef:	mov    r8,QWORD PTR [r15+0x8]
   14000a3f3:	lea    rdx,[rbp-0x7c]
   14000a3f7:	lea    rcx,[rbp-0x58]
   14000a3fb:	mov    r8,QWORD PTR [r8+rdi*1+0x18]
   14000a400:	call   0x14001c980
   14000a405:	movzx  esi,WORD PTR [rbp-0x7c]
   14000a409:	mov    edx,DWORD PTR [rbp-0x70]
   14000a40c:	cmp    edx,esi
   14000a40e:	jg     0x14000a425
   14000a410:	lea    r8d,[rsi+0x1]
   14000a414:	cmp    edx,r8d
   14000a417:	jge    0x14000a425
   14000a419:	sub    r8d,edx
   14000a41c:	lea    rcx,[rbp-0x70]
   14000a420:	call   0x140009c90
   14000a425:	mov    rax,QWORD PTR [rbp-0x68]
   14000a429:	lea    rdx,[rbp+0x2]
   14000a42d:	mov    r8,QWORD PTR [rbx]
   14000a430:	add    rax,0x28
   14000a434:	imul   rcx,rsi,0x78
   14000a438:	add    rcx,rax
   14000a43b:	call   0x14001c980
   14000a440:	mov    rcx,QWORD PTR [r15+0x8]
   14000a444:	xor    eax,eax
   14000a446:	movsxd rsi,DWORD PTR [r15]
   14000a449:	mov    QWORD PTR [rsp+0x68],rax
   14000a44e:	mov    QWORD PTR [rsp+0x70],rax
   14000a453:	mov    QWORD PTR [rsp+0x78],rax
   14000a458:	mov    rax,QWORD PTR [rbx-0x8]
   14000a45c:	mov    QWORD PTR [rsp+0x58],rax
   14000a461:	mov    rax,QWORD PTR [rbx]
   14000a464:	mov    QWORD PTR [rsp+0x60],rax
   14000a469:	mov    rax,QWORD PTR [rcx+rdi*1+0x18]
   14000a46e:	mov    QWORD PTR [rsp+0x50],rax
   14000a473:	mov    rax,QWORD PTR [rcx+rdi*1+0x10]
   14000a478:	mov    QWORD PTR [rsp+0x48],rax
   14000a47d:	cmp    esi,DWORD PTR [r15+0x10]
   14000a481:	jne    0x14000a491
   14000a483:	mov    edx,0x1
   14000a488:	lea    rcx,[r15+0x8]
   14000a48c:	call   0x140009700
   14000a491:	inc    DWORD PTR [r15]
   14000a494:	imul   rcx,rsi,0x38
   14000a498:	add    rcx,QWORD PTR [r15+0x8]
   14000a49c:	je     0x14000a4c3
   14000a49e:	movups xmm0,XMMWORD PTR [rsp+0x48]
   14000a4a3:	movups xmm1,XMMWORD PTR [rsp+0x58]
   14000a4a8:	movups XMMWORD PTR [rcx],xmm0
   14000a4ab:	movups xmm0,XMMWORD PTR [rsp+0x68]
   14000a4b0:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000a4b4:	movsd  xmm1,QWORD PTR [rsp+0x78]
   14000a4ba:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000a4be:	movsd  QWORD PTR [rcx+0x30],xmm1
   14000a4c3:	add    rbx,0x10
   14000a4c7:	cmp    QWORD PTR [rbx],0x0
   14000a4cb:	jne    0x14000a3e3
   14000a4d1:	mov    ebx,0xffff
   14000a4d6:	mov    eax,DWORD PTR [rbp-0x78]
   14000a4d9:	add    rdi,0x38
   14000a4dd:	inc    eax
   14000a4df:	mov    DWORD PTR [rbp-0x78],eax
   14000a4e2:	cmp    eax,DWORD PTR [r15]
   14000a4e5:	jl     0x14000a200
   14000a4eb:	mov    r12,QWORD PTR [rbp+0x260]
   14000a4f2:	cmp    WORD PTR [rbp-0x3e],0x0
   14000a4f7:	jne    0x14000a995
   14000a4fd:	lea    rcx,[rbp-0x58]
   14000a501:	call   0x14001c950
   14000a506:	mov    ebx,DWORD PTR [rbp-0x70]
   14000a509:	sub    ebx,0x1
   14000a50c:	js     0x14000ad89
   14000a512:	movsxd rax,ebx
   14000a515:	imul   rdi,rax,0x78
   14000a519:	nop    DWORD PTR [rax+0x0]
   14000a520:	mov    rcx,QWORD PTR [rbp-0x68]
   14000a524:	add    rcx,0x28
   14000a528:	add    rcx,rdi
   14000a52b:	call   0x14001c950
   14000a530:	add    rdi,0xffffffffffffff88
   14000a534:	sub    ebx,0x1
   14000a537:	jns    0x14000a520
   14000a539:	jmp    0x14000ad89
   14000a53e:	mov    eax,DWORD PTR [rbp+0x270]
   14000a544:	test   eax,eax
   14000a546:	jne    0x14000a621
   14000a54c:	lea    edx,[rax+0x4]
   14000a54f:	mov    rax,QWORD PTR [rip+0x27e32]        # 0x140032388
   14000a556:	mov    ecx,DWORD PTR [rax]
   14000a558:	call   QWORD PTR [rip+0x27f4a]        # 0x1400324a8
   14000a55e:	test   al,al
   14000a560:	je     0x14000a5dc
   14000a562:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a567:	lea    r8,[rip+0x2a4aa]        # 0x140034a18
   14000a56e:	test   rax,rax
   14000a571:	mov    DWORD PTR [rsp+0x50],0x497
   14000a579:	lea    rdx,[rip+0x29e60]        # 0x1400343e0
   14000a580:	cmovne r8,rax
   14000a584:	lea    r9,[rip+0x2a585]        # 0x140034b10
   14000a58b:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a590:	test   rax,rax
   14000a593:	mov    QWORD PTR [rsp+0x30],r8
   14000a598:	lea    r8,[rsp+0x48]
   14000a59d:	cmovne rdx,rax
   14000a5a1:	lea    rax,[rip+0x29fe8]        # 0x140034590
   14000a5a8:	mov    QWORD PTR [rsp+0x48],rax
   14000a5ad:	lea    rax,[rip+0x2a4c4]        # 0x140034a78
   14000a5b4:	mov    QWORD PTR [rsp+0x58],rax
   14000a5b9:	mov    rax,QWORD PTR [rdi+rsi*1+0x18]
   14000a5be:	mov    QWORD PTR [rsp+0x28],rdx
   14000a5c3:	mov    edx,0x4
   14000a5c8:	mov    QWORD PTR [rsp+0x20],rax
   14000a5cd:	mov    rax,QWORD PTR [rip+0x27db4]        # 0x140032388
   14000a5d4:	mov    ecx,DWORD PTR [rax]
   14000a5d6:	call   QWORD PTR [rip+0x27ebc]        # 0x140032498
   14000a5dc:	call   QWORD PTR [rip+0x27fa6]        # 0x140032588
   14000a5e2:	test   al,al
   14000a5e4:	je     0x14000a615
   14000a5e6:	call   QWORD PTR [rip+0x27e94]        # 0x140032480
   14000a5ec:	lea    rdx,[rip+0x281b9]        # 0x1400327ac
   14000a5f3:	xorps  xmm0,xmm0
   14000a5f6:	mov    r8b,0x1
   14000a5f9:	mov    DWORD PTR [rsp+0x50],eax
   14000a5fd:	mov    QWORD PTR [rsp+0x48],rdx
   14000a602:	xor    ecx,ecx
   14000a604:	lea    rdx,[rsp+0x48]
   14000a609:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000a60f:	call   QWORD PTR [rip+0x27e63]        # 0x140032478
   14000a615:	mov    ecx,0x1
   14000a61a:	call   QWORD PTR [rip+0x27c28]        # 0x140032248
   14000a620:	int3   
   14000a621:	cmp    eax,0x1
   14000a624:	jne    0x14000a95a
   14000a62a:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a62f:	lea    r9,[rip+0x2a3e2]        # 0x140034a18
   14000a636:	mov    rdx,QWORD PTR [rdi+rsi*1+0x18]
   14000a63b:	lea    r8,[rip+0x29d9e]        # 0x1400343e0
   14000a642:	test   rax,rax
   14000a645:	lea    rcx,[rip+0x2a4c4]        # 0x140034b10
   14000a64c:	cmovne r9,rax
   14000a650:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a655:	test   rax,rax
   14000a658:	cmovne r8,rax
   14000a65c:	call   QWORD PTR [rip+0x27d4e]        # 0x1400323b0
   14000a662:	jmp    0x14000a95a
   14000a667:	test   cl,cl
   14000a669:	jne    0x14000a7ac
   14000a66f:	mov    eax,DWORD PTR [rbp+0x270]
   14000a675:	test   eax,eax
   14000a677:	jne    0x14000a75e
   14000a67d:	lea    edx,[rax+0x4]
   14000a680:	mov    rax,QWORD PTR [rip+0x27d01]        # 0x140032388
   14000a687:	mov    ecx,DWORD PTR [rax]
   14000a689:	call   QWORD PTR [rip+0x27e19]        # 0x1400324a8
   14000a68f:	test   al,al
   14000a691:	je     0x14000a719
   14000a697:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a69c:	lea    r8,[rip+0x2a375]        # 0x140034a18
   14000a6a3:	test   rax,rax
   14000a6a6:	mov    DWORD PTR [rsp+0x50],0x48c
   14000a6ae:	lea    rdx,[rip+0x29d2b]        # 0x1400343e0
   14000a6b5:	cmovne r8,rax
   14000a6b9:	lea    r9,[rip+0x2a3f0]        # 0x140034ab0
   14000a6c0:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a6c5:	test   rax,rax
   14000a6c8:	cmovne rdx,rax
   14000a6cc:	lea    rax,[rip+0x29ebd]        # 0x140034590
   14000a6d3:	mov    QWORD PTR [rsp+0x48],rax
   14000a6d8:	lea    rax,[rip+0x2a399]        # 0x140034a78
   14000a6df:	mov    QWORD PTR [rsp+0x58],rax
   14000a6e4:	mov    eax,DWORD PTR [rsp+0x40]
   14000a6e8:	mov    DWORD PTR [rsp+0x38],eax
   14000a6ec:	mov    rax,QWORD PTR [rdi+rsi*1+0x18]
   14000a6f1:	mov    QWORD PTR [rsp+0x30],r8
   14000a6f6:	lea    r8,[rsp+0x48]
   14000a6fb:	mov    QWORD PTR [rsp+0x28],rdx
   14000a700:	mov    edx,0x4
   14000a705:	mov    QWORD PTR [rsp+0x20],rax
   14000a70a:	mov    rax,QWORD PTR [rip+0x27c77]        # 0x140032388
   14000a711:	mov    ecx,DWORD PTR [rax]
   14000a713:	call   QWORD PTR [rip+0x27d7f]        # 0x140032498
   14000a719:	call   QWORD PTR [rip+0x27e69]        # 0x140032588
   14000a71f:	test   al,al
   14000a721:	je     0x14000a752
   14000a723:	call   QWORD PTR [rip+0x27d57]        # 0x140032480
   14000a729:	lea    rdx,[rip+0x2807c]        # 0x1400327ac
   14000a730:	xorps  xmm0,xmm0
   14000a733:	mov    r8b,0x1
   14000a736:	mov    DWORD PTR [rsp+0x50],eax
   14000a73a:	mov    QWORD PTR [rsp+0x48],rdx
   14000a73f:	xor    ecx,ecx
   14000a741:	lea    rdx,[rsp+0x48]
   14000a746:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000a74c:	call   QWORD PTR [rip+0x27d26]        # 0x140032478
   14000a752:	mov    ecx,0x1
   14000a757:	call   QWORD PTR [rip+0x27aeb]        # 0x140032248
   14000a75d:	int3   
   14000a75e:	cmp    eax,0x1
   14000a761:	jne    0x14000a95a
   14000a767:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a76c:	lea    r9,[rip+0x2a2a5]        # 0x140034a18
   14000a773:	mov    rdx,QWORD PTR [rdi+rsi*1+0x18]
   14000a778:	lea    r8,[rip+0x29c61]        # 0x1400343e0
   14000a77f:	test   rax,rax
   14000a782:	lea    rcx,[rip+0x2a327]        # 0x140034ab0
   14000a789:	cmovne r9,rax
   14000a78d:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a792:	test   rax,rax
   14000a795:	cmovne r8,rax
   14000a799:	mov    eax,DWORD PTR [rsp+0x40]
   14000a79d:	mov    DWORD PTR [rsp+0x20],eax
   14000a7a1:	call   QWORD PTR [rip+0x27c09]        # 0x1400323b0
   14000a7a7:	jmp    0x14000a95a
   14000a7ac:	cmp    BYTE PTR [rbx+0xf8],0x0
   14000a7b3:	mov    eax,DWORD PTR [rbp+0x270]
   14000a7b9:	jne    0x14000a840
   14000a7bf:	test   eax,eax
   14000a7c1:	jne    0x14000a91d
   14000a7c7:	mov    eax,DWORD PTR [rsp+0x40]
   14000a7cb:	lea    r14,[rip+0x2a0be]        # 0x140034890
   14000a7d2:	lea    rbx,[rip+0x2a0d7]        # 0x1400348b0
   14000a7d9:	cmp    eax,0x8
   14000a7dc:	je     0x14000a7ff
   14000a7de:	cmp    eax,0xe
   14000a7e1:	je     0x14000a7ff
   14000a7e3:	mov    rcx,QWORD PTR [rip+0x3c99e]        # 0x140047188
   14000a7ea:	test   rcx,rcx
   14000a7ed:	je     0x14000a80d
   14000a7ef:	mov    rax,QWORD PTR [rcx]
   14000a7f2:	xor    r8d,r8d
   14000a7f5:	xor    edx,edx
   14000a7f7:	call   QWORD PTR [rax+0x480]
   14000a7fd:	jmp    0x14000a80d
   14000a7ff:	lea    r14,[rip+0x2a182]        # 0x140034988
   14000a806:	lea    rbx,[rip+0x2a19b]        # 0x1400349a8
   14000a80d:	mov    rcx,QWORD PTR [rip+0x3c934]        # 0x140047148
   14000a814:	test   rcx,rcx
   14000a817:	je     0x14000a82e
   14000a819:	mov    rax,QWORD PTR [rcx]
   14000a81c:	lea    rdx,[rip+0x2a1bd]        # 0x1400349e0
   14000a823:	mov    r8,r14
   14000a826:	call   QWORD PTR [rax+0x140]
   14000a82c:	jmp    0x14000a848
   14000a82e:	mov    rdx,rbx
   14000a831:	lea    rcx,[rip+0x2a1c8]        # 0x140034a00
   14000a838:	call   QWORD PTR [rip+0x279f2]        # 0x140032230
   14000a83e:	jmp    0x14000a848
   14000a840:	test   eax,eax
   14000a842:	jne    0x14000a91d
   14000a848:	mov    rax,QWORD PTR [rip+0x27b39]        # 0x140032388
   14000a84f:	mov    edx,0x4
   14000a854:	mov    ecx,DWORD PTR [rax]
   14000a856:	call   QWORD PTR [rip+0x27c4c]        # 0x1400324a8
   14000a85c:	test   al,al
   14000a85e:	je     0x14000a8d8
   14000a860:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a865:	lea    r8,[rip+0x2a1ac]        # 0x140034a18
   14000a86c:	test   rax,rax
   14000a86f:	mov    DWORD PTR [rsp+0x50],0x485
   14000a877:	lea    rdx,[rip+0x29b62]        # 0x1400343e0
   14000a87e:	cmovne r8,rax
   14000a882:	lea    r9,[rip+0x2a1a7]        # 0x140034a30
   14000a889:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a88e:	test   rax,rax
   14000a891:	cmovne rdx,rax
   14000a895:	lea    rax,[rip+0x29cf4]        # 0x140034590
   14000a89c:	mov    QWORD PTR [rsp+0x48],rax
   14000a8a1:	lea    rax,[rip+0x2a1d0]        # 0x140034a78
   14000a8a8:	mov    QWORD PTR [rsp+0x58],rax
   14000a8ad:	mov    eax,DWORD PTR [rsp+0x40]
   14000a8b1:	mov    DWORD PTR [rsp+0x30],eax
   14000a8b5:	mov    rax,QWORD PTR [rip+0x27acc]        # 0x140032388
   14000a8bc:	mov    QWORD PTR [rsp+0x28],r8
   14000a8c1:	lea    r8,[rsp+0x48]
   14000a8c6:	mov    QWORD PTR [rsp+0x20],rdx
   14000a8cb:	mov    edx,0x4
   14000a8d0:	mov    ecx,DWORD PTR [rax]
   14000a8d2:	call   QWORD PTR [rip+0x27bc0]        # 0x140032498
   14000a8d8:	call   QWORD PTR [rip+0x27caa]        # 0x140032588
   14000a8de:	test   al,al
   14000a8e0:	je     0x14000a911
   14000a8e2:	call   QWORD PTR [rip+0x27b98]        # 0x140032480
   14000a8e8:	lea    rdx,[rip+0x27ebd]        # 0x1400327ac
   14000a8ef:	xorps  xmm0,xmm0
   14000a8f2:	mov    r8b,0x1
   14000a8f5:	mov    DWORD PTR [rsp+0x50],eax
   14000a8f9:	mov    QWORD PTR [rsp+0x48],rdx
   14000a8fe:	xor    ecx,ecx
   14000a900:	lea    rdx,[rsp+0x48]
   14000a905:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000a90b:	call   QWORD PTR [rip+0x27b67]        # 0x140032478
   14000a911:	mov    ecx,0x1
   14000a916:	call   QWORD PTR [rip+0x2792c]        # 0x140032248
   14000a91c:	int3   
   14000a91d:	cmp    eax,0x1
   14000a920:	jne    0x14000a95a
   14000a922:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a927:	lea    r8,[rip+0x2a0ea]        # 0x140034a18
   14000a92e:	mov    r9d,DWORD PTR [rsp+0x40]
   14000a933:	lea    rdx,[rip+0x29aa6]        # 0x1400343e0
   14000a93a:	test   rax,rax
   14000a93d:	lea    rcx,[rip+0x2a0ec]        # 0x140034a30
   14000a944:	cmovne r8,rax
   14000a948:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a94d:	test   rax,rax
   14000a950:	cmovne rdx,rax
   14000a954:	call   QWORD PTR [rip+0x27a56]        # 0x1400323b0
   14000a95a:	lea    rcx,[rbp-0x58]
   14000a95e:	call   0x14001c950
   14000a963:	lea    rcx,[rbp-0x70]
   14000a967:	call   0x14000b170
   14000a96c:	test   DWORD PTR [rbp-0x5c],0xc0000000
   14000a973:	jne    0x14000a98e
   14000a975:	mov    rdx,QWORD PTR [rbp-0x68]
   14000a979:	test   rdx,rdx
   14000a97c:	je     0x14000a98e
   14000a97e:	mov    rax,QWORD PTR [rip+0x27a0b]        # 0x140032390
   14000a985:	mov    rcx,QWORD PTR [rax]
   14000a988:	mov    rax,QWORD PTR [rcx]
   14000a98b:	call   QWORD PTR [rax+0x28]
   14000a98e:	xor    al,al
   14000a990:	jmp    0x14000ade1
   14000a995:	lea    rdx,[rbp-0x70]
   14000a999:	mov    rcx,r12
   14000a99c:	call   0x140009020
   14000a9a1:	movsxd rbx,DWORD PTR [r15]
   14000a9a4:	mov    DWORD PTR [rsp+0x48],0x0
   14000a9ac:	mov    QWORD PTR [rsp+0x50],0x0
   14000a9b5:	mov    DWORD PTR [rsp+0x58],ebx
   14000a9b9:	mov    DWORD PTR [rsp+0x5c],0x0
   14000a9c1:	test   ebx,ebx
   14000a9c3:	je     0x14000a9e7
   14000a9c5:	call   QWORD PTR [rip+0x27af5]        # 0x1400324c0
   14000a9cb:	mov    rax,QWORD PTR [rip+0x279be]        # 0x140032390
   14000a9d2:	mov    rdx,rbx
   14000a9d5:	shl    rdx,0x2
   14000a9d9:	mov    rcx,QWORD PTR [rax]
   14000a9dc:	mov    rax,QWORD PTR [rcx]
   14000a9df:	call   QWORD PTR [rax+0x8]
   14000a9e2:	mov    QWORD PTR [rsp+0x50],rax
   14000a9e7:	lea    r8,[rsp+0x48]
   14000a9ec:	mov    rcx,r12
   14000a9ef:	lea    rdx,[rbp-0x70]
   14000a9f3:	call   0x14000b550
   14000a9f8:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000a9fd:	xor    r15d,r15d
   14000aa00:	mov    eax,DWORD PTR [r12+0x20]
   14000aa05:	mov    rbx,QWORD PTR [rsp+0x50]
   14000aa0a:	mov    DWORD PTR [rbp+0x278],eax
   14000aa10:	test   rcx,rcx
   14000aa13:	jle    0x14000abb3
   14000aa19:	nop    DWORD PTR [rax+0x0]
   14000aa20:	movsxd r13,DWORD PTR [r12+0x20]
   14000aa25:	cmp    r13d,DWORD PTR [r12+0x30]
   14000aa2a:	jne    0x14000aa3b
   14000aa2c:	lea    rcx,[r12+0x28]
   14000aa31:	mov    edx,0x1
   14000aa36:	call   0x140009810
   14000aa3b:	inc    DWORD PTR [r12+0x20]
   14000aa40:	lea    rdi,[r13*4+0x0]
   14000aa48:	movzx  eax,WORD PTR [rbx+r15*4]
   14000aa4d:	add    rdi,r13
   14000aa50:	mov    rsi,QWORD PTR [r12+0x28]
   14000aa55:	imul   r14,rax,0x78
   14000aa59:	add    r14,QWORD PTR [rbp-0x68]
   14000aa5d:	mov    rax,QWORD PTR [r14+0x18]
   14000aa61:	mov    QWORD PTR [rsi+rdi*8+0x10],rax
   14000aa66:	mov    rax,QWORD PTR [r14+0x20]
   14000aa6a:	mov    QWORD PTR [rsi+rdi*8+0x18],rax
   14000aa6f:	mov    eax,DWORD PTR [r12+0x140]
   14000aa77:	mov    DWORD PTR [rsi+rdi*8+0x20],eax
   14000aa7b:	mov    BYTE PTR [rsi+rdi*8+0x24],0x0
   14000aa80:	mov    rcx,QWORD PTR [r14+0x8]
   14000aa84:	test   rcx,rcx
   14000aa87:	je     0x14000aae4
   14000aa89:	mov    r8d,0x200
   14000aa8f:	lea    rdx,[rbp+0x10]
   14000aa93:	call   QWORD PTR [rip+0x27a87]        # 0x140032520
   14000aa99:	lea    rax,[rbp+0x10]
   14000aa9d:	or     rdx,0xffffffffffffffff
   14000aaa1:	inc    rdx
   14000aaa4:	cmp    BYTE PTR [rax+rdx*1],0x0
   14000aaa8:	jne    0x14000aaa1
   14000aaaa:	mov    rax,QWORD PTR [rip+0x278df]        # 0x140032390
   14000aab1:	lea    rbx,[rbp+0x10]
   14000aab5:	inc    rdx
   14000aab8:	mov    rcx,QWORD PTR [rax]
   14000aabb:	mov    rax,QWORD PTR [rcx]
   14000aabe:	call   QWORD PTR [rax+0x8]
   14000aac1:	mov    rdx,rax
   14000aac4:	lea    rcx,[rbp+0x10]
   14000aac8:	sub    rdx,rcx
   14000aacb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000aad0:	movzx  ecx,BYTE PTR [rbx]
   14000aad3:	mov    BYTE PTR [rbx+rdx*1],cl
   14000aad6:	lea    rbx,[rbx+0x1]
   14000aada:	test   cl,cl
   14000aadc:	jne    0x14000aad0
   14000aade:	mov    QWORD PTR [rsi+rdi*8],rax
   14000aae2:	jmp    0x14000aaec
   14000aae4:	mov    QWORD PTR [rsi+rdi*8],0x0
   14000aaec:	mov    rbx,QWORD PTR [r14+0x10]
   14000aaf0:	test   rbx,rbx
   14000aaf3:	je     0x14000ab37
   14000aaf5:	or     rdx,0xffffffffffffffff
   14000aaf9:	nop    DWORD PTR [rax+0x0]
   14000ab00:	inc    rdx
   14000ab03:	cmp    BYTE PTR [rbx+rdx*1],0x0
   14000ab07:	jne    0x14000ab00
   14000ab09:	mov    rax,QWORD PTR [rip+0x27880]        # 0x140032390
   14000ab10:	inc    rdx
   14000ab13:	mov    rcx,QWORD PTR [rax]
   14000ab16:	mov    rax,QWORD PTR [rcx]
   14000ab19:	call   QWORD PTR [rax+0x8]
   14000ab1c:	mov    rdx,rax
   14000ab1f:	sub    rdx,rbx
   14000ab22:	movzx  ecx,BYTE PTR [rbx]
   14000ab25:	mov    BYTE PTR [rbx+rdx*1],cl
   14000ab28:	lea    rbx,[rbx+0x1]
   14000ab2c:	test   cl,cl
   14000ab2e:	jne    0x14000ab22
   14000ab30:	mov    QWORD PTR [rsi+rdi*8+0x8],rax
   14000ab35:	jmp    0x14000ab40
   14000ab37:	mov    QWORD PTR [rsi+rdi*8+0x8],0x0
   14000ab40:	mov    rcx,QWORD PTR [rsi+rdi*8+0x10]
   14000ab45:	mov    rax,QWORD PTR [rcx]
   14000ab48:	call   QWORD PTR [rax+0x48]
   14000ab4b:	test   al,al
   14000ab4d:	je     0x14000ab97
   14000ab4f:	mov    r8,QWORD PTR [r14+0x10]
   14000ab53:	lea    rcx,[r12+0x80]
   14000ab5b:	lea    rdx,[rbp+0x268]
   14000ab62:	call   0x14001c980
   14000ab67:	movzx  edi,WORD PTR [rbp+0x268]
   14000ab6e:	mov    edx,DWORD PTR [r12+0x68]
   14000ab73:	cmp    edx,edi
   14000ab75:	jg     0x14000ab8d
   14000ab77:	lea    r8d,[rdi+0x1]
   14000ab7b:	cmp    edx,r8d
   14000ab7e:	jge    0x14000ab8d
   14000ab80:	sub    r8d,edx
   14000ab83:	lea    rcx,[r12+0x68]
   14000ab88:	call   0x140009c10
   14000ab8d:	mov    rax,QWORD PTR [r12+0x70]
   14000ab92:	mov    WORD PTR [rax+rdi*2],r13w
   14000ab97:	movsxd rax,DWORD PTR [rsp+0x48]
   14000ab9c:	inc    r15
   14000ab9f:	mov    rbx,QWORD PTR [rsp+0x50]
   14000aba4:	cmp    r15,rax
   14000aba7:	jl     0x14000aa20
   14000abad:	mov    eax,DWORD PTR [rbp+0x278]
   14000abb3:	movsxd rsi,eax
   14000abb6:	mov    r15d,eax
   14000abb9:	movsxd rax,DWORD PTR [r12+0x20]
   14000abbe:	mov    r13,rsi
   14000abc1:	mov    QWORD PTR [rbp+0x268],rax
   14000abc8:	cmp    rsi,rax
   14000abcb:	jge    0x14000ac50
   14000abd1:	lea    r14,[rsi+rsi*4]
   14000abd5:	shl    r14,0x3
   14000abd9:	nop    DWORD PTR [rax+0x0]
   14000abe0:	mov    rax,QWORD PTR [r12+0x28]
   14000abe5:	mov    rdi,QWORD PTR [rax+r14*1+0x10]
   14000abea:	call   QWORD PTR [rip+0x27778]        # 0x140032368
   14000abf0:	lea    rdx,[rip+0xffffffffffffe3f9]        # 0x140008ff0
   14000abf7:	mov    rcx,rdi
   14000abfa:	mov    rbx,rax
   14000abfd:	mov    rax,QWORD PTR [rdi]
   14000ac00:	call   QWORD PTR [rax]
   14000ac02:	test   al,al
   14000ac04:	je     0x14000adf5
   14000ac0a:	call   QWORD PTR [rip+0x27758]        # 0x140032368
   14000ac10:	sub    rax,rbx
   14000ac13:	xor    ecx,ecx
   14000ac15:	mov    rdx,rax
   14000ac18:	call   QWORD PTR [rip+0x27742]        # 0x140032360
   14000ac1e:	mov    rdx,QWORD PTR [r12+0x28]
   14000ac23:	lea    rcx,[rip+0x29f6e]        # 0x140034b98
   14000ac2a:	movaps xmm2,xmm0
   14000ac2d:	movq   r8,xmm2
   14000ac32:	mov    rdx,QWORD PTR [rdx+r14*1+0x8]
   14000ac37:	call   QWORD PTR [rip+0x27683]        # 0x1400322c0
   14000ac3d:	inc    r15d
   14000ac40:	inc    r13
   14000ac43:	add    r14,0x28
   14000ac47:	cmp    r13,QWORD PTR [rbp+0x268]
   14000ac4e:	jl     0x14000abe0
   14000ac50:	test   rsi,rsi
   14000ac53:	jle    0x14000ac84
   14000ac55:	xor    ebx,ebx
   14000ac57:	mov    rdi,rsi
   14000ac5a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ac60:	mov    rax,QWORD PTR [r12+0x28]
   14000ac65:	lea    rdx,[rip+0xffffffffffffe384]        # 0x140008ff0
   14000ac6c:	xor    r8d,r8d
   14000ac6f:	mov    rcx,QWORD PTR [rax+rbx*1+0x10]
   14000ac74:	mov    rax,QWORD PTR [rcx]
   14000ac77:	call   QWORD PTR [rax+0x40]
   14000ac7a:	lea    rbx,[rbx+0x28]
   14000ac7e:	sub    rdi,0x1
   14000ac82:	jne    0x14000ac60
   14000ac84:	mov    r15,QWORD PTR [rbp+0x268]
   14000ac8b:	cmp    rsi,r15
   14000ac8e:	jge    0x14000ad07
   14000ac90:	mov    r13d,DWORD PTR [rbp+0x278]
   14000ac97:	lea    r14,[rsi+rsi*4]
   14000ac9b:	shl    r14,0x3
   14000ac9f:	nop
   14000aca0:	mov    rax,QWORD PTR [r12+0x28]
   14000aca5:	mov    rdi,QWORD PTR [rax+r14*1+0x10]
   14000acaa:	call   QWORD PTR [rip+0x276b8]        # 0x140032368
   14000acb0:	mov    rbx,rax
   14000acb3:	mov    rcx,rdi
   14000acb6:	mov    rax,QWORD PTR [rdi]
   14000acb9:	call   QWORD PTR [rax+0x18]
   14000acbc:	cmp    eax,0x1
   14000acbf:	jne    0x14000af97
   14000acc5:	call   QWORD PTR [rip+0x2769d]        # 0x140032368
   14000accb:	sub    rax,rbx
   14000acce:	xor    ecx,ecx
   14000acd0:	mov    rdx,rax
   14000acd3:	call   QWORD PTR [rip+0x27687]        # 0x140032360
   14000acd9:	mov    rdx,QWORD PTR [r12+0x28]
   14000acde:	lea    rcx,[rip+0x29f1b]        # 0x140034c00
   14000ace5:	movaps xmm2,xmm0
   14000ace8:	movq   r8,xmm2
   14000aced:	mov    rdx,QWORD PTR [rdx+r14*1+0x8]
   14000acf2:	call   QWORD PTR [rip+0x275c8]        # 0x1400322c0
   14000acf8:	inc    r13d
   14000acfb:	inc    rsi
   14000acfe:	add    r14,0x28
   14000ad02:	cmp    rsi,r15
   14000ad05:	jl     0x14000aca0
   14000ad07:	mov    rax,QWORD PTR [r12]
   14000ad0b:	mov    rcx,r12
   14000ad0e:	call   QWORD PTR [rax+0x28]
   14000ad11:	mov    ebx,DWORD PTR [rsp+0x5c]
   14000ad15:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ad1a:	and    ebx,0xc0000000
   14000ad20:	jne    0x14000ad39
   14000ad22:	test   rdx,rdx
   14000ad25:	je     0x14000ad39
   14000ad27:	mov    rax,QWORD PTR [rip+0x27662]        # 0x140032390
   14000ad2e:	mov    rcx,QWORD PTR [rax]
   14000ad31:	mov    rax,QWORD PTR [rcx]
   14000ad34:	call   QWORD PTR [rax+0x28]
   14000ad37:	xor    edx,edx
   14000ad39:	test   ebx,ebx
   14000ad3b:	jne    0x14000ad52
   14000ad3d:	test   rdx,rdx
   14000ad40:	je     0x14000ad52
   14000ad42:	mov    rax,QWORD PTR [rip+0x27647]        # 0x140032390
   14000ad49:	mov    rcx,QWORD PTR [rax]
   14000ad4c:	mov    rax,QWORD PTR [rcx]
   14000ad4f:	call   QWORD PTR [rax+0x28]
   14000ad52:	lea    rcx,[rbp-0x58]
   14000ad56:	call   0x14001c950
   14000ad5b:	mov    ebx,DWORD PTR [rbp-0x70]
   14000ad5e:	sub    ebx,0x1
   14000ad61:	js     0x14000ad89
   14000ad63:	movsxd rax,ebx
   14000ad66:	imul   rdi,rax,0x78
   14000ad6a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ad70:	mov    rcx,QWORD PTR [rbp-0x68]
   14000ad74:	add    rcx,0x28
   14000ad78:	add    rcx,rdi
   14000ad7b:	call   0x14001c950
   14000ad80:	add    rdi,0xffffffffffffff88
   14000ad84:	sub    ebx,0x1
   14000ad87:	jns    0x14000ad70
   14000ad89:	mov    eax,DWORD PTR [rbp-0x5c]
   14000ad8c:	mov    rdx,QWORD PTR [rbp-0x68]
   14000ad90:	mov    DWORD PTR [rbp-0x70],0x0
   14000ad97:	test   eax,0xc0000000
   14000ad9c:	jne    0x14000addf
   14000ad9e:	test   rdx,rdx
   14000ada1:	je     0x14000adbc
   14000ada3:	mov    rax,QWORD PTR [rip+0x275e6]        # 0x140032390
   14000adaa:	mov    rcx,QWORD PTR [rax]
   14000adad:	mov    rax,QWORD PTR [rcx]
   14000adb0:	call   QWORD PTR [rax+0x28]
   14000adb3:	mov    eax,DWORD PTR [rbp-0x5c]
   14000adb6:	xor    edx,edx
   14000adb8:	mov    QWORD PTR [rbp-0x68],rdx
   14000adbc:	mov    DWORD PTR [rbp-0x60],0x0
   14000adc3:	test   eax,0xc0000000
   14000adc8:	jne    0x14000addf
   14000adca:	test   rdx,rdx
   14000adcd:	je     0x14000addf
   14000adcf:	mov    rax,QWORD PTR [rip+0x275ba]        # 0x140032390
   14000add6:	mov    rcx,QWORD PTR [rax]
   14000add9:	mov    rax,QWORD PTR [rcx]
   14000addc:	call   QWORD PTR [rax+0x28]
   14000addf:	mov    al,0x1
   14000ade1:	add    rsp,0x318
   14000ade8:	pop    r15
   14000adea:	pop    r14
   14000adec:	pop    r13
   14000adee:	pop    r12
   14000adf0:	pop    rdi
   14000adf1:	pop    rsi
   14000adf2:	pop    rbx
   14000adf3:	pop    rbp
   14000adf4:	ret    
   14000adf5:	mov    eax,DWORD PTR [rbp+0x270]
   14000adfb:	test   eax,eax
   14000adfd:	jne    0x14000aeb4
   14000ae03:	lea    edx,[rax+0x4]
   14000ae06:	mov    rax,QWORD PTR [rip+0x2757b]        # 0x140032388
   14000ae0d:	mov    ecx,DWORD PTR [rax]
   14000ae0f:	call   QWORD PTR [rip+0x27693]        # 0x1400324a8
   14000ae15:	test   al,al
   14000ae17:	je     0x14000ae6f
   14000ae19:	mov    DWORD PTR [rsp+0x50],0x500
   14000ae21:	lea    rax,[rip+0x29768]        # 0x140034590
   14000ae28:	mov    QWORD PTR [rsp+0x48],rax
   14000ae2d:	lea    r9,[rip+0x29d2c]        # 0x140034b60
   14000ae34:	lea    rax,[rip+0x29c3d]        # 0x140034a78
   14000ae3b:	mov    edx,0x4
   14000ae40:	mov    QWORD PTR [rsp+0x58],rax
   14000ae45:	lea    r8,[rsp+0x48]
   14000ae4a:	movsxd rax,r15d
   14000ae4d:	lea    rcx,[rax+rax*4]
   14000ae51:	mov    rax,QWORD PTR [r12+0x28]
   14000ae56:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14000ae5b:	mov    rax,QWORD PTR [rip+0x27526]        # 0x140032388
   14000ae62:	mov    QWORD PTR [rsp+0x20],rcx
   14000ae67:	mov    ecx,DWORD PTR [rax]
   14000ae69:	call   QWORD PTR [rip+0x27629]        # 0x140032498
   14000ae6f:	call   QWORD PTR [rip+0x27713]        # 0x140032588
   14000ae75:	test   al,al
   14000ae77:	je     0x14000aea8
   14000ae79:	call   QWORD PTR [rip+0x27601]        # 0x140032480
   14000ae7f:	lea    rdx,[rip+0x27926]        # 0x1400327ac
   14000ae86:	xorps  xmm0,xmm0
   14000ae89:	mov    r8b,0x1
   14000ae8c:	mov    DWORD PTR [rsp+0x50],eax
   14000ae90:	mov    QWORD PTR [rsp+0x48],rdx
   14000ae95:	xor    ecx,ecx
   14000ae97:	lea    rdx,[rsp+0x48]
   14000ae9c:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000aea2:	call   QWORD PTR [rip+0x275d0]        # 0x140032478
   14000aea8:	mov    ecx,0x1
   14000aead:	call   QWORD PTR [rip+0x27395]        # 0x140032248
   14000aeb3:	int3   
   14000aeb4:	cmp    eax,0x1
   14000aeb7:	jne    0x14000aed7
   14000aeb9:	mov    rdx,QWORD PTR [r12+0x28]
   14000aebe:	movsxd rax,r15d
   14000aec1:	lea    rcx,[rax+rax*4]
   14000aec5:	mov    rdx,QWORD PTR [rdx+rcx*8+0x8]
   14000aeca:	lea    rcx,[rip+0x29c8f]        # 0x140034b60
   14000aed1:	call   QWORD PTR [rip+0x274d9]        # 0x1400323b0
   14000aed7:	mov    ebx,DWORD PTR [rsp+0x5c]
   14000aedb:	mov    rdx,QWORD PTR [rsp+0x50]
   14000aee0:	and    ebx,0xc0000000
   14000aee6:	jne    0x14000aeff
   14000aee8:	test   rdx,rdx
   14000aeeb:	je     0x14000aeff
   14000aeed:	mov    rax,QWORD PTR [rip+0x2749c]        # 0x140032390
   14000aef4:	mov    rcx,QWORD PTR [rax]
   14000aef7:	mov    rax,QWORD PTR [rcx]
   14000aefa:	call   QWORD PTR [rax+0x28]
   14000aefd:	xor    edx,edx
   14000aeff:	test   ebx,ebx
   14000af01:	jne    0x14000af18
   14000af03:	test   rdx,rdx
   14000af06:	je     0x14000af18
   14000af08:	mov    rax,QWORD PTR [rip+0x27481]        # 0x140032390
   14000af0f:	mov    rcx,QWORD PTR [rax]
   14000af12:	mov    rax,QWORD PTR [rcx]
   14000af15:	call   QWORD PTR [rax+0x28]
   14000af18:	lea    rcx,[rbp-0x58]
   14000af1c:	call   0x14001c950
   14000af21:	mov    ebx,DWORD PTR [rbp-0x70]
   14000af24:	sub    ebx,0x1
   14000af27:	js     0x14000af49
   14000af29:	movsxd rax,ebx
   14000af2c:	imul   rdi,rax,0x78
   14000af30:	mov    rcx,QWORD PTR [rbp-0x68]
   14000af34:	add    rcx,0x28
   14000af38:	add    rcx,rdi
   14000af3b:	call   0x14001c950
   14000af40:	add    rdi,0xffffffffffffff88
   14000af44:	sub    ebx,0x1
   14000af47:	jns    0x14000af30
   14000af49:	mov    eax,DWORD PTR [rbp-0x5c]
   14000af4c:	mov    rdx,QWORD PTR [rbp-0x68]
   14000af50:	mov    DWORD PTR [rbp-0x70],0x0
   14000af57:	test   eax,0xc0000000
   14000af5c:	jne    0x14000a98e
   14000af62:	test   rdx,rdx
   14000af65:	je     0x14000af80
   14000af67:	mov    rax,QWORD PTR [rip+0x27422]        # 0x140032390
   14000af6e:	mov    rcx,QWORD PTR [rax]
   14000af71:	mov    rax,QWORD PTR [rcx]
   14000af74:	call   QWORD PTR [rax+0x28]
   14000af77:	mov    eax,DWORD PTR [rbp-0x5c]
   14000af7a:	xor    edx,edx
   14000af7c:	mov    QWORD PTR [rbp-0x68],rdx
   14000af80:	mov    DWORD PTR [rbp-0x60],0x0
   14000af87:	test   eax,0xc0000000
   14000af8c:	jne    0x14000a98e
   14000af92:	jmp    0x14000a979
   14000af97:	mov    eax,DWORD PTR [rbp+0x270]
   14000af9d:	test   eax,eax
   14000af9f:	jne    0x14000b056
   14000afa5:	lea    edx,[rax+0x4]
   14000afa8:	mov    rax,QWORD PTR [rip+0x273d9]        # 0x140032388
   14000afaf:	mov    ecx,DWORD PTR [rax]
   14000afb1:	call   QWORD PTR [rip+0x274f1]        # 0x1400324a8
   14000afb7:	test   al,al
   14000afb9:	je     0x14000b011
   14000afbb:	mov    DWORD PTR [rsp+0x50],0x518
   14000afc3:	lea    rax,[rip+0x295c6]        # 0x140034590
   14000afca:	mov    QWORD PTR [rsp+0x48],rax
   14000afcf:	lea    r9,[rip+0x29bf2]        # 0x140034bc8
   14000afd6:	lea    rax,[rip+0x29a9b]        # 0x140034a78
   14000afdd:	mov    edx,0x4
   14000afe2:	mov    QWORD PTR [rsp+0x58],rax
   14000afe7:	lea    r8,[rsp+0x48]
   14000afec:	movsxd rax,r13d
   14000afef:	lea    rcx,[rax+rax*4]
   14000aff3:	mov    rax,QWORD PTR [r12+0x28]
   14000aff8:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14000affd:	mov    rax,QWORD PTR [rip+0x27384]        # 0x140032388
   14000b004:	mov    QWORD PTR [rsp+0x20],rcx
   14000b009:	mov    ecx,DWORD PTR [rax]
   14000b00b:	call   QWORD PTR [rip+0x27487]        # 0x140032498
   14000b011:	call   QWORD PTR [rip+0x27571]        # 0x140032588
   14000b017:	test   al,al
   14000b019:	je     0x14000b04a
   14000b01b:	call   QWORD PTR [rip+0x2745f]        # 0x140032480
   14000b021:	lea    rdx,[rip+0x27784]        # 0x1400327ac
   14000b028:	xorps  xmm0,xmm0
   14000b02b:	mov    r8b,0x1
   14000b02e:	mov    DWORD PTR [rsp+0x50],eax
   14000b032:	mov    QWORD PTR [rsp+0x48],rdx
   14000b037:	xor    ecx,ecx
   14000b039:	lea    rdx,[rsp+0x48]
   14000b03e:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000b044:	call   QWORD PTR [rip+0x2742e]        # 0x140032478
   14000b04a:	mov    ecx,0x1
   14000b04f:	call   QWORD PTR [rip+0x271f3]        # 0x140032248
   14000b055:	int3   
   14000b056:	cmp    eax,0x1
   14000b059:	jne    0x14000b079
   14000b05b:	mov    rdx,QWORD PTR [r12+0x28]
   14000b060:	movsxd rax,r13d
   14000b063:	lea    rcx,[rax+rax*4]
   14000b067:	mov    rdx,QWORD PTR [rdx+rcx*8+0x8]
   14000b06c:	lea    rcx,[rip+0x29b55]        # 0x140034bc8
   14000b073:	call   QWORD PTR [rip+0x27337]        # 0x1400323b0
   14000b079:	mov    ebx,DWORD PTR [rsp+0x5c]
   14000b07d:	mov    rdx,QWORD PTR [rsp+0x50]
   14000b082:	and    ebx,0xc0000000
   14000b088:	jne    0x14000b0a1
   14000b08a:	test   rdx,rdx
   14000b08d:	je     0x14000b0a1
   14000b08f:	mov    rax,QWORD PTR [rip+0x272fa]        # 0x140032390
   14000b096:	mov    rcx,QWORD PTR [rax]
   14000b099:	mov    rax,QWORD PTR [rcx]
   14000b09c:	call   QWORD PTR [rax+0x28]
   14000b09f:	xor    edx,edx
   14000b0a1:	test   ebx,ebx
   14000b0a3:	jne    0x14000b0ba
   14000b0a5:	test   rdx,rdx
   14000b0a8:	je     0x14000b0ba
   14000b0aa:	mov    rax,QWORD PTR [rip+0x272df]        # 0x140032390
   14000b0b1:	mov    rcx,QWORD PTR [rax]
   14000b0b4:	mov    rax,QWORD PTR [rcx]
   14000b0b7:	call   QWORD PTR [rax+0x28]
   14000b0ba:	lea    rcx,[rbp-0x58]
   14000b0be:	call   0x14001c950
   14000b0c3:	mov    ebx,DWORD PTR [rbp-0x70]
   14000b0c6:	sub    ebx,0x1
   14000b0c9:	js     0x14000af49
   14000b0cf:	movsxd rax,ebx
   14000b0d2:	imul   rdi,rax,0x78
   14000b0d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b0e0:	mov    rcx,QWORD PTR [rbp-0x68]
   14000b0e4:	add    rcx,0x28
   14000b0e8:	add    rcx,rdi
   14000b0eb:	call   0x14001c950
   14000b0f0:	add    rdi,0xffffffffffffff88
   14000b0f4:	sub    ebx,0x1
   14000b0f7:	jns    0x14000b0e0
   14000b0f9:	jmp    0x14000af49
   14000b0fe:	int3   
   14000b0ff:	int3   
   14000b100:	rex push rsi
   14000b102:	sub    rsp,0x20
   14000b106:	cmp    BYTE PTR [rcx+0x146],0x0
   14000b10d:	mov    rsi,rcx
   14000b110:	jne    0x14000b163
   14000b112:	mov    eax,DWORD PTR [rcx+0x20]
   14000b115:	sub    eax,0x1
   14000b118:	mov    QWORD PTR [rsp+0x30],rbx
   14000b11d:	movsxd rbx,eax
   14000b120:	mov    BYTE PTR [rcx+0x146],0x1
   14000b127:	js     0x14000b15e
   14000b129:	mov    QWORD PTR [rsp+0x38],rdi
   14000b12e:	lea    rdi,[rbx+rbx*4]
   14000b132:	shl    rdi,0x3
   14000b136:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b140:	mov    rax,QWORD PTR [rsi+0x28]
   14000b144:	mov    rcx,QWORD PTR [rax+rdi*1+0x10]
   14000b149:	mov    rax,QWORD PTR [rcx]
   14000b14c:	call   QWORD PTR [rax+0x28]
   14000b14f:	sub    rbx,0x1
   14000b153:	lea    rdi,[rdi-0x28]
   14000b157:	jns    0x14000b140
   14000b159:	mov    rdi,QWORD PTR [rsp+0x38]
   14000b15e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b163:	add    rsp,0x20
   14000b167:	pop    rsi
   14000b168:	ret    
   14000b169:	int3   
   14000b16a:	int3   
   14000b16b:	int3   
   14000b16c:	int3   
   14000b16d:	int3   
   14000b16e:	int3   
   14000b16f:	int3   
   14000b170:	mov    QWORD PTR [rsp+0x10],rbx
   14000b175:	push   rdi
   14000b176:	sub    rsp,0x20
   14000b17a:	mov    ebx,DWORD PTR [rcx]
   14000b17c:	mov    rdi,rcx
   14000b17f:	sub    ebx,0x1
   14000b182:	js     0x14000b1ae
   14000b184:	movsxd rax,ebx
   14000b187:	mov    QWORD PTR [rsp+0x30],rsi
   14000b18c:	imul   rsi,rax,0x78
   14000b190:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b194:	add    rcx,0x28
   14000b198:	add    rcx,rsi
   14000b19b:	call   0x14001c950
   14000b1a0:	add    rsi,0xffffffffffffff88
   14000b1a4:	sub    ebx,0x1
   14000b1a7:	jns    0x14000b190
   14000b1a9:	mov    rsi,QWORD PTR [rsp+0x30]
   14000b1ae:	xor    ebx,ebx
   14000b1b0:	mov    DWORD PTR [rdi],ebx
   14000b1b2:	test   DWORD PTR [rdi+0x14],0xc0000000
   14000b1b9:	jne    0x14000b1db
   14000b1bb:	mov    rdx,QWORD PTR [rdi+0x8]
   14000b1bf:	test   rdx,rdx
   14000b1c2:	je     0x14000b1d8
   14000b1c4:	mov    rax,QWORD PTR [rip+0x271c5]        # 0x140032390
   14000b1cb:	mov    rcx,QWORD PTR [rax]
   14000b1ce:	mov    rax,QWORD PTR [rcx]
   14000b1d1:	call   QWORD PTR [rax+0x28]
   14000b1d4:	mov    QWORD PTR [rdi+0x8],rbx
   14000b1d8:	mov    DWORD PTR [rdi+0x10],ebx
   14000b1db:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b1e0:	add    rsp,0x20
   14000b1e4:	pop    rdi
   14000b1e5:	ret    
   14000b1e6:	int3   
   14000b1e7:	int3   
   14000b1e8:	int3   
   14000b1e9:	int3   
   14000b1ea:	int3   
   14000b1eb:	int3   
   14000b1ec:	int3   
   14000b1ed:	int3   
   14000b1ee:	int3   
   14000b1ef:	int3   
   14000b1f0:	mov    QWORD PTR [rsp+0x20],rbx
   14000b1f5:	push   rbp
   14000b1f6:	push   r14
   14000b1f8:	push   r15
   14000b1fa:	sub    rsp,0x20
   14000b1fe:	mov    r15,rcx
   14000b201:	xor    ebx,ebx
   14000b203:	mov    DWORD PTR [rcx+0x68],ebx
   14000b206:	sub    rcx,0xffffffffffffff80
   14000b20a:	call   0x14001d800
   14000b20f:	mov    ebp,DWORD PTR [r15+0x20]
   14000b213:	test   ebp,ebp
   14000b215:	jle    0x14000b2a4
   14000b21b:	mov    QWORD PTR [rsp+0x48],rsi
   14000b220:	mov    esi,ebx
   14000b222:	mov    QWORD PTR [rsp+0x50],rdi
   14000b227:	nop    WORD PTR [rax+rax*1+0x0]
   14000b230:	mov    rdi,QWORD PTR [r15+0x28]
   14000b234:	mov    rcx,QWORD PTR [rdi+rsi*1+0x10]
   14000b239:	test   rcx,rcx
   14000b23c:	je     0x14000b290
   14000b23e:	cmp    QWORD PTR [rdi+rsi*1+0x8],0x0
   14000b244:	je     0x14000b290
   14000b246:	mov    rax,QWORD PTR [rcx]
   14000b249:	call   QWORD PTR [rax+0x48]
   14000b24c:	test   al,al
   14000b24e:	je     0x14000b290
   14000b250:	mov    r8,QWORD PTR [rdi+rsi*1+0x8]
   14000b255:	lea    rcx,[r15+0x80]
   14000b25c:	lea    rdx,[rsp+0x40]
   14000b261:	call   0x14001c980
   14000b266:	movzx  edi,WORD PTR [rsp+0x40]
   14000b26b:	mov    edx,DWORD PTR [r15+0x68]
   14000b26f:	cmp    edx,edi
   14000b271:	jg     0x14000b288
   14000b273:	lea    r8d,[rdi+0x1]
   14000b277:	cmp    edx,r8d
   14000b27a:	jge    0x14000b288
   14000b27c:	sub    r8d,edx
   14000b27f:	lea    rcx,[r15+0x68]
   14000b283:	call   0x140009c10
   14000b288:	mov    rax,QWORD PTR [r15+0x70]
   14000b28c:	mov    WORD PTR [rax+rdi*2],bx
   14000b290:	inc    ebx
   14000b292:	add    rsi,0x28
   14000b296:	cmp    ebx,ebp
   14000b298:	jl     0x14000b230
   14000b29a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000b29f:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b2a4:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b2a9:	add    rsp,0x20
   14000b2ad:	pop    r15
   14000b2af:	pop    r14
   14000b2b1:	pop    rbp
   14000b2b2:	ret    
   14000b2b3:	int3   
   14000b2b4:	int3   
   14000b2b5:	int3   
   14000b2b6:	int3   
   14000b2b7:	int3   
   14000b2b8:	int3   
   14000b2b9:	int3   
   14000b2ba:	int3   
   14000b2bb:	int3   
   14000b2bc:	int3   
   14000b2bd:	int3   
   14000b2be:	int3   
   14000b2bf:	int3   
   14000b2c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000b2c5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b2ca:	push   rdi
   14000b2cb:	sub    rsp,0x20
   14000b2cf:	mov    rdi,rcx
   14000b2d2:	xor    ebx,ebx
   14000b2d4:	movsxd rcx,DWORD PTR [rcx+0x20]
   14000b2d8:	mov    rsi,rdx
   14000b2db:	test   ecx,ecx
   14000b2dd:	jle    0x14000b3d3
   14000b2e3:	mov    rax,QWORD PTR [rdi+0x28]
   14000b2e7:	mov    r8d,ebx
   14000b2ea:	add    rax,0x10
   14000b2ee:	xchg   ax,ax
   14000b2f0:	cmp    QWORD PTR [rax],rsi
   14000b2f3:	je     0x14000b313
   14000b2f5:	inc    ebx
   14000b2f7:	inc    r8
   14000b2fa:	add    rax,0x28
   14000b2fe:	cmp    r8,rcx
   14000b301:	jl     0x14000b2f0
   14000b303:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b308:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b30d:	add    rsp,0x20
   14000b311:	pop    rdi
   14000b312:	ret    
   14000b313:	cmp    ebx,0xffffffff
   14000b316:	je     0x14000b3d3
   14000b31c:	mov    rax,QWORD PTR [rdx]
   14000b31f:	mov    rcx,rsi
   14000b322:	mov    QWORD PTR [rsp+0x30],r14
   14000b327:	call   QWORD PTR [rax+0x20]
   14000b32a:	mov    rax,QWORD PTR [rsi]
   14000b32d:	mov    rcx,rsi
   14000b330:	call   QWORD PTR [rax+0x8]
   14000b333:	mov    rsi,QWORD PTR [rdi+0x28]
   14000b337:	movsxd rax,ebx
   14000b33a:	lea    rcx,[rax+rax*4]
   14000b33e:	mov    rdx,QWORD PTR [rsi+rcx*8+0x18]
   14000b343:	lea    r14,[rcx*8+0x0]
   14000b34b:	test   rdx,rdx
   14000b34e:	je     0x14000b358
   14000b350:	mov    rcx,rdi
   14000b353:	call   0x14000b780
   14000b358:	mov    rdx,QWORD PTR [rsi+r14*1]
   14000b35c:	test   rdx,rdx
   14000b35f:	je     0x14000b371
   14000b361:	mov    rax,QWORD PTR [rip+0x27028]        # 0x140032390
   14000b368:	mov    rcx,QWORD PTR [rax]
   14000b36b:	mov    rax,QWORD PTR [rcx]
   14000b36e:	call   QWORD PTR [rax+0x28]
   14000b371:	mov    rdx,QWORD PTR [rsi+r14*1+0x8]
   14000b376:	test   rdx,rdx
   14000b379:	je     0x14000b38b
   14000b37b:	mov    rax,QWORD PTR [rip+0x2700e]        # 0x140032390
   14000b382:	mov    rcx,QWORD PTR [rax]
   14000b385:	mov    rax,QWORD PTR [rcx]
   14000b388:	call   QWORD PTR [rax+0x28]
   14000b38b:	mov    eax,DWORD PTR [rdi+0x20]
   14000b38e:	test   eax,eax
   14000b390:	jle    0x14000b3c6
   14000b392:	dec    eax
   14000b394:	cmp    ebx,eax
   14000b396:	je     0x14000b3c3
   14000b398:	mov    rdx,QWORD PTR [rdi+0x28]
   14000b39c:	cdqe   
   14000b39e:	lea    rcx,[rax+rax*4]
   14000b3a2:	movups xmm0,XMMWORD PTR [rdx+rcx*8]
   14000b3a6:	movups XMMWORD PTR [r14+rdx*1],xmm0
   14000b3ab:	movups xmm1,XMMWORD PTR [rdx+rcx*8+0x10]
   14000b3b0:	movups XMMWORD PTR [r14+rdx*1+0x10],xmm1
   14000b3b6:	movsd  xmm0,QWORD PTR [rdx+rcx*8+0x20]
   14000b3bc:	movsd  QWORD PTR [r14+rdx*1+0x20],xmm0
   14000b3c3:	dec    DWORD PTR [rdi+0x20]
   14000b3c6:	mov    rcx,rdi
   14000b3c9:	call   0x14000b1f0
   14000b3ce:	mov    r14,QWORD PTR [rsp+0x30]
   14000b3d3:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b3d8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b3dd:	add    rsp,0x20
   14000b3e1:	pop    rdi
   14000b3e2:	ret    
   14000b3e3:	int3   
   14000b3e4:	int3   
   14000b3e5:	int3   
   14000b3e6:	int3   
   14000b3e7:	int3   
   14000b3e8:	int3   
   14000b3e9:	int3   
   14000b3ea:	int3   
   14000b3eb:	int3   
   14000b3ec:	int3   
   14000b3ed:	int3   
   14000b3ee:	int3   
   14000b3ef:	int3   
   14000b3f0:	rex push rbx
   14000b3f2:	sub    rsp,0x20
   14000b3f6:	xor    ebx,ebx
   14000b3f8:	mov    BYTE PTR [rcx+0xfa],dl
   14000b3fe:	mov    ecx,DWORD PTR [rip+0x3bd08]        # 0x14004710c
   14000b404:	test   dl,dl
   14000b406:	setne  bl
   14000b409:	lea    edx,[rbx+0x1]
   14000b40c:	call   QWORD PTR [rip+0x26eb6]        # 0x1400322c8
   14000b412:	mov    ecx,DWORD PTR [rip+0x3bce8]        # 0x140047100
   14000b418:	lea    edx,[rbx+0x1]
   14000b41b:	add    rsp,0x20
   14000b41f:	pop    rbx
   14000b420:	rex.W jmp QWORD PTR [rip+0x26ea1]        # 0x1400322c8
   14000b427:	int3   
   14000b428:	int3   
   14000b429:	int3   
   14000b42a:	int3   
   14000b42b:	int3   
   14000b42c:	int3   
   14000b42d:	int3   
   14000b42e:	int3   
   14000b42f:	int3   
   14000b430:	mov    DWORD PTR [rcx+0x140],edx
   14000b436:	ret    
   14000b437:	int3   
   14000b438:	int3   
   14000b439:	int3   
   14000b43a:	int3   
   14000b43b:	int3   
   14000b43c:	int3   
   14000b43d:	int3   
   14000b43e:	int3   
   14000b43f:	int3   
   14000b440:	mov    QWORD PTR [rsp+0x20],rbp
   14000b445:	push   rsi
   14000b446:	sub    rsp,0x20
   14000b44a:	mov    ebp,edx
   14000b44c:	mov    rsi,rcx
   14000b44f:	call   0x14000b100
   14000b454:	cmp    DWORD PTR [rsi+0x140],ebp
   14000b45a:	jl     0x14000b536
   14000b460:	mov    QWORD PTR [rsp+0x30],rbx
   14000b465:	mov    QWORD PTR [rsp+0x38],rdi
   14000b46a:	mov    QWORD PTR [rsp+0x40],r14
   14000b46f:	nop
   14000b470:	mov    eax,DWORD PTR [rsi+0x20]
   14000b473:	sub    eax,0x1
   14000b476:	movsxd rbx,eax
   14000b479:	js     0x14000b4d4
   14000b47b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b480:	mov    r14,QWORD PTR [rsi+0x28]
   14000b484:	lea    rax,[rbx+rbx*4]
   14000b488:	lea    rdi,[rax*8+0x0]
   14000b490:	mov    eax,DWORD PTR [rsi+0x140]
   14000b496:	cmp    DWORD PTR [r14+rdi*1+0x20],eax
   14000b49b:	jne    0x14000b4ce
   14000b49d:	mov    r14,QWORD PTR [r14+rdi*1+0x10]
   14000b4a2:	mov    rcx,r14
   14000b4a5:	mov    rax,QWORD PTR [r14]
   14000b4a8:	call   QWORD PTR [rax+0x20]
   14000b4ab:	test   rbx,rbx
   14000b4ae:	js     0x14000b4ce
   14000b4b0:	movsxd rcx,DWORD PTR [rsi+0x20]
   14000b4b4:	cmp    rbx,rcx
   14000b4b7:	jge    0x14000b4c4
   14000b4b9:	mov    rax,QWORD PTR [rsi+0x28]
   14000b4bd:	cmp    QWORD PTR [rax+rdi*1+0x10],r14
   14000b4c2:	je     0x14000b4ce
   14000b4c4:	sub    rdi,0x28
   14000b4c8:	sub    rbx,0x1
   14000b4cc:	jns    0x14000b4b4
   14000b4ce:	sub    rbx,0x1
   14000b4d2:	jns    0x14000b480
   14000b4d4:	mov    eax,DWORD PTR [rsi+0x20]
   14000b4d7:	sub    eax,0x1
   14000b4da:	movsxd rbx,eax
   14000b4dd:	js     0x14000b515
   14000b4df:	lea    rdi,[rbx+rbx*4]
   14000b4e3:	shl    rdi,0x3
   14000b4e7:	nop    WORD PTR [rax+rax*1+0x0]
   14000b4f0:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b4f4:	mov    eax,DWORD PTR [rsi+0x140]
   14000b4fa:	cmp    DWORD PTR [rcx+rdi*1+0x20],eax
   14000b4fe:	jne    0x14000b50b
   14000b500:	mov    rcx,QWORD PTR [rcx+rdi*1+0x10]
   14000b505:	mov    rax,QWORD PTR [rcx]
   14000b508:	call   QWORD PTR [rax+0x8]
   14000b50b:	sub    rdi,0x28
   14000b50f:	sub    rbx,0x1
   14000b513:	jns    0x14000b4f0
   14000b515:	dec    DWORD PTR [rsi+0x140]
   14000b51b:	cmp    DWORD PTR [rsi+0x140],ebp
   14000b521:	jge    0x14000b470
   14000b527:	mov    r14,QWORD PTR [rsp+0x40]
   14000b52c:	mov    rdi,QWORD PTR [rsp+0x38]
   14000b531:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b536:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b53b:	add    rsp,0x20
   14000b53f:	pop    rsi
   14000b540:	ret    
   14000b541:	int3   
   14000b542:	int3   
   14000b543:	int3   
   14000b544:	int3   
   14000b545:	int3   
   14000b546:	int3   
   14000b547:	int3   
   14000b548:	int3   
   14000b549:	int3   
   14000b54a:	int3   
   14000b54b:	int3   
   14000b54c:	int3   
   14000b54d:	int3   
   14000b54e:	int3   
   14000b54f:	int3   
   14000b550:	mov    QWORD PTR [rsp+0x8],rbx
   14000b555:	push   rbp
   14000b556:	push   rsi
   14000b557:	push   rdi
   14000b558:	push   r12
   14000b55a:	push   r13
   14000b55c:	push   r14
   14000b55e:	push   r15
   14000b560:	sub    rsp,0x30
   14000b564:	movzx  ebx,WORD PTR [rdx+0x32]
   14000b568:	mov    rsi,r8
   14000b56b:	mov    ecx,DWORD PTR [r8]
   14000b56e:	mov    eax,ebx
   14000b570:	sub    eax,ecx
   14000b572:	mov    r12,rdx
   14000b575:	test   eax,eax
   14000b577:	jle    0x14000b588
   14000b579:	mov    edx,ecx
   14000b57b:	mov    r8d,eax
   14000b57e:	mov    rcx,rsi
   14000b581:	call   0x1400038c0
   14000b586:	jmp    0x14000b591
   14000b588:	jns    0x14000b591
   14000b58a:	neg    eax
   14000b58c:	sub    ecx,eax
   14000b58e:	mov    DWORD PTR [r8],ecx
   14000b591:	xor    r8d,r8d
   14000b594:	mov    QWORD PTR [rsp+0x80],rbx
   14000b59c:	xor    ecx,ecx
   14000b59e:	mov    rdx,rbx
   14000b5a1:	test   ebx,ebx
   14000b5a3:	je     0x14000b5d0
   14000b5a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b5b0:	mov    rax,QWORD PTR [rsi+0x8]
   14000b5b4:	mov    DWORD PTR [rax+rcx*4],r8d
   14000b5b8:	inc    r8d
   14000b5bb:	inc    rcx
   14000b5be:	cmp    rcx,rbx
   14000b5c1:	jl     0x14000b5b0
   14000b5c3:	nop    DWORD PTR [rax+0x0]
   14000b5c7:	nop    WORD PTR [rax+rax*1+0x0]
   14000b5d0:	mov    r15d,0x1
   14000b5d6:	xor    r13b,r13b
   14000b5d9:	mov    DWORD PTR [rsp+0x78],r15d
   14000b5de:	mov    r14d,r15d
   14000b5e1:	cmp    r15,rdx
   14000b5e4:	jae    0x14000b677
   14000b5ea:	nop    WORD PTR [rax+rax*1+0x0]
   14000b5f0:	test   r15d,r15d
   14000b5f3:	jle    0x14000b65e
   14000b5f5:	movsxd rax,r15d
   14000b5f8:	xor    ebx,ebx
   14000b5fa:	mov    ebp,r15d
   14000b5fd:	xor    edi,edi
   14000b5ff:	lea    rax,[rax*4+0x0]
   14000b607:	mov    r15,rax
   14000b60a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b610:	mov    rax,QWORD PTR [rsi+0x8]
   14000b614:	mov    rcx,r12
   14000b617:	lea    r8,[rdi+rax*1]
   14000b61b:	lea    rdx,[r15+rax*1]
   14000b61f:	call   0x140009240
   14000b624:	test   al,al
   14000b626:	je     0x14000b643
   14000b628:	mov    rax,QWORD PTR [rsi+0x8]
   14000b62c:	mov    r13b,0x1
   14000b62f:	mov    edx,DWORD PTR [rax+r14*4]
   14000b633:	lea    rcx,[rax+r14*4]
   14000b637:	mov    eax,DWORD PTR [rbx+rax*1]
   14000b63a:	mov    DWORD PTR [rcx],eax
   14000b63c:	mov    rax,QWORD PTR [rsi+0x8]
   14000b640:	mov    DWORD PTR [rbx+rax*1],edx
   14000b643:	add    rdi,0x4
   14000b647:	add    rbx,0x4
   14000b64b:	sub    rbp,0x1
   14000b64f:	jne    0x14000b610
   14000b651:	mov    r15d,DWORD PTR [rsp+0x78]
   14000b656:	mov    rdx,QWORD PTR [rsp+0x80]
   14000b65e:	inc    r15d
   14000b661:	inc    r14
   14000b664:	mov    DWORD PTR [rsp+0x78],r15d
   14000b669:	cmp    r14,rdx
   14000b66c:	jl     0x14000b5f0
   14000b66e:	test   r13b,r13b
   14000b671:	jne    0x14000b5d0
   14000b677:	mov    r14,QWORD PTR [rsp+0x80]
   14000b67f:	nop
   14000b680:	mov    edi,0x1
   14000b685:	mov    r15b,0x1
   14000b688:	cmp    rdi,r14
   14000b68b:	jae    0x14000b75e
   14000b691:	mov    rax,QWORD PTR [rsi+0x8]
   14000b695:	mov    ecx,DWORD PTR [rax+rdi*4-0x4]
   14000b699:	mov    ebp,DWORD PTR [rax+rdi*4]
   14000b69c:	cmp    ebp,ecx
   14000b69e:	jg     0x14000b749
   14000b6a4:	mov    WORD PTR [rsp+0x78],cx
   14000b6a9:	lea    rdx,[rsp+0x78]
   14000b6ae:	lea    rcx,[r12+0x18]
   14000b6b3:	call   0x14001db60
   14000b6b8:	lea    rdx,[rsp+0x80]
   14000b6c0:	mov    WORD PTR [rsp+0x80],bp
   14000b6c8:	lea    rcx,[r12+0x18]
   14000b6cd:	mov    r13,rax
   14000b6d0:	call   0x14001db60
   14000b6d5:	mov    r8,rax
   14000b6d8:	lea    rdx,[rsp+0x88]
   14000b6e0:	lea    rcx,[r12+0x18]
   14000b6e5:	call   0x14001c980
   14000b6ea:	movzx  ebx,WORD PTR [rsp+0x88]
   14000b6f2:	mov    edx,DWORD PTR [r12]
   14000b6f6:	cmp    edx,ebx
   14000b6f8:	jg     0x14000b70e
   14000b6fa:	lea    r8d,[rbx+0x1]
   14000b6fe:	cmp    edx,r8d
   14000b701:	jge    0x14000b70e
   14000b703:	sub    r8d,edx
   14000b706:	mov    rcx,r12
   14000b709:	call   0x140009c90
   14000b70e:	imul   rcx,rbx,0x78
   14000b712:	mov    r8,r13
   14000b715:	lea    rdx,[rsp+0x20]
   14000b71a:	add    rcx,0x28
   14000b71e:	add    rcx,QWORD PTR [r12+0x8]
   14000b723:	call   0x14001ce30
   14000b728:	mov    ecx,0xffff
   14000b72d:	cmp    WORD PTR [rax],cx
   14000b730:	jne    0x14000b749
   14000b732:	mov    rax,QWORD PTR [rsi+0x8]
   14000b736:	xor    r15b,r15b
   14000b739:	mov    ecx,DWORD PTR [rax+rdi*4]
   14000b73c:	lea    rdx,[rax+rdi*4]
   14000b740:	mov    eax,DWORD PTR [rax+rdi*4-0x4]
   14000b744:	mov    DWORD PTR [rdx],eax
   14000b746:	mov    DWORD PTR [rdx-0x4],ecx
   14000b749:	inc    rdi
   14000b74c:	cmp    rdi,r14
   14000b74f:	jl     0x14000b691
   14000b755:	test   r15b,r15b
   14000b758:	je     0x14000b680
   14000b75e:	mov    rbx,QWORD PTR [rsp+0x70]
   14000b763:	add    rsp,0x30
   14000b767:	pop    r15
   14000b769:	pop    r14
   14000b76b:	pop    r13
   14000b76d:	pop    r12
   14000b76f:	pop    rdi
   14000b770:	pop    rsi
   14000b771:	pop    rbp
   14000b772:	ret    
   14000b773:	int3   
   14000b774:	int3   
   14000b775:	int3   
   14000b776:	int3   
   14000b777:	int3   
   14000b778:	int3   
   14000b779:	int3   
   14000b77a:	int3   
   14000b77b:	int3   
   14000b77c:	int3   
   14000b77d:	int3   
   14000b77e:	int3   
   14000b77f:	int3   
   14000b780:	mov    QWORD PTR [rsp+0x10],rbx
   14000b785:	push   rdi
   14000b786:	sub    rsp,0x20
   14000b78a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000b78e:	xor    ebx,ebx
   14000b790:	mov    rdi,rcx
   14000b793:	test   eax,eax
   14000b795:	jle    0x14000b849
   14000b79b:	mov    r9,QWORD PTR [rcx+0x10]
   14000b79f:	mov    r8d,ebx
   14000b7a2:	mov    rcx,rax
   14000b7a5:	lea    rax,[r9+0x8]
   14000b7a9:	nop    DWORD PTR [rax+0x0]
   14000b7b0:	cmp    rdx,QWORD PTR [rax]
   14000b7b3:	je     0x14000b7ce
   14000b7b5:	inc    ebx
   14000b7b7:	inc    r8
   14000b7ba:	add    rax,0x18
   14000b7be:	cmp    r8,rcx
   14000b7c1:	jl     0x14000b7b0
   14000b7c3:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b7c8:	add    rsp,0x20
   14000b7cc:	pop    rdi
   14000b7cd:	ret    
   14000b7ce:	movsxd rax,ebx
   14000b7d1:	mov    QWORD PTR [rsp+0x30],rsi
   14000b7d6:	lea    rcx,[rax+rax*2]
   14000b7da:	dec    DWORD PTR [r9+rcx*8+0x10]
   14000b7df:	lea    rsi,[rcx*8+0x0]
   14000b7e7:	cmp    DWORD PTR [r9+rsi*1+0x10],0x0
   14000b7ed:	jg     0x14000b844
   14000b7ef:	mov    rax,QWORD PTR [rip+0x26b9a]        # 0x140032390
   14000b7f6:	mov    rdx,QWORD PTR [rdi+0x10]
   14000b7fa:	mov    rcx,QWORD PTR [rax]
   14000b7fd:	mov    rdx,QWORD PTR [rsi+rdx*1]
   14000b801:	mov    rax,QWORD PTR [rcx]
   14000b804:	call   QWORD PTR [rax+0x28]
   14000b807:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b80b:	mov    rcx,QWORD PTR [rsi+rcx*1+0x8]
   14000b810:	call   QWORD PTR [rip+0x26b22]        # 0x140032338
   14000b816:	mov    eax,DWORD PTR [rdi+0x8]
   14000b819:	test   eax,eax
   14000b81b:	jle    0x14000b844
   14000b81d:	dec    eax
   14000b81f:	cmp    ebx,eax
   14000b821:	je     0x14000b841
   14000b823:	mov    rdx,QWORD PTR [rdi+0x10]
   14000b827:	cdqe   
   14000b829:	lea    rcx,[rax+rax*2]
   14000b82d:	movups xmm0,XMMWORD PTR [rdx+rcx*8]
   14000b831:	movups XMMWORD PTR [rdx+rsi*1],xmm0
   14000b835:	movsd  xmm1,QWORD PTR [rdx+rcx*8+0x10]
   14000b83b:	movsd  QWORD PTR [rdx+rsi*1+0x10],xmm1
   14000b841:	dec    DWORD PTR [rdi+0x8]
   14000b844:	mov    rsi,QWORD PTR [rsp+0x30]
   14000b849:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b84e:	add    rsp,0x20
   14000b852:	pop    rdi
   14000b853:	ret    
   14000b854:	int3   
   14000b855:	int3   
   14000b856:	int3   
   14000b857:	int3   
   14000b858:	int3   
   14000b859:	int3   
   14000b85a:	int3   
   14000b85b:	int3   
   14000b85c:	int3   
   14000b85d:	int3   
   14000b85e:	int3   
   14000b85f:	int3   
   14000b860:	rex push rbx
   14000b862:	sub    rsp,0x280
   14000b869:	mov    r9d,0x200
   14000b86f:	lea    r8,[rsp+0x80]
   14000b877:	lea    rdx,[rip+0x293b2]        # 0x140034c30
   14000b87e:	call   QWORD PTR [rip+0x26c7c]        # 0x140032500
   14000b884:	mov    r9d,0x1
   14000b88a:	lea    rcx,[rsp+0x40]
   14000b88f:	xor    r8d,r8d
   14000b892:	xor    edx,edx
   14000b894:	call   0x140020850
   14000b899:	mov    r8d,0x5f5e100
   14000b89f:	lea    rdx,[rsp+0x40]
   14000b8a4:	lea    rcx,[rsp+0x80]
   14000b8ac:	call   0x140022440
   14000b8b1:	test   eax,eax
   14000b8b3:	jne    0x14000b916
   14000b8b5:	lea    ecx,[rax+0x14]
   14000b8b8:	call   0x14001dc70
   14000b8bd:	test   rax,rax
   14000b8c0:	je     0x14000b8d6
   14000b8c2:	lea    rdx,[rip+0x29377]        # 0x140034c40
   14000b8c9:	mov    rcx,rax
   14000b8cc:	call   0x14001dbb0
   14000b8d1:	mov    rbx,rax
   14000b8d4:	jmp    0x14000b8d8
   14000b8d6:	xor    ebx,ebx
   14000b8d8:	mov    QWORD PTR [rsp+0x30],0x0
   14000b8e1:	lea    r8,[rsp+0x40]
   14000b8e6:	mov    QWORD PTR [rsp+0x28],0x0
   14000b8ef:	lea    rdx,[rip+0x2934a]        # 0x140034c40
   14000b8f6:	xor    r9d,r9d
   14000b8f9:	mov    QWORD PTR [rsp+0x20],0x0
   14000b902:	mov    rcx,rbx
   14000b905:	call   0x14001ecb0
   14000b90a:	test   al,al
   14000b90c:	jne    0x14000b918
   14000b90e:	mov    rcx,rbx
   14000b911:	call   0x140020790
   14000b916:	xor    ebx,ebx
   14000b918:	test   DWORD PTR [rsp+0x4c],0xc0000000
   14000b920:	jne    0x14000b93d
   14000b922:	mov    rdx,QWORD PTR [rsp+0x40]
   14000b927:	test   rdx,rdx
   14000b92a:	je     0x14000b93d
   14000b92c:	mov    rcx,QWORD PTR [rip+0x26a5d]        # 0x140032390
   14000b933:	mov    rcx,QWORD PTR [rcx]
   14000b936:	mov    r8,QWORD PTR [rcx]
   14000b939:	call   QWORD PTR [r8+0x28]
   14000b93d:	mov    rax,rbx
   14000b940:	add    rsp,0x280
   14000b947:	pop    rbx
   14000b948:	ret    
   14000b949:	int3   
   14000b94a:	int3   
   14000b94b:	int3   
   14000b94c:	int3   
   14000b94d:	int3   
   14000b94e:	int3   
   14000b94f:	int3   
   14000b950:	mov    QWORD PTR [rsp+0x10],rbx
   14000b955:	push   rdi
   14000b956:	sub    rsp,0x20
   14000b95a:	cmp    BYTE PTR [rip+0x3b7bb],0x0        # 0x14004711c
   14000b961:	mov    rdi,rcx
   14000b964:	jne    0x14000ba82
   14000b96a:	lea    rcx,[rip+0x2941f]        # 0x140034d90
   14000b971:	call   QWORD PTR [rip+0x268c1]        # 0x140032238
   14000b977:	test   rax,rax
   14000b97a:	je     0x14000b98a
   14000b97c:	mov    BYTE PTR [rip+0x3a73d],0x0        # 0x1400460c0
   14000b983:	mov    BYTE PTR [rip+0x3a737],0x0        # 0x1400460c1
   14000b98a:	lea    rcx,[rip+0x29417]        # 0x140034da8
   14000b991:	call   QWORD PTR [rip+0x268a1]        # 0x140032238
   14000b997:	test   rax,rax
   14000b99a:	je     0x14000b9aa
   14000b99c:	mov    BYTE PTR [rip+0x3a71d],0x1        # 0x1400460c0
   14000b9a3:	mov    BYTE PTR [rip+0x3a717],0x1        # 0x1400460c1
   14000b9aa:	call   QWORD PTR [rip+0x26b08]        # 0x1400324b8
   14000b9b0:	lea    rdx,[rip+0x29409]        # 0x140034dc0
   14000b9b7:	mov    rcx,rax
   14000b9ba:	mov    r8,QWORD PTR [rax]
   14000b9bd:	call   QWORD PTR [r8+0x20]
   14000b9c1:	movzx  ecx,BYTE PTR [rip+0x3a6f8]        # 0x1400460c0
   14000b9c8:	xor    ebx,ebx
   14000b9ca:	test   al,al
   14000b9cc:	cmovne ecx,ebx
   14000b9cf:	mov    BYTE PTR [rip+0x3a6eb],cl        # 0x1400460c0
   14000b9d5:	call   QWORD PTR [rip+0x26add]        # 0x1400324b8
   14000b9db:	lea    rdx,[rip+0x293f6]        # 0x140034dd8
   14000b9e2:	mov    rcx,rax
   14000b9e5:	mov    r8,QWORD PTR [rax]
   14000b9e8:	call   QWORD PTR [r8+0x20]
   14000b9ec:	movzx  ecx,BYTE PTR [rip+0x3a6ce]        # 0x1400460c1
   14000b9f3:	test   al,al
   14000b9f5:	cmovne ecx,ebx
   14000b9f8:	mov    BYTE PTR [rip+0x3a6c3],cl        # 0x1400460c1
   14000b9fe:	call   QWORD PTR [rip+0x26ab4]        # 0x1400324b8
   14000ba04:	lea    rdx,[rip+0x293e5]        # 0x140034df0
   14000ba0b:	mov    rcx,rax
   14000ba0e:	mov    r8,QWORD PTR [rax]
   14000ba11:	call   QWORD PTR [r8+0x20]
   14000ba15:	movzx  ecx,BYTE PTR [rip+0x3a6a4]        # 0x1400460c0
   14000ba1c:	mov    ebx,0x1
   14000ba21:	test   al,al
   14000ba23:	cmovne ecx,ebx
   14000ba26:	mov    BYTE PTR [rip+0x3a694],cl        # 0x1400460c0
   14000ba2c:	call   QWORD PTR [rip+0x26a86]        # 0x1400324b8
   14000ba32:	lea    rdx,[rip+0x293cf]        # 0x140034e08
   14000ba39:	mov    rcx,rax
   14000ba3c:	mov    r8,QWORD PTR [rax]
   14000ba3f:	call   QWORD PTR [r8+0x20]
   14000ba43:	movzx  ecx,BYTE PTR [rip+0x3a677]        # 0x1400460c1
   14000ba4a:	test   al,al
   14000ba4c:	cmovne ecx,ebx
   14000ba4f:	mov    BYTE PTR [rip+0x3a66c],cl        # 0x1400460c1
   14000ba55:	call   QWORD PTR [rip+0x26a5d]        # 0x1400324b8
   14000ba5b:	lea    r8,[rip+0x26d3e]        # 0x1400327a0
   14000ba62:	mov    rcx,rax
   14000ba65:	lea    rdx,[rip+0x293b4]        # 0x140034e20
   14000ba6c:	mov    r9,QWORD PTR [rax]
   14000ba6f:	call   QWORD PTR [r9+0x68]
   14000ba73:	mov    QWORD PTR [rip+0x3b6a6],rax        # 0x140047120
   14000ba7a:	mov    BYTE PTR [rip+0x3b69c],bl        # 0x14004711c
   14000ba80:	jmp    0x14000ba89
   14000ba82:	mov    rax,QWORD PTR [rip+0x3b697]        # 0x140047120
   14000ba89:	test   rax,rax
   14000ba8c:	je     0x14000bab1
   14000ba8e:	cmp    BYTE PTR [rax],0x0
   14000ba91:	je     0x14000bab1
   14000ba93:	mov    rdx,rax
   14000ba96:	mov    rcx,rdi
   14000ba99:	call   QWORD PTR [rip+0x26ac1]        # 0x140032560
   14000ba9f:	test   eax,eax
   14000baa1:	jne    0x14000bab1
   14000baa3:	mov    rax,rdi
   14000baa6:	mov    rbx,QWORD PTR [rsp+0x38]
   14000baab:	add    rsp,0x20
   14000baaf:	pop    rdi
   14000bab0:	ret    
   14000bab1:	cmp    BYTE PTR [rip+0x3a608],0x0        # 0x1400460c0
   14000bab8:	mov    QWORD PTR [rsp+0x30],rsi
   14000babd:	jne    0x14000bae9
   14000babf:	lea    rbx,[rip+0x2918a]        # 0x140034c50
   14000bac6:	lea    rsi,[rip+0x291cb]        # 0x140034c98
   14000bacd:	nop    DWORD PTR [rax]
   14000bad0:	mov    rdx,QWORD PTR [rbx]
   14000bad3:	mov    rcx,rdi
   14000bad6:	call   QWORD PTR [rip+0x26a84]        # 0x140032560
   14000badc:	test   eax,eax
   14000bade:	je     0x14000bb2c
   14000bae0:	add    rbx,0x8
   14000bae4:	cmp    rbx,rsi
   14000bae7:	jl     0x14000bad0
   14000bae9:	cmp    BYTE PTR [rip+0x3a5d1],0x0        # 0x1400460c1
   14000baf0:	jne    0x14000bb19
   14000baf2:	lea    rbx,[rip+0x2920f]        # 0x140034d08
   14000baf9:	lea    rsi,[rip+0x29238]        # 0x140034d38
   14000bb00:	mov    rdx,QWORD PTR [rbx]
   14000bb03:	mov    rcx,rdi
   14000bb06:	call   QWORD PTR [rip+0x26a54]        # 0x140032560
   14000bb0c:	test   eax,eax
   14000bb0e:	je     0x14000bb43
   14000bb10:	add    rbx,0x8
   14000bb14:	cmp    rbx,rsi
   14000bb17:	jl     0x14000bb00
   14000bb19:	mov    rax,rdi
   14000bb1c:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bb21:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bb26:	add    rsp,0x20
   14000bb2a:	pop    rdi
   14000bb2b:	ret    
   14000bb2c:	lea    rax,[rip+0x29305]        # 0x140034e38
   14000bb33:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bb38:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bb3d:	add    rsp,0x20
   14000bb41:	pop    rdi
   14000bb42:	ret    
   14000bb43:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bb48:	lea    rax,[rip+0x292f9]        # 0x140034e48
   14000bb4f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bb54:	add    rsp,0x20
   14000bb58:	pop    rdi
   14000bb59:	ret    
   14000bb5a:	int3   
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	lea    rax,[rip+0x2a7f1]        # 0x140036358
   14000bb67:	mov    QWORD PTR [rcx],rax
   14000bb6a:	mov    rax,QWORD PTR [rip+0x3b987]        # 0x1400474f8
   14000bb71:	mov    QWORD PTR [rcx+0x8],rax
   14000bb75:	mov    DWORD PTR [rcx+0x10],edx
   14000bb78:	mov    eax,DWORD PTR [rip+0x3b982]        # 0x140047500
   14000bb7e:	mov    QWORD PTR [rip+0x3b973],rcx        # 0x1400474f8
   14000bb85:	mov    DWORD PTR [rcx+0x14],eax
   14000bb88:	mov    rax,rcx
   14000bb8b:	inc    DWORD PTR [rip+0x3b96f]        # 0x140047500
   14000bb91:	ret    
   14000bb92:	int3   
   14000bb93:	int3   
   14000bb94:	int3   
   14000bb95:	int3   
   14000bb96:	int3   
   14000bb97:	int3   
   14000bb98:	int3   
   14000bb99:	int3   
   14000bb9a:	int3   
   14000bb9b:	int3   
   14000bb9c:	int3   
   14000bb9d:	int3   
   14000bb9e:	int3   
   14000bb9f:	int3   
   14000bba0:	rex push rbp
   14000bba2:	sub    rsp,0x30
   14000bba6:	lea    rbp,[rsp+0x30]
   14000bbab:	movsxd rax,DWORD PTR [rip+0x3b94e]        # 0x140047500
   14000bbb2:	mov    QWORD PTR [rbp+0x10],rbx
   14000bbb6:	mov    QWORD PTR [rbp+0x18],rsi
   14000bbba:	mov    QWORD PTR [rbp+0x20],rdi
   14000bbbe:	mov    QWORD PTR [rbp+0x28],r14
   14000bbc2:	test   eax,eax
   14000bbc4:	je     0x14000bc9a
   14000bbca:	mov    rsi,rax
   14000bbcd:	lea    rax,[rax*8+0x1f]
   14000bbd5:	and    rax,0xfffffffffffffff0
   14000bbd9:	lea    rcx,[rax+0xf]
   14000bbdd:	cmp    rcx,rax
   14000bbe0:	ja     0x14000bbec
   14000bbe2:	movabs rcx,0xffffffffffffff0
   14000bbec:	and    rcx,0xfffffffffffffff0
   14000bbf0:	mov    rax,rcx
   14000bbf3:	call   0x1400263c0
   14000bbf8:	sub    rsp,rcx
   14000bbfb:	xor    ebx,ebx
   14000bbfd:	mov    rcx,QWORD PTR [rip+0x3b8f4]        # 0x1400474f8
   14000bc04:	mov    eax,ebx
   14000bc06:	lea    r14,[rsp+0x30]
   14000bc0b:	add    r14,0x10
   14000bc0f:	and    r14,0xffffffffffffffef
   14000bc13:	test   rsi,rsi
   14000bc16:	jle    0x14000bc30
   14000bc18:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bc20:	mov    QWORD PTR [r14+rax*8],rcx
   14000bc24:	inc    rax
   14000bc27:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bc2b:	cmp    rax,rsi
   14000bc2e:	jl     0x14000bc20
   14000bc30:	lea    r9,[rip+0x79]        # 0x14000bcb0
   14000bc37:	mov    QWORD PTR [rsp+0x20],rbx
   14000bc3c:	mov    r8d,0x8
   14000bc42:	mov    rdx,rsi
   14000bc45:	mov    rcx,r14
   14000bc48:	call   QWORD PTR [rip+0x26652]        # 0x1400322a0
   14000bc4e:	mov    DWORD PTR [rip+0x3b8ac],ebx        # 0x140047500
   14000bc54:	mov    QWORD PTR [rip+0x3b89d],rbx        # 0x1400474f8
   14000bc5b:	test   rsi,rsi
   14000bc5e:	jle    0x14000bc9a
   14000bc60:	mov    rdi,QWORD PTR [r14+rbx*8]
   14000bc64:	mov    rcx,rdi
   14000bc67:	mov    rax,QWORD PTR [rdi]
   14000bc6a:	call   QWORD PTR [rax]
   14000bc6c:	cmp    eax,0x1
   14000bc6f:	jne    0x14000bc92
   14000bc71:	mov    rax,QWORD PTR [rip+0x3b880]        # 0x1400474f8
   14000bc78:	mov    QWORD PTR [rdi+0x8],rax
   14000bc7c:	mov    eax,DWORD PTR [rip+0x3b87e]        # 0x140047500
   14000bc82:	mov    QWORD PTR [rip+0x3b86f],rdi        # 0x1400474f8
   14000bc89:	mov    DWORD PTR [rdi+0x14],eax
   14000bc8c:	inc    DWORD PTR [rip+0x3b86e]        # 0x140047500
   14000bc92:	inc    rbx
   14000bc95:	cmp    rbx,rsi
   14000bc98:	jl     0x14000bc60
   14000bc9a:	mov    rbx,QWORD PTR [rbp+0x10]
   14000bc9e:	mov    rsi,QWORD PTR [rbp+0x18]
   14000bca2:	mov    rdi,QWORD PTR [rbp+0x20]
   14000bca6:	mov    r14,QWORD PTR [rbp+0x28]
   14000bcaa:	mov    rsp,rbp
   14000bcad:	pop    rbp
   14000bcae:	ret    
   14000bcaf:	int3   
   14000bcb0:	mov    r9,QWORD PTR [rdx]
   14000bcb3:	mov    rdx,QWORD PTR [r8]
   14000bcb6:	mov    eax,DWORD PTR [r9+0x10]
   14000bcba:	mov    ecx,DWORD PTR [rdx+0x10]
   14000bcbd:	cmp    eax,ecx
   14000bcbf:	jle    0x14000bcc7
   14000bcc1:	mov    eax,0x1
   14000bcc6:	ret    
   14000bcc7:	jge    0x14000bccd
   14000bcc9:	or     eax,0xffffffff
   14000bccc:	ret    
   14000bccd:	mov    ecx,DWORD PTR [r9+0x14]
   14000bcd1:	mov    edx,DWORD PTR [rdx+0x14]
   14000bcd4:	cmp    ecx,edx
   14000bcd6:	jg     0x14000bcc1
   14000bcd8:	xor    eax,eax
   14000bcda:	cmp    ecx,edx
   14000bcdc:	setge  al
   14000bcdf:	dec    eax
   14000bce1:	ret    
   14000bce2:	int3   
   14000bce3:	int3   
   14000bce4:	int3   
   14000bce5:	int3   
   14000bce6:	int3   
   14000bce7:	int3   
   14000bce8:	int3   
   14000bce9:	int3   
   14000bcea:	int3   
   14000bceb:	int3   
   14000bcec:	int3   
   14000bced:	int3   
   14000bcee:	int3   
   14000bcef:	int3   
   14000bcf0:	push   r14
   14000bcf2:	sub    rsp,0x60
   14000bcf6:	mov    eax,DWORD PTR [rip+0x3b8ac]        # 0x1400475a8
   14000bcfc:	mov    r14,rcx
   14000bcff:	test   eax,eax
   14000bd01:	jns    0x14000bdae
   14000bd07:	mov    rax,QWORD PTR [rip+0x2667a]        # 0x140032388
   14000bd0e:	mov    edx,0x4
   14000bd13:	mov    ecx,DWORD PTR [rax]
   14000bd15:	call   QWORD PTR [rip+0x2678d]        # 0x1400324a8
   14000bd1b:	test   al,al
   14000bd1d:	je     0x14000bd69
   14000bd1f:	lea    rax,[rip+0x2a69a]        # 0x1400363c0
   14000bd26:	mov    DWORD PTR [rsp+0x38],0x1e2
   14000bd2e:	mov    QWORD PTR [rsp+0x30],rax
   14000bd33:	lea    r9,[rip+0x2a626]        # 0x140036360
   14000bd3a:	lea    rax,[rip+0x2a65f]        # 0x1400363a0
   14000bd41:	mov    edx,0x4
   14000bd46:	mov    QWORD PTR [rsp+0x40],rax
   14000bd4b:	lea    r8,[rsp+0x30]
   14000bd50:	mov    eax,DWORD PTR [rip+0x3b852]        # 0x1400475a8
   14000bd56:	mov    DWORD PTR [rsp+0x20],eax
   14000bd5a:	mov    rax,QWORD PTR [rip+0x26627]        # 0x140032388
   14000bd61:	mov    ecx,DWORD PTR [rax]
   14000bd63:	call   QWORD PTR [rip+0x2672f]        # 0x140032498
   14000bd69:	call   QWORD PTR [rip+0x26819]        # 0x140032588
   14000bd6f:	test   al,al
   14000bd71:	je     0x14000bda2
   14000bd73:	call   QWORD PTR [rip+0x26707]        # 0x140032480
   14000bd79:	lea    rcx,[rip+0x26a2c]        # 0x1400327ac
   14000bd80:	xorps  xmm0,xmm0
   14000bd83:	lea    rdx,[rsp+0x30]
   14000bd88:	mov    DWORD PTR [rsp+0x38],eax
   14000bd8c:	mov    QWORD PTR [rsp+0x30],rcx
   14000bd91:	mov    r8b,0x1
   14000bd94:	xor    ecx,ecx
   14000bd96:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000bd9c:	call   QWORD PTR [rip+0x266d6]        # 0x140032478
   14000bda2:	mov    ecx,0x1
   14000bda7:	call   QWORD PTR [rip+0x2649b]        # 0x140032248
   14000bdad:	int3   
   14000bdae:	mov    QWORD PTR [rsp+0x70],rbx
   14000bdb3:	mov    QWORD PTR [rsp+0x78],rbp
   14000bdb8:	mov    QWORD PTR [rsp+0x80],rsi
   14000bdc0:	mov    QWORD PTR [rsp+0x88],rdi
   14000bdc8:	mov    QWORD PTR [rsp+0x58],r12
   14000bdcd:	mov    QWORD PTR [rsp+0x50],r15
   14000bdd2:	movsxd r15,edx
   14000bdd5:	test   eax,eax
   14000bdd7:	jne    0x14000be6d
   14000bddd:	test   edx,edx
   14000bddf:	jle    0x14000bf0e
   14000bde5:	lea    r12,[rip+0x29074]        # 0x140034e60
   14000bdec:	lea    rbp,[rip+0x3b7bd]        # 0x1400475b0
   14000bdf3:	nop    DWORD PTR [rax+0x0]
   14000bdf7:	nop    WORD PTR [rax+rax*1+0x0]
   14000be00:	xor    edi,edi
   14000be02:	mov    rbx,r12
   14000be05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000be10:	mov    rsi,QWORD PTR [rbx+0x8]
   14000be14:	mov    rax,QWORD PTR [r14]
   14000be17:	cmp    QWORD PTR [rsi],0x0
   14000be1b:	jne    0x14000be50
   14000be1d:	mov    rcx,QWORD PTR [rbx]
   14000be20:	xor    edx,edx
   14000be22:	call   rax
   14000be24:	mov    QWORD PTR [rsi],rax
   14000be27:	test   rax,rax
   14000be2a:	je     0x14000be50
   14000be2c:	movsxd rax,DWORD PTR [rip+0x3b775]        # 0x1400475a8
   14000be33:	mov    rcx,rax
   14000be36:	add    rcx,rcx
   14000be39:	inc    eax
   14000be3b:	mov    DWORD PTR [rip+0x3b767],eax        # 0x1400475a8
   14000be41:	mov    eax,DWORD PTR [rip+0x3b75d]        # 0x1400475a4
   14000be47:	mov    DWORD PTR [rbp+rcx*8+0x8],eax
   14000be4b:	mov    QWORD PTR [rbp+rcx*8+0x0],rsi
   14000be50:	inc    edi
   14000be52:	add    rbx,0x10
   14000be56:	cmp    edi,0x89
   14000be5c:	jb     0x14000be10
   14000be5e:	add    r14,0x8
   14000be62:	sub    r15,0x1
   14000be66:	jne    0x14000be00
   14000be68:	jmp    0x14000bf0e
   14000be6d:	test   edx,edx
   14000be6f:	jle    0x14000bf0e
   14000be75:	lea    r12,[rip+0x28fe4]        # 0x140034e60
   14000be7c:	lea    rbp,[rip+0x3b72d]        # 0x1400475b0
   14000be83:	xor    edi,edi
   14000be85:	mov    rsi,r12
   14000be88:	nop    DWORD PTR [rax+rax*1+0x0]
   14000be90:	mov    rax,QWORD PTR [r14]
   14000be93:	xor    edx,edx
   14000be95:	mov    rcx,QWORD PTR [rsi]
   14000be98:	mov    rbx,QWORD PTR [rsi+0x8]
   14000be9c:	call   rax
   14000be9e:	movsxd r8,DWORD PTR [rip+0x3b703]        # 0x1400475a8
   14000bea5:	xor    dl,dl
   14000bea7:	mov    QWORD PTR [rbx],rax
   14000beaa:	test   r8d,r8d
   14000bead:	jle    0x14000becd
   14000beaf:	mov    rax,rbp
   14000beb2:	mov    ecx,r8d
   14000beb5:	cmp    QWORD PTR [rax],rbx
   14000beb8:	jne    0x14000bebf
   14000beba:	mov    QWORD PTR [rax],rbx
   14000bebd:	mov    dl,0x1
   14000bebf:	add    rax,0x10
   14000bec3:	sub    rcx,0x1
   14000bec7:	jne    0x14000beb5
   14000bec9:	test   dl,dl
   14000becb:	jne    0x14000bef2
   14000becd:	cmp    QWORD PTR [rbx],0x0
   14000bed1:	je     0x14000bef2
   14000bed3:	mov    eax,DWORD PTR [rip+0x3b6cb]        # 0x1400475a4
   14000bed9:	mov    rcx,r8
   14000bedc:	add    rcx,rcx
   14000bedf:	inc    r8d
   14000bee2:	mov    DWORD PTR [rip+0x3b6bf],r8d        # 0x1400475a8
   14000bee9:	mov    QWORD PTR [rbp+rcx*8+0x0],rbx
   14000beee:	mov    DWORD PTR [rbp+rcx*8+0x8],eax
   14000bef2:	inc    edi
   14000bef4:	add    rsi,0x10
   14000bef8:	cmp    edi,0x89
   14000befe:	jb     0x14000be90
   14000bf00:	add    r14,0x8
   14000bf04:	sub    r15,0x1
   14000bf08:	jne    0x14000be83
   14000bf0e:	inc    DWORD PTR [rip+0x3b690]        # 0x1400475a4
   14000bf14:	mov    r15,QWORD PTR [rsp+0x50]
   14000bf19:	mov    r12,QWORD PTR [rsp+0x58]
   14000bf1e:	mov    rdi,QWORD PTR [rsp+0x88]
   14000bf26:	mov    rsi,QWORD PTR [rsp+0x80]
   14000bf2e:	mov    rbp,QWORD PTR [rsp+0x78]
   14000bf33:	mov    rbx,QWORD PTR [rsp+0x70]
   14000bf38:	add    rsp,0x60
   14000bf3c:	pop    r14
   14000bf3e:	jmp    0x14000bba0
   14000bf43:	int3   
   14000bf44:	int3   
   14000bf45:	int3   
   14000bf46:	int3   
   14000bf47:	int3   
   14000bf48:	int3   
   14000bf49:	int3   
   14000bf4a:	int3   
   14000bf4b:	int3   
   14000bf4c:	int3   
   14000bf4d:	int3   
   14000bf4e:	int3   
   14000bf4f:	int3   
   14000bf50:	mov    edx,DWORD PTR [rip+0x3b64e]        # 0x1400475a4
   14000bf56:	sub    edx,0x1
   14000bf59:	mov    DWORD PTR [rip+0x3b645],edx        # 0x1400475a4
   14000bf5f:	js     0x14000bf8d
   14000bf61:	mov    ecx,DWORD PTR [rip+0x3b641]        # 0x1400475a8
   14000bf67:	test   ecx,ecx
   14000bf69:	jle    0x14000bf8d
   14000bf6b:	lea    rax,[rip+0x3b63e]        # 0x1400475b0
   14000bf72:	mov    r8d,ecx
   14000bf75:	xor    r9d,r9d
   14000bf78:	cmp    DWORD PTR [rax+0x8],edx
   14000bf7b:	jne    0x14000bf83
   14000bf7d:	mov    rcx,QWORD PTR [rax]
   14000bf80:	mov    QWORD PTR [rcx],r9
   14000bf83:	add    rax,0x10
   14000bf87:	sub    r8,0x1
   14000bf8b:	jne    0x14000bf78
   14000bf8d:	ret    
   14000bf8e:	int3   
   14000bf8f:	int3   
   14000bf90:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf95:	mov    QWORD PTR [rsp+0x10],rbp
   14000bf9a:	mov    QWORD PTR [rsp+0x18],rsi
   14000bf9f:	push   rdi
   14000bfa0:	push   r14
   14000bfa2:	push   r15
   14000bfa4:	sub    rsp,0x20
   14000bfa8:	mov    rbp,rdx
   14000bfab:	lea    rdi,[rip+0x28eae]        # 0x140034e60
   14000bfb2:	mov    r14,rcx
   14000bfb5:	lea    r15,[rip+0x3b5f4]        # 0x1400475b0
   14000bfbc:	xor    esi,esi
   14000bfbe:	xchg   ax,ax
   14000bfc0:	test   rbp,rbp
   14000bfc3:	je     0x14000bfe7
   14000bfc5:	mov    rax,QWORD PTR [rdi]
   14000bfc8:	mov    r8,rbp
   14000bfcb:	sub    r8,rax
   14000bfce:	xchg   ax,ax
   14000bfd0:	movzx  edx,BYTE PTR [rax]
   14000bfd3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000bfd8:	sub    edx,ecx
   14000bfda:	jne    0x14000bfe3
   14000bfdc:	inc    rax
   14000bfdf:	test   ecx,ecx
   14000bfe1:	jne    0x14000bfd0
   14000bfe3:	test   edx,edx
   14000bfe5:	jne    0x14000c04d
   14000bfe7:	mov    rcx,QWORD PTR [rdi]
   14000bfea:	xor    edx,edx
   14000bfec:	mov    rbx,QWORD PTR [rdi+0x8]
   14000bff0:	call   r14
   14000bff3:	movsxd r8,DWORD PTR [rip+0x3b5ae]        # 0x1400475a8
   14000bffa:	xor    dl,dl
   14000bffc:	mov    QWORD PTR [rbx],rax
   14000bfff:	test   r8d,r8d
   14000c002:	jle    0x14000c028
   14000c004:	mov    rax,r15
   14000c007:	mov    ecx,r8d
   14000c00a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c010:	cmp    QWORD PTR [rax],rbx
   14000c013:	jne    0x14000c01a
   14000c015:	mov    QWORD PTR [rax],rbx
   14000c018:	mov    dl,0x1
   14000c01a:	add    rax,0x10
   14000c01e:	sub    rcx,0x1
   14000c022:	jne    0x14000c010
   14000c024:	test   dl,dl
   14000c026:	jne    0x14000c04d
   14000c028:	cmp    QWORD PTR [rbx],0x0
   14000c02c:	je     0x14000c04d
   14000c02e:	mov    eax,DWORD PTR [rip+0x3b570]        # 0x1400475a4
   14000c034:	mov    rcx,r8
   14000c037:	add    rcx,rcx
   14000c03a:	inc    r8d
   14000c03d:	mov    DWORD PTR [rip+0x3b564],r8d        # 0x1400475a8
   14000c044:	mov    QWORD PTR [r15+rcx*8],rbx
   14000c048:	mov    DWORD PTR [r15+rcx*8+0x8],eax
   14000c04d:	inc    esi
   14000c04f:	add    rdi,0x10
   14000c053:	cmp    esi,0x89
   14000c059:	jb     0x14000bfc0
   14000c05f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c064:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c069:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c06e:	add    rsp,0x20
   14000c072:	pop    r15
   14000c074:	pop    r14
   14000c076:	pop    rdi
   14000c077:	jmp    0x14000bba0
   14000c07c:	int3   
   14000c07d:	int3   
   14000c07e:	int3   
   14000c07f:	int3   
   14000c080:	sub    rsp,0x28
   14000c084:	mov    rdx,QWORD PTR [rcx]
   14000c087:	mov    r8,rdx
   14000c08a:	and    r8d,0x1e
   14000c08e:	lea    rax,[r8-0x14]
   14000c092:	test   rax,0xfffffffffffffffd
   14000c098:	je     0x14000c0e0
   14000c09a:	cmp    r8,0x18
   14000c09e:	je     0x14000c0d9
   14000c0a0:	shr    dl,1
   14000c0a2:	and    dl,0xf
   14000c0a5:	cmp    dl,0x2
   14000c0a8:	jne    0x14000c0b3
   14000c0aa:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c0ae:	add    rsp,0x28
   14000c0b2:	ret    
   14000c0b3:	cmp    dl,0x3
   14000c0b6:	jne    0x14000c0c0
   14000c0b8:	mov    eax,DWORD PTR [rcx+0x8]
   14000c0bb:	add    rsp,0x28
   14000c0bf:	ret    
   14000c0c0:	cmp    dl,0x4
   14000c0c3:	je     0x14000c0b8
   14000c0c5:	cmp    dl,0x5
   14000c0c8:	jne    0x14000c0d4
   14000c0ca:	cvttsd2si eax,QWORD PTR [rcx+0x8]
   14000c0cf:	add    rsp,0x28
   14000c0d3:	ret    
   14000c0d4:	cmp    dl,0x6
   14000c0d7:	je     0x14000c0e0
   14000c0d9:	xor    eax,eax
   14000c0db:	add    rsp,0x28
   14000c0df:	ret    
   14000c0e0:	cmp    r8,0xc
   14000c0e4:	je     0x14000c116
   14000c0e6:	cmp    r8,0x16
   14000c0ea:	je     0x14000c116
   14000c0ec:	cmp    r8,0x14
   14000c0f0:	jne    0x14000c105
   14000c0f2:	add    rcx,0x8
   14000c0f6:	call   QWORD PTR [rip+0x26184]        # 0x140032280
   14000c0fc:	cvttsd2si eax,xmm0
   14000c100:	add    rsp,0x28
   14000c104:	ret    
   14000c105:	xor    ecx,ecx
   14000c107:	call   QWORD PTR [rip+0x26173]        # 0x140032280
   14000c10d:	cvttsd2si eax,xmm0
   14000c111:	add    rsp,0x28
   14000c115:	ret    
   14000c116:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c11a:	call   QWORD PTR [rip+0x26160]        # 0x140032280
   14000c120:	cvttsd2si eax,xmm0
   14000c124:	add    rsp,0x28
   14000c128:	ret    
   14000c129:	int3   
   14000c12a:	int3   
   14000c12b:	int3   
   14000c12c:	int3   
   14000c12d:	int3   
   14000c12e:	int3   
   14000c12f:	int3   
   14000c130:	mov    rdx,QWORD PTR [rcx]
   14000c133:	mov    r8,rdx
   14000c136:	and    r8d,0x1e
   14000c13a:	lea    rax,[r8-0x14]
   14000c13e:	test   rax,0xfffffffffffffffd
   14000c144:	je     0x14000c1a5
   14000c146:	cmp    r8,0x18
   14000c14a:	je     0x14000c1a1
   14000c14c:	shr    dl,1
   14000c14e:	and    dl,0xf
   14000c151:	cmp    dl,0x2
   14000c154:	jne    0x14000c163
   14000c156:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c15a:	movd   xmm0,eax
   14000c15e:	cvtdq2pd xmm0,xmm0
   14000c162:	ret    
   14000c163:	cmp    dl,0x3
   14000c166:	jne    0x14000c172
   14000c168:	xorps  xmm0,xmm0
   14000c16b:	cvtsi2sd xmm0,QWORD PTR [rcx+0x8]
   14000c171:	ret    
   14000c172:	cmp    dl,0x4
   14000c175:	jne    0x14000c191
   14000c177:	mov    rax,QWORD PTR [rcx+0x8]
   14000c17b:	xorps  xmm0,xmm0
   14000c17e:	cvtsi2sd xmm0,rax
   14000c183:	test   rax,rax
   14000c186:	jns    0x14000c1d6
   14000c188:	addsd  xmm0,QWORD PTR [rip+0x2a558]        # 0x1400366e8
   14000c190:	ret    
   14000c191:	cmp    dl,0x5
   14000c194:	jne    0x14000c19c
   14000c196:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14000c19b:	ret    
   14000c19c:	cmp    dl,0x6
   14000c19f:	je     0x14000c1a5
   14000c1a1:	xorps  xmm0,xmm0
   14000c1a4:	ret    
   14000c1a5:	cmp    r8,0xc
   14000c1a9:	je     0x14000c1cb
   14000c1ab:	cmp    r8,0x16
   14000c1af:	je     0x14000c1cb
   14000c1b1:	cmp    r8,0x14
   14000c1b5:	jne    0x14000c1c2
   14000c1b7:	add    rcx,0x8
   14000c1bb:	rex.W jmp QWORD PTR [rip+0x260be]        # 0x140032280
   14000c1c2:	xor    ecx,ecx
   14000c1c4:	rex.W jmp QWORD PTR [rip+0x260b5]        # 0x140032280
   14000c1cb:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c1cf:	rex.W jmp QWORD PTR [rip+0x260aa]        # 0x140032280
   14000c1d6:	ret    
   14000c1d7:	int3   
   14000c1d8:	int3   
   14000c1d9:	int3   
   14000c1da:	int3   
   14000c1db:	int3   
   14000c1dc:	int3   
   14000c1dd:	int3   
   14000c1de:	int3   
   14000c1df:	int3   
   14000c1e0:	sub    rsp,0x28
   14000c1e4:	mov    rdx,QWORD PTR [rcx]
   14000c1e7:	mov    r8,rdx
   14000c1ea:	and    r8d,0x1e
   14000c1ee:	lea    rax,[r8-0x14]
   14000c1f2:	test   rax,0xfffffffffffffffd
   14000c1f8:	je     0x14000c242
   14000c1fa:	cmp    r8,0x18
   14000c1fe:	je     0x14000c23b
   14000c200:	shr    dl,1
   14000c202:	and    dl,0xf
   14000c205:	cmp    dl,0x2
   14000c208:	jne    0x14000c213
   14000c20a:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c20e:	add    rsp,0x28
   14000c212:	ret    
   14000c213:	cmp    dl,0x3
   14000c216:	jne    0x14000c221
   14000c218:	mov    rax,QWORD PTR [rcx+0x8]
   14000c21c:	add    rsp,0x28
   14000c220:	ret    
   14000c221:	cmp    dl,0x4
   14000c224:	je     0x14000c218
   14000c226:	cmp    dl,0x5
   14000c229:	jne    0x14000c236
   14000c22b:	cvttsd2si rax,QWORD PTR [rcx+0x8]
   14000c231:	add    rsp,0x28
   14000c235:	ret    
   14000c236:	cmp    dl,0x6
   14000c239:	je     0x14000c242
   14000c23b:	xor    eax,eax
   14000c23d:	add    rsp,0x28
   14000c241:	ret    
   14000c242:	cmp    r8,0xc
   14000c246:	je     0x14000c27a
   14000c248:	cmp    r8,0x16
   14000c24c:	je     0x14000c27a
   14000c24e:	cmp    r8,0x14
   14000c252:	jne    0x14000c268
   14000c254:	add    rcx,0x8
   14000c258:	call   QWORD PTR [rip+0x26022]        # 0x140032280
   14000c25e:	cvttsd2si rax,xmm0
   14000c263:	add    rsp,0x28
   14000c267:	ret    
   14000c268:	xor    ecx,ecx
   14000c26a:	call   QWORD PTR [rip+0x26010]        # 0x140032280
   14000c270:	cvttsd2si rax,xmm0
   14000c275:	add    rsp,0x28
   14000c279:	ret    
   14000c27a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c27e:	call   QWORD PTR [rip+0x25ffc]        # 0x140032280
   14000c284:	cvttsd2si rax,xmm0
   14000c289:	add    rsp,0x28
   14000c28d:	ret    
   14000c28e:	int3   
   14000c28f:	int3   
   14000c290:	sub    rsp,0x28
   14000c294:	mov    rdx,QWORD PTR [rcx]
   14000c297:	mov    r8,rdx
   14000c29a:	and    r8d,0x1e
   14000c29e:	lea    rax,[r8-0x14]
   14000c2a2:	test   rax,0xfffffffffffffffd
   14000c2a8:	je     0x14000c320
   14000c2aa:	cmp    r8,0x18
   14000c2ae:	je     0x14000c319
   14000c2b0:	shr    dl,1
   14000c2b2:	and    dl,0xf
   14000c2b5:	cmp    dl,0x2
   14000c2b8:	jne    0x14000c2c3
   14000c2ba:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c2be:	add    rsp,0x28
   14000c2c2:	ret    
   14000c2c3:	cmp    dl,0x3
   14000c2c6:	jne    0x14000c2d1
   14000c2c8:	mov    rax,QWORD PTR [rcx+0x8]
   14000c2cc:	add    rsp,0x28
   14000c2d0:	ret    
   14000c2d1:	cmp    dl,0x4
   14000c2d4:	je     0x14000c2c8
   14000c2d6:	cmp    dl,0x5
   14000c2d9:	jne    0x14000c314
   14000c2db:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14000c2e0:	xor    edx,edx
   14000c2e2:	movsd  xmm1,QWORD PTR [rip+0x2a3f6]        # 0x1400366e0
   14000c2ea:	comisd xmm0,xmm1
   14000c2ee:	jb     0x14000c307
   14000c2f0:	subsd  xmm0,xmm1
   14000c2f4:	comisd xmm0,xmm1
   14000c2f8:	jae    0x14000c307
   14000c2fa:	movabs rax,0x8000000000000000
   14000c304:	mov    rdx,rax
   14000c307:	cvttsd2si rax,xmm0
   14000c30c:	add    rax,rdx
   14000c30f:	add    rsp,0x28
   14000c313:	ret    
   14000c314:	cmp    dl,0x6
   14000c317:	je     0x14000c320
   14000c319:	xor    eax,eax
   14000c31b:	add    rsp,0x28
   14000c31f:	ret    
   14000c320:	cmp    r8,0xc
   14000c324:	je     0x14000c33c
   14000c326:	cmp    r8,0x16
   14000c32a:	je     0x14000c33c
   14000c32c:	cmp    r8,0x14
   14000c330:	jne    0x14000c338
   14000c332:	add    rcx,0x8
   14000c336:	jmp    0x14000c340
   14000c338:	xor    ecx,ecx
   14000c33a:	jmp    0x14000c340
   14000c33c:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c340:	call   QWORD PTR [rip+0x25f3a]        # 0x140032280
   14000c346:	movsd  xmm1,QWORD PTR [rip+0x2a392]        # 0x1400366e0
   14000c34e:	xor    ecx,ecx
   14000c350:	comisd xmm0,xmm1
   14000c354:	jb     0x14000c36d
   14000c356:	subsd  xmm0,xmm1
   14000c35a:	comisd xmm0,xmm1
   14000c35e:	jae    0x14000c36d
   14000c360:	movabs rax,0x8000000000000000
   14000c36a:	mov    rcx,rax
   14000c36d:	cvttsd2si rax,xmm0
   14000c372:	add    rax,rcx
   14000c375:	add    rsp,0x28
   14000c379:	ret    
   14000c37a:	int3   
   14000c37b:	int3   
   14000c37c:	int3   
   14000c37d:	int3   
   14000c37e:	int3   
   14000c37f:	int3   
   14000c380:	rex push rbx
   14000c382:	sub    rsp,0x20
   14000c386:	mov    rbx,rcx
   14000c389:	mov    QWORD PTR [rcx+0x8],0x0
   14000c391:	mov    QWORD PTR [rcx+0x10],0x10
   14000c399:	call   QWORD PTR [rip+0x26121]        # 0x1400324c0
   14000c39f:	mov    rax,QWORD PTR [rip+0x25fea]        # 0x140032390
   14000c3a6:	mov    rcx,QWORD PTR [rax]
   14000c3a9:	movsxd rax,DWORD PTR [rbx+0x10]
   14000c3ad:	mov    r8,QWORD PTR [rcx]
   14000c3b0:	lea    rdx,[rax+rax*4]
   14000c3b4:	shl    rdx,0x3
   14000c3b8:	call   QWORD PTR [r8+0x8]
   14000c3bc:	mov    QWORD PTR [rbx+0x8],rax
   14000c3c0:	mov    QWORD PTR [rbx+0x18],0xffffffffffffffff
   14000c3c8:	mov    QWORD PTR [rbx+0x20],0x0
   14000c3d0:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
   14000c3d8:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
   14000c3e0:	mov    QWORD PTR [rbx+0x38],rax
   14000c3e4:	mov    rax,rbx
   14000c3e7:	add    rsp,0x20
   14000c3eb:	pop    rbx
   14000c3ec:	ret    
   14000c3ed:	int3   
   14000c3ee:	int3   
   14000c3ef:	int3   
   14000c3f0:	rex push rbx
   14000c3f2:	sub    rsp,0x50
   14000c3f6:	mov    rbx,rcx
   14000c3f9:	lea    rdx,[rcx+0x18]
   14000c3fd:	xor    ecx,ecx
   14000c3ff:	mov    r8d,0x3e
   14000c405:	mov    rax,QWORD PTR [rdx]
   14000c408:	mov    QWORD PTR [rdx+0x8],rcx
   14000c40c:	lea    rdx,[rdx+0x10]
   14000c410:	and    rax,0xffffffffffe00003
   14000c416:	or     rax,0x3
   14000c41a:	mov    QWORD PTR [rdx-0x10],rax
   14000c41e:	sub    r8,0x1
   14000c422:	jne    0x14000c405
   14000c424:	test   rbx,0x3ff
   14000c42b:	je     0x14000c4d2
   14000c431:	mov    rax,QWORD PTR [rip+0x25f50]        # 0x140032388
   14000c438:	lea    edx,[r8+0x4]
   14000c43c:	mov    ecx,DWORD PTR [rax]
   14000c43e:	call   QWORD PTR [rip+0x26064]        # 0x1400324a8
   14000c444:	test   al,al
   14000c446:	je     0x14000c48d
   14000c448:	lea    rax,[rip+0x2a0a1]        # 0x1400364f0
   14000c44f:	mov    DWORD PTR [rsp+0x38],0xc2
   14000c457:	mov    QWORD PTR [rsp+0x30],rax
   14000c45c:	lea    r9,[rip+0x29fbd]        # 0x140036420
   14000c463:	lea    rax,[rip+0x2a05e]        # 0x1400364c8
   14000c46a:	mov    QWORD PTR [rsp+0x20],rbx
   14000c46f:	mov    QWORD PTR [rsp+0x40],rax
   14000c474:	lea    r8,[rsp+0x30]
   14000c479:	mov    rax,QWORD PTR [rip+0x25f08]        # 0x140032388
   14000c480:	mov    edx,0x4
   14000c485:	mov    ecx,DWORD PTR [rax]
   14000c487:	call   QWORD PTR [rip+0x2600b]        # 0x140032498
   14000c48d:	call   QWORD PTR [rip+0x260f5]        # 0x140032588
   14000c493:	test   al,al
   14000c495:	je     0x14000c4c6
   14000c497:	call   QWORD PTR [rip+0x25fe3]        # 0x140032480
   14000c49d:	lea    rcx,[rip+0x26308]        # 0x1400327ac
   14000c4a4:	xorps  xmm0,xmm0
   14000c4a7:	lea    rdx,[rsp+0x30]
   14000c4ac:	mov    DWORD PTR [rsp+0x38],eax
   14000c4b0:	mov    QWORD PTR [rsp+0x30],rcx
   14000c4b5:	mov    r8b,0x1
   14000c4b8:	xor    ecx,ecx
   14000c4ba:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000c4c0:	call   QWORD PTR [rip+0x25fb2]        # 0x140032478
   14000c4c6:	mov    ecx,0x1
   14000c4cb:	call   QWORD PTR [rip+0x25d77]        # 0x140032248
   14000c4d1:	int3   
   14000c4d2:	mov    rax,rbx
   14000c4d5:	add    rsp,0x50
   14000c4d9:	pop    rbx
   14000c4da:	ret    
   14000c4db:	int3   
   14000c4dc:	int3   
   14000c4dd:	int3   
   14000c4de:	int3   
   14000c4df:	int3   
   14000c4e0:	rex push rbx
   14000c4e2:	sub    rsp,0x20
   14000c4e6:	mov    rbx,rcx
   14000c4e9:	test   rcx,rcx
   14000c4ec:	je     0x14000c4f3
   14000c4ee:	call   0x14000c710
   14000c4f3:	xor    edx,edx
   14000c4f5:	mov    r8d,0x400
   14000c4fb:	mov    rcx,rbx
   14000c4fe:	call   0x1400277b0
   14000c503:	mov    QWORD PTR [rbx],rbx
   14000c506:	mov    rcx,rbx
   14000c509:	mov    QWORD PTR [rbx+0x458],rbx
   14000c510:	call   0x14000d090
   14000c515:	mov    dl,0x1
   14000c517:	mov    rcx,rax
   14000c51a:	call   0x14000faa0
   14000c51f:	mov    rax,rbx
   14000c522:	mov    DWORD PTR [rbx+0x4d0],0x0
   14000c52c:	add    rsp,0x20
   14000c530:	pop    rbx
   14000c531:	ret    
   14000c532:	int3   
   14000c533:	int3   
   14000c534:	int3   
   14000c535:	int3   
   14000c536:	int3   
   14000c537:	int3   
   14000c538:	int3   
   14000c539:	int3   
   14000c53a:	int3   
   14000c53b:	int3   
   14000c53c:	int3   
   14000c53d:	int3   
   14000c53e:	int3   
   14000c53f:	int3   
   14000c540:	mov    QWORD PTR [rsp+0x8],rbx
   14000c545:	mov    QWORD PTR [rsp+0x10],rsi
   14000c54a:	push   rdi
   14000c54b:	sub    rsp,0x20
   14000c54f:	lea    rdi,[rcx+0x8]
   14000c553:	mov    DWORD PTR [rcx],0x0
   14000c559:	mov    rsi,rdx
   14000c55c:	mov    QWORD PTR [rdi],0x0
   14000c563:	mov    rbx,rcx
   14000c566:	mov    DWORD PTR [rdi+0x8],0x4
   14000c56d:	mov    rcx,rdi
   14000c570:	mov    DWORD PTR [rdi+0xc],0x80000000
   14000c577:	mov    edx,0x4
   14000c57c:	call   0x14001a520
   14000c581:	test   dil,0x7
   14000c585:	je     0x14000c592
   14000c587:	call   QWORD PTR [rip+0x26023]        # 0x1400325b0
   14000c58d:	test   eax,eax
   14000c58f:	je     0x14000c592
   14000c591:	int3   
   14000c592:	lea    rax,[rdi+0x10]
   14000c596:	mov    QWORD PTR [rdi],rax
   14000c599:	mov    DWORD PTR [rbx],0x0
   14000c59f:	test   rsi,rsi
   14000c5a2:	je     0x14000c5c6
   14000c5a4:	cmp    DWORD PTR [rbx+0x10],0x0
   14000c5a8:	jne    0x14000c5b7
   14000c5aa:	mov    edx,0x1
   14000c5af:	mov    rcx,rdi
   14000c5b2:	call   0x140023260
   14000c5b7:	inc    DWORD PTR [rbx]
   14000c5b9:	mov    rax,QWORD PTR [rdi]
   14000c5bc:	mov    DWORD PTR [rax+0x8],0xffffffff
   14000c5c3:	mov    QWORD PTR [rax],rsi
   14000c5c6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c5cb:	mov    rax,rbx
   14000c5ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c5d3:	add    rsp,0x20
   14000c5d7:	pop    rdi
   14000c5d8:	ret    
   14000c5d9:	int3   
   14000c5da:	int3   
   14000c5db:	int3   
   14000c5dc:	int3   
   14000c5dd:	int3   
   14000c5de:	int3   
   14000c5df:	int3   
   14000c5e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c5e5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c5ea:	push   rdi
   14000c5eb:	sub    rsp,0x20
   14000c5ef:	lea    rbx,[rcx+0x8]
   14000c5f3:	xor    esi,esi
   14000c5f5:	mov    DWORD PTR [rcx],esi
   14000c5f7:	mov    rdi,rcx
   14000c5fa:	mov    rcx,rbx
   14000c5fd:	mov    QWORD PTR [rbx],rsi
   14000c600:	mov    DWORD PTR [rbx+0x8],0x8
   14000c607:	lea    edx,[rsi+0x8]
   14000c60a:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c611:	call   0x14000dc10
   14000c616:	test   bl,0x3
   14000c619:	je     0x14000c626
   14000c61b:	call   QWORD PTR [rip+0x25f8f]        # 0x1400325b0
   14000c621:	test   eax,eax
   14000c623:	je     0x14000c626
   14000c625:	int3   
   14000c626:	lea    rax,[rbx+0x10]
   14000c62a:	mov    edx,0x8
   14000c62f:	mov    QWORD PTR [rbx],rax
   14000c632:	lea    rbx,[rdi+0x40]
   14000c636:	mov    DWORD PTR [rdi+0x38],esi
   14000c639:	mov    rcx,rbx
   14000c63c:	mov    QWORD PTR [rbx],rsi
   14000c63f:	mov    DWORD PTR [rbx+0x8],0x8
   14000c646:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c64d:	call   0x14000db40
   14000c652:	test   bl,0x7
   14000c655:	je     0x14000c662
   14000c657:	call   QWORD PTR [rip+0x25f53]        # 0x1400325b0
   14000c65d:	test   eax,eax
   14000c65f:	je     0x14000c662
   14000c661:	int3   
   14000c662:	lea    rax,[rbx+0x10]
   14000c666:	mov    edx,0x8
   14000c66b:	mov    QWORD PTR [rbx],rax
   14000c66e:	lea    rbx,[rdi+0x98]
   14000c675:	mov    DWORD PTR [rdi+0x90],esi
   14000c67b:	mov    rcx,rbx
   14000c67e:	mov    QWORD PTR [rbx],rsi
   14000c681:	mov    DWORD PTR [rbx+0x8],0x8
   14000c688:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c68f:	call   0x14000db40
   14000c694:	test   bl,0x7
   14000c697:	je     0x14000c6a4
   14000c699:	call   QWORD PTR [rip+0x25f11]        # 0x1400325b0
   14000c69f:	test   eax,eax
   14000c6a1:	je     0x14000c6a4
   14000c6a3:	int3   
   14000c6a4:	lea    rax,[rbx+0x10]
   14000c6a8:	mov    edx,0x8
   14000c6ad:	mov    QWORD PTR [rbx],rax
   14000c6b0:	lea    rbx,[rdi+0xf0]
   14000c6b7:	mov    DWORD PTR [rdi+0xe8],esi
   14000c6bd:	mov    rcx,rbx
   14000c6c0:	mov    QWORD PTR [rbx],rsi
   14000c6c3:	mov    DWORD PTR [rbx+0x8],0x8
   14000c6ca:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c6d1:	call   0x14000da80
   14000c6d6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c6db:	lea    rax,[rbx+0x10]
   14000c6df:	mov    QWORD PTR [rbx],rax
   14000c6e2:	mov    rax,rdi
   14000c6e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c6ea:	add    rsp,0x20
   14000c6ee:	pop    rdi
   14000c6ef:	ret    
   14000c6f0:	mov    rax,QWORD PTR [rcx]
   14000c6f3:	and    rax,0xffffffffffe00003
   14000c6f9:	mov    QWORD PTR [rcx+0x8],0x0
   14000c701:	or     rax,0x3
   14000c705:	mov    QWORD PTR [rcx],rax
   14000c708:	mov    rax,rcx
   14000c70b:	ret    
   14000c70c:	int3   
   14000c70d:	int3   
   14000c70e:	int3   
   14000c70f:	int3   
   14000c710:	mov    QWORD PTR [rsp+0x8],rbx
   14000c715:	mov    QWORD PTR [rsp+0x10],rsi
   14000c71a:	push   rdi
   14000c71b:	sub    rsp,0x20
   14000c71f:	mov    rdi,rcx
   14000c722:	call   0x14000c3f0
   14000c727:	lea    rbx,[rdi+0x408]
   14000c72e:	xor    esi,esi
   14000c730:	mov    DWORD PTR [rdi+0x400],esi
   14000c736:	mov    rcx,rbx
   14000c739:	mov    QWORD PTR [rbx],rsi
   14000c73c:	mov    DWORD PTR [rbx+0x8],0x8
   14000c743:	lea    edx,[rsi+0x8]
   14000c746:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c74d:	call   0x14000db40
   14000c752:	test   bl,0x7
   14000c755:	je     0x14000c762
   14000c757:	call   QWORD PTR [rip+0x25e53]        # 0x1400325b0
   14000c75d:	test   eax,eax
   14000c75f:	je     0x14000c762
   14000c761:	int3   
   14000c762:	lea    rax,[rbx+0x10]
   14000c766:	lea    rcx,[rdi+0x460]
   14000c76d:	mov    QWORD PTR [rbx],rax
   14000c770:	call   0x14000c380
   14000c775:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c77a:	mov    rax,rdi
   14000c77d:	mov    DWORD PTR [rdi+0x4a0],esi
   14000c783:	mov    QWORD PTR [rdi+0x4a8],rsi
   14000c78a:	mov    DWORD PTR [rdi+0x4b0],esi
   14000c790:	mov    QWORD PTR [rdi+0x4b4],0x8
   14000c79b:	mov    QWORD PTR [rdi+0x4c0],rsi
   14000c7a2:	mov    QWORD PTR [rdi+0x4c8],rsi
   14000c7a9:	mov    DWORD PTR [rdi+0x4d0],esi
   14000c7af:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c7b4:	add    rsp,0x20
   14000c7b8:	pop    rdi
   14000c7b9:	ret    
   14000c7ba:	int3   
   14000c7bb:	int3   
   14000c7bc:	int3   
   14000c7bd:	int3   
   14000c7be:	int3   
   14000c7bf:	int3   
   14000c7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c7c5:	push   rdi
   14000c7c6:	sub    rsp,0x20
   14000c7ca:	mov    rbx,rcx
   14000c7cd:	call   0x140010e20
   14000c7d2:	xor    edi,edi
   14000c7d4:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
   14000c7dc:	test   DWORD PTR [rbx+0x14],0xc0000000
   14000c7e3:	jne    0x14000c805
   14000c7e5:	mov    rdx,QWORD PTR [rbx+0x8]
   14000c7e9:	test   rdx,rdx
   14000c7ec:	je     0x14000c802
   14000c7ee:	mov    rax,QWORD PTR [rip+0x25b9b]        # 0x140032390
   14000c7f5:	mov    rcx,QWORD PTR [rax]
   14000c7f8:	mov    rax,QWORD PTR [rcx]
   14000c7fb:	call   QWORD PTR [rax+0x28]
   14000c7fe:	mov    QWORD PTR [rbx+0x8],rdi
   14000c802:	mov    DWORD PTR [rbx+0x10],edi
   14000c805:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
   14000c80d:	test   DWORD PTR [rbx+0x14],0xc0000000
   14000c814:	jne    0x14000c836
   14000c816:	mov    rdx,QWORD PTR [rbx+0x8]
   14000c81a:	test   rdx,rdx
   14000c81d:	je     0x14000c833
   14000c81f:	mov    rax,QWORD PTR [rip+0x25b6a]        # 0x140032390
   14000c826:	mov    rcx,QWORD PTR [rax]
   14000c829:	mov    rax,QWORD PTR [rcx]
   14000c82c:	call   QWORD PTR [rax+0x28]
   14000c82f:	mov    QWORD PTR [rbx+0x8],rdi
   14000c833:	mov    DWORD PTR [rbx+0x10],edi
   14000c836:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c83b:	add    rsp,0x20
   14000c83f:	pop    rdi
   14000c840:	ret    
   14000c841:	int3   
   14000c842:	int3   
   14000c843:	int3   
   14000c844:	int3   
   14000c845:	int3   
   14000c846:	int3   
   14000c847:	int3   
   14000c848:	int3   
   14000c849:	int3   
   14000c84a:	int3   
   14000c84b:	int3   
   14000c84c:	int3   
   14000c84d:	int3   
   14000c84e:	int3   
   14000c84f:	int3   
   14000c850:	rex push rbx
   14000c852:	sub    rsp,0x20
   14000c856:	mov    rbx,rcx
   14000c859:	mov    dl,0x1
   14000c85b:	add    rcx,0x18
   14000c85f:	call   0x14000faa0
   14000c864:	mov    rcx,rbx
   14000c867:	add    rsp,0x20
   14000c86b:	pop    rbx
   14000c86c:	jmp    0x14000c9d0
   14000c871:	int3   
   14000c872:	int3   
   14000c873:	int3   
   14000c874:	int3   
   14000c875:	int3   
   14000c876:	int3   
   14000c877:	int3   
   14000c878:	int3   
   14000c879:	int3   
   14000c87a:	int3   
   14000c87b:	int3   
   14000c87c:	int3   
   14000c87d:	int3   
   14000c87e:	int3   
   14000c87f:	int3   
   14000c880:	mov    QWORD PTR [rsp+0x8],rbx
   14000c885:	mov    QWORD PTR [rsp+0x10],rsi
   14000c88a:	push   rdi
   14000c88b:	sub    rsp,0x20
   14000c88f:	lea    rbx,[rcx+0xf0]
   14000c896:	xor    esi,esi
   14000c898:	mov    rdi,rcx
   14000c89b:	mov    DWORD PTR [rcx+0xe8],esi
   14000c8a1:	lea    rdx,[rbx+0x10]
   14000c8a5:	xor    r9d,r9d
   14000c8a8:	mov    rcx,rbx
   14000c8ab:	lea    r8d,[rsi+0x8]
   14000c8af:	call   0x140010610
   14000c8b4:	test   DWORD PTR [rbx+0xc],0xc0000000
   14000c8bb:	jne    0x14000c8db
   14000c8bd:	mov    rdx,QWORD PTR [rbx]
   14000c8c0:	test   rdx,rdx
   14000c8c3:	je     0x14000c8d8
   14000c8c5:	mov    rax,QWORD PTR [rip+0x25ac4]        # 0x140032390
   14000c8cc:	mov    rcx,QWORD PTR [rax]
   14000c8cf:	mov    rax,QWORD PTR [rcx]
   14000c8d2:	call   QWORD PTR [rax+0x28]
   14000c8d5:	mov    QWORD PTR [rbx],rsi
   14000c8d8:	mov    DWORD PTR [rbx+0x8],esi
   14000c8db:	xor    r9d,r9d
   14000c8de:	mov    DWORD PTR [rdi+0x90],esi
   14000c8e4:	lea    rbx,[rdi+0x98]
   14000c8eb:	lea    rdx,[rbx+0x10]
   14000c8ef:	mov    rcx,rbx
   14000c8f2:	lea    r8d,[r9+0x8]
   14000c8f6:	call   0x140010720
   14000c8fb:	test   DWORD PTR [rbx+0xc],0xc0000000
   14000c902:	jne    0x14000c922
   14000c904:	mov    rdx,QWORD PTR [rbx]
   14000c907:	test   rdx,rdx
   14000c90a:	je     0x14000c91f
   14000c90c:	mov    rax,QWORD PTR [rip+0x25a7d]        # 0x140032390
   14000c913:	mov    rcx,QWORD PTR [rax]
   14000c916:	mov    rax,QWORD PTR [rcx]
   14000c919:	call   QWORD PTR [rax+0x28]
   14000c91c:	mov    QWORD PTR [rbx],rsi
   14000c91f:	mov    DWORD PTR [rbx+0x8],esi
   14000c922:	xor    r9d,r9d
   14000c925:	mov    DWORD PTR [rdi+0x38],esi
   14000c928:	lea    rdx,[rdi+0x50]
   14000c92c:	lea    rcx,[rdi+0x40]
   14000c930:	lea    r8d,[r9+0x8]
   14000c934:	call   0x140010720
   14000c939:	test   DWORD PTR [rdi+0x4c],0xc0000000
   14000c940:	jne    0x14000c962
   14000c942:	mov    rdx,QWORD PTR [rdi+0x40]
   14000c946:	test   rdx,rdx
   14000c949:	je     0x14000c95f
   14000c94b:	mov    rax,QWORD PTR [rip+0x25a3e]        # 0x140032390
   14000c952:	mov    rcx,QWORD PTR [rax]
   14000c955:	mov    rax,QWORD PTR [rcx]
   14000c958:	call   QWORD PTR [rax+0x28]
   14000c95b:	mov    QWORD PTR [rdi+0x40],rsi
   14000c95f:	mov    DWORD PTR [rdi+0x48],esi
   14000c962:	xor    r9d,r9d
   14000c965:	mov    DWORD PTR [rdi],esi
   14000c967:	lea    rdx,[rdi+0x18]
   14000c96b:	lea    rcx,[rdi+0x8]
   14000c96f:	lea    r8d,[r9+0x8]
   14000c973:	call   0x140010840
   14000c978:	test   DWORD PTR [rdi+0x14],0xc0000000
   14000c97f:	jne    0x14000c9a1
   14000c981:	mov    rdx,QWORD PTR [rdi+0x8]
   14000c985:	test   rdx,rdx
   14000c988:	je     0x14000c99e
   14000c98a:	mov    rax,QWORD PTR [rip+0x259ff]        # 0x140032390
   14000c991:	mov    rcx,QWORD PTR [rax]
   14000c994:	mov    rax,QWORD PTR [rcx]
   14000c997:	call   QWORD PTR [rax+0x28]
   14000c99a:	mov    QWORD PTR [rdi+0x8],rsi
   14000c99e:	mov    DWORD PTR [rdi+0x10],esi
   14000c9a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c9a6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c9ab:	add    rsp,0x20
   14000c9af:	pop    rdi
   14000c9b0:	ret    
   14000c9b1:	int3   
   14000c9b2:	int3   
   14000c9b3:	int3   
   14000c9b4:	int3   
   14000c9b5:	int3   
   14000c9b6:	int3   
   14000c9b7:	int3   
   14000c9b8:	int3   
   14000c9b9:	int3   
   14000c9ba:	int3   
   14000c9bb:	int3   
   14000c9bc:	int3   
   14000c9bd:	int3   
   14000c9be:	int3   
   14000c9bf:	int3   
   14000c9c0:	jmp    0x14000f9e0
   14000c9c5:	int3   
   14000c9c6:	int3   
   14000c9c7:	int3   
   14000c9c8:	int3   
   14000c9c9:	int3   
   14000c9ca:	int3   
   14000c9cb:	int3   
   14000c9cc:	int3   
   14000c9cd:	int3   
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c9da:	push   rdi
   14000c9db:	sub    rsp,0x20
   14000c9df:	mov    rsi,rcx
   14000c9e2:	add    rcx,0x4b8
   14000c9e9:	call   0x1400181a0
   14000c9ee:	lea    rcx,[rsi+0x460]
   14000c9f5:	call   0x140010ed0
   14000c9fa:	lea    rcx,[rsi+0x4a0]
   14000ca01:	call   0x1400181a0
   14000ca06:	lea    rcx,[rsi+0x460]
   14000ca0d:	call   0x14000c7c0
   14000ca12:	xor    edi,edi
   14000ca14:	lea    rbx,[rsi+0x408]
   14000ca1b:	lea    rdx,[rbx+0x10]
   14000ca1f:	mov    DWORD PTR [rsi+0x400],edi
   14000ca25:	xor    r9d,r9d
   14000ca28:	mov    rcx,rbx
   14000ca2b:	lea    r8d,[rdi+0x8]
   14000ca2f:	call   0x140010720
   14000ca34:	test   DWORD PTR [rbx+0xc],0xc0000000
   14000ca3b:	jne    0x14000ca5b
   14000ca3d:	mov    rdx,QWORD PTR [rbx]
   14000ca40:	test   rdx,rdx
   14000ca43:	je     0x14000ca58
   14000ca45:	mov    rax,QWORD PTR [rip+0x25944]        # 0x140032390
   14000ca4c:	mov    rcx,QWORD PTR [rax]
   14000ca4f:	mov    rax,QWORD PTR [rcx]
   14000ca52:	call   QWORD PTR [rax+0x28]
   14000ca55:	mov    QWORD PTR [rbx],rdi
   14000ca58:	mov    DWORD PTR [rbx+0x8],edi
   14000ca5b:	mov    edi,0x3e
   14000ca60:	lea    rbx,[rsi+0x3f8]
   14000ca67:	nop    WORD PTR [rax+rax*1+0x0]
   14000ca70:	sub    rbx,0x10
   14000ca74:	mov    rcx,rbx
   14000ca77:	call   0x14000f9e0
   14000ca7c:	sub    rdi,0x1
   14000ca80:	jne    0x14000ca70
   14000ca82:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca87:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ca8c:	add    rsp,0x20
   14000ca90:	pop    rdi
   14000ca91:	ret    
   14000ca92:	int3   
   14000ca93:	int3   
   14000ca94:	int3   
   14000ca95:	int3   
   14000ca96:	int3   
   14000ca97:	int3   
   14000ca98:	int3   
   14000ca99:	int3   
   14000ca9a:	int3   
   14000ca9b:	int3   
   14000ca9c:	int3   
   14000ca9d:	int3   
   14000ca9e:	int3   
   14000ca9f:	int3   
   14000caa0:	rex push rbp
   14000caa2:	push   r13
   14000caa4:	push   r14
   14000caa6:	push   r15
   14000caa8:	sub    rsp,0x28
   14000caac:	movsxd r13,r9d
   14000caaf:	mov    r15,r8
   14000cab2:	mov    r14,rdx
   14000cab5:	mov    rbp,rcx
   14000cab8:	test   r8,r8
   14000cabb:	je     0x14000cbff
   14000cac1:	test   r9d,r9d
   14000cac4:	jle    0x14000cbff
   14000caca:	cmp    BYTE PTR [r8],0x0
   14000cace:	je     0x14000cbff
   14000cad4:	mov    r9d,r13d
   14000cad7:	lea    rdx,[rsp+0x60]
   14000cadc:	call   0x14000e0f0
   14000cae1:	mov    rax,QWORD PTR [rsp+0x60]
   14000cae6:	test   rax,rax
   14000cae9:	je     0x14000cafd
   14000caeb:	mov    QWORD PTR [r14],rax
   14000caee:	mov    rax,r14
   14000caf1:	add    rsp,0x28
   14000caf5:	pop    r15
   14000caf7:	pop    r14
   14000caf9:	pop    r13
   14000cafb:	pop    rbp
   14000cafc:	ret    
   14000cafd:	mov    QWORD PTR [rsp+0x50],rbx
   14000cb02:	mov    rcx,rbp
   14000cb05:	lea    ebx,[r13+0x10]
   14000cb09:	mov    QWORD PTR [rsp+0x58],rsi
   14000cb0e:	and    ebx,0xfffffff8
   14000cb11:	mov    QWORD PTR [rsp+0x20],rdi
   14000cb16:	mov    edx,ebx
   14000cb18:	call   0x14000e590
   14000cb1d:	mov    edi,eax
   14000cb1f:	cmp    eax,0xffffffff
   14000cb22:	jne    0x14000cb84
   14000cb24:	movsxd rax,ebx
   14000cb27:	mov    edi,0x800
   14000cb2c:	add    rax,0xc
   14000cb30:	cmp    rax,rdi
   14000cb33:	jbe    0x14000cb38
   14000cb35:	lea    edi,[rbx+0xc]
   14000cb38:	mov    rax,QWORD PTR [rip+0x25851]        # 0x140032390
   14000cb3f:	movsxd rdx,edi
   14000cb42:	mov    rcx,QWORD PTR [rax]
   14000cb45:	mov    rax,QWORD PTR [rcx]
   14000cb48:	call   QWORD PTR [rax+0x8]
   14000cb4b:	lea    ecx,[rdi-0xc]
   14000cb4e:	mov    rsi,rax
   14000cb51:	mov    DWORD PTR [rax],ecx
   14000cb53:	mov    DWORD PTR [rax+0x4],0x0
   14000cb5a:	movsxd rdi,DWORD PTR [rbp+0x40]
   14000cb5e:	cmp    edi,DWORD PTR [rbp+0x50]
   14000cb61:	jne    0x14000cb71
   14000cb63:	lea    rcx,[rbp+0x48]
   14000cb67:	mov    edx,0x1
   14000cb6c:	call   0x140013420
   14000cb71:	mov    rax,QWORD PTR [rbp+0x48]
   14000cb75:	inc    DWORD PTR [rbp+0x40]
   14000cb78:	lea    rdx,[rax+rdi*8]
   14000cb7c:	test   rdx,rdx
   14000cb7f:	je     0x14000cb84
   14000cb81:	mov    QWORD PTR [rdx],rsi
   14000cb84:	mov    rax,QWORD PTR [rbp+0x48]
   14000cb88:	movsxd rcx,edi
   14000cb8b:	mov    r8,QWORD PTR [rax+rcx*8]
   14000cb8f:	movsxd rcx,DWORD PTR [r8+0x4]
   14000cb93:	lea    eax,[rcx+rbx*1]
   14000cb96:	lea    rsi,[r8+rcx*1]
   14000cb9a:	mov    DWORD PTR [r8+0x4],eax
   14000cb9e:	mov    rcx,r15
   14000cba1:	call   0x1400226d0
   14000cba6:	mov    eax,eax
   14000cba8:	lea    rcx,[rsi+0x10]
   14000cbac:	mov    r8,r13
   14000cbaf:	mov    QWORD PTR [rsi+0x8],rax
   14000cbb3:	mov    rdx,r15
   14000cbb6:	call   0x140026f70
   14000cbbb:	lea    rdx,[rsi+0x8]
   14000cbbf:	mov    BYTE PTR [r13+rsi*1+0x10],0x0
   14000cbc5:	mov    rcx,rbp
   14000cbc8:	call   0x14000f1e0
   14000cbcd:	mov    rdi,QWORD PTR [rsp+0x20]
   14000cbd2:	mov    rsi,QWORD PTR [rsp+0x58]
   14000cbd7:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cbdc:	lea    rcx,[rax+rax*4]
   14000cbe0:	mov    rax,QWORD PTR [rbp+0x8]
   14000cbe4:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   14000cbe9:	mov    rax,r14
   14000cbec:	add    rdx,0x8
   14000cbf0:	mov    QWORD PTR [r14],rdx
   14000cbf3:	add    rsp,0x28
   14000cbf7:	pop    r15
   14000cbf9:	pop    r14
   14000cbfb:	pop    r13
   14000cbfd:	pop    rbp
   14000cbfe:	ret    
   14000cbff:	mov    QWORD PTR [rdx],0x0
   14000cc06:	mov    rax,r14
   14000cc09:	add    rsp,0x28
   14000cc0d:	pop    r15
   14000cc0f:	pop    r14
   14000cc11:	pop    r13
   14000cc13:	pop    rbp
   14000cc14:	ret    
   14000cc15:	int3   
   14000cc16:	int3   
   14000cc17:	int3   
   14000cc18:	int3   
   14000cc19:	int3   
   14000cc1a:	int3   
   14000cc1b:	int3   
   14000cc1c:	int3   
   14000cc1d:	int3   
   14000cc1e:	int3   
   14000cc1f:	int3   
   14000cc20:	rex push rbx
   14000cc22:	sub    rsp,0x30
   14000cc26:	mov    eax,DWORD PTR [rcx]
   14000cc28:	mov    rbx,rcx
   14000cc2b:	test   eax,eax
   14000cc2d:	je     0x14000ce2e
   14000cc33:	mov    QWORD PTR [rsp+0x48],rsi
   14000cc38:	xor    esi,esi
   14000cc3a:	mov    QWORD PTR [rsp+0x50],rdi
   14000cc3f:	mov    QWORD PTR [rsp+0x28],r14
   14000cc44:	mov    QWORD PTR [rsp+0x20],r15
   14000cc49:	mov    QWORD PTR [rsp+0x40],rbp
   14000cc4e:	xchg   ax,ax
   14000cc50:	lea    r8d,[rax-0x1]
   14000cc54:	movsxd rdi,r8d
   14000cc57:	shl    rdi,0x4
   14000cc5b:	add    rdi,QWORD PTR [rbx+0x8]
   14000cc5f:	mov    r14,QWORD PTR [rdi]
   14000cc62:	mov    rcx,QWORD PTR [r14]
   14000cc65:	mov    rdx,rcx
   14000cc68:	and    edx,0x1e
   14000cc6b:	lea    rax,[rdx-0x14]
   14000cc6f:	test   rax,0xfffffffffffffff9
   14000cc75:	jne    0x14000cc7d
   14000cc77:	cmp    rdx,0x1a
   14000cc7b:	jne    0x14000ccc8
   14000cc7d:	movzx  eax,cl
   14000cc80:	shr    al,1
   14000cc82:	and    al,0xf
   14000cc84:	cmp    al,0x8
   14000cc86:	jne    0x14000ccc8
   14000cc88:	inc    DWORD PTR [rdi+0x8]
   14000cc8b:	mov    rcx,QWORD PTR [r14]
   14000cc8e:	mov    rdx,rcx
   14000cc91:	and    edx,0x1e
   14000cc94:	lea    rax,[rdx-0x14]
   14000cc98:	test   rax,0xfffffffffffffff9
   14000cc9e:	jne    0x14000cca6
   14000cca0:	cmp    rdx,0x1a
   14000cca4:	jne    0x14000ccbd
   14000cca6:	shr    cl,1
   14000cca8:	and    cl,0xf
   14000ccab:	cmp    cl,0x8
   14000ccae:	jne    0x14000ccbd
   14000ccb0:	mov    rax,QWORD PTR [r14+0x8]
   14000ccb4:	test   rax,rax
   14000ccb7:	je     0x14000ccbd
   14000ccb9:	mov    eax,DWORD PTR [rax]
   14000ccbb:	jmp    0x14000ccbf
   14000ccbd:	mov    eax,esi
   14000ccbf:	cmp    DWORD PTR [rdi+0x8],eax
   14000ccc2:	jl     0x14000cd35
   14000ccc4:	dec    DWORD PTR [rbx]
   14000ccc6:	jmp    0x14000cd26
   14000ccc8:	lea    rax,[rdx-0x14]
   14000cccc:	test   rax,0xfffffffffffffff9
   14000ccd2:	jne    0x14000ccda
   14000ccd4:	cmp    rdx,0x1a
   14000ccd8:	jne    0x14000cd23
   14000ccda:	shr    cl,1
   14000ccdc:	and    cl,0xf
   14000ccdf:	cmp    cl,0x9
   14000cce2:	jne    0x14000cd23
   14000cce4:	inc    DWORD PTR [rdi+0x8]
   14000cce7:	mov    rcx,QWORD PTR [r14]
   14000ccea:	mov    rdx,rcx
   14000cced:	and    edx,0x1e
   14000ccf0:	lea    rax,[rdx-0x14]
   14000ccf4:	test   rax,0xfffffffffffffff9
   14000ccfa:	jne    0x14000cd02
   14000ccfc:	cmp    rdx,0x1a
   14000cd00:	jne    0x14000cd0c
   14000cd02:	shr    cl,1
   14000cd04:	and    cl,0xf
   14000cd07:	cmp    cl,0x9
   14000cd0a:	je     0x14000cd10
   14000cd0c:	mov    eax,esi
   14000cd0e:	jmp    0x14000cd16
   14000cd10:	mov    rax,QWORD PTR [r14+0x8]
   14000cd14:	mov    eax,DWORD PTR [rax]
   14000cd16:	cmp    DWORD PTR [rdi+0x8],eax
   14000cd19:	jl     0x14000cda6
   14000cd1f:	dec    DWORD PTR [rbx]
   14000cd21:	jmp    0x14000cd26
   14000cd23:	mov    DWORD PTR [rbx],r8d
   14000cd26:	mov    eax,DWORD PTR [rbx]
   14000cd28:	test   eax,eax
   14000cd2a:	jne    0x14000cc50
   14000cd30:	jmp    0x14000ce15
   14000cd35:	movsxd rbp,DWORD PTR [rbx]
   14000cd38:	cmp    ebp,DWORD PTR [rbx+0x10]
   14000cd3b:	jne    0x14000cd4b
   14000cd3d:	mov    edx,0x1
   14000cd42:	lea    rcx,[rbx+0x8]
   14000cd46:	call   0x140023260
   14000cd4b:	inc    DWORD PTR [rbx]
   14000cd4d:	mov    rdx,rbp
   14000cd50:	shl    rdx,0x4
   14000cd54:	add    rdx,QWORD PTR [rbx+0x8]
   14000cd58:	mov    DWORD PTR [rdx+0x8],0xffffffff
   14000cd5f:	mov    rcx,QWORD PTR [r14]
   14000cd62:	movsxd r8,DWORD PTR [rdi+0x8]
   14000cd66:	mov    r9,rcx
   14000cd69:	and    r9d,0x1e
   14000cd6d:	lea    rax,[r9-0x14]
   14000cd71:	test   rax,0xfffffffffffffff9
   14000cd77:	jne    0x14000cd7f
   14000cd79:	cmp    r9,0x1a
   14000cd7d:	jne    0x14000cda1
   14000cd7f:	shr    cl,1
   14000cd81:	and    cl,0xf
   14000cd84:	cmp    cl,0x8
   14000cd87:	jne    0x14000cda1
   14000cd89:	mov    rax,QWORD PTR [r14+0x8]
   14000cd8d:	test   rax,rax
   14000cd90:	je     0x14000cda1
   14000cd92:	test   r8d,r8d
   14000cd95:	js     0x14000cda1
   14000cd97:	cmp    r8,QWORD PTR [rax]
   14000cd9a:	jge    0x14000cda1
   14000cd9c:	mov    rsi,QWORD PTR [rax+r8*8+0x8]
   14000cda1:	mov    QWORD PTR [rdx],rsi
   14000cda4:	jmp    0x14000ce15
   14000cda6:	movsxd rbp,DWORD PTR [rbx]
   14000cda9:	cmp    ebp,DWORD PTR [rbx+0x10]
   14000cdac:	jne    0x14000cdbc
   14000cdae:	mov    edx,0x1
   14000cdb3:	lea    rcx,[rbx+0x8]
   14000cdb7:	call   0x140023260
   14000cdbc:	inc    DWORD PTR [rbx]
   14000cdbe:	mov    r8,rbp
   14000cdc1:	shl    r8,0x4
   14000cdc5:	add    r8,QWORD PTR [rbx+0x8]
   14000cdc9:	mov    DWORD PTR [r8+0x8],0xffffffff
   14000cdd1:	mov    rcx,QWORD PTR [r14]
   14000cdd4:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000cdd8:	mov    r9,rcx
   14000cddb:	and    r9d,0x1e
   14000cddf:	lea    rax,[r9-0x14]
   14000cde3:	test   rax,0xfffffffffffffff9
   14000cde9:	jne    0x14000cdf1
   14000cdeb:	cmp    r9,0x1a
   14000cdef:	jne    0x14000ce12
   14000cdf1:	shr    cl,1
   14000cdf3:	and    cl,0xf
   14000cdf6:	cmp    cl,0x9
   14000cdf9:	jne    0x14000ce12
   14000cdfb:	mov    rax,QWORD PTR [r14+0x8]
   14000cdff:	test   edx,edx
   14000ce01:	js     0x14000ce12
   14000ce03:	cmp    edx,DWORD PTR [rax]
   14000ce05:	jge    0x14000ce12
   14000ce07:	mov    rax,QWORD PTR [rax+0x98]
   14000ce0e:	mov    rsi,QWORD PTR [rax+rdx*8]
   14000ce12:	mov    QWORD PTR [r8],rsi
   14000ce15:	mov    rbp,QWORD PTR [rsp+0x40]
   14000ce1a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000ce1f:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ce24:	mov    r14,QWORD PTR [rsp+0x28]
   14000ce29:	mov    r15,QWORD PTR [rsp+0x20]
   14000ce2e:	add    rsp,0x30
   14000ce32:	pop    rbx
   14000ce33:	ret    
   14000ce34:	int3   
   14000ce35:	int3   
   14000ce36:	int3   
   14000ce37:	int3   
   14000ce38:	int3   
   14000ce39:	int3   
   14000ce3a:	int3   
   14000ce3b:	int3   
   14000ce3c:	int3   
   14000ce3d:	int3   
   14000ce3e:	int3   
   14000ce3f:	int3   
   14000ce40:	mov    QWORD PTR [rsp+0x18],rbx
   14000ce45:	push   rbp
   14000ce46:	sub    rsp,0x20
   14000ce4a:	movsxd rbx,r8d
   14000ce4d:	mov    rbp,rdx
   14000ce50:	test   r8d,r8d
   14000ce53:	jne    0x14000ce62
   14000ce55:	xor    eax,eax
   14000ce57:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ce5c:	add    rsp,0x20
   14000ce60:	pop    rbp
   14000ce61:	ret    
   14000ce62:	mov    rax,QWORD PTR [rip+0x25527]        # 0x140032390
   14000ce69:	lea    rdx,[rbx+0x8]
   14000ce6d:	mov    QWORD PTR [rsp+0x30],rsi
   14000ce72:	mov    QWORD PTR [rsp+0x38],rdi
   14000ce77:	mov    rcx,QWORD PTR [rax]
   14000ce7a:	mov    rax,QWORD PTR [rcx]
   14000ce7d:	call   QWORD PTR [rax+0x8]
   14000ce80:	mov    rdi,rax
   14000ce83:	mov    QWORD PTR [rax],rbx
   14000ce86:	test   ebx,ebx
   14000ce88:	jns    0x14000ce8b
   14000ce8a:	int3   
   14000ce8b:	lea    rcx,[rax+0x8]
   14000ce8f:	mov    r8,rbx
   14000ce92:	mov    rdx,rbp
   14000ce95:	call   0x140026f70
   14000ce9a:	mov    rsi,QWORD PTR [rsp+0x30]
   14000ce9f:	mov    rax,rdi
   14000cea2:	mov    rdi,QWORD PTR [rsp+0x38]
   14000cea7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ceac:	add    rsp,0x20
   14000ceb0:	pop    rbp
   14000ceb1:	ret    
   14000ceb2:	int3   
   14000ceb3:	int3   
   14000ceb4:	int3   
   14000ceb5:	int3   
   14000ceb6:	int3   
   14000ceb7:	int3   
   14000ceb8:	int3   
   14000ceb9:	int3   
   14000ceba:	int3   
   14000cebb:	int3   
   14000cebc:	int3   
   14000cebd:	int3   
   14000cebe:	int3   
   14000cebf:	int3   
   14000cec0:	rex push rbx
   14000cec2:	sub    rsp,0x20
   14000cec6:	inc    DWORD PTR [rcx+0x4d0]
   14000cecc:	mov    rbx,rcx
   14000cecf:	mov    rcx,QWORD PTR [rcx+0x458]
   14000ced6:	test   rcx,rcx
   14000ced9:	je     0x14000cf14
   14000cedb:	call   0x14000d090
   14000cee0:	mov    rdx,QWORD PTR [rbx+0x458]
   14000cee7:	movabs rcx,0x3fffffffffffffff
   14000cef1:	cmp    QWORD PTR [rdx+0x10],rcx
   14000cef5:	jne    0x14000cfb2
   14000cefb:	mov    rcx,QWORD PTR [rdx+0x8]
   14000ceff:	mov    QWORD PTR [rdx+0x8],0x0
   14000cf07:	mov    QWORD PTR [rbx+0x458],rcx
   14000cf0e:	add    rsp,0x20
   14000cf12:	pop    rbx
   14000cf13:	ret    
   14000cf14:	mov    rax,QWORD PTR [rip+0x25475]        # 0x140032390
   14000cf1b:	mov    edx,0x807
   14000cf20:	mov    QWORD PTR [rsp+0x30],rsi
   14000cf25:	mov    QWORD PTR [rsp+0x38],rdi
   14000cf2a:	mov    rcx,QWORD PTR [rax]
   14000cf2d:	mov    rax,QWORD PTR [rcx]
   14000cf30:	call   QWORD PTR [rax+0x8]
   14000cf33:	lea    rcx,[rax+0x407]
   14000cf3a:	and    rcx,0xfffffffffffffc00
   14000cf41:	mov    QWORD PTR [rcx-0x8],rax
   14000cf45:	call   0x14000c3f0
   14000cf4a:	xor    edx,edx
   14000cf4c:	mov    r8d,0x400
   14000cf52:	mov    rcx,rax
   14000cf55:	mov    rdi,rax
   14000cf58:	call   0x1400277b0
   14000cf5d:	mov    QWORD PTR [rdi],rbx
   14000cf60:	movsxd rsi,DWORD PTR [rbx+0x400]
   14000cf67:	cmp    esi,DWORD PTR [rbx+0x410]
   14000cf6d:	jne    0x14000cf80
   14000cf6f:	lea    rcx,[rbx+0x408]
   14000cf76:	mov    edx,0x1
   14000cf7b:	call   0x140013420
   14000cf80:	mov    rax,QWORD PTR [rbx+0x408]
   14000cf87:	inc    DWORD PTR [rbx+0x400]
   14000cf8d:	lea    rdx,[rax+rsi*8]
   14000cf91:	mov    rsi,QWORD PTR [rsp+0x30]
   14000cf96:	test   rdx,rdx
   14000cf99:	je     0x14000cf9e
   14000cf9b:	mov    QWORD PTR [rdx],rdi
   14000cf9e:	mov    rcx,rdi
   14000cfa1:	mov    QWORD PTR [rbx+0x458],rdi
   14000cfa8:	call   0x14000d090
   14000cfad:	mov    rdi,QWORD PTR [rsp+0x38]
   14000cfb2:	add    rsp,0x20
   14000cfb6:	pop    rbx
   14000cfb7:	ret    
   14000cfb8:	int3   
   14000cfb9:	int3   
   14000cfba:	int3   
   14000cfbb:	int3   
   14000cfbc:	int3   
   14000cfbd:	int3   
   14000cfbe:	int3   
   14000cfbf:	int3   
   14000cfc0:	rex push rbx
   14000cfc2:	sub    rsp,0x20
   14000cfc6:	movzx  eax,BYTE PTR [rcx]
   14000cfc9:	xor    r8d,r8d
   14000cfcc:	and    rcx,0xfffffffffffffc00
   14000cfd3:	mov    rbx,rdx
   14000cfd6:	and    al,0x1
   14000cfd8:	mov    edx,r8d
   14000cfdb:	cmove  rdx,rcx
   14000cfdf:	test   rdx,rdx
   14000cfe2:	je     0x14000cfe9
   14000cfe4:	mov    rcx,QWORD PTR [rdx]
   14000cfe7:	jmp    0x14000cfec
   14000cfe9:	mov    rcx,r8
   14000cfec:	test   rcx,rcx
   14000cfef:	je     0x14000d03e
   14000cff1:	test   rbx,rbx
   14000cff4:	je     0x14000d00b
   14000cff6:	or     rdx,0xffffffffffffffff
   14000cffa:	nop    WORD PTR [rax+rax*1+0x0]
   14000d000:	inc    rdx
   14000d003:	cmp    BYTE PTR [rbx+rdx*1],r8b
   14000d007:	jne    0x14000d000
   14000d009:	jmp    0x14000d00e
   14000d00b:	mov    edx,r8d
   14000d00e:	mov    r9d,edx
   14000d011:	add    rcx,0x460
   14000d018:	lea    rdx,[rsp+0x30]
   14000d01d:	mov    r8,rbx
   14000d020:	call   0x14000caa0
   14000d025:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d02a:	lea    rax,[rip+0x2576f]        # 0x1400327a0
   14000d031:	test   rcx,rcx
   14000d034:	cmovne rax,rcx
   14000d038:	add    rsp,0x20
   14000d03c:	pop    rbx
   14000d03d:	ret    
   14000d03e:	test   rbx,rbx
   14000d041:	je     0x14000d07e
   14000d043:	or     rdx,0xffffffffffffffff
   14000d047:	inc    rdx
   14000d04a:	cmp    BYTE PTR [rbx+rdx*1],r8b
   14000d04e:	jne    0x14000d047
   14000d050:	mov    rax,QWORD PTR [rip+0x25339]        # 0x140032390
   14000d057:	inc    rdx
   14000d05a:	mov    rcx,QWORD PTR [rax]
   14000d05d:	mov    rax,QWORD PTR [rcx]
   14000d060:	call   QWORD PTR [rax+0x8]
   14000d063:	mov    rdx,rax
   14000d066:	mov    r8,rax
   14000d069:	sub    rdx,rbx
   14000d06c:	nop    DWORD PTR [rax+0x0]
   14000d070:	movzx  ecx,BYTE PTR [rbx]
   14000d073:	mov    BYTE PTR [rdx+rbx*1],cl
   14000d076:	lea    rbx,[rbx+0x1]
   14000d07a:	test   cl,cl
   14000d07c:	jne    0x14000d070
   14000d07e:	mov    rax,r8
   14000d081:	add    rsp,0x20
   14000d085:	pop    rbx
   14000d086:	ret    
   14000d087:	int3   
   14000d088:	int3   
   14000d089:	int3   
   14000d08a:	int3   
   14000d08b:	int3   
   14000d08c:	int3   
   14000d08d:	int3   
   14000d08e:	int3   
   14000d08f:	int3   
   14000d090:	mov    r8,QWORD PTR [rcx+0x10]
   14000d094:	mov    rax,r8
   14000d097:	not    rax
   14000d09a:	test   eax,eax
   14000d09c:	je     0x14000d0ab
   14000d09e:	bsf    edx,eax
   14000d0a1:	mov    eax,0xffffffff
   14000d0a6:	cmove  edx,eax
   14000d0a9:	jmp    0x14000d0c0
   14000d0ab:	shr    rax,0x20
   14000d0af:	test   eax,eax
   14000d0b1:	je     0x14000d0f7
   14000d0b3:	bsf    edx,eax
   14000d0b6:	jne    0x14000d0bd
   14000d0b8:	or     edx,0xffffffff
   14000d0bb:	jmp    0x14000d0c0
   14000d0bd:	add    edx,0x20
   14000d0c0:	cmp    edx,0xffffffff
   14000d0c3:	je     0x14000d0f7
   14000d0c5:	movsxd rax,edx
   14000d0c8:	bts    r8,rax
   14000d0cc:	shl    rax,0x4
   14000d0d0:	add    rax,0x18
   14000d0d4:	mov    QWORD PTR [rcx+0x10],r8
   14000d0d8:	add    rax,rcx
   14000d0db:	je     0x14000d0f9
   14000d0dd:	mov    rcx,QWORD PTR [rax]
   14000d0e0:	and    rcx,0xffffffffffe00002
   14000d0e7:	mov    QWORD PTR [rax+0x8],0x0
   14000d0ef:	or     rcx,0x2
   14000d0f3:	mov    QWORD PTR [rax],rcx
   14000d0f6:	ret    
   14000d0f7:	xor    eax,eax
   14000d0f9:	ret    
   14000d0fa:	int3   
   14000d0fb:	int3   
   14000d0fc:	int3   
   14000d0fd:	int3   
   14000d0fe:	int3   
   14000d0ff:	int3   
   14000d100:	mov    QWORD PTR [rsp+0x8],rbx
   14000d105:	push   rdi
   14000d106:	sub    rsp,0x20
   14000d10a:	mov    rdx,QWORD PTR [rcx]
   14000d10d:	mov    rbx,rcx
   14000d110:	mov    rcx,rdx
   14000d113:	and    ecx,0x1e
   14000d116:	lea    rax,[rcx-0x14]
   14000d11a:	test   rax,0xfffffffffffffff9
   14000d120:	jne    0x14000d128
   14000d122:	cmp    rcx,0x1a
   14000d126:	jne    0x14000d132
   14000d128:	shr    dl,1
   14000d12a:	and    dl,0xf
   14000d12d:	cmp    dl,0x8
   14000d130:	je     0x14000d13c
   14000d132:	mov    dl,0x8
   14000d134:	mov    rcx,rbx
   14000d137:	call   0x14000faa0
   14000d13c:	mov    rcx,QWORD PTR [rbx]
   14000d13f:	mov    rdx,rcx
   14000d142:	and    edx,0x1e
   14000d145:	lea    rax,[rdx-0x14]
   14000d149:	test   rax,0xfffffffffffffff9
   14000d14f:	jne    0x14000d157
   14000d151:	cmp    rdx,0x1a
   14000d155:	jne    0x14000d16e
   14000d157:	shr    cl,1
   14000d159:	and    cl,0xf
   14000d15c:	cmp    cl,0x8
   14000d15f:	jne    0x14000d16e
   14000d161:	mov    rax,QWORD PTR [rbx+0x8]
   14000d165:	test   rax,rax
   14000d168:	je     0x14000d16e
   14000d16a:	mov    edi,DWORD PTR [rax]
   14000d16c:	jmp    0x14000d170
   14000d16e:	xor    edi,edi
   14000d170:	mov    rdx,QWORD PTR [rbx+0x8]
   14000d174:	mov    r9d,0x1
   14000d17a:	mov    r8d,edi
   14000d17d:	mov    rcx,rbx
   14000d180:	call   0x14000d1e0
   14000d185:	mov    rdx,QWORD PTR [rbx]
   14000d188:	mov    r8,rdx
   14000d18b:	mov    QWORD PTR [rbx+0x8],rax
   14000d18f:	and    r8d,0x1e
   14000d193:	lea    rcx,[r8-0x14]
   14000d197:	test   rcx,0xfffffffffffffff9
   14000d19e:	jne    0x14000d1a6
   14000d1a0:	cmp    r8,0x1a
   14000d1a4:	jne    0x14000d1d1
   14000d1a6:	shr    dl,1
   14000d1a8:	and    dl,0xf
   14000d1ab:	cmp    dl,0x8
   14000d1ae:	jne    0x14000d1d1
   14000d1b0:	test   rax,rax
   14000d1b3:	je     0x14000d1d1
   14000d1b5:	test   edi,edi
   14000d1b7:	js     0x14000d1d1
   14000d1b9:	movsxd rcx,edi
   14000d1bc:	cmp    rcx,QWORD PTR [rax]
   14000d1bf:	jge    0x14000d1d1
   14000d1c1:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
   14000d1c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1cb:	add    rsp,0x20
   14000d1cf:	pop    rdi
   14000d1d0:	ret    
   14000d1d1:	xor    eax,eax
   14000d1d3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1d8:	add    rsp,0x20
   14000d1dc:	pop    rdi
   14000d1dd:	ret    
   14000d1de:	int3   
   14000d1df:	int3   
   14000d1e0:	mov    DWORD PTR [rsp+0x18],r8d
   14000d1e5:	push   rbp
   14000d1e6:	push   rsi
   14000d1e7:	push   rdi
   14000d1e8:	push   r12
   14000d1ea:	sub    rsp,0x48
   14000d1ee:	movsxd rdi,r9d
   14000d1f1:	mov    rsi,rdx
   14000d1f4:	movsxd rbp,r8d
   14000d1f7:	mov    r12,rcx
   14000d1fa:	test   r9d,r9d
   14000d1fd:	jne    0x14000d20c
   14000d1ff:	mov    rax,rdx
   14000d202:	add    rsp,0x48
   14000d206:	pop    r12
   14000d208:	pop    rdi
   14000d209:	pop    rsi
   14000d20a:	pop    rbp
   14000d20b:	ret    
   14000d20c:	mov    QWORD PTR [rsp+0x70],rbx
   14000d211:	mov    QWORD PTR [rsp+0x78],r13
   14000d216:	mov    QWORD PTR [rsp+0x88],r14
   14000d21e:	mov    QWORD PTR [rsp+0x40],r15
   14000d223:	test   rsi,rsi
   14000d226:	je     0x14000d22d
   14000d228:	mov    r14d,DWORD PTR [rdx]
   14000d22b:	jmp    0x14000d230
   14000d22d:	xor    r14d,r14d
   14000d230:	lea    eax,[r14+rdi*1]
   14000d234:	movsxd rbx,eax
   14000d237:	mov    rax,QWORD PTR [rip+0x25152]        # 0x140032390
   14000d23e:	lea    rdx,[rbx*8+0x8]
   14000d246:	mov    rcx,QWORD PTR [rax]
   14000d249:	mov    rax,QWORD PTR [rcx]
   14000d24c:	call   QWORD PTR [rax+0x8]
   14000d24f:	mov    QWORD PTR [rsp+0x20],rbp
   14000d254:	lea    r13,[rsi+0x8]
   14000d258:	mov    QWORD PTR [rsp+0x30],rax
   14000d25d:	mov    r9,rbp
   14000d260:	mov    QWORD PTR [rax],rbx
   14000d263:	lea    r10,[rax+0x8]
   14000d267:	mov    QWORD PTR [rsp+0x28],r10
   14000d26c:	test   ebp,ebp
   14000d26e:	jle    0x14000d298
   14000d270:	mov    r8,r10
   14000d273:	mov    rcx,r13
   14000d276:	sub    r8,r13
   14000d279:	mov    rdx,rbp
   14000d27c:	nop    DWORD PTR [rax+0x0]
   14000d280:	mov    rax,QWORD PTR [rcx]
   14000d283:	mov    QWORD PTR [r8+rcx*1],rax
   14000d287:	mov    QWORD PTR [rcx],0x0
   14000d28e:	lea    rcx,[rcx+0x8]
   14000d292:	sub    rdx,0x1
   14000d296:	jne    0x14000d280
   14000d298:	mov    r15,rdi
   14000d29b:	test   edi,edi
   14000d29d:	jle    0x14000d322
   14000d2a3:	mov    rbp,r12
   14000d2a6:	lea    rbx,[r10+r9*8]
   14000d2aa:	and    rbp,0xfffffffffffffc00
   14000d2b1:	test   BYTE PTR [r12],0x1
   14000d2b6:	mov    ecx,0x0
   14000d2bb:	cmove  rcx,rbp
   14000d2bf:	test   rcx,rcx
   14000d2c2:	je     0x14000d2c7
   14000d2c4:	mov    rcx,QWORD PTR [rcx]
   14000d2c7:	test   rcx,rcx
   14000d2ca:	je     0x14000d2d6
   14000d2cc:	call   0x14000cec0
   14000d2d1:	mov    rcx,rax
   14000d2d4:	jmp    0x14000d304
   14000d2d6:	mov    ecx,0x10
   14000d2db:	call   0x140007bf0
   14000d2e0:	mov    rcx,rax
   14000d2e3:	test   rax,rax
   14000d2e6:	je     0x14000d302
   14000d2e8:	mov    rax,QWORD PTR [rax]
   14000d2eb:	and    rax,0xffffffffffe00003
   14000d2f1:	mov    QWORD PTR [rcx+0x8],0x0
   14000d2f9:	or     rax,0x3
   14000d2fd:	mov    QWORD PTR [rcx],rax
   14000d300:	jmp    0x14000d304
   14000d302:	xor    ecx,ecx
   14000d304:	mov    QWORD PTR [rbx],rcx
   14000d307:	add    rbx,0x8
   14000d30b:	sub    rdi,0x1
   14000d30f:	jne    0x14000d2b1
   14000d311:	mov    r9,QWORD PTR [rsp+0x20]
   14000d316:	mov    r10,QWORD PTR [rsp+0x28]
   14000d31b:	mov    ebp,DWORD PTR [rsp+0x80]
   14000d322:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d327:	sub    r14d,ebp
   14000d32a:	mov    eax,0x0
   14000d32f:	cmovns eax,r14d
   14000d333:	mov    r14,QWORD PTR [rsp+0x88]
   14000d33b:	movsxd rdx,eax
   14000d33e:	test   eax,eax
   14000d340:	jle    0x14000d378
   14000d342:	lea    rax,[r9*8+0x0]
   14000d34a:	lea    r8,[r15*8+0x0]
   14000d352:	add    rax,r13
   14000d355:	sub    r8,r13
   14000d358:	add    r8,r10
   14000d35b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d360:	mov    rcx,QWORD PTR [rax]
   14000d363:	mov    QWORD PTR [r8+rax*1],rcx
   14000d367:	mov    QWORD PTR [rax],0x0
   14000d36e:	lea    rax,[rax+0x8]
   14000d372:	sub    rdx,0x1
   14000d376:	jne    0x14000d360
   14000d378:	mov    rax,QWORD PTR [rip+0x25011]        # 0x140032390
   14000d37f:	mov    rdx,rsi
   14000d382:	mov    rcx,QWORD PTR [rax]
   14000d385:	mov    rax,QWORD PTR [rcx]
   14000d388:	call   QWORD PTR [rax+0x28]
   14000d38b:	mov    rax,QWORD PTR [rsp+0x30]
   14000d390:	mov    r15,QWORD PTR [rsp+0x40]
   14000d395:	mov    r13,QWORD PTR [rsp+0x78]
   14000d39a:	add    rsp,0x48
   14000d39e:	pop    r12
   14000d3a0:	pop    rdi
   14000d3a1:	pop    rsi
   14000d3a2:	pop    rbp
   14000d3a3:	ret    
   14000d3a4:	int3   
   14000d3a5:	int3   
   14000d3a6:	int3   
   14000d3a7:	int3   
   14000d3a8:	int3   
   14000d3a9:	int3   
   14000d3aa:	int3   
   14000d3ab:	int3   
   14000d3ac:	int3   
   14000d3ad:	int3   
   14000d3ae:	int3   
   14000d3af:	int3   
   14000d3b0:	rex push rsi
   14000d3b2:	push   rdi
   14000d3b3:	push   r13
   14000d3b5:	push   r14
   14000d3b7:	sub    rsp,0x38
   14000d3bb:	movsxd rdi,r9d
   14000d3be:	mov    rsi,rdx
   14000d3c1:	movsxd r14,r8d
   14000d3c4:	mov    r13,rcx
   14000d3c7:	test   r9d,r9d
   14000d3ca:	jne    0x14000d3da
   14000d3cc:	mov    rax,rdx
   14000d3cf:	add    rsp,0x38
   14000d3d3:	pop    r14
   14000d3d5:	pop    r13
   14000d3d7:	pop    rdi
   14000d3d8:	pop    rsi
   14000d3d9:	ret    
   14000d3da:	mov    QWORD PTR [rsp+0x70],r12
   14000d3df:	mov    QWORD PTR [rsp+0x30],r15
   14000d3e4:	test   rsi,rsi
   14000d3e7:	je     0x14000d3ee
   14000d3e9:	mov    r15d,DWORD PTR [rdx]
   14000d3ec:	jmp    0x14000d3f1
   14000d3ee:	xor    r15d,r15d
   14000d3f1:	lea    r12d,[r14+rdi*1]
   14000d3f5:	mov    DWORD PTR [rsp+0x78],r12d
   14000d3fa:	cmp    r12d,r15d
   14000d3fd:	jle    0x14000d407
   14000d3ff:	mov    rax,rsi
   14000d402:	jmp    0x14000d560
   14000d407:	mov    eax,r15d
   14000d40a:	sub    eax,edi
   14000d40c:	jne    0x14000d41f
   14000d40e:	test   rsi,rsi
   14000d411:	je     0x14000d41f
   14000d413:	call   0x14000e6b0
   14000d418:	xor    eax,eax
   14000d41a:	jmp    0x14000d560
   14000d41f:	mov    QWORD PTR [rsp+0x60],rbx
   14000d424:	movsxd rbx,eax
   14000d427:	mov    rax,QWORD PTR [rip+0x24f62]        # 0x140032390
   14000d42e:	mov    QWORD PTR [rsp+0x68],rbp
   14000d433:	lea    rdx,[rbx*8+0x8]
   14000d43b:	mov    rcx,QWORD PTR [rax]
   14000d43e:	mov    rax,QWORD PTR [rcx]
   14000d441:	call   QWORD PTR [rax+0x8]
   14000d444:	mov    QWORD PTR [rsp+0x28],rax
   14000d449:	lea    r9,[rsi+0x8]
   14000d44d:	mov    QWORD PTR [rax],rbx
   14000d450:	lea    r10,[rax+0x8]
   14000d454:	mov    QWORD PTR [rsp+0x20],r10
   14000d459:	test   r14,r14
   14000d45c:	jle    0x14000d488
   14000d45e:	mov    r8,r10
   14000d461:	mov    rcx,r9
   14000d464:	sub    r8,r9
   14000d467:	mov    rdx,r14
   14000d46a:	nop    WORD PTR [rax+rax*1+0x0]
   14000d470:	mov    rax,QWORD PTR [rcx]
   14000d473:	mov    QWORD PTR [r8+rcx*1],rax
   14000d477:	mov    QWORD PTR [rcx],0x0
   14000d47e:	lea    rcx,[rcx+0x8]
   14000d482:	sub    rdx,0x1
   14000d486:	jne    0x14000d470
   14000d488:	mov    rbp,rdi
   14000d48b:	test   edi,edi
   14000d48d:	jle    0x14000d4fa
   14000d48f:	mov    r12,r13
   14000d492:	lea    rdi,[r9+r14*8]
   14000d496:	and    r12,0xfffffffffffffc00
   14000d49d:	nop    DWORD PTR [rax]
   14000d4a0:	test   BYTE PTR [r13+0x0],0x1
   14000d4a5:	mov    ecx,0x0
   14000d4aa:	mov    rbx,QWORD PTR [rdi]
   14000d4ad:	cmove  rcx,r12
   14000d4b1:	test   rcx,rcx
   14000d4b4:	je     0x14000d4b9
   14000d4b6:	mov    rcx,QWORD PTR [rcx]
   14000d4b9:	test   rcx,rcx
   14000d4bc:	je     0x14000d4c8
   14000d4be:	mov    rdx,rbx
   14000d4c1:	call   0x14000e790
   14000d4c6:	jmp    0x14000d4e2
   14000d4c8:	test   rbx,rbx
   14000d4cb:	je     0x14000d4e2
   14000d4cd:	mov    rcx,rbx
   14000d4d0:	call   0x14000f9e0
   14000d4d5:	mov    edx,0x10
   14000d4da:	mov    rcx,rbx
   14000d4dd:	call   0x14002639c
   14000d4e2:	add    rdi,0x8
   14000d4e6:	sub    rbp,0x1
   14000d4ea:	jne    0x14000d4a0
   14000d4ec:	mov    r12d,DWORD PTR [rsp+0x78]
   14000d4f1:	lea    r9,[rsi+0x8]
   14000d4f5:	mov    r10,QWORD PTR [rsp+0x20]
   14000d4fa:	mov    rbp,QWORD PTR [rsp+0x68]
   14000d4ff:	sub    r15d,r12d
   14000d502:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d507:	mov    eax,0x0
   14000d50c:	cmovns eax,r15d
   14000d510:	movsxd rdx,eax
   14000d513:	test   eax,eax
   14000d515:	jle    0x14000d548
   14000d517:	movsxd rax,r12d
   14000d51a:	sub    r14,rax
   14000d51d:	shl    r14,0x3
   14000d521:	sub    r14,r9
   14000d524:	lea    rcx,[r9+rax*8]
   14000d528:	lea    r8,[r14+r10*1]
   14000d52c:	nop    DWORD PTR [rax+0x0]
   14000d530:	mov    rax,QWORD PTR [rcx]
   14000d533:	mov    QWORD PTR [r8+rcx*1],rax
   14000d537:	mov    QWORD PTR [rcx],0x0
   14000d53e:	lea    rcx,[rcx+0x8]
   14000d542:	sub    rdx,0x1
   14000d546:	jne    0x14000d530
   14000d548:	mov    rax,QWORD PTR [rip+0x24e41]        # 0x140032390
   14000d54f:	mov    rdx,rsi
   14000d552:	mov    rcx,QWORD PTR [rax]
   14000d555:	mov    rax,QWORD PTR [rcx]
   14000d558:	call   QWORD PTR [rax+0x28]
   14000d55b:	mov    rax,QWORD PTR [rsp+0x28]
   14000d560:	mov    r12,QWORD PTR [rsp+0x70]
   14000d565:	mov    r15,QWORD PTR [rsp+0x30]
   14000d56a:	add    rsp,0x38
   14000d56e:	pop    r14
   14000d570:	pop    r13
   14000d572:	pop    rdi
   14000d573:	pop    rsi
   14000d574:	ret    
   14000d575:	int3   
   14000d576:	int3   
   14000d577:	int3   
   14000d578:	int3   
   14000d579:	int3   
   14000d57a:	int3   
   14000d57b:	int3   
   14000d57c:	int3   
   14000d57d:	int3   
   14000d57e:	int3   
   14000d57f:	int3   
   14000d580:	rex push rbx
   14000d582:	sub    rsp,0x20
   14000d586:	mov    r9d,r8d
   14000d589:	mov    rbx,rcx
   14000d58c:	mov    r8d,edx
   14000d58f:	mov    rdx,QWORD PTR [rcx+0x8]
   14000d593:	call   0x14000d3b0
   14000d598:	mov    QWORD PTR [rbx+0x8],rax
   14000d59c:	add    rsp,0x20
   14000d5a0:	pop    rbx
   14000d5a1:	ret    
   14000d5a2:	int3   
   14000d5a3:	int3   
   14000d5a4:	int3   
   14000d5a5:	int3   
   14000d5a6:	int3   
   14000d5a7:	int3   
   14000d5a8:	int3   
   14000d5a9:	int3   
   14000d5aa:	int3   
   14000d5ab:	int3   
   14000d5ac:	int3   
   14000d5ad:	int3   
   14000d5ae:	int3   
   14000d5af:	int3   
   14000d5b0:	mov    QWORD PTR [rsp+0x18],rbx
   14000d5b5:	mov    QWORD PTR [rsp+0x20],rbp
   14000d5ba:	push   rsi
   14000d5bb:	push   r12
   14000d5bd:	push   r15
   14000d5bf:	sub    rsp,0x20
   14000d5c3:	movsxd rbp,DWORD PTR [rcx]
   14000d5c6:	xor    r12d,r12d
   14000d5c9:	mov    r15,rdx
   14000d5cc:	mov    rsi,rcx
   14000d5cf:	mov    ebx,r12d
   14000d5d2:	test   rbp,rbp
   14000d5d5:	jle    0x14000d64e
   14000d5d7:	mov    QWORD PTR [rsp+0x40],rdi
   14000d5dc:	mov    QWORD PTR [rsp+0x48],r14
   14000d5e1:	mov    r14,rdx
   14000d5e4:	and    r14,0xfffffffffffffc00
   14000d5eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d5f0:	test   BYTE PTR [r15],0x1
   14000d5f4:	mov    rcx,r12
   14000d5f7:	mov    rax,QWORD PTR [rsi+0x98]
   14000d5fe:	cmove  rcx,r14
   14000d602:	mov    rdi,QWORD PTR [rax+rbx*8]
   14000d606:	test   rcx,rcx
   14000d609:	je     0x14000d610
   14000d60b:	mov    rcx,QWORD PTR [rcx]
   14000d60e:	jmp    0x14000d613
   14000d610:	mov    rcx,r12
   14000d613:	test   rcx,rcx
   14000d616:	je     0x14000d622
   14000d618:	mov    rdx,rdi
   14000d61b:	call   0x14000e790
   14000d620:	jmp    0x14000d63c
   14000d622:	test   rdi,rdi
   14000d625:	je     0x14000d63c
   14000d627:	mov    rcx,rdi
   14000d62a:	call   0x14000f9e0
   14000d62f:	mov    edx,0x10
   14000d634:	mov    rcx,rdi
   14000d637:	call   0x14002639c
   14000d63c:	inc    rbx
   14000d63f:	cmp    rbx,rbp
   14000d642:	jl     0x14000d5f0
   14000d644:	mov    r14,QWORD PTR [rsp+0x48]
   14000d649:	mov    rdi,QWORD PTR [rsp+0x40]
   14000d64e:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d653:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d658:	mov    DWORD PTR [rsi],r12d
   14000d65b:	mov    DWORD PTR [rsi+0x90],r12d
   14000d662:	mov    DWORD PTR [rsi+0x38],r12d
   14000d666:	mov    DWORD PTR [rsi+0xe8],r12d
   14000d66d:	add    rsp,0x20
   14000d671:	pop    r15
   14000d673:	pop    r12
   14000d675:	pop    rsi
   14000d676:	ret    
   14000d677:	int3   
   14000d678:	int3   
   14000d679:	int3   
   14000d67a:	int3   
   14000d67b:	int3   
   14000d67c:	int3   
   14000d67d:	int3   
   14000d67e:	int3   
   14000d67f:	int3   
   14000d680:	mov    QWORD PTR [rsp+0x10],rbx
   14000d685:	mov    QWORD PTR [rsp+0x18],rbp
   14000d68a:	push   rsi
   14000d68b:	push   rdi
   14000d68c:	push   r13
   14000d68e:	push   r14
   14000d690:	push   r15
   14000d692:	sub    rsp,0x20
   14000d696:	mov    r14,r8
   14000d699:	mov    r15,rdx
   14000d69c:	mov    rdi,rcx
   14000d69f:	call   0x14000d5b0
   14000d6a4:	movsxd rbx,DWORD PTR [r14]
   14000d6a7:	mov    ecx,DWORD PTR [rdi]
   14000d6a9:	mov    eax,ebx
   14000d6ab:	sub    eax,ecx
   14000d6ad:	test   eax,eax
   14000d6af:	jle    0x14000d6c0
   14000d6b1:	mov    edx,ecx
   14000d6b3:	mov    r8d,eax
   14000d6b6:	mov    rcx,rdi
   14000d6b9:	call   0x14000f450
   14000d6be:	jmp    0x14000d6c8
   14000d6c0:	jns    0x14000d6c8
   14000d6c2:	neg    eax
   14000d6c4:	sub    ecx,eax
   14000d6c6:	mov    DWORD PTR [rdi],ecx
   14000d6c8:	lea    rcx,[rdi+0x90]
   14000d6cf:	mov    eax,ebx
   14000d6d1:	mov    edx,DWORD PTR [rcx]
   14000d6d3:	sub    eax,edx
   14000d6d5:	test   eax,eax
   14000d6d7:	jle    0x14000d6e3
   14000d6d9:	mov    r8d,eax
   14000d6dc:	call   0x14000f3c0
   14000d6e1:	jmp    0x14000d6eb
   14000d6e3:	jns    0x14000d6eb
   14000d6e5:	neg    eax
   14000d6e7:	sub    edx,eax
   14000d6e9:	mov    DWORD PTR [rcx],edx
   14000d6eb:	mov    edx,DWORD PTR [rdi+0x38]
   14000d6ee:	lea    rcx,[rdi+0x38]
   14000d6f2:	mov    eax,ebx
   14000d6f4:	sub    eax,edx
   14000d6f6:	test   eax,eax
   14000d6f8:	jle    0x14000d704
   14000d6fa:	mov    r8d,eax
   14000d6fd:	call   0x14000f3c0
   14000d702:	jmp    0x14000d70c
   14000d704:	jns    0x14000d70c
   14000d706:	neg    eax
   14000d708:	sub    edx,eax
   14000d70a:	mov    DWORD PTR [rcx],edx
   14000d70c:	lea    rcx,[rdi+0xe8]
   14000d713:	mov    eax,ebx
   14000d715:	mov    edx,DWORD PTR [rcx]
   14000d717:	sub    eax,edx
   14000d719:	test   eax,eax
   14000d71b:	jle    0x14000d727
   14000d71d:	mov    r8d,eax
   14000d720:	call   0x14000f340
   14000d725:	jmp    0x14000d72f
   14000d727:	jns    0x14000d72f
   14000d729:	neg    eax
   14000d72b:	sub    edx,eax
   14000d72d:	mov    DWORD PTR [rcx],edx
   14000d72f:	xor    r13d,r13d
   14000d732:	mov    rbp,rbx
   14000d735:	mov    esi,r13d
   14000d738:	test   ebx,ebx
   14000d73a:	jle    0x14000d80a
   14000d740:	mov    QWORD PTR [rsp+0x50],r12
   14000d745:	mov    r12,r15
   14000d748:	and    r12,0xfffffffffffffc00
   14000d74f:	nop
   14000d750:	mov    rax,QWORD PTR [r14+0x40]
   14000d754:	mov    rcx,r15
   14000d757:	mov    rdx,QWORD PTR [rax+rsi*8]
   14000d75b:	mov    rax,QWORD PTR [r14+0x8]
   14000d75f:	mov    r8d,DWORD PTR [rax+rsi*4]
   14000d763:	mov    rax,QWORD PTR [rdi+0x8]
   14000d767:	mov    DWORD PTR [rax+rsi*4],r8d
   14000d76b:	mov    rax,QWORD PTR [rdi+0xf0]
   14000d772:	mov    BYTE PTR [rsi+rax*1],r13b
   14000d776:	mov    rax,QWORD PTR [rdi+0x40]
   14000d77a:	lea    rbx,[rax+rsi*8]
   14000d77e:	call   0x14000cfc0
   14000d783:	mov    QWORD PTR [rbx],rax
   14000d786:	mov    rcx,r13
   14000d789:	test   BYTE PTR [r15],0x1
   14000d78d:	cmove  rcx,r12
   14000d791:	test   rcx,rcx
   14000d794:	je     0x14000d79b
   14000d796:	mov    rcx,QWORD PTR [rcx]
   14000d799:	jmp    0x14000d79e
   14000d79b:	mov    rcx,r13
   14000d79e:	test   rcx,rcx
   14000d7a1:	je     0x14000d7aa
   14000d7a3:	call   0x14000cec0
   14000d7a8:	jmp    0x14000d7d3
   14000d7aa:	mov    ecx,0x10
   14000d7af:	call   0x140007bf0
   14000d7b4:	test   rax,rax
   14000d7b7:	je     0x14000d7d0
   14000d7b9:	mov    rcx,QWORD PTR [rax]
   14000d7bc:	and    rcx,0xffffffffffe00003
   14000d7c3:	mov    QWORD PTR [rax+0x8],r13
   14000d7c7:	or     rcx,0x3
   14000d7cb:	mov    QWORD PTR [rax],rcx
   14000d7ce:	jmp    0x14000d7d3
   14000d7d0:	mov    rax,r13
   14000d7d3:	mov    rdx,QWORD PTR [rdi+0x98]
   14000d7da:	mov    QWORD PTR [rdx+rsi*8],rax
   14000d7de:	mov    rdx,QWORD PTR [r14+0x98]
   14000d7e5:	mov    rcx,QWORD PTR [rdi+0x98]
   14000d7ec:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14000d7f0:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14000d7f4:	call   0x14000d830
   14000d7f9:	inc    rsi
   14000d7fc:	cmp    rsi,rbp
   14000d7ff:	jl     0x14000d750
   14000d805:	mov    r12,QWORD PTR [rsp+0x50]
   14000d80a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d80f:	mov    rbp,QWORD PTR [rsp+0x60]
   14000d814:	add    rsp,0x20
   14000d818:	pop    r15
   14000d81a:	pop    r14
   14000d81c:	pop    r13
   14000d81e:	pop    rdi
   14000d81f:	pop    rsi
   14000d820:	ret    
   14000d821:	int3   
   14000d822:	int3   
   14000d823:	int3   
   14000d824:	int3   
   14000d825:	int3   
   14000d826:	int3   
   14000d827:	int3   
   14000d828:	int3   
   14000d829:	int3   
   14000d82a:	int3   
   14000d82b:	int3   
   14000d82c:	int3   
   14000d82d:	int3   
   14000d82e:	int3   
   14000d82f:	int3   
   14000d830:	mov    QWORD PTR [rsp+0x10],rbx
   14000d835:	mov    QWORD PTR [rsp+0x18],rsi
   14000d83a:	push   rdi
   14000d83b:	sub    rsp,0x20
   14000d83f:	mov    rbx,QWORD PTR [rdx]
   14000d842:	mov    rdi,rdx
   14000d845:	mov    rax,rbx
   14000d848:	mov    rsi,rcx
   14000d84b:	and    eax,0x1e
   14000d84e:	cmp    rax,0x14
   14000d852:	jne    0x14000d858
   14000d854:	mov    bl,0x6
   14000d856:	jmp    0x14000d871
   14000d858:	cmp    rax,0x16
   14000d85c:	jne    0x14000d862
   14000d85e:	mov    bl,0x6
   14000d860:	jmp    0x14000d871
   14000d862:	cmp    rax,0x18
   14000d866:	jne    0x14000d86c
   14000d868:	mov    bl,0x7
   14000d86a:	jmp    0x14000d871
   14000d86c:	shr    bl,1
   14000d86e:	and    bl,0xf
   14000d871:	movzx  edx,bl
   14000d874:	call   0x14000faa0
   14000d879:	mov    eax,DWORD PTR [rdi]
   14000d87b:	xor    eax,DWORD PTR [rsi]
   14000d87d:	and    eax,0x1fffe0
   14000d882:	xor    QWORD PTR [rsi],rax
   14000d885:	movzx  eax,bl
   14000d888:	add    eax,0xfffffffe
   14000d88b:	cmp    eax,0x7
   14000d88e:	ja     0x14000da14
   14000d894:	lea    rdx,[rip+0xffffffffffff2765]        # 0x140000000
   14000d89b:	cdqe   
   14000d89d:	mov    ecx,DWORD PTR [rdx+rax*4+0xda60]
   14000d8a4:	add    rcx,rdx
   14000d8a7:	jmp    rcx
   14000d8a9:	movzx  eax,BYTE PTR [rdi+0x8]
   14000d8ad:	mov    BYTE PTR [rsi+0x8],al
   14000d8b0:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d8b5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d8ba:	add    rsp,0x20
   14000d8be:	pop    rdi
   14000d8bf:	ret    
   14000d8c0:	mov    rax,QWORD PTR [rdi+0x8]
   14000d8c4:	mov    QWORD PTR [rsi+0x8],rax
   14000d8c8:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d8cd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d8d2:	add    rsp,0x20
   14000d8d6:	pop    rdi
   14000d8d7:	ret    
   14000d8d8:	mov    rax,QWORD PTR [rdi]
   14000d8db:	and    eax,0x1e
   14000d8de:	cmp    rax,0xc
   14000d8e2:	je     0x14000d929
   14000d8e4:	cmp    rax,0x16
   14000d8e8:	je     0x14000d929
   14000d8ea:	cmp    rax,0x14
   14000d8ee:	jne    0x14000d90e
   14000d8f0:	lea    rbx,[rdi+0x8]
   14000d8f4:	mov    rcx,rsi
   14000d8f7:	mov    rdx,rbx
   14000d8fa:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d8ff:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d904:	add    rsp,0x20
   14000d908:	pop    rdi
   14000d909:	jmp    0x1400116c0
   14000d90e:	xor    ebx,ebx
   14000d910:	mov    rcx,rsi
   14000d913:	mov    edx,ebx
   14000d915:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d91a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d91f:	add    rsp,0x20
   14000d923:	pop    rdi
   14000d924:	jmp    0x1400116c0
   14000d929:	mov    rbx,QWORD PTR [rdi+0x8]
   14000d92d:	mov    rcx,rsi
   14000d930:	mov    rdx,rbx
   14000d933:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d938:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d93d:	add    rsp,0x20
   14000d941:	pop    rdi
   14000d942:	jmp    0x1400116c0
   14000d947:	mov    rcx,QWORD PTR [rdi]
   14000d94a:	xor    ebx,ebx
   14000d94c:	mov    rax,QWORD PTR [rdi+0x8]
   14000d950:	and    ecx,0x1e
   14000d953:	cmp    rcx,0x18
   14000d957:	jne    0x14000d964
   14000d959:	test   rax,rax
   14000d95c:	je     0x14000d96d
   14000d95e:	mov    rdx,QWORD PTR [rax+0x8]
   14000d962:	jmp    0x14000d970
   14000d964:	lea    rdx,[rax+0x8]
   14000d968:	test   rax,rax
   14000d96b:	jne    0x14000d975
   14000d96d:	mov    rdx,rbx
   14000d970:	test   rax,rax
   14000d973:	je     0x14000d994
   14000d975:	mov    r8d,DWORD PTR [rax]
   14000d978:	test   r8d,r8d
   14000d97b:	je     0x14000d994
   14000d97d:	mov    rcx,rsi
   14000d980:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d985:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d98a:	add    rsp,0x20
   14000d98e:	pop    rdi
   14000d98f:	jmp    0x140011790
   14000d994:	mov    dl,0x7
   14000d996:	mov    rcx,rsi
   14000d999:	call   0x14000faa0
   14000d99e:	mov    QWORD PTR [rsi+0x8],rbx
   14000d9a2:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d9a7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d9ac:	add    rsp,0x20
   14000d9b0:	pop    rdi
   14000d9b1:	ret    
   14000d9b2:	mov    rax,QWORD PTR [rdi+0x8]
   14000d9b6:	xor    ebx,ebx
   14000d9b8:	mov    QWORD PTR [rsp+0x30],rbp
   14000d9bd:	test   rax,rax
   14000d9c0:	je     0x14000d9c6
   14000d9c2:	mov    ebp,DWORD PTR [rax]
   14000d9c4:	jmp    0x14000d9c8
   14000d9c6:	mov    ebp,ebx
   14000d9c8:	mov    rdx,QWORD PTR [rsi+0x8]
   14000d9cc:	test   rdx,rdx
   14000d9cf:	je     0x14000d9d9
   14000d9d1:	movsxd rax,ebp
   14000d9d4:	cmp    QWORD PTR [rdx],rax
   14000d9d7:	je     0x14000d9e8
   14000d9d9:	mov    r8d,ebp
   14000d9dc:	mov    rcx,rsi
   14000d9df:	call   0x140010960
   14000d9e4:	mov    QWORD PTR [rsi+0x8],rax
   14000d9e8:	movsxd rbp,ebp
   14000d9eb:	test   rbp,rbp
   14000d9ee:	jle    0x14000da0f
   14000d9f0:	mov    rdx,QWORD PTR [rdi+0x8]
   14000d9f4:	mov    rcx,QWORD PTR [rsi+0x8]
   14000d9f8:	mov    rdx,QWORD PTR [rdx+rbx*8+0x8]
   14000d9fd:	mov    rcx,QWORD PTR [rcx+rbx*8+0x8]
   14000da02:	call   0x14000d830
   14000da07:	inc    rbx
   14000da0a:	cmp    rbx,rbp
   14000da0d:	jl     0x14000d9f0
   14000da0f:	mov    rbp,QWORD PTR [rsp+0x30]
   14000da14:	mov    rbx,QWORD PTR [rsp+0x38]
   14000da19:	mov    rsi,QWORD PTR [rsp+0x40]
   14000da1e:	add    rsp,0x20
   14000da22:	pop    rdi
   14000da23:	ret    
   14000da24:	mov    dl,0x9
   14000da26:	mov    rcx,rsi
   14000da29:	call   0x14000faa0
   14000da2e:	mov    rcx,rdi
   14000da31:	call   0x14000f060
   14000da36:	mov    rcx,rsi
   14000da39:	mov    rbx,rax
   14000da3c:	call   0x14000f060
   14000da41:	mov    rcx,rax
   14000da44:	mov    r8,rbx
   14000da47:	mov    rdx,rsi
   14000da4a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000da4f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000da54:	add    rsp,0x20
   14000da58:	pop    rdi
   14000da59:	jmp    0x14000d680
   14000da5e:	xchg   ax,ax
   14000da60:	test   eax,0xc00000d8
   14000da65:	fadd   DWORD PTR [rax]
   14000da67:	add    al,al
   14000da69:	fadd   DWORD PTR [rax]
   14000da6b:	add    al,al
   14000da6d:	fadd   DWORD PTR [rax]
   14000da6f:	add    al,bl
   14000da71:	fadd   DWORD PTR [rax]
   14000da73:	add    BYTE PTR [rdi-0x27],al
   14000da76:	add    BYTE PTR [rax],al
   14000da78:	mov    dl,0xd9
   14000da7a:	add    BYTE PTR [rax],al
   14000da7c:	and    al,0xda
   14000da7e:	add    BYTE PTR [rax],al
   14000da80:	mov    QWORD PTR [rsp+0x10],rbx
   14000da85:	push   rdi
   14000da86:	sub    rsp,0x20
   14000da8a:	movsxd rdi,edx
   14000da8d:	mov    rbx,rcx
   14000da90:	cmp    DWORD PTR [rcx+0x8],edi
   14000da93:	jge    0x14000db2d
   14000da99:	mov    eax,DWORD PTR [rcx+0xc]
   14000da9c:	and    eax,0xc0000000
   14000daa1:	test   eax,0x7fffffff
   14000daa6:	jne    0x14000db2d
   14000daac:	test   eax,eax
   14000daae:	mov    rax,QWORD PTR [rip+0x248db]        # 0x140032390
   14000dab5:	jne    0x14000daf3
   14000dab7:	mov    rdx,QWORD PTR [rcx]
   14000daba:	mov    rcx,QWORD PTR [rax]
   14000dabd:	mov    rax,QWORD PTR [rcx]
   14000dac0:	test   rdx,rdx
   14000dac3:	je     0x14000dadc
   14000dac5:	mov    r8,rdi
   14000dac8:	call   QWORD PTR [rax+0x18]
   14000dacb:	mov    QWORD PTR [rbx],rax
   14000dace:	mov    DWORD PTR [rbx+0x8],edi
   14000dad1:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dad6:	add    rsp,0x20
   14000dada:	pop    rdi
   14000dadb:	ret    
   14000dadc:	mov    rdx,rdi
   14000dadf:	call   QWORD PTR [rax+0x8]
   14000dae2:	mov    QWORD PTR [rbx],rax
   14000dae5:	mov    DWORD PTR [rbx+0x8],edi
   14000dae8:	mov    rbx,QWORD PTR [rsp+0x38]
   14000daed:	add    rsp,0x20
   14000daf1:	pop    rdi
   14000daf2:	ret    
   14000daf3:	mov    QWORD PTR [rsp+0x30],rsi
   14000daf8:	mov    rdx,rdi
   14000dafb:	mov    rsi,QWORD PTR [rcx]
   14000dafe:	mov    rcx,QWORD PTR [rax]
   14000db01:	mov    rax,QWORD PTR [rcx]
   14000db04:	call   QWORD PTR [rax+0x8]
   14000db07:	mov    QWORD PTR [rbx],rax
   14000db0a:	test   rsi,rsi
   14000db0d:	je     0x14000db1e
   14000db0f:	movsxd r8,DWORD PTR [rbx+0x8]
   14000db13:	mov    rdx,rsi
   14000db16:	mov    rcx,rax
   14000db19:	call   0x140026f70
   14000db1e:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14000db25:	mov    rsi,QWORD PTR [rsp+0x30]
   14000db2a:	mov    DWORD PTR [rbx+0x8],edi
   14000db2d:	mov    rbx,QWORD PTR [rsp+0x38]
   14000db32:	add    rsp,0x20
   14000db36:	pop    rdi
   14000db37:	ret    
   14000db38:	int3   
   14000db39:	int3   
   14000db3a:	int3   
   14000db3b:	int3   
   14000db3c:	int3   
   14000db3d:	int3   
   14000db3e:	int3   
   14000db3f:	int3   
   14000db40:	mov    QWORD PTR [rsp+0x10],rbx
   14000db45:	push   rdi
   14000db46:	sub    rsp,0x20
   14000db4a:	movsxd rdi,edx
   14000db4d:	mov    rbx,rcx
   14000db50:	cmp    DWORD PTR [rcx+0x8],edi
   14000db53:	jge    0x14000dbfd
   14000db59:	mov    eax,DWORD PTR [rcx+0xc]
   14000db5c:	and    eax,0xc0000000
   14000db61:	test   eax,0x7fffffff
   14000db66:	jne    0x14000dbfd
   14000db6c:	test   eax,eax
   14000db6e:	mov    rax,QWORD PTR [rip+0x2481b]        # 0x140032390
   14000db75:	jne    0x14000dbbb
   14000db77:	mov    rdx,QWORD PTR [rcx]
   14000db7a:	mov    rcx,QWORD PTR [rax]
   14000db7d:	mov    rax,QWORD PTR [rcx]
   14000db80:	test   rdx,rdx
   14000db83:	je     0x14000dba0
   14000db85:	mov    r8,rdi
   14000db88:	shl    r8,0x3
   14000db8c:	call   QWORD PTR [rax+0x18]
   14000db8f:	mov    QWORD PTR [rbx],rax
   14000db92:	mov    DWORD PTR [rbx+0x8],edi
   14000db95:	mov    rbx,QWORD PTR [rsp+0x38]
   14000db9a:	add    rsp,0x20
   14000db9e:	pop    rdi
   14000db9f:	ret    
   14000dba0:	mov    rdx,rdi
   14000dba3:	shl    rdx,0x3
   14000dba7:	call   QWORD PTR [rax+0x8]
   14000dbaa:	mov    QWORD PTR [rbx],rax
   14000dbad:	mov    DWORD PTR [rbx+0x8],edi
   14000dbb0:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dbb5:	add    rsp,0x20
   14000dbb9:	pop    rdi
   14000dbba:	ret    
   14000dbbb:	mov    QWORD PTR [rsp+0x30],rsi
   14000dbc0:	mov    rdx,rdi
   14000dbc3:	mov    rsi,QWORD PTR [rcx]
   14000dbc6:	mov    rcx,QWORD PTR [rax]
   14000dbc9:	shl    rdx,0x3
   14000dbcd:	mov    rax,QWORD PTR [rcx]
   14000dbd0:	call   QWORD PTR [rax+0x8]
   14000dbd3:	mov    QWORD PTR [rbx],rax
   14000dbd6:	test   rsi,rsi
   14000dbd9:	je     0x14000dbee
   14000dbdb:	movsxd r8,DWORD PTR [rbx+0x8]
   14000dbdf:	mov    rdx,rsi
   14000dbe2:	shl    r8,0x3
   14000dbe6:	mov    rcx,rax
   14000dbe9:	call   0x140026f70
   14000dbee:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14000dbf5:	mov    rsi,QWORD PTR [rsp+0x30]
   14000dbfa:	mov    DWORD PTR [rbx+0x8],edi
   14000dbfd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dc02:	add    rsp,0x20
   14000dc06:	pop    rdi
   14000dc07:	ret    
   14000dc08:	int3   
   14000dc09:	int3   
   14000dc0a:	int3   
   14000dc0b:	int3   
   14000dc0c:	int3   
   14000dc0d:	int3   
   14000dc0e:	int3   
   14000dc0f:	int3   
   14000dc10:	mov    QWORD PTR [rsp+0x10],rbx
   14000dc15:	push   rdi
   14000dc16:	sub    rsp,0x20
   14000dc1a:	movsxd rdi,edx
   14000dc1d:	mov    rbx,rcx
   14000dc20:	cmp    DWORD PTR [rcx+0x8],edi
   14000dc23:	jge    0x14000dccd
   14000dc29:	mov    eax,DWORD PTR [rcx+0xc]
   14000dc2c:	and    eax,0xc0000000
   14000dc31:	test   eax,0x7fffffff
   14000dc36:	jne    0x14000dccd
   14000dc3c:	test   eax,eax
   14000dc3e:	mov    rax,QWORD PTR [rip+0x2474b]        # 0x140032390
   14000dc45:	jne    0x14000dc8b
   14000dc47:	mov    rdx,QWORD PTR [rcx]
   14000dc4a:	mov    rcx,QWORD PTR [rax]
   14000dc4d:	mov    rax,QWORD PTR [rcx]
   14000dc50:	test   rdx,rdx
   14000dc53:	je     0x14000dc70
   14000dc55:	mov    r8,rdi
   14000dc58:	shl    r8,0x2
   14000dc5c:	call   QWORD PTR [rax+0x18]
   14000dc5f:	mov    QWORD PTR [rbx],rax
   14000dc62:	mov    DWORD PTR [rbx+0x8],edi
   14000dc65:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dc6a:	add    rsp,0x20
   14000dc6e:	pop    rdi
   14000dc6f:	ret    
   14000dc70:	mov    rdx,rdi
   14000dc73:	shl    rdx,0x2
   14000dc77:	call   QWORD PTR [rax+0x8]
   14000dc7a:	mov    QWORD PTR [rbx],rax
   14000dc7d:	mov    DWORD PTR [rbx+0x8],edi
   14000dc80:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dc85:	add    rsp,0x20
   14000dc89:	pop    rdi
   14000dc8a:	ret    
   14000dc8b:	mov    QWORD PTR [rsp+0x30],rsi
   14000dc90:	mov    rdx,rdi
   14000dc93:	mov    rsi,QWORD PTR [rcx]
   14000dc96:	mov    rcx,QWORD PTR [rax]
   14000dc99:	shl    rdx,0x2
   14000dc9d:	mov    rax,QWORD PTR [rcx]
   14000dca0:	call   QWORD PTR [rax+0x8]
   14000dca3:	mov    QWORD PTR [rbx],rax
   14000dca6:	test   rsi,rsi
   14000dca9:	je     0x14000dcbe
   14000dcab:	movsxd r8,DWORD PTR [rbx+0x8]
   14000dcaf:	mov    rdx,rsi
   14000dcb2:	shl    r8,0x2
   14000dcb6:	mov    rcx,rax
   14000dcb9:	call   0x140026f70
   14000dcbe:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14000dcc5:	mov    rsi,QWORD PTR [rsp+0x30]
   14000dcca:	mov    DWORD PTR [rbx+0x8],edi
   14000dccd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dcd2:	add    rsp,0x20
   14000dcd6:	pop    rdi
   14000dcd7:	ret    
   14000dcd8:	int3   
   14000dcd9:	int3   
   14000dcda:	int3   
   14000dcdb:	int3   
   14000dcdc:	int3   
   14000dcdd:	int3   
   14000dcde:	int3   
   14000dcdf:	int3   
   14000dce0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dce5:	push   rdi
   14000dce6:	sub    rsp,0x20
   14000dcea:	mov    rbx,rcx
   14000dced:	movsxd rdi,edx
   14000dcf0:	mov    rcx,QWORD PTR [rcx]
   14000dcf3:	mov    r8,rcx
   14000dcf6:	and    r8d,0x1e
   14000dcfa:	lea    rax,[r8-0x14]
   14000dcfe:	test   rax,0xfffffffffffffff9
   14000dd04:	jne    0x14000dd0c
   14000dd06:	cmp    r8,0x1a
   14000dd0a:	jne    0x14000dd16
   14000dd0c:	shr    cl,1
   14000dd0e:	and    cl,0xf
   14000dd11:	cmp    cl,0x8
   14000dd14:	je     0x14000dd20
   14000dd16:	mov    dl,0x8
   14000dd18:	mov    rcx,rbx
   14000dd1b:	call   0x14000faa0
   14000dd20:	mov    rcx,QWORD PTR [rbx]
   14000dd23:	mov    rdx,rcx
   14000dd26:	and    edx,0x1e
   14000dd29:	lea    rax,[rdx-0x14]
   14000dd2d:	test   rax,0xfffffffffffffff9
   14000dd33:	jne    0x14000dd3b
   14000dd35:	cmp    rdx,0x1a
   14000dd39:	jne    0x14000dd53
   14000dd3b:	movzx  eax,cl
   14000dd3e:	shr    al,1
   14000dd40:	and    al,0xf
   14000dd42:	cmp    al,0x8
   14000dd44:	jne    0x14000dd53
   14000dd46:	mov    rax,QWORD PTR [rbx+0x8]
   14000dd4a:	test   rax,rax
   14000dd4d:	je     0x14000dd53
   14000dd4f:	mov    eax,DWORD PTR [rax]
   14000dd51:	jmp    0x14000dd55
   14000dd53:	xor    eax,eax
   14000dd55:	cmp    eax,edi
   14000dd57:	je     0x14000dd9c
   14000dd59:	lea    rax,[rdx-0x14]
   14000dd5d:	test   rax,0xfffffffffffffff9
   14000dd63:	jne    0x14000dd6b
   14000dd65:	cmp    rdx,0x1a
   14000dd69:	jne    0x14000dd75
   14000dd6b:	shr    cl,1
   14000dd6d:	and    cl,0xf
   14000dd70:	cmp    cl,0x8
   14000dd73:	je     0x14000dd7f
   14000dd75:	mov    dl,0x8
   14000dd77:	mov    rcx,rbx
   14000dd7a:	call   0x14000faa0
   14000dd7f:	mov    rdx,QWORD PTR [rbx+0x8]
   14000dd83:	test   rdx,rdx
   14000dd86:	je     0x14000dd8d
   14000dd88:	cmp    QWORD PTR [rdx],rdi
   14000dd8b:	je     0x14000dd9c
   14000dd8d:	mov    r8d,edi
   14000dd90:	mov    rcx,rbx
   14000dd93:	call   0x140010960
   14000dd98:	mov    QWORD PTR [rbx+0x8],rax
   14000dd9c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dda1:	add    rsp,0x20
   14000dda5:	pop    rdi
   14000dda6:	ret    
   14000dda7:	int3   
   14000dda8:	int3   
   14000dda9:	int3   
   14000ddaa:	int3   
   14000ddab:	int3   
   14000ddac:	int3   
   14000ddad:	int3   
   14000ddae:	int3   
   14000ddaf:	int3   
   14000ddb0:	rex push rdi
   14000ddb2:	sub    rsp,0x30
   14000ddb6:	mov    rax,QWORD PTR [rcx]
   14000ddb9:	mov    rdi,rcx
   14000ddbc:	mov    rcx,rax
   14000ddbf:	and    ecx,0x1e
   14000ddc2:	cmp    rcx,0x14
   14000ddc6:	jne    0x14000ddcc
   14000ddc8:	mov    al,0x6
   14000ddca:	jmp    0x14000dde4
   14000ddcc:	cmp    rcx,0x16
   14000ddd0:	jne    0x14000ddd6
   14000ddd2:	mov    al,0x6
   14000ddd4:	jmp    0x14000dde4
   14000ddd6:	cmp    rcx,0x18
   14000ddda:	jne    0x14000dde0
   14000dddc:	mov    al,0x7
   14000ddde:	jmp    0x14000dde4
   14000dde0:	shr    al,1
   14000dde2:	and    al,0xf
   14000dde4:	cmp    al,dl
   14000dde6:	je     0x14000df4c
   14000ddec:	movzx  eax,dl
   14000ddef:	dec    eax
   14000ddf1:	cmp    eax,0x8
   14000ddf4:	ja     0x14000df4c
   14000ddfa:	lea    rdx,[rip+0xffffffffffff21ff]        # 0x140000000
   14000de01:	cdqe   
   14000de03:	mov    QWORD PTR [rsp+0x48],rbx
   14000de08:	mov    ecx,DWORD PTR [rdx+rax*4+0xdf54]
   14000de0f:	add    rcx,rdx
   14000de12:	jmp    rcx
   14000de14:	mov    dl,0x1
   14000de16:	mov    rcx,rdi
   14000de19:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de1e:	add    rsp,0x30
   14000de22:	pop    rdi
   14000de23:	jmp    0x14000faa0
   14000de28:	mov    rcx,rdi
   14000de2b:	call   0x14000c080
   14000de30:	test   eax,eax
   14000de32:	mov    dl,0x2
   14000de34:	mov    rcx,rdi
   14000de37:	setne  bl
   14000de3a:	call   0x14000faa0
   14000de3f:	mov    BYTE PTR [rdi+0x8],bl
   14000de42:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de47:	add    rsp,0x30
   14000de4b:	pop    rdi
   14000de4c:	ret    
   14000de4d:	mov    rcx,rdi
   14000de50:	call   0x14000c1e0
   14000de55:	mov    dl,0x3
   14000de57:	mov    rcx,rdi
   14000de5a:	mov    rbx,rax
   14000de5d:	call   0x14000faa0
   14000de62:	mov    QWORD PTR [rdi+0x8],rbx
   14000de66:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de6b:	add    rsp,0x30
   14000de6f:	pop    rdi
   14000de70:	ret    
   14000de71:	mov    rcx,rdi
   14000de74:	call   0x14000c290
   14000de79:	mov    dl,0x4
   14000de7b:	mov    rcx,rdi
   14000de7e:	mov    rbx,rax
   14000de81:	call   0x14000faa0
   14000de86:	mov    QWORD PTR [rdi+0x8],rbx
   14000de8a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de8f:	add    rsp,0x30
   14000de93:	pop    rdi
   14000de94:	ret    
   14000de95:	mov    rcx,rdi
   14000de98:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000de9d:	call   0x14000c130
   14000dea2:	mov    dl,0x5
   14000dea4:	mov    rcx,rdi
   14000dea7:	movaps xmm6,xmm0
   14000deaa:	call   0x14000faa0
   14000deaf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000deb4:	movsd  QWORD PTR [rdi+0x8],xmm6
   14000deb9:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000debe:	add    rsp,0x30
   14000dec2:	pop    rdi
   14000dec3:	ret    
   14000dec4:	lea    rdx,[rsp+0x40]
   14000dec9:	mov    QWORD PTR [rsp+0x40],0x0
   14000ded2:	mov    rcx,rdi
   14000ded5:	call   0x14000ef50
   14000deda:	lea    rcx,[rsp+0x40]
   14000dedf:	call   0x14001b050
   14000dee4:	mov    rdx,rax
   14000dee7:	mov    rcx,rdi
   14000deea:	call   0x1400116c0
   14000deef:	cmp    QWORD PTR [rsp+0x40],0x0
   14000def5:	je     0x14000df47
   14000def7:	lea    rcx,[rsp+0x40]
   14000defc:	call   0x14001b030
   14000df01:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df06:	add    rsp,0x30
   14000df0a:	pop    rdi
   14000df0b:	ret    
   14000df0c:	mov    dl,0x7
   14000df0e:	mov    rcx,rdi
   14000df11:	call   0x14000faa0
   14000df16:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df1b:	mov    QWORD PTR [rdi+0x8],0x0
   14000df23:	add    rsp,0x30
   14000df27:	pop    rdi
   14000df28:	ret    
   14000df29:	mov    dl,0x8
   14000df2b:	mov    rcx,rdi
   14000df2e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df33:	add    rsp,0x30
   14000df37:	pop    rdi
   14000df38:	jmp    0x14000faa0
   14000df3d:	mov    dl,0x9
   14000df3f:	mov    rcx,rdi
   14000df42:	call   0x14000faa0
   14000df47:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df4c:	add    rsp,0x30
   14000df50:	pop    rdi
   14000df51:	ret    
   14000df52:	xchg   ax,ax
   14000df54:	adc    al,0xde
   14000df56:	add    BYTE PTR [rax],al
   14000df58:	sub    dh,bl
   14000df5a:	add    BYTE PTR [rax],al
   14000df5c:	rex.WRB fiadd WORD PTR [r8]
   14000df5f:	add    BYTE PTR [rcx-0x22],dh
   14000df62:	add    BYTE PTR [rax],al
   14000df64:	xchg   ebp,eax
   14000df65:	fiadd  WORD PTR [rax]
   14000df67:	add    ah,al
   14000df69:	fiadd  WORD PTR [rax]
   14000df6b:	add    BYTE PTR [rdi+rbx*8],cl
   14000df6e:	add    BYTE PTR [rax],al
   14000df70:	sub    edi,ebx
   14000df72:	add    BYTE PTR [rax],al
   14000df74:	cmp    eax,0xcc0000df
   14000df79:	int3   
   14000df7a:	int3   
   14000df7b:	int3   
   14000df7c:	int3   
   14000df7d:	int3   
   14000df7e:	int3   
   14000df7f:	int3   
   14000df80:	mov    QWORD PTR [rsp+0x8],rbx
   14000df85:	push   rdi
   14000df86:	sub    rsp,0x30
   14000df8a:	mov    rax,QWORD PTR [rsp+0x20]
   14000df8f:	mov    rbx,rdx
   14000df92:	and    rax,0xffffffffffe00003
   14000df98:	mov    QWORD PTR [rsp+0x28],0x0
   14000dfa1:	or     rax,0x3
   14000dfa5:	mov    rdi,rcx
   14000dfa8:	mov    rdx,rcx
   14000dfab:	mov    QWORD PTR [rsp+0x20],rax
   14000dfb0:	lea    rcx,[rsp+0x20]
   14000dfb5:	call   0x14000d830
   14000dfba:	mov    rdx,rbx
   14000dfbd:	lea    rcx,[rsp+0x20]
   14000dfc2:	call   0x140010350
   14000dfc7:	xor    r8d,r8d
   14000dfca:	lea    rdx,[rsp+0x20]
   14000dfcf:	mov    rcx,rdi
   14000dfd2:	call   0x14000fc30
   14000dfd7:	lea    rcx,[rsp+0x20]
   14000dfdc:	movzx  ebx,al
   14000dfdf:	call   0x14000f9e0
   14000dfe4:	movzx  eax,bl
   14000dfe7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dfec:	add    rsp,0x30
   14000dff0:	pop    rdi
   14000dff1:	ret    
   14000dff2:	int3   
   14000dff3:	int3   
   14000dff4:	int3   
   14000dff5:	int3   
   14000dff6:	int3   
   14000dff7:	int3   
   14000dff8:	int3   
   14000dff9:	int3   
   14000dffa:	int3   
   14000dffb:	int3   
   14000dffc:	int3   
   14000dffd:	int3   
   14000dffe:	int3   
   14000dfff:	int3   
   14000e000:	sub    rsp,0x8
   14000e004:	mov    r9,QWORD PTR [rcx+0x18]
   14000e008:	cmp    r9,0xffffffffffffffff
   14000e00c:	je     0x14000e0da
   14000e012:	mov    QWORD PTR [rsp+0x10],rbx
   14000e017:	mov    QWORD PTR [rsp+0x18],rsi
   14000e01c:	mov    rsi,QWORD PTR [rdx]
   14000e01f:	mov    QWORD PTR [rsp+0x20],rdi
   14000e024:	mov    QWORD PTR [rsp],r14
   14000e028:	mov    r14,QWORD PTR [rcx+0x8]
   14000e02c:	mov    rbx,QWORD PTR [rsi]
   14000e02f:	nop
   14000e030:	lea    rax,[r9+r9*4]
   14000e034:	mov    r11,QWORD PTR [r14+rax*8+0x20]
   14000e039:	lea    rdi,[r14+rax*8]
   14000e03d:	mov    r10,QWORD PTR [r11]
   14000e040:	cmp    rbx,r10
   14000e043:	jne    0x14000e06a
   14000e045:	lea    r8,[r11+0x8]
   14000e049:	lea    rax,[rsi+0x8]
   14000e04d:	sub    r8,rax
   14000e050:	movzx  edx,BYTE PTR [rax]
   14000e053:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000e058:	sub    edx,ecx
   14000e05a:	jne    0x14000e063
   14000e05c:	inc    rax
   14000e05f:	test   ecx,ecx
   14000e061:	jne    0x14000e050
   14000e063:	test   edx,edx
   14000e065:	sets   al
   14000e068:	jmp    0x14000e06d
   14000e06a:	setb   al
   14000e06d:	test   al,al
   14000e06f:	je     0x14000e076
   14000e071:	mov    r9,QWORD PTR [rdi]
   14000e074:	jmp    0x14000e0b5
   14000e076:	cmp    r10,rbx
   14000e079:	jne    0x14000e0aa
   14000e07b:	lea    r8,[rsi+0x8]
   14000e07f:	lea    rax,[r11+0x8]
   14000e083:	sub    r8,rax
   14000e086:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e090:	movzx  edx,BYTE PTR [rax]
   14000e093:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000e098:	sub    edx,ecx
   14000e09a:	jne    0x14000e0a3
   14000e09c:	inc    rax
   14000e09f:	test   ecx,ecx
   14000e0a1:	jne    0x14000e090
   14000e0a3:	test   edx,edx
   14000e0a5:	sets   al
   14000e0a8:	jmp    0x14000e0ad
   14000e0aa:	setb   al
   14000e0ad:	test   al,al
   14000e0af:	je     0x14000e0bf
   14000e0b1:	mov    r9,QWORD PTR [rdi+0x8]
   14000e0b5:	cmp    r9,0xffffffffffffffff
   14000e0b9:	jne    0x14000e030
   14000e0bf:	mov    rdi,QWORD PTR [rsp+0x20]
   14000e0c4:	mov    rax,r9
   14000e0c7:	mov    rsi,QWORD PTR [rsp+0x18]
   14000e0cc:	mov    rbx,QWORD PTR [rsp+0x10]
   14000e0d1:	mov    r14,QWORD PTR [rsp]
   14000e0d5:	add    rsp,0x8
   14000e0d9:	ret    
   14000e0da:	mov    rax,r9
   14000e0dd:	add    rsp,0x8
   14000e0e1:	ret    
   14000e0e2:	int3   
   14000e0e3:	int3   
   14000e0e4:	int3   
   14000e0e5:	int3   
   14000e0e6:	int3   
   14000e0e7:	int3   
   14000e0e8:	int3   
   14000e0e9:	int3   
   14000e0ea:	int3   
   14000e0eb:	int3   
   14000e0ec:	int3   
   14000e0ed:	int3   
   14000e0ee:	int3   
   14000e0ef:	int3   
   14000e0f0:	rex push rbp
   14000e0f2:	push   r14
   14000e0f4:	push   r15
   14000e0f6:	sub    rsp,0x20
   14000e0fa:	lea    rbp,[rsp+0x20]
   14000e0ff:	mov    QWORD PTR [rbp+0x20],rbx
   14000e103:	mov    r14,r8
   14000e106:	mov    QWORD PTR [rbp+0x28],rsi
   14000e10a:	mov    rsi,rdx
   14000e10d:	mov    QWORD PTR [rbp+0x38],rdi
   14000e111:	mov    r15,rcx
   14000e114:	movsxd rbx,r9d
   14000e117:	test   r8,r8
   14000e11a:	je     0x14000e1c3
   14000e120:	test   r9d,r9d
   14000e123:	jle    0x14000e1c3
   14000e129:	cmp    BYTE PTR [r8],0x0
   14000e12d:	je     0x14000e1c3
   14000e133:	lea    eax,[rbx+0x1]
   14000e136:	movsxd r9,eax
   14000e139:	add    r9,0x27
   14000e13d:	and    r9,0xfffffffffffffff0
   14000e141:	lea    rax,[r9+0xf]
   14000e145:	cmp    rax,r9
   14000e148:	ja     0x14000e154
   14000e14a:	movabs rax,0xffffffffffffff0
   14000e154:	and    rax,0xfffffffffffffff0
   14000e158:	call   0x1400263c0
   14000e15d:	sub    rsp,rax
   14000e160:	mov    rcx,r14
   14000e163:	lea    rdi,[rsp+0x20]
   14000e168:	add    rdi,0x10
   14000e16c:	and    rdi,0xffffffffffffffef
   14000e170:	call   0x1400226d0
   14000e175:	mov    eax,eax
   14000e177:	lea    rcx,[rdi+0x8]
   14000e17b:	mov    r8,rbx
   14000e17e:	mov    QWORD PTR [rdi],rax
   14000e181:	mov    rdx,r14
   14000e184:	call   0x140026f70
   14000e189:	lea    rdx,[rbp+0x30]
   14000e18d:	mov    BYTE PTR [rbx+rdi*1+0x8],0x0
   14000e192:	mov    rcx,r15
   14000e195:	mov    QWORD PTR [rbp+0x30],rdi
   14000e199:	call   0x14000e000
   14000e19e:	cmp    rax,0xffffffffffffffff
   14000e1a2:	jne    0x14000e1ad
   14000e1a4:	mov    QWORD PTR [rsi],0x0
   14000e1ab:	jmp    0x14000e1ca
   14000e1ad:	lea    rcx,[rax+rax*4]
   14000e1b1:	mov    rax,QWORD PTR [r15+0x8]
   14000e1b5:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   14000e1ba:	add    rdx,0x8
   14000e1be:	mov    QWORD PTR [rsi],rdx
   14000e1c1:	jmp    0x14000e1ca
   14000e1c3:	mov    QWORD PTR [rdx],0x0
   14000e1ca:	mov    rbx,QWORD PTR [rbp+0x20]
   14000e1ce:	mov    rax,rsi
   14000e1d1:	mov    rsi,QWORD PTR [rbp+0x28]
   14000e1d5:	mov    rdi,QWORD PTR [rbp+0x38]
   14000e1d9:	mov    rsp,rbp
   14000e1dc:	pop    r15
   14000e1de:	pop    r14
   14000e1e0:	pop    rbp
   14000e1e1:	ret    
   14000e1e2:	int3   
   14000e1e3:	int3   
   14000e1e4:	int3   
   14000e1e5:	int3   
   14000e1e6:	int3   
   14000e1e7:	int3   
   14000e1e8:	int3   
   14000e1e9:	int3   
   14000e1ea:	int3   
   14000e1eb:	int3   
   14000e1ec:	int3   
   14000e1ed:	int3   
   14000e1ee:	int3   
   14000e1ef:	int3   
   14000e1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e1f5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e1fa:	mov    DWORD PTR [rsp+0x18],r8d
   14000e1ff:	push   rdi
   14000e200:	sub    rsp,0x20
   14000e204:	mov    ebx,r8d
   14000e207:	mov    rdi,rdx
   14000e20a:	mov    rsi,rcx
   14000e20d:	test   r8d,r8d
   14000e210:	jne    0x14000e248
   14000e212:	test   rdx,rdx
   14000e215:	je     0x14000e244
   14000e217:	cmp    BYTE PTR [rdx],bl
   14000e219:	je     0x14000e244
   14000e21b:	mov    edx,0x31415926
   14000e220:	mov    rcx,rdi
   14000e223:	call   0x140022790
   14000e228:	cmp    BYTE PTR [rip+0x3a039],0x0        # 0x140048268
   14000e22f:	mov    ebx,eax
   14000e231:	je     0x14000e244
   14000e233:	mov    r9b,0x1
   14000e236:	xor    r8d,r8d
   14000e239:	mov    rdx,rdi
   14000e23c:	mov    ecx,eax
   14000e23e:	call   QWORD PTR [rip+0x2437c]        # 0x1400325c0
   14000e244:	mov    DWORD PTR [rsp+0x40],ebx
   14000e248:	mov    r8,rdi
   14000e24b:	mov    edx,ebx
   14000e24d:	mov    rcx,rsi
   14000e250:	call   0x14000f810
   14000e255:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e25a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e25f:	add    rsp,0x20
   14000e263:	pop    rdi
   14000e264:	ret    
   14000e265:	int3   
   14000e266:	int3   
   14000e267:	int3   
   14000e268:	int3   
   14000e269:	int3   
   14000e26a:	int3   
   14000e26b:	int3   
   14000e26c:	int3   
   14000e26d:	int3   
   14000e26e:	int3   
   14000e26f:	int3   
   14000e270:	mov    QWORD PTR [rsp+0x8],rbx
   14000e275:	mov    QWORD PTR [rsp+0x10],rbp
   14000e27a:	mov    QWORD PTR [rsp+0x20],rsi
   14000e27f:	mov    DWORD PTR [rsp+0x18],r8d
   14000e284:	push   rdi
   14000e285:	sub    rsp,0x30
   14000e289:	mov    rdi,rcx
   14000e28c:	mov    ebx,r8d
   14000e28f:	mov    r8,QWORD PTR [rcx]
   14000e292:	mov    rbp,rdx
   14000e295:	mov    rcx,r8
   14000e298:	and    ecx,0x1e
   14000e29b:	lea    rax,[rcx-0x14]
   14000e29f:	test   rax,0xfffffffffffffff9
   14000e2a5:	jne    0x14000e2ad
   14000e2a7:	cmp    rcx,0x1a
   14000e2ab:	jne    0x14000e2ba
   14000e2ad:	shr    r8b,1
   14000e2b0:	and    r8b,0xf
   14000e2b4:	cmp    r8b,0x9
   14000e2b8:	je     0x14000e2c8
   14000e2ba:	mov    dl,0x9
   14000e2bc:	mov    rcx,rdi
   14000e2bf:	call   0x14000faa0
   14000e2c4:	mov    ebx,DWORD PTR [rsp+0x50]
   14000e2c8:	xor    esi,esi
   14000e2ca:	test   ebx,ebx
   14000e2cc:	jne    0x14000e307
   14000e2ce:	mov    ebx,esi
   14000e2d0:	test   rbp,rbp
   14000e2d3:	je     0x14000e303
   14000e2d5:	cmp    BYTE PTR [rbp+0x0],bl
   14000e2d8:	je     0x14000e303
   14000e2da:	mov    edx,0x31415926
   14000e2df:	mov    rcx,rbp
   14000e2e2:	call   0x140022790
   14000e2e7:	cmp    BYTE PTR [rip+0x39f7a],sil        # 0x140048268
   14000e2ee:	mov    ebx,eax
   14000e2f0:	je     0x14000e303
   14000e2f2:	mov    r9b,0x1
   14000e2f5:	xor    r8d,r8d
   14000e2f8:	mov    rdx,rbp
   14000e2fb:	mov    ecx,eax
   14000e2fd:	call   QWORD PTR [rip+0x242bd]        # 0x1400325c0
   14000e303:	mov    DWORD PTR [rsp+0x50],ebx
   14000e307:	mov    rcx,QWORD PTR [rdi]
   14000e30a:	mov    rdx,rcx
   14000e30d:	and    edx,0x1e
   14000e310:	lea    rax,[rdx-0x14]
   14000e314:	test   rax,0xfffffffffffffff9
   14000e31a:	jne    0x14000e322
   14000e31c:	cmp    rdx,0x1a
   14000e320:	jne    0x14000e332
   14000e322:	shr    cl,1
   14000e324:	and    cl,0xf
   14000e327:	cmp    cl,0x9
   14000e32a:	jne    0x14000e332
   14000e32c:	mov    rcx,QWORD PTR [rdi+0x8]
   14000e330:	jmp    0x14000e335
   14000e332:	mov    rcx,rsi
   14000e335:	mov    r9,rbp
   14000e338:	mov    BYTE PTR [rsp+0x20],sil
   14000e33d:	mov    r8d,ebx
   14000e340:	mov    rdx,rdi
   14000e343:	call   0x14000e3a0
   14000e348:	mov    rdx,QWORD PTR [rdi]
   14000e34b:	mov    r8,rdx
   14000e34e:	and    r8d,0x1e
   14000e352:	lea    rcx,[r8-0x14]
   14000e356:	test   rcx,0xfffffffffffffff9
   14000e35d:	jne    0x14000e365
   14000e35f:	cmp    r8,0x1a
   14000e363:	jne    0x14000e373
   14000e365:	shr    dl,1
   14000e367:	and    dl,0xf
   14000e36a:	cmp    dl,0x9
   14000e36d:	jne    0x14000e373
   14000e36f:	mov    rsi,QWORD PTR [rdi+0x8]
   14000e373:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e378:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e37d:	movsxd rcx,eax
   14000e380:	mov    rax,QWORD PTR [rsi+0x98]
   14000e387:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e38c:	mov    rax,QWORD PTR [rax+rcx*8]
   14000e390:	add    rsp,0x30
   14000e394:	pop    rdi
   14000e395:	ret    
   14000e396:	int3   
   14000e397:	int3   
   14000e398:	int3   
   14000e399:	int3   
   14000e39a:	int3   
   14000e39b:	int3   
   14000e39c:	int3   
   14000e39d:	int3   
   14000e39e:	int3   
   14000e39f:	int3   
   14000e3a0:	mov    QWORD PTR [rsp+0x20],rbx
   14000e3a5:	mov    DWORD PTR [rsp+0x18],r8d
   14000e3aa:	push   rbp
   14000e3ab:	push   rsi
   14000e3ac:	push   r15
   14000e3ae:	sub    rsp,0x20
   14000e3b2:	movsxd rbp,DWORD PTR [rcx]
   14000e3b5:	xor    r10d,r10d
   14000e3b8:	mov    r15,r9
   14000e3bb:	mov    rsi,rdx
   14000e3be:	mov    rbx,rcx
   14000e3c1:	test   ebp,ebp
   14000e3c3:	jle    0x14000e3e8
   14000e3c5:	mov    rax,QWORD PTR [rcx+0x8]
   14000e3c9:	xor    ecx,ecx
   14000e3cb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e3d0:	cmp    r8d,DWORD PTR [rax]
   14000e3d3:	je     0x14000e45a
   14000e3d9:	inc    r10d
   14000e3dc:	inc    rcx
   14000e3df:	add    rax,0x4
   14000e3e3:	cmp    rcx,rbp
   14000e3e6:	jl     0x14000e3d0
   14000e3e8:	mov    QWORD PTR [rsp+0x40],rdi
   14000e3ed:	mov    QWORD PTR [rsp+0x48],r14
   14000e3f2:	xor    r14b,r14b
   14000e3f5:	cmp    ebp,DWORD PTR [rbx+0x10]
   14000e3f8:	jne    0x14000e40d
   14000e3fa:	lea    rcx,[rbx+0x8]
   14000e3fe:	mov    edx,0x1
   14000e403:	call   0x1400031e0
   14000e408:	mov    r8d,DWORD PTR [rsp+0x50]
   14000e40d:	mov    rax,QWORD PTR [rbx+0x8]
   14000e411:	inc    DWORD PTR [rbx]
   14000e413:	lea    rdx,[rax+rbp*4]
   14000e417:	test   rdx,rdx
   14000e41a:	je     0x14000e424
   14000e41c:	mov    DWORD PTR [rdx],r8d
   14000e41f:	mov    r8d,DWORD PTR [rsp+0x50]
   14000e424:	cmp    BYTE PTR [rsp+0x60],0x0
   14000e429:	je     0x14000e46b
   14000e42b:	movsxd rdi,DWORD PTR [rbx+0x38]
   14000e42f:	cmp    edi,DWORD PTR [rbx+0x48]
   14000e432:	jne    0x14000e442
   14000e434:	lea    rcx,[rbx+0x40]
   14000e438:	mov    edx,0x1
   14000e43d:	call   0x140013420
   14000e442:	mov    rax,QWORD PTR [rbx+0x40]
   14000e446:	inc    DWORD PTR [rbx+0x38]
   14000e449:	lea    rdx,[rax+rdi*8]
   14000e44d:	test   rdx,rdx
   14000e450:	je     0x14000e455
   14000e452:	mov    QWORD PTR [rdx],r15
   14000e455:	mov    r14b,0x1
   14000e458:	jmp    0x14000e4a3
   14000e45a:	mov    eax,r10d
   14000e45d:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e462:	add    rsp,0x20
   14000e466:	pop    r15
   14000e468:	pop    rsi
   14000e469:	pop    rbp
   14000e46a:	ret    
   14000e46b:	mov    rdx,r15
   14000e46e:	mov    rcx,rsi
   14000e471:	call   0x14000cfc0
   14000e476:	movsxd rdi,DWORD PTR [rbx+0x38]
   14000e47a:	mov    r15,rax
   14000e47d:	cmp    edi,DWORD PTR [rbx+0x48]
   14000e480:	jne    0x14000e490
   14000e482:	lea    rcx,[rbx+0x40]
   14000e486:	mov    edx,0x1
   14000e48b:	call   0x140013420
   14000e490:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e494:	inc    DWORD PTR [rbx+0x38]
   14000e497:	lea    rax,[rcx+rdi*8]
   14000e49b:	test   rax,rax
   14000e49e:	je     0x14000e4a3
   14000e4a0:	mov    QWORD PTR [rax],r15
   14000e4a3:	movzx  eax,BYTE PTR [rsi]
   14000e4a6:	xor    ecx,ecx
   14000e4a8:	and    rsi,0xfffffffffffffc00
   14000e4af:	and    al,0x1
   14000e4b1:	cmove  rcx,rsi
   14000e4b5:	test   rcx,rcx
   14000e4b8:	je     0x14000e4bd
   14000e4ba:	mov    rcx,QWORD PTR [rcx]
   14000e4bd:	test   rcx,rcx
   14000e4c0:	je     0x14000e4cc
   14000e4c2:	call   0x14000cec0
   14000e4c7:	mov    rdi,rax
   14000e4ca:	jmp    0x14000e4fa
   14000e4cc:	mov    ecx,0x10
   14000e4d1:	call   0x140007bf0
   14000e4d6:	mov    rdi,rax
   14000e4d9:	test   rax,rax
   14000e4dc:	je     0x14000e4f8
   14000e4de:	mov    rax,QWORD PTR [rax]
   14000e4e1:	and    rax,0xffffffffffe00003
   14000e4e7:	mov    QWORD PTR [rdi+0x8],0x0
   14000e4ef:	or     rax,0x3
   14000e4f3:	mov    QWORD PTR [rdi],rax
   14000e4f6:	jmp    0x14000e4fa
   14000e4f8:	xor    edi,edi
   14000e4fa:	movsxd rsi,DWORD PTR [rbx+0x90]
   14000e501:	cmp    esi,DWORD PTR [rbx+0xa0]
   14000e507:	jne    0x14000e51a
   14000e509:	lea    rcx,[rbx+0x98]
   14000e510:	mov    edx,0x1
   14000e515:	call   0x140013420
   14000e51a:	mov    rax,QWORD PTR [rbx+0x98]
   14000e521:	inc    DWORD PTR [rbx+0x90]
   14000e527:	lea    r8,[rax+rsi*8]
   14000e52b:	test   r8,r8
   14000e52e:	je     0x14000e533
   14000e530:	mov    QWORD PTR [r8],rdi
   14000e533:	movsxd rdi,DWORD PTR [rbx+0xe8]
   14000e53a:	cmp    edi,DWORD PTR [rbx+0xf8]
   14000e540:	jne    0x14000e553
   14000e542:	lea    rcx,[rbx+0xf0]
   14000e549:	mov    edx,0x1
   14000e54e:	call   0x14000f0d0
   14000e553:	inc    DWORD PTR [rbx+0xe8]
   14000e559:	mov    rcx,rdi
   14000e55c:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e561:	add    rcx,QWORD PTR [rbx+0xf0]
   14000e568:	je     0x14000e56d
   14000e56a:	mov    BYTE PTR [rcx],r14b
   14000e56d:	mov    r14,QWORD PTR [rsp+0x48]
   14000e572:	mov    eax,ebp
   14000e574:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e579:	add    rsp,0x20
   14000e57d:	pop    r15
   14000e57f:	pop    rsi
   14000e580:	pop    rbp
   14000e581:	ret    
   14000e582:	int3   
   14000e583:	int3   
   14000e584:	int3   
   14000e585:	int3   
   14000e586:	int3   
   14000e587:	int3   
   14000e588:	int3   
   14000e589:	int3   
   14000e58a:	int3   
   14000e58b:	int3   
   14000e58c:	int3   
   14000e58d:	int3   
   14000e58e:	int3   
   14000e58f:	int3   
   14000e590:	movsxd rax,DWORD PTR [rcx+0x40]
   14000e594:	xor    r9d,r9d
   14000e597:	mov    r11d,edx
   14000e59a:	test   eax,eax
   14000e59c:	jle    0x14000e5cc
   14000e59e:	mov    r8,QWORD PTR [rcx+0x48]
   14000e5a2:	mov    r10,rax
   14000e5a5:	mov    eax,r9d
   14000e5a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e5b0:	mov    rcx,QWORD PTR [r8]
   14000e5b3:	mov    edx,DWORD PTR [rcx]
   14000e5b5:	sub    edx,DWORD PTR [rcx+0x4]
   14000e5b8:	cmp    edx,r11d
   14000e5bb:	jge    0x14000e5d0
   14000e5bd:	inc    r9d
   14000e5c0:	inc    rax
   14000e5c3:	add    r8,0x8
   14000e5c7:	cmp    rax,r10
   14000e5ca:	jl     0x14000e5b0
   14000e5cc:	or     eax,0xffffffff
   14000e5cf:	ret    
   14000e5d0:	mov    eax,r9d
   14000e5d3:	ret    
   14000e5d4:	int3   
   14000e5d5:	int3   
   14000e5d6:	int3   
   14000e5d7:	int3   
   14000e5d8:	int3   
   14000e5d9:	int3   
   14000e5da:	int3   
   14000e5db:	int3   
   14000e5dc:	int3   
   14000e5dd:	int3   
   14000e5de:	int3   
   14000e5df:	int3   
   14000e5e0:	mov    QWORD PTR [rsp+0x10],rbx
   14000e5e5:	mov    QWORD PTR [rsp+0x18],rbp
   14000e5ea:	mov    QWORD PTR [rsp+0x20],rsi
   14000e5ef:	push   rdi
   14000e5f0:	sub    rsp,0x20
   14000e5f4:	movsxd rdi,DWORD PTR [rcx+0x90]
   14000e5fb:	xor    ebx,ebx
   14000e5fd:	mov    rsi,rdx
   14000e600:	mov    rbp,rcx
   14000e603:	test   rdi,rdi
   14000e606:	jle    0x14000e62b
   14000e608:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e610:	mov    rdx,QWORD PTR [rbp+0x98]
   14000e617:	mov    rcx,rsi
   14000e61a:	mov    rdx,QWORD PTR [rdx+rbx*8]
   14000e61e:	call   0x14000e720
   14000e623:	inc    rbx
   14000e626:	cmp    rbx,rdi
   14000e629:	jl     0x14000e610
   14000e62b:	xor    ebx,ebx
   14000e62d:	test   rdi,rdi
   14000e630:	jle    0x14000e691
   14000e632:	mov    QWORD PTR [rsp+0x30],r14
   14000e637:	mov    r14,rsi
   14000e63a:	and    r14,0xfffffffffffffc00
   14000e641:	nop    DWORD PTR [rax+0x0]
   14000e645:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000e650:	mov    rax,QWORD PTR [rbp+0x40]
   14000e654:	test   BYTE PTR [rsi],0x1
   14000e657:	mov    rdx,QWORD PTR [rax+rbx*8]
   14000e65b:	mov    eax,0x0
   14000e660:	cmove  rax,r14
   14000e664:	test   rax,rax
   14000e667:	je     0x14000e66f
   14000e669:	cmp    QWORD PTR [rax],0x0
   14000e66d:	jne    0x14000e684
   14000e66f:	test   rdx,rdx
   14000e672:	je     0x14000e684
   14000e674:	mov    rax,QWORD PTR [rip+0x23d15]        # 0x140032390
   14000e67b:	mov    rcx,QWORD PTR [rax]
   14000e67e:	mov    rax,QWORD PTR [rcx]
   14000e681:	call   QWORD PTR [rax+0x28]
   14000e684:	inc    rbx
   14000e687:	cmp    rbx,rdi
   14000e68a:	jl     0x14000e650
   14000e68c:	mov    r14,QWORD PTR [rsp+0x30]
   14000e691:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e696:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e69b:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e6a0:	add    rsp,0x20
   14000e6a4:	pop    rdi
   14000e6a5:	ret    
   14000e6a6:	int3   
   14000e6a7:	int3   
   14000e6a8:	int3   
   14000e6a9:	int3   
   14000e6aa:	int3   
   14000e6ab:	int3   
   14000e6ac:	int3   
   14000e6ad:	int3   
   14000e6ae:	int3   
   14000e6af:	int3   
   14000e6b0:	test   rdx,rdx
   14000e6b3:	je     0x14000e71c
   14000e6b5:	mov    QWORD PTR [rsp+0x18],rbp
   14000e6ba:	push   rsi
   14000e6bb:	sub    rsp,0x20
   14000e6bf:	mov    QWORD PTR [rsp+0x38],rdi
   14000e6c4:	mov    rsi,rdx
   14000e6c7:	movsxd rdi,DWORD PTR [rdx]
   14000e6ca:	mov    rbp,rcx
   14000e6cd:	test   rdi,rdi
   14000e6d0:	jle    0x14000e6fa
   14000e6d2:	mov    QWORD PTR [rsp+0x30],rbx
   14000e6d7:	lea    rbx,[rdx+0x8]
   14000e6db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e6e0:	mov    rdx,QWORD PTR [rbx]
   14000e6e3:	mov    rcx,rbp
   14000e6e6:	call   0x14000e720
   14000e6eb:	lea    rbx,[rbx+0x8]
   14000e6ef:	sub    rdi,0x1
   14000e6f3:	jne    0x14000e6e0
   14000e6f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e6fa:	mov    rax,QWORD PTR [rip+0x23c8f]        # 0x140032390
   14000e701:	mov    rdx,rsi
   14000e704:	mov    rcx,QWORD PTR [rax]
   14000e707:	mov    rax,QWORD PTR [rcx]
   14000e70a:	call   QWORD PTR [rax+0x28]
   14000e70d:	mov    rdi,QWORD PTR [rsp+0x38]
   14000e712:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e717:	add    rsp,0x20
   14000e71b:	pop    rsi
   14000e71c:	ret    
   14000e71d:	int3   
   14000e71e:	int3   
   14000e71f:	int3   
   14000e720:	rex push rbx
   14000e722:	sub    rsp,0x20
   14000e726:	movzx  eax,BYTE PTR [rcx]
   14000e729:	xor    r8d,r8d
   14000e72c:	and    rcx,0xfffffffffffffc00
   14000e733:	mov    rbx,rdx
   14000e736:	and    al,0x1
   14000e738:	mov    edx,r8d
   14000e73b:	cmove  rdx,rcx
   14000e73f:	test   rdx,rdx
   14000e742:	je     0x14000e747
   14000e744:	mov    r8,QWORD PTR [rdx]
   14000e747:	test   r8,r8
   14000e74a:	je     0x14000e75c
   14000e74c:	mov    rdx,rbx
   14000e74f:	mov    rcx,r8
   14000e752:	add    rsp,0x20
   14000e756:	pop    rbx
   14000e757:	jmp    0x14000e790
   14000e75c:	test   rbx,rbx
   14000e75f:	je     0x14000e77b
   14000e761:	mov    rcx,rbx
   14000e764:	call   0x14000f9e0
   14000e769:	mov    edx,0x10
   14000e76e:	mov    rcx,rbx
   14000e771:	add    rsp,0x20
   14000e775:	pop    rbx
   14000e776:	jmp    0x14002639c
   14000e77b:	add    rsp,0x20
   14000e77f:	pop    rbx
   14000e780:	ret    
   14000e781:	int3   
   14000e782:	int3   
   14000e783:	int3   
   14000e784:	int3   
   14000e785:	int3   
   14000e786:	int3   
   14000e787:	int3   
   14000e788:	int3   
   14000e789:	int3   
   14000e78a:	int3   
   14000e78b:	int3   
   14000e78c:	int3   
   14000e78d:	int3   
   14000e78e:	int3   
   14000e78f:	int3   
   14000e790:	mov    QWORD PTR [rsp+0x10],rbx
   14000e795:	mov    QWORD PTR [rsp+0x18],rbp
   14000e79a:	mov    QWORD PTR [rsp+0x20],rsi
   14000e79f:	push   rdi
   14000e7a0:	sub    rsp,0x20
   14000e7a4:	dec    DWORD PTR [rcx+0x4d0]
   14000e7aa:	xor    esi,esi
   14000e7ac:	movzx  r8d,BYTE PTR [rdx]
   14000e7b0:	mov    rax,rdx
   14000e7b3:	and    rax,0xfffffffffffffc00
   14000e7b9:	mov    QWORD PTR [rsp+0x30],r14
   14000e7be:	and    r8b,0x1
   14000e7c2:	mov    ebx,esi
   14000e7c4:	mov    r14,rdx
   14000e7c7:	mov    rbp,rcx
   14000e7ca:	cmove  rbx,rax
   14000e7ce:	lea    rax,[rbx+0x18]
   14000e7d2:	cmp    rax,rdx
   14000e7d5:	ja     0x14000e811
   14000e7d7:	lea    rax,[rbx+0x3e8]
   14000e7de:	cmp    rdx,rax
   14000e7e1:	ja     0x14000e811
   14000e7e3:	mov    rcx,rdx
   14000e7e6:	mov    edi,0x1
   14000e7eb:	sub    rcx,rbx
   14000e7ee:	sub    rcx,0x18
   14000e7f2:	shr    rcx,0x4
   14000e7f6:	shl    rdi,cl
   14000e7f9:	mov    rcx,rdx
   14000e7fc:	call   0x14000f9e0
   14000e801:	xor    eax,eax
   14000e803:	not    rdi
   14000e806:	mov    QWORD PTR [r14],rax
   14000e809:	mov    QWORD PTR [r14+0x8],rax
   14000e80d:	and    QWORD PTR [rbx+0x10],rdi
   14000e811:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e815:	movabs rdx,0x5555555555555555
   14000e81f:	mov    r14,QWORD PTR [rsp+0x30]
   14000e824:	mov    rax,rcx
   14000e827:	shr    rax,1
   14000e82a:	and    rax,rdx
   14000e82d:	movabs rdx,0x3333333333333333
   14000e837:	sub    rcx,rax
   14000e83a:	mov    rax,rcx
   14000e83d:	and    rcx,rdx
   14000e840:	shr    rax,0x2
   14000e844:	and    rax,rdx
   14000e847:	add    rax,rcx
   14000e84a:	mov    rcx,rax
   14000e84d:	shr    rcx,0x4
   14000e851:	add    rcx,rax
   14000e854:	movabs rax,0xf0f0f0f0f0f0f0f
   14000e85e:	and    rcx,rax
   14000e861:	movabs rax,0x101010101010101
   14000e86b:	imul   rcx,rax
   14000e86f:	shr    rcx,0x38
   14000e873:	test   ecx,ecx
   14000e875:	jne    0x14000e948
   14000e87b:	cmp    rbx,rbp
   14000e87e:	je     0x14000e95f
   14000e884:	mov    ecx,DWORD PTR [rbp+0x400]
   14000e88a:	test   ecx,ecx
   14000e88c:	jle    0x14000e8cc
   14000e88e:	mov    rdx,QWORD PTR [rbp+0x408]
   14000e895:	mov    rax,rdx
   14000e898:	cmp    QWORD PTR [rax],rbx
   14000e89b:	je     0x14000e8a9
   14000e89d:	inc    esi
   14000e89f:	add    rax,0x8
   14000e8a3:	cmp    esi,ecx
   14000e8a5:	jl     0x14000e898
   14000e8a7:	jmp    0x14000e8cc
   14000e8a9:	cmp    esi,0xffffffff
   14000e8ac:	je     0x14000e8cc
   14000e8ae:	test   ecx,ecx
   14000e8b0:	jle    0x14000e8cc
   14000e8b2:	dec    ecx
   14000e8b4:	cmp    esi,ecx
   14000e8b6:	je     0x14000e8c6
   14000e8b8:	movsxd rax,ecx
   14000e8bb:	movsxd rcx,esi
   14000e8be:	mov    rax,QWORD PTR [rdx+rax*8]
   14000e8c2:	mov    QWORD PTR [rdx+rcx*8],rax
   14000e8c6:	dec    DWORD PTR [rbp+0x400]
   14000e8cc:	mov    rcx,QWORD PTR [rbp+0x458]
   14000e8d3:	cmp    rcx,rbx
   14000e8d6:	jne    0x14000e8e5
   14000e8d8:	mov    rax,QWORD PTR [rbx+0x8]
   14000e8dc:	mov    QWORD PTR [rbp+0x458],rax
   14000e8e3:	jmp    0x14000e90b
   14000e8e5:	test   rcx,rcx
   14000e8e8:	je     0x14000e90b
   14000e8ea:	nop    WORD PTR [rax+rax*1+0x0]
   14000e8f0:	mov    rax,QWORD PTR [rcx+0x8]
   14000e8f4:	cmp    rax,rbx
   14000e8f7:	je     0x14000e903
   14000e8f9:	mov    rcx,rax
   14000e8fc:	test   rax,rax
   14000e8ff:	jne    0x14000e8f0
   14000e901:	jmp    0x14000e90b
   14000e903:	mov    rax,QWORD PTR [rbx+0x8]
   14000e907:	mov    QWORD PTR [rcx+0x8],rax
   14000e90b:	mov    edi,0x3e
   14000e910:	lea    rsi,[rbx+0x3f8]
   14000e917:	nop    WORD PTR [rax+rax*1+0x0]
   14000e920:	sub    rsi,0x10
   14000e924:	mov    rcx,rsi
   14000e927:	call   0x14000f9e0
   14000e92c:	sub    rdi,0x1
   14000e930:	jne    0x14000e920
   14000e932:	mov    rax,QWORD PTR [rip+0x23a57]        # 0x140032390
   14000e939:	mov    rdx,QWORD PTR [rbx-0x8]
   14000e93d:	mov    rcx,QWORD PTR [rax]
   14000e940:	mov    rax,QWORD PTR [rcx]
   14000e943:	call   QWORD PTR [rax+0x28]
   14000e946:	jmp    0x14000e95f
   14000e948:	cmp    ecx,0x3d
   14000e94b:	jne    0x14000e95f
   14000e94d:	mov    rax,QWORD PTR [rbp+0x458]
   14000e954:	mov    QWORD PTR [rbx+0x8],rax
   14000e958:	mov    QWORD PTR [rbp+0x458],rbx
   14000e95f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e964:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e969:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e96e:	add    rsp,0x20
   14000e972:	pop    rdi
   14000e973:	ret    
   14000e974:	int3   
   14000e975:	int3   
   14000e976:	int3   
   14000e977:	int3   
   14000e978:	int3   
   14000e979:	int3   
   14000e97a:	int3   
   14000e97b:	int3   
   14000e97c:	int3   
   14000e97d:	int3   
   14000e97e:	int3   
   14000e97f:	int3   
   14000e980:	mov    eax,DWORD PTR [rcx]
   14000e982:	mov    rdx,rcx
   14000e985:	test   eax,eax
   14000e987:	jne    0x14000e98c
   14000e989:	xor    eax,eax
   14000e98b:	ret    
   14000e98c:	dec    eax
   14000e98e:	movsxd rcx,eax
   14000e991:	mov    rax,QWORD PTR [rdx+0x8]
   14000e995:	add    rcx,rcx
   14000e998:	mov    rax,QWORD PTR [rax+rcx*8]
   14000e99c:	ret    
   14000e99d:	int3   
   14000e99e:	int3   
   14000e99f:	int3   
   14000e9a0:	mov    eax,DWORD PTR [rcx]
   14000e9a2:	shr    rax,0x5
   14000e9a6:	ret    
   14000e9a7:	int3   
   14000e9a8:	int3   
   14000e9a9:	int3   
   14000e9aa:	int3   
   14000e9ab:	int3   
   14000e9ac:	int3   
   14000e9ad:	int3   
   14000e9ae:	int3   
   14000e9af:	int3   
   14000e9b0:	mov    r8,QWORD PTR [rcx]
   14000e9b3:	mov    r9,r8
   14000e9b6:	and    r9d,0x1e
   14000e9ba:	lea    rax,[r9-0x14]
   14000e9be:	test   rax,0xfffffffffffffff9
   14000e9c4:	jne    0x14000e9cc
   14000e9c6:	cmp    r9,0x1a
   14000e9ca:	jne    0x14000e9f4
   14000e9cc:	shr    r8b,1
   14000e9cf:	and    r8b,0xf
   14000e9d3:	cmp    r8b,0x8
   14000e9d7:	jne    0x14000e9f4
   14000e9d9:	mov    rax,QWORD PTR [rcx+0x8]
   14000e9dd:	test   rax,rax
   14000e9e0:	je     0x14000e9f4
   14000e9e2:	test   edx,edx
   14000e9e4:	js     0x14000e9f4
   14000e9e6:	movsxd rcx,edx
   14000e9e9:	cmp    rcx,QWORD PTR [rax]
   14000e9ec:	jge    0x14000e9f4
   14000e9ee:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
   14000e9f3:	ret    
   14000e9f4:	xor    eax,eax
   14000e9f6:	ret    
   14000e9f7:	int3   
   14000e9f8:	int3   
   14000e9f9:	int3   
   14000e9fa:	int3   
   14000e9fb:	int3   
   14000e9fc:	int3   
   14000e9fd:	int3   
   14000e9fe:	int3   
   14000e9ff:	int3   
   14000ea00:	mov    rdx,QWORD PTR [rcx]
   14000ea03:	mov    r8,rdx
   14000ea06:	and    r8d,0x1e
   14000ea0a:	lea    rax,[r8-0x14]
   14000ea0e:	test   rax,0xfffffffffffffff9
   14000ea14:	jne    0x14000ea1c
   14000ea16:	cmp    r8,0x1a
   14000ea1a:	jne    0x14000ea32
   14000ea1c:	shr    dl,1
   14000ea1e:	and    dl,0xf
   14000ea21:	cmp    dl,0x8
   14000ea24:	jne    0x14000ea32
   14000ea26:	mov    rax,QWORD PTR [rcx+0x8]
   14000ea2a:	test   rax,rax
   14000ea2d:	je     0x14000ea32
   14000ea2f:	mov    eax,DWORD PTR [rax]
   14000ea31:	ret    
   14000ea32:	xor    eax,eax
   14000ea34:	ret    
   14000ea35:	int3   
   14000ea36:	int3   
   14000ea37:	int3   
   14000ea38:	int3   
   14000ea39:	int3   
   14000ea3a:	int3   
   14000ea3b:	int3   
   14000ea3c:	int3   
   14000ea3d:	int3   
   14000ea3e:	int3   
   14000ea3f:	int3   
   14000ea40:	mov    r8,QWORD PTR [rcx]
   14000ea43:	mov    rdx,r8
   14000ea46:	and    edx,0x1e
   14000ea49:	lea    rax,[rdx-0x14]
   14000ea4d:	test   rax,0xfffffffffffffffd
   14000ea53:	je     0x14000ea8a
   14000ea55:	cmp    rdx,0x18
   14000ea59:	je     0x14000ea6e
   14000ea5b:	shr    r8b,1
   14000ea5e:	and    r8b,0xf
   14000ea62:	cmp    r8b,0x7
   14000ea66:	jne    0x14000ea8a
   14000ea68:	cmp    rdx,0x18
   14000ea6c:	jne    0x14000ea7c
   14000ea6e:	mov    rax,QWORD PTR [rcx+0x8]
   14000ea72:	test   rax,rax
   14000ea75:	je     0x14000ea8a
   14000ea77:	mov    rax,QWORD PTR [rax+0x8]
   14000ea7b:	ret    
   14000ea7c:	mov    rax,QWORD PTR [rcx+0x8]
   14000ea80:	test   rax,rax
   14000ea83:	je     0x14000ea8a
   14000ea85:	add    rax,0x8
   14000ea89:	ret    
   14000ea8a:	xor    eax,eax
   14000ea8c:	ret    
   14000ea8d:	int3   
   14000ea8e:	int3   
   14000ea8f:	int3   
   14000ea90:	mov    r9,QWORD PTR [rcx]
   14000ea93:	mov    r10,rcx
   14000ea96:	mov    r8,r9
   14000ea99:	movsxd r11,edx
   14000ea9c:	and    r8d,0x1e
   14000eaa0:	lea    rax,[r8-0x14]
   14000eaa4:	test   rax,0xfffffffffffffffd
   14000eaaa:	je     0x14000eaff
   14000eaac:	cmp    r8,0x18
   14000eab0:	je     0x14000eabf
   14000eab2:	shr    r9b,1
   14000eab5:	and    r9b,0xf
   14000eab9:	cmp    r9b,0x7
   14000eabd:	jne    0x14000eaff
   14000eabf:	mov    rax,QWORD PTR [r10+0x8]
   14000eac3:	xor    ecx,ecx
   14000eac5:	test   rax,rax
   14000eac8:	je     0x14000eace
   14000eaca:	mov    edx,DWORD PTR [rax]
   14000eacc:	jmp    0x14000ead0
   14000eace:	mov    edx,ecx
   14000ead0:	cmp    r11d,edx
   14000ead3:	jge    0x14000eaff
   14000ead5:	cmp    r8,0x18
   14000ead9:	jne    0x14000eaed
   14000eadb:	test   rax,rax
   14000eade:	je     0x14000eaf6
   14000eae0:	mov    rcx,QWORD PTR [rax+0x8]
   14000eae4:	mov    rax,r11
   14000eae7:	movzx  eax,BYTE PTR [r11+rcx*1]
   14000eaec:	ret    
   14000eaed:	test   rax,rax
   14000eaf0:	je     0x14000eaf6
   14000eaf2:	lea    rcx,[rax+0x8]
   14000eaf6:	mov    rax,r11
   14000eaf9:	movzx  eax,BYTE PTR [r11+rcx*1]
   14000eafe:	ret    
   14000eaff:	xor    al,al
   14000eb01:	ret    
   14000eb02:	int3   
   14000eb03:	int3   
   14000eb04:	int3   
   14000eb05:	int3   
   14000eb06:	int3   
   14000eb07:	int3   
   14000eb08:	int3   
   14000eb09:	int3   
   14000eb0a:	int3   
   14000eb0b:	int3   
   14000eb0c:	int3   
   14000eb0d:	int3   
   14000eb0e:	int3   
   14000eb0f:	int3   
   14000eb10:	mov    r8,QWORD PTR [rcx]
   14000eb13:	mov    rdx,r8
   14000eb16:	and    edx,0x1e
   14000eb19:	lea    rax,[rdx-0x14]
   14000eb1d:	test   rax,0xfffffffffffffffd
   14000eb23:	je     0x14000eb44
   14000eb25:	cmp    rdx,0x18
   14000eb29:	je     0x14000eb38
   14000eb2b:	shr    r8b,1
   14000eb2e:	and    r8b,0xf
   14000eb32:	cmp    r8b,0x7
   14000eb36:	jne    0x14000eb44
   14000eb38:	mov    rax,QWORD PTR [rcx+0x8]
   14000eb3c:	test   rax,rax
   14000eb3f:	je     0x14000eb44
   14000eb41:	mov    eax,DWORD PTR [rax]
   14000eb43:	ret    
   14000eb44:	xor    eax,eax
   14000eb46:	ret    
   14000eb47:	int3   
   14000eb48:	int3   
   14000eb49:	int3   
   14000eb4a:	int3   
   14000eb4b:	int3   
   14000eb4c:	int3   
   14000eb4d:	int3   
   14000eb4e:	int3   
   14000eb4f:	int3   
   14000eb50:	sub    rsp,0x28
   14000eb54:	mov    rdx,QWORD PTR [rcx]
   14000eb57:	mov    r8,rdx
   14000eb5a:	and    r8d,0x1e
   14000eb5e:	lea    rax,[r8-0x14]
   14000eb62:	test   rax,0xfffffffffffffff9
   14000eb68:	jne    0x14000eb70
   14000eb6a:	cmp    r8,0x1a
   14000eb6e:	jne    0x14000eb7a
   14000eb70:	shr    dl,1
   14000eb72:	and    dl,0xf
   14000eb75:	cmp    dl,0x2
   14000eb78:	je     0x14000eb89
   14000eb7a:	call   0x14000c080
   14000eb7f:	test   eax,eax
   14000eb81:	setne  al
   14000eb84:	add    rsp,0x28
   14000eb88:	ret    
   14000eb89:	movzx  eax,BYTE PTR [rcx+0x8]
   14000eb8d:	add    rsp,0x28
   14000eb91:	ret    
   14000eb92:	int3   
   14000eb93:	int3   
   14000eb94:	int3   
   14000eb95:	int3   
   14000eb96:	int3   
   14000eb97:	int3   
   14000eb98:	int3   
   14000eb99:	int3   
   14000eb9a:	int3   
   14000eb9b:	int3   
   14000eb9c:	int3   
   14000eb9d:	int3   
   14000eb9e:	int3   
   14000eb9f:	int3   
   14000eba0:	jmp    0x14000c130
   14000eba5:	int3   
   14000eba6:	int3   
   14000eba7:	int3   
   14000eba8:	int3   
   14000eba9:	int3   
   14000ebaa:	int3   
   14000ebab:	int3   
   14000ebac:	int3   
   14000ebad:	int3   
   14000ebae:	int3   
   14000ebaf:	int3   
   14000ebb0:	jmp    0x14000c1e0
   14000ebb5:	int3   
   14000ebb6:	int3   
   14000ebb7:	int3   
   14000ebb8:	int3   
   14000ebb9:	int3   
   14000ebba:	int3   
   14000ebbb:	int3   
   14000ebbc:	int3   
   14000ebbd:	int3   
   14000ebbe:	int3   
   14000ebbf:	int3   
   14000ebc0:	mov    r8,QWORD PTR [rcx]
   14000ebc3:	mov    r9,r8
   14000ebc6:	and    r9d,0x1e
   14000ebca:	lea    rax,[r9-0x14]
   14000ebce:	test   rax,0xfffffffffffffff9
   14000ebd4:	jne    0x14000ebdc
   14000ebd6:	cmp    r9,0x1a
   14000ebda:	jne    0x14000ec04
   14000ebdc:	shr    r8b,1
   14000ebdf:	and    r8b,0xf
   14000ebe3:	cmp    r8b,0x9
   14000ebe7:	jne    0x14000ec04
   14000ebe9:	mov    rax,QWORD PTR [rcx+0x8]
   14000ebed:	test   edx,edx
   14000ebef:	js     0x14000ec04
   14000ebf1:	cmp    edx,DWORD PTR [rax]
   14000ebf3:	jge    0x14000ec04
   14000ebf5:	mov    rax,QWORD PTR [rax+0x98]
   14000ebfc:	movsxd rcx,edx
   14000ebff:	mov    rax,QWORD PTR [rax+rcx*8]
   14000ec03:	ret    
   14000ec04:	xor    eax,eax
   14000ec06:	ret    
   14000ec07:	int3   
   14000ec08:	int3   
   14000ec09:	int3   
   14000ec0a:	int3   
   14000ec0b:	int3   
   14000ec0c:	int3   
   14000ec0d:	int3   
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	mov    rdx,QWORD PTR [rcx]
   14000ec13:	mov    r8,rdx
   14000ec16:	and    r8d,0x1e
   14000ec1a:	lea    rax,[r8-0x14]
   14000ec1e:	test   rax,0xfffffffffffffff9
   14000ec24:	jne    0x14000ec2c
   14000ec26:	cmp    r8,0x1a
   14000ec2a:	jne    0x14000ec36
   14000ec2c:	shr    dl,1
   14000ec2e:	and    dl,0xf
   14000ec31:	cmp    dl,0x9
   14000ec34:	je     0x14000ec39
   14000ec36:	xor    eax,eax
   14000ec38:	ret    
   14000ec39:	mov    rax,QWORD PTR [rcx+0x8]
   14000ec3d:	mov    eax,DWORD PTR [rax]
   14000ec3f:	ret    
   14000ec40:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec45:	mov    QWORD PTR [rsp+0x10],rbp
   14000ec4a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ec4f:	mov    DWORD PTR [rsp+0x20],r9d
   14000ec54:	push   rdi
   14000ec55:	sub    rsp,0x20
   14000ec59:	mov    ebx,r9d
   14000ec5c:	mov    esi,r8d
   14000ec5f:	mov    rdi,rdx
   14000ec62:	mov    rbp,rcx
   14000ec65:	test   r9d,r9d
   14000ec68:	jne    0x14000eca0
   14000ec6a:	test   rdx,rdx
   14000ec6d:	je     0x14000ec9c
   14000ec6f:	cmp    BYTE PTR [rdx],bl
   14000ec71:	je     0x14000ec9c
   14000ec73:	mov    edx,0x31415926
   14000ec78:	mov    rcx,rdi
   14000ec7b:	call   0x140022790
   14000ec80:	cmp    BYTE PTR [rip+0x395e1],0x0        # 0x140048268
   14000ec87:	mov    ebx,eax
   14000ec89:	je     0x14000ec9c
   14000ec8b:	mov    r9b,0x1
   14000ec8e:	xor    r8d,r8d
   14000ec91:	mov    rdx,rdi
   14000ec94:	mov    ecx,eax
   14000ec96:	call   QWORD PTR [rip+0x23924]        # 0x1400325c0
   14000ec9c:	mov    DWORD PTR [rsp+0x48],ebx
   14000eca0:	mov    r8,rdi
   14000eca3:	mov    edx,ebx
   14000eca5:	mov    rcx,rbp
   14000eca8:	call   0x14000f810
   14000ecad:	test   rax,rax
   14000ecb0:	jne    0x14000ecb6
   14000ecb2:	mov    eax,esi
   14000ecb4:	jmp    0x14000ecbe
   14000ecb6:	mov    rcx,rax
   14000ecb9:	call   0x14000c080
   14000ecbe:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ecc3:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ecc8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000eccd:	add    rsp,0x20
   14000ecd1:	pop    rdi
   14000ecd2:	ret    
   14000ecd3:	int3   
   14000ecd4:	int3   
   14000ecd5:	int3   
   14000ecd6:	int3   
   14000ecd7:	int3   
   14000ecd8:	int3   
   14000ecd9:	int3   
   14000ecda:	int3   
   14000ecdb:	int3   
   14000ecdc:	int3   
   14000ecdd:	int3   
   14000ecde:	int3   
   14000ecdf:	int3   
   14000ece0:	mov    r8,QWORD PTR [rcx]
   14000ece3:	mov    r9,r8
   14000ece6:	and    r9d,0x1e
   14000ecea:	lea    rax,[r9-0x14]
   14000ecee:	test   rax,0xfffffffffffffff9
   14000ecf4:	jne    0x14000ecfc
   14000ecf6:	cmp    r9,0x1a
   14000ecfa:	jne    0x14000ed21
   14000ecfc:	shr    r8b,1
   14000ecff:	and    r8b,0xf
   14000ed03:	cmp    r8b,0x9
   14000ed07:	jne    0x14000ed21
   14000ed09:	mov    rax,QWORD PTR [rcx+0x8]
   14000ed0d:	test   edx,edx
   14000ed0f:	js     0x14000ed21
   14000ed11:	cmp    edx,DWORD PTR [rax]
   14000ed13:	jge    0x14000ed21
   14000ed15:	mov    rax,QWORD PTR [rax+0x40]
   14000ed19:	movsxd rcx,edx
   14000ed1c:	mov    rax,QWORD PTR [rax+rcx*8]
   14000ed20:	ret    
   14000ed21:	xor    eax,eax
   14000ed23:	ret    
   14000ed24:	int3   
   14000ed25:	int3   
   14000ed26:	int3   
   14000ed27:	int3   
   14000ed28:	int3   
   14000ed29:	int3   
   14000ed2a:	int3   
   14000ed2b:	int3   
   14000ed2c:	int3   
   14000ed2d:	int3   
   14000ed2e:	int3   
   14000ed2f:	int3   
   14000ed30:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed35:	push   rdi
   14000ed36:	sub    rsp,0x20
   14000ed3a:	mov    r9,QWORD PTR [rcx]
   14000ed3d:	mov    rdi,r8
   14000ed40:	mov    r10,r9
   14000ed43:	and    r10d,0x1e
   14000ed47:	lea    rax,[r10-0x14]
   14000ed4b:	test   rax,0xfffffffffffffff9
   14000ed51:	jne    0x14000ed59
   14000ed53:	cmp    r10,0x1a
   14000ed57:	jne    0x14000ed66
   14000ed59:	shr    r9b,1
   14000ed5c:	and    r9b,0xf
   14000ed60:	cmp    r9b,0x9
   14000ed64:	je     0x14000ed6a
   14000ed66:	xor    ebx,ebx
   14000ed68:	jmp    0x14000ed8e
   14000ed6a:	xor    ebx,ebx
   14000ed6c:	cmp    r9b,0x9
   14000ed70:	jne    0x14000ed78
   14000ed72:	mov    rax,QWORD PTR [rcx+0x8]
   14000ed76:	jmp    0x14000ed7b
   14000ed78:	mov    rax,rbx
   14000ed7b:	test   edx,edx
   14000ed7d:	js     0x14000ed8e
   14000ed7f:	cmp    edx,DWORD PTR [rax]
   14000ed81:	jge    0x14000ed8e
   14000ed83:	mov    rax,QWORD PTR [rax+0x40]
   14000ed87:	movsxd rcx,edx
   14000ed8a:	mov    rbx,QWORD PTR [rax+rcx*8]
   14000ed8e:	mov    rdx,rdi
   14000ed91:	mov    rcx,rbx
   14000ed94:	call   0x1400240b0
   14000ed99:	test   al,al
   14000ed9b:	jne    0x14000eda8
   14000ed9d:	mov    rdx,rbx
   14000eda0:	mov    rcx,rdi
   14000eda3:	call   0x14001aae0
   14000eda8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edad:	add    rsp,0x20
   14000edb1:	pop    rdi
   14000edb2:	ret    
   14000edb3:	int3   
   14000edb4:	int3   
   14000edb5:	int3   
   14000edb6:	int3   
   14000edb7:	int3   
   14000edb8:	int3   
   14000edb9:	int3   
   14000edba:	int3   
   14000edbb:	int3   
   14000edbc:	int3   
   14000edbd:	int3   
   14000edbe:	int3   
   14000edbf:	int3   
   14000edc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000edc5:	mov    QWORD PTR [rsp+0x10],rbp
   14000edca:	mov    QWORD PTR [rsp+0x18],rsi
   14000edcf:	mov    QWORD PTR [rsp+0x20],rdi
   14000edd4:	push   r14
   14000edd6:	sub    rsp,0x20
   14000edda:	mov    ebx,DWORD PTR [rsp+0x50]
   14000edde:	mov    rbp,r9
   14000ede1:	mov    rsi,r8
   14000ede4:	mov    rdi,rdx
   14000ede7:	mov    r14,rcx
   14000edea:	test   ebx,ebx
   14000edec:	jne    0x14000ee24
   14000edee:	test   rdx,rdx
   14000edf1:	je     0x14000ee20
   14000edf3:	cmp    BYTE PTR [rdx],bl
   14000edf5:	je     0x14000ee20
   14000edf7:	mov    edx,0x31415926
   14000edfc:	mov    rcx,rdi
   14000edff:	call   0x140022790
   14000ee04:	cmp    BYTE PTR [rip+0x3945d],0x0        # 0x140048268
   14000ee0b:	mov    ebx,eax
   14000ee0d:	je     0x14000ee20
   14000ee0f:	mov    r9b,0x1
   14000ee12:	xor    r8d,r8d
   14000ee15:	mov    rdx,rdi
   14000ee18:	mov    ecx,eax
   14000ee1a:	call   QWORD PTR [rip+0x237a0]        # 0x1400325c0
   14000ee20:	mov    DWORD PTR [rsp+0x50],ebx
   14000ee24:	mov    r8,rdi
   14000ee27:	mov    edx,ebx
   14000ee29:	mov    rcx,r14
   14000ee2c:	call   0x14000f810
   14000ee31:	test   rax,rax
   14000ee34:	jne    0x14000ee43
   14000ee36:	mov    rdx,rbp
   14000ee39:	mov    rcx,rsi
   14000ee3c:	call   0x14001aae0
   14000ee41:	jmp    0x14000ee4e
   14000ee43:	mov    rdx,rsi
   14000ee46:	mov    rcx,rax
   14000ee49:	call   0x14000ef50
   14000ee4e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ee53:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ee58:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ee5d:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ee62:	add    rsp,0x20
   14000ee66:	pop    r14
   14000ee68:	ret    
   14000ee69:	int3   
   14000ee6a:	int3   
   14000ee6b:	int3   
   14000ee6c:	int3   
   14000ee6d:	int3   
   14000ee6e:	int3   
   14000ee6f:	int3   
   14000ee70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee75:	mov    QWORD PTR [rsp+0x10],rbp
   14000ee7a:	mov    DWORD PTR [rsp+0x20],r9d
   14000ee7f:	push   rsi
   14000ee80:	push   rdi
   14000ee81:	push   r14
   14000ee83:	sub    rsp,0x20
   14000ee87:	xor    edi,edi
   14000ee89:	mov    ebx,r9d
   14000ee8c:	mov    rbp,r8
   14000ee8f:	mov    rsi,rdx
   14000ee92:	mov    r14,rcx
   14000ee95:	test   r9d,r9d
   14000ee98:	jne    0x14000eed2
   14000ee9a:	mov    ebx,edi
   14000ee9c:	test   rdx,rdx
   14000ee9f:	je     0x14000eece
   14000eea1:	cmp    BYTE PTR [rdx],bl
   14000eea3:	je     0x14000eece
   14000eea5:	mov    edx,0x31415926
   14000eeaa:	mov    rcx,rsi
   14000eead:	call   0x140022790
   14000eeb2:	cmp    BYTE PTR [rip+0x393af],dil        # 0x140048268
   14000eeb9:	mov    ebx,eax
   14000eebb:	je     0x14000eece
   14000eebd:	mov    r9b,0x1
   14000eec0:	xor    r8d,r8d
   14000eec3:	mov    rdx,rsi
   14000eec6:	mov    ecx,eax
   14000eec8:	call   QWORD PTR [rip+0x236f2]        # 0x1400325c0
   14000eece:	mov    DWORD PTR [rsp+0x58],ebx
   14000eed2:	mov    r8,rsi
   14000eed5:	mov    edx,ebx
   14000eed7:	mov    rcx,r14
   14000eeda:	call   0x14000f810
   14000eedf:	test   rax,rax
   14000eee2:	je     0x14000ef31
   14000eee4:	mov    r8,QWORD PTR [rax]
   14000eee7:	mov    rdx,r8
   14000eeea:	and    edx,0x1e
   14000eeed:	lea    rcx,[rdx-0x14]
   14000eef1:	test   rcx,0xfffffffffffffffd
   14000eef8:	je     0x14000ef0d
   14000eefa:	cmp    rdx,0x18
   14000eefe:	je     0x14000ef31
   14000ef00:	shr    r8b,1
   14000ef03:	and    r8b,0xf
   14000ef07:	cmp    r8b,0x6
   14000ef0b:	jne    0x14000ef31
   14000ef0d:	cmp    rdx,0xc
   14000ef11:	je     0x14000ef28
   14000ef13:	cmp    rdx,0x16
   14000ef17:	je     0x14000ef28
   14000ef19:	cmp    rdx,0x14
   14000ef1d:	jne    0x14000ef2c
   14000ef1f:	lea    rdi,[rax+0x8]
   14000ef23:	mov    rax,rdi
   14000ef26:	jmp    0x14000ef34
   14000ef28:	mov    rdi,QWORD PTR [rax+0x8]
   14000ef2c:	mov    rax,rdi
   14000ef2f:	jmp    0x14000ef34
   14000ef31:	mov    rax,rbp
   14000ef34:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ef39:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ef3e:	add    rsp,0x20
   14000ef42:	pop    r14
   14000ef44:	pop    rdi
   14000ef45:	pop    rsi
   14000ef46:	ret    
   14000ef47:	int3   
   14000ef48:	int3   
   14000ef49:	int3   
   14000ef4a:	int3   
   14000ef4b:	int3   
   14000ef4c:	int3   
   14000ef4d:	int3   
   14000ef4e:	int3   
   14000ef4f:	int3   
   14000ef50:	mov    r8,QWORD PTR [rcx]
   14000ef53:	mov    r9,rdx
   14000ef56:	and    r8d,0x1e
   14000ef5a:	cmp    r8,0x4
   14000ef5e:	jne    0x14000ef85
   14000ef60:	cmp    BYTE PTR [rcx+0x8],0x0
   14000ef64:	lea    rax,[rip+0x274a1]        # 0x14003640c
   14000ef6b:	lea    r8,[rip+0x274a2]        # 0x140036414
   14000ef72:	mov    rcx,r9
   14000ef75:	cmovne r8,rax
   14000ef79:	lea    rdx,[rip+0x25388]        # 0x140034308
   14000ef80:	jmp    0x14001ae50
   14000ef85:	cmp    r8,0x6
   14000ef89:	jne    0x14000ef9e
   14000ef8b:	mov    r8,QWORD PTR [rcx+0x8]
   14000ef8f:	lea    rdx,[rip+0x2381e]        # 0x1400327b4
   14000ef96:	mov    rcx,r9
   14000ef99:	jmp    0x14001ae50
   14000ef9e:	cmp    r8,0x8
   14000efa2:	jne    0x14000efb7
   14000efa4:	mov    r8,QWORD PTR [rcx+0x8]
   14000efa8:	lea    rdx,[rip+0x2380d]        # 0x1400327bc
   14000efaf:	mov    rcx,r9
   14000efb2:	jmp    0x14001ae50
   14000efb7:	cmp    r8,0xa
   14000efbb:	jne    0x14000efd6
   14000efbd:	movsd  xmm2,QWORD PTR [rcx+0x8]
   14000efc2:	lea    rdx,[rip+0x2756f]        # 0x140036538
   14000efc9:	movq   r8,xmm2
   14000efce:	mov    rcx,r9
   14000efd1:	jmp    0x14001ae50
   14000efd6:	lea    rax,[r8-0xc]
   14000efda:	test   rax,0xfffffffffffffff5
   14000efe0:	jne    0x14000f01c
   14000efe2:	cmp    r8,0xe
   14000efe6:	je     0x14000f01c
   14000efe8:	cmp    r8,0xc
   14000efec:	je     0x14000f010
   14000efee:	cmp    r8,0x16
   14000eff2:	je     0x14000f010
   14000eff4:	cmp    r8,0x14
   14000eff8:	jne    0x14000f006
   14000effa:	lea    rdx,[rcx+0x8]
   14000effe:	mov    rcx,r9
   14000f001:	jmp    0x14001b3a0
   14000f006:	xor    edx,edx
   14000f008:	mov    rcx,r9
   14000f00b:	jmp    0x14001b3a0
   14000f010:	mov    rdx,QWORD PTR [rcx+0x8]
   14000f014:	mov    rcx,r9
   14000f017:	jmp    0x14001b3a0
   14000f01c:	lea    rdx,[rip+0x2377d]        # 0x1400327a0
   14000f023:	mov    rcx,r9
   14000f026:	jmp    0x14001b3a0
   14000f02b:	int3   
   14000f02c:	int3   
   14000f02d:	int3   
   14000f02e:	int3   
   14000f02f:	int3   
   14000f030:	mov    rax,QWORD PTR [rcx]
   14000f033:	and    eax,0x1e
   14000f036:	cmp    rax,0xc
   14000f03a:	je     0x14000f051
   14000f03c:	cmp    rax,0x16
   14000f040:	je     0x14000f051
   14000f042:	cmp    rax,0x14
   14000f046:	jne    0x14000f04d
   14000f048:	lea    rax,[rcx+0x8]
   14000f04c:	ret    
   14000f04d:	mov    rax,rdx
   14000f050:	ret    
   14000f051:	mov    rax,QWORD PTR [rcx+0x8]
   14000f055:	ret    
   14000f056:	int3   
   14000f057:	int3   
   14000f058:	int3   
   14000f059:	int3   
   14000f05a:	int3   
   14000f05b:	int3   
   14000f05c:	int3   
   14000f05d:	int3   
   14000f05e:	int3   
   14000f05f:	int3   
   14000f060:	mov    rdx,QWORD PTR [rcx]
   14000f063:	mov    r8,rdx
   14000f066:	and    r8d,0x1e
   14000f06a:	lea    rax,[r8-0x14]
   14000f06e:	test   rax,0xfffffffffffffff9
   14000f074:	jne    0x14000f07c
   14000f076:	cmp    r8,0x1a
   14000f07a:	jne    0x14000f08b
   14000f07c:	shr    dl,1
   14000f07e:	and    dl,0xf
   14000f081:	cmp    dl,0x9
   14000f084:	jne    0x14000f08b
   14000f086:	mov    rax,QWORD PTR [rcx+0x8]
   14000f08a:	ret    
   14000f08b:	xor    eax,eax
   14000f08d:	ret    
   14000f08e:	int3   
   14000f08f:	int3   
   14000f090:	mov    rax,QWORD PTR [rcx]
   14000f093:	mov    rcx,rax
   14000f096:	and    ecx,0x1e
   14000f099:	cmp    rcx,0x14
   14000f09d:	jne    0x14000f0a2
   14000f09f:	mov    al,0x6
   14000f0a1:	ret    
   14000f0a2:	cmp    rcx,0x16
   14000f0a6:	je     0x14000f09f
   14000f0a8:	cmp    rcx,0x18
   14000f0ac:	jne    0x14000f0b1
   14000f0ae:	mov    al,0x7
   14000f0b0:	ret    
   14000f0b1:	shr    al,1
   14000f0b3:	and    al,0xf
   14000f0b5:	ret    
   14000f0b6:	int3   
   14000f0b7:	int3   
   14000f0b8:	int3   
   14000f0b9:	int3   
   14000f0ba:	int3   
   14000f0bb:	int3   
   14000f0bc:	int3   
   14000f0bd:	int3   
   14000f0be:	int3   
   14000f0bf:	int3   
   14000f0c0:	jmp    0x14000c290
   14000f0c5:	int3   
   14000f0c6:	int3   
   14000f0c7:	int3   
   14000f0c8:	int3   
   14000f0c9:	int3   
   14000f0ca:	int3   
   14000f0cb:	int3   
   14000f0cc:	int3   
   14000f0cd:	int3   
   14000f0ce:	int3   
   14000f0cf:	int3   
   14000f0d0:	rex push rdi
   14000f0d2:	sub    rsp,0x20
   14000f0d6:	mov    eax,edx
   14000f0d8:	mov    rdi,rcx
   14000f0db:	mov    edx,DWORD PTR [rcx+0xc]
   14000f0de:	bt     edx,0x1e
   14000f0e2:	jb     0x14000f1b8
   14000f0e8:	mov    ecx,DWORD PTR [rcx+0x8]
   14000f0eb:	and    edx,0x3fffffff
   14000f0f1:	mov    QWORD PTR [rsp+0x30],rbx
   14000f0f6:	mov    r9d,0x1
   14000f0fc:	mov    QWORD PTR [rsp+0x38],rsi
   14000f101:	lea    esi,[rcx+rax*1]
   14000f104:	mov    r8d,esi
   14000f107:	call   0x14001aa30
   14000f10c:	mov    ebx,eax
   14000f10e:	cmp    eax,esi
   14000f110:	jge    0x14000f12e
   14000f112:	test   eax,eax
   14000f114:	jne    0x14000f120
   14000f116:	cmp    esi,0xffffffff
   14000f119:	jg     0x14000f120
   14000f11b:	or     ebx,0xffffffff
   14000f11e:	jmp    0x14000f12e
   14000f120:	lea    eax,[rbx+rsi*1]
   14000f123:	cdq    
   14000f124:	sub    eax,edx
   14000f126:	sar    eax,1
   14000f128:	mov    ebx,eax
   14000f12a:	cmp    eax,esi
   14000f12c:	jl     0x14000f120
   14000f12e:	test   DWORD PTR [rdi+0xc],0xc0000000
   14000f135:	mov    rax,QWORD PTR [rip+0x23254]        # 0x140032390
   14000f13c:	mov    rcx,QWORD PTR [rax]
   14000f13f:	mov    rax,QWORD PTR [rcx]
   14000f142:	jne    0x14000f184
   14000f144:	mov    rdx,QWORD PTR [rdi]
   14000f147:	test   rdx,rdx
   14000f14a:	je     0x14000f168
   14000f14c:	movsxd r8,ebx
   14000f14f:	call   QWORD PTR [rax+0x18]
   14000f152:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f157:	mov    DWORD PTR [rdi+0x8],ebx
   14000f15a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f15f:	mov    QWORD PTR [rdi],rax
   14000f162:	add    rsp,0x20
   14000f166:	pop    rdi
   14000f167:	ret    
   14000f168:	movsxd rdx,ebx
   14000f16b:	call   QWORD PTR [rax+0x8]
   14000f16e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f173:	mov    DWORD PTR [rdi+0x8],ebx
   14000f176:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f17b:	mov    QWORD PTR [rdi],rax
   14000f17e:	add    rsp,0x20
   14000f182:	pop    rdi
   14000f183:	ret    
   14000f184:	mov    rsi,QWORD PTR [rdi]
   14000f187:	movsxd rdx,ebx
   14000f18a:	call   QWORD PTR [rax+0x8]
   14000f18d:	mov    QWORD PTR [rdi],rax
   14000f190:	test   rsi,rsi
   14000f193:	je     0x14000f1a4
   14000f195:	movsxd r8,DWORD PTR [rdi+0x8]
   14000f199:	mov    rdx,rsi
   14000f19c:	mov    rcx,rax
   14000f19f:	call   0x140026f70
   14000f1a4:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14000f1ab:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f1b0:	mov    DWORD PTR [rdi+0x8],ebx
   14000f1b3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f1b8:	add    rsp,0x20
   14000f1bc:	pop    rdi
   14000f1bd:	ret    
   14000f1be:	int3   
   14000f1bf:	int3   
   14000f1c0:	mov    r8,QWORD PTR [rcx]
   14000f1c3:	movzx  eax,dx
   14000f1c6:	shr    r8,0x5
   14000f1ca:	test   eax,r8d
   14000f1cd:	setne  al
   14000f1d0:	ret    
   14000f1d1:	int3   
   14000f1d2:	int3   
   14000f1d3:	int3   
   14000f1d4:	int3   
   14000f1d5:	int3   
   14000f1d6:	int3   
   14000f1d7:	int3   
   14000f1d8:	int3   
   14000f1d9:	int3   
   14000f1da:	int3   
   14000f1db:	int3   
   14000f1dc:	int3   
   14000f1dd:	int3   
   14000f1de:	int3   
   14000f1df:	int3   
   14000f1e0:	mov    QWORD PTR [rsp+0x18],rbx
   14000f1e5:	mov    QWORD PTR [rsp+0x10],rdx
   14000f1ea:	push   rdi
   14000f1eb:	sub    rsp,0x20
   14000f1ef:	mov    rax,QWORD PTR [rcx+0x18]
   14000f1f3:	or     rbx,0xffffffffffffffff
   14000f1f7:	xor    r8b,r8b
   14000f1fa:	mov    r11,rdx
   14000f1fd:	mov    rdi,rcx
   14000f200:	cmp    rax,rbx
   14000f203:	je     0x14000f27e
   14000f205:	mov    r10,QWORD PTR [rdx]
   14000f208:	mov    QWORD PTR [rsp+0x30],rsi
   14000f20d:	mov    rsi,QWORD PTR [rcx+0x8]
   14000f211:	nop    DWORD PTR [rax+0x0]
   14000f215:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f220:	mov    rbx,rax
   14000f223:	lea    rax,[rax+rax*4]
   14000f227:	mov    r8,QWORD PTR [rsi+rax*8+0x20]
   14000f22c:	lea    r9,[rsi+rax*8]
   14000f230:	mov    rax,QWORD PTR [r8]
   14000f233:	cmp    r10,rax
   14000f236:	jne    0x14000f25d
   14000f238:	add    r8,0x8
   14000f23c:	lea    rax,[r11+0x8]
   14000f240:	sub    r8,rax
   14000f243:	movzx  edx,BYTE PTR [rax]
   14000f246:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000f24b:	sub    edx,ecx
   14000f24d:	jne    0x14000f256
   14000f24f:	inc    rax
   14000f252:	test   ecx,ecx
   14000f254:	jne    0x14000f243
   14000f256:	test   edx,edx
   14000f258:	sets   al
   14000f25b:	jmp    0x14000f260
   14000f25d:	setb   al
   14000f260:	test   al,al
   14000f262:	je     0x14000f26c
   14000f264:	mov    rax,QWORD PTR [r9]
   14000f267:	mov    r8b,0x1
   14000f26a:	jmp    0x14000f273
   14000f26c:	mov    rax,QWORD PTR [r9+0x8]
   14000f270:	xor    r8b,r8b
   14000f273:	cmp    rax,0xffffffffffffffff
   14000f277:	jne    0x14000f220
   14000f279:	mov    rsi,QWORD PTR [rsp+0x30]
   14000f27e:	lea    r9,[rsp+0x38]
   14000f283:	mov    rdx,rbx
   14000f286:	mov    rcx,rdi
   14000f289:	call   0x14000f2a0
   14000f28e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f293:	add    rsp,0x20
   14000f297:	pop    rdi
   14000f298:	ret    
   14000f299:	int3   
   14000f29a:	int3   
   14000f29b:	int3   
   14000f29c:	int3   
   14000f29d:	int3   
   14000f29e:	int3   
   14000f29f:	int3   
   14000f2a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000f2aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000f2af:	push   rdi
   14000f2b0:	sub    rsp,0x20
   14000f2b4:	mov    rsi,rdx
   14000f2b7:	movzx  ebp,r8b
   14000f2bb:	mov    rdx,r9
   14000f2be:	mov    rbx,rcx
   14000f2c1:	call   0x1400101a0
   14000f2c6:	mov    r9,QWORD PTR [rbx+0x8]
   14000f2ca:	mov    rdi,rax
   14000f2cd:	lea    r10,[rax+rax*4]
   14000f2d1:	mov    QWORD PTR [r9+r10*8+0x10],rsi
   14000f2d6:	mov    QWORD PTR [r9+r10*8+0x8],0xffffffffffffffff
   14000f2df:	mov    QWORD PTR [r9+r10*8],0xffffffffffffffff
   14000f2e7:	mov    QWORD PTR [r9+r10*8+0x18],0x0
   14000f2f0:	cmp    rsi,0xffffffffffffffff
   14000f2f4:	je     0x14000f310
   14000f2f6:	mov    rax,QWORD PTR [rbx+0x8]
   14000f2fa:	lea    rcx,[rsi+rsi*4]
   14000f2fe:	test   bpl,bpl
   14000f301:	je     0x14000f309
   14000f303:	mov    QWORD PTR [rax+rcx*8],rdi
   14000f307:	jmp    0x14000f314
   14000f309:	mov    QWORD PTR [rax+rcx*8+0x8],rdi
   14000f30e:	jmp    0x14000f314
   14000f310:	mov    QWORD PTR [rbx+0x18],rdi
   14000f314:	mov    rdx,rdi
   14000f317:	mov    rcx,rbx
   14000f31a:	call   0x14000f500
   14000f31f:	inc    QWORD PTR [rbx+0x20]
   14000f323:	mov    rax,rdi
   14000f326:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f32b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f330:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f335:	add    rsp,0x20
   14000f339:	pop    rdi
   14000f33a:	ret    
   14000f33b:	int3   
   14000f33c:	int3   
   14000f33d:	int3   
   14000f33e:	int3   
   14000f33f:	int3   
   14000f340:	mov    QWORD PTR [rsp+0x10],rsi
   14000f345:	mov    QWORD PTR [rsp+0x18],rdi
   14000f34a:	push   r14
   14000f34c:	sub    rsp,0x20
   14000f350:	movsxd rdi,edx
   14000f353:	mov    esi,r8d
   14000f356:	mov    r14,rcx
   14000f359:	test   r8d,r8d
   14000f35c:	je     0x14000f3a9
   14000f35e:	mov    eax,DWORD PTR [rcx+0x10]
   14000f361:	mov    QWORD PTR [rsp+0x30],rbx
   14000f366:	mov    ebx,DWORD PTR [rcx]
   14000f368:	add    ebx,r8d
   14000f36b:	cmp    ebx,eax
   14000f36d:	jle    0x14000f37c
   14000f36f:	mov    edx,ebx
   14000f371:	add    rcx,0x8
   14000f375:	sub    edx,eax
   14000f377:	call   0x14000f0d0
   14000f37c:	mov    DWORD PTR [r14],ebx
   14000f37f:	sub    ebx,edi
   14000f381:	sub    ebx,esi
   14000f383:	test   ebx,ebx
   14000f385:	jle    0x14000f3a4
   14000f387:	test   esi,esi
   14000f389:	jle    0x14000f3a4
   14000f38b:	lea    eax,[rdi+rsi*1]
   14000f38e:	movsxd r8,ebx
   14000f391:	movsxd rcx,eax
   14000f394:	mov    rdx,rdi
   14000f397:	add    rcx,QWORD PTR [r14+0x8]
   14000f39b:	add    rdx,QWORD PTR [r14+0x8]
   14000f39f:	call   0x140026f70
   14000f3a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f3a9:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f3ae:	mov    eax,edi
   14000f3b0:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f3b5:	add    rsp,0x20
   14000f3b9:	pop    r14
   14000f3bb:	ret    
   14000f3bc:	int3   
   14000f3bd:	int3   
   14000f3be:	int3   
   14000f3bf:	int3   
   14000f3c0:	mov    QWORD PTR [rsp+0x10],rsi
   14000f3c5:	mov    QWORD PTR [rsp+0x18],rdi
   14000f3ca:	push   r14
   14000f3cc:	sub    rsp,0x20
   14000f3d0:	movsxd rdi,edx
   14000f3d3:	mov    esi,r8d
   14000f3d6:	mov    r14,rcx
   14000f3d9:	test   r8d,r8d
   14000f3dc:	je     0x14000f42e
   14000f3de:	mov    eax,DWORD PTR [rcx+0x10]
   14000f3e1:	mov    QWORD PTR [rsp+0x30],rbx
   14000f3e6:	mov    ebx,DWORD PTR [rcx]
   14000f3e8:	add    ebx,r8d
   14000f3eb:	cmp    ebx,eax
   14000f3ed:	jle    0x14000f3fc
   14000f3ef:	mov    edx,ebx
   14000f3f1:	add    rcx,0x8
   14000f3f5:	sub    edx,eax
   14000f3f7:	call   0x140013420
   14000f3fc:	mov    DWORD PTR [r14],ebx
   14000f3ff:	sub    ebx,edi
   14000f401:	sub    ebx,esi
   14000f403:	test   ebx,ebx
   14000f405:	jle    0x14000f429
   14000f407:	test   esi,esi
   14000f409:	jle    0x14000f429
   14000f40b:	mov    r9,QWORD PTR [r14+0x8]
   14000f40f:	lea    eax,[rdi+rsi*1]
   14000f412:	movsxd rcx,eax
   14000f415:	movsxd r8,ebx
   14000f418:	shl    r8,0x3
   14000f41c:	lea    rdx,[r9+rdi*8]
   14000f420:	lea    rcx,[r9+rcx*8]
   14000f424:	call   0x140026f70
   14000f429:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f42e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f433:	mov    eax,edi
   14000f435:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f43a:	add    rsp,0x20
   14000f43e:	pop    r14
   14000f440:	ret    
   14000f441:	int3   
   14000f442:	int3   
   14000f443:	int3   
   14000f444:	int3   
   14000f445:	int3   
   14000f446:	int3   
   14000f447:	int3   
   14000f448:	int3   
   14000f449:	int3   
   14000f44a:	int3   
   14000f44b:	int3   
   14000f44c:	int3   
   14000f44d:	int3   
   14000f44e:	int3   
   14000f44f:	int3   
   14000f450:	mov    QWORD PTR [rsp+0x10],rsi
   14000f455:	mov    QWORD PTR [rsp+0x18],rdi
   14000f45a:	push   r14
   14000f45c:	sub    rsp,0x20
   14000f460:	movsxd rsi,r8d
   14000f463:	mov    rdi,rcx
   14000f466:	movsxd r14,edx
   14000f469:	test   r8d,r8d
   14000f46c:	je     0x14000f4e6
   14000f46e:	mov    eax,DWORD PTR [rcx+0x10]
   14000f471:	mov    QWORD PTR [rsp+0x30],rbx
   14000f476:	mov    ebx,DWORD PTR [rcx]
   14000f478:	add    ebx,esi
   14000f47a:	cmp    ebx,eax
   14000f47c:	jle    0x14000f48b
   14000f47e:	mov    edx,ebx
   14000f480:	add    rcx,0x8
   14000f484:	sub    edx,eax
   14000f486:	call   0x1400031e0
   14000f48b:	mov    DWORD PTR [rdi],ebx
   14000f48d:	sub    ebx,r14d
   14000f490:	sub    ebx,esi
   14000f492:	test   ebx,ebx
   14000f494:	jle    0x14000f4b9
   14000f496:	test   esi,esi
   14000f498:	jle    0x14000f4b9
   14000f49a:	mov    r9,QWORD PTR [rdi+0x8]
   14000f49e:	lea    eax,[r14+rsi*1]
   14000f4a2:	movsxd rcx,eax
   14000f4a5:	movsxd r8,ebx
   14000f4a8:	shl    r8,0x2
   14000f4ac:	lea    rdx,[r9+r14*4]
   14000f4b0:	lea    rcx,[r9+rcx*4]
   14000f4b4:	call   0x140026f70
   14000f4b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4be:	mov    r8,rsi
   14000f4c1:	test   esi,esi
   14000f4c3:	jle    0x14000f4e6
   14000f4c5:	lea    rcx,[r14*4+0x0]
   14000f4cd:	xor    r9d,r9d
   14000f4d0:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f4d4:	add    rdx,rcx
   14000f4d7:	je     0x14000f4dc
   14000f4d9:	mov    DWORD PTR [rdx],r9d
   14000f4dc:	add    rcx,0x4
   14000f4e0:	sub    r8,0x1
   14000f4e4:	jne    0x14000f4d0
   14000f4e6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f4eb:	mov    eax,r14d
   14000f4ee:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f4f3:	add    rsp,0x20
   14000f4f7:	pop    r14
   14000f4f9:	ret    
   14000f4fa:	int3   
   14000f4fb:	int3   
   14000f4fc:	int3   
   14000f4fd:	int3   
   14000f4fe:	int3   
   14000f4ff:	int3   
   14000f500:	mov    QWORD PTR [rsp+0x18],rsi
   14000f505:	push   rdi
   14000f506:	sub    rsp,0x20
   14000f50a:	mov    rsi,rdx
   14000f50d:	mov    rdi,rcx
   14000f510:	cmp    rdx,QWORD PTR [rcx+0x18]
   14000f514:	je     0x14000f71c
   14000f51a:	mov    QWORD PTR [rsp+0x38],rbp
   14000f51f:	xor    ebp,ebp
   14000f521:	mov    QWORD PTR [rsp+0x30],rbx
   14000f526:	cmp    rsi,0xffffffffffffffff
   14000f52a:	je     0x14000f712
   14000f530:	mov    rcx,QWORD PTR [rdi+0x8]
   14000f534:	lea    rbx,[rsi+rsi*4]
   14000f538:	mov    rbx,QWORD PTR [rcx+rbx*8+0x10]
   14000f53d:	cmp    rbx,0xffffffffffffffff
   14000f541:	je     0x14000f712
   14000f547:	lea    rax,[rbx+rbx*4]
   14000f54b:	cmp    DWORD PTR [rcx+rax*8+0x18],ebp
   14000f54f:	jne    0x14000f712
   14000f555:	cmp    rbx,0xffffffffffffffff
   14000f559:	je     0x14000f574
   14000f55b:	lea    rax,[rbx+rbx*4]
   14000f55f:	mov    rdx,QWORD PTR [rcx+rax*8+0x10]
   14000f564:	cmp    rdx,0xffffffffffffffff
   14000f568:	je     0x14000f578
   14000f56a:	lea    rax,[rdx+rdx*4]
   14000f56e:	mov    r8,QWORD PTR [rcx+rax*8]
   14000f572:	jmp    0x14000f57c
   14000f574:	or     rdx,0xffffffffffffffff
   14000f578:	or     r8,0xffffffffffffffff
   14000f57c:	cmp    r8,rbx
   14000f57f:	jne    0x14000f638
   14000f585:	cmp    rdx,0xffffffffffffffff
   14000f589:	je     0x14000f5b9
   14000f58b:	lea    rax,[rdx+rdx*4]
   14000f58f:	lea    r8,[rax*8+0x0]
   14000f597:	mov    rax,QWORD PTR [r8+rcx*1+0x8]
   14000f59c:	cmp    rax,0xffffffffffffffff
   14000f5a0:	je     0x14000f5b9
   14000f5a2:	lea    rax,[rax+rax*4]
   14000f5a6:	lea    r9,[rax*8+0x0]
   14000f5ae:	cmp    DWORD PTR [r9+rcx*1+0x18],ebp
   14000f5b3:	je     0x14000f667
   14000f5b9:	cmp    rbx,0xffffffffffffffff
   14000f5bd:	je     0x14000f5ca
   14000f5bf:	lea    rax,[rbx+rbx*4]
   14000f5c3:	mov    r8,QWORD PTR [rcx+rax*8+0x8]
   14000f5c8:	jmp    0x14000f5ce
   14000f5ca:	or     r8,0xffffffffffffffff
   14000f5ce:	cmp    r8,rsi
   14000f5d1:	jne    0x14000f60d
   14000f5d3:	mov    rdx,rbx
   14000f5d6:	mov    rcx,rdi
   14000f5d9:	mov    rsi,rbx
   14000f5dc:	call   0x140011180
   14000f5e1:	cmp    rbx,0xffffffffffffffff
   14000f5e5:	je     0x14000f605
   14000f5e7:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f5eb:	lea    rax,[rbx+rbx*4]
   14000f5ef:	mov    rbx,QWORD PTR [rdx+rax*8+0x10]
   14000f5f4:	cmp    rbx,0xffffffffffffffff
   14000f5f8:	je     0x14000f609
   14000f5fa:	lea    rax,[rbx+rbx*4]
   14000f5fe:	mov    rdx,QWORD PTR [rdx+rax*8+0x10]
   14000f603:	jmp    0x14000f60d
   14000f605:	or     rbx,0xffffffffffffffff
   14000f609:	or     rdx,0xffffffffffffffff
   14000f60d:	mov    rax,QWORD PTR [rdi+0x8]
   14000f611:	lea    rcx,[rbx+rbx*4]
   14000f615:	mov    QWORD PTR [rax+rcx*8+0x18],0x1
   14000f61e:	lea    rcx,[rdx+rdx*4]
   14000f622:	mov    rax,QWORD PTR [rdi+0x8]
   14000f626:	mov    QWORD PTR [rax+rcx*8+0x18],rbp
   14000f62b:	mov    rcx,rdi
   14000f62e:	call   0x1400112b0
   14000f633:	jmp    0x14000f708
   14000f638:	cmp    rdx,0xffffffffffffffff
   14000f63c:	je     0x14000f68f
   14000f63e:	lea    rax,[rdx+rdx*4]
   14000f642:	lea    r8,[rax*8+0x0]
   14000f64a:	mov    rax,QWORD PTR [r8+rcx*1]
   14000f64e:	cmp    rax,0xffffffffffffffff
   14000f652:	je     0x14000f68f
   14000f654:	lea    rax,[rax+rax*4]
   14000f658:	lea    r9,[rax*8+0x0]
   14000f660:	cmp    DWORD PTR [r9+rcx*1+0x18],ebp
   14000f665:	jne    0x14000f68f
   14000f667:	lea    rax,[rbx+rbx*4]
   14000f66b:	mov    rsi,rdx
   14000f66e:	mov    QWORD PTR [rcx+rax*8+0x18],0x1
   14000f677:	mov    rax,QWORD PTR [rdi+0x8]
   14000f67b:	mov    QWORD PTR [r9+rax*1+0x18],0x1
   14000f684:	mov    rax,QWORD PTR [rdi+0x8]
   14000f688:	mov    QWORD PTR [r8+rax*1+0x18],rbp
   14000f68d:	jmp    0x14000f708
   14000f68f:	cmp    rbx,0xffffffffffffffff
   14000f693:	je     0x14000f69f
   14000f695:	lea    rax,[rbx+rbx*4]
   14000f699:	mov    r8,QWORD PTR [rcx+rax*8]
   14000f69d:	jmp    0x14000f6a3
   14000f69f:	or     r8,0xffffffffffffffff
   14000f6a3:	cmp    r8,rsi
   14000f6a6:	jne    0x14000f6e2
   14000f6a8:	mov    rdx,rbx
   14000f6ab:	mov    rcx,rdi
   14000f6ae:	mov    rsi,rbx
   14000f6b1:	call   0x1400112b0
   14000f6b6:	cmp    rbx,0xffffffffffffffff
   14000f6ba:	je     0x14000f6da
   14000f6bc:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f6c0:	lea    rax,[rbx+rbx*4]
   14000f6c4:	mov    rbx,QWORD PTR [rdx+rax*8+0x10]
   14000f6c9:	cmp    rbx,0xffffffffffffffff
   14000f6cd:	je     0x14000f6de
   14000f6cf:	lea    rax,[rbx+rbx*4]
   14000f6d3:	mov    rdx,QWORD PTR [rdx+rax*8+0x10]
   14000f6d8:	jmp    0x14000f6e2
   14000f6da:	or     rbx,0xffffffffffffffff
   14000f6de:	or     rdx,0xffffffffffffffff
   14000f6e2:	mov    rax,QWORD PTR [rdi+0x8]
   14000f6e6:	lea    rcx,[rbx+rbx*4]
   14000f6ea:	mov    QWORD PTR [rax+rcx*8+0x18],0x1
   14000f6f3:	lea    rcx,[rdx+rdx*4]
   14000f6f7:	mov    rax,QWORD PTR [rdi+0x8]
   14000f6fb:	mov    QWORD PTR [rax+rcx*8+0x18],rbp
   14000f700:	mov    rcx,rdi
   14000f703:	call   0x140011180
   14000f708:	cmp    rsi,QWORD PTR [rdi+0x18]
   14000f70c:	jne    0x14000f526
   14000f712:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f717:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f71c:	mov    rax,QWORD PTR [rdi+0x18]
   14000f720:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f725:	lea    rcx,[rax+rax*4]
   14000f729:	mov    rax,QWORD PTR [rdi+0x8]
   14000f72d:	mov    QWORD PTR [rax+rcx*8+0x18],0x1
   14000f736:	add    rsp,0x20
   14000f73a:	pop    rdi
   14000f73b:	ret    
   14000f73c:	int3   
   14000f73d:	int3   
   14000f73e:	int3   
   14000f73f:	int3   
   14000f740:	mov    QWORD PTR [rsp+0x8],rbx
   14000f745:	mov    QWORD PTR [rsp+0x10],rsi
   14000f74a:	push   rdi
   14000f74b:	sub    rsp,0x20
   14000f74f:	mov    rsi,rdx
   14000f752:	movsxd rdi,r8d
   14000f755:	mov    dl,0xc
   14000f757:	mov    rbx,rcx
   14000f75a:	call   0x14000faa0
   14000f75f:	test   edi,edi
   14000f761:	jne    0x14000f77b
   14000f763:	mov    QWORD PTR [rbx+0x8],0x0
   14000f76b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f770:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f775:	add    rsp,0x20
   14000f779:	pop    rdi
   14000f77a:	ret    
   14000f77b:	mov    rax,QWORD PTR [rip+0x22c0e]        # 0x140032390
   14000f782:	mov    edx,0x10
   14000f787:	mov    rcx,QWORD PTR [rax]
   14000f78a:	mov    rax,QWORD PTR [rcx]
   14000f78d:	call   QWORD PTR [rax+0x8]
   14000f790:	mov    QWORD PTR [rax+0x8],rsi
   14000f794:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f799:	mov    QWORD PTR [rax],rdi
   14000f79c:	mov    QWORD PTR [rbx+0x8],rax
   14000f7a0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7a5:	add    rsp,0x20
   14000f7a9:	pop    rdi
   14000f7aa:	ret    
   14000f7ab:	int3   
   14000f7ac:	int3   
   14000f7ad:	int3   
   14000f7ae:	int3   
   14000f7af:	int3   
   14000f7b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f7b5:	push   rdi
   14000f7b6:	sub    rsp,0x20
   14000f7ba:	mov    rbx,rdx
   14000f7bd:	mov    rdi,rcx
   14000f7c0:	or     rax,0xffffffffffffffff
   14000f7c4:	inc    rax
   14000f7c7:	cmp    BYTE PTR [rdx+rax*1],0x0
   14000f7cb:	jne    0x14000f7c4
   14000f7cd:	cmp    eax,0x7
   14000f7d0:	jg     0x14000f7f7
   14000f7d2:	mov    dl,0xa
   14000f7d4:	call   0x14000faa0
   14000f7d9:	lea    rcx,[rdi+0x8]
   14000f7dd:	mov    r8d,0x8
   14000f7e3:	mov    rdx,rbx
   14000f7e6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7eb:	add    rsp,0x20
   14000f7ef:	pop    rdi
   14000f7f0:	rex.W jmp QWORD PTR [rip+0x22d61]        # 0x140032558
   14000f7f7:	mov    dl,0xb
   14000f7f9:	call   0x14000faa0
   14000f7fe:	mov    QWORD PTR [rdi+0x8],rbx
   14000f802:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f807:	add    rsp,0x20
   14000f80b:	pop    rdi
   14000f80c:	ret    
   14000f80d:	int3   
   14000f80e:	int3   
   14000f80f:	int3   
   14000f810:	mov    QWORD PTR [rsp+0x8],rbx
   14000f815:	mov    r9,QWORD PTR [rcx]
   14000f818:	mov    rbx,rcx
   14000f81b:	mov    r8,r9
   14000f81e:	and    r8d,0x1e
   14000f822:	lea    rax,[r8-0x14]
   14000f826:	test   rax,0xfffffffffffffff9
   14000f82c:	jne    0x14000f834
   14000f82e:	cmp    r8,0x1a
   14000f832:	jne    0x14000f879
   14000f834:	shr    r9b,1
   14000f837:	and    r9b,0xf
   14000f83b:	cmp    r9b,0x9
   14000f83f:	jne    0x14000f879
   14000f841:	xor    r10d,r10d
   14000f844:	cmp    r9b,r9b
   14000f847:	jne    0x14000f84f
   14000f849:	mov    rax,QWORD PTR [rcx+0x8]
   14000f84d:	jmp    0x14000f852
   14000f84f:	mov    rax,r10
   14000f852:	movsxd rcx,DWORD PTR [rax]
   14000f855:	mov    r8d,r10d
   14000f858:	test   ecx,ecx
   14000f85a:	jle    0x14000f879
   14000f85c:	mov    rax,QWORD PTR [rax+0x8]
   14000f860:	mov    r11,rcx
   14000f863:	mov    rcx,r10
   14000f866:	cmp    edx,DWORD PTR [rax]
   14000f868:	je     0x14000f881
   14000f86a:	inc    r8d
   14000f86d:	inc    rcx
   14000f870:	add    rax,0x4
   14000f874:	cmp    rcx,r11
   14000f877:	jl     0x14000f866
   14000f879:	xor    eax,eax
   14000f87b:	mov    rbx,QWORD PTR [rsp+0x8]
   14000f880:	ret    
   14000f881:	cmp    r8d,0xffffffff
   14000f885:	je     0x14000f879
   14000f887:	cmp    r9b,0x9
   14000f88b:	jne    0x14000f891
   14000f88d:	mov    r10,QWORD PTR [rbx+0x8]
   14000f891:	mov    rax,QWORD PTR [r10+0x98]
   14000f898:	mov    rbx,QWORD PTR [rsp+0x8]
   14000f89d:	movsxd rcx,r8d
   14000f8a0:	mov    rax,QWORD PTR [rax+rcx*8]
   14000f8a4:	ret    
   14000f8a5:	int3   
   14000f8a6:	int3   
   14000f8a7:	int3   
   14000f8a8:	int3   
   14000f8a9:	int3   
   14000f8aa:	int3   
   14000f8ab:	int3   
   14000f8ac:	int3   
   14000f8ad:	int3   
   14000f8ae:	int3   
   14000f8af:	int3   
   14000f8b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f8b5:	mov    QWORD PTR [rsp+0x10],rbp
   14000f8ba:	mov    QWORD PTR [rsp+0x20],rsi
   14000f8bf:	mov    DWORD PTR [rsp+0x18],r8d
   14000f8c4:	push   rdi
   14000f8c5:	sub    rsp,0x30
   14000f8c9:	mov    rdi,rcx
   14000f8cc:	mov    ebx,r8d
   14000f8cf:	mov    r8,QWORD PTR [rcx]
   14000f8d2:	mov    rbp,rdx
   14000f8d5:	mov    rcx,r8
   14000f8d8:	and    ecx,0x1e
   14000f8db:	lea    rax,[rcx-0x14]
   14000f8df:	test   rax,0xfffffffffffffff9
   14000f8e5:	jne    0x14000f8ed
   14000f8e7:	cmp    rcx,0x1a
   14000f8eb:	jne    0x14000f8fa
   14000f8ed:	shr    r8b,1
   14000f8f0:	and    r8b,0xf
   14000f8f4:	cmp    r8b,0x9
   14000f8f8:	je     0x14000f908
   14000f8fa:	mov    dl,0x9
   14000f8fc:	mov    rcx,rdi
   14000f8ff:	call   0x14000faa0
   14000f904:	mov    ebx,DWORD PTR [rsp+0x50]
   14000f908:	xor    esi,esi
   14000f90a:	test   ebx,ebx
   14000f90c:	jne    0x14000f947
   14000f90e:	mov    ebx,esi
   14000f910:	test   rbp,rbp
   14000f913:	je     0x14000f943
   14000f915:	cmp    BYTE PTR [rbp+0x0],bl
   14000f918:	je     0x14000f943
   14000f91a:	mov    edx,0x31415926
   14000f91f:	mov    rcx,rbp
   14000f922:	call   0x140022790
   14000f927:	cmp    BYTE PTR [rip+0x3893a],sil        # 0x140048268
   14000f92e:	mov    ebx,eax
   14000f930:	je     0x14000f943
   14000f932:	mov    r9b,0x1
   14000f935:	xor    r8d,r8d
   14000f938:	mov    rdx,rbp
   14000f93b:	mov    ecx,eax
   14000f93d:	call   QWORD PTR [rip+0x22c7d]        # 0x1400325c0
   14000f943:	mov    DWORD PTR [rsp+0x50],ebx
   14000f947:	mov    rcx,QWORD PTR [rdi]
   14000f94a:	mov    rdx,rcx
   14000f94d:	and    edx,0x1e
   14000f950:	lea    rax,[rdx-0x14]
   14000f954:	test   rax,0xfffffffffffffff9
   14000f95a:	jne    0x14000f962
   14000f95c:	cmp    rdx,0x1a
   14000f960:	jne    0x14000f972
   14000f962:	shr    cl,1
   14000f964:	and    cl,0xf
   14000f967:	cmp    cl,0x9
   14000f96a:	jne    0x14000f972
   14000f96c:	mov    rcx,QWORD PTR [rdi+0x8]
   14000f970:	jmp    0x14000f975
   14000f972:	mov    rcx,rsi
   14000f975:	mov    r9,rbp
   14000f978:	mov    BYTE PTR [rsp+0x20],0x1
   14000f97d:	mov    r8d,ebx
   14000f980:	mov    rdx,rdi
   14000f983:	call   0x14000e3a0
   14000f988:	mov    rdx,QWORD PTR [rdi]
   14000f98b:	mov    r8,rdx
   14000f98e:	and    r8d,0x1e
   14000f992:	lea    rcx,[r8-0x14]
   14000f996:	test   rcx,0xfffffffffffffff9
   14000f99d:	jne    0x14000f9a5
   14000f99f:	cmp    r8,0x1a
   14000f9a3:	jne    0x14000f9b3
   14000f9a5:	shr    dl,1
   14000f9a7:	and    dl,0xf
   14000f9aa:	cmp    dl,0x9
   14000f9ad:	jne    0x14000f9b3
   14000f9af:	mov    rsi,QWORD PTR [rdi+0x8]
   14000f9b3:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f9b8:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f9bd:	movsxd rcx,eax
   14000f9c0:	mov    rax,QWORD PTR [rsi+0x98]
   14000f9c7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f9cc:	mov    rax,QWORD PTR [rax+rcx*8]
   14000f9d0:	add    rsp,0x30
   14000f9d4:	pop    rdi
   14000f9d5:	ret    
   14000f9d6:	int3   
   14000f9d7:	int3   
   14000f9d8:	int3   
   14000f9d9:	int3   
   14000f9da:	int3   
   14000f9db:	int3   
   14000f9dc:	int3   
   14000f9dd:	int3   
   14000f9de:	int3   
   14000f9df:	int3   
   14000f9e0:	rex push rbx
   14000f9e2:	sub    rsp,0x20
   14000f9e6:	mov    eax,DWORD PTR [rcx]
   14000f9e8:	mov    rbx,rcx
   14000f9eb:	shr    rax,1
   14000f9ee:	and    eax,0xf
   14000f9f1:	sub    rax,0x6
   14000f9f5:	je     0x14000fa72
   14000f9f7:	sub    rax,0x1
   14000f9fb:	je     0x14000fa0f
   14000f9fd:	sub    rax,0x1
   14000fa01:	je     0x14000fa5b
   14000fa03:	sub    rax,0x1
   14000fa07:	je     0x14000fa1a
   14000fa09:	cmp    rax,0x3
   14000fa0d:	jne    0x14000fa8e
   14000fa0f:	mov    rdx,QWORD PTR [rcx+0x8]
   14000fa13:	test   rdx,rdx
   14000fa16:	je     0x14000fa86
   14000fa18:	jmp    0x14000fa76
   14000fa1a:	mov    QWORD PTR [rsp+0x30],rdi
   14000fa1f:	mov    rdi,QWORD PTR [rcx+0x8]
   14000fa23:	test   rdi,rdi
   14000fa26:	je     0x14000fa48
   14000fa28:	mov    rdx,rbx
   14000fa2b:	mov    rcx,rdi
   14000fa2e:	call   0x14000e5e0
   14000fa33:	mov    rcx,rdi
   14000fa36:	call   0x14000c880
   14000fa3b:	mov    edx,0x108
   14000fa40:	mov    rcx,rdi
   14000fa43:	call   0x14002639c
   14000fa48:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fa4d:	mov    QWORD PTR [rbx+0x8],0x0
   14000fa55:	add    rsp,0x20
   14000fa59:	pop    rbx
   14000fa5a:	ret    
   14000fa5b:	mov    rdx,QWORD PTR [rcx+0x8]
   14000fa5f:	call   0x14000e6b0
   14000fa64:	mov    QWORD PTR [rbx+0x8],0x0
   14000fa6c:	add    rsp,0x20
   14000fa70:	pop    rbx
   14000fa71:	ret    
   14000fa72:	mov    rdx,QWORD PTR [rbx+0x8]
   14000fa76:	mov    rax,QWORD PTR [rip+0x22913]        # 0x140032390
   14000fa7d:	mov    rcx,QWORD PTR [rax]
   14000fa80:	mov    rax,QWORD PTR [rcx]
   14000fa83:	call   QWORD PTR [rax+0x28]
   14000fa86:	mov    QWORD PTR [rbx+0x8],0x0
   14000fa8e:	add    rsp,0x20
   14000fa92:	pop    rbx
   14000fa93:	ret    
   14000fa94:	int3   
   14000fa95:	int3   
   14000fa96:	int3   
   14000fa97:	int3   
   14000fa98:	int3   
   14000fa99:	int3   
   14000fa9a:	int3   
   14000fa9b:	int3   
   14000fa9c:	int3   
   14000fa9d:	int3   
   14000fa9e:	int3   
   14000fa9f:	int3   
   14000faa0:	mov    QWORD PTR [rsp+0x10],rbx
   14000faa5:	push   rsi
   14000faa6:	sub    rsp,0x20
   14000faaa:	mov    rbx,rcx
   14000faad:	movzx  esi,dl
   14000fab0:	mov    rcx,QWORD PTR [rcx]
   14000fab3:	movzx  eax,cl
   14000fab6:	shr    al,1
   14000fab8:	and    al,0xf
   14000faba:	cmp    dl,al
   14000fabc:	jne    0x14000faee
   14000fabe:	and    cl,0x1e
   14000fac1:	cmp    cl,0x12
   14000fac4:	jne    0x14000fadc
   14000fac6:	mov    rcx,QWORD PTR [rbx+0x8]
   14000faca:	mov    rdx,rbx
   14000facd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fad2:	add    rsp,0x20
   14000fad6:	pop    rsi
   14000fad7:	jmp    0x14000d5b0
   14000fadc:	mov    rcx,rbx
   14000fadf:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fae4:	add    rsp,0x20
   14000fae8:	pop    rsi
   14000fae9:	jmp    0x14000f9e0
   14000faee:	mov    rcx,rbx
   14000faf1:	mov    QWORD PTR [rsp+0x30],rdi
   14000faf6:	call   0x14000f9e0
   14000fafb:	and    QWORD PTR [rbx],0xffffffffffffffe1
   14000faff:	xor    edi,edi
   14000fb01:	movzx  eax,sil
   14000fb05:	and    eax,0xf
   14000fb08:	mov    QWORD PTR [rbx+0x8],rdi
   14000fb0c:	add    rax,rax
   14000fb0f:	or     QWORD PTR [rbx],rax
   14000fb12:	mov    rax,QWORD PTR [rbx]
   14000fb15:	and    al,0x1e
   14000fb17:	cmp    al,0x12
   14000fb19:	jne    0x14000fb39
   14000fb1b:	mov    ecx,0x108
   14000fb20:	call   0x140007bf0
   14000fb25:	test   rax,rax
   14000fb28:	je     0x14000fb35
   14000fb2a:	mov    rcx,rax
   14000fb2d:	call   0x14000c5e0
   14000fb32:	mov    rdi,rax
   14000fb35:	mov    QWORD PTR [rbx+0x8],rdi
   14000fb39:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fb3e:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fb43:	add    rsp,0x20
   14000fb47:	pop    rsi
   14000fb48:	ret    
   14000fb49:	int3   
   14000fb4a:	int3   
   14000fb4b:	int3   
   14000fb4c:	int3   
   14000fb4d:	int3   
   14000fb4e:	int3   
   14000fb4f:	int3   
   14000fb50:	mov    QWORD PTR [rsp+0x18],rsi
   14000fb55:	mov    QWORD PTR [rsp+0x20],rdi
   14000fb5a:	push   r14
   14000fb5c:	sub    rsp,0x20
   14000fb60:	movsxd rax,DWORD PTR [rcx]
   14000fb63:	movzx  r14d,r8b
   14000fb67:	mov    rdi,rdx
   14000fb6a:	mov    rsi,rcx
   14000fb6d:	test   rdx,rdx
   14000fb70:	je     0x14000fc1a
   14000fb76:	cmp    eax,DWORD PTR [rdx]
   14000fb78:	jne    0x14000fc1a
   14000fb7e:	mov    QWORD PTR [rsp+0x30],rbx
   14000fb83:	mov    QWORD PTR [rsp+0x38],rbp
   14000fb88:	test   eax,eax
   14000fb8a:	jle    0x14000fc16
   14000fb90:	mov    rbp,rax
   14000fb93:	xor    ebx,ebx
   14000fb95:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fba0:	mov    rax,QWORD PTR [rsi+0x8]
   14000fba4:	xor    ecx,ecx
   14000fba6:	movsxd r8,DWORD PTR [rdi]
   14000fba9:	mov    eax,DWORD PTR [rax+rbx*4]
   14000fbac:	test   r8d,r8d
   14000fbaf:	jle    0x14000fbc5
   14000fbb1:	mov    rdx,QWORD PTR [rdi+0x8]
   14000fbb5:	cmp    eax,DWORD PTR [rdx]
   14000fbb7:	je     0x14000fbe2
   14000fbb9:	inc    rcx
   14000fbbc:	add    rdx,0x4
   14000fbc0:	cmp    rcx,r8
   14000fbc3:	jl     0x14000fbb5
   14000fbc5:	xor    al,al
   14000fbc7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fbcc:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fbd1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fbd6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000fbdb:	add    rsp,0x20
   14000fbdf:	pop    r14
   14000fbe1:	ret    
   14000fbe2:	cmp    rcx,0xffffffffffffffff
   14000fbe6:	je     0x14000fbc5
   14000fbe8:	mov    rax,QWORD PTR [rdi+0x98]
   14000fbef:	movzx  r8d,r14b
   14000fbf3:	lea    rdx,[rax+rcx*8]
   14000fbf7:	mov    rax,QWORD PTR [rsi+0x98]
   14000fbfe:	mov    rdx,QWORD PTR [rdx]
   14000fc01:	mov    rcx,QWORD PTR [rax+rbx*8]
   14000fc05:	call   0x14000fc30
   14000fc0a:	test   al,al
   14000fc0c:	je     0x14000fbc5
   14000fc0e:	inc    rbx
   14000fc11:	cmp    rbx,rbp
   14000fc14:	jl     0x14000fba0
   14000fc16:	mov    al,0x1
   14000fc18:	jmp    0x14000fbc7
   14000fc1a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fc1f:	xor    al,al
   14000fc21:	mov    rdi,QWORD PTR [rsp+0x48]
   14000fc26:	add    rsp,0x20
   14000fc2a:	pop    r14
   14000fc2c:	ret    
   14000fc2d:	int3   
   14000fc2e:	int3   
   14000fc2f:	int3   
   14000fc30:	mov    BYTE PTR [rsp+0x18],r8b
   14000fc35:	push   rbp
   14000fc36:	push   rsi
   14000fc37:	push   rdi
   14000fc38:	sub    rsp,0x20
   14000fc3c:	mov    r10,QWORD PTR [rcx]
   14000fc3f:	movzx  edi,r8b
   14000fc43:	mov    r9,r10
   14000fc46:	mov    rsi,rdx
   14000fc49:	and    r9d,0x1e
   14000fc4d:	mov    rbp,rcx
   14000fc50:	cmp    r9,0x14
   14000fc54:	jne    0x14000fc5a
   14000fc56:	mov    al,0x6
   14000fc58:	jmp    0x14000fc76
   14000fc5a:	cmp    r9,0x16
   14000fc5e:	jne    0x14000fc64
   14000fc60:	mov    al,0x6
   14000fc62:	jmp    0x14000fc76
   14000fc64:	cmp    r9,0x18
   14000fc68:	jne    0x14000fc6e
   14000fc6a:	mov    al,0x7
   14000fc6c:	jmp    0x14000fc76
   14000fc6e:	movzx  eax,r10b
   14000fc72:	shr    al,1
   14000fc74:	and    al,0xf
   14000fc76:	mov    rcx,QWORD PTR [rdx]
   14000fc79:	mov    rdx,rcx
   14000fc7c:	and    edx,0x1e
   14000fc7f:	cmp    rdx,0x14
   14000fc83:	jne    0x14000fc8a
   14000fc85:	mov    r8b,0x6
   14000fc88:	jmp    0x14000fcab
   14000fc8a:	cmp    rdx,0x16
   14000fc8e:	jne    0x14000fc95
   14000fc90:	mov    r8b,0x6
   14000fc93:	jmp    0x14000fcab
   14000fc95:	cmp    rdx,0x18
   14000fc99:	jne    0x14000fca0
   14000fc9b:	mov    r8b,0x7
   14000fc9e:	jmp    0x14000fcab
   14000fca0:	movzx  r8d,cl
   14000fca4:	shr    r8b,1
   14000fca7:	and    r8b,0xf
   14000fcab:	cmp    al,r8b
   14000fcae:	je     0x14000fcba
   14000fcb0:	xor    al,al
   14000fcb2:	add    rsp,0x20
   14000fcb6:	pop    rdi
   14000fcb7:	pop    rsi
   14000fcb8:	pop    rbp
   14000fcb9:	ret    
   14000fcba:	mov    rax,rcx
   14000fcbd:	xor    rax,r10
   14000fcc0:	test   rax,0x1fffe0
   14000fcc6:	jne    0x14000fcb0
   14000fcc8:	cmp    rdx,0x14
   14000fccc:	jne    0x14000fcd2
   14000fcce:	mov    cl,0x6
   14000fcd0:	jmp    0x14000fceb
   14000fcd2:	cmp    rdx,0x16
   14000fcd6:	jne    0x14000fcdc
   14000fcd8:	mov    cl,0x6
   14000fcda:	jmp    0x14000fceb
   14000fcdc:	cmp    rdx,0x18
   14000fce0:	jne    0x14000fce6
   14000fce2:	mov    cl,0x7
   14000fce4:	jmp    0x14000fceb
   14000fce6:	shr    cl,1
   14000fce8:	and    cl,0xf
   14000fceb:	movzx  eax,cl
   14000fcee:	dec    eax
   14000fcf0:	mov    QWORD PTR [rsp+0x48],rbx
   14000fcf5:	cmp    eax,0x8
   14000fcf8:	ja     0x14000fec1
   14000fcfe:	lea    r8,[rip+0xffffffffffff02fb]        # 0x140000000
   14000fd05:	cdqe   
   14000fd07:	mov    ecx,DWORD PTR [r8+rax*4+0xfed0]
   14000fd0f:	add    rcx,r8
   14000fd12:	jmp    rcx
   14000fd14:	movzx  eax,BYTE PTR [rsi+0x8]
   14000fd18:	cmp    BYTE PTR [rbp+0x8],al
   14000fd1b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd20:	sete   al
   14000fd23:	add    rsp,0x20
   14000fd27:	pop    rdi
   14000fd28:	pop    rsi
   14000fd29:	pop    rbp
   14000fd2a:	ret    
   14000fd2b:	mov    rax,QWORD PTR [rsi+0x8]
   14000fd2f:	cmp    QWORD PTR [rbp+0x8],rax
   14000fd33:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd38:	sete   al
   14000fd3b:	add    rsp,0x20
   14000fd3f:	pop    rdi
   14000fd40:	pop    rsi
   14000fd41:	pop    rbp
   14000fd42:	ret    
   14000fd43:	movsd  xmm0,QWORD PTR [rbp+0x8]
   14000fd48:	subsd  xmm0,QWORD PTR [rsi+0x8]
   14000fd4d:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd52:	andps  xmm0,XMMWORD PTR [rip+0x26997]        # 0x1400366f0
   14000fd59:	comisd xmm0,QWORD PTR [rip+0x26977]        # 0x1400366d8
   14000fd61:	setbe  al
   14000fd64:	add    rsp,0x20
   14000fd68:	pop    rdi
   14000fd69:	pop    rsi
   14000fd6a:	pop    rbp
   14000fd6b:	ret    
   14000fd6c:	xor    edi,edi
   14000fd6e:	cmp    rdx,0xc
   14000fd72:	je     0x14000fd8b
   14000fd74:	cmp    rdx,0x16
   14000fd78:	je     0x14000fd8b
   14000fd7a:	cmp    rdx,0x14
   14000fd7e:	jne    0x14000fd86
   14000fd80:	add    rsi,0x8
   14000fd84:	jmp    0x14000fd8f
   14000fd86:	mov    rsi,rdi
   14000fd89:	jmp    0x14000fd8f
   14000fd8b:	mov    rsi,QWORD PTR [rsi+0x8]
   14000fd8f:	cmp    r9,0xc
   14000fd93:	je     0x14000fda7
   14000fd95:	cmp    r9,0x16
   14000fd99:	je     0x14000fda7
   14000fd9b:	cmp    r9,0x14
   14000fd9f:	jne    0x14000fdab
   14000fda1:	lea    rdi,[rbp+0x8]
   14000fda5:	jmp    0x14000fdab
   14000fda7:	mov    rdi,QWORD PTR [rbp+0x8]
   14000fdab:	sub    rsi,rdi
   14000fdae:	xchg   ax,ax
   14000fdb0:	movzx  ecx,BYTE PTR [rdi]
   14000fdb3:	movzx  eax,BYTE PTR [rdi+rsi*1]
   14000fdb7:	sub    ecx,eax
   14000fdb9:	jne    0x14000fdc2
   14000fdbb:	inc    rdi
   14000fdbe:	test   eax,eax
   14000fdc0:	jne    0x14000fdb0
   14000fdc2:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fdc7:	test   ecx,ecx
   14000fdc9:	sete   al
   14000fdcc:	add    rsp,0x20
   14000fdd0:	pop    rdi
   14000fdd1:	pop    rsi
   14000fdd2:	pop    rbp
   14000fdd3:	ret    
   14000fdd4:	mov    rcx,rbp
   14000fdd7:	call   0x14000eb10
   14000fddc:	mov    rcx,rsi
   14000fddf:	movsxd rbx,eax
   14000fde2:	call   0x14000eb10
   14000fde7:	cmp    ebx,eax
   14000fde9:	jne    0x14000fec1
   14000fdef:	mov    rcx,rsi
   14000fdf2:	call   0x14000ea40
   14000fdf7:	mov    rcx,rbp
   14000fdfa:	mov    rdi,rax
   14000fdfd:	call   0x14000ea40
   14000fe02:	test   ebx,ebx
   14000fe04:	jns    0x14000fe07
   14000fe06:	int3   
   14000fe07:	mov    r8,rbx
   14000fe0a:	mov    rdx,rdi
   14000fe0d:	mov    rcx,rax
   14000fe10:	call   0x140027960
   14000fe15:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fe1a:	test   eax,eax
   14000fe1c:	sete   al
   14000fe1f:	add    rsp,0x20
   14000fe23:	pop    rdi
   14000fe24:	pop    rsi
   14000fe25:	pop    rbp
   14000fe26:	ret    
   14000fe27:	mov    rcx,rbp
   14000fe2a:	call   0x14000ea00
   14000fe2f:	mov    rcx,rsi
   14000fe32:	mov    DWORD PTR [rsp+0x40],eax
   14000fe36:	mov    ebx,eax
   14000fe38:	call   0x14000ea00
   14000fe3d:	cmp    ebx,eax
   14000fe3f:	jne    0x14000fec1
   14000fe45:	xor    edi,edi
   14000fe47:	test   ebx,ebx
   14000fe49:	jle    0x14000fe84
   14000fe4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000fe50:	mov    edx,edi
   14000fe52:	mov    rcx,rbp
   14000fe55:	call   0x14000e9b0
   14000fe5a:	mov    edx,edi
   14000fe5c:	mov    rcx,rsi
   14000fe5f:	mov    rbx,rax
   14000fe62:	call   0x14000e9b0
   14000fe67:	movzx  r8d,BYTE PTR [rsp+0x50]
   14000fe6d:	mov    rdx,rax
   14000fe70:	mov    rcx,rbx
   14000fe73:	call   0x14000fc30
   14000fe78:	test   al,al
   14000fe7a:	je     0x14000fec1
   14000fe7c:	inc    edi
   14000fe7e:	cmp    edi,DWORD PTR [rsp+0x40]
   14000fe82:	jl     0x14000fe50
   14000fe84:	mov    al,0x1
   14000fe86:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fe8b:	add    rsp,0x20
   14000fe8f:	pop    rdi
   14000fe90:	pop    rsi
   14000fe91:	pop    rbp
   14000fe92:	ret    
   14000fe93:	mov    rcx,rsi
   14000fe96:	call   0x14000f060
   14000fe9b:	mov    rcx,rbp
   14000fe9e:	mov    rbx,rax
   14000fea1:	call   0x14000f060
   14000fea6:	mov    rcx,rax
   14000fea9:	movzx  r8d,dil
   14000fead:	mov    rdx,rbx
   14000feb0:	mov    rbx,QWORD PTR [rsp+0x48]
   14000feb5:	add    rsp,0x20
   14000feb9:	pop    rdi
   14000feba:	pop    rsi
   14000febb:	pop    rbp
   14000febc:	jmp    0x14000fb50
   14000fec1:	xor    al,al
   14000fec3:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fec8:	add    rsp,0x20
   14000fecc:	pop    rdi
   14000fecd:	pop    rsi
   14000fece:	pop    rbp
   14000fecf:	ret    
   14000fed0:	test   dh,bh
   14000fed2:	add    BYTE PTR [rax],al
   14000fed4:	adc    al,0xfd
   14000fed6:	add    BYTE PTR [rax],al
   14000fed8:	sub    edi,ebp
   14000feda:	add    BYTE PTR [rax],al
   14000fedc:	sub    edi,ebp
   14000fede:	add    BYTE PTR [rax],al
   14000fee0:	rex.XB std 
   14000fee2:	add    BYTE PTR [rax],al
   14000fee4:	ins    BYTE PTR es:[rdi],dx
   14000fee5:	std    
   14000fee6:	add    BYTE PTR [rax],al
   14000fee8:	(bad)  
   14000fee9:	std    
   14000feea:	add    BYTE PTR [rax],al
   14000feec:	(bad)  
   14000feed:	inc    BYTE PTR [rax]
   14000feef:	add    BYTE PTR [rbx-0x33ffff02],dl
   14000fef5:	int3   
   14000fef6:	int3   
   14000fef7:	int3   
   14000fef8:	int3   
   14000fef9:	int3   
   14000fefa:	int3   
   14000fefb:	int3   
   14000fefc:	int3   
   14000fefd:	int3   
   14000fefe:	int3   
   14000feff:	int3   
   14000ff00:	cmp    DWORD PTR [rcx],0x0
   14000ff03:	setne  al
   14000ff06:	ret    
   14000ff07:	int3   
   14000ff08:	int3   
   14000ff09:	int3   
   14000ff0a:	int3   
   14000ff0b:	int3   
   14000ff0c:	int3   
   14000ff0d:	int3   
   14000ff0e:	int3   
   14000ff0f:	int3   
   14000ff10:	add    rcx,0x18
   14000ff14:	jmp    0x14000ff20
   14000ff19:	int3   
   14000ff1a:	int3   
   14000ff1b:	int3   
   14000ff1c:	int3   
   14000ff1d:	int3   
   14000ff1e:	int3   
   14000ff1f:	int3   
   14000ff20:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff25:	mov    QWORD PTR [rsp+0x10],rbp
   14000ff2a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ff2f:	push   rdi
   14000ff30:	push   r14
   14000ff32:	push   r15
   14000ff34:	sub    rsp,0x40
   14000ff38:	mov    r14,r9
   14000ff3b:	mov    rsi,r8
   14000ff3e:	mov    rbx,rdx
   14000ff41:	mov    r15,rcx
   14000ff44:	test   rdx,rdx
   14000ff47:	je     0x14000ff58
   14000ff49:	lea    rdx,[rip+0x22850]        # 0x1400327a0
   14000ff50:	mov    rcx,rbx
   14000ff53:	call   0x14001aae0
   14000ff58:	movsxd rax,DWORD PTR [rsi+0x10]
   14000ff5c:	mov    edi,DWORD PTR [rsi+0x20]
   14000ff5f:	mov    rbp,rax
   14000ff62:	add    rbp,QWORD PTR [rsi]
   14000ff65:	sub    edi,eax
   14000ff67:	mov    eax,DWORD PTR [rip+0x265db]        # 0x140036548
   14000ff6d:	movsd  xmm0,QWORD PTR [rip+0x265cb]        # 0x140036540
   14000ff75:	mov    DWORD PTR [rsp+0x38],eax
   14000ff79:	movzx  eax,BYTE PTR [rip+0x265cc]        # 0x14003654c
   14000ff80:	mov    BYTE PTR [rsp+0x3c],al
   14000ff84:	movsxd rax,edi
   14000ff87:	movsd  QWORD PTR [rsp+0x30],xmm0
   14000ff8d:	cmp    edi,0xc
   14000ff90:	jb     0x14000ff97
   14000ff92:	mov    eax,0xc
   14000ff97:	mov    r8d,eax
   14000ff9a:	lea    rdx,[rsp+0x30]
   14000ff9f:	mov    rcx,rbp
   14000ffa2:	call   0x140022670
   14000ffa7:	test   eax,eax
   14000ffa9:	jne    0x14000ffbe
   14000ffab:	mov    r9,r14
   14000ffae:	mov    r8,rsi
   14000ffb1:	mov    rdx,rbx
   14000ffb4:	mov    rcx,r15
   14000ffb7:	call   0x1400170e0
   14000ffbc:	jmp    0x14001001b
   14000ffbe:	mov    edx,edi
   14000ffc0:	mov    rcx,rbp
   14000ffc3:	call   0x1400147f0
   14000ffc8:	test   al,al
   14000ffca:	je     0x14000ffdf
   14000ffcc:	mov    r8,QWORD PTR [rsi]
   14000ffcf:	mov    r9,r14
   14000ffd2:	mov    rdx,rbx
   14000ffd5:	mov    rcx,r15
   14000ffd8:	call   0x140014540
   14000ffdd:	jmp    0x14001001b
   14000ffdf:	mov    edx,edi
   14000ffe1:	mov    rcx,rbp
   14000ffe4:	call   0x140016d00
   14000ffe9:	test   al,al
   14000ffeb:	je     0x140010005
   14000ffed:	xor    r9d,r9d
   14000fff0:	mov    QWORD PTR [rsp+0x20],r14
   14000fff5:	mov    r8,rsi
   14000fff8:	mov    rdx,rbx
   14000fffb:	mov    rcx,r15
   14000fffe:	call   0x1400160a0
   140010003:	jmp    0x14001001b
   140010005:	test   rbx,rbx
   140010008:	je     0x140010019
   14001000a:	lea    rdx,[rip+0x2653f]        # 0x140036550
   140010011:	mov    rcx,rbx
   140010014:	call   0x14001aae0
   140010019:	xor    al,al
   14001001b:	mov    rbx,QWORD PTR [rsp+0x60]
   140010020:	mov    rbp,QWORD PTR [rsp+0x68]
   140010025:	mov    rsi,QWORD PTR [rsp+0x70]
   14001002a:	add    rsp,0x40
   14001002e:	pop    r15
   140010030:	pop    r14
   140010032:	pop    rdi
   140010033:	ret    
   140010034:	int3   
   140010035:	int3   
   140010036:	int3   
   140010037:	int3   
   140010038:	int3   
   140010039:	int3   
   14001003a:	int3   
   14001003b:	int3   
   14001003c:	int3   
   14001003d:	int3   
   14001003e:	int3   
   14001003f:	int3   
   140010040:	mov    QWORD PTR [rsp+0x8],rbx
   140010045:	mov    QWORD PTR [rsp+0x10],rsi
   14001004a:	push   rdi
   14001004b:	sub    rsp,0x20
   14001004f:	xor    esi,esi
   140010051:	mov    rbx,rdx
   140010054:	mov    rdx,QWORD PTR [rdx]
   140010057:	mov    rdi,rcx
   14001005a:	mov    rax,rbx
   14001005d:	movzx  r8d,dl
   140010061:	and    rax,0xfffffffffffffc00
   140010067:	mov    ecx,esi
   140010069:	and    r8b,0x1
   14001006d:	cmove  rcx,rax
   140010071:	test   rcx,rcx
   140010074:	je     0x14001007b
   140010076:	mov    r9,QWORD PTR [rcx]
   140010079:	jmp    0x14001007e
   14001007b:	mov    r9,rsi
   14001007e:	movzx  ecx,BYTE PTR [rdi]
   140010081:	mov    rax,rdi
   140010084:	and    rax,0xfffffffffffffc00
   14001008a:	mov    r8,rsi
   14001008d:	and    cl,0x1
   140010090:	cmove  r8,rax
   140010094:	test   r8,r8
   140010097:	je     0x14001009e
   140010099:	mov    rax,QWORD PTR [r8]
   14001009c:	jmp    0x1400100a1
   14001009e:	mov    rax,rsi
   1400100a1:	cmp    r9,rax
   1400100a4:	jne    0x140010173
   1400100aa:	and    edx,0x1e
   1400100ad:	cmp    rdx,0x12
   1400100b1:	jne    0x1400100ef
   1400100b3:	mov    dl,0x1
   1400100b5:	mov    rcx,rdi
   1400100b8:	call   0x14000faa0
   1400100bd:	mov    rax,QWORD PTR [rdi]
   1400100c0:	and    rax,0xfffffffffffffff3
   1400100c4:	or     rax,0x12
   1400100c8:	mov    QWORD PTR [rdi],rax
   1400100cb:	mov    rax,QWORD PTR [rbx+0x8]
   1400100cf:	mov    QWORD PTR [rdi+0x8],rax
   1400100d3:	and    QWORD PTR [rbx],0xffffffffffffffe3
   1400100d7:	or     QWORD PTR [rbx],0x2
   1400100db:	mov    QWORD PTR [rbx+0x8],rsi
   1400100df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400100e4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400100e9:	add    rsp,0x20
   1400100ed:	pop    rdi
   1400100ee:	ret    
   1400100ef:	cmp    rdx,0x10
   1400100f3:	jne    0x14001011b
   1400100f5:	mov    dl,0x1
   1400100f7:	mov    rcx,rdi
   1400100fa:	call   0x14000faa0
   1400100ff:	mov    rax,QWORD PTR [rdi]
   140010102:	and    rax,0xfffffffffffffff1
   140010106:	or     rax,0x10
   14001010a:	mov    QWORD PTR [rdi],rax
   14001010d:	mov    rax,QWORD PTR [rbx+0x8]
   140010111:	mov    QWORD PTR [rdi+0x8],rax
   140010115:	mov    QWORD PTR [rbx+0x8],rsi
   140010119:	jmp    0x14001017e
   14001011b:	cmp    rdx,0xe
   14001011f:	jne    0x140010147
   140010121:	mov    dl,0x1
   140010123:	mov    rcx,rdi
   140010126:	call   0x14000faa0
   14001012b:	mov    rax,QWORD PTR [rdi]
   14001012e:	and    rax,0xffffffffffffffef
   140010132:	or     rax,0xe
   140010136:	mov    QWORD PTR [rdi],rax
   140010139:	mov    rax,QWORD PTR [rbx+0x8]
   14001013d:	mov    QWORD PTR [rdi+0x8],rax
   140010141:	mov    QWORD PTR [rbx+0x8],rsi
   140010145:	jmp    0x14001017e
   140010147:	cmp    rdx,0x18
   14001014b:	jne    0x140010173
   14001014d:	mov    dl,0x1
   14001014f:	mov    rcx,rdi
   140010152:	call   0x14000faa0
   140010157:	mov    rax,QWORD PTR [rdi]
   14001015a:	and    rax,0xfffffffffffffff9
   14001015e:	or     rax,0x18
   140010162:	mov    QWORD PTR [rdi],rax
   140010165:	mov    rax,QWORD PTR [rbx+0x8]
   140010169:	mov    QWORD PTR [rdi+0x8],rax
   14001016d:	mov    QWORD PTR [rbx+0x8],rsi
   140010171:	jmp    0x14001017e
   140010173:	mov    rdx,rbx
   140010176:	mov    rcx,rdi
   140010179:	call   0x14000d830
   14001017e:	mov    dl,0x1
   140010180:	mov    rcx,rbx
   140010183:	mov    rbx,QWORD PTR [rsp+0x30]
   140010188:	mov    rsi,QWORD PTR [rsp+0x38]
   14001018d:	add    rsp,0x20
   140010191:	pop    rdi
   140010192:	jmp    0x14000faa0
   140010197:	int3   
   140010198:	int3   
   140010199:	int3   
   14001019a:	int3   
   14001019b:	int3   
   14001019c:	int3   
   14001019d:	int3   
   14001019e:	int3   
   14001019f:	int3   
   1400101a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400101a5:	push   rdi
   1400101a6:	sub    rsp,0x50
   1400101aa:	mov    r8,QWORD PTR [rcx+0x28]
   1400101ae:	mov    rdi,rdx
   1400101b1:	mov    rbx,rcx
   1400101b4:	cmp    r8,0xffffffffffffffff
   1400101b8:	jne    0x1400102fd
   1400101be:	mov    rax,QWORD PTR [rcx+0x30]
   1400101c2:	test   rax,rax
   1400101c5:	js     0x1400101e4
   1400101c7:	movsxd rcx,DWORD PTR [rcx+0x10]
   1400101cb:	cmp    rax,rcx
   1400101ce:	jge    0x1400101e4
   1400101d0:	mov    r8,rax
   1400101d3:	add    r8,0x1
   1400101d7:	js     0x1400101de
   1400101d9:	cmp    r8,rcx
   1400101dc:	jl     0x1400101f3
   1400101de:	or     r8,0xffffffffffffffff
   1400101e2:	jmp    0x1400101f3
   1400101e4:	mov    ecx,DWORD PTR [rbx+0x10]
   1400101e7:	xor    r8d,r8d
   1400101ea:	test   ecx,ecx
   1400101ec:	setg   r8b
   1400101f0:	dec    r8
   1400101f3:	test   r8,r8
   1400101f6:	js     0x140010200
   1400101f8:	movsxd rax,ecx
   1400101fb:	cmp    r8,rax
   1400101fe:	jl     0x140010250
   140010200:	lea    rcx,[rbx+0x8]
   140010204:	mov    edx,0x1
   140010209:	call   0x140009810
   14001020e:	mov    rax,QWORD PTR [rbx+0x30]
   140010212:	test   rax,rax
   140010215:	js     0x140010234
   140010217:	movsxd rcx,DWORD PTR [rbx+0x10]
   14001021b:	cmp    rax,rcx
   14001021e:	jge    0x140010234
   140010220:	mov    r8,rax
   140010223:	add    r8,0x1
   140010227:	js     0x14001022e
   140010229:	cmp    r8,rcx
   14001022c:	jl     0x140010243
   14001022e:	or     r8,0xffffffffffffffff
   140010232:	jmp    0x140010243
   140010234:	mov    ecx,DWORD PTR [rbx+0x10]
   140010237:	xor    r8d,r8d
   14001023a:	test   ecx,ecx
   14001023c:	setg   r8b
   140010240:	dec    r8
   140010243:	test   r8,r8
   140010246:	js     0x140010259
   140010248:	movsxd rax,ecx
   14001024b:	cmp    r8,rax
   14001024e:	jge    0x140010259
   140010250:	mov    QWORD PTR [rbx+0x30],r8
   140010254:	jmp    0x14001030e
   140010259:	mov    rax,QWORD PTR [rip+0x22128]        # 0x140032388
   140010260:	mov    edx,0x4
   140010265:	mov    ecx,DWORD PTR [rax]
   140010267:	call   QWORD PTR [rip+0x2223b]        # 0x1400324a8
   14001026d:	test   al,al
   14001026f:	je     0x1400102b8
   140010271:	lea    rax,[rip+0x26418]        # 0x140036690
   140010278:	mov    DWORD PTR [rsp+0x38],0x31f
   140010280:	mov    QWORD PTR [rsp+0x30],rax
   140010285:	lea    r9,[rip+0x262ec]        # 0x140036578
   14001028c:	lea    rax,[rip+0x2630d]        # 0x1400365a0
   140010293:	mov    edx,0x4
   140010298:	mov    QWORD PTR [rsp+0x40],rax
   14001029d:	lea    r8,[rsp+0x30]
   1400102a2:	mov    eax,DWORD PTR [rbx+0x20]
   1400102a5:	mov    DWORD PTR [rsp+0x20],eax
   1400102a9:	mov    rax,QWORD PTR [rip+0x220d8]        # 0x140032388
   1400102b0:	mov    ecx,DWORD PTR [rax]
   1400102b2:	call   QWORD PTR [rip+0x221e0]        # 0x140032498
   1400102b8:	call   QWORD PTR [rip+0x222ca]        # 0x140032588
   1400102be:	test   al,al
   1400102c0:	je     0x1400102f1
   1400102c2:	call   QWORD PTR [rip+0x221b8]        # 0x140032480
   1400102c8:	lea    rdx,[rip+0x224dd]        # 0x1400327ac
   1400102cf:	xorps  xmm0,xmm0
   1400102d2:	mov    r8b,0x1
   1400102d5:	mov    DWORD PTR [rsp+0x38],eax
   1400102d9:	mov    QWORD PTR [rsp+0x30],rdx
   1400102de:	xor    ecx,ecx
   1400102e0:	lea    rdx,[rsp+0x30]
   1400102e5:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   1400102eb:	call   QWORD PTR [rip+0x22187]        # 0x140032478
   1400102f1:	mov    ecx,0x1
   1400102f6:	call   QWORD PTR [rip+0x21f4c]        # 0x140032248
   1400102fc:	int3   
   1400102fd:	mov    rax,QWORD PTR [rbx+0x8]
   140010301:	lea    rcx,[r8+r8*4]
   140010305:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14001030a:	mov    QWORD PTR [rbx+0x28],rcx
   14001030e:	test   rdi,rdi
   140010311:	je     0x14001032e
   140010313:	mov    rcx,QWORD PTR [rbx+0x8]
   140010317:	lea    rax,[r8+0x1]
   14001031b:	lea    rax,[r8+rax*4]
   14001031f:	lea    rax,[rcx+rax*8]
   140010323:	test   rax,rax
   140010326:	je     0x14001032e
   140010328:	mov    rcx,QWORD PTR [rdi]
   14001032b:	mov    QWORD PTR [rax],rcx
   14001032e:	mov    rcx,QWORD PTR [rbx+0x8]
   140010332:	mov    rax,r8
   140010335:	mov    QWORD PTR [rbx+0x38],rcx
   140010339:	mov    rbx,QWORD PTR [rsp+0x60]
   14001033e:	add    rsp,0x50
   140010342:	pop    rdi
   140010343:	ret    
   140010344:	int3   
   140010345:	int3   
   140010346:	int3   
   140010347:	int3   
   140010348:	int3   
   140010349:	int3   
   14001034a:	int3   
   14001034b:	int3   
   14001034c:	int3   
   14001034d:	int3   
   14001034e:	int3   
   14001034f:	int3   
   140010350:	mov    QWORD PTR [rsp+0x18],rbx
   140010355:	push   rdi
   140010356:	sub    rsp,0x50
   14001035a:	test   rdx,rdx
   14001035d:	lea    rbx,[rip+0x2243c]        # 0x1400327a0
   140010364:	mov    rdi,rcx
   140010367:	cmovne rbx,rdx
   14001036b:	mov    rdx,QWORD PTR [rcx]
   14001036e:	mov    rcx,rdx
   140010371:	and    ecx,0x1e
   140010374:	lea    rax,[rcx-0x14]
   140010378:	test   rax,0xfffffffffffffff9
   14001037e:	jne    0x140010386
   140010380:	cmp    rcx,0x1a
   140010384:	jne    0x140010395
   140010386:	movzx  eax,dl
   140010389:	shr    al,1
   14001038b:	and    al,0xf
   14001038d:	cmp    al,0x1
   14001038f:	je     0x1400105fa
   140010395:	lea    rax,[rcx-0x14]
   140010399:	test   rax,0xfffffffffffffff9
   14001039f:	jne    0x1400103ab
   1400103a1:	cmp    rcx,0x1a
   1400103a5:	jne    0x14001046d
   1400103ab:	movzx  eax,dl
   1400103ae:	shr    al,1
   1400103b0:	and    al,0xf
   1400103b2:	cmp    al,0x8
   1400103b4:	jne    0x14001046d
   1400103ba:	mov    QWORD PTR [rsp+0x60],rbp
   1400103bf:	lea    r8,[rip+0x22b1e]        # 0x140032ee4
   1400103c6:	mov    rdx,rbx
   1400103c9:	mov    QWORD PTR [rsp+0x68],rsi
   1400103ce:	lea    rcx,[rsp+0x20]
   1400103d3:	call   0x1400229e0
   1400103d8:	mov    rbx,QWORD PTR [rsp+0x20]
   1400103dd:	mov    rcx,rdi
   1400103e0:	mov    edx,ebx
   1400103e2:	call   0x140011400
   1400103e7:	movsxd rbp,ebx
   1400103ea:	xor    esi,esi
   1400103ec:	xor    ebx,ebx
   1400103ee:	test   rbp,rbp
   1400103f1:	jle    0x14001044e
   1400103f3:	mov    rcx,QWORD PTR [rdi]
   1400103f6:	mov    rdx,rcx
   1400103f9:	and    edx,0x1e
   1400103fc:	lea    rax,[rdx-0x14]
   140010400:	test   rax,0xfffffffffffffff9
   140010406:	jne    0x14001040e
   140010408:	cmp    rdx,0x1a
   14001040c:	jne    0x140010434
   14001040e:	shr    cl,1
   140010410:	and    cl,0xf
   140010413:	cmp    cl,0x8
   140010416:	jne    0x140010434
   140010418:	mov    rcx,QWORD PTR [rdi+0x8]
   14001041c:	test   rcx,rcx
   14001041f:	je     0x140010434
   140010421:	test   esi,esi
   140010423:	js     0x140010434
   140010425:	movsxd rax,esi
   140010428:	cmp    rax,QWORD PTR [rcx]
   14001042b:	jge    0x140010434
   14001042d:	mov    rcx,QWORD PTR [rcx+rbx*8+0x8]
   140010432:	jmp    0x140010436
   140010434:	xor    ecx,ecx
   140010436:	mov    rdx,QWORD PTR [rsp+0x28]
   14001043b:	mov    rdx,QWORD PTR [rdx+rbx*8]
   14001043f:	call   0x140010350
   140010444:	inc    esi
   140010446:	inc    rbx
   140010449:	cmp    rbx,rbp
   14001044c:	jl     0x1400103f3
   14001044e:	lea    rcx,[rsp+0x20]
   140010453:	call   0x140022a10
   140010458:	mov    rsi,QWORD PTR [rsp+0x68]
   14001045d:	mov    rbp,QWORD PTR [rsp+0x60]
   140010462:	mov    rbx,QWORD PTR [rsp+0x70]
   140010467:	add    rsp,0x50
   14001046b:	pop    rdi
   14001046c:	ret    
   14001046d:	lea    rax,[rcx-0x14]
   140010471:	test   rax,0xfffffffffffffff9
   140010477:	jne    0x14001047f
   140010479:	cmp    rcx,0x1a
   14001047d:	jne    0x140010495
   14001047f:	movzx  eax,dl
   140010482:	shr    al,1
   140010484:	and    al,0xf
   140010486:	cmp    al,0x3
   140010488:	jne    0x140010495
   14001048a:	mov    rcx,rbx
   14001048d:	call   QWORD PTR [rip+0x21dfd]        # 0x140032290
   140010493:	jmp    0x1400104bb
   140010495:	lea    rax,[rcx-0x14]
   140010499:	test   rax,0xfffffffffffffff9
   14001049f:	jne    0x1400104a7
   1400104a1:	cmp    rcx,0x1a
   1400104a5:	jne    0x1400104d7
   1400104a7:	movzx  eax,dl
   1400104aa:	shr    al,1
   1400104ac:	and    al,0xf
   1400104ae:	cmp    al,0x4
   1400104b0:	jne    0x1400104d7
   1400104b2:	mov    rcx,rbx
   1400104b5:	call   QWORD PTR [rip+0x21dcd]        # 0x140032288
   1400104bb:	mov    dl,0x3
   1400104bd:	mov    rcx,rdi
   1400104c0:	mov    rbx,rax
   1400104c3:	call   0x14000faa0
   1400104c8:	mov    QWORD PTR [rdi+0x8],rbx
   1400104cc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400104d1:	add    rsp,0x50
   1400104d5:	pop    rdi
   1400104d6:	ret    
   1400104d7:	lea    rax,[rcx-0x14]
   1400104db:	test   rax,0xfffffffffffffff9
   1400104e1:	jne    0x1400104e9
   1400104e3:	cmp    rcx,0x1a
   1400104e7:	jne    0x140010523
   1400104e9:	shr    dl,1
   1400104eb:	and    dl,0xf
   1400104ee:	cmp    dl,0x5
   1400104f1:	jne    0x140010523
   1400104f3:	mov    rcx,rbx
   1400104f6:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400104fb:	call   QWORD PTR [rip+0x21d7f]        # 0x140032280
   140010501:	mov    dl,0x5
   140010503:	mov    rcx,rdi
   140010506:	movaps xmm6,xmm0
   140010509:	call   0x14000faa0
   14001050e:	movsd  QWORD PTR [rdi+0x8],xmm6
   140010513:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140010518:	mov    rbx,QWORD PTR [rsp+0x70]
   14001051d:	add    rsp,0x50
   140010521:	pop    rdi
   140010522:	ret    
   140010523:	mov    rcx,rdi
   140010526:	call   0x14000f090
   14001052b:	mov    rcx,rdi
   14001052e:	cmp    al,0x6
   140010530:	jne    0x140010544
   140010532:	mov    rdx,rbx
   140010535:	mov    rbx,QWORD PTR [rsp+0x70]
   14001053a:	add    rsp,0x50
   14001053e:	pop    rdi
   14001053f:	jmp    0x1400116c0
   140010544:	call   0x14000f090
   140010549:	cmp    al,0x7
   14001054b:	jne    0x140010575
   14001054d:	or     rax,0xffffffffffffffff
   140010551:	cmp    BYTE PTR [rbx+rax*1+0x1],0x0
   140010556:	lea    rax,[rax+0x1]
   14001055a:	jne    0x140010551
   14001055c:	lea    r8d,[rax+0x1]
   140010560:	mov    rdx,rbx
   140010563:	mov    rcx,rdi
   140010566:	mov    rbx,QWORD PTR [rsp+0x70]
   14001056b:	add    rsp,0x50
   14001056f:	pop    rdi
   140010570:	jmp    0x140011790
   140010575:	mov    rcx,rdi
   140010578:	call   0x14000f090
   14001057d:	cmp    al,0x2
   14001057f:	jne    0x1400105fa
   140010585:	lea    rdx,[rip+0x25e80]        # 0x14003640c
   14001058c:	mov    rcx,rbx
   14001058f:	call   QWORD PTR [rip+0x21fcb]        # 0x140032560
   140010595:	test   eax,eax
   140010597:	jne    0x1400105b2
   140010599:	mov    dl,0x2
   14001059b:	mov    rcx,rdi
   14001059e:	call   0x14000faa0
   1400105a3:	mov    BYTE PTR [rdi+0x8],0x1
   1400105a7:	mov    rbx,QWORD PTR [rsp+0x70]
   1400105ac:	add    rsp,0x50
   1400105b0:	pop    rdi
   1400105b1:	ret    
   1400105b2:	lea    rdx,[rip+0x25e5b]        # 0x140036414
   1400105b9:	mov    rcx,rbx
   1400105bc:	call   QWORD PTR [rip+0x21f9e]        # 0x140032560
   1400105c2:	test   eax,eax
   1400105c4:	jne    0x1400105df
   1400105c6:	mov    dl,0x2
   1400105c8:	mov    rcx,rdi
   1400105cb:	call   0x14000faa0
   1400105d0:	mov    BYTE PTR [rdi+0x8],0x0
   1400105d4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400105d9:	add    rsp,0x50
   1400105dd:	pop    rdi
   1400105de:	ret    
   1400105df:	mov    rcx,rbx
   1400105e2:	call   QWORD PTR [rip+0x21cb0]        # 0x140032298
   1400105e8:	mov    dl,0x2
   1400105ea:	mov    rcx,rdi
   1400105ed:	test   eax,eax
   1400105ef:	setne  bl
   1400105f2:	call   0x14000faa0
   1400105f7:	mov    BYTE PTR [rdi+0x8],bl
   1400105fa:	mov    rbx,QWORD PTR [rsp+0x70]
   1400105ff:	add    rsp,0x50
   140010603:	pop    rdi
   140010604:	ret    
   140010605:	int3   
   140010606:	int3   
   140010607:	int3   
   140010608:	int3   
   140010609:	int3   
   14001060a:	int3   
   14001060b:	int3   
   14001060c:	int3   
   14001060d:	int3   
   14001060e:	int3   
   14001060f:	int3   
   140010610:	mov    QWORD PTR [rsp+0x10],rbx
   140010615:	mov    QWORD PTR [rsp+0x18],rbp
   14001061a:	push   rdi
   14001061b:	sub    rsp,0x20
   14001061f:	mov    ebp,r8d
   140010622:	mov    rdi,rdx
   140010625:	mov    rbx,rcx
   140010628:	cmp    r9d,r8d
   14001062b:	jg     0x14001069a
   14001062d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140010631:	jg     0x14001068a
   140010633:	mov    rdx,QWORD PTR [rcx]
   140010636:	mov    QWORD PTR [rsp+0x30],rsi
   14001063b:	mov    esi,DWORD PTR [rcx+0xc]
   14001063e:	and    esi,0xc0000000
   140010644:	cmp    rdx,rdi
   140010647:	je     0x140010685
   140010649:	test   rdx,rdx
   14001064c:	je     0x140010670
   14001064e:	movsxd r8,r9d
   140010651:	mov    rcx,rdi
   140010654:	call   0x140026f70
   140010659:	test   esi,esi
   14001065b:	jne    0x140010670
   14001065d:	mov    rax,QWORD PTR [rip+0x21d2c]        # 0x140032390
   140010664:	mov    rdx,QWORD PTR [rbx]
   140010667:	mov    rcx,QWORD PTR [rax]
   14001066a:	mov    rax,QWORD PTR [rcx]
   14001066d:	call   QWORD PTR [rax+0x28]
   140010670:	mov    eax,DWORD PTR [rbx+0xc]
   140010673:	and    eax,0x3fffffff
   140010678:	mov    QWORD PTR [rbx],rdi
   14001067b:	bts    eax,0x1f
   14001067f:	mov    DWORD PTR [rbx+0x8],ebp
   140010682:	mov    DWORD PTR [rbx+0xc],eax
   140010685:	mov    rsi,QWORD PTR [rsp+0x30]
   14001068a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001068f:	mov    rbp,QWORD PTR [rsp+0x40]
   140010694:	add    rsp,0x20
   140010698:	pop    rdi
   140010699:	ret    
   14001069a:	mov    eax,DWORD PTR [rcx+0x8]
   14001069d:	cmp    r9d,eax
   1400106a0:	jg     0x14001068a
   1400106a2:	test   r9d,r9d
   1400106a5:	jne    0x1400106e0
   1400106a7:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400106ae:	jne    0x14001068a
   1400106b0:	mov    rdx,QWORD PTR [rcx]
   1400106b3:	xor    edi,edi
   1400106b5:	test   rdx,rdx
   1400106b8:	je     0x1400106cd
   1400106ba:	mov    rax,QWORD PTR [rip+0x21ccf]        # 0x140032390
   1400106c1:	mov    rcx,QWORD PTR [rax]
   1400106c4:	mov    rax,QWORD PTR [rcx]
   1400106c7:	call   QWORD PTR [rax+0x28]
   1400106ca:	mov    QWORD PTR [rbx],rdi
   1400106cd:	mov    DWORD PTR [rbx+0x8],edi
   1400106d0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400106d5:	mov    rbp,QWORD PTR [rsp+0x40]
   1400106da:	add    rsp,0x20
   1400106de:	pop    rdi
   1400106df:	ret    
   1400106e0:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400106e7:	jne    0x14001068a
   1400106e9:	cmp    r9d,eax
   1400106ec:	je     0x14001068a
   1400106ee:	mov    rdx,QWORD PTR [rcx]
   1400106f1:	test   rdx,rdx
   1400106f4:	je     0x14001068a
   1400106f6:	mov    DWORD PTR [rcx+0x8],r9d
   1400106fa:	mov    rax,QWORD PTR [rip+0x21c8f]        # 0x140032390
   140010701:	movsxd r8,r9d
   140010704:	mov    rcx,QWORD PTR [rax]
   140010707:	mov    rax,QWORD PTR [rcx]
   14001070a:	call   QWORD PTR [rax+0x18]
   14001070d:	mov    rbp,QWORD PTR [rsp+0x40]
   140010712:	mov    QWORD PTR [rbx],rax
   140010715:	mov    rbx,QWORD PTR [rsp+0x38]
   14001071a:	add    rsp,0x20
   14001071e:	pop    rdi
   14001071f:	ret    
   140010720:	mov    QWORD PTR [rsp+0x10],rbx
   140010725:	mov    QWORD PTR [rsp+0x18],rbp
   14001072a:	push   rdi
   14001072b:	sub    rsp,0x20
   14001072f:	mov    ebp,r8d
   140010732:	mov    rdi,rdx
   140010735:	mov    rbx,rcx
   140010738:	cmp    r9d,r8d
   14001073b:	jg     0x1400107ae
   14001073d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140010741:	jg     0x14001079e
   140010743:	mov    rdx,QWORD PTR [rcx]
   140010746:	mov    QWORD PTR [rsp+0x30],rsi
   14001074b:	mov    esi,DWORD PTR [rcx+0xc]
   14001074e:	and    esi,0xc0000000
   140010754:	cmp    rdx,rdi
   140010757:	je     0x140010799
   140010759:	test   rdx,rdx
   14001075c:	je     0x140010784
   14001075e:	movsxd r8,r9d
   140010761:	mov    rcx,rdi
   140010764:	shl    r8,0x3
   140010768:	call   0x140026f70
   14001076d:	test   esi,esi
   14001076f:	jne    0x140010784
   140010771:	mov    rax,QWORD PTR [rip+0x21c18]        # 0x140032390
   140010778:	mov    rdx,QWORD PTR [rbx]
   14001077b:	mov    rcx,QWORD PTR [rax]
   14001077e:	mov    rax,QWORD PTR [rcx]
   140010781:	call   QWORD PTR [rax+0x28]
   140010784:	mov    eax,DWORD PTR [rbx+0xc]
   140010787:	and    eax,0x3fffffff
   14001078c:	mov    QWORD PTR [rbx],rdi
   14001078f:	bts    eax,0x1f
   140010793:	mov    DWORD PTR [rbx+0x8],ebp
   140010796:	mov    DWORD PTR [rbx+0xc],eax
   140010799:	mov    rsi,QWORD PTR [rsp+0x30]
   14001079e:	mov    rbx,QWORD PTR [rsp+0x38]
   1400107a3:	mov    rbp,QWORD PTR [rsp+0x40]
   1400107a8:	add    rsp,0x20
   1400107ac:	pop    rdi
   1400107ad:	ret    
   1400107ae:	mov    eax,DWORD PTR [rcx+0x8]
   1400107b1:	cmp    r9d,eax
   1400107b4:	jg     0x14001079e
   1400107b6:	test   r9d,r9d
   1400107b9:	jne    0x1400107f4
   1400107bb:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400107c2:	jne    0x14001079e
   1400107c4:	mov    rdx,QWORD PTR [rcx]
   1400107c7:	xor    edi,edi
   1400107c9:	test   rdx,rdx
   1400107cc:	je     0x1400107e1
   1400107ce:	mov    rax,QWORD PTR [rip+0x21bbb]        # 0x140032390
   1400107d5:	mov    rcx,QWORD PTR [rax]
   1400107d8:	mov    rax,QWORD PTR [rcx]
   1400107db:	call   QWORD PTR [rax+0x28]
   1400107de:	mov    QWORD PTR [rbx],rdi
   1400107e1:	mov    DWORD PTR [rbx+0x8],edi
   1400107e4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400107e9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400107ee:	add    rsp,0x20
   1400107f2:	pop    rdi
   1400107f3:	ret    
   1400107f4:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400107fb:	jne    0x14001079e
   1400107fd:	cmp    r9d,eax
   140010800:	je     0x14001079e
   140010802:	mov    rdx,QWORD PTR [rcx]
   140010805:	test   rdx,rdx
   140010808:	je     0x14001079e
   14001080a:	mov    DWORD PTR [rcx+0x8],r9d
   14001080e:	mov    rax,QWORD PTR [rip+0x21b7b]        # 0x140032390
   140010815:	movsxd r8,r9d
   140010818:	shl    r8,0x3
   14001081c:	mov    rcx,QWORD PTR [rax]
   14001081f:	mov    rax,QWORD PTR [rcx]
   140010822:	call   QWORD PTR [rax+0x18]
   140010825:	mov    rbp,QWORD PTR [rsp+0x40]
   14001082a:	mov    QWORD PTR [rbx],rax
   14001082d:	mov    rbx,QWORD PTR [rsp+0x38]
   140010832:	add    rsp,0x20
   140010836:	pop    rdi
   140010837:	ret    
   140010838:	int3   
   140010839:	int3   
   14001083a:	int3   
   14001083b:	int3   
   14001083c:	int3   
   14001083d:	int3   
   14001083e:	int3   
   14001083f:	int3   
   140010840:	mov    QWORD PTR [rsp+0x10],rbx
   140010845:	mov    QWORD PTR [rsp+0x18],rbp
   14001084a:	push   rdi
   14001084b:	sub    rsp,0x20
   14001084f:	mov    ebp,r8d
   140010852:	mov    rdi,rdx
   140010855:	mov    rbx,rcx
   140010858:	cmp    r9d,r8d
   14001085b:	jg     0x1400108ce
   14001085d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140010861:	jg     0x1400108be
   140010863:	mov    rdx,QWORD PTR [rcx]
   140010866:	mov    QWORD PTR [rsp+0x30],rsi
   14001086b:	mov    esi,DWORD PTR [rcx+0xc]
   14001086e:	and    esi,0xc0000000
   140010874:	cmp    rdx,rdi
   140010877:	je     0x1400108b9
   140010879:	test   rdx,rdx
   14001087c:	je     0x1400108a4
   14001087e:	movsxd r8,r9d
   140010881:	mov    rcx,rdi
   140010884:	shl    r8,0x2
   140010888:	call   0x140026f70
   14001088d:	test   esi,esi
   14001088f:	jne    0x1400108a4
   140010891:	mov    rax,QWORD PTR [rip+0x21af8]        # 0x140032390
   140010898:	mov    rdx,QWORD PTR [rbx]
   14001089b:	mov    rcx,QWORD PTR [rax]
   14001089e:	mov    rax,QWORD PTR [rcx]
   1400108a1:	call   QWORD PTR [rax+0x28]
   1400108a4:	mov    eax,DWORD PTR [rbx+0xc]
   1400108a7:	and    eax,0x3fffffff
   1400108ac:	mov    QWORD PTR [rbx],rdi
   1400108af:	bts    eax,0x1f
   1400108b3:	mov    DWORD PTR [rbx+0x8],ebp
   1400108b6:	mov    DWORD PTR [rbx+0xc],eax
   1400108b9:	mov    rsi,QWORD PTR [rsp+0x30]
   1400108be:	mov    rbx,QWORD PTR [rsp+0x38]
   1400108c3:	mov    rbp,QWORD PTR [rsp+0x40]
   1400108c8:	add    rsp,0x20
   1400108cc:	pop    rdi
   1400108cd:	ret    
   1400108ce:	mov    eax,DWORD PTR [rcx+0x8]
   1400108d1:	cmp    r9d,eax
   1400108d4:	jg     0x1400108be
   1400108d6:	test   r9d,r9d
   1400108d9:	jne    0x140010914
   1400108db:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400108e2:	jne    0x1400108be
   1400108e4:	mov    rdx,QWORD PTR [rcx]
   1400108e7:	xor    edi,edi
   1400108e9:	test   rdx,rdx
   1400108ec:	je     0x140010901
   1400108ee:	mov    rax,QWORD PTR [rip+0x21a9b]        # 0x140032390
   1400108f5:	mov    rcx,QWORD PTR [rax]
   1400108f8:	mov    rax,QWORD PTR [rcx]
   1400108fb:	call   QWORD PTR [rax+0x28]
   1400108fe:	mov    QWORD PTR [rbx],rdi
   140010901:	mov    DWORD PTR [rbx+0x8],edi
   140010904:	mov    rbx,QWORD PTR [rsp+0x38]
   140010909:	mov    rbp,QWORD PTR [rsp+0x40]
   14001090e:	add    rsp,0x20
   140010912:	pop    rdi
   140010913:	ret    
   140010914:	test   DWORD PTR [rcx+0xc],0xc0000000
   14001091b:	jne    0x1400108be
   14001091d:	cmp    r9d,eax
   140010920:	je     0x1400108be
   140010922:	mov    rdx,QWORD PTR [rcx]
   140010925:	test   rdx,rdx
   140010928:	je     0x1400108be
   14001092a:	mov    DWORD PTR [rcx+0x8],r9d
   14001092e:	mov    rax,QWORD PTR [rip+0x21a5b]        # 0x140032390
   140010935:	movsxd r8,r9d
   140010938:	shl    r8,0x2
   14001093c:	mov    rcx,QWORD PTR [rax]
   14001093f:	mov    rax,QWORD PTR [rcx]
   140010942:	call   QWORD PTR [rax+0x18]
   140010945:	mov    rbp,QWORD PTR [rsp+0x40]
   14001094a:	mov    QWORD PTR [rbx],rax
   14001094d:	mov    rbx,QWORD PTR [rsp+0x38]
   140010952:	add    rsp,0x20
   140010956:	pop    rdi
   140010957:	ret    
   140010958:	int3   
   140010959:	int3   
   14001095a:	int3   
   14001095b:	int3   
   14001095c:	int3   
   14001095d:	int3   
   14001095e:	int3   
   14001095f:	int3   
   140010960:	rex push rsi
   140010962:	push   rdi
   140010963:	push   r14
   140010965:	push   r15
   140010967:	sub    rsp,0x28
   14001096b:	movsxd rsi,r8d
   14001096e:	mov    r15,rdx
   140010971:	mov    r14,rcx
   140010974:	test   rdx,rdx
   140010977:	je     0x14001097d
   140010979:	mov    edi,DWORD PTR [rdx]
   14001097b:	jmp    0x14001097f
   14001097d:	xor    edi,edi
   14001097f:	cmp    esi,edi
   140010981:	jne    0x140010991
   140010983:	mov    rax,r15
   140010986:	add    rsp,0x28
   14001098a:	pop    r15
   14001098c:	pop    r14
   14001098e:	pop    rdi
   14001098f:	pop    rsi
   140010990:	ret    
   140010991:	test   r8d,r8d
   140010994:	jne    0x1400109ad
   140010996:	test   r15,r15
   140010999:	je     0x1400109ad
   14001099b:	call   0x14000e6b0
   1400109a0:	xor    eax,eax
   1400109a2:	add    rsp,0x28
   1400109a6:	pop    r15
   1400109a8:	pop    r14
   1400109aa:	pop    rdi
   1400109ab:	pop    rsi
   1400109ac:	ret    
   1400109ad:	mov    rax,QWORD PTR [rip+0x219dc]        # 0x140032390
   1400109b4:	lea    rdx,[rsi*8+0x8]
   1400109bc:	mov    QWORD PTR [rsp+0x50],rbx
   1400109c1:	mov    QWORD PTR [rsp+0x60],rbp
   1400109c6:	mov    QWORD PTR [rsp+0x68],r12
   1400109cb:	mov    rcx,QWORD PTR [rax]
   1400109ce:	mov    QWORD PTR [rsp+0x20],r13
   1400109d3:	mov    rax,QWORD PTR [rcx]
   1400109d6:	call   QWORD PTR [rax+0x8]
   1400109d9:	xor    r9d,r9d
   1400109dc:	mov    QWORD PTR [rsp+0x58],rax
   1400109e1:	cmp    esi,edi
   1400109e3:	lea    r12,[r15+0x8]
   1400109e7:	mov    ecx,edi
   1400109e9:	cmovl  ecx,esi
   1400109ec:	mov    QWORD PTR [rax],rsi
   1400109ef:	movsxd rdx,ecx
   1400109f2:	lea    r13,[rax+0x8]
   1400109f6:	test   ecx,ecx
   1400109f8:	jle    0x140010a28
   1400109fa:	mov    r8,r13
   1400109fd:	mov    rcx,r12
   140010a00:	sub    r8,r12
   140010a03:	mov    r9d,edx
   140010a06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010a10:	mov    rax,QWORD PTR [rcx]
   140010a13:	mov    QWORD PTR [r8+rcx*1],rax
   140010a17:	mov    QWORD PTR [rcx],0x0
   140010a1e:	lea    rcx,[rcx+0x8]
   140010a22:	sub    rdx,0x1
   140010a26:	jne    0x140010a10
   140010a28:	movsxd rbx,r9d
   140010a2b:	cmp    esi,edi
   140010a2d:	jle    0x140010ab5
   140010a33:	cmp    rbx,rsi
   140010a36:	jge    0x140010b1e
   140010a3c:	mov    rdi,r14
   140010a3f:	and    rdi,0xfffffffffffffc00
   140010a46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010a50:	test   BYTE PTR [r14],0x1
   140010a54:	mov    eax,0x0
   140010a59:	cmove  rax,rdi
   140010a5d:	test   rax,rax
   140010a60:	je     0x140010a67
   140010a62:	mov    rcx,QWORD PTR [rax]
   140010a65:	jmp    0x140010a69
   140010a67:	xor    ecx,ecx
   140010a69:	test   rcx,rcx
   140010a6c:	je     0x140010a78
   140010a6e:	call   0x14000cec0
   140010a73:	mov    rcx,rax
   140010a76:	jmp    0x140010aa6
   140010a78:	mov    ecx,0x10
   140010a7d:	call   0x140007bf0
   140010a82:	mov    rcx,rax
   140010a85:	test   rax,rax
   140010a88:	je     0x140010aa4
   140010a8a:	mov    rax,QWORD PTR [rax]
   140010a8d:	and    rax,0xffffffffffe00003
   140010a93:	mov    QWORD PTR [rcx+0x8],0x0
   140010a9b:	or     rax,0x3
   140010a9f:	mov    QWORD PTR [rcx],rax
   140010aa2:	jmp    0x140010aa6
   140010aa4:	xor    ecx,ecx
   140010aa6:	mov    QWORD PTR [r13+rbx*8+0x0],rcx
   140010aab:	inc    rbx
   140010aae:	cmp    rbx,rsi
   140010ab1:	jl     0x140010a50
   140010ab3:	jmp    0x140010b1e
   140010ab5:	movsxd rsi,edi
   140010ab8:	cmp    rbx,rsi
   140010abb:	jge    0x140010b1e
   140010abd:	mov    rbp,r14
   140010ac0:	and    rbp,0xfffffffffffffc00
   140010ac7:	nop    WORD PTR [rax+rax*1+0x0]
   140010ad0:	test   BYTE PTR [r14],0x1
   140010ad4:	mov    eax,0x0
   140010ad9:	mov    rdi,QWORD PTR [r12+rbx*8]
   140010add:	cmove  rax,rbp
   140010ae1:	test   rax,rax
   140010ae4:	je     0x140010aeb
   140010ae6:	mov    rcx,QWORD PTR [rax]
   140010ae9:	jmp    0x140010aed
   140010aeb:	xor    ecx,ecx
   140010aed:	test   rcx,rcx
   140010af0:	je     0x140010afc
   140010af2:	mov    rdx,rdi
   140010af5:	call   0x14000e790
   140010afa:	jmp    0x140010b16
   140010afc:	test   rdi,rdi
   140010aff:	je     0x140010b16
   140010b01:	mov    rcx,rdi
   140010b04:	call   0x14000f9e0
   140010b09:	mov    edx,0x10
   140010b0e:	mov    rcx,rdi
   140010b11:	call   0x14002639c
   140010b16:	inc    rbx
   140010b19:	cmp    rbx,rsi
   140010b1c:	jl     0x140010ad0
   140010b1e:	mov    rax,QWORD PTR [rip+0x2186b]        # 0x140032390
   140010b25:	mov    rdx,r15
   140010b28:	mov    rcx,QWORD PTR [rax]
   140010b2b:	mov    rax,QWORD PTR [rcx]
   140010b2e:	call   QWORD PTR [rax+0x28]
   140010b31:	mov    rax,QWORD PTR [rsp+0x58]
   140010b36:	mov    r13,QWORD PTR [rsp+0x20]
   140010b3b:	mov    r12,QWORD PTR [rsp+0x68]
   140010b40:	mov    rbp,QWORD PTR [rsp+0x60]
   140010b45:	mov    rbx,QWORD PTR [rsp+0x50]
   140010b4a:	add    rsp,0x28
   140010b4e:	pop    r15
   140010b50:	pop    r14
   140010b52:	pop    rdi
   140010b53:	pop    rsi
   140010b54:	ret    
   140010b55:	int3   
   140010b56:	int3   
   140010b57:	int3   
   140010b58:	int3   
   140010b59:	int3   
   140010b5a:	int3   
   140010b5b:	int3   
   140010b5c:	int3   
   140010b5d:	int3   
   140010b5e:	int3   
   140010b5f:	int3   
   140010b60:	mov    QWORD PTR [rsp+0x8],rbx
   140010b65:	mov    QWORD PTR [rsp+0x10],rbp
   140010b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140010b6f:	push   rdi
   140010b70:	sub    rsp,0x20
   140010b74:	mov    rax,QWORD PTR [rcx+0x98]
   140010b7b:	mov    rbx,rcx
   140010b7e:	movsxd rdi,r8d
   140010b81:	xor    ecx,ecx
   140010b83:	mov    r8d,ecx
   140010b86:	mov    rsi,QWORD PTR [rax+rdi*8]
   140010b8a:	movzx  eax,BYTE PTR [rdx]
   140010b8d:	and    rdx,0xfffffffffffffc00
   140010b94:	and    al,0x1
   140010b96:	cmove  r8,rdx
   140010b9a:	test   r8,r8
   140010b9d:	je     0x140010ba2
   140010b9f:	mov    rcx,QWORD PTR [r8]
   140010ba2:	test   rcx,rcx
   140010ba5:	je     0x140010bb1
   140010ba7:	mov    rdx,rsi
   140010baa:	call   0x14000e790
   140010baf:	jmp    0x140010bcb
   140010bb1:	test   rsi,rsi
   140010bb4:	je     0x140010bcb
   140010bb6:	mov    rcx,rsi
   140010bb9:	call   0x14000f9e0
   140010bbe:	mov    edx,0x10
   140010bc3:	mov    rcx,rsi
   140010bc6:	call   0x14002639c
   140010bcb:	mov    eax,DWORD PTR [rbx+0x90]
   140010bd1:	sub    eax,edi
   140010bd3:	dec    eax
   140010bd5:	test   eax,eax
   140010bd7:	jle    0x140010bfa
   140010bd9:	mov    r9,QWORD PTR [rbx+0x98]
   140010be0:	movsxd r8,eax
   140010be3:	lea    eax,[rdi+0x1]
   140010be6:	movsxd rcx,eax
   140010be9:	shl    r8,0x3
   140010bed:	lea    rdx,[r9+rcx*8]
   140010bf1:	lea    rcx,[r9+rdi*8]
   140010bf5:	call   0x140026f70
   140010bfa:	dec    DWORD PTR [rbx+0x90]
   140010c00:	mov    eax,DWORD PTR [rbx+0x38]
   140010c03:	sub    eax,edi
   140010c05:	dec    eax
   140010c07:	test   eax,eax
   140010c09:	jle    0x140010c29
   140010c0b:	mov    r9,QWORD PTR [rbx+0x40]
   140010c0f:	movsxd r8,eax
   140010c12:	lea    eax,[rdi+0x1]
   140010c15:	movsxd rcx,eax
   140010c18:	shl    r8,0x3
   140010c1c:	lea    rdx,[r9+rcx*8]
   140010c20:	lea    rcx,[r9+rdi*8]
   140010c24:	call   0x140026f70
   140010c29:	dec    DWORD PTR [rbx+0x38]
   140010c2c:	mov    eax,DWORD PTR [rbx]
   140010c2e:	sub    eax,edi
   140010c30:	dec    eax
   140010c32:	test   eax,eax
   140010c34:	jle    0x140010c54
   140010c36:	mov    r9,QWORD PTR [rbx+0x8]
   140010c3a:	movsxd r8,eax
   140010c3d:	lea    eax,[rdi+0x1]
   140010c40:	movsxd rcx,eax
   140010c43:	shl    r8,0x2
   140010c47:	lea    rdx,[r9+rcx*4]
   140010c4b:	lea    rcx,[r9+rdi*4]
   140010c4f:	call   0x140026f70
   140010c54:	dec    DWORD PTR [rbx]
   140010c56:	mov    eax,DWORD PTR [rbx+0xe8]
   140010c5c:	sub    eax,edi
   140010c5e:	dec    eax
   140010c60:	test   eax,eax
   140010c62:	jle    0x140010c7f
   140010c64:	mov    rcx,QWORD PTR [rbx+0xf0]
   140010c6b:	movsxd r8,eax
   140010c6e:	lea    eax,[rdi+0x1]
   140010c71:	movsxd rdx,eax
   140010c74:	add    rdx,rcx
   140010c77:	add    rcx,rdi
   140010c7a:	call   0x140026f70
   140010c7f:	dec    DWORD PTR [rbx+0xe8]
   140010c85:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c8a:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c94:	add    rsp,0x20
   140010c98:	pop    rdi
   140010c99:	ret    
   140010c9a:	int3   
   140010c9b:	int3   
   140010c9c:	int3   
   140010c9d:	int3   
   140010c9e:	int3   
   140010c9f:	int3   
   140010ca0:	mov    QWORD PTR [rsp+0x10],rbx
   140010ca5:	mov    QWORD PTR [rsp+0x18],rsi
   140010caa:	push   rdi
   140010cab:	sub    rsp,0x20
   140010caf:	movsxd rax,DWORD PTR [rcx]
   140010cb2:	xor    r9d,r9d
   140010cb5:	mov    rbx,rcx
   140010cb8:	mov    edi,r9d
   140010cbb:	test   eax,eax
   140010cbd:	jle    0x140010ce3
   140010cbf:	mov    rsi,QWORD PTR [rcx+0x98]
   140010cc6:	mov    r10,rax
   140010cc9:	mov    rax,rsi
   140010ccc:	mov    ecx,r9d
   140010ccf:	nop
   140010cd0:	cmp    QWORD PTR [rax],r8
   140010cd3:	je     0x140010cf5
   140010cd5:	inc    edi
   140010cd7:	inc    rcx
   140010cda:	add    rax,0x8
   140010cde:	cmp    rcx,r10
   140010ce1:	jl     0x140010cd0
   140010ce3:	xor    al,al
   140010ce5:	mov    rbx,QWORD PTR [rsp+0x38]
   140010cea:	mov    rsi,QWORD PTR [rsp+0x40]
   140010cef:	add    rsp,0x20
   140010cf3:	pop    rdi
   140010cf4:	ret    
   140010cf5:	movzx  eax,BYTE PTR [rdx]
   140010cf8:	mov    rcx,r9
   140010cfb:	and    rdx,0xfffffffffffffc00
   140010d02:	mov    QWORD PTR [rsp+0x30],rbp
   140010d07:	and    al,0x1
   140010d09:	movsxd rbp,edi
   140010d0c:	cmove  rcx,rdx
   140010d10:	mov    rsi,QWORD PTR [rsi+rbp*8]
   140010d14:	test   rcx,rcx
   140010d17:	je     0x140010d1c
   140010d19:	mov    r9,QWORD PTR [rcx]
   140010d1c:	test   r9,r9
   140010d1f:	je     0x140010d2e
   140010d21:	mov    rdx,rsi
   140010d24:	mov    rcx,r9
   140010d27:	call   0x14000e790
   140010d2c:	jmp    0x140010d48
   140010d2e:	test   rsi,rsi
   140010d31:	je     0x140010d48
   140010d33:	mov    rcx,rsi
   140010d36:	call   0x14000f9e0
   140010d3b:	mov    edx,0x10
   140010d40:	mov    rcx,rsi
   140010d43:	call   0x14002639c
   140010d48:	mov    eax,DWORD PTR [rbx+0x90]
   140010d4e:	sub    eax,edi
   140010d50:	dec    eax
   140010d52:	test   eax,eax
   140010d54:	jle    0x140010d77
   140010d56:	mov    r9,QWORD PTR [rbx+0x98]
   140010d5d:	movsxd r8,eax
   140010d60:	lea    eax,[rdi+0x1]
   140010d63:	movsxd rcx,eax
   140010d66:	shl    r8,0x3
   140010d6a:	lea    rdx,[r9+rcx*8]
   140010d6e:	lea    rcx,[r9+rbp*8]
   140010d72:	call   0x140026f70
   140010d77:	dec    DWORD PTR [rbx+0x90]
   140010d7d:	mov    eax,DWORD PTR [rbx+0x38]
   140010d80:	sub    eax,edi
   140010d82:	dec    eax
   140010d84:	test   eax,eax
   140010d86:	jle    0x140010da6
   140010d88:	mov    r9,QWORD PTR [rbx+0x40]
   140010d8c:	movsxd r8,eax
   140010d8f:	lea    eax,[rdi+0x1]
   140010d92:	movsxd rcx,eax
   140010d95:	shl    r8,0x3
   140010d99:	lea    rdx,[r9+rcx*8]
   140010d9d:	lea    rcx,[r9+rbp*8]
   140010da1:	call   0x140026f70
   140010da6:	dec    DWORD PTR [rbx+0x38]
   140010da9:	mov    eax,DWORD PTR [rbx]
   140010dab:	sub    eax,edi
   140010dad:	dec    eax
   140010daf:	test   eax,eax
   140010db1:	jle    0x140010dd1
   140010db3:	mov    r9,QWORD PTR [rbx+0x8]
   140010db7:	movsxd r8,eax
   140010dba:	lea    eax,[rdi+0x1]
   140010dbd:	movsxd rcx,eax
   140010dc0:	shl    r8,0x2
   140010dc4:	lea    rdx,[r9+rcx*4]
   140010dc8:	lea    rcx,[r9+rbp*4]
   140010dcc:	call   0x140026f70
   140010dd1:	dec    DWORD PTR [rbx]
   140010dd3:	mov    eax,DWORD PTR [rbx+0xe8]
   140010dd9:	sub    eax,edi
   140010ddb:	dec    eax
   140010ddd:	test   eax,eax
   140010ddf:	jle    0x140010dfc
   140010de1:	mov    rcx,QWORD PTR [rbx+0xf0]
   140010de8:	movsxd r8,eax
   140010deb:	lea    eax,[rdi+0x1]
   140010dee:	movsxd rdx,eax
   140010df1:	add    rdx,rcx
   140010df4:	add    rcx,rbp
   140010df7:	call   0x140026f70
   140010dfc:	dec    DWORD PTR [rbx+0xe8]
   140010e02:	mov    al,0x1
   140010e04:	mov    rbx,QWORD PTR [rsp+0x38]
   140010e09:	mov    rbp,QWORD PTR [rsp+0x30]
   140010e0e:	mov    rsi,QWORD PTR [rsp+0x40]
   140010e13:	add    rsp,0x20
   140010e17:	pop    rdi
   140010e18:	ret    
   140010e19:	int3   
   140010e1a:	int3   
   140010e1b:	int3   
   140010e1c:	int3   
   140010e1d:	int3   
   140010e1e:	int3   
   140010e1f:	int3   
   140010e20:	mov    rdx,QWORD PTR [rcx+0x30]
   140010e24:	mov    r9,rcx
   140010e27:	cmp    rdx,0xffffffffffffffff
   140010e2b:	je     0x140010ecc
   140010e31:	cmp    DWORD PTR [rcx+0x10],0x0
   140010e35:	jle    0x140010ebc
   140010e3b:	xor    eax,eax
   140010e3d:	nop    DWORD PTR [rax]
   140010e40:	test   rax,rax
   140010e43:	js     0x140010e9a
   140010e45:	movsxd rcx,DWORD PTR [r9+0x10]
   140010e49:	cmp    rax,rcx
   140010e4c:	jge    0x140010e9a
   140010e4e:	cmp    rax,rdx
   140010e51:	jg     0x140010e9a
   140010e53:	cmp    rax,0xffffffffffffffff
   140010e57:	je     0x140010e67
   140010e59:	mov    rcx,QWORD PTR [r9+0x8]
   140010e5d:	lea    rdx,[rax+rax*4]
   140010e61:	mov    r8,QWORD PTR [rcx+rdx*8]
   140010e65:	jmp    0x140010e6b
   140010e67:	or     r8,0xffffffffffffffff
   140010e6b:	cmp    r8,rax
   140010e6e:	setne  cl
   140010e71:	test   cl,cl
   140010e73:	je     0x140010e9a
   140010e75:	mov    rdx,QWORD PTR [r9+0x8]
   140010e79:	lea    rcx,[rax+rax*4]
   140010e7d:	lea    r8,[rcx*8+0x0]
   140010e85:	mov    rcx,QWORD PTR [r9+0x28]
   140010e89:	mov    QWORD PTR [rdx+r8*1+0x8],rcx
   140010e8e:	mov    rcx,QWORD PTR [r9+0x8]
   140010e92:	mov    QWORD PTR [r8+rcx*1],rax
   140010e96:	mov    QWORD PTR [r9+0x28],rax
   140010e9a:	mov    rdx,QWORD PTR [r9+0x30]
   140010e9e:	cmp    rax,rdx
   140010ea1:	je     0x140010ebc
   140010ea3:	add    rax,0x1
   140010ea7:	js     0x140010eb2
   140010ea9:	movsxd rcx,DWORD PTR [r9+0x10]
   140010ead:	cmp    rax,rcx
   140010eb0:	jl     0x140010eb6
   140010eb2:	or     rax,0xffffffffffffffff
   140010eb6:	cmp    rax,0xffffffffffffffff
   140010eba:	jne    0x140010e40
   140010ebc:	mov    QWORD PTR [r9+0x18],0xffffffffffffffff
   140010ec4:	mov    QWORD PTR [r9+0x20],0x0
   140010ecc:	ret    
   140010ecd:	int3   
   140010ece:	int3   
   140010ecf:	int3   
   140010ed0:	mov    QWORD PTR [rsp+0x18],rbx
   140010ed5:	push   rbp
   140010ed6:	sub    rsp,0x20
   140010eda:	mov    QWORD PTR [rsp+0x38],rdi
   140010edf:	mov    rbx,rcx
   140010ee2:	call   0x140010e20
   140010ee7:	xor    ebp,ebp
   140010ee9:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
   140010ef1:	test   DWORD PTR [rbx+0x14],0xc0000000
   140010ef8:	jne    0x140010f1a
   140010efa:	mov    rdx,QWORD PTR [rbx+0x8]
   140010efe:	test   rdx,rdx
   140010f01:	je     0x140010f17
   140010f03:	mov    rax,QWORD PTR [rip+0x21486]        # 0x140032390
   140010f0a:	mov    rcx,QWORD PTR [rax]
   140010f0d:	mov    rax,QWORD PTR [rcx]
   140010f10:	call   QWORD PTR [rax+0x28]
   140010f13:	mov    QWORD PTR [rbx+0x8],rbp
   140010f17:	mov    DWORD PTR [rbx+0x10],ebp
   140010f1a:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
   140010f22:	mov    edi,ebp
   140010f24:	cmp    DWORD PTR [rbx+0x40],ebp
   140010f27:	jle    0x140010f59
   140010f29:	mov    QWORD PTR [rsp+0x30],rsi
   140010f2e:	mov    rsi,rbp
   140010f31:	mov    rax,QWORD PTR [rip+0x21458]        # 0x140032390
   140010f38:	mov    rdx,QWORD PTR [rbx+0x48]
   140010f3c:	mov    rcx,QWORD PTR [rax]
   140010f3f:	mov    rdx,QWORD PTR [rdx+rsi*1]
   140010f43:	mov    rax,QWORD PTR [rcx]
   140010f46:	call   QWORD PTR [rax+0x28]
   140010f49:	inc    edi
   140010f4b:	lea    rsi,[rsi+0x8]
   140010f4f:	cmp    edi,DWORD PTR [rbx+0x40]
   140010f52:	jl     0x140010f31
   140010f54:	mov    rsi,QWORD PTR [rsp+0x30]
   140010f59:	mov    rdi,QWORD PTR [rsp+0x38]
   140010f5e:	mov    DWORD PTR [rbx+0x40],ebp
   140010f61:	test   DWORD PTR [rbx+0x54],0xc0000000
   140010f68:	jne    0x140010f8a
   140010f6a:	mov    rdx,QWORD PTR [rbx+0x48]
   140010f6e:	test   rdx,rdx
   140010f71:	je     0x140010f87
   140010f73:	mov    rax,QWORD PTR [rip+0x21416]        # 0x140032390
   140010f7a:	mov    rcx,QWORD PTR [rax]
   140010f7d:	mov    rax,QWORD PTR [rcx]
   140010f80:	call   QWORD PTR [rax+0x28]
   140010f83:	mov    QWORD PTR [rbx+0x48],rbp
   140010f87:	mov    DWORD PTR [rbx+0x50],ebp
   140010f8a:	mov    rbx,QWORD PTR [rsp+0x40]
   140010f8f:	add    rsp,0x20
   140010f93:	pop    rbp
   140010f94:	ret    
   140010f95:	int3   
   140010f96:	int3   
   140010f97:	int3   
   140010f98:	int3   
   140010f99:	int3   
   140010f9a:	int3   
   140010f9b:	int3   
   140010f9c:	int3   
   140010f9d:	int3   
   140010f9e:	int3   
   140010f9f:	int3   
   140010fa0:	sub    rsp,0x28
   140010fa4:	mov    r8,QWORD PTR [rcx]
   140010fa7:	mov    r10,rcx
   140010faa:	mov    r9,r8
   140010fad:	and    r9d,0x1e
   140010fb1:	lea    rax,[r9-0x14]
   140010fb5:	test   rax,0xfffffffffffffff9
   140010fbb:	jne    0x140010fc3
   140010fbd:	cmp    r9,0x1a
   140010fc1:	jne    0x140010fee
   140010fc3:	shr    r8b,1
   140010fc6:	and    r8b,0xf
   140010fca:	cmp    r8b,0x9
   140010fce:	jne    0x140010fee
   140010fd0:	mov    rcx,QWORD PTR [rcx+0x8]
   140010fd4:	test   edx,edx
   140010fd6:	js     0x140010fee
   140010fd8:	cmp    edx,DWORD PTR [rcx]
   140010fda:	jge    0x140010fee
   140010fdc:	mov    r8d,edx
   140010fdf:	mov    rdx,r10
   140010fe2:	call   0x140010b60
   140010fe7:	mov    al,0x1
   140010fe9:	add    rsp,0x28
   140010fed:	ret    
   140010fee:	xor    al,al
   140010ff0:	add    rsp,0x28
   140010ff4:	ret    
   140010ff5:	int3   
   140010ff6:	int3   
   140010ff7:	int3   
   140010ff8:	int3   
   140010ff9:	int3   
   140010ffa:	int3   
   140010ffb:	int3   
   140010ffc:	int3   
   140010ffd:	int3   
   140010ffe:	int3   
   140010fff:	int3   
   140011000:	mov    r8,QWORD PTR [rcx]
   140011003:	movzx  eax,r8b
   140011007:	and    al,0x1e
   140011009:	cmp    al,0x12
   14001100b:	je     0x140011010
   14001100d:	xor    al,al
   14001100f:	ret    
   140011010:	shr    r8b,1
   140011013:	and    r8b,0xf
   140011017:	cmp    r8b,0x9
   14001101b:	jne    0x14001102f
   14001101d:	mov    rax,QWORD PTR [rcx+0x8]
   140011021:	mov    r8,rdx
   140011024:	mov    rdx,rcx
   140011027:	mov    rcx,rax
   14001102a:	jmp    0x140010ca0
   14001102f:	xor    eax,eax
   140011031:	mov    r8,rdx
   140011034:	mov    rdx,rcx
   140011037:	mov    ecx,eax
   140011039:	jmp    0x140010ca0
   14001103e:	int3   
   14001103f:	int3   
   140011040:	mov    QWORD PTR [rsp+0x10],rbx
   140011045:	mov    QWORD PTR [rsp+0x20],rsi
   14001104a:	mov    DWORD PTR [rsp+0x18],r8d
   14001104f:	push   r14
   140011051:	sub    rsp,0x20
   140011055:	mov    rsi,rdx
   140011058:	mov    ebx,r8d
   14001105b:	mov    r8,QWORD PTR [rcx]
   14001105e:	mov    r14,rcx
   140011061:	mov    rdx,r8
   140011064:	and    edx,0x1e
   140011067:	lea    rax,[rdx-0x14]
   14001106b:	test   rax,0xfffffffffffffff9
   140011071:	jne    0x140011079
   140011073:	cmp    rdx,0x1a
   140011077:	jne    0x140011086
   140011079:	shr    r8b,1
   14001107c:	and    r8b,0xf
   140011080:	cmp    r8b,0x9
   140011084:	je     0x140011099
   140011086:	xor    al,al
   140011088:	mov    rbx,QWORD PTR [rsp+0x38]
   14001108d:	mov    rsi,QWORD PTR [rsp+0x48]
   140011092:	add    rsp,0x20
   140011096:	pop    r14
   140011098:	ret    
   140011099:	mov    QWORD PTR [rsp+0x30],rdi
   14001109e:	xor    edi,edi
   1400110a0:	test   ebx,ebx
   1400110a2:	jne    0x1400110dc
   1400110a4:	mov    ebx,edi
   1400110a6:	test   rsi,rsi
   1400110a9:	je     0x1400110d8
   1400110ab:	cmp    BYTE PTR [rsi],bl
   1400110ad:	je     0x1400110d8
   1400110af:	mov    edx,0x31415926
   1400110b4:	mov    rcx,rsi
   1400110b7:	call   0x140022790
   1400110bc:	cmp    BYTE PTR [rip+0x371a5],dil        # 0x140048268
   1400110c3:	mov    ebx,eax
   1400110c5:	je     0x1400110d8
   1400110c7:	mov    r9b,0x1
   1400110ca:	xor    r8d,r8d
   1400110cd:	mov    rdx,rsi
   1400110d0:	mov    ecx,eax
   1400110d2:	call   QWORD PTR [rip+0x214e8]        # 0x1400325c0
   1400110d8:	mov    DWORD PTR [rsp+0x40],ebx
   1400110dc:	mov    rcx,QWORD PTR [r14]
   1400110df:	mov    rdx,rcx
   1400110e2:	and    edx,0x1e
   1400110e5:	lea    rax,[rdx-0x14]
   1400110e9:	test   rax,0xfffffffffffffff9
   1400110ef:	jne    0x1400110f7
   1400110f1:	cmp    rdx,0x1a
   1400110f5:	jne    0x140011107
   1400110f7:	shr    cl,1
   1400110f9:	and    cl,0xf
   1400110fc:	cmp    cl,0x9
   1400110ff:	jne    0x140011107
   140011101:	mov    r9,QWORD PTR [r14+0x8]
   140011105:	jmp    0x14001110a
   140011107:	mov    r9,rdi
   14001110a:	movsxd rax,DWORD PTR [r9]
   14001110d:	test   eax,eax
   14001110f:	jle    0x140011132
   140011111:	mov    rdx,rax
   140011114:	mov    rcx,rdi
   140011117:	mov    rax,QWORD PTR [r9+0x8]
   14001111b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011120:	cmp    ebx,DWORD PTR [rax]
   140011122:	je     0x14001114a
   140011124:	inc    edi
   140011126:	inc    rcx
   140011129:	add    rax,0x4
   14001112d:	cmp    rcx,rdx
   140011130:	jl     0x140011120
   140011132:	xor    al,al
   140011134:	mov    rdi,QWORD PTR [rsp+0x30]
   140011139:	mov    rbx,QWORD PTR [rsp+0x38]
   14001113e:	mov    rsi,QWORD PTR [rsp+0x48]
   140011143:	add    rsp,0x20
   140011147:	pop    r14
   140011149:	ret    
   14001114a:	cmp    edi,0xffffffff
   14001114d:	je     0x140011132
   14001114f:	mov    r8d,edi
   140011152:	mov    rdx,r14
   140011155:	mov    rcx,r9
   140011158:	call   0x140010b60
   14001115d:	mov    al,0x1
   14001115f:	jmp    0x140011134
   140011161:	int3   
   140011162:	int3   
   140011163:	int3   
   140011164:	int3   
   140011165:	int3   
   140011166:	int3   
   140011167:	int3   
   140011168:	int3   
   140011169:	int3   
   14001116a:	int3   
   14001116b:	int3   
   14001116c:	int3   
   14001116d:	int3   
   14001116e:	int3   
   14001116f:	int3   
   140011170:	lea    rax,[rcx+0x18]
   140011174:	ret    
   140011175:	int3   
   140011176:	int3   
   140011177:	int3   
   140011178:	int3   
   140011179:	int3   
   14001117a:	int3   
   14001117b:	int3   
   14001117c:	int3   
   14001117d:	int3   
   14001117e:	int3   
   14001117f:	int3   
   140011180:	sub    rsp,0x8
   140011184:	mov    r8,rcx
   140011187:	or     rcx,0xffffffffffffffff
   14001118b:	cmp    rdx,rcx
   14001118e:	je     0x1400111ac
   140011190:	mov    r10,QWORD PTR [r8+0x8]
   140011194:	lea    rax,[rdx+rdx*4]
   140011198:	mov    r9,QWORD PTR [r10+rax*8+0x8]
   14001119d:	cmp    r9,rcx
   1400111a0:	je     0x1400111af
   1400111a2:	lea    rax,[r9+r9*4]
   1400111a6:	mov    r11,QWORD PTR [r10+rax*8]
   1400111aa:	jmp    0x1400111b2
   1400111ac:	mov    r9,rcx
   1400111af:	mov    r11,rcx
   1400111b2:	lea    rax,[rdx+rdx*4]
   1400111b6:	lea    r10,[rax*8+0x0]
   1400111be:	mov    rax,QWORD PTR [r8+0x8]
   1400111c2:	mov    QWORD PTR [rax+r10*1+0x8],r11
   1400111c7:	cmp    r9,0xffffffffffffffff
   1400111cb:	je     0x140011215
   1400111cd:	mov    r11,QWORD PTR [r8+0x8]
   1400111d1:	lea    rax,[r9+r9*4]
   1400111d5:	mov    QWORD PTR [rsp],rbx
   1400111d9:	lea    rbx,[rax*8+0x0]
   1400111e1:	mov    rax,QWORD PTR [rbx+r11*1]
   1400111e5:	cmp    rax,0xffffffffffffffff
   1400111e9:	je     0x1400111f4
   1400111eb:	lea    rax,[rax+rax*4]
   1400111ef:	mov    QWORD PTR [r11+rax*8+0x10],rdx
   1400111f4:	cmp    rdx,0xffffffffffffffff
   1400111f8:	je     0x140011205
   1400111fa:	mov    rax,QWORD PTR [r8+0x8]
   1400111fe:	mov    r11,QWORD PTR [rax+r10*1+0x10]
   140011203:	jmp    0x140011208
   140011205:	mov    r11,rcx
   140011208:	mov    rax,QWORD PTR [r8+0x8]
   14001120c:	mov    QWORD PTR [rax+rbx*1+0x10],r11
   140011211:	mov    rbx,QWORD PTR [rsp]
   140011215:	cmp    rdx,QWORD PTR [r8+0x18]
   140011219:	je     0x14001127d
   14001121b:	cmp    rdx,0xffffffffffffffff
   14001121f:	je     0x14001123a
   140011221:	mov    r11,QWORD PTR [r8+0x8]
   140011225:	mov    rax,QWORD PTR [r11+r10*1+0x10]
   14001122a:	cmp    rax,0xffffffffffffffff
   14001122e:	je     0x14001123a
   140011230:	lea    rax,[rax+rax*4]
   140011234:	mov    r11,QWORD PTR [r11+rax*8]
   140011238:	jmp    0x14001123d
   14001123a:	mov    r11,rcx
   14001123d:	cmp    r11,rdx
   140011240:	jne    0x14001125f
   140011242:	cmp    rdx,0xffffffffffffffff
   140011246:	je     0x140011251
   140011248:	mov    rax,QWORD PTR [r8+0x8]
   14001124c:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   140011251:	mov    rax,QWORD PTR [r8+0x8]
   140011255:	lea    rcx,[rcx+rcx*4]
   140011259:	mov    QWORD PTR [rax+rcx*8],r9
   14001125d:	jmp    0x140011281
   14001125f:	cmp    rdx,0xffffffffffffffff
   140011263:	je     0x14001126e
   140011265:	mov    rax,QWORD PTR [r8+0x8]
   140011269:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   14001126e:	mov    rax,QWORD PTR [r8+0x8]
   140011272:	lea    rcx,[rcx+rcx*4]
   140011276:	mov    QWORD PTR [rax+rcx*8+0x8],r9
   14001127b:	jmp    0x140011281
   14001127d:	mov    QWORD PTR [r8+0x18],r9
   140011281:	mov    rax,QWORD PTR [r8+0x8]
   140011285:	lea    rcx,[r9+r9*4]
   140011289:	mov    QWORD PTR [rax+rcx*8],rdx
   14001128d:	cmp    rdx,0xffffffffffffffff
   140011291:	je     0x14001129c
   140011293:	mov    rax,QWORD PTR [r8+0x8]
   140011297:	mov    QWORD PTR [rax+r10*1+0x10],r9
   14001129c:	add    rsp,0x8
   1400112a0:	ret    
   1400112a1:	int3   
   1400112a2:	int3   
   1400112a3:	int3   
   1400112a4:	int3   
   1400112a5:	int3   
   1400112a6:	int3   
   1400112a7:	int3   
   1400112a8:	int3   
   1400112a9:	int3   
   1400112aa:	int3   
   1400112ab:	int3   
   1400112ac:	int3   
   1400112ad:	int3   
   1400112ae:	int3   
   1400112af:	int3   
   1400112b0:	sub    rsp,0x8
   1400112b4:	mov    r8,rcx
   1400112b7:	or     rcx,0xffffffffffffffff
   1400112bb:	cmp    rdx,rcx
   1400112be:	je     0x1400112dc
   1400112c0:	mov    r10,QWORD PTR [r8+0x8]
   1400112c4:	lea    rax,[rdx+rdx*4]
   1400112c8:	mov    r9,QWORD PTR [r10+rax*8]
   1400112cc:	cmp    r9,rcx
   1400112cf:	je     0x1400112df
   1400112d1:	lea    rax,[r9+r9*4]
   1400112d5:	mov    r11,QWORD PTR [r10+rax*8+0x8]
   1400112da:	jmp    0x1400112e2
   1400112dc:	mov    r9,rcx
   1400112df:	mov    r11,rcx
   1400112e2:	lea    rax,[rdx+rdx*4]
   1400112e6:	lea    r10,[rax*8+0x0]
   1400112ee:	mov    rax,QWORD PTR [r8+0x8]
   1400112f2:	mov    QWORD PTR [r10+rax*1],r11
   1400112f6:	cmp    r9,0xffffffffffffffff
   1400112fa:	je     0x140011345
   1400112fc:	mov    r11,QWORD PTR [r8+0x8]
   140011300:	lea    rax,[r9+r9*4]
   140011304:	mov    QWORD PTR [rsp],rbx
   140011308:	lea    rbx,[rax*8+0x0]
   140011310:	mov    rax,QWORD PTR [rbx+r11*1+0x8]
   140011315:	cmp    rax,0xffffffffffffffff
   140011319:	je     0x140011324
   14001131b:	lea    rax,[rax+rax*4]
   14001131f:	mov    QWORD PTR [r11+rax*8+0x10],rdx
   140011324:	cmp    rdx,0xffffffffffffffff
   140011328:	je     0x140011335
   14001132a:	mov    rax,QWORD PTR [r8+0x8]
   14001132e:	mov    r11,QWORD PTR [rax+r10*1+0x10]
   140011333:	jmp    0x140011338
   140011335:	mov    r11,rcx
   140011338:	mov    rax,QWORD PTR [r8+0x8]
   14001133c:	mov    QWORD PTR [rax+rbx*1+0x10],r11
   140011341:	mov    rbx,QWORD PTR [rsp]
   140011345:	cmp    rdx,QWORD PTR [r8+0x18]
   140011349:	je     0x1400113ae
   14001134b:	cmp    rdx,0xffffffffffffffff
   14001134f:	je     0x14001136b
   140011351:	mov    r11,QWORD PTR [r8+0x8]
   140011355:	mov    rax,QWORD PTR [r11+r10*1+0x10]
   14001135a:	cmp    rax,0xffffffffffffffff
   14001135e:	je     0x14001136b
   140011360:	lea    rax,[rax+rax*4]
   140011364:	mov    r11,QWORD PTR [r11+rax*8+0x8]
   140011369:	jmp    0x14001136e
   14001136b:	mov    r11,rcx
   14001136e:	cmp    r11,rdx
   140011371:	jne    0x140011391
   140011373:	cmp    rdx,0xffffffffffffffff
   140011377:	je     0x140011382
   140011379:	mov    rax,QWORD PTR [r8+0x8]
   14001137d:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   140011382:	mov    rax,QWORD PTR [r8+0x8]
   140011386:	lea    rcx,[rcx+rcx*4]
   14001138a:	mov    QWORD PTR [rax+rcx*8+0x8],r9
   14001138f:	jmp    0x1400113b2
   140011391:	cmp    rdx,0xffffffffffffffff
   140011395:	je     0x1400113a0
   140011397:	mov    rax,QWORD PTR [r8+0x8]
   14001139b:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   1400113a0:	mov    rax,QWORD PTR [r8+0x8]
   1400113a4:	lea    rcx,[rcx+rcx*4]
   1400113a8:	mov    QWORD PTR [rax+rcx*8],r9
   1400113ac:	jmp    0x1400113b2
   1400113ae:	mov    QWORD PTR [r8+0x18],r9
   1400113b2:	mov    rax,QWORD PTR [r8+0x8]
   1400113b6:	lea    rcx,[r9+r9*4]
   1400113ba:	mov    QWORD PTR [rax+rcx*8+0x8],rdx
   1400113bf:	cmp    rdx,0xffffffffffffffff
   1400113c3:	je     0x1400113ce
   1400113c5:	mov    rax,QWORD PTR [r8+0x8]
   1400113c9:	mov    QWORD PTR [rax+r10*1+0x10],r9
   1400113ce:	add    rsp,0x8
   1400113d2:	ret    
   1400113d3:	int3   
   1400113d4:	int3   
   1400113d5:	int3   
   1400113d6:	int3   
   1400113d7:	int3   
   1400113d8:	int3   
   1400113d9:	int3   
   1400113da:	int3   
   1400113db:	int3   
   1400113dc:	int3   
   1400113dd:	int3   
   1400113de:	int3   
   1400113df:	int3   
   1400113e0:	and    QWORD PTR [rcx],0xffffffffffe0001f
   1400113e7:	movzx  eax,dx
   1400113ea:	shl    rax,0x5
   1400113ee:	or     QWORD PTR [rcx],rax
   1400113f1:	ret    
   1400113f2:	int3   
   1400113f3:	int3   
   1400113f4:	int3   
   1400113f5:	int3   
   1400113f6:	int3   
   1400113f7:	int3   
   1400113f8:	int3   
   1400113f9:	int3   
   1400113fa:	int3   
   1400113fb:	int3   
   1400113fc:	int3   
   1400113fd:	int3   
   1400113fe:	int3   
   1400113ff:	int3   
   140011400:	mov    QWORD PTR [rsp+0x8],rbx
   140011405:	push   rdi
   140011406:	sub    rsp,0x20
   14001140a:	mov    r8,QWORD PTR [rcx]
   14001140d:	mov    rbx,rcx
   140011410:	mov    rcx,r8
   140011413:	movsxd rdi,edx
   140011416:	and    ecx,0x1e
   140011419:	lea    rax,[rcx-0x14]
   14001141d:	test   rax,0xfffffffffffffff9
   140011423:	jne    0x14001142b
   140011425:	cmp    rcx,0x1a
   140011429:	jne    0x140011438
   14001142b:	shr    r8b,1
   14001142e:	and    r8b,0xf
   140011432:	cmp    r8b,0x8
   140011436:	je     0x140011442
   140011438:	mov    dl,0x8
   14001143a:	mov    rcx,rbx
   14001143d:	call   0x14000faa0
   140011442:	mov    rdx,QWORD PTR [rbx+0x8]
   140011446:	test   rdx,rdx
   140011449:	je     0x140011450
   14001144b:	cmp    QWORD PTR [rdx],rdi
   14001144e:	je     0x14001145f
   140011450:	mov    r8d,edi
   140011453:	mov    rcx,rbx
   140011456:	call   0x140010960
   14001145b:	mov    QWORD PTR [rbx+0x8],rax
   14001145f:	mov    rbx,QWORD PTR [rsp+0x30]
   140011464:	add    rsp,0x20
   140011468:	pop    rdi
   140011469:	ret    
   14001146a:	int3   
   14001146b:	int3   
   14001146c:	int3   
   14001146d:	int3   
   14001146e:	int3   
   14001146f:	int3   
   140011470:	mov    QWORD PTR [rsp+0x8],rbx
   140011475:	push   rdi
   140011476:	sub    rsp,0x20
   14001147a:	movzx  edi,dl
   14001147d:	mov    rbx,rcx
   140011480:	mov    dl,0x2
   140011482:	call   0x14000faa0
   140011487:	mov    BYTE PTR [rbx+0x8],dil
   14001148b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011490:	add    rsp,0x20
   140011494:	pop    rdi
   140011495:	ret    
   140011496:	int3   
   140011497:	int3   
   140011498:	int3   
   140011499:	int3   
   14001149a:	int3   
   14001149b:	int3   
   14001149c:	int3   
   14001149d:	int3   
   14001149e:	int3   
   14001149f:	int3   
   1400114a0:	rex push rbx
   1400114a2:	sub    rsp,0x30
   1400114a6:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400114ab:	mov    dl,0x5
   1400114ad:	movaps xmm6,xmm1
   1400114b0:	mov    rbx,rcx
   1400114b3:	call   0x14000faa0
   1400114b8:	movsd  QWORD PTR [rbx+0x8],xmm6
   1400114bd:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400114c2:	add    rsp,0x30
   1400114c6:	pop    rbx
   1400114c7:	ret    
   1400114c8:	int3   
   1400114c9:	int3   
   1400114ca:	int3   
   1400114cb:	int3   
   1400114cc:	int3   
   1400114cd:	int3   
   1400114ce:	int3   
   1400114cf:	int3   
   1400114d0:	movzx  r11d,dx
   1400114d4:	mov    r10,rcx
   1400114d7:	test   r8b,r8b
   1400114da:	je     0x140011502
   1400114dc:	mov    r9,QWORD PTR [rcx]
   1400114df:	mov    rax,r9
   1400114e2:	and    r9,0xffffffffffe0001f
   1400114e9:	shr    rax,0x5
   1400114ed:	movzx  r8d,ax
   1400114f1:	movzx  eax,dx
   1400114f4:	or     r8,rax
   1400114f7:	shl    r8,0x5
   1400114fb:	or     r8,r9
   1400114fe:	mov    QWORD PTR [rcx],r8
   140011501:	ret    
   140011502:	mov    rdx,QWORD PTR [rcx]
   140011505:	not    r11w
   140011509:	mov    rax,rdx
   14001150c:	and    rdx,0xffffffffffe0001f
   140011513:	shr    rax,0x5
   140011517:	movzx  ecx,ax
   14001151a:	movzx  eax,r11w
   14001151e:	and    rcx,rax
   140011521:	shl    rcx,0x5
   140011525:	or     rcx,rdx
   140011528:	mov    QWORD PTR [r10],rcx
   14001152b:	ret    
   14001152c:	int3   
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	mov    QWORD PTR [rsp+0x8],rbx
   140011535:	push   rdi
   140011536:	sub    rsp,0x20
   14001153a:	mov    rdi,rdx
   14001153d:	mov    rbx,rcx
   140011540:	mov    dl,0x3
   140011542:	call   0x14000faa0
   140011547:	mov    QWORD PTR [rbx+0x8],rdi
   14001154b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011550:	add    rsp,0x20
   140011554:	pop    rdi
   140011555:	ret    
   140011556:	int3   
   140011557:	int3   
   140011558:	int3   
   140011559:	int3   
   14001155a:	int3   
   14001155b:	int3   
   14001155c:	int3   
   14001155d:	int3   
   14001155e:	int3   
   14001155f:	int3   
   140011560:	mov    QWORD PTR [rsp+0x8],rbx
   140011565:	push   rdi
   140011566:	sub    rsp,0x20
   14001156a:	movsxd rbx,edx
   14001156d:	mov    rdi,rcx
   140011570:	mov    dl,0x3
   140011572:	call   0x14000faa0
   140011577:	mov    QWORD PTR [rdi+0x8],rbx
   14001157b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011580:	add    rsp,0x20
   140011584:	pop    rdi
   140011585:	ret    
   140011586:	int3   
   140011587:	int3   
   140011588:	int3   
   140011589:	int3   
   14001158a:	int3   
   14001158b:	int3   
   14001158c:	int3   
   14001158d:	int3   
   14001158e:	int3   
   14001158f:	int3   
   140011590:	rex push rdi
   140011592:	sub    rsp,0x20
   140011596:	mov    rdi,rcx
   140011599:	test   rdx,rdx
   14001159c:	je     0x1400115f6
   14001159e:	movzx  eax,BYTE PTR [rdx]
   1400115a1:	test   al,al
   1400115a3:	je     0x1400115f6
   1400115a5:	mov    QWORD PTR [rsp+0x30],rbx
   1400115aa:	mov    rcx,rdx
   1400115ad:	cmp    al,0x2d
   1400115af:	jne    0x1400115d3
   1400115b1:	call   QWORD PTR [rip+0x20cd9]        # 0x140032290
   1400115b7:	mov    dl,0x3
   1400115b9:	mov    rcx,rdi
   1400115bc:	mov    rbx,rax
   1400115bf:	call   0x14000faa0
   1400115c4:	mov    QWORD PTR [rdi+0x8],rbx
   1400115c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115cd:	add    rsp,0x20
   1400115d1:	pop    rdi
   1400115d2:	ret    
   1400115d3:	call   QWORD PTR [rip+0x20caf]        # 0x140032288
   1400115d9:	mov    rbx,rax
   1400115dc:	mov    rcx,rdi
   1400115df:	movabs rax,0x7fffffffffffffff
   1400115e9:	cmp    rbx,rax
   1400115ec:	jbe    0x1400115f2
   1400115ee:	mov    dl,0x4
   1400115f0:	jmp    0x1400115bf
   1400115f2:	mov    dl,0x3
   1400115f4:	jmp    0x1400115bf
   1400115f6:	mov    dl,0x3
   1400115f8:	call   0x14000faa0
   1400115fd:	mov    QWORD PTR [rdi+0x8],0x0
   140011605:	add    rsp,0x20
   140011609:	pop    rdi
   14001160a:	ret    
   14001160b:	int3   
   14001160c:	int3   
   14001160d:	int3   
   14001160e:	int3   
   14001160f:	int3   
   140011610:	mov    QWORD PTR [rsp+0x8],rbx
   140011615:	push   rdi
   140011616:	sub    rsp,0x20
   14001161a:	movsxd rdi,r8d
   14001161d:	mov    r8d,r9d
   140011620:	call   0x14000e270
   140011625:	mov    dl,0x3
   140011627:	mov    rcx,rax
   14001162a:	mov    rbx,rax
   14001162d:	call   0x14000faa0
   140011632:	mov    rax,rbx
   140011635:	mov    QWORD PTR [rbx+0x8],rdi
   140011639:	mov    rbx,QWORD PTR [rsp+0x30]
   14001163e:	add    rsp,0x20
   140011642:	pop    rdi
   140011643:	ret    
   140011644:	int3   
   140011645:	int3   
   140011646:	int3   
   140011647:	int3   
   140011648:	int3   
   140011649:	int3   
   14001164a:	int3   
   14001164b:	int3   
   14001164c:	int3   
   14001164d:	int3   
   14001164e:	int3   
   14001164f:	int3   
   140011650:	mov    QWORD PTR [rsp+0x8],rbx
   140011655:	push   rdi
   140011656:	sub    rsp,0x20
   14001165a:	mov    rdi,r8
   14001165d:	mov    r8d,r9d
   140011660:	call   0x14000e270
   140011665:	mov    rdx,rdi
   140011668:	mov    rcx,rax
   14001166b:	mov    rbx,rax
   14001166e:	call   0x1400116c0
   140011673:	mov    rax,rbx
   140011676:	mov    rbx,QWORD PTR [rsp+0x30]
   14001167b:	add    rsp,0x20
   14001167f:	pop    rdi
   140011680:	ret    
   140011681:	int3   
   140011682:	int3   
   140011683:	int3   
   140011684:	int3   
   140011685:	int3   
   140011686:	int3   
   140011687:	int3   
   140011688:	int3   
   140011689:	int3   
   14001168a:	int3   
   14001168b:	int3   
   14001168c:	int3   
   14001168d:	int3   
   14001168e:	int3   
   14001168f:	int3   
   140011690:	rex push rbx
   140011692:	sub    rsp,0x20
   140011696:	call   0x14000e270
   14001169b:	mov    dl,0x1
   14001169d:	mov    rcx,rax
   1400116a0:	mov    rbx,rax
   1400116a3:	call   0x14000faa0
   1400116a8:	mov    rax,rbx
   1400116ab:	add    rsp,0x20
   1400116af:	pop    rbx
   1400116b0:	ret    
   1400116b1:	int3   
   1400116b2:	int3   
   1400116b3:	int3   
   1400116b4:	int3   
   1400116b5:	int3   
   1400116b6:	int3   
   1400116b7:	int3   
   1400116b8:	int3   
   1400116b9:	int3   
   1400116ba:	int3   
   1400116bb:	int3   
   1400116bc:	int3   
   1400116bd:	int3   
   1400116be:	int3   
   1400116bf:	int3   
   1400116c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400116c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400116ca:	push   rdi
   1400116cb:	sub    rsp,0x20
   1400116cf:	test   rdx,rdx
   1400116d2:	lea    rbx,[rip+0x210c7]        # 0x1400327a0
   1400116d9:	mov    rsi,rcx
   1400116dc:	cmovne rbx,rdx
   1400116e0:	or     rdi,0xffffffffffffffff
   1400116e4:	mov    rax,rdi
   1400116e7:	inc    rax
   1400116ea:	cmp    BYTE PTR [rbx+rax*1],0x0
   1400116ee:	jne    0x1400116e7
   1400116f0:	cmp    eax,0x7
   1400116f3:	jg     0x14001171f
   1400116f5:	mov    dl,0xa
   1400116f7:	call   0x14000faa0
   1400116fc:	lea    rcx,[rsi+0x8]
   140011700:	mov    r8d,0x8
   140011706:	mov    rdx,rbx
   140011709:	mov    rbx,QWORD PTR [rsp+0x30]
   14001170e:	mov    rsi,QWORD PTR [rsp+0x38]
   140011713:	add    rsp,0x20
   140011717:	pop    rdi
   140011718:	rex.W jmp QWORD PTR [rip+0x20e39]        # 0x140032558
   14001171f:	mov    dl,0x6
   140011721:	call   0x14000faa0
   140011726:	test   rbx,rbx
   140011729:	jne    0x140011730
   14001172b:	xor    edx,edx
   14001172d:	jmp    0x140011771
   14001172f:	nop
   140011730:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x0
   140011735:	lea    rdi,[rdi+0x1]
   140011739:	jne    0x140011730
   14001173b:	mov    rax,QWORD PTR [rip+0x20c4e]        # 0x140032390
   140011742:	lea    rdx,[rdi+0x1]
   140011746:	mov    rcx,QWORD PTR [rax]
   140011749:	mov    rax,QWORD PTR [rcx]
   14001174c:	call   QWORD PTR [rax+0x8]
   14001174f:	mov    rdx,rax
   140011752:	nop    DWORD PTR [rax+0x0]
   140011756:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011760:	movzx  ecx,BYTE PTR [rbx]
   140011763:	lea    rbx,[rbx+0x1]
   140011767:	mov    BYTE PTR [rax],cl
   140011769:	lea    rax,[rax+0x1]
   14001176d:	test   cl,cl
   14001176f:	jne    0x140011760
   140011771:	mov    rbx,QWORD PTR [rsp+0x30]
   140011776:	mov    QWORD PTR [rsi+0x8],rdx
   14001177a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001177f:	add    rsp,0x20
   140011783:	pop    rdi
   140011784:	ret    
   140011785:	int3   
   140011786:	int3   
   140011787:	int3   
   140011788:	int3   
   140011789:	int3   
   14001178a:	int3   
   14001178b:	int3   
   14001178c:	int3   
   14001178d:	int3   
   14001178e:	int3   
   14001178f:	int3   
   140011790:	mov    QWORD PTR [rsp+0x8],rbx
   140011795:	mov    QWORD PTR [rsp+0x10],rsi
   14001179a:	push   rdi
   14001179b:	sub    rsp,0x20
   14001179f:	mov    rdi,rdx
   1400117a2:	mov    ebx,r8d
   1400117a5:	mov    dl,0x7
   1400117a7:	mov    rsi,rcx
   1400117aa:	call   0x14000faa0
   1400117af:	mov    r8d,ebx
   1400117b2:	mov    rdx,rdi
   1400117b5:	mov    rcx,rsi
   1400117b8:	call   0x14000ce40
   1400117bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400117c2:	mov    QWORD PTR [rsi+0x8],rax
   1400117c6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400117cb:	add    rsp,0x20
   1400117cf:	pop    rdi
   1400117d0:	ret    
   1400117d1:	int3   
   1400117d2:	int3   
   1400117d3:	int3   
   1400117d4:	int3   
   1400117d5:	int3   
   1400117d6:	int3   
   1400117d7:	int3   
   1400117d8:	int3   
   1400117d9:	int3   
   1400117da:	int3   
   1400117db:	int3   
   1400117dc:	int3   
   1400117dd:	int3   
   1400117de:	int3   
   1400117df:	int3   
   1400117e0:	mov    dl,0x9
   1400117e2:	jmp    0x14000faa0
   1400117e7:	int3   
   1400117e8:	int3   
   1400117e9:	int3   
   1400117ea:	int3   
   1400117eb:	int3   
   1400117ec:	int3   
   1400117ed:	int3   
   1400117ee:	int3   
   1400117ef:	int3   
   1400117f0:	mov    dl,0x1
   1400117f2:	jmp    0x14000faa0
   1400117f7:	int3   
   1400117f8:	int3   
   1400117f9:	int3   
   1400117fa:	int3   
   1400117fb:	int3   
   1400117fc:	int3   
   1400117fd:	int3   
   1400117fe:	int3   
   1400117ff:	int3   
   140011800:	mov    QWORD PTR [rsp+0x8],rbx
   140011805:	push   rdi
   140011806:	sub    rsp,0x20
   14001180a:	mov    rdi,rdx
   14001180d:	mov    rbx,rcx
   140011810:	mov    dl,0x4
   140011812:	call   0x14000faa0
   140011817:	mov    QWORD PTR [rbx+0x8],rdi
   14001181b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011820:	add    rsp,0x20
   140011824:	pop    rdi
   140011825:	ret    
   140011826:	int3   
   140011827:	int3   
   140011828:	int3   
   140011829:	int3   
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	int3   
   14001182d:	int3   
   14001182e:	int3   
   14001182f:	int3   
   140011830:	sub    rsp,0x28
   140011834:	lea    rdx,[rip+0x24eed]        # 0x140036728
   14001183b:	call   QWORD PTR [rip+0x20d1f]        # 0x140032560
   140011841:	test   eax,eax
   140011843:	jne    0x14001184f
   140011845:	mov    eax,0x1
   14001184a:	add    rsp,0x28
   14001184e:	ret    
   14001184f:	xor    eax,eax
   140011851:	add    rsp,0x28
   140011855:	ret    
   140011856:	int3   
   140011857:	int3   
   140011858:	int3   
   140011859:	int3   
   14001185a:	int3   
   14001185b:	int3   
   14001185c:	int3   
   14001185d:	int3   
   14001185e:	int3   
   14001185f:	int3   
   140011860:	mov    QWORD PTR [rsp+0x8],rbx
   140011865:	mov    QWORD PTR [rsp+0x10],rbp
   14001186a:	mov    QWORD PTR [rsp+0x18],rsi
   14001186f:	mov    QWORD PTR [rsp+0x20],rdi
   140011874:	push   r14
   140011876:	sub    rsp,0x80
   14001187d:	mov    rdi,QWORD PTR [rsp+0xb0]
   140011885:	mov    rbx,r9
   140011888:	mov    rbp,r8
   14001188b:	mov    r14,rdx
   14001188e:	mov    rsi,rcx
   140011891:	test   BYTE PTR [rdi+0x19],0x1
   140011895:	jne    0x1400118ac
   140011897:	test   rbx,rbx
   14001189a:	je     0x14001195c
   1400118a0:	lea    rdx,[rip+0x24ee9]        # 0x140036790
   1400118a7:	jmp    0x140011954
   1400118ac:	mov    rcx,QWORD PTR [rcx+0x8]
   1400118b0:	mov    rdx,QWORD PTR [rip+0x34759]        # 0x140046010
   1400118b7:	mov    rax,QWORD PTR [rcx]
   1400118ba:	cmp    rax,QWORD PTR [rdx]
   1400118bd:	jne    0x140011948
   1400118c3:	mov    rax,QWORD PTR [rcx+0x8]
   1400118c7:	cmp    rax,QWORD PTR [rdx+0x8]
   1400118cb:	jne    0x140011948
   1400118cd:	mov    r8d,0x25
   1400118d3:	lea    rdx,[rsp+0x58]
   1400118d8:	call   QWORD PTR [rip+0x2099a]        # 0x140032278
   1400118de:	mov    rcx,QWORD PTR [r14+0x8]
   1400118e2:	lea    rdx,[rsp+0x30]
   1400118e7:	mov    r8d,0x25
   1400118ed:	call   QWORD PTR [rip+0x20985]        # 0x140032278
   1400118f3:	cmp    BYTE PTR [rsp+0x30],0x0
   1400118f8:	lea    rdx,[rip+0x24e01]        # 0x140036700
   1400118ff:	mov    rcx,QWORD PTR [r14]
   140011902:	lea    rax,[rsp+0x30]
   140011907:	mov    r8,QWORD PTR [rsi]
   14001190a:	lea    r9,[rsp+0x58]
   14001190f:	cmove  rax,rdx
   140011913:	cmp    BYTE PTR [rsp+0x58],0x0
   140011918:	mov    QWORD PTR [rsp+0x28],rax
   14001191d:	cmove  r9,rdx
   140011921:	mov    QWORD PTR [rsp+0x20],rcx
   140011926:	lea    rdx,[rip+0x24eb3]        # 0x1400367e0
   14001192d:	mov    rcx,rdi
   140011930:	call   0x140021a10
   140011935:	xor    r9d,r9d
   140011938:	mov    r8,rdi
   14001193b:	mov    rdx,rbx
   14001193e:	mov    rcx,rbp
   140011941:	call   0x140011980
   140011946:	jmp    0x14001195e
   140011948:	test   rbx,rbx
   14001194b:	je     0x14001195c
   14001194d:	lea    rdx,[rip+0x24e6c]        # 0x1400367c0
   140011954:	mov    rcx,rbx
   140011957:	call   0x14001aae0
   14001195c:	xor    al,al
   14001195e:	lea    r11,[rsp+0x80]
   140011966:	mov    rbx,QWORD PTR [r11+0x10]
   14001196a:	mov    rbp,QWORD PTR [r11+0x18]
   14001196e:	mov    rsi,QWORD PTR [r11+0x20]
   140011972:	mov    rdi,QWORD PTR [r11+0x28]
   140011976:	mov    rsp,r11
   140011979:	pop    r14
   14001197b:	ret    
   14001197c:	int3   
   14001197d:	int3   
   14001197e:	int3   
   14001197f:	int3   
   140011980:	mov    QWORD PTR [rsp+0x8],rbx
   140011985:	mov    BYTE PTR [rsp+0x20],r9b
   14001198a:	mov    QWORD PTR [rsp+0x10],rdx
   14001198f:	push   rbp
   140011990:	push   rsi
   140011991:	push   rdi
   140011992:	sub    rsp,0x250
   140011999:	movzx  esi,r9b
   14001199d:	mov    rdi,r8
   1400119a0:	mov    rbp,rcx
   1400119a3:	call   0x14000e9a0
   1400119a8:	mov    ecx,0xfffb
   1400119ad:	xor    ebx,ebx
   1400119af:	and    ax,cx
   1400119b2:	cmp    bx,ax
   1400119b5:	je     0x140011a26
   1400119b7:	mov    BYTE PTR [rsp+0x30],0x1
   1400119bc:	mov    esi,0x1
   1400119c1:	movzx  edx,si
   1400119c4:	mov    rcx,rbp
   1400119c7:	call   0x14000f1c0
   1400119cc:	test   al,al
   1400119ce:	je     0x140011a08
   1400119d0:	cmp    BYTE PTR [rsp+0x30],bl
   1400119d4:	jne    0x1400119e5
   1400119d6:	lea    rdx,[rip+0x24d57]        # 0x140036734
   1400119dd:	mov    rcx,rdi
   1400119e0:	call   0x140021a10
   1400119e5:	mov    r8,rbx
   1400119e8:	cmp    si,0x1
   1400119ec:	jne    0x1400119f5
   1400119ee:	lea    r8,[rip+0x24d33]        # 0x140036728
   1400119f5:	lea    rdx,[rip+0x2290c]        # 0x140034308
   1400119fc:	mov    rcx,rdi
   1400119ff:	call   0x140021a10
   140011a04:	mov    BYTE PTR [rsp+0x30],bl
   140011a08:	add    esi,esi
   140011a0a:	cmp    esi,0x4
   140011a0d:	jle    0x1400119c1
   140011a0f:	lea    rdx,[rip+0x24d22]        # 0x140036738
   140011a16:	mov    rcx,rdi
   140011a19:	call   0x140021a10
   140011a1e:	movzx  esi,BYTE PTR [rsp+0x288]
   140011a26:	mov    rcx,rbp
   140011a29:	call   0x14000f090
   140011a2e:	movzx  eax,al
   140011a31:	dec    eax
   140011a33:	cmp    eax,0x8
   140011a36:	ja     0x140011fe0
   140011a3c:	lea    rdx,[rip+0xfffffffffffee5bd]        # 0x140000000
   140011a43:	cdqe   
   140011a45:	mov    ecx,DWORD PTR [rdx+rax*4+0x11ff8]
   140011a4c:	add    rcx,rdx
   140011a4f:	jmp    rcx
   140011a51:	lea    rdx,[rip+0x24ce4]        # 0x14003673c
   140011a58:	mov    rcx,rdi
   140011a5b:	call   0x140021a10
   140011a60:	mov    al,0x1
   140011a62:	jmp    0x140011fe2
   140011a67:	mov    rcx,rbp
   140011a6a:	call   0x14000eb50
   140011a6f:	test   al,al
   140011a71:	lea    rcx,[rip+0x24994]        # 0x14003640c
   140011a78:	lea    r8,[rip+0x24995]        # 0x140036414
   140011a7f:	cmovne r8,rcx
   140011a83:	lea    rdx,[rip+0x2287e]        # 0x140034308
   140011a8a:	mov    rcx,rdi
   140011a8d:	call   0x140021a10
   140011a92:	mov    al,0x1
   140011a94:	jmp    0x140011fe2
   140011a99:	mov    rcx,rbp
   140011a9c:	call   0x14000ebb0
   140011aa1:	mov    r8,rax
   140011aa4:	lea    rdx,[rip+0x20d09]        # 0x1400327b4
   140011aab:	mov    rcx,rdi
   140011aae:	call   0x140021a10
   140011ab3:	mov    al,0x1
   140011ab5:	jmp    0x140011fe2
   140011aba:	mov    rcx,rbp
   140011abd:	call   0x14000f0c0
   140011ac2:	mov    r8,rax
   140011ac5:	lea    rdx,[rip+0x20cf0]        # 0x1400327bc
   140011acc:	mov    rcx,rdi
   140011acf:	call   0x140021a10
   140011ad4:	mov    al,0x1
   140011ad6:	jmp    0x140011fe2
   140011adb:	mov    rcx,rbp
   140011ade:	call   0x14000eba0
   140011ae3:	movaps xmm2,xmm0
   140011ae6:	lea    rdx,[rip+0x2492f]        # 0x14003641c
   140011aed:	movq   r8,xmm2
   140011af2:	lea    rcx,[rsp+0x50]
   140011af7:	call   0x1400015a0
   140011afc:	movzx  ecx,BYTE PTR [rsp+0x50]
   140011b01:	lea    rax,[rsp+0x50]
   140011b06:	test   cl,cl
   140011b08:	je     0x140011b42
   140011b0a:	nop    WORD PTR [rax+rax*1+0x0]
   140011b10:	cmp    cl,0x2e
   140011b13:	movzx  ecx,BYTE PTR [rax+0x1]
   140011b17:	cmove  rbx,rax
   140011b1b:	inc    rax
   140011b1e:	test   cl,cl
   140011b20:	jne    0x140011b10
   140011b22:	test   rbx,rbx
   140011b25:	je     0x140011b42
   140011b27:	dec    rax
   140011b2a:	inc    rbx
   140011b2d:	cmp    rax,rbx
   140011b30:	jbe    0x140011b42
   140011b32:	cmp    BYTE PTR [rax],0x30
   140011b35:	jne    0x140011b42
   140011b37:	mov    BYTE PTR [rax],0x0
   140011b3a:	dec    rax
   140011b3d:	cmp    rax,rbx
   140011b40:	ja     0x140011b32
   140011b42:	lea    rdx,[rsp+0x50]
   140011b47:	mov    rcx,rdi
   140011b4a:	call   0x140021ce0
   140011b4f:	mov    al,0x1
   140011b51:	jmp    0x140011fe2
   140011b56:	mov    edx,0x4
   140011b5b:	mov    rcx,rbp
   140011b5e:	call   0x14000f1c0
   140011b63:	test   al,al
   140011b65:	je     0x140011c2f
   140011b6b:	or     BYTE PTR [rdi+0x19],0x10
   140011b6f:	lea    rdx,[rip+0x24bce]        # 0x140036744
   140011b76:	mov    rcx,rdi
   140011b79:	call   0x140021a10
   140011b7e:	xor    edx,edx
   140011b80:	mov    rcx,rbp
   140011b83:	call   0x14000f030
   140011b88:	mov    rdx,rax
   140011b8b:	mov    QWORD PTR [rsp+0x38],rbx
   140011b90:	lea    rcx,[rsp+0x38]
   140011b95:	call   0x14001b3a0
   140011b9a:	lea    r9,[rip+0x24bab]        # 0x14003674c
   140011ba1:	mov    BYTE PTR [rsp+0x20],bl
   140011ba5:	lea    r8,[rip+0x24ba8]        # 0x140036754
   140011bac:	lea    rdx,[rsp+0x40]
   140011bb1:	lea    rcx,[rsp+0x38]
   140011bb6:	call   0x14001b1f0
   140011bbb:	mov    rsi,rax
   140011bbe:	mov    rbp,QWORD PTR [rax]
   140011bc1:	cmp    QWORD PTR [rsp+0x38],rbx
   140011bc6:	je     0x140011bd2
   140011bc8:	lea    rcx,[rsp+0x38]
   140011bcd:	call   0x14001b030
   140011bd2:	mov    QWORD PTR [rsp+0x38],rbp
   140011bd7:	mov    QWORD PTR [rsi],rbx
   140011bda:	cmp    QWORD PTR [rsp+0x40],rbx
   140011bdf:	je     0x140011beb
   140011be1:	lea    rcx,[rsp+0x40]
   140011be6:	call   0x14001b030
   140011beb:	lea    rcx,[rsp+0x38]
   140011bf0:	call   0x14001b050
   140011bf5:	mov    rdx,rax
   140011bf8:	mov    rcx,rdi
   140011bfb:	call   0x140021ce0
   140011c00:	lea    rdx,[rip+0x24b51]        # 0x140036758
   140011c07:	mov    rcx,rdi
   140011c0a:	call   0x140021a10
   140011c0f:	and    BYTE PTR [rdi+0x19],0xef
   140011c13:	cmp    QWORD PTR [rsp+0x38],rbx
   140011c18:	je     0x140011fcb
   140011c1e:	lea    rcx,[rsp+0x38]
   140011c23:	call   0x14001b030
   140011c28:	mov    al,0x1
   140011c2a:	jmp    0x140011fe2
   140011c2f:	xor    edx,edx
   140011c31:	mov    rcx,rbp
   140011c34:	call   0x14000f030
   140011c39:	mov    rbx,rax
   140011c3c:	call   0x140021190
   140011c41:	mov    rdx,rax
   140011c44:	mov    r8,rbx
   140011c47:	mov    rcx,rdi
   140011c4a:	call   0x140021b30
   140011c4f:	mov    al,0x1
   140011c51:	jmp    0x140011fe2
   140011c56:	mov    rcx,rbp
   140011c59:	call   0x14000eb10
   140011c5e:	cmp    eax,0x20
   140011c61:	mov    DWORD PTR [rsp+0x38],eax
   140011c65:	setle  sil
   140011c69:	mov    BYTE PTR [rsp+0x31],sil
   140011c6e:	cmp    BYTE PTR [rsp+0x288],bl
   140011c75:	je     0x140011c8d
   140011c77:	test   sil,sil
   140011c7a:	jne    0x140011c8d
   140011c7c:	lea    rdx,[rip+0x24add]        # 0x140036760
   140011c83:	mov    rcx,rdi
   140011c86:	call   0x140021a10
   140011c8b:	jmp    0x140011ca1
   140011c8d:	lea    rdx,[rip+0x24ad0]        # 0x140036764
   140011c94:	mov    rcx,rdi
   140011c97:	call   0x140021a10
   140011c9c:	test   sil,sil
   140011c9f:	jne    0x140011cb3
   140011ca1:	lea    rdx,[rip+0x22690]        # 0x140034338
   140011ca8:	mov    rcx,rdi
   140011cab:	call   0x140021ce0
   140011cb0:	inc    DWORD PTR [rdi+0x1c]
   140011cb3:	mov    esi,ebx
   140011cb5:	cmp    DWORD PTR [rsp+0x38],ebx
   140011cb9:	jle    0x140011d05
   140011cbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140011cc0:	test   esi,esi
   140011cc2:	jle    0x140011ce0
   140011cc4:	lea    rdx,[rip+0x2266d]        # 0x140034338
   140011ccb:	mov    rcx,rdi
   140011cce:	test   sil,0x1f
   140011cd2:	je     0x140011cdb
   140011cd4:	lea    rdx,[rip+0x21209]        # 0x140032ee4
   140011cdb:	call   0x140021a10
   140011ce0:	mov    edx,esi
   140011ce2:	mov    rcx,rbp
   140011ce5:	call   0x14000ea90
   140011cea:	movzx  r8d,al
   140011cee:	lea    rdx,[rip+0x24a73]        # 0x140036768
   140011cf5:	mov    rcx,rdi
   140011cf8:	call   0x140021a10
   140011cfd:	inc    esi
   140011cff:	cmp    esi,DWORD PTR [rsp+0x38]
   140011d03:	jl     0x140011cc0
   140011d05:	mov    rcx,rdi
   140011d08:	cmp    BYTE PTR [rsp+0x31],bl
   140011d0c:	jne    0x140011d39
   140011d0e:	lea    rdx,[rip+0x22623]        # 0x140034338
   140011d15:	call   0x140021a10
   140011d1a:	sub    DWORD PTR [rdi+0x1c],0x1
   140011d1e:	jns    0x140011d45
   140011d20:	lea    rdx,[rip+0x24a49]        # 0x140036770
   140011d27:	mov    DWORD PTR [rdi+0x1c],ebx
   140011d2a:	mov    rcx,rdi
   140011d2d:	call   0x140021ce0
   140011d32:	mov    al,0x1
   140011d34:	jmp    0x140011fe2
   140011d39:	lea    rdx,[rip+0x211a4]        # 0x140032ee4
   140011d40:	call   0x140021a10
   140011d45:	lea    rdx,[rip+0x24a24]        # 0x140036770
   140011d4c:	mov    rcx,rdi
   140011d4f:	call   0x140021ce0
   140011d54:	mov    al,0x1
   140011d56:	jmp    0x140011fe2
   140011d5b:	mov    rcx,rbp
   140011d5e:	call   0x14000ea00
   140011d63:	mov    rcx,rbp
   140011d66:	mov    DWORD PTR [rsp+0x38],eax
   140011d6a:	mov    esi,ebx
   140011d6c:	call   0x14000ea00
   140011d71:	test   eax,eax
   140011d73:	jle    0x140011d9b
   140011d75:	mov    edx,esi
   140011d77:	mov    rcx,rbp
   140011d7a:	call   0x14000e9b0
   140011d7f:	mov    rcx,rax
   140011d82:	call   0x14000f090
   140011d87:	dec    al
   140011d89:	cmp    al,0x4
   140011d8b:	ja     0x140011db1
   140011d8d:	mov    rcx,rbp
   140011d90:	inc    esi
   140011d92:	call   0x14000ea00
   140011d97:	cmp    esi,eax
   140011d99:	jl     0x140011d75
   140011d9b:	mov    al,0x1
   140011d9d:	cmp    DWORD PTR [rsp+0x38],0x4
   140011da2:	mov    BYTE PTR [rsp+0x31],al
   140011da6:	jg     0x140011db5
   140011da8:	test   al,al
   140011daa:	je     0x140011db5
   140011dac:	mov    sil,0x1
   140011daf:	jmp    0x140011db8
   140011db1:	xor    al,al
   140011db3:	jmp    0x140011d9d
   140011db5:	xor    sil,sil
   140011db8:	mov    BYTE PTR [rsp+0x30],sil
   140011dbd:	cmp    BYTE PTR [rsp+0x288],bl
   140011dc4:	je     0x140011ddc
   140011dc6:	test   sil,sil
   140011dc9:	jne    0x140011ddc
   140011dcb:	lea    rdx,[rip+0x249a2]        # 0x140036774
   140011dd2:	mov    rcx,rdi
   140011dd5:	call   0x140021a10
   140011dda:	jmp    0x140011df0
   140011ddc:	lea    rdx,[rip+0x24995]        # 0x140036778
   140011de3:	mov    rcx,rdi
   140011de6:	call   0x140021a10
   140011deb:	test   sil,sil
   140011dee:	jne    0x140011e02
   140011df0:	lea    rdx,[rip+0x22541]        # 0x140034338
   140011df7:	mov    rcx,rdi
   140011dfa:	call   0x140021ce0
   140011dff:	inc    DWORD PTR [rdi+0x1c]
   140011e02:	mov    esi,ebx
   140011e04:	cmp    DWORD PTR [rsp+0x38],ebx
   140011e08:	jle    0x140011e97
   140011e0e:	xchg   ax,ax
   140011e10:	test   esi,esi
   140011e12:	jle    0x140011e44
   140011e14:	cmp    BYTE PTR [rsp+0x31],bl
   140011e18:	je     0x140011e35
   140011e1a:	mov    eax,esi
   140011e1c:	and    eax,0x80000003
   140011e21:	jge    0x140011e2a
   140011e23:	dec    eax
   140011e25:	or     eax,0xfffffffc
   140011e28:	inc    eax
   140011e2a:	lea    rdx,[rip+0x210b3]        # 0x140032ee4
   140011e31:	test   eax,eax
   140011e33:	jne    0x140011e3c
   140011e35:	lea    rdx,[rip+0x224fc]        # 0x140034338
   140011e3c:	mov    rcx,rdi
   140011e3f:	call   0x140021a10
   140011e44:	mov    edx,esi
   140011e46:	mov    rcx,rbp
   140011e49:	call   0x14000e9b0
   140011e4e:	mov    rdx,QWORD PTR [rsp+0x278]
   140011e56:	mov    rcx,rax
   140011e59:	xor    r9d,r9d
   140011e5c:	mov    r8,rdi
   140011e5f:	call   0x140011980
   140011e64:	test   al,al
   140011e66:	je     0x140011fe0
   140011e6c:	cmp    BYTE PTR [rsp+0x30],bl
   140011e70:	je     0x140011e7c
   140011e72:	mov    eax,DWORD PTR [rsp+0x38]
   140011e76:	dec    eax
   140011e78:	cmp    esi,eax
   140011e7a:	je     0x140011e8b
   140011e7c:	lea    rdx,[rip+0x248f9]        # 0x14003677c
   140011e83:	mov    rcx,rdi
   140011e86:	call   0x140021a10
   140011e8b:	inc    esi
   140011e8d:	cmp    esi,DWORD PTR [rsp+0x38]
   140011e91:	jl     0x140011e10
   140011e97:	mov    rcx,rdi
   140011e9a:	cmp    BYTE PTR [rsp+0x30],bl
   140011e9e:	jne    0x140011ecb
   140011ea0:	lea    rdx,[rip+0x22491]        # 0x140034338
   140011ea7:	call   0x140021a10
   140011eac:	sub    DWORD PTR [rdi+0x1c],0x1
   140011eb0:	jns    0x140011ed7
   140011eb2:	lea    rdx,[rip+0x248b7]        # 0x140036770
   140011eb9:	mov    DWORD PTR [rdi+0x1c],ebx
   140011ebc:	mov    rcx,rdi
   140011ebf:	call   0x140021ce0
   140011ec4:	mov    al,0x1
   140011ec6:	jmp    0x140011fe2
   140011ecb:	lea    rdx,[rip+0x21012]        # 0x140032ee4
   140011ed2:	call   0x140021ce0
   140011ed7:	lea    rdx,[rip+0x24892]        # 0x140036770
   140011ede:	mov    rcx,rdi
   140011ee1:	call   0x140021ce0
   140011ee6:	mov    al,0x1
   140011ee8:	jmp    0x140011fe2
   140011eed:	test   sil,sil
   140011ef0:	je     0x140011f01
   140011ef2:	lea    rdx,[rip+0x2243f]        # 0x140034338
   140011ef9:	mov    rcx,rdi
   140011efc:	call   0x140021ce0
   140011f01:	lea    rdx,[rip+0x24878]        # 0x140036780
   140011f08:	mov    rcx,rdi
   140011f0b:	call   0x140021a10
   140011f10:	inc    DWORD PTR [rdi+0x1c]
   140011f13:	mov    rcx,rbp
   140011f16:	mov    QWORD PTR [rsp+0x40],rbx
   140011f1b:	call   0x14000ec10
   140011f20:	mov    DWORD PTR [rsp+0x38],eax
   140011f24:	mov    esi,ebx
   140011f26:	test   eax,eax
   140011f28:	jle    0x140011f9e
   140011f2a:	nop    WORD PTR [rax+rax*1+0x0]
   140011f30:	lea    r8,[rsp+0x40]
   140011f35:	mov    edx,esi
   140011f37:	mov    rcx,rbp
   140011f3a:	call   0x14000ed30
   140011f3f:	lea    rcx,[rsp+0x40]
   140011f44:	call   0x14001b050
   140011f49:	mov    rdx,rax
   140011f4c:	mov    rcx,rdi
   140011f4f:	call   0x140021ce0
   140011f54:	lea    rdx,[rip+0x24829]        # 0x140036784
   140011f5b:	mov    rcx,rdi
   140011f5e:	call   0x140021ce0
   140011f63:	mov    edx,esi
   140011f65:	mov    rcx,rbp
   140011f68:	call   0x14000ebc0
   140011f6d:	mov    rdx,QWORD PTR [rsp+0x278]
   140011f75:	mov    rcx,rax
   140011f78:	mov    r9b,0x1
   140011f7b:	mov    r8,rdi
   140011f7e:	call   0x140011980
   140011f83:	test   al,al
   140011f85:	je     0x140011fcf
   140011f87:	lea    rdx,[rip+0x223aa]        # 0x140034338
   140011f8e:	mov    rcx,rdi
   140011f91:	call   0x140021ce0
   140011f96:	inc    esi
   140011f98:	cmp    esi,DWORD PTR [rsp+0x38]
   140011f9c:	jl     0x140011f30
   140011f9e:	add    DWORD PTR [rdi+0x1c],0xffffffff
   140011fa2:	lea    rdx,[rip+0x247df]        # 0x140036788
   140011fa9:	mov    eax,DWORD PTR [rdi+0x1c]
   140011fac:	mov    rcx,rdi
   140011faf:	cmovs  eax,ebx
   140011fb2:	mov    DWORD PTR [rdi+0x1c],eax
   140011fb5:	call   0x140021ce0
   140011fba:	cmp    QWORD PTR [rsp+0x40],rbx
   140011fbf:	je     0x140011fcb
   140011fc1:	lea    rcx,[rsp+0x40]
   140011fc6:	call   0x14001b030
   140011fcb:	mov    al,0x1
   140011fcd:	jmp    0x140011fe2
   140011fcf:	cmp    QWORD PTR [rsp+0x40],rbx
   140011fd4:	je     0x140011fe0
   140011fd6:	lea    rcx,[rsp+0x40]
   140011fdb:	call   0x14001b030
   140011fe0:	xor    al,al
   140011fe2:	mov    rbx,QWORD PTR [rsp+0x270]
   140011fea:	add    rsp,0x250
   140011ff1:	pop    rdi
   140011ff2:	pop    rsi
   140011ff3:	pop    rbp
   140011ff4:	ret    
   140011ff5:	nop    DWORD PTR [rax]
   140011ff8:	push   rcx
   140011ff9:	sbb    al,BYTE PTR [rcx]
   140011ffb:	add    BYTE PTR [rdi+0x1a],ah
   140011ffe:	add    DWORD PTR [rax],eax
   140012000:	cdq    
   140012001:	sbb    al,BYTE PTR [rcx]
   140012003:	add    BYTE PTR [rdx-0x24fffee6],bh
   140012009:	sbb    al,BYTE PTR [rcx]
   14001200b:	add    BYTE PTR [rsi+0x1b],dl
   14001200e:	add    DWORD PTR [rax],eax
   140012010:	push   rsi
   140012011:	sbb    al,0x1
   140012013:	add    BYTE PTR [rbx+0x1d],bl
   140012016:	add    DWORD PTR [rax],eax
   140012018:	in     eax,dx
   140012019:	(bad)  
   14001201a:	add    DWORD PTR [rax],eax
   14001201c:	int3   
   14001201d:	int3   
   14001201e:	int3   
   14001201f:	int3   
   140012020:	rex push rbx
   140012022:	sub    rsp,0x20
   140012026:	mov    rax,QWORD PTR [rcx]
   140012029:	mov    rbx,rcx
   14001202c:	call   QWORD PTR [rax]
   14001202e:	cmp    eax,0x5
   140012031:	je     0x14001203d
   140012033:	xor    ecx,ecx
   140012035:	mov    eax,ecx
   140012037:	add    rsp,0x20
   14001203b:	pop    rbx
   14001203c:	ret    
   14001203d:	mov    rdx,QWORD PTR [rbx]
   140012040:	mov    rcx,rbx
   140012043:	call   QWORD PTR [rdx+0x30]
   140012046:	xor    ecx,ecx
   140012048:	cmp    eax,0x4
   14001204b:	cmovne rbx,rcx
   14001204f:	mov    rax,rbx
   140012052:	add    rsp,0x20
   140012056:	pop    rbx
   140012057:	ret    
   140012058:	int3   
   140012059:	int3   
   14001205a:	int3   
   14001205b:	int3   
   14001205c:	int3   
   14001205d:	int3   
   14001205e:	int3   
   14001205f:	int3   
   140012060:	mov    QWORD PTR [rsp+0x10],rbx
   140012065:	mov    QWORD PTR [rsp+0x18],rsi
   14001206a:	mov    QWORD PTR [rsp+0x20],rdi
   14001206f:	push   r14
   140012071:	sub    rsp,0x20
   140012075:	mov    rdi,rcx
   140012078:	mov    r14,r9
   14001207b:	mov    rcx,QWORD PTR [r8+0x18]
   14001207f:	mov    rsi,r8
   140012082:	mov    rbx,rdx
   140012085:	test   rcx,rcx
   140012088:	je     0x1400120b4
   14001208a:	mov    rax,QWORD PTR [rcx]
   14001208d:	xor    edx,edx
   14001208f:	call   QWORD PTR [rax]
   140012091:	test   rax,rax
   140012094:	je     0x1400120b4
   140012096:	mov    rdx,QWORD PTR [rax]
   140012099:	mov    rcx,rax
   14001209c:	call   QWORD PTR [rdx+0x30]
   14001209f:	mov    rcx,QWORD PTR [rsp+0x60]
   1400120a4:	mov    rdx,rdi
   1400120a7:	mov    r8,rax
   1400120aa:	call   0x140012ed0
   1400120af:	jmp    0x140012316
   1400120b4:	mov    rax,QWORD PTR [rsi]
   1400120b7:	mov    rcx,rsi
   1400120ba:	mov    QWORD PTR [rsp+0x30],rbp
   1400120bf:	call   QWORD PTR [rax]
   1400120c1:	cmp    eax,0x6
   1400120c4:	ja     0x140012309
   1400120ca:	cdqe   
   1400120cc:	lea    rbp,[rip+0xfffffffffffedf2d]        # 0x140000000
   1400120d3:	mov    eax,DWORD PTR [rbp+rax*4+0x1232c]
   1400120da:	add    rax,rbp
   1400120dd:	jmp    rax
   1400120df:	mov    rcx,rsi
   1400120e2:	call   0x140012020
   1400120e7:	jmp    0x1400121ee
   1400120ec:	mov    eax,DWORD PTR [rsi+0x30]
   1400120ef:	add    eax,0xfffffffe
   1400120f2:	cmp    eax,0xb
   1400120f5:	ja     0x140012309
   1400120fb:	cdqe   
   1400120fd:	mov    ecx,DWORD PTR [rbp+rax*4+0x12348]
   140012104:	add    rcx,rbp
   140012107:	jmp    rcx
   140012109:	mov    dl,0x3
   14001210b:	mov    rcx,rdi
   14001210e:	call   0x14000ddb0
   140012113:	mov    rdx,QWORD PTR [r14]
   140012116:	test   rdx,rdx
   140012119:	je     0x140012311
   14001211f:	mov    rcx,rdi
   140012122:	call   0x140010350
   140012127:	jmp    0x140012311
   14001212c:	mov    dl,0x4
   14001212e:	mov    rcx,rdi
   140012131:	call   0x14000ddb0
   140012136:	mov    rdx,QWORD PTR [r14]
   140012139:	test   rdx,rdx
   14001213c:	je     0x140012311
   140012142:	mov    rcx,rdi
   140012145:	call   0x140010350
   14001214a:	jmp    0x140012311
   14001214f:	mov    dl,0x2
   140012151:	jmp    0x1400122ef
   140012156:	mov    rbx,QWORD PTR [rsi+0x38]
   14001215a:	call   0x140012850
   14001215f:	cmp    rbx,rax
   140012162:	je     0x1400122ed
   140012168:	mov    r9,QWORD PTR [rsi+0x38]
   14001216c:	mov    rdx,rdi
   14001216f:	mov    r8d,DWORD PTR [rsi+0x30]
   140012173:	mov    rcx,QWORD PTR [rsp+0x50]
   140012178:	call   0x140012e10
   14001217d:	jmp    0x140012311
   140012182:	mov    rbx,QWORD PTR [rsi+0x30]
   140012186:	mov    rcx,rbx
   140012189:	mov    rax,QWORD PTR [rbx]
   14001218c:	call   QWORD PTR [rax]
   14001218e:	cmp    eax,0x5
   140012191:	jne    0x140012309
   140012197:	mov    rcx,rbx
   14001219a:	jmp    0x1400121e9
   14001219c:	mov    rax,QWORD PTR [rsi]
   14001219f:	mov    rcx,rsi
   1400121a2:	call   QWORD PTR [rax+0x30]
   1400121a5:	cmp    eax,0x1
   1400121a8:	jne    0x14001220c
   1400121aa:	mov    ecx,DWORD PTR [rsi+0x40]
   1400121ad:	sub    ecx,0xfa3
   1400121b3:	je     0x1400121d3
   1400121b5:	cmp    ecx,eax
   1400121b7:	jne    0x1400122ed
   1400121bd:	mov    r8,QWORD PTR [rsi+0x48]
   1400121c1:	mov    rdx,rdi
   1400121c4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400121c9:	call   0x140012ed0
   1400121ce:	jmp    0x140012311
   1400121d3:	mov    rcx,QWORD PTR [rsi+0x48]
   1400121d7:	mov    rax,QWORD PTR [rcx]
   1400121da:	call   QWORD PTR [rax]
   1400121dc:	cmp    eax,0x5
   1400121df:	jne    0x140012309
   1400121e5:	mov    rcx,QWORD PTR [rsi+0x48]
   1400121e9:	call   0x140012020
   1400121ee:	mov    rbx,QWORD PTR [rax+0x30]
   1400121f2:	mov    dl,0x9
   1400121f4:	mov    rcx,rdi
   1400121f7:	call   0x14000ddb0
   1400121fc:	mov    rdx,rbx
   1400121ff:	mov    rcx,rdi
   140012202:	call   0x140013580
   140012207:	jmp    0x140012311
   14001220c:	mov    eax,DWORD PTR [rsi+0x40]
   14001220f:	add    eax,0xfffff830
   140012214:	cmp    eax,0xa
   140012217:	ja     0x1400122ed
   14001221d:	mov    ecx,DWORD PTR [rbp+rax*4+0x12378]
   140012224:	add    rcx,rbp
   140012227:	jmp    rcx
   140012229:	mov    dl,0x5
   14001222b:	mov    rcx,rdi
   14001222e:	call   0x14000ddb0
   140012233:	mov    rdx,QWORD PTR [r14]
   140012236:	test   rdx,rdx
   140012239:	je     0x140012311
   14001223f:	mov    rcx,rdi
   140012242:	call   0x140010350
   140012247:	jmp    0x140012311
   14001224c:	call   0x140012910
   140012251:	mov    rcx,QWORD PTR [rsp+0x50]
   140012256:	mov    r8d,0x2
   14001225c:	mov    r9,rax
   14001225f:	mov    rdx,rdi
   140012262:	call   0x140012e10
   140012267:	jmp    0x140012311
   14001226c:	call   0x140012910
   140012271:	mov    rcx,QWORD PTR [rsp+0x50]
   140012276:	mov    r8d,0x3
   14001227c:	mov    r9,rax
   14001227f:	mov    rdx,rdi
   140012282:	call   0x140012e10
   140012287:	jmp    0x140012311
   14001228c:	call   0x140012910
   140012291:	jmp    0x1400122d5
   140012293:	call   0x140012910
   140012298:	jmp    0x1400122b8
   14001229a:	test   rbx,rbx
   14001229d:	je     0x1400122d0
   14001229f:	lea    rcx,[rbx+0x20]
   1400122a3:	lea    rdx,[rip+0x24586]        # 0x140036830
   1400122aa:	call   0x140013810
   1400122af:	test   al,al
   1400122b1:	je     0x1400122d0
   1400122b3:	call   0x1400128b0
   1400122b8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400122bd:	mov    r9,rax
   1400122c0:	mov    r8d,0x3
   1400122c6:	mov    rdx,rdi
   1400122c9:	call   0x140012e10
   1400122ce:	jmp    0x140012311
   1400122d0:	call   0x1400128b0
   1400122d5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400122da:	mov    r8d,0x4
   1400122e0:	mov    r9,rax
   1400122e3:	mov    rdx,rdi
   1400122e6:	call   0x140012e10
   1400122eb:	jmp    0x140012311
   1400122ed:	mov    dl,0x6
   1400122ef:	mov    rcx,rdi
   1400122f2:	call   0x14000ddb0
   1400122f7:	mov    rdx,QWORD PTR [r14]
   1400122fa:	test   rdx,rdx
   1400122fd:	je     0x140012311
   1400122ff:	mov    rcx,rdi
   140012302:	call   0x140010350
   140012307:	jmp    0x140012311
   140012309:	mov    rcx,rdi
   14001230c:	call   0x1400117f0
   140012311:	mov    rbp,QWORD PTR [rsp+0x30]
   140012316:	mov    rbx,QWORD PTR [rsp+0x38]
   14001231b:	mov    rsi,QWORD PTR [rsp+0x40]
   140012320:	mov    rdi,QWORD PTR [rsp+0x48]
   140012325:	add    rsp,0x20
   140012329:	pop    r14
   14001232b:	ret    
   14001232c:	in     al,dx
   14001232d:	and    BYTE PTR [rcx],al
   14001232f:	add    BYTE PTR [rdx+0x9000121],al
   140012335:	and    eax,DWORD PTR [rcx]
   140012337:	add    BYTE PTR [rsi+0x21],dl
   14001233a:	add    DWORD PTR [rax],eax
   14001233c:	pushf  
   14001233d:	and    DWORD PTR [rcx],eax
   14001233f:	add    bh,bl
   140012341:	and    BYTE PTR [rcx],al
   140012343:	add    ch,ch
   140012345:	and    al,BYTE PTR [rcx]
   140012347:	add    BYTE PTR [rcx],cl
   140012349:	and    DWORD PTR [rcx],eax
   14001234b:	add    BYTE PTR [rcx],cl
   14001234d:	and    DWORD PTR [rcx],eax
   14001234f:	add    BYTE PTR [rcx],cl
   140012351:	and    DWORD PTR [rcx],eax
   140012353:	add    BYTE PTR [rcx],cl
   140012355:	and    DWORD PTR [rcx],eax
   140012357:	add    BYTE PTR [rcx],cl
   140012359:	and    DWORD PTR [rcx],eax
   14001235b:	add    BYTE PTR [rcx],cl
   14001235d:	and    DWORD PTR [rcx],eax
   14001235f:	add    BYTE PTR [rcx],cl
   140012361:	and    DWORD PTR [rcx],eax
   140012363:	add    BYTE PTR [rcx],cl
   140012365:	and    DWORD PTR [rcx],eax
   140012367:	add    BYTE PTR [rcx+riz*1],ch
   14001236a:	add    DWORD PTR [rax],eax
   14001236c:	sub    DWORD PTR [rdx],esp
   14001236e:	add    DWORD PTR [rax],eax
   140012370:	sub    DWORD PTR [rdx],esp
   140012372:	add    DWORD PTR [rax],eax
   140012374:	rex.WRXB and QWORD PTR [r9],r8
   140012377:	add    BYTE PTR [rdx+0x4c000122],bl
   14001237d:	and    al,BYTE PTR [rcx]
   14001237f:	add    BYTE PTR [rdx+riz*1+0x22ed0001],cl
   140012386:	add    DWORD PTR [rax],eax
   140012388:	in     eax,dx
   140012389:	and    al,BYTE PTR [rcx]
   14001238b:	add    BYTE PTR [rbx-0x12fffede],dl
   140012391:	and    al,BYTE PTR [rcx]
   140012393:	add    ch,ch
   140012395:	and    al,BYTE PTR [rcx]
   140012397:	add    BYTE PTR [rcx],ch
   140012399:	and    al,BYTE PTR [rcx]
   14001239b:	add    ch,ch
   14001239d:	and    al,BYTE PTR [rcx]
   14001239f:	add    BYTE PTR [rdx+riz*1+0x1],ch
   1400123a3:	add    ah,cl
   1400123a5:	int3   
   1400123a6:	int3   
   1400123a7:	int3   
   1400123a8:	int3   
   1400123a9:	int3   
   1400123aa:	int3   
   1400123ab:	int3   
   1400123ac:	int3   
   1400123ad:	int3   
   1400123ae:	int3   
   1400123af:	int3   
   1400123b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400123b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400123ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400123bf:	push   rdi
   1400123c0:	sub    rsp,0x20
   1400123c4:	mov    rsi,rcx
   1400123c7:	mov    rdi,r8
   1400123ca:	mov    rcx,QWORD PTR [r8+0x18]
   1400123ce:	mov    rbx,rdx
   1400123d1:	test   rcx,rcx
   1400123d4:	je     0x140012400
   1400123d6:	mov    rax,QWORD PTR [rcx]
   1400123d9:	xor    edx,edx
   1400123db:	call   QWORD PTR [rax]
   1400123dd:	test   rax,rax
   1400123e0:	je     0x140012400
   1400123e2:	mov    rdx,QWORD PTR [rax]
   1400123e5:	mov    rcx,rax
   1400123e8:	call   QWORD PTR [rdx+0x30]
   1400123eb:	mov    rcx,QWORD PTR [rsp+0x60]
   1400123f0:	mov    rdx,rsi
   1400123f3:	mov    r8,rax
   1400123f6:	call   0x140012d90
   1400123fb:	jmp    0x140012571
   140012400:	mov    rax,QWORD PTR [rdi]
   140012403:	mov    rcx,rdi
   140012406:	call   QWORD PTR [rax]
   140012408:	cmp    eax,0x6
   14001240b:	ja     0x140012571
   140012411:	cdqe   
   140012413:	lea    rbp,[rip+0xfffffffffffedbe6]        # 0x140000000
   14001241a:	mov    eax,DWORD PTR [rbp+rax*4+0x12588]
   140012421:	add    rax,rbp
   140012424:	jmp    rax
   140012426:	mov    rcx,rdi
   140012429:	call   0x140012020
   14001242e:	mov    r8,QWORD PTR [rax+0x30]
   140012432:	mov    rdx,rsi
   140012435:	mov    rcx,QWORD PTR [rsp+0x58]
   14001243a:	call   0x140012970
   14001243f:	jmp    0x140012571
   140012444:	mov    eax,DWORD PTR [rdi+0x30]
   140012447:	add    eax,0xfffffffe
   14001244a:	cmp    eax,0xb
   14001244d:	ja     0x140012571
   140012453:	cdqe   
   140012455:	mov    ecx,DWORD PTR [rbp+rax*4+0x125a4]
   14001245c:	add    rcx,rbp
   14001245f:	jmp    rcx
   140012461:	mov    rbx,QWORD PTR [rdi+0x38]
   140012465:	call   0x140012850
   14001246a:	cmp    rbx,rax
   14001246d:	je     0x140012571
   140012473:	mov    r9,QWORD PTR [rdi+0x38]
   140012477:	mov    r8d,DWORD PTR [rdi+0x30]
   14001247b:	jmp    0x140012564
   140012480:	mov    rbx,QWORD PTR [rdi+0x30]
   140012484:	mov    rcx,rbx
   140012487:	mov    rax,QWORD PTR [rbx]
   14001248a:	call   QWORD PTR [rax]
   14001248c:	cmp    eax,0x5
   14001248f:	jne    0x140012571
   140012495:	mov    rcx,rbx
   140012498:	call   0x140012020
   14001249d:	jmp    0x14001242e
   14001249f:	mov    rax,QWORD PTR [rdi]
   1400124a2:	mov    rcx,rdi
   1400124a5:	call   QWORD PTR [rax+0x30]
   1400124a8:	cmp    eax,0x1
   1400124ab:	jne    0x1400124f6
   1400124ad:	mov    ecx,DWORD PTR [rdi+0x40]
   1400124b0:	sub    ecx,0xfa3
   1400124b6:	je     0x1400124d6
   1400124b8:	cmp    ecx,eax
   1400124ba:	jne    0x140012571
   1400124c0:	mov    r8,QWORD PTR [rdi+0x48]
   1400124c4:	mov    rdx,rsi
   1400124c7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400124cc:	call   0x140012d90
   1400124d1:	jmp    0x140012571
   1400124d6:	mov    rcx,QWORD PTR [rdi+0x48]
   1400124da:	mov    rax,QWORD PTR [rcx]
   1400124dd:	call   QWORD PTR [rax]
   1400124df:	cmp    eax,0x5
   1400124e2:	jne    0x140012571
   1400124e8:	mov    rcx,QWORD PTR [rdi+0x48]
   1400124ec:	call   0x140012020
   1400124f1:	jmp    0x14001242e
   1400124f6:	mov    eax,DWORD PTR [rdi+0x40]
   1400124f9:	add    eax,0xfffff830
   1400124fe:	cmp    eax,0xa
   140012501:	ja     0x140012571
   140012503:	mov    ecx,DWORD PTR [rbp+rax*4+0x125d4]
   14001250a:	add    rcx,rbp
   14001250d:	jmp    rcx
   14001250f:	call   0x140012910
   140012514:	mov    r8d,0x2
   14001251a:	jmp    0x140012561
   14001251c:	call   0x140012910
   140012521:	mov    r8d,0x3
   140012527:	jmp    0x140012561
   140012529:	call   0x140012910
   14001252e:	jmp    0x14001255b
   140012530:	test   rbx,rbx
   140012533:	je     0x140012556
   140012535:	lea    rcx,[rbx+0x20]
   140012539:	lea    rdx,[rip+0x242f0]        # 0x140036830
   140012540:	call   0x140013810
   140012545:	test   al,al
   140012547:	je     0x140012556
   140012549:	call   0x1400128b0
   14001254e:	mov    r8d,0x3
   140012554:	jmp    0x140012561
   140012556:	call   0x1400128b0
   14001255b:	mov    r8d,0x4
   140012561:	mov    r9,rax
   140012564:	mov    rcx,QWORD PTR [rsp+0x50]
   140012569:	mov    rdx,rsi
   14001256c:	call   0x140012d10
   140012571:	mov    rbx,QWORD PTR [rsp+0x30]
   140012576:	mov    rbp,QWORD PTR [rsp+0x38]
   14001257b:	mov    rsi,QWORD PTR [rsp+0x40]
   140012580:	add    rsp,0x20
   140012584:	pop    rdi
   140012585:	ret    
   140012586:	xchg   ax,ax
   140012588:	rex.R and al,0x1
   14001258b:	add    BYTE PTR [rax+0x71000124],al
   140012591:	and    eax,0x24610001
   140012596:	add    DWORD PTR [rax],eax
   140012598:	lahf   
   140012599:	and    al,0x1
   14001259b:	add    BYTE PTR [rsi],ah
   14001259d:	and    al,0x1
   14001259f:	add    BYTE PTR [rcx+0x25],dh
   1400125a2:	add    DWORD PTR [rax],eax
   1400125a4:	jno    0x1400125cb
   1400125a6:	add    DWORD PTR [rax],eax
   1400125a8:	jno    0x1400125cf
   1400125aa:	add    DWORD PTR [rax],eax
   1400125ac:	jno    0x1400125d3
   1400125ae:	add    DWORD PTR [rax],eax
   1400125b0:	jno    0x1400125d7
   1400125b2:	add    DWORD PTR [rax],eax
   1400125b4:	jno    0x1400125db
   1400125b6:	add    DWORD PTR [rax],eax
   1400125b8:	jno    0x1400125df
   1400125ba:	add    DWORD PTR [rax],eax
   1400125bc:	jno    0x1400125e3
   1400125be:	add    DWORD PTR [rax],eax
   1400125c0:	jno    0x1400125e7
   1400125c2:	add    DWORD PTR [rax],eax
   1400125c4:	jno    0x1400125eb
   1400125c6:	add    DWORD PTR [rax],eax
   1400125c8:	jno    0x1400125ef
   1400125ca:	add    DWORD PTR [rax],eax
   1400125cc:	jno    0x1400125f3
   1400125ce:	add    DWORD PTR [rax],eax
   1400125d0:	jno    0x1400125f7
   1400125d2:	add    DWORD PTR [rax],eax
   1400125d4:	xor    BYTE PTR [rip+0x250f0001],ah        # 0x1651025db
   1400125da:	add    DWORD PTR [rax],eax
   1400125dc:	sub    DWORD PTR [rip+0x25710001],esp        # 0x1657225e3
   1400125e2:	add    DWORD PTR [rax],eax
   1400125e4:	jno    0x14001260b
   1400125e6:	add    DWORD PTR [rax],eax
   1400125e8:	sbb    al,0x25
   1400125ea:	add    DWORD PTR [rax],eax
   1400125ec:	jno    0x140012613
   1400125ee:	add    DWORD PTR [rax],eax
   1400125f0:	jno    0x140012617
   1400125f2:	add    DWORD PTR [rax],eax
   1400125f4:	jno    0x14001261b
   1400125f6:	add    DWORD PTR [rax],eax
   1400125f8:	jno    0x14001261f
   1400125fa:	add    DWORD PTR [rax],eax
   1400125fc:	sbb    al,0x25
   1400125fe:	add    DWORD PTR [rax],eax
   140012600:	mov    QWORD PTR [rsp+0x10],rbx
   140012605:	mov    QWORD PTR [rsp+0x18],rbp
   14001260a:	mov    QWORD PTR [rsp+0x20],rsi
   14001260f:	push   rdi
   140012610:	sub    rsp,0x20
   140012614:	mov    rdi,rcx
   140012617:	mov    rsi,r9
   14001261a:	mov    rcx,QWORD PTR [r8+0x18]
   14001261e:	mov    rbx,r8
   140012621:	mov    rbp,rdx
   140012624:	test   rcx,rcx
   140012627:	je     0x140012659
   140012629:	mov    rax,QWORD PTR [rcx]
   14001262c:	xor    edx,edx
   14001262e:	call   QWORD PTR [rax]
   140012630:	test   rax,rax
   140012633:	je     0x140012659
   140012635:	mov    rdx,QWORD PTR [rax]
   140012638:	mov    rcx,rax
   14001263b:	call   QWORD PTR [rdx+0x30]
   14001263e:	mov    rbx,QWORD PTR [rsp+0x60]
   140012643:	mov    rcx,rdi
   140012646:	mov    rdx,QWORD PTR [rbx]
   140012649:	call   0x14000df80
   14001264e:	mov    rcx,QWORD PTR [rbx+0x8]
   140012652:	mov    BYTE PTR [rcx],al
   140012654:	jmp    0x1400127c0
   140012659:	mov    rax,QWORD PTR [rbx]
   14001265c:	mov    rcx,rbx
   14001265f:	call   QWORD PTR [rax]
   140012661:	cmp    eax,0x6
   140012664:	ja     0x1400127c0
   14001266a:	cdqe   
   14001266c:	mov    QWORD PTR [rsp+0x30],r14
   140012671:	lea    r14,[rip+0xfffffffffffed988]        # 0x140000000
   140012678:	mov    eax,DWORD PTR [r14+rax*4+0x127d8]
   140012680:	add    rax,r14
   140012683:	jmp    rax
   140012685:	mov    rcx,rbx
   140012688:	call   0x140012020
   14001268d:	jmp    0x140012746
   140012692:	mov    eax,DWORD PTR [rbx+0x30]
   140012695:	add    eax,0xfffffffe
   140012698:	cmp    eax,0xb
   14001269b:	ja     0x1400127bb
   1400126a1:	cdqe   
   1400126a3:	mov    ecx,DWORD PTR [r14+rax*4+0x127f4]
   1400126ab:	add    rcx,r14
   1400126ae:	jmp    rcx
   1400126b0:	mov    rbx,QWORD PTR [rbx+0x38]
   1400126b4:	call   0x140012850
   1400126b9:	mov    rcx,rdi
   1400126bc:	cmp    rbx,rax
   1400126bf:	je     0x1400127ad
   1400126c5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400126ca:	mov    rdx,QWORD PTR [rbx]
   1400126cd:	call   0x14000df80
   1400126d2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400126d6:	jmp    0x1400127b9
   1400126db:	mov    rbx,QWORD PTR [rbx+0x30]
   1400126df:	mov    rcx,rbx
   1400126e2:	mov    rax,QWORD PTR [rbx]
   1400126e5:	call   QWORD PTR [rax]
   1400126e7:	cmp    eax,0x5
   1400126ea:	jne    0x1400127bb
   1400126f0:	mov    rcx,rbx
   1400126f3:	jmp    0x140012741
   1400126f5:	mov    rax,QWORD PTR [rbx]
   1400126f8:	mov    rcx,rbx
   1400126fb:	call   QWORD PTR [rax+0x30]
   1400126fe:	cmp    eax,0x1
   140012701:	jne    0x140012759
   140012703:	mov    ecx,DWORD PTR [rbx+0x40]
   140012706:	sub    ecx,0xfa3
   14001270c:	je     0x14001272f
   14001270e:	cmp    ecx,eax
   140012710:	mov    rcx,rdi
   140012713:	jne    0x1400127ad
   140012719:	mov    rbx,QWORD PTR [rsp+0x60]
   14001271e:	mov    rdx,QWORD PTR [rbx]
   140012721:	call   0x14000df80
   140012726:	mov    rcx,QWORD PTR [rbx+0x8]
   14001272a:	jmp    0x1400127b9
   14001272f:	mov    rcx,QWORD PTR [rbx+0x48]
   140012733:	mov    rax,QWORD PTR [rcx]
   140012736:	call   QWORD PTR [rax]
   140012738:	cmp    eax,0x5
   14001273b:	jne    0x1400127bb
   14001273d:	mov    rcx,QWORD PTR [rbx+0x48]
   140012741:	call   0x140012020
   140012746:	mov    r8,QWORD PTR [rax+0x30]
   14001274a:	mov    rdx,rdi
   14001274d:	mov    rcx,QWORD PTR [rsp+0x58]
   140012752:	call   0x140012b60
   140012757:	jmp    0x1400127bb
   140012759:	mov    eax,DWORD PTR [rbx+0x40]
   14001275c:	add    eax,0xfffff830
   140012761:	cmp    eax,0xa
   140012764:	ja     0x1400127aa
   140012766:	mov    ecx,DWORD PTR [r14+rax*4+0x12824]
   14001276e:	add    rcx,r14
   140012771:	jmp    rcx
   140012773:	call   0x140012910
   140012778:	mov    rbx,QWORD PTR [rsp+0x50]
   14001277d:	mov    rcx,rdi
   140012780:	mov    rdx,QWORD PTR [rbx]
   140012783:	call   0x14000df80
   140012788:	mov    rcx,QWORD PTR [rbx+0x8]
   14001278c:	jmp    0x1400127b9
   14001278e:	test   rbp,rbp
   140012791:	je     0x1400127a3
   140012793:	lea    rcx,[rbp+0x20]
   140012797:	lea    rdx,[rip+0x24092]        # 0x140036830
   14001279e:	call   0x140013810
   1400127a3:	call   0x1400128b0
   1400127a8:	jmp    0x140012778
   1400127aa:	mov    rcx,rdi
   1400127ad:	mov    rdx,QWORD PTR [rsi]
   1400127b0:	call   0x14000df80
   1400127b5:	mov    rcx,QWORD PTR [rsi+0x8]
   1400127b9:	mov    BYTE PTR [rcx],al
   1400127bb:	mov    r14,QWORD PTR [rsp+0x30]
   1400127c0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400127c5:	mov    rbp,QWORD PTR [rsp+0x40]
   1400127ca:	mov    rsi,QWORD PTR [rsp+0x48]
   1400127cf:	add    rsp,0x20
   1400127d3:	pop    rdi
   1400127d4:	ret    
   1400127d5:	nop    DWORD PTR [rax]
   1400127d8:	xchg   edx,eax
   1400127d9:	add    DWORD PTR es:[rax],eax
   1400127dc:	(bad)  [rsi]
   1400127de:	add    DWORD PTR [rax],eax
   1400127e0:	mov    ebx,0xb0000127
   1400127e5:	add    DWORD PTR es:[rax],eax
   1400127e8:	cmc    
   1400127e9:	add    DWORD PTR es:[rax],eax
   1400127ec:	test   DWORD PTR [rsi],esp
   1400127ee:	add    DWORD PTR [rax],eax
   1400127f0:	stos   BYTE PTR es:[rdi],al
   1400127f1:	(bad)  
   1400127f2:	add    DWORD PTR [rax],eax
   1400127f4:	stos   BYTE PTR es:[rdi],al
   1400127f5:	(bad)  
   1400127f6:	add    DWORD PTR [rax],eax
   1400127f8:	stos   BYTE PTR es:[rdi],al
   1400127f9:	(bad)  
   1400127fa:	add    DWORD PTR [rax],eax
   1400127fc:	stos   BYTE PTR es:[rdi],al
   1400127fd:	(bad)  
   1400127fe:	add    DWORD PTR [rax],eax
   140012800:	stos   BYTE PTR es:[rdi],al
   140012801:	(bad)  
   140012802:	add    DWORD PTR [rax],eax
   140012804:	stos   BYTE PTR es:[rdi],al
   140012805:	(bad)  
   140012806:	add    DWORD PTR [rax],eax
   140012808:	stos   BYTE PTR es:[rdi],al
   140012809:	(bad)  
   14001280a:	add    DWORD PTR [rax],eax
   14001280c:	stos   BYTE PTR es:[rdi],al
   14001280d:	(bad)  
   14001280e:	add    DWORD PTR [rax],eax
   140012810:	stos   BYTE PTR es:[rdi],al
   140012811:	(bad)  
   140012812:	add    DWORD PTR [rax],eax
   140012814:	stos   BYTE PTR es:[rdi],al
   140012815:	(bad)  
   140012816:	add    DWORD PTR [rax],eax
   140012818:	stos   BYTE PTR es:[rdi],al
   140012819:	(bad)  
   14001281a:	add    DWORD PTR [rax],eax
   14001281c:	stos   BYTE PTR es:[rdi],al
   14001281d:	(bad)  
   14001281e:	add    DWORD PTR [rax],eax
   140012820:	stos   BYTE PTR es:[rdi],al
   140012821:	(bad)  
   140012822:	add    DWORD PTR [rax],eax
   140012824:	mov    fs,WORD PTR [rdi]
   140012826:	add    DWORD PTR [rax],eax
   140012828:	jae    0x140012851
   14001282a:	add    DWORD PTR [rax],eax
   14001282c:	jae    0x140012855
   14001282e:	add    DWORD PTR [rax],eax
   140012830:	stos   BYTE PTR es:[rdi],al
   140012831:	(bad)  
   140012832:	add    DWORD PTR [rax],eax
   140012834:	stos   BYTE PTR es:[rdi],al
   140012835:	(bad)  
   140012836:	add    DWORD PTR [rax],eax
   140012838:	jae    0x140012861
   14001283a:	add    DWORD PTR [rax],eax
   14001283c:	stos   BYTE PTR es:[rdi],al
   14001283d:	(bad)  
   14001283e:	add    DWORD PTR [rax],eax
   140012840:	stos   BYTE PTR es:[rdi],al
   140012841:	(bad)  
   140012842:	add    DWORD PTR [rax],eax
   140012844:	stos   BYTE PTR es:[rdi],al
   140012845:	(bad)  
   140012846:	add    DWORD PTR [rax],eax
   140012848:	stos   BYTE PTR es:[rdi],al
   140012849:	(bad)  
   14001284a:	add    DWORD PTR [rax],eax
   14001284c:	jae    0x140012875
   14001284e:	add    DWORD PTR [rax],eax
   140012850:	sub    rsp,0x28
   140012854:	mov    rax,QWORD PTR [rip+0x35605]        # 0x140047e60
   14001285b:	test   rax,rax
   14001285e:	jne    0x14001289c
   140012860:	mov    rax,QWORD PTR [rip+0x34951]        # 0x1400471b8
   140012867:	mov    QWORD PTR [rsp+0x20],rbx
   14001286c:	mov    rbx,QWORD PTR [rax]
   14001286f:	call   0x140007c10
   140012874:	mov    rcx,QWORD PTR [rip+0x3493d]        # 0x1400471b8
   14001287b:	mov    rdx,rax
   14001287e:	call   QWORD PTR [rbx+0x68]
   140012881:	mov    edx,0x2
   140012886:	mov    rcx,rax
   140012889:	mov    r8,QWORD PTR [rax]
   14001288c:	call   QWORD PTR [r8+0x28]
   140012890:	mov    rbx,QWORD PTR [rsp+0x20]
   140012895:	mov    QWORD PTR [rip+0x355c4],rax        # 0x140047e60
   14001289c:	add    rsp,0x28
   1400128a0:	ret    
   1400128a1:	int3   
   1400128a2:	int3   
   1400128a3:	int3   
   1400128a4:	int3   
   1400128a5:	int3   
   1400128a6:	int3   
   1400128a7:	int3   
   1400128a8:	int3   
   1400128a9:	int3   
   1400128aa:	int3   
   1400128ab:	int3   
   1400128ac:	int3   
   1400128ad:	int3   
   1400128ae:	int3   
   1400128af:	int3   
   1400128b0:	sub    rsp,0x28
   1400128b4:	mov    rax,QWORD PTR [rip+0x355b5]        # 0x140047e70
   1400128bb:	test   rax,rax
   1400128be:	jne    0x1400128fc
   1400128c0:	mov    rax,QWORD PTR [rip+0x348f1]        # 0x1400471b8
   1400128c7:	mov    QWORD PTR [rsp+0x20],rbx
   1400128cc:	mov    rbx,QWORD PTR [rax]
   1400128cf:	call   0x140007c10
   1400128d4:	mov    rcx,QWORD PTR [rip+0x348dd]        # 0x1400471b8
   1400128db:	mov    rdx,rax
   1400128de:	call   QWORD PTR [rbx+0x68]
   1400128e1:	mov    edx,0x7
   1400128e6:	mov    rcx,rax
   1400128e9:	mov    r8,QWORD PTR [rax]
   1400128ec:	call   QWORD PTR [r8+0x28]
   1400128f0:	mov    rbx,QWORD PTR [rsp+0x20]
   1400128f5:	mov    QWORD PTR [rip+0x35574],rax        # 0x140047e70
   1400128fc:	add    rsp,0x28
   140012900:	ret    
   140012901:	int3   
   140012902:	int3   
   140012903:	int3   
   140012904:	int3   
   140012905:	int3   
   140012906:	int3   
   140012907:	int3   
   140012908:	int3   
   140012909:	int3   
   14001290a:	int3   
   14001290b:	int3   
   14001290c:	int3   
   14001290d:	int3   
   14001290e:	int3   
   14001290f:	int3   
   140012910:	sub    rsp,0x28
   140012914:	mov    rax,QWORD PTR [rip+0x3554d]        # 0x140047e68
   14001291b:	test   rax,rax
   14001291e:	jne    0x14001295c
   140012920:	mov    rax,QWORD PTR [rip+0x34891]        # 0x1400471b8
   140012927:	mov    QWORD PTR [rsp+0x20],rbx
   14001292c:	mov    rbx,QWORD PTR [rax]
   14001292f:	call   0x140007c10
   140012934:	mov    rcx,QWORD PTR [rip+0x3487d]        # 0x1400471b8
   14001293b:	mov    rdx,rax
   14001293e:	call   QWORD PTR [rbx+0x68]
   140012941:	mov    edx,0xc
   140012946:	mov    rcx,rax
   140012949:	mov    r8,QWORD PTR [rax]
   14001294c:	call   QWORD PTR [r8+0x28]
   140012950:	mov    rbx,QWORD PTR [rsp+0x20]
   140012955:	mov    QWORD PTR [rip+0x3550c],rax        # 0x140047e68
   14001295c:	add    rsp,0x28
   140012960:	ret    
   140012961:	int3   
   140012962:	int3   
   140012963:	int3   
   140012964:	int3   
   140012965:	int3   
   140012966:	int3   
   140012967:	int3   
   140012968:	int3   
   140012969:	int3   
   14001296a:	int3   
   14001296b:	int3   
   14001296c:	int3   
   14001296d:	int3   
   14001296e:	int3   
   14001296f:	int3   
   140012970:	mov    QWORD PTR [rsp+0x8],rbx
   140012975:	mov    QWORD PTR [rsp+0x10],rbp
   14001297a:	mov    QWORD PTR [rsp+0x18],rsi
   14001297f:	mov    QWORD PTR [rsp+0x20],rdi
   140012984:	push   r14
   140012986:	sub    rsp,0xe0
   14001298d:	test   BYTE PTR [r8+0xbc],0x1
   140012995:	mov    rdi,r8
   140012998:	mov    rbp,rdx
   14001299b:	mov    rsi,rcx
   14001299e:	je     0x1400129e4
   1400129a0:	xor    r9d,r9d
   1400129a3:	lea    rdx,[rip+0x23ea2]        # 0x14003684c
   1400129aa:	xor    r8d,r8d
   1400129ad:	mov    rcx,rbp
   1400129b0:	call   0x14000ee70
   1400129b5:	mov    rdi,rax
   1400129b8:	mov    rax,QWORD PTR [rip+0x347f9]        # 0x1400471b8
   1400129bf:	mov    rbx,QWORD PTR [rax]
   1400129c2:	call   0x140007c10
   1400129c7:	mov    rcx,QWORD PTR [rip+0x347ea]        # 0x1400471b8
   1400129ce:	mov    rdx,rax
   1400129d1:	call   QWORD PTR [rbx+0x68]
   1400129d4:	mov    rdx,rdi
   1400129d7:	mov    rcx,rax
   1400129da:	mov    r8,QWORD PTR [rax]
   1400129dd:	call   QWORD PTR [r8+0x10]
   1400129e1:	mov    rdi,rax
   1400129e4:	mov    rcx,QWORD PTR [rsi]
   1400129e7:	mov    rbx,QWORD PTR [rcx]
   1400129ea:	movsxd r14,DWORD PTR [rbx]
   1400129ed:	cmp    r14d,DWORD PTR [rbx+0x10]
   1400129f1:	jne    0x140012a01
   1400129f3:	lea    rcx,[rbx+0x8]
   1400129f7:	mov    edx,0x1
   1400129fc:	call   0x140013420
   140012a01:	mov    rax,QWORD PTR [rbx+0x8]
   140012a05:	inc    DWORD PTR [rbx]
   140012a07:	lea    r8,[rax+r14*8]
   140012a0b:	test   r8,r8
   140012a0e:	je     0x140012a13
   140012a10:	mov    QWORD PTR [r8],rbp
   140012a13:	mov    rax,QWORD PTR [rsi+0x8]
   140012a17:	mov    rbx,QWORD PTR [rax]
   140012a1a:	movsxd r14,DWORD PTR [rbx]
   140012a1d:	cmp    r14d,DWORD PTR [rbx+0x10]
   140012a21:	jne    0x140012a31
   140012a23:	lea    rcx,[rbx+0x8]
   140012a27:	mov    edx,0x1
   140012a2c:	call   0x140013420
   140012a31:	mov    rax,QWORD PTR [rbx+0x8]
   140012a35:	inc    DWORD PTR [rbx]
   140012a37:	lea    rdx,[rax+r14*8]
   140012a3b:	test   rdx,rdx
   140012a3e:	je     0x140012a43
   140012a40:	mov    QWORD PTR [rdx],rdi
   140012a43:	mov    r8d,0x2
   140012a49:	lea    rcx,[rsp+0x20]
   140012a4e:	mov    rdx,rdi
   140012a51:	call   0x14001a2e0
   140012a56:	lea    rcx,[rsp+0x20]
   140012a5b:	call   0x14001a7c0
   140012a60:	test   al,al
   140012a62:	je     0x140012abe
   140012a64:	lea    rcx,[rsp+0x20]
   140012a69:	call   0x14001a6d0
   140012a6e:	mov    rdx,rax
   140012a71:	xor    r8d,r8d
   140012a74:	mov    rcx,rbp
   140012a77:	call   0x14000e1f0
   140012a7c:	mov    rbx,rax
   140012a7f:	test   rax,rax
   140012a82:	je     0x140012aa6
   140012a84:	lea    rcx,[rsp+0x20]
   140012a89:	call   0x14001a6f0
   140012a8e:	mov    rdx,QWORD PTR [rsi+0x8]
   140012a92:	mov    r9,rax
   140012a95:	mov    rcx,QWORD PTR [rsi]
   140012a98:	mov    r8,rbx
   140012a9b:	mov    rdx,QWORD PTR [rdx]
   140012a9e:	mov    rcx,QWORD PTR [rcx]
   140012aa1:	call   0x140012f50
   140012aa6:	lea    rcx,[rsp+0x20]
   140012aab:	call   0x14001a3b0
   140012ab0:	lea    rcx,[rsp+0x20]
   140012ab5:	call   0x14001a7c0
   140012aba:	test   al,al
   140012abc:	jne    0x140012a64
   140012abe:	cmp    DWORD PTR [rsp+0x30],0x0
   140012ac3:	mov    rdx,QWORD PTR [rsp+0x28]
   140012ac8:	mov    DWORD PTR [rsp+0x20],0x0
   140012ad0:	jl     0x140012b1e
   140012ad2:	lea    rax,[rsp+0x38]
   140012ad7:	cmp    rdx,rax
   140012ada:	je     0x140012b1e
   140012adc:	test   rdx,rdx
   140012adf:	je     0x140012afb
   140012ae1:	test   DWORD PTR [rsp+0x34],0xc0000000
   140012ae9:	jne    0x140012afb
   140012aeb:	mov    rax,QWORD PTR [rip+0x1f89e]        # 0x140032390
   140012af2:	mov    rcx,QWORD PTR [rax]
   140012af5:	mov    rax,QWORD PTR [rcx]
   140012af8:	call   QWORD PTR [rax+0x28]
   140012afb:	mov    eax,DWORD PTR [rsp+0x34]
   140012aff:	lea    rdx,[rsp+0x38]
   140012b04:	and    eax,0x3fffffff
   140012b09:	mov    QWORD PTR [rsp+0x28],rdx
   140012b0e:	bts    eax,0x1f
   140012b12:	mov    DWORD PTR [rsp+0x30],0x8
   140012b1a:	mov    DWORD PTR [rsp+0x34],eax
   140012b1e:	test   DWORD PTR [rsp+0x34],0xc0000000
   140012b26:	jne    0x140012b3d
   140012b28:	test   rdx,rdx
   140012b2b:	je     0x140012b3d
   140012b2d:	mov    rax,QWORD PTR [rip+0x1f85c]        # 0x140032390
   140012b34:	mov    rcx,QWORD PTR [rax]
   140012b37:	mov    rax,QWORD PTR [rcx]
   140012b3a:	call   QWORD PTR [rax+0x28]
   140012b3d:	lea    r11,[rsp+0xe0]
   140012b45:	mov    rbx,QWORD PTR [r11+0x10]
   140012b49:	mov    rbp,QWORD PTR [r11+0x18]
   140012b4d:	mov    rsi,QWORD PTR [r11+0x20]
   140012b51:	mov    rdi,QWORD PTR [r11+0x28]
   140012b55:	mov    rsp,r11
   140012b58:	pop    r14
   140012b5a:	ret    
   140012b5b:	int3   
   140012b5c:	int3   
   140012b5d:	int3   
   140012b5e:	int3   
   140012b5f:	int3   
   140012b60:	mov    QWORD PTR [rsp+0x8],rbx
   140012b65:	mov    QWORD PTR [rsp+0x10],rsi
   140012b6a:	mov    QWORD PTR [rsp+0x18],rdi
   140012b6f:	push   rbp
   140012b70:	push   r14
   140012b72:	push   r15
   140012b74:	lea    rbp,[rsp-0x47]
   140012b79:	sub    rsp,0xe0
   140012b80:	mov    rax,r8
   140012b83:	mov    r14,rdx
   140012b86:	mov    r15,rcx
   140012b89:	xor    edi,edi
   140012b8b:	mov    rdx,rax
   140012b8e:	lea    rcx,[rbp-0x79]
   140012b92:	lea    r8d,[rdi+0x2]
   140012b96:	call   0x14001a2e0
   140012b9b:	lea    rcx,[rbp-0x79]
   140012b9f:	call   0x14001a7c0
   140012ba4:	test   al,al
   140012ba6:	je     0x140012c22
   140012ba8:	nop    DWORD PTR [rax+rax*1+0x0]
   140012bb0:	lea    rcx,[rbp-0x79]
   140012bb4:	call   0x14001a6d0
   140012bb9:	mov    rdx,rax
   140012bbc:	xor    r8d,r8d
   140012bbf:	mov    rcx,r14
   140012bc2:	call   0x14000e1f0
   140012bc7:	mov    rsi,rax
   140012bca:	test   rax,rax
   140012bcd:	je     0x140012c0c
   140012bcf:	lea    rdx,[rip+0x23c4a]        # 0x140036820
   140012bd6:	lea    rcx,[rbp-0x79]
   140012bda:	call   0x1400130b0
   140012bdf:	test   rax,rax
   140012be2:	je     0x140012be9
   140012be4:	mov    rbx,QWORD PTR [rax]
   140012be7:	jmp    0x140012beb
   140012be9:	xor    ebx,ebx
   140012beb:	lea    rcx,[rbp-0x79]
   140012bef:	call   0x14001a6e0
   140012bf4:	mov    rdx,rax
   140012bf7:	mov    r8,rbx
   140012bfa:	mov    rcx,rsi
   140012bfd:	call   0x1400138f0
   140012c02:	test   al,al
   140012c04:	je     0x140012cc5
   140012c0a:	inc    edi
   140012c0c:	lea    rcx,[rbp-0x79]
   140012c10:	call   0x14001a3b0
   140012c15:	lea    rcx,[rbp-0x79]
   140012c19:	call   0x14001a7c0
   140012c1e:	test   al,al
   140012c20:	jne    0x140012bb0
   140012c22:	cmp    DWORD PTR [rbp-0x69],0x0
   140012c26:	mov    rdx,QWORD PTR [rbp-0x71]
   140012c2a:	mov    DWORD PTR [rbp-0x79],0x0
   140012c31:	jl     0x140012c78
   140012c33:	lea    rax,[rbp-0x61]
   140012c37:	cmp    rdx,rax
   140012c3a:	je     0x140012c78
   140012c3c:	test   rdx,rdx
   140012c3f:	je     0x140012c5a
   140012c41:	test   DWORD PTR [rbp-0x65],0xc0000000
   140012c48:	jne    0x140012c5a
   140012c4a:	mov    rax,QWORD PTR [rip+0x1f73f]        # 0x140032390
   140012c51:	mov    rcx,QWORD PTR [rax]
   140012c54:	mov    rax,QWORD PTR [rcx]
   140012c57:	call   QWORD PTR [rax+0x28]
   140012c5a:	mov    eax,DWORD PTR [rbp-0x65]
   140012c5d:	lea    rdx,[rbp-0x61]
   140012c61:	and    eax,0x3fffffff
   140012c66:	mov    QWORD PTR [rbp-0x71],rdx
   140012c6a:	bts    eax,0x1f
   140012c6e:	mov    DWORD PTR [rbp-0x69],0x8
   140012c75:	mov    DWORD PTR [rbp-0x65],eax
   140012c78:	test   DWORD PTR [rbp-0x65],0xc0000000
   140012c7f:	jne    0x140012c96
   140012c81:	test   rdx,rdx
   140012c84:	je     0x140012c96
   140012c86:	mov    rax,QWORD PTR [rip+0x1f703]        # 0x140032390
   140012c8d:	mov    rcx,QWORD PTR [rax]
   140012c90:	mov    rax,QWORD PTR [rcx]
   140012c93:	call   QWORD PTR [rax+0x28]
   140012c96:	mov    rcx,r14
   140012c99:	call   0x14000ec10
   140012c9e:	cmp    edi,eax
   140012ca0:	mov    rax,QWORD PTR [r15]
   140012ca3:	sete   cl
   140012ca6:	mov    BYTE PTR [rax],cl
   140012ca8:	lea    r11,[rsp+0xe0]
   140012cb0:	mov    rbx,QWORD PTR [r11+0x20]
   140012cb4:	mov    rsi,QWORD PTR [r11+0x28]
   140012cb8:	mov    rdi,QWORD PTR [r11+0x30]
   140012cbc:	mov    rsp,r11
   140012cbf:	pop    r15
   140012cc1:	pop    r14
   140012cc3:	pop    rbp
   140012cc4:	ret    
   140012cc5:	xor    r9d,r9d
   140012cc8:	mov    DWORD PTR [rbp-0x79],0x0
   140012ccf:	lea    rdx,[rbp-0x61]
   140012cd3:	lea    rcx,[rbp-0x71]
   140012cd7:	lea    r8d,[r9+0x8]
   140012cdb:	call   0x140013c80
   140012ce0:	test   DWORD PTR [rbp-0x65],0xc0000000
   140012ce7:	jne    0x140012ca8
   140012ce9:	mov    rdx,QWORD PTR [rbp-0x71]
   140012ced:	test   rdx,rdx
   140012cf0:	je     0x140012ca8
   140012cf2:	mov    rax,QWORD PTR [rip+0x1f697]        # 0x140032390
   140012cf9:	mov    rcx,QWORD PTR [rax]
   140012cfc:	mov    rax,QWORD PTR [rcx]
   140012cff:	call   QWORD PTR [rax+0x28]
   140012d02:	jmp    0x140012ca8
   140012d04:	int3   
   140012d05:	int3   
   140012d06:	int3   
   140012d07:	int3   
   140012d08:	int3   
   140012d09:	int3   
   140012d0a:	int3   
   140012d0b:	int3   
   140012d0c:	int3   
   140012d0d:	int3   
   140012d0e:	int3   
   140012d0f:	int3   
   140012d10:	mov    QWORD PTR [rsp+0x8],rbx
   140012d15:	mov    QWORD PTR [rsp+0x10],rbp
   140012d1a:	mov    QWORD PTR [rsp+0x18],rsi
   140012d1f:	push   rdi
   140012d20:	sub    rsp,0x20
   140012d24:	mov    rsi,rcx
   140012d27:	mov    rbp,r9
   140012d2a:	mov    rcx,rdx
   140012d2d:	mov    rdi,rdx
   140012d30:	xor    ebx,ebx
   140012d32:	call   0x14000ea00
   140012d37:	test   eax,eax
   140012d39:	jle    0x140012d70
   140012d3b:	nop    DWORD PTR [rax+rax*1+0x0]
   140012d40:	mov    edx,ebx
   140012d42:	mov    rcx,rdi
   140012d45:	call   0x14000e9b0
   140012d4a:	mov    rdx,QWORD PTR [rsi+0x8]
   140012d4e:	mov    r8,rax
   140012d51:	mov    rcx,QWORD PTR [rsi]
   140012d54:	mov    r9,rbp
   140012d57:	mov    rdx,QWORD PTR [rdx]
   140012d5a:	mov    rcx,QWORD PTR [rcx]
   140012d5d:	call   0x140012f50
   140012d62:	mov    rcx,rdi
   140012d65:	inc    ebx
   140012d67:	call   0x14000ea00
   140012d6c:	cmp    ebx,eax
   140012d6e:	jl     0x140012d40
   140012d70:	mov    rbx,QWORD PTR [rsp+0x30]
   140012d75:	mov    rbp,QWORD PTR [rsp+0x38]
   140012d7a:	mov    rsi,QWORD PTR [rsp+0x40]
   140012d7f:	add    rsp,0x20
   140012d83:	pop    rdi
   140012d84:	ret    
   140012d85:	int3   
   140012d86:	int3   
   140012d87:	int3   
   140012d88:	int3   
   140012d89:	int3   
   140012d8a:	int3   
   140012d8b:	int3   
   140012d8c:	int3   
   140012d8d:	int3   
   140012d8e:	int3   
   140012d8f:	int3   
   140012d90:	mov    QWORD PTR [rsp+0x8],rbx
   140012d95:	mov    QWORD PTR [rsp+0x10],rbp
   140012d9a:	mov    QWORD PTR [rsp+0x18],rsi
   140012d9f:	push   rdi
   140012da0:	sub    rsp,0x20
   140012da4:	mov    rsi,rcx
   140012da7:	mov    rbp,r8
   140012daa:	mov    rcx,rdx
   140012dad:	mov    rdi,rdx
   140012db0:	xor    ebx,ebx
   140012db2:	call   0x14000ea00
   140012db7:	test   eax,eax
   140012db9:	jle    0x140012df0
   140012dbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140012dc0:	mov    edx,ebx
   140012dc2:	mov    rcx,rdi
   140012dc5:	call   0x14000e9b0
   140012dca:	mov    rdx,QWORD PTR [rsi+0x8]
   140012dce:	mov    r8,rax
   140012dd1:	mov    rcx,QWORD PTR [rsi]
   140012dd4:	mov    r9,rbp
   140012dd7:	mov    rdx,QWORD PTR [rdx]
   140012dda:	mov    rcx,QWORD PTR [rcx]
   140012ddd:	call   0x140012f50
   140012de2:	mov    rcx,rdi
   140012de5:	inc    ebx
   140012de7:	call   0x14000ea00
   140012dec:	cmp    ebx,eax
   140012dee:	jl     0x140012dc0
   140012df0:	mov    rbx,QWORD PTR [rsp+0x30]
   140012df5:	mov    rbp,QWORD PTR [rsp+0x38]
   140012dfa:	mov    rsi,QWORD PTR [rsp+0x40]
   140012dff:	add    rsp,0x20
   140012e03:	pop    rdi
   140012e04:	ret    
   140012e05:	int3   
   140012e06:	int3   
   140012e07:	int3   
   140012e08:	int3   
   140012e09:	int3   
   140012e0a:	int3   
   140012e0b:	int3   
   140012e0c:	int3   
   140012e0d:	int3   
   140012e0e:	int3   
   140012e0f:	int3   
   140012e10:	mov    QWORD PTR [rsp+0x8],rbx
   140012e15:	mov    QWORD PTR [rsp+0x10],rbp
   140012e1a:	mov    QWORD PTR [rsp+0x18],rsi
   140012e1f:	push   rdi
   140012e20:	push   r14
   140012e22:	push   r15
   140012e24:	sub    rsp,0x40
   140012e28:	mov    rsi,rdx
   140012e2b:	mov    r14,rcx
   140012e2e:	mov    rcx,rsi
   140012e31:	mov    edx,r8d
   140012e34:	mov    r15,r9
   140012e37:	call   0x14000dce0
   140012e3c:	mov    rax,QWORD PTR [r14]
   140012e3f:	lea    rdx,[rip+0x1f95a]        # 0x1400327a0
   140012e46:	test   rax,rax
   140012e49:	lea    r8,[rip+0x20094]        # 0x140032ee4
   140012e50:	lea    rcx,[rsp+0x20]
   140012e55:	cmovne rdx,rax
   140012e59:	call   0x1400229e0
   140012e5e:	movsxd rbp,DWORD PTR [rsp+0x20]
   140012e63:	xor    ebx,ebx
   140012e65:	mov    edi,ebx
   140012e67:	test   rbp,rbp
   140012e6a:	jle    0x140012ea8
   140012e6c:	nop    DWORD PTR [rax+0x0]
   140012e70:	mov    rcx,rsi
   140012e73:	call   0x14000ea00
   140012e78:	cmp    ebx,eax
   140012e7a:	jge    0x140012ea8
   140012e7c:	mov    edx,ebx
   140012e7e:	mov    rcx,rsi
   140012e81:	call   0x14000e9b0
   140012e86:	mov    r9,QWORD PTR [rsp+0x28]
   140012e8b:	mov    rcx,rax
   140012e8e:	mov    rdx,QWORD PTR [r14+0x8]
   140012e92:	mov    r8,r15
   140012e95:	mov    r9,QWORD PTR [r9+rdi*8]
   140012e99:	call   0x140013770
   140012e9e:	inc    ebx
   140012ea0:	inc    rdi
   140012ea3:	cmp    rdi,rbp
   140012ea6:	jl     0x140012e70
   140012ea8:	lea    rcx,[rsp+0x20]
   140012ead:	call   0x140022a10
   140012eb2:	mov    rbx,QWORD PTR [rsp+0x60]
   140012eb7:	mov    rbp,QWORD PTR [rsp+0x68]
   140012ebc:	mov    rsi,QWORD PTR [rsp+0x70]
   140012ec1:	add    rsp,0x40
   140012ec5:	pop    r15
   140012ec7:	pop    r14
   140012ec9:	pop    rdi
   140012eca:	ret    
   140012ecb:	int3   
   140012ecc:	int3   
   140012ecd:	int3   
   140012ece:	int3   
   140012ecf:	int3   
   140012ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140012ed5:	mov    QWORD PTR [rsp+0x10],rbp
   140012eda:	mov    QWORD PTR [rsp+0x18],rsi
   140012edf:	push   rdi
   140012ee0:	sub    rsp,0x20
   140012ee4:	mov    rdi,rdx
   140012ee7:	mov    rsi,rcx
   140012eea:	mov    rcx,rdi
   140012eed:	mov    dl,0x8
   140012eef:	mov    rbp,r8
   140012ef2:	call   0x14000ddb0
   140012ef7:	mov    rcx,rdi
   140012efa:	xor    ebx,ebx
   140012efc:	call   0x14000ea00
   140012f01:	test   eax,eax
   140012f03:	jle    0x140012f2f
   140012f05:	mov    edx,ebx
   140012f07:	mov    rcx,rdi
   140012f0a:	call   0x14000e9b0
   140012f0f:	mov    r9,QWORD PTR [rsi]
   140012f12:	mov    rcx,rax
   140012f15:	mov    rdx,QWORD PTR [rsi+0x8]
   140012f19:	mov    r8,rbp
   140012f1c:	call   0x140013770
   140012f21:	mov    rcx,rdi
   140012f24:	inc    ebx
   140012f26:	call   0x14000ea00
   140012f2b:	cmp    ebx,eax
   140012f2d:	jl     0x140012f05
   140012f2f:	mov    rbx,QWORD PTR [rsp+0x30]
   140012f34:	mov    rbp,QWORD PTR [rsp+0x38]
   140012f39:	mov    rsi,QWORD PTR [rsp+0x40]
   140012f3e:	add    rsp,0x20
   140012f42:	pop    rdi
   140012f43:	ret    
   140012f44:	int3   
   140012f45:	int3   
   140012f46:	int3   
   140012f47:	int3   
   140012f48:	int3   
   140012f49:	int3   
   140012f4a:	int3   
   140012f4b:	int3   
   140012f4c:	int3   
   140012f4d:	int3   
   140012f4e:	int3   
   140012f4f:	int3   
   140012f50:	mov    r11,rsp
   140012f53:	mov    QWORD PTR [r11+0x10],rdx
   140012f57:	mov    QWORD PTR [r11+0x8],rcx
   140012f5b:	sub    rsp,0x88
   140012f62:	lea    rcx,[r11+0x8]
   140012f66:	mov    rax,r9
   140012f69:	mov    QWORD PTR [r11-0x20],rcx
   140012f6d:	lea    r9,[r11-0x48]
   140012f71:	lea    rcx,[r11+0x10]
   140012f75:	mov    r10,r8
   140012f78:	mov    QWORD PTR [r11-0x18],rcx
   140012f7c:	mov    r8,rax
   140012f7f:	lea    rcx,[r11+0x8]
   140012f83:	xor    edx,edx
   140012f85:	mov    QWORD PTR [r11-0x40],rcx
   140012f89:	lea    rcx,[r11+0x10]
   140012f8d:	mov    QWORD PTR [r11-0x38],rcx
   140012f91:	lea    rcx,[r11+0x8]
   140012f95:	mov    QWORD PTR [r11-0x30],rcx
   140012f99:	lea    rcx,[r11+0x10]
   140012f9d:	mov    QWORD PTR [r11-0x28],rcx
   140012fa1:	lea    rcx,[r11-0x48]
   140012fa5:	mov    QWORD PTR [r11-0x50],rcx
   140012fa9:	lea    rcx,[r11-0x40]
   140012fad:	mov    QWORD PTR [r11-0x58],rcx
   140012fb1:	lea    rcx,[r11-0x30]
   140012fb5:	mov    QWORD PTR [r11-0x60],rcx
   140012fb9:	lea    rcx,[r11-0x20]
   140012fbd:	mov    QWORD PTR [r11-0x68],rcx
   140012fc1:	mov    rcx,r10
   140012fc4:	call   0x1400123b0
   140012fc9:	add    rsp,0x88
   140012fd0:	ret    
   140012fd1:	int3   
   140012fd2:	int3   
   140012fd3:	int3   
   140012fd4:	int3   
   140012fd5:	int3   
   140012fd6:	int3   
   140012fd7:	int3   
   140012fd8:	int3   
   140012fd9:	int3   
   140012fda:	int3   
   140012fdb:	int3   
   140012fdc:	int3   
   140012fdd:	int3   
   140012fde:	int3   
   140012fdf:	int3   
   140012fe0:	mov    QWORD PTR [rsp+0x20],rbx
   140012fe5:	push   rbp
   140012fe6:	push   r12
   140012fe8:	push   r15
   140012fea:	sub    rsp,0x20
   140012fee:	mov    eax,DWORD PTR [rcx+0x20]
   140012ff1:	mov    r12,rdx
   140012ff4:	cdq    
   140012ff5:	xor    r9b,r9b
   140012ff8:	xor    eax,edx
   140012ffa:	mov    rbx,r8
   140012ffd:	sub    eax,edx
   140012fff:	mov    r15,rcx
   140013002:	movsxd rbp,eax
   140013005:	test   eax,eax
   140013007:	jle    0x140013090
   14001300d:	mov    QWORD PTR [rsp+0x40],rsi
   140013012:	xor    esi,esi
   140013014:	mov    QWORD PTR [rsp+0x50],r14
   140013019:	mov    QWORD PTR [rsp+0x48],rdi
   14001301e:	xchg   ax,ax
   140013020:	mov    r14,QWORD PTR [r15+0x18]
   140013024:	mov    rax,r12
   140013027:	mov    r8,QWORD PTR [r14+rsi*1]
   14001302b:	sub    r8,r12
   14001302e:	xchg   ax,ax
   140013030:	movzx  edx,BYTE PTR [rax]
   140013033:	movzx  ecx,BYTE PTR [rax+r8*1]
   140013038:	sub    edx,ecx
   14001303a:	jne    0x140013043
   14001303c:	inc    rax
   14001303f:	test   ecx,ecx
   140013041:	jne    0x140013030
   140013043:	test   edx,edx
   140013045:	jne    0x140013077
   140013047:	movsxd rdi,DWORD PTR [rbx]
   14001304a:	cmp    edi,DWORD PTR [rbx+0x10]
   14001304d:	jne    0x14001305d
   14001304f:	lea    rcx,[rbx+0x8]
   140013053:	mov    edx,0x1
   140013058:	call   0x140013420
   14001305d:	mov    rax,QWORD PTR [rbx+0x8]
   140013061:	inc    DWORD PTR [rbx]
   140013063:	lea    rdx,[rax+rdi*8]
   140013067:	test   rdx,rdx
   14001306a:	je     0x140013074
   14001306c:	mov    rax,QWORD PTR [r14+rsi*1+0x18]
   140013071:	mov    QWORD PTR [rdx],rax
   140013074:	mov    r9b,0x1
   140013077:	add    rsi,0x20
   14001307b:	sub    rbp,0x1
   14001307f:	jne    0x140013020
   140013081:	mov    r14,QWORD PTR [rsp+0x50]
   140013086:	mov    rdi,QWORD PTR [rsp+0x48]
   14001308b:	mov    rsi,QWORD PTR [rsp+0x40]
   140013090:	movzx  eax,r9b
   140013094:	mov    rbx,QWORD PTR [rsp+0x58]
   140013099:	add    rsp,0x20
   14001309d:	pop    r15
   14001309f:	pop    r12
   1400130a1:	pop    rbp
   1400130a2:	ret    
   1400130a3:	int3   
   1400130a4:	int3   
   1400130a5:	int3   
   1400130a6:	int3   
   1400130a7:	int3   
   1400130a8:	int3   
   1400130a9:	int3   
   1400130aa:	int3   
   1400130ab:	int3   
   1400130ac:	int3   
   1400130ad:	int3   
   1400130ae:	int3   
   1400130af:	int3   
   1400130b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400130b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400130ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400130bf:	mov    QWORD PTR [rsp+0x20],r12
   1400130c4:	push   rbp
   1400130c5:	push   r14
   1400130c7:	push   r15
   1400130c9:	lea    rbp,[rsp-0x60]
   1400130ce:	sub    rsp,0x160
   1400130d5:	xor    r12d,r12d
   1400130d8:	mov    DWORD PTR [rsp+0x50],0x20
   1400130e0:	mov    r15,rdx
   1400130e3:	mov    DWORD PTR [rsp+0x40],r12d
   1400130e8:	mov    r14,rcx
   1400130eb:	mov    QWORD PTR [rsp+0x48],r12
   1400130f0:	lea    rcx,[rsp+0x48]
   1400130f5:	mov    DWORD PTR [rsp+0x54],0x80000000
   1400130fd:	lea    edx,[r12+0x20]
   140013102:	call   0x14000db40
   140013107:	lea    rax,[rsp+0x48]
   14001310c:	test   al,0x7
   14001310e:	je     0x14001311b
   140013110:	call   QWORD PTR [rip+0x1f49a]        # 0x1400325b0
   140013116:	test   eax,eax
   140013118:	je     0x14001311b
   14001311a:	int3   
   14001311b:	lea    rax,[rsp+0x58]
   140013120:	mov    QWORD PTR [rsp+0x48],rax
   140013125:	movsxd rax,DWORD PTR [r14+0xa8]
   14001312c:	cmp    eax,0xffffffff
   14001312f:	je     0x1400131a2
   140013131:	mov    rcx,QWORD PTR [r14+0x8]
   140013135:	add    rax,rax
   140013138:	mov    r8d,DWORD PTR [rcx+rax*8+0xc]
   14001313d:	cmp    r8d,0xffffffff
   140013141:	je     0x1400131a2
   140013143:	mov    edx,DWORD PTR [rsp+0x40]
   140013147:	nop    WORD PTR [rax+rax*1+0x0]
   140013150:	movsxd rbx,r8d
   140013153:	add    rbx,rbx
   140013156:	movsxd rsi,edx
   140013159:	mov    rdi,QWORD PTR [rcx+rbx*8]
   14001315d:	cmp    edx,DWORD PTR [rsp+0x50]
   140013161:	jne    0x140013176
   140013163:	mov    edx,0x1
   140013168:	lea    rcx,[rsp+0x48]
   14001316d:	call   0x140013420
   140013172:	mov    edx,DWORD PTR [rsp+0x40]
   140013176:	mov    rax,QWORD PTR [rsp+0x48]
   14001317b:	inc    edx
   14001317d:	mov    DWORD PTR [rsp+0x40],edx
   140013181:	lea    r8,[rax+rsi*8]
   140013185:	test   r8,r8
   140013188:	je     0x140013191
   14001318a:	mov    QWORD PTR [r8],rdi
   14001318d:	mov    edx,DWORD PTR [rsp+0x40]
   140013191:	mov    rcx,QWORD PTR [r14+0x8]
   140013195:	mov    r8d,DWORD PTR [rcx+rbx*8+0xc]
   14001319a:	cmp    r8d,0xffffffff
   14001319e:	jne    0x140013150
   1400131a0:	jmp    0x1400131a6
   1400131a2:	mov    edx,DWORD PTR [rsp+0x40]
   1400131a6:	lea    eax,[rdx-0x1]
   1400131a9:	mov    DWORD PTR [rsp+0x20],r12d
   1400131ae:	mov    QWORD PTR [rsp+0x30],r12
   1400131b3:	mov    rbx,r12
   1400131b6:	mov    QWORD PTR [rsp+0x28],rbx
   1400131bb:	movsxd rdi,eax
   1400131be:	test   eax,eax
   1400131c0:	js     0x140013221
   1400131c2:	mov    rax,QWORD PTR [rsp+0x48]
   1400131c7:	mov    rcx,r14
   1400131ca:	mov    rbx,QWORD PTR [rax+rdi*8]
   1400131ce:	call   0x14001a6d0
   1400131d3:	mov    rdx,rax
   1400131d6:	mov    rcx,rbx
   1400131d9:	call   0x14001a270
   1400131de:	mov    rsi,rax
   1400131e1:	test   rax,rax
   1400131e4:	je     0x140013216
   1400131e6:	lea    r8,[rsp+0x20]
   1400131eb:	mov    rdx,r15
   1400131ee:	mov    rcx,rax
   1400131f1:	call   0x140012fe0
   1400131f6:	mov    rbx,QWORD PTR [rsp+0x28]
   1400131fb:	test   al,al
   1400131fd:	jne    0x1400132e2
   140013203:	mov    rdx,r15
   140013206:	mov    rcx,rsi
   140013209:	call   0x1400143c0
   14001320e:	test   al,al
   140013210:	jne    0x1400132da
   140013216:	sub    rdi,0x1
   14001321a:	jns    0x1400131c2
   14001321c:	mov    rbx,QWORD PTR [rsp+0x28]
   140013221:	mov    rcx,QWORD PTR [r14+0xb0]
   140013228:	mov    rdx,r15
   14001322b:	add    rcx,0x20
   14001322f:	call   0x140013340
   140013234:	mov    rdi,rax
   140013237:	mov    esi,DWORD PTR [rsp+0x34]
   14001323b:	and    esi,0xc0000000
   140013241:	jne    0x14001325f
   140013243:	test   rbx,rbx
   140013246:	je     0x14001325f
   140013248:	mov    rcx,QWORD PTR [rip+0x1f141]        # 0x140032390
   14001324f:	mov    rdx,rbx
   140013252:	mov    rcx,QWORD PTR [rcx]
   140013255:	mov    r8,QWORD PTR [rcx]
   140013258:	call   QWORD PTR [r8+0x28]
   14001325c:	mov    rbx,r12
   14001325f:	test   esi,esi
   140013261:	jne    0x14001327b
   140013263:	test   rbx,rbx
   140013266:	je     0x14001327b
   140013268:	mov    rax,QWORD PTR [rip+0x1f121]        # 0x140032390
   14001326f:	mov    rdx,rbx
   140013272:	mov    rcx,QWORD PTR [rax]
   140013275:	mov    rax,QWORD PTR [rcx]
   140013278:	call   QWORD PTR [rax+0x28]
   14001327b:	mov    DWORD PTR [rsp+0x40],r12d
   140013280:	cmp    DWORD PTR [rsp+0x50],r12d
   140013285:	jl     0x1400132ea
   140013287:	mov    rdx,QWORD PTR [rsp+0x48]
   14001328c:	lea    rax,[rsp+0x58]
   140013291:	cmp    rdx,rax
   140013294:	je     0x1400132ea
   140013296:	test   rdx,rdx
   140013299:	je     0x1400132b5
   14001329b:	test   DWORD PTR [rsp+0x54],0xc0000000
   1400132a3:	jne    0x1400132b5
   1400132a5:	mov    rax,QWORD PTR [rip+0x1f0e4]        # 0x140032390
   1400132ac:	mov    rcx,QWORD PTR [rax]
   1400132af:	mov    rax,QWORD PTR [rcx]
   1400132b2:	call   QWORD PTR [rax+0x28]
   1400132b5:	lea    rax,[rsp+0x58]
   1400132ba:	mov    DWORD PTR [rsp+0x50],0x20
   1400132c2:	mov    QWORD PTR [rsp+0x48],rax
   1400132c7:	mov    eax,DWORD PTR [rsp+0x54]
   1400132cb:	and    eax,0x3fffffff
   1400132d0:	bts    eax,0x1f
   1400132d4:	mov    DWORD PTR [rsp+0x54],eax
   1400132d8:	jmp    0x1400132ee
   1400132da:	mov    rdi,r12
   1400132dd:	jmp    0x140013237
   1400132e2:	mov    rdi,QWORD PTR [rbx]
   1400132e5:	jmp    0x140013237
   1400132ea:	mov    eax,DWORD PTR [rsp+0x54]
   1400132ee:	test   eax,0xc0000000
   1400132f3:	jne    0x14001330f
   1400132f5:	mov    rdx,QWORD PTR [rsp+0x48]
   1400132fa:	test   rdx,rdx
   1400132fd:	je     0x14001330f
   1400132ff:	mov    rax,QWORD PTR [rip+0x1f08a]        # 0x140032390
   140013306:	mov    rcx,QWORD PTR [rax]
   140013309:	mov    rax,QWORD PTR [rcx]
   14001330c:	call   QWORD PTR [rax+0x28]
   14001330f:	lea    r11,[rsp+0x160]
   140013317:	mov    rax,rdi
   14001331a:	mov    rbx,QWORD PTR [r11+0x20]
   14001331e:	mov    rsi,QWORD PTR [r11+0x28]
   140013322:	mov    rdi,QWORD PTR [r11+0x30]
   140013326:	mov    r12,QWORD PTR [r11+0x38]
   14001332a:	mov    rsp,r11
   14001332d:	pop    r15
   14001332f:	pop    r14
   140013331:	pop    rbp
   140013332:	ret    
   140013333:	int3   
   140013334:	int3   
   140013335:	int3   
   140013336:	int3   
   140013337:	int3   
   140013338:	int3   
   140013339:	int3   
   14001333a:	int3   
   14001333b:	int3   
   14001333c:	int3   
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	mov    QWORD PTR [rsp+0x8],rbx
   140013345:	mov    QWORD PTR [rsp+0x10],rsi
   14001334a:	mov    QWORD PTR [rsp+0x18],rdi
   14001334f:	mov    eax,DWORD PTR [rcx+0x8]
   140013352:	mov    rsi,rdx
   140013355:	cdq    
   140013356:	xor    r11d,r11d
   140013359:	xor    eax,edx
   14001335b:	mov    rdi,rcx
   14001335e:	sub    eax,edx
   140013360:	test   eax,eax
   140013362:	jle    0x1400133a3
   140013364:	mov    r9,QWORD PTR [rcx]
   140013367:	mov    r10d,r11d
   14001336a:	movsxd rbx,eax
   14001336d:	nop    DWORD PTR [rax]
   140013370:	mov    rax,QWORD PTR [r9]
   140013373:	mov    r8,rsi
   140013376:	sub    r8,rax
   140013379:	nop    DWORD PTR [rax+0x0]
   140013380:	movzx  edx,BYTE PTR [rax]
   140013383:	movzx  ecx,BYTE PTR [rax+r8*1]
   140013388:	sub    edx,ecx
   14001338a:	jne    0x140013393
   14001338c:	inc    rax
   14001338f:	test   ecx,ecx
   140013391:	jne    0x140013380
   140013393:	test   edx,edx
   140013395:	je     0x140013405
   140013397:	inc    r10
   14001339a:	add    r9,0x20
   14001339e:	cmp    r10,rbx
   1400133a1:	jl     0x140013370
   1400133a3:	mov    eax,DWORD PTR [rdi+0x18]
   1400133a6:	cdq    
   1400133a7:	xor    eax,edx
   1400133a9:	sub    eax,edx
   1400133ab:	test   eax,eax
   1400133ad:	jle    0x1400133f3
   1400133af:	mov    r9,QWORD PTR [rdi+0x10]
   1400133b3:	movsxd r10,eax
   1400133b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400133c0:	mov    rax,QWORD PTR [r9]
   1400133c3:	mov    r8,rsi
   1400133c6:	sub    r8,rax
   1400133c9:	nop    DWORD PTR [rax+0x0]
   1400133d0:	movzx  edx,BYTE PTR [rax]
   1400133d3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400133d8:	sub    edx,ecx
   1400133da:	jne    0x1400133e3
   1400133dc:	inc    rax
   1400133df:	test   ecx,ecx
   1400133e1:	jne    0x1400133d0
   1400133e3:	test   edx,edx
   1400133e5:	je     0x140013405
   1400133e7:	inc    r11
   1400133ea:	add    r9,0x20
   1400133ee:	cmp    r11,r10
   1400133f1:	jl     0x1400133c0
   1400133f3:	xor    eax,eax
   1400133f5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400133fa:	mov    rsi,QWORD PTR [rsp+0x10]
   1400133ff:	mov    rdi,QWORD PTR [rsp+0x18]
   140013404:	ret    
   140013405:	mov    rax,QWORD PTR [r9+0x18]
   140013409:	mov    rbx,QWORD PTR [rsp+0x8]
   14001340e:	mov    rsi,QWORD PTR [rsp+0x10]
   140013413:	mov    rdi,QWORD PTR [rsp+0x18]
   140013418:	ret    
   140013419:	int3   
   14001341a:	int3   
   14001341b:	int3   
   14001341c:	int3   
   14001341d:	int3   
   14001341e:	int3   
   14001341f:	int3   
   140013420:	rex push rdi
   140013422:	sub    rsp,0x20
   140013426:	mov    eax,edx
   140013428:	mov    rdi,rcx
   14001342b:	mov    edx,DWORD PTR [rcx+0xc]
   14001342e:	bt     edx,0x1e
   140013432:	jb     0x140013518
   140013438:	mov    ecx,DWORD PTR [rcx+0x8]
   14001343b:	and    edx,0x3fffffff
   140013441:	mov    QWORD PTR [rsp+0x30],rbx
   140013446:	mov    r9d,0x8
   14001344c:	mov    QWORD PTR [rsp+0x38],rsi
   140013451:	lea    esi,[rcx+rax*1]
   140013454:	mov    r8d,esi
   140013457:	call   0x14001aa30
   14001345c:	mov    ebx,eax
   14001345e:	cmp    eax,esi
   140013460:	jge    0x14001347e
   140013462:	test   eax,eax
   140013464:	jne    0x140013470
   140013466:	cmp    esi,0xffffffff
   140013469:	jg     0x140013470
   14001346b:	or     ebx,0xffffffff
   14001346e:	jmp    0x14001347e
   140013470:	lea    eax,[rbx+rsi*1]
   140013473:	cdq    
   140013474:	sub    eax,edx
   140013476:	sar    eax,1
   140013478:	mov    ebx,eax
   14001347a:	cmp    eax,esi
   14001347c:	jl     0x140013470
   14001347e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140013485:	mov    rax,QWORD PTR [rip+0x1ef04]        # 0x140032390
   14001348c:	mov    rcx,QWORD PTR [rax]
   14001348f:	mov    rax,QWORD PTR [rcx]
   140013492:	jne    0x1400134dc
   140013494:	mov    rdx,QWORD PTR [rdi]
   140013497:	test   rdx,rdx
   14001349a:	je     0x1400134bc
   14001349c:	movsxd r8,ebx
   14001349f:	shl    r8,0x3
   1400134a3:	call   QWORD PTR [rax+0x18]
   1400134a6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400134ab:	mov    DWORD PTR [rdi+0x8],ebx
   1400134ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134b3:	mov    QWORD PTR [rdi],rax
   1400134b6:	add    rsp,0x20
   1400134ba:	pop    rdi
   1400134bb:	ret    
   1400134bc:	movsxd rdx,ebx
   1400134bf:	shl    rdx,0x3
   1400134c3:	call   QWORD PTR [rax+0x8]
   1400134c6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400134cb:	mov    DWORD PTR [rdi+0x8],ebx
   1400134ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134d3:	mov    QWORD PTR [rdi],rax
   1400134d6:	add    rsp,0x20
   1400134da:	pop    rdi
   1400134db:	ret    
   1400134dc:	mov    rsi,QWORD PTR [rdi]
   1400134df:	movsxd rdx,ebx
   1400134e2:	shl    rdx,0x3
   1400134e6:	call   QWORD PTR [rax+0x8]
   1400134e9:	mov    QWORD PTR [rdi],rax
   1400134ec:	test   rsi,rsi
   1400134ef:	je     0x140013504
   1400134f1:	movsxd r8,DWORD PTR [rdi+0x8]
   1400134f5:	mov    rdx,rsi
   1400134f8:	shl    r8,0x3
   1400134fc:	mov    rcx,rax
   1400134ff:	call   0x140026f70
   140013504:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14001350b:	mov    rsi,QWORD PTR [rsp+0x38]
   140013510:	mov    DWORD PTR [rdi+0x8],ebx
   140013513:	mov    rbx,QWORD PTR [rsp+0x30]
   140013518:	add    rsp,0x20
   14001351c:	pop    rdi
   14001351d:	ret    
   14001351e:	int3   
   14001351f:	int3   
   140013520:	mov    QWORD PTR [rsp+0x8],rbx
   140013525:	mov    QWORD PTR [rsp+0x10],rsi
   14001352a:	push   rdi
   14001352b:	sub    rsp,0x20
   14001352f:	mov    rax,QWORD PTR [rip+0x33c82]        # 0x1400471b8
   140013536:	mov    rdi,rdx
   140013539:	mov    rsi,rcx
   14001353c:	mov    rbx,QWORD PTR [rax]
   14001353f:	call   0x140007c10
   140013544:	mov    rcx,QWORD PTR [rip+0x33c6d]        # 0x1400471b8
   14001354b:	mov    rdx,rax
   14001354e:	call   QWORD PTR [rbx+0x68]
   140013551:	mov    rdx,rdi
   140013554:	mov    rcx,rax
   140013557:	mov    r8,QWORD PTR [rax]
   14001355a:	call   QWORD PTR [r8+0x10]
   14001355e:	test   rax,rax
   140013561:	je     0x14001356e
   140013563:	mov    rdx,rax
   140013566:	mov    rcx,rsi
   140013569:	call   0x140013580
   14001356e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013573:	mov    rsi,QWORD PTR [rsp+0x38]
   140013578:	add    rsp,0x20
   14001357c:	pop    rdi
   14001357d:	ret    
   14001357e:	int3   
   14001357f:	int3   
   140013580:	mov    rax,rsp
   140013583:	sub    rsp,0xe8
   14001358a:	test   BYTE PTR [rdx+0xbc],0x1
   140013591:	mov    QWORD PTR [rax+0x8],rbx
   140013595:	mov    rbx,rdx
   140013598:	mov    QWORD PTR [rax+0x18],rsi
   14001359c:	lea    rdx,[rip+0x232a9]        # 0x14003684c
   1400135a3:	mov    rsi,rcx
   1400135a6:	je     0x1400135cf
   1400135a8:	xor    r9d,r9d
   1400135ab:	xor    r8d,r8d
   1400135ae:	call   0x14000ee70
   1400135b3:	test   rax,rax
   1400135b6:	jne    0x1400135d7
   1400135b8:	mov    r8,QWORD PTR [rbx]
   1400135bb:	lea    rdx,[rip+0x2328a]        # 0x14003684c
   1400135c2:	xor    r9d,r9d
   1400135c5:	mov    rcx,rsi
   1400135c8:	call   0x140011650
   1400135cd:	jmp    0x1400135d7
   1400135cf:	xor    r8d,r8d
   1400135d2:	call   0x140011040
   1400135d7:	mov    r8d,0x2
   1400135dd:	lea    rcx,[rsp+0x20]
   1400135e2:	mov    rdx,rbx
   1400135e5:	call   0x14001a2e0
   1400135ea:	lea    rcx,[rsp+0x20]
   1400135ef:	call   0x14001a7c0
   1400135f4:	test   al,al
   1400135f6:	je     0x1400136d6
   1400135fc:	mov    QWORD PTR [rsp+0xf8],rbp
   140013604:	mov    QWORD PTR [rsp+0xe0],rdi
   14001360c:	nop    DWORD PTR [rax+0x0]
   140013610:	lea    rcx,[rsp+0x20]
   140013615:	call   0x14001a6d0
   14001361a:	mov    rdx,rax
   14001361d:	xor    r8d,r8d
   140013620:	mov    rcx,rsi
   140013623:	call   0x14000e1f0
   140013628:	lea    rcx,[rsp+0x20]
   14001362d:	mov    rdi,rax
   140013630:	test   rax,rax
   140013633:	jne    0x140013687
   140013635:	call   0x14001a6d0
   14001363a:	mov    rdx,rax
   14001363d:	xor    r8d,r8d
   140013640:	mov    rcx,rsi
   140013643:	call   0x140011690
   140013648:	lea    rdx,[rip+0x231d1]        # 0x140036820
   14001364f:	mov    rbp,rax
   140013652:	lea    rcx,[rsp+0x20]
   140013657:	call   0x1400130b0
   14001365c:	test   rax,rax
   14001365f:	je     0x140013666
   140013661:	mov    rdi,QWORD PTR [rax]
   140013664:	jmp    0x140013668
   140013666:	xor    edi,edi
   140013668:	lea    rcx,[rsp+0x20]
   14001366d:	call   0x14001a6f0
   140013672:	lea    rcx,[rsp+0x20]
   140013677:	mov    rbx,rax
   14001367a:	call   0x14001a6e0
   14001367f:	mov    r9,rdi
   140013682:	mov    rcx,rbp
   140013685:	jmp    0x14001369f
   140013687:	call   0x14001a6f0
   14001368c:	lea    rcx,[rsp+0x20]
   140013691:	mov    rbx,rax
   140013694:	call   0x14001a6e0
   140013699:	xor    r9d,r9d
   14001369c:	mov    rcx,rdi
   14001369f:	mov    r8,rbx
   1400136a2:	mov    rdx,rax
   1400136a5:	call   0x140013770
   1400136aa:	lea    rcx,[rsp+0x20]
   1400136af:	call   0x14001a3b0
   1400136b4:	lea    rcx,[rsp+0x20]
   1400136b9:	call   0x14001a7c0
   1400136be:	test   al,al
   1400136c0:	jne    0x140013610
   1400136c6:	mov    rdi,QWORD PTR [rsp+0xe0]
   1400136ce:	mov    rbp,QWORD PTR [rsp+0xf8]
   1400136d6:	cmp    DWORD PTR [rsp+0x30],0x0
   1400136db:	mov    rsi,QWORD PTR [rsp+0x100]
   1400136e3:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400136eb:	mov    rdx,QWORD PTR [rsp+0x28]
   1400136f0:	mov    DWORD PTR [rsp+0x20],0x0
   1400136f8:	jl     0x140013746
   1400136fa:	lea    rax,[rsp+0x38]
   1400136ff:	cmp    rdx,rax
   140013702:	je     0x140013746
   140013704:	test   rdx,rdx
   140013707:	je     0x140013723
   140013709:	test   DWORD PTR [rsp+0x34],0xc0000000
   140013711:	jne    0x140013723
   140013713:	mov    rax,QWORD PTR [rip+0x1ec76]        # 0x140032390
   14001371a:	mov    rcx,QWORD PTR [rax]
   14001371d:	mov    rax,QWORD PTR [rcx]
   140013720:	call   QWORD PTR [rax+0x28]
   140013723:	mov    eax,DWORD PTR [rsp+0x34]
   140013727:	lea    rdx,[rsp+0x38]
   14001372c:	and    eax,0x3fffffff
   140013731:	mov    QWORD PTR [rsp+0x28],rdx
   140013736:	bts    eax,0x1f
   14001373a:	mov    DWORD PTR [rsp+0x30],0x8
   140013742:	mov    DWORD PTR [rsp+0x34],eax
   140013746:	test   DWORD PTR [rsp+0x34],0xc0000000
   14001374e:	jne    0x140013765
   140013750:	test   rdx,rdx
   140013753:	je     0x140013765
   140013755:	mov    rax,QWORD PTR [rip+0x1ec34]        # 0x140032390
   14001375c:	mov    rcx,QWORD PTR [rax]
   14001375f:	mov    rax,QWORD PTR [rcx]
   140013762:	call   QWORD PTR [rax+0x28]
   140013765:	add    rsp,0xe8
   14001376c:	ret    
   14001376d:	int3   
   14001376e:	int3   
   14001376f:	int3   
   140013770:	mov    r11,rsp
   140013773:	mov    QWORD PTR [r11+0x8],rbx
   140013777:	push   rdi
   140013778:	sub    rsp,0x60
   14001377c:	lea    rax,[r11+0x18]
   140013780:	mov    QWORD PTR [r11+0x10],r9
   140013784:	mov    QWORD PTR [r11-0x30],rax
   140013788:	mov    rbx,r8
   14001378b:	lea    rax,[r11-0x28]
   14001378f:	mov    QWORD PTR [r11-0x18],r9
   140013793:	mov    QWORD PTR [r11-0x38],rax
   140013797:	mov    rdi,rcx
   14001379a:	lea    rax,[r11+0x18]
   14001379e:	mov    QWORD PTR [r11-0x28],r9
   1400137a2:	mov    QWORD PTR [r11-0x40],rax
   1400137a6:	lea    r9,[r11+0x10]
   1400137aa:	lea    rax,[r11-0x18]
   1400137ae:	mov    QWORD PTR [r11-0x10],rdx
   1400137b2:	mov    QWORD PTR [r11-0x48],rax
   1400137b6:	mov    QWORD PTR [r11-0x20],rdx
   1400137ba:	call   0x140012060
   1400137bf:	mov    rax,QWORD PTR [rbx]
   1400137c2:	mov    rcx,rbx
   1400137c5:	call   QWORD PTR [rax]
   1400137c7:	cmp    eax,0x4
   1400137ca:	jne    0x1400137fc
   1400137cc:	mov    rax,QWORD PTR [rbx]
   1400137cf:	mov    rcx,rbx
   1400137d2:	call   QWORD PTR [rax+0x30]
   1400137d5:	cmp    eax,0x1
   1400137d8:	jne    0x1400137fc
   1400137da:	mov    eax,DWORD PTR [rbx+0x40]
   1400137dd:	cmp    eax,0xfa1
   1400137e2:	je     0x1400137eb
   1400137e4:	cmp    eax,0xfa0
   1400137e9:	jne    0x1400137fc
   1400137eb:	mov    edx,0x1
   1400137f0:	mov    rcx,rdi
   1400137f3:	movzx  r8d,dl
   1400137f7:	call   0x1400114d0
   1400137fc:	mov    rbx,QWORD PTR [rsp+0x70]
   140013801:	add    rsp,0x60
   140013805:	pop    rdi
   140013806:	ret    
   140013807:	int3   
   140013808:	int3   
   140013809:	int3   
   14001380a:	int3   
   14001380b:	int3   
   14001380c:	int3   
   14001380d:	int3   
   14001380e:	int3   
   14001380f:	int3   
   140013810:	mov    QWORD PTR [rsp+0x8],rbx
   140013815:	mov    QWORD PTR [rsp+0x10],rsi
   14001381a:	mov    QWORD PTR [rsp+0x18],rdi
   14001381f:	mov    eax,DWORD PTR [rcx+0x8]
   140013822:	mov    rsi,rdx
   140013825:	cdq    
   140013826:	xor    r11d,r11d
   140013829:	xor    eax,edx
   14001382b:	mov    rdi,rcx
   14001382e:	sub    eax,edx
   140013830:	test   eax,eax
   140013832:	jle    0x140013873
   140013834:	mov    r10,QWORD PTR [rcx]
   140013837:	mov    r9d,r11d
   14001383a:	movsxd rbx,eax
   14001383d:	nop    DWORD PTR [rax]
   140013840:	mov    rax,QWORD PTR [r10]
   140013843:	mov    r8,rsi
   140013846:	sub    r8,rax
   140013849:	nop    DWORD PTR [rax+0x0]
   140013850:	movzx  edx,BYTE PTR [rax]
   140013853:	movzx  ecx,BYTE PTR [rax+r8*1]
   140013858:	sub    edx,ecx
   14001385a:	jne    0x140013863
   14001385c:	inc    rax
   14001385f:	test   ecx,ecx
   140013861:	jne    0x140013850
   140013863:	test   edx,edx
   140013865:	je     0x1400138d5
   140013867:	inc    r9
   14001386a:	add    r10,0x20
   14001386e:	cmp    r9,rbx
   140013871:	jl     0x140013840
   140013873:	mov    eax,DWORD PTR [rdi+0x18]
   140013876:	cdq    
   140013877:	xor    eax,edx
   140013879:	sub    eax,edx
   14001387b:	test   eax,eax
   14001387d:	jle    0x1400138c3
   14001387f:	mov    r9,QWORD PTR [rdi+0x10]
   140013883:	movsxd r10,eax
   140013886:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013890:	mov    rax,QWORD PTR [r9]
   140013893:	mov    r8,rsi
   140013896:	sub    r8,rax
   140013899:	nop    DWORD PTR [rax+0x0]
   1400138a0:	movzx  edx,BYTE PTR [rax]
   1400138a3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400138a8:	sub    edx,ecx
   1400138aa:	jne    0x1400138b3
   1400138ac:	inc    rax
   1400138af:	test   ecx,ecx
   1400138b1:	jne    0x1400138a0
   1400138b3:	test   edx,edx
   1400138b5:	je     0x1400138d5
   1400138b7:	inc    r11
   1400138ba:	add    r9,0x20
   1400138be:	cmp    r11,r10
   1400138c1:	jl     0x140013890
   1400138c3:	xor    al,al
   1400138c5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400138ca:	mov    rsi,QWORD PTR [rsp+0x10]
   1400138cf:	mov    rdi,QWORD PTR [rsp+0x18]
   1400138d4:	ret    
   1400138d5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400138da:	mov    al,0x1
   1400138dc:	mov    rsi,QWORD PTR [rsp+0x10]
   1400138e1:	mov    rdi,QWORD PTR [rsp+0x18]
   1400138e6:	ret    
   1400138e7:	int3   
   1400138e8:	int3   
   1400138e9:	int3   
   1400138ea:	int3   
   1400138eb:	int3   
   1400138ec:	int3   
   1400138ed:	int3   
   1400138ee:	int3   
   1400138ef:	int3   
   1400138f0:	mov    r11,rsp
   1400138f3:	sub    rsp,0x78
   1400138f7:	lea    rax,[r11+0x10]
   1400138fb:	mov    QWORD PTR [r11-0x18],r8
   1400138ff:	mov    QWORD PTR [r11-0x10],rax
   140013903:	lea    r9,[r11-0x18]
   140013907:	lea    rax,[r11+0x10]
   14001390b:	mov    QWORD PTR [r11-0x28],r8
   14001390f:	mov    QWORD PTR [r11-0x20],rax
   140013913:	lea    rax,[r11+0x10]
   140013917:	mov    QWORD PTR [r11-0x30],rax
   14001391b:	lea    rax,[r11+0x10]
   14001391f:	mov    QWORD PTR [r11+0x20],rax
   140013923:	lea    rax,[r11+0x18]
   140013927:	mov    QWORD PTR [r11-0x40],rax
   14001392b:	lea    rax,[r11-0x38]
   14001392f:	mov    QWORD PTR [r11-0x48],rax
   140013933:	lea    rax,[r11+0x20]
   140013937:	mov    QWORD PTR [r11-0x50],rax
   14001393b:	lea    rax,[r11-0x28]
   14001393f:	mov    QWORD PTR [r11-0x38],r8
   140013943:	mov    r8,QWORD PTR [rdx+0x10]
   140013947:	mov    QWORD PTR [r11-0x58],rax
   14001394b:	mov    BYTE PTR [r11+0x10],0x0
   140013950:	call   0x140012600
   140013955:	movzx  eax,BYTE PTR [rsp+0x88]
   14001395d:	add    rsp,0x78
   140013961:	ret    
   140013962:	int3   
   140013963:	int3   
   140013964:	int3   
   140013965:	int3   
   140013966:	int3   
   140013967:	int3   
   140013968:	int3   
   140013969:	int3   
   14001396a:	int3   
   14001396b:	int3   
   14001396c:	int3   
   14001396d:	int3   
   14001396e:	int3   
   14001396f:	int3   
   140013970:	mov    rax,rsp
   140013973:	push   rbp
   140013974:	lea    rbp,[rax-0x1a8]
   14001397b:	sub    rsp,0x2a0
   140013982:	mov    QWORD PTR [rax+0x8],rbx
   140013986:	mov    rbx,rcx
   140013989:	mov    QWORD PTR [rax+0x10],rsi
   14001398d:	lea    rcx,[rbp-0x80]
   140013991:	mov    QWORD PTR [rax+0x20],r12
   140013995:	xor    r12d,r12d
   140013998:	mov    DWORD PTR [rsp+0x78],r12d
   14001399d:	mov    QWORD PTR [rbp-0x80],r12
   1400139a1:	mov    DWORD PTR [rbp-0x78],0x40
   1400139a8:	lea    edx,[r12+0x40]
   1400139ad:	mov    DWORD PTR [rbp-0x74],0x80000000
   1400139b4:	call   0x14000db40
   1400139b9:	lea    rax,[rbp-0x80]
   1400139bd:	test   al,0x7
   1400139bf:	je     0x1400139cc
   1400139c1:	call   QWORD PTR [rip+0x1ebe9]        # 0x1400325b0
   1400139c7:	test   eax,eax
   1400139c9:	je     0x1400139cc
   1400139cb:	int3   
   1400139cc:	lea    rax,[rbp-0x70]
   1400139d0:	mov    QWORD PTR [rsp+0x2c0],rdi
   1400139d8:	mov    rdx,rbx
   1400139db:	mov    QWORD PTR [rbp-0x80],rax
   1400139df:	lea    rcx,[rsp+0x20]
   1400139e4:	call   0x14000c540
   1400139e9:	lea    rcx,[rsp+0x20]
   1400139ee:	call   0x14000ff00
   1400139f3:	test   al,al
   1400139f5:	je     0x140013a70
   1400139f7:	nop    WORD PTR [rax+rax*1+0x0]
   140013a00:	lea    rcx,[rsp+0x20]
   140013a05:	call   0x14000e980
   140013a0a:	mov    rcx,rax
   140013a0d:	call   0x14000f090
   140013a12:	cmp    al,0x9
   140013a14:	jne    0x140013a58
   140013a16:	lea    rcx,[rsp+0x20]
   140013a1b:	call   0x14000e980
   140013a20:	movsxd rcx,DWORD PTR [rsp+0x78]
   140013a25:	mov    rbx,rax
   140013a28:	mov    rdi,rcx
   140013a2b:	cmp    ecx,DWORD PTR [rbp-0x78]
   140013a2e:	jne    0x140013a42
   140013a30:	mov    edx,0x1
   140013a35:	lea    rcx,[rbp-0x80]
   140013a39:	call   0x140013420
   140013a3e:	mov    ecx,DWORD PTR [rsp+0x78]
   140013a42:	mov    rax,QWORD PTR [rbp-0x80]
   140013a46:	inc    ecx
   140013a48:	mov    DWORD PTR [rsp+0x78],ecx
   140013a4c:	lea    rdx,[rax+rdi*8]
   140013a50:	test   rdx,rdx
   140013a53:	je     0x140013a58
   140013a55:	mov    QWORD PTR [rdx],rbx
   140013a58:	lea    rcx,[rsp+0x20]
   140013a5d:	call   0x14000cc20
   140013a62:	lea    rcx,[rsp+0x20]
   140013a67:	call   0x14000ff00
   140013a6c:	test   al,al
   140013a6e:	jne    0x140013a00
   140013a70:	mov    rdx,QWORD PTR [rsp+0x28]
   140013a75:	mov    DWORD PTR [rsp+0x20],r12d
   140013a7a:	cmp    DWORD PTR [rsp+0x30],r12d
   140013a7f:	jl     0x140013acd
   140013a81:	lea    rax,[rsp+0x38]
   140013a86:	cmp    rdx,rax
   140013a89:	je     0x140013acd
   140013a8b:	test   rdx,rdx
   140013a8e:	je     0x140013aaa
   140013a90:	test   DWORD PTR [rsp+0x34],0xc0000000
   140013a98:	jne    0x140013aaa
   140013a9a:	mov    rax,QWORD PTR [rip+0x1e8ef]        # 0x140032390
   140013aa1:	mov    rcx,QWORD PTR [rax]
   140013aa4:	mov    rax,QWORD PTR [rcx]
   140013aa7:	call   QWORD PTR [rax+0x28]
   140013aaa:	mov    eax,DWORD PTR [rsp+0x34]
   140013aae:	lea    rdx,[rsp+0x38]
   140013ab3:	and    eax,0x3fffffff
   140013ab8:	mov    QWORD PTR [rsp+0x28],rdx
   140013abd:	bts    eax,0x1f
   140013ac1:	mov    DWORD PTR [rsp+0x30],0x4
   140013ac9:	mov    DWORD PTR [rsp+0x34],eax
   140013acd:	test   DWORD PTR [rsp+0x34],0xc0000000
   140013ad5:	jne    0x140013aec
   140013ad7:	test   rdx,rdx
   140013ada:	je     0x140013aec
   140013adc:	mov    rax,QWORD PTR [rip+0x1e8ad]        # 0x140032390
   140013ae3:	mov    rcx,QWORD PTR [rax]
   140013ae6:	mov    rax,QWORD PTR [rcx]
   140013ae9:	call   QWORD PTR [rax+0x28]
   140013aec:	mov    esi,r12d
   140013aef:	cmp    DWORD PTR [rsp+0x78],r12d
   140013af4:	jle    0x140013bdf
   140013afa:	mov    QWORD PTR [rsp+0x298],r14
   140013b02:	mov    QWORD PTR [rsp+0x290],r15
   140013b0a:	mov    r15,r12
   140013b0d:	nop    DWORD PTR [rax]
   140013b10:	mov    rax,QWORD PTR [rbp-0x80]
   140013b14:	lea    rdx,[rip+0x22d31]        # 0x14003684c
   140013b1b:	mov    r8d,0x2b234708
   140013b21:	mov    r14,QWORD PTR [r15+rax*1]
   140013b25:	mov    rcx,r14
   140013b28:	call   0x14000e1f0
   140013b2d:	test   rax,rax
   140013b30:	je     0x140013b46
   140013b32:	xor    edx,edx
   140013b34:	mov    rcx,rax
   140013b37:	call   0x14000f030
   140013b3c:	mov    rdi,rax
   140013b3f:	test   rax,rax
   140013b42:	je     0x140013bbf
   140013b44:	jmp    0x140013b4d
   140013b46:	lea    rdi,[rip+0x1ec53]        # 0x1400327a0
   140013b4d:	mov    rax,QWORD PTR [rip+0x33664]        # 0x1400471b8
   140013b54:	mov    rbx,QWORD PTR [rax]
   140013b57:	call   0x140007c10
   140013b5c:	mov    rcx,QWORD PTR [rip+0x33655]        # 0x1400471b8
   140013b63:	mov    rdx,rax
   140013b66:	call   QWORD PTR [rbx+0x68]
   140013b69:	mov    rdx,rdi
   140013b6c:	mov    rcx,rax
   140013b6f:	mov    r8,QWORD PTR [rax]
   140013b72:	call   QWORD PTR [r8+0x10]
   140013b76:	test   rax,rax
   140013b79:	je     0x140013b86
   140013b7b:	mov    rdx,rax
   140013b7e:	mov    rcx,r14
   140013b81:	call   0x140014280
   140013b86:	mov    rax,QWORD PTR [rip+0x3362b]        # 0x1400471b8
   140013b8d:	mov    rbx,QWORD PTR [rax]
   140013b90:	call   0x140007c10
   140013b95:	mov    rcx,QWORD PTR [rip+0x3361c]        # 0x1400471b8
   140013b9c:	mov    rdx,rax
   140013b9f:	call   QWORD PTR [rbx+0x68]
   140013ba2:	mov    rdx,rdi
   140013ba5:	mov    rcx,rax
   140013ba8:	mov    r8,QWORD PTR [rax]
   140013bab:	call   QWORD PTR [r8+0x10]
   140013baf:	test   rax,rax
   140013bb2:	je     0x140013bbf
   140013bb4:	mov    rdx,rax
   140013bb7:	mov    rcx,r14
   140013bba:	call   0x140013580
   140013bbf:	inc    esi
   140013bc1:	add    r15,0x8
   140013bc5:	cmp    esi,DWORD PTR [rsp+0x78]
   140013bc9:	jl     0x140013b10
   140013bcf:	mov    r15,QWORD PTR [rsp+0x290]
   140013bd7:	mov    r14,QWORD PTR [rsp+0x298]
   140013bdf:	cmp    DWORD PTR [rbp-0x78],0x0
   140013be3:	mov    rdi,QWORD PTR [rsp+0x2c0]
   140013beb:	mov    rsi,QWORD PTR [rsp+0x2b8]
   140013bf3:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140013bfb:	mov    rdx,QWORD PTR [rbp-0x80]
   140013bff:	mov    DWORD PTR [rsp+0x78],r12d
   140013c04:	mov    r12,QWORD PTR [rsp+0x2c8]
   140013c0c:	jl     0x140013c53
   140013c0e:	lea    rax,[rbp-0x70]
   140013c12:	cmp    rdx,rax
   140013c15:	je     0x140013c53
   140013c17:	test   rdx,rdx
   140013c1a:	je     0x140013c35
   140013c1c:	test   DWORD PTR [rbp-0x74],0xc0000000
   140013c23:	jne    0x140013c35
   140013c25:	mov    rax,QWORD PTR [rip+0x1e764]        # 0x140032390
   140013c2c:	mov    rcx,QWORD PTR [rax]
   140013c2f:	mov    rax,QWORD PTR [rcx]
   140013c32:	call   QWORD PTR [rax+0x28]
   140013c35:	mov    eax,DWORD PTR [rbp-0x74]
   140013c38:	lea    rdx,[rbp-0x70]
   140013c3c:	and    eax,0x3fffffff
   140013c41:	mov    QWORD PTR [rbp-0x80],rdx
   140013c45:	bts    eax,0x1f
   140013c49:	mov    DWORD PTR [rbp-0x78],0x40
   140013c50:	mov    DWORD PTR [rbp-0x74],eax
   140013c53:	test   DWORD PTR [rbp-0x74],0xc0000000
   140013c5a:	jne    0x140013c71
   140013c5c:	test   rdx,rdx
   140013c5f:	je     0x140013c71
   140013c61:	mov    rax,QWORD PTR [rip+0x1e728]        # 0x140032390
   140013c68:	mov    rcx,QWORD PTR [rax]
   140013c6b:	mov    rax,QWORD PTR [rcx]
   140013c6e:	call   QWORD PTR [rax+0x28]
   140013c71:	add    rsp,0x2a0
   140013c78:	pop    rbp
   140013c79:	ret    
   140013c7a:	int3   
   140013c7b:	int3   
   140013c7c:	int3   
   140013c7d:	int3   
   140013c7e:	int3   
   140013c7f:	int3   
   140013c80:	mov    QWORD PTR [rsp+0x10],rbx
   140013c85:	mov    QWORD PTR [rsp+0x18],rbp
   140013c8a:	push   rdi
   140013c8b:	sub    rsp,0x20
   140013c8f:	mov    ebp,r8d
   140013c92:	mov    rdi,rdx
   140013c95:	mov    rbx,rcx
   140013c98:	cmp    r9d,r8d
   140013c9b:	jg     0x140013d0e
   140013c9d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140013ca1:	jg     0x140013cfe
   140013ca3:	mov    rdx,QWORD PTR [rcx]
   140013ca6:	mov    QWORD PTR [rsp+0x30],rsi
   140013cab:	mov    esi,DWORD PTR [rcx+0xc]
   140013cae:	and    esi,0xc0000000
   140013cb4:	cmp    rdx,rdi
   140013cb7:	je     0x140013cf9
   140013cb9:	test   rdx,rdx
   140013cbc:	je     0x140013ce4
   140013cbe:	movsxd r8,r9d
   140013cc1:	mov    rcx,rdi
   140013cc4:	shl    r8,0x4
   140013cc8:	call   0x140026f70
   140013ccd:	test   esi,esi
   140013ccf:	jne    0x140013ce4
   140013cd1:	mov    rax,QWORD PTR [rip+0x1e6b8]        # 0x140032390
   140013cd8:	mov    rdx,QWORD PTR [rbx]
   140013cdb:	mov    rcx,QWORD PTR [rax]
   140013cde:	mov    rax,QWORD PTR [rcx]
   140013ce1:	call   QWORD PTR [rax+0x28]
   140013ce4:	mov    eax,DWORD PTR [rbx+0xc]
   140013ce7:	and    eax,0x3fffffff
   140013cec:	mov    QWORD PTR [rbx],rdi
   140013cef:	bts    eax,0x1f
   140013cf3:	mov    DWORD PTR [rbx+0x8],ebp
   140013cf6:	mov    DWORD PTR [rbx+0xc],eax
   140013cf9:	mov    rsi,QWORD PTR [rsp+0x30]
   140013cfe:	mov    rbx,QWORD PTR [rsp+0x38]
   140013d03:	mov    rbp,QWORD PTR [rsp+0x40]
   140013d08:	add    rsp,0x20
   140013d0c:	pop    rdi
   140013d0d:	ret    
   140013d0e:	mov    eax,DWORD PTR [rcx+0x8]
   140013d11:	cmp    r9d,eax
   140013d14:	jg     0x140013cfe
   140013d16:	test   r9d,r9d
   140013d19:	jne    0x140013d54
   140013d1b:	test   DWORD PTR [rcx+0xc],0xc0000000
   140013d22:	jne    0x140013cfe
   140013d24:	mov    rdx,QWORD PTR [rcx]
   140013d27:	xor    edi,edi
   140013d29:	test   rdx,rdx
   140013d2c:	je     0x140013d41
   140013d2e:	mov    rax,QWORD PTR [rip+0x1e65b]        # 0x140032390
   140013d35:	mov    rcx,QWORD PTR [rax]
   140013d38:	mov    rax,QWORD PTR [rcx]
   140013d3b:	call   QWORD PTR [rax+0x28]
   140013d3e:	mov    QWORD PTR [rbx],rdi
   140013d41:	mov    DWORD PTR [rbx+0x8],edi
   140013d44:	mov    rbx,QWORD PTR [rsp+0x38]
   140013d49:	mov    rbp,QWORD PTR [rsp+0x40]
   140013d4e:	add    rsp,0x20
   140013d52:	pop    rdi
   140013d53:	ret    
   140013d54:	test   DWORD PTR [rcx+0xc],0xc0000000
   140013d5b:	jne    0x140013cfe
   140013d5d:	cmp    r9d,eax
   140013d60:	je     0x140013cfe
   140013d62:	mov    rdx,QWORD PTR [rcx]
   140013d65:	test   rdx,rdx
   140013d68:	je     0x140013cfe
   140013d6a:	mov    DWORD PTR [rcx+0x8],r9d
   140013d6e:	mov    rax,QWORD PTR [rip+0x1e61b]        # 0x140032390
   140013d75:	movsxd r8,r9d
   140013d78:	shl    r8,0x4
   140013d7c:	mov    rcx,QWORD PTR [rax]
   140013d7f:	mov    rax,QWORD PTR [rcx]
   140013d82:	call   QWORD PTR [rax+0x18]
   140013d85:	mov    rbp,QWORD PTR [rsp+0x40]
   140013d8a:	mov    QWORD PTR [rbx],rax
   140013d8d:	mov    rbx,QWORD PTR [rsp+0x38]
   140013d92:	add    rsp,0x20
   140013d96:	pop    rdi
   140013d97:	ret    
   140013d98:	int3   
   140013d99:	int3   
   140013d9a:	int3   
   140013d9b:	int3   
   140013d9c:	int3   
   140013d9d:	int3   
   140013d9e:	int3   
   140013d9f:	int3   
   140013da0:	rex push rbp
   140013da2:	push   rbx
   140013da3:	push   rsi
   140013da4:	push   rdi
   140013da5:	push   r14
   140013da7:	lea    rbp,[rsp-0x3a0]
   140013daf:	sub    rsp,0x4a0
   140013db6:	xor    r14d,r14d
   140013db9:	mov    DWORD PTR [rbp+0x198],0x40
   140013dc3:	mov    rsi,rcx
   140013dc6:	mov    DWORD PTR [rbp+0x188],r14d
   140013dcd:	lea    rcx,[rbp+0x190]
   140013dd4:	mov    QWORD PTR [rbp+0x190],r14
   140013ddb:	mov    DWORD PTR [rbp+0x19c],0x80000000
   140013de5:	lea    edx,[r14+0x40]
   140013de9:	call   0x14000db40
   140013dee:	lea    rax,[rbp+0x190]
   140013df5:	test   al,0x7
   140013df7:	je     0x140013e04
   140013df9:	call   QWORD PTR [rip+0x1e7b1]        # 0x1400325b0
   140013dff:	test   eax,eax
   140013e01:	je     0x140013e04
   140013e03:	int3   
   140013e04:	lea    rax,[rbp+0x1a0]
   140013e0b:	mov    DWORD PTR [rsp+0x70],r14d
   140013e10:	mov    edx,0x40
   140013e15:	mov    QWORD PTR [rbp+0x190],rax
   140013e1c:	lea    rcx,[rsp+0x78]
   140013e21:	mov    QWORD PTR [rsp+0x78],r14
   140013e26:	mov    DWORD PTR [rbp-0x80],0x40
   140013e2d:	mov    DWORD PTR [rbp-0x7c],0x80000000
   140013e34:	call   0x14000db40
   140013e39:	lea    rax,[rsp+0x78]
   140013e3e:	test   al,0x7
   140013e40:	je     0x140013e4d
   140013e42:	call   QWORD PTR [rip+0x1e768]        # 0x1400325b0
   140013e48:	test   eax,eax
   140013e4a:	je     0x140013e4d
   140013e4c:	int3   
   140013e4d:	lea    rax,[rbp-0x78]
   140013e51:	mov    r8d,0x2b234708
   140013e57:	lea    rdx,[rip+0x229ee]        # 0x14003684c
   140013e5e:	mov    QWORD PTR [rsp+0x78],rax
   140013e63:	mov    rcx,rsi
   140013e66:	call   0x14000e1f0
   140013e6b:	test   rax,rax
   140013e6e:	je     0x140013e7f
   140013e70:	xor    edx,edx
   140013e72:	mov    rcx,rax
   140013e75:	call   0x14000f030
   140013e7a:	mov    rdi,rax
   140013e7d:	jmp    0x140013e86
   140013e7f:	lea    rdi,[rip+0x1e91a]        # 0x1400327a0
   140013e86:	mov    rax,QWORD PTR [rip+0x3332b]        # 0x1400471b8
   140013e8d:	mov    rbx,QWORD PTR [rax]
   140013e90:	call   0x140007c10
   140013e95:	mov    rcx,QWORD PTR [rip+0x3331c]        # 0x1400471b8
   140013e9c:	mov    rdx,rax
   140013e9f:	call   QWORD PTR [rbx+0x68]
   140013ea2:	mov    rdx,rdi
   140013ea5:	mov    rcx,rax
   140013ea8:	mov    r8,QWORD PTR [rax]
   140013eab:	call   QWORD PTR [r8+0x10]
   140013eaf:	test   rax,rax
   140013eb2:	je     0x140013f5c
   140013eb8:	mov    r8,QWORD PTR [rax+0xa8]
   140013ebf:	lea    rcx,[rsp+0x70]
   140013ec4:	mov    QWORD PTR [rbp+0x3e8],rcx
   140013ecb:	lea    r9,[rbp+0x3d8]
   140013ed2:	lea    rcx,[rbp+0x188]
   140013ed9:	xor    edx,edx
   140013edb:	mov    QWORD PTR [rbp+0x3e0],rcx
   140013ee2:	lea    rcx,[rbp+0x3e0]
   140013ee9:	mov    QWORD PTR [rsp+0x60],rcx
   140013eee:	lea    rcx,[rbp+0x3e8]
   140013ef5:	mov    QWORD PTR [rsp+0x68],rcx
   140013efa:	lea    rcx,[rbp+0x3e0]
   140013f01:	mov    QWORD PTR [rsp+0x40],rcx
   140013f06:	lea    rcx,[rbp+0x3e8]
   140013f0d:	mov    QWORD PTR [rsp+0x48],rcx
   140013f12:	lea    rcx,[rbp+0x3e0]
   140013f19:	mov    QWORD PTR [rsp+0x50],rcx
   140013f1e:	lea    rcx,[rbp+0x3e8]
   140013f25:	mov    QWORD PTR [rsp+0x58],rcx
   140013f2a:	lea    rcx,[rbp+0x3d8]
   140013f31:	mov    QWORD PTR [rsp+0x38],rcx
   140013f36:	lea    rcx,[rsp+0x40]
   140013f3b:	mov    QWORD PTR [rsp+0x30],rcx
   140013f40:	lea    rcx,[rsp+0x50]
   140013f45:	mov    QWORD PTR [rsp+0x28],rcx
   140013f4a:	lea    rcx,[rsp+0x60]
   140013f4f:	mov    QWORD PTR [rsp+0x20],rcx
   140013f54:	mov    rcx,rsi
   140013f57:	call   0x1400123b0
   140013f5c:	mov    eax,DWORD PTR [rbp+0x188]
   140013f62:	sub    eax,0x1
   140013f65:	movsxd rbx,eax
   140013f68:	js     0x140013f8f
   140013f6a:	nop    WORD PTR [rax+rax*1+0x0]
   140013f70:	mov    rdx,QWORD PTR [rsp+0x78]
   140013f75:	mov    rcx,QWORD PTR [rbp+0x190]
   140013f7c:	mov    rdx,QWORD PTR [rdx+rbx*8]
   140013f80:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140013f84:	call   0x1400140b0
   140013f89:	sub    rbx,0x1
   140013f8d:	jns    0x140013f70
   140013f8f:	mov    rdx,QWORD PTR [rsp+0x78]
   140013f94:	mov    DWORD PTR [rsp+0x70],r14d
   140013f99:	cmp    DWORD PTR [rbp-0x80],r14d
   140013f9d:	jl     0x140013fe5
   140013f9f:	lea    rax,[rbp-0x78]
   140013fa3:	cmp    rdx,rax
   140013fa6:	je     0x140013fe5
   140013fa8:	test   rdx,rdx
   140013fab:	je     0x140013fc6
   140013fad:	test   DWORD PTR [rbp-0x7c],0xc0000000
   140013fb4:	jne    0x140013fc6
   140013fb6:	mov    rax,QWORD PTR [rip+0x1e3d3]        # 0x140032390
   140013fbd:	mov    rcx,QWORD PTR [rax]
   140013fc0:	mov    rax,QWORD PTR [rcx]
   140013fc3:	call   QWORD PTR [rax+0x28]
   140013fc6:	mov    eax,DWORD PTR [rbp-0x7c]
   140013fc9:	lea    rdx,[rbp-0x78]
   140013fcd:	and    eax,0x3fffffff
   140013fd2:	mov    QWORD PTR [rsp+0x78],rdx
   140013fd7:	bts    eax,0x1f
   140013fdb:	mov    DWORD PTR [rbp-0x80],0x40
   140013fe2:	mov    DWORD PTR [rbp-0x7c],eax
   140013fe5:	test   DWORD PTR [rbp-0x7c],0xc0000000
   140013fec:	jne    0x14001400c
   140013fee:	test   rdx,rdx
   140013ff1:	je     0x140014008
   140013ff3:	mov    rax,QWORD PTR [rip+0x1e396]        # 0x140032390
   140013ffa:	mov    rcx,QWORD PTR [rax]
   140013ffd:	mov    rax,QWORD PTR [rcx]
   140014000:	call   QWORD PTR [rax+0x28]
   140014003:	mov    QWORD PTR [rsp+0x78],r14
   140014008:	mov    DWORD PTR [rbp-0x80],r14d
   14001400c:	mov    rdx,QWORD PTR [rbp+0x190]
   140014013:	mov    DWORD PTR [rbp+0x188],r14d
   14001401a:	cmp    DWORD PTR [rbp+0x198],r14d
   140014021:	jl     0x14001407d
   140014023:	lea    rax,[rbp+0x1a0]
   14001402a:	cmp    rdx,rax
   14001402d:	je     0x14001407d
   14001402f:	test   rdx,rdx
   140014032:	je     0x140014050
   140014034:	test   DWORD PTR [rbp+0x19c],0xc0000000
   14001403e:	jne    0x140014050
   140014040:	mov    rax,QWORD PTR [rip+0x1e349]        # 0x140032390
   140014047:	mov    rcx,QWORD PTR [rax]
   14001404a:	mov    rax,QWORD PTR [rcx]
   14001404d:	call   QWORD PTR [rax+0x28]
   140014050:	mov    eax,DWORD PTR [rbp+0x19c]
   140014056:	lea    rdx,[rbp+0x1a0]
   14001405d:	and    eax,0x3fffffff
   140014062:	mov    QWORD PTR [rbp+0x190],rdx
   140014069:	bts    eax,0x1f
   14001406d:	mov    DWORD PTR [rbp+0x198],0x40
   140014077:	mov    DWORD PTR [rbp+0x19c],eax
   14001407d:	test   DWORD PTR [rbp+0x19c],0xc0000000
   140014087:	jne    0x14001409e
   140014089:	test   rdx,rdx
   14001408c:	je     0x14001409e
   14001408e:	mov    rax,QWORD PTR [rip+0x1e2fb]        # 0x140032390
   140014095:	mov    rcx,QWORD PTR [rax]
   140014098:	mov    rax,QWORD PTR [rcx]
   14001409b:	call   QWORD PTR [rax+0x28]
   14001409e:	add    rsp,0x4a0
   1400140a5:	pop    r14
   1400140a7:	pop    rdi
   1400140a8:	pop    rsi
   1400140a9:	pop    rbx
   1400140aa:	pop    rbp
   1400140ab:	ret    
   1400140ac:	int3   
   1400140ad:	int3   
   1400140ae:	int3   
   1400140af:	int3   
   1400140b0:	rex push rbp
   1400140b2:	lea    rbp,[rsp-0x50]
   1400140b7:	sub    rsp,0x150
   1400140be:	mov    QWORD PTR [rsp+0x148],rsi
   1400140c6:	mov    r8d,0x2
   1400140cc:	mov    rsi,rcx
   1400140cf:	lea    rcx,[rsp+0x78]
   1400140d4:	call   0x14001a2e0
   1400140d9:	lea    rcx,[rsp+0x78]
   1400140de:	call   0x14001a7c0
   1400140e3:	test   al,al
   1400140e5:	je     0x1400141fa
   1400140eb:	mov    QWORD PTR [rsp+0x160],rbx
   1400140f3:	mov    QWORD PTR [rsp+0x140],rdi
   1400140fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140014100:	lea    rcx,[rsp+0x78]
   140014105:	call   0x14001a6d0
   14001410a:	mov    rdx,rax
   14001410d:	xor    r8d,r8d
   140014110:	mov    rcx,rsi
   140014113:	call   0x14000e1f0
   140014118:	mov    rdi,rax
   14001411b:	test   rax,rax
   14001411e:	je     0x1400141ce
   140014124:	lea    rdx,[rip+0x226f5]        # 0x140036820
   14001412b:	lea    rcx,[rsp+0x78]
   140014130:	call   0x1400130b0
   140014135:	test   rax,rax
   140014138:	je     0x14001413f
   14001413a:	mov    rbx,QWORD PTR [rax]
   14001413d:	jmp    0x140014141
   14001413f:	xor    ebx,ebx
   140014141:	lea    rcx,[rsp+0x78]
   140014146:	call   0x14001a6e0
   14001414b:	lea    rcx,[rbp+0x70]
   14001414f:	mov    BYTE PTR [rbp+0x70],0x0
   140014153:	mov    QWORD PTR [rsp+0x70],rcx
   140014158:	lea    r9,[rsp+0x68]
   14001415d:	lea    rcx,[rbp+0x70]
   140014161:	mov    QWORD PTR [rsp+0x68],rbx
   140014166:	mov    r8,QWORD PTR [rax+0x10]
   14001416a:	mov    rdx,rax
   14001416d:	mov    QWORD PTR [rsp+0x60],rcx
   140014172:	lea    rcx,[rbp+0x70]
   140014176:	mov    QWORD PTR [rsp+0x50],rcx
   14001417b:	lea    rcx,[rbp+0x70]
   14001417f:	mov    QWORD PTR [rsp+0x40],rcx
   140014184:	lea    rcx,[rbp+0x78]
   140014188:	mov    QWORD PTR [rsp+0x38],rcx
   14001418d:	lea    rcx,[rsp+0x48]
   140014192:	mov    QWORD PTR [rsp+0x30],rcx
   140014197:	lea    rcx,[rsp+0x40]
   14001419c:	mov    QWORD PTR [rsp+0x28],rcx
   1400141a1:	lea    rcx,[rsp+0x58]
   1400141a6:	mov    QWORD PTR [rsp+0x20],rcx
   1400141ab:	mov    rcx,rdi
   1400141ae:	mov    QWORD PTR [rsp+0x58],rbx
   1400141b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400141b8:	call   0x140012600
   1400141bd:	cmp    BYTE PTR [rbp+0x70],0x0
   1400141c1:	je     0x1400141ce
   1400141c3:	mov    rdx,rdi
   1400141c6:	mov    rcx,rsi
   1400141c9:	call   0x140011000
   1400141ce:	lea    rcx,[rsp+0x78]
   1400141d3:	call   0x14001a3b0
   1400141d8:	lea    rcx,[rsp+0x78]
   1400141dd:	call   0x14001a7c0
   1400141e2:	test   al,al
   1400141e4:	jne    0x140014100
   1400141ea:	mov    rdi,QWORD PTR [rsp+0x140]
   1400141f2:	mov    rbx,QWORD PTR [rsp+0x160]
   1400141fa:	cmp    DWORD PTR [rbp-0x78],0x0
   1400141fe:	mov    rsi,QWORD PTR [rsp+0x148]
   140014206:	mov    rdx,QWORD PTR [rbp-0x80]
   14001420a:	mov    DWORD PTR [rsp+0x78],0x0
   140014212:	jl     0x140014259
   140014214:	lea    rax,[rbp-0x70]
   140014218:	cmp    rdx,rax
   14001421b:	je     0x140014259
   14001421d:	test   rdx,rdx
   140014220:	je     0x14001423b
   140014222:	test   DWORD PTR [rbp-0x74],0xc0000000
   140014229:	jne    0x14001423b
   14001422b:	mov    rax,QWORD PTR [rip+0x1e15e]        # 0x140032390
   140014232:	mov    rcx,QWORD PTR [rax]
   140014235:	mov    rax,QWORD PTR [rcx]
   140014238:	call   QWORD PTR [rax+0x28]
   14001423b:	mov    eax,DWORD PTR [rbp-0x74]
   14001423e:	lea    rdx,[rbp-0x70]
   140014242:	and    eax,0x3fffffff
   140014247:	mov    QWORD PTR [rbp-0x80],rdx
   14001424b:	bts    eax,0x1f
   14001424f:	mov    DWORD PTR [rbp-0x78],0x8
   140014256:	mov    DWORD PTR [rbp-0x74],eax
   140014259:	test   DWORD PTR [rbp-0x74],0xc0000000
   140014260:	jne    0x140014277
   140014262:	test   rdx,rdx
   140014265:	je     0x140014277
   140014267:	mov    rax,QWORD PTR [rip+0x1e122]        # 0x140032390
   14001426e:	mov    rcx,QWORD PTR [rax]
   140014271:	mov    rax,QWORD PTR [rcx]
   140014274:	call   QWORD PTR [rax+0x28]
   140014277:	add    rsp,0x150
   14001427e:	pop    rbp
   14001427f:	ret    
   140014280:	mov    rax,rsp
   140014283:	sub    rsp,0xe8
   14001428a:	mov    QWORD PTR [rax+0x18],rsi
   14001428e:	mov    r8d,0x2
   140014294:	mov    rsi,rcx
   140014297:	mov    QWORD PTR [rax-0x8],rdi
   14001429b:	lea    rcx,[rsp+0x20]
   1400142a0:	call   0x14001a2e0
   1400142a5:	mov    rcx,rsi
   1400142a8:	call   0x14000ec10
   1400142ad:	mov    edi,eax
   1400142af:	sub    edi,0x1
   1400142b2:	js     0x140014324
   1400142b4:	mov    QWORD PTR [rsp+0xf0],rbx
   1400142bc:	mov    QWORD PTR [rsp+0xf8],rbp
   1400142c4:	lea    rbp,[rip+0x22581]        # 0x14003684c
   1400142cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400142d0:	mov    edx,edi
   1400142d2:	mov    rcx,rsi
   1400142d5:	call   0x14000ece0
   1400142da:	mov    rdx,rax
   1400142dd:	lea    rcx,[rsp+0x20]
   1400142e2:	mov    rbx,rax
   1400142e5:	call   0x14001a5f0
   1400142ea:	test   al,al
   1400142ec:	jne    0x14001430f
   1400142ee:	xor    ecx,ecx
   1400142f0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   1400142f4:	inc    rcx
   1400142f7:	cmp    al,BYTE PTR [rcx+rbp*1-0x1]
   1400142fb:	jne    0x140014305
   1400142fd:	cmp    rcx,0x7
   140014301:	jne    0x1400142f0
   140014303:	jmp    0x14001430f
   140014305:	mov    edx,edi
   140014307:	mov    rcx,rsi
   14001430a:	call   0x140010fa0
   14001430f:	sub    edi,0x1
   140014312:	jns    0x1400142d0
   140014314:	mov    rbp,QWORD PTR [rsp+0xf8]
   14001431c:	mov    rbx,QWORD PTR [rsp+0xf0]
   140014324:	cmp    DWORD PTR [rsp+0x30],0x0
   140014329:	mov    rdi,QWORD PTR [rsp+0xe0]
   140014331:	mov    rsi,QWORD PTR [rsp+0x100]
   140014339:	mov    rdx,QWORD PTR [rsp+0x28]
   14001433e:	mov    DWORD PTR [rsp+0x20],0x0
   140014346:	jl     0x140014394
   140014348:	lea    rax,[rsp+0x38]
   14001434d:	cmp    rdx,rax
   140014350:	je     0x140014394
   140014352:	test   rdx,rdx
   140014355:	je     0x140014371
   140014357:	test   DWORD PTR [rsp+0x34],0xc0000000
   14001435f:	jne    0x140014371
   140014361:	mov    rax,QWORD PTR [rip+0x1e028]        # 0x140032390
   140014368:	mov    rcx,QWORD PTR [rax]
   14001436b:	mov    rax,QWORD PTR [rcx]
   14001436e:	call   QWORD PTR [rax+0x28]
   140014371:	mov    eax,DWORD PTR [rsp+0x34]
   140014375:	lea    rdx,[rsp+0x38]
   14001437a:	and    eax,0x3fffffff
   14001437f:	mov    QWORD PTR [rsp+0x28],rdx
   140014384:	bts    eax,0x1f
   140014388:	mov    DWORD PTR [rsp+0x30],0x8
   140014390:	mov    DWORD PTR [rsp+0x34],eax
   140014394:	test   DWORD PTR [rsp+0x34],0xc0000000
   14001439c:	jne    0x1400143b3
   14001439e:	test   rdx,rdx
   1400143a1:	je     0x1400143b3
   1400143a3:	mov    rax,QWORD PTR [rip+0x1dfe6]        # 0x140032390
   1400143aa:	mov    rcx,QWORD PTR [rax]
   1400143ad:	mov    rax,QWORD PTR [rcx]
   1400143b0:	call   QWORD PTR [rax+0x28]
   1400143b3:	add    rsp,0xe8
   1400143ba:	ret    
   1400143bb:	int3   
   1400143bc:	int3   
   1400143bd:	int3   
   1400143be:	int3   
   1400143bf:	int3   
   1400143c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400143c5:	cmp    BYTE PTR [rcx+0x10],0x0
   1400143c9:	mov    rbx,rdx
   1400143cc:	je     0x1400143d6
   1400143ce:	mov    al,0x1
   1400143d0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400143d5:	ret    
   1400143d6:	mov    eax,DWORD PTR [rcx+0x30]
   1400143d9:	cdq    
   1400143da:	xor    eax,edx
   1400143dc:	sub    eax,edx
   1400143de:	test   eax,eax
   1400143e0:	jle    0x140014423
   1400143e2:	mov    r10,QWORD PTR [rcx+0x28]
   1400143e6:	xor    r9d,r9d
   1400143e9:	movsxd r11,eax
   1400143ec:	nop    DWORD PTR [rax+0x0]
   1400143f0:	mov    r8,QWORD PTR [r10]
   1400143f3:	mov    rax,rbx
   1400143f6:	sub    r8,rbx
   1400143f9:	nop    DWORD PTR [rax+0x0]
   140014400:	movzx  edx,BYTE PTR [rax]
   140014403:	movzx  ecx,BYTE PTR [rax+r8*1]
   140014408:	sub    edx,ecx
   14001440a:	jne    0x140014413
   14001440c:	inc    rax
   14001440f:	test   ecx,ecx
   140014411:	jne    0x140014400
   140014413:	test   edx,edx
   140014415:	je     0x1400143ce
   140014417:	inc    r9
   14001441a:	add    r10,0x10
   14001441e:	cmp    r9,r11
   140014421:	jl     0x1400143f0
   140014423:	mov    rbx,QWORD PTR [rsp+0x8]
   140014428:	xor    al,al
   14001442a:	ret    
   14001442b:	int3   
   14001442c:	int3   
   14001442d:	int3   
   14001442e:	int3   
   14001442f:	int3   
   140014430:	mov    QWORD PTR [rsp+0x8],rbx
   140014435:	push   rdi
   140014436:	sub    rsp,0x20
   14001443a:	mov    rbx,rcx
   14001443d:	call   0x140015700
   140014442:	xor    edi,edi
   140014444:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001444b:	jne    0x140014496
   14001444d:	mov    rdx,QWORD PTR [rbx+0x8]
   140014451:	test   rdx,rdx
   140014454:	je     0x14001446a
   140014456:	mov    rax,QWORD PTR [rip+0x1df33]        # 0x140032390
   14001445d:	mov    rcx,QWORD PTR [rax]
   140014460:	mov    rax,QWORD PTR [rcx]
   140014463:	call   QWORD PTR [rax+0x28]
   140014466:	mov    QWORD PTR [rbx+0x8],rdi
   14001446a:	mov    DWORD PTR [rbx+0x10],edi
   14001446d:	test   DWORD PTR [rbx+0x14],0xc0000000
   140014474:	jne    0x140014496
   140014476:	mov    rdx,QWORD PTR [rbx+0x8]
   14001447a:	test   rdx,rdx
   14001447d:	je     0x140014493
   14001447f:	mov    rax,QWORD PTR [rip+0x1df0a]        # 0x140032390
   140014486:	mov    rcx,QWORD PTR [rax]
   140014489:	mov    rax,QWORD PTR [rcx]
   14001448c:	call   QWORD PTR [rax+0x28]
   14001448f:	mov    QWORD PTR [rbx+0x8],rdi
   140014493:	mov    DWORD PTR [rbx+0x10],edi
   140014496:	mov    rbx,QWORD PTR [rsp+0x30]
   14001449b:	add    rsp,0x20
   14001449f:	pop    rdi
   1400144a0:	ret    
   1400144a1:	int3   
   1400144a2:	int3   
   1400144a3:	int3   
   1400144a4:	int3   
   1400144a5:	int3   
   1400144a6:	int3   
   1400144a7:	int3   
   1400144a8:	int3   
   1400144a9:	int3   
   1400144aa:	int3   
   1400144ab:	int3   
   1400144ac:	int3   
   1400144ad:	int3   
   1400144ae:	int3   
   1400144af:	int3   
   1400144b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400144b5:	push   rsi
   1400144b6:	sub    rsp,0x20
   1400144ba:	mov    ebx,DWORD PTR [rcx]
   1400144bc:	mov    rsi,rcx
   1400144bf:	sub    ebx,0x1
   1400144c2:	js     0x1400144ee
   1400144c4:	mov    QWORD PTR [rsp+0x30],rdi
   1400144c9:	movsxd rax,ebx
   1400144cc:	lea    rdi,[rax+rax*4]
   1400144d0:	shl    rdi,0x3
   1400144d4:	mov    rcx,QWORD PTR [rsi+0x8]
   1400144d8:	add    rcx,rdi
   1400144db:	call   0x140022d40
   1400144e0:	add    rdi,0xffffffffffffffd8
   1400144e4:	sub    ebx,0x1
   1400144e7:	jns    0x1400144d4
   1400144e9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400144ee:	xor    ebx,ebx
   1400144f0:	lea    rdx,[rsi+0x18]
   1400144f4:	xor    r9d,r9d
   1400144f7:	mov    DWORD PTR [rsi],ebx
   1400144f9:	lea    rcx,[rsi+0x8]
   1400144fd:	lea    r8d,[rbx+0x8]
   140014501:	call   0x140014870
   140014506:	test   DWORD PTR [rsi+0x14],0xc0000000
   14001450d:	jne    0x14001452f
   14001450f:	mov    rdx,QWORD PTR [rsi+0x8]
   140014513:	test   rdx,rdx
   140014516:	je     0x14001452c
   140014518:	mov    rax,QWORD PTR [rip+0x1de71]        # 0x140032390
   14001451f:	mov    rcx,QWORD PTR [rax]
   140014522:	mov    rax,QWORD PTR [rcx]
   140014525:	call   QWORD PTR [rax+0x28]
   140014528:	mov    QWORD PTR [rsi+0x8],rbx
   14001452c:	mov    DWORD PTR [rsi+0x10],ebx
   14001452f:	mov    rbx,QWORD PTR [rsp+0x38]
   140014534:	add    rsp,0x20
   140014538:	pop    rsi
   140014539:	ret    
   14001453a:	int3   
   14001453b:	int3   
   14001453c:	int3   
   14001453d:	int3   
   14001453e:	int3   
   14001453f:	int3   
   140014540:	sub    rsp,0x38
   140014544:	mov    QWORD PTR [rsp+0x20],0x0
   14001454d:	call   0x140014560
   140014552:	add    rsp,0x38
   140014556:	ret    
   140014557:	int3   
   140014558:	int3   
   140014559:	int3   
   14001455a:	int3   
   14001455b:	int3   
   14001455c:	int3   
   14001455d:	int3   
   14001455e:	int3   
   14001455f:	int3   
   140014560:	mov    rax,rsp
   140014563:	push   rbp
   140014564:	push   rbx
   140014565:	lea    rbp,[rax-0x288]
   14001456c:	sub    rsp,0x378
   140014573:	mov    QWORD PTR [rax+0x8],rsi
   140014577:	or     rbx,0xffffffffffffffff
   14001457b:	mov    QWORD PTR [rax+0x18],r12
   14001457f:	mov    rsi,r8
   140014582:	mov    QWORD PTR [rax+0x20],r14
   140014586:	mov    r12,r9
   140014589:	mov    QWORD PTR [rax-0x18],r15
   14001458d:	mov    r14,rdx
   140014590:	mov    r15,rcx
   140014593:	inc    rbx
   140014596:	cmp    BYTE PTR [r8+rbx*1],0x0
   14001459b:	jne    0x140014593
   14001459d:	cmp    ebx,0x3
   1400145a0:	jle    0x1400145bd
   1400145a2:	cmp    BYTE PTR [r8],0xef
   1400145a6:	jne    0x1400145bd
   1400145a8:	cmp    BYTE PTR [r8+0x1],0xbb
   1400145ad:	jne    0x1400145bd
   1400145af:	cmp    BYTE PTR [r8+0x2],0xbf
   1400145b4:	jne    0x1400145bd
   1400145b6:	add    rsi,0x3
   1400145ba:	sub    ebx,0x3
   1400145bd:	lea    r8d,[rbx+0x1]
   1400145c1:	mov    r9d,0x9
   1400145c7:	mov    rdx,rsi
   1400145ca:	lea    rcx,[rsp+0x40]
   1400145cf:	call   0x140020940
   1400145d4:	cmp    ebx,0x2
   1400145d7:	jle    0x140014648
   1400145d9:	cmp    BYTE PTR [rsi],0xff
   1400145dc:	jne    0x140014648
   1400145de:	cmp    BYTE PTR [rsi+0x1],0xfe
   1400145e2:	jne    0x140014648
   1400145e4:	mov    r9d,0x4
   1400145ea:	mov    QWORD PTR [rsp+0x398],rdi
   1400145f2:	xor    r8d,r8d
   1400145f5:	lea    rcx,[rsi+0x2]
   1400145f9:	xor    edx,edx
   1400145fb:	call   QWORD PTR [rip+0x1dc6f]        # 0x140032270
   140014601:	movsxd rdi,eax
   140014604:	mov    rcx,rdi
   140014607:	call   0x140007bf0
   14001460c:	mov    r9d,0x4
   140014612:	lea    rcx,[rsi+0x2]
   140014616:	mov    r8d,edi
   140014619:	mov    rdx,rax
   14001461c:	mov    rbx,rax
   14001461f:	call   QWORD PTR [rip+0x1dc4b]        # 0x140032270
   140014625:	mov    r9d,edi
   140014628:	mov    DWORD PTR [rsp+0x20],0x9
   140014630:	mov    r8d,edi
   140014633:	lea    rcx,[rsp+0x40]
   140014638:	mov    rdx,rbx
   14001463b:	call   0x140020a50
   140014640:	mov    rdi,QWORD PTR [rsp+0x398]
   140014648:	lea    r8,[rip+0x22215]        # 0x140036864
   14001464f:	lea    rdx,[rsp+0x40]
   140014654:	lea    rcx,[rbp-0x78]
   140014658:	call   0x140022c30
   14001465d:	movups xmm0,XMMWORD PTR [rip+0x1e12c]        # 0x140032790
   140014664:	lea    rdx,[rip+0x22205]        # 0x140036870
   14001466b:	mov    QWORD PTR [rbp+0x268],0x0
   140014676:	lea    rcx,[rbp-0x78]
   14001467a:	movups XMMWORD PTR [rbp+0x258],xmm0
   140014681:	call   0x140024030
   140014686:	lea    rax,[rsp+0x40]
   14001468b:	mov    QWORD PTR [rbp+0x240],r15
   140014692:	lea    rcx,[rbp-0x78]
   140014696:	mov    QWORD PTR [rbp+0x250],rax
   14001469d:	mov    QWORD PTR [rbp+0x248],r14
   1400146a4:	mov    BYTE PTR [rbp-0x80],0x1
   1400146a8:	call   0x140023fb0
   1400146ad:	mov    rbx,QWORD PTR [rbp+0x2b0]
   1400146b4:	mov    rsi,QWORD PTR [rsp+0x390]
   1400146bc:	test   rbx,rbx
   1400146bf:	jne    0x140014781
   1400146c5:	lea    rcx,[rbp-0x80]
   1400146c9:	call   0x140014d60
   1400146ce:	test   al,al
   1400146d0:	jne    0x140014781
   1400146d6:	lea    rdx,[rip+0x221cb]        # 0x1400368a8
   1400146dd:	lea    rcx,[rbp-0x80]
   1400146e1:	call   0x1400157d0
   1400146e6:	xor    bl,bl
   1400146e8:	cmp    QWORD PTR [rbp+0x268],0x0
   1400146f0:	mov    r15,QWORD PTR [rsp+0x370]
   1400146f8:	mov    r14,QWORD PTR [rsp+0x3a8]
   140014700:	mov    r12,QWORD PTR [rsp+0x3a0]
   140014708:	je     0x140014716
   14001470a:	lea    rcx,[rbp+0x268]
   140014711:	call   0x14001b030
   140014716:	lea    rcx,[rbp+0x220]
   14001471d:	call   0x140014430
   140014722:	cmp    QWORD PTR [rbp+0x218],0x0
   14001472a:	je     0x140014738
   14001472c:	lea    rcx,[rbp+0x218]
   140014733:	call   0x14001b030
   140014738:	lea    rcx,[rbp+0x1e8]
   14001473f:	call   0x140022d40
   140014744:	lea    rcx,[rbp+0x90]
   14001474b:	call   0x1400144b0
   140014750:	test   DWORD PTR [rsp+0x4c],0xc0000000
   140014758:	jne    0x140014774
   14001475a:	mov    rdx,QWORD PTR [rsp+0x40]
   14001475f:	test   rdx,rdx
   140014762:	je     0x140014774
   140014764:	mov    rax,QWORD PTR [rip+0x1dc25]        # 0x140032390
   14001476b:	mov    rcx,QWORD PTR [rax]
   14001476e:	mov    rax,QWORD PTR [rcx]
   140014771:	call   QWORD PTR [rax+0x28]
   140014774:	movzx  eax,bl
   140014777:	add    rsp,0x378
   14001477e:	pop    rbx
   14001477f:	pop    rbp
   140014780:	ret    
   140014781:	mov    rdx,QWORD PTR [rbp+0x240]
   140014788:	lea    rcx,[rbp-0x80]
   14001478c:	call   0x140015540
   140014791:	test   al,al
   140014793:	je     0x1400146e6
   140014799:	cmp    BYTE PTR [rbp-0x80],0x0
   14001479d:	je     0x1400146e6
   1400147a3:	lea    rcx,[rbp+0x268]
   1400147aa:	call   0x14001b050
   1400147af:	test   rbx,rbx
   1400147b2:	mov    QWORD PTR [rsp+0x30],rax
   1400147b7:	lea    rax,[rbp+0x258]
   1400147be:	mov    r9,r14
   1400147c1:	lea    rdx,[rsp+0x30]
   1400147c6:	mov    QWORD PTR [rsp+0x38],rax
   1400147cb:	cmovne rdx,rbx
   1400147cf:	mov    r8,r12
   1400147d2:	mov    rcx,r15
   1400147d5:	call   0x140018480
   1400147da:	movzx  ebx,al
   1400147dd:	jmp    0x1400146e8
   1400147e2:	int3   
   1400147e3:	int3   
   1400147e4:	int3   
   1400147e5:	int3   
   1400147e6:	int3   
   1400147e7:	int3   
   1400147e8:	int3   
   1400147e9:	int3   
   1400147ea:	int3   
   1400147eb:	int3   
   1400147ec:	int3   
   1400147ed:	int3   
   1400147ee:	int3   
   1400147ef:	int3   
   1400147f0:	sub    rsp,0x38
   1400147f4:	cmp    edx,0x3
   1400147f7:	jle    0x140014811
   1400147f9:	cmp    BYTE PTR [rcx],0xef
   1400147fc:	jne    0x140014811
   1400147fe:	cmp    BYTE PTR [rcx+0x1],0xbb
   140014802:	jne    0x140014811
   140014804:	cmp    BYTE PTR [rcx+0x2],0xbf
   140014808:	jne    0x140014811
   14001480a:	add    rcx,0x3
   14001480e:	sub    edx,0x3
   140014811:	cmp    edx,0x2
   140014814:	jle    0x140014828
   140014816:	cmp    BYTE PTR [rcx],0xff
   140014819:	jne    0x140014828
   14001481b:	cmp    BYTE PTR [rcx+0x1],0xfe
   14001481f:	jne    0x140014828
   140014821:	add    rcx,0x2
   140014825:	sub    edx,0x2
   140014828:	movsd  xmm0,QWORD PTR [rip+0x22028]        # 0x140036858
   140014830:	movzx  eax,WORD PTR [rip+0x22029]        # 0x140036860
   140014837:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001483d:	mov    WORD PTR [rsp+0x28],ax
   140014842:	cmp    edx,0x9
   140014845:	jae    0x14001484e
   140014847:	xor    al,al
   140014849:	add    rsp,0x38
   14001484d:	ret    
   14001484e:	mov    r8d,0x9
   140014854:	lea    rdx,[rsp+0x20]
   140014859:	call   0x140022670
   14001485e:	test   eax,eax
   140014860:	sete   al
   140014863:	add    rsp,0x38
   140014867:	ret    
   140014868:	int3   
   140014869:	int3   
   14001486a:	int3   
   14001486b:	int3   
   14001486c:	int3   
   14001486d:	int3   
   14001486e:	int3   
   14001486f:	int3   
   140014870:	mov    QWORD PTR [rsp+0x10],rbx
   140014875:	mov    QWORD PTR [rsp+0x18],rbp
   14001487a:	push   rdi
   14001487b:	sub    rsp,0x20
   14001487f:	movsxd r10,r9d
   140014882:	mov    ebp,r8d
   140014885:	mov    rdi,rdx
   140014888:	mov    rbx,rcx
   14001488b:	cmp    r10d,r8d
   14001488e:	jg     0x140014902
   140014890:	cmp    r10d,DWORD PTR [rcx+0x8]
   140014894:	jg     0x1400148f2
   140014896:	mov    rdx,QWORD PTR [rcx]
   140014899:	mov    QWORD PTR [rsp+0x30],rsi
   14001489e:	mov    esi,DWORD PTR [rcx+0xc]
   1400148a1:	and    esi,0xc0000000
   1400148a7:	cmp    rdx,rdi
   1400148aa:	je     0x1400148ed
   1400148ac:	test   rdx,rdx
   1400148af:	je     0x1400148d8
   1400148b1:	lea    r8,[r10+r10*4]
   1400148b5:	mov    rcx,rdi
   1400148b8:	shl    r8,0x3
   1400148bc:	call   0x140026f70
   1400148c1:	test   esi,esi
   1400148c3:	jne    0x1400148d8
   1400148c5:	mov    rax,QWORD PTR [rip+0x1dac4]        # 0x140032390
   1400148cc:	mov    rdx,QWORD PTR [rbx]
   1400148cf:	mov    rcx,QWORD PTR [rax]
   1400148d2:	mov    rax,QWORD PTR [rcx]
   1400148d5:	call   QWORD PTR [rax+0x28]
   1400148d8:	mov    eax,DWORD PTR [rbx+0xc]
   1400148db:	and    eax,0x3fffffff
   1400148e0:	mov    QWORD PTR [rbx],rdi
   1400148e3:	bts    eax,0x1f
   1400148e7:	mov    DWORD PTR [rbx+0x8],ebp
   1400148ea:	mov    DWORD PTR [rbx+0xc],eax
   1400148ed:	mov    rsi,QWORD PTR [rsp+0x30]
   1400148f2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400148f7:	mov    rbp,QWORD PTR [rsp+0x40]
   1400148fc:	add    rsp,0x20
   140014900:	pop    rdi
   140014901:	ret    
   140014902:	mov    eax,DWORD PTR [rcx+0x8]
   140014905:	cmp    r10d,eax
   140014908:	jg     0x1400148f2
   14001490a:	test   r9d,r9d
   14001490d:	jne    0x140014948
   14001490f:	test   DWORD PTR [rcx+0xc],0xc0000000
   140014916:	jne    0x1400148f2
   140014918:	mov    rdx,QWORD PTR [rcx]
   14001491b:	xor    edi,edi
   14001491d:	test   rdx,rdx
   140014920:	je     0x140014935
   140014922:	mov    rax,QWORD PTR [rip+0x1da67]        # 0x140032390
   140014929:	mov    rcx,QWORD PTR [rax]
   14001492c:	mov    rax,QWORD PTR [rcx]
   14001492f:	call   QWORD PTR [rax+0x28]
   140014932:	mov    QWORD PTR [rbx],rdi
   140014935:	mov    DWORD PTR [rbx+0x8],edi
   140014938:	mov    rbx,QWORD PTR [rsp+0x38]
   14001493d:	mov    rbp,QWORD PTR [rsp+0x40]
   140014942:	add    rsp,0x20
   140014946:	pop    rdi
   140014947:	ret    
   140014948:	test   DWORD PTR [rcx+0xc],0xc0000000
   14001494f:	jne    0x1400148f2
   140014951:	cmp    r10d,eax
   140014954:	je     0x1400148f2
   140014956:	mov    rdx,QWORD PTR [rcx]
   140014959:	test   rdx,rdx
   14001495c:	je     0x1400148f2
   14001495e:	mov    DWORD PTR [rcx+0x8],r10d
   140014962:	lea    r8,[r10+r10*4]
   140014966:	mov    rax,QWORD PTR [rip+0x1da23]        # 0x140032390
   14001496d:	shl    r8,0x3
   140014971:	mov    rcx,QWORD PTR [rax]
   140014974:	mov    r9,QWORD PTR [rcx]
   140014977:	call   QWORD PTR [r9+0x18]
   14001497b:	mov    rbp,QWORD PTR [rsp+0x40]
   140014980:	mov    QWORD PTR [rbx],rax
   140014983:	mov    rbx,QWORD PTR [rsp+0x38]
   140014988:	add    rsp,0x20
   14001498c:	pop    rdi
   14001498d:	ret    
   14001498e:	int3   
   14001498f:	int3   
   140014990:	mov    QWORD PTR [rsp+0x18],rbx
   140014995:	mov    QWORD PTR [rsp+0x20],rsi
   14001499a:	push   r14
   14001499c:	sub    rsp,0x130
   1400149a3:	mov    r14,rdx
   1400149a6:	mov    rsi,rcx
   1400149a9:	lea    rdx,[rip+0x22218]        # 0x140036bc8
   1400149b0:	add    rcx,0x8
   1400149b4:	xor    r8d,r8d
   1400149b7:	call   0x140022f20
   1400149bc:	test   al,al
   1400149be:	jne    0x1400149d6
   1400149c0:	lea    rdx,[rip+0x221f1]        # 0x140036bb8
   1400149c7:	mov    rcx,rsi
   1400149ca:	call   0x1400157d0
   1400149cf:	xor    al,al
   1400149d1:	jmp    0x140014a93
   1400149d6:	mov    QWORD PTR [rsp+0x140],rbp
   1400149de:	xor    edx,edx
   1400149e0:	mov    rcx,r14
   1400149e3:	mov    QWORD PTR [rsp+0x148],rdi
   1400149eb:	call   0x140011400
   1400149f0:	xor    r8d,r8d
   1400149f3:	lea    rdx,[rip+0x21d76]        # 0x140036770
   1400149fa:	lea    rcx,[rsi+0x8]
   1400149fe:	xor    edi,edi
   140014a00:	call   0x140022f20
   140014a05:	test   al,al
   140014a07:	jne    0x140014a81
   140014a09:	nop    DWORD PTR [rax+0x0]
   140014a10:	lea    edx,[rdi+0x1]
   140014a13:	mov    rcx,r14
   140014a16:	call   0x140011400
   140014a1b:	mov    edx,edi
   140014a1d:	mov    rcx,r14
   140014a20:	call   0x14000e9b0
   140014a25:	mov    rdx,rax
   140014a28:	mov    rcx,rsi
   140014a2b:	call   0x140015540
   140014a30:	test   al,al
   140014a32:	je     0x140014ad1
   140014a38:	xor    r8d,r8d
   140014a3b:	lea    rdx,[rip+0x21d3a]        # 0x14003677c
   140014a42:	lea    rcx,[rsi+0x8]
   140014a46:	call   0x140022f20
   140014a4b:	test   al,al
   140014a4d:	jne    0x140014a68
   140014a4f:	xor    r9d,r9d
   140014a52:	lea    r8,[rip+0x21d17]        # 0x140036770
   140014a59:	xor    edx,edx
   140014a5b:	lea    rcx,[rsi+0x8]
   140014a5f:	call   0x140023680
   140014a64:	test   al,al
   140014a66:	je     0x140014aa9
   140014a68:	xor    r8d,r8d
   140014a6b:	lea    rdx,[rip+0x21cfe]        # 0x140036770
   140014a72:	lea    rcx,[rsi+0x8]
   140014a76:	inc    edi
   140014a78:	call   0x140022f20
   140014a7d:	test   al,al
   140014a7f:	je     0x140014a10
   140014a81:	mov    al,0x1
   140014a83:	mov    rbp,QWORD PTR [rsp+0x140]
   140014a8b:	mov    rdi,QWORD PTR [rsp+0x148]
   140014a93:	lea    r11,[rsp+0x130]
   140014a9b:	mov    rbx,QWORD PTR [r11+0x20]
   140014a9f:	mov    rsi,QWORD PTR [r11+0x28]
   140014aa3:	mov    rsp,r11
   140014aa6:	pop    r14
   140014aa8:	ret    
   140014aa9:	lea    r8,[rip+0x21cc0]        # 0x140036770
   140014ab0:	lea    rdx,[rip+0x22131]        # 0x140036be8
   140014ab7:	lea    rcx,[rsp+0x20]
   140014abc:	call   0x140001600
   140014ac1:	mov    rcx,rsi
   140014ac4:	lea    rdx,[rax+0x9]
   140014ac8:	call   0x1400157d0
   140014acd:	xor    al,al
   140014acf:	jmp    0x140014a83
   140014ad1:	lea    rdx,[rip+0x220f8]        # 0x140036bd0
   140014ad8:	mov    rcx,rsi
   140014adb:	call   0x1400157d0
   140014ae0:	xor    al,al
   140014ae2:	jmp    0x140014a83
   140014ae4:	int3   
   140014ae5:	int3   
   140014ae6:	int3   
   140014ae7:	int3   
   140014ae8:	int3   
   140014ae9:	int3   
   140014aea:	int3   
   140014aeb:	int3   
   140014aec:	int3   
   140014aed:	int3   
   140014aee:	int3   
   140014aef:	int3   
   140014af0:	mov    QWORD PTR [rsp+0x18],rsi
   140014af5:	push   rbp
   140014af6:	push   r14
   140014af8:	push   r15
   140014afa:	lea    rbp,[rsp-0x370]
   140014b02:	sub    rsp,0x470
   140014b09:	mov    r15,rdx
   140014b0c:	mov    r14,rcx
   140014b0f:	lea    rdx,[rip+0x220b6]        # 0x140036bcc
   140014b16:	add    rcx,0x8
   140014b1a:	xor    r8d,r8d
   140014b1d:	call   0x140022f20
   140014b22:	test   al,al
   140014b24:	jne    0x140014b3c
   140014b26:	lea    rdx,[rip+0x220d3]        # 0x140036c00
   140014b2d:	mov    rcx,r14
   140014b30:	call   0x1400157d0
   140014b35:	xor    al,al
   140014b37:	jmp    0x140014d20
   140014b3c:	xor    r8d,r8d
   140014b3f:	lea    rdx,[rip+0x22082]        # 0x140036bc8
   140014b46:	lea    rcx,[r14+0x8]
   140014b4a:	call   0x140022f20
   140014b4f:	test   al,al
   140014b51:	jne    0x140014b69
   140014b53:	lea    rdx,[rip+0x2205e]        # 0x140036bb8
   140014b5a:	mov    rcx,r14
   140014b5d:	call   0x1400157d0
   140014b62:	xor    al,al
   140014b64:	jmp    0x140014d20
   140014b69:	mov    QWORD PTR [rsp+0x490],rbx
   140014b71:	lea    rcx,[rsp+0x58]
   140014b76:	mov    edx,0x400
   140014b7b:	mov    QWORD PTR [rsp+0x498],rdi
   140014b83:	mov    DWORD PTR [rsp+0x50],0x0
   140014b8b:	mov    QWORD PTR [rsp+0x58],0x0
   140014b94:	mov    DWORD PTR [rsp+0x60],0x400
   140014b9c:	mov    DWORD PTR [rsp+0x64],0x80000000
   140014ba4:	call   0x14000da80
   140014ba9:	lea    rax,[rsp+0x68]
   140014bae:	xor    r8d,r8d
   140014bb1:	lea    rdx,[rip+0x21bb8]        # 0x140036770
   140014bb8:	mov    QWORD PTR [rsp+0x58],rax
   140014bbd:	lea    rcx,[r14+0x8]
   140014bc1:	call   0x140022f20
   140014bc6:	test   al,al
   140014bc8:	jne    0x140014cb4
   140014bce:	xchg   ax,ax
   140014bd0:	lea    rcx,[rsp+0x20]
   140014bd5:	call   0x140022c10
   140014bda:	lea    rdx,[rsp+0x20]
   140014bdf:	lea    rcx,[r14+0x8]
   140014be3:	call   0x140022e80
   140014be8:	test   al,al
   140014bea:	je     0x140014d3e
   140014bf0:	mov    eax,DWORD PTR [rsp+0x38]
   140014bf4:	mov    rcx,QWORD PTR [rsp+0x30]
   140014bf9:	sub    eax,ecx
   140014bfb:	cmp    eax,0x2
   140014bfe:	jne    0x140014d35
   140014c04:	movzx  ebx,BYTE PTR [rcx]
   140014c07:	lea    eax,[rbx-0x30]
   140014c0a:	cmp    al,0x9
   140014c0c:	ja     0x140014c13
   140014c0e:	sub    bl,0x30
   140014c11:	jmp    0x140014c2d
   140014c13:	lea    eax,[rbx-0x61]
   140014c16:	cmp    al,0x5
   140014c18:	ja     0x140014c1f
   140014c1a:	sub    bl,0x57
   140014c1d:	jmp    0x140014c2d
   140014c1f:	lea    eax,[rbx-0x41]
   140014c22:	cmp    al,0x5
   140014c24:	ja     0x140014d35
   140014c2a:	sub    bl,0x37
   140014c2d:	movzx  ecx,BYTE PTR [rcx+0x1]
   140014c31:	shl    bl,0x4
   140014c34:	lea    eax,[rcx-0x30]
   140014c37:	cmp    al,0x9
   140014c39:	ja     0x140014c40
   140014c3b:	sub    cl,0x30
   140014c3e:	jmp    0x140014c5a
   140014c40:	lea    eax,[rcx-0x61]
   140014c43:	cmp    al,0x5
   140014c45:	ja     0x140014c4c
   140014c47:	sub    cl,0x57
   140014c4a:	jmp    0x140014c5a
   140014c4c:	lea    eax,[rcx-0x41]
   140014c4f:	cmp    al,0x5
   140014c51:	ja     0x140014d35
   140014c57:	sub    cl,0x37
   140014c5a:	movsxd rax,DWORD PTR [rsp+0x50]
   140014c5f:	add    bl,cl
   140014c61:	mov    rdi,rax
   140014c64:	cmp    eax,DWORD PTR [rsp+0x60]
   140014c68:	jne    0x140014c7d
   140014c6a:	mov    edx,0x1
   140014c6f:	lea    rcx,[rsp+0x58]
   140014c74:	call   0x14000f0d0
   140014c79:	mov    eax,DWORD PTR [rsp+0x50]
   140014c7d:	inc    eax
   140014c7f:	mov    DWORD PTR [rsp+0x50],eax
   140014c83:	mov    rax,rdi
   140014c86:	add    rax,QWORD PTR [rsp+0x58]
   140014c8b:	je     0x140014c8f
   140014c8d:	mov    BYTE PTR [rax],bl
   140014c8f:	lea    rcx,[rsp+0x20]
   140014c94:	call   0x140022d40
   140014c99:	xor    r8d,r8d
   140014c9c:	lea    rdx,[rip+0x21acd]        # 0x140036770
   140014ca3:	lea    rcx,[r14+0x8]
   140014ca7:	call   0x140022f20
   140014cac:	test   al,al
   140014cae:	je     0x140014bd0
   140014cb4:	mov    r8d,DWORD PTR [rsp+0x50]
   140014cb9:	mov    rcx,r15
   140014cbc:	mov    rdx,QWORD PTR [rsp+0x58]
   140014cc1:	call   0x140011790
   140014cc6:	mov    bl,0x1
   140014cc8:	xor    r9d,r9d
   140014ccb:	mov    DWORD PTR [rsp+0x50],0x0
   140014cd3:	mov    r8d,0x400
   140014cd9:	lea    rdx,[rsp+0x68]
   140014cde:	lea    rcx,[rsp+0x58]
   140014ce3:	call   0x140010610
   140014ce8:	test   DWORD PTR [rsp+0x64],0xc0000000
   140014cf0:	mov    rdi,QWORD PTR [rsp+0x498]
   140014cf8:	jne    0x140014d15
   140014cfa:	mov    rdx,QWORD PTR [rsp+0x58]
   140014cff:	test   rdx,rdx
   140014d02:	je     0x140014d15
   140014d04:	mov    rcx,QWORD PTR [rip+0x1d685]        # 0x140032390
   140014d0b:	mov    rcx,QWORD PTR [rcx]
   140014d0e:	mov    r8,QWORD PTR [rcx]
   140014d11:	call   QWORD PTR [r8+0x28]
   140014d15:	movzx  eax,bl
   140014d18:	mov    rbx,QWORD PTR [rsp+0x490]
   140014d20:	mov    rsi,QWORD PTR [rsp+0x4a0]
   140014d28:	add    rsp,0x470
   140014d2f:	pop    r15
   140014d31:	pop    r14
   140014d33:	pop    rbp
   140014d34:	ret    
   140014d35:	lea    rdx,[rip+0x21ee4]        # 0x140036c20
   140014d3c:	jmp    0x140014d45
   140014d3e:	lea    rdx,[rip+0x21ecb]        # 0x140036c10
   140014d45:	mov    rcx,r14
   140014d48:	call   0x1400157d0
   140014d4d:	lea    rcx,[rsp+0x20]
   140014d52:	call   0x140022d40
   140014d57:	xor    bl,bl
   140014d59:	jmp    0x140014cc8
   140014d5e:	int3   
   140014d5f:	int3   
   140014d60:	mov    QWORD PTR [rsp+0x8],rbx
   140014d65:	push   rdi
   140014d66:	sub    rsp,0xd0
   140014d6d:	mov    rbx,rcx
   140014d70:	lea    rcx,[rsp+0xa8]
   140014d78:	call   0x140022c10
   140014d7d:	lea    rcx,[rsp+0x80]
   140014d85:	call   0x140022c10
   140014d8a:	lea    rcx,[rsp+0x58]
   140014d8f:	call   0x140022c10
   140014d94:	lea    rcx,[rsp+0x30]
   140014d99:	call   0x140022c10
   140014d9e:	xor    r8d,r8d
   140014da1:	lea    rdx,[rip+0x21b10]        # 0x1400368b8
   140014da8:	lea    rcx,[rbx+0x8]
   140014dac:	call   0x140022f20
   140014db1:	test   al,al
   140014db3:	jne    0x140014dc1
   140014db5:	lea    rdx,[rip+0x21b04]        # 0x1400368c0
   140014dbc:	jmp    0x140015086
   140014dc1:	xor    r8d,r8d
   140014dc4:	lea    rdx,[rip+0x21b19]        # 0x1400368e4
   140014dcb:	lea    rcx,[rbx+0x8]
   140014dcf:	call   0x140022f20
   140014dd4:	test   al,al
   140014dd6:	jne    0x140014de4
   140014dd8:	lea    rdx,[rip+0x21b09]        # 0x1400368e8
   140014ddf:	jmp    0x140015086
   140014de4:	xor    r8d,r8d
   140014de7:	lea    rdx,[rip+0x21b22]        # 0x140036910
   140014dee:	lea    rcx,[rbx+0x8]
   140014df2:	call   0x140022f20
   140014df7:	test   al,al
   140014df9:	jne    0x140014e07
   140014dfb:	lea    rdx,[rip+0x21b1e]        # 0x140036920
   140014e02:	jmp    0x140015086
   140014e07:	xor    r8d,r8d
   140014e0a:	lea    rdx,[rip+0x21927]        # 0x140036738
   140014e11:	lea    rcx,[rbx+0x8]
   140014e15:	call   0x140022f20
   140014e1a:	test   al,al
   140014e1c:	jne    0x140014e2a
   140014e1e:	lea    rdx,[rip+0x21b23]        # 0x140036948
   140014e25:	jmp    0x140015086
   140014e2a:	lea    rdx,[rsp+0xa8]
   140014e32:	lea    rcx,[rbx+0x8]
   140014e36:	call   0x140022fc0
   140014e3b:	test   al,al
   140014e3d:	jne    0x140014e4b
   140014e3f:	lea    rdx,[rip+0x21b22]        # 0x140036968
   140014e46:	jmp    0x140015086
   140014e4b:	xor    r8d,r8d
   140014e4e:	lea    rdx,[rip+0x218e3]        # 0x140036738
   140014e55:	lea    rcx,[rbx+0x8]
   140014e59:	call   0x140022f20
   140014e5e:	test   al,al
   140014e60:	je     0x140014e1e
   140014e62:	xor    r8d,r8d
   140014e65:	lea    rdx,[rip+0x21b2c]        # 0x140036998
   140014e6c:	lea    rcx,[rbx+0x8]
   140014e70:	call   0x140022f20
   140014e75:	test   al,al
   140014e77:	jne    0x140014e85
   140014e79:	lea    rdx,[rip+0x21b20]        # 0x1400369a0
   140014e80:	jmp    0x140015086
   140014e85:	xor    r8d,r8d
   140014e88:	lea    rdx,[rip+0x21b39]        # 0x1400369c8
   140014e8f:	lea    rcx,[rbx+0x8]
   140014e93:	call   0x140022f20
   140014e98:	test   al,al
   140014e9a:	je     0x140014ec8
   140014e9c:	lea    rdx,[rsp+0x80]
   140014ea4:	lea    rcx,[rbx+0x8]
   140014ea8:	call   0x140022e80
   140014ead:	test   al,al
   140014eaf:	je     0x140014ec8
   140014eb1:	xor    r8d,r8d
   140014eb4:	lea    rdx,[rip+0x218cd]        # 0x140036788
   140014ebb:	lea    rcx,[rbx+0x8]
   140014ebf:	call   0x140022f20
   140014ec4:	test   al,al
   140014ec6:	jne    0x140014ed7
   140014ec8:	lea    rdx,[rip+0x21b01]        # 0x1400369d0
   140014ecf:	mov    rcx,rbx
   140014ed2:	call   0x1400157d0
   140014ed7:	xor    r8d,r8d
   140014eda:	lea    rdx,[rip+0x21b1b]        # 0x1400369fc
   140014ee1:	lea    rcx,[rbx+0x8]
   140014ee5:	call   0x140022f20
   140014eea:	test   al,al
   140014eec:	jne    0x140014efa
   140014eee:	lea    rdx,[rip+0x21b13]        # 0x140036a08
   140014ef5:	jmp    0x140015086
   140014efa:	xor    r8d,r8d
   140014efd:	lea    rdx,[rip+0x21834]        # 0x140036738
   140014f04:	lea    rcx,[rbx+0x8]
   140014f08:	call   0x140022f20
   140014f0d:	test   al,al
   140014f0f:	je     0x140014e1e
   140014f15:	lea    rdx,[rsp+0x58]
   140014f1a:	lea    rcx,[rbx+0x8]
   140014f1e:	call   0x140022fc0
   140014f23:	test   al,al
   140014f25:	jne    0x140014f33
   140014f27:	lea    rdx,[rip+0x21b02]        # 0x140036a30
   140014f2e:	jmp    0x140015086
   140014f33:	xor    r8d,r8d
   140014f36:	lea    rdx,[rip+0x217fb]        # 0x140036738
   140014f3d:	lea    rcx,[rbx+0x8]
   140014f41:	call   0x140022f20
   140014f46:	test   al,al
   140014f48:	je     0x140014e1e
   140014f4e:	xor    r8d,r8d
   140014f51:	lea    rdx,[rip+0x21a40]        # 0x140036998
   140014f58:	lea    rcx,[rbx+0x8]
   140014f5c:	call   0x140022f20
   140014f61:	test   al,al
   140014f63:	je     0x140014e79
   140014f69:	xor    r8d,r8d
   140014f6c:	lea    rdx,[rip+0x21a55]        # 0x1400369c8
   140014f73:	lea    rcx,[rbx+0x8]
   140014f77:	call   0x140022f20
   140014f7c:	test   al,al
   140014f7e:	je     0x140014fa9
   140014f80:	lea    rdx,[rsp+0x30]
   140014f85:	lea    rcx,[rbx+0x8]
   140014f89:	call   0x140022e80
   140014f8e:	test   al,al
   140014f90:	je     0x140014fa9
   140014f92:	xor    r8d,r8d
   140014f95:	lea    rdx,[rip+0x217ec]        # 0x140036788
   140014f9c:	lea    rcx,[rbx+0x8]
   140014fa0:	call   0x140022f20
   140014fa5:	test   al,al
   140014fa7:	jne    0x140014fb8
   140014fa9:	lea    rdx,[rip+0x21ab0]        # 0x140036a60
   140014fb0:	mov    rcx,rbx
   140014fb3:	call   0x1400157d0
   140014fb8:	xor    r8d,r8d
   140014fbb:	lea    rdx,[rip+0x21aca]        # 0x140036a8c
   140014fc2:	lea    rcx,[rbx+0x8]
   140014fc6:	call   0x140022f20
   140014fcb:	test   al,al
   140014fcd:	jne    0x140014fdb
   140014fcf:	lea    rdx,[rip+0x21aba]        # 0x140036a90
   140014fd6:	jmp    0x140015086
   140014fdb:	lea    rcx,[rsp+0x80]
   140014fe3:	call   0x140022dc0
   140014fe8:	mov    rdx,rax
   140014feb:	lea    rcx,[rsp+0x20]
   140014ff0:	call   QWORD PTR [rip+0x1d272]        # 0x140032268
   140014ff6:	test   al,al
   140014ff8:	je     0x14001507f
   140014ffe:	lea    rcx,[rsp+0x30]
   140015003:	call   0x140022dc0
   140015008:	mov    rdx,rax
   14001500b:	lea    rcx,[rbx+0x2d8]
   140015012:	call   QWORD PTR [rip+0x1d250]        # 0x140032268
   140015018:	test   al,al
   14001501a:	je     0x14001507f
   14001501c:	lea    rcx,[rsp+0x58]
   140015021:	call   0x140022dc0
   140015026:	mov    rdx,rax
   140015029:	lea    rcx,[rbx+0x2e8]
   140015030:	call   0x14001aae0
   140015035:	lea    rcx,[rsp+0xa8]
   14001503d:	call   0x140022dc0
   140015042:	mov    rdx,QWORD PTR [rip+0x30fbf]        # 0x140046008
   140015049:	mov    rcx,rax
   14001504c:	call   QWORD PTR [rip+0x1d50e]        # 0x140032560
   140015052:	test   eax,eax
   140015054:	jne    0x140015076
   140015056:	mov    rcx,QWORD PTR [rip+0x30fb3]        # 0x140046010
   14001505d:	mov    rax,QWORD PTR [rsp+0x20]
   140015062:	cmp    rax,QWORD PTR [rcx]
   140015065:	jne    0x140015076
   140015067:	mov    rax,QWORD PTR [rsp+0x28]
   14001506c:	cmp    rax,QWORD PTR [rcx+0x8]
   140015070:	jne    0x140015076
   140015072:	mov    bl,0x1
   140015074:	jmp    0x140015090
   140015076:	lea    rdx,[rip+0x21a53]        # 0x140036ad0
   14001507d:	jmp    0x140015086
   14001507f:	lea    rdx,[rip+0x21a22]        # 0x140036aa8
   140015086:	mov    rcx,rbx
   140015089:	call   0x1400157d0
   14001508e:	xor    bl,bl
   140015090:	lea    rcx,[rsp+0x30]
   140015095:	call   0x140022d40
   14001509a:	lea    rcx,[rsp+0x58]
   14001509f:	call   0x140022d40
   1400150a4:	lea    rcx,[rsp+0x80]
   1400150ac:	call   0x140022d40
   1400150b1:	lea    rcx,[rsp+0xa8]
   1400150b9:	call   0x140022d40
   1400150be:	movzx  eax,bl
   1400150c1:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400150c9:	add    rsp,0xd0
   1400150d0:	pop    rdi
   1400150d1:	ret    
   1400150d2:	int3   
   1400150d3:	int3   
   1400150d4:	int3   
   1400150d5:	int3   
   1400150d6:	int3   
   1400150d7:	int3   
   1400150d8:	int3   
   1400150d9:	int3   
   1400150da:	int3   
   1400150db:	int3   
   1400150dc:	int3   
   1400150dd:	int3   
   1400150de:	int3   
   1400150df:	int3   
   1400150e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400150e5:	push   rdi
   1400150e6:	sub    rsp,0x160
   1400150ed:	mov    rdi,rcx
   1400150f0:	mov    rbx,rdx
   1400150f3:	lea    rcx,[rsp+0x20]
   1400150f8:	call   0x140022c10
   1400150fd:	lea    rcx,[rdi+0x8]
   140015101:	lea    rdx,[rsp+0x20]
   140015106:	call   0x140022e80
   14001510b:	test   al,al
   14001510d:	jne    0x140015123
   14001510f:	lea    rdx,[rip+0x21afa]        # 0x140036c10
   140015116:	mov    rcx,rdi
   140015119:	call   0x1400157d0
   14001511e:	jmp    0x1400152c7
   140015123:	test   rbx,rbx
   140015126:	je     0x140015289
   14001512c:	lea    rcx,[rsp+0x20]
   140015131:	call   0x140023360
   140015136:	lea    rcx,[rsp+0x20]
   14001513b:	test   al,al
   14001513d:	je     0x1400151a2
   14001513f:	xor    r8d,r8d
   140015142:	lea    rdx,[rip+0x212c3]        # 0x14003640c
   140015149:	call   0x140023450
   14001514e:	test   al,al
   140015150:	je     0x140015163
   140015152:	mov    dl,0x1
   140015154:	mov    rcx,rbx
   140015157:	call   0x140011470
   14001515c:	mov    bl,0x1
   14001515e:	jmp    0x1400152c9
   140015163:	xor    r8d,r8d
   140015166:	lea    rdx,[rip+0x212a7]        # 0x140036414
   14001516d:	lea    rcx,[rsp+0x20]
   140015172:	call   0x140023450
   140015177:	test   al,al
   140015179:	je     0x14001518c
   14001517b:	xor    edx,edx
   14001517d:	mov    rcx,rbx
   140015180:	call   0x140011470
   140015185:	mov    bl,0x1
   140015187:	jmp    0x1400152c9
   14001518c:	lea    rdx,[rip+0x21aad]        # 0x140036c40
   140015193:	mov    rcx,rdi
   140015196:	call   0x1400157d0
   14001519b:	mov    bl,0x1
   14001519d:	jmp    0x1400152c9
   1400151a2:	call   0x1400235a0
   1400151a7:	lea    rcx,[rsp+0x20]
   1400151ac:	test   al,al
   1400151ae:	je     0x1400151c7
   1400151b0:	call   0x140022dc0
   1400151b5:	mov    rdx,rax
   1400151b8:	mov    rcx,rbx
   1400151bb:	call   0x140011590
   1400151c0:	mov    bl,0x1
   1400151c2:	jmp    0x1400152c9
   1400151c7:	call   0x1400234c0
   1400151cc:	lea    rcx,[rsp+0x20]
   1400151d1:	test   al,al
   1400151d3:	je     0x1400151f5
   1400151d5:	call   0x140022dc0
   1400151da:	mov    rcx,rax
   1400151dd:	call   QWORD PTR [rip+0x1d09d]        # 0x140032280
   1400151e3:	movaps xmm1,xmm0
   1400151e6:	mov    rcx,rbx
   1400151e9:	call   0x1400114a0
   1400151ee:	mov    bl,0x1
   1400151f0:	jmp    0x1400152c9
   1400151f5:	call   0x140023620
   1400151fa:	lea    rcx,[rsp+0x20]
   1400151ff:	test   al,al
   140015201:	je     0x14001526e
   140015203:	lea    rdx,[rsp+0x170]
   14001520b:	mov    QWORD PTR [rsp+0x170],0x0
   140015217:	call   0x140022e50
   14001521c:	lea    rcx,[rsp+0x170]
   140015224:	call   0x14001b050
   140015229:	mov    rdx,rax
   14001522c:	mov    rcx,rbx
   14001522f:	call   0x1400116c0
   140015234:	lea    rcx,[rsp+0x20]
   140015239:	call   0x1400235f0
   14001523e:	test   al,al
   140015240:	je     0x140015252
   140015242:	mov    edx,0x4
   140015247:	mov    r8b,0x1
   14001524a:	mov    rcx,rbx
   14001524d:	call   0x1400114d0
   140015252:	cmp    QWORD PTR [rsp+0x170],0x0
   14001525b:	je     0x140015289
   14001525d:	lea    rcx,[rsp+0x170]
   140015265:	call   0x14001b030
   14001526a:	mov    bl,0x1
   14001526c:	jmp    0x1400152c9
   14001526e:	xor    r8d,r8d
   140015271:	lea    rdx,[rip+0x214c4]        # 0x14003673c
   140015278:	call   0x140023450
   14001527d:	test   al,al
   14001527f:	je     0x14001528d
   140015281:	mov    rcx,rbx
   140015284:	call   0x1400117f0
   140015289:	mov    bl,0x1
   14001528b:	jmp    0x1400152c9
   14001528d:	lea    rcx,[rsp+0x20]
   140015292:	call   0x140022dc0
   140015297:	lea    rcx,[rsp+0x20]
   14001529c:	mov    rbx,rax
   14001529f:	call   0x140023250
   1400152a4:	mov    r8d,eax
   1400152a7:	lea    rdx,[rip+0x219ba]        # 0x140036c68
   1400152ae:	mov    r9,rbx
   1400152b1:	lea    rcx,[rsp+0x48]
   1400152b6:	call   0x140001600
   1400152bb:	mov    rcx,rdi
   1400152be:	lea    rdx,[rax+0x9]
   1400152c2:	call   0x1400158c0
   1400152c7:	xor    bl,bl
   1400152c9:	lea    rcx,[rsp+0x20]
   1400152ce:	call   0x140022d40
   1400152d3:	movzx  eax,bl
   1400152d6:	mov    rbx,QWORD PTR [rsp+0x178]
   1400152de:	add    rsp,0x160
   1400152e5:	pop    rdi
   1400152e6:	ret    
   1400152e7:	int3   
   1400152e8:	int3   
   1400152e9:	int3   
   1400152ea:	int3   
   1400152eb:	int3   
   1400152ec:	int3   
   1400152ed:	int3   
   1400152ee:	int3   
   1400152ef:	int3   
   1400152f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400152f5:	push   rbp
   1400152f6:	push   rsi
   1400152f7:	push   rdi
   1400152f8:	lea    rbp,[rsp-0x60]
   1400152fd:	sub    rsp,0x160
   140015304:	mov    rsi,rdx
   140015307:	mov    rdi,rcx
   14001530a:	lea    rdx,[rip+0x216b7]        # 0x1400369c8
   140015311:	add    rcx,0x8
   140015315:	xor    r8d,r8d
   140015318:	call   0x140022f20
   14001531d:	test   al,al
   14001531f:	jne    0x140015337
   140015321:	lea    rdx,[rip+0x217d8]        # 0x140036b00
   140015328:	mov    rcx,rdi
   14001532b:	call   0x1400157d0
   140015330:	xor    al,al
   140015332:	jmp    0x14001546b
   140015337:	mov    rcx,rsi
   14001533a:	mov    QWORD PTR [rsp+0x188],r14
   140015342:	call   0x1400117e0
   140015347:	xor    r9d,r9d
   14001534a:	lea    r8,[rip+0x21437]        # 0x140036788
   140015351:	xor    edx,edx
   140015353:	lea    rcx,[rdi+0x8]
   140015357:	call   0x140023680
   14001535c:	test   al,al
   14001535e:	jne    0x14001544e
   140015364:	xor    r14d,r14d
   140015367:	nop    WORD PTR [rax+rax*1+0x0]
   140015370:	lea    rcx,[rsp+0x20]
   140015375:	call   0x140022c10
   14001537a:	lea    rdx,[rsp+0x20]
   14001537f:	lea    rcx,[rdi+0x8]
   140015383:	call   0x140022e80
   140015388:	test   al,al
   14001538a:	je     0x140015509
   140015390:	mov    dl,0x1
   140015392:	lea    rcx,[rsp+0x20]
   140015397:	call   0x140023510
   14001539c:	test   al,al
   14001539e:	jne    0x1400153b2
   1400153a0:	lea    rcx,[rsp+0x20]
   1400153a5:	call   0x140023620
   1400153aa:	test   al,al
   1400153ac:	je     0x14001547e
   1400153b2:	xor    r8d,r8d
   1400153b5:	lea    rdx,[rip+0x21790]        # 0x140036b4c
   1400153bc:	lea    rcx,[rdi+0x8]
   1400153c0:	call   0x140022f20
   1400153c5:	lea    rcx,[rsp+0x20]
   1400153ca:	test   al,al
   1400153cc:	je     0x1400154ee
   1400153d2:	lea    rdx,[rbp+0x80]
   1400153d9:	mov    QWORD PTR [rbp+0x80],r14
   1400153e0:	call   0x140022e50
   1400153e5:	lea    rcx,[rbp+0x80]
   1400153ec:	call   0x14001b050
   1400153f1:	mov    rdx,rax
   1400153f4:	mov    r8d,r14d
   1400153f7:	mov    rcx,rsi
   1400153fa:	call   0x140011690
   1400153ff:	mov    rdx,rax
   140015402:	mov    rcx,rdi
   140015405:	call   0x140015540
   14001540a:	test   al,al
   14001540c:	je     0x14001549e
   140015412:	cmp    QWORD PTR [rbp+0x80],r14
   140015419:	je     0x140015427
   14001541b:	lea    rcx,[rbp+0x80]
   140015422:	call   0x14001b030
   140015427:	lea    rcx,[rsp+0x20]
   14001542c:	call   0x140022d40
   140015431:	xor    r9d,r9d
   140015434:	lea    r8,[rip+0x2134d]        # 0x140036788
   14001543b:	xor    edx,edx
   14001543d:	lea    rcx,[rdi+0x8]
   140015441:	call   0x140023680
   140015446:	test   al,al
   140015448:	je     0x140015370
   14001544e:	xor    r8d,r8d
   140015451:	lea    rdx,[rip+0x21330]        # 0x140036788
   140015458:	lea    rcx,[rdi+0x8]
   14001545c:	call   0x140022f20
   140015461:	mov    al,0x1
   140015463:	mov    r14,QWORD PTR [rsp+0x188]
   14001546b:	mov    rbx,QWORD PTR [rsp+0x190]
   140015473:	add    rsp,0x160
   14001547a:	pop    rdi
   14001547b:	pop    rsi
   14001547c:	pop    rbp
   14001547d:	ret    
   14001547e:	lea    rcx,[rsp+0x20]
   140015483:	call   0x140022dc0
   140015488:	mov    r8,rax
   14001548b:	lea    rdx,[rip+0x2169e]        # 0x140036b30
   140015492:	lea    rcx,[rsp+0x48]
   140015497:	call   0x140001600
   14001549c:	jmp    0x14001551a
   14001549e:	lea    rcx,[rsp+0x20]
   1400154a3:	call   0x140022dc0
   1400154a8:	mov    r8,rax
   1400154ab:	lea    rdx,[rip+0x216c6]        # 0x140036b78
   1400154b2:	lea    rcx,[rsp+0x48]
   1400154b7:	call   0x140001600
   1400154bc:	mov    rcx,rdi
   1400154bf:	lea    rdx,[rax+0x9]
   1400154c3:	call   0x1400157d0
   1400154c8:	cmp    QWORD PTR [rbp+0x80],r14
   1400154cf:	je     0x140015526
   1400154d1:	lea    rcx,[rbp+0x80]
   1400154d8:	call   0x14001b030
   1400154dd:	lea    rcx,[rsp+0x20]
   1400154e2:	call   0x140022d40
   1400154e7:	xor    al,al
   1400154e9:	jmp    0x140015463
   1400154ee:	call   0x140022dc0
   1400154f3:	mov    r8,rax
   1400154f6:	lea    rdx,[rip+0x21653]        # 0x140036b50
   1400154fd:	lea    rcx,[rsp+0x48]
   140015502:	call   0x140001600
   140015507:	jmp    0x14001551a
   140015509:	lea    rdx,[rip+0x21600]        # 0x140036b10
   140015510:	lea    rcx,[rsp+0x48]
   140015515:	call   0x140001600
   14001551a:	lea    rdx,[rax+0x9]
   14001551e:	mov    rcx,rdi
   140015521:	call   0x1400157d0
   140015526:	lea    rcx,[rsp+0x20]
   14001552b:	call   0x140022d40
   140015530:	xor    al,al
   140015532:	jmp    0x140015463
   140015537:	int3   
   140015538:	int3   
   140015539:	int3   
   14001553a:	int3   
   14001553b:	int3   
   14001553c:	int3   
   14001553d:	int3   
   14001553e:	int3   
   14001553f:	int3   
   140015540:	mov    QWORD PTR [rsp+0x8],rbx
   140015545:	mov    QWORD PTR [rsp+0x10],rsi
   14001554a:	push   rdi
   14001554b:	sub    rsp,0x160
   140015552:	mov    rdi,rdx
   140015555:	mov    rsi,rcx
   140015558:	xor    edx,edx
   14001555a:	add    rcx,0x8
   14001555e:	call   0x1400236e0
   140015563:	test   al,al
   140015565:	je     0x14001560b
   14001556b:	nop    DWORD PTR [rax+rax*1+0x0]
   140015570:	xor    r9d,r9d
   140015573:	lea    r8,[rip+0x211ba]        # 0x140036734
   14001557a:	lea    rcx,[rsi+0x8]
   14001557e:	lea    edx,[r9+0x1]
   140015582:	call   0x140023680
   140015587:	test   al,al
   140015589:	jne    0x1400155a6
   14001558b:	xor    r9d,r9d
   14001558e:	lea    r8,[rip+0x211a3]        # 0x140036738
   140015595:	lea    rcx,[rsi+0x8]
   140015599:	lea    edx,[r9+0x1]
   14001559d:	call   0x140023680
   1400155a2:	test   al,al
   1400155a4:	je     0x14001560b
   1400155a6:	lea    rcx,[rsp+0x20]
   1400155ab:	call   0x140022c10
   1400155b0:	lea    rdx,[rsp+0x20]
   1400155b5:	lea    rcx,[rsi+0x8]
   1400155b9:	call   0x140022fc0
   1400155be:	xor    edx,edx
   1400155c0:	lea    rcx,[rsi+0x8]
   1400155c4:	call   0x140022e80
   1400155c9:	lea    rcx,[rsp+0x20]
   1400155ce:	call   0x140022dc0
   1400155d3:	mov    rcx,rax
   1400155d6:	call   0x140011830
   1400155db:	test   ax,ax
   1400155de:	je     0x140015634
   1400155e0:	mov    r8b,0x1
   1400155e3:	movzx  edx,ax
   1400155e6:	mov    rcx,rdi
   1400155e9:	call   0x1400114d0
   1400155ee:	lea    rcx,[rsp+0x20]
   1400155f3:	call   0x140022d40
   1400155f8:	xor    edx,edx
   1400155fa:	lea    rcx,[rsi+0x8]
   1400155fe:	call   0x1400236e0
   140015603:	test   al,al
   140015605:	jne    0x140015570
   14001560b:	xor    r9d,r9d
   14001560e:	lea    r8,[rip+0x215b3]        # 0x140036bc8
   140015615:	xor    edx,edx
   140015617:	lea    rcx,[rsi+0x8]
   14001561b:	call   0x140023680
   140015620:	test   al,al
   140015622:	je     0x14001567b
   140015624:	mov    rdx,rdi
   140015627:	mov    rcx,rsi
   14001562a:	call   0x140014990
   14001562f:	jmp    0x1400156e7
   140015634:	lea    rcx,[rsp+0x20]
   140015639:	call   0x140022dc0
   14001563e:	mov    r8,rax
   140015641:	lea    rdx,[rip+0x21550]        # 0x140036b98
   140015648:	lea    rcx,[rsp+0x48]
   14001564d:	call   0x140001600
   140015652:	mov    rcx,rsi
   140015655:	lea    rdx,[rax+0x9]
   140015659:	call   0x1400157d0
   14001565e:	lea    rdx,[rip+0x21553]        # 0x140036bb8
   140015665:	mov    rcx,rsi
   140015668:	call   0x1400157d0
   14001566d:	lea    rcx,[rsp+0x20]
   140015672:	call   0x140022d40
   140015677:	xor    al,al
   140015679:	jmp    0x1400156e7
   14001567b:	xor    r9d,r9d
   14001567e:	lea    r8,[rip+0x21547]        # 0x140036bcc
   140015685:	xor    edx,edx
   140015687:	lea    rcx,[rsi+0x8]
   14001568b:	call   0x140023680
   140015690:	test   al,al
   140015692:	je     0x1400156bc
   140015694:	xor    r9d,r9d
   140015697:	lea    r8,[rip+0x2152a]        # 0x140036bc8
   14001569e:	lea    rcx,[rsi+0x8]
   1400156a2:	lea    edx,[r9+0x1]
   1400156a6:	call   0x140023680
   1400156ab:	test   al,al
   1400156ad:	je     0x1400156bc
   1400156af:	mov    rdx,rdi
   1400156b2:	mov    rcx,rsi
   1400156b5:	call   0x140014af0
   1400156ba:	jmp    0x1400156e7
   1400156bc:	xor    r9d,r9d
   1400156bf:	lea    r8,[rip+0x21302]        # 0x1400369c8
   1400156c6:	xor    edx,edx
   1400156c8:	lea    rcx,[rsi+0x8]
   1400156cc:	call   0x140023680
   1400156d1:	mov    rdx,rdi
   1400156d4:	mov    rcx,rsi
   1400156d7:	test   al,al
   1400156d9:	je     0x1400156e2
   1400156db:	call   0x1400152f0
   1400156e0:	jmp    0x1400156e7
   1400156e2:	call   0x1400150e0
   1400156e7:	lea    r11,[rsp+0x160]
   1400156ef:	mov    rbx,QWORD PTR [r11+0x10]
   1400156f3:	mov    rsi,QWORD PTR [r11+0x18]
   1400156f7:	mov    rsp,r11
   1400156fa:	pop    rdi
   1400156fb:	ret    
   1400156fc:	int3   
   1400156fd:	int3   
   1400156fe:	int3   
   1400156ff:	int3   
   140015700:	mov    QWORD PTR [rsp+0x10],rbx
   140015705:	push   rsi
   140015706:	sub    rsp,0x20
   14001570a:	mov    eax,DWORD PTR [rcx]
   14001570c:	mov    rsi,rcx
   14001570f:	sub    eax,0x1
   140015712:	movsxd rbx,eax
   140015715:	js     0x140015755
   140015717:	mov    QWORD PTR [rsp+0x30],rdi
   14001571c:	mov    rdi,rbx
   14001571f:	shl    rdi,0x4
   140015723:	mov    rcx,QWORD PTR [rsi+0x8]
   140015727:	add    rcx,rdi
   14001572a:	cmp    QWORD PTR [rcx],0x0
   14001572e:	je     0x140015735
   140015730:	call   0x14001b030
   140015735:	sub    rdi,0x10
   140015739:	sub    rbx,0x1
   14001573d:	jns    0x140015723
   14001573f:	mov    DWORD PTR [rsi],0x0
   140015745:	mov    rdi,QWORD PTR [rsp+0x30]
   14001574a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001574f:	add    rsp,0x20
   140015753:	pop    rsi
   140015754:	ret    
   140015755:	mov    DWORD PTR [rcx],0x0
   14001575b:	mov    rbx,QWORD PTR [rsp+0x38]
   140015760:	add    rsp,0x20
   140015764:	pop    rsi
   140015765:	ret    
   140015766:	int3   
   140015767:	int3   
   140015768:	int3   
   140015769:	int3   
   14001576a:	int3   
   14001576b:	int3   
   14001576c:	int3   
   14001576d:	int3   
   14001576e:	int3   
   14001576f:	int3   
   140015770:	mov    QWORD PTR [rsp+0x10],rbx
   140015775:	push   rsi
   140015776:	sub    rsp,0x20
   14001577a:	mov    ebx,DWORD PTR [rcx]
   14001577c:	mov    rsi,rcx
   14001577f:	sub    ebx,0x1
   140015782:	js     0x1400157bf
   140015784:	mov    QWORD PTR [rsp+0x30],rdi
   140015789:	movsxd rax,ebx
   14001578c:	lea    rdi,[rax+rax*4]
   140015790:	shl    rdi,0x3
   140015794:	mov    rcx,QWORD PTR [rsi+0x8]
   140015798:	add    rcx,rdi
   14001579b:	call   0x140022d40
   1400157a0:	add    rdi,0xffffffffffffffd8
   1400157a4:	sub    ebx,0x1
   1400157a7:	jns    0x140015794
   1400157a9:	mov    DWORD PTR [rsi],0x0
   1400157af:	mov    rdi,QWORD PTR [rsp+0x30]
   1400157b4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400157b9:	add    rsp,0x20
   1400157bd:	pop    rsi
   1400157be:	ret    
   1400157bf:	mov    DWORD PTR [rcx],0x0
   1400157c5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400157ca:	add    rsp,0x20
   1400157ce:	pop    rsi
   1400157cf:	ret    
   1400157d0:	mov    QWORD PTR [rsp+0x10],rbp
   1400157d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400157da:	push   rdi
   1400157db:	sub    rsp,0x170
   1400157e2:	mov    rdi,rcx
   1400157e5:	mov    rbp,rdx
   1400157e8:	lea    rcx,[rsp+0x30]
   1400157ed:	call   0x140022c10
   1400157f2:	lea    r8,[rsp+0x30]
   1400157f7:	xor    edx,edx
   1400157f9:	lea    rcx,[rdi+0x8]
   1400157fd:	call   0x140023780
   140015802:	test   al,al
   140015804:	je     0x14001584a
   140015806:	lea    rcx,[rsp+0x30]
   14001580b:	mov    QWORD PTR [rsp+0x180],rbx
   140015813:	call   0x140022dc0
   140015818:	lea    rcx,[rdi+0x8]
   14001581c:	mov    rbx,rax
   14001581f:	call   0x140023230
   140015824:	mov    r8d,eax
   140015827:	mov    QWORD PTR [rsp+0x20],rbp
   14001582c:	mov    r9,rbx
   14001582f:	lea    rdx,[rip+0x2104a]        # 0x140036880
   140015836:	lea    rcx,[rsp+0x58]
   14001583b:	call   0x140001600
   140015840:	mov    rbx,QWORD PTR [rsp+0x180]
   140015848:	jmp    0x14001586a
   14001584a:	lea    rcx,[rdi+0x8]
   14001584e:	call   0x140023230
   140015853:	mov    r8d,eax
   140015856:	lea    rdx,[rip+0x2103b]        # 0x140036898
   14001585d:	mov    r9,rbp
   140015860:	lea    rcx,[rsp+0x58]
   140015865:	call   0x140001600
   14001586a:	mov    rcx,QWORD PTR [rdi+0x2c8]
   140015871:	mov    BYTE PTR [rdi],0x0
   140015874:	test   rcx,rcx
   140015877:	je     0x140015895
   140015879:	lea    rdx,[rax+0x9]
   14001587d:	call   0x14001ac10
   140015882:	mov    rcx,QWORD PTR [rdi+0x2c8]
   140015889:	lea    rdx,[rip+0x1eaa8]        # 0x140034338
   140015890:	call   0x14001ac10
   140015895:	lea    rcx,[rsp+0x30]
   14001589a:	call   0x140022d40
   14001589f:	lea    r11,[rsp+0x170]
   1400158a7:	mov    rbp,QWORD PTR [r11+0x18]
   1400158ab:	mov    rsi,QWORD PTR [r11+0x20]
   1400158af:	mov    rsp,r11
   1400158b2:	pop    rdi
   1400158b3:	ret    
   1400158b4:	int3   
   1400158b5:	int3   
   1400158b6:	int3   
   1400158b7:	int3   
   1400158b8:	int3   
   1400158b9:	int3   
   1400158ba:	int3   
   1400158bb:	int3   
   1400158bc:	int3   
   1400158bd:	int3   
   1400158be:	int3   
   1400158bf:	int3   
   1400158c0:	rex push rbx
   1400158c2:	sub    rsp,0x20
   1400158c6:	mov    rbx,rcx
   1400158c9:	mov    BYTE PTR [rcx],0x0
   1400158cc:	mov    rcx,QWORD PTR [rcx+0x2c8]
   1400158d3:	test   rcx,rcx
   1400158d6:	je     0x1400158f5
   1400158d8:	call   0x14001ac10
   1400158dd:	mov    rcx,QWORD PTR [rbx+0x2c8]
   1400158e4:	lea    rdx,[rip+0x1ea4d]        # 0x140034338
   1400158eb:	add    rsp,0x20
   1400158ef:	pop    rbx
   1400158f0:	jmp    0x14001ac10
   1400158f5:	add    rsp,0x20
   1400158f9:	pop    rbx
   1400158fa:	ret    
   1400158fb:	int3   
   1400158fc:	int3   
   1400158fd:	int3   
   1400158fe:	int3   
   1400158ff:	int3   
   140015900:	sub    rsp,0x38
   140015904:	mov    r10,rdx
   140015907:	test   r9d,r9d
   14001590a:	jle    0x1400159b0
   140015910:	test   rdx,rdx
   140015913:	je     0x1400159b0
   140015919:	test   r8,r8
   14001591c:	cmovne rdx,r8
   140015920:	test   BYTE PTR [rcx],0x1
   140015923:	je     0x14001598f
   140015925:	movsxd r9,r9d
   140015928:	test   r9,r9
   14001592b:	jle    0x1400159b0
   140015931:	sub    rdx,r10
   140015934:	lea    r11,[rdx+0x7]
   140015938:	nop    DWORD PTR [rax+rax*1+0x0]
   140015940:	mov    rax,QWORD PTR [r10]
   140015943:	lea    r8,[rsp+0x20]
   140015948:	mov    QWORD PTR [rsp+0x20],rax
   14001594d:	xor    edx,edx
   14001594f:	lea    rax,[r11+r10*1]
   140015953:	nop    DWORD PTR [rax+0x0]
   140015957:	nop    WORD PTR [rax+rax*1+0x0]
   140015960:	movzx  ecx,BYTE PTR [rax]
   140015963:	inc    edx
   140015965:	mov    BYTE PTR [r8],cl
   140015968:	lea    r8,[r8+0x1]
   14001596c:	lea    rax,[rax-0x1]
   140015970:	cmp    edx,0x8
   140015973:	jb     0x140015960
   140015975:	movsd  xmm0,QWORD PTR [rsp+0x20]
   14001597b:	movsd  QWORD PTR [r10],xmm0
   140015980:	add    r10,0x8
   140015984:	sub    r9,0x1
   140015988:	jne    0x140015940
   14001598a:	add    rsp,0x38
   14001598e:	ret    
   14001598f:	test   rdx,rdx
   140015992:	je     0x1400159b0
   140015994:	cmp    r10,rdx
   140015997:	je     0x1400159b0
   140015999:	movsxd r8,r9d
   14001599c:	mov    rcx,r10
   14001599f:	lea    r8,[r8*8+0x0]
   1400159a7:	add    rsp,0x38
   1400159ab:	jmp    0x140026f70
   1400159b0:	add    rsp,0x38
   1400159b4:	ret    
   1400159b5:	int3   
   1400159b6:	int3   
   1400159b7:	int3   
   1400159b8:	int3   
   1400159b9:	int3   
   1400159ba:	int3   
   1400159bb:	int3   
   1400159bc:	int3   
   1400159bd:	int3   
   1400159be:	int3   
   1400159bf:	int3   
   1400159c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400159c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400159ca:	push   rdi
   1400159cb:	sub    rsp,0x20
   1400159cf:	mov    edi,DWORD PTR [rdx+0x14]
   1400159d2:	xor    eax,eax
   1400159d4:	mov    rsi,QWORD PTR [rdx]
   1400159d7:	mov    rbx,rcx
   1400159da:	mov    QWORD PTR [rcx+0x10],rax
   1400159de:	mov    BYTE PTR [rcx+0x18],al
   1400159e1:	mov    DWORD PTR [rcx+0x24],eax
   1400159e4:	mov    DWORD PTR [rcx+0x20],0xffffffff
   1400159eb:	call   0x1400209e0
   1400159f0:	test   edi,edi
   1400159f2:	je     0x140015a02
   1400159f4:	mov    r8d,edi
   1400159f7:	mov    rdx,rsi
   1400159fa:	mov    rcx,rbx
   1400159fd:	call   0x140021a40
   140015a02:	mov    rbx,QWORD PTR [rsp+0x30]
   140015a07:	mov    rsi,QWORD PTR [rsp+0x38]
   140015a0c:	add    rsp,0x20
   140015a10:	pop    rdi
   140015a11:	ret    
   140015a12:	int3   
   140015a13:	int3   
   140015a14:	int3   
   140015a15:	int3   
   140015a16:	int3   
   140015a17:	int3   
   140015a18:	int3   
   140015a19:	int3   
   140015a1a:	int3   
   140015a1b:	int3   
   140015a1c:	int3   
   140015a1d:	int3   
   140015a1e:	int3   
   140015a1f:	int3   
   140015a20:	mov    r8,rcx
   140015a23:	cmp    edx,0x4
   140015a26:	jae    0x140015a2b
   140015a28:	xor    eax,eax
   140015a2a:	ret    
   140015a2b:	movzx  eax,BYTE PTR [rcx+0x3]
   140015a2f:	movzx  ecx,BYTE PTR [rcx+0x2]
   140015a33:	and    eax,0x7f
   140015a36:	shl    eax,0x8
   140015a39:	or     eax,ecx
   140015a3b:	movzx  ecx,BYTE PTR [r8+0x1]
   140015a40:	shl    eax,0x8
   140015a43:	or     eax,ecx
   140015a45:	movzx  ecx,BYTE PTR [r8]
   140015a49:	shl    eax,0x8
   140015a4c:	or     eax,ecx
   140015a4e:	ret    
   140015a4f:	int3   
   140015a50:	rex push rdi
   140015a52:	sub    rsp,0x20
   140015a56:	test   BYTE PTR [rcx+0x19],0x1
   140015a5a:	mov    rdi,rcx
   140015a5d:	jne    0x140015ad4
   140015a5f:	mov    edx,0x8
   140015a64:	call   0x140020b70
   140015a69:	test   al,al
   140015a6b:	je     0x140015aec
   140015a6d:	mov    r9d,DWORD PTR [rdi+0x10]
   140015a71:	mov    eax,r9d
   140015a74:	sub    eax,DWORD PTR [rdi+0x24]
   140015a77:	test   BYTE PTR [rdi+0x38],0x1
   140015a7b:	movsxd rcx,eax
   140015a7e:	mov    rax,QWORD PTR [rdi]
   140015a81:	movsd  xmm0,QWORD PTR [rcx+rax*1]
   140015a86:	movsd  QWORD PTR [rsp+0x30],xmm0
   140015a8c:	je     0x140015ac7
   140015a8e:	movsd  QWORD PTR [rsp+0x38],xmm0
   140015a94:	lea    rdx,[rsp+0x38]
   140015a99:	xor    ecx,ecx
   140015a9b:	lea    r8,[rsp+0x37]
   140015aa0:	movzx  eax,BYTE PTR [r8]
   140015aa4:	inc    ecx
   140015aa6:	mov    BYTE PTR [rdx],al
   140015aa8:	lea    rdx,[rdx+0x1]
   140015aac:	lea    r8,[r8-0x1]
   140015ab0:	cmp    ecx,0x8
   140015ab3:	jb     0x140015aa0
   140015ab5:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140015abb:	movsd  QWORD PTR [rsp+0x30],xmm0
   140015ac1:	movsd  xmm0,QWORD PTR [rsp+0x30]
   140015ac7:	lea    eax,[r9+0x8]
   140015acb:	mov    DWORD PTR [rdi+0x10],eax
   140015ace:	add    rsp,0x20
   140015ad2:	pop    rdi
   140015ad3:	ret    
   140015ad4:	lea    r8,[rsp+0x30]
   140015ad9:	mov    DWORD PTR [rsp+0x30],0x80
   140015ae1:	xor    edx,edx
   140015ae3:	call   0x140020b00
   140015ae8:	test   al,al
   140015aea:	jne    0x140015af5
   140015aec:	xorps  xmm0,xmm0
   140015aef:	add    rsp,0x20
   140015af3:	pop    rdi
   140015af4:	ret    
   140015af5:	mov    eax,DWORD PTR [rdi+0x10]
   140015af8:	lea    rdx,[rsp+0x38]
   140015afd:	sub    eax,DWORD PTR [rdi+0x24]
   140015b00:	mov    QWORD PTR [rsp+0x40],rbx
   140015b05:	movsxd rbx,eax
   140015b08:	add    rbx,QWORD PTR [rdi]
   140015b0b:	mov    rcx,rbx
   140015b0e:	mov    QWORD PTR [rsp+0x38],rbx
   140015b13:	call   QWORD PTR [rip+0x1c707]        # 0x140032220
   140015b19:	mov    eax,DWORD PTR [rsp+0x38]
   140015b1d:	sub    eax,ebx
   140015b1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140015b24:	je     0x140015b29
   140015b26:	add    DWORD PTR [rdi+0x10],eax
   140015b29:	add    rsp,0x20
   140015b2d:	pop    rdi
   140015b2e:	ret    
   140015b2f:	int3   
   140015b30:	rex push rdi
   140015b32:	sub    rsp,0x20
   140015b36:	test   BYTE PTR [rcx+0x19],0x1
   140015b3a:	mov    rdi,rcx
   140015b3d:	jne    0x140015b95
   140015b3f:	mov    edx,0x8
   140015b44:	call   0x140020b70
   140015b49:	test   al,al
   140015b4b:	je     0x140015bad
   140015b4d:	mov    eax,DWORD PTR [rdi+0x10]
   140015b50:	lea    rcx,[rdi+0x38]
   140015b54:	sub    eax,DWORD PTR [rdi+0x24]
   140015b57:	test   BYTE PTR [rcx],0x1
   140015b5a:	je     0x140015b81
   140015b5c:	movsxd r8,eax
   140015b5f:	lea    rdx,[rsp+0x30]
   140015b64:	add    r8,QWORD PTR [rdi]
   140015b67:	mov    r9d,0x1
   140015b6d:	call   0x140015900
   140015b72:	mov    rax,QWORD PTR [rsp+0x30]
   140015b77:	add    DWORD PTR [rdi+0x10],0x8
   140015b7b:	add    rsp,0x20
   140015b7f:	pop    rdi
   140015b80:	ret    
   140015b81:	movsxd rcx,eax
   140015b84:	mov    rax,QWORD PTR [rdi]
   140015b87:	mov    rax,QWORD PTR [rcx+rax*1]
   140015b8b:	add    DWORD PTR [rdi+0x10],0x8
   140015b8f:	add    rsp,0x20
   140015b93:	pop    rdi
   140015b94:	ret    
   140015b95:	lea    r8,[rsp+0x30]
   140015b9a:	mov    DWORD PTR [rsp+0x30],0x80
   140015ba2:	xor    edx,edx
   140015ba4:	call   0x140020b00
   140015ba9:	test   al,al
   140015bab:	jne    0x140015bb5
   140015bad:	xor    eax,eax
   140015baf:	add    rsp,0x20
   140015bb3:	pop    rdi
   140015bb4:	ret    
   140015bb5:	mov    eax,DWORD PTR [rdi+0x10]
   140015bb8:	lea    rdx,[rsp+0x38]
   140015bbd:	sub    eax,DWORD PTR [rdi+0x24]
   140015bc0:	mov    r8d,0xa
   140015bc6:	mov    QWORD PTR [rsp+0x40],rbx
   140015bcb:	movsxd rbx,eax
   140015bce:	add    rbx,QWORD PTR [rdi]
   140015bd1:	mov    rcx,rbx
   140015bd4:	mov    QWORD PTR [rsp+0x38],rbx
   140015bd9:	call   QWORD PTR [rip+0x1c681]        # 0x140032260
   140015bdf:	mov    ecx,DWORD PTR [rsp+0x38]
   140015be3:	sub    ecx,ebx
   140015be5:	mov    rbx,QWORD PTR [rsp+0x40]
   140015bea:	je     0x140015bef
   140015bec:	add    DWORD PTR [rdi+0x10],ecx
   140015bef:	add    rsp,0x20
   140015bf3:	pop    rdi
   140015bf4:	ret    
   140015bf5:	int3   
   140015bf6:	int3   
   140015bf7:	int3   
   140015bf8:	int3   
   140015bf9:	int3   
   140015bfa:	int3   
   140015bfb:	int3   
   140015bfc:	int3   
   140015bfd:	int3   
   140015bfe:	int3   
   140015bff:	int3   
   140015c00:	rex push rdi
   140015c02:	sub    rsp,0x20
   140015c06:	test   BYTE PTR [rcx+0x19],0x1
   140015c0a:	mov    rdi,rcx
   140015c0d:	jne    0x140015cbb
   140015c13:	mov    edx,0x4
   140015c18:	call   0x140020b70
   140015c1d:	test   al,al
   140015c1f:	je     0x140015cd3
   140015c25:	mov    r9d,DWORD PTR [rdi+0x10]
   140015c29:	mov    eax,r9d
   140015c2c:	sub    eax,DWORD PTR [rdi+0x24]
   140015c2f:	test   BYTE PTR [rdi+0x38],0x1
   140015c33:	je     0x140015ca5
   140015c35:	movsxd rdx,eax
   140015c38:	lea    r8,[rsp+0x30]
   140015c3d:	add    rdx,QWORD PTR [rdi]
   140015c40:	cmovne r8,rdx
   140015c44:	test   BYTE PTR [rdi+0x38],0x1
   140015c48:	je     0x140015c86
   140015c4a:	mov    eax,DWORD PTR [rsp+0x30]
   140015c4e:	lea    rdx,[rsp+0x30]
   140015c53:	xor    ecx,ecx
   140015c55:	mov    DWORD PTR [rsp+0x30],eax
   140015c59:	add    r8,0x3
   140015c5d:	nop    DWORD PTR [rax]
   140015c60:	movzx  eax,BYTE PTR [r8]
   140015c64:	inc    ecx
   140015c66:	mov    BYTE PTR [rdx],al
   140015c68:	lea    rdx,[rdx+0x1]
   140015c6c:	lea    r8,[r8-0x1]
   140015c70:	cmp    ecx,0x4
   140015c73:	jb     0x140015c60
   140015c75:	mov    eax,DWORD PTR [rsp+0x30]
   140015c79:	lea    ecx,[r9+0x4]
   140015c7d:	mov    DWORD PTR [rdi+0x10],ecx
   140015c80:	add    rsp,0x20
   140015c84:	pop    rdi
   140015c85:	ret    
   140015c86:	test   r8,r8
   140015c89:	je     0x140015c75
   140015c8b:	lea    rax,[rsp+0x30]
   140015c90:	cmp    rax,r8
   140015c93:	je     0x140015c75
   140015c95:	mov    eax,DWORD PTR [r8]
   140015c98:	lea    ecx,[r9+0x4]
   140015c9c:	mov    DWORD PTR [rdi+0x10],ecx
   140015c9f:	add    rsp,0x20
   140015ca3:	pop    rdi
   140015ca4:	ret    
   140015ca5:	movsxd rcx,eax
   140015ca8:	mov    rax,QWORD PTR [rdi]
   140015cab:	mov    eax,DWORD PTR [rcx+rax*1]
   140015cae:	lea    ecx,[r9+0x4]
   140015cb2:	mov    DWORD PTR [rdi+0x10],ecx
   140015cb5:	add    rsp,0x20
   140015cb9:	pop    rdi
   140015cba:	ret    
   140015cbb:	lea    r8,[rsp+0x30]
   140015cc0:	mov    DWORD PTR [rsp+0x30],0x80
   140015cc8:	xor    edx,edx
   140015cca:	call   0x140020b00
   140015ccf:	test   al,al
   140015cd1:	jne    0x140015cdd
   140015cd3:	xor    ecx,ecx
   140015cd5:	mov    eax,ecx
   140015cd7:	add    rsp,0x20
   140015cdb:	pop    rdi
   140015cdc:	ret    
   140015cdd:	mov    eax,DWORD PTR [rdi+0x10]
   140015ce0:	lea    rdx,[rsp+0x38]
   140015ce5:	sub    eax,DWORD PTR [rdi+0x24]
   140015ce8:	mov    r8d,0xa
   140015cee:	mov    QWORD PTR [rsp+0x40],rbx
   140015cf3:	movsxd rbx,eax
   140015cf6:	add    rbx,QWORD PTR [rdi]
   140015cf9:	mov    rcx,rbx
   140015cfc:	mov    QWORD PTR [rsp+0x38],rbx
   140015d01:	call   QWORD PTR [rip+0x1c559]        # 0x140032260
   140015d07:	mov    ecx,DWORD PTR [rsp+0x38]
   140015d0b:	sub    ecx,ebx
   140015d0d:	mov    rbx,QWORD PTR [rsp+0x40]
   140015d12:	je     0x140015d17
   140015d14:	add    DWORD PTR [rdi+0x10],ecx
   140015d17:	add    rsp,0x20
   140015d1b:	pop    rdi
   140015d1c:	ret    
   140015d1d:	int3   
   140015d1e:	int3   
   140015d1f:	int3   
   140015d20:	rex push rbx
   140015d22:	sub    rsp,0x20
   140015d26:	test   BYTE PTR [rcx+0x19],0x1
   140015d2a:	mov    rbx,rcx
   140015d2d:	jne    0x140015d63
   140015d2f:	mov    edx,0x1
   140015d34:	call   0x140020b70
   140015d39:	test   al,al
   140015d3b:	je     0x140015d5b
   140015d3d:	mov    edx,DWORD PTR [rbx+0x10]
   140015d40:	mov    eax,edx
   140015d42:	sub    eax,DWORD PTR [rbx+0x24]
   140015d45:	movsxd rcx,eax
   140015d48:	mov    rax,QWORD PTR [rbx]
   140015d4b:	movzx  eax,BYTE PTR [rcx+rax*1]
   140015d4f:	lea    ecx,[rdx+0x1]
   140015d52:	mov    DWORD PTR [rbx+0x10],ecx
   140015d55:	add    rsp,0x20
   140015d59:	pop    rbx
   140015d5a:	ret    
   140015d5b:	xor    al,al
   140015d5d:	add    rsp,0x20
   140015d61:	pop    rbx
   140015d62:	ret    
   140015d63:	add    rsp,0x20
   140015d67:	pop    rbx
   140015d68:	jmp    0x140015f60
   140015d6d:	int3   
   140015d6e:	int3   
   140015d6f:	int3   
   140015d70:	rex push rdi
   140015d72:	sub    rsp,0x20
   140015d76:	test   BYTE PTR [rcx+0x19],0x1
   140015d7a:	mov    rdi,rcx
   140015d7d:	jne    0x140015dd5
   140015d7f:	mov    edx,0x8
   140015d84:	call   0x140020b70
   140015d89:	test   al,al
   140015d8b:	je     0x140015ded
   140015d8d:	mov    eax,DWORD PTR [rdi+0x10]
   140015d90:	lea    rcx,[rdi+0x38]
   140015d94:	sub    eax,DWORD PTR [rdi+0x24]
   140015d97:	test   BYTE PTR [rcx],0x1
   140015d9a:	je     0x140015dc1
   140015d9c:	movsxd r8,eax
   140015d9f:	lea    rdx,[rsp+0x30]
   140015da4:	add    r8,QWORD PTR [rdi]
   140015da7:	mov    r9d,0x1
   140015dad:	call   0x140015900
   140015db2:	mov    rax,QWORD PTR [rsp+0x30]
   140015db7:	add    DWORD PTR [rdi+0x10],0x8
   140015dbb:	add    rsp,0x20
   140015dbf:	pop    rdi
   140015dc0:	ret    
   140015dc1:	movsxd rcx,eax
   140015dc4:	mov    rax,QWORD PTR [rdi]
   140015dc7:	mov    rax,QWORD PTR [rcx+rax*1]
   140015dcb:	add    DWORD PTR [rdi+0x10],0x8
   140015dcf:	add    rsp,0x20
   140015dd3:	pop    rdi
   140015dd4:	ret    
   140015dd5:	lea    r8,[rsp+0x30]
   140015dda:	mov    DWORD PTR [rsp+0x30],0x80
   140015de2:	xor    edx,edx
   140015de4:	call   0x140020b00
   140015de9:	test   al,al
   140015deb:	jne    0x140015df5
   140015ded:	xor    eax,eax
   140015def:	add    rsp,0x20
   140015df3:	pop    rdi
   140015df4:	ret    
   140015df5:	mov    eax,DWORD PTR [rdi+0x10]
   140015df8:	lea    rdx,[rsp+0x38]
   140015dfd:	sub    eax,DWORD PTR [rdi+0x24]
   140015e00:	mov    r8d,0xa
   140015e06:	mov    QWORD PTR [rsp+0x40],rbx
   140015e0b:	movsxd rbx,eax
   140015e0e:	add    rbx,QWORD PTR [rdi]
   140015e11:	mov    rcx,rbx
   140015e14:	mov    QWORD PTR [rsp+0x38],rbx
   140015e19:	call   QWORD PTR [rip+0x1c3f9]        # 0x140032218
   140015e1f:	mov    ecx,DWORD PTR [rsp+0x38]
   140015e23:	sub    ecx,ebx
   140015e25:	mov    rbx,QWORD PTR [rsp+0x40]
   140015e2a:	je     0x140015e2f
   140015e2c:	add    DWORD PTR [rdi+0x10],ecx
   140015e2f:	add    rsp,0x20
   140015e33:	pop    rdi
   140015e34:	ret    
   140015e35:	int3   
   140015e36:	int3   
   140015e37:	int3   
   140015e38:	int3   
   140015e39:	int3   
   140015e3a:	int3   
   140015e3b:	int3   
   140015e3c:	int3   
   140015e3d:	int3   
   140015e3e:	int3   
   140015e3f:	int3   
   140015e40:	rex push rdi
   140015e42:	sub    rsp,0x20
   140015e46:	test   BYTE PTR [rcx+0x19],0x1
   140015e4a:	mov    rdi,rcx
   140015e4d:	jne    0x140015efb
   140015e53:	mov    edx,0x4
   140015e58:	call   0x140020b70
   140015e5d:	test   al,al
   140015e5f:	je     0x140015f13
   140015e65:	mov    r9d,DWORD PTR [rdi+0x10]
   140015e69:	mov    eax,r9d
   140015e6c:	sub    eax,DWORD PTR [rdi+0x24]
   140015e6f:	test   BYTE PTR [rdi+0x38],0x1
   140015e73:	je     0x140015ee5
   140015e75:	movsxd rdx,eax
   140015e78:	lea    r8,[rsp+0x30]
   140015e7d:	add    rdx,QWORD PTR [rdi]
   140015e80:	cmovne r8,rdx
   140015e84:	test   BYTE PTR [rdi+0x38],0x1
   140015e88:	je     0x140015ec6
   140015e8a:	mov    eax,DWORD PTR [rsp+0x30]
   140015e8e:	lea    rdx,[rsp+0x30]
   140015e93:	xor    ecx,ecx
   140015e95:	mov    DWORD PTR [rsp+0x30],eax
   140015e99:	add    r8,0x3
   140015e9d:	nop    DWORD PTR [rax]
   140015ea0:	movzx  eax,BYTE PTR [r8]
   140015ea4:	inc    ecx
   140015ea6:	mov    BYTE PTR [rdx],al
   140015ea8:	lea    rdx,[rdx+0x1]
   140015eac:	lea    r8,[r8-0x1]
   140015eb0:	cmp    ecx,0x4
   140015eb3:	jb     0x140015ea0
   140015eb5:	mov    eax,DWORD PTR [rsp+0x30]
   140015eb9:	lea    ecx,[r9+0x4]
   140015ebd:	mov    DWORD PTR [rdi+0x10],ecx
   140015ec0:	add    rsp,0x20
   140015ec4:	pop    rdi
   140015ec5:	ret    
   140015ec6:	test   r8,r8
   140015ec9:	je     0x140015eb5
   140015ecb:	lea    rax,[rsp+0x30]
   140015ed0:	cmp    rax,r8
   140015ed3:	je     0x140015eb5
   140015ed5:	mov    eax,DWORD PTR [r8]
   140015ed8:	lea    ecx,[r9+0x4]
   140015edc:	mov    DWORD PTR [rdi+0x10],ecx
   140015edf:	add    rsp,0x20
   140015ee3:	pop    rdi
   140015ee4:	ret    
   140015ee5:	movsxd rcx,eax
   140015ee8:	mov    rax,QWORD PTR [rdi]
   140015eeb:	mov    eax,DWORD PTR [rcx+rax*1]
   140015eee:	lea    ecx,[r9+0x4]
   140015ef2:	mov    DWORD PTR [rdi+0x10],ecx
   140015ef5:	add    rsp,0x20
   140015ef9:	pop    rdi
   140015efa:	ret    
   140015efb:	lea    r8,[rsp+0x30]
   140015f00:	mov    DWORD PTR [rsp+0x30],0x80
   140015f08:	xor    edx,edx
   140015f0a:	call   0x140020b00
   140015f0f:	test   al,al
   140015f11:	jne    0x140015f1d
   140015f13:	xor    ecx,ecx
   140015f15:	mov    eax,ecx
   140015f17:	add    rsp,0x20
   140015f1b:	pop    rdi
   140015f1c:	ret    
   140015f1d:	mov    eax,DWORD PTR [rdi+0x10]
   140015f20:	lea    rdx,[rsp+0x38]
   140015f25:	sub    eax,DWORD PTR [rdi+0x24]
   140015f28:	mov    r8d,0xa
   140015f2e:	mov    QWORD PTR [rsp+0x40],rbx
   140015f33:	movsxd rbx,eax
   140015f36:	add    rbx,QWORD PTR [rdi]
   140015f39:	mov    rcx,rbx
   140015f3c:	mov    QWORD PTR [rsp+0x38],rbx
   140015f41:	call   QWORD PTR [rip+0x1c2d1]        # 0x140032218
   140015f47:	mov    ecx,DWORD PTR [rsp+0x38]
   140015f4b:	sub    ecx,ebx
   140015f4d:	mov    rbx,QWORD PTR [rsp+0x40]
   140015f52:	je     0x140015f57
   140015f54:	add    DWORD PTR [rdi+0x10],ecx
   140015f57:	add    rsp,0x20
   140015f5b:	pop    rdi
   140015f5c:	ret    
   140015f5d:	int3   
   140015f5e:	int3   
   140015f5f:	int3   
   140015f60:	rex push rdi
   140015f62:	sub    rsp,0x20
   140015f66:	test   BYTE PTR [rcx+0x19],0x1
   140015f6a:	mov    rdi,rcx
   140015f6d:	jne    0x14001602e
   140015f73:	mov    edx,0x2
   140015f78:	call   0x140020b70
   140015f7d:	test   al,al
   140015f7f:	je     0x140016046
   140015f85:	mov    r9d,DWORD PTR [rdi+0x10]
   140015f89:	mov    eax,r9d
   140015f8c:	sub    eax,DWORD PTR [rdi+0x24]
   140015f8f:	test   BYTE PTR [rdi+0x38],0x1
   140015f93:	je     0x140016017
   140015f99:	movsxd rdx,eax
   140015f9c:	lea    r8,[rsp+0x30]
   140015fa1:	mov    rax,QWORD PTR [rdi]
   140015fa4:	add    rdx,rax
   140015fa7:	cmovne r8,rdx
   140015fab:	test   BYTE PTR [rdi+0x38],0x1
   140015faf:	je     0x140015ff7
   140015fb1:	movzx  eax,WORD PTR [rsp+0x30]
   140015fb6:	lea    rdx,[rsp+0x30]
   140015fbb:	xor    ecx,ecx
   140015fbd:	mov    WORD PTR [rsp+0x30],ax
   140015fc2:	inc    r8
   140015fc5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140015fd0:	movzx  eax,BYTE PTR [r8]
   140015fd4:	inc    ecx
   140015fd6:	mov    BYTE PTR [rdx],al
   140015fd8:	lea    rdx,[rdx+0x1]
   140015fdc:	lea    r8,[r8-0x1]
   140015fe0:	cmp    ecx,0x2
   140015fe3:	jb     0x140015fd0
   140015fe5:	movzx  eax,WORD PTR [rsp+0x30]
   140015fea:	lea    ecx,[r9+0x2]
   140015fee:	mov    DWORD PTR [rdi+0x10],ecx
   140015ff1:	add    rsp,0x20
   140015ff5:	pop    rdi
   140015ff6:	ret    
   140015ff7:	test   r8,r8
   140015ffa:	je     0x140015fe5
   140015ffc:	lea    rax,[rsp+0x30]
   140016001:	cmp    rax,r8
   140016004:	je     0x140015fe5
   140016006:	movzx  eax,WORD PTR [r8]
   14001600a:	lea    ecx,[r9+0x2]
   14001600e:	mov    DWORD PTR [rdi+0x10],ecx
   140016011:	add    rsp,0x20
   140016015:	pop    rdi
   140016016:	ret    
   140016017:	movsxd rcx,eax
   14001601a:	mov    rax,QWORD PTR [rdi]
   14001601d:	movzx  eax,WORD PTR [rcx+rax*1]
   140016021:	lea    ecx,[r9+0x2]
   140016025:	mov    DWORD PTR [rdi+0x10],ecx
   140016028:	add    rsp,0x20
   14001602c:	pop    rdi
   14001602d:	ret    
   14001602e:	lea    r8,[rsp+0x30]
   140016033:	mov    DWORD PTR [rsp+0x30],0x80
   14001603b:	xor    edx,edx
   14001603d:	call   0x140020b00
   140016042:	test   al,al
   140016044:	jne    0x140016051
   140016046:	xor    ecx,ecx
   140016048:	movzx  eax,cx
   14001604b:	add    rsp,0x20
   14001604f:	pop    rdi
   140016050:	ret    
   140016051:	mov    eax,DWORD PTR [rdi+0x10]
   140016054:	lea    rdx,[rsp+0x38]
   140016059:	sub    eax,DWORD PTR [rdi+0x24]
   14001605c:	mov    r8d,0xa
   140016062:	mov    QWORD PTR [rsp+0x40],rbx
   140016067:	movsxd rbx,eax
   14001606a:	add    rbx,QWORD PTR [rdi]
   14001606d:	mov    rcx,rbx
   140016070:	mov    QWORD PTR [rsp+0x38],rbx
   140016075:	call   QWORD PTR [rip+0x1c19d]        # 0x140032218
   14001607b:	mov    ecx,DWORD PTR [rsp+0x38]
   14001607f:	sub    ecx,ebx
   140016081:	mov    rbx,QWORD PTR [rsp+0x40]
   140016086:	je     0x14001608b
   140016088:	add    DWORD PTR [rdi+0x10],ecx
   14001608b:	add    rsp,0x20
   14001608f:	pop    rdi
   140016090:	ret    
   140016091:	int3   
   140016092:	int3   
   140016093:	int3   
   140016094:	int3   
   140016095:	int3   
   140016096:	int3   
   140016097:	int3   
   140016098:	int3   
   140016099:	int3   
   14001609a:	int3   
   14001609b:	int3   
   14001609c:	int3   
   14001609d:	int3   
   14001609e:	int3   
   14001609f:	int3   
   1400160a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400160a5:	push   rbp
   1400160a6:	push   rbx
   1400160a7:	push   rsi
   1400160a8:	push   rdi
   1400160a9:	push   r12
   1400160ab:	lea    rbp,[rsp-0x3d0]
   1400160b3:	sub    rsp,0x4d0
   1400160ba:	mov    DWORD PTR [rsp+0x40],0x0
   1400160c2:	mov    rbx,r8
   1400160c5:	mov    QWORD PTR [rsp+0x28],rbx
   1400160ca:	xorps  xmm0,xmm0
   1400160cd:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400160d3:	mov    BYTE PTR [rsp+0x44],0x0
   1400160d8:	mov    rdi,r9
   1400160db:	mov    QWORD PTR [rsp+0x20],rdx
   1400160e0:	mov    rsi,rdx
   1400160e3:	mov    eax,DWORD PTR [r8+0x20]
   1400160e7:	mov    r12,rcx
   1400160ea:	sub    eax,DWORD PTR [r8+0x10]
   1400160ee:	cmp    eax,0x4
   1400160f1:	jae    0x140016117
   1400160f3:	test   rdx,rdx
   1400160f6:	je     0x140016107
   1400160f8:	lea    rdx,[rip+0x20b89]        # 0x140036c88
   1400160ff:	mov    rcx,rsi
   140016102:	call   0x14001aae0
   140016107:	xor    al,al
   140016109:	add    rsp,0x4d0
   140016110:	pop    r12
   140016112:	pop    rdi
   140016113:	pop    rsi
   140016114:	pop    rbx
   140016115:	pop    rbp
   140016116:	ret    
   140016117:	mov    rcx,rbx
   14001611a:	call   0x140015e40
   14001611f:	cmp    eax,0x3564b56
   140016124:	je     0x140016145
   140016126:	lea    rdx,[rip+0x20b9b]        # 0x140036cc8
   14001612d:	mov    rcx,rsi
   140016130:	call   0x14001aae0
   140016135:	xor    al,al
   140016137:	add    rsp,0x4d0
   14001613e:	pop    r12
   140016140:	pop    rdi
   140016141:	pop    rsi
   140016142:	pop    rbx
   140016143:	pop    rbp
   140016144:	ret    
   140016145:	movups xmm0,XMMWORD PTR [rip+0x1c644]        # 0x140032790
   14001614c:	mov    rax,QWORD PTR [rsp+0x28]
   140016151:	movups XMMWORD PTR [rsp+0x58],xmm0
   140016156:	movups XMMWORD PTR [rsp+0x48],xmm0
   14001615b:	mov    ecx,DWORD PTR [rax+0x20]
   14001615e:	sub    ecx,DWORD PTR [rax+0x10]
   140016161:	cmp    ecx,0x10
   140016164:	jae    0x14001618c
   140016166:	mov    rcx,QWORD PTR [rsp+0x20]
   14001616b:	test   rcx,rcx
   14001616e:	je     0x140016107
   140016170:	lea    rdx,[rip+0x20b11]        # 0x140036c88
   140016177:	call   0x14001aae0
   14001617c:	xor    al,al
   14001617e:	add    rsp,0x4d0
   140016185:	pop    r12
   140016187:	pop    rdi
   140016188:	pop    rsi
   140016189:	pop    rbx
   14001618a:	pop    rbp
   14001618b:	ret    
   14001618c:	mov    r8d,0x10
   140016192:	lea    rdx,[rsp+0x58]
   140016197:	mov    rcx,rbx
   14001619a:	call   0x1400210e0
   14001619f:	mov    rax,QWORD PTR [rsp+0x28]
   1400161a4:	mov    ecx,DWORD PTR [rax+0x20]
   1400161a7:	sub    ecx,DWORD PTR [rax+0x10]
   1400161aa:	cmp    ecx,0x10
   1400161ad:	jb     0x140016166
   1400161af:	mov    r8d,0x10
   1400161b5:	lea    rdx,[rsp+0x48]
   1400161ba:	mov    rcx,rbx
   1400161bd:	call   0x1400210e0
   1400161c2:	mov    r8,QWORD PTR [rip+0x2fe57]        # 0x140046020
   1400161c9:	mov    rdx,QWORD PTR [rsp+0x58]
   1400161ce:	mov    rax,QWORD PTR [rip+0x2fe5b]        # 0x140046030
   1400161d5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400161da:	cmp    rdx,QWORD PTR [r8]
   1400161dd:	jne    0x1400161e5
   1400161df:	cmp    rcx,QWORD PTR [r8+0x8]
   1400161e3:	je     0x1400161f8
   1400161e5:	cmp    rdx,QWORD PTR [rax]
   1400161e8:	jne    0x1400164bd
   1400161ee:	cmp    rcx,QWORD PTR [rax+0x8]
   1400161f2:	jne    0x1400164bd
   1400161f8:	cmp    rdx,QWORD PTR [rax]
   1400161fb:	jne    0x140016477
   140016201:	cmp    rcx,QWORD PTR [rax+0x8]
   140016205:	jne    0x140016477
   14001620b:	mov    eax,DWORD PTR [rbx+0x10]
   14001620e:	mov    QWORD PTR [rsp+0x508],r13
   140016216:	mov    r13d,DWORD PTR [rbx+0x20]
   14001621a:	sub    r13d,eax
   14001621d:	mov    QWORD PTR [rsp+0x510],r14
   140016225:	sub    eax,DWORD PTR [rbx+0x24]
   140016228:	mov    edx,r13d
   14001622b:	movsxd rcx,eax
   14001622e:	add    rcx,QWORD PTR [rbx]
   140016231:	call   0x140015a20
   140016236:	mov    r14d,eax
   140016239:	test   eax,eax
   14001623b:	jne    0x14001626c
   14001623d:	lea    rdx,[rip+0x20ad4]        # 0x140036d18
   140016244:	mov    rcx,rsi
   140016247:	call   0x14001aae0
   14001624c:	xor    al,al
   14001624e:	mov    r13,QWORD PTR [rsp+0x508]
   140016256:	mov    r14,QWORD PTR [rsp+0x510]
   14001625e:	add    rsp,0x4d0
   140016265:	pop    r12
   140016267:	pop    rdi
   140016268:	pop    rsi
   140016269:	pop    rbx
   14001626a:	pop    rbp
   14001626b:	ret    
   14001626c:	test   rdi,rdi
   14001626f:	je     0x1400162e8
   140016271:	mov    edx,DWORD PTR [rdi+0x14]
   140016274:	mov    rcx,rdi
   140016277:	add    edx,r14d
   14001627a:	call   0x140020fc0
   14001627f:	mov    eax,DWORD PTR [rdi+0x14]
   140016282:	mov    r9d,r14d
   140016285:	sub    eax,DWORD PTR [rdi+0x24]
   140016288:	mov    edx,r13d
   14001628b:	movsxd r8,eax
   14001628e:	mov    eax,DWORD PTR [rbx+0x10]
   140016291:	sub    eax,DWORD PTR [rbx+0x24]
   140016294:	add    r8,QWORD PTR [rdi]
   140016297:	movsxd rcx,eax
   14001629a:	add    rcx,QWORD PTR [rbx]
   14001629d:	call   0x1400243f0
   1400162a2:	cmp    eax,r14d
   1400162a5:	je     0x1400162b0
   1400162a7:	lea    rdx,[rip+0x20a92]        # 0x140036d40
   1400162ae:	jmp    0x140016244
   1400162b0:	mov    r8d,r14d
   1400162b3:	mov    edx,0x1
   1400162b8:	mov    rcx,rdi
   1400162bb:	call   0x140021f40
   1400162c0:	mov    r9,QWORD PTR [rbp+0x420]
   1400162c7:	lea    r8,[rsp+0x48]
   1400162cc:	mov    rdx,r12
   1400162cf:	mov    QWORD PTR [rsp+0x28],rdi
   1400162d4:	lea    rcx,[rsp+0x20]
   1400162d9:	mov    BYTE PTR [rsp+0x44],0x1
   1400162de:	call   0x1400164e0
   1400162e3:	jmp    0x14001624e
   1400162e8:	mov    edx,0x400
   1400162ed:	mov    QWORD PTR [rsp+0x518],r15
   1400162f5:	lea    rcx,[rbp-0x48]
   1400162f9:	mov    DWORD PTR [rbp-0x50],0x0
   140016300:	mov    QWORD PTR [rbp-0x48],0x0
   140016308:	mov    DWORD PTR [rbp-0x40],0x400
   14001630f:	mov    DWORD PTR [rbp-0x3c],0x80000000
   140016316:	call   0x14000da80
   14001631b:	movsxd r15,DWORD PTR [rbp-0x50]
   14001631f:	lea    r10,[rbp-0x38]
   140016323:	mov    QWORD PTR [rbp-0x48],r10
   140016327:	cmp    r15d,r14d
   14001632a:	jge    0x140016383
   14001632c:	mov    edi,r14d
   14001632f:	sub    edi,r15d
   140016332:	je     0x140016383
   140016334:	mov    eax,DWORD PTR [rbp-0x40]
   140016337:	lea    r12d,[r15+rdi*1]
   14001633b:	cmp    r12d,eax
   14001633e:	jle    0x140016352
   140016340:	mov    edx,r12d
   140016343:	lea    rcx,[rbp-0x48]
   140016347:	sub    edx,eax
   140016349:	call   0x14000f0d0
   14001634e:	mov    r10,QWORD PTR [rbp-0x48]
   140016352:	mov    eax,r12d
   140016355:	mov    DWORD PTR [rbp-0x50],r12d
   140016359:	sub    eax,r15d
   14001635c:	sub    eax,edi
   14001635e:	test   eax,eax
   140016360:	jle    0x14001637c
   140016362:	test   edi,edi
   140016364:	jle    0x14001637c
   140016366:	movsxd rcx,r12d
   140016369:	lea    rdx,[r10+r15*1]
   14001636d:	add    rcx,r10
   140016370:	movsxd r8,eax
   140016373:	call   0x140026f70
   140016378:	mov    r10,QWORD PTR [rbp-0x48]
   14001637c:	mov    r12,QWORD PTR [rbp+0x400]
   140016383:	mov    eax,DWORD PTR [rbx+0x10]
   140016386:	mov    r9d,r14d
   140016389:	sub    eax,DWORD PTR [rbx+0x24]
   14001638c:	mov    r8,r10
   14001638f:	movsxd rcx,eax
   140016392:	mov    edx,r13d
   140016395:	add    rcx,QWORD PTR [rbx]
   140016398:	call   0x1400243f0
   14001639d:	mov    r15,QWORD PTR [rsp+0x518]
   1400163a5:	cmp    eax,r14d
   1400163a8:	je     0x1400163bd
   1400163aa:	lea    rdx,[rip+0x2098f]        # 0x140036d40
   1400163b1:	mov    rcx,rsi
   1400163b4:	call   0x14001aae0
   1400163b9:	xor    bl,bl
   1400163bb:	jmp    0x140016430
   1400163bd:	mov    rdx,QWORD PTR [rbp-0x48]
   1400163c1:	lea    rcx,[rsp+0x70]
   1400163c6:	mov    r9d,0x8
   1400163cc:	mov    r8d,eax
   1400163cf:	call   0x140020940
   1400163d4:	mov    r9,QWORD PTR [rbp+0x420]
   1400163db:	lea    rax,[rsp+0x70]
   1400163e0:	lea    r8,[rsp+0x48]
   1400163e5:	mov    QWORD PTR [rsp+0x28],rax
   1400163ea:	mov    rdx,r12
   1400163ed:	lea    rcx,[rsp+0x20]
   1400163f2:	call   0x1400164e0
   1400163f7:	test   DWORD PTR [rsp+0x7c],0xc0000000
   1400163ff:	movzx  ebx,al
   140016402:	jne    0x140016430
   140016404:	mov    rdx,QWORD PTR [rsp+0x70]
   140016409:	test   rdx,rdx
   14001640c:	je     0x140016428
   14001640e:	mov    rcx,QWORD PTR [rip+0x1bf7b]        # 0x140032390
   140016415:	mov    rcx,QWORD PTR [rcx]
   140016418:	mov    r9,QWORD PTR [rcx]
   14001641b:	call   QWORD PTR [r9+0x28]
   14001641f:	mov    QWORD PTR [rsp+0x70],0x0
   140016428:	mov    DWORD PTR [rsp+0x78],0x0
   140016430:	xor    r9d,r9d
   140016433:	mov    DWORD PTR [rbp-0x50],0x0
   14001643a:	mov    r8d,0x400
   140016440:	lea    rdx,[rbp-0x38]
   140016444:	lea    rcx,[rbp-0x48]
   140016448:	call   0x140010610
   14001644d:	test   DWORD PTR [rbp-0x3c],0xc0000000
   140016454:	jne    0x14001646f
   140016456:	mov    rdx,QWORD PTR [rbp-0x48]
   14001645a:	test   rdx,rdx
   14001645d:	je     0x14001646f
   14001645f:	mov    rax,QWORD PTR [rip+0x1bf2a]        # 0x140032390
   140016466:	mov    rcx,QWORD PTR [rax]
   140016469:	mov    rax,QWORD PTR [rcx]
   14001646c:	call   QWORD PTR [rax+0x28]
   14001646f:	movzx  eax,bl
   140016472:	jmp    0x14001624e
   140016477:	test   rdi,rdi
   14001647a:	je     0x140016496
   14001647c:	cmp    rdi,rbx
   14001647f:	je     0x140016491
   140016481:	mov    rdx,rbx
   140016484:	mov    rcx,rdi
   140016487:	call   0x1400159c0
   14001648c:	mov    QWORD PTR [rsp+0x28],rdi
   140016491:	mov    BYTE PTR [rsp+0x44],0x1
   140016496:	mov    r9,QWORD PTR [rbp+0x420]
   14001649d:	lea    r8,[rsp+0x48]
   1400164a2:	mov    rdx,r12
   1400164a5:	lea    rcx,[rsp+0x20]
   1400164aa:	call   0x1400164e0
   1400164af:	add    rsp,0x4d0
   1400164b6:	pop    r12
   1400164b8:	pop    rdi
   1400164b9:	pop    rsi
   1400164ba:	pop    rbx
   1400164bb:	pop    rbp
   1400164bc:	ret    
   1400164bd:	lea    rdx,[rip+0x2082c]        # 0x140036cf0
   1400164c4:	mov    rcx,rsi
   1400164c7:	call   0x14001aae0
   1400164cc:	xor    al,al
   1400164ce:	add    rsp,0x4d0
   1400164d5:	pop    r12
   1400164d7:	pop    rdi
   1400164d8:	pop    rsi
   1400164d9:	pop    rbx
   1400164da:	pop    rbp
   1400164db:	ret    
   1400164dc:	int3   
   1400164dd:	int3   
   1400164de:	int3   
   1400164df:	int3   
   1400164e0:	mov    rax,rsp
   1400164e3:	push   rbp
   1400164e4:	push   rbx
   1400164e5:	lea    rbp,[rax-0xb98]
   1400164ec:	sub    rsp,0xc88
   1400164f3:	mov    QWORD PTR [rax+0x8],rsi
   1400164f7:	mov    rbx,rcx
   1400164fa:	mov    rcx,QWORD PTR [rcx+0x8]
   1400164fe:	mov    QWORD PTR [rax+0x10],rdi
   140016502:	mov    QWORD PTR [rax+0x18],r12
   140016506:	mov    r12,r9
   140016509:	mov    QWORD PTR [rax-0x18],r13
   14001650d:	mov    r13,r8
   140016510:	mov    QWORD PTR [rax-0x28],r15
   140016514:	mov    r15,rdx
   140016517:	call   0x140015c00
   14001651c:	xor    esi,esi
   14001651e:	mov    edi,eax
   140016520:	mov    edx,0x100
   140016525:	mov    DWORD PTR [rsp+0x30],esi
   140016529:	lea    rcx,[rsp+0x38]
   14001652e:	mov    QWORD PTR [rsp+0x38],rsi
   140016533:	mov    DWORD PTR [rsp+0x40],0x100
   14001653b:	mov    DWORD PTR [rsp+0x44],0x80000000
   140016543:	call   0x14000dc10
   140016548:	lea    rax,[rsp+0x38]
   14001654d:	test   al,0x3
   14001654f:	je     0x14001655c
   140016551:	call   QWORD PTR [rip+0x1c059]        # 0x1400325b0
   140016557:	test   eax,eax
   140016559:	je     0x14001655c
   14001655b:	int3   
   14001655c:	lea    rax,[rsp+0x48]
   140016561:	mov    DWORD PTR [rbp+0x350],esi
   140016567:	mov    edx,0x100
   14001656c:	mov    QWORD PTR [rsp+0x38],rax
   140016571:	lea    rcx,[rbp+0x358]
   140016578:	mov    QWORD PTR [rbp+0x358],rsi
   14001657f:	mov    DWORD PTR [rbp+0x360],0x100
   140016589:	mov    DWORD PTR [rbp+0x364],0x80000000
   140016593:	call   0x14000db40
   140016598:	lea    rax,[rbp+0x358]
   14001659f:	test   al,0x7
   1400165a1:	je     0x1400165ae
   1400165a3:	call   QWORD PTR [rip+0x1c007]        # 0x1400325b0
   1400165a9:	test   eax,eax
   1400165ab:	je     0x1400165ae
   1400165ad:	int3   
   1400165ae:	lea    rax,[rbp+0x368]
   1400165b5:	mov    edx,edi
   1400165b7:	lea    rcx,[rbp+0x358]
   1400165be:	mov    QWORD PTR [rbp+0x358],rax
   1400165c5:	call   0x14000db40
   1400165ca:	mov    edx,edi
   1400165cc:	lea    rcx,[rsp+0x38]
   1400165d1:	call   0x14000dc10
   1400165d6:	test   edi,edi
   1400165d8:	jle    0x1400166a9
   1400165de:	mov    QWORD PTR [rsp+0xc78],r14
   1400165e6:	mov    r14,rdi
   1400165e9:	nop    DWORD PTR [rax+0x0]
   1400165f0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400165f4:	mov    eax,DWORD PTR [rcx+0x10]
   1400165f7:	sub    eax,DWORD PTR [rcx+0x24]
   1400165fa:	movsxd rdi,eax
   1400165fd:	movsxd rax,DWORD PTR [rbp+0x350]
   140016604:	add    rdi,QWORD PTR [rcx]
   140016607:	mov    rsi,rax
   14001660a:	cmp    eax,DWORD PTR [rbp+0x360]
   140016610:	jne    0x140016629
   140016612:	mov    edx,0x1
   140016617:	lea    rcx,[rbp+0x358]
   14001661e:	call   0x140013420
   140016623:	mov    eax,DWORD PTR [rbp+0x350]
   140016629:	inc    eax
   14001662b:	mov    DWORD PTR [rbp+0x350],eax
   140016631:	mov    rax,QWORD PTR [rbp+0x358]
   140016638:	lea    rdx,[rax+rsi*8]
   14001663c:	test   rdx,rdx
   14001663f:	je     0x140016644
   140016641:	mov    QWORD PTR [rdx],rdi
   140016644:	movsxd rax,DWORD PTR [rsp+0x30]
   140016649:	mov    rdi,rax
   14001664c:	cmp    eax,DWORD PTR [rsp+0x40]
   140016650:	jne    0x140016665
   140016652:	mov    edx,0x1
   140016657:	lea    rcx,[rsp+0x38]
   14001665c:	call   0x1400031e0
   140016661:	mov    eax,DWORD PTR [rsp+0x30]
   140016665:	inc    eax
   140016667:	xor    esi,esi
   140016669:	mov    DWORD PTR [rsp+0x30],eax
   14001666d:	mov    rax,QWORD PTR [rsp+0x38]
   140016672:	lea    rdx,[rax+rdi*4]
   140016676:	test   rdx,rdx
   140016679:	je     0x14001667d
   14001667b:	mov    DWORD PTR [rdx],esi
   14001667d:	mov    rcx,QWORD PTR [rbx+0x8]
   140016681:	call   0x140021780
   140016686:	mov    rcx,QWORD PTR [rbx+0x8]
   14001668a:	mov    r8d,eax
   14001668d:	mov    edx,0x1
   140016692:	call   0x140021ee0
   140016697:	sub    r14,0x1
   14001669b:	jne    0x1400165f0
   1400166a1:	mov    r14,QWORD PTR [rsp+0xc78]
   1400166a9:	mov    rax,QWORD PTR [rsp+0x38]
   1400166ae:	mov    rdx,r15
   1400166b1:	mov    QWORD PTR [rbx+0x18],rax
   1400166b5:	mov    rcx,rbx
   1400166b8:	mov    rax,QWORD PTR [rbp+0x358]
   1400166bf:	mov    QWORD PTR [rbx+0x10],rax
   1400166c3:	mov    eax,DWORD PTR [rbp+0x350]
   1400166c9:	mov    DWORD PTR [rbx+0x20],eax
   1400166cc:	call   0x1400168a0
   1400166d1:	mov    rdi,QWORD PTR [rsp+0xca8]
   1400166d9:	test   al,al
   1400166db:	je     0x140016704
   1400166dd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400166e1:	mov    eax,DWORD PTR [rcx+0x20]
   1400166e4:	sub    eax,DWORD PTR [rcx+0x10]
   1400166e7:	cmp    eax,0x4
   1400166ea:	jae    0x14001684c
   1400166f0:	mov    rcx,QWORD PTR [rbx]
   1400166f3:	test   rcx,rcx
   1400166f6:	je     0x140016704
   1400166f8:	lea    rdx,[rip+0x20589]        # 0x140036c88
   1400166ff:	call   0x14001aae0
   140016704:	xor    bl,bl
   140016706:	cmp    DWORD PTR [rbp+0x360],0x0
   14001670d:	mov    r15,QWORD PTR [rsp+0xc70]
   140016715:	mov    r13,QWORD PTR [rsp+0xc80]
   14001671d:	mov    r12,QWORD PTR [rsp+0xcb0]
   140016725:	mov    rdx,QWORD PTR [rbp+0x358]
   14001672c:	mov    DWORD PTR [rbp+0x350],esi
   140016732:	jl     0x14001678e
   140016734:	lea    rax,[rbp+0x368]
   14001673b:	cmp    rdx,rax
   14001673e:	je     0x14001678e
   140016740:	test   rdx,rdx
   140016743:	je     0x140016761
   140016745:	test   DWORD PTR [rbp+0x364],0xc0000000
   14001674f:	jne    0x140016761
   140016751:	mov    rax,QWORD PTR [rip+0x1bc38]        # 0x140032390
   140016758:	mov    rcx,QWORD PTR [rax]
   14001675b:	mov    rax,QWORD PTR [rcx]
   14001675e:	call   QWORD PTR [rax+0x28]
   140016761:	mov    eax,DWORD PTR [rbp+0x364]
   140016767:	lea    rdx,[rbp+0x368]
   14001676e:	and    eax,0x3fffffff
   140016773:	mov    QWORD PTR [rbp+0x358],rdx
   14001677a:	bts    eax,0x1f
   14001677e:	mov    DWORD PTR [rbp+0x360],0x100
   140016788:	mov    DWORD PTR [rbp+0x364],eax
   14001678e:	test   DWORD PTR [rbp+0x364],0xc0000000
   140016798:	jne    0x1400167bc
   14001679a:	test   rdx,rdx
   14001679d:	je     0x1400167b6
   14001679f:	mov    rax,QWORD PTR [rip+0x1bbea]        # 0x140032390
   1400167a6:	mov    rcx,QWORD PTR [rax]
   1400167a9:	mov    rax,QWORD PTR [rcx]
   1400167ac:	call   QWORD PTR [rax+0x28]
   1400167af:	mov    QWORD PTR [rbp+0x358],rsi
   1400167b6:	mov    DWORD PTR [rbp+0x360],esi
   1400167bc:	cmp    DWORD PTR [rsp+0x40],0x0
   1400167c1:	mov    rdx,QWORD PTR [rsp+0x38]
   1400167c6:	mov    DWORD PTR [rsp+0x30],esi
   1400167ca:	mov    rsi,QWORD PTR [rsp+0xca0]
   1400167d2:	jl     0x140016820
   1400167d4:	lea    rax,[rsp+0x48]
   1400167d9:	cmp    rdx,rax
   1400167dc:	je     0x140016820
   1400167de:	test   rdx,rdx
   1400167e1:	je     0x1400167fd
   1400167e3:	test   DWORD PTR [rsp+0x44],0xc0000000
   1400167eb:	jne    0x1400167fd
   1400167ed:	mov    rax,QWORD PTR [rip+0x1bb9c]        # 0x140032390
   1400167f4:	mov    rcx,QWORD PTR [rax]
   1400167f7:	mov    rax,QWORD PTR [rcx]
   1400167fa:	call   QWORD PTR [rax+0x28]
   1400167fd:	mov    eax,DWORD PTR [rsp+0x44]
   140016801:	lea    rdx,[rsp+0x48]
   140016806:	and    eax,0x3fffffff
   14001680b:	mov    QWORD PTR [rsp+0x38],rdx
   140016810:	bts    eax,0x1f
   140016814:	mov    DWORD PTR [rsp+0x40],0x100
   14001681c:	mov    DWORD PTR [rsp+0x44],eax
   140016820:	test   DWORD PTR [rsp+0x44],0xc0000000
   140016828:	jne    0x14001683f
   14001682a:	test   rdx,rdx
   14001682d:	je     0x14001683f
   14001682f:	mov    rax,QWORD PTR [rip+0x1bb5a]        # 0x140032390
   140016836:	mov    rcx,QWORD PTR [rax]
   140016839:	mov    rax,QWORD PTR [rcx]
   14001683c:	call   QWORD PTR [rax+0x28]
   14001683f:	movzx  eax,bl
   140016842:	add    rsp,0xc88
   140016849:	pop    rbx
   14001684a:	pop    rbp
   14001684b:	ret    
   14001684c:	call   0x140015e40
   140016851:	cmp    eax,0xffffffff
   140016854:	je     0x14001686e
   140016856:	mov    rcx,QWORD PTR [rbx]
   140016859:	test   rcx,rcx
   14001685c:	je     0x140016704
   140016862:	lea    rdx,[rip+0x2044f]        # 0x140036cb8
   140016869:	jmp    0x1400166ff
   14001686e:	mov    r9,QWORD PTR [rbx]
   140016871:	lea    rdx,[rsp+0x20]
   140016876:	mov    r8,r12
   140016879:	mov    QWORD PTR [rsp+0x20],rsi
   14001687e:	mov    rcx,r15
   140016881:	mov    QWORD PTR [rsp+0x28],r13
   140016886:	call   0x140018480
   14001688b:	movzx  ebx,al
   14001688e:	jmp    0x140016706
   140016893:	int3   
   140016894:	int3   
   140016895:	int3   
   140016896:	int3   
   140016897:	int3   
   140016898:	int3   
   140016899:	int3   
   14001689a:	int3   
   14001689b:	int3   
   14001689c:	int3   
   14001689d:	int3   
   14001689e:	int3   
   14001689f:	int3   
   1400168a0:	rex push rbx
   1400168a2:	push   rbp
   1400168a3:	sub    rsp,0x38
   1400168a7:	mov    rbp,rdx
   1400168aa:	mov    rbx,rcx
   1400168ad:	call   0x140016d20
   1400168b2:	mov    r8d,eax
   1400168b5:	test   eax,eax
   1400168b7:	jne    0x1400168c0
   1400168b9:	add    rsp,0x38
   1400168bd:	pop    rbp
   1400168be:	pop    rbx
   1400168bf:	ret    
   1400168c0:	dec    eax
   1400168c2:	mov    QWORD PTR [rsp+0x50],rsi
   1400168c7:	mov    QWORD PTR [rsp+0x30],rdi
   1400168cc:	cmp    eax,0x8
   1400168cf:	ja     0x140016cb2
   1400168d5:	lea    rdx,[rip+0xfffffffffffe9724]        # 0x140000000
   1400168dc:	cdqe   
   1400168de:	mov    ecx,DWORD PTR [rdx+rax*4+0x16cdc]
   1400168e5:	add    rcx,rdx
   1400168e8:	jmp    rcx
   1400168ea:	mov    rcx,rbp
   1400168ed:	call   0x1400117f0
   1400168f2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400168f7:	mov    al,0x1
   1400168f9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400168fe:	add    rsp,0x38
   140016902:	pop    rbp
   140016903:	pop    rbx
   140016904:	ret    
   140016905:	mov    rcx,QWORD PTR [rbx+0x8]
   140016909:	mov    eax,DWORD PTR [rcx+0x20]
   14001690c:	sub    eax,DWORD PTR [rcx+0x10]
   14001690f:	cmp    eax,0x1
   140016912:	jae    0x140016931
   140016914:	mov    rcx,QWORD PTR [rbx]
   140016917:	test   rcx,rcx
   14001691a:	je     0x140016cc6
   140016920:	lea    rdx,[rip+0x20361]        # 0x140036c88
   140016927:	call   0x14001aae0
   14001692c:	jmp    0x140016cc6
   140016931:	call   0x140015d20
   140016936:	test   al,al
   140016938:	mov    rcx,rbp
   14001693b:	setne  dl
   14001693e:	call   0x140011470
   140016943:	mov    rsi,QWORD PTR [rsp+0x50]
   140016948:	mov    al,0x1
   14001694a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001694f:	add    rsp,0x38
   140016953:	pop    rbp
   140016954:	pop    rbx
   140016955:	ret    
   140016956:	mov    rcx,QWORD PTR [rbx+0x8]
   14001695a:	mov    eax,DWORD PTR [rcx+0x20]
   14001695d:	sub    eax,DWORD PTR [rcx+0x10]
   140016960:	cmp    eax,0x8
   140016963:	jb     0x140016914
   140016965:	call   0x140015b30
   14001696a:	mov    rdx,rax
   14001696d:	mov    rcx,rbp
   140016970:	call   0x140011530
   140016975:	mov    rsi,QWORD PTR [rsp+0x50]
   14001697a:	mov    al,0x1
   14001697c:	mov    rdi,QWORD PTR [rsp+0x30]
   140016981:	add    rsp,0x38
   140016985:	pop    rbp
   140016986:	pop    rbx
   140016987:	ret    
   140016988:	mov    rcx,QWORD PTR [rbx+0x8]
   14001698c:	mov    eax,DWORD PTR [rcx+0x20]
   14001698f:	sub    eax,DWORD PTR [rcx+0x10]
   140016992:	cmp    eax,0x8
   140016995:	jb     0x140016914
   14001699b:	call   0x140015d70
   1400169a0:	mov    rdx,rax
   1400169a3:	mov    rcx,rbp
   1400169a6:	call   0x140011800
   1400169ab:	mov    rsi,QWORD PTR [rsp+0x50]
   1400169b0:	mov    al,0x1
   1400169b2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400169b7:	add    rsp,0x38
   1400169bb:	pop    rbp
   1400169bc:	pop    rbx
   1400169bd:	ret    
   1400169be:	mov    rcx,QWORD PTR [rbx+0x8]
   1400169c2:	mov    eax,DWORD PTR [rcx+0x20]
   1400169c5:	sub    eax,DWORD PTR [rcx+0x10]
   1400169c8:	cmp    eax,0x8
   1400169cb:	jb     0x140016914
   1400169d1:	call   0x140015a50
   1400169d6:	movaps xmm1,xmm0
   1400169d9:	mov    rcx,rbp
   1400169dc:	call   0x1400114a0
   1400169e1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400169e6:	mov    al,0x1
   1400169e8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400169ed:	add    rsp,0x38
   1400169f1:	pop    rbp
   1400169f2:	pop    rbx
   1400169f3:	ret    
   1400169f4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400169f8:	mov    eax,DWORD PTR [rcx+0x20]
   1400169fb:	sub    eax,DWORD PTR [rcx+0x10]
   1400169fe:	cmp    eax,0x4
   140016a01:	jb     0x140016914
   140016a07:	call   0x140015c00
   140016a0c:	cmp    BYTE PTR [rbx+0x24],0x0
   140016a10:	je     0x140016a69
   140016a12:	test   eax,eax
   140016a14:	js     0x140016a44
   140016a16:	cmp    eax,DWORD PTR [rbx+0x20]
   140016a19:	jge    0x140016a44
   140016a1b:	movsxd rcx,eax
   140016a1e:	mov    rax,QWORD PTR [rbx+0x10]
   140016a22:	mov    rdi,QWORD PTR [rax+rcx*8]
   140016a26:	mov    rcx,rbp
   140016a29:	mov    rdx,rdi
   140016a2c:	call   0x14000f7b0
   140016a31:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a36:	mov    al,0x1
   140016a38:	mov    rdi,QWORD PTR [rsp+0x30]
   140016a3d:	add    rsp,0x38
   140016a41:	pop    rbp
   140016a42:	pop    rbx
   140016a43:	ret    
   140016a44:	lea    rdi,[rip+0x1bd55]        # 0x1400327a0
   140016a4b:	mov    rcx,rbp
   140016a4e:	mov    rdx,rdi
   140016a51:	call   0x14000f7b0
   140016a56:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a5b:	mov    al,0x1
   140016a5d:	mov    rdi,QWORD PTR [rsp+0x30]
   140016a62:	add    rsp,0x38
   140016a66:	pop    rbp
   140016a67:	pop    rbx
   140016a68:	ret    
   140016a69:	test   eax,eax
   140016a6b:	js     0x140016a9b
   140016a6d:	cmp    eax,DWORD PTR [rbx+0x20]
   140016a70:	jge    0x140016a9b
   140016a72:	movsxd rcx,eax
   140016a75:	mov    rax,QWORD PTR [rbx+0x10]
   140016a79:	mov    rdi,QWORD PTR [rax+rcx*8]
   140016a7d:	mov    rcx,rbp
   140016a80:	mov    rdx,rdi
   140016a83:	call   0x1400116c0
   140016a88:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a8d:	mov    al,0x1
   140016a8f:	mov    rdi,QWORD PTR [rsp+0x30]
   140016a94:	add    rsp,0x38
   140016a98:	pop    rbp
   140016a99:	pop    rbx
   140016a9a:	ret    
   140016a9b:	lea    rdi,[rip+0x1bcfe]        # 0x1400327a0
   140016aa2:	mov    rcx,rbp
   140016aa5:	mov    rdx,rdi
   140016aa8:	call   0x1400116c0
   140016aad:	mov    rsi,QWORD PTR [rsp+0x50]
   140016ab2:	mov    al,0x1
   140016ab4:	mov    rdi,QWORD PTR [rsp+0x30]
   140016ab9:	add    rsp,0x38
   140016abd:	pop    rbp
   140016abe:	pop    rbx
   140016abf:	ret    
   140016ac0:	mov    rcx,QWORD PTR [rbx+0x8]
   140016ac4:	mov    eax,DWORD PTR [rcx+0x20]
   140016ac7:	sub    eax,DWORD PTR [rcx+0x10]
   140016aca:	cmp    eax,0x4
   140016acd:	jb     0x140016914
   140016ad3:	call   0x140015c00
   140016ad8:	mov    r9,QWORD PTR [rbx+0x8]
   140016adc:	mov    edi,eax
   140016ade:	mov    ecx,DWORD PTR [r9+0x20]
   140016ae2:	sub    ecx,DWORD PTR [r9+0x10]
   140016ae6:	cmp    ecx,eax
   140016ae8:	jl     0x140016914
   140016aee:	mov    eax,DWORD PTR [r9+0x10]
   140016af2:	mov    r8d,edi
   140016af5:	sub    eax,DWORD PTR [r9+0x24]
   140016af9:	mov    edx,0x1
   140016afe:	movsxd rsi,eax
   140016b01:	mov    rcx,r9
   140016b04:	add    rsi,QWORD PTR [r9]
   140016b07:	call   0x140021ee0
   140016b0c:	cmp    BYTE PTR [rbx+0x24],0x0
   140016b10:	mov    r8d,edi
   140016b13:	mov    rdx,rsi
   140016b16:	mov    rcx,rbp
   140016b19:	je     0x140016b33
   140016b1b:	call   0x14000f740
   140016b20:	mov    rsi,QWORD PTR [rsp+0x50]
   140016b25:	mov    al,0x1
   140016b27:	mov    rdi,QWORD PTR [rsp+0x30]
   140016b2c:	add    rsp,0x38
   140016b30:	pop    rbp
   140016b31:	pop    rbx
   140016b32:	ret    
   140016b33:	call   0x140011790
   140016b38:	mov    rsi,QWORD PTR [rsp+0x50]
   140016b3d:	mov    al,0x1
   140016b3f:	mov    rdi,QWORD PTR [rsp+0x30]
   140016b44:	add    rsp,0x38
   140016b48:	pop    rbp
   140016b49:	pop    rbx
   140016b4a:	ret    
   140016b4b:	mov    rcx,QWORD PTR [rbx+0x8]
   140016b4f:	mov    eax,DWORD PTR [rcx+0x20]
   140016b52:	sub    eax,DWORD PTR [rcx+0x10]
   140016b55:	cmp    eax,0x4
   140016b58:	jb     0x140016914
   140016b5e:	call   0x140015c00
   140016b63:	mov    rcx,rbp
   140016b66:	mov    DWORD PTR [rsp+0x60],eax
   140016b6a:	mov    edi,eax
   140016b6c:	call   0x1400117e0
   140016b71:	xor    esi,esi
   140016b73:	test   edi,edi
   140016b75:	jle    0x140016c9f
   140016b7b:	lea    rdi,[rip+0x1bc1e]        # 0x1400327a0
   140016b82:	mov    rcx,QWORD PTR [rbx+0x8]
   140016b86:	mov    eax,DWORD PTR [rcx+0x20]
   140016b89:	sub    eax,DWORD PTR [rcx+0x10]
   140016b8c:	cmp    eax,0x4
   140016b8f:	jb     0x140016914
   140016b95:	call   0x140015c00
   140016b9a:	cmp    BYTE PTR [rbx+0x24],0x0
   140016b9e:	movsxd r8,eax
   140016ba1:	je     0x140016be0
   140016ba3:	test   eax,eax
   140016ba5:	js     0x140016bbc
   140016ba7:	cmp    r8d,DWORD PTR [rbx+0x20]
   140016bab:	jge    0x140016bbc
   140016bad:	mov    rax,QWORD PTR [rbx+0x10]
   140016bb1:	mov    rax,QWORD PTR [rax+r8*8]
   140016bb5:	mov    QWORD PTR [rsp+0x28],rax
   140016bba:	jmp    0x140016bc1
   140016bbc:	mov    QWORD PTR [rsp+0x28],rdi
   140016bc1:	lea    rdx,[rsp+0x68]
   140016bc6:	mov    rcx,rbx
   140016bc9:	call   0x140016e10
   140016bce:	mov    rdx,QWORD PTR [rsp+0x28]
   140016bd3:	mov    rcx,rbp
   140016bd6:	mov    r8d,DWORD PTR [rax]
   140016bd9:	call   0x14000f8b0
   140016bde:	jmp    0x140016c1b
   140016be0:	test   eax,eax
   140016be2:	js     0x140016bf9
   140016be4:	cmp    r8d,DWORD PTR [rbx+0x20]
   140016be8:	jge    0x140016bf9
   140016bea:	mov    rax,QWORD PTR [rbx+0x10]
   140016bee:	mov    rax,QWORD PTR [rax+r8*8]
   140016bf2:	mov    QWORD PTR [rsp+0x28],rax
   140016bf7:	jmp    0x140016bfe
   140016bf9:	mov    QWORD PTR [rsp+0x28],rdi
   140016bfe:	lea    rdx,[rsp+0x20]
   140016c03:	mov    rcx,rbx
   140016c06:	call   0x140016e10
   140016c0b:	mov    rdx,QWORD PTR [rsp+0x28]
   140016c10:	mov    rcx,rbp
   140016c13:	mov    r8d,DWORD PTR [rax]
   140016c16:	call   0x14000e270
   140016c1b:	mov    rdx,rax
   140016c1e:	mov    rcx,rbx
   140016c21:	call   0x1400168a0
   140016c26:	test   al,al
   140016c28:	je     0x140016cc6
   140016c2e:	inc    esi
   140016c30:	cmp    esi,DWORD PTR [rsp+0x60]
   140016c34:	jl     0x140016b82
   140016c3a:	mov    rsi,QWORD PTR [rsp+0x50]
   140016c3f:	mov    al,0x1
   140016c41:	mov    rdi,QWORD PTR [rsp+0x30]
   140016c46:	add    rsp,0x38
   140016c4a:	pop    rbp
   140016c4b:	pop    rbx
   140016c4c:	ret    
   140016c4d:	mov    rcx,QWORD PTR [rbx+0x8]
   140016c51:	mov    eax,DWORD PTR [rcx+0x20]
   140016c54:	sub    eax,DWORD PTR [rcx+0x10]
   140016c57:	cmp    eax,0x4
   140016c5a:	jb     0x140016914
   140016c60:	call   0x140015c00
   140016c65:	mov    edx,eax
   140016c67:	mov    rcx,rbp
   140016c6a:	mov    edi,eax
   140016c6c:	call   0x140011400
   140016c71:	xor    esi,esi
   140016c73:	test   edi,edi
   140016c75:	jle    0x140016c9f
   140016c77:	nop    WORD PTR [rax+rax*1+0x0]
   140016c80:	mov    edx,esi
   140016c82:	mov    rcx,rbp
   140016c85:	call   0x14000e9b0
   140016c8a:	mov    rdx,rax
   140016c8d:	mov    rcx,rbx
   140016c90:	call   0x1400168a0
   140016c95:	test   al,al
   140016c97:	je     0x140016cc6
   140016c99:	inc    esi
   140016c9b:	cmp    esi,edi
   140016c9d:	jl     0x140016c80
   140016c9f:	mov    rsi,QWORD PTR [rsp+0x50]
   140016ca4:	mov    al,0x1
   140016ca6:	mov    rdi,QWORD PTR [rsp+0x30]
   140016cab:	add    rsp,0x38
   140016caf:	pop    rbp
   140016cb0:	pop    rbx
   140016cb1:	ret    
   140016cb2:	mov    rcx,QWORD PTR [rbx]
   140016cb5:	test   rcx,rcx
   140016cb8:	je     0x140016cc6
   140016cba:	lea    rdx,[rip+0x1ffdf]        # 0x140036ca0
   140016cc1:	call   0x14001ae50
   140016cc6:	mov    rsi,QWORD PTR [rsp+0x50]
   140016ccb:	xor    al,al
   140016ccd:	mov    rdi,QWORD PTR [rsp+0x30]
   140016cd2:	add    rsp,0x38
   140016cd6:	pop    rbp
   140016cd7:	pop    rbx
   140016cd8:	ret    
   140016cd9:	nop    DWORD PTR [rax]
   140016cdc:	(bad)  
   140016cdd:	push   0x69050001
   140016ce2:	add    DWORD PTR [rax],eax
   140016ce4:	push   rsi
   140016ce5:	imul   eax,DWORD PTR [rcx],0x1698800
   140016ceb:	add    BYTE PTR [rsi-0xbfffe97],bh
   140016cf1:	imul   eax,DWORD PTR [rcx],0x16ac000
   140016cf7:	add    BYTE PTR [rbp+0x6c],cl
   140016cfa:	add    DWORD PTR [rax],eax
   140016cfc:	rex.WXB imul rax,QWORD PTR [r9],0x0
   140016d00:	cmp    edx,0x4
   140016d03:	jae    0x140016d08
   140016d05:	xor    al,al
   140016d07:	ret    
   140016d08:	cmp    DWORD PTR [rcx],0x3564b56
   140016d0e:	sete   al
   140016d11:	ret    
   140016d12:	int3   
   140016d13:	int3   
   140016d14:	int3   
   140016d15:	int3   
   140016d16:	int3   
   140016d17:	int3   
   140016d18:	int3   
   140016d19:	int3   
   140016d1a:	int3   
   140016d1b:	int3   
   140016d1c:	int3   
   140016d1d:	int3   
   140016d1e:	int3   
   140016d1f:	int3   
   140016d20:	mov    QWORD PTR [rsp+0x10],rbx
   140016d25:	mov    QWORD PTR [rsp+0x18],rbp
   140016d2a:	push   rsi
   140016d2b:	sub    rsp,0x20
   140016d2f:	mov    rbx,QWORD PTR [rcx+0x8]
   140016d33:	mov    rbp,rdx
   140016d36:	mov    rsi,rcx
   140016d39:	mov    eax,DWORD PTR [rbx+0x20]
   140016d3c:	sub    eax,DWORD PTR [rbx+0x10]
   140016d3f:	cmp    eax,0x1
   140016d42:	jge    0x140016d6a
   140016d44:	mov    rcx,QWORD PTR [rcx]
   140016d47:	test   rcx,rcx
   140016d4a:	je     0x140016d58
   140016d4c:	lea    rdx,[rip+0x1ff35]        # 0x140036c88
   140016d53:	call   0x14001aae0
   140016d58:	xor    eax,eax
   140016d5a:	mov    rbx,QWORD PTR [rsp+0x38]
   140016d5f:	mov    rbp,QWORD PTR [rsp+0x40]
   140016d64:	add    rsp,0x20
   140016d68:	pop    rsi
   140016d69:	ret    
   140016d6a:	test   BYTE PTR [rbx+0x19],0x1
   140016d6e:	mov    rcx,rbx
   140016d71:	mov    QWORD PTR [rsp+0x30],rdi
   140016d76:	jne    0x140016da5
   140016d78:	mov    edx,0x1
   140016d7d:	call   0x140020b70
   140016d82:	test   al,al
   140016d84:	je     0x140016da0
   140016d86:	mov    edx,DWORD PTR [rbx+0x10]
   140016d89:	mov    eax,edx
   140016d8b:	sub    eax,DWORD PTR [rbx+0x24]
   140016d8e:	movsxd rcx,eax
   140016d91:	mov    rax,QWORD PTR [rbx]
   140016d94:	movzx  edi,BYTE PTR [rcx+rax*1]
   140016d98:	lea    eax,[rdx+0x1]
   140016d9b:	mov    DWORD PTR [rbx+0x10],eax
   140016d9e:	jmp    0x140016dad
   140016da0:	xor    dil,dil
   140016da3:	jmp    0x140016dec
   140016da5:	call   0x140015f60
   140016daa:	movzx  edi,ax
   140016dad:	test   dil,dil
   140016db0:	jns    0x140016dec
   140016db2:	mov    rax,QWORD PTR [rsi+0x8]
   140016db6:	mov    ecx,DWORD PTR [rax+0x20]
   140016db9:	sub    ecx,DWORD PTR [rax+0x10]
   140016dbc:	cmp    ecx,0x1
   140016dbf:	jge    0x140016dd9
   140016dc1:	mov    rcx,QWORD PTR [rsi]
   140016dc4:	test   rcx,rcx
   140016dc7:	je     0x140016dd5
   140016dc9:	lea    rdx,[rip+0x1feb8]        # 0x140036c88
   140016dd0:	call   0x14001aae0
   140016dd5:	xor    eax,eax
   140016dd7:	jmp    0x140016df4
   140016dd9:	mov    rcx,rax
   140016ddc:	call   0x140015d20
   140016de1:	movzx  edx,al
   140016de4:	mov    rcx,rbp
   140016de7:	call   0x1400113e0
   140016dec:	movzx  eax,dil
   140016df0:	btr    eax,0x7
   140016df4:	mov    rdi,QWORD PTR [rsp+0x30]
   140016df9:	mov    rbx,QWORD PTR [rsp+0x38]
   140016dfe:	mov    rbp,QWORD PTR [rsp+0x40]
   140016e03:	add    rsp,0x20
   140016e07:	pop    rsi
   140016e08:	ret    
   140016e09:	int3   
   140016e0a:	int3   
   140016e0b:	int3   
   140016e0c:	int3   
   140016e0d:	int3   
   140016e0e:	int3   
   140016e0f:	int3   
   140016e10:	mov    QWORD PTR [rsp+0x18],rbx
   140016e15:	mov    QWORD PTR [rsp+0x20],rsi
   140016e1a:	push   rdi
   140016e1b:	sub    rsp,0x20
   140016e1f:	mov    rdi,rdx
   140016e22:	mov    rsi,rcx
   140016e25:	test   r8d,r8d
   140016e28:	js     0x140016ebb
   140016e2e:	cmp    r8d,DWORD PTR [rcx+0x20]
   140016e32:	jge    0x140016ebb
   140016e38:	mov    rax,QWORD PTR [rcx+0x18]
   140016e3c:	mov    QWORD PTR [rsp+0x30],rbp
   140016e41:	movsxd rbp,r8d
   140016e44:	mov    QWORD PTR [rsp+0x38],r14
   140016e49:	lea    r14,[rbp*4+0x0]
   140016e51:	mov    ebx,DWORD PTR [r14+rax*1]
   140016e55:	test   ebx,ebx
   140016e57:	jne    0x140016e9c
   140016e59:	mov    rax,QWORD PTR [rcx+0x10]
   140016e5d:	mov    rbp,QWORD PTR [rax+rbp*8]
   140016e61:	test   rbp,rbp
   140016e64:	je     0x140016e94
   140016e66:	cmp    BYTE PTR [rbp+0x0],bl
   140016e69:	je     0x140016e94
   140016e6b:	mov    edx,0x31415926
   140016e70:	mov    rcx,rbp
   140016e73:	call   0x140022790
   140016e78:	cmp    BYTE PTR [rip+0x313e9],0x0        # 0x140048268
   140016e7f:	mov    ebx,eax
   140016e81:	je     0x140016e94
   140016e83:	mov    r9b,0x1
   140016e86:	xor    r8d,r8d
   140016e89:	mov    rdx,rbp
   140016e8c:	mov    ecx,eax
   140016e8e:	call   QWORD PTR [rip+0x1b72c]        # 0x1400325c0
   140016e94:	mov    rax,QWORD PTR [rsi+0x18]
   140016e98:	mov    DWORD PTR [r14+rax*1],ebx
   140016e9c:	mov    r14,QWORD PTR [rsp+0x38]
   140016ea1:	mov    rax,rdi
   140016ea4:	mov    rbp,QWORD PTR [rsp+0x30]
   140016ea9:	mov    DWORD PTR [rdi],ebx
   140016eab:	mov    rbx,QWORD PTR [rsp+0x40]
   140016eb0:	mov    rsi,QWORD PTR [rsp+0x48]
   140016eb5:	add    rsp,0x20
   140016eb9:	pop    rdi
   140016eba:	ret    
   140016ebb:	mov    rsi,QWORD PTR [rsp+0x48]
   140016ec0:	xor    ebx,ebx
   140016ec2:	mov    DWORD PTR [rdx],ebx
   140016ec4:	mov    rax,rdi
   140016ec7:	mov    rbx,QWORD PTR [rsp+0x40]
   140016ecc:	add    rsp,0x20
   140016ed0:	pop    rdi
   140016ed1:	ret    
   140016ed2:	int3   
   140016ed3:	int3   
   140016ed4:	int3   
   140016ed5:	int3   
   140016ed6:	int3   
   140016ed7:	int3   
   140016ed8:	int3   
   140016ed9:	int3   
   140016eda:	int3   
   140016edb:	int3   
   140016edc:	int3   
   140016edd:	int3   
   140016ede:	int3   
   140016edf:	int3   
   140016ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140016ee5:	push   rdi
   140016ee6:	sub    rsp,0x20
   140016eea:	mov    rbx,rcx
   140016eed:	call   0x140017e60
   140016ef2:	xor    edi,edi
   140016ef4:	test   DWORD PTR [rbx+0x14],0xc0000000
   140016efb:	jne    0x140016f46
   140016efd:	mov    rdx,QWORD PTR [rbx+0x8]
   140016f01:	test   rdx,rdx
   140016f04:	je     0x140016f1a
   140016f06:	mov    rax,QWORD PTR [rip+0x1b483]        # 0x140032390
   140016f0d:	mov    rcx,QWORD PTR [rax]
   140016f10:	mov    rax,QWORD PTR [rcx]
   140016f13:	call   QWORD PTR [rax+0x28]
   140016f16:	mov    QWORD PTR [rbx+0x8],rdi
   140016f1a:	mov    DWORD PTR [rbx+0x10],edi
   140016f1d:	test   DWORD PTR [rbx+0x14],0xc0000000
   140016f24:	jne    0x140016f46
   140016f26:	mov    rdx,QWORD PTR [rbx+0x8]
   140016f2a:	test   rdx,rdx
   140016f2d:	je     0x140016f43
   140016f2f:	mov    rax,QWORD PTR [rip+0x1b45a]        # 0x140032390
   140016f36:	mov    rcx,QWORD PTR [rax]
   140016f39:	mov    rax,QWORD PTR [rcx]
   140016f3c:	call   QWORD PTR [rax+0x28]
   140016f3f:	mov    QWORD PTR [rbx+0x8],rdi
   140016f43:	mov    DWORD PTR [rbx+0x10],edi
   140016f46:	mov    rbx,QWORD PTR [rsp+0x30]
   140016f4b:	add    rsp,0x20
   140016f4f:	pop    rdi
   140016f50:	ret    
   140016f51:	int3   
   140016f52:	int3   
   140016f53:	int3   
   140016f54:	int3   
   140016f55:	int3   
   140016f56:	int3   
   140016f57:	int3   
   140016f58:	int3   
   140016f59:	int3   
   140016f5a:	int3   
   140016f5b:	int3   
   140016f5c:	int3   
   140016f5d:	int3   
   140016f5e:	int3   
   140016f5f:	int3   
   140016f60:	mov    QWORD PTR [rsp+0x8],rbx
   140016f65:	push   rdi
   140016f66:	sub    rsp,0x70
   140016f6a:	mov    rdi,rcx
   140016f6d:	lea    rcx,[rsp+0x48]
   140016f72:	call   0x140022c10
   140016f77:	lea    rbx,[rdi+0x8]
   140016f7b:	mov    rcx,rbx
   140016f7e:	lea    rdx,[rsp+0x48]
   140016f83:	call   0x140022fc0
   140016f88:	test   al,al
   140016f8a:	jne    0x140016fb0
   140016f8c:	lea    rdx,[rip+0x1feb5]        # 0x140036e48
   140016f93:	mov    rcx,rdi
   140016f96:	call   0x140017ee0
   140016f9b:	xor    bl,bl
   140016f9d:	jmp    0x14001709f
   140016fa2:	nop    DWORD PTR [rax+0x0]
   140016fa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016fb0:	xor    r9d,r9d
   140016fb3:	lea    r8,[rip+0x1fc0e]        # 0x140036bc8
   140016fba:	xor    edx,edx
   140016fbc:	mov    rcx,rbx
   140016fbf:	call   0x140023680
   140016fc4:	mov    rcx,rbx
   140016fc7:	test   al,al
   140016fc9:	je     0x14001700a
   140016fcb:	xor    r8d,r8d
   140016fce:	lea    rdx,[rip+0x1fbf3]        # 0x140036bc8
   140016fd5:	call   0x140022f20
   140016fda:	test   al,al
   140016fdc:	je     0x140016ff4
   140016fde:	xor    r8d,r8d
   140016fe1:	lea    rdx,[rip+0x1f788]        # 0x140036770
   140016fe8:	mov    rcx,rbx
   140016feb:	call   0x140022f20
   140016ff0:	test   al,al
   140016ff2:	jne    0x140016fb0
   140016ff4:	lea    rdx,[rip+0x1fe6d]        # 0x140036e68
   140016ffb:	mov    rcx,rdi
   140016ffe:	call   0x140017ee0
   140017003:	xor    bl,bl
   140017005:	jmp    0x14001709f
   14001700a:	xor    r9d,r9d
   14001700d:	lea    r8,[rip+0x1fe60]        # 0x140036e74
   140017014:	xor    edx,edx
   140017016:	call   0x140023680
   14001701b:	test   al,al
   14001701d:	je     0x140017083
   14001701f:	lea    rcx,[rsp+0x20]
   140017024:	call   0x140022c10
   140017029:	xor    r8d,r8d
   14001702c:	lea    rdx,[rip+0x1fe41]        # 0x140036e74
   140017033:	mov    rcx,rbx
   140017036:	call   0x140022f20
   14001703b:	test   al,al
   14001703d:	je     0x1400170ba
   14001703f:	lea    rdx,[rsp+0x20]
   140017044:	mov    rcx,rbx
   140017047:	call   0x140022e80
   14001704c:	test   al,al
   14001704e:	je     0x1400170ba
   140017050:	xor    r8d,r8d
   140017053:	lea    rdx,[rip+0x1fe1e]        # 0x140036e78
   14001705a:	mov    rcx,rbx
   14001705d:	call   0x140022f20
   140017062:	test   al,al
   140017064:	je     0x1400170ba
   140017066:	lea    rcx,[rsp+0x20]
   14001706b:	call   0x1400235a0
   140017070:	test   al,al
   140017072:	je     0x1400170ba
   140017074:	lea    rcx,[rsp+0x20]
   140017079:	call   0x140022d40
   14001707e:	jmp    0x140016fb0
   140017083:	xor    r8d,r8d
   140017086:	lea    rdx,[rip+0x1fe0b]        # 0x140036e98
   14001708d:	mov    rcx,rbx
   140017090:	call   0x140022f20
   140017095:	test   al,al
   140017097:	jne    0x140016fb0
   14001709d:	mov    bl,0x1
   14001709f:	lea    rcx,[rsp+0x48]
   1400170a4:	call   0x140022d40
   1400170a9:	movzx  eax,bl
   1400170ac:	mov    rbx,QWORD PTR [rsp+0x80]
   1400170b4:	add    rsp,0x70
   1400170b8:	pop    rdi
   1400170b9:	ret    
   1400170ba:	lea    rdx,[rip+0x1fdbf]        # 0x140036e80
   1400170c1:	mov    rcx,rdi
   1400170c4:	call   0x140017ee0
   1400170c9:	lea    rcx,[rsp+0x20]
   1400170ce:	call   0x140022d40
   1400170d3:	xor    bl,bl
   1400170d5:	jmp    0x14001709f
   1400170d7:	int3   
   1400170d8:	int3   
   1400170d9:	int3   
   1400170da:	int3   
   1400170db:	int3   
   1400170dc:	int3   
   1400170dd:	int3   
   1400170de:	int3   
   1400170df:	int3   
   1400170e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400170e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400170ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400170ef:	push   rdi
   1400170f0:	sub    rsp,0x340
   1400170f7:	mov    rbx,r8
   1400170fa:	mov    rdi,rdx
   1400170fd:	mov    rsi,rcx
   140017100:	lea    r8,[rip+0x1f75d]        # 0x140036864
   140017107:	mov    rdx,rbx
   14001710a:	lea    rcx,[rsp+0x28]
   14001710f:	mov    rbp,r9
   140017112:	call   0x140022c30
   140017117:	xor    eax,eax
   140017119:	lea    rdx,[rip+0x1fc88]        # 0x140036da8
   140017120:	lea    rcx,[rsp+0x28]
   140017125:	mov    DWORD PTR [rsp+0x300],eax
   14001712c:	mov    QWORD PTR [rsp+0x308],rax
   140017134:	mov    QWORD PTR [rsp+0x310],rax
   14001713c:	mov    DWORD PTR [rsp+0x318],eax
   140017143:	mov    QWORD PTR [rsp+0x320],rax
   14001714b:	mov    QWORD PTR [rsp+0x328],rax
   140017153:	call   0x140024030
   140017158:	lea    rcx,[rsp+0x20]
   14001715d:	mov    BYTE PTR [rsp+0x2e0],0x1
   140017165:	mov    QWORD PTR [rsp+0x2e8],rsi
   14001716d:	mov    QWORD PTR [rsp+0x2f0],rdi
   140017175:	mov    QWORD PTR [rsp+0x2f8],rbx
   14001717d:	mov    BYTE PTR [rsp+0x20],0x1
   140017182:	call   0x140017220
   140017187:	test   al,al
   140017189:	jne    0x14001718f
   14001718b:	xor    bl,bl
   14001718d:	jmp    0x1400171a7
   14001718f:	mov    r9,rdi
   140017192:	lea    rdx,[rip+0x2ee9f]        # 0x140046038
   140017199:	mov    r8,rbp
   14001719c:	mov    rcx,rsi
   14001719f:	call   0x140018480
   1400171a4:	movzx  ebx,al
   1400171a7:	lea    rcx,[rsp+0x318]
   1400171af:	call   0x140014430
   1400171b4:	lea    rcx,[rsp+0x300]
   1400171bc:	call   0x140016ee0
   1400171c1:	lea    rcx,[rsp+0x2c0]
   1400171c9:	call   0x140014430
   1400171ce:	cmp    QWORD PTR [rsp+0x2b8],0x0
   1400171d7:	je     0x1400171e6
   1400171d9:	lea    rcx,[rsp+0x2b8]
   1400171e1:	call   0x14001b030
   1400171e6:	lea    rcx,[rsp+0x288]
   1400171ee:	call   0x140022d40
   1400171f3:	lea    rcx,[rsp+0x130]
   1400171fb:	call   0x1400144b0
   140017200:	lea    r11,[rsp+0x340]
   140017208:	movzx  eax,bl
   14001720b:	mov    rbx,QWORD PTR [r11+0x10]
   14001720f:	mov    rbp,QWORD PTR [r11+0x18]
   140017213:	mov    rsi,QWORD PTR [r11+0x20]
   140017217:	mov    rsp,r11
   14001721a:	pop    rdi
   14001721b:	ret    
   14001721c:	int3   
   14001721d:	int3   
   14001721e:	int3   
   14001721f:	int3   
   140017220:	rex push rbx
   140017222:	push   r14
   140017224:	sub    rsp,0x28
   140017228:	mov    rbx,rcx
   14001722b:	add    rcx,0x8
   14001722f:	call   0x140023fb0
   140017234:	mov    rcx,rbx
   140017237:	call   0x140017500
   14001723c:	mov    rcx,rbx
   14001723f:	test   al,al
   140017241:	jne    0x140017259
   140017243:	lea    rdx,[rip+0x1f65e]        # 0x1400368a8
   14001724a:	call   0x140017ee0
   14001724f:	xor    al,al
   140017251:	add    rsp,0x28
   140017255:	pop    r14
   140017257:	pop    rbx
   140017258:	ret    
   140017259:	mov    rdx,QWORD PTR [rbx+0x2c8]
   140017260:	xor    r8d,r8d
   140017263:	call   0x140017970
   140017268:	test   al,al
   14001726a:	je     0x14001724f
   14001726c:	mov    QWORD PTR [rsp+0x40],rbp
   140017271:	lea    rcx,[rbx+0x8]
   140017275:	mov    QWORD PTR [rsp+0x48],rsi
   14001727a:	mov    QWORD PTR [rsp+0x50],rdi
   14001727f:	mov    QWORD PTR [rsp+0x20],r15
   140017284:	call   0x140022db0
   140017289:	test   al,al
   14001728b:	je     0x140017369
   140017291:	lea    rcx,[rbx+0x8]
   140017295:	call   0x140022db0
   14001729a:	test   al,al
   14001729c:	je     0x140017369
   1400172a2:	xor    r15d,r15d
   1400172a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400172b0:	movsxd rdi,DWORD PTR [rbx+0x2e0]
   1400172b7:	cmp    edi,DWORD PTR [rbx+0x2f0]
   1400172bd:	jne    0x1400172d0
   1400172bf:	lea    rcx,[rbx+0x2e8]
   1400172c6:	mov    edx,0x1
   1400172cb:	call   0x140009a40
   1400172d0:	inc    DWORD PTR [rbx+0x2e0]
   1400172d6:	lea    rcx,[rdi+rdi*2]
   1400172da:	lea    rdx,[rcx*8+0x0]
   1400172e2:	mov    rcx,QWORD PTR [rbx+0x2e8]
   1400172e9:	add    rcx,rdx
   1400172ec:	je     0x1400172f9
   1400172ee:	mov    QWORD PTR [rcx],r15
   1400172f1:	mov    QWORD PTR [rcx+0x8],r15
   1400172f5:	mov    BYTE PTR [rcx+0x10],r15b
   1400172f9:	mov    rbp,QWORD PTR [rbx+0x2e8]
   140017300:	mov    r8d,r15d
   140017303:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001730a:	add    rbp,rdx
   14001730d:	mov    rdx,QWORD PTR [rip+0x2edb4]        # 0x1400460c8
   140017314:	call   0x14000e270
   140017319:	mov    rcx,rax
   14001731c:	mov    rsi,rax
   14001731f:	call   0x14000ea00
   140017324:	mov    rcx,rsi
   140017327:	mov    edi,eax
   140017329:	lea    edx,[rax+0x1]
   14001732c:	call   0x140011400
   140017331:	mov    edx,edi
   140017333:	mov    rcx,rsi
   140017336:	call   0x14000e9b0
   14001733b:	mov    r8,rbp
   14001733e:	mov    rdx,rax
   140017341:	mov    rcx,rbx
   140017344:	mov    rdi,rax
   140017347:	call   0x140017970
   14001734c:	test   al,al
   14001734e:	je     0x14001736e
   140017350:	lea    rcx,[rbx+0x8]
   140017354:	mov    QWORD PTR [rbp+0x8],rdi
   140017358:	mov    BYTE PTR [rbp+0x10],r15b
   14001735c:	call   0x140022db0
   140017361:	test   al,al
   140017363:	jne    0x1400172b0
   140017369:	cmp    BYTE PTR [rbx],0x0
   14001736c:	jne    0x140017372
   14001736e:	xor    al,al
   140017370:	jmp    0x14001737a
   140017372:	mov    rcx,rbx
   140017375:	call   0x140018040
   14001737a:	mov    rdi,QWORD PTR [rsp+0x50]
   14001737f:	mov    rsi,QWORD PTR [rsp+0x48]
   140017384:	mov    rbp,QWORD PTR [rsp+0x40]
   140017389:	mov    r15,QWORD PTR [rsp+0x20]
   14001738e:	add    rsp,0x28
   140017392:	pop    r14
   140017394:	pop    rbx
   140017395:	ret    
   140017396:	int3   
   140017397:	int3   
   140017398:	int3   
   140017399:	int3   
   14001739a:	int3   
   14001739b:	int3   
   14001739c:	int3   
   14001739d:	int3   
   14001739e:	int3   
   14001739f:	int3   
   1400173a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400173a5:	push   rbp
   1400173a6:	push   rdi
   1400173a7:	push   r15
   1400173a9:	sub    rsp,0x130
   1400173b0:	mov    r15,rdx
   1400173b3:	mov    rbp,rcx
   1400173b6:	lea    rdx,[rip+0x1f80b]        # 0x140036bc8
   1400173bd:	add    rcx,0x8
   1400173c1:	xor    r8d,r8d
   1400173c4:	call   0x140022f20
   1400173c9:	test   al,al
   1400173cb:	je     0x1400173d6
   1400173cd:	lea    rdi,[rip+0x1f39c]        # 0x140036770
   1400173d4:	jmp    0x1400173f8
   1400173d6:	xor    r8d,r8d
   1400173d9:	lea    rdx,[rip+0x1fa94]        # 0x140036e74
   1400173e0:	lea    rcx,[rbp+0x8]
   1400173e4:	call   0x140022f20
   1400173e9:	test   al,al
   1400173eb:	je     0x1400174ec
   1400173f1:	lea    rdi,[rip+0x1fa80]        # 0x140036e78
   1400173f8:	mov    QWORD PTR [rsp+0x150],rsi
   140017400:	xor    edx,edx
   140017402:	mov    rcx,r15
   140017405:	mov    QWORD PTR [rsp+0x158],r14
   14001740d:	call   0x140011400
   140017412:	xor    r8d,r8d
   140017415:	lea    rcx,[rbp+0x8]
   140017419:	mov    rdx,rdi
   14001741c:	xor    esi,esi
   14001741e:	call   0x140022f20
   140017423:	test   al,al
   140017425:	jne    0x140017499
   140017427:	nop    WORD PTR [rax+rax*1+0x0]
   140017430:	lea    edx,[rsi+0x1]
   140017433:	mov    rcx,r15
   140017436:	call   0x140011400
   14001743b:	mov    edx,esi
   14001743d:	mov    rcx,r15
   140017440:	call   0x14000e9b0
   140017445:	mov    rdx,rax
   140017448:	mov    rcx,rbp
   14001744b:	call   0x140017cf0
   140017450:	test   al,al
   140017452:	je     0x1400174e3
   140017458:	xor    r8d,r8d
   14001745b:	lea    rdx,[rip+0x1f31a]        # 0x14003677c
   140017462:	lea    rcx,[rbp+0x8]
   140017466:	call   0x140022f20
   14001746b:	test   al,al
   14001746d:	jne    0x140017484
   14001746f:	xor    r9d,r9d
   140017472:	lea    rcx,[rbp+0x8]
   140017476:	mov    r8,rdi
   140017479:	xor    edx,edx
   14001747b:	call   0x140023680
   140017480:	test   al,al
   140017482:	je     0x14001749d
   140017484:	xor    r8d,r8d
   140017487:	lea    rcx,[rbp+0x8]
   14001748b:	mov    rdx,rdi
   14001748e:	inc    esi
   140017490:	call   0x140022f20
   140017495:	test   al,al
   140017497:	je     0x140017430
   140017499:	mov    al,0x1
   14001749b:	jmp    0x1400174bf
   14001749d:	mov    r8,rdi
   1400174a0:	lea    rdx,[rip+0x1f741]        # 0x140036be8
   1400174a7:	lea    rcx,[rsp+0x20]
   1400174ac:	call   0x140001600
   1400174b1:	lea    rdx,[rax+0x9]
   1400174b5:	mov    rcx,rbp
   1400174b8:	call   0x140017ee0
   1400174bd:	xor    al,al
   1400174bf:	mov    rsi,QWORD PTR [rsp+0x150]
   1400174c7:	mov    r14,QWORD PTR [rsp+0x158]
   1400174cf:	mov    rbx,QWORD PTR [rsp+0x160]
   1400174d7:	add    rsp,0x130
   1400174de:	pop    r15
   1400174e0:	pop    rdi
   1400174e1:	pop    rbp
   1400174e2:	ret    
   1400174e3:	lea    rdx,[rip+0x1f6e6]        # 0x140036bd0
   1400174ea:	jmp    0x1400174b5
   1400174ec:	lea    rdx,[rip+0x1f9b5]        # 0x140036ea8
   1400174f3:	mov    rcx,rbp
   1400174f6:	call   0x140017ee0
   1400174fb:	xor    al,al
   1400174fd:	jmp    0x1400174cf
   1400174ff:	int3   
   140017500:	mov    QWORD PTR [rsp+0x8],rbx
   140017505:	push   rdi
   140017506:	sub    rsp,0xe0
   14001750d:	lea    rbx,[rcx+0x8]
   140017511:	mov    rdi,rcx
   140017514:	mov    rcx,rbx
   140017517:	lea    rdx,[rip+0x1f39a]        # 0x1400368b8
   14001751e:	xor    r8d,r8d
   140017521:	call   0x140022f20
   140017526:	test   al,al
   140017528:	je     0x140017757
   14001752e:	xor    r8d,r8d
   140017531:	lea    rdx,[rip+0x1f8a4]        # 0x140036ddc
   140017538:	mov    rcx,rbx
   14001753b:	call   0x140022f20
   140017540:	test   al,al
   140017542:	je     0x140017757
   140017548:	lea    rcx,[rsp+0xb8]
   140017550:	call   0x140022c10
   140017555:	lea    rcx,[rsp+0x90]
   14001755d:	call   0x140022c10
   140017562:	lea    rdx,[rsp+0xb8]
   14001756a:	mov    rcx,rbx
   14001756d:	call   0x140022fc0
   140017572:	test   al,al
   140017574:	je     0x140017727
   14001757a:	xor    r8d,r8d
   14001757d:	lea    rdx,[rip+0x1f444]        # 0x1400369c8
   140017584:	mov    rcx,rbx
   140017587:	call   0x140022f20
   14001758c:	test   al,al
   14001758e:	je     0x140017727
   140017594:	lea    rdx,[rsp+0x90]
   14001759c:	mov    rcx,rbx
   14001759f:	call   0x140022e80
   1400175a4:	test   al,al
   1400175a6:	je     0x140017727
   1400175ac:	xor    r8d,r8d
   1400175af:	lea    rdx,[rip+0x1f1d2]        # 0x140036788
   1400175b6:	mov    rcx,rbx
   1400175b9:	call   0x140022f20
   1400175be:	test   al,al
   1400175c0:	je     0x140017727
   1400175c6:	lea    rcx,[rsp+0x68]
   1400175cb:	call   0x140022c10
   1400175d0:	lea    rcx,[rsp+0x40]
   1400175d5:	call   0x140022c10
   1400175da:	lea    rdx,[rsp+0x68]
   1400175df:	mov    rcx,rbx
   1400175e2:	call   0x140022fc0
   1400175e7:	test   al,al
   1400175e9:	je     0x14001770f
   1400175ef:	xor    r8d,r8d
   1400175f2:	lea    rdx,[rip+0x1f3cf]        # 0x1400369c8
   1400175f9:	mov    rcx,rbx
   1400175fc:	call   0x140022f20
   140017601:	test   al,al
   140017603:	je     0x14001770f
   140017609:	lea    rdx,[rsp+0x40]
   14001760e:	mov    rcx,rbx
   140017611:	call   0x140022e80
   140017616:	test   al,al
   140017618:	je     0x14001770f
   14001761e:	xor    r8d,r8d
   140017621:	lea    rdx,[rip+0x1f160]        # 0x140036788
   140017628:	mov    rcx,rbx
   14001762b:	call   0x140022f20
   140017630:	test   al,al
   140017632:	je     0x14001770f
   140017638:	lea    rcx,[rsp+0x90]
   140017640:	call   0x140022dc0
   140017645:	mov    rdx,rax
   140017648:	lea    rcx,[rsp+0x30]
   14001764d:	call   QWORD PTR [rip+0x1ac15]        # 0x140032268
   140017653:	test   al,al
   140017655:	je     0x14001770f
   14001765b:	lea    rcx,[rsp+0x40]
   140017660:	call   0x140022dc0
   140017665:	mov    rdx,rax
   140017668:	lea    rcx,[rsp+0x20]
   14001766d:	call   QWORD PTR [rip+0x1abf5]        # 0x140032268
   140017673:	test   al,al
   140017675:	je     0x14001770f
   14001767b:	xor    r8d,r8d
   14001767e:	lea    rdx,[rip+0x1f407]        # 0x140036a8c
   140017685:	mov    rcx,rbx
   140017688:	call   0x140022f20
   14001768d:	test   al,al
   14001768f:	je     0x14001770f
   140017691:	lea    rcx,[rsp+0x68]
   140017696:	call   0x140022dc0
   14001769b:	mov    rcx,rax
   14001769e:	lea    rdx,[rip+0x1c763]        # 0x140033e08
   1400176a5:	call   QWORD PTR [rip+0x1aeb5]        # 0x140032560
   1400176ab:	test   eax,eax
   1400176ad:	jne    0x1400176cb
   1400176af:	mov    rax,QWORD PTR [rsp+0x20]
   1400176b4:	cmp    rax,QWORD PTR [rip+0x1f6dd]        # 0x140036d98
   1400176bb:	jne    0x14001770f
   1400176bd:	mov    rax,QWORD PTR [rsp+0x28]
   1400176c2:	cmp    rax,QWORD PTR [rip+0x1f6d7]        # 0x140036da0
   1400176c9:	jne    0x14001770f
   1400176cb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400176d0:	cmp    rcx,QWORD PTR [rip+0x1f6a1]        # 0x140036d78
   1400176d7:	mov    rax,QWORD PTR [rsp+0x38]
   1400176dc:	jne    0x1400176f2
   1400176de:	cmp    rax,QWORD PTR [rip+0x1f69b]        # 0x140036d80
   1400176e5:	jne    0x1400176f2
   1400176e7:	mov    BYTE PTR [rdi+0x2c0],0x0
   1400176ee:	mov    bl,0x1
   1400176f0:	jmp    0x140017711
   1400176f2:	cmp    rcx,QWORD PTR [rip+0x1f68f]        # 0x140036d88
   1400176f9:	jne    0x14001770f
   1400176fb:	cmp    rax,QWORD PTR [rip+0x1f68e]        # 0x140036d90
   140017702:	jne    0x14001770f
   140017704:	mov    BYTE PTR [rdi+0x2c0],0x1
   14001770b:	mov    bl,0x1
   14001770d:	jmp    0x140017711
   14001770f:	xor    bl,bl
   140017711:	lea    rcx,[rsp+0x40]
   140017716:	call   0x140022d40
   14001771b:	lea    rcx,[rsp+0x68]
   140017720:	call   0x140022d40
   140017725:	jmp    0x140017729
   140017727:	xor    bl,bl
   140017729:	lea    rcx,[rsp+0x90]
   140017731:	call   0x140022d40
   140017736:	lea    rcx,[rsp+0xb8]
   14001773e:	call   0x140022d40
   140017743:	movzx  eax,bl
   140017746:	mov    rbx,QWORD PTR [rsp+0xf0]
   14001774e:	add    rsp,0xe0
   140017755:	pop    rdi
   140017756:	ret    
   140017757:	xor    al,al
   140017759:	mov    rbx,QWORD PTR [rsp+0xf0]
   140017761:	add    rsp,0xe0
   140017768:	pop    rdi
   140017769:	ret    
   14001776a:	int3   
   14001776b:	int3   
   14001776c:	int3   
   14001776d:	int3   
   14001776e:	int3   
   14001776f:	int3   
   140017770:	mov    QWORD PTR [rsp+0x10],rbx
   140017775:	push   rdi
   140017776:	sub    rsp,0x160
   14001777d:	mov    rdi,rcx
   140017780:	mov    rbx,rdx
   140017783:	lea    rcx,[rsp+0x20]
   140017788:	call   0x140022c10
   14001778d:	lea    rcx,[rdi+0x8]
   140017791:	lea    rdx,[rsp+0x20]
   140017796:	call   0x140022e80
   14001779b:	test   al,al
   14001779d:	jne    0x1400177b3
   14001779f:	lea    rdx,[rip+0x1f46a]        # 0x140036c10
   1400177a6:	mov    rcx,rdi
   1400177a9:	call   0x140017ee0
   1400177ae:	jmp    0x14001794e
   1400177b3:	test   rbx,rbx
   1400177b6:	je     0x140017915
   1400177bc:	lea    rcx,[rsp+0x20]
   1400177c1:	call   0x140023360
   1400177c6:	lea    rcx,[rsp+0x20]
   1400177cb:	test   al,al
   1400177cd:	je     0x140017832
   1400177cf:	xor    r8d,r8d
   1400177d2:	lea    rdx,[rip+0x1ec33]        # 0x14003640c
   1400177d9:	call   0x140023450
   1400177de:	test   al,al
   1400177e0:	je     0x1400177f3
   1400177e2:	mov    dl,0x1
   1400177e4:	mov    rcx,rbx
   1400177e7:	call   0x140011470
   1400177ec:	mov    bl,0x1
   1400177ee:	jmp    0x140017950
   1400177f3:	xor    r8d,r8d
   1400177f6:	lea    rdx,[rip+0x1ec17]        # 0x140036414
   1400177fd:	lea    rcx,[rsp+0x20]
   140017802:	call   0x140023450
   140017807:	test   al,al
   140017809:	je     0x14001781c
   14001780b:	xor    edx,edx
   14001780d:	mov    rcx,rbx
   140017810:	call   0x140011470
   140017815:	mov    bl,0x1
   140017817:	jmp    0x140017950
   14001781c:	lea    rdx,[rip+0x1f41d]        # 0x140036c40
   140017823:	mov    rcx,rdi
   140017826:	call   0x140017ee0
   14001782b:	mov    bl,0x1
   14001782d:	jmp    0x140017950
   140017832:	mov    dl,0x1
   140017834:	call   0x140023510
   140017839:	lea    rcx,[rsp+0x20]
   14001783e:	test   al,al
   140017840:	je     0x140017859
   140017842:	call   0x140022dc0
   140017847:	mov    rdx,rax
   14001784a:	mov    rcx,rbx
   14001784d:	call   0x1400116c0
   140017852:	mov    bl,0x1
   140017854:	jmp    0x140017950
   140017859:	call   0x1400235a0
   14001785e:	lea    rcx,[rsp+0x20]
   140017863:	test   al,al
   140017865:	je     0x140017886
   140017867:	call   0x140022dc0
   14001786c:	mov    rcx,rax
   14001786f:	call   QWORD PTR [rip+0x1aa23]        # 0x140032298
   140017875:	mov    edx,eax
   140017877:	mov    rcx,rbx
   14001787a:	call   0x140011560
   14001787f:	mov    bl,0x1
   140017881:	jmp    0x140017950
   140017886:	call   0x1400234c0
   14001788b:	lea    rcx,[rsp+0x20]
   140017890:	test   al,al
   140017892:	je     0x1400178b4
   140017894:	call   0x140022dc0
   140017899:	mov    rcx,rax
   14001789c:	call   QWORD PTR [rip+0x1a9de]        # 0x140032280
   1400178a2:	movaps xmm1,xmm0
   1400178a5:	mov    rcx,rbx
   1400178a8:	call   0x1400114a0
   1400178ad:	mov    bl,0x1
   1400178af:	jmp    0x140017950
   1400178b4:	call   0x140023620
   1400178b9:	lea    rcx,[rsp+0x20]
   1400178be:	test   al,al
   1400178c0:	je     0x140017919
   1400178c2:	lea    rdx,[rsp+0x170]
   1400178ca:	mov    QWORD PTR [rsp+0x170],0x0
   1400178d6:	call   0x140022e50
   1400178db:	lea    rcx,[rsp+0x170]
   1400178e3:	call   0x14001b050
   1400178e8:	mov    rdx,rax
   1400178eb:	mov    rcx,rbx
   1400178ee:	call   0x1400116c0
   1400178f3:	lea    rcx,[rsp+0x20]
   1400178f8:	call   0x1400235f0
   1400178fd:	cmp    QWORD PTR [rsp+0x170],0x0
   140017906:	je     0x140017915
   140017908:	lea    rcx,[rsp+0x170]
   140017910:	call   0x14001b030
   140017915:	mov    bl,0x1
   140017917:	jmp    0x140017950
   140017919:	call   0x140022dc0
   14001791e:	lea    rcx,[rsp+0x20]
   140017923:	mov    rbx,rax
   140017926:	call   0x140023250
   14001792b:	mov    r8d,eax
   14001792e:	lea    rdx,[rip+0x1f5bb]        # 0x140036ef0
   140017935:	mov    r9,rbx
   140017938:	lea    rcx,[rsp+0x48]
   14001793d:	call   0x140001600
   140017942:	mov    rcx,rdi
   140017945:	lea    rdx,[rax+0x9]
   140017949:	call   0x140017fe0
   14001794e:	xor    bl,bl
   140017950:	lea    rcx,[rsp+0x20]
   140017955:	call   0x140022d40
   14001795a:	movzx  eax,bl
   14001795d:	mov    rbx,QWORD PTR [rsp+0x178]
   140017965:	add    rsp,0x160
   14001796c:	pop    rdi
   14001796d:	ret    
   14001796e:	int3   
   14001796f:	int3   
   140017970:	mov    QWORD PTR [rsp+0x8],rbx
   140017975:	mov    QWORD PTR [rsp+0x10],rsi
   14001797a:	mov    QWORD PTR [rsp+0x18],rdi
   14001797f:	mov    QWORD PTR [rsp+0x20],r14
   140017984:	push   rbp
   140017985:	lea    rbp,[rsp-0xb0]
   14001798d:	sub    rsp,0x1b0
   140017994:	mov    rbx,rcx
   140017997:	mov    rsi,r8
   14001799a:	lea    rcx,[rsp+0x70]
   14001799f:	mov    r14,rdx
   1400179a2:	call   0x140022c10
   1400179a7:	lea    rcx,[rsp+0x48]
   1400179ac:	call   0x140022c10
   1400179b1:	lea    rdx,[rsp+0x70]
   1400179b6:	lea    rcx,[rbx+0x8]
   1400179ba:	call   0x140022fc0
   1400179bf:	test   al,al
   1400179c1:	je     0x1400179d1
   1400179c3:	lea    rdx,[rsp+0x48]
   1400179c8:	lea    rcx,[rbx+0x8]
   1400179cc:	call   0x140022fc0
   1400179d1:	xor    r8d,r8d
   1400179d4:	lea    rdx,[rip+0x1efed]        # 0x1400369c8
   1400179db:	lea    rcx,[rbx+0x8]
   1400179df:	call   0x140022f20
   1400179e4:	test   al,al
   1400179e6:	jne    0x1400179fe
   1400179e8:	lea    rdx,[rip+0x1f111]        # 0x140036b00
   1400179ef:	mov    rcx,rbx
   1400179f2:	call   0x140017ee0
   1400179f7:	xor    bl,bl
   1400179f9:	jmp    0x140017b4e
   1400179fe:	mov    rcx,r14
   140017a01:	call   0x1400117e0
   140017a06:	lea    rcx,[rsp+0x70]
   140017a0b:	call   0x140023660
   140017a10:	test   al,al
   140017a12:	je     0x140017a33
   140017a14:	lea    rcx,[rsp+0x70]
   140017a19:	call   0x140022dc0
   140017a1e:	mov    r8,rax
   140017a21:	lea    rdx,[rip+0x1ee24]        # 0x14003684c
   140017a28:	xor    r9d,r9d
   140017a2b:	mov    rcx,r14
   140017a2e:	call   0x140011650
   140017a33:	test   rsi,rsi
   140017a36:	je     0x140017a4d
   140017a38:	lea    rcx,[rsp+0x48]
   140017a3d:	call   0x140022dc0
   140017a42:	mov    rdx,rax
   140017a45:	mov    rcx,rsi
   140017a48:	call   0x14001aae0
   140017a4d:	lea    rcx,[rsp+0x48]
   140017a52:	call   0x140023660
   140017a57:	test   al,al
   140017a59:	je     0x140017a7a
   140017a5b:	lea    rcx,[rsp+0x48]
   140017a60:	call   0x140022dc0
   140017a65:	mov    r8,rax
   140017a68:	lea    rdx,[rip+0x1f379]        # 0x140036de8
   140017a6f:	xor    r9d,r9d
   140017a72:	mov    rcx,r14
   140017a75:	call   0x140011650
   140017a7a:	xor    r9d,r9d
   140017a7d:	lea    r8,[rip+0x1ed04]        # 0x140036788
   140017a84:	xor    edx,edx
   140017a86:	lea    rcx,[rbx+0x8]
   140017a8a:	call   0x140023680
   140017a8f:	test   al,al
   140017a91:	jne    0x140017b39
   140017a97:	cmp    BYTE PTR [rbx+0x2c0],0x0
   140017a9e:	je     0x140017ab0
   140017aa0:	mov    rcx,rbx
   140017aa3:	call   0x140016f60
   140017aa8:	test   al,al
   140017aaa:	je     0x140017bdc
   140017ab0:	lea    rcx,[rsp+0x20]
   140017ab5:	call   0x140022c10
   140017aba:	lea    rdx,[rsp+0x20]
   140017abf:	lea    rcx,[rbx+0x8]
   140017ac3:	call   0x140022fc0
   140017ac8:	test   al,al
   140017aca:	je     0x140017bb6
   140017ad0:	xor    r8d,r8d
   140017ad3:	lea    rdx,[rip+0x1f072]        # 0x140036b4c
   140017ada:	lea    rcx,[rbx+0x8]
   140017ade:	call   0x140022f20
   140017ae3:	lea    rcx,[rsp+0x20]
   140017ae8:	test   al,al
   140017aea:	je     0x140017b9c
   140017af0:	call   0x140022dc0
   140017af5:	xor    r8d,r8d
   140017af8:	mov    rdx,rax
   140017afb:	mov    rcx,r14
   140017afe:	call   0x140011690
   140017b03:	mov    rdx,rax
   140017b06:	mov    rcx,rbx
   140017b09:	call   0x140017cf0
   140017b0e:	lea    rcx,[rsp+0x20]
   140017b13:	test   al,al
   140017b15:	je     0x140017b82
   140017b17:	call   0x140022d40
   140017b1c:	xor    r9d,r9d
   140017b1f:	lea    r8,[rip+0x1ec62]        # 0x140036788
   140017b26:	xor    edx,edx
   140017b28:	lea    rcx,[rbx+0x8]
   140017b2c:	call   0x140023680
   140017b31:	test   al,al
   140017b33:	je     0x140017a97
   140017b39:	xor    r8d,r8d
   140017b3c:	lea    rdx,[rip+0x1ec45]        # 0x140036788
   140017b43:	lea    rcx,[rbx+0x8]
   140017b47:	call   0x140022f20
   140017b4c:	mov    bl,0x1
   140017b4e:	lea    rcx,[rsp+0x48]
   140017b53:	call   0x140022d40
   140017b58:	lea    rcx,[rsp+0x70]
   140017b5d:	call   0x140022d40
   140017b62:	lea    r11,[rsp+0x1b0]
   140017b6a:	movzx  eax,bl
   140017b6d:	mov    rbx,QWORD PTR [r11+0x10]
   140017b71:	mov    rsi,QWORD PTR [r11+0x18]
   140017b75:	mov    rdi,QWORD PTR [r11+0x20]
   140017b79:	mov    r14,QWORD PTR [r11+0x28]
   140017b7d:	mov    rsp,r11
   140017b80:	pop    rbp
   140017b81:	ret    
   140017b82:	call   0x140022dc0
   140017b87:	mov    r8,rax
   140017b8a:	lea    rdx,[rip+0x1efe7]        # 0x140036b78
   140017b91:	lea    rcx,[rbp-0x68]
   140017b95:	call   0x140001600
   140017b9a:	jmp    0x140017bc6
   140017b9c:	call   0x140022dc0
   140017ba1:	mov    r8,rax
   140017ba4:	lea    rdx,[rip+0x1f27d]        # 0x140036e28
   140017bab:	lea    rcx,[rbp-0x68]
   140017baf:	call   0x140001600
   140017bb4:	jmp    0x140017bc6
   140017bb6:	lea    rdx,[rip+0x1f243]        # 0x140036e00
   140017bbd:	lea    rcx,[rbp-0x68]
   140017bc1:	call   0x140001600
   140017bc6:	lea    rdx,[rax+0x9]
   140017bca:	mov    rcx,rbx
   140017bcd:	call   0x140017ee0
   140017bd2:	lea    rcx,[rsp+0x20]
   140017bd7:	call   0x140022d40
   140017bdc:	xor    bl,bl
   140017bde:	jmp    0x140017b4e
   140017be3:	int3   
   140017be4:	int3   
   140017be5:	int3   
   140017be6:	int3   
   140017be7:	int3   
   140017be8:	int3   
   140017be9:	int3   
   140017bea:	int3   
   140017beb:	int3   
   140017bec:	int3   
   140017bed:	int3   
   140017bee:	int3   
   140017bef:	int3   
   140017bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140017bf5:	mov    QWORD PTR [rsp+0x10],rsi
   140017bfa:	push   rdi
   140017bfb:	sub    rsp,0x50
   140017bff:	mov    rbx,rcx
   140017c02:	mov    rdi,rdx
   140017c05:	lea    rcx,[rsp+0x20]
   140017c0a:	call   0x140022c10
   140017c0f:	xor    r8d,r8d
   140017c12:	lea    rdx,[rip+0x1f287]        # 0x140036ea0
   140017c19:	lea    rcx,[rbx+0x8]
   140017c1d:	call   0x140022f20
   140017c22:	test   al,al
   140017c24:	je     0x140017c35
   140017c26:	mov    rcx,rdi
   140017c29:	call   0x1400117f0
   140017c2e:	mov    bl,0x1
   140017c30:	jmp    0x140017cc7
   140017c35:	lea    rdx,[rsp+0x20]
   140017c3a:	lea    rcx,[rbx+0x8]
   140017c3e:	call   0x140022fc0
   140017c43:	test   al,al
   140017c45:	je     0x140017cb6
   140017c47:	mov    rcx,rdi
   140017c4a:	call   0x1400117f0
   140017c4f:	movsxd rsi,DWORD PTR [rbx+0x2f8]
   140017c56:	cmp    esi,DWORD PTR [rbx+0x308]
   140017c5c:	jne    0x140017c6f
   140017c5e:	lea    rcx,[rbx+0x300]
   140017c65:	mov    edx,0x1
   140017c6a:	call   0x140023260
   140017c6f:	inc    DWORD PTR [rbx+0x2f8]
   140017c75:	mov    rcx,rsi
   140017c78:	mov    rdx,QWORD PTR [rbx+0x300]
   140017c7f:	shl    rcx,0x4
   140017c83:	add    rdx,rcx
   140017c86:	je     0x140017c8f
   140017c88:	mov    QWORD PTR [rdx],0x0
   140017c8f:	mov    rbx,QWORD PTR [rbx+0x300]
   140017c96:	add    rbx,rcx
   140017c99:	lea    rcx,[rsp+0x20]
   140017c9e:	call   0x140022dc0
   140017ca3:	mov    rdx,rax
   140017ca6:	mov    rcx,rbx
   140017ca9:	call   0x14001aae0
   140017cae:	mov    QWORD PTR [rbx+0x8],rdi
   140017cb2:	mov    bl,0x1
   140017cb4:	jmp    0x140017cc7
   140017cb6:	lea    rdx,[rip+0x1f203]        # 0x140036ec0
   140017cbd:	mov    rcx,rbx
   140017cc0:	call   0x140017ee0
   140017cc5:	xor    bl,bl
   140017cc7:	lea    rcx,[rsp+0x20]
   140017ccc:	call   0x140022d40
   140017cd1:	mov    rsi,QWORD PTR [rsp+0x68]
   140017cd6:	movzx  eax,bl
   140017cd9:	mov    rbx,QWORD PTR [rsp+0x60]
   140017cde:	add    rsp,0x50
   140017ce2:	pop    rdi
   140017ce3:	ret    
   140017ce4:	int3   
   140017ce5:	int3   
   140017ce6:	int3   
   140017ce7:	int3   
   140017ce8:	int3   
   140017ce9:	int3   
   140017cea:	int3   
   140017ceb:	int3   
   140017cec:	int3   
   140017ced:	int3   
   140017cee:	int3   
   140017cef:	int3   
   140017cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140017cf5:	mov    QWORD PTR [rsp+0x10],rsi
   140017cfa:	push   rdi
   140017cfb:	sub    rsp,0x20
   140017cff:	mov    rsi,rdx
   140017d02:	lea    r8,[rip+0x1eebf]        # 0x140036bc8
   140017d09:	mov    rdi,rcx
   140017d0c:	xor    edx,edx
   140017d0e:	add    rcx,0x8
   140017d12:	xor    r9d,r9d
   140017d15:	call   0x140023680
   140017d1a:	test   al,al
   140017d1c:	jne    0x140017e3d
   140017d22:	xor    r9d,r9d
   140017d25:	lea    r8,[rip+0x1f148]        # 0x140036e74
   140017d2c:	xor    edx,edx
   140017d2e:	lea    rcx,[rdi+0x8]
   140017d32:	call   0x140023680
   140017d37:	test   al,al
   140017d39:	jne    0x140017e3d
   140017d3f:	xor    r8d,r8d
   140017d42:	lea    rdx,[rip+0x1f153]        # 0x140036e9c
   140017d49:	lea    rcx,[rdi+0x8]
   140017d4d:	call   0x140022f20
   140017d52:	test   al,al
   140017d54:	jne    0x140017e23
   140017d5a:	xor    r9d,r9d
   140017d5d:	lea    r8,[rip+0x1f13c]        # 0x140036ea0
   140017d64:	xor    edx,edx
   140017d66:	lea    rcx,[rdi+0x8]
   140017d6a:	call   0x140023680
   140017d6f:	test   al,al
   140017d71:	jne    0x140017e23
   140017d77:	xor    edx,edx
   140017d79:	lea    rcx,[rdi+0x8]
   140017d7d:	call   0x1400236e0
   140017d82:	test   al,al
   140017d84:	je     0x140017dd9
   140017d86:	xor    r9d,r9d
   140017d89:	lea    r8,[rip+0x1ec38]        # 0x1400369c8
   140017d90:	lea    rcx,[rdi+0x8]
   140017d94:	lea    edx,[r9+0x1]
   140017d98:	call   0x140023680
   140017d9d:	test   al,al
   140017d9f:	jne    0x140017dbc
   140017da1:	xor    r9d,r9d
   140017da4:	lea    r8,[rip+0x1ec1d]        # 0x1400369c8
   140017dab:	lea    rcx,[rdi+0x8]
   140017daf:	lea    edx,[r9+0x2]
   140017db3:	call   0x140023680
   140017db8:	test   al,al
   140017dba:	je     0x140017dd9
   140017dbc:	xor    r8d,r8d
   140017dbf:	mov    rdx,rsi
   140017dc2:	mov    rcx,rdi
   140017dc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140017dca:	mov    rsi,QWORD PTR [rsp+0x38]
   140017dcf:	add    rsp,0x20
   140017dd3:	pop    rdi
   140017dd4:	jmp    0x140017970
   140017dd9:	xor    r9d,r9d
   140017ddc:	lea    r8,[rip+0x1ebe5]        # 0x1400369c8
   140017de3:	xor    edx,edx
   140017de5:	lea    rcx,[rdi+0x8]
   140017de9:	call   0x140023680
   140017dee:	mov    rdx,rsi
   140017df1:	mov    rcx,rdi
   140017df4:	test   al,al
   140017df6:	je     0x140017e0f
   140017df8:	xor    r8d,r8d
   140017dfb:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e00:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e05:	add    rsp,0x20
   140017e09:	pop    rdi
   140017e0a:	jmp    0x140017970
   140017e0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e14:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e19:	add    rsp,0x20
   140017e1d:	pop    rdi
   140017e1e:	jmp    0x140017770
   140017e23:	mov    rdx,rsi
   140017e26:	mov    rcx,rdi
   140017e29:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e2e:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e33:	add    rsp,0x20
   140017e37:	pop    rdi
   140017e38:	jmp    0x140017bf0
   140017e3d:	mov    rdx,rsi
   140017e40:	mov    rcx,rdi
   140017e43:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e48:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e4d:	add    rsp,0x20
   140017e51:	pop    rdi
   140017e52:	jmp    0x1400173a0
   140017e57:	int3   
   140017e58:	int3   
   140017e59:	int3   
   140017e5a:	int3   
   140017e5b:	int3   
   140017e5c:	int3   
   140017e5d:	int3   
   140017e5e:	int3   
   140017e5f:	int3   
   140017e60:	mov    QWORD PTR [rsp+0x10],rbx
   140017e65:	push   rsi
   140017e66:	sub    rsp,0x20
   140017e6a:	mov    eax,DWORD PTR [rcx]
   140017e6c:	mov    rsi,rcx
   140017e6f:	sub    eax,0x1
   140017e72:	movsxd rbx,eax
   140017e75:	js     0x140017ec2
   140017e77:	mov    QWORD PTR [rsp+0x30],rdi
   140017e7c:	lea    rdi,[rbx+rbx*2]
   140017e80:	shl    rdi,0x3
   140017e84:	nop    DWORD PTR [rax+0x0]
   140017e88:	nop    DWORD PTR [rax+rax*1+0x0]
   140017e90:	mov    rcx,QWORD PTR [rsi+0x8]
   140017e94:	add    rcx,rdi
   140017e97:	cmp    QWORD PTR [rcx],0x0
   140017e9b:	je     0x140017ea2
   140017e9d:	call   0x14001b030
   140017ea2:	sub    rdi,0x18
   140017ea6:	sub    rbx,0x1
   140017eaa:	jns    0x140017e90
   140017eac:	mov    DWORD PTR [rsi],0x0
   140017eb2:	mov    rdi,QWORD PTR [rsp+0x30]
   140017eb7:	mov    rbx,QWORD PTR [rsp+0x38]
   140017ebc:	add    rsp,0x20
   140017ec0:	pop    rsi
   140017ec1:	ret    
   140017ec2:	mov    DWORD PTR [rcx],0x0
   140017ec8:	mov    rbx,QWORD PTR [rsp+0x38]
   140017ecd:	add    rsp,0x20
   140017ed1:	pop    rsi
   140017ed2:	ret    
   140017ed3:	int3   
   140017ed4:	int3   
   140017ed5:	int3   
   140017ed6:	int3   
   140017ed7:	int3   
   140017ed8:	int3   
   140017ed9:	int3   
   140017eda:	int3   
   140017edb:	int3   
   140017edc:	int3   
   140017edd:	int3   
   140017ede:	int3   
   140017edf:	int3   
   140017ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140017ee5:	mov    QWORD PTR [rsp+0x10],rbp
   140017eea:	mov    QWORD PTR [rsp+0x18],rsi
   140017eef:	push   rdi
   140017ef0:	sub    rsp,0x170
   140017ef7:	mov    rdi,rcx
   140017efa:	mov    rbp,rdx
   140017efd:	lea    rcx,[rsp+0x30]
   140017f02:	call   0x140022c10
   140017f07:	lea    r8,[rsp+0x30]
   140017f0c:	xor    edx,edx
   140017f0e:	lea    rcx,[rdi+0x8]
   140017f12:	call   0x140023780
   140017f17:	test   al,al
   140017f19:	je     0x140017f4f
   140017f1b:	lea    rcx,[rsp+0x30]
   140017f20:	call   0x140022dc0
   140017f25:	lea    rcx,[rdi+0x8]
   140017f29:	mov    rbx,rax
   140017f2c:	call   0x140023230
   140017f31:	mov    r8d,eax
   140017f34:	mov    QWORD PTR [rsp+0x20],rbp
   140017f39:	mov    r9,rbx
   140017f3c:	lea    rdx,[rip+0x1e93d]        # 0x140036880
   140017f43:	lea    rcx,[rsp+0x58]
   140017f48:	call   0x140001600
   140017f4d:	jmp    0x140017f6f
   140017f4f:	lea    rcx,[rdi+0x8]
   140017f53:	call   0x140023230
   140017f58:	mov    r8d,eax
   140017f5b:	lea    rdx,[rip+0x1e936]        # 0x140036898
   140017f62:	mov    r9,rbp
   140017f65:	lea    rcx,[rsp+0x58]
   140017f6a:	call   0x140001600
   140017f6f:	lea    rdx,[rax+0x9]
   140017f73:	mov    BYTE PTR [rdi],0x0
   140017f76:	lea    rcx,[rip+0x1ee43]        # 0x140036dc0
   140017f7d:	mov    rbx,rax
   140017f80:	call   QWORD PTR [rip+0x1a432]        # 0x1400323b8
   140017f86:	mov    rcx,QWORD PTR [rdi+0x2d0]
   140017f8d:	test   rcx,rcx
   140017f90:	je     0x140017fae
   140017f92:	lea    rdx,[rbx+0x9]
   140017f96:	call   0x14001ac10
   140017f9b:	mov    rcx,QWORD PTR [rdi+0x2d0]
   140017fa2:	lea    rdx,[rip+0x1c38f]        # 0x140034338
   140017fa9:	call   0x14001ac10
   140017fae:	lea    rcx,[rsp+0x30]
   140017fb3:	call   0x140022d40
   140017fb8:	lea    r11,[rsp+0x170]
   140017fc0:	mov    rbx,QWORD PTR [r11+0x10]
   140017fc4:	mov    rbp,QWORD PTR [r11+0x18]
   140017fc8:	mov    rsi,QWORD PTR [r11+0x20]
   140017fcc:	mov    rsp,r11
   140017fcf:	pop    rdi
   140017fd0:	ret    
   140017fd1:	int3   
   140017fd2:	int3   
   140017fd3:	int3   
   140017fd4:	int3   
   140017fd5:	int3   
   140017fd6:	int3   
   140017fd7:	int3   
   140017fd8:	int3   
   140017fd9:	int3   
   140017fda:	int3   
   140017fdb:	int3   
   140017fdc:	int3   
   140017fdd:	int3   
   140017fde:	int3   
   140017fdf:	int3   
   140017fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140017fe5:	push   rdi
   140017fe6:	sub    rsp,0x20
   140017fea:	mov    rbx,rcx
   140017fed:	mov    BYTE PTR [rcx],0x0
   140017ff0:	lea    rcx,[rip+0x1edc9]        # 0x140036dc0
   140017ff7:	mov    rdi,rdx
   140017ffa:	call   QWORD PTR [rip+0x1a3b8]        # 0x1400323b8
   140018000:	mov    rcx,QWORD PTR [rbx+0x2d0]
   140018007:	test   rcx,rcx
   14001800a:	je     0x140018027
   14001800c:	mov    rdx,rdi
   14001800f:	call   0x14001ac10
   140018014:	mov    rcx,QWORD PTR [rbx+0x2d0]
   14001801b:	lea    rdx,[rip+0x1c316]        # 0x140034338
   140018022:	call   0x14001ac10
   140018027:	mov    rbx,QWORD PTR [rsp+0x30]
   14001802c:	add    rsp,0x20
   140018030:	pop    rdi
   140018031:	ret    
   140018032:	int3   
   140018033:	int3   
   140018034:	int3   
   140018035:	int3   
   140018036:	int3   
   140018037:	int3   
   140018038:	int3   
   140018039:	int3   
   14001803a:	int3   
   14001803b:	int3   
   14001803c:	int3   
   14001803d:	int3   
   14001803e:	int3   
   14001803f:	int3   
   140018040:	mov    QWORD PTR [rsp+0x8],rbx
   140018045:	mov    QWORD PTR [rsp+0x10],rbp
   14001804a:	mov    QWORD PTR [rsp+0x18],rsi
   14001804f:	push   rdi
   140018050:	push   r12
   140018052:	push   r13
   140018054:	push   r14
   140018056:	push   r15
   140018058:	sub    rsp,0x130
   14001805f:	movsxd r13,DWORD PTR [rcx+0x2f8]
   140018066:	xor    r15d,r15d
   140018069:	mov    rsi,rcx
   14001806c:	test   r13,r13
   14001806f:	jle    0x1400180f0
   140018071:	xor    r12d,r12d
   140018074:	mov    r14,QWORD PTR [rsi+0x300]
   14001807b:	xor    ebx,ebx
   14001807d:	add    r14,r12
   140018080:	cmp    DWORD PTR [rsi+0x2e0],ebx
   140018086:	jle    0x1400180c3
   140018088:	xor    edi,edi
   14001808a:	nop    WORD PTR [rax+rax*1+0x0]
   140018090:	mov    rbp,QWORD PTR [rsi+0x2e8]
   140018097:	mov    rcx,r14
   14001809a:	add    rbp,rdi
   14001809d:	call   0x14001b050
   1400180a2:	mov    rdx,rax
   1400180a5:	mov    rcx,rbp
   1400180a8:	call   0x14001b0d0
   1400180ad:	test   al,al
   1400180af:	jne    0x14001813d
   1400180b5:	inc    ebx
   1400180b7:	add    rdi,0x18
   1400180bb:	cmp    ebx,DWORD PTR [rsi+0x2e0]
   1400180c1:	jl     0x140018090
   1400180c3:	cmp    BYTE PTR [rip+0x2fdb6],0x0        # 0x140047e80
   1400180ca:	mov    rcx,r14
   1400180cd:	je     0x14001818b
   1400180d3:	call   0x14001b050
   1400180d8:	mov    rcx,QWORD PTR [r14+0x8]
   1400180dc:	mov    rdx,rax
   1400180df:	call   0x1400116c0
   1400180e4:	inc    r15
   1400180e7:	add    r12,0x10
   1400180eb:	cmp    r15,r13
   1400180ee:	jl     0x140018074
   1400180f0:	mov    rdx,QWORD PTR [rip+0x2dfd1]        # 0x1400460c8
   1400180f7:	xor    r8d,r8d
   1400180fa:	mov    rcx,QWORD PTR [rsi+0x2c8]
   140018101:	call   0x14000e270
   140018106:	test   rax,rax
   140018109:	je     0x14001811a
   14001810b:	mov    rcx,QWORD PTR [rsi+0x2c8]
   140018112:	mov    rdx,rax
   140018115:	call   0x140011000
   14001811a:	mov    al,0x1
   14001811c:	lea    r11,[rsp+0x130]
   140018124:	mov    rbx,QWORD PTR [r11+0x30]
   140018128:	mov    rbp,QWORD PTR [r11+0x38]
   14001812c:	mov    rsi,QWORD PTR [r11+0x40]
   140018130:	mov    rsp,r11
   140018133:	pop    r15
   140018135:	pop    r14
   140018137:	pop    r13
   140018139:	pop    r12
   14001813b:	pop    rdi
   14001813c:	ret    
   14001813d:	cmp    BYTE PTR [rbp+0x10],0x0
   140018141:	jne    0x14001815f
   140018143:	mov    rdx,QWORD PTR [rbp+0x8]
   140018147:	mov    BYTE PTR [rbp+0x10],0x1
   14001814b:	test   rdx,rdx
   14001814e:	je     0x1400180c3
   140018154:	mov    rcx,QWORD PTR [r14+0x8]
   140018158:	call   0x140010040
   14001815d:	jmp    0x1400180e4
   14001815f:	mov    rcx,r14
   140018162:	call   0x14001b050
   140018167:	lea    rdx,[rip+0x1edaa]        # 0x140036f18
   14001816e:	mov    r8,rax
   140018171:	lea    rcx,[rsp+0x20]
   140018176:	call   0x140001600
   14001817b:	mov    rcx,rsi
   14001817e:	lea    rdx,[rax+0x9]
   140018182:	call   0x140017ee0
   140018187:	xor    al,al
   140018189:	jmp    0x14001811c
   14001818b:	call   0x14001b050
   140018190:	lea    rdx,[rip+0x1edb1]        # 0x140036f48
   140018197:	jmp    0x14001816e
   140018199:	int3   
   14001819a:	int3   
   14001819b:	int3   
   14001819c:	int3   
   14001819d:	int3   
   14001819e:	int3   
   14001819f:	int3   
   1400181a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400181a5:	push   rdi
   1400181a6:	sub    rsp,0x20
   1400181aa:	xor    edi,edi
   1400181ac:	mov    rbx,rcx
   1400181af:	mov    DWORD PTR [rcx],edi
   1400181b1:	test   DWORD PTR [rcx+0x14],0xc0000000
   1400181b8:	jne    0x1400181da
   1400181ba:	mov    rdx,QWORD PTR [rcx+0x8]
   1400181be:	test   rdx,rdx
   1400181c1:	je     0x1400181d7
   1400181c3:	mov    rax,QWORD PTR [rip+0x1a1c6]        # 0x140032390
   1400181ca:	mov    rcx,QWORD PTR [rax]
   1400181cd:	mov    rax,QWORD PTR [rcx]
   1400181d0:	call   QWORD PTR [rax+0x28]
   1400181d3:	mov    QWORD PTR [rbx+0x8],rdi
   1400181d7:	mov    DWORD PTR [rbx+0x10],edi
   1400181da:	test   DWORD PTR [rbx+0x14],0xc0000000
   1400181e1:	jne    0x140018203
   1400181e3:	mov    rdx,QWORD PTR [rbx+0x8]
   1400181e7:	test   rdx,rdx
   1400181ea:	je     0x140018200
   1400181ec:	mov    rax,QWORD PTR [rip+0x1a19d]        # 0x140032390
   1400181f3:	mov    rcx,QWORD PTR [rax]
   1400181f6:	mov    rax,QWORD PTR [rcx]
   1400181f9:	call   QWORD PTR [rax+0x28]
   1400181fc:	mov    QWORD PTR [rbx+0x8],rdi
   140018200:	mov    DWORD PTR [rbx+0x10],edi
   140018203:	mov    rbx,QWORD PTR [rsp+0x30]
   140018208:	add    rsp,0x20
   14001820c:	pop    rdi
   14001820d:	ret    
   14001820e:	int3   
   14001820f:	int3   
   140018210:	mov    QWORD PTR [rsp+0x10],rbx
   140018215:	mov    QWORD PTR [rsp+0x18],rsi
   14001821a:	mov    QWORD PTR [rsp+0x20],rdi
   14001821f:	push   rbp
   140018220:	push   r14
   140018222:	push   r15
   140018224:	lea    rbp,[rsp-0x3f]
   140018229:	sub    rsp,0xb0
   140018230:	xor    r15d,r15d
   140018233:	mov    BYTE PTR [rcx+0x18],0x0
   140018237:	mov    rsi,rdx
   14001823a:	mov    DWORD PTR [rbp-0x41],r15d
   14001823e:	mov    rdi,rcx
   140018241:	mov    QWORD PTR [rbp-0x39],r15
   140018245:	lea    rcx,[rbp-0x39]
   140018249:	mov    DWORD PTR [rbp-0x31],0x8
   140018250:	lea    edx,[r15+0x8]
   140018254:	mov    DWORD PTR [rbp-0x2d],0x80000000
   14001825b:	mov    r14,r9
   14001825e:	mov    rbx,r8
   140018261:	call   0x14000db40
   140018266:	lea    rax,[rbp-0x39]
   14001826a:	test   al,0x7
   14001826c:	je     0x140018279
   14001826e:	call   QWORD PTR [rip+0x1a33c]        # 0x1400325b0
   140018274:	test   eax,eax
   140018276:	je     0x140018279
   140018278:	int3   
   140018279:	lea    rax,[rbp-0x29]
   14001827d:	mov    r9,r14
   140018280:	mov    r8,rbx
   140018283:	mov    QWORD PTR [rbp-0x39],rax
   140018287:	lea    rdx,[rbp-0x41]
   14001828b:	mov    rcx,rdi
   14001828e:	call   0x1400184b0
   140018293:	test   al,al
   140018295:	jne    0x140018373
   14001829b:	mov    rdi,QWORD PTR [rbp+0x7f]
   14001829f:	test   rdi,rdi
   1400182a2:	je     0x14001846e
   1400182a8:	mov    rdx,QWORD PTR [rbx]
   1400182ab:	lea    rsi,[rip+0x1e44e]        # 0x140036700
   1400182b2:	mov    QWORD PTR [rbp+0x5f],r15
   1400182b6:	mov    QWORD PTR [rbp-0x51],r15
   1400182ba:	test   rdx,rdx
   1400182bd:	je     0x1400182c4
   1400182bf:	cmp    BYTE PTR [rdx],r15b
   1400182c2:	jne    0x1400182e4
   1400182c4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400182c8:	lea    rdx,[rbp+0x17]
   1400182cc:	mov    r8d,0x25
   1400182d2:	call   QWORD PTR [rip+0x19fa0]        # 0x140032278
   1400182d8:	cmp    BYTE PTR [rbp+0x17],r15b
   1400182dc:	lea    rdx,[rbp+0x17]
   1400182e0:	cmove  rdx,rsi
   1400182e4:	lea    rcx,[rbp+0x5f]
   1400182e8:	call   0x14001aae0
   1400182ed:	mov    rdx,QWORD PTR [rbx]
   1400182f0:	test   rdx,rdx
   1400182f3:	je     0x1400182fa
   1400182f5:	cmp    BYTE PTR [rdx],r15b
   1400182f8:	jne    0x14001831a
   1400182fa:	mov    rcx,QWORD PTR [rbx+0x8]
   1400182fe:	lea    rdx,[rbp+0x17]
   140018302:	mov    r8d,0x25
   140018308:	call   QWORD PTR [rip+0x19f6a]        # 0x140032278
   14001830e:	cmp    BYTE PTR [rbp+0x17],r15b
   140018312:	lea    rdx,[rbp+0x17]
   140018316:	cmove  rdx,rsi
   14001831a:	lea    rcx,[rbp+0x5f]
   14001831e:	call   0x14001aae0
   140018323:	lea    rcx,[rbp-0x51]
   140018327:	call   0x14001b050
   14001832c:	lea    rcx,[rbp+0x5f]
   140018330:	mov    rbx,rax
   140018333:	call   0x14001b050
   140018338:	mov    r8,rax
   14001833b:	lea    rdx,[rip+0x1ed76]        # 0x1400370b8
   140018342:	mov    r9,rbx
   140018345:	mov    rcx,rdi
   140018348:	call   0x14001ae50
   14001834d:	cmp    QWORD PTR [rbp-0x51],r15
   140018351:	je     0x14001835c
   140018353:	lea    rcx,[rbp-0x51]
   140018357:	call   0x14001b030
   14001835c:	cmp    QWORD PTR [rbp+0x5f],r15
   140018360:	je     0x14001846e
   140018366:	lea    rcx,[rbp+0x5f]
   14001836a:	call   0x14001b030
   14001836f:	xor    bl,bl
   140018371:	jmp    0x1400183bb
   140018373:	mov    ebx,r15d
   140018376:	cmp    DWORD PTR [rbp-0x41],ebx
   140018379:	jle    0x1400183b9
   14001837b:	mov    rdi,r15
   14001837e:	xchg   ax,ax
   140018380:	mov    rax,QWORD PTR [rbp-0x39]
   140018384:	lea    rcx,[rbp-0x51]
   140018388:	mov    rdx,QWORD PTR [rdi+rax*1]
   14001838c:	mov    QWORD PTR [rbp-0x51],r15
   140018390:	mov    QWORD PTR [rbp-0x49],rsi
   140018394:	call   QWORD PTR [rdx]
   140018396:	cmp    eax,0x1
   140018399:	jne    0x14001844d
   14001839f:	cmp    QWORD PTR [rbp-0x51],r15
   1400183a3:	je     0x1400183ae
   1400183a5:	lea    rcx,[rbp-0x51]
   1400183a9:	call   0x14001b030
   1400183ae:	inc    ebx
   1400183b0:	add    rdi,0x8
   1400183b4:	cmp    ebx,DWORD PTR [rbp-0x41]
   1400183b7:	jl     0x140018380
   1400183b9:	mov    bl,0x1
   1400183bb:	mov    rdx,QWORD PTR [rbp-0x39]
   1400183bf:	mov    DWORD PTR [rbp-0x41],r15d
   1400183c3:	cmp    DWORD PTR [rbp-0x31],r15d
   1400183c7:	jl     0x14001840e
   1400183c9:	lea    rax,[rbp-0x29]
   1400183cd:	cmp    rdx,rax
   1400183d0:	je     0x14001840e
   1400183d2:	test   rdx,rdx
   1400183d5:	je     0x1400183f0
   1400183d7:	test   DWORD PTR [rbp-0x2d],0xc0000000
   1400183de:	jne    0x1400183f0
   1400183e0:	mov    rax,QWORD PTR [rip+0x19fa9]        # 0x140032390
   1400183e7:	mov    rcx,QWORD PTR [rax]
   1400183ea:	mov    rax,QWORD PTR [rcx]
   1400183ed:	call   QWORD PTR [rax+0x28]
   1400183f0:	mov    eax,DWORD PTR [rbp-0x2d]
   1400183f3:	lea    rdx,[rbp-0x29]
   1400183f7:	and    eax,0x3fffffff
   1400183fc:	mov    QWORD PTR [rbp-0x39],rdx
   140018400:	bts    eax,0x1f
   140018404:	mov    DWORD PTR [rbp-0x31],0x8
   14001840b:	mov    DWORD PTR [rbp-0x2d],eax
   14001840e:	test   DWORD PTR [rbp-0x2d],0xc0000000
   140018415:	jne    0x14001842d
   140018417:	test   rdx,rdx
   14001841a:	je     0x14001842d
   14001841c:	mov    rcx,QWORD PTR [rip+0x19f6d]        # 0x140032390
   140018423:	mov    rcx,QWORD PTR [rcx]
   140018426:	mov    r8,QWORD PTR [rcx]
   140018429:	call   QWORD PTR [r8+0x28]
   14001842d:	lea    r11,[rsp+0xb0]
   140018435:	movzx  eax,bl
   140018438:	mov    rbx,QWORD PTR [r11+0x28]
   14001843c:	mov    rsi,QWORD PTR [r11+0x30]
   140018440:	mov    rdi,QWORD PTR [r11+0x38]
   140018444:	mov    rsp,r11
   140018447:	pop    r15
   140018449:	pop    r14
   14001844b:	pop    rbp
   14001844c:	ret    
   14001844d:	mov    rcx,QWORD PTR [rbp+0x7f]
   140018451:	test   rcx,rcx
   140018454:	je     0x14001845f
   140018456:	lea    rdx,[rbp-0x51]
   14001845a:	call   0x14001aa90
   14001845f:	cmp    QWORD PTR [rbp-0x51],r15
   140018463:	je     0x14001846e
   140018465:	lea    rcx,[rbp-0x51]
   140018469:	call   0x14001b030
   14001846e:	xor    bl,bl
   140018470:	jmp    0x1400183bb
   140018475:	int3   
   140018476:	int3   
   140018477:	int3   
   140018478:	int3   
   140018479:	int3   
   14001847a:	int3   
   14001847b:	int3   
   14001847c:	int3   
   14001847d:	int3   
   14001847e:	int3   
   14001847f:	int3   
   140018480:	sub    rsp,0x38
   140018484:	mov    QWORD PTR [rsp+0x20],r9
   140018489:	mov    r9,r8
   14001848c:	mov    r8,rdx
   14001848f:	mov    rdx,rcx
   140018492:	lea    rcx,[rip+0x2dc37]        # 0x1400460d0
   140018499:	call   0x140018210
   14001849e:	add    rsp,0x38
   1400184a2:	ret    
   1400184a3:	int3   
   1400184a4:	int3   
   1400184a5:	int3   
   1400184a6:	int3   
   1400184a7:	int3   
   1400184a8:	int3   
   1400184a9:	int3   
   1400184aa:	int3   
   1400184ab:	int3   
   1400184ac:	int3   
   1400184ad:	int3   
   1400184ae:	int3   
   1400184af:	int3   
   1400184b0:	mov    QWORD PTR [rsp+0x20],r9
   1400184b5:	mov    QWORD PTR [rsp+0x18],r8
   1400184ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400184bf:	push   rbp
   1400184c0:	sub    rsp,0x30
   1400184c4:	mov    rbp,rcx
   1400184c7:	mov    r10,rdx
   1400184ca:	mov    rcx,QWORD PTR [r8+0x8]
   1400184ce:	mov    rdx,QWORD PTR [r9+0x8]
   1400184d2:	mov    rax,QWORD PTR [rcx]
   1400184d5:	cmp    rax,QWORD PTR [rdx]
   1400184d8:	jne    0x1400184ec
   1400184da:	mov    rax,QWORD PTR [rcx+0x8]
   1400184de:	cmp    rax,QWORD PTR [rdx+0x8]
   1400184e2:	jne    0x1400184ec
   1400184e4:	mov    al,0x1
   1400184e6:	add    rsp,0x30
   1400184ea:	pop    rbp
   1400184eb:	ret    
   1400184ec:	mov    QWORD PTR [rsp+0x40],rbx
   1400184f1:	mov    QWORD PTR [rsp+0x28],rsi
   1400184f6:	mov    QWORD PTR [rsp+0x20],rdi
   1400184fb:	xor    edi,edi
   1400184fd:	cmp    DWORD PTR [rbp+0x0],edi
   140018500:	jle    0x14001856c
   140018502:	mov    esi,edi
   140018504:	nop    DWORD PTR [rax+0x0]
   140018508:	nop    DWORD PTR [rax+rax*1+0x0]
   140018510:	mov    rax,QWORD PTR [rbp+0x8]
   140018514:	mov    rdx,QWORD PTR [r9+0x8]
   140018518:	mov    rbx,QWORD PTR [rsi+rax*1]
   14001851c:	mov    rcx,QWORD PTR [rbx+0x20]
   140018520:	mov    rax,QWORD PTR [rcx]
   140018523:	cmp    rax,QWORD PTR [rdx]
   140018526:	jne    0x140018561
   140018528:	mov    rax,QWORD PTR [rcx+0x8]
   14001852c:	cmp    rax,QWORD PTR [rdx+0x8]
   140018530:	jne    0x140018561
   140018532:	cmp    BYTE PTR [rbx+0x28],0x0
   140018536:	jne    0x140018561
   140018538:	lea    r9,[rbx+0x8]
   14001853c:	mov    BYTE PTR [rbx+0x28],0x1
   140018540:	mov    rdx,r10
   140018543:	mov    rcx,rbp
   140018546:	call   0x1400184b0
   14001854b:	test   al,al
   14001854d:	jne    0x140018583
   14001854f:	mov    r10,QWORD PTR [rsp+0x48]
   140018554:	mov    r9,QWORD PTR [rsp+0x58]
   140018559:	mov    r8,QWORD PTR [rsp+0x50]
   14001855e:	mov    BYTE PTR [rbx+0x28],al
   140018561:	inc    edi
   140018563:	add    rsi,0x8
   140018567:	cmp    edi,DWORD PTR [rbp+0x0]
   14001856a:	jl     0x140018510
   14001856c:	xor    al,al
   14001856e:	mov    rsi,QWORD PTR [rsp+0x28]
   140018573:	mov    rbx,QWORD PTR [rsp+0x40]
   140018578:	mov    rdi,QWORD PTR [rsp+0x20]
   14001857d:	add    rsp,0x30
   140018581:	pop    rbp
   140018582:	ret    
   140018583:	mov    rdi,QWORD PTR [rsp+0x48]
   140018588:	movsxd rsi,DWORD PTR [rdi]
   14001858b:	cmp    esi,DWORD PTR [rdi+0x10]
   14001858e:	jne    0x14001859e
   140018590:	lea    rcx,[rdi+0x8]
   140018594:	mov    edx,0x1
   140018599:	call   0x140013420
   14001859e:	mov    rax,QWORD PTR [rdi+0x8]
   1400185a2:	inc    DWORD PTR [rdi]
   1400185a4:	lea    rdx,[rax+rsi*8]
   1400185a8:	test   rdx,rdx
   1400185ab:	je     0x1400185b0
   1400185ad:	mov    QWORD PTR [rdx],rbx
   1400185b0:	mov    BYTE PTR [rbx+0x28],0x0
   1400185b4:	mov    al,0x1
   1400185b6:	jmp    0x14001856e
   1400185b8:	int3   
   1400185b9:	int3   
   1400185ba:	int3   
   1400185bb:	int3   
   1400185bc:	int3   
   1400185bd:	int3   
   1400185be:	int3   
   1400185bf:	int3   
   1400185c0:	rex push rbx
   1400185c2:	sub    rsp,0x20
   1400185c6:	mov    QWORD PTR [rsp+0x38],rdi
   1400185cb:	mov    rbx,rcx
   1400185ce:	xor    edi,edi
   1400185d0:	cmp    DWORD PTR [rcx],edi
   1400185d2:	jle    0x140018601
   1400185d4:	mov    QWORD PTR [rsp+0x30],rsi
   1400185d9:	xor    esi,esi
   1400185db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400185e0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400185e4:	mov    edx,0x30
   1400185e9:	mov    rcx,QWORD PTR [rsi+rcx*1]
   1400185ed:	call   0x14002639c
   1400185f2:	inc    edi
   1400185f4:	lea    rsi,[rsi+0x8]
   1400185f8:	cmp    edi,DWORD PTR [rbx]
   1400185fa:	jl     0x1400185e0
   1400185fc:	mov    rsi,QWORD PTR [rsp+0x30]
   140018601:	mov    rdi,QWORD PTR [rsp+0x38]
   140018606:	mov    DWORD PTR [rbx],0x0
   14001860c:	test   DWORD PTR [rbx+0x14],0xc0000000
   140018613:	jne    0x14001863d
   140018615:	mov    rdx,QWORD PTR [rbx+0x8]
   140018619:	test   rdx,rdx
   14001861c:	je     0x140018636
   14001861e:	mov    rax,QWORD PTR [rip+0x19d6b]        # 0x140032390
   140018625:	mov    rcx,QWORD PTR [rax]
   140018628:	mov    rax,QWORD PTR [rcx]
   14001862b:	call   QWORD PTR [rax+0x28]
   14001862e:	mov    QWORD PTR [rbx+0x8],0x0
   140018636:	mov    DWORD PTR [rbx+0x10],0x0
   14001863d:	add    rsp,0x20
   140018641:	pop    rbx
   140018642:	ret    
   140018643:	int3   
   140018644:	int3   
   140018645:	int3   
   140018646:	int3   
   140018647:	int3   
   140018648:	int3   
   140018649:	int3   
   14001864a:	int3   
   14001864b:	int3   
   14001864c:	int3   
   14001864d:	int3   
   14001864e:	int3   
   14001864f:	int3   
   140018650:	mov    QWORD PTR [rsp+0x10],rbx
   140018655:	mov    QWORD PTR [rsp+0x18],rsi
   14001865a:	push   rbp
   14001865b:	push   rdi
   14001865c:	push   r12
   14001865e:	push   r14
   140018660:	push   r15
   140018662:	mov    rbp,rsp
   140018665:	sub    rsp,0x60
   140018669:	cmp    BYTE PTR [rcx+0x18],0x0
   14001866d:	mov    r12,r9
   140018670:	mov    r14,r8
   140018673:	mov    r15,rdx
   140018676:	mov    rsi,rcx
   140018679:	jne    0x1400187b0
   14001867f:	mov    rdx,QWORD PTR [rdx]
   140018682:	lea    rbx,[rip+0x1e077]        # 0x140036700
   140018689:	xor    edi,edi
   14001868b:	mov    QWORD PTR [rbp-0x30],rdi
   14001868f:	mov    QWORD PTR [rbp+0x30],rdi
   140018693:	test   rdx,rdx
   140018696:	je     0x14001869d
   140018698:	cmp    BYTE PTR [rdx],dil
   14001869b:	jne    0x1400186bd
   14001869d:	mov    rcx,QWORD PTR [r15+0x8]
   1400186a1:	lea    rdx,[rbp-0x28]
   1400186a5:	mov    r8d,0x25
   1400186ab:	call   QWORD PTR [rip+0x19bc7]        # 0x140032278
   1400186b1:	cmp    BYTE PTR [rbp-0x28],dil
   1400186b5:	lea    rdx,[rbp-0x28]
   1400186b9:	cmove  rdx,rbx
   1400186bd:	lea    rcx,[rbp-0x30]
   1400186c1:	call   0x14001aae0
   1400186c6:	mov    rdx,QWORD PTR [r14]
   1400186c9:	test   rdx,rdx
   1400186cc:	je     0x1400186d3
   1400186ce:	cmp    BYTE PTR [rdx],dil
   1400186d1:	jne    0x1400186f3
   1400186d3:	mov    rcx,QWORD PTR [r14+0x8]
   1400186d7:	lea    rdx,[rbp-0x28]
   1400186db:	mov    r8d,0x25
   1400186e1:	call   QWORD PTR [rip+0x19b91]        # 0x140032278
   1400186e7:	cmp    BYTE PTR [rbp-0x28],dil
   1400186eb:	lea    rdx,[rbp-0x28]
   1400186ef:	cmove  rdx,rbx
   1400186f3:	lea    rcx,[rbp+0x30]
   1400186f7:	call   0x14001aae0
   1400186fc:	mov    rax,QWORD PTR [rip+0x19c85]        # 0x140032388
   140018703:	mov    edx,0x4
   140018708:	mov    ecx,DWORD PTR [rax]
   14001870a:	call   QWORD PTR [rip+0x19d98]        # 0x1400324a8
   140018710:	test   al,al
   140018712:	je     0x14001876f
   140018714:	lea    rax,[rip+0x1e8c5]        # 0x140036fe0
   14001871b:	mov    DWORD PTR [rbp-0x20],0x4f
   140018722:	mov    QWORD PTR [rbp-0x28],rax
   140018726:	lea    rcx,[rbp+0x30]
   14001872a:	lea    rax,[rip+0x1e87f]        # 0x140036fb0
   140018731:	mov    QWORD PTR [rbp-0x18],rax
   140018735:	call   0x14001b050
   14001873a:	lea    rcx,[rbp-0x30]
   14001873e:	mov    rbx,rax
   140018741:	call   0x14001b050
   140018746:	mov    QWORD PTR [rsp+0x28],rbx
   14001874b:	lea    r9,[rip+0x1e81e]        # 0x140036f70
   140018752:	mov    QWORD PTR [rsp+0x20],rax
   140018757:	lea    r8,[rbp-0x28]
   14001875b:	mov    rax,QWORD PTR [rip+0x19c26]        # 0x140032388
   140018762:	mov    edx,0x4
   140018767:	mov    ecx,DWORD PTR [rax]
   140018769:	call   QWORD PTR [rip+0x19d29]        # 0x140032498
   14001876f:	call   QWORD PTR [rip+0x19e13]        # 0x140032588
   140018775:	test   al,al
   140018777:	je     0x1400187a4
   140018779:	call   QWORD PTR [rip+0x19d01]        # 0x140032480
   14001877f:	lea    rcx,[rip+0x1a026]        # 0x1400327ac
   140018786:	xorps  xmm0,xmm0
   140018789:	lea    rdx,[rbp-0x28]
   14001878d:	mov    DWORD PTR [rbp-0x20],eax
   140018790:	mov    QWORD PTR [rbp-0x28],rcx
   140018794:	mov    r8b,0x1
   140018797:	xor    ecx,ecx
   140018799:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   14001879e:	call   QWORD PTR [rip+0x19cd4]        # 0x140032478
   1400187a4:	mov    ecx,0x1
   1400187a9:	call   QWORD PTR [rip+0x19a99]        # 0x140032248
   1400187af:	int3   
   1400187b0:	mov    r10,QWORD PTR [rdx+0x8]
   1400187b4:	mov    r11,QWORD PTR [r8+0x8]
   1400187b8:	mov    rax,QWORD PTR [r10]
   1400187bb:	cmp    rax,QWORD PTR [r11]
   1400187be:	jne    0x140018902
   1400187c4:	mov    rax,QWORD PTR [r10+0x8]
   1400187c8:	cmp    rax,QWORD PTR [r11+0x8]
   1400187cc:	jne    0x140018902
   1400187d2:	mov    rdx,QWORD PTR [rdx]
   1400187d5:	lea    rbx,[rip+0x1df24]        # 0x140036700
   1400187dc:	xor    edi,edi
   1400187de:	mov    QWORD PTR [rbp-0x30],rdi
   1400187e2:	mov    QWORD PTR [rbp+0x30],rdi
   1400187e6:	test   rdx,rdx
   1400187e9:	je     0x1400187f0
   1400187eb:	cmp    BYTE PTR [rdx],dil
   1400187ee:	jne    0x14001880f
   1400187f0:	mov    r8d,0x25
   1400187f6:	lea    rdx,[rbp-0x28]
   1400187fa:	mov    rcx,r10
   1400187fd:	call   QWORD PTR [rip+0x19a75]        # 0x140032278
   140018803:	cmp    BYTE PTR [rbp-0x28],dil
   140018807:	lea    rdx,[rbp-0x28]
   14001880b:	cmove  rdx,rbx
   14001880f:	lea    rcx,[rbp-0x30]
   140018813:	call   0x14001aae0
   140018818:	mov    rdx,QWORD PTR [r14]
   14001881b:	test   rdx,rdx
   14001881e:	je     0x140018825
   140018820:	cmp    BYTE PTR [rdx],dil
   140018823:	jne    0x140018845
   140018825:	mov    rcx,QWORD PTR [r14+0x8]
   140018829:	lea    rdx,[rbp-0x28]
   14001882d:	mov    r8d,0x25
   140018833:	call   QWORD PTR [rip+0x19a3f]        # 0x140032278
   140018839:	cmp    BYTE PTR [rbp-0x28],dil
   14001883d:	lea    rdx,[rbp-0x28]
   140018841:	cmove  rdx,rbx
   140018845:	lea    rcx,[rbp+0x30]
   140018849:	call   0x14001aae0
   14001884e:	mov    rax,QWORD PTR [rip+0x19b33]        # 0x140032388
   140018855:	mov    edx,0x4
   14001885a:	mov    ecx,DWORD PTR [rax]
   14001885c:	call   QWORD PTR [rip+0x19c46]        # 0x1400324a8
   140018862:	test   al,al
   140018864:	je     0x1400188c1
   140018866:	lea    rax,[rip+0x1e773]        # 0x140036fe0
   14001886d:	mov    DWORD PTR [rbp-0x20],0x58
   140018874:	mov    QWORD PTR [rbp-0x28],rax
   140018878:	lea    rcx,[rbp+0x30]
   14001887c:	lea    rax,[rip+0x1e72d]        # 0x140036fb0
   140018883:	mov    QWORD PTR [rbp-0x18],rax
   140018887:	call   0x14001b050
   14001888c:	lea    rcx,[rbp-0x30]
   140018890:	mov    rbx,rax
   140018893:	call   0x14001b050
   140018898:	mov    QWORD PTR [rsp+0x28],rbx
   14001889d:	lea    r9,[rip+0x1e78c]        # 0x140037030
   1400188a4:	mov    QWORD PTR [rsp+0x20],rax
   1400188a9:	lea    r8,[rbp-0x28]
   1400188ad:	mov    rax,QWORD PTR [rip+0x19ad4]        # 0x140032388
   1400188b4:	mov    edx,0x4
   1400188b9:	mov    ecx,DWORD PTR [rax]
   1400188bb:	call   QWORD PTR [rip+0x19bd7]        # 0x140032498
   1400188c1:	call   QWORD PTR [rip+0x19cc1]        # 0x140032588
   1400188c7:	test   al,al
   1400188c9:	je     0x1400188f6
   1400188cb:	call   QWORD PTR [rip+0x19baf]        # 0x140032480
   1400188d1:	lea    rcx,[rip+0x19ed4]        # 0x1400327ac
   1400188d8:	xorps  xmm0,xmm0
   1400188db:	lea    rdx,[rbp-0x28]
   1400188df:	mov    DWORD PTR [rbp-0x20],eax
   1400188e2:	mov    QWORD PTR [rbp-0x28],rcx
   1400188e6:	mov    r8b,0x1
   1400188e9:	xor    ecx,ecx
   1400188eb:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   1400188f0:	call   QWORD PTR [rip+0x19b82]        # 0x140032478
   1400188f6:	mov    ecx,0x1
   1400188fb:	call   QWORD PTR [rip+0x19947]        # 0x140032248
   140018901:	int3   
   140018902:	movsxd rax,DWORD PTR [rcx]
   140018905:	xor    edi,edi
   140018907:	test   eax,eax
   140018909:	jle    0x14001895b
   14001890b:	mov    rdx,QWORD PTR [rcx+0x8]
   14001890f:	mov    rbx,rax
   140018912:	mov    ecx,edi
   140018914:	nop    DWORD PTR [rax+0x0]
   140018918:	nop    DWORD PTR [rax+rax*1+0x0]
   140018920:	mov    r9,QWORD PTR [rdx]
   140018923:	mov    r8,QWORD PTR [r9+0x10]
   140018927:	mov    rax,QWORD PTR [r8]
   14001892a:	cmp    rax,QWORD PTR [r10]
   14001892d:	jne    0x14001894f
   14001892f:	mov    rax,QWORD PTR [r8+0x8]
   140018933:	cmp    rax,QWORD PTR [r10+0x8]
   140018937:	jne    0x14001894f
   140018939:	mov    r8,QWORD PTR [r9+0x20]
   14001893d:	mov    rax,QWORD PTR [r8]
   140018940:	cmp    rax,QWORD PTR [r11]
   140018943:	jne    0x14001894f
   140018945:	mov    rax,QWORD PTR [r8+0x8]
   140018949:	cmp    rax,QWORD PTR [r11+0x8]
   14001894d:	je     0x14001899b
   14001894f:	inc    rcx
   140018952:	add    rdx,0x8
   140018956:	cmp    rcx,rbx
   140018959:	jl     0x140018920
   14001895b:	mov    ecx,0x30
   140018960:	call   0x140007bf0
   140018965:	mov    rbx,rax
   140018968:	test   rax,rax
   14001896b:	je     0x140018ac9
   140018971:	mov    QWORD PTR [rax],r12
   140018974:	mov    rcx,QWORD PTR [r15]
   140018977:	mov    QWORD PTR [rax+0x8],rcx
   14001897b:	mov    rcx,QWORD PTR [r15+0x8]
   14001897f:	mov    QWORD PTR [rax+0x10],rcx
   140018983:	mov    rcx,QWORD PTR [r14]
   140018986:	mov    QWORD PTR [rax+0x18],rcx
   14001898a:	mov    rcx,QWORD PTR [r14+0x8]
   14001898e:	mov    QWORD PTR [rax+0x20],rcx
   140018992:	mov    BYTE PTR [rax+0x28],dil
   140018996:	jmp    0x140018acc
   14001899b:	mov    rdx,QWORD PTR [r15]
   14001899e:	lea    rbx,[rip+0x1dd5b]        # 0x140036700
   1400189a5:	mov    QWORD PTR [rbp-0x30],rdi
   1400189a9:	mov    QWORD PTR [rbp+0x30],rdi
   1400189ad:	test   rdx,rdx
   1400189b0:	je     0x1400189b7
   1400189b2:	cmp    BYTE PTR [rdx],dil
   1400189b5:	jne    0x1400189d6
   1400189b7:	mov    r8d,0x25
   1400189bd:	lea    rdx,[rbp-0x28]
   1400189c1:	mov    rcx,r10
   1400189c4:	call   QWORD PTR [rip+0x198ae]        # 0x140032278
   1400189ca:	cmp    BYTE PTR [rbp-0x28],dil
   1400189ce:	lea    rdx,[rbp-0x28]
   1400189d2:	cmove  rdx,rbx
   1400189d6:	lea    rcx,[rbp-0x30]
   1400189da:	call   0x14001aae0
   1400189df:	mov    rdx,QWORD PTR [r14]
   1400189e2:	test   rdx,rdx
   1400189e5:	je     0x1400189ec
   1400189e7:	cmp    BYTE PTR [rdx],dil
   1400189ea:	jne    0x140018a0c
   1400189ec:	mov    rcx,QWORD PTR [r14+0x8]
   1400189f0:	lea    rdx,[rbp-0x28]
   1400189f4:	mov    r8d,0x25
   1400189fa:	call   QWORD PTR [rip+0x19878]        # 0x140032278
   140018a00:	cmp    BYTE PTR [rbp-0x28],dil
   140018a04:	lea    rdx,[rbp-0x28]
   140018a08:	cmove  rdx,rbx
   140018a0c:	lea    rcx,[rbp+0x30]
   140018a10:	call   0x14001aae0
   140018a15:	mov    rax,QWORD PTR [rip+0x1996c]        # 0x140032388
   140018a1c:	mov    edx,0x4
   140018a21:	mov    ecx,DWORD PTR [rax]
   140018a23:	call   QWORD PTR [rip+0x19a7f]        # 0x1400324a8
   140018a29:	test   al,al
   140018a2b:	je     0x140018a88
   140018a2d:	lea    rax,[rip+0x1e5ac]        # 0x140036fe0
   140018a34:	mov    DWORD PTR [rbp-0x20],0x64
   140018a3b:	mov    QWORD PTR [rbp-0x28],rax
   140018a3f:	lea    rcx,[rbp+0x30]
   140018a43:	lea    rax,[rip+0x1e566]        # 0x140036fb0
   140018a4a:	mov    QWORD PTR [rbp-0x18],rax
   140018a4e:	call   0x14001b050
   140018a53:	lea    rcx,[rbp-0x30]
   140018a57:	mov    rbx,rax
   140018a5a:	call   0x14001b050
   140018a5f:	mov    QWORD PTR [rsp+0x28],rbx
   140018a64:	lea    r9,[rip+0x1e615]        # 0x140037080
   140018a6b:	mov    QWORD PTR [rsp+0x20],rax
   140018a70:	lea    r8,[rbp-0x28]
   140018a74:	mov    rax,QWORD PTR [rip+0x1990d]        # 0x140032388
   140018a7b:	mov    edx,0x4
   140018a80:	mov    ecx,DWORD PTR [rax]
   140018a82:	call   QWORD PTR [rip+0x19a10]        # 0x140032498
   140018a88:	call   QWORD PTR [rip+0x19afa]        # 0x140032588
   140018a8e:	test   al,al
   140018a90:	je     0x140018abd
   140018a92:	call   QWORD PTR [rip+0x199e8]        # 0x140032480
   140018a98:	lea    rcx,[rip+0x19d0d]        # 0x1400327ac
   140018a9f:	xorps  xmm0,xmm0
   140018aa2:	lea    rdx,[rbp-0x28]
   140018aa6:	mov    DWORD PTR [rbp-0x20],eax
   140018aa9:	mov    QWORD PTR [rbp-0x28],rcx
   140018aad:	mov    r8b,0x1
   140018ab0:	xor    ecx,ecx
   140018ab2:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140018ab7:	call   QWORD PTR [rip+0x199bb]        # 0x140032478
   140018abd:	mov    ecx,0x1
   140018ac2:	call   QWORD PTR [rip+0x19780]        # 0x140032248
   140018ac8:	int3   
   140018ac9:	mov    rbx,rdi
   140018acc:	movsxd rdi,DWORD PTR [rsi]
   140018acf:	cmp    edi,DWORD PTR [rsi+0x10]
   140018ad2:	jne    0x140018ae2
   140018ad4:	lea    rcx,[rsi+0x8]
   140018ad8:	mov    edx,0x1
   140018add:	call   0x140013420
   140018ae2:	mov    rax,QWORD PTR [rsi+0x8]
   140018ae6:	inc    DWORD PTR [rsi]
   140018ae8:	lea    rdx,[rax+rdi*8]
   140018aec:	test   rdx,rdx
   140018aef:	je     0x140018af4
   140018af1:	mov    QWORD PTR [rdx],rbx
   140018af4:	lea    r11,[rsp+0x60]
   140018af9:	mov    rbx,QWORD PTR [r11+0x38]
   140018afd:	mov    rsi,QWORD PTR [r11+0x40]
   140018b01:	mov    rsp,r11
   140018b04:	pop    r15
   140018b06:	pop    r14
   140018b08:	pop    r12
   140018b0a:	pop    rdi
   140018b0b:	pop    rbp
   140018b0c:	ret    
   140018b0d:	int3   
   140018b0e:	int3   
   140018b0f:	int3   
   140018b10:	mov    QWORD PTR [rsp+0x8],rbx
   140018b15:	mov    QWORD PTR [rsp+0x10],rbp
   140018b1a:	mov    QWORD PTR [rsp+0x18],rsi
   140018b1f:	push   rdi
   140018b20:	sub    rsp,0x20
   140018b24:	mov    rbp,rdx
   140018b27:	mov    rsi,rcx
   140018b2a:	xor    edi,edi
   140018b2c:	call   0x14000ea00
   140018b31:	test   eax,eax
   140018b33:	jle    0x140018b95
   140018b35:	mov    ebx,edi
   140018b37:	nop    WORD PTR [rax+rax*1+0x0]
   140018b40:	mov    edx,edi
   140018b42:	mov    rcx,rsi
   140018b45:	call   0x14000e9b0
   140018b4a:	mov    rdx,QWORD PTR [rip+0x2d59f]        # 0x1400460f0
   140018b51:	lea    r8,[rip+0x19c48]        # 0x1400327a0
   140018b58:	mov    r9d,ebx
   140018b5b:	mov    rcx,rax
   140018b5e:	call   0x14000ee70
   140018b63:	mov    r8,rbp
   140018b66:	sub    r8,rax
   140018b69:	nop    DWORD PTR [rax+0x0]
   140018b70:	movzx  edx,BYTE PTR [rax]
   140018b73:	movzx  ecx,BYTE PTR [rax+r8*1]
   140018b78:	sub    edx,ecx
   140018b7a:	jne    0x140018b83
   140018b7c:	inc    rax
   140018b7f:	test   ecx,ecx
   140018b81:	jne    0x140018b70
   140018b83:	test   edx,edx
   140018b85:	je     0x140018bad
   140018b87:	mov    rcx,rsi
   140018b8a:	inc    edi
   140018b8c:	call   0x14000ea00
   140018b91:	cmp    edi,eax
   140018b93:	jl     0x140018b40
   140018b95:	or     eax,0xffffffff
   140018b98:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b9d:	mov    rbp,QWORD PTR [rsp+0x38]
   140018ba2:	mov    rsi,QWORD PTR [rsp+0x40]
   140018ba7:	add    rsp,0x20
   140018bab:	pop    rdi
   140018bac:	ret    
   140018bad:	mov    eax,edi
   140018baf:	jmp    0x140018b98
   140018bb1:	int3   
   140018bb2:	int3   
   140018bb3:	int3   
   140018bb4:	int3   
   140018bb5:	int3   
   140018bb6:	int3   
   140018bb7:	int3   
   140018bb8:	int3   
   140018bb9:	int3   
   140018bba:	int3   
   140018bbb:	int3   
   140018bbc:	int3   
   140018bbd:	int3   
   140018bbe:	int3   
   140018bbf:	int3   
   140018bc0:	rex push rbp
   140018bc2:	lea    rbp,[rsp-0x57]
   140018bc7:	sub    rsp,0xd0
   140018bce:	mov    rdx,QWORD PTR [rcx+0x8]
   140018bd2:	lea    rax,[rip+0x1e62f]        # 0x140037208
   140018bd9:	mov    QWORD PTR [rbp+0x7],rax
   140018bdd:	lea    rcx,[rbp-0x59]
   140018be1:	lea    rax,[rip+0x1e630]        # 0x140037218
   140018be8:	mov    QWORD PTR [rbp+0xf],rax
   140018bec:	lea    rax,[rip+0x1e635]        # 0x140037228
   140018bf3:	mov    QWORD PTR [rbp+0x17],rax
   140018bf7:	lea    rax,[rip+0x1e63a]        # 0x140037238
   140018bfe:	mov    QWORD PTR [rbp+0x1f],rax
   140018c02:	lea    rax,[rip+0x1e63f]        # 0x140037248
   140018c09:	mov    QWORD PTR [rbp+0x27],rax
   140018c0d:	lea    rax,[rip+0x1e64c]        # 0x140037260
   140018c14:	mov    QWORD PTR [rbp+0x2f],rax
   140018c18:	lea    rax,[rip+0x1e659]        # 0x140037278
   140018c1f:	mov    QWORD PTR [rbp+0x37],rax
   140018c23:	lea    rax,[rip+0x1e65e]        # 0x140037288
   140018c2a:	mov    QWORD PTR [rbp+0x3f],rax
   140018c2e:	lea    rax,[rip+0x1e663]        # 0x140037298
   140018c35:	mov    QWORD PTR [rbp+0x47],rax
   140018c39:	lea    rax,[rip+0x1e668]        # 0x1400372a8
   140018c40:	mov    QWORD PTR [rbp+0x4f],rax
   140018c44:	call   0x14000c540
   140018c49:	lea    rcx,[rbp-0x59]
   140018c4d:	call   0x14000ff00
   140018c52:	test   al,al
   140018c54:	je     0x140018d55
   140018c5a:	nop    WORD PTR [rax+rax*1+0x0]
   140018c60:	lea    rcx,[rbp-0x59]
   140018c64:	call   0x14000e980
   140018c69:	mov    rdx,QWORD PTR [rip+0x2d480]        # 0x1400460f0
   140018c70:	lea    r8,[rip+0x19b29]        # 0x1400327a0
   140018c77:	xor    r9d,r9d
   140018c7a:	mov    rcx,rax
   140018c7d:	call   0x14000ee70
   140018c82:	xor    r10d,r10d
   140018c85:	lea    r11,[rbp+0x7]
   140018c89:	nop    DWORD PTR [rax+0x0]
   140018c90:	mov    r9,QWORD PTR [r11]
   140018c93:	mov    rcx,rax
   140018c96:	sub    r9,rax
   140018c99:	nop    DWORD PTR [rax+0x0]
   140018ca0:	movzx  r8d,BYTE PTR [rcx]
   140018ca4:	movzx  edx,BYTE PTR [rcx+r9*1]
   140018ca9:	sub    r8d,edx
   140018cac:	jne    0x140018cb5
   140018cae:	inc    rcx
   140018cb1:	test   edx,edx
   140018cb3:	jne    0x140018ca0
   140018cb5:	test   r8d,r8d
   140018cb8:	je     0x140018cc9
   140018cba:	inc    r10d
   140018cbd:	add    r11,0x8
   140018cc1:	cmp    r10d,0xa
   140018cc5:	jb     0x140018c90
   140018cc7:	jmp    0x140018ce4
   140018cc9:	lea    rcx,[rbp-0x59]
   140018ccd:	call   0x14000e980
   140018cd2:	xor    r8d,r8d
   140018cd5:	lea    rdx,[rip+0x1e5e0]        # 0x1400372bc
   140018cdc:	mov    rcx,rax
   140018cdf:	call   0x140011040
   140018ce4:	lea    rcx,[rbp-0x59]
   140018ce8:	call   0x14000e980
   140018ced:	mov    rdx,QWORD PTR [rip+0x2d3fc]        # 0x1400460f0
   140018cf4:	lea    r8,[rip+0x19aa5]        # 0x1400327a0
   140018cfb:	xor    r9d,r9d
   140018cfe:	mov    rcx,rax
   140018d01:	call   0x14000ee70
   140018d06:	lea    rdx,[rip+0x1e5bb]        # 0x1400372c8
   140018d0d:	mov    rcx,rax
   140018d10:	call   0x140028260
   140018d15:	test   eax,eax
   140018d17:	jne    0x140018d3b
   140018d19:	lea    rcx,[rbp-0x59]
   140018d1d:	call   0x14000e980
   140018d22:	mov    rdx,QWORD PTR [rip+0x2d3c7]        # 0x1400460f0
   140018d29:	lea    r8,[rip+0x1e5a8]        # 0x1400372d8
   140018d30:	xor    r9d,r9d
   140018d33:	mov    rcx,rax
   140018d36:	call   0x140011650
   140018d3b:	lea    rcx,[rbp-0x59]
   140018d3f:	call   0x14000cc20
   140018d44:	lea    rcx,[rbp-0x59]
   140018d48:	call   0x14000ff00
   140018d4d:	test   al,al
   140018d4f:	jne    0x140018c60
   140018d55:	cmp    DWORD PTR [rbp-0x49],0x0
   140018d59:	mov    rdx,QWORD PTR [rbp-0x51]
   140018d5d:	mov    DWORD PTR [rbp-0x59],0x0
   140018d64:	jl     0x140018dab
   140018d66:	lea    rax,[rbp-0x41]
   140018d6a:	cmp    rdx,rax
   140018d6d:	je     0x140018dab
   140018d6f:	test   rdx,rdx
   140018d72:	je     0x140018d8d
   140018d74:	test   DWORD PTR [rbp-0x45],0xc0000000
   140018d7b:	jne    0x140018d8d
   140018d7d:	mov    rax,QWORD PTR [rip+0x1960c]        # 0x140032390
   140018d84:	mov    rcx,QWORD PTR [rax]
   140018d87:	mov    rax,QWORD PTR [rcx]
   140018d8a:	call   QWORD PTR [rax+0x28]
   140018d8d:	mov    eax,DWORD PTR [rbp-0x45]
   140018d90:	lea    rdx,[rbp-0x41]
   140018d94:	and    eax,0x3fffffff
   140018d99:	mov    QWORD PTR [rbp-0x51],rdx
   140018d9d:	bts    eax,0x1f
   140018da1:	mov    DWORD PTR [rbp-0x49],0x4
   140018da8:	mov    DWORD PTR [rbp-0x45],eax
   140018dab:	test   DWORD PTR [rbp-0x45],0xc0000000
   140018db2:	jne    0x140018dc9
   140018db4:	test   rdx,rdx
   140018db7:	je     0x140018dc9
   140018db9:	mov    rax,QWORD PTR [rip+0x195d0]        # 0x140032390
   140018dc0:	mov    rcx,QWORD PTR [rax]
   140018dc3:	mov    rax,QWORD PTR [rcx]
   140018dc6:	call   QWORD PTR [rax+0x28]
   140018dc9:	mov    eax,0x1
   140018dce:	add    rsp,0xd0
   140018dd5:	pop    rbp
   140018dd6:	ret    
   140018dd7:	int3   
   140018dd8:	int3   
   140018dd9:	int3   
   140018dda:	int3   
   140018ddb:	int3   
   140018ddc:	int3   
   140018ddd:	int3   
   140018dde:	int3   
   140018ddf:	int3   
   140018de0:	mov    QWORD PTR [rsp+0x8],rbx
   140018de5:	push   rdi
   140018de6:	sub    rsp,0x20
   140018dea:	mov    rdi,rcx
   140018ded:	lea    rdx,[rip+0x1e6c4]        # 0x1400374b8
   140018df4:	mov    rcx,QWORD PTR [rcx+0x8]
   140018df8:	xor    r9d,r9d
   140018dfb:	xor    r8d,r8d
   140018dfe:	call   0x14000ec40
   140018e03:	mov    rcx,QWORD PTR [rdi+0x8]
   140018e07:	lea    rdx,[rip+0x1e6ce]        # 0x1400374dc
   140018e0e:	mov    ebx,eax
   140018e10:	xor    r9d,r9d
   140018e13:	lea    r8d,[rbx+0x1]
   140018e17:	call   0x140011610
   140018e1c:	mov    rcx,QWORD PTR [rdi+0x8]
   140018e20:	lea    r8d,[rbx+0x1]
   140018e24:	xor    r9d,r9d
   140018e27:	lea    rdx,[rip+0x1e68a]        # 0x1400374b8
   140018e2e:	call   0x140011610
   140018e33:	mov    rbx,QWORD PTR [rsp+0x30]
   140018e38:	mov    eax,0x1
   140018e3d:	add    rsp,0x20
   140018e41:	pop    rdi
   140018e42:	ret    
   140018e43:	int3   
   140018e44:	int3   
   140018e45:	int3   
   140018e46:	int3   
   140018e47:	int3   
   140018e48:	int3   
   140018e49:	int3   
   140018e4a:	int3   
   140018e4b:	int3   
   140018e4c:	int3   
   140018e4d:	int3   
   140018e4e:	int3   
   140018e4f:	int3   
   140018e50:	push   r14
   140018e52:	sub    rsp,0x50
   140018e56:	mov    rcx,QWORD PTR [rcx+0x8]
   140018e5a:	lea    rdx,[rip+0x1e487]        # 0x1400372e8
   140018e61:	xor    r8d,r8d
   140018e64:	call   0x14000e1f0
   140018e69:	test   rax,rax
   140018e6c:	je     0x140019068
   140018e72:	xor    r8d,r8d
   140018e75:	lea    rdx,[rip+0x1e47c]        # 0x1400372f8
   140018e7c:	mov    rcx,rax
   140018e7f:	call   0x14000e1f0
   140018e84:	mov    r14,rax
   140018e87:	test   rax,rax
   140018e8a:	je     0x140019068
   140018e90:	mov    QWORD PTR [rsp+0x60],rbx
   140018e95:	mov    rcx,rax
   140018e98:	mov    QWORD PTR [rsp+0x70],rsi
   140018e9d:	xor    ebx,ebx
   140018e9f:	mov    QWORD PTR [rsp+0x78],rdi
   140018ea4:	xor    esi,esi
   140018ea6:	mov    QWORD PTR [rsp+0x40],r15
   140018eab:	xor    edi,edi
   140018ead:	xor    r15d,r15d
   140018eb0:	mov    DWORD PTR [rsp+0x20],edi
   140018eb4:	mov    QWORD PTR [rsp+0x30],r15
   140018eb9:	mov    QWORD PTR [rsp+0x28],rsi
   140018ebe:	call   0x14000ea00
   140018ec3:	test   eax,eax
   140018ec5:	jle    0x140018ff1
   140018ecb:	mov    QWORD PTR [rsp+0x68],rbp
   140018ed0:	mov    QWORD PTR [rsp+0x48],r12
   140018ed5:	mov    edx,ebx
   140018ed7:	mov    rcx,r14
   140018eda:	call   0x14000e9b0
   140018edf:	mov    rdx,QWORD PTR [rip+0x2d20a]        # 0x1400460f0
   140018ee6:	lea    r8,[rip+0x198b3]        # 0x1400327a0
   140018eed:	xor    r9d,r9d
   140018ef0:	mov    rcx,rax
   140018ef3:	mov    r12,rax
   140018ef6:	call   0x14000ee70
   140018efb:	lea    rdx,[rip+0x1e406]        # 0x140037308
   140018f02:	mov    rcx,rax
   140018f05:	call   0x140028260
   140018f0a:	test   eax,eax
   140018f0c:	jne    0x140018f65
   140018f0e:	movsxd rbp,edi
   140018f11:	cmp    edi,r15d
   140018f14:	jne    0x140018f31
   140018f16:	lea    edx,[rax+0x1]
   140018f19:	lea    rcx,[rsp+0x28]
   140018f1e:	call   0x140023260
   140018f23:	mov    r15d,DWORD PTR [rsp+0x30]
   140018f28:	mov    rsi,QWORD PTR [rsp+0x28]
   140018f2d:	mov    edi,DWORD PTR [rsp+0x20]
   140018f31:	inc    edi
   140018f33:	shl    rbp,0x4
   140018f37:	mov    DWORD PTR [rsp+0x20],edi
   140018f3b:	add    rbp,rsi
   140018f3e:	je     0x140018f48
   140018f40:	mov    rcx,rbp
   140018f43:	call   0x14000c6f0
   140018f48:	mov    rdx,r12
   140018f4b:	mov    rcx,rbp
   140018f4e:	call   0x14000d830
   140018f53:	mov    r8d,0x1
   140018f59:	mov    edx,ebx
   140018f5b:	mov    rcx,r14
   140018f5e:	call   0x14000d580
   140018f63:	jmp    0x140018f67
   140018f65:	inc    ebx
   140018f67:	mov    rcx,r14
   140018f6a:	call   0x14000ea00
   140018f6f:	cmp    ebx,eax
   140018f71:	jl     0x140018ed5
   140018f77:	mov    r12,QWORD PTR [rsp+0x48]
   140018f7c:	test   edi,edi
   140018f7e:	je     0x140018fec
   140018f80:	mov    rcx,r14
   140018f83:	call   0x14000d100
   140018f88:	mov    rdx,QWORD PTR [rip+0x2d161]        # 0x1400460f0
   140018f8f:	lea    r8,[rip+0x1e38a]        # 0x140037320
   140018f96:	xor    r9d,r9d
   140018f99:	mov    rcx,rax
   140018f9c:	mov    rbx,rax
   140018f9f:	call   0x140011650
   140018fa4:	xor    r8d,r8d
   140018fa7:	lea    rdx,[rip+0x1e34a]        # 0x1400372f8
   140018fae:	mov    rcx,rbx
   140018fb1:	call   0x14000e270
   140018fb6:	movsxd rbp,edi
   140018fb9:	mov    r14,rax
   140018fbc:	shl    rbp,0x4
   140018fc0:	mov    rbx,rsi
   140018fc3:	add    rbp,rsi
   140018fc6:	cmp    rsi,rbp
   140018fc9:	je     0x140018fec
   140018fcb:	nop    DWORD PTR [rax+rax*1+0x0]
   140018fd0:	mov    rcx,r14
   140018fd3:	call   0x14000d100
   140018fd8:	mov    rcx,rax
   140018fdb:	mov    rdx,rbx
   140018fde:	call   0x14000d830
   140018fe3:	add    rbx,0x10
   140018fe7:	cmp    rbx,rbp
   140018fea:	jne    0x140018fd0
   140018fec:	mov    rbp,QWORD PTR [rsp+0x68]
   140018ff1:	sub    edi,0x1
   140018ff4:	mov    r15,QWORD PTR [rsp+0x40]
   140018ff9:	js     0x140019016
   140018ffb:	movsxd rbx,edi
   140018ffe:	shl    rbx,0x4
   140019002:	add    rbx,rsi
   140019005:	mov    rcx,rbx
   140019008:	call   0x14000c9c0
   14001900d:	sub    rbx,0x10
   140019011:	sub    edi,0x1
   140019014:	jns    0x140019005
   140019016:	mov    ebx,DWORD PTR [rsp+0x34]
   14001901a:	mov    rdi,QWORD PTR [rsp+0x78]
   14001901f:	and    ebx,0xc0000000
   140019025:	jne    0x140019041
   140019027:	test   rsi,rsi
   14001902a:	je     0x140019041
   14001902c:	mov    rax,QWORD PTR [rip+0x1935d]        # 0x140032390
   140019033:	mov    rdx,rsi
   140019036:	mov    rcx,QWORD PTR [rax]
   140019039:	mov    rax,QWORD PTR [rcx]
   14001903c:	call   QWORD PTR [rax+0x28]
   14001903f:	xor    esi,esi
   140019041:	test   ebx,ebx
   140019043:	mov    rbx,QWORD PTR [rsp+0x60]
   140019048:	jne    0x140019063
   14001904a:	test   rsi,rsi
   14001904d:	je     0x140019063
   14001904f:	mov    rcx,QWORD PTR [rip+0x1933a]        # 0x140032390
   140019056:	mov    rdx,rsi
   140019059:	mov    rcx,QWORD PTR [rcx]
   14001905c:	mov    r8,QWORD PTR [rcx]
   14001905f:	call   QWORD PTR [r8+0x28]
   140019063:	mov    rsi,QWORD PTR [rsp+0x70]
   140019068:	mov    eax,0x1
   14001906d:	add    rsp,0x50
   140019071:	pop    r14
   140019073:	ret    
   140019074:	int3   
   140019075:	int3   
   140019076:	int3   
   140019077:	int3   
   140019078:	int3   
   140019079:	int3   
   14001907a:	int3   
   14001907b:	int3   
   14001907c:	int3   
   14001907d:	int3   
   14001907e:	int3   
   14001907f:	int3   
   140019080:	rex push rbp
   140019082:	lea    rbp,[rsp-0x57]
   140019087:	sub    rsp,0xb0
   14001908e:	mov    rdx,QWORD PTR [rcx+0x8]
   140019092:	lea    rax,[rip+0x1e29f]        # 0x140037338
   140019099:	mov    QWORD PTR [rbp+0x1f],rax
   14001909d:	lea    rcx,[rbp-0x39]
   1400190a1:	lea    rax,[rip+0x1e2a8]        # 0x140037350
   1400190a8:	mov    QWORD PTR [rbp+0x27],rax
   1400190ac:	lea    rax,[rip+0x1e2b5]        # 0x140037368
   1400190b3:	mov    QWORD PTR [rbp+0x2f],rax
   1400190b7:	lea    rax,[rip+0x1e2c2]        # 0x140037380
   1400190be:	mov    QWORD PTR [rbp+0x37],rax
   1400190c2:	lea    rax,[rip+0x1e2cf]        # 0x140037398
   1400190c9:	mov    QWORD PTR [rbp+0x3f],rax
   1400190cd:	lea    rax,[rip+0x1e2dc]        # 0x1400373b0
   1400190d4:	mov    QWORD PTR [rbp+0x47],rax
   1400190d8:	call   0x14000c540
   1400190dd:	lea    rcx,[rbp-0x39]
   1400190e1:	call   0x14000ff00
   1400190e6:	test   al,al
   1400190e8:	je     0x1400191ef
   1400190ee:	mov    QWORD PTR [rsp+0xc0],rbx
   1400190f6:	lea    rcx,[rbp-0x39]
   1400190fa:	call   0x14000e980
   1400190ff:	mov    rdx,QWORD PTR [rip+0x2cfea]        # 0x1400460f0
   140019106:	lea    r8,[rip+0x19693]        # 0x1400327a0
   14001910d:	xor    r9d,r9d
   140019110:	mov    rcx,rax
   140019113:	call   0x14000ee70
   140019118:	xor    r10d,r10d
   14001911b:	lea    r11,[rbp+0x1f]
   14001911f:	nop
   140019120:	mov    r9,QWORD PTR [r11]
   140019123:	mov    rcx,rax
   140019126:	sub    r9,rax
   140019129:	nop    DWORD PTR [rax+0x0]
   140019130:	movzx  r8d,BYTE PTR [rcx]
   140019134:	movzx  edx,BYTE PTR [rcx+r9*1]
   140019139:	sub    r8d,edx
   14001913c:	jne    0x140019145
   14001913e:	inc    rcx
   140019141:	test   edx,edx
   140019143:	jne    0x140019130
   140019145:	test   r8d,r8d
   140019148:	je     0x140019159
   14001914a:	inc    r10d
   14001914d:	add    r11,0x8
   140019151:	cmp    r10d,0x6
   140019155:	jb     0x140019120
   140019157:	jmp    0x1400191cd
   140019159:	lea    rcx,[rbp-0x39]
   14001915d:	call   0x14000e980
   140019162:	xor    r8d,r8d
   140019165:	lea    rdx,[rip+0x1e25c]        # 0x1400373c8
   14001916c:	mov    rcx,rax
   14001916f:	call   0x14000e1f0
   140019174:	mov    rbx,rax
   140019177:	test   rax,rax
   14001917a:	je     0x14001919e
   14001917c:	lea    rdx,[rip+0x1961d]        # 0x1400327a0
   140019183:	mov    rcx,rax
   140019186:	call   0x14000df80
   14001918b:	test   al,al
   14001918d:	je     0x14001919e
   14001918f:	lea    rdx,[rip+0x1e242]        # 0x1400373d8
   140019196:	mov    rcx,rbx
   140019199:	call   0x1400116c0
   14001919e:	lea    rcx,[rbp-0x39]
   1400191a2:	call   0x14000e980
   1400191a7:	xor    r8d,r8d
   1400191aa:	lea    rdx,[rip+0x1e22f]        # 0x1400373e0
   1400191b1:	mov    rcx,rax
   1400191b4:	call   0x14000e1f0
   1400191b9:	test   rax,rax
   1400191bc:	je     0x1400191cd
   1400191be:	lea    rdx,[rip+0x1e213]        # 0x1400373d8
   1400191c5:	mov    rcx,rax
   1400191c8:	call   0x1400116c0
   1400191cd:	lea    rcx,[rbp-0x39]
   1400191d1:	call   0x14000cc20
   1400191d6:	lea    rcx,[rbp-0x39]
   1400191da:	call   0x14000ff00
   1400191df:	test   al,al
   1400191e1:	jne    0x1400190f6
   1400191e7:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400191ef:	cmp    DWORD PTR [rbp-0x29],0x0
   1400191f3:	mov    rdx,QWORD PTR [rbp-0x31]
   1400191f7:	mov    DWORD PTR [rbp-0x39],0x0
   1400191fe:	jl     0x140019245
   140019200:	lea    rax,[rbp-0x21]
   140019204:	cmp    rdx,rax
   140019207:	je     0x140019245
   140019209:	test   rdx,rdx
   14001920c:	je     0x140019227
   14001920e:	test   DWORD PTR [rbp-0x25],0xc0000000
   140019215:	jne    0x140019227
   140019217:	mov    rax,QWORD PTR [rip+0x19172]        # 0x140032390
   14001921e:	mov    rcx,QWORD PTR [rax]
   140019221:	mov    rax,QWORD PTR [rcx]
   140019224:	call   QWORD PTR [rax+0x28]
   140019227:	mov    eax,DWORD PTR [rbp-0x25]
   14001922a:	lea    rdx,[rbp-0x21]
   14001922e:	and    eax,0x3fffffff
   140019233:	mov    QWORD PTR [rbp-0x31],rdx
   140019237:	bts    eax,0x1f
   14001923b:	mov    DWORD PTR [rbp-0x29],0x4
   140019242:	mov    DWORD PTR [rbp-0x25],eax
   140019245:	test   DWORD PTR [rbp-0x25],0xc0000000
   14001924c:	jne    0x140019263
   14001924e:	test   rdx,rdx
   140019251:	je     0x140019263
   140019253:	mov    rax,QWORD PTR [rip+0x19136]        # 0x140032390
   14001925a:	mov    rcx,QWORD PTR [rax]
   14001925d:	mov    rax,QWORD PTR [rcx]
   140019260:	call   QWORD PTR [rax+0x28]
   140019263:	mov    eax,0x1
   140019268:	add    rsp,0xb0
   14001926f:	pop    rbp
   140019270:	ret    
   140019271:	int3   
   140019272:	int3   
   140019273:	int3   
   140019274:	int3   
   140019275:	int3   
   140019276:	int3   
   140019277:	int3   
   140019278:	int3   
   140019279:	int3   
   14001927a:	int3   
   14001927b:	int3   
   14001927c:	int3   
   14001927d:	int3   
   14001927e:	int3   
   14001927f:	int3   
   140019280:	sub    rsp,0x88
   140019287:	mov    rdx,QWORD PTR [rcx+0x8]
   14001928b:	lea    rcx,[rsp+0x20]
   140019290:	call   0x14000c540
   140019295:	lea    rcx,[rsp+0x20]
   14001929a:	call   0x14000ff00
   14001929f:	test   al,al
   1400192a1:	je     0x140019355
   1400192a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400192b0:	lea    rcx,[rsp+0x20]
   1400192b5:	call   0x14000e980
   1400192ba:	mov    rdx,QWORD PTR [rip+0x2ce2f]        # 0x1400460f0
   1400192c1:	lea    r8,[rip+0x194d8]        # 0x1400327a0
   1400192c8:	xor    r9d,r9d
   1400192cb:	mov    rcx,rax
   1400192ce:	call   0x14000ee70
   1400192d3:	lea    rdx,[rip+0x1e116]        # 0x1400373f0
   1400192da:	mov    rcx,rax
   1400192dd:	call   0x140028260
   1400192e2:	test   eax,eax
   1400192e4:	jne    0x140019339
   1400192e6:	lea    rcx,[rsp+0x20]
   1400192eb:	call   0x14000e980
   1400192f0:	mov    rdx,QWORD PTR [rip+0x2cdf9]        # 0x1400460f0
   1400192f7:	lea    r8,[rip+0x1e102]        # 0x140037400
   1400192fe:	xor    r9d,r9d
   140019301:	mov    rcx,rax
   140019304:	call   0x140011650
   140019309:	lea    rcx,[rsp+0x20]
   14001930e:	call   0x14000e980
   140019313:	xor    r8d,r8d
   140019316:	lea    rdx,[rip+0x1e0ef]        # 0x14003740c
   14001931d:	mov    rcx,rax
   140019320:	call   0x14000e1f0
   140019325:	test   rax,rax
   140019328:	je     0x140019339
   14001932a:	lea    rdx,[rip+0x1e0e7]        # 0x140037418
   140019331:	mov    rcx,rax
   140019334:	call   0x1400116c0
   140019339:	lea    rcx,[rsp+0x20]
   14001933e:	call   0x14000cc20
   140019343:	lea    rcx,[rsp+0x20]
   140019348:	call   0x14000ff00
   14001934d:	test   al,al
   14001934f:	jne    0x1400192b0
   140019355:	cmp    DWORD PTR [rsp+0x30],0x0
   14001935a:	mov    rdx,QWORD PTR [rsp+0x28]
   14001935f:	mov    DWORD PTR [rsp+0x20],0x0
   140019367:	jl     0x1400193b5
   140019369:	lea    rax,[rsp+0x38]
   14001936e:	cmp    rdx,rax
   140019371:	je     0x1400193b5
   140019373:	test   rdx,rdx
   140019376:	je     0x140019392
   140019378:	test   DWORD PTR [rsp+0x34],0xc0000000
   140019380:	jne    0x140019392
   140019382:	mov    rax,QWORD PTR [rip+0x19007]        # 0x140032390
   140019389:	mov    rcx,QWORD PTR [rax]
   14001938c:	mov    rax,QWORD PTR [rcx]
   14001938f:	call   QWORD PTR [rax+0x28]
   140019392:	mov    eax,DWORD PTR [rsp+0x34]
   140019396:	lea    rdx,[rsp+0x38]
   14001939b:	and    eax,0x3fffffff
   1400193a0:	mov    QWORD PTR [rsp+0x28],rdx
   1400193a5:	bts    eax,0x1f
   1400193a9:	mov    DWORD PTR [rsp+0x30],0x4
   1400193b1:	mov    DWORD PTR [rsp+0x34],eax
   1400193b5:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400193bd:	jne    0x1400193d4
   1400193bf:	test   rdx,rdx
   1400193c2:	je     0x1400193d4
   1400193c4:	mov    rax,QWORD PTR [rip+0x18fc5]        # 0x140032390
   1400193cb:	mov    rcx,QWORD PTR [rax]
   1400193ce:	mov    rax,QWORD PTR [rcx]
   1400193d1:	call   QWORD PTR [rax+0x28]
   1400193d4:	mov    eax,0x1
   1400193d9:	add    rsp,0x88
   1400193e0:	ret    
   1400193e1:	int3   
   1400193e2:	int3   
   1400193e3:	int3   
   1400193e4:	int3   
   1400193e5:	int3   
   1400193e6:	int3   
   1400193e7:	int3   
   1400193e8:	int3   
   1400193e9:	int3   
   1400193ea:	int3   
   1400193eb:	int3   
   1400193ec:	int3   
   1400193ed:	int3   
   1400193ee:	int3   
   1400193ef:	int3   
   1400193f0:	sub    rsp,0x88
   1400193f7:	mov    rdx,QWORD PTR [rcx+0x8]
   1400193fb:	lea    rcx,[rsp+0x20]
   140019400:	call   0x14000c540
   140019405:	lea    rcx,[rsp+0x20]
   14001940a:	call   0x14000ff00
   14001940f:	test   al,al
   140019411:	je     0x140019484
   140019413:	lea    rcx,[rsp+0x20]
   140019418:	call   0x14000e980
   14001941d:	mov    rdx,QWORD PTR [rip+0x2cccc]        # 0x1400460f0
   140019424:	lea    r8,[rip+0x19375]        # 0x1400327a0
   14001942b:	xor    r9d,r9d
   14001942e:	mov    rcx,rax
   140019431:	call   0x14000ee70
   140019436:	lea    rdx,[rip+0x1defb]        # 0x140037338
   14001943d:	mov    rcx,rax
   140019440:	call   0x140028260
   140019445:	test   eax,eax
   140019447:	jne    0x14001946c
   140019449:	lea    rcx,[rsp+0x20]
   14001944e:	call   0x14000e980
   140019453:	mov    rdx,QWORD PTR [rip+0x2cc96]        # 0x1400460f0
   14001945a:	lea    r8,[rip+0x1dfbf]        # 0x140037420
   140019461:	xor    r9d,r9d
   140019464:	mov    rcx,rax
   140019467:	call   0x140011650
   14001946c:	lea    rcx,[rsp+0x20]
   140019471:	call   0x14000cc20
   140019476:	lea    rcx,[rsp+0x20]
   14001947b:	call   0x14000ff00
   140019480:	test   al,al
   140019482:	jne    0x140019413
   140019484:	cmp    DWORD PTR [rsp+0x30],0x0
   140019489:	mov    rdx,QWORD PTR [rsp+0x28]
   14001948e:	mov    DWORD PTR [rsp+0x20],0x0
   140019496:	jl     0x1400194e4
   140019498:	lea    rax,[rsp+0x38]
   14001949d:	cmp    rdx,rax
   1400194a0:	je     0x1400194e4
   1400194a2:	test   rdx,rdx
   1400194a5:	je     0x1400194c1
   1400194a7:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400194af:	jne    0x1400194c1
   1400194b1:	mov    rax,QWORD PTR [rip+0x18ed8]        # 0x140032390
   1400194b8:	mov    rcx,QWORD PTR [rax]
   1400194bb:	mov    rax,QWORD PTR [rcx]
   1400194be:	call   QWORD PTR [rax+0x28]
   1400194c1:	mov    eax,DWORD PTR [rsp+0x34]
   1400194c5:	lea    rdx,[rsp+0x38]
   1400194ca:	and    eax,0x3fffffff
   1400194cf:	mov    QWORD PTR [rsp+0x28],rdx
   1400194d4:	bts    eax,0x1f
   1400194d8:	mov    DWORD PTR [rsp+0x30],0x4
   1400194e0:	mov    DWORD PTR [rsp+0x34],eax
   1400194e4:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400194ec:	jne    0x140019503
   1400194ee:	test   rdx,rdx
   1400194f1:	je     0x140019503
   1400194f3:	mov    rax,QWORD PTR [rip+0x18e96]        # 0x140032390
   1400194fa:	mov    rcx,QWORD PTR [rax]
   1400194fd:	mov    rax,QWORD PTR [rcx]
   140019500:	call   QWORD PTR [rax+0x28]
   140019503:	mov    eax,0x1
   140019508:	add    rsp,0x88
   14001950f:	ret    
   140019510:	rex push rbx
   140019512:	push   rdi
   140019513:	sub    rsp,0x88
   14001951a:	mov    rdx,QWORD PTR [rcx+0x8]
   14001951e:	mov    rdi,rcx
   140019521:	lea    rcx,[rsp+0x20]
   140019526:	call   0x14000c540
   14001952b:	lea    rcx,[rsp+0x20]
   140019530:	call   0x14000ff00
   140019535:	xor    ebx,ebx
   140019537:	test   al,al
   140019539:	je     0x1400195b1
   14001953b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019540:	lea    rcx,[rsp+0x20]
   140019545:	call   0x14000e980
   14001954a:	mov    rdx,QWORD PTR [rip+0x2cb9f]        # 0x1400460f0
   140019551:	lea    r8,[rip+0x19248]        # 0x1400327a0
   140019558:	mov    r9d,ebx
   14001955b:	mov    rcx,rax
   14001955e:	call   0x14000ee70
   140019563:	lea    rdx,[rip+0x1dec6]        # 0x140037430
   14001956a:	mov    rcx,rax
   14001956d:	call   0x140028260
   140019572:	test   eax,eax
   140019574:	jne    0x140019599
   140019576:	lea    rcx,[rsp+0x20]
   14001957b:	call   0x14000e980
   140019580:	mov    rdx,QWORD PTR [rip+0x2cb69]        # 0x1400460f0
   140019587:	lea    r8,[rip+0x1deb2]        # 0x140037440
   14001958e:	mov    r9d,ebx
   140019591:	mov    rcx,rax
   140019594:	call   0x140011650
   140019599:	lea    rcx,[rsp+0x20]
   14001959e:	call   0x14000cc20
   1400195a3:	lea    rcx,[rsp+0x20]
   1400195a8:	call   0x14000ff00
   1400195ad:	test   al,al
   1400195af:	jne    0x140019540
   1400195b1:	mov    rdx,QWORD PTR [rsp+0x28]
   1400195b6:	mov    DWORD PTR [rsp+0x20],ebx
   1400195ba:	cmp    DWORD PTR [rsp+0x30],ebx
   1400195be:	jl     0x14001960c
   1400195c0:	lea    rax,[rsp+0x38]
   1400195c5:	cmp    rdx,rax
   1400195c8:	je     0x14001960c
   1400195ca:	test   rdx,rdx
   1400195cd:	je     0x1400195e9
   1400195cf:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400195d7:	jne    0x1400195e9
   1400195d9:	mov    rax,QWORD PTR [rip+0x18db0]        # 0x140032390
   1400195e0:	mov    rcx,QWORD PTR [rax]
   1400195e3:	mov    rax,QWORD PTR [rcx]
   1400195e6:	call   QWORD PTR [rax+0x28]
   1400195e9:	mov    eax,DWORD PTR [rsp+0x34]
   1400195ed:	lea    rdx,[rsp+0x38]
   1400195f2:	and    eax,0x3fffffff
   1400195f7:	mov    QWORD PTR [rsp+0x28],rdx
   1400195fc:	bts    eax,0x1f
   140019600:	mov    DWORD PTR [rsp+0x30],0x4
   140019608:	mov    DWORD PTR [rsp+0x34],eax
   14001960c:	test   DWORD PTR [rsp+0x34],0xc0000000
   140019614:	jne    0x14001962b
   140019616:	test   rdx,rdx
   140019619:	je     0x14001962b
   14001961b:	mov    rax,QWORD PTR [rip+0x18d6e]        # 0x140032390
   140019622:	mov    rcx,QWORD PTR [rax]
   140019625:	mov    rax,QWORD PTR [rcx]
   140019628:	call   QWORD PTR [rax+0x28]
   14001962b:	mov    rcx,QWORD PTR [rdi+0x8]
   14001962f:	lea    rdx,[rip+0x1dcb2]        # 0x1400372e8
   140019636:	mov    r8d,ebx
   140019639:	mov    QWORD PTR [rsp+0xa0],rbp
   140019641:	call   0x14000e1f0
   140019646:	test   rax,rax
   140019649:	je     0x1400197bd
   14001964f:	mov    r8d,ebx
   140019652:	lea    rdx,[rip+0x1dc9f]        # 0x1400372f8
   140019659:	mov    rcx,rax
   14001965c:	call   0x14000e1f0
   140019661:	mov    rbp,rax
   140019664:	test   rax,rax
   140019667:	je     0x1400197bd
   14001966d:	mov    QWORD PTR [rsp+0xa8],rsi
   140019675:	mov    rcx,rax
   140019678:	mov    esi,ebx
   14001967a:	call   0x14000ea00
   14001967f:	test   eax,eax
   140019681:	jle    0x1400196c7
   140019683:	mov    edx,esi
   140019685:	mov    rcx,rbp
   140019688:	call   0x14000e9b0
   14001968d:	mov    rdx,QWORD PTR [rip+0x2ca5c]        # 0x1400460f0
   140019694:	lea    r8,[rip+0x19105]        # 0x1400327a0
   14001969b:	mov    r9d,ebx
   14001969e:	mov    rcx,rax
   1400196a1:	call   0x14000ee70
   1400196a6:	lea    rdx,[rip+0x1dda3]        # 0x140037450
   1400196ad:	mov    rcx,rax
   1400196b0:	call   0x140028260
   1400196b5:	test   eax,eax
   1400196b7:	je     0x1400196e6
   1400196b9:	mov    rcx,rbp
   1400196bc:	inc    esi
   1400196be:	call   0x14000ea00
   1400196c3:	cmp    esi,eax
   1400196c5:	jl     0x140019683
   1400196c7:	mov    eax,0x1
   1400196cc:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400196d4:	mov    rbp,QWORD PTR [rsp+0xa0]
   1400196dc:	add    rsp,0x88
   1400196e3:	pop    rdi
   1400196e4:	pop    rbx
   1400196e5:	ret    
   1400196e6:	cmp    esi,0xffffffff
   1400196e9:	je     0x1400196c7
   1400196eb:	mov    QWORD PTR [rsp+0xb0],r12
   1400196f3:	lea    rdx,[rip+0x1db1e]        # 0x140037218
   1400196fa:	mov    QWORD PTR [rsp+0xb8],r14
   140019702:	mov    r8b,0x1
   140019705:	mov    rcx,rbp
   140019708:	mov    QWORD PTR [rsp+0x80],r15
   140019710:	call   0x140018b10
   140019715:	mov    edx,esi
   140019717:	mov    rcx,rbp
   14001971a:	mov    edi,eax
   14001971c:	call   0x14000e9b0
   140019721:	mov    rcx,rax
   140019724:	lea    rdx,[rip+0x1dbcd]        # 0x1400372f8
   14001972b:	mov    r8d,ebx
   14001972e:	call   0x14000e270
   140019733:	mov    edx,edi
   140019735:	mov    rcx,rbp
   140019738:	mov    r14,rax
   14001973b:	call   0x14000e9b0
   140019740:	mov    rcx,rax
   140019743:	lea    rdx,[rip+0x1dbae]        # 0x1400372f8
   14001974a:	mov    r8d,ebx
   14001974d:	call   0x14000e270
   140019752:	mov    rcx,r14
   140019755:	mov    r12,rax
   140019758:	call   0x14000ea00
   14001975d:	mov    r15d,eax
   140019760:	test   eax,eax
   140019762:	jle    0x14001978b
   140019764:	mov    edx,ebx
   140019766:	mov    rcx,r14
   140019769:	call   0x14000e9b0
   14001976e:	mov    rcx,r12
   140019771:	mov    rdi,rax
   140019774:	call   0x14000d100
   140019779:	mov    rcx,rax
   14001977c:	mov    rdx,rdi
   14001977f:	call   0x14000d830
   140019784:	inc    ebx
   140019786:	cmp    ebx,r15d
   140019789:	jl     0x140019764
   14001978b:	mov    r8d,0x1
   140019791:	mov    edx,esi
   140019793:	mov    rcx,rbp
   140019796:	call   0x14000d580
   14001979b:	mov    r15,QWORD PTR [rsp+0x80]
   1400197a3:	mov    eax,0x1
   1400197a8:	mov    r14,QWORD PTR [rsp+0xb8]
   1400197b0:	mov    r12,QWORD PTR [rsp+0xb0]
   1400197b8:	jmp    0x1400196cc
   1400197bd:	mov    eax,0x1
   1400197c2:	mov    rbp,QWORD PTR [rsp+0xa0]
   1400197ca:	add    rsp,0x88
   1400197d1:	pop    rdi
   1400197d2:	pop    rbx
   1400197d3:	ret    
   1400197d4:	int3   
   1400197d5:	int3   
   1400197d6:	int3   
   1400197d7:	int3   
   1400197d8:	int3   
   1400197d9:	int3   
   1400197da:	int3   
   1400197db:	int3   
   1400197dc:	int3   
   1400197dd:	int3   
   1400197de:	int3   
   1400197df:	int3   
   1400197e0:	rex push rbp
   1400197e2:	lea    rbp,[rsp-0x57]
   1400197e7:	sub    rsp,0xa0
   1400197ee:	mov    rdx,QWORD PTR [rcx+0x8]
   1400197f2:	lea    rcx,[rbp-0x19]
   1400197f6:	mov    QWORD PTR [rsp+0xc0],rsi
   1400197fe:	call   0x14000c540
   140019803:	lea    rcx,[rbp-0x19]
   140019807:	call   0x14000ff00
   14001980c:	xor    esi,esi
   14001980e:	test   al,al
   140019810:	je     0x140019993
   140019816:	mov    QWORD PTR [rsp+0x90],r14
   14001981e:	lea    r14,[rip+0x1dc3f]        # 0x140037464
   140019825:	mov    QWORD PTR [rsp+0xb8],rbx
   14001982d:	mov    QWORD PTR [rsp+0x98],rdi
   140019835:	lea    rcx,[rbp-0x19]
   140019839:	call   0x14000e980
   14001983e:	mov    rdx,QWORD PTR [rip+0x2c8ab]        # 0x1400460f0
   140019845:	lea    r8,[rip+0x18f54]        # 0x1400327a0
   14001984c:	mov    r9d,esi
   14001984f:	mov    rcx,rax
   140019852:	call   0x14000ee70
   140019857:	lea    rdx,[rip+0x1dba2]        # 0x140037400
   14001985e:	mov    rcx,rax
   140019861:	call   0x140028260
   140019866:	test   eax,eax
   140019868:	je     0x1400198a8
   14001986a:	lea    rcx,[rbp-0x19]
   14001986e:	call   0x14000e980
   140019873:	mov    rdx,QWORD PTR [rip+0x2c876]        # 0x1400460f0
   14001987a:	lea    r8,[rip+0x18f1f]        # 0x1400327a0
   140019881:	mov    r9d,esi
   140019884:	mov    rcx,rax
   140019887:	call   0x14000ee70
   14001988c:	mov    rcx,rsi
   14001988f:	nop
   140019890:	movzx  edx,BYTE PTR [rax+rcx*1]
   140019894:	inc    rcx
   140019897:	cmp    dl,BYTE PTR [r14+rcx*1-0x1]
   14001989c:	jne    0x140019a19
   1400198a2:	cmp    rcx,0x5
   1400198a6:	jne    0x140019890
   1400198a8:	lea    rcx,[rbp-0x19]
   1400198ac:	call   0x14000e980
   1400198b1:	mov    r8d,esi
   1400198b4:	lea    rdx,[rip+0x1dbb5]        # 0x140037470
   1400198bb:	mov    rcx,rax
   1400198be:	call   0x14000e1f0
   1400198c3:	mov    rdi,rax
   1400198c6:	test   rax,rax
   1400198c9:	je     0x140019961
   1400198cf:	lea    rdx,[rbp+0x67]
   1400198d3:	mov    QWORD PTR [rbp+0x67],rsi
   1400198d7:	mov    rcx,rax
   1400198da:	call   0x14000ef50
   1400198df:	mov    rcx,QWORD PTR [rbp+0x67]
   1400198e3:	test   rcx,rcx
   1400198e6:	je     0x1400198ed
   1400198e8:	cmp    BYTE PTR [rcx],sil
   1400198eb:	jne    0x140019914
   1400198ed:	lea    rcx,[rbp-0x19]
   1400198f1:	call   0x14000e980
   1400198f6:	lea    r9,[rip+0x18ea3]        # 0x1400327a0
   1400198fd:	mov    DWORD PTR [rsp+0x20],esi
   140019901:	lea    r8,[rbp+0x67]
   140019905:	mov    rcx,rax
   140019908:	lea    rdx,[rip+0x1d9ad]        # 0x1400372bc
   14001990f:	call   0x14000edc0
   140019914:	lea    rcx,[rbp-0x19]
   140019918:	call   0x14000e980
   14001991d:	lea    rcx,[rbp+0x67]
   140019921:	mov    rbx,rax
   140019924:	call   0x14001b050
   140019929:	mov    r9d,esi
   14001992c:	lea    rdx,[rip+0x1db4d]        # 0x140037480
   140019933:	mov    r8,rax
   140019936:	mov    rcx,rbx
   140019939:	call   0x140011650
   14001993e:	lea    rcx,[rbp-0x19]
   140019942:	call   0x14000e980
   140019947:	mov    rdx,rdi
   14001994a:	mov    rcx,rax
   14001994d:	call   0x140011000
   140019952:	cmp    QWORD PTR [rbp+0x67],rsi
   140019956:	je     0x140019961
   140019958:	lea    rcx,[rbp+0x67]
   14001995c:	call   0x14001b030
   140019961:	lea    rcx,[rbp-0x19]
   140019965:	call   0x14000cc20
   14001996a:	lea    rcx,[rbp-0x19]
   14001996e:	call   0x14000ff00
   140019973:	test   al,al
   140019975:	jne    0x140019835
   14001997b:	mov    r14,QWORD PTR [rsp+0x90]
   140019983:	mov    rdi,QWORD PTR [rsp+0x98]
   14001998b:	mov    rbx,QWORD PTR [rsp+0xb8]
   140019993:	cmp    DWORD PTR [rbp-0x9],0x0
   140019997:	mov    rdx,QWORD PTR [rbp-0x11]
   14001999b:	mov    DWORD PTR [rbp-0x19],esi
   14001999e:	mov    rsi,QWORD PTR [rsp+0xc0]
   1400199a6:	jl     0x1400199ed
   1400199a8:	lea    rax,[rbp-0x1]
   1400199ac:	cmp    rdx,rax
   1400199af:	je     0x1400199ed
   1400199b1:	test   rdx,rdx
   1400199b4:	je     0x1400199cf
   1400199b6:	test   DWORD PTR [rbp-0x5],0xc0000000
   1400199bd:	jne    0x1400199cf
   1400199bf:	mov    rax,QWORD PTR [rip+0x189ca]        # 0x140032390
   1400199c6:	mov    rcx,QWORD PTR [rax]
   1400199c9:	mov    rax,QWORD PTR [rcx]
   1400199cc:	call   QWORD PTR [rax+0x28]
   1400199cf:	mov    eax,DWORD PTR [rbp-0x5]
   1400199d2:	lea    rdx,[rbp-0x1]
   1400199d6:	and    eax,0x3fffffff
   1400199db:	mov    QWORD PTR [rbp-0x11],rdx
   1400199df:	bts    eax,0x1f
   1400199e3:	mov    DWORD PTR [rbp-0x9],0x4
   1400199ea:	mov    DWORD PTR [rbp-0x5],eax
   1400199ed:	test   DWORD PTR [rbp-0x5],0xc0000000
   1400199f4:	jne    0x140019a0b
   1400199f6:	test   rdx,rdx
   1400199f9:	je     0x140019a0b
   1400199fb:	mov    rax,QWORD PTR [rip+0x1898e]        # 0x140032390
   140019a02:	mov    rcx,QWORD PTR [rax]
   140019a05:	mov    rax,QWORD PTR [rcx]
   140019a08:	call   QWORD PTR [rax+0x28]
   140019a0b:	mov    eax,0x1
   140019a10:	add    rsp,0xa0
   140019a17:	pop    rbp
   140019a18:	ret    
   140019a19:	lea    rcx,[rbp-0x19]
   140019a1d:	call   0x14000e980
   140019a22:	mov    rdx,QWORD PTR [rip+0x2c6c7]        # 0x1400460f0
   140019a29:	lea    r8,[rip+0x18d70]        # 0x1400327a0
   140019a30:	mov    r9d,esi
   140019a33:	mov    rcx,rax
   140019a36:	call   0x14000ee70
   140019a3b:	lea    rdx,[rip+0x1d9fe]        # 0x140037440
   140019a42:	mov    rcx,rax
   140019a45:	call   0x140028260
   140019a4a:	test   eax,eax
   140019a4c:	jne    0x140019961
   140019a52:	lea    rcx,[rbp-0x19]
   140019a56:	call   0x14000e980
   140019a5b:	mov    r8d,esi
   140019a5e:	lea    rdx,[rip+0x1da0b]        # 0x140037470
   140019a65:	mov    rcx,rax
   140019a68:	call   0x14000e1f0
   140019a6d:	mov    rdi,rax
   140019a70:	test   rax,rax
   140019a73:	je     0x140019961
   140019a79:	lea    rdx,[rbp+0x67]
   140019a7d:	mov    QWORD PTR [rbp+0x67],rsi
   140019a81:	mov    rcx,rax
   140019a84:	call   0x14000ef50
   140019a89:	jmp    0x140019914
   140019a8e:	int3   
   140019a8f:	int3   
   140019a90:	rex push rbx
   140019a92:	push   rsi
   140019a93:	sub    rsp,0x28
   140019a97:	mov    rcx,QWORD PTR [rcx+0x8]
   140019a9b:	lea    rdx,[rip+0x1d846]        # 0x1400372e8
   140019aa2:	xor    ebx,ebx
   140019aa4:	mov    r8d,ebx
   140019aa7:	call   0x14000e1f0
   140019aac:	test   rax,rax
   140019aaf:	je     0x140019bed
   140019ab5:	mov    r8d,ebx
   140019ab8:	lea    rdx,[rip+0x1d839]        # 0x1400372f8
   140019abf:	mov    rcx,rax
   140019ac2:	call   0x14000e1f0
   140019ac7:	mov    rsi,rax
   140019aca:	test   rax,rax
   140019acd:	je     0x140019bed
   140019ad3:	xor    r8d,r8d
   140019ad6:	mov    QWORD PTR [rsp+0x58],r14
   140019adb:	lea    rdx,[rip+0x1d9ae]        # 0x140037490
   140019ae2:	mov    rcx,rax
   140019ae5:	call   0x140018b10
   140019aea:	mov    r14d,eax
   140019aed:	cmp    eax,0xffffffff
   140019af0:	jne    0x140019b01
   140019af2:	lea    eax,[rbx+0x1]
   140019af5:	mov    r14,QWORD PTR [rsp+0x58]
   140019afa:	add    rsp,0x28
   140019afe:	pop    rsi
   140019aff:	pop    rbx
   140019b00:	ret    
   140019b01:	mov    edx,r14d
   140019b04:	mov    QWORD PTR [rsp+0x40],rbp
   140019b09:	mov    rcx,rsi
   140019b0c:	call   0x14000e9b0
   140019b11:	mov    rcx,rax
   140019b14:	lea    rdx,[rip+0x1d7dd]        # 0x1400372f8
   140019b1b:	mov    r8d,ebx
   140019b1e:	call   0x14000e1f0
   140019b23:	mov    rbp,rax
   140019b26:	test   rax,rax
   140019b29:	jne    0x140019b3f
   140019b2b:	mov    r14,QWORD PTR [rsp+0x58]
   140019b30:	lea    eax,[rbp+0x1]
   140019b33:	mov    rbp,QWORD PTR [rsp+0x40]
   140019b38:	add    rsp,0x28
   140019b3c:	pop    rsi
   140019b3d:	pop    rbx
   140019b3e:	ret    
   140019b3f:	mov    QWORD PTR [rsp+0x50],r12
   140019b44:	lea    rdx,[rip+0x1d6cd]        # 0x140037218
   140019b4b:	mov    r8b,0x1
   140019b4e:	mov    QWORD PTR [rsp+0x20],r15
   140019b53:	mov    rcx,rsi
   140019b56:	call   0x140018b10
   140019b5b:	mov    edx,eax
   140019b5d:	mov    rcx,rsi
   140019b60:	call   0x14000e9b0
   140019b65:	mov    rcx,rax
   140019b68:	lea    rdx,[rip+0x1d789]        # 0x1400372f8
   140019b6f:	mov    r8d,ebx
   140019b72:	call   0x14000e270
   140019b77:	mov    rcx,rbp
   140019b7a:	mov    r12,rax
   140019b7d:	call   0x14000ea00
   140019b82:	mov    r15d,eax
   140019b85:	test   eax,eax
   140019b87:	jle    0x140019bbc
   140019b89:	mov    QWORD PTR [rsp+0x48],rdi
   140019b8e:	xchg   ax,ax
   140019b90:	mov    edx,ebx
   140019b92:	mov    rcx,rbp
   140019b95:	call   0x14000e9b0
   140019b9a:	mov    rcx,r12
   140019b9d:	mov    rdi,rax
   140019ba0:	call   0x14000d100
   140019ba5:	mov    rcx,rax
   140019ba8:	mov    rdx,rdi
   140019bab:	call   0x14000d830
   140019bb0:	inc    ebx
   140019bb2:	cmp    ebx,r15d
   140019bb5:	jl     0x140019b90
   140019bb7:	mov    rdi,QWORD PTR [rsp+0x48]
   140019bbc:	mov    r8d,0x1
   140019bc2:	mov    edx,r14d
   140019bc5:	mov    rcx,rsi
   140019bc8:	call   0x14000d580
   140019bcd:	mov    r15,QWORD PTR [rsp+0x20]
   140019bd2:	mov    eax,0x1
   140019bd7:	mov    r12,QWORD PTR [rsp+0x50]
   140019bdc:	mov    rbp,QWORD PTR [rsp+0x40]
   140019be1:	mov    r14,QWORD PTR [rsp+0x58]
   140019be6:	add    rsp,0x28
   140019bea:	pop    rsi
   140019beb:	pop    rbx
   140019bec:	ret    
   140019bed:	mov    eax,0x1
   140019bf2:	add    rsp,0x28
   140019bf6:	pop    rsi
   140019bf7:	pop    rbx
   140019bf8:	ret    
   140019bf9:	int3   
   140019bfa:	int3   
   140019bfb:	int3   
   140019bfc:	int3   
   140019bfd:	int3   
   140019bfe:	int3   
   140019bff:	int3   
   140019c00:	rex push rbp
   140019c02:	lea    rbp,[rsp-0x57]
   140019c07:	sub    rsp,0xa0
   140019c0e:	mov    rdx,QWORD PTR [rcx+0x8]
   140019c12:	lea    rax,[rip+0x1d827]        # 0x140037440
   140019c19:	mov    QWORD PTR [rbp+0x2f],rax
   140019c1d:	lea    rcx,[rbp-0x29]
   140019c21:	lea    rax,[rip+0x1d878]        # 0x1400374a0
   140019c28:	mov    QWORD PTR [rbp+0x37],rax
   140019c2c:	lea    rax,[rip+0x1d831]        # 0x140037464
   140019c33:	mov    QWORD PTR [rbp+0x3f],rax
   140019c37:	lea    rax,[rip+0x1d7c2]        # 0x140037400
   140019c3e:	mov    QWORD PTR [rbp+0x47],rax
   140019c42:	lea    rax,[rip+0x1d85f]        # 0x1400374a8
   140019c49:	mov    QWORD PTR [rbp+0x4f],rax
   140019c4d:	call   0x14000c540
   140019c52:	lea    rcx,[rbp-0x29]
   140019c56:	call   0x14000ff00
   140019c5b:	test   al,al
   140019c5d:	je     0x140019d65
   140019c63:	mov    QWORD PTR [rsp+0xb0],rbx
   140019c6b:	mov    QWORD PTR [rsp+0xb8],rdi
   140019c73:	lea    rcx,[rbp-0x29]
   140019c77:	call   0x14000e980
   140019c7c:	mov    rdx,QWORD PTR [rip+0x2c46d]        # 0x1400460f0
   140019c83:	lea    r8,[rip+0x18b16]        # 0x1400327a0
   140019c8a:	xor    r9d,r9d
   140019c8d:	mov    rcx,rax
   140019c90:	call   0x14000ee70
   140019c95:	xor    r10d,r10d
   140019c98:	lea    r11,[rbp+0x2f]
   140019c9c:	nop    DWORD PTR [rax+0x0]
   140019ca0:	mov    r9,QWORD PTR [r11]
   140019ca3:	mov    rcx,rax
   140019ca6:	sub    r9,rax
   140019ca9:	nop    DWORD PTR [rax+0x0]
   140019cb0:	movzx  r8d,BYTE PTR [rcx]
   140019cb4:	movzx  edx,BYTE PTR [rcx+r9*1]
   140019cb9:	sub    r8d,edx
   140019cbc:	jne    0x140019cc5
   140019cbe:	inc    rcx
   140019cc1:	test   edx,edx
   140019cc3:	jne    0x140019cb0
   140019cc5:	test   r8d,r8d
   140019cc8:	je     0x140019cd9
   140019cca:	inc    r10d
   140019ccd:	add    r11,0x8
   140019cd1:	cmp    r10d,0x5
   140019cd5:	jb     0x140019ca0
   140019cd7:	jmp    0x140019d3b
   140019cd9:	lea    rcx,[rbp-0x29]
   140019cdd:	call   0x14000e980
   140019ce2:	xor    r8d,r8d
   140019ce5:	lea    rdx,[rip+0x1d794]        # 0x140037480
   140019cec:	mov    rcx,rax
   140019cef:	call   0x14000e1f0
   140019cf4:	mov    rdi,rax
   140019cf7:	test   rax,rax
   140019cfa:	je     0x140019d3b
   140019cfc:	lea    rcx,[rbp-0x29]
   140019d00:	call   0x14000e980
   140019d05:	xor    edx,edx
   140019d07:	mov    rcx,rdi
   140019d0a:	mov    rbx,rax
   140019d0d:	call   0x14000f030
   140019d12:	mov    r8,rax
   140019d15:	lea    rdx,[rip+0x1d5a0]        # 0x1400372bc
   140019d1c:	xor    r9d,r9d
   140019d1f:	mov    rcx,rbx
   140019d22:	call   0x140011650
   140019d27:	lea    rcx,[rbp-0x29]
   140019d2b:	call   0x14000e980
   140019d30:	mov    rcx,rax
   140019d33:	mov    rdx,rdi
   140019d36:	call   0x140011000
   140019d3b:	lea    rcx,[rbp-0x29]
   140019d3f:	call   0x14000cc20
   140019d44:	lea    rcx,[rbp-0x29]
   140019d48:	call   0x14000ff00
   140019d4d:	test   al,al
   140019d4f:	jne    0x140019c73
   140019d55:	mov    rdi,QWORD PTR [rsp+0xb8]
   140019d5d:	mov    rbx,QWORD PTR [rsp+0xb0]
   140019d65:	cmp    DWORD PTR [rbp-0x19],0x0
   140019d69:	mov    rdx,QWORD PTR [rbp-0x21]
   140019d6d:	mov    DWORD PTR [rbp-0x29],0x0
   140019d74:	jl     0x140019dbb
   140019d76:	lea    rax,[rbp-0x11]
   140019d7a:	cmp    rdx,rax
   140019d7d:	je     0x140019dbb
   140019d7f:	test   rdx,rdx
   140019d82:	je     0x140019d9d
   140019d84:	test   DWORD PTR [rbp-0x15],0xc0000000
   140019d8b:	jne    0x140019d9d
   140019d8d:	mov    rax,QWORD PTR [rip+0x185fc]        # 0x140032390
   140019d94:	mov    rcx,QWORD PTR [rax]
   140019d97:	mov    rax,QWORD PTR [rcx]
   140019d9a:	call   QWORD PTR [rax+0x28]
   140019d9d:	mov    eax,DWORD PTR [rbp-0x15]
   140019da0:	lea    rdx,[rbp-0x11]
   140019da4:	and    eax,0x3fffffff
   140019da9:	mov    QWORD PTR [rbp-0x21],rdx
   140019dad:	bts    eax,0x1f
   140019db1:	mov    DWORD PTR [rbp-0x19],0x4
   140019db8:	mov    DWORD PTR [rbp-0x15],eax
   140019dbb:	test   DWORD PTR [rbp-0x15],0xc0000000
   140019dc2:	jne    0x140019dd9
   140019dc4:	test   rdx,rdx
   140019dc7:	je     0x140019dd9
   140019dc9:	mov    rax,QWORD PTR [rip+0x185c0]        # 0x140032390
   140019dd0:	mov    rcx,QWORD PTR [rax]
   140019dd3:	mov    rax,QWORD PTR [rcx]
   140019dd6:	call   QWORD PTR [rax+0x28]
   140019dd9:	mov    eax,0x1
   140019dde:	add    rsp,0xa0
   140019de5:	pop    rbp
   140019de6:	ret    
   140019de7:	int3   
   140019de8:	int3   
   140019de9:	int3   
   140019dea:	int3   
   140019deb:	int3   
   140019dec:	int3   
   140019ded:	int3   
   140019dee:	int3   
   140019def:	int3   
   140019df0:	mov    QWORD PTR [rsp+0x8],rbx
   140019df5:	push   rdi
   140019df6:	sub    rsp,0x20
   140019dfa:	mov    rdi,rcx
   140019dfd:	lea    rdx,[rip+0x1d6b4]        # 0x1400374b8
   140019e04:	mov    rcx,QWORD PTR [rcx+0x8]
   140019e08:	xor    r9d,r9d
   140019e0b:	xor    r8d,r8d
   140019e0e:	call   0x14000ec40
   140019e13:	mov    rcx,QWORD PTR [rdi+0x8]
   140019e17:	lea    rdx,[rip+0x1d6b6]        # 0x1400374d4
   140019e1e:	mov    ebx,eax
   140019e20:	xor    r9d,r9d
   140019e23:	lea    r8d,[rbx+0x1]
   140019e27:	call   0x140011610
   140019e2c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019e30:	lea    r8d,[rbx+0x1]
   140019e34:	xor    r9d,r9d
   140019e37:	lea    rdx,[rip+0x1d67a]        # 0x1400374b8
   140019e3e:	call   0x140011610
   140019e43:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e48:	mov    eax,0x1
   140019e4d:	add    rsp,0x20
   140019e51:	pop    rdi
   140019e52:	ret    
   140019e53:	int3   
   140019e54:	int3   
   140019e55:	int3   
   140019e56:	int3   
   140019e57:	int3   
   140019e58:	int3   
   140019e59:	int3   
   140019e5a:	int3   
   140019e5b:	int3   
   140019e5c:	int3   
   140019e5d:	int3   
   140019e5e:	int3   
   140019e5f:	int3   
   140019e60:	mov    QWORD PTR [rsp+0x8],rbx
   140019e65:	push   rdi
   140019e66:	sub    rsp,0x20
   140019e6a:	mov    rdi,rcx
   140019e6d:	lea    rdx,[rip+0x1d644]        # 0x1400374b8
   140019e74:	mov    rcx,QWORD PTR [rcx+0x8]
   140019e78:	xor    r9d,r9d
   140019e7b:	xor    r8d,r8d
   140019e7e:	call   0x14000ec40
   140019e83:	mov    rcx,QWORD PTR [rdi+0x8]
   140019e87:	lea    rdx,[rip+0x1d656]        # 0x1400374e4
   140019e8e:	mov    ebx,eax
   140019e90:	xor    r9d,r9d
   140019e93:	lea    r8d,[rbx+0x1]
   140019e97:	call   0x140011610
   140019e9c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019ea0:	lea    r8d,[rbx+0x1]
   140019ea4:	xor    r9d,r9d
   140019ea7:	lea    rdx,[rip+0x1d60a]        # 0x1400374b8
   140019eae:	call   0x140011610
   140019eb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140019eb8:	mov    eax,0x1
   140019ebd:	add    rsp,0x20
   140019ec1:	pop    rdi
   140019ec2:	ret    
   140019ec3:	int3   
   140019ec4:	int3   
   140019ec5:	int3   
   140019ec6:	int3   
   140019ec7:	int3   
   140019ec8:	int3   
   140019ec9:	int3   
   140019eca:	int3   
   140019ecb:	int3   
   140019ecc:	int3   
   140019ecd:	int3   
   140019ece:	int3   
   140019ecf:	int3   
   140019ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140019ed5:	push   rdi
   140019ed6:	sub    rsp,0x20
   140019eda:	mov    rdi,rcx
   140019edd:	lea    rdx,[rip+0x1d5d4]        # 0x1400374b8
   140019ee4:	mov    rcx,QWORD PTR [rcx+0x8]
   140019ee8:	xor    r9d,r9d
   140019eeb:	xor    r8d,r8d
   140019eee:	call   0x14000ec40
   140019ef3:	mov    rcx,QWORD PTR [rdi+0x8]
   140019ef7:	lea    rdx,[rip+0x1d5ee]        # 0x1400374ec
   140019efe:	mov    ebx,eax
   140019f00:	xor    r9d,r9d
   140019f03:	lea    r8d,[rbx+0x1]
   140019f07:	call   0x140011610
   140019f0c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019f10:	lea    r8d,[rbx+0x1]
   140019f14:	xor    r9d,r9d
   140019f17:	lea    rdx,[rip+0x1d59a]        # 0x1400374b8
   140019f1e:	call   0x140011610
   140019f23:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f28:	mov    eax,0x1
   140019f2d:	add    rsp,0x20
   140019f31:	pop    rdi
   140019f32:	ret    
   140019f33:	int3   
   140019f34:	int3   
   140019f35:	int3   
   140019f36:	int3   
   140019f37:	int3   
   140019f38:	int3   
   140019f39:	int3   
   140019f3a:	int3   
   140019f3b:	int3   
   140019f3c:	int3   
   140019f3d:	int3   
   140019f3e:	int3   
   140019f3f:	int3   
   140019f40:	mov    QWORD PTR [rsp+0x8],rbx
   140019f45:	push   rdi
   140019f46:	sub    rsp,0x20
   140019f4a:	mov    rdi,rcx
   140019f4d:	lea    rdx,[rip+0x1d564]        # 0x1400374b8
   140019f54:	mov    rcx,QWORD PTR [rcx+0x8]
   140019f58:	xor    r9d,r9d
   140019f5b:	xor    r8d,r8d
   140019f5e:	call   0x14000ec40
   140019f63:	mov    rcx,QWORD PTR [rdi+0x8]
   140019f67:	lea    rdx,[rip+0x1d586]        # 0x1400374f4
   140019f6e:	mov    ebx,eax
   140019f70:	xor    r9d,r9d
   140019f73:	lea    r8d,[rbx+0x1]
   140019f77:	call   0x140011610
   140019f7c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019f80:	lea    r8d,[rbx+0x1]
   140019f84:	xor    r9d,r9d
   140019f87:	lea    rdx,[rip+0x1d52a]        # 0x1400374b8
   140019f8e:	call   0x140011610
   140019f93:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f98:	mov    eax,0x1
   140019f9d:	add    rsp,0x20
   140019fa1:	pop    rdi
   140019fa2:	ret    
   140019fa3:	int3   
   140019fa4:	int3   
   140019fa5:	int3   
   140019fa6:	int3   
   140019fa7:	int3   
   140019fa8:	int3   
   140019fa9:	int3   
   140019faa:	int3   
   140019fab:	int3   
   140019fac:	int3   
   140019fad:	int3   
   140019fae:	int3   
   140019faf:	int3   
   140019fb0:	sub    rsp,0x68
   140019fb4:	cmp    BYTE PTR [rip+0x2def7],0x0        # 0x140047eb2
   140019fbb:	je     0x140019fca
   140019fbd:	cmp    BYTE PTR [rip+0x2deef],0x0        # 0x140047eb3
   140019fc4:	je     0x14001a0e8
   140019fca:	call   QWORD PTR [rip+0x18258]        # 0x140032228
   140019fd0:	movzx  ecx,BYTE PTR [rax+0x6]
   140019fd4:	and    cl,0x30
   140019fd7:	cmp    cl,0x30
   140019fda:	jne    0x14001a0ed
   140019fe0:	test   BYTE PTR [rax+0x7],0x2
   140019fe4:	mov    ecx,DWORD PTR [rip+0x2c19e]        # 0x140046188
   140019fea:	mov    QWORD PTR [rsp+0x78],rbx
   140019fef:	mov    ebx,0x1e
   140019ff4:	cmovne ecx,ebx
   140019ff7:	mov    QWORD PTR [rsp+0x60],rdi
   140019ffc:	mov    DWORD PTR [rip+0x2c186],ecx        # 0x140046188
   14001a002:	mov    edi,0x28
   14001a007:	test   BYTE PTR [rax+0x7],0x10
   14001a00b:	cmovne ecx,edi
   14001a00e:	mov    DWORD PTR [rip+0x2c174],ecx        # 0x140046188
   14001a014:	test   BYTE PTR [rax+0x7],0x20
   14001a018:	mov    eax,0x2a
   14001a01d:	cmovne ecx,eax
   14001a020:	mov    DWORD PTR [rip+0x2c162],ecx        # 0x140046188
   14001a026:	call   QWORD PTR [rip+0x1848c]        # 0x1400324b8
   14001a02c:	xor    r8d,r8d
   14001a02f:	lea    rdx,[rip+0x1d542]        # 0x140037578
   14001a036:	mov    rcx,rax
   14001a039:	mov    r9,QWORD PTR [rax]
   14001a03c:	call   QWORD PTR [r9+0x18]
   14001a040:	mov    ecx,DWORD PTR [rip+0x2c142]        # 0x140046188
   14001a046:	mov    edx,0x14
   14001a04b:	test   rax,rax
   14001a04e:	cmovne ecx,edx
   14001a051:	mov    DWORD PTR [rip+0x2c131],ecx        # 0x140046188
   14001a057:	call   QWORD PTR [rip+0x1845b]        # 0x1400324b8
   14001a05d:	xor    r8d,r8d
   14001a060:	lea    rdx,[rip+0x1d519]        # 0x140037580
   14001a067:	mov    rcx,rax
   14001a06a:	mov    r9,QWORD PTR [rax]
   14001a06d:	call   QWORD PTR [r9+0x18]
   14001a071:	mov    ecx,DWORD PTR [rip+0x2c111]        # 0x140046188
   14001a077:	test   rax,rax
   14001a07a:	cmovne ecx,ebx
   14001a07d:	mov    DWORD PTR [rip+0x2c105],ecx        # 0x140046188
   14001a083:	call   QWORD PTR [rip+0x1842f]        # 0x1400324b8
   14001a089:	xor    r8d,r8d
   14001a08c:	lea    rdx,[rip+0x1d4f5]        # 0x140037588
   14001a093:	mov    rcx,rax
   14001a096:	mov    r9,QWORD PTR [rax]
   14001a099:	call   QWORD PTR [r9+0x18]
   14001a09d:	mov    ecx,DWORD PTR [rip+0x2c0e5]        # 0x140046188
   14001a0a3:	test   rax,rax
   14001a0a6:	stmxcsr DWORD PTR [rsp+0x70]
   14001a0ab:	mov    eax,DWORD PTR [rsp+0x70]
   14001a0af:	cmovne ecx,edi
   14001a0b2:	mov    DWORD PTR [rip+0x2c0d0],ecx        # 0x140046188
   14001a0b8:	or     eax,0x8040
   14001a0bd:	mov    DWORD PTR [rsp+0x70],eax
   14001a0c1:	mov    ecx,0x31415926
   14001a0c6:	mov    BYTE PTR [rip+0x2dde5],0x1        # 0x140047eb2
   14001a0cd:	mov    BYTE PTR [rip+0x2dddf],0x0        # 0x140047eb3
   14001a0d4:	ldmxcsr DWORD PTR [rsp+0x70]
   14001a0d9:	call   0x14001a190
   14001a0de:	mov    rdi,QWORD PTR [rsp+0x60]
   14001a0e3:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a0e8:	add    rsp,0x68
   14001a0ec:	ret    
   14001a0ed:	mov    rax,QWORD PTR [rip+0x18294]        # 0x140032388
   14001a0f4:	mov    edx,0x4
   14001a0f9:	mov    ecx,DWORD PTR [rax]
   14001a0fb:	call   QWORD PTR [rip+0x183a7]        # 0x1400324a8
   14001a101:	test   al,al
   14001a103:	je     0x14001a145
   14001a105:	lea    rax,[rip+0x1d424]        # 0x140037530
   14001a10c:	mov    DWORD PTR [rsp+0x28],0x11a7
   14001a114:	mov    QWORD PTR [rsp+0x20],rax
   14001a119:	lea    r9,[rip+0x1d3e0]        # 0x140037500
   14001a120:	lea    rax,[rip+0x1d3f9]        # 0x140037520
   14001a127:	mov    edx,0x4
   14001a12c:	mov    QWORD PTR [rsp+0x30],rax
   14001a131:	lea    r8,[rsp+0x20]
   14001a136:	mov    rax,QWORD PTR [rip+0x1824b]        # 0x140032388
   14001a13d:	mov    ecx,DWORD PTR [rax]
   14001a13f:	call   QWORD PTR [rip+0x18353]        # 0x140032498
   14001a145:	call   QWORD PTR [rip+0x1843d]        # 0x140032588
   14001a14b:	test   al,al
   14001a14d:	je     0x14001a17e
   14001a14f:	call   QWORD PTR [rip+0x1832b]        # 0x140032480
   14001a155:	lea    rcx,[rip+0x18650]        # 0x1400327ac
   14001a15c:	xorps  xmm0,xmm0
   14001a15f:	lea    rdx,[rsp+0x38]
   14001a164:	mov    DWORD PTR [rsp+0x40],eax
   14001a168:	mov    QWORD PTR [rsp+0x38],rcx
   14001a16d:	mov    r8b,0x1
   14001a170:	xor    ecx,ecx
   14001a172:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   14001a178:	call   QWORD PTR [rip+0x182fa]        # 0x140032478
   14001a17e:	mov    ecx,0x1
   14001a183:	call   QWORD PTR [rip+0x180bf]        # 0x140032248
   14001a189:	int3   
   14001a18a:	int3   
   14001a18b:	int3   
   14001a18c:	int3   
   14001a18d:	int3   
   14001a18e:	int3   
   14001a18f:	int3   
   14001a190:	mov    DWORD PTR [rip+0x2dd4e],ecx        # 0x140047ee4
   14001a196:	ret    
   14001a197:	int3   
   14001a198:	int3   
   14001a199:	int3   
   14001a19a:	int3   
   14001a19b:	int3   
   14001a19c:	int3   
   14001a19d:	int3   
   14001a19e:	int3   
   14001a19f:	int3   
   14001a1a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a1a5:	mov    QWORD PTR [rsp+0x10],rsi
   14001a1aa:	push   rdi
   14001a1ab:	sub    rsp,0x20
   14001a1af:	mov    esi,r8d
   14001a1b2:	mov    rdi,rdx
   14001a1b5:	mov    rbx,rcx
   14001a1b8:	test   rcx,rcx
   14001a1bb:	je     0x14001a25a
   14001a1c1:	cmp    BYTE PTR [rcx],0x0
   14001a1c4:	je     0x14001a25a
   14001a1ca:	call   QWORD PTR [rip+0x18308]        # 0x1400324d8
   14001a1d0:	test   al,al
   14001a1d2:	je     0x14001a1f9
   14001a1d4:	mov    rdx,rbx
   14001a1d7:	lea    rcx,[rip+0x1d3b2]        # 0x140037590
   14001a1de:	call   QWORD PTR [rip+0x181cc]        # 0x1400323b0
   14001a1e4:	xor    al,al
   14001a1e6:	mov    BYTE PTR [rdi],0x0
   14001a1e9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a1ee:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a1f3:	add    rsp,0x20
   14001a1f7:	pop    rdi
   14001a1f8:	ret    
   14001a1f9:	mov    rcx,rbx
   14001a1fc:	call   QWORD PTR [rip+0x182f6]        # 0x1400324f8
   14001a202:	test   rax,rax
   14001a205:	jne    0x14001a22c
   14001a207:	mov    rdx,rbx
   14001a20a:	lea    rcx,[rip+0x1d3bf]        # 0x1400375d0
   14001a211:	call   QWORD PTR [rip+0x18199]        # 0x1400323b0
   14001a217:	xor    al,al
   14001a219:	mov    BYTE PTR [rdi],0x0
   14001a21c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a221:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a226:	add    rsp,0x20
   14001a22a:	pop    rdi
   14001a22b:	ret    
   14001a22c:	mov    r9b,0x1
   14001a22f:	mov    r8,rbx
   14001a232:	mov    edx,esi
   14001a234:	mov    rcx,rdi
   14001a237:	call   QWORD PTR [rip+0x182a3]        # 0x1400324e0
   14001a23d:	mov    dl,0x2f
   14001a23f:	mov    rcx,rdi
   14001a242:	call   QWORD PTR [rip+0x18288]        # 0x1400324d0
   14001a248:	mov    al,0x1
   14001a24a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a24f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a254:	add    rsp,0x20
   14001a258:	pop    rdi
   14001a259:	ret    
   14001a25a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a25f:	mov    al,0x1
   14001a261:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a266:	mov    BYTE PTR [rdx],0x0
   14001a269:	add    rsp,0x20
   14001a26d:	pop    rdi
   14001a26e:	ret    
   14001a26f:	int3   
   14001a270:	mov    QWORD PTR [rsp+0x8],rbx
   14001a275:	mov    eax,DWORD PTR [rcx+0x58]
   14001a278:	mov    rbx,rdx
   14001a27b:	cdq    
   14001a27c:	xor    eax,edx
   14001a27e:	sub    eax,edx
   14001a280:	test   eax,eax
   14001a282:	jle    0x14001a2c3
   14001a284:	mov    r9,QWORD PTR [rcx+0x50]
   14001a288:	xor    r10d,r10d
   14001a28b:	movsxd r11,eax
   14001a28e:	xchg   ax,ax
   14001a290:	mov    rax,QWORD PTR [r9]
   14001a293:	mov    r8,rbx
   14001a296:	sub    r8,rax
   14001a299:	nop    DWORD PTR [rax+0x0]
   14001a2a0:	movzx  edx,BYTE PTR [rax]
   14001a2a3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001a2a8:	sub    edx,ecx
   14001a2aa:	jne    0x14001a2b3
   14001a2ac:	inc    rax
   14001a2af:	test   ecx,ecx
   14001a2b1:	jne    0x14001a2a0
   14001a2b3:	test   edx,edx
   14001a2b5:	je     0x14001a2cb
   14001a2b7:	inc    r10
   14001a2ba:	add    r9,0x38
   14001a2be:	cmp    r10,r11
   14001a2c1:	jl     0x14001a290
   14001a2c3:	xor    eax,eax
   14001a2c5:	mov    rbx,QWORD PTR [rsp+0x8]
   14001a2ca:	ret    
   14001a2cb:	mov    rbx,QWORD PTR [rsp+0x8]
   14001a2d0:	mov    rax,r9
   14001a2d3:	ret    
   14001a2d4:	int3   
   14001a2d5:	int3   
   14001a2d6:	int3   
   14001a2d7:	int3   
   14001a2d8:	int3   
   14001a2d9:	int3   
   14001a2da:	int3   
   14001a2db:	int3   
   14001a2dc:	int3   
   14001a2dd:	int3   
   14001a2de:	int3   
   14001a2df:	int3   
   14001a2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a2e5:	mov    QWORD PTR [rsp+0x10],rsi
   14001a2ea:	push   rdi
   14001a2eb:	sub    rsp,0x20
   14001a2ef:	mov    ebx,r8d
   14001a2f2:	mov    rdi,rdx
   14001a2f5:	mov    rsi,rcx
   14001a2f8:	call   0x14001a330
   14001a2fd:	xor    r9d,r9d
   14001a300:	mov    r8d,ebx
   14001a303:	mov    rdx,rdi
   14001a306:	mov    rcx,rsi
   14001a309:	call   0x14001a710
   14001a30e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a313:	mov    rax,rsi
   14001a316:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a31b:	add    rsp,0x20
   14001a31f:	pop    rdi
   14001a320:	ret    
   14001a321:	int3   
   14001a322:	int3   
   14001a323:	int3   
   14001a324:	int3   
   14001a325:	int3   
   14001a326:	int3   
   14001a327:	int3   
   14001a328:	int3   
   14001a329:	int3   
   14001a32a:	int3   
   14001a32b:	int3   
   14001a32c:	int3   
   14001a32d:	int3   
   14001a32e:	int3   
   14001a32f:	int3   
   14001a330:	mov    QWORD PTR [rsp+0x8],rbx
   14001a335:	mov    QWORD PTR [rsp+0x10],rsi
   14001a33a:	push   rdi
   14001a33b:	sub    rsp,0x20
   14001a33f:	lea    rdi,[rcx+0x8]
   14001a343:	xor    esi,esi
   14001a345:	mov    DWORD PTR [rcx],esi
   14001a347:	mov    rbx,rcx
   14001a34a:	mov    rcx,rdi
   14001a34d:	mov    QWORD PTR [rdi],rsi
   14001a350:	mov    DWORD PTR [rdi+0x8],0x8
   14001a357:	lea    edx,[rsi+0x8]
   14001a35a:	mov    DWORD PTR [rdi+0xc],0x80000000
   14001a361:	call   0x14001a520
   14001a366:	test   dil,0x7
   14001a36a:	je     0x14001a377
   14001a36c:	call   QWORD PTR [rip+0x1823e]        # 0x1400325b0
   14001a372:	test   eax,eax
   14001a374:	je     0x14001a377
   14001a376:	int3   
   14001a377:	lea    rax,[rdi+0x10]
   14001a37b:	mov    QWORD PTR [rdi],rax
   14001a37e:	mov    rax,rbx
   14001a381:	mov    DWORD PTR [rbx],esi
   14001a383:	mov    QWORD PTR [rbx+0x98],rsi
   14001a38a:	mov    QWORD PTR [rbx+0xa0],rsi
   14001a391:	mov    QWORD PTR [rbx+0xa8],rsi
   14001a398:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a39d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a3a2:	add    rsp,0x20
   14001a3a6:	pop    rdi
   14001a3a7:	ret    
   14001a3a8:	int3   
   14001a3a9:	int3   
   14001a3aa:	int3   
   14001a3ab:	int3   
   14001a3ac:	int3   
   14001a3ad:	int3   
   14001a3ae:	int3   
   14001a3af:	int3   
   14001a3b0:	rex push rbx
   14001a3b2:	sub    rsp,0x20
   14001a3b6:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001a3be:	mov    rbx,rcx
   14001a3c1:	je     0x14001a3d1
   14001a3c3:	mov    eax,DWORD PTR [rcx+0xa8]
   14001a3c9:	test   eax,eax
   14001a3cb:	js     0x14001a42d
   14001a3cd:	cmp    eax,DWORD PTR [rcx]
   14001a3cf:	jge    0x14001a42d
   14001a3d1:	mov    eax,DWORD PTR [rcx+0xa8]
   14001a3d7:	test   eax,eax
   14001a3d9:	js     0x14001a42d
   14001a3db:	cmp    eax,DWORD PTR [rcx]
   14001a3dd:	jge    0x14001a42d
   14001a3df:	inc    DWORD PTR [rcx+0xb8]
   14001a3e5:	mov    r8,QWORD PTR [rbx+0x98]
   14001a3ec:	movsxd rcx,DWORD PTR [rcx+0xb8]
   14001a3f3:	mov    eax,DWORD PTR [r8+0x28]
   14001a3f7:	cdq    
   14001a3f8:	xor    eax,edx
   14001a3fa:	sub    eax,edx
   14001a3fc:	cmp    ecx,eax
   14001a3fe:	jge    0x14001a418
   14001a400:	mov    rax,rcx
   14001a403:	shl    rax,0x6
   14001a407:	add    rax,QWORD PTR [r8+0x20]
   14001a40b:	mov    QWORD PTR [rbx+0xb0],rax
   14001a412:	add    rsp,0x20
   14001a416:	pop    rbx
   14001a417:	ret    
   14001a418:	mov    rcx,rbx
   14001a41b:	call   0x14001a440
   14001a420:	mov    rcx,rbx
   14001a423:	add    rsp,0x20
   14001a427:	pop    rbx
   14001a428:	jmp    0x14001a480
   14001a42d:	add    rsp,0x20
   14001a431:	pop    rbx
   14001a432:	ret    
   14001a433:	int3   
   14001a434:	int3   
   14001a435:	int3   
   14001a436:	int3   
   14001a437:	int3   
   14001a438:	int3   
   14001a439:	int3   
   14001a43a:	int3   
   14001a43b:	int3   
   14001a43c:	int3   
   14001a43d:	int3   
   14001a43e:	int3   
   14001a43f:	int3   
   14001a440:	inc    DWORD PTR [rcx+0xa8]
   14001a446:	movsxd rax,DWORD PTR [rcx+0xa8]
   14001a44d:	cmp    eax,DWORD PTR [rcx]
   14001a44f:	jge    0x14001a471
   14001a451:	mov    r8,rax
   14001a454:	shl    r8,0x4
   14001a458:	add    r8,QWORD PTR [rcx+0x8]
   14001a45c:	mov    rax,QWORD PTR [r8]
   14001a45f:	mov    QWORD PTR [rcx+0x98],rax
   14001a466:	mov    eax,DWORD PTR [r8+0x8]
   14001a46a:	mov    DWORD PTR [rcx+0xac],eax
   14001a470:	ret    
   14001a471:	mov    QWORD PTR [rcx+0x98],0x0
   14001a47c:	ret    
   14001a47d:	int3   
   14001a47e:	int3   
   14001a47f:	int3   
   14001a480:	xor    r9d,r9d
   14001a483:	mov    r8d,DWORD PTR [rcx+0xa8]
   14001a48a:	test   r8d,r8d
   14001a48d:	js     0x14001a4e8
   14001a48f:	cmp    r8d,DWORD PTR [rcx]
   14001a492:	jge    0x14001a4e8
   14001a494:	mov    rax,QWORD PTR [rcx+0x98]
   14001a49b:	mov    eax,DWORD PTR [rax+0x28]
   14001a49e:	cdq    
   14001a49f:	xor    eax,edx
   14001a4a1:	cmp    eax,edx
   14001a4a3:	jne    0x14001a4e8
   14001a4a5:	inc    r8d
   14001a4a8:	mov    DWORD PTR [rcx+0xa8],r8d
   14001a4af:	cmp    r8d,DWORD PTR [rcx]
   14001a4b2:	jge    0x14001a4df
   14001a4b4:	mov    rdx,QWORD PTR [rcx+0x8]
   14001a4b8:	movsxd rax,r8d
   14001a4bb:	add    rax,rax
   14001a4be:	mov    rax,QWORD PTR [rdx+rax*8]
   14001a4c2:	mov    QWORD PTR [rcx+0x98],rax
   14001a4c9:	movsxd rax,DWORD PTR [rcx+0xa8]
   14001a4d0:	add    rax,rax
   14001a4d3:	mov    eax,DWORD PTR [rdx+rax*8+0x8]
   14001a4d7:	mov    DWORD PTR [rcx+0xac],eax
   14001a4dd:	jmp    0x14001a483
   14001a4df:	mov    QWORD PTR [rcx+0x98],r9
   14001a4e6:	jmp    0x14001a483
   14001a4e8:	mov    DWORD PTR [rcx+0xb8],r9d
   14001a4ef:	test   r8d,r8d
   14001a4f2:	js     0x14001a50c
   14001a4f4:	cmp    r8d,DWORD PTR [rcx]
   14001a4f7:	jge    0x14001a50c
   14001a4f9:	mov    rax,QWORD PTR [rcx+0x98]
   14001a500:	mov    rdx,QWORD PTR [rax+0x20]
   14001a504:	mov    QWORD PTR [rcx+0xb0],rdx
   14001a50b:	ret    
   14001a50c:	mov    QWORD PTR [rcx+0xb0],r9
   14001a513:	ret    
   14001a514:	int3   
   14001a515:	int3   
   14001a516:	int3   
   14001a517:	int3   
   14001a518:	int3   
   14001a519:	int3   
   14001a51a:	int3   
   14001a51b:	int3   
   14001a51c:	int3   
   14001a51d:	int3   
   14001a51e:	int3   
   14001a51f:	int3   
   14001a520:	mov    QWORD PTR [rsp+0x10],rbx
   14001a525:	push   rdi
   14001a526:	sub    rsp,0x20
   14001a52a:	movsxd rdi,edx
   14001a52d:	mov    rbx,rcx
   14001a530:	cmp    DWORD PTR [rcx+0x8],edi
   14001a533:	jge    0x14001a5dd
   14001a539:	mov    eax,DWORD PTR [rcx+0xc]
   14001a53c:	and    eax,0xc0000000
   14001a541:	test   eax,0x7fffffff
   14001a546:	jne    0x14001a5dd
   14001a54c:	test   eax,eax
   14001a54e:	mov    rax,QWORD PTR [rip+0x17e3b]        # 0x140032390
   14001a555:	jne    0x14001a59b
   14001a557:	mov    rdx,QWORD PTR [rcx]
   14001a55a:	mov    rcx,QWORD PTR [rax]
   14001a55d:	mov    rax,QWORD PTR [rcx]
   14001a560:	test   rdx,rdx
   14001a563:	je     0x14001a580
   14001a565:	mov    r8,rdi
   14001a568:	shl    r8,0x4
   14001a56c:	call   QWORD PTR [rax+0x18]
   14001a56f:	mov    QWORD PTR [rbx],rax
   14001a572:	mov    DWORD PTR [rbx+0x8],edi
   14001a575:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a57a:	add    rsp,0x20
   14001a57e:	pop    rdi
   14001a57f:	ret    
   14001a580:	mov    rdx,rdi
   14001a583:	shl    rdx,0x4
   14001a587:	call   QWORD PTR [rax+0x8]
   14001a58a:	mov    QWORD PTR [rbx],rax
   14001a58d:	mov    DWORD PTR [rbx+0x8],edi
   14001a590:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a595:	add    rsp,0x20
   14001a599:	pop    rdi
   14001a59a:	ret    
   14001a59b:	mov    QWORD PTR [rsp+0x30],rsi
   14001a5a0:	mov    rdx,rdi
   14001a5a3:	mov    rsi,QWORD PTR [rcx]
   14001a5a6:	mov    rcx,QWORD PTR [rax]
   14001a5a9:	shl    rdx,0x4
   14001a5ad:	mov    rax,QWORD PTR [rcx]
   14001a5b0:	call   QWORD PTR [rax+0x8]
   14001a5b3:	mov    QWORD PTR [rbx],rax
   14001a5b6:	test   rsi,rsi
   14001a5b9:	je     0x14001a5ce
   14001a5bb:	movsxd r8,DWORD PTR [rbx+0x8]
   14001a5bf:	mov    rdx,rsi
   14001a5c2:	shl    r8,0x4
   14001a5c6:	mov    rcx,rax
   14001a5c9:	call   0x140026f70
   14001a5ce:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14001a5d5:	mov    rsi,QWORD PTR [rsp+0x30]
   14001a5da:	mov    DWORD PTR [rbx+0x8],edi
   14001a5dd:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a5e2:	add    rsp,0x20
   14001a5e6:	pop    rdi
   14001a5e7:	ret    
   14001a5e8:	int3   
   14001a5e9:	int3   
   14001a5ea:	int3   
   14001a5eb:	int3   
   14001a5ec:	int3   
   14001a5ed:	int3   
   14001a5ee:	int3   
   14001a5ef:	int3   
   14001a5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a5f5:	push   rdi
   14001a5f6:	sub    rsp,0x20
   14001a5fa:	mov    rbx,rcx
   14001a5fd:	mov    rdi,rdx
   14001a600:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001a607:	test   rcx,rcx
   14001a60a:	je     0x14001a62f
   14001a60c:	mov    eax,DWORD PTR [rbx+0xa8]
   14001a612:	test   eax,eax
   14001a614:	js     0x14001a6ab
   14001a61a:	cmp    eax,DWORD PTR [rbx]
   14001a61c:	jge    0x14001a6ab
   14001a622:	test   rcx,rcx
   14001a625:	je     0x14001a62f
   14001a627:	test   eax,eax
   14001a629:	js     0x14001a663
   14001a62b:	cmp    eax,DWORD PTR [rbx]
   14001a62d:	jge    0x14001a663
   14001a62f:	xor    eax,eax
   14001a631:	mov    DWORD PTR [rbx+0xa8],eax
   14001a637:	cmp    DWORD PTR [rbx],eax
   14001a639:	jle    0x14001a654
   14001a63b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a63f:	mov    rax,QWORD PTR [rcx]
   14001a642:	mov    QWORD PTR [rbx+0x98],rax
   14001a649:	mov    eax,DWORD PTR [rcx+0x8]
   14001a64c:	mov    DWORD PTR [rbx+0xac],eax
   14001a652:	jmp    0x14001a65b
   14001a654:	mov    QWORD PTR [rbx+0x98],rax
   14001a65b:	mov    rcx,rbx
   14001a65e:	call   0x14001a480
   14001a663:	mov    rcx,rbx
   14001a666:	call   0x14001a7c0
   14001a66b:	test   al,al
   14001a66d:	je     0x14001a6ab
   14001a66f:	nop
   14001a670:	mov    rax,QWORD PTR [rbx+0xb0]
   14001a677:	mov    r8,rdi
   14001a67a:	mov    rax,QWORD PTR [rax]
   14001a67d:	sub    r8,rax
   14001a680:	movzx  edx,BYTE PTR [rax]
   14001a683:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001a688:	sub    edx,ecx
   14001a68a:	jne    0x14001a693
   14001a68c:	inc    rax
   14001a68f:	test   ecx,ecx
   14001a691:	jne    0x14001a680
   14001a693:	test   edx,edx
   14001a695:	je     0x14001a6b8
   14001a697:	mov    rcx,rbx
   14001a69a:	call   0x14001a3b0
   14001a69f:	mov    rcx,rbx
   14001a6a2:	call   0x14001a7c0
   14001a6a7:	test   al,al
   14001a6a9:	jne    0x14001a670
   14001a6ab:	xor    al,al
   14001a6ad:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a6b2:	add    rsp,0x20
   14001a6b6:	pop    rdi
   14001a6b7:	ret    
   14001a6b8:	mov    al,0x1
   14001a6ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a6bf:	add    rsp,0x20
   14001a6c3:	pop    rdi
   14001a6c4:	ret    
   14001a6c5:	int3   
   14001a6c6:	int3   
   14001a6c7:	int3   
   14001a6c8:	int3   
   14001a6c9:	int3   
   14001a6ca:	int3   
   14001a6cb:	int3   
   14001a6cc:	int3   
   14001a6cd:	int3   
   14001a6ce:	int3   
   14001a6cf:	int3   
   14001a6d0:	mov    rax,QWORD PTR [rcx+0xb0]
   14001a6d7:	mov    rax,QWORD PTR [rax]
   14001a6da:	ret    
   14001a6db:	int3   
   14001a6dc:	int3   
   14001a6dd:	int3   
   14001a6de:	int3   
   14001a6df:	int3   
   14001a6e0:	mov    rax,QWORD PTR [rcx+0xb0]
   14001a6e7:	ret    
   14001a6e8:	int3   
   14001a6e9:	int3   
   14001a6ea:	int3   
   14001a6eb:	int3   
   14001a6ec:	int3   
   14001a6ed:	int3   
   14001a6ee:	int3   
   14001a6ef:	int3   
   14001a6f0:	mov    rax,QWORD PTR [rcx+0xb0]
   14001a6f7:	test   rax,rax
   14001a6fa:	jne    0x14001a6fd
   14001a6fc:	ret    
   14001a6fd:	mov    rax,QWORD PTR [rax+0x10]
   14001a701:	ret    
   14001a702:	int3   
   14001a703:	int3   
   14001a704:	int3   
   14001a705:	int3   
   14001a706:	int3   
   14001a707:	int3   
   14001a708:	int3   
   14001a709:	int3   
   14001a70a:	int3   
   14001a70b:	int3   
   14001a70c:	int3   
   14001a70d:	int3   
   14001a70e:	int3   
   14001a70f:	int3   
   14001a710:	mov    QWORD PTR [rsp+0x8],rbx
   14001a715:	push   rdi
   14001a716:	sub    rsp,0x20
   14001a71a:	xor    edi,edi
   14001a71c:	mov    QWORD PTR [rcx+0xa0],r9
   14001a723:	mov    QWORD PTR [rcx+0x98],rdi
   14001a72a:	mov    rbx,rcx
   14001a72d:	mov    DWORD PTR [rcx+0xac],edi
   14001a733:	call   0x14001a7e0
   14001a738:	mov    DWORD PTR [rbx+0xa8],edi
   14001a73e:	cmp    DWORD PTR [rbx],edi
   14001a740:	jle    0x14001a75b
   14001a742:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a746:	mov    rax,QWORD PTR [rcx]
   14001a749:	mov    QWORD PTR [rbx+0x98],rax
   14001a750:	mov    eax,DWORD PTR [rcx+0x8]
   14001a753:	mov    DWORD PTR [rbx+0xac],eax
   14001a759:	jmp    0x14001a762
   14001a75b:	mov    QWORD PTR [rbx+0x98],rdi
   14001a762:	mov    QWORD PTR [rbx+0xb0],rdi
   14001a769:	mov    DWORD PTR [rbx+0xb8],edi
   14001a76f:	mov    DWORD PTR [rbx+0xa8],edi
   14001a775:	cmp    DWORD PTR [rbx],edi
   14001a777:	jle    0x14001a7a2
   14001a779:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a77d:	mov    rax,QWORD PTR [rcx]
   14001a780:	mov    QWORD PTR [rbx+0x98],rax
   14001a787:	mov    eax,DWORD PTR [rcx+0x8]
   14001a78a:	mov    rcx,rbx
   14001a78d:	mov    DWORD PTR [rbx+0xac],eax
   14001a793:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a798:	add    rsp,0x20
   14001a79c:	pop    rdi
   14001a79d:	jmp    0x14001a480
   14001a7a2:	mov    rcx,rbx
   14001a7a5:	mov    QWORD PTR [rbx+0x98],rdi
   14001a7ac:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a7b1:	add    rsp,0x20
   14001a7b5:	pop    rdi
   14001a7b6:	jmp    0x14001a480
   14001a7bb:	int3   
   14001a7bc:	int3   
   14001a7bd:	int3   
   14001a7be:	int3   
   14001a7bf:	int3   
   14001a7c0:	mov    eax,DWORD PTR [rcx+0xa8]
   14001a7c6:	test   eax,eax
   14001a7c8:	js     0x14001a7db
   14001a7ca:	cmp    eax,DWORD PTR [rcx]
   14001a7cc:	jge    0x14001a7db
   14001a7ce:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001a7d6:	je     0x14001a7db
   14001a7d8:	mov    al,0x1
   14001a7da:	ret    
   14001a7db:	xor    al,al
   14001a7dd:	ret    
   14001a7de:	int3   
   14001a7df:	int3   
   14001a7e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a7e5:	push   rdi
   14001a7e6:	sub    rsp,0x30
   14001a7ea:	mov    DWORD PTR [rcx],0x0
   14001a7f0:	mov    r10,r9
   14001a7f3:	mov    rdi,rdx
   14001a7f6:	mov    rbx,rcx
   14001a7f9:	test   r8d,r8d
   14001a7fc:	jne    0x14001a838
   14001a7fe:	cmp    rdx,r9
   14001a801:	je     0x14001a864
   14001a803:	cmp    DWORD PTR [rcx+0x10],r8d
   14001a807:	jne    0x14001a816
   14001a809:	add    rcx,0x8
   14001a80d:	lea    edx,[r8+0x1]
   14001a811:	call   0x140023260
   14001a816:	inc    DWORD PTR [rbx]
   14001a818:	mov    rax,QWORD PTR [rbx+0x8]
   14001a81c:	mov    QWORD PTR [rax],rdi
   14001a81f:	mov    DWORD PTR [rax+0x8],0x0
   14001a826:	mov    DWORD PTR [rax+0xc],0xffffffff
   14001a82d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a832:	add    rsp,0x30
   14001a836:	pop    rdi
   14001a837:	ret    
   14001a838:	lea    eax,[r8-0x2]
   14001a83c:	test   eax,0xfffffffd
   14001a841:	lea    eax,[r8-0x3]
   14001a845:	mov    r8,r10
   14001a848:	sete   cl
   14001a84b:	cmp    eax,0x1
   14001a84e:	setbe  al
   14001a851:	xor    r9d,r9d
   14001a854:	mov    BYTE PTR [rsp+0x28],al
   14001a858:	mov    BYTE PTR [rsp+0x20],cl
   14001a85c:	mov    rcx,rbx
   14001a85f:	call   0x14001a870
   14001a864:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a869:	add    rsp,0x30
   14001a86d:	pop    rdi
   14001a86e:	ret    
   14001a86f:	int3   
   14001a870:	mov    DWORD PTR [rsp+0x20],r9d
   14001a875:	mov    QWORD PTR [rsp+0x18],r8
   14001a87a:	mov    QWORD PTR [rsp+0x10],rdx
   14001a87f:	push   rbp
   14001a880:	push   rsi
   14001a881:	push   rdi
   14001a882:	sub    rsp,0x50
   14001a886:	lea    rbp,[rsp+0x30]
   14001a88b:	cmp    rdx,r8
   14001a88e:	mov    QWORD PTR [rbp+0x40],rbx
   14001a892:	mov    r8,rdx
   14001a895:	mov    rdi,rcx
   14001a898:	jne    0x14001a8a9
   14001a89a:	or     eax,0xffffffff
   14001a89d:	mov    rbx,QWORD PTR [rbp+0x40]
   14001a8a1:	lea    rsp,[rbp+0x20]
   14001a8a5:	pop    rdi
   14001a8a6:	pop    rsi
   14001a8a7:	pop    rbp
   14001a8a8:	ret    
   14001a8a9:	mov    eax,DWORD PTR [rdx+0x48]
   14001a8ac:	mov    r10d,0x1
   14001a8b2:	cdq    
   14001a8b3:	mov    esi,eax
   14001a8b5:	xor    esi,edx
   14001a8b7:	sub    esi,edx
   14001a8b9:	cmp    esi,r10d
   14001a8bc:	jle    0x14001a8c6
   14001a8be:	cmp    BYTE PTR [rbp+0x60],0x0
   14001a8c2:	cmove  esi,r10d
   14001a8c6:	movzx  edx,BYTE PTR [rbp+0x68]
   14001a8ca:	mov    DWORD PTR [rbp+0x4],0xffffffff
   14001a8d1:	test   dl,dl
   14001a8d3:	jne    0x14001a8f9
   14001a8d5:	mov    eax,DWORD PTR [rcx]
   14001a8d7:	mov    DWORD PTR [rbp+0x4],eax
   14001a8da:	cmp    eax,DWORD PTR [rcx+0x10]
   14001a8dd:	jne    0x14001a8f7
   14001a8df:	add    rcx,0x8
   14001a8e3:	mov    edx,r10d
   14001a8e6:	call   0x140023260
   14001a8eb:	mov    r8,QWORD PTR [rbp+0x48]
   14001a8ef:	movzx  edx,BYTE PTR [rbp+0x68]
   14001a8f3:	mov    r9d,DWORD PTR [rbp+0x58]
   14001a8f7:	inc    DWORD PTR [rdi]
   14001a8f9:	xor    ebx,ebx
   14001a8fb:	test   esi,esi
   14001a8fd:	je     0x14001a93f
   14001a8ff:	movsxd rax,esi
   14001a902:	lea    rax,[rax*4+0x1f]
   14001a90a:	and    rax,0xfffffffffffffff0
   14001a90e:	lea    rcx,[rax+0xf]
   14001a912:	cmp    rcx,rax
   14001a915:	ja     0x14001a921
   14001a917:	movabs rcx,0xffffffffffffff0
   14001a921:	and    rcx,0xfffffffffffffff0
   14001a925:	mov    rax,rcx
   14001a928:	call   0x1400263c0
   14001a92d:	sub    rsp,rcx
   14001a930:	lea    rax,[rsp+0x30]
   14001a935:	add    rax,0x10
   14001a939:	and    rax,0xffffffffffffffef
   14001a93d:	jmp    0x14001a942
   14001a93f:	mov    rax,rbx
   14001a942:	movsxd rcx,esi
   14001a945:	mov    QWORD PTR [rbp+0x8],rcx
   14001a949:	mov    QWORD PTR [rbp+0x10],rax
   14001a94d:	mov    DWORD PTR [rbp+0x0],ebx
   14001a950:	test   esi,esi
   14001a952:	jle    0x14001a9ac
   14001a954:	mov    rsi,rbx
   14001a957:	mov    rbx,rax
   14001a95a:	nop    WORD PTR [rax+rax*1+0x0]
   14001a960:	mov    rax,QWORD PTR [r8+0x40]
   14001a964:	movzx  ecx,BYTE PTR [rbp+0x60]
   14001a968:	mov    r8,QWORD PTR [rbp+0x50]
   14001a96c:	mov    BYTE PTR [rsp+0x28],dl
   14001a970:	add    r9d,DWORD PTR [rsi+rax*1]
   14001a974:	mov    rdx,QWORD PTR [rsi+rax*1+0x8]
   14001a979:	mov    BYTE PTR [rsp+0x20],cl
   14001a97d:	mov    rcx,rdi
   14001a980:	call   0x14001a870
   14001a985:	mov    DWORD PTR [rbx],eax
   14001a987:	cmp    eax,0xffffffff
   14001a98a:	je     0x14001a993
   14001a98c:	inc    DWORD PTR [rbp+0x0]
   14001a98f:	add    rbx,0x4
   14001a993:	mov    r8,QWORD PTR [rbp+0x48]
   14001a997:	add    rsi,0x10
   14001a99b:	sub    QWORD PTR [rbp+0x8],0x1
   14001a9a0:	movzx  edx,BYTE PTR [rbp+0x68]
   14001a9a4:	mov    r9d,DWORD PTR [rbp+0x58]
   14001a9a8:	jne    0x14001a960
   14001a9aa:	xor    ebx,ebx
   14001a9ac:	cmp    BYTE PTR [rbp+0x68],0x0
   14001a9b0:	je     0x14001a9cb
   14001a9b2:	mov    esi,DWORD PTR [rdi]
   14001a9b4:	cmp    esi,DWORD PTR [rdi+0x10]
   14001a9b7:	jne    0x14001a9c7
   14001a9b9:	lea    rcx,[rdi+0x8]
   14001a9bd:	mov    edx,0x1
   14001a9c2:	call   0x140023260
   14001a9c7:	inc    DWORD PTR [rdi]
   14001a9c9:	jmp    0x14001a9ce
   14001a9cb:	mov    esi,DWORD PTR [rbp+0x4]
   14001a9ce:	movsxd r8,DWORD PTR [rbp+0x0]
   14001a9d2:	test   r8,r8
   14001a9d5:	jle    0x14001a9f7
   14001a9d7:	mov    rdx,QWORD PTR [rbp+0x10]
   14001a9db:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a9e0:	movsxd rcx,DWORD PTR [rdx+rbx*4]
   14001a9e4:	inc    rbx
   14001a9e7:	mov    rax,QWORD PTR [rdi+0x8]
   14001a9eb:	add    rcx,rcx
   14001a9ee:	mov    DWORD PTR [rax+rcx*8+0xc],esi
   14001a9f2:	cmp    rbx,r8
   14001a9f5:	jl     0x14001a9e0
   14001a9f7:	mov    rax,QWORD PTR [rbp+0x48]
   14001a9fb:	mov    rbx,QWORD PTR [rbp+0x40]
   14001a9ff:	movsxd rcx,esi
   14001aa02:	shl    rcx,0x4
   14001aa06:	add    rcx,QWORD PTR [rdi+0x8]
   14001aa0a:	mov    QWORD PTR [rcx],rax
   14001aa0d:	mov    eax,DWORD PTR [rbp+0x58]
   14001aa10:	mov    DWORD PTR [rcx+0x8],eax
   14001aa13:	mov    eax,esi
   14001aa15:	mov    DWORD PTR [rcx+0xc],0xffffffff
   14001aa1c:	lea    rsp,[rbp+0x20]
   14001aa20:	pop    rdi
   14001aa21:	pop    rsi
   14001aa22:	pop    rbp
   14001aa23:	ret    
   14001aa24:	int3   
   14001aa25:	int3   
   14001aa26:	int3   
   14001aa27:	int3   
   14001aa28:	int3   
   14001aa29:	int3   
   14001aa2a:	int3   
   14001aa2b:	int3   
   14001aa2c:	int3   
   14001aa2d:	int3   
   14001aa2e:	int3   
   14001aa2f:	int3   
   14001aa30:	mov    r10d,edx
   14001aa33:	test   edx,edx
   14001aa35:	je     0x14001aa49
   14001aa37:	lea    ecx,[r8-0x1]
   14001aa3b:	mov    eax,ecx
   14001aa3d:	cdq    
   14001aa3e:	idiv   r10d
   14001aa41:	sub    ecx,edx
   14001aa43:	add    ecx,r10d
   14001aa46:	mov    eax,ecx
   14001aa48:	ret    
   14001aa49:	test   ecx,ecx
   14001aa4b:	jne    0x14001aa62
   14001aa4d:	lea    eax,[r9+0x1f]
   14001aa51:	cdq    
   14001aa52:	idiv   r9d
   14001aa55:	mov    ecx,eax
   14001aa57:	cmp    eax,r8d
   14001aa5a:	jge    0x14001aa46
   14001aa5c:	mov    ecx,r8d
   14001aa5f:	mov    eax,ecx
   14001aa61:	ret    
   14001aa62:	cmp    ecx,r8d
   14001aa65:	jge    0x14001aa46
   14001aa67:	nop    WORD PTR [rax+rax*1+0x0]
   14001aa70:	add    ecx,ecx
   14001aa72:	cmp    ecx,0x40000000
   14001aa78:	jge    0x14001aa82
   14001aa7a:	cmp    ecx,r8d
   14001aa7d:	jl     0x14001aa70
   14001aa7f:	mov    eax,ecx
   14001aa81:	ret    
   14001aa82:	mov    eax,0x7fffffff
   14001aa87:	ret    
   14001aa88:	int3   
   14001aa89:	int3   
   14001aa8a:	int3   
   14001aa8b:	int3   
   14001aa8c:	int3   
   14001aa8d:	int3   
   14001aa8e:	int3   
   14001aa8f:	int3   
   14001aa90:	rex push rbx
   14001aa92:	sub    rsp,0x20
   14001aa96:	mov    r8,QWORD PTR [rdx]
   14001aa99:	mov    rbx,rcx
   14001aa9c:	test   r8,r8
   14001aa9f:	je     0x14001aab1
   14001aaa1:	or     rax,0xffffffffffffffff
   14001aaa5:	inc    rax
   14001aaa8:	cmp    BYTE PTR [r8+rax*1],0x0
   14001aaad:	jne    0x14001aaa5
   14001aaaf:	jmp    0x14001aab3
   14001aab1:	xor    eax,eax
   14001aab3:	test   r8,r8
   14001aab6:	lea    rdx,[rip+0x17ce3]        # 0x1400327a0
   14001aabd:	cmovne rdx,r8
   14001aac1:	mov    r8d,eax
   14001aac4:	call   0x14001b3d0
   14001aac9:	mov    rax,rbx
   14001aacc:	add    rsp,0x20
   14001aad0:	pop    rbx
   14001aad1:	ret    
   14001aad2:	int3   
   14001aad3:	int3   
   14001aad4:	int3   
   14001aad5:	int3   
   14001aad6:	int3   
   14001aad7:	int3   
   14001aad8:	int3   
   14001aad9:	int3   
   14001aada:	int3   
   14001aadb:	int3   
   14001aadc:	int3   
   14001aadd:	int3   
   14001aade:	int3   
   14001aadf:	int3   
   14001aae0:	rex push rbx
   14001aae2:	sub    rsp,0x20
   14001aae6:	mov    rbx,rcx
   14001aae9:	test   rdx,rdx
   14001aaec:	je     0x14001ab0c
   14001aaee:	or     rax,0xffffffffffffffff
   14001aaf2:	inc    rax
   14001aaf5:	cmp    BYTE PTR [rdx+rax*1],0x0
   14001aaf9:	jne    0x14001aaf2
   14001aafb:	mov    r8d,eax
   14001aafe:	call   0x14001b3d0
   14001ab03:	mov    rax,rbx
   14001ab06:	add    rsp,0x20
   14001ab0a:	pop    rbx
   14001ab0b:	ret    
   14001ab0c:	xor    eax,eax
   14001ab0e:	mov    r8d,eax
   14001ab11:	call   0x14001b3d0
   14001ab16:	mov    rax,rbx
   14001ab19:	add    rsp,0x20
   14001ab1d:	pop    rbx
   14001ab1e:	ret    
   14001ab1f:	int3   
   14001ab20:	mov    rax,QWORD PTR [rcx]
   14001ab23:	test   rax,rax
   14001ab26:	je     0x14001ab5b
   14001ab28:	cmp    BYTE PTR [rax],0x0
   14001ab2b:	je     0x14001ab5b
   14001ab2d:	mov    r8,QWORD PTR [rdx]
   14001ab30:	test   r8,r8
   14001ab33:	je     0x14001ab68
   14001ab35:	cmp    BYTE PTR [r8],0x0
   14001ab39:	je     0x14001ab68
   14001ab3b:	sub    r8,rax
   14001ab3e:	xchg   ax,ax
   14001ab40:	movzx  edx,BYTE PTR [rax]
   14001ab43:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001ab48:	sub    edx,ecx
   14001ab4a:	jne    0x14001ab53
   14001ab4c:	inc    rax
   14001ab4f:	test   ecx,ecx
   14001ab51:	jne    0x14001ab40
   14001ab53:	xor    eax,eax
   14001ab55:	test   edx,edx
   14001ab57:	sete   al
   14001ab5a:	ret    
   14001ab5b:	mov    rax,QWORD PTR [rdx]
   14001ab5e:	test   rax,rax
   14001ab61:	je     0x14001ab6b
   14001ab63:	cmp    BYTE PTR [rax],0x0
   14001ab66:	je     0x14001ab6b
   14001ab68:	xor    al,al
   14001ab6a:	ret    
   14001ab6b:	mov    al,0x1
   14001ab6d:	ret    
   14001ab6e:	int3   
   14001ab6f:	int3   
   14001ab70:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab75:	mov    QWORD PTR [rsp+0x10],rbp
   14001ab7a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ab7f:	push   rdi
   14001ab80:	sub    rsp,0x20
   14001ab84:	mov    rax,QWORD PTR [rcx]
   14001ab87:	movzx  ebp,dl
   14001ab8a:	mov    rdi,rcx
   14001ab8d:	test   rax,rax
   14001ab90:	je     0x14001aba1
   14001ab92:	or     rbx,0xffffffffffffffff
   14001ab96:	inc    rbx
   14001ab99:	cmp    BYTE PTR [rax+rbx*1],0x0
   14001ab9d:	jne    0x14001ab96
   14001ab9f:	jmp    0x14001aba3
   14001aba1:	xor    ebx,ebx
   14001aba3:	lea    esi,[rbx+0x1]
   14001aba6:	call   QWORD PTR [rip+0x17914]        # 0x1400324c0
   14001abac:	mov    rax,QWORD PTR [rip+0x177dd]        # 0x140032390
   14001abb3:	mov    rdx,QWORD PTR [rdi]
   14001abb6:	mov    rcx,QWORD PTR [rax]
   14001abb9:	test   rdx,rdx
   14001abbc:	je     0x14001abcb
   14001abbe:	mov    r9,QWORD PTR [rcx]
   14001abc1:	lea    r8d,[rsi+0x1]
   14001abc5:	call   QWORD PTR [r9+0x18]
   14001abc9:	jmp    0x14001abd5
   14001abcb:	mov    r8,QWORD PTR [rcx]
   14001abce:	lea    edx,[rsi+0x1]
   14001abd1:	call   QWORD PTR [r8+0x8]
   14001abd5:	mov    QWORD PTR [rdi],rax
   14001abd8:	mov    rcx,rax
   14001abdb:	mov    BYTE PTR [rsi+rax*1],0x0
   14001abdf:	mov    rax,QWORD PTR [rdi]
   14001abe2:	mov    rsi,QWORD PTR [rsp+0x40]
   14001abe7:	movsxd rcx,ebx
   14001abea:	mov    rbx,QWORD PTR [rsp+0x30]
   14001abef:	mov    BYTE PTR [rcx+rax*1],bpl
   14001abf3:	mov    rax,rdi
   14001abf6:	mov    rbp,QWORD PTR [rsp+0x38]
   14001abfb:	add    rsp,0x20
   14001abff:	pop    rdi
   14001ac00:	ret    
   14001ac01:	int3   
   14001ac02:	int3   
   14001ac03:	int3   
   14001ac04:	int3   
   14001ac05:	int3   
   14001ac06:	int3   
   14001ac07:	int3   
   14001ac08:	int3   
   14001ac09:	int3   
   14001ac0a:	int3   
   14001ac0b:	int3   
   14001ac0c:	int3   
   14001ac0d:	int3   
   14001ac0e:	int3   
   14001ac0f:	int3   
   14001ac10:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac15:	mov    QWORD PTR [rsp+0x10],rbp
   14001ac1a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ac1f:	mov    QWORD PTR [rsp+0x20],rdi
   14001ac24:	push   r14
   14001ac26:	sub    rsp,0x20
   14001ac2a:	mov    rax,QWORD PTR [rcx]
   14001ac2d:	or     rbx,0xffffffffffffffff
   14001ac31:	mov    rbp,rdx
   14001ac34:	mov    rsi,rcx
   14001ac37:	test   rax,rax
   14001ac3a:	je     0x14001ac4b
   14001ac3c:	mov    rdi,rbx
   14001ac3f:	nop
   14001ac40:	inc    rdi
   14001ac43:	cmp    BYTE PTR [rax+rdi*1],0x0
   14001ac47:	jne    0x14001ac40
   14001ac49:	jmp    0x14001ac50
   14001ac4b:	xor    edi,edi
   14001ac4d:	nop    DWORD PTR [rax]
   14001ac50:	inc    rbx
   14001ac53:	cmp    BYTE PTR [rbx+rdx*1],0x0
   14001ac57:	jne    0x14001ac50
   14001ac59:	lea    r14d,[rbx+rdi*1]
   14001ac5d:	test   r14d,r14d
   14001ac60:	je     0x14001acb3
   14001ac62:	call   QWORD PTR [rip+0x17858]        # 0x1400324c0
   14001ac68:	mov    rax,QWORD PTR [rip+0x17721]        # 0x140032390
   14001ac6f:	mov    rdx,QWORD PTR [rsi]
   14001ac72:	mov    rcx,QWORD PTR [rax]
   14001ac75:	test   rdx,rdx
   14001ac78:	je     0x14001ac87
   14001ac7a:	mov    r9,QWORD PTR [rcx]
   14001ac7d:	lea    r8d,[r14+0x1]
   14001ac81:	call   QWORD PTR [r9+0x18]
   14001ac85:	jmp    0x14001ac92
   14001ac87:	mov    r8,QWORD PTR [rcx]
   14001ac8a:	lea    edx,[r14+0x1]
   14001ac8e:	call   QWORD PTR [r8+0x8]
   14001ac92:	mov    QWORD PTR [rsi],rax
   14001ac95:	mov    rcx,rax
   14001ac98:	movsxd rcx,edi
   14001ac9b:	mov    BYTE PTR [r14+rax*1],0x0
   14001aca0:	add    rcx,QWORD PTR [rsi]
   14001aca3:	test   ebx,ebx
   14001aca5:	jns    0x14001aca8
   14001aca7:	int3   
   14001aca8:	movsxd r8,ebx
   14001acab:	mov    rdx,rbp
   14001acae:	call   0x140026f70
   14001acb3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001acb8:	mov    rax,rsi
   14001acbb:	mov    rsi,QWORD PTR [rsp+0x40]
   14001acc0:	mov    rbp,QWORD PTR [rsp+0x38]
   14001acc5:	mov    rdi,QWORD PTR [rsp+0x48]
   14001acca:	add    rsp,0x20
   14001acce:	pop    r14
   14001acd0:	ret    
   14001acd1:	int3   
   14001acd2:	int3   
   14001acd3:	int3   
   14001acd4:	int3   
   14001acd5:	int3   
   14001acd6:	int3   
   14001acd7:	int3   
   14001acd8:	int3   
   14001acd9:	int3   
   14001acda:	int3   
   14001acdb:	int3   
   14001acdc:	int3   
   14001acdd:	int3   
   14001acde:	int3   
   14001acdf:	int3   
   14001ace0:	mov    QWORD PTR [rsp+0x8],rbx
   14001ace5:	push   rdi
   14001ace6:	sub    rsp,0x20
   14001acea:	mov    ebx,edx
   14001acec:	mov    rdi,rcx
   14001acef:	call   QWORD PTR [rip+0x177cb]        # 0x1400324c0
   14001acf5:	mov    rax,QWORD PTR [rip+0x17694]        # 0x140032390
   14001acfc:	mov    rdx,QWORD PTR [rdi]
   14001acff:	mov    rcx,QWORD PTR [rax]
   14001ad02:	test   rdx,rdx
   14001ad05:	je     0x14001ad14
   14001ad07:	mov    r9,QWORD PTR [rcx]
   14001ad0a:	lea    r8d,[rbx+0x1]
   14001ad0e:	call   QWORD PTR [r9+0x18]
   14001ad12:	jmp    0x14001ad1e
   14001ad14:	mov    r8,QWORD PTR [rcx]
   14001ad17:	lea    edx,[rbx+0x1]
   14001ad1a:	call   QWORD PTR [r8+0x8]
   14001ad1e:	mov    QWORD PTR [rdi],rax
   14001ad21:	mov    rcx,rax
   14001ad24:	mov    BYTE PTR [rbx+rax*1],0x0
   14001ad28:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ad2d:	add    rsp,0x20
   14001ad31:	pop    rdi
   14001ad32:	ret    
   14001ad33:	int3   
   14001ad34:	int3   
   14001ad35:	int3   
   14001ad36:	int3   
   14001ad37:	int3   
   14001ad38:	int3   
   14001ad39:	int3   
   14001ad3a:	int3   
   14001ad3b:	int3   
   14001ad3c:	int3   
   14001ad3d:	int3   
   14001ad3e:	int3   
   14001ad3f:	int3   
   14001ad40:	jmp    0x14001ac10
   14001ad45:	int3   
   14001ad46:	int3   
   14001ad47:	int3   
   14001ad48:	int3   
   14001ad49:	int3   
   14001ad4a:	int3   
   14001ad4b:	int3   
   14001ad4c:	int3   
   14001ad4d:	int3   
   14001ad4e:	int3   
   14001ad4f:	int3   
   14001ad50:	mov    QWORD PTR [rsp+0x18],rbx
   14001ad55:	push   rbp
   14001ad56:	push   rdi
   14001ad57:	push   r15
   14001ad59:	sub    rsp,0x20
   14001ad5d:	mov    r15,rdx
   14001ad60:	mov    rdi,rcx
   14001ad63:	mov    rcx,r15
   14001ad66:	mov    edx,r8d
   14001ad69:	mov    ebx,r8d
   14001ad6c:	call   0x1400226c0
   14001ad71:	cmp    ebx,eax
   14001ad73:	mov    ebp,eax
   14001ad75:	cmovl  ebp,ebx
   14001ad78:	test   ebp,ebp
   14001ad7a:	je     0x14001ae37
   14001ad80:	mov    rdx,QWORD PTR [rdi]
   14001ad83:	mov    QWORD PTR [rsp+0x40],rsi
   14001ad88:	mov    QWORD PTR [rsp+0x48],r14
   14001ad8d:	test   rdx,rdx
   14001ad90:	je     0x14001ada1
   14001ad92:	or     rbx,0xffffffffffffffff
   14001ad96:	inc    rbx
   14001ad99:	cmp    BYTE PTR [rdx+rbx*1],0x0
   14001ad9d:	jne    0x14001ad96
   14001ad9f:	jmp    0x14001ada3
   14001ada1:	xor    ebx,ebx
   14001ada3:	lea    r14d,[rbx+rbp*1]
   14001ada7:	call   QWORD PTR [rip+0x17713]        # 0x1400324c0
   14001adad:	mov    rax,QWORD PTR [rip+0x175dc]        # 0x140032390
   14001adb4:	mov    rdx,QWORD PTR [rdi]
   14001adb7:	mov    rcx,QWORD PTR [rax]
   14001adba:	test   rdx,rdx
   14001adbd:	je     0x14001adcc
   14001adbf:	mov    r9,QWORD PTR [rcx]
   14001adc2:	lea    r8d,[r14+0x1]
   14001adc6:	call   QWORD PTR [r9+0x18]
   14001adca:	jmp    0x14001add7
   14001adcc:	mov    r8,QWORD PTR [rcx]
   14001adcf:	lea    edx,[r14+0x1]
   14001add3:	call   QWORD PTR [r8+0x8]
   14001add7:	mov    QWORD PTR [rdi],rax
   14001adda:	mov    esi,r14d
   14001addd:	sub    esi,ebx
   14001addf:	mov    BYTE PTR [r14+rax*1],0x0
   14001ade4:	cmp    esi,ebp
   14001ade6:	mov    rcx,rax
   14001ade9:	cmovge esi,ebp
   14001adec:	cmp    QWORD PTR [rdi],0x0
   14001adf0:	jne    0x14001ae0d
   14001adf2:	mov    rax,QWORD PTR [rip+0x17597]        # 0x140032390
   14001adf9:	mov    edx,0x1
   14001adfe:	mov    rcx,QWORD PTR [rax]
   14001ae01:	mov    rax,QWORD PTR [rcx]
   14001ae04:	call   QWORD PTR [rax+0x8]
   14001ae07:	mov    QWORD PTR [rdi],rax
   14001ae0a:	mov    BYTE PTR [rax],0x0
   14001ae0d:	test   esi,esi
   14001ae0f:	jns    0x14001ae12
   14001ae11:	int3   
   14001ae12:	movsxd rcx,ebx
   14001ae15:	mov    rdx,r15
   14001ae18:	add    rcx,QWORD PTR [rdi]
   14001ae1b:	movsxd r8,esi
   14001ae1e:	call   0x140026f70
   14001ae23:	mov    rax,QWORD PTR [rdi]
   14001ae26:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ae2b:	movsxd rcx,r14d
   14001ae2e:	mov    r14,QWORD PTR [rsp+0x48]
   14001ae33:	mov    BYTE PTR [rcx+rax*1],0x0
   14001ae37:	mov    rbx,QWORD PTR [rsp+0x50]
   14001ae3c:	add    rsp,0x20
   14001ae40:	pop    r15
   14001ae42:	pop    rdi
   14001ae43:	pop    rbp
   14001ae44:	ret    
   14001ae45:	int3   
   14001ae46:	int3   
   14001ae47:	int3   
   14001ae48:	int3   
   14001ae49:	int3   
   14001ae4a:	int3   
   14001ae4b:	int3   
   14001ae4c:	int3   
   14001ae4d:	int3   
   14001ae4e:	int3   
   14001ae4f:	int3   
   14001ae50:	mov    QWORD PTR [rsp+0x10],rdx
   14001ae55:	mov    QWORD PTR [rsp+0x18],r8
   14001ae5a:	mov    QWORD PTR [rsp+0x20],r9
   14001ae5f:	sub    rsp,0x28
   14001ae63:	lea    r8,[rsp+0x40]
   14001ae68:	call   0x14001ae80
   14001ae6d:	add    rsp,0x28
   14001ae71:	ret    
   14001ae72:	int3   
   14001ae73:	int3   
   14001ae74:	int3   
   14001ae75:	int3   
   14001ae76:	int3   
   14001ae77:	int3   
   14001ae78:	int3   
   14001ae79:	int3   
   14001ae7a:	int3   
   14001ae7b:	int3   
   14001ae7c:	int3   
   14001ae7d:	int3   
   14001ae7e:	int3   
   14001ae7f:	int3   
   14001ae80:	mov    QWORD PTR [rsp+0x8],rbx
   14001ae85:	mov    QWORD PTR [rsp+0x10],rbp
   14001ae8a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ae8f:	push   rdi
   14001ae90:	push   r14
   14001ae92:	push   r15
   14001ae94:	mov    eax,0x1050
   14001ae99:	call   0x1400263c0
   14001ae9e:	sub    rsp,rax
   14001aea1:	mov    rbp,r8
   14001aea4:	mov    BYTE PTR [rsp+0x50],0x0
   14001aea9:	mov    r9,r8
   14001aeac:	lea    rdi,[rsp+0x50]
   14001aeb1:	mov    r8,rdx
   14001aeb4:	mov    r15,rdx
   14001aeb7:	mov    r14,rcx
   14001aeba:	mov    esi,0x1000
   14001aebf:	mov    edx,esi
   14001aec1:	lea    rcx,[rsp+0x50]
   14001aec6:	call   QWORD PTR [rip+0x1750c]        # 0x1400323d8
   14001aecc:	mov    ebx,eax
   14001aece:	test   eax,eax
   14001aed0:	jle    0x14001af09
   14001aed2:	cmp    ebx,esi
   14001aed4:	jl     0x14001afed
   14001aeda:	cmp    ebx,0x5f5e100
   14001aee0:	jg     0x14001af47
   14001aee2:	mov    edx,ebx
   14001aee4:	lea    esi,[rbx+0x1]
   14001aee7:	mov    rcx,r14
   14001aeea:	call   0x14001b450
   14001aeef:	mov    rdi,QWORD PTR [r14]
   14001aef2:	mov    r9,rbp
   14001aef5:	mov    rcx,rdi
   14001aef8:	mov    r8,r15
   14001aefb:	mov    edx,esi
   14001aefd:	call   QWORD PTR [rip+0x174d5]        # 0x1400323d8
   14001af03:	mov    ebx,eax
   14001af05:	test   eax,eax
   14001af07:	jg     0x14001aed2
   14001af09:	mov    rdx,QWORD PTR [r14]
   14001af0c:	test   rdx,rdx
   14001af0f:	je     0x14001af28
   14001af11:	mov    rax,QWORD PTR [rip+0x17478]        # 0x140032390
   14001af18:	mov    rcx,QWORD PTR [rax]
   14001af1b:	mov    rax,QWORD PTR [rcx]
   14001af1e:	call   QWORD PTR [rax+0x28]
   14001af21:	mov    QWORD PTR [r14],0x0
   14001af28:	xor    eax,eax
   14001af2a:	lea    r11,[rsp+0x1050]
   14001af32:	mov    rbx,QWORD PTR [r11+0x20]
   14001af36:	mov    rbp,QWORD PTR [r11+0x28]
   14001af3a:	mov    rsi,QWORD PTR [r11+0x30]
   14001af3e:	mov    rsp,r11
   14001af41:	pop    r15
   14001af43:	pop    r14
   14001af45:	pop    rdi
   14001af46:	ret    
   14001af47:	mov    rax,QWORD PTR [rip+0x1743a]        # 0x140032388
   14001af4e:	mov    edx,0x4
   14001af53:	mov    ecx,DWORD PTR [rax]
   14001af55:	call   QWORD PTR [rip+0x1754d]        # 0x1400324a8
   14001af5b:	test   al,al
   14001af5d:	je     0x14001afa8
   14001af5f:	lea    rax,[rip+0x1c6fa]        # 0x140037660
   14001af66:	mov    DWORD PTR [rsp+0x38],0x1f7
   14001af6e:	mov    QWORD PTR [rsp+0x30],rax
   14001af73:	lea    r9,[rip+0x1c6b6]        # 0x140037630
   14001af7a:	lea    rax,[rip+0x1c697]        # 0x140037618
   14001af81:	mov    DWORD PTR [rsp+0x28],ebx
   14001af85:	mov    QWORD PTR [rsp+0x40],rax
   14001af8a:	lea    r8,[rsp+0x30]
   14001af8f:	mov    QWORD PTR [rsp+0x20],rax
   14001af94:	mov    edx,0x4
   14001af99:	mov    rax,QWORD PTR [rip+0x173e8]        # 0x140032388
   14001afa0:	mov    ecx,DWORD PTR [rax]
   14001afa2:	call   QWORD PTR [rip+0x174f0]        # 0x140032498
   14001afa8:	call   QWORD PTR [rip+0x175da]        # 0x140032588
   14001afae:	test   al,al
   14001afb0:	je     0x14001afe1
   14001afb2:	call   QWORD PTR [rip+0x174c8]        # 0x140032480
   14001afb8:	lea    rcx,[rip+0x177ed]        # 0x1400327ac
   14001afbf:	xorps  xmm0,xmm0
   14001afc2:	lea    rdx,[rsp+0x30]
   14001afc7:	mov    DWORD PTR [rsp+0x38],eax
   14001afcb:	mov    QWORD PTR [rsp+0x30],rcx
   14001afd0:	mov    r8b,0x1
   14001afd3:	xor    ecx,ecx
   14001afd5:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001afdb:	call   QWORD PTR [rip+0x17497]        # 0x140032478
   14001afe1:	mov    ecx,0x1
   14001afe6:	call   QWORD PTR [rip+0x1725c]        # 0x140032248
   14001afec:	int3   
   14001afed:	lea    rax,[rsp+0x50]
   14001aff2:	cmp    rdi,rax
   14001aff5:	jne    0x14001b01b
   14001aff7:	test   rdi,rdi
   14001affa:	je     0x14001b00b
   14001affc:	or     rax,0xffffffffffffffff
   14001b000:	inc    rax
   14001b003:	cmp    BYTE PTR [rdi+rax*1],0x0
   14001b007:	jne    0x14001b000
   14001b009:	jmp    0x14001b00d
   14001b00b:	xor    eax,eax
   14001b00d:	mov    r8d,eax
   14001b010:	mov    rdx,rdi
   14001b013:	mov    rcx,r14
   14001b016:	call   0x14001b3d0
   14001b01b:	mov    eax,ebx
   14001b01d:	jmp    0x14001af2a
   14001b022:	int3   
   14001b023:	int3   
   14001b024:	int3   
   14001b025:	int3   
   14001b026:	int3   
   14001b027:	int3   
   14001b028:	int3   
   14001b029:	int3   
   14001b02a:	int3   
   14001b02b:	int3   
   14001b02c:	int3   
   14001b02d:	int3   
   14001b02e:	int3   
   14001b02f:	int3   
   14001b030:	mov    rax,QWORD PTR [rip+0x17359]        # 0x140032390
   14001b037:	mov    rdx,QWORD PTR [rcx]
   14001b03a:	mov    rcx,QWORD PTR [rax]
   14001b03d:	mov    rax,QWORD PTR [rcx]
   14001b040:	rex.W jmp QWORD PTR [rax+0x28]
   14001b044:	int3   
   14001b045:	int3   
   14001b046:	int3   
   14001b047:	int3   
   14001b048:	int3   
   14001b049:	int3   
   14001b04a:	int3   
   14001b04b:	int3   
   14001b04c:	int3   
   14001b04d:	int3   
   14001b04e:	int3   
   14001b04f:	int3   
   14001b050:	mov    rax,QWORD PTR [rcx]
   14001b053:	test   rax,rax
   14001b056:	jne    0x14001b05f
   14001b058:	lea    rax,[rip+0x17741]        # 0x1400327a0
   14001b05f:	ret    
   14001b060:	rex push rbx
   14001b062:	sub    rsp,0x220
   14001b069:	mov    rax,QWORD PTR [rcx]
   14001b06c:	mov    rbx,rdx
   14001b06f:	test   rax,rax
   14001b072:	lea    rcx,[rip+0x17727]        # 0x1400327a0
   14001b079:	mov    r8d,0x200
   14001b07f:	lea    rdx,[rsp+0x20]
   14001b084:	cmovne rcx,rax
   14001b088:	call   QWORD PTR [rip+0x17352]        # 0x1400323e0
   14001b08e:	lea    rcx,[rsp+0x20]
   14001b093:	mov    QWORD PTR [rbx],0x0
   14001b09a:	or     rax,0xffffffffffffffff
   14001b09e:	xchg   ax,ax
   14001b0a0:	inc    rax
   14001b0a3:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001b0a7:	jne    0x14001b0a0
   14001b0a9:	mov    r8d,eax
   14001b0ac:	lea    rdx,[rsp+0x20]
   14001b0b1:	mov    rcx,rbx
   14001b0b4:	call   0x14001b3d0
   14001b0b9:	mov    rax,rbx
   14001b0bc:	add    rsp,0x220
   14001b0c3:	pop    rbx
   14001b0c4:	ret    
   14001b0c5:	int3   
   14001b0c6:	int3   
   14001b0c7:	int3   
   14001b0c8:	int3   
   14001b0c9:	int3   
   14001b0ca:	int3   
   14001b0cb:	int3   
   14001b0cc:	int3   
   14001b0cd:	int3   
   14001b0ce:	int3   
   14001b0cf:	int3   
   14001b0d0:	mov    rcx,QWORD PTR [rcx]
   14001b0d3:	mov    r8,rdx
   14001b0d6:	test   rdx,rdx
   14001b0d9:	jne    0x14001b0fb
   14001b0db:	test   rcx,rcx
   14001b0de:	je     0x14001b0f3
   14001b0e0:	or     rax,0xffffffffffffffff
   14001b0e4:	inc    rax
   14001b0e7:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001b0eb:	jne    0x14001b0e4
   14001b0ed:	test   eax,eax
   14001b0ef:	sete   al
   14001b0f2:	ret    
   14001b0f3:	xor    eax,eax
   14001b0f5:	test   eax,eax
   14001b0f7:	sete   al
   14001b0fa:	ret    
   14001b0fb:	test   rcx,rcx
   14001b0fe:	lea    rax,[rip+0x1769b]        # 0x1400327a0
   14001b105:	cmovne rax,rcx
   14001b109:	sub    r8,rax
   14001b10c:	nop    DWORD PTR [rax+0x0]
   14001b110:	movzx  edx,BYTE PTR [rax]
   14001b113:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001b118:	sub    edx,ecx
   14001b11a:	jne    0x14001b123
   14001b11c:	inc    rax
   14001b11f:	test   ecx,ecx
   14001b121:	jne    0x14001b110
   14001b123:	xor    eax,eax
   14001b125:	test   edx,edx
   14001b127:	sete   al
   14001b12a:	ret    
   14001b12b:	int3   
   14001b12c:	int3   
   14001b12d:	int3   
   14001b12e:	int3   
   14001b12f:	int3   
   14001b130:	mov    QWORD PTR [rsp+0x10],rbx
   14001b135:	mov    QWORD PTR [rsp+0x18],rbp
   14001b13a:	push   rsi
   14001b13b:	push   r14
   14001b13d:	push   r15
   14001b13f:	sub    rsp,0x20
   14001b143:	movzx  r15d,r9b
   14001b147:	mov    rbp,r8
   14001b14a:	mov    r14,rdx
   14001b14d:	test   r8,r8
   14001b150:	je     0x14001b162
   14001b152:	or     rsi,0xffffffffffffffff
   14001b156:	inc    rsi
   14001b159:	cmp    BYTE PTR [rsi+r8*1],0x0
   14001b15e:	jne    0x14001b156
   14001b160:	jmp    0x14001b164
   14001b162:	xor    esi,esi
   14001b164:	mov    QWORD PTR [rdx],0x0
   14001b16b:	mov    rbx,QWORD PTR [rcx]
   14001b16e:	test   rbx,rbx
   14001b171:	je     0x14001b1d0
   14001b173:	cmp    BYTE PTR [rbx],0x0
   14001b176:	je     0x14001b1d0
   14001b178:	mov    QWORD PTR [rsp+0x40],rdi
   14001b17d:	nop    DWORD PTR [rax]
   14001b180:	mov    rdx,rbp
   14001b183:	mov    rcx,rbx
   14001b186:	test   r15b,r15b
   14001b189:	je     0x14001b192
   14001b18b:	call   0x1400273a8
   14001b190:	jmp    0x14001b198
   14001b192:	call   QWORD PTR [rip+0x173d0]        # 0x140032568
   14001b198:	mov    rdi,rax
   14001b19b:	test   rax,rax
   14001b19e:	je     0x14001b1c0
   14001b1a0:	mov    r8d,edi
   14001b1a3:	sub    r8d,ebx
   14001b1a6:	je     0x14001b1b3
   14001b1a8:	mov    rdx,rbx
   14001b1ab:	mov    rcx,r14
   14001b1ae:	call   0x14001ad50
   14001b1b3:	movsxd rbx,esi
   14001b1b6:	add    rbx,rdi
   14001b1b9:	cmp    BYTE PTR [rbx],0x0
   14001b1bc:	jne    0x14001b180
   14001b1be:	jmp    0x14001b1cb
   14001b1c0:	mov    rdx,rbx
   14001b1c3:	mov    rcx,r14
   14001b1c6:	call   0x14001ac10
   14001b1cb:	mov    rdi,QWORD PTR [rsp+0x40]
   14001b1d0:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b1d5:	mov    rax,r14
   14001b1d8:	mov    rbp,QWORD PTR [rsp+0x50]
   14001b1dd:	add    rsp,0x20
   14001b1e1:	pop    r15
   14001b1e3:	pop    r14
   14001b1e5:	pop    rsi
   14001b1e6:	ret    
   14001b1e7:	int3   
   14001b1e8:	int3   
   14001b1e9:	int3   
   14001b1ea:	int3   
   14001b1eb:	int3   
   14001b1ec:	int3   
   14001b1ed:	int3   
   14001b1ee:	int3   
   14001b1ef:	int3   
   14001b1f0:	mov    QWORD PTR [rsp+0x10],rdx
   14001b1f5:	push   rsi
   14001b1f6:	push   r13
   14001b1f8:	push   r15
   14001b1fa:	sub    rsp,0x40
   14001b1fe:	mov    r15,r9
   14001b201:	mov    r13,r8
   14001b204:	mov    rsi,rdx
   14001b207:	test   r9,r9
   14001b20a:	jne    0x14001b227
   14001b20c:	movzx  r9d,BYTE PTR [rsp+0x80]
   14001b215:	call   0x14001b130
   14001b21a:	mov    rax,rsi
   14001b21d:	add    rsp,0x40
   14001b221:	pop    r15
   14001b223:	pop    r13
   14001b225:	pop    rsi
   14001b226:	ret    
   14001b227:	mov    QWORD PTR [rsp+0x60],rbx
   14001b22c:	mov    QWORD PTR [rsp+0x30],rdi
   14001b231:	mov    QWORD PTR [rsp+0x28],r12
   14001b236:	test   r13,r13
   14001b239:	je     0x14001b24c
   14001b23b:	or     r12,0xffffffffffffffff
   14001b23f:	nop
   14001b240:	inc    r12
   14001b243:	cmp    BYTE PTR [r12+r8*1],0x0
   14001b248:	jne    0x14001b240
   14001b24a:	jmp    0x14001b24f
   14001b24c:	xor    r12d,r12d
   14001b24f:	mov    rdi,QWORD PTR [rcx]
   14001b252:	xor    ebx,ebx
   14001b254:	mov    QWORD PTR [rsp+0x78],rbx
   14001b259:	test   rdi,rdi
   14001b25c:	je     0x14001b376
   14001b262:	cmp    BYTE PTR [rdi],bl
   14001b264:	je     0x14001b376
   14001b26a:	mov    QWORD PTR [rsp+0x38],rbp
   14001b26f:	mov    QWORD PTR [rsp+0x20],r14
   14001b274:	nop    DWORD PTR [rax+0x0]
   14001b278:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b280:	cmp    BYTE PTR [rsp+0x80],0x0
   14001b288:	mov    rdx,r13
   14001b28b:	mov    rcx,rdi
   14001b28e:	je     0x14001b297
   14001b290:	call   0x1400273a8
   14001b295:	jmp    0x14001b29d
   14001b297:	call   QWORD PTR [rip+0x172cb]        # 0x140032568
   14001b29d:	mov    r14,rax
   14001b2a0:	test   rax,rax
   14001b2a3:	je     0x14001b355
   14001b2a9:	mov    r8d,r14d
   14001b2ac:	sub    r8d,edi
   14001b2af:	je     0x14001b2c3
   14001b2b1:	mov    rdx,rdi
   14001b2b4:	lea    rcx,[rsp+0x78]
   14001b2b9:	call   0x14001ad50
   14001b2be:	mov    rbx,QWORD PTR [rsp+0x78]
   14001b2c3:	test   rbx,rbx
   14001b2c6:	je     0x14001b2db
   14001b2c8:	or     rdi,0xffffffffffffffff
   14001b2cc:	nop    DWORD PTR [rax+0x0]
   14001b2d0:	inc    rdi
   14001b2d3:	cmp    BYTE PTR [rbx+rdi*1],0x0
   14001b2d7:	jne    0x14001b2d0
   14001b2d9:	jmp    0x14001b2dd
   14001b2db:	xor    edi,edi
   14001b2dd:	or     rsi,0xffffffffffffffff
   14001b2e1:	inc    rsi
   14001b2e4:	cmp    BYTE PTR [r15+rsi*1],0x0
   14001b2e9:	jne    0x14001b2e1
   14001b2eb:	lea    ebp,[rsi+rdi*1]
   14001b2ee:	test   ebp,ebp
   14001b2f0:	je     0x14001b344
   14001b2f2:	call   QWORD PTR [rip+0x171c8]        # 0x1400324c0
   14001b2f8:	mov    rax,QWORD PTR [rip+0x17091]        # 0x140032390
   14001b2ff:	mov    rcx,QWORD PTR [rax]
   14001b302:	test   rbx,rbx
   14001b305:	je     0x14001b317
   14001b307:	mov    r9,QWORD PTR [rcx]
   14001b30a:	lea    r8d,[rbp+0x1]
   14001b30e:	mov    rdx,rbx
   14001b311:	call   QWORD PTR [r9+0x18]
   14001b315:	jmp    0x14001b321
   14001b317:	mov    r8,QWORD PTR [rcx]
   14001b31a:	lea    edx,[rbp+0x1]
   14001b31d:	call   QWORD PTR [r8+0x8]
   14001b321:	movsxd rcx,edi
   14001b324:	mov    rbx,rax
   14001b327:	add    rcx,rax
   14001b32a:	mov    QWORD PTR [rsp+0x78],rax
   14001b32f:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
   14001b334:	test   esi,esi
   14001b336:	jns    0x14001b339
   14001b338:	int3   
   14001b339:	movsxd r8,esi
   14001b33c:	mov    rdx,r15
   14001b33f:	call   0x140026f70
   14001b344:	movsxd rdi,r12d
   14001b347:	add    rdi,r14
   14001b34a:	cmp    BYTE PTR [rdi],0x0
   14001b34d:	jne    0x14001b280
   14001b353:	jmp    0x14001b367
   14001b355:	mov    rdx,rdi
   14001b358:	lea    rcx,[rsp+0x78]
   14001b35d:	call   0x14001ac10
   14001b362:	mov    rbx,QWORD PTR [rsp+0x78]
   14001b367:	mov    rsi,QWORD PTR [rsp+0x68]
   14001b36c:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b371:	mov    r14,QWORD PTR [rsp+0x20]
   14001b376:	mov    r12,QWORD PTR [rsp+0x28]
   14001b37b:	mov    rax,rsi
   14001b37e:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b383:	mov    QWORD PTR [rsi],rbx
   14001b386:	mov    rbx,QWORD PTR [rsp+0x60]
   14001b38b:	add    rsp,0x40
   14001b38f:	pop    r15
   14001b391:	pop    r13
   14001b393:	pop    rsi
   14001b394:	ret    
   14001b395:	int3   
   14001b396:	int3   
   14001b397:	int3   
   14001b398:	int3   
   14001b399:	int3   
   14001b39a:	int3   
   14001b39b:	int3   
   14001b39c:	int3   
   14001b39d:	int3   
   14001b39e:	int3   
   14001b39f:	int3   
   14001b3a0:	test   rdx,rdx
   14001b3a3:	je     0x14001b3c1
   14001b3a5:	or     rax,0xffffffffffffffff
   14001b3a9:	nop    DWORD PTR [rax+0x0]
   14001b3b0:	inc    rax
   14001b3b3:	cmp    BYTE PTR [rdx+rax*1],0x0
   14001b3b7:	jne    0x14001b3b0
   14001b3b9:	mov    r8d,eax
   14001b3bc:	jmp    0x14001b3d0
   14001b3c1:	xor    eax,eax
   14001b3c3:	mov    r8d,eax
   14001b3c6:	jmp    0x14001b3d0
   14001b3cb:	int3   
   14001b3cc:	int3   
   14001b3cd:	int3   
   14001b3ce:	int3   
   14001b3cf:	int3   
   14001b3d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b3d5:	mov    QWORD PTR [rsp+0x10],rsi
   14001b3da:	push   rdi
   14001b3db:	sub    rsp,0x20
   14001b3df:	movsxd rsi,r8d
   14001b3e2:	mov    rdi,rdx
   14001b3e5:	mov    rbx,rcx
   14001b3e8:	test   rdx,rdx
   14001b3eb:	je     0x14001b41b
   14001b3ed:	test   r8d,r8d
   14001b3f0:	jle    0x14001b41b
   14001b3f2:	cmp    rdx,QWORD PTR [rcx]
   14001b3f5:	je     0x14001b43a
   14001b3f7:	mov    edx,esi
   14001b3f9:	call   0x14001ace0
   14001b3fe:	mov    rcx,QWORD PTR [rbx]
   14001b401:	mov    r8,rsi
   14001b404:	mov    rdx,rdi
   14001b407:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b40c:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b411:	add    rsp,0x20
   14001b415:	pop    rdi
   14001b416:	jmp    0x140026f70
   14001b41b:	mov    rdx,QWORD PTR [rcx]
   14001b41e:	test   rdx,rdx
   14001b421:	je     0x14001b43a
   14001b423:	mov    rax,QWORD PTR [rip+0x16f66]        # 0x140032390
   14001b42a:	mov    rcx,QWORD PTR [rax]
   14001b42d:	mov    rax,QWORD PTR [rcx]
   14001b430:	call   QWORD PTR [rax+0x28]
   14001b433:	mov    QWORD PTR [rbx],0x0
   14001b43a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b43f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b444:	add    rsp,0x20
   14001b448:	pop    rdi
   14001b449:	ret    
   14001b44a:	int3   
   14001b44b:	int3   
   14001b44c:	int3   
   14001b44d:	int3   
   14001b44e:	int3   
   14001b44f:	int3   
   14001b450:	mov    QWORD PTR [rsp+0x8],rbx
   14001b455:	mov    QWORD PTR [rsp+0x10],rsi
   14001b45a:	push   rdi
   14001b45b:	sub    rsp,0x20
   14001b45f:	mov    ebx,edx
   14001b461:	mov    rdi,rcx
   14001b464:	test   edx,edx
   14001b466:	jle    0x14001b4f6
   14001b46c:	mov    rcx,QWORD PTR [rcx]
   14001b46f:	test   rcx,rcx
   14001b472:	je     0x14001b490
   14001b474:	or     rax,0xffffffffffffffff
   14001b478:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b480:	cmp    BYTE PTR [rcx+rax*1+0x1],0x0
   14001b485:	lea    rax,[rax+0x1]
   14001b489:	jne    0x14001b480
   14001b48b:	lea    esi,[rax+0x1]
   14001b48e:	jmp    0x14001b492
   14001b490:	xor    esi,esi
   14001b492:	call   QWORD PTR [rip+0x17028]        # 0x1400324c0
   14001b498:	mov    rax,QWORD PTR [rip+0x16ef1]        # 0x140032390
   14001b49f:	mov    rdx,QWORD PTR [rdi]
   14001b4a2:	mov    rcx,QWORD PTR [rax]
   14001b4a5:	test   rdx,rdx
   14001b4a8:	je     0x14001b4b7
   14001b4aa:	mov    r9,QWORD PTR [rcx]
   14001b4ad:	lea    r8d,[rbx+0x1]
   14001b4b1:	call   QWORD PTR [r9+0x18]
   14001b4b5:	jmp    0x14001b4c1
   14001b4b7:	mov    r8,QWORD PTR [rcx]
   14001b4ba:	lea    edx,[rbx+0x1]
   14001b4bd:	call   QWORD PTR [r8+0x8]
   14001b4c1:	mov    QWORD PTR [rdi],rax
   14001b4c4:	mov    rcx,rax
   14001b4c7:	mov    BYTE PTR [rbx+rax*1],0x0
   14001b4cb:	cmp    ebx,esi
   14001b4cd:	jle    0x14001b513
   14001b4cf:	movsxd rcx,esi
   14001b4d2:	add    rcx,QWORD PTR [rdi]
   14001b4d5:	sub    ebx,esi
   14001b4d7:	jns    0x14001b4da
   14001b4d9:	int3   
   14001b4da:	movsxd r8,ebx
   14001b4dd:	mov    edx,0xff
   14001b4e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b4e7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b4ec:	add    rsp,0x20
   14001b4f0:	pop    rdi
   14001b4f1:	jmp    0x1400277b0
   14001b4f6:	mov    rdx,QWORD PTR [rcx]
   14001b4f9:	test   rdx,rdx
   14001b4fc:	je     0x14001b513
   14001b4fe:	mov    rax,QWORD PTR [rip+0x16e8b]        # 0x140032390
   14001b505:	mov    rcx,QWORD PTR [rax]
   14001b508:	mov    rax,QWORD PTR [rcx]
   14001b50b:	call   QWORD PTR [rax+0x28]
   14001b50e:	xor    esi,esi
   14001b510:	mov    QWORD PTR [rdi],rsi
   14001b513:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b518:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b51d:	add    rsp,0x20
   14001b521:	pop    rdi
   14001b522:	ret    
   14001b523:	int3   
   14001b524:	int3   
   14001b525:	int3   
   14001b526:	int3   
   14001b527:	int3   
   14001b528:	int3   
   14001b529:	int3   
   14001b52a:	int3   
   14001b52b:	int3   
   14001b52c:	int3   
   14001b52d:	int3   
   14001b52e:	int3   
   14001b52f:	int3   
   14001b530:	mov    QWORD PTR [rsp+0x10],rbx
   14001b535:	mov    QWORD PTR [rsp+0x18],rsi
   14001b53a:	push   rdi
   14001b53b:	sub    rsp,0x20
   14001b53f:	mov    r10,QWORD PTR [rcx]
   14001b542:	mov    rsi,rdx
   14001b545:	test   r10,r10
   14001b548:	je     0x14001b621
   14001b54e:	or     rdi,0xffffffffffffffff
   14001b552:	inc    rdi
   14001b555:	cmp    BYTE PTR [r10+rdi*1],0x0
   14001b55a:	jne    0x14001b552
   14001b55c:	test   edi,edi
   14001b55e:	je     0x14001b621
   14001b564:	test   r8d,r8d
   14001b567:	jns    0x14001b57a
   14001b569:	neg    r8d
   14001b56c:	mov    eax,r8d
   14001b56f:	mov    r8d,edi
   14001b572:	cdq    
   14001b573:	idiv   edi
   14001b575:	sub    r8d,edx
   14001b578:	jmp    0x14001b581
   14001b57a:	cmp    r8d,edi
   14001b57d:	cmovge r8d,edi
   14001b581:	cmp    r9d,0x7fffffff
   14001b588:	je     0x14001b5a6
   14001b58a:	test   r9d,r9d
   14001b58d:	jns    0x14001b59c
   14001b58f:	neg    r9d
   14001b592:	mov    eax,r9d
   14001b595:	cdq    
   14001b596:	idiv   edi
   14001b598:	sub    edi,edx
   14001b59a:	jmp    0x14001b5a6
   14001b59c:	cmp    r9d,edi
   14001b59f:	cmovge r9d,edi
   14001b5a3:	mov    edi,r9d
   14001b5a6:	xor    ebx,ebx
   14001b5a8:	cmp    r8d,edi
   14001b5ab:	jl     0x14001b5c3
   14001b5ad:	mov    QWORD PTR [rsi],rbx
   14001b5b0:	mov    rax,rsi
   14001b5b3:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b5b8:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b5bd:	add    rsp,0x20
   14001b5c1:	pop    rdi
   14001b5c2:	ret    
   14001b5c3:	mov    QWORD PTR [rsp+0x30],rbp
   14001b5c8:	sub    edi,r8d
   14001b5cb:	movsxd rbp,r8d
   14001b5ce:	add    rbp,r10
   14001b5d1:	je     0x14001b606
   14001b5d3:	test   edi,edi
   14001b5d5:	jle    0x14001b606
   14001b5d7:	call   QWORD PTR [rip+0x16ee3]        # 0x1400324c0
   14001b5dd:	mov    rax,QWORD PTR [rip+0x16dac]        # 0x140032390
   14001b5e4:	lea    edx,[rdi+0x1]
   14001b5e7:	mov    rcx,QWORD PTR [rax]
   14001b5ea:	mov    r8,QWORD PTR [rcx]
   14001b5ed:	call   QWORD PTR [r8+0x8]
   14001b5f1:	movsxd r8,edi
   14001b5f4:	mov    rdx,rbp
   14001b5f7:	mov    rcx,rax
   14001b5fa:	mov    rbx,rax
   14001b5fd:	mov    BYTE PTR [rdi+rax*1],0x0
   14001b601:	call   0x140026f70
   14001b606:	mov    rbp,QWORD PTR [rsp+0x30]
   14001b60b:	mov    rax,rsi
   14001b60e:	mov    QWORD PTR [rsi],rbx
   14001b611:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b616:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b61b:	add    rsp,0x20
   14001b61f:	pop    rdi
   14001b620:	ret    
   14001b621:	xor    ebx,ebx
   14001b623:	mov    rax,rsi
   14001b626:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b62b:	mov    QWORD PTR [rdx],rbx
   14001b62e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b633:	add    rsp,0x20
   14001b637:	pop    rdi
   14001b638:	ret    
   14001b639:	int3   
   14001b63a:	int3   
   14001b63b:	int3   
   14001b63c:	int3   
   14001b63d:	int3   
   14001b63e:	int3   
   14001b63f:	int3   
   14001b640:	rex push rbx
   14001b642:	sub    rsp,0x220
   14001b649:	mov    rax,QWORD PTR [rcx]
   14001b64c:	mov    rbx,rdx
   14001b64f:	test   rax,rax
   14001b652:	lea    rcx,[rip+0x17147]        # 0x1400327a0
   14001b659:	mov    r8d,0x200
   14001b65f:	lea    rdx,[rsp+0x20]
   14001b664:	cmovne rcx,rax
   14001b668:	call   QWORD PTR [rip+0x16eb2]        # 0x140032520
   14001b66e:	lea    rcx,[rsp+0x20]
   14001b673:	mov    QWORD PTR [rbx],0x0
   14001b67a:	or     rax,0xffffffffffffffff
   14001b67e:	xchg   ax,ax
   14001b680:	inc    rax
   14001b683:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001b687:	jne    0x14001b680
   14001b689:	mov    r8d,eax
   14001b68c:	lea    rdx,[rsp+0x20]
   14001b691:	mov    rcx,rbx
   14001b694:	call   0x14001b3d0
   14001b699:	mov    rax,rbx
   14001b69c:	add    rsp,0x220
   14001b6a3:	pop    rbx
   14001b6a4:	ret    
   14001b6a5:	int3   
   14001b6a6:	int3   
   14001b6a7:	int3   
   14001b6a8:	int3   
   14001b6a9:	int3   
   14001b6aa:	int3   
   14001b6ab:	int3   
   14001b6ac:	int3   
   14001b6ad:	int3   
   14001b6ae:	int3   
   14001b6af:	int3   
   14001b6b0:	sub    rsp,0x28
   14001b6b4:	mov    rcx,QWORD PTR [rip+0x2be5d]        # 0x140047518
   14001b6bb:	mov    rax,QWORD PTR [rcx]
   14001b6be:	call   QWORD PTR [rax+0x60]
   14001b6c1:	mov    al,0x1
   14001b6c3:	add    rsp,0x28
   14001b6c7:	ret    
   14001b6c8:	int3   
   14001b6c9:	int3   
   14001b6ca:	int3   
   14001b6cb:	int3   
   14001b6cc:	int3   
   14001b6cd:	int3   
   14001b6ce:	int3   
   14001b6cf:	int3   
   14001b6d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001b6d5:	mov    QWORD PTR [rsp+0x18],rsi
   14001b6da:	push   rdi
   14001b6db:	sub    rsp,0x20
   14001b6df:	xor    edi,edi
   14001b6e1:	mov    BYTE PTR [rcx+0x10],0x0
   14001b6e5:	mov    QWORD PTR [rcx+0x18],rdi
   14001b6e9:	lea    rax,[rip+0x1c040]        # 0x140037730
   14001b6f0:	mov    QWORD PTR [rcx],rax
   14001b6f3:	mov    rbx,rcx
   14001b6f6:	mov    QWORD PTR [rcx+0x20],rdi
   14001b6fa:	lea    rax,[rip+0x1c0ef]        # 0x1400377f0
   14001b701:	mov    QWORD PTR [rcx+0x30],rax
   14001b705:	lea    rax,[rip+0x18d84]        # 0x140034490
   14001b70c:	mov    QWORD PTR [rcx+0x28],rdi
   14001b710:	mov    QWORD PTR [rcx+0x8],rdi
   14001b714:	mov    QWORD PTR [rcx+0x6c],rdi
   14001b718:	mov    QWORD PTR [rcx+0x78],rdi
   14001b71c:	mov    QWORD PTR [rcx+0x80],rdi
   14001b723:	mov    QWORD PTR [rcx+0x40],rax
   14001b727:	mov    QWORD PTR [rcx+0x38],rcx
   14001b72b:	mov    BYTE PTR [rcx+0x60],dil
   14001b72f:	mov    DWORD PTR [rcx+0x64],edi
   14001b732:	mov    BYTE PTR [rcx+0x68],dil
   14001b736:	mov    DWORD PTR [rcx+0x50],0x2
   14001b73d:	lea    ecx,[rdi+0x2]
   14001b740:	call   0x140007bf0
   14001b745:	movsxd r8,DWORD PTR [rbx+0x50]
   14001b749:	mov    rcx,rax
   14001b74c:	mov    rdx,QWORD PTR [rbx+0x40]
   14001b750:	mov    QWORD PTR [rbx+0x48],rax
   14001b754:	call   0x140026f70
   14001b759:	mov    rdx,QWORD PTR [rbx+0x48]
   14001b75d:	mov    rcx,rbx
   14001b760:	call   0x14001c120
   14001b765:	lea    rsi,[rip+0x17034]        # 0x1400327a0
   14001b76c:	test   al,al
   14001b76e:	jne    0x14001b7bd
   14001b770:	mov    rcx,QWORD PTR [rbx+0x48]
   14001b774:	call   QWORD PTR [rip+0x16c76]        # 0x1400323f0
   14001b77a:	movss  DWORD PTR [rsp+0x30],xmm0
   14001b780:	mov    eax,DWORD PTR [rsp+0x30]
   14001b784:	and    eax,0x7f800000
   14001b789:	movss  DWORD PTR [rbx+0x54],xmm0
   14001b78e:	cmp    eax,0x7f800000
   14001b793:	jne    0x14001b7b0
   14001b795:	mov    r8,QWORD PTR [rbx+0x48]
   14001b799:	lea    rcx,[rip+0x1c1f0]        # 0x140037990
   14001b7a0:	mov    rdx,rsi
   14001b7a3:	call   QWORD PTR [rip+0x16c07]        # 0x1400323b0
   14001b7a9:	mov    DWORD PTR [rbx+0x54],0x7f7fffff
   14001b7b0:	mov    rcx,QWORD PTR [rbx+0x48]
   14001b7b4:	call   QWORD PTR [rip+0x16ade]        # 0x140032298
   14001b7ba:	mov    DWORD PTR [rbx+0x58],eax
   14001b7bd:	mov    rax,QWORD PTR [rip+0x2a9ec]        # 0x1400461b0
   14001b7c4:	mov    QWORD PTR [rbx+0x20],rax
   14001b7c8:	mov    BYTE PTR [rbx+0x10],dil
   14001b7cc:	mov    QWORD PTR [rbx+0x18],rsi
   14001b7d0:	mov    QWORD PTR [rbx+0x28],rdi
   14001b7d4:	mov    rax,QWORD PTR [rip+0x2c78d]        # 0x140047f68
   14001b7db:	mov    QWORD PTR [rbx+0x8],rax
   14001b7df:	cmp    QWORD PTR [rip+0x2c78a],rdi        # 0x140047f70
   14001b7e6:	mov    QWORD PTR [rip+0x2c77b],rbx        # 0x140047f68
   14001b7ed:	je     0x14001b7f8
   14001b7ef:	mov    rax,QWORD PTR [rbx]
   14001b7f2:	mov    rcx,rbx
   14001b7f5:	call   QWORD PTR [rax+0x60]
   14001b7f8:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b7fd:	lea    rax,[rip+0x1c03c]        # 0x140037840
   14001b804:	mov    QWORD PTR [rbx],rax
   14001b807:	lea    rax,[rip+0x1c0f2]        # 0x140037900
   14001b80e:	mov    QWORD PTR [rbx+0x30],rax
   14001b812:	mov    rax,rbx
   14001b815:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b81a:	add    rsp,0x20
   14001b81e:	pop    rdi
   14001b81f:	ret    
   14001b820:	mov    QWORD PTR [rsp+0x8],rbx
   14001b825:	push   rdi
   14001b826:	sub    rsp,0x20
   14001b82a:	cmp    BYTE PTR [rcx+0x10],0x0
   14001b82e:	lea    rax,[rip+0x1befb]        # 0x140037730
   14001b835:	mov    QWORD PTR [rcx],rax
   14001b838:	mov    edi,edx
   14001b83a:	lea    rax,[rip+0x1bfaf]        # 0x1400377f0
   14001b841:	mov    rbx,rcx
   14001b844:	mov    QWORD PTR [rcx+0x30],rax
   14001b848:	je     0x14001b855
   14001b84a:	cmp    QWORD PTR [rcx+0x38],rcx
   14001b84e:	jne    0x14001b855
   14001b850:	call   0x14001bdc0
   14001b855:	mov    rcx,QWORD PTR [rbx+0x48]
   14001b859:	test   rcx,rcx
   14001b85c:	je     0x14001b86b
   14001b85e:	call   0x140007bd0
   14001b863:	mov    QWORD PTR [rbx+0x48],0x0
   14001b86b:	lea    rcx,[rbx+0x70]
   14001b86f:	call   0x1400181a0
   14001b874:	lea    rax,[rip+0x1be45]        # 0x1400376c0
   14001b87b:	mov    QWORD PTR [rbx],rax
   14001b87e:	test   dil,0x1
   14001b882:	je     0x14001b891
   14001b884:	mov    edx,0x88
   14001b889:	mov    rcx,rbx
   14001b88c:	call   0x14002639c
   14001b891:	mov    rax,rbx
   14001b894:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b899:	add    rsp,0x20
   14001b89d:	pop    rdi
   14001b89e:	ret    
   14001b89f:	int3   
   14001b8a0:	rex push rbx
   14001b8a2:	sub    rsp,0x20
   14001b8a6:	lea    rax,[rip+0x1be13]        # 0x1400376c0
   14001b8ad:	mov    rbx,rcx
   14001b8b0:	mov    QWORD PTR [rcx],rax
   14001b8b3:	test   dl,0x1
   14001b8b6:	je     0x14001b8c2
   14001b8b8:	mov    edx,0x30
   14001b8bd:	call   0x14002639c
   14001b8c2:	mov    rax,rbx
   14001b8c5:	add    rsp,0x20
   14001b8c9:	pop    rbx
   14001b8ca:	ret    
   14001b8cb:	int3   
   14001b8cc:	int3   
   14001b8cd:	int3   
   14001b8ce:	int3   
   14001b8cf:	int3   
   14001b8d0:	or     QWORD PTR [rcx+0x28],rdx
   14001b8d4:	ret    
   14001b8d5:	int3   
   14001b8d6:	int3   
   14001b8d7:	int3   
   14001b8d8:	int3   
   14001b8d9:	int3   
   14001b8da:	int3   
   14001b8db:	int3   
   14001b8dc:	int3   
   14001b8dd:	int3   
   14001b8de:	int3   
   14001b8df:	int3   
   14001b8e0:	mov    rax,QWORD PTR [rcx+0x38]
   14001b8e4:	or     QWORD PTR [rax+0x28],rdx
   14001b8e8:	ret    
   14001b8e9:	int3   
   14001b8ea:	int3   
   14001b8eb:	int3   
   14001b8ec:	sub    rcx,0x30
   14001b8f0:	jmp    0x14001b8e0
   14001b8f5:	int3   
   14001b8f6:	int3   
   14001b8f7:	int3   
   14001b8f8:	int3   
   14001b8f9:	int3   
   14001b8fa:	int3   
   14001b8fb:	int3   
   14001b8fc:	int3   
   14001b8fd:	int3   
   14001b8fe:	int3   
   14001b8ff:	int3   
   14001b900:	rex push rbp
   14001b902:	push   r14
   14001b904:	push   r15
   14001b906:	sub    rsp,0x30
   14001b90a:	lea    rbp,[rsp+0x20]
   14001b90f:	mov    QWORD PTR [rbp+0x30],rbx
   14001b913:	mov    QWORD PTR [rbp+0x38],rsi
   14001b917:	mov    rsi,rdx
   14001b91a:	mov    QWORD PTR [rbp+0x40],rdi
   14001b91e:	mov    rdi,rcx
   14001b921:	movsxd rcx,DWORD PTR [rcx+0x50]
   14001b925:	movaps XMMWORD PTR [rbp+0x0],xmm6
   14001b929:	movaps xmm6,xmm2
   14001b92c:	lea    eax,[rcx+0x1f]
   14001b92f:	movsxd r8,eax
   14001b932:	and    r8,0xfffffffffffffff0
   14001b936:	lea    rax,[r8+0xf]
   14001b93a:	cmp    rax,r8
   14001b93d:	ja     0x14001b949
   14001b93f:	movabs rax,0xffffffffffffff0
   14001b949:	and    rax,0xfffffffffffffff0
   14001b94d:	call   0x1400263c0
   14001b952:	mov    rdx,QWORD PTR [rdi+0x48]
   14001b956:	sub    rsp,rax
   14001b959:	mov    r8,rcx
   14001b95c:	lea    r14,[rsp+0x20]
   14001b961:	add    r14,0x10
   14001b965:	and    r14,0xffffffffffffffef
   14001b969:	mov    rcx,r14
   14001b96c:	call   0x140026f70
   14001b971:	or     rbx,0xffffffffffffffff
   14001b975:	inc    rbx
   14001b978:	cmp    BYTE PTR [rsi+rbx*1],0x0
   14001b97c:	jne    0x14001b975
   14001b97e:	inc    ebx
   14001b980:	cmp    ebx,DWORD PTR [rdi+0x50]
   14001b983:	jle    0x14001b9a2
   14001b985:	mov    rcx,QWORD PTR [rdi+0x48]
   14001b989:	test   rcx,rcx
   14001b98c:	je     0x14001b993
   14001b98e:	call   0x140007bd0
   14001b993:	movsxd rcx,ebx
   14001b996:	call   0x140007bf0
   14001b99b:	mov    QWORD PTR [rdi+0x48],rax
   14001b99f:	mov    DWORD PTR [rdi+0x50],ebx
   14001b9a2:	mov    rcx,QWORD PTR [rdi+0x48]
   14001b9a6:	mov    rdx,rsi
   14001b9a9:	movsxd r8,ebx
   14001b9ac:	call   0x140026f70
   14001b9b1:	xor    ebx,ebx
   14001b9b3:	cmp    DWORD PTR [rdi+0x70],ebx
   14001b9b6:	jle    0x14001b9dc
   14001b9b8:	mov    esi,ebx
   14001b9ba:	nop    WORD PTR [rax+rax*1+0x0]
   14001b9c0:	mov    rax,QWORD PTR [rdi+0x78]
   14001b9c4:	lea    rcx,[rdi+0x30]
   14001b9c8:	movaps xmm2,xmm6
   14001b9cb:	mov    rdx,r14
   14001b9ce:	call   QWORD PTR [rsi+rax*1]
   14001b9d1:	inc    ebx
   14001b9d3:	lea    rsi,[rsi+0x8]
   14001b9d7:	cmp    ebx,DWORD PTR [rdi+0x70]
   14001b9da:	jl     0x14001b9c0
   14001b9dc:	mov    rcx,QWORD PTR [rip+0x2bb35]        # 0x140047518
   14001b9e3:	test   rcx,rcx
   14001b9e6:	je     0x14001b9fa
   14001b9e8:	mov    rax,QWORD PTR [rcx]
   14001b9eb:	movaps xmm3,xmm6
   14001b9ee:	mov    r8,r14
   14001b9f1:	mov    rdx,rdi
   14001b9f4:	call   QWORD PTR [rax+0xc0]
   14001b9fa:	mov    rbx,QWORD PTR [rbp+0x30]
   14001b9fe:	mov    rsi,QWORD PTR [rbp+0x38]
   14001ba02:	mov    rdi,QWORD PTR [rbp+0x40]
   14001ba06:	movaps xmm6,XMMWORD PTR [rbp+0x0]
   14001ba0a:	lea    rsp,[rbp+0x10]
   14001ba0e:	pop    r15
   14001ba10:	pop    r14
   14001ba12:	pop    rbp
   14001ba13:	ret    
   14001ba14:	int3   
   14001ba15:	int3   
   14001ba16:	int3   
   14001ba17:	int3   
   14001ba18:	int3   
   14001ba19:	int3   
   14001ba1a:	int3   
   14001ba1b:	int3   
   14001ba1c:	int3   
   14001ba1d:	int3   
   14001ba1e:	int3   
   14001ba1f:	int3   
   14001ba20:	cmp    BYTE PTR [rcx+0x60],0x0
   14001ba24:	je     0x14001ba37
   14001ba26:	movss  xmm0,DWORD PTR [rcx+0x64]
   14001ba2b:	comiss xmm0,DWORD PTR [rdx]
   14001ba2e:	jbe    0x14001ba37
   14001ba30:	movss  DWORD PTR [rdx],xmm0
   14001ba34:	mov    al,0x1
   14001ba36:	ret    
   14001ba37:	cmp    BYTE PTR [rcx+0x68],0x0
   14001ba3b:	je     0x14001ba47
   14001ba3d:	movss  xmm0,DWORD PTR [rcx+0x6c]
   14001ba42:	comiss xmm0,DWORD PTR [rdx]
   14001ba45:	jb     0x14001ba30
   14001ba47:	xor    al,al
   14001ba49:	ret    
   14001ba4a:	int3   
   14001ba4b:	int3   
   14001ba4c:	int3   
   14001ba4d:	int3   
   14001ba4e:	int3   
   14001ba4f:	int3   
   14001ba50:	rex push rbx
   14001ba52:	sub    rsp,0x20
   14001ba56:	mov    rax,rcx
   14001ba59:	mov    rbx,rdx
   14001ba5c:	mov    rcx,QWORD PTR [rip+0x2bab5]        # 0x140047518
   14001ba63:	test   rcx,rcx
   14001ba66:	je     0x14001bb15
   14001ba6c:	cmp    BYTE PTR [rip+0x2c625],0x0        # 0x140048098
   14001ba73:	jne    0x14001bb15
   14001ba79:	mov    QWORD PTR [rip+0x2c610],rax        # 0x140048090
   14001ba80:	mov    rax,QWORD PTR [rcx]
   14001ba83:	mov    BYTE PTR [rip+0x2c60e],0x1        # 0x140048098
   14001ba8a:	call   QWORD PTR [rax+0x58]
   14001ba8d:	test   rbx,rbx
   14001ba90:	mov    DWORD PTR [rip+0x2a70a],eax        # 0x1400461a0
   14001ba96:	lea    rax,[rip+0x2a70b]        # 0x1400461a8
   14001ba9d:	cmovne rax,rbx
   14001baa1:	mov    rbx,QWORD PTR [rip+0x2c4c0]        # 0x140047f68
   14001baa8:	mov    QWORD PTR [rip+0x2c4c1],rax        # 0x140047f70
   14001baaf:	test   rbx,rbx
   14001bab2:	je     0x14001baea
   14001bab4:	mov    QWORD PTR [rsp+0x30],rdi
   14001bab9:	nop    DWORD PTR [rax+0x0]
   14001bac0:	mov    rax,QWORD PTR [rbx]
   14001bac3:	mov    rcx,rbx
   14001bac6:	mov    rdx,QWORD PTR [rip+0x2c5c3]        # 0x140048090
   14001bacd:	mov    rdi,QWORD PTR [rbx+0x8]
   14001bad1:	call   QWORD PTR [rax+0x20]
   14001bad4:	mov    rax,QWORD PTR [rbx]
   14001bad7:	mov    rcx,rbx
   14001bada:	call   QWORD PTR [rax+0x60]
   14001badd:	mov    rbx,rdi
   14001bae0:	test   rdi,rdi
   14001bae3:	jne    0x14001bac0
   14001bae5:	mov    rdi,QWORD PTR [rsp+0x30]
   14001baea:	mov    rcx,QWORD PTR [rip+0x2ba27]        # 0x140047518
   14001baf1:	mov    rax,QWORD PTR [rcx]
   14001baf4:	call   QWORD PTR [rax+0x110]
   14001bafa:	mov    rcx,QWORD PTR [rip+0x2ba17]        # 0x140047518
   14001bb01:	mov    rax,QWORD PTR [rcx]
   14001bb04:	call   QWORD PTR [rax+0x158]
   14001bb0a:	mov    QWORD PTR [rip+0x2c453],0x0        # 0x140047f68
   14001bb15:	add    rsp,0x20
   14001bb19:	pop    rbx
   14001bb1a:	ret    
   14001bb1b:	int3   
   14001bb1c:	int3   
   14001bb1d:	int3   
   14001bb1e:	int3   
   14001bb1f:	int3   
   14001bb20:	sub    rsp,0x28
   14001bb24:	mov    rcx,QWORD PTR [rip+0x2b9ed]        # 0x140047518
   14001bb2b:	test   rcx,rcx
   14001bb2e:	je     0x14001bb6c
   14001bb30:	cmp    BYTE PTR [rip+0x2c561],0x0        # 0x140048098
   14001bb37:	je     0x14001bb6c
   14001bb39:	mov    rax,QWORD PTR [rcx]
   14001bb3c:	mov    edx,DWORD PTR [rip+0x2a65e]        # 0x1400461a0
   14001bb42:	call   QWORD PTR [rax+0x118]
   14001bb48:	mov    rcx,QWORD PTR [rip+0x2b9c9]        # 0x140047518
   14001bb4f:	mov    edx,DWORD PTR [rip+0x2a64b]        # 0x1400461a0
   14001bb55:	mov    rax,QWORD PTR [rcx]
   14001bb58:	call   QWORD PTR [rax+0x70]
   14001bb5b:	mov    DWORD PTR [rip+0x2a63b],0xffffffff        # 0x1400461a0
   14001bb65:	mov    BYTE PTR [rip+0x2c52c],0x0        # 0x140048098
   14001bb6c:	add    rsp,0x28
   14001bb70:	ret    
   14001bb71:	int3   
   14001bb72:	int3   
   14001bb73:	int3   
   14001bb74:	int3   
   14001bb75:	int3   
   14001bb76:	int3   
   14001bb77:	int3   
   14001bb78:	int3   
   14001bb79:	int3   
   14001bb7a:	int3   
   14001bb7b:	int3   
   14001bb7c:	int3   
   14001bb7d:	int3   
   14001bb7e:	int3   
   14001bb7f:	int3   
   14001bb80:	mov    rax,QWORD PTR [rip+0x2a629]        # 0x1400461b0
   14001bb87:	test   r8,r8
   14001bb8a:	mov    BYTE PTR [rcx+0x10],0x0
   14001bb8e:	cmovne rax,r8
   14001bb92:	mov    QWORD PTR [rcx+0x18],rdx
   14001bb96:	mov    QWORD PTR [rcx+0x20],rax
   14001bb9a:	mov    QWORD PTR [rcx+0x28],r9
   14001bb9e:	test   r9b,0x1
   14001bba2:	jne    0x14001bbb8
   14001bba4:	mov    rax,QWORD PTR [rip+0x2c3bd]        # 0x140047f68
   14001bbab:	mov    QWORD PTR [rcx+0x8],rax
   14001bbaf:	mov    QWORD PTR [rip+0x2c3b2],rcx        # 0x140047f68
   14001bbb6:	jmp    0x14001bbc0
   14001bbb8:	mov    QWORD PTR [rcx+0x8],0x0
   14001bbc0:	cmp    QWORD PTR [rip+0x2c3a8],0x0        # 0x140047f70
   14001bbc8:	je     0x14001bbd1
   14001bbca:	mov    rax,QWORD PTR [rcx]
   14001bbcd:	rex.W jmp QWORD PTR [rax+0x60]
   14001bbd1:	ret    
   14001bbd2:	int3   
   14001bbd3:	int3   
   14001bbd4:	int3   
   14001bbd5:	int3   
   14001bbd6:	int3   
   14001bbd7:	int3   
   14001bbd8:	int3   
   14001bbd9:	int3   
   14001bbda:	int3   
   14001bbdb:	int3   
   14001bbdc:	int3   
   14001bbdd:	int3   
   14001bbde:	int3   
   14001bbdf:	int3   
   14001bbe0:	rex push rbx
   14001bbe2:	sub    rsp,0x20
   14001bbe6:	movss  xmm0,DWORD PTR [rsp+0x60]
   14001bbec:	test   r8,r8
   14001bbef:	mov    rax,QWORD PTR [rip+0x2a5c2]        # 0x1400461b8
   14001bbf6:	mov    rbx,rcx
   14001bbf9:	cmovne rax,r8
   14001bbfd:	mov    QWORD PTR [rsp+0x30],rbp
   14001bc02:	mov    QWORD PTR [rcx+0x40],rax
   14001bc06:	mov    rbp,r9
   14001bc09:	movzx  eax,BYTE PTR [rsp+0x58]
   14001bc0e:	mov    QWORD PTR [rsp+0x38],rsi
   14001bc13:	mov    rsi,QWORD PTR [rsp+0x78]
   14001bc18:	mov    BYTE PTR [rcx+0x60],al
   14001bc1b:	movzx  eax,BYTE PTR [rsp+0x68]
   14001bc20:	movss  DWORD PTR [rcx+0x64],xmm0
   14001bc25:	movss  xmm0,DWORD PTR [rsp+0x70]
   14001bc2b:	mov    QWORD PTR [rsp+0x48],r14
   14001bc30:	mov    r14,rdx
   14001bc33:	mov    BYTE PTR [rcx+0x68],al
   14001bc36:	movss  DWORD PTR [rcx+0x6c],xmm0
   14001bc3b:	mov    QWORD PTR [rcx+0x38],rcx
   14001bc3f:	test   rsi,rsi
   14001bc42:	je     0x14001bc7b
   14001bc44:	mov    QWORD PTR [rsp+0x40],rdi
   14001bc49:	movsxd rdi,DWORD PTR [rcx+0x70]
   14001bc4d:	cmp    edi,DWORD PTR [rcx+0x80]
   14001bc53:	jne    0x14001bc63
   14001bc55:	add    rcx,0x78
   14001bc59:	mov    edx,0x1
   14001bc5e:	call   0x140013420
   14001bc63:	mov    rax,QWORD PTR [rbx+0x78]
   14001bc67:	inc    DWORD PTR [rbx+0x70]
   14001bc6a:	lea    rdx,[rax+rdi*8]
   14001bc6e:	mov    rdi,QWORD PTR [rsp+0x40]
   14001bc73:	test   rdx,rdx
   14001bc76:	je     0x14001bc7b
   14001bc78:	mov    QWORD PTR [rdx],rsi
   14001bc7b:	mov    rcx,QWORD PTR [rbx+0x40]
   14001bc7f:	or     rax,0xffffffffffffffff
   14001bc83:	mov    rsi,QWORD PTR [rsp+0x38]
   14001bc88:	nop    DWORD PTR [rax+rax*1+0x0]
   14001bc90:	inc    rax
   14001bc93:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001bc97:	jne    0x14001bc90
   14001bc99:	inc    eax
   14001bc9b:	movsxd rcx,eax
   14001bc9e:	mov    DWORD PTR [rbx+0x50],eax
   14001bca1:	call   0x140007bf0
   14001bca6:	movsxd r8,DWORD PTR [rbx+0x50]
   14001bcaa:	mov    rcx,rax
   14001bcad:	mov    rdx,QWORD PTR [rbx+0x40]
   14001bcb1:	mov    QWORD PTR [rbx+0x48],rax
   14001bcb5:	call   0x140026f70
   14001bcba:	mov    rdx,QWORD PTR [rbx+0x48]
   14001bcbe:	mov    rcx,rbx
   14001bcc1:	call   0x14001c120
   14001bcc6:	test   al,al
   14001bcc8:	jne    0x14001bd17
   14001bcca:	mov    rcx,QWORD PTR [rbx+0x48]
   14001bcce:	call   QWORD PTR [rip+0x1671c]        # 0x1400323f0
   14001bcd4:	movss  DWORD PTR [rsp+0x58],xmm0
   14001bcda:	mov    eax,DWORD PTR [rsp+0x58]
   14001bcde:	and    eax,0x7f800000
   14001bce3:	movss  DWORD PTR [rbx+0x54],xmm0
   14001bce8:	cmp    eax,0x7f800000
   14001bced:	jne    0x14001bd0a
   14001bcef:	mov    r8,QWORD PTR [rbx+0x48]
   14001bcf3:	lea    rcx,[rip+0x1bc96]        # 0x140037990
   14001bcfa:	mov    rdx,r14
   14001bcfd:	call   QWORD PTR [rip+0x166ad]        # 0x1400323b0
   14001bd03:	mov    DWORD PTR [rbx+0x54],0x7f7fffff
   14001bd0a:	mov    rcx,QWORD PTR [rbx+0x48]
   14001bd0e:	call   QWORD PTR [rip+0x16584]        # 0x140032298
   14001bd14:	mov    DWORD PTR [rbx+0x58],eax
   14001bd17:	mov    rax,QWORD PTR [rsp+0x50]
   14001bd1c:	mov    rcx,QWORD PTR [rip+0x2a48d]        # 0x1400461b0
   14001bd23:	test   rax,rax
   14001bd26:	mov    QWORD PTR [rbx+0x18],r14
   14001bd2a:	mov    r14,QWORD PTR [rsp+0x48]
   14001bd2f:	cmovne rcx,rax
   14001bd33:	test   bpl,0x1
   14001bd37:	mov    QWORD PTR [rbx+0x28],rbp
   14001bd3b:	mov    rbp,QWORD PTR [rsp+0x30]
   14001bd40:	mov    QWORD PTR [rbx+0x20],rcx
   14001bd44:	mov    BYTE PTR [rbx+0x10],0x0
   14001bd48:	jne    0x14001bd5e
   14001bd4a:	mov    rax,QWORD PTR [rip+0x2c217]        # 0x140047f68
   14001bd51:	mov    QWORD PTR [rbx+0x8],rax
   14001bd55:	mov    QWORD PTR [rip+0x2c20c],rbx        # 0x140047f68
   14001bd5c:	jmp    0x14001bd66
   14001bd5e:	mov    QWORD PTR [rbx+0x8],0x0
   14001bd66:	cmp    QWORD PTR [rip+0x2c202],0x0        # 0x140047f70
   14001bd6e:	je     0x14001bd7f
   14001bd70:	mov    rax,QWORD PTR [rbx]
   14001bd73:	mov    rcx,rbx
   14001bd76:	add    rsp,0x20
   14001bd7a:	pop    rbx
   14001bd7b:	rex.W jmp QWORD PTR [rax+0x60]
   14001bd7f:	add    rsp,0x20
   14001bd83:	pop    rbx
   14001bd84:	ret    
   14001bd85:	int3   
   14001bd86:	int3   
   14001bd87:	int3   
   14001bd88:	int3   
   14001bd89:	int3   
   14001bd8a:	int3   
   14001bd8b:	int3   
   14001bd8c:	int3   
   14001bd8d:	int3   
   14001bd8e:	int3   
   14001bd8f:	int3   
   14001bd90:	mov    rax,QWORD PTR [rcx+0x8]
   14001bd94:	mov    rax,QWORD PTR [rax+0x18]
   14001bd98:	ret    
   14001bd99:	int3   
   14001bd9a:	int3   
   14001bd9b:	int3   
   14001bd9c:	int3   
   14001bd9d:	int3   
   14001bd9e:	int3   
   14001bd9f:	int3   
   14001bda0:	mov    rax,QWORD PTR [rcx+0x38]
   14001bda4:	cmp    DWORD PTR [rax+0x58],0x0
   14001bda8:	setne  al
   14001bdab:	ret    
   14001bdac:	int3   
   14001bdad:	int3   
   14001bdae:	int3   
   14001bdaf:	int3   
   14001bdb0:	mov    eax,DWORD PTR [rip+0x2a3ea]        # 0x1400461a0
   14001bdb6:	ret    
   14001bdb7:	int3   
   14001bdb8:	int3   
   14001bdb9:	int3   
   14001bdba:	int3   
   14001bdbb:	int3   
   14001bdbc:	int3   
   14001bdbd:	int3   
   14001bdbe:	int3   
   14001bdbf:	int3   
   14001bdc0:	rex push rbx
   14001bdc2:	sub    rsp,0x20
   14001bdc6:	mov    eax,DWORD PTR [rip+0x2c35c]        # 0x140048128
   14001bdcc:	test   al,0x1
   14001bdce:	jne    0x14001bdfd
   14001bdd0:	or     eax,0x1
   14001bdd3:	lea    rbx,[rip+0x2c2c6]        # 0x1400480a0
   14001bdda:	mov    rcx,rbx
   14001bddd:	mov    DWORD PTR [rip+0x2c345],eax        # 0x140048128
   14001bde3:	call   0x14001b6d0
   14001bde8:	lea    rcx,[rip+0x151e1]        # 0x140030fd0
   14001bdef:	call   0x1400266d0
   14001bdf4:	mov    rax,rbx
   14001bdf7:	add    rsp,0x20
   14001bdfb:	pop    rbx
   14001bdfc:	ret    
   14001bdfd:	lea    rax,[rip+0x2c29c]        # 0x1400480a0
   14001be04:	add    rsp,0x20
   14001be08:	pop    rbx
   14001be09:	ret    
   14001be0a:	int3   
   14001be0b:	int3   
   14001be0c:	int3   
   14001be0d:	int3   
   14001be0e:	int3   
   14001be0f:	int3   
   14001be10:	mov    rax,QWORD PTR [rcx+0x28]
   14001be14:	ret    
   14001be15:	int3   
   14001be16:	int3   
   14001be17:	int3   
   14001be18:	int3   
   14001be19:	int3   
   14001be1a:	int3   
   14001be1b:	int3   
   14001be1c:	int3   
   14001be1d:	int3   
   14001be1e:	int3   
   14001be1f:	int3   
   14001be20:	mov    rax,QWORD PTR [rcx+0x38]
   14001be24:	mov    rax,QWORD PTR [rax+0x28]
   14001be28:	ret    
   14001be29:	int3   
   14001be2a:	int3   
   14001be2b:	int3   
   14001be2c:	int3   
   14001be2d:	int3   
   14001be2e:	int3   
   14001be2f:	int3   
   14001be30:	mov    rax,QWORD PTR [rcx+0x38]
   14001be34:	movss  xmm0,DWORD PTR [rax+0x54]
   14001be39:	ret    
   14001be3a:	int3   
   14001be3b:	int3   
   14001be3c:	int3   
   14001be3d:	int3   
   14001be3e:	int3   
   14001be3f:	int3   
   14001be40:	mov    rax,QWORD PTR [rcx+0x20]
   14001be44:	ret    
   14001be45:	int3   
   14001be46:	int3   
   14001be47:	int3   
   14001be48:	int3   
   14001be49:	int3   
   14001be4a:	int3   
   14001be4b:	int3   
   14001be4c:	int3   
   14001be4d:	int3   
   14001be4e:	int3   
   14001be4f:	int3   
   14001be50:	mov    rax,QWORD PTR [rcx+0x38]
   14001be54:	mov    rax,QWORD PTR [rax+0x20]
   14001be58:	ret    
   14001be59:	int3   
   14001be5a:	int3   
   14001be5b:	int3   
   14001be5c:	int3   
   14001be5d:	int3   
   14001be5e:	int3   
   14001be5f:	int3   
   14001be60:	mov    rax,QWORD PTR [rcx+0x38]
   14001be64:	mov    eax,DWORD PTR [rax+0x58]
   14001be67:	ret    
   14001be68:	int3   
   14001be69:	int3   
   14001be6a:	int3   
   14001be6b:	int3   
   14001be6c:	int3   
   14001be6d:	int3   
   14001be6e:	int3   
   14001be6f:	int3   
   14001be70:	lea    rax,[rip+0x16929]        # 0x1400327a0
   14001be77:	ret    
   14001be78:	sub    rcx,0x30
   14001be7c:	jmp    0x14001be70
   14001be81:	int3   
   14001be82:	int3   
   14001be83:	int3   
   14001be84:	int3   
   14001be85:	int3   
   14001be86:	int3   
   14001be87:	int3   
   14001be88:	int3   
   14001be89:	int3   
   14001be8a:	int3   
   14001be8b:	int3   
   14001be8c:	int3   
   14001be8d:	int3   
   14001be8e:	int3   
   14001be8f:	int3   
   14001be90:	mov    rax,QWORD PTR [rcx+0x18]
   14001be94:	ret    
   14001be95:	int3   
   14001be96:	int3   
   14001be97:	int3   
   14001be98:	int3   
   14001be99:	int3   
   14001be9a:	int3   
   14001be9b:	int3   
   14001be9c:	int3   
   14001be9d:	int3   
   14001be9e:	int3   
   14001be9f:	int3   
   14001bea0:	mov    rax,QWORD PTR [rcx+0x38]
   14001bea4:	mov    rax,QWORD PTR [rax+0x18]
   14001bea8:	ret    
   14001bea9:	int3   
   14001beaa:	int3   
   14001beab:	int3   
   14001beac:	sub    rcx,0x30
   14001beb0:	jmp    0x14001bea0
   14001beb5:	int3   
   14001beb6:	int3   
   14001beb7:	int3   
   14001beb8:	int3   
   14001beb9:	int3   
   14001beba:	int3   
   14001bebb:	int3   
   14001bebc:	int3   
   14001bebd:	int3   
   14001bebe:	int3   
   14001bebf:	int3   
   14001bec0:	mov    DWORD PTR [rdx],0x0
   14001bec6:	mov    rax,rdx
   14001bec9:	ret    
   14001beca:	int3   
   14001becb:	int3   
   14001becc:	int3   
   14001becd:	int3   
   14001bece:	int3   
   14001becf:	int3   
   14001bed0:	mov    rdx,rcx
   14001bed3:	mov    rcx,QWORD PTR [rip+0x2c096]        # 0x140047f70
   14001beda:	test   rcx,rcx
   14001bedd:	je     0x14001bee5
   14001bedf:	mov    rax,QWORD PTR [rcx]
   14001bee2:	rex.W jmp QWORD PTR [rax]
   14001bee5:	ret    
   14001bee6:	int3   
   14001bee7:	int3   
   14001bee8:	int3   
   14001bee9:	int3   
   14001beea:	int3   
   14001beeb:	int3   
   14001beec:	int3   
   14001beed:	int3   
   14001beee:	int3   
   14001beef:	int3   
   14001bef0:	mov    QWORD PTR [rsp+0x10],rbx
   14001bef5:	mov    QWORD PTR [rsp+0x18],rsi
   14001befa:	mov    QWORD PTR [rsp+0x20],rdi
   14001beff:	push   r14
   14001bf01:	sub    rsp,0x20
   14001bf05:	mov    r14,rcx
   14001bf08:	movzx  ebx,r8b
   14001bf0c:	mov    rcx,QWORD PTR [rip+0x2b605]        # 0x140047518
   14001bf13:	mov    rsi,rdx
   14001bf16:	test   rcx,rcx
   14001bf19:	jne    0x14001bf5d
   14001bf1b:	mov    ecx,0x18
   14001bf20:	call   0x140007bf0
   14001bf25:	xor    edi,edi
   14001bf27:	mov    rbx,rax
   14001bf2a:	test   rax,rax
   14001bf2d:	je     0x14001bf34
   14001bf2f:	mov    QWORD PTR [rax],rdi
   14001bf32:	jmp    0x14001bf37
   14001bf34:	mov    rbx,rdi
   14001bf37:	mov    rdx,rsi
   14001bf3a:	mov    rcx,rbx
   14001bf3d:	call   0x14001aae0
   14001bf42:	mov    QWORD PTR [rbx+0x8],r14
   14001bf46:	mov    rax,QWORD PTR [rip+0x2c02b]        # 0x140047f78
   14001bf4d:	mov    QWORD PTR [rbx+0x10],rax
   14001bf51:	mov    QWORD PTR [rip+0x2c020],rbx        # 0x140047f78
   14001bf58:	jmp    0x14001c07e
   14001bf5d:	mov    QWORD PTR [rsp+0x30],rbp
   14001bf62:	test   rsi,rsi
   14001bf65:	je     0x14001bf80
   14001bf67:	cmp    BYTE PTR [rdx],0x0
   14001bf6a:	je     0x14001bf80
   14001bf6c:	mov    rax,QWORD PTR [rcx]
   14001bf6f:	call   QWORD PTR [rax+0x98]
   14001bf75:	mov    ecx,DWORD PTR [rip+0x2c1ad]        # 0x140048128
   14001bf7b:	mov    rdx,rax
   14001bf7e:	jmp    0x14001bfb9
   14001bf80:	mov    ecx,DWORD PTR [rip+0x2c1a2]        # 0x140048128
   14001bf86:	test   cl,0x1
   14001bf89:	jne    0x14001bfb2
   14001bf8b:	or     ecx,0x1
   14001bf8e:	mov    DWORD PTR [rip+0x2c194],ecx        # 0x140048128
   14001bf94:	lea    rcx,[rip+0x2c105]        # 0x1400480a0
   14001bf9b:	call   0x14001b6d0
   14001bfa0:	lea    rcx,[rip+0x15029]        # 0x140030fd0
   14001bfa7:	call   0x1400266d0
   14001bfac:	mov    ecx,DWORD PTR [rip+0x2c176]        # 0x140048128
   14001bfb2:	lea    rdx,[rip+0x2c0e7]        # 0x1400480a0
   14001bfb9:	xor    edi,edi
   14001bfbb:	lea    rax,[rdx+0x30]
   14001bfbf:	test   rdx,rdx
   14001bfc2:	lea    rbp,[rip+0x2c107]        # 0x1400480d0
   14001bfc9:	cmove  rax,rdi
   14001bfcd:	mov    QWORD PTR [r14],rax
   14001bfd0:	test   rax,rax
   14001bfd3:	jne    0x14001c004
   14001bfd5:	test   cl,0x1
   14001bfd8:	jne    0x14001c001
   14001bfda:	or     ecx,0x1
   14001bfdd:	mov    DWORD PTR [rip+0x2c145],ecx        # 0x140048128
   14001bfe3:	lea    rcx,[rip+0x2c0b6]        # 0x1400480a0
   14001bfea:	call   0x14001b6d0
   14001bfef:	lea    rcx,[rip+0x14fda]        # 0x140030fd0
   14001bff6:	call   0x1400266d0
   14001bffb:	mov    ecx,DWORD PTR [rip+0x2c127]        # 0x140048128
   14001c001:	mov    QWORD PTR [r14],rbp
   14001c004:	mov    rax,QWORD PTR [r14]
   14001c007:	test   rax,rax
   14001c00a:	lea    rdx,[rax-0x30]
   14001c00e:	cmove  rdx,rdi
   14001c012:	mov    QWORD PTR [r14+0x8],rdx
   14001c016:	test   cl,0x1
   14001c019:	jne    0x14001c03c
   14001c01b:	or     ecx,0x1
   14001c01e:	mov    DWORD PTR [rip+0x2c104],ecx        # 0x140048128
   14001c024:	lea    rcx,[rip+0x2c075]        # 0x1400480a0
   14001c02b:	call   0x14001b6d0
   14001c030:	lea    rcx,[rip+0x14f99]        # 0x140030fd0
   14001c037:	call   0x1400266d0
   14001c03c:	cmp    QWORD PTR [r14],rbp
   14001c03f:	mov    rbp,QWORD PTR [rsp+0x30]
   14001c044:	jne    0x14001c07e
   14001c046:	cmp    QWORD PTR [rip+0x2b4cb],rdi        # 0x140047518
   14001c04d:	jne    0x14001c058
   14001c04f:	cmp    BYTE PTR [rip+0x2a16a],dil        # 0x1400461c0
   14001c056:	je     0x14001c07e
   14001c058:	test   bl,bl
   14001c05a:	jne    0x14001c077
   14001c05c:	test   rsi,rsi
   14001c05f:	lea    rdx,[rip+0x1b95e]        # 0x1400379c4
   14001c066:	lea    rcx,[rip+0x1b963]        # 0x1400379d0
   14001c06d:	cmovne rdx,rsi
   14001c071:	call   QWORD PTR [rip+0x16339]        # 0x1400323b0
   14001c077:	mov    BYTE PTR [rip+0x2a142],dil        # 0x1400461c0
   14001c07e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c083:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c088:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c08d:	add    rsp,0x20
   14001c091:	pop    r14
   14001c093:	ret    
   14001c094:	int3   
   14001c095:	int3   
   14001c096:	int3   
   14001c097:	int3   
   14001c098:	int3   
   14001c099:	int3   
   14001c09a:	int3   
   14001c09b:	int3   
   14001c09c:	int3   
   14001c09d:	int3   
   14001c09e:	int3   
   14001c09f:	int3   
   14001c0a0:	rex push rbx
   14001c0a2:	sub    rsp,0x20
   14001c0a6:	mov    rbx,QWORD PTR [rip+0x2becb]        # 0x140047f78
   14001c0ad:	mov    QWORD PTR [rip+0x2bec0],0x0        # 0x140047f78
   14001c0b8:	test   rbx,rbx
   14001c0bb:	je     0x14001c10c
   14001c0bd:	mov    QWORD PTR [rsp+0x30],rdi
   14001c0c2:	cmp    QWORD PTR [rbx+0x8],0x0
   14001c0c7:	mov    rdi,QWORD PTR [rbx+0x10]
   14001c0cb:	je     0x14001c0e4
   14001c0cd:	mov    rcx,rbx
   14001c0d0:	call   0x14001b050
   14001c0d5:	mov    rcx,QWORD PTR [rbx+0x8]
   14001c0d9:	xor    r8d,r8d
   14001c0dc:	mov    rdx,rax
   14001c0df:	call   0x14001bef0
   14001c0e4:	cmp    QWORD PTR [rbx],0x0
   14001c0e8:	je     0x14001c0f2
   14001c0ea:	mov    rcx,rbx
   14001c0ed:	call   0x14001b030
   14001c0f2:	mov    edx,0x18
   14001c0f7:	mov    rcx,rbx
   14001c0fa:	call   0x14002639c
   14001c0ff:	mov    rbx,rdi
   14001c102:	test   rdi,rdi
   14001c105:	jne    0x14001c0c2
   14001c107:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c10c:	add    rsp,0x20
   14001c110:	pop    rbx
   14001c111:	ret    
   14001c112:	int3   
   14001c113:	int3   
   14001c114:	int3   
   14001c115:	int3   
   14001c116:	int3   
   14001c117:	int3   
   14001c118:	int3   
   14001c119:	int3   
   14001c11a:	int3   
   14001c11b:	int3   
   14001c11c:	int3   
   14001c11d:	int3   
   14001c11e:	int3   
   14001c11f:	int3   
   14001c120:	rex push rbx
   14001c122:	sub    rsp,0x40
   14001c126:	mov    rbx,rcx
   14001c129:	lea    r9,[rsp+0x34]
   14001c12e:	mov    rax,rdx
   14001c131:	lea    rcx,[rsp+0x3c]
   14001c136:	mov    QWORD PTR [rsp+0x28],rcx
   14001c13b:	lea    r8,[rsp+0x30]
   14001c140:	lea    rcx,[rsp+0x38]
   14001c145:	mov    QWORD PTR [rsp+0x20],rcx
   14001c14a:	lea    rdx,[rip+0x1b7f7]        # 0x140037948
   14001c151:	mov    rcx,rax
   14001c154:	call   QWORD PTR [rip+0x163de]        # 0x140032538
   14001c15a:	mov    ecx,eax
   14001c15c:	cmp    eax,0x3
   14001c15f:	jl     0x14001c1bf
   14001c161:	mov    eax,DWORD PTR [rsp+0x3c]
   14001c165:	cmp    ecx,0x3
   14001c168:	mov    edx,0xff
   14001c16d:	cmove  eax,edx
   14001c170:	mov    DWORD PTR [rsp+0x3c],eax
   14001c174:	cmp    DWORD PTR [rsp+0x30],edx
   14001c178:	ja     0x14001c1bf
   14001c17a:	cmp    DWORD PTR [rsp+0x34],edx
   14001c17e:	ja     0x14001c1bf
   14001c180:	cmp    DWORD PTR [rsp+0x38],edx
   14001c184:	ja     0x14001c1bf
   14001c186:	cmp    eax,edx
   14001c188:	ja     0x14001c1bf
   14001c18a:	movzx  eax,BYTE PTR [rsp+0x30]
   14001c18f:	mov    BYTE PTR [rbx+0x58],al
   14001c192:	movzx  eax,BYTE PTR [rsp+0x34]
   14001c197:	mov    BYTE PTR [rbx+0x59],al
   14001c19a:	movzx  eax,BYTE PTR [rsp+0x38]
   14001c19f:	mov    BYTE PTR [rbx+0x5a],al
   14001c1a2:	movzx  eax,BYTE PTR [rsp+0x3c]
   14001c1a7:	mov    BYTE PTR [rbx+0x5b],al
   14001c1aa:	mov    al,0x1
   14001c1ac:	movd   xmm0,DWORD PTR [rbx+0x58]
   14001c1b1:	cvtdq2ps xmm0,xmm0
   14001c1b4:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c1b9:	add    rsp,0x40
   14001c1bd:	pop    rbx
   14001c1be:	ret    
   14001c1bf:	xor    al,al
   14001c1c1:	add    rsp,0x40
   14001c1c5:	pop    rbx
   14001c1c6:	ret    
   14001c1c7:	int3   
   14001c1c8:	int3   
   14001c1c9:	int3   
   14001c1ca:	int3   
   14001c1cb:	int3   
   14001c1cc:	int3   
   14001c1cd:	int3   
   14001c1ce:	int3   
   14001c1cf:	int3   
   14001c1d0:	sub    rsp,0x28
   14001c1d4:	mov    eax,edx
   14001c1d6:	mov    BYTE PTR [rsp+0x30],dl
   14001c1da:	shr    eax,0x8
   14001c1dd:	mov    BYTE PTR [rsp+0x31],al
   14001c1e1:	mov    eax,edx
   14001c1e3:	shr    eax,0x10
   14001c1e6:	mov    BYTE PTR [rsp+0x32],al
   14001c1ea:	mov    rax,QWORD PTR [rcx]
   14001c1ed:	shr    edx,0x18
   14001c1f0:	mov    BYTE PTR [rsp+0x33],dl
   14001c1f4:	mov    edx,DWORD PTR [rsp+0x30]
   14001c1f8:	call   QWORD PTR [rax+0x90]
   14001c1fe:	add    rsp,0x28
   14001c202:	ret    
   14001c203:	int3   
   14001c204:	int3   
   14001c205:	int3   
   14001c206:	int3   
   14001c207:	int3   
   14001c208:	int3   
   14001c209:	int3   
   14001c20a:	int3   
   14001c20b:	int3   
   14001c20c:	int3   
   14001c20d:	int3   
   14001c20e:	int3   
   14001c20f:	int3   
   14001c210:	movss  DWORD PTR [rsp+0x10],xmm1
   14001c216:	push   rbx
   14001c217:	sub    rsp,0x50
   14001c21b:	ucomiss xmm1,DWORD PTR [rcx+0x54]
   14001c21f:	mov    rbx,rcx
   14001c222:	je     0x14001c2de
   14001c228:	mov    rax,QWORD PTR [rcx]
   14001c22b:	mov    edx,0xb00000
   14001c230:	call   QWORD PTR [rax+0x18]
   14001c233:	test   al,al
   14001c235:	je     0x14001c26f
   14001c237:	mov    rcx,QWORD PTR [rip+0x2b2da]        # 0x140047518
   14001c23e:	test   rcx,rcx
   14001c241:	je     0x14001c26f
   14001c243:	mov    rax,QWORD PTR [rcx]
   14001c246:	call   QWORD PTR [rax+0x130]
   14001c24c:	test   al,al
   14001c24e:	jne    0x14001c26f
   14001c250:	mov    rcx,QWORD PTR [rip+0x2b2c1]        # 0x140047518
   14001c257:	mov    rdx,rbx
   14001c25a:	movss  xmm2,DWORD PTR [rsp+0x68]
   14001c260:	mov    rax,QWORD PTR [rcx]
   14001c263:	call   QWORD PTR [rax+0x138]
   14001c269:	add    rsp,0x50
   14001c26d:	pop    rbx
   14001c26e:	ret    
   14001c26f:	mov    rax,QWORD PTR [rbx]
   14001c272:	lea    rdx,[rsp+0x68]
   14001c277:	mov    rcx,rbx
   14001c27a:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001c27f:	call   QWORD PTR [rax+0xa0]
   14001c285:	movss  xmm0,DWORD PTR [rsp+0x68]
   14001c28b:	movss  xmm6,DWORD PTR [rbx+0x54]
   14001c290:	cvttss2si eax,xmm0
   14001c294:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c299:	mov    DWORD PTR [rbx+0x58],eax
   14001c29c:	mov    eax,DWORD PTR [rbx+0x28]
   14001c29f:	bt     rax,0xc
   14001c2a4:	jb     0x14001c2d9
   14001c2a6:	cvtps2pd xmm3,xmm0
   14001c2a9:	lea    r8,[rip+0x1a16c]        # 0x14003641c
   14001c2b0:	mov    edx,0x20
   14001c2b5:	lea    rcx,[rsp+0x20]
   14001c2ba:	movq   r9,xmm3
   14001c2bf:	call   QWORD PTR [rip+0x162ab]        # 0x140032570
   14001c2c5:	mov    rax,QWORD PTR [rbx]
   14001c2c8:	lea    rdx,[rsp+0x20]
   14001c2cd:	movaps xmm2,xmm6
   14001c2d0:	mov    rcx,rbx
   14001c2d3:	call   QWORD PTR [rax+0xa8]
   14001c2d9:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001c2de:	add    rsp,0x50
   14001c2e2:	pop    rbx
   14001c2e3:	ret    
   14001c2e4:	int3   
   14001c2e5:	int3   
   14001c2e6:	int3   
   14001c2e7:	int3   
   14001c2e8:	int3   
   14001c2e9:	int3   
   14001c2ea:	int3   
   14001c2eb:	int3   
   14001c2ec:	int3   
   14001c2ed:	int3   
   14001c2ee:	int3   
   14001c2ef:	int3   
   14001c2f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c2f5:	push   rdi
   14001c2f6:	sub    rsp,0x50
   14001c2fa:	mov    edi,edx
   14001c2fc:	mov    rbx,rcx
   14001c2ff:	cmp    edx,DWORD PTR [rcx+0x58]
   14001c302:	jne    0x14001c315
   14001c304:	movd   xmm0,edi
   14001c308:	cvtdq2ps xmm0,xmm0
   14001c30b:	ucomiss xmm0,DWORD PTR [rcx+0x54]
   14001c30f:	je     0x14001c3d9
   14001c315:	mov    rax,QWORD PTR [rcx]
   14001c318:	mov    edx,0xb00000
   14001c31d:	call   QWORD PTR [rax+0x18]
   14001c320:	test   al,al
   14001c322:	je     0x14001c35e
   14001c324:	mov    rcx,QWORD PTR [rip+0x2b1ed]        # 0x140047518
   14001c32b:	test   rcx,rcx
   14001c32e:	je     0x14001c35e
   14001c330:	mov    rax,QWORD PTR [rcx]
   14001c333:	call   QWORD PTR [rax+0x130]
   14001c339:	test   al,al
   14001c33b:	jne    0x14001c35e
   14001c33d:	mov    rcx,QWORD PTR [rip+0x2b1d4]        # 0x140047518
   14001c344:	mov    r8d,edi
   14001c347:	mov    rdx,rbx
   14001c34a:	mov    rax,QWORD PTR [rcx]
   14001c34d:	call   QWORD PTR [rax+0x140]
   14001c353:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c358:	add    rsp,0x50
   14001c35c:	pop    rdi
   14001c35d:	ret    
   14001c35e:	mov    rax,QWORD PTR [rbx]
   14001c361:	lea    rdx,[rsp+0x68]
   14001c366:	movd   xmm0,edi
   14001c36a:	mov    rcx,rbx
   14001c36d:	cvtdq2ps xmm0,xmm0
   14001c370:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001c375:	movss  DWORD PTR [rsp+0x68],xmm0
   14001c37b:	call   QWORD PTR [rax+0xa0]
   14001c381:	movss  xmm0,DWORD PTR [rsp+0x68]
   14001c387:	test   al,al
   14001c389:	je     0x14001c38f
   14001c38b:	cvttss2si edi,xmm0
   14001c38f:	mov    eax,DWORD PTR [rbx+0x28]
   14001c392:	movss  xmm6,DWORD PTR [rbx+0x54]
   14001c397:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c39c:	mov    DWORD PTR [rbx+0x58],edi
   14001c39f:	bt     rax,0xc
   14001c3a4:	jb     0x14001c3d4
   14001c3a6:	mov    r9d,edi
   14001c3a9:	lea    r8,[rip+0x1abbc]        # 0x140036f6c
   14001c3b0:	mov    edx,0x20
   14001c3b5:	lea    rcx,[rsp+0x20]
   14001c3ba:	call   QWORD PTR [rip+0x161b0]        # 0x140032570
   14001c3c0:	mov    rax,QWORD PTR [rbx]
   14001c3c3:	lea    rdx,[rsp+0x20]
   14001c3c8:	movaps xmm2,xmm6
   14001c3cb:	mov    rcx,rbx
   14001c3ce:	call   QWORD PTR [rax+0xa8]
   14001c3d4:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001c3d9:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c3de:	add    rsp,0x50
   14001c3e2:	pop    rdi
   14001c3e3:	ret    
   14001c3e4:	int3   
   14001c3e5:	int3   
   14001c3e6:	int3   
   14001c3e7:	int3   
   14001c3e8:	int3   
   14001c3e9:	int3   
   14001c3ea:	int3   
   14001c3eb:	int3   
   14001c3ec:	int3   
   14001c3ed:	int3   
   14001c3ee:	int3   
   14001c3ef:	int3   
   14001c3f0:	mov    QWORD PTR [rsp+0x20],rbx
   14001c3f5:	push   rdi
   14001c3f6:	sub    rsp,0x60
   14001c3fa:	mov    rax,QWORD PTR [rcx]
   14001c3fd:	mov    rdi,rdx
   14001c400:	mov    edx,0xb00000
   14001c405:	mov    rbx,rcx
   14001c408:	call   QWORD PTR [rax+0x18]
   14001c40b:	test   al,al
   14001c40d:	je     0x14001c44c
   14001c40f:	mov    rcx,QWORD PTR [rip+0x2b102]        # 0x140047518
   14001c416:	test   rcx,rcx
   14001c419:	je     0x14001c44c
   14001c41b:	mov    rax,QWORD PTR [rcx]
   14001c41e:	call   QWORD PTR [rax+0x130]
   14001c424:	test   al,al
   14001c426:	jne    0x14001c44c
   14001c428:	mov    rcx,QWORD PTR [rip+0x2b0e9]        # 0x140047518
   14001c42f:	mov    r8,rdi
   14001c432:	mov    rdx,rbx
   14001c435:	mov    rax,QWORD PTR [rcx]
   14001c438:	call   QWORD PTR [rax+0x148]
   14001c43e:	mov    rbx,QWORD PTR [rsp+0x88]
   14001c446:	add    rsp,0x60
   14001c44a:	pop    rdi
   14001c44b:	ret    
   14001c44c:	mov    QWORD PTR [rsp+0x78],rsi
   14001c451:	test   rdi,rdi
   14001c454:	lea    rsi,[rip+0x16345]        # 0x1400327a0
   14001c45b:	movaps XMMWORD PTR [rsp+0x40],xmm7
   14001c460:	movss  xmm7,DWORD PTR [rbx+0x54]
   14001c465:	mov    rdx,rdi
   14001c468:	mov    rcx,rbx
   14001c46b:	cmovne rsi,rdi
   14001c46f:	call   0x14001c120
   14001c474:	test   al,al
   14001c476:	jne    0x14001c536
   14001c47c:	mov    rcx,rdi
   14001c47f:	movaps XMMWORD PTR [rsp+0x50],xmm6
   14001c484:	call   QWORD PTR [rip+0x15f66]        # 0x1400323f0
   14001c48a:	xorps  xmm6,xmm6
   14001c48d:	cvtss2sd xmm6,xmm0
   14001c491:	cvtpd2ps xmm1,xmm6
   14001c495:	movss  DWORD PTR [rsp+0x80],xmm1
   14001c49e:	mov    eax,DWORD PTR [rsp+0x80]
   14001c4a5:	and    eax,0x7f800000
   14001c4aa:	cmp    eax,0x7f800000
   14001c4af:	jne    0x14001c4d5
   14001c4b1:	mov    rax,QWORD PTR [rbx]
   14001c4b4:	mov    rcx,rbx
   14001c4b7:	call   QWORD PTR [rax+0x38]
   14001c4ba:	mov    r8,rdi
   14001c4bd:	lea    rcx,[rip+0x1b494]        # 0x140037958
   14001c4c4:	mov    rdx,rax
   14001c4c7:	call   QWORD PTR [rip+0x15ee3]        # 0x1400323b0
   14001c4cd:	movsd  xmm6,QWORD PTR [rip+0x1b533]        # 0x140037a08
   14001c4d5:	mov    rax,QWORD PTR [rbx]
   14001c4d8:	lea    rdx,[rsp+0x70]
   14001c4dd:	cvtpd2ps xmm0,xmm6
   14001c4e1:	mov    rcx,rbx
   14001c4e4:	movss  DWORD PTR [rsp+0x70],xmm0
   14001c4ea:	call   QWORD PTR [rax+0xa0]
   14001c4f0:	test   al,al
   14001c4f2:	je     0x14001c521
   14001c4f4:	movss  xmm6,DWORD PTR [rsp+0x70]
   14001c4fa:	lea    r8,[rip+0x19f1b]        # 0x14003641c
   14001c501:	cvtps2pd xmm6,xmm6
   14001c504:	mov    edx,0x20
   14001c509:	lea    rcx,[rsp+0x20]
   14001c50e:	movaps xmm3,xmm6
   14001c511:	movq   r9,xmm3
   14001c516:	call   QWORD PTR [rip+0x16054]        # 0x140032570
   14001c51c:	lea    rsi,[rsp+0x20]
   14001c521:	cvttsd2si eax,xmm6
   14001c525:	cvtpd2ps xmm0,xmm6
   14001c529:	mov    DWORD PTR [rbx+0x58],eax
   14001c52c:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14001c531:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c536:	mov    eax,DWORD PTR [rbx+0x28]
   14001c539:	bt     rax,0xc
   14001c53e:	jb     0x14001c552
   14001c540:	mov    rax,QWORD PTR [rbx]
   14001c543:	movaps xmm2,xmm7
   14001c546:	mov    rdx,rsi
   14001c549:	mov    rcx,rbx
   14001c54c:	call   QWORD PTR [rax+0xa8]
   14001c552:	mov    rsi,QWORD PTR [rsp+0x78]
   14001c557:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   14001c55c:	mov    rbx,QWORD PTR [rsp+0x88]
   14001c564:	add    rsp,0x60
   14001c568:	pop    rdi
   14001c569:	ret    
   14001c56a:	int3   
   14001c56b:	int3   
   14001c56c:	sub    rcx,0x30
   14001c570:	jmp    0x1400039b0
   14001c575:	int3   
   14001c576:	int3   
   14001c577:	int3   
   14001c578:	int3   
   14001c579:	int3   
   14001c57a:	int3   
   14001c57b:	int3   
   14001c57c:	int3   
   14001c57d:	int3   
   14001c57e:	int3   
   14001c57f:	int3   
   14001c580:	test   QWORD PTR [rcx+0x28],rdx
   14001c584:	setne  al
   14001c587:	ret    
   14001c588:	int3   
   14001c589:	int3   
   14001c58a:	int3   
   14001c58b:	int3   
   14001c58c:	int3   
   14001c58d:	int3   
   14001c58e:	int3   
   14001c58f:	int3   
   14001c590:	mov    rax,QWORD PTR [rcx+0x38]
   14001c594:	test   QWORD PTR [rax+0x28],rdx
   14001c598:	setne  al
   14001c59b:	ret    
   14001c59c:	sub    rcx,0x30
   14001c5a0:	jmp    0x14001c590
   14001c5a5:	int3   
   14001c5a6:	int3   
   14001c5a7:	int3   
   14001c5a8:	int3   
   14001c5a9:	int3   
   14001c5aa:	int3   
   14001c5ab:	int3   
   14001c5ac:	int3   
   14001c5ad:	int3   
   14001c5ae:	int3   
   14001c5af:	int3   
   14001c5b0:	movzx  eax,BYTE PTR [rcx+0x10]
   14001c5b4:	ret    
   14001c5b5:	int3   
   14001c5b6:	int3   
   14001c5b7:	int3   
   14001c5b8:	int3   
   14001c5b9:	int3   
   14001c5ba:	int3   
   14001c5bb:	int3   
   14001c5bc:	int3   
   14001c5bd:	int3   
   14001c5be:	int3   
   14001c5bf:	int3   
   14001c5c0:	mov    rax,QWORD PTR [rcx+0x38]
   14001c5c4:	movzx  eax,BYTE PTR [rax+0x10]
   14001c5c8:	ret    
   14001c5c9:	int3   
   14001c5ca:	int3   
   14001c5cb:	int3   
   14001c5cc:	int3   
   14001c5cd:	int3   
   14001c5ce:	int3   
   14001c5cf:	int3   
   14001c5d0:	not    rdx
   14001c5d3:	and    QWORD PTR [rcx+0x28],rdx
   14001c5d7:	ret    
   14001c5d8:	int3   
   14001c5d9:	int3   
   14001c5da:	int3   
   14001c5db:	int3   
   14001c5dc:	int3   
   14001c5dd:	int3   
   14001c5de:	int3   
   14001c5df:	int3   
   14001c5e0:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c5e4:	mov    rax,QWORD PTR [rcx]
   14001c5e7:	rex.W jmp QWORD PTR [rax+0x90]
   14001c5ee:	int3   
   14001c5ef:	int3   
   14001c5f0:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c5f4:	mov    rax,QWORD PTR [rcx]
   14001c5f7:	rex.W jmp QWORD PTR [rax+0x88]
   14001c5fe:	int3   
   14001c5ff:	int3   
   14001c600:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c604:	mov    rax,QWORD PTR [rcx]
   14001c607:	rex.W jmp QWORD PTR [rax+0x80]
   14001c60e:	int3   
   14001c60f:	int3   
   14001c610:	sub    rsp,0x28
   14001c614:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c618:	mov    rax,QWORD PTR [rcx]
   14001c61b:	call   QWORD PTR [rax+0x98]
   14001c621:	add    rsp,0x28
   14001c625:	ret    
   14001c626:	int3   
   14001c627:	int3   
   14001c628:	int3   
   14001c629:	int3   
   14001c62a:	int3   
   14001c62b:	int3   
   14001c62c:	int3   
   14001c62d:	int3   
   14001c62e:	int3   
   14001c62f:	int3   
   14001c630:	sub    rsp,0x28
   14001c634:	call   0x14001c650
   14001c639:	mov    rcx,QWORD PTR [rip+0x2aaf0]        # 0x140047130
   14001c640:	mov    rax,QWORD PTR [rcx]
   14001c643:	add    rsp,0x28
   14001c647:	rex.W jmp QWORD PTR [rax+0x150]
   14001c64e:	int3   
   14001c64f:	int3   
   14001c650:	sub    rsp,0x58
   14001c654:	cmp    BYTE PTR [rip+0x2bad5],0x0        # 0x140048130
   14001c65b:	jne    0x14001c7d5
   14001c661:	mov    rcx,QWORD PTR [rip+0x2aac8]        # 0x140047130
   14001c668:	test   rcx,rcx
   14001c66b:	je     0x14001c7d5
   14001c671:	mov    QWORD PTR [rsp+0x68],rbp
   14001c676:	mov    rbp,QWORD PTR [rip+0x2babb]        # 0x140048138
   14001c67d:	mov    BYTE PTR [rip+0x2baac],0x1        # 0x140048130
   14001c684:	test   rbp,rbp
   14001c687:	je     0x14001c7d0
   14001c68d:	mov    QWORD PTR [rsp+0x60],rbx
   14001c692:	mov    QWORD PTR [rsp+0x70],rsi
   14001c697:	mov    QWORD PTR [rsp+0x78],rdi
   14001c69c:	mov    QWORD PTR [rsp+0x50],r14
   14001c6a1:	xor    esi,esi
   14001c6a3:	cmp    DWORD PTR [rbp+0x0],esi
   14001c6a6:	jle    0x14001c6f1
   14001c6a8:	lea    rbx,[rbp+0x14]
   14001c6ac:	nop    DWORD PTR [rax+0x0]
   14001c6b0:	mov    r14,QWORD PTR [rbx-0xc]
   14001c6b4:	lea    rax,[rbx+0x4]
   14001c6b8:	mov    r10,QWORD PTR [rcx]
   14001c6bb:	mov    rdx,r14
   14001c6be:	mov    r9d,DWORD PTR [rbx]
   14001c6c1:	mov    r8d,DWORD PTR [rbx-0x4]
   14001c6c5:	mov    rdi,QWORD PTR [rbx+0x44]
   14001c6c9:	mov    QWORD PTR [rsp+0x20],rax
   14001c6ce:	call   QWORD PTR [r10+0x1a0]
   14001c6d5:	mov    QWORD PTR [rdi],rax
   14001c6d8:	test   rax,rax
   14001c6db:	je     0x14001c71a
   14001c6dd:	inc    esi
   14001c6df:	add    rbx,0x58
   14001c6e3:	cmp    esi,DWORD PTR [rbp+0x0]
   14001c6e6:	jge    0x14001c6f1
   14001c6e8:	mov    rcx,QWORD PTR [rip+0x2aa41]        # 0x140047130
   14001c6ef:	jmp    0x14001c6b0
   14001c6f1:	mov    rbx,QWORD PTR [rbp+0x2268]
   14001c6f8:	mov    edx,0x2270
   14001c6fd:	mov    rcx,rbp
   14001c700:	call   0x14002639c
   14001c705:	mov    rbp,rbx
   14001c708:	test   rbx,rbx
   14001c70b:	je     0x14001c7bc
   14001c711:	mov    rcx,QWORD PTR [rip+0x2aa18]        # 0x140047130
   14001c718:	jmp    0x14001c6a1
   14001c71a:	mov    rax,QWORD PTR [rip+0x15c67]        # 0x140032388
   14001c721:	mov    edx,0x4
   14001c726:	mov    ecx,DWORD PTR [rax]
   14001c728:	call   QWORD PTR [rip+0x15d7a]        # 0x1400324a8
   14001c72e:	test   al,al
   14001c730:	je     0x14001c777
   14001c732:	lea    rax,[rip+0x1b357]        # 0x140037a90
   14001c739:	mov    DWORD PTR [rsp+0x38],0x27
   14001c741:	mov    QWORD PTR [rsp+0x30],rax
   14001c746:	lea    r9,[rip+0x1b2c3]        # 0x140037a10
   14001c74d:	lea    rax,[rip+0x1b304]        # 0x140037a58
   14001c754:	mov    QWORD PTR [rsp+0x20],r14
   14001c759:	mov    QWORD PTR [rsp+0x40],rax
   14001c75e:	lea    r8,[rsp+0x30]
   14001c763:	mov    rax,QWORD PTR [rip+0x15c1e]        # 0x140032388
   14001c76a:	mov    edx,0x4
   14001c76f:	mov    ecx,DWORD PTR [rax]
   14001c771:	call   QWORD PTR [rip+0x15d21]        # 0x140032498
   14001c777:	call   QWORD PTR [rip+0x15e0b]        # 0x140032588
   14001c77d:	test   al,al
   14001c77f:	je     0x14001c7b0
   14001c781:	call   QWORD PTR [rip+0x15cf9]        # 0x140032480
   14001c787:	lea    rcx,[rip+0x1601e]        # 0x1400327ac
   14001c78e:	xorps  xmm0,xmm0
   14001c791:	lea    rdx,[rsp+0x30]
   14001c796:	mov    DWORD PTR [rsp+0x38],eax
   14001c79a:	mov    QWORD PTR [rsp+0x30],rcx
   14001c79f:	mov    r8b,0x1
   14001c7a2:	xor    ecx,ecx
   14001c7a4:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001c7aa:	call   QWORD PTR [rip+0x15cc8]        # 0x140032478
   14001c7b0:	mov    ecx,0x1
   14001c7b5:	call   QWORD PTR [rip+0x15a8d]        # 0x140032248
   14001c7bb:	int3   
   14001c7bc:	mov    rdi,QWORD PTR [rsp+0x78]
   14001c7c1:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c7c6:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c7cb:	mov    r14,QWORD PTR [rsp+0x50]
   14001c7d0:	mov    rbp,QWORD PTR [rsp+0x68]
   14001c7d5:	add    rsp,0x58
   14001c7d9:	ret    
   14001c7da:	int3   
   14001c7db:	int3   
   14001c7dc:	int3   
   14001c7dd:	int3   
   14001c7de:	int3   
   14001c7df:	int3   
   14001c7e0:	sub    rsp,0x28
   14001c7e4:	call   0x14000bcf0
   14001c7e9:	add    rsp,0x28
   14001c7ed:	jmp    0x14001c0a0
   14001c7f2:	int3   
   14001c7f3:	int3   
   14001c7f4:	int3   
   14001c7f5:	int3   
   14001c7f6:	int3   
   14001c7f7:	int3   
   14001c7f8:	int3   
   14001c7f9:	int3   
   14001c7fa:	int3   
   14001c7fb:	int3   
   14001c7fc:	int3   
   14001c7fd:	int3   
   14001c7fe:	int3   
   14001c7ff:	int3   
   14001c800:	jmp    0x14000bf50
   14001c805:	int3   
   14001c806:	int3   
   14001c807:	int3   
   14001c808:	int3   
   14001c809:	int3   
   14001c80a:	int3   
   14001c80b:	int3   
   14001c80c:	int3   
   14001c80d:	int3   
   14001c80e:	int3   
   14001c80f:	int3   
   14001c810:	mov    QWORD PTR [rsp+0x8],rbx
   14001c815:	push   rdi
   14001c816:	sub    rsp,0x20
   14001c81a:	xor    edi,edi
   14001c81c:	mov    DWORD PTR [rcx+0x10],r8d
   14001c820:	and    edx,0x3fffffff
   14001c826:	mov    QWORD PTR [rcx+0x8],rdi
   14001c82a:	mov    DWORD PTR [rcx+0x14],edx
   14001c82d:	mov    rbx,rcx
   14001c830:	test   r8d,r8d
   14001c833:	je     0x14001c85c
   14001c835:	call   QWORD PTR [rip+0x15c85]        # 0x1400324c0
   14001c83b:	mov    rax,QWORD PTR [rip+0x15b4e]        # 0x140032390
   14001c842:	mov    rcx,QWORD PTR [rax]
   14001c845:	movsxd rax,DWORD PTR [rbx+0x10]
   14001c849:	mov    r8,QWORD PTR [rcx]
   14001c84c:	lea    rdx,[rax+rax*2]
   14001c850:	shl    rdx,0x2
   14001c854:	call   QWORD PTR [r8+0x8]
   14001c858:	mov    QWORD PTR [rbx+0x8],rax
   14001c85c:	mov    rax,QWORD PTR [rbx+0x8]
   14001c860:	mov    QWORD PTR [rbx+0x20],rax
   14001c864:	mov    rax,rbx
   14001c867:	mov    DWORD PTR [rbx+0x18],0xffff
   14001c86e:	mov    DWORD PTR [rbx+0x1c],0xffffffff
   14001c875:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c87a:	add    rsp,0x20
   14001c87e:	pop    rdi
   14001c87f:	ret    
   14001c880:	mov    QWORD PTR [rsp+0x8],rbx
   14001c885:	push   rdi
   14001c886:	sub    rsp,0x20
   14001c88a:	movzx  ebx,r9b
   14001c88e:	mov    rdi,rcx
   14001c891:	call   0x14001c810
   14001c896:	mov    BYTE PTR [rdi+0x28],bl
   14001c899:	xor    eax,eax
   14001c89b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c8a0:	mov    DWORD PTR [rdi+0x38],eax
   14001c8a3:	mov    QWORD PTR [rdi+0x40],rax
   14001c8a7:	mov    DWORD PTR [rdi+0x48],eax
   14001c8aa:	mov    rax,rdi
   14001c8ad:	mov    DWORD PTR [rdi+0x4c],0x8
   14001c8b4:	add    rsp,0x20
   14001c8b8:	pop    rdi
   14001c8b9:	ret    
   14001c8ba:	int3   
   14001c8bb:	int3   
   14001c8bc:	int3   
   14001c8bd:	int3   
   14001c8be:	int3   
   14001c8bf:	int3   
   14001c8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c8c5:	mov    QWORD PTR [rsp+0x10],rsi
   14001c8ca:	push   rdi
   14001c8cb:	sub    rsp,0x20
   14001c8cf:	mov    rbx,rcx
   14001c8d2:	call   0x14001d730
   14001c8d7:	mov    esi,0xffff
   14001c8dc:	xor    edi,edi
   14001c8de:	mov    WORD PTR [rbx+0x1c],si
   14001c8e2:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001c8e9:	jne    0x14001c90b
   14001c8eb:	mov    rdx,QWORD PTR [rbx+0x8]
   14001c8ef:	test   rdx,rdx
   14001c8f2:	je     0x14001c908
   14001c8f4:	mov    rax,QWORD PTR [rip+0x15a95]        # 0x140032390
   14001c8fb:	mov    rcx,QWORD PTR [rax]
   14001c8fe:	mov    rax,QWORD PTR [rcx]
   14001c901:	call   QWORD PTR [rax+0x28]
   14001c904:	mov    QWORD PTR [rbx+0x8],rdi
   14001c908:	mov    DWORD PTR [rbx+0x10],edi
   14001c90b:	mov    WORD PTR [rbx+0x1e],si
   14001c90f:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001c916:	jne    0x14001c938
   14001c918:	mov    rdx,QWORD PTR [rbx+0x8]
   14001c91c:	test   rdx,rdx
   14001c91f:	je     0x14001c935
   14001c921:	mov    rax,QWORD PTR [rip+0x15a68]        # 0x140032390
   14001c928:	mov    rcx,QWORD PTR [rax]
   14001c92b:	mov    rax,QWORD PTR [rcx]
   14001c92e:	call   QWORD PTR [rax+0x28]
   14001c931:	mov    QWORD PTR [rbx+0x8],rdi
   14001c935:	mov    DWORD PTR [rbx+0x10],edi
   14001c938:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c93d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c942:	add    rsp,0x20
   14001c946:	pop    rdi
   14001c947:	ret    
   14001c948:	int3   
   14001c949:	int3   
   14001c94a:	int3   
   14001c94b:	int3   
   14001c94c:	int3   
   14001c94d:	int3   
   14001c94e:	int3   
   14001c94f:	int3   
   14001c950:	rex push rbx
   14001c952:	sub    rsp,0x20
   14001c956:	mov    rbx,rcx
   14001c959:	call   0x14001d800
   14001c95e:	lea    rcx,[rbx+0x38]
   14001c962:	call   0x1400181a0
   14001c967:	mov    rcx,rbx
   14001c96a:	add    rsp,0x20
   14001c96e:	pop    rbx
   14001c96f:	jmp    0x14001c8c0
   14001c974:	int3   
   14001c975:	int3   
   14001c976:	int3   
   14001c977:	int3   
   14001c978:	int3   
   14001c979:	int3   
   14001c97a:	int3   
   14001c97b:	int3   
   14001c97c:	int3   
   14001c97d:	int3   
   14001c97e:	int3   
   14001c97f:	int3   
   14001c980:	rex push rsi
   14001c982:	push   r12
   14001c984:	push   r15
   14001c986:	sub    rsp,0x60
   14001c98a:	mov    r15,r8
   14001c98d:	mov    r12,rdx
   14001c990:	mov    rsi,rcx
   14001c993:	test   r8,r8
   14001c996:	jne    0x14001c9af
   14001c998:	mov    edx,0xffff
   14001c99d:	mov    rax,r12
   14001c9a0:	mov    WORD PTR [r12],dx
   14001c9a5:	add    rsp,0x60
   14001c9a9:	pop    r15
   14001c9ab:	pop    r12
   14001c9ad:	pop    rsi
   14001c9ae:	ret    
   14001c9af:	cmp    BYTE PTR [rcx+0x28],0x0
   14001c9b3:	mov    QWORD PTR [rcx+0x30],r15
   14001c9b7:	mov    rcx,r15
   14001c9ba:	mov    QWORD PTR [rsp+0x80],rbx
   14001c9c2:	je     0x14001c9d0
   14001c9c4:	mov    edx,0x3501a674
   14001c9c9:	call   0x140022790
   14001c9ce:	jmp    0x14001c9d5
   14001c9d0:	call   0x1400226d0
   14001c9d5:	lea    rdx,[rsp+0x90]
   14001c9dd:	mov    WORD PTR [rsi+0x2a],ax
   14001c9e1:	mov    rcx,rsi
   14001c9e4:	mov    DWORD PTR [rsp+0x90],0xffffffff
   14001c9ef:	mov    ebx,0xffff
   14001c9f4:	call   0x14001cc20
   14001c9f9:	cmp    ax,bx
   14001c9fc:	je     0x14001ca08
   14001c9fe:	mov    WORD PTR [r12],ax
   14001ca03:	jmp    0x14001cc0b
   14001ca08:	mov    QWORD PTR [rsp+0x58],rbp
   14001ca0d:	or     rbp,0xffffffffffffffff
   14001ca11:	mov    QWORD PTR [rsp+0x50],rdi
   14001ca16:	mov    QWORD PTR [rsp+0x48],r13
   14001ca1b:	mov    QWORD PTR [rsp+0x40],r14
   14001ca20:	inc    rbp
   14001ca23:	cmp    BYTE PTR [r15+rbp*1],0x0
   14001ca28:	jne    0x14001ca20
   14001ca2a:	mov    r8d,DWORD PTR [rsi+0x38]
   14001ca2e:	inc    ebp
   14001ca30:	xor    eax,eax
   14001ca32:	mov    r14d,eax
   14001ca35:	lea    r13d,[rbp+0x3]
   14001ca39:	and    r13d,0xfffffffe
   14001ca3d:	test   r8d,r8d
   14001ca40:	jle    0x14001ca71
   14001ca42:	mov    rdx,QWORD PTR [rsi+0x40]
   14001ca46:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ca50:	mov    rax,QWORD PTR [rdx]
   14001ca53:	mov    ecx,DWORD PTR [rax]
   14001ca55:	sub    ecx,DWORD PTR [rax+0x4]
   14001ca58:	cmp    ecx,r13d
   14001ca5b:	jge    0x14001ca6b
   14001ca5d:	inc    r14d
   14001ca60:	add    rdx,0x8
   14001ca64:	cmp    r14d,r8d
   14001ca67:	jl     0x14001ca50
   14001ca69:	jmp    0x14001ca71
   14001ca6b:	cmp    r14d,0xffffffff
   14001ca6f:	jne    0x14001cacf
   14001ca71:	movsxd rax,r13d
   14001ca74:	mov    ebx,0x800
   14001ca79:	add    rax,0xc
   14001ca7d:	cmp    rax,rbx
   14001ca80:	jbe    0x14001ca86
   14001ca82:	lea    ebx,[r13+0xc]
   14001ca86:	mov    rax,QWORD PTR [rip+0x15903]        # 0x140032390
   14001ca8d:	movsxd rdx,ebx
   14001ca90:	mov    rcx,QWORD PTR [rax]
   14001ca93:	mov    rax,QWORD PTR [rcx]
   14001ca96:	call   QWORD PTR [rax+0x8]
   14001ca99:	mov    rdi,rax
   14001ca9c:	lea    ecx,[rbx-0xc]
   14001ca9f:	mov    DWORD PTR [rax],ecx
   14001caa1:	xor    eax,eax
   14001caa3:	mov    DWORD PTR [rdi+0x4],eax
   14001caa6:	movsxd r14,DWORD PTR [rsi+0x38]
   14001caaa:	cmp    r14d,DWORD PTR [rsi+0x48]
   14001caae:	jne    0x14001cabc
   14001cab0:	lea    rcx,[rsi+0x40]
   14001cab4:	lea    edx,[rax+0x1]
   14001cab7:	call   0x140013420
   14001cabc:	mov    rax,QWORD PTR [rsi+0x40]
   14001cac0:	inc    DWORD PTR [rsi+0x38]
   14001cac3:	lea    r8,[rax+r14*8]
   14001cac7:	test   r8,r8
   14001caca:	je     0x14001cacf
   14001cacc:	mov    QWORD PTR [r8],rdi
   14001cacf:	cmp    BYTE PTR [rsi+0x28],0x0
   14001cad3:	mov    rcx,r15
   14001cad6:	je     0x14001cae6
   14001cad8:	mov    edx,0x3501a674
   14001cadd:	call   0x140022790
   14001cae2:	mov    edx,eax
   14001cae4:	jmp    0x14001caee
   14001cae6:	call   0x1400226d0
   14001caeb:	movzx  edx,ax
   14001caee:	mov    rax,QWORD PTR [rsi+0x40]
   14001caf2:	movsxd rcx,r14d
   14001caf5:	movsxd r8,ebp
   14001caf8:	mov    rbx,QWORD PTR [rax+rcx*8]
   14001cafc:	movsxd rax,DWORD PTR [rbx+0x4]
   14001cb00:	movzx  edi,WORD PTR [rbx+0x4]
   14001cb04:	lea    rcx,[rax+0xa]
   14001cb08:	mov    WORD PTR [rax+rbx*1+0x8],dx
   14001cb0d:	add    rcx,rbx
   14001cb10:	mov    rdx,r15
   14001cb13:	call   0x140026f70
   14001cb18:	add    DWORD PTR [rbx+0x4],r13d
   14001cb1c:	lea    rax,[rsp+0x98]
   14001cb24:	mov    QWORD PTR [rsp+0x28],rax
   14001cb29:	lea    r9,[rsp+0x30]
   14001cb2e:	lea    rax,[rsp+0x90]
   14001cb36:	mov    WORD PTR [rsp+0x34],r14w
   14001cb3c:	xor    r8d,r8d
   14001cb3f:	mov    QWORD PTR [rsp+0x20],rax
   14001cb44:	lea    rdx,[rsp+0x34]
   14001cb49:	mov    WORD PTR [rsp+0x36],di
   14001cb4e:	mov    rcx,rsi
   14001cb51:	call   0x14001ceb0
   14001cb56:	cmp    BYTE PTR [rsp+0x98],0x0
   14001cb5e:	mov    rcx,rsi
   14001cb61:	mov    r14,QWORD PTR [rsp+0x40]
   14001cb66:	mov    r13,QWORD PTR [rsp+0x48]
   14001cb6b:	mov    rdi,QWORD PTR [rsp+0x50]
   14001cb70:	mov    rbp,QWORD PTR [rsp+0x58]
   14001cb75:	je     0x14001cb94
   14001cb77:	movzx  r8d,BYTE PTR [rsp+0x90]
   14001cb80:	lea    r9,[rsp+0x34]
   14001cb85:	movzx  edx,WORD PTR [rsp+0x30]
   14001cb8a:	call   0x14001d240
   14001cb8f:	movzx  ebx,ax
   14001cb92:	jmp    0x14001cc06
   14001cb94:	lea    rdx,[rsp+0x34]
   14001cb99:	call   0x14001d560
   14001cb9e:	movzx  r8d,WORD PTR [rsp+0x30]
   14001cba4:	xor    r9d,r9d
   14001cba7:	movzx  ebx,ax
   14001cbaa:	mov    edx,0xffff
   14001cbaf:	mov    rax,QWORD PTR [rsi+0x8]
   14001cbb3:	lea    rcx,[rbx+rbx*2]
   14001cbb7:	mov    WORD PTR [rax+rcx*4+0x4],r8w
   14001cbbd:	mov    DWORD PTR [rax+rcx*4],0xffffffff
   14001cbc4:	mov    WORD PTR [rax+rcx*4+0x6],r9w
   14001cbca:	cmp    r8w,dx
   14001cbce:	je     0x14001cbf3
   14001cbd0:	movzx  eax,r8w
   14001cbd4:	lea    rcx,[rax+rax*2]
   14001cbd8:	mov    rax,QWORD PTR [rsi+0x8]
   14001cbdc:	cmp    BYTE PTR [rsp+0x90],r9b
   14001cbe4:	je     0x14001cbec
   14001cbe6:	mov    WORD PTR [rax+rcx*4],bx
   14001cbea:	jmp    0x14001cbf7
   14001cbec:	mov    WORD PTR [rax+rcx*4+0x2],bx
   14001cbf1:	jmp    0x14001cbf7
   14001cbf3:	mov    WORD PTR [rsi+0x18],bx
   14001cbf7:	movzx  edx,bx
   14001cbfa:	mov    rcx,rsi
   14001cbfd:	call   0x14001d2e0
   14001cc02:	inc    WORD PTR [rsi+0x1a]
   14001cc06:	mov    WORD PTR [r12],bx
   14001cc0b:	mov    rbx,QWORD PTR [rsp+0x80]
   14001cc13:	mov    rax,r12
   14001cc16:	add    rsp,0x60
   14001cc1a:	pop    r15
   14001cc1c:	pop    r12
   14001cc1e:	pop    rsi
   14001cc1f:	ret    
   14001cc20:	mov    QWORD PTR [rsp+0x10],rbx
   14001cc25:	mov    QWORD PTR [rsp+0x18],rbp
   14001cc2a:	mov    QWORD PTR [rsp+0x20],rsi
   14001cc2f:	push   rdi
   14001cc30:	sub    rsp,0x20
   14001cc34:	movzx  edi,WORD PTR [rcx+0x18]
   14001cc38:	mov    ebp,0xffff
   14001cc3d:	mov    rsi,rdx
   14001cc40:	mov    rbx,rcx
   14001cc43:	cmp    di,bp
   14001cc46:	je     0x14001ce21
   14001cc4c:	mov    QWORD PTR [rsp+0x30],r14
   14001cc51:	movzx  eax,di
   14001cc54:	lea    r8,[rax+rax*2]
   14001cc58:	mov    rax,QWORD PTR [rbx+0x8]
   14001cc5c:	lea    r14,[r8*4+0x0]
   14001cc64:	lea    r10,[rax+r14*1]
   14001cc68:	movzx  eax,WORD PTR [rsi]
   14001cc6b:	cmp    ax,bp
   14001cc6e:	jne    0x14001cc81
   14001cc70:	cmp    WORD PTR [rsi+0x2],bp
   14001cc74:	jne    0x14001cc81
   14001cc76:	mov    r8,QWORD PTR [rbx+0x30]
   14001cc7a:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001cc7f:	jmp    0x14001cc9d
   14001cc81:	movzx  r8d,WORD PTR [rsi+0x2]
   14001cc86:	movzx  edx,ax
   14001cc89:	mov    rax,QWORD PTR [rbx+0x40]
   14001cc8d:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cc91:	add    r8,rax
   14001cc94:	movzx  r9d,WORD PTR [r8+0x8]
   14001cc99:	add    r8,0xa
   14001cc9d:	movzx  eax,WORD PTR [r10+0x8]
   14001cca2:	cmp    ax,bp
   14001cca5:	jne    0x14001ccb8
   14001cca7:	cmp    WORD PTR [r10+0xa],bp
   14001ccac:	jne    0x14001ccb8
   14001ccae:	mov    rdx,QWORD PTR [rbx+0x30]
   14001ccb2:	movzx  eax,WORD PTR [rbx+0x2a]
   14001ccb6:	jmp    0x14001ccd5
   14001ccb8:	movzx  ecx,WORD PTR [r10+0xa]
   14001ccbd:	movzx  edx,ax
   14001ccc0:	mov    rax,QWORD PTR [rbx+0x40]
   14001ccc4:	mov    rax,QWORD PTR [rax+rdx*8]
   14001ccc8:	lea    rdx,[rax+rcx*1]
   14001cccc:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
   14001ccd1:	add    rdx,0xa
   14001ccd5:	cmp    r9w,ax
   14001ccd9:	jne    0x14001cd1b
   14001ccdb:	test   r8,r8
   14001ccde:	je     0x14001cd30
   14001cce0:	test   rdx,rdx
   14001cce3:	je     0x14001cd22
   14001cce5:	cmp    BYTE PTR [rbx+0x28],0x0
   14001cce9:	jne    0x14001cd0b
   14001cceb:	sub    rdx,r8
   14001ccee:	xchg   ax,ax
   14001ccf0:	movzx  ecx,BYTE PTR [r8]
   14001ccf4:	movzx  eax,BYTE PTR [r8+rdx*1]
   14001ccf9:	sub    ecx,eax
   14001ccfb:	jne    0x14001cd04
   14001ccfd:	inc    r8
   14001cd00:	test   eax,eax
   14001cd02:	jne    0x14001ccf0
   14001cd04:	test   ecx,ecx
   14001cd06:	sets   al
   14001cd09:	jmp    0x14001cd1e
   14001cd0b:	mov    rcx,r8
   14001cd0e:	call   QWORD PTR [rip+0x1584c]        # 0x140032560
   14001cd14:	test   eax,eax
   14001cd16:	sets   al
   14001cd19:	jmp    0x14001cd1e
   14001cd1b:	setb   al
   14001cd1e:	test   al,al
   14001cd20:	je     0x14001cd30
   14001cd22:	mov    rax,QWORD PTR [rbx+0x8]
   14001cd26:	movzx  edi,WORD PTR [r14+rax*1]
   14001cd2b:	jmp    0x14001cdfb
   14001cd30:	mov    rax,QWORD PTR [rbx+0x8]
   14001cd34:	lea    rcx,[rax+r14*1]
   14001cd38:	movzx  eax,WORD PTR [rax+r14*1+0x8]
   14001cd3e:	cmp    ax,bp
   14001cd41:	jne    0x14001cd54
   14001cd43:	cmp    WORD PTR [rcx+0xa],bp
   14001cd47:	jne    0x14001cd54
   14001cd49:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cd4d:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001cd52:	jmp    0x14001cd6f
   14001cd54:	movzx  ecx,WORD PTR [rcx+0xa]
   14001cd58:	movzx  edx,ax
   14001cd5b:	mov    rax,QWORD PTR [rbx+0x40]
   14001cd5f:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cd63:	add    rcx,rax
   14001cd66:	movzx  r9d,WORD PTR [rcx+0x8]
   14001cd6b:	add    rcx,0xa
   14001cd6f:	movzx  eax,WORD PTR [rsi]
   14001cd72:	cmp    ax,bp
   14001cd75:	jne    0x14001cd87
   14001cd77:	cmp    WORD PTR [rsi+0x2],bp
   14001cd7b:	jne    0x14001cd87
   14001cd7d:	mov    r8,QWORD PTR [rbx+0x30]
   14001cd81:	movzx  eax,WORD PTR [rbx+0x2a]
   14001cd85:	jmp    0x14001cda4
   14001cd87:	movzx  edx,WORD PTR [rsi+0x2]
   14001cd8b:	movzx  r8d,ax
   14001cd8f:	mov    rax,QWORD PTR [rbx+0x40]
   14001cd93:	mov    rax,QWORD PTR [rax+r8*8]
   14001cd97:	lea    r8,[rax+rdx*1]
   14001cd9b:	movzx  eax,WORD PTR [rax+rdx*1+0x8]
   14001cda0:	add    r8,0xa
   14001cda4:	cmp    r9w,ax
   14001cda8:	jne    0x14001cdea
   14001cdaa:	test   rcx,rcx
   14001cdad:	je     0x14001ce04
   14001cdaf:	test   r8,r8
   14001cdb2:	je     0x14001cdf1
   14001cdb4:	cmp    BYTE PTR [rbx+0x28],0x0
   14001cdb8:	jne    0x14001cdda
   14001cdba:	sub    r8,rcx
   14001cdbd:	nop    DWORD PTR [rax]
   14001cdc0:	movzx  edx,BYTE PTR [rcx]
   14001cdc3:	movzx  eax,BYTE PTR [rcx+r8*1]
   14001cdc8:	sub    edx,eax
   14001cdca:	jne    0x14001cdd3
   14001cdcc:	inc    rcx
   14001cdcf:	test   eax,eax
   14001cdd1:	jne    0x14001cdc0
   14001cdd3:	test   edx,edx
   14001cdd5:	sets   al
   14001cdd8:	jmp    0x14001cded
   14001cdda:	mov    rdx,r8
   14001cddd:	call   QWORD PTR [rip+0x1577d]        # 0x140032560
   14001cde3:	test   eax,eax
   14001cde5:	sets   al
   14001cde8:	jmp    0x14001cded
   14001cdea:	setb   al
   14001cded:	test   al,al
   14001cdef:	je     0x14001ce04
   14001cdf1:	mov    rax,QWORD PTR [rbx+0x8]
   14001cdf5:	movzx  edi,WORD PTR [rax+r14*1+0x2]
   14001cdfb:	cmp    di,bp
   14001cdfe:	jne    0x14001cc51
   14001ce04:	mov    r14,QWORD PTR [rsp+0x30]
   14001ce09:	movzx  eax,di
   14001ce0c:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce11:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ce16:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ce1b:	add    rsp,0x20
   14001ce1f:	pop    rdi
   14001ce20:	ret    
   14001ce21:	movzx  eax,di
   14001ce24:	jmp    0x14001ce0c
   14001ce26:	int3   
   14001ce27:	int3   
   14001ce28:	int3   
   14001ce29:	int3   
   14001ce2a:	int3   
   14001ce2b:	int3   
   14001ce2c:	int3   
   14001ce2d:	int3   
   14001ce2e:	int3   
   14001ce2f:	int3   
   14001ce30:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce35:	push   rdi
   14001ce36:	sub    rsp,0x20
   14001ce3a:	mov    rdi,rdx
   14001ce3d:	mov    rbx,rcx
   14001ce40:	test   r8,r8
   14001ce43:	jne    0x14001ce5b
   14001ce45:	mov    eax,0xffff
   14001ce4a:	mov    WORD PTR [rdx],ax
   14001ce4d:	mov    rax,rdx
   14001ce50:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce55:	add    rsp,0x20
   14001ce59:	pop    rdi
   14001ce5a:	ret    
   14001ce5b:	cmp    BYTE PTR [rcx+0x28],0x0
   14001ce5f:	mov    QWORD PTR [rcx+0x30],r8
   14001ce63:	mov    rcx,r8
   14001ce66:	je     0x14001ce74
   14001ce68:	mov    edx,0x3501a674
   14001ce6d:	call   0x140022790
   14001ce72:	jmp    0x14001ce79
   14001ce74:	call   0x1400226d0
   14001ce79:	lea    rdx,[rsp+0x40]
   14001ce7e:	mov    WORD PTR [rbx+0x2a],ax
   14001ce82:	mov    rcx,rbx
   14001ce85:	mov    DWORD PTR [rsp+0x40],0xffffffff
   14001ce8d:	call   0x14001cc20
   14001ce92:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce97:	mov    WORD PTR [rdi],ax
   14001ce9a:	mov    rax,rdi
   14001ce9d:	add    rsp,0x20
   14001cea1:	pop    rdi
   14001cea2:	ret    
   14001cea3:	int3   
   14001cea4:	int3   
   14001cea5:	int3   
   14001cea6:	int3   
   14001cea7:	int3   
   14001cea8:	int3   
   14001cea9:	int3   
   14001ceaa:	int3   
   14001ceab:	int3   
   14001ceac:	int3   
   14001cead:	int3   
   14001ceae:	int3   
   14001ceaf:	int3   
   14001ceb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001ceb5:	mov    QWORD PTR [rsp+0x18],rbp
   14001ceba:	push   rdi
   14001cebb:	push   r12
   14001cebd:	push   r13
   14001cebf:	push   r14
   14001cec1:	push   r15
   14001cec3:	sub    rsp,0x20
   14001cec7:	movzx  eax,WORD PTR [rcx+0x18]
   14001cecb:	mov    r13d,0xffff
   14001ced1:	mov    r14,QWORD PTR [rsp+0x70]
   14001ced6:	mov    r15,r9
   14001ced9:	mov    r12,QWORD PTR [rsp+0x78]
   14001cede:	movzx  ebp,r8b
   14001cee2:	mov    WORD PTR [r9],r13w
   14001cee6:	mov    rdi,rdx
   14001cee9:	mov    rbx,rcx
   14001ceec:	mov    BYTE PTR [r14],0x0
   14001cef0:	mov    BYTE PTR [r12],0x0
   14001cef5:	cmp    ax,r13w
   14001cef9:	je     0x14001d0f8
   14001ceff:	mov    QWORD PTR [rsp+0x50],rsi
   14001cf04:	nop    DWORD PTR [rax+0x0]
   14001cf08:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cf10:	mov    WORD PTR [r15],ax
   14001cf14:	movzx  eax,ax
   14001cf17:	lea    rcx,[rax+rax*2]
   14001cf1b:	mov    rax,QWORD PTR [rbx+0x8]
   14001cf1f:	lea    rsi,[rcx*4+0x0]
   14001cf27:	lea    r10,[rsi+rax*1]
   14001cf2b:	movzx  eax,WORD PTR [rdi]
   14001cf2e:	cmp    ax,r13w
   14001cf32:	jne    0x14001cf46
   14001cf34:	cmp    WORD PTR [rdi+0x2],r13w
   14001cf39:	jne    0x14001cf46
   14001cf3b:	mov    r8,QWORD PTR [rbx+0x30]
   14001cf3f:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001cf44:	jmp    0x14001cf62
   14001cf46:	movzx  r8d,WORD PTR [rdi+0x2]
   14001cf4b:	movzx  edx,ax
   14001cf4e:	mov    rax,QWORD PTR [rbx+0x40]
   14001cf52:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cf56:	add    r8,rax
   14001cf59:	movzx  r9d,WORD PTR [r8+0x8]
   14001cf5e:	add    r8,0xa
   14001cf62:	movzx  eax,WORD PTR [r10+0x8]
   14001cf67:	cmp    ax,r13w
   14001cf6b:	jne    0x14001cf7e
   14001cf6d:	cmp    WORD PTR [r10+0xa],r13w
   14001cf72:	jne    0x14001cf7e
   14001cf74:	mov    rdx,QWORD PTR [rbx+0x30]
   14001cf78:	movzx  eax,WORD PTR [rbx+0x2a]
   14001cf7c:	jmp    0x14001cf9b
   14001cf7e:	movzx  ecx,WORD PTR [r10+0xa]
   14001cf83:	movzx  edx,ax
   14001cf86:	mov    rax,QWORD PTR [rbx+0x40]
   14001cf8a:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cf8e:	lea    rdx,[rax+rcx*1]
   14001cf92:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
   14001cf97:	add    rdx,0xa
   14001cf9b:	cmp    r9w,ax
   14001cf9f:	jne    0x14001cfeb
   14001cfa1:	test   r8,r8
   14001cfa4:	je     0x14001d003
   14001cfa6:	test   rdx,rdx
   14001cfa9:	je     0x14001cff2
   14001cfab:	cmp    BYTE PTR [rbx+0x28],0x0
   14001cfaf:	jne    0x14001cfdb
   14001cfb1:	sub    rdx,r8
   14001cfb4:	nop    DWORD PTR [rax+0x0]
   14001cfb8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cfc0:	movzx  ecx,BYTE PTR [r8]
   14001cfc4:	movzx  eax,BYTE PTR [r8+rdx*1]
   14001cfc9:	sub    ecx,eax
   14001cfcb:	jne    0x14001cfd4
   14001cfcd:	inc    r8
   14001cfd0:	test   eax,eax
   14001cfd2:	jne    0x14001cfc0
   14001cfd4:	test   ecx,ecx
   14001cfd6:	sets   al
   14001cfd9:	jmp    0x14001cfee
   14001cfdb:	mov    rcx,r8
   14001cfde:	call   QWORD PTR [rip+0x1557c]        # 0x140032560
   14001cfe4:	test   eax,eax
   14001cfe6:	sets   al
   14001cfe9:	jmp    0x14001cfee
   14001cfeb:	setb   al
   14001cfee:	test   al,al
   14001cff0:	je     0x14001d003
   14001cff2:	mov    BYTE PTR [r14],0x1
   14001cff6:	mov    rax,QWORD PTR [rbx+0x8]
   14001cffa:	movzx  eax,WORD PTR [rsi+rax*1]
   14001cffe:	jmp    0x14001d0de
   14001d003:	test   bpl,bpl
   14001d006:	je     0x14001d0d1
   14001d00c:	mov    rax,QWORD PTR [rbx+0x8]
   14001d010:	lea    rcx,[rsi+rax*1]
   14001d014:	movzx  eax,WORD PTR [rsi+rax*1+0x8]
   14001d019:	cmp    ax,r13w
   14001d01d:	jne    0x14001d031
   14001d01f:	cmp    WORD PTR [rcx+0xa],r13w
   14001d024:	jne    0x14001d031
   14001d026:	mov    rcx,QWORD PTR [rbx+0x30]
   14001d02a:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001d02f:	jmp    0x14001d04c
   14001d031:	movzx  ecx,WORD PTR [rcx+0xa]
   14001d035:	movzx  edx,ax
   14001d038:	mov    rax,QWORD PTR [rbx+0x40]
   14001d03c:	mov    rax,QWORD PTR [rax+rdx*8]
   14001d040:	add    rcx,rax
   14001d043:	movzx  r9d,WORD PTR [rcx+0x8]
   14001d048:	add    rcx,0xa
   14001d04c:	movzx  eax,WORD PTR [rdi]
   14001d04f:	cmp    ax,r13w
   14001d053:	jne    0x14001d066
   14001d055:	cmp    WORD PTR [rdi+0x2],r13w
   14001d05a:	jne    0x14001d066
   14001d05c:	mov    r8,QWORD PTR [rbx+0x30]
   14001d060:	movzx  eax,WORD PTR [rbx+0x2a]
   14001d064:	jmp    0x14001d083
   14001d066:	movzx  edx,WORD PTR [rdi+0x2]
   14001d06a:	movzx  r8d,ax
   14001d06e:	mov    rax,QWORD PTR [rbx+0x40]
   14001d072:	mov    rax,QWORD PTR [rax+r8*8]
   14001d076:	lea    r8,[rax+rdx*1]
   14001d07a:	movzx  eax,WORD PTR [rax+rdx*1+0x8]
   14001d07f:	add    r8,0xa
   14001d083:	cmp    r9w,ax
   14001d087:	jne    0x14001d0ca
   14001d089:	test   rcx,rcx
   14001d08c:	je     0x14001d0ea
   14001d08e:	test   r8,r8
   14001d091:	je     0x14001d0d1
   14001d093:	cmp    BYTE PTR [rbx+0x28],0x0
   14001d097:	jne    0x14001d0ba
   14001d099:	sub    r8,rcx
   14001d09c:	nop    DWORD PTR [rax+0x0]
   14001d0a0:	movzx  edx,BYTE PTR [rcx]
   14001d0a3:	movzx  eax,BYTE PTR [rcx+r8*1]
   14001d0a8:	sub    edx,eax
   14001d0aa:	jne    0x14001d0b3
   14001d0ac:	inc    rcx
   14001d0af:	test   eax,eax
   14001d0b1:	jne    0x14001d0a0
   14001d0b3:	test   edx,edx
   14001d0b5:	sets   al
   14001d0b8:	jmp    0x14001d0cd
   14001d0ba:	mov    rdx,r8
   14001d0bd:	call   QWORD PTR [rip+0x1549d]        # 0x140032560
   14001d0c3:	test   eax,eax
   14001d0c5:	sets   al
   14001d0c8:	jmp    0x14001d0cd
   14001d0ca:	setb   al
   14001d0cd:	test   al,al
   14001d0cf:	je     0x14001d0ea
   14001d0d1:	mov    BYTE PTR [r14],0x0
   14001d0d5:	mov    rax,QWORD PTR [rbx+0x8]
   14001d0d9:	movzx  eax,WORD PTR [rsi+rax*1+0x2]
   14001d0de:	cmp    ax,r13w
   14001d0e2:	jne    0x14001cf10
   14001d0e8:	jmp    0x14001d0f3
   14001d0ea:	mov    BYTE PTR [r14],0x0
   14001d0ee:	mov    BYTE PTR [r12],0x1
   14001d0f3:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d0f8:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d0fd:	mov    rbp,QWORD PTR [rsp+0x60]
   14001d102:	add    rsp,0x20
   14001d106:	pop    r15
   14001d108:	pop    r14
   14001d10a:	pop    r13
   14001d10c:	pop    r12
   14001d10e:	pop    rdi
   14001d10f:	ret    
   14001d110:	rex push rdi
   14001d112:	sub    rsp,0x20
   14001d116:	mov    eax,edx
   14001d118:	mov    rdi,rcx
   14001d11b:	mov    edx,DWORD PTR [rcx+0xc]
   14001d11e:	bt     edx,0x1e
   14001d122:	jb     0x14001d22f
   14001d128:	mov    ecx,DWORD PTR [rcx+0x8]
   14001d12b:	and    edx,0x3fffffff
   14001d131:	mov    QWORD PTR [rsp+0x30],rbx
   14001d136:	mov    r9d,0xc
   14001d13c:	mov    QWORD PTR [rsp+0x38],rsi
   14001d141:	lea    esi,[rcx+rax*1]
   14001d144:	mov    r8d,esi
   14001d147:	call   0x14001aa30
   14001d14c:	movzx  ecx,ax
   14001d14f:	mov    ebx,eax
   14001d151:	cmp    ecx,esi
   14001d153:	jge    0x14001d182
   14001d155:	test   bx,bx
   14001d158:	jne    0x14001d166
   14001d15a:	cmp    esi,0xffff
   14001d160:	jg     0x14001d166
   14001d162:	dec    ebx
   14001d164:	jmp    0x14001d182
   14001d166:	movzx  eax,si
   14001d169:	cmp    eax,esi
   14001d16b:	jne    0x14001d225
   14001d171:	lea    eax,[rbx+rsi*1]
   14001d174:	cdq    
   14001d175:	sub    eax,edx
   14001d177:	sar    eax,1
   14001d179:	mov    ebx,eax
   14001d17b:	movzx  eax,ax
   14001d17e:	cmp    eax,esi
   14001d180:	jl     0x14001d171
   14001d182:	test   DWORD PTR [rdi+0xc],0xc0000000
   14001d189:	mov    rax,QWORD PTR [rip+0x15200]        # 0x140032390
   14001d190:	mov    rcx,QWORD PTR [rax]
   14001d193:	movsxd rax,ebx
   14001d196:	jne    0x14001d1ea
   14001d198:	mov    rdx,QWORD PTR [rdi]
   14001d19b:	test   rdx,rdx
   14001d19e:	je     0x14001d1c5
   14001d1a0:	mov    r9,QWORD PTR [rcx]
   14001d1a3:	lea    r8,[rax+rax*2]
   14001d1a7:	shl    r8,0x2
   14001d1ab:	call   QWORD PTR [r9+0x18]
   14001d1af:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d1b4:	mov    DWORD PTR [rdi+0x8],ebx
   14001d1b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d1bc:	mov    QWORD PTR [rdi],rax
   14001d1bf:	add    rsp,0x20
   14001d1c3:	pop    rdi
   14001d1c4:	ret    
   14001d1c5:	mov    r8,QWORD PTR [rcx]
   14001d1c8:	lea    rdx,[rax+rax*2]
   14001d1cc:	shl    rdx,0x2
   14001d1d0:	call   QWORD PTR [r8+0x8]
   14001d1d4:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d1d9:	mov    DWORD PTR [rdi+0x8],ebx
   14001d1dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d1e1:	mov    QWORD PTR [rdi],rax
   14001d1e4:	add    rsp,0x20
   14001d1e8:	pop    rdi
   14001d1e9:	ret    
   14001d1ea:	mov    r8,QWORD PTR [rcx]
   14001d1ed:	lea    rdx,[rax+rax*2]
   14001d1f1:	mov    rsi,QWORD PTR [rdi]
   14001d1f4:	shl    rdx,0x2
   14001d1f8:	call   QWORD PTR [r8+0x8]
   14001d1fc:	mov    QWORD PTR [rdi],rax
   14001d1ff:	test   rsi,rsi
   14001d202:	je     0x14001d21b
   14001d204:	movsxd rcx,DWORD PTR [rdi+0x8]
   14001d208:	mov    rdx,rsi
   14001d20b:	lea    r8,[rcx+rcx*2]
   14001d20f:	mov    rcx,rax
   14001d212:	shl    r8,0x2
   14001d216:	call   0x140026f70
   14001d21b:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14001d222:	mov    DWORD PTR [rdi+0x8],ebx
   14001d225:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d22a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d22f:	add    rsp,0x20
   14001d233:	pop    rdi
   14001d234:	ret    
   14001d235:	int3   
   14001d236:	int3   
   14001d237:	int3   
   14001d238:	int3   
   14001d239:	int3   
   14001d23a:	int3   
   14001d23b:	int3   
   14001d23c:	int3   
   14001d23d:	int3   
   14001d23e:	int3   
   14001d23f:	int3   
   14001d240:	mov    QWORD PTR [rsp+0x8],rbx
   14001d245:	mov    QWORD PTR [rsp+0x10],rbp
   14001d24a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d24f:	push   rdi
   14001d250:	sub    rsp,0x20
   14001d254:	movzx  esi,dx
   14001d257:	movzx  ebp,r8b
   14001d25b:	mov    rdx,r9
   14001d25e:	mov    rbx,rcx
   14001d261:	call   0x14001d560
   14001d266:	mov    r9,QWORD PTR [rbx+0x8]
   14001d26a:	mov    ecx,0xffff
   14001d26f:	movzx  edi,ax
   14001d272:	xor    eax,eax
   14001d274:	lea    r10,[rdi+rdi*2]
   14001d278:	mov    WORD PTR [r9+r10*4+0x4],si
   14001d27e:	mov    DWORD PTR [r9+r10*4],0xffffffff
   14001d286:	mov    WORD PTR [r9+r10*4+0x6],ax
   14001d28c:	cmp    si,cx
   14001d28f:	je     0x14001d2ae
   14001d291:	movzx  eax,si
   14001d294:	lea    rcx,[rax+rax*2]
   14001d298:	mov    rax,QWORD PTR [rbx+0x8]
   14001d29c:	test   bpl,bpl
   14001d29f:	je     0x14001d2a7
   14001d2a1:	mov    WORD PTR [rax+rcx*4],di
   14001d2a5:	jmp    0x14001d2b2
   14001d2a7:	mov    WORD PTR [rax+rcx*4+0x2],di
   14001d2ac:	jmp    0x14001d2b2
   14001d2ae:	mov    WORD PTR [rbx+0x18],di
   14001d2b2:	movzx  edx,di
   14001d2b5:	mov    rcx,rbx
   14001d2b8:	call   0x14001d2e0
   14001d2bd:	inc    WORD PTR [rbx+0x1a]
   14001d2c1:	movzx  eax,di
   14001d2c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d2c9:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d2ce:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d2d3:	add    rsp,0x20
   14001d2d7:	pop    rdi
   14001d2d8:	ret    
   14001d2d9:	int3   
   14001d2da:	int3   
   14001d2db:	int3   
   14001d2dc:	int3   
   14001d2dd:	int3   
   14001d2de:	int3   
   14001d2df:	int3   
   14001d2e0:	rex push rsi
   14001d2e2:	push   rdi
   14001d2e3:	push   r14
   14001d2e5:	sub    rsp,0x20
   14001d2e9:	movzx  esi,dx
   14001d2ec:	mov    rdi,rcx
   14001d2ef:	mov    r14d,0x1
   14001d2f5:	cmp    dx,WORD PTR [rcx+0x18]
   14001d2f9:	je     0x14001d538
   14001d2ff:	mov    QWORD PTR [rsp+0x48],rbp
   14001d304:	mov    ebp,0xffff
   14001d309:	mov    QWORD PTR [rsp+0x50],r15
   14001d30e:	xor    r15d,r15d
   14001d311:	mov    QWORD PTR [rsp+0x40],rbx
   14001d316:	cmp    si,bp
   14001d319:	je     0x14001d529
   14001d31f:	mov    r8,QWORD PTR [rdi+0x8]
   14001d323:	movzx  eax,si
   14001d326:	lea    rcx,[rax+rax*2]
   14001d32a:	movzx  ebx,WORD PTR [r8+rcx*4+0x4]
   14001d330:	cmp    bx,bp
   14001d333:	je     0x14001d529
   14001d339:	movzx  eax,bx
   14001d33c:	lea    rcx,[rax+rax*2]
   14001d340:	cmp    WORD PTR [r8+rcx*4+0x6],r15w
   14001d346:	jne    0x14001d529
   14001d34c:	cmp    bx,bp
   14001d34f:	je     0x14001d371
   14001d351:	movzx  eax,bx
   14001d354:	lea    rcx,[rax+rax*2]
   14001d358:	movzx  edx,WORD PTR [r8+rcx*4+0x4]
   14001d35e:	cmp    dx,bp
   14001d361:	je     0x14001d373
   14001d363:	movzx  eax,dx
   14001d366:	lea    rcx,[rax+rax*2]
   14001d36a:	movzx  eax,WORD PTR [r8+rcx*4]
   14001d36f:	jmp    0x14001d375
   14001d371:	mov    edx,ebp
   14001d373:	mov    eax,ebp
   14001d375:	cmp    ax,bx
   14001d378:	jne    0x14001d43f
   14001d37e:	cmp    dx,bp
   14001d381:	je     0x14001d3ba
   14001d383:	movzx  eax,dx
   14001d386:	lea    rcx,[rax+rax*2]
   14001d38a:	lea    r10,[rcx*4+0x0]
   14001d392:	movzx  eax,WORD PTR [r10+r8*1+0x2]
   14001d398:	cmp    ax,bp
   14001d39b:	je     0x14001d3ba
   14001d39d:	movzx  eax,ax
   14001d3a0:	lea    rcx,[rax+rax*2]
   14001d3a4:	lea    r9,[rcx*4+0x0]
   14001d3ac:	movzx  eax,WORD PTR [r9+r8*1+0x6]
   14001d3b2:	test   eax,eax
   14001d3b4:	je     0x14001d476
   14001d3ba:	cmp    bx,bp
   14001d3bd:	je     0x14001d3ce
   14001d3bf:	movzx  eax,bx
   14001d3c2:	lea    rcx,[rax+rax*2]
   14001d3c6:	movzx  eax,WORD PTR [r8+rcx*4+0x2]
   14001d3cc:	jmp    0x14001d3d0
   14001d3ce:	mov    eax,ebp
   14001d3d0:	cmp    ax,si
   14001d3d3:	jne    0x14001d410
   14001d3d5:	movzx  edx,bx
   14001d3d8:	mov    rcx,rdi
   14001d3db:	movzx  esi,bx
   14001d3de:	call   0x14001d8a0
   14001d3e3:	cmp    bx,bp
   14001d3e6:	je     0x14001d40b
   14001d3e8:	mov    rdx,QWORD PTR [rdi+0x8]
   14001d3ec:	movzx  eax,bx
   14001d3ef:	lea    rcx,[rax+rax*2]
   14001d3f3:	movzx  ebx,WORD PTR [rdx+rcx*4+0x4]
   14001d3f8:	cmp    bx,bp
   14001d3fb:	je     0x14001d40d
   14001d3fd:	movzx  eax,bx
   14001d400:	lea    rcx,[rax+rax*2]
   14001d404:	movzx  edx,WORD PTR [rdx+rcx*4+0x4]
   14001d409:	jmp    0x14001d410
   14001d40b:	mov    ebx,ebp
   14001d40d:	movzx  edx,bp
   14001d410:	movzx  eax,bx
   14001d413:	lea    rcx,[rax+rax*2]
   14001d417:	mov    rax,QWORD PTR [rdi+0x8]
   14001d41b:	mov    WORD PTR [rax+rcx*4+0x6],r14w
   14001d421:	movzx  eax,dx
   14001d424:	lea    rcx,[rax+rax*2]
   14001d428:	mov    rax,QWORD PTR [rdi+0x8]
   14001d42c:	mov    WORD PTR [rax+rcx*4+0x6],r15w
   14001d432:	mov    rcx,rdi
   14001d435:	call   0x14001da00
   14001d43a:	jmp    0x14001d51f
   14001d43f:	cmp    dx,bp
   14001d442:	je     0x14001d49f
   14001d444:	movzx  eax,dx
   14001d447:	lea    rcx,[rax+rax*2]
   14001d44b:	lea    r10,[rcx*4+0x0]
   14001d453:	movzx  eax,WORD PTR [r10+r8*1]
   14001d458:	cmp    ax,bp
   14001d45b:	je     0x14001d49f
   14001d45d:	movzx  eax,ax
   14001d460:	lea    rcx,[rax+rax*2]
   14001d464:	lea    r9,[rcx*4+0x0]
   14001d46c:	movzx  eax,WORD PTR [r9+r8*1+0x6]
   14001d472:	test   eax,eax
   14001d474:	jne    0x14001d49f
   14001d476:	movzx  eax,bx
   14001d479:	movzx  esi,dx
   14001d47c:	lea    rcx,[rax+rax*2]
   14001d480:	mov    WORD PTR [r8+rcx*4+0x6],r14w
   14001d486:	mov    rax,QWORD PTR [rdi+0x8]
   14001d48a:	mov    WORD PTR [rax+r9*1+0x6],r14w
   14001d490:	mov    rax,QWORD PTR [rdi+0x8]
   14001d494:	mov    WORD PTR [rax+r10*1+0x6],r15w
   14001d49a:	jmp    0x14001d51f
   14001d49f:	cmp    bx,bp
   14001d4a2:	je     0x14001d4b2
   14001d4a4:	movzx  eax,bx
   14001d4a7:	lea    rcx,[rax+rax*2]
   14001d4ab:	movzx  eax,WORD PTR [r8+rcx*4]
   14001d4b0:	jmp    0x14001d4b4
   14001d4b2:	mov    eax,ebp
   14001d4b4:	cmp    ax,si
   14001d4b7:	jne    0x14001d4f5
   14001d4b9:	movzx  edx,bx
   14001d4bc:	mov    rcx,rdi
   14001d4bf:	movzx  esi,bx
   14001d4c2:	call   0x14001da00
   14001d4c7:	cmp    bx,bp
   14001d4ca:	je     0x14001d4ef
   14001d4cc:	mov    rdx,QWORD PTR [rdi+0x8]
   14001d4d0:	movzx  eax,bx
   14001d4d3:	lea    rcx,[rax+rax*2]
   14001d4d7:	movzx  ebx,WORD PTR [rdx+rcx*4+0x4]
   14001d4dc:	cmp    bx,bp
   14001d4df:	je     0x14001d4f2
   14001d4e1:	movzx  eax,bx
   14001d4e4:	lea    rcx,[rax+rax*2]
   14001d4e8:	movzx  edx,WORD PTR [rdx+rcx*4+0x4]
   14001d4ed:	jmp    0x14001d4f5
   14001d4ef:	movzx  ebx,bp
   14001d4f2:	movzx  edx,bp
   14001d4f5:	movzx  eax,bx
   14001d4f8:	lea    rcx,[rax+rax*2]
   14001d4fc:	mov    rax,QWORD PTR [rdi+0x8]
   14001d500:	mov    WORD PTR [rax+rcx*4+0x6],r14w
   14001d506:	movzx  eax,dx
   14001d509:	lea    rcx,[rax+rax*2]
   14001d50d:	mov    rax,QWORD PTR [rdi+0x8]
   14001d511:	mov    WORD PTR [rax+rcx*4+0x6],r15w
   14001d517:	mov    rcx,rdi
   14001d51a:	call   0x14001d8a0
   14001d51f:	cmp    si,WORD PTR [rdi+0x18]
   14001d523:	jne    0x14001d316
   14001d529:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d52e:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d533:	mov    r15,QWORD PTR [rsp+0x50]
   14001d538:	movzx  eax,WORD PTR [rdi+0x18]
   14001d53c:	lea    rcx,[rax+rax*2]
   14001d540:	mov    rax,QWORD PTR [rdi+0x8]
   14001d544:	mov    WORD PTR [rax+rcx*4+0x6],r14w
   14001d54a:	add    rsp,0x20
   14001d54e:	pop    r14
   14001d550:	pop    rdi
   14001d551:	pop    rsi
   14001d552:	ret    
   14001d553:	int3   
   14001d554:	int3   
   14001d555:	int3   
   14001d556:	int3   
   14001d557:	int3   
   14001d558:	int3   
   14001d559:	int3   
   14001d55a:	int3   
   14001d55b:	int3   
   14001d55c:	int3   
   14001d55d:	int3   
   14001d55e:	int3   
   14001d55f:	int3   
   14001d560:	mov    QWORD PTR [rsp+0x8],rbx
   14001d565:	mov    QWORD PTR [rsp+0x10],rbp
   14001d56a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d56f:	push   rdi
   14001d570:	sub    rsp,0x50
   14001d574:	movzx  eax,WORD PTR [rcx+0x1c]
   14001d578:	mov    edi,0xffff
   14001d57d:	mov    rsi,rdx
   14001d580:	mov    rbx,rcx
   14001d583:	cmp    ax,di
   14001d586:	jne    0x14001d6c9
   14001d58c:	movsxd r8,DWORD PTR [rcx+0x10]
   14001d590:	xor    ebp,ebp
   14001d592:	movzx  eax,WORD PTR [rbx+0x1e]
   14001d596:	mov    rcx,r8
   14001d599:	cmp    rax,r8
   14001d59c:	jge    0x14001d5bb
   14001d59e:	movzx  edx,WORD PTR [rbx+0x1e]
   14001d5a2:	lea    eax,[rdx+0x1]
   14001d5a5:	movzx  eax,ax
   14001d5a8:	cmp    rax,rcx
   14001d5ab:	jge    0x14001d5b6
   14001d5ad:	movzx  r8d,dx
   14001d5b1:	inc    r8d
   14001d5b4:	jmp    0x14001d5c7
   14001d5b6:	mov    r8d,edi
   14001d5b9:	jmp    0x14001d5c7
   14001d5bb:	test   r8d,r8d
   14001d5be:	mov    eax,edi
   14001d5c0:	cmovg  eax,ebp
   14001d5c3:	movzx  r8d,ax
   14001d5c7:	movzx  eax,r8w
   14001d5cb:	cmp    rax,rcx
   14001d5ce:	jl     0x14001d6c2
   14001d5d4:	lea    rcx,[rbx+0x8]
   14001d5d8:	mov    edx,0x1
   14001d5dd:	call   0x14001d110
   14001d5e2:	movsxd rcx,DWORD PTR [rbx+0x10]
   14001d5e6:	movzx  eax,WORD PTR [rbx+0x1e]
   14001d5ea:	mov    rdx,rcx
   14001d5ed:	cmp    rax,rcx
   14001d5f0:	jge    0x14001d608
   14001d5f2:	movzx  ecx,WORD PTR [rbx+0x1e]
   14001d5f6:	lea    eax,[rcx+0x1]
   14001d5f9:	movzx  eax,ax
   14001d5fc:	cmp    rax,rdx
   14001d5ff:	jge    0x14001d60d
   14001d601:	movzx  edi,cx
   14001d604:	inc    edi
   14001d606:	jmp    0x14001d60d
   14001d608:	test   ecx,ecx
   14001d60a:	cmovg  edi,ebp
   14001d60d:	movzx  eax,di
   14001d610:	movzx  r8d,di
   14001d614:	cmp    rax,rdx
   14001d617:	jl     0x14001d6c2
   14001d61d:	mov    rax,QWORD PTR [rip+0x14d64]        # 0x140032388
   14001d624:	mov    edx,0x4
   14001d629:	mov    ecx,DWORD PTR [rax]
   14001d62b:	call   QWORD PTR [rip+0x14e77]        # 0x1400324a8
   14001d631:	test   al,al
   14001d633:	je     0x14001d67d
   14001d635:	lea    rax,[rip+0x19054]        # 0x140036690
   14001d63c:	mov    DWORD PTR [rsp+0x38],0x31f
   14001d644:	mov    QWORD PTR [rsp+0x30],rax
   14001d649:	lea    r9,[rip+0x18f28]        # 0x140036578
   14001d650:	lea    rax,[rip+0x1a489]        # 0x140037ae0
   14001d657:	mov    edx,0x4
   14001d65c:	mov    QWORD PTR [rsp+0x40],rax
   14001d661:	lea    r8,[rsp+0x30]
   14001d666:	movzx  eax,WORD PTR [rbx+0x1a]
   14001d66a:	mov    DWORD PTR [rsp+0x20],eax
   14001d66e:	mov    rax,QWORD PTR [rip+0x14d13]        # 0x140032388
   14001d675:	mov    ecx,DWORD PTR [rax]
   14001d677:	call   QWORD PTR [rip+0x14e1b]        # 0x140032498
   14001d67d:	call   QWORD PTR [rip+0x14f05]        # 0x140032588
   14001d683:	test   al,al
   14001d685:	je     0x14001d6b6
   14001d687:	call   QWORD PTR [rip+0x14df3]        # 0x140032480
   14001d68d:	lea    rdx,[rip+0x15118]        # 0x1400327ac
   14001d694:	xorps  xmm0,xmm0
   14001d697:	mov    r8b,0x1
   14001d69a:	mov    DWORD PTR [rsp+0x38],eax
   14001d69e:	mov    QWORD PTR [rsp+0x30],rdx
   14001d6a3:	xor    ecx,ecx
   14001d6a5:	lea    rdx,[rsp+0x30]
   14001d6aa:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001d6b0:	call   QWORD PTR [rip+0x14dc2]        # 0x140032478
   14001d6b6:	mov    ecx,0x1
   14001d6bb:	call   QWORD PTR [rip+0x14b87]        # 0x140032248
   14001d6c1:	int3   
   14001d6c2:	mov    WORD PTR [rbx+0x1e],r8w
   14001d6c7:	jmp    0x14001d6e1
   14001d6c9:	movzx  r8d,ax
   14001d6cd:	movzx  eax,ax
   14001d6d0:	lea    rcx,[rax+rax*2]
   14001d6d4:	mov    rax,QWORD PTR [rbx+0x8]
   14001d6d8:	movzx  ecx,WORD PTR [rax+rcx*4+0x2]
   14001d6dd:	mov    WORD PTR [rbx+0x1c],cx
   14001d6e1:	test   rsi,rsi
   14001d6e4:	je     0x14001d703
   14001d6e6:	movzx  ecx,r8w
   14001d6ea:	lea    rax,[rcx+rcx*2]
   14001d6ee:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d6f2:	lea    rax,[rax+0x2]
   14001d6f6:	lea    rax,[rcx+rax*4]
   14001d6fa:	test   rax,rax
   14001d6fd:	je     0x14001d703
   14001d6ff:	mov    ecx,DWORD PTR [rsi]
   14001d701:	mov    DWORD PTR [rax],ecx
   14001d703:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d707:	movzx  eax,r8w
   14001d70b:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d710:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d715:	mov    QWORD PTR [rbx+0x20],rcx
   14001d719:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d71e:	add    rsp,0x50
   14001d722:	pop    rdi
   14001d723:	ret    
   14001d724:	int3   
   14001d725:	int3   
   14001d726:	int3   
   14001d727:	int3   
   14001d728:	int3   
   14001d729:	int3   
   14001d72a:	int3   
   14001d72b:	int3   
   14001d72c:	int3   
   14001d72d:	int3   
   14001d72e:	int3   
   14001d72f:	int3   
   14001d730:	rex push rbx
   14001d732:	movzx  r10d,WORD PTR [rcx+0x1e]
   14001d737:	mov    ebx,0xffff
   14001d73c:	mov    r9,rcx
   14001d73f:	cmp    r10w,bx
   14001d743:	je     0x14001d7f2
   14001d749:	mov    r11d,DWORD PTR [rcx+0x10]
   14001d74d:	mov    QWORD PTR [rsp+0x10],rdi
   14001d752:	xor    edi,edi
   14001d754:	test   r11d,r11d
   14001d757:	jle    0x14001d7e9
   14001d75d:	movzx  eax,di
   14001d760:	movzx  r8d,ax
   14001d764:	movsxd rcx,r11d
   14001d767:	cmp    r8,rcx
   14001d76a:	jge    0x14001d7bd
   14001d76c:	cmp    ax,r10w
   14001d770:	ja     0x14001d7bd
   14001d772:	cmp    ax,bx
   14001d775:	je     0x14001d786
   14001d777:	mov    rcx,QWORD PTR [r9+0x8]
   14001d77b:	lea    rdx,[r8+r8*2]
   14001d77f:	movzx  r10d,WORD PTR [rcx+rdx*4]
   14001d784:	jmp    0x14001d789
   14001d786:	mov    r10d,ebx
   14001d789:	cmp    r10w,ax
   14001d78d:	setne  cl
   14001d790:	test   cl,cl
   14001d792:	je     0x14001d7bd
   14001d794:	mov    rdx,QWORD PTR [r9+0x8]
   14001d798:	lea    rcx,[r8+r8*2]
   14001d79c:	lea    r8,[rcx*4+0x0]
   14001d7a4:	movzx  ecx,WORD PTR [r9+0x1c]
   14001d7a9:	mov    WORD PTR [rdx+r8*1+0x2],cx
   14001d7af:	mov    rcx,QWORD PTR [r9+0x8]
   14001d7b3:	mov    WORD PTR [r8+rcx*1],ax
   14001d7b8:	mov    WORD PTR [r9+0x1c],ax
   14001d7bd:	movzx  r10d,WORD PTR [r9+0x1e]
   14001d7c2:	cmp    ax,r10w
   14001d7c6:	je     0x14001d7e9
   14001d7c8:	movsxd r11,DWORD PTR [r9+0x10]
   14001d7cc:	lea    ecx,[rax+0x1]
   14001d7cf:	movzx  edx,cx
   14001d7d2:	cmp    rdx,r11
   14001d7d5:	jge    0x14001d7de
   14001d7d7:	movzx  eax,ax
   14001d7da:	inc    eax
   14001d7dc:	jmp    0x14001d7e0
   14001d7de:	mov    eax,ebx
   14001d7e0:	cmp    ax,bx
   14001d7e3:	jne    0x14001d760
   14001d7e9:	mov    rdi,QWORD PTR [rsp+0x10]
   14001d7ee:	mov    DWORD PTR [r9+0x18],ebx
   14001d7f2:	pop    rbx
   14001d7f3:	ret    
   14001d7f4:	int3   
   14001d7f5:	int3   
   14001d7f6:	int3   
   14001d7f7:	int3   
   14001d7f8:	int3   
   14001d7f9:	int3   
   14001d7fa:	int3   
   14001d7fb:	int3   
   14001d7fc:	int3   
   14001d7fd:	int3   
   14001d7fe:	int3   
   14001d7ff:	int3   
   14001d800:	mov    QWORD PTR [rsp+0x8],rbx
   14001d805:	mov    QWORD PTR [rsp+0x10],rbp
   14001d80a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d80f:	push   rdi
   14001d810:	sub    rsp,0x20
   14001d814:	mov    rbx,rcx
   14001d817:	call   0x14001d730
   14001d81c:	mov    edi,0xffff
   14001d821:	xor    ebp,ebp
   14001d823:	mov    WORD PTR [rbx+0x1c],di
   14001d827:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001d82e:	jne    0x14001d850
   14001d830:	mov    rdx,QWORD PTR [rbx+0x8]
   14001d834:	test   rdx,rdx
   14001d837:	je     0x14001d84d
   14001d839:	mov    rax,QWORD PTR [rip+0x14b50]        # 0x140032390
   14001d840:	mov    rcx,QWORD PTR [rax]
   14001d843:	mov    rax,QWORD PTR [rcx]
   14001d846:	call   QWORD PTR [rax+0x28]
   14001d849:	mov    QWORD PTR [rbx+0x8],rbp
   14001d84d:	mov    DWORD PTR [rbx+0x10],ebp
   14001d850:	mov    WORD PTR [rbx+0x1e],di
   14001d854:	mov    esi,ebp
   14001d856:	cmp    DWORD PTR [rbx+0x38],ebp
   14001d859:	jle    0x14001d883
   14001d85b:	mov    rdi,rbp
   14001d85e:	xchg   ax,ax
   14001d860:	mov    rax,QWORD PTR [rip+0x14b29]        # 0x140032390
   14001d867:	mov    rdx,QWORD PTR [rbx+0x40]
   14001d86b:	mov    rcx,QWORD PTR [rax]
   14001d86e:	mov    rdx,QWORD PTR [rdx+rdi*1]
   14001d872:	mov    rax,QWORD PTR [rcx]
   14001d875:	call   QWORD PTR [rax+0x28]
   14001d878:	inc    esi
   14001d87a:	lea    rdi,[rdi+0x8]
   14001d87e:	cmp    esi,DWORD PTR [rbx+0x38]
   14001d881:	jl     0x14001d860
   14001d883:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d888:	mov    DWORD PTR [rbx+0x38],ebp
   14001d88b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d890:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d895:	add    rsp,0x20
   14001d899:	pop    rdi
   14001d89a:	ret    
   14001d89b:	int3   
   14001d89c:	int3   
   14001d89d:	int3   
   14001d89e:	int3   
   14001d89f:	int3   
   14001d8a0:	sub    rsp,0x8
   14001d8a4:	mov    QWORD PTR [rsp],rdi
   14001d8a8:	mov    r9,rcx
   14001d8ab:	mov    edi,0xffff
   14001d8b0:	cmp    dx,di
   14001d8b3:	je     0x14001d8db
   14001d8b5:	mov    r11,QWORD PTR [rcx+0x8]
   14001d8b9:	movzx  eax,dx
   14001d8bc:	lea    r8,[rax+rax*2]
   14001d8c0:	movzx  r10d,WORD PTR [r11+r8*4+0x2]
   14001d8c6:	cmp    r10w,di
   14001d8ca:	je     0x14001d8de
   14001d8cc:	movzx  eax,r10w
   14001d8d0:	lea    rcx,[rax+rax*2]
   14001d8d4:	movzx  r11d,WORD PTR [r11+rcx*4]
   14001d8d9:	jmp    0x14001d8e1
   14001d8db:	mov    r10d,edi
   14001d8de:	mov    r11d,edi
   14001d8e1:	movzx  eax,dx
   14001d8e4:	lea    rcx,[rax+rax*2]
   14001d8e8:	mov    rax,QWORD PTR [r9+0x8]
   14001d8ec:	lea    r8,[rcx*4+0x0]
   14001d8f4:	mov    WORD PTR [rax+r8*1+0x2],r11w
   14001d8fa:	cmp    r10w,di
   14001d8fe:	je     0x14001d951
   14001d900:	mov    r11,QWORD PTR [r9+0x8]
   14001d904:	movzx  eax,r10w
   14001d908:	mov    QWORD PTR [rsp+0x10],rbx
   14001d90d:	lea    rcx,[rax+rax*2]
   14001d911:	lea    rbx,[rcx*4+0x0]
   14001d919:	movzx  eax,WORD PTR [rbx+r11*1]
   14001d91e:	cmp    ax,di
   14001d921:	je     0x14001d930
   14001d923:	movzx  eax,ax
   14001d926:	lea    rcx,[rax+rax*2]
   14001d92a:	mov    WORD PTR [r11+rcx*4+0x4],dx
   14001d930:	cmp    dx,di
   14001d933:	je     0x14001d941
   14001d935:	mov    rax,QWORD PTR [r9+0x8]
   14001d939:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001d93f:	jmp    0x14001d943
   14001d941:	mov    ecx,edi
   14001d943:	mov    rax,QWORD PTR [r9+0x8]
   14001d947:	mov    WORD PTR [rax+rbx*1+0x4],cx
   14001d94c:	mov    rbx,QWORD PTR [rsp+0x10]
   14001d951:	cmp    dx,WORD PTR [r9+0x18]
   14001d956:	je     0x14001d9cc
   14001d958:	cmp    dx,di
   14001d95b:	je     0x14001d97a
   14001d95d:	mov    r11,QWORD PTR [r9+0x8]
   14001d961:	movzx  eax,WORD PTR [r11+r8*1+0x4]
   14001d967:	cmp    ax,di
   14001d96a:	je     0x14001d97a
   14001d96c:	movzx  eax,ax
   14001d96f:	lea    rcx,[rax+rax*2]
   14001d973:	movzx  eax,WORD PTR [r11+rcx*4]
   14001d978:	jmp    0x14001d97c
   14001d97a:	mov    eax,edi
   14001d97c:	cmp    ax,dx
   14001d97f:	jne    0x14001d9a6
   14001d981:	cmp    dx,di
   14001d984:	je     0x14001d992
   14001d986:	mov    rax,QWORD PTR [r9+0x8]
   14001d98a:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001d990:	jmp    0x14001d994
   14001d992:	mov    ecx,edi
   14001d994:	movzx  eax,cx
   14001d997:	lea    rcx,[rax+rax*2]
   14001d99b:	mov    rax,QWORD PTR [r9+0x8]
   14001d99f:	mov    WORD PTR [rax+rcx*4],r10w
   14001d9a4:	jmp    0x14001d9d1
   14001d9a6:	cmp    dx,di
   14001d9a9:	je     0x14001d9b7
   14001d9ab:	mov    rax,QWORD PTR [r9+0x8]
   14001d9af:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001d9b5:	jmp    0x14001d9b9
   14001d9b7:	mov    ecx,edi
   14001d9b9:	movzx  eax,cx
   14001d9bc:	lea    rcx,[rax+rax*2]
   14001d9c0:	mov    rax,QWORD PTR [r9+0x8]
   14001d9c4:	mov    WORD PTR [rax+rcx*4+0x2],r10w
   14001d9ca:	jmp    0x14001d9d1
   14001d9cc:	mov    WORD PTR [r9+0x18],r10w
   14001d9d1:	movzx  eax,r10w
   14001d9d5:	cmp    dx,di
   14001d9d8:	mov    rdi,QWORD PTR [rsp]
   14001d9dc:	lea    rcx,[rax+rax*2]
   14001d9e0:	mov    rax,QWORD PTR [r9+0x8]
   14001d9e4:	mov    WORD PTR [rax+rcx*4],dx
   14001d9e8:	je     0x14001d9f4
   14001d9ea:	mov    rax,QWORD PTR [r9+0x8]
   14001d9ee:	mov    WORD PTR [rax+r8*1+0x4],r10w
   14001d9f4:	add    rsp,0x8
   14001d9f8:	ret    
   14001d9f9:	int3   
   14001d9fa:	int3   
   14001d9fb:	int3   
   14001d9fc:	int3   
   14001d9fd:	int3   
   14001d9fe:	int3   
   14001d9ff:	int3   
   14001da00:	sub    rsp,0x8
   14001da04:	mov    QWORD PTR [rsp],rdi
   14001da08:	mov    r9,rcx
   14001da0b:	mov    edi,0xffff
   14001da10:	cmp    dx,di
   14001da13:	je     0x14001da3b
   14001da15:	mov    r11,QWORD PTR [rcx+0x8]
   14001da19:	movzx  eax,dx
   14001da1c:	lea    r8,[rax+rax*2]
   14001da20:	movzx  r10d,WORD PTR [r11+r8*4]
   14001da25:	cmp    r10w,di
   14001da29:	je     0x14001da3e
   14001da2b:	movzx  eax,r10w
   14001da2f:	lea    rcx,[rax+rax*2]
   14001da33:	movzx  r11d,WORD PTR [r11+rcx*4+0x2]
   14001da39:	jmp    0x14001da41
   14001da3b:	mov    r10d,edi
   14001da3e:	mov    r11d,edi
   14001da41:	movzx  eax,dx
   14001da44:	lea    rcx,[rax+rax*2]
   14001da48:	mov    rax,QWORD PTR [r9+0x8]
   14001da4c:	lea    r8,[rcx*4+0x0]
   14001da54:	mov    WORD PTR [r8+rax*1],r11w
   14001da59:	cmp    r10w,di
   14001da5d:	je     0x14001dab1
   14001da5f:	mov    r11,QWORD PTR [r9+0x8]
   14001da63:	movzx  eax,r10w
   14001da67:	mov    QWORD PTR [rsp+0x10],rbx
   14001da6c:	lea    rcx,[rax+rax*2]
   14001da70:	lea    rbx,[rcx*4+0x0]
   14001da78:	movzx  eax,WORD PTR [rbx+r11*1+0x2]
   14001da7e:	cmp    ax,di
   14001da81:	je     0x14001da90
   14001da83:	movzx  eax,ax
   14001da86:	lea    rcx,[rax+rax*2]
   14001da8a:	mov    WORD PTR [r11+rcx*4+0x4],dx
   14001da90:	cmp    dx,di
   14001da93:	je     0x14001daa1
   14001da95:	mov    rax,QWORD PTR [r9+0x8]
   14001da99:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001da9f:	jmp    0x14001daa3
   14001daa1:	mov    ecx,edi
   14001daa3:	mov    rax,QWORD PTR [r9+0x8]
   14001daa7:	mov    WORD PTR [rax+rbx*1+0x4],cx
   14001daac:	mov    rbx,QWORD PTR [rsp+0x10]
   14001dab1:	cmp    dx,WORD PTR [r9+0x18]
   14001dab6:	je     0x14001db2d
   14001dab8:	cmp    dx,di
   14001dabb:	je     0x14001dadb
   14001dabd:	mov    r11,QWORD PTR [r9+0x8]
   14001dac1:	movzx  eax,WORD PTR [r11+r8*1+0x4]
   14001dac7:	cmp    ax,di
   14001daca:	je     0x14001dadb
   14001dacc:	movzx  eax,ax
   14001dacf:	lea    rcx,[rax+rax*2]
   14001dad3:	movzx  eax,WORD PTR [r11+rcx*4+0x2]
   14001dad9:	jmp    0x14001dadd
   14001dadb:	mov    eax,edi
   14001dadd:	cmp    ax,dx
   14001dae0:	jne    0x14001db08
   14001dae2:	cmp    dx,di
   14001dae5:	je     0x14001daf3
   14001dae7:	mov    rax,QWORD PTR [r9+0x8]
   14001daeb:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001daf1:	jmp    0x14001daf5
   14001daf3:	mov    ecx,edi
   14001daf5:	movzx  eax,cx
   14001daf8:	lea    rcx,[rax+rax*2]
   14001dafc:	mov    rax,QWORD PTR [r9+0x8]
   14001db00:	mov    WORD PTR [rax+rcx*4+0x2],r10w
   14001db06:	jmp    0x14001db32
   14001db08:	cmp    dx,di
   14001db0b:	je     0x14001db19
   14001db0d:	mov    rax,QWORD PTR [r9+0x8]
   14001db11:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001db17:	jmp    0x14001db1b
   14001db19:	mov    ecx,edi
   14001db1b:	movzx  eax,cx
   14001db1e:	lea    rcx,[rax+rax*2]
   14001db22:	mov    rax,QWORD PTR [r9+0x8]
   14001db26:	mov    WORD PTR [rax+rcx*4],r10w
   14001db2b:	jmp    0x14001db32
   14001db2d:	mov    WORD PTR [r9+0x18],r10w
   14001db32:	movzx  eax,r10w
   14001db36:	cmp    dx,di
   14001db39:	mov    rdi,QWORD PTR [rsp]
   14001db3d:	lea    rcx,[rax+rax*2]
   14001db41:	mov    rax,QWORD PTR [r9+0x8]
   14001db45:	mov    WORD PTR [rax+rcx*4+0x2],dx
   14001db4a:	je     0x14001db56
   14001db4c:	mov    rax,QWORD PTR [r9+0x8]
   14001db50:	mov    WORD PTR [rax+r8*1+0x4],r10w
   14001db56:	add    rsp,0x8
   14001db5a:	ret    
   14001db5b:	int3   
   14001db5c:	int3   
   14001db5d:	int3   
   14001db5e:	int3   
   14001db5f:	int3   
   14001db60:	movzx  eax,WORD PTR [rdx]
   14001db63:	mov    r9,rcx
   14001db66:	mov    ecx,0xffff
   14001db6b:	cmp    ax,cx
   14001db6e:	jne    0x14001db78
   14001db70:	lea    rax,[rip+0x14c29]        # 0x1400327a0
   14001db77:	ret    
   14001db78:	movzx  eax,ax
   14001db7b:	lea    rcx,[rax+rax*2]
   14001db7f:	mov    rax,QWORD PTR [r9+0x8]
   14001db83:	movzx  r8d,WORD PTR [rax+rcx*4+0x8]
   14001db89:	lea    rdx,[rax+rcx*4]
   14001db8d:	mov    rax,QWORD PTR [r9+0x40]
   14001db91:	movzx  ecx,WORD PTR [rdx+0xa]
   14001db95:	add    rcx,0xa
   14001db99:	mov    rax,QWORD PTR [rax+r8*8]
   14001db9d:	add    rax,rcx
   14001dba0:	ret    
   14001dba1:	int3   
   14001dba2:	int3   
   14001dba3:	int3   
   14001dba4:	int3   
   14001dba5:	int3   
   14001dba6:	int3   
   14001dba7:	int3   
   14001dba8:	int3   
   14001dba9:	int3   
   14001dbaa:	int3   
   14001dbab:	int3   
   14001dbac:	int3   
   14001dbad:	int3   
   14001dbae:	int3   
   14001dbaf:	int3   
   14001dbb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dbb5:	mov    QWORD PTR [rsp+0x20],rsi
   14001dbba:	push   rdi
   14001dbbb:	sub    rsp,0x30
   14001dbbf:	mov    eax,DWORD PTR [rcx+0x8]
   14001dbc2:	xor    edi,edi
   14001dbc4:	and    eax,0x80ffffff
   14001dbc9:	mov    QWORD PTR [rcx],rdi
   14001dbcc:	or     eax,0xffffff
   14001dbd1:	mov    rbx,rdx
   14001dbd4:	mov    DWORD PTR [rcx+0x8],eax
   14001dbd7:	mov    rsi,rcx
   14001dbda:	call   0x14001e3b0
   14001dbdf:	and    DWORD PTR [rsi+0x8],0xf7ffffff
   14001dbe6:	mov    QWORD PTR [rsi+0xc],rdi
   14001dbea:	mov    DWORD PTR [rsp+0x40],0xffffff
   14001dbf2:	call   QWORD PTR [rip+0x14800]        # 0x1400323f8
   14001dbf8:	mov    r9,rbx
   14001dbfb:	mov    BYTE PTR [rsp+0x20],0x1
   14001dc00:	lea    r8,[rsp+0x40]
   14001dc05:	mov    rcx,rax
   14001dc08:	lea    rdx,[rsp+0x50]
   14001dc0d:	mov    r10,QWORD PTR [rax]
   14001dc10:	call   QWORD PTR [r10+0x40]
   14001dc14:	mov    rbx,QWORD PTR [rsp+0x48]
   14001dc19:	mov    eax,DWORD PTR [rax]
   14001dc1b:	cmp    eax,DWORD PTR [rsp+0x40]
   14001dc1f:	sete   dil
   14001dc23:	and    eax,0xffffff
   14001dc28:	shl    edi,0x1d
   14001dc2b:	or     edi,eax
   14001dc2d:	mov    eax,DWORD PTR [rsi+0x8]
   14001dc30:	and    eax,0xdf000000
   14001dc35:	or     edi,eax
   14001dc37:	mov    rax,rsi
   14001dc3a:	mov    DWORD PTR [rsi+0x8],edi
   14001dc3d:	mov    rsi,QWORD PTR [rsp+0x58]
   14001dc42:	add    rsp,0x30
   14001dc46:	pop    rdi
   14001dc47:	ret    
   14001dc48:	int3   
   14001dc49:	int3   
   14001dc4a:	int3   
   14001dc4b:	int3   
   14001dc4c:	int3   
   14001dc4d:	int3   
   14001dc4e:	int3   
   14001dc4f:	int3   
   14001dc50:	rex push rbx
   14001dc52:	sub    rsp,0x20
   14001dc56:	mov    rbx,rcx
   14001dc59:	call   0x140020420
   14001dc5e:	mov    rcx,rbx
   14001dc61:	add    rsp,0x20
   14001dc65:	pop    rbx
   14001dc66:	jmp    0x14001e3b0
   14001dc6b:	int3   
   14001dc6c:	int3   
   14001dc6d:	int3   
   14001dc6e:	int3   
   14001dc6f:	int3   
   14001dc70:	sub    rsp,0x28
   14001dc74:	call   QWORD PTR [rip+0x1477e]        # 0x1400323f8
   14001dc7a:	mov    rcx,rax
   14001dc7d:	mov    rdx,QWORD PTR [rax]
   14001dc80:	add    rsp,0x28
   14001dc84:	rex.W jmp QWORD PTR [rdx]
   14001dc87:	int3   
   14001dc88:	int3   
   14001dc89:	int3   
   14001dc8a:	int3   
   14001dc8b:	int3   
   14001dc8c:	int3   
   14001dc8d:	int3   
   14001dc8e:	int3   
   14001dc8f:	int3   
   14001dc90:	rex push rbx
   14001dc92:	sub    rsp,0x20
   14001dc96:	mov    rbx,rcx
   14001dc99:	call   QWORD PTR [rip+0x14759]        # 0x1400323f8
   14001dc9f:	mov    rdx,rbx
   14001dca2:	mov    rcx,rax
   14001dca5:	mov    r8,QWORD PTR [rax]
   14001dca8:	add    rsp,0x20
   14001dcac:	pop    rbx
   14001dcad:	rex.WB jmp QWORD PTR [r8+0x8]
   14001dcb1:	int3   
   14001dcb2:	int3   
   14001dcb3:	int3   
   14001dcb4:	int3   
   14001dcb5:	int3   
   14001dcb6:	int3   
   14001dcb7:	int3   
   14001dcb8:	int3   
   14001dcb9:	int3   
   14001dcba:	int3   
   14001dcbb:	int3   
   14001dcbc:	int3   
   14001dcbd:	int3   
   14001dcbe:	int3   
   14001dcbf:	int3   
   14001dcc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001dcc5:	push   rdi
   14001dcc6:	sub    rsp,0x20
   14001dcca:	mov    edi,edx
   14001dccc:	mov    rbx,rcx
   14001dccf:	call   0x140020420
   14001dcd4:	mov    rcx,rbx
   14001dcd7:	call   0x14001e3b0
   14001dcdc:	test   dil,0x1
   14001dce0:	je     0x14001dd16
   14001dce2:	test   dil,0x4
   14001dce6:	jne    0x14001dd09
   14001dce8:	call   QWORD PTR [rip+0x1470a]        # 0x1400323f8
   14001dcee:	mov    rdx,rbx
   14001dcf1:	mov    rcx,rax
   14001dcf4:	mov    r8,QWORD PTR [rax]
   14001dcf7:	call   QWORD PTR [r8+0x8]
   14001dcfb:	mov    rax,rbx
   14001dcfe:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dd03:	add    rsp,0x20
   14001dd07:	pop    rdi
   14001dd08:	ret    
   14001dd09:	mov    edx,0x14
   14001dd0e:	mov    rcx,rbx
   14001dd11:	call   0x14001e1b0
   14001dd16:	mov    rax,rbx
   14001dd19:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dd1e:	add    rsp,0x20
   14001dd22:	pop    rdi
   14001dd23:	ret    
   14001dd24:	int3   
   14001dd25:	int3   
   14001dd26:	int3   
   14001dd27:	int3   
   14001dd28:	int3   
   14001dd29:	int3   
   14001dd2a:	int3   
   14001dd2b:	int3   
   14001dd2c:	int3   
   14001dd2d:	int3   
   14001dd2e:	int3   
   14001dd2f:	int3   
   14001dd30:	mov    QWORD PTR [rsp+0x18],rbx
   14001dd35:	mov    QWORD PTR [rsp+0x20],rbp
   14001dd3a:	push   r14
   14001dd3c:	sub    rsp,0x20
   14001dd40:	mov    eax,DWORD PTR [rcx+0x8]
   14001dd43:	xor    r14d,r14d
   14001dd46:	mov    rbx,rdx
   14001dd49:	mov    ebp,r14d
   14001dd4c:	test   eax,0x7000000
   14001dd51:	jne    0x14001ddc9
   14001dd53:	bt     eax,0x1e
   14001dd57:	jae    0x14001ddc9
   14001dd59:	mov    QWORD PTR [rsp+0x30],rsi
   14001dd5e:	mov    rsi,QWORD PTR [rcx]
   14001dd61:	test   rsi,rsi
   14001dd64:	je     0x14001ddc4
   14001dd66:	mov    QWORD PTR [rsp+0x38],rdi
   14001dd6b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001dd70:	mov    rcx,rsi
   14001dd73:	call   0x14001f450
   14001dd78:	mov    rdi,rax
   14001dd7b:	test   rbp,rbp
   14001dd7e:	je     0x14001dd86
   14001dd80:	mov    QWORD PTR [rbp+0xc],rax
   14001dd84:	jmp    0x14001ddaf
   14001dd86:	test   rdi,rdi
   14001dd89:	jne    0x14001dd94
   14001dd8b:	and    DWORD PTR [rbx+0x8],0xbfffffff
   14001dd92:	jmp    0x14001ddaf
   14001dd94:	test   DWORD PTR [rbx+0x8],0x7000000
   14001dd9b:	je     0x14001dda5
   14001dd9d:	mov    rcx,rbx
   14001dda0:	call   0x14001e3b0
   14001dda5:	or     DWORD PTR [rbx+0x8],0x40000000
   14001ddac:	mov    QWORD PTR [rbx],rdi
   14001ddaf:	mov    QWORD PTR [rdi+0xc],r14
   14001ddb3:	mov    rbp,rdi
   14001ddb6:	mov    rsi,QWORD PTR [rsi+0xc]
   14001ddba:	test   rsi,rsi
   14001ddbd:	jne    0x14001dd70
   14001ddbf:	mov    rdi,QWORD PTR [rsp+0x38]
   14001ddc4:	mov    rsi,QWORD PTR [rsp+0x30]
   14001ddc9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ddce:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ddd3:	add    rsp,0x20
   14001ddd7:	pop    r14
   14001ddd9:	ret    
   14001ddda:	int3   
   14001dddb:	int3   
   14001dddc:	int3   
   14001dddd:	int3   
   14001ddde:	int3   
   14001dddf:	int3   
   14001dde0:	mov    QWORD PTR [rsp+0x8],rbx
   14001dde5:	mov    QWORD PTR [rsp+0x10],rsi
   14001ddea:	push   rdi
   14001ddeb:	sub    rsp,0x20
   14001ddef:	mov    rsi,r8
   14001ddf2:	mov    rbx,rdx
   14001ddf5:	mov    rdi,rcx
   14001ddf8:	call   QWORD PTR [rip+0x145fa]        # 0x1400323f8
   14001ddfe:	mov    rcx,rax
   14001de01:	mov    r9,QWORD PTR [rax]
   14001de04:	call   QWORD PTR [r9]
   14001de07:	test   rax,rax
   14001de0a:	je     0x14001de1c
   14001de0c:	mov    rdx,rbx
   14001de0f:	mov    rcx,rax
   14001de12:	call   0x14001dbb0
   14001de17:	mov    rbx,rax
   14001de1a:	jmp    0x14001de1e
   14001de1c:	xor    ebx,ebx
   14001de1e:	mov    eax,DWORD PTR [rdi+0x8]
   14001de21:	and    eax,0xf8000000
   14001de26:	xor    eax,DWORD PTR [rbx+0x8]
   14001de29:	and    eax,0x8000000
   14001de2e:	xor    DWORD PTR [rbx+0x8],eax
   14001de31:	test   rsi,rsi
   14001de34:	jne    0x14001de64
   14001de36:	test   DWORD PTR [rdi+0x8],0x7000000
   14001de3d:	je     0x14001de47
   14001de3f:	mov    rcx,rdi
   14001de42:	call   0x14001e3b0
   14001de47:	or     DWORD PTR [rdi+0x8],0x40000000
   14001de4e:	mov    rax,rbx
   14001de51:	mov    QWORD PTR [rdi],rbx
   14001de54:	mov    rbx,QWORD PTR [rsp+0x30]
   14001de59:	mov    rsi,QWORD PTR [rsp+0x38]
   14001de5e:	add    rsp,0x20
   14001de62:	pop    rdi
   14001de63:	ret    
   14001de64:	mov    QWORD PTR [rsi+0xc],rbx
   14001de68:	mov    rax,rbx
   14001de6b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001de70:	mov    rsi,QWORD PTR [rsp+0x38]
   14001de75:	add    rsp,0x20
   14001de79:	pop    rdi
   14001de7a:	ret    
   14001de7b:	int3   
   14001de7c:	int3   
   14001de7d:	int3   
   14001de7e:	int3   
   14001de7f:	int3   
   14001de80:	rex push rbx
   14001de82:	sub    rsp,0x40
   14001de86:	mov    rbx,rdx
   14001de89:	mov    BYTE PTR [rsp+0x30],0x0
   14001de8e:	lea    rdx,[rsp+0x30]
   14001de93:	mov    QWORD PTR [rsp+0x20],0x0
   14001de9c:	lea    rcx,[rip+0x2a2cd]        # 0x140048170
   14001dea3:	call   0x1400247e0
   14001dea8:	test   al,al
   14001deaa:	jne    0x14001debb
   14001deac:	lea    rdx,[rip+0x19dd5]        # 0x140037c88
   14001deb3:	mov    rcx,rbx
   14001deb6:	call   0x140020630
   14001debb:	movzx  eax,BYTE PTR [rsp+0x30]
   14001dec0:	add    rsp,0x40
   14001dec4:	pop    rbx
   14001dec5:	ret    
   14001dec6:	int3   
   14001dec7:	int3   
   14001dec8:	int3   
   14001dec9:	int3   
   14001deca:	int3   
   14001decb:	int3   
   14001decc:	int3   
   14001decd:	int3   
   14001dece:	int3   
   14001decf:	int3   
   14001ded0:	mov    BYTE PTR [rsp+0x18],r8b
   14001ded5:	mov    QWORD PTR [rsp+0x8],rcx
   14001deda:	push   rbx
   14001dedb:	push   rdi
   14001dedc:	sub    rsp,0x58
   14001dee0:	mov    rdi,rdx
   14001dee3:	mov    rbx,rcx
   14001dee6:	test   rcx,rcx
   14001dee9:	jne    0x14001def4
   14001deeb:	xor    eax,eax
   14001deed:	add    rsp,0x58
   14001def1:	pop    rdi
   14001def2:	pop    rbx
   14001def3:	ret    
   14001def4:	test   rdi,rdi
   14001def7:	je     0x14001e115
   14001defd:	cmp    BYTE PTR [rdx],0x0
   14001df00:	je     0x14001e115
   14001df06:	xor    eax,eax
   14001df08:	mov    QWORD PTR [rsp+0x78],rbp
   14001df0d:	mov    QWORD PTR [rsp+0x50],rsi
   14001df12:	mov    rcx,rdi
   14001df15:	xor    esi,esi
   14001df17:	mov    DWORD PTR [rsp+0x30],0x0
   14001df1f:	mov    QWORD PTR [rsp+0x38],rsi
   14001df24:	mov    QWORD PTR [rsp+0x40],rsi
   14001df29:	mov    DWORD PTR [rsp+0x24],eax
   14001df2d:	lea    edx,[rsi+0x2f]
   14001df30:	call   0x140027a28
   14001df35:	mov    QWORD PTR [rsp+0x28],rax
   14001df3a:	test   rax,rax
   14001df3d:	je     0x14001df9b
   14001df3f:	mov    ebx,eax
   14001df41:	sub    ebx,edi
   14001df43:	lea    ebp,[rbx+0x1]
   14001df46:	cmp    ebp,0x1
   14001df49:	jl     0x14001df68
   14001df4b:	test   ebp,ebp
   14001df4d:	jle    0x14001df68
   14001df4f:	mov    edx,ebp
   14001df51:	lea    rcx,[rsp+0x38]
   14001df56:	call   0x14000f0d0
   14001df5b:	mov    eax,DWORD PTR [rsp+0x44]
   14001df5f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001df64:	mov    DWORD PTR [rsp+0x24],eax
   14001df68:	test   ebx,ebx
   14001df6a:	jns    0x14001df6d
   14001df6c:	int3   
   14001df6d:	movsxd rbx,ebx
   14001df70:	mov    rdx,rdi
   14001df73:	mov    r8,rbx
   14001df76:	mov    rcx,rsi
   14001df79:	call   0x140026f70
   14001df7e:	or     rax,0xffffffffffffffff
   14001df82:	mov    BYTE PTR [rbx+rsi*1],0x0
   14001df86:	inc    rax
   14001df89:	cmp    BYTE PTR [rdi+rax*1],0x0
   14001df8d:	jne    0x14001df86
   14001df8f:	mov    rbx,QWORD PTR [rsp+0x70]
   14001df94:	cmp    eax,0x1
   14001df97:	cmovg  rdi,rsi
   14001df9b:	call   QWORD PTR [rip+0x14457]        # 0x1400323f8
   14001dfa1:	movzx  r9d,BYTE PTR [rsp+0x80]
   14001dfaa:	lea    rdx,[rsp+0x88]
   14001dfb2:	mov    r8,rdi
   14001dfb5:	mov    rcx,rax
   14001dfb8:	mov    r10,QWORD PTR [rax]
   14001dfbb:	call   QWORD PTR [r10+0x10]
   14001dfbf:	mov    ecx,DWORD PTR [rsp+0x88]
   14001dfc6:	cmp    ecx,0xffffff
   14001dfcc:	je     0x14001e0bc
   14001dfd2:	mov    eax,DWORD PTR [rbx+0x8]
   14001dfd5:	xor    ebp,ebp
   14001dfd7:	test   eax,0x7000000
   14001dfdc:	jne    0x14001e03f
   14001dfde:	bt     eax,0x1e
   14001dfe2:	jae    0x14001e03f
   14001dfe4:	mov    rbx,QWORD PTR [rbx]
   14001dfe7:	test   rbx,rbx
   14001dfea:	je     0x14001e03f
   14001dfec:	nop    DWORD PTR [rax+0x0]
   14001dff0:	mov    eax,DWORD PTR [rbx+0x8]
   14001dff3:	mov    rbp,rbx
   14001dff6:	bt     eax,0x1d
   14001dffa:	jae    0x14001e007
   14001dffc:	and    eax,0xffffff
   14001e001:	mov    DWORD PTR [rsp+0x20],eax
   14001e005:	jmp    0x14001e032
   14001e007:	call   QWORD PTR [rip+0x143eb]        # 0x1400323f8
   14001e00d:	mov    r8d,DWORD PTR [rbx+0x8]
   14001e011:	lea    rdx,[rsp+0x20]
   14001e016:	and    r8d,0xffffff
   14001e01d:	mov    rcx,rax
   14001e020:	mov    r9,QWORD PTR [rax]
   14001e023:	call   QWORD PTR [r9+0x48]
   14001e027:	mov    ecx,DWORD PTR [rsp+0x88]
   14001e02e:	mov    eax,DWORD PTR [rsp+0x20]
   14001e032:	cmp    eax,ecx
   14001e034:	je     0x14001e099
   14001e036:	mov    rbx,QWORD PTR [rbx+0xc]
   14001e03a:	test   rbx,rbx
   14001e03d:	jne    0x14001dff0
   14001e03f:	cmp    BYTE PTR [rsp+0x80],0x0
   14001e047:	je     0x14001e0bc
   14001e049:	call   QWORD PTR [rip+0x143a9]        # 0x1400323f8
   14001e04f:	mov    rcx,rax
   14001e052:	mov    r8,QWORD PTR [rax]
   14001e055:	call   QWORD PTR [r8]
   14001e058:	test   rax,rax
   14001e05b:	je     0x14001e06d
   14001e05d:	mov    rdx,rdi
   14001e060:	mov    rcx,rax
   14001e063:	call   0x14001dbb0
   14001e068:	mov    rbx,rax
   14001e06b:	jmp    0x14001e06f
   14001e06d:	xor    ebx,ebx
   14001e06f:	test   rbp,rbp
   14001e072:	je     0x14001e07a
   14001e074:	mov    QWORD PTR [rbp+0xc],rbx
   14001e078:	jmp    0x14001e091
   14001e07a:	mov    rcx,QWORD PTR [rsp+0x70]
   14001e07f:	call   0x14001e3b0
   14001e084:	mov    rcx,QWORD PTR [rsp+0x70]
   14001e089:	mov    rdx,rbx
   14001e08c:	call   0x14001e9a0
   14001e091:	mov    QWORD PTR [rbx+0xc],0x0
   14001e099:	mov    rdx,QWORD PTR [rsp+0x28]
   14001e09e:	test   rdx,rdx
   14001e0a1:	je     0x14001e0be
   14001e0a3:	movzx  r8d,BYTE PTR [rsp+0x80]
   14001e0ac:	inc    rdx
   14001e0af:	mov    rcx,rbx
   14001e0b2:	call   0x14001ded0
   14001e0b7:	mov    rbx,rax
   14001e0ba:	jmp    0x14001e0be
   14001e0bc:	xor    ebx,ebx
   14001e0be:	mov    edi,DWORD PTR [rsp+0x24]
   14001e0c2:	mov    rbp,QWORD PTR [rsp+0x78]
   14001e0c7:	and    edi,0xc0000000
   14001e0cd:	jne    0x14001e0e9
   14001e0cf:	test   rsi,rsi
   14001e0d2:	je     0x14001e0e9
   14001e0d4:	mov    rax,QWORD PTR [rip+0x142b5]        # 0x140032390
   14001e0db:	mov    rdx,rsi
   14001e0de:	mov    rcx,QWORD PTR [rax]
   14001e0e1:	mov    rax,QWORD PTR [rcx]
   14001e0e4:	call   QWORD PTR [rax+0x28]
   14001e0e7:	xor    esi,esi
   14001e0e9:	test   edi,edi
   14001e0eb:	jne    0x14001e106
   14001e0ed:	test   rsi,rsi
   14001e0f0:	je     0x14001e106
   14001e0f2:	mov    rcx,QWORD PTR [rip+0x14297]        # 0x140032390
   14001e0f9:	mov    rdx,rsi
   14001e0fc:	mov    rcx,QWORD PTR [rcx]
   14001e0ff:	mov    r8,QWORD PTR [rcx]
   14001e102:	call   QWORD PTR [r8+0x28]
   14001e106:	mov    rax,rbx
   14001e109:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e10e:	add    rsp,0x58
   14001e112:	pop    rdi
   14001e113:	pop    rbx
   14001e114:	ret    
   14001e115:	mov    rax,rcx
   14001e118:	add    rsp,0x58
   14001e11c:	pop    rdi
   14001e11d:	pop    rbx
   14001e11e:	ret    
   14001e11f:	int3   
   14001e120:	mov    DWORD PTR [rsp+0x10],edx
   14001e124:	push   rbx
   14001e125:	sub    rsp,0x20
   14001e129:	test   rcx,rcx
   14001e12c:	je     0x14001e143
   14001e12e:	mov    eax,DWORD PTR [rcx+0x8]
   14001e131:	test   eax,0x7000000
   14001e136:	jne    0x14001e143
   14001e138:	bt     eax,0x1e
   14001e13c:	jae    0x14001e143
   14001e13e:	mov    rbx,QWORD PTR [rcx]
   14001e141:	jmp    0x14001e145
   14001e143:	xor    ebx,ebx
   14001e145:	test   rbx,rbx
   14001e148:	je     0x14001e198
   14001e14a:	nop    WORD PTR [rax+rax*1+0x0]
   14001e150:	mov    eax,DWORD PTR [rbx+0x8]
   14001e153:	bt     eax,0x1d
   14001e157:	jae    0x14001e164
   14001e159:	and    eax,0xffffff
   14001e15e:	mov    DWORD PTR [rsp+0x30],eax
   14001e162:	jmp    0x14001e18b
   14001e164:	call   QWORD PTR [rip+0x1428e]        # 0x1400323f8
   14001e16a:	mov    r8d,DWORD PTR [rbx+0x8]
   14001e16e:	lea    rdx,[rsp+0x30]
   14001e173:	mov    rcx,rax
   14001e176:	and    r8d,0xffffff
   14001e17d:	mov    rax,QWORD PTR [rax]
   14001e180:	call   QWORD PTR [rax+0x48]
   14001e183:	mov    edx,DWORD PTR [rsp+0x38]
   14001e187:	mov    eax,DWORD PTR [rsp+0x30]
   14001e18b:	cmp    eax,edx
   14001e18d:	je     0x14001e1a0
   14001e18f:	mov    rbx,QWORD PTR [rbx+0xc]
   14001e193:	test   rbx,rbx
   14001e196:	jne    0x14001e150
   14001e198:	xor    eax,eax
   14001e19a:	add    rsp,0x20
   14001e19e:	pop    rbx
   14001e19f:	ret    
   14001e1a0:	mov    rax,rbx
   14001e1a3:	add    rsp,0x20
   14001e1a7:	pop    rbx
   14001e1a8:	ret    
   14001e1a9:	int3   
   14001e1aa:	int3   
   14001e1ab:	int3   
   14001e1ac:	int3   
   14001e1ad:	int3   
   14001e1ae:	int3   
   14001e1af:	int3   
   14001e1b0:	ret    0x0
   14001e1b3:	int3   
   14001e1b4:	int3   
   14001e1b5:	int3   
   14001e1b6:	int3   
   14001e1b7:	int3   
   14001e1b8:	int3   
   14001e1b9:	int3   
   14001e1ba:	int3   
   14001e1bb:	int3   
   14001e1bc:	int3   
   14001e1bd:	int3   
   14001e1be:	int3   
   14001e1bf:	int3   
   14001e1c0:	rex push rbx
   14001e1c2:	sub    rsp,0x20
   14001e1c6:	mov    edx,0x1
   14001e1cb:	mov    rbx,rcx
   14001e1ce:	call   0x140020b70
   14001e1d3:	test   al,al
   14001e1d5:	je     0x14001e1f4
   14001e1d7:	mov    ecx,DWORD PTR [rbx+0x10]
   14001e1da:	mov    eax,ecx
   14001e1dc:	sub    eax,DWORD PTR [rbx+0x24]
   14001e1df:	movsxd rdx,eax
   14001e1e2:	inc    ecx
   14001e1e4:	mov    rax,QWORD PTR [rbx]
   14001e1e7:	movzx  eax,BYTE PTR [rdx+rax*1]
   14001e1eb:	mov    DWORD PTR [rbx+0x10],ecx
   14001e1ee:	add    rsp,0x20
   14001e1f2:	pop    rbx
   14001e1f3:	ret    
   14001e1f4:	xor    al,al
   14001e1f6:	add    rsp,0x20
   14001e1fa:	pop    rbx
   14001e1fb:	ret    
   14001e1fc:	int3   
   14001e1fd:	int3   
   14001e1fe:	int3   
   14001e1ff:	int3   
   14001e200:	test   rcx,rcx
   14001e203:	je     0x14001e21a
   14001e205:	mov    eax,DWORD PTR [rcx+0x8]
   14001e208:	test   eax,0x7000000
   14001e20d:	jne    0x14001e21a
   14001e20f:	bt     eax,0x1e
   14001e213:	jae    0x14001e21a
   14001e215:	mov    rax,QWORD PTR [rcx]
   14001e218:	jmp    0x14001e21c
   14001e21a:	xor    eax,eax
   14001e21c:	test   rax,rax
   14001e21f:	je     0x14001e233
   14001e221:	test   DWORD PTR [rax+0x8],0x7000000
   14001e228:	jne    0x14001e233
   14001e22a:	mov    rax,QWORD PTR [rax+0xc]
   14001e22e:	test   rax,rax
   14001e231:	jne    0x14001e221
   14001e233:	ret    
   14001e234:	int3   
   14001e235:	int3   
   14001e236:	int3   
   14001e237:	int3   
   14001e238:	int3   
   14001e239:	int3   
   14001e23a:	int3   
   14001e23b:	int3   
   14001e23c:	int3   
   14001e23d:	int3   
   14001e23e:	int3   
   14001e23f:	int3   
   14001e240:	rex push rbx
   14001e242:	sub    rsp,0x20
   14001e246:	mov    ebx,r8d
   14001e249:	xor    r8d,r8d
   14001e24c:	call   0x14001ded0
   14001e251:	test   rax,rax
   14001e254:	je     0x14001e263
   14001e256:	mov    rcx,rax
   14001e259:	add    rsp,0x20
   14001e25d:	pop    rbx
   14001e25e:	jmp    0x14001e540
   14001e263:	mov    eax,ebx
   14001e265:	add    rsp,0x20
   14001e269:	pop    rbx
   14001e26a:	ret    
   14001e26b:	int3   
   14001e26c:	int3   
   14001e26d:	int3   
   14001e26e:	int3   
   14001e26f:	int3   
   14001e270:	rex push rbx
   14001e272:	sub    rsp,0x20
   14001e276:	mov    rbx,rcx
   14001e279:	test   rcx,rcx
   14001e27c:	je     0x14001e29c
   14001e27e:	call   QWORD PTR [rip+0x14174]        # 0x1400323f8
   14001e284:	mov    edx,DWORD PTR [rbx+0x8]
   14001e287:	mov    rcx,rax
   14001e28a:	and    edx,0xffffff
   14001e290:	mov    r8,QWORD PTR [rax]
   14001e293:	add    rsp,0x20
   14001e297:	pop    rbx
   14001e298:	rex.WB jmp QWORD PTR [r8+0x18]
   14001e29c:	lea    rax,[rip+0x144fd]        # 0x1400327a0
   14001e2a3:	add    rsp,0x20
   14001e2a7:	pop    rbx
   14001e2a8:	ret    
   14001e2a9:	int3   
   14001e2aa:	int3   
   14001e2ab:	int3   
   14001e2ac:	int3   
   14001e2ad:	int3   
   14001e2ae:	int3   
   14001e2af:	int3   
   14001e2b0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e2b5:	push   rdi
   14001e2b6:	sub    rsp,0x20
   14001e2ba:	mov    rbx,rdx
   14001e2bd:	mov    rdi,rcx
   14001e2c0:	test   rcx,rcx
   14001e2c3:	je     0x14001e317
   14001e2c5:	mov    eax,DWORD PTR [rcx+0x8]
   14001e2c8:	bt     eax,0x1d
   14001e2cc:	jae    0x14001e2e3
   14001e2ce:	and    eax,0xffffff
   14001e2d3:	mov    DWORD PTR [rdx],eax
   14001e2d5:	mov    rax,rdx
   14001e2d8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e2dd:	add    rsp,0x20
   14001e2e1:	pop    rdi
   14001e2e2:	ret    
   14001e2e3:	call   QWORD PTR [rip+0x1410f]        # 0x1400323f8
   14001e2e9:	mov    r8d,DWORD PTR [rdi+0x8]
   14001e2ed:	lea    rdx,[rsp+0x30]
   14001e2f2:	and    r8d,0xffffff
   14001e2f9:	mov    rcx,rax
   14001e2fc:	mov    r9,QWORD PTR [rax]
   14001e2ff:	call   QWORD PTR [r9+0x48]
   14001e303:	mov    eax,DWORD PTR [rsp+0x30]
   14001e307:	mov    DWORD PTR [rbx],eax
   14001e309:	mov    rax,rbx
   14001e30c:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e311:	add    rsp,0x20
   14001e315:	pop    rdi
   14001e316:	ret    
   14001e317:	mov    rax,rbx
   14001e31a:	mov    DWORD PTR [rdx],0xffffff
   14001e320:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e325:	add    rsp,0x20
   14001e329:	pop    rdi
   14001e32a:	ret    
   14001e32b:	int3   
   14001e32c:	int3   
   14001e32d:	int3   
   14001e32e:	int3   
   14001e32f:	int3   
   14001e330:	test   rcx,rcx
   14001e333:	je     0x14001e353
   14001e335:	mov    rax,QWORD PTR [rcx+0xc]
   14001e339:	test   rax,rax
   14001e33c:	je     0x14001e355
   14001e33e:	xchg   ax,ax
   14001e340:	test   DWORD PTR [rax+0x8],0x7000000
   14001e347:	jne    0x14001e355
   14001e349:	mov    rax,QWORD PTR [rax+0xc]
   14001e34d:	test   rax,rax
   14001e350:	jne    0x14001e340
   14001e352:	ret    
   14001e353:	xor    eax,eax
   14001e355:	ret    
   14001e356:	int3   
   14001e357:	int3   
   14001e358:	int3   
   14001e359:	int3   
   14001e35a:	int3   
   14001e35b:	int3   
   14001e35c:	int3   
   14001e35d:	int3   
   14001e35e:	int3   
   14001e35f:	int3   
   14001e360:	mov    QWORD PTR [rsp+0x8],rbx
   14001e365:	push   rdi
   14001e366:	sub    rsp,0x20
   14001e36a:	mov    rbx,r8
   14001e36d:	mov    rdi,r9
   14001e370:	xor    r8d,r8d
   14001e373:	call   0x14001ded0
   14001e378:	test   rax,rax
   14001e37b:	je     0x14001e39a
   14001e37d:	mov    r9,QWORD PTR [rsp+0x50]
   14001e382:	mov    r8,rdi
   14001e385:	mov    rdx,rbx
   14001e388:	mov    rcx,rax
   14001e38b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e390:	add    rsp,0x20
   14001e394:	pop    rdi
   14001e395:	jmp    0x14001e5c0
   14001e39a:	mov    rax,rbx
   14001e39d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e3a2:	add    rsp,0x20
   14001e3a6:	pop    rdi
   14001e3a7:	ret    
   14001e3a8:	int3   
   14001e3a9:	int3   
   14001e3aa:	int3   
   14001e3ab:	int3   
   14001e3ac:	int3   
   14001e3ad:	int3   
   14001e3ae:	int3   
   14001e3af:	int3   
   14001e3b0:	rex push rbx
   14001e3b2:	sub    rsp,0x20
   14001e3b6:	mov    rbx,rcx
   14001e3b9:	mov    ecx,DWORD PTR [rcx+0x8]
   14001e3bc:	mov    eax,ecx
   14001e3be:	shr    eax,0x18
   14001e3c1:	and    eax,0x7
   14001e3c4:	sub    eax,0x1
   14001e3c7:	je     0x14001e412
   14001e3c9:	sub    eax,0x4
   14001e3cc:	je     0x14001e3f1
   14001e3ce:	cmp    eax,0x2
   14001e3d1:	jne    0x14001e438
   14001e3d3:	bt     ecx,0x1c
   14001e3d7:	jae    0x14001e438
   14001e3d9:	mov    rcx,QWORD PTR [rbx]
   14001e3dc:	lea    edx,[rax+0x6]
   14001e3df:	call   0x14002639c
   14001e3e4:	and    DWORD PTR [rbx+0x8],0xa8ffffff
   14001e3eb:	add    rsp,0x20
   14001e3ef:	pop    rbx
   14001e3f0:	ret    
   14001e3f1:	cmp    QWORD PTR [rbx],0x0
   14001e3f5:	je     0x14001e438
   14001e3f7:	bt     ecx,0x1c
   14001e3fb:	jae    0x14001e431
   14001e3fd:	call   QWORD PTR [rip+0x13ff5]        # 0x1400323f8
   14001e403:	mov    rdx,QWORD PTR [rbx]
   14001e406:	mov    rcx,rax
   14001e409:	mov    r8,QWORD PTR [rax]
   14001e40c:	call   QWORD PTR [r8+0x68]
   14001e410:	jmp    0x14001e431
   14001e412:	cmp    QWORD PTR [rbx],0x0
   14001e416:	je     0x14001e438
   14001e418:	bt     ecx,0x1c
   14001e41c:	jae    0x14001e431
   14001e41e:	call   QWORD PTR [rip+0x13fd4]        # 0x1400323f8
   14001e424:	mov    rdx,QWORD PTR [rbx]
   14001e427:	mov    rcx,rax
   14001e42a:	mov    r8,QWORD PTR [rax]
   14001e42d:	call   QWORD PTR [r8+0x58]
   14001e431:	mov    QWORD PTR [rbx],0x0
   14001e438:	and    DWORD PTR [rbx+0x8],0xa8ffffff
   14001e43f:	add    rsp,0x20
   14001e443:	pop    rbx
   14001e444:	ret    
   14001e445:	int3   
   14001e446:	int3   
   14001e447:	int3   
   14001e448:	int3   
   14001e449:	int3   
   14001e44a:	int3   
   14001e44b:	int3   
   14001e44c:	int3   
   14001e44d:	int3   
   14001e44e:	int3   
   14001e44f:	int3   
   14001e450:	mov    r9d,DWORD PTR [rdx+0x8]
   14001e454:	mov    r8,rcx
   14001e457:	test   r9d,0x7000000
   14001e45e:	jne    0x14001e471
   14001e460:	bt     r9d,0x1e
   14001e465:	jae    0x14001e471
   14001e467:	cmp    QWORD PTR [rdx],0x0
   14001e46b:	jne    0x14001e51b
   14001e471:	mov    eax,r9d
   14001e474:	lea    r10,[rip+0xfffffffffffe1b85]        # 0x140000000
   14001e47b:	shr    eax,0x18
   14001e47e:	and    eax,0x7
   14001e481:	mov    ecx,DWORD PTR [r10+rax*4+0x1e51c]
   14001e489:	add    rcx,r10
   14001e48c:	jmp    rcx
   14001e48e:	mov    rcx,r8
   14001e491:	jmp    0x14001e3b0
   14001e496:	bt     r9d,0x1c
   14001e49b:	jae    0x14001e4a0
   14001e49d:	mov    rdx,QWORD PTR [rdx]
   14001e4a0:	mov    rcx,r8
   14001e4a3:	jmp    0x14001e890
   14001e4a8:	mov    edx,DWORD PTR [rdx]
   14001e4aa:	mov    rcx,r8
   14001e4ad:	jmp    0x14001e820
   14001e4b2:	movss  xmm1,DWORD PTR [rdx]
   14001e4b6:	mov    rcx,r8
   14001e4b9:	jmp    0x14001e7e0
   14001e4be:	mov    rdx,QWORD PTR [rdx]
   14001e4c1:	mov    rcx,r8
   14001e4c4:	jmp    0x14001e850
   14001e4c9:	bt     r9d,0x1c
   14001e4ce:	jae    0x14001e4d3
   14001e4d0:	mov    rdx,QWORD PTR [rdx]
   14001e4d3:	mov    rcx,r8
   14001e4d6:	jmp    0x14001ea30
   14001e4db:	bt     r9d,0x1c
   14001e4e0:	jae    0x14001e4e5
   14001e4e2:	mov    rdx,QWORD PTR [rdx]
   14001e4e5:	mov    rdx,QWORD PTR [rdx]
   14001e4e8:	mov    rcx,r8
   14001e4eb:	jmp    0x14001e9f0
   14001e4f0:	movzx  eax,BYTE PTR [rdx]
   14001e4f3:	mov    rcx,r8
   14001e4f6:	mov    BYTE PTR [rsp+0x10],al
   14001e4fa:	movzx  eax,BYTE PTR [rdx+0x1]
   14001e4fe:	mov    BYTE PTR [rsp+0x11],al
   14001e502:	movzx  eax,BYTE PTR [rdx+0x2]
   14001e506:	mov    BYTE PTR [rsp+0x12],al
   14001e50a:	movzx  eax,BYTE PTR [rdx+0x3]
   14001e50e:	mov    BYTE PTR [rsp+0x13],al
   14001e512:	mov    edx,DWORD PTR [rsp+0x10]
   14001e516:	jmp    0x14001e790
   14001e51b:	ret    
   14001e51c:	mov    fs,esp
   14001e51e:	add    DWORD PTR [rax],eax
   14001e520:	xchg   esi,eax
   14001e521:	in     al,0x1
   14001e523:	add    BYTE PTR [rax-0x4dfffe1c],ch
   14001e529:	in     al,0x1
   14001e52b:	add    BYTE PTR [rsi-0x36fffe1c],bh
   14001e531:	in     al,0x1
   14001e533:	add    al,dh
   14001e535:	in     al,0x1
   14001e537:	add    bl,bl
   14001e539:	in     al,0x1
   14001e53b:	add    ah,cl
   14001e53d:	int3   
   14001e53e:	int3   
   14001e53f:	int3   
   14001e540:	mov    r8d,DWORD PTR [rcx+0x8]
   14001e544:	lea    r9,[rip+0xfffffffffffe1ab5]        # 0x140000000
   14001e54b:	mov    eax,r8d
   14001e54e:	shr    eax,0x18
   14001e551:	and    eax,0x7
   14001e554:	mov    edx,DWORD PTR [r9+rax*4+0x1e594]
   14001e55c:	add    rdx,r9
   14001e55f:	jmp    rdx
   14001e561:	mov    eax,DWORD PTR [rcx]
   14001e563:	ret    
   14001e564:	bt     r8d,0x1c
   14001e569:	jae    0x14001e56e
   14001e56b:	mov    rcx,QWORD PTR [rcx]
   14001e56e:	rex.W jmp QWORD PTR [rip+0x13d23]        # 0x140032298
   14001e575:	bt     r8d,0x1c
   14001e57a:	jae    0x14001e57f
   14001e57c:	mov    rcx,QWORD PTR [rcx]
   14001e57f:	xor    edx,edx
   14001e581:	lea    r8d,[rdx+0xa]
   14001e585:	rex.W jmp QWORD PTR [rip+0x13e84]        # 0x140032410
   14001e58c:	cvttss2si eax,DWORD PTR [rcx]
   14001e590:	ret    
   14001e591:	xor    eax,eax
   14001e593:	ret    
   14001e594:	(bad)  
   14001e595:	in     eax,0x1
   14001e597:	add    BYTE PTR [rbp+riz*8+0x1],ah
   14001e59b:	add    BYTE PTR [rcx-0x1b],ah
   14001e59e:	add    DWORD PTR [rax],eax
   14001e5a0:	mov    ebp,fs
   14001e5a2:	add    DWORD PTR [rax],eax
   14001e5a4:	(bad)  
   14001e5a5:	in     eax,0x1
   14001e5a7:	add    BYTE PTR [rbp-0x1b],dh
   14001e5aa:	add    DWORD PTR [rax],eax
   14001e5ac:	(bad)  
   14001e5ad:	in     eax,0x1
   14001e5af:	add    BYTE PTR [rcx-0x33fffe1b],dl
   14001e5b5:	int3   
   14001e5b6:	int3   
   14001e5b7:	int3   
   14001e5b8:	int3   
   14001e5b9:	int3   
   14001e5ba:	int3   
   14001e5bb:	int3   
   14001e5bc:	int3   
   14001e5bd:	int3   
   14001e5be:	int3   
   14001e5bf:	int3   
   14001e5c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e5c5:	mov    QWORD PTR [rsp+0x10],rbp
   14001e5ca:	mov    QWORD PTR [rsp+0x18],rsi
   14001e5cf:	push   rdi
   14001e5d0:	sub    rsp,0x820
   14001e5d7:	mov    rbx,rcx
   14001e5da:	mov    rsi,rdx
   14001e5dd:	mov    ecx,DWORD PTR [rcx+0x8]
   14001e5e0:	lea    rdx,[rip+0xfffffffffffe1a19]        # 0x140000000
   14001e5e7:	mov    eax,ecx
   14001e5e9:	mov    rbp,r9
   14001e5ec:	shr    eax,0x18
   14001e5ef:	mov    rdi,r8
   14001e5f2:	and    eax,0x7
   14001e5f5:	mov    r10d,DWORD PTR [rdx+rax*4+0x1e74c]
   14001e5fd:	add    r10,rdx
   14001e600:	jmp    r10
   14001e603:	mov    rax,rsi
   14001e606:	jmp    0x14001e616
   14001e608:	test   ecx,0x10000000
   14001e60e:	je     0x14001e613
   14001e610:	mov    rbx,QWORD PTR [rbx]
   14001e613:	mov    rax,rbx
   14001e616:	lea    r11,[rsp+0x820]
   14001e61e:	mov    rbx,QWORD PTR [r11+0x10]
   14001e622:	mov    rbp,QWORD PTR [r11+0x18]
   14001e626:	mov    rsi,QWORD PTR [r11+0x20]
   14001e62a:	mov    rsp,r11
   14001e62d:	pop    rdi
   14001e62e:	ret    
   14001e62f:	mov    r9d,DWORD PTR [rbx]
   14001e632:	lea    r8,[rip+0x18933]        # 0x140036f6c
   14001e639:	mov    edx,0x800
   14001e63e:	lea    rcx,[rsp+0x20]
   14001e643:	call   QWORD PTR [rip+0x13f27]        # 0x140032570
   14001e649:	test   rdi,rdi
   14001e64c:	je     0x14001e66d
   14001e64e:	cmp    ebp,eax
   14001e650:	jle    0x14001e66d
   14001e652:	add    eax,0x1
   14001e655:	jns    0x14001e658
   14001e657:	int3   
   14001e658:	movsxd r8,eax
   14001e65b:	lea    rdx,[rsp+0x20]
   14001e660:	mov    rcx,rdi
   14001e663:	call   0x140026f70
   14001e668:	mov    rax,rdi
   14001e66b:	jmp    0x14001e616
   14001e66d:	lea    rdx,[rsp+0x20]
   14001e672:	mov    rcx,rbx
   14001e675:	call   0x14001e890
   14001e67a:	test   DWORD PTR [rbx+0x8],0x10000000
   14001e681:	jmp    0x14001e60e
   14001e683:	movss  xmm3,DWORD PTR [rbx]
   14001e687:	lea    r8,[rip+0x17d8e]        # 0x14003641c
   14001e68e:	cvtps2pd xmm3,xmm3
   14001e691:	mov    edx,0x800
   14001e696:	lea    rcx,[rsp+0x20]
   14001e69b:	movq   r9,xmm3
   14001e6a0:	call   QWORD PTR [rip+0x13eca]        # 0x140032570
   14001e6a6:	jmp    0x14001e649
   14001e6a8:	mov    r9,QWORD PTR [rbx]
   14001e6ab:	lea    r8,[rip+0x14102]        # 0x1400327b4
   14001e6b2:	mov    edx,0x800
   14001e6b7:	lea    rcx,[rsp+0x20]
   14001e6bc:	call   QWORD PTR [rip+0x13eae]        # 0x140032570
   14001e6c2:	jmp    0x14001e649
   14001e6c4:	bt     ecx,0x1c
   14001e6c8:	jae    0x14001e6cf
   14001e6ca:	mov    rcx,QWORD PTR [rbx]
   14001e6cd:	jmp    0x14001e6d2
   14001e6cf:	mov    rcx,rbx
   14001e6d2:	mov    r9d,0x4
   14001e6d8:	lea    rdx,[rsp+0x20]
   14001e6dd:	mov    r8d,0x800
   14001e6e3:	call   QWORD PTR [rip+0x13b87]        # 0x140032270
   14001e6e9:	test   eax,eax
   14001e6eb:	je     0x14001e603
   14001e6f1:	test   rdi,rdi
   14001e6f4:	je     0x14001e66d
   14001e6fa:	lea    rcx,[rsp+0x20]
   14001e6ff:	or     rax,0xffffffffffffffff
   14001e703:	inc    rax
   14001e706:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001e70a:	jne    0x14001e703
   14001e70c:	cmp    ebp,eax
   14001e70e:	jle    0x14001e66d
   14001e714:	lea    ecx,[rax+0x1]
   14001e717:	test   ecx,ecx
   14001e719:	jns    0x14001e71c
   14001e71b:	int3   
   14001e71c:	movsxd r8,ecx
   14001e71f:	lea    rdx,[rsp+0x20]
   14001e724:	mov    rcx,rdi
   14001e727:	call   0x140026f70
   14001e72c:	mov    rax,rdi
   14001e72f:	jmp    0x14001e616
   14001e734:	bt     ecx,0x1c
   14001e738:	jae    0x14001e6a8
   14001e73e:	mov    rax,QWORD PTR [rbx]
   14001e741:	mov    r9,QWORD PTR [rax]
   14001e744:	jmp    0x14001e6ab
   14001e749:	nop    DWORD PTR [rax]
   14001e74c:	add    esp,esi
   14001e74e:	add    DWORD PTR [rax],eax
   14001e750:	or     dh,ah
   14001e752:	add    DWORD PTR [rax],eax
   14001e754:	(bad)  
   14001e755:	out    0x1,al
   14001e757:	add    BYTE PTR [rbx-0x57fffe1a],al
   14001e75d:	out    0x1,al
   14001e75f:	add    ah,al
   14001e761:	out    0x1,al
   14001e763:	add    BYTE PTR [rbx],al
   14001e765:	out    0x1,al
   14001e767:	add    BYTE PTR [rdi+riz*8],dh
   14001e76a:	add    DWORD PTR [rax],eax
   14001e76c:	int3   
   14001e76d:	int3   
   14001e76e:	int3   
   14001e76f:	int3   
   14001e770:	mov    eax,DWORD PTR [rcx+0x8]
   14001e773:	test   eax,0x7000000
   14001e778:	jne    0x14001e784
   14001e77a:	bt     eax,0x1e
   14001e77e:	jae    0x14001e784
   14001e780:	mov    rax,QWORD PTR [rcx]
   14001e783:	ret    
   14001e784:	xor    eax,eax
   14001e786:	ret    
   14001e787:	int3   
   14001e788:	int3   
   14001e789:	int3   
   14001e78a:	int3   
   14001e78b:	int3   
   14001e78c:	int3   
   14001e78d:	int3   
   14001e78e:	int3   
   14001e78f:	int3   
   14001e790:	mov    DWORD PTR [rsp+0x10],edx
   14001e794:	push   rbx
   14001e795:	sub    rsp,0x20
   14001e799:	mov    rbx,rcx
   14001e79c:	call   0x14001e3b0
   14001e7a1:	and    DWORD PTR [rbx+0x8],0xfeffffff
   14001e7a8:	or     DWORD PTR [rbx+0x8],0x6000000
   14001e7af:	movzx  eax,BYTE PTR [rsp+0x38]
   14001e7b4:	mov    BYTE PTR [rbx],al
   14001e7b6:	movzx  eax,BYTE PTR [rsp+0x39]
   14001e7bb:	mov    BYTE PTR [rbx+0x1],al
   14001e7be:	movzx  eax,BYTE PTR [rsp+0x3a]
   14001e7c3:	mov    BYTE PTR [rbx+0x2],al
   14001e7c6:	movzx  eax,BYTE PTR [rsp+0x3b]
   14001e7cb:	mov    BYTE PTR [rbx+0x3],al
   14001e7ce:	add    rsp,0x20
   14001e7d2:	pop    rbx
   14001e7d3:	ret    
   14001e7d4:	int3   
   14001e7d5:	int3   
   14001e7d6:	int3   
   14001e7d7:	int3   
   14001e7d8:	int3   
   14001e7d9:	int3   
   14001e7da:	int3   
   14001e7db:	int3   
   14001e7dc:	int3   
   14001e7dd:	int3   
   14001e7de:	int3   
   14001e7df:	int3   
   14001e7e0:	rex push rbx
   14001e7e2:	sub    rsp,0x30
   14001e7e6:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14001e7eb:	mov    rbx,rcx
   14001e7ee:	movaps xmm6,xmm1
   14001e7f1:	call   0x14001e3b0
   14001e7f6:	and    DWORD PTR [rbx+0x8],0xfbffffff
   14001e7fd:	or     DWORD PTR [rbx+0x8],0x3000000
   14001e804:	movss  DWORD PTR [rbx],xmm6
   14001e808:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14001e80d:	add    rsp,0x30
   14001e811:	pop    rbx
   14001e812:	ret    
   14001e813:	int3   
   14001e814:	int3   
   14001e815:	int3   
   14001e816:	int3   
   14001e817:	int3   
   14001e818:	int3   
   14001e819:	int3   
   14001e81a:	int3   
   14001e81b:	int3   
   14001e81c:	int3   
   14001e81d:	int3   
   14001e81e:	int3   
   14001e81f:	int3   
   14001e820:	mov    QWORD PTR [rsp+0x8],rbx
   14001e825:	push   rdi
   14001e826:	sub    rsp,0x20
   14001e82a:	mov    ebx,edx
   14001e82c:	mov    rdi,rcx
   14001e82f:	call   0x14001e3b0
   14001e834:	and    DWORD PTR [rdi+0x8],0xfaffffff
   14001e83b:	or     DWORD PTR [rdi+0x8],0x2000000
   14001e842:	mov    DWORD PTR [rdi],ebx
   14001e844:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e849:	add    rsp,0x20
   14001e84d:	pop    rdi
   14001e84e:	ret    
   14001e84f:	int3   
   14001e850:	mov    QWORD PTR [rsp+0x8],rbx
   14001e855:	push   rdi
   14001e856:	sub    rsp,0x20
   14001e85a:	mov    rbx,rdx
   14001e85d:	mov    rdi,rcx
   14001e860:	call   0x14001e3b0
   14001e865:	and    DWORD PTR [rdi+0x8],0xfcffffff
   14001e86c:	or     DWORD PTR [rdi+0x8],0x4000000
   14001e873:	mov    QWORD PTR [rdi],rbx
   14001e876:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e87b:	add    rsp,0x20
   14001e87f:	pop    rdi
   14001e880:	ret    
   14001e881:	int3   
   14001e882:	int3   
   14001e883:	int3   
   14001e884:	int3   
   14001e885:	int3   
   14001e886:	int3   
   14001e887:	int3   
   14001e888:	int3   
   14001e889:	int3   
   14001e88a:	int3   
   14001e88b:	int3   
   14001e88c:	int3   
   14001e88d:	int3   
   14001e88e:	int3   
   14001e88f:	int3   
   14001e890:	mov    QWORD PTR [rsp+0x8],rbx
   14001e895:	mov    QWORD PTR [rsp+0x10],rbp
   14001e89a:	mov    QWORD PTR [rsp+0x18],rsi
   14001e89f:	mov    QWORD PTR [rsp+0x20],rdi
   14001e8a4:	push   r14
   14001e8a6:	sub    rsp,0x20
   14001e8aa:	test   rdx,rdx
   14001e8ad:	lea    rdi,[rip+0x13eec]        # 0x1400327a0
   14001e8b4:	mov    rbx,rcx
   14001e8b7:	cmovne rdi,rdx
   14001e8bb:	or     rax,0xffffffffffffffff
   14001e8bf:	nop
   14001e8c0:	cmp    BYTE PTR [rdi+rax*1+0x1],0x0
   14001e8c5:	lea    rax,[rax+0x1]
   14001e8c9:	jne    0x14001e8c0
   14001e8cb:	lea    esi,[rax+0x1]
   14001e8ce:	xor    ebp,ebp
   14001e8d0:	mov    rax,QWORD PTR [rcx]
   14001e8d3:	mov    r14,rdi
   14001e8d6:	test   rax,rax
   14001e8d9:	je     0x14001e90f
   14001e8db:	cmp    rax,rdi
   14001e8de:	jne    0x14001e90f
   14001e8e0:	mov    rax,QWORD PTR [rip+0x13aa9]        # 0x140032390
   14001e8e7:	movsxd r14,esi
   14001e8ea:	mov    rdx,r14
   14001e8ed:	mov    rcx,QWORD PTR [rax]
   14001e8f0:	mov    rax,QWORD PTR [rcx]
   14001e8f3:	call   QWORD PTR [rax+0x8]
   14001e8f6:	mov    rbp,rax
   14001e8f9:	test   esi,esi
   14001e8fb:	jns    0x14001e8fe
   14001e8fd:	int3   
   14001e8fe:	mov    r8,r14
   14001e901:	mov    rdx,rdi
   14001e904:	mov    rcx,rbp
   14001e907:	call   0x140026f70
   14001e90c:	mov    r14,rbp
   14001e90f:	mov    rcx,rbx
   14001e912:	call   0x14001e3b0
   14001e917:	cmp    esi,0x8
   14001e91a:	ja     0x14001e938
   14001e91c:	test   esi,esi
   14001e91e:	jns    0x14001e921
   14001e920:	int3   
   14001e921:	movsxd r8,esi
   14001e924:	mov    rdx,r14
   14001e927:	mov    rcx,rbx
   14001e92a:	call   0x140026f70
   14001e92f:	and    DWORD PTR [rbx+0x8],0xefffffff
   14001e936:	jmp    0x14001e955
   14001e938:	call   QWORD PTR [rip+0x13aba]        # 0x1400323f8
   14001e93e:	mov    rdx,r14
   14001e941:	mov    rcx,rax
   14001e944:	mov    r8,QWORD PTR [rax]
   14001e947:	call   QWORD PTR [r8+0x50]
   14001e94b:	or     DWORD PTR [rbx+0x8],0x10000000
   14001e952:	mov    QWORD PTR [rbx],rax
   14001e955:	and    DWORD PTR [rbx+0x8],0xf9ffffff
   14001e95c:	or     DWORD PTR [rbx+0x8],0x1000000
   14001e963:	test   rbp,rbp
   14001e966:	je     0x14001e97b
   14001e968:	mov    rax,QWORD PTR [rip+0x13a21]        # 0x140032390
   14001e96f:	mov    rdx,rbp
   14001e972:	mov    rcx,QWORD PTR [rax]
   14001e975:	mov    rax,QWORD PTR [rcx]
   14001e978:	call   QWORD PTR [rax+0x28]
   14001e97b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e980:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e985:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e98a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001e98f:	add    rsp,0x20
   14001e993:	pop    r14
   14001e995:	ret    
   14001e996:	int3   
   14001e997:	int3   
   14001e998:	int3   
   14001e999:	int3   
   14001e99a:	int3   
   14001e99b:	int3   
   14001e99c:	int3   
   14001e99d:	int3   
   14001e99e:	int3   
   14001e99f:	int3   
   14001e9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9a5:	push   rdi
   14001e9a6:	sub    rsp,0x20
   14001e9aa:	mov    rdi,rdx
   14001e9ad:	mov    rbx,rcx
   14001e9b0:	test   rdx,rdx
   14001e9b3:	jne    0x14001e9c7
   14001e9b5:	and    DWORD PTR [rcx+0x8],0xbfffffff
   14001e9bc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e9c1:	add    rsp,0x20
   14001e9c5:	pop    rdi
   14001e9c6:	ret    
   14001e9c7:	test   DWORD PTR [rcx+0x8],0x7000000
   14001e9ce:	je     0x14001e9d5
   14001e9d0:	call   0x14001e3b0
   14001e9d5:	or     DWORD PTR [rbx+0x8],0x40000000
   14001e9dc:	mov    QWORD PTR [rbx],rdi
   14001e9df:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e9e4:	add    rsp,0x20
   14001e9e8:	pop    rdi
   14001e9e9:	ret    
   14001e9ea:	int3   
   14001e9eb:	int3   
   14001e9ec:	int3   
   14001e9ed:	int3   
   14001e9ee:	int3   
   14001e9ef:	int3   
   14001e9f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9f5:	push   rdi
   14001e9f6:	sub    rsp,0x20
   14001e9fa:	mov    rbx,rdx
   14001e9fd:	mov    rdi,rcx
   14001ea00:	call   0x14001e3b0
   14001ea05:	and    DWORD PTR [rdi+0x8],0xefffffff
   14001ea0c:	or     DWORD PTR [rdi+0x8],0x7000000
   14001ea13:	mov    QWORD PTR [rdi],rbx
   14001ea16:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea1b:	add    rsp,0x20
   14001ea1f:	pop    rdi
   14001ea20:	ret    
   14001ea21:	int3   
   14001ea22:	int3   
   14001ea23:	int3   
   14001ea24:	int3   
   14001ea25:	int3   
   14001ea26:	int3   
   14001ea27:	int3   
   14001ea28:	int3   
   14001ea29:	int3   
   14001ea2a:	int3   
   14001ea2b:	int3   
   14001ea2c:	int3   
   14001ea2d:	int3   
   14001ea2e:	int3   
   14001ea2f:	int3   
   14001ea30:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea35:	mov    QWORD PTR [rsp+0x10],rbp
   14001ea3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ea3f:	mov    QWORD PTR [rsp+0x20],rdi
   14001ea44:	push   r14
   14001ea46:	sub    rsp,0x20
   14001ea4a:	test   rdx,rdx
   14001ea4d:	lea    rbp,[rip+0x19168]        # 0x140037bbc
   14001ea54:	mov    rsi,rcx
   14001ea57:	cmovne rbp,rdx
   14001ea5b:	or     rdi,0xffffffffffffffff
   14001ea5f:	nop
   14001ea60:	inc    rdi
   14001ea63:	cmp    WORD PTR [rbp+rdi*2+0x0],0x0
   14001ea69:	jne    0x14001ea60
   14001ea6b:	mov    rax,QWORD PTR [rcx]
   14001ea6e:	inc    edi
   14001ea70:	xor    r14d,r14d
   14001ea73:	mov    rbx,rbp
   14001ea76:	test   rax,rax
   14001ea79:	je     0x14001eaad
   14001ea7b:	cmp    rax,rbp
   14001ea7e:	jne    0x14001eaad
   14001ea80:	mov    rax,QWORD PTR [rip+0x13909]        # 0x140032390
   14001ea87:	movsxd rbx,edi
   14001ea8a:	add    rbx,rbx
   14001ea8d:	mov    rdx,rbx
   14001ea90:	mov    rcx,QWORD PTR [rax]
   14001ea93:	mov    rax,QWORD PTR [rcx]
   14001ea96:	call   QWORD PTR [rax+0x8]
   14001ea99:	mov    r8,rbx
   14001ea9c:	mov    rdx,rbp
   14001ea9f:	mov    rcx,rax
   14001eaa2:	mov    r14,rax
   14001eaa5:	call   0x140026f70
   14001eaaa:	mov    rbx,r14
   14001eaad:	mov    rcx,rsi
   14001eab0:	call   0x14001e3b0
   14001eab5:	movsxd r8,edi
   14001eab8:	add    r8,r8
   14001eabb:	cmp    r8,0x8
   14001eabf:	ja     0x14001ead5
   14001eac1:	mov    rdx,rbx
   14001eac4:	mov    rcx,rsi
   14001eac7:	call   0x140026f70
   14001eacc:	and    DWORD PTR [rsi+0x8],0xefffffff
   14001ead3:	jmp    0x14001eaf2
   14001ead5:	call   QWORD PTR [rip+0x1391d]        # 0x1400323f8
   14001eadb:	mov    rdx,rbx
   14001eade:	mov    rcx,rax
   14001eae1:	mov    r8,QWORD PTR [rax]
   14001eae4:	call   QWORD PTR [r8+0x60]
   14001eae8:	or     DWORD PTR [rsi+0x8],0x10000000
   14001eaef:	mov    QWORD PTR [rsi],rax
   14001eaf2:	and    DWORD PTR [rsi+0x8],0xfdffffff
   14001eaf9:	or     DWORD PTR [rsi+0x8],0x5000000
   14001eb00:	test   r14,r14
   14001eb03:	je     0x14001eb18
   14001eb05:	mov    rax,QWORD PTR [rip+0x13884]        # 0x140032390
   14001eb0c:	mov    rdx,r14
   14001eb0f:	mov    rcx,QWORD PTR [rax]
   14001eb12:	mov    rax,QWORD PTR [rcx]
   14001eb15:	call   QWORD PTR [rax+0x28]
   14001eb18:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eb1d:	mov    rbp,QWORD PTR [rsp+0x38]
   14001eb22:	mov    rsi,QWORD PTR [rsp+0x40]
   14001eb27:	mov    rdi,QWORD PTR [rsp+0x48]
   14001eb2c:	add    rsp,0x20
   14001eb30:	pop    r14
   14001eb32:	ret    
   14001eb33:	int3   
   14001eb34:	int3   
   14001eb35:	int3   
   14001eb36:	int3   
   14001eb37:	int3   
   14001eb38:	int3   
   14001eb39:	int3   
   14001eb3a:	int3   
   14001eb3b:	int3   
   14001eb3c:	int3   
   14001eb3d:	int3   
   14001eb3e:	int3   
   14001eb3f:	int3   
   14001eb40:	mov    QWORD PTR [rsp+0x18],rbp
   14001eb45:	push   rsi
   14001eb46:	push   r14
   14001eb48:	push   r15
   14001eb4a:	sub    rsp,0x80
   14001eb51:	mov    rbp,r9
   14001eb54:	mov    rsi,r8
   14001eb57:	mov    r14,rdx
   14001eb5a:	mov    r15,rcx
   14001eb5d:	test   r8,r8
   14001eb60:	jne    0x14001eb69
   14001eb62:	mov    al,0x1
   14001eb64:	jmp    0x14001ec96
   14001eb69:	mov    QWORD PTR [rsp+0xa0],rbx
   14001eb71:	or     rbx,0xffffffffffffffff
   14001eb75:	inc    rbx
   14001eb78:	cmp    BYTE PTR [r8+rbx*1],0x0
   14001eb7d:	jne    0x14001eb75
   14001eb7f:	cmp    ebx,0x3
   14001eb82:	jle    0x14001eb9f
   14001eb84:	cmp    BYTE PTR [r8],0xef
   14001eb88:	jne    0x14001eb9f
   14001eb8a:	cmp    BYTE PTR [r8+0x1],0xbb
   14001eb8f:	jne    0x14001eb9f
   14001eb91:	cmp    BYTE PTR [r8+0x2],0xbf
   14001eb96:	jne    0x14001eb9f
   14001eb98:	add    rsi,0x3
   14001eb9c:	sub    ebx,0x3
   14001eb9f:	mov    r9d,0x9
   14001eba5:	lea    rcx,[rsp+0x40]
   14001ebaa:	mov    r8d,ebx
   14001ebad:	mov    rdx,rsi
   14001ebb0:	call   0x140020940
   14001ebb5:	cmp    ebx,0x2
   14001ebb8:	jle    0x14001ec29
   14001ebba:	cmp    BYTE PTR [rsi],0xff
   14001ebbd:	jne    0x14001ec29
   14001ebbf:	cmp    BYTE PTR [rsi+0x1],0xfe
   14001ebc3:	jne    0x14001ec29
   14001ebc5:	mov    r9d,0x4
   14001ebcb:	mov    QWORD PTR [rsp+0xa8],rdi
   14001ebd3:	xor    r8d,r8d
   14001ebd6:	lea    rcx,[rsi+0x2]
   14001ebda:	xor    edx,edx
   14001ebdc:	call   QWORD PTR [rip+0x1368e]        # 0x140032270
   14001ebe2:	movsxd rdi,eax
   14001ebe5:	mov    rcx,rdi
   14001ebe8:	call   0x140007bf0
   14001ebed:	mov    r9d,0x4
   14001ebf3:	lea    rcx,[rsi+0x2]
   14001ebf7:	mov    r8d,edi
   14001ebfa:	mov    rdx,rax
   14001ebfd:	mov    rbx,rax
   14001ec00:	call   QWORD PTR [rip+0x1366a]        # 0x140032270
   14001ec06:	mov    r9d,edi
   14001ec09:	mov    DWORD PTR [rsp+0x20],0x9
   14001ec11:	mov    r8d,edi
   14001ec14:	lea    rcx,[rsp+0x40]
   14001ec19:	mov    rdx,rbx
   14001ec1c:	call   0x140020a50
   14001ec21:	mov    rdi,QWORD PTR [rsp+0xa8]
   14001ec29:	mov    rax,QWORD PTR [rsp+0xd0]
   14001ec31:	lea    r8,[rsp+0x40]
   14001ec36:	mov    QWORD PTR [rsp+0x30],rax
   14001ec3b:	mov    r9,rbp
   14001ec3e:	mov    rax,QWORD PTR [rsp+0xc8]
   14001ec46:	mov    rdx,r14
   14001ec49:	mov    QWORD PTR [rsp+0x28],rax
   14001ec4e:	mov    rcx,r15
   14001ec51:	mov    rax,QWORD PTR [rsp+0xc0]
   14001ec59:	mov    QWORD PTR [rsp+0x20],rax
   14001ec5e:	call   0x14001ecb0
   14001ec63:	test   DWORD PTR [rsp+0x4c],0xc0000000
   14001ec6b:	movzx  ebx,al
   14001ec6e:	jne    0x14001ec8b
   14001ec70:	mov    rdx,QWORD PTR [rsp+0x40]
   14001ec75:	test   rdx,rdx
   14001ec78:	je     0x14001ec8b
   14001ec7a:	mov    rcx,QWORD PTR [rip+0x1370f]        # 0x140032390
   14001ec81:	mov    rcx,QWORD PTR [rcx]
   14001ec84:	mov    r8,QWORD PTR [rcx]
   14001ec87:	call   QWORD PTR [r8+0x28]
   14001ec8b:	movzx  eax,bl
   14001ec8e:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001ec96:	mov    rbp,QWORD PTR [rsp+0xb0]
   14001ec9e:	add    rsp,0x80
   14001eca5:	pop    r15
   14001eca7:	pop    r14
   14001eca9:	pop    rsi
   14001ecaa:	ret    
   14001ecab:	int3   
   14001ecac:	int3   
   14001ecad:	int3   
   14001ecae:	int3   
   14001ecaf:	int3   
   14001ecb0:	mov    QWORD PTR [rsp+0x20],r9
   14001ecb5:	mov    QWORD PTR [rsp+0x18],r8
   14001ecba:	push   rbp
   14001ecbb:	push   rbx
   14001ecbc:	push   rsi
   14001ecbd:	push   rdi
   14001ecbe:	push   r12
   14001ecc0:	push   r13
   14001ecc2:	push   r14
   14001ecc4:	push   r15
   14001ecc6:	lea    rbp,[rsp-0x80e8]
   14001ecce:	mov    eax,0x81e8
   14001ecd3:	call   0x1400263c0
   14001ecd8:	sub    rsp,rax
   14001ecdb:	xor    r15d,r15d
   14001ecde:	lea    rax,[rbp-0x70]
   14001ece2:	mov    r12,rdx
   14001ece5:	mov    DWORD PTR [rsp+0x60],r15d
   14001ecea:	mov    r13,rcx
   14001eced:	mov    QWORD PTR [rsp+0x68],r15
   14001ecf2:	mov    rbx,rcx
   14001ecf5:	mov    QWORD PTR [rsp+0x70],r15
   14001ecfa:	lea    ecx,[r15+0x4]
   14001ecfe:	mov    DWORD PTR [rsp+0x40],r15d
   14001ed03:	mov    rdi,r8
   14001ed06:	mov    QWORD PTR [rsp+0x48],r15
   14001ed0b:	mov    r14d,r15d
   14001ed0e:	mov    QWORD PTR [rsp+0x50],r15
   14001ed13:	movabs rdx,0xffffff00ffffff
   14001ed1d:	nop    DWORD PTR [rax]
   14001ed20:	mov    QWORD PTR [rax],rdx
   14001ed23:	mov    QWORD PTR [rax+0x8],rdx
   14001ed27:	mov    QWORD PTR [rax+0x10],rdx
   14001ed2b:	lea    rax,[rax+0x40]
   14001ed2f:	mov    QWORD PTR [rax-0x28],rdx
   14001ed33:	mov    QWORD PTR [rax-0x20],rdx
   14001ed37:	mov    QWORD PTR [rax-0x18],rdx
   14001ed3b:	mov    QWORD PTR [rax-0x10],rdx
   14001ed3f:	mov    QWORD PTR [rax-0x8],rdx
   14001ed43:	sub    rcx,0x1
   14001ed47:	jne    0x14001ed20
   14001ed49:	lea    rax,[rip+0x18150]        # 0x140036ea0
   14001ed50:	mov    QWORD PTR [rbp+0x98],r15
   14001ed57:	mov    QWORD PTR [rbp+0x90],rax
   14001ed5e:	lea    rcx,[rbp+0xa1]
   14001ed65:	lea    rax,[rip+0x18e64]        # 0x140037bd0
   14001ed6c:	mov    BYTE PTR [rbp+0xa0],r14b
   14001ed73:	mov    QWORD PTR [rbp+0xa1],rax
   14001ed7a:	mov    rax,QWORD PTR [rbp+0x8160]
   14001ed81:	test   rax,rax
   14001ed84:	cmovne rcx,rax
   14001ed88:	mov    QWORD PTR [rbp+0xb0],rcx
   14001ed8f:	mov    rax,QWORD PTR [rcx]
   14001ed92:	call   QWORD PTR [rax]
   14001ed94:	lea    rax,[rbp-0x70]
   14001ed98:	mov    DWORD PTR [rbp+0x80d8],r15d
   14001ed9f:	mov    DWORD PTR [rbp+0x9c],r15d
   14001eda6:	mov    r15,QWORD PTR [rbp+0x8158]
   14001edad:	mov    QWORD PTR [rbp+0xc0],rax
   14001edb4:	mov    QWORD PTR [rbp+0xc8],r13
   14001edbb:	mov    QWORD PTR [rbp+0xd0],rdi
   14001edc2:	mov    WORD PTR [rbp+0x80dc],r14w
   14001edca:	mov    BYTE PTR [rbp+0x80de],r14b
   14001edd1:	mov    BYTE PTR [rbp+0xd8],r14b
   14001edd8:	mov    QWORD PTR [rbp+0x90],r12
   14001eddf:	nop
   14001ede0:	lea    r8,[rbp+0x8130]
   14001ede7:	mov    sil,0x1
   14001edea:	lea    rdx,[rbp+0x8160]
   14001edf1:	lea    rcx,[rbp+0xc0]
   14001edf8:	call   0x14001fa00
   14001edfd:	mov    rdi,rax
   14001ee00:	mov    rax,QWORD PTR [rbp+0x8140]
   14001ee07:	cmp    BYTE PTR [rax+0x18],0x0
   14001ee0b:	jne    0x14001f11b
   14001ee11:	test   rdi,rdi
   14001ee14:	je     0x14001f11b
   14001ee1a:	cmp    BYTE PTR [rbp+0x8160],0x0
   14001ee21:	jne    0x14001ee2c
   14001ee23:	cmp    BYTE PTR [rdi],0x0
   14001ee26:	je     0x14001f11b
   14001ee2c:	lea    rdx,[rip+0x18e75]        # 0x140037ca8
   14001ee33:	mov    rcx,rdi
   14001ee36:	call   QWORD PTR [rip+0x13724]        # 0x140032560
   14001ee3c:	test   eax,eax
   14001ee3e:	jne    0x14001eeae
   14001ee40:	lea    r8,[rbp+0x8130]
   14001ee47:	lea    rdx,[rbp+0x8160]
   14001ee4e:	lea    rcx,[rbp+0xc0]
   14001ee55:	call   0x14001fa00
   14001ee5a:	test   rax,rax
   14001ee5d:	je     0x14001ee99
   14001ee5f:	cmp    BYTE PTR [rax],0x0
   14001ee62:	je     0x14001ee99
   14001ee64:	lea    rcx,[rsp+0x60]
   14001ee69:	mov    r9,QWORD PTR [rbp+0x8148]
   14001ee70:	mov    r8,rax
   14001ee73:	mov    QWORD PTR [rsp+0x30],r15
   14001ee78:	mov    rdx,r12
   14001ee7b:	mov    QWORD PTR [rsp+0x28],rcx
   14001ee80:	mov    rcx,QWORD PTR [rbp+0x8150]
   14001ee87:	mov    QWORD PTR [rsp+0x20],rcx
   14001ee8c:	mov    rcx,r13
   14001ee8f:	call   0x14001f750
   14001ee94:	jmp    0x14001f10a
   14001ee99:	lea    rdx,[rip+0x18e18]        # 0x140037cb8
   14001eea0:	lea    rcx,[rbp-0x70]
   14001eea4:	call   0x140020630
   14001eea9:	jmp    0x14001f10a
   14001eeae:	lea    rdx,[rip+0x18e17]        # 0x140037ccc
   14001eeb5:	mov    rcx,rdi
   14001eeb8:	call   QWORD PTR [rip+0x136a2]        # 0x140032560
   14001eebe:	test   eax,eax
   14001eec0:	jne    0x14001ef05
   14001eec2:	lea    r8,[rbp+0x8130]
   14001eec9:	lea    rdx,[rbp+0x8160]
   14001eed0:	lea    rcx,[rbp+0xc0]
   14001eed7:	call   0x14001fa00
   14001eedc:	test   rax,rax
   14001eedf:	je     0x14001eef0
   14001eee1:	cmp    BYTE PTR [rax],0x0
   14001eee4:	je     0x14001eef0
   14001eee6:	lea    rcx,[rsp+0x40]
   14001eeeb:	jmp    0x14001ee69
   14001eef0:	lea    rdx,[rip+0x18de1]        # 0x140037cd8
   14001eef7:	lea    rcx,[rbp-0x70]
   14001eefb:	call   0x140020630
   14001ef00:	jmp    0x14001f10a
   14001ef05:	test   rbx,rbx
   14001ef08:	jne    0x14001ef4e
   14001ef0a:	call   QWORD PTR [rip+0x134e8]        # 0x1400323f8
   14001ef10:	mov    rcx,rax
   14001ef13:	mov    rdx,QWORD PTR [rax]
   14001ef16:	call   QWORD PTR [rdx]
   14001ef18:	test   rax,rax
   14001ef1b:	je     0x14001ef2d
   14001ef1d:	mov    rdx,rdi
   14001ef20:	mov    rcx,rax
   14001ef23:	call   0x14001dbb0
   14001ef28:	mov    rbx,rax
   14001ef2b:	jmp    0x14001ef2f
   14001ef2d:	xor    ebx,ebx
   14001ef2f:	mov    eax,DWORD PTR [r13+0x8]
   14001ef33:	and    eax,0xf8000000
   14001ef38:	xor    eax,DWORD PTR [rbx+0x8]
   14001ef3b:	and    eax,0x8000000
   14001ef40:	xor    DWORD PTR [rbx+0x8],eax
   14001ef43:	test   r14,r14
   14001ef46:	je     0x14001ef9c
   14001ef48:	mov    QWORD PTR [r14+0xc],rbx
   14001ef4c:	jmp    0x14001ef9c
   14001ef4e:	mov    DWORD PTR [rbp+0x8138],0xffffff
   14001ef58:	call   QWORD PTR [rip+0x1349a]        # 0x1400323f8
   14001ef5e:	mov    r9,rdi
   14001ef61:	mov    BYTE PTR [rsp+0x20],0x1
   14001ef66:	lea    r8,[rbp+0x8138]
   14001ef6d:	mov    rcx,rax
   14001ef70:	lea    rdx,[rbp-0x80]
   14001ef74:	mov    r10,QWORD PTR [rax]
   14001ef77:	call   QWORD PTR [r10+0x40]
   14001ef7b:	xor    ecx,ecx
   14001ef7d:	mov    eax,DWORD PTR [rax]
   14001ef7f:	and    DWORD PTR [rbx+0x8],0xdf000000
   14001ef86:	cmp    eax,DWORD PTR [rbp+0x8138]
   14001ef8c:	sete   cl
   14001ef8f:	and    eax,0xffffff
   14001ef94:	shl    ecx,0x1d
   14001ef97:	or     ecx,eax
   14001ef99:	or     DWORD PTR [rbx+0x8],ecx
   14001ef9c:	lea    r8,[rbp+0x8130]
   14001efa3:	lea    rdx,[rbp+0x8160]
   14001efaa:	lea    rcx,[rbp+0xc0]
   14001efb1:	call   0x14001fa00
   14001efb6:	cmp    BYTE PTR [rbp+0x8130],0x0
   14001efbd:	je     0x14001f01d
   14001efbf:	mov    r9,r15
   14001efc2:	mov    BYTE PTR [rbp+0x8138],0x0
   14001efc9:	mov    r8,rax
   14001efcc:	mov    QWORD PTR [rsp+0x20],0x0
   14001efd5:	lea    rdx,[rbp+0x8138]
   14001efdc:	lea    rcx,[rip+0x2918d]        # 0x140048170
   14001efe3:	call   0x1400247e0
   14001efe8:	test   al,al
   14001efea:	jne    0x14001effc
   14001efec:	lea    rdx,[rip+0x18c95]        # 0x140037c88
   14001eff3:	lea    rcx,[rbp-0x70]
   14001eff7:	call   0x140020630
   14001effc:	movzx  esi,BYTE PTR [rbp+0x8138]
   14001f003:	lea    r8,[rbp+0x8130]
   14001f00a:	lea    rdx,[rbp+0x8160]
   14001f011:	lea    rcx,[rbp+0xc0]
   14001f018:	call   0x14001fa00
   14001f01d:	test   rax,rax
   14001f020:	je     0x14001f04d
   14001f022:	cmp    BYTE PTR [rax],0x7b
   14001f025:	jne    0x14001f04d
   14001f027:	cmp    BYTE PTR [rbp+0x8160],0x0
   14001f02e:	jne    0x14001f04d
   14001f030:	lea    r9,[rbp+0xc0]
   14001f037:	mov    QWORD PTR [rsp+0x20],r15
   14001f03c:	mov    r8,r12
   14001f03f:	lea    rdx,[rbp-0x70]
   14001f043:	mov    rcx,rbx
   14001f046:	call   0x14001fc70
   14001f04b:	jmp    0x14001f0a7
   14001f04d:	test   rax,rax
   14001f050:	mov    QWORD PTR [rbp+0x8138],0x0
   14001f05b:	lea    r8,[rip+0x18c86]        # 0x140037ce8
   14001f062:	cmovne r8,rax
   14001f066:	lea    rdx,[rip+0x18c83]        # 0x140037cf0
   14001f06d:	lea    rcx,[rbp+0x8138]
   14001f074:	call   0x14001ae50
   14001f079:	lea    rcx,[rbp+0x8138]
   14001f080:	call   0x14001b050
   14001f085:	mov    rdx,rax
   14001f088:	lea    rcx,[rbp-0x70]
   14001f08c:	call   0x140020630
   14001f091:	cmp    QWORD PTR [rbp+0x8138],0x0
   14001f099:	je     0x14001f0a7
   14001f09b:	lea    rcx,[rbp+0x8138]
   14001f0a2:	call   0x14001b030
   14001f0a7:	test   sil,sil
   14001f0aa:	jne    0x14001f105
   14001f0ac:	test   r14,r14
   14001f0af:	je     0x14001f0b9
   14001f0b1:	mov    QWORD PTR [r14+0xc],0x0
   14001f0b9:	mov    eax,DWORD PTR [rbx+0x8]
   14001f0bc:	test   eax,0x7000000
   14001f0c1:	jne    0x14001f0fb
   14001f0c3:	bt     eax,0x1e
   14001f0c7:	jae    0x14001f0fb
   14001f0c9:	mov    rdi,QWORD PTR [rbx]
   14001f0cc:	test   rdi,rdi
   14001f0cf:	je     0x14001f0fb
   14001f0d1:	mov    rcx,rdi
   14001f0d4:	call   0x140020420
   14001f0d9:	mov    rcx,rdi
   14001f0dc:	call   0x14001e3b0
   14001f0e1:	call   QWORD PTR [rip+0x13311]        # 0x1400323f8
   14001f0e7:	mov    rdx,rdi
   14001f0ea:	mov    rcx,rax
   14001f0ed:	mov    r8,QWORD PTR [rax]
   14001f0f0:	call   QWORD PTR [r8+0x8]
   14001f0f4:	and    DWORD PTR [rbx+0x8],0xbfffffff
   14001f0fb:	mov    rcx,rbx
   14001f0fe:	call   0x14001e3b0
   14001f103:	jmp    0x14001f10a
   14001f105:	mov    r14,rbx
   14001f108:	xor    ebx,ebx
   14001f10a:	mov    rax,QWORD PTR [rbp+0x8140]
   14001f111:	cmp    BYTE PTR [rax+0x18],0x0
   14001f115:	je     0x14001ede0
   14001f11b:	movsxd r10,DWORD PTR [rsp+0x60]
   14001f120:	xor    r15d,r15d
   14001f123:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f128:	mov    rax,r13
   14001f12b:	mov    edx,r15d
   14001f12e:	test   r10d,r10d
   14001f131:	jle    0x14001f156
   14001f133:	mov    r8,QWORD PTR [rsi+rdx*8]
   14001f137:	test   rax,rax
   14001f13a:	je     0x14001f14a
   14001f13c:	mov    rcx,QWORD PTR [rax+0xc]
   14001f140:	test   rcx,rcx
   14001f143:	je     0x14001f14a
   14001f145:	mov    rax,rcx
   14001f148:	jmp    0x14001f137
   14001f14a:	inc    rdx
   14001f14d:	mov    QWORD PTR [rax+0xc],r8
   14001f151:	cmp    rdx,r10
   14001f154:	jl     0x14001f133
   14001f156:	lea    eax,[r10-0x1]
   14001f15a:	movsxd rbx,eax
   14001f15d:	test   eax,eax
   14001f15f:	jle    0x14001f195
   14001f161:	mov    rdi,QWORD PTR [rsi+rbx*8]
   14001f165:	test   rdi,rdi
   14001f168:	je     0x14001f18d
   14001f16a:	mov    rcx,rdi
   14001f16d:	call   0x140020420
   14001f172:	mov    rcx,rdi
   14001f175:	call   0x14001e3b0
   14001f17a:	call   QWORD PTR [rip+0x13278]        # 0x1400323f8
   14001f180:	mov    rdx,rdi
   14001f183:	mov    rcx,rax
   14001f186:	mov    r8,QWORD PTR [rax]
   14001f189:	call   QWORD PTR [r8+0x8]
   14001f18d:	dec    rbx
   14001f190:	test   rbx,rbx
   14001f193:	jg     0x14001f161
   14001f195:	lea    rdx,[rsp+0x40]
   14001f19a:	mov    rcx,r13
   14001f19d:	call   0x14001f4d0
   14001f1a2:	mov    eax,DWORD PTR [rsp+0x40]
   14001f1a6:	mov    r14,QWORD PTR [rsp+0x48]
   14001f1ab:	sub    eax,0x1
   14001f1ae:	movsxd rdi,eax
   14001f1b1:	js     0x14001f1e5
   14001f1b3:	mov    rbx,QWORD PTR [r14+rdi*8]
   14001f1b7:	test   rbx,rbx
   14001f1ba:	je     0x14001f1df
   14001f1bc:	mov    rcx,rbx
   14001f1bf:	call   0x140020420
   14001f1c4:	mov    rcx,rbx
   14001f1c7:	call   0x14001e3b0
   14001f1cc:	call   QWORD PTR [rip+0x13226]        # 0x1400323f8
   14001f1d2:	mov    rdx,rbx
   14001f1d5:	mov    rcx,rax
   14001f1d8:	mov    r8,QWORD PTR [rax]
   14001f1db:	call   QWORD PTR [r8+0x8]
   14001f1df:	sub    rdi,0x1
   14001f1e3:	jns    0x14001f1b3
   14001f1e5:	movzx  eax,BYTE PTR [rbp+0xa0]
   14001f1ec:	lea    rcx,[rip+0x135ad]        # 0x1400327a0
   14001f1f3:	mov    QWORD PTR [rbp+0x90],rcx
   14001f1fa:	test   al,al
   14001f1fc:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001f203:	mov    DWORD PTR [rbp+0x9c],r15d
   14001f20a:	sete   dil
   14001f20e:	mov    BYTE PTR [rbp+0xa0],r15b
   14001f215:	mov    rax,QWORD PTR [rcx]
   14001f218:	call   QWORD PTR [rax+0x8]
   14001f21b:	mov    ebx,DWORD PTR [rsp+0x54]
   14001f21f:	and    ebx,0xc0000000
   14001f225:	jne    0x14001f242
   14001f227:	test   r14,r14
   14001f22a:	je     0x14001f242
   14001f22c:	mov    rax,QWORD PTR [rip+0x1315d]        # 0x140032390
   14001f233:	mov    rdx,r14
   14001f236:	mov    rcx,QWORD PTR [rax]
   14001f239:	mov    rax,QWORD PTR [rcx]
   14001f23c:	call   QWORD PTR [rax+0x28]
   14001f23f:	mov    r14,r15
   14001f242:	test   ebx,ebx
   14001f244:	jne    0x14001f25e
   14001f246:	test   r14,r14
   14001f249:	je     0x14001f25e
   14001f24b:	mov    rax,QWORD PTR [rip+0x1313e]        # 0x140032390
   14001f252:	mov    rdx,r14
   14001f255:	mov    rcx,QWORD PTR [rax]
   14001f258:	mov    rax,QWORD PTR [rcx]
   14001f25b:	call   QWORD PTR [rax+0x28]
   14001f25e:	mov    ebx,DWORD PTR [rsp+0x74]
   14001f262:	and    ebx,0xc0000000
   14001f268:	jne    0x14001f285
   14001f26a:	test   rsi,rsi
   14001f26d:	je     0x14001f285
   14001f26f:	mov    rax,QWORD PTR [rip+0x1311a]        # 0x140032390
   14001f276:	mov    rdx,rsi
   14001f279:	mov    rcx,QWORD PTR [rax]
   14001f27c:	mov    rax,QWORD PTR [rcx]
   14001f27f:	call   QWORD PTR [rax+0x28]
   14001f282:	mov    rsi,r15
   14001f285:	test   ebx,ebx
   14001f287:	jne    0x14001f2a2
   14001f289:	test   rsi,rsi
   14001f28c:	je     0x14001f2a2
   14001f28e:	mov    rcx,QWORD PTR [rip+0x130fb]        # 0x140032390
   14001f295:	mov    rdx,rsi
   14001f298:	mov    rcx,QWORD PTR [rcx]
   14001f29b:	mov    r8,QWORD PTR [rcx]
   14001f29e:	call   QWORD PTR [r8+0x28]
   14001f2a2:	movzx  eax,dil
   14001f2a6:	add    rsp,0x81e8
   14001f2ad:	pop    r15
   14001f2af:	pop    r14
   14001f2b1:	pop    r13
   14001f2b3:	pop    r12
   14001f2b5:	pop    rdi
   14001f2b6:	pop    rsi
   14001f2b7:	pop    rbx
   14001f2b8:	pop    rbp
   14001f2b9:	ret    
   14001f2ba:	int3   
   14001f2bb:	int3   
   14001f2bc:	int3   
   14001f2bd:	int3   
   14001f2be:	int3   
   14001f2bf:	int3   
   14001f2c0:	mov    QWORD PTR [rsp+0x8],rcx
   14001f2c5:	push   rbx
   14001f2c6:	push   rsi
   14001f2c7:	push   r12
   14001f2c9:	push   r13
   14001f2cb:	sub    rsp,0x58
   14001f2cf:	mov    rax,QWORD PTR [rdx]
   14001f2d2:	mov    r12,r8
   14001f2d5:	mov    rbx,rdx
   14001f2d8:	lea    r8,[rip+0x18955]        # 0x140037c34
   14001f2df:	mov    rdx,r12
   14001f2e2:	mov    rcx,rbx
   14001f2e5:	mov    r13,r9
   14001f2e8:	call   QWORD PTR [rax+0x10]
   14001f2eb:	mov    rsi,rax
   14001f2ee:	test   rax,rax
   14001f2f1:	jne    0x14001f2fe
   14001f2f3:	add    rsp,0x58
   14001f2f7:	pop    r13
   14001f2f9:	pop    r12
   14001f2fb:	pop    rsi
   14001f2fc:	pop    rbx
   14001f2fd:	ret    
   14001f2fe:	mov    rax,QWORD PTR [rbx]
   14001f301:	mov    rdx,rsi
   14001f304:	mov    rcx,rbx
   14001f307:	mov    QWORD PTR [rsp+0x48],r14
   14001f30c:	mov    QWORD PTR [rip+0x26eb5],r12        # 0x1400461c8
   14001f313:	call   QWORD PTR [rax+0x38]
   14001f316:	mov    r14,rax
   14001f319:	mov    rdx,rsi
   14001f31c:	cmp    rax,0x3b9aca00
   14001f322:	jle    0x14001f33f
   14001f324:	mov    rax,QWORD PTR [rbx]
   14001f327:	mov    rcx,rbx
   14001f32a:	call   QWORD PTR [rax+0x18]
   14001f32d:	mov    r14,QWORD PTR [rsp+0x48]
   14001f332:	xor    al,al
   14001f334:	add    rsp,0x58
   14001f338:	pop    r13
   14001f33a:	pop    r12
   14001f33c:	pop    rsi
   14001f33d:	pop    rbx
   14001f33e:	ret    
   14001f33f:	mov    QWORD PTR [rsp+0x90],rbp
   14001f347:	lea    r8,[rsp+0x88]
   14001f34f:	lea    ebp,[rax+0x2]
   14001f352:	mov    QWORD PTR [rsp+0x50],rdi
   14001f357:	mov    rax,QWORD PTR [rbx-0x8]
   14001f35b:	lea    rcx,[rbx-0x8]
   14001f35f:	xor    r9d,r9d
   14001f362:	mov    QWORD PTR [rsp+0x40],r15
   14001f367:	mov    QWORD PTR [rsp+0x20],0x0
   14001f370:	call   QWORD PTR [rax+0x2e0]
   14001f376:	test   al,al
   14001f378:	je     0x14001f38c
   14001f37a:	mov    eax,DWORD PTR [rsp+0x88]
   14001f381:	dec    ebp
   14001f383:	add    ebp,eax
   14001f385:	lea    ecx,[rax-0x1]
   14001f388:	not    ecx
   14001f38a:	and    ebp,ecx
   14001f38c:	mov    rax,QWORD PTR [rbx-0x8]
   14001f390:	lea    rcx,[rbx-0x8]
   14001f394:	xor    r9d,r9d
   14001f397:	mov    r8d,ebp
   14001f39a:	mov    rdx,rsi
   14001f39d:	call   QWORD PTR [rax+0x2e8]
   14001f3a3:	mov    r10,QWORD PTR [rbx-0x8]
   14001f3a7:	lea    rcx,[rbx-0x8]
   14001f3ab:	mov    r9d,r14d
   14001f3ae:	mov    QWORD PTR [rsp+0x20],rsi
   14001f3b3:	mov    r8d,ebp
   14001f3b6:	mov    rdx,rax
   14001f3b9:	mov    r15,rax
   14001f3bc:	call   QWORD PTR [r10+0x280]
   14001f3c3:	mov    r8,QWORD PTR [rbx]
   14001f3c6:	mov    rdx,rsi
   14001f3c9:	test   eax,eax
   14001f3cb:	mov    rcx,rbx
   14001f3ce:	setne  bpl
   14001f3d2:	call   QWORD PTR [r8+0x18]
   14001f3d6:	test   bpl,bpl
   14001f3d9:	je     0x14001f416
   14001f3db:	mov    rax,QWORD PTR [rsp+0xa0]
   14001f3e3:	mov    r9,rbx
   14001f3e6:	mov    rcx,QWORD PTR [rsp+0x80]
   14001f3ee:	mov    r8,r15
   14001f3f1:	mov    QWORD PTR [rsp+0x30],0x0
   14001f3fa:	mov    rdx,r12
   14001f3fd:	mov    QWORD PTR [rsp+0x28],rax
   14001f402:	mov    QWORD PTR [rsp+0x20],r13
   14001f407:	mov    WORD PTR [r15+r14*1],0x0
   14001f40e:	call   0x14001eb40
   14001f413:	movzx  ebp,al
   14001f416:	mov    r8,QWORD PTR [rbx-0x8]
   14001f41a:	lea    rcx,[rbx-0x8]
   14001f41e:	mov    rdx,r15
   14001f421:	call   QWORD PTR [r8+0x2f0]
   14001f428:	mov    r15,QWORD PTR [rsp+0x40]
   14001f42d:	movzx  eax,bpl
   14001f431:	mov    rbp,QWORD PTR [rsp+0x90]
   14001f439:	mov    rdi,QWORD PTR [rsp+0x50]
   14001f43e:	mov    r14,QWORD PTR [rsp+0x48]
   14001f443:	add    rsp,0x58
   14001f447:	pop    r13
   14001f449:	pop    r12
   14001f44b:	pop    rsi
   14001f44c:	pop    rbx
   14001f44d:	ret    
   14001f44e:	int3   
   14001f44f:	int3   
   14001f450:	mov    QWORD PTR [rsp+0x8],rbx
   14001f455:	push   rdi
   14001f456:	sub    rsp,0x20
   14001f45a:	mov    rdi,rcx
   14001f45d:	call   QWORD PTR [rip+0x12f95]        # 0x1400323f8
   14001f463:	mov    rcx,rax
   14001f466:	mov    rdx,QWORD PTR [rax]
   14001f469:	call   QWORD PTR [rdx]
   14001f46b:	test   rax,rax
   14001f46e:	je     0x14001f47f
   14001f470:	xor    edx,edx
   14001f472:	mov    rcx,rax
   14001f475:	call   0x14001dbb0
   14001f47a:	mov    rbx,rax
   14001f47d:	jmp    0x14001f481
   14001f47f:	xor    ebx,ebx
   14001f481:	mov    eax,DWORD PTR [rbx+0x8]
   14001f484:	mov    rdx,rdi
   14001f487:	xor    eax,DWORD PTR [rdi+0x8]
   14001f48a:	and    eax,0xffffff
   14001f48f:	xor    DWORD PTR [rbx+0x8],eax
   14001f492:	mov    ecx,DWORD PTR [rdi+0x8]
   14001f495:	xor    ecx,DWORD PTR [rbx+0x8]
   14001f498:	and    ecx,0x20000000
   14001f49e:	xor    DWORD PTR [rbx+0x8],ecx
   14001f4a1:	mov    rcx,rbx
   14001f4a4:	call   0x14001e450
   14001f4a9:	mov    rdx,rbx
   14001f4ac:	mov    rcx,rdi
   14001f4af:	call   0x14001dd30
   14001f4b4:	mov    rax,rbx
   14001f4b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f4bc:	add    rsp,0x20
   14001f4c0:	pop    rdi
   14001f4c1:	ret    
   14001f4c2:	int3   
   14001f4c3:	int3   
   14001f4c4:	int3   
   14001f4c5:	int3   
   14001f4c6:	int3   
   14001f4c7:	int3   
   14001f4c8:	int3   
   14001f4c9:	int3   
   14001f4ca:	int3   
   14001f4cb:	int3   
   14001f4cc:	int3   
   14001f4cd:	int3   
   14001f4ce:	int3   
   14001f4cf:	int3   
   14001f4d0:	rex push rbp
   14001f4d2:	push   r12
   14001f4d4:	push   r13
   14001f4d6:	push   r14
   14001f4d8:	push   r15
   14001f4da:	sub    rsp,0x40
   14001f4de:	movsxd r15,DWORD PTR [rdx]
   14001f4e1:	xor    r12d,r12d
   14001f4e4:	mov    r13,rdx
   14001f4e7:	mov    r14,rcx
   14001f4ea:	mov    ebp,r12d
   14001f4ed:	test   r15,r15
   14001f4f0:	jle    0x14001f738
   14001f4f6:	mov    QWORD PTR [rsp+0x70],rbx
   14001f4fb:	mov    QWORD PTR [rsp+0x38],rsi
   14001f500:	mov    QWORD PTR [rsp+0x30],rdi
   14001f505:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001f510:	mov    rax,QWORD PTR [r13+0x8]
   14001f514:	mov    rcx,QWORD PTR [rax+rbp*8]
   14001f518:	mov    eax,DWORD PTR [rcx+0x8]
   14001f51b:	test   eax,0x7000000
   14001f520:	jne    0x14001f71d
   14001f526:	bt     eax,0x1e
   14001f52a:	jae    0x14001f71d
   14001f530:	mov    rsi,QWORD PTR [rcx]
   14001f533:	test   rsi,rsi
   14001f536:	je     0x14001f71d
   14001f53c:	nop    DWORD PTR [rax+0x0]
   14001f540:	mov    rcx,r14
   14001f543:	call   0x14001e770
   14001f548:	mov    rdi,rax
   14001f54b:	test   rax,rax
   14001f54e:	je     0x14001f5c7
   14001f550:	test   rax,rax
   14001f553:	je     0x14001f573
   14001f555:	call   QWORD PTR [rip+0x12e9d]        # 0x1400323f8
   14001f55b:	mov    edx,DWORD PTR [rdi+0x8]
   14001f55e:	mov    rcx,rax
   14001f561:	and    edx,0xffffff
   14001f567:	mov    r8,QWORD PTR [rax]
   14001f56a:	call   QWORD PTR [r8+0x18]
   14001f56e:	mov    rbx,rax
   14001f571:	jmp    0x14001f57a
   14001f573:	lea    rbx,[rip+0x13226]        # 0x1400327a0
   14001f57a:	test   rsi,rsi
   14001f57d:	je     0x14001f59a
   14001f57f:	call   QWORD PTR [rip+0x12e73]        # 0x1400323f8
   14001f585:	mov    edx,DWORD PTR [rsi+0x8]
   14001f588:	mov    rcx,rax
   14001f58b:	and    edx,0xffffff
   14001f591:	mov    r8,QWORD PTR [rax]
   14001f594:	call   QWORD PTR [r8+0x18]
   14001f598:	jmp    0x14001f5a1
   14001f59a:	lea    rax,[rip+0x131ff]        # 0x1400327a0
   14001f5a1:	sub    rbx,rax
   14001f5a4:	movzx  edx,BYTE PTR [rax]
   14001f5a7:	movzx  ecx,BYTE PTR [rax+rbx*1]
   14001f5ab:	sub    edx,ecx
   14001f5ad:	jne    0x14001f5b6
   14001f5af:	inc    rax
   14001f5b2:	test   ecx,ecx
   14001f5b4:	jne    0x14001f5a4
   14001f5b6:	test   edx,edx
   14001f5b8:	je     0x14001f679
   14001f5be:	mov    rdi,QWORD PTR [rdi+0xc]
   14001f5c2:	test   rdi,rdi
   14001f5c5:	jne    0x14001f555
   14001f5c7:	call   QWORD PTR [rip+0x12e2b]        # 0x1400323f8
   14001f5cd:	mov    rcx,rax
   14001f5d0:	mov    rdx,QWORD PTR [rax]
   14001f5d3:	call   QWORD PTR [rdx]
   14001f5d5:	mov    rbx,rax
   14001f5d8:	test   rax,rax
   14001f5db:	je     0x14001f689
   14001f5e1:	mov    QWORD PTR [rax],r12
   14001f5e4:	mov    eax,DWORD PTR [rax+0x8]
   14001f5e7:	and    eax,0x80ffffff
   14001f5ec:	or     eax,0xffffff
   14001f5f1:	mov    ecx,eax
   14001f5f3:	mov    DWORD PTR [rbx+0x8],eax
   14001f5f6:	shr    ecx,0x18
   14001f5f9:	and    ecx,0x7
   14001f5fc:	sub    ecx,0x1
   14001f5ff:	je     0x14001f61b
   14001f601:	sub    ecx,0x4
   14001f604:	je     0x14001f61b
   14001f606:	cmp    ecx,0x2
   14001f609:	jne    0x14001f61b
   14001f60b:	bt     eax,0x1c
   14001f60f:	jae    0x14001f61b
   14001f611:	lea    edx,[rcx+0x6]
   14001f614:	xor    ecx,ecx
   14001f616:	call   0x14002639c
   14001f61b:	and    DWORD PTR [rbx+0x8],0xa0ffffff
   14001f622:	mov    QWORD PTR [rbx+0xc],r12
   14001f626:	mov    DWORD PTR [rsp+0x78],0xffffff
   14001f62e:	call   QWORD PTR [rip+0x12dc4]        # 0x1400323f8
   14001f634:	xor    r9d,r9d
   14001f637:	mov    BYTE PTR [rsp+0x20],0x1
   14001f63c:	lea    r8,[rsp+0x78]
   14001f641:	mov    rcx,rax
   14001f644:	lea    rdx,[rsp+0x80]
   14001f64c:	mov    r10,QWORD PTR [rax]
   14001f64f:	call   QWORD PTR [r10+0x40]
   14001f653:	mov    ecx,DWORD PTR [rbx+0x8]
   14001f656:	mov    edx,r12d
   14001f659:	mov    eax,DWORD PTR [rax]
   14001f65b:	cmp    eax,DWORD PTR [rsp+0x78]
   14001f65f:	sete   dl
   14001f662:	and    ecx,0xdf000000
   14001f668:	shl    edx,0x1d
   14001f66b:	and    eax,0xffffff
   14001f670:	or     edx,ecx
   14001f672:	or     edx,eax
   14001f674:	mov    DWORD PTR [rbx+0x8],edx
   14001f677:	jmp    0x14001f68c
   14001f679:	mov    rdx,rsi
   14001f67c:	mov    rcx,rdi
   14001f67f:	call   0x140020200
   14001f684:	jmp    0x14001f710
   14001f689:	mov    rbx,r12
   14001f68c:	mov    eax,DWORD PTR [rsi+0x8]
   14001f68f:	mov    rdx,rsi
   14001f692:	xor    eax,DWORD PTR [rbx+0x8]
   14001f695:	and    eax,0xffffff
   14001f69a:	xor    DWORD PTR [rbx+0x8],eax
   14001f69d:	mov    ecx,DWORD PTR [rbx+0x8]
   14001f6a0:	xor    ecx,DWORD PTR [rsi+0x8]
   14001f6a3:	and    ecx,0x20000000
   14001f6a9:	xor    DWORD PTR [rbx+0x8],ecx
   14001f6ac:	mov    rcx,rbx
   14001f6af:	call   0x14001e450
   14001f6b4:	mov    rdx,rbx
   14001f6b7:	mov    rcx,rsi
   14001f6ba:	call   0x14001dd30
   14001f6bf:	mov    eax,DWORD PTR [r14+0x8]
   14001f6c3:	mov    ecx,eax
   14001f6c5:	and    ecx,0x7000000
   14001f6cb:	jne    0x14001f6f9
   14001f6cd:	bt     eax,0x1e
   14001f6d1:	jae    0x14001f6f9
   14001f6d3:	mov    rax,QWORD PTR [r14]
   14001f6d6:	test   rax,rax
   14001f6d9:	je     0x14001f6f9
   14001f6db:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f6e0:	test   rax,rax
   14001f6e3:	je     0x14001f6f3
   14001f6e5:	mov    rcx,QWORD PTR [rax+0xc]
   14001f6e9:	test   rcx,rcx
   14001f6ec:	je     0x14001f6f3
   14001f6ee:	mov    rax,rcx
   14001f6f1:	jmp    0x14001f6e0
   14001f6f3:	mov    QWORD PTR [rax+0xc],rbx
   14001f6f7:	jmp    0x14001f710
   14001f6f9:	test   ecx,ecx
   14001f6fb:	je     0x14001f705
   14001f6fd:	mov    rcx,r14
   14001f700:	call   0x14001e3b0
   14001f705:	or     DWORD PTR [r14+0x8],0x40000000
   14001f70d:	mov    QWORD PTR [r14],rbx
   14001f710:	mov    rsi,QWORD PTR [rsi+0xc]
   14001f714:	test   rsi,rsi
   14001f717:	jne    0x14001f540
   14001f71d:	inc    rbp
   14001f720:	cmp    rbp,r15
   14001f723:	jl     0x14001f510
   14001f729:	mov    rdi,QWORD PTR [rsp+0x30]
   14001f72e:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f733:	mov    rbx,QWORD PTR [rsp+0x70]
   14001f738:	add    rsp,0x40
   14001f73c:	pop    r15
   14001f73e:	pop    r14
   14001f740:	pop    r13
   14001f742:	pop    r12
   14001f744:	pop    rbp
   14001f745:	ret    
   14001f746:	int3   
   14001f747:	int3   
   14001f748:	int3   
   14001f749:	int3   
   14001f74a:	int3   
   14001f74b:	int3   
   14001f74c:	int3   
   14001f74d:	int3   
   14001f74e:	int3   
   14001f74f:	int3   
   14001f750:	test   r9,r9
   14001f753:	je     0x14001f93a
   14001f759:	mov    QWORD PTR [rsp+0x10],rbx
   14001f75e:	mov    QWORD PTR [rsp+0x18],rbp
   14001f763:	push   rsi
   14001f764:	sub    rsp,0x240
   14001f76b:	mov    rbx,r8
   14001f76e:	mov    rbp,rcx
   14001f771:	mov    r8d,0x200
   14001f777:	lea    rcx,[rsp+0x40]
   14001f77c:	mov    rsi,r9
   14001f77f:	call   QWORD PTR [rip+0x12dd3]        # 0x140032558
   14001f785:	lea    rcx,[rsp+0x40]
   14001f78a:	or     rax,0xffffffffffffffff
   14001f78e:	xchg   ax,ax
   14001f790:	inc    rax
   14001f793:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001f797:	jne    0x14001f790
   14001f799:	cdqe   
   14001f79b:	test   rax,rax
   14001f79e:	jle    0x14001f7c1
   14001f7a0:	lea    rdx,[rsp+0x40]
   14001f7a5:	movzx  ecx,BYTE PTR [rdx+rax*1-0x1]
   14001f7aa:	cmp    cl,0x5c
   14001f7ad:	je     0x14001f7c1
   14001f7af:	cmp    cl,0x2f
   14001f7b2:	je     0x14001f7c1
   14001f7b4:	mov    BYTE PTR [rdx+rax*1-0x1],0x0
   14001f7b9:	dec    rax
   14001f7bc:	test   rax,rax
   14001f7bf:	jg     0x14001f7a5
   14001f7c1:	or     r9d,0xffffffff
   14001f7c5:	mov    QWORD PTR [rsp+0x250],rdi
   14001f7cd:	mov    r8d,0x200
   14001f7d3:	lea    rcx,[rsp+0x40]
   14001f7d8:	mov    rdx,rbx
   14001f7db:	call   QWORD PTR [rip+0x12d6f]        # 0x140032550
   14001f7e1:	call   QWORD PTR [rip+0x12c11]        # 0x1400323f8
   14001f7e7:	mov    rcx,rax
   14001f7ea:	mov    rdx,QWORD PTR [rax]
   14001f7ed:	call   QWORD PTR [rdx]
   14001f7ef:	xor    edi,edi
   14001f7f1:	mov    rbx,rax
   14001f7f4:	test   rax,rax
   14001f7f7:	je     0x14001f878
   14001f7f9:	mov    QWORD PTR [rax],rdi
   14001f7fc:	mov    rcx,rbx
   14001f7ff:	mov    eax,DWORD PTR [rax+0x8]
   14001f802:	and    eax,0x80ffffff
   14001f807:	or     eax,0xffffff
   14001f80c:	mov    DWORD PTR [rbx+0x8],eax
   14001f80f:	call   0x14001e3b0
   14001f814:	and    DWORD PTR [rbx+0x8],0xf7ffffff
   14001f81b:	mov    QWORD PTR [rbx+0xc],rdi
   14001f81f:	mov    DWORD PTR [rsp+0x268],0xffffff
   14001f82a:	call   QWORD PTR [rip+0x12bc8]        # 0x1400323f8
   14001f830:	lea    r9,[rsp+0x40]
   14001f835:	mov    BYTE PTR [rsp+0x20],0x1
   14001f83a:	lea    r8,[rsp+0x268]
   14001f842:	mov    rcx,rax
   14001f845:	lea    rdx,[rsp+0x30]
   14001f84a:	mov    r10,QWORD PTR [rax]
   14001f84d:	call   QWORD PTR [r10+0x40]
   14001f851:	mov    ecx,DWORD PTR [rbx+0x8]
   14001f854:	mov    eax,DWORD PTR [rax]
   14001f856:	cmp    eax,DWORD PTR [rsp+0x268]
   14001f85d:	sete   dil
   14001f861:	and    ecx,0xdf000000
   14001f867:	shl    edi,0x1d
   14001f86a:	and    eax,0xffffff
   14001f86f:	or     edi,ecx
   14001f871:	or     edi,eax
   14001f873:	mov    DWORD PTR [rbx+0x8],edi
   14001f876:	jmp    0x14001f87b
   14001f878:	mov    rbx,rdi
   14001f87b:	mov    eax,DWORD PTR [rbp+0x8]
   14001f87e:	lea    r8,[rsp+0x40]
   14001f883:	mov    r9,QWORD PTR [rsp+0x270]
   14001f88b:	and    eax,0xf8000000
   14001f890:	xor    eax,DWORD PTR [rbx+0x8]
   14001f893:	mov    rdx,rsi
   14001f896:	and    eax,0x8000000
   14001f89b:	mov    rcx,rbx
   14001f89e:	xor    DWORD PTR [rbx+0x8],eax
   14001f8a1:	mov    rax,QWORD PTR [rsp+0x280]
   14001f8a9:	mov    QWORD PTR [rsp+0x20],rax
   14001f8ae:	call   0x14001f2c0
   14001f8b3:	test   al,al
   14001f8b5:	je     0x14001f8e9
   14001f8b7:	mov    rdi,QWORD PTR [rsp+0x278]
   14001f8bf:	movsxd rsi,DWORD PTR [rdi]
   14001f8c2:	cmp    esi,DWORD PTR [rdi+0x10]
   14001f8c5:	jne    0x14001f8d5
   14001f8c7:	lea    rcx,[rdi+0x8]
   14001f8cb:	mov    edx,0x1
   14001f8d0:	call   0x140013420
   14001f8d5:	mov    rax,QWORD PTR [rdi+0x8]
   14001f8d9:	inc    DWORD PTR [rdi]
   14001f8db:	lea    rdx,[rax+rsi*8]
   14001f8df:	test   rdx,rdx
   14001f8e2:	je     0x14001f91e
   14001f8e4:	mov    QWORD PTR [rdx],rbx
   14001f8e7:	jmp    0x14001f91e
   14001f8e9:	lea    rdx,[rsp+0x40]
   14001f8ee:	lea    rcx,[rip+0x1834b]        # 0x140037c40
   14001f8f5:	call   QWORD PTR [rip+0x12b25]        # 0x140032420
   14001f8fb:	mov    rcx,rbx
   14001f8fe:	call   0x140020420
   14001f903:	mov    rcx,rbx
   14001f906:	call   0x14001e3b0
   14001f90b:	call   QWORD PTR [rip+0x12ae7]        # 0x1400323f8
   14001f911:	mov    rdx,rbx
   14001f914:	mov    rcx,rax
   14001f917:	mov    r8,QWORD PTR [rax]
   14001f91a:	call   QWORD PTR [r8+0x8]
   14001f91e:	mov    rdi,QWORD PTR [rsp+0x250]
   14001f926:	lea    r11,[rsp+0x240]
   14001f92e:	mov    rbx,QWORD PTR [r11+0x18]
   14001f932:	mov    rbp,QWORD PTR [r11+0x20]
   14001f936:	mov    rsp,r11
   14001f939:	pop    rsi
   14001f93a:	ret    
   14001f93b:	int3   
   14001f93c:	int3   
   14001f93d:	int3   
   14001f93e:	int3   
   14001f93f:	int3   
   14001f940:	mov    QWORD PTR [rsp+0x10],rbx
   14001f945:	push   rsi
   14001f946:	sub    rsp,0x20
   14001f94a:	movzx  r8d,BYTE PTR [rcx+0x19]
   14001f94f:	movzx  esi,dl
   14001f952:	mov    rbx,rcx
   14001f955:	test   r8b,0x1
   14001f959:	je     0x14001f976
   14001f95b:	mov    eax,DWORD PTR [rcx+0x14]
   14001f95e:	sub    eax,DWORD PTR [rcx+0x24]
   14001f961:	je     0x14001f976
   14001f963:	dec    eax
   14001f965:	movsxd rcx,eax
   14001f968:	mov    rax,QWORD PTR [rbx]
   14001f96b:	cmp    BYTE PTR [rcx+rax*1],0xa
   14001f96f:	sete   al
   14001f972:	test   al,al
   14001f974:	jne    0x14001f97c
   14001f976:	cmp    DWORD PTR [rbx+0x14],0x0
   14001f97a:	jne    0x14001f9c9
   14001f97c:	mov    QWORD PTR [rsp+0x30],rdi
   14001f981:	test   r8b,0x10
   14001f985:	je     0x14001f98b
   14001f987:	xor    edi,edi
   14001f989:	jmp    0x14001f98e
   14001f98b:	mov    edi,DWORD PTR [rbx+0x1c]
   14001f98e:	sub    edi,0x1
   14001f991:	js     0x14001f9c4
   14001f993:	mov    edx,0x1
   14001f998:	mov    rcx,rbx
   14001f99b:	call   0x140020c50
   14001f9a0:	test   al,al
   14001f9a2:	je     0x14001f9bf
   14001f9a4:	mov    eax,DWORD PTR [rbx+0x14]
   14001f9a7:	sub    eax,DWORD PTR [rbx+0x24]
   14001f9aa:	movsxd rcx,eax
   14001f9ad:	mov    rax,QWORD PTR [rbx]
   14001f9b0:	mov    BYTE PTR [rcx+rax*1],0x9
   14001f9b4:	mov    rcx,rbx
   14001f9b7:	inc    DWORD PTR [rbx+0x14]
   14001f9ba:	call   0x1400209e0
   14001f9bf:	sub    edi,0x1
   14001f9c2:	jns    0x14001f993
   14001f9c4:	mov    rdi,QWORD PTR [rsp+0x30]
   14001f9c9:	mov    edx,0x1
   14001f9ce:	mov    rcx,rbx
   14001f9d1:	call   0x140020c50
   14001f9d6:	test   al,al
   14001f9d8:	je     0x14001f9f5
   14001f9da:	mov    eax,DWORD PTR [rbx+0x14]
   14001f9dd:	sub    eax,DWORD PTR [rbx+0x24]
   14001f9e0:	movsxd rcx,eax
   14001f9e3:	mov    rax,QWORD PTR [rbx]
   14001f9e6:	mov    BYTE PTR [rcx+rax*1],sil
   14001f9ea:	mov    rcx,rbx
   14001f9ed:	inc    DWORD PTR [rbx+0x14]
   14001f9f0:	call   0x1400209e0
   14001f9f5:	mov    rbx,QWORD PTR [rsp+0x38]
   14001f9fa:	add    rsp,0x20
   14001f9fe:	pop    rsi
   14001f9ff:	ret    
   14001fa00:	rex push rbx
   14001fa02:	push   rdi
   14001fa03:	push   r15
   14001fa05:	sub    rsp,0x30
   14001fa09:	cmp    BYTE PTR [rcx+0x801c],0x0
   14001fa10:	mov    r15,r8
   14001fa13:	mov    rdi,rdx
   14001fa16:	mov    rbx,rcx
   14001fa19:	je     0x14001fa42
   14001fa1b:	movzx  eax,BYTE PTR [rcx+0x801d]
   14001fa22:	mov    BYTE PTR [rcx+0x801c],0x0
   14001fa29:	mov    BYTE PTR [rdx],al
   14001fa2b:	movzx  eax,BYTE PTR [rcx+0x801e]
   14001fa32:	mov    BYTE PTR [r8],al
   14001fa35:	lea    rax,[rcx+0x18]
   14001fa39:	add    rsp,0x30
   14001fa3d:	pop    r15
   14001fa3f:	pop    rdi
   14001fa40:	pop    rbx
   14001fa41:	ret    
   14001fa42:	mov    BYTE PTR [rdx],0x0
   14001fa45:	mov    BYTE PTR [rcx+0x801d],0x0
   14001fa4c:	mov    BYTE PTR [r8],0x0
   14001fa50:	mov    BYTE PTR [rcx+0x801e],0x0
   14001fa57:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fa5b:	cmp    BYTE PTR [rcx+0x18],0x0
   14001fa5f:	je     0x14001fa6c
   14001fa61:	xor    eax,eax
   14001fa63:	add    rsp,0x30
   14001fa67:	pop    r15
   14001fa69:	pop    rdi
   14001fa6a:	pop    rbx
   14001fa6b:	ret    
   14001fa6c:	call   0x140020f40
   14001fa71:	mov    rax,QWORD PTR [rbx+0x10]
   14001fa75:	cmp    BYTE PTR [rax+0x18],0x0
   14001fa79:	jne    0x14001fa61
   14001fa7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fa80:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fa84:	call   0x140020e70
   14001fa89:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fa8d:	test   al,al
   14001fa8f:	je     0x14001faab
   14001fa91:	call   0x140020f40
   14001fa96:	mov    rax,QWORD PTR [rbx+0x10]
   14001fa9a:	cmp    BYTE PTR [rax+0x18],0x0
   14001fa9e:	je     0x14001fa80
   14001faa0:	xor    eax,eax
   14001faa2:	add    rsp,0x30
   14001faa6:	pop    r15
   14001faa8:	pop    rdi
   14001faa9:	pop    rbx
   14001faaa:	ret    
   14001faab:	mov    QWORD PTR [rsp+0x60],r12
   14001fab0:	xor    r8d,r8d
   14001fab3:	mov    r12d,0x1
   14001fab9:	mov    edx,r12d
   14001fabc:	call   0x140021730
   14001fac1:	test   rax,rax
   14001fac4:	jne    0x14001fad4
   14001fac6:	mov    r12,QWORD PTR [rsp+0x60]
   14001facb:	add    rsp,0x30
   14001facf:	pop    r15
   14001fad1:	pop    rdi
   14001fad2:	pop    rbx
   14001fad3:	ret    
   14001fad4:	movzx  eax,BYTE PTR [rax]
   14001fad7:	cmp    al,0x22
   14001fad9:	jne    0x14001fb1d
   14001fadb:	mov    BYTE PTR [rdi],r12b
   14001fade:	mov    BYTE PTR [rbx+0x801d],r12b
   14001fae5:	call   QWORD PTR [rip+0x1290d]        # 0x1400323f8
   14001faeb:	mov    rcx,QWORD PTR [rbx+0x8]
   14001faef:	mov    r8,QWORD PTR [rax]
   14001faf2:	mov    edx,DWORD PTR [rcx+0x8]
   14001faf5:	mov    rcx,rax
   14001faf8:	shr    edx,0x1b
   14001fafb:	and    dl,r12b
   14001fafe:	call   QWORD PTR [r8+0x70]
   14001fb02:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fb06:	lea    r8,[rbx+0x18]
   14001fb0a:	mov    rdx,rax
   14001fb0d:	mov    r9d,0x8000
   14001fb13:	call   0x140021410
   14001fb18:	jmp    0x14001fc57
   14001fb1d:	cmp    al,0x7b
   14001fb1f:	je     0x14001fc47
   14001fb25:	cmp    al,0x7d
   14001fb27:	je     0x14001fc47
   14001fb2d:	cmp    al,0x3d
   14001fb2f:	je     0x14001fc47
   14001fb35:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fb39:	xor    r8d,r8d
   14001fb3c:	mov    QWORD PTR [rsp+0x50],rbp
   14001fb41:	mov    edx,r12d
   14001fb44:	mov    QWORD PTR [rsp+0x20],r14
   14001fb49:	xor    dil,dil
   14001fb4c:	xor    r14b,r14b
   14001fb4f:	xor    ebp,ebp
   14001fb51:	call   0x140021730
   14001fb56:	mov    rdx,rax
   14001fb59:	test   rax,rax
   14001fb5c:	je     0x14001fc33
   14001fb62:	mov    QWORD PTR [rsp+0x58],rsi
   14001fb67:	mov    esi,ebp
   14001fb69:	mov    QWORD PTR [rsp+0x28],r13
   14001fb6e:	movabs r13,0x2000000400000001
   14001fb78:	movzx  ecx,BYTE PTR [rdx]
   14001fb7b:	cmp    cl,0x3d
   14001fb7e:	ja     0x14001fb8a
   14001fb80:	bt     r13,rcx
   14001fb84:	jb     0x14001fc29
   14001fb8a:	cmp    cl,0x7b
   14001fb8d:	je     0x14001fc29
   14001fb93:	cmp    cl,0x7d
   14001fb96:	je     0x14001fc29
   14001fb9c:	cmp    cl,0x5b
   14001fb9f:	movzx  edi,dil
   14001fba3:	cmove  edi,r12d
   14001fba7:	cmp    cl,0x5d
   14001fbaa:	jne    0x14001fbbe
   14001fbac:	test   dil,dil
   14001fbaf:	je     0x14001fbbe
   14001fbb1:	mov    BYTE PTR [r15],r12b
   14001fbb4:	xor    dil,dil
   14001fbb7:	mov    BYTE PTR [rbx+0x801e],r12b
   14001fbbe:	movsx  r8d,BYTE PTR [rdx]
   14001fbc2:	mov    ecx,r8d
   14001fbc5:	lea    eax,[r8-0x9]
   14001fbc9:	cmp    eax,0x4
   14001fbcc:	jbe    0x14001fbd3
   14001fbce:	cmp    ecx,0x20
   14001fbd1:	jne    0x14001fbd8
   14001fbd3:	test   dil,dil
   14001fbd6:	je     0x14001fc29
   14001fbd8:	cmp    rsi,0x7fff
   14001fbdf:	jge    0x14001fbed
   14001fbe1:	inc    ebp
   14001fbe3:	mov    BYTE PTR [rsi+rbx*1+0x18],r8b
   14001fbe8:	inc    rsi
   14001fbeb:	jmp    0x14001fc05
   14001fbed:	test   r14b,r14b
   14001fbf0:	jne    0x14001fc05
   14001fbf2:	mov    rcx,QWORD PTR [rbx]
   14001fbf5:	lea    rdx,[rip+0x18024]        # 0x140037c20
   14001fbfc:	movzx  r14d,r12b
   14001fc00:	call   0x140020630
   14001fc05:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fc09:	call   0x14001e1c0
   14001fc0e:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fc12:	xor    r8d,r8d
   14001fc15:	mov    edx,r12d
   14001fc18:	call   0x140021730
   14001fc1d:	mov    rdx,rax
   14001fc20:	test   rax,rax
   14001fc23:	jne    0x14001fb78
   14001fc29:	mov    rsi,QWORD PTR [rsp+0x58]
   14001fc2e:	mov    r13,QWORD PTR [rsp+0x28]
   14001fc33:	mov    r14,QWORD PTR [rsp+0x20]
   14001fc38:	movsxd rax,ebp
   14001fc3b:	mov    rbp,QWORD PTR [rsp+0x50]
   14001fc40:	mov    BYTE PTR [rax+rbx*1+0x18],0x0
   14001fc45:	jmp    0x14001fc57
   14001fc47:	mov    BYTE PTR [rbx+0x18],al
   14001fc4a:	mov    BYTE PTR [rbx+0x19],0x0
   14001fc4e:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fc52:	call   0x14001e1c0
   14001fc57:	inc    DWORD PTR [rbx+0x8018]
   14001fc5d:	lea    rax,[rbx+0x18]
   14001fc61:	mov    r12,QWORD PTR [rsp+0x60]
   14001fc66:	add    rsp,0x30
   14001fc6a:	pop    r15
   14001fc6c:	pop    rdi
   14001fc6d:	pop    rbx
   14001fc6e:	ret    
   14001fc6f:	int3   
   14001fc70:	mov    QWORD PTR [rsp+0x20],r9
   14001fc75:	mov    QWORD PTR [rsp+0x18],r8
   14001fc7a:	mov    QWORD PTR [rsp+0x10],rdx
   14001fc7f:	mov    QWORD PTR [rsp+0x8],rcx
   14001fc84:	push   rbp
   14001fc85:	push   rbx
   14001fc86:	push   rdi
   14001fc87:	lea    rbp,[rsp-0x3f]
   14001fc8c:	sub    rsp,0x90
   14001fc93:	mov    rbx,r9
   14001fc96:	mov    rdi,rdx
   14001fc99:	mov    r8,rcx
   14001fc9c:	test   rcx,rcx
   14001fc9f:	je     0x14001fcae
   14001fca1:	mov    eax,DWORD PTR [rcx+0x8]
   14001fca4:	and    eax,0xffffff
   14001fca9:	mov    DWORD PTR [rbp-0x1d],eax
   14001fcac:	jmp    0x14001fcb5
   14001fcae:	mov    DWORD PTR [rbp-0x1d],0xffffff
   14001fcb5:	movsxd rcx,DWORD PTR [rdx+0x108]
   14001fcbc:	lea    rax,[rbp-0x1d]
   14001fcc0:	cmp    ecx,0x40
   14001fcc3:	jge    0x14001fcca
   14001fcc5:	mov    eax,DWORD PTR [rax]
   14001fcc7:	mov    DWORD PTR [rdx+rcx*4],eax
   14001fcca:	mov    ecx,DWORD PTR [rdx+0x108]
   14001fcd0:	mov    eax,DWORD PTR [rdi+0x10c]
   14001fcd6:	cmp    eax,ecx
   14001fcd8:	lea    edx,[rcx+0x1]
   14001fcdb:	cmovg  ecx,eax
   14001fcde:	lea    eax,[rdx-0x1]
   14001fce1:	mov    DWORD PTR [rdi+0x108],edx
   14001fce7:	mov    DWORD PTR [rdi+0x10c],ecx
   14001fced:	cmp    eax,0x64
   14001fcf0:	jle    0x14001fd12
   14001fcf2:	lea    rdx,[rip+0x18027]        # 0x140037d20
   14001fcf9:	mov    rcx,rdi
   14001fcfc:	call   0x140020630
   14001fd01:	dec    DWORD PTR [rdi+0x108]
   14001fd07:	add    rsp,0x90
   14001fd0e:	pop    rdi
   14001fd0f:	pop    rbx
   14001fd10:	pop    rbp
   14001fd11:	ret    
   14001fd12:	cmp    edx,0x40
   14001fd15:	jge    0x14001fd21
   14001fd17:	movsxd rax,edx
   14001fd1a:	mov    DWORD PTR [rdi+rax*4],0xffffff
   14001fd21:	mov    edx,DWORD PTR [rdi+0x108]
   14001fd27:	mov    eax,DWORD PTR [rdi+0x10c]
   14001fd2d:	cmp    eax,edx
   14001fd2f:	mov    QWORD PTR [rsp+0x88],rsi
   14001fd37:	lea    ecx,[rdx+0x1]
   14001fd3a:	cmovg  edx,eax
   14001fd3d:	mov    DWORD PTR [rdi+0x108],ecx
   14001fd43:	dec    ecx
   14001fd45:	mov    DWORD PTR [rdi+0x10c],edx
   14001fd4b:	mov    eax,DWORD PTR [r8+0x8]
   14001fd4f:	mov    DWORD PTR [rbp-0x1d],ecx
   14001fd52:	test   eax,0x7000000
   14001fd57:	jne    0x14001fd97
   14001fd59:	bt     eax,0x1e
   14001fd5d:	jae    0x14001fd97
   14001fd5f:	mov    rsi,QWORD PTR [r8]
   14001fd62:	mov    QWORD PTR [rbp-0x19],rsi
   14001fd66:	test   rsi,rsi
   14001fd69:	je     0x14001fd97
   14001fd6b:	mov    rax,QWORD PTR [rsi+0xc]
   14001fd6f:	test   rax,rax
   14001fd72:	je     0x14001fd9d
   14001fd74:	nop    DWORD PTR [rax+0x0]
   14001fd78:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fd80:	mov    QWORD PTR [rbp-0x19],rax
   14001fd84:	mov    rax,QWORD PTR [rax+0xc]
   14001fd88:	test   rax,rax
   14001fd8b:	jne    0x14001fd80
   14001fd8d:	mov    rdi,QWORD PTR [rbp+0x67]
   14001fd91:	mov    rsi,QWORD PTR [rbp-0x19]
   14001fd95:	jmp    0x14001fd9d
   14001fd97:	xor    esi,esi
   14001fd99:	mov    QWORD PTR [rbp-0x19],rsi
   14001fd9d:	lea    r8,[rbp-0x21]
   14001fda1:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14001fda6:	lea    rdx,[rbp-0x20]
   14001fdaa:	mov    rcx,rbx
   14001fdad:	call   0x14001fa00
   14001fdb2:	test   rax,rax
   14001fdb5:	je     0x1400201a9
   14001fdbb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fdc0:	cmp    BYTE PTR [rax],0x0
   14001fdc3:	jne    0x14001fdd5
   14001fdc5:	mov    rax,QWORD PTR [rip+0x2838c]        # 0x140048158
   14001fdcc:	test   rax,rax
   14001fdcf:	je     0x1400201dc
   14001fdd5:	cmp    BYTE PTR [rax],0x7d
   14001fdd8:	jne    0x14001fde4
   14001fdda:	cmp    BYTE PTR [rbp-0x20],0x0
   14001fdde:	je     0x1400201b8
   14001fde4:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001fde8:	mov    r8,rsi
   14001fdeb:	mov    rdx,rax
   14001fdee:	call   0x14001dde0
   14001fdf3:	mov    rsi,rax
   14001fdf6:	test   rax,rax
   14001fdf9:	je     0x14001fe0d
   14001fdfb:	mov    ecx,DWORD PTR [rax+0x8]
   14001fdfe:	lea    rax,[rbp-0x9]
   14001fe02:	and    ecx,0xffffff
   14001fe08:	mov    DWORD PTR [rbp-0x9],ecx
   14001fe0b:	jmp    0x14001fe18
   14001fe0d:	mov    DWORD PTR [rbp-0x5],0xffffff
   14001fe14:	lea    rax,[rbp-0x5]
   14001fe18:	movsxd rcx,DWORD PTR [rbp-0x1d]
   14001fe1c:	cmp    ecx,0x40
   14001fe1f:	jge    0x14001fe26
   14001fe21:	mov    eax,DWORD PTR [rax]
   14001fe23:	mov    DWORD PTR [rdi+rcx*4],eax
   14001fe26:	lea    r8,[rbp-0x21]
   14001fe2a:	mov    rcx,rbx
   14001fe2d:	lea    rdx,[rbp-0x20]
   14001fe31:	call   0x14001fa00
   14001fe36:	cmp    BYTE PTR [rbp-0x21],0x0
   14001fe3a:	mov    rbx,rax
   14001fe3d:	mov    BYTE PTR [rbp-0x1f],0x1
   14001fe41:	je     0x14001fe9e
   14001fe43:	test   rax,rax
   14001fe46:	je     0x1400201f7
   14001fe4c:	mov    r9,QWORD PTR [rbp+0x7f]
   14001fe50:	lea    rdx,[rbp-0x1f]
   14001fe54:	mov    r8,rax
   14001fe57:	mov    BYTE PTR [rbp-0x1f],0x0
   14001fe5b:	lea    rcx,[rip+0x2830e]        # 0x140048170
   14001fe62:	mov    QWORD PTR [rsp+0x20],0x0
   14001fe6b:	call   0x1400247e0
   14001fe70:	test   al,al
   14001fe72:	jne    0x14001fe83
   14001fe74:	lea    rdx,[rip+0x17e0d]        # 0x140037c88
   14001fe7b:	mov    rcx,rdi
   14001fe7e:	call   0x140020630
   14001fe83:	movzx  eax,BYTE PTR [rbp-0x1f]
   14001fe87:	lea    r8,[rbp-0x21]
   14001fe8b:	mov    rcx,QWORD PTR [rbp+0x77]
   14001fe8f:	lea    rdx,[rbp-0x20]
   14001fe93:	mov    BYTE PTR [rbp-0x1f],al
   14001fe96:	call   0x14001fa00
   14001fe9b:	mov    rbx,rax
   14001fe9e:	test   rbx,rbx
   14001fea1:	je     0x1400201f7
   14001fea7:	cmp    BYTE PTR [rbx],0x3d
   14001feaa:	jne    0x14001ff48
   14001feb0:	movzx  eax,BYTE PTR [rbp-0x20]
   14001feb4:	test   al,al
   14001feb6:	jne    0x14001ff4c
   14001febc:	mov    rcx,QWORD PTR [rbp+0x77]
   14001fec0:	lea    r8,[rbp-0x21]
   14001fec4:	lea    rdx,[rbp-0x20]
   14001fec8:	call   0x14001fa00
   14001fecd:	cmp    BYTE PTR [rbp-0x21],0x0
   14001fed1:	mov    rbx,rax
   14001fed4:	je     0x14001ff48
   14001fed6:	test   rax,rax
   14001fed9:	je     0x14001ff05
   14001fedb:	mov    r9,QWORD PTR [rbp+0x7f]
   14001fedf:	mov    r8,rax
   14001fee2:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001fee6:	mov    rdx,rdi
   14001fee9:	call   0x14001de80
   14001feee:	mov    rcx,QWORD PTR [rbp+0x77]
   14001fef2:	lea    r8,[rbp-0x21]
   14001fef6:	lea    rdx,[rbp-0x20]
   14001fefa:	mov    BYTE PTR [rbp-0x1f],al
   14001fefd:	call   0x14001fa00
   14001ff02:	mov    rbx,rax
   14001ff05:	cmp    BYTE PTR [rbp-0x1f],0x0
   14001ff09:	je     0x14001ff48
   14001ff0b:	lea    rdx,[rbp-0x1]
   14001ff0f:	mov    rcx,rsi
   14001ff12:	call   0x14001e2b0
   14001ff17:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001ff1b:	mov    edx,DWORD PTR [rax]
   14001ff1d:	call   0x14001e120
   14001ff22:	mov    QWORD PTR [rbp-0x11],rax
   14001ff26:	test   rax,rax
   14001ff29:	je     0x14001ff48
   14001ff2b:	cmp    rax,rsi
   14001ff2e:	je     0x14001ff48
   14001ff30:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001ff34:	xor    r8d,r8d
   14001ff37:	mov    rdx,rax
   14001ff3a:	call   0x140020540
   14001ff3f:	mov    rcx,QWORD PTR [rbp-0x11]
   14001ff43:	call   0x140020790
   14001ff48:	movzx  eax,BYTE PTR [rbp-0x20]
   14001ff4c:	test   rbx,rbx
   14001ff4f:	je     0x1400201f7
   14001ff55:	movzx  ecx,BYTE PTR [rbx]
   14001ff58:	cmp    cl,0x7d
   14001ff5b:	jne    0x14001ff65
   14001ff5d:	test   al,al
   14001ff5f:	je     0x1400201e5
   14001ff65:	cmp    cl,0x7b
   14001ff68:	jne    0x14001ffb2
   14001ff6a:	test   al,al
   14001ff6c:	jne    0x14001ffb2
   14001ff6e:	movsxd rax,DWORD PTR [rbp-0x1d]
   14001ff72:	cmp    eax,0x40
   14001ff75:	jge    0x14001ff7e
   14001ff77:	mov    DWORD PTR [rdi+rax*4],0xffffff
   14001ff7e:	mov    rax,QWORD PTR [rbp+0x7f]
   14001ff82:	mov    rdx,rdi
   14001ff85:	mov    rbx,QWORD PTR [rbp+0x77]
   14001ff89:	mov    rcx,rsi
   14001ff8c:	mov    r8,QWORD PTR [rbp+0x6f]
   14001ff90:	mov    r9,rbx
   14001ff93:	mov    QWORD PTR [rsp+0x20],rax
   14001ff98:	call   0x14001fc70
   14001ff9d:	movzx  eax,BYTE PTR [rbp-0x1f]
   14001ffa1:	test   al,al
   14001ffa3:	je     0x140020146
   14001ffa9:	mov    QWORD PTR [rbp-0x19],rsi
   14001ffad:	jmp    0x140020190
   14001ffb2:	cmp    BYTE PTR [rbp-0x21],0x0
   14001ffb6:	jne    0x1400201ee
   14001ffbc:	mov    rcx,rsi
   14001ffbf:	call   0x14001e3b0
   14001ffc4:	or     rdi,0xffffffffffffffff
   14001ffc8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001ffd0:	inc    rdi
   14001ffd3:	cmp    BYTE PTR [rbx+rdi*1],0x0
   14001ffd7:	jne    0x14001ffd0
   14001ffd9:	movsxd rax,edi
   14001ffdc:	lea    rdx,[rbp+0xf]
   14001ffe0:	add    rax,rbx
   14001ffe3:	mov    r8d,0xa
   14001ffe9:	mov    rcx,rbx
   14001ffec:	mov    QWORD PTR [rbp-0x11],rax
   14001fff0:	call   QWORD PTR [rip+0x1226a]        # 0x140032260
   14001fff6:	mov    QWORD PTR [rbp+0x17],rax
   14001fffa:	mov    ecx,0x80000000
   14001ffff:	add    rcx,rax
   140020002:	mov    eax,0xffffffff
   140020007:	cmp    rcx,rax
   14002000a:	seta   BYTE PTR [rbp-0x1e]
   14002000e:	xor    ecx,ecx
   140020010:	call   QWORD PTR [rip+0x123f2]        # 0x140032408
   140020016:	lea    rdx,[rbp+0x7]
   14002001a:	mov    rcx,rbx
   14002001d:	call   QWORD PTR [rip+0x121fd]        # 0x140032220
   140020023:	xorps  xmm6,xmm6
   140020026:	cvtsd2ss xmm6,xmm0
   14002002a:	call   QWORD PTR [rip+0x123d0]        # 0x140032400
   140020030:	cmp    eax,0x22
   140020033:	movzx  eax,BYTE PTR [rbx]
   140020036:	sete   r8b
   14002003a:	test   al,al
   14002003c:	je     0x1400200db
   140020042:	cmp    edi,0x12
   140020045:	jne    0x14002009b
   140020047:	cmp    al,0x30
   140020049:	jne    0x14002009b
   14002004b:	cmp    BYTE PTR [rbx+0x1],0x78
   14002004f:	jne    0x14002009b
   140020051:	xor    r8d,r8d
   140020054:	mov    edx,0x2
   140020059:	nop    DWORD PTR [rax+0x0]
   140020060:	movzx  eax,BYTE PTR [rdx+rbx*1]
   140020064:	cmp    al,0x61
   140020066:	jl     0x14002006c
   140020068:	add    al,0xd9
   14002006a:	jmp    0x140020072
   14002006c:	cmp    al,0x41
   14002006e:	jl     0x140020072
   140020070:	add    al,0xf9
   140020072:	shl    r8,0x4
   140020076:	inc    rdx
   140020079:	movsx  eax,al
   14002007c:	sub    eax,0x30
   14002007f:	movsxd rcx,eax
   140020082:	add    rcx,r8
   140020085:	mov    r8,rcx
   140020088:	cmp    rdx,0x12
   14002008c:	jl     0x140020060
   14002008e:	mov    rdx,rcx
   140020091:	mov    rcx,rsi
   140020094:	call   0x14001e9f0
   140020099:	jmp    0x1400200e6
   14002009b:	mov    rax,QWORD PTR [rbp+0x7]
   14002009f:	mov    rcx,QWORD PTR [rbp+0xf]
   1400200a3:	mov    rdx,QWORD PTR [rbp-0x11]
   1400200a7:	cmp    rax,rcx
   1400200aa:	jbe    0x1400200c3
   1400200ac:	cmp    rax,rdx
   1400200af:	jne    0x1400200c3
   1400200b1:	test   r8b,r8b
   1400200b4:	jne    0x1400200c3
   1400200b6:	movaps xmm1,xmm6
   1400200b9:	mov    rcx,rsi
   1400200bc:	call   0x14001e7e0
   1400200c1:	jmp    0x1400200e6
   1400200c3:	cmp    rcx,rdx
   1400200c6:	jne    0x1400200db
   1400200c8:	cmp    BYTE PTR [rbp-0x1e],0x0
   1400200cc:	jne    0x1400200db
   1400200ce:	mov    edx,DWORD PTR [rbp+0x17]
   1400200d1:	mov    rcx,rsi
   1400200d4:	call   0x14001e820
   1400200d9:	jmp    0x1400200e6
   1400200db:	mov    rdx,rbx
   1400200de:	mov    rcx,rsi
   1400200e1:	call   0x14001e890
   1400200e6:	mov    rbx,QWORD PTR [rbp+0x77]
   1400200ea:	lea    r8,[rbp-0x21]
   1400200ee:	mov    rcx,rbx
   1400200f1:	lea    rdx,[rbp-0x20]
   1400200f5:	call   0x14001fa00
   1400200fa:	cmp    BYTE PTR [rbp-0x21],0x0
   1400200fe:	mov    rdi,QWORD PTR [rbp+0x67]
   140020102:	je     0x14002011c
   140020104:	mov    r9,QWORD PTR [rbp+0x7f]
   140020108:	mov    r8,rax
   14002010b:	mov    rcx,QWORD PTR [rbp+0x5f]
   14002010f:	mov    rdx,rdi
   140020112:	call   0x14001de80
   140020117:	jmp    0x14001ffa1
   14002011c:	cmp    BYTE PTR [rbx+0x801c],0x0
   140020123:	jne    0x14001ff9d
   140020129:	cmp    DWORD PTR [rbx+0x8018],0x0
   140020130:	movzx  eax,BYTE PTR [rbp-0x1f]
   140020134:	je     0x14001ffa1
   14002013a:	mov    BYTE PTR [rbx+0x801c],0x1
   140020141:	jmp    0x14001ffa1
   140020146:	mov    rax,QWORD PTR [rbp-0x19]
   14002014a:	test   rax,rax
   14002014d:	jne    0x14002015c
   14002014f:	mov    rax,QWORD PTR [rbp+0x5f]
   140020153:	and    DWORD PTR [rax+0x8],0xbfffffff
   14002015a:	jmp    0x140020164
   14002015c:	mov    QWORD PTR [rax+0xc],0x0
   140020164:	test   rsi,rsi
   140020167:	je     0x14002018c
   140020169:	mov    rcx,rsi
   14002016c:	call   0x140020420
   140020171:	mov    rcx,rsi
   140020174:	call   0x14001e3b0
   140020179:	call   QWORD PTR [rip+0x12279]        # 0x1400323f8
   14002017f:	mov    rdx,rsi
   140020182:	mov    rcx,rax
   140020185:	mov    r8,QWORD PTR [rax]
   140020188:	call   QWORD PTR [r8+0x8]
   14002018c:	mov    rsi,QWORD PTR [rbp-0x19]
   140020190:	lea    r8,[rbp-0x21]
   140020194:	mov    rcx,rbx
   140020197:	lea    rdx,[rbp-0x20]
   14002019b:	call   0x14001fa00
   1400201a0:	test   rax,rax
   1400201a3:	jne    0x14001fdc0
   1400201a9:	lea    rdx,[rip+0x17ba0]        # 0x140037d50
   1400201b0:	mov    rcx,rdi
   1400201b3:	call   0x140020630
   1400201b8:	dec    DWORD PTR [rdi+0x108]
   1400201be:	dec    DWORD PTR [rdi+0x108]
   1400201c4:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   1400201c9:	mov    rsi,QWORD PTR [rsp+0x88]
   1400201d1:	add    rsp,0x90
   1400201d8:	pop    rdi
   1400201d9:	pop    rbx
   1400201da:	pop    rbp
   1400201db:	ret    
   1400201dc:	lea    rdx,[rip+0x17ba5]        # 0x140037d88
   1400201e3:	jmp    0x1400201b0
   1400201e5:	lea    rdx,[rip+0x17bf4]        # 0x140037de0
   1400201ec:	jmp    0x1400201b0
   1400201ee:	lea    rdx,[rip+0x17c1b]        # 0x140037e10
   1400201f5:	jmp    0x1400201b0
   1400201f7:	lea    rdx,[rip+0x17bba]        # 0x140037db8
   1400201fe:	jmp    0x1400201b0
   140020200:	rex push rbp
   140020202:	sub    rsp,0x40
   140020206:	mov    eax,DWORD PTR [rdx+0x8]
   140020209:	mov    rbp,rcx
   14002020c:	test   eax,0x7000000
   140020211:	jne    0x14002040c
   140020217:	bt     eax,0x1e
   14002021b:	jae    0x14002040c
   140020221:	mov    QWORD PTR [rsp+0x38],rsi
   140020226:	mov    rsi,QWORD PTR [rdx]
   140020229:	test   rsi,rsi
   14002022c:	je     0x140020407
   140020232:	mov    QWORD PTR [rsp+0x50],rbx
   140020237:	mov    QWORD PTR [rsp+0x30],rdi
   14002023c:	nop    DWORD PTR [rax+0x0]
   140020240:	mov    rcx,rbp
   140020243:	call   0x14001e770
   140020248:	mov    rdi,rax
   14002024b:	test   rax,rax
   14002024e:	je     0x1400202c7
   140020250:	test   rax,rax
   140020253:	je     0x140020273
   140020255:	call   QWORD PTR [rip+0x1219d]        # 0x1400323f8
   14002025b:	mov    edx,DWORD PTR [rdi+0x8]
   14002025e:	mov    rcx,rax
   140020261:	and    edx,0xffffff
   140020267:	mov    r8,QWORD PTR [rax]
   14002026a:	call   QWORD PTR [r8+0x18]
   14002026e:	mov    rbx,rax
   140020271:	jmp    0x14002027a
   140020273:	lea    rbx,[rip+0x12526]        # 0x1400327a0
   14002027a:	test   rsi,rsi
   14002027d:	je     0x14002029a
   14002027f:	call   QWORD PTR [rip+0x12173]        # 0x1400323f8
   140020285:	mov    edx,DWORD PTR [rsi+0x8]
   140020288:	mov    rcx,rax
   14002028b:	and    edx,0xffffff
   140020291:	mov    r8,QWORD PTR [rax]
   140020294:	call   QWORD PTR [r8+0x18]
   140020298:	jmp    0x1400202a1
   14002029a:	lea    rax,[rip+0x124ff]        # 0x1400327a0
   1400202a1:	sub    rbx,rax
   1400202a4:	movzx  edx,BYTE PTR [rax]
   1400202a7:	movzx  ecx,BYTE PTR [rax+rbx*1]
   1400202ab:	sub    edx,ecx
   1400202ad:	jne    0x1400202b6
   1400202af:	inc    rax
   1400202b2:	test   ecx,ecx
   1400202b4:	jne    0x1400202a4
   1400202b6:	test   edx,edx
   1400202b8:	je     0x14002035a
   1400202be:	mov    rdi,QWORD PTR [rdi+0xc]
   1400202c2:	test   rdi,rdi
   1400202c5:	jne    0x140020255
   1400202c7:	call   QWORD PTR [rip+0x1212b]        # 0x1400323f8
   1400202cd:	mov    rcx,rax
   1400202d0:	mov    rdx,QWORD PTR [rax]
   1400202d3:	call   QWORD PTR [rdx]
   1400202d5:	mov    rbx,rax
   1400202d8:	test   rax,rax
   1400202db:	je     0x14002036a
   1400202e1:	mov    ecx,DWORD PTR [rax+0x8]
   1400202e4:	xor    edi,edi
   1400202e6:	and    ecx,0x80ffffff
   1400202ec:	mov    QWORD PTR [rax],rdi
   1400202ef:	or     ecx,0xffffff
   1400202f5:	mov    DWORD PTR [rax+0x8],ecx
   1400202f8:	mov    rcx,rax
   1400202fb:	call   0x14001e3b0
   140020300:	and    DWORD PTR [rbx+0x8],0xf7ffffff
   140020307:	mov    QWORD PTR [rbx+0xc],rdi
   14002030b:	mov    DWORD PTR [rsp+0x58],0xffffff
   140020313:	call   QWORD PTR [rip+0x120df]        # 0x1400323f8
   140020319:	xor    r9d,r9d
   14002031c:	mov    BYTE PTR [rsp+0x20],0x1
   140020321:	lea    r8,[rsp+0x58]
   140020326:	mov    rcx,rax
   140020329:	lea    rdx,[rsp+0x60]
   14002032e:	mov    r10,QWORD PTR [rax]
   140020331:	call   QWORD PTR [r10+0x40]
   140020335:	mov    ecx,DWORD PTR [rbx+0x8]
   140020338:	mov    edx,edi
   14002033a:	mov    eax,DWORD PTR [rax]
   14002033c:	cmp    eax,DWORD PTR [rsp+0x58]
   140020340:	sete   dl
   140020343:	and    ecx,0xdf000000
   140020349:	shl    edx,0x1d
   14002034c:	and    eax,0xffffff
   140020351:	or     edx,ecx
   140020353:	or     edx,eax
   140020355:	mov    DWORD PTR [rbx+0x8],edx
   140020358:	jmp    0x14002036c
   14002035a:	mov    rdx,rsi
   14002035d:	mov    rcx,rdi
   140020360:	call   0x140020200
   140020365:	jmp    0x1400203f0
   14002036a:	xor    ebx,ebx
   14002036c:	mov    eax,DWORD PTR [rsi+0x8]
   14002036f:	mov    rdx,rsi
   140020372:	xor    eax,DWORD PTR [rbx+0x8]
   140020375:	and    eax,0xffffff
   14002037a:	xor    DWORD PTR [rbx+0x8],eax
   14002037d:	mov    ecx,DWORD PTR [rsi+0x8]
   140020380:	xor    ecx,DWORD PTR [rbx+0x8]
   140020383:	and    ecx,0x20000000
   140020389:	xor    DWORD PTR [rbx+0x8],ecx
   14002038c:	mov    rcx,rbx
   14002038f:	call   0x14001e450
   140020394:	mov    rdx,rbx
   140020397:	mov    rcx,rsi
   14002039a:	call   0x14001dd30
   14002039f:	mov    eax,DWORD PTR [rbp+0x8]
   1400203a2:	mov    ecx,eax
   1400203a4:	and    ecx,0x7000000
   1400203aa:	jne    0x1400203d9
   1400203ac:	bt     eax,0x1e
   1400203b0:	jae    0x1400203d9
   1400203b2:	mov    rax,QWORD PTR [rbp+0x0]
   1400203b6:	test   rax,rax
   1400203b9:	je     0x1400203d9
   1400203bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400203c0:	test   rax,rax
   1400203c3:	je     0x1400203d3
   1400203c5:	mov    rcx,QWORD PTR [rax+0xc]
   1400203c9:	test   rcx,rcx
   1400203cc:	je     0x1400203d3
   1400203ce:	mov    rax,rcx
   1400203d1:	jmp    0x1400203c0
   1400203d3:	mov    QWORD PTR [rax+0xc],rbx
   1400203d7:	jmp    0x1400203f0
   1400203d9:	test   ecx,ecx
   1400203db:	je     0x1400203e5
   1400203dd:	mov    rcx,rbp
   1400203e0:	call   0x14001e3b0
   1400203e5:	or     DWORD PTR [rbp+0x8],0x40000000
   1400203ec:	mov    QWORD PTR [rbp+0x0],rbx
   1400203f0:	mov    rsi,QWORD PTR [rsi+0xc]
   1400203f4:	test   rsi,rsi
   1400203f7:	jne    0x140020240
   1400203fd:	mov    rdi,QWORD PTR [rsp+0x30]
   140020402:	mov    rbx,QWORD PTR [rsp+0x50]
   140020407:	mov    rsi,QWORD PTR [rsp+0x38]
   14002040c:	add    rsp,0x40
   140020410:	pop    rbp
   140020411:	ret    
   140020412:	int3   
   140020413:	int3   
   140020414:	int3   
   140020415:	int3   
   140020416:	int3   
   140020417:	int3   
   140020418:	int3   
   140020419:	int3   
   14002041a:	int3   
   14002041b:	int3   
   14002041c:	int3   
   14002041d:	int3   
   14002041e:	int3   
   14002041f:	int3   
   140020420:	mov    QWORD PTR [rsp+0x10],rsi
   140020425:	push   rdi
   140020426:	sub    rsp,0x20
   14002042a:	mov    eax,DWORD PTR [rcx+0x8]
   14002042d:	xor    esi,esi
   14002042f:	mov    QWORD PTR [rsp+0x30],rbx
   140020434:	mov    rdi,rcx
   140020437:	test   eax,0x7000000
   14002043c:	jne    0x14002046a
   14002043e:	bt     eax,0x1e
   140020442:	jae    0x14002046a
   140020444:	mov    rcx,QWORD PTR [rcx]
   140020447:	test   rcx,rcx
   14002044a:	je     0x14002046a
   14002044c:	nop    DWORD PTR [rax+0x0]
   140020450:	mov    rbx,QWORD PTR [rcx+0xc]
   140020454:	mov    edx,0x1
   140020459:	mov    QWORD PTR [rcx+0xc],rsi
   14002045d:	call   0x14001dcc0
   140020462:	mov    rcx,rbx
   140020465:	test   rbx,rbx
   140020468:	jne    0x140020450
   14002046a:	and    DWORD PTR [rdi+0x8],0xbfffffff
   140020471:	mov    rcx,QWORD PTR [rdi+0xc]
   140020475:	test   rcx,rcx
   140020478:	je     0x14002049f
   14002047a:	nop    WORD PTR [rax+rax*1+0x0]
   140020480:	cmp    rcx,rdi
   140020483:	je     0x14002049f
   140020485:	mov    rbx,QWORD PTR [rcx+0xc]
   140020489:	mov    edx,0x1
   14002048e:	mov    QWORD PTR [rcx+0xc],rsi
   140020492:	call   0x14001dcc0
   140020497:	mov    rcx,rbx
   14002049a:	test   rbx,rbx
   14002049d:	jne    0x140020480
   14002049f:	mov    ecx,DWORD PTR [rdi+0x8]
   1400204a2:	mov    eax,ecx
   1400204a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400204a9:	shr    eax,0x18
   1400204ac:	and    eax,0x7
   1400204af:	sub    eax,0x1
   1400204b2:	je     0x140020501
   1400204b4:	sub    eax,0x4
   1400204b7:	je     0x1400204e1
   1400204b9:	cmp    eax,0x2
   1400204bc:	jne    0x140020522
   1400204be:	bt     ecx,0x1c
   1400204c2:	jae    0x140020522
   1400204c4:	mov    rcx,QWORD PTR [rdi]
   1400204c7:	lea    edx,[rax+0x6]
   1400204ca:	call   0x14002639c
   1400204cf:	and    DWORD PTR [rdi+0x8],0xa8ffffff
   1400204d6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400204db:	add    rsp,0x20
   1400204df:	pop    rdi
   1400204e0:	ret    
   1400204e1:	cmp    QWORD PTR [rdi],rsi
   1400204e4:	je     0x140020522
   1400204e6:	bt     ecx,0x1c
   1400204ea:	jae    0x14002051f
   1400204ec:	call   QWORD PTR [rip+0x11f06]        # 0x1400323f8
   1400204f2:	mov    rdx,QWORD PTR [rdi]
   1400204f5:	mov    rcx,rax
   1400204f8:	mov    r8,QWORD PTR [rax]
   1400204fb:	call   QWORD PTR [r8+0x68]
   1400204ff:	jmp    0x14002051f
   140020501:	cmp    QWORD PTR [rdi],rsi
   140020504:	je     0x140020522
   140020506:	bt     ecx,0x1c
   14002050a:	jae    0x14002051f
   14002050c:	call   QWORD PTR [rip+0x11ee6]        # 0x1400323f8
   140020512:	mov    rdx,QWORD PTR [rdi]
   140020515:	mov    rcx,rax
   140020518:	mov    r8,QWORD PTR [rax]
   14002051b:	call   QWORD PTR [r8+0x58]
   14002051f:	mov    QWORD PTR [rdi],rsi
   140020522:	and    DWORD PTR [rdi+0x8],0xa8ffffff
   140020529:	mov    rsi,QWORD PTR [rsp+0x38]
   14002052e:	add    rsp,0x20
   140020532:	pop    rdi
   140020533:	ret    
   140020534:	int3   
   140020535:	int3   
   140020536:	int3   
   140020537:	int3   
   140020538:	int3   
   140020539:	int3   
   14002053a:	int3   
   14002053b:	int3   
   14002053c:	int3   
   14002053d:	int3   
   14002053e:	int3   
   14002053f:	int3   
   140020540:	test   rdx,rdx
   140020543:	je     0x140020626
   140020549:	mov    QWORD PTR [rsp+0x10],rbx
   14002054e:	mov    QWORD PTR [rsp+0x18],rbp
   140020553:	push   rdi
   140020554:	sub    rsp,0x20
   140020558:	mov    eax,DWORD PTR [rcx+0x8]
   14002055b:	mov    rdi,rcx
   14002055e:	mov    ecx,eax
   140020560:	movzx  ebp,r8b
   140020564:	mov    rbx,rdx
   140020567:	and    ecx,0x7000000
   14002056d:	jne    0x14002057a
   14002056f:	bt     eax,0x1e
   140020573:	jae    0x14002057a
   140020575:	mov    rdx,QWORD PTR [rdi]
   140020578:	jmp    0x14002057c
   14002057a:	xor    edx,edx
   14002057c:	mov    QWORD PTR [rsp+0x30],rsi
   140020581:	cmp    rdx,rbx
   140020584:	jne    0x1400205b0
   140020586:	mov    rsi,QWORD PTR [rbx+0xc]
   14002058a:	test   rsi,rsi
   14002058d:	jne    0x140020598
   14002058f:	btr    eax,0x1e
   140020593:	mov    DWORD PTR [rdi+0x8],eax
   140020596:	jmp    0x1400205e2
   140020598:	test   ecx,ecx
   14002059a:	je     0x1400205a4
   14002059c:	mov    rcx,rdi
   14002059f:	call   0x14001e3b0
   1400205a4:	or     DWORD PTR [rdi+0x8],0x40000000
   1400205ab:	mov    QWORD PTR [rdi],rsi
   1400205ae:	jmp    0x1400205e2
   1400205b0:	test   ecx,ecx
   1400205b2:	jne    0x1400205e2
   1400205b4:	bt     eax,0x1e
   1400205b8:	jae    0x1400205e2
   1400205ba:	mov    rcx,QWORD PTR [rdi]
   1400205bd:	test   rcx,rcx
   1400205c0:	je     0x1400205e2
   1400205c2:	mov    rax,QWORD PTR [rcx+0xc]
   1400205c6:	test   rax,rax
   1400205c9:	je     0x1400205e2
   1400205cb:	cmp    rax,rbx
   1400205ce:	je     0x1400205da
   1400205d0:	mov    rcx,rax
   1400205d3:	test   rax,rax
   1400205d6:	jne    0x1400205c2
   1400205d8:	jmp    0x1400205e2
   1400205da:	mov    rax,QWORD PTR [rbx+0xc]
   1400205de:	mov    QWORD PTR [rcx+0xc],rax
   1400205e2:	mov    rsi,QWORD PTR [rsp+0x30]
   1400205e7:	mov    QWORD PTR [rbx+0xc],0x0
   1400205ef:	test   bpl,bpl
   1400205f2:	je     0x140020617
   1400205f4:	mov    rcx,rbx
   1400205f7:	call   0x140020420
   1400205fc:	mov    rcx,rbx
   1400205ff:	call   0x14001e3b0
   140020604:	call   QWORD PTR [rip+0x11dee]        # 0x1400323f8
   14002060a:	mov    rdx,rbx
   14002060d:	mov    rcx,rax
   140020610:	mov    r8,QWORD PTR [rax]
   140020613:	call   QWORD PTR [r8+0x8]
   140020617:	mov    rbx,QWORD PTR [rsp+0x38]
   14002061c:	mov    rbp,QWORD PTR [rsp+0x40]
   140020621:	add    rsp,0x20
   140020625:	pop    rdi
   140020626:	ret    
   140020627:	int3   
   140020628:	int3   
   140020629:	int3   
   14002062a:	int3   
   14002062b:	int3   
   14002062c:	int3   
   14002062d:	int3   
   14002062e:	int3   
   14002062f:	int3   
   140020630:	mov    QWORD PTR [rsp+0x10],rbx
   140020635:	push   rdi
   140020636:	sub    rsp,0x130
   14002063d:	mov    r9,QWORD PTR [rcx+0x100]
   140020644:	mov    rdi,rcx
   140020647:	mov    r8,rdx
   14002064a:	lea    rcx,[rsp+0x20]
   14002064f:	lea    rdx,[rip+0x17592]        # 0x140037be8
   140020656:	call   0x140001600
   14002065b:	mov    rcx,QWORD PTR [rdi+0x120]
   140020662:	lea    rdx,[rax+0x9]
   140020666:	mov    r8,QWORD PTR [rcx]
   140020669:	call   QWORD PTR [r8+0x10]
   14002066d:	xor    ebx,ebx
   14002066f:	cmp    DWORD PTR [rdi+0x10c],ebx
   140020675:	jle    0x14002070c
   14002067b:	mov    QWORD PTR [rsp+0x140],rsi
   140020683:	mov    rsi,rdi
   140020686:	cmp    ebx,0x40
   140020689:	jge    0x1400206f6
   14002068b:	cmp    DWORD PTR [rsi],0xffffff
   140020691:	je     0x1400206f6
   140020693:	cmp    ebx,DWORD PTR [rdi+0x108]
   140020699:	jge    0x1400206ba
   14002069b:	call   QWORD PTR [rip+0x11d57]        # 0x1400323f8
   1400206a1:	movsxd rcx,ebx
   1400206a4:	mov    r8,QWORD PTR [rax]
   1400206a7:	mov    edx,DWORD PTR [rdi+rcx*4]
   1400206aa:	mov    rcx,rax
   1400206ad:	call   QWORD PTR [r8+0x18]
   1400206b1:	lea    rdx,[rip+0x17550]        # 0x140037c08
   1400206b8:	jmp    0x1400206d7
   1400206ba:	call   QWORD PTR [rip+0x11d38]        # 0x1400323f8
   1400206c0:	movsxd rcx,ebx
   1400206c3:	mov    r8,QWORD PTR [rax]
   1400206c6:	mov    edx,DWORD PTR [rdi+rcx*4]
   1400206c9:	mov    rcx,rax
   1400206cc:	call   QWORD PTR [r8+0x18]
   1400206d0:	lea    rdx,[rip+0x17539]        # 0x140037c10
   1400206d7:	mov    r8,rax
   1400206da:	lea    rcx,[rsp+0x20]
   1400206df:	call   0x140001600
   1400206e4:	mov    rcx,QWORD PTR [rdi+0x120]
   1400206eb:	lea    rdx,[rax+0x9]
   1400206ef:	mov    r8,QWORD PTR [rcx]
   1400206f2:	call   QWORD PTR [r8+0x10]
   1400206f6:	inc    ebx
   1400206f8:	add    rsi,0x4
   1400206fc:	cmp    ebx,DWORD PTR [rdi+0x10c]
   140020702:	jl     0x140020686
   140020704:	mov    rsi,QWORD PTR [rsp+0x140]
   14002070c:	mov    rcx,QWORD PTR [rdi+0x120]
   140020713:	lea    rdx,[rip+0x13c1e]        # 0x140034338
   14002071a:	mov    rax,QWORD PTR [rcx]
   14002071d:	call   QWORD PTR [rax+0x10]
   140020720:	mov    rbx,QWORD PTR [rsp+0x148]
   140020728:	mov    BYTE PTR [rdi+0x110],0x1
   14002072f:	add    rsp,0x130
   140020736:	pop    rdi
   140020737:	ret    
   140020738:	int3   
   140020739:	int3   
   14002073a:	int3   
   14002073b:	int3   
   14002073c:	int3   
   14002073d:	int3   
   14002073e:	int3   
   14002073f:	int3   
   140020740:	mov    QWORD PTR [rsp+0x8],rbx
   140020745:	push   rdi
   140020746:	sub    rsp,0x20
   14002074a:	mov    edi,r8d
   14002074d:	mov    r8b,0x1
   140020750:	call   0x14001ded0
   140020755:	mov    rbx,rax
   140020758:	test   rax,rax
   14002075b:	je     0x140020775
   14002075d:	mov    rcx,rax
   140020760:	call   0x14001e3b0
   140020765:	and    DWORD PTR [rbx+0x8],0xfaffffff
   14002076c:	or     DWORD PTR [rbx+0x8],0x2000000
   140020773:	mov    DWORD PTR [rbx],edi
   140020775:	mov    rbx,QWORD PTR [rsp+0x30]
   14002077a:	add    rsp,0x20
   14002077e:	pop    rdi
   14002077f:	ret    
   140020780:	lea    rcx,[rip+0x13b81]        # 0x140034308
   140020787:	rex.W jmp QWORD PTR [rip+0x11c22]        # 0x1400323b0
   14002078e:	int3   
   14002078f:	int3   
   140020790:	test   rcx,rcx
   140020793:	je     0x1400207c2
   140020795:	push   rbx
   140020796:	sub    rsp,0x20
   14002079a:	mov    rbx,rcx
   14002079d:	call   0x140020420
   1400207a2:	mov    rcx,rbx
   1400207a5:	call   0x14001e3b0
   1400207aa:	call   QWORD PTR [rip+0x11c48]        # 0x1400323f8
   1400207b0:	mov    rdx,rbx
   1400207b3:	mov    rcx,rax
   1400207b6:	mov    r8,QWORD PTR [rax]
   1400207b9:	call   QWORD PTR [r8+0x8]
   1400207bd:	add    rsp,0x20
   1400207c1:	pop    rbx
   1400207c2:	ret    
   1400207c3:	int3   
   1400207c4:	int3   
   1400207c5:	int3   
   1400207c6:	int3   
   1400207c7:	int3   
   1400207c8:	int3   
   1400207c9:	int3   
   1400207ca:	int3   
   1400207cb:	int3   
   1400207cc:	int3   
   1400207cd:	int3   
   1400207ce:	int3   
   1400207cf:	int3   
   1400207d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400207d5:	push   rdi
   1400207d6:	sub    rsp,0x20
   1400207da:	test   BYTE PTR [rcx+0x18],0x1
   1400207de:	movzx  edi,dl
   1400207e1:	mov    rbx,rcx
   1400207e4:	jne    0x140020838
   1400207e6:	test   BYTE PTR [rcx+0x19],0x8
   1400207ea:	jne    0x140020838
   1400207ec:	mov    eax,DWORD PTR [rcx+0x14]
   1400207ef:	mov    ecx,DWORD PTR [rcx+0x24]
   1400207f2:	cmp    eax,ecx
   1400207f4:	jl     0x1400207ff
   1400207f6:	sub    eax,ecx
   1400207f8:	inc    eax
   1400207fa:	cmp    DWORD PTR [rbx+0x8],eax
   1400207fd:	jge    0x14002081d
   1400207ff:	mov    edx,0x1
   140020804:	mov    rcx,rbx
   140020807:	call   QWORD PTR [rbx+0x30]
   14002080a:	test   al,al
   14002080c:	jne    0x14002081d
   14002080e:	or     BYTE PTR [rbx+0x18],0x1
   140020812:	mov    rbx,QWORD PTR [rsp+0x30]
   140020817:	add    rsp,0x20
   14002081b:	pop    rdi
   14002081c:	ret    
   14002081d:	mov    eax,DWORD PTR [rbx+0x14]
   140020820:	sub    eax,DWORD PTR [rbx+0x24]
   140020823:	movsxd rcx,eax
   140020826:	mov    rax,QWORD PTR [rbx]
   140020829:	mov    BYTE PTR [rcx+rax*1],dil
   14002082d:	mov    rcx,rbx
   140020830:	inc    DWORD PTR [rbx+0x14]
   140020833:	call   0x1400209e0
   140020838:	mov    rbx,QWORD PTR [rsp+0x30]
   14002083d:	add    rsp,0x20
   140020841:	pop    rdi
   140020842:	ret    
   140020843:	int3   
   140020844:	int3   
   140020845:	int3   
   140020846:	int3   
   140020847:	int3   
   140020848:	int3   
   140020849:	int3   
   14002084a:	int3   
   14002084b:	int3   
   14002084c:	int3   
   14002084d:	int3   
   14002084e:	int3   
   14002084f:	int3   
   140020850:	mov    QWORD PTR [rsp+0x8],rbx
   140020855:	mov    QWORD PTR [rsp+0x10],rbp
   14002085a:	mov    QWORD PTR [rsp+0x18],rsi
   14002085f:	push   rdi
   140020860:	sub    rsp,0x20
   140020864:	xor    ebp,ebp
   140020866:	mov    DWORD PTR [rcx+0x8],r8d
   14002086a:	and    edx,0x3fffffff
   140020870:	mov    QWORD PTR [rcx],rbp
   140020873:	mov    DWORD PTR [rcx+0xc],edx
   140020876:	mov    esi,r9d
   140020879:	mov    edi,r8d
   14002087c:	mov    rbx,rcx
   14002087f:	test   r8d,r8d
   140020882:	je     0x1400208a1
   140020884:	call   QWORD PTR [rip+0x11c36]        # 0x1400324c0
   14002088a:	mov    rax,QWORD PTR [rip+0x11aff]        # 0x140032390
   140020891:	movsxd rdx,DWORD PTR [rbx+0x8]
   140020895:	mov    rcx,QWORD PTR [rax]
   140020898:	mov    rax,QWORD PTR [rcx]
   14002089b:	call   QWORD PTR [rax+0x8]
   14002089e:	mov    QWORD PTR [rbx],rax
   1400208a1:	mov    BYTE PTR [rbx+0x18],bpl
   1400208a5:	and    DWORD PTR [rbx+0x38],0xfffffffc
   1400208a9:	mov    QWORD PTR [rbx+0x10],rbp
   1400208ad:	mov    DWORD PTR [rbx+0x1c],ebp
   1400208b0:	mov    DWORD PTR [rbx+0x24],ebp
   1400208b3:	mov    BYTE PTR [rbx+0x19],sil
   1400208b7:	test   edi,edi
   1400208b9:	je     0x14002090d
   1400208bb:	test   sil,0x8
   1400208bf:	jne    0x14002090d
   1400208c1:	mov    DWORD PTR [rbx+0x20],0xffffffff
   1400208c8:	test   bpl,0x1
   1400208cc:	jne    0x140020905
   1400208ce:	cmp    DWORD PTR [rbx+0x8],0x1
   1400208d2:	jge    0x1400208f3
   1400208d4:	mov    edx,0x1
   1400208d9:	mov    rcx,rbx
   1400208dc:	call   QWORD PTR [rbx+0x30]
   1400208df:	test   al,al
   1400208e1:	jne    0x1400208f3
   1400208e3:	or     BYTE PTR [rbx+0x18],0x1
   1400208e7:	mov    eax,DWORD PTR [rbx+0x14]
   1400208ea:	and    BYTE PTR [rbx+0x18],0xfe
   1400208ee:	mov    DWORD PTR [rbx+0x20],eax
   1400208f1:	jmp    0x140020910
   1400208f3:	mov    eax,DWORD PTR [rbx+0x14]
   1400208f6:	sub    eax,DWORD PTR [rbx+0x24]
   1400208f9:	js     0x140020905
   1400208fb:	movsxd rcx,eax
   1400208fe:	mov    rax,QWORD PTR [rbx]
   140020901:	mov    BYTE PTR [rcx+rax*1],bpl
   140020905:	mov    eax,DWORD PTR [rbx+0x14]
   140020908:	mov    DWORD PTR [rbx+0x20],eax
   14002090b:	jmp    0x140020910
   14002090d:	mov    DWORD PTR [rbx+0x20],ebp
   140020910:	mov    rbp,QWORD PTR [rsp+0x38]
   140020915:	lea    rax,[rip+0xfffffffffffe3094]        # 0x1400039b0
   14002091c:	mov    rsi,QWORD PTR [rsp+0x40]
   140020921:	mov    QWORD PTR [rbx+0x28],rax
   140020925:	lea    rax,[rip+0x1344]        # 0x140021c70
   14002092c:	mov    QWORD PTR [rbx+0x30],rax
   140020930:	mov    rax,rbx
   140020933:	mov    rbx,QWORD PTR [rsp+0x30]
   140020938:	add    rsp,0x20
   14002093c:	pop    rdi
   14002093d:	ret    
   14002093e:	int3   
   14002093f:	int3   
   140020940:	rex push rbx
   140020942:	sub    rsp,0x20
   140020946:	mov    QWORD PTR [rcx],rdx
   140020949:	xor    eax,eax
   14002094b:	mov    DWORD PTR [rcx+0x8],r8d
   14002094f:	mov    rbx,rcx
   140020952:	mov    QWORD PTR [rcx+0xc],0x40000000
   14002095a:	mov    BYTE PTR [rcx+0x18],0x0
   14002095e:	and    DWORD PTR [rcx+0x38],0xfffffffc
   140020962:	mov    DWORD PTR [rcx+0x14],eax
   140020965:	mov    DWORD PTR [rcx+0x1c],eax
   140020968:	mov    DWORD PTR [rcx+0x24],eax
   14002096b:	mov    BYTE PTR [rcx+0x19],r9b
   14002096f:	test   r9b,0x8
   140020973:	je     0x14002097f
   140020975:	mov    DWORD PTR [rcx+0x14],r8d
   140020979:	mov    DWORD PTR [rcx+0x20],r8d
   14002097d:	jmp    0x1400209c0
   14002097f:	test   BYTE PTR [rcx+0x18],0x1
   140020983:	mov    DWORD PTR [rcx+0x20],0xffffffff
   14002098a:	jne    0x1400209ba
   14002098c:	cmp    r8d,0x1
   140020990:	jge    0x1400209a8
   140020992:	mov    edx,0x1
   140020997:	call   QWORD PTR [rcx+0x30]
   14002099a:	test   al,al
   14002099c:	jne    0x1400209a8
   14002099e:	or     BYTE PTR [rbx+0x18],0x1
   1400209a2:	and    BYTE PTR [rbx+0x18],0xfe
   1400209a6:	jmp    0x1400209ba
   1400209a8:	mov    eax,DWORD PTR [rbx+0x14]
   1400209ab:	sub    eax,DWORD PTR [rbx+0x24]
   1400209ae:	js     0x1400209ba
   1400209b0:	movsxd rcx,eax
   1400209b3:	mov    rax,QWORD PTR [rbx]
   1400209b6:	mov    BYTE PTR [rcx+rax*1],0x0
   1400209ba:	mov    eax,DWORD PTR [rbx+0x14]
   1400209bd:	mov    DWORD PTR [rbx+0x20],eax
   1400209c0:	lea    rax,[rip+0xfffffffffffe2fe9]        # 0x1400039b0
   1400209c7:	mov    QWORD PTR [rbx+0x28],rax
   1400209cb:	lea    rax,[rip+0x129e]        # 0x140021c70
   1400209d2:	mov    QWORD PTR [rbx+0x30],rax
   1400209d6:	mov    rax,rbx
   1400209d9:	add    rsp,0x20
   1400209dd:	pop    rbx
   1400209de:	ret    
   1400209df:	int3   
   1400209e0:	rex push rbx
   1400209e2:	sub    rsp,0x20
   1400209e6:	mov    eax,DWORD PTR [rcx+0x14]
   1400209e9:	mov    rbx,rcx
   1400209ec:	cmp    eax,DWORD PTR [rcx+0x20]
   1400209ef:	jle    0x140020a48
   1400209f1:	test   BYTE PTR [rcx+0x19],0x8
   1400209f5:	jne    0x140020a42
   1400209f7:	test   BYTE PTR [rcx+0x18],0x1
   1400209fb:	jne    0x140020a42
   1400209fd:	mov    ecx,DWORD PTR [rcx+0x24]
   140020a00:	cmp    eax,ecx
   140020a02:	jl     0x140020a0d
   140020a04:	sub    eax,ecx
   140020a06:	inc    eax
   140020a08:	cmp    DWORD PTR [rbx+0x8],eax
   140020a0b:	jge    0x140020a30
   140020a0d:	mov    edx,0x1
   140020a12:	mov    rcx,rbx
   140020a15:	call   QWORD PTR [rbx+0x30]
   140020a18:	test   al,al
   140020a1a:	jne    0x140020a30
   140020a1c:	or     BYTE PTR [rbx+0x18],0x1
   140020a20:	mov    eax,DWORD PTR [rbx+0x14]
   140020a23:	and    BYTE PTR [rbx+0x18],0xfe
   140020a27:	mov    DWORD PTR [rbx+0x20],eax
   140020a2a:	add    rsp,0x20
   140020a2e:	pop    rbx
   140020a2f:	ret    
   140020a30:	mov    eax,DWORD PTR [rbx+0x14]
   140020a33:	sub    eax,DWORD PTR [rbx+0x24]
   140020a36:	js     0x140020a42
   140020a38:	movsxd rcx,eax
   140020a3b:	mov    rax,QWORD PTR [rbx]
   140020a3e:	mov    BYTE PTR [rcx+rax*1],0x0
   140020a42:	mov    eax,DWORD PTR [rbx+0x14]
   140020a45:	mov    DWORD PTR [rbx+0x20],eax
   140020a48:	add    rsp,0x20
   140020a4c:	pop    rbx
   140020a4d:	ret    
   140020a4e:	int3   
   140020a4f:	int3   
   140020a50:	mov    QWORD PTR [rsp+0x8],rbx
   140020a55:	mov    QWORD PTR [rsp+0x10],rbp
   140020a5a:	mov    QWORD PTR [rsp+0x18],rsi
   140020a5f:	mov    QWORD PTR [rsp+0x20],rdi
   140020a64:	push   r14
   140020a66:	sub    rsp,0x20
   140020a6a:	xor    r14d,r14d
   140020a6d:	mov    edi,r9d
   140020a70:	test   DWORD PTR [rcx+0xc],0xc0000000
   140020a77:	mov    esi,r8d
   140020a7a:	mov    rbp,rdx
   140020a7d:	mov    rbx,rcx
   140020a80:	jne    0x140020aa1
   140020a82:	mov    rdx,QWORD PTR [rcx]
   140020a85:	test   rdx,rdx
   140020a88:	je     0x140020a9d
   140020a8a:	mov    rax,QWORD PTR [rip+0x118ff]        # 0x140032390
   140020a91:	mov    rcx,QWORD PTR [rax]
   140020a94:	mov    rax,QWORD PTR [rcx]
   140020a97:	call   QWORD PTR [rax+0x28]
   140020a9a:	mov    QWORD PTR [rbx],r14
   140020a9d:	mov    DWORD PTR [rbx+0x8],r14d
   140020aa1:	and    DWORD PTR [rbx+0xc],0x3fffffff
   140020aa8:	mov    rcx,rbx
   140020aab:	movzx  eax,BYTE PTR [rsp+0x50]
   140020ab0:	mov    QWORD PTR [rbx],rbp
   140020ab3:	mov    DWORD PTR [rbx+0x8],esi
   140020ab6:	mov    BYTE PTR [rbx+0x19],al
   140020ab9:	mov    DWORD PTR [rbx+0x10],r14d
   140020abd:	mov    DWORD PTR [rbx+0x14],edi
   140020ac0:	mov    DWORD PTR [rbx+0x1c],r14d
   140020ac4:	mov    BYTE PTR [rbx+0x18],r14b
   140020ac8:	mov    DWORD PTR [rbx+0x24],r14d
   140020acc:	mov    DWORD PTR [rbx+0x20],0xffffffff
   140020ad3:	mov    rbx,QWORD PTR [rsp+0x30]
   140020ad8:	mov    rbp,QWORD PTR [rsp+0x38]
   140020add:	mov    rsi,QWORD PTR [rsp+0x40]
   140020ae2:	mov    rdi,QWORD PTR [rsp+0x48]
   140020ae7:	add    rsp,0x20
   140020aeb:	pop    r14
   140020aed:	jmp    0x1400209e0
   140020af2:	int3   
   140020af3:	int3   
   140020af4:	int3   
   140020af5:	int3   
   140020af6:	int3   
   140020af7:	int3   
   140020af8:	int3   
   140020af9:	int3   
   140020afa:	int3   
   140020afb:	int3   
   140020afc:	int3   
   140020afd:	int3   
   140020afe:	int3   
   140020aff:	int3   
   140020b00:	mov    QWORD PTR [rsp+0x8],rbx
   140020b05:	push   rdi
   140020b06:	sub    rsp,0x20
   140020b0a:	mov    rdi,rcx
   140020b0d:	mov    rbx,r8
   140020b10:	mov    ecx,DWORD PTR [rcx+0x10]
   140020b13:	mov    r8d,DWORD PTR [rdi+0x20]
   140020b17:	lea    eax,[rcx+rdx*1]
   140020b1a:	cmp    eax,r8d
   140020b1d:	jl     0x140020b32
   140020b1f:	mov    DWORD PTR [rbx],0x0
   140020b25:	xor    al,al
   140020b27:	mov    rbx,QWORD PTR [rsp+0x30]
   140020b2c:	add    rsp,0x20
   140020b30:	pop    rdi
   140020b31:	ret    
   140020b32:	mov    eax,DWORD PTR [rbx]
   140020b34:	add    eax,ecx
   140020b36:	add    eax,edx
   140020b38:	cmp    eax,r8d
   140020b3b:	jle    0x140020b46
   140020b3d:	sub    r8d,ecx
   140020b40:	sub    r8d,edx
   140020b43:	mov    DWORD PTR [rbx],r8d
   140020b46:	mov    r8d,DWORD PTR [rbx]
   140020b49:	mov    rcx,rdi
   140020b4c:	call   0x140020bd0
   140020b51:	mov    eax,DWORD PTR [rdi+0x20]
   140020b54:	sub    eax,DWORD PTR [rdi+0x10]
   140020b57:	cmp    eax,DWORD PTR [rbx]
   140020b59:	jge    0x140020b5d
   140020b5b:	mov    DWORD PTR [rbx],eax
   140020b5d:	cmp    DWORD PTR [rbx],0x0
   140020b60:	mov    rbx,QWORD PTR [rsp+0x30]
   140020b65:	setne  al
   140020b68:	add    rsp,0x20
   140020b6c:	pop    rdi
   140020b6d:	ret    
   140020b6e:	int3   
   140020b6f:	int3   
   140020b70:	rex push rbx
   140020b72:	sub    rsp,0x20
   140020b76:	movzx  r8d,BYTE PTR [rcx+0x18]
   140020b7b:	mov    rbx,rcx
   140020b7e:	test   r8b,0x2
   140020b82:	jne    0x140020b97
   140020b84:	mov    ecx,DWORD PTR [rcx+0x10]
   140020b87:	lea    eax,[rcx+rdx*1]
   140020b8a:	cmp    DWORD PTR [rbx+0x20],eax
   140020b8d:	jge    0x140020b9f
   140020b8f:	or     r8b,0x2
   140020b93:	mov    BYTE PTR [rbx+0x18],r8b
   140020b97:	xor    al,al
   140020b99:	add    rsp,0x20
   140020b9d:	pop    rbx
   140020b9e:	ret    
   140020b9f:	mov    eax,DWORD PTR [rbx+0x24]
   140020ba2:	cmp    ecx,eax
   140020ba4:	jl     0x140020baf
   140020ba6:	sub    ecx,eax
   140020ba8:	add    ecx,edx
   140020baa:	cmp    DWORD PTR [rbx+0x8],ecx
   140020bad:	jge    0x140020bc3
   140020baf:	mov    rcx,rbx
   140020bb2:	call   QWORD PTR [rbx+0x28]
   140020bb5:	test   al,al
   140020bb7:	jne    0x140020bc3
   140020bb9:	or     BYTE PTR [rbx+0x18],0x2
   140020bbd:	add    rsp,0x20
   140020bc1:	pop    rbx
   140020bc2:	ret    
   140020bc3:	mov    al,0x1
   140020bc5:	add    rsp,0x20
   140020bc9:	pop    rbx
   140020bca:	ret    
   140020bcb:	int3   
   140020bcc:	int3   
   140020bcd:	int3   
   140020bce:	int3   
   140020bcf:	int3   
   140020bd0:	rex push rbx
   140020bd2:	sub    rsp,0x20
   140020bd6:	movzx  r9d,BYTE PTR [rcx+0x18]
   140020bdb:	mov    rbx,rcx
   140020bde:	test   r9b,0x2
   140020be2:	je     0x140020bec
   140020be4:	xor    al,al
   140020be6:	add    rsp,0x20
   140020bea:	pop    rbx
   140020beb:	ret    
   140020bec:	mov    ecx,DWORD PTR [rcx+0x10]
   140020bef:	add    edx,r8d
   140020bf2:	lea    eax,[rcx+rdx*1]
   140020bf5:	cmp    DWORD PTR [rbx+0x20],eax
   140020bf8:	jge    0x140020c0e
   140020bfa:	or     r9b,0x2
   140020bfe:	xor    al,al
   140020c00:	mov    BYTE PTR [rbx+0x18],r9b
   140020c04:	and    BYTE PTR [rbx+0x18],0xfd
   140020c08:	add    rsp,0x20
   140020c0c:	pop    rbx
   140020c0d:	ret    
   140020c0e:	mov    eax,DWORD PTR [rbx+0x24]
   140020c11:	cmp    ecx,eax
   140020c13:	jl     0x140020c1e
   140020c15:	sub    ecx,eax
   140020c17:	add    ecx,edx
   140020c19:	cmp    DWORD PTR [rbx+0x8],ecx
   140020c1c:	jge    0x140020c36
   140020c1e:	mov    rcx,rbx
   140020c21:	call   QWORD PTR [rbx+0x28]
   140020c24:	test   al,al
   140020c26:	jne    0x140020c36
   140020c28:	or     BYTE PTR [rbx+0x18],0x2
   140020c2c:	and    BYTE PTR [rbx+0x18],0xfd
   140020c30:	add    rsp,0x20
   140020c34:	pop    rbx
   140020c35:	ret    
   140020c36:	mov    al,0x1
   140020c38:	and    BYTE PTR [rbx+0x18],0xfd
   140020c3c:	add    rsp,0x20
   140020c40:	pop    rbx
   140020c41:	ret    
   140020c42:	int3   
   140020c43:	int3   
   140020c44:	int3   
   140020c45:	int3   
   140020c46:	int3   
   140020c47:	int3   
   140020c48:	int3   
   140020c49:	int3   
   140020c4a:	int3   
   140020c4b:	int3   
   140020c4c:	int3   
   140020c4d:	int3   
   140020c4e:	int3   
   140020c4f:	int3   
   140020c50:	rex push rbx
   140020c52:	sub    rsp,0x20
   140020c56:	test   BYTE PTR [rcx+0x18],0x1
   140020c5a:	mov    rbx,rcx
   140020c5d:	jne    0x140020c86
   140020c5f:	test   BYTE PTR [rcx+0x19],0x8
   140020c63:	jne    0x140020c86
   140020c65:	mov    eax,DWORD PTR [rcx+0x14]
   140020c68:	mov    ecx,DWORD PTR [rcx+0x24]
   140020c6b:	cmp    eax,ecx
   140020c6d:	jl     0x140020c78
   140020c6f:	sub    eax,ecx
   140020c71:	add    eax,edx
   140020c73:	cmp    DWORD PTR [rbx+0x8],eax
   140020c76:	jge    0x140020c8e
   140020c78:	mov    rcx,rbx
   140020c7b:	call   QWORD PTR [rbx+0x30]
   140020c7e:	test   al,al
   140020c80:	jne    0x140020c8e
   140020c82:	or     BYTE PTR [rbx+0x18],0x1
   140020c86:	xor    al,al
   140020c88:	add    rsp,0x20
   140020c8c:	pop    rbx
   140020c8d:	ret    
   140020c8e:	mov    al,0x1
   140020c90:	add    rsp,0x20
   140020c94:	pop    rbx
   140020c95:	ret    
   140020c96:	int3   
   140020c97:	int3   
   140020c98:	int3   
   140020c99:	int3   
   140020c9a:	int3   
   140020c9b:	int3   
   140020c9c:	int3   
   140020c9d:	int3   
   140020c9e:	int3   
   140020c9f:	int3   
   140020ca0:	rex push rsi
   140020ca2:	sub    rsp,0x20
   140020ca6:	test   DWORD PTR [rcx+0xc],0xc0000000
   140020cad:	mov    rsi,rcx
   140020cb0:	je     0x140020d0b
   140020cb2:	and    edx,0x3fffffff
   140020cb8:	mov    DWORD PTR [rcx+0xc],edx
   140020cbb:	movsxd rdx,DWORD PTR [rcx+0x8]
   140020cbf:	test   edx,edx
   140020cc1:	je     0x140020d04
   140020cc3:	mov    rax,QWORD PTR [rip+0x116c6]        # 0x140032390
   140020cca:	mov    QWORD PTR [rsp+0x30],rbx
   140020ccf:	mov    QWORD PTR [rsp+0x38],rdi
   140020cd4:	mov    rdi,rdx
   140020cd7:	mov    rcx,QWORD PTR [rax]
   140020cda:	mov    rax,QWORD PTR [rcx]
   140020cdd:	call   QWORD PTR [rax+0x8]
   140020ce0:	mov    rdx,QWORD PTR [rsi]
   140020ce3:	mov    r8,rdi
   140020ce6:	mov    rcx,rax
   140020ce9:	mov    rbx,rax
   140020cec:	call   0x140026f70
   140020cf1:	mov    rdi,QWORD PTR [rsp+0x38]
   140020cf6:	mov    QWORD PTR [rsi],rbx
   140020cf9:	mov    rbx,QWORD PTR [rsp+0x30]
   140020cfe:	add    rsp,0x20
   140020d02:	pop    rsi
   140020d03:	ret    
   140020d04:	mov    QWORD PTR [rcx],0x0
   140020d0b:	add    rsp,0x20
   140020d0f:	pop    rsi
   140020d10:	ret    
   140020d11:	int3   
   140020d12:	int3   
   140020d13:	int3   
   140020d14:	int3   
   140020d15:	int3   
   140020d16:	int3   
   140020d17:	int3   
   140020d18:	int3   
   140020d19:	int3   
   140020d1a:	int3   
   140020d1b:	int3   
   140020d1c:	int3   
   140020d1d:	int3   
   140020d1e:	int3   
   140020d1f:	int3   
   140020d20:	mov    QWORD PTR [rsp+0x8],rbx
   140020d25:	push   rdi
   140020d26:	sub    rsp,0x20
   140020d2a:	test   BYTE PTR [rcx+0x19],0x1
   140020d2e:	mov    rdi,rdx
   140020d31:	mov    rbx,rcx
   140020d34:	je     0x140020e50
   140020d3a:	cmp    BYTE PTR [rcx+0x18],0x0
   140020d3e:	jne    0x140020e50
   140020d44:	mov    ecx,DWORD PTR [rcx+0x10]
   140020d47:	lea    eax,[rcx+0x2]
   140020d4a:	cmp    DWORD PTR [rbx+0x20],eax
   140020d4d:	jge    0x140020d57
   140020d4f:	mov    BYTE PTR [rbx+0x18],0x2
   140020d53:	xor    al,al
   140020d55:	jmp    0x140020d7f
   140020d57:	mov    eax,DWORD PTR [rbx+0x24]
   140020d5a:	cmp    ecx,eax
   140020d5c:	jl     0x140020d68
   140020d5e:	sub    ecx,eax
   140020d60:	add    ecx,0x2
   140020d63:	cmp    DWORD PTR [rbx+0x8],ecx
   140020d66:	jge    0x140020d7d
   140020d68:	mov    edx,0x2
   140020d6d:	mov    rcx,rbx
   140020d70:	call   QWORD PTR [rbx+0x28]
   140020d73:	test   al,al
   140020d75:	jne    0x140020d7d
   140020d77:	or     BYTE PTR [rbx+0x18],0x2
   140020d7b:	jmp    0x140020d7f
   140020d7d:	mov    al,0x1
   140020d7f:	and    BYTE PTR [rbx+0x18],0xfd
   140020d83:	test   al,al
   140020d85:	je     0x140020e50
   140020d8b:	mov    eax,DWORD PTR [rbx+0x10]
   140020d8e:	sub    eax,DWORD PTR [rbx+0x24]
   140020d91:	movsxd rcx,eax
   140020d94:	add    rcx,QWORD PTR [rbx]
   140020d97:	je     0x140020e50
   140020d9d:	cmp    BYTE PTR [rcx],0x2f
   140020da0:	jne    0x140020e50
   140020da6:	cmp    BYTE PTR [rcx+0x1],0x2a
   140020daa:	jne    0x140020e50
   140020db0:	test   rdi,rdi
   140020db3:	je     0x140020dbb
   140020db5:	mov    DWORD PTR [rdi],0x0
   140020dbb:	add    DWORD PTR [rbx+0x10],0x2
   140020dbf:	cmp    BYTE PTR [rbx+0x18],0x0
   140020dc3:	jne    0x140020e50
   140020dc9:	nop    DWORD PTR [rax+0x0]
   140020dd0:	movzx  edx,BYTE PTR [rbx+0x18]
   140020dd4:	test   dl,0x2
   140020dd7:	jne    0x140020e50
   140020dd9:	mov    ecx,DWORD PTR [rbx+0x10]
   140020ddc:	lea    eax,[rcx+0x2]
   140020ddf:	cmp    DWORD PTR [rbx+0x20],eax
   140020de2:	jge    0x140020dee
   140020de4:	or     dl,0x2
   140020de7:	mov    BYTE PTR [rbx+0x18],dl
   140020dea:	xor    al,al
   140020dec:	jmp    0x140020e16
   140020dee:	mov    eax,DWORD PTR [rbx+0x24]
   140020df1:	cmp    ecx,eax
   140020df3:	jl     0x140020dff
   140020df5:	sub    ecx,eax
   140020df7:	add    ecx,0x2
   140020dfa:	cmp    DWORD PTR [rbx+0x8],ecx
   140020dfd:	jge    0x140020e14
   140020dff:	mov    edx,0x2
   140020e04:	mov    rcx,rbx
   140020e07:	call   QWORD PTR [rbx+0x28]
   140020e0a:	test   al,al
   140020e0c:	jne    0x140020e14
   140020e0e:	or     BYTE PTR [rbx+0x18],0x2
   140020e12:	jmp    0x140020e16
   140020e14:	mov    al,0x1
   140020e16:	and    BYTE PTR [rbx+0x18],0xfd
   140020e1a:	test   al,al
   140020e1c:	je     0x140020e50
   140020e1e:	mov    eax,DWORD PTR [rbx+0x10]
   140020e21:	sub    eax,DWORD PTR [rbx+0x24]
   140020e24:	movsxd rcx,eax
   140020e27:	add    rcx,QWORD PTR [rbx]
   140020e2a:	je     0x140020e50
   140020e2c:	cmp    BYTE PTR [rcx],0x2a
   140020e2f:	jne    0x140020e37
   140020e31:	cmp    BYTE PTR [rcx+0x1],0x2f
   140020e35:	je     0x140020e5d
   140020e37:	mov    rcx,rbx
   140020e3a:	call   0x14001e1c0
   140020e3f:	cmp    al,0xa
   140020e41:	jne    0x140020e4a
   140020e43:	test   rdi,rdi
   140020e46:	je     0x140020e4a
   140020e48:	inc    DWORD PTR [rdi]
   140020e4a:	cmp    BYTE PTR [rbx+0x18],0x0
   140020e4e:	je     0x140020dd0
   140020e50:	xor    al,al
   140020e52:	mov    rbx,QWORD PTR [rsp+0x30]
   140020e57:	add    rsp,0x20
   140020e5b:	pop    rdi
   140020e5c:	ret    
   140020e5d:	add    DWORD PTR [rbx+0x10],0x2
   140020e61:	mov    al,0x1
   140020e63:	mov    rbx,QWORD PTR [rsp+0x30]
   140020e68:	add    rsp,0x20
   140020e6c:	pop    rdi
   140020e6d:	ret    
   140020e6e:	int3   
   140020e6f:	int3   
   140020e70:	rex push rbx
   140020e72:	sub    rsp,0x20
   140020e76:	test   BYTE PTR [rcx+0x19],0x1
   140020e7a:	mov    rbx,rcx
   140020e7d:	je     0x140020f2f
   140020e83:	cmp    BYTE PTR [rcx+0x18],0x0
   140020e87:	jne    0x140020f2f
   140020e8d:	mov    ecx,DWORD PTR [rcx+0x10]
   140020e90:	lea    eax,[rcx+0x2]
   140020e93:	cmp    DWORD PTR [rbx+0x20],eax
   140020e96:	jge    0x140020ea0
   140020e98:	mov    BYTE PTR [rbx+0x18],0x2
   140020e9c:	xor    al,al
   140020e9e:	jmp    0x140020ec8
   140020ea0:	mov    eax,DWORD PTR [rbx+0x24]
   140020ea3:	cmp    ecx,eax
   140020ea5:	jl     0x140020eb1
   140020ea7:	sub    ecx,eax
   140020ea9:	add    ecx,0x2
   140020eac:	cmp    DWORD PTR [rbx+0x8],ecx
   140020eaf:	jge    0x140020ec6
   140020eb1:	mov    edx,0x2
   140020eb6:	mov    rcx,rbx
   140020eb9:	call   QWORD PTR [rbx+0x28]
   140020ebc:	test   al,al
   140020ebe:	jne    0x140020ec6
   140020ec0:	or     BYTE PTR [rbx+0x18],0x2
   140020ec4:	jmp    0x140020ec8
   140020ec6:	mov    al,0x1
   140020ec8:	and    BYTE PTR [rbx+0x18],0xfd
   140020ecc:	test   al,al
   140020ece:	je     0x140020f2f
   140020ed0:	mov    edx,DWORD PTR [rbx+0x10]
   140020ed3:	mov    eax,edx
   140020ed5:	sub    eax,DWORD PTR [rbx+0x24]
   140020ed8:	movsxd rcx,eax
   140020edb:	add    rcx,QWORD PTR [rbx]
   140020ede:	je     0x140020f2f
   140020ee0:	cmp    BYTE PTR [rcx],0x2f
   140020ee3:	jne    0x140020f2f
   140020ee5:	cmp    BYTE PTR [rcx+0x1],0x2f
   140020ee9:	jne    0x140020f2f
   140020eeb:	lea    eax,[rdx+0x2]
   140020eee:	mov    QWORD PTR [rsp+0x30],rdi
   140020ef3:	mov    rcx,rbx
   140020ef6:	mov    DWORD PTR [rbx+0x10],eax
   140020ef9:	xor    dil,dil
   140020efc:	call   0x14001e1c0
   140020f01:	cmp    BYTE PTR [rbx+0x18],dil
   140020f05:	jne    0x140020f22
   140020f07:	cmp    al,0xa
   140020f09:	jne    0x140020f11
   140020f0b:	cmp    dil,0x5c
   140020f0f:	jne    0x140020f22
   140020f11:	mov    rcx,rbx
   140020f14:	movzx  edi,al
   140020f17:	call   0x14001e1c0
   140020f1c:	cmp    BYTE PTR [rbx+0x18],0x0
   140020f20:	je     0x140020f07
   140020f22:	mov    al,0x1
   140020f24:	mov    rdi,QWORD PTR [rsp+0x30]
   140020f29:	add    rsp,0x20
   140020f2d:	pop    rbx
   140020f2e:	ret    
   140020f2f:	xor    al,al
   140020f31:	add    rsp,0x20
   140020f35:	pop    rbx
   140020f36:	ret    
   140020f37:	int3   
   140020f38:	int3   
   140020f39:	int3   
   140020f3a:	int3   
   140020f3b:	int3   
   140020f3c:	int3   
   140020f3d:	int3   
   140020f3e:	int3   
   140020f3f:	int3   
   140020f40:	rex push rbx
   140020f42:	sub    rsp,0x20
   140020f46:	test   BYTE PTR [rcx+0x19],0x1
   140020f4a:	mov    rbx,rcx
   140020f4d:	je     0x140020fb5
   140020f4f:	cmp    BYTE PTR [rcx+0x18],0x0
   140020f53:	jne    0x140020fb5
   140020f55:	test   BYTE PTR [rbx+0x18],0x2
   140020f59:	jne    0x140020fb5
   140020f5b:	mov    ecx,DWORD PTR [rbx+0x10]
   140020f5e:	lea    eax,[rcx+0x1]
   140020f61:	cmp    DWORD PTR [rbx+0x20],eax
   140020f64:	jl     0x140020fb1
   140020f66:	mov    eax,DWORD PTR [rbx+0x24]
   140020f69:	cmp    ecx,eax
   140020f6b:	jl     0x140020f76
   140020f6d:	sub    ecx,eax
   140020f6f:	inc    ecx
   140020f71:	cmp    DWORD PTR [rbx+0x8],ecx
   140020f74:	jge    0x140020f85
   140020f76:	mov    edx,0x1
   140020f7b:	mov    rcx,rbx
   140020f7e:	call   QWORD PTR [rbx+0x28]
   140020f81:	test   al,al
   140020f83:	je     0x140020fb1
   140020f85:	mov    r8d,DWORD PTR [rbx+0x10]
   140020f89:	mov    eax,r8d
   140020f8c:	sub    eax,DWORD PTR [rbx+0x24]
   140020f8f:	movsxd rcx,eax
   140020f92:	mov    rax,QWORD PTR [rbx]
   140020f95:	movzx  edx,BYTE PTR [rcx+rax*1]
   140020f99:	cmp    edx,0x9
   140020f9c:	jb     0x140020fb5
   140020f9e:	cmp    edx,0xd
   140020fa1:	jbe    0x140020fa8
   140020fa3:	cmp    edx,0x20
   140020fa6:	jne    0x140020fb5
   140020fa8:	lea    eax,[r8+0x1]
   140020fac:	mov    DWORD PTR [rbx+0x10],eax
   140020faf:	jmp    0x140020f55
   140020fb1:	or     BYTE PTR [rbx+0x18],0x2
   140020fb5:	add    rsp,0x20
   140020fb9:	pop    rbx
   140020fba:	ret    
   140020fbb:	int3   
   140020fbc:	int3   
   140020fbd:	int3   
   140020fbe:	int3   
   140020fbf:	int3   
   140020fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140020fc5:	push   rdi
   140020fc6:	sub    rsp,0x20
   140020fca:	test   DWORD PTR [rcx+0xc],0xc0000000
   140020fd1:	lea    ebx,[rdx+0x1]
   140020fd4:	mov    rdi,rcx
   140020fd7:	je     0x140020fef
   140020fd9:	test   BYTE PTR [rcx+0x19],0x2
   140020fdd:	je     0x140020fed
   140020fdf:	cmp    DWORD PTR [rcx+0x8],ebx
   140020fe2:	jge    0x140020fed
   140020fe4:	xor    edx,edx
   140020fe6:	call   0x140020ca0
   140020feb:	jmp    0x140020fef
   140020fed:	mov    ebx,edx
   140020fef:	mov    edx,ebx
   140020ff1:	mov    rcx,rdi
   140020ff4:	mov    rbx,QWORD PTR [rsp+0x30]
   140020ff9:	add    rsp,0x20
   140020ffd:	pop    rdi
   140020ffe:	jmp    0x14000da80
   140021003:	int3   
   140021004:	int3   
   140021005:	int3   
   140021006:	int3   
   140021007:	int3   
   140021008:	int3   
   140021009:	int3   
   14002100a:	int3   
   14002100b:	int3   
   14002100c:	int3   
   14002100d:	int3   
   14002100e:	int3   
   14002100f:	int3   
   140021010:	movzx  eax,BYTE PTR [rdx]
   140021013:	movzx  eax,BYTE PTR [rax+rcx*1+0x1128]
   14002101b:	xor    ecx,ecx
   14002101d:	test   al,al
   14002101f:	setne  cl
   140021022:	mov    DWORD PTR [r8],ecx
   140021025:	ret    
   140021026:	int3   
   140021027:	int3   
   140021028:	int3   
   140021029:	int3   
   14002102a:	int3   
   14002102b:	int3   
   14002102c:	int3   
   14002102d:	int3   
   14002102e:	int3   
   14002102f:	int3   
   140021030:	mov    QWORD PTR [rsp+0x8],rbx
   140021035:	mov    QWORD PTR [rsp+0x10],rbp
   14002103a:	mov    QWORD PTR [rsp+0x18],rsi
   14002103f:	mov    QWORD PTR [rsp+0x20],rdi
   140021044:	movsxd rdi,DWORD PTR [rcx+0x1c]
   140021048:	xor    r11d,r11d
   14002104b:	xor    r10d,r10d
   14002104e:	mov    rsi,r8
   140021051:	mov    rbp,rdx
   140021054:	mov    rbx,rcx
   140021057:	test   rdi,rdi
   14002105a:	jle    0x1400210a2
   14002105c:	nop    DWORD PTR [rax+0x0]
   140021060:	movzx  r8d,BYTE PTR [rbx+r10*1+0x24]
   140021066:	mov    rax,rbp
   140021069:	add    r8,0x13
   14002106d:	add    r8,r8
   140021070:	mov    r9,QWORD PTR [rbx+r8*8]
   140021074:	sub    r9,rbp
   140021077:	nop    WORD PTR [rax+rax*1+0x0]
   140021080:	movzx  edx,BYTE PTR [rax]
   140021083:	movzx  ecx,BYTE PTR [rax+r9*1]
   140021088:	sub    edx,ecx
   14002108a:	jne    0x140021093
   14002108c:	inc    rax
   14002108f:	test   ecx,ecx
   140021091:	jne    0x140021080
   140021093:	test   edx,edx
   140021095:	je     0x1400210bf
   140021097:	inc    r11d
   14002109a:	inc    r10
   14002109d:	cmp    r10,rdi
   1400210a0:	jl     0x140021060
   1400210a2:	mov    DWORD PTR [rsi],0x0
   1400210a8:	xor    al,al
   1400210aa:	mov    rbx,QWORD PTR [rsp+0x8]
   1400210af:	mov    rbp,QWORD PTR [rsp+0x10]
   1400210b4:	mov    rsi,QWORD PTR [rsp+0x18]
   1400210b9:	mov    rdi,QWORD PTR [rsp+0x20]
   1400210be:	ret    
   1400210bf:	movsxd rax,r11d
   1400210c2:	movzx  ecx,BYTE PTR [rax+rbx*1+0x24]
   1400210c7:	add    rcx,rcx
   1400210ca:	mov    ecx,DWORD PTR [rbx+rcx*8+0x128]
   1400210d1:	mov    DWORD PTR [rsi],ecx
   1400210d3:	movzx  eax,BYTE PTR [rax+rbx*1+0x24]
   1400210d8:	jmp    0x1400210aa
   1400210da:	int3   
   1400210db:	int3   
   1400210dc:	int3   
   1400210dd:	int3   
   1400210de:	int3   
   1400210df:	int3   
   1400210e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400210e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400210ea:	push   rdi
   1400210eb:	sub    rsp,0x20
   1400210ef:	movsxd rdi,r8d
   1400210f2:	mov    rsi,rdx
   1400210f5:	mov    rbx,rcx
   1400210f8:	test   r8d,r8d
   1400210fb:	jle    0x140021119
   1400210fd:	movzx  ecx,BYTE PTR [rcx+0x18]
   140021101:	test   cl,0x2
   140021104:	jne    0x140021119
   140021106:	mov    r9d,DWORD PTR [rbx+0x10]
   14002110a:	lea    eax,[r9+rdi*1]
   14002110e:	cmp    DWORD PTR [rbx+0x20],eax
   140021111:	jge    0x14002112b
   140021113:	or     cl,0x2
   140021116:	mov    BYTE PTR [rbx+0x18],cl
   140021119:	xor    al,al
   14002111b:	mov    rbx,QWORD PTR [rsp+0x30]
   140021120:	mov    rsi,QWORD PTR [rsp+0x38]
   140021125:	add    rsp,0x20
   140021129:	pop    rdi
   14002112a:	ret    
   14002112b:	mov    eax,DWORD PTR [rbx+0x24]
   14002112e:	cmp    r9d,eax
   140021131:	jl     0x14002113f
   140021133:	sub    r9d,eax
   140021136:	add    r9d,edi
   140021139:	cmp    DWORD PTR [rbx+0x8],r9d
   14002113d:	jge    0x14002115f
   14002113f:	mov    edx,edi
   140021141:	mov    rcx,rbx
   140021144:	call   QWORD PTR [rbx+0x28]
   140021147:	test   al,al
   140021149:	jne    0x14002115f
   14002114b:	or     BYTE PTR [rbx+0x18],0x2
   14002114f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021154:	mov    rsi,QWORD PTR [rsp+0x38]
   140021159:	add    rsp,0x20
   14002115d:	pop    rdi
   14002115e:	ret    
   14002115f:	mov    eax,DWORD PTR [rbx+0x10]
   140021162:	mov    r8,rdi
   140021165:	sub    eax,DWORD PTR [rbx+0x24]
   140021168:	mov    rcx,rsi
   14002116b:	movsxd rdx,eax
   14002116e:	add    rdx,QWORD PTR [rbx]
   140021171:	call   0x140026f70
   140021176:	add    DWORD PTR [rbx+0x10],edi
   140021179:	mov    al,0x1
   14002117b:	mov    rbx,QWORD PTR [rsp+0x30]
   140021180:	mov    rsi,QWORD PTR [rsp+0x38]
   140021185:	add    rsp,0x20
   140021189:	pop    rdi
   14002118a:	ret    
   14002118b:	int3   
   14002118c:	int3   
   14002118d:	int3   
   14002118e:	int3   
   14002118f:	int3   
   140021190:	sub    rsp,0x28
   140021194:	mov    eax,DWORD PTR [rip+0x2709e]        # 0x140048238
   14002119a:	test   al,0x1
   14002119c:	jne    0x1400212f6
   1400211a2:	or     eax,0x1
   1400211a5:	mov    QWORD PTR [rsp+0x30],rbx
   1400211aa:	mov    ecx,0x1228
   1400211af:	mov    DWORD PTR [rip+0x27083],eax        # 0x140048238
   1400211b5:	mov    QWORD PTR [rsp+0x40],rsi
   1400211ba:	call   0x140007bf0
   1400211bf:	xor    esi,esi
   1400211c1:	mov    rbx,rax
   1400211c4:	test   rax,rax
   1400211c7:	je     0x1400212dd
   1400211cd:	lea    rax,[rip+0x16d5c]        # 0x140037f30
   1400211d4:	mov    QWORD PTR [rsp+0x38],rbp
   1400211d9:	mov    QWORD PTR [rbx],rax
   1400211dc:	lea    rcx,[rbx+0x128]
   1400211e3:	lea    rax,[rip+0x16a4e]        # 0x140037c38
   1400211ea:	mov    QWORD PTR [rsp+0x20],rdi
   1400211ef:	xor    edx,edx
   1400211f1:	mov    QWORD PTR [rbx+0x10],rax
   1400211f5:	mov    r8d,0x1000
   1400211fb:	mov    BYTE PTR [rbx+0x8],0x5c
   1400211ff:	mov    DWORD PTR [rbx+0x1c],0xb
   140021206:	mov    DWORD PTR [rbx+0x18],0x1
   14002120d:	mov    DWORD PTR [rbx+0x20],esi
   140021210:	call   0x1400277b0
   140021215:	lea    rdi,[rip+0x16c3c]        # 0x140037e58
   14002121c:	mov    rdx,rdi
   14002121f:	lea    rbp,[rip+0x16ce2]        # 0x140037f08
   140021226:	data16 nop WORD PTR [rax+rax*1+0x0]
   140021230:	movzx  eax,BYTE PTR [rdx-0x8]
   140021234:	mov    BYTE PTR [rbx+rsi*1+0x24],al
   140021238:	mov    r8d,eax
   14002123b:	mov    rcx,QWORD PTR [rdx]
   14002123e:	add    r8,r8
   140021241:	or     rax,0xffffffffffffffff
   140021245:	mov    QWORD PTR [rbx+r8*8+0x130],rcx
   14002124d:	nop    DWORD PTR [rax]
   140021250:	inc    rax
   140021253:	cmp    BYTE PTR [rcx+rax*1],0x0
   140021257:	jne    0x140021250
   140021259:	mov    DWORD PTR [rbx+r8*8+0x128],eax
   140021261:	mov    ecx,DWORD PTR [rbx+0x20]
   140021264:	cmp    eax,ecx
   140021266:	cmovg  ecx,eax
   140021269:	inc    rsi
   14002126c:	add    rdx,0x10
   140021270:	mov    DWORD PTR [rbx+0x20],ecx
   140021273:	cmp    rdx,rbp
   140021276:	jl     0x140021230
   140021278:	lea    rax,[rip+0x16cc1]        # 0x140037f40
   14002127f:	xor    edx,edx
   140021281:	lea    rcx,[rbx+0x1128]
   140021288:	mov    QWORD PTR [rbx],rax
   14002128b:	mov    r8d,0x100
   140021291:	call   0x1400277b0
   140021296:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400212a0:	mov    rcx,QWORD PTR [rdi]
   1400212a3:	movzx  edx,BYTE PTR [rcx]
   1400212a6:	movzx  ecx,BYTE PTR [rdi-0x8]
   1400212aa:	add    rdi,0x10
   1400212ae:	mov    BYTE PTR [rdx+rbx*1+0x1128],cl
   1400212b5:	cmp    rdi,rbp
   1400212b8:	jl     0x1400212a0
   1400212ba:	mov    rdi,QWORD PTR [rsp+0x20]
   1400212bf:	mov    rax,rbx
   1400212c2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400212c7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400212cc:	mov    QWORD PTR [rip+0x26f5d],rbx        # 0x140048230
   1400212d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400212d8:	add    rsp,0x28
   1400212dc:	ret    
   1400212dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400212e2:	mov    rax,rsi
   1400212e5:	mov    QWORD PTR [rip+0x26f44],rsi        # 0x140048230
   1400212ec:	mov    rsi,QWORD PTR [rsp+0x40]
   1400212f1:	add    rsp,0x28
   1400212f5:	ret    
   1400212f6:	mov    rax,QWORD PTR [rip+0x26f33]        # 0x140048230
   1400212fd:	add    rsp,0x28
   140021301:	ret    
   140021302:	int3   
   140021303:	int3   
   140021304:	int3   
   140021305:	int3   
   140021306:	int3   
   140021307:	int3   
   140021308:	int3   
   140021309:	int3   
   14002130a:	int3   
   14002130b:	int3   
   14002130c:	int3   
   14002130d:	int3   
   14002130e:	int3   
   14002130f:	int3   
   140021310:	mov    QWORD PTR [rsp+0x8],rbx
   140021315:	mov    QWORD PTR [rsp+0x18],rsi
   14002131a:	push   rdi
   14002131b:	sub    rsp,0x20
   14002131f:	mov    rsi,rdx
   140021322:	mov    rbx,rcx
   140021325:	call   0x14001e1c0
   14002132a:	movzx  edi,al
   14002132d:	cmp    al,BYTE PTR [rsi+0x8]
   140021330:	jne    0x1400213b8
   140021336:	mov    ecx,DWORD PTR [rbx+0x10]
   140021339:	mov    r9d,DWORD PTR [rbx+0x20]
   14002133d:	mov    r8d,DWORD PTR [rsi+0x20]
   140021341:	mov    DWORD PTR [rsp+0x38],r8d
   140021346:	cmp    ecx,r9d
   140021349:	jge    0x1400213fd
   14002134f:	lea    eax,[rcx+r8*1]
   140021353:	cmp    eax,r9d
   140021356:	jle    0x140021363
   140021358:	mov    r8d,r9d
   14002135b:	sub    r8d,ecx
   14002135e:	mov    DWORD PTR [rsp+0x38],r8d
   140021363:	xor    edx,edx
   140021365:	mov    rcx,rbx
   140021368:	call   0x140020bd0
   14002136d:	mov    ecx,DWORD PTR [rsp+0x38]
   140021371:	mov    eax,DWORD PTR [rbx+0x20]
   140021374:	sub    eax,DWORD PTR [rbx+0x10]
   140021377:	cmp    eax,ecx
   140021379:	cmovl  ecx,eax
   14002137c:	test   ecx,ecx
   14002137e:	mov    DWORD PTR [rsp+0x38],ecx
   140021382:	setne  al
   140021385:	test   al,al
   140021387:	je     0x1400213fd
   140021389:	mov    eax,DWORD PTR [rbx+0x10]
   14002138c:	lea    r8,[rsp+0x38]
   140021391:	sub    eax,DWORD PTR [rbx+0x24]
   140021394:	mov    rcx,rsi
   140021397:	movsxd rdx,eax
   14002139a:	mov    rax,QWORD PTR [rsi]
   14002139d:	add    rdx,QWORD PTR [rbx]
   1400213a0:	call   QWORD PTR [rax]
   1400213a2:	movzx  edi,al
   1400213a5:	mov    eax,DWORD PTR [rsp+0x38]
   1400213a9:	add    DWORD PTR [rbx+0x10],eax
   1400213ac:	mov    edx,DWORD PTR [rbx+0x10]
   1400213af:	cmp    edx,DWORD PTR [rbx+0x20]
   1400213b2:	jle    0x1400213cc
   1400213b4:	or     BYTE PTR [rbx+0x18],0x2
   1400213b8:	movzx  eax,dil
   1400213bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400213c1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400213c6:	add    rsp,0x20
   1400213ca:	pop    rdi
   1400213cb:	ret    
   1400213cc:	and    BYTE PTR [rbx+0x18],0xfd
   1400213d0:	mov    ecx,DWORD PTR [rbx+0x24]
   1400213d3:	cmp    edx,ecx
   1400213d5:	jl     0x1400213e0
   1400213d7:	mov    eax,DWORD PTR [rbx+0x8]
   1400213da:	add    ecx,eax
   1400213dc:	cmp    edx,ecx
   1400213de:	jl     0x1400213b8
   1400213e0:	or     edx,0xffffffff
   1400213e3:	mov    rcx,rbx
   1400213e6:	call   QWORD PTR [rbx+0x28]
   1400213e9:	movzx  eax,dil
   1400213ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400213f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400213f7:	add    rsp,0x20
   1400213fb:	pop    rdi
   1400213fc:	ret    
   1400213fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140021402:	xor    al,al
   140021404:	mov    rsi,QWORD PTR [rsp+0x40]
   140021409:	add    rsp,0x20
   14002140d:	pop    rdi
   14002140e:	ret    
   14002140f:	int3   
   140021410:	rex push rbx
   140021412:	push   rbp
   140021413:	push   r13
   140021415:	push   r15
   140021417:	sub    rsp,0x28
   14002141b:	test   BYTE PTR [rcx+0x19],0x1
   14002141f:	mov    r15,r8
   140021422:	movsxd r13,r9d
   140021425:	mov    rbp,rdx
   140021428:	mov    rbx,rcx
   14002142b:	je     0x1400215c2
   140021431:	test   rdx,rdx
   140021434:	je     0x1400215c2
   14002143a:	cmp    BYTE PTR [rcx+0x18],0x0
   14002143e:	je     0x14002144f
   140021440:	mov    BYTE PTR [r8],0x0
   140021444:	add    rsp,0x28
   140021448:	pop    r15
   14002144a:	pop    r13
   14002144c:	pop    rbp
   14002144d:	pop    rbx
   14002144e:	ret    
   14002144f:	call   0x140020f40
   140021454:	mov    r9d,DWORD PTR [rbp+0x18]
   140021458:	xor    edx,edx
   14002145a:	mov    r8,QWORD PTR [rbp+0x10]
   14002145e:	mov    rcx,rbx
   140021461:	call   0x1400218e0
   140021466:	test   al,al
   140021468:	jne    0x140021478
   14002146a:	mov    BYTE PTR [r15],al
   14002146d:	add    rsp,0x28
   140021471:	pop    r15
   140021473:	pop    r13
   140021475:	pop    rbp
   140021476:	pop    rbx
   140021477:	ret    
   140021478:	mov    eax,DWORD PTR [rbp+0x18]
   14002147b:	add    DWORD PTR [rbx+0x10],eax
   14002147e:	mov    eax,DWORD PTR [rbx+0x10]
   140021481:	mov    QWORD PTR [rsp+0x20],r14
   140021486:	cmp    eax,DWORD PTR [rbx+0x20]
   140021489:	jle    0x140021491
   14002148b:	or     BYTE PTR [rbx+0x18],0x2
   14002148f:	jmp    0x1400214ae
   140021491:	and    BYTE PTR [rbx+0x18],0xfd
   140021495:	mov    edx,eax
   140021497:	mov    ecx,DWORD PTR [rbx+0x24]
   14002149a:	cmp    eax,ecx
   14002149c:	jl     0x1400214a5
   14002149e:	add    ecx,DWORD PTR [rbx+0x8]
   1400214a1:	cmp    eax,ecx
   1400214a3:	jl     0x1400214ae
   1400214a5:	or     edx,0xffffffff
   1400214a8:	mov    rcx,rbx
   1400214ab:	call   QWORD PTR [rbx+0x28]
   1400214ae:	xor    r14d,r14d
   1400214b1:	cmp    BYTE PTR [rbx+0x18],r14b
   1400214b5:	jne    0x1400215a0
   1400214bb:	mov    QWORD PTR [rsp+0x50],rsi
   1400214c0:	mov    esi,r14d
   1400214c3:	mov    QWORD PTR [rsp+0x58],rdi
   1400214c8:	mov    QWORD PTR [rsp+0x60],r12
   1400214cd:	nop    DWORD PTR [rax]
   1400214d0:	movzx  edx,BYTE PTR [rbx+0x18]
   1400214d4:	mov    edi,DWORD PTR [rbp+0x18]
   1400214d7:	mov    r12,QWORD PTR [rbp+0x10]
   1400214db:	test   dl,0x2
   1400214de:	jne    0x14002153c
   1400214e0:	mov    ecx,DWORD PTR [rbx+0x10]
   1400214e3:	lea    eax,[rcx+rdi*1]
   1400214e6:	cmp    DWORD PTR [rbx+0x20],eax
   1400214e9:	jge    0x1400214f5
   1400214eb:	or     dl,0x2
   1400214ee:	mov    BYTE PTR [rbx+0x18],dl
   1400214f1:	xor    al,al
   1400214f3:	jmp    0x140021519
   1400214f5:	mov    eax,DWORD PTR [rbx+0x24]
   1400214f8:	cmp    ecx,eax
   1400214fa:	jl     0x140021505
   1400214fc:	sub    ecx,eax
   1400214fe:	add    ecx,edi
   140021500:	cmp    DWORD PTR [rbx+0x8],ecx
   140021503:	jge    0x140021517
   140021505:	mov    edx,edi
   140021507:	mov    rcx,rbx
   14002150a:	call   QWORD PTR [rbx+0x28]
   14002150d:	test   al,al
   14002150f:	jne    0x140021517
   140021511:	or     BYTE PTR [rbx+0x18],0x2
   140021515:	jmp    0x140021519
   140021517:	mov    al,0x1
   140021519:	and    BYTE PTR [rbx+0x18],0xfd
   14002151d:	test   al,al
   14002151f:	je     0x14002153c
   140021521:	mov    eax,DWORD PTR [rbx+0x10]
   140021524:	mov    r8d,edi
   140021527:	sub    eax,DWORD PTR [rbx+0x24]
   14002152a:	mov    rdx,r12
   14002152d:	movsxd rcx,eax
   140021530:	add    rcx,QWORD PTR [rbx]
   140021533:	call   0x140022670
   140021538:	test   eax,eax
   14002153a:	je     0x140021562
   14002153c:	mov    rdx,rbp
   14002153f:	mov    rcx,rbx
   140021542:	call   0x140021310
   140021547:	cmp    rsi,r13
   14002154a:	jge    0x140021556
   14002154c:	inc    r14d
   14002154f:	mov    BYTE PTR [rsi+r15*1],al
   140021553:	inc    rsi
   140021556:	cmp    BYTE PTR [rbx+0x18],0x0
   14002155a:	je     0x1400214d0
   140021560:	jmp    0x140021591
   140021562:	mov    eax,DWORD PTR [rbp+0x18]
   140021565:	add    DWORD PTR [rbx+0x10],eax
   140021568:	mov    eax,DWORD PTR [rbx+0x10]
   14002156b:	cmp    eax,DWORD PTR [rbx+0x20]
   14002156e:	jle    0x140021576
   140021570:	or     BYTE PTR [rbx+0x18],0x2
   140021574:	jmp    0x140021591
   140021576:	and    BYTE PTR [rbx+0x18],0xfd
   14002157a:	mov    ecx,DWORD PTR [rbx+0x24]
   14002157d:	cmp    eax,ecx
   14002157f:	jl     0x140021588
   140021581:	add    ecx,DWORD PTR [rbx+0x8]
   140021584:	cmp    eax,ecx
   140021586:	jl     0x140021591
   140021588:	or     edx,0xffffffff
   14002158b:	mov    rcx,rbx
   14002158e:	call   QWORD PTR [rbx+0x28]
   140021591:	mov    rdi,QWORD PTR [rsp+0x58]
   140021596:	mov    rsi,QWORD PTR [rsp+0x50]
   14002159b:	mov    r12,QWORD PTR [rsp+0x60]
   1400215a0:	cmp    r14d,r13d
   1400215a3:	lea    eax,[r13-0x1]
   1400215a7:	cmovl  eax,r14d
   1400215ab:	mov    r14,QWORD PTR [rsp+0x20]
   1400215b0:	cdqe   
   1400215b2:	mov    BYTE PTR [rax+r15*1],0x0
   1400215b7:	add    rsp,0x28
   1400215bb:	pop    r15
   1400215bd:	pop    r13
   1400215bf:	pop    rbp
   1400215c0:	pop    rbx
   1400215c1:	ret    
   1400215c2:	mov    r8d,r13d
   1400215c5:	mov    rdx,r15
   1400215c8:	add    rsp,0x28
   1400215cc:	pop    r15
   1400215ce:	pop    r13
   1400215d0:	pop    rbp
   1400215d1:	pop    rbx
   1400215d2:	jmp    0x1400215e0
   1400215d7:	int3   
   1400215d8:	int3   
   1400215d9:	int3   
   1400215da:	int3   
   1400215db:	int3   
   1400215dc:	int3   
   1400215dd:	int3   
   1400215de:	int3   
   1400215df:	int3   
   1400215e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400215e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400215ea:	push   r14
   1400215ec:	sub    rsp,0x20
   1400215f0:	cmp    BYTE PTR [rcx+0x18],0x0
   1400215f4:	mov    r14d,r8d
   1400215f7:	mov    rsi,rdx
   1400215fa:	mov    rbx,rcx
   1400215fd:	je     0x140021613
   1400215ff:	mov    BYTE PTR [rdx],0x0
   140021602:	mov    rbx,QWORD PTR [rsp+0x40]
   140021607:	mov    rsi,QWORD PTR [rsp+0x48]
   14002160c:	add    rsp,0x20
   140021610:	pop    r14
   140021612:	ret    
   140021613:	mov    QWORD PTR [rsp+0x30],rbp
   140021618:	call   0x140021780
   14002161d:	test   BYTE PTR [rbx+0x19],0x1
   140021621:	mov    ebp,eax
   140021623:	je     0x140021690
   140021625:	cmp    BYTE PTR [rbx+0x18],0x0
   140021629:	jne    0x140021690
   14002162b:	nop    DWORD PTR [rax+rax*1+0x0]
   140021630:	test   BYTE PTR [rbx+0x18],0x2
   140021634:	jne    0x140021690
   140021636:	mov    ecx,DWORD PTR [rbx+0x10]
   140021639:	lea    eax,[rcx+0x1]
   14002163c:	cmp    DWORD PTR [rbx+0x20],eax
   14002163f:	jl     0x14002168c
   140021641:	mov    eax,DWORD PTR [rbx+0x24]
   140021644:	cmp    ecx,eax
   140021646:	jl     0x140021651
   140021648:	sub    ecx,eax
   14002164a:	inc    ecx
   14002164c:	cmp    DWORD PTR [rbx+0x8],ecx
   14002164f:	jge    0x140021660
   140021651:	mov    edx,0x1
   140021656:	mov    rcx,rbx
   140021659:	call   QWORD PTR [rbx+0x28]
   14002165c:	test   al,al
   14002165e:	je     0x14002168c
   140021660:	mov    r8d,DWORD PTR [rbx+0x10]
   140021664:	mov    eax,r8d
   140021667:	sub    eax,DWORD PTR [rbx+0x24]
   14002166a:	movsxd rcx,eax
   14002166d:	mov    rax,QWORD PTR [rbx]
   140021670:	movzx  edx,BYTE PTR [rcx+rax*1]
   140021674:	cmp    edx,0x9
   140021677:	jb     0x140021690
   140021679:	cmp    edx,0xd
   14002167c:	jbe    0x140021683
   14002167e:	cmp    edx,0x20
   140021681:	jne    0x140021690
   140021683:	lea    eax,[r8+0x1]
   140021687:	mov    DWORD PTR [rbx+0x10],eax
   14002168a:	jmp    0x140021630
   14002168c:	or     BYTE PTR [rbx+0x18],0x2
   140021690:	test   ebp,ebp
   140021692:	jne    0x14002169d
   140021694:	mov    BYTE PTR [rsi],bpl
   140021697:	or     BYTE PTR [rbx+0x18],0x2
   14002169b:	jmp    0x140021716
   14002169d:	mov    QWORD PTR [rsp+0x38],rdi
   1400216a2:	mov    rdx,rsi
   1400216a5:	mov    rcx,rbx
   1400216a8:	cmp    ebp,r14d
   1400216ab:	jg     0x1400216c1
   1400216ad:	lea    edi,[rbp-0x1]
   1400216b0:	mov    r8d,edi
   1400216b3:	call   0x1400210e0
   1400216b8:	movsxd rax,edi
   1400216bb:	mov    BYTE PTR [rax+rsi*1],0x0
   1400216bf:	jmp    0x140021703
   1400216c1:	lea    edi,[r14-0x1]
   1400216c5:	mov    r8d,edi
   1400216c8:	call   0x1400210e0
   1400216cd:	sub    ebp,r14d
   1400216d0:	movsxd rax,edi
   1400216d3:	mov    BYTE PTR [rax+rsi*1],0x0
   1400216d7:	add    DWORD PTR [rbx+0x10],ebp
   1400216da:	mov    edx,DWORD PTR [rbx+0x10]
   1400216dd:	cmp    edx,DWORD PTR [rbx+0x20]
   1400216e0:	jle    0x1400216e8
   1400216e2:	or     BYTE PTR [rbx+0x18],0x2
   1400216e6:	jmp    0x140021703
   1400216e8:	and    BYTE PTR [rbx+0x18],0xfd
   1400216ec:	mov    ecx,DWORD PTR [rbx+0x24]
   1400216ef:	cmp    edx,ecx
   1400216f1:	jl     0x1400216fa
   1400216f3:	add    ecx,DWORD PTR [rbx+0x8]
   1400216f6:	cmp    edx,ecx
   1400216f8:	jl     0x140021703
   1400216fa:	or     edx,0xffffffff
   1400216fd:	mov    rcx,rbx
   140021700:	call   QWORD PTR [rbx+0x28]
   140021703:	test   BYTE PTR [rbx+0x19],0x1
   140021707:	mov    rdi,QWORD PTR [rsp+0x38]
   14002170c:	jne    0x140021716
   14002170e:	mov    rcx,rbx
   140021711:	call   0x14001e1c0
   140021716:	mov    rbp,QWORD PTR [rsp+0x30]
   14002171b:	mov    rbx,QWORD PTR [rsp+0x40]
   140021720:	mov    rsi,QWORD PTR [rsp+0x48]
   140021725:	add    rsp,0x20
   140021729:	pop    r14
   14002172b:	ret    
   14002172c:	int3   
   14002172d:	int3   
   14002172e:	int3   
   14002172f:	int3   
   140021730:	mov    QWORD PTR [rsp+0x8],rbx
   140021735:	push   rdi
   140021736:	sub    rsp,0x20
   14002173a:	mov    edi,r8d
   14002173d:	mov    rbx,rcx
   140021740:	mov    r8d,edx
   140021743:	mov    edx,edi
   140021745:	call   0x140020bd0
   14002174a:	test   al,al
   14002174c:	jne    0x14002175b
   14002174e:	xor    eax,eax
   140021750:	mov    rbx,QWORD PTR [rsp+0x30]
   140021755:	add    rsp,0x20
   140021759:	pop    rdi
   14002175a:	ret    
   14002175b:	mov    eax,DWORD PTR [rbx+0x10]
   14002175e:	sub    eax,DWORD PTR [rbx+0x24]
   140021761:	add    eax,edi
   140021763:	cdqe   
   140021765:	add    rax,QWORD PTR [rbx]
   140021768:	mov    rbx,QWORD PTR [rsp+0x30]
   14002176d:	add    rsp,0x20
   140021771:	pop    rdi
   140021772:	ret    
   140021773:	int3   
   140021774:	int3   
   140021775:	int3   
   140021776:	int3   
   140021777:	int3   
   140021778:	int3   
   140021779:	int3   
   14002177a:	int3   
   14002177b:	int3   
   14002177c:	int3   
   14002177d:	int3   
   14002177e:	int3   
   14002177f:	int3   
   140021780:	rex push rbx
   140021782:	sub    rsp,0x20
   140021786:	cmp    BYTE PTR [rcx+0x18],0x0
   14002178a:	mov    rbx,rcx
   14002178d:	je     0x140021797
   14002178f:	xor    eax,eax
   140021791:	add    rsp,0x20
   140021795:	pop    rbx
   140021796:	ret    
   140021797:	mov    QWORD PTR [rsp+0x30],rbp
   14002179c:	mov    QWORD PTR [rsp+0x38],rsi
   1400217a1:	xor    esi,esi
   1400217a3:	test   BYTE PTR [rcx+0x19],0x1
   1400217a7:	mov    QWORD PTR [rsp+0x40],rdi
   1400217ac:	je     0x1400217b7
   1400217ae:	xor    edx,edx
   1400217b0:	call   0x140021940
   1400217b5:	mov    esi,eax
   1400217b7:	mov    ebp,esi
   1400217b9:	nop    DWORD PTR [rax+0x0]
   1400217c0:	mov    ecx,DWORD PTR [rbx+0x10]
   1400217c3:	mov    edi,0x80
   1400217c8:	mov    r8d,DWORD PTR [rbx+0x20]
   1400217cc:	lea    eax,[rcx+rsi*1]
   1400217cf:	cmp    eax,r8d
   1400217d2:	jge    0x1400218bb
   1400217d8:	sub    eax,0xffffff80
   1400217db:	cmp    eax,r8d
   1400217de:	jle    0x1400217e7
   1400217e0:	mov    edi,r8d
   1400217e3:	sub    edi,ecx
   1400217e5:	sub    edi,esi
   1400217e7:	movzx  edx,BYTE PTR [rbx+0x18]
   1400217eb:	test   dl,0x2
   1400217ee:	jne    0x14002182b
   1400217f0:	lea    r9d,[rdi+rsi*1]
   1400217f4:	lea    eax,[rcx+r9*1]
   1400217f8:	cmp    r8d,eax
   1400217fb:	jge    0x140021805
   1400217fd:	or     dl,0x2
   140021800:	mov    BYTE PTR [rbx+0x18],dl
   140021803:	jmp    0x140021827
   140021805:	mov    eax,DWORD PTR [rbx+0x24]
   140021808:	cmp    ecx,eax
   14002180a:	jl     0x140021816
   14002180c:	sub    ecx,eax
   14002180e:	add    ecx,r9d
   140021811:	cmp    DWORD PTR [rbx+0x8],ecx
   140021814:	jge    0x140021827
   140021816:	mov    edx,r9d
   140021819:	mov    rcx,rbx
   14002181c:	call   QWORD PTR [rbx+0x28]
   14002181f:	test   al,al
   140021821:	jne    0x140021827
   140021823:	or     BYTE PTR [rbx+0x18],0x2
   140021827:	and    BYTE PTR [rbx+0x18],0xfd
   14002182b:	mov    r10d,DWORD PTR [rbx+0x20]
   14002182f:	mov    ecx,DWORD PTR [rbx+0x10]
   140021832:	sub    r10d,ecx
   140021835:	cmp    r10d,edi
   140021838:	cmovge r10d,edi
   14002183c:	test   r10d,r10d
   14002183f:	setne  al
   140021842:	test   al,al
   140021844:	je     0x1400218bb
   140021846:	sub    ecx,DWORD PTR [rbx+0x24]
   140021849:	xor    edx,edx
   14002184b:	add    ecx,esi
   14002184d:	movsxd r8,r10d
   140021850:	movsxd rcx,ecx
   140021853:	add    rcx,QWORD PTR [rbx]
   140021856:	test   BYTE PTR [rbx+0x19],0x1
   14002185a:	jne    0x14002187b
   14002185c:	xor    eax,eax
   14002185e:	test   r10d,r10d
   140021861:	jle    0x1400218aa
   140021863:	cmp    BYTE PTR [rax+rcx*1],0x0
   140021867:	je     0x1400218b2
   140021869:	inc    edx
   14002186b:	inc    rax
   14002186e:	cmp    rax,r8
   140021871:	jl     0x140021863
   140021873:	add    esi,r10d
   140021876:	jmp    0x1400217c0
   14002187b:	test   r10d,r10d
   14002187e:	jle    0x1400218aa
   140021880:	mov    r9,rcx
   140021883:	neg    r9
   140021886:	movzx  eax,BYTE PTR [rcx]
   140021889:	cmp    eax,0x9
   14002188c:	jb     0x140021898
   14002188e:	cmp    eax,0xd
   140021891:	jbe    0x1400218b2
   140021893:	cmp    eax,0x20
   140021896:	je     0x1400218b2
   140021898:	test   al,al
   14002189a:	je     0x1400218b2
   14002189c:	inc    rcx
   14002189f:	inc    edx
   1400218a1:	lea    rax,[r9+rcx*1]
   1400218a5:	cmp    rax,r8
   1400218a8:	jl     0x140021886
   1400218aa:	add    esi,r10d
   1400218ad:	jmp    0x1400217c0
   1400218b2:	sub    edx,ebp
   1400218b4:	lea    eax,[rsi+0x1]
   1400218b7:	add    eax,edx
   1400218b9:	jmp    0x1400218c8
   1400218bb:	cmp    esi,ebp
   1400218bd:	jne    0x1400218c3
   1400218bf:	xor    eax,eax
   1400218c1:	jmp    0x1400218c8
   1400218c3:	sub    esi,ebp
   1400218c5:	lea    eax,[rsi+0x1]
   1400218c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400218cd:	mov    rbp,QWORD PTR [rsp+0x30]
   1400218d2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400218d7:	add    rsp,0x20
   1400218db:	pop    rbx
   1400218dc:	ret    
   1400218dd:	int3   
   1400218de:	int3   
   1400218df:	int3   
   1400218e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400218e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400218ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400218ef:	push   rdi
   1400218f0:	sub    rsp,0x20
   1400218f4:	mov    rbp,r8
   1400218f7:	mov    edi,r9d
   1400218fa:	mov    r8d,r9d
   1400218fd:	mov    esi,edx
   1400218ff:	mov    rbx,rcx
   140021902:	call   0x140020bd0
   140021907:	test   al,al
   140021909:	je     0x140021929
   14002190b:	mov    eax,DWORD PTR [rbx+0x10]
   14002190e:	mov    r8d,edi
   140021911:	sub    eax,DWORD PTR [rbx+0x24]
   140021914:	mov    rdx,rbp
   140021917:	add    eax,esi
   140021919:	movsxd rcx,eax
   14002191c:	add    rcx,QWORD PTR [rbx]
   14002191f:	call   0x140022670
   140021924:	test   eax,eax
   140021926:	sete   al
   140021929:	mov    rbx,QWORD PTR [rsp+0x30]
   14002192e:	mov    rbp,QWORD PTR [rsp+0x38]
   140021933:	mov    rsi,QWORD PTR [rsp+0x40]
   140021938:	add    rsp,0x20
   14002193c:	pop    rdi
   14002193d:	ret    
   14002193e:	int3   
   14002193f:	int3   
   140021940:	mov    QWORD PTR [rsp+0x10],rbx
   140021945:	push   rsi
   140021946:	sub    rsp,0x20
   14002194a:	test   BYTE PTR [rcx+0x19],0x1
   14002194e:	mov    esi,edx
   140021950:	mov    rbx,rcx
   140021953:	je     0x1400219f5
   140021959:	cmp    BYTE PTR [rcx+0x18],0x0
   14002195d:	jne    0x1400219f5
   140021963:	mov    QWORD PTR [rsp+0x30],rdi
   140021968:	lea    edi,[rdx+0x1]
   14002196b:	nop    DWORD PTR [rax+rax*1+0x0]
   140021970:	movzx  ecx,BYTE PTR [rbx+0x18]
   140021974:	test   cl,0x2
   140021977:	jne    0x1400219e3
   140021979:	mov    edx,DWORD PTR [rbx+0x10]
   14002197c:	lea    eax,[rdi+rdx*1]
   14002197f:	cmp    DWORD PTR [rbx+0x20],eax
   140021982:	jge    0x14002198e
   140021984:	or     cl,0x2
   140021987:	mov    BYTE PTR [rbx+0x18],cl
   14002198a:	xor    al,al
   14002198c:	jmp    0x1400219b4
   14002198e:	mov    ecx,DWORD PTR [rbx+0x24]
   140021991:	cmp    edx,ecx
   140021993:	jl     0x1400219a0
   140021995:	mov    eax,edi
   140021997:	sub    eax,ecx
   140021999:	add    eax,edx
   14002199b:	cmp    DWORD PTR [rbx+0x8],eax
   14002199e:	jge    0x1400219b2
   1400219a0:	mov    edx,edi
   1400219a2:	mov    rcx,rbx
   1400219a5:	call   QWORD PTR [rbx+0x28]
   1400219a8:	test   al,al
   1400219aa:	jne    0x1400219b2
   1400219ac:	or     BYTE PTR [rbx+0x18],0x2
   1400219b0:	jmp    0x1400219b4
   1400219b2:	mov    al,0x1
   1400219b4:	and    BYTE PTR [rbx+0x18],0xfd
   1400219b8:	test   al,al
   1400219ba:	je     0x1400219e3
   1400219bc:	mov    eax,esi
   1400219be:	sub    eax,DWORD PTR [rbx+0x24]
   1400219c1:	add    eax,DWORD PTR [rbx+0x10]
   1400219c4:	movsxd rcx,eax
   1400219c7:	mov    rax,QWORD PTR [rbx]
   1400219ca:	movzx  edx,BYTE PTR [rcx+rax*1]
   1400219ce:	cmp    edx,0x9
   1400219d1:	jb     0x1400219e3
   1400219d3:	cmp    edx,0xd
   1400219d6:	jbe    0x1400219dd
   1400219d8:	cmp    edx,0x20
   1400219db:	jne    0x1400219e3
   1400219dd:	inc    esi
   1400219df:	inc    edi
   1400219e1:	jmp    0x140021970
   1400219e3:	mov    eax,esi
   1400219e5:	mov    rdi,QWORD PTR [rsp+0x30]
   1400219ea:	mov    rbx,QWORD PTR [rsp+0x38]
   1400219ef:	add    rsp,0x20
   1400219f3:	pop    rsi
   1400219f4:	ret    
   1400219f5:	xor    eax,eax
   1400219f7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400219fc:	add    rsp,0x20
   140021a00:	pop    rsi
   140021a01:	ret    
   140021a02:	int3   
   140021a03:	int3   
   140021a04:	int3   
   140021a05:	int3   
   140021a06:	int3   
   140021a07:	int3   
   140021a08:	int3   
   140021a09:	int3   
   140021a0a:	int3   
   140021a0b:	int3   
   140021a0c:	int3   
   140021a0d:	int3   
   140021a0e:	int3   
   140021a0f:	int3   
   140021a10:	mov    QWORD PTR [rsp+0x10],rdx
   140021a15:	mov    QWORD PTR [rsp+0x18],r8
   140021a1a:	mov    QWORD PTR [rsp+0x20],r9
   140021a1f:	sub    rsp,0x28
   140021a23:	lea    r8,[rsp+0x40]
   140021a28:	call   0x140021f90
   140021a2d:	add    rsp,0x28
   140021a31:	ret    
   140021a32:	int3   
   140021a33:	int3   
   140021a34:	int3   
   140021a35:	int3   
   140021a36:	int3   
   140021a37:	int3   
   140021a38:	int3   
   140021a39:	int3   
   140021a3a:	int3   
   140021a3b:	int3   
   140021a3c:	int3   
   140021a3d:	int3   
   140021a3e:	int3   
   140021a3f:	int3   
   140021a40:	test   r8d,r8d
   140021a43:	je     0x140021b28
   140021a49:	mov    QWORD PTR [rsp+0x8],rbx
   140021a4e:	mov    QWORD PTR [rsp+0x10],rsi
   140021a53:	push   rdi
   140021a54:	sub    rsp,0x20
   140021a58:	test   BYTE PTR [rcx+0x18],0x1
   140021a5c:	mov    rsi,rdx
   140021a5f:	movsxd rdi,r8d
   140021a62:	mov    rbx,rcx
   140021a65:	jne    0x140021b19
   140021a6b:	test   BYTE PTR [rcx+0x19],0x8
   140021a6f:	jne    0x140021b19
   140021a75:	mov    eax,DWORD PTR [rcx+0x14]
   140021a78:	mov    ecx,DWORD PTR [rcx+0x24]
   140021a7b:	cmp    eax,ecx
   140021a7d:	jl     0x140021a88
   140021a7f:	sub    eax,ecx
   140021a81:	add    eax,edi
   140021a83:	cmp    DWORD PTR [rbx+0x8],eax
   140021a86:	jge    0x140021aa8
   140021a88:	mov    edx,edi
   140021a8a:	mov    rcx,rbx
   140021a8d:	call   QWORD PTR [rbx+0x30]
   140021a90:	test   al,al
   140021a92:	jne    0x140021aa8
   140021a94:	or     BYTE PTR [rbx+0x18],0x1
   140021a98:	mov    rbx,QWORD PTR [rsp+0x30]
   140021a9d:	mov    rsi,QWORD PTR [rsp+0x38]
   140021aa2:	add    rsp,0x20
   140021aa6:	pop    rdi
   140021aa7:	ret    
   140021aa8:	mov    eax,DWORD PTR [rbx+0x14]
   140021aab:	sub    eax,DWORD PTR [rbx+0x24]
   140021aae:	js     0x140021b19
   140021ab0:	movsxd rcx,eax
   140021ab3:	mov    r8,rdi
   140021ab6:	add    rcx,QWORD PTR [rbx]
   140021ab9:	mov    rdx,rsi
   140021abc:	call   0x140026f70
   140021ac1:	add    DWORD PTR [rbx+0x14],edi
   140021ac4:	mov    eax,DWORD PTR [rbx+0x14]
   140021ac7:	cmp    eax,DWORD PTR [rbx+0x20]
   140021aca:	jle    0x140021b19
   140021acc:	test   BYTE PTR [rbx+0x19],0x8
   140021ad0:	jne    0x140021b13
   140021ad2:	test   BYTE PTR [rbx+0x18],0x1
   140021ad6:	jne    0x140021b13
   140021ad8:	mov    ecx,DWORD PTR [rbx+0x24]
   140021adb:	cmp    eax,ecx
   140021add:	jl     0x140021ae8
   140021adf:	sub    eax,ecx
   140021ae1:	inc    eax
   140021ae3:	cmp    DWORD PTR [rbx+0x8],eax
   140021ae6:	jge    0x140021b01
   140021ae8:	mov    edx,0x1
   140021aed:	mov    rcx,rbx
   140021af0:	call   QWORD PTR [rbx+0x30]
   140021af3:	test   al,al
   140021af5:	jne    0x140021b01
   140021af7:	or     BYTE PTR [rbx+0x18],0x1
   140021afb:	and    BYTE PTR [rbx+0x18],0xfe
   140021aff:	jmp    0x140021b13
   140021b01:	mov    eax,DWORD PTR [rbx+0x14]
   140021b04:	sub    eax,DWORD PTR [rbx+0x24]
   140021b07:	js     0x140021b13
   140021b09:	movsxd rcx,eax
   140021b0c:	mov    rax,QWORD PTR [rbx]
   140021b0f:	mov    BYTE PTR [rcx+rax*1],0x0
   140021b13:	mov    eax,DWORD PTR [rbx+0x14]
   140021b16:	mov    DWORD PTR [rbx+0x20],eax
   140021b19:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b1e:	mov    rsi,QWORD PTR [rsp+0x38]
   140021b23:	add    rsp,0x20
   140021b27:	pop    rdi
   140021b28:	ret    
   140021b29:	int3   
   140021b2a:	int3   
   140021b2b:	int3   
   140021b2c:	int3   
   140021b2d:	int3   
   140021b2e:	int3   
   140021b2f:	int3   
   140021b30:	rex push rbx
   140021b32:	push   rsi
   140021b33:	push   r15
   140021b35:	sub    rsp,0x20
   140021b39:	test   BYTE PTR [rcx+0x19],0x1
   140021b3d:	mov    r15,r8
   140021b40:	mov    rsi,rdx
   140021b43:	mov    rbx,rcx
   140021b46:	je     0x140021c60
   140021b4c:	test   rdx,rdx
   140021b4f:	je     0x140021c60
   140021b55:	mov    edx,DWORD PTR [rcx+0x14]
   140021b58:	mov    eax,edx
   140021b5a:	mov    QWORD PTR [rsp+0x48],rdi
   140021b5f:	mov    QWORD PTR [rsp+0x50],r12
   140021b64:	sub    eax,DWORD PTR [rcx+0x24]
   140021b67:	je     0x140021b7c
   140021b69:	dec    eax
   140021b6b:	movsxd rcx,eax
   140021b6e:	mov    rax,QWORD PTR [rbx]
   140021b71:	cmp    BYTE PTR [rcx+rax*1],0xa
   140021b75:	sete   al
   140021b78:	test   al,al
   140021b7a:	jne    0x140021b80
   140021b7c:	test   edx,edx
   140021b7e:	jne    0x140021b88
   140021b80:	mov    rcx,rbx
   140021b83:	call   0x140021e00
   140021b88:	mov    r8d,DWORD PTR [rsi+0x18]
   140021b8c:	mov    rcx,rbx
   140021b8f:	mov    rdx,QWORD PTR [rsi+0x10]
   140021b93:	call   0x140021a40
   140021b98:	xor    edi,edi
   140021b9a:	test   r15,r15
   140021b9d:	je     0x140021bae
   140021b9f:	or     rax,0xffffffffffffffff
   140021ba3:	inc    rax
   140021ba6:	cmp    BYTE PTR [r15+rax*1],dil
   140021baa:	jne    0x140021ba3
   140021bac:	jmp    0x140021bb0
   140021bae:	mov    eax,edi
   140021bb0:	movsxd r12,eax
   140021bb3:	test   eax,eax
   140021bb5:	jle    0x140021c15
   140021bb7:	mov    QWORD PTR [rsp+0x40],rbp
   140021bbc:	mov    QWORD PTR [rsp+0x58],r14
   140021bc1:	movzx  edx,BYTE PTR [rdi+r15*1]
   140021bc6:	mov    rcx,rbx
   140021bc9:	mov    eax,edx
   140021bcb:	mov    ebp,edx
   140021bcd:	add    rax,rax
   140021bd0:	mov    r14d,DWORD PTR [rsi+rax*8+0x128]
   140021bd8:	test   r14d,r14d
   140021bdb:	jne    0x140021be4
   140021bdd:	call   0x14001f940
   140021be2:	jmp    0x140021c03
   140021be4:	movzx  edx,BYTE PTR [rsi+0x8]
   140021be8:	call   0x14001f940
   140021bed:	lea    rdx,[rbp+0x13]
   140021bf1:	mov    r8d,r14d
   140021bf4:	add    rdx,rdx
   140021bf7:	mov    rcx,rbx
   140021bfa:	mov    rdx,QWORD PTR [rsi+rdx*8]
   140021bfe:	call   0x140021a40
   140021c03:	inc    rdi
   140021c06:	cmp    rdi,r12
   140021c09:	jl     0x140021bc1
   140021c0b:	mov    r14,QWORD PTR [rsp+0x58]
   140021c10:	mov    rbp,QWORD PTR [rsp+0x40]
   140021c15:	test   BYTE PTR [rbx+0x19],0x1
   140021c19:	mov    r12,QWORD PTR [rsp+0x50]
   140021c1e:	mov    rdi,QWORD PTR [rsp+0x48]
   140021c23:	je     0x140021c48
   140021c25:	mov    eax,DWORD PTR [rbx+0x14]
   140021c28:	sub    eax,DWORD PTR [rbx+0x24]
   140021c2b:	je     0x140021c48
   140021c2d:	dec    eax
   140021c2f:	movsxd rcx,eax
   140021c32:	mov    rax,QWORD PTR [rbx]
   140021c35:	cmp    BYTE PTR [rcx+rax*1],0xa
   140021c39:	sete   al
   140021c3c:	test   al,al
   140021c3e:	je     0x140021c48
   140021c40:	mov    rcx,rbx
   140021c43:	call   0x140021e00
   140021c48:	mov    r8d,DWORD PTR [rsi+0x18]
   140021c4c:	mov    rcx,rbx
   140021c4f:	mov    rdx,QWORD PTR [rsi+0x10]
   140021c53:	add    rsp,0x20
   140021c57:	pop    r15
   140021c59:	pop    rsi
   140021c5a:	pop    rbx
   140021c5b:	jmp    0x140021a40
   140021c60:	mov    rdx,r15
   140021c63:	add    rsp,0x20
   140021c67:	pop    r15
   140021c69:	pop    rsi
   140021c6a:	pop    rbx
   140021c6b:	jmp    0x140021ce0
   140021c70:	mov    QWORD PTR [rsp+0x8],rbx
   140021c75:	push   rdi
   140021c76:	sub    rsp,0x20
   140021c7a:	test   DWORD PTR [rcx+0xc],0xc0000000
   140021c81:	mov    edi,edx
   140021c83:	mov    rbx,rcx
   140021c86:	je     0x140021ca2
   140021c88:	test   BYTE PTR [rcx+0x19],0x2
   140021c8c:	jne    0x140021c9b
   140021c8e:	xor    al,al
   140021c90:	mov    rbx,QWORD PTR [rsp+0x30]
   140021c95:	add    rsp,0x20
   140021c99:	pop    rdi
   140021c9a:	ret    
   140021c9b:	xor    edx,edx
   140021c9d:	call   0x140020ca0
   140021ca2:	mov    eax,edi
   140021ca4:	sub    eax,DWORD PTR [rbx+0x24]
   140021ca7:	add    eax,DWORD PTR [rbx+0x14]
   140021caa:	cmp    DWORD PTR [rbx+0x8],eax
   140021cad:	jge    0x140021cca
   140021caf:	nop
   140021cb0:	mov    edx,0x1
   140021cb5:	mov    rcx,rbx
   140021cb8:	call   0x14000f0d0
   140021cbd:	mov    eax,edi
   140021cbf:	sub    eax,DWORD PTR [rbx+0x24]
   140021cc2:	add    eax,DWORD PTR [rbx+0x14]
   140021cc5:	cmp    DWORD PTR [rbx+0x8],eax
   140021cc8:	jl     0x140021cb0
   140021cca:	mov    al,0x1
   140021ccc:	mov    rbx,QWORD PTR [rsp+0x30]
   140021cd1:	add    rsp,0x20
   140021cd5:	pop    rdi
   140021cd6:	ret    
   140021cd7:	int3   
   140021cd8:	int3   
   140021cd9:	int3   
   140021cda:	int3   
   140021cdb:	int3   
   140021cdc:	int3   
   140021cdd:	int3   
   140021cde:	int3   
   140021cdf:	int3   
   140021ce0:	mov    QWORD PTR [rsp+0x10],rbx
   140021ce5:	push   rdi
   140021ce6:	sub    rsp,0x20
   140021cea:	movzx  eax,BYTE PTR [rcx+0x19]
   140021cee:	mov    rbx,rdx
   140021cf1:	mov    rdi,rcx
   140021cf4:	test   al,0x1
   140021cf6:	jne    0x140021d2e
   140021cf8:	test   rdx,rdx
   140021cfb:	je     0x140021d1f
   140021cfd:	or     rax,0xffffffffffffffff
   140021d01:	cmp    BYTE PTR [rdx+rax*1+0x1],0x0
   140021d06:	lea    rax,[rax+0x1]
   140021d0a:	jne    0x140021d01
   140021d0c:	lea    r8d,[rax+0x1]
   140021d10:	mov    rbx,QWORD PTR [rsp+0x38]
   140021d15:	add    rsp,0x20
   140021d19:	pop    rdi
   140021d1a:	jmp    0x140021a40
   140021d1f:	mov    rbx,QWORD PTR [rsp+0x38]
   140021d24:	add    rsp,0x20
   140021d28:	pop    rdi
   140021d29:	jmp    0x1400207d0
   140021d2e:	test   rbx,rbx
   140021d31:	je     0x140021def
   140021d37:	test   al,0x10
   140021d39:	jne    0x140021dd0
   140021d3f:	cmp    DWORD PTR [rcx+0x1c],0x0
   140021d43:	jle    0x140021dd0
   140021d49:	mov    edx,DWORD PTR [rcx+0x14]
   140021d4c:	mov    eax,edx
   140021d4e:	mov    QWORD PTR [rsp+0x30],rsi
   140021d53:	sub    eax,DWORD PTR [rcx+0x24]
   140021d56:	je     0x140021d6b
   140021d58:	dec    eax
   140021d5a:	movsxd rcx,eax
   140021d5d:	mov    rax,QWORD PTR [rdi]
   140021d60:	cmp    BYTE PTR [rcx+rax*1],0xa
   140021d64:	sete   al
   140021d67:	test   al,al
   140021d69:	jne    0x140021d6f
   140021d6b:	test   edx,edx
   140021d6d:	jne    0x140021d77
   140021d6f:	mov    rcx,rdi
   140021d72:	call   0x140021e00
   140021d77:	mov    edx,0xa
   140021d7c:	mov    rcx,rbx
   140021d7f:	call   0x140027a28
   140021d84:	mov    rsi,rax
   140021d87:	test   rax,rax
   140021d8a:	je     0x140021dcb
   140021d8c:	nop    DWORD PTR [rax+0x0]
   140021d90:	mov    r8d,esi
   140021d93:	mov    rdx,rbx
   140021d96:	sub    r8d,ebx
   140021d99:	mov    rcx,rdi
   140021d9c:	inc    r8d
   140021d9f:	call   0x140021a40
   140021da4:	cmp    BYTE PTR [rsi+0x1],0x0
   140021da8:	lea    rbx,[rsi+0x1]
   140021dac:	je     0x140021dcb
   140021dae:	mov    rcx,rdi
   140021db1:	call   0x140021e00
   140021db6:	mov    edx,0xa
   140021dbb:	mov    rcx,rbx
   140021dbe:	call   0x140027a28
   140021dc3:	mov    rsi,rax
   140021dc6:	test   rax,rax
   140021dc9:	jne    0x140021d90
   140021dcb:	mov    rsi,QWORD PTR [rsp+0x30]
   140021dd0:	or     rax,0xffffffffffffffff
   140021dd4:	inc    rax
   140021dd7:	cmp    BYTE PTR [rbx+rax*1],0x0
   140021ddb:	jne    0x140021dd4
   140021ddd:	test   eax,eax
   140021ddf:	je     0x140021def
   140021de1:	mov    r8d,eax
   140021de4:	mov    rdx,rbx
   140021de7:	mov    rcx,rdi
   140021dea:	call   0x140021a40
   140021def:	mov    rbx,QWORD PTR [rsp+0x38]
   140021df4:	add    rsp,0x20
   140021df8:	pop    rdi
   140021df9:	ret    
   140021dfa:	int3   
   140021dfb:	int3   
   140021dfc:	int3   
   140021dfd:	int3   
   140021dfe:	int3   
   140021dff:	int3   
   140021e00:	mov    QWORD PTR [rsp+0x8],rbx
   140021e05:	push   rdi
   140021e06:	sub    rsp,0x20
   140021e0a:	test   BYTE PTR [rcx+0x19],0x10
   140021e0e:	mov    rbx,rcx
   140021e11:	je     0x140021e17
   140021e13:	xor    edi,edi
   140021e15:	jmp    0x140021e1a
   140021e17:	mov    edi,DWORD PTR [rcx+0x1c]
   140021e1a:	sub    edi,0x1
   140021e1d:	js     0x140021ed0
   140021e23:	test   BYTE PTR [rbx+0x18],0x1
   140021e27:	jne    0x140021ec7
   140021e2d:	test   BYTE PTR [rbx+0x19],0x8
   140021e31:	jne    0x140021ec7
   140021e37:	mov    eax,DWORD PTR [rbx+0x14]
   140021e3a:	mov    ecx,DWORD PTR [rbx+0x24]
   140021e3d:	cmp    eax,ecx
   140021e3f:	jl     0x140021e4a
   140021e41:	sub    eax,ecx
   140021e43:	inc    eax
   140021e45:	cmp    DWORD PTR [rbx+0x8],eax
   140021e48:	jge    0x140021e5f
   140021e4a:	mov    edx,0x1
   140021e4f:	mov    rcx,rbx
   140021e52:	call   QWORD PTR [rbx+0x30]
   140021e55:	test   al,al
   140021e57:	jne    0x140021e5f
   140021e59:	or     BYTE PTR [rbx+0x18],0x1
   140021e5d:	jmp    0x140021ec7
   140021e5f:	mov    eax,DWORD PTR [rbx+0x14]
   140021e62:	sub    eax,DWORD PTR [rbx+0x24]
   140021e65:	movsxd rcx,eax
   140021e68:	mov    rax,QWORD PTR [rbx]
   140021e6b:	mov    BYTE PTR [rcx+rax*1],0x9
   140021e6f:	inc    DWORD PTR [rbx+0x14]
   140021e72:	mov    eax,DWORD PTR [rbx+0x14]
   140021e75:	cmp    eax,DWORD PTR [rbx+0x20]
   140021e78:	jle    0x140021ec7
   140021e7a:	test   BYTE PTR [rbx+0x19],0x8
   140021e7e:	jne    0x140021ec1
   140021e80:	test   BYTE PTR [rbx+0x18],0x1
   140021e84:	jne    0x140021ec1
   140021e86:	mov    ecx,DWORD PTR [rbx+0x24]
   140021e89:	cmp    eax,ecx
   140021e8b:	jl     0x140021e96
   140021e8d:	sub    eax,ecx
   140021e8f:	inc    eax
   140021e91:	cmp    DWORD PTR [rbx+0x8],eax
   140021e94:	jge    0x140021eaf
   140021e96:	mov    edx,0x1
   140021e9b:	mov    rcx,rbx
   140021e9e:	call   QWORD PTR [rbx+0x30]
   140021ea1:	test   al,al
   140021ea3:	jne    0x140021eaf
   140021ea5:	or     BYTE PTR [rbx+0x18],0x1
   140021ea9:	and    BYTE PTR [rbx+0x18],0xfe
   140021ead:	jmp    0x140021ec1
   140021eaf:	mov    eax,DWORD PTR [rbx+0x14]
   140021eb2:	sub    eax,DWORD PTR [rbx+0x24]
   140021eb5:	js     0x140021ec1
   140021eb7:	movsxd rcx,eax
   140021eba:	mov    rax,QWORD PTR [rbx]
   140021ebd:	mov    BYTE PTR [rcx+rax*1],0x0
   140021ec1:	mov    eax,DWORD PTR [rbx+0x14]
   140021ec4:	mov    DWORD PTR [rbx+0x20],eax
   140021ec7:	sub    edi,0x1
   140021eca:	jns    0x140021e23
   140021ed0:	mov    rbx,QWORD PTR [rsp+0x30]
   140021ed5:	add    rsp,0x20
   140021ed9:	pop    rdi
   140021eda:	ret    
   140021edb:	int3   
   140021edc:	int3   
   140021edd:	int3   
   140021ede:	int3   
   140021edf:	int3   
   140021ee0:	mov    r9,rcx
   140021ee3:	test   edx,edx
   140021ee5:	je     0x140021f02
   140021ee7:	sub    edx,0x1
   140021eea:	je     0x140021efc
   140021eec:	cmp    edx,0x1
   140021eef:	jne    0x140021f06
   140021ef1:	mov    eax,DWORD PTR [rcx+0x20]
   140021ef4:	sub    eax,r8d
   140021ef7:	mov    DWORD PTR [rcx+0x10],eax
   140021efa:	jmp    0x140021f06
   140021efc:	add    DWORD PTR [rcx+0x10],r8d
   140021f00:	jmp    0x140021f06
   140021f02:	mov    DWORD PTR [rcx+0x10],r8d
   140021f06:	mov    edx,DWORD PTR [rcx+0x10]
   140021f09:	cmp    edx,DWORD PTR [rcx+0x20]
   140021f0c:	jle    0x140021f13
   140021f0e:	or     BYTE PTR [rcx+0x18],0x2
   140021f12:	ret    
   140021f13:	and    BYTE PTR [rcx+0x18],0xfd
   140021f17:	mov    ecx,DWORD PTR [rcx+0x24]
   140021f1a:	cmp    edx,ecx
   140021f1c:	jl     0x140021f26
   140021f1e:	add    ecx,DWORD PTR [r9+0x8]
   140021f22:	cmp    edx,ecx
   140021f24:	jl     0x140021f30
   140021f26:	or     edx,0xffffffff
   140021f29:	mov    rcx,r9
   140021f2c:	rex.WB jmp QWORD PTR [r9+0x28]
   140021f30:	ret    
   140021f31:	int3   
   140021f32:	int3   
   140021f33:	int3   
   140021f34:	int3   
   140021f35:	int3   
   140021f36:	int3   
   140021f37:	int3   
   140021f38:	int3   
   140021f39:	int3   
   140021f3a:	int3   
   140021f3b:	int3   
   140021f3c:	int3   
   140021f3d:	int3   
   140021f3e:	int3   
   140021f3f:	int3   
   140021f40:	mov    QWORD PTR [rsp+0x8],rbx
   140021f45:	push   rdi
   140021f46:	sub    rsp,0x20
   140021f4a:	mov    ebx,DWORD PTR [rcx+0x14]
   140021f4d:	mov    rdi,rcx
   140021f50:	test   edx,edx
   140021f52:	je     0x140021f6b
   140021f54:	sub    edx,0x1
   140021f57:	je     0x140021f66
   140021f59:	cmp    edx,0x1
   140021f5c:	jne    0x140021f6e
   140021f5e:	mov    ebx,DWORD PTR [rcx+0x20]
   140021f61:	sub    ebx,r8d
   140021f64:	jmp    0x140021f6e
   140021f66:	add    ebx,r8d
   140021f69:	jmp    0x140021f6e
   140021f6b:	mov    ebx,r8d
   140021f6e:	mov    edx,ebx
   140021f70:	not    edx
   140021f72:	call   QWORD PTR [rcx+0x30]
   140021f75:	mov    rcx,rdi
   140021f78:	mov    DWORD PTR [rdi+0x14],ebx
   140021f7b:	mov    rbx,QWORD PTR [rsp+0x30]
   140021f80:	add    rsp,0x20
   140021f84:	pop    rdi
   140021f85:	jmp    0x1400209e0
   140021f8a:	int3   
   140021f8b:	int3   
   140021f8c:	int3   
   140021f8d:	int3   
   140021f8e:	int3   
   140021f8f:	int3   
   140021f90:	rex push rbx
   140021f92:	mov    eax,0x2050
   140021f97:	call   0x1400263c0
   140021f9c:	sub    rsp,rax
   140021f9f:	mov    r9,r8
   140021fa2:	mov    rbx,rcx
   140021fa5:	mov    r8,rdx
   140021fa8:	lea    rcx,[rsp+0x50]
   140021fad:	lea    edx,[rax-0x50]
   140021fb0:	call   QWORD PTR [rip+0x10592]        # 0x140032548
   140021fb6:	movsxd rdx,eax
   140021fb9:	cmp    rdx,0x1fff
   140021fc0:	jae    0x140021fd8
   140021fc2:	lea    rdx,[rsp+0x50]
   140021fc7:	mov    rcx,rbx
   140021fca:	call   0x140021ce0
   140021fcf:	add    rsp,0x2050
   140021fd6:	pop    rbx
   140021fd7:	ret    
   140021fd8:	mov    rax,QWORD PTR [rip+0x103a9]        # 0x140032388
   140021fdf:	mov    edx,0x4
   140021fe4:	mov    ecx,DWORD PTR [rax]
   140021fe6:	call   QWORD PTR [rip+0x104bc]        # 0x1400324a8
   140021fec:	test   al,al
   140021fee:	je     0x140022039
   140021ff0:	lea    rax,[rip+0x15fa9]        # 0x140037fa0
   140021ff7:	mov    DWORD PTR [rsp+0x38],0x622
   140021fff:	mov    QWORD PTR [rsp+0x30],rax
   140022004:	lea    r9,[rip+0x15f3d]        # 0x140037f48
   14002200b:	lea    rax,[rip+0x15f6e]        # 0x140037f80
   140022012:	mov    QWORD PTR [rsp+0x20],0x2000
   14002201b:	mov    QWORD PTR [rsp+0x40],rax
   140022020:	lea    r8,[rsp+0x30]
   140022025:	mov    rax,QWORD PTR [rip+0x1035c]        # 0x140032388
   14002202c:	mov    edx,0x4
   140022031:	mov    ecx,DWORD PTR [rax]
   140022033:	call   QWORD PTR [rip+0x1045f]        # 0x140032498
   140022039:	call   QWORD PTR [rip+0x10549]        # 0x140032588
   14002203f:	test   al,al
   140022041:	je     0x140022072
   140022043:	call   QWORD PTR [rip+0x10437]        # 0x140032480
   140022049:	lea    rcx,[rip+0x1075c]        # 0x1400327ac
   140022050:	xorps  xmm0,xmm0
   140022053:	lea    rdx,[rsp+0x30]
   140022058:	mov    DWORD PTR [rsp+0x38],eax
   14002205c:	mov    QWORD PTR [rsp+0x30],rcx
   140022061:	mov    r8b,0x1
   140022064:	xor    ecx,ecx
   140022066:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14002206c:	call   QWORD PTR [rip+0x10406]        # 0x140032478
   140022072:	mov    ecx,0x1
   140022077:	call   QWORD PTR [rip+0x101cb]        # 0x140032248
   14002207d:	int3   
   14002207e:	int3   
   14002207f:	int3   
   140022080:	sub    rsp,0x48
   140022084:	test   cl,0xf
   140022087:	je     0x14002212a
   14002208d:	mov    rax,QWORD PTR [rip+0x102f4]        # 0x140032388
   140022094:	mov    edx,0x4
   140022099:	mov    ecx,DWORD PTR [rax]
   14002209b:	call   QWORD PTR [rip+0x10407]        # 0x1400324a8
   1400220a1:	test   al,al
   1400220a3:	je     0x1400220e5
   1400220a5:	lea    rax,[rip+0x15f84]        # 0x140038030
   1400220ac:	mov    DWORD PTR [rsp+0x28],0x7e
   1400220b4:	mov    QWORD PTR [rsp+0x20],rax
   1400220b9:	lea    r9,[rip+0x15f28]        # 0x140037fe8
   1400220c0:	lea    rax,[rip+0x15f41]        # 0x140038008
   1400220c7:	mov    edx,0x4
   1400220cc:	mov    QWORD PTR [rsp+0x30],rax
   1400220d1:	lea    r8,[rsp+0x20]
   1400220d6:	mov    rax,QWORD PTR [rip+0x102ab]        # 0x140032388
   1400220dd:	mov    ecx,DWORD PTR [rax]
   1400220df:	call   QWORD PTR [rip+0x103b3]        # 0x140032498
   1400220e5:	call   QWORD PTR [rip+0x1049d]        # 0x140032588
   1400220eb:	test   al,al
   1400220ed:	je     0x14002211e
   1400220ef:	call   QWORD PTR [rip+0x1038b]        # 0x140032480
   1400220f5:	lea    rcx,[rip+0x106b0]        # 0x1400327ac
   1400220fc:	xorps  xmm0,xmm0
   1400220ff:	lea    rdx,[rsp+0x20]
   140022104:	mov    DWORD PTR [rsp+0x28],eax
   140022108:	mov    QWORD PTR [rsp+0x20],rcx
   14002210d:	mov    r8b,0x1
   140022110:	xor    ecx,ecx
   140022112:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140022118:	call   QWORD PTR [rip+0x1035a]        # 0x140032478
   14002211e:	mov    ecx,0x1
   140022123:	call   QWORD PTR [rip+0x1011f]        # 0x140032248
   140022129:	int3   
   14002212a:	xorps  xmm0,xmm0
   14002212d:	mov    rax,rcx
   140022130:	movdqa XMMWORD PTR [rcx],xmm0
   140022134:	add    rsp,0x48
   140022138:	ret    
   140022139:	int3   
   14002213a:	int3   
   14002213b:	int3   
   14002213c:	int3   
   14002213d:	int3   
   14002213e:	int3   
   14002213f:	int3   
   140022140:	mov    QWORD PTR [rsp+0x10],rdx
   140022145:	push   rbx
   140022146:	push   rsi
   140022147:	push   rdi
   140022148:	push   r13
   14002214a:	push   r15
   14002214c:	sub    rsp,0x50
   140022150:	xor    edi,edi
   140022152:	mov    rbx,r9
   140022155:	mov    r13,r8
   140022158:	mov    r15,rcx
   14002215b:	test   r9,r9
   14002215e:	je     0x14002217e
   140022160:	mov    rcx,rbx
   140022163:	mov    QWORD PTR [r9+0x10],rdi
   140022167:	mov    BYTE PTR [r9+0x18],dil
   14002216b:	mov    DWORD PTR [r9+0x24],edi
   14002216f:	mov    DWORD PTR [r9+0x20],0xffffffff
   140022177:	call   0x1400209e0
   14002217c:	jmp    0x140022184
   14002217e:	mov    QWORD PTR [rdx],rdi
   140022181:	mov    DWORD PTR [r8],edi
   140022184:	mov    rcx,r15
   140022187:	call   QWORD PTR [rip+0x1029b]        # 0x140032428
   14002218d:	mov    rsi,rax
   140022190:	test   rax,rax
   140022193:	jg     0x1400221a3
   140022195:	xor    eax,eax
   140022197:	add    rsp,0x50
   14002219b:	pop    r15
   14002219d:	pop    r13
   14002219f:	pop    rdi
   1400221a0:	pop    rsi
   1400221a1:	pop    rbx
   1400221a2:	ret    
   1400221a3:	cmp    rsi,0x7fffffff
   1400221aa:	jge    0x14002242c
   1400221b0:	movsxd rax,DWORD PTR [rsp+0xa8]
   1400221b8:	test   eax,eax
   1400221ba:	jle    0x1400221c5
   1400221bc:	cmp    rsi,rax
   1400221bf:	jg     0x14002242c
   1400221c5:	mov    QWORD PTR [rsp+0x80],rbp
   1400221cd:	mov    QWORD PTR [rsp+0x48],r12
   1400221d2:	mov    QWORD PTR [rsp+0x40],r14
   1400221d7:	call   0x140022460
   1400221dc:	xor    r9d,r9d
   1400221df:	mov    BYTE PTR [rsp+0x20],0x0
   1400221e4:	mov    r8,r15
   1400221e7:	mov    edx,0x1fffc
   1400221ec:	mov    rcx,rax
   1400221ef:	mov    r14,rax
   1400221f2:	mov    BYTE PTR [rax],0x0
   1400221f5:	mov    rbp,rdi
   1400221f8:	call   QWORD PTR [rip+0x101ea]        # 0x1400323e8
   1400221fe:	mov    rcx,r14
   140022201:	call   QWORD PTR [rip+0x102c1]        # 0x1400324c8
   140022207:	movzx  eax,BYTE PTR [r14]
   14002220b:	test   al,al
   14002220d:	je     0x14002226c
   14002220f:	cmp    al,0x5c
   140022211:	jne    0x140022238
   140022213:	cmp    BYTE PTR [r14+0x1],al
   140022217:	jne    0x140022238
   140022219:	call   0x140022460
   14002221e:	movups xmm0,XMMWORD PTR [rip+0x15e53]        # 0x140038078
   140022225:	lea    rcx,[r14+0x2]
   140022229:	mov    r8d,0x1ffec
   14002222f:	movups XMMWORD PTR [rax],xmm0
   140022232:	lea    rdx,[rax+0x10]
   140022236:	jmp    0x140022256
   140022238:	call   0x140022460
   14002223d:	movsd  xmm0,QWORD PTR [rip+0x15e4b]        # 0x140038090
   140022245:	mov    r8d,0x1fff4
   14002224b:	mov    rcx,r14
   14002224e:	movsd  QWORD PTR [rax],xmm0
   140022252:	lea    rdx,[rax+0x8]
   140022256:	mov    r9d,0x4
   14002225c:	mov    rbp,rax
   14002225f:	call   QWORD PTR [rip+0x101b3]        # 0x140032418
   140022265:	mov    WORD PTR [rbp+0x1fffa],di
   14002226c:	xor    r9d,r9d
   14002226f:	mov    QWORD PTR [rsp+0x30],rdi
   140022274:	mov    DWORD PTR [rsp+0x28],0x8000080
   14002227c:	mov    edx,0x80000000
   140022281:	mov    rcx,rbp
   140022284:	mov    DWORD PTR [rsp+0x20],0x3
   14002228c:	lea    r8d,[r9+0x5]
   140022290:	call   QWORD PTR [rip+0xff22]        # 0x1400321b8
   140022296:	mov    r12,rax
   140022299:	cmp    rax,0xffffffffffffffff
   14002229d:	jne    0x1400222f1
   14002229f:	call   QWORD PTR [rip+0xff63]        # 0x140032208
   1400222a5:	mov    r15d,eax
   1400222a8:	test   rbp,rbp
   1400222ab:	je     0x1400222bc
   1400222ad:	mov    rdx,rbp
   1400222b0:	lea    rcx,[rip+0x25f89]        # 0x140048240
   1400222b7:	call   0x1400225c0
   1400222bc:	mov    rdx,r14
   1400222bf:	lea    rcx,[rip+0x25f7a]        # 0x140048240
   1400222c6:	call   0x1400225c0
   1400222cb:	test   r15d,r15d
   1400222ce:	je     0x140022314
   1400222d0:	mov    eax,r15d
   1400222d3:	mov    r12,QWORD PTR [rsp+0x48]
   1400222d8:	mov    rbp,QWORD PTR [rsp+0x80]
   1400222e0:	mov    r14,QWORD PTR [rsp+0x40]
   1400222e5:	add    rsp,0x50
   1400222e9:	pop    r15
   1400222eb:	pop    r13
   1400222ed:	pop    rdi
   1400222ee:	pop    rsi
   1400222ef:	pop    rbx
   1400222f0:	ret    
   1400222f1:	test   rbp,rbp
   1400222f4:	je     0x140022305
   1400222f6:	mov    rdx,rbp
   1400222f9:	lea    rcx,[rip+0x25f40]        # 0x140048240
   140022300:	call   0x1400225c0
   140022305:	mov    rdx,r14
   140022308:	lea    rcx,[rip+0x25f31]        # 0x140048240
   14002230f:	call   0x1400225c0
   140022314:	test   rbx,rbx
   140022317:	je     0x140022328
   140022319:	mov    edx,esi
   14002231b:	mov    rcx,rbx
   14002231e:	call   0x140020fc0
   140022323:	mov    r14,QWORD PTR [rbx]
   140022326:	jmp    0x140022357
   140022328:	cmp    BYTE PTR [rsp+0xa0],0x0
   140022330:	lea    ebp,[rsi+0x1]
   140022333:	jne    0x140022337
   140022335:	mov    ebp,esi
   140022337:	mov    rax,QWORD PTR [rip+0x10052]        # 0x140032390
   14002233e:	movsxd rdx,ebp
   140022341:	mov    rcx,QWORD PTR [rax]
   140022344:	mov    rax,QWORD PTR [rcx]
   140022347:	call   QWORD PTR [rax+0x8]
   14002234a:	lea    ecx,[rbp-0x1]
   14002234d:	mov    r14,rax
   140022350:	movsxd rdx,ecx
   140022353:	mov    BYTE PTR [rdx+rax*1],0x0
   140022357:	lea    r9,[rsp+0x98]
   14002235f:	mov    DWORD PTR [rsp+0x98],edi
   140022366:	mov    r8d,esi
   140022369:	mov    QWORD PTR [rsp+0x20],rdi
   14002236e:	mov    rdx,r14
   140022371:	mov    rcx,r12
   140022374:	call   QWORD PTR [rip+0xfe26]        # 0x1400321a0
   14002237a:	test   eax,eax
   14002237c:	jne    0x140022388
   14002237e:	call   QWORD PTR [rip+0xfe84]        # 0x140032208
   140022384:	mov    ebp,eax
   140022386:	jmp    0x1400223a2
   140022388:	cmp    DWORD PTR [rsp+0x98],esi
   14002238f:	jge    0x1400223a0
   140022391:	mov    ebp,0x26
   140022396:	mov    ecx,ebp
   140022398:	call   QWORD PTR [rip+0xfdea]        # 0x140032188
   14002239e:	jmp    0x1400223a2
   1400223a0:	mov    ebp,edi
   1400223a2:	mov    rcx,r12
   1400223a5:	call   QWORD PTR [rip+0xfde5]        # 0x140032190
   1400223ab:	test   eax,eax
   1400223ad:	jne    0x1400223b5
   1400223af:	call   QWORD PTR [rip+0xfe53]        # 0x140032208
   1400223b5:	test   ebp,ebp
   1400223b7:	je     0x1400223fd
   1400223b9:	test   rbx,rbx
   1400223bc:	je     0x1400223e3
   1400223be:	mov    rcx,rbx
   1400223c1:	mov    QWORD PTR [rbx+0x10],0x0
   1400223c9:	mov    BYTE PTR [rbx+0x18],0x0
   1400223cd:	mov    DWORD PTR [rbx+0x24],edi
   1400223d0:	mov    DWORD PTR [rbx+0x20],0xffffffff
   1400223d7:	call   0x1400209e0
   1400223dc:	mov    eax,ebp
   1400223de:	jmp    0x1400222d3
   1400223e3:	mov    rax,QWORD PTR [rip+0xffa6]        # 0x140032390
   1400223ea:	mov    rdx,r14
   1400223ed:	mov    rcx,QWORD PTR [rax]
   1400223f0:	mov    rax,QWORD PTR [rcx]
   1400223f3:	call   QWORD PTR [rax+0x28]
   1400223f6:	mov    eax,ebp
   1400223f8:	jmp    0x1400222d3
   1400223fd:	test   rbx,rbx
   140022400:	je     0x140022416
   140022402:	mov    r8d,esi
   140022405:	xor    edx,edx
   140022407:	mov    rcx,rbx
   14002240a:	call   0x140021f40
   14002240f:	xor    eax,eax
   140022411:	jmp    0x1400222d3
   140022416:	mov    rax,QWORD PTR [rsp+0x88]
   14002241e:	mov    QWORD PTR [rax],r14
   140022421:	xor    eax,eax
   140022423:	mov    DWORD PTR [r13+0x0],esi
   140022427:	jmp    0x1400222d3
   14002242c:	mov    eax,0x216
   140022431:	add    rsp,0x50
   140022435:	pop    r15
   140022437:	pop    r13
   140022439:	pop    rdi
   14002243a:	pop    rsi
   14002243b:	pop    rbx
   14002243c:	ret    
   14002243d:	int3   
   14002243e:	int3   
   14002243f:	int3   
   140022440:	sub    rsp,0x38
   140022444:	mov    DWORD PTR [rsp+0x28],r8d
   140022449:	mov    r9,rdx
   14002244c:	xor    r8d,r8d
   14002244f:	mov    BYTE PTR [rsp+0x20],0x1
   140022454:	xor    edx,edx
   140022456:	call   0x140022140
   14002245b:	add    rsp,0x38
   14002245f:	ret    
   140022460:	rex push rbx
   140022462:	sub    rsp,0x40
   140022466:	movdqa xmm0,XMMWORD PTR [rip+0x25dd2]        # 0x140048240
   14002246e:	movq   r8,xmm0
   140022473:	mov    DWORD PTR [rsp+0x2c],0x0
   14002247b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140022481:	test   r8,r8
   140022484:	je     0x1400224eb
   140022486:	data16 nop WORD PTR [rax+rax*1+0x0]
   140022490:	mov    eax,DWORD PTR [rsp+0x38]
   140022494:	mov    rbx,QWORD PTR [r8]
   140022497:	dec    eax
   140022499:	mov    DWORD PTR [rsp+0x28],eax
   14002249d:	movq   rax,xmm0
   1400224a2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400224a7:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400224ad:	psrldq xmm0,0x8
   1400224b2:	movq   rdx,xmm0
   1400224b7:	mov    QWORD PTR [rsp+0x20],rbx
   1400224bc:	lock cmpxchg16b OWORD PTR [rip+0x25d7b]        # 0x140048240
   1400224c5:	sete   al
   1400224c8:	mov    QWORD PTR [rsp+0x38],rdx
   1400224cd:	cmp    al,0x1
   1400224cf:	je     0x1400224fa
   1400224d1:	pause  
   1400224d3:	movdqa xmm0,XMMWORD PTR [rip+0x25d65]        # 0x140048240
   1400224db:	movq   r8,xmm0
   1400224e0:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400224e6:	test   r8,r8
   1400224e9:	jne    0x140022490
   1400224eb:	mov    ecx,0x20000
   1400224f0:	add    rsp,0x40
   1400224f4:	pop    rbx
   1400224f5:	jmp    0x140007bf0
   1400224fa:	mov    rax,r8
   1400224fd:	add    rsp,0x40
   140022501:	pop    rbx
   140022502:	ret    
   140022503:	int3   
   140022504:	int3   
   140022505:	int3   
   140022506:	int3   
   140022507:	int3   
   140022508:	int3   
   140022509:	int3   
   14002250a:	int3   
   14002250b:	int3   
   14002250c:	int3   
   14002250d:	int3   
   14002250e:	int3   
   14002250f:	int3   
   140022510:	mov    QWORD PTR [rsp+0x8],rbx
   140022515:	mov    QWORD PTR [rsp+0x10],rsi
   14002251a:	push   rdi
   14002251b:	sub    rsp,0x40
   14002251f:	mov    rdi,rcx
   140022522:	xor    esi,esi
   140022524:	nop    DWORD PTR [rax+0x0]
   140022528:	nop    DWORD PTR [rax+rax*1+0x0]
   140022530:	movdqa xmm1,XMMWORD PTR [rdi]
   140022534:	movq   r8,xmm1
   140022539:	mov    DWORD PTR [rsp+0x2c],esi
   14002253d:	test   r8,r8
   140022540:	je     0x14002259b
   140022542:	nop    DWORD PTR [rax+0x0]
   140022546:	data16 nop WORD PTR [rax+rax*1+0x0]
   140022550:	mov    rbx,QWORD PTR [r8]
   140022553:	movdqa xmm0,xmm1
   140022557:	psrldq xmm0,0x8
   14002255c:	movd   eax,xmm0
   140022560:	mov    QWORD PTR [rsp+0x20],rbx
   140022565:	dec    eax
   140022567:	mov    DWORD PTR [rsp+0x28],eax
   14002256b:	movq   rax,xmm1
   140022570:	mov    rcx,QWORD PTR [rsp+0x28]
   140022575:	psrldq xmm1,0x8
   14002257a:	movq   rdx,xmm1
   14002257f:	lock cmpxchg16b OWORD PTR [rdi]
   140022584:	sete   al
   140022587:	cmp    al,0x1
   140022589:	je     0x1400225ab
   14002258b:	pause  
   14002258d:	movdqa xmm1,XMMWORD PTR [rdi]
   140022591:	movq   r8,xmm1
   140022596:	test   r8,r8
   140022599:	jne    0x140022550
   14002259b:	mov    rbx,QWORD PTR [rsp+0x50]
   1400225a0:	mov    rsi,QWORD PTR [rsp+0x58]
   1400225a5:	add    rsp,0x40
   1400225a9:	pop    rdi
   1400225aa:	ret    
   1400225ab:	mov    edx,0x20000
   1400225b0:	mov    rcx,r8
   1400225b3:	call   0x14002639c
   1400225b8:	jmp    0x140022530
   1400225bd:	int3   
   1400225be:	int3   
   1400225bf:	int3   
   1400225c0:	rex push rbx
   1400225c2:	sub    rsp,0x20
   1400225c6:	movdqa xmm1,XMMWORD PTR [rcx]
   1400225ca:	mov    rbx,rdx
   1400225cd:	movdqa xmm0,xmm1
   1400225d1:	mov    DWORD PTR [rsp+0x1c],0x0
   1400225d9:	movq   r9,xmm1
   1400225de:	psrldq xmm0,0x8
   1400225e3:	movd   eax,xmm0
   1400225e7:	mov    r8,rcx
   1400225ea:	mov    QWORD PTR [rdx],r9
   1400225ed:	add    eax,0x10001
   1400225f2:	mov    DWORD PTR [rsp+0x18],eax
   1400225f6:	movq   rax,xmm1
   1400225fb:	mov    rcx,QWORD PTR [rsp+0x18]
   140022600:	psrldq xmm1,0x8
   140022605:	movq   rdx,xmm1
   14002260a:	lock cmpxchg16b OWORD PTR [r8]
   14002260f:	sete   al
   140022612:	cmp    al,0x1
   140022614:	je     0x140022666
   140022616:	prefetchw BYTE PTR [r8]
   14002261a:	nop    WORD PTR [rax+rax*1+0x0]
   140022620:	pause  
   140022622:	movdqa xmm1,XMMWORD PTR [r8]
   140022627:	movdqa xmm0,xmm1
   14002262b:	movq   r9,xmm1
   140022630:	psrldq xmm0,0x8
   140022635:	movd   eax,xmm0
   140022639:	mov    QWORD PTR [rbx],r9
   14002263c:	add    eax,0x10001
   140022641:	mov    DWORD PTR [rsp+0x18],eax
   140022645:	movq   rax,xmm1
   14002264a:	mov    rcx,QWORD PTR [rsp+0x18]
   14002264f:	psrldq xmm1,0x8
   140022654:	movq   rdx,xmm1
   140022659:	lock cmpxchg16b OWORD PTR [r8]
   14002265e:	sete   cl
   140022661:	cmp    cl,0x1
   140022664:	jne    0x140022620
   140022666:	mov    rax,r9
   140022669:	add    rsp,0x20
   14002266d:	pop    rbx
   14002266e:	ret    
   14002266f:	int3   
   140022670:	mov    r9,rcx
   140022673:	test   r8d,r8d
   140022676:	jle    0x14002269a
   140022678:	nop    DWORD PTR [rax+rax*1+0x0]
   140022680:	movzx  eax,BYTE PTR [r9]
   140022684:	dec    r8d
   140022687:	cmp    al,BYTE PTR [rdx]
   140022689:	jne    0x14002269d
   14002268b:	test   al,al
   14002268d:	je     0x14002269a
   14002268f:	inc    r9
   140022692:	inc    rdx
   140022695:	test   r8d,r8d
   140022698:	jg     0x140022680
   14002269a:	xor    eax,eax
   14002269c:	ret    
   14002269d:	movzx  ecx,BYTE PTR [rdx]
   1400226a0:	or     r8d,0xffffffff
   1400226a4:	cmp    BYTE PTR [r9],cl
   1400226a7:	mov    eax,0x1
   1400226ac:	cmovl  eax,r8d
   1400226b0:	ret    
   1400226b1:	int3   
   1400226b2:	int3   
   1400226b3:	int3   
   1400226b4:	int3   
   1400226b5:	int3   
   1400226b6:	int3   
   1400226b7:	int3   
   1400226b8:	int3   
   1400226b9:	int3   
   1400226ba:	int3   
   1400226bb:	int3   
   1400226bc:	int3   
   1400226bd:	int3   
   1400226be:	int3   
   1400226bf:	int3   
   1400226c0:	movsxd rdx,edx
   1400226c3:	jmp    0x140028444
   1400226c8:	int3   
   1400226c9:	int3   
   1400226ca:	int3   
   1400226cb:	int3   
   1400226cc:	int3   
   1400226cd:	int3   
   1400226ce:	int3   
   1400226cf:	int3   
   1400226d0:	cmp    BYTE PTR [rcx],0x0
   1400226d3:	mov    rax,rcx
   1400226d6:	je     0x1400226e0
   1400226d8:	inc    rax
   1400226db:	cmp    BYTE PTR [rax],0x0
   1400226de:	jne    0x1400226d8
   1400226e0:	sub    eax,ecx
   1400226e2:	mov    r8d,0x3501a674
   1400226e8:	mov    edx,eax
   1400226ea:	jmp    0x1400226f0
   1400226ef:	int3   
   1400226f0:	mov    r9d,edx
   1400226f3:	mov    r10,rcx
   1400226f6:	xor    r9d,r8d
   1400226f9:	cmp    edx,0x4
   1400226fc:	jl     0x140022738
   1400226fe:	mov    r8d,edx
   140022701:	shr    r8,0x2
   140022705:	mov    eax,r8d
   140022708:	neg    eax
   14002270a:	lea    edx,[rdx+rax*4]
   14002270d:	nop    DWORD PTR [rax]
   140022710:	imul   eax,DWORD PTR [r10],0x5bd1e995
   140022717:	add    r10,0x4
   14002271b:	imul   r9d,r9d,0x5bd1e995
   140022722:	mov    ecx,eax
   140022724:	shr    ecx,0x18
   140022727:	xor    ecx,eax
   140022729:	imul   ecx,ecx,0x5bd1e995
   14002272f:	xor    r9d,ecx
   140022732:	sub    r8,0x1
   140022736:	jne    0x140022710
   140022738:	sub    edx,0x1
   14002273b:	je     0x14002275d
   14002273d:	sub    edx,0x1
   140022740:	je     0x140022752
   140022742:	cmp    edx,0x1
   140022745:	jne    0x14002276b
   140022747:	movzx  eax,BYTE PTR [r10+0x2]
   14002274c:	shl    eax,0x10
   14002274f:	xor    r9d,eax
   140022752:	movzx  eax,BYTE PTR [r10+0x1]
   140022757:	shl    eax,0x8
   14002275a:	xor    r9d,eax
   14002275d:	movzx  eax,BYTE PTR [r10]
   140022761:	xor    eax,r9d
   140022764:	imul   r9d,eax,0x5bd1e995
   14002276b:	mov    eax,r9d
   14002276e:	shr    eax,0xd
   140022771:	xor    eax,r9d
   140022774:	imul   ecx,eax,0x5bd1e995
   14002277a:	mov    eax,ecx
   14002277c:	shr    eax,0xf
   14002277f:	xor    eax,ecx
   140022781:	ret    
   140022782:	int3   
   140022783:	int3   
   140022784:	int3   
   140022785:	int3   
   140022786:	int3   
   140022787:	int3   
   140022788:	int3   
   140022789:	int3   
   14002278a:	int3   
   14002278b:	int3   
   14002278c:	int3   
   14002278d:	int3   
   14002278e:	int3   
   14002278f:	int3   
   140022790:	rex push rbp
   140022792:	sub    rsp,0x30
   140022796:	lea    rbp,[rsp+0x20]
   14002279b:	mov    QWORD PTR [rbp+0x20],rbx
   14002279f:	or     r8,0xffffffffffffffff
   1400227a3:	mov    QWORD PTR [rbp+0x28],rsi
   1400227a7:	mov    rbx,rcx
   1400227aa:	mov    QWORD PTR [rbp+0x30],rdi
   1400227ae:	mov    esi,edx
   1400227b0:	movaps XMMWORD PTR [rbp+0x0],xmm6
   1400227b4:	inc    r8
   1400227b7:	cmp    BYTE PTR [rcx+r8*1],0x0
   1400227bc:	jne    0x1400227b4
   1400227be:	lea    eax,[r8+0x20]
   1400227c2:	movsxd rcx,eax
   1400227c5:	and    rcx,0xfffffffffffffff0
   1400227c9:	lea    rax,[rcx+0xf]
   1400227cd:	cmp    rax,rcx
   1400227d0:	ja     0x1400227dc
   1400227d2:	movabs rax,0xffffffffffffff0
   1400227dc:	and    rax,0xfffffffffffffff0
   1400227e0:	call   0x1400263c0
   1400227e5:	sub    rsp,rax
   1400227e8:	xor    r9d,r9d
   1400227eb:	lea    rdx,[rsp+0x20]
   1400227f0:	add    rdx,0x10
   1400227f4:	and    rdx,0xffffffffffffffef
   1400227f8:	test   r8d,r8d
   1400227fb:	jle    0x1400228f7
   140022801:	cmp    r8d,0x20
   140022805:	jb     0x1400228f7
   14002280b:	lea    eax,[r8-0x1]
   14002280f:	movsxd rcx,eax
   140022812:	lea    rax,[rcx+rbx*1]
   140022816:	lea    r10,[rcx+rdx*1]
   14002281a:	cmp    rdx,rax
   14002281d:	ja     0x140022828
   14002281f:	cmp    r10,rbx
   140022822:	jae    0x1400228f7
   140022828:	mov    ecx,r8d
   14002282b:	and    ecx,0x8000001f
   140022831:	jge    0x14002283a
   140022833:	dec    ecx
   140022835:	or     ecx,0xffffffe0
   140022838:	inc    ecx
   14002283a:	movdqa xmm3,XMMWORD PTR [rip+0x1587e]        # 0x1400380c0
   140022842:	mov    eax,r8d
   140022845:	movdqa xmm4,XMMWORD PTR [rip+0x15893]        # 0x1400380e0
   14002284d:	sub    eax,ecx
   14002284f:	movdqa xmm5,XMMWORD PTR [rip+0x15879]        # 0x1400380d0
   140022857:	mov    rcx,rbx
   14002285a:	movdqa xmm6,XMMWORD PTR [rip+0x1584e]        # 0x1400380b0
   140022862:	sub    rcx,rdx
   140022865:	mov    r11,rdx
   140022868:	movsxd rdi,eax
   14002286b:	neg    r11
   14002286e:	mov    r10,rdx
   140022871:	movdqu xmm1,XMMWORD PTR [rcx+r10*1]
   140022877:	lea    r10,[r10+0x20]
   14002287b:	add    r9d,0x20
   14002287f:	movdqa xmm0,xmm3
   140022883:	lea    rax,[r11+r10*1]
   140022887:	pcmpgtb xmm0,xmm1
   14002288b:	movdqa xmm2,xmm1
   14002288f:	pxor   xmm0,xmm4
   140022893:	pcmpgtb xmm2,xmm5
   140022897:	pandn  xmm2,xmm0
   14002289b:	movdqa xmm0,xmm1
   14002289f:	paddb  xmm0,xmm6
   1400228a3:	pand   xmm0,xmm2
   1400228a7:	pandn  xmm2,xmm1
   1400228ab:	por    xmm0,xmm2
   1400228af:	movdqu XMMWORD PTR [r10-0x20],xmm0
   1400228b5:	movdqa xmm0,xmm3
   1400228b9:	movdqu xmm1,XMMWORD PTR [rcx+r10*1-0x10]
   1400228c0:	pcmpgtb xmm0,xmm1
   1400228c4:	movdqa xmm2,xmm1
   1400228c8:	pxor   xmm0,xmm4
   1400228cc:	pcmpgtb xmm2,xmm5
   1400228d0:	pandn  xmm2,xmm0
   1400228d4:	movdqa xmm0,xmm1
   1400228d8:	paddb  xmm0,xmm6
   1400228dc:	pand   xmm0,xmm2
   1400228e0:	pandn  xmm2,xmm1
   1400228e4:	por    xmm0,xmm2
   1400228e8:	movdqu XMMWORD PTR [r10-0x10],xmm0
   1400228ee:	cmp    rax,rdi
   1400228f1:	jl     0x140022871
   1400228f7:	movsxd rax,r9d
   1400228fa:	movsxd r10,r8d
   1400228fd:	cmp    rax,r10
   140022900:	jge    0x14002292b
   140022902:	sub    rbx,rdx
   140022905:	lea    r9,[rax+rdx*1]
   140022909:	sub    r10,rax
   14002290c:	nop    DWORD PTR [rax+0x0]
   140022910:	movzx  ecx,BYTE PTR [r9+rbx*1]
   140022915:	lea    eax,[rcx-0x41]
   140022918:	cmp    al,0x19
   14002291a:	ja     0x14002291f
   14002291c:	add    cl,0x20
   14002291f:	mov    BYTE PTR [r9],cl
   140022922:	inc    r9
   140022925:	sub    r10,0x1
   140022929:	jne    0x140022910
   14002292b:	mov    r9d,r8d
   14002292e:	xor    r9d,esi
   140022931:	cmp    r8d,0x4
   140022935:	jl     0x140022977
   140022937:	mov    r10d,r8d
   14002293a:	shr    r10,0x2
   14002293e:	lea    eax,[r10*4+0x0]
   140022946:	sub    r8d,eax
   140022949:	nop    DWORD PTR [rax+0x0]
   140022950:	imul   eax,DWORD PTR [rdx],0x5bd1e995
   140022956:	add    rdx,0x4
   14002295a:	imul   r9d,r9d,0x5bd1e995
   140022961:	mov    ecx,eax
   140022963:	shr    ecx,0x18
   140022966:	xor    ecx,eax
   140022968:	imul   ecx,ecx,0x5bd1e995
   14002296e:	xor    r9d,ecx
   140022971:	sub    r10,0x1
   140022975:	jne    0x140022950
   140022977:	sub    r8d,0x1
   14002297b:	je     0x14002299d
   14002297d:	sub    r8d,0x1
   140022981:	je     0x140022993
   140022983:	cmp    r8d,0x1
   140022987:	jne    0x1400229aa
   140022989:	movzx  eax,BYTE PTR [rdx+0x2]
   14002298d:	shl    eax,0x10
   140022990:	xor    r9d,eax
   140022993:	movzx  eax,BYTE PTR [rdx+0x1]
   140022997:	shl    eax,0x8
   14002299a:	xor    r9d,eax
   14002299d:	movzx  eax,BYTE PTR [rdx]
   1400229a0:	xor    eax,r9d
   1400229a3:	imul   r9d,eax,0x5bd1e995
   1400229aa:	mov    rbx,QWORD PTR [rbp+0x20]
   1400229ae:	mov    eax,r9d
   1400229b1:	mov    rsi,QWORD PTR [rbp+0x28]
   1400229b5:	mov    rdi,QWORD PTR [rbp+0x30]
   1400229b9:	movaps xmm6,XMMWORD PTR [rbp+0x0]
   1400229bd:	shr    eax,0xd
   1400229c0:	xor    eax,r9d
   1400229c3:	imul   ecx,eax,0x5bd1e995
   1400229c9:	mov    eax,ecx
   1400229cb:	shr    eax,0xf
   1400229ce:	xor    eax,ecx
   1400229d0:	lea    rsp,[rbp+0x10]
   1400229d4:	pop    rbp
   1400229d5:	ret    
   1400229d6:	int3   
   1400229d7:	int3   
   1400229d8:	int3   
   1400229d9:	int3   
   1400229da:	int3   
   1400229db:	int3   
   1400229dc:	int3   
   1400229dd:	int3   
   1400229de:	int3   
   1400229df:	int3   
   1400229e0:	mov    QWORD PTR [rsp+0x18],r8
   1400229e5:	push   rbx
   1400229e6:	sub    rsp,0x20
   1400229ea:	xor    eax,eax
   1400229ec:	lea    r8,[rsp+0x40]
   1400229f1:	mov    DWORD PTR [rcx],eax
   1400229f3:	mov    rbx,rcx
   1400229f6:	mov    QWORD PTR [rcx+0x8],rax
   1400229fa:	mov    QWORD PTR [rcx+0x10],rax
   1400229fe:	lea    r9d,[rax+0x1]
   140022a02:	call   0x140022a40
   140022a07:	mov    rax,rbx
   140022a0a:	add    rsp,0x20
   140022a0e:	pop    rbx
   140022a0f:	ret    
   140022a10:	rex push rbx
   140022a12:	sub    rsp,0x20
   140022a16:	mov    rbx,rcx
   140022a19:	mov    rcx,QWORD PTR [rcx+0x18]
   140022a1d:	test   rcx,rcx
   140022a20:	je     0x140022a27
   140022a22:	call   0x140007bd0
   140022a27:	mov    rcx,rbx
   140022a2a:	add    rsp,0x20
   140022a2e:	pop    rbx
   140022a2f:	jmp    0x1400181a0
   140022a34:	int3   
   140022a35:	int3   
   140022a36:	int3   
   140022a37:	int3   
   140022a38:	int3   
   140022a39:	int3   
   140022a3a:	int3   
   140022a3b:	int3   
   140022a3c:	int3   
   140022a3d:	int3   
   140022a3e:	int3   
   140022a3f:	int3   
   140022a40:	mov    QWORD PTR [rsp+0x8],rbx
   140022a45:	mov    DWORD PTR [rsp+0x20],r9d
   140022a4a:	mov    QWORD PTR [rsp+0x10],rdx
   140022a4f:	push   rbp
   140022a50:	push   rsi
   140022a51:	push   rdi
   140022a52:	push   r12
   140022a54:	push   r13
   140022a56:	push   r14
   140022a58:	push   r15
   140022a5a:	sub    rsp,0x20
   140022a5e:	or     r15,0xffffffffffffffff
   140022a62:	mov    r13,r8
   140022a65:	mov    rax,r15
   140022a68:	mov    rdi,rdx
   140022a6b:	mov    r12,rcx
   140022a6e:	xchg   ax,ax
   140022a70:	inc    rax
   140022a73:	cmp    BYTE PTR [rdx+rax*1],0x0
   140022a77:	jne    0x140022a70
   140022a79:	inc    eax
   140022a7b:	movsxd rbx,eax
   140022a7e:	mov    rcx,rbx
   140022a81:	call   0x140007bf0
   140022a86:	mov    r8,rbx
   140022a89:	mov    QWORD PTR [r12+0x18],rax
   140022a8e:	mov    rdx,rdi
   140022a91:	mov    rcx,rax
   140022a94:	call   0x140026f70
   140022a99:	mov    DWORD PTR [r12],0x0
   140022aa1:	test   DWORD PTR [r12+0x14],0xc0000000
   140022aaa:	jne    0x140022ad8
   140022aac:	mov    rdx,QWORD PTR [r12+0x8]
   140022ab1:	test   rdx,rdx
   140022ab4:	je     0x140022acf
   140022ab6:	mov    rax,QWORD PTR [rip+0xf8d3]        # 0x140032390
   140022abd:	mov    rcx,QWORD PTR [rax]
   140022ac0:	mov    rax,QWORD PTR [rcx]
   140022ac3:	call   QWORD PTR [rax+0x28]
   140022ac6:	mov    QWORD PTR [r12+0x8],0x0
   140022acf:	mov    DWORD PTR [r12+0x10],0x0
   140022ad8:	mov    rbp,rdi
   140022adb:	nop    DWORD PTR [rax+rax*1+0x0]
   140022ae0:	mov    eax,DWORD PTR [rsp+0x78]
   140022ae4:	xor    edi,edi
   140022ae6:	xor    ebx,ebx
   140022ae8:	mov    r14,r15
   140022aeb:	test   eax,eax
   140022aed:	jle    0x140022ba0
   140022af3:	mov    esi,eax
   140022af5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140022b00:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   140022b05:	mov    rcx,rbp
   140022b08:	call   QWORD PTR [rip+0xfa5a]        # 0x140032568
   140022b0e:	test   rax,rax
   140022b11:	je     0x140022b23
   140022b13:	test   rdi,rdi
   140022b16:	je     0x140022b1d
   140022b18:	cmp    rax,rdi
   140022b1b:	jae    0x140022b23
   140022b1d:	mov    r14,rbx
   140022b20:	mov    rdi,rax
   140022b23:	inc    rbx
   140022b26:	sub    rsi,0x1
   140022b2a:	jne    0x140022b00
   140022b2c:	test   rdi,rdi
   140022b2f:	je     0x140022ba0
   140022b31:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140022b36:	mov    rbx,r15
   140022b39:	nop    DWORD PTR [rax+0x0]
   140022b40:	cmp    BYTE PTR [rax+rbx*1+0x1],0x0
   140022b45:	lea    rbx,[rbx+0x1]
   140022b49:	jne    0x140022b40
   140022b4b:	cmp    rdi,rbp
   140022b4e:	jbe    0x140022b96
   140022b50:	mov    rsi,QWORD PTR [r12+0x18]
   140022b55:	mov    eax,edi
   140022b57:	sub    rsi,QWORD PTR [rsp+0x68]
   140022b5c:	sub    eax,ebp
   140022b5e:	add    rsi,rbp
   140022b61:	cdqe   
   140022b63:	mov    BYTE PTR [rax+rsi*1],0x0
   140022b67:	movsxd rbp,DWORD PTR [r12]
   140022b6b:	cmp    ebp,DWORD PTR [r12+0x10]
   140022b70:	jne    0x140022b81
   140022b72:	mov    edx,0x1
   140022b77:	lea    rcx,[r12+0x8]
   140022b7c:	call   0x140013420
   140022b81:	mov    rax,QWORD PTR [r12+0x8]
   140022b86:	inc    DWORD PTR [r12]
   140022b8a:	lea    rdx,[rax+rbp*8]
   140022b8e:	test   rdx,rdx
   140022b91:	je     0x140022b96
   140022b93:	mov    QWORD PTR [rdx],rsi
   140022b96:	lea    rbp,[rbx+rdi*1]
   140022b9a:	jmp    0x140022ae0
   140022b9f:	nop
   140022ba0:	inc    r15
   140022ba3:	cmp    BYTE PTR [r15+rbp*1],0x0
   140022ba8:	jne    0x140022ba0
   140022baa:	test   r15,r15
   140022bad:	je     0x140022bec
   140022baf:	mov    rbx,QWORD PTR [r12+0x18]
   140022bb4:	lea    rsi,[r12+0x8]
   140022bb9:	sub    rbx,QWORD PTR [rsp+0x68]
   140022bbe:	movsxd rdi,DWORD PTR [r12]
   140022bc2:	add    rbx,rbp
   140022bc5:	cmp    edi,DWORD PTR [r12+0x10]
   140022bca:	jne    0x140022bd9
   140022bcc:	mov    edx,0x1
   140022bd1:	mov    rcx,rsi
   140022bd4:	call   0x140013420
   140022bd9:	mov    rax,QWORD PTR [rsi]
   140022bdc:	inc    DWORD PTR [r12]
   140022be0:	lea    rdx,[rax+rdi*8]
   140022be4:	test   rdx,rdx
   140022be7:	je     0x140022bec
   140022be9:	mov    QWORD PTR [rdx],rbx
   140022bec:	mov    rbx,QWORD PTR [rsp+0x60]
   140022bf1:	add    rsp,0x20
   140022bf5:	pop    r15
   140022bf7:	pop    r14
   140022bf9:	pop    r13
   140022bfb:	pop    r12
   140022bfd:	pop    rdi
   140022bfe:	pop    rsi
   140022bff:	pop    rbp
   140022c00:	ret    
   140022c01:	int3   
   140022c02:	int3   
   140022c03:	int3   
   140022c04:	int3   
   140022c05:	int3   
   140022c06:	int3   
   140022c07:	int3   
   140022c08:	int3   
   140022c09:	int3   
   140022c0a:	int3   
   140022c0b:	int3   
   140022c0c:	int3   
   140022c0d:	int3   
   140022c0e:	int3   
   140022c0f:	int3   
   140022c10:	xor    eax,eax
   140022c12:	mov    DWORD PTR [rcx+0x20],0xffffffff
   140022c19:	mov    QWORD PTR [rcx+0x8],rax
   140022c1d:	mov    QWORD PTR [rcx+0x10],rax
   140022c21:	mov    QWORD PTR [rcx+0x18],rax
   140022c25:	mov    DWORD PTR [rcx],eax
   140022c27:	mov    rax,rcx
   140022c2a:	ret    
   140022c2b:	int3   
   140022c2c:	int3   
   140022c2d:	int3   
   140022c2e:	int3   
   140022c2f:	int3   
   140022c30:	mov    QWORD PTR [rsp+0x8],rbx
   140022c35:	mov    QWORD PTR [rsp+0x10],rbp
   140022c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140022c3f:	mov    QWORD PTR [rsp+0x20],rdi
   140022c44:	push   r14
   140022c46:	sub    rsp,0x20
   140022c4a:	lea    rbx,[rcx+0x110]
   140022c51:	xor    r14d,r14d
   140022c54:	mov    DWORD PTR [rcx+0x108],r14d
   140022c5b:	mov    rsi,rdx
   140022c5e:	mov    rdi,rcx
   140022c61:	mov    QWORD PTR [rbx],r14
   140022c64:	mov    rcx,rbx
   140022c67:	mov    DWORD PTR [rbx+0x8],0x8
   140022c6e:	lea    edx,[r14+0x8]
   140022c72:	mov    DWORD PTR [rbx+0xc],0x80000000
   140022c79:	mov    rbp,r8
   140022c7c:	call   0x140023150
   140022c81:	test   bl,0x7
   140022c84:	je     0x140022c91
   140022c86:	call   QWORD PTR [rip+0xf924]        # 0x1400325b0
   140022c8c:	test   eax,eax
   140022c8e:	je     0x140022c91
   140022c90:	int3   
   140022c91:	lea    rax,[rbx+0x10]
   140022c95:	mov    rcx,rdi
   140022c98:	mov    QWORD PTR [rbx],rax
   140022c9b:	lea    rdx,[rip+0x1545e]        # 0x140038100
   140022ca2:	mov    QWORD PTR [rdi+0x268],r14
   140022ca9:	mov    QWORD PTR [rdi+0x270],r14
   140022cb0:	mov    QWORD PTR [rdi+0x278],r14
   140022cb7:	mov    DWORD PTR [rdi+0x280],0xffffffff
   140022cc1:	mov    DWORD PTR [rdi+0x260],r14d
   140022cc8:	mov    QWORD PTR [rdi+0x290],r14
   140022ccf:	mov    DWORD PTR [rdi+0x298],r14d
   140022cd6:	mov    QWORD PTR [rdi+0x2a0],r14
   140022cdd:	mov    QWORD PTR [rdi+0x2a8],r14
   140022ce4:	mov    DWORD PTR [rdi+0x2b0],0x1010101
   140022cee:	call   0x1400245d0
   140022cf3:	xor    r8d,r8d
   140022cf6:	mov    QWORD PTR [rdi+0x100],rsi
   140022cfd:	xor    edx,edx
   140022cff:	mov    rcx,rsi
   140022d02:	call   0x140021ee0
   140022d07:	mov    rdx,rbp
   140022d0a:	mov    DWORD PTR [rdi+0x288],0x1
   140022d14:	lea    rcx,[rdi+0x290]
   140022d1b:	call   0x14001aae0
   140022d20:	mov    rbx,QWORD PTR [rsp+0x30]
   140022d25:	mov    rax,rdi
   140022d28:	mov    rdi,QWORD PTR [rsp+0x48]
   140022d2d:	mov    rbp,QWORD PTR [rsp+0x38]
   140022d32:	mov    rsi,QWORD PTR [rsp+0x40]
   140022d37:	add    rsp,0x20
   140022d3b:	pop    r14
   140022d3d:	ret    
   140022d3e:	int3   
   140022d3f:	int3   
   140022d40:	mov    rdx,QWORD PTR [rcx+0x8]
   140022d44:	test   rdx,rdx
   140022d47:	je     0x140022d5a
   140022d49:	mov    rax,QWORD PTR [rip+0xf640]        # 0x140032390
   140022d50:	mov    rcx,QWORD PTR [rax]
   140022d53:	mov    rax,QWORD PTR [rcx]
   140022d56:	rex.W jmp QWORD PTR [rax+0x28]
   140022d5a:	ret    
   140022d5b:	int3   
   140022d5c:	int3   
   140022d5d:	int3   
   140022d5e:	int3   
   140022d5f:	int3   
   140022d60:	mov    QWORD PTR [rsp+0x8],rbx
   140022d65:	push   rdi
   140022d66:	sub    rsp,0x20
   140022d6a:	movsxd rdi,DWORD PTR [rcx]
   140022d6d:	mov    rbx,rcx
   140022d70:	cmp    edi,DWORD PTR [rcx+0x10]
   140022d73:	jne    0x140022d83
   140022d75:	add    rcx,0x8
   140022d79:	mov    edx,0x1
   140022d7e:	call   0x140023260
   140022d83:	inc    DWORD PTR [rbx]
   140022d85:	mov    rax,rdi
   140022d88:	shl    rax,0x4
   140022d8c:	add    rax,QWORD PTR [rbx+0x8]
   140022d90:	je     0x140022d99
   140022d92:	mov    QWORD PTR [rax],0x0
   140022d99:	mov    eax,edi
   140022d9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022da0:	add    rsp,0x20
   140022da4:	pop    rdi
   140022da5:	ret    
   140022da6:	int3   
   140022da7:	int3   
   140022da8:	int3   
   140022da9:	int3   
   140022daa:	int3   
   140022dab:	int3   
   140022dac:	int3   
   140022dad:	int3   
   140022dae:	int3   
   140022daf:	int3   
   140022db0:	xor    edx,edx
   140022db2:	jmp    0x140023d90
   140022db7:	int3   
   140022db8:	int3   
   140022db9:	int3   
   140022dba:	int3   
   140022dbb:	int3   
   140022dbc:	int3   
   140022dbd:	int3   
   140022dbe:	int3   
   140022dbf:	int3   
   140022dc0:	rex push rdi
   140022dc2:	sub    rsp,0x20
   140022dc6:	cmp    QWORD PTR [rcx+0x8],0x0
   140022dcb:	mov    rdi,rcx
   140022dce:	jne    0x140022e43
   140022dd0:	mov    rax,QWORD PTR [rcx+0x10]
   140022dd4:	test   rax,rax
   140022dd7:	je     0x140022e43
   140022dd9:	mov    rcx,QWORD PTR [rcx+0x18]
   140022ddd:	test   rcx,rcx
   140022de0:	je     0x140022e39
   140022de2:	cmp    rax,rcx
   140022de5:	je     0x140022e39
   140022de7:	mov    QWORD PTR [rsp+0x30],rbx
   140022dec:	mov    ebx,ecx
   140022dee:	sub    ebx,eax
   140022df0:	mov    rax,QWORD PTR [rip+0xf599]        # 0x140032390
   140022df7:	mov    rcx,QWORD PTR [rax]
   140022dfa:	lea    eax,[rbx+0x1]
   140022dfd:	movsxd rdx,eax
   140022e00:	mov    r8,QWORD PTR [rcx]
   140022e03:	call   QWORD PTR [r8+0x8]
   140022e07:	mov    QWORD PTR [rdi+0x8],rax
   140022e0b:	test   ebx,ebx
   140022e0d:	jns    0x140022e10
   140022e0f:	int3   
   140022e10:	mov    rdx,QWORD PTR [rdi+0x10]
   140022e14:	mov    rcx,rax
   140022e17:	movsxd rbx,ebx
   140022e1a:	mov    r8,rbx
   140022e1d:	call   0x140026f70
   140022e22:	mov    rax,QWORD PTR [rdi+0x8]
   140022e26:	mov    BYTE PTR [rbx+rax*1],0x0
   140022e2a:	mov    rax,QWORD PTR [rdi+0x8]
   140022e2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140022e33:	add    rsp,0x20
   140022e37:	pop    rdi
   140022e38:	ret    
   140022e39:	mov    rax,QWORD PTR [rdi+0x8]
   140022e3d:	add    rsp,0x20
   140022e41:	pop    rdi
   140022e42:	ret    
   140022e43:	mov    rax,QWORD PTR [rcx+0x8]
   140022e47:	add    rsp,0x20
   140022e4b:	pop    rdi
   140022e4c:	ret    
   140022e4d:	int3   
   140022e4e:	int3   
   140022e4f:	int3   
   140022e50:	mov    r8,rdx
   140022e53:	mov    rdx,QWORD PTR [rcx+0x18]
   140022e57:	mov    rcx,QWORD PTR [rcx+0x10]
   140022e5b:	jmp    0x140024160
   140022e60:	mov    eax,DWORD PTR [rcx+0x20]
   140022e63:	mov    edx,DWORD PTR [rcx+0x10]
   140022e66:	sub    eax,edx
   140022e68:	je     0x140022e7c
   140022e6a:	sub    edx,DWORD PTR [rcx+0x24]
   140022e6d:	mov    rax,QWORD PTR [rcx]
   140022e70:	movsxd rdx,edx
   140022e73:	cmp    BYTE PTR [rdx+rax*1],0x0
   140022e77:	je     0x140022e7c
   140022e79:	xor    al,al
   140022e7b:	ret    
   140022e7c:	mov    al,0x1
   140022e7e:	ret    
   140022e7f:	int3   
   140022e80:	mov    QWORD PTR [rsp+0x8],rbx
   140022e85:	push   rdi
   140022e86:	sub    rsp,0x20
   140022e8a:	mov    rdi,rdx
   140022e8d:	mov    rbx,rcx
   140022e90:	xor    edx,edx
   140022e92:	call   0x140023d90
   140022e97:	test   al,al
   140022e99:	jne    0x140022ea6
   140022e9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022ea0:	add    rsp,0x20
   140022ea4:	pop    rdi
   140022ea5:	ret    
   140022ea6:	test   rdi,rdi
   140022ea9:	je     0x140022eca
   140022eab:	mov    rax,QWORD PTR [rbx+0x110]
   140022eb2:	movups xmm0,XMMWORD PTR [rax]
   140022eb5:	movups XMMWORD PTR [rdi],xmm0
   140022eb8:	movups xmm1,XMMWORD PTR [rax+0x10]
   140022ebc:	movups XMMWORD PTR [rdi+0x10],xmm1
   140022ec0:	movsd  xmm0,QWORD PTR [rax+0x20]
   140022ec5:	movsd  QWORD PTR [rdi+0x20],xmm0
   140022eca:	mov    rax,QWORD PTR [rbx+0x110]
   140022ed1:	lea    rcx,[rbx+0x108]
   140022ed8:	mov    edx,0x1
   140022edd:	movups xmm0,XMMWORD PTR [rax]
   140022ee0:	movups XMMWORD PTR [rbx+0x260],xmm0
   140022ee7:	movups xmm1,XMMWORD PTR [rax+0x10]
   140022eeb:	movups XMMWORD PTR [rbx+0x270],xmm1
   140022ef2:	movsd  xmm0,QWORD PTR [rax+0x20]
   140022ef7:	movsd  QWORD PTR [rbx+0x280],xmm0
   140022eff:	call   0x140023f10
   140022f04:	mov    rbx,QWORD PTR [rsp+0x30]
   140022f09:	mov    al,0x1
   140022f0b:	add    rsp,0x20
   140022f0f:	pop    rdi
   140022f10:	ret    
   140022f11:	int3   
   140022f12:	int3   
   140022f13:	int3   
   140022f14:	int3   
   140022f15:	int3   
   140022f16:	int3   
   140022f17:	int3   
   140022f18:	int3   
   140022f19:	int3   
   140022f1a:	int3   
   140022f1b:	int3   
   140022f1c:	int3   
   140022f1d:	int3   
   140022f1e:	int3   
   140022f1f:	int3   
   140022f20:	mov    QWORD PTR [rsp+0x8],rbx
   140022f25:	mov    QWORD PTR [rsp+0x10],rbp
   140022f2a:	mov    QWORD PTR [rsp+0x18],rsi
   140022f2f:	push   rdi
   140022f30:	sub    rsp,0x20
   140022f34:	mov    rbp,rdx
   140022f37:	movzx  esi,r8b
   140022f3b:	xor    edx,edx
   140022f3d:	mov    rbx,rcx
   140022f40:	call   0x140023d90
   140022f45:	test   al,al
   140022f47:	je     0x140022f9a
   140022f49:	mov    rdi,QWORD PTR [rbx+0x110]
   140022f50:	movzx  r8d,sil
   140022f54:	mov    rcx,rdi
   140022f57:	mov    rdx,rbp
   140022f5a:	call   0x140023450
   140022f5f:	test   al,al
   140022f61:	je     0x140022f9a
   140022f63:	movups xmm0,XMMWORD PTR [rdi]
   140022f66:	lea    rcx,[rbx+0x108]
   140022f6d:	mov    edx,0x1
   140022f72:	movups XMMWORD PTR [rbx+0x260],xmm0
   140022f79:	movups xmm1,XMMWORD PTR [rdi+0x10]
   140022f7d:	movups XMMWORD PTR [rbx+0x270],xmm1
   140022f84:	movsd  xmm0,QWORD PTR [rdi+0x20]
   140022f89:	movsd  QWORD PTR [rbx+0x280],xmm0
   140022f91:	call   0x140023f10
   140022f96:	mov    al,0x1
   140022f98:	jmp    0x140022f9c
   140022f9a:	xor    al,al
   140022f9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140022fa1:	mov    rbp,QWORD PTR [rsp+0x38]
   140022fa6:	mov    rsi,QWORD PTR [rsp+0x40]
   140022fab:	add    rsp,0x20
   140022faf:	pop    rdi
   140022fb0:	ret    
   140022fb1:	int3   
   140022fb2:	int3   
   140022fb3:	int3   
   140022fb4:	int3   
   140022fb5:	int3   
   140022fb6:	int3   
   140022fb7:	int3   
   140022fb8:	int3   
   140022fb9:	int3   
   140022fba:	int3   
   140022fbb:	int3   
   140022fbc:	int3   
   140022fbd:	int3   
   140022fbe:	int3   
   140022fbf:	int3   
   140022fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140022fc5:	push   rdi
   140022fc6:	sub    rsp,0x20
   140022fca:	mov    rdi,rdx
   140022fcd:	mov    rbx,rcx
   140022fd0:	xor    edx,edx
   140022fd2:	call   0x1400236e0
   140022fd7:	test   al,al
   140022fd9:	jne    0x140022fe6
   140022fdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140022fe0:	add    rsp,0x20
   140022fe4:	pop    rdi
   140022fe5:	ret    
   140022fe6:	test   rdi,rdi
   140022fe9:	je     0x14002300a
   140022feb:	mov    rax,QWORD PTR [rbx+0x110]
   140022ff2:	movups xmm0,XMMWORD PTR [rax]
   140022ff5:	movups XMMWORD PTR [rdi],xmm0
   140022ff8:	movups xmm1,XMMWORD PTR [rax+0x10]
   140022ffc:	movups XMMWORD PTR [rdi+0x10],xmm1
   140023000:	movsd  xmm0,QWORD PTR [rax+0x20]
   140023005:	movsd  QWORD PTR [rdi+0x20],xmm0
   14002300a:	mov    rax,QWORD PTR [rbx+0x110]
   140023011:	lea    rcx,[rbx+0x108]
   140023018:	mov    edx,0x1
   14002301d:	movups xmm0,XMMWORD PTR [rax]
   140023020:	movups XMMWORD PTR [rbx+0x260],xmm0
   140023027:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002302b:	movups XMMWORD PTR [rbx+0x270],xmm1
   140023032:	movsd  xmm0,QWORD PTR [rax+0x20]
   140023037:	movsd  QWORD PTR [rbx+0x280],xmm0
   14002303f:	call   0x140023f10
   140023044:	mov    rbx,QWORD PTR [rsp+0x30]
   140023049:	mov    al,0x1
   14002304b:	add    rsp,0x20
   14002304f:	pop    rdi
   140023050:	ret    
   140023051:	int3   
   140023052:	int3   
   140023053:	int3   
   140023054:	int3   
   140023055:	int3   
   140023056:	int3   
   140023057:	int3   
   140023058:	int3   
   140023059:	int3   
   14002305a:	int3   
   14002305b:	int3   
   14002305c:	int3   
   14002305d:	int3   
   14002305e:	int3   
   14002305f:	int3   
   140023060:	mov    QWORD PTR [rsp+0x8],rbx
   140023065:	mov    QWORD PTR [rsp+0x10],rbp
   14002306a:	mov    QWORD PTR [rsp+0x18],rsi
   14002306f:	push   rdi
   140023070:	push   r12
   140023072:	push   r13
   140023074:	push   r14
   140023076:	push   r15
   140023078:	sub    rsp,0x20
   14002307c:	or     rbx,0xffffffffffffffff
   140023080:	mov    r12,r9
   140023083:	mov    rdi,rbx
   140023086:	mov    rbp,r8
   140023089:	mov    rsi,rdx
   14002308c:	mov    r13,rcx
   14002308f:	nop
   140023090:	inc    rdi
   140023093:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140023097:	jne    0x140023090
   140023099:	nop    DWORD PTR [rax+0x0]
   1400230a0:	inc    rbx
   1400230a3:	cmp    BYTE PTR [rbx+r8*1],0x0
   1400230a8:	jne    0x1400230a0
   1400230aa:	xor    r8d,r8d
   1400230ad:	mov    edx,edi
   1400230af:	call   0x140021730
   1400230b4:	xor    r8d,r8d
   1400230b7:	mov    edx,ebx
   1400230b9:	mov    rcx,r13
   1400230bc:	mov    r15,rax
   1400230bf:	call   0x140021730
   1400230c4:	mov    r14,rax
   1400230c7:	test   r15,r15
   1400230ca:	je     0x1400230e3
   1400230cc:	mov    r8d,edi
   1400230cf:	mov    rdx,rsi
   1400230d2:	mov    rcx,r15
   1400230d5:	call   0x140022670
   1400230da:	test   eax,eax
   1400230dc:	jne    0x1400230e3
   1400230de:	mov    sil,0x1
   1400230e1:	jmp    0x1400230e6
   1400230e3:	xor    sil,sil
   1400230e6:	test   r14,r14
   1400230e9:	je     0x140023101
   1400230eb:	mov    r8d,ebx
   1400230ee:	mov    rdx,rbp
   1400230f1:	mov    rcx,r14
   1400230f4:	call   0x140022670
   1400230f9:	test   eax,eax
   1400230fb:	jne    0x140023101
   1400230fd:	mov    al,0x1
   1400230ff:	jmp    0x140023103
   140023101:	xor    al,al
   140023103:	test   sil,sil
   140023106:	jne    0x14002310f
   140023108:	test   al,al
   14002310a:	je     0x140023128
   14002310c:	test   sil,sil
   14002310f:	cmovne ebx,edi
   140023112:	mov    edx,0x1
   140023117:	mov    r8d,ebx
   14002311a:	mov    rcx,r13
   14002311d:	call   0x140021ee0
   140023122:	inc    DWORD PTR [r12]
   140023126:	mov    al,0x1
   140023128:	mov    rbx,QWORD PTR [rsp+0x50]
   14002312d:	mov    rbp,QWORD PTR [rsp+0x58]
   140023132:	mov    rsi,QWORD PTR [rsp+0x60]
   140023137:	add    rsp,0x20
   14002313b:	pop    r15
   14002313d:	pop    r14
   14002313f:	pop    r13
   140023141:	pop    r12
   140023143:	pop    rdi
   140023144:	ret    
   140023145:	int3   
   140023146:	int3   
   140023147:	int3   
   140023148:	int3   
   140023149:	int3   
   14002314a:	int3   
   14002314b:	int3   
   14002314c:	int3   
   14002314d:	int3   
   14002314e:	int3   
   14002314f:	int3   
   140023150:	mov    QWORD PTR [rsp+0x10],rbx
   140023155:	push   rdi
   140023156:	sub    rsp,0x20
   14002315a:	movsxd rdi,edx
   14002315d:	mov    rbx,rcx
   140023160:	cmp    DWORD PTR [rcx+0x8],edi
   140023163:	jge    0x14002321a
   140023169:	mov    eax,DWORD PTR [rcx+0xc]
   14002316c:	and    eax,0xc0000000
   140023171:	test   eax,0x7fffffff
   140023176:	jne    0x14002321a
   14002317c:	test   eax,eax
   14002317e:	mov    rax,QWORD PTR [rip+0xf20b]        # 0x140032390
   140023185:	jne    0x1400231d2
   140023187:	mov    rdx,QWORD PTR [rcx]
   14002318a:	mov    rcx,QWORD PTR [rax]
   14002318d:	test   rdx,rdx
   140023190:	je     0x1400231b2
   140023192:	mov    r9,QWORD PTR [rcx]
   140023195:	lea    r8,[rdi+rdi*4]
   140023199:	shl    r8,0x3
   14002319d:	call   QWORD PTR [r9+0x18]
   1400231a1:	mov    QWORD PTR [rbx],rax
   1400231a4:	mov    DWORD PTR [rbx+0x8],edi
   1400231a7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400231ac:	add    rsp,0x20
   1400231b0:	pop    rdi
   1400231b1:	ret    
   1400231b2:	mov    r8,QWORD PTR [rcx]
   1400231b5:	lea    rdx,[rdi+rdi*4]
   1400231b9:	shl    rdx,0x3
   1400231bd:	call   QWORD PTR [r8+0x8]
   1400231c1:	mov    QWORD PTR [rbx],rax
   1400231c4:	mov    DWORD PTR [rbx+0x8],edi
   1400231c7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400231cc:	add    rsp,0x20
   1400231d0:	pop    rdi
   1400231d1:	ret    
   1400231d2:	mov    QWORD PTR [rsp+0x30],rsi
   1400231d7:	lea    rdx,[rdi+rdi*4]
   1400231db:	mov    rsi,QWORD PTR [rcx]
   1400231de:	mov    rcx,QWORD PTR [rax]
   1400231e1:	shl    rdx,0x3
   1400231e5:	mov    r8,QWORD PTR [rcx]
   1400231e8:	call   QWORD PTR [r8+0x8]
   1400231ec:	mov    QWORD PTR [rbx],rax
   1400231ef:	test   rsi,rsi
   1400231f2:	je     0x14002320b
   1400231f4:	movsxd rcx,DWORD PTR [rbx+0x8]
   1400231f8:	mov    rdx,rsi
   1400231fb:	lea    r8,[rcx+rcx*4]
   1400231ff:	mov    rcx,rax
   140023202:	shl    r8,0x3
   140023206:	call   0x140026f70
   14002320b:	and    DWORD PTR [rbx+0xc],0x3fffffff
   140023212:	mov    rsi,QWORD PTR [rsp+0x30]
   140023217:	mov    DWORD PTR [rbx+0x8],edi
   14002321a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002321f:	add    rsp,0x20
   140023223:	pop    rdi
   140023224:	ret    
   140023225:	int3   
   140023226:	int3   
   140023227:	int3   
   140023228:	int3   
   140023229:	int3   
   14002322a:	int3   
   14002322b:	int3   
   14002322c:	int3   
   14002322d:	int3   
   14002322e:	int3   
   14002322f:	int3   
   140023230:	cmp    DWORD PTR [rcx+0x108],0x0
   140023237:	je     0x140023243
   140023239:	mov    rax,QWORD PTR [rcx+0x110]
   140023240:	mov    eax,DWORD PTR [rax]
   140023242:	ret    
   140023243:	mov    eax,DWORD PTR [rcx+0x288]
   140023249:	ret    
   14002324a:	int3   
   14002324b:	int3   
   14002324c:	int3   
   14002324d:	int3   
   14002324e:	int3   
   14002324f:	int3   
   140023250:	mov    eax,DWORD PTR [rcx]
   140023252:	ret    
   140023253:	int3   
   140023254:	int3   
   140023255:	int3   
   140023256:	int3   
   140023257:	int3   
   140023258:	int3   
   140023259:	int3   
   14002325a:	int3   
   14002325b:	int3   
   14002325c:	int3   
   14002325d:	int3   
   14002325e:	int3   
   14002325f:	int3   
   140023260:	rex push rdi
   140023262:	sub    rsp,0x20
   140023266:	mov    eax,edx
   140023268:	mov    rdi,rcx
   14002326b:	mov    edx,DWORD PTR [rcx+0xc]
   14002326e:	bt     edx,0x1e
   140023272:	jb     0x140023358
   140023278:	mov    ecx,DWORD PTR [rcx+0x8]
   14002327b:	and    edx,0x3fffffff
   140023281:	mov    QWORD PTR [rsp+0x30],rbx
   140023286:	mov    r9d,0x10
   14002328c:	mov    QWORD PTR [rsp+0x38],rsi
   140023291:	lea    esi,[rcx+rax*1]
   140023294:	mov    r8d,esi
   140023297:	call   0x14001aa30
   14002329c:	mov    ebx,eax
   14002329e:	cmp    eax,esi
   1400232a0:	jge    0x1400232be
   1400232a2:	test   eax,eax
   1400232a4:	jne    0x1400232b0
   1400232a6:	cmp    esi,0xffffffff
   1400232a9:	jg     0x1400232b0
   1400232ab:	or     ebx,0xffffffff
   1400232ae:	jmp    0x1400232be
   1400232b0:	lea    eax,[rbx+rsi*1]
   1400232b3:	cdq    
   1400232b4:	sub    eax,edx
   1400232b6:	sar    eax,1
   1400232b8:	mov    ebx,eax
   1400232ba:	cmp    eax,esi
   1400232bc:	jl     0x1400232b0
   1400232be:	test   DWORD PTR [rdi+0xc],0xc0000000
   1400232c5:	mov    rax,QWORD PTR [rip+0xf0c4]        # 0x140032390
   1400232cc:	mov    rcx,QWORD PTR [rax]
   1400232cf:	mov    rax,QWORD PTR [rcx]
   1400232d2:	jne    0x14002331c
   1400232d4:	mov    rdx,QWORD PTR [rdi]
   1400232d7:	test   rdx,rdx
   1400232da:	je     0x1400232fc
   1400232dc:	movsxd r8,ebx
   1400232df:	shl    r8,0x4
   1400232e3:	call   QWORD PTR [rax+0x18]
   1400232e6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400232eb:	mov    DWORD PTR [rdi+0x8],ebx
   1400232ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400232f3:	mov    QWORD PTR [rdi],rax
   1400232f6:	add    rsp,0x20
   1400232fa:	pop    rdi
   1400232fb:	ret    
   1400232fc:	movsxd rdx,ebx
   1400232ff:	shl    rdx,0x4
   140023303:	call   QWORD PTR [rax+0x8]
   140023306:	mov    rsi,QWORD PTR [rsp+0x38]
   14002330b:	mov    DWORD PTR [rdi+0x8],ebx
   14002330e:	mov    rbx,QWORD PTR [rsp+0x30]
   140023313:	mov    QWORD PTR [rdi],rax
   140023316:	add    rsp,0x20
   14002331a:	pop    rdi
   14002331b:	ret    
   14002331c:	mov    rsi,QWORD PTR [rdi]
   14002331f:	movsxd rdx,ebx
   140023322:	shl    rdx,0x4
   140023326:	call   QWORD PTR [rax+0x8]
   140023329:	mov    QWORD PTR [rdi],rax
   14002332c:	test   rsi,rsi
   14002332f:	je     0x140023344
   140023331:	movsxd r8,DWORD PTR [rdi+0x8]
   140023335:	mov    rdx,rsi
   140023338:	shl    r8,0x4
   14002333c:	mov    rcx,rax
   14002333f:	call   0x140026f70
   140023344:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14002334b:	mov    rsi,QWORD PTR [rsp+0x38]
   140023350:	mov    DWORD PTR [rdi+0x8],ebx
   140023353:	mov    rbx,QWORD PTR [rsp+0x30]
   140023358:	add    rsp,0x20
   14002335c:	pop    rdi
   14002335d:	ret    
   14002335e:	int3   
   14002335f:	int3   
   140023360:	mov    QWORD PTR [rsp+0x8],rbx
   140023365:	mov    rdx,QWORD PTR [rcx+0x10]
   140023369:	lea    r10,[rip+0x1309c]        # 0x14003640c
   140023370:	mov    rbx,rcx
   140023373:	test   rdx,rdx
   140023376:	je     0x1400233d4
   140023378:	mov    r11,QWORD PTR [rcx+0x18]
   14002337c:	test   r11,r11
   14002337f:	je     0x1400233d4
   140023381:	cmp    rdx,r11
   140023384:	je     0x1400233d4
   140023386:	mov    r8,rdx
   140023389:	nop    DWORD PTR [rax+0x0]
   140023390:	movzx  ecx,BYTE PTR [r10]
   140023394:	test   cl,cl
   140023396:	je     0x1400233d4
   140023398:	movzx  r9d,BYTE PTR [r8]
   14002339c:	lea    eax,[r9-0x41]
   1400233a0:	movsx  r9d,r9b
   1400233a4:	cmp    al,0x19
   1400233a6:	ja     0x1400233ac
   1400233a8:	add    r9d,0x20
   1400233ac:	lea    eax,[rcx-0x41]
   1400233af:	cmp    al,0x19
   1400233b1:	movsx  eax,cl
   1400233b4:	ja     0x1400233b9
   1400233b6:	add    eax,0x20
   1400233b9:	cmp    r9d,eax
   1400233bc:	jne    0x1400233d4
   1400233be:	inc    r10
   1400233c1:	inc    r8
   1400233c4:	cmp    r8,r11
   1400233c7:	jne    0x140023390
   1400233c9:	cmp    BYTE PTR [r10],0x0
   1400233cd:	sete   al
   1400233d0:	test   al,al
   1400233d2:	jne    0x140023434
   1400233d4:	lea    r9,[rip+0x13039]        # 0x140036414
   1400233db:	test   rdx,rdx
   1400233de:	je     0x14002343c
   1400233e0:	mov    r10,QWORD PTR [rbx+0x18]
   1400233e4:	test   r10,r10
   1400233e7:	je     0x14002343c
   1400233e9:	cmp    rdx,r10
   1400233ec:	je     0x14002343c
   1400233ee:	xchg   ax,ax
   1400233f0:	movzx  ecx,BYTE PTR [r9]
   1400233f4:	test   cl,cl
   1400233f6:	je     0x14002343c
   1400233f8:	movzx  r8d,BYTE PTR [rdx]
   1400233fc:	lea    eax,[r8-0x41]
   140023400:	movsx  r8d,r8b
   140023404:	cmp    al,0x19
   140023406:	ja     0x14002340c
   140023408:	add    r8d,0x20
   14002340c:	lea    eax,[rcx-0x41]
   14002340f:	cmp    al,0x19
   140023411:	movsx  eax,cl
   140023414:	ja     0x140023419
   140023416:	add    eax,0x20
   140023419:	cmp    r8d,eax
   14002341c:	jne    0x14002343c
   14002341e:	inc    r9
   140023421:	inc    rdx
   140023424:	cmp    rdx,r10
   140023427:	jne    0x1400233f0
   140023429:	cmp    BYTE PTR [r9],0x0
   14002342d:	sete   al
   140023430:	test   al,al
   140023432:	je     0x14002343c
   140023434:	mov    al,0x1
   140023436:	mov    rbx,QWORD PTR [rsp+0x8]
   14002343b:	ret    
   14002343c:	mov    rbx,QWORD PTR [rsp+0x8]
   140023441:	xor    al,al
   140023443:	ret    
   140023444:	int3   
   140023445:	int3   
   140023446:	int3   
   140023447:	int3   
   140023448:	int3   
   140023449:	int3   
   14002344a:	int3   
   14002344b:	int3   
   14002344c:	int3   
   14002344d:	int3   
   14002344e:	int3   
   14002344f:	int3   
   140023450:	mov    r9,QWORD PTR [rcx+0x10]
   140023454:	mov    r10,rdx
   140023457:	test   r9,r9
   14002345a:	je     0x1400234b8
   14002345c:	mov    r11,QWORD PTR [rcx+0x18]
   140023460:	test   r11,r11
   140023463:	je     0x1400234b8
   140023465:	cmp    r9,r11
   140023468:	je     0x1400234b8
   14002346a:	test   rdx,rdx
   14002346d:	je     0x1400234b8
   14002346f:	cmp    r9,r11
   140023472:	je     0x1400234b0
   140023474:	movzx  ecx,BYTE PTR [r10]
   140023478:	test   cl,cl
   14002347a:	je     0x1400234b8
   14002347c:	test   r8b,r8b
   14002347f:	je     0x140023486
   140023481:	cmp    BYTE PTR [r9],cl
   140023484:	jmp    0x1400234a6
   140023486:	movzx  edx,BYTE PTR [r9]
   14002348a:	lea    eax,[rdx-0x41]
   14002348d:	movsx  edx,dl
   140023490:	cmp    al,0x19
   140023492:	ja     0x140023497
   140023494:	add    edx,0x20
   140023497:	lea    eax,[rcx-0x41]
   14002349a:	cmp    al,0x19
   14002349c:	movsx  eax,cl
   14002349f:	ja     0x1400234a4
   1400234a1:	add    eax,0x20
   1400234a4:	cmp    edx,eax
   1400234a6:	jne    0x1400234b8
   1400234a8:	inc    r10
   1400234ab:	inc    r9
   1400234ae:	jmp    0x14002346f
   1400234b0:	cmp    BYTE PTR [r10],0x0
   1400234b4:	sete   al
   1400234b7:	ret    
   1400234b8:	xor    al,al
   1400234ba:	ret    
   1400234bb:	int3   
   1400234bc:	int3   
   1400234bd:	int3   
   1400234be:	int3   
   1400234bf:	int3   
   1400234c0:	mov    rax,QWORD PTR [rcx+0x10]
   1400234c4:	test   rax,rax
   1400234c7:	je     0x140023501
   1400234c9:	mov    rdx,QWORD PTR [rcx+0x18]
   1400234cd:	test   rdx,rdx
   1400234d0:	je     0x140023501
   1400234d2:	cmp    rax,rdx
   1400234d5:	je     0x140023501
   1400234d7:	movabs r8,0x400000004007fed
   1400234e1:	movzx  ecx,BYTE PTR [rax]
   1400234e4:	sub    cl,0x2b
   1400234e7:	cmp    cl,0x3a
   1400234ea:	ja     0x140023501
   1400234ec:	movsx  rcx,cl
   1400234f0:	bt     r8,rcx
   1400234f4:	jae    0x140023501
   1400234f6:	inc    rax
   1400234f9:	cmp    rax,rdx
   1400234fc:	jne    0x1400234e1
   1400234fe:	mov    al,0x1
   140023500:	ret    
   140023501:	xor    al,al
   140023503:	ret    
   140023504:	int3   
   140023505:	int3   
   140023506:	int3   
   140023507:	int3   
   140023508:	int3   
   140023509:	int3   
   14002350a:	int3   
   14002350b:	int3   
   14002350c:	int3   
   14002350d:	int3   
   14002350e:	int3   
   14002350f:	int3   
   140023510:	sub    rsp,0x28
   140023514:	mov    r10,QWORD PTR [rcx+0x10]
   140023518:	mov    r11,rcx
   14002351b:	test   r10,r10
   14002351e:	je     0x140023599
   140023520:	mov    r9,QWORD PTR [rcx+0x18]
   140023524:	test   r9,r9
   140023527:	je     0x140023599
   140023529:	cmp    r10,r9
   14002352c:	je     0x140023599
   14002352e:	mov    QWORD PTR [rsp+0x20],rbx
   140023533:	mov    r8,r10
   140023536:	movabs rbx,0x21ffffff81001
   140023540:	movzx  ecx,BYTE PTR [r8]
   140023544:	lea    eax,[rcx-0x2e]
   140023547:	cmp    al,0x31
   140023549:	ja     0x140023555
   14002354b:	movsx  rax,al
   14002354f:	bt     rbx,rax
   140023553:	jb     0x140023569
   140023555:	lea    eax,[rcx-0x61]
   140023558:	cmp    al,0x19
   14002355a:	jbe    0x140023569
   14002355c:	cmp    r8,r10
   14002355f:	je     0x140023581
   140023561:	sub    cl,0x30
   140023564:	cmp    cl,0x9
   140023567:	ja     0x140023581
   140023569:	inc    r8
   14002356c:	cmp    r8,r9
   14002356f:	jne    0x140023540
   140023571:	test   dl,dl
   140023573:	jne    0x14002358d
   140023575:	mov    rcx,r11
   140023578:	call   0x140023360
   14002357d:	test   al,al
   14002357f:	je     0x14002358d
   140023581:	xor    al,al
   140023583:	mov    rbx,QWORD PTR [rsp+0x20]
   140023588:	add    rsp,0x28
   14002358c:	ret    
   14002358d:	mov    al,0x1
   14002358f:	mov    rbx,QWORD PTR [rsp+0x20]
   140023594:	add    rsp,0x28
   140023598:	ret    
   140023599:	xor    al,al
   14002359b:	add    rsp,0x28
   14002359f:	ret    
   1400235a0:	mov    rax,QWORD PTR [rcx+0x10]
   1400235a4:	test   rax,rax
   1400235a7:	je     0x1400235de
   1400235a9:	mov    rdx,QWORD PTR [rcx+0x18]
   1400235ad:	test   rdx,rdx
   1400235b0:	je     0x1400235de
   1400235b2:	cmp    rax,rdx
   1400235b5:	je     0x1400235de
   1400235b7:	movabs r8,0x3ff280000000000
   1400235c1:	movzx  ecx,BYTE PTR [rax]
   1400235c4:	cmp    cl,0x39
   1400235c7:	ja     0x1400235de
   1400235c9:	movsx  rcx,cl
   1400235cd:	bt     r8,rcx
   1400235d1:	jae    0x1400235de
   1400235d3:	inc    rax
   1400235d6:	cmp    rax,rdx
   1400235d9:	jne    0x1400235c1
   1400235db:	mov    al,0x1
   1400235dd:	ret    
   1400235de:	xor    al,al
   1400235e0:	ret    
   1400235e1:	int3   
   1400235e2:	int3   
   1400235e3:	int3   
   1400235e4:	int3   
   1400235e5:	int3   
   1400235e6:	int3   
   1400235e7:	int3   
   1400235e8:	int3   
   1400235e9:	int3   
   1400235ea:	int3   
   1400235eb:	int3   
   1400235ec:	int3   
   1400235ed:	int3   
   1400235ee:	int3   
   1400235ef:	int3   
   1400235f0:	mov    rdx,rcx
   1400235f3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400235f7:	test   rcx,rcx
   1400235fa:	je     0x14002360e
   1400235fc:	mov    rdx,QWORD PTR [rdx+0x18]
   140023600:	test   rdx,rdx
   140023603:	je     0x14002360e
   140023605:	cmp    rcx,rdx
   140023608:	jne    0x140024040
   14002360e:	xor    al,al
   140023610:	ret    
   140023611:	int3   
   140023612:	int3   
   140023613:	int3   
   140023614:	int3   
   140023615:	int3   
   140023616:	int3   
   140023617:	int3   
   140023618:	int3   
   140023619:	int3   
   14002361a:	int3   
   14002361b:	int3   
   14002361c:	int3   
   14002361d:	int3   
   14002361e:	int3   
   14002361f:	int3   
   140023620:	mov    rdx,QWORD PTR [rcx+0x10]
   140023624:	test   rdx,rdx
   140023627:	je     0x140023657
   140023629:	mov    rcx,QWORD PTR [rcx+0x18]
   14002362d:	test   rcx,rcx
   140023630:	je     0x140023657
   140023632:	cmp    rdx,rcx
   140023635:	je     0x140023657
   140023637:	mov    rax,rcx
   14002363a:	sub    rax,rdx
   14002363d:	cmp    rax,0x2
   140023641:	jl     0x140023657
   140023643:	cmp    BYTE PTR [rdx],0x22
   140023646:	jne    0x140023654
   140023648:	cmp    BYTE PTR [rcx-0x1],0x22
   14002364c:	jne    0x140023654
   14002364e:	mov    eax,0x1
   140023653:	ret    
   140023654:	xor    eax,eax
   140023656:	ret    
   140023657:	xor    al,al
   140023659:	ret    
   14002365a:	int3   
   14002365b:	int3   
   14002365c:	int3   
   14002365d:	int3   
   14002365e:	int3   
   14002365f:	int3   
   140023660:	mov    rdx,QWORD PTR [rcx+0x10]
   140023664:	test   rdx,rdx
   140023667:	je     0x14002367a
   140023669:	mov    rax,QWORD PTR [rcx+0x18]
   14002366d:	test   rax,rax
   140023670:	je     0x14002367a
   140023672:	cmp    rdx,rax
   140023675:	je     0x14002367a
   140023677:	mov    al,0x1
   140023679:	ret    
   14002367a:	xor    al,al
   14002367c:	ret    
   14002367d:	int3   
   14002367e:	int3   
   14002367f:	int3   
   140023680:	mov    QWORD PTR [rsp+0x8],rbx
   140023685:	mov    QWORD PTR [rsp+0x10],rbp
   14002368a:	mov    QWORD PTR [rsp+0x18],rsi
   14002368f:	push   rdi
   140023690:	sub    rsp,0x20
   140023694:	movsxd rbx,edx
   140023697:	movzx  esi,r9b
   14002369b:	mov    edx,ebx
   14002369d:	mov    rbp,r8
   1400236a0:	mov    rdi,rcx
   1400236a3:	call   0x140023d90
   1400236a8:	test   al,al
   1400236aa:	je     0x1400236c7
   1400236ac:	mov    rax,QWORD PTR [rdi+0x110]
   1400236b3:	lea    rcx,[rbx+rbx*4]
   1400236b7:	movzx  r8d,sil
   1400236bb:	mov    rdx,rbp
   1400236be:	lea    rcx,[rax+rcx*8]
   1400236c2:	call   0x140023450
   1400236c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400236cc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400236d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400236d6:	add    rsp,0x20
   1400236da:	pop    rdi
   1400236db:	ret    
   1400236dc:	int3   
   1400236dd:	int3   
   1400236de:	int3   
   1400236df:	int3   
   1400236e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400236e5:	push   rdi
   1400236e6:	sub    rsp,0x20
   1400236ea:	movsxd rbx,edx
   1400236ed:	mov    rdi,rcx
   1400236f0:	mov    edx,ebx
   1400236f2:	call   0x140023d90
   1400236f7:	test   al,al
   1400236f9:	je     0x14002376d
   1400236fb:	mov    rax,QWORD PTR [rdi+0x110]
   140023702:	lea    rcx,[rbx+rbx*4]
   140023706:	mov    r9,QWORD PTR [rax+rcx*8+0x10]
   14002370b:	test   r9,r9
   14002370e:	je     0x14002376d
   140023710:	mov    r8,QWORD PTR [rax+rcx*8+0x18]
   140023715:	test   r8,r8
   140023718:	je     0x14002376d
   14002371a:	cmp    r9,r8
   14002371d:	je     0x14002376d
   14002371f:	mov    rcx,r9
   140023722:	movabs r10,0x21ffffff81001
   14002372c:	nop    DWORD PTR [rax+0x0]
   140023730:	movzx  edx,BYTE PTR [rcx]
   140023733:	lea    eax,[rdx-0x2e]
   140023736:	cmp    al,0x31
   140023738:	ja     0x140023744
   14002373a:	movsx  rax,al
   14002373e:	bt     r10,rax
   140023742:	jb     0x140023758
   140023744:	lea    eax,[rdx-0x61]
   140023747:	cmp    al,0x19
   140023749:	jbe    0x140023758
   14002374b:	cmp    rcx,r9
   14002374e:	je     0x14002376d
   140023750:	sub    dl,0x30
   140023753:	cmp    dl,0x9
   140023756:	ja     0x14002376d
   140023758:	inc    rcx
   14002375b:	cmp    rcx,r8
   14002375e:	jne    0x140023730
   140023760:	mov    al,0x1
   140023762:	mov    rbx,QWORD PTR [rsp+0x30]
   140023767:	add    rsp,0x20
   14002376b:	pop    rdi
   14002376c:	ret    
   14002376d:	xor    al,al
   14002376f:	mov    rbx,QWORD PTR [rsp+0x30]
   140023774:	add    rsp,0x20
   140023778:	pop    rdi
   140023779:	ret    
   14002377a:	int3   
   14002377b:	int3   
   14002377c:	int3   
   14002377d:	int3   
   14002377e:	int3   
   14002377f:	int3   
   140023780:	mov    QWORD PTR [rsp+0x8],rbx
   140023785:	mov    QWORD PTR [rsp+0x10],rsi
   14002378a:	push   rdi
   14002378b:	sub    rsp,0x20
   14002378f:	movsxd rdi,edx
   140023792:	mov    rbx,r8
   140023795:	mov    edx,edi
   140023797:	mov    rsi,rcx
   14002379a:	call   0x140023d90
   14002379f:	test   al,al
   1400237a1:	jne    0x1400237b3
   1400237a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400237a8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400237ad:	add    rsp,0x20
   1400237b1:	pop    rdi
   1400237b2:	ret    
   1400237b3:	test   rbx,rbx
   1400237b6:	je     0x1400237de
   1400237b8:	mov    rax,QWORD PTR [rsi+0x110]
   1400237bf:	lea    rcx,[rdi+rdi*4]
   1400237c3:	movups xmm0,XMMWORD PTR [rax+rcx*8]
   1400237c7:	movups XMMWORD PTR [rbx],xmm0
   1400237ca:	movups xmm1,XMMWORD PTR [rax+rcx*8+0x10]
   1400237cf:	movups XMMWORD PTR [rbx+0x10],xmm1
   1400237d3:	movsd  xmm0,QWORD PTR [rax+rcx*8+0x20]
   1400237d9:	movsd  QWORD PTR [rbx+0x20],xmm0
   1400237de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400237e3:	mov    al,0x1
   1400237e5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400237ea:	add    rsp,0x20
   1400237ee:	pop    rdi
   1400237ef:	ret    
   1400237f0:	mov    QWORD PTR [rsp+0x20],r9
   1400237f5:	mov    QWORD PTR [rsp+0x18],r8
   1400237fa:	push   rbx
   1400237fb:	push   rbp
   1400237fc:	push   rsi
   1400237fd:	push   rdi
   1400237fe:	push   r14
   140023800:	push   r15
   140023802:	sub    rsp,0x28
   140023806:	mov    rbp,r8
   140023809:	mov    r15,rdx
   14002380c:	mov    rdi,rcx
   14002380f:	xor    r14d,r14d
   140023812:	nop    DWORD PTR [rax+0x0]
   140023816:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023820:	mov    rbx,QWORD PTR [rdi+0x100]
   140023827:	mov    eax,DWORD PTR [rbx+0x20]
   14002382a:	mov    ecx,DWORD PTR [rbx+0x10]
   14002382d:	sub    eax,ecx
   14002382f:	je     0x140023d7c
   140023835:	sub    ecx,DWORD PTR [rbx+0x24]
   140023838:	mov    rax,QWORD PTR [rbx]
   14002383b:	movsxd rcx,ecx
   14002383e:	cmp    BYTE PTR [rcx+rax*1],r14b
   140023842:	je     0x140023d7c
   140023848:	cmp    BYTE PTR [rdi+0x2b2],r14b
   14002384f:	je     0x1400238e1
   140023855:	mov    rcx,rbx
   140023858:	mov    esi,r14d
   14002385b:	call   0x140022e60
   140023860:	test   al,al
   140023862:	jne    0x1400238db
   140023864:	nop    DWORD PTR [rax+0x0]
   140023868:	nop    DWORD PTR [rax+rax*1+0x0]
   140023870:	xor    r8d,r8d
   140023873:	mov    rcx,rbx
   140023876:	lea    edx,[r8+0x1]
   14002387a:	call   0x140021730
   14002387f:	test   rax,rax
   140023882:	je     0x1400238db
   140023884:	movsx  ecx,BYTE PTR [rax]
   140023887:	lea    eax,[rcx-0x9]
   14002388a:	cmp    eax,0x4
   14002388d:	jbe    0x140023894
   14002388f:	cmp    ecx,0x20
   140023892:	jne    0x1400238db
   140023894:	mov    edx,0x1
   140023899:	mov    rcx,rbx
   14002389c:	call   0x140020b70
   1400238a1:	test   al,al
   1400238a3:	je     0x1400238c0
   1400238a5:	mov    edx,DWORD PTR [rbx+0x10]
   1400238a8:	mov    eax,edx
   1400238aa:	sub    eax,DWORD PTR [rbx+0x24]
   1400238ad:	movsxd rcx,eax
   1400238b0:	mov    rax,QWORD PTR [rbx]
   1400238b3:	movzx  r8d,BYTE PTR [rcx+rax*1]
   1400238b8:	lea    eax,[rdx+0x1]
   1400238bb:	mov    DWORD PTR [rbx+0x10],eax
   1400238be:	jmp    0x1400238c3
   1400238c0:	xor    r8b,r8b
   1400238c3:	lea    eax,[rsi+0x1]
   1400238c6:	cmp    r8b,0xa
   1400238ca:	mov    rcx,rbx
   1400238cd:	cmovne eax,esi
   1400238d0:	mov    esi,eax
   1400238d2:	call   0x140022e60
   1400238d7:	test   al,al
   1400238d9:	je     0x140023870
   1400238db:	add    DWORD PTR [rdi+0x288],esi
   1400238e1:	mov    DWORD PTR [rsp+0x60],r14d
   1400238e6:	cmp    BYTE PTR [rdi+0x2b1],r14b
   1400238ed:	je     0x140023937
   1400238ef:	mov    rcx,QWORD PTR [rdi+0x100]
   1400238f6:	lea    rdx,[rsp+0x60]
   1400238fb:	call   0x140020d20
   140023900:	test   al,al
   140023902:	je     0x140023913
   140023904:	mov    eax,DWORD PTR [rsp+0x60]
   140023908:	add    DWORD PTR [rdi+0x288],eax
   14002390e:	jmp    0x140023820
   140023913:	cmp    BYTE PTR [rdi+0x2b1],r14b
   14002391a:	je     0x140023937
   14002391c:	mov    rcx,QWORD PTR [rdi+0x100]
   140023923:	call   0x140020e70
   140023928:	test   al,al
   14002392a:	je     0x140023937
   14002392c:	inc    DWORD PTR [rdi+0x288]
   140023932:	jmp    0x140023820
   140023937:	mov    rax,QWORD PTR [rsp+0x80]
   14002393f:	lea    r14,[rdi+0x288]
   140023946:	mov    ecx,DWORD PTR [r14]
   140023949:	mov    DWORD PTR [rax],ecx
   14002394b:	mov    rcx,QWORD PTR [rdi+0x100]
   140023952:	mov    eax,DWORD PTR [rcx+0x20]
   140023955:	mov    edx,DWORD PTR [rcx+0x10]
   140023958:	sub    eax,edx
   14002395a:	je     0x140023d7c
   140023960:	sub    edx,DWORD PTR [rcx+0x24]
   140023963:	mov    rax,QWORD PTR [rcx]
   140023966:	movsxd rdx,edx
   140023969:	cmp    BYTE PTR [rdx+rax*1],0x0
   14002396d:	je     0x140023d7c
   140023973:	xor    r8d,r8d
   140023976:	lea    edx,[r8+0x1]
   14002397a:	call   0x140021730
   14002397f:	mov    QWORD PTR [r15],rax
   140023982:	test   rax,rax
   140023985:	je     0x140023d7c
   14002398b:	mov    rbx,QWORD PTR [rdi+0x100]
   140023992:	mov    edx,0x1
   140023997:	mov    rcx,rbx
   14002399a:	mov    QWORD PTR [rsp+0x20],r13
   14002399f:	call   0x140020b70
   1400239a4:	test   al,al
   1400239a6:	je     0x140023d75
   1400239ac:	mov    edx,DWORD PTR [rbx+0x10]
   1400239af:	mov    eax,edx
   1400239b1:	sub    eax,DWORD PTR [rbx+0x24]
   1400239b4:	movsxd rcx,eax
   1400239b7:	mov    rax,QWORD PTR [rbx]
   1400239ba:	movzx  r13d,BYTE PTR [rcx+rax*1]
   1400239bf:	lea    eax,[rdx+0x1]
   1400239c2:	mov    DWORD PTR [rbx+0x10],eax
   1400239c5:	test   r13b,r13b
   1400239c8:	je     0x140023d75
   1400239ce:	cmp    BYTE PTR [rdi+0x2b0],0x0
   1400239d5:	je     0x140023c64
   1400239db:	cmp    r13b,0x22
   1400239df:	je     0x140023a58
   1400239e1:	cmp    r13b,0x27
   1400239e5:	jne    0x140023c64
   1400239eb:	xor    al,al
   1400239ed:	mov    QWORD PTR [rsp+0x68],r12
   1400239f2:	xor    r12b,r12b
   1400239f5:	mov    BYTE PTR [rsp+0x60],al
   1400239f9:	xor    bpl,bpl
   1400239fc:	xor    r15b,r15b
   1400239ff:	nop
   140023a00:	mov    rsi,QWORD PTR [rdi+0x100]
   140023a07:	mov    ecx,DWORD PTR [rsi+0x10]
   140023a0a:	cmp    DWORD PTR [rsi+0x20],ecx
   140023a0d:	je     0x140023c56
   140023a13:	sub    ecx,DWORD PTR [rsi+0x24]
   140023a16:	mov    rax,QWORD PTR [rsi]
   140023a19:	movsxd rcx,ecx
   140023a1c:	cmp    BYTE PTR [rcx+rax*1],0x0
   140023a20:	je     0x140023c56
   140023a26:	mov    edx,0x1
   140023a2b:	mov    rcx,rsi
   140023a2e:	call   0x140020b70
   140023a33:	test   al,al
   140023a35:	je     0x140023b37
   140023a3b:	mov    edx,DWORD PTR [rsi+0x10]
   140023a3e:	mov    eax,edx
   140023a40:	sub    eax,DWORD PTR [rsi+0x24]
   140023a43:	movsxd rcx,eax
   140023a46:	mov    rax,QWORD PTR [rsi]
   140023a49:	movzx  ebx,BYTE PTR [rcx+rax*1]
   140023a4d:	lea    eax,[rdx+0x1]
   140023a50:	mov    DWORD PTR [rsi+0x10],eax
   140023a53:	jmp    0x140023b39
   140023a58:	mov    rcx,QWORD PTR [rdi+0x100]
   140023a5f:	lea    r8,[rip+0x146a2]        # 0x140038108
   140023a66:	mov    r9,r14
   140023a69:	lea    rdx,[rip+0x146a0]        # 0x140038110
   140023a70:	call   0x140023060
   140023a75:	test   al,al
   140023a77:	je     0x1400239eb
   140023a7d:	mov    rcx,QWORD PTR [rdi+0x100]
   140023a84:	lea    r8,[rip+0x14689]        # 0x140038114
   140023a8b:	mov    r9,r14
   140023a8e:	lea    rdx,[rip+0x12caf]        # 0x140036744
   140023a95:	call   0x140023060
   140023a9a:	test   al,al
   140023a9c:	je     0x140023ac0
   140023a9e:	mov    rdx,QWORD PTR [rdi+0x100]
   140023aa5:	mov    eax,DWORD PTR [rdx+0x10]
   140023aa8:	sub    eax,DWORD PTR [rdx+0x24]
   140023aab:	movsxd rcx,eax
   140023aae:	mov    rax,QWORD PTR [rdx]
   140023ab1:	dec    rcx
   140023ab4:	add    rcx,rax
   140023ab7:	mov    QWORD PTR [rbp+0x0],rcx
   140023abb:	jmp    0x140023c42
   140023ac0:	xor    r8b,r8b
   140023ac3:	mov    rcx,QWORD PTR [rdi+0x100]
   140023aca:	mov    edx,DWORD PTR [rcx+0x10]
   140023acd:	cmp    DWORD PTR [rcx+0x20],edx
   140023ad0:	je     0x1400239eb
   140023ad6:	sub    edx,DWORD PTR [rcx+0x24]
   140023ad9:	mov    rax,QWORD PTR [rcx]
   140023adc:	movsxd rdx,edx
   140023adf:	cmp    BYTE PTR [rdx+rax*1],0x0
   140023ae3:	je     0x1400239eb
   140023ae9:	test   r8b,r8b
   140023aec:	jne    0x140023b0c
   140023aee:	mov    r9,r14
   140023af1:	lea    r8,[rip+0x14624]        # 0x14003811c
   140023af8:	lea    rdx,[rip+0x12c59]        # 0x140036758
   140023aff:	call   0x140023060
   140023b04:	test   al,al
   140023b06:	jne    0x140023d59
   140023b0c:	mov    rcx,QWORD PTR [rdi+0x100]
   140023b13:	call   0x14001e1c0
   140023b18:	cmp    al,0xa
   140023b1a:	jne    0x140023b27
   140023b1c:	inc    DWORD PTR [r14]
   140023b1f:	cmp    al,0x5c
   140023b21:	sete   r8b
   140023b25:	jmp    0x140023ac3
   140023b27:	test   al,al
   140023b29:	je     0x140023d75
   140023b2f:	cmp    al,0x5c
   140023b31:	sete   r8b
   140023b35:	jmp    0x140023ac3
   140023b37:	xor    bl,bl
   140023b39:	cmp    bpl,0x5c
   140023b3d:	jne    0x140023b80
   140023b3f:	test   r12b,r12b
   140023b42:	jne    0x140023b80
   140023b44:	mov    r12b,0x1
   140023b47:	xor    al,al
   140023b49:	test   bl,bl
   140023b4b:	je     0x140023c22
   140023b51:	test   al,al
   140023b53:	jne    0x140023c22
   140023b59:	cmp    bpl,0x5c
   140023b5d:	jne    0x140023b8c
   140023b5f:	cmp    bl,0xd
   140023b62:	jne    0x140023b8c
   140023b64:	mov    dl,0x1
   140023b66:	xor    cl,cl
   140023b68:	cmp    r15b,0x5c
   140023b6c:	jne    0x140023b9d
   140023b6e:	cmp    bpl,0xd
   140023b72:	jne    0x140023b9d
   140023b74:	cmp    bl,0xa
   140023b77:	jne    0x140023b9d
   140023b79:	mov    al,0x1
   140023b7b:	movzx  esi,al
   140023b7e:	jmp    0x140023bbc
   140023b80:	xor    r12b,r12b
   140023b83:	cmp    bl,r13b
   140023b86:	jne    0x140023b47
   140023b88:	mov    al,0x1
   140023b8a:	jmp    0x140023b49
   140023b8c:	xor    dl,dl
   140023b8e:	cmp    bpl,0x5c
   140023b92:	jne    0x140023b66
   140023b94:	cmp    bl,0xa
   140023b97:	jne    0x140023b66
   140023b99:	mov    cl,0x1
   140023b9b:	jmp    0x140023b68
   140023b9d:	xor    al,al
   140023b9f:	cmp    bpl,0xd
   140023ba3:	jne    0x140023baf
   140023ba5:	cmp    bl,0xa
   140023ba8:	jne    0x140023baf
   140023baa:	mov    sil,0x1
   140023bad:	jmp    0x140023bbc
   140023baf:	xor    sil,sil
   140023bb2:	cmp    bl,0xd
   140023bb5:	je     0x140023bbc
   140023bb7:	cmp    bl,0xa
   140023bba:	jne    0x140023c16
   140023bbc:	test   dl,dl
   140023bbe:	jne    0x140023c01
   140023bc0:	test   cl,cl
   140023bc2:	jne    0x140023c01
   140023bc4:	test   al,al
   140023bc6:	jne    0x140023c01
   140023bc8:	cmp    BYTE PTR [rsp+0x60],al
   140023bcc:	jne    0x140023c09
   140023bce:	lea    rcx,[rdi+0x298]
   140023bd5:	call   0x140022d60
   140023bda:	movsxd rcx,eax
   140023bdd:	lea    rdx,[rip+0x14544]        # 0x140038128
   140023be4:	mov    eax,DWORD PTR [r14]
   140023be7:	shl    rcx,0x4
   140023beb:	add    rcx,QWORD PTR [rdi+0x2a0]
   140023bf2:	mov    DWORD PTR [rcx+0x8],eax
   140023bf5:	call   0x14001aae0
   140023bfa:	mov    BYTE PTR [rsp+0x60],0x1
   140023bff:	jmp    0x140023c09
   140023c01:	mov    rax,QWORD PTR [rsp+0x78]
   140023c06:	mov    BYTE PTR [rax],0x1
   140023c09:	cmp    bl,0xd
   140023c0c:	jne    0x140023c13
   140023c0e:	test   sil,sil
   140023c11:	je     0x140023c16
   140023c13:	inc    DWORD PTR [r14]
   140023c16:	movzx  r15d,bpl
   140023c1a:	movzx  ebp,bl
   140023c1d:	jmp    0x140023a00
   140023c22:	mov    rdx,QWORD PTR [rdi+0x100]
   140023c29:	mov    eax,DWORD PTR [rdx+0x10]
   140023c2c:	sub    eax,DWORD PTR [rdx+0x24]
   140023c2f:	movsxd rcx,eax
   140023c32:	add    rcx,QWORD PTR [rdx]
   140023c35:	mov    rax,QWORD PTR [rsp+0x70]
   140023c3a:	mov    r12,QWORD PTR [rsp+0x68]
   140023c3f:	mov    QWORD PTR [rax],rcx
   140023c42:	mov    al,0x1
   140023c44:	mov    r13,QWORD PTR [rsp+0x20]
   140023c49:	add    rsp,0x28
   140023c4d:	pop    r15
   140023c4f:	pop    r14
   140023c51:	pop    rdi
   140023c52:	pop    rsi
   140023c53:	pop    rbp
   140023c54:	pop    rbx
   140023c55:	ret    
   140023c56:	mov    eax,DWORD PTR [rsi+0x10]
   140023c59:	sub    eax,DWORD PTR [rsi+0x24]
   140023c5c:	movsxd rcx,eax
   140023c5f:	add    rcx,QWORD PTR [rsi]
   140023c62:	jmp    0x140023c35
   140023c64:	cmp    r13b,0x22
   140023c68:	je     0x140023c74
   140023c6a:	cmp    r13b,0x27
   140023c6e:	je     0x140023c74
   140023c70:	xor    cl,cl
   140023c72:	jmp    0x140023c76
   140023c74:	mov    cl,0x1
   140023c76:	movzx  eax,r13b
   140023c7a:	cmp    BYTE PTR [rax+rdi*1],0x0
   140023c7e:	jne    0x140023d59
   140023c84:	test   cl,cl
   140023c86:	jne    0x140023d59
   140023c8c:	cmp    r13b,0x20
   140023c90:	jg     0x140023c9e
   140023c92:	cmp    BYTE PTR [rdi+0x2b3],cl
   140023c98:	jne    0x140023d59
   140023c9e:	xor    sil,sil
   140023ca1:	mov    rbx,QWORD PTR [rdi+0x100]
   140023ca8:	mov    edx,0x1
   140023cad:	mov    rcx,rbx
   140023cb0:	call   0x140020b70
   140023cb5:	test   al,al
   140023cb7:	je     0x140023cd4
   140023cb9:	mov    edx,DWORD PTR [rbx+0x10]
   140023cbc:	mov    eax,edx
   140023cbe:	sub    eax,DWORD PTR [rbx+0x24]
   140023cc1:	movsxd rcx,eax
   140023cc4:	mov    rax,QWORD PTR [rbx]
   140023cc7:	movzx  r8d,BYTE PTR [rcx+rax*1]
   140023ccc:	lea    eax,[rdx+0x1]
   140023ccf:	mov    DWORD PTR [rbx+0x10],eax
   140023cd2:	jmp    0x140023cd7
   140023cd4:	xor    r8b,r8b
   140023cd7:	cmp    sil,0x5c
   140023cdb:	je     0x140023ced
   140023cdd:	cmp    r8b,0x22
   140023ce1:	je     0x140023ce9
   140023ce3:	cmp    r8b,0x27
   140023ce7:	jne    0x140023ced
   140023ce9:	mov    cl,0x1
   140023ceb:	jmp    0x140023cef
   140023ced:	xor    cl,cl
   140023cef:	movzx  eax,r8b
   140023cf3:	cmp    BYTE PTR [rax+rdi*1],0x0
   140023cf7:	jne    0x140023d45
   140023cf9:	test   cl,cl
   140023cfb:	jne    0x140023d45
   140023cfd:	cmp    r8b,0x20
   140023d01:	jg     0x140023d0b
   140023d03:	cmp    BYTE PTR [rdi+0x2b3],cl
   140023d09:	jne    0x140023d45
   140023d0b:	mov    rdx,QWORD PTR [rdi+0x100]
   140023d12:	mov    ecx,DWORD PTR [rdx+0x10]
   140023d15:	cmp    DWORD PTR [rdx+0x20],ecx
   140023d18:	je     0x140023d32
   140023d1a:	sub    ecx,DWORD PTR [rdx+0x24]
   140023d1d:	mov    rax,QWORD PTR [rdx]
   140023d20:	movsxd rcx,ecx
   140023d23:	cmp    BYTE PTR [rcx+rax*1],0x0
   140023d27:	je     0x140023d32
   140023d29:	movzx  esi,r8b
   140023d2d:	jmp    0x140023ca1
   140023d32:	movsxd rcx,DWORD PTR [rdx+0x10]
   140023d36:	mov    rax,rdx
   140023d39:	add    rcx,QWORD PTR [rdx]
   140023d3c:	mov    QWORD PTR [rbp+0x0],rcx
   140023d40:	jmp    0x140023c42
   140023d45:	mov    rcx,QWORD PTR [rdi+0x100]
   140023d4c:	or     r8d,0xffffffff
   140023d50:	lea    edx,[r8+0x2]
   140023d54:	call   0x140021ee0
   140023d59:	mov    rdx,QWORD PTR [rdi+0x100]
   140023d60:	mov    eax,DWORD PTR [rdx+0x10]
   140023d63:	sub    eax,DWORD PTR [rdx+0x24]
   140023d66:	movsxd rcx,eax
   140023d69:	add    rcx,QWORD PTR [rdx]
   140023d6c:	mov    QWORD PTR [rbp+0x0],rcx
   140023d70:	jmp    0x140023c42
   140023d75:	xor    al,al
   140023d77:	jmp    0x140023c44
   140023d7c:	xor    al,al
   140023d7e:	add    rsp,0x28
   140023d82:	pop    r15
   140023d84:	pop    r14
   140023d86:	pop    rdi
   140023d87:	pop    rsi
   140023d88:	pop    rbp
   140023d89:	pop    rbx
   140023d8a:	ret    
   140023d8b:	int3   
   140023d8c:	int3   
   140023d8d:	int3   
   140023d8e:	int3   
   140023d8f:	int3   
   140023d90:	rex push rbx
   140023d92:	push   rbp
   140023d93:	push   rsi
   140023d94:	push   rdi
   140023d95:	push   r12
   140023d97:	push   r14
   140023d99:	push   r15
   140023d9b:	sub    rsp,0x30
   140023d9f:	mov    r14d,edx
   140023da2:	mov    rbx,rcx
   140023da5:	inc    edx
   140023da7:	add    rcx,0x110
   140023dae:	call   0x140023150
   140023db3:	sub    r14d,DWORD PTR [rbx+0x108]
   140023dba:	xor    r12d,r12d
   140023dbd:	inc    r14d
   140023dc0:	mov    ebp,r12d
   140023dc3:	test   r14d,r14d
   140023dc6:	jle    0x140023edf
   140023dcc:	mov    ecx,DWORD PTR [rip+0x24492]        # 0x140048264
   140023dd2:	cmp    ecx,DWORD PTR [rip+0x223f8]        # 0x1400461d0
   140023dd8:	mov    QWORD PTR [rsp+0x80],r12
   140023de0:	mov    QWORD PTR [rsp+0x88],r12
   140023de8:	jne    0x140023df5
   140023dea:	call   QWORD PTR [rip+0xe7c0]        # 0x1400325b0
   140023df0:	test   eax,eax
   140023df2:	je     0x140023df5
   140023df4:	int3   
   140023df5:	lea    rax,[rsp+0x70]
   140023dfa:	mov    rcx,rbx
   140023dfd:	lea    r9,[rsp+0x78]
   140023e02:	mov    QWORD PTR [rsp+0x20],rax
   140023e07:	lea    r8,[rsp+0x88]
   140023e0f:	lea    rdx,[rsp+0x80]
   140023e17:	call   0x1400237f0
   140023e1c:	test   al,al
   140023e1e:	je     0x140023ef0
   140023e24:	movsxd rdi,DWORD PTR [rbx+0x108]
   140023e2b:	cmp    edi,DWORD PTR [rbx+0x118]
   140023e31:	jne    0x140023e44
   140023e33:	lea    rcx,[rbx+0x110]
   140023e3a:	mov    edx,0x1
   140023e3f:	call   0x140009810
   140023e44:	mov    rax,QWORD PTR [rbx+0x110]
   140023e4b:	lea    rcx,[rdi+rdi*4]
   140023e4f:	inc    DWORD PTR [rbx+0x108]
   140023e55:	lea    rax,[rax+rcx*8]
   140023e59:	test   rax,rax
   140023e5c:	je     0x140023e74
   140023e5e:	mov    QWORD PTR [rax+0x8],r12
   140023e62:	mov    QWORD PTR [rax+0x10],r12
   140023e66:	mov    QWORD PTR [rax+0x18],r12
   140023e6a:	mov    DWORD PTR [rax+0x20],0xffffffff
   140023e71:	mov    DWORD PTR [rax],r12d
   140023e74:	mov    rax,QWORD PTR [rbx+0x110]
   140023e7b:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140023e80:	lea    rdi,[rax+rcx*8]
   140023e84:	mov    ecx,DWORD PTR [rip+0x243da]        # 0x140048264
   140023e8a:	mov    esi,ecx
   140023e8c:	test   rdx,rdx
   140023e8f:	je     0x140023ea7
   140023e91:	mov    rax,QWORD PTR [rip+0xe4f8]        # 0x140032390
   140023e98:	mov    rcx,QWORD PTR [rax]
   140023e9b:	mov    rax,QWORD PTR [rcx]
   140023e9e:	call   QWORD PTR [rax+0x28]
   140023ea1:	mov    ecx,DWORD PTR [rip+0x243bd]        # 0x140048264
   140023ea7:	mov    eax,DWORD PTR [rsp+0x70]
   140023eab:	inc    ecx
   140023ead:	mov    DWORD PTR [rdi],eax
   140023eaf:	inc    ebp
   140023eb1:	mov    rax,QWORD PTR [rsp+0x80]
   140023eb9:	mov    QWORD PTR [rdi+0x10],rax
   140023ebd:	mov    rax,QWORD PTR [rsp+0x88]
   140023ec5:	mov    QWORD PTR [rdi+0x18],rax
   140023ec9:	mov    QWORD PTR [rdi+0x8],r12
   140023ecd:	mov    DWORD PTR [rdi+0x20],esi
   140023ed0:	mov    DWORD PTR [rip+0x2438e],ecx        # 0x140048264
   140023ed6:	cmp    ebp,r14d
   140023ed9:	jl     0x140023dd2
   140023edf:	mov    al,0x1
   140023ee1:	add    rsp,0x30
   140023ee5:	pop    r15
   140023ee7:	pop    r14
   140023ee9:	pop    r12
   140023eeb:	pop    rdi
   140023eec:	pop    rsi
   140023eed:	pop    rbp
   140023eee:	pop    rbx
   140023eef:	ret    
   140023ef0:	xor    al,al
   140023ef2:	add    rsp,0x30
   140023ef6:	pop    r15
   140023ef8:	pop    r14
   140023efa:	pop    r12
   140023efc:	pop    rdi
   140023efd:	pop    rsi
   140023efe:	pop    rbp
   140023eff:	pop    rbx
   140023f00:	ret    
   140023f01:	int3   
   140023f02:	int3   
   140023f03:	int3   
   140023f04:	int3   
   140023f05:	int3   
   140023f06:	int3   
   140023f07:	int3   
   140023f08:	int3   
   140023f09:	int3   
   140023f0a:	int3   
   140023f0b:	int3   
   140023f0c:	int3   
   140023f0d:	int3   
   140023f0e:	int3   
   140023f0f:	int3   
   140023f10:	mov    QWORD PTR [rsp+0x18],rbp
   140023f15:	push   rsi
   140023f16:	sub    rsp,0x20
   140023f1a:	movsxd rbp,edx
   140023f1d:	mov    rsi,rcx
   140023f20:	mov    QWORD PTR [rsp+0x30],rbx
   140023f25:	lea    eax,[rbp-0x1]
   140023f28:	movsxd rbx,eax
   140023f2b:	test   eax,eax
   140023f2d:	js     0x140023f6d
   140023f2f:	mov    QWORD PTR [rsp+0x38],rdi
   140023f34:	lea    rdi,[rbx+rbx*4]
   140023f38:	shl    rdi,0x3
   140023f3c:	nop    DWORD PTR [rax+0x0]
   140023f40:	mov    rax,QWORD PTR [rsi+0x8]
   140023f44:	mov    rdx,QWORD PTR [rdi+rax*1+0x8]
   140023f49:	test   rdx,rdx
   140023f4c:	je     0x140023f5e
   140023f4e:	mov    rax,QWORD PTR [rip+0xe43b]        # 0x140032390
   140023f55:	mov    rcx,QWORD PTR [rax]
   140023f58:	mov    rax,QWORD PTR [rcx]
   140023f5b:	call   QWORD PTR [rax+0x28]
   140023f5e:	sub    rdi,0x28
   140023f62:	sub    rbx,0x1
   140023f66:	jns    0x140023f40
   140023f68:	mov    rdi,QWORD PTR [rsp+0x38]
   140023f6d:	mov    eax,DWORD PTR [rsi]
   140023f6f:	mov    rbx,QWORD PTR [rsp+0x30]
   140023f74:	sub    eax,ebp
   140023f76:	test   eax,eax
   140023f78:	jle    0x140023fa0
   140023f7a:	test   ebp,ebp
   140023f7c:	jle    0x140023fa0
   140023f7e:	mov    rcx,QWORD PTR [rsi+0x8]
   140023f82:	lea    rdx,[rbp*4+0x0]
   140023f8a:	cdqe   
   140023f8c:	add    rdx,rbp
   140023f8f:	lea    r8,[rax+rax*4]
   140023f93:	shl    r8,0x3
   140023f97:	lea    rdx,[rcx+rdx*8]
   140023f9b:	call   0x140026f70
   140023fa0:	sub    DWORD PTR [rsi],ebp
   140023fa2:	mov    rbp,QWORD PTR [rsp+0x40]
   140023fa7:	add    rsp,0x20
   140023fab:	pop    rsi
   140023fac:	ret    
   140023fad:	int3   
   140023fae:	int3   
   140023faf:	int3   
   140023fb0:	rex push rbx
   140023fb2:	sub    rsp,0x20
   140023fb6:	mov    rbx,rcx
   140023fb9:	xor    r8d,r8d
   140023fbc:	mov    rcx,QWORD PTR [rcx+0x100]
   140023fc3:	xor    edx,edx
   140023fc5:	call   0x140021ee0
   140023fca:	lea    rcx,[rbx+0x108]
   140023fd1:	call   0x140015770
   140023fd6:	mov    rdx,QWORD PTR [rbx+0x268]
   140023fdd:	test   rdx,rdx
   140023fe0:	je     0x140023ff2
   140023fe2:	mov    rax,QWORD PTR [rip+0xe3a7]        # 0x140032390
   140023fe9:	mov    rcx,QWORD PTR [rax]
   140023fec:	mov    rax,QWORD PTR [rcx]
   140023fef:	call   QWORD PTR [rax+0x28]
   140023ff2:	xor    eax,eax
   140023ff4:	mov    DWORD PTR [rbx+0x280],0xffffffff
   140023ffe:	mov    QWORD PTR [rbx+0x268],rax
   140024005:	mov    QWORD PTR [rbx+0x270],rax
   14002400c:	mov    QWORD PTR [rbx+0x278],rax
   140024013:	mov    DWORD PTR [rbx+0x260],eax
   140024019:	mov    DWORD PTR [rbx+0x288],0x1
   140024023:	add    rsp,0x20
   140024027:	pop    rbx
   140024028:	ret    
   140024029:	int3   
   14002402a:	int3   
   14002402b:	int3   
   14002402c:	int3   
   14002402d:	int3   
   14002402e:	int3   
   14002402f:	int3   
   140024030:	jmp    0x1400245d0
   140024035:	int3   
   140024036:	int3   
   140024037:	int3   
   140024038:	int3   
   140024039:	int3   
   14002403a:	int3   
   14002403b:	int3   
   14002403c:	int3   
   14002403d:	int3   
   14002403e:	int3   
   14002403f:	int3   
   140024040:	rex push rbx
   140024042:	sub    rsp,0x20
   140024046:	mov    rbx,rdx
   140024049:	test   rcx,rcx
   14002404c:	je     0x1400240a0
   14002404e:	test   rdx,rdx
   140024051:	je     0x1400240a0
   140024053:	mov    rax,rdx
   140024056:	sub    rax,rcx
   140024059:	cmp    rax,0x6
   14002405d:	jl     0x1400240a0
   14002405f:	mov    r8d,0x3
   140024065:	lea    rdx,[rip+0x126e8]        # 0x140036754
   14002406c:	call   0x140022670
   140024071:	test   eax,eax
   140024073:	jne    0x140024098
   140024075:	lea    rcx,[rbx-0x3]
   140024079:	lea    r8d,[rax+0x3]
   14002407d:	lea    rdx,[rip+0x126d0]        # 0x140036754
   140024084:	call   0x140022670
   140024089:	test   eax,eax
   14002408b:	jne    0x140024098
   14002408d:	mov    eax,0x1
   140024092:	add    rsp,0x20
   140024096:	pop    rbx
   140024097:	ret    
   140024098:	xor    eax,eax
   14002409a:	add    rsp,0x20
   14002409e:	pop    rbx
   14002409f:	ret    
   1400240a0:	xor    al,al
   1400240a2:	add    rsp,0x20
   1400240a6:	pop    rbx
   1400240a7:	ret    
   1400240a8:	int3   
   1400240a9:	int3   
   1400240aa:	int3   
   1400240ab:	int3   
   1400240ac:	int3   
   1400240ad:	int3   
   1400240ae:	int3   
   1400240af:	int3   
   1400240b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400240b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400240ba:	push   rdi
   1400240bb:	sub    rsp,0x20
   1400240bf:	mov    rdi,rdx
   1400240c2:	mov    rsi,rcx
   1400240c5:	mov    rcx,rdi
   1400240c8:	lea    rdx,[rip+0x13b69]        # 0x140037c38
   1400240cf:	call   0x14001aae0
   1400240d4:	xor    bl,bl
   1400240d6:	cmp    BYTE PTR [rsi],bl
   1400240d8:	je     0x14002413e
   1400240da:	nop    WORD PTR [rax+rax*1+0x0]
   1400240e0:	movsx  edx,BYTE PTR [rsi]
   1400240e3:	mov    eax,edx
   1400240e5:	sub    eax,0x9
   1400240e8:	je     0x140024125
   1400240ea:	sub    eax,0x1
   1400240ed:	je     0x14002411c
   1400240ef:	sub    eax,0x16
   1400240f2:	je     0x140024110
   1400240f4:	sub    eax,0x2
   1400240f7:	je     0x140024107
   1400240f9:	cmp    eax,0x5
   1400240fc:	jne    0x140024112
   1400240fe:	lea    rdx,[rip+0x13ff3]        # 0x1400380f8
   140024105:	jmp    0x14002412c
   140024107:	lea    rdx,[rip+0x13fee]        # 0x1400380fc
   14002410e:	jmp    0x14002412c
   140024110:	mov    bl,0x1
   140024112:	mov    rcx,rdi
   140024115:	call   0x14001ab70
   14002411a:	jmp    0x140024136
   14002411c:	lea    rdx,[rip+0x13fcd]        # 0x1400380f0
   140024123:	jmp    0x14002412c
   140024125:	lea    rdx,[rip+0x13fc8]        # 0x1400380f4
   14002412c:	mov    rcx,rdi
   14002412f:	call   0x14001ac10
   140024134:	mov    bl,0x1
   140024136:	inc    rsi
   140024139:	cmp    BYTE PTR [rsi],0x0
   14002413c:	jne    0x1400240e0
   14002413e:	lea    rdx,[rip+0x13af3]        # 0x140037c38
   140024145:	mov    rcx,rdi
   140024148:	call   0x14001ac10
   14002414d:	mov    rsi,QWORD PTR [rsp+0x38]
   140024152:	movzx  eax,bl
   140024155:	mov    rbx,QWORD PTR [rsp+0x30]
   14002415a:	add    rsp,0x20
   14002415e:	pop    rdi
   14002415f:	ret    
   140024160:	mov    QWORD PTR [rsp+0x18],rbx
   140024165:	push   rbp
   140024166:	push   rsi
   140024167:	push   rdi
   140024168:	push   r14
   14002416a:	push   r15
   14002416c:	mov    rbp,rsp
   14002416f:	sub    rsp,0x30
   140024173:	mov    rdi,rdx
   140024176:	mov    r14,rcx
   140024179:	lea    rdx,[rip+0xe620]        # 0x1400327a0
   140024180:	mov    rcx,r8
   140024183:	mov    r15,r8
   140024186:	call   0x14001aae0
   14002418b:	test   r14,r14
   14002418e:	je     0x14002438a
   140024194:	test   rdi,rdi
   140024197:	je     0x14002438a
   14002419d:	mov    rax,rdi
   1400241a0:	sub    rax,r14
   1400241a3:	cmp    rax,0x6
   1400241a7:	jl     0x14002438a
   1400241ad:	mov    r8d,0x3
   1400241b3:	lea    rdx,[rip+0x1259a]        # 0x140036754
   1400241ba:	mov    rcx,r14
   1400241bd:	call   0x140022670
   1400241c2:	test   eax,eax
   1400241c4:	jne    0x14002438a
   1400241ca:	lea    rcx,[rdi-0x3]
   1400241ce:	lea    r8d,[rax+0x3]
   1400241d2:	lea    rdx,[rip+0x1257b]        # 0x140036754
   1400241d9:	call   0x140022670
   1400241de:	test   eax,eax
   1400241e0:	jne    0x14002438a
   1400241e6:	sub    edi,r14d
   1400241e9:	mov    QWORD PTR [rsp+0x68],r12
   1400241ee:	xor    r12d,r12d
   1400241f1:	lea    rdx,[r14+0x3]
   1400241f5:	lea    rcx,[rbp+0x30]
   1400241f9:	mov    QWORD PTR [rbp+0x30],r12
   1400241fd:	lea    r8d,[rdi-0x6]
   140024201:	call   0x14001b3d0
   140024206:	lea    r9,[rip+0x1012b]        # 0x140034338
   14002420d:	mov    BYTE PTR [rsp+0x20],r12b
   140024212:	lea    r8,[rip+0x13dcb]        # 0x140037fe4
   140024219:	lea    rdx,[rbp+0x48]
   14002421d:	lea    rcx,[rbp+0x30]
   140024221:	call   0x14001b1f0
   140024226:	mov    rbx,rax
   140024229:	mov    rdi,QWORD PTR [rax]
   14002422c:	cmp    QWORD PTR [rbp+0x30],r12
   140024230:	je     0x14002423b
   140024232:	lea    rcx,[rbp+0x30]
   140024236:	call   0x14001b030
   14002423b:	mov    QWORD PTR [rbp+0x30],rdi
   14002423f:	mov    QWORD PTR [rbx],r12
   140024242:	cmp    QWORD PTR [rbp+0x48],r12
   140024246:	je     0x140024251
   140024248:	lea    rcx,[rbp+0x48]
   14002424c:	call   0x14001b030
   140024251:	mov    rax,QWORD PTR [rbp+0x30]
   140024255:	test   rax,rax
   140024258:	je     0x14002431b
   14002425e:	or     rbx,0xffffffffffffffff
   140024262:	mov    rcx,rbx
   140024265:	inc    rcx
   140024268:	cmp    BYTE PTR [rax+rcx*1],r12b
   14002426c:	jne    0x140024265
   14002426e:	cmp    ecx,0x1
   140024271:	jl     0x1400242bb
   140024273:	mov    r9d,0x7fffffff
   140024279:	lea    rdx,[rbp+0x48]
   14002427d:	mov    r8d,0x1
   140024283:	lea    rcx,[rbp+0x30]
   140024287:	call   0x14001b530
   14002428c:	mov    rdi,rax
   14002428f:	mov    rsi,QWORD PTR [rax]
   140024292:	cmp    QWORD PTR [rbp+0x30],r12
   140024296:	je     0x1400242a1
   140024298:	lea    rcx,[rbp+0x30]
   14002429c:	call   0x14001b030
   1400242a1:	mov    QWORD PTR [rbp+0x30],rsi
   1400242a5:	mov    QWORD PTR [rdi],r12
   1400242a8:	cmp    QWORD PTR [rbp+0x48],r12
   1400242ac:	je     0x1400242b7
   1400242ae:	lea    rcx,[rbp+0x48]
   1400242b2:	call   0x14001b030
   1400242b7:	mov    rax,QWORD PTR [rbp+0x30]
   1400242bb:	test   rax,rax
   1400242be:	je     0x14002431b
   1400242c0:	mov    rcx,rbx
   1400242c3:	inc    rcx
   1400242c6:	cmp    BYTE PTR [rax+rcx*1],r12b
   1400242ca:	jne    0x1400242c3
   1400242cc:	cmp    ecx,0x1
   1400242cf:	jl     0x14002431b
   1400242d1:	cmp    BYTE PTR [rax+rbx*1+0x1],r12b
   1400242d6:	lea    rbx,[rbx+0x1]
   1400242da:	jne    0x1400242d1
   1400242dc:	lea    r9d,[rbx-0x1]
   1400242e0:	xor    r8d,r8d
   1400242e3:	lea    rdx,[rbp+0x48]
   1400242e7:	lea    rcx,[rbp+0x30]
   1400242eb:	call   0x14001b530
   1400242f0:	mov    rbx,rax
   1400242f3:	mov    rdi,QWORD PTR [rax]
   1400242f6:	cmp    QWORD PTR [rbp+0x30],r12
   1400242fa:	je     0x140024305
   1400242fc:	lea    rcx,[rbp+0x30]
   140024300:	call   0x14001b030
   140024305:	mov    QWORD PTR [rbp+0x30],rdi
   140024309:	mov    QWORD PTR [rbx],r12
   14002430c:	cmp    QWORD PTR [rbp+0x48],r12
   140024310:	je     0x14002431b
   140024312:	lea    rcx,[rbp+0x48]
   140024316:	call   0x14001b030
   14002431b:	lea    r9,[rip+0x12432]        # 0x140036754
   140024322:	mov    BYTE PTR [rsp+0x20],r12b
   140024327:	lea    r8,[rip+0x1241e]        # 0x14003674c
   14002432e:	lea    rdx,[rbp+0x48]
   140024332:	lea    rcx,[rbp+0x30]
   140024336:	call   0x14001b1f0
   14002433b:	mov    rbx,rax
   14002433e:	mov    rdi,QWORD PTR [rax]
   140024341:	cmp    QWORD PTR [r15],r12
   140024344:	je     0x14002434e
   140024346:	mov    rcx,r15
   140024349:	call   0x14001b030
   14002434e:	mov    QWORD PTR [r15],rdi
   140024351:	mov    QWORD PTR [rbx],r12
   140024354:	cmp    QWORD PTR [rbp+0x48],0x0
   140024359:	mov    r12,QWORD PTR [rsp+0x68]
   14002435e:	je     0x140024369
   140024360:	lea    rcx,[rbp+0x48]
   140024364:	call   0x14001b030
   140024369:	cmp    QWORD PTR [rbp+0x30],0x0
   14002436e:	je     0x1400243dd
   140024370:	lea    rcx,[rbp+0x30]
   140024374:	call   0x14001b030
   140024379:	mov    rbx,QWORD PTR [rsp+0x70]
   14002437e:	add    rsp,0x30
   140024382:	pop    r15
   140024384:	pop    r14
   140024386:	pop    rdi
   140024387:	pop    rsi
   140024388:	pop    rbp
   140024389:	ret    
   14002438a:	xor    sil,sil
   14002438d:	mov    rbx,r14
   140024390:	cmp    r14,rdi
   140024393:	je     0x1400243dd
   140024395:	movzx  edx,BYTE PTR [rbx]
   140024398:	cmp    rbx,r14
   14002439b:	je     0x1400243a6
   14002439d:	lea    rax,[rdi-0x1]
   1400243a1:	cmp    rbx,rax
   1400243a4:	jne    0x1400243ab
   1400243a6:	cmp    dl,0x22
   1400243a9:	je     0x1400243d5
   1400243ab:	test   sil,sil
   1400243ae:	jne    0x1400243ba
   1400243b0:	cmp    dl,0x5c
   1400243b3:	jne    0x1400243cd
   1400243b5:	mov    sil,0x1
   1400243b8:	jmp    0x1400243d5
   1400243ba:	cmp    dl,0x6e
   1400243bd:	je     0x1400243c8
   1400243bf:	cmp    dl,0x74
   1400243c2:	jne    0x1400243ca
   1400243c4:	mov    dl,0x9
   1400243c6:	jmp    0x1400243ca
   1400243c8:	mov    dl,0xa
   1400243ca:	xor    sil,sil
   1400243cd:	mov    rcx,r15
   1400243d0:	call   0x14001ab70
   1400243d5:	inc    rbx
   1400243d8:	cmp    rbx,rdi
   1400243db:	jne    0x140024395
   1400243dd:	mov    rbx,QWORD PTR [rsp+0x70]
   1400243e2:	add    rsp,0x30
   1400243e6:	pop    r15
   1400243e8:	pop    r14
   1400243ea:	pop    rdi
   1400243eb:	pop    rsi
   1400243ec:	pop    rbp
   1400243ed:	ret    
   1400243ee:	int3   
   1400243ef:	int3   
   1400243f0:	rex push rdi
   1400243f2:	push   r12
   1400243f4:	sub    rsp,0x28
   1400243f8:	mov    r12,r8
   1400243fb:	mov    rdi,rcx
   1400243fe:	cmp    edx,0x4
   140024401:	jae    0x14002440d
   140024403:	xor    eax,eax
   140024405:	add    rsp,0x28
   140024409:	pop    r12
   14002440b:	pop    rdi
   14002440c:	ret    
   14002440d:	movzx  ecx,BYTE PTR [rcx+0x3]
   140024411:	movzx  eax,BYTE PTR [rdi+0x2]
   140024415:	shl    ecx,0x8
   140024418:	or     ecx,eax
   14002441a:	mov    QWORD PTR [rsp+0x20],r15
   14002441f:	movzx  eax,BYTE PTR [rdi+0x1]
   140024423:	shl    ecx,0x8
   140024426:	or     ecx,eax
   140024428:	movzx  eax,BYTE PTR [rdi]
   14002442b:	shl    ecx,0x8
   14002442e:	or     ecx,eax
   140024430:	mov    r15d,ecx
   140024433:	btr    r15d,0x1f
   140024438:	cmp    r9d,r15d
   14002443b:	jb     0x140024470
   14002443d:	test   ecx,ecx
   14002443f:	jns    0x14002446b
   140024441:	mov    eax,edx
   140024443:	sub    rax,0x4
   140024447:	mov    r8d,r15d
   14002444a:	cmp    rax,r8
   14002444d:	jb     0x140024470
   14002444f:	lea    rdx,[rdi+0x4]
   140024453:	mov    rcx,r12
   140024456:	call   0x140026f70
   14002445b:	mov    eax,r15d
   14002445e:	mov    r15,QWORD PTR [rsp+0x20]
   140024463:	add    rsp,0x28
   140024467:	pop    r12
   140024469:	pop    rdi
   14002446a:	ret    
   14002446b:	cmp    edx,0x6
   14002446e:	jae    0x14002447f
   140024470:	xor    eax,eax
   140024472:	mov    r15,QWORD PTR [rsp+0x20]
   140024477:	add    rsp,0x28
   14002447b:	pop    r12
   14002447d:	pop    rdi
   14002447e:	ret    
   14002447f:	movzx  r9d,BYTE PTR [rdi+0x5]
   140024484:	lea    r8,[rdi+0x6]
   140024488:	movzx  eax,BYTE PTR [rdi+0x4]
   14002448c:	mov    QWORD PTR [rsp+0x40],rbx
   140024491:	mov    ebx,0x10
   140024496:	mov    QWORD PTR [rsp+0x48],rbp
   14002449b:	shl    r9w,0x8
   1400244a0:	mov    ebp,edx
   1400244a2:	or     r9w,ax
   1400244a6:	mov    QWORD PTR [rsp+0x50],rsi
   1400244ab:	add    rbp,rdi
   1400244ae:	mov    QWORD PTR [rsp+0x58],r14
   1400244b3:	mov    rdx,r12
   1400244b6:	mov    r14d,r15d
   1400244b9:	add    r14,r12
   1400244bc:	cmp    r12,r14
   1400244bf:	jae    0x1400245a5
   1400244c5:	test   ebx,ebx
   1400244c7:	jne    0x1400244ee
   1400244c9:	add    r8,0x2
   1400244cd:	cmp    r8,rbp
   1400244d0:	ja     0x1400245c9
   1400244d6:	movzx  r9d,BYTE PTR [r8-0x1]
   1400244db:	mov    ebx,0x10
   1400244e0:	movzx  eax,BYTE PTR [r8-0x2]
   1400244e5:	shl    r9w,0x8
   1400244ea:	or     r9w,ax
   1400244ee:	test   r9b,0x1
   1400244f2:	je     0x140024584
   1400244f8:	add    r8,0x2
   1400244fc:	cmp    r8,rbp
   1400244ff:	ja     0x1400245c9
   140024505:	movzx  eax,BYTE PTR [r8-0x2]
   14002450a:	mov    rdi,rdx
   14002450d:	movzx  r11d,BYTE PTR [r8-0x1]
   140024512:	shl    r11d,0x8
   140024516:	or     r11d,eax
   140024519:	mov    r10d,r11d
   14002451c:	shr    r11d,0x4
   140024520:	inc    r11d
   140024523:	and    r10d,0xf
   140024527:	mov    eax,r11d
   14002452a:	add    r10d,0x3
   14002452e:	sub    rdi,rax
   140024531:	cmp    rdi,r12
   140024534:	jb     0x1400245c9
   14002453a:	lea    rsi,[r10+rdx*1]
   14002453e:	mov    ecx,r10d
   140024541:	cmp    rsi,r14
   140024544:	ja     0x1400245c9
   14002454a:	cmp    r11d,0x1
   14002454e:	jne    0x140024562
   140024550:	movzx  eax,BYTE PTR [rdi]
   140024553:	test   r10d,r10d
   140024556:	je     0x14002455d
   140024558:	mov    rdi,rdx
   14002455b:	rep stos BYTE PTR es:[rdi],al
   14002455d:	mov    rdx,rsi
   140024560:	jmp    0x140024596
   140024562:	test   r10d,r10d
   140024565:	je     0x140024596
   140024567:	nop    WORD PTR [rax+rax*1+0x0]
   140024570:	movzx  eax,BYTE PTR [rdi]
   140024573:	lea    rdi,[rdi+0x1]
   140024577:	mov    BYTE PTR [rdx],al
   140024579:	inc    rdx
   14002457c:	sub    rcx,0x1
   140024580:	jne    0x140024570
   140024582:	jmp    0x140024596
   140024584:	inc    r8
   140024587:	cmp    r8,rbp
   14002458a:	ja     0x1400245c9
   14002458c:	movzx  eax,BYTE PTR [r8-0x1]
   140024591:	mov    BYTE PTR [rdx],al
   140024593:	inc    rdx
   140024596:	shr    r9w,1
   14002459a:	dec    ebx
   14002459c:	cmp    rdx,r14
   14002459f:	jb     0x1400244c5
   1400245a5:	mov    eax,r15d
   1400245a8:	mov    r14,QWORD PTR [rsp+0x58]
   1400245ad:	mov    rsi,QWORD PTR [rsp+0x50]
   1400245b2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400245b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400245bc:	mov    r15,QWORD PTR [rsp+0x20]
   1400245c1:	add    rsp,0x28
   1400245c5:	pop    r12
   1400245c7:	pop    rdi
   1400245c8:	ret    
   1400245c9:	xor    eax,eax
   1400245cb:	jmp    0x1400245a8
   1400245cd:	int3   
   1400245ce:	int3   
   1400245cf:	int3   
   1400245d0:	test   rcx,rcx
   1400245d3:	je     0x14002461d
   1400245d5:	mov    QWORD PTR [rsp+0x8],rbx
   1400245da:	push   rdi
   1400245db:	sub    rsp,0x20
   1400245df:	mov    rbx,rdx
   1400245e2:	mov    rdi,rcx
   1400245e5:	test   rdx,rdx
   1400245e8:	je     0x140024613
   1400245ea:	xor    edx,edx
   1400245ec:	mov    r8d,0x100
   1400245f2:	call   0x1400277b0
   1400245f7:	movzx  eax,BYTE PTR [rbx]
   1400245fa:	test   al,al
   1400245fc:	je     0x140024613
   1400245fe:	xchg   ax,ax
   140024600:	movsx  rax,al
   140024604:	lea    rbx,[rbx+0x1]
   140024608:	mov    BYTE PTR [rax+rdi*1],0x1
   14002460c:	movzx  eax,BYTE PTR [rbx]
   14002460f:	test   al,al
   140024611:	jne    0x140024600
   140024613:	mov    rbx,QWORD PTR [rsp+0x30]
   140024618:	add    rsp,0x20
   14002461c:	pop    rdi
   14002461d:	ret    
   14002461e:	int3   
   14002461f:	int3   
   140024620:	mov    QWORD PTR [rcx],0x0
   140024627:	mov    rax,rcx
   14002462a:	ret    
   14002462b:	int3   
   14002462c:	int3   
   14002462d:	int3   
   14002462e:	int3   
   14002462f:	int3   
   140024630:	rex push rbx
   140024632:	sub    rsp,0x20
   140024636:	mov    rdx,QWORD PTR [rcx]
   140024639:	mov    rbx,rcx
   14002463c:	test   rdx,rdx
   14002463f:	je     0x140024669
   140024641:	call   0x1400249b0
   140024646:	mov    rdx,QWORD PTR [rbx]
   140024649:	mov    rcx,rbx
   14002464c:	add    rdx,0x8
   140024650:	call   0x1400249b0
   140024655:	mov    rcx,QWORD PTR [rbx]
   140024658:	mov    edx,0x18
   14002465d:	call   0x14002639c
   140024662:	mov    QWORD PTR [rbx],0x0
   140024669:	add    rsp,0x20
   14002466d:	pop    rbx
   14002466e:	ret    
   14002466f:	int3   
   140024670:	mov    rdx,rcx
   140024673:	lea    rcx,[rip+0x13b56]        # 0x1400381d0
   14002467a:	rex.W jmp QWORD PTR [rip+0xdd2f]        # 0x1400323b0
   140024681:	int3   
   140024682:	int3   
   140024683:	int3   
   140024684:	int3   
   140024685:	int3   
   140024686:	int3   
   140024687:	int3   
   140024688:	int3   
   140024689:	int3   
   14002468a:	int3   
   14002468b:	int3   
   14002468c:	int3   
   14002468d:	int3   
   14002468e:	int3   
   14002468f:	int3   
   140024690:	rex push rbx
   140024692:	sub    rsp,0x20
   140024696:	cmp    BYTE PTR [rcx],0x24
   140024699:	lea    rbx,[rcx+0x1]
   14002469d:	lea    rdx,[rip+0x13ac4]        # 0x140038168
   1400246a4:	cmovne rbx,rcx
   1400246a8:	mov    rcx,rbx
   1400246ab:	call   QWORD PTR [rip+0xdeaf]        # 0x140032560
   1400246b1:	test   eax,eax
   1400246b3:	jne    0x1400246bd
   1400246b5:	mov    al,0x1
   1400246b7:	add    rsp,0x20
   1400246bb:	pop    rbx
   1400246bc:	ret    
   1400246bd:	lea    rdx,[rip+0x13aac]        # 0x140038170
   1400246c4:	mov    rcx,rbx
   1400246c7:	call   QWORD PTR [rip+0xde93]        # 0x140032560
   1400246cd:	test   eax,eax
   1400246cf:	je     0x1400246b5
   1400246d1:	lea    rdx,[rip+0x13aa0]        # 0x140038178
   1400246d8:	mov    rcx,rbx
   1400246db:	call   QWORD PTR [rip+0xde7f]        # 0x140032560
   1400246e1:	test   eax,eax
   1400246e3:	jne    0x1400246ed
   1400246e5:	xor    al,al
   1400246e7:	add    rsp,0x20
   1400246eb:	pop    rbx
   1400246ec:	ret    
   1400246ed:	lea    rdx,[rip+0x13a8c]        # 0x140038180
   1400246f4:	mov    rcx,rbx
   1400246f7:	call   QWORD PTR [rip+0xde63]        # 0x140032560
   1400246fd:	test   eax,eax
   1400246ff:	je     0x1400246e5
   140024701:	lea    rdx,[rip+0x13a7c]        # 0x140038184
   140024708:	mov    rcx,rbx
   14002470b:	call   QWORD PTR [rip+0xde4f]        # 0x140032560
   140024711:	test   eax,eax
   140024713:	je     0x1400246e5
   140024715:	lea    rdx,[rip+0x13a6c]        # 0x140038188
   14002471c:	mov    rcx,rbx
   14002471f:	call   QWORD PTR [rip+0xde3b]        # 0x140032560
   140024725:	test   eax,eax
   140024727:	je     0x1400246e5
   140024729:	lea    rdx,[rip+0x13a60]        # 0x140038190
   140024730:	mov    rcx,rbx
   140024733:	call   QWORD PTR [rip+0xde27]        # 0x140032560
   140024739:	test   eax,eax
   14002473b:	je     0x1400246e5
   14002473d:	lea    rdx,[rip+0x13a54]        # 0x140038198
   140024744:	mov    rcx,rbx
   140024747:	call   QWORD PTR [rip+0xde13]        # 0x140032560
   14002474d:	test   eax,eax
   14002474f:	jne    0x140024763
   140024751:	call   QWORD PTR [rip+0xdce1]        # 0x140032438
   140024757:	cmp    eax,0x7
   14002475a:	sete   al
   14002475d:	add    rsp,0x20
   140024761:	pop    rbx
   140024762:	ret    
   140024763:	lea    rdx,[rip+0x13a36]        # 0x1400381a0
   14002476a:	mov    rcx,rbx
   14002476d:	call   QWORD PTR [rip+0xdded]        # 0x140032560
   140024773:	test   eax,eax
   140024775:	je     0x1400246e5
   14002477b:	lea    rdx,[rip+0x13a2a]        # 0x1400381ac
   140024782:	mov    rcx,rbx
   140024785:	call   QWORD PTR [rip+0xddd5]        # 0x140032560
   14002478b:	test   eax,eax
   14002478d:	je     0x1400246e5
   140024793:	lea    rdx,[rip+0x13a1e]        # 0x1400381b8
   14002479a:	mov    rcx,rbx
   14002479d:	call   QWORD PTR [rip+0xddbd]        # 0x140032560
   1400247a3:	lea    rdx,[rip+0x13a1e]        # 0x1400381c8
   1400247aa:	mov    rcx,rbx
   1400247ad:	call   QWORD PTR [rip+0xddad]        # 0x140032560
   1400247b3:	test   eax,eax
   1400247b5:	jne    0x1400247c3
   1400247b7:	add    rsp,0x20
   1400247bb:	pop    rbx
   1400247bc:	rex.W jmp QWORD PTR [rip+0xdc7d]        # 0x140032440
   1400247c3:	call   QWORD PTR [rip+0xdc2f]        # 0x1400323f8
   1400247c9:	mov    rdx,rbx
   1400247cc:	mov    rcx,rax
   1400247cf:	mov    r8,QWORD PTR [rax]
   1400247d2:	add    rsp,0x20
   1400247d6:	pop    rbx
   1400247d7:	rex.WB jmp QWORD PTR [r8+0x38]
   1400247db:	int3   
   1400247dc:	int3   
   1400247dd:	int3   
   1400247de:	int3   
   1400247df:	int3   
   1400247e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400247e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400247ea:	push   r14
   1400247ec:	sub    rsp,0x330
   1400247f3:	mov    rsi,r8
   1400247f6:	mov    r14,rdx
   1400247f9:	mov    rbx,rcx
   1400247fc:	test   r8,r8
   1400247ff:	jne    0x140024808
   140024801:	xor    al,al
   140024803:	jmp    0x140024995
   140024808:	test   r9,r9
   14002480b:	mov    QWORD PTR [rsp+0x348],rdi
   140024813:	lea    rax,[rip+0xfffffffffffffe76]        # 0x140024690
   14002481a:	cmovne rax,r9
   14002481e:	mov    QWORD PTR [rcx+0xa0],rax
   140024825:	lea    rcx,[rip+0xfffffffffffffe44]        # 0x140024670
   14002482c:	mov    rax,QWORD PTR [rsp+0x360]
   140024834:	test   rax,rax
   140024837:	cmovne rcx,rax
   14002483b:	mov    QWORD PTR [rbx+0xa8],rcx
   140024842:	cmp    BYTE PTR [r8],0x5b
   140024846:	jne    0x1400248e7
   14002484c:	or     rdi,0xffffffffffffffff
   140024850:	inc    rdi
   140024853:	cmp    BYTE PTR [r8+rdi*1],0x0
   140024858:	jne    0x140024850
   14002485a:	lea    eax,[rdi+0x1]
   14002485d:	cmp    eax,0x200
   140024862:	ja     0x1400248db
   140024864:	lea    rdx,[r8+0x1]
   140024868:	mov    r8d,edi
   14002486b:	lea    rcx,[rsp+0x20]
   140024870:	call   QWORD PTR [rip+0xdce2]        # 0x140032558
   140024876:	dec    edi
   140024878:	lea    eax,[rdi-0x1]
   14002487b:	movsxd rcx,eax
   14002487e:	cmp    BYTE PTR [rsp+rcx*1+0x20],0x5d
   140024883:	jne    0x14002488a
   140024885:	mov    BYTE PTR [rsp+rcx*1+0x20],0x0
   14002488a:	cmp    QWORD PTR [rbx+0xa8],0x0
   140024892:	je     0x1400248e2
   140024894:	mov    edx,0x5b
   140024899:	lea    rcx,[rsp+0x20]
   14002489e:	call   0x140027a28
   1400248a3:	test   rax,rax
   1400248a6:	jne    0x1400248ba
   1400248a8:	lea    edx,[rax+0x5d]
   1400248ab:	lea    rcx,[rsp+0x20]
   1400248b0:	call   0x140027a28
   1400248b5:	test   rax,rax
   1400248b8:	je     0x1400248e2
   1400248ba:	mov    r8,rsi
   1400248bd:	lea    rdx,[rip+0x1399c]        # 0x140038260
   1400248c4:	lea    rcx,[rsp+0x220]
   1400248cc:	call   0x140001600
   1400248d1:	lea    rcx,[rax+0x9]
   1400248d5:	call   QWORD PTR [rbx+0xa8]
   1400248db:	xor    al,al
   1400248dd:	jmp    0x14002498d
   1400248e2:	lea    rsi,[rsp+0x20]
   1400248e7:	mov    QWORD PTR [rsp+0x340],rbp
   1400248ef:	xor    ebp,ebp
   1400248f1:	mov    QWORD PTR [rbx],rbp
   1400248f4:	mov    DWORD PTR [rbx+0x18],ebp
   1400248f7:	mov    BYTE PTR [rbx+0x8],bpl
   1400248fb:	mov    QWORD PTR [rbx+0x10],rsi
   1400248ff:	cmp    BYTE PTR [rsi],0x20
   140024902:	jne    0x14002491e
   140024904:	mov    ecx,ebp
   140024906:	data16 nop WORD PTR [rax+rax*1+0x0]
   140024910:	inc    ecx
   140024912:	movsxd rax,ecx
   140024915:	mov    DWORD PTR [rbx+0x18],ecx
   140024918:	cmp    BYTE PTR [rax+rsi*1],0x20
   14002491c:	je     0x140024910
   14002491e:	movsxd rdx,DWORD PTR [rbx+0x18]
   140024922:	movzx  ecx,BYTE PTR [rdx+rsi*1]
   140024926:	lea    eax,[rdx+0x1]
   140024929:	mov    BYTE PTR [rbx+0x8],cl
   14002492c:	mov    rdx,rbx
   14002492f:	mov    rcx,rbx
   140024932:	mov    DWORD PTR [rbx+0x18],eax
   140024935:	call   0x140024ac0
   14002493a:	movzx  edi,al
   14002493d:	test   al,al
   14002493f:	je     0x14002494f
   140024941:	mov    rdx,rbx
   140024944:	mov    rcx,rbx
   140024947:	call   0x140024e40
   14002494c:	mov    BYTE PTR [r14],al
   14002494f:	mov    rdx,QWORD PTR [rbx]
   140024952:	test   rdx,rdx
   140024955:	je     0x14002497e
   140024957:	mov    rcx,rbx
   14002495a:	call   0x1400249b0
   14002495f:	mov    rdx,QWORD PTR [rbx]
   140024962:	mov    rcx,rbx
   140024965:	add    rdx,0x8
   140024969:	call   0x1400249b0
   14002496e:	mov    rcx,QWORD PTR [rbx]
   140024971:	mov    edx,0x18
   140024976:	call   0x14002639c
   14002497b:	mov    QWORD PTR [rbx],rbp
   14002497e:	mov    QWORD PTR [rbx],rbp
   140024981:	movzx  eax,dil
   140024985:	mov    rbp,QWORD PTR [rsp+0x340]
   14002498d:	mov    rdi,QWORD PTR [rsp+0x348]
   140024995:	lea    r11,[rsp+0x330]
   14002499d:	mov    rbx,QWORD PTR [r11+0x20]
   1400249a1:	mov    rsi,QWORD PTR [r11+0x28]
   1400249a5:	mov    rsp,r11
   1400249a8:	pop    r14
   1400249aa:	ret    
   1400249ab:	int3   
   1400249ac:	int3   
   1400249ad:	int3   
   1400249ae:	int3   
   1400249af:	int3   
   1400249b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400249b5:	push   rdi
   1400249b6:	sub    rsp,0x20
   1400249ba:	mov    rbx,rdx
   1400249bd:	mov    rdi,rcx
   1400249c0:	mov    rdx,QWORD PTR [rdx]
   1400249c3:	test   rdx,rdx
   1400249c6:	je     0x1400249f0
   1400249c8:	call   0x1400249b0
   1400249cd:	mov    rdx,QWORD PTR [rbx]
   1400249d0:	mov    rcx,rdi
   1400249d3:	add    rdx,0x8
   1400249d7:	call   0x1400249b0
   1400249dc:	mov    rcx,QWORD PTR [rbx]
   1400249df:	mov    edx,0x18
   1400249e4:	call   0x14002639c
   1400249e9:	mov    QWORD PTR [rbx],0x0
   1400249f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400249f5:	add    rsp,0x20
   1400249f9:	pop    rdi
   1400249fa:	ret    
   1400249fb:	int3   
   1400249fc:	int3   
   1400249fd:	int3   
   1400249fe:	int3   
   1400249ff:	int3   
   140024a00:	mov    r8,rcx
   140024a03:	cmp    dl,0x24
   140024a06:	jne    0x140024a57
   140024a08:	mov    BYTE PTR [rcx+0x1c],dl
   140024a0b:	mov    edx,0x1
   140024a10:	mov    r10d,edx
   140024a13:	mov    rax,QWORD PTR [r8+0x10]
   140024a17:	movsxd rcx,DWORD PTR [r8+0x18]
   140024a1b:	movzx  r9d,BYTE PTR [rcx+rax*1]
   140024a20:	lea    eax,[r9-0x41]
   140024a24:	cmp    al,0x19
   140024a26:	jbe    0x140024a3e
   140024a28:	lea    eax,[r9-0x61]
   140024a2c:	cmp    al,0x19
   140024a2e:	jbe    0x140024a3e
   140024a30:	lea    eax,[r9-0x30]
   140024a34:	cmp    al,0x9
   140024a36:	jbe    0x140024a3e
   140024a38:	cmp    r9b,0x5f
   140024a3c:	jne    0x140024a9e
   140024a3e:	cmp    r10,0x80
   140024a45:	jge    0x140024a9e
   140024a47:	mov    BYTE PTR [r8+r10*1+0x1c],r9b
   140024a4c:	inc    edx
   140024a4e:	inc    DWORD PTR [r8+0x18]
   140024a52:	inc    r10
   140024a55:	jmp    0x140024a13
   140024a57:	lea    eax,[rdx-0x30]
   140024a5a:	cmp    al,0x9
   140024a5c:	ja     0x140024aaf
   140024a5e:	mov    BYTE PTR [rcx+0x1c],dl
   140024a61:	mov    edx,0x1
   140024a66:	mov    r9d,edx
   140024a69:	nop    DWORD PTR [rax+0x0]
   140024a70:	mov    rax,QWORD PTR [r8+0x10]
   140024a74:	movsxd rcx,DWORD PTR [r8+0x18]
   140024a78:	movzx  r10d,BYTE PTR [rcx+rax*1]
   140024a7d:	lea    eax,[r10-0x30]
   140024a81:	cmp    al,0x9
   140024a83:	ja     0x140024a9e
   140024a85:	cmp    r9,0x80
   140024a8c:	jge    0x140024a9e
   140024a8e:	mov    BYTE PTR [r8+r9*1+0x1c],r10b
   140024a93:	inc    edx
   140024a95:	inc    DWORD PTR [r8+0x18]
   140024a99:	inc    r9
   140024a9c:	jmp    0x140024a70
   140024a9e:	cmp    edx,0x7f
   140024aa1:	jge    0x140024aaf
   140024aa3:	movsxd rax,edx
   140024aa6:	mov    BYTE PTR [rax+r8*1+0x1c],0x0
   140024aac:	mov    al,0x1
   140024aae:	ret    
   140024aaf:	xor    al,al
   140024ab1:	ret    
   140024ab2:	int3   
   140024ab3:	int3   
   140024ab4:	int3   
   140024ab5:	int3   
   140024ab6:	int3   
   140024ab7:	int3   
   140024ab8:	int3   
   140024ab9:	int3   
   140024aba:	int3   
   140024abb:	int3   
   140024abc:	int3   
   140024abd:	int3   
   140024abe:	int3   
   140024abf:	int3   
   140024ac0:	rex push rdi
   140024ac2:	push   r14
   140024ac4:	sub    rsp,0x138
   140024acb:	mov    r14,rdx
   140024ace:	mov    rdi,rcx
   140024ad1:	call   0x140024d80
   140024ad6:	test   al,al
   140024ad8:	jne    0x140024ae5
   140024ada:	add    rsp,0x138
   140024ae1:	pop    r14
   140024ae3:	pop    rdi
   140024ae4:	ret    
   140024ae5:	mov    QWORD PTR [rsp+0x158],rbp
   140024aed:	movzx  ebp,BYTE PTR [rsp+0x160]
   140024af5:	mov    QWORD PTR [rsp+0x168],rsi
   140024afd:	mov    QWORD PTR [rsp+0x130],r15
   140024b05:	xor    r15d,r15d
   140024b08:	mov    QWORD PTR [rsp+0x150],rbx
   140024b10:	movzx  esi,BYTE PTR [rdi+0x8]
   140024b14:	cmp    sil,0x7c
   140024b18:	je     0x140024b24
   140024b1a:	cmp    sil,0x26
   140024b1e:	jne    0x140024bca
   140024b24:	movsxd rdx,DWORD PTR [rdi+0x18]
   140024b28:	mov    rax,QWORD PTR [rdi+0x10]
   140024b2c:	movzx  r8d,BYTE PTR [rdx+rax*1]
   140024b31:	lea    eax,[rdx+0x1]
   140024b34:	mov    DWORD PTR [rdi+0x18],eax
   140024b37:	movzx  eax,r8b
   140024b3b:	and    al,sil
   140024b3e:	cmp    al,sil
   140024b41:	jne    0x140024b48
   140024b43:	mov    bpl,0x1
   140024b46:	jmp    0x140024b56
   140024b48:	cmp    QWORD PTR [rdi+0xa8],r15
   140024b4f:	jne    0x140024bce
   140024b51:	test   bpl,bpl
   140024b54:	je     0x140024bca
   140024b56:	mov    rbx,QWORD PTR [r14]
   140024b59:	mov    ecx,0x18
   140024b5e:	call   0x140007bf0
   140024b63:	mov    QWORD PTR [r14],rax
   140024b66:	mov    QWORD PTR [rax],rbx
   140024b69:	mov    rax,QWORD PTR [r14]
   140024b6c:	mov    QWORD PTR [rax+0x8],r15
   140024b70:	mov    rax,QWORD PTR [r14]
   140024b73:	mov    DWORD PTR [rax+0x10],r15d
   140024b77:	mov    rax,QWORD PTR [r14]
   140024b7a:	mov    BYTE PTR [rax+0x14],sil
   140024b7e:	movsxd rax,DWORD PTR [rdi+0x18]
   140024b82:	mov    r8,QWORD PTR [rdi+0x10]
   140024b86:	cmp    BYTE PTR [rax+r8*1],0x20
   140024b8b:	jne    0x140024b9f
   140024b8d:	nop    DWORD PTR [rax]
   140024b90:	inc    eax
   140024b92:	movsxd rcx,eax
   140024b95:	mov    DWORD PTR [rdi+0x18],eax
   140024b98:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024b9d:	je     0x140024b90
   140024b9f:	movsxd rdx,DWORD PTR [rdi+0x18]
   140024ba3:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024ba8:	lea    eax,[rdx+0x1]
   140024bab:	mov    BYTE PTR [rdi+0x8],cl
   140024bae:	mov    rcx,rdi
   140024bb1:	mov    DWORD PTR [rdi+0x18],eax
   140024bb4:	mov    rdx,QWORD PTR [r14]
   140024bb7:	add    rdx,0x8
   140024bbb:	call   0x140024d80
   140024bc0:	test   al,al
   140024bc2:	jne    0x140024b10
   140024bc8:	jmp    0x140024bf1
   140024bca:	mov    al,0x1
   140024bcc:	jmp    0x140024bf3
   140024bce:	movsx  r9d,r8b
   140024bd2:	lea    rdx,[rip+0x13617]        # 0x1400381f0
   140024bd9:	movsx  r8d,sil
   140024bdd:	lea    rcx,[rsp+0x20]
   140024be2:	call   0x140001600
   140024be7:	lea    rcx,[rax+0x9]
   140024beb:	call   QWORD PTR [rdi+0xa8]
   140024bf1:	xor    al,al
   140024bf3:	mov    rbx,QWORD PTR [rsp+0x150]
   140024bfb:	mov    rbp,QWORD PTR [rsp+0x158]
   140024c03:	mov    rsi,QWORD PTR [rsp+0x168]
   140024c0b:	mov    r15,QWORD PTR [rsp+0x130]
   140024c13:	add    rsp,0x138
   140024c1a:	pop    r14
   140024c1c:	pop    rdi
   140024c1d:	ret    
   140024c1e:	int3   
   140024c1f:	int3   
   140024c20:	mov    QWORD PTR [rsp+0x8],rbx
   140024c25:	push   rdi
   140024c26:	sub    rsp,0x130
   140024c2d:	mov    rdi,rdx
   140024c30:	mov    rbx,rcx
   140024c33:	movzx  edx,BYTE PTR [rcx+0x8]
   140024c37:	cmp    dl,0x28
   140024c3a:	jne    0x140024c91
   140024c3c:	movsxd rcx,DWORD PTR [rcx+0x18]
   140024c40:	mov    r8,QWORD PTR [rbx+0x10]
   140024c44:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024c49:	jne    0x140024c5f
   140024c4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140024c50:	inc    ecx
   140024c52:	movsxd rax,ecx
   140024c55:	mov    DWORD PTR [rbx+0x18],ecx
   140024c58:	cmp    BYTE PTR [rax+r8*1],0x20
   140024c5d:	je     0x140024c50
   140024c5f:	movsxd rdx,DWORD PTR [rbx+0x18]
   140024c63:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024c68:	lea    eax,[rdx+0x1]
   140024c6b:	mov    BYTE PTR [rbx+0x8],cl
   140024c6e:	mov    rdx,rdi
   140024c71:	mov    rcx,rbx
   140024c74:	mov    DWORD PTR [rbx+0x18],eax
   140024c77:	call   0x140024ac0
   140024c7c:	test   al,al
   140024c7e:	jne    0x140024ced
   140024c80:	mov    rbx,QWORD PTR [rsp+0x140]
   140024c88:	add    rsp,0x130
   140024c8f:	pop    rdi
   140024c90:	ret    
   140024c91:	call   0x140024a00
   140024c96:	test   al,al
   140024c98:	je     0x140024d34
   140024c9e:	mov    ecx,0x18
   140024ca3:	call   0x140007bf0
   140024ca8:	mov    QWORD PTR [rdi],rax
   140024cab:	xor    ecx,ecx
   140024cad:	mov    QWORD PTR [rax],rcx
   140024cb0:	mov    rax,QWORD PTR [rdi]
   140024cb3:	mov    QWORD PTR [rax+0x8],rcx
   140024cb7:	lea    rcx,[rbx+0x1c]
   140024cbb:	mov    rax,QWORD PTR [rdi]
   140024cbe:	mov    DWORD PTR [rax+0x10],0x2
   140024cc5:	movzx  eax,BYTE PTR [rcx]
   140024cc8:	sub    al,0x30
   140024cca:	cmp    al,0x9
   140024ccc:	ja     0x140024ce1
   140024cce:	call   QWORD PTR [rip+0xd5c4]        # 0x140032298
   140024cd4:	test   eax,eax
   140024cd6:	mov    rax,QWORD PTR [rdi]
   140024cd9:	setne  cl
   140024cdc:	mov    BYTE PTR [rax+0x14],cl
   140024cdf:	jmp    0x140024ced
   140024ce1:	call   QWORD PTR [rbx+0xa0]
   140024ce7:	mov    rcx,QWORD PTR [rdi]
   140024cea:	mov    BYTE PTR [rcx+0x14],al
   140024ced:	movsxd rcx,DWORD PTR [rbx+0x18]
   140024cf1:	mov    r8,QWORD PTR [rbx+0x10]
   140024cf5:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024cfa:	jne    0x140024d0f
   140024cfc:	nop    DWORD PTR [rax+0x0]
   140024d00:	inc    ecx
   140024d02:	movsxd rax,ecx
   140024d05:	mov    DWORD PTR [rbx+0x18],ecx
   140024d08:	cmp    BYTE PTR [rax+r8*1],0x20
   140024d0d:	je     0x140024d00
   140024d0f:	movsxd rdx,DWORD PTR [rbx+0x18]
   140024d13:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024d18:	lea    eax,[rdx+0x1]
   140024d1b:	mov    BYTE PTR [rbx+0x8],cl
   140024d1e:	mov    DWORD PTR [rbx+0x18],eax
   140024d21:	mov    al,0x1
   140024d23:	mov    rbx,QWORD PTR [rsp+0x140]
   140024d2b:	add    rsp,0x130
   140024d32:	pop    rdi
   140024d33:	ret    
   140024d34:	movzx  eax,BYTE PTR [rbx+0x8]
   140024d38:	cmp    al,0x21
   140024d3a:	je     0x140024d21
   140024d3c:	cmp    QWORD PTR [rbx+0xa8],0x0
   140024d44:	je     0x140024d65
   140024d46:	movsx  r8d,al
   140024d4a:	lea    rdx,[rip+0x134ef]        # 0x140038240
   140024d51:	lea    rcx,[rsp+0x20]
   140024d56:	call   0x140001600
   140024d5b:	lea    rcx,[rax+0x9]
   140024d5f:	call   QWORD PTR [rbx+0xa8]
   140024d65:	xor    al,al
   140024d67:	mov    rbx,QWORD PTR [rsp+0x140]
   140024d6f:	add    rsp,0x130
   140024d76:	pop    rdi
   140024d77:	ret    
   140024d78:	int3   
   140024d79:	int3   
   140024d7a:	int3   
   140024d7b:	int3   
   140024d7c:	int3   
   140024d7d:	int3   
   140024d7e:	int3   
   140024d7f:	int3   
   140024d80:	mov    QWORD PTR [rsp+0x18],rsi
   140024d85:	push   rdi
   140024d86:	sub    rsp,0x20
   140024d8a:	mov    rsi,rdx
   140024d8d:	mov    rdi,rcx
   140024d90:	call   0x140024c20
   140024d95:	test   al,al
   140024d97:	jne    0x140024da4
   140024d99:	mov    rsi,QWORD PTR [rsp+0x40]
   140024d9e:	add    rsp,0x20
   140024da2:	pop    rdi
   140024da3:	ret    
   140024da4:	mov    QWORD PTR [rsp+0x38],rbp
   140024da9:	xor    ebp,ebp
   140024dab:	mov    QWORD PTR [rsp+0x30],rbx
   140024db0:	cmp    BYTE PTR [rdi+0x8],0x21
   140024db4:	jne    0x140024e26
   140024db6:	mov    rbx,QWORD PTR [rsi]
   140024db9:	mov    ecx,0x18
   140024dbe:	call   0x140007bf0
   140024dc3:	mov    QWORD PTR [rsi],rax
   140024dc6:	mov    QWORD PTR [rax],rbx
   140024dc9:	mov    rax,QWORD PTR [rsi]
   140024dcc:	mov    QWORD PTR [rax+0x8],rbp
   140024dd0:	mov    rax,QWORD PTR [rsi]
   140024dd3:	mov    DWORD PTR [rax+0x10],0x1
   140024dda:	movsxd rax,DWORD PTR [rdi+0x18]
   140024dde:	mov    r8,QWORD PTR [rdi+0x10]
   140024de2:	cmp    BYTE PTR [rax+r8*1],0x20
   140024de7:	jne    0x140024dff
   140024de9:	nop    DWORD PTR [rax+0x0]
   140024df0:	inc    eax
   140024df2:	movsxd rcx,eax
   140024df5:	mov    DWORD PTR [rdi+0x18],eax
   140024df8:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024dfd:	je     0x140024df0
   140024dff:	movsxd rdx,DWORD PTR [rdi+0x18]
   140024e03:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024e08:	lea    eax,[rdx+0x1]
   140024e0b:	mov    BYTE PTR [rdi+0x8],cl
   140024e0e:	mov    rcx,rdi
   140024e11:	mov    DWORD PTR [rdi+0x18],eax
   140024e14:	mov    rdx,QWORD PTR [rsi]
   140024e17:	add    rdx,0x8
   140024e1b:	call   0x140024c20
   140024e20:	test   al,al
   140024e22:	jne    0x140024db0
   140024e24:	jmp    0x140024e28
   140024e26:	mov    al,0x1
   140024e28:	mov    rbx,QWORD PTR [rsp+0x30]
   140024e2d:	mov    rbp,QWORD PTR [rsp+0x38]
   140024e32:	mov    rsi,QWORD PTR [rsp+0x40]
   140024e37:	add    rsp,0x20
   140024e3b:	pop    rdi
   140024e3c:	ret    
   140024e3d:	int3   
   140024e3e:	int3   
   140024e3f:	int3   
   140024e40:	mov    QWORD PTR [rsp+0x10],rbx
   140024e45:	push   rsi
   140024e46:	sub    rsp,0x20
   140024e4a:	mov    rbx,rdx
   140024e4d:	mov    rsi,rcx
   140024e50:	mov    rdx,QWORD PTR [rdx]
   140024e53:	test   rdx,rdx
   140024e56:	jne    0x140024e65
   140024e58:	xor    al,al
   140024e5a:	mov    rbx,QWORD PTR [rsp+0x38]
   140024e5f:	add    rsp,0x20
   140024e63:	pop    rsi
   140024e64:	ret    
   140024e65:	mov    QWORD PTR [rsp+0x30],rdi
   140024e6a:	call   0x140024e40
   140024e6f:	mov    rdx,QWORD PTR [rbx]
   140024e72:	mov    rcx,rsi
   140024e75:	add    rdx,0x8
   140024e79:	movzx  edi,al
   140024e7c:	call   0x140024e40
   140024e81:	mov    rdx,QWORD PTR [rbx]
   140024e84:	mov    r8d,DWORD PTR [rdx+0x10]
   140024e88:	test   r8d,r8d
   140024e8b:	je     0x140024e9a
   140024e8d:	cmp    r8d,0x1
   140024e91:	jne    0x140024eb1
   140024e93:	test   al,al
   140024e95:	sete   al
   140024e98:	jmp    0x140024eae
   140024e9a:	cmp    BYTE PTR [rdx+0x14],0x26
   140024e9e:	jne    0x140024ed2
   140024ea0:	test   dil,dil
   140024ea3:	je     0x140024edb
   140024ea5:	test   al,al
   140024ea7:	je     0x140024edb
   140024ea9:	mov    eax,0x1
   140024eae:	mov    BYTE PTR [rdx+0x14],al
   140024eb1:	mov    rax,QWORD PTR [rbx]
   140024eb4:	mov    rdi,QWORD PTR [rsp+0x30]
   140024eb9:	mov    DWORD PTR [rax+0x10],0x2
   140024ec0:	mov    rax,QWORD PTR [rbx]
   140024ec3:	mov    rbx,QWORD PTR [rsp+0x38]
   140024ec8:	movzx  eax,BYTE PTR [rax+0x14]
   140024ecc:	add    rsp,0x20
   140024ed0:	pop    rsi
   140024ed1:	ret    
   140024ed2:	test   dil,dil
   140024ed5:	jne    0x140024ea9
   140024ed7:	test   al,al
   140024ed9:	jne    0x140024ea9
   140024edb:	xor    eax,eax
   140024edd:	jmp    0x140024eae
   140024edf:	int3   
   140024ee0:	sub    rsp,0x28
   140024ee4:	mov    rcx,QWORD PTR [rip+0x222cd]        # 0x1400471b8
   140024eeb:	test   rcx,rcx
   140024eee:	je     0x140024f09
   140024ef0:	mov    rax,QWORD PTR [rcx]
   140024ef3:	call   QWORD PTR [rax+0xa8]
   140024ef9:	test   al,al
   140024efb:	je     0x140024f09
   140024efd:	call   0x1400262b0
   140024f02:	xor    eax,eax
   140024f04:	add    rsp,0x28
   140024f08:	ret    
   140024f09:	mov    eax,0x1
   140024f0e:	add    rsp,0x28
   140024f12:	ret    
   140024f13:	int3   
   140024f14:	int3   
   140024f15:	int3   
   140024f16:	int3   
   140024f17:	int3   
   140024f18:	int3   
   140024f19:	int3   
   140024f1a:	int3   
   140024f1b:	int3   
   140024f1c:	int3   
   140024f1d:	int3   
   140024f1e:	int3   
   140024f1f:	int3   
   140024f20:	sub    rsp,0x28
   140024f24:	mov    rcx,QWORD PTR [rip+0x222ad]        # 0x1400471d8
   140024f2b:	test   rcx,rcx
   140024f2e:	je     0x140024f51
   140024f30:	cmp    BYTE PTR [rip+0x23371],0x0        # 0x1400482a8
   140024f37:	jne    0x140024f4c
   140024f39:	mov    rax,QWORD PTR [rcx]
   140024f3c:	lea    rdx,[rip+0x2333d]        # 0x140048280
   140024f43:	call   QWORD PTR [rax]
   140024f45:	mov    BYTE PTR [rip+0x2335c],0x1        # 0x1400482a8
   140024f4c:	call   0x1400261b0
   140024f51:	inc    DWORD PTR [rip+0x23355]        # 0x1400482ac
   140024f57:	add    rsp,0x28
   140024f5b:	ret    
   140024f5c:	int3   
   140024f5d:	int3   
   140024f5e:	int3   
   140024f5f:	int3   
   140024f60:	sub    rsp,0x28
   140024f64:	sub    DWORD PTR [rip+0x23341],0x1        # 0x1400482ac
   140024f6b:	jne    0x140024fa0
   140024f6d:	cmp    QWORD PTR [rip+0x22263],0x0        # 0x1400471d8
   140024f75:	je     0x140024fa0
   140024f77:	call   0x140026200
   140024f7c:	cmp    BYTE PTR [rip+0x23325],0x0        # 0x1400482a8
   140024f83:	je     0x140024fa0
   140024f85:	mov    rcx,QWORD PTR [rip+0x2224c]        # 0x1400471d8
   140024f8c:	lea    rdx,[rip+0x232ed]        # 0x140048280
   140024f93:	mov    rax,QWORD PTR [rcx]
   140024f96:	call   QWORD PTR [rax+0x8]
   140024f99:	mov    BYTE PTR [rip+0x23308],0x0        # 0x1400482a8
   140024fa0:	add    rsp,0x28
   140024fa4:	ret    
   140024fa5:	int3   
   140024fa6:	int3   
   140024fa7:	int3   
   140024fa8:	int3   
   140024fa9:	int3   
   140024faa:	int3   
   140024fab:	int3   
   140024fac:	int3   
   140024fad:	int3   
   140024fae:	int3   
   140024faf:	int3   
   140024fb0:	sub    rsp,0x38
   140024fb4:	mov    rax,QWORD PTR [rsp+0x60]
   140024fb9:	mov    QWORD PTR [rsp+0x28],rax
   140024fbe:	mov    DWORD PTR [rsp+0x20],0x0
   140024fc6:	call   0x140024fd0
   140024fcb:	add    rsp,0x38
   140024fcf:	ret    
   140024fd0:	mov    BYTE PTR [rsp+0x20],r9b
   140024fd5:	mov    QWORD PTR [rsp+0x18],r8
   140024fda:	mov    QWORD PTR [rsp+0x10],rdx
   140024fdf:	mov    QWORD PTR [rsp+0x8],rcx
   140024fe4:	push   rbp
   140024fe5:	push   rbx
   140024fe6:	push   rsi
   140024fe7:	push   rdi
   140024fe8:	lea    rbp,[rsp-0x548]
   140024ff0:	sub    rsp,0x648
   140024ff7:	mov    rbx,r8
   140024ffa:	xorps  xmm0,xmm0
   140024ffd:	lea    r8,[rsp+0x40]
   140025002:	mov    r9d,0x200
   140025008:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14002500e:	mov    rsi,rcx
   140025011:	call   QWORD PTR [rip+0xd4e9]        # 0x140032500
   140025017:	mov    rcx,QWORD PTR [rip+0x2216a]        # 0x140047188
   14002501e:	lea    r9,[rsp+0x30]
   140025023:	mov    r8,rbx
   140025026:	lea    rdx,[rsp+0x40]
   14002502b:	mov    rax,QWORD PTR [rcx]
   14002502e:	call   QWORD PTR [rax+0x150]
   140025034:	mov    rbx,QWORD PTR [rbp+0x598]
   14002503b:	mov    rdi,rax
   14002503e:	test   rax,rax
   140025041:	je     0x14002511f
   140025047:	cmp    DWORD PTR [rbp+0x590],0x1
   14002504e:	sete   sil
   140025052:	nop    DWORD PTR [rax+0x0]
   140025056:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025060:	mov    rcx,QWORD PTR [rip+0x22121]        # 0x140047188
   140025067:	lea    rdx,[rsp+0x30]
   14002506c:	mov    r8,QWORD PTR [rcx]
   14002506f:	call   QWORD PTR [r8+0x140]
   140025076:	cmp    sil,al
   140025079:	jne    0x1400250f7
   14002507b:	mov    rcx,QWORD PTR [rbp+0x570]
   140025082:	lea    r8,[rbp+0x340]
   140025089:	mov    r9d,0x200
   14002508f:	mov    rdx,rdi
   140025092:	call   QWORD PTR [rip+0xd468]        # 0x140032500
   140025098:	mov    r9b,0x1
   14002509b:	lea    r8,[rbp+0x340]
   1400250a2:	mov    edx,0x200
   1400250a7:	lea    rcx,[rbp+0x140]
   1400250ae:	call   QWORD PTR [rip+0xd42c]        # 0x1400324e0
   1400250b4:	movsxd rdi,DWORD PTR [rbx]
   1400250b7:	cmp    edi,DWORD PTR [rbx+0x10]
   1400250ba:	jne    0x1400250ca
   1400250bc:	lea    rcx,[rbx+0x8]
   1400250c0:	mov    edx,0x1
   1400250c5:	call   0x140013420
   1400250ca:	inc    DWORD PTR [rbx]
   1400250cc:	lea    rdx,[rdi*8+0x0]
   1400250d4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400250d8:	add    rcx,rdx
   1400250db:	je     0x1400250e4
   1400250dd:	mov    QWORD PTR [rcx],0x0
   1400250e4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400250e8:	add    rcx,rdx
   1400250eb:	lea    rdx,[rbp+0x140]
   1400250f2:	call   0x14001aae0
   1400250f7:	mov    rcx,QWORD PTR [rip+0x2208a]        # 0x140047188
   1400250fe:	lea    rdx,[rsp+0x30]
   140025103:	mov    rax,QWORD PTR [rcx]
   140025106:	call   QWORD PTR [rax+0x138]
   14002510c:	mov    rdi,rax
   14002510f:	test   rax,rax
   140025112:	jne    0x140025060
   140025118:	mov    rsi,QWORD PTR [rbp+0x570]
   14002511f:	mov    rcx,QWORD PTR [rip+0x22062]        # 0x140047188
   140025126:	lea    rdx,[rsp+0x30]
   14002512b:	mov    rax,QWORD PTR [rcx]
   14002512e:	call   QWORD PTR [rax+0x148]
   140025134:	cmp    BYTE PTR [rbp+0x588],0x0
   14002513b:	je     0x14002525e
   140025141:	mov    r9d,0x200
   140025147:	lea    r8,[rsp+0x40]
   14002514c:	lea    rdx,[rip+0x11d45]        # 0x140036e98
   140025153:	mov    rcx,rsi
   140025156:	call   QWORD PTR [rip+0xd3a4]        # 0x140032500
   14002515c:	mov    rcx,QWORD PTR [rip+0x22025]        # 0x140047188
   140025163:	lea    r9,[rsp+0x30]
   140025168:	mov    r8,QWORD PTR [rbp+0x580]
   14002516f:	lea    rdx,[rsp+0x40]
   140025174:	mov    rax,QWORD PTR [rcx]
   140025177:	call   QWORD PTR [rax+0x150]
   14002517d:	mov    rdi,rax
   140025180:	test   rax,rax
   140025183:	je     0x140025249
   140025189:	nop    DWORD PTR [rax+0x0]
   140025190:	mov    rcx,QWORD PTR [rip+0x21ff1]        # 0x140047188
   140025197:	lea    rdx,[rsp+0x30]
   14002519c:	mov    r8,QWORD PTR [rcx]
   14002519f:	call   QWORD PTR [r8+0x140]
   1400251a6:	test   al,al
   1400251a8:	je     0x140025228
   1400251aa:	mov    r8d,0x2
   1400251b0:	lea    rdx,[rip+0xe05d]        # 0x140033214
   1400251b7:	mov    rcx,rdi
   1400251ba:	call   QWORD PTR [rip+0xd288]        # 0x140032448
   1400251c0:	test   eax,eax
   1400251c2:	je     0x140025228
   1400251c4:	mov    r8d,0x3
   1400251ca:	lea    rdx,[rip+0xe13f]        # 0x140033310
   1400251d1:	mov    rcx,rdi
   1400251d4:	call   QWORD PTR [rip+0xd26e]        # 0x140032448
   1400251da:	test   eax,eax
   1400251dc:	je     0x140025228
   1400251de:	mov    r9d,0x200
   1400251e4:	lea    r8,[rbp+0x140]
   1400251eb:	mov    rdx,rdi
   1400251ee:	mov    rcx,rsi
   1400251f1:	call   QWORD PTR [rip+0xd309]        # 0x140032500
   1400251f7:	mov    eax,DWORD PTR [rbp+0x590]
   1400251fd:	lea    rcx,[rbp+0x140]
   140025204:	movzx  r9d,BYTE PTR [rbp+0x588]
   14002520c:	mov    r8,QWORD PTR [rbp+0x580]
   140025213:	mov    rdx,QWORD PTR [rbp+0x578]
   14002521a:	mov    QWORD PTR [rsp+0x28],rbx
   14002521f:	mov    DWORD PTR [rsp+0x20],eax
   140025223:	call   0x140024fd0
   140025228:	mov    rcx,QWORD PTR [rip+0x21f59]        # 0x140047188
   14002522f:	lea    rdx,[rsp+0x30]
   140025234:	mov    rax,QWORD PTR [rcx]
   140025237:	call   QWORD PTR [rax+0x138]
   14002523d:	mov    rdi,rax
   140025240:	test   rax,rax
   140025243:	jne    0x140025190
   140025249:	mov    rcx,QWORD PTR [rip+0x21f38]        # 0x140047188
   140025250:	lea    rdx,[rsp+0x30]
   140025255:	mov    rax,QWORD PTR [rcx]
   140025258:	call   QWORD PTR [rax+0x148]
   14002525e:	mov    rcx,QWORD PTR [rsp+0x30]
   140025263:	test   rcx,rcx
   140025266:	je     0x140025276
   140025268:	mov    rax,QWORD PTR [rcx]
   14002526b:	lea    rdx,[rsp+0x30]
   140025270:	call   QWORD PTR [rax+0x148]
   140025276:	add    rsp,0x648
   14002527d:	pop    rdi
   14002527e:	pop    rsi
   14002527f:	pop    rbx
   140025280:	pop    rbp
   140025281:	ret    
   140025282:	int3   
   140025283:	int3   
   140025284:	int3   
   140025285:	int3   
   140025286:	int3   
   140025287:	int3   
   140025288:	int3   
   140025289:	int3   
   14002528a:	int3   
   14002528b:	int3   
   14002528c:	int3   
   14002528d:	int3   
   14002528e:	int3   
   14002528f:	int3   
   140025290:	mov    QWORD PTR [rsp+0x8],rbx
   140025295:	mov    QWORD PTR [rsp+0x10],rbp
   14002529a:	mov    QWORD PTR [rsp+0x18],rsi
   14002529f:	push   rdi
   1400252a0:	sub    rsp,0x240
   1400252a7:	mov    esi,r9d
   1400252aa:	mov    rbx,r8
   1400252ad:	mov    rbp,rdx
   1400252b0:	mov    rdi,rcx
   1400252b3:	call   QWORD PTR [rip+0xd21f]        # 0x1400324d8
   1400252b9:	test   al,al
   1400252bb:	je     0x1400252d9
   1400252bd:	mov    r8d,esi
   1400252c0:	mov    rdx,rdi
   1400252c3:	mov    rcx,rbx
   1400252c6:	call   QWORD PTR [rip+0xd28c]        # 0x140032558
   1400252cc:	mov    dl,0x5c
   1400252ce:	mov    rcx,rbx
   1400252d1:	call   QWORD PTR [rip+0xd1f9]        # 0x1400324d0
   1400252d7:	jmp    0x14002534a
   1400252d9:	mov    rcx,QWORD PTR [rip+0x21ea8]        # 0x140047188
   1400252e0:	xor    edx,edx
   1400252e2:	mov    QWORD PTR [rsp+0x30],rdx
   1400252e7:	mov    r9,rbx
   1400252ea:	mov    DWORD PTR [rsp+0x28],edx
   1400252ee:	mov    r8,rbp
   1400252f1:	mov    rdx,rdi
   1400252f4:	mov    DWORD PTR [rsp+0x20],esi
   1400252f8:	mov    rax,QWORD PTR [rcx]
   1400252fb:	call   QWORD PTR [rax+0xb8]
   140025301:	test   rax,rax
   140025304:	je     0x140025317
   140025306:	mov    rcx,rax
   140025309:	call   QWORD PTR [rip+0xd1c9]        # 0x1400324d8
   14002530f:	test   al,al
   140025311:	je     0x140025317
   140025313:	mov    al,0x1
   140025315:	jmp    0x140025355
   140025317:	mov    rcx,QWORD PTR [rip+0x21e6a]        # 0x140047188
   14002531e:	lea    rdx,[rsp+0x40]
   140025323:	mov    r8d,0x200
   140025329:	mov    rax,QWORD PTR [rcx]
   14002532c:	call   QWORD PTR [rax+0x170]
   140025332:	test   al,al
   140025334:	je     0x140025355
   140025336:	mov    r9d,esi
   140025339:	lea    rcx,[rsp+0x40]
   14002533e:	mov    r8,rbx
   140025341:	mov    rdx,rdi
   140025344:	call   QWORD PTR [rip+0xd1b6]        # 0x140032500
   14002534a:	mov    dl,0x5c
   14002534c:	mov    rcx,rbx
   14002534f:	call   QWORD PTR [rip+0xd193]        # 0x1400324e8
   140025355:	lea    r11,[rsp+0x240]
   14002535d:	mov    rbx,QWORD PTR [r11+0x10]
   140025361:	mov    rbp,QWORD PTR [r11+0x18]
   140025365:	mov    rsi,QWORD PTR [r11+0x20]
   140025369:	mov    rsp,r11
   14002536c:	pop    rdi
   14002536d:	ret    
   14002536e:	int3   
   14002536f:	int3   
   140025370:	mov    QWORD PTR [rsp+0x8],rbx
   140025375:	mov    QWORD PTR [rsp+0x10],rbp
   14002537a:	mov    QWORD PTR [rsp+0x18],rsi
   14002537f:	push   rdi
   140025380:	push   r14
   140025382:	push   r15
   140025384:	sub    rsp,0x20
   140025388:	mov    rbx,QWORD PTR [rsp+0x60]
   14002538d:	mov    esi,edx
   14002538f:	mov    r14,rcx
   140025392:	lea    rdx,[rip+0x12f47]        # 0x1400382e0
   140025399:	mov    rcx,rbx
   14002539c:	mov    ebp,r9d
   14002539f:	mov    rdi,r8
   1400253a2:	call   QWORD PTR [rip+0xd1c0]        # 0x140032568
   1400253a8:	mov    rdx,rbx
   1400253ab:	mov    rcx,r14
   1400253ae:	mov    r15,rax
   1400253b1:	test   rax,rax
   1400253b4:	je     0x1400253de
   1400253b6:	mov    r8d,r15d
   1400253b9:	sub    r8d,ebx
   1400253bc:	inc    r8d
   1400253bf:	cmp    esi,r8d
   1400253c2:	cmovl  r8d,esi
   1400253c6:	call   QWORD PTR [rip+0xd18c]        # 0x140032558
   1400253cc:	lea    rdx,[r15+0x8]
   1400253d0:	mov    r8d,ebp
   1400253d3:	mov    rcx,rdi
   1400253d6:	call   QWORD PTR [rip+0xd17c]        # 0x140032558
   1400253dc:	jmp    0x1400253ee
   1400253de:	mov    r8d,esi
   1400253e1:	call   QWORD PTR [rip+0xd171]        # 0x140032558
   1400253e7:	test   ebp,ebp
   1400253e9:	jle    0x1400253ee
   1400253eb:	mov    BYTE PTR [rdi],0x0
   1400253ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400253f3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400253f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400253fd:	add    rsp,0x20
   140025401:	pop    r15
   140025403:	pop    r14
   140025405:	pop    rdi
   140025406:	ret    
   140025407:	int3   
   140025408:	int3   
   140025409:	int3   
   14002540a:	int3   
   14002540b:	int3   
   14002540c:	int3   
   14002540d:	int3   
   14002540e:	int3   
   14002540f:	int3   
   140025410:	rex push rbp
   140025412:	push   r14
   140025414:	push   r15
   140025416:	sub    rsp,0x30
   14002541a:	lea    rbp,[rsp+0x30]
   14002541f:	mov    QWORD PTR [rbp+0x20],rbx
   140025423:	mov    r14d,edx
   140025426:	mov    rbx,rcx
   140025429:	mov    QWORD PTR [rbp+0x28],rsi
   14002542d:	mov    rcx,QWORD PTR [rip+0x21d54]        # 0x140047188
   140025434:	mov    rsi,r8
   140025437:	mov    r8d,edx
   14002543a:	mov    QWORD PTR [rbp+0x30],rdi
   14002543e:	xor    r15d,r15d
   140025441:	xor    r9d,r9d
   140025444:	mov    rdx,rsi
   140025447:	mov    DWORD PTR [rsp+0x20],r15d
   14002544c:	mov    rax,QWORD PTR [rcx]
   14002544f:	call   QWORD PTR [rax+0xc0]
   140025455:	mov    edx,eax
   140025457:	lea    ecx,[rax+0x1f]
   14002545a:	movsxd r8,ecx
   14002545d:	and    r8,0xfffffffffffffff0
   140025461:	lea    rax,[r8+0xf]
   140025465:	cmp    rax,r8
   140025468:	ja     0x140025474
   14002546a:	movabs rax,0xffffffffffffff0
   140025474:	and    rax,0xfffffffffffffff0
   140025478:	call   0x1400263c0
   14002547d:	mov    rcx,QWORD PTR [rip+0x21d04]        # 0x140047188
   140025484:	sub    rsp,rax
   140025487:	mov    r8d,r14d
   14002548a:	mov    rax,QWORD PTR [rcx]
   14002548d:	lea    rdi,[rsp+0x30]
   140025492:	mov    DWORD PTR [rsp+0x20],edx
   140025496:	add    rdi,0x10
   14002549a:	and    rdi,0xffffffffffffffef
   14002549e:	mov    rdx,rsi
   1400254a1:	mov    r9,rdi
   1400254a4:	call   QWORD PTR [rax+0xc0]
   1400254aa:	mov    edx,0x3b
   1400254af:	mov    rcx,rdi
   1400254b2:	call   0x140027a28
   1400254b7:	mov    rsi,rax
   1400254ba:	test   rax,rax
   1400254bd:	je     0x140025537
   1400254bf:	nop
   1400254c0:	mov    rdx,rdi
   1400254c3:	mov    BYTE PTR [rsi],r15b
   1400254c6:	lea    rcx,[rbp+0x38]
   1400254ca:	mov    QWORD PTR [rbp+0x38],r15
   1400254ce:	call   0x14001b3a0
   1400254d3:	movsxd rdi,DWORD PTR [rbx]
   1400254d6:	cmp    edi,DWORD PTR [rbx+0x10]
   1400254d9:	jne    0x1400254e9
   1400254db:	mov    edx,0x1
   1400254e0:	lea    rcx,[rbx+0x8]
   1400254e4:	call   0x140013420
   1400254e9:	mov    rax,QWORD PTR [rbx+0x8]
   1400254ed:	inc    DWORD PTR [rbx]
   1400254ef:	lea    rdi,[rax+rdi*8]
   1400254f3:	test   rdi,rdi
   1400254f6:	je     0x14002550f
   1400254f8:	lea    rcx,[rbp+0x38]
   1400254fc:	mov    QWORD PTR [rdi],r15
   1400254ff:	call   0x14001b050
   140025504:	mov    rdx,rax
   140025507:	mov    rcx,rdi
   14002550a:	call   0x14001b3a0
   14002550f:	cmp    QWORD PTR [rbp+0x38],r15
   140025513:	je     0x14002551e
   140025515:	lea    rcx,[rbp+0x38]
   140025519:	call   0x14001b030
   14002551e:	lea    rdi,[rsi+0x1]
   140025522:	mov    edx,0x3b
   140025527:	mov    rcx,rdi
   14002552a:	call   0x140027a28
   14002552f:	mov    rsi,rax
   140025532:	test   rax,rax
   140025535:	jne    0x1400254c0
   140025537:	cmp    BYTE PTR [rdi],r15b
   14002553a:	je     0x140025597
   14002553c:	mov    rdx,rdi
   14002553f:	mov    QWORD PTR [rbp+0x38],r15
   140025543:	lea    rcx,[rbp+0x38]
   140025547:	call   0x14001b3a0
   14002554c:	movsxd rdi,DWORD PTR [rbx]
   14002554f:	cmp    edi,DWORD PTR [rbx+0x10]
   140025552:	jne    0x140025562
   140025554:	lea    rcx,[rbx+0x8]
   140025558:	mov    edx,0x1
   14002555d:	call   0x140013420
   140025562:	inc    DWORD PTR [rbx]
   140025564:	mov    rax,QWORD PTR [rbx+0x8]
   140025568:	lea    rbx,[rax+rdi*8]
   14002556c:	test   rbx,rbx
   14002556f:	je     0x140025588
   140025571:	lea    rcx,[rbp+0x38]
   140025575:	mov    QWORD PTR [rbx],r15
   140025578:	call   0x14001b050
   14002557d:	mov    rdx,rax
   140025580:	mov    rcx,rbx
   140025583:	call   0x14001b3a0
   140025588:	cmp    QWORD PTR [rbp+0x38],r15
   14002558c:	je     0x140025597
   14002558e:	lea    rcx,[rbp+0x38]
   140025592:	call   0x14001b030
   140025597:	mov    rbx,QWORD PTR [rbp+0x20]
   14002559b:	mov    rsi,QWORD PTR [rbp+0x28]
   14002559f:	mov    rdi,QWORD PTR [rbp+0x30]
   1400255a3:	mov    rsp,rbp
   1400255a6:	pop    r15
   1400255a8:	pop    r14
   1400255aa:	pop    rbp
   1400255ab:	ret    
   1400255ac:	int3   
   1400255ad:	int3   
   1400255ae:	int3   
   1400255af:	int3   
   1400255b0:	mov    rax,rsp
   1400255b3:	mov    QWORD PTR [rax+0x8],rcx
   1400255b7:	push   rsi
   1400255b8:	sub    rsp,0x70
   1400255bc:	mov    QWORD PTR [rax+0x10],rbx
   1400255c0:	mov    QWORD PTR [rax+0x20],rdi
   1400255c4:	mov    QWORD PTR [rax-0x18],r13
   1400255c8:	mov    r13,r9
   1400255cb:	mov    QWORD PTR [rax-0x20],r14
   1400255cf:	mov    r14,r8
   1400255d2:	test   r8,r8
   1400255d5:	je     0x1400255db
   1400255d7:	mov    BYTE PTR [r8],0x0
   1400255db:	xor    ebx,ebx
   1400255dd:	mov    QWORD PTR [rsp+0x90],rbp
   1400255e5:	mov    r8,rdx
   1400255e8:	mov    QWORD PTR [rsp+0x68],r12
   1400255ed:	xor    edx,edx
   1400255ef:	mov    QWORD PTR [rsp+0x50],r15
   1400255f4:	lea    rcx,[rsp+0x30]
   1400255f9:	mov    DWORD PTR [rsp+0x30],ebx
   1400255fd:	mov    QWORD PTR [rsp+0x38],rbx
   140025602:	mov    QWORD PTR [rsp+0x40],rbx
   140025607:	call   0x140025410
   14002560c:	mov    edi,DWORD PTR [rsp+0x30]
   140025610:	mov    rsi,QWORD PTR [rsp+0x38]
   140025615:	test   edi,edi
   140025617:	jle    0x14002566c
   140025619:	mov    ebp,DWORD PTR [rsp+0xa8]
   140025620:	mov    r12,QWORD PTR [rsp+0xa0]
   140025628:	nop    DWORD PTR [rax+rax*1+0x0]
   140025630:	movsxd rax,ebx
   140025633:	lea    r15,[rax*8+0x0]
   14002563b:	lea    rcx,[r15+rsi*1]
   14002563f:	call   0x14001b050
   140025644:	mov    rcx,QWORD PTR [rsp+0x80]
   14002564c:	mov    r9,r12
   14002564f:	mov    r8,r13
   140025652:	mov    DWORD PTR [rsp+0x20],ebp
   140025656:	mov    rdx,rax
   140025659:	call   0x140025740
   14002565e:	test   al,al
   140025660:	jne    0x14002570e
   140025666:	inc    ebx
   140025668:	cmp    ebx,edi
   14002566a:	jl     0x140025630
   14002566c:	xor    bpl,bpl
   14002566f:	mov    r15,QWORD PTR [rsp+0x50]
   140025674:	lea    eax,[rdi-0x1]
   140025677:	mov    r14,QWORD PTR [rsp+0x58]
   14002567c:	mov    r13,QWORD PTR [rsp+0x60]
   140025681:	mov    r12,QWORD PTR [rsp+0x68]
   140025686:	movsxd rdi,eax
   140025689:	test   eax,eax
   14002568b:	js     0x1400256a9
   14002568d:	lea    rbx,[rsi+rdi*8]
   140025691:	cmp    QWORD PTR [rbx],0x0
   140025695:	je     0x14002569f
   140025697:	mov    rcx,rbx
   14002569a:	call   0x14001b030
   14002569f:	sub    rbx,0x8
   1400256a3:	sub    rdi,0x1
   1400256a7:	jns    0x140025691
   1400256a9:	mov    ebx,DWORD PTR [rsp+0x44]
   1400256ad:	mov    rdi,QWORD PTR [rsp+0x98]
   1400256b5:	and    ebx,0xc0000000
   1400256bb:	jne    0x1400256d7
   1400256bd:	test   rsi,rsi
   1400256c0:	je     0x1400256d7
   1400256c2:	mov    rax,QWORD PTR [rip+0xccc7]        # 0x140032390
   1400256c9:	mov    rdx,rsi
   1400256cc:	mov    rcx,QWORD PTR [rax]
   1400256cf:	mov    rax,QWORD PTR [rcx]
   1400256d2:	call   QWORD PTR [rax+0x28]
   1400256d5:	xor    esi,esi
   1400256d7:	test   ebx,ebx
   1400256d9:	mov    rbx,QWORD PTR [rsp+0x88]
   1400256e1:	jne    0x1400256fc
   1400256e3:	test   rsi,rsi
   1400256e6:	je     0x1400256fc
   1400256e8:	mov    rcx,QWORD PTR [rip+0xcca1]        # 0x140032390
   1400256ef:	mov    rdx,rsi
   1400256f2:	mov    rcx,QWORD PTR [rcx]
   1400256f5:	mov    r8,QWORD PTR [rcx]
   1400256f8:	call   QWORD PTR [r8+0x28]
   1400256fc:	movzx  eax,bpl
   140025700:	mov    rbp,QWORD PTR [rsp+0x90]
   140025708:	add    rsp,0x70
   14002570c:	pop    rsi
   14002570d:	ret    
   14002570e:	test   r14,r14
   140025711:	je     0x140025736
   140025713:	lea    rcx,[r15+rsi*1]
   140025717:	call   0x14001b050
   14002571c:	mov    r8d,ebp
   14002571f:	mov    rdx,rax
   140025722:	mov    rcx,r14
   140025725:	call   QWORD PTR [rip+0xce2d]        # 0x140032558
   14002572b:	mov    dl,0x2f
   14002572d:	mov    rcx,r14
   140025730:	call   QWORD PTR [rip+0xcd9a]        # 0x1400324d0
   140025736:	mov    bpl,0x1
   140025739:	jmp    0x14002566f
   14002573e:	int3   
   14002573f:	int3   
   140025740:	mov    QWORD PTR [rsp+0x8],rbx
   140025745:	mov    QWORD PTR [rsp+0x10],rsi
   14002574a:	mov    QWORD PTR [rsp+0x18],rdi
   14002574f:	mov    QWORD PTR [rsp+0x20],r14
   140025754:	push   rbp
   140025755:	lea    rbp,[rsp-0x630]
   14002575d:	sub    rsp,0x730
   140025764:	mov    rdi,r9
   140025767:	mov    r14,r8
   14002576a:	mov    rbx,rdx
   14002576d:	mov    rsi,rcx
   140025770:	test   r8,r8
   140025773:	je     0x140025779
   140025775:	mov    BYTE PTR [r8],0x0
   140025779:	test   rdi,rdi
   14002577c:	je     0x140025782
   14002577e:	mov    BYTE PTR [r9],0x0
   140025782:	mov    r8b,0x1
   140025785:	mov    rdx,rsi
   140025788:	mov    rcx,rbx
   14002578b:	call   QWORD PTR [rip+0xcc9f]        # 0x140032430
   140025791:	test   al,al
   140025793:	jne    0x14002579c
   140025795:	xor    al,al
   140025797:	jmp    0x140025983
   14002579c:	mov    r9d,0x200
   1400257a2:	lea    r8,[rbp+0x30]
   1400257a6:	mov    rdx,rbx
   1400257a9:	mov    rcx,rsi
   1400257ac:	call   QWORD PTR [rip+0xcca6]        # 0x140032458
   1400257b2:	test   al,al
   1400257b4:	je     0x140025795
   1400257b6:	cmp    BYTE PTR [rbp+0x30],0x0
   1400257ba:	je     0x140025981
   1400257c0:	lea    r8,[rbp+0x30]
   1400257c4:	mov    edx,0x104
   1400257c9:	lea    rcx,[rsp+0x20]
   1400257ce:	call   QWORD PTR [rip+0xcc7c]        # 0x140032450
   1400257d4:	or     rbx,0xffffffffffffffff
   1400257d8:	lea    rcx,[rsp+0x20]
   1400257dd:	test   al,al
   1400257df:	jne    0x1400257fa
   1400257e1:	mov    r8d,0x104
   1400257e7:	lea    rdx,[rbp+0x30]
   1400257eb:	call   QWORD PTR [rip+0xcd67]        # 0x140032558
   1400257f1:	lea    rdx,[rip+0xcfa8]        # 0x1400327a0
   1400257f8:	jmp    0x14002582c
   1400257fa:	mov    rax,rbx
   1400257fd:	nop    DWORD PTR [rax]
   140025800:	inc    rax
   140025803:	cmp    BYTE PTR [rcx+rax*1],0x0
   140025807:	jne    0x140025800
   140025809:	cdqe   
   14002580b:	lea    rdx,[rbp+0x31]
   14002580f:	add    rdx,rax
   140025812:	lea    rcx,[rbp+0x230]
   140025819:	mov    r8d,0x200
   14002581f:	call   QWORD PTR [rip+0xcd33]        # 0x140032558
   140025825:	lea    rdx,[rbp+0x230]
   14002582c:	mov    r8d,0x200
   140025832:	lea    rcx,[rbp+0x30]
   140025836:	call   QWORD PTR [rip+0xcd1c]        # 0x140032558
   14002583c:	lea    rcx,[rsp+0x20]
   140025841:	mov    rax,rbx
   140025844:	inc    rax
   140025847:	cmp    BYTE PTR [rcx+rax*1],0x0
   14002584b:	jne    0x140025844
   14002584d:	cmp    eax,0x7
   140025850:	jl     0x14002593a
   140025856:	add    eax,0xfffffff9
   140025859:	lea    rdx,[rsp+0x20]
   14002585e:	movsxd rcx,eax
   140025861:	lea    r8,[rip+0x12a78]        # 0x1400382e0
   140025868:	add    rdx,rcx
   14002586b:	xor    eax,eax
   14002586d:	nop    DWORD PTR [rax]
   140025870:	movzx  ecx,BYTE PTR [rdx+rax*1]
   140025874:	inc    rax
   140025877:	cmp    cl,BYTE PTR [r8+rax*1-0x1]
   14002587c:	jne    0x14002593a
   140025882:	cmp    rax,0x8
   140025886:	jne    0x140025870
   140025888:	cmp    cl,BYTE PTR [r8+rax*1-0x1]
   14002588d:	jne    0x14002593a
   140025893:	cmp    BYTE PTR [rbp+0x30],0x0
   140025897:	je     0x140025795
   14002589d:	lea    r8,[rbp+0x30]
   1400258a1:	mov    edx,0x104
   1400258a6:	lea    rcx,[rbp+0x230]
   1400258ad:	call   QWORD PTR [rip+0xcb9d]        # 0x140032450
   1400258b3:	test   al,al
   1400258b5:	jne    0x1400258d7
   1400258b7:	mov    r8d,0x104
   1400258bd:	lea    rdx,[rbp+0x30]
   1400258c1:	lea    rcx,[rbp+0x230]
   1400258c8:	call   QWORD PTR [rip+0xcc8a]        # 0x140032558
   1400258ce:	lea    rdx,[rip+0xcecb]        # 0x1400327a0
   1400258d5:	jmp    0x14002590d
   1400258d7:	lea    rax,[rbp+0x230]
   1400258de:	xchg   ax,ax
   1400258e0:	inc    rbx
   1400258e3:	cmp    BYTE PTR [rax+rbx*1],0x0
   1400258e7:	jne    0x1400258e0
   1400258e9:	movsxd rax,ebx
   1400258ec:	lea    rdx,[rbp+0x31]
   1400258f0:	add    rdx,rax
   1400258f3:	lea    rcx,[rbp+0x430]
   1400258fa:	mov    r8d,0x200
   140025900:	call   QWORD PTR [rip+0xcc52]        # 0x140032558
   140025906:	lea    rdx,[rbp+0x430]
   14002590d:	mov    r8d,0x200
   140025913:	lea    rcx,[rbp+0x30]
   140025917:	call   QWORD PTR [rip+0xcc3b]        # 0x140032558
   14002591d:	mov    r9d,0x104
   140025923:	lea    r8,[rsp+0x20]
   140025928:	lea    rdx,[rbp+0x230]
   14002592f:	lea    rcx,[rsp+0x20]
   140025934:	call   QWORD PTR [rip+0xcbc6]        # 0x140032500
   14002593a:	mov    ebx,DWORD PTR [rbp+0x660]
   140025940:	test   r14,r14
   140025943:	je     0x140025961
   140025945:	mov    r8d,ebx
   140025948:	lea    rdx,[rsp+0x20]
   14002594d:	mov    rcx,r14
   140025950:	call   QWORD PTR [rip+0xcc02]        # 0x140032558
   140025956:	mov    dl,0x2f
   140025958:	mov    rcx,r14
   14002595b:	call   QWORD PTR [rip+0xcb6f]        # 0x1400324d0
   140025961:	test   rdi,rdi
   140025964:	je     0x140025981
   140025966:	mov    r8d,ebx
   140025969:	lea    rdx,[rbp+0x30]
   14002596d:	mov    rcx,rdi
   140025970:	call   QWORD PTR [rip+0xcbe2]        # 0x140032558
   140025976:	mov    dl,0x2f
   140025978:	mov    rcx,rdi
   14002597b:	call   QWORD PTR [rip+0xcb4f]        # 0x1400324d0
   140025981:	mov    al,0x1
   140025983:	lea    r11,[rsp+0x730]
   14002598b:	mov    rbx,QWORD PTR [r11+0x10]
   14002598f:	mov    rsi,QWORD PTR [r11+0x18]
   140025993:	mov    rdi,QWORD PTR [r11+0x20]
   140025997:	mov    r14,QWORD PTR [r11+0x28]
   14002599b:	mov    rsp,r11
   14002599e:	pop    rbp
   14002599f:	ret    
   1400259a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400259a5:	mov    QWORD PTR [rsp+0x18],r8
   1400259aa:	mov    QWORD PTR [rsp+0x20],r9
   1400259af:	sub    rsp,0x28
   1400259b3:	mov    r8,rdx
   1400259b6:	lea    r9,[rsp+0x40]
   1400259bb:	mov    edx,0x100
   1400259c0:	call   QWORD PTR [rip+0xcb82]        # 0x140032548
   1400259c6:	add    rsp,0x28
   1400259ca:	ret    
   1400259cb:	int3   
   1400259cc:	int3   
   1400259cd:	int3   
   1400259ce:	int3   
   1400259cf:	int3   
   1400259d0:	mov    QWORD PTR [rsp+0x8],rdi
   1400259d5:	mov    r8,rcx
   1400259d8:	mov    WORD PTR [rcx+0x488],0x0
   1400259e1:	lea    rax,[rip+0x12908]        # 0x1400382f0
   1400259e8:	mov    edx,0x10
   1400259ed:	mov    QWORD PTR [rcx],rax
   1400259f0:	lea    rdi,[rcx+0x8]
   1400259f4:	xor    eax,eax
   1400259f6:	mov    ecx,edx
   1400259f8:	rep stos QWORD PTR es:[rdi],rax
   1400259fb:	lea    rax,[r8+0x88]
   140025a02:	nop    DWORD PTR [rax+0x0]
   140025a06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025a10:	mov    QWORD PTR [rax],0xffffffffffffffff
   140025a17:	mov    QWORD PTR [rax+0x8],0xffffffffffffffff
   140025a1f:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
   140025a27:	lea    rax,[rax+0x40]
   140025a2b:	mov    QWORD PTR [rax-0x28],0xffffffffffffffff
   140025a33:	mov    QWORD PTR [rax-0x20],0xffffffffffffffff
   140025a3b:	mov    QWORD PTR [rax-0x18],0xffffffffffffffff
   140025a43:	mov    QWORD PTR [rax-0x10],0xffffffffffffffff
   140025a4b:	mov    QWORD PTR [rax-0x8],0xffffffffffffffff
   140025a53:	sub    rdx,0x1
   140025a57:	jne    0x140025a10
   140025a59:	mov    rdi,QWORD PTR [rsp+0x8]
   140025a5e:	mov    rax,r8
   140025a61:	ret    
   140025a62:	int3   
   140025a63:	int3   
   140025a64:	int3   
   140025a65:	int3   
   140025a66:	int3   
   140025a67:	int3   
   140025a68:	int3   
   140025a69:	int3   
   140025a6a:	int3   
   140025a6b:	int3   
   140025a6c:	int3   
   140025a6d:	int3   
   140025a6e:	int3   
   140025a6f:	int3   
   140025a70:	mov    QWORD PTR [rsp+0x8],rbx
   140025a75:	mov    QWORD PTR [rsp+0x10],rsi
   140025a7a:	push   rdi
   140025a7b:	sub    rsp,0x20
   140025a7f:	lea    rax,[rip+0x1286a]        # 0x1400382f0
   140025a86:	mov    edi,0x10
   140025a8b:	mov    QWORD PTR [rcx],rax
   140025a8e:	lea    rbx,[rcx+0x8]
   140025a92:	xor    esi,esi
   140025a94:	mov    rdx,QWORD PTR [rbx]
   140025a97:	test   rdx,rdx
   140025a9a:	je     0x140025ab0
   140025a9c:	mov    rcx,QWORD PTR [rip+0x216e5]        # 0x140047188
   140025aa3:	add    rcx,0x8
   140025aa7:	mov    rax,QWORD PTR [rcx]
   140025aaa:	call   QWORD PTR [rax+0x18]
   140025aad:	mov    QWORD PTR [rbx],rsi
   140025ab0:	add    rbx,0x8
   140025ab4:	sub    rdi,0x1
   140025ab8:	jne    0x140025a94
   140025aba:	mov    rbx,QWORD PTR [rsp+0x30]
   140025abf:	mov    rsi,QWORD PTR [rsp+0x38]
   140025ac4:	add    rsp,0x20
   140025ac8:	pop    rdi
   140025ac9:	ret    
   140025aca:	int3   
   140025acb:	int3   
   140025acc:	int3   
   140025acd:	int3   
   140025ace:	int3   
   140025acf:	int3   
   140025ad0:	mov    QWORD PTR [rsp+0x8],rdi
   140025ad5:	lea    rdi,[rcx+0x88]
   140025adc:	movsxd rax,edx
   140025adf:	mov    ecx,0x100
   140025ae4:	rep stos DWORD PTR es:[rdi],eax
   140025ae6:	mov    rdi,QWORD PTR [rsp+0x8]
   140025aeb:	ret    
   140025aec:	int3   
   140025aed:	int3   
   140025aee:	int3   
   140025aef:	int3   
   140025af0:	movsxd rax,edx
   140025af3:	mov    DWORD PTR [rcx+rax*4+0x88],r8d
   140025afb:	ret    
   140025afc:	int3   
   140025afd:	int3   
   140025afe:	int3   
   140025aff:	int3   
   140025b00:	mov    QWORD PTR [rsp+0x8],rbx
   140025b05:	push   rdi
   140025b06:	sub    rsp,0x20
   140025b0a:	xor    ebx,ebx
   140025b0c:	lea    rax,[rcx+0x8]
   140025b10:	mov    r10d,ebx
   140025b13:	mov    rdi,rcx
   140025b16:	cmp    QWORD PTR [rax],0x0
   140025b1a:	je     0x140025b39
   140025b1c:	inc    ebx
   140025b1e:	inc    r10
   140025b21:	add    rax,0x8
   140025b25:	cmp    r10,0x10
   140025b29:	jl     0x140025b16
   140025b2b:	or     eax,0xffffffff
   140025b2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140025b33:	add    rsp,0x20
   140025b37:	pop    rdi
   140025b38:	ret    
   140025b39:	cmp    ebx,0xffffffff
   140025b3c:	je     0x140025b58
   140025b3e:	mov    rcx,QWORD PTR [rip+0x21643]        # 0x140047188
   140025b45:	add    rcx,0x8
   140025b49:	mov    r10,QWORD PTR [rcx]
   140025b4c:	call   QWORD PTR [r10+0x10]
   140025b50:	movsxd rcx,ebx
   140025b53:	mov    QWORD PTR [rdi+rcx*8+0x8],rax
   140025b58:	mov    eax,ebx
   140025b5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140025b5f:	add    rsp,0x20
   140025b63:	pop    rdi
   140025b64:	ret    
   140025b65:	int3   
   140025b66:	int3   
   140025b67:	int3   
   140025b68:	int3   
   140025b69:	int3   
   140025b6a:	int3   
   140025b6b:	int3   
   140025b6c:	int3   
   140025b6d:	int3   
   140025b6e:	int3   
   140025b6f:	int3   
   140025b70:	mov    QWORD PTR [rsp+0x18],rbp
   140025b75:	push   rsi
   140025b76:	sub    rsp,0x20
   140025b7a:	movsxd rbp,edx
   140025b7d:	mov    rsi,rcx
   140025b80:	cmp    ebp,0xffffffff
   140025b83:	je     0x140025be0
   140025b85:	mov    QWORD PTR [rsp+0x30],rbx
   140025b8a:	xor    ebx,ebx
   140025b8c:	mov    QWORD PTR [rsp+0x38],rdi
   140025b91:	lea    rdi,[rcx+0x88]
   140025b98:	cmp    DWORD PTR [rdi],ebp
   140025b9a:	jne    0x140025ba7
   140025b9c:	mov    rax,QWORD PTR [rsi]
   140025b9f:	mov    edx,ebx
   140025ba1:	mov    rcx,rsi
   140025ba4:	call   QWORD PTR [rax+0x38]
   140025ba7:	inc    ebx
   140025ba9:	add    rdi,0x4
   140025bad:	cmp    ebx,0x100
   140025bb3:	jl     0x140025b98
   140025bb5:	mov    rcx,QWORD PTR [rip+0x215cc]        # 0x140047188
   140025bbc:	lea    rbx,[rsi+rbp*8]
   140025bc0:	mov    rdx,QWORD PTR [rbx+0x8]
   140025bc4:	add    rcx,0x8
   140025bc8:	mov    rax,QWORD PTR [rcx]
   140025bcb:	call   QWORD PTR [rax+0x18]
   140025bce:	mov    rdi,QWORD PTR [rsp+0x38]
   140025bd3:	mov    QWORD PTR [rbx+0x8],0x0
   140025bdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140025be0:	mov    rbp,QWORD PTR [rsp+0x40]
   140025be5:	add    rsp,0x20
   140025be9:	pop    rsi
   140025bea:	ret    
   140025beb:	int3   
   140025bec:	int3   
   140025bed:	int3   
   140025bee:	int3   
   140025bef:	int3   
   140025bf0:	sub    rsp,0x88
   140025bf7:	lea    rcx,[rsp+0x50]
   140025bfc:	call   QWORD PTR [rip+0xc85e]        # 0x140032460
   140025c02:	mov    eax,DWORD PTR [rsp+0x50]
   140025c06:	lea    r8,[rip+0x1273b]        # 0x140038348
   140025c0d:	mov    ecx,DWORD PTR [rsp+0x64]
   140025c11:	mov    edx,0x80
   140025c16:	mov    r9d,DWORD PTR [rsp+0x60]
   140025c1b:	add    ecx,0x76c
   140025c21:	mov    DWORD PTR [rsp+0x40],eax
   140025c25:	inc    r9d
   140025c28:	mov    eax,DWORD PTR [rsp+0x54]
   140025c2c:	mov    DWORD PTR [rsp+0x38],eax
   140025c30:	mov    eax,DWORD PTR [rsp+0x58]
   140025c34:	mov    DWORD PTR [rsp+0x30],eax
   140025c38:	mov    eax,DWORD PTR [rsp+0x5c]
   140025c3c:	mov    DWORD PTR [rsp+0x28],ecx
   140025c40:	lea    rcx,[rip+0x22689]        # 0x1400482d0
   140025c47:	mov    DWORD PTR [rsp+0x20],eax
   140025c4b:	call   QWORD PTR [rip+0xc91f]        # 0x140032570
   140025c51:	lea    rax,[rip+0x22678]        # 0x1400482d0
   140025c58:	add    rsp,0x88
   140025c5f:	ret    
   140025c60:	mov    r11,rsp
   140025c63:	push   rbp
   140025c64:	push   rsi
   140025c65:	push   r14
   140025c67:	sub    rsp,0x120
   140025c6e:	test   BYTE PTR [rdx+0x4],0x1
   140025c72:	mov    rbp,r8
   140025c75:	mov    r14,rdx
   140025c78:	mov    rsi,rcx
   140025c7b:	jne    0x140025dd1
   140025c81:	movsxd rax,DWORD PTR [rdx]
   140025c84:	movsxd rcx,DWORD PTR [rcx+rax*4+0x88]
   140025c8c:	cmp    ecx,0xf
   140025c8f:	ja     0x140025dd1
   140025c95:	mov    QWORD PTR [r11+0x8],rbx
   140025c99:	or     rbx,0xffffffffffffffff
   140025c9d:	mov    QWORD PTR [r11+0x10],rdi
   140025ca1:	mov    rdi,rbx
   140025ca4:	mov    QWORD PTR [r11+0x18],r15
   140025ca8:	mov    r15,QWORD PTR [rsi+rcx*8+0x8]
   140025cad:	nop    DWORD PTR [rax]
   140025cb0:	inc    rdi
   140025cb3:	cmp    BYTE PTR [rdi+r8*1],0x0
   140025cb8:	jne    0x140025cb0
   140025cba:	cmp    BYTE PTR [rsi+0x488],0x0
   140025cc1:	je     0x140025d33
   140025cc3:	cmp    BYTE PTR [rsi+0x489],0x0
   140025cca:	je     0x140025d17
   140025ccc:	call   0x140025bf0
   140025cd1:	mov    rcx,QWORD PTR [rip+0x214b0]        # 0x140047188
   140025cd8:	mov    r8,rbx
   140025cdb:	add    rcx,0x8
   140025cdf:	mov    r10,QWORD PTR [rcx]
   140025ce2:	inc    r8
   140025ce5:	cmp    BYTE PTR [rax+r8*1],0x0
   140025cea:	jne    0x140025ce2
   140025cec:	mov    r9,r15
   140025cef:	mov    rdx,rax
   140025cf2:	call   QWORD PTR [r10+0x8]
   140025cf6:	mov    rcx,QWORD PTR [rip+0x2148b]        # 0x140047188
   140025cfd:	lea    rdx,[rip+0x12664]        # 0x140038368
   140025d04:	add    rcx,0x8
   140025d08:	mov    r9,r15
   140025d0b:	mov    r8d,0x2
   140025d11:	mov    rax,QWORD PTR [rcx]
   140025d14:	call   QWORD PTR [rax+0x8]
   140025d17:	lea    rdx,[rip+0xe61a]        # 0x140034338
   140025d1e:	mov    rcx,rbp
   140025d21:	call   QWORD PTR [rip+0xc841]        # 0x140032568
   140025d27:	test   rax,rax
   140025d2a:	setne  al
   140025d2d:	mov    BYTE PTR [rsi+0x489],al
   140025d33:	mov    rax,QWORD PTR [rip+0xc64e]        # 0x140032388
   140025d3a:	mov    ecx,DWORD PTR [r14]
   140025d3d:	cmp    ecx,DWORD PTR [rax]
   140025d3f:	je     0x140025d8b
   140025d41:	call   QWORD PTR [rip+0xc721]        # 0x140032468
   140025d47:	test   rax,rax
   140025d4a:	je     0x140025d8b
   140025d4c:	lea    r8,[rax+0x18]
   140025d50:	lea    rdx,[rip+0x12615]        # 0x14003836c
   140025d57:	lea    rcx,[rsp+0x20]
   140025d5c:	call   0x1400259a0
   140025d61:	mov    rcx,QWORD PTR [rip+0x21420]        # 0x140047188
   140025d68:	lea    rdx,[rsp+0x20]
   140025d6d:	add    rcx,0x8
   140025d71:	mov    rax,QWORD PTR [rcx]
   140025d74:	inc    rbx
   140025d77:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140025d7b:	jne    0x140025d74
   140025d7d:	mov    r8,rbx
   140025d80:	lea    rdx,[rsp+0x20]
   140025d85:	mov    r9,r15
   140025d88:	call   QWORD PTR [rax+0x8]
   140025d8b:	mov    rcx,QWORD PTR [rip+0x213f6]        # 0x140047188
   140025d92:	mov    r9,r15
   140025d95:	add    rcx,0x8
   140025d99:	mov    r8d,edi
   140025d9c:	mov    rdx,rbp
   140025d9f:	mov    rax,QWORD PTR [rcx]
   140025da2:	call   QWORD PTR [rax+0x8]
   140025da5:	mov    rcx,QWORD PTR [rip+0x213dc]        # 0x140047188
   140025dac:	mov    rdx,r15
   140025daf:	add    rcx,0x8
   140025db3:	mov    rax,QWORD PTR [rcx]
   140025db6:	call   QWORD PTR [rax+0x40]
   140025db9:	mov    r15,QWORD PTR [rsp+0x150]
   140025dc1:	mov    rdi,QWORD PTR [rsp+0x148]
   140025dc9:	mov    rbx,QWORD PTR [rsp+0x140]
   140025dd1:	add    rsp,0x120
   140025dd8:	pop    r14
   140025dda:	pop    rsi
   140025ddb:	pop    rbp
   140025ddc:	ret    
   140025ddd:	int3   
   140025dde:	int3   
   140025ddf:	int3   
   140025de0:	cmp    edx,0xf
   140025de3:	ja     0x140025e4b
   140025de5:	mov    QWORD PTR [rsp+0x10],rsi
   140025dea:	push   rdi
   140025deb:	sub    rsp,0x20
   140025def:	movsxd rax,edx
   140025df2:	mov    rdi,r9
   140025df5:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
   140025dfa:	mov    rsi,r8
   140025dfd:	mov    QWORD PTR [rsp+0x30],rbx
   140025e02:	lea    rbx,[rcx+rax*8]
   140025e06:	test   rdx,rdx
   140025e09:	je     0x140025e3c
   140025e0b:	mov    rcx,QWORD PTR [rip+0x21376]        # 0x140047188
   140025e12:	add    rcx,0x8
   140025e16:	mov    rax,QWORD PTR [rcx]
   140025e19:	call   QWORD PTR [rax+0x18]
   140025e1c:	mov    rcx,QWORD PTR [rip+0x21365]        # 0x140047188
   140025e23:	mov    r8,rdi
   140025e26:	mov    r9,QWORD PTR [rsp+0x50]
   140025e2b:	add    rcx,0x8
   140025e2f:	mov    rdx,rsi
   140025e32:	mov    rax,QWORD PTR [rcx]
   140025e35:	call   QWORD PTR [rax+0x10]
   140025e38:	mov    QWORD PTR [rbx+0x8],rax
   140025e3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140025e41:	mov    rsi,QWORD PTR [rsp+0x38]
   140025e46:	add    rsp,0x20
   140025e4a:	pop    rdi
   140025e4b:	ret    
   140025e4c:	int3   
   140025e4d:	int3   
   140025e4e:	int3   
   140025e4f:	int3   
   140025e50:	mov    BYTE PTR [rcx+0x488],dl
   140025e56:	mov    BYTE PTR [rcx+0x489],dl
   140025e5c:	ret    
   140025e5d:	int3   
   140025e5e:	int3   
   140025e5f:	int3   
   140025e60:	lea    rax,[rcx+0x88]
   140025e67:	mov    ecx,0x10
   140025e6c:	nop    DWORD PTR [rax+0x0]
   140025e70:	mov    QWORD PTR [rax],0xffffffffffffffff
   140025e77:	mov    QWORD PTR [rax+0x8],0xffffffffffffffff
   140025e7f:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
   140025e87:	lea    rax,[rax+0x40]
   140025e8b:	mov    QWORD PTR [rax-0x28],0xffffffffffffffff
   140025e93:	mov    QWORD PTR [rax-0x20],0xffffffffffffffff
   140025e9b:	mov    QWORD PTR [rax-0x18],0xffffffffffffffff
   140025ea3:	mov    QWORD PTR [rax-0x10],0xffffffffffffffff
   140025eab:	mov    QWORD PTR [rax-0x8],0xffffffffffffffff
   140025eb3:	sub    rcx,0x1
   140025eb7:	jne    0x140025e70
   140025eb9:	ret    
   140025eba:	int3   
   140025ebb:	int3   
   140025ebc:	int3   
   140025ebd:	int3   
   140025ebe:	int3   
   140025ebf:	int3   
   140025ec0:	movsxd rax,edx
   140025ec3:	mov    DWORD PTR [rcx+rax*4+0x88],0xffffffff
   140025ece:	ret    
   140025ecf:	int3   
   140025ed0:	lea    rax,[rip+0x223e1]        # 0x1400482b8
   140025ed7:	ret    
   140025ed8:	int3   
   140025ed9:	int3   
   140025eda:	int3   
   140025edb:	int3   
   140025edc:	int3   
   140025edd:	int3   
   140025ede:	int3   
   140025edf:	int3   
   140025ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140025ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140025eea:	push   rdi
   140025eeb:	sub    rsp,0x240
   140025ef2:	lea    rax,[rip+0x12487]        # 0x140038380
   140025ef9:	mov    rsi,rdx
   140025efc:	mov    QWORD PTR [rcx],rax
   140025eff:	mov    rbx,rcx
   140025f02:	mov    QWORD PTR [rcx+0x8],0x0
   140025f0a:	xor    edx,edx
   140025f0c:	mov    DWORD PTR [rcx+0x10],r8d
   140025f10:	mov    r8d,0x104
   140025f16:	lea    rcx,[rsp+0x20]
   140025f1b:	call   0x1400277b0
   140025f20:	mov    r8d,0x104
   140025f26:	lea    rdx,[rsp+0x20]
   140025f2b:	mov    rcx,rsi
   140025f2e:	call   QWORD PTR [rip+0xc23c]        # 0x140032170
   140025f34:	dec    eax
   140025f36:	cmp    eax,0x103
   140025f3b:	ja     0x140025f7c
   140025f3d:	xor    edx,edx
   140025f3f:	lea    rcx,[rsp+0x130]
   140025f47:	mov    r8d,0x104
   140025f4d:	call   0x1400277b0
   140025f52:	mov    r8d,0x104
   140025f58:	lea    rdx,[rsp+0x130]
   140025f60:	lea    rcx,[rsp+0x20]
   140025f65:	call   QWORD PTR [rip+0xc20d]        # 0x140032178
   140025f6b:	dec    eax
   140025f6d:	lea    rdx,[rsp+0x130]
   140025f75:	cmp    eax,0x103
   140025f7a:	jbe    0x140025f7f
   140025f7c:	mov    rdx,rsi
   140025f7f:	lea    rcx,[rbx+0x8]
   140025f83:	call   0x14001aae0
   140025f88:	lea    r11,[rsp+0x240]
   140025f90:	mov    rax,rbx
   140025f93:	mov    rbx,QWORD PTR [r11+0x10]
   140025f97:	mov    rsi,QWORD PTR [r11+0x18]
   140025f9b:	mov    rsp,r11
   140025f9e:	pop    rdi
   140025f9f:	ret    
   140025fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140025fa5:	push   rdi
   140025fa6:	sub    rsp,0x20
   140025faa:	lea    rax,[rip+0x123cf]        # 0x140038380
   140025fb1:	mov    rbx,rcx
   140025fb4:	mov    QWORD PTR [rcx],rax
   140025fb7:	mov    edi,edx
   140025fb9:	add    rcx,0x8
   140025fbd:	cmp    QWORD PTR [rcx],0x0
   140025fc1:	je     0x140025fc8
   140025fc3:	call   0x14001b030
   140025fc8:	test   dil,0x1
   140025fcc:	je     0x140025fdb
   140025fce:	mov    edx,0x18
   140025fd3:	mov    rcx,rbx
   140025fd6:	call   0x14002639c
   140025fdb:	mov    rax,rbx
   140025fde:	mov    rbx,QWORD PTR [rsp+0x30]
   140025fe3:	add    rsp,0x20
   140025fe7:	pop    rdi
   140025fe8:	ret    
   140025fe9:	int3   
   140025fea:	int3   
   140025feb:	int3   
   140025fec:	int3   
   140025fed:	int3   
   140025fee:	int3   
   140025fef:	int3   
   140025ff0:	rex push rbx
   140025ff2:	sub    rsp,0x20
   140025ff6:	cmp    QWORD PTR [rip+0x2121a],0x0        # 0x140047218
   140025ffe:	mov    rbx,rcx
   140026001:	jne    0x14002600b
   140026003:	mov    al,0x1
   140026005:	add    rsp,0x20
   140026009:	pop    rbx
   14002600a:	ret    
   14002600b:	add    rcx,0x8
   14002600f:	call   0x14001b050
   140026014:	mov    rcx,QWORD PTR [rip+0x211fd]        # 0x140047218
   14002601b:	mov    rdx,rax
   14002601e:	mov    r8d,DWORD PTR [rbx+0x10]
   140026022:	mov    r9,QWORD PTR [rcx]
   140026025:	add    rsp,0x20
   140026029:	pop    rbx
   14002602a:	rex.WB jmp QWORD PTR [r9+0xf0]
   140026031:	int3   
   140026032:	int3   
   140026033:	int3   
   140026034:	int3   
   140026035:	int3   
   140026036:	int3   
   140026037:	int3   
   140026038:	int3   
   140026039:	int3   
   14002603a:	int3   
   14002603b:	int3   
   14002603c:	int3   
   14002603d:	int3   
   14002603e:	int3   
   14002603f:	int3   
   140026040:	rex push rbx
   140026042:	sub    rsp,0x20
   140026046:	cmp    QWORD PTR [rip+0x211ca],0x0        # 0x140047218
   14002604e:	mov    rbx,rcx
   140026051:	jne    0x14002605b
   140026053:	mov    al,0x1
   140026055:	add    rsp,0x20
   140026059:	pop    rbx
   14002605a:	ret    
   14002605b:	add    rcx,0x8
   14002605f:	call   0x14001b050
   140026064:	mov    rcx,QWORD PTR [rip+0x211ad]        # 0x140047218
   14002606b:	mov    rdx,rax
   14002606e:	mov    r8d,DWORD PTR [rbx+0x10]
   140026072:	mov    r9,QWORD PTR [rcx]
   140026075:	add    rsp,0x20
   140026079:	pop    rbx
   14002607a:	rex.WB jmp QWORD PTR [r9+0xf8]
   140026081:	int3   
   140026082:	int3   
   140026083:	int3   
   140026084:	int3   
   140026085:	int3   
   140026086:	int3   
   140026087:	int3   
   140026088:	int3   
   140026089:	int3   
   14002608a:	int3   
   14002608b:	int3   
   14002608c:	int3   
   14002608d:	int3   
   14002608e:	int3   
   14002608f:	int3   
   140026090:	rex push rbx
   140026092:	sub    rsp,0x20
   140026096:	cmp    QWORD PTR [rip+0x2117a],0x0        # 0x140047218
   14002609e:	mov    rbx,rcx
   1400260a1:	jne    0x1400260ac
   1400260a3:	or     eax,0xffffffff
   1400260a6:	add    rsp,0x20
   1400260aa:	pop    rbx
   1400260ab:	ret    
   1400260ac:	add    rcx,0x8
   1400260b0:	call   0x14001b050
   1400260b5:	mov    rcx,QWORD PTR [rip+0x2115c]        # 0x140047218
   1400260bc:	mov    rdx,rax
   1400260bf:	mov    r8d,DWORD PTR [rbx+0x10]
   1400260c3:	mov    r9,QWORD PTR [rcx]
   1400260c6:	add    rsp,0x20
   1400260ca:	pop    rbx
   1400260cb:	rex.WB jmp QWORD PTR [r9+0x100]
   1400260d2:	int3   
   1400260d3:	int3   
   1400260d4:	int3   
   1400260d5:	int3   
   1400260d6:	int3   
   1400260d7:	int3   
   1400260d8:	int3   
   1400260d9:	int3   
   1400260da:	int3   
   1400260db:	int3   
   1400260dc:	int3   
   1400260dd:	int3   
   1400260de:	int3   
   1400260df:	int3   
   1400260e0:	rex push rbx
   1400260e2:	sub    rsp,0x20
   1400260e6:	cmp    QWORD PTR [rip+0x2112a],0x0        # 0x140047218
   1400260ee:	mov    rbx,rdx
   1400260f1:	jne    0x1400260fb
   1400260f3:	mov    al,0x1
   1400260f5:	add    rsp,0x20
   1400260f9:	pop    rbx
   1400260fa:	ret    
   1400260fb:	add    rcx,0x8
   1400260ff:	call   0x14001b050
   140026104:	mov    rcx,QWORD PTR [rip+0x2110d]        # 0x140047218
   14002610b:	mov    r8,rax
   14002610e:	mov    rdx,rbx
   140026111:	mov    r9,QWORD PTR [rcx]
   140026114:	add    rsp,0x20
   140026118:	pop    rbx
   140026119:	rex.WB jmp QWORD PTR [r9+0x238]
   140026120:	sub    rsp,0x28
   140026124:	cmp    QWORD PTR [rip+0x210ec],0x0        # 0x140047218
   14002612c:	jne    0x140026135
   14002612e:	mov    al,0x1
   140026130:	add    rsp,0x28
   140026134:	ret    
   140026135:	add    rcx,0x8
   140026139:	call   0x14001b050
   14002613e:	mov    rcx,QWORD PTR [rip+0x210d3]        # 0x140047218
   140026145:	mov    rdx,rax
   140026148:	mov    r8,QWORD PTR [rcx]
   14002614b:	add    rsp,0x28
   14002614f:	rex.WB jmp QWORD PTR [r8+0x178]
   140026156:	int3   
   140026157:	int3   
   140026158:	int3   
   140026159:	int3   
   14002615a:	int3   
   14002615b:	int3   
   14002615c:	int3   
   14002615d:	int3   
   14002615e:	int3   
   14002615f:	int3   
   140026160:	rex push rbx
   140026162:	sub    rsp,0x20
   140026166:	cmp    QWORD PTR [rip+0x210aa],0x0        # 0x140047218
   14002616e:	mov    rbx,rcx
   140026171:	jne    0x14002617b
   140026173:	mov    al,0x1
   140026175:	add    rsp,0x20
   140026179:	pop    rbx
   14002617a:	ret    
   14002617b:	add    rcx,0x8
   14002617f:	call   0x14001b050
   140026184:	mov    rcx,QWORD PTR [rip+0x2108d]        # 0x140047218
   14002618b:	xor    r8d,r8d
   14002618e:	mov    r9d,DWORD PTR [rbx+0x10]
   140026192:	mov    rdx,rax
   140026195:	mov    r10,QWORD PTR [rcx]
   140026198:	add    rsp,0x20
   14002619c:	pop    rbx
   14002619d:	rex.WB jmp QWORD PTR [r10+0x218]
   1400261a4:	int3   
   1400261a5:	int3   
   1400261a6:	int3   
   1400261a7:	int3   
   1400261a8:	int3   
   1400261a9:	int3   
   1400261aa:	int3   
   1400261ab:	int3   
   1400261ac:	int3   
   1400261ad:	int3   
   1400261ae:	int3   
   1400261af:	int3   
   1400261b0:	rex push rbx
   1400261b2:	sub    rsp,0x20
   1400261b6:	mov    rbx,QWORD PTR [rip+0x2219b]        # 0x140048358
   1400261bd:	test   rbx,rbx
   1400261c0:	je     0x1400261ef
   1400261c2:	mov    rax,QWORD PTR [rbx+0x8]
   1400261c6:	cmp    BYTE PTR [rax+0x24],0x0
   1400261ca:	jne    0x1400261e7
   1400261cc:	cmp    BYTE PTR [rax+0x25],0x0
   1400261d0:	jne    0x1400261e7
   1400261d2:	mov    BYTE PTR [rax+0x24],0x1
   1400261d6:	mov    rcx,QWORD PTR [rip+0x20ffb]        # 0x1400471d8
   1400261dd:	mov    rdx,QWORD PTR [rbx+0x8]
   1400261e1:	mov    rax,QWORD PTR [rcx]
   1400261e4:	call   QWORD PTR [rax+0x10]
   1400261e7:	mov    rbx,QWORD PTR [rbx]
   1400261ea:	test   rbx,rbx
   1400261ed:	jne    0x1400261c2
   1400261ef:	add    rsp,0x20
   1400261f3:	pop    rbx
   1400261f4:	ret    
   1400261f5:	int3   
   1400261f6:	int3   
   1400261f7:	int3   
   1400261f8:	int3   
   1400261f9:	int3   
   1400261fa:	int3   
   1400261fb:	int3   
   1400261fc:	int3   
   1400261fd:	int3   
   1400261fe:	int3   
   1400261ff:	int3   
   140026200:	rex push rbx
   140026202:	sub    rsp,0x20
   140026206:	mov    rbx,QWORD PTR [rip+0x2214b]        # 0x140048358
   14002620d:	test   rbx,rbx
   140026210:	je     0x14002624b
   140026212:	mov    QWORD PTR [rsp+0x30],rdi
   140026217:	nop    WORD PTR [rax+rax*1+0x0]
   140026220:	mov    rdi,QWORD PTR [rbx+0x8]
   140026224:	cmp    BYTE PTR [rdi+0x24],0x0
   140026228:	je     0x14002623e
   14002622a:	mov    rcx,QWORD PTR [rip+0x20fa7]        # 0x1400471d8
   140026231:	mov    rdx,rdi
   140026234:	mov    rax,QWORD PTR [rcx]
   140026237:	call   QWORD PTR [rax+0x18]
   14002623a:	mov    BYTE PTR [rdi+0x24],0x0
   14002623e:	mov    rbx,QWORD PTR [rbx]
   140026241:	test   rbx,rbx
   140026244:	jne    0x140026220
   140026246:	mov    rdi,QWORD PTR [rsp+0x30]
   14002624b:	add    rsp,0x20
   14002624f:	pop    rbx
   140026250:	ret    
   140026251:	int3   
   140026252:	int3   
   140026253:	int3   
   140026254:	int3   
   140026255:	int3   
   140026256:	int3   
   140026257:	int3   
   140026258:	int3   
   140026259:	int3   
   14002625a:	int3   
   14002625b:	int3   
   14002625c:	int3   
   14002625d:	int3   
   14002625e:	int3   
   14002625f:	int3   
   140026260:	mov    eax,DWORD PTR [rip+0x220fa]        # 0x140048360
   140026266:	ret    
   140026267:	int3   
   140026268:	int3   
   140026269:	int3   
   14002626a:	int3   
   14002626b:	int3   
   14002626c:	int3   
   14002626d:	int3   
   14002626e:	int3   
   14002626f:	int3   
   140026270:	mov    r9,QWORD PTR [rip+0x220e1]        # 0x140048358
   140026277:	xor    r10d,r10d
   14002627a:	mov    eax,r10d
   14002627d:	mov    r11d,ecx
   140026280:	test   r9,r9
   140026283:	je     0x1400262a2
   140026285:	cmp    r10d,r11d
   140026288:	jl     0x14002629a
   14002628a:	mov    rcx,QWORD PTR [r9+0x8]
   14002628e:	mov    QWORD PTR [rdx+rax*8],rcx
   140026292:	inc    rax
   140026295:	cmp    rax,r8
   140026298:	jae    0x1400262a2
   14002629a:	mov    r9,QWORD PTR [r9]
   14002629d:	inc    r10d
   1400262a0:	jmp    0x140026280
   1400262a2:	ret    
   1400262a3:	int3   
   1400262a4:	int3   
   1400262a5:	int3   
   1400262a6:	int3   
   1400262a7:	int3   
   1400262a8:	int3   
   1400262a9:	int3   
   1400262aa:	int3   
   1400262ab:	int3   
   1400262ac:	int3   
   1400262ad:	int3   
   1400262ae:	int3   
   1400262af:	int3   
   1400262b0:	sub    rsp,0x28
   1400262b4:	mov    rcx,QWORD PTR [rip+0x20efd]        # 0x1400471b8
   1400262bb:	test   rcx,rcx
   1400262be:	je     0x1400262d5
   1400262c0:	cmp    BYTE PTR [rip+0x220ad],0x0        # 0x140048374
   1400262c7:	jne    0x1400262d5
   1400262c9:	call   0x1400262e0
   1400262ce:	mov    BYTE PTR [rip+0x2209f],0x1        # 0x140048374
   1400262d5:	add    rsp,0x28
   1400262d9:	ret    
   1400262da:	int3   
   1400262db:	int3   
   1400262dc:	int3   
   1400262dd:	int3   
   1400262de:	int3   
   1400262df:	int3   
   1400262e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400262e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400262ea:	push   rdi
   1400262eb:	sub    rsp,0x20
   1400262ef:	mov    rsi,rcx
   1400262f2:	xor    edi,edi
   1400262f4:	mov    rbx,QWORD PTR [rip+0x2206d]        # 0x140048368
   1400262fb:	test   rbx,rbx
   1400262fe:	je     0x140026317
   140026300:	mov    rax,QWORD PTR [rbx]
   140026303:	mov    r8d,edi
   140026306:	mov    rdx,rsi
   140026309:	mov    rcx,rbx
   14002630c:	call   QWORD PTR [rax]
   14002630e:	mov    rbx,QWORD PTR [rbx+0x8]
   140026312:	test   rbx,rbx
   140026315:	jne    0x140026300
   140026317:	inc    edi
   140026319:	cmp    edi,0x2
   14002631c:	jl     0x1400262f4
   14002631e:	mov    rbx,QWORD PTR [rsi]
   140026321:	call   0x140007c10
   140026326:	mov    rdx,rax
   140026329:	mov    rcx,rsi
   14002632c:	mov    rax,QWORD PTR [rbx+0xc8]
   140026333:	mov    rbx,QWORD PTR [rsp+0x30]
   140026338:	mov    rsi,QWORD PTR [rsp+0x38]
   14002633d:	add    rsp,0x20
   140026341:	pop    rdi
   140026342:	rex.W jmp rax
   140026345:	int3   
   140026346:	int3   
   140026347:	int3   
   140026348:	int3   
   140026349:	int3   
   14002634a:	int3   
   14002634b:	int3   
   14002634c:	int3   
   14002634d:	int3   
   14002634e:	int3   
   14002634f:	int3   
   140026350:	rex push rbx
   140026352:	sub    rsp,0x20
   140026356:	mov    rbx,rdx
   140026359:	mov    rdx,rcx
   14002635c:	lea    rcx,[rip+0xd9ad]        # 0x140033d10
   140026363:	call   0x140028260
   140026368:	test   eax,eax
   14002636a:	je     0x140026374
   14002636c:	xor    al,al
   14002636e:	add    rsp,0x20
   140026372:	pop    rbx
   140026373:	ret    
   140026374:	cmp    BYTE PTR [rip+0x21ff9],0x0        # 0x140048374
   14002637b:	jne    0x140026393
   14002637d:	mov    rcx,rbx
   140026380:	mov    QWORD PTR [rip+0x20e31],rbx        # 0x1400471b8
   140026387:	call   0x1400262e0
   14002638c:	mov    BYTE PTR [rip+0x21fe1],0x1        # 0x140048374
   140026393:	mov    al,0x1
   140026395:	add    rsp,0x20
   140026399:	pop    rbx
   14002639a:	ret    
   14002639b:	int3   
   14002639c:	jmp    0x140007bd0
   1400263a1:	int3   
   1400263a2:	int3   
   1400263a3:	int3   
   1400263a4:	int3   
   1400263a5:	int3   
   1400263a6:	int3   
   1400263a7:	int3   
   1400263a8:	int3   
   1400263a9:	int3   
   1400263aa:	int3   
   1400263ab:	int3   
   1400263ac:	int3   
   1400263ad:	int3   
   1400263ae:	int3   
   1400263af:	int3   
   1400263b0:	int3   
   1400263b1:	int3   
   1400263b2:	int3   
   1400263b3:	int3   
   1400263b4:	int3   
   1400263b5:	int3   
   1400263b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400263c0:	sub    rsp,0x10
   1400263c4:	mov    QWORD PTR [rsp],r10
   1400263c8:	mov    QWORD PTR [rsp+0x8],r11
   1400263cd:	xor    r11,r11
   1400263d0:	lea    r10,[rsp+0x18]
   1400263d5:	sub    r10,rax
   1400263d8:	cmovb  r10,r11
   1400263dc:	mov    r11,QWORD PTR gs:0x10
   1400263e5:	cmp    r10,r11
   1400263e8:	bnd jae 0x140026402
   1400263eb:	and    r10w,0xf000
   1400263f1:	lea    r11,[r11-0x1000]
   1400263f8:	mov    BYTE PTR [r11],0x0
   1400263fc:	cmp    r10,r11
   1400263ff:	bnd jne 0x1400263f1
   140026402:	mov    r10,QWORD PTR [rsp]
   140026406:	mov    r11,QWORD PTR [rsp+0x8]
   14002640b:	add    rsp,0x10
   14002640f:	bnd ret 
   140026411:	int3   
   140026412:	int3   
   140026413:	int3   
   140026414:	rex push rbx
   140026416:	sub    rsp,0x20
   14002641a:	lea    rax,[rip+0x11f9f]        # 0x1400383c0
   140026421:	mov    rbx,rcx
   140026424:	mov    QWORD PTR [rcx],rax
   140026427:	test   dl,0x1
   14002642a:	je     0x140026436
   14002642c:	mov    edx,0x18
   140026431:	call   0x14002639c
   140026436:	mov    rax,rbx
   140026439:	add    rsp,0x20
   14002643d:	pop    rbx
   14002643e:	ret    
   14002643f:	int3   
   140026440:	sub    rsp,0x28
   140026444:	call   0x140026b38
   140026449:	test   eax,eax
   14002644b:	je     0x14002646e
   14002644d:	mov    rax,QWORD PTR gs:0x30
   140026456:	mov    rcx,QWORD PTR [rax+0x8]
   14002645a:	jmp    0x140026461
   14002645c:	cmp    rcx,rax
   14002645f:	je     0x140026475
   140026461:	xor    eax,eax
   140026463:	lock cmpxchg QWORD PTR [rip+0x21f14],rcx        # 0x140048380
   14002646c:	jne    0x14002645c
   14002646e:	xor    al,al
   140026470:	add    rsp,0x28
   140026474:	ret    
   140026475:	mov    al,0x1
   140026477:	jmp    0x140026470
   140026479:	int3   
   14002647a:	int3   
   14002647b:	int3   
   14002647c:	rex push rbx
   14002647e:	sub    rsp,0x20
   140026482:	movzx  eax,BYTE PTR [rip+0x21f2f]        # 0x1400483b8
   140026489:	test   ecx,ecx
   14002648b:	mov    ebx,0x1
   140026490:	cmove  eax,ebx
   140026493:	mov    BYTE PTR [rip+0x21f1f],al        # 0x1400483b8
   140026499:	call   0x14002695c
   14002649e:	call   0x140027ab4
   1400264a3:	test   al,al
   1400264a5:	jne    0x1400264ab
   1400264a7:	xor    al,al
   1400264a9:	jmp    0x1400264bf
   1400264ab:	call   0x140029a90
   1400264b0:	test   al,al
   1400264b2:	jne    0x1400264bd
   1400264b4:	xor    ecx,ecx
   1400264b6:	call   0x140027ae8
   1400264bb:	jmp    0x1400264a7
   1400264bd:	mov    al,bl
   1400264bf:	add    rsp,0x20
   1400264c3:	pop    rbx
   1400264c4:	ret    
   1400264c5:	int3   
   1400264c6:	int3   
   1400264c7:	int3   
   1400264c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400264cd:	push   rbp
   1400264ce:	mov    rbp,rsp
   1400264d1:	sub    rsp,0x40
   1400264d5:	mov    ebx,ecx
   1400264d7:	cmp    ecx,0x1
   1400264da:	ja     0x140026586
   1400264e0:	call   0x140026b38
   1400264e5:	test   eax,eax
   1400264e7:	je     0x140026514
   1400264e9:	test   ebx,ebx
   1400264eb:	jne    0x140026514
   1400264ed:	lea    rcx,[rip+0x21e94]        # 0x140048388
   1400264f4:	call   0x1400298c4
   1400264f9:	test   eax,eax
   1400264fb:	je     0x140026501
   1400264fd:	xor    al,al
   1400264ff:	jmp    0x14002657b
   140026501:	lea    rcx,[rip+0x21e98]        # 0x1400483a0
   140026508:	call   0x1400298c4
   14002650d:	test   eax,eax
   14002650f:	sete   al
   140026512:	jmp    0x14002657b
   140026514:	mov    rdx,QWORD PTR [rip+0x1fccd]        # 0x1400461e8
   14002651b:	or     r8,0xffffffffffffffff
   14002651f:	mov    eax,edx
   140026521:	mov    ecx,0x40
   140026526:	and    eax,0x3f
   140026529:	sub    ecx,eax
   14002652b:	mov    al,0x1
   14002652d:	ror    r8,cl
   140026530:	xor    r8,rdx
   140026533:	mov    QWORD PTR [rbp-0x20],r8
   140026537:	mov    QWORD PTR [rbp-0x18],r8
   14002653b:	movups xmm0,XMMWORD PTR [rbp-0x20]
   14002653f:	mov    QWORD PTR [rbp-0x10],r8
   140026543:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140026548:	movups XMMWORD PTR [rip+0x21e39],xmm0        # 0x140048388
   14002654f:	mov    QWORD PTR [rbp-0x20],r8
   140026553:	mov    QWORD PTR [rbp-0x18],r8
   140026557:	movups xmm0,XMMWORD PTR [rbp-0x20]
   14002655b:	mov    QWORD PTR [rbp-0x10],r8
   14002655f:	movsd  QWORD PTR [rip+0x21e31],xmm1        # 0x140048398
   140026567:	movsd  xmm1,QWORD PTR [rbp-0x10]
   14002656c:	movups XMMWORD PTR [rip+0x21e2d],xmm0        # 0x1400483a0
   140026573:	movsd  QWORD PTR [rip+0x21e35],xmm1        # 0x1400483b0
   14002657b:	mov    rbx,QWORD PTR [rsp+0x50]
   140026580:	add    rsp,0x40
   140026584:	pop    rbp
   140026585:	ret    
   140026586:	mov    ecx,0x5
   14002658b:	call   0x140026b4c
   140026590:	int3   
   140026591:	int3   
   140026592:	int3   
   140026593:	int3   
   140026594:	sub    rsp,0x18
   140026598:	mov    r8,rcx
   14002659b:	mov    eax,0x5a4d
   1400265a0:	cmp    WORD PTR [rip+0xfffffffffffd9a59],ax        # 0x140000000
   1400265a7:	jne    0x140026622
   1400265a9:	movsxd rax,DWORD PTR [rip+0xfffffffffffd9a8c]        # 0x14000003c
   1400265b0:	lea    rdx,[rip+0xfffffffffffd9a49]        # 0x140000000
   1400265b7:	lea    rcx,[rax+rdx*1]
   1400265bb:	cmp    DWORD PTR [rcx],0x4550
   1400265c1:	jne    0x140026622
   1400265c3:	mov    eax,0x20b
   1400265c8:	cmp    WORD PTR [rcx+0x18],ax
   1400265cc:	jne    0x140026622
   1400265ce:	sub    r8,rdx
   1400265d1:	movzx  eax,WORD PTR [rcx+0x14]
   1400265d5:	lea    rdx,[rcx+0x18]
   1400265d9:	add    rdx,rax
   1400265dc:	movzx  eax,WORD PTR [rcx+0x6]
   1400265e0:	lea    rcx,[rax+rax*4]
   1400265e4:	lea    r9,[rdx+rcx*8]
   1400265e8:	mov    QWORD PTR [rsp],rdx
   1400265ec:	cmp    rdx,r9
   1400265ef:	je     0x140026609
   1400265f1:	mov    ecx,DWORD PTR [rdx+0xc]
   1400265f4:	cmp    r8,rcx
   1400265f7:	jb     0x140026603
   1400265f9:	mov    eax,DWORD PTR [rdx+0x8]
   1400265fc:	add    eax,ecx
   1400265fe:	cmp    r8,rax
   140026601:	jb     0x14002660b
   140026603:	add    rdx,0x28
   140026607:	jmp    0x1400265e8
   140026609:	xor    edx,edx
   14002660b:	test   rdx,rdx
   14002660e:	jne    0x140026614
   140026610:	xor    al,al
   140026612:	jmp    0x140026628
   140026614:	cmp    DWORD PTR [rdx+0x24],0x0
   140026618:	jge    0x14002661e
   14002661a:	xor    al,al
   14002661c:	jmp    0x140026628
   14002661e:	mov    al,0x1
   140026620:	jmp    0x140026628
   140026622:	xor    al,al
   140026624:	jmp    0x140026628
   140026626:	xor    al,al
   140026628:	add    rsp,0x18
   14002662c:	ret    
   14002662d:	int3   
   14002662e:	int3   
   14002662f:	int3   
   140026630:	rex push rbx
   140026632:	sub    rsp,0x20
   140026636:	mov    bl,cl
   140026638:	call   0x140026b38
   14002663d:	xor    edx,edx
   14002663f:	test   eax,eax
   140026641:	je     0x14002664e
   140026643:	test   bl,bl
   140026645:	jne    0x14002664e
   140026647:	xchg   QWORD PTR [rip+0x21d32],rdx        # 0x140048380
   14002664e:	add    rsp,0x20
   140026652:	pop    rbx
   140026653:	ret    
   140026654:	rex push rbx
   140026656:	sub    rsp,0x20
   14002665a:	cmp    BYTE PTR [rip+0x21d57],0x0        # 0x1400483b8
   140026661:	mov    bl,cl
   140026663:	je     0x140026669
   140026665:	test   dl,dl
   140026667:	jne    0x140026677
   140026669:	mov    cl,bl
   14002666b:	call   0x140029aa4
   140026670:	mov    cl,bl
   140026672:	call   0x140027ae8
   140026677:	mov    al,0x1
   140026679:	add    rsp,0x20
   14002667d:	pop    rbx
   14002667e:	ret    
   14002667f:	int3   
   140026680:	rex push rbx
   140026682:	sub    rsp,0x20
   140026686:	mov    rdx,QWORD PTR [rip+0x1fb5b]        # 0x1400461e8
   14002668d:	mov    rbx,rcx
   140026690:	mov    ecx,edx
   140026692:	xor    rdx,QWORD PTR [rip+0x21cef]        # 0x140048388
   140026699:	and    ecx,0x3f
   14002669c:	ror    rdx,cl
   14002669f:	cmp    rdx,0xffffffffffffffff
   1400266a3:	jne    0x1400266af
   1400266a5:	mov    rcx,rbx
   1400266a8:	call   0x140029878
   1400266ad:	jmp    0x1400266be
   1400266af:	mov    rdx,rbx
   1400266b2:	lea    rcx,[rip+0x21ccf]        # 0x140048388
   1400266b9:	call   0x140029904
   1400266be:	xor    ecx,ecx
   1400266c0:	test   eax,eax
   1400266c2:	cmove  rcx,rbx
   1400266c6:	mov    rax,rcx
   1400266c9:	add    rsp,0x20
   1400266cd:	pop    rbx
   1400266ce:	ret    
   1400266cf:	int3   
   1400266d0:	sub    rsp,0x28
   1400266d4:	call   0x140026680
   1400266d9:	neg    rax
   1400266dc:	sbb    eax,eax
   1400266de:	neg    eax
   1400266e0:	dec    eax
   1400266e2:	add    rsp,0x28
   1400266e6:	ret    
   1400266e7:	int3   
   1400266e8:	rex push rbx
   1400266ea:	sub    rsp,0x20
   1400266ee:	mov    ecx,0x1
   1400266f3:	call   0x140029ac0
   1400266f8:	call   0x140026de4
   1400266fd:	mov    ecx,eax
   1400266ff:	call   0x140029c24
   140026704:	call   0x140029d88
   140026709:	mov    rbx,rax
   14002670c:	call   0x140004ae0
   140026711:	mov    ecx,0x1
   140026716:	mov    DWORD PTR [rbx],eax
   140026718:	call   0x1400264c8
   14002671d:	test   al,al
   14002671f:	je     0x14002678d
   140026721:	call   0x140026e3c
   140026726:	lea    rcx,[rip+0x75b]        # 0x140026e88
   14002672d:	call   0x1400266d0
   140026732:	call   0x140026b30
   140026737:	mov    ecx,eax
   140026739:	call   0x140028fdc
   14002673e:	test   eax,eax
   140026740:	jne    0x140026798
   140026742:	call   0x140026dec
   140026747:	call   0x140026e20
   14002674c:	test   eax,eax
   14002674e:	je     0x14002675c
   140026750:	lea    rcx,[rip+0xfffffffffffde389]        # 0x140004ae0
   140026757:	call   0x140029b38
   14002675c:	call   0x14001e1b0
   140026761:	call   0x14001e1b0
   140026766:	call   0x140004ae0
   14002676b:	mov    ecx,eax
   14002676d:	call   0x140029cf0
   140026772:	call   0x140029990
   140026777:	test   al,al
   140026779:	je     0x140026780
   14002677b:	call   0x1400294b8
   140026780:	call   0x140004ae0
   140026785:	xor    eax,eax
   140026787:	add    rsp,0x20
   14002678b:	pop    rbx
   14002678c:	ret    
   14002678d:	mov    ecx,0x7
   140026792:	call   0x140026b4c
   140026797:	int3   
   140026798:	mov    ecx,0x7
   14002679d:	call   0x140026b4c
   1400267a2:	int3   
   1400267a3:	int3   
   1400267a4:	sub    rsp,0x28
   1400267a8:	call   0x140026e04
   1400267ad:	xor    eax,eax
   1400267af:	add    rsp,0x28
   1400267b3:	ret    
   1400267b4:	sub    rsp,0x28
   1400267b8:	call   0x140026ce8
   1400267bd:	call   0x140004ae0
   1400267c2:	mov    ecx,eax
   1400267c4:	add    rsp,0x28
   1400267c8:	jmp    0x140029d5c
   1400267cd:	int3   
   1400267ce:	int3   
   1400267cf:	int3   
   1400267d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400267d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400267da:	push   rdi
   1400267db:	sub    rsp,0x30
   1400267df:	mov    ecx,0x1
   1400267e4:	call   0x14002647c
   1400267e9:	test   al,al
   1400267eb:	jne    0x1400267f8
   1400267ed:	mov    ecx,0x7
   1400267f2:	call   0x140026b4c
   1400267f7:	int3   
   1400267f8:	xor    sil,sil
   1400267fb:	mov    BYTE PTR [rsp+0x20],sil
   140026800:	call   0x140026440
   140026805:	mov    bl,al
   140026807:	mov    ecx,DWORD PTR [rip+0x21b6b]        # 0x140048378
   14002680d:	cmp    ecx,0x1
   140026810:	jne    0x14002681c
   140026812:	mov    ecx,0x7
   140026817:	call   0x140026b4c
   14002681c:	test   ecx,ecx
   14002681e:	jne    0x14002686a
   140026820:	mov    DWORD PTR [rip+0x21b4e],0x1        # 0x140048378
   14002682a:	lea    rdx,[rip+0xbf07]        # 0x140032738
   140026831:	lea    rcx,[rip+0xbed0]        # 0x140032708
   140026838:	call   0x140029bd8
   14002683d:	test   eax,eax
   14002683f:	je     0x14002684b
   140026841:	mov    eax,0xff
   140026846:	jmp    0x140026937
   14002684b:	lea    rdx,[rip+0xbeae]        # 0x140032700
   140026852:	lea    rcx,[rip+0xbd97]        # 0x1400325f0
   140026859:	call   0x140029b60
   14002685e:	mov    DWORD PTR [rip+0x21b10],0x2        # 0x140048378
   140026868:	jmp    0x140026872
   14002686a:	mov    sil,0x1
   14002686d:	mov    BYTE PTR [rsp+0x20],sil
   140026872:	mov    cl,bl
   140026874:	call   0x140026630
   140026879:	call   0x140026e2c
   14002687e:	mov    rbx,rax
   140026881:	cmp    QWORD PTR [rax],0x0
   140026885:	je     0x1400268a9
   140026887:	mov    rcx,rax
   14002688a:	call   0x140026594
   14002688f:	test   al,al
   140026891:	je     0x1400268a9
   140026893:	mov    rbx,QWORD PTR [rbx]
   140026896:	mov    rcx,rbx
   140026899:	call   0x140026d30
   14002689e:	xor    r8d,r8d
   1400268a1:	lea    edx,[r8+0x2]
   1400268a5:	xor    ecx,ecx
   1400268a7:	call   rbx
   1400268a9:	call   0x140026e34
   1400268ae:	mov    rbx,rax
   1400268b1:	cmp    QWORD PTR [rax],0x0
   1400268b5:	je     0x1400268cb
   1400268b7:	mov    rcx,rax
   1400268ba:	call   0x140026594
   1400268bf:	test   al,al
   1400268c1:	je     0x1400268cb
   1400268c3:	mov    rcx,QWORD PTR [rbx]
   1400268c6:	call   0x140028d6c
   1400268cb:	call   0x140029c94
   1400268d0:	mov    rdi,rax
   1400268d3:	call   0x140029c8c
   1400268d8:	mov    rbx,rax
   1400268db:	call   0x140029494
   1400268e0:	mov    r8,rax
   1400268e3:	mov    rdx,QWORD PTR [rdi]
   1400268e6:	mov    ecx,DWORD PTR [rbx]
   1400268e8:	call   0x140006ba0
   1400268ed:	mov    ebx,eax
   1400268ef:	call   0x140026c94
   1400268f4:	test   al,al
   1400268f6:	jne    0x1400268ff
   1400268f8:	mov    ecx,ebx
   1400268fa:	call   0x140028db0
   1400268ff:	test   sil,sil
   140026902:	jne    0x140026909
   140026904:	call   0x140028d50
   140026909:	xor    edx,edx
   14002690b:	mov    cl,0x1
   14002690d:	call   0x140026654
   140026912:	mov    eax,ebx
   140026914:	jmp    0x140026937
   140026916:	mov    ebx,eax
   140026918:	call   0x140026c94
   14002691d:	test   al,al
   14002691f:	jne    0x140026929
   140026921:	mov    ecx,ebx
   140026923:	call   0x140028d60
   140026928:	int3   
   140026929:	cmp    BYTE PTR [rsp+0x20],0x0
   14002692e:	jne    0x140026935
   140026930:	call   0x140028d40
   140026935:	mov    eax,ebx
   140026937:	mov    rbx,QWORD PTR [rsp+0x40]
   14002693c:	mov    rsi,QWORD PTR [rsp+0x48]
   140026941:	add    rsp,0x30
   140026945:	pop    rdi
   140026946:	ret    
   140026947:	int3   
   140026948:	sub    rsp,0x28
   14002694c:	call   0x140026d38
   140026951:	add    rsp,0x28
   140026955:	jmp    0x1400267d0
   14002695a:	int3   
   14002695b:	int3   
   14002695c:	mov    QWORD PTR [rsp+0x10],rbx
   140026961:	mov    QWORD PTR [rsp+0x18],rdi
   140026966:	push   rbp
   140026967:	mov    rbp,rsp
   14002696a:	sub    rsp,0x20
   14002696e:	and    DWORD PTR [rbp-0x18],0x0
   140026972:	xor    ecx,ecx
   140026974:	xor    eax,eax
   140026976:	mov    DWORD PTR [rip+0x1f884],0x2        # 0x140046204
   140026980:	cpuid  
   140026982:	mov    r8d,ecx
   140026985:	mov    DWORD PTR [rip+0x1f871],0x1        # 0x140046200
   14002698f:	xor    ecx,0x444d4163
   140026995:	mov    r9d,edx
   140026998:	mov    r10d,edx
   14002699b:	xor    r9d,0x69746e65
   1400269a2:	xor    r10d,0x49656e69
   1400269a9:	xor    r8d,0x6c65746e
   1400269b0:	or     r10d,r8d
   1400269b3:	mov    r11d,ebx
   1400269b6:	mov    r8d,DWORD PTR [rip+0x219ff]        # 0x1400483bc
   1400269bd:	xor    r11d,0x68747541
   1400269c4:	or     r11d,r9d
   1400269c7:	mov    edx,ebx
   1400269c9:	or     r11d,ecx
   1400269cc:	xor    edx,0x756e6547
   1400269d2:	xor    ecx,ecx
   1400269d4:	mov    edi,eax
   1400269d6:	or     r10d,edx
   1400269d9:	mov    eax,0x1
   1400269de:	cpuid  
   1400269e0:	mov    DWORD PTR [rbp-0x10],eax
   1400269e3:	mov    r9d,ecx
   1400269e6:	mov    DWORD PTR [rbp-0x8],r9d
   1400269ea:	mov    ecx,eax
   1400269ec:	mov    DWORD PTR [rbp-0xc],ebx
   1400269ef:	mov    DWORD PTR [rbp-0x4],edx
   1400269f2:	test   r10d,r10d
   1400269f5:	jne    0x140026a49
   1400269f7:	or     QWORD PTR [rip+0x1f809],0xffffffffffffffff        # 0x140046208
   1400269ff:	or     r8d,0x4
   140026a03:	and    eax,0xfff3ff0
   140026a08:	mov    DWORD PTR [rip+0x219ad],r8d        # 0x1400483bc
   140026a0f:	cmp    eax,0x106c0
   140026a14:	je     0x140026a3e
   140026a16:	cmp    eax,0x20660
   140026a1b:	je     0x140026a3e
   140026a1d:	cmp    eax,0x20670
   140026a22:	je     0x140026a3e
   140026a24:	add    eax,0xfffcf9b0
   140026a29:	cmp    eax,0x20
   140026a2c:	ja     0x140026a49
   140026a2e:	movabs rbx,0x100010001
   140026a38:	bt     rbx,rax
   140026a3c:	jae    0x140026a49
   140026a3e:	or     r8d,0x1
   140026a42:	mov    DWORD PTR [rip+0x21973],r8d        # 0x1400483bc
   140026a49:	test   r11d,r11d
   140026a4c:	jne    0x140026a67
   140026a4e:	and    ecx,0xff00f00
   140026a54:	cmp    ecx,0x600f00
   140026a5a:	jb     0x140026a67
   140026a5c:	or     r8d,0x4
   140026a60:	mov    DWORD PTR [rip+0x21955],r8d        # 0x1400483bc
   140026a67:	mov    eax,0x7
   140026a6c:	mov    DWORD PTR [rbp-0x20],edx
   140026a6f:	mov    DWORD PTR [rbp-0x1c],r9d
   140026a73:	cmp    edi,eax
   140026a75:	jl     0x140026a9b
   140026a77:	xor    ecx,ecx
   140026a79:	cpuid  
   140026a7b:	mov    DWORD PTR [rbp-0x10],eax
   140026a7e:	mov    DWORD PTR [rbp-0xc],ebx
   140026a81:	mov    DWORD PTR [rbp-0x8],ecx
   140026a84:	mov    DWORD PTR [rbp-0x4],edx
   140026a87:	mov    DWORD PTR [rbp-0x18],ebx
   140026a8a:	bt     ebx,0x9
   140026a8e:	jae    0x140026a9b
   140026a90:	or     r8d,0x2
   140026a94:	mov    DWORD PTR [rip+0x21921],r8d        # 0x1400483bc
   140026a9b:	bt     r9d,0x14
   140026aa0:	jae    0x140026b10
   140026aa2:	mov    DWORD PTR [rip+0x1f754],0x2        # 0x140046200
   140026aac:	mov    DWORD PTR [rip+0x1f74e],0x6        # 0x140046204
   140026ab6:	bt     r9d,0x1b
   140026abb:	jae    0x140026b10
   140026abd:	bt     r9d,0x1c
   140026ac2:	jae    0x140026b10
   140026ac4:	xor    ecx,ecx
   140026ac6:	xgetbv 
   140026ac9:	shl    rdx,0x20
   140026acd:	or     rdx,rax
   140026ad0:	mov    QWORD PTR [rbp+0x10],rdx
   140026ad4:	mov    rax,QWORD PTR [rbp+0x10]
   140026ad8:	and    al,0x6
   140026ada:	cmp    al,0x6
   140026adc:	jne    0x140026b10
   140026ade:	mov    eax,DWORD PTR [rip+0x1f720]        # 0x140046204
   140026ae4:	or     eax,0x8
   140026ae7:	mov    DWORD PTR [rip+0x1f70f],0x3        # 0x140046200
   140026af1:	test   BYTE PTR [rbp-0x18],0x20
   140026af5:	mov    DWORD PTR [rip+0x1f709],eax        # 0x140046204
   140026afb:	je     0x140026b10
   140026afd:	or     eax,0x20
   140026b00:	mov    DWORD PTR [rip+0x1f6f6],0x5        # 0x140046200
   140026b0a:	mov    DWORD PTR [rip+0x1f6f4],eax        # 0x140046204
   140026b10:	mov    rbx,QWORD PTR [rsp+0x38]
   140026b15:	xor    eax,eax
   140026b17:	mov    rdi,QWORD PTR [rsp+0x40]
   140026b1c:	add    rsp,0x20
   140026b20:	pop    rbp
   140026b21:	ret    
   140026b22:	int3   
   140026b23:	int3   
   140026b24:	int3   
   140026b25:	int3   
   140026b26:	int3   
   140026b27:	int3   
   140026b28:	int3   
   140026b29:	int3   
   140026b2a:	int3   
   140026b2b:	int3   
   140026b2c:	int3   
   140026b2d:	int3   
   140026b2e:	int3   
   140026b2f:	int3   
   140026b30:	mov    eax,0x1
   140026b35:	ret    
   140026b36:	int3   
   140026b37:	int3   
   140026b38:	xor    eax,eax
   140026b3a:	cmp    DWORD PTR [rip+0x22990],eax        # 0x1400494d0
   140026b40:	setne  al
   140026b43:	ret    
   140026b44:	and    DWORD PTR [rip+0x21875],0x0        # 0x1400483c0
   140026b4b:	ret    
   140026b4c:	mov    QWORD PTR [rsp+0x8],rbx
   140026b51:	push   rbp
   140026b52:	lea    rbp,[rsp-0x4c0]
   140026b5a:	sub    rsp,0x5c0
   140026b61:	mov    ebx,ecx
   140026b63:	mov    ecx,0x17
   140026b68:	call   0x140026ee0
   140026b6d:	test   eax,eax
   140026b6f:	je     0x140026b75
   140026b71:	mov    ecx,ebx
   140026b73:	int    0x29
   140026b75:	and    DWORD PTR [rip+0x21844],0x0        # 0x1400483c0
   140026b7c:	lea    rcx,[rbp-0x10]
   140026b80:	xor    edx,edx
   140026b82:	mov    r8d,0x4d0
   140026b88:	call   0x1400277b0
   140026b8d:	lea    rcx,[rbp-0x10]
   140026b91:	call   QWORD PTR [rip+0xb5d1]        # 0x140032168
   140026b97:	mov    rbx,QWORD PTR [rbp+0xe8]
   140026b9e:	lea    rdx,[rbp+0x4d8]
   140026ba5:	mov    rcx,rbx
   140026ba8:	xor    r8d,r8d
   140026bab:	call   QWORD PTR [rip+0xb5af]        # 0x140032160
   140026bb1:	test   rax,rax
   140026bb4:	je     0x140026bf2
   140026bb6:	and    QWORD PTR [rsp+0x38],0x0
   140026bbc:	lea    rcx,[rbp+0x4e0]
   140026bc3:	mov    rdx,QWORD PTR [rbp+0x4d8]
   140026bca:	mov    r9,rax
   140026bcd:	mov    QWORD PTR [rsp+0x30],rcx
   140026bd2:	mov    r8,rbx
   140026bd5:	lea    rcx,[rbp+0x4e8]
   140026bdc:	mov    QWORD PTR [rsp+0x28],rcx
   140026be1:	lea    rcx,[rbp-0x10]
   140026be5:	mov    QWORD PTR [rsp+0x20],rcx
   140026bea:	xor    ecx,ecx
   140026bec:	call   QWORD PTR [rip+0xb566]        # 0x140032158
   140026bf2:	mov    rax,QWORD PTR [rbp+0x4c8]
   140026bf9:	lea    rcx,[rsp+0x50]
   140026bfe:	mov    QWORD PTR [rbp+0xe8],rax
   140026c05:	xor    edx,edx
   140026c07:	lea    rax,[rbp+0x4c8]
   140026c0e:	mov    r8d,0x98
   140026c14:	add    rax,0x8
   140026c18:	mov    QWORD PTR [rbp+0x88],rax
   140026c1f:	call   0x1400277b0
   140026c24:	mov    rax,QWORD PTR [rbp+0x4c8]
   140026c2b:	mov    QWORD PTR [rsp+0x60],rax
   140026c30:	mov    DWORD PTR [rsp+0x50],0x40000015
   140026c38:	mov    DWORD PTR [rsp+0x54],0x1
   140026c40:	call   QWORD PTR [rip+0xb50a]        # 0x140032150
   140026c46:	cmp    eax,0x1
   140026c49:	lea    rax,[rsp+0x50]
   140026c4e:	mov    QWORD PTR [rsp+0x40],rax
   140026c53:	lea    rax,[rbp-0x10]
   140026c57:	sete   bl
   140026c5a:	mov    QWORD PTR [rsp+0x48],rax
   140026c5f:	xor    ecx,ecx
   140026c61:	call   QWORD PTR [rip+0xb4d9]        # 0x140032140
   140026c67:	lea    rcx,[rsp+0x40]
   140026c6c:	call   QWORD PTR [rip+0xb4d6]        # 0x140032148
   140026c72:	test   eax,eax
   140026c74:	jne    0x140026c80
   140026c76:	neg    bl
   140026c78:	sbb    eax,eax
   140026c7a:	and    DWORD PTR [rip+0x21740],eax        # 0x1400483c0
   140026c80:	mov    rbx,QWORD PTR [rsp+0x5d0]
   140026c88:	add    rsp,0x5c0
   140026c8f:	pop    rbp
   140026c90:	ret    
   140026c91:	int3   
   140026c92:	int3   
   140026c93:	int3   
   140026c94:	sub    rsp,0x28
   140026c98:	xor    ecx,ecx
   140026c9a:	call   QWORD PTR [rip+0xb488]        # 0x140032128
   140026ca0:	mov    rcx,rax
   140026ca3:	test   rax,rax
   140026ca6:	jne    0x140026cac
   140026ca8:	xor    al,al
   140026caa:	jmp    0x140026ce3
   140026cac:	mov    eax,0x5a4d
   140026cb1:	cmp    WORD PTR [rcx],ax
   140026cb4:	jne    0x140026ca8
   140026cb6:	movsxd rax,DWORD PTR [rcx+0x3c]
   140026cba:	add    rax,rcx
   140026cbd:	cmp    DWORD PTR [rax],0x4550
   140026cc3:	jne    0x140026ca8
   140026cc5:	mov    ecx,0x20b
   140026cca:	cmp    WORD PTR [rax+0x18],cx
   140026cce:	jne    0x140026ca8
   140026cd0:	cmp    DWORD PTR [rax+0x84],0xe
   140026cd7:	jbe    0x140026ca8
   140026cd9:	cmp    DWORD PTR [rax+0xf8],0x0
   140026ce0:	setne  al
   140026ce3:	add    rsp,0x28
   140026ce7:	ret    
   140026ce8:	lea    rcx,[rip+0x9]        # 0x140026cf8
   140026cef:	rex.W jmp QWORD PTR [rip+0xb44a]        # 0x140032140
   140026cf6:	int3   
   140026cf7:	int3   
   140026cf8:	sub    rsp,0x28
   140026cfc:	mov    rax,QWORD PTR [rcx]
   140026cff:	cmp    DWORD PTR [rax],0xe06d7363
   140026d05:	jne    0x140026d23
   140026d07:	cmp    DWORD PTR [rax+0x18],0x4
   140026d0b:	jne    0x140026d23
   140026d0d:	mov    ecx,DWORD PTR [rax+0x20]
   140026d10:	lea    eax,[rcx-0x19930520]
   140026d16:	cmp    eax,0x2
   140026d19:	jbe    0x140026d2a
   140026d1b:	cmp    ecx,0x1994000
   140026d21:	je     0x140026d2a
   140026d23:	xor    eax,eax
   140026d25:	add    rsp,0x28
   140026d29:	ret    
   140026d2a:	call   0x140029d90
   140026d2f:	int3   
   140026d30:	rex.W jmp QWORD PTR [rip+0xb8a9]        # 0x1400325e0
   140026d37:	int3   
   140026d38:	mov    QWORD PTR [rsp+0x20],rbx
   140026d3d:	push   rbp
   140026d3e:	mov    rbp,rsp
   140026d41:	sub    rsp,0x20
   140026d45:	and    QWORD PTR [rbp+0x18],0x0
   140026d4a:	movabs rbx,0x2b992ddfa232
   140026d54:	mov    rax,QWORD PTR [rip+0x1f48d]        # 0x1400461e8
   140026d5b:	cmp    rax,rbx
   140026d5e:	jne    0x140026dcf
   140026d60:	lea    rcx,[rbp+0x18]
   140026d64:	call   QWORD PTR [rip+0xb3a6]        # 0x140032110
   140026d6a:	mov    rax,QWORD PTR [rbp+0x18]
   140026d6e:	mov    QWORD PTR [rbp+0x10],rax
   140026d72:	call   QWORD PTR [rip+0xb448]        # 0x1400321c0
   140026d78:	mov    eax,eax
   140026d7a:	xor    QWORD PTR [rbp+0x10],rax
   140026d7e:	call   QWORD PTR [rip+0xb394]        # 0x140032118
   140026d84:	mov    eax,eax
   140026d86:	lea    rcx,[rbp+0x20]
   140026d8a:	xor    QWORD PTR [rbp+0x10],rax
   140026d8e:	call   QWORD PTR [rip+0xb38c]        # 0x140032120
   140026d94:	mov    eax,DWORD PTR [rbp+0x20]
   140026d97:	lea    rcx,[rbp+0x10]
   140026d9b:	shl    rax,0x20
   140026d9f:	xor    rax,QWORD PTR [rbp+0x20]
   140026da3:	xor    rax,QWORD PTR [rbp+0x10]
   140026da7:	xor    rax,rcx
   140026daa:	movabs rcx,0xffffffffffff
   140026db4:	and    rax,rcx
   140026db7:	movabs rcx,0x2b992ddfa233
   140026dc1:	cmp    rax,rbx
   140026dc4:	cmove  rax,rcx
   140026dc8:	mov    QWORD PTR [rip+0x1f419],rax        # 0x1400461e8
   140026dcf:	mov    rbx,QWORD PTR [rsp+0x48]
   140026dd4:	not    rax
   140026dd7:	mov    QWORD PTR [rip+0x1f412],rax        # 0x1400461f0
   140026dde:	add    rsp,0x20
   140026de2:	pop    rbp
   140026de3:	ret    
   140026de4:	mov    eax,0x4000
   140026de9:	ret    
   140026dea:	int3   
   140026deb:	int3   
   140026dec:	lea    rcx,[rip+0x215dd]        # 0x1400483d0
   140026df3:	rex.W jmp QWORD PTR [rip+0xb30e]        # 0x140032108
   140026dfa:	int3   
   140026dfb:	int3   
   140026dfc:	lea    rax,[rip+0x215dd]        # 0x1400483e0
   140026e03:	ret    
   140026e04:	sub    rsp,0x28
   140026e08:	call   0x140025ed0
   140026e0d:	or     QWORD PTR [rax],0x4
   140026e11:	call   0x140026dfc
   140026e16:	or     QWORD PTR [rax],0x2
   140026e1a:	add    rsp,0x28
   140026e1e:	ret    
   140026e1f:	int3   
   140026e20:	xor    eax,eax
   140026e22:	cmp    DWORD PTR [rip+0x1f3e8],eax        # 0x140046210
   140026e28:	sete   al
   140026e2b:	ret    
   140026e2c:	lea    rax,[rip+0x22695]        # 0x1400494c8
   140026e33:	ret    
   140026e34:	lea    rax,[rip+0x22685]        # 0x1400494c0
   140026e3b:	ret    
   140026e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140026e41:	mov    QWORD PTR [rsp+0x10],rsi
   140026e46:	push   rdi
   140026e47:	sub    rsp,0x20
   140026e4b:	lea    rbx,[rip+0x19646]        # 0x140040498
   140026e52:	lea    rsi,[rip+0x1963f]        # 0x140040498
   140026e59:	jmp    0x140026e71
   140026e5b:	mov    rdi,QWORD PTR [rbx]
   140026e5e:	test   rdi,rdi
   140026e61:	je     0x140026e6d
   140026e63:	mov    rcx,rdi
   140026e66:	call   0x140026d30
   140026e6b:	call   rdi
   140026e6d:	add    rbx,0x8
   140026e71:	cmp    rbx,rsi
   140026e74:	jb     0x140026e5b
   140026e76:	mov    rbx,QWORD PTR [rsp+0x30]
   140026e7b:	mov    rsi,QWORD PTR [rsp+0x38]
   140026e80:	add    rsp,0x20
   140026e84:	pop    rdi
   140026e85:	ret    
   140026e86:	int3   
   140026e87:	int3   
   140026e88:	mov    QWORD PTR [rsp+0x8],rbx
   140026e8d:	mov    QWORD PTR [rsp+0x10],rsi
   140026e92:	push   rdi
   140026e93:	sub    rsp,0x20
   140026e97:	lea    rbx,[rip+0x1960a]        # 0x1400404a8
   140026e9e:	lea    rsi,[rip+0x19603]        # 0x1400404a8
   140026ea5:	jmp    0x140026ebd
   140026ea7:	mov    rdi,QWORD PTR [rbx]
   140026eaa:	test   rdi,rdi
   140026ead:	je     0x140026eb9
   140026eaf:	mov    rcx,rdi
   140026eb2:	call   0x140026d30
   140026eb7:	call   rdi
   140026eb9:	add    rbx,0x8
   140026ebd:	cmp    rbx,rsi
   140026ec0:	jb     0x140026ea7
   140026ec2:	mov    rbx,QWORD PTR [rsp+0x30]
   140026ec7:	mov    rsi,QWORD PTR [rsp+0x38]
   140026ecc:	add    rsp,0x20
   140026ed0:	pop    rdi
   140026ed1:	ret    
   140026ed2:	int3   
   140026ed3:	int3   
   140026ed4:	int3   
   140026ed5:	int3   
   140026ed6:	int3   
   140026ed7:	int3   
   140026ed8:	int3   
   140026ed9:	int3   
   140026eda:	int3   
   140026edb:	int3   
   140026edc:	int3   
   140026edd:	int3   
   140026ede:	int3   
   140026edf:	int3   
   140026ee0:	jmp    QWORD PTR [rip+0xb24a]        # 0x140032130
   140026ee6:	int3   
   140026ee7:	int3   
   140026ee8:	rex push rbx
   140026eea:	sub    rsp,0x20
   140026eee:	xor    edx,edx
   140026ef0:	xor    eax,eax
   140026ef2:	lock cmpxchg QWORD PTR [rip+0x214ed],rdx        # 0x1400483e8
   140026efb:	mov    rbx,QWORD PTR [rip+0x1f2e6]        # 0x1400461e8
   140026f02:	mov    ecx,ebx
   140026f04:	xor    rbx,rax
   140026f07:	and    ecx,0x3f
   140026f0a:	ror    rbx,cl
   140026f0d:	test   rbx,rbx
   140026f10:	je     0x140026f1c
   140026f12:	mov    rcx,rbx
   140026f15:	call   0x140026d30
   140026f1a:	call   rbx
   140026f1c:	call   0x140029db8
   140026f21:	int3   
   140026f22:	int3   
   140026f23:	int3   
   140026f24:	mov    r8,QWORD PTR [rip+0x1f2bd]        # 0x1400461e8
   140026f2b:	mov    r9,rcx
   140026f2e:	mov    edx,r8d
   140026f31:	mov    ecx,0x40
   140026f36:	and    edx,0x3f
   140026f39:	sub    ecx,edx
   140026f3b:	ror    r9,cl
   140026f3e:	xor    r9,r8
   140026f41:	xchg   QWORD PTR [rip+0x214a0],r9        # 0x1400483e8
   140026f48:	mov    rax,QWORD PTR [rip+0x1f299]        # 0x1400461e8
   140026f4f:	mov    ecx,eax
   140026f51:	xor    rax,r9
   140026f54:	and    ecx,0x3f
   140026f57:	ror    rax,cl
   140026f5a:	ret    
   140026f5b:	int3   
   140026f5c:	int3   
   140026f5d:	int3   
   140026f5e:	int3   
   140026f5f:	int3   
   140026f60:	int3   
   140026f61:	int3   
   140026f62:	int3   
   140026f63:	int3   
   140026f64:	int3   
   140026f65:	int3   
   140026f66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026f70:	mov    r11,rcx
   140026f73:	mov    r10,rdx
   140026f76:	cmp    r8,0x10
   140026f7a:	jbe    0x140026ff0
   140026f80:	cmp    r8,0x20
   140026f84:	jbe    0x140026fd0
   140026f86:	sub    rdx,rcx
   140026f89:	jae    0x140026f9a
   140026f8b:	mov    rax,r10
   140026f8e:	add    rax,r8
   140026f91:	cmp    rcx,rax
   140026f94:	jl     0x1400272d0
   140026f9a:	cmp    r8,0x80
   140026fa1:	jbe    0x140027210
   140026fa7:	bt     DWORD PTR [rip+0x2140d],0x1        # 0x1400483bc
   140026faf:	jae    0x140027160
   140026fb5:	mov    rax,r11
   140026fb8:	mov    r11,rdi
   140026fbb:	mov    rdi,rcx
   140026fbe:	mov    rcx,r8
   140026fc1:	mov    r8,rsi
   140026fc4:	mov    rsi,r10
   140026fc7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140026fc9:	mov    rsi,r8
   140026fcc:	mov    rdi,r11
   140026fcf:	ret    
   140026fd0:	movups xmm0,XMMWORD PTR [rdx]
   140026fd3:	movups xmm1,XMMWORD PTR [r8+rdx*1-0x10]
   140026fd9:	movups XMMWORD PTR [rcx],xmm0
   140026fdc:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm1
   140026fe2:	mov    rax,rcx
   140026fe5:	ret    
   140026fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026ff0:	mov    rax,rcx
   140026ff3:	lea    r9,[rip+0xfffffffffffd9006]        # 0x140000000
   140026ffa:	mov    ecx,DWORD PTR [r9+r8*4+0x27007]
   140027002:	add    rcx,r9
   140027005:	jmp    rcx
   140027007:	push   rax
   140027008:	jo     0x14002700c
   14002700a:	add    BYTE PTR [rdi+0x70],ch
   14002700d:	add    al,BYTE PTR [rax]
   14002700f:	push   rcx
   140027010:	jo     0x140027014
   140027012:	add    BYTE PTR [rdi+0x70],bl
   140027015:	add    al,BYTE PTR [rax]
   140027017:	fwait
   140027018:	jo     0x14002701c
   14002701a:	add    BYTE PTR [rax-0x4ffffd90],ah
   140027020:	jo     0x140027024
   140027022:	add    al,al
   140027024:	jo     0x140027028
   140027026:	add    BYTE PTR [rax+0x70],bl
   140027029:	add    al,BYTE PTR [rax]
   14002702b:	lock jo 0x140027030
   14002702e:	add    BYTE PTR [rax],al
   140027030:	jno    0x140027034
   140027032:	add    BYTE PTR [rax+0x10000270],al
   140027038:	jno    0x14002703c
   14002703a:	add    al,bl
   14002703c:	jo     0x140027040
   14002703e:	add    BYTE PTR [rax],ah
   140027040:	jno    0x140027044
   140027042:	add    BYTE PTR [rax+0x71],al
   140027045:	add    al,BYTE PTR [rax]
   140027047:	jne    0x1400270b9
   140027049:	add    al,BYTE PTR [rax]
   14002704b:	nop    DWORD PTR [rax+rax*1+0x0]
   140027050:	ret    
   140027051:	movzx  ecx,WORD PTR [rdx]
   140027054:	mov    WORD PTR [rax],cx
   140027057:	ret    
   140027058:	mov    rcx,QWORD PTR [rdx]
   14002705b:	mov    QWORD PTR [rax],rcx
   14002705e:	ret    
   14002705f:	movzx  ecx,WORD PTR [rdx]
   140027062:	movzx  r8d,BYTE PTR [rdx+0x2]
   140027067:	mov    WORD PTR [rax],cx
   14002706a:	mov    BYTE PTR [rax+0x2],r8b
   14002706e:	ret    
   14002706f:	movzx  ecx,BYTE PTR [rdx]
   140027072:	mov    BYTE PTR [rax],cl
   140027074:	ret    
   140027075:	movdqu xmm0,XMMWORD PTR [rdx]
   140027079:	movdqu XMMWORD PTR [rax],xmm0
   14002707d:	ret    
   14002707e:	xchg   ax,ax
   140027080:	mov    r8,QWORD PTR [rdx]
   140027083:	movzx  ecx,WORD PTR [rdx+0x8]
   140027087:	movzx  r9d,BYTE PTR [rdx+0xa]
   14002708c:	mov    QWORD PTR [rax],r8
   14002708f:	mov    WORD PTR [rax+0x8],cx
   140027093:	mov    BYTE PTR [rax+0xa],r9b
   140027097:	mov    rcx,r11
   14002709a:	ret    
   14002709b:	mov    ecx,DWORD PTR [rdx]
   14002709d:	mov    DWORD PTR [rax],ecx
   14002709f:	ret    
   1400270a0:	mov    ecx,DWORD PTR [rdx]
   1400270a2:	movzx  r8d,BYTE PTR [rdx+0x4]
   1400270a7:	mov    DWORD PTR [rax],ecx
   1400270a9:	mov    BYTE PTR [rax+0x4],r8b
   1400270ad:	ret    
   1400270ae:	xchg   ax,ax
   1400270b0:	mov    ecx,DWORD PTR [rdx]
   1400270b2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400270b7:	mov    DWORD PTR [rax],ecx
   1400270b9:	mov    WORD PTR [rax+0x4],r8w
   1400270be:	ret    
   1400270bf:	nop
   1400270c0:	mov    ecx,DWORD PTR [rdx]
   1400270c2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400270c7:	movzx  r9d,BYTE PTR [rdx+0x6]
   1400270cc:	mov    DWORD PTR [rax],ecx
   1400270ce:	mov    WORD PTR [rax+0x4],r8w
   1400270d3:	mov    BYTE PTR [rax+0x6],r9b
   1400270d7:	ret    
   1400270d8:	mov    r8,QWORD PTR [rdx]
   1400270db:	mov    ecx,DWORD PTR [rdx+0x8]
   1400270de:	movzx  r9d,BYTE PTR [rdx+0xc]
   1400270e3:	mov    QWORD PTR [rax],r8
   1400270e6:	mov    DWORD PTR [rax+0x8],ecx
   1400270e9:	mov    BYTE PTR [rax+0xc],r9b
   1400270ed:	ret    
   1400270ee:	xchg   ax,ax
   1400270f0:	mov    r8,QWORD PTR [rdx]
   1400270f3:	movzx  ecx,BYTE PTR [rdx+0x8]
   1400270f7:	mov    QWORD PTR [rax],r8
   1400270fa:	mov    BYTE PTR [rax+0x8],cl
   1400270fd:	ret    
   1400270fe:	xchg   ax,ax
   140027100:	mov    r8,QWORD PTR [rdx]
   140027103:	movzx  ecx,WORD PTR [rdx+0x8]
   140027107:	mov    QWORD PTR [rax],r8
   14002710a:	mov    WORD PTR [rax+0x8],cx
   14002710e:	ret    
   14002710f:	nop
   140027110:	mov    r8,QWORD PTR [rdx]
   140027113:	mov    ecx,DWORD PTR [rdx+0x8]
   140027116:	mov    QWORD PTR [rax],r8
   140027119:	mov    DWORD PTR [rax+0x8],ecx
   14002711c:	ret    
   14002711d:	nop    DWORD PTR [rax]
   140027120:	mov    r8,QWORD PTR [rdx]
   140027123:	mov    ecx,DWORD PTR [rdx+0x8]
   140027126:	movzx  r9d,WORD PTR [rdx+0xc]
   14002712b:	mov    QWORD PTR [rax],r8
   14002712e:	mov    DWORD PTR [rax+0x8],ecx
   140027131:	mov    WORD PTR [rax+0xc],r9w
   140027136:	ret    
   140027137:	nop    WORD PTR [rax+rax*1+0x0]
   140027140:	mov    r8,QWORD PTR [rdx]
   140027143:	mov    ecx,DWORD PTR [rdx+0x8]
   140027146:	movzx  r9d,WORD PTR [rdx+0xc]
   14002714b:	movzx  r10d,BYTE PTR [rdx+0xe]
   140027150:	mov    QWORD PTR [rax],r8
   140027153:	mov    DWORD PTR [rax+0x8],ecx
   140027156:	mov    WORD PTR [rax+0xc],r9w
   14002715b:	mov    BYTE PTR [rax+0xe],r10b
   14002715f:	ret    
   140027160:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027164:	add    r8,rcx
   140027167:	add    rcx,0x10
   14002716b:	test   r11b,0xf
   14002716f:	je     0x140027184
   140027171:	movaps xmm1,xmm0
   140027174:	and    rcx,0xfffffffffffffff0
   140027178:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14002717c:	add    rcx,0x10
   140027180:	movups XMMWORD PTR [r11],xmm1
   140027184:	sub    r8,rcx
   140027187:	mov    r9,r8
   14002718a:	shr    r9,0x7
   14002718e:	je     0x14002721c
   140027194:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140027198:	cmp    r9,QWORD PTR [rip+0x1f069]        # 0x140046208
   14002719f:	jbe    0x1400271b8
   1400271a1:	jmp    0x140027268
   1400271a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400271b0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400271b4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400271b8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400271bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400271c1:	add    rcx,0x80
   1400271c8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   1400271cc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   1400271d0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400271d5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400271da:	dec    r9
   1400271dd:	movaps XMMWORD PTR [rcx-0x60],xmm0
   1400271e1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   1400271e5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400271ea:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400271ef:	movaps XMMWORD PTR [rcx-0x40],xmm0
   1400271f3:	movaps XMMWORD PTR [rcx-0x30],xmm1
   1400271f7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   1400271fc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140027201:	jne    0x1400271b0
   140027203:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140027207:	and    r8,0x7f
   14002720b:	movaps xmm0,xmm1
   14002720e:	jmp    0x14002721c
   140027210:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027214:	add    rcx,0x10
   140027218:	sub    r8,0x10
   14002721c:	mov    r9,r8
   14002721f:	shr    r9,0x4
   140027223:	je     0x140027241
   140027225:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140027230:	movups XMMWORD PTR [rcx-0x10],xmm0
   140027234:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027238:	add    rcx,0x10
   14002723c:	dec    r9
   14002723f:	jne    0x140027230
   140027241:	and    r8,0xf
   140027245:	je     0x140027254
   140027247:	lea    rax,[r8+rcx*1]
   14002724b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140027250:	movups XMMWORD PTR [rax-0x10],xmm1
   140027254:	movups XMMWORD PTR [rcx-0x10],xmm0
   140027258:	mov    rax,r11
   14002725b:	ret    
   14002725c:	nop    DWORD PTR [rax+0x0]
   140027260:	movntps XMMWORD PTR [rcx-0x20],xmm0
   140027264:	movntps XMMWORD PTR [rcx-0x10],xmm1
   140027268:	prefetchnta BYTE PTR [rdx+rcx*1+0x200]
   140027270:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027274:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140027279:	add    rcx,0x80
   140027280:	movntps XMMWORD PTR [rcx-0x80],xmm0
   140027284:	movntps XMMWORD PTR [rcx-0x70],xmm1
   140027288:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   14002728d:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   140027292:	dec    r9
   140027295:	movntps XMMWORD PTR [rcx-0x60],xmm0
   140027299:	movntps XMMWORD PTR [rcx-0x50],xmm1
   14002729d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400272a2:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400272a7:	prefetchnta BYTE PTR [rdx+rcx*1+0x240]
   1400272af:	movntps XMMWORD PTR [rcx-0x40],xmm0
   1400272b3:	movntps XMMWORD PTR [rcx-0x30],xmm1
   1400272b7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   1400272bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   1400272c1:	jne    0x140027260
   1400272c3:	sfence 
   1400272c6:	jmp    0x140027203
   1400272cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400272d0:	add    rcx,r8
   1400272d3:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400272d8:	sub    rcx,0x10
   1400272dc:	sub    r8,0x10
   1400272e0:	test   cl,0xf
   1400272e3:	je     0x1400272fc
   1400272e5:	mov    rax,rcx
   1400272e8:	and    rcx,0xfffffffffffffff0
   1400272ec:	movups xmm1,xmm0
   1400272ef:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400272f3:	movups XMMWORD PTR [rax],xmm1
   1400272f6:	mov    r8,rcx
   1400272f9:	sub    r8,r11
   1400272fc:	mov    r9,r8
   1400272ff:	shr    r9,0x7
   140027303:	je     0x14002736d
   140027305:	movaps XMMWORD PTR [rcx],xmm0
   140027308:	jmp    0x140027317
   14002730a:	nop    WORD PTR [rax+rax*1+0x0]
   140027310:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140027314:	movaps XMMWORD PTR [rcx],xmm1
   140027317:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14002731c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140027321:	sub    rcx,0x80
   140027328:	movaps XMMWORD PTR [rcx+0x70],xmm0
   14002732c:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140027330:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140027335:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   14002733a:	dec    r9
   14002733d:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140027341:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140027345:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   14002734a:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   14002734f:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140027353:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140027357:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   14002735c:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140027360:	jne    0x140027310
   140027362:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140027366:	and    r8,0x7f
   14002736a:	movaps xmm0,xmm1
   14002736d:	mov    r9,r8
   140027370:	shr    r9,0x4
   140027374:	je     0x140027390
   140027376:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027380:	movups XMMWORD PTR [rcx],xmm0
   140027383:	sub    rcx,0x10
   140027387:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14002738b:	dec    r9
   14002738e:	jne    0x140027380
   140027390:	and    r8,0xf
   140027394:	je     0x14002739e
   140027396:	movups xmm1,XMMWORD PTR [r10]
   14002739a:	movups XMMWORD PTR [r11],xmm1
   14002739e:	movups XMMWORD PTR [rcx],xmm0
   1400273a1:	mov    rax,r11
   1400273a4:	ret    
   1400273a5:	int3   
   1400273a6:	int3   
   1400273a7:	int3   
   1400273a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400273ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400273b2:	push   rsi
   1400273b3:	sub    rsp,0x10
   1400273b7:	mov    bpl,BYTE PTR [rdx]
   1400273ba:	mov    rsi,rdx
   1400273bd:	mov    r8,rcx
   1400273c0:	test   bpl,bpl
   1400273c3:	jne    0x1400273cd
   1400273c5:	mov    rax,rcx
   1400273c8:	jmp    0x140027589
   1400273cd:	cmp    DWORD PTR [rip+0x1ee2c],0x2        # 0x140046200
   1400273d4:	mov    ebx,0xff0
   1400273d9:	mov    r10d,0x1
   1400273df:	lea    r11d,[rbx+0xf]
   1400273e3:	jge    0x1400274b9
   1400273e9:	movzx  eax,bpl
   1400273ed:	xorps  xmm2,xmm2
   1400273f0:	mov    ecx,eax
   1400273f2:	shl    ecx,0x8
   1400273f5:	or     ecx,eax
   1400273f7:	movd   xmm0,ecx
   1400273fb:	pshuflw xmm1,xmm0,0x0
   140027400:	pshufd xmm3,xmm1,0x0
   140027405:	mov    rax,r8
   140027408:	and    rax,r11
   14002740b:	cmp    rax,rbx
   14002740e:	ja     0x140027439
   140027410:	movdqu xmm0,XMMWORD PTR [r8]
   140027415:	movdqa xmm1,xmm0
   140027419:	pcmpeqb xmm0,xmm3
   14002741d:	pcmpeqb xmm1,xmm2
   140027421:	por    xmm1,xmm0
   140027425:	pmovmskb eax,xmm1
   140027429:	test   eax,eax
   14002742b:	jne    0x140027433
   14002742d:	add    r8,0x10
   140027431:	jmp    0x140027405
   140027433:	bsf    eax,eax
   140027436:	add    r8,rax
   140027439:	cmp    BYTE PTR [r8],0x0
   14002743d:	je     0x140027587
   140027443:	cmp    bpl,BYTE PTR [r8]
   140027446:	jne    0x1400274b1
   140027448:	mov    rdx,r8
   14002744b:	mov    r9,rsi
   14002744e:	mov    rax,r9
   140027451:	and    rax,r11
   140027454:	cmp    rax,rbx
   140027457:	ja     0x14002749a
   140027459:	mov    rax,rdx
   14002745c:	and    rax,r11
   14002745f:	cmp    rax,rbx
   140027462:	ja     0x14002749a
   140027464:	movdqu xmm1,XMMWORD PTR [r9]
   140027469:	movdqu xmm0,XMMWORD PTR [rdx]
   14002746d:	pcmpeqb xmm0,xmm1
   140027471:	pcmpeqb xmm1,xmm2
   140027475:	pcmpeqb xmm0,xmm2
   140027479:	por    xmm0,xmm1
   14002747d:	pmovmskb eax,xmm0
   140027481:	test   eax,eax
   140027483:	jne    0x14002748f
   140027485:	add    rdx,0x10
   140027489:	add    r9,0x10
   14002748d:	jmp    0x14002744e
   14002748f:	bsf    eax,eax
   140027492:	mov    ecx,eax
   140027494:	add    rdx,rcx
   140027497:	add    r9,rcx
   14002749a:	mov    al,BYTE PTR [r9]
   14002749d:	test   al,al
   14002749f:	je     0x140027582
   1400274a5:	cmp    BYTE PTR [rdx],al
   1400274a7:	jne    0x1400274b1
   1400274a9:	add    rdx,r10
   1400274ac:	add    r9,r10
   1400274af:	jmp    0x14002744e
   1400274b1:	add    r8,r10
   1400274b4:	jmp    0x140027405
   1400274b9:	mov    rax,rsi
   1400274bc:	and    rax,r11
   1400274bf:	cmp    rax,rbx
   1400274c2:	ja     0x1400274ca
   1400274c4:	movdqu xmm0,XMMWORD PTR [rdx]
   1400274c8:	jmp    0x1400274f5
   1400274ca:	xorps  xmm0,xmm0
   1400274cd:	mov    rcx,rsi
   1400274d0:	mov    dl,bpl
   1400274d3:	mov    r9d,0x10
   1400274d9:	movsx  eax,dl
   1400274dc:	psrldq xmm0,0x1
   1400274e1:	pinsrb xmm0,eax,0xf
   1400274e7:	test   dl,dl
   1400274e9:	je     0x1400274f0
   1400274eb:	add    rcx,r10
   1400274ee:	mov    dl,BYTE PTR [rcx]
   1400274f0:	sub    r9,r10
   1400274f3:	jne    0x1400274d9
   1400274f5:	mov    rax,r8
   1400274f8:	and    rax,r11
   1400274fb:	cmp    rax,rbx
   1400274fe:	ja     0x140027559
   140027500:	movdqu xmm1,XMMWORD PTR [r8]
   140027505:	pcmpistri xmm0,xmm1,0xc
   14002750b:	jbe    0x140027513
   14002750d:	add    r8,0x10
   140027511:	jmp    0x1400274f5
   140027513:	jae    0x140027587
   140027515:	pcmpistri xmm0,xmm1,0xc
   14002751b:	movsxd rax,ecx
   14002751e:	add    r8,rax
   140027521:	mov    rdx,r8
   140027524:	mov    r9,rsi
   140027527:	mov    rax,rdx
   14002752a:	and    rax,r11
   14002752d:	cmp    rax,rbx
   140027530:	ja     0x140027569
   140027532:	mov    rax,r9
   140027535:	and    rax,r11
   140027538:	cmp    rax,rbx
   14002753b:	ja     0x140027569
   14002753d:	movdqu xmm1,XMMWORD PTR [rdx]
   140027541:	movdqu xmm2,XMMWORD PTR [r9]
   140027546:	pcmpistri xmm2,xmm1,0xc
   14002754c:	jno    0x140027564
   14002754e:	js     0x140027582
   140027550:	mov    eax,0x10
   140027555:	mov    ecx,eax
   140027557:	jmp    0x14002757a
   140027559:	cmp    BYTE PTR [r8],0x0
   14002755d:	je     0x140027587
   14002755f:	cmp    BYTE PTR [r8],bpl
   140027562:	je     0x140027521
   140027564:	add    r8,r10
   140027567:	jmp    0x1400274f5
   140027569:	mov    al,BYTE PTR [r9]
   14002756c:	test   al,al
   14002756e:	je     0x140027582
   140027570:	cmp    BYTE PTR [rdx],al
   140027572:	jne    0x140027564
   140027574:	mov    rax,r10
   140027577:	mov    rcx,r10
   14002757a:	add    rdx,rax
   14002757d:	add    r9,rcx
   140027580:	jmp    0x140027527
   140027582:	mov    rax,r8
   140027585:	jmp    0x140027589
   140027587:	xor    eax,eax
   140027589:	mov    rbx,QWORD PTR [rsp+0x20]
   14002758e:	mov    rbp,QWORD PTR [rsp+0x28]
   140027593:	add    rsp,0x10
   140027597:	pop    rsi
   140027598:	ret    
   140027599:	int3   
   14002759a:	int3   
   14002759b:	int3   
   14002759c:	mov    QWORD PTR [rsp+0x8],rbx
   1400275a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400275a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400275ab:	push   rdi
   1400275ac:	push   r12
   1400275ae:	push   r13
   1400275b0:	push   r14
   1400275b2:	push   r15
   1400275b4:	sub    rsp,0x40
   1400275b8:	mov    r12,QWORD PTR [r9+0x8]
   1400275bc:	mov    rbp,rcx
   1400275bf:	mov    r15,QWORD PTR [r9]
   1400275c2:	mov    rcx,r8
   1400275c5:	mov    rbx,QWORD PTR [r9+0x38]
   1400275c9:	sub    r15,r12
   1400275cc:	mov    r14,r9
   1400275cf:	mov    rdi,r8
   1400275d2:	mov    r13,rdx
   1400275d5:	call   0x14001e1b0
   1400275da:	test   BYTE PTR [rbp+0x4],0x66
   1400275de:	jne    0x1400276c4
   1400275e4:	mov    esi,DWORD PTR [r14+0x48]
   1400275e8:	mov    QWORD PTR [rsp+0x30],rbp
   1400275ed:	mov    QWORD PTR [rsp+0x38],rdi
   1400275f2:	cmp    esi,DWORD PTR [rbx]
   1400275f4:	jae    0x140027774
   1400275fa:	mov    edi,esi
   1400275fc:	add    rdi,rdi
   1400275ff:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   140027603:	cmp    r15,rax
   140027606:	jb     0x1400276b6
   14002760c:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140027610:	cmp    r15,rax
   140027613:	jae    0x1400276b6
   140027619:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   14002761e:	je     0x1400276b6
   140027624:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140027629:	je     0x140027642
   14002762b:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   14002762f:	lea    rcx,[rsp+0x30]
   140027634:	add    rax,r12
   140027637:	mov    rdx,r13
   14002763a:	call   rax
   14002763c:	test   eax,eax
   14002763e:	js     0x1400276bd
   140027640:	jle    0x1400276b6
   140027642:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140027649:	jne    0x140027673
   14002764b:	cmp    QWORD PTR [rip+0x21e85],0x0        # 0x1400494d8
   140027653:	je     0x140027673
   140027655:	lea    rcx,[rip+0x21e7c]        # 0x1400494d8
   14002765c:	call   0x140030920
   140027661:	test   eax,eax
   140027663:	je     0x140027673
   140027665:	mov    edx,0x1
   14002766a:	mov    rcx,rbp
   14002766d:	call   QWORD PTR [rip+0x21e65]        # 0x1400494d8
   140027673:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   140027677:	mov    r8d,0x1
   14002767d:	add    rcx,r12
   140027680:	mov    rdx,r13
   140027683:	call   0x140027b70
   140027688:	mov    rax,QWORD PTR [r14+0x40]
   14002768c:	mov    r8,rbp
   14002768f:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   140027693:	mov    rcx,r13
   140027696:	mov    r9d,DWORD PTR [rbp+0x0]
   14002769a:	add    rdx,r12
   14002769d:	mov    QWORD PTR [rsp+0x28],rax
   1400276a2:	mov    rax,QWORD PTR [r14+0x28]
   1400276a6:	mov    QWORD PTR [rsp+0x20],rax
   1400276ab:	call   QWORD PTR [rip+0xaa4f]        # 0x140032100
   1400276b1:	call   0x140027ba0
   1400276b6:	inc    esi
   1400276b8:	jmp    0x1400275f2
   1400276bd:	xor    eax,eax
   1400276bf:	jmp    0x140027779
   1400276c4:	mov    rsi,QWORD PTR [r14+0x20]
   1400276c8:	mov    edi,DWORD PTR [r14+0x48]
   1400276cc:	sub    rsi,r12
   1400276cf:	jmp    0x14002776a
   1400276d4:	mov    ecx,edi
   1400276d6:	add    rcx,rcx
   1400276d9:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   1400276dd:	cmp    r15,rax
   1400276e0:	jb     0x140027768
   1400276e6:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   1400276ea:	cmp    r15,rax
   1400276ed:	jae    0x140027768
   1400276ef:	mov    r10d,DWORD PTR [rbp+0x4]
   1400276f3:	and    r10d,0x20
   1400276f7:	je     0x14002773d
   1400276f9:	xor    r9d,r9d
   1400276fc:	test   edx,edx
   1400276fe:	je     0x140027738
   140027700:	mov    r8d,r9d
   140027703:	add    r8,r8
   140027706:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14002770b:	cmp    rsi,rax
   14002770e:	jb     0x140027730
   140027710:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   140027715:	cmp    rsi,rax
   140027718:	jae    0x140027730
   14002771a:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14002771e:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   140027723:	jne    0x140027730
   140027725:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140027729:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   14002772e:	je     0x140027738
   140027730:	inc    r9d
   140027733:	cmp    r9d,edx
   140027736:	jb     0x140027700
   140027738:	cmp    r9d,edx
   14002773b:	jne    0x140027774
   14002773d:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140027741:	test   eax,eax
   140027743:	je     0x140027751
   140027745:	cmp    rsi,rax
   140027748:	jne    0x140027768
   14002774a:	test   r10d,r10d
   14002774d:	jne    0x140027774
   14002774f:	jmp    0x140027768
   140027751:	lea    eax,[rdi+0x1]
   140027754:	mov    rdx,r13
   140027757:	mov    DWORD PTR [r14+0x48],eax
   14002775b:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   140027760:	mov    cl,0x1
   140027762:	add    r8,r12
   140027765:	call   r8
   140027768:	inc    edi
   14002776a:	mov    edx,DWORD PTR [rbx]
   14002776c:	cmp    edi,edx
   14002776e:	jb     0x1400276d4
   140027774:	mov    eax,0x1
   140027779:	lea    r11,[rsp+0x40]
   14002777e:	mov    rbx,QWORD PTR [r11+0x30]
   140027782:	mov    rbp,QWORD PTR [r11+0x38]
   140027786:	mov    rsi,QWORD PTR [r11+0x40]
   14002778a:	mov    rsp,r11
   14002778d:	pop    r15
   14002778f:	pop    r14
   140027791:	pop    r13
   140027793:	pop    r12
   140027795:	pop    rdi
   140027796:	ret    
   140027797:	int3   
   140027798:	int3   
   140027799:	int3   
   14002779a:	int3   
   14002779b:	int3   
   14002779c:	int3   
   14002779d:	int3   
   14002779e:	int3   
   14002779f:	int3   
   1400277a0:	int3   
   1400277a1:	int3   
   1400277a2:	int3   
   1400277a3:	int3   
   1400277a4:	int3   
   1400277a5:	int3   
   1400277a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400277b0:	mov    r11,rcx
   1400277b3:	movzx  edx,dl
   1400277b6:	movabs r9,0x101010101010101
   1400277c0:	imul   r9,rdx
   1400277c4:	cmp    r8,0x10
   1400277c8:	jbe    0x1400278d0
   1400277ce:	movq   xmm0,r9
   1400277d3:	punpcklbw xmm0,xmm0
   1400277d7:	cmp    r8,0x80
   1400277de:	jbe    0x140027860
   1400277e4:	bt     DWORD PTR [rip+0x20bd0],0x1        # 0x1400483bc
   1400277ec:	jae    0x140027810
   1400277ee:	mov    eax,edx
   1400277f0:	mov    rdx,rdi
   1400277f3:	mov    rdi,rcx
   1400277f6:	mov    rcx,r8
   1400277f9:	rep stos BYTE PTR es:[rdi],al
   1400277fb:	mov    rdi,rdx
   1400277fe:	mov    rax,r11
   140027801:	ret    
   140027802:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140027810:	movups XMMWORD PTR [rcx],xmm0
   140027813:	add    r8,rcx
   140027816:	add    rcx,0x10
   14002781a:	and    rcx,0xfffffffffffffff0
   14002781e:	sub    r8,rcx
   140027821:	mov    r9,r8
   140027824:	shr    r9,0x7
   140027828:	je     0x140027860
   14002782a:	nop    WORD PTR [rax+rax*1+0x0]
   140027830:	movaps XMMWORD PTR [rcx],xmm0
   140027833:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140027837:	add    rcx,0x80
   14002783e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140027842:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140027846:	dec    r9
   140027849:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14002784d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140027851:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140027855:	movapd XMMWORD PTR [rcx-0x10],xmm0
   14002785a:	jne    0x140027830
   14002785c:	and    r8,0x7f
   140027860:	mov    r9,r8
   140027863:	shr    r9,0x4
   140027867:	je     0x14002787c
   140027869:	nop    DWORD PTR [rax+0x0]
   140027870:	movups XMMWORD PTR [rcx],xmm0
   140027873:	add    rcx,0x10
   140027877:	dec    r9
   14002787a:	jne    0x140027870
   14002787c:	and    r8,0xf
   140027880:	je     0x140027888
   140027882:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   140027888:	mov    rax,r11
   14002788b:	ret    
   14002788c:	(bad)  
   14002788d:	js     0x140027891
   14002788f:	add    bl,bh
   140027891:	js     0x140027895
   140027893:	add    BYTE PTR [rdi],ah
   140027895:	jns    0x140027899
   140027897:	add    bh,dh
   140027899:	js     0x14002789d
   14002789b:	add    BYTE PTR [rcx+rdi*2],al
   14002789e:	add    al,BYTE PTR [rax]
   1400278a0:	adc    al,0x79
   1400278a2:	add    al,BYTE PTR [rax]
   1400278a4:	and    al,0x79
   1400278a6:	add    al,BYTE PTR [rax]
   1400278a8:	hlt    
   1400278a9:	js     0x1400278ad
   1400278ab:	add    BYTE PTR [rcx+rdi*2],ch
   1400278ae:	add    al,BYTE PTR [rax]
   1400278b0:	or     BYTE PTR [rcx+0x2],bh
   1400278b3:	add    BYTE PTR [rax+0x79],al
   1400278b6:	add    al,BYTE PTR [rax]
   1400278b8:	xor    BYTE PTR [rcx+0x2],bh
   1400278bb:	add    BYTE PTR [rax],al
   1400278bd:	jns    0x1400278c1
   1400278bf:	add    BYTE PTR [rax],dl
   1400278c1:	jns    0x1400278c5
   1400278c3:	add    BYTE PTR [rax],ah
   1400278c5:	jns    0x1400278c9
   1400278c7:	add    al,dh
   1400278c9:	js     0x1400278cd
   1400278cb:	add    BYTE PTR [rax+0x79],cl
   1400278ce:	add    al,BYTE PTR [rax]
   1400278d0:	mov    rdx,r9
   1400278d3:	lea    r9,[rip+0xfffffffffffd8726]        # 0x140000000
   1400278da:	mov    eax,DWORD PTR [r9+r8*4+0x2788c]
   1400278e2:	add    r9,rax
   1400278e5:	add    rcx,r8
   1400278e8:	mov    rax,r11
   1400278eb:	jmp    r9
   1400278ee:	xchg   ax,ax
   1400278f0:	mov    QWORD PTR [rcx-0xf],rdx
   1400278f4:	mov    DWORD PTR [rcx-0x7],edx
   1400278f7:	mov    WORD PTR [rcx-0x3],dx
   1400278fb:	mov    BYTE PTR [rcx-0x1],dl
   1400278fe:	ret    
   1400278ff:	nop
   140027900:	mov    QWORD PTR [rcx-0xc],rdx
   140027904:	mov    DWORD PTR [rcx-0x4],edx
   140027907:	ret    
   140027908:	mov    QWORD PTR [rcx-0x9],rdx
   14002790c:	mov    BYTE PTR [rcx-0x1],dl
   14002790f:	ret    
   140027910:	mov    QWORD PTR [rcx-0xd],rdx
   140027914:	mov    DWORD PTR [rcx-0x5],edx
   140027917:	mov    BYTE PTR [rcx-0x1],dl
   14002791a:	ret    
   14002791b:	nop    DWORD PTR [rax+rax*1+0x0]
   140027920:	mov    QWORD PTR [rcx-0xe],rdx
   140027924:	mov    DWORD PTR [rcx-0x6],edx
   140027927:	mov    WORD PTR [rcx-0x2],dx
   14002792b:	ret    
   14002792c:	mov    QWORD PTR [rax],rdx
   14002792f:	ret    
   140027930:	mov    QWORD PTR [rax],rdx
   140027933:	mov    WORD PTR [rax+0x8],dx
   140027937:	mov    BYTE PTR [rax+0xa],dl
   14002793a:	ret    
   14002793b:	nop    DWORD PTR [rax+rax*1+0x0]
   140027940:	mov    QWORD PTR [rax],rdx
   140027943:	mov    WORD PTR [rax+0x8],dx
   140027947:	ret    
   140027948:	mov    QWORD PTR [rax],rdx
   14002794b:	mov    QWORD PTR [rax+0x8],rdx
   14002794f:	ret    
   140027950:	int3   
   140027951:	int3   
   140027952:	int3   
   140027953:	int3   
   140027954:	int3   
   140027955:	int3   
   140027956:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027960:	sub    rdx,rcx
   140027963:	cmp    r8,0x8
   140027967:	jb     0x14002798b
   140027969:	test   cl,0x7
   14002796c:	je     0x140027982
   14002796e:	xchg   ax,ax
   140027970:	mov    al,BYTE PTR [rcx]
   140027972:	cmp    al,BYTE PTR [rdx+rcx*1]
   140027975:	jne    0x1400279a3
   140027977:	inc    rcx
   14002797a:	dec    r8
   14002797d:	test   cl,0x7
   140027980:	jne    0x140027970
   140027982:	mov    r9,r8
   140027985:	shr    r9,0x3
   140027989:	jne    0x1400279aa
   14002798b:	test   r8,r8
   14002798e:	je     0x14002799f
   140027990:	mov    al,BYTE PTR [rcx]
   140027992:	cmp    al,BYTE PTR [rdx+rcx*1]
   140027995:	jne    0x1400279a3
   140027997:	inc    rcx
   14002799a:	dec    r8
   14002799d:	jne    0x140027990
   14002799f:	xor    rax,rax
   1400279a2:	ret    
   1400279a3:	sbb    eax,eax
   1400279a5:	sbb    eax,0xffffffff
   1400279a8:	ret    
   1400279a9:	nop
   1400279aa:	shr    r9,0x2
   1400279ae:	je     0x1400279e7
   1400279b0:	mov    rax,QWORD PTR [rcx]
   1400279b3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400279b7:	jne    0x140027a14
   1400279b9:	mov    rax,QWORD PTR [rcx+0x8]
   1400279bd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400279c2:	jne    0x140027a10
   1400279c4:	mov    rax,QWORD PTR [rcx+0x10]
   1400279c8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   1400279cd:	jne    0x140027a0c
   1400279cf:	mov    rax,QWORD PTR [rcx+0x18]
   1400279d3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   1400279d8:	jne    0x140027a08
   1400279da:	add    rcx,0x20
   1400279de:	dec    r9
   1400279e1:	jne    0x1400279b0
   1400279e3:	and    r8,0x1f
   1400279e7:	mov    r9,r8
   1400279ea:	shr    r9,0x3
   1400279ee:	je     0x14002798b
   1400279f0:	mov    rax,QWORD PTR [rcx]
   1400279f3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400279f7:	jne    0x140027a14
   1400279f9:	add    rcx,0x8
   1400279fd:	dec    r9
   140027a00:	jne    0x1400279f0
   140027a02:	and    r8,0x7
   140027a06:	jmp    0x14002798b
   140027a08:	add    rcx,0x8
   140027a0c:	add    rcx,0x8
   140027a10:	add    rcx,0x8
   140027a14:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140027a18:	bswap  rax
   140027a1b:	bswap  rcx
   140027a1e:	cmp    rax,rcx
   140027a21:	sbb    eax,eax
   140027a23:	sbb    eax,0xffffffff
   140027a26:	ret    
   140027a27:	int3   
   140027a28:	sub    rsp,0x18
   140027a2c:	movzx  eax,dl
   140027a2f:	mov    r8,rcx
   140027a32:	mov    r10d,eax
   140027a35:	and    r8,0xfffffffffffffff0
   140027a39:	shl    r10d,0x8
   140027a3d:	and    ecx,0xf
   140027a40:	or     r10d,eax
   140027a43:	xorps  xmm2,xmm2
   140027a46:	or     eax,0xffffffff
   140027a49:	xor    r9d,r9d
   140027a4c:	shl    eax,cl
   140027a4e:	movd   xmm0,r10d
   140027a53:	pshuflw xmm1,xmm0,0x0
   140027a58:	movdqa xmm0,xmm2
   140027a5c:	pcmpeqb xmm0,XMMWORD PTR [r8]
   140027a61:	pshufd xmm3,xmm1,0x0
   140027a66:	movdqa xmm1,xmm3
   140027a6a:	pcmpeqb xmm1,XMMWORD PTR [r8]
   140027a6f:	por    xmm1,xmm0
   140027a73:	pmovmskb edx,xmm1
   140027a77:	and    edx,eax
   140027a79:	jne    0x140027a9d
   140027a7b:	add    r8,0x10
   140027a7f:	movdqa xmm1,xmm3
   140027a83:	movdqa xmm0,xmm2
   140027a87:	pcmpeqb xmm1,XMMWORD PTR [r8]
   140027a8c:	pcmpeqb xmm0,XMMWORD PTR [r8]
   140027a91:	por    xmm1,xmm0
   140027a95:	pmovmskb edx,xmm1
   140027a99:	test   edx,edx
   140027a9b:	je     0x140027a7b
   140027a9d:	bsf    edx,edx
   140027aa0:	add    rdx,r8
   140027aa3:	cmp    BYTE PTR [rdx],r10b
   140027aa6:	cmove  r9,rdx
   140027aaa:	mov    rax,r9
   140027aad:	add    rsp,0x18
   140027ab1:	ret    
   140027ab2:	int3   
   140027ab3:	int3   
   140027ab4:	sub    rsp,0x28
   140027ab8:	call   0x140027b08
   140027abd:	call   0x140007b20
   140027ac2:	call   0x140027c28
   140027ac7:	test   al,al
   140027ac9:	jne    0x140027acf
   140027acb:	xor    al,al
   140027acd:	jmp    0x140027ae1
   140027acf:	call   0x140027bc4
   140027ad4:	test   al,al
   140027ad6:	jne    0x140027adf
   140027ad8:	call   0x140027c70
   140027add:	jmp    0x140027acb
   140027adf:	mov    al,0x1
   140027ae1:	add    rsp,0x28
   140027ae5:	ret    
   140027ae6:	int3   
   140027ae7:	int3   
   140027ae8:	sub    rsp,0x28
   140027aec:	test   cl,cl
   140027aee:	jne    0x140027b01
   140027af0:	call   0x140027c04
   140027af5:	call   0x140027c70
   140027afa:	xor    ecx,ecx
   140027afc:	call   0x140007b70
   140027b01:	mov    al,0x1
   140027b03:	add    rsp,0x28
   140027b07:	ret    
   140027b08:	mov    rdx,QWORD PTR [rip+0x1e6d9]        # 0x1400461e8
   140027b0f:	mov    ecx,0x40
   140027b14:	mov    eax,edx
   140027b16:	and    eax,0x3f
   140027b19:	sub    ecx,eax
   140027b1b:	xor    eax,eax
   140027b1d:	ror    rax,cl
   140027b20:	xor    rax,rdx
   140027b23:	mov    QWORD PTR [rip+0x208be],rax        # 0x1400483e8
   140027b2a:	ret    
   140027b2b:	int3   
   140027b2c:	int3   
   140027b2d:	int3   
   140027b2e:	int3   
   140027b2f:	int3   
   140027b30:	int3   
   140027b31:	int3   
   140027b32:	int3   
   140027b33:	int3   
   140027b34:	int3   
   140027b35:	int3   
   140027b36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027b40:	sub    rsp,0x4d8
   140027b47:	xor    r8,r8
   140027b4a:	xor    r9,r9
   140027b4d:	mov    QWORD PTR [rsp+0x20],rsp
   140027b52:	mov    QWORD PTR [rsp+0x28],r8
   140027b57:	call   0x140030cee
   140027b5c:	add    rsp,0x4d8
   140027b63:	ret    
   140027b64:	int3   
   140027b65:	int3   
   140027b66:	int3   
   140027b67:	int3   
   140027b68:	int3   
   140027b69:	int3   
   140027b6a:	nop    WORD PTR [rax+rax*1+0x0]
   140027b70:	mov    QWORD PTR [rsp+0x8],rcx
   140027b75:	mov    QWORD PTR [rsp+0x18],rdx
   140027b7a:	mov    DWORD PTR [rsp+0x10],r8d
   140027b7f:	mov    r9,0x19930520
   140027b86:	jmp    0x140027b90
   140027b88:	int3   
   140027b89:	int3   
   140027b8a:	int3   
   140027b8b:	int3   
   140027b8c:	int3   
   140027b8d:	int3   
   140027b8e:	xchg   ax,ax
   140027b90:	ret    
   140027b91:	int3   
   140027b92:	int3   
   140027b93:	int3   
   140027b94:	int3   
   140027b95:	int3   
   140027b96:	int3   
   140027b97:	nop    WORD PTR [rax+rax*1+0x0]
   140027ba0:	ret    
   140027ba1:	int3   
   140027ba2:	int3   
   140027ba3:	int3   
   140027ba4:	sub    rsp,0x28
   140027ba8:	test   rcx,rcx
   140027bab:	je     0x140027bbe
   140027bad:	lea    rax,[rip+0x2083c]        # 0x1400483f0
   140027bb4:	cmp    rcx,rax
   140027bb7:	je     0x140027bbe
   140027bb9:	call   0x140007bd0
   140027bbe:	add    rsp,0x28
   140027bc2:	ret    
   140027bc3:	int3   
   140027bc4:	sub    rsp,0x28
   140027bc8:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x140027ba4
   140027bcf:	call   0x140007a80
   140027bd4:	mov    DWORD PTR [rip+0x1e646],eax        # 0x140046220
   140027bda:	cmp    eax,0xffffffff
   140027bdd:	jne    0x140027be3
   140027bdf:	xor    al,al
   140027be1:	jmp    0x140027bfe
   140027be3:	lea    rdx,[rip+0x20806]        # 0x1400483f0
   140027bea:	mov    ecx,eax
   140027bec:	call   0x140007aa0
   140027bf1:	test   eax,eax
   140027bf3:	jne    0x140027bfc
   140027bf5:	call   0x140027c04
   140027bfa:	jmp    0x140027bdf
   140027bfc:	mov    al,0x1
   140027bfe:	add    rsp,0x28
   140027c02:	ret    
   140027c03:	int3   
   140027c04:	sub    rsp,0x28
   140027c08:	mov    ecx,DWORD PTR [rip+0x1e612]        # 0x140046220
   140027c0e:	cmp    ecx,0xffffffff
   140027c11:	je     0x140027c1f
   140027c13:	call   0x140007a90
   140027c18:	or     DWORD PTR [rip+0x1e601],0xffffffff        # 0x140046220
   140027c1f:	mov    al,0x1
   140027c21:	add    rsp,0x28
   140027c25:	ret    
   140027c26:	int3   
   140027c27:	int3   
   140027c28:	rex push rbx
   140027c2a:	sub    rsp,0x20
   140027c2e:	xor    ebx,ebx
   140027c30:	lea    rdx,[rip+0x20831]        # 0x140048468
   140027c37:	xor    r8d,r8d
   140027c3a:	lea    rcx,[rbx+rbx*4]
   140027c3e:	lea    rcx,[rdx+rcx*8]
   140027c42:	mov    edx,0xfa0
   140027c47:	call   0x140007ab0
   140027c4c:	test   eax,eax
   140027c4e:	je     0x140027c61
   140027c50:	inc    DWORD PTR [rip+0x2083a]        # 0x140048490
   140027c56:	inc    ebx
   140027c58:	cmp    ebx,0x1
   140027c5b:	jb     0x140027c30
   140027c5d:	mov    al,0x1
   140027c5f:	jmp    0x140027c68
   140027c61:	call   0x140027c70
   140027c66:	xor    al,al
   140027c68:	add    rsp,0x20
   140027c6c:	pop    rbx
   140027c6d:	ret    
   140027c6e:	int3   
   140027c6f:	int3   
   140027c70:	rex push rbx
   140027c72:	sub    rsp,0x20
   140027c76:	mov    ebx,DWORD PTR [rip+0x20814]        # 0x140048490
   140027c7c:	jmp    0x140027c9b
   140027c7e:	lea    rax,[rip+0x207e3]        # 0x140048468
   140027c85:	dec    ebx
   140027c87:	lea    rcx,[rbx+rbx*4]
   140027c8b:	lea    rcx,[rax+rcx*8]
   140027c8f:	call   QWORD PTR [rip+0xa453]        # 0x1400320e8
   140027c95:	dec    DWORD PTR [rip+0x207f5]        # 0x140048490
   140027c9b:	test   ebx,ebx
   140027c9d:	jne    0x140027c7e
   140027c9f:	mov    al,0x1
   140027ca1:	add    rsp,0x20
   140027ca5:	pop    rbx
   140027ca6:	ret    
   140027ca7:	int3   
   140027ca8:	rex push rbx
   140027caa:	sub    rsp,0x20
   140027cae:	call   0x140029e80
   140027cb3:	mov    ebx,eax
   140027cb5:	call   0x140029e9a
   140027cba:	xor    eax,eax
   140027cbc:	test   bl,0x3f
   140027cbf:	je     0x140027cf4
   140027cc1:	mov    cl,bl
   140027cc3:	lea    edx,[rax+0x10]
   140027cc6:	and    cl,0x1
   140027cc9:	cmovne eax,edx
   140027ccc:	test   bl,0x4
   140027ccf:	je     0x140027cd4
   140027cd1:	or     eax,0x8
   140027cd4:	test   bl,0x8
   140027cd7:	je     0x140027cdc
   140027cd9:	or     eax,0x4
   140027cdc:	test   dl,bl
   140027cde:	je     0x140027ce3
   140027ce0:	or     eax,0x2
   140027ce3:	test   bl,0x20
   140027ce6:	je     0x140027ceb
   140027ce8:	or     eax,0x1
   140027ceb:	test   bl,0x2
   140027cee:	je     0x140027cf4
   140027cf0:	bts    eax,0x13
   140027cf4:	add    rsp,0x20
   140027cf8:	pop    rbx
   140027cf9:	ret    
   140027cfa:	int3   
   140027cfb:	int3   
   140027cfc:	btr    edx,0x13
   140027d00:	jmp    0x140027d08
   140027d05:	int3   
   140027d06:	int3   
   140027d07:	int3   
   140027d08:	mov    QWORD PTR [rsp+0x10],rbx
   140027d0d:	mov    QWORD PTR [rsp+0x18],rsi
   140027d12:	mov    QWORD PTR [rsp+0x20],rdi
   140027d17:	push   r12
   140027d19:	push   r14
   140027d1b:	push   r15
   140027d1d:	sub    rsp,0x20
   140027d21:	mov    ebx,edx
   140027d23:	mov    esi,ecx
   140027d25:	and    ebx,0x308031f
   140027d2b:	call   0x140029e80
   140027d30:	mov    r9d,eax
   140027d33:	xor    edi,edi
   140027d35:	mov    r8b,al
   140027d38:	mov    r11d,0x80
   140027d3e:	mov    eax,edi
   140027d40:	lea    ecx,[rdi+0x10]
   140027d43:	and    r8b,r11b
   140027d46:	cmovne eax,ecx
   140027d49:	mov    r12d,0x200
   140027d4f:	test   r12d,r9d
   140027d52:	je     0x140027d57
   140027d54:	or     eax,0x8
   140027d57:	bt     r9d,0xa
   140027d5c:	jae    0x140027d61
   140027d5e:	or     eax,0x4
   140027d61:	mov    r8d,0x800
   140027d67:	test   r8d,r9d
   140027d6a:	je     0x140027d6f
   140027d6c:	or     eax,0x2
   140027d6f:	mov    r10d,0x1000
   140027d75:	test   r10d,r9d
   140027d78:	je     0x140027d7d
   140027d7a:	or     eax,0x1
   140027d7d:	mov    r14d,0x100
   140027d83:	test   r14d,r9d
   140027d86:	je     0x140027d8c
   140027d88:	bts    eax,0x13
   140027d8c:	mov    ecx,r9d
   140027d8f:	mov    r15d,0x6000
   140027d95:	and    ecx,r15d
   140027d98:	je     0x140027dbe
   140027d9a:	cmp    ecx,0x2000
   140027da0:	je     0x140027dbb
   140027da2:	cmp    ecx,0x4000
   140027da8:	je     0x140027db6
   140027daa:	cmp    ecx,r15d
   140027dad:	jne    0x140027dbe
   140027daf:	or     eax,0x300
   140027db4:	jmp    0x140027dbe
   140027db6:	or     eax,r12d
   140027db9:	jmp    0x140027dbe
   140027dbb:	or     eax,r14d
   140027dbe:	mov    edx,0x8040
   140027dc3:	and    r9d,edx
   140027dc6:	sub    r9d,0x40
   140027dca:	je     0x140027de8
   140027dcc:	sub    r9d,0x7fc0
   140027dd3:	je     0x140027de1
   140027dd5:	cmp    r9d,0x40
   140027dd9:	jne    0x140027dec
   140027ddb:	bts    eax,0x18
   140027ddf:	jmp    0x140027dec
   140027de1:	or     eax,0x3000000
   140027de6:	jmp    0x140027dec
   140027de8:	bts    eax,0x19
   140027dec:	mov    ecx,ebx
   140027dee:	not    ecx
   140027df0:	and    ecx,eax
   140027df2:	and    esi,ebx
   140027df4:	or     ecx,esi
   140027df6:	cmp    ecx,eax
   140027df8:	je     0x140027f84
   140027dfe:	mov    al,cl
   140027e00:	mov    esi,0x10
   140027e05:	mov    ebx,edi
   140027e07:	and    al,sil
   140027e0a:	cmovne ebx,r11d
   140027e0e:	mov    DWORD PTR [rsp+0x40],ebx
   140027e12:	test   cl,0x8
   140027e15:	je     0x140027e1e
   140027e17:	or     ebx,r12d
   140027e1a:	mov    DWORD PTR [rsp+0x40],ebx
   140027e1e:	test   cl,0x4
   140027e21:	je     0x140027e2b
   140027e23:	bts    ebx,0xa
   140027e27:	mov    DWORD PTR [rsp+0x40],ebx
   140027e2b:	test   cl,0x2
   140027e2e:	je     0x140027e37
   140027e30:	or     ebx,r8d
   140027e33:	mov    DWORD PTR [rsp+0x40],ebx
   140027e37:	test   cl,0x1
   140027e3a:	je     0x140027e43
   140027e3c:	or     ebx,r10d
   140027e3f:	mov    DWORD PTR [rsp+0x40],ebx
   140027e43:	bt     ecx,0x13
   140027e47:	jae    0x140027e50
   140027e49:	or     ebx,r14d
   140027e4c:	mov    DWORD PTR [rsp+0x40],ebx
   140027e50:	mov    eax,ecx
   140027e52:	and    eax,0x300
   140027e57:	je     0x140027e7d
   140027e59:	cmp    eax,r14d
   140027e5c:	je     0x140027e75
   140027e5e:	cmp    eax,r12d
   140027e61:	je     0x140027e6f
   140027e63:	cmp    eax,0x300
   140027e68:	jne    0x140027e7d
   140027e6a:	or     ebx,r15d
   140027e6d:	jmp    0x140027e79
   140027e6f:	bts    ebx,0xe
   140027e73:	jmp    0x140027e79
   140027e75:	bts    ebx,0xd
   140027e79:	mov    DWORD PTR [rsp+0x40],ebx
   140027e7d:	and    ecx,0x3000000
   140027e83:	cmp    ecx,0x1000000
   140027e89:	je     0x140027ea6
   140027e8b:	cmp    ecx,0x2000000
   140027e91:	je     0x140027ea1
   140027e93:	cmp    ecx,0x3000000
   140027e99:	jne    0x140027eac
   140027e9b:	bts    ebx,0xf
   140027e9f:	jmp    0x140027ea8
   140027ea1:	or     ebx,0x40
   140027ea4:	jmp    0x140027ea8
   140027ea6:	or     ebx,edx
   140027ea8:	mov    DWORD PTR [rsp+0x40],ebx
   140027eac:	cmp    BYTE PTR [rip+0x1e371],dil        # 0x140046224
   140027eb3:	je     0x140027ef1
   140027eb5:	test   bl,0x40
   140027eb8:	je     0x140027ef1
   140027eba:	mov    ecx,ebx
   140027ebc:	call   0x140029e90
   140027ec1:	jmp    0x140027eef
   140027ec3:	mov    BYTE PTR [rip+0x1e35a],0x0        # 0x140046224
   140027eca:	mov    ebx,DWORD PTR [rsp+0x40]
   140027ece:	and    ebx,0xffffffbf
   140027ed1:	mov    ecx,ebx
   140027ed3:	call   0x140029e90
   140027ed8:	xor    edi,edi
   140027eda:	lea    esi,[rdi+0x10]
   140027edd:	mov    r12d,0x200
   140027ee3:	mov    r14d,0x100
   140027ee9:	mov    r15d,0x6000
   140027eef:	jmp    0x140027efb
   140027ef1:	and    ebx,0xffffffbf
   140027ef4:	mov    ecx,ebx
   140027ef6:	call   0x140029e90
   140027efb:	mov    al,bl
   140027efd:	and    al,0x80
   140027eff:	cmovne edi,esi
   140027f02:	test   r12d,ebx
   140027f05:	je     0x140027f0a
   140027f07:	or     edi,0x8
   140027f0a:	bt     ebx,0xa
   140027f0e:	jae    0x140027f13
   140027f10:	or     edi,0x4
   140027f13:	bt     ebx,0xb
   140027f17:	jae    0x140027f1c
   140027f19:	or     edi,0x2
   140027f1c:	bt     ebx,0xc
   140027f20:	jae    0x140027f25
   140027f22:	or     edi,0x1
   140027f25:	test   r14d,ebx
   140027f28:	je     0x140027f2e
   140027f2a:	bts    edi,0x13
   140027f2e:	mov    eax,ebx
   140027f30:	and    eax,r15d
   140027f33:	je     0x140027f58
   140027f35:	cmp    eax,0x2000
   140027f3a:	je     0x140027f55
   140027f3c:	cmp    eax,0x4000
   140027f41:	je     0x140027f50
   140027f43:	cmp    eax,r15d
   140027f46:	jne    0x140027f58
   140027f48:	or     edi,0x300
   140027f4e:	jmp    0x140027f58
   140027f50:	or     edi,r12d
   140027f53:	jmp    0x140027f58
   140027f55:	or     edi,r14d
   140027f58:	and    ebx,0x8040
   140027f5e:	sub    ebx,0x40
   140027f61:	je     0x140027f7e
   140027f63:	sub    ebx,0x7fc0
   140027f69:	je     0x140027f76
   140027f6b:	cmp    ebx,0x40
   140027f6e:	jne    0x140027f82
   140027f70:	bts    edi,0x18
   140027f74:	jmp    0x140027f82
   140027f76:	or     edi,0x3000000
   140027f7c:	jmp    0x140027f82
   140027f7e:	bts    edi,0x19
   140027f82:	mov    eax,edi
   140027f84:	mov    rbx,QWORD PTR [rsp+0x48]
   140027f89:	mov    rsi,QWORD PTR [rsp+0x50]
   140027f8e:	mov    rdi,QWORD PTR [rsp+0x58]
   140027f93:	add    rsp,0x20
   140027f97:	pop    r15
   140027f99:	pop    r14
   140027f9b:	pop    r12
   140027f9d:	ret    
   140027f9e:	int3   
   140027f9f:	int3   
   140027fa0:	mov    QWORD PTR [rsp+0x10],rbx
   140027fa5:	mov    QWORD PTR [rsp+0x18],rsi
   140027faa:	push   rbp
   140027fab:	push   rdi
   140027fac:	push   r14
   140027fae:	lea    rbp,[rsp-0x4f0]
   140027fb6:	sub    rsp,0x5f0
   140027fbd:	mov    rax,QWORD PTR [rip+0x1e224]        # 0x1400461e8
   140027fc4:	xor    rax,rsp
   140027fc7:	mov    QWORD PTR [rbp+0x4e0],rax
   140027fce:	mov    edi,r8d
   140027fd1:	mov    esi,edx
   140027fd3:	mov    ebx,ecx
   140027fd5:	cmp    ecx,0xffffffff
   140027fd8:	je     0x140027fdf
   140027fda:	call   0x140026b44
   140027fdf:	xor    edx,edx
   140027fe1:	lea    rcx,[rsp+0x70]
   140027fe6:	mov    r8d,0x98
   140027fec:	call   0x1400277b0
   140027ff1:	xor    edx,edx
   140027ff3:	lea    rcx,[rbp+0x10]
   140027ff7:	mov    r8d,0x4d0
   140027ffd:	call   0x1400277b0
   140028002:	lea    rax,[rsp+0x70]
   140028007:	mov    QWORD PTR [rsp+0x48],rax
   14002800c:	lea    rcx,[rbp+0x10]
   140028010:	lea    rax,[rbp+0x10]
   140028014:	mov    QWORD PTR [rsp+0x50],rax
   140028019:	call   QWORD PTR [rip+0xa149]        # 0x140032168
   14002801f:	mov    r14,QWORD PTR [rbp+0x108]
   140028026:	lea    rdx,[rsp+0x40]
   14002802b:	mov    rcx,r14
   14002802e:	xor    r8d,r8d
   140028031:	call   QWORD PTR [rip+0xa129]        # 0x140032160
   140028037:	test   rax,rax
   14002803a:	je     0x140028072
   14002803c:	and    QWORD PTR [rsp+0x38],0x0
   140028042:	lea    rcx,[rsp+0x60]
   140028047:	mov    rdx,QWORD PTR [rsp+0x40]
   14002804c:	mov    r9,rax
   14002804f:	mov    QWORD PTR [rsp+0x30],rcx
   140028054:	mov    r8,r14
   140028057:	lea    rcx,[rsp+0x58]
   14002805c:	mov    QWORD PTR [rsp+0x28],rcx
   140028061:	lea    rcx,[rbp+0x10]
   140028065:	mov    QWORD PTR [rsp+0x20],rcx
   14002806a:	xor    ecx,ecx
   14002806c:	call   QWORD PTR [rip+0xa0e6]        # 0x140032158
   140028072:	mov    rax,QWORD PTR [rbp+0x508]
   140028079:	mov    QWORD PTR [rbp+0x108],rax
   140028080:	lea    rax,[rbp+0x508]
   140028087:	add    rax,0x8
   14002808b:	mov    DWORD PTR [rsp+0x70],esi
   14002808f:	mov    QWORD PTR [rbp+0xa8],rax
   140028096:	mov    rax,QWORD PTR [rbp+0x508]
   14002809d:	mov    QWORD PTR [rbp-0x80],rax
   1400280a1:	mov    DWORD PTR [rsp+0x74],edi
   1400280a5:	call   QWORD PTR [rip+0xa0a5]        # 0x140032150
   1400280ab:	xor    ecx,ecx
   1400280ad:	mov    edi,eax
   1400280af:	call   QWORD PTR [rip+0xa08b]        # 0x140032140
   1400280b5:	lea    rcx,[rsp+0x48]
   1400280ba:	call   QWORD PTR [rip+0xa088]        # 0x140032148
   1400280c0:	test   eax,eax
   1400280c2:	jne    0x1400280d4
   1400280c4:	test   edi,edi
   1400280c6:	jne    0x1400280d4
   1400280c8:	cmp    ebx,0xffffffff
   1400280cb:	je     0x1400280d4
   1400280cd:	mov    ecx,ebx
   1400280cf:	call   0x140026b44
   1400280d4:	mov    rcx,QWORD PTR [rbp+0x4e0]
   1400280db:	xor    rcx,rsp
   1400280de:	call   0x140030a30
   1400280e3:	lea    r11,[rsp+0x5f0]
   1400280eb:	mov    rbx,QWORD PTR [r11+0x28]
   1400280ef:	mov    rsi,QWORD PTR [r11+0x30]
   1400280f3:	mov    rsp,r11
   1400280f6:	pop    r14
   1400280f8:	pop    rdi
   1400280f9:	pop    rbp
   1400280fa:	ret    
   1400280fb:	int3   
   1400280fc:	mov    QWORD PTR [rip+0x20405],rcx        # 0x140048508
   140028103:	ret    
   140028104:	mov    rax,rsp
   140028107:	mov    QWORD PTR [rax+0x8],rbx
   14002810b:	mov    QWORD PTR [rax+0x10],rbp
   14002810f:	mov    QWORD PTR [rax+0x18],rsi
   140028113:	mov    QWORD PTR [rax+0x20],rdi
   140028117:	push   r14
   140028119:	sub    rsp,0x30
   14002811d:	mov    edi,r9d
   140028120:	mov    rsi,r8
   140028123:	mov    rbp,rdx
   140028126:	mov    r14,rcx
   140028129:	call   0x14002a2dc
   14002812e:	test   rax,rax
   140028131:	je     0x140028174
   140028133:	mov    rbx,QWORD PTR [rax+0x3b8]
   14002813a:	test   rbx,rbx
   14002813d:	je     0x140028174
   14002813f:	mov    rcx,rbx
   140028142:	call   QWORD PTR [rip+0xa498]        # 0x1400325e0
   140028148:	mov    r9d,edi
   14002814b:	mov    r8,rsi
   14002814e:	mov    rdx,rbp
   140028151:	mov    rcx,r14
   140028154:	mov    rax,rbx
   140028157:	mov    rbx,QWORD PTR [rsp+0x40]
   14002815c:	mov    rbp,QWORD PTR [rsp+0x48]
   140028161:	mov    rsi,QWORD PTR [rsp+0x50]
   140028166:	mov    rdi,QWORD PTR [rsp+0x58]
   14002816b:	add    rsp,0x30
   14002816f:	pop    r14
   140028171:	rex.W jmp rax
   140028174:	mov    rbx,QWORD PTR [rip+0x1e06d]        # 0x1400461e8
   14002817b:	mov    ecx,ebx
   14002817d:	xor    rbx,QWORD PTR [rip+0x20384]        # 0x140048508
   140028184:	and    ecx,0x3f
   140028187:	ror    rbx,cl
   14002818a:	test   rbx,rbx
   14002818d:	jne    0x14002813f
   14002818f:	mov    rax,QWORD PTR [rsp+0x60]
   140028194:	mov    r9d,edi
   140028197:	mov    r8,rsi
   14002819a:	mov    QWORD PTR [rsp+0x20],rax
   14002819f:	mov    rdx,rbp
   1400281a2:	mov    rcx,r14
   1400281a5:	call   0x1400281cc
   1400281aa:	int3   
   1400281ab:	int3   
   1400281ac:	sub    rsp,0x38
   1400281b0:	and    QWORD PTR [rsp+0x20],0x0
   1400281b6:	xor    r9d,r9d
   1400281b9:	xor    r8d,r8d
   1400281bc:	xor    edx,edx
   1400281be:	xor    ecx,ecx
   1400281c0:	call   0x140028104
   1400281c5:	add    rsp,0x38
   1400281c9:	ret    
   1400281ca:	int3   
   1400281cb:	int3   
   1400281cc:	sub    rsp,0x28
   1400281d0:	mov    ecx,0x17
   1400281d5:	call   0x140026ee0
   1400281da:	test   eax,eax
   1400281dc:	je     0x1400281e5
   1400281de:	mov    ecx,0x5
   1400281e3:	int    0x29
   1400281e5:	mov    r8d,0x1
   1400281eb:	mov    edx,0xc0000417
   1400281f0:	lea    ecx,[r8+0x1]
   1400281f4:	call   0x140027fa0
   1400281f9:	call   QWORD PTR [rip+0x9f81]        # 0x140032180
   1400281ff:	mov    rcx,rax
   140028202:	mov    edx,0xc0000417
   140028207:	add    rsp,0x28
   14002820b:	rex.W jmp QWORD PTR [rip+0x9ece]        # 0x1400320e0
   140028212:	int3   
   140028213:	int3   
   140028214:	mov    r8,QWORD PTR [rip+0x1dfcd]        # 0x1400461e8
   14002821b:	mov    r9,rcx
   14002821e:	mov    edx,r8d
   140028221:	mov    ecx,0x40
   140028226:	and    edx,0x3f
   140028229:	mov    rax,r8
   14002822c:	xor    rax,QWORD PTR [rip+0x202d5]        # 0x140048508
   140028233:	sub    ecx,edx
   140028235:	ror    r9,cl
   140028238:	mov    ecx,edx
   14002823a:	xor    r9,r8
   14002823d:	ror    rax,cl
   140028240:	mov    QWORD PTR [rip+0x202c1],r9        # 0x140048508
   140028247:	ret    
   140028248:	int3   
   140028249:	int3   
   14002824a:	int3   
   14002824b:	int3   
   14002824c:	int3   
   14002824d:	int3   
   14002824e:	int3   
   14002824f:	int3   
   140028250:	int3   
   140028251:	int3   
   140028252:	int3   
   140028253:	int3   
   140028254:	int3   
   140028255:	int3   
   140028256:	data16 nop WORD PTR [rax+rax*1+0x0]
   140028260:	sub    rdx,rcx
   140028263:	test   cl,0x7
   140028266:	je     0x14002827c
   140028268:	movzx  eax,BYTE PTR [rcx]
   14002826b:	cmp    al,BYTE PTR [rcx+rdx*1]
   14002826e:	jne    0x1400282bf
   140028270:	inc    rcx
   140028273:	test   al,al
   140028275:	je     0x1400282bc
   140028277:	test   cl,0x7
   14002827a:	jne    0x140028268
   14002827c:	movabs r11,0x8080808080808080
   140028286:	movabs r10,0xfefefefefefefeff
   140028290:	lea    eax,[ecx+edx*1]
   140028294:	and    eax,0xfff
   140028299:	cmp    eax,0xff8
   14002829e:	ja     0x140028268
   1400282a0:	mov    rax,QWORD PTR [rcx]
   1400282a3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   1400282a7:	jne    0x140028268
   1400282a9:	lea    r9,[r10+rax*1]
   1400282ad:	not    rax
   1400282b0:	add    rcx,0x8
   1400282b4:	and    rax,r9
   1400282b7:	test   r11,rax
   1400282ba:	je     0x140028290
   1400282bc:	xor    eax,eax
   1400282be:	ret    
   1400282bf:	sbb    rax,rax
   1400282c2:	or     rax,0x1
   1400282c6:	ret    
   1400282c7:	int3   
   1400282c8:	int3   
   1400282c9:	int3   
   1400282ca:	int3   
   1400282cb:	int3   
   1400282cc:	int3   
   1400282cd:	int3   
   1400282ce:	int3   
   1400282cf:	int3   
   1400282d0:	int3   
   1400282d1:	int3   
   1400282d2:	int3   
   1400282d3:	int3   
   1400282d4:	int3   
   1400282d5:	int3   
   1400282d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400282e0:	mov    r11,rcx
   1400282e3:	or     r8,r8
   1400282e6:	je     0x14002830c
   1400282e8:	sub    rcx,rdx
   1400282eb:	test   dl,0x7
   1400282ee:	je     0x140028318
   1400282f0:	mov    al,BYTE PTR [rdx]
   1400282f2:	test   al,al
   1400282f4:	mov    BYTE PTR [rcx+rdx*1],al
   1400282f7:	je     0x1400283e0
   1400282fd:	inc    rdx
   140028300:	dec    r8
   140028303:	je     0x14002830c
   140028305:	test   dl,0x7
   140028308:	jne    0x1400282f0
   14002830a:	jmp    0x140028318
   14002830c:	mov    rax,r11
   14002830f:	ret    
   140028310:	mov    QWORD PTR [rcx+rdx*1],rax
   140028314:	add    rdx,0x8
   140028318:	mov    rax,QWORD PTR [rdx]
   14002831b:	sub    r8,0x8
   14002831f:	jbe    0x140028347
   140028321:	movabs r9,0x7efefefefefefeff
   14002832b:	add    r9,rax
   14002832e:	mov    r10,rax
   140028331:	xor    r10,0xffffffffffffffff
   140028335:	xor    r10,r9
   140028338:	movabs r9,0x8101010101010100
   140028342:	test   r9,r10
   140028345:	je     0x140028310
   140028347:	add    r8,0x8
   14002834b:	je     0x1400283dc
   140028351:	test   al,al
   140028353:	mov    BYTE PTR [rcx+rdx*1],al
   140028356:	je     0x1400283e0
   14002835c:	inc    rdx
   14002835f:	dec    r8
   140028362:	je     0x1400283dc
   140028364:	test   ah,ah
   140028366:	mov    BYTE PTR [rcx+rdx*1],ah
   140028369:	je     0x1400283e0
   14002836b:	inc    rdx
   14002836e:	dec    r8
   140028371:	je     0x1400283dc
   140028373:	shr    rax,0x10
   140028377:	test   al,al
   140028379:	mov    BYTE PTR [rcx+rdx*1],al
   14002837c:	je     0x1400283e0
   14002837e:	inc    rdx
   140028381:	dec    r8
   140028384:	je     0x1400283dc
   140028386:	test   ah,ah
   140028388:	mov    BYTE PTR [rcx+rdx*1],ah
   14002838b:	je     0x1400283e0
   14002838d:	inc    rdx
   140028390:	dec    r8
   140028393:	je     0x1400283dc
   140028395:	shr    rax,0x10
   140028399:	test   al,al
   14002839b:	mov    BYTE PTR [rcx+rdx*1],al
   14002839e:	je     0x1400283e0
   1400283a0:	inc    rdx
   1400283a3:	dec    r8
   1400283a6:	je     0x1400283dc
   1400283a8:	test   ah,ah
   1400283aa:	mov    BYTE PTR [rcx+rdx*1],ah
   1400283ad:	je     0x1400283e0
   1400283af:	inc    rdx
   1400283b2:	dec    r8
   1400283b5:	je     0x1400283dc
   1400283b7:	shr    eax,0x10
   1400283ba:	test   al,al
   1400283bc:	mov    BYTE PTR [rcx+rdx*1],al
   1400283bf:	je     0x1400283e0
   1400283c1:	inc    rdx
   1400283c4:	dec    r8
   1400283c7:	je     0x1400283dc
   1400283c9:	test   ah,ah
   1400283cb:	mov    BYTE PTR [rcx+rdx*1],ah
   1400283ce:	je     0x1400283e0
   1400283d0:	inc    rdx
   1400283d3:	dec    r8
   1400283d6:	jne    0x140028318
   1400283dc:	mov    rax,r11
   1400283df:	ret    
   1400283e0:	add    rcx,rdx
   1400283e3:	xor    rdx,rdx
   1400283e6:	cmp    r8,0x10
   1400283ea:	jb     0x140028431
   1400283ec:	test   cl,0x7
   1400283ef:	je     0x1400283fb
   1400283f1:	inc    rcx
   1400283f4:	mov    BYTE PTR [rcx],dl
   1400283f6:	dec    r8
   1400283f9:	jmp    0x1400283ec
   1400283fb:	sub    r8,0x20
   1400283ff:	jb     0x14002841a
   140028401:	mov    QWORD PTR [rcx],rdx
   140028404:	mov    QWORD PTR [rcx+0x8],rdx
   140028408:	mov    QWORD PTR [rcx+0x10],rdx
   14002840c:	mov    QWORD PTR [rcx+0x18],rdx
   140028410:	add    rcx,0x20
   140028414:	sub    r8,0x20
   140028418:	jae    0x140028401
   14002841a:	add    r8,0x20
   14002841e:	sub    r8,0x8
   140028422:	jb     0x14002842d
   140028424:	mov    QWORD PTR [rcx],rdx
   140028427:	add    rcx,0x8
   14002842b:	jmp    0x14002841e
   14002842d:	add    r8,0x8
   140028431:	sub    r8,0x1
   140028435:	jb     0x14002843e
   140028437:	mov    BYTE PTR [rcx],dl
   140028439:	inc    rcx
   14002843c:	jmp    0x140028431
   14002843e:	mov    rax,r11
   140028441:	ret    
   140028442:	int3   
   140028443:	int3   
   140028444:	rex push rbp
   140028446:	sub    rsp,0x20
   14002844a:	lea    rbp,[rsp+0x20]
   14002844f:	and    rbp,0xffffffffffffffe0
   140028453:	mov    eax,DWORD PTR [rip+0x1dda7]        # 0x140046200
   140028459:	mov    r9,rcx
   14002845c:	cmp    eax,0x5
   14002845f:	jl     0x1400284f1
   140028465:	mov    r8,rcx
   140028468:	mov    eax,0x20
   14002846d:	and    r8d,0x1f
   140028471:	sub    rax,r8
   140028474:	neg    r8
   140028477:	sbb    r10,r10
   14002847a:	and    r10,rax
   14002847d:	cmp    rdx,r10
   140028480:	cmovb  r10,rdx
   140028484:	lea    rax,[r10+rcx*1]
   140028488:	jmp    0x140028492
   14002848a:	cmp    BYTE PTR [rcx],0x0
   14002848d:	je     0x140028497
   14002848f:	inc    rcx
   140028492:	cmp    rcx,rax
   140028495:	jne    0x14002848a
   140028497:	sub    rcx,r9
   14002849a:	cmp    rcx,r10
   14002849d:	jne    0x140028594
   1400284a3:	mov    r8,rdx
   1400284a6:	add    rcx,r9
   1400284a9:	sub    r8,r10
   1400284ac:	mov    rax,r8
   1400284af:	and    eax,0x1f
   1400284b2:	sub    r8,rax
   1400284b5:	add    r8,rcx
   1400284b8:	vxorps ymm2,ymm2,ymm2
   1400284bc:	jmp    0x1400284ce
   1400284be:	vpcmpeqb ymm1,ymm2,YMMWORD PTR [rcx]
   1400284c2:	vpmovmskb eax,ymm1
   1400284c6:	test   eax,eax
   1400284c8:	jne    0x1400284d3
   1400284ca:	add    rcx,0x20
   1400284ce:	cmp    rcx,r8
   1400284d1:	jne    0x1400284be
   1400284d3:	lea    rax,[r9+rdx*1]
   1400284d7:	jmp    0x1400284e1
   1400284d9:	cmp    BYTE PTR [rcx],0x0
   1400284dc:	je     0x1400284e6
   1400284de:	inc    rcx
   1400284e1:	cmp    rcx,rax
   1400284e4:	jne    0x1400284d9
   1400284e6:	sub    rcx,r9
   1400284e9:	vzeroupper 
   1400284ec:	jmp    0x140028594
   1400284f1:	cmp    eax,0x1
   1400284f4:	jl     0x14002857e
   1400284fa:	and    ecx,0xf
   1400284fd:	mov    eax,0x10
   140028502:	sub    rax,rcx
   140028505:	neg    rcx
   140028508:	mov    rcx,r9
   14002850b:	sbb    r10,r10
   14002850e:	and    r10,rax
   140028511:	cmp    rdx,r10
   140028514:	cmovb  r10,rdx
   140028518:	lea    rax,[r10+r9*1]
   14002851c:	cmp    r9,rax
   14002851f:	je     0x14002852e
   140028521:	cmp    BYTE PTR [rcx],0x0
   140028524:	je     0x14002852e
   140028526:	inc    rcx
   140028529:	cmp    rcx,rax
   14002852c:	jne    0x140028521
   14002852e:	sub    rcx,r9
   140028531:	cmp    rcx,r10
   140028534:	jne    0x140028594
   140028536:	mov    r8,rdx
   140028539:	add    rcx,r9
   14002853c:	sub    r8,r10
   14002853f:	xorps  xmm1,xmm1
   140028542:	mov    rax,r8
   140028545:	and    eax,0xf
   140028548:	sub    r8,rax
   14002854b:	add    r8,rcx
   14002854e:	jmp    0x140028564
   140028550:	movdqa xmm0,xmm1
   140028554:	pcmpeqb xmm0,XMMWORD PTR [rcx]
   140028558:	pmovmskb eax,xmm0
   14002855c:	test   eax,eax
   14002855e:	jne    0x140028569
   140028560:	add    rcx,0x10
   140028564:	cmp    rcx,r8
   140028567:	jne    0x140028550
   140028569:	lea    rax,[r9+rdx*1]
   14002856d:	jmp    0x140028577
   14002856f:	cmp    BYTE PTR [rcx],0x0
   140028572:	je     0x140028591
   140028574:	inc    rcx
   140028577:	cmp    rcx,rax
   14002857a:	jne    0x14002856f
   14002857c:	jmp    0x140028591
   14002857e:	lea    rax,[rcx+rdx*1]
   140028582:	jmp    0x14002858c
   140028584:	cmp    BYTE PTR [rcx],0x0
   140028587:	je     0x140028591
   140028589:	inc    rcx
   14002858c:	cmp    rcx,rax
   14002858f:	jne    0x140028584
   140028591:	sub    rcx,r9
   140028594:	mov    rax,rcx
   140028597:	add    rsp,0x20
   14002859b:	pop    rbp
   14002859c:	ret    
   14002859d:	int3   
   14002859e:	int3   
   14002859f:	int3   
   1400285a0:	mov    rax,rsp
   1400285a3:	mov    QWORD PTR [rax+0x8],rbx
   1400285a7:	mov    QWORD PTR [rax+0x10],rbp
   1400285ab:	mov    QWORD PTR [rax+0x18],rsi
   1400285af:	mov    QWORD PTR [rax+0x20],rdi
   1400285b3:	push   r14
   1400285b5:	sub    rsp,0x20
   1400285b9:	mov    eax,DWORD PTR [rip+0x1ff51]        # 0x140048510
   1400285bf:	xor    ebx,ebx
   1400285c1:	mov    edi,0x3
   1400285c6:	test   eax,eax
   1400285c8:	jne    0x1400285d1
   1400285ca:	mov    eax,0x200
   1400285cf:	jmp    0x1400285d6
   1400285d1:	cmp    eax,edi
   1400285d3:	cmovl  eax,edi
   1400285d6:	movsxd rcx,eax
   1400285d9:	mov    edx,0x8
   1400285de:	mov    DWORD PTR [rip+0x1ff2c],eax        # 0x140048510
   1400285e4:	call   0x140007c20
   1400285e9:	xor    ecx,ecx
   1400285eb:	mov    QWORD PTR [rip+0x1ff26],rax        # 0x140048518
   1400285f2:	call   0x140007bd0
   1400285f7:	cmp    QWORD PTR [rip+0x1ff1a],rbx        # 0x140048518
   1400285fe:	jne    0x14002862f
   140028600:	mov    edx,0x8
   140028605:	mov    DWORD PTR [rip+0x1ff05],edi        # 0x140048510
   14002860b:	mov    rcx,rdi
   14002860e:	call   0x140007c20
   140028613:	xor    ecx,ecx
   140028615:	mov    QWORD PTR [rip+0x1fefc],rax        # 0x140048518
   14002861c:	call   0x140007bd0
   140028621:	cmp    QWORD PTR [rip+0x1fef0],rbx        # 0x140048518
   140028628:	jne    0x14002862f
   14002862a:	or     eax,0xffffffff
   14002862d:	jmp    0x1400286a4
   14002862f:	mov    r14,rbx
   140028632:	lea    rsi,[rip+0x1dc0f]        # 0x140046248
   140028639:	lea    rbp,[rip+0x1dbf0]        # 0x140046230
   140028640:	lea    rcx,[rbp+0x30]
   140028644:	xor    r8d,r8d
   140028647:	mov    edx,0xfa0
   14002864c:	call   0x14002a8b4
   140028651:	mov    rax,QWORD PTR [rip+0x1fec0]        # 0x140048518
   140028658:	lea    rdx,[rip+0x20241]        # 0x1400488a0
   14002865f:	mov    rcx,rbx
   140028662:	and    ecx,0x3f
   140028665:	shl    rcx,0x6
   140028669:	mov    QWORD PTR [r14+rax*1],rbp
   14002866d:	mov    rax,rbx
   140028670:	sar    rax,0x6
   140028674:	mov    rax,QWORD PTR [rdx+rax*8]
   140028678:	mov    rcx,QWORD PTR [rax+rcx*1+0x28]
   14002867d:	add    rcx,0x2
   140028681:	cmp    rcx,0x2
   140028685:	ja     0x14002868d
   140028687:	mov    DWORD PTR [rsi],0xfffffffe
   14002868d:	inc    rbx
   140028690:	add    rbp,0x58
   140028694:	add    r14,0x8
   140028698:	add    rsi,0x58
   14002869c:	sub    rdi,0x1
   1400286a0:	jne    0x140028640
   1400286a2:	xor    eax,eax
   1400286a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400286a9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400286ae:	mov    rsi,QWORD PTR [rsp+0x40]
   1400286b3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400286b8:	add    rsp,0x20
   1400286bc:	pop    r14
   1400286be:	ret    
   1400286bf:	int3   
   1400286c0:	rex push rbx
   1400286c2:	sub    rsp,0x20
   1400286c6:	call   0x1400287f8
   1400286cb:	call   0x14002ab88
   1400286d0:	xor    ebx,ebx
   1400286d2:	mov    rcx,QWORD PTR [rip+0x1fe3f]        # 0x140048518
   1400286d9:	mov    rcx,QWORD PTR [rbx+rcx*1]
   1400286dd:	call   0x14002ac3c
   1400286e2:	mov    rax,QWORD PTR [rip+0x1fe2f]        # 0x140048518
   1400286e9:	mov    rcx,QWORD PTR [rbx+rax*1]
   1400286ed:	add    rcx,0x30
   1400286f1:	call   QWORD PTR [rip+0x99f1]        # 0x1400320e8
   1400286f7:	add    rbx,0x8
   1400286fb:	cmp    rbx,0x18
   1400286ff:	jne    0x1400286d2
   140028701:	mov    rcx,QWORD PTR [rip+0x1fe10]        # 0x140048518
   140028708:	call   0x140007bd0
   14002870d:	and    QWORD PTR [rip+0x1fe03],0x0        # 0x140048518
   140028715:	add    rsp,0x20
   140028719:	pop    rbx
   14002871a:	ret    
   14002871b:	int3   
   14002871c:	add    rcx,0x30
   140028720:	rex.W jmp QWORD PTR [rip+0x99d1]        # 0x1400320f8
   140028727:	int3   
   140028728:	add    rcx,0x30
   14002872c:	rex.W jmp QWORD PTR [rip+0x99bd]        # 0x1400320f0
   140028733:	int3   
   140028734:	mov    QWORD PTR [rsp+0x8],rbx
   140028739:	mov    QWORD PTR [rsp+0x10],rsi
   14002873e:	push   rdi
   14002873f:	sub    rsp,0x20
   140028743:	mov    rbx,rcx
   140028746:	mov    eax,DWORD PTR [rcx+0x14]
   140028749:	and    al,0x3
   14002874b:	cmp    al,0x2
   14002874d:	jne    0x140028799
   14002874f:	mov    eax,DWORD PTR [rcx+0x14]
   140028752:	test   al,0xc0
   140028754:	je     0x140028799
   140028756:	mov    edi,DWORD PTR [rcx]
   140028758:	sub    edi,DWORD PTR [rcx+0x8]
   14002875b:	and    DWORD PTR [rcx+0x10],0x0
   14002875f:	mov    rsi,QWORD PTR [rcx+0x8]
   140028763:	mov    QWORD PTR [rcx],rsi
   140028766:	test   edi,edi
   140028768:	jle    0x140028799
   14002876a:	call   0x14002ba28
   14002876f:	mov    ecx,eax
   140028771:	mov    r8d,edi
   140028774:	mov    rdx,rsi
   140028777:	call   0x14002b658
   14002877c:	cmp    edi,eax
   14002877e:	je     0x14002878a
   140028780:	lock or DWORD PTR [rbx+0x14],0x10
   140028785:	or     eax,0xffffffff
   140028788:	jmp    0x14002879b
   14002878a:	mov    eax,DWORD PTR [rbx+0x14]
   14002878d:	shr    eax,0x2
   140028790:	test   al,0x1
   140028792:	je     0x140028799
   140028794:	lock and DWORD PTR [rbx+0x14],0xfffffffd
   140028799:	xor    eax,eax
   14002879b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400287a0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400287a5:	add    rsp,0x20
   1400287a9:	pop    rdi
   1400287aa:	ret    
   1400287ab:	int3   
   1400287ac:	rex push rbx
   1400287ae:	sub    rsp,0x20
   1400287b2:	mov    rbx,rcx
   1400287b5:	test   rcx,rcx
   1400287b8:	jne    0x1400287c4
   1400287ba:	add    rsp,0x20
   1400287be:	pop    rbx
   1400287bf:	jmp    0x140028804
   1400287c4:	call   0x140028734
   1400287c9:	test   eax,eax
   1400287cb:	je     0x1400287d2
   1400287cd:	or     eax,0xffffffff
   1400287d0:	jmp    0x1400287f1
   1400287d2:	mov    eax,DWORD PTR [rbx+0x14]
   1400287d5:	shr    eax,0xb
   1400287d8:	test   al,0x1
   1400287da:	je     0x1400287ef
   1400287dc:	mov    rcx,rbx
   1400287df:	call   0x14002ba28
   1400287e4:	mov    ecx,eax
   1400287e6:	call   0x14002b024
   1400287eb:	test   eax,eax
   1400287ed:	jne    0x1400287cd
   1400287ef:	xor    eax,eax
   1400287f1:	add    rsp,0x20
   1400287f5:	pop    rbx
   1400287f6:	ret    
   1400287f7:	int3   
   1400287f8:	mov    ecx,0x1
   1400287fd:	jmp    0x140028804
   140028802:	int3   
   140028803:	int3   
   140028804:	mov    rax,rsp
   140028807:	mov    QWORD PTR [rax+0x8],rbx
   14002880b:	mov    QWORD PTR [rax+0x18],rsi
   14002880f:	push   rdi
   140028810:	push   r14
   140028812:	push   r15
   140028814:	sub    rsp,0x40
   140028818:	mov    esi,ecx
   14002881a:	and    DWORD PTR [rax-0x34],0x0
   14002881e:	and    DWORD PTR [rax-0x38],0x0
   140028822:	mov    ecx,0x8
   140028827:	call   0x14002af28
   14002882c:	nop
   14002882d:	mov    rdi,QWORD PTR [rip+0x1fce4]        # 0x140048518
   140028834:	movsxd rax,DWORD PTR [rip+0x1fcd5]        # 0x140048510
   14002883b:	lea    r14,[rdi+rax*8]
   14002883f:	or     r15d,0xffffffff
   140028843:	mov    QWORD PTR [rsp+0x28],rdi
   140028848:	cmp    rdi,r14
   14002884b:	je     0x1400288be
   14002884d:	mov    rbx,QWORD PTR [rdi]
   140028850:	mov    QWORD PTR [rsp+0x68],rbx
   140028855:	mov    QWORD PTR [rsp+0x30],rbx
   14002885a:	test   rbx,rbx
   14002885d:	jne    0x140028861
   14002885f:	jmp    0x1400288b8
   140028861:	mov    rcx,rbx
   140028864:	call   0x14002871c
   140028869:	nop
   14002886a:	mov    eax,DWORD PTR [rbx+0x14]
   14002886d:	shr    eax,0xd
   140028870:	test   al,0x1
   140028872:	je     0x1400288b0
   140028874:	cmp    esi,0x1
   140028877:	jne    0x14002888c
   140028879:	mov    rcx,rbx
   14002887c:	call   0x1400287ac
   140028881:	cmp    eax,r15d
   140028884:	je     0x1400288b0
   140028886:	inc    DWORD PTR [rsp+0x24]
   14002888a:	jmp    0x1400288b0
   14002888c:	test   esi,esi
   14002888e:	jne    0x1400288b0
   140028890:	mov    eax,DWORD PTR [rbx+0x14]
   140028893:	shr    eax,1
   140028895:	test   al,0x1
   140028897:	je     0x1400288b0
   140028899:	mov    rcx,rbx
   14002889c:	call   0x1400287ac
   1400288a1:	mov    edx,DWORD PTR [rsp+0x20]
   1400288a5:	cmp    eax,r15d
   1400288a8:	cmove  edx,r15d
   1400288ac:	mov    DWORD PTR [rsp+0x20],edx
   1400288b0:	mov    rcx,rbx
   1400288b3:	call   0x140028728
   1400288b8:	add    rdi,0x8
   1400288bc:	jmp    0x140028843
   1400288be:	mov    ecx,0x8
   1400288c3:	call   0x14002af7c
   1400288c8:	mov    eax,DWORD PTR [rsp+0x20]
   1400288cc:	cmp    esi,0x1
   1400288cf:	cmove  eax,DWORD PTR [rsp+0x24]
   1400288d4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400288d9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400288de:	add    rsp,0x40
   1400288e2:	pop    r15
   1400288e4:	pop    r14
   1400288e6:	pop    rdi
   1400288e7:	ret    
   1400288e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400288ed:	push   rdi
   1400288ee:	sub    rsp,0x20
   1400288f2:	mov    BYTE PTR [rcx+0x18],0x0
   1400288f6:	mov    rdi,rcx
   1400288f9:	test   rdx,rdx
   1400288fc:	je     0x140028903
   1400288fe:	movups xmm0,XMMWORD PTR [rdx]
   140028901:	jmp    0x140028914
   140028903:	mov    eax,DWORD PTR [rip+0x1fdcf]        # 0x1400486d8
   140028909:	test   eax,eax
   14002890b:	jne    0x14002891b
   14002890d:	movups xmm0,XMMWORD PTR [rip+0x1db94]        # 0x1400464a8
   140028914:	movdqu XMMWORD PTR [rcx+0x8],xmm0
   140028919:	jmp    0x14002896a
   14002891b:	call   0x14002a248
   140028920:	mov    QWORD PTR [rdi],rax
   140028923:	lea    rdx,[rdi+0x8]
   140028927:	mov    rcx,QWORD PTR [rax+0x90]
   14002892e:	mov    QWORD PTR [rdx],rcx
   140028931:	mov    rcx,QWORD PTR [rax+0x88]
   140028938:	mov    QWORD PTR [rdi+0x10],rcx
   14002893c:	mov    rcx,rax
   14002893f:	call   0x14002bd30
   140028944:	mov    rcx,QWORD PTR [rdi]
   140028947:	lea    rdx,[rdi+0x10]
   14002894b:	call   0x14002bd64
   140028950:	mov    rcx,QWORD PTR [rdi]
   140028953:	mov    eax,DWORD PTR [rcx+0x3a8]
   140028959:	test   al,0x2
   14002895b:	jne    0x14002896a
   14002895d:	or     eax,0x2
   140028960:	mov    DWORD PTR [rcx+0x3a8],eax
   140028966:	mov    BYTE PTR [rdi+0x18],0x1
   14002896a:	mov    rax,rdi
   14002896d:	mov    rbx,QWORD PTR [rsp+0x30]
   140028972:	add    rsp,0x20
   140028976:	pop    rdi
   140028977:	ret    
   140028978:	mov    QWORD PTR [rsp+0x8],rbx
   14002897d:	mov    QWORD PTR [rsp+0x10],rbp
   140028982:	mov    QWORD PTR [rsp+0x18],rsi
   140028987:	push   rdi
   140028988:	sub    rsp,0x20
   14002898c:	mov    rsi,rdx
   14002898f:	mov    edi,ecx
   140028991:	call   0x14002a2dc
   140028996:	xor    r8d,r8d
   140028999:	mov    rbx,rax
   14002899c:	test   rax,rax
   14002899f:	jne    0x1400289a8
   1400289a1:	xor    eax,eax
   1400289a3:	jmp    0x140028af0
   1400289a8:	mov    rcx,QWORD PTR [rax]
   1400289ab:	mov    rax,rcx
   1400289ae:	lea    rdx,[rcx+0xc0]
   1400289b5:	cmp    rcx,rdx
   1400289b8:	je     0x1400289c7
   1400289ba:	cmp    DWORD PTR [rax],edi
   1400289bc:	je     0x1400289ca
   1400289be:	add    rax,0x10
   1400289c2:	cmp    rax,rdx
   1400289c5:	jne    0x1400289ba
   1400289c7:	mov    rax,r8
   1400289ca:	test   rax,rax
   1400289cd:	je     0x1400289a1
   1400289cf:	mov    rdi,QWORD PTR [rax+0x8]
   1400289d3:	test   rdi,rdi
   1400289d6:	je     0x1400289a1
   1400289d8:	cmp    rdi,0x5
   1400289dc:	jne    0x1400289ea
   1400289de:	mov    QWORD PTR [rax+0x8],r8
   1400289e2:	lea    eax,[rdi-0x4]
   1400289e5:	jmp    0x140028af0
   1400289ea:	cmp    rdi,0x1
   1400289ee:	je     0x140028aed
   1400289f4:	mov    rbp,QWORD PTR [rbx+0x8]
   1400289f8:	mov    QWORD PTR [rbx+0x8],rsi
   1400289fc:	mov    esi,DWORD PTR [rax+0x4]
   1400289ff:	cmp    esi,0x8
   140028a02:	jne    0x140028ad8
   140028a08:	add    rcx,0x30
   140028a0c:	lea    rdx,[rcx+0x90]
   140028a13:	jmp    0x140028a1d
   140028a15:	mov    QWORD PTR [rcx+0x8],r8
   140028a19:	add    rcx,0x10
   140028a1d:	cmp    rcx,rdx
   140028a20:	jne    0x140028a15
   140028a22:	cmp    DWORD PTR [rax],0xc000008d
   140028a28:	mov    esi,DWORD PTR [rbx+0x10]
   140028a2b:	je     0x140028ab9
   140028a31:	cmp    DWORD PTR [rax],0xc000008e
   140028a37:	je     0x140028ab0
   140028a39:	cmp    DWORD PTR [rax],0xc000008f
   140028a3f:	je     0x140028aa7
   140028a41:	cmp    DWORD PTR [rax],0xc0000090
   140028a47:	je     0x140028a9e
   140028a49:	cmp    DWORD PTR [rax],0xc0000091
   140028a4f:	je     0x140028a95
   140028a51:	cmp    DWORD PTR [rax],0xc0000092
   140028a57:	je     0x140028a8c
   140028a59:	cmp    DWORD PTR [rax],0xc0000093
   140028a5f:	je     0x140028a83
   140028a61:	cmp    DWORD PTR [rax],0xc00002b4
   140028a67:	je     0x140028a7a
   140028a69:	cmp    DWORD PTR [rax],0xc00002b5
   140028a6f:	jne    0x140028ac0
   140028a71:	mov    DWORD PTR [rbx+0x10],0x8d
   140028a78:	jmp    0x140028ac0
   140028a7a:	mov    DWORD PTR [rbx+0x10],0x8e
   140028a81:	jmp    0x140028ac0
   140028a83:	mov    DWORD PTR [rbx+0x10],0x85
   140028a8a:	jmp    0x140028ac0
   140028a8c:	mov    DWORD PTR [rbx+0x10],0x8a
   140028a93:	jmp    0x140028ac0
   140028a95:	mov    DWORD PTR [rbx+0x10],0x84
   140028a9c:	jmp    0x140028ac0
   140028a9e:	mov    DWORD PTR [rbx+0x10],0x81
   140028aa5:	jmp    0x140028ac0
   140028aa7:	mov    DWORD PTR [rbx+0x10],0x86
   140028aae:	jmp    0x140028ac0
   140028ab0:	mov    DWORD PTR [rbx+0x10],0x83
   140028ab7:	jmp    0x140028ac0
   140028ab9:	mov    DWORD PTR [rbx+0x10],0x82
   140028ac0:	mov    rcx,rdi
   140028ac3:	call   QWORD PTR [rip+0x9b17]        # 0x1400325e0
   140028ac9:	mov    edx,DWORD PTR [rbx+0x10]
   140028acc:	mov    ecx,0x8
   140028ad1:	call   rdi
   140028ad3:	mov    DWORD PTR [rbx+0x10],esi
   140028ad6:	jmp    0x140028ae9
   140028ad8:	mov    rcx,rdi
   140028adb:	mov    QWORD PTR [rax+0x8],r8
   140028adf:	call   QWORD PTR [rip+0x9afb]        # 0x1400325e0
   140028ae5:	mov    ecx,esi
   140028ae7:	call   rdi
   140028ae9:	mov    QWORD PTR [rbx+0x8],rbp
   140028aed:	or     eax,0xffffffff
   140028af0:	mov    rbx,QWORD PTR [rsp+0x30]
   140028af5:	mov    rbp,QWORD PTR [rsp+0x38]
   140028afa:	mov    rsi,QWORD PTR [rsp+0x40]
   140028aff:	add    rsp,0x20
   140028b03:	pop    rdi
   140028b04:	ret    
   140028b05:	int3   
   140028b06:	int3   
   140028b07:	int3   
   140028b08:	xor    eax,eax
   140028b0a:	cmp    ecx,0xe06d7363
   140028b10:	sete   al
   140028b13:	ret    
   140028b14:	mov    rax,rsp
   140028b17:	mov    QWORD PTR [rax+0x8],rbx
   140028b1b:	mov    QWORD PTR [rax+0x10],rsi
   140028b1f:	mov    QWORD PTR [rax+0x18],rdi
   140028b23:	mov    QWORD PTR [rax+0x20],r14
   140028b27:	push   r15
   140028b29:	sub    rsp,0x20
   140028b2d:	mov    esi,r8d
   140028b30:	mov    ebx,edx
   140028b32:	mov    r14d,ecx
   140028b35:	test   r8d,r8d
   140028b38:	jne    0x140028b84
   140028b3a:	xor    ecx,ecx
   140028b3c:	call   QWORD PTR [rip+0x95e6]        # 0x140032128
   140028b42:	test   rax,rax
   140028b45:	je     0x140028b84
   140028b47:	mov    ecx,0x5a4d
   140028b4c:	cmp    WORD PTR [rax],cx
   140028b4f:	jne    0x140028b84
   140028b51:	movsxd rcx,DWORD PTR [rax+0x3c]
   140028b55:	add    rcx,rax
   140028b58:	cmp    DWORD PTR [rcx],0x4550
   140028b5e:	jne    0x140028b84
   140028b60:	mov    eax,0x20b
   140028b65:	cmp    WORD PTR [rcx+0x18],ax
   140028b69:	jne    0x140028b84
   140028b6b:	cmp    DWORD PTR [rcx+0x84],0xe
   140028b72:	jbe    0x140028b84
   140028b74:	cmp    DWORD PTR [rcx+0xf8],esi
   140028b7a:	je     0x140028b84
   140028b7c:	mov    ecx,r14d
   140028b7f:	call   0x140028ccc
   140028b84:	mov    ecx,0x2
   140028b89:	call   0x14002af28
   140028b8e:	nop
   140028b8f:	cmp    BYTE PTR [rip+0x1f99a],0x0        # 0x140048530
   140028b96:	jne    0x140028c4e
   140028b9c:	mov    r15d,0x1
   140028ba2:	mov    eax,r15d
   140028ba5:	xchg   DWORD PTR [rip+0x1f975],eax        # 0x140048520
   140028bab:	test   ebx,ebx
   140028bad:	jne    0x140028bf7
   140028baf:	mov    rdi,QWORD PTR [rip+0x1d632]        # 0x1400461e8
   140028bb6:	mov    edx,edi
   140028bb8:	and    edx,0x3f
   140028bbb:	lea    ecx,[rbx+0x40]
   140028bbe:	sub    ecx,edx
   140028bc0:	xor    eax,eax
   140028bc2:	ror    rax,cl
   140028bc5:	xor    rax,rdi
   140028bc8:	mov    rcx,QWORD PTR [rip+0x1f959]        # 0x140048528
   140028bcf:	cmp    rcx,rax
   140028bd2:	je     0x140028bee
   140028bd4:	xor    rdi,rcx
   140028bd7:	mov    ecx,edx
   140028bd9:	ror    rdi,cl
   140028bdc:	mov    rcx,rdi
   140028bdf:	call   QWORD PTR [rip+0x99fb]        # 0x1400325e0
   140028be5:	xor    r8d,r8d
   140028be8:	xor    edx,edx
   140028bea:	xor    ecx,ecx
   140028bec:	call   rdi
   140028bee:	lea    rcx,[rip+0x1fa73]        # 0x140048668
   140028bf5:	jmp    0x140028c03
   140028bf7:	cmp    ebx,r15d
   140028bfa:	jne    0x140028c09
   140028bfc:	lea    rcx,[rip+0x1fa7d]        # 0x140048680
   140028c03:	call   0x140029888
   140028c08:	nop
   140028c09:	test   ebx,ebx
   140028c0b:	jne    0x140028c20
   140028c0d:	lea    rdx,[rip+0x9b4c]        # 0x140032760
   140028c14:	lea    rcx,[rip+0x9b25]        # 0x140032740
   140028c1b:	call   0x140029b60
   140028c20:	lea    rdx,[rip+0x9b49]        # 0x140032770
   140028c27:	lea    rcx,[rip+0x9b3a]        # 0x140032768
   140028c2e:	call   0x140029b60
   140028c33:	movzx  eax,BYTE PTR [rip+0x1f8f6]        # 0x140048530
   140028c3a:	test   esi,esi
   140028c3c:	cmove  eax,r15d
   140028c40:	mov    BYTE PTR [rip+0x1f8ea],al        # 0x140048530
   140028c46:	jmp    0x140028c4e
   140028c48:	call   0x140029d90
   140028c4d:	nop
   140028c4e:	mov    ecx,0x2
   140028c53:	call   0x14002af7c
   140028c58:	test   esi,esi
   140028c5a:	jne    0x140028c65
   140028c5c:	mov    ecx,r14d
   140028c5f:	call   0x140028c80
   140028c64:	int3   
   140028c65:	mov    rbx,QWORD PTR [rsp+0x30]
   140028c6a:	mov    rsi,QWORD PTR [rsp+0x38]
   140028c6f:	mov    rdi,QWORD PTR [rsp+0x40]
   140028c74:	mov    r14,QWORD PTR [rsp+0x48]
   140028c79:	add    rsp,0x20
   140028c7d:	pop    r15
   140028c7f:	ret    
   140028c80:	rex push rbx
   140028c82:	sub    rsp,0x20
   140028c86:	mov    ebx,ecx
   140028c88:	call   0x14002aabc
   140028c8d:	test   al,al
   140028c8f:	je     0x140028cb9
   140028c91:	mov    rax,QWORD PTR gs:0x60
   140028c9a:	mov    edx,DWORD PTR [rax+0xbc]
   140028ca0:	shr    edx,0x8
   140028ca3:	test   dl,0x1
   140028ca6:	jne    0x140028cb9
   140028ca8:	call   QWORD PTR [rip+0x94d2]        # 0x140032180
   140028cae:	mov    rcx,rax
   140028cb1:	mov    edx,ebx
   140028cb3:	call   QWORD PTR [rip+0x9427]        # 0x1400320e0
   140028cb9:	mov    ecx,ebx
   140028cbb:	call   0x140028ccc
   140028cc0:	mov    ecx,ebx
   140028cc2:	call   QWORD PTR [rip+0x9410]        # 0x1400320d8
   140028cc8:	int3   
   140028cc9:	int3   
   140028cca:	int3   
   140028ccb:	int3   
   140028ccc:	mov    QWORD PTR [rsp+0x8],rbx
   140028cd1:	push   rdi
   140028cd2:	sub    rsp,0x20
   140028cd6:	and    QWORD PTR [rsp+0x38],0x0
   140028cdc:	lea    r8,[rsp+0x38]
   140028ce1:	mov    edi,ecx
   140028ce3:	lea    rdx,[rip+0x1011e]        # 0x140038e08
   140028cea:	xor    ecx,ecx
   140028cec:	call   QWORD PTR [rip+0x93de]        # 0x1400320d0
   140028cf2:	test   eax,eax
   140028cf4:	je     0x140028d1d
   140028cf6:	mov    rcx,QWORD PTR [rsp+0x38]
   140028cfb:	lea    rdx,[rip+0x1011e]        # 0x140038e20
   140028d02:	call   QWORD PTR [rip+0x94c8]        # 0x1400321d0
   140028d08:	mov    rbx,rax
   140028d0b:	test   rax,rax
   140028d0e:	je     0x140028d1d
   140028d10:	mov    rcx,rax
   140028d13:	call   QWORD PTR [rip+0x98c7]        # 0x1400325e0
   140028d19:	mov    ecx,edi
   140028d1b:	call   rbx
   140028d1d:	mov    rcx,QWORD PTR [rsp+0x38]
   140028d22:	test   rcx,rcx
   140028d25:	je     0x140028d2d
   140028d27:	call   QWORD PTR [rip+0x94ab]        # 0x1400321d8
   140028d2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140028d32:	add    rsp,0x20
   140028d36:	pop    rdi
   140028d37:	ret    
   140028d38:	mov    QWORD PTR [rip+0x1f7e9],rcx        # 0x140048528
   140028d3f:	ret    
   140028d40:	mov    edx,0x2
   140028d45:	xor    ecx,ecx
   140028d47:	lea    r8d,[rdx-0x1]
   140028d4b:	jmp    0x140028b14
   140028d50:	xor    edx,edx
   140028d52:	xor    ecx,ecx
   140028d54:	lea    r8d,[rdx+0x1]
   140028d58:	jmp    0x140028b14
   140028d5d:	int3   
   140028d5e:	int3   
   140028d5f:	int3   
   140028d60:	xor    r8d,r8d
   140028d63:	lea    edx,[r8+0x2]
   140028d67:	jmp    0x140028b14
   140028d6c:	sub    rsp,0x28
   140028d70:	mov    r8,QWORD PTR [rip+0x1d471]        # 0x1400461e8
   140028d77:	mov    rdx,rcx
   140028d7a:	mov    eax,r8d
   140028d7d:	mov    ecx,0x40
   140028d82:	and    eax,0x3f
   140028d85:	sub    ecx,eax
   140028d87:	xor    eax,eax
   140028d89:	ror    rax,cl
   140028d8c:	xor    rax,r8
   140028d8f:	cmp    QWORD PTR [rip+0x1f792],rax        # 0x140048528
   140028d96:	jne    0x140028daa
   140028d98:	ror    rdx,cl
   140028d9b:	xor    rdx,r8
   140028d9e:	mov    QWORD PTR [rip+0x1f783],rdx        # 0x140048528
   140028da5:	add    rsp,0x28
   140028da9:	ret    
   140028daa:	call   0x140029d90
   140028daf:	int3   
   140028db0:	xor    r8d,r8d
   140028db3:	xor    edx,edx
   140028db5:	jmp    0x140028b14
   140028dba:	int3   
   140028dbb:	int3   
   140028dbc:	mov    rax,rsp
   140028dbf:	mov    QWORD PTR [rax+0x8],rbx
   140028dc3:	mov    QWORD PTR [rax+0x10],rbp
   140028dc7:	mov    QWORD PTR [rax+0x18],rsi
   140028dcb:	mov    QWORD PTR [rax+0x20],rdi
   140028dcf:	push   r12
   140028dd1:	push   r14
   140028dd3:	push   r15
   140028dd5:	sub    rsp,0x20
   140028dd9:	mov    r15,QWORD PTR [rsp+0x60]
   140028dde:	mov    r12,r9
   140028de1:	mov    rdi,r8
   140028de4:	mov    r14,rdx
   140028de7:	mov    rbx,rcx
   140028dea:	and    QWORD PTR [r15],0x0
   140028dee:	mov    QWORD PTR [r9],0x1
   140028df5:	test   rdx,rdx
   140028df8:	je     0x140028e01
   140028dfa:	mov    QWORD PTR [rdx],r8
   140028dfd:	add    r14,0x8
   140028e01:	xor    bpl,bpl
   140028e04:	cmp    BYTE PTR [rbx],0x22
   140028e07:	jne    0x140028e18
   140028e09:	test   bpl,bpl
   140028e0c:	mov    sil,0x22
   140028e0f:	sete   bpl
   140028e13:	inc    rbx
   140028e16:	jmp    0x140028e4f
   140028e18:	inc    QWORD PTR [r15]
   140028e1b:	test   rdi,rdi
   140028e1e:	je     0x140028e27
   140028e20:	mov    al,BYTE PTR [rbx]
   140028e22:	mov    BYTE PTR [rdi],al
   140028e24:	inc    rdi
   140028e27:	movsx  esi,BYTE PTR [rbx]
   140028e2a:	inc    rbx
   140028e2d:	mov    ecx,esi
   140028e2f:	call   0x14002ce48
   140028e34:	test   eax,eax
   140028e36:	je     0x140028e4a
   140028e38:	inc    QWORD PTR [r15]
   140028e3b:	test   rdi,rdi
   140028e3e:	je     0x140028e47
   140028e40:	mov    al,BYTE PTR [rbx]
   140028e42:	mov    BYTE PTR [rdi],al
   140028e44:	inc    rdi
   140028e47:	inc    rbx
   140028e4a:	test   sil,sil
   140028e4d:	je     0x140028e6b
   140028e4f:	test   bpl,bpl
   140028e52:	jne    0x140028e04
   140028e54:	cmp    sil,0x20
   140028e58:	je     0x140028e60
   140028e5a:	cmp    sil,0x9
   140028e5e:	jne    0x140028e04
   140028e60:	test   rdi,rdi
   140028e63:	je     0x140028e6e
   140028e65:	mov    BYTE PTR [rdi-0x1],0x0
   140028e69:	jmp    0x140028e6e
   140028e6b:	dec    rbx
   140028e6e:	xor    sil,sil
   140028e71:	cmp    BYTE PTR [rbx],0x0
   140028e74:	je     0x140028f4c
   140028e7a:	cmp    BYTE PTR [rbx],0x20
   140028e7d:	je     0x140028e84
   140028e7f:	cmp    BYTE PTR [rbx],0x9
   140028e82:	jne    0x140028e89
   140028e84:	inc    rbx
   140028e87:	jmp    0x140028e7a
   140028e89:	cmp    BYTE PTR [rbx],0x0
   140028e8c:	je     0x140028f4c
   140028e92:	test   r14,r14
   140028e95:	je     0x140028e9e
   140028e97:	mov    QWORD PTR [r14],rdi
   140028e9a:	add    r14,0x8
   140028e9e:	inc    QWORD PTR [r12]
   140028ea2:	mov    edx,0x1
   140028ea7:	xor    eax,eax
   140028ea9:	jmp    0x140028eb0
   140028eab:	inc    rbx
   140028eae:	inc    eax
   140028eb0:	cmp    BYTE PTR [rbx],0x5c
   140028eb3:	je     0x140028eab
   140028eb5:	cmp    BYTE PTR [rbx],0x22
   140028eb8:	jne    0x140028eeb
   140028eba:	test   dl,al
   140028ebc:	jne    0x140028ed7
   140028ebe:	test   sil,sil
   140028ec1:	je     0x140028ece
   140028ec3:	cmp    BYTE PTR [rbx+0x1],0x22
   140028ec7:	jne    0x140028ece
   140028ec9:	inc    rbx
   140028ecc:	jmp    0x140028ed7
   140028ece:	xor    edx,edx
   140028ed0:	test   sil,sil
   140028ed3:	sete   sil
   140028ed7:	shr    eax,1
   140028ed9:	jmp    0x140028eeb
   140028edb:	dec    eax
   140028edd:	test   rdi,rdi
   140028ee0:	je     0x140028ee8
   140028ee2:	mov    BYTE PTR [rdi],0x5c
   140028ee5:	inc    rdi
   140028ee8:	inc    QWORD PTR [r15]
   140028eeb:	test   eax,eax
   140028eed:	jne    0x140028edb
   140028eef:	mov    al,BYTE PTR [rbx]
   140028ef1:	test   al,al
   140028ef3:	je     0x140028f39
   140028ef5:	test   sil,sil
   140028ef8:	jne    0x140028f02
   140028efa:	cmp    al,0x20
   140028efc:	je     0x140028f39
   140028efe:	cmp    al,0x9
   140028f00:	je     0x140028f39
   140028f02:	test   edx,edx
   140028f04:	je     0x140028f31
   140028f06:	test   rdi,rdi
   140028f09:	je     0x140028f10
   140028f0b:	mov    BYTE PTR [rdi],al
   140028f0d:	inc    rdi
   140028f10:	movsx  ecx,BYTE PTR [rbx]
   140028f13:	call   0x14002ce48
   140028f18:	test   eax,eax
   140028f1a:	je     0x140028f2e
   140028f1c:	inc    QWORD PTR [r15]
   140028f1f:	inc    rbx
   140028f22:	test   rdi,rdi
   140028f25:	je     0x140028f2e
   140028f27:	mov    al,BYTE PTR [rbx]
   140028f29:	mov    BYTE PTR [rdi],al
   140028f2b:	inc    rdi
   140028f2e:	inc    QWORD PTR [r15]
   140028f31:	inc    rbx
   140028f34:	jmp    0x140028ea2
   140028f39:	test   rdi,rdi
   140028f3c:	je     0x140028f44
   140028f3e:	mov    BYTE PTR [rdi],0x0
   140028f41:	inc    rdi
   140028f44:	inc    QWORD PTR [r15]
   140028f47:	jmp    0x140028e71
   140028f4c:	test   r14,r14
   140028f4f:	je     0x140028f55
   140028f51:	and    QWORD PTR [r14],0x0
   140028f55:	inc    QWORD PTR [r12]
   140028f59:	mov    rbx,QWORD PTR [rsp+0x40]
   140028f5e:	mov    rbp,QWORD PTR [rsp+0x48]
   140028f63:	mov    rsi,QWORD PTR [rsp+0x50]
   140028f68:	mov    rdi,QWORD PTR [rsp+0x58]
   140028f6d:	add    rsp,0x20
   140028f71:	pop    r15
   140028f73:	pop    r14
   140028f75:	pop    r12
   140028f77:	ret    
   140028f78:	rex push rbx
   140028f7a:	sub    rsp,0x20
   140028f7e:	movabs rax,0x1fffffffffffffff
   140028f88:	mov    r9,rdx
   140028f8b:	mov    r10,rcx
   140028f8e:	cmp    rcx,rax
   140028f91:	jb     0x140028f97
   140028f93:	xor    eax,eax
   140028f95:	jmp    0x140028fd3
   140028f97:	or     rcx,0xffffffffffffffff
   140028f9b:	xor    edx,edx
   140028f9d:	mov    rax,rcx
   140028fa0:	div    r8
   140028fa3:	cmp    r9,rax
   140028fa6:	jae    0x140028f93
   140028fa8:	shl    r10,0x3
   140028fac:	imul   r9,r8
   140028fb0:	sub    rcx,r10
   140028fb3:	cmp    rcx,r9
   140028fb6:	jbe    0x140028f93
   140028fb8:	lea    rcx,[r9+r10*1]
   140028fbc:	mov    edx,0x1
   140028fc1:	call   0x140007c20
   140028fc6:	xor    ecx,ecx
   140028fc8:	mov    rbx,rax
   140028fcb:	call   0x140007bd0
   140028fd0:	mov    rax,rbx
   140028fd3:	add    rsp,0x20
   140028fd7:	pop    rbx
   140028fd8:	ret    
   140028fd9:	int3   
   140028fda:	int3   
   140028fdb:	int3   
   140028fdc:	mov    QWORD PTR [rsp+0x8],rbx
   140028fe1:	push   rbp
   140028fe2:	push   rsi
   140028fe3:	push   rdi
   140028fe4:	push   r14
   140028fe6:	push   r15
   140028fe8:	mov    rbp,rsp
   140028feb:	sub    rsp,0x30
   140028fef:	lea    eax,[rcx-0x1]
   140028ff2:	mov    r14d,ecx
   140028ff5:	cmp    eax,0x1
   140028ff8:	jbe    0x140029010
   140028ffa:	call   0x14002a494
   140028fff:	mov    edi,0x16
   140029004:	mov    DWORD PTR [rax],edi
   140029006:	call   0x1400281ac
   14002900b:	jmp    0x14002913f
   140029010:	call   0x14002ca40
   140029015:	lea    rbx,[rip+0x1f524]        # 0x140048540
   14002901c:	mov    r8d,0x104
   140029022:	mov    rdx,rbx
   140029025:	xor    ecx,ecx
   140029027:	call   QWORD PTR [rip+0x909b]        # 0x1400320c8
   14002902d:	mov    rsi,QWORD PTR [rip+0x1f68c]        # 0x1400486c0
   140029034:	xor    edi,edi
   140029036:	mov    QWORD PTR [rip+0x1f693],rbx        # 0x1400486d0
   14002903d:	test   rsi,rsi
   140029040:	je     0x140029047
   140029042:	cmp    BYTE PTR [rsi],dil
   140029045:	jne    0x14002904a
   140029047:	mov    rsi,rbx
   14002904a:	lea    rax,[rbp+0x48]
   14002904e:	mov    QWORD PTR [rbp+0x40],rdi
   140029052:	lea    r9,[rbp+0x40]
   140029056:	mov    QWORD PTR [rsp+0x20],rax
   14002905b:	xor    r8d,r8d
   14002905e:	mov    QWORD PTR [rbp+0x48],rdi
   140029062:	xor    edx,edx
   140029064:	mov    rcx,rsi
   140029067:	call   0x140028dbc
   14002906c:	mov    r15,QWORD PTR [rbp+0x40]
   140029070:	mov    r8d,0x1
   140029076:	mov    rdx,QWORD PTR [rbp+0x48]
   14002907a:	mov    rcx,r15
   14002907d:	call   0x140028f78
   140029082:	mov    rbx,rax
   140029085:	test   rax,rax
   140029088:	jne    0x14002909b
   14002908a:	call   0x14002a494
   14002908f:	lea    edi,[rbx+0xc]
   140029092:	mov    DWORD PTR [rax],edi
   140029094:	xor    ecx,ecx
   140029096:	jmp    0x14002913a
   14002909b:	lea    r8,[rax+r15*8]
   14002909f:	mov    rdx,rbx
   1400290a2:	lea    rax,[rbp+0x48]
   1400290a6:	mov    rcx,rsi
   1400290a9:	lea    r9,[rbp+0x40]
   1400290ad:	mov    QWORD PTR [rsp+0x20],rax
   1400290b2:	call   0x140028dbc
   1400290b7:	cmp    r14d,0x1
   1400290bb:	jne    0x1400290d1
   1400290bd:	mov    eax,DWORD PTR [rbp+0x40]
   1400290c0:	dec    eax
   1400290c2:	mov    QWORD PTR [rip+0x1f5e7],rbx        # 0x1400486b0
   1400290c9:	mov    DWORD PTR [rip+0x1f5d9],eax        # 0x1400486a8
   1400290cf:	jmp    0x140029094
   1400290d1:	lea    rdx,[rbp+0x38]
   1400290d5:	mov    QWORD PTR [rbp+0x38],rdi
   1400290d9:	mov    rcx,rbx
   1400290dc:	call   0x14002c33c
   1400290e1:	mov    esi,eax
   1400290e3:	test   eax,eax
   1400290e5:	je     0x140029100
   1400290e7:	mov    rcx,QWORD PTR [rbp+0x38]
   1400290eb:	call   0x140007bd0
   1400290f0:	mov    rcx,rbx
   1400290f3:	mov    QWORD PTR [rbp+0x38],rdi
   1400290f7:	call   0x140007bd0
   1400290fc:	mov    edi,esi
   1400290fe:	jmp    0x14002913f
   140029100:	mov    rdx,QWORD PTR [rbp+0x38]
   140029104:	mov    rcx,rdi
   140029107:	mov    rax,rdx
   14002910a:	cmp    QWORD PTR [rdx],rdi
   14002910d:	je     0x14002911b
   14002910f:	lea    rax,[rax+0x8]
   140029113:	inc    rcx
   140029116:	cmp    QWORD PTR [rax],rdi
   140029119:	jne    0x14002910f
   14002911b:	mov    DWORD PTR [rip+0x1f587],ecx        # 0x1400486a8
   140029121:	xor    ecx,ecx
   140029123:	mov    QWORD PTR [rbp+0x38],rdi
   140029127:	mov    QWORD PTR [rip+0x1f582],rdx        # 0x1400486b0
   14002912e:	call   0x140007bd0
   140029133:	mov    rcx,rbx
   140029136:	mov    QWORD PTR [rbp+0x38],rdi
   14002913a:	call   0x140007bd0
   14002913f:	mov    eax,edi
   140029141:	mov    rbx,QWORD PTR [rsp+0x60]
   140029146:	add    rsp,0x30
   14002914a:	pop    r15
   14002914c:	pop    r14
   14002914e:	pop    rdi
   14002914f:	pop    rsi
   140029150:	pop    rbp
   140029151:	ret    
   140029152:	int3   
   140029153:	int3   
   140029154:	rex push rbx
   140029156:	sub    rsp,0x20
   14002915a:	mov    rax,QWORD PTR [rip+0x1f4e7]        # 0x140048648
   140029161:	xor    ebx,ebx
   140029163:	test   rax,rax
   140029166:	jne    0x140029193
   140029168:	cmp    QWORD PTR [rip+0x1f4e1],rbx        # 0x140048650
   14002916f:	jne    0x140029175
   140029171:	xor    eax,eax
   140029173:	jmp    0x140029193
   140029175:	call   0x14002919c
   14002917a:	test   eax,eax
   14002917c:	jne    0x140029171
   14002917e:	call   0x140029348
   140029183:	mov    rcx,QWORD PTR [rip+0x1f4be]        # 0x140048648
   14002918a:	test   eax,eax
   14002918c:	cmovne rcx,rbx
   140029190:	mov    rax,rcx
   140029193:	add    rsp,0x20
   140029197:	pop    rbx
   140029198:	ret    
   140029199:	int3   
   14002919a:	int3   
   14002919b:	int3   
   14002919c:	mov    QWORD PTR [rsp+0x8],rbx
   1400291a1:	push   rdi
   1400291a2:	sub    rsp,0x20
   1400291a6:	xor    edi,edi
   1400291a8:	cmp    QWORD PTR [rip+0x1f499],rdi        # 0x140048648
   1400291af:	je     0x1400291b5
   1400291b1:	xor    eax,eax
   1400291b3:	jmp    0x1400291fd
   1400291b5:	call   0x14002ca40
   1400291ba:	call   0x14002ce5c
   1400291bf:	mov    rbx,rax
   1400291c2:	test   rax,rax
   1400291c5:	jne    0x1400291cc
   1400291c7:	or     edi,0xffffffff
   1400291ca:	jmp    0x1400291f3
   1400291cc:	mov    rcx,rax
   1400291cf:	call   0x140029208
   1400291d4:	test   rax,rax
   1400291d7:	jne    0x1400291de
   1400291d9:	or     edi,0xffffffff
   1400291dc:	jmp    0x1400291ec
   1400291de:	mov    QWORD PTR [rip+0x1f47b],rax        # 0x140048660
   1400291e5:	mov    QWORD PTR [rip+0x1f45c],rax        # 0x140048648
   1400291ec:	xor    ecx,ecx
   1400291ee:	call   0x140007bd0
   1400291f3:	mov    rcx,rbx
   1400291f6:	call   0x140007bd0
   1400291fb:	mov    eax,edi
   1400291fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140029202:	add    rsp,0x20
   140029206:	pop    rdi
   140029207:	ret    
   140029208:	mov    QWORD PTR [rsp+0x8],rbx
   14002920d:	mov    QWORD PTR [rsp+0x10],rbp
   140029212:	mov    QWORD PTR [rsp+0x18],rsi
   140029217:	push   rdi
   140029218:	push   r14
   14002921a:	push   r15
   14002921c:	sub    rsp,0x30
   140029220:	xor    esi,esi
   140029222:	mov    r14,rcx
   140029225:	mov    edx,esi
   140029227:	jmp    0x140029243
   140029229:	cmp    al,0x3d
   14002922b:	je     0x140029230
   14002922d:	inc    rdx
   140029230:	or     rax,0xffffffffffffffff
   140029234:	inc    rax
   140029237:	cmp    BYTE PTR [rcx+rax*1],sil
   14002923b:	jne    0x140029234
   14002923d:	inc    rcx
   140029240:	add    rcx,rax
   140029243:	mov    al,BYTE PTR [rcx]
   140029245:	test   al,al
   140029247:	jne    0x140029229
   140029249:	lea    rcx,[rdx+0x1]
   14002924d:	mov    edx,0x8
   140029252:	call   0x140007c20
   140029257:	mov    rbx,rax
   14002925a:	test   rax,rax
   14002925d:	je     0x1400292cb
   14002925f:	mov    r15,rax
   140029262:	cmp    BYTE PTR [r14],sil
   140029265:	je     0x1400292c8
   140029267:	or     rbp,0xffffffffffffffff
   14002926b:	inc    rbp
   14002926e:	cmp    BYTE PTR [r14+rbp*1],sil
   140029272:	jne    0x14002926b
   140029274:	inc    rbp
   140029277:	cmp    BYTE PTR [r14],0x3d
   14002927b:	je     0x1400292b2
   14002927d:	mov    edx,0x1
   140029282:	mov    rcx,rbp
   140029285:	call   0x140007c20
   14002928a:	mov    rdi,rax
   14002928d:	test   rax,rax
   140029290:	je     0x1400292b7
   140029292:	mov    r8,r14
   140029295:	mov    rdx,rbp
   140029298:	mov    rcx,rax
   14002929b:	call   0x140029e10
   1400292a0:	xor    ecx,ecx
   1400292a2:	test   eax,eax
   1400292a4:	jne    0x1400292ee
   1400292a6:	mov    QWORD PTR [r15],rdi
   1400292a9:	add    r15,0x8
   1400292ad:	call   0x140007bd0
   1400292b2:	add    r14,rbp
   1400292b5:	jmp    0x140029262
   1400292b7:	mov    rcx,rbx
   1400292ba:	call   0x140029304
   1400292bf:	xor    ecx,ecx
   1400292c1:	call   0x140007bd0
   1400292c6:	jmp    0x1400292cb
   1400292c8:	mov    rsi,rbx
   1400292cb:	xor    ecx,ecx
   1400292cd:	call   0x140007bd0
   1400292d2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400292d7:	mov    rax,rsi
   1400292da:	mov    rsi,QWORD PTR [rsp+0x60]
   1400292df:	mov    rbp,QWORD PTR [rsp+0x58]
   1400292e4:	add    rsp,0x30
   1400292e8:	pop    r15
   1400292ea:	pop    r14
   1400292ec:	pop    rdi
   1400292ed:	ret    
   1400292ee:	xor    r9d,r9d
   1400292f1:	mov    QWORD PTR [rsp+0x20],rsi
   1400292f6:	xor    r8d,r8d
   1400292f9:	xor    edx,edx
   1400292fb:	call   0x1400281cc
   140029300:	int3   
   140029301:	int3   
   140029302:	int3   
   140029303:	int3   
   140029304:	test   rcx,rcx
   140029307:	je     0x140029344
   140029309:	mov    QWORD PTR [rsp+0x8],rbx
   14002930e:	push   rdi
   14002930f:	sub    rsp,0x20
   140029313:	mov    rax,QWORD PTR [rcx]
   140029316:	mov    rbx,rcx
   140029319:	mov    rdi,rcx
   14002931c:	jmp    0x14002932d
   14002931e:	mov    rcx,rax
   140029321:	call   0x140007bd0
   140029326:	lea    rdi,[rdi+0x8]
   14002932a:	mov    rax,QWORD PTR [rdi]
   14002932d:	test   rax,rax
   140029330:	jne    0x14002931e
   140029332:	mov    rcx,rbx
   140029335:	call   0x140007bd0
   14002933a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002933f:	add    rsp,0x20
   140029343:	pop    rdi
   140029344:	ret    
   140029345:	int3   
   140029346:	int3   
   140029347:	int3   
   140029348:	mov    QWORD PTR [rsp+0x8],rbx
   14002934d:	mov    QWORD PTR [rsp+0x10],rbp
   140029352:	push   rsi
   140029353:	sub    rsp,0x40
   140029357:	mov    rsi,QWORD PTR [rip+0x1f2f2]        # 0x140048650
   14002935e:	test   rsi,rsi
   140029361:	jne    0x1400293f2
   140029367:	or     eax,0xffffffff
   14002936a:	jmp    0x1400293fe
   14002936f:	and    QWORD PTR [rsp+0x38],0x0
   140029375:	or     r9d,0xffffffff
   140029379:	and    QWORD PTR [rsp+0x30],0x0
   14002937f:	xor    edx,edx
   140029381:	and    DWORD PTR [rsp+0x28],0x0
   140029386:	xor    ecx,ecx
   140029388:	mov    r8,QWORD PTR [rsi]
   14002938b:	and    QWORD PTR [rsp+0x20],0x0
   140029391:	call   QWORD PTR [rip+0x8d21]        # 0x1400320b8
   140029397:	movsxd rbp,eax
   14002939a:	test   eax,eax
   14002939c:	je     0x140029367
   14002939e:	mov    edx,0x1
   1400293a3:	mov    rcx,rbp
   1400293a6:	call   0x140007c20
   1400293ab:	mov    rbx,rax
   1400293ae:	test   rax,rax
   1400293b1:	je     0x14002940e
   1400293b3:	and    QWORD PTR [rsp+0x38],0x0
   1400293b9:	or     r9d,0xffffffff
   1400293bd:	and    QWORD PTR [rsp+0x30],0x0
   1400293c3:	xor    edx,edx
   1400293c5:	mov    r8,QWORD PTR [rsi]
   1400293c8:	xor    ecx,ecx
   1400293ca:	mov    DWORD PTR [rsp+0x28],ebp
   1400293ce:	mov    QWORD PTR [rsp+0x20],rax
   1400293d3:	call   QWORD PTR [rip+0x8cdf]        # 0x1400320b8
   1400293d9:	test   eax,eax
   1400293db:	je     0x14002940e
   1400293dd:	xor    edx,edx
   1400293df:	mov    rcx,rbx
   1400293e2:	call   0x14002d33c
   1400293e7:	xor    ecx,ecx
   1400293e9:	call   0x140007bd0
   1400293ee:	add    rsi,0x8
   1400293f2:	cmp    QWORD PTR [rsi],0x0
   1400293f6:	jne    0x14002936f
   1400293fc:	xor    eax,eax
   1400293fe:	mov    rbx,QWORD PTR [rsp+0x50]
   140029403:	mov    rbp,QWORD PTR [rsp+0x58]
   140029408:	add    rsp,0x40
   14002940c:	pop    rsi
   14002940d:	ret    
   14002940e:	mov    rcx,rbx
   140029411:	call   0x140007bd0
   140029416:	jmp    0x140029367
   14002941b:	int3   
   14002941c:	sub    rsp,0x28
   140029420:	mov    rcx,QWORD PTR [rcx]
   140029423:	cmp    rcx,QWORD PTR [rip+0x1f236]        # 0x140048660
   14002942a:	je     0x140029431
   14002942c:	call   0x140029304
   140029431:	add    rsp,0x28
   140029435:	ret    
   140029436:	int3   
   140029437:	int3   
   140029438:	sub    rsp,0x28
   14002943c:	mov    rcx,QWORD PTR [rcx]
   14002943f:	cmp    rcx,QWORD PTR [rip+0x1f212]        # 0x140048658
   140029446:	je     0x14002944d
   140029448:	call   0x140029304
   14002944d:	add    rsp,0x28
   140029451:	ret    
   140029452:	int3   
   140029453:	int3   
   140029454:	jmp    0x140029154
   140029459:	int3   
   14002945a:	int3   
   14002945b:	int3   
   14002945c:	sub    rsp,0x28
   140029460:	lea    rcx,[rip+0x1f1e1]        # 0x140048648
   140029467:	call   0x14002941c
   14002946c:	lea    rcx,[rip+0x1f1dd]        # 0x140048650
   140029473:	call   0x140029438
   140029478:	mov    rcx,QWORD PTR [rip+0x1f1e1]        # 0x140048660
   14002947f:	call   0x140029304
   140029484:	mov    rcx,QWORD PTR [rip+0x1f1cd]        # 0x140048658
   14002948b:	add    rsp,0x28
   14002948f:	jmp    0x140029304
   140029494:	sub    rsp,0x28
   140029498:	mov    rax,QWORD PTR [rip+0x1f1c1]        # 0x140048660
   14002949f:	test   rax,rax
   1400294a2:	jne    0x1400294b0
   1400294a4:	call   0x140029154
   1400294a9:	mov    QWORD PTR [rip+0x1f1b0],rax        # 0x140048660
   1400294b0:	add    rsp,0x28
   1400294b4:	ret    
   1400294b5:	int3   
   1400294b6:	int3   
   1400294b7:	int3   
   1400294b8:	jmp    0x14002919c
   1400294bd:	int3   
   1400294be:	int3   
   1400294bf:	int3   
   1400294c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400294c5:	mov    QWORD PTR [rsp+0x20],r9
   1400294ca:	push   rdi
   1400294cb:	sub    rsp,0x20
   1400294cf:	mov    rbx,r9
   1400294d2:	mov    rdi,r8
   1400294d5:	mov    ecx,DWORD PTR [rdx]
   1400294d7:	call   0x14002af28
   1400294dc:	nop
   1400294dd:	mov    rcx,rdi
   1400294e0:	call   0x14002969c
   1400294e5:	mov    edi,eax
   1400294e7:	mov    ecx,DWORD PTR [rbx]
   1400294e9:	call   0x14002af7c
   1400294ee:	mov    eax,edi
   1400294f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400294f5:	add    rsp,0x20
   1400294f9:	pop    rdi
   1400294fa:	ret    
   1400294fb:	int3   
   1400294fc:	mov    QWORD PTR [rsp+0x8],rbx
   140029501:	mov    QWORD PTR [rsp+0x10],rsi
   140029506:	mov    QWORD PTR [rsp+0x20],r9
   14002950b:	push   rdi
   14002950c:	push   r12
   14002950e:	push   r13
   140029510:	push   r14
   140029512:	push   r15
   140029514:	sub    rsp,0x40
   140029518:	mov    rdi,r9
   14002951b:	mov    r15,r8
   14002951e:	mov    ecx,DWORD PTR [rdx]
   140029520:	call   0x14002af28
   140029525:	nop
   140029526:	mov    rax,QWORD PTR [r15]
   140029529:	mov    rdx,QWORD PTR [rax]
   14002952c:	test   rdx,rdx
   14002952f:	jne    0x14002953a
   140029531:	or     rbx,0xffffffffffffffff
   140029535:	jmp    0x14002967a
   14002953a:	mov    rsi,QWORD PTR [rip+0x1cca7]        # 0x1400461e8
   140029541:	mov    r8d,esi
   140029544:	and    r8d,0x3f
   140029548:	mov    rdi,rsi
   14002954b:	xor    rdi,QWORD PTR [rdx]
   14002954e:	mov    ecx,r8d
   140029551:	ror    rdi,cl
   140029554:	mov    QWORD PTR [rsp+0x30],rdi
   140029559:	mov    rbx,rsi
   14002955c:	xor    rbx,QWORD PTR [rdx+0x8]
   140029560:	ror    rbx,cl
   140029563:	mov    QWORD PTR [rsp+0x20],rbx
   140029568:	lea    rax,[rdi-0x1]
   14002956c:	cmp    rax,0xfffffffffffffffd
   140029570:	ja     0x140029670
   140029576:	mov    r12,rdi
   140029579:	mov    QWORD PTR [rsp+0x28],rdi
   14002957e:	mov    r14,rbx
   140029581:	mov    QWORD PTR [rsp+0x38],rbx
   140029586:	mov    r13d,0x40
   14002958c:	mov    ecx,r13d
   14002958f:	sub    ecx,r8d
   140029592:	xor    eax,eax
   140029594:	ror    rax,cl
   140029597:	xor    rax,rsi
   14002959a:	sub    rbx,0x8
   14002959e:	mov    QWORD PTR [rsp+0x20],rbx
   1400295a3:	cmp    rbx,rdi
   1400295a6:	jb     0x1400295b4
   1400295a8:	cmp    QWORD PTR [rbx],rax
   1400295ab:	jne    0x1400295af
   1400295ad:	jmp    0x14002959a
   1400295af:	cmp    rbx,rdi
   1400295b2:	jae    0x1400295fe
   1400295b4:	or     rbx,0xffffffffffffffff
   1400295b8:	cmp    rdi,rbx
   1400295bb:	je     0x1400295cc
   1400295bd:	mov    rcx,rdi
   1400295c0:	call   0x140007bd0
   1400295c5:	mov    rsi,QWORD PTR [rip+0x1cc1c]        # 0x1400461e8
   1400295cc:	mov    eax,esi
   1400295ce:	and    eax,0x3f
   1400295d1:	sub    r13d,eax
   1400295d4:	mov    ecx,r13d
   1400295d7:	xor    edx,edx
   1400295d9:	ror    rdx,cl
   1400295dc:	xor    rdx,rsi
   1400295df:	mov    rax,QWORD PTR [r15]
   1400295e2:	mov    rcx,QWORD PTR [rax]
   1400295e5:	mov    QWORD PTR [rcx],rdx
   1400295e8:	mov    rax,QWORD PTR [r15]
   1400295eb:	mov    rcx,QWORD PTR [rax]
   1400295ee:	mov    QWORD PTR [rcx+0x8],rdx
   1400295f2:	mov    rax,QWORD PTR [r15]
   1400295f5:	mov    rcx,QWORD PTR [rax]
   1400295f8:	mov    QWORD PTR [rcx+0x10],rdx
   1400295fc:	jmp    0x140029670
   1400295fe:	mov    ecx,esi
   140029600:	and    ecx,0x3f
   140029603:	xor    rsi,QWORD PTR [rbx]
   140029606:	ror    rsi,cl
   140029609:	mov    QWORD PTR [rbx],rax
   14002960c:	mov    rcx,rsi
   14002960f:	call   QWORD PTR [rip+0x8fcb]        # 0x1400325e0
   140029615:	call   rsi
   140029617:	mov    rax,QWORD PTR [r15]
   14002961a:	mov    rdx,QWORD PTR [rax]
   14002961d:	mov    rsi,QWORD PTR [rip+0x1cbc4]        # 0x1400461e8
   140029624:	mov    r8d,esi
   140029627:	and    r8d,0x3f
   14002962b:	mov    r9,rsi
   14002962e:	xor    r9,QWORD PTR [rdx]
   140029631:	mov    ecx,r8d
   140029634:	ror    r9,cl
   140029637:	mov    rax,QWORD PTR [rdx+0x8]
   14002963b:	xor    rax,rsi
   14002963e:	ror    rax,cl
   140029641:	cmp    r9,r12
   140029644:	jne    0x14002964b
   140029646:	cmp    rax,r14
   140029649:	je     0x14002966b
   14002964b:	mov    r12,r9
   14002964e:	mov    QWORD PTR [rsp+0x28],r9
   140029653:	mov    rdi,r9
   140029656:	mov    QWORD PTR [rsp+0x30],r9
   14002965b:	mov    r14,rax
   14002965e:	mov    QWORD PTR [rsp+0x38],rax
   140029663:	mov    rbx,rax
   140029666:	mov    QWORD PTR [rsp+0x20],rax
   14002966b:	jmp    0x14002958c
   140029670:	mov    rdi,QWORD PTR [rsp+0x88]
   140029678:	xor    ebx,ebx
   14002967a:	mov    ecx,DWORD PTR [rdi]
   14002967c:	call   0x14002af7c
   140029681:	mov    eax,ebx
   140029683:	mov    rbx,QWORD PTR [rsp+0x70]
   140029688:	mov    rsi,QWORD PTR [rsp+0x78]
   14002968d:	add    rsp,0x40
   140029691:	pop    r15
   140029693:	pop    r14
   140029695:	pop    r13
   140029697:	pop    r12
   140029699:	pop    rdi
   14002969a:	ret    
   14002969b:	int3   
   14002969c:	mov    rax,rsp
   14002969f:	mov    QWORD PTR [rax+0x8],rbx
   1400296a3:	mov    QWORD PTR [rax+0x10],rbp
   1400296a7:	mov    QWORD PTR [rax+0x18],rsi
   1400296ab:	mov    QWORD PTR [rax+0x20],rdi
   1400296af:	push   r12
   1400296b1:	push   r14
   1400296b3:	push   r15
   1400296b5:	sub    rsp,0x20
   1400296b9:	mov    rax,QWORD PTR [rcx]
   1400296bc:	xor    esi,esi
   1400296be:	mov    r15,rcx
   1400296c1:	mov    rbx,QWORD PTR [rax]
   1400296c4:	test   rbx,rbx
   1400296c7:	jne    0x1400296d1
   1400296c9:	or     eax,0xffffffff
   1400296cc:	jmp    0x140029857
   1400296d1:	mov    r8,QWORD PTR [rip+0x1cb10]        # 0x1400461e8
   1400296d8:	mov    r12d,0x40
   1400296de:	mov    rbp,QWORD PTR [rbx]
   1400296e1:	mov    ecx,r8d
   1400296e4:	mov    r9,QWORD PTR [rbx+0x8]
   1400296e8:	and    ecx,0x3f
   1400296eb:	mov    rbx,QWORD PTR [rbx+0x10]
   1400296ef:	xor    rbp,r8
   1400296f2:	xor    r9,r8
   1400296f5:	ror    rbp,cl
   1400296f8:	xor    rbx,r8
   1400296fb:	ror    r9,cl
   1400296fe:	ror    rbx,cl
   140029701:	cmp    r9,rbx
   140029704:	jne    0x1400297d1
   14002970a:	sub    rbx,rbp
   14002970d:	mov    eax,0x200
   140029712:	sar    rbx,0x3
   140029716:	cmp    rbx,rax
   140029719:	mov    rdi,rbx
   14002971c:	cmova  rdi,rax
   140029720:	lea    eax,[r12-0x20]
   140029725:	add    rdi,rbx
   140029728:	cmove  rdi,rax
   14002972c:	cmp    rdi,rbx
   14002972f:	jb     0x140029750
   140029731:	lea    r8d,[r12-0x38]
   140029736:	mov    rdx,rdi
   140029739:	mov    rcx,rbp
   14002973c:	call   0x140007c70
   140029741:	xor    ecx,ecx
   140029743:	mov    r14,rax
   140029746:	call   0x140007bd0
   14002974b:	test   r14,r14
   14002974e:	jne    0x140029778
   140029750:	lea    rdi,[rbx+0x4]
   140029754:	mov    r8d,0x8
   14002975a:	mov    rdx,rdi
   14002975d:	mov    rcx,rbp
   140029760:	call   0x140007c70
   140029765:	xor    ecx,ecx
   140029767:	mov    r14,rax
   14002976a:	call   0x140007bd0
   14002976f:	test   r14,r14
   140029772:	je     0x1400296c9
   140029778:	mov    r8,QWORD PTR [rip+0x1ca69]        # 0x1400461e8
   14002977f:	lea    r9,[r14+rbx*8]
   140029783:	mov    eax,r8d
   140029786:	lea    rbx,[r14+rdi*8]
   14002978a:	and    eax,0x3f
   14002978d:	mov    ecx,r12d
   140029790:	sub    ecx,eax
   140029792:	mov    rdx,rsi
   140029795:	ror    rdx,cl
   140029798:	mov    rax,rbx
   14002979b:	sub    rax,r9
   14002979e:	xor    rdx,r8
   1400297a1:	add    rax,0x7
   1400297a5:	mov    rbp,r14
   1400297a8:	shr    rax,0x3
   1400297ac:	mov    rcx,r9
   1400297af:	cmp    r9,rbx
   1400297b2:	cmova  rax,rsi
   1400297b6:	test   rax,rax
   1400297b9:	je     0x1400297d1
   1400297bb:	inc    rsi
   1400297be:	mov    QWORD PTR [rcx],rdx
   1400297c1:	lea    rcx,[rcx+0x8]
   1400297c5:	cmp    rsi,rax
   1400297c8:	jne    0x1400297bb
   1400297ca:	mov    r8,QWORD PTR [rip+0x1ca17]        # 0x1400461e8
   1400297d1:	mov    eax,r8d
   1400297d4:	mov    ecx,r12d
   1400297d7:	and    eax,0x3f
   1400297da:	sub    ecx,eax
   1400297dc:	mov    rax,QWORD PTR [r15+0x8]
   1400297e0:	mov    rdx,QWORD PTR [rax]
   1400297e3:	mov    eax,r12d
   1400297e6:	ror    rdx,cl
   1400297e9:	xor    rdx,r8
   1400297ec:	lea    r8,[r9+0x8]
   1400297f0:	mov    QWORD PTR [r9],rdx
   1400297f3:	mov    rdx,QWORD PTR [rip+0x1c9ee]        # 0x1400461e8
   1400297fa:	mov    ecx,edx
   1400297fc:	and    ecx,0x3f
   1400297ff:	sub    eax,ecx
   140029801:	mov    cl,al
   140029803:	mov    rax,QWORD PTR [r15]
   140029806:	ror    rbp,cl
   140029809:	xor    rbp,rdx
   14002980c:	mov    rcx,QWORD PTR [rax]
   14002980f:	mov    QWORD PTR [rcx],rbp
   140029812:	mov    ecx,r12d
   140029815:	mov    rdx,QWORD PTR [rip+0x1c9cc]        # 0x1400461e8
   14002981c:	mov    eax,edx
   14002981e:	and    eax,0x3f
   140029821:	sub    ecx,eax
   140029823:	mov    rax,QWORD PTR [r15]
   140029826:	ror    r8,cl
   140029829:	xor    r8,rdx
   14002982c:	mov    rdx,QWORD PTR [rax]
   14002982f:	mov    QWORD PTR [rdx+0x8],r8
   140029833:	mov    rdx,QWORD PTR [rip+0x1c9ae]        # 0x1400461e8
   14002983a:	mov    eax,edx
   14002983c:	and    eax,0x3f
   14002983f:	sub    r12d,eax
   140029842:	mov    rax,QWORD PTR [r15]
   140029845:	mov    cl,r12b
   140029848:	ror    rbx,cl
   14002984b:	xor    rbx,rdx
   14002984e:	mov    rcx,QWORD PTR [rax]
   140029851:	xor    eax,eax
   140029853:	mov    QWORD PTR [rcx+0x10],rbx
   140029857:	mov    rbx,QWORD PTR [rsp+0x40]
   14002985c:	mov    rbp,QWORD PTR [rsp+0x48]
   140029861:	mov    rsi,QWORD PTR [rsp+0x50]
   140029866:	mov    rdi,QWORD PTR [rsp+0x58]
   14002986b:	add    rsp,0x20
   14002986f:	pop    r15
   140029871:	pop    r14
   140029873:	pop    r12
   140029875:	ret    
   140029876:	int3   
   140029877:	int3   
   140029878:	mov    rdx,rcx
   14002987b:	lea    rcx,[rip+0x1ede6]        # 0x140048668
   140029882:	jmp    0x140029904
   140029887:	int3   
   140029888:	mov    r11,rsp
   14002988b:	mov    QWORD PTR [r11+0x8],rcx
   14002988f:	sub    rsp,0x38
   140029893:	lea    rax,[r11+0x8]
   140029897:	mov    QWORD PTR [r11-0x18],rax
   14002989b:	lea    r9,[r11+0x18]
   14002989f:	mov    eax,0x2
   1400298a4:	lea    r8,[r11-0x18]
   1400298a8:	lea    rdx,[r11+0x20]
   1400298ac:	mov    DWORD PTR [rsp+0x50],eax
   1400298b0:	lea    rcx,[r11+0x10]
   1400298b4:	mov    DWORD PTR [rsp+0x58],eax
   1400298b8:	call   0x1400294fc
   1400298bd:	add    rsp,0x38
   1400298c1:	ret    
   1400298c2:	int3   
   1400298c3:	int3   
   1400298c4:	xor    r9d,r9d
   1400298c7:	mov    r8,rcx
   1400298ca:	test   rcx,rcx
   1400298cd:	jne    0x1400298d3
   1400298cf:	or     eax,0xffffffff
   1400298d2:	ret    
   1400298d3:	mov    rax,QWORD PTR [rcx+0x10]
   1400298d7:	cmp    QWORD PTR [rcx],rax
   1400298da:	jne    0x140029900
   1400298dc:	mov    rdx,QWORD PTR [rip+0x1c905]        # 0x1400461e8
   1400298e3:	mov    ecx,0x40
   1400298e8:	mov    eax,edx
   1400298ea:	and    eax,0x3f
   1400298ed:	sub    ecx,eax
   1400298ef:	ror    r9,cl
   1400298f2:	xor    r9,rdx
   1400298f5:	mov    QWORD PTR [r8],r9
   1400298f8:	mov    QWORD PTR [r8+0x8],r9
   1400298fc:	mov    QWORD PTR [r8+0x10],r9
   140029900:	xor    eax,eax
   140029902:	ret    
   140029903:	int3   
   140029904:	mov    QWORD PTR [rsp+0x10],rdx
   140029909:	mov    QWORD PTR [rsp+0x8],rcx
   14002990e:	push   rbp
   14002990f:	mov    rbp,rsp
   140029912:	sub    rsp,0x40
   140029916:	lea    rax,[rbp+0x10]
   14002991a:	mov    QWORD PTR [rbp-0x18],rax
   14002991e:	lea    r9,[rbp+0x28]
   140029922:	lea    rax,[rbp+0x18]
   140029926:	mov    QWORD PTR [rbp-0x10],rax
   14002992a:	lea    r8,[rbp-0x18]
   14002992e:	mov    eax,0x2
   140029933:	lea    rdx,[rbp-0x20]
   140029937:	lea    rcx,[rbp+0x20]
   14002993b:	mov    DWORD PTR [rbp+0x28],eax
   14002993e:	mov    DWORD PTR [rbp-0x20],eax
   140029941:	call   0x1400294c0
   140029946:	add    rsp,0x40
   14002994a:	pop    rbp
   14002994b:	ret    
   14002994c:	lea    rax,[rip+0x1c9fd]        # 0x140046350
   140029953:	mov    QWORD PTR [rip+0x1f576],rax        # 0x140048ed0
   14002995a:	mov    al,0x1
   14002995c:	ret    
   14002995d:	int3   
   14002995e:	int3   
   14002995f:	int3   
   140029960:	sub    rsp,0x28
   140029964:	lea    rcx,[rip+0x1ecfd]        # 0x140048668
   14002996b:	call   0x1400298c4
   140029970:	lea    rcx,[rip+0x1ed09]        # 0x140048680
   140029977:	call   0x1400298c4
   14002997c:	mov    al,0x1
   14002997e:	add    rsp,0x28
   140029982:	ret    
   140029983:	int3   
   140029984:	int3   
   140029985:	int3   
   140029986:	int3   
   140029987:	int3   
   140029988:	int3   
   140029989:	int3   
   14002998a:	int3   
   14002998b:	int3   
   14002998c:	int3   
   14002998d:	int3   
   14002998e:	int3   
   14002998f:	int3   
   140029990:	mov    al,0x1
   140029992:	ret    
   140029993:	int3   
   140029994:	sub    rsp,0x28
   140029998:	call   0x14002945c
   14002999d:	mov    al,0x1
   14002999f:	add    rsp,0x28
   1400299a3:	ret    
   1400299a4:	rex push rbx
   1400299a6:	sub    rsp,0x20
   1400299aa:	mov    rdx,QWORD PTR [rip+0x1c837]        # 0x1400461e8
   1400299b1:	mov    ecx,0x40
   1400299b6:	mov    eax,edx
   1400299b8:	xor    ebx,ebx
   1400299ba:	and    eax,0x3f
   1400299bd:	sub    ecx,eax
   1400299bf:	ror    rbx,cl
   1400299c2:	xor    rbx,rdx
   1400299c5:	mov    rcx,rbx
   1400299c8:	call   0x1400280fc
   1400299cd:	mov    rcx,rbx
   1400299d0:	call   0x14002d450
   1400299d5:	mov    rcx,rbx
   1400299d8:	call   0x14002d4d0
   1400299dd:	mov    rcx,rbx
   1400299e0:	call   0x140029ae8
   1400299e5:	mov    rcx,rbx
   1400299e8:	call   0x140028d38
   1400299ed:	mov    al,0x1
   1400299ef:	add    rsp,0x20
   1400299f3:	pop    rbx
   1400299f4:	ret    
   1400299f5:	int3   
   1400299f6:	int3   
   1400299f7:	int3   
   1400299f8:	xor    ecx,ecx
   1400299fa:	jmp    0x140027ae8
   1400299ff:	int3   
   140029a00:	rex push rbx
   140029a02:	sub    rsp,0x20
   140029a06:	mov    rcx,QWORD PTR [rip+0x1ccdb]        # 0x1400466e8
   140029a0d:	or     eax,0xffffffff
   140029a10:	lock xadd DWORD PTR [rcx],eax
   140029a14:	cmp    eax,0x1
   140029a17:	jne    0x140029a38
   140029a19:	mov    rcx,QWORD PTR [rip+0x1ccc8]        # 0x1400466e8
   140029a20:	lea    rbx,[rip+0x1ca99]        # 0x1400464c0
   140029a27:	cmp    rcx,rbx
   140029a2a:	je     0x140029a38
   140029a2c:	call   0x140007bd0
   140029a31:	mov    QWORD PTR [rip+0x1ccb0],rbx        # 0x1400466e8
   140029a38:	mov    rcx,QWORD PTR [rip+0x1f481]        # 0x140048ec0
   140029a3f:	call   0x140007bd0
   140029a44:	mov    rcx,QWORD PTR [rip+0x1f47d]        # 0x140048ec8
   140029a4b:	xor    ebx,ebx
   140029a4d:	mov    QWORD PTR [rip+0x1f46c],rbx        # 0x140048ec0
   140029a54:	call   0x140007bd0
   140029a59:	mov    rcx,QWORD PTR [rip+0x1ec50]        # 0x1400486b0
   140029a60:	mov    QWORD PTR [rip+0x1f461],rbx        # 0x140048ec8
   140029a67:	call   0x140007bd0
   140029a6c:	mov    rcx,QWORD PTR [rip+0x1ec45]        # 0x1400486b8
   140029a73:	mov    QWORD PTR [rip+0x1ec36],rbx        # 0x1400486b0
   140029a7a:	call   0x140007bd0
   140029a7f:	mov    al,0x1
   140029a81:	mov    QWORD PTR [rip+0x1ec30],rbx        # 0x1400486b8
   140029a88:	add    rsp,0x20
   140029a8c:	pop    rbx
   140029a8d:	ret    
   140029a8e:	int3   
   140029a8f:	int3   
   140029a90:	lea    rdx,[rip+0xf489]        # 0x140038f20
   140029a97:	lea    rcx,[rip+0xf392]        # 0x140038e30
   140029a9e:	jmp    0x14002d36c
   140029aa3:	int3   
   140029aa4:	lea    rdx,[rip+0xf475]        # 0x140038f20
   140029aab:	lea    rcx,[rip+0xf37e]        # 0x140038e30
   140029ab2:	jmp    0x14002d400
   140029ab7:	int3   
   140029ab8:	mov    eax,DWORD PTR [rip+0x1ebda]        # 0x140048698
   140029abe:	ret    
   140029abf:	int3   
   140029ac0:	mov    DWORD PTR [rip+0x1ebd2],ecx        # 0x140048698
   140029ac6:	ret    
   140029ac7:	int3   
   140029ac8:	mov    rdx,QWORD PTR [rip+0x1c719]        # 0x1400461e8
   140029acf:	mov    ecx,edx
   140029ad1:	xor    rdx,QWORD PTR [rip+0x1ebc8]        # 0x1400486a0
   140029ad8:	and    ecx,0x3f
   140029adb:	ror    rdx,cl
   140029ade:	test   rdx,rdx
   140029ae1:	setne  al
   140029ae4:	ret    
   140029ae5:	int3   
   140029ae6:	int3   
   140029ae7:	int3   
   140029ae8:	mov    QWORD PTR [rip+0x1ebb1],rcx        # 0x1400486a0
   140029aef:	ret    
   140029af0:	mov    QWORD PTR [rsp+0x8],rbx
   140029af5:	push   rdi
   140029af6:	sub    rsp,0x20
   140029afa:	mov    rbx,QWORD PTR [rip+0x1c6e7]        # 0x1400461e8
   140029b01:	mov    rdi,rcx
   140029b04:	mov    ecx,ebx
   140029b06:	xor    rbx,QWORD PTR [rip+0x1eb93]        # 0x1400486a0
   140029b0d:	and    ecx,0x3f
   140029b10:	ror    rbx,cl
   140029b13:	test   rbx,rbx
   140029b16:	jne    0x140029b1c
   140029b18:	xor    eax,eax
   140029b1a:	jmp    0x140029b2a
   140029b1c:	mov    rcx,rbx
   140029b1f:	call   QWORD PTR [rip+0x8abb]        # 0x1400325e0
   140029b25:	mov    rcx,rdi
   140029b28:	call   rbx
   140029b2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140029b2f:	add    rsp,0x20
   140029b33:	pop    rdi
   140029b34:	ret    
   140029b35:	int3   
   140029b36:	int3   
   140029b37:	int3   
   140029b38:	mov    r8,QWORD PTR [rip+0x1c6a9]        # 0x1400461e8
   140029b3f:	mov    r9,rcx
   140029b42:	mov    edx,r8d
   140029b45:	mov    ecx,0x40
   140029b4a:	and    edx,0x3f
   140029b4d:	sub    ecx,edx
   140029b4f:	ror    r9,cl
   140029b52:	xor    r9,r8
   140029b55:	mov    QWORD PTR [rip+0x1eb44],r9        # 0x1400486a0
   140029b5c:	ret    
   140029b5d:	int3   
   140029b5e:	int3   
   140029b5f:	int3   
   140029b60:	mov    rax,rsp
   140029b63:	mov    QWORD PTR [rax+0x8],rbx
   140029b67:	mov    QWORD PTR [rax+0x10],rbp
   140029b6b:	mov    QWORD PTR [rax+0x18],rsi
   140029b6f:	mov    QWORD PTR [rax+0x20],rdi
   140029b73:	push   r14
   140029b75:	sub    rsp,0x20
   140029b79:	xor    r14d,r14d
   140029b7c:	mov    rdi,rdx
   140029b7f:	sub    rdi,rcx
   140029b82:	mov    rbx,rcx
   140029b85:	add    rdi,0x7
   140029b89:	mov    ebp,r14d
   140029b8c:	shr    rdi,0x3
   140029b90:	cmp    rcx,rdx
   140029b93:	cmova  rdi,r14
   140029b97:	test   rdi,rdi
   140029b9a:	je     0x140029bbb
   140029b9c:	mov    rsi,QWORD PTR [rbx]
   140029b9f:	test   rsi,rsi
   140029ba2:	je     0x140029baf
   140029ba4:	mov    rcx,rsi
   140029ba7:	call   QWORD PTR [rip+0x8a33]        # 0x1400325e0
   140029bad:	call   rsi
   140029baf:	add    rbx,0x8
   140029bb3:	inc    rbp
   140029bb6:	cmp    rbp,rdi
   140029bb9:	jne    0x140029b9c
   140029bbb:	mov    rbx,QWORD PTR [rsp+0x30]
   140029bc0:	mov    rbp,QWORD PTR [rsp+0x38]
   140029bc5:	mov    rsi,QWORD PTR [rsp+0x40]
   140029bca:	mov    rdi,QWORD PTR [rsp+0x48]
   140029bcf:	add    rsp,0x20
   140029bd3:	pop    r14
   140029bd5:	ret    
   140029bd6:	int3   
   140029bd7:	int3   
   140029bd8:	mov    QWORD PTR [rsp+0x8],rbx
   140029bdd:	mov    QWORD PTR [rsp+0x10],rsi
   140029be2:	push   rdi
   140029be3:	sub    rsp,0x20
   140029be7:	mov    rsi,rdx
   140029bea:	mov    rbx,rcx
   140029bed:	cmp    rcx,rdx
   140029bf0:	je     0x140029c12
   140029bf2:	mov    rdi,QWORD PTR [rbx]
   140029bf5:	test   rdi,rdi
   140029bf8:	je     0x140029c09
   140029bfa:	mov    rcx,rdi
   140029bfd:	call   QWORD PTR [rip+0x89dd]        # 0x1400325e0
   140029c03:	call   rdi
   140029c05:	test   eax,eax
   140029c07:	jne    0x140029c14
   140029c09:	add    rbx,0x8
   140029c0d:	cmp    rbx,rsi
   140029c10:	jmp    0x140029bf0
   140029c12:	xor    eax,eax
   140029c14:	mov    rbx,QWORD PTR [rsp+0x30]
   140029c19:	mov    rsi,QWORD PTR [rsp+0x38]
   140029c1e:	add    rsp,0x20
   140029c22:	pop    rdi
   140029c23:	ret    
   140029c24:	sub    rsp,0x28
   140029c28:	lea    eax,[rcx-0x4000]
   140029c2e:	test   eax,0xffff3fff
   140029c33:	jne    0x140029c47
   140029c35:	cmp    ecx,0xc000
   140029c3b:	je     0x140029c47
   140029c3d:	xchg   DWORD PTR [rip+0x1f2ed],ecx        # 0x140048f30
   140029c43:	xor    eax,eax
   140029c45:	jmp    0x140029c5c
   140029c47:	call   0x14002a494
   140029c4c:	mov    DWORD PTR [rax],0x16
   140029c52:	call   0x1400281ac
   140029c57:	mov    eax,0x16
   140029c5c:	add    rsp,0x28
   140029c60:	ret    
   140029c61:	int3   
   140029c62:	int3   
   140029c63:	int3   
   140029c64:	sub    rsp,0x28
   140029c68:	call   QWORD PTR [rip+0x843a]        # 0x1400320a8
   140029c6e:	mov    QWORD PTR [rip+0x1ea4b],rax        # 0x1400486c0
   140029c75:	call   QWORD PTR [rip+0x8425]        # 0x1400320a0
   140029c7b:	mov    QWORD PTR [rip+0x1ea46],rax        # 0x1400486c8
   140029c82:	mov    al,0x1
   140029c84:	add    rsp,0x28
   140029c88:	ret    
   140029c89:	int3   
   140029c8a:	int3   
   140029c8b:	int3   
   140029c8c:	lea    rax,[rip+0x1ea15]        # 0x1400486a8
   140029c93:	ret    
   140029c94:	lea    rax,[rip+0x1ea15]        # 0x1400486b0
   140029c9b:	ret    
   140029c9c:	mov    eax,0x1
   140029ca1:	xchg   DWORD PTR [rip+0x1ea31],eax        # 0x1400486d8
   140029ca7:	ret    
   140029ca8:	rex push rdi
   140029caa:	sub    rsp,0x20
   140029cae:	lea    rdi,[rip+0x1c69b]        # 0x140046350
   140029cb5:	cmp    QWORD PTR [rip+0x1f214],rdi        # 0x140048ed0
   140029cbc:	je     0x140029ce9
   140029cbe:	mov    ecx,0x4
   140029cc3:	call   0x14002af28
   140029cc8:	nop
   140029cc9:	mov    rdx,rdi
   140029ccc:	lea    rcx,[rip+0x1f1fd]        # 0x140048ed0
   140029cd3:	call   0x14002e308
   140029cd8:	mov    QWORD PTR [rip+0x1f1f1],rax        # 0x140048ed0
   140029cdf:	mov    ecx,0x4
   140029ce4:	call   0x14002af7c
   140029ce9:	add    rsp,0x20
   140029ced:	pop    rdi
   140029cee:	ret    
   140029cef:	int3   
   140029cf0:	rex push rbx
   140029cf2:	sub    rsp,0x20
   140029cf6:	mov    ebx,ecx
   140029cf8:	call   0x14002a248
   140029cfd:	mov    r8d,DWORD PTR [rax+0x3a8]
   140029d04:	mov    edx,r8d
   140029d07:	and    dl,0x2
   140029d0a:	neg    dl
   140029d0c:	sbb    ecx,ecx
   140029d0e:	cmp    ebx,0xffffffff
   140029d11:	je     0x140029d49
   140029d13:	test   ebx,ebx
   140029d15:	je     0x140029d50
   140029d17:	cmp    ebx,0x1
   140029d1a:	je     0x140029d3c
   140029d1c:	cmp    ebx,0x2
   140029d1f:	je     0x140029d36
   140029d21:	call   0x14002a494
   140029d26:	mov    DWORD PTR [rax],0x16
   140029d2c:	call   0x1400281ac
   140029d31:	or     eax,0xffffffff
   140029d34:	jmp    0x140029d53
   140029d36:	and    r8d,0xfffffffd
   140029d3a:	jmp    0x140029d40
   140029d3c:	or     r8d,0x2
   140029d40:	mov    DWORD PTR [rax+0x3a8],r8d
   140029d47:	jmp    0x140029d50
   140029d49:	or     DWORD PTR [rip+0x1cd50],0xffffffff        # 0x140046aa0
   140029d50:	lea    eax,[rcx+0x2]
   140029d53:	add    rsp,0x20
   140029d57:	pop    rbx
   140029d58:	ret    
   140029d59:	int3   
   140029d5a:	int3   
   140029d5b:	int3   
   140029d5c:	sub    rsp,0x28
   140029d60:	cmp    ecx,0x1
   140029d63:	jbe    0x140029d7a
   140029d65:	call   0x14002a494
   140029d6a:	mov    DWORD PTR [rax],0x16
   140029d70:	call   0x1400281ac
   140029d75:	or     eax,0xffffffff
   140029d78:	jmp    0x140029d82
   140029d7a:	xchg   DWORD PTR [rip+0x1e95c],ecx        # 0x1400486dc
   140029d80:	mov    eax,ecx
   140029d82:	add    rsp,0x28
   140029d86:	ret    
   140029d87:	int3   
   140029d88:	lea    rax,[rip+0x1e951]        # 0x1400486e0
   140029d8f:	ret    
   140029d90:	rex push rbx
   140029d92:	sub    rsp,0x20
   140029d96:	call   0x14002a248
   140029d9b:	mov    rbx,QWORD PTR [rax+0x18]
   140029d9f:	test   rbx,rbx
   140029da2:	je     0x140029db1
   140029da4:	mov    rcx,rbx
   140029da7:	call   QWORD PTR [rip+0x8833]        # 0x1400325e0
   140029dad:	call   rbx
   140029daf:	jmp    0x140029db1
   140029db1:	call   0x140029db8
   140029db6:	nop
   140029db7:	int3   
   140029db8:	sub    rsp,0x28
   140029dbc:	call   0x14002d4a0
   140029dc1:	test   rax,rax
   140029dc4:	je     0x140029dd0
   140029dc6:	mov    ecx,0x16
   140029dcb:	call   0x14002d4f0
   140029dd0:	test   BYTE PTR [rip+0x1c561],0x2        # 0x140046338
   140029dd7:	je     0x140029e02
   140029dd9:	mov    ecx,0x17
   140029dde:	call   0x140026ee0
   140029de3:	test   eax,eax
   140029de5:	je     0x140029dee
   140029de7:	mov    ecx,0x7
   140029dec:	int    0x29
   140029dee:	mov    r8d,0x1
   140029df4:	mov    edx,0x40000015
   140029df9:	lea    ecx,[r8+0x2]
   140029dfd:	call   0x140027fa0
   140029e02:	mov    ecx,0x3
   140029e07:	call   0x140028d60
   140029e0c:	int3   
   140029e0d:	int3   
   140029e0e:	int3   
   140029e0f:	int3   
   140029e10:	rex push rbx
   140029e12:	sub    rsp,0x20
   140029e16:	xor    ebx,ebx
   140029e18:	test   rcx,rcx
   140029e1b:	je     0x140029e29
   140029e1d:	test   rdx,rdx
   140029e20:	je     0x140029e29
   140029e22:	test   r8,r8
   140029e25:	jne    0x140029e42
   140029e27:	mov    BYTE PTR [rcx],bl
   140029e29:	call   0x14002a494
   140029e2e:	mov    ebx,0x16
   140029e33:	mov    DWORD PTR [rax],ebx
   140029e35:	call   0x1400281ac
   140029e3a:	mov    eax,ebx
   140029e3c:	add    rsp,0x20
   140029e40:	pop    rbx
   140029e41:	ret    
   140029e42:	mov    r9,rcx
   140029e45:	sub    r8,rcx
   140029e48:	mov    al,BYTE PTR [r8+r9*1]
   140029e4c:	mov    BYTE PTR [r9],al
   140029e4f:	inc    r9
   140029e52:	test   al,al
   140029e54:	je     0x140029e5c
   140029e56:	sub    rdx,0x1
   140029e5a:	jne    0x140029e48
   140029e5c:	test   rdx,rdx
   140029e5f:	jne    0x140029e3a
   140029e61:	mov    BYTE PTR [rcx],bl
   140029e63:	call   0x14002a494
   140029e68:	mov    ebx,0x22
   140029e6d:	jmp    0x140029e33
   140029e6f:	int3   
   140029e70:	int3   
   140029e71:	int3   
   140029e72:	int3   
   140029e73:	int3   
   140029e74:	int3   
   140029e75:	int3   
   140029e76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029e80:	sub    rsp,0x8
   140029e84:	stmxcsr DWORD PTR [rsp]
   140029e88:	mov    eax,DWORD PTR [rsp]
   140029e8b:	add    rsp,0x8
   140029e8f:	ret    
   140029e90:	mov    DWORD PTR [rsp+0x8],ecx
   140029e94:	ldmxcsr DWORD PTR [rsp+0x8]
   140029e99:	ret    
   140029e9a:	stmxcsr DWORD PTR [rsp+0x8]
   140029e9f:	mov    ecx,0xffffffc0
   140029ea4:	and    DWORD PTR [rsp+0x8],ecx
   140029ea8:	ldmxcsr DWORD PTR [rsp+0x8]
   140029ead:	ret    
   140029eae:	ucomisd xmm0,QWORD PTR [rip+0xf06a]        # 0x140038f20
   140029eb6:	jae    0x140029ecc
   140029eb8:	ucomisd xmm0,QWORD PTR [rip+0xf068]        # 0x140038f28
   140029ec0:	jbe    0x140029ecc
   140029ec2:	cvtsd2si rcx,xmm0
   140029ec7:	cvtsi2sd xmm0,rcx
   140029ecc:	ret    
   140029ecd:	int3   
   140029ece:	int3   
   140029ecf:	int3   
   140029ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140029ed5:	mov    QWORD PTR [rsp+0x20],r9
   140029eda:	push   rdi
   140029edb:	sub    rsp,0x20
   140029edf:	mov    rbx,r9
   140029ee2:	mov    rdi,r8
   140029ee5:	mov    ecx,DWORD PTR [rdx]
   140029ee7:	call   0x14002af28
   140029eec:	nop
   140029eed:	mov    rax,QWORD PTR [rdi]
   140029ef0:	mov    rcx,QWORD PTR [rax]
   140029ef3:	mov    rcx,QWORD PTR [rcx+0x88]
   140029efa:	test   rcx,rcx
   140029efd:	je     0x140029f1d
   140029eff:	or     eax,0xffffffff
   140029f02:	lock xadd DWORD PTR [rcx],eax
   140029f06:	cmp    eax,0x1
   140029f09:	jne    0x140029f1d
   140029f0b:	lea    rax,[rip+0x1c5ae]        # 0x1400464c0
   140029f12:	cmp    rcx,rax
   140029f15:	je     0x140029f1d
   140029f17:	call   0x140007bd0
   140029f1c:	nop
   140029f1d:	mov    ecx,DWORD PTR [rbx]
   140029f1f:	call   0x14002af7c
   140029f24:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f29:	add    rsp,0x20
   140029f2d:	pop    rdi
   140029f2e:	ret    
   140029f2f:	int3   
   140029f30:	mov    QWORD PTR [rsp+0x8],rbx
   140029f35:	mov    QWORD PTR [rsp+0x20],r9
   140029f3a:	push   rdi
   140029f3b:	sub    rsp,0x20
   140029f3f:	mov    rbx,r9
   140029f42:	mov    rdi,r8
   140029f45:	mov    ecx,DWORD PTR [rdx]
   140029f47:	call   0x14002af28
   140029f4c:	nop
   140029f4d:	mov    rax,QWORD PTR [rdi+0x8]
   140029f51:	mov    rdx,QWORD PTR [rax]
   140029f54:	mov    rcx,QWORD PTR [rdi]
   140029f57:	mov    rdx,QWORD PTR [rdx]
   140029f5a:	mov    rcx,QWORD PTR [rcx]
   140029f5d:	call   0x14002a1e0
   140029f62:	nop
   140029f63:	mov    ecx,DWORD PTR [rbx]
   140029f65:	call   0x14002af7c
   140029f6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f6f:	add    rsp,0x20
   140029f73:	pop    rdi
   140029f74:	ret    
   140029f75:	int3   
   140029f76:	int3   
   140029f77:	int3   
   140029f78:	mov    QWORD PTR [rsp+0x8],rbx
   140029f7d:	mov    QWORD PTR [rsp+0x20],r9
   140029f82:	push   rdi
   140029f83:	sub    rsp,0x20
   140029f87:	mov    rbx,r9
   140029f8a:	mov    rdi,r8
   140029f8d:	mov    ecx,DWORD PTR [rdx]
   140029f8f:	call   0x14002af28
   140029f94:	nop
   140029f95:	mov    rax,QWORD PTR [rdi]
   140029f98:	mov    rcx,QWORD PTR [rax]
   140029f9b:	mov    rax,QWORD PTR [rcx+0x88]
   140029fa2:	lock inc DWORD PTR [rax]
   140029fa5:	mov    ecx,DWORD PTR [rbx]
   140029fa7:	call   0x14002af7c
   140029fac:	mov    rbx,QWORD PTR [rsp+0x30]
   140029fb1:	add    rsp,0x20
   140029fb5:	pop    rdi
   140029fb6:	ret    
   140029fb7:	int3   
   140029fb8:	mov    QWORD PTR [rsp+0x8],rbx
   140029fbd:	mov    QWORD PTR [rsp+0x20],r9
   140029fc2:	push   rdi
   140029fc3:	sub    rsp,0x20
   140029fc7:	mov    rbx,r9
   140029fca:	mov    rdi,r8
   140029fcd:	mov    ecx,DWORD PTR [rdx]
   140029fcf:	call   0x14002af28
   140029fd4:	nop
   140029fd5:	mov    rcx,QWORD PTR [rdi]
   140029fd8:	xor    edx,edx
   140029fda:	mov    rcx,QWORD PTR [rcx]
   140029fdd:	call   0x14002a1e0
   140029fe2:	nop
   140029fe3:	mov    ecx,DWORD PTR [rbx]
   140029fe5:	call   0x14002af7c
   140029fea:	mov    rbx,QWORD PTR [rsp+0x30]
   140029fef:	add    rsp,0x20
   140029ff3:	pop    rdi
   140029ff4:	ret    
   140029ff5:	int3   
   140029ff6:	int3   
   140029ff7:	int3   
   140029ff8:	rex push rbp
   140029ffa:	mov    rbp,rsp
   140029ffd:	sub    rsp,0x50
   14002a001:	mov    QWORD PTR [rbp-0x28],rcx
   14002a005:	lea    rax,[rbp-0x28]
   14002a009:	mov    QWORD PTR [rbp-0x18],rax
   14002a00d:	lea    r9,[rbp+0x20]
   14002a011:	mov    edx,0x1
   14002a016:	lea    r8,[rbp-0x18]
   14002a01a:	mov    eax,0x5
   14002a01f:	mov    DWORD PTR [rbp+0x20],eax
   14002a022:	mov    DWORD PTR [rbp+0x28],eax
   14002a025:	lea    rax,[rbp-0x28]
   14002a029:	mov    QWORD PTR [rbp-0x10],rax
   14002a02d:	lea    rax,[rbp-0x20]
   14002a031:	mov    QWORD PTR [rbp-0x8],rax
   14002a035:	mov    eax,0x4
   14002a03a:	mov    DWORD PTR [rbp-0x30],eax
   14002a03d:	mov    DWORD PTR [rbp-0x2c],eax
   14002a040:	lea    rax,[rip+0x1ee89]        # 0x140048ed0
   14002a047:	mov    QWORD PTR [rbp-0x20],rax
   14002a04b:	mov    DWORD PTR [rcx+0x28],edx
   14002a04e:	lea    rcx,[rip+0xecdb]        # 0x140038d30
   14002a055:	mov    rax,QWORD PTR [rbp-0x28]
   14002a059:	mov    QWORD PTR [rax],rcx
   14002a05c:	lea    rcx,[rip+0x1c45d]        # 0x1400464c0
   14002a063:	mov    rax,QWORD PTR [rbp-0x28]
   14002a067:	mov    DWORD PTR [rax+0x3a8],edx
   14002a06d:	mov    rax,QWORD PTR [rbp-0x28]
   14002a071:	mov    QWORD PTR [rax+0x88],rcx
   14002a078:	lea    ecx,[rdx+0x42]
   14002a07b:	mov    rax,QWORD PTR [rbp-0x28]
   14002a07f:	lea    rdx,[rbp+0x28]
   14002a083:	mov    WORD PTR [rax+0xbc],cx
   14002a08a:	mov    rax,QWORD PTR [rbp-0x28]
   14002a08e:	mov    WORD PTR [rax+0x1c2],cx
   14002a095:	lea    rcx,[rbp+0x18]
   14002a099:	mov    rax,QWORD PTR [rbp-0x28]
   14002a09d:	and    QWORD PTR [rax+0x3a0],0x0
   14002a0a5:	call   0x140029f78
   14002a0aa:	lea    r9,[rbp-0x30]
   14002a0ae:	lea    r8,[rbp-0x10]
   14002a0b2:	lea    rdx,[rbp-0x2c]
   14002a0b6:	lea    rcx,[rbp+0x18]
   14002a0ba:	call   0x140029f30
   14002a0bf:	add    rsp,0x50
   14002a0c3:	pop    rbp
   14002a0c4:	ret    
   14002a0c5:	int3   
   14002a0c6:	int3   
   14002a0c7:	int3   
   14002a0c8:	test   rcx,rcx
   14002a0cb:	je     0x14002a0e7
   14002a0cd:	push   rbx
   14002a0ce:	sub    rsp,0x20
   14002a0d2:	mov    rbx,rcx
   14002a0d5:	call   0x14002a0e8
   14002a0da:	mov    rcx,rbx
   14002a0dd:	call   0x140007bd0
   14002a0e2:	add    rsp,0x20
   14002a0e6:	pop    rbx
   14002a0e7:	ret    
   14002a0e8:	rex push rbp
   14002a0ea:	mov    rbp,rsp
   14002a0ed:	sub    rsp,0x40
   14002a0f1:	lea    rax,[rbp-0x18]
   14002a0f5:	mov    QWORD PTR [rbp-0x18],rcx
   14002a0f9:	mov    QWORD PTR [rbp-0x10],rax
   14002a0fd:	lea    rdx,[rip+0xec2c]        # 0x140038d30
   14002a104:	mov    eax,0x5
   14002a109:	mov    DWORD PTR [rbp+0x20],eax
   14002a10c:	mov    DWORD PTR [rbp+0x28],eax
   14002a10f:	lea    rax,[rbp-0x18]
   14002a113:	mov    QWORD PTR [rbp-0x8],rax
   14002a117:	mov    eax,0x4
   14002a11c:	mov    DWORD PTR [rbp-0x20],eax
   14002a11f:	mov    DWORD PTR [rbp-0x1c],eax
   14002a122:	mov    rax,QWORD PTR [rcx]
   14002a125:	cmp    rax,rdx
   14002a128:	je     0x14002a136
   14002a12a:	mov    rcx,rax
   14002a12d:	call   0x140007bd0
   14002a132:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a136:	mov    rcx,QWORD PTR [rcx+0x70]
   14002a13a:	call   0x140007bd0
   14002a13f:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a143:	mov    rcx,QWORD PTR [rcx+0x58]
   14002a147:	call   0x140007bd0
   14002a14c:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a150:	mov    rcx,QWORD PTR [rcx+0x60]
   14002a154:	call   0x140007bd0
   14002a159:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a15d:	mov    rcx,QWORD PTR [rcx+0x68]
   14002a161:	call   0x140007bd0
   14002a166:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a16a:	mov    rcx,QWORD PTR [rcx+0x48]
   14002a16e:	call   0x140007bd0
   14002a173:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a177:	mov    rcx,QWORD PTR [rcx+0x50]
   14002a17b:	call   0x140007bd0
   14002a180:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a184:	mov    rcx,QWORD PTR [rcx+0x78]
   14002a188:	call   0x140007bd0
   14002a18d:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a191:	mov    rcx,QWORD PTR [rcx+0x80]
   14002a198:	call   0x140007bd0
   14002a19d:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a1a1:	mov    rcx,QWORD PTR [rcx+0x3c0]
   14002a1a8:	call   0x140007bd0
   14002a1ad:	lea    r9,[rbp+0x20]
   14002a1b1:	lea    r8,[rbp-0x10]
   14002a1b5:	lea    rdx,[rbp+0x28]
   14002a1b9:	lea    rcx,[rbp+0x18]
   14002a1bd:	call   0x140029ed0
   14002a1c2:	lea    r9,[rbp-0x20]
   14002a1c6:	lea    r8,[rbp-0x8]
   14002a1ca:	lea    rdx,[rbp-0x1c]
   14002a1ce:	lea    rcx,[rbp+0x18]
   14002a1d2:	call   0x140029fb8
   14002a1d7:	add    rsp,0x40
   14002a1db:	pop    rbp
   14002a1dc:	ret    
   14002a1dd:	int3   
   14002a1de:	int3   
   14002a1df:	int3   
   14002a1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a1e5:	push   rdi
   14002a1e6:	sub    rsp,0x20
   14002a1ea:	mov    rdi,rcx
   14002a1ed:	mov    rbx,rdx
   14002a1f0:	mov    rcx,QWORD PTR [rcx+0x90]
   14002a1f7:	test   rcx,rcx
   14002a1fa:	je     0x14002a228
   14002a1fc:	call   0x14002e1f0
   14002a201:	mov    rcx,QWORD PTR [rdi+0x90]
   14002a208:	cmp    rcx,QWORD PTR [rip+0x1ecc1]        # 0x140048ed0
   14002a20f:	je     0x14002a228
   14002a211:	lea    rax,[rip+0x1c138]        # 0x140046350
   14002a218:	cmp    rcx,rax
   14002a21b:	je     0x14002a228
   14002a21d:	cmp    DWORD PTR [rcx+0x10],0x0
   14002a221:	jne    0x14002a228
   14002a223:	call   0x14002dff0
   14002a228:	mov    QWORD PTR [rdi+0x90],rbx
   14002a22f:	test   rbx,rbx
   14002a232:	je     0x14002a23c
   14002a234:	mov    rcx,rbx
   14002a237:	call   0x14002df64
   14002a23c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a241:	add    rsp,0x20
   14002a245:	pop    rdi
   14002a246:	ret    
   14002a247:	int3   
   14002a248:	mov    QWORD PTR [rsp+0x8],rbx
   14002a24d:	push   rdi
   14002a24e:	sub    rsp,0x20
   14002a252:	call   QWORD PTR [rip+0x7fb0]        # 0x140032208
   14002a258:	mov    ecx,DWORD PTR [rip+0x1c0e2]        # 0x140046340
   14002a25e:	mov    ebx,eax
   14002a260:	cmp    ecx,0xffffffff
   14002a263:	je     0x14002a272
   14002a265:	call   0x14002a7f4
   14002a26a:	mov    rdi,rax
   14002a26d:	test   rax,rax
   14002a270:	jne    0x14002a2b3
   14002a272:	mov    edx,0x3c8
   14002a277:	mov    ecx,0x1
   14002a27c:	call   0x140007c20
   14002a281:	mov    rdi,rax
   14002a284:	test   rax,rax
   14002a287:	jne    0x14002a292
   14002a289:	xor    ecx,ecx
   14002a28b:	call   0x140007bd0
   14002a290:	jmp    0x14002a2ce
   14002a292:	mov    ecx,DWORD PTR [rip+0x1c0a8]        # 0x140046340
   14002a298:	mov    rdx,rax
   14002a29b:	call   0x14002a84c
   14002a2a0:	mov    rcx,rdi
   14002a2a3:	test   eax,eax
   14002a2a5:	je     0x14002a28b
   14002a2a7:	call   0x140029ff8
   14002a2ac:	xor    ecx,ecx
   14002a2ae:	call   0x140007bd0
   14002a2b3:	test   rdi,rdi
   14002a2b6:	je     0x14002a2ce
   14002a2b8:	mov    ecx,ebx
   14002a2ba:	call   QWORD PTR [rip+0x7ec8]        # 0x140032188
   14002a2c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a2c5:	mov    rax,rdi
   14002a2c8:	add    rsp,0x20
   14002a2cc:	pop    rdi
   14002a2cd:	ret    
   14002a2ce:	mov    ecx,ebx
   14002a2d0:	call   QWORD PTR [rip+0x7eb2]        # 0x140032188
   14002a2d6:	call   0x140029db8
   14002a2db:	int3   
   14002a2dc:	mov    QWORD PTR [rsp+0x8],rbx
   14002a2e1:	mov    QWORD PTR [rsp+0x10],rsi
   14002a2e6:	push   rdi
   14002a2e7:	sub    rsp,0x20
   14002a2eb:	call   QWORD PTR [rip+0x7f17]        # 0x140032208
   14002a2f1:	mov    ecx,DWORD PTR [rip+0x1c049]        # 0x140046340
   14002a2f7:	xor    esi,esi
   14002a2f9:	mov    ebx,eax
   14002a2fb:	cmp    ecx,0xffffffff
   14002a2fe:	je     0x14002a30d
   14002a300:	call   0x14002a7f4
   14002a305:	mov    rdi,rax
   14002a308:	test   rax,rax
   14002a30b:	jne    0x14002a34e
   14002a30d:	mov    edx,0x3c8
   14002a312:	mov    ecx,0x1
   14002a317:	call   0x140007c20
   14002a31c:	mov    rdi,rax
   14002a31f:	test   rax,rax
   14002a322:	jne    0x14002a32d
   14002a324:	xor    ecx,ecx
   14002a326:	call   0x140007bd0
   14002a32b:	jmp    0x14002a353
   14002a32d:	mov    ecx,DWORD PTR [rip+0x1c00d]        # 0x140046340
   14002a333:	mov    rdx,rax
   14002a336:	call   0x14002a84c
   14002a33b:	mov    rcx,rdi
   14002a33e:	test   eax,eax
   14002a340:	je     0x14002a326
   14002a342:	call   0x140029ff8
   14002a347:	xor    ecx,ecx
   14002a349:	call   0x140007bd0
   14002a34e:	test   rdi,rdi
   14002a351:	jne    0x14002a35d
   14002a353:	mov    ecx,ebx
   14002a355:	call   QWORD PTR [rip+0x7e2d]        # 0x140032188
   14002a35b:	jmp    0x14002a368
   14002a35d:	mov    ecx,ebx
   14002a35f:	call   QWORD PTR [rip+0x7e23]        # 0x140032188
   14002a365:	mov    rsi,rdi
   14002a368:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a36d:	mov    rax,rsi
   14002a370:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a375:	add    rsp,0x20
   14002a379:	pop    rdi
   14002a37a:	ret    
   14002a37b:	int3   
   14002a37c:	sub    rsp,0x28
   14002a380:	lea    rcx,[rip+0xfffffffffffffd41]        # 0x14002a0c8
   14002a387:	call   0x14002a744
   14002a38c:	mov    DWORD PTR [rip+0x1bfae],eax        # 0x140046340
   14002a392:	cmp    eax,0xffffffff
   14002a395:	jne    0x14002a39b
   14002a397:	xor    al,al
   14002a399:	jmp    0x14002a3b0
   14002a39b:	call   0x14002a2dc
   14002a3a0:	test   rax,rax
   14002a3a3:	jne    0x14002a3ae
   14002a3a5:	xor    ecx,ecx
   14002a3a7:	call   0x14002a3b8
   14002a3ac:	jmp    0x14002a397
   14002a3ae:	mov    al,0x1
   14002a3b0:	add    rsp,0x28
   14002a3b4:	ret    
   14002a3b5:	int3   
   14002a3b6:	int3   
   14002a3b7:	int3   
   14002a3b8:	sub    rsp,0x28
   14002a3bc:	mov    ecx,DWORD PTR [rip+0x1bf7e]        # 0x140046340
   14002a3c2:	cmp    ecx,0xffffffff
   14002a3c5:	je     0x14002a3d3
   14002a3c7:	call   0x14002a79c
   14002a3cc:	or     DWORD PTR [rip+0x1bf6d],0xffffffff        # 0x140046340
   14002a3d3:	mov    al,0x1
   14002a3d5:	add    rsp,0x28
   14002a3d9:	ret    
   14002a3da:	int3   
   14002a3db:	int3   
   14002a3dc:	xor    eax,eax
   14002a3de:	lea    r9,[rip+0xeb4b]        # 0x140038f30
   14002a3e5:	mov    rdx,r9
   14002a3e8:	lea    r8d,[rax+0x8]
   14002a3ec:	cmp    ecx,DWORD PTR [rdx]
   14002a3ee:	je     0x14002a41b
   14002a3f0:	inc    eax
   14002a3f2:	add    rdx,r8
   14002a3f5:	cmp    eax,0x2d
   14002a3f8:	jb     0x14002a3ec
   14002a3fa:	lea    eax,[rcx-0x13]
   14002a3fd:	cmp    eax,0x11
   14002a400:	ja     0x14002a408
   14002a402:	mov    eax,0xd
   14002a407:	ret    
   14002a408:	add    ecx,0xffffff44
   14002a40e:	mov    eax,0x16
   14002a413:	cmp    ecx,0xe
   14002a416:	cmovbe eax,r8d
   14002a41a:	ret    
   14002a41b:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14002a420:	ret    
   14002a421:	int3   
   14002a422:	int3   
   14002a423:	int3   
   14002a424:	mov    QWORD PTR [rsp+0x8],rbx
   14002a429:	push   rdi
   14002a42a:	sub    rsp,0x20
   14002a42e:	mov    edi,ecx
   14002a430:	call   0x14002a2dc
   14002a435:	test   rax,rax
   14002a438:	jne    0x14002a443
   14002a43a:	lea    rax,[rip+0x1bf07]        # 0x140046348
   14002a441:	jmp    0x14002a447
   14002a443:	add    rax,0x24
   14002a447:	mov    DWORD PTR [rax],edi
   14002a449:	call   0x14002a2dc
   14002a44e:	lea    rbx,[rip+0x1beef]        # 0x140046344
   14002a455:	test   rax,rax
   14002a458:	je     0x14002a45e
   14002a45a:	lea    rbx,[rax+0x20]
   14002a45e:	mov    ecx,edi
   14002a460:	call   0x14002a3dc
   14002a465:	mov    DWORD PTR [rbx],eax
   14002a467:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a46c:	add    rsp,0x20
   14002a470:	pop    rdi
   14002a471:	ret    
   14002a472:	int3   
   14002a473:	int3   
   14002a474:	sub    rsp,0x28
   14002a478:	call   0x14002a2dc
   14002a47d:	test   rax,rax
   14002a480:	jne    0x14002a48b
   14002a482:	lea    rax,[rip+0x1bebf]        # 0x140046348
   14002a489:	jmp    0x14002a48f
   14002a48b:	add    rax,0x24
   14002a48f:	add    rsp,0x28
   14002a493:	ret    
   14002a494:	sub    rsp,0x28
   14002a498:	call   0x14002a2dc
   14002a49d:	test   rax,rax
   14002a4a0:	jne    0x14002a4ab
   14002a4a2:	lea    rax,[rip+0x1be9b]        # 0x140046344
   14002a4a9:	jmp    0x14002a4af
   14002a4ab:	add    rax,0x20
   14002a4af:	add    rsp,0x28
   14002a4b3:	ret    
   14002a4b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a4b9:	mov    QWORD PTR [rsp+0x10],rbp
   14002a4be:	mov    QWORD PTR [rsp+0x18],rsi
   14002a4c3:	push   rdi
   14002a4c4:	push   r12
   14002a4c6:	push   r13
   14002a4c8:	push   r14
   14002a4ca:	push   r15
   14002a4cc:	sub    rsp,0x20
   14002a4d0:	mov    r14d,ecx
   14002a4d3:	lea    r15,[rip+0xfffffffffffd5b26]        # 0x140000000
   14002a4da:	mov    r12,r9
   14002a4dd:	mov    rbp,r8
   14002a4e0:	mov    r13,rdx
   14002a4e3:	mov    rcx,QWORD PTR [r15+r14*8+0x48790]
   14002a4eb:	mov    r10,QWORD PTR [rip+0x1bcf6]        # 0x1400461e8
   14002a4f2:	or     rdi,0xffffffffffffffff
   14002a4f6:	mov    eax,r10d
   14002a4f9:	mov    rdx,r10
   14002a4fc:	xor    rdx,rcx
   14002a4ff:	and    eax,0x3f
   14002a502:	mov    cl,al
   14002a504:	ror    rdx,cl
   14002a507:	cmp    rdx,rdi
   14002a50a:	je     0x14002a635
   14002a510:	test   rdx,rdx
   14002a513:	je     0x14002a51d
   14002a515:	mov    rax,rdx
   14002a518:	jmp    0x14002a637
   14002a51d:	cmp    r8,r9
   14002a520:	je     0x14002a5c9
   14002a526:	mov    esi,DWORD PTR [rbp+0x0]
   14002a529:	mov    rbx,QWORD PTR [r15+rsi*8+0x486f0]
   14002a531:	test   rbx,rbx
   14002a534:	je     0x14002a53d
   14002a536:	cmp    rbx,rdi
   14002a539:	je     0x14002a5b5
   14002a53b:	jmp    0x14002a5b0
   14002a53d:	mov    r15,QWORD PTR [r15+rsi*8+0x390a0]
   14002a545:	xor    edx,edx
   14002a547:	mov    rcx,r15
   14002a54a:	mov    r8d,0x800
   14002a550:	call   QWORD PTR [rip+0x7c72]        # 0x1400321c8
   14002a556:	mov    rbx,rax
   14002a559:	test   rax,rax
   14002a55c:	jne    0x14002a57e
   14002a55e:	call   QWORD PTR [rip+0x7ca4]        # 0x140032208
   14002a564:	cmp    eax,0x57
   14002a567:	jne    0x14002a57c
   14002a569:	xor    r8d,r8d
   14002a56c:	xor    edx,edx
   14002a56e:	mov    rcx,r15
   14002a571:	call   QWORD PTR [rip+0x7c51]        # 0x1400321c8
   14002a577:	mov    rbx,rax
   14002a57a:	jmp    0x14002a57e
   14002a57c:	xor    ebx,ebx
   14002a57e:	lea    r15,[rip+0xfffffffffffd5a7b]        # 0x140000000
   14002a585:	test   rbx,rbx
   14002a588:	jne    0x14002a597
   14002a58a:	mov    rax,rdi
   14002a58d:	xchg   QWORD PTR [r15+rsi*8+0x486f0],rax
   14002a595:	jmp    0x14002a5b5
   14002a597:	mov    rax,rbx
   14002a59a:	xchg   QWORD PTR [r15+rsi*8+0x486f0],rax
   14002a5a2:	test   rax,rax
   14002a5a5:	je     0x14002a5b0
   14002a5a7:	mov    rcx,rbx
   14002a5aa:	call   QWORD PTR [rip+0x7c28]        # 0x1400321d8
   14002a5b0:	test   rbx,rbx
   14002a5b3:	jne    0x14002a60a
   14002a5b5:	add    rbp,0x4
   14002a5b9:	cmp    rbp,r12
   14002a5bc:	jne    0x14002a526
   14002a5c2:	mov    r10,QWORD PTR [rip+0x1bc1f]        # 0x1400461e8
   14002a5c9:	xor    ebx,ebx
   14002a5cb:	test   rbx,rbx
   14002a5ce:	je     0x14002a61a
   14002a5d0:	mov    rdx,r13
   14002a5d3:	mov    rcx,rbx
   14002a5d6:	call   QWORD PTR [rip+0x7bf4]        # 0x1400321d0
   14002a5dc:	test   rax,rax
   14002a5df:	je     0x14002a613
   14002a5e1:	mov    r8,QWORD PTR [rip+0x1bc00]        # 0x1400461e8
   14002a5e8:	mov    edx,0x40
   14002a5ed:	mov    ecx,r8d
   14002a5f0:	and    ecx,0x3f
   14002a5f3:	sub    edx,ecx
   14002a5f5:	mov    cl,dl
   14002a5f7:	mov    rdx,rax
   14002a5fa:	ror    rdx,cl
   14002a5fd:	xor    rdx,r8
   14002a600:	xchg   QWORD PTR [r15+r14*8+0x48790],rdx
   14002a608:	jmp    0x14002a637
   14002a60a:	mov    r10,QWORD PTR [rip+0x1bbd7]        # 0x1400461e8
   14002a611:	jmp    0x14002a5cb
   14002a613:	mov    r10,QWORD PTR [rip+0x1bbce]        # 0x1400461e8
   14002a61a:	mov    eax,r10d
   14002a61d:	mov    ecx,0x40
   14002a622:	and    eax,0x3f
   14002a625:	sub    ecx,eax
   14002a627:	ror    rdi,cl
   14002a62a:	xor    rdi,r10
   14002a62d:	xchg   QWORD PTR [r15+r14*8+0x48790],rdi
   14002a635:	xor    eax,eax
   14002a637:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a63c:	mov    rbp,QWORD PTR [rsp+0x58]
   14002a641:	mov    rsi,QWORD PTR [rsp+0x60]
   14002a646:	add    rsp,0x20
   14002a64a:	pop    r15
   14002a64c:	pop    r14
   14002a64e:	pop    r13
   14002a650:	pop    r12
   14002a652:	pop    rdi
   14002a653:	ret    
   14002a654:	mov    rax,rsp
   14002a657:	mov    QWORD PTR [rax+0x8],rbx
   14002a65b:	mov    QWORD PTR [rax+0x10],rbp
   14002a65f:	mov    QWORD PTR [rax+0x18],rsi
   14002a663:	mov    QWORD PTR [rax+0x20],rdi
   14002a667:	push   r14
   14002a669:	sub    rsp,0x50
   14002a66d:	mov    edi,r9d
   14002a670:	mov    rsi,r8
   14002a673:	mov    ebp,edx
   14002a675:	lea    r9,[rip+0xef5c]        # 0x1400395d8
   14002a67c:	mov    r14,rcx
   14002a67f:	lea    r8,[rip+0xef4a]        # 0x1400395d0
   14002a686:	lea    rdx,[rip+0xef4b]        # 0x1400395d8
   14002a68d:	mov    ecx,0x1
   14002a692:	call   0x14002a4b4
   14002a697:	mov    rbx,rax
   14002a69a:	test   rax,rax
   14002a69d:	je     0x14002a6f6
   14002a69f:	mov    rcx,rax
   14002a6a2:	call   QWORD PTR [rip+0x7f38]        # 0x1400325e0
   14002a6a8:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002a6b0:	mov    r9d,edi
   14002a6b3:	mov    rax,QWORD PTR [rsp+0x80]
   14002a6bb:	mov    r8,rsi
   14002a6be:	mov    QWORD PTR [rsp+0x40],rcx
   14002a6c3:	mov    edx,ebp
   14002a6c5:	mov    rcx,QWORD PTR [rsp+0x98]
   14002a6cd:	mov    QWORD PTR [rsp+0x38],rcx
   14002a6d2:	mov    rcx,QWORD PTR [rsp+0x90]
   14002a6da:	mov    QWORD PTR [rsp+0x30],rcx
   14002a6df:	mov    ecx,DWORD PTR [rsp+0x88]
   14002a6e6:	mov    DWORD PTR [rsp+0x28],ecx
   14002a6ea:	mov    rcx,r14
   14002a6ed:	mov    QWORD PTR [rsp+0x20],rax
   14002a6f2:	call   rbx
   14002a6f4:	jmp    0x14002a728
   14002a6f6:	xor    edx,edx
   14002a6f8:	mov    rcx,r14
   14002a6fb:	call   0x14002aa1c
   14002a700:	mov    ecx,eax
   14002a702:	mov    r9d,edi
   14002a705:	mov    eax,DWORD PTR [rsp+0x88]
   14002a70c:	mov    r8,rsi
   14002a70f:	mov    DWORD PTR [rsp+0x28],eax
   14002a713:	mov    edx,ebp
   14002a715:	mov    rax,QWORD PTR [rsp+0x80]
   14002a71d:	mov    QWORD PTR [rsp+0x20],rax
   14002a722:	call   QWORD PTR [rip+0x7968]        # 0x140032090
   14002a728:	mov    rbx,QWORD PTR [rsp+0x60]
   14002a72d:	mov    rbp,QWORD PTR [rsp+0x68]
   14002a732:	mov    rsi,QWORD PTR [rsp+0x70]
   14002a737:	mov    rdi,QWORD PTR [rsp+0x78]
   14002a73c:	add    rsp,0x50
   14002a740:	pop    r14
   14002a742:	ret    
   14002a743:	int3   
   14002a744:	mov    QWORD PTR [rsp+0x8],rbx
   14002a749:	push   rdi
   14002a74a:	sub    rsp,0x20
   14002a74e:	mov    rdi,rcx
   14002a751:	lea    r9,[rip+0xee98]        # 0x1400395f0
   14002a758:	mov    ecx,0x3
   14002a75d:	lea    r8,[rip+0xee84]        # 0x1400395e8
   14002a764:	lea    rdx,[rip+0xee85]        # 0x1400395f0
   14002a76b:	call   0x14002a4b4
   14002a770:	mov    rbx,rax
   14002a773:	test   rax,rax
   14002a776:	je     0x14002a788
   14002a778:	mov    rcx,rax
   14002a77b:	call   QWORD PTR [rip+0x7e5f]        # 0x1400325e0
   14002a781:	mov    rcx,rdi
   14002a784:	call   rbx
   14002a786:	jmp    0x14002a78e
   14002a788:	call   QWORD PTR [rip+0x7a6a]        # 0x1400321f8
   14002a78e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a793:	add    rsp,0x20
   14002a797:	pop    rdi
   14002a798:	ret    
   14002a799:	int3   
   14002a79a:	int3   
   14002a79b:	int3   
   14002a79c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a7a1:	push   rdi
   14002a7a2:	sub    rsp,0x20
   14002a7a6:	mov    ebx,ecx
   14002a7a8:	lea    r9,[rip+0xee59]        # 0x140039608
   14002a7af:	mov    ecx,0x4
   14002a7b4:	lea    r8,[rip+0xee45]        # 0x140039600
   14002a7bb:	lea    rdx,[rip+0xee46]        # 0x140039608
   14002a7c2:	call   0x14002a4b4
   14002a7c7:	mov    rdi,rax
   14002a7ca:	test   rax,rax
   14002a7cd:	je     0x14002a7de
   14002a7cf:	mov    rcx,rax
   14002a7d2:	call   QWORD PTR [rip+0x7e08]        # 0x1400325e0
   14002a7d8:	mov    ecx,ebx
   14002a7da:	call   rdi
   14002a7dc:	jmp    0x14002a7e6
   14002a7de:	mov    ecx,ebx
   14002a7e0:	call   QWORD PTR [rip+0x79fa]        # 0x1400321e0
   14002a7e6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a7eb:	add    rsp,0x20
   14002a7ef:	pop    rdi
   14002a7f0:	ret    
   14002a7f1:	int3   
   14002a7f2:	int3   
   14002a7f3:	int3   
   14002a7f4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a7f9:	push   rdi
   14002a7fa:	sub    rsp,0x20
   14002a7fe:	mov    ebx,ecx
   14002a800:	lea    r9,[rip+0xee11]        # 0x140039618
   14002a807:	mov    ecx,0x5
   14002a80c:	lea    r8,[rip+0xedfd]        # 0x140039610
   14002a813:	lea    rdx,[rip+0xedfe]        # 0x140039618
   14002a81a:	call   0x14002a4b4
   14002a81f:	mov    rdi,rax
   14002a822:	test   rax,rax
   14002a825:	je     0x14002a836
   14002a827:	mov    rcx,rax
   14002a82a:	call   QWORD PTR [rip+0x7db0]        # 0x1400325e0
   14002a830:	mov    ecx,ebx
   14002a832:	call   rdi
   14002a834:	jmp    0x14002a83e
   14002a836:	mov    ecx,ebx
   14002a838:	call   QWORD PTR [rip+0x79b2]        # 0x1400321f0
   14002a83e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a843:	add    rsp,0x20
   14002a847:	pop    rdi
   14002a848:	ret    
   14002a849:	int3   
   14002a84a:	int3   
   14002a84b:	int3   
   14002a84c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a851:	mov    QWORD PTR [rsp+0x10],rsi
   14002a856:	push   rdi
   14002a857:	sub    rsp,0x20
   14002a85b:	mov    rbx,rdx
   14002a85e:	lea    r9,[rip+0xedcb]        # 0x140039630
   14002a865:	mov    edi,ecx
   14002a867:	lea    rdx,[rip+0xedc2]        # 0x140039630
   14002a86e:	mov    ecx,0x6
   14002a873:	lea    r8,[rip+0xedae]        # 0x140039628
   14002a87a:	call   0x14002a4b4
   14002a87f:	mov    rsi,rax
   14002a882:	test   rax,rax
   14002a885:	je     0x14002a899
   14002a887:	mov    rcx,rax
   14002a88a:	call   QWORD PTR [rip+0x7d50]        # 0x1400325e0
   14002a890:	mov    rdx,rbx
   14002a893:	mov    ecx,edi
   14002a895:	call   rsi
   14002a897:	jmp    0x14002a8a4
   14002a899:	mov    rdx,rbx
   14002a89c:	mov    ecx,edi
   14002a89e:	call   QWORD PTR [rip+0x7944]        # 0x1400321e8
   14002a8a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a8a9:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a8ae:	add    rsp,0x20
   14002a8b2:	pop    rdi
   14002a8b3:	ret    
   14002a8b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a8b9:	mov    QWORD PTR [rsp+0x10],rbp
   14002a8be:	mov    QWORD PTR [rsp+0x18],rsi
   14002a8c3:	push   rdi
   14002a8c4:	sub    rsp,0x20
   14002a8c8:	mov    ebp,r8d
   14002a8cb:	lea    r9,[rip+0xed96]        # 0x140039668
   14002a8d2:	mov    ebx,edx
   14002a8d4:	lea    r8,[rip+0xed85]        # 0x140039660
   14002a8db:	mov    rdi,rcx
   14002a8de:	lea    rdx,[rip+0x99f3]        # 0x1400342d8
   14002a8e5:	mov    ecx,0x14
   14002a8ea:	call   0x14002a4b4
   14002a8ef:	mov    rsi,rax
   14002a8f2:	test   rax,rax
   14002a8f5:	je     0x14002a90c
   14002a8f7:	mov    rcx,rax
   14002a8fa:	call   QWORD PTR [rip+0x7ce0]        # 0x1400325e0
   14002a900:	mov    r8d,ebp
   14002a903:	mov    edx,ebx
   14002a905:	mov    rcx,rdi
   14002a908:	call   rsi
   14002a90a:	jmp    0x14002a917
   14002a90c:	mov    edx,ebx
   14002a90e:	mov    rcx,rdi
   14002a911:	call   QWORD PTR [rip+0x78e9]        # 0x140032200
   14002a917:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a91c:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a921:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a926:	add    rsp,0x20
   14002a92a:	pop    rdi
   14002a92b:	ret    
   14002a92c:	mov    rax,rsp
   14002a92f:	mov    QWORD PTR [rax+0x8],rbx
   14002a933:	mov    QWORD PTR [rax+0x10],rbp
   14002a937:	mov    QWORD PTR [rax+0x18],rsi
   14002a93b:	mov    QWORD PTR [rax+0x20],rdi
   14002a93f:	push   r14
   14002a941:	sub    rsp,0x50
   14002a945:	mov    edi,r9d
   14002a948:	mov    rsi,r8
   14002a94b:	mov    ebp,edx
   14002a94d:	lea    r9,[rip+0xed1c]        # 0x140039670
   14002a954:	mov    r14,rcx
   14002a957:	lea    r8,[rip+0xed0a]        # 0x140039668
   14002a95e:	lea    rdx,[rip+0xed0b]        # 0x140039670
   14002a965:	mov    ecx,0x16
   14002a96a:	call   0x14002a4b4
   14002a96f:	mov    rbx,rax
   14002a972:	test   rax,rax
   14002a975:	je     0x14002a9ce
   14002a977:	mov    rcx,rax
   14002a97a:	call   QWORD PTR [rip+0x7c60]        # 0x1400325e0
   14002a980:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002a988:	mov    r9d,edi
   14002a98b:	mov    rax,QWORD PTR [rsp+0x80]
   14002a993:	mov    r8,rsi
   14002a996:	mov    QWORD PTR [rsp+0x40],rcx
   14002a99b:	mov    edx,ebp
   14002a99d:	mov    rcx,QWORD PTR [rsp+0x98]
   14002a9a5:	mov    QWORD PTR [rsp+0x38],rcx
   14002a9aa:	mov    rcx,QWORD PTR [rsp+0x90]
   14002a9b2:	mov    QWORD PTR [rsp+0x30],rcx
   14002a9b7:	mov    ecx,DWORD PTR [rsp+0x88]
   14002a9be:	mov    DWORD PTR [rsp+0x28],ecx
   14002a9c2:	mov    rcx,r14
   14002a9c5:	mov    QWORD PTR [rsp+0x20],rax
   14002a9ca:	call   rbx
   14002a9cc:	jmp    0x14002aa00
   14002a9ce:	xor    edx,edx
   14002a9d0:	mov    rcx,r14
   14002a9d3:	call   0x14002aa1c
   14002a9d8:	mov    ecx,eax
   14002a9da:	mov    r9d,edi
   14002a9dd:	mov    eax,DWORD PTR [rsp+0x88]
   14002a9e4:	mov    r8,rsi
   14002a9e7:	mov    DWORD PTR [rsp+0x28],eax
   14002a9eb:	mov    edx,ebp
   14002a9ed:	mov    rax,QWORD PTR [rsp+0x80]
   14002a9f5:	mov    QWORD PTR [rsp+0x20],rax
   14002a9fa:	call   QWORD PTR [rip+0x7688]        # 0x140032088
   14002aa00:	mov    rbx,QWORD PTR [rsp+0x60]
   14002aa05:	mov    rbp,QWORD PTR [rsp+0x68]
   14002aa0a:	mov    rsi,QWORD PTR [rsp+0x70]
   14002aa0f:	mov    rdi,QWORD PTR [rsp+0x78]
   14002aa14:	add    rsp,0x50
   14002aa18:	pop    r14
   14002aa1a:	ret    
   14002aa1b:	int3   
   14002aa1c:	mov    QWORD PTR [rsp+0x8],rbx
   14002aa21:	mov    QWORD PTR [rsp+0x10],rsi
   14002aa26:	push   rdi
   14002aa27:	sub    rsp,0x20
   14002aa2b:	mov    esi,edx
   14002aa2d:	lea    r9,[rip+0xec54]        # 0x140039688
   14002aa34:	mov    rbx,rcx
   14002aa37:	lea    rdx,[rip+0xec4a]        # 0x140039688
   14002aa3e:	mov    ecx,0x18
   14002aa43:	lea    r8,[rip+0xec36]        # 0x140039680
   14002aa4a:	call   0x14002a4b4
   14002aa4f:	mov    rdi,rax
   14002aa52:	test   rax,rax
   14002aa55:	je     0x14002aa69
   14002aa57:	mov    rcx,rax
   14002aa5a:	call   QWORD PTR [rip+0x7b80]        # 0x1400325e0
   14002aa60:	mov    edx,esi
   14002aa62:	mov    rcx,rbx
   14002aa65:	call   rdi
   14002aa67:	jmp    0x14002aa71
   14002aa69:	mov    rcx,rbx
   14002aa6c:	call   0x14002e548
   14002aa71:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aa76:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aa7b:	add    rsp,0x20
   14002aa7f:	pop    rdi
   14002aa80:	ret    
   14002aa81:	int3   
   14002aa82:	int3   
   14002aa83:	int3   
   14002aa84:	mov    QWORD PTR [rsp+0x8],rdi
   14002aa89:	mov    rdx,QWORD PTR [rip+0x1b758]        # 0x1400461e8
   14002aa90:	lea    rdi,[rip+0x1dcf9]        # 0x140048790
   14002aa97:	mov    eax,edx
   14002aa99:	mov    ecx,0x40
   14002aa9e:	and    eax,0x3f
   14002aaa1:	sub    ecx,eax
   14002aaa3:	xor    eax,eax
   14002aaa5:	ror    rax,cl
   14002aaa8:	mov    ecx,0x20
   14002aaad:	xor    rax,rdx
   14002aab0:	rep stos QWORD PTR es:[rdi],rax
   14002aab3:	mov    rdi,QWORD PTR [rsp+0x8]
   14002aab8:	mov    al,0x1
   14002aaba:	ret    
   14002aabb:	int3   
   14002aabc:	mov    QWORD PTR [rsp+0x10],rbx
   14002aac1:	push   rdi
   14002aac2:	sub    rsp,0x20
   14002aac6:	mov    eax,DWORD PTR [rip+0x1ddc4]        # 0x140048890
   14002aacc:	xor    ebx,ebx
   14002aace:	test   eax,eax
   14002aad0:	je     0x14002aada
   14002aad2:	cmp    eax,0x1
   14002aad5:	sete   al
   14002aad8:	jmp    0x14002ab36
   14002aada:	lea    r9,[rip+0xeb67]        # 0x140039648
   14002aae1:	mov    ecx,0x8
   14002aae6:	lea    r8,[rip+0xeb53]        # 0x140039640
   14002aaed:	lea    rdx,[rip+0xeb54]        # 0x140039648
   14002aaf4:	call   0x14002a4b4
   14002aaf9:	mov    rdi,rax
   14002aafc:	test   rax,rax
   14002aaff:	je     0x14002ab29
   14002ab01:	mov    rcx,rax
   14002ab04:	mov    DWORD PTR [rsp+0x30],ebx
   14002ab08:	call   QWORD PTR [rip+0x7ad2]        # 0x1400325e0
   14002ab0e:	xor    edx,edx
   14002ab10:	lea    rcx,[rsp+0x30]
   14002ab15:	call   rdi
   14002ab17:	cmp    eax,0x7a
   14002ab1a:	jne    0x14002ab29
   14002ab1c:	lea    ecx,[rax-0x79]
   14002ab1f:	mov    al,0x1
   14002ab21:	xchg   DWORD PTR [rip+0x1dd69],ecx        # 0x140048890
   14002ab27:	jmp    0x14002ab36
   14002ab29:	mov    eax,0x2
   14002ab2e:	xchg   DWORD PTR [rip+0x1dd5c],eax        # 0x140048890
   14002ab34:	xor    al,al
   14002ab36:	mov    rbx,QWORD PTR [rsp+0x38]
   14002ab3b:	add    rsp,0x20
   14002ab3f:	pop    rdi
   14002ab40:	ret    
   14002ab41:	int3   
   14002ab42:	int3   
   14002ab43:	int3   
   14002ab44:	rex push rbx
   14002ab46:	sub    rsp,0x20
   14002ab4a:	test   cl,cl
   14002ab4c:	jne    0x14002ab7d
   14002ab4e:	lea    rbx,[rip+0x1db9b]        # 0x1400486f0
   14002ab55:	mov    rcx,QWORD PTR [rbx]
   14002ab58:	test   rcx,rcx
   14002ab5b:	je     0x14002ab6d
   14002ab5d:	cmp    rcx,0xffffffffffffffff
   14002ab61:	je     0x14002ab69
   14002ab63:	call   QWORD PTR [rip+0x766f]        # 0x1400321d8
   14002ab69:	and    QWORD PTR [rbx],0x0
   14002ab6d:	add    rbx,0x8
   14002ab71:	lea    rax,[rip+0x1dc18]        # 0x140048790
   14002ab78:	cmp    rbx,rax
   14002ab7b:	jne    0x14002ab55
   14002ab7d:	mov    al,0x1
   14002ab7f:	add    rsp,0x20
   14002ab83:	pop    rbx
   14002ab84:	ret    
   14002ab85:	int3   
   14002ab86:	int3   
   14002ab87:	int3   
   14002ab88:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab8d:	push   rdi
   14002ab8e:	sub    rsp,0x30
   14002ab92:	and    DWORD PTR [rsp+0x20],0x0
   14002ab97:	mov    ecx,0x8
   14002ab9c:	call   0x14002af28
   14002aba1:	nop
   14002aba2:	mov    ebx,0x3
   14002aba7:	mov    DWORD PTR [rsp+0x24],ebx
   14002abab:	cmp    ebx,DWORD PTR [rip+0x1d95f]        # 0x140048510
   14002abb1:	je     0x14002ac21
   14002abb3:	movsxd rdi,ebx
   14002abb6:	mov    rax,QWORD PTR [rip+0x1d95b]        # 0x140048518
   14002abbd:	mov    rax,QWORD PTR [rax+rdi*8]
   14002abc1:	test   rax,rax
   14002abc4:	jne    0x14002abc8
   14002abc6:	jmp    0x14002ac1d
   14002abc8:	mov    ecx,DWORD PTR [rax+0x14]
   14002abcb:	shr    ecx,0xd
   14002abce:	test   cl,0x1
   14002abd1:	je     0x14002abec
   14002abd3:	mov    rcx,QWORD PTR [rip+0x1d93e]        # 0x140048518
   14002abda:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14002abde:	call   0x14002e600
   14002abe3:	cmp    eax,0xffffffff
   14002abe6:	je     0x14002abec
   14002abe8:	inc    DWORD PTR [rsp+0x20]
   14002abec:	mov    rax,QWORD PTR [rip+0x1d925]        # 0x140048518
   14002abf3:	mov    rcx,QWORD PTR [rax+rdi*8]
   14002abf7:	add    rcx,0x30
   14002abfb:	call   QWORD PTR [rip+0x74e7]        # 0x1400320e8
   14002ac01:	mov    rcx,QWORD PTR [rip+0x1d910]        # 0x140048518
   14002ac08:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14002ac0c:	call   0x140007bd0
   14002ac11:	mov    rax,QWORD PTR [rip+0x1d900]        # 0x140048518
   14002ac18:	and    QWORD PTR [rax+rdi*8],0x0
   14002ac1d:	inc    ebx
   14002ac1f:	jmp    0x14002aba7
   14002ac21:	mov    ecx,0x8
   14002ac26:	call   0x14002af7c
   14002ac2b:	mov    eax,DWORD PTR [rsp+0x20]
   14002ac2f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ac34:	add    rsp,0x30
   14002ac38:	pop    rdi
   14002ac39:	ret    
   14002ac3a:	int3   
   14002ac3b:	int3   
   14002ac3c:	rex push rbx
   14002ac3e:	sub    rsp,0x20
   14002ac42:	mov    rbx,rcx
   14002ac45:	mov    eax,DWORD PTR [rcx+0x14]
   14002ac48:	shr    eax,0xd
   14002ac4b:	test   al,0x1
   14002ac4d:	je     0x14002ac76
   14002ac4f:	mov    eax,DWORD PTR [rcx+0x14]
   14002ac52:	shr    eax,0x6
   14002ac55:	test   al,0x1
   14002ac57:	je     0x14002ac76
   14002ac59:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ac5d:	call   0x140007bd0
   14002ac62:	lock and DWORD PTR [rbx+0x14],0xfffffebf
   14002ac6a:	xor    eax,eax
   14002ac6c:	mov    QWORD PTR [rbx+0x8],rax
   14002ac70:	mov    QWORD PTR [rbx],rax
   14002ac73:	mov    DWORD PTR [rbx+0x10],eax
   14002ac76:	add    rsp,0x20
   14002ac7a:	pop    rbx
   14002ac7b:	ret    
   14002ac7c:	mov    rax,rsp
   14002ac7f:	mov    QWORD PTR [rax+0x8],rbx
   14002ac83:	mov    QWORD PTR [rax+0x10],rbp
   14002ac87:	mov    QWORD PTR [rax+0x18],rsi
   14002ac8b:	mov    QWORD PTR [rax+0x20],rdi
   14002ac8f:	push   r14
   14002ac91:	sub    rsp,0x90
   14002ac98:	lea    rcx,[rax-0x78]
   14002ac9c:	call   QWORD PTR [rip+0x7496]        # 0x140032138
   14002aca2:	xor    r14d,r14d
   14002aca5:	cmp    WORD PTR [rsp+0x62],r14w
   14002acab:	je     0x14002ad49
   14002acb1:	mov    rax,QWORD PTR [rsp+0x68]
   14002acb6:	test   rax,rax
   14002acb9:	je     0x14002ad49
   14002acbf:	movsxd rbx,DWORD PTR [rax]
   14002acc2:	lea    rsi,[rax+0x4]
   14002acc6:	mov    edi,0x2000
   14002accb:	add    rbx,rsi
   14002acce:	cmp    DWORD PTR [rax],edi
   14002acd0:	cmovl  edi,DWORD PTR [rax]
   14002acd3:	mov    ecx,edi
   14002acd5:	call   0x14002d874
   14002acda:	cmp    edi,DWORD PTR [rip+0x1dfc0]        # 0x140048ca0
   14002ace0:	cmovg  edi,DWORD PTR [rip+0x1dfb9]        # 0x140048ca0
   14002ace7:	test   edi,edi
   14002ace9:	je     0x14002ad49
   14002aceb:	mov    ebp,r14d
   14002acee:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14002acf2:	je     0x14002ad39
   14002acf4:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   14002acf8:	je     0x14002ad39
   14002acfa:	test   BYTE PTR [rsi],0x1
   14002acfd:	je     0x14002ad39
   14002acff:	test   BYTE PTR [rsi],0x8
   14002ad02:	jne    0x14002ad11
   14002ad04:	mov    rcx,QWORD PTR [rbx]
   14002ad07:	call   QWORD PTR [rip+0x7373]        # 0x140032080
   14002ad0d:	test   eax,eax
   14002ad0f:	je     0x14002ad39
   14002ad11:	mov    rcx,rbp
   14002ad14:	lea    rdx,[rip+0x1db85]        # 0x1400488a0
   14002ad1b:	and    ecx,0x3f
   14002ad1e:	mov    rax,rbp
   14002ad21:	sar    rax,0x6
   14002ad25:	shl    rcx,0x6
   14002ad29:	add    rcx,QWORD PTR [rdx+rax*8]
   14002ad2d:	mov    rax,QWORD PTR [rbx]
   14002ad30:	mov    QWORD PTR [rcx+0x28],rax
   14002ad34:	mov    al,BYTE PTR [rsi]
   14002ad36:	mov    BYTE PTR [rcx+0x38],al
   14002ad39:	inc    rbp
   14002ad3c:	inc    rsi
   14002ad3f:	add    rbx,0x8
   14002ad43:	sub    rdi,0x1
   14002ad47:	jne    0x14002acee
   14002ad49:	lea    r11,[rsp+0x90]
   14002ad51:	mov    rbx,QWORD PTR [r11+0x10]
   14002ad55:	mov    rbp,QWORD PTR [r11+0x18]
   14002ad59:	mov    rsi,QWORD PTR [r11+0x20]
   14002ad5d:	mov    rdi,QWORD PTR [r11+0x28]
   14002ad61:	mov    rsp,r11
   14002ad64:	pop    r14
   14002ad66:	ret    
   14002ad67:	int3   
   14002ad68:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad6d:	mov    QWORD PTR [rsp+0x10],rsi
   14002ad72:	mov    QWORD PTR [rsp+0x18],rdi
   14002ad77:	push   r14
   14002ad79:	sub    rsp,0x20
   14002ad7d:	xor    edi,edi
   14002ad7f:	xor    r14d,r14d
   14002ad82:	movsxd rbx,edi
   14002ad85:	lea    rcx,[rip+0x1db14]        # 0x1400488a0
   14002ad8c:	mov    rax,rbx
   14002ad8f:	and    ebx,0x3f
   14002ad92:	sar    rax,0x6
   14002ad96:	shl    rbx,0x6
   14002ad9a:	add    rbx,QWORD PTR [rcx+rax*8]
   14002ad9e:	mov    rax,QWORD PTR [rbx+0x28]
   14002ada2:	add    rax,0x2
   14002ada6:	cmp    rax,0x1
   14002adaa:	jbe    0x14002adb5
   14002adac:	or     BYTE PTR [rbx+0x38],0x80
   14002adb0:	jmp    0x14002ae3e
   14002adb5:	mov    BYTE PTR [rbx+0x38],0x81
   14002adb9:	mov    ecx,edi
   14002adbb:	test   edi,edi
   14002adbd:	je     0x14002add5
   14002adbf:	sub    ecx,0x1
   14002adc2:	je     0x14002adce
   14002adc4:	cmp    ecx,0x1
   14002adc7:	mov    ecx,0xfffffff4
   14002adcc:	jmp    0x14002adda
   14002adce:	mov    ecx,0xfffffff5
   14002add3:	jmp    0x14002adda
   14002add5:	mov    ecx,0xfffffff6
   14002adda:	call   QWORD PTR [rip+0x72d0]        # 0x1400320b0
   14002ade0:	mov    rsi,rax
   14002ade3:	lea    rcx,[rax+0x1]
   14002ade7:	cmp    rcx,0x1
   14002adeb:	jbe    0x14002adf8
   14002aded:	mov    rcx,rax
   14002adf0:	call   QWORD PTR [rip+0x728a]        # 0x140032080
   14002adf6:	jmp    0x14002adfa
   14002adf8:	xor    eax,eax
   14002adfa:	test   eax,eax
   14002adfc:	je     0x14002ae1b
   14002adfe:	movzx  ecx,al
   14002ae01:	mov    QWORD PTR [rbx+0x28],rsi
   14002ae05:	cmp    ecx,0x2
   14002ae08:	jne    0x14002ae10
   14002ae0a:	or     BYTE PTR [rbx+0x38],0x40
   14002ae0e:	jmp    0x14002ae3e
   14002ae10:	cmp    ecx,0x3
   14002ae13:	jne    0x14002ae3e
   14002ae15:	or     BYTE PTR [rbx+0x38],0x8
   14002ae19:	jmp    0x14002ae3e
   14002ae1b:	or     BYTE PTR [rbx+0x38],0x40
   14002ae1f:	mov    QWORD PTR [rbx+0x28],0xfffffffffffffffe
   14002ae27:	mov    rax,QWORD PTR [rip+0x1d6ea]        # 0x140048518
   14002ae2e:	test   rax,rax
   14002ae31:	je     0x14002ae3e
   14002ae33:	mov    rax,QWORD PTR [r14+rax*1]
   14002ae37:	mov    DWORD PTR [rax+0x18],0xfffffffe
   14002ae3e:	inc    edi
   14002ae40:	add    r14,0x8
   14002ae44:	cmp    edi,0x3
   14002ae47:	jne    0x14002ad82
   14002ae4d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae52:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ae57:	mov    rdi,QWORD PTR [rsp+0x40]
   14002ae5c:	add    rsp,0x20
   14002ae60:	pop    r14
   14002ae62:	ret    
   14002ae63:	int3   
   14002ae64:	rex push rbx
   14002ae66:	sub    rsp,0x20
   14002ae6a:	mov    ecx,0x7
   14002ae6f:	call   0x14002af28
   14002ae74:	xor    ebx,ebx
   14002ae76:	xor    ecx,ecx
   14002ae78:	call   0x14002d874
   14002ae7d:	test   eax,eax
   14002ae7f:	jne    0x14002ae8d
   14002ae81:	call   0x14002ac7c
   14002ae86:	call   0x14002ad68
   14002ae8b:	mov    bl,0x1
   14002ae8d:	mov    ecx,0x7
   14002ae92:	call   0x14002af7c
   14002ae97:	mov    al,bl
   14002ae99:	add    rsp,0x20
   14002ae9d:	pop    rbx
   14002ae9e:	ret    
   14002ae9f:	int3   
   14002aea0:	mov    QWORD PTR [rsp+0x8],rbx
   14002aea5:	push   rdi
   14002aea6:	sub    rsp,0x20
   14002aeaa:	xor    ebx,ebx
   14002aeac:	lea    rdi,[rip+0x1d9ed]        # 0x1400488a0
   14002aeb3:	mov    rcx,QWORD PTR [rbx+rdi*1]
   14002aeb7:	test   rcx,rcx
   14002aeba:	je     0x14002aec6
   14002aebc:	call   0x14002d824
   14002aec1:	and    QWORD PTR [rbx+rdi*1],0x0
   14002aec6:	add    rbx,0x8
   14002aeca:	cmp    rbx,0x400
   14002aed1:	jb     0x14002aeac
   14002aed3:	mov    al,0x1
   14002aed5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aeda:	add    rsp,0x20
   14002aede:	pop    rdi
   14002aedf:	ret    
   14002aee0:	rex push rbx
   14002aee2:	sub    rsp,0x20
   14002aee6:	xor    ebx,ebx
   14002aee8:	lea    rdx,[rip+0x1ddc1]        # 0x140048cb0
   14002aeef:	xor    r8d,r8d
   14002aef2:	lea    rcx,[rbx+rbx*4]
   14002aef6:	lea    rcx,[rdx+rcx*8]
   14002aefa:	mov    edx,0xfa0
   14002aeff:	call   0x14002a8b4
   14002af04:	test   eax,eax
   14002af06:	je     0x14002af19
   14002af08:	inc    DWORD PTR [rip+0x1dfaa]        # 0x140048eb8
   14002af0e:	inc    ebx
   14002af10:	cmp    ebx,0xd
   14002af13:	jb     0x14002aee8
   14002af15:	mov    al,0x1
   14002af17:	jmp    0x14002af22
   14002af19:	xor    ecx,ecx
   14002af1b:	call   0x14002af44
   14002af20:	xor    al,al
   14002af22:	add    rsp,0x20
   14002af26:	pop    rbx
   14002af27:	ret    
   14002af28:	movsxd rax,ecx
   14002af2b:	lea    rcx,[rax+rax*4]
   14002af2f:	lea    rax,[rip+0x1dd7a]        # 0x140048cb0
   14002af36:	lea    rcx,[rax+rcx*8]
   14002af3a:	rex.W jmp QWORD PTR [rip+0x71b7]        # 0x1400320f8
   14002af41:	int3   
   14002af42:	int3   
   14002af43:	int3   
   14002af44:	rex push rbx
   14002af46:	sub    rsp,0x20
   14002af4a:	mov    ebx,DWORD PTR [rip+0x1df68]        # 0x140048eb8
   14002af50:	jmp    0x14002af6f
   14002af52:	lea    rax,[rip+0x1dd57]        # 0x140048cb0
   14002af59:	dec    ebx
   14002af5b:	lea    rcx,[rbx+rbx*4]
   14002af5f:	lea    rcx,[rax+rcx*8]
   14002af63:	call   QWORD PTR [rip+0x717f]        # 0x1400320e8
   14002af69:	dec    DWORD PTR [rip+0x1df49]        # 0x140048eb8
   14002af6f:	test   ebx,ebx
   14002af71:	jne    0x14002af52
   14002af73:	mov    al,0x1
   14002af75:	add    rsp,0x20
   14002af79:	pop    rbx
   14002af7a:	ret    
   14002af7b:	int3   
   14002af7c:	movsxd rax,ecx
   14002af7f:	lea    rcx,[rax+rax*4]
   14002af83:	lea    rax,[rip+0x1dd26]        # 0x140048cb0
   14002af8a:	lea    rcx,[rax+rcx*8]
   14002af8e:	rex.W jmp QWORD PTR [rip+0x715b]        # 0x1400320f0
   14002af95:	int3   
   14002af96:	int3   
   14002af97:	int3   
   14002af98:	mov    QWORD PTR [rsp+0x8],rbx
   14002af9d:	mov    QWORD PTR [rsp+0x20],r9
   14002afa2:	push   rdi
   14002afa3:	sub    rsp,0x20
   14002afa7:	mov    rdi,r9
   14002afaa:	mov    rbx,r8
   14002afad:	mov    ecx,DWORD PTR [rdx]
   14002afaf:	call   0x14002d92c
   14002afb4:	nop
   14002afb5:	mov    rax,QWORD PTR [rbx]
   14002afb8:	movsxd rcx,DWORD PTR [rax]
   14002afbb:	mov    rdx,rcx
   14002afbe:	mov    rax,rcx
   14002afc1:	sar    rax,0x6
   14002afc5:	lea    r8,[rip+0x1d8d4]        # 0x1400488a0
   14002afcc:	and    edx,0x3f
   14002afcf:	shl    rdx,0x6
   14002afd3:	mov    rax,QWORD PTR [r8+rax*8]
   14002afd7:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14002afdc:	je     0x14002b002
   14002afde:	call   0x14002da30
   14002afe3:	mov    rcx,rax
   14002afe6:	call   QWORD PTR [rip+0x71bc]        # 0x1400321a8
   14002afec:	xor    ebx,ebx
   14002afee:	test   eax,eax
   14002aff0:	jne    0x14002b010
   14002aff2:	call   0x14002a474
   14002aff7:	mov    rbx,rax
   14002affa:	call   QWORD PTR [rip+0x7208]        # 0x140032208
   14002b000:	mov    DWORD PTR [rbx],eax
   14002b002:	call   0x14002a494
   14002b007:	mov    DWORD PTR [rax],0x9
   14002b00d:	or     ebx,0xffffffff
   14002b010:	mov    ecx,DWORD PTR [rdi]
   14002b012:	call   0x14002d950
   14002b017:	mov    eax,ebx
   14002b019:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b01e:	add    rsp,0x20
   14002b022:	pop    rdi
   14002b023:	ret    
   14002b024:	mov    DWORD PTR [rsp+0x8],ecx
   14002b028:	sub    rsp,0x38
   14002b02c:	movsxd rdx,ecx
   14002b02f:	cmp    edx,0xfffffffe
   14002b032:	jne    0x14002b041
   14002b034:	call   0x14002a494
   14002b039:	mov    DWORD PTR [rax],0x9
   14002b03f:	jmp    0x14002b0ad
   14002b041:	test   ecx,ecx
   14002b043:	js     0x14002b09d
   14002b045:	cmp    edx,DWORD PTR [rip+0x1dc55]        # 0x140048ca0
   14002b04b:	jae    0x14002b09d
   14002b04d:	mov    rcx,rdx
   14002b050:	lea    r8,[rip+0x1d849]        # 0x1400488a0
   14002b057:	and    ecx,0x3f
   14002b05a:	mov    rax,rdx
   14002b05d:	sar    rax,0x6
   14002b061:	shl    rcx,0x6
   14002b065:	mov    rax,QWORD PTR [r8+rax*8]
   14002b069:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   14002b06e:	je     0x14002b09d
   14002b070:	lea    rax,[rsp+0x40]
   14002b075:	mov    DWORD PTR [rsp+0x50],edx
   14002b079:	mov    DWORD PTR [rsp+0x58],edx
   14002b07d:	lea    r9,[rsp+0x50]
   14002b082:	lea    rdx,[rsp+0x58]
   14002b087:	mov    QWORD PTR [rsp+0x20],rax
   14002b08c:	lea    r8,[rsp+0x20]
   14002b091:	lea    rcx,[rsp+0x48]
   14002b096:	call   0x14002af98
   14002b09b:	jmp    0x14002b0b0
   14002b09d:	call   0x14002a494
   14002b0a2:	mov    DWORD PTR [rax],0x9
   14002b0a8:	call   0x1400281ac
   14002b0ad:	or     eax,0xffffffff
   14002b0b0:	add    rsp,0x38
   14002b0b4:	ret    
   14002b0b5:	int3   
   14002b0b6:	int3   
   14002b0b7:	int3   
   14002b0b8:	mov    QWORD PTR [rsp+0x8],rbx
   14002b0bd:	push   rbp
   14002b0be:	push   rsi
   14002b0bf:	push   rdi
   14002b0c0:	push   r12
   14002b0c2:	push   r13
   14002b0c4:	push   r14
   14002b0c6:	push   r15
   14002b0c8:	mov    rbp,rsp
   14002b0cb:	sub    rsp,0x80
   14002b0d2:	mov    rax,QWORD PTR [rip+0x1b10f]        # 0x1400461e8
   14002b0d9:	xor    rax,rsp
   14002b0dc:	mov    QWORD PTR [rbp-0x10],rax
   14002b0e0:	movsxd rsi,edx
   14002b0e3:	lea    rax,[rip+0x1d7b6]        # 0x1400488a0
   14002b0ea:	mov    r15,rsi
   14002b0ed:	mov    r12d,r9d
   14002b0f0:	sar    r15,0x6
   14002b0f4:	and    esi,0x3f
   14002b0f7:	shl    rsi,0x6
   14002b0fb:	mov    r14,r8
   14002b0fe:	mov    QWORD PTR [rbp-0x28],r8
   14002b102:	mov    rbx,rcx
   14002b105:	add    r12,r8
   14002b108:	mov    rax,QWORD PTR [rax+r15*8]
   14002b10c:	mov    rax,QWORD PTR [rax+rsi*1+0x28]
   14002b111:	mov    QWORD PTR [rbp-0x30],rax
   14002b115:	call   QWORD PTR [rip+0x6f5d]        # 0x140032078
   14002b11b:	xor    edx,edx
   14002b11d:	mov    DWORD PTR [rbp-0x34],eax
   14002b120:	mov    QWORD PTR [rbx],rdx
   14002b123:	mov    rdi,r14
   14002b126:	mov    DWORD PTR [rbx+0x8],edx
   14002b129:	cmp    r14,r12
   14002b12c:	jae    0x14002b296
   14002b132:	mov    r13b,BYTE PTR [rdi]
   14002b135:	lea    r14,[rip+0x1d764]        # 0x1400488a0
   14002b13c:	mov    WORD PTR [rbp-0x40],dx
   14002b140:	mov    rdx,QWORD PTR [r14+r15*8]
   14002b144:	mov    cl,BYTE PTR [rdx+rsi*1+0x3d]
   14002b148:	test   cl,0x4
   14002b14b:	je     0x14002b16b
   14002b14d:	mov    al,BYTE PTR [rdx+rsi*1+0x3e]
   14002b151:	and    cl,0xfb
   14002b154:	mov    BYTE PTR [rdx+rsi*1+0x3d],cl
   14002b158:	mov    r8d,0x2
   14002b15e:	lea    rdx,[rbp-0x20]
   14002b162:	mov    BYTE PTR [rbp-0x20],al
   14002b165:	mov    BYTE PTR [rbp-0x1f],r13b
   14002b169:	jmp    0x14002b1b0
   14002b16b:	call   0x14002dd80
   14002b170:	movzx  ecx,BYTE PTR [rdi]
   14002b173:	mov    edx,0x8000
   14002b178:	test   WORD PTR [rax+rcx*2],dx
   14002b17c:	je     0x14002b1a7
   14002b17e:	cmp    rdi,r12
   14002b181:	jae    0x14002b276
   14002b187:	mov    r8d,0x2
   14002b18d:	lea    rcx,[rbp-0x40]
   14002b191:	mov    rdx,rdi
   14002b194:	call   0x14002bd28
   14002b199:	cmp    eax,0xffffffff
   14002b19c:	je     0x14002b296
   14002b1a2:	inc    rdi
   14002b1a5:	jmp    0x14002b1c2
   14002b1a7:	mov    r8d,0x1
   14002b1ad:	mov    rdx,rdi
   14002b1b0:	lea    rcx,[rbp-0x40]
   14002b1b4:	call   0x14002bd28
   14002b1b9:	cmp    eax,0xffffffff
   14002b1bc:	je     0x14002b296
   14002b1c2:	and    QWORD PTR [rsp+0x38],0x0
   14002b1c8:	lea    rax,[rbp-0x18]
   14002b1cc:	and    QWORD PTR [rsp+0x30],0x0
   14002b1d2:	lea    r8,[rbp-0x40]
   14002b1d6:	mov    ecx,DWORD PTR [rbp-0x34]
   14002b1d9:	mov    r9d,0x1
   14002b1df:	mov    DWORD PTR [rsp+0x28],0x5
   14002b1e7:	xor    edx,edx
   14002b1e9:	mov    QWORD PTR [rsp+0x20],rax
   14002b1ee:	inc    rdi
   14002b1f1:	call   QWORD PTR [rip+0x6ec1]        # 0x1400320b8
   14002b1f7:	mov    r14d,eax
   14002b1fa:	test   eax,eax
   14002b1fc:	je     0x14002b296
   14002b202:	mov    rcx,QWORD PTR [rbp-0x30]
   14002b206:	lea    r9,[rbp-0x38]
   14002b20a:	and    QWORD PTR [rsp+0x20],0x0
   14002b210:	lea    rdx,[rbp-0x18]
   14002b214:	mov    r8d,eax
   14002b217:	call   QWORD PTR [rip+0x6f7b]        # 0x140032198
   14002b21d:	xor    edx,edx
   14002b21f:	test   eax,eax
   14002b221:	je     0x14002b28e
   14002b223:	mov    ecx,DWORD PTR [rbx+0x8]
   14002b226:	sub    ecx,DWORD PTR [rbp-0x28]
   14002b229:	add    ecx,edi
   14002b22b:	mov    DWORD PTR [rbx+0x4],ecx
   14002b22e:	cmp    DWORD PTR [rbp-0x38],r14d
   14002b232:	jb     0x14002b296
   14002b234:	cmp    r13b,0xa
   14002b238:	jne    0x14002b26e
   14002b23a:	mov    rcx,QWORD PTR [rbp-0x30]
   14002b23e:	lea    eax,[rdx+0xd]
   14002b241:	mov    QWORD PTR [rsp+0x20],rdx
   14002b246:	lea    r8d,[rdx+0x1]
   14002b24a:	lea    rdx,[rbp-0x3c]
   14002b24e:	mov    WORD PTR [rbp-0x3c],ax
   14002b252:	lea    r9,[rbp-0x38]
   14002b256:	call   QWORD PTR [rip+0x6f3c]        # 0x140032198
   14002b25c:	xor    edx,edx
   14002b25e:	test   eax,eax
   14002b260:	je     0x14002b28e
   14002b262:	cmp    DWORD PTR [rbp-0x38],0x1
   14002b266:	jb     0x14002b296
   14002b268:	inc    DWORD PTR [rbx+0x8]
   14002b26b:	inc    DWORD PTR [rbx+0x4]
   14002b26e:	cmp    rdi,r12
   14002b271:	jmp    0x14002b12c
   14002b276:	mov    al,BYTE PTR [rdi]
   14002b278:	mov    rcx,QWORD PTR [r14+r15*8]
   14002b27c:	mov    BYTE PTR [rcx+rsi*1+0x3e],al
   14002b280:	mov    rax,QWORD PTR [r14+r15*8]
   14002b284:	or     BYTE PTR [rax+rsi*1+0x3d],0x4
   14002b289:	inc    DWORD PTR [rbx+0x4]
   14002b28c:	jmp    0x14002b296
   14002b28e:	call   QWORD PTR [rip+0x6f74]        # 0x140032208
   14002b294:	mov    DWORD PTR [rbx],eax
   14002b296:	mov    rax,rbx
   14002b299:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b29d:	xor    rcx,rsp
   14002b2a0:	call   0x140030a30
   14002b2a5:	mov    rbx,QWORD PTR [rsp+0xc0]
   14002b2ad:	add    rsp,0x80
   14002b2b4:	pop    r15
   14002b2b6:	pop    r14
   14002b2b8:	pop    r13
   14002b2ba:	pop    r12
   14002b2bc:	pop    rdi
   14002b2bd:	pop    rsi
   14002b2be:	pop    rbp
   14002b2bf:	ret    
   14002b2c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b2c5:	mov    QWORD PTR [rsp+0x18],rbp
   14002b2ca:	push   rsi
   14002b2cb:	push   rdi
   14002b2cc:	push   r14
   14002b2ce:	mov    eax,0x1450
   14002b2d3:	call   0x1400263c0
   14002b2d8:	sub    rsp,rax
   14002b2db:	mov    rax,QWORD PTR [rip+0x1af06]        # 0x1400461e8
   14002b2e2:	xor    rax,rsp
   14002b2e5:	mov    QWORD PTR [rsp+0x1440],rax
   14002b2ed:	mov    rbx,rcx
   14002b2f0:	movsxd r10,edx
   14002b2f3:	mov    rax,r10
   14002b2f6:	mov    ebp,r9d
   14002b2f9:	sar    rax,0x6
   14002b2fd:	lea    rcx,[rip+0x1d59c]        # 0x1400488a0
   14002b304:	and    r10d,0x3f
   14002b308:	add    rbp,r8
   14002b30b:	and    DWORD PTR [rbx],0x0
   14002b30e:	mov    rsi,r8
   14002b311:	and    DWORD PTR [rbx+0x4],0x0
   14002b315:	mov    rax,QWORD PTR [rcx+rax*8]
   14002b319:	and    DWORD PTR [rbx+0x8],0x0
   14002b31d:	shl    r10,0x6
   14002b321:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14002b326:	cmp    r8,rbp
   14002b329:	jae    0x14002b39a
   14002b32b:	lea    rdi,[rsp+0x40]
   14002b330:	cmp    rsi,rbp
   14002b333:	jae    0x14002b359
   14002b335:	mov    al,BYTE PTR [rsi]
   14002b337:	inc    rsi
   14002b33a:	cmp    al,0xa
   14002b33c:	jne    0x14002b347
   14002b33e:	inc    DWORD PTR [rbx+0x8]
   14002b341:	mov    BYTE PTR [rdi],0xd
   14002b344:	inc    rdi
   14002b347:	mov    BYTE PTR [rdi],al
   14002b349:	inc    rdi
   14002b34c:	lea    rax,[rsp+0x143f]
   14002b354:	cmp    rdi,rax
   14002b357:	jb     0x14002b330
   14002b359:	and    QWORD PTR [rsp+0x20],0x0
   14002b35f:	lea    rax,[rsp+0x40]
   14002b364:	sub    edi,eax
   14002b366:	lea    r9,[rsp+0x30]
   14002b36b:	mov    r8d,edi
   14002b36e:	lea    rdx,[rsp+0x40]
   14002b373:	mov    rcx,r14
   14002b376:	call   QWORD PTR [rip+0x6e1c]        # 0x140032198
   14002b37c:	test   eax,eax
   14002b37e:	je     0x14002b392
   14002b380:	mov    eax,DWORD PTR [rsp+0x30]
   14002b384:	add    DWORD PTR [rbx+0x4],eax
   14002b387:	cmp    eax,edi
   14002b389:	jb     0x14002b39a
   14002b38b:	cmp    rsi,rbp
   14002b38e:	jb     0x14002b32b
   14002b390:	jmp    0x14002b39a
   14002b392:	call   QWORD PTR [rip+0x6e70]        # 0x140032208
   14002b398:	mov    DWORD PTR [rbx],eax
   14002b39a:	mov    rax,rbx
   14002b39d:	mov    rcx,QWORD PTR [rsp+0x1440]
   14002b3a5:	xor    rcx,rsp
   14002b3a8:	call   0x140030a30
   14002b3ad:	lea    r11,[rsp+0x1450]
   14002b3b5:	mov    rbx,QWORD PTR [r11+0x20]
   14002b3b9:	mov    rbp,QWORD PTR [r11+0x30]
   14002b3bd:	mov    rsp,r11
   14002b3c0:	pop    r14
   14002b3c2:	pop    rdi
   14002b3c3:	pop    rsi
   14002b3c4:	ret    
   14002b3c5:	int3   
   14002b3c6:	int3   
   14002b3c7:	int3   
   14002b3c8:	mov    QWORD PTR [rsp+0x8],rbx
   14002b3cd:	mov    QWORD PTR [rsp+0x18],rbp
   14002b3d2:	push   rsi
   14002b3d3:	push   rdi
   14002b3d4:	push   r14
   14002b3d6:	mov    eax,0x1450
   14002b3db:	call   0x1400263c0
   14002b3e0:	sub    rsp,rax
   14002b3e3:	mov    rax,QWORD PTR [rip+0x1adfe]        # 0x1400461e8
   14002b3ea:	xor    rax,rsp
   14002b3ed:	mov    QWORD PTR [rsp+0x1440],rax
   14002b3f5:	mov    rdi,rcx
   14002b3f8:	movsxd r10,edx
   14002b3fb:	mov    rax,r10
   14002b3fe:	mov    ebp,r9d
   14002b401:	sar    rax,0x6
   14002b405:	lea    rcx,[rip+0x1d494]        # 0x1400488a0
   14002b40c:	and    r10d,0x3f
   14002b410:	add    rbp,r8
   14002b413:	and    DWORD PTR [rdi],0x0
   14002b416:	mov    rsi,r8
   14002b419:	and    DWORD PTR [rdi+0x4],0x0
   14002b41d:	mov    rax,QWORD PTR [rcx+rax*8]
   14002b421:	and    DWORD PTR [rdi+0x8],0x0
   14002b425:	shl    r10,0x6
   14002b429:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14002b42e:	cmp    r8,rbp
   14002b431:	jae    0x14002b4b9
   14002b437:	lea    rbx,[rsp+0x40]
   14002b43c:	cmp    rsi,rbp
   14002b43f:	jae    0x14002b472
   14002b441:	movzx  eax,WORD PTR [rsi]
   14002b444:	add    rsi,0x2
   14002b448:	cmp    ax,0xa
   14002b44c:	jne    0x14002b45e
   14002b44e:	add    DWORD PTR [rdi+0x8],0x2
   14002b452:	mov    ecx,0xd
   14002b457:	mov    WORD PTR [rbx],cx
   14002b45a:	add    rbx,0x2
   14002b45e:	mov    WORD PTR [rbx],ax
   14002b461:	add    rbx,0x2
   14002b465:	lea    rax,[rsp+0x143e]
   14002b46d:	cmp    rbx,rax
   14002b470:	jb     0x14002b43c
   14002b472:	and    QWORD PTR [rsp+0x20],0x0
   14002b478:	lea    rax,[rsp+0x40]
   14002b47d:	sub    rbx,rax
   14002b480:	lea    r9,[rsp+0x30]
   14002b485:	sar    rbx,1
   14002b488:	lea    rdx,[rsp+0x40]
   14002b48d:	add    ebx,ebx
   14002b48f:	mov    rcx,r14
   14002b492:	mov    r8d,ebx
   14002b495:	call   QWORD PTR [rip+0x6cfd]        # 0x140032198
   14002b49b:	test   eax,eax
   14002b49d:	je     0x14002b4b1
   14002b49f:	mov    eax,DWORD PTR [rsp+0x30]
   14002b4a3:	add    DWORD PTR [rdi+0x4],eax
   14002b4a6:	cmp    eax,ebx
   14002b4a8:	jb     0x14002b4b9
   14002b4aa:	cmp    rsi,rbp
   14002b4ad:	jb     0x14002b437
   14002b4af:	jmp    0x14002b4b9
   14002b4b1:	call   QWORD PTR [rip+0x6d51]        # 0x140032208
   14002b4b7:	mov    DWORD PTR [rdi],eax
   14002b4b9:	mov    rax,rdi
   14002b4bc:	mov    rcx,QWORD PTR [rsp+0x1440]
   14002b4c4:	xor    rcx,rsp
   14002b4c7:	call   0x140030a30
   14002b4cc:	lea    r11,[rsp+0x1450]
   14002b4d4:	mov    rbx,QWORD PTR [r11+0x20]
   14002b4d8:	mov    rbp,QWORD PTR [r11+0x30]
   14002b4dc:	mov    rsp,r11
   14002b4df:	pop    r14
   14002b4e1:	pop    rdi
   14002b4e2:	pop    rsi
   14002b4e3:	ret    
   14002b4e4:	mov    QWORD PTR [rsp+0x8],rbx
   14002b4e9:	mov    QWORD PTR [rsp+0x18],rbp
   14002b4ee:	push   rsi
   14002b4ef:	push   rdi
   14002b4f0:	push   r12
   14002b4f2:	push   r14
   14002b4f4:	push   r15
   14002b4f6:	mov    eax,0x1470
   14002b4fb:	call   0x1400263c0
   14002b500:	sub    rsp,rax
   14002b503:	mov    rax,QWORD PTR [rip+0x1acde]        # 0x1400461e8
   14002b50a:	xor    rax,rsp
   14002b50d:	mov    QWORD PTR [rsp+0x1460],rax
   14002b515:	movsxd r10,edx
   14002b518:	mov    rbx,rcx
   14002b51b:	mov    rax,r10
   14002b51e:	mov    r14d,r9d
   14002b521:	sar    rax,0x6
   14002b525:	lea    rcx,[rip+0x1d374]        # 0x1400488a0
   14002b52c:	and    r10d,0x3f
   14002b530:	add    r14,r8
   14002b533:	shl    r10,0x6
   14002b537:	mov    r15,r8
   14002b53a:	mov    rdi,r8
   14002b53d:	mov    rax,QWORD PTR [rcx+rax*8]
   14002b541:	mov    r12,QWORD PTR [rax+r10*1+0x28]
   14002b546:	xor    eax,eax
   14002b548:	and    DWORD PTR [rbx],0x0
   14002b54b:	mov    QWORD PTR [rbx+0x4],rax
   14002b54f:	cmp    r8,r14
   14002b552:	jae    0x14002b627
   14002b558:	lea    rax,[rsp+0x50]
   14002b55d:	cmp    rdi,r14
   14002b560:	jae    0x14002b58f
   14002b562:	movzx  ecx,WORD PTR [rdi]
   14002b565:	add    rdi,0x2
   14002b569:	cmp    cx,0xa
   14002b56d:	jne    0x14002b57b
   14002b56f:	mov    edx,0xd
   14002b574:	mov    WORD PTR [rax],dx
   14002b577:	add    rax,0x2
   14002b57b:	mov    WORD PTR [rax],cx
   14002b57e:	add    rax,0x2
   14002b582:	lea    rcx,[rsp+0x6f8]
   14002b58a:	cmp    rax,rcx
   14002b58d:	jb     0x14002b55d
   14002b58f:	and    QWORD PTR [rsp+0x38],0x0
   14002b595:	lea    rcx,[rsp+0x50]
   14002b59a:	and    QWORD PTR [rsp+0x30],0x0
   14002b5a0:	lea    r8,[rsp+0x50]
   14002b5a5:	sub    rax,rcx
   14002b5a8:	mov    DWORD PTR [rsp+0x28],0xd55
   14002b5b0:	lea    rcx,[rsp+0x700]
   14002b5b8:	sar    rax,1
   14002b5bb:	mov    QWORD PTR [rsp+0x20],rcx
   14002b5c0:	mov    r9d,eax
   14002b5c3:	mov    ecx,0xfde9
   14002b5c8:	xor    edx,edx
   14002b5ca:	call   QWORD PTR [rip+0x6ae8]        # 0x1400320b8
   14002b5d0:	mov    ebp,eax
   14002b5d2:	test   eax,eax
   14002b5d4:	je     0x14002b61f
   14002b5d6:	xor    esi,esi
   14002b5d8:	test   eax,eax
   14002b5da:	je     0x14002b60f
   14002b5dc:	and    QWORD PTR [rsp+0x20],0x0
   14002b5e2:	lea    rdx,[rsp+0x700]
   14002b5ea:	mov    ecx,esi
   14002b5ec:	lea    r9,[rsp+0x40]
   14002b5f1:	mov    r8d,ebp
   14002b5f4:	add    rdx,rcx
   14002b5f7:	mov    rcx,r12
   14002b5fa:	sub    r8d,esi
   14002b5fd:	call   QWORD PTR [rip+0x6b95]        # 0x140032198
   14002b603:	test   eax,eax
   14002b605:	je     0x14002b61f
   14002b607:	add    esi,DWORD PTR [rsp+0x40]
   14002b60b:	cmp    esi,ebp
   14002b60d:	jb     0x14002b5dc
   14002b60f:	mov    eax,edi
   14002b611:	sub    eax,r15d
   14002b614:	mov    DWORD PTR [rbx+0x4],eax
   14002b617:	cmp    rdi,r14
   14002b61a:	jmp    0x14002b552
   14002b61f:	call   QWORD PTR [rip+0x6be3]        # 0x140032208
   14002b625:	mov    DWORD PTR [rbx],eax
   14002b627:	mov    rax,rbx
   14002b62a:	mov    rcx,QWORD PTR [rsp+0x1460]
   14002b632:	xor    rcx,rsp
   14002b635:	call   0x140030a30
   14002b63a:	lea    r11,[rsp+0x1470]
   14002b642:	mov    rbx,QWORD PTR [r11+0x30]
   14002b646:	mov    rbp,QWORD PTR [r11+0x40]
   14002b64a:	mov    rsp,r11
   14002b64d:	pop    r15
   14002b64f:	pop    r14
   14002b651:	pop    r12
   14002b653:	pop    rdi
   14002b654:	pop    rsi
   14002b655:	ret    
   14002b656:	int3   
   14002b657:	int3   
   14002b658:	mov    QWORD PTR [rsp+0x10],rbx
   14002b65d:	mov    QWORD PTR [rsp+0x18],rsi
   14002b662:	mov    DWORD PTR [rsp+0x8],ecx
   14002b666:	push   rdi
   14002b667:	push   r12
   14002b669:	push   r13
   14002b66b:	push   r14
   14002b66d:	push   r15
   14002b66f:	sub    rsp,0x20
   14002b673:	mov    r15d,r8d
   14002b676:	mov    r12,rdx
   14002b679:	movsxd rbx,ecx
   14002b67c:	cmp    ebx,0xfffffffe
   14002b67f:	jne    0x14002b699
   14002b681:	call   0x14002a474
   14002b686:	and    DWORD PTR [rax],0x0
   14002b689:	call   0x14002a494
   14002b68e:	mov    DWORD PTR [rax],0x9
   14002b694:	jmp    0x14002b729
   14002b699:	test   ecx,ecx
   14002b69b:	js     0x14002b711
   14002b69d:	cmp    ebx,DWORD PTR [rip+0x1d5fd]        # 0x140048ca0
   14002b6a3:	jae    0x14002b711
   14002b6a5:	mov    rsi,rbx
   14002b6a8:	mov    r14,rbx
   14002b6ab:	sar    r14,0x6
   14002b6af:	lea    r13,[rip+0x1d1ea]        # 0x1400488a0
   14002b6b6:	and    esi,0x3f
   14002b6b9:	shl    rsi,0x6
   14002b6bd:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14002b6c2:	movzx  ecx,BYTE PTR [rax+rsi*1+0x38]
   14002b6c7:	and    ecx,0x1
   14002b6ca:	je     0x14002b711
   14002b6cc:	mov    ecx,ebx
   14002b6ce:	call   0x14002d92c
   14002b6d3:	or     edi,0xffffffff
   14002b6d6:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14002b6db:	test   BYTE PTR [rax+rsi*1+0x38],0x1
   14002b6e0:	jne    0x14002b6f7
   14002b6e2:	call   0x14002a494
   14002b6e7:	mov    DWORD PTR [rax],0x9
   14002b6ed:	call   0x14002a474
   14002b6f2:	and    DWORD PTR [rax],0x0
   14002b6f5:	jmp    0x14002b706
   14002b6f7:	mov    r8d,r15d
   14002b6fa:	mov    rdx,r12
   14002b6fd:	mov    ecx,ebx
   14002b6ff:	call   0x14002b744
   14002b704:	mov    edi,eax
   14002b706:	mov    ecx,ebx
   14002b708:	call   0x14002d950
   14002b70d:	mov    eax,edi
   14002b70f:	jmp    0x14002b72c
   14002b711:	call   0x14002a474
   14002b716:	and    DWORD PTR [rax],0x0
   14002b719:	call   0x14002a494
   14002b71e:	mov    DWORD PTR [rax],0x9
   14002b724:	call   0x1400281ac
   14002b729:	or     eax,0xffffffff
   14002b72c:	mov    rbx,QWORD PTR [rsp+0x58]
   14002b731:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b736:	add    rsp,0x20
   14002b73a:	pop    r15
   14002b73c:	pop    r14
   14002b73e:	pop    r13
   14002b740:	pop    r12
   14002b742:	pop    rdi
   14002b743:	ret    
   14002b744:	mov    QWORD PTR [rsp+0x20],rbx
   14002b749:	push   rbp
   14002b74a:	push   rsi
   14002b74b:	push   rdi
   14002b74c:	push   r12
   14002b74e:	push   r13
   14002b750:	push   r14
   14002b752:	push   r15
   14002b754:	mov    rbp,rsp
   14002b757:	sub    rsp,0x60
   14002b75b:	xor    edi,edi
   14002b75d:	mov    r15d,r8d
   14002b760:	movsxd r12,ecx
   14002b763:	mov    rsi,rdx
   14002b766:	test   r8d,r8d
   14002b769:	jne    0x14002b772
   14002b76b:	xor    eax,eax
   14002b76d:	jmp    0x14002ba0d
   14002b772:	test   rdx,rdx
   14002b775:	jne    0x14002b796
   14002b777:	call   0x14002a474
   14002b77c:	mov    DWORD PTR [rax],edi
   14002b77e:	call   0x14002a494
   14002b783:	mov    DWORD PTR [rax],0x16
   14002b789:	call   0x1400281ac
   14002b78e:	or     eax,0xffffffff
   14002b791:	jmp    0x14002ba0d
   14002b796:	mov    r14,r12
   14002b799:	lea    rax,[rip+0x1d100]        # 0x1400488a0
   14002b7a0:	and    r14d,0x3f
   14002b7a4:	mov    r13,r12
   14002b7a7:	sar    r13,0x6
   14002b7ab:	shl    r14,0x6
   14002b7af:	mov    QWORD PTR [rbp-0x10],r13
   14002b7b3:	mov    rcx,QWORD PTR [rax+r13*8]
   14002b7b7:	mov    bl,BYTE PTR [rcx+r14*1+0x39]
   14002b7bc:	lea    eax,[rbx-0x1]
   14002b7bf:	cmp    al,0x1
   14002b7c1:	ja     0x14002b7cc
   14002b7c3:	mov    eax,r15d
   14002b7c6:	not    eax
   14002b7c8:	test   al,0x1
   14002b7ca:	je     0x14002b777
   14002b7cc:	test   BYTE PTR [rcx+r14*1+0x38],0x20
   14002b7d2:	je     0x14002b7e2
   14002b7d4:	xor    edx,edx
   14002b7d6:	mov    ecx,r12d
   14002b7d9:	lea    r8d,[rdx+0x2]
   14002b7dd:	call   0x14002e768
   14002b7e2:	mov    ecx,r12d
   14002b7e5:	mov    QWORD PTR [rbp-0x20],rdi
   14002b7e9:	call   0x14002e66c
   14002b7ee:	test   eax,eax
   14002b7f0:	je     0x14002b8f7
   14002b7f6:	lea    rax,[rip+0x1d0a3]        # 0x1400488a0
   14002b7fd:	mov    rax,QWORD PTR [rax+r13*8]
   14002b801:	test   BYTE PTR [rax+r14*1+0x38],0x80
   14002b807:	je     0x14002b8f7
   14002b80d:	call   0x14002a248
   14002b812:	mov    rcx,QWORD PTR [rax+0x90]
   14002b819:	cmp    QWORD PTR [rcx+0x138],rdi
   14002b820:	jne    0x14002b838
   14002b822:	lea    rax,[rip+0x1d077]        # 0x1400488a0
   14002b829:	mov    rax,QWORD PTR [rax+r13*8]
   14002b82d:	cmp    BYTE PTR [rax+r14*1+0x39],dil
   14002b832:	je     0x14002b8f7
   14002b838:	lea    rax,[rip+0x1d061]        # 0x1400488a0
   14002b83f:	mov    rcx,QWORD PTR [rax+r13*8]
   14002b843:	lea    rdx,[rbp-0x8]
   14002b847:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14002b84c:	call   QWORD PTR [rip+0x681e]        # 0x140032070
   14002b852:	test   eax,eax
   14002b854:	je     0x14002b8f7
   14002b85a:	test   bl,bl
   14002b85c:	je     0x14002b8d9
   14002b85e:	dec    bl
   14002b860:	cmp    bl,0x1
   14002b863:	ja     0x14002b994
   14002b869:	and    DWORD PTR [rbp-0x30],edi
   14002b86c:	lea    r12,[rsi+r15*1]
   14002b870:	xor    ebx,ebx
   14002b872:	mov    r15,rsi
   14002b875:	mov    DWORD PTR [rbp-0x2c],ebx
   14002b878:	cmp    rsi,r12
   14002b87b:	jae    0x14002b98a
   14002b881:	movzx  r13d,WORD PTR [r15]
   14002b885:	movzx  ecx,r13w
   14002b889:	call   0x14002e770
   14002b88e:	cmp    ax,r13w
   14002b892:	jne    0x14002b8c7
   14002b894:	add    ebx,0x2
   14002b897:	mov    DWORD PTR [rbp-0x2c],ebx
   14002b89a:	cmp    r13w,0xa
   14002b89f:	jne    0x14002b8bc
   14002b8a1:	mov    r13d,0xd
   14002b8a7:	mov    ecx,r13d
   14002b8aa:	call   0x14002e770
   14002b8af:	cmp    ax,r13w
   14002b8b3:	jne    0x14002b8c7
   14002b8b5:	inc    ebx
   14002b8b7:	mov    DWORD PTR [rbp-0x2c],ebx
   14002b8ba:	inc    edi
   14002b8bc:	add    r15,0x2
   14002b8c0:	cmp    r15,r12
   14002b8c3:	jae    0x14002b8d0
   14002b8c5:	jmp    0x14002b881
   14002b8c7:	call   QWORD PTR [rip+0x693b]        # 0x140032208
   14002b8cd:	mov    DWORD PTR [rbp-0x30],eax
   14002b8d0:	mov    r13,QWORD PTR [rbp-0x10]
   14002b8d4:	jmp    0x14002b98a
   14002b8d9:	mov    r9d,r15d
   14002b8dc:	lea    rcx,[rbp-0x30]
   14002b8e0:	mov    r8,rsi
   14002b8e3:	mov    edx,r12d
   14002b8e6:	call   0x14002b0b8
   14002b8eb:	movsd  xmm0,QWORD PTR [rax]
   14002b8ef:	mov    edi,DWORD PTR [rax+0x8]
   14002b8f2:	jmp    0x14002b98f
   14002b8f7:	lea    rax,[rip+0x1cfa2]        # 0x1400488a0
   14002b8fe:	mov    rcx,QWORD PTR [rax+r13*8]
   14002b902:	test   BYTE PTR [rcx+r14*1+0x38],0x80
   14002b908:	je     0x14002b957
   14002b90a:	movsx  ecx,bl
   14002b90d:	test   bl,bl
   14002b90f:	je     0x14002b943
   14002b911:	sub    ecx,0x1
   14002b914:	je     0x14002b92f
   14002b916:	cmp    ecx,0x1
   14002b919:	jne    0x14002b994
   14002b91b:	mov    r9d,r15d
   14002b91e:	lea    rcx,[rbp-0x30]
   14002b922:	mov    r8,rsi
   14002b925:	mov    edx,r12d
   14002b928:	call   0x14002b3c8
   14002b92d:	jmp    0x14002b8eb
   14002b92f:	mov    r9d,r15d
   14002b932:	lea    rcx,[rbp-0x30]
   14002b936:	mov    r8,rsi
   14002b939:	mov    edx,r12d
   14002b93c:	call   0x14002b4e4
   14002b941:	jmp    0x14002b8eb
   14002b943:	mov    r9d,r15d
   14002b946:	lea    rcx,[rbp-0x30]
   14002b94a:	mov    r8,rsi
   14002b94d:	mov    edx,r12d
   14002b950:	call   0x14002b2c0
   14002b955:	jmp    0x14002b8eb
   14002b957:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14002b95c:	lea    r9,[rbp-0x2c]
   14002b960:	and    DWORD PTR [rbp-0x30],edi
   14002b963:	xor    eax,eax
   14002b965:	and    QWORD PTR [rsp+0x20],rax
   14002b96a:	mov    r8d,r15d
   14002b96d:	mov    rdx,rsi
   14002b970:	mov    QWORD PTR [rbp-0x2c],rax
   14002b974:	call   QWORD PTR [rip+0x681e]        # 0x140032198
   14002b97a:	test   eax,eax
   14002b97c:	jne    0x14002b987
   14002b97e:	call   QWORD PTR [rip+0x6884]        # 0x140032208
   14002b984:	mov    DWORD PTR [rbp-0x30],eax
   14002b987:	mov    edi,DWORD PTR [rbp-0x28]
   14002b98a:	movsd  xmm0,QWORD PTR [rbp-0x30]
   14002b98f:	movsd  QWORD PTR [rbp-0x20],xmm0
   14002b994:	mov    rax,QWORD PTR [rbp-0x20]
   14002b998:	shr    rax,0x20
   14002b99c:	test   eax,eax
   14002b99e:	jne    0x14002ba08
   14002b9a0:	mov    eax,DWORD PTR [rbp-0x20]
   14002b9a3:	test   eax,eax
   14002b9a5:	je     0x14002b9d4
   14002b9a7:	cmp    eax,0x5
   14002b9aa:	jne    0x14002b9c7
   14002b9ac:	call   0x14002a494
   14002b9b1:	mov    DWORD PTR [rax],0x9
   14002b9b7:	call   0x14002a474
   14002b9bc:	mov    DWORD PTR [rax],0x5
   14002b9c2:	jmp    0x14002b78e
   14002b9c7:	mov    ecx,DWORD PTR [rbp-0x20]
   14002b9ca:	call   0x14002a424
   14002b9cf:	jmp    0x14002b78e
   14002b9d4:	lea    rax,[rip+0x1cec5]        # 0x1400488a0
   14002b9db:	mov    rax,QWORD PTR [rax+r13*8]
   14002b9df:	test   BYTE PTR [rax+r14*1+0x38],0x40
   14002b9e5:	je     0x14002b9f0
   14002b9e7:	cmp    BYTE PTR [rsi],0x1a
   14002b9ea:	je     0x14002b76b
   14002b9f0:	call   0x14002a494
   14002b9f5:	mov    DWORD PTR [rax],0x1c
   14002b9fb:	call   0x14002a474
   14002ba00:	and    DWORD PTR [rax],0x0
   14002ba03:	jmp    0x14002b78e
   14002ba08:	mov    eax,DWORD PTR [rbp-0x1c]
   14002ba0b:	sub    eax,edi
   14002ba0d:	mov    rbx,QWORD PTR [rsp+0xb8]
   14002ba15:	add    rsp,0x60
   14002ba19:	pop    r15
   14002ba1b:	pop    r14
   14002ba1d:	pop    r13
   14002ba1f:	pop    r12
   14002ba21:	pop    rdi
   14002ba22:	pop    rsi
   14002ba23:	pop    rbp
   14002ba24:	ret    
   14002ba25:	int3   
   14002ba26:	int3   
   14002ba27:	int3   
   14002ba28:	sub    rsp,0x28
   14002ba2c:	test   rcx,rcx
   14002ba2f:	jne    0x14002ba46
   14002ba31:	call   0x14002a494
   14002ba36:	mov    DWORD PTR [rax],0x16
   14002ba3c:	call   0x1400281ac
   14002ba41:	or     eax,0xffffffff
   14002ba44:	jmp    0x14002ba49
   14002ba46:	mov    eax,DWORD PTR [rcx+0x18]
   14002ba49:	add    rsp,0x28
   14002ba4d:	ret    
   14002ba4e:	int3   
   14002ba4f:	int3   
   14002ba50:	mov    QWORD PTR [rsp+0x8],rbx
   14002ba55:	push   rdi
   14002ba56:	sub    rsp,0x20
   14002ba5a:	movsxd rdi,ecx
   14002ba5d:	test   rdx,rdx
   14002ba60:	je     0x14002ba81
   14002ba62:	mov    rax,QWORD PTR [rdx]
   14002ba65:	cmp    DWORD PTR [rax+0x8],0x1
   14002ba69:	jle    0x14002ba7c
   14002ba6b:	mov    r8,rdx
   14002ba6e:	mov    ecx,edi
   14002ba70:	mov    edx,0x1
   14002ba75:	call   0x14002e370
   14002ba7a:	jmp    0x14002ba8d
   14002ba7c:	mov    rax,QWORD PTR [rax]
   14002ba7f:	jmp    0x14002ba86
   14002ba81:	call   0x14002dd80
   14002ba86:	movzx  eax,WORD PTR [rax+rdi*2]
   14002ba8a:	and    eax,0x1
   14002ba8d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ba92:	test   eax,eax
   14002ba94:	setne  al
   14002ba97:	add    rsp,0x20
   14002ba9b:	pop    rdi
   14002ba9c:	ret    
   14002ba9d:	int3   
   14002ba9e:	int3   
   14002ba9f:	int3   
   14002baa0:	mov    QWORD PTR [rsp+0x10],rbx
   14002baa5:	mov    QWORD PTR [rsp+0x20],rsi
   14002baaa:	push   rbp
   14002baab:	mov    rbp,rsp
   14002baae:	sub    rsp,0x70
   14002bab2:	movsxd rbx,ecx
   14002bab5:	lea    rcx,[rbp-0x20]
   14002bab9:	call   0x1400288e8
   14002babe:	cmp    ebx,0x100
   14002bac4:	jae    0x14002bafe
   14002bac6:	lea    rdx,[rbp-0x18]
   14002baca:	mov    ecx,ebx
   14002bacc:	call   0x14002ba50
   14002bad1:	test   al,al
   14002bad3:	je     0x14002bae4
   14002bad5:	mov    rax,QWORD PTR [rbp-0x18]
   14002bad9:	mov    rcx,QWORD PTR [rax+0x110]
   14002bae0:	movzx  ebx,BYTE PTR [rcx+rbx*1]
   14002bae4:	cmp    BYTE PTR [rbp-0x8],0x0
   14002bae8:	je     0x14002bbca
   14002baee:	mov    rax,QWORD PTR [rbp-0x20]
   14002baf2:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002baf9:	jmp    0x14002bbca
   14002bafe:	xor    eax,eax
   14002bb00:	mov    WORD PTR [rbp+0x10],ax
   14002bb04:	mov    BYTE PTR [rbp+0x12],al
   14002bb07:	mov    rax,QWORD PTR [rbp-0x18]
   14002bb0b:	cmp    DWORD PTR [rax+0x8],0x1
   14002bb0f:	jle    0x14002bb39
   14002bb11:	mov    esi,ebx
   14002bb13:	lea    rdx,[rbp-0x18]
   14002bb17:	sar    esi,0x8
   14002bb1a:	movzx  ecx,sil
   14002bb1e:	call   0x14002e7cc
   14002bb23:	test   eax,eax
   14002bb25:	je     0x14002bb39
   14002bb27:	mov    BYTE PTR [rbp+0x10],sil
   14002bb2b:	mov    ecx,0x2
   14002bb30:	mov    BYTE PTR [rbp+0x11],bl
   14002bb33:	mov    BYTE PTR [rbp+0x12],0x0
   14002bb37:	jmp    0x14002bb50
   14002bb39:	call   0x14002a494
   14002bb3e:	mov    ecx,0x1
   14002bb43:	mov    DWORD PTR [rax],0x2a
   14002bb49:	mov    BYTE PTR [rbp+0x10],bl
   14002bb4c:	mov    BYTE PTR [rbp+0x11],0x0
   14002bb50:	mov    rdx,QWORD PTR [rbp-0x18]
   14002bb54:	lea    r9,[rbp+0x10]
   14002bb58:	xor    eax,eax
   14002bb5a:	mov    DWORD PTR [rsp+0x40],0x1
   14002bb62:	mov    WORD PTR [rbp+0x20],ax
   14002bb66:	mov    r8d,0x100
   14002bb6c:	mov    BYTE PTR [rbp+0x22],al
   14002bb6f:	mov    eax,DWORD PTR [rdx+0xc]
   14002bb72:	mov    rdx,QWORD PTR [rdx+0x138]
   14002bb79:	mov    DWORD PTR [rsp+0x38],eax
   14002bb7d:	lea    rax,[rbp+0x20]
   14002bb81:	mov    DWORD PTR [rsp+0x30],0x3
   14002bb89:	mov    QWORD PTR [rsp+0x28],rax
   14002bb8e:	mov    DWORD PTR [rsp+0x20],ecx
   14002bb92:	lea    rcx,[rbp-0x18]
   14002bb96:	call   0x14002eb68
   14002bb9b:	test   eax,eax
   14002bb9d:	je     0x14002bae4
   14002bba3:	movzx  ebx,BYTE PTR [rbp+0x20]
   14002bba7:	cmp    eax,0x1
   14002bbaa:	je     0x14002bae4
   14002bbb0:	movzx  ecx,BYTE PTR [rbp+0x21]
   14002bbb4:	shl    ebx,0x8
   14002bbb7:	or     ebx,ecx
   14002bbb9:	cmp    BYTE PTR [rbp-0x8],0x0
   14002bbbd:	je     0x14002bbca
   14002bbbf:	mov    rcx,QWORD PTR [rbp-0x20]
   14002bbc3:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002bbca:	lea    r11,[rsp+0x70]
   14002bbcf:	mov    eax,ebx
   14002bbd1:	mov    rbx,QWORD PTR [r11+0x18]
   14002bbd5:	mov    rsi,QWORD PTR [r11+0x28]
   14002bbd9:	mov    rsp,r11
   14002bbdc:	pop    rbp
   14002bbdd:	ret    
   14002bbde:	int3   
   14002bbdf:	int3   
   14002bbe0:	mov    rax,rsp
   14002bbe3:	mov    QWORD PTR [rax+0x8],rbx
   14002bbe7:	mov    QWORD PTR [rax+0x10],rbp
   14002bbeb:	mov    QWORD PTR [rax+0x18],rsi
   14002bbef:	mov    QWORD PTR [rax+0x20],rdi
   14002bbf3:	push   r14
   14002bbf5:	sub    rsp,0x50
   14002bbf9:	xor    r14d,r14d
   14002bbfc:	mov    rbp,r8
   14002bbff:	mov    rsi,rdx
   14002bc02:	mov    rdi,rcx
   14002bc05:	test   rdx,rdx
   14002bc08:	je     0x14002bc1d
   14002bc0a:	test   r8,r8
   14002bc0d:	je     0x14002bc1d
   14002bc0f:	cmp    BYTE PTR [rdx],r14b
   14002bc12:	jne    0x14002bc3a
   14002bc14:	test   rcx,rcx
   14002bc17:	je     0x14002bc1d
   14002bc19:	mov    WORD PTR [rcx],r14w
   14002bc1d:	xor    eax,eax
   14002bc1f:	mov    rbx,QWORD PTR [rsp+0x60]
   14002bc24:	mov    rbp,QWORD PTR [rsp+0x68]
   14002bc29:	mov    rsi,QWORD PTR [rsp+0x70]
   14002bc2e:	mov    rdi,QWORD PTR [rsp+0x78]
   14002bc33:	add    rsp,0x50
   14002bc37:	pop    r14
   14002bc39:	ret    
   14002bc3a:	mov    rdx,r9
   14002bc3d:	lea    rcx,[rsp+0x30]
   14002bc42:	call   0x1400288e8
   14002bc47:	mov    rax,QWORD PTR [rsp+0x38]
   14002bc4c:	cmp    QWORD PTR [rax+0x138],r14
   14002bc53:	jne    0x14002bc6a
   14002bc55:	test   rdi,rdi
   14002bc58:	je     0x14002bc60
   14002bc5a:	movzx  eax,BYTE PTR [rsi]
   14002bc5d:	mov    WORD PTR [rdi],ax
   14002bc60:	mov    ebx,0x1
   14002bc65:	jmp    0x14002bd0e
   14002bc6a:	movzx  ecx,BYTE PTR [rsi]
   14002bc6d:	lea    rdx,[rsp+0x38]
   14002bc72:	call   0x14002e7cc
   14002bc77:	mov    ebx,0x1
   14002bc7c:	test   eax,eax
   14002bc7e:	je     0x14002bcd1
   14002bc80:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bc85:	mov    r9d,DWORD PTR [rcx+0x8]
   14002bc89:	cmp    r9d,ebx
   14002bc8c:	jle    0x14002bcbd
   14002bc8e:	cmp    ebp,r9d
   14002bc91:	jl     0x14002bcbd
   14002bc93:	mov    ecx,DWORD PTR [rcx+0xc]
   14002bc96:	lea    edx,[rbx+0x8]
   14002bc99:	mov    eax,r14d
   14002bc9c:	test   rdi,rdi
   14002bc9f:	mov    r8,rsi
   14002bca2:	setne  al
   14002bca5:	mov    DWORD PTR [rsp+0x28],eax
   14002bca9:	mov    QWORD PTR [rsp+0x20],rdi
   14002bcae:	call   QWORD PTR [rip+0x640c]        # 0x1400320c0
   14002bcb4:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bcb9:	test   eax,eax
   14002bcbb:	jne    0x14002bccc
   14002bcbd:	movsxd rax,DWORD PTR [rcx+0x8]
   14002bcc1:	cmp    rbp,rax
   14002bcc4:	jb     0x14002bd00
   14002bcc6:	cmp    BYTE PTR [rsi+0x1],r14b
   14002bcca:	je     0x14002bd00
   14002bccc:	mov    ebx,DWORD PTR [rcx+0x8]
   14002bccf:	jmp    0x14002bd0e
   14002bcd1:	mov    eax,r14d
   14002bcd4:	test   rdi,rdi
   14002bcd7:	mov    r9d,ebx
   14002bcda:	mov    r8,rsi
   14002bcdd:	setne  al
   14002bce0:	mov    edx,0x9
   14002bce5:	mov    DWORD PTR [rsp+0x28],eax
   14002bce9:	mov    rax,QWORD PTR [rsp+0x38]
   14002bcee:	mov    QWORD PTR [rsp+0x20],rdi
   14002bcf3:	mov    ecx,DWORD PTR [rax+0xc]
   14002bcf6:	call   QWORD PTR [rip+0x63c4]        # 0x1400320c0
   14002bcfc:	test   eax,eax
   14002bcfe:	jne    0x14002bd0e
   14002bd00:	call   0x14002a494
   14002bd05:	or     ebx,0xffffffff
   14002bd08:	mov    DWORD PTR [rax],0x2a
   14002bd0e:	cmp    BYTE PTR [rsp+0x48],r14b
   14002bd13:	je     0x14002bd21
   14002bd15:	mov    rcx,QWORD PTR [rsp+0x30]
   14002bd1a:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002bd21:	mov    eax,ebx
   14002bd23:	jmp    0x14002bc1f
   14002bd28:	xor    r9d,r9d
   14002bd2b:	jmp    0x14002bbe0
   14002bd30:	rex push rbx
   14002bd32:	sub    rsp,0x20
   14002bd36:	mov    rax,QWORD PTR [rip+0x1d193]        # 0x140048ed0
   14002bd3d:	mov    rbx,rdx
   14002bd40:	cmp    QWORD PTR [rdx],rax
   14002bd43:	je     0x14002bd5b
   14002bd45:	mov    eax,DWORD PTR [rcx+0x3a8]
   14002bd4b:	test   DWORD PTR [rip+0x1ad4f],eax        # 0x140046aa0
   14002bd51:	jne    0x14002bd5b
   14002bd53:	call   0x14002e298
   14002bd58:	mov    QWORD PTR [rbx],rax
   14002bd5b:	add    rsp,0x20
   14002bd5f:	pop    rbx
   14002bd60:	ret    
   14002bd61:	int3   
   14002bd62:	int3   
   14002bd63:	int3   
   14002bd64:	rex push rbx
   14002bd66:	sub    rsp,0x20
   14002bd6a:	mov    rax,QWORD PTR [rip+0x1a977]        # 0x1400466e8
   14002bd71:	mov    rbx,rdx
   14002bd74:	cmp    QWORD PTR [rdx],rax
   14002bd77:	je     0x14002bd8f
   14002bd79:	mov    eax,DWORD PTR [rcx+0x3a8]
   14002bd7f:	test   DWORD PTR [rip+0x1ad1b],eax        # 0x140046aa0
   14002bd85:	jne    0x14002bd8f
   14002bd87:	call   0x14002ca68
   14002bd8c:	mov    QWORD PTR [rbx],rax
   14002bd8f:	add    rsp,0x20
   14002bd93:	pop    rbx
   14002bd94:	ret    
   14002bd95:	int3   
   14002bd96:	int3   
   14002bd97:	int3   
   14002bd98:	cmp    rcx,rdx
   14002bd9b:	jae    0x14002bda1
   14002bd9d:	or     eax,0xffffffff
   14002bda0:	ret    
   14002bda1:	xor    eax,eax
   14002bda3:	cmp    rcx,rdx
   14002bda6:	seta   al
   14002bda9:	ret    
   14002bdaa:	int3   
   14002bdab:	int3   
   14002bdac:	mov    QWORD PTR [rsp+0x8],rbx
   14002bdb1:	mov    QWORD PTR [rsp+0x10],rdx
   14002bdb6:	push   rbp
   14002bdb7:	push   rsi
   14002bdb8:	push   rdi
   14002bdb9:	push   r12
   14002bdbb:	push   r13
   14002bdbd:	push   r14
   14002bdbf:	push   r15
   14002bdc1:	mov    rbp,rsp
   14002bdc4:	sub    rsp,0x60
   14002bdc8:	xor    edi,edi
   14002bdca:	mov    rbx,rcx
   14002bdcd:	test   rdx,rdx
   14002bdd0:	jne    0x14002bde8
   14002bdd2:	call   0x14002a494
   14002bdd7:	lea    ebx,[rdi+0x16]
   14002bdda:	mov    DWORD PTR [rax],ebx
   14002bddc:	call   0x1400281ac
   14002bde1:	mov    eax,ebx
   14002bde3:	jmp    0x14002bf88
   14002bde8:	xorps  xmm0,xmm0
   14002bdeb:	mov    QWORD PTR [rdx],rdi
   14002bdee:	cmp    QWORD PTR [rcx],rdi
   14002bdf1:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14002bdf6:	mov    QWORD PTR [rbp-0x10],rdi
   14002bdfa:	je     0x14002be53
   14002bdfc:	mov    rcx,QWORD PTR [rbx]
   14002bdff:	lea    rdx,[rbp+0x50]
   14002be03:	mov    WORD PTR [rbp+0x50],0x3f2a
   14002be09:	mov    BYTE PTR [rbp+0x52],dil
   14002be0d:	call   0x14002f0d8
   14002be12:	mov    rcx,QWORD PTR [rbx]
   14002be15:	test   rax,rax
   14002be18:	jne    0x14002be2a
   14002be1a:	lea    r9,[rbp-0x20]
   14002be1e:	xor    r8d,r8d
   14002be21:	xor    edx,edx
   14002be23:	call   0x14002bfb8
   14002be28:	jmp    0x14002be36
   14002be2a:	lea    r8,[rbp-0x20]
   14002be2e:	mov    rdx,rax
   14002be31:	call   0x14002c0c8
   14002be36:	mov    r14d,eax
   14002be39:	test   eax,eax
   14002be3b:	jne    0x14002be46
   14002be3d:	add    rbx,0x8
   14002be41:	cmp    QWORD PTR [rbx],rdi
   14002be44:	jmp    0x14002bdfa
   14002be46:	mov    r12,QWORD PTR [rbp-0x18]
   14002be4a:	mov    rsi,QWORD PTR [rbp-0x20]
   14002be4e:	jmp    0x14002bf4c
   14002be53:	mov    rsi,QWORD PTR [rbp-0x20]
   14002be57:	mov    r9,rdi
   14002be5a:	mov    r12,QWORD PTR [rbp-0x18]
   14002be5e:	mov    rdx,rsi
   14002be61:	mov    rax,r12
   14002be64:	mov    QWORD PTR [rbp+0x50],rdi
   14002be68:	sub    rax,rsi
   14002be6b:	mov    r8,rdi
   14002be6e:	mov    r15,rax
   14002be71:	sar    r15,0x3
   14002be75:	inc    r15
   14002be78:	lea    rcx,[rax+0x7]
   14002be7c:	shr    rcx,0x3
   14002be80:	cmp    rsi,r12
   14002be83:	cmova  rcx,rdi
   14002be87:	or     r14,0xffffffffffffffff
   14002be8b:	test   rcx,rcx
   14002be8e:	je     0x14002beb5
   14002be90:	mov    r10,QWORD PTR [rdx]
   14002be93:	mov    rax,r14
   14002be96:	inc    rax
   14002be99:	cmp    BYTE PTR [r10+rax*1],dil
   14002be9d:	jne    0x14002be96
   14002be9f:	inc    r9
   14002bea2:	add    rdx,0x8
   14002bea6:	add    r9,rax
   14002bea9:	inc    r8
   14002beac:	cmp    r8,rcx
   14002beaf:	jne    0x14002be90
   14002beb1:	mov    QWORD PTR [rbp+0x50],r9
   14002beb5:	mov    r8d,0x1
   14002bebb:	mov    rdx,r9
   14002bebe:	mov    rcx,r15
   14002bec1:	call   0x140028f78
   14002bec6:	mov    rbx,rax
   14002bec9:	test   rax,rax
   14002becc:	je     0x14002bf45
   14002bece:	lea    rdx,[rax+r15*8]
   14002bed2:	mov    r15,rsi
   14002bed5:	mov    QWORD PTR [rbp-0x28],rdx
   14002bed9:	mov    rax,rdx
   14002bedc:	mov    QWORD PTR [rbp+0x58],rdx
   14002bee0:	cmp    rsi,r12
   14002bee3:	je     0x14002bf3b
   14002bee5:	mov    rcx,rbx
   14002bee8:	sub    rcx,rsi
   14002beeb:	mov    QWORD PTR [rbp-0x30],rcx
   14002beef:	mov    r8,QWORD PTR [r15]
   14002bef2:	mov    r13,r14
   14002bef5:	inc    r13
   14002bef8:	cmp    BYTE PTR [r8+r13*1],dil
   14002befc:	jne    0x14002bef5
   14002befe:	sub    rdx,rax
   14002bf01:	inc    r13
   14002bf04:	add    rdx,QWORD PTR [rbp+0x50]
   14002bf08:	mov    r9,r13
   14002bf0b:	mov    rcx,rax
   14002bf0e:	call   0x14002f004
   14002bf13:	test   eax,eax
   14002bf15:	jne    0x14002bfa0
   14002bf1b:	mov    rax,QWORD PTR [rbp+0x58]
   14002bf1f:	mov    rcx,QWORD PTR [rbp-0x30]
   14002bf23:	mov    rdx,QWORD PTR [rbp-0x28]
   14002bf27:	mov    QWORD PTR [rcx+r15*1],rax
   14002bf2b:	add    rax,r13
   14002bf2e:	add    r15,0x8
   14002bf32:	mov    QWORD PTR [rbp+0x58],rax
   14002bf36:	cmp    r15,r12
   14002bf39:	jne    0x14002beef
   14002bf3b:	mov    rax,QWORD PTR [rbp+0x48]
   14002bf3f:	mov    r14d,edi
   14002bf42:	mov    QWORD PTR [rax],rbx
   14002bf45:	xor    ecx,ecx
   14002bf47:	call   0x140007bd0
   14002bf4c:	mov    rbx,r12
   14002bf4f:	mov    r15,rsi
   14002bf52:	sub    rbx,rsi
   14002bf55:	add    rbx,0x7
   14002bf59:	shr    rbx,0x3
   14002bf5d:	cmp    rsi,r12
   14002bf60:	cmova  rbx,rdi
   14002bf64:	test   rbx,rbx
   14002bf67:	je     0x14002bf7d
   14002bf69:	mov    rcx,QWORD PTR [r15]
   14002bf6c:	call   0x140007bd0
   14002bf71:	inc    rdi
   14002bf74:	lea    r15,[r15+0x8]
   14002bf78:	cmp    rdi,rbx
   14002bf7b:	jne    0x14002bf69
   14002bf7d:	mov    rcx,rsi
   14002bf80:	call   0x140007bd0
   14002bf85:	mov    eax,r14d
   14002bf88:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002bf90:	add    rsp,0x60
   14002bf94:	pop    r15
   14002bf96:	pop    r14
   14002bf98:	pop    r13
   14002bf9a:	pop    r12
   14002bf9c:	pop    rdi
   14002bf9d:	pop    rsi
   14002bf9e:	pop    rbp
   14002bf9f:	ret    
   14002bfa0:	xor    r9d,r9d
   14002bfa3:	mov    QWORD PTR [rsp+0x20],rdi
   14002bfa8:	xor    r8d,r8d
   14002bfab:	xor    edx,edx
   14002bfad:	xor    ecx,ecx
   14002bfaf:	call   0x1400281cc
   14002bfb4:	int3   
   14002bfb5:	int3   
   14002bfb6:	int3   
   14002bfb7:	int3   
   14002bfb8:	mov    rax,rsp
   14002bfbb:	mov    QWORD PTR [rax+0x8],rbx
   14002bfbf:	mov    QWORD PTR [rax+0x10],rbp
   14002bfc3:	mov    QWORD PTR [rax+0x18],rsi
   14002bfc7:	mov    QWORD PTR [rax+0x20],rdi
   14002bfcb:	push   r12
   14002bfcd:	push   r14
   14002bfcf:	push   r15
   14002bfd1:	sub    rsp,0x30
   14002bfd5:	or     rax,0xffffffffffffffff
   14002bfd9:	mov    rsi,r9
   14002bfdc:	mov    rdi,rax
   14002bfdf:	mov    rbp,r8
   14002bfe2:	mov    r12,rdx
   14002bfe5:	mov    r15,rcx
   14002bfe8:	inc    rdi
   14002bfeb:	cmp    BYTE PTR [rcx+rdi*1],0x0
   14002bfef:	jne    0x14002bfe8
   14002bff1:	mov    edx,0x1
   14002bff6:	sub    rax,r8
   14002bff9:	add    rdi,rdx
   14002bffc:	cmp    rdi,rax
   14002bfff:	jbe    0x14002c023
   14002c001:	lea    eax,[rdx+0xb]
   14002c004:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c009:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c00e:	mov    rsi,QWORD PTR [rsp+0x60]
   14002c013:	mov    rdi,QWORD PTR [rsp+0x68]
   14002c018:	add    rsp,0x30
   14002c01c:	pop    r15
   14002c01e:	pop    r14
   14002c020:	pop    r12
   14002c022:	ret    
   14002c023:	lea    r14,[r8+0x1]
   14002c027:	add    r14,rdi
   14002c02a:	mov    rcx,r14
   14002c02d:	call   0x140007c20
   14002c032:	mov    rbx,rax
   14002c035:	test   rbp,rbp
   14002c038:	je     0x14002c04f
   14002c03a:	mov    r9,rbp
   14002c03d:	mov    r8,r12
   14002c040:	mov    rdx,r14
   14002c043:	mov    rcx,rax
   14002c046:	call   0x14002f004
   14002c04b:	test   eax,eax
   14002c04d:	jne    0x14002c09c
   14002c04f:	sub    r14,rbp
   14002c052:	lea    rcx,[rbx+rbp*1]
   14002c056:	mov    rdx,r14
   14002c059:	mov    r9,rdi
   14002c05c:	mov    r8,r15
   14002c05f:	call   0x14002f004
   14002c064:	test   eax,eax
   14002c066:	jne    0x14002c0b2
   14002c068:	mov    rcx,rsi
   14002c06b:	call   0x14002c274
   14002c070:	mov    edi,eax
   14002c072:	test   eax,eax
   14002c074:	je     0x14002c080
   14002c076:	mov    rcx,rbx
   14002c079:	call   0x140007bd0
   14002c07e:	jmp    0x14002c08e
   14002c080:	mov    rax,QWORD PTR [rsi+0x8]
   14002c084:	mov    QWORD PTR [rax],rbx
   14002c087:	add    QWORD PTR [rsi+0x8],0x8
   14002c08c:	xor    edi,edi
   14002c08e:	xor    ecx,ecx
   14002c090:	call   0x140007bd0
   14002c095:	mov    eax,edi
   14002c097:	jmp    0x14002c004
   14002c09c:	and    QWORD PTR [rsp+0x20],0x0
   14002c0a2:	xor    r9d,r9d
   14002c0a5:	xor    r8d,r8d
   14002c0a8:	xor    edx,edx
   14002c0aa:	xor    ecx,ecx
   14002c0ac:	call   0x1400281cc
   14002c0b1:	int3   
   14002c0b2:	and    QWORD PTR [rsp+0x20],0x0
   14002c0b8:	xor    r9d,r9d
   14002c0bb:	xor    r8d,r8d
   14002c0be:	xor    edx,edx
   14002c0c0:	xor    ecx,ecx
   14002c0c2:	call   0x1400281cc
   14002c0c7:	int3   
   14002c0c8:	mov    QWORD PTR [rsp+0x20],rbx
   14002c0cd:	push   rbp
   14002c0ce:	push   rsi
   14002c0cf:	push   rdi
   14002c0d0:	push   r14
   14002c0d2:	push   r15
   14002c0d4:	sub    rsp,0x180
   14002c0db:	mov    rax,QWORD PTR [rip+0x1a106]        # 0x1400461e8
   14002c0e2:	xor    rax,rsp
   14002c0e5:	mov    QWORD PTR [rsp+0x170],rax
   14002c0ed:	mov    r14,r8
   14002c0f0:	mov    rsi,rcx
   14002c0f3:	movabs rbx,0x200000000801
   14002c0fd:	cmp    rdx,rcx
   14002c100:	je     0x14002c124
   14002c102:	mov    al,BYTE PTR [rdx]
   14002c104:	sub    al,0x2f
   14002c106:	cmp    al,0x2d
   14002c108:	ja     0x14002c114
   14002c10a:	movsx  rax,al
   14002c10e:	bt     rbx,rax
   14002c112:	jb     0x14002c124
   14002c114:	mov    rcx,rsi
   14002c117:	call   0x14002f178
   14002c11c:	mov    rdx,rax
   14002c11f:	cmp    rax,rsi
   14002c122:	jne    0x14002c102
   14002c124:	mov    cl,BYTE PTR [rdx]
   14002c126:	cmp    cl,0x3a
   14002c129:	jne    0x14002c149
   14002c12b:	lea    rax,[rsi+0x1]
   14002c12f:	cmp    rdx,rax
   14002c132:	je     0x14002c149
   14002c134:	mov    r9,r14
   14002c137:	xor    r8d,r8d
   14002c13a:	xor    edx,edx
   14002c13c:	mov    rcx,rsi
   14002c13f:	call   0x14002bfb8
   14002c144:	jmp    0x14002c1ca
   14002c149:	sub    cl,0x2f
   14002c14c:	xor    edi,edi
   14002c14e:	cmp    cl,0x2d
   14002c151:	ja     0x14002c160
   14002c153:	movsx  rax,cl
   14002c157:	bt     rbx,rax
   14002c15b:	lea    eax,[rdi+0x1]
   14002c15e:	jb     0x14002c162
   14002c160:	mov    eax,edi
   14002c162:	sub    rdx,rsi
   14002c165:	lea    rcx,[rsp+0x30]
   14002c16a:	inc    rdx
   14002c16d:	mov    r8d,0x140
   14002c173:	neg    al
   14002c175:	sbb    r15,r15
   14002c178:	and    r15,rdx
   14002c17b:	xor    edx,edx
   14002c17d:	call   0x1400277b0
   14002c182:	xor    r9d,r9d
   14002c185:	mov    DWORD PTR [rsp+0x28],edi
   14002c189:	lea    r8,[rsp+0x30]
   14002c18e:	mov    QWORD PTR [rsp+0x20],rdi
   14002c193:	xor    edx,edx
   14002c195:	mov    rcx,rsi
   14002c198:	call   QWORD PTR [rip+0x5eca]        # 0x140032068
   14002c19e:	mov    rbx,rax
   14002c1a1:	cmp    rax,0xffffffffffffffff
   14002c1a5:	jne    0x14002c1f1
   14002c1a7:	mov    r9,r14
   14002c1aa:	xor    r8d,r8d
   14002c1ad:	xor    edx,edx
   14002c1af:	mov    rcx,rsi
   14002c1b2:	call   0x14002bfb8
   14002c1b7:	mov    edi,eax
   14002c1b9:	cmp    rbx,0xffffffffffffffff
   14002c1bd:	je     0x14002c1c8
   14002c1bf:	mov    rcx,rbx
   14002c1c2:	call   QWORD PTR [rip+0x5e38]        # 0x140032000
   14002c1c8:	mov    eax,edi
   14002c1ca:	mov    rcx,QWORD PTR [rsp+0x170]
   14002c1d2:	xor    rcx,rsp
   14002c1d5:	call   0x140030a30
   14002c1da:	mov    rbx,QWORD PTR [rsp+0x1c8]
   14002c1e2:	add    rsp,0x180
   14002c1e9:	pop    r15
   14002c1eb:	pop    r14
   14002c1ed:	pop    rdi
   14002c1ee:	pop    rsi
   14002c1ef:	pop    rbp
   14002c1f0:	ret    
   14002c1f1:	mov    rbp,QWORD PTR [r14+0x8]
   14002c1f5:	sub    rbp,QWORD PTR [r14]
   14002c1f8:	sar    rbp,0x3
   14002c1fc:	cmp    BYTE PTR [rsp+0x5c],0x2e
   14002c201:	jne    0x14002c216
   14002c203:	mov    al,BYTE PTR [rsp+0x5d]
   14002c207:	test   al,al
   14002c209:	je     0x14002c22d
   14002c20b:	cmp    al,0x2e
   14002c20d:	jne    0x14002c216
   14002c20f:	cmp    BYTE PTR [rsp+0x5e],dil
   14002c214:	je     0x14002c22d
   14002c216:	mov    r9,r14
   14002c219:	lea    rcx,[rsp+0x5c]
   14002c21e:	mov    r8,r15
   14002c221:	mov    rdx,rsi
   14002c224:	call   0x14002bfb8
   14002c229:	test   eax,eax
   14002c22b:	jne    0x14002c1b7
   14002c22d:	lea    rdx,[rsp+0x30]
   14002c232:	mov    rcx,rbx
   14002c235:	call   QWORD PTR [rip+0x5e25]        # 0x140032060
   14002c23b:	test   eax,eax
   14002c23d:	jne    0x14002c1fc
   14002c23f:	mov    rax,QWORD PTR [r14]
   14002c242:	mov    rdx,QWORD PTR [r14+0x8]
   14002c246:	sub    rdx,rax
   14002c249:	sar    rdx,0x3
   14002c24d:	cmp    rbp,rdx
   14002c250:	je     0x14002c1b9
   14002c256:	sub    rdx,rbp
   14002c259:	lea    rcx,[rax+rbp*8]
   14002c25d:	lea    r9,[rip+0xfffffffffffffb34]        # 0x14002bd98
   14002c264:	mov    r8d,0x8
   14002c26a:	call   0x14002ecd0
   14002c26f:	jmp    0x14002c1b9
   14002c274:	mov    QWORD PTR [rsp+0x8],rbx
   14002c279:	mov    QWORD PTR [rsp+0x10],rbp
   14002c27e:	mov    QWORD PTR [rsp+0x18],rsi
   14002c283:	push   rdi
   14002c284:	sub    rsp,0x20
   14002c288:	mov    rsi,QWORD PTR [rcx+0x10]
   14002c28c:	mov    rdi,rcx
   14002c28f:	cmp    QWORD PTR [rcx+0x8],rsi
   14002c293:	je     0x14002c29c
   14002c295:	xor    eax,eax
   14002c297:	jmp    0x14002c326
   14002c29c:	xor    ebx,ebx
   14002c29e:	cmp    QWORD PTR [rcx],rbx
   14002c2a1:	jne    0x14002c2d5
   14002c2a3:	lea    edx,[rbx+0x8]
   14002c2a6:	lea    ecx,[rbx+0x4]
   14002c2a9:	call   0x140007c20
   14002c2ae:	xor    ecx,ecx
   14002c2b0:	mov    QWORD PTR [rdi],rax
   14002c2b3:	call   0x140007bd0
   14002c2b8:	mov    rax,QWORD PTR [rdi]
   14002c2bb:	test   rax,rax
   14002c2be:	jne    0x14002c2c7
   14002c2c0:	mov    eax,0xc
   14002c2c5:	jmp    0x14002c326
   14002c2c7:	mov    QWORD PTR [rdi+0x8],rax
   14002c2cb:	add    rax,0x20
   14002c2cf:	mov    QWORD PTR [rdi+0x10],rax
   14002c2d3:	jmp    0x14002c295
   14002c2d5:	sub    rsi,QWORD PTR [rcx]
   14002c2d8:	movabs rax,0x7fffffffffffffff
   14002c2e2:	sar    rsi,0x3
   14002c2e6:	cmp    rsi,rax
   14002c2e9:	ja     0x14002c2c0
   14002c2eb:	mov    rcx,QWORD PTR [rcx]
   14002c2ee:	lea    rbp,[rsi+rsi*1]
   14002c2f2:	mov    rdx,rbp
   14002c2f5:	mov    r8d,0x8
   14002c2fb:	call   0x140007c70
   14002c300:	test   rax,rax
   14002c303:	jne    0x14002c30a
   14002c305:	lea    ebx,[rax+0xc]
   14002c308:	jmp    0x14002c31d
   14002c30a:	lea    rcx,[rax+rsi*8]
   14002c30e:	mov    QWORD PTR [rdi],rax
   14002c311:	mov    QWORD PTR [rdi+0x8],rcx
   14002c315:	lea    rcx,[rax+rbp*8]
   14002c319:	mov    QWORD PTR [rdi+0x10],rcx
   14002c31d:	xor    ecx,ecx
   14002c31f:	call   0x140007bd0
   14002c324:	mov    eax,ebx
   14002c326:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c32b:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c330:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c335:	add    rsp,0x20
   14002c339:	pop    rdi
   14002c33a:	ret    
   14002c33b:	int3   
   14002c33c:	jmp    0x14002bdac
   14002c341:	int3   
   14002c342:	int3   
   14002c343:	int3   
   14002c344:	mov    QWORD PTR [rsp+0x8],rbx
   14002c349:	mov    QWORD PTR [rsp+0x20],r9
   14002c34e:	push   rdi
   14002c34f:	sub    rsp,0x20
   14002c353:	mov    rbx,r9
   14002c356:	mov    rdi,r8
   14002c359:	mov    ecx,DWORD PTR [rdx]
   14002c35b:	call   0x14002af28
   14002c360:	nop
   14002c361:	mov    rcx,rdi
   14002c364:	call   0x14002c37c
   14002c369:	nop
   14002c36a:	mov    ecx,DWORD PTR [rbx]
   14002c36c:	call   0x14002af7c
   14002c371:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c376:	add    rsp,0x20
   14002c37a:	pop    rdi
   14002c37b:	ret    
   14002c37c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c381:	mov    QWORD PTR [rsp+0x10],rsi
   14002c386:	push   rdi
   14002c387:	sub    rsp,0x20
   14002c38b:	mov    rax,QWORD PTR [rcx]
   14002c38e:	mov    rbx,rcx
   14002c391:	mov    rdx,QWORD PTR [rax]
   14002c394:	mov    rax,QWORD PTR [rdx+0x88]
   14002c39b:	mov    edx,DWORD PTR [rax+0x4]
   14002c39e:	mov    DWORD PTR [rip+0x1cb34],edx        # 0x140048ed8
   14002c3a4:	mov    rax,QWORD PTR [rcx]
   14002c3a7:	mov    rdx,QWORD PTR [rax]
   14002c3aa:	mov    rax,QWORD PTR [rdx+0x88]
   14002c3b1:	mov    edx,DWORD PTR [rax+0x8]
   14002c3b4:	mov    DWORD PTR [rip+0x1cb22],edx        # 0x140048edc
   14002c3ba:	mov    rax,QWORD PTR [rcx]
   14002c3bd:	mov    rdx,QWORD PTR [rax]
   14002c3c0:	mov    rax,QWORD PTR [rdx+0x88]
   14002c3c7:	mov    rcx,QWORD PTR [rax+0x220]
   14002c3ce:	mov    QWORD PTR [rip+0x1cb1b],rcx        # 0x140048ef0
   14002c3d5:	mov    rax,QWORD PTR [rbx]
   14002c3d8:	mov    rcx,QWORD PTR [rax]
   14002c3db:	mov    rax,QWORD PTR [rcx+0x88]
   14002c3e2:	add    rax,0xc
   14002c3e6:	je     0x14002c3ff
   14002c3e8:	movsd  xmm0,QWORD PTR [rax]
   14002c3ec:	movsd  QWORD PTR [rip+0x1caec],xmm0        # 0x140048ee0
   14002c3f4:	mov    eax,DWORD PTR [rax+0x8]
   14002c3f7:	mov    DWORD PTR [rip+0x1caeb],eax        # 0x140048ee8
   14002c3fd:	jmp    0x14002c41e
   14002c3ff:	xor    eax,eax
   14002c401:	mov    QWORD PTR [rip+0x1cad8],rax        # 0x140048ee0
   14002c408:	mov    DWORD PTR [rip+0x1cada],eax        # 0x140048ee8
   14002c40e:	call   0x14002a494
   14002c413:	mov    DWORD PTR [rax],0x16
   14002c419:	call   0x1400281ac
   14002c41e:	mov    rax,QWORD PTR [rbx]
   14002c421:	mov    edi,0x2
   14002c426:	mov    rcx,QWORD PTR [rax]
   14002c429:	lea    esi,[rdi+0x7e]
   14002c42c:	mov    rax,QWORD PTR [rcx+0x88]
   14002c433:	lea    rcx,[rip+0x1a3b6]        # 0x1400467f0
   14002c43a:	add    rax,0x18
   14002c43e:	je     0x14002c492
   14002c440:	mov    edx,edi
   14002c442:	movups xmm0,XMMWORD PTR [rax]
   14002c445:	movups XMMWORD PTR [rcx],xmm0
   14002c448:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c44c:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c450:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002c454:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002c458:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002c45c:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002c460:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002c464:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002c468:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002c46c:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002c470:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002c474:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002c478:	add    rcx,rsi
   14002c47b:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002c47f:	add    rax,rsi
   14002c482:	movups XMMWORD PTR [rcx-0x10],xmm1
   14002c486:	sub    rdx,0x1
   14002c48a:	jne    0x14002c442
   14002c48c:	mov    al,BYTE PTR [rax]
   14002c48e:	mov    BYTE PTR [rcx],al
   14002c490:	jmp    0x14002c4af
   14002c492:	xor    edx,edx
   14002c494:	mov    r8d,0x101
   14002c49a:	call   0x1400277b0
   14002c49f:	call   0x14002a494
   14002c4a4:	mov    DWORD PTR [rax],0x16
   14002c4aa:	call   0x1400281ac
   14002c4af:	mov    rax,QWORD PTR [rbx]
   14002c4b2:	mov    rcx,QWORD PTR [rax]
   14002c4b5:	mov    rax,QWORD PTR [rcx+0x88]
   14002c4bc:	lea    rcx,[rip+0x1a43d]        # 0x140046900
   14002c4c3:	add    rax,0x119
   14002c4c9:	je     0x14002c517
   14002c4cb:	movups xmm0,XMMWORD PTR [rax]
   14002c4ce:	movups XMMWORD PTR [rcx],xmm0
   14002c4d1:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c4d5:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c4d9:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002c4dd:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002c4e1:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002c4e5:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002c4e9:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002c4ed:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002c4f1:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002c4f5:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002c4f9:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002c4fd:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002c501:	add    rcx,rsi
   14002c504:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002c508:	add    rax,rsi
   14002c50b:	movups XMMWORD PTR [rcx-0x10],xmm1
   14002c50f:	sub    rdi,0x1
   14002c513:	jne    0x14002c4cb
   14002c515:	jmp    0x14002c534
   14002c517:	xor    edx,edx
   14002c519:	mov    r8d,0x100
   14002c51f:	call   0x1400277b0
   14002c524:	call   0x14002a494
   14002c529:	mov    DWORD PTR [rax],0x16
   14002c52f:	call   0x1400281ac
   14002c534:	mov    rcx,QWORD PTR [rip+0x1a1ad]        # 0x1400466e8
   14002c53b:	or     eax,0xffffffff
   14002c53e:	lock xadd DWORD PTR [rcx],eax
   14002c542:	cmp    eax,0x1
   14002c545:	jne    0x14002c55f
   14002c547:	mov    rcx,QWORD PTR [rip+0x1a19a]        # 0x1400466e8
   14002c54e:	lea    rax,[rip+0x19f6b]        # 0x1400464c0
   14002c555:	cmp    rcx,rax
   14002c558:	je     0x14002c55f
   14002c55a:	call   0x140007bd0
   14002c55f:	mov    rax,QWORD PTR [rbx]
   14002c562:	mov    rcx,QWORD PTR [rax]
   14002c565:	mov    rax,QWORD PTR [rcx+0x88]
   14002c56c:	mov    QWORD PTR [rip+0x1a175],rax        # 0x1400466e8
   14002c573:	mov    rax,QWORD PTR [rbx]
   14002c576:	mov    rcx,QWORD PTR [rax]
   14002c579:	mov    rax,QWORD PTR [rcx+0x88]
   14002c580:	lock inc DWORD PTR [rax]
   14002c583:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c588:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c58d:	add    rsp,0x20
   14002c591:	pop    rdi
   14002c592:	ret    
   14002c593:	int3   
   14002c594:	rex push rbx
   14002c596:	sub    rsp,0x40
   14002c59a:	mov    ebx,ecx
   14002c59c:	xor    edx,edx
   14002c59e:	lea    rcx,[rsp+0x20]
   14002c5a3:	call   0x1400288e8
   14002c5a8:	and    DWORD PTR [rip+0x1c93d],0x0        # 0x140048eec
   14002c5af:	cmp    ebx,0xfffffffe
   14002c5b2:	jne    0x14002c5c6
   14002c5b4:	mov    DWORD PTR [rip+0x1c92e],0x1        # 0x140048eec
   14002c5be:	call   QWORD PTR [rip+0x5a8c]        # 0x140032050
   14002c5c4:	jmp    0x14002c5db
   14002c5c6:	cmp    ebx,0xfffffffd
   14002c5c9:	jne    0x14002c5df
   14002c5cb:	mov    DWORD PTR [rip+0x1c917],0x1        # 0x140048eec
   14002c5d5:	call   QWORD PTR [rip+0x5abd]        # 0x140032098
   14002c5db:	mov    ebx,eax
   14002c5dd:	jmp    0x14002c5f6
   14002c5df:	cmp    ebx,0xfffffffc
   14002c5e2:	jne    0x14002c5f6
   14002c5e4:	mov    rax,QWORD PTR [rsp+0x28]
   14002c5e9:	mov    DWORD PTR [rip+0x1c8f9],0x1        # 0x140048eec
   14002c5f3:	mov    ebx,DWORD PTR [rax+0xc]
   14002c5f6:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c5fb:	je     0x14002c609
   14002c5fd:	mov    rcx,QWORD PTR [rsp+0x20]
   14002c602:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002c609:	mov    eax,ebx
   14002c60b:	add    rsp,0x40
   14002c60f:	pop    rbx
   14002c610:	ret    
   14002c611:	int3   
   14002c612:	int3   
   14002c613:	int3   
   14002c614:	mov    QWORD PTR [rsp+0x8],rbx
   14002c619:	mov    QWORD PTR [rsp+0x10],rbp
   14002c61e:	mov    QWORD PTR [rsp+0x18],rsi
   14002c623:	push   rdi
   14002c624:	sub    rsp,0x20
   14002c628:	lea    rbx,[rcx+0x18]
   14002c62c:	mov    rsi,rcx
   14002c62f:	mov    ebp,0x101
   14002c634:	mov    rcx,rbx
   14002c637:	mov    r8d,ebp
   14002c63a:	xor    edx,edx
   14002c63c:	call   0x1400277b0
   14002c641:	xor    eax,eax
   14002c643:	lea    rdi,[rsi+0xc]
   14002c647:	mov    QWORD PTR [rsi+0x4],rax
   14002c64b:	mov    ecx,0x6
   14002c650:	mov    QWORD PTR [rsi+0x220],rax
   14002c657:	movzx  eax,ax
   14002c65a:	rep stos WORD PTR es:[rdi],ax
   14002c65d:	lea    rdi,[rip+0x19e5c]        # 0x1400464c0
   14002c664:	sub    rdi,rsi
   14002c667:	mov    al,BYTE PTR [rdi+rbx*1]
   14002c66a:	mov    BYTE PTR [rbx],al
   14002c66c:	inc    rbx
   14002c66f:	sub    rbp,0x1
   14002c673:	jne    0x14002c667
   14002c675:	lea    rcx,[rsi+0x119]
   14002c67c:	mov    edx,0x100
   14002c681:	mov    al,BYTE PTR [rcx+rdi*1]
   14002c684:	mov    BYTE PTR [rcx],al
   14002c686:	inc    rcx
   14002c689:	sub    rdx,0x1
   14002c68d:	jne    0x14002c681
   14002c68f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c694:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c699:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c69e:	add    rsp,0x20
   14002c6a2:	pop    rdi
   14002c6a3:	ret    
   14002c6a4:	mov    QWORD PTR [rsp+0x10],rbx
   14002c6a9:	mov    QWORD PTR [rsp+0x18],rdi
   14002c6ae:	push   rbp
   14002c6af:	lea    rbp,[rsp-0x680]
   14002c6b7:	sub    rsp,0x780
   14002c6be:	mov    rax,QWORD PTR [rip+0x19b23]        # 0x1400461e8
   14002c6c5:	xor    rax,rsp
   14002c6c8:	mov    QWORD PTR [rbp+0x670],rax
   14002c6cf:	mov    rdi,rcx
   14002c6d2:	lea    rdx,[rsp+0x50]
   14002c6d7:	mov    ecx,DWORD PTR [rcx+0x4]
   14002c6da:	call   QWORD PTR [rip+0x5968]        # 0x140032048
   14002c6e0:	mov    ebx,0x100
   14002c6e5:	test   eax,eax
   14002c6e7:	je     0x14002c823
   14002c6ed:	xor    eax,eax
   14002c6ef:	lea    rcx,[rsp+0x70]
   14002c6f4:	mov    BYTE PTR [rcx],al
   14002c6f6:	inc    eax
   14002c6f8:	inc    rcx
   14002c6fb:	cmp    eax,ebx
   14002c6fd:	jb     0x14002c6f4
   14002c6ff:	mov    al,BYTE PTR [rsp+0x56]
   14002c703:	lea    rdx,[rsp+0x56]
   14002c708:	mov    BYTE PTR [rsp+0x70],0x20
   14002c70d:	jmp    0x14002c731
   14002c70f:	movzx  r8d,BYTE PTR [rdx+0x1]
   14002c714:	movzx  ecx,al
   14002c717:	jmp    0x14002c726
   14002c719:	cmp    ecx,ebx
   14002c71b:	jae    0x14002c72b
   14002c71d:	mov    eax,ecx
   14002c71f:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14002c724:	inc    ecx
   14002c726:	cmp    ecx,r8d
   14002c729:	jbe    0x14002c719
   14002c72b:	add    rdx,0x2
   14002c72f:	mov    al,BYTE PTR [rdx]
   14002c731:	test   al,al
   14002c733:	jne    0x14002c70f
   14002c735:	mov    eax,DWORD PTR [rdi+0x4]
   14002c738:	lea    r8,[rsp+0x70]
   14002c73d:	and    DWORD PTR [rsp+0x30],0x0
   14002c742:	mov    r9d,ebx
   14002c745:	mov    DWORD PTR [rsp+0x28],eax
   14002c749:	mov    edx,0x1
   14002c74e:	lea    rax,[rbp+0x270]
   14002c755:	xor    ecx,ecx
   14002c757:	mov    QWORD PTR [rsp+0x20],rax
   14002c75c:	call   0x14002ddb0
   14002c761:	and    DWORD PTR [rsp+0x40],0x0
   14002c766:	lea    r9,[rsp+0x70]
   14002c76b:	mov    eax,DWORD PTR [rdi+0x4]
   14002c76e:	mov    r8d,ebx
   14002c771:	mov    rdx,QWORD PTR [rdi+0x220]
   14002c778:	xor    ecx,ecx
   14002c77a:	mov    DWORD PTR [rsp+0x38],eax
   14002c77e:	lea    rax,[rbp+0x70]
   14002c782:	mov    DWORD PTR [rsp+0x30],ebx
   14002c786:	mov    QWORD PTR [rsp+0x28],rax
   14002c78b:	mov    DWORD PTR [rsp+0x20],ebx
   14002c78f:	call   0x14002eb68
   14002c794:	and    DWORD PTR [rsp+0x40],0x0
   14002c799:	lea    r9,[rsp+0x70]
   14002c79e:	mov    eax,DWORD PTR [rdi+0x4]
   14002c7a1:	mov    r8d,0x200
   14002c7a7:	mov    rdx,QWORD PTR [rdi+0x220]
   14002c7ae:	xor    ecx,ecx
   14002c7b0:	mov    DWORD PTR [rsp+0x38],eax
   14002c7b4:	lea    rax,[rbp+0x170]
   14002c7bb:	mov    DWORD PTR [rsp+0x30],ebx
   14002c7bf:	mov    QWORD PTR [rsp+0x28],rax
   14002c7c4:	mov    DWORD PTR [rsp+0x20],ebx
   14002c7c8:	call   0x14002eb68
   14002c7cd:	lea    r8,[rbp+0x70]
   14002c7d1:	sub    r8,rdi
   14002c7d4:	lea    r9,[rbp+0x170]
   14002c7db:	sub    r9,rdi
   14002c7de:	lea    rdx,[rbp+0x270]
   14002c7e5:	lea    rcx,[rdi+0x19]
   14002c7e9:	test   BYTE PTR [rdx],0x1
   14002c7ec:	je     0x14002c7f8
   14002c7ee:	or     BYTE PTR [rcx],0x10
   14002c7f1:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14002c7f6:	jmp    0x14002c805
   14002c7f8:	test   BYTE PTR [rdx],0x2
   14002c7fb:	je     0x14002c80d
   14002c7fd:	or     BYTE PTR [rcx],0x20
   14002c800:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14002c805:	mov    BYTE PTR [rcx+0x100],al
   14002c80b:	jmp    0x14002c814
   14002c80d:	mov    BYTE PTR [rcx+0x100],0x0
   14002c814:	inc    rcx
   14002c817:	add    rdx,0x2
   14002c81b:	sub    rbx,0x1
   14002c81f:	jne    0x14002c7e9
   14002c821:	jmp    0x14002c862
   14002c823:	xor    edx,edx
   14002c825:	lea    rcx,[rdi+0x19]
   14002c829:	lea    r8d,[rdx-0x61]
   14002c82d:	lea    eax,[r8+0x20]
   14002c831:	cmp    eax,0x19
   14002c834:	ja     0x14002c83e
   14002c836:	or     BYTE PTR [rcx],0x10
   14002c839:	lea    eax,[rdx+0x20]
   14002c83c:	jmp    0x14002c84a
   14002c83e:	cmp    r8d,0x19
   14002c842:	ja     0x14002c852
   14002c844:	or     BYTE PTR [rcx],0x20
   14002c847:	lea    eax,[rdx-0x20]
   14002c84a:	mov    BYTE PTR [rcx+0x100],al
   14002c850:	jmp    0x14002c859
   14002c852:	mov    BYTE PTR [rcx+0x100],0x0
   14002c859:	inc    edx
   14002c85b:	inc    rcx
   14002c85e:	cmp    edx,ebx
   14002c860:	jb     0x14002c829
   14002c862:	mov    rcx,QWORD PTR [rbp+0x670]
   14002c869:	xor    rcx,rsp
   14002c86c:	call   0x140030a30
   14002c871:	lea    r11,[rsp+0x780]
   14002c879:	mov    rbx,QWORD PTR [r11+0x18]
   14002c87d:	mov    rdi,QWORD PTR [r11+0x20]
   14002c881:	mov    rsp,r11
   14002c884:	pop    rbp
   14002c885:	ret    
   14002c886:	int3   
   14002c887:	int3   
   14002c888:	mov    QWORD PTR [rsp+0x8],rbx
   14002c88d:	push   rbp
   14002c88e:	push   rsi
   14002c88f:	push   rdi
   14002c890:	mov    rbp,rsp
   14002c893:	sub    rsp,0x40
   14002c897:	mov    sil,dl
   14002c89a:	mov    ebx,ecx
   14002c89c:	call   0x14002a248
   14002c8a1:	mov    QWORD PTR [rbp-0x18],rax
   14002c8a5:	call   0x14002ca68
   14002c8aa:	mov    ecx,ebx
   14002c8ac:	call   0x14002c594
   14002c8b1:	mov    rcx,QWORD PTR [rbp-0x18]
   14002c8b5:	mov    edi,eax
   14002c8b7:	mov    r8,QWORD PTR [rcx+0x88]
   14002c8be:	cmp    eax,DWORD PTR [r8+0x4]
   14002c8c2:	jne    0x14002c8cb
   14002c8c4:	xor    eax,eax
   14002c8c6:	jmp    0x14002c983
   14002c8cb:	mov    ecx,0x228
   14002c8d0:	call   0x140007bf0
   14002c8d5:	mov    rbx,rax
   14002c8d8:	test   rax,rax
   14002c8db:	je     0x14002c976
   14002c8e1:	mov    rax,QWORD PTR [rbp-0x18]
   14002c8e5:	mov    edx,0x4
   14002c8ea:	mov    rcx,rbx
   14002c8ed:	mov    rax,QWORD PTR [rax+0x88]
   14002c8f4:	lea    r8d,[rdx+0x7c]
   14002c8f8:	movups xmm0,XMMWORD PTR [rax]
   14002c8fb:	movups XMMWORD PTR [rcx],xmm0
   14002c8fe:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c902:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c906:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002c90a:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002c90e:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002c912:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002c916:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002c91a:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002c91e:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002c922:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002c926:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002c92a:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002c92e:	add    rcx,r8
   14002c931:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002c935:	add    rax,r8
   14002c938:	movups XMMWORD PTR [rcx-0x10],xmm1
   14002c93c:	sub    rdx,0x1
   14002c940:	jne    0x14002c8f8
   14002c942:	movups xmm0,XMMWORD PTR [rax]
   14002c945:	movups XMMWORD PTR [rcx],xmm0
   14002c948:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c94c:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c950:	mov    rax,QWORD PTR [rax+0x20]
   14002c954:	mov    QWORD PTR [rcx+0x20],rax
   14002c958:	mov    ecx,edi
   14002c95a:	and    DWORD PTR [rbx],edx
   14002c95c:	mov    rdx,rbx
   14002c95f:	call   0x14002cb28
   14002c964:	mov    edi,eax
   14002c966:	cmp    eax,0xffffffff
   14002c969:	jne    0x14002c990
   14002c96b:	call   0x14002a494
   14002c970:	mov    DWORD PTR [rax],0x16
   14002c976:	or     edi,0xffffffff
   14002c979:	mov    rcx,rbx
   14002c97c:	call   0x140007bd0
   14002c981:	mov    eax,edi
   14002c983:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c988:	add    rsp,0x40
   14002c98c:	pop    rdi
   14002c98d:	pop    rsi
   14002c98e:	pop    rbp
   14002c98f:	ret    
   14002c990:	test   sil,sil
   14002c993:	jne    0x14002c99a
   14002c995:	call   0x140029c9c
   14002c99a:	mov    rax,QWORD PTR [rbp-0x18]
   14002c99e:	mov    rcx,QWORD PTR [rax+0x88]
   14002c9a5:	or     eax,0xffffffff
   14002c9a8:	lock xadd DWORD PTR [rcx],eax
   14002c9ac:	cmp    eax,0x1
   14002c9af:	jne    0x14002c9cd
   14002c9b1:	mov    rax,QWORD PTR [rbp-0x18]
   14002c9b5:	mov    rcx,QWORD PTR [rax+0x88]
   14002c9bc:	lea    rax,[rip+0x19afd]        # 0x1400464c0
   14002c9c3:	cmp    rcx,rax
   14002c9c6:	je     0x14002c9cd
   14002c9c8:	call   0x140007bd0
   14002c9cd:	mov    DWORD PTR [rbx],0x1
   14002c9d3:	mov    rcx,rbx
   14002c9d6:	mov    rax,QWORD PTR [rbp-0x18]
   14002c9da:	xor    ebx,ebx
   14002c9dc:	mov    QWORD PTR [rax+0x88],rcx
   14002c9e3:	mov    rax,QWORD PTR [rbp-0x18]
   14002c9e7:	test   BYTE PTR [rax+0x3a8],0x2
   14002c9ee:	jne    0x14002c979
   14002c9f0:	test   BYTE PTR [rip+0x1a0a9],0x1        # 0x140046aa0
   14002c9f7:	jne    0x14002c979
   14002c9f9:	lea    rax,[rbp-0x18]
   14002c9fd:	mov    QWORD PTR [rbp-0x10],rax
   14002ca01:	lea    r9,[rbp+0x38]
   14002ca05:	lea    eax,[rbx+0x5]
   14002ca08:	lea    r8,[rbp-0x10]
   14002ca0c:	mov    DWORD PTR [rbp+0x38],eax
   14002ca0f:	lea    rdx,[rbp-0x20]
   14002ca13:	mov    DWORD PTR [rbp-0x20],eax
   14002ca16:	lea    rcx,[rbp+0x30]
   14002ca1a:	call   0x14002c344
   14002ca1f:	mov    rax,QWORD PTR [rip+0x19a8a]        # 0x1400464b0
   14002ca26:	test   sil,sil
   14002ca29:	cmovne rax,QWORD PTR [rip+0x19cb7]        # 0x1400466e8
   14002ca31:	mov    QWORD PTR [rip+0x19a78],rax        # 0x1400464b0
   14002ca38:	jmp    0x14002c979
   14002ca3d:	int3   
   14002ca3e:	int3   
   14002ca3f:	int3   
   14002ca40:	sub    rsp,0x28
   14002ca44:	cmp    BYTE PTR [rip+0x1c4ad],0x0        # 0x140048ef8
   14002ca4b:	jne    0x14002ca60
   14002ca4d:	mov    dl,0x1
   14002ca4f:	mov    ecx,0xfffffffd
   14002ca54:	call   0x14002c888
   14002ca59:	mov    BYTE PTR [rip+0x1c498],0x1        # 0x140048ef8
   14002ca60:	mov    al,0x1
   14002ca62:	add    rsp,0x28
   14002ca66:	ret    
   14002ca67:	int3   
   14002ca68:	mov    QWORD PTR [rsp+0x10],rbx
   14002ca6d:	push   rdi
   14002ca6e:	sub    rsp,0x20
   14002ca72:	call   0x14002a248
   14002ca77:	mov    rdi,rax
   14002ca7a:	mov    ecx,DWORD PTR [rip+0x1a020]        # 0x140046aa0
   14002ca80:	test   DWORD PTR [rax+0x3a8],ecx
   14002ca86:	je     0x14002ca9b
   14002ca88:	cmp    QWORD PTR [rax+0x90],0x0
   14002ca90:	je     0x14002ca9b
   14002ca92:	mov    rbx,QWORD PTR [rax+0x88]
   14002ca99:	jmp    0x14002cb0e
   14002ca9b:	mov    ecx,0x5
   14002caa0:	call   0x14002af28
   14002caa5:	nop
   14002caa6:	mov    rbx,QWORD PTR [rdi+0x88]
   14002caad:	mov    QWORD PTR [rsp+0x30],rbx
   14002cab2:	cmp    rbx,QWORD PTR [rip+0x19c2f]        # 0x1400466e8
   14002cab9:	je     0x14002cb04
   14002cabb:	test   rbx,rbx
   14002cabe:	je     0x14002cae2
   14002cac0:	or     eax,0xffffffff
   14002cac3:	lock xadd DWORD PTR [rbx],eax
   14002cac7:	cmp    eax,0x1
   14002caca:	jne    0x14002cae2
   14002cacc:	lea    rax,[rip+0x199ed]        # 0x1400464c0
   14002cad3:	mov    rcx,QWORD PTR [rsp+0x30]
   14002cad8:	cmp    rcx,rax
   14002cadb:	je     0x14002cae2
   14002cadd:	call   0x140007bd0
   14002cae2:	mov    rax,QWORD PTR [rip+0x19bff]        # 0x1400466e8
   14002cae9:	mov    QWORD PTR [rdi+0x88],rax
   14002caf0:	mov    rax,QWORD PTR [rip+0x19bf1]        # 0x1400466e8
   14002caf7:	mov    QWORD PTR [rsp+0x30],rax
   14002cafc:	lock inc DWORD PTR [rax]
   14002caff:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cb04:	mov    ecx,0x5
   14002cb09:	call   0x14002af7c
   14002cb0e:	test   rbx,rbx
   14002cb11:	jne    0x14002cb19
   14002cb13:	call   0x140029db8
   14002cb18:	int3   
   14002cb19:	mov    rax,rbx
   14002cb1c:	mov    rbx,QWORD PTR [rsp+0x38]
   14002cb21:	add    rsp,0x20
   14002cb25:	pop    rdi
   14002cb26:	ret    
   14002cb27:	int3   
   14002cb28:	mov    QWORD PTR [rsp+0x18],rbx
   14002cb2d:	mov    QWORD PTR [rsp+0x20],rbp
   14002cb32:	push   rsi
   14002cb33:	push   rdi
   14002cb34:	push   r12
   14002cb36:	push   r14
   14002cb38:	push   r15
   14002cb3a:	sub    rsp,0x40
   14002cb3e:	mov    rax,QWORD PTR [rip+0x196a3]        # 0x1400461e8
   14002cb45:	xor    rax,rsp
   14002cb48:	mov    QWORD PTR [rsp+0x38],rax
   14002cb4d:	mov    rbx,rdx
   14002cb50:	call   0x14002c594
   14002cb55:	xor    esi,esi
   14002cb57:	mov    edi,eax
   14002cb59:	test   eax,eax
   14002cb5b:	jne    0x14002cb6a
   14002cb5d:	mov    rcx,rbx
   14002cb60:	call   0x14002c614
   14002cb65:	jmp    0x14002cda7
   14002cb6a:	lea    r12,[rip+0x19b8f]        # 0x140046700
   14002cb71:	mov    ebp,esi
   14002cb73:	mov    rax,r12
   14002cb76:	mov    r15d,0x1
   14002cb7c:	cmp    DWORD PTR [rax],edi
   14002cb7e:	je     0x14002ccb4
   14002cb84:	add    ebp,r15d
   14002cb87:	add    rax,0x30
   14002cb8b:	cmp    ebp,0x5
   14002cb8e:	jb     0x14002cb7c
   14002cb90:	lea    eax,[rdi-0xfde8]
   14002cb96:	cmp    eax,r15d
   14002cb99:	jbe    0x14002ccac
   14002cb9f:	movzx  ecx,di
   14002cba2:	call   QWORD PTR [rip+0x54b0]        # 0x140032058
   14002cba8:	test   eax,eax
   14002cbaa:	je     0x14002ccac
   14002cbb0:	lea    rdx,[rsp+0x20]
   14002cbb5:	mov    ecx,edi
   14002cbb7:	call   QWORD PTR [rip+0x548b]        # 0x140032048
   14002cbbd:	test   eax,eax
   14002cbbf:	je     0x14002cca0
   14002cbc5:	lea    rcx,[rbx+0x18]
   14002cbc9:	xor    edx,edx
   14002cbcb:	mov    r8d,0x101
   14002cbd1:	call   0x1400277b0
   14002cbd6:	mov    DWORD PTR [rbx+0x4],edi
   14002cbd9:	mov    QWORD PTR [rbx+0x220],rsi
   14002cbe0:	cmp    DWORD PTR [rsp+0x20],r15d
   14002cbe5:	jbe    0x14002cc89
   14002cbeb:	lea    rcx,[rsp+0x26]
   14002cbf0:	cmp    BYTE PTR [rsp+0x26],sil
   14002cbf5:	je     0x14002cc27
   14002cbf7:	cmp    BYTE PTR [rcx+0x1],sil
   14002cbfb:	je     0x14002cc27
   14002cbfd:	movzx  eax,BYTE PTR [rcx+0x1]
   14002cc01:	movzx  edx,BYTE PTR [rcx]
   14002cc04:	cmp    edx,eax
   14002cc06:	ja     0x14002cc1e
   14002cc08:	sub    eax,edx
   14002cc0a:	lea    edi,[rdx+0x1]
   14002cc0d:	lea    edx,[r15+rax*1]
   14002cc11:	or     BYTE PTR [rdi+rbx*1+0x18],0x4
   14002cc16:	add    edi,r15d
   14002cc19:	sub    rdx,r15
   14002cc1c:	jne    0x14002cc11
   14002cc1e:	add    rcx,0x2
   14002cc22:	cmp    BYTE PTR [rcx],sil
   14002cc25:	jne    0x14002cbf7
   14002cc27:	lea    rax,[rbx+0x1a]
   14002cc2b:	mov    ecx,0xfe
   14002cc30:	or     BYTE PTR [rax],0x8
   14002cc33:	add    rax,r15
   14002cc36:	sub    rcx,r15
   14002cc39:	jne    0x14002cc30
   14002cc3b:	mov    ecx,DWORD PTR [rbx+0x4]
   14002cc3e:	sub    ecx,0x3a4
   14002cc44:	je     0x14002cc75
   14002cc46:	sub    ecx,0x4
   14002cc49:	je     0x14002cc6c
   14002cc4b:	sub    ecx,0xd
   14002cc4e:	je     0x14002cc63
   14002cc50:	cmp    ecx,r15d
   14002cc53:	je     0x14002cc5a
   14002cc55:	mov    rax,rsi
   14002cc58:	jmp    0x14002cc7c
   14002cc5a:	mov    rax,QWORD PTR [rip+0xd0cf]        # 0x140039d30
   14002cc61:	jmp    0x14002cc7c
   14002cc63:	mov    rax,QWORD PTR [rip+0xd0be]        # 0x140039d28
   14002cc6a:	jmp    0x14002cc7c
   14002cc6c:	mov    rax,QWORD PTR [rip+0xd0ad]        # 0x140039d20
   14002cc73:	jmp    0x14002cc7c
   14002cc75:	mov    rax,QWORD PTR [rip+0xd09c]        # 0x140039d18
   14002cc7c:	mov    QWORD PTR [rbx+0x220],rax
   14002cc83:	mov    DWORD PTR [rbx+0x8],r15d
   14002cc87:	jmp    0x14002cc8c
   14002cc89:	mov    DWORD PTR [rbx+0x8],esi
   14002cc8c:	lea    rdi,[rbx+0xc]
   14002cc90:	movzx  eax,si
   14002cc93:	mov    ecx,0x6
   14002cc98:	rep stos WORD PTR es:[rdi],ax
   14002cc9b:	jmp    0x14002cd9f
   14002cca0:	cmp    DWORD PTR [rip+0x1c246],esi        # 0x140048eec
   14002cca6:	jne    0x14002cb5d
   14002ccac:	or     eax,0xffffffff
   14002ccaf:	jmp    0x14002cda9
   14002ccb4:	lea    rcx,[rbx+0x18]
   14002ccb8:	xor    edx,edx
   14002ccba:	mov    r8d,0x101
   14002ccc0:	call   0x1400277b0
   14002ccc5:	mov    eax,ebp
   14002ccc7:	lea    r9,[r12+0x10]
   14002cccc:	lea    r14,[rip+0x19a1d]        # 0x1400466f0
   14002ccd3:	mov    ebp,0x4
   14002ccd8:	lea    r11,[rax+rax*2]
   14002ccdc:	shl    r11,0x4
   14002cce0:	add    r9,r11
   14002cce3:	mov    rdx,r9
   14002cce6:	cmp    BYTE PTR [r9],sil
   14002cce9:	je     0x14002cd2b
   14002cceb:	cmp    BYTE PTR [rdx+0x1],sil
   14002ccef:	je     0x14002cd2b
   14002ccf1:	movzx  r8d,BYTE PTR [rdx]
   14002ccf5:	movzx  eax,BYTE PTR [rdx+0x1]
   14002ccf9:	cmp    r8d,eax
   14002ccfc:	ja     0x14002cd22
   14002ccfe:	lea    r10d,[r8+0x1]
   14002cd02:	cmp    r10d,0x101
   14002cd09:	jae    0x14002cd22
   14002cd0b:	mov    al,BYTE PTR [r14]
   14002cd0e:	add    r8d,r15d
   14002cd11:	or     BYTE PTR [r10+rbx*1+0x18],al
   14002cd16:	add    r10d,r15d
   14002cd19:	movzx  eax,BYTE PTR [rdx+0x1]
   14002cd1d:	cmp    r8d,eax
   14002cd20:	jbe    0x14002cd02
   14002cd22:	add    rdx,0x2
   14002cd26:	cmp    BYTE PTR [rdx],sil
   14002cd29:	jne    0x14002cceb
   14002cd2b:	add    r9,0x8
   14002cd2f:	add    r14,r15
   14002cd32:	sub    rbp,r15
   14002cd35:	jne    0x14002cce3
   14002cd37:	mov    DWORD PTR [rbx+0x4],edi
   14002cd3a:	mov    DWORD PTR [rbx+0x8],r15d
   14002cd3e:	sub    edi,0x3a4
   14002cd44:	je     0x14002cd70
   14002cd46:	sub    edi,0x4
   14002cd49:	je     0x14002cd67
   14002cd4b:	sub    edi,0xd
   14002cd4e:	je     0x14002cd5e
   14002cd50:	cmp    edi,r15d
   14002cd53:	jne    0x14002cd77
   14002cd55:	mov    rsi,QWORD PTR [rip+0xcfd4]        # 0x140039d30
   14002cd5c:	jmp    0x14002cd77
   14002cd5e:	mov    rsi,QWORD PTR [rip+0xcfc3]        # 0x140039d28
   14002cd65:	jmp    0x14002cd77
   14002cd67:	mov    rsi,QWORD PTR [rip+0xcfb2]        # 0x140039d20
   14002cd6e:	jmp    0x14002cd77
   14002cd70:	mov    rsi,QWORD PTR [rip+0xcfa1]        # 0x140039d18
   14002cd77:	sub    r11,rbx
   14002cd7a:	mov    QWORD PTR [rbx+0x220],rsi
   14002cd81:	lea    rcx,[rbx+0xc]
   14002cd85:	mov    edx,0x6
   14002cd8a:	lea    rdi,[r11+r12*1]
   14002cd8e:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14002cd93:	mov    WORD PTR [rcx],ax
   14002cd96:	lea    rcx,[rcx+0x2]
   14002cd9a:	sub    rdx,r15
   14002cd9d:	jne    0x14002cd8e
   14002cd9f:	mov    rcx,rbx
   14002cda2:	call   0x14002c6a4
   14002cda7:	xor    eax,eax
   14002cda9:	mov    rcx,QWORD PTR [rsp+0x38]
   14002cdae:	xor    rcx,rsp
   14002cdb1:	call   0x140030a30
   14002cdb6:	lea    r11,[rsp+0x40]
   14002cdbb:	mov    rbx,QWORD PTR [r11+0x40]
   14002cdbf:	mov    rbp,QWORD PTR [r11+0x48]
   14002cdc3:	mov    rsp,r11
   14002cdc6:	pop    r15
   14002cdc8:	pop    r14
   14002cdca:	pop    r12
   14002cdcc:	pop    rdi
   14002cdcd:	pop    rsi
   14002cdce:	ret    
   14002cdcf:	int3   
   14002cdd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cdd5:	mov    QWORD PTR [rsp+0x10],rsi
   14002cdda:	push   rdi
   14002cddb:	sub    rsp,0x40
   14002cddf:	mov    ebx,edx
   14002cde1:	mov    edi,r9d
   14002cde4:	mov    rdx,rcx
   14002cde7:	mov    esi,r8d
   14002cdea:	lea    rcx,[rsp+0x20]
   14002cdef:	call   0x1400288e8
   14002cdf4:	mov    rax,QWORD PTR [rsp+0x30]
   14002cdf9:	movzx  edx,bl
   14002cdfc:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14002ce01:	jne    0x14002ce1d
   14002ce03:	test   esi,esi
   14002ce05:	je     0x14002ce17
   14002ce07:	mov    rax,QWORD PTR [rsp+0x28]
   14002ce0c:	mov    rcx,QWORD PTR [rax]
   14002ce0f:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002ce13:	and    eax,esi
   14002ce15:	jmp    0x14002ce19
   14002ce17:	xor    eax,eax
   14002ce19:	test   eax,eax
   14002ce1b:	je     0x14002ce22
   14002ce1d:	mov    eax,0x1
   14002ce22:	cmp    BYTE PTR [rsp+0x38],0x0
   14002ce27:	je     0x14002ce35
   14002ce29:	mov    rcx,QWORD PTR [rsp+0x20]
   14002ce2e:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002ce35:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ce3a:	mov    rsi,QWORD PTR [rsp+0x58]
   14002ce3f:	add    rsp,0x40
   14002ce43:	pop    rdi
   14002ce44:	ret    
   14002ce45:	int3   
   14002ce46:	int3   
   14002ce47:	int3   
   14002ce48:	mov    edx,ecx
   14002ce4a:	mov    r9d,0x4
   14002ce50:	xor    ecx,ecx
   14002ce52:	xor    r8d,r8d
   14002ce55:	jmp    0x14002cdd0
   14002ce5a:	int3   
   14002ce5b:	int3   
   14002ce5c:	mov    rax,rsp
   14002ce5f:	mov    QWORD PTR [rax+0x8],rbx
   14002ce63:	mov    QWORD PTR [rax+0x10],rbp
   14002ce67:	mov    QWORD PTR [rax+0x18],rsi
   14002ce6b:	mov    QWORD PTR [rax+0x20],rdi
   14002ce6f:	push   r14
   14002ce71:	sub    rsp,0x40
   14002ce75:	call   QWORD PTR [rip+0x51c5]        # 0x140032040
   14002ce7b:	xor    r14d,r14d
   14002ce7e:	mov    rbx,rax
   14002ce81:	test   rax,rax
   14002ce84:	je     0x14002cf30
   14002ce8a:	mov    rsi,rax
   14002ce8d:	cmp    WORD PTR [rax],r14w
   14002ce91:	je     0x14002ceaf
   14002ce93:	or     rax,0xffffffffffffffff
   14002ce97:	inc    rax
   14002ce9a:	cmp    WORD PTR [rsi+rax*2],r14w
   14002ce9f:	jne    0x14002ce97
   14002cea1:	lea    rsi,[rsi+rax*2]
   14002cea5:	add    rsi,0x2
   14002cea9:	cmp    WORD PTR [rsi],r14w
   14002cead:	jne    0x14002ce93
   14002ceaf:	mov    QWORD PTR [rsp+0x38],r14
   14002ceb4:	sub    rsi,rbx
   14002ceb7:	mov    QWORD PTR [rsp+0x30],r14
   14002cebc:	add    rsi,0x2
   14002cec0:	sar    rsi,1
   14002cec3:	mov    r8,rbx
   14002cec6:	mov    r9d,esi
   14002cec9:	mov    DWORD PTR [rsp+0x28],r14d
   14002cece:	xor    edx,edx
   14002ced0:	mov    QWORD PTR [rsp+0x20],r14
   14002ced5:	xor    ecx,ecx
   14002ced7:	call   QWORD PTR [rip+0x51db]        # 0x1400320b8
   14002cedd:	movsxd rbp,eax
   14002cee0:	test   eax,eax
   14002cee2:	je     0x14002cf30
   14002cee4:	mov    rcx,rbp
   14002cee7:	call   0x140007bf0
   14002ceec:	mov    rdi,rax
   14002ceef:	test   rax,rax
   14002cef2:	je     0x14002cf23
   14002cef4:	mov    QWORD PTR [rsp+0x38],r14
   14002cef9:	mov    r9d,esi
   14002cefc:	mov    QWORD PTR [rsp+0x30],r14
   14002cf01:	mov    r8,rbx
   14002cf04:	mov    DWORD PTR [rsp+0x28],ebp
   14002cf08:	xor    edx,edx
   14002cf0a:	xor    ecx,ecx
   14002cf0c:	mov    QWORD PTR [rsp+0x20],rax
   14002cf11:	call   QWORD PTR [rip+0x51a1]        # 0x1400320b8
   14002cf17:	test   eax,eax
   14002cf19:	je     0x14002cf23
   14002cf1b:	mov    rsi,rdi
   14002cf1e:	mov    rdi,r14
   14002cf21:	jmp    0x14002cf26
   14002cf23:	mov    rsi,r14
   14002cf26:	mov    rcx,rdi
   14002cf29:	call   0x140007bd0
   14002cf2e:	jmp    0x14002cf33
   14002cf30:	mov    rsi,r14
   14002cf33:	test   rbx,rbx
   14002cf36:	je     0x14002cf41
   14002cf38:	mov    rcx,rbx
   14002cf3b:	call   QWORD PTR [rip+0x50f7]        # 0x140032038
   14002cf41:	mov    rbx,QWORD PTR [rsp+0x50]
   14002cf46:	mov    rax,rsi
   14002cf49:	mov    rsi,QWORD PTR [rsp+0x60]
   14002cf4e:	mov    rbp,QWORD PTR [rsp+0x58]
   14002cf53:	mov    rdi,QWORD PTR [rsp+0x68]
   14002cf58:	add    rsp,0x40
   14002cf5c:	pop    r14
   14002cf5e:	ret    
   14002cf5f:	int3   
   14002cf60:	mov    QWORD PTR [rsp+0x18],rbx
   14002cf65:	mov    DWORD PTR [rsp+0x10],edx
   14002cf69:	push   rbp
   14002cf6a:	push   rsi
   14002cf6b:	push   rdi
   14002cf6c:	push   r12
   14002cf6e:	push   r13
   14002cf70:	push   r14
   14002cf72:	push   r15
   14002cf74:	sub    rsp,0x30
   14002cf78:	xor    esi,esi
   14002cf7a:	mov    ebx,edx
   14002cf7c:	mov    r15,rcx
   14002cf7f:	test   rcx,rcx
   14002cf82:	jne    0x14002cf98
   14002cf84:	call   0x14002a494
   14002cf89:	mov    DWORD PTR [rax],0x16
   14002cf8f:	or     rax,0xffffffffffffffff
   14002cf93:	jmp    0x14002d02c
   14002cf98:	mov    edx,0x3d
   14002cf9d:	mov    rdi,rcx
   14002cfa0:	call   0x140027a28
   14002cfa5:	mov    r13,rax
   14002cfa8:	test   rax,rax
   14002cfab:	je     0x14002d00b
   14002cfad:	cmp    rax,r15
   14002cfb0:	je     0x14002d00b
   14002cfb2:	cmp    BYTE PTR [rax+0x1],sil
   14002cfb6:	mov    r14,QWORD PTR [rip+0x1b68b]        # 0x140048648
   14002cfbd:	sete   bpl
   14002cfc1:	cmp    r14,QWORD PTR [rip+0x1b698]        # 0x140048660
   14002cfc8:	mov    BYTE PTR [rsp+0x70],bpl
   14002cfcd:	jne    0x14002cfe1
   14002cfcf:	mov    rcx,r14
   14002cfd2:	call   0x14002d250
   14002cfd7:	mov    r14,rax
   14002cfda:	mov    QWORD PTR [rip+0x1b667],rax        # 0x140048648
   14002cfe1:	mov    r12d,0x1
   14002cfe7:	test   r14,r14
   14002cfea:	jne    0x14002d0af
   14002cff0:	test   ebx,ebx
   14002cff2:	je     0x14002d044
   14002cff4:	cmp    QWORD PTR [rip+0x1b655],rsi        # 0x140048650
   14002cffb:	je     0x14002d044
   14002cffd:	call   0x140029454
   14002d002:	test   rax,rax
   14002d005:	jne    0x14002d0a3
   14002d00b:	call   0x14002a494
   14002d010:	or     rsi,0xffffffffffffffff
   14002d014:	mov    DWORD PTR [rax],0x16
   14002d01a:	mov    ebp,esi
   14002d01c:	mov    esi,ebp
   14002d01e:	mov    ebp,esi
   14002d020:	mov    esi,ebp
   14002d022:	mov    rcx,rdi
   14002d025:	call   0x140007bd0
   14002d02a:	mov    eax,esi
   14002d02c:	mov    rbx,QWORD PTR [rsp+0x80]
   14002d034:	add    rsp,0x30
   14002d038:	pop    r15
   14002d03a:	pop    r14
   14002d03c:	pop    r13
   14002d03e:	pop    r12
   14002d040:	pop    rdi
   14002d041:	pop    rsi
   14002d042:	pop    rbp
   14002d043:	ret    
   14002d044:	test   bpl,bpl
   14002d047:	jne    0x14002d01a
   14002d049:	mov    edx,0x8
   14002d04e:	mov    rcx,r12
   14002d051:	call   0x140007c20
   14002d056:	xor    ecx,ecx
   14002d058:	mov    QWORD PTR [rip+0x1b5e9],rax        # 0x140048648
   14002d05f:	call   0x140007bd0
   14002d064:	mov    r14,QWORD PTR [rip+0x1b5dd]        # 0x140048648
   14002d06b:	test   r14,r14
   14002d06e:	jne    0x14002d076
   14002d070:	or     rbp,0xffffffffffffffff
   14002d074:	jmp    0x14002d01c
   14002d076:	cmp    QWORD PTR [rip+0x1b5d3],rsi        # 0x140048650
   14002d07d:	jne    0x14002d0aa
   14002d07f:	mov    edx,0x8
   14002d084:	mov    rcx,r12
   14002d087:	call   0x140007c20
   14002d08c:	xor    ecx,ecx
   14002d08e:	mov    QWORD PTR [rip+0x1b5bb],rax        # 0x140048650
   14002d095:	call   0x140007bd0
   14002d09a:	cmp    QWORD PTR [rip+0x1b5af],rsi        # 0x140048650
   14002d0a1:	je     0x14002d070
   14002d0a3:	mov    r14,QWORD PTR [rip+0x1b59e]        # 0x140048648
   14002d0aa:	test   r14,r14
   14002d0ad:	je     0x14002d070
   14002d0af:	mov    r12,r13
   14002d0b2:	mov    rbx,r14
   14002d0b5:	sub    r12,r15
   14002d0b8:	cmp    QWORD PTR [r14],rsi
   14002d0bb:	je     0x14002d0f1
   14002d0bd:	mov    rdx,QWORD PTR [rbx]
   14002d0c0:	mov    r8,r12
   14002d0c3:	mov    rcx,r15
   14002d0c6:	call   0x14002f230
   14002d0cb:	test   eax,eax
   14002d0cd:	jne    0x14002d0df
   14002d0cf:	mov    rax,QWORD PTR [rbx]
   14002d0d2:	cmp    BYTE PTR [r12+rax*1],0x3d
   14002d0d7:	je     0x14002d0e8
   14002d0d9:	cmp    BYTE PTR [r12+rax*1],sil
   14002d0dd:	je     0x14002d0e8
   14002d0df:	add    rbx,0x8
   14002d0e3:	cmp    QWORD PTR [rbx],rsi
   14002d0e6:	jmp    0x14002d0bb
   14002d0e8:	sub    rbx,r14
   14002d0eb:	sar    rbx,0x3
   14002d0ef:	jmp    0x14002d0fb
   14002d0f1:	sub    rbx,r14
   14002d0f4:	sar    rbx,0x3
   14002d0f8:	neg    rbx
   14002d0fb:	test   rbx,rbx
   14002d0fe:	js     0x14002d157
   14002d100:	cmp    QWORD PTR [r14],rsi
   14002d103:	je     0x14002d157
   14002d105:	mov    rcx,QWORD PTR [r14+rbx*8]
   14002d109:	call   0x140007bd0
   14002d10e:	test   bpl,bpl
   14002d111:	jne    0x14002d128
   14002d113:	mov    QWORD PTR [r14+rbx*8],r15
   14002d117:	jmp    0x14002d1b1
   14002d11c:	mov    rax,QWORD PTR [r14+rbx*8+0x8]
   14002d121:	mov    QWORD PTR [r14+rbx*8],rax
   14002d125:	inc    rbx
   14002d128:	cmp    QWORD PTR [r14+rbx*8],rsi
   14002d12c:	jne    0x14002d11c
   14002d12e:	mov    r8d,0x8
   14002d134:	mov    rdx,rbx
   14002d137:	mov    rcx,r14
   14002d13a:	call   0x140007c70
   14002d13f:	xor    ecx,ecx
   14002d141:	mov    rbx,rax
   14002d144:	call   0x140007bd0
   14002d149:	test   rbx,rbx
   14002d14c:	je     0x14002d1b4
   14002d14e:	mov    QWORD PTR [rip+0x1b4f3],rbx        # 0x140048648
   14002d155:	jmp    0x14002d1b4
   14002d157:	test   bpl,bpl
   14002d15a:	jne    0x14002d01e
   14002d160:	neg    rbx
   14002d163:	lea    rdx,[rbx+0x2]
   14002d167:	cmp    rdx,rbx
   14002d16a:	jae    0x14002d175
   14002d16c:	or     rbp,0xffffffffffffffff
   14002d170:	jmp    0x14002d020
   14002d175:	movabs rax,0x1fffffffffffffff
   14002d17f:	cmp    rdx,rax
   14002d182:	jae    0x14002d16c
   14002d184:	mov    r8d,0x8
   14002d18a:	mov    rcx,r14
   14002d18d:	call   0x140007c70
   14002d192:	xor    ecx,ecx
   14002d194:	mov    r14,rax
   14002d197:	call   0x140007bd0
   14002d19c:	test   r14,r14
   14002d19f:	je     0x14002d16c
   14002d1a1:	mov    QWORD PTR [r14+rbx*8],r15
   14002d1a5:	mov    QWORD PTR [r14+rbx*8+0x8],rsi
   14002d1aa:	mov    QWORD PTR [rip+0x1b497],r14        # 0x140048648
   14002d1b1:	mov    rdi,rsi
   14002d1b4:	cmp    DWORD PTR [rsp+0x78],esi
   14002d1b8:	je     0x14002d022
   14002d1be:	or     rbp,0xffffffffffffffff
   14002d1c2:	mov    r14,rbp
   14002d1c5:	inc    r14
   14002d1c8:	cmp    BYTE PTR [r15+r14*1],sil
   14002d1cc:	jne    0x14002d1c5
   14002d1ce:	mov    edx,0x1
   14002d1d3:	lea    rcx,[r14+0x2]
   14002d1d7:	call   0x140007c20
   14002d1dc:	mov    rbx,rax
   14002d1df:	test   rax,rax
   14002d1e2:	je     0x14002d22b
   14002d1e4:	mov    r8,r15
   14002d1e7:	lea    rdx,[r14+0x2]
   14002d1eb:	mov    rcx,rax
   14002d1ee:	call   0x140029e10
   14002d1f3:	test   eax,eax
   14002d1f5:	jne    0x14002d238
   14002d1f7:	mov    rax,rbx
   14002d1fa:	lea    rdx,[r13+0x1]
   14002d1fe:	sub    rax,r15
   14002d201:	mov    rcx,rbx
   14002d204:	add    rdx,rax
   14002d207:	cmp    BYTE PTR [rsp+0x70],sil
   14002d20c:	mov    BYTE PTR [rdx-0x1],sil
   14002d210:	cmovne rdx,rsi
   14002d214:	call   QWORD PTR [rip+0x4e16]        # 0x140032030
   14002d21a:	test   eax,eax
   14002d21c:	jne    0x14002d22b
   14002d21e:	call   0x14002a494
   14002d223:	mov    esi,ebp
   14002d225:	mov    DWORD PTR [rax],0x2a
   14002d22b:	mov    rcx,rbx
   14002d22e:	call   0x140007bd0
   14002d233:	jmp    0x14002d022
   14002d238:	xor    r9d,r9d
   14002d23b:	mov    QWORD PTR [rsp+0x20],rsi
   14002d240:	xor    r8d,r8d
   14002d243:	xor    edx,edx
   14002d245:	xor    ecx,ecx
   14002d247:	call   0x1400281cc
   14002d24c:	int3   
   14002d24d:	int3   
   14002d24e:	int3   
   14002d24f:	int3   
   14002d250:	mov    QWORD PTR [rsp+0x8],rbx
   14002d255:	mov    QWORD PTR [rsp+0x10],rsi
   14002d25a:	mov    QWORD PTR [rsp+0x18],rdi
   14002d25f:	push   r14
   14002d261:	sub    rsp,0x30
   14002d265:	mov    rdi,rcx
   14002d268:	test   rcx,rcx
   14002d26b:	jne    0x14002d274
   14002d26d:	xor    eax,eax
   14002d26f:	jmp    0x14002d302
   14002d274:	xor    ecx,ecx
   14002d276:	mov    rax,rdi
   14002d279:	cmp    QWORD PTR [rdi],rcx
   14002d27c:	je     0x14002d28b
   14002d27e:	inc    rcx
   14002d281:	lea    rax,[rax+0x8]
   14002d285:	cmp    QWORD PTR [rax],0x0
   14002d289:	jne    0x14002d27e
   14002d28b:	inc    rcx
   14002d28e:	mov    edx,0x8
   14002d293:	call   0x140007c20
   14002d298:	mov    rbx,rax
   14002d29b:	test   rax,rax
   14002d29e:	je     0x14002d318
   14002d2a0:	cmp    QWORD PTR [rdi],0x0
   14002d2a4:	je     0x14002d2f8
   14002d2a6:	mov    r14,rax
   14002d2a9:	sub    r14,rdi
   14002d2ac:	mov    rax,QWORD PTR [rdi]
   14002d2af:	or     rsi,0xffffffffffffffff
   14002d2b3:	inc    rsi
   14002d2b6:	cmp    BYTE PTR [rax+rsi*1],0x0
   14002d2ba:	jne    0x14002d2b3
   14002d2bc:	mov    edx,0x1
   14002d2c1:	lea    rcx,[rsi+0x1]
   14002d2c5:	call   0x140007c20
   14002d2ca:	xor    ecx,ecx
   14002d2cc:	mov    QWORD PTR [r14+rdi*1],rax
   14002d2d0:	call   0x140007bd0
   14002d2d5:	mov    rcx,QWORD PTR [r14+rdi*1]
   14002d2d9:	test   rcx,rcx
   14002d2dc:	je     0x14002d334
   14002d2de:	mov    r8,QWORD PTR [rdi]
   14002d2e1:	lea    rdx,[rsi+0x1]
   14002d2e5:	call   0x140029e10
   14002d2ea:	test   eax,eax
   14002d2ec:	jne    0x14002d31e
   14002d2ee:	add    rdi,0x8
   14002d2f2:	cmp    QWORD PTR [rdi],0x0
   14002d2f6:	jne    0x14002d2ac
   14002d2f8:	xor    ecx,ecx
   14002d2fa:	call   0x140007bd0
   14002d2ff:	mov    rax,rbx
   14002d302:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d307:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d30c:	mov    rdi,QWORD PTR [rsp+0x50]
   14002d311:	add    rsp,0x30
   14002d315:	pop    r14
   14002d317:	ret    
   14002d318:	call   0x140029db8
   14002d31d:	int3   
   14002d31e:	and    QWORD PTR [rsp+0x20],0x0
   14002d324:	xor    r9d,r9d
   14002d327:	xor    r8d,r8d
   14002d32a:	xor    edx,edx
   14002d32c:	xor    ecx,ecx
   14002d32e:	call   0x1400281cc
   14002d333:	int3   
   14002d334:	call   0x140029db8
   14002d339:	int3   
   14002d33a:	int3   
   14002d33b:	int3   
   14002d33c:	jmp    0x14002cf60
   14002d341:	int3   
   14002d342:	int3   
   14002d343:	int3   
   14002d344:	sub    rsp,0x28
   14002d348:	call   QWORD PTR [rip+0x4cda]        # 0x140032028
   14002d34e:	test   rax,rax
   14002d351:	mov    QWORD PTR [rip+0x1bba8],rax        # 0x140048f00
   14002d358:	setne  al
   14002d35b:	add    rsp,0x28
   14002d35f:	ret    
   14002d360:	and    QWORD PTR [rip+0x1bb98],0x0        # 0x140048f00
   14002d368:	mov    al,0x1
   14002d36a:	ret    
   14002d36b:	int3   
   14002d36c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d371:	mov    QWORD PTR [rsp+0x10],rbp
   14002d376:	mov    QWORD PTR [rsp+0x18],rsi
   14002d37b:	push   rdi
   14002d37c:	sub    rsp,0x20
   14002d380:	mov    rsi,rdx
   14002d383:	mov    rdi,rcx
   14002d386:	cmp    rcx,rdx
   14002d389:	jne    0x14002d38f
   14002d38b:	mov    al,0x1
   14002d38d:	jmp    0x14002d3eb
   14002d38f:	mov    rbx,rcx
   14002d392:	mov    rbp,QWORD PTR [rbx]
   14002d395:	test   rbp,rbp
   14002d398:	je     0x14002d3a9
   14002d39a:	mov    rcx,rbp
   14002d39d:	call   QWORD PTR [rip+0x523d]        # 0x1400325e0
   14002d3a3:	call   rbp
   14002d3a5:	test   al,al
   14002d3a7:	je     0x14002d3b2
   14002d3a9:	add    rbx,0x10
   14002d3ad:	cmp    rbx,rsi
   14002d3b0:	jne    0x14002d392
   14002d3b2:	cmp    rbx,rsi
   14002d3b5:	je     0x14002d38b
   14002d3b7:	cmp    rbx,rdi
   14002d3ba:	je     0x14002d3e9
   14002d3bc:	add    rbx,0xfffffffffffffff8
   14002d3c0:	cmp    QWORD PTR [rbx-0x8],0x0
   14002d3c5:	je     0x14002d3dc
   14002d3c7:	mov    rsi,QWORD PTR [rbx]
   14002d3ca:	test   rsi,rsi
   14002d3cd:	je     0x14002d3dc
   14002d3cf:	mov    rcx,rsi
   14002d3d2:	call   QWORD PTR [rip+0x5208]        # 0x1400325e0
   14002d3d8:	xor    ecx,ecx
   14002d3da:	call   rsi
   14002d3dc:	sub    rbx,0x10
   14002d3e0:	lea    rax,[rbx+0x8]
   14002d3e4:	cmp    rax,rdi
   14002d3e7:	jne    0x14002d3c0
   14002d3e9:	xor    al,al
   14002d3eb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d3f0:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d3f5:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d3fa:	add    rsp,0x20
   14002d3fe:	pop    rdi
   14002d3ff:	ret    
   14002d400:	mov    QWORD PTR [rsp+0x8],rbx
   14002d405:	mov    QWORD PTR [rsp+0x10],rsi
   14002d40a:	push   rdi
   14002d40b:	sub    rsp,0x20
   14002d40f:	mov    rsi,rcx
   14002d412:	cmp    rcx,rdx
   14002d415:	je     0x14002d43d
   14002d417:	lea    rbx,[rdx-0x8]
   14002d41b:	mov    rdi,QWORD PTR [rbx]
   14002d41e:	test   rdi,rdi
   14002d421:	je     0x14002d430
   14002d423:	mov    rcx,rdi
   14002d426:	call   QWORD PTR [rip+0x51b4]        # 0x1400325e0
   14002d42c:	xor    ecx,ecx
   14002d42e:	call   rdi
   14002d430:	sub    rbx,0x10
   14002d434:	lea    rax,[rbx+0x8]
   14002d438:	cmp    rax,rsi
   14002d43b:	jne    0x14002d41b
   14002d43d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d442:	mov    al,0x1
   14002d444:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d449:	add    rsp,0x20
   14002d44d:	pop    rdi
   14002d44e:	ret    
   14002d44f:	int3   
   14002d450:	mov    QWORD PTR [rip+0x1bab1],rcx        # 0x140048f08
   14002d457:	ret    
   14002d458:	mov    QWORD PTR [rsp+0x8],rbx
   14002d45d:	mov    QWORD PTR [rsp+0x20],r9
   14002d462:	push   rdi
   14002d463:	sub    rsp,0x20
   14002d467:	mov    rdi,r9
   14002d46a:	mov    ecx,DWORD PTR [rdx]
   14002d46c:	call   0x14002af28
   14002d471:	nop
   14002d472:	mov    rbx,QWORD PTR [rip+0x18d6f]        # 0x1400461e8
   14002d479:	mov    ecx,ebx
   14002d47b:	and    ecx,0x3f
   14002d47e:	xor    rbx,QWORD PTR [rip+0x1ba9b]        # 0x140048f20
   14002d485:	ror    rbx,cl
   14002d488:	mov    ecx,DWORD PTR [rdi]
   14002d48a:	call   0x14002af7c
   14002d48f:	mov    rax,rbx
   14002d492:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d497:	add    rsp,0x20
   14002d49b:	pop    rdi
   14002d49c:	ret    
   14002d49d:	int3   
   14002d49e:	int3   
   14002d49f:	int3   
   14002d4a0:	mov    r11,rsp
   14002d4a3:	sub    rsp,0x28
   14002d4a7:	mov    eax,0x3
   14002d4ac:	lea    r9,[r11+0x10]
   14002d4b0:	lea    r8,[r11+0x8]
   14002d4b4:	mov    DWORD PTR [rsp+0x38],eax
   14002d4b8:	lea    rdx,[r11+0x18]
   14002d4bc:	mov    DWORD PTR [rsp+0x40],eax
   14002d4c0:	lea    rcx,[r11+0x8]
   14002d4c4:	call   0x14002d458
   14002d4c9:	add    rsp,0x28
   14002d4cd:	ret    
   14002d4ce:	int3   
   14002d4cf:	int3   
   14002d4d0:	mov    QWORD PTR [rip+0x1ba39],rcx        # 0x140048f10
   14002d4d7:	mov    QWORD PTR [rip+0x1ba3a],rcx        # 0x140048f18
   14002d4de:	mov    QWORD PTR [rip+0x1ba3b],rcx        # 0x140048f20
   14002d4e5:	mov    QWORD PTR [rip+0x1ba3c],rcx        # 0x140048f28
   14002d4ec:	ret    
   14002d4ed:	int3   
   14002d4ee:	int3   
   14002d4ef:	int3   
   14002d4f0:	mov    rax,rsp
   14002d4f3:	push   rbx
   14002d4f4:	push   rsi
   14002d4f5:	push   rdi
   14002d4f6:	push   r12
   14002d4f8:	push   r13
   14002d4fa:	push   r15
   14002d4fc:	sub    rsp,0x48
   14002d500:	mov    edi,ecx
   14002d502:	xor    r13d,r13d
   14002d505:	and    DWORD PTR [rax+0x18],r13d
   14002d509:	mov    sil,0x1
   14002d50c:	mov    BYTE PTR [rsp+0x80],sil
   14002d514:	cmp    ecx,0x2
   14002d517:	je     0x14002d5ab
   14002d51d:	cmp    ecx,0x4
   14002d520:	je     0x14002d544
   14002d522:	cmp    ecx,0x6
   14002d525:	je     0x14002d5ab
   14002d52b:	cmp    ecx,0x8
   14002d52e:	je     0x14002d544
   14002d530:	cmp    ecx,0xb
   14002d533:	je     0x14002d544
   14002d535:	cmp    ecx,0xf
   14002d538:	je     0x14002d5ab
   14002d53a:	lea    eax,[rcx-0x15]
   14002d53d:	cmp    eax,0x1
   14002d540:	jbe    0x14002d5ab
   14002d542:	jmp    0x14002d588
   14002d544:	call   0x14002a2dc
   14002d549:	mov    r13,rax
   14002d54c:	test   rax,rax
   14002d54f:	jne    0x14002d559
   14002d551:	or     eax,0xffffffff
   14002d554:	jmp    0x14002d77b
   14002d559:	mov    rcx,QWORD PTR [rax]
   14002d55c:	mov    rdx,QWORD PTR [rip+0xb88d]        # 0x140038df0
   14002d563:	shl    rdx,0x4
   14002d567:	add    rdx,rcx
   14002d56a:	jmp    0x14002d575
   14002d56c:	cmp    DWORD PTR [rcx+0x4],edi
   14002d56f:	je     0x14002d57c
   14002d571:	add    rcx,0x10
   14002d575:	cmp    rcx,rdx
   14002d578:	jne    0x14002d56c
   14002d57a:	xor    ecx,ecx
   14002d57c:	xor    eax,eax
   14002d57e:	test   rcx,rcx
   14002d581:	setne  al
   14002d584:	test   eax,eax
   14002d586:	jne    0x14002d59a
   14002d588:	call   0x14002a494
   14002d58d:	mov    DWORD PTR [rax],0x16
   14002d593:	call   0x1400281ac
   14002d598:	jmp    0x14002d551
   14002d59a:	lea    rbx,[rcx+0x8]
   14002d59e:	xor    sil,sil
   14002d5a1:	mov    BYTE PTR [rsp+0x80],sil
   14002d5a9:	jmp    0x14002d5ea
   14002d5ab:	sub    ecx,0x2
   14002d5ae:	je     0x14002d5e3
   14002d5b0:	sub    ecx,0x4
   14002d5b3:	je     0x14002d5c8
   14002d5b5:	sub    ecx,0x9
   14002d5b8:	je     0x14002d5da
   14002d5ba:	sub    ecx,0x6
   14002d5bd:	je     0x14002d5d1
   14002d5bf:	cmp    ecx,0x1
   14002d5c2:	je     0x14002d5c8
   14002d5c4:	xor    ebx,ebx
   14002d5c6:	jmp    0x14002d5ea
   14002d5c8:	lea    rbx,[rip+0x1b951]        # 0x140048f20
   14002d5cf:	jmp    0x14002d5ea
   14002d5d1:	lea    rbx,[rip+0x1b940]        # 0x140048f18
   14002d5d8:	jmp    0x14002d5ea
   14002d5da:	lea    rbx,[rip+0x1b947]        # 0x140048f28
   14002d5e1:	jmp    0x14002d5ea
   14002d5e3:	lea    rbx,[rip+0x1b926]        # 0x140048f10
   14002d5ea:	and    QWORD PTR [rsp+0x98],0x0
   14002d5f3:	test   sil,sil
   14002d5f6:	je     0x14002d603
   14002d5f8:	mov    ecx,0x3
   14002d5fd:	call   0x14002af28
   14002d602:	nop
   14002d603:	test   sil,sil
   14002d606:	je     0x14002d61f
   14002d608:	mov    rdx,QWORD PTR [rip+0x18bd9]        # 0x1400461e8
   14002d60f:	mov    ecx,edx
   14002d611:	and    ecx,0x3f
   14002d614:	xor    rdx,QWORD PTR [rbx]
   14002d617:	ror    rdx,cl
   14002d61a:	mov    r15,rdx
   14002d61d:	jmp    0x14002d622
   14002d61f:	mov    r15,QWORD PTR [rbx]
   14002d622:	cmp    r15,0x1
   14002d626:	sete   al
   14002d629:	mov    BYTE PTR [rsp+0x88],al
   14002d630:	test   al,al
   14002d632:	jne    0x14002d6f7
   14002d638:	test   r15,r15
   14002d63b:	jne    0x14002d655
   14002d63d:	test   sil,sil
   14002d640:	je     0x14002d64b
   14002d642:	lea    ecx,[r15+0x3]
   14002d646:	call   0x14002af7c
   14002d64b:	mov    ecx,0x3
   14002d650:	call   0x140028d60
   14002d655:	mov    r12d,0x910
   14002d65b:	cmp    edi,0xb
   14002d65e:	ja     0x14002d6a0
   14002d660:	bt     r12d,edi
   14002d664:	jae    0x14002d6a0
   14002d666:	mov    rax,QWORD PTR [r13+0x8]
   14002d66a:	mov    QWORD PTR [rsp+0x98],rax
   14002d672:	mov    QWORD PTR [rsp+0x30],rax
   14002d677:	and    QWORD PTR [r13+0x8],0x0
   14002d67c:	cmp    edi,0x8
   14002d67f:	jne    0x14002d6d7
   14002d681:	call   0x14002a248
   14002d686:	mov    eax,DWORD PTR [rax+0x10]
   14002d689:	mov    DWORD PTR [rsp+0x90],eax
   14002d690:	mov    DWORD PTR [rsp+0x20],eax
   14002d694:	call   0x14002a248
   14002d699:	mov    DWORD PTR [rax+0x10],0x8c
   14002d6a0:	cmp    edi,0x8
   14002d6a3:	jne    0x14002d6d7
   14002d6a5:	mov    rax,QWORD PTR [rip+0xb74c]        # 0x140038df8
   14002d6ac:	shl    rax,0x4
   14002d6b0:	add    rax,QWORD PTR [r13+0x0]
   14002d6b4:	mov    rcx,QWORD PTR [rip+0xb745]        # 0x140038e00
   14002d6bb:	shl    rcx,0x4
   14002d6bf:	add    rcx,rax
   14002d6c2:	mov    QWORD PTR [rsp+0x28],rax
   14002d6c7:	cmp    rax,rcx
   14002d6ca:	je     0x14002d6fd
   14002d6cc:	and    QWORD PTR [rax+0x8],0x0
   14002d6d1:	add    rax,0x10
   14002d6d5:	jmp    0x14002d6c2
   14002d6d7:	mov    rdx,QWORD PTR [rip+0x18b0a]        # 0x1400461e8
   14002d6de:	mov    eax,edx
   14002d6e0:	and    eax,0x3f
   14002d6e3:	mov    ecx,0x40
   14002d6e8:	sub    ecx,eax
   14002d6ea:	xor    eax,eax
   14002d6ec:	ror    rax,cl
   14002d6ef:	xor    rax,rdx
   14002d6f2:	mov    QWORD PTR [rbx],rax
   14002d6f5:	jmp    0x14002d6fd
   14002d6f7:	mov    r12d,0x910
   14002d6fd:	test   sil,sil
   14002d700:	je     0x14002d70c
   14002d702:	mov    ecx,0x3
   14002d707:	call   0x14002af7c
   14002d70c:	cmp    BYTE PTR [rsp+0x88],0x0
   14002d714:	je     0x14002d71a
   14002d716:	xor    eax,eax
   14002d718:	jmp    0x14002d77b
   14002d71a:	cmp    edi,0x8
   14002d71d:	jne    0x14002d73d
   14002d71f:	call   0x14002a248
   14002d724:	mov    rbx,rax
   14002d727:	mov    rcx,r15
   14002d72a:	mov    rdx,QWORD PTR [rip+0x4eaf]        # 0x1400325e0
   14002d731:	call   rdx
   14002d733:	mov    edx,DWORD PTR [rbx+0x10]
   14002d736:	mov    ecx,edi
   14002d738:	call   r15
   14002d73b:	jmp    0x14002d74e
   14002d73d:	mov    rcx,r15
   14002d740:	mov    rax,QWORD PTR [rip+0x4e99]        # 0x1400325e0
   14002d747:	call   rax
   14002d749:	mov    ecx,edi
   14002d74b:	call   r15
   14002d74e:	cmp    edi,0xb
   14002d751:	ja     0x14002d716
   14002d753:	bt     r12d,edi
   14002d757:	jae    0x14002d716
   14002d759:	mov    rax,QWORD PTR [rsp+0x98]
   14002d761:	mov    QWORD PTR [r13+0x8],rax
   14002d765:	cmp    edi,0x8
   14002d768:	jne    0x14002d716
   14002d76a:	call   0x14002a248
   14002d76f:	mov    ecx,DWORD PTR [rsp+0x90]
   14002d776:	mov    DWORD PTR [rax+0x10],ecx
   14002d779:	jmp    0x14002d716
   14002d77b:	add    rsp,0x48
   14002d77f:	pop    r15
   14002d781:	pop    r13
   14002d783:	pop    r12
   14002d785:	pop    rdi
   14002d786:	pop    rsi
   14002d787:	pop    rbx
   14002d788:	ret    
   14002d789:	int3   
   14002d78a:	int3   
   14002d78b:	int3   
   14002d78c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d791:	mov    QWORD PTR [rsp+0x10],rbp
   14002d796:	mov    QWORD PTR [rsp+0x18],rsi
   14002d79b:	push   rdi
   14002d79c:	sub    rsp,0x20
   14002d7a0:	mov    edx,0x40
   14002d7a5:	mov    ecx,edx
   14002d7a7:	call   0x140007c20
   14002d7ac:	xor    esi,esi
   14002d7ae:	mov    rbx,rax
   14002d7b1:	test   rax,rax
   14002d7b4:	je     0x14002d802
   14002d7b6:	lea    rbp,[rax+0x1000]
   14002d7bd:	cmp    rax,rbp
   14002d7c0:	je     0x14002d7ff
   14002d7c2:	lea    rdi,[rax+0x30]
   14002d7c6:	lea    rcx,[rdi-0x30]
   14002d7ca:	xor    r8d,r8d
   14002d7cd:	mov    edx,0xfa0
   14002d7d2:	call   0x14002a8b4
   14002d7d7:	or     QWORD PTR [rdi-0x8],0xffffffffffffffff
   14002d7dc:	mov    QWORD PTR [rdi],rsi
   14002d7df:	mov    DWORD PTR [rdi+0x8],0xa0a0000
   14002d7e6:	mov    BYTE PTR [rdi+0xc],0xa
   14002d7ea:	and    BYTE PTR [rdi+0xd],0xf8
   14002d7ee:	mov    BYTE PTR [rdi+0xe],sil
   14002d7f2:	lea    rdi,[rdi+0x40]
   14002d7f6:	lea    rax,[rdi-0x30]
   14002d7fa:	cmp    rax,rbp
   14002d7fd:	jne    0x14002d7c6
   14002d7ff:	mov    rsi,rbx
   14002d802:	xor    ecx,ecx
   14002d804:	call   0x140007bd0
   14002d809:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d80e:	mov    rax,rsi
   14002d811:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d816:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d81b:	add    rsp,0x20
   14002d81f:	pop    rdi
   14002d820:	ret    
   14002d821:	int3   
   14002d822:	int3   
   14002d823:	int3   
   14002d824:	test   rcx,rcx
   14002d827:	je     0x14002d873
   14002d829:	mov    QWORD PTR [rsp+0x8],rbx
   14002d82e:	mov    QWORD PTR [rsp+0x10],rsi
   14002d833:	push   rdi
   14002d834:	sub    rsp,0x20
   14002d838:	lea    rsi,[rcx+0x1000]
   14002d83f:	mov    rbx,rcx
   14002d842:	mov    rdi,rcx
   14002d845:	cmp    rcx,rsi
   14002d848:	je     0x14002d85c
   14002d84a:	mov    rcx,rdi
   14002d84d:	call   QWORD PTR [rip+0x4895]        # 0x1400320e8
   14002d853:	add    rdi,0x40
   14002d857:	cmp    rdi,rsi
   14002d85a:	jne    0x14002d84a
   14002d85c:	mov    rcx,rbx
   14002d85f:	call   0x140007bd0
   14002d864:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d869:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d86e:	add    rsp,0x20
   14002d872:	pop    rdi
   14002d873:	ret    
   14002d874:	mov    QWORD PTR [rsp+0x8],rbx
   14002d879:	mov    QWORD PTR [rsp+0x10],rsi
   14002d87e:	mov    QWORD PTR [rsp+0x18],rdi
   14002d883:	push   r15
   14002d885:	sub    rsp,0x30
   14002d889:	mov    esi,ecx
   14002d88b:	xor    ebx,ebx
   14002d88d:	mov    eax,ebx
   14002d88f:	cmp    ecx,0x2000
   14002d895:	setb   al
   14002d898:	test   eax,eax
   14002d89a:	jne    0x14002d8b1
   14002d89c:	call   0x14002a494
   14002d8a1:	mov    ebx,0x9
   14002d8a6:	mov    DWORD PTR [rax],ebx
   14002d8a8:	call   0x1400281ac
   14002d8ad:	mov    eax,ebx
   14002d8af:	jmp    0x14002d915
   14002d8b1:	mov    ecx,0x7
   14002d8b6:	call   0x14002af28
   14002d8bb:	nop
   14002d8bc:	mov    rdi,rbx
   14002d8bf:	mov    QWORD PTR [rsp+0x20],rbx
   14002d8c4:	mov    eax,DWORD PTR [rip+0x1b3d6]        # 0x140048ca0
   14002d8ca:	cmp    esi,eax
   14002d8cc:	jl     0x14002d909
   14002d8ce:	lea    r15,[rip+0x1afcb]        # 0x1400488a0
   14002d8d5:	cmp    QWORD PTR [r15+rdi*8],rbx
   14002d8d9:	je     0x14002d8dd
   14002d8db:	jmp    0x14002d8ff
   14002d8dd:	call   0x14002d78c
   14002d8e2:	mov    QWORD PTR [r15+rdi*8],rax
   14002d8e6:	test   rax,rax
   14002d8e9:	jne    0x14002d8f0
   14002d8eb:	lea    ebx,[rax+0xc]
   14002d8ee:	jmp    0x14002d909
   14002d8f0:	mov    eax,DWORD PTR [rip+0x1b3aa]        # 0x140048ca0
   14002d8f6:	add    eax,0x40
   14002d8f9:	mov    DWORD PTR [rip+0x1b3a1],eax        # 0x140048ca0
   14002d8ff:	inc    rdi
   14002d902:	mov    QWORD PTR [rsp+0x20],rdi
   14002d907:	jmp    0x14002d8ca
   14002d909:	mov    ecx,0x7
   14002d90e:	call   0x14002af7c
   14002d913:	jmp    0x14002d8ad
   14002d915:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d91a:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d91f:	mov    rdi,QWORD PTR [rsp+0x50]
   14002d924:	add    rsp,0x30
   14002d928:	pop    r15
   14002d92a:	ret    
   14002d92b:	int3   
   14002d92c:	movsxd rcx,ecx
   14002d92f:	lea    rdx,[rip+0x1af6a]        # 0x1400488a0
   14002d936:	mov    rax,rcx
   14002d939:	and    ecx,0x3f
   14002d93c:	sar    rax,0x6
   14002d940:	shl    rcx,0x6
   14002d944:	add    rcx,QWORD PTR [rdx+rax*8]
   14002d948:	rex.W jmp QWORD PTR [rip+0x47a9]        # 0x1400320f8
   14002d94f:	int3   
   14002d950:	movsxd rcx,ecx
   14002d953:	lea    rdx,[rip+0x1af46]        # 0x1400488a0
   14002d95a:	mov    rax,rcx
   14002d95d:	and    ecx,0x3f
   14002d960:	sar    rax,0x6
   14002d964:	shl    rcx,0x6
   14002d968:	add    rcx,QWORD PTR [rdx+rax*8]
   14002d96c:	rex.W jmp QWORD PTR [rip+0x477d]        # 0x1400320f0
   14002d973:	int3   
   14002d974:	mov    QWORD PTR [rsp+0x8],rbx
   14002d979:	mov    QWORD PTR [rsp+0x10],rsi
   14002d97e:	mov    QWORD PTR [rsp+0x18],rdi
   14002d983:	push   r14
   14002d985:	sub    rsp,0x20
   14002d989:	movsxd rbx,ecx
   14002d98c:	test   ecx,ecx
   14002d98e:	js     0x14002da02
   14002d990:	cmp    ebx,DWORD PTR [rip+0x1b30a]        # 0x140048ca0
   14002d996:	jae    0x14002da02
   14002d998:	mov    rdi,rbx
   14002d99b:	lea    r14,[rip+0x1aefe]        # 0x1400488a0
   14002d9a2:	and    edi,0x3f
   14002d9a5:	mov    rsi,rbx
   14002d9a8:	sar    rsi,0x6
   14002d9ac:	shl    rdi,0x6
   14002d9b0:	mov    rax,QWORD PTR [r14+rsi*8]
   14002d9b4:	test   BYTE PTR [rax+rdi*1+0x38],0x1
   14002d9b9:	je     0x14002da02
   14002d9bb:	cmp    QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14002d9c1:	je     0x14002da02
   14002d9c3:	call   0x140029ab8
   14002d9c8:	cmp    eax,0x1
   14002d9cb:	jne    0x14002d9f4
   14002d9cd:	test   ebx,ebx
   14002d9cf:	je     0x14002d9e7
   14002d9d1:	sub    ebx,eax
   14002d9d3:	je     0x14002d9e0
   14002d9d5:	cmp    ebx,eax
   14002d9d7:	jne    0x14002d9f4
   14002d9d9:	mov    ecx,0xfffffff4
   14002d9de:	jmp    0x14002d9ec
   14002d9e0:	mov    ecx,0xfffffff5
   14002d9e5:	jmp    0x14002d9ec
   14002d9e7:	mov    ecx,0xfffffff6
   14002d9ec:	xor    edx,edx
   14002d9ee:	call   QWORD PTR [rip+0x462c]        # 0x140032020
   14002d9f4:	mov    rax,QWORD PTR [r14+rsi*8]
   14002d9f8:	or     QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14002d9fe:	xor    eax,eax
   14002da00:	jmp    0x14002da18
   14002da02:	call   0x14002a494
   14002da07:	mov    DWORD PTR [rax],0x9
   14002da0d:	call   0x14002a474
   14002da12:	and    DWORD PTR [rax],0x0
   14002da15:	or     eax,0xffffffff
   14002da18:	mov    rbx,QWORD PTR [rsp+0x30]
   14002da1d:	mov    rsi,QWORD PTR [rsp+0x38]
   14002da22:	mov    rdi,QWORD PTR [rsp+0x40]
   14002da27:	add    rsp,0x20
   14002da2b:	pop    r14
   14002da2d:	ret    
   14002da2e:	int3   
   14002da2f:	int3   
   14002da30:	sub    rsp,0x28
   14002da34:	cmp    ecx,0xfffffffe
   14002da37:	jne    0x14002da4e
   14002da39:	call   0x14002a474
   14002da3e:	and    DWORD PTR [rax],0x0
   14002da41:	call   0x14002a494
   14002da46:	mov    DWORD PTR [rax],0x9
   14002da4c:	jmp    0x14002da9c
   14002da4e:	test   ecx,ecx
   14002da50:	js     0x14002da84
   14002da52:	cmp    ecx,DWORD PTR [rip+0x1b248]        # 0x140048ca0
   14002da58:	jae    0x14002da84
   14002da5a:	movsxd rdx,ecx
   14002da5d:	lea    rcx,[rip+0x1ae3c]        # 0x1400488a0
   14002da64:	mov    rax,rdx
   14002da67:	and    edx,0x3f
   14002da6a:	sar    rax,0x6
   14002da6e:	shl    rdx,0x6
   14002da72:	mov    rax,QWORD PTR [rcx+rax*8]
   14002da76:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14002da7b:	je     0x14002da84
   14002da7d:	mov    rax,QWORD PTR [rax+rdx*1+0x28]
   14002da82:	jmp    0x14002daa0
   14002da84:	call   0x14002a474
   14002da89:	and    DWORD PTR [rax],0x0
   14002da8c:	call   0x14002a494
   14002da91:	mov    DWORD PTR [rax],0x9
   14002da97:	call   0x1400281ac
   14002da9c:	or     rax,0xffffffffffffffff
   14002daa0:	add    rsp,0x28
   14002daa4:	ret    
   14002daa5:	int3   
   14002daa6:	int3   
   14002daa7:	int3   
   14002daa8:	test   rcx,rcx
   14002daab:	je     0x14002dbb1
   14002dab1:	push   rbx
   14002dab2:	sub    rsp,0x20
   14002dab6:	mov    rbx,rcx
   14002dab9:	mov    rcx,QWORD PTR [rcx+0x18]
   14002dabd:	cmp    rcx,QWORD PTR [rip+0x18f54]        # 0x140046a18
   14002dac4:	je     0x14002dacb
   14002dac6:	call   0x140007bd0
   14002dacb:	mov    rcx,QWORD PTR [rbx+0x20]
   14002dacf:	cmp    rcx,QWORD PTR [rip+0x18f4a]        # 0x140046a20
   14002dad6:	je     0x14002dadd
   14002dad8:	call   0x140007bd0
   14002dadd:	mov    rcx,QWORD PTR [rbx+0x28]
   14002dae1:	cmp    rcx,QWORD PTR [rip+0x18f40]        # 0x140046a28
   14002dae8:	je     0x14002daef
   14002daea:	call   0x140007bd0
   14002daef:	mov    rcx,QWORD PTR [rbx+0x30]
   14002daf3:	cmp    rcx,QWORD PTR [rip+0x18f36]        # 0x140046a30
   14002dafa:	je     0x14002db01
   14002dafc:	call   0x140007bd0
   14002db01:	mov    rcx,QWORD PTR [rbx+0x38]
   14002db05:	cmp    rcx,QWORD PTR [rip+0x18f2c]        # 0x140046a38
   14002db0c:	je     0x14002db13
   14002db0e:	call   0x140007bd0
   14002db13:	mov    rcx,QWORD PTR [rbx+0x40]
   14002db17:	cmp    rcx,QWORD PTR [rip+0x18f22]        # 0x140046a40
   14002db1e:	je     0x14002db25
   14002db20:	call   0x140007bd0
   14002db25:	mov    rcx,QWORD PTR [rbx+0x48]
   14002db29:	cmp    rcx,QWORD PTR [rip+0x18f18]        # 0x140046a48
   14002db30:	je     0x14002db37
   14002db32:	call   0x140007bd0
   14002db37:	mov    rcx,QWORD PTR [rbx+0x68]
   14002db3b:	cmp    rcx,QWORD PTR [rip+0x18f26]        # 0x140046a68
   14002db42:	je     0x14002db49
   14002db44:	call   0x140007bd0
   14002db49:	mov    rcx,QWORD PTR [rbx+0x70]
   14002db4d:	cmp    rcx,QWORD PTR [rip+0x18f1c]        # 0x140046a70
   14002db54:	je     0x14002db5b
   14002db56:	call   0x140007bd0
   14002db5b:	mov    rcx,QWORD PTR [rbx+0x78]
   14002db5f:	cmp    rcx,QWORD PTR [rip+0x18f12]        # 0x140046a78
   14002db66:	je     0x14002db6d
   14002db68:	call   0x140007bd0
   14002db6d:	mov    rcx,QWORD PTR [rbx+0x80]
   14002db74:	cmp    rcx,QWORD PTR [rip+0x18f05]        # 0x140046a80
   14002db7b:	je     0x14002db82
   14002db7d:	call   0x140007bd0
   14002db82:	mov    rcx,QWORD PTR [rbx+0x88]
   14002db89:	cmp    rcx,QWORD PTR [rip+0x18ef8]        # 0x140046a88
   14002db90:	je     0x14002db97
   14002db92:	call   0x140007bd0
   14002db97:	mov    rcx,QWORD PTR [rbx+0x90]
   14002db9e:	cmp    rcx,QWORD PTR [rip+0x18eeb]        # 0x140046a90
   14002dba5:	je     0x14002dbac
   14002dba7:	call   0x140007bd0
   14002dbac:	add    rsp,0x20
   14002dbb0:	pop    rbx
   14002dbb1:	ret    
   14002dbb2:	int3   
   14002dbb3:	int3   
   14002dbb4:	test   rcx,rcx
   14002dbb7:	je     0x14002dc1f
   14002dbb9:	push   rbx
   14002dbba:	sub    rsp,0x20
   14002dbbe:	mov    rbx,rcx
   14002dbc1:	mov    rcx,QWORD PTR [rcx]
   14002dbc4:	cmp    rcx,QWORD PTR [rip+0x18e35]        # 0x140046a00
   14002dbcb:	je     0x14002dbd2
   14002dbcd:	call   0x140007bd0
   14002dbd2:	mov    rcx,QWORD PTR [rbx+0x8]
   14002dbd6:	cmp    rcx,QWORD PTR [rip+0x18e2b]        # 0x140046a08
   14002dbdd:	je     0x14002dbe4
   14002dbdf:	call   0x140007bd0
   14002dbe4:	mov    rcx,QWORD PTR [rbx+0x10]
   14002dbe8:	cmp    rcx,QWORD PTR [rip+0x18e21]        # 0x140046a10
   14002dbef:	je     0x14002dbf6
   14002dbf1:	call   0x140007bd0
   14002dbf6:	mov    rcx,QWORD PTR [rbx+0x58]
   14002dbfa:	cmp    rcx,QWORD PTR [rip+0x18e57]        # 0x140046a58
   14002dc01:	je     0x14002dc08
   14002dc03:	call   0x140007bd0
   14002dc08:	mov    rcx,QWORD PTR [rbx+0x60]
   14002dc0c:	cmp    rcx,QWORD PTR [rip+0x18e4d]        # 0x140046a60
   14002dc13:	je     0x14002dc1a
   14002dc15:	call   0x140007bd0
   14002dc1a:	add    rsp,0x20
   14002dc1e:	pop    rbx
   14002dc1f:	ret    
   14002dc20:	mov    QWORD PTR [rsp+0x8],rbx
   14002dc25:	mov    QWORD PTR [rsp+0x10],rsi
   14002dc2a:	push   rdi
   14002dc2b:	sub    rsp,0x20
   14002dc2f:	xor    edi,edi
   14002dc31:	lea    rax,[rcx+rdx*8]
   14002dc35:	mov    rsi,rax
   14002dc38:	mov    rbx,rcx
   14002dc3b:	sub    rsi,rcx
   14002dc3e:	add    rsi,0x7
   14002dc42:	shr    rsi,0x3
   14002dc46:	cmp    rcx,rax
   14002dc49:	cmova  rsi,rdi
   14002dc4d:	test   rsi,rsi
   14002dc50:	je     0x14002dc66
   14002dc52:	mov    rcx,QWORD PTR [rbx]
   14002dc55:	call   0x140007bd0
   14002dc5a:	inc    rdi
   14002dc5d:	lea    rbx,[rbx+0x8]
   14002dc61:	cmp    rdi,rsi
   14002dc64:	jne    0x14002dc52
   14002dc66:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dc6b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dc70:	add    rsp,0x20
   14002dc74:	pop    rdi
   14002dc75:	ret    
   14002dc76:	int3   
   14002dc77:	int3   
   14002dc78:	test   rcx,rcx
   14002dc7b:	je     0x14002dd7f
   14002dc81:	mov    QWORD PTR [rsp+0x8],rbx
   14002dc86:	mov    QWORD PTR [rsp+0x10],rbp
   14002dc8b:	push   rsi
   14002dc8c:	sub    rsp,0x20
   14002dc90:	mov    ebp,0x7
   14002dc95:	mov    rbx,rcx
   14002dc98:	mov    edx,ebp
   14002dc9a:	call   0x14002dc20
   14002dc9f:	lea    rcx,[rbx+0x38]
   14002dca3:	mov    edx,ebp
   14002dca5:	call   0x14002dc20
   14002dcaa:	lea    esi,[rbp+0x5]
   14002dcad:	mov    edx,esi
   14002dcaf:	lea    rcx,[rbx+0x70]
   14002dcb3:	call   0x14002dc20
   14002dcb8:	lea    rcx,[rbx+0xd0]
   14002dcbf:	mov    edx,esi
   14002dcc1:	call   0x14002dc20
   14002dcc6:	lea    rcx,[rbx+0x130]
   14002dccd:	lea    edx,[rbp-0x5]
   14002dcd0:	call   0x14002dc20
   14002dcd5:	mov    rcx,QWORD PTR [rbx+0x140]
   14002dcdc:	call   0x140007bd0
   14002dce1:	mov    rcx,QWORD PTR [rbx+0x148]
   14002dce8:	call   0x140007bd0
   14002dced:	mov    rcx,QWORD PTR [rbx+0x150]
   14002dcf4:	call   0x140007bd0
   14002dcf9:	lea    rcx,[rbx+0x160]
   14002dd00:	mov    edx,ebp
   14002dd02:	call   0x14002dc20
   14002dd07:	lea    rcx,[rbx+0x198]
   14002dd0e:	mov    edx,ebp
   14002dd10:	call   0x14002dc20
   14002dd15:	lea    rcx,[rbx+0x1d0]
   14002dd1c:	mov    edx,esi
   14002dd1e:	call   0x14002dc20
   14002dd23:	lea    rcx,[rbx+0x230]
   14002dd2a:	mov    edx,esi
   14002dd2c:	call   0x14002dc20
   14002dd31:	lea    rcx,[rbx+0x290]
   14002dd38:	lea    edx,[rbp-0x5]
   14002dd3b:	call   0x14002dc20
   14002dd40:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14002dd47:	call   0x140007bd0
   14002dd4c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14002dd53:	call   0x140007bd0
   14002dd58:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14002dd5f:	call   0x140007bd0
   14002dd64:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14002dd6b:	call   0x140007bd0
   14002dd70:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dd75:	mov    rbp,QWORD PTR [rsp+0x38]
   14002dd7a:	add    rsp,0x20
   14002dd7e:	pop    rsi
   14002dd7f:	ret    
   14002dd80:	sub    rsp,0x28
   14002dd84:	call   0x14002a248
   14002dd89:	lea    rdx,[rsp+0x30]
   14002dd8e:	mov    rcx,QWORD PTR [rax+0x90]
   14002dd95:	mov    QWORD PTR [rsp+0x30],rcx
   14002dd9a:	mov    rcx,rax
   14002dd9d:	call   0x14002bd30
   14002dda2:	mov    rax,QWORD PTR [rsp+0x30]
   14002dda7:	mov    rax,QWORD PTR [rax]
   14002ddaa:	add    rsp,0x28
   14002ddae:	ret    
   14002ddaf:	int3   
   14002ddb0:	rex push rbp
   14002ddb2:	push   r12
   14002ddb4:	push   r13
   14002ddb6:	push   r14
   14002ddb8:	push   r15
   14002ddba:	sub    rsp,0x60
   14002ddbe:	lea    rbp,[rsp+0x30]
   14002ddc3:	mov    QWORD PTR [rbp+0x60],rbx
   14002ddc7:	mov    QWORD PTR [rbp+0x68],rsi
   14002ddcb:	mov    QWORD PTR [rbp+0x70],rdi
   14002ddcf:	mov    rax,QWORD PTR [rip+0x18412]        # 0x1400461e8
   14002ddd6:	xor    rax,rbp
   14002ddd9:	mov    QWORD PTR [rbp+0x20],rax
   14002dddd:	mov    r13d,edx
   14002dde0:	mov    r15d,r9d
   14002dde3:	mov    rdx,rcx
   14002dde6:	mov    r12,r8
   14002dde9:	lea    rcx,[rbp+0x0]
   14002dded:	call   0x1400288e8
   14002ddf2:	mov    esi,DWORD PTR [rbp+0x88]
   14002ddf8:	test   esi,esi
   14002ddfa:	jne    0x14002de03
   14002ddfc:	mov    rax,QWORD PTR [rbp+0x8]
   14002de00:	mov    esi,DWORD PTR [rax+0xc]
   14002de03:	neg    DWORD PTR [rbp+0x90]
   14002de09:	mov    r9d,r15d
   14002de0c:	mov    r8,r12
   14002de0f:	mov    ecx,esi
   14002de11:	sbb    edx,edx
   14002de13:	and    DWORD PTR [rsp+0x28],0x0
   14002de18:	and    QWORD PTR [rsp+0x20],0x0
   14002de1e:	and    edx,0x8
   14002de21:	inc    edx
   14002de23:	call   QWORD PTR [rip+0x4297]        # 0x1400320c0
   14002de29:	movsxd r14,eax
   14002de2c:	test   eax,eax
   14002de2e:	jne    0x14002de37
   14002de30:	xor    edi,edi
   14002de32:	jmp    0x14002df28
   14002de37:	mov    rdi,r14
   14002de3a:	add    rdi,rdi
   14002de3d:	lea    rcx,[rdi+0x10]
   14002de41:	cmp    rdi,rcx
   14002de44:	sbb    rax,rax
   14002de47:	test   rcx,rax
   14002de4a:	je     0x14002dec1
   14002de4c:	lea    rcx,[rdi+0x10]
   14002de50:	cmp    rdi,rcx
   14002de53:	sbb    rax,rax
   14002de56:	and    rax,rcx
   14002de59:	cmp    rax,0x400
   14002de5f:	lea    rax,[rdi+0x10]
   14002de63:	ja     0x14002de9f
   14002de65:	cmp    rdi,rax
   14002de68:	sbb    rcx,rcx
   14002de6b:	and    rcx,rax
   14002de6e:	lea    rax,[rcx+0xf]
   14002de72:	cmp    rax,rcx
   14002de75:	ja     0x14002de81
   14002de77:	movabs rax,0xffffffffffffff0
   14002de81:	and    rax,0xfffffffffffffff0
   14002de85:	call   0x1400263c0
   14002de8a:	sub    rsp,rax
   14002de8d:	lea    rbx,[rsp+0x30]
   14002de92:	test   rbx,rbx
   14002de95:	je     0x14002df10
   14002de97:	mov    DWORD PTR [rbx],0xcccc
   14002de9d:	jmp    0x14002debb
   14002de9f:	cmp    rdi,rax
   14002dea2:	sbb    rcx,rcx
   14002dea5:	and    rcx,rax
   14002dea8:	call   0x140007bf0
   14002dead:	mov    rbx,rax
   14002deb0:	test   rax,rax
   14002deb3:	je     0x14002dec3
   14002deb5:	mov    DWORD PTR [rax],0xdddd
   14002debb:	add    rbx,0x10
   14002debf:	jmp    0x14002dec3
   14002dec1:	xor    ebx,ebx
   14002dec3:	test   rbx,rbx
   14002dec6:	je     0x14002df10
   14002dec8:	mov    r8,rdi
   14002decb:	xor    edx,edx
   14002decd:	mov    rcx,rbx
   14002ded0:	call   0x1400277b0
   14002ded5:	mov    r9d,r15d
   14002ded8:	mov    DWORD PTR [rsp+0x28],r14d
   14002dedd:	mov    r8,r12
   14002dee0:	mov    QWORD PTR [rsp+0x20],rbx
   14002dee5:	mov    edx,0x1
   14002deea:	mov    ecx,esi
   14002deec:	call   QWORD PTR [rip+0x41ce]        # 0x1400320c0
   14002def2:	test   eax,eax
   14002def4:	je     0x14002df10
   14002def6:	mov    r9,QWORD PTR [rbp+0x80]
   14002defd:	mov    r8d,eax
   14002df00:	mov    rdx,rbx
   14002df03:	mov    ecx,r13d
   14002df06:	call   QWORD PTR [rip+0x410c]        # 0x140032018
   14002df0c:	mov    edi,eax
   14002df0e:	jmp    0x14002df12
   14002df10:	xor    edi,edi
   14002df12:	test   rbx,rbx
   14002df15:	je     0x14002df28
   14002df17:	lea    rcx,[rbx-0x10]
   14002df1b:	cmp    DWORD PTR [rcx],0xdddd
   14002df21:	jne    0x14002df28
   14002df23:	call   0x140007bd0
   14002df28:	cmp    BYTE PTR [rbp+0x18],0x0
   14002df2c:	je     0x14002df39
   14002df2e:	mov    rax,QWORD PTR [rbp+0x0]
   14002df32:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002df39:	mov    eax,edi
   14002df3b:	mov    rcx,QWORD PTR [rbp+0x20]
   14002df3f:	xor    rcx,rbp
   14002df42:	call   0x140030a30
   14002df47:	mov    rbx,QWORD PTR [rbp+0x60]
   14002df4b:	mov    rsi,QWORD PTR [rbp+0x68]
   14002df4f:	mov    rdi,QWORD PTR [rbp+0x70]
   14002df53:	lea    rsp,[rbp+0x30]
   14002df57:	pop    r15
   14002df59:	pop    r14
   14002df5b:	pop    r13
   14002df5d:	pop    r12
   14002df5f:	pop    rbp
   14002df60:	ret    
   14002df61:	int3   
   14002df62:	int3   
   14002df63:	int3   
   14002df64:	lock inc DWORD PTR [rcx+0x10]
   14002df68:	mov    rax,QWORD PTR [rcx+0xe0]
   14002df6f:	test   rax,rax
   14002df72:	je     0x14002df77
   14002df74:	lock inc DWORD PTR [rax]
   14002df77:	mov    rax,QWORD PTR [rcx+0xf0]
   14002df7e:	test   rax,rax
   14002df81:	je     0x14002df86
   14002df83:	lock inc DWORD PTR [rax]
   14002df86:	mov    rax,QWORD PTR [rcx+0xe8]
   14002df8d:	test   rax,rax
   14002df90:	je     0x14002df95
   14002df92:	lock inc DWORD PTR [rax]
   14002df95:	mov    rax,QWORD PTR [rcx+0x100]
   14002df9c:	test   rax,rax
   14002df9f:	je     0x14002dfa4
   14002dfa1:	lock inc DWORD PTR [rax]
   14002dfa4:	lea    rax,[rcx+0x38]
   14002dfa8:	mov    r8d,0x6
   14002dfae:	lea    rdx,[rip+0x18503]        # 0x1400464b8
   14002dfb5:	cmp    QWORD PTR [rax-0x10],rdx
   14002dfb9:	je     0x14002dfc6
   14002dfbb:	mov    rdx,QWORD PTR [rax]
   14002dfbe:	test   rdx,rdx
   14002dfc1:	je     0x14002dfc6
   14002dfc3:	lock inc DWORD PTR [rdx]
   14002dfc6:	cmp    QWORD PTR [rax-0x18],0x0
   14002dfcb:	je     0x14002dfd9
   14002dfcd:	mov    rdx,QWORD PTR [rax-0x8]
   14002dfd1:	test   rdx,rdx
   14002dfd4:	je     0x14002dfd9
   14002dfd6:	lock inc DWORD PTR [rdx]
   14002dfd9:	add    rax,0x20
   14002dfdd:	sub    r8,0x1
   14002dfe1:	jne    0x14002dfae
   14002dfe3:	mov    rcx,QWORD PTR [rcx+0x120]
   14002dfea:	jmp    0x14002e168
   14002dfef:	int3   
   14002dff0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dff5:	mov    QWORD PTR [rsp+0x10],rbp
   14002dffa:	mov    QWORD PTR [rsp+0x18],rsi
   14002dfff:	push   rdi
   14002e000:	sub    rsp,0x20
   14002e004:	mov    rax,QWORD PTR [rcx+0xf8]
   14002e00b:	mov    rbx,rcx
   14002e00e:	test   rax,rax
   14002e011:	je     0x14002e08c
   14002e013:	lea    rcx,[rip+0x189e6]        # 0x140046a00
   14002e01a:	cmp    rax,rcx
   14002e01d:	je     0x14002e08c
   14002e01f:	mov    rax,QWORD PTR [rbx+0xe0]
   14002e026:	test   rax,rax
   14002e029:	je     0x14002e08c
   14002e02b:	cmp    DWORD PTR [rax],0x0
   14002e02e:	jne    0x14002e08c
   14002e030:	mov    rcx,QWORD PTR [rbx+0xf0]
   14002e037:	test   rcx,rcx
   14002e03a:	je     0x14002e052
   14002e03c:	cmp    DWORD PTR [rcx],0x0
   14002e03f:	jne    0x14002e052
   14002e041:	call   0x140007bd0
   14002e046:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002e04d:	call   0x14002daa8
   14002e052:	mov    rcx,QWORD PTR [rbx+0xe8]
   14002e059:	test   rcx,rcx
   14002e05c:	je     0x14002e074
   14002e05e:	cmp    DWORD PTR [rcx],0x0
   14002e061:	jne    0x14002e074
   14002e063:	call   0x140007bd0
   14002e068:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002e06f:	call   0x14002dbb4
   14002e074:	mov    rcx,QWORD PTR [rbx+0xe0]
   14002e07b:	call   0x140007bd0
   14002e080:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002e087:	call   0x140007bd0
   14002e08c:	mov    rax,QWORD PTR [rbx+0x100]
   14002e093:	test   rax,rax
   14002e096:	je     0x14002e0df
   14002e098:	cmp    DWORD PTR [rax],0x0
   14002e09b:	jne    0x14002e0df
   14002e09d:	mov    rcx,QWORD PTR [rbx+0x108]
   14002e0a4:	sub    rcx,0xfe
   14002e0ab:	call   0x140007bd0
   14002e0b0:	mov    rcx,QWORD PTR [rbx+0x110]
   14002e0b7:	mov    edi,0x80
   14002e0bc:	sub    rcx,rdi
   14002e0bf:	call   0x140007bd0
   14002e0c4:	mov    rcx,QWORD PTR [rbx+0x118]
   14002e0cb:	sub    rcx,rdi
   14002e0ce:	call   0x140007bd0
   14002e0d3:	mov    rcx,QWORD PTR [rbx+0x100]
   14002e0da:	call   0x140007bd0
   14002e0df:	mov    rcx,QWORD PTR [rbx+0x120]
   14002e0e6:	call   0x14002e190
   14002e0eb:	lea    rsi,[rbx+0x128]
   14002e0f2:	mov    ebp,0x6
   14002e0f7:	lea    rdi,[rbx+0x38]
   14002e0fb:	lea    rax,[rip+0x183b6]        # 0x1400464b8
   14002e102:	cmp    QWORD PTR [rdi-0x10],rax
   14002e106:	je     0x14002e122
   14002e108:	mov    rcx,QWORD PTR [rdi]
   14002e10b:	test   rcx,rcx
   14002e10e:	je     0x14002e122
   14002e110:	cmp    DWORD PTR [rcx],0x0
   14002e113:	jne    0x14002e122
   14002e115:	call   0x140007bd0
   14002e11a:	mov    rcx,QWORD PTR [rsi]
   14002e11d:	call   0x140007bd0
   14002e122:	cmp    QWORD PTR [rdi-0x18],0x0
   14002e127:	je     0x14002e13c
   14002e129:	mov    rcx,QWORD PTR [rdi-0x8]
   14002e12d:	test   rcx,rcx
   14002e130:	je     0x14002e13c
   14002e132:	cmp    DWORD PTR [rcx],0x0
   14002e135:	jne    0x14002e13c
   14002e137:	call   0x140007bd0
   14002e13c:	add    rsi,0x8
   14002e140:	add    rdi,0x20
   14002e144:	sub    rbp,0x1
   14002e148:	jne    0x14002e0fb
   14002e14a:	mov    rcx,rbx
   14002e14d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e152:	mov    rbp,QWORD PTR [rsp+0x38]
   14002e157:	mov    rsi,QWORD PTR [rsp+0x40]
   14002e15c:	add    rsp,0x20
   14002e160:	pop    rdi
   14002e161:	jmp    0x140007bd0
   14002e166:	int3   
   14002e167:	int3   
   14002e168:	test   rcx,rcx
   14002e16b:	je     0x14002e189
   14002e16d:	lea    rax,[rip+0xb52c]        # 0x1400396a0
   14002e174:	cmp    rcx,rax
   14002e177:	je     0x14002e189
   14002e179:	mov    eax,0x1
   14002e17e:	lock xadd DWORD PTR [rcx+0x15c],eax
   14002e186:	inc    eax
   14002e188:	ret    
   14002e189:	mov    eax,0x7fffffff
   14002e18e:	ret    
   14002e18f:	int3   
   14002e190:	test   rcx,rcx
   14002e193:	je     0x14002e1c5
   14002e195:	push   rbx
   14002e196:	sub    rsp,0x20
   14002e19a:	lea    rax,[rip+0xb4ff]        # 0x1400396a0
   14002e1a1:	mov    rbx,rcx
   14002e1a4:	cmp    rcx,rax
   14002e1a7:	je     0x14002e1c0
   14002e1a9:	mov    eax,DWORD PTR [rcx+0x15c]
   14002e1af:	test   eax,eax
   14002e1b1:	jne    0x14002e1c0
   14002e1b3:	call   0x14002dc78
   14002e1b8:	mov    rcx,rbx
   14002e1bb:	call   0x140007bd0
   14002e1c0:	add    rsp,0x20
   14002e1c4:	pop    rbx
   14002e1c5:	ret    
   14002e1c6:	int3   
   14002e1c7:	int3   
   14002e1c8:	test   rcx,rcx
   14002e1cb:	je     0x14002e1e7
   14002e1cd:	lea    rax,[rip+0xb4cc]        # 0x1400396a0
   14002e1d4:	cmp    rcx,rax
   14002e1d7:	je     0x14002e1e7
   14002e1d9:	or     eax,0xffffffff
   14002e1dc:	lock xadd DWORD PTR [rcx+0x15c],eax
   14002e1e4:	dec    eax
   14002e1e6:	ret    
   14002e1e7:	mov    eax,0x7fffffff
   14002e1ec:	ret    
   14002e1ed:	int3   
   14002e1ee:	int3   
   14002e1ef:	int3   
   14002e1f0:	sub    rsp,0x28
   14002e1f4:	test   rcx,rcx
   14002e1f7:	je     0x14002e293
   14002e1fd:	or     r9d,0xffffffff
   14002e201:	lock add DWORD PTR [rcx+0x10],r9d
   14002e206:	mov    rax,QWORD PTR [rcx+0xe0]
   14002e20d:	test   rax,rax
   14002e210:	je     0x14002e216
   14002e212:	lock add DWORD PTR [rax],r9d
   14002e216:	mov    rax,QWORD PTR [rcx+0xf0]
   14002e21d:	test   rax,rax
   14002e220:	je     0x14002e226
   14002e222:	lock add DWORD PTR [rax],r9d
   14002e226:	mov    rax,QWORD PTR [rcx+0xe8]
   14002e22d:	test   rax,rax
   14002e230:	je     0x14002e236
   14002e232:	lock add DWORD PTR [rax],r9d
   14002e236:	mov    rax,QWORD PTR [rcx+0x100]
   14002e23d:	test   rax,rax
   14002e240:	je     0x14002e246
   14002e242:	lock add DWORD PTR [rax],r9d
   14002e246:	lea    rax,[rcx+0x38]
   14002e24a:	mov    r8d,0x6
   14002e250:	lea    rdx,[rip+0x18261]        # 0x1400464b8
   14002e257:	cmp    QWORD PTR [rax-0x10],rdx
   14002e25b:	je     0x14002e269
   14002e25d:	mov    rdx,QWORD PTR [rax]
   14002e260:	test   rdx,rdx
   14002e263:	je     0x14002e269
   14002e265:	lock add DWORD PTR [rdx],r9d
   14002e269:	cmp    QWORD PTR [rax-0x18],0x0
   14002e26e:	je     0x14002e27d
   14002e270:	mov    rdx,QWORD PTR [rax-0x8]
   14002e274:	test   rdx,rdx
   14002e277:	je     0x14002e27d
   14002e279:	lock add DWORD PTR [rdx],r9d
   14002e27d:	add    rax,0x20
   14002e281:	sub    r8,0x1
   14002e285:	jne    0x14002e250
   14002e287:	mov    rcx,QWORD PTR [rcx+0x120]
   14002e28e:	call   0x14002e1c8
   14002e293:	add    rsp,0x28
   14002e297:	ret    
   14002e298:	mov    QWORD PTR [rsp+0x8],rbx
   14002e29d:	push   rdi
   14002e29e:	sub    rsp,0x20
   14002e2a2:	call   0x14002a248
   14002e2a7:	mov    rdi,rax
   14002e2aa:	mov    ecx,DWORD PTR [rip+0x187f0]        # 0x140046aa0
   14002e2b0:	test   DWORD PTR [rax+0x3a8],ecx
   14002e2b6:	je     0x14002e2c4
   14002e2b8:	mov    rbx,QWORD PTR [rax+0x90]
   14002e2bf:	test   rbx,rbx
   14002e2c2:	jne    0x14002e2fa
   14002e2c4:	mov    ecx,0x4
   14002e2c9:	call   0x14002af28
   14002e2ce:	nop
   14002e2cf:	lea    rcx,[rdi+0x90]
   14002e2d6:	mov    rdx,QWORD PTR [rip+0x1abf3]        # 0x140048ed0
   14002e2dd:	call   0x14002e308
   14002e2e2:	mov    rbx,rax
   14002e2e5:	mov    ecx,0x4
   14002e2ea:	call   0x14002af7c
   14002e2ef:	test   rbx,rbx
   14002e2f2:	jne    0x14002e2fa
   14002e2f4:	call   0x140029db8
   14002e2f9:	int3   
   14002e2fa:	mov    rax,rbx
   14002e2fd:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e302:	add    rsp,0x20
   14002e306:	pop    rdi
   14002e307:	ret    
   14002e308:	mov    QWORD PTR [rsp+0x8],rbx
   14002e30d:	push   rdi
   14002e30e:	sub    rsp,0x20
   14002e312:	mov    rdi,rdx
   14002e315:	test   rdx,rdx
   14002e318:	je     0x14002e363
   14002e31a:	test   rcx,rcx
   14002e31d:	je     0x14002e363
   14002e31f:	mov    rbx,QWORD PTR [rcx]
   14002e322:	cmp    rbx,rdx
   14002e325:	jne    0x14002e32c
   14002e327:	mov    rax,rdx
   14002e32a:	jmp    0x14002e365
   14002e32c:	mov    QWORD PTR [rcx],rdx
   14002e32f:	mov    rcx,rdx
   14002e332:	call   0x14002df64
   14002e337:	test   rbx,rbx
   14002e33a:	je     0x14002e35e
   14002e33c:	mov    rcx,rbx
   14002e33f:	call   0x14002e1f0
   14002e344:	cmp    DWORD PTR [rbx+0x10],0x0
   14002e348:	jne    0x14002e35e
   14002e34a:	lea    rax,[rip+0x17fff]        # 0x140046350
   14002e351:	cmp    rbx,rax
   14002e354:	je     0x14002e35e
   14002e356:	mov    rcx,rbx
   14002e359:	call   0x14002dff0
   14002e35e:	mov    rax,rdi
   14002e361:	jmp    0x14002e365
   14002e363:	xor    eax,eax
   14002e365:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e36a:	add    rsp,0x20
   14002e36e:	pop    rdi
   14002e36f:	ret    
   14002e370:	mov    QWORD PTR [rsp+0x10],rsi
   14002e375:	mov    QWORD PTR [rsp+0x18],rdi
   14002e37a:	mov    QWORD PTR [rsp+0x20],r14
   14002e37f:	push   rbp
   14002e380:	mov    rbp,rsp
   14002e383:	sub    rsp,0x80
   14002e38a:	mov    rax,QWORD PTR [rip+0x17e57]        # 0x1400461e8
   14002e391:	xor    rax,rsp
   14002e394:	mov    QWORD PTR [rbp-0x10],rax
   14002e398:	mov    r14d,edx
   14002e39b:	movsxd rdi,ecx
   14002e39e:	mov    rdx,r8
   14002e3a1:	lea    rcx,[rbp-0x38]
   14002e3a5:	call   0x1400288e8
   14002e3aa:	lea    eax,[rdi+0x1]
   14002e3ad:	cmp    eax,0x100
   14002e3b2:	ja     0x14002e3c4
   14002e3b4:	mov    rax,QWORD PTR [rbp-0x30]
   14002e3b8:	mov    rcx,QWORD PTR [rax]
   14002e3bb:	movzx  eax,WORD PTR [rcx+rdi*2]
   14002e3bf:	jmp    0x14002e446
   14002e3c4:	mov    esi,edi
   14002e3c6:	lea    rdx,[rbp-0x30]
   14002e3ca:	sar    esi,0x8
   14002e3cd:	movzx  ecx,sil
   14002e3d1:	call   0x14002e7cc
   14002e3d6:	mov    edx,0x1
   14002e3db:	test   eax,eax
   14002e3dd:	je     0x14002e3f1
   14002e3df:	mov    BYTE PTR [rbp-0x40],sil
   14002e3e3:	lea    r9d,[rdx+0x1]
   14002e3e7:	mov    BYTE PTR [rbp-0x3f],dil
   14002e3eb:	mov    BYTE PTR [rbp-0x3e],0x0
   14002e3ef:	jmp    0x14002e3fc
   14002e3f1:	mov    BYTE PTR [rbp-0x40],dil
   14002e3f5:	mov    r9d,edx
   14002e3f8:	mov    BYTE PTR [rbp-0x3f],0x0
   14002e3fc:	xor    eax,eax
   14002e3fe:	mov    DWORD PTR [rsp+0x30],edx
   14002e402:	mov    DWORD PTR [rbp-0x18],eax
   14002e405:	lea    r8,[rbp-0x40]
   14002e409:	mov    WORD PTR [rbp-0x14],ax
   14002e40d:	mov    rax,QWORD PTR [rbp-0x30]
   14002e411:	mov    ecx,DWORD PTR [rax+0xc]
   14002e414:	lea    rax,[rbp-0x18]
   14002e418:	mov    DWORD PTR [rsp+0x28],ecx
   14002e41c:	lea    rcx,[rbp-0x30]
   14002e420:	mov    QWORD PTR [rsp+0x20],rax
   14002e425:	call   0x14002ddb0
   14002e42a:	test   eax,eax
   14002e42c:	jne    0x14002e442
   14002e42e:	cmp    BYTE PTR [rbp-0x20],al
   14002e431:	je     0x14002e43e
   14002e433:	mov    rax,QWORD PTR [rbp-0x38]
   14002e437:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002e43e:	xor    eax,eax
   14002e440:	jmp    0x14002e45a
   14002e442:	movzx  eax,WORD PTR [rbp-0x18]
   14002e446:	and    eax,r14d
   14002e449:	cmp    BYTE PTR [rbp-0x20],0x0
   14002e44d:	je     0x14002e45a
   14002e44f:	mov    rcx,QWORD PTR [rbp-0x38]
   14002e453:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002e45a:	mov    rcx,QWORD PTR [rbp-0x10]
   14002e45e:	xor    rcx,rsp
   14002e461:	call   0x140030a30
   14002e466:	lea    r11,[rsp+0x80]
   14002e46e:	mov    rsi,QWORD PTR [r11+0x18]
   14002e472:	mov    rdi,QWORD PTR [r11+0x20]
   14002e476:	mov    r14,QWORD PTR [r11+0x28]
   14002e47a:	mov    rsp,r11
   14002e47d:	pop    rbp
   14002e47e:	ret    
   14002e47f:	int3   
   14002e480:	mov    rax,rsp
   14002e483:	mov    QWORD PTR [rax+0x8],rbx
   14002e487:	mov    QWORD PTR [rax+0x10],rbp
   14002e48b:	mov    QWORD PTR [rax+0x18],rsi
   14002e48f:	mov    QWORD PTR [rax+0x20],rdi
   14002e493:	push   r14
   14002e495:	xor    ebp,ebp
   14002e497:	lea    r14,[rip+0xd942]        # 0x14003bde0
   14002e49e:	mov    r10d,ebp
   14002e4a1:	mov    rsi,rcx
   14002e4a4:	mov    r11d,0xe3
   14002e4aa:	lea    eax,[r11+r10*1]
   14002e4ae:	mov    rdi,rsi
   14002e4b1:	cdq    
   14002e4b2:	mov    ebx,0x55
   14002e4b7:	sub    eax,edx
   14002e4b9:	sar    eax,1
   14002e4bb:	movsxd r8,eax
   14002e4be:	mov    rcx,r8
   14002e4c1:	shl    rcx,0x4
   14002e4c5:	mov    r9,QWORD PTR [rcx+r14*1]
   14002e4c9:	sub    rdi,r9
   14002e4cc:	movzx  edx,WORD PTR [rdi+r9*1]
   14002e4d1:	lea    ecx,[rdx-0x41]
   14002e4d4:	cmp    cx,0x19
   14002e4d8:	ja     0x14002e4de
   14002e4da:	add    dx,0x20
   14002e4de:	movzx  ecx,WORD PTR [r9]
   14002e4e2:	lea    eax,[rcx-0x41]
   14002e4e5:	cmp    ax,0x19
   14002e4e9:	ja     0x14002e4ef
   14002e4eb:	add    cx,0x20
   14002e4ef:	add    r9,0x2
   14002e4f3:	sub    rbx,0x1
   14002e4f7:	je     0x14002e503
   14002e4f9:	test   dx,dx
   14002e4fc:	je     0x14002e503
   14002e4fe:	cmp    dx,cx
   14002e501:	je     0x14002e4cc
   14002e503:	movzx  eax,cx
   14002e506:	movzx  ecx,dx
   14002e509:	sub    ecx,eax
   14002e50b:	je     0x14002e525
   14002e50d:	test   ecx,ecx
   14002e50f:	jns    0x14002e517
   14002e511:	lea    r11d,[r8-0x1]
   14002e515:	jmp    0x14002e51b
   14002e517:	lea    r10d,[r8+0x1]
   14002e51b:	cmp    r10d,r11d
   14002e51e:	jle    0x14002e4aa
   14002e520:	or     eax,0xffffffff
   14002e523:	jmp    0x14002e530
   14002e525:	mov    rax,r8
   14002e528:	add    rax,rax
   14002e52b:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14002e530:	mov    rbx,QWORD PTR [rsp+0x10]
   14002e535:	mov    rbp,QWORD PTR [rsp+0x18]
   14002e53a:	mov    rsi,QWORD PTR [rsp+0x20]
   14002e53f:	mov    rdi,QWORD PTR [rsp+0x28]
   14002e544:	pop    r14
   14002e546:	ret    
   14002e547:	int3   
   14002e548:	sub    rsp,0x28
   14002e54c:	test   rcx,rcx
   14002e54f:	je     0x14002e573
   14002e551:	call   0x14002e480
   14002e556:	test   eax,eax
   14002e558:	js     0x14002e573
   14002e55a:	cdqe   
   14002e55c:	cmp    rax,0xe4
   14002e562:	jae    0x14002e573
   14002e564:	add    rax,rax
   14002e567:	lea    rcx,[rip+0xbe22]        # 0x14003a390
   14002e56e:	mov    eax,DWORD PTR [rcx+rax*8]
   14002e571:	jmp    0x14002e575
   14002e573:	xor    eax,eax
   14002e575:	add    rsp,0x28
   14002e579:	ret    
   14002e57a:	int3   
   14002e57b:	int3   
   14002e57c:	mov    QWORD PTR [rsp+0x8],rbx
   14002e581:	push   rdi
   14002e582:	sub    rsp,0x20
   14002e586:	mov    rbx,rcx
   14002e589:	test   rcx,rcx
   14002e58c:	jne    0x14002e5a3
   14002e58e:	call   0x14002a494
   14002e593:	mov    DWORD PTR [rax],0x16
   14002e599:	call   0x1400281ac
   14002e59e:	or     eax,0xffffffff
   14002e5a1:	jmp    0x14002e5f4
   14002e5a3:	or     edi,0xffffffff
   14002e5a6:	mov    eax,DWORD PTR [rcx+0x14]
   14002e5a9:	shr    eax,0xd
   14002e5ac:	test   al,0x1
   14002e5ae:	je     0x14002e5ea
   14002e5b0:	call   0x140028734
   14002e5b5:	mov    rcx,rbx
   14002e5b8:	mov    edi,eax
   14002e5ba:	call   0x14002ac3c
   14002e5bf:	mov    rcx,rbx
   14002e5c2:	call   0x14002ba28
   14002e5c7:	mov    ecx,eax
   14002e5c9:	call   0x14002f3bc
   14002e5ce:	test   eax,eax
   14002e5d0:	jns    0x14002e5d7
   14002e5d2:	or     edi,0xffffffff
   14002e5d5:	jmp    0x14002e5ea
   14002e5d7:	mov    rcx,QWORD PTR [rbx+0x28]
   14002e5db:	test   rcx,rcx
   14002e5de:	je     0x14002e5ea
   14002e5e0:	call   0x140007bd0
   14002e5e5:	and    QWORD PTR [rbx+0x28],0x0
   14002e5ea:	mov    rcx,rbx
   14002e5ed:	call   0x14002f51c
   14002e5f2:	mov    eax,edi
   14002e5f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e5f9:	add    rsp,0x20
   14002e5fd:	pop    rdi
   14002e5fe:	ret    
   14002e5ff:	int3   
   14002e600:	mov    QWORD PTR [rsp+0x10],rbx
   14002e605:	mov    QWORD PTR [rsp+0x8],rcx
   14002e60a:	push   rdi
   14002e60b:	sub    rsp,0x20
   14002e60f:	mov    rbx,rcx
   14002e612:	xor    eax,eax
   14002e614:	test   rcx,rcx
   14002e617:	setne  al
   14002e61a:	test   eax,eax
   14002e61c:	jne    0x14002e633
   14002e61e:	call   0x14002a494
   14002e623:	mov    DWORD PTR [rax],0x16
   14002e629:	call   0x1400281ac
   14002e62e:	or     eax,0xffffffff
   14002e631:	jmp    0x14002e65e
   14002e633:	mov    eax,DWORD PTR [rcx+0x14]
   14002e636:	shr    eax,0xc
   14002e639:	test   al,0x1
   14002e63b:	je     0x14002e644
   14002e63d:	call   0x14002f51c
   14002e642:	jmp    0x14002e62e
   14002e644:	call   0x14002871c
   14002e649:	nop
   14002e64a:	mov    rcx,rbx
   14002e64d:	call   0x14002e57c
   14002e652:	mov    edi,eax
   14002e654:	mov    rcx,rbx
   14002e657:	call   0x140028728
   14002e65c:	mov    eax,edi
   14002e65e:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e663:	add    rsp,0x20
   14002e667:	pop    rdi
   14002e668:	ret    
   14002e669:	int3   
   14002e66a:	int3   
   14002e66b:	int3   
   14002e66c:	sub    rsp,0x28
   14002e670:	cmp    ecx,0xfffffffe
   14002e673:	jne    0x14002e682
   14002e675:	call   0x14002a494
   14002e67a:	mov    DWORD PTR [rax],0x9
   14002e680:	jmp    0x14002e6c4
   14002e682:	test   ecx,ecx
   14002e684:	js     0x14002e6b4
   14002e686:	cmp    ecx,DWORD PTR [rip+0x1a614]        # 0x140048ca0
   14002e68c:	jae    0x14002e6b4
   14002e68e:	movsxd rcx,ecx
   14002e691:	lea    rdx,[rip+0x1a208]        # 0x1400488a0
   14002e698:	mov    rax,rcx
   14002e69b:	and    ecx,0x3f
   14002e69e:	sar    rax,0x6
   14002e6a2:	shl    rcx,0x6
   14002e6a6:	mov    rax,QWORD PTR [rdx+rax*8]
   14002e6aa:	movzx  eax,BYTE PTR [rax+rcx*1+0x38]
   14002e6af:	and    eax,0x40
   14002e6b2:	jmp    0x14002e6c6
   14002e6b4:	call   0x14002a494
   14002e6b9:	mov    DWORD PTR [rax],0x9
   14002e6bf:	call   0x1400281ac
   14002e6c4:	xor    eax,eax
   14002e6c6:	add    rsp,0x28
   14002e6ca:	ret    
   14002e6cb:	int3   
   14002e6cc:	mov    QWORD PTR [rsp+0x8],rbx
   14002e6d1:	mov    QWORD PTR [rsp+0x10],rsi
   14002e6d6:	push   rdi
   14002e6d7:	sub    rsp,0x20
   14002e6db:	movsxd rbx,ecx
   14002e6de:	mov    edi,r8d
   14002e6e1:	mov    ecx,ebx
   14002e6e3:	mov    rsi,rdx
   14002e6e6:	call   0x14002da30
   14002e6eb:	cmp    rax,0xffffffffffffffff
   14002e6ef:	jne    0x14002e702
   14002e6f1:	call   0x14002a494
   14002e6f6:	mov    DWORD PTR [rax],0x9
   14002e6fc:	or     rax,0xffffffffffffffff
   14002e700:	jmp    0x14002e755
   14002e702:	mov    r9d,edi
   14002e705:	lea    r8,[rsp+0x48]
   14002e70a:	mov    rdx,rsi
   14002e70d:	mov    rcx,rax
   14002e710:	call   QWORD PTR [rip+0x38fa]        # 0x140032010
   14002e716:	test   eax,eax
   14002e718:	jne    0x14002e729
   14002e71a:	call   QWORD PTR [rip+0x3ae8]        # 0x140032208
   14002e720:	mov    ecx,eax
   14002e722:	call   0x14002a424
   14002e727:	jmp    0x14002e6fc
   14002e729:	mov    rax,QWORD PTR [rsp+0x48]
   14002e72e:	cmp    rax,0xffffffffffffffff
   14002e732:	je     0x14002e6fc
   14002e734:	mov    rdx,rbx
   14002e737:	lea    r8,[rip+0x1a162]        # 0x1400488a0
   14002e73e:	and    edx,0x3f
   14002e741:	mov    rcx,rbx
   14002e744:	sar    rcx,0x6
   14002e748:	shl    rdx,0x6
   14002e74c:	mov    rcx,QWORD PTR [r8+rcx*8]
   14002e750:	and    BYTE PTR [rcx+rdx*1+0x38],0xfd
   14002e755:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e75a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002e75f:	add    rsp,0x20
   14002e763:	pop    rdi
   14002e764:	ret    
   14002e765:	int3   
   14002e766:	int3   
   14002e767:	int3   
   14002e768:	jmp    0x14002e6cc
   14002e76d:	int3   
   14002e76e:	int3   
   14002e76f:	int3   
   14002e770:	mov    WORD PTR [rsp+0x8],cx
   14002e775:	sub    rsp,0x38
   14002e779:	mov    rcx,QWORD PTR [rip+0x18328]        # 0x140046aa8
   14002e780:	cmp    rcx,0xfffffffffffffffe
   14002e784:	jne    0x14002e792
   14002e786:	call   0x14002f560
   14002e78b:	mov    rcx,QWORD PTR [rip+0x18316]        # 0x140046aa8
   14002e792:	cmp    rcx,0xffffffffffffffff
   14002e796:	jne    0x14002e79f
   14002e798:	mov    eax,0xffff
   14002e79d:	jmp    0x14002e7c4
   14002e79f:	and    QWORD PTR [rsp+0x20],0x0
   14002e7a5:	lea    r9,[rsp+0x48]
   14002e7aa:	mov    r8d,0x1
   14002e7b0:	lea    rdx,[rsp+0x40]
   14002e7b5:	call   QWORD PTR [rip+0x384d]        # 0x140032008
   14002e7bb:	test   eax,eax
   14002e7bd:	je     0x14002e798
   14002e7bf:	movzx  eax,WORD PTR [rsp+0x40]
   14002e7c4:	add    rsp,0x38
   14002e7c8:	ret    
   14002e7c9:	int3   
   14002e7ca:	int3   
   14002e7cb:	int3   
   14002e7cc:	rex push rbx
   14002e7ce:	sub    rsp,0x40
   14002e7d2:	mov    ebx,ecx
   14002e7d4:	lea    rcx,[rsp+0x20]
   14002e7d9:	call   0x1400288e8
   14002e7de:	mov    rax,QWORD PTR [rsp+0x28]
   14002e7e3:	movzx  edx,bl
   14002e7e6:	mov    rcx,QWORD PTR [rax]
   14002e7e9:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002e7ed:	and    eax,0x8000
   14002e7f2:	cmp    BYTE PTR [rsp+0x38],0x0
   14002e7f7:	je     0x14002e805
   14002e7f9:	mov    rcx,QWORD PTR [rsp+0x20]
   14002e7fe:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002e805:	add    rsp,0x40
   14002e809:	pop    rbx
   14002e80a:	ret    
   14002e80b:	int3   
   14002e80c:	rex push rbp
   14002e80e:	push   r12
   14002e810:	push   r13
   14002e812:	push   r14
   14002e814:	push   r15
   14002e816:	sub    rsp,0x60
   14002e81a:	lea    rbp,[rsp+0x50]
   14002e81f:	mov    QWORD PTR [rbp+0x40],rbx
   14002e823:	mov    QWORD PTR [rbp+0x48],rsi
   14002e827:	mov    QWORD PTR [rbp+0x50],rdi
   14002e82b:	mov    rax,QWORD PTR [rip+0x179b6]        # 0x1400461e8
   14002e832:	xor    rax,rbp
   14002e835:	mov    QWORD PTR [rbp+0x8],rax
   14002e839:	movsxd rbx,DWORD PTR [rbp+0x60]
   14002e83d:	mov    r15,r9
   14002e840:	mov    QWORD PTR [rbp+0x0],rdx
   14002e844:	mov    r13d,r8d
   14002e847:	mov    rdi,rcx
   14002e84a:	test   ebx,ebx
   14002e84c:	jle    0x14002e862
   14002e84e:	mov    rdx,rbx
   14002e851:	mov    rcx,r9
   14002e854:	call   0x14002f5bc
   14002e859:	cmp    eax,ebx
   14002e85b:	lea    ebx,[rax+0x1]
   14002e85e:	jl     0x14002e862
   14002e860:	mov    ebx,eax
   14002e862:	mov    r14d,DWORD PTR [rbp+0x78]
   14002e866:	test   r14d,r14d
   14002e869:	jne    0x14002e872
   14002e86b:	mov    rax,QWORD PTR [rdi]
   14002e86e:	mov    r14d,DWORD PTR [rax+0xc]
   14002e872:	neg    DWORD PTR [rbp+0x80]
   14002e878:	mov    r9d,ebx
   14002e87b:	mov    r8,r15
   14002e87e:	mov    ecx,r14d
   14002e881:	sbb    edx,edx
   14002e883:	and    DWORD PTR [rsp+0x28],0x0
   14002e888:	and    QWORD PTR [rsp+0x20],0x0
   14002e88e:	and    edx,0x8
   14002e891:	inc    edx
   14002e893:	call   QWORD PTR [rip+0x3827]        # 0x1400320c0
   14002e899:	movsxd r12,eax
   14002e89c:	test   eax,eax
   14002e89e:	je     0x14002eb1f
   14002e8a4:	mov    rdx,r12
   14002e8a7:	movabs r8,0xffffffffffffff0
   14002e8b1:	add    rdx,rdx
   14002e8b4:	lea    rcx,[rdx+0x10]
   14002e8b8:	cmp    rdx,rcx
   14002e8bb:	sbb    rax,rax
   14002e8be:	test   rcx,rax
   14002e8c1:	je     0x14002e935
   14002e8c3:	lea    rcx,[rdx+0x10]
   14002e8c7:	cmp    rdx,rcx
   14002e8ca:	sbb    rax,rax
   14002e8cd:	and    rax,rcx
   14002e8d0:	cmp    rax,0x400
   14002e8d6:	lea    rax,[rdx+0x10]
   14002e8da:	ja     0x14002e913
   14002e8dc:	cmp    rdx,rax
   14002e8df:	sbb    rcx,rcx
   14002e8e2:	and    rcx,rax
   14002e8e5:	lea    rax,[rcx+0xf]
   14002e8e9:	cmp    rax,rcx
   14002e8ec:	ja     0x14002e8f1
   14002e8ee:	mov    rax,r8
   14002e8f1:	and    rax,0xfffffffffffffff0
   14002e8f5:	call   0x1400263c0
   14002e8fa:	sub    rsp,rax
   14002e8fd:	lea    rsi,[rsp+0x50]
   14002e902:	test   rsi,rsi
   14002e905:	je     0x14002eb05
   14002e90b:	mov    DWORD PTR [rsi],0xcccc
   14002e911:	jmp    0x14002e92f
   14002e913:	cmp    rdx,rax
   14002e916:	sbb    rcx,rcx
   14002e919:	and    rcx,rax
   14002e91c:	call   0x140007bf0
   14002e921:	mov    rsi,rax
   14002e924:	test   rax,rax
   14002e927:	je     0x14002e937
   14002e929:	mov    DWORD PTR [rax],0xdddd
   14002e92f:	add    rsi,0x10
   14002e933:	jmp    0x14002e937
   14002e935:	xor    esi,esi
   14002e937:	test   rsi,rsi
   14002e93a:	je     0x14002eb05
   14002e940:	mov    DWORD PTR [rsp+0x28],r12d
   14002e945:	mov    r9d,ebx
   14002e948:	mov    r8,r15
   14002e94b:	mov    QWORD PTR [rsp+0x20],rsi
   14002e950:	mov    edx,0x1
   14002e955:	mov    ecx,r14d
   14002e958:	call   QWORD PTR [rip+0x3762]        # 0x1400320c0
   14002e95e:	test   eax,eax
   14002e960:	je     0x14002eb05
   14002e966:	and    QWORD PTR [rsp+0x40],0x0
   14002e96c:	mov    r9d,r12d
   14002e96f:	and    QWORD PTR [rsp+0x38],0x0
   14002e975:	mov    r8,rsi
   14002e978:	and    QWORD PTR [rsp+0x30],0x0
   14002e97e:	mov    edx,r13d
   14002e981:	mov    r15,QWORD PTR [rbp+0x0]
   14002e985:	and    DWORD PTR [rsp+0x28],0x0
   14002e98a:	mov    rcx,r15
   14002e98d:	and    QWORD PTR [rsp+0x20],0x0
   14002e993:	call   0x14002a92c
   14002e998:	movsxd rdi,eax
   14002e99b:	test   eax,eax
   14002e99d:	je     0x14002eb05
   14002e9a3:	mov    r8d,0x400
   14002e9a9:	test   r8d,r13d
   14002e9ac:	je     0x14002ea00
   14002e9ae:	mov    eax,DWORD PTR [rbp+0x70]
   14002e9b1:	test   eax,eax
   14002e9b3:	je     0x14002eb07
   14002e9b9:	cmp    edi,eax
   14002e9bb:	jg     0x14002eb05
   14002e9c1:	and    QWORD PTR [rsp+0x40],0x0
   14002e9c7:	mov    r9d,r12d
   14002e9ca:	and    QWORD PTR [rsp+0x38],0x0
   14002e9d0:	mov    r8,rsi
   14002e9d3:	and    QWORD PTR [rsp+0x30],0x0
   14002e9d9:	mov    edx,r13d
   14002e9dc:	mov    DWORD PTR [rsp+0x28],eax
   14002e9e0:	mov    rcx,r15
   14002e9e3:	mov    rax,QWORD PTR [rbp+0x68]
   14002e9e7:	mov    QWORD PTR [rsp+0x20],rax
   14002e9ec:	call   0x14002a92c
   14002e9f1:	mov    edi,eax
   14002e9f3:	test   eax,eax
   14002e9f5:	jne    0x14002eb07
   14002e9fb:	jmp    0x14002eb05
   14002ea00:	mov    rdx,rdi
   14002ea03:	add    rdx,rdx
   14002ea06:	lea    rcx,[rdx+0x10]
   14002ea0a:	cmp    rdx,rcx
   14002ea0d:	sbb    rax,rax
   14002ea10:	test   rcx,rax
   14002ea13:	je     0x14002ea8b
   14002ea15:	lea    rcx,[rdx+0x10]
   14002ea19:	cmp    rdx,rcx
   14002ea1c:	sbb    rax,rax
   14002ea1f:	and    rax,rcx
   14002ea22:	cmp    rax,r8
   14002ea25:	lea    rax,[rdx+0x10]
   14002ea29:	ja     0x14002ea69
   14002ea2b:	cmp    rdx,rax
   14002ea2e:	sbb    rcx,rcx
   14002ea31:	and    rcx,rax
   14002ea34:	lea    rax,[rcx+0xf]
   14002ea38:	cmp    rax,rcx
   14002ea3b:	ja     0x14002ea47
   14002ea3d:	movabs rax,0xffffffffffffff0
   14002ea47:	and    rax,0xfffffffffffffff0
   14002ea4b:	call   0x1400263c0
   14002ea50:	sub    rsp,rax
   14002ea53:	lea    rbx,[rsp+0x50]
   14002ea58:	test   rbx,rbx
   14002ea5b:	je     0x14002eb05
   14002ea61:	mov    DWORD PTR [rbx],0xcccc
   14002ea67:	jmp    0x14002ea85
   14002ea69:	cmp    rdx,rax
   14002ea6c:	sbb    rcx,rcx
   14002ea6f:	and    rcx,rax
   14002ea72:	call   0x140007bf0
   14002ea77:	mov    rbx,rax
   14002ea7a:	test   rax,rax
   14002ea7d:	je     0x14002ea8d
   14002ea7f:	mov    DWORD PTR [rax],0xdddd
   14002ea85:	add    rbx,0x10
   14002ea89:	jmp    0x14002ea8d
   14002ea8b:	xor    ebx,ebx
   14002ea8d:	test   rbx,rbx
   14002ea90:	je     0x14002eb05
   14002ea92:	and    QWORD PTR [rsp+0x40],0x0
   14002ea98:	mov    r9d,r12d
   14002ea9b:	and    QWORD PTR [rsp+0x38],0x0
   14002eaa1:	mov    r8,rsi
   14002eaa4:	and    QWORD PTR [rsp+0x30],0x0
   14002eaaa:	mov    edx,r13d
   14002eaad:	mov    DWORD PTR [rsp+0x28],edi
   14002eab1:	mov    rcx,r15
   14002eab4:	mov    QWORD PTR [rsp+0x20],rbx
   14002eab9:	call   0x14002a92c
   14002eabe:	test   eax,eax
   14002eac0:	je     0x14002eaf4
   14002eac2:	and    QWORD PTR [rsp+0x38],0x0
   14002eac8:	xor    edx,edx
   14002eaca:	and    QWORD PTR [rsp+0x30],rdx
   14002eacf:	mov    r9d,edi
   14002ead2:	mov    eax,DWORD PTR [rbp+0x70]
   14002ead5:	mov    r8,rbx
   14002ead8:	mov    ecx,r14d
   14002eadb:	test   eax,eax
   14002eadd:	jne    0x14002eb45
   14002eadf:	and    DWORD PTR [rsp+0x28],edx
   14002eae3:	and    QWORD PTR [rsp+0x20],rdx
   14002eae8:	call   QWORD PTR [rip+0x35ca]        # 0x1400320b8
   14002eaee:	mov    edi,eax
   14002eaf0:	test   eax,eax
   14002eaf2:	jne    0x14002eb54
   14002eaf4:	lea    rcx,[rbx-0x10]
   14002eaf8:	cmp    DWORD PTR [rcx],0xdddd
   14002eafe:	jne    0x14002eb05
   14002eb00:	call   0x140007bd0
   14002eb05:	xor    edi,edi
   14002eb07:	test   rsi,rsi
   14002eb0a:	je     0x14002eb1d
   14002eb0c:	lea    rcx,[rsi-0x10]
   14002eb10:	cmp    DWORD PTR [rcx],0xdddd
   14002eb16:	jne    0x14002eb1d
   14002eb18:	call   0x140007bd0
   14002eb1d:	mov    eax,edi
   14002eb1f:	mov    rcx,QWORD PTR [rbp+0x8]
   14002eb23:	xor    rcx,rbp
   14002eb26:	call   0x140030a30
   14002eb2b:	mov    rbx,QWORD PTR [rbp+0x40]
   14002eb2f:	mov    rsi,QWORD PTR [rbp+0x48]
   14002eb33:	mov    rdi,QWORD PTR [rbp+0x50]
   14002eb37:	lea    rsp,[rbp+0x10]
   14002eb3b:	pop    r15
   14002eb3d:	pop    r14
   14002eb3f:	pop    r13
   14002eb41:	pop    r12
   14002eb43:	pop    rbp
   14002eb44:	ret    
   14002eb45:	mov    DWORD PTR [rsp+0x28],eax
   14002eb49:	mov    rax,QWORD PTR [rbp+0x68]
   14002eb4d:	mov    QWORD PTR [rsp+0x20],rax
   14002eb52:	jmp    0x14002eae8
   14002eb54:	lea    rcx,[rbx-0x10]
   14002eb58:	cmp    DWORD PTR [rcx],0xdddd
   14002eb5e:	jne    0x14002eb07
   14002eb60:	call   0x140007bd0
   14002eb65:	jmp    0x14002eb07
   14002eb67:	int3   
   14002eb68:	mov    QWORD PTR [rsp+0x8],rbx
   14002eb6d:	mov    QWORD PTR [rsp+0x10],rsi
   14002eb72:	push   rdi
   14002eb73:	sub    rsp,0x70
   14002eb77:	mov    rsi,rdx
   14002eb7a:	mov    rbx,r9
   14002eb7d:	mov    rdx,rcx
   14002eb80:	mov    edi,r8d
   14002eb83:	lea    rcx,[rsp+0x50]
   14002eb88:	call   0x1400288e8
   14002eb8d:	mov    eax,DWORD PTR [rsp+0xc0]
   14002eb94:	lea    rcx,[rsp+0x58]
   14002eb99:	mov    DWORD PTR [rsp+0x40],eax
   14002eb9d:	mov    r9,rbx
   14002eba0:	mov    eax,DWORD PTR [rsp+0xb8]
   14002eba7:	mov    r8d,edi
   14002ebaa:	mov    DWORD PTR [rsp+0x38],eax
   14002ebae:	mov    rdx,rsi
   14002ebb1:	mov    eax,DWORD PTR [rsp+0xb0]
   14002ebb8:	mov    DWORD PTR [rsp+0x30],eax
   14002ebbc:	mov    rax,QWORD PTR [rsp+0xa8]
   14002ebc4:	mov    QWORD PTR [rsp+0x28],rax
   14002ebc9:	mov    eax,DWORD PTR [rsp+0xa0]
   14002ebd0:	mov    DWORD PTR [rsp+0x20],eax
   14002ebd4:	call   0x14002e80c
   14002ebd9:	cmp    BYTE PTR [rsp+0x68],0x0
   14002ebde:	je     0x14002ebec
   14002ebe0:	mov    rcx,QWORD PTR [rsp+0x50]
   14002ebe5:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002ebec:	lea    r11,[rsp+0x70]
   14002ebf1:	mov    rbx,QWORD PTR [r11+0x10]
   14002ebf5:	mov    rsi,QWORD PTR [r11+0x18]
   14002ebf9:	mov    rsp,r11
   14002ebfc:	pop    rdi
   14002ebfd:	ret    
   14002ebfe:	int3   
   14002ebff:	int3   
   14002ec00:	cmp    rdx,rcx
   14002ec03:	jbe    0x14002eccb
   14002ec09:	mov    QWORD PTR [rsp+0x20],rbp
   14002ec0e:	push   rdi
   14002ec0f:	push   r14
   14002ec11:	push   r15
   14002ec13:	sub    rsp,0x20
   14002ec17:	mov    QWORD PTR [rsp+0x40],rbx
   14002ec1c:	mov    r14,r9
   14002ec1f:	mov    QWORD PTR [rsp+0x48],rsi
   14002ec24:	mov    rbp,r8
   14002ec27:	mov    QWORD PTR [rsp+0x50],r12
   14002ec2c:	mov    rdi,rdx
   14002ec2f:	lea    r12,[rcx+r8*1]
   14002ec33:	mov    r15,rcx
   14002ec36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002ec40:	mov    rbx,r15
   14002ec43:	mov    rsi,r12
   14002ec46:	cmp    r12,rdi
   14002ec49:	ja     0x14002ec70
   14002ec4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002ec50:	mov    rcx,r14
   14002ec53:	call   QWORD PTR [rip+0x3987]        # 0x1400325e0
   14002ec59:	mov    rdx,rbx
   14002ec5c:	mov    rcx,rsi
   14002ec5f:	call   r14
   14002ec62:	test   eax,eax
   14002ec64:	cmovg  rbx,rsi
   14002ec68:	add    rsi,rbp
   14002ec6b:	cmp    rsi,rdi
   14002ec6e:	jbe    0x14002ec50
   14002ec70:	mov    r8,rbp
   14002ec73:	mov    rax,rdi
   14002ec76:	cmp    rbx,rdi
   14002ec79:	je     0x14002eca6
   14002ec7b:	test   rbp,rbp
   14002ec7e:	je     0x14002eca6
   14002ec80:	sub    rbx,rdi
   14002ec83:	nop    DWORD PTR [rax+0x0]
   14002ec87:	nop    WORD PTR [rax+rax*1+0x0]
   14002ec90:	movzx  ecx,BYTE PTR [rax]
   14002ec93:	movzx  edx,BYTE PTR [rbx+rax*1]
   14002ec97:	mov    BYTE PTR [rbx+rax*1],cl
   14002ec9a:	mov    BYTE PTR [rax],dl
   14002ec9c:	lea    rax,[rax+0x1]
   14002eca0:	sub    r8,0x1
   14002eca4:	jne    0x14002ec90
   14002eca6:	sub    rdi,rbp
   14002eca9:	cmp    rdi,r15
   14002ecac:	ja     0x14002ec40
   14002ecae:	mov    r12,QWORD PTR [rsp+0x50]
   14002ecb3:	mov    rsi,QWORD PTR [rsp+0x48]
   14002ecb8:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ecbd:	mov    rbp,QWORD PTR [rsp+0x58]
   14002ecc2:	add    rsp,0x20
   14002ecc6:	pop    r15
   14002ecc8:	pop    r14
   14002ecca:	pop    rdi
   14002eccb:	ret    
   14002eccc:	int3   
   14002eccd:	int3   
   14002ecce:	int3   
   14002eccf:	int3   
   14002ecd0:	rex push rbp
   14002ecd2:	push   r12
   14002ecd4:	push   r14
   14002ecd6:	sub    rsp,0x440
   14002ecdd:	mov    rax,QWORD PTR [rip+0x17504]        # 0x1400461e8
   14002ece4:	xor    rax,rsp
   14002ece7:	mov    QWORD PTR [rsp+0x400],rax
   14002ecef:	mov    r14,r9
   14002ecf2:	mov    rbp,r8
   14002ecf5:	mov    r12,rcx
   14002ecf8:	test   rcx,rcx
   14002ecfb:	jne    0x14002ed17
   14002ecfd:	test   rdx,rdx
   14002ed00:	je     0x14002ed17
   14002ed02:	call   0x14002a494
   14002ed07:	mov    DWORD PTR [rax],0x16
   14002ed0d:	call   0x1400281ac
   14002ed12:	jmp    0x14002efe7
   14002ed17:	test   r8,r8
   14002ed1a:	je     0x14002ed02
   14002ed1c:	test   r9,r9
   14002ed1f:	je     0x14002ed02
   14002ed21:	cmp    rdx,0x2
   14002ed25:	jb     0x14002efe7
   14002ed2b:	mov    QWORD PTR [rsp+0x438],rbx
   14002ed33:	mov    QWORD PTR [rsp+0x430],rsi
   14002ed3b:	mov    QWORD PTR [rsp+0x428],rdi
   14002ed43:	mov    QWORD PTR [rsp+0x420],r13
   14002ed4b:	mov    QWORD PTR [rsp+0x418],r15
   14002ed53:	lea    r15,[rdx-0x1]
   14002ed57:	imul   r15,rbp
   14002ed5b:	add    r15,rcx
   14002ed5e:	xor    r13d,r13d
   14002ed61:	xor    edx,edx
   14002ed63:	mov    rax,r15
   14002ed66:	sub    rax,r12
   14002ed69:	div    rbp
   14002ed6c:	lea    rsi,[rax+0x1]
   14002ed70:	cmp    rsi,0x8
   14002ed74:	ja     0x14002eda0
   14002ed76:	mov    r9,r14
   14002ed79:	mov    r8,rbp
   14002ed7c:	mov    rdx,r15
   14002ed7f:	mov    rcx,r12
   14002ed82:	call   0x14002ec00
   14002ed87:	sub    r13,0x1
   14002ed8b:	js     0x14002efbf
   14002ed91:	mov    r12,QWORD PTR [rsp+r13*8+0x20]
   14002ed96:	mov    r15,QWORD PTR [rsp+r13*8+0x210]
   14002ed9e:	jmp    0x14002ed61
   14002eda0:	shr    rsi,1
   14002eda3:	mov    rcx,r14
   14002eda6:	imul   rsi,rbp
   14002edaa:	add    rsi,r12
   14002edad:	call   QWORD PTR [rip+0x382d]        # 0x1400325e0
   14002edb3:	mov    rdx,rsi
   14002edb6:	mov    rcx,r12
   14002edb9:	call   r14
   14002edbc:	test   eax,eax
   14002edbe:	jle    0x14002ede9
   14002edc0:	mov    r8,rbp
   14002edc3:	mov    rdx,rsi
   14002edc6:	cmp    r12,rsi
   14002edc9:	je     0x14002ede9
   14002edcb:	mov    r9,r12
   14002edce:	sub    r9,rsi
   14002edd1:	movzx  eax,BYTE PTR [rdx]
   14002edd4:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002edd9:	mov    BYTE PTR [r9+rdx*1],al
   14002eddd:	mov    BYTE PTR [rdx],cl
   14002eddf:	lea    rdx,[rdx+0x1]
   14002ede3:	sub    r8,0x1
   14002ede7:	jne    0x14002edd1
   14002ede9:	mov    rcx,r14
   14002edec:	call   QWORD PTR [rip+0x37ee]        # 0x1400325e0
   14002edf2:	mov    rdx,r15
   14002edf5:	mov    rcx,r12
   14002edf8:	call   r14
   14002edfb:	test   eax,eax
   14002edfd:	jle    0x14002ee28
   14002edff:	mov    r8,rbp
   14002ee02:	mov    rdx,r15
   14002ee05:	cmp    r12,r15
   14002ee08:	je     0x14002ee28
   14002ee0a:	mov    r9,r12
   14002ee0d:	sub    r9,r15
   14002ee10:	movzx  eax,BYTE PTR [rdx]
   14002ee13:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002ee18:	mov    BYTE PTR [r9+rdx*1],al
   14002ee1c:	mov    BYTE PTR [rdx],cl
   14002ee1e:	lea    rdx,[rdx+0x1]
   14002ee22:	sub    r8,0x1
   14002ee26:	jne    0x14002ee10
   14002ee28:	mov    rcx,r14
   14002ee2b:	call   QWORD PTR [rip+0x37af]        # 0x1400325e0
   14002ee31:	mov    rdx,r15
   14002ee34:	mov    rcx,rsi
   14002ee37:	call   r14
   14002ee3a:	test   eax,eax
   14002ee3c:	jle    0x14002ee68
   14002ee3e:	mov    r8,rbp
   14002ee41:	mov    rdx,r15
   14002ee44:	cmp    rsi,r15
   14002ee47:	je     0x14002ee68
   14002ee49:	mov    r9,rsi
   14002ee4c:	sub    r9,r15
   14002ee4f:	nop
   14002ee50:	movzx  eax,BYTE PTR [rdx]
   14002ee53:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002ee58:	mov    BYTE PTR [r9+rdx*1],al
   14002ee5c:	mov    BYTE PTR [rdx],cl
   14002ee5e:	lea    rdx,[rdx+0x1]
   14002ee62:	sub    r8,0x1
   14002ee66:	jne    0x14002ee50
   14002ee68:	mov    rbx,r12
   14002ee6b:	mov    rdi,r15
   14002ee6e:	xchg   ax,ax
   14002ee70:	cmp    rsi,rbx
   14002ee73:	jbe    0x14002ee98
   14002ee75:	add    rbx,rbp
   14002ee78:	cmp    rbx,rsi
   14002ee7b:	jae    0x14002ee98
   14002ee7d:	mov    rcx,r14
   14002ee80:	call   QWORD PTR [rip+0x375a]        # 0x1400325e0
   14002ee86:	mov    rdx,rsi
   14002ee89:	mov    rcx,rbx
   14002ee8c:	call   r14
   14002ee8f:	test   eax,eax
   14002ee91:	jle    0x14002ee75
   14002ee93:	cmp    rsi,rbx
   14002ee96:	ja     0x14002eeb6
   14002ee98:	add    rbx,rbp
   14002ee9b:	cmp    rbx,r15
   14002ee9e:	ja     0x14002eeb6
   14002eea0:	mov    rcx,r14
   14002eea3:	call   QWORD PTR [rip+0x3737]        # 0x1400325e0
   14002eea9:	mov    rdx,rsi
   14002eeac:	mov    rcx,rbx
   14002eeaf:	call   r14
   14002eeb2:	test   eax,eax
   14002eeb4:	jle    0x14002ee98
   14002eeb6:	sub    rdi,rbp
   14002eeb9:	cmp    rdi,rsi
   14002eebc:	jbe    0x14002eed4
   14002eebe:	mov    rcx,r14
   14002eec1:	call   QWORD PTR [rip+0x3719]        # 0x1400325e0
   14002eec7:	mov    rdx,rsi
   14002eeca:	mov    rcx,rdi
   14002eecd:	call   r14
   14002eed0:	test   eax,eax
   14002eed2:	jg     0x14002eeb6
   14002eed4:	cmp    rdi,rbx
   14002eed7:	jb     0x14002ef19
   14002eed9:	mov    r8,rbp
   14002eedc:	mov    rdx,rdi
   14002eedf:	cmp    rbx,rdi
   14002eee2:	je     0x14002ef08
   14002eee4:	mov    r9,rbx
   14002eee7:	sub    r9,rdi
   14002eeea:	nop    WORD PTR [rax+rax*1+0x0]
   14002eef0:	movzx  eax,BYTE PTR [rdx]
   14002eef3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002eef8:	mov    BYTE PTR [r9+rdx*1],al
   14002eefc:	mov    BYTE PTR [rdx],cl
   14002eefe:	lea    rdx,[rdx+0x1]
   14002ef02:	sub    r8,0x1
   14002ef06:	jne    0x14002eef0
   14002ef08:	cmp    rsi,rdi
   14002ef0b:	jne    0x14002ee70
   14002ef11:	mov    rsi,rbx
   14002ef14:	jmp    0x14002ee70
   14002ef19:	add    rdi,rbp
   14002ef1c:	cmp    rsi,rdi
   14002ef1f:	jae    0x14002ef44
   14002ef21:	sub    rdi,rbp
   14002ef24:	cmp    rdi,rsi
   14002ef27:	jbe    0x14002ef44
   14002ef29:	mov    rcx,r14
   14002ef2c:	call   QWORD PTR [rip+0x36ae]        # 0x1400325e0
   14002ef32:	mov    rdx,rsi
   14002ef35:	mov    rcx,rdi
   14002ef38:	call   r14
   14002ef3b:	test   eax,eax
   14002ef3d:	je     0x14002ef21
   14002ef3f:	cmp    rsi,rdi
   14002ef42:	jb     0x14002ef62
   14002ef44:	sub    rdi,rbp
   14002ef47:	cmp    rdi,r12
   14002ef4a:	jbe    0x14002ef62
   14002ef4c:	mov    rcx,r14
   14002ef4f:	call   QWORD PTR [rip+0x368b]        # 0x1400325e0
   14002ef55:	mov    rdx,rsi
   14002ef58:	mov    rcx,rdi
   14002ef5b:	call   r14
   14002ef5e:	test   eax,eax
   14002ef60:	je     0x14002ef44
   14002ef62:	mov    rcx,r15
   14002ef65:	mov    rax,rdi
   14002ef68:	sub    rcx,rbx
   14002ef6b:	sub    rax,r12
   14002ef6e:	cmp    rax,rcx
   14002ef71:	jl     0x14002ef99
   14002ef73:	cmp    r12,rdi
   14002ef76:	jae    0x14002ef88
   14002ef78:	mov    QWORD PTR [rsp+r13*8+0x20],r12
   14002ef7d:	mov    QWORD PTR [rsp+r13*8+0x210],rdi
   14002ef85:	inc    r13
   14002ef88:	cmp    rbx,r15
   14002ef8b:	jae    0x14002ed87
   14002ef91:	mov    r12,rbx
   14002ef94:	jmp    0x14002ed61
   14002ef99:	cmp    rbx,r15
   14002ef9c:	jae    0x14002efae
   14002ef9e:	mov    QWORD PTR [rsp+r13*8+0x20],rbx
   14002efa3:	mov    QWORD PTR [rsp+r13*8+0x210],r15
   14002efab:	inc    r13
   14002efae:	cmp    r12,rdi
   14002efb1:	jae    0x14002ed87
   14002efb7:	mov    r15,rdi
   14002efba:	jmp    0x14002ed61
   14002efbf:	mov    r13,QWORD PTR [rsp+0x420]
   14002efc7:	mov    rdi,QWORD PTR [rsp+0x428]
   14002efcf:	mov    rsi,QWORD PTR [rsp+0x430]
   14002efd7:	mov    rbx,QWORD PTR [rsp+0x438]
   14002efdf:	mov    r15,QWORD PTR [rsp+0x418]
   14002efe7:	mov    rcx,QWORD PTR [rsp+0x400]
   14002efef:	xor    rcx,rsp
   14002eff2:	call   0x140030a30
   14002eff7:	add    rsp,0x440
   14002effe:	pop    r14
   14002f000:	pop    r12
   14002f002:	pop    rbp
   14002f003:	ret    
   14002f004:	mov    QWORD PTR [rsp+0x8],rbx
   14002f009:	push   rdi
   14002f00a:	sub    rsp,0x20
   14002f00e:	xor    r10d,r10d
   14002f011:	mov    r11,rdx
   14002f014:	test   r9,r9
   14002f017:	jne    0x14002f045
   14002f019:	test   rcx,rcx
   14002f01c:	jne    0x14002f04a
   14002f01e:	test   rdx,rdx
   14002f021:	je     0x14002f037
   14002f023:	call   0x14002a494
   14002f028:	mov    ebx,0x16
   14002f02d:	mov    DWORD PTR [rax],ebx
   14002f02f:	call   0x1400281ac
   14002f034:	mov    r10d,ebx
   14002f037:	mov    eax,r10d
   14002f03a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f03f:	add    rsp,0x20
   14002f043:	pop    rdi
   14002f044:	ret    
   14002f045:	test   rcx,rcx
   14002f048:	je     0x14002f023
   14002f04a:	test   rdx,rdx
   14002f04d:	je     0x14002f023
   14002f04f:	test   r9,r9
   14002f052:	jne    0x14002f059
   14002f054:	mov    BYTE PTR [rcx],r10b
   14002f057:	jmp    0x14002f037
   14002f059:	test   r8,r8
   14002f05c:	jne    0x14002f063
   14002f05e:	mov    BYTE PTR [rcx],r10b
   14002f061:	jmp    0x14002f023
   14002f063:	sub    r8,rcx
   14002f066:	mov    rdx,rcx
   14002f069:	mov    rbx,r11
   14002f06c:	mov    rdi,r9
   14002f06f:	cmp    r9,0xffffffffffffffff
   14002f073:	jne    0x14002f08a
   14002f075:	mov    al,BYTE PTR [r8+rdx*1]
   14002f079:	mov    BYTE PTR [rdx],al
   14002f07b:	inc    rdx
   14002f07e:	test   al,al
   14002f080:	je     0x14002f0ab
   14002f082:	sub    rbx,0x1
   14002f086:	jne    0x14002f075
   14002f088:	jmp    0x14002f0ab
   14002f08a:	mov    al,BYTE PTR [r8+rdx*1]
   14002f08e:	mov    BYTE PTR [rdx],al
   14002f090:	inc    rdx
   14002f093:	test   al,al
   14002f095:	je     0x14002f0a3
   14002f097:	sub    rbx,0x1
   14002f09b:	je     0x14002f0a3
   14002f09d:	sub    rdi,0x1
   14002f0a1:	jne    0x14002f08a
   14002f0a3:	test   rdi,rdi
   14002f0a6:	jne    0x14002f0ab
   14002f0a8:	mov    BYTE PTR [rdx],r10b
   14002f0ab:	test   rbx,rbx
   14002f0ae:	jne    0x14002f037
   14002f0b0:	cmp    r9,0xffffffffffffffff
   14002f0b4:	jne    0x14002f0c4
   14002f0b6:	mov    BYTE PTR [rcx+r11*1-0x1],r10b
   14002f0bb:	lea    r10d,[rbx+0x50]
   14002f0bf:	jmp    0x14002f037
   14002f0c4:	mov    BYTE PTR [rcx],r10b
   14002f0c7:	call   0x14002a494
   14002f0cc:	mov    ebx,0x22
   14002f0d1:	jmp    0x14002f02d
   14002f0d6:	int3   
   14002f0d7:	int3   
   14002f0d8:	sub    rsp,0x58
   14002f0dc:	mov    rax,QWORD PTR [rip+0x17105]        # 0x1400461e8
   14002f0e3:	xor    rax,rsp
   14002f0e6:	mov    QWORD PTR [rsp+0x40],rax
   14002f0eb:	xor    eax,eax
   14002f0ed:	mov    r9,rdx
   14002f0f0:	cmp    rax,0x20
   14002f0f4:	mov    r8,rcx
   14002f0f7:	jae    0x14002f170
   14002f0f9:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   14002f0fe:	inc    rax
   14002f101:	cmp    rax,0x20
   14002f105:	jl     0x14002f0f7
   14002f107:	mov    al,BYTE PTR [rdx]
   14002f109:	jmp    0x14002f12a
   14002f10b:	movzx  edx,al
   14002f10e:	shr    rdx,0x3
   14002f112:	movzx  eax,al
   14002f115:	and    eax,0x7
   14002f118:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
   14002f11d:	bts    ecx,eax
   14002f120:	inc    r9
   14002f123:	mov    BYTE PTR [rsp+rdx*1+0x20],cl
   14002f127:	mov    al,BYTE PTR [r9]
   14002f12a:	test   al,al
   14002f12c:	jne    0x14002f10b
   14002f12e:	jmp    0x14002f14f
   14002f130:	movzx  eax,r9b
   14002f134:	mov    edx,0x1
   14002f139:	movzx  ecx,r9b
   14002f13d:	and    ecx,0x7
   14002f140:	shr    rax,0x3
   14002f144:	shl    edx,cl
   14002f146:	test   BYTE PTR [rsp+rax*1+0x20],dl
   14002f14a:	jne    0x14002f16b
   14002f14c:	inc    r8
   14002f14f:	mov    r9b,BYTE PTR [r8]
   14002f152:	test   r9b,r9b
   14002f155:	jne    0x14002f130
   14002f157:	xor    eax,eax
   14002f159:	mov    rcx,QWORD PTR [rsp+0x40]
   14002f15e:	xor    rcx,rsp
   14002f161:	call   0x140030a30
   14002f166:	add    rsp,0x58
   14002f16a:	ret    
   14002f16b:	mov    rax,r8
   14002f16e:	jmp    0x14002f159
   14002f170:	call   0x140030b5c
   14002f175:	int3   
   14002f176:	int3   
   14002f177:	int3   
   14002f178:	xor    r8d,r8d
   14002f17b:	jmp    0x14002f180
   14002f180:	mov    QWORD PTR [rsp+0x8],rbx
   14002f185:	push   rdi
   14002f186:	sub    rsp,0x40
   14002f18a:	mov    rbx,rdx
   14002f18d:	mov    rdi,rcx
   14002f190:	test   rcx,rcx
   14002f193:	jne    0x14002f1a9
   14002f195:	call   0x14002a494
   14002f19a:	mov    DWORD PTR [rax],0x16
   14002f1a0:	call   0x1400281ac
   14002f1a5:	xor    eax,eax
   14002f1a7:	jmp    0x14002f20b
   14002f1a9:	test   rdx,rdx
   14002f1ac:	je     0x14002f195
   14002f1ae:	cmp    rcx,rdx
   14002f1b1:	jae    0x14002f1a5
   14002f1b3:	mov    rdx,r8
   14002f1b6:	lea    rcx,[rsp+0x20]
   14002f1bb:	call   0x1400288e8
   14002f1c0:	mov    rcx,QWORD PTR [rsp+0x30]
   14002f1c5:	cmp    DWORD PTR [rcx+0x8],0x0
   14002f1c9:	jne    0x14002f1d0
   14002f1cb:	dec    rbx
   14002f1ce:	jmp    0x14002f1f5
   14002f1d0:	lea    rdx,[rbx-0x1]
   14002f1d4:	dec    rdx
   14002f1d7:	cmp    rdi,rdx
   14002f1da:	ja     0x14002f1e6
   14002f1dc:	movzx  eax,BYTE PTR [rdx]
   14002f1df:	test   BYTE PTR [rax+rcx*1+0x19],0x4
   14002f1e4:	jne    0x14002f1d4
   14002f1e6:	mov    rcx,rbx
   14002f1e9:	sub    rcx,rdx
   14002f1ec:	and    ecx,0x1
   14002f1ef:	sub    rbx,rcx
   14002f1f2:	dec    rbx
   14002f1f5:	cmp    BYTE PTR [rsp+0x38],0x0
   14002f1fa:	je     0x14002f208
   14002f1fc:	mov    rcx,QWORD PTR [rsp+0x20]
   14002f201:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002f208:	mov    rax,rbx
   14002f20b:	mov    rbx,QWORD PTR [rsp+0x50]
   14002f210:	add    rsp,0x40
   14002f214:	pop    rdi
   14002f215:	ret    
   14002f216:	int3   
   14002f217:	int3   
   14002f218:	sub    rsp,0x28
   14002f21c:	call   0x14002ca40
   14002f221:	xor    ecx,ecx
   14002f223:	test   al,al
   14002f225:	sete   cl
   14002f228:	mov    eax,ecx
   14002f22a:	add    rsp,0x28
   14002f22e:	ret    
   14002f22f:	int3   
   14002f230:	mov    eax,DWORD PTR [rip+0x194a2]        # 0x1400486d8
   14002f236:	test   eax,eax
   14002f238:	je     0x14002fbd4
   14002f23e:	xor    r9d,r9d
   14002f241:	jmp    0x14002f248
   14002f246:	int3   
   14002f247:	int3   
   14002f248:	mov    rax,rsp
   14002f24b:	mov    QWORD PTR [rax+0x8],rbx
   14002f24f:	mov    QWORD PTR [rax+0x10],rbp
   14002f253:	mov    QWORD PTR [rax+0x18],rsi
   14002f257:	push   rdi
   14002f258:	sub    rsp,0x60
   14002f25c:	mov    rsi,rdx
   14002f25f:	mov    rbp,rcx
   14002f262:	mov    rdx,r9
   14002f265:	lea    rcx,[rax-0x28]
   14002f269:	mov    rdi,r8
   14002f26c:	call   0x1400288e8
   14002f271:	test   rdi,rdi
   14002f274:	jne    0x14002f27d
   14002f276:	xor    ebx,ebx
   14002f278:	jmp    0x14002f31d
   14002f27d:	test   rbp,rbp
   14002f280:	je     0x14002f287
   14002f282:	test   rsi,rsi
   14002f285:	jne    0x14002f29e
   14002f287:	call   0x14002a494
   14002f28c:	mov    DWORD PTR [rax],0x16
   14002f292:	call   0x1400281ac
   14002f297:	mov    ebx,0x7fffffff
   14002f29c:	jmp    0x14002f31d
   14002f29e:	mov    ebx,0x7fffffff
   14002f2a3:	cmp    rdi,rbx
   14002f2a6:	jbe    0x14002f2ba
   14002f2a8:	call   0x14002a494
   14002f2ad:	mov    DWORD PTR [rax],0x16
   14002f2b3:	call   0x1400281ac
   14002f2b8:	jmp    0x14002f31d
   14002f2ba:	mov    rax,QWORD PTR [rsp+0x48]
   14002f2bf:	mov    rdx,QWORD PTR [rax+0x130]
   14002f2c6:	test   rdx,rdx
   14002f2c9:	jne    0x14002f2e2
   14002f2cb:	lea    r9,[rsp+0x48]
   14002f2d0:	mov    r8,rdi
   14002f2d3:	mov    rdx,rsi
   14002f2d6:	mov    rcx,rbp
   14002f2d9:	call   0x14002fc24
   14002f2de:	mov    ebx,eax
   14002f2e0:	jmp    0x14002f31d
   14002f2e2:	mov    eax,DWORD PTR [rax+0x14]
   14002f2e5:	lea    rcx,[rsp+0x48]
   14002f2ea:	mov    DWORD PTR [rsp+0x38],eax
   14002f2ee:	mov    r9,rbp
   14002f2f1:	mov    DWORD PTR [rsp+0x30],edi
   14002f2f5:	mov    r8d,0x1001
   14002f2fb:	mov    QWORD PTR [rsp+0x28],rsi
   14002f300:	mov    DWORD PTR [rsp+0x20],edi
   14002f304:	call   0x140030094
   14002f309:	test   eax,eax
   14002f30b:	jne    0x14002f31a
   14002f30d:	call   0x14002a494
   14002f312:	mov    DWORD PTR [rax],0x16
   14002f318:	jmp    0x14002f31d
   14002f31a:	lea    ebx,[rax-0x2]
   14002f31d:	cmp    BYTE PTR [rsp+0x58],0x0
   14002f322:	je     0x14002f330
   14002f324:	mov    rax,QWORD PTR [rsp+0x40]
   14002f329:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002f330:	lea    r11,[rsp+0x60]
   14002f335:	mov    eax,ebx
   14002f337:	mov    rbx,QWORD PTR [r11+0x10]
   14002f33b:	mov    rbp,QWORD PTR [r11+0x18]
   14002f33f:	mov    rsi,QWORD PTR [r11+0x20]
   14002f343:	mov    rsp,r11
   14002f346:	pop    rdi
   14002f347:	ret    
   14002f348:	mov    QWORD PTR [rsp+0x8],rbx
   14002f34d:	mov    QWORD PTR [rsp+0x20],r9
   14002f352:	push   rdi
   14002f353:	sub    rsp,0x20
   14002f357:	mov    rdi,r9
   14002f35a:	mov    rbx,r8
   14002f35d:	mov    ecx,DWORD PTR [rdx]
   14002f35f:	call   0x14002d92c
   14002f364:	nop
   14002f365:	mov    rax,QWORD PTR [rbx]
   14002f368:	movsxd rcx,DWORD PTR [rax]
   14002f36b:	mov    rdx,rcx
   14002f36e:	mov    rax,rcx
   14002f371:	sar    rax,0x6
   14002f375:	lea    r8,[rip+0x19524]        # 0x1400488a0
   14002f37c:	and    edx,0x3f
   14002f37f:	shl    rdx,0x6
   14002f383:	mov    rax,QWORD PTR [r8+rax*8]
   14002f387:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14002f38c:	je     0x14002f397
   14002f38e:	call   0x14002f460
   14002f393:	mov    ebx,eax
   14002f395:	jmp    0x14002f3a5
   14002f397:	call   0x14002a494
   14002f39c:	mov    DWORD PTR [rax],0x9
   14002f3a2:	or     ebx,0xffffffff
   14002f3a5:	mov    ecx,DWORD PTR [rdi]
   14002f3a7:	call   0x14002d950
   14002f3ac:	mov    eax,ebx
   14002f3ae:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f3b3:	add    rsp,0x20
   14002f3b7:	pop    rdi
   14002f3b8:	ret    
   14002f3b9:	int3   
   14002f3ba:	int3   
   14002f3bb:	int3   
   14002f3bc:	mov    DWORD PTR [rsp+0x8],ecx
   14002f3c0:	sub    rsp,0x38
   14002f3c4:	movsxd rdx,ecx
   14002f3c7:	cmp    edx,0xfffffffe
   14002f3ca:	jne    0x14002f3e1
   14002f3cc:	call   0x14002a474
   14002f3d1:	and    DWORD PTR [rax],0x0
   14002f3d4:	call   0x14002a494
   14002f3d9:	mov    DWORD PTR [rax],0x9
   14002f3df:	jmp    0x14002f455
   14002f3e1:	test   ecx,ecx
   14002f3e3:	js     0x14002f43d
   14002f3e5:	cmp    edx,DWORD PTR [rip+0x198b5]        # 0x140048ca0
   14002f3eb:	jae    0x14002f43d
   14002f3ed:	mov    rcx,rdx
   14002f3f0:	lea    r8,[rip+0x194a9]        # 0x1400488a0
   14002f3f7:	and    ecx,0x3f
   14002f3fa:	mov    rax,rdx
   14002f3fd:	sar    rax,0x6
   14002f401:	shl    rcx,0x6
   14002f405:	mov    rax,QWORD PTR [r8+rax*8]
   14002f409:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   14002f40e:	je     0x14002f43d
   14002f410:	lea    rax,[rsp+0x40]
   14002f415:	mov    DWORD PTR [rsp+0x50],edx
   14002f419:	mov    DWORD PTR [rsp+0x58],edx
   14002f41d:	lea    r9,[rsp+0x50]
   14002f422:	lea    rdx,[rsp+0x58]
   14002f427:	mov    QWORD PTR [rsp+0x20],rax
   14002f42c:	lea    r8,[rsp+0x20]
   14002f431:	lea    rcx,[rsp+0x48]
   14002f436:	call   0x14002f348
   14002f43b:	jmp    0x14002f458
   14002f43d:	call   0x14002a474
   14002f442:	and    DWORD PTR [rax],0x0
   14002f445:	call   0x14002a494
   14002f44a:	mov    DWORD PTR [rax],0x9
   14002f450:	call   0x1400281ac
   14002f455:	or     eax,0xffffffff
   14002f458:	add    rsp,0x38
   14002f45c:	ret    
   14002f45d:	int3   
   14002f45e:	int3   
   14002f45f:	int3   
   14002f460:	mov    QWORD PTR [rsp+0x8],rbx
   14002f465:	push   rdi
   14002f466:	sub    rsp,0x20
   14002f46a:	movsxd rdi,ecx
   14002f46d:	mov    ecx,edi
   14002f46f:	call   0x14002da30
   14002f474:	cmp    rax,0xffffffffffffffff
   14002f478:	jne    0x14002f47e
   14002f47a:	xor    ebx,ebx
   14002f47c:	jmp    0x14002f4d5
   14002f47e:	mov    rax,QWORD PTR [rip+0x1941b]        # 0x1400488a0
   14002f485:	mov    ecx,0x2
   14002f48a:	cmp    edi,0x1
   14002f48d:	jne    0x14002f498
   14002f48f:	test   BYTE PTR [rax+0xb8],dil
   14002f496:	jne    0x14002f4a2
   14002f498:	cmp    edi,ecx
   14002f49a:	jne    0x14002f4b9
   14002f49c:	test   BYTE PTR [rax+0x78],0x1
   14002f4a0:	je     0x14002f4b9
   14002f4a2:	call   0x14002da30
   14002f4a7:	mov    ecx,0x1
   14002f4ac:	mov    rbx,rax
   14002f4af:	call   0x14002da30
   14002f4b4:	cmp    rax,rbx
   14002f4b7:	je     0x14002f47a
   14002f4b9:	mov    ecx,edi
   14002f4bb:	call   0x14002da30
   14002f4c0:	mov    rcx,rax
   14002f4c3:	call   QWORD PTR [rip+0x2cc7]        # 0x140032190
   14002f4c9:	test   eax,eax
   14002f4cb:	jne    0x14002f47a
   14002f4cd:	call   QWORD PTR [rip+0x2d35]        # 0x140032208
   14002f4d3:	mov    ebx,eax
   14002f4d5:	mov    ecx,edi
   14002f4d7:	call   0x14002d974
   14002f4dc:	mov    rdx,rdi
   14002f4df:	lea    r8,[rip+0x193ba]        # 0x1400488a0
   14002f4e6:	and    edx,0x3f
   14002f4e9:	mov    rcx,rdi
   14002f4ec:	sar    rcx,0x6
   14002f4f0:	shl    rdx,0x6
   14002f4f4:	mov    rcx,QWORD PTR [r8+rcx*8]
   14002f4f8:	mov    BYTE PTR [rcx+rdx*1+0x38],0x0
   14002f4fd:	test   ebx,ebx
   14002f4ff:	je     0x14002f50d
   14002f501:	mov    ecx,ebx
   14002f503:	call   0x14002a424
   14002f508:	or     eax,0xffffffff
   14002f50b:	jmp    0x14002f50f
   14002f50d:	xor    eax,eax
   14002f50f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f514:	add    rsp,0x20
   14002f518:	pop    rdi
   14002f519:	ret    
   14002f51a:	int3   
   14002f51b:	int3   
   14002f51c:	mov    QWORD PTR [rsp+0x8],rcx
   14002f521:	mov    r11,rsp
   14002f524:	xor    edx,edx
   14002f526:	mov    QWORD PTR [rcx],rdx
   14002f529:	mov    rax,QWORD PTR [r11+0x8]
   14002f52d:	mov    QWORD PTR [rax+0x8],rdx
   14002f531:	mov    rax,QWORD PTR [r11+0x8]
   14002f535:	mov    DWORD PTR [rax+0x10],edx
   14002f538:	mov    rax,QWORD PTR [r11+0x8]
   14002f53c:	or     DWORD PTR [rax+0x18],0xffffffff
   14002f540:	mov    rax,QWORD PTR [r11+0x8]
   14002f544:	mov    DWORD PTR [rax+0x1c],edx
   14002f547:	mov    rax,QWORD PTR [r11+0x8]
   14002f54b:	mov    DWORD PTR [rax+0x20],edx
   14002f54e:	mov    rax,QWORD PTR [r11+0x8]
   14002f552:	mov    QWORD PTR [rax+0x28],rdx
   14002f556:	mov    rax,QWORD PTR [r11+0x8]
   14002f55a:	xchg   DWORD PTR [rax+0x14],edx
   14002f55d:	ret    
   14002f55e:	int3   
   14002f55f:	int3   
   14002f560:	sub    rsp,0x48
   14002f564:	and    QWORD PTR [rsp+0x30],0x0
   14002f56a:	lea    rcx,[rip+0xe107]        # 0x14003d678
   14002f571:	and    DWORD PTR [rsp+0x28],0x0
   14002f576:	mov    r8d,0x3
   14002f57c:	xor    r9d,r9d
   14002f57f:	mov    DWORD PTR [rsp+0x20],r8d
   14002f584:	mov    edx,0x40000000
   14002f589:	call   QWORD PTR [rip+0x2c29]        # 0x1400321b8
   14002f58f:	mov    QWORD PTR [rip+0x17512],rax        # 0x140046aa8
   14002f596:	add    rsp,0x48
   14002f59a:	ret    
   14002f59b:	int3   
   14002f59c:	sub    rsp,0x28
   14002f5a0:	mov    rcx,QWORD PTR [rip+0x17501]        # 0x140046aa8
   14002f5a7:	lea    rax,[rcx+0x2]
   14002f5ab:	cmp    rax,0x1
   14002f5af:	jbe    0x14002f5b7
   14002f5b1:	call   QWORD PTR [rip+0x2bd9]        # 0x140032190
   14002f5b7:	add    rsp,0x28
   14002f5bb:	ret    
   14002f5bc:	xor    eax,eax
   14002f5be:	cmp    BYTE PTR [rcx],al
   14002f5c0:	je     0x14002f5d0
   14002f5c2:	cmp    rax,rdx
   14002f5c5:	je     0x14002f5d0
   14002f5c7:	inc    rax
   14002f5ca:	cmp    BYTE PTR [rax+rcx*1],0x0
   14002f5ce:	jne    0x14002f5c2
   14002f5d0:	ret    
   14002f5d1:	int3   
   14002f5d2:	int3   
   14002f5d3:	int3   
   14002f5d4:	int3   
   14002f5d5:	int3   
   14002f5d6:	int3   
   14002f5d7:	int3   
   14002f5d8:	int3   
   14002f5d9:	int3   
   14002f5da:	int3   
   14002f5db:	int3   
   14002f5dc:	int3   
   14002f5dd:	int3   
   14002f5de:	int3   
   14002f5df:	int3   
   14002f5e0:	sub    rsp,0x58
   14002f5e4:	movdqa XMMWORD PTR [rsp+0x20],xmm6
   14002f5ea:	cmp    DWORD PTR [rip+0x1994f],0x0        # 0x140048f40
   14002f5f1:	jne    0x14002f8e0
   14002f5f7:	movapd xmm3,xmm0
   14002f5fb:	movapd xmm4,xmm0
   14002f5ff:	psrlq  xmm3,0x34
   14002f604:	movq   rax,xmm0
   14002f609:	psubq  xmm3,XMMWORD PTR [rip+0xe0bf]        # 0x14003d6d0
   14002f611:	movapd xmm5,xmm0
   14002f615:	andpd  xmm5,XMMWORD PTR [rip+0xe083]        # 0x14003d6a0
   14002f61d:	comisd xmm5,QWORD PTR [rip+0xe07b]        # 0x14003d6a0
   14002f625:	je     0x14002f8b0
   14002f62b:	movapd xmm2,xmm0
   14002f62f:	cvtdq2pd xmm6,xmm3
   14002f633:	xorpd  xmm5,xmm5
   14002f637:	comisd xmm0,xmm5
   14002f63b:	jbe    0x14002f870
   14002f641:	pand   xmm2,XMMWORD PTR [rip+0xe0a7]        # 0x14003d6f0
   14002f649:	subsd  xmm4,QWORD PTR [rip+0xe12f]        # 0x14003d780
   14002f651:	comisd xmm6,QWORD PTR [rip+0xe1b7]        # 0x14003d810
   14002f659:	je     0x14002f837
   14002f65f:	andpd  xmm4,XMMWORD PTR [rip+0xe209]        # 0x14003d870
   14002f667:	mov    r9,rax
   14002f66a:	and    rax,QWORD PTR [rip+0xe08f]        # 0x14003d700
   14002f671:	and    r9,QWORD PTR [rip+0xe098]        # 0x14003d710
   14002f678:	shl    r9,1
   14002f67b:	add    rax,r9
   14002f67e:	movq   xmm1,rax
   14002f683:	comisd xmm4,QWORD PTR [rip+0xe1a5]        # 0x14003d830
   14002f68b:	jb     0x14002f770
   14002f691:	shr    rax,0x2c
   14002f695:	por    xmm2,XMMWORD PTR [rip+0xe0f3]        # 0x14003d790
   14002f69d:	por    xmm1,XMMWORD PTR [rip+0xe0eb]        # 0x14003d790
   14002f6a5:	lea    r9,[rip+0xf254]        # 0x14003e900
   14002f6ac:	subsd  xmm1,xmm2
   14002f6b0:	mulsd  xmm1,QWORD PTR [r9+rax*8]
   14002f6b6:	movapd xmm2,xmm1
   14002f6ba:	movapd xmm0,xmm1
   14002f6be:	lea    r9,[rip+0xe21b]        # 0x14003d8e0
   14002f6c5:	movsd  xmm3,QWORD PTR [rip+0xe133]        # 0x14003d800
   14002f6cd:	movsd  xmm1,QWORD PTR [rip+0xe0fb]        # 0x14003d7d0
   14002f6d5:	mulsd  xmm3,xmm2
   14002f6d9:	mulsd  xmm1,xmm2
   14002f6dd:	mulsd  xmm0,xmm2
   14002f6e1:	movapd xmm4,xmm0
   14002f6e5:	addsd  xmm3,QWORD PTR [rip+0xe103]        # 0x14003d7f0
   14002f6ed:	addsd  xmm1,QWORD PTR [rip+0xe0cb]        # 0x14003d7c0
   14002f6f5:	mulsd  xmm4,xmm0
   14002f6f9:	mulsd  xmm3,xmm2
   14002f6fd:	mulsd  xmm1,xmm0
   14002f701:	addsd  xmm3,QWORD PTR [rip+0xe0d7]        # 0x14003d7e0
   14002f709:	addsd  xmm1,xmm2
   14002f70d:	mulsd  xmm3,xmm4
   14002f711:	addsd  xmm1,xmm3
   14002f715:	movsd  xmm5,QWORD PTR [rip+0xe043]        # 0x14003d760
   14002f71d:	mulsd  xmm1,QWORD PTR [rip+0xdffb]        # 0x14003d720
   14002f725:	mulsd  xmm5,xmm6
   14002f729:	subsd  xmm5,xmm1
   14002f72d:	movsd  xmm0,QWORD PTR [r9+rax*8]
   14002f733:	lea    rdx,[rip+0xe9b6]        # 0x14003e0f0
   14002f73a:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   14002f73f:	movsd  xmm4,QWORD PTR [rip+0xe009]        # 0x14003d750
   14002f747:	mulsd  xmm4,xmm6
   14002f74b:	addsd  xmm0,xmm4
   14002f74f:	addsd  xmm2,xmm5
   14002f753:	addsd  xmm0,xmm2
   14002f757:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002f75d:	add    rsp,0x58
   14002f761:	ret    
   14002f762:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002f770:	movsd  xmm2,QWORD PTR [rip+0xdff8]        # 0x14003d770
   14002f778:	subsd  xmm0,QWORD PTR [rip+0xe000]        # 0x14003d780
   14002f780:	addsd  xmm2,xmm0
   14002f784:	movapd xmm1,xmm0
   14002f788:	divsd  xmm1,xmm2
   14002f78c:	movsd  xmm4,QWORD PTR [rip+0xe0fc]        # 0x14003d890
   14002f794:	movsd  xmm5,QWORD PTR [rip+0xe114]        # 0x14003d8b0
   14002f79c:	movapd xmm6,xmm0
   14002f7a0:	mulsd  xmm6,xmm1
   14002f7a4:	addsd  xmm1,xmm1
   14002f7a8:	movapd xmm2,xmm1
   14002f7ac:	mulsd  xmm2,xmm1
   14002f7b0:	mulsd  xmm4,xmm2
   14002f7b4:	mulsd  xmm5,xmm2
   14002f7b8:	addsd  xmm4,QWORD PTR [rip+0xe0c0]        # 0x14003d880
   14002f7c0:	addsd  xmm5,QWORD PTR [rip+0xe0d8]        # 0x14003d8a0
   14002f7c8:	mulsd  xmm2,xmm1
   14002f7cc:	mulsd  xmm4,xmm2
   14002f7d0:	mulsd  xmm2,xmm2
   14002f7d4:	mulsd  xmm2,xmm1
   14002f7d8:	mulsd  xmm5,xmm2
   14002f7dc:	movsd  xmm2,QWORD PTR [rip+0xdf5c]        # 0x14003d740
   14002f7e4:	addsd  xmm4,xmm5
   14002f7e8:	subsd  xmm4,xmm6
   14002f7ec:	movsd  xmm6,QWORD PTR [rip+0xdf3c]        # 0x14003d730
   14002f7f4:	movapd xmm3,xmm0
   14002f7f8:	pand   xmm3,XMMWORD PTR [rip+0xe0c0]        # 0x14003d8c0
   14002f800:	subsd  xmm0,xmm3
   14002f804:	addsd  xmm4,xmm0
   14002f808:	movapd xmm0,xmm3
   14002f80c:	movapd xmm1,xmm4
   14002f810:	mulsd  xmm4,xmm2
   14002f814:	mulsd  xmm0,xmm2
   14002f818:	mulsd  xmm1,xmm6
   14002f81c:	mulsd  xmm3,xmm6
   14002f820:	addsd  xmm0,xmm4
   14002f824:	addsd  xmm0,xmm1
   14002f828:	addsd  xmm0,xmm3
   14002f82c:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002f832:	add    rsp,0x58
   14002f836:	ret    
   14002f837:	por    xmm2,XMMWORD PTR [rip+0xdf41]        # 0x14003d780
   14002f83f:	subsd  xmm2,QWORD PTR [rip+0xdf39]        # 0x14003d780
   14002f847:	movsd  xmm5,xmm2
   14002f84b:	pand   xmm2,XMMWORD PTR [rip+0xde9d]        # 0x14003d6f0
   14002f853:	movq   rax,xmm2
   14002f858:	psrlq  xmm5,0x34
   14002f85d:	psubd  xmm5,XMMWORD PTR [rip+0xdfbb]        # 0x14003d820
   14002f865:	cvtdq2pd xmm6,xmm5
   14002f869:	jmp    0x14002f65f
   14002f86e:	xchg   ax,ax
   14002f870:	jne    0x14002f890
   14002f872:	movsd  xmm1,QWORD PTR [rip+0xde16]        # 0x14003d690
   14002f87a:	mov    r8d,DWORD PTR [rip+0xe04f]        # 0x14003d8d0
   14002f881:	call   0x1400303e0
   14002f886:	jmp    0x14002f8d0
   14002f888:	nop    DWORD PTR [rax+rax*1+0x0]
   14002f890:	movsd  xmm1,QWORD PTR [rip+0xde18]        # 0x14003d6b0
   14002f898:	mov    r8d,DWORD PTR [rip+0xe035]        # 0x14003d8d4
   14002f89f:	call   0x1400303e0
   14002f8a4:	jmp    0x14002f8d0
   14002f8a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002f8b0:	cmp    rax,QWORD PTR [rip+0xdde9]        # 0x14003d6a0
   14002f8b7:	je     0x14002f8d0
   14002f8b9:	cmp    rax,QWORD PTR [rip+0xddd0]        # 0x14003d690
   14002f8c0:	je     0x14002f890
   14002f8c2:	or     rax,QWORD PTR [rip+0xddf7]        # 0x14003d6c0
   14002f8c9:	movq   xmm0,rax
   14002f8ce:	xchg   ax,ax
   14002f8d0:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002f8d6:	add    rsp,0x58
   14002f8da:	ret    
   14002f8db:	nop    DWORD PTR [rax+rax*1+0x0]
   14002f8e0:	xor    rax,rax
   14002f8e3:	vpsrlq xmm3,xmm0,0x34
   14002f8e8:	vmovq  rax,xmm0
   14002f8ed:	vpsubq xmm3,xmm3,XMMWORD PTR [rip+0xdddb]        # 0x14003d6d0
   14002f8f5:	vcvtdq2pd xmm6,xmm3
   14002f8f9:	vpand  xmm5,xmm0,XMMWORD PTR [rip+0xdd9f]        # 0x14003d6a0
   14002f901:	vcomisd xmm5,QWORD PTR [rip+0xdd97]        # 0x14003d6a0
   14002f909:	je     0x14002fb50
   14002f90f:	vpxor  xmm5,xmm5,xmm5
   14002f913:	vcomisd xmm0,xmm5
   14002f917:	jbe    0x14002fb00
   14002f91d:	vpand  xmm2,xmm0,XMMWORD PTR [rip+0xddcb]        # 0x14003d6f0
   14002f925:	vsubsd xmm4,xmm0,QWORD PTR [rip+0xde53]        # 0x14003d780
   14002f92d:	vcomisd xmm6,QWORD PTR [rip+0xdedb]        # 0x14003d810
   14002f935:	je     0x14002fac9
   14002f93b:	vpand  xmm1,xmm0,XMMWORD PTR [rip+0xddbd]        # 0x14003d700
   14002f943:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0xddc5]        # 0x14003d710
   14002f94b:	vpsllq xmm3,xmm3,0x1
   14002f950:	vpaddq xmm1,xmm3,xmm1
   14002f954:	vmovq  rax,xmm1
   14002f959:	vpand  xmm4,xmm4,XMMWORD PTR [rip+0xdf0f]        # 0x14003d870
   14002f961:	vcomisd xmm4,QWORD PTR [rip+0xdec7]        # 0x14003d830
   14002f969:	jb     0x14002fa20
   14002f96f:	shr    rax,0x2c
   14002f973:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0xde15]        # 0x14003d790
   14002f97b:	vpor   xmm1,xmm1,XMMWORD PTR [rip+0xde0d]        # 0x14003d790
   14002f983:	lea    r9,[rip+0xef76]        # 0x14003e900
   14002f98a:	vsubsd xmm1,xmm1,xmm2
   14002f98e:	vmulsd xmm1,xmm1,QWORD PTR [r9+rax*8]
   14002f994:	lea    r9,[rip+0xdf45]        # 0x14003d8e0
   14002f99b:	vmulsd xmm0,xmm1,xmm1
   14002f99f:	vmovsd xmm3,QWORD PTR [rip+0xde59]        # 0x14003d800
   14002f9a7:	vmovsd xmm5,QWORD PTR [rip+0xde21]        # 0x14003d7d0
   14002f9af:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0xde38]        # 0x14003d7f0
   14002f9b8:	vfmadd213sd xmm5,xmm1,QWORD PTR [rip+0xddcf]        # 0x14003d790
   14002f9c1:	movsd  xmm4,xmm0
   14002f9c5:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0xde12]        # 0x14003d7e0
   14002f9ce:	vmulsd xmm4,xmm0,xmm0
   14002f9d2:	vfmadd231sd xmm1,xmm5,xmm0
   14002f9d7:	vfmadd231sd xmm1,xmm3,xmm4
   14002f9dc:	vmulsd xmm1,xmm1,QWORD PTR [rip+0xdd3c]        # 0x14003d720
   14002f9e4:	vmovsd xmm5,QWORD PTR [rip+0xdd74]        # 0x14003d760
   14002f9ec:	vfmsub213sd xmm5,xmm6,xmm1
   14002f9f1:	movsd  xmm0,QWORD PTR [r9+rax*8]
   14002f9f7:	lea    rdx,[rip+0xe6f2]        # 0x14003e0f0
   14002f9fe:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   14002fa03:	vaddsd xmm2,xmm2,xmm5
   14002fa07:	vfmadd231sd xmm0,xmm6,QWORD PTR [rip+0xdd40]        # 0x14003d750
   14002fa10:	vaddsd xmm0,xmm0,xmm2
   14002fa14:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fa1a:	add    rsp,0x58
   14002fa1e:	ret    
   14002fa1f:	nop
   14002fa20:	vmovsd xmm2,QWORD PTR [rip+0xdd48]        # 0x14003d770
   14002fa28:	vsubsd xmm0,xmm0,QWORD PTR [rip+0xdd50]        # 0x14003d780
   14002fa30:	vaddsd xmm2,xmm2,xmm0
   14002fa34:	vdivsd xmm1,xmm0,xmm2
   14002fa38:	vmovsd xmm4,QWORD PTR [rip+0xde50]        # 0x14003d890
   14002fa40:	vmovsd xmm5,QWORD PTR [rip+0xde68]        # 0x14003d8b0
   14002fa48:	vmulsd xmm6,xmm0,xmm1
   14002fa4c:	vaddsd xmm1,xmm1,xmm1
   14002fa50:	vmulsd xmm2,xmm1,xmm1
   14002fa54:	vfmadd213sd xmm4,xmm2,QWORD PTR [rip+0xde23]        # 0x14003d880
   14002fa5d:	vfmadd213sd xmm5,xmm2,QWORD PTR [rip+0xde3a]        # 0x14003d8a0
   14002fa66:	vmulsd xmm2,xmm2,xmm1
   14002fa6a:	vmulsd xmm4,xmm4,xmm2
   14002fa6e:	vmulsd xmm2,xmm2,xmm2
   14002fa72:	vmulsd xmm2,xmm2,xmm1
   14002fa76:	vmulsd xmm5,xmm5,xmm2
   14002fa7a:	vaddsd xmm4,xmm4,xmm5
   14002fa7e:	vsubsd xmm4,xmm4,xmm6
   14002fa82:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0xde36]        # 0x14003d8c0
   14002fa8a:	vsubsd xmm0,xmm0,xmm3
   14002fa8e:	vaddsd xmm4,xmm4,xmm0
   14002fa92:	vmulsd xmm1,xmm4,QWORD PTR [rip+0xdc96]        # 0x14003d730
   14002fa9a:	vmulsd xmm4,xmm4,QWORD PTR [rip+0xdc9e]        # 0x14003d740
   14002faa2:	vmulsd xmm0,xmm3,QWORD PTR [rip+0xdc96]        # 0x14003d740
   14002faaa:	vmulsd xmm3,xmm3,QWORD PTR [rip+0xdc7e]        # 0x14003d730
   14002fab2:	vaddsd xmm0,xmm0,xmm4
   14002fab6:	vaddsd xmm0,xmm0,xmm1
   14002faba:	vaddsd xmm0,xmm0,xmm3
   14002fabe:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fac4:	add    rsp,0x58
   14002fac8:	ret    
   14002fac9:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0xdcaf]        # 0x14003d780
   14002fad1:	vsubsd xmm2,xmm2,QWORD PTR [rip+0xdca7]        # 0x14003d780
   14002fad9:	vpsrlq xmm5,xmm2,0x34
   14002fade:	vpand  xmm2,xmm2,XMMWORD PTR [rip+0xdc0a]        # 0x14003d6f0
   14002fae6:	vmovapd xmm0,xmm2
   14002faea:	vpsubd xmm5,xmm5,XMMWORD PTR [rip+0xdd2e]        # 0x14003d820
   14002faf2:	vcvtdq2pd xmm6,xmm5
   14002faf6:	jmp    0x14002f93b
   14002fafb:	nop    DWORD PTR [rax+rax*1+0x0]
   14002fb00:	jne    0x14002fb30
   14002fb02:	vmovsd xmm1,QWORD PTR [rip+0xdb86]        # 0x14003d690
   14002fb0a:	mov    r8d,DWORD PTR [rip+0xddbf]        # 0x14003d8d0
   14002fb11:	call   0x1400303e0
   14002fb16:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fb1c:	add    rsp,0x58
   14002fb20:	ret    
   14002fb21:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002fb30:	vmovsd xmm1,QWORD PTR [rip+0xdb78]        # 0x14003d6b0
   14002fb38:	mov    r8d,DWORD PTR [rip+0xdd95]        # 0x14003d8d4
   14002fb3f:	call   0x1400303e0
   14002fb44:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fb4a:	add    rsp,0x58
   14002fb4e:	ret    
   14002fb4f:	nop
   14002fb50:	cmp    rax,QWORD PTR [rip+0xdb49]        # 0x14003d6a0
   14002fb57:	je     0x14002fb80
   14002fb59:	cmp    rax,QWORD PTR [rip+0xdb30]        # 0x14003d690
   14002fb60:	je     0x14002fb30
   14002fb62:	or     rax,QWORD PTR [rip+0xdb57]        # 0x14003d6c0
   14002fb69:	movq   xmm1,rax
   14002fb6e:	mov    r8d,DWORD PTR [rip+0xdd63]        # 0x14003d8d8
   14002fb75:	call   0x1400303e0
   14002fb7a:	jmp    0x14002fb80
   14002fb7c:	nop    DWORD PTR [rax+0x0]
   14002fb80:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fb86:	add    rsp,0x58
   14002fb8a:	ret    
   14002fb8b:	int3   
   14002fb8c:	mov    r10,rcx
   14002fb8f:	test   r8,r8
   14002fb92:	je     0x14002fbd0
   14002fb94:	movzx  r9d,BYTE PTR [r10]
   14002fb98:	inc    r10
   14002fb9b:	lea    eax,[r9-0x41]
   14002fb9f:	cmp    eax,0x19
   14002fba2:	ja     0x14002fba8
   14002fba4:	add    r9d,0x20
   14002fba8:	movzx  ecx,BYTE PTR [rdx]
   14002fbab:	inc    rdx
   14002fbae:	lea    eax,[rcx-0x41]
   14002fbb1:	cmp    eax,0x19
   14002fbb4:	ja     0x14002fbb9
   14002fbb6:	add    ecx,0x20
   14002fbb9:	sub    r8,0x1
   14002fbbd:	je     0x14002fbc9
   14002fbbf:	test   r9d,r9d
   14002fbc2:	je     0x14002fbc9
   14002fbc4:	cmp    r9d,ecx
   14002fbc7:	je     0x14002fb94
   14002fbc9:	sub    r9d,ecx
   14002fbcc:	mov    eax,r9d
   14002fbcf:	ret    
   14002fbd0:	xor    eax,eax
   14002fbd2:	ret    
   14002fbd3:	int3   
   14002fbd4:	sub    rsp,0x28
   14002fbd8:	mov    eax,DWORD PTR [rip+0x18afa]        # 0x1400486d8
   14002fbde:	test   eax,eax
   14002fbe0:	jne    0x14002fc18
   14002fbe2:	test   rcx,rcx
   14002fbe5:	jne    0x14002fc01
   14002fbe7:	call   0x14002a494
   14002fbec:	mov    DWORD PTR [rax],0x16
   14002fbf2:	call   0x1400281ac
   14002fbf7:	mov    eax,0x7fffffff
   14002fbfc:	add    rsp,0x28
   14002fc00:	ret    
   14002fc01:	test   rdx,rdx
   14002fc04:	je     0x14002fbe7
   14002fc06:	cmp    r8,0x7fffffff
   14002fc0d:	ja     0x14002fbe7
   14002fc0f:	add    rsp,0x28
   14002fc13:	jmp    0x14002fb8c
   14002fc18:	xor    r9d,r9d
   14002fc1b:	add    rsp,0x28
   14002fc1f:	jmp    0x14002fc24
   14002fc24:	mov    rax,rsp
   14002fc27:	mov    QWORD PTR [rax+0x8],rbx
   14002fc2b:	mov    QWORD PTR [rax+0x10],rbp
   14002fc2f:	mov    QWORD PTR [rax+0x18],rsi
   14002fc33:	push   rdi
   14002fc34:	sub    rsp,0x40
   14002fc38:	mov    rbp,r8
   14002fc3b:	mov    rdi,rdx
   14002fc3e:	mov    rsi,rcx
   14002fc41:	test   r8,r8
   14002fc44:	je     0x14002fce7
   14002fc4a:	mov    rdx,r9
   14002fc4d:	lea    rcx,[rax-0x28]
   14002fc51:	call   0x1400288e8
   14002fc56:	mov    ebx,0x7fffffff
   14002fc5b:	test   rsi,rsi
   14002fc5e:	je     0x14002fc6a
   14002fc60:	test   rdi,rdi
   14002fc63:	je     0x14002fc6a
   14002fc65:	cmp    rbp,rbx
   14002fc68:	jbe    0x14002fc7c
   14002fc6a:	call   0x14002a494
   14002fc6f:	mov    DWORD PTR [rax],0x16
   14002fc75:	call   0x1400281ac
   14002fc7a:	jmp    0x14002fcd0
   14002fc7c:	mov    rax,QWORD PTR [rsp+0x28]
   14002fc81:	cmp    QWORD PTR [rax+0x138],0x0
   14002fc89:	jne    0x14002fc9d
   14002fc8b:	mov    r8,rbp
   14002fc8e:	mov    rdx,rdi
   14002fc91:	mov    rcx,rsi
   14002fc94:	call   0x14002fb8c
   14002fc99:	mov    ebx,eax
   14002fc9b:	jmp    0x14002fcd0
   14002fc9d:	sub    rsi,rdi
   14002fca0:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   14002fca4:	lea    rdx,[rsp+0x28]
   14002fca9:	call   0x14002baa0
   14002fcae:	movzx  ecx,BYTE PTR [rdi]
   14002fcb1:	lea    rdx,[rsp+0x28]
   14002fcb6:	mov    ebx,eax
   14002fcb8:	call   0x14002baa0
   14002fcbd:	inc    rdi
   14002fcc0:	sub    rbp,0x1
   14002fcc4:	je     0x14002fcce
   14002fcc6:	test   ebx,ebx
   14002fcc8:	je     0x14002fcce
   14002fcca:	cmp    ebx,eax
   14002fccc:	je     0x14002fca0
   14002fcce:	sub    ebx,eax
   14002fcd0:	cmp    BYTE PTR [rsp+0x38],0x0
   14002fcd5:	je     0x14002fce3
   14002fcd7:	mov    rax,QWORD PTR [rsp+0x20]
   14002fcdc:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002fce3:	mov    eax,ebx
   14002fce5:	jmp    0x14002fce9
   14002fce7:	xor    eax,eax
   14002fce9:	mov    rbx,QWORD PTR [rsp+0x50]
   14002fcee:	mov    rbp,QWORD PTR [rsp+0x58]
   14002fcf3:	mov    rsi,QWORD PTR [rsp+0x60]
   14002fcf8:	add    rsp,0x40
   14002fcfc:	pop    rdi
   14002fcfd:	ret    
   14002fcfe:	int3   
   14002fcff:	int3   
   14002fd00:	rex push rbp
   14002fd02:	push   rbx
   14002fd03:	push   rsi
   14002fd04:	push   rdi
   14002fd05:	push   r12
   14002fd07:	push   r13
   14002fd09:	push   r14
   14002fd0b:	push   r15
   14002fd0d:	sub    rsp,0x88
   14002fd14:	lea    rbp,[rsp+0x50]
   14002fd19:	mov    rax,QWORD PTR [rip+0x164c8]        # 0x1400461e8
   14002fd20:	xor    rax,rbp
   14002fd23:	mov    QWORD PTR [rbp+0x28],rax
   14002fd27:	movsxd rbx,DWORD PTR [rbp+0xa0]
   14002fd2e:	xor    r12d,r12d
   14002fd31:	mov    r13,QWORD PTR [rbp+0xa8]
   14002fd38:	mov    r15,r9
   14002fd3b:	mov    DWORD PTR [rbp+0x0],r8d
   14002fd3f:	mov    rdi,rcx
   14002fd42:	mov    QWORD PTR [rbp+0x8],rdx
   14002fd46:	test   ebx,ebx
   14002fd48:	jle    0x14002fd73
   14002fd4a:	mov    rdx,rbx
   14002fd4d:	mov    rcx,r9
   14002fd50:	call   0x14002f5bc
   14002fd55:	mov    rbx,rax
   14002fd58:	movsxd rsi,DWORD PTR [rbp+0xb0]
   14002fd5f:	test   esi,esi
   14002fd61:	jle    0x14002fd7f
   14002fd63:	mov    rdx,rsi
   14002fd66:	mov    rcx,r13
   14002fd69:	call   0x14002f5bc
   14002fd6e:	mov    rsi,rax
   14002fd71:	jmp    0x14002fd84
   14002fd73:	cmp    ebx,0xffffffff
   14002fd76:	jge    0x14002fd58
   14002fd78:	xor    eax,eax
   14002fd7a:	jmp    0x140030075
   14002fd7f:	cmp    esi,0xffffffff
   14002fd82:	jl     0x14002fd78
   14002fd84:	mov    r14d,DWORD PTR [rbp+0xb8]
   14002fd8b:	test   r14d,r14d
   14002fd8e:	jne    0x14002fd97
   14002fd90:	mov    rax,QWORD PTR [rdi]
   14002fd93:	mov    r14d,DWORD PTR [rax+0xc]
   14002fd97:	mov    edi,0x1
   14002fd9c:	test   ebx,ebx
   14002fd9e:	je     0x14002fda8
   14002fda0:	test   esi,esi
   14002fda2:	jne    0x14002fe43
   14002fda8:	cmp    ebx,esi
   14002fdaa:	jne    0x14002fdb6
   14002fdac:	mov    eax,0x2
   14002fdb1:	jmp    0x140030075
   14002fdb6:	cmp    esi,edi
   14002fdb8:	jle    0x14002fdc1
   14002fdba:	mov    eax,edi
   14002fdbc:	jmp    0x140030075
   14002fdc1:	cmp    ebx,edi
   14002fdc3:	jle    0x14002fdcf
   14002fdc5:	mov    eax,0x3
   14002fdca:	jmp    0x140030075
   14002fdcf:	lea    rdx,[rbp+0x10]
   14002fdd3:	mov    ecx,r14d
   14002fdd6:	call   QWORD PTR [rip+0x226c]        # 0x140032048
   14002fddc:	test   eax,eax
   14002fdde:	je     0x14002fd78
   14002fde0:	test   ebx,ebx
   14002fde2:	jle    0x14002fe0f
   14002fde4:	cmp    DWORD PTR [rbp+0x10],0x2
   14002fde8:	jb     0x14002fdc5
   14002fdea:	cmp    BYTE PTR [rbp+0x16],r12b
   14002fdee:	lea    rax,[rbp+0x16]
   14002fdf2:	je     0x14002fdc5
   14002fdf4:	cmp    BYTE PTR [rax+0x1],r12b
   14002fdf8:	je     0x14002fdc5
   14002fdfa:	mov    cl,BYTE PTR [r15]
   14002fdfd:	cmp    cl,BYTE PTR [rax]
   14002fdff:	jb     0x14002fe06
   14002fe01:	cmp    cl,BYTE PTR [rax+0x1]
   14002fe04:	jbe    0x14002fdac
   14002fe06:	add    rax,0x2
   14002fe0a:	cmp    BYTE PTR [rax],r12b
   14002fe0d:	jmp    0x14002fdf2
   14002fe0f:	test   esi,esi
   14002fe11:	jle    0x14002fe43
   14002fe13:	cmp    DWORD PTR [rbp+0x10],0x2
   14002fe17:	jb     0x14002fdba
   14002fe19:	cmp    BYTE PTR [rbp+0x16],r12b
   14002fe1d:	lea    rax,[rbp+0x16]
   14002fe21:	je     0x14002fdba
   14002fe23:	cmp    BYTE PTR [rax+0x1],r12b
   14002fe27:	je     0x14002fdba
   14002fe29:	mov    cl,BYTE PTR [r13+0x0]
   14002fe2d:	cmp    cl,BYTE PTR [rax]
   14002fe2f:	jb     0x14002fe3a
   14002fe31:	cmp    cl,BYTE PTR [rax+0x1]
   14002fe34:	jbe    0x14002fdac
   14002fe3a:	add    rax,0x2
   14002fe3e:	cmp    BYTE PTR [rax],r12b
   14002fe41:	jmp    0x14002fe21
   14002fe43:	mov    DWORD PTR [rsp+0x28],r12d
   14002fe48:	mov    r9d,ebx
   14002fe4b:	mov    r8,r15
   14002fe4e:	mov    QWORD PTR [rsp+0x20],r12
   14002fe53:	mov    edx,0x9
   14002fe58:	mov    ecx,r14d
   14002fe5b:	call   QWORD PTR [rip+0x225f]        # 0x1400320c0
   14002fe61:	movsxd r12,eax
   14002fe64:	test   eax,eax
   14002fe66:	je     0x14002fd78
   14002fe6c:	mov    rdx,r12
   14002fe6f:	movabs r8,0xffffffffffffff0
   14002fe79:	add    rdx,rdx
   14002fe7c:	lea    rcx,[rdx+0x10]
   14002fe80:	cmp    rdx,rcx
   14002fe83:	sbb    rax,rax
   14002fe86:	test   rcx,rax
   14002fe89:	je     0x14002fefd
   14002fe8b:	lea    rcx,[rdx+0x10]
   14002fe8f:	cmp    rdx,rcx
   14002fe92:	sbb    rax,rax
   14002fe95:	and    rax,rcx
   14002fe98:	cmp    rax,0x400
   14002fe9e:	lea    rax,[rdx+0x10]
   14002fea2:	ja     0x14002fedb
   14002fea4:	cmp    rdx,rax
   14002fea7:	sbb    rcx,rcx
   14002feaa:	and    rcx,rax
   14002fead:	lea    rax,[rcx+0xf]
   14002feb1:	cmp    rax,rcx
   14002feb4:	ja     0x14002feb9
   14002feb6:	mov    rax,r8
   14002feb9:	and    rax,0xfffffffffffffff0
   14002febd:	call   0x1400263c0
   14002fec2:	sub    rsp,rax
   14002fec5:	lea    rdi,[rsp+0x50]
   14002feca:	test   rdi,rdi
   14002fecd:	je     0x14003005b
   14002fed3:	mov    DWORD PTR [rdi],0xcccc
   14002fed9:	jmp    0x14002fef7
   14002fedb:	cmp    rdx,rax
   14002fede:	sbb    rcx,rcx
   14002fee1:	and    rcx,rax
   14002fee4:	call   0x140007bf0
   14002fee9:	mov    rdi,rax
   14002feec:	test   rax,rax
   14002feef:	je     0x14002feff
   14002fef1:	mov    DWORD PTR [rax],0xdddd
   14002fef7:	add    rdi,0x10
   14002fefb:	jmp    0x14002feff
   14002fefd:	xor    edi,edi
   14002feff:	test   rdi,rdi
   14002ff02:	je     0x14003005b
   14002ff08:	mov    DWORD PTR [rsp+0x28],r12d
   14002ff0d:	mov    r9d,ebx
   14002ff10:	mov    r8,r15
   14002ff13:	mov    QWORD PTR [rsp+0x20],rdi
   14002ff18:	mov    edx,0x1
   14002ff1d:	mov    ecx,r14d
   14002ff20:	call   QWORD PTR [rip+0x219a]        # 0x1400320c0
   14002ff26:	test   eax,eax
   14002ff28:	je     0x14003005b
   14002ff2e:	and    DWORD PTR [rsp+0x28],0x0
   14002ff33:	mov    r9d,esi
   14002ff36:	and    QWORD PTR [rsp+0x20],0x0
   14002ff3c:	mov    r8,r13
   14002ff3f:	mov    edx,0x9
   14002ff44:	mov    ecx,r14d
   14002ff47:	call   QWORD PTR [rip+0x2173]        # 0x1400320c0
   14002ff4d:	movsxd r15,eax
   14002ff50:	test   eax,eax
   14002ff52:	je     0x14003005b
   14002ff58:	mov    r8,r15
   14002ff5b:	add    r8,r8
   14002ff5e:	lea    rdx,[r8+0x10]
   14002ff62:	cmp    r8,rdx
   14002ff65:	sbb    rcx,rcx
   14002ff68:	test   rdx,rcx
   14002ff6b:	je     0x14002ffe6
   14002ff6d:	lea    rcx,[r8+0x10]
   14002ff71:	cmp    r8,rcx
   14002ff74:	sbb    rax,rax
   14002ff77:	and    rax,rcx
   14002ff7a:	cmp    rax,0x400
   14002ff80:	lea    rax,[r8+0x10]
   14002ff84:	ja     0x14002ffc4
   14002ff86:	cmp    r8,rax
   14002ff89:	sbb    rcx,rcx
   14002ff8c:	and    rcx,rax
   14002ff8f:	lea    rax,[rcx+0xf]
   14002ff93:	cmp    rax,rcx
   14002ff96:	ja     0x14002ffa2
   14002ff98:	movabs rax,0xffffffffffffff0
   14002ffa2:	and    rax,0xfffffffffffffff0
   14002ffa6:	call   0x1400263c0
   14002ffab:	sub    rsp,rax
   14002ffae:	lea    rbx,[rsp+0x50]
   14002ffb3:	test   rbx,rbx
   14002ffb6:	je     0x140030041
   14002ffbc:	mov    DWORD PTR [rbx],0xcccc
   14002ffc2:	jmp    0x14002ffe0
   14002ffc4:	cmp    r8,rax
   14002ffc7:	sbb    rcx,rcx
   14002ffca:	and    rcx,rax
   14002ffcd:	call   0x140007bf0
   14002ffd2:	mov    rbx,rax
   14002ffd5:	test   rax,rax
   14002ffd8:	je     0x14002ffe8
   14002ffda:	mov    DWORD PTR [rax],0xdddd
   14002ffe0:	add    rbx,0x10
   14002ffe4:	jmp    0x14002ffe8
   14002ffe6:	xor    ebx,ebx
   14002ffe8:	test   rbx,rbx
   14002ffeb:	je     0x140030041
   14002ffed:	mov    DWORD PTR [rsp+0x28],r15d
   14002fff2:	mov    r9d,esi
   14002fff5:	mov    r8,r13
   14002fff8:	mov    QWORD PTR [rsp+0x20],rbx
   14002fffd:	mov    edx,0x1
   140030002:	mov    ecx,r14d
   140030005:	call   QWORD PTR [rip+0x20b5]        # 0x1400320c0
   14003000b:	test   eax,eax
   14003000d:	je     0x140030041
   14003000f:	and    QWORD PTR [rsp+0x40],0x0
   140030015:	mov    r9d,r12d
   140030018:	and    QWORD PTR [rsp+0x38],0x0
   14003001e:	mov    r8,rdi
   140030021:	and    QWORD PTR [rsp+0x30],0x0
   140030027:	mov    edx,DWORD PTR [rbp+0x0]
   14003002a:	mov    rcx,QWORD PTR [rbp+0x8]
   14003002e:	mov    DWORD PTR [rsp+0x28],r15d
   140030033:	mov    QWORD PTR [rsp+0x20],rbx
   140030038:	call   0x14002a654
   14003003d:	mov    esi,eax
   14003003f:	jmp    0x140030043
   140030041:	xor    esi,esi
   140030043:	test   rbx,rbx
   140030046:	je     0x14003005d
   140030048:	lea    rcx,[rbx-0x10]
   14003004c:	cmp    DWORD PTR [rcx],0xdddd
   140030052:	jne    0x14003005d
   140030054:	call   0x140007bd0
   140030059:	jmp    0x14003005d
   14003005b:	xor    esi,esi
   14003005d:	test   rdi,rdi
   140030060:	je     0x140030073
   140030062:	lea    rcx,[rdi-0x10]
   140030066:	cmp    DWORD PTR [rcx],0xdddd
   14003006c:	jne    0x140030073
   14003006e:	call   0x140007bd0
   140030073:	mov    eax,esi
   140030075:	mov    rcx,QWORD PTR [rbp+0x28]
   140030079:	xor    rcx,rbp
   14003007c:	call   0x140030a30
   140030081:	lea    rsp,[rbp+0x38]
   140030085:	pop    r15
   140030087:	pop    r14
   140030089:	pop    r13
   14003008b:	pop    r12
   14003008d:	pop    rdi
   14003008e:	pop    rsi
   14003008f:	pop    rbx
   140030090:	pop    rbp
   140030091:	ret    
   140030092:	int3   
   140030093:	int3   
   140030094:	mov    QWORD PTR [rsp+0x8],rbx
   140030099:	mov    QWORD PTR [rsp+0x10],rsi
   14003009e:	push   rdi
   14003009f:	sub    rsp,0x60
   1400300a3:	mov    rsi,rdx
   1400300a6:	mov    rbx,r9
   1400300a9:	mov    rdx,rcx
   1400300ac:	mov    edi,r8d
   1400300af:	lea    rcx,[rsp+0x40]
   1400300b4:	call   0x1400288e8
   1400300b9:	mov    eax,DWORD PTR [rsp+0xa8]
   1400300c0:	lea    rcx,[rsp+0x48]
   1400300c5:	mov    DWORD PTR [rsp+0x38],eax
   1400300c9:	mov    r9,rbx
   1400300cc:	mov    eax,DWORD PTR [rsp+0xa0]
   1400300d3:	mov    r8d,edi
   1400300d6:	mov    DWORD PTR [rsp+0x30],eax
   1400300da:	mov    rdx,rsi
   1400300dd:	mov    rax,QWORD PTR [rsp+0x98]
   1400300e5:	mov    QWORD PTR [rsp+0x28],rax
   1400300ea:	mov    eax,DWORD PTR [rsp+0x90]
   1400300f1:	mov    DWORD PTR [rsp+0x20],eax
   1400300f5:	call   0x14002fd00
   1400300fa:	cmp    BYTE PTR [rsp+0x58],0x0
   1400300ff:	je     0x14003010d
   140030101:	mov    rcx,QWORD PTR [rsp+0x40]
   140030106:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14003010d:	mov    rbx,QWORD PTR [rsp+0x70]
   140030112:	mov    rsi,QWORD PTR [rsp+0x78]
   140030117:	add    rsp,0x60
   14003011b:	pop    rdi
   14003011c:	ret    
   14003011d:	int3   
   14003011e:	int3   
   14003011f:	int3   
   140030120:	mov    rax,rsp
   140030123:	push   rbx
   140030124:	sub    rsp,0x50
   140030128:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140030131:	mov    ebx,ecx
   140030133:	movsd  xmm1,QWORD PTR [rsp+0x88]
   14003013c:	mov    edx,0xffc0
   140030141:	mov    DWORD PTR [rax-0x38],ecx
   140030144:	mov    rcx,QWORD PTR [rsp+0x90]
   14003014c:	movsd  QWORD PTR [rax-0x20],xmm0
   140030151:	movsd  QWORD PTR [rax-0x18],xmm1
   140030156:	movsd  QWORD PTR [rax-0x28],xmm3
   14003015b:	mov    QWORD PTR [rax-0x30],r8
   14003015f:	call   0x140030818
   140030164:	lea    rcx,[rsp+0x20]
   140030169:	call   0x140029af0
   14003016e:	test   eax,eax
   140030170:	jne    0x140030179
   140030172:	mov    ecx,ebx
   140030174:	call   0x1400307c8
   140030179:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14003017f:	add    rsp,0x50
   140030183:	pop    rbx
   140030184:	ret    
   140030185:	int3   
   140030186:	int3   
   140030187:	int3   
   140030188:	mov    QWORD PTR [rsp+0x8],rbx
   14003018d:	mov    QWORD PTR [rsp+0x10],rsi
   140030192:	push   rdi
   140030193:	sub    rsp,0x20
   140030197:	mov    ebx,ecx
   140030199:	mov    rsi,rdx
   14003019c:	and    ebx,0x1f
   14003019f:	mov    edi,ecx
   1400301a1:	test   cl,0x8
   1400301a4:	je     0x1400301b9
   1400301a6:	test   dl,dl
   1400301a8:	jns    0x1400301b9
   1400301aa:	mov    ecx,0x1
   1400301af:	call   0x140030894
   1400301b4:	and    ebx,0xfffffff7
   1400301b7:	jmp    0x140030210
   1400301b9:	mov    ecx,0x4
   1400301be:	test   cl,dil
   1400301c1:	je     0x1400301d4
   1400301c3:	bt     rdx,0x9
   1400301c8:	jae    0x1400301d4
   1400301ca:	call   0x140030894
   1400301cf:	and    ebx,0xfffffffb
   1400301d2:	jmp    0x140030210
   1400301d4:	test   dil,0x1
   1400301d8:	je     0x1400301f0
   1400301da:	bt     rdx,0xa
   1400301df:	jae    0x1400301f0
   1400301e1:	mov    ecx,0x8
   1400301e6:	call   0x140030894
   1400301eb:	and    ebx,0xfffffffe
   1400301ee:	jmp    0x140030210
   1400301f0:	test   dil,0x2
   1400301f4:	je     0x140030210
   1400301f6:	bt     rdx,0xb
   1400301fb:	jae    0x140030210
   1400301fd:	test   dil,0x10
   140030201:	je     0x14003020d
   140030203:	mov    ecx,0x10
   140030208:	call   0x140030894
   14003020d:	and    ebx,0xfffffffd
   140030210:	test   dil,0x10
   140030214:	je     0x14003022a
   140030216:	bt     rsi,0xc
   14003021b:	jae    0x14003022a
   14003021d:	mov    ecx,0x20
   140030222:	call   0x140030894
   140030227:	and    ebx,0xffffffef
   14003022a:	mov    rsi,QWORD PTR [rsp+0x38]
   14003022f:	xor    eax,eax
   140030231:	test   ebx,ebx
   140030233:	mov    rbx,QWORD PTR [rsp+0x30]
   140030238:	sete   al
   14003023b:	add    rsp,0x20
   14003023f:	pop    rdi
   140030240:	ret    
   140030241:	int3   
   140030242:	int3   
   140030243:	int3   
   140030244:	mov    rax,rsp
   140030247:	push   rbp
   140030248:	push   rbx
   140030249:	push   rsi
   14003024a:	push   rdi
   14003024b:	push   r14
   14003024d:	lea    rbp,[rax-0x37]
   140030251:	sub    rsp,0xf0
   140030258:	movaps XMMWORD PTR [rax-0x38],xmm6
   14003025c:	mov    rax,QWORD PTR [rip+0x15f85]        # 0x1400461e8
   140030263:	xor    rax,rsp
   140030266:	mov    QWORD PTR [rbp-0x11],rax
   14003026a:	mov    esi,edx
   14003026c:	mov    r14,rcx
   14003026f:	mov    edx,0xffc0
   140030274:	mov    ecx,0x1f80
   140030279:	mov    edi,r9d
   14003027c:	mov    rbx,r8
   14003027f:	call   0x140030818
   140030284:	mov    ecx,DWORD PTR [rbp+0x5f]
   140030287:	mov    QWORD PTR [rsp+0x40],rax
   14003028c:	mov    QWORD PTR [rsp+0x50],rbx
   140030291:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140030297:	mov    rdx,QWORD PTR [rsp+0x40]
   14003029c:	movsd  QWORD PTR [rsp+0x48],xmm0
   1400302a2:	call   0x140030188
   1400302a7:	movsd  xmm6,QWORD PTR [rbp+0x77]
   1400302ac:	test   eax,eax
   1400302ae:	jne    0x1400302f0
   1400302b0:	cmp    DWORD PTR [rbp+0x7f],0x2
   1400302b4:	jne    0x1400302c7
   1400302b6:	mov    eax,DWORD PTR [rbp-0x41]
   1400302b9:	and    eax,0xffffffe3
   1400302bc:	movsd  QWORD PTR [rbp-0x51],xmm6
   1400302c1:	or     eax,0x3
   1400302c4:	mov    DWORD PTR [rbp-0x41],eax
   1400302c7:	mov    r8d,DWORD PTR [rbp+0x5f]
   1400302cb:	lea    rax,[rsp+0x48]
   1400302d0:	mov    QWORD PTR [rsp+0x28],rax
   1400302d5:	lea    rdx,[rsp+0x40]
   1400302da:	lea    rax,[rbp+0x6f]
   1400302de:	mov    r9d,esi
   1400302e1:	lea    rcx,[rsp+0x60]
   1400302e6:	mov    QWORD PTR [rsp+0x20],rax
   1400302eb:	call   0x140030498
   1400302f0:	call   0x140029ac8
   1400302f5:	test   al,al
   1400302f7:	je     0x14003032d
   1400302f9:	test   edi,edi
   1400302fb:	je     0x14003032d
   1400302fd:	mov    rax,QWORD PTR [rsp+0x40]
   140030302:	mov    r8,r14
   140030305:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14003030b:	mov    ecx,edi
   14003030d:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   140030312:	mov    edx,DWORD PTR [rbp+0x67]
   140030315:	mov    QWORD PTR [rsp+0x30],rax
   14003031a:	movsd  QWORD PTR [rsp+0x28],xmm0
   140030320:	movsd  QWORD PTR [rsp+0x20],xmm6
   140030326:	call   0x140030120
   14003032b:	jmp    0x140030349
   14003032d:	mov    ecx,edi
   14003032f:	call   0x1400307c8
   140030334:	mov    rcx,QWORD PTR [rsp+0x40]
   140030339:	mov    edx,0xffc0
   14003033e:	call   0x140030818
   140030343:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140030349:	mov    rcx,QWORD PTR [rbp-0x11]
   14003034d:	xor    rcx,rsp
   140030350:	call   0x140030a30
   140030355:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14003035d:	add    rsp,0xf0
   140030364:	pop    r14
   140030366:	pop    rdi
   140030367:	pop    rsi
   140030368:	pop    rbx
   140030369:	pop    rbp
   14003036a:	ret    
   14003036b:	int3   
   14003036c:	int3   
   14003036d:	int3   
   14003036e:	int3   
   14003036f:	int3   
   140030370:	rex push rbx
   140030372:	sub    rsp,0x10
   140030376:	xor    r8d,r8d
   140030379:	xor    ecx,ecx
   14003037b:	mov    DWORD PTR [rip+0x18bba],r8d        # 0x140048f3c
   140030382:	lea    r9d,[r8+0x1]
   140030386:	mov    eax,r9d
   140030389:	cpuid  
   14003038b:	mov    DWORD PTR [rsp],eax
   14003038e:	mov    eax,0x18001000
   140030393:	mov    DWORD PTR [rsp+0x8],ecx
   140030397:	and    ecx,eax
   140030399:	mov    DWORD PTR [rsp+0x4],ebx
   14003039d:	mov    DWORD PTR [rsp+0xc],edx
   1400303a1:	cmp    ecx,eax
   1400303a3:	jne    0x1400303d1
   1400303a5:	xor    ecx,ecx
   1400303a7:	xgetbv 
   1400303aa:	shl    rdx,0x20
   1400303ae:	or     rdx,rax
   1400303b1:	mov    QWORD PTR [rsp+0x20],rdx
   1400303b6:	mov    rax,QWORD PTR [rsp+0x20]
   1400303bb:	mov    r8d,DWORD PTR [rip+0x18b7a]        # 0x140048f3c
   1400303c2:	and    al,0x6
   1400303c4:	cmp    al,0x6
   1400303c6:	cmove  r8d,r9d
   1400303ca:	mov    DWORD PTR [rip+0x18b6b],r8d        # 0x140048f3c
   1400303d1:	mov    DWORD PTR [rip+0x18b68],r8d        # 0x140048f40
   1400303d8:	xor    eax,eax
   1400303da:	add    rsp,0x10
   1400303de:	pop    rbx
   1400303df:	ret    
   1400303e0:	sub    rsp,0x38
   1400303e4:	lea    rax,[rip+0xed25]        # 0x14003f110
   1400303eb:	mov    r9d,0x1b
   1400303f1:	mov    QWORD PTR [rsp+0x20],rax
   1400303f6:	call   0x140030400
   1400303fb:	add    rsp,0x38
   1400303ff:	ret    
   140030400:	mov    rax,rsp
   140030403:	sub    rsp,0x68
   140030407:	movaps XMMWORD PTR [rax-0x18],xmm6
   14003040b:	movaps xmm6,xmm1
   14003040e:	mov    edx,r9d
   140030411:	movaps xmm3,xmm0
   140030414:	sub    r8d,0x1
   140030418:	je     0x140030444
   14003041a:	cmp    r8d,0x1
   14003041e:	jne    0x140030489
   140030420:	mov    DWORD PTR [rax-0x28],r8d
   140030424:	xorps  xmm2,xmm2
   140030427:	movsd  QWORD PTR [rax-0x30],xmm2
   14003042c:	mov    r9d,r8d
   14003042f:	movsd  QWORD PTR [rax-0x38],xmm0
   140030434:	mov    DWORD PTR [rax-0x40],0x21
   14003043b:	mov    DWORD PTR [rax-0x48],0x8
   140030442:	jmp    0x140030471
   140030444:	mov    DWORD PTR [rsp+0x40],0x1
   14003044c:	xorps  xmm0,xmm0
   14003044f:	movsd  QWORD PTR [rsp+0x38],xmm0
   140030455:	mov    r9d,0x2
   14003045b:	movsd  QWORD PTR [rsp+0x30],xmm3
   140030461:	mov    DWORD PTR [rsp+0x28],0x22
   140030469:	mov    DWORD PTR [rsp+0x20],0x4
   140030471:	mov    rcx,QWORD PTR [rsp+0x90]
   140030479:	movsd  QWORD PTR [rsp+0x78],xmm1
   14003047f:	mov    r8,QWORD PTR [rsp+0x78]
   140030484:	call   0x140030244
   140030489:	movaps xmm0,xmm6
   14003048c:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140030491:	add    rsp,0x68
   140030495:	ret    
   140030496:	int3   
   140030497:	int3   
   140030498:	sub    rsp,0x48
   14003049c:	and    DWORD PTR [rsp+0x30],0x0
   1400304a1:	mov    rax,QWORD PTR [rsp+0x78]
   1400304a6:	mov    QWORD PTR [rsp+0x28],rax
   1400304ab:	mov    rax,QWORD PTR [rsp+0x70]
   1400304b0:	mov    QWORD PTR [rsp+0x20],rax
   1400304b5:	call   0x1400304c0
   1400304ba:	add    rsp,0x48
   1400304be:	ret    
   1400304bf:	int3   
   1400304c0:	mov    rax,rsp
   1400304c3:	mov    QWORD PTR [rax+0x10],rbx
   1400304c7:	mov    QWORD PTR [rax+0x18],rsi
   1400304cb:	mov    QWORD PTR [rax+0x20],rdi
   1400304cf:	mov    QWORD PTR [rax+0x8],rcx
   1400304d3:	push   rbp
   1400304d4:	mov    rbp,rsp
   1400304d7:	sub    rsp,0x20
   1400304db:	mov    rbx,rdx
   1400304de:	mov    esi,r9d
   1400304e1:	xor    edx,edx
   1400304e3:	mov    edi,0xc000000d
   1400304e8:	mov    DWORD PTR [rcx+0x4],edx
   1400304eb:	mov    rax,QWORD PTR [rbp+0x10]
   1400304ef:	mov    DWORD PTR [rax+0x8],edx
   1400304f2:	mov    rax,QWORD PTR [rbp+0x10]
   1400304f6:	mov    DWORD PTR [rax+0xc],edx
   1400304f9:	test   r8b,0x10
   1400304fd:	je     0x14003050c
   1400304ff:	mov    rax,QWORD PTR [rbp+0x10]
   140030503:	mov    edi,0xc000008f
   140030508:	or     DWORD PTR [rax+0x4],0x1
   14003050c:	test   r8b,0x2
   140030510:	je     0x14003051f
   140030512:	mov    rax,QWORD PTR [rbp+0x10]
   140030516:	mov    edi,0xc0000093
   14003051b:	or     DWORD PTR [rax+0x4],0x2
   14003051f:	test   r8b,0x1
   140030523:	je     0x140030532
   140030525:	mov    rax,QWORD PTR [rbp+0x10]
   140030529:	mov    edi,0xc0000091
   14003052e:	or     DWORD PTR [rax+0x4],0x4
   140030532:	test   r8b,0x4
   140030536:	je     0x140030545
   140030538:	mov    rax,QWORD PTR [rbp+0x10]
   14003053c:	mov    edi,0xc000008e
   140030541:	or     DWORD PTR [rax+0x4],0x8
   140030545:	test   r8b,0x8
   140030549:	je     0x140030558
   14003054b:	mov    rax,QWORD PTR [rbp+0x10]
   14003054f:	mov    edi,0xc0000090
   140030554:	or     DWORD PTR [rax+0x4],0x10
   140030558:	mov    rcx,QWORD PTR [rbp+0x10]
   14003055c:	mov    rax,QWORD PTR [rbx]
   14003055f:	shr    rax,0x7
   140030563:	shl    eax,0x4
   140030566:	not    eax
   140030568:	xor    eax,DWORD PTR [rcx+0x8]
   14003056b:	and    eax,0x10
   14003056e:	xor    DWORD PTR [rcx+0x8],eax
   140030571:	mov    rcx,QWORD PTR [rbp+0x10]
   140030575:	mov    rax,QWORD PTR [rbx]
   140030578:	shr    rax,0x9
   14003057c:	shl    eax,0x3
   14003057f:	not    eax
   140030581:	xor    eax,DWORD PTR [rcx+0x8]
   140030584:	and    eax,0x8
   140030587:	xor    DWORD PTR [rcx+0x8],eax
   14003058a:	mov    rcx,QWORD PTR [rbp+0x10]
   14003058e:	mov    rax,QWORD PTR [rbx]
   140030591:	shr    rax,0xa
   140030595:	shl    eax,0x2
   140030598:	not    eax
   14003059a:	xor    eax,DWORD PTR [rcx+0x8]
   14003059d:	and    eax,0x4
   1400305a0:	xor    DWORD PTR [rcx+0x8],eax
   1400305a3:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305a7:	mov    rax,QWORD PTR [rbx]
   1400305aa:	shr    rax,0xb
   1400305ae:	add    eax,eax
   1400305b0:	not    eax
   1400305b2:	xor    eax,DWORD PTR [rcx+0x8]
   1400305b5:	and    eax,0x2
   1400305b8:	xor    DWORD PTR [rcx+0x8],eax
   1400305bb:	mov    eax,DWORD PTR [rbx]
   1400305bd:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305c1:	shr    rax,0xc
   1400305c5:	not    eax
   1400305c7:	xor    eax,DWORD PTR [rcx+0x8]
   1400305ca:	and    eax,0x1
   1400305cd:	xor    DWORD PTR [rcx+0x8],eax
   1400305d0:	call   0x1400308b4
   1400305d5:	mov    rdx,rax
   1400305d8:	test   al,0x1
   1400305da:	je     0x1400305e4
   1400305dc:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305e0:	or     DWORD PTR [rcx+0xc],0x10
   1400305e4:	test   al,0x4
   1400305e6:	je     0x1400305f0
   1400305e8:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305ec:	or     DWORD PTR [rcx+0xc],0x8
   1400305f0:	test   al,0x8
   1400305f2:	je     0x1400305fc
   1400305f4:	mov    rax,QWORD PTR [rbp+0x10]
   1400305f8:	or     DWORD PTR [rax+0xc],0x4
   1400305fc:	test   dl,0x10
   1400305ff:	je     0x140030609
   140030601:	mov    rax,QWORD PTR [rbp+0x10]
   140030605:	or     DWORD PTR [rax+0xc],0x2
   140030609:	test   dl,0x20
   14003060c:	je     0x140030616
   14003060e:	mov    rax,QWORD PTR [rbp+0x10]
   140030612:	or     DWORD PTR [rax+0xc],0x1
   140030616:	mov    eax,DWORD PTR [rbx]
   140030618:	mov    ecx,0x6000
   14003061d:	and    rax,rcx
   140030620:	je     0x140030660
   140030622:	cmp    rax,0x2000
   140030628:	je     0x140030650
   14003062a:	cmp    rax,0x4000
   140030630:	je     0x140030640
   140030632:	cmp    rax,rcx
   140030635:	jne    0x140030667
   140030637:	mov    rax,QWORD PTR [rbp+0x10]
   14003063b:	or     DWORD PTR [rax],0x3
   14003063e:	jmp    0x140030667
   140030640:	mov    rax,QWORD PTR [rbp+0x10]
   140030644:	and    DWORD PTR [rax],0xfffffffe
   140030647:	mov    rax,QWORD PTR [rbp+0x10]
   14003064b:	or     DWORD PTR [rax],0x2
   14003064e:	jmp    0x140030667
   140030650:	mov    rax,QWORD PTR [rbp+0x10]
   140030654:	and    DWORD PTR [rax],0xfffffffd
   140030657:	mov    rax,QWORD PTR [rbp+0x10]
   14003065b:	or     DWORD PTR [rax],0x1
   14003065e:	jmp    0x140030667
   140030660:	mov    rax,QWORD PTR [rbp+0x10]
   140030664:	and    DWORD PTR [rax],0xfffffffc
   140030667:	mov    rax,QWORD PTR [rbp+0x10]
   14003066b:	and    esi,0xfff
   140030671:	shl    esi,0x5
   140030674:	and    DWORD PTR [rax],0xfffe001f
   14003067a:	mov    rax,QWORD PTR [rbp+0x10]
   14003067e:	or     DWORD PTR [rax],esi
   140030680:	mov    rax,QWORD PTR [rbp+0x10]
   140030684:	mov    rsi,QWORD PTR [rbp+0x38]
   140030688:	or     DWORD PTR [rax+0x20],0x1
   14003068c:	cmp    DWORD PTR [rbp+0x40],0x0
   140030690:	je     0x1400306c5
   140030692:	mov    rax,QWORD PTR [rbp+0x10]
   140030696:	mov    edx,0xffffffe1
   14003069b:	and    DWORD PTR [rax+0x20],edx
   14003069e:	mov    rax,QWORD PTR [rbp+0x30]
   1400306a2:	mov    ecx,DWORD PTR [rax]
   1400306a4:	mov    rax,QWORD PTR [rbp+0x10]
   1400306a8:	mov    DWORD PTR [rax+0x10],ecx
   1400306ab:	mov    rax,QWORD PTR [rbp+0x10]
   1400306af:	or     DWORD PTR [rax+0x60],0x1
   1400306b3:	mov    rax,QWORD PTR [rbp+0x10]
   1400306b7:	and    DWORD PTR [rax+0x60],edx
   1400306ba:	mov    rax,QWORD PTR [rbp+0x10]
   1400306be:	mov    ecx,DWORD PTR [rsi]
   1400306c0:	mov    DWORD PTR [rax+0x50],ecx
   1400306c3:	jmp    0x14003070d
   1400306c5:	mov    rcx,QWORD PTR [rbp+0x10]
   1400306c9:	mov    r8d,0xffffffe3
   1400306cf:	mov    eax,DWORD PTR [rcx+0x20]
   1400306d2:	and    eax,r8d
   1400306d5:	or     eax,0x2
   1400306d8:	mov    DWORD PTR [rcx+0x20],eax
   1400306db:	mov    rax,QWORD PTR [rbp+0x30]
   1400306df:	mov    rcx,QWORD PTR [rax]
   1400306e2:	mov    rax,QWORD PTR [rbp+0x10]
   1400306e6:	mov    QWORD PTR [rax+0x10],rcx
   1400306ea:	mov    rax,QWORD PTR [rbp+0x10]
   1400306ee:	or     DWORD PTR [rax+0x60],0x1
   1400306f2:	mov    rdx,QWORD PTR [rbp+0x10]
   1400306f6:	mov    eax,DWORD PTR [rdx+0x60]
   1400306f9:	and    eax,r8d
   1400306fc:	or     eax,0x2
   1400306ff:	mov    DWORD PTR [rdx+0x60],eax
   140030702:	mov    rax,QWORD PTR [rbp+0x10]
   140030706:	mov    rdx,QWORD PTR [rsi]
   140030709:	mov    QWORD PTR [rax+0x50],rdx
   14003070d:	call   0x1400307f8
   140030712:	xor    edx,edx
   140030714:	lea    r9,[rbp+0x10]
   140030718:	mov    ecx,edi
   14003071a:	lea    r8d,[rdx+0x1]
   14003071e:	call   QWORD PTR [rip+0x1a8c]        # 0x1400321b0
   140030724:	mov    rcx,QWORD PTR [rbp+0x10]
   140030728:	test   BYTE PTR [rcx+0x8],0x10
   14003072c:	je     0x140030733
   14003072e:	btr    QWORD PTR [rbx],0x7
   140030733:	test   BYTE PTR [rcx+0x8],0x8
   140030737:	je     0x14003073e
   140030739:	btr    QWORD PTR [rbx],0x9
   14003073e:	test   BYTE PTR [rcx+0x8],0x4
   140030742:	je     0x140030749
   140030744:	btr    QWORD PTR [rbx],0xa
   140030749:	test   BYTE PTR [rcx+0x8],0x2
   14003074d:	je     0x140030754
   14003074f:	btr    QWORD PTR [rbx],0xb
   140030754:	test   BYTE PTR [rcx+0x8],0x1
   140030758:	je     0x14003075f
   14003075a:	btr    QWORD PTR [rbx],0xc
   14003075f:	mov    eax,DWORD PTR [rcx]
   140030761:	and    eax,0x3
   140030764:	je     0x140030796
   140030766:	sub    eax,0x1
   140030769:	je     0x14003078a
   14003076b:	sub    eax,0x1
   14003076e:	je     0x14003077e
   140030770:	cmp    eax,0x1
   140030773:	jne    0x14003079d
   140030775:	or     QWORD PTR [rbx],0x6000
   14003077c:	jmp    0x14003079d
   14003077e:	btr    QWORD PTR [rbx],0xd
   140030783:	bts    QWORD PTR [rbx],0xe
   140030788:	jmp    0x14003079d
   14003078a:	btr    QWORD PTR [rbx],0xe
   14003078f:	bts    QWORD PTR [rbx],0xd
   140030794:	jmp    0x14003079d
   140030796:	and    QWORD PTR [rbx],0xffffffffffff9fff
   14003079d:	cmp    DWORD PTR [rbp+0x40],0x0
   1400307a1:	je     0x1400307aa
   1400307a3:	mov    eax,DWORD PTR [rcx+0x50]
   1400307a6:	mov    DWORD PTR [rsi],eax
   1400307a8:	jmp    0x1400307b1
   1400307aa:	mov    rax,QWORD PTR [rcx+0x50]
   1400307ae:	mov    QWORD PTR [rsi],rax
   1400307b1:	mov    rbx,QWORD PTR [rsp+0x38]
   1400307b6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400307bb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400307c0:	add    rsp,0x20
   1400307c4:	pop    rbp
   1400307c5:	ret    
   1400307c6:	int3   
   1400307c7:	int3   
   1400307c8:	sub    rsp,0x28
   1400307cc:	cmp    ecx,0x1
   1400307cf:	je     0x1400307e6
   1400307d1:	lea    eax,[rcx-0x2]
   1400307d4:	cmp    eax,0x1
   1400307d7:	ja     0x1400307f1
   1400307d9:	call   0x14002a494
   1400307de:	mov    DWORD PTR [rax],0x22
   1400307e4:	jmp    0x1400307f1
   1400307e6:	call   0x14002a494
   1400307eb:	mov    DWORD PTR [rax],0x21
   1400307f1:	add    rsp,0x28
   1400307f5:	ret    
   1400307f6:	int3   
   1400307f7:	int3   
   1400307f8:	rex push rbx
   1400307fa:	sub    rsp,0x20
   1400307fe:	call   0x140029e80
   140030803:	mov    ebx,eax
   140030805:	and    ebx,0x3f
   140030808:	call   0x140029e9a
   14003080d:	mov    eax,ebx
   14003080f:	add    rsp,0x20
   140030813:	pop    rbx
   140030814:	ret    
   140030815:	int3   
   140030816:	int3   
   140030817:	int3   
   140030818:	mov    QWORD PTR [rsp+0x18],rbx
   14003081d:	mov    QWORD PTR [rsp+0x20],rsi
   140030822:	push   rdi
   140030823:	sub    rsp,0x20
   140030827:	mov    rbx,rdx
   14003082a:	mov    rdi,rcx
   14003082d:	call   0x140029e80
   140030832:	mov    esi,eax
   140030834:	mov    DWORD PTR [rsp+0x38],eax
   140030838:	mov    ecx,ebx
   14003083a:	not    ecx
   14003083c:	or     ecx,0xffff807f
   140030842:	and    ecx,eax
   140030844:	and    edi,ebx
   140030846:	or     ecx,edi
   140030848:	mov    DWORD PTR [rsp+0x30],ecx
   14003084c:	cmp    BYTE PTR [rip+0x1625d],0x0        # 0x140046ab0
   140030853:	je     0x14003087a
   140030855:	test   cl,0x40
   140030858:	je     0x14003087a
   14003085a:	call   0x140029e90
   14003085f:	jmp    0x140030878
   140030861:	mov    BYTE PTR [rip+0x16248],0x0        # 0x140046ab0
   140030868:	mov    ecx,DWORD PTR [rsp+0x30]
   14003086c:	and    ecx,0xffffffbf
   14003086f:	call   0x140029e90
   140030874:	mov    esi,DWORD PTR [rsp+0x38]
   140030878:	jmp    0x140030882
   14003087a:	and    ecx,0xffffffbf
   14003087d:	call   0x140029e90
   140030882:	mov    eax,esi
   140030884:	mov    rbx,QWORD PTR [rsp+0x40]
   140030889:	mov    rsi,QWORD PTR [rsp+0x48]
   14003088e:	add    rsp,0x20
   140030892:	pop    rdi
   140030893:	ret    
   140030894:	rex push rbx
   140030896:	sub    rsp,0x20
   14003089a:	mov    rbx,rcx
   14003089d:	call   0x140029e80
   1400308a2:	and    ebx,0x3f
   1400308a5:	or     eax,ebx
   1400308a7:	mov    ecx,eax
   1400308a9:	add    rsp,0x20
   1400308ad:	pop    rbx
   1400308ae:	jmp    0x140029e90
   1400308b3:	int3   
   1400308b4:	sub    rsp,0x28
   1400308b8:	call   0x140029e80
   1400308bd:	and    eax,0x3f
   1400308c0:	add    rsp,0x28
   1400308c4:	ret    
   1400308c5:	int3   
   1400308c6:	int3   
   1400308c7:	int3   
   1400308c8:	int3   
   1400308c9:	int3   
   1400308ca:	int3   
   1400308cb:	int3   
   1400308cc:	int3   
   1400308cd:	int3   
   1400308ce:	int3   
   1400308cf:	int3   
   1400308d0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400308d4:	xor    r9d,r9d
   1400308d7:	add    r8,rcx
   1400308da:	mov    r10,rdx
   1400308dd:	movzx  eax,WORD PTR [r8+0x14]
   1400308e2:	movzx  r11d,WORD PTR [r8+0x6]
   1400308e7:	add    rax,0x18
   1400308eb:	add    rax,r8
   1400308ee:	test   r11d,r11d
   1400308f1:	je     0x140030911
   1400308f3:	mov    edx,DWORD PTR [rax+0xc]
   1400308f6:	cmp    r10,rdx
   1400308f9:	jb     0x140030905
   1400308fb:	mov    ecx,DWORD PTR [rax+0x8]
   1400308fe:	add    ecx,edx
   140030900:	cmp    r10,rcx
   140030903:	jb     0x140030913
   140030905:	inc    r9d
   140030908:	add    rax,0x28
   14003090c:	cmp    r9d,r11d
   14003090f:	jb     0x1400308f3
   140030911:	xor    eax,eax
   140030913:	ret    
   140030914:	int3   
   140030915:	int3   
   140030916:	int3   
   140030917:	int3   
   140030918:	int3   
   140030919:	int3   
   14003091a:	int3   
   14003091b:	int3   
   14003091c:	int3   
   14003091d:	int3   
   14003091e:	int3   
   14003091f:	int3   
   140030920:	mov    QWORD PTR [rsp+0x8],rbx
   140030925:	push   rdi
   140030926:	sub    rsp,0x20
   14003092a:	mov    rbx,rcx
   14003092d:	lea    rdi,[rip+0xfffffffffffcf6cc]        # 0x140000000
   140030934:	mov    rcx,rdi
   140030937:	call   0x140030970
   14003093c:	test   eax,eax
   14003093e:	je     0x140030962
   140030940:	sub    rbx,rdi
   140030943:	mov    rdx,rbx
   140030946:	mov    rcx,rdi
   140030949:	call   0x1400308d0
   14003094e:	test   rax,rax
   140030951:	je     0x140030962
   140030953:	mov    eax,DWORD PTR [rax+0x24]
   140030956:	shr    eax,0x1f
   140030959:	not    eax
   14003095b:	and    eax,0x1
   14003095e:	jmp    0x140030962
   140030960:	xor    eax,eax
   140030962:	mov    rbx,QWORD PTR [rsp+0x30]
   140030967:	add    rsp,0x20
   14003096b:	pop    rdi
   14003096c:	ret    
   14003096d:	int3   
   14003096e:	int3   
   14003096f:	int3   
   140030970:	mov    rax,rcx
   140030973:	mov    ecx,0x5a4d
   140030978:	cmp    WORD PTR [rax],cx
   14003097b:	je     0x140030980
   14003097d:	xor    eax,eax
   14003097f:	ret    
   140030980:	movsxd rcx,DWORD PTR [rax+0x3c]
   140030984:	add    rcx,rax
   140030987:	xor    eax,eax
   140030989:	cmp    DWORD PTR [rcx],0x4550
   14003098f:	jne    0x14003099d
   140030991:	mov    edx,0x20b
   140030996:	cmp    WORD PTR [rcx+0x18],dx
   14003099a:	sete   al
   14003099d:	ret    
   14003099e:	int3   
   14003099f:	int3   
   1400309a0:	sub    rsp,0x28
   1400309a4:	mov    r8,QWORD PTR [r9+0x38]
   1400309a8:	mov    rcx,rdx
   1400309ab:	mov    rdx,r9
   1400309ae:	call   0x1400309c0
   1400309b3:	mov    eax,0x1
   1400309b8:	add    rsp,0x28
   1400309bc:	ret    
   1400309bd:	int3   
   1400309be:	int3   
   1400309bf:	int3   
   1400309c0:	rex push rbx
   1400309c2:	mov    r11d,DWORD PTR [r8]
   1400309c5:	mov    rbx,rdx
   1400309c8:	and    r11d,0xfffffff8
   1400309cc:	mov    r9,rcx
   1400309cf:	test   BYTE PTR [r8],0x4
   1400309d3:	mov    r10,rcx
   1400309d6:	je     0x1400309eb
   1400309d8:	mov    eax,DWORD PTR [r8+0x8]
   1400309dc:	movsxd r10,DWORD PTR [r8+0x4]
   1400309e0:	neg    eax
   1400309e2:	add    r10,rcx
   1400309e5:	movsxd rcx,eax
   1400309e8:	and    r10,rcx
   1400309eb:	movsxd rax,r11d
   1400309ee:	mov    rdx,QWORD PTR [rax+r10*1]
   1400309f2:	mov    rax,QWORD PTR [rbx+0x10]
   1400309f6:	mov    ecx,DWORD PTR [rax+0x8]
   1400309f9:	add    rcx,QWORD PTR [rbx+0x8]
   1400309fd:	test   BYTE PTR [rcx+0x3],0xf
   140030a01:	je     0x140030a0d
   140030a03:	movzx  eax,BYTE PTR [rcx+0x3]
   140030a07:	and    eax,0xfffffff0
   140030a0a:	add    r9,rax
   140030a0d:	xor    r9,rdx
   140030a10:	mov    rcx,r9
   140030a13:	pop    rbx
   140030a14:	jmp    0x140030a30
   140030a19:	int3   
   140030a1a:	int3   
   140030a1b:	int3   
   140030a1c:	int3   
   140030a1d:	int3   
   140030a1e:	int3   
   140030a1f:	int3   
   140030a20:	int3   
   140030a21:	int3   
   140030a22:	int3   
   140030a23:	int3   
   140030a24:	int3   
   140030a25:	int3   
   140030a26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140030a30:	cmp    rcx,QWORD PTR [rip+0x157b1]        # 0x1400461e8
   140030a37:	bnd jne 0x140030a4c
   140030a3a:	rol    rcx,0x10
   140030a3e:	test   cx,0xffff
   140030a43:	bnd jne 0x140030a48
   140030a46:	bnd ret 
   140030a48:	ror    rcx,0x10
   140030a4c:	jmp    0x140030a88
   140030a51:	int3   
   140030a52:	int3   
   140030a53:	int3   
   140030a54:	rex push rbx
   140030a56:	sub    rsp,0x20
   140030a5a:	mov    rbx,rcx
   140030a5d:	xor    ecx,ecx
   140030a5f:	call   QWORD PTR [rip+0x16db]        # 0x140032140
   140030a65:	mov    rcx,rbx
   140030a68:	call   QWORD PTR [rip+0x16da]        # 0x140032148
   140030a6e:	call   QWORD PTR [rip+0x170c]        # 0x140032180
   140030a74:	mov    rcx,rax
   140030a77:	mov    edx,0xc0000409
   140030a7c:	add    rsp,0x20
   140030a80:	pop    rbx
   140030a81:	rex.W jmp QWORD PTR [rip+0x1658]        # 0x1400320e0
   140030a88:	mov    QWORD PTR [rsp+0x8],rcx
   140030a8d:	sub    rsp,0x38
   140030a91:	mov    ecx,0x17
   140030a96:	call   0x140026ee0
   140030a9b:	test   eax,eax
   140030a9d:	je     0x140030aa6
   140030a9f:	mov    ecx,0x2
   140030aa4:	int    0x29
   140030aa6:	lea    rcx,[rip+0x18543]        # 0x140048ff0
   140030aad:	call   0x140030c7c
   140030ab2:	mov    rax,QWORD PTR [rsp+0x38]
   140030ab7:	mov    QWORD PTR [rip+0x1862a],rax        # 0x1400490e8
   140030abe:	lea    rax,[rsp+0x38]
   140030ac3:	add    rax,0x8
   140030ac7:	mov    QWORD PTR [rip+0x185ba],rax        # 0x140049088
   140030ace:	mov    rax,QWORD PTR [rip+0x18613]        # 0x1400490e8
   140030ad5:	mov    QWORD PTR [rip+0x18484],rax        # 0x140048f60
   140030adc:	mov    rax,QWORD PTR [rsp+0x40]
   140030ae1:	mov    QWORD PTR [rip+0x18588],rax        # 0x140049070
   140030ae8:	mov    DWORD PTR [rip+0x1845e],0xc0000409        # 0x140048f50
   140030af2:	mov    DWORD PTR [rip+0x18458],0x1        # 0x140048f54
   140030afc:	mov    DWORD PTR [rip+0x18462],0x1        # 0x140048f68
   140030b06:	mov    eax,0x8
   140030b0b:	imul   rax,rax,0x0
   140030b0f:	lea    rcx,[rip+0x1845a]        # 0x140048f70
   140030b16:	mov    QWORD PTR [rcx+rax*1],0x2
   140030b1e:	mov    eax,0x8
   140030b23:	imul   rax,rax,0x0
   140030b27:	mov    rcx,QWORD PTR [rip+0x156ba]        # 0x1400461e8
   140030b2e:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140030b33:	mov    eax,0x8
   140030b38:	imul   rax,rax,0x1
   140030b3c:	mov    rcx,QWORD PTR [rip+0x156ad]        # 0x1400461f0
   140030b43:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140030b48:	lea    rcx,[rip+0xe5c9]        # 0x14003f118
   140030b4f:	call   0x140030a54
   140030b54:	add    rsp,0x38
   140030b58:	ret    
   140030b59:	int3   
   140030b5a:	int3   
   140030b5b:	int3   
   140030b5c:	sub    rsp,0x28
   140030b60:	mov    ecx,0x8
   140030b65:	call   0x140030b70
   140030b6a:	add    rsp,0x28
   140030b6e:	ret    
   140030b6f:	int3   
   140030b70:	mov    DWORD PTR [rsp+0x8],ecx
   140030b74:	sub    rsp,0x28
   140030b78:	mov    ecx,0x17
   140030b7d:	call   0x140026ee0
   140030b82:	test   eax,eax
   140030b84:	je     0x140030b8e
   140030b86:	mov    eax,DWORD PTR [rsp+0x30]
   140030b8a:	mov    ecx,eax
   140030b8c:	int    0x29
   140030b8e:	lea    rcx,[rip+0x1845b]        # 0x140048ff0
   140030b95:	call   0x140030c0c
   140030b9a:	mov    rax,QWORD PTR [rsp+0x28]
   140030b9f:	mov    QWORD PTR [rip+0x18542],rax        # 0x1400490e8
   140030ba6:	lea    rax,[rsp+0x28]
   140030bab:	add    rax,0x8
   140030baf:	mov    QWORD PTR [rip+0x184d2],rax        # 0x140049088
   140030bb6:	mov    rax,QWORD PTR [rip+0x1852b]        # 0x1400490e8
   140030bbd:	mov    QWORD PTR [rip+0x1839c],rax        # 0x140048f60
   140030bc4:	mov    DWORD PTR [rip+0x18382],0xc0000409        # 0x140048f50
   140030bce:	mov    DWORD PTR [rip+0x1837c],0x1        # 0x140048f54
   140030bd8:	mov    DWORD PTR [rip+0x18386],0x1        # 0x140048f68
   140030be2:	mov    eax,0x8
   140030be7:	imul   rax,rax,0x0
   140030beb:	lea    rcx,[rip+0x1837e]        # 0x140048f70
   140030bf2:	mov    edx,DWORD PTR [rsp+0x30]
   140030bf6:	mov    QWORD PTR [rcx+rax*1],rdx
   140030bfa:	lea    rcx,[rip+0xe517]        # 0x14003f118
   140030c01:	call   0x140030a54
   140030c06:	add    rsp,0x28
   140030c0a:	ret    
   140030c0b:	int3   
   140030c0c:	mov    QWORD PTR [rsp+0x20],rbx
   140030c11:	push   rdi
   140030c12:	sub    rsp,0x40
   140030c16:	mov    rbx,rcx
   140030c19:	call   QWORD PTR [rip+0x1549]        # 0x140032168
   140030c1f:	mov    rdi,QWORD PTR [rbx+0xf8]
   140030c26:	lea    rdx,[rsp+0x50]
   140030c2b:	mov    rcx,rdi
   140030c2e:	xor    r8d,r8d
   140030c31:	call   QWORD PTR [rip+0x1529]        # 0x140032160
   140030c37:	test   rax,rax
   140030c3a:	je     0x140030c6e
   140030c3c:	and    QWORD PTR [rsp+0x38],0x0
   140030c42:	lea    rcx,[rsp+0x58]
   140030c47:	mov    rdx,QWORD PTR [rsp+0x50]
   140030c4c:	mov    r9,rax
   140030c4f:	mov    QWORD PTR [rsp+0x30],rcx
   140030c54:	mov    r8,rdi
   140030c57:	lea    rcx,[rsp+0x60]
   140030c5c:	mov    QWORD PTR [rsp+0x28],rcx
   140030c61:	xor    ecx,ecx
   140030c63:	mov    QWORD PTR [rsp+0x20],rbx
   140030c68:	call   QWORD PTR [rip+0x14ea]        # 0x140032158
   140030c6e:	mov    rbx,QWORD PTR [rsp+0x68]
   140030c73:	add    rsp,0x40
   140030c77:	pop    rdi
   140030c78:	ret    
   140030c79:	int3   
   140030c7a:	int3   
   140030c7b:	int3   
   140030c7c:	rex push rbx
   140030c7e:	push   rsi
   140030c7f:	push   rdi
   140030c80:	sub    rsp,0x40
   140030c84:	mov    rbx,rcx
   140030c87:	call   QWORD PTR [rip+0x14db]        # 0x140032168
   140030c8d:	mov    rsi,QWORD PTR [rbx+0xf8]
   140030c94:	xor    edi,edi
   140030c96:	xor    r8d,r8d
   140030c99:	lea    rdx,[rsp+0x60]
   140030c9e:	mov    rcx,rsi
   140030ca1:	call   QWORD PTR [rip+0x14b9]        # 0x140032160
   140030ca7:	test   rax,rax
   140030caa:	je     0x140030ce5
   140030cac:	and    QWORD PTR [rsp+0x38],0x0
   140030cb2:	lea    rcx,[rsp+0x68]
   140030cb7:	mov    rdx,QWORD PTR [rsp+0x60]
   140030cbc:	mov    r9,rax
   140030cbf:	mov    QWORD PTR [rsp+0x30],rcx
   140030cc4:	mov    r8,rsi
   140030cc7:	lea    rcx,[rsp+0x70]
   140030ccc:	mov    QWORD PTR [rsp+0x28],rcx
   140030cd1:	xor    ecx,ecx
   140030cd3:	mov    QWORD PTR [rsp+0x20],rbx
   140030cd8:	call   QWORD PTR [rip+0x147a]        # 0x140032158
   140030cde:	inc    edi
   140030ce0:	cmp    edi,0x2
   140030ce3:	jl     0x140030c96
   140030ce5:	add    rsp,0x40
   140030ce9:	pop    rdi
   140030cea:	pop    rsi
   140030ceb:	pop    rbx
   140030cec:	ret    
   140030ced:	int3   
   140030cee:	jmp    QWORD PTR [rip+0x140c]        # 0x140032100
   140030cf4:	int3   
   140030cf5:	int3   
   140030cf6:	int3   
   140030cf7:	int3   
   140030cf8:	int3   
   140030cf9:	int3   
   140030cfa:	int3   
   140030cfb:	int3   
   140030cfc:	int3   
   140030cfd:	int3   
   140030cfe:	int3   
   140030cff:	int3   
   140030d00:	int3   
   140030d01:	int3   
   140030d02:	int3   
   140030d03:	int3   
   140030d04:	int3   
   140030d05:	int3   
   140030d06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140030d10:	jmp    rax
   140030d12:	int3   
   140030d13:	int3   
   140030d14:	int3   
   140030d15:	int3   
   140030d16:	int3   
   140030d17:	int3   
   140030d18:	int3   
   140030d19:	int3   
   140030d1a:	int3   
   140030d1b:	int3   
   140030d1c:	int3   
   140030d1d:	int3   
   140030d1e:	int3   
   140030d1f:	int3   
   140030d20:	rex push rbp
   140030d22:	sub    rsp,0x30
   140030d26:	mov    rbp,rdx
   140030d29:	mov    rax,QWORD PTR [rcx]
   140030d2c:	mov    rdx,rcx
   140030d2f:	mov    ecx,DWORD PTR [rax]
   140030d31:	mov    QWORD PTR [rsp+0x28],0x0
   140030d3a:	mov    DWORD PTR [rsp+0x20],0x0
   140030d42:	xor    r9d,r9d
   140030d45:	lea    r8d,[r9+0x2]
   140030d49:	call   QWORD PTR [rip+0x1679]        # 0x1400323c8
   140030d4f:	nop
   140030d50:	add    rsp,0x30
   140030d54:	pop    rbp
   140030d55:	ret    
   140030d56:	int3   
   140030d57:	rex push rbp
   140030d59:	mov    rbp,rdx
   140030d5c:	mov    rax,QWORD PTR [rcx]
   140030d5f:	xor    ecx,ecx
   140030d61:	cmp    DWORD PTR [rax],0xc0000005
   140030d67:	sete   cl
   140030d6a:	mov    eax,ecx
   140030d6c:	pop    rbp
   140030d6d:	ret    
   140030d6e:	int3   
   140030d6f:	rex push rbp
   140030d71:	sub    rsp,0x20
   140030d75:	mov    rbp,rdx
   140030d78:	mov    rax,QWORD PTR [rcx]
   140030d7b:	mov    rdx,rcx
   140030d7e:	mov    ecx,DWORD PTR [rax]
   140030d80:	call   0x140028978
   140030d85:	nop
   140030d86:	add    rsp,0x20
   140030d8a:	pop    rbp
   140030d8b:	ret    
   140030d8c:	int3   
   140030d8d:	rex push rbp
   140030d8f:	sub    rsp,0x20
   140030d93:	mov    rbp,rdx
   140030d96:	mov    rcx,QWORD PTR [rbp+0x68]
   140030d9a:	call   0x140028728
   140030d9f:	nop
   140030da0:	add    rsp,0x20
   140030da4:	pop    rbp
   140030da5:	ret    
   140030da6:	int3   
   140030da7:	rex push rbp
   140030da9:	sub    rsp,0x20
   140030dad:	mov    rbp,rdx
   140030db0:	mov    ecx,0x8
   140030db5:	add    rsp,0x20
   140030db9:	pop    rbp
   140030dba:	jmp    0x14002af7c
   140030dbf:	int3   
   140030dc0:	rex push rbp
   140030dc2:	sub    rsp,0x20
   140030dc6:	mov    rbp,rdx
   140030dc9:	mov    rax,QWORD PTR [rcx]
   140030dcc:	mov    ecx,DWORD PTR [rax]
   140030dce:	call   0x140028b08
   140030dd3:	nop
   140030dd4:	add    rsp,0x20
   140030dd8:	pop    rbp
   140030dd9:	ret    
   140030dda:	int3   
   140030ddb:	rex push rbp
   140030ddd:	sub    rsp,0x20
   140030de1:	mov    rbp,rdx
   140030de4:	mov    ecx,0x2
   140030de9:	add    rsp,0x20
   140030ded:	pop    rbp
   140030dee:	jmp    0x14002af7c
   140030df3:	int3   
   140030df4:	rex push rbp
   140030df6:	sub    rsp,0x20
   140030dfa:	mov    rbp,rdx
   140030dfd:	mov    rax,QWORD PTR [rbp+0x88]
   140030e04:	mov    ecx,DWORD PTR [rax]
   140030e06:	add    rsp,0x20
   140030e0a:	pop    rbp
   140030e0b:	jmp    0x14002af7c
   140030e10:	int3   
   140030e11:	rex push rbp
   140030e13:	sub    rsp,0x20
   140030e17:	mov    rbp,rdx
   140030e1a:	mov    ecx,0x4
   140030e1f:	add    rsp,0x20
   140030e23:	pop    rbp
   140030e24:	jmp    0x14002af7c
   140030e29:	int3   
   140030e2a:	rex push rbp
   140030e2c:	sub    rsp,0x20
   140030e30:	mov    rbp,rdx
   140030e33:	mov    rax,QWORD PTR [rbp+0x48]
   140030e37:	mov    ecx,DWORD PTR [rax]
   140030e39:	add    rsp,0x20
   140030e3d:	pop    rbp
   140030e3e:	jmp    0x14002af7c
   140030e43:	int3   
   140030e44:	rex push rbp
   140030e46:	sub    rsp,0x20
   140030e4a:	mov    rbp,rdx
   140030e4d:	mov    ecx,0x8
   140030e52:	add    rsp,0x20
   140030e56:	pop    rbp
   140030e57:	jmp    0x14002af7c
   140030e5c:	int3   
   140030e5d:	rex push rbp
   140030e5f:	sub    rsp,0x20
   140030e63:	mov    rbp,rdx
   140030e66:	mov    ecx,0x7
   140030e6b:	add    rsp,0x20
   140030e6f:	pop    rbp
   140030e70:	jmp    0x14002af7c
   140030e75:	int3   
   140030e76:	rex push rbp
   140030e78:	sub    rsp,0x20
   140030e7c:	mov    rbp,rdx
   140030e7f:	mov    rax,QWORD PTR [rbp+0x48]
   140030e83:	mov    ecx,DWORD PTR [rax]
   140030e85:	add    rsp,0x20
   140030e89:	pop    rbp
   140030e8a:	jmp    0x14002d950
   140030e8f:	int3   
   140030e90:	rex push rbp
   140030e92:	sub    rsp,0x20
   140030e96:	mov    rbp,rdx
   140030e99:	mov    ecx,DWORD PTR [rbp+0x50]
   140030e9c:	add    rsp,0x20
   140030ea0:	pop    rbp
   140030ea1:	jmp    0x14002d950
   140030ea6:	int3   
   140030ea7:	rex push rbp
   140030ea9:	sub    rsp,0x20
   140030ead:	mov    rbp,rdx
   140030eb0:	mov    ecx,0x5
   140030eb5:	add    rsp,0x20
   140030eb9:	pop    rbp
   140030eba:	jmp    0x14002af7c
   140030ebf:	int3   
   140030ec0:	rex push rbp
   140030ec2:	sub    rsp,0x20
   140030ec6:	mov    rbp,rdx
   140030ec9:	cmp    BYTE PTR [rbp+0x80],0x0
   140030ed0:	je     0x140030edd
   140030ed2:	mov    ecx,0x3
   140030ed7:	call   0x14002af7c
   140030edc:	nop
   140030edd:	add    rsp,0x20
   140030ee1:	pop    rbp
   140030ee2:	ret    
   140030ee3:	int3   
   140030ee4:	rex push rbp
   140030ee6:	sub    rsp,0x20
   140030eea:	mov    rbp,rdx
   140030eed:	mov    rcx,QWORD PTR [rbp+0x30]
   140030ef1:	add    rsp,0x20
   140030ef5:	pop    rbp
   140030ef6:	jmp    0x140028728
   140030efb:	int3   
   140030efc:	rex push rbp
   140030efe:	sub    rsp,0x20
   140030f02:	mov    rbp,rdx
   140030f05:	mov    rax,QWORD PTR [rcx]
   140030f08:	cmp    DWORD PTR [rax],0xc0000005
   140030f0e:	je     0x140030f1c
   140030f10:	cmp    DWORD PTR [rax],0xc000001d
   140030f16:	je     0x140030f1c
   140030f18:	xor    eax,eax
   140030f1a:	jmp    0x140030f21
   140030f1c:	mov    eax,0x1
   140030f21:	add    rsp,0x20
   140030f25:	pop    rbp
   140030f26:	ret    
   140030f27:	int3   
   140030f28:	int3   
   140030f29:	int3   
   140030f2a:	int3   
   140030f2b:	int3   
   140030f2c:	int3   
   140030f2d:	int3   
   140030f2e:	int3   
   140030f2f:	int3   
   140030f30:	rex push rbp
   140030f32:	sub    rsp,0x20
   140030f36:	mov    rbp,rdx
   140030f39:	mov    rax,QWORD PTR [rcx]
   140030f3c:	xor    ecx,ecx
   140030f3e:	cmp    DWORD PTR [rax],0xc0000005
   140030f44:	sete   cl
   140030f47:	mov    eax,ecx
   140030f49:	add    rsp,0x20
   140030f4d:	pop    rbp
   140030f4e:	ret    
   140030f4f:	int3   
   140030f50:	lock or DWORD PTR [rip+0x16125],0x10000000        # 0x140047080
   140030f5b:	mov    eax,DWORD PTR [rip+0x1611f]        # 0x140047080
   140030f61:	bt     eax,0x1a
   140030f65:	jae    0x140030fa2
   140030f67:	prefetchw BYTE PTR [rip+0x16112]        # 0x140047080
   140030f6e:	mov    eax,DWORD PTR [rip+0x1610c]        # 0x140047080
   140030f74:	nop    DWORD PTR [rax+0x0]
   140030f78:	nop    DWORD PTR [rax+rax*1+0x0]
   140030f80:	mov    ecx,eax
   140030f82:	btr    ecx,0x1a
   140030f86:	lock cmpxchg DWORD PTR [rip+0x160f2],ecx        # 0x140047080
   140030f8e:	jne    0x140030f80
   140030f90:	bt     eax,0x1a
   140030f94:	jae    0x140030fa2
   140030f96:	lea    rcx,[rip+0x160db]        # 0x140047078
   140030f9d:	jmp    0x1400075e0
   140030fa2:	ret    
   140030fa3:	int3   
   140030fa4:	int3   
   140030fa5:	int3   
   140030fa6:	int3   
   140030fa7:	int3   
   140030fa8:	int3   
   140030fa9:	int3   
   140030faa:	int3   
   140030fab:	int3   
   140030fac:	int3   
   140030fad:	int3   
   140030fae:	int3   
   140030faf:	int3   
   140030fb0:	sub    rsp,0x28
   140030fb4:	lea    rcx,[rip+0x15115]        # 0x1400460d0
   140030fbb:	call   0x1400185c0
   140030fc0:	lea    rcx,[rip+0x15109]        # 0x1400460d0
   140030fc7:	add    rsp,0x28
   140030fcb:	jmp    0x1400181a0
   140030fd0:	sub    rsp,0x28
   140030fd4:	cmp    BYTE PTR [rip+0x170d5],0x0        # 0x1400480b0
   140030fdb:	lea    rax,[rip+0x674e]        # 0x140037730
   140030fe2:	mov    QWORD PTR [rip+0x170b7],rax        # 0x1400480a0
   140030fe9:	lea    rax,[rip+0x6800]        # 0x1400377f0
   140030ff0:	mov    QWORD PTR [rip+0x170d9],rax        # 0x1400480d0
   140030ff7:	je     0x14003102d
   140030ff9:	lea    rcx,[rip+0x170a0]        # 0x1400480a0
   140031000:	cmp    QWORD PTR [rip+0x170d1],rcx        # 0x1400480d8
   140031007:	jne    0x14003102d
   140031009:	mov    eax,DWORD PTR [rip+0x17119]        # 0x140048128
   14003100f:	test   al,0x1
   140031011:	jne    0x14003102d
   140031013:	or     eax,0x1
   140031016:	mov    DWORD PTR [rip+0x1710c],eax        # 0x140048128
   14003101c:	call   0x14001b6d0
   140031021:	lea    rcx,[rip+0xffffffffffffffa8]        # 0x140030fd0
   140031028:	call   0x1400266d0
   14003102d:	mov    rcx,QWORD PTR [rip+0x170b4]        # 0x1400480e8
   140031034:	test   rcx,rcx
   140031037:	je     0x140031049
   140031039:	call   0x140007bd0
   14003103e:	mov    QWORD PTR [rip+0x1709f],0x0        # 0x1400480e8
   140031049:	lea    rcx,[rip+0x170c0]        # 0x140048110
   140031050:	call   0x1400181a0
   140031055:	lea    rax,[rip+0x6664]        # 0x1400376c0
   14003105c:	mov    QWORD PTR [rip+0x1703d],rax        # 0x1400480a0
   140031063:	add    rsp,0x28
   140031067:	ret    
   140031068:	int3   
   140031069:	int3   
   14003106a:	int3   
   14003106b:	int3   
   14003106c:	int3   
   14003106d:	int3   
   14003106e:	int3   
   14003106f:	int3   
   140031070:	rex push rbx
   140031072:	sub    rsp,0x20
   140031076:	mov    rbx,QWORD PTR [rip+0x170cb]        # 0x140048148
   14003107d:	test   rbx,rbx
   140031080:	je     0x1400310a8
   140031082:	mov    rcx,rbx
   140031085:	call   0x14001d800
   14003108a:	lea    rcx,[rbx+0x38]
   14003108e:	call   0x1400181a0
   140031093:	mov    rcx,rbx
   140031096:	call   0x14001c8c0
   14003109b:	mov    edx,0x60
   1400310a0:	mov    rcx,rbx
   1400310a3:	call   0x14002639c
   1400310a8:	mov    QWORD PTR [rip+0x17095],0x0        # 0x140048148
   1400310b3:	add    rsp,0x20
   1400310b7:	pop    rbx
   1400310b8:	ret    
   1400310b9:	int3   
   1400310ba:	int3   
   1400310bb:	int3   
   1400310bc:	int3   
   1400310bd:	int3   
   1400310be:	int3   
   1400310bf:	int3   
   1400310c0:	lea    rcx,[rip+0x170a9]        # 0x140048170
   1400310c7:	jmp    0x140024630
   1400310cc:	int3   
   1400310cd:	int3   
   1400310ce:	int3   
   1400310cf:	int3   
   1400310d0:	sub    rsp,0x48
   1400310d4:	lea    rcx,[rip+0x17165]        # 0x140048240
   1400310db:	call   0x140022510
   1400310e0:	mov    DWORD PTR [rsp+0x2c],0x0
   1400310e8:	mov    QWORD PTR [rsp+0x40],rbx
   1400310ed:	nop    DWORD PTR [rax]
   1400310f0:	pause  
   1400310f2:	movdqa xmm0,XMMWORD PTR [rip+0x17146]        # 0x140048240
   1400310fa:	movq   rax,xmm0
   1400310ff:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140031105:	test   rax,rax
   140031108:	je     0x140031148
   14003110a:	mov    eax,DWORD PTR [rsp+0x38]
   14003110e:	and    eax,0xffff0000
   140031113:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140031119:	mov    DWORD PTR [rsp+0x28],eax
   14003111d:	xor    ebx,ebx
   14003111f:	mov    rcx,QWORD PTR [rsp+0x28]
   140031124:	movq   rax,xmm0
   140031129:	psrldq xmm0,0x8
   14003112e:	movq   rdx,xmm0
   140031133:	lock cmpxchg16b OWORD PTR [rip+0x17104]        # 0x140048240
   14003113c:	sete   al
   14003113f:	mov    QWORD PTR [rsp+0x38],rdx
   140031144:	cmp    al,0x1
   140031146:	jne    0x1400310f0
   140031148:	mov    rbx,QWORD PTR [rsp+0x40]
   14003114d:	add    rsp,0x48
   140031151:	ret    
