
b5703fd17c3ae58ef1f0efb174c8d6f7421c1b6976d1d963327e57675b95a28c.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	sub    rsp,0x38
   140001004:	mov    eax,DWORD PTR [rip+0x46036]        # 0x140047040
   14000100a:	lea    rcx,[rip+0x3176f]        # 0x140032780
   140001011:	mov    r9d,0x2
   140001017:	mov    DWORD PTR [rsp+0x20],eax
   14000101b:	xor    r8d,r8d
   14000101e:	xor    edx,edx
   140001020:	call   QWORD PTR [rip+0x3148a]        # 0x1400324b0
   140001026:	mov    DWORD PTR [rip+0x46018],eax        # 0x140047044
   14000102c:	add    rsp,0x38
   140001030:	ret    
   140001031:	int3   
   140001032:	int3   
   140001033:	int3   
   140001034:	int3   
   140001035:	int3   
   140001036:	int3   
   140001037:	int3   
   140001038:	int3   
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	sub    rsp,0x28
   140001044:	mov    eax,DWORD PTR [rip+0x46036]        # 0x140047080
   14000104a:	bt     eax,0x1a
   14000104e:	jb     0x14000105e
   140001050:	mov    dl,0x1
   140001052:	lea    rcx,[rip+0x4601f]        # 0x140047078
   140001059:	call   0x140007500
   14000105e:	lock or DWORD PTR [rip+0x46017],0x8000000        # 0x140047080
   140001069:	lea    rcx,[rip+0x2fee0]        # 0x140030f50
   140001070:	add    rsp,0x28
   140001074:	jmp    0x1400266d0
   140001079:	int3   
   14000107a:	int3   
   14000107b:	int3   
   14000107c:	int3   
   14000107d:	int3   
   14000107e:	int3   
   14000107f:	int3   
   140001080:	sub    rsp,0x38
   140001084:	mov    eax,DWORD PTR [rip+0x4607e]        # 0x140047108
   14000108a:	lea    rcx,[rip+0x332d7]        # 0x140034368
   140001091:	mov    r9d,0x2
   140001097:	mov    DWORD PTR [rsp+0x20],eax
   14000109b:	xor    r8d,r8d
   14000109e:	xor    edx,edx
   1400010a0:	call   QWORD PTR [rip+0x3140a]        # 0x1400324b0
   1400010a6:	mov    DWORD PTR [rip+0x46060],eax        # 0x14004710c
   1400010ac:	add    rsp,0x38
   1400010b0:	ret    
   1400010b1:	int3   
   1400010b2:	int3   
   1400010b3:	int3   
   1400010b4:	int3   
   1400010b5:	int3   
   1400010b6:	int3   
   1400010b7:	int3   
   1400010b8:	int3   
   1400010b9:	int3   
   1400010ba:	int3   
   1400010bb:	int3   
   1400010bc:	int3   
   1400010bd:	int3   
   1400010be:	int3   
   1400010bf:	int3   
   1400010c0:	sub    rsp,0x38
   1400010c4:	mov    eax,DWORD PTR [rip+0x4603e]        # 0x140047108
   1400010ca:	lea    rcx,[rip+0x332a7]        # 0x140034378
   1400010d1:	mov    r9d,0x2
   1400010d7:	mov    DWORD PTR [rsp+0x20],eax
   1400010db:	xor    r8d,r8d
   1400010de:	xor    edx,edx
   1400010e0:	call   QWORD PTR [rip+0x313ca]        # 0x1400324b0
   1400010e6:	mov    DWORD PTR [rip+0x46014],eax        # 0x140047100
   1400010ec:	add    rsp,0x38
   1400010f0:	ret    
   1400010f1:	int3   
   1400010f2:	int3   
   1400010f3:	int3   
   1400010f4:	int3   
   1400010f5:	int3   
   1400010f6:	int3   
   1400010f7:	int3   
   1400010f8:	int3   
   1400010f9:	int3   
   1400010fa:	int3   
   1400010fb:	int3   
   1400010fc:	int3   
   1400010fd:	int3   
   1400010fe:	int3   
   1400010ff:	int3   
   140001100:	sub    rsp,0x38
   140001104:	mov    eax,DWORD PTR [rip+0x45ffe]        # 0x140047108
   14000110a:	lea    rcx,[rip+0x3327f]        # 0x140034390
   140001111:	mov    r9d,0x2
   140001117:	mov    DWORD PTR [rsp+0x20],eax
   14000111b:	xor    r8d,r8d
   14000111e:	xor    edx,edx
   140001120:	call   QWORD PTR [rip+0x3138a]        # 0x1400324b0
   140001126:	mov    DWORD PTR [rip+0x45fd8],eax        # 0x140047104
   14000112c:	add    rsp,0x38
   140001130:	ret    
   140001131:	int3   
   140001132:	int3   
   140001133:	int3   
   140001134:	int3   
   140001135:	int3   
   140001136:	int3   
   140001137:	int3   
   140001138:	int3   
   140001139:	int3   
   14000113a:	int3   
   14000113b:	int3   
   14000113c:	int3   
   14000113d:	int3   
   14000113e:	int3   
   14000113f:	int3   
   140001140:	lea    rcx,[rip+0x44f69]        # 0x1400460b0
   140001147:	rex.W jmp QWORD PTR [rip+0x311c2]        # 0x140032310
   14000114e:	int3   
   14000114f:	int3   
   140001150:	lea    rcx,[rip+0x2fe59]        # 0x140030fb0
   140001157:	jmp    0x1400266d0
   14000115c:	int3   
   14000115d:	int3   
   14000115e:	int3   
   14000115f:	int3   
   140001160:	mov    eax,DWORD PTR [rip+0x46d32]        # 0x140047e98
   140001166:	mov    DWORD PTR [rip+0x46d28],eax        # 0x140047e94
   14000116c:	ret    
   14000116d:	int3   
   14000116e:	int3   
   14000116f:	int3   
   140001170:	lea    r9,[rip+0x17a49]        # 0x140018bc0
   140001177:	lea    r8,[rip+0x44f7a]        # 0x1400460f8
   14000117e:	lea    rdx,[rip+0x44eb3]        # 0x140046038
   140001185:	lea    rcx,[rip+0x44f44]        # 0x1400460d0
   14000118c:	jmp    0x140018650
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	lea    r9,[rip+0x17c39]        # 0x140018de0
   1400011a7:	lea    r8,[rip+0x44eaa]        # 0x140046058
   1400011ae:	lea    rdx,[rip+0x44e83]        # 0x140046038
   1400011b5:	lea    rcx,[rip+0x44f14]        # 0x1400460d0
   1400011bc:	jmp    0x140018650
   1400011c1:	int3   
   1400011c2:	int3   
   1400011c3:	int3   
   1400011c4:	int3   
   1400011c5:	int3   
   1400011c6:	int3   
   1400011c7:	int3   
   1400011c8:	int3   
   1400011c9:	int3   
   1400011ca:	int3   
   1400011cb:	int3   
   1400011cc:	int3   
   1400011cd:	int3   
   1400011ce:	int3   
   1400011cf:	int3   
   1400011d0:	lea    r9,[rip+0x17c79]        # 0x140018e50
   1400011d7:	lea    r8,[rip+0x44f2a]        # 0x140046108
   1400011de:	lea    rdx,[rip+0x44f13]        # 0x1400460f8
   1400011e5:	lea    rcx,[rip+0x44ee4]        # 0x1400460d0
   1400011ec:	jmp    0x140018650
   1400011f1:	int3   
   1400011f2:	int3   
   1400011f3:	int3   
   1400011f4:	int3   
   1400011f5:	int3   
   1400011f6:	int3   
   1400011f7:	int3   
   1400011f8:	int3   
   1400011f9:	int3   
   1400011fa:	int3   
   1400011fb:	int3   
   1400011fc:	int3   
   1400011fd:	int3   
   1400011fe:	int3   
   1400011ff:	int3   
   140001200:	lea    r9,[rip+0x17e79]        # 0x140019080
   140001207:	lea    r8,[rip+0x44f0a]        # 0x140046118
   14000120e:	lea    rdx,[rip+0x44ef3]        # 0x140046108
   140001215:	lea    rcx,[rip+0x44eb4]        # 0x1400460d0
   14000121c:	jmp    0x140018650
   140001221:	int3   
   140001222:	int3   
   140001223:	int3   
   140001224:	int3   
   140001225:	int3   
   140001226:	int3   
   140001227:	int3   
   140001228:	int3   
   140001229:	int3   
   14000122a:	int3   
   14000122b:	int3   
   14000122c:	int3   
   14000122d:	int3   
   14000122e:	int3   
   14000122f:	int3   
   140001230:	lea    r9,[rip+0x18049]        # 0x140019280
   140001237:	lea    r8,[rip+0x44eea]        # 0x140046128
   14000123e:	lea    rdx,[rip+0x44ed3]        # 0x140046118
   140001245:	lea    rcx,[rip+0x44e84]        # 0x1400460d0
   14000124c:	jmp    0x140018650
   140001251:	int3   
   140001252:	int3   
   140001253:	int3   
   140001254:	int3   
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	lea    r9,[rip+0x18189]        # 0x1400193f0
   140001267:	lea    r8,[rip+0x44eca]        # 0x140046138
   14000126e:	lea    rdx,[rip+0x44eb3]        # 0x140046128
   140001275:	lea    rcx,[rip+0x44e54]        # 0x1400460d0
   14000127c:	jmp    0x140018650
   140001281:	int3   
   140001282:	int3   
   140001283:	int3   
   140001284:	int3   
   140001285:	int3   
   140001286:	int3   
   140001287:	int3   
   140001288:	int3   
   140001289:	int3   
   14000128a:	int3   
   14000128b:	int3   
   14000128c:	int3   
   14000128d:	int3   
   14000128e:	int3   
   14000128f:	int3   
   140001290:	lea    r9,[rip+0x18279]        # 0x140019510
   140001297:	lea    r8,[rip+0x44eaa]        # 0x140046148
   14000129e:	lea    rdx,[rip+0x44e93]        # 0x140046138
   1400012a5:	lea    rcx,[rip+0x44e24]        # 0x1400460d0
   1400012ac:	jmp    0x140018650
   1400012b1:	int3   
   1400012b2:	int3   
   1400012b3:	int3   
   1400012b4:	int3   
   1400012b5:	int3   
   1400012b6:	int3   
   1400012b7:	int3   
   1400012b8:	int3   
   1400012b9:	int3   
   1400012ba:	int3   
   1400012bb:	int3   
   1400012bc:	int3   
   1400012bd:	int3   
   1400012be:	int3   
   1400012bf:	int3   
   1400012c0:	lea    r9,[rip+0x18519]        # 0x1400197e0
   1400012c7:	lea    r8,[rip+0x44e8a]        # 0x140046158
   1400012ce:	lea    rdx,[rip+0x44e73]        # 0x140046148
   1400012d5:	lea    rcx,[rip+0x44df4]        # 0x1400460d0
   1400012dc:	jmp    0x140018650
   1400012e1:	int3   
   1400012e2:	int3   
   1400012e3:	int3   
   1400012e4:	int3   
   1400012e5:	int3   
   1400012e6:	int3   
   1400012e7:	int3   
   1400012e8:	int3   
   1400012e9:	int3   
   1400012ea:	int3   
   1400012eb:	int3   
   1400012ec:	int3   
   1400012ed:	int3   
   1400012ee:	int3   
   1400012ef:	int3   
   1400012f0:	lea    r9,[rip+0x18799]        # 0x140019a90
   1400012f7:	lea    r8,[rip+0x44e6a]        # 0x140046168
   1400012fe:	lea    rdx,[rip+0x44e53]        # 0x140046158
   140001305:	lea    rcx,[rip+0x44dc4]        # 0x1400460d0
   14000130c:	jmp    0x140018650
   140001311:	int3   
   140001312:	int3   
   140001313:	int3   
   140001314:	int3   
   140001315:	int3   
   140001316:	int3   
   140001317:	int3   
   140001318:	int3   
   140001319:	int3   
   14000131a:	int3   
   14000131b:	int3   
   14000131c:	int3   
   14000131d:	int3   
   14000131e:	int3   
   14000131f:	int3   
   140001320:	lea    r9,[rip+0x188d9]        # 0x140019c00
   140001327:	lea    r8,[rip+0x44e4a]        # 0x140046178
   14000132e:	lea    rdx,[rip+0x44e33]        # 0x140046168
   140001335:	lea    rcx,[rip+0x44d94]        # 0x1400460d0
   14000133c:	jmp    0x140018650
   140001341:	int3   
   140001342:	int3   
   140001343:	int3   
   140001344:	int3   
   140001345:	int3   
   140001346:	int3   
   140001347:	int3   
   140001348:	int3   
   140001349:	int3   
   14000134a:	int3   
   14000134b:	int3   
   14000134c:	int3   
   14000134d:	int3   
   14000134e:	int3   
   14000134f:	int3   
   140001350:	lea    r9,[rip+0x18a99]        # 0x140019df0
   140001357:	lea    r8,[rip+0x44cfa]        # 0x140046058
   14000135e:	lea    rdx,[rip+0x44ce3]        # 0x140046048
   140001365:	lea    rcx,[rip+0x44d64]        # 0x1400460d0
   14000136c:	jmp    0x140018650
   140001371:	int3   
   140001372:	int3   
   140001373:	int3   
   140001374:	int3   
   140001375:	int3   
   140001376:	int3   
   140001377:	int3   
   140001378:	int3   
   140001379:	int3   
   14000137a:	int3   
   14000137b:	int3   
   14000137c:	int3   
   14000137d:	int3   
   14000137e:	int3   
   14000137f:	int3   
   140001380:	lea    r9,[rip+0x18ad9]        # 0x140019e60
   140001387:	lea    r8,[rip+0x44cda]        # 0x140046068
   14000138e:	lea    rdx,[rip+0x44cc3]        # 0x140046058
   140001395:	lea    rcx,[rip+0x44d34]        # 0x1400460d0
   14000139c:	jmp    0x140018650
   1400013a1:	int3   
   1400013a2:	int3   
   1400013a3:	int3   
   1400013a4:	int3   
   1400013a5:	int3   
   1400013a6:	int3   
   1400013a7:	int3   
   1400013a8:	int3   
   1400013a9:	int3   
   1400013aa:	int3   
   1400013ab:	int3   
   1400013ac:	int3   
   1400013ad:	int3   
   1400013ae:	int3   
   1400013af:	int3   
   1400013b0:	lea    r9,[rip+0x18b19]        # 0x140019ed0
   1400013b7:	lea    r8,[rip+0x44cba]        # 0x140046078
   1400013be:	lea    rdx,[rip+0x44ca3]        # 0x140046068
   1400013c5:	lea    rcx,[rip+0x44d04]        # 0x1400460d0
   1400013cc:	jmp    0x140018650
   1400013d1:	int3   
   1400013d2:	int3   
   1400013d3:	int3   
   1400013d4:	int3   
   1400013d5:	int3   
   1400013d6:	int3   
   1400013d7:	int3   
   1400013d8:	int3   
   1400013d9:	int3   
   1400013da:	int3   
   1400013db:	int3   
   1400013dc:	int3   
   1400013dd:	int3   
   1400013de:	int3   
   1400013df:	int3   
   1400013e0:	lea    r9,[rip+0x18b59]        # 0x140019f40
   1400013e7:	lea    r8,[rip+0x44c9a]        # 0x140046088
   1400013ee:	lea    rdx,[rip+0x44c73]        # 0x140046068
   1400013f5:	lea    rcx,[rip+0x44cd4]        # 0x1400460d0
   1400013fc:	jmp    0x140018650
   140001401:	int3   
   140001402:	int3   
   140001403:	int3   
   140001404:	int3   
   140001405:	int3   
   140001406:	int3   
   140001407:	int3   
   140001408:	int3   
   140001409:	int3   
   14000140a:	int3   
   14000140b:	int3   
   14000140c:	int3   
   14000140d:	int3   
   14000140e:	int3   
   14000140f:	int3   
   140001410:	mov    eax,DWORD PTR [rip+0x46a76]        # 0x140047e8c
   140001416:	mov    DWORD PTR [rip+0x46a84],eax        # 0x140047ea0
   14000141c:	ret    
   14000141d:	int3   
   14000141e:	int3   
   14000141f:	int3   
   140001420:	movups xmm0,XMMWORD PTR [rip+0x44d69]        # 0x140046190
   140001427:	movups XMMWORD PTR [rip+0x46a9a],xmm0        # 0x140047ec8
   14000142e:	ret    
   14000142f:	int3   
   140001430:	sub    rsp,0x28
   140001434:	cmp    BYTE PTR [rip+0x46a77],0x0        # 0x140047eb2
   14000143b:	jne    0x140001449
   14000143d:	call   0x140019fb0
   140001442:	mov    BYTE PTR [rip+0x46a6a],0x1        # 0x140047eb3
   140001449:	add    rsp,0x28
   14000144d:	ret    
   14000144e:	int3   
   14000144f:	int3   
   140001450:	lea    rcx,[rip+0x2fc19]        # 0x140031070
   140001457:	jmp    0x1400266d0
   14000145c:	int3   
   14000145d:	int3   
   14000145e:	int3   
   14000145f:	int3   
   140001460:	sub    rsp,0x28
   140001464:	lea    rcx,[rip+0x46d05]        # 0x140048170
   14000146b:	call   0x140024620
   140001470:	lea    rcx,[rip+0x2fc49]        # 0x1400310c0
   140001477:	add    rsp,0x28
   14000147b:	jmp    0x1400266d0
   140001480:	sub    rsp,0x28
   140001484:	lea    rcx,[rip+0x46db5]        # 0x140048240
   14000148b:	call   0x140022080
   140001490:	lea    rcx,[rip+0x2fc39]        # 0x1400310d0
   140001497:	add    rsp,0x28
   14000149b:	jmp    0x1400266d0
   1400014a0:	sub    rsp,0x28
   1400014a4:	lea    rcx,[rip+0x36c9d]        # 0x140038148
   1400014ab:	call   QWORD PTR [rip+0x30d87]        # 0x140032238
   1400014b1:	test   rax,rax
   1400014b4:	setne  BYTE PTR [rip+0x46dad]        # 0x140048268
   1400014bb:	add    rsp,0x28
   1400014bf:	ret    
   1400014c0:	sub    rsp,0x38
   1400014c4:	mov    DWORD PTR [rsp+0x40],0xffeeaff5
   1400014cc:	lea    rcx,[rip+0x36de5]        # 0x1400382b8
   1400014d3:	mov    eax,DWORD PTR [rsp+0x40]
   1400014d7:	mov    r9d,0x2
   1400014dd:	xor    r8d,r8d
   1400014e0:	mov    DWORD PTR [rsp+0x20],eax
   1400014e4:	xor    edx,edx
   1400014e6:	call   QWORD PTR [rip+0x30fc4]        # 0x1400324b0
   1400014ec:	mov    DWORD PTR [rip+0x46db2],eax        # 0x1400482a4
   1400014f2:	add    rsp,0x38
   1400014f6:	ret    
   1400014f7:	int3   
   1400014f8:	int3   
   1400014f9:	int3   
   1400014fa:	int3   
   1400014fb:	int3   
   1400014fc:	int3   
   1400014fd:	int3   
   1400014fe:	int3   
   1400014ff:	int3   
   140001500:	sub    rsp,0x38
   140001504:	mov    DWORD PTR [rsp+0x40],0xffc075ee
   14000150c:	lea    rcx,[rip+0x36dad]        # 0x1400382c0
   140001513:	mov    eax,DWORD PTR [rsp+0x40]
   140001517:	mov    r9d,0x2
   14000151d:	xor    r8d,r8d
   140001520:	mov    DWORD PTR [rsp+0x20],eax
   140001524:	xor    edx,edx
   140001526:	call   QWORD PTR [rip+0x30f84]        # 0x1400324b0
   14000152c:	mov    DWORD PTR [rip+0x46d52],eax        # 0x140048284
   140001532:	add    rsp,0x38
   140001536:	ret    
   140001537:	int3   
   140001538:	int3   
   140001539:	int3   
   14000153a:	int3   
   14000153b:	int3   
   14000153c:	int3   
   14000153d:	int3   
   14000153e:	int3   
   14000153f:	int3   
   140001540:	sub    rsp,0x28
   140001544:	mov    edx,0x7fffffff
   140001549:	lea    rcx,[rip+0x46d38]        # 0x140048288
   140001550:	call   0x14000bb60
   140001555:	lea    rax,[rip+0x36d7c]        # 0x1400382d8
   14000155c:	mov    QWORD PTR [rip+0x46d25],rax        # 0x140048288
   140001563:	add    rsp,0x28
   140001567:	ret    
   140001568:	int3   
   140001569:	int3   
   14000156a:	int3   
   14000156b:	int3   
   14000156c:	int3   
   14000156d:	int3   
   14000156e:	int3   
   14000156f:	int3   
   140001570:	mov    QWORD PTR [rsp+0x10],rdx
   140001575:	mov    QWORD PTR [rsp+0x18],r8
   14000157a:	mov    QWORD PTR [rsp+0x20],r9
   14000157f:	sub    rsp,0x28
   140001583:	mov    r8,rdx
   140001586:	lea    r9,[rsp+0x40]
   14000158b:	mov    edx,0x104
   140001590:	call   QWORD PTR [rip+0x30fb2]        # 0x140032548
   140001596:	add    rsp,0x28
   14000159a:	ret    
   14000159b:	int3   
   14000159c:	int3   
   14000159d:	int3   
   14000159e:	int3   
   14000159f:	int3   
   1400015a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400015a5:	mov    QWORD PTR [rsp+0x18],r8
   1400015aa:	mov    QWORD PTR [rsp+0x20],r9
   1400015af:	sub    rsp,0x28
   1400015b3:	mov    r8,rdx
   1400015b6:	lea    r9,[rsp+0x40]
   1400015bb:	mov    edx,0x200
   1400015c0:	call   QWORD PTR [rip+0x30f82]        # 0x140032548
   1400015c6:	add    rsp,0x28
   1400015ca:	ret    
   1400015cb:	int3   
   1400015cc:	int3   
   1400015cd:	int3   
   1400015ce:	int3   
   1400015cf:	int3   
   1400015d0:	mov    QWORD PTR [rsp+0x10],rdx
   1400015d5:	mov    QWORD PTR [rsp+0x18],r8
   1400015da:	mov    QWORD PTR [rsp+0x20],r9
   1400015df:	sub    rsp,0x28
   1400015e3:	mov    r8,rdx
   1400015e6:	lea    r9,[rsp+0x40]
   1400015eb:	mov    edx,0x400
   1400015f0:	call   QWORD PTR [rip+0x30f52]        # 0x140032548
   1400015f6:	add    rsp,0x28
   1400015fa:	ret    
   1400015fb:	int3   
   1400015fc:	int3   
   1400015fd:	int3   
   1400015fe:	int3   
   1400015ff:	int3   
   140001600:	mov    QWORD PTR [rsp+0x10],rdx
   140001605:	mov    QWORD PTR [rsp+0x18],r8
   14000160a:	mov    QWORD PTR [rsp+0x20],r9
   14000160f:	push   rbx
   140001610:	push   rsi
   140001611:	push   rdi
   140001612:	sub    rsp,0x40
   140001616:	lea    rax,[rip+0x31cc3]        # 0x1400332e0
   14000161d:	mov    BYTE PTR [rcx+0x8],0x0
   140001621:	mov    QWORD PTR [rcx],rax
   140001624:	lea    r9,[rsp+0x70]
   140001629:	lea    rax,[rsp+0x30]
   14000162e:	mov    BYTE PTR [rsp+0x30],0x0
   140001633:	mov    rbx,rcx
   140001636:	mov    QWORD PTR [rsp+0x20],rax
   14000163b:	mov    r8,rdx
   14000163e:	add    rcx,0x9
   140001642:	mov    edx,0xff
   140001647:	call   QWORD PTR [rip+0x30ef3]        # 0x140032540
   14000164d:	cmp    BYTE PTR [rsp+0x30],0x0
   140001652:	mov    edi,eax
   140001654:	mov    BYTE PTR [rbx+0x108],0x0
   14000165b:	je     0x140001688
   14000165d:	cmp    BYTE PTR [rbx+0x8],0x0
   140001661:	jne    0x140001688
   140001663:	cmp    DWORD PTR [rip+0x45a06],0x5        # 0x140047070
   14000166a:	jge    0x140001688
   14000166c:	lea    r8,[rbx+0x9]
   140001670:	mov    edx,0x100
   140001675:	lea    rcx,[rip+0x326d4]        # 0x140033d50
   14000167c:	call   QWORD PTR [rip+0x30d2e]        # 0x1400323b0
   140001682:	inc    DWORD PTR [rip+0x459e8]        # 0x140047070
   140001688:	mov    rax,rbx
   14000168b:	mov    DWORD PTR [rbx+0x10c],edi
   140001691:	add    rsp,0x40
   140001695:	pop    rdi
   140001696:	pop    rsi
   140001697:	pop    rbx
   140001698:	ret    
   140001699:	int3   
   14000169a:	int3   
   14000169b:	int3   
   14000169c:	int3   
   14000169d:	int3   
   14000169e:	int3   
   14000169f:	int3   
   1400016a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400016a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400016aa:	mov    QWORD PTR [rsp+0x18],rsi
   1400016af:	mov    QWORD PTR [rsp+0x20],rdi
   1400016b4:	push   r14
   1400016b6:	sub    rsp,0x40
   1400016ba:	movzx  eax,BYTE PTR [rsp+0x80]
   1400016c2:	movzx  esi,dl
   1400016c5:	movzx  r14d,BYTE PTR [rsp+0x78]
   1400016cb:	mov    rdi,rcx
   1400016ce:	mov    BYTE PTR [rsp+0x30],al
   1400016d2:	mov    eax,DWORD PTR [rsp+0x70]
   1400016d6:	mov    BYTE PTR [rsp+0x28],r14b
   1400016db:	mov    DWORD PTR [rsp+0x20],eax
   1400016df:	call   0x140007e60
   1400016e4:	mov    BYTE PTR [rdi+0x148],0x0
   1400016eb:	lea    rax,[rip+0x319be]        # 0x1400330b0
   1400016f2:	mov    QWORD PTR [rdi],rax
   1400016f5:	xor    ebp,ebp
   1400016f7:	mov    DWORD PTR [rdi+0x150],ebp
   1400016fd:	mov    QWORD PTR [rdi+0x158],rbp
   140001704:	mov    QWORD PTR [rdi+0x160],0x20
   14000170f:	call   QWORD PTR [rip+0x30dab]        # 0x1400324c0
   140001715:	mov    rax,QWORD PTR [rip+0x30c74]        # 0x140032390
   14000171c:	movsxd rdx,DWORD PTR [rdi+0x160]
   140001723:	shl    rdx,0x2
   140001727:	mov    rcx,QWORD PTR [rax]
   14000172a:	mov    rax,QWORD PTR [rcx]
   14000172d:	call   QWORD PTR [rax+0x8]
   140001730:	lea    rcx,[rdi+0x168]
   140001737:	mov    r9b,0x1
   14000173a:	lea    r8d,[rbp+0x20]
   14000173e:	mov    QWORD PTR [rdi+0x158],rax
   140001745:	xor    edx,edx
   140001747:	call   0x14001c880
   14000174c:	mov    DWORD PTR [rdi+0x1c0],ebp
   140001752:	lea    rbx,[rdi+0x1f8]
   140001759:	mov    QWORD PTR [rdi+0x1c8],rbp
   140001760:	lea    rcx,[rdi+0x210]
   140001767:	mov    QWORD PTR [rdi+0x1d0],rbp
   14000176e:	mov    DWORD PTR [rdi+0x1e4],ebp
   140001774:	mov    QWORD PTR [rdi+0x1e8],rbp
   14000177b:	mov    QWORD PTR [rbx],rbp
   14000177e:	mov    QWORD PTR [rdi+0x200],rbp
   140001785:	call   0x1400259d0
   14000178a:	mov    BYTE PTR [rdi+0x1e3],bpl
   140001791:	lea    rdx,[rip+0x31948]        # 0x1400330e0
   140001798:	mov    eax,ebp
   14000179a:	mov    rcx,rbx
   14000179d:	xchg   DWORD PTR [rdi+0x1e4],eax
   1400017a3:	mov    eax,DWORD PTR [rdi+0x1e4]
   1400017a9:	mov    DWORD PTR [rdi+0x1d8],ebp
   1400017af:	mov    WORD PTR [rdi+0x1dc],bp
   1400017b6:	mov    QWORD PTR [rdi+0x1b8],rbp
   1400017bd:	mov    DWORD PTR [rdi+0x1df],ebp
   1400017c3:	call   0x14001aae0
   1400017c8:	mov    rcx,QWORD PTR [rdi+0xe8]
   1400017cf:	lea    rdx,[rip+0x31916]        # 0x1400330ec
   1400017d6:	xor    r8d,r8d
   1400017d9:	mov    BYTE PTR [rdi+0x208],bpl
   1400017e0:	mov    DWORD PTR [rdi+0x20c],0xffffffff
   1400017ea:	mov    QWORD PTR [rdi+0x1f0],rbp
   1400017f1:	mov    BYTE PTR [rdi+0x1de],bpl
   1400017f8:	call   0x14001e240
   1400017fd:	test   eax,eax
   1400017ff:	setne  bl
   140001802:	call   QWORD PTR [rip+0x30cb0]        # 0x1400324b8
   140001808:	lea    rdx,[rip+0x318e5]        # 0x1400330f4
   14000180f:	mov    rcx,rax
   140001812:	mov    r8,QWORD PTR [rax]
   140001815:	call   QWORD PTR [r8+0x40]
   140001819:	test   eax,eax
   14000181b:	sete   bpl
   14000181f:	call   QWORD PTR [rip+0x30c93]        # 0x1400324b8
   140001825:	lea    rdx,[rip+0x318d0]        # 0x1400330fc
   14000182c:	mov    rcx,rax
   14000182f:	mov    r8,QWORD PTR [rax]
   140001832:	call   QWORD PTR [r8+0x40]
   140001836:	test   eax,eax
   140001838:	jne    0x14000183f
   14000183a:	test   bpl,bpl
   14000183d:	je     0x140001841
   14000183f:	xor    bl,bl
   140001841:	call   QWORD PTR [rip+0x30c71]        # 0x1400324b8
   140001847:	lea    rdx,[rip+0x318b2]        # 0x140033100
   14000184e:	mov    rcx,rax
   140001851:	mov    r8,QWORD PTR [rax]
   140001854:	call   QWORD PTR [r8+0x40]
   140001858:	test   eax,eax
   14000185a:	jne    0x14000187f
   14000185c:	call   QWORD PTR [rip+0x30c56]        # 0x1400324b8
   140001862:	lea    rdx,[rip+0x318a7]        # 0x140033110
   140001869:	mov    rcx,rax
   14000186c:	mov    r8,QWORD PTR [rax]
   14000186f:	call   QWORD PTR [r8+0x40]
   140001873:	test   eax,eax
   140001875:	jne    0x14000187f
   140001877:	test   bl,bl
   140001879:	je     0x14000192b
   14000187f:	mov    rcx,QWORD PTR [rdi+0xe8]
   140001886:	lea    rdx,[rip+0x3185f]        # 0x1400330ec
   14000188d:	xor    r8d,r8d
   140001890:	call   0x14001e240
   140001895:	test   eax,eax
   140001897:	setne  al
   14000189a:	test   sil,sil
   14000189d:	je     0x1400018bd
   14000189f:	test   al,al
   1400018a1:	jne    0x1400018bd
   1400018a3:	call   QWORD PTR [rip+0x30c0f]        # 0x1400324b8
   1400018a9:	xor    r8d,r8d
   1400018ac:	lea    rdx,[rip+0x3186d]        # 0x140033120
   1400018b3:	mov    rcx,rax
   1400018b6:	mov    r9,QWORD PTR [rax]
   1400018b9:	call   QWORD PTR [r9+0x30]
   1400018bd:	xor    r9d,r9d
   1400018c0:	lea    r8,[rip+0x31869]        # 0x140033130
   1400018c7:	lea    rdx,[rip+0x31872]        # 0x140033140
   1400018ce:	mov    rcx,rdi
   1400018d1:	call   0x140008980
   1400018d6:	mov    rbx,rax
   1400018d9:	test   rax,rax
   1400018dc:	jne    0x1400018f4
   1400018de:	lea    rdx,[rip+0x3184b]        # 0x140033130
   1400018e5:	lea    rcx,[rip+0x31864]        # 0x140033150
   1400018ec:	call   QWORD PTR [rip+0x30abe]        # 0x1400323b0
   1400018f2:	jmp    0x14000192b
   1400018f4:	test   sil,sil
   1400018f7:	je     0x14000191d
   1400018f9:	test   r14b,r14b
   1400018fc:	jne    0x14000191d
   1400018fe:	call   QWORD PTR [rip+0x30bb4]        # 0x1400324b8
   140001904:	lea    rdx,[rip+0x317f5]        # 0x140033100
   14000190b:	mov    rcx,rax
   14000190e:	mov    r8,QWORD PTR [rax]
   140001911:	call   QWORD PTR [r8+0x40]
   140001915:	test   eax,eax
   140001917:	je     0x14000191d
   140001919:	mov    dl,0x1
   14000191b:	jmp    0x14000191f
   14000191d:	xor    edx,edx
   14000191f:	mov    rax,QWORD PTR [rbx]
   140001922:	mov    rcx,rbx
   140001925:	call   QWORD PTR [rax+0xa8]
   14000192b:	mov    rbx,QWORD PTR [rsp+0x50]
   140001930:	mov    rax,rdi
   140001933:	mov    rdi,QWORD PTR [rsp+0x68]
   140001938:	mov    rbp,QWORD PTR [rsp+0x58]
   14000193d:	mov    rsi,QWORD PTR [rsp+0x60]
   140001942:	add    rsp,0x40
   140001946:	pop    r14
   140001948:	ret    
   140001949:	int3   
   14000194a:	int3   
   14000194b:	int3   
   14000194c:	int3   
   14000194d:	int3   
   14000194e:	int3   
   14000194f:	int3   
   140001950:	mov    QWORD PTR [rsp+0x18],rbx
   140001955:	push   rbp
   140001956:	sub    rsp,0x20
   14000195a:	lea    rax,[rip+0x3174f]        # 0x1400330b0
   140001961:	xor    ebp,ebp
   140001963:	mov    QWORD PTR [rcx],rax
   140001966:	mov    rbx,rcx
   140001969:	cmp    QWORD PTR [rip+0x45858],rbp        # 0x1400471c8
   140001970:	je     0x1400019e0
   140001972:	mov    QWORD PTR [rsp+0x38],rdi
   140001977:	movsxd rdi,DWORD PTR [rcx+0x1c0]
   14000197e:	test   edi,edi
   140001980:	jle    0x1400019db
   140001982:	mov    edx,edi
   140001984:	mov    QWORD PTR [rsp+0x30],rsi
   140001989:	lea    rcx,[rip+0x317f8]        # 0x140033188
   140001990:	call   QWORD PTR [rip+0x30a22]        # 0x1400323b8
   140001996:	mov    rsi,rdi
   140001999:	mov    edi,ebp
   14000199b:	test   rsi,rsi
   14000199e:	jle    0x1400019c3
   1400019a0:	mov    rcx,QWORD PTR [rip+0x45821]        # 0x1400471c8
   1400019a7:	mov    rdx,QWORD PTR [rbx+0x1c8]
   1400019ae:	mov    rax,QWORD PTR [rcx]
   1400019b1:	mov    rdx,QWORD PTR [rdx+rdi*8]
   1400019b5:	call   QWORD PTR [rax+0xd8]
   1400019bb:	inc    rdi
   1400019be:	cmp    rdi,rsi
   1400019c1:	jl     0x1400019a0
   1400019c3:	mov    rcx,QWORD PTR [rip+0x457fe]        # 0x1400471c8
   1400019ca:	mov    rax,QWORD PTR [rcx]
   1400019cd:	call   QWORD PTR [rax+0x70]
   1400019d0:	mov    rsi,QWORD PTR [rsp+0x30]
   1400019d5:	mov    DWORD PTR [rbx+0x1c0],ebp
   1400019db:	mov    rdi,QWORD PTR [rsp+0x38]
   1400019e0:	cmp    BYTE PTR [rbx+0x208],bpl
   1400019e7:	je     0x140001a09
   1400019e9:	mov    edx,DWORD PTR [rbx+0x20c]
   1400019ef:	lea    rcx,[rbx+0x210]
   1400019f6:	mov    rax,QWORD PTR [rcx]
   1400019f9:	call   QWORD PTR [rax+0x28]
   1400019fc:	mov    BYTE PTR [rbx+0x208],bpl
   140001a03:	call   QWORD PTR [rip+0x30a7f]        # 0x140032488
   140001a09:	cmp    BYTE PTR [rbx+0x1de],bpl
   140001a10:	je     0x140001a1e
   140001a12:	call   0x140024f60
   140001a17:	mov    BYTE PTR [rbx+0x1de],bpl
   140001a1e:	lea    rcx,[rbx+0x210]
   140001a25:	call   0x140025a70
   140001a2a:	lea    rcx,[rbx+0x200]
   140001a31:	cmp    QWORD PTR [rcx],rbp
   140001a34:	je     0x140001a3b
   140001a36:	call   0x14001b030
   140001a3b:	lea    rcx,[rbx+0x1f8]
   140001a42:	cmp    QWORD PTR [rcx],rbp
   140001a45:	je     0x140001a4c
   140001a47:	call   0x14001b030
   140001a4c:	lea    rcx,[rbx+0x1e8]
   140001a53:	cmp    QWORD PTR [rcx],rbp
   140001a56:	je     0x140001a5d
   140001a58:	call   0x14001b030
   140001a5d:	mov    DWORD PTR [rbx+0x1c0],ebp
   140001a63:	test   DWORD PTR [rbx+0x1d4],0xc0000000
   140001a6d:	jne    0x140001acd
   140001a6f:	mov    rdx,QWORD PTR [rbx+0x1c8]
   140001a76:	test   rdx,rdx
   140001a79:	je     0x140001a92
   140001a7b:	mov    rax,QWORD PTR [rip+0x3090e]        # 0x140032390
   140001a82:	mov    rcx,QWORD PTR [rax]
   140001a85:	mov    rax,QWORD PTR [rcx]
   140001a88:	call   QWORD PTR [rax+0x28]
   140001a8b:	mov    QWORD PTR [rbx+0x1c8],rbp
   140001a92:	mov    DWORD PTR [rbx+0x1d0],ebp
   140001a98:	test   DWORD PTR [rbx+0x1d4],0xc0000000
   140001aa2:	jne    0x140001acd
   140001aa4:	mov    rdx,QWORD PTR [rbx+0x1c8]
   140001aab:	test   rdx,rdx
   140001aae:	je     0x140001ac7
   140001ab0:	mov    rax,QWORD PTR [rip+0x308d9]        # 0x140032390
   140001ab7:	mov    rcx,QWORD PTR [rax]
   140001aba:	mov    rax,QWORD PTR [rcx]
   140001abd:	call   QWORD PTR [rax+0x28]
   140001ac0:	mov    QWORD PTR [rbx+0x1c8],rbp
   140001ac7:	mov    DWORD PTR [rbx+0x1d0],ebp
   140001acd:	lea    rcx,[rbx+0x168]
   140001ad4:	call   0x14001c950
   140001ad9:	mov    DWORD PTR [rbx+0x150],ebp
   140001adf:	test   DWORD PTR [rbx+0x164],0xc0000000
   140001ae9:	jne    0x140001b49
   140001aeb:	mov    rdx,QWORD PTR [rbx+0x158]
   140001af2:	test   rdx,rdx
   140001af5:	je     0x140001b0e
   140001af7:	mov    rax,QWORD PTR [rip+0x30892]        # 0x140032390
   140001afe:	mov    rcx,QWORD PTR [rax]
   140001b01:	mov    rax,QWORD PTR [rcx]
   140001b04:	call   QWORD PTR [rax+0x28]
   140001b07:	mov    QWORD PTR [rbx+0x158],rbp
   140001b0e:	mov    DWORD PTR [rbx+0x160],ebp
   140001b14:	test   DWORD PTR [rbx+0x164],0xc0000000
   140001b1e:	jne    0x140001b49
   140001b20:	mov    rdx,QWORD PTR [rbx+0x158]
   140001b27:	test   rdx,rdx
   140001b2a:	je     0x140001b43
   140001b2c:	mov    rax,QWORD PTR [rip+0x3085d]        # 0x140032390
   140001b33:	mov    rcx,QWORD PTR [rax]
   140001b36:	mov    rax,QWORD PTR [rcx]
   140001b39:	call   QWORD PTR [rax+0x28]
   140001b3c:	mov    QWORD PTR [rbx+0x158],rbp
   140001b43:	mov    DWORD PTR [rbx+0x160],ebp
   140001b49:	mov    rcx,rbx
   140001b4c:	mov    rbx,QWORD PTR [rsp+0x40]
   140001b51:	add    rsp,0x20
   140001b55:	pop    rbp
   140001b56:	jmp    0x140008080
   140001b5b:	int3   
   140001b5c:	int3   
   140001b5d:	int3   
   140001b5e:	int3   
   140001b5f:	int3   
   140001b60:	rex push rbx
   140001b62:	sub    rsp,0x20
   140001b66:	lea    rax,[rip+0x30c63]        # 0x1400327d0
   140001b6d:	mov    rbx,rcx
   140001b70:	mov    QWORD PTR [rcx],rax
   140001b73:	test   dl,0x1
   140001b76:	je     0x140001b82
   140001b78:	mov    edx,0x10
   140001b7d:	call   0x14002639c
   140001b82:	mov    rax,rbx
   140001b85:	add    rsp,0x20
   140001b89:	pop    rbx
   140001b8a:	ret    
   140001b8b:	int3   
   140001b8c:	int3   
   140001b8d:	int3   
   140001b8e:	int3   
   140001b8f:	int3   
   140001b90:	mov    QWORD PTR [rsp+0x8],rbx
   140001b95:	push   rdi
   140001b96:	sub    rsp,0x20
   140001b9a:	mov    ebx,edx
   140001b9c:	mov    rdi,rcx
   140001b9f:	call   0x140001950
   140001ba4:	test   bl,0x1
   140001ba7:	je     0x140001bb6
   140001ba9:	mov    edx,0x6a0
   140001bae:	mov    rcx,rdi
   140001bb1:	call   0x14002639c
   140001bb6:	mov    rax,rdi
   140001bb9:	mov    rbx,QWORD PTR [rsp+0x30]
   140001bbe:	add    rsp,0x20
   140001bc2:	pop    rdi
   140001bc3:	ret    
   140001bc4:	int3   
   140001bc5:	int3   
   140001bc6:	int3   
   140001bc7:	int3   
   140001bc8:	int3   
   140001bc9:	int3   
   140001bca:	int3   
   140001bcb:	int3   
   140001bcc:	int3   
   140001bcd:	int3   
   140001bce:	int3   
   140001bcf:	int3   
   140001bd0:	rex push rbx
   140001bd2:	sub    rsp,0x20
   140001bd6:	lea    rax,[rip+0x30bf3]        # 0x1400327d0
   140001bdd:	mov    rbx,rcx
   140001be0:	mov    QWORD PTR [rcx],rax
   140001be3:	test   dl,0x1
   140001be6:	je     0x140001bf2
   140001be8:	mov    edx,0x18
   140001bed:	call   0x14002639c
   140001bf2:	mov    rax,rbx
   140001bf5:	add    rsp,0x20
   140001bf9:	pop    rbx
   140001bfa:	ret    
   140001bfb:	int3   
   140001bfc:	int3   
   140001bfd:	int3   
   140001bfe:	int3   
   140001bff:	int3   
   140001c00:	rex push rbx
   140001c02:	sub    rsp,0x20
   140001c06:	lea    rax,[rip+0x30bc3]        # 0x1400327d0
   140001c0d:	mov    rbx,rcx
   140001c10:	mov    QWORD PTR [rcx],rax
   140001c13:	test   dl,0x1
   140001c16:	je     0x140001c22
   140001c18:	mov    edx,0x8
   140001c1d:	call   0x14002639c
   140001c22:	mov    rax,rbx
   140001c25:	add    rsp,0x20
   140001c29:	pop    rbx
   140001c2a:	ret    
   140001c2b:	int3   
   140001c2c:	int3   
   140001c2d:	int3   
   140001c2e:	int3   
   140001c2f:	int3   
   140001c30:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c34:	xor    r9d,r9d
   140001c37:	jmp    0x140008490
   140001c3c:	int3   
   140001c3d:	int3   
   140001c3e:	int3   
   140001c3f:	int3   
   140001c40:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c44:	jmp    0x140008720
   140001c49:	int3   
   140001c4a:	int3   
   140001c4b:	int3   
   140001c4c:	int3   
   140001c4d:	int3   
   140001c4e:	int3   
   140001c4f:	int3   
   140001c50:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c54:	xor    r9d,r9d
   140001c57:	jmp    0x140008980
   140001c5c:	int3   
   140001c5d:	int3   
   140001c5e:	int3   
   140001c5f:	int3   
   140001c60:	rex push rbx
   140001c62:	sub    rsp,0x20
   140001c66:	mov    rax,QWORD PTR [rcx+0x8]
   140001c6a:	mov    rbx,rcx
   140001c6d:	inc    DWORD PTR [rax+0x13c]
   140001c73:	mov    rax,QWORD PTR [rcx]
   140001c76:	call   QWORD PTR [rax+0x68]
   140001c79:	mov    rcx,QWORD PTR [rbx+0x8]
   140001c7d:	dec    DWORD PTR [rcx+0x13c]
   140001c83:	add    rsp,0x20
   140001c87:	pop    rbx
   140001c88:	ret    
   140001c89:	int3   
   140001c8a:	int3   
   140001c8b:	int3   
   140001c8c:	int3   
   140001c8d:	int3   
   140001c8e:	int3   
   140001c8f:	int3   
   140001c90:	mov    rcx,QWORD PTR [rcx+0x8]
   140001c94:	jmp    0x140008c40
   140001c99:	int3   
   140001c9a:	int3   
   140001c9b:	int3   
   140001c9c:	int3   
   140001c9d:	int3   
   140001c9e:	int3   
   140001c9f:	int3   
   140001ca0:	mov    rcx,QWORD PTR [rcx+0x8]
   140001ca4:	mov    rax,QWORD PTR [rcx]
   140001ca7:	rex.W jmp QWORD PTR [rax+0x18]
   140001cab:	int3   
   140001cac:	int3   
   140001cad:	int3   
   140001cae:	int3   
   140001caf:	int3   
   140001cb0:	rex push rbx
   140001cb2:	sub    rsp,0x30
   140001cb6:	mov    rbx,rcx
   140001cb9:	add    rcx,0x200
   140001cc0:	call   0x14001aae0
   140001cc5:	cmp    DWORD PTR [rbx+0x20c],0xffffffff
   140001ccc:	je     0x140001d20
   140001cce:	mov    rax,QWORD PTR [rbx]
   140001cd1:	lea    rdx,[rsp+0x40]
   140001cd6:	mov    rcx,rbx
   140001cd9:	call   QWORD PTR [rax+0x10]
   140001cdc:	mov    rcx,rax
   140001cdf:	call   0x14001b050
   140001ce4:	lea    rdx,[rip+0x314f9]        # 0x1400331e4
   140001ceb:	mov    r8,rax
   140001cee:	lea    rcx,[rbx+0x210]
   140001cf5:	mov    QWORD PTR [rsp+0x20],rdx
   140001cfa:	mov    r10,QWORD PTR [rcx]
   140001cfd:	lea    r9,[rip+0x3150c]        # 0x140033210
   140001d04:	mov    edx,DWORD PTR [rbx+0x20c]
   140001d0a:	call   QWORD PTR [r10+0x50]
   140001d0e:	cmp    QWORD PTR [rsp+0x40],0x0
   140001d14:	je     0x140001d20
   140001d16:	lea    rcx,[rsp+0x40]
   140001d1b:	call   0x14001b030
   140001d20:	add    rsp,0x30
   140001d24:	pop    rbx
   140001d25:	ret    
   140001d26:	int3   
   140001d27:	int3   
   140001d28:	int3   
   140001d29:	int3   
   140001d2a:	int3   
   140001d2b:	int3   
   140001d2c:	int3   
   140001d2d:	int3   
   140001d2e:	int3   
   140001d2f:	int3   
   140001d30:	mov    QWORD PTR [rsp+0x10],rdx
   140001d35:	sub    rsp,0x28
   140001d39:	mov    edx,0x1
   140001d3e:	lea    rcx,[rsp+0x38]
   140001d43:	call   0x14001c7e0
   140001d48:	mov    al,0x1
   140001d4a:	add    rsp,0x28
   140001d4e:	ret    
   140001d4f:	int3   
   140001d50:	mov    QWORD PTR [rsp+0x10],rdx
   140001d55:	push   rbx
   140001d56:	sub    rsp,0x20
   140001d5a:	mov    rbx,rcx
   140001d5d:	mov    QWORD PTR [rsp+0x40],rdx
   140001d62:	mov    edx,0x1
   140001d67:	lea    rcx,[rsp+0x40]
   140001d6c:	call   0x14001c7e0
   140001d71:	mov    edx,0x1
   140001d76:	lea    rcx,[rsp+0x38]
   140001d7b:	call   0x140024f20
   140001d80:	inc    DWORD PTR [rbx+0x10]
   140001d83:	mov    al,0x1
   140001d85:	add    rsp,0x20
   140001d89:	pop    rbx
   140001d8a:	ret    
   140001d8b:	int3   
   140001d8c:	int3   
   140001d8d:	int3   
   140001d8e:	int3   
   140001d8f:	int3   
   140001d90:	rex push rbx
   140001d92:	sub    rsp,0x20
   140001d96:	mov    rbx,rcx
   140001d99:	mov    ecx,0x18
   140001d9e:	call   0x140007bf0
   140001da3:	test   rax,rax
   140001da6:	je     0x140001dc3
   140001da8:	lea    rcx,[rip+0x31141]        # 0x140032ef0
   140001daf:	mov    QWORD PTR [rax+0x8],rbx
   140001db3:	mov    QWORD PTR [rax],rcx
   140001db6:	mov    DWORD PTR [rax+0x10],0x0
   140001dbd:	add    rsp,0x20
   140001dc1:	pop    rbx
   140001dc2:	ret    
   140001dc3:	add    rsp,0x20
   140001dc7:	pop    rbx
   140001dc8:	ret    
   140001dc9:	int3   
   140001dca:	int3   
   140001dcb:	int3   
   140001dcc:	int3   
   140001dcd:	int3   
   140001dce:	int3   
   140001dcf:	int3   
   140001dd0:	jmp    0x14001c800
   140001dd5:	int3   
   140001dd6:	int3   
   140001dd7:	int3   
   140001dd8:	int3   
   140001dd9:	int3   
   140001dda:	int3   
   140001ddb:	int3   
   140001ddc:	int3   
   140001ddd:	int3   
   140001dde:	int3   
   140001ddf:	int3   
   140001de0:	rex push rbx
   140001de2:	sub    rsp,0x20
   140001de6:	cmp    DWORD PTR [rcx+0x10],0x0
   140001dea:	mov    rbx,rcx
   140001ded:	jle    0x140001dfe
   140001def:	nop
   140001df0:	call   0x140024f60
   140001df5:	dec    DWORD PTR [rbx+0x10]
   140001df8:	cmp    DWORD PTR [rbx+0x10],0x0
   140001dfc:	jg     0x140001df0
   140001dfe:	add    rsp,0x20
   140001e02:	pop    rbx
   140001e03:	jmp    0x14001c800
   140001e08:	int3   
   140001e09:	int3   
   140001e0a:	int3   
   140001e0b:	int3   
   140001e0c:	int3   
   140001e0d:	int3   
   140001e0e:	int3   
   140001e0f:	int3   
   140001e10:	mov    rcx,QWORD PTR [rcx+0x8]
   140001e14:	jmp    0x140009500
   140001e19:	int3   
   140001e1a:	int3   
   140001e1b:	int3   
   140001e1c:	int3   
   140001e1d:	int3   
   140001e1e:	int3   
   140001e1f:	int3   
   140001e20:	mov    QWORD PTR [rsp+0x8],rbx
   140001e25:	mov    QWORD PTR [rsp+0x10],rsi
   140001e2a:	push   rdi
   140001e2b:	sub    rsp,0x30
   140001e2f:	mov    rsi,r8
   140001e32:	mov    rbx,rdx
   140001e35:	mov    rdi,rcx
   140001e38:	test   rdx,rdx
   140001e3b:	jne    0x140001e4f
   140001e3d:	xor    al,al
   140001e3f:	mov    rbx,QWORD PTR [rsp+0x40]
   140001e44:	mov    rsi,QWORD PTR [rsp+0x48]
   140001e49:	add    rsp,0x30
   140001e4d:	pop    rdi
   140001e4e:	ret    
   140001e4f:	mov    dl,0x1
   140001e51:	call   0x140004d40
   140001e56:	mov    rdx,rsi
   140001e59:	mov    rcx,rdi
   140001e5c:	call   0x140003ef0
   140001e61:	mov    rax,QWORD PTR [rip+0x45320]        # 0x140047188
   140001e68:	test   rax,rax
   140001e6b:	je     0x140001e73
   140001e6d:	lea    rdx,[rax+0x8]
   140001e71:	jmp    0x140001e75
   140001e73:	xor    edx,edx
   140001e75:	lea    r9,[rip+0x31368]        # 0x1400331e4
   140001e7c:	mov    QWORD PTR [rsp+0x20],0x0
   140001e85:	lea    r8,[rip+0x31b8c]        # 0x140033a18
   140001e8c:	mov    rcx,rbx
   140001e8f:	call   0x14001f2c0
   140001e94:	mov    rdx,rsi
   140001e97:	mov    rcx,rdi
   140001e9a:	movzx  ebx,al
   140001e9d:	call   0x140006650
   140001ea2:	xor    edx,edx
   140001ea4:	mov    rcx,rdi
   140001ea7:	call   0x140004d40
   140001eac:	mov    rsi,QWORD PTR [rsp+0x48]
   140001eb1:	movzx  eax,bl
   140001eb4:	mov    rbx,QWORD PTR [rsp+0x40]
   140001eb9:	add    rsp,0x30
   140001ebd:	pop    rdi
   140001ebe:	ret    
   140001ebf:	int3   
   140001ec0:	mov    rcx,QWORD PTR [rcx+0x8]
   140001ec4:	jmp    0x140001e20
   140001ec9:	int3   
   140001eca:	int3   
   140001ecb:	int3   
   140001ecc:	int3   
   140001ecd:	int3   
   140001ece:	int3   
   140001ecf:	int3   
   140001ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140001ed5:	push   rdi
   140001ed6:	sub    rsp,0x130
   140001edd:	mov    rbx,QWORD PTR [rcx+0x8]
   140001ee1:	mov    rdi,rdx
   140001ee4:	lea    rdx,[rip+0x308d1]        # 0x1400327bc
   140001eeb:	lea    rcx,[rsp+0x20]
   140001ef0:	call   0x140001600
   140001ef5:	lea    r8,[rsp+0x29]
   140001efa:	mov    rdx,rdi
   140001efd:	mov    rcx,rbx
   140001f00:	call   0x140002db0
   140001f05:	mov    rbx,QWORD PTR [rsp+0x140]
   140001f0d:	mov    rax,rdi
   140001f10:	add    rsp,0x130
   140001f17:	pop    rdi
   140001f18:	ret    
   140001f19:	int3   
   140001f1a:	int3   
   140001f1b:	int3   
   140001f1c:	int3   
   140001f1d:	int3   
   140001f1e:	int3   
   140001f1f:	int3   
   140001f20:	mov    BYTE PTR [rdx],0x0
   140001f23:	xor    al,al
   140001f25:	ret    
   140001f26:	int3   
   140001f27:	int3   
   140001f28:	int3   
   140001f29:	int3   
   140001f2a:	int3   
   140001f2b:	int3   
   140001f2c:	int3   
   140001f2d:	int3   
   140001f2e:	int3   
   140001f2f:	int3   
   140001f30:	mov    QWORD PTR [rsp+0x10],rbx
   140001f35:	push   rdi
   140001f36:	sub    rsp,0x460
   140001f3d:	mov    rcx,QWORD PTR [rip+0x45244]        # 0x140047188
   140001f44:	lea    r9,[rsp+0x50]
   140001f49:	mov    ebx,r8d
   140001f4c:	mov    DWORD PTR [rsp+0x20],0x410
   140001f54:	mov    rdi,rdx
   140001f57:	xor    r8d,r8d
   140001f5a:	lea    rdx,[rip+0x31597]        # 0x1400334f8
   140001f61:	mov    rax,QWORD PTR [rcx]
   140001f64:	call   QWORD PTR [rax+0xc0]
   140001f6a:	test   eax,eax
   140001f6c:	jne    0x140001f8e
   140001f6e:	lea    rcx,[rip+0x31a4b]        # 0x1400339c0
   140001f75:	call   QWORD PTR [rip+0x30435]        # 0x1400323b0
   140001f7b:	xor    al,al
   140001f7d:	mov    rbx,QWORD PTR [rsp+0x478]
   140001f85:	add    rsp,0x460
   140001f8c:	pop    rdi
   140001f8d:	ret    
   140001f8e:	mov    QWORD PTR [rsp+0x470],rsi
   140001f96:	lea    r8,[rsp+0x30]
   140001f9b:	xor    esi,esi
   140001f9d:	lea    rdx,[rip+0x31898]        # 0x14003383c
   140001fa4:	lea    rcx,[rsp+0x50]
   140001fa9:	mov    DWORD PTR [rsp+0x30],esi
   140001fad:	mov    QWORD PTR [rsp+0x38],rsi
   140001fb2:	mov    QWORD PTR [rsp+0x40],rsi
   140001fb7:	call   QWORD PTR [rip+0x30613]        # 0x1400325d0
   140001fbd:	mov    rdx,QWORD PTR [rsp+0x38]
   140001fc2:	mov    r8d,ebx
   140001fc5:	mov    rcx,rdi
   140001fc8:	mov    rdx,QWORD PTR [rdx]
   140001fcb:	call   QWORD PTR [rip+0x30587]        # 0x140032558
   140001fd1:	mov    eax,DWORD PTR [rsp+0x44]
   140001fd5:	mov    rdx,QWORD PTR [rsp+0x38]
   140001fda:	mov    DWORD PTR [rsp+0x30],esi
   140001fde:	test   eax,0xc0000000
   140001fe3:	jne    0x140002009
   140001fe5:	test   rdx,rdx
   140001fe8:	je     0x140002005
   140001fea:	mov    rax,QWORD PTR [rip+0x3039f]        # 0x140032390
   140001ff1:	mov    rcx,QWORD PTR [rax]
   140001ff4:	mov    rax,QWORD PTR [rcx]
   140001ff7:	call   QWORD PTR [rax+0x28]
   140001ffa:	mov    eax,DWORD PTR [rsp+0x44]
   140001ffe:	mov    edx,esi
   140002000:	mov    QWORD PTR [rsp+0x38],rdx
   140002005:	mov    DWORD PTR [rsp+0x40],esi
   140002009:	mov    rsi,QWORD PTR [rsp+0x470]
   140002011:	test   eax,0xc0000000
   140002016:	jne    0x14000202d
   140002018:	test   rdx,rdx
   14000201b:	je     0x14000202d
   14000201d:	mov    rax,QWORD PTR [rip+0x3036c]        # 0x140032390
   140002024:	mov    rcx,QWORD PTR [rax]
   140002027:	mov    rax,QWORD PTR [rcx]
   14000202a:	call   QWORD PTR [rax+0x28]
   14000202d:	mov    al,0x1
   14000202f:	mov    rbx,QWORD PTR [rsp+0x478]
   140002037:	add    rsp,0x460
   14000203e:	pop    rdi
   14000203f:	ret    
   140002040:	mov    rcx,QWORD PTR [rcx+0x8]
   140002044:	jmp    0x140001f30
   140002049:	int3   
   14000204a:	int3   
   14000204b:	int3   
   14000204c:	int3   
   14000204d:	int3   
   14000204e:	int3   
   14000204f:	int3   
   140002050:	mov    QWORD PTR [rsp+0x10],rbx
   140002055:	push   rdi
   140002056:	sub    rsp,0x460
   14000205d:	mov    rcx,QWORD PTR [rip+0x45124]        # 0x140047188
   140002064:	lea    r9,[rsp+0x50]
   140002069:	mov    ebx,r8d
   14000206c:	mov    DWORD PTR [rsp+0x20],0x410
   140002074:	mov    rdi,rdx
   140002077:	xor    r8d,r8d
   14000207a:	lea    rdx,[rip+0x3146b]        # 0x1400334ec
   140002081:	mov    rax,QWORD PTR [rcx]
   140002084:	call   QWORD PTR [rax+0xc0]
   14000208a:	test   eax,eax
   14000208c:	jne    0x1400020ae
   14000208e:	lea    rcx,[rip+0x318f3]        # 0x140033988
   140002095:	call   QWORD PTR [rip+0x30315]        # 0x1400323b0
   14000209b:	xor    al,al
   14000209d:	mov    rbx,QWORD PTR [rsp+0x478]
   1400020a5:	add    rsp,0x460
   1400020ac:	pop    rdi
   1400020ad:	ret    
   1400020ae:	mov    QWORD PTR [rsp+0x470],rsi
   1400020b6:	lea    r8,[rsp+0x30]
   1400020bb:	xor    esi,esi
   1400020bd:	lea    rdx,[rip+0x31778]        # 0x14003383c
   1400020c4:	lea    rcx,[rsp+0x50]
   1400020c9:	mov    DWORD PTR [rsp+0x30],esi
   1400020cd:	mov    QWORD PTR [rsp+0x38],rsi
   1400020d2:	mov    QWORD PTR [rsp+0x40],rsi
   1400020d7:	call   QWORD PTR [rip+0x304f3]        # 0x1400325d0
   1400020dd:	mov    rdx,QWORD PTR [rsp+0x38]
   1400020e2:	mov    r8d,ebx
   1400020e5:	mov    rcx,rdi
   1400020e8:	mov    rdx,QWORD PTR [rdx]
   1400020eb:	call   QWORD PTR [rip+0x30467]        # 0x140032558
   1400020f1:	mov    eax,DWORD PTR [rsp+0x44]
   1400020f5:	mov    rdx,QWORD PTR [rsp+0x38]
   1400020fa:	mov    DWORD PTR [rsp+0x30],esi
   1400020fe:	test   eax,0xc0000000
   140002103:	jne    0x140002129
   140002105:	test   rdx,rdx
   140002108:	je     0x140002125
   14000210a:	mov    rax,QWORD PTR [rip+0x3027f]        # 0x140032390
   140002111:	mov    rcx,QWORD PTR [rax]
   140002114:	mov    rax,QWORD PTR [rcx]
   140002117:	call   QWORD PTR [rax+0x28]
   14000211a:	mov    eax,DWORD PTR [rsp+0x44]
   14000211e:	mov    edx,esi
   140002120:	mov    QWORD PTR [rsp+0x38],rdx
   140002125:	mov    DWORD PTR [rsp+0x40],esi
   140002129:	mov    rsi,QWORD PTR [rsp+0x470]
   140002131:	test   eax,0xc0000000
   140002136:	jne    0x14000214d
   140002138:	test   rdx,rdx
   14000213b:	je     0x14000214d
   14000213d:	mov    rax,QWORD PTR [rip+0x3024c]        # 0x140032390
   140002144:	mov    rcx,QWORD PTR [rax]
   140002147:	mov    rax,QWORD PTR [rcx]
   14000214a:	call   QWORD PTR [rax+0x28]
   14000214d:	mov    al,0x1
   14000214f:	mov    rbx,QWORD PTR [rsp+0x478]
   140002157:	add    rsp,0x460
   14000215e:	pop    rdi
   14000215f:	ret    
   140002160:	mov    rcx,QWORD PTR [rcx+0x8]
   140002164:	jmp    0x140002050
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	mov    rax,QWORD PTR [rcx+0x8]
   140002174:	mov    rax,QWORD PTR [rax+0xf0]
   14000217b:	ret    
   14000217c:	int3   
   14000217d:	int3   
   14000217e:	int3   
   14000217f:	int3   
   140002180:	mov    rax,QWORD PTR [rcx+0x8]
   140002184:	mov    rax,QWORD PTR [rax+0xe8]
   14000218b:	ret    
   14000218c:	int3   
   14000218d:	int3   
   14000218e:	int3   
   14000218f:	int3   
   140002190:	test   rdx,rdx
   140002193:	je     0x140002240
   140002199:	mov    QWORD PTR [rsp+0x10],rbx
   14000219e:	mov    QWORD PTR [rsp+0x18],rsi
   1400021a3:	push   rdi
   1400021a4:	sub    rsp,0x20
   1400021a8:	mov    rdi,r8
   1400021ab:	mov    rsi,rdx
   1400021ae:	mov    rbx,rcx
   1400021b1:	test   r8,r8
   1400021b4:	je     0x140002231
   1400021b6:	mov    rcx,rdx
   1400021b9:	call   0x140004a60
   1400021be:	mov    dl,0x1
   1400021c0:	mov    rcx,rbx
   1400021c3:	call   0x140004d40
   1400021c8:	mov    rdx,rdi
   1400021cb:	mov    rcx,rbx
   1400021ce:	call   0x140003ef0
   1400021d3:	mov    ecx,0x14
   1400021d8:	call   0x14001dc70
   1400021dd:	test   rax,rax
   1400021e0:	je     0x14000221c
   1400021e2:	lea    rdx,[rip+0x3186f]        # 0x140033a58
   1400021e9:	mov    QWORD PTR [rsp+0x30],rbp
   1400021ee:	mov    rcx,rax
   1400021f1:	call   0x14001dbb0
   1400021f6:	mov    rbp,rax
   1400021f9:	test   rax,rax
   1400021fc:	je     0x140002217
   1400021fe:	mov    r9,rsi
   140002201:	mov    r8,rdi
   140002204:	mov    rdx,rax
   140002207:	mov    rcx,rbx
   14000220a:	call   0x140002260
   14000220f:	mov    rcx,rbp
   140002212:	call   0x140020790
   140002217:	mov    rbp,QWORD PTR [rsp+0x30]
   14000221c:	mov    rdx,rdi
   14000221f:	mov    rcx,rbx
   140002222:	call   0x140006650
   140002227:	xor    edx,edx
   140002229:	mov    rcx,rbx
   14000222c:	call   0x140004d40
   140002231:	mov    rbx,QWORD PTR [rsp+0x38]
   140002236:	mov    rsi,QWORD PTR [rsp+0x40]
   14000223b:	add    rsp,0x20
   14000223f:	pop    rdi
   140002240:	ret    
   140002241:	int3   
   140002242:	int3   
   140002243:	int3   
   140002244:	int3   
   140002245:	int3   
   140002246:	int3   
   140002247:	int3   
   140002248:	int3   
   140002249:	int3   
   14000224a:	int3   
   14000224b:	int3   
   14000224c:	int3   
   14000224d:	int3   
   14000224e:	int3   
   14000224f:	int3   
   140002250:	mov    rcx,QWORD PTR [rcx+0x8]
   140002254:	jmp    0x140002190
   140002259:	int3   
   14000225a:	int3   
   14000225b:	int3   
   14000225c:	int3   
   14000225d:	int3   
   14000225e:	int3   
   14000225f:	int3   
   140002260:	mov    QWORD PTR [rsp+0x8],rbx
   140002265:	mov    QWORD PTR [rsp+0x10],rsi
   14000226a:	mov    QWORD PTR [rsp+0x20],rdi
   14000226f:	mov    QWORD PTR [rsp+0x18],r8
   140002274:	push   rbp
   140002275:	push   r12
   140002277:	push   r13
   140002279:	push   r14
   14000227b:	push   r15
   14000227d:	lea    rbp,[rsp-0x5e0]
   140002285:	sub    rsp,0x6e0
   14000228c:	mov    rbx,r9
   14000228f:	mov    rdi,rdx
   140002292:	call   0x140001e20
   140002297:	xor    r13d,r13d
   14000229a:	lea    rdx,[rip+0x317d3]        # 0x140033a74
   1400022a1:	xor    r9d,r9d
   1400022a4:	mov    QWORD PTR [rsp+0x20],r13
   1400022a9:	xor    r8d,r8d
   1400022ac:	mov    rcx,rdi
   1400022af:	call   0x14001e360
   1400022b4:	mov    DWORD PTR [rsp+0x48],r13d
   1400022b9:	mov    QWORD PTR [rsp+0x50],r13
   1400022be:	mov    QWORD PTR [rsp+0x58],r13
   1400022c3:	test   rax,rax
   1400022c6:	je     0x1400023ba
   1400022cc:	lea    r8,[rsp+0x48]
   1400022d1:	mov    rcx,rax
   1400022d4:	lea    rdx,[rip+0x30c09]        # 0x140032ee4
   1400022db:	call   QWORD PTR [rip+0x302ef]        # 0x1400325d0
   1400022e1:	mov    esi,r13d
   1400022e4:	cmp    DWORD PTR [rsp+0x48],r13d
   1400022e9:	jle    0x140002362
   1400022eb:	mov    r14d,r13d
   1400022ee:	lea    r12d,[r13+0x1]
   1400022f2:	mov    rax,QWORD PTR [rsp+0x50]
   1400022f7:	lea    rcx,[rsp+0x40]
   1400022fc:	mov    rdx,QWORD PTR [r14+rax*1]
   140002300:	mov    QWORD PTR [rsp+0x40],r13
   140002305:	call   0x14001b3a0
   14000230a:	movsxd rdi,DWORD PTR [rbx]
   14000230d:	cmp    edi,DWORD PTR [rbx+0x10]
   140002310:	jne    0x14000231e
   140002312:	mov    edx,r12d
   140002315:	lea    rcx,[rbx+0x8]
   140002319:	call   0x140013420
   14000231e:	mov    rax,QWORD PTR [rbx+0x8]
   140002322:	inc    DWORD PTR [rbx]
   140002324:	lea    rdi,[rax+rdi*8]
   140002328:	test   rdi,rdi
   14000232b:	je     0x140002345
   14000232d:	lea    rcx,[rsp+0x40]
   140002332:	mov    QWORD PTR [rdi],r13
   140002335:	call   0x14001b050
   14000233a:	mov    rdx,rax
   14000233d:	mov    rcx,rdi
   140002340:	call   0x14001b3a0
   140002345:	cmp    QWORD PTR [rsp+0x40],r13
   14000234a:	je     0x140002356
   14000234c:	lea    rcx,[rsp+0x40]
   140002351:	call   0x14001b030
   140002356:	inc    esi
   140002358:	add    r14,0x8
   14000235c:	cmp    esi,DWORD PTR [rsp+0x48]
   140002360:	jl     0x1400022f2
   140002362:	mov    eax,DWORD PTR [rsp+0x5c]
   140002366:	mov    rdx,QWORD PTR [rsp+0x50]
   14000236b:	mov    DWORD PTR [rsp+0x48],r13d
   140002370:	test   eax,0xc0000000
   140002375:	jne    0x1400026ea
   14000237b:	test   rdx,rdx
   14000237e:	je     0x14000239c
   140002380:	mov    rax,QWORD PTR [rip+0x30009]        # 0x140032390
   140002387:	mov    rcx,QWORD PTR [rax]
   14000238a:	mov    rax,QWORD PTR [rcx]
   14000238d:	call   QWORD PTR [rax+0x28]
   140002390:	mov    eax,DWORD PTR [rsp+0x5c]
   140002394:	mov    rdx,r13
   140002397:	mov    QWORD PTR [rsp+0x50],rdx
   14000239c:	mov    DWORD PTR [rsp+0x58],r13d
   1400023a1:	test   eax,0xc0000000
   1400023a6:	jne    0x1400026ea
   1400023ac:	test   rdx,rdx
   1400023af:	je     0x1400026ea
   1400023b5:	jmp    0x1400026da
   1400023ba:	mov    rcx,QWORD PTR [rip+0x44dc7]        # 0x140047188
   1400023c1:	lea    r9,[rsp+0x68]
   1400023c6:	mov    rdx,QWORD PTR [rip+0x43c33]        # 0x140046000
   1400023cd:	lea    r8,[rip+0x30e10]        # 0x1400331e4
   1400023d4:	xorps  xmm0,xmm0
   1400023d7:	mov    QWORD PTR [rsp+0x78],r13
   1400023dc:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   1400023e2:	mov    rax,QWORD PTR [rcx]
   1400023e5:	xor    edi,edi
   1400023e7:	mov    esi,r13d
   1400023ea:	mov    DWORD PTR [rsp+0x40],edi
   1400023ee:	mov    r15,r13
   1400023f1:	call   QWORD PTR [rax+0x150]
   1400023f7:	lea    r12d,[rdi+0x1]
   1400023fb:	mov    r14,rax
   1400023fe:	test   rax,rax
   140002401:	je     0x1400025ea
   140002407:	mov    rcx,r14
   14000240a:	call   QWORD PTR [rip+0x300e0]        # 0x1400324f0
   140002410:	mov    rcx,rax
   140002413:	lea    rdx,[rip+0x3141e]        # 0x140033838
   14000241a:	call   QWORD PTR [rip+0x30140]        # 0x140032560
   140002420:	test   eax,eax
   140002422:	jne    0x1400025bc
   140002428:	mov    r9d,0x103
   14000242e:	lea    r8,[rbp+0x1a0]
   140002435:	mov    rdx,r14
   140002438:	lea    rcx,[rip+0x3163d]        # 0x140033a7c
   14000243f:	call   QWORD PTR [rip+0x300bb]        # 0x140032500
   140002445:	mov    rcx,QWORD PTR [rip+0x44d3c]        # 0x140047188
   14000244c:	lea    r9,[rbp-0x80]
   140002450:	xor    edx,edx
   140002452:	lea    r8,[rip+0x30d8b]        # 0x1400331e4
   140002459:	mov    QWORD PTR [rsp+0x30],rdx
   14000245e:	xor    dil,dil
   140002461:	mov    DWORD PTR [rsp+0x28],edx
   140002465:	lea    rdx,[rbp+0x1a0]
   14000246c:	mov    rax,QWORD PTR [rcx]
   14000246f:	mov    DWORD PTR [rsp+0x20],0x104
   140002477:	call   QWORD PTR [rax+0xb8]
   14000247d:	lea    r9,[rbp+0x2b0]
   140002484:	mov    DWORD PTR [rsp+0x28],0x104
   14000248c:	xor    r8d,r8d
   14000248f:	mov    QWORD PTR [rsp+0x20],0x0
   140002498:	lea    rdx,[rip+0x30ef1]        # 0x140033390
   14000249f:	lea    rcx,[rbp-0x80]
   1400024a3:	call   0x1400255b0
   1400024a8:	test   al,al
   1400024aa:	je     0x1400024df
   1400024ac:	mov    r9d,0x104
   1400024b2:	lea    rax,[rbp+0x2b0]
   1400024b9:	mov    edx,r9d
   1400024bc:	mov    QWORD PTR [rsp+0x20],rax
   1400024c1:	lea    r8,[rbp+0x3c0]
   1400024c8:	lea    rcx,[rbp+0x4d0]
   1400024cf:	call   0x140025370
   1400024d4:	cmp    BYTE PTR [rbp+0x3c0],dil
   1400024db:	setne  dil
   1400024df:	mov    rcx,QWORD PTR [rbp+0x620]
   1400024e6:	call   QWORD PTR [rip+0x3001c]        # 0x140032508
   1400024ec:	test   rax,rax
   1400024ef:	je     0x14000250d
   1400024f1:	test   dil,dil
   1400024f4:	jne    0x14000250d
   1400024f6:	mov    rdx,rax
   1400024f9:	lea    rcx,[rbp-0x80]
   1400024fd:	call   0x1400273a8
   140002502:	test   rax,rax
   140002505:	movzx  edi,dil
   140002509:	cmovne edi,r12d
   14000250d:	mov    r8d,0x104
   140002513:	lea    rdx,[rbp+0x90]
   14000251a:	mov    rcx,r14
   14000251d:	call   QWORD PTR [rip+0x2fffd]        # 0x140032520
   140002523:	xor    r14d,r14d
   140002526:	lea    rdx,[rbp+0x90]
   14000252d:	lea    rcx,[rsp+0x40]
   140002532:	mov    QWORD PTR [rsp+0x40],r14
   140002537:	call   0x14001b3a0
   14000253c:	test   dil,dil
   14000253f:	je     0x140002561
   140002541:	movsxd rdi,DWORD PTR [rbx]
   140002544:	cmp    edi,DWORD PTR [rbx+0x10]
   140002547:	jne    0x140002555
   140002549:	lea    rcx,[rbx+0x8]
   14000254d:	mov    edx,r12d
   140002550:	call   0x140013420
   140002555:	mov    rax,QWORD PTR [rbx+0x8]
   140002559:	inc    DWORD PTR [rbx]
   14000255b:	lea    rdi,[rax+rdi*8]
   14000255f:	jmp    0x14000258e
   140002561:	movsxd rdi,esi
   140002564:	cmp    esi,r13d
   140002567:	jne    0x140002584
   140002569:	mov    edx,r12d
   14000256c:	lea    rcx,[rsp+0x50]
   140002571:	call   0x140013420
   140002576:	mov    r13d,DWORD PTR [rsp+0x58]
   14000257b:	mov    r15,QWORD PTR [rsp+0x50]
   140002580:	mov    esi,DWORD PTR [rsp+0x48]
   140002584:	inc    esi
   140002586:	lea    rdi,[r15+rdi*8]
   14000258a:	mov    DWORD PTR [rsp+0x48],esi
   14000258e:	test   rdi,rdi
   140002591:	je     0x1400025ab
   140002593:	lea    rcx,[rsp+0x40]
   140002598:	mov    QWORD PTR [rdi],r14
   14000259b:	call   0x14001b050
   1400025a0:	mov    rdx,rax
   1400025a3:	mov    rcx,rdi
   1400025a6:	call   0x14001b3a0
   1400025ab:	cmp    QWORD PTR [rsp+0x40],r14
   1400025b0:	je     0x1400025bc
   1400025b2:	lea    rcx,[rsp+0x40]
   1400025b7:	call   0x14001b030
   1400025bc:	mov    rcx,QWORD PTR [rip+0x44bc5]        # 0x140047188
   1400025c3:	lea    rdx,[rsp+0x68]
   1400025c8:	mov    rax,QWORD PTR [rcx]
   1400025cb:	call   QWORD PTR [rax+0x138]
   1400025d1:	mov    r14,rax
   1400025d4:	test   rax,rax
   1400025d7:	jne    0x140002407
   1400025dd:	mov    eax,DWORD PTR [rsp+0x5c]
   1400025e1:	mov    DWORD PTR [rsp+0x40],eax
   1400025e5:	mov    QWORD PTR [rsp+0x78],r15
   1400025ea:	cmp    DWORD PTR [rbx],0x0
   1400025ed:	jne    0x14000264c
   1400025ef:	lea    edi,[rsi-0x1]
   1400025f2:	test   edi,edi
   1400025f4:	js     0x14000264c
   1400025f6:	movsxd rax,edi
   1400025f9:	lea    r15,[r15+rax*8]
   1400025fd:	nop    DWORD PTR [rax]
   140002600:	movsxd r14,DWORD PTR [rbx]
   140002603:	cmp    r14d,DWORD PTR [rbx+0x10]
   140002607:	jne    0x140002615
   140002609:	mov    edx,r12d
   14000260c:	lea    rcx,[rbx+0x8]
   140002610:	call   0x140013420
   140002615:	mov    rax,QWORD PTR [rbx+0x8]
   140002619:	inc    DWORD PTR [rbx]
   14000261b:	lea    r14,[rax+r14*8]
   14000261f:	test   r14,r14
   140002622:	je     0x14000263e
   140002624:	mov    rcx,r15
   140002627:	mov    QWORD PTR [r14],0x0
   14000262e:	call   0x14001b050
   140002633:	mov    rdx,rax
   140002636:	mov    rcx,r14
   140002639:	call   0x14001b3a0
   14000263e:	sub    r15,0x8
   140002642:	sub    edi,r12d
   140002645:	jns    0x140002600
   140002647:	mov    r15,QWORD PTR [rsp+0x78]
   14000264c:	mov    rcx,QWORD PTR [rip+0x44b35]        # 0x140047188
   140002653:	lea    rdx,[rsp+0x68]
   140002658:	mov    rax,QWORD PTR [rcx]
   14000265b:	call   QWORD PTR [rax+0x148]
   140002661:	mov    rcx,QWORD PTR [rsp+0x68]
   140002666:	test   rcx,rcx
   140002669:	je     0x140002679
   14000266b:	mov    rax,QWORD PTR [rcx]
   14000266e:	lea    rdx,[rsp+0x68]
   140002673:	call   QWORD PTR [rax+0x148]
   140002679:	lea    eax,[rsi-0x1]
   14000267c:	xorps  xmm0,xmm0
   14000267f:	movsxd rdi,eax
   140002682:	movdqu XMMWORD PTR [rsp+0x68],xmm0
   140002688:	test   eax,eax
   14000268a:	js     0x1400026a7
   14000268c:	lea    rbx,[r15+rdi*8]
   140002690:	cmp    QWORD PTR [rbx],0x0
   140002694:	je     0x14000269e
   140002696:	mov    rcx,rbx
   140002699:	call   0x14001b030
   14000269e:	sub    rbx,0x8
   1400026a2:	sub    rdi,r12
   1400026a5:	jns    0x140002690
   1400026a7:	mov    ebx,DWORD PTR [rsp+0x40]
   1400026ab:	and    ebx,0xc0000000
   1400026b1:	jne    0x1400026ce
   1400026b3:	test   r15,r15
   1400026b6:	je     0x1400026ce
   1400026b8:	mov    rax,QWORD PTR [rip+0x2fcd1]        # 0x140032390
   1400026bf:	mov    rdx,r15
   1400026c2:	mov    rcx,QWORD PTR [rax]
   1400026c5:	mov    rax,QWORD PTR [rcx]
   1400026c8:	call   QWORD PTR [rax+0x28]
   1400026cb:	xor    r15d,r15d
   1400026ce:	test   ebx,ebx
   1400026d0:	jne    0x1400026ea
   1400026d2:	test   r15,r15
   1400026d5:	je     0x1400026ea
   1400026d7:	mov    rdx,r15
   1400026da:	mov    rax,QWORD PTR [rip+0x2fcaf]        # 0x140032390
   1400026e1:	mov    rcx,QWORD PTR [rax]
   1400026e4:	mov    rax,QWORD PTR [rcx]
   1400026e7:	call   QWORD PTR [rax+0x28]
   1400026ea:	lea    r11,[rsp+0x6e0]
   1400026f2:	mov    rbx,QWORD PTR [r11+0x30]
   1400026f6:	mov    rsi,QWORD PTR [r11+0x38]
   1400026fa:	mov    rdi,QWORD PTR [r11+0x48]
   1400026fe:	mov    rsp,r11
   140002701:	pop    r15
   140002703:	pop    r14
   140002705:	pop    r13
   140002707:	pop    r12
   140002709:	pop    rbp
   14000270a:	ret    
   14000270b:	int3   
   14000270c:	int3   
   14000270d:	int3   
   14000270e:	int3   
   14000270f:	int3   
   140002710:	test   rdx,rdx
   140002713:	je     0x140002bd7
   140002719:	mov    rax,rsp
   14000271c:	push   rbp
   14000271d:	push   rbx
   14000271e:	push   r12
   140002720:	lea    rbp,[rax-0x5d8]
   140002727:	sub    rsp,0x6c0
   14000272e:	mov    QWORD PTR [rax-0x20],rdi
   140002732:	mov    rcx,rdx
   140002735:	mov    QWORD PTR [rax-0x38],r15
   140002739:	mov    r12d,r8d
   14000273c:	mov    rbx,rdx
   14000273f:	call   0x140004a60
   140002744:	mov    rcx,QWORD PTR [rip+0x44a3d]        # 0x140047188
   14000274b:	lea    r9,[rbp+0x190]
   140002752:	xor    r8d,r8d
   140002755:	mov    DWORD PTR [rsp+0x20],0x410
   14000275d:	lea    rdx,[rip+0x30d88]        # 0x1400334ec
   140002764:	mov    rax,QWORD PTR [rcx]
   140002767:	call   QWORD PTR [rax+0xc0]
   14000276d:	xor    edi,edi
   14000276f:	lea    r8,[rsp+0x30]
   140002774:	lea    rdx,[rip+0x310c1]        # 0x14003383c
   14000277b:	mov    DWORD PTR [rsp+0x30],edi
   14000277f:	lea    rcx,[rbp+0x190]
   140002786:	mov    QWORD PTR [rsp+0x38],rdi
   14000278b:	mov    QWORD PTR [rsp+0x40],rdi
   140002790:	call   QWORD PTR [rip+0x2fe3a]        # 0x1400325d0
   140002796:	mov    r15d,edi
   140002799:	mov    rdx,QWORD PTR [rsp+0x38]
   14000279e:	cmp    DWORD PTR [rsp+0x30],edi
   1400027a2:	jle    0x140002b6c
   1400027a8:	mov    QWORD PTR [rsp+0x6e0],rsi
   1400027b0:	lea    rax,[rip+0x31251]        # 0x140033a08
   1400027b7:	mov    QWORD PTR [rsp+0x6b0],r13
   1400027bf:	mov    r13d,r12d
   1400027c2:	and    r13d,0x2
   1400027c6:	mov    QWORD PTR [rsp+0x6a8],r14
   1400027ce:	and    r12d,0x1
   1400027d2:	mov    r14d,edi
   1400027d5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400027e0:	mov    rsi,QWORD PTR [r14+rdx*1]
   1400027e4:	test   r13d,r13d
   1400027e7:	je     0x14000299d
   1400027ed:	mov    r9d,0x104
   1400027f3:	lea    r8,[rsp+0x70]
   1400027f8:	mov    rdx,rax
   1400027fb:	mov    rcx,rsi
   1400027fe:	call   QWORD PTR [rip+0x2fcfc]        # 0x140032500
   140002804:	mov    r9d,0x104
   14000280a:	lea    r8,[rsp+0x70]
   14000280f:	lea    rdx,[rip+0x311fa]        # 0x140033a10
   140002816:	lea    rcx,[rsp+0x70]
   14000281b:	call   QWORD PTR [rip+0x2fcdf]        # 0x140032500
   140002821:	mov    rcx,QWORD PTR [rip+0x44960]        # 0x140047188
   140002828:	lea    r8,[rsp+0x60]
   14000282d:	xorps  xmm0,xmm0
   140002830:	lea    rdx,[rsp+0x70]
   140002835:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14000283b:	mov    rax,QWORD PTR [rcx]
   14000283e:	call   QWORD PTR [rax+0x130]
   140002844:	mov    rdi,rax
   140002847:	test   rax,rax
   14000284a:	je     0x140002962
   140002850:	cmp    BYTE PTR [rdi],0x2e
   140002853:	je     0x140002941
   140002859:	mov    rcx,rdi
   14000285c:	call   QWORD PTR [rip+0x2fc8e]        # 0x1400324f0
   140002862:	mov    rcx,rax
   140002865:	lea    rdx,[rip+0x30fcc]        # 0x140033838
   14000286c:	call   QWORD PTR [rip+0x2fcee]        # 0x140032560
   140002872:	test   eax,eax
   140002874:	jne    0x140002941
   14000287a:	mov    rcx,rdi
   14000287d:	call   QWORD PTR [rip+0x2fc85]        # 0x140032508
   140002883:	mov    r8d,0x104
   140002889:	lea    rdx,[rbp+0x80]
   140002890:	mov    rcx,rax
   140002893:	call   QWORD PTR [rip+0x2fc87]        # 0x140032520
   140002899:	lea    rdx,[rbp+0x80]
   1400028a0:	mov    QWORD PTR [rbp+0x5e8],0x0
   1400028ab:	lea    rcx,[rbp+0x5e8]
   1400028b2:	call   0x14001b3a0
   1400028b7:	xor    edi,edi
   1400028b9:	cmp    DWORD PTR [rbx],edi
   1400028bb:	jle    0x1400028e8
   1400028bd:	nop    DWORD PTR [rax]
   1400028c0:	mov    rax,QWORD PTR [rbx+0x8]
   1400028c4:	lea    rdx,[rbp+0x5e8]
   1400028cb:	movsxd rcx,edi
   1400028ce:	lea    rcx,[rax+rcx*8]
   1400028d2:	call   0x14001ab20
   1400028d7:	test   al,al
   1400028d9:	jne    0x1400028e3
   1400028db:	inc    edi
   1400028dd:	cmp    edi,DWORD PTR [rbx]
   1400028df:	jl     0x1400028c0
   1400028e1:	jmp    0x1400028e8
   1400028e3:	cmp    edi,0xffffffff
   1400028e6:	jne    0x14000292b
   1400028e8:	movsxd rdi,DWORD PTR [rbx]
   1400028eb:	cmp    edi,DWORD PTR [rbx+0x10]
   1400028ee:	jne    0x1400028fe
   1400028f0:	lea    rcx,[rbx+0x8]
   1400028f4:	mov    edx,0x1
   1400028f9:	call   0x140013420
   1400028fe:	mov    rax,QWORD PTR [rbx+0x8]
   140002902:	inc    DWORD PTR [rbx]
   140002904:	lea    rdi,[rax+rdi*8]
   140002908:	test   rdi,rdi
   14000290b:	je     0x14000292b
   14000290d:	lea    rcx,[rbp+0x5e8]
   140002914:	mov    QWORD PTR [rdi],0x0
   14000291b:	call   0x14001b050
   140002920:	mov    rdx,rax
   140002923:	mov    rcx,rdi
   140002926:	call   0x14001b3a0
   14000292b:	cmp    QWORD PTR [rbp+0x5e8],0x0
   140002933:	je     0x140002941
   140002935:	lea    rcx,[rbp+0x5e8]
   14000293c:	call   0x14001b030
   140002941:	mov    rcx,QWORD PTR [rip+0x44840]        # 0x140047188
   140002948:	lea    rdx,[rsp+0x60]
   14000294d:	mov    rax,QWORD PTR [rcx]
   140002950:	call   QWORD PTR [rax+0x138]
   140002956:	mov    rdi,rax
   140002959:	test   rax,rax
   14000295c:	jne    0x140002850
   140002962:	mov    rcx,QWORD PTR [rip+0x4481f]        # 0x140047188
   140002969:	lea    rdx,[rsp+0x60]
   14000296e:	mov    rax,QWORD PTR [rcx]
   140002971:	call   QWORD PTR [rax+0x148]
   140002977:	mov    rcx,QWORD PTR [rsp+0x60]
   14000297c:	test   rcx,rcx
   14000297f:	je     0x14000298f
   140002981:	mov    rax,QWORD PTR [rcx]
   140002984:	lea    rdx,[rsp+0x60]
   140002989:	call   QWORD PTR [rax+0x148]
   14000298f:	mov    rdx,QWORD PTR [rsp+0x38]
   140002994:	xorps  xmm0,xmm0
   140002997:	movdqu XMMWORD PTR [rsp+0x60],xmm0
   14000299d:	test   r12d,r12d
   1400029a0:	je     0x140002b39
   1400029a6:	mov    r9d,0x104
   1400029ac:	lea    r8,[rsp+0x70]
   1400029b1:	lea    rdx,[rip+0x31058]        # 0x140033a10
   1400029b8:	mov    rcx,rsi
   1400029bb:	call   QWORD PTR [rip+0x2fb3f]        # 0x140032500
   1400029c1:	mov    rcx,QWORD PTR [rip+0x447c0]        # 0x140047188
   1400029c8:	lea    r8,[rsp+0x50]
   1400029cd:	xorps  xmm0,xmm0
   1400029d0:	lea    rdx,[rsp+0x70]
   1400029d5:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   1400029db:	mov    rax,QWORD PTR [rcx]
   1400029de:	call   QWORD PTR [rax+0x130]
   1400029e4:	mov    rdi,rax
   1400029e7:	test   rax,rax
   1400029ea:	je     0x140002afe
   1400029f0:	cmp    BYTE PTR [rdi],0x2e
   1400029f3:	je     0x140002add
   1400029f9:	xor    esi,esi
   1400029fb:	lea    rdx,[rip+0x31006]        # 0x140033a08
   140002a02:	mov    ecx,esi
   140002a04:	nop    DWORD PTR [rax+0x0]
   140002a08:	nop    DWORD PTR [rax+rax*1+0x0]
   140002a10:	movzx  eax,BYTE PTR [rdi+rcx*1]
   140002a14:	inc    rcx
   140002a17:	cmp    al,BYTE PTR [rdx+rcx*1-0x1]
   140002a1b:	jne    0x140002a28
   140002a1d:	cmp    rcx,0x5
   140002a21:	jne    0x140002a10
   140002a23:	jmp    0x140002add
   140002a28:	mov    rcx,QWORD PTR [rip+0x44759]        # 0x140047188
   140002a2f:	lea    rdx,[rsp+0x50]
   140002a34:	mov    rax,QWORD PTR [rcx]
   140002a37:	call   QWORD PTR [rax+0x140]
   140002a3d:	test   al,al
   140002a3f:	je     0x140002add
   140002a45:	mov    rdx,rdi
   140002a48:	mov    QWORD PTR [rbp+0x5f8],rsi
   140002a4f:	lea    rcx,[rbp+0x5f8]
   140002a56:	call   0x14001b3a0
   140002a5b:	mov    edi,esi
   140002a5d:	cmp    DWORD PTR [rbx],esi
   140002a5f:	jle    0x140002a89
   140002a61:	mov    rax,QWORD PTR [rbx+0x8]
   140002a65:	lea    rdx,[rbp+0x5f8]
   140002a6c:	movsxd rcx,edi
   140002a6f:	lea    rcx,[rax+rcx*8]
   140002a73:	call   0x14001ab20
   140002a78:	test   al,al
   140002a7a:	jne    0x140002a84
   140002a7c:	inc    edi
   140002a7e:	cmp    edi,DWORD PTR [rbx]
   140002a80:	jl     0x140002a61
   140002a82:	jmp    0x140002a89
   140002a84:	cmp    edi,0xffffffff
   140002a87:	jne    0x140002ac8
   140002a89:	movsxd rdi,DWORD PTR [rbx]
   140002a8c:	cmp    edi,DWORD PTR [rbx+0x10]
   140002a8f:	jne    0x140002a9f
   140002a91:	lea    rcx,[rbx+0x8]
   140002a95:	mov    edx,0x1
   140002a9a:	call   0x140013420
   140002a9f:	mov    rax,QWORD PTR [rbx+0x8]
   140002aa3:	inc    DWORD PTR [rbx]
   140002aa5:	lea    rdi,[rax+rdi*8]
   140002aa9:	test   rdi,rdi
   140002aac:	je     0x140002ac8
   140002aae:	lea    rcx,[rbp+0x5f8]
   140002ab5:	mov    QWORD PTR [rdi],rsi
   140002ab8:	call   0x14001b050
   140002abd:	mov    rdx,rax
   140002ac0:	mov    rcx,rdi
   140002ac3:	call   0x14001b3a0
   140002ac8:	cmp    QWORD PTR [rbp+0x5f8],rsi
   140002acf:	je     0x140002add
   140002ad1:	lea    rcx,[rbp+0x5f8]
   140002ad8:	call   0x14001b030
   140002add:	mov    rcx,QWORD PTR [rip+0x446a4]        # 0x140047188
   140002ae4:	lea    rdx,[rsp+0x50]
   140002ae9:	mov    rax,QWORD PTR [rcx]
   140002aec:	call   QWORD PTR [rax+0x138]
   140002af2:	mov    rdi,rax
   140002af5:	test   rax,rax
   140002af8:	jne    0x1400029f0
   140002afe:	mov    rcx,QWORD PTR [rip+0x44683]        # 0x140047188
   140002b05:	lea    rdx,[rsp+0x50]
   140002b0a:	mov    rax,QWORD PTR [rcx]
   140002b0d:	call   QWORD PTR [rax+0x148]
   140002b13:	mov    rcx,QWORD PTR [rsp+0x50]
   140002b18:	test   rcx,rcx
   140002b1b:	je     0x140002b2b
   140002b1d:	mov    rax,QWORD PTR [rcx]
   140002b20:	lea    rdx,[rsp+0x50]
   140002b25:	call   QWORD PTR [rax+0x148]
   140002b2b:	mov    rdx,QWORD PTR [rsp+0x38]
   140002b30:	xorps  xmm0,xmm0
   140002b33:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140002b39:	inc    r15d
   140002b3c:	lea    rax,[rip+0x30ec5]        # 0x140033a08
   140002b43:	add    r14,0x8
   140002b47:	cmp    r15d,DWORD PTR [rsp+0x30]
   140002b4c:	jl     0x1400027e0
   140002b52:	mov    r14,QWORD PTR [rsp+0x6a8]
   140002b5a:	xor    edi,edi
   140002b5c:	mov    r13,QWORD PTR [rsp+0x6b0]
   140002b64:	mov    rsi,QWORD PTR [rsp+0x6e0]
   140002b6c:	mov    eax,DWORD PTR [rsp+0x44]
   140002b70:	mov    r15,QWORD PTR [rsp+0x6a0]
   140002b78:	mov    DWORD PTR [rsp+0x30],edi
   140002b7c:	test   eax,0xc0000000
   140002b81:	jne    0x140002ba8
   140002b83:	test   rdx,rdx
   140002b86:	je     0x140002ba4
   140002b88:	mov    rax,QWORD PTR [rip+0x2f801]        # 0x140032390
   140002b8f:	mov    rcx,QWORD PTR [rax]
   140002b92:	mov    rax,QWORD PTR [rcx]
   140002b95:	call   QWORD PTR [rax+0x28]
   140002b98:	mov    eax,DWORD PTR [rsp+0x44]
   140002b9c:	mov    rdx,rdi
   140002b9f:	mov    QWORD PTR [rsp+0x38],rdx
   140002ba4:	mov    DWORD PTR [rsp+0x40],edi
   140002ba8:	mov    rdi,QWORD PTR [rsp+0x6b8]
   140002bb0:	test   eax,0xc0000000
   140002bb5:	jne    0x140002bcc
   140002bb7:	test   rdx,rdx
   140002bba:	je     0x140002bcc
   140002bbc:	mov    rax,QWORD PTR [rip+0x2f7cd]        # 0x140032390
   140002bc3:	mov    rcx,QWORD PTR [rax]
   140002bc6:	mov    rax,QWORD PTR [rcx]
   140002bc9:	call   QWORD PTR [rax+0x28]
   140002bcc:	add    rsp,0x6c0
   140002bd3:	pop    r12
   140002bd5:	pop    rbx
   140002bd6:	pop    rbp
   140002bd7:	ret    
   140002bd8:	int3   
   140002bd9:	int3   
   140002bda:	int3   
   140002bdb:	int3   
   140002bdc:	int3   
   140002bdd:	int3   
   140002bde:	int3   
   140002bdf:	int3   
   140002be0:	mov    rcx,QWORD PTR [rcx+0x8]
   140002be4:	jmp    0x140002710
   140002be9:	int3   
   140002bea:	int3   
   140002beb:	int3   
   140002bec:	int3   
   140002bed:	int3   
   140002bee:	int3   
   140002bef:	int3   
   140002bf0:	mov    eax,0x2
   140002bf5:	ret    
   140002bf6:	int3   
   140002bf7:	int3   
   140002bf8:	int3   
   140002bf9:	int3   
   140002bfa:	int3   
   140002bfb:	int3   
   140002bfc:	int3   
   140002bfd:	int3   
   140002bfe:	int3   
   140002bff:	int3   
   140002c00:	mov    QWORD PTR [rdx],0x0
   140002c07:	mov    rax,rdx
   140002c0a:	ret    
   140002c0b:	int3   
   140002c0c:	int3   
   140002c0d:	int3   
   140002c0e:	int3   
   140002c0f:	int3   
   140002c10:	rex push rbx
   140002c12:	sub    rsp,0x20
   140002c16:	mov    rcx,QWORD PTR [rcx+0x8]
   140002c1a:	mov    rbx,rdx
   140002c1d:	mov    rax,QWORD PTR [rcx]
   140002c20:	call   QWORD PTR [rax+0x10]
   140002c23:	mov    rax,rbx
   140002c26:	add    rsp,0x20
   140002c2a:	pop    rbx
   140002c2b:	ret    
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	rex push rbx
   140002c32:	push   rsi
   140002c33:	push   rdi
   140002c34:	sub    rsp,0x20
   140002c38:	lea    rsi,[rcx+0x200]
   140002c3f:	mov    QWORD PTR [rdx],0x0
   140002c46:	add    rcx,0x1f8
   140002c4d:	mov    rdi,rdx
   140002c50:	call   0x14001b050
   140002c55:	mov    rdx,rax
   140002c58:	mov    rcx,rdi
   140002c5b:	call   0x14001b3a0
   140002c60:	mov    rcx,rsi
   140002c63:	call   0x14001b050
   140002c68:	test   rax,rax
   140002c6b:	je     0x140002d22
   140002c71:	lea    rdx,[rsp+0x40]
   140002c76:	mov    rcx,rdi
   140002c79:	call   0x14001b060
   140002c7e:	lea    rcx,[rsp+0x40]
   140002c83:	call   0x14001b050
   140002c88:	test   rax,rax
   140002c8b:	je     0x140002cfd
   140002c8d:	lea    rdx,[rsp+0x48]
   140002c92:	mov    QWORD PTR [rsp+0x50],rbp
   140002c97:	mov    rcx,rdi
   140002c9a:	call   0x14001b640
   140002c9f:	cmp    QWORD PTR [rdi],0x0
   140002ca3:	mov    rbx,rax
   140002ca6:	mov    rbp,QWORD PTR [rax]
   140002ca9:	je     0x140002cb3
   140002cab:	mov    rcx,rdi
   140002cae:	call   0x14001b030
   140002cb3:	mov    QWORD PTR [rdi],rbp
   140002cb6:	mov    rbp,QWORD PTR [rsp+0x50]
   140002cbb:	mov    QWORD PTR [rbx],0x0
   140002cc2:	cmp    QWORD PTR [rsp+0x48],0x0
   140002cc8:	je     0x140002cd4
   140002cca:	lea    rcx,[rsp+0x48]
   140002ccf:	call   0x14001b030
   140002cd4:	mov    rcx,rsi
   140002cd7:	call   0x14001b050
   140002cdc:	mov    rdx,rax
   140002cdf:	mov    rcx,rdi
   140002ce2:	call   0x14001ad40
   140002ce7:	lea    rdx,[rip+0x30526]        # 0x140033214
   140002cee:	mov    rcx,rdi
   140002cf1:	call   0x14001ad40
   140002cf6:	lea    rcx,[rsp+0x40]
   140002cfb:	jmp    0x140002d00
   140002cfd:	mov    rcx,rsi
   140002d00:	call   0x14001b050
   140002d05:	mov    rdx,rax
   140002d08:	mov    rcx,rdi
   140002d0b:	call   0x14001ad40
   140002d10:	cmp    QWORD PTR [rsp+0x40],0x0
   140002d16:	je     0x140002d22
   140002d18:	lea    rcx,[rsp+0x40]
   140002d1d:	call   0x14001b030
   140002d22:	mov    rax,rdi
   140002d25:	add    rsp,0x20
   140002d29:	pop    rdi
   140002d2a:	pop    rsi
   140002d2b:	pop    rbx
   140002d2c:	ret    
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    rcx,QWORD PTR [rcx+0x8]
   140002d34:	add    rcx,0x128
   140002d3b:	mov    rax,QWORD PTR [rcx]
   140002d3e:	test   rax,rax
   140002d41:	je     0x140002d4c
   140002d43:	cmp    BYTE PTR [rax],0x0
   140002d46:	jne    0x14001b050
   140002d4c:	xor    eax,eax
   140002d4e:	ret    
   140002d4f:	int3   
   140002d50:	mov    eax,DWORD PTR [rip+0x44312]        # 0x140047068
   140002d56:	test   al,0x1
   140002d58:	jne    0x140002d8a
   140002d5a:	or     eax,0x1
   140002d5d:	xorps  xmm0,xmm0
   140002d60:	mov    DWORD PTR [rip+0x44302],eax        # 0x140047068
   140002d66:	lea    rax,[rip+0x2fe5b]        # 0x140032bc8
   140002d6d:	mov    QWORD PTR [rip+0x442d4],rax        # 0x140047048
   140002d74:	lea    rax,[rip+0x2fe3d]        # 0x140032bb8
   140002d7b:	mov    QWORD PTR [rip+0x442ce],rax        # 0x140047050
   140002d82:	movdqu XMMWORD PTR [rip+0x442ce],xmm0        # 0x140047058
   140002d8a:	lea    rax,[rip+0x442b7]        # 0x140047048
   140002d91:	ret    
   140002d92:	int3   
   140002d93:	int3   
   140002d94:	int3   
   140002d95:	int3   
   140002d96:	int3   
   140002d97:	int3   
   140002d98:	int3   
   140002d99:	int3   
   140002d9a:	int3   
   140002d9b:	int3   
   140002d9c:	int3   
   140002d9d:	int3   
   140002d9e:	int3   
   140002d9f:	int3   
   140002da0:	mov    rcx,QWORD PTR [rcx+0x8]
   140002da4:	add    rcx,0x118
   140002dab:	jmp    0x14001b050
   140002db0:	mov    QWORD PTR [rsp+0x8],rbx
   140002db5:	mov    QWORD PTR [rsp+0x10],rsi
   140002dba:	push   rdi
   140002dbb:	sub    rsp,0x540
   140002dc2:	mov    rsi,r8
   140002dc5:	mov    rbx,rdx
   140002dc8:	mov    rdi,rcx
   140002dcb:	call   QWORD PTR [rip+0x2f6e7]        # 0x1400324b8
   140002dd1:	lea    r9,[rsp+0x30]
   140002dd6:	mov    QWORD PTR [rsp+0x20],0x104
   140002ddf:	lea    r8,[rip+0x2f9ba]        # 0x1400327a0
   140002de6:	mov    rcx,rax
   140002de9:	lea    rdx,[rip+0x30c58]        # 0x140033a48
   140002df0:	mov    r10,QWORD PTR [rax]
   140002df3:	call   QWORD PTR [r10+0x50]
   140002df7:	cmp    BYTE PTR [rsp+0x30],0x0
   140002dfc:	je     0x140002e05
   140002dfe:	lea    rdx,[rsp+0x30]
   140002e03:	jmp    0x140002e4c
   140002e05:	mov    rdi,QWORD PTR [rdi+0x1f0]
   140002e0c:	test   rdi,rdi
   140002e0f:	jne    0x140002e16
   140002e11:	mov    rdx,rsi
   140002e14:	jmp    0x140002e4c
   140002e16:	xor    edx,edx
   140002e18:	lea    rcx,[rsp+0x140]
   140002e20:	mov    r8d,0x400
   140002e26:	call   0x1400277b0
   140002e2b:	mov    rax,QWORD PTR [rdi]
   140002e2e:	lea    r8,[rsp+0x140]
   140002e36:	mov    r9d,0x400
   140002e3c:	mov    rdx,rsi
   140002e3f:	mov    rcx,rdi
   140002e42:	call   QWORD PTR [rax]
   140002e44:	lea    rdx,[rsp+0x140]
   140002e4c:	mov    rcx,rbx
   140002e4f:	mov    QWORD PTR [rbx],0x0
   140002e56:	call   0x14001b3a0
   140002e5b:	lea    r11,[rsp+0x540]
   140002e63:	mov    rax,rbx
   140002e66:	mov    rbx,QWORD PTR [r11+0x10]
   140002e6a:	mov    rsi,QWORD PTR [r11+0x18]
   140002e6e:	mov    rsp,r11
   140002e71:	pop    rdi
   140002e72:	ret    
   140002e73:	int3   
   140002e74:	int3   
   140002e75:	int3   
   140002e76:	int3   
   140002e77:	int3   
   140002e78:	int3   
   140002e79:	int3   
   140002e7a:	int3   
   140002e7b:	int3   
   140002e7c:	int3   
   140002e7d:	int3   
   140002e7e:	int3   
   140002e7f:	int3   
   140002e80:	rex push rbx
   140002e82:	sub    rsp,0x20
   140002e86:	mov    rcx,QWORD PTR [rcx+0x8]
   140002e8a:	mov    rbx,rdx
   140002e8d:	call   0x140002db0
   140002e92:	mov    rax,rbx
   140002e95:	add    rsp,0x20
   140002e99:	pop    rbx
   140002e9a:	ret    
   140002e9b:	int3   
   140002e9c:	int3   
   140002e9d:	int3   
   140002e9e:	int3   
   140002e9f:	int3   
   140002ea0:	mov    rax,QWORD PTR [rcx+0x8]
   140002ea4:	mov    rax,QWORD PTR [rax+0xe0]
   140002eab:	ret    
   140002eac:	int3   
   140002ead:	int3   
   140002eae:	int3   
   140002eaf:	int3   
   140002eb0:	mov    rdx,QWORD PTR [rcx+0x8]
   140002eb4:	xor    eax,eax
   140002eb6:	cmp    BYTE PTR [rdx+0xfb],al
   140002ebc:	je     0x140002ec9
   140002ebe:	cmp    BYTE PTR [rdx+0xfc],al
   140002ec4:	setne  al
   140002ec7:	inc    eax
   140002ec9:	ret    
   140002eca:	int3   
   140002ecb:	int3   
   140002ecc:	int3   
   140002ecd:	int3   
   140002ece:	int3   
   140002ecf:	int3   
   140002ed0:	mov    QWORD PTR [rsp+0x8],rcx
   140002ed5:	push   rbx
   140002ed6:	sub    rsp,0x20
   140002eda:	mov    rcx,rdx
   140002edd:	lea    r8,[rsp+0x30]
   140002ee2:	xor    ebx,ebx
   140002ee4:	lea    rdx,[rip+0x2f8c9]        # 0x1400327b4
   140002eeb:	mov    QWORD PTR [rsp+0x30],rbx
   140002ef0:	call   QWORD PTR [rip+0x2f642]        # 0x140032538
   140002ef6:	test   eax,eax
   140002ef8:	cmovne rbx,QWORD PTR [rsp+0x30]
   140002efe:	mov    rax,rbx
   140002f01:	add    rsp,0x20
   140002f05:	pop    rbx
   140002f06:	ret    
   140002f07:	int3   
   140002f08:	int3   
   140002f09:	int3   
   140002f0a:	int3   
   140002f0b:	int3   
   140002f0c:	int3   
   140002f0d:	int3   
   140002f0e:	int3   
   140002f0f:	int3   
   140002f10:	mov    rcx,QWORD PTR [rcx+0x8]
   140002f14:	jmp    0x1400095f0
   140002f19:	int3   
   140002f1a:	int3   
   140002f1b:	int3   
   140002f1c:	int3   
   140002f1d:	int3   
   140002f1e:	int3   
   140002f1f:	int3   
   140002f20:	mov    rax,QWORD PTR [rcx+0x8]
   140002f24:	lea    rcx,[rax+0x100]
   140002f2b:	cmp    edx,0x1
   140002f2e:	jne    0x140002f45
   140002f30:	add    rax,0x108
   140002f36:	mov    rdx,QWORD PTR [rax]
   140002f39:	test   rdx,rdx
   140002f3c:	je     0x140002f45
   140002f3e:	cmp    BYTE PTR [rdx],0x0
   140002f41:	cmovne rcx,rax
   140002f45:	mov    rax,QWORD PTR [rcx]
   140002f48:	test   rax,rax
   140002f4b:	je     0x140002f56
   140002f4d:	cmp    BYTE PTR [rax],0x0
   140002f50:	jne    0x14001b050
   140002f56:	xor    eax,eax
   140002f58:	ret    
   140002f59:	int3   
   140002f5a:	int3   
   140002f5b:	int3   
   140002f5c:	int3   
   140002f5d:	int3   
   140002f5e:	int3   
   140002f5f:	int3   
   140002f60:	mov    rcx,QWORD PTR [rcx+0x8]
   140002f64:	add    rcx,0x120
   140002f6b:	mov    rax,QWORD PTR [rcx]
   140002f6e:	test   rax,rax
   140002f71:	je     0x140002f7c
   140002f73:	cmp    BYTE PTR [rax],0x0
   140002f76:	jne    0x14001b050
   140002f7c:	xor    eax,eax
   140002f7e:	ret    
   140002f7f:	int3   
   140002f80:	mov    rcx,QWORD PTR [rcx+0x8]
   140002f84:	add    rcx,0x110
   140002f8b:	mov    rax,QWORD PTR [rcx]
   140002f8e:	test   rax,rax
   140002f91:	je     0x140002f9c
   140002f93:	cmp    BYTE PTR [rax],0x0
   140002f96:	jne    0x14001b050
   140002f9c:	xor    eax,eax
   140002f9e:	ret    
   140002f9f:	int3   
   140002fa0:	mov    QWORD PTR [rsp+0x18],rbx
   140002fa5:	mov    QWORD PTR [rsp+0x10],rdx
   140002faa:	push   rbp
   140002fab:	push   rsi
   140002fac:	push   rdi
   140002fad:	push   r12
   140002faf:	push   r13
   140002fb1:	push   r14
   140002fb3:	push   r15
   140002fb5:	sub    rsp,0x20
   140002fb9:	xor    esi,esi
   140002fbb:	mov    r15,rcx
   140002fbe:	mov    edi,esi
   140002fc0:	cmp    si,WORD PTR [rcx+0x182]
   140002fc7:	jae    0x14000305d
   140002fcd:	movsxd r13,r8d
   140002fd0:	mov    ebx,esi
   140002fd2:	cmp    rbx,r13
   140002fd5:	jge    0x14000305d
   140002fdb:	lea    rcx,[r15+0x168]
   140002fe2:	mov    WORD PTR [rsp+0x60],di
   140002fe7:	lea    rdx,[rsp+0x60]
   140002fec:	call   0x14001db60
   140002ff1:	lea    rcx,[r15+0x168]
   140002ff8:	mov    r8,rax
   140002ffb:	lea    rdx,[rsp+0x78]
   140003000:	mov    r12,rax
   140003003:	call   0x14001c980
   140003008:	movzx  ebp,WORD PTR [rsp+0x78]
   14000300d:	mov    edx,DWORD PTR [r15+0x150]
   140003014:	cmp    edx,ebp
   140003016:	jg     0x140003030
   140003018:	lea    r8d,[rbp+0x1]
   14000301c:	cmp    edx,r8d
   14000301f:	jge    0x140003030
   140003021:	sub    r8d,edx
   140003024:	lea    rcx,[r15+0x150]
   14000302b:	call   0x1400038c0
   140003030:	mov    rax,QWORD PTR [r15+0x158]
   140003037:	cmp    DWORD PTR [rax+rbp*4],0x0
   14000303b:	jle    0x14000304b
   14000303d:	mov    rax,QWORD PTR [rsp+0x68]
   140003042:	inc    esi
   140003044:	mov    QWORD PTR [rax+rbx*8],r12
   140003048:	inc    rbx
   14000304b:	movzx  eax,WORD PTR [r15+0x182]
   140003053:	inc    edi
   140003055:	cmp    edi,eax
   140003057:	jl     0x140002fd2
   14000305d:	mov    eax,esi
   14000305f:	mov    rbx,QWORD PTR [rsp+0x70]
   140003064:	add    rsp,0x20
   140003068:	pop    r15
   14000306a:	pop    r14
   14000306c:	pop    r13
   14000306e:	pop    r12
   140003070:	pop    rdi
   140003071:	pop    rsi
   140003072:	pop    rbp
   140003073:	ret    
   140003074:	int3   
   140003075:	int3   
   140003076:	int3   
   140003077:	int3   
   140003078:	int3   
   140003079:	int3   
   14000307a:	int3   
   14000307b:	int3   
   14000307c:	int3   
   14000307d:	int3   
   14000307e:	int3   
   14000307f:	int3   
   140003080:	rex push rbx
   140003082:	push   rbp
   140003083:	push   rdi
   140003084:	sub    rsp,0x40
   140003088:	xor    eax,eax
   14000308a:	mov    rbx,rdx
   14000308d:	mov    rbp,rcx
   140003090:	mov    edi,eax
   140003092:	cmp    ax,WORD PTR [rcx+0x182]
   140003099:	jae    0x14000318a
   14000309f:	mov    QWORD PTR [rsp+0x68],rsi
   1400030a4:	mov    QWORD PTR [rsp+0x38],r12
   1400030a9:	mov    QWORD PTR [rsp+0x30],r13
   1400030ae:	mov    QWORD PTR [rsp+0x28],r14
   1400030b3:	mov    QWORD PTR [rsp+0x20],r15
   1400030b8:	nop    DWORD PTR [rax+rax*1+0x0]
   1400030c0:	lea    rdx,[rsp+0x60]
   1400030c5:	mov    WORD PTR [rsp+0x60],di
   1400030ca:	lea    rcx,[rbp+0x168]
   1400030d1:	call   0x14001db60
   1400030d6:	mov    r8,rax
   1400030d9:	lea    rdx,[rsp+0x70]
   1400030de:	lea    rcx,[rbp+0x168]
   1400030e5:	mov    r15,rax
   1400030e8:	call   0x14001c980
   1400030ed:	movzx  esi,WORD PTR [rsp+0x70]
   1400030f2:	mov    edx,DWORD PTR [rbp+0x150]
   1400030f8:	cmp    edx,esi
   1400030fa:	jg     0x140003114
   1400030fc:	lea    r8d,[rsi+0x1]
   140003100:	cmp    edx,r8d
   140003103:	jge    0x140003114
   140003105:	sub    r8d,edx
   140003108:	lea    rcx,[rbp+0x150]
   14000310f:	call   0x1400038c0
   140003114:	mov    rax,QWORD PTR [rbp+0x158]
   14000311b:	cmp    DWORD PTR [rax+rsi*4],0x0
   14000311f:	jle    0x140003160
   140003121:	movsxd rsi,DWORD PTR [rbx]
   140003124:	cmp    esi,DWORD PTR [rbx+0x10]
   140003127:	jne    0x140003137
   140003129:	lea    rcx,[rbx+0x8]
   14000312d:	mov    edx,0x1
   140003132:	call   0x140013420
   140003137:	inc    DWORD PTR [rbx]
   140003139:	lea    rdx,[rsi*8+0x0]
   140003141:	mov    rcx,QWORD PTR [rbx+0x8]
   140003145:	add    rcx,rdx
   140003148:	je     0x140003151
   14000314a:	mov    QWORD PTR [rcx],0x0
   140003151:	mov    rcx,QWORD PTR [rbx+0x8]
   140003155:	add    rcx,rdx
   140003158:	mov    rdx,r15
   14000315b:	call   0x14001b3a0
   140003160:	movzx  eax,WORD PTR [rbp+0x182]
   140003167:	inc    edi
   140003169:	cmp    edi,eax
   14000316b:	jl     0x1400030c0
   140003171:	mov    r15,QWORD PTR [rsp+0x20]
   140003176:	mov    r14,QWORD PTR [rsp+0x28]
   14000317b:	mov    r13,QWORD PTR [rsp+0x30]
   140003180:	mov    r12,QWORD PTR [rsp+0x38]
   140003185:	mov    rsi,QWORD PTR [rsp+0x68]
   14000318a:	add    rsp,0x40
   14000318e:	pop    rdi
   14000318f:	pop    rbp
   140003190:	pop    rbx
   140003191:	ret    
   140003192:	int3   
   140003193:	int3   
   140003194:	int3   
   140003195:	int3   
   140003196:	int3   
   140003197:	int3   
   140003198:	int3   
   140003199:	int3   
   14000319a:	int3   
   14000319b:	int3   
   14000319c:	int3   
   14000319d:	int3   
   14000319e:	int3   
   14000319f:	int3   
   1400031a0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400031a4:	jmp    0x140002fa0
   1400031a9:	int3   
   1400031aa:	int3   
   1400031ab:	int3   
   1400031ac:	int3   
   1400031ad:	int3   
   1400031ae:	int3   
   1400031af:	int3   
   1400031b0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400031b4:	jmp    0x140003080
   1400031b9:	int3   
   1400031ba:	int3   
   1400031bb:	int3   
   1400031bc:	int3   
   1400031bd:	int3   
   1400031be:	int3   
   1400031bf:	int3   
   1400031c0:	mov    rcx,QWORD PTR [rcx+0x8]
   1400031c4:	cmp    BYTE PTR [rcx+0x1e3],0x0
   1400031cb:	jne    0x1400031d0
   1400031cd:	xor    eax,eax
   1400031cf:	ret    
   1400031d0:	add    rcx,0x1e8
   1400031d7:	jmp    0x14001b050
   1400031dc:	int3   
   1400031dd:	int3   
   1400031de:	int3   
   1400031df:	int3   
   1400031e0:	rex push rdi
   1400031e2:	sub    rsp,0x20
   1400031e6:	mov    eax,edx
   1400031e8:	mov    rdi,rcx
   1400031eb:	mov    edx,DWORD PTR [rcx+0xc]
   1400031ee:	bt     edx,0x1e
   1400031f2:	jb     0x1400032d8
   1400031f8:	mov    ecx,DWORD PTR [rcx+0x8]
   1400031fb:	and    edx,0x3fffffff
   140003201:	mov    QWORD PTR [rsp+0x30],rbx
   140003206:	mov    r9d,0x4
   14000320c:	mov    QWORD PTR [rsp+0x38],rsi
   140003211:	lea    esi,[rcx+rax*1]
   140003214:	mov    r8d,esi
   140003217:	call   0x14001aa30
   14000321c:	mov    ebx,eax
   14000321e:	cmp    eax,esi
   140003220:	jge    0x14000323e
   140003222:	test   eax,eax
   140003224:	jne    0x140003230
   140003226:	cmp    esi,0xffffffff
   140003229:	jg     0x140003230
   14000322b:	or     ebx,0xffffffff
   14000322e:	jmp    0x14000323e
   140003230:	lea    eax,[rbx+rsi*1]
   140003233:	cdq    
   140003234:	sub    eax,edx
   140003236:	sar    eax,1
   140003238:	mov    ebx,eax
   14000323a:	cmp    eax,esi
   14000323c:	jl     0x140003230
   14000323e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140003245:	mov    rax,QWORD PTR [rip+0x2f144]        # 0x140032390
   14000324c:	mov    rcx,QWORD PTR [rax]
   14000324f:	mov    rax,QWORD PTR [rcx]
   140003252:	jne    0x14000329c
   140003254:	mov    rdx,QWORD PTR [rdi]
   140003257:	test   rdx,rdx
   14000325a:	je     0x14000327c
   14000325c:	movsxd r8,ebx
   14000325f:	shl    r8,0x2
   140003263:	call   QWORD PTR [rax+0x18]
   140003266:	mov    rsi,QWORD PTR [rsp+0x38]
   14000326b:	mov    DWORD PTR [rdi+0x8],ebx
   14000326e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003273:	mov    QWORD PTR [rdi],rax
   140003276:	add    rsp,0x20
   14000327a:	pop    rdi
   14000327b:	ret    
   14000327c:	movsxd rdx,ebx
   14000327f:	shl    rdx,0x2
   140003283:	call   QWORD PTR [rax+0x8]
   140003286:	mov    rsi,QWORD PTR [rsp+0x38]
   14000328b:	mov    DWORD PTR [rdi+0x8],ebx
   14000328e:	mov    rbx,QWORD PTR [rsp+0x30]
   140003293:	mov    QWORD PTR [rdi],rax
   140003296:	add    rsp,0x20
   14000329a:	pop    rdi
   14000329b:	ret    
   14000329c:	mov    rsi,QWORD PTR [rdi]
   14000329f:	movsxd rdx,ebx
   1400032a2:	shl    rdx,0x2
   1400032a6:	call   QWORD PTR [rax+0x8]
   1400032a9:	mov    QWORD PTR [rdi],rax
   1400032ac:	test   rsi,rsi
   1400032af:	je     0x1400032c4
   1400032b1:	movsxd r8,DWORD PTR [rdi+0x8]
   1400032b5:	mov    rdx,rsi
   1400032b8:	shl    r8,0x2
   1400032bc:	mov    rcx,rax
   1400032bf:	call   0x140026f70
   1400032c4:	and    DWORD PTR [rdi+0xc],0x3fffffff
   1400032cb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400032d0:	mov    DWORD PTR [rdi+0x8],ebx
   1400032d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400032d8:	add    rsp,0x20
   1400032dc:	pop    rdi
   1400032dd:	ret    
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	sub    rsp,0x28
   1400032e4:	cmp    QWORD PTR [rip+0x43e44],0x0        # 0x140047130
   1400032ec:	je     0x1400032f3
   1400032ee:	call   0x14001c630
   1400032f3:	cmp    QWORD PTR [rip+0x4421d],0x0        # 0x140047518
   1400032fb:	je     0x140003306
   1400032fd:	xor    edx,edx
   1400032ff:	xor    ecx,ecx
   140003301:	call   0x14001ba50
   140003306:	mov    eax,0x1
   14000330b:	add    rsp,0x28
   14000330f:	ret    
   140003310:	rex push rbx
   140003312:	sub    rsp,0x830
   140003319:	mov    rbx,rcx
   14000331c:	call   0x140009b60
   140003321:	test   al,al
   140003323:	jne    0x14000332e
   140003325:	add    rsp,0x830
   14000332c:	pop    rbx
   14000332d:	ret    
   14000332e:	mov    rcx,QWORD PTR [rbx+0xe8]
   140003335:	mov    QWORD PTR [rsp+0x850],rdi
   14000333d:	movzx  edi,BYTE PTR [rbx+0xfb]
   140003344:	mov    QWORD PTR [rsp+0x858],r14
   14000334c:	xor    r14d,r14d
   14000334f:	test   rcx,rcx
   140003352:	je     0x140003370
   140003354:	mov    r8d,r14d
   140003357:	lea    rdx,[rip+0x2f872]        # 0x140032bd0
   14000335e:	test   dil,dil
   140003361:	sete   r8b
   140003365:	call   0x14001e240
   14000336a:	test   eax,eax
   14000336c:	sete   dil
   140003370:	cmp    QWORD PTR [rbx+0xe0],r14
   140003377:	jne    0x1400033b6
   140003379:	call   QWORD PTR [rip+0x2f139]        # 0x1400324b8
   14000337f:	lea    r9,[rsp+0x30]
   140003384:	mov    QWORD PTR [rsp+0x20],0x200
   14000338d:	xor    r8d,r8d
   140003390:	lea    rdx,[rip+0x2f84d]        # 0x140032be4
   140003397:	mov    rcx,rax
   14000339a:	mov    r10,QWORD PTR [rax]
   14000339d:	call   QWORD PTR [r10+0x50]
   1400033a1:	test   al,al
   1400033a3:	je     0x140003436
   1400033a9:	lea    rdx,[rsp+0x30]
   1400033ae:	mov    rcx,rbx
   1400033b1:	call   0x140004f60
   1400033b6:	mov    QWORD PTR [rsp+0x840],rbp
   1400033be:	xor    bpl,bpl
   1400033c1:	mov    QWORD PTR [rsp+0x848],rsi
   1400033c9:	call   QWORD PTR [rip+0x2f0e9]        # 0x1400324b8
   1400033cf:	lea    rdx,[rip+0x2f8ba]        # 0x140032c90
   1400033d6:	mov    rcx,rax
   1400033d9:	mov    r8,QWORD PTR [rax]
   1400033dc:	call   QWORD PTR [r8+0x20]
   1400033e0:	movzx  edi,al
   1400033e3:	cmp    BYTE PTR [rbx+0x144],bpl
   1400033ea:	jne    0x1400033f4
   1400033ec:	test   al,al
   1400033ee:	je     0x1400034a4
   1400033f4:	xor    edx,edx
   1400033f6:	lea    ecx,[rdx+0x1]
   1400033f9:	call   QWORD PTR [rip+0x2efc1]        # 0x1400323c0
   1400033ff:	xor    edx,edx
   140003401:	xor    ecx,ecx
   140003403:	call   QWORD PTR [rip+0x2efb7]        # 0x1400323c0
   140003409:	mov    bpl,0x1
   14000340c:	test   dil,dil
   14000340f:	je     0x1400034a4
   140003415:	call   QWORD PTR [rip+0x2f09d]        # 0x1400324b8
   14000341b:	lea    rdx,[rip+0x2f876]        # 0x140032c98
   140003422:	mov    rcx,rax
   140003425:	mov    r8,QWORD PTR [rax]
   140003428:	call   QWORD PTR [r8+0x20]
   14000342c:	test   al,al
   14000342e:	jne    0x1400034a4
   140003430:	movzx  esi,bpl
   140003434:	jmp    0x1400034a7
   140003436:	test   dil,dil
   140003439:	je     0x1400033b6
   14000343f:	lea    rcx,[rip+0x2f7a6]        # 0x140032bec
   140003446:	call   QWORD PTR [rip+0x2edec]        # 0x140032238
   14000344c:	test   rax,rax
   14000344f:	je     0x140003459
   140003451:	mov    rdx,rax
   140003454:	jmp    0x1400033ae
   140003459:	mov    edx,0x200
   14000345e:	lea    rcx,[rsp+0x230]
   140003466:	call   QWORD PTR [rip+0x2f10c]        # 0x140032578
   14000346c:	lea    r8,[rsp+0x230]
   140003474:	lea    rdx,[rip+0x2f785]        # 0x140032c00
   14000347b:	lea    rcx,[rsp+0x430]
   140003483:	call   0x1400015d0
   140003488:	lea    rdx,[rsp+0x430]
   140003490:	lea    rcx,[rip+0x2f7e9]        # 0x140032c80
   140003497:	call   QWORD PTR [rip+0x2ed93]        # 0x140032230
   14000349d:	xor    al,al
   14000349f:	jmp    0x140003657
   1400034a4:	xor    sil,sil
   1400034a7:	call   QWORD PTR [rip+0x2f00b]        # 0x1400324b8
   1400034ad:	xor    r8d,r8d
   1400034b0:	lea    rdx,[rip+0x2f7f1]        # 0x140032ca8
   1400034b7:	mov    rcx,rax
   1400034ba:	mov    r9,QWORD PTR [rax]
   1400034bd:	call   QWORD PTR [r9+0x18]
   1400034c1:	mov    edi,0x2
   1400034c6:	test   rax,rax
   1400034c9:	je     0x140003501
   1400034cb:	test   sil,sil
   1400034ce:	jne    0x140003501
   1400034d0:	call   QWORD PTR [rip+0x2f0aa]        # 0x140032580
   1400034d6:	mov    edx,edi
   1400034d8:	lea    ecx,[rdi-0x1]
   1400034db:	test   al,al
   1400034dd:	cmovne edx,r14d
   1400034e1:	call   QWORD PTR [rip+0x2eed9]        # 0x1400323c0
   1400034e7:	lea    edx,[rdi+0x1]
   1400034ea:	xor    ecx,ecx
   1400034ec:	call   QWORD PTR [rip+0x2eece]        # 0x1400323c0
   1400034f2:	mov    bpl,0x1
   1400034f5:	mov    rcx,rbx
   1400034f8:	movzx  edx,bpl
   1400034fc:	call   0x14000b3f0
   140003501:	call   QWORD PTR [rip+0x2efb1]        # 0x1400324b8
   140003507:	lea    rdx,[rip+0x2f7a6]        # 0x140032cb4
   14000350e:	mov    rcx,rax
   140003511:	mov    r8,QWORD PTR [rax]
   140003514:	call   QWORD PTR [r8+0x20]
   140003518:	test   al,al
   14000351a:	je     0x140003538
   14000351c:	test   sil,sil
   14000351f:	jne    0x14000352e
   140003521:	mov    edx,edi
   140003523:	xor    ecx,ecx
   140003525:	call   QWORD PTR [rip+0x2ee95]        # 0x1400323c0
   14000352b:	mov    bpl,0x1
   14000352e:	mov    dl,0x1
   140003530:	mov    rcx,rbx
   140003533:	call   0x14000b3f0
   140003538:	call   QWORD PTR [rip+0x2ef7a]        # 0x1400324b8
   14000353e:	lea    rdx,[rip+0x2f753]        # 0x140032c98
   140003545:	mov    rcx,rax
   140003548:	mov    r8,QWORD PTR [rax]
   14000354b:	call   QWORD PTR [r8+0x20]
   14000354f:	mov    rsi,QWORD PTR [rsp+0x848]
   140003557:	test   al,al
   140003559:	je     0x14000356e
   14000355b:	mov    edx,edi
   14000355d:	xor    ecx,ecx
   14000355f:	call   QWORD PTR [rip+0x2ee5b]        # 0x1400323c0
   140003565:	mov    edx,edi
   140003567:	mov    ecx,0x1
   14000356c:	jmp    0x1400035d3
   14000356e:	test   bpl,bpl
   140003571:	jne    0x1400035d9
   140003573:	call   QWORD PTR [rip+0x2f017]        # 0x140032590
   140003579:	test   al,al
   14000357b:	je     0x14000359a
   14000357d:	call   QWORD PTR [rip+0x2effd]        # 0x140032580
   140003583:	mov    edx,edi
   140003585:	mov    ecx,0x1
   14000358a:	test   al,al
   14000358c:	cmovne edx,r14d
   140003590:	call   QWORD PTR [rip+0x2ee2a]        # 0x1400323c0
   140003596:	mov    edx,edi
   140003598:	jmp    0x1400035d1
   14000359a:	call   QWORD PTR [rip+0x2f010]        # 0x1400325b0
   1400035a0:	test   eax,eax
   1400035a2:	je     0x1400035b3
   1400035a4:	xor    edx,edx
   1400035a6:	lea    ecx,[rdx+0x1]
   1400035a9:	call   QWORD PTR [rip+0x2ee11]        # 0x1400323c0
   1400035af:	mov    edx,edi
   1400035b1:	jmp    0x1400035d1
   1400035b3:	call   QWORD PTR [rip+0x2efc7]        # 0x140032580
   1400035b9:	test   al,al
   1400035bb:	mov    ecx,0x1
   1400035c0:	cmovne edi,r14d
   1400035c4:	mov    edx,edi
   1400035c6:	call   QWORD PTR [rip+0x2edf4]        # 0x1400323c0
   1400035cc:	mov    edx,0x3
   1400035d1:	xor    ecx,ecx
   1400035d3:	call   QWORD PTR [rip+0x2ede7]        # 0x1400323c0
   1400035d9:	call   0x140019fb0
   1400035de:	call   QWORD PTR [rip+0x2eed4]        # 0x1400324b8
   1400035e4:	xor    r8d,r8d
   1400035e7:	lea    rdx,[rip+0x2f6d2]        # 0x140032cc0
   1400035ee:	mov    rcx,rax
   1400035f1:	mov    r9,QWORD PTR [rax]
   1400035f4:	call   QWORD PTR [r9+0x18]
   1400035f8:	mov    rbp,QWORD PTR [rsp+0x840]
   140003600:	test   rax,rax
   140003603:	je     0x140003617
   140003605:	call   0x140027ca8
   14000360a:	mov    edx,0x8001f
   14000360f:	lea    ecx,[rdx-0x1c]
   140003612:	call   0x140027cfc
   140003617:	call   QWORD PTR [rip+0x2ee9b]        # 0x1400324b8
   14000361d:	xor    r8d,r8d
   140003620:	lea    rdx,[rip+0x2f6a9]        # 0x140032cd0
   140003627:	mov    rcx,rax
   14000362a:	mov    r9,QWORD PTR [rax]
   14000362d:	call   QWORD PTR [r9+0x18]
   140003631:	test   rax,rax
   140003634:	je     0x14000363c
   140003636:	call   QWORD PTR [rip+0x2ef5c]        # 0x140032598
   14000363c:	xor    r9d,r9d
   14000363f:	lea    r8,[rip+0x2f69a]        # 0x140032ce0
   140003646:	lea    rdx,[rip+0x2f57b]        # 0x140032bc8
   14000364d:	mov    rcx,rbx
   140003650:	call   0x140008980
   140003655:	mov    al,0x1
   140003657:	mov    rdi,QWORD PTR [rsp+0x850]
   14000365f:	mov    r14,QWORD PTR [rsp+0x858]
   140003667:	add    rsp,0x830
   14000366e:	pop    rbx
   14000366f:	ret    
   140003670:	rex push rbx
   140003672:	sub    rsp,0x20
   140003676:	mov    rbx,rcx
   140003679:	call   0x140003310
   14000367e:	test   al,al
   140003680:	jne    0x14000368a
   140003682:	xor    al,al
   140003684:	add    rsp,0x20
   140003688:	pop    rbx
   140003689:	ret    
   14000368a:	xor    r9d,r9d
   14000368d:	lea    r8,[rip+0x2fb84]        # 0x140033218
   140003694:	lea    rdx,[rip+0x2fb8d]        # 0x140033228
   14000369b:	mov    rcx,rbx
   14000369e:	call   0x140008980
   1400036a3:	test   rax,rax
   1400036a6:	je     0x140003682
   1400036a8:	mov    rcx,rbx
   1400036ab:	call   0x1400095e0
   1400036b0:	mov    edx,0x1
   1400036b5:	mov    QWORD PTR [rsp+0x38],rax
   1400036ba:	lea    rcx,[rsp+0x38]
   1400036bf:	call   0x140024f20
   1400036c4:	mov    rcx,rbx
   1400036c7:	mov    BYTE PTR [rbx+0x1de],0x1
   1400036ce:	call   0x140005390
   1400036d3:	test   al,al
   1400036d5:	je     0x140003682
   1400036d7:	mov    rcx,QWORD PTR [rip+0x43e42]        # 0x140047520
   1400036de:	test   rcx,rcx
   1400036e1:	je     0x1400036e9
   1400036e3:	mov    rax,QWORD PTR [rcx]
   1400036e6:	call   QWORD PTR [rax+0x60]
   1400036e9:	mov    rcx,rbx
   1400036ec:	call   0x140003700
   1400036f1:	mov    al,0x1
   1400036f3:	add    rsp,0x20
   1400036f7:	pop    rbx
   1400036f8:	ret    
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	mov    QWORD PTR [rsp+0x18],rbx
   140003705:	mov    QWORD PTR [rsp+0x20],rsi
   14000370a:	push   rdi
   14000370b:	sub    rsp,0x20
   14000370f:	mov    rdi,rcx
   140003712:	call   QWORD PTR [rip+0x2eda0]        # 0x1400324b8
   140003718:	lea    rdx,[rip+0x2fa99]        # 0x1400331b8
   14000371f:	mov    rcx,rax
   140003722:	mov    r8,QWORD PTR [rax]
   140003725:	call   QWORD PTR [r8+0x20]
   140003729:	lea    rsi,[rip+0x2fa98]        # 0x1400331c8
   140003730:	lea    rbx,[rip+0x2faa1]        # 0x1400331d8
   140003737:	test   al,al
   140003739:	jne    0x14000376d
   14000373b:	call   QWORD PTR [rip+0x2ed77]        # 0x1400324b8
   140003741:	mov    rdx,rsi
   140003744:	mov    rcx,rax
   140003747:	mov    r8,QWORD PTR [rax]
   14000374a:	call   QWORD PTR [r8+0x20]
   14000374e:	test   al,al
   140003750:	jne    0x14000376d
   140003752:	call   QWORD PTR [rip+0x2ed60]        # 0x1400324b8
   140003758:	mov    rdx,rbx
   14000375b:	mov    rcx,rax
   14000375e:	mov    r8,QWORD PTR [rax]
   140003761:	call   QWORD PTR [r8+0x20]
   140003765:	test   al,al
   140003767:	je     0x140003896
   14000376d:	mov    QWORD PTR [rsp+0x30],rbp
   140003772:	call   QWORD PTR [rip+0x2ed40]        # 0x1400324b8
   140003778:	mov    rdx,rbx
   14000377b:	mov    rcx,rax
   14000377e:	mov    r8,QWORD PTR [rax]
   140003781:	call   QWORD PTR [r8+0x20]
   140003785:	test   al,al
   140003787:	mov    BYTE PTR [rdi+0x208],0x1
   14000378e:	cmove  rbx,rsi
   140003792:	call   QWORD PTR [rip+0x2ed20]        # 0x1400324b8
   140003798:	lea    r8,[rip+0x2f941]        # 0x1400330e0
   14000379f:	mov    rdx,rbx
   1400037a2:	mov    rcx,rax
   1400037a5:	mov    r9,QWORD PTR [rax]
   1400037a8:	call   QWORD PTR [r9+0x68]
   1400037ac:	mov    rdx,rax
   1400037af:	lea    rcx,[rdi+0x1f8]
   1400037b6:	call   0x14001aae0
   1400037bb:	call   QWORD PTR [rip+0x2ecf7]        # 0x1400324b8
   1400037c1:	lea    rdx,[rip+0x2fa28]        # 0x1400331f0
   1400037c8:	mov    rcx,rax
   1400037cb:	mov    r8,QWORD PTR [rax]
   1400037ce:	call   QWORD PTR [r8+0x20]
   1400037d2:	movzx  ebp,al
   1400037d5:	call   QWORD PTR [rip+0x2ecdd]        # 0x1400324b8
   1400037db:	lea    rdx,[rip+0x2fa1e]        # 0x140033200
   1400037e2:	mov    rcx,rax
   1400037e5:	mov    r8,QWORD PTR [rax]
   1400037e8:	call   QWORD PTR [r8+0x20]
   1400037ec:	test   al,al
   1400037ee:	je     0x14000381d
   1400037f0:	mov    rdx,QWORD PTR [rip+0x43991]        # 0x140047188
   1400037f7:	lea    rcx,[rdi+0x1f8]
   1400037fe:	mov    rbx,QWORD PTR [rdx]
   140003801:	call   0x14001b050
   140003806:	mov    rcx,QWORD PTR [rip+0x4397b]        # 0x140047188
   14000380d:	lea    r8,[rip+0x2f9d0]        # 0x1400331e4
   140003814:	mov    rdx,rax
   140003817:	call   QWORD PTR [rbx+0xc8]
   14000381d:	lea    rbx,[rdi+0x210]
   140003824:	movzx  edx,bpl
   140003828:	mov    rcx,rbx
   14000382b:	call   0x140025e50
   140003830:	mov    rax,QWORD PTR [rdi]
   140003833:	lea    rdx,[rsp+0x38]
   140003838:	mov    rcx,rdi
   14000383b:	call   QWORD PTR [rax+0x10]
   14000383e:	mov    rcx,rax
   140003841:	call   0x14001b050
   140003846:	mov    r10,QWORD PTR [rbx]
   140003849:	lea    r9,[rip+0x2f994]        # 0x1400331e4
   140003850:	lea    r8,[rip+0x2f9b9]        # 0x140033210
   140003857:	mov    rdx,rax
   14000385a:	mov    rcx,rbx
   14000385d:	call   QWORD PTR [r10+0x20]
   140003861:	cmp    QWORD PTR [rsp+0x38],0x0
   140003867:	mov    rbp,QWORD PTR [rsp+0x30]
   14000386c:	mov    DWORD PTR [rdi+0x20c],eax
   140003872:	je     0x14000387e
   140003874:	lea    rcx,[rsp+0x38]
   140003879:	call   0x14001b030
   14000387e:	mov    rax,QWORD PTR [rbx]
   140003881:	mov    rcx,rbx
   140003884:	mov    edx,DWORD PTR [rdi+0x20c]
   14000388a:	call   QWORD PTR [rax+0x40]
   14000388d:	mov    rcx,rbx
   140003890:	call   QWORD PTR [rip+0x2ebfa]        # 0x140032490
   140003896:	mov    rbx,QWORD PTR [rsp+0x40]
   14000389b:	mov    rsi,QWORD PTR [rsp+0x48]
   1400038a0:	add    rsp,0x20
   1400038a4:	pop    rdi
   1400038a5:	ret    
   1400038a6:	int3   
   1400038a7:	int3   
   1400038a8:	int3   
   1400038a9:	int3   
   1400038aa:	int3   
   1400038ab:	int3   
   1400038ac:	int3   
   1400038ad:	int3   
   1400038ae:	int3   
   1400038af:	int3   
   1400038b0:	mov    BYTE PTR [rcx+0x8],0x0
   1400038b4:	ret    
   1400038b5:	int3   
   1400038b6:	int3   
   1400038b7:	int3   
   1400038b8:	int3   
   1400038b9:	int3   
   1400038ba:	int3   
   1400038bb:	int3   
   1400038bc:	int3   
   1400038bd:	int3   
   1400038be:	int3   
   1400038bf:	int3   
   1400038c0:	mov    QWORD PTR [rsp+0x10],rsi
   1400038c5:	mov    QWORD PTR [rsp+0x18],rdi
   1400038ca:	push   r14
   1400038cc:	sub    rsp,0x20
   1400038d0:	movsxd rdi,edx
   1400038d3:	mov    esi,r8d
   1400038d6:	mov    r14,rcx
   1400038d9:	test   r8d,r8d
   1400038dc:	je     0x14000392e
   1400038de:	mov    eax,DWORD PTR [rcx+0x10]
   1400038e1:	mov    QWORD PTR [rsp+0x30],rbx
   1400038e6:	mov    ebx,DWORD PTR [rcx]
   1400038e8:	add    ebx,r8d
   1400038eb:	cmp    ebx,eax
   1400038ed:	jle    0x1400038fc
   1400038ef:	mov    edx,ebx
   1400038f1:	add    rcx,0x8
   1400038f5:	sub    edx,eax
   1400038f7:	call   0x1400031e0
   1400038fc:	mov    DWORD PTR [r14],ebx
   1400038ff:	sub    ebx,edi
   140003901:	sub    ebx,esi
   140003903:	test   ebx,ebx
   140003905:	jle    0x140003929
   140003907:	test   esi,esi
   140003909:	jle    0x140003929
   14000390b:	mov    r9,QWORD PTR [r14+0x8]
   14000390f:	lea    eax,[rdi+rsi*1]
   140003912:	movsxd rcx,eax
   140003915:	movsxd r8,ebx
   140003918:	shl    r8,0x2
   14000391c:	lea    rdx,[r9+rdi*4]
   140003920:	lea    rcx,[r9+rcx*4]
   140003924:	call   0x140026f70
   140003929:	mov    rbx,QWORD PTR [rsp+0x30]
   14000392e:	mov    rsi,QWORD PTR [rsp+0x38]
   140003933:	mov    eax,edi
   140003935:	mov    rdi,QWORD PTR [rsp+0x40]
   14000393a:	add    rsp,0x20
   14000393e:	pop    r14
   140003940:	ret    
   140003941:	int3   
   140003942:	int3   
   140003943:	int3   
   140003944:	int3   
   140003945:	int3   
   140003946:	int3   
   140003947:	int3   
   140003948:	int3   
   140003949:	int3   
   14000394a:	int3   
   14000394b:	int3   
   14000394c:	int3   
   14000394d:	int3   
   14000394e:	int3   
   14000394f:	int3   
   140003950:	mov    rax,QWORD PTR [rcx+0x8]
   140003954:	movzx  eax,BYTE PTR [rax+0xf8]
   14000395b:	ret    
   14000395c:	int3   
   14000395d:	int3   
   14000395e:	int3   
   14000395f:	int3   
   140003960:	sub    rsp,0x28
   140003964:	mov    rcx,QWORD PTR [rcx+0xe0]
   14000396b:	test   rcx,rcx
   14000396e:	je     0x1400039a3
   140003970:	xor    r8d,r8d
   140003973:	lea    rdx,[rip+0x2fa26]        # 0x1400333a0
   14000397a:	call   0x14001ded0
   14000397f:	test   rax,rax
   140003982:	je     0x1400039a3
   140003984:	mov    r8d,0x1
   14000398a:	lea    rdx,[rip+0x2fc9f]        # 0x140033630
   140003991:	mov    rcx,rax
   140003994:	call   0x14001e240
   140003999:	test   eax,eax
   14000399b:	setne  al
   14000399e:	add    rsp,0x28
   1400039a2:	ret    
   1400039a3:	mov    al,0x1
   1400039a5:	add    rsp,0x28
   1400039a9:	ret    
   1400039aa:	int3   
   1400039ab:	int3   
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	xor    al,al
   1400039b2:	ret    
   1400039b3:	int3   
   1400039b4:	int3   
   1400039b5:	int3   
   1400039b6:	int3   
   1400039b7:	int3   
   1400039b8:	int3   
   1400039b9:	int3   
   1400039ba:	int3   
   1400039bb:	int3   
   1400039bc:	int3   
   1400039bd:	int3   
   1400039be:	int3   
   1400039bf:	int3   
   1400039c0:	rex push rbx
   1400039c2:	sub    rsp,0x260
   1400039c9:	mov    rbx,rcx
   1400039cc:	mov    QWORD PTR [rsp+0x30],0x0
   1400039d5:	mov    rcx,QWORD PTR [rip+0x437ac]        # 0x140047188
   1400039dc:	lea    r9,[rsp+0x150]
   1400039e4:	mov    DWORD PTR [rsp+0x28],0x0
   1400039ec:	lea    r8,[rip+0x2f7f1]        # 0x1400331e4
   1400039f3:	mov    DWORD PTR [rsp+0x20],0x104
   1400039fb:	mov    rax,QWORD PTR [rcx]
   1400039fe:	call   QWORD PTR [rax+0xb8]
   140003a04:	test   rax,rax
   140003a07:	jne    0x140003a12
   140003a09:	add    rsp,0x260
   140003a10:	pop    rbx
   140003a11:	ret    
   140003a12:	mov    QWORD PTR [rsp+0x270],rbp
   140003a1a:	mov    QWORD PTR [rsp+0x278],rsi
   140003a22:	mov    esi,DWORD PTR [rbx+0x150]
   140003a28:	mov    QWORD PTR [rsp+0x288],rdi
   140003a30:	xor    edi,edi
   140003a32:	test   esi,esi
   140003a34:	jle    0x140003aeb
   140003a3a:	lea    rbp,[rip+0x2ffe7]        # 0x140033a28
   140003a41:	nop    DWORD PTR [rax+0x0]
   140003a45:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140003a50:	lea    rdx,[rsp+0x280]
   140003a58:	mov    WORD PTR [rsp+0x280],di
   140003a60:	lea    rcx,[rbx+0x168]
   140003a67:	call   0x14001db60
   140003a6c:	mov    r8,rax
   140003a6f:	or     rax,0xffffffffffffffff
   140003a73:	inc    rax
   140003a76:	cmp    BYTE PTR [r8+rax*1],0x0
   140003a7b:	jne    0x140003a73
   140003a7d:	cmp    eax,0x4
   140003a80:	jl     0x140003aa9
   140003a82:	add    eax,0xfffffffc
   140003a85:	movsxd rdx,eax
   140003a88:	add    rdx,r8
   140003a8b:	xor    eax,eax
   140003a8d:	nop    DWORD PTR [rax]
   140003a90:	movzx  ecx,BYTE PTR [rdx+rax*1]
   140003a94:	inc    rax
   140003a97:	cmp    cl,BYTE PTR [rax+rbp*1-0x1]
   140003a9b:	jne    0x140003aa9
   140003a9d:	cmp    rax,0x5
   140003aa1:	jne    0x140003a90
   140003aa3:	cmp    cl,BYTE PTR [rax+rbp*1-0x1]
   140003aa7:	je     0x140003acc
   140003aa9:	lea    rdx,[rip+0x2ff80]        # 0x140033a30
   140003ab0:	lea    rcx,[rsp+0x40]
   140003ab5:	call   0x140001570
   140003aba:	mov    dl,0x5c
   140003abc:	lea    rcx,[rsp+0x40]
   140003ac1:	call   QWORD PTR [rip+0x2ea09]        # 0x1400324d0
   140003ac7:	lea    r8,[rsp+0x40]
   140003acc:	mov    rdx,r8
   140003acf:	lea    rcx,[rsp+0x150]
   140003ad7:	call   0x1400273a8
   140003adc:	test   rax,rax
   140003adf:	jne    0x140003b0e
   140003ae1:	inc    edi
   140003ae3:	cmp    edi,esi
   140003ae5:	jl     0x140003a50
   140003aeb:	xor    al,al
   140003aed:	mov    rsi,QWORD PTR [rsp+0x278]
   140003af5:	mov    rbp,QWORD PTR [rsp+0x270]
   140003afd:	mov    rdi,QWORD PTR [rsp+0x288]
   140003b05:	add    rsp,0x260
   140003b0c:	pop    rbx
   140003b0d:	ret    
   140003b0e:	mov    al,0x1
   140003b10:	jmp    0x140003aed
   140003b12:	int3   
   140003b13:	int3   
   140003b14:	int3   
   140003b15:	int3   
   140003b16:	int3   
   140003b17:	int3   
   140003b18:	int3   
   140003b19:	int3   
   140003b1a:	int3   
   140003b1b:	int3   
   140003b1c:	int3   
   140003b1d:	int3   
   140003b1e:	int3   
   140003b1f:	int3   
   140003b20:	mov    rcx,QWORD PTR [rcx+0x8]
   140003b24:	jmp    0x1400039c0
   140003b29:	int3   
   140003b2a:	int3   
   140003b2b:	int3   
   140003b2c:	int3   
   140003b2d:	int3   
   140003b2e:	int3   
   140003b2f:	int3   
   140003b30:	mov    rax,QWORD PTR [rcx+0x8]
   140003b34:	movzx  eax,BYTE PTR [rax+0xfa]
   140003b3b:	ret    
   140003b3c:	int3   
   140003b3d:	int3   
   140003b3e:	int3   
   140003b3f:	int3   
   140003b40:	mov    rax,QWORD PTR [rcx+0x8]
   140003b44:	movzx  eax,BYTE PTR [rax+0xf9]
   140003b4b:	ret    
   140003b4c:	int3   
   140003b4d:	int3   
   140003b4e:	int3   
   140003b4f:	int3   
   140003b50:	mov    rax,QWORD PTR [rcx+0x8]
   140003b54:	movzx  eax,BYTE PTR [rax+0x145]
   140003b5b:	ret    
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	mov    rax,QWORD PTR [rcx+0x8]
   140003b64:	movzx  eax,BYTE PTR [rax+0x144]
   140003b6b:	ret    
   140003b6c:	int3   
   140003b6d:	int3   
   140003b6e:	int3   
   140003b6f:	int3   
   140003b70:	rex push rbx
   140003b72:	sub    rsp,0x20
   140003b76:	mov    rcx,rdx
   140003b79:	lea    r8,[rsp+0x40]
   140003b7e:	xor    ebx,ebx
   140003b80:	lea    rdx,[rip+0x2ec2d]        # 0x1400327b4
   140003b87:	mov    QWORD PTR [rsp+0x40],rbx
   140003b8c:	call   QWORD PTR [rip+0x2e9a6]        # 0x140032538
   140003b92:	test   eax,eax
   140003b94:	cmovne rbx,QWORD PTR [rsp+0x40]
   140003b9a:	test   rbx,rbx
   140003b9d:	setne  al
   140003ba0:	add    rsp,0x20
   140003ba4:	pop    rbx
   140003ba5:	ret    
   140003ba6:	int3   
   140003ba7:	int3   
   140003ba8:	int3   
   140003ba9:	int3   
   140003baa:	int3   
   140003bab:	int3   
   140003bac:	int3   
   140003bad:	int3   
   140003bae:	int3   
   140003baf:	int3   
   140003bb0:	mov    QWORD PTR [rsp+0x18],rbp
   140003bb5:	push   rsi
   140003bb6:	push   r14
   140003bb8:	push   r15
   140003bba:	sub    rsp,0x250
   140003bc1:	mov    r15,r9
   140003bc4:	movzx  ebp,r8b
   140003bc8:	movzx  r14d,dl
   140003bcc:	lea    r8,[rsp+0x140]
   140003bd4:	mov    r9d,0x104
   140003bda:	xor    edx,edx
   140003bdc:	mov    rsi,rcx
   140003bdf:	call   0x140025290
   140003be4:	test   al,al
   140003be6:	je     0x140003d02
   140003bec:	mov    QWORD PTR [rsp+0x270],rbx
   140003bf4:	lea    rcx,[rsp+0x140]
   140003bfc:	mov    QWORD PTR [rsp+0x278],rdi
   140003c04:	call   QWORD PTR [rip+0x2e8fe]        # 0x140032508
   140003c0a:	mov    r8d,0x104
   140003c10:	lea    rdx,[rsp+0x140]
   140003c18:	lea    rcx,[rsp+0x30]
   140003c1d:	mov    rdi,rax
   140003c20:	call   QWORD PTR [rip+0x2e932]        # 0x140032558
   140003c26:	lea    rcx,[rsp+0x30]
   140003c2b:	call   QWORD PTR [rip+0x2e8e7]        # 0x140032518
   140003c31:	mov    dl,0x5c
   140003c33:	lea    rcx,[rsp+0x30]
   140003c38:	call   QWORD PTR [rip+0x2e892]        # 0x1400324d0
   140003c3e:	lea    rcx,[rsp+0x30]
   140003c43:	call   QWORD PTR [rip+0x2e87f]        # 0x1400324c8
   140003c49:	mov    ebx,DWORD PTR [r15]
   140003c4c:	lea    rcx,[rsp+0x30]
   140003c51:	movzx  r9d,r14b
   140003c55:	mov    QWORD PTR [rsp+0x20],r15
   140003c5a:	xor    r8d,r8d
   140003c5d:	mov    rdx,rdi
   140003c60:	call   0x140024fb0
   140003c65:	mov    edi,DWORD PTR [r15]
   140003c68:	sub    edi,ebx
   140003c6a:	mov    rbx,QWORD PTR [rsp+0x270]
   140003c72:	jne    0x140003ca6
   140003c74:	mov    ecx,DWORD PTR [rip+0x433ca]        # 0x140047044
   140003c7a:	mov    edx,0x2
   140003c7f:	call   QWORD PTR [rip+0x2e823]        # 0x1400324a8
   140003c85:	test   al,al
   140003c87:	je     0x140003cfa
   140003c89:	mov    ecx,DWORD PTR [rip+0x433b5]        # 0x140047044
   140003c8f:	lea    r8,[rip+0x2fdf2]        # 0x140033a88
   140003c96:	mov    r9,rsi
   140003c99:	mov    edx,0x2
   140003c9e:	call   QWORD PTR [rip+0x2e7fc]        # 0x1400324a0
   140003ca4:	jmp    0x140003cfa
   140003ca6:	test   bpl,bpl
   140003ca9:	je     0x140003cfa
   140003cab:	mov    ecx,DWORD PTR [rip+0x43393]        # 0x140047044
   140003cb1:	mov    edx,0x1
   140003cb6:	call   QWORD PTR [rip+0x2e7ec]        # 0x1400324a8
   140003cbc:	test   al,al
   140003cbe:	je     0x140003cfa
   140003cc0:	lea    rcx,[rip+0x2fde9]        # 0x140033ab0
   140003cc7:	mov    QWORD PTR [rsp+0x28],rsi
   140003ccc:	test   r14b,r14b
   140003ccf:	lea    rax,[rip+0x2fdea]        # 0x140033ac0
   140003cd6:	mov    r9d,edi
   140003cd9:	lea    r8,[rip+0x2fdf0]        # 0x140033ad0
   140003ce0:	cmovne rax,rcx
   140003ce4:	mov    edx,0x1
   140003ce9:	mov    ecx,DWORD PTR [rip+0x43355]        # 0x140047044
   140003cef:	mov    QWORD PTR [rsp+0x20],rax
   140003cf4:	call   QWORD PTR [rip+0x2e7a6]        # 0x1400324a0
   140003cfa:	mov    rdi,QWORD PTR [rsp+0x278]
   140003d02:	mov    rbp,QWORD PTR [rsp+0x280]
   140003d0a:	add    rsp,0x250
   140003d11:	pop    r15
   140003d13:	pop    r14
   140003d15:	pop    rsi
   140003d16:	ret    
   140003d17:	int3   
   140003d18:	int3   
   140003d19:	int3   
   140003d1a:	int3   
   140003d1b:	int3   
   140003d1c:	int3   
   140003d1d:	int3   
   140003d1e:	int3   
   140003d1f:	int3   
   140003d20:	mov    QWORD PTR [rsp+0x8],rbx
   140003d25:	mov    QWORD PTR [rsp+0x10],rsi
   140003d2a:	push   rdi
   140003d2b:	sub    rsp,0x20
   140003d2f:	movzx  eax,BYTE PTR [rcx+0xf9]
   140003d36:	mov    rbx,rcx
   140003d39:	mov    BYTE PTR [rcx+0x1dc],0x0
   140003d40:	test   al,al
   140003d42:	jne    0x140003d51
   140003d44:	cmp    BYTE PTR [rcx+0x1df],al
   140003d4a:	jne    0x140003d51
   140003d4c:	xor    dil,dil
   140003d4f:	jmp    0x140003d54
   140003d51:	mov    dil,0x1
   140003d54:	movzx  ecx,BYTE PTR [rcx+0xf8]
   140003d5b:	test   cl,cl
   140003d5d:	jne    0x140003d63
   140003d5f:	test   al,al
   140003d61:	je     0x140003d76
   140003d63:	test   dil,dil
   140003d66:	jne    0x140003d76
   140003d68:	cmp    BYTE PTR [rbx+0x1e1],dil
   140003d6f:	jne    0x140003d76
   140003d71:	xor    sil,sil
   140003d74:	jmp    0x140003d79
   140003d76:	mov    sil,0x1
   140003d79:	test   cl,cl
   140003d7b:	jne    0x140003d8b
   140003d7d:	test   sil,sil
   140003d80:	jne    0x140003d8b
   140003d82:	cmp    BYTE PTR [rbx+0x1e2],sil
   140003d89:	je     0x140003d9a
   140003d8b:	lea    rdx,[rip+0x2f4ae]        # 0x140033240
   140003d92:	mov    rcx,rbx
   140003d95:	call   0x140003e20
   140003d9a:	test   dil,dil
   140003d9d:	je     0x140003dae
   140003d9f:	lea    rdx,[rip+0x2f4aa]        # 0x140033250
   140003da6:	mov    rcx,rbx
   140003da9:	call   0x140003e20
   140003dae:	test   sil,sil
   140003db1:	je     0x140003dc2
   140003db3:	lea    rdx,[rip+0x2f4ae]        # 0x140033268
   140003dba:	mov    rcx,rbx
   140003dbd:	call   0x140003e20
   140003dc2:	cmp    BYTE PTR [rbx+0xf8],0x0
   140003dc9:	jne    0x140003dee
   140003dcb:	mov    rcx,rbx
   140003dce:	call   0x140009d50
   140003dd3:	test   al,al
   140003dd5:	jne    0x140003ddf
   140003dd7:	cmp    BYTE PTR [rbx+0x1e0],al
   140003ddd:	je     0x140003dee
   140003ddf:	lea    rdx,[rip+0x2f492]        # 0x140033278
   140003de6:	mov    rcx,rbx
   140003de9:	call   0x140003e20
   140003dee:	test   dil,dil
   140003df1:	je     0x140003e02
   140003df3:	lea    rdx,[rip+0x2f48e]        # 0x140033288
   140003dfa:	mov    rcx,rbx
   140003dfd:	call   0x140003e20
   140003e02:	mov    rbx,QWORD PTR [rsp+0x30]
   140003e07:	mov    rsi,QWORD PTR [rsp+0x38]
   140003e0c:	add    rsp,0x20
   140003e10:	pop    rdi
   140003e11:	ret    
   140003e12:	int3   
   140003e13:	int3   
   140003e14:	int3   
   140003e15:	int3   
   140003e16:	int3   
   140003e17:	int3   
   140003e18:	int3   
   140003e19:	int3   
   140003e1a:	int3   
   140003e1b:	int3   
   140003e1c:	int3   
   140003e1d:	int3   
   140003e1e:	int3   
   140003e1f:	int3   
   140003e20:	mov    QWORD PTR [rsp+0x10],rbx
   140003e25:	push   rdi
   140003e26:	sub    rsp,0x30
   140003e2a:	mov    rbx,rcx
   140003e2d:	mov    DWORD PTR [rsp+0x20],0xffffffff
   140003e35:	mov    rcx,QWORD PTR [rip+0x4338c]        # 0x1400471c8
   140003e3c:	lea    r9,[rip+0x2f455]        # 0x140033298
   140003e43:	xor    r8d,r8d
   140003e46:	mov    rax,QWORD PTR [rcx]
   140003e49:	call   QWORD PTR [rax+0xb0]
   140003e4f:	mov    rdi,rax
   140003e52:	test   rax,rax
   140003e55:	je     0x140003ecb
   140003e57:	mov    rcx,QWORD PTR [rip+0x4336a]        # 0x1400471c8
   140003e5e:	mov    rdx,rax
   140003e61:	mov    QWORD PTR [rsp+0x40],rsi
   140003e66:	mov    r8,QWORD PTR [rcx]
   140003e69:	call   QWORD PTR [r8+0xe8]
   140003e70:	mov    rcx,QWORD PTR [rip+0x43351]        # 0x1400471c8
   140003e77:	mov    rdx,QWORD PTR [rcx]
   140003e7a:	call   QWORD PTR [rdx+0x170]
   140003e80:	mov    rcx,QWORD PTR [rip+0x43341]        # 0x1400471c8
   140003e87:	mov    rdx,QWORD PTR [rcx]
   140003e8a:	call   QWORD PTR [rdx+0x70]
   140003e8d:	movsxd rsi,DWORD PTR [rbx+0x1c0]
   140003e94:	cmp    esi,DWORD PTR [rbx+0x1d0]
   140003e9a:	jne    0x140003ead
   140003e9c:	lea    rcx,[rbx+0x1c8]
   140003ea3:	mov    edx,0x1
   140003ea8:	call   0x140013420
   140003ead:	mov    rax,QWORD PTR [rbx+0x1c8]
   140003eb4:	inc    DWORD PTR [rbx+0x1c0]
   140003eba:	lea    rdx,[rax+rsi*8]
   140003ebe:	mov    rsi,QWORD PTR [rsp+0x40]
   140003ec3:	test   rdx,rdx
   140003ec6:	je     0x140003ecb
   140003ec8:	mov    QWORD PTR [rdx],rdi
   140003ecb:	mov    rbx,QWORD PTR [rsp+0x48]
   140003ed0:	add    rsp,0x30
   140003ed4:	pop    rdi
   140003ed5:	ret    
   140003ed6:	int3   
   140003ed7:	int3   
   140003ed8:	int3   
   140003ed9:	int3   
   140003eda:	int3   
   140003edb:	int3   
   140003edc:	int3   
   140003edd:	int3   
   140003ede:	int3   
   140003edf:	int3   
   140003ee0:	mov    rcx,QWORD PTR [rcx+0x8]
   140003ee4:	jmp    0x140003e20
   140003ee9:	int3   
   140003eea:	int3   
   140003eeb:	int3   
   140003eec:	int3   
   140003eed:	int3   
   140003eee:	int3   
   140003eef:	int3   
   140003ef0:	rex push rbp
   140003ef2:	push   rsi
   140003ef3:	push   rdi
   140003ef4:	push   r12
   140003ef6:	push   r13
   140003ef8:	push   r14
   140003efa:	push   r15
   140003efc:	sub    rsp,0x3d0
   140003f03:	lea    rbp,[rsp+0x30]
   140003f08:	mov    QWORD PTR [rbp+0x3e0],rbx
   140003f0f:	mov    rbx,rcx
   140003f12:	mov    rdi,rdx
   140003f15:	test   rdx,rdx
   140003f18:	je     0x14000455e
   140003f1e:	cmp    BYTE PTR [rdx],0x0
   140003f21:	je     0x14000455e
   140003f27:	mov    eax,DWORD PTR [rcx+0x1e4]
   140003f2d:	test   eax,eax
   140003f2f:	jne    0x140003fcd
   140003f35:	lea    edx,[rax+0x4]
   140003f38:	mov    rax,QWORD PTR [rip+0x2e449]        # 0x140032388
   140003f3f:	mov    ecx,DWORD PTR [rax]
   140003f41:	call   QWORD PTR [rip+0x2e561]        # 0x1400324a8
   140003f47:	test   al,al
   140003f49:	je     0x140003f8c
   140003f4b:	lea    rax,[rip+0x2f68e]        # 0x1400335e0
   140003f52:	mov    DWORD PTR [rbp+0x38],0x50d
   140003f59:	mov    QWORD PTR [rbp+0x30],rax
   140003f5d:	lea    r9,[rip+0x2f6ec]        # 0x140033650
   140003f64:	lea    rax,[rip+0x2f775]        # 0x1400336e0
   140003f6b:	mov    QWORD PTR [rsp+0x20],rdi
   140003f70:	mov    QWORD PTR [rbp+0x40],rax
   140003f74:	lea    r8,[rbp+0x30]
   140003f78:	mov    rax,QWORD PTR [rip+0x2e409]        # 0x140032388
   140003f7f:	mov    edx,0x4
   140003f84:	mov    ecx,DWORD PTR [rax]
   140003f86:	call   QWORD PTR [rip+0x2e50c]        # 0x140032498
   140003f8c:	call   QWORD PTR [rip+0x2e5f6]        # 0x140032588
   140003f92:	test   al,al
   140003f94:	je     0x140003fc1
   140003f96:	call   QWORD PTR [rip+0x2e4e4]        # 0x140032480
   140003f9c:	lea    rcx,[rip+0x2e809]        # 0x1400327ac
   140003fa3:	xorps  xmm0,xmm0
   140003fa6:	lea    rdx,[rbp+0x48]
   140003faa:	mov    DWORD PTR [rbp+0x50],eax
   140003fad:	mov    QWORD PTR [rbp+0x48],rcx
   140003fb1:	mov    r8b,0x1
   140003fb4:	xor    ecx,ecx
   140003fb6:	movdqu XMMWORD PTR [rbp+0x58],xmm0
   140003fbb:	call   QWORD PTR [rip+0x2e4b7]        # 0x140032478
   140003fc1:	mov    ecx,0x1
   140003fc6:	call   QWORD PTR [rip+0x2e27c]        # 0x140032248
   140003fcc:	int3   
   140003fcd:	cmp    BYTE PTR [rcx+0x1e3],0x0
   140003fd4:	je     0x140004028
   140003fd6:	add    rcx,0x1e8
   140003fdd:	call   0x14001b050
   140003fe2:	mov    rsi,rax
   140003fe5:	test   rax,rax
   140003fe8:	jne    0x140004000
   140003fea:	cmp    BYTE PTR [rax],al
   140003fec:	jne    0x140004000
   140003fee:	lea    rcx,[rip+0x2f70b]        # 0x140033700
   140003ff5:	call   QWORD PTR [rip+0x2e3b5]        # 0x1400323b0
   140003ffb:	jmp    0x14000455e
   140004000:	mov    rdx,rsi
   140004003:	mov    rcx,rdi
   140004006:	call   QWORD PTR [rip+0x2e554]        # 0x140032560
   14000400c:	test   eax,eax
   14000400e:	je     0x140004028
   140004010:	mov    r8,rsi
   140004013:	lea    rcx,[rip+0x2f766]        # 0x140033780
   14000401a:	mov    rdx,rdi
   14000401d:	call   QWORD PTR [rip+0x2e38d]        # 0x1400323b0
   140004023:	jmp    0x14000455e
   140004028:	lea    rcx,[rbx+0x168]
   14000402f:	mov    r8,rdi
   140004032:	lea    rdx,[rbp+0x3f8]
   140004039:	call   0x14001ce30
   14000403e:	mov    ecx,0xffff
   140004043:	xor    r13d,r13d
   140004046:	cmp    WORD PTR [rax],cx
   140004049:	jne    0x140004097
   14000404b:	lea    rcx,[rbx+0x168]
   140004052:	mov    r8,rdi
   140004055:	lea    rdx,[rbp+0x3e8]
   14000405c:	call   0x14001c980
   140004061:	movzx  r14d,WORD PTR [rbp+0x3e8]
   140004069:	mov    edx,DWORD PTR [rbx+0x150]
   14000406f:	cmp    edx,r14d
   140004072:	jg     0x14000408c
   140004074:	lea    r8d,[r14+0x1]
   140004078:	cmp    edx,r8d
   14000407b:	jge    0x14000408c
   14000407d:	sub    r8d,edx
   140004080:	lea    rcx,[rbx+0x150]
   140004087:	call   0x1400038c0
   14000408c:	mov    rax,QWORD PTR [rbx+0x158]
   140004093:	mov    DWORD PTR [rax+r14*4],r13d
   140004097:	lea    rcx,[rbx+0x168]
   14000409e:	mov    r8,rdi
   1400040a1:	lea    rdx,[rbp+0x3f0]
   1400040a8:	call   0x14001c980
   1400040ad:	movzx  r14d,WORD PTR [rbp+0x3f0]
   1400040b5:	mov    edx,DWORD PTR [rbx+0x150]
   1400040bb:	cmp    edx,r14d
   1400040be:	jg     0x1400040d8
   1400040c0:	lea    r8d,[r14+0x1]
   1400040c4:	cmp    edx,r8d
   1400040c7:	jge    0x1400040d8
   1400040c9:	sub    r8d,edx
   1400040cc:	lea    rcx,[rbx+0x150]
   1400040d3:	call   0x1400038c0
   1400040d8:	mov    rax,QWORD PTR [rbx+0x158]
   1400040df:	mov    ecx,DWORD PTR [rax+r14*4]
   1400040e3:	lea    rdx,[rax+r14*4]
   1400040e7:	lea    eax,[rcx+0x1]
   1400040ea:	mov    DWORD PTR [rdx],eax
   1400040ec:	test   ecx,ecx
   1400040ee:	jg     0x14000455e
   1400040f4:	mov    rcx,QWORD PTR [rip+0x4308d]        # 0x140047188
   1400040fb:	lea    rdx,[rip+0x2f3ea]        # 0x1400334ec
   140004102:	xor    r9d,r9d
   140004105:	mov    DWORD PTR [rsp+0x20],r13d
   14000410a:	xor    r8d,r8d
   14000410d:	mov    rax,QWORD PTR [rcx]
   140004110:	call   QWORD PTR [rax+0xc0]
   140004116:	mov    rcx,QWORD PTR [rip+0x4306b]        # 0x140047188
   14000411d:	lea    rdx,[rip+0x2f3d4]        # 0x1400334f8
   140004124:	xor    r9d,r9d
   140004127:	mov    DWORD PTR [rsp+0x20],r13d
   14000412c:	xor    r8d,r8d
   14000412f:	mov    esi,eax
   140004131:	mov    r10,QWORD PTR [rcx]
   140004134:	call   QWORD PTR [r10+0xc0]
   14000413b:	cmp    esi,eax
   14000413d:	cmovl  esi,eax
   140004140:	lea    eax,[rsi+0x20]
   140004143:	movsxd rcx,eax
   140004146:	and    rcx,0xfffffffffffffff0
   14000414a:	lea    rax,[rcx+0xf]
   14000414e:	cmp    rax,rcx
   140004151:	ja     0x14000415d
   140004153:	movabs rax,0xffffffffffffff0
   14000415d:	and    rax,0xfffffffffffffff0
   140004161:	call   0x1400263c0
   140004166:	mov    rcx,QWORD PTR [rip+0x4301b]        # 0x140047188
   14000416d:	lea    r12d,[rsi+0x1]
   140004171:	sub    rsp,rax
   140004174:	lea    rdx,[rip+0x2f371]        # 0x1400334ec
   14000417b:	xor    r8d,r8d
   14000417e:	mov    rax,QWORD PTR [rcx]
   140004181:	lea    r14,[rsp+0x30]
   140004186:	mov    DWORD PTR [rsp+0x20],r12d
   14000418b:	add    r14,0x10
   14000418f:	and    r14,0xffffffffffffffef
   140004193:	mov    r9,r14
   140004196:	call   QWORD PTR [rax+0xc0]
   14000419c:	test   eax,eax
   14000419e:	jne    0x1400041b2
   1400041a0:	lea    rcx,[rip+0x2f661]        # 0x140033808
   1400041a7:	call   QWORD PTR [rip+0x2e203]        # 0x1400323b0
   1400041ad:	jmp    0x14000455e
   1400041b2:	mov    rcx,rbx
   1400041b5:	call   0x140003960
   1400041ba:	mov    rdx,rdi
   1400041bd:	mov    QWORD PTR [rbp+0x0],r13
   1400041c1:	mov    rcx,rbx
   1400041c4:	movzx  r15d,al
   1400041c8:	call   0x140003b70
   1400041cd:	test   al,al
   1400041cf:	je     0x140004239
   1400041d1:	mov    r8,rdi
   1400041d4:	lea    rdx,[rbp+0x28]
   1400041d8:	mov    rcx,rbx
   1400041db:	call   0x140002db0
   1400041e0:	mov    rbx,rax
   1400041e3:	mov    rsi,QWORD PTR [rax]
   1400041e6:	cmp    QWORD PTR [rbp+0x0],r13
   1400041ea:	je     0x1400041f5
   1400041ec:	lea    rcx,[rbp+0x0]
   1400041f0:	call   0x14001b030
   1400041f5:	mov    QWORD PTR [rbp+0x0],rsi
   1400041f9:	mov    QWORD PTR [rbx],r13
   1400041fc:	cmp    QWORD PTR [rbp+0x28],r13
   140004200:	je     0x14000420b
   140004202:	lea    rcx,[rbp+0x28]
   140004206:	call   0x14001b030
   14000420b:	mov    rax,QWORD PTR [rbp+0x0]
   14000420f:	test   rax,rax
   140004212:	je     0x140004239
   140004214:	or     rcx,0xffffffffffffffff
   140004218:	nop    DWORD PTR [rax+rax*1+0x0]
   140004220:	inc    rcx
   140004223:	cmp    BYTE PTR [rax+rcx*1],r13b
   140004227:	jne    0x140004220
   140004229:	test   ecx,ecx
   14000422b:	jle    0x140004239
   14000422d:	lea    rcx,[rbp+0x0]
   140004231:	call   0x14001b050
   140004236:	mov    rdi,rax
   140004239:	mov    rcx,rdi
   14000423c:	call   QWORD PTR [rip+0x2e296]        # 0x1400324d8
   140004242:	test   al,al
   140004244:	je     0x14000431d
   14000424a:	mov    rcx,rdi
   14000424d:	call   QWORD PTR [rip+0x2e2a5]        # 0x1400324f8
   140004253:	test   rax,rax
   140004256:	je     0x1400042a9
   140004258:	lea    rdx,[rip+0x2f5d9]        # 0x140033838
   14000425f:	mov    rcx,rax
   140004262:	call   QWORD PTR [rip+0x2e2f8]        # 0x140032560
   140004268:	test   eax,eax
   14000426a:	jne    0x1400042a9
   14000426c:	mov    rcx,QWORD PTR [rip+0x42f15]        # 0x140047188
   140004273:	xor    r8d,r8d
   140004276:	add    rcx,0x8
   14000427a:	mov    rdx,rdi
   14000427d:	mov    rax,QWORD PTR [rcx]
   140004280:	call   QWORD PTR [rax+0x50]
   140004283:	test   al,al
   140004285:	je     0x1400042a9
   140004287:	mov    rcx,QWORD PTR [rip+0x42efa]        # 0x140047188
   14000428e:	lea    r8,[rip+0x2ef4f]        # 0x1400331e4
   140004295:	xor    r9d,r9d
   140004298:	mov    rdx,rdi
   14000429b:	mov    rax,QWORD PTR [rcx]
   14000429e:	call   QWORD PTR [rax+0x390]
   1400042a4:	jmp    0x14000454f
   1400042a9:	mov    rcx,QWORD PTR [rip+0x42ed8]        # 0x140047188
   1400042b0:	lea    r8,[rip+0x2ef2d]        # 0x1400331e4
   1400042b7:	mov    rdx,rdi
   1400042ba:	mov    rax,QWORD PTR [rcx]
   1400042bd:	call   QWORD PTR [rax+0xe0]
   1400042c3:	test   al,al
   1400042c5:	je     0x14000454f
   1400042cb:	mov    rcx,QWORD PTR [rip+0x42eb6]        # 0x140047188
   1400042d2:	lea    r8,[rip+0x2ef0b]        # 0x1400331e4
   1400042d9:	xor    r9d,r9d
   1400042dc:	mov    DWORD PTR [rsp+0x20],0x2
   1400042e4:	mov    rdx,rdi
   1400042e7:	mov    rax,QWORD PTR [rcx]
   1400042ea:	call   QWORD PTR [rax+0x68]
   1400042ed:	test   r15b,r15b
   1400042f0:	je     0x14000454f
   1400042f6:	mov    rcx,QWORD PTR [rip+0x42e8b]        # 0x140047188
   1400042fd:	lea    r8,[rip+0x2f0bc]        # 0x1400333c0
   140004304:	xor    r9d,r9d
   140004307:	mov    DWORD PTR [rsp+0x20],0x2
   14000430f:	mov    rdx,rdi
   140004312:	mov    rax,QWORD PTR [rcx]
   140004315:	call   QWORD PTR [rax+0x68]
   140004318:	jmp    0x14000454f
   14000431d:	lea    r8,[rbp+0x8]
   140004321:	mov    DWORD PTR [rbp+0x8],r13d
   140004325:	lea    rdx,[rip+0x2f510]        # 0x14003383c
   14000432c:	mov    QWORD PTR [rbp+0x10],r13
   140004330:	mov    rcx,r14
   140004333:	mov    QWORD PTR [rbp+0x18],r13
   140004337:	call   QWORD PTR [rip+0x2e293]        # 0x1400325d0
   14000433d:	mov    eax,DWORD PTR [rbp+0x8]
   140004340:	sub    eax,0x1
   140004343:	movsxd rsi,eax
   140004346:	js     0x140004434
   14000434c:	nop    DWORD PTR [rax+0x0]
   140004350:	mov    rax,QWORD PTR [rbp+0x10]
   140004354:	lea    r8,[rbp+0x70]
   140004358:	mov    r9d,0x104
   14000435e:	mov    rdx,rdi
   140004361:	mov    rbx,QWORD PTR [rax+rsi*8]
   140004365:	mov    rcx,rbx
   140004368:	call   QWORD PTR [rip+0x2e192]        # 0x140032500
   14000436e:	mov    r9,rdi
   140004371:	lea    rdx,[rip+0x2f4c8]        # 0x140033840
   140004378:	mov    r8,rbx
   14000437b:	lea    rcx,[rbp+0x180]
   140004382:	call   0x140001570
   140004387:	mov    rcx,QWORD PTR [rip+0x42dfa]        # 0x140047188
   14000438e:	lea    rdx,[rbp+0x70]
   140004392:	add    rcx,0x8
   140004396:	xor    r8d,r8d
   140004399:	mov    rax,QWORD PTR [rcx]
   14000439c:	call   QWORD PTR [rax+0x50]
   14000439f:	mov    rcx,QWORD PTR [rip+0x42de2]        # 0x140047188
   1400043a6:	test   al,al
   1400043a8:	je     0x1400043f0
   1400043aa:	mov    rax,QWORD PTR [rcx]
   1400043ad:	lea    r8,[rip+0x2ee30]        # 0x1400331e4
   1400043b4:	xor    r9d,r9d
   1400043b7:	mov    DWORD PTR [rsp+0x20],0x2
   1400043bf:	lea    rdx,[rbp+0x70]
   1400043c3:	call   QWORD PTR [rax+0x68]
   1400043c6:	test   r15b,r15b
   1400043c9:	je     0x14000442a
   1400043cb:	mov    rcx,QWORD PTR [rip+0x42db6]        # 0x140047188
   1400043d2:	lea    r8,[rip+0x2efe7]        # 0x1400333c0
   1400043d9:	xor    r9d,r9d
   1400043dc:	mov    DWORD PTR [rsp+0x20],0x2
   1400043e4:	lea    rdx,[rbp+0x70]
   1400043e8:	mov    rax,QWORD PTR [rcx]
   1400043eb:	call   QWORD PTR [rax+0x68]
   1400043ee:	jmp    0x14000442a
   1400043f0:	mov    rax,QWORD PTR [rcx+0x8]
   1400043f4:	lea    rdx,[rbp+0x180]
   1400043fb:	add    rcx,0x8
   1400043ff:	xor    r8d,r8d
   140004402:	call   QWORD PTR [rax+0x50]
   140004405:	test   al,al
   140004407:	je     0x14000442a
   140004409:	mov    rcx,QWORD PTR [rip+0x42d78]        # 0x140047188
   140004410:	lea    r8,[rip+0x2edcd]        # 0x1400331e4
   140004417:	xor    r9d,r9d
   14000441a:	lea    rdx,[rbp+0x180]
   140004421:	mov    rax,QWORD PTR [rcx]
   140004424:	call   QWORD PTR [rax+0x390]
   14000442a:	sub    rsi,0x1
   14000442e:	jns    0x140004350
   140004434:	mov    rcx,QWORD PTR [rip+0x42d4d]        # 0x140047188
   14000443b:	lea    rdx,[rip+0x2f0b6]        # 0x1400334f8
   140004442:	mov    r9,r14
   140004445:	mov    DWORD PTR [rsp+0x20],r12d
   14000444a:	xor    r8d,r8d
   14000444d:	mov    rax,QWORD PTR [rcx]
   140004450:	call   QWORD PTR [rax+0xc0]
   140004456:	test   eax,eax
   140004458:	jne    0x14000446c
   14000445a:	lea    rcx,[rip+0x2f3ef]        # 0x140033850
   140004461:	call   QWORD PTR [rip+0x2df49]        # 0x1400323b0
   140004467:	jmp    0x1400044f6
   14000446c:	lea    r8,[rbp+0x8]
   140004470:	mov    DWORD PTR [rbp+0x8],r13d
   140004474:	lea    rdx,[rip+0x2f3c1]        # 0x14003383c
   14000447b:	mov    rcx,r14
   14000447e:	call   QWORD PTR [rip+0x2e14c]        # 0x1400325d0
   140004484:	mov    eax,DWORD PTR [rbp+0x8]
   140004487:	sub    eax,0x1
   14000448a:	movsxd rbx,eax
   14000448d:	js     0x1400044f6
   14000448f:	nop
   140004490:	mov    rcx,QWORD PTR [rbp+0x10]
   140004494:	lea    r8,[rbp+0x290]
   14000449b:	mov    r9d,0x104
   1400044a1:	mov    rdx,rdi
   1400044a4:	mov    rcx,QWORD PTR [rcx+rbx*8]
   1400044a8:	call   QWORD PTR [rip+0x2e052]        # 0x140032500
   1400044ae:	mov    rcx,QWORD PTR [rip+0x42cd3]        # 0x140047188
   1400044b5:	lea    rdx,[rbp+0x290]
   1400044bc:	add    rcx,0x8
   1400044c0:	xor    r8d,r8d
   1400044c3:	mov    rax,QWORD PTR [rcx]
   1400044c6:	call   QWORD PTR [rax+0x50]
   1400044c9:	test   al,al
   1400044cb:	je     0x1400044f0
   1400044cd:	mov    rcx,QWORD PTR [rip+0x42cb4]        # 0x140047188
   1400044d4:	lea    r8,[rip+0x2efa5]        # 0x140033480
   1400044db:	xor    r9d,r9d
   1400044de:	mov    DWORD PTR [rsp+0x20],r13d
   1400044e3:	lea    rdx,[rbp+0x290]
   1400044ea:	mov    rax,QWORD PTR [rcx]
   1400044ed:	call   QWORD PTR [rax+0x68]
   1400044f0:	sub    rbx,0x1
   1400044f4:	jns    0x140004490
   1400044f6:	mov    eax,DWORD PTR [rbp+0x1c]
   1400044f9:	mov    rdx,QWORD PTR [rbp+0x10]
   1400044fd:	mov    DWORD PTR [rbp+0x8],r13d
   140004501:	test   eax,0xc0000000
   140004506:	jne    0x14000454f
   140004508:	test   rdx,rdx
   14000450b:	je     0x140004527
   14000450d:	mov    rax,QWORD PTR [rip+0x2de7c]        # 0x140032390
   140004514:	mov    rcx,QWORD PTR [rax]
   140004517:	mov    rax,QWORD PTR [rcx]
   14000451a:	call   QWORD PTR [rax+0x28]
   14000451d:	mov    eax,DWORD PTR [rbp+0x1c]
   140004520:	mov    rdx,r13
   140004523:	mov    QWORD PTR [rbp+0x10],rdx
   140004527:	mov    DWORD PTR [rbp+0x18],r13d
   14000452b:	test   eax,0xc0000000
   140004530:	jne    0x14000454f
   140004532:	test   rdx,rdx
   140004535:	je     0x14000454b
   140004537:	mov    rax,QWORD PTR [rip+0x2de52]        # 0x140032390
   14000453e:	mov    rcx,QWORD PTR [rax]
   140004541:	mov    rax,QWORD PTR [rcx]
   140004544:	call   QWORD PTR [rax+0x28]
   140004547:	mov    QWORD PTR [rbp+0x10],r13
   14000454b:	mov    DWORD PTR [rbp+0x18],r13d
   14000454f:	cmp    QWORD PTR [rbp+0x0],r13
   140004553:	je     0x14000455e
   140004555:	lea    rcx,[rbp+0x0]
   140004559:	call   0x14001b030
   14000455e:	mov    rbx,QWORD PTR [rbp+0x3e0]
   140004565:	lea    rsp,[rbp+0x3a0]
   14000456c:	pop    r15
   14000456e:	pop    r14
   140004570:	pop    r13
   140004572:	pop    r12
   140004574:	pop    rdi
   140004575:	pop    rsi
   140004576:	pop    rbp
   140004577:	ret    
   140004578:	int3   
   140004579:	int3   
   14000457a:	int3   
   14000457b:	int3   
   14000457c:	int3   
   14000457d:	int3   
   14000457e:	int3   
   14000457f:	int3   
   140004580:	mov    rcx,QWORD PTR [rcx+0x8]
   140004584:	jmp    0x140003ef0
   140004589:	int3   
   14000458a:	int3   
   14000458b:	int3   
   14000458c:	int3   
   14000458d:	int3   
   14000458e:	int3   
   14000458f:	int3   
   140004590:	rex push rbx
   140004592:	sub    rsp,0x20
   140004596:	mov    rbx,rcx
   140004599:	mov    rcx,QWORD PTR [rip+0x42c18]        # 0x1400471b8
   1400045a0:	test   rcx,rcx
   1400045a3:	je     0x1400045b5
   1400045a5:	mov    rax,QWORD PTR [rcx]
   1400045a8:	movzx  edx,BYTE PTR [rbx+0xf8]
   1400045af:	call   QWORD PTR [rax+0xb0]
   1400045b5:	cmp    QWORD PTR [rip+0x42c0b],0x0        # 0x1400471c8
   1400045bd:	je     0x1400045eb
   1400045bf:	cmp    DWORD PTR [rbx+0x13c],0x0
   1400045c6:	jg     0x1400045eb
   1400045c8:	cmp    DWORD PTR [rbx+0x1d8],0x0
   1400045cf:	jle    0x1400045de
   1400045d1:	mov    BYTE PTR [rbx+0x1dc],0x1
   1400045d8:	add    rsp,0x20
   1400045dc:	pop    rbx
   1400045dd:	ret    
   1400045de:	mov    rcx,rbx
   1400045e1:	add    rsp,0x20
   1400045e5:	pop    rbx
   1400045e6:	jmp    0x140003d20
   1400045eb:	add    rsp,0x20
   1400045ef:	pop    rbx
   1400045f0:	ret    
   1400045f1:	int3   
   1400045f2:	int3   
   1400045f3:	int3   
   1400045f4:	int3   
   1400045f5:	int3   
   1400045f6:	int3   
   1400045f7:	int3   
   1400045f8:	int3   
   1400045f9:	int3   
   1400045fa:	int3   
   1400045fb:	int3   
   1400045fc:	int3   
   1400045fd:	int3   
   1400045fe:	int3   
   1400045ff:	int3   
   140004600:	sub    rsp,0x28
   140004604:	mov    ecx,DWORD PTR [rip+0x42a3a]        # 0x140047044
   14000460a:	mov    edx,0x1
   14000460f:	call   QWORD PTR [rip+0x2de93]        # 0x1400324a8
   140004615:	test   al,al
   140004617:	je     0x140004631
   140004619:	mov    ecx,DWORD PTR [rip+0x42a25]        # 0x140047044
   14000461f:	lea    r8,[rip+0x2f4e2]        # 0x140033b08
   140004626:	mov    edx,0x1
   14000462b:	call   QWORD PTR [rip+0x2de6f]        # 0x1400324a0
   140004631:	mov    ecx,DWORD PTR [rip+0x42a0d]        # 0x140047044
   140004637:	mov    edx,0x1
   14000463c:	call   QWORD PTR [rip+0x2de66]        # 0x1400324a8
   140004642:	test   al,al
   140004644:	je     0x14000465e
   140004646:	mov    ecx,DWORD PTR [rip+0x429f8]        # 0x140047044
   14000464c:	lea    r8,[rip+0x2f4dd]        # 0x140033b30
   140004653:	mov    edx,0x1
   140004658:	call   QWORD PTR [rip+0x2de42]        # 0x1400324a0
   14000465e:	mov    ecx,DWORD PTR [rip+0x429e0]        # 0x140047044
   140004664:	mov    edx,0x1
   140004669:	call   QWORD PTR [rip+0x2de39]        # 0x1400324a8
   14000466f:	test   al,al
   140004671:	je     0x14000468b
   140004673:	mov    ecx,DWORD PTR [rip+0x429cb]        # 0x140047044
   140004679:	lea    r8,[rip+0x2f4c0]        # 0x140033b40
   140004680:	mov    edx,0x1
   140004685:	call   QWORD PTR [rip+0x2de15]        # 0x1400324a0
   14000468b:	mov    ecx,DWORD PTR [rip+0x429b3]        # 0x140047044
   140004691:	mov    edx,0x1
   140004696:	call   QWORD PTR [rip+0x2de0c]        # 0x1400324a8
   14000469c:	test   al,al
   14000469e:	je     0x1400046b8
   1400046a0:	mov    ecx,DWORD PTR [rip+0x4299e]        # 0x140047044
   1400046a6:	lea    r8,[rip+0x2f4ab]        # 0x140033b58
   1400046ad:	mov    edx,0x1
   1400046b2:	call   QWORD PTR [rip+0x2dde8]        # 0x1400324a0
   1400046b8:	mov    ecx,DWORD PTR [rip+0x42986]        # 0x140047044
   1400046be:	mov    edx,0x1
   1400046c3:	call   QWORD PTR [rip+0x2dddf]        # 0x1400324a8
   1400046c9:	test   al,al
   1400046cb:	je     0x1400046ea
   1400046cd:	mov    ecx,DWORD PTR [rip+0x42971]        # 0x140047044
   1400046d3:	lea    r8,[rip+0x2f4b6]        # 0x140033b90
   1400046da:	mov    edx,0x1
   1400046df:	add    rsp,0x28
   1400046e3:	rex.W jmp QWORD PTR [rip+0x2ddb6]        # 0x1400324a0
   1400046ea:	add    rsp,0x28
   1400046ee:	ret    
   1400046ef:	int3   
   1400046f0:	mov    rax,rsp
   1400046f3:	push   rsi
   1400046f4:	push   r14
   1400046f6:	sub    rsp,0x78
   1400046fa:	mov    QWORD PTR [rax+0x8],rbx
   1400046fe:	xor    r14d,r14d
   140004701:	mov    QWORD PTR [rax-0x18],rbp
   140004705:	xor    ebp,ebp
   140004707:	mov    QWORD PTR [rax-0x20],rdi
   14000470b:	xor    edi,edi
   14000470d:	mov    QWORD PTR [rax-0x28],r12
   140004711:	xor    r12b,r12b
   140004714:	mov    QWORD PTR [rax-0x30],r13
   140004718:	mov    r13,rdx
   14000471b:	mov    QWORD PTR [rax-0x38],r15
   14000471f:	mov    r15,rcx
   140004722:	mov    DWORD PTR [rax-0x60],edi
   140004725:	mov    QWORD PTR [rax-0x68],r14
   140004729:	mov    QWORD PTR [rax-0x58],r14
   14000472d:	mov    QWORD PTR [rax-0x50],rbp
   140004731:	mov    BYTE PTR [rsp+0xa0],0x0
   140004739:	call   QWORD PTR [rip+0x2dd79]        # 0x1400324b8
   14000473f:	mov    rcx,rax
   140004742:	mov    rdx,QWORD PTR [rax]
   140004745:	call   QWORD PTR [rdx+0x38]
   140004748:	cmp    eax,0x1
   14000474b:	jne    0x14000475a
   14000474d:	call   0x140004600
   140004752:	xor    sil,sil
   140004755:	jmp    0x1400049bf
   14000475a:	mov    esi,0x1
   14000475f:	call   QWORD PTR [rip+0x2dd53]        # 0x1400324b8
   140004765:	mov    rcx,rax
   140004768:	mov    rdx,QWORD PTR [rax]
   14000476b:	call   QWORD PTR [rdx+0x38]
   14000476e:	cmp    eax,esi
   140004770:	jle    0x14000489d
   140004776:	call   QWORD PTR [rip+0x2dd3c]        # 0x1400324b8
   14000477c:	mov    edx,esi
   14000477e:	mov    rcx,rax
   140004781:	mov    r8,QWORD PTR [rax]
   140004784:	call   QWORD PTR [r8+0x48]
   140004788:	mov    rcx,rax
   14000478b:	lea    rdx,[rip+0x2f446]        # 0x140033bd8
   140004792:	mov    rbx,rax
   140004795:	call   QWORD PTR [rip+0x2ddc5]        # 0x140032560
   14000479b:	test   eax,eax
   14000479d:	je     0x14000474d
   14000479f:	lea    rdx,[rip+0x2f436]        # 0x140033bdc
   1400047a6:	mov    rcx,rbx
   1400047a9:	call   QWORD PTR [rip+0x2ddb1]        # 0x140032560
   1400047af:	test   eax,eax
   1400047b1:	jne    0x1400047c0
   1400047b3:	mov    BYTE PTR [rsp+0xa0],0x1
   1400047bb:	jmp    0x140004884
   1400047c0:	lea    rdx,[rip+0x2f419]        # 0x140033be0
   1400047c7:	mov    rcx,rbx
   1400047ca:	call   QWORD PTR [rip+0x2dd90]        # 0x140032560
   1400047d0:	test   eax,eax
   1400047d2:	jne    0x1400047de
   1400047d4:	mov    BYTE PTR [r13+0x0],0x1
   1400047d9:	jmp    0x140004884
   1400047de:	lea    rdx,[rip+0x2f3ff]        # 0x140033be4
   1400047e5:	mov    rcx,rbx
   1400047e8:	call   QWORD PTR [rip+0x2dd72]        # 0x140032560
   1400047ee:	test   eax,eax
   1400047f0:	jne    0x1400047fa
   1400047f2:	mov    r12b,0x1
   1400047f5:	jmp    0x140004884
   1400047fa:	mov    rdx,rbx
   1400047fd:	mov    QWORD PTR [rsp+0xa8],0x0
   140004809:	lea    rcx,[rsp+0xa8]
   140004811:	call   0x14001b3a0
   140004816:	movsxd rbx,edi
   140004819:	cmp    edi,ebp
   14000481b:	jne    0x14000483e
   14000481d:	mov    edx,0x1
   140004822:	lea    rcx,[rsp+0x30]
   140004827:	call   0x140013420
   14000482c:	mov    r14,QWORD PTR [rsp+0x30]
   140004831:	mov    ebp,DWORD PTR [rsp+0x38]
   140004835:	mov    edi,DWORD PTR [rsp+0x28]
   140004839:	mov    QWORD PTR [rsp+0x20],r14
   14000483e:	inc    edi
   140004840:	lea    rbx,[r14+rbx*8]
   140004844:	mov    DWORD PTR [rsp+0x28],edi
   140004848:	test   rbx,rbx
   14000484b:	je     0x14000486c
   14000484d:	lea    rcx,[rsp+0xa8]
   140004855:	mov    QWORD PTR [rbx],0x0
   14000485c:	call   0x14001b050
   140004861:	mov    rdx,rax
   140004864:	mov    rcx,rbx
   140004867:	call   0x14001b3a0
   14000486c:	cmp    QWORD PTR [rsp+0xa8],0x0
   140004875:	je     0x140004884
   140004877:	lea    rcx,[rsp+0xa8]
   14000487f:	call   0x14001b030
   140004884:	inc    esi
   140004886:	call   QWORD PTR [rip+0x2dc2c]        # 0x1400324b8
   14000488c:	mov    rcx,rax
   14000488f:	mov    rdx,QWORD PTR [rax]
   140004892:	call   QWORD PTR [rdx+0x38]
   140004895:	cmp    esi,eax
   140004897:	jl     0x140004776
   14000489d:	test   edi,edi
   14000489f:	jle    0x1400048ec
   1400048a1:	mov    rsi,r14
   1400048a4:	mov    ebp,edi
   1400048a6:	movzx  r14d,BYTE PTR [rsp+0xa0]
   1400048af:	nop
   1400048b0:	cmp    BYTE PTR [r13+0x0],0x0
   1400048b5:	jne    0x1400048c0
   1400048b7:	test   r12b,r12b
   1400048ba:	jne    0x1400048c0
   1400048bc:	xor    ebx,ebx
   1400048be:	jmp    0x1400048c2
   1400048c0:	mov    bl,0x1
   1400048c2:	mov    rcx,rsi
   1400048c5:	call   0x14001b050
   1400048ca:	mov    rcx,rax
   1400048cd:	mov    r9,r15
   1400048d0:	movzx  r8d,bl
   1400048d4:	movzx  edx,r14b
   1400048d8:	call   0x140003bb0
   1400048dd:	add    rsi,0x8
   1400048e1:	sub    rbp,0x1
   1400048e5:	jne    0x1400048b0
   1400048e7:	mov    r14,QWORD PTR [rsp+0x20]
   1400048ec:	cmp    DWORD PTR [r15],0x0
   1400048f0:	jne    0x14000492b
   1400048f2:	mov    ecx,DWORD PTR [rip+0x4274c]        # 0x140047044
   1400048f8:	mov    edx,0x2
   1400048fd:	call   QWORD PTR [rip+0x2dba5]        # 0x1400324a8
   140004903:	test   al,al
   140004905:	je     0x1400049b7
   14000490b:	mov    ecx,DWORD PTR [rip+0x42733]        # 0x140047044
   140004911:	lea    r8,[rip+0x2f2d0]        # 0x140033be8
   140004918:	mov    edx,0x2
   14000491d:	call   QWORD PTR [rip+0x2db7d]        # 0x1400324a0
   140004923:	xor    sil,sil
   140004926:	jmp    0x1400049bf
   14000492b:	test   r12b,r12b
   14000492e:	je     0x1400049bc
   140004934:	mov    ecx,DWORD PTR [rip+0x4270a]        # 0x140047044
   14000493a:	mov    edx,0x1
   14000493f:	call   QWORD PTR [rip+0x2db63]        # 0x1400324a8
   140004945:	test   al,al
   140004947:	je     0x140004961
   140004949:	mov    ecx,DWORD PTR [rip+0x426f5]        # 0x140047044
   14000494f:	lea    r8,[rip+0x2f2b2]        # 0x140033c08
   140004956:	mov    edx,0x1
   14000495b:	call   QWORD PTR [rip+0x2db3f]        # 0x1400324a0
   140004961:	xor    ebx,ebx
   140004963:	cmp    DWORD PTR [r15],ebx
   140004966:	jle    0x1400049b7
   140004968:	nop    DWORD PTR [rax+rax*1+0x0]
   140004970:	mov    ecx,DWORD PTR [rip+0x426ce]        # 0x140047044
   140004976:	mov    edx,0x1
   14000497b:	call   QWORD PTR [rip+0x2db27]        # 0x1400324a8
   140004981:	test   al,al
   140004983:	je     0x1400049b0
   140004985:	mov    rax,QWORD PTR [r15+0x8]
   140004989:	movsxd rcx,ebx
   14000498c:	lea    rcx,[rax+rcx*8]
   140004990:	call   0x14001b050
   140004995:	mov    ecx,DWORD PTR [rip+0x426a9]        # 0x140047044
   14000499b:	lea    r8,[rip+0x2f286]        # 0x140033c28
   1400049a2:	mov    r9,rax
   1400049a5:	mov    edx,0x1
   1400049aa:	call   QWORD PTR [rip+0x2daf0]        # 0x1400324a0
   1400049b0:	inc    ebx
   1400049b2:	cmp    ebx,DWORD PTR [r15]
   1400049b5:	jl     0x140004970
   1400049b7:	xor    sil,sil
   1400049ba:	jmp    0x1400049bf
   1400049bc:	mov    sil,0x1
   1400049bf:	mov    r15,QWORD PTR [rsp+0x50]
   1400049c4:	lea    eax,[rdi-0x1]
   1400049c7:	mov    r13,QWORD PTR [rsp+0x58]
   1400049cc:	mov    r12,QWORD PTR [rsp+0x60]
   1400049d1:	mov    rbp,QWORD PTR [rsp+0x70]
   1400049d6:	movsxd rdi,eax
   1400049d9:	test   eax,eax
   1400049db:	js     0x1400049f9
   1400049dd:	lea    rbx,[r14+rdi*8]
   1400049e1:	cmp    QWORD PTR [rbx],0x0
   1400049e5:	je     0x1400049ef
   1400049e7:	mov    rcx,rbx
   1400049ea:	call   0x14001b030
   1400049ef:	sub    rbx,0x8
   1400049f3:	sub    rdi,0x1
   1400049f7:	jns    0x1400049e1
   1400049f9:	mov    ebx,DWORD PTR [rsp+0x3c]
   1400049fd:	mov    rdi,QWORD PTR [rsp+0x68]
   140004a02:	and    ebx,0xc0000000
   140004a08:	jne    0x140004a25
   140004a0a:	test   r14,r14
   140004a0d:	je     0x140004a25
   140004a0f:	mov    rax,QWORD PTR [rip+0x2d97a]        # 0x140032390
   140004a16:	mov    rdx,r14
   140004a19:	mov    rcx,QWORD PTR [rax]
   140004a1c:	mov    rax,QWORD PTR [rcx]
   140004a1f:	call   QWORD PTR [rax+0x28]
   140004a22:	xor    r14d,r14d
   140004a25:	test   ebx,ebx
   140004a27:	mov    rbx,QWORD PTR [rsp+0x90]
   140004a2f:	jne    0x140004a4a
   140004a31:	test   r14,r14
   140004a34:	je     0x140004a4a
   140004a36:	mov    rcx,QWORD PTR [rip+0x2d953]        # 0x140032390
   140004a3d:	mov    rdx,r14
   140004a40:	mov    rcx,QWORD PTR [rcx]
   140004a43:	mov    r8,QWORD PTR [rcx]
   140004a46:	call   QWORD PTR [r8+0x28]
   140004a4a:	movzx  eax,sil
   140004a4e:	add    rsp,0x78
   140004a52:	pop    r14
   140004a54:	pop    rsi
   140004a55:	ret    
   140004a56:	int3   
   140004a57:	int3   
   140004a58:	int3   
   140004a59:	int3   
   140004a5a:	int3   
   140004a5b:	int3   
   140004a5c:	int3   
   140004a5d:	int3   
   140004a5e:	int3   
   140004a5f:	int3   
   140004a60:	mov    QWORD PTR [rsp+0x8],rbx
   140004a65:	push   rdi
   140004a66:	sub    rsp,0x20
   140004a6a:	mov    eax,DWORD PTR [rcx]
   140004a6c:	mov    rdi,rcx
   140004a6f:	sub    eax,0x1
   140004a72:	movsxd rbx,eax
   140004a75:	js     0x140004a9a
   140004a77:	nop    WORD PTR [rax+rax*1+0x0]
   140004a80:	mov    rax,QWORD PTR [rdi+0x8]
   140004a84:	cmp    QWORD PTR [rax+rbx*8],0x0
   140004a89:	lea    rcx,[rax+rbx*8]
   140004a8d:	je     0x140004a94
   140004a8f:	call   0x14001b030
   140004a94:	sub    rbx,0x1
   140004a98:	jns    0x140004a80
   140004a9a:	xor    ebx,ebx
   140004a9c:	mov    DWORD PTR [rdi],ebx
   140004a9e:	test   DWORD PTR [rdi+0x14],0xc0000000
   140004aa5:	jne    0x140004ac7
   140004aa7:	mov    rdx,QWORD PTR [rdi+0x8]
   140004aab:	test   rdx,rdx
   140004aae:	je     0x140004ac4
   140004ab0:	mov    rax,QWORD PTR [rip+0x2d8d9]        # 0x140032390
   140004ab7:	mov    rcx,QWORD PTR [rax]
   140004aba:	mov    rax,QWORD PTR [rcx]
   140004abd:	call   QWORD PTR [rax+0x28]
   140004ac0:	mov    QWORD PTR [rdi+0x8],rbx
   140004ac4:	mov    DWORD PTR [rdi+0x10],ebx
   140004ac7:	mov    rbx,QWORD PTR [rsp+0x30]
   140004acc:	add    rsp,0x20
   140004ad0:	pop    rdi
   140004ad1:	ret    
   140004ad2:	int3   
   140004ad3:	int3   
   140004ad4:	int3   
   140004ad5:	int3   
   140004ad6:	int3   
   140004ad7:	int3   
   140004ad8:	int3   
   140004ad9:	int3   
   140004ada:	int3   
   140004adb:	int3   
   140004adc:	int3   
   140004add:	int3   
   140004ade:	int3   
   140004adf:	int3   
   140004ae0:	xor    eax,eax
   140004ae2:	ret    
   140004ae3:	int3   
   140004ae4:	int3   
   140004ae5:	int3   
   140004ae6:	int3   
   140004ae7:	int3   
   140004ae8:	int3   
   140004ae9:	int3   
   140004aea:	int3   
   140004aeb:	int3   
   140004aec:	int3   
   140004aed:	int3   
   140004aee:	int3   
   140004aef:	int3   
   140004af0:	mov    rcx,rdx
   140004af3:	mov    rdx,r8
   140004af6:	jmp    0x14000bf90
   140004afb:	int3   
   140004afc:	int3   
   140004afd:	int3   
   140004afe:	int3   
   140004aff:	int3   
   140004b00:	mov    QWORD PTR [rsp+0x10],rdx
   140004b05:	push   rbx
   140004b06:	sub    rsp,0x20
   140004b0a:	mov    rax,rdx
   140004b0d:	mov    rbx,rcx
   140004b10:	mov    rcx,rax
   140004b13:	mov    rdx,r8
   140004b16:	call   0x14000bf90
   140004b1b:	mov    edx,0x1
   140004b20:	lea    rcx,[rsp+0x38]
   140004b25:	call   0x140024f20
   140004b2a:	inc    DWORD PTR [rbx+0x10]
   140004b2d:	add    rsp,0x20
   140004b31:	pop    rbx
   140004b32:	ret    
   140004b33:	int3   
   140004b34:	int3   
   140004b35:	int3   
   140004b36:	int3   
   140004b37:	int3   
   140004b38:	int3   
   140004b39:	int3   
   140004b3a:	int3   
   140004b3b:	int3   
   140004b3c:	int3   
   140004b3d:	int3   
   140004b3e:	int3   
   140004b3f:	int3   
   140004b40:	rex push rbp
   140004b42:	push   r14
   140004b44:	push   r15
   140004b46:	sub    rsp,0x450
   140004b4d:	lea    rbp,[rsp+0x30]
   140004b52:	mov    rcx,QWORD PTR [rip+0x4262f]        # 0x140047188
   140004b59:	mov    r14,r9
   140004b5c:	mov    QWORD PTR [rbp+0x440],rbx
   140004b63:	mov    r15,rdx
   140004b66:	mov    QWORD PTR [rbp+0x448],rsi
   140004b6d:	xor    r9d,r9d
   140004b70:	mov    QWORD PTR [rbp+0x450],rdi
   140004b77:	mov    rdi,r8
   140004b7a:	mov    rax,QWORD PTR [rcx]
   140004b7d:	xor    r8d,r8d
   140004b80:	mov    QWORD PTR [rbp+0x458],r12
   140004b87:	mov    rdx,rdi
   140004b8a:	xor    r12d,r12d
   140004b8d:	mov    DWORD PTR [rsp+0x20],r12d
   140004b92:	call   QWORD PTR [rax+0xc0]
   140004b98:	mov    edx,eax
   140004b9a:	lea    ecx,[rax+0x20]
   140004b9d:	movsxd r8,ecx
   140004ba0:	and    r8,0xfffffffffffffff0
   140004ba4:	lea    rax,[r8+0xf]
   140004ba8:	cmp    rax,r8
   140004bab:	ja     0x140004bb7
   140004bad:	movabs rax,0xffffffffffffff0
   140004bb7:	and    rax,0xfffffffffffffff0
   140004bbb:	call   0x1400263c0
   140004bc0:	mov    rcx,QWORD PTR [rip+0x425c1]        # 0x140047188
   140004bc7:	sub    rsp,rax
   140004bca:	lea    eax,[rdx+0x1]
   140004bcd:	xor    r8d,r8d
   140004bd0:	mov    rdx,rdi
   140004bd3:	mov    r10,QWORD PTR [rcx]
   140004bd6:	lea    rbx,[rsp+0x30]
   140004bdb:	add    rbx,0x10
   140004bdf:	mov    DWORD PTR [rsp+0x20],eax
   140004be3:	and    rbx,0xffffffffffffffef
   140004be7:	mov    r9,rbx
   140004bea:	call   QWORD PTR [r10+0xc0]
   140004bf1:	test   eax,eax
   140004bf3:	jne    0x140004c0a
   140004bf5:	mov    rdx,rdi
   140004bf8:	lea    rcx,[rip+0x2ec99]        # 0x140033898
   140004bff:	call   QWORD PTR [rip+0x2d7ab]        # 0x1400323b0
   140004c05:	jmp    0x140004cfe
   140004c0a:	lea    r8,[rbp+0x0]
   140004c0e:	mov    DWORD PTR [rbp+0x0],r12d
   140004c12:	lea    rdx,[rip+0x2ec23]        # 0x14003383c
   140004c19:	mov    QWORD PTR [rbp+0x8],r12
   140004c1d:	mov    rcx,rbx
   140004c20:	mov    QWORD PTR [rbp+0x10],r12
   140004c24:	call   QWORD PTR [rip+0x2d9a6]        # 0x1400325d0
   140004c2a:	mov    esi,r12d
   140004c2d:	cmp    DWORD PTR [rbp+0x0],r12d
   140004c31:	jle    0x140004cad
   140004c33:	mov    rdi,r12
   140004c36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140004c40:	mov    rax,QWORD PTR [rbp+0x8]
   140004c44:	lea    r8,[rbp+0x20]
   140004c48:	mov    r9d,0x200
   140004c4e:	mov    rdx,r14
   140004c51:	mov    rbx,QWORD PTR [rdi+rax*1]
   140004c55:	mov    rcx,rbx
   140004c58:	call   QWORD PTR [rip+0x2d8a2]        # 0x140032500
   140004c5e:	mov    r9,r14
   140004c61:	lea    rdx,[rip+0x2ebd8]        # 0x140033840
   140004c68:	mov    r8,rbx
   140004c6b:	lea    rcx,[rbp+0x220]
   140004c72:	call   0x1400015a0
   140004c77:	mov    rcx,QWORD PTR [rip+0x4250a]        # 0x140047188
   140004c7e:	lea    rdx,[rbp+0x20]
   140004c82:	mov    r8,r15
   140004c85:	mov    rax,QWORD PTR [rcx]
   140004c88:	call   QWORD PTR [rax+0x70]
   140004c8b:	mov    rcx,QWORD PTR [rip+0x424f6]        # 0x140047188
   140004c92:	lea    rdx,[rbp+0x220]
   140004c99:	mov    r8,r15
   140004c9c:	mov    rax,QWORD PTR [rcx]
   140004c9f:	call   QWORD PTR [rax+0x70]
   140004ca2:	inc    esi
   140004ca4:	lea    rdi,[rdi+0x8]
   140004ca8:	cmp    esi,DWORD PTR [rbp+0x0]
   140004cab:	jl     0x140004c40
   140004cad:	mov    eax,DWORD PTR [rbp+0x14]
   140004cb0:	mov    rdx,QWORD PTR [rbp+0x8]
   140004cb4:	mov    DWORD PTR [rbp+0x0],r12d
   140004cb8:	test   eax,0xc0000000
   140004cbd:	jne    0x140004cfe
   140004cbf:	test   rdx,rdx
   140004cc2:	je     0x140004cde
   140004cc4:	mov    rax,QWORD PTR [rip+0x2d6c5]        # 0x140032390
   140004ccb:	mov    rcx,QWORD PTR [rax]
   140004cce:	mov    rax,QWORD PTR [rcx]
   140004cd1:	call   QWORD PTR [rax+0x28]
   140004cd4:	mov    eax,DWORD PTR [rbp+0x14]
   140004cd7:	mov    rdx,r12
   140004cda:	mov    QWORD PTR [rbp+0x8],rdx
   140004cde:	mov    DWORD PTR [rbp+0x10],r12d
   140004ce2:	test   eax,0xc0000000
   140004ce7:	jne    0x140004cfe
   140004ce9:	test   rdx,rdx
   140004cec:	je     0x140004cfe
   140004cee:	mov    rax,QWORD PTR [rip+0x2d69b]        # 0x140032390
   140004cf5:	mov    rcx,QWORD PTR [rax]
   140004cf8:	mov    rax,QWORD PTR [rcx]
   140004cfb:	call   QWORD PTR [rax+0x28]
   140004cfe:	mov    rbx,QWORD PTR [rbp+0x440]
   140004d05:	mov    rsi,QWORD PTR [rbp+0x448]
   140004d0c:	mov    rdi,QWORD PTR [rbp+0x450]
   140004d13:	mov    r12,QWORD PTR [rbp+0x458]
   140004d1a:	lea    rsp,[rbp+0x420]
   140004d21:	pop    r15
   140004d23:	pop    r14
   140004d25:	pop    rbp
   140004d26:	ret    
   140004d27:	int3   
   140004d28:	int3   
   140004d29:	int3   
   140004d2a:	int3   
   140004d2b:	int3   
   140004d2c:	int3   
   140004d2d:	int3   
   140004d2e:	int3   
   140004d2f:	int3   
   140004d30:	mov    rcx,QWORD PTR [rcx+0x8]
   140004d34:	jmp    0x14000b2c0
   140004d39:	int3   
   140004d3a:	int3   
   140004d3b:	int3   
   140004d3c:	int3   
   140004d3d:	int3   
   140004d3e:	int3   
   140004d3f:	int3   
   140004d40:	sub    rsp,0x68
   140004d44:	test   dl,dl
   140004d46:	je     0x140004d51
   140004d48:	lock inc DWORD PTR [rcx+0x1e4]
   140004d4f:	jmp    0x140004d58
   140004d51:	lock dec DWORD PTR [rcx+0x1e4]
   140004d58:	mov    eax,DWORD PTR [rcx+0x1e4]
   140004d5e:	test   eax,eax
   140004d60:	jns    0x140004e03
   140004d66:	mov    rax,QWORD PTR [rip+0x2d61b]        # 0x140032388
   140004d6d:	mov    edx,0x4
   140004d72:	mov    ecx,DWORD PTR [rax]
   140004d74:	call   QWORD PTR [rip+0x2d72e]        # 0x1400324a8
   140004d7a:	test   al,al
   140004d7c:	je     0x140004dbe
   140004d7e:	lea    rax,[rip+0x2e85b]        # 0x1400335e0
   140004d85:	mov    DWORD PTR [rsp+0x28],0x4ee
   140004d8d:	mov    QWORD PTR [rsp+0x20],rax
   140004d92:	lea    r9,[rip+0x2e7d7]        # 0x140033570
   140004d99:	lea    rax,[rip+0x2e810]        # 0x1400335b0
   140004da0:	mov    edx,0x4
   140004da5:	mov    QWORD PTR [rsp+0x30],rax
   140004daa:	lea    r8,[rsp+0x20]
   140004daf:	mov    rax,QWORD PTR [rip+0x2d5d2]        # 0x140032388
   140004db6:	mov    ecx,DWORD PTR [rax]
   140004db8:	call   QWORD PTR [rip+0x2d6da]        # 0x140032498
   140004dbe:	call   QWORD PTR [rip+0x2d7c4]        # 0x140032588
   140004dc4:	test   al,al
   140004dc6:	je     0x140004df7
   140004dc8:	call   QWORD PTR [rip+0x2d6b2]        # 0x140032480
   140004dce:	lea    rcx,[rip+0x2d9d7]        # 0x1400327ac
   140004dd5:	xorps  xmm0,xmm0
   140004dd8:	lea    rdx,[rsp+0x38]
   140004ddd:	mov    DWORD PTR [rsp+0x40],eax
   140004de1:	mov    QWORD PTR [rsp+0x38],rcx
   140004de6:	mov    r8b,0x1
   140004de9:	xor    ecx,ecx
   140004deb:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   140004df1:	call   QWORD PTR [rip+0x2d681]        # 0x140032478
   140004df7:	mov    ecx,0x1
   140004dfc:	call   QWORD PTR [rip+0x2d446]        # 0x140032248
   140004e02:	int3   
   140004e03:	add    rsp,0x68
   140004e07:	ret    
   140004e08:	int3   
   140004e09:	int3   
   140004e0a:	int3   
   140004e0b:	int3   
   140004e0c:	int3   
   140004e0d:	int3   
   140004e0e:	int3   
   140004e0f:	int3   
   140004e10:	mov    rcx,QWORD PTR [rcx+0x8]
   140004e14:	jmp    0x140004d40
   140004e19:	int3   
   140004e1a:	int3   
   140004e1b:	int3   
   140004e1c:	int3   
   140004e1d:	int3   
   140004e1e:	int3   
   140004e1f:	int3   
   140004e20:	mov    QWORD PTR [rsp+0x8],rbx
   140004e25:	mov    QWORD PTR [rsp+0x10],rbp
   140004e2a:	mov    QWORD PTR [rsp+0x18],rsi
   140004e2f:	push   rdi
   140004e30:	sub    rsp,0x430
   140004e37:	mov    rbx,QWORD PTR [rcx+0xe0]
   140004e3e:	mov    rsi,r8
   140004e41:	mov    rbp,rdx
   140004e44:	mov    rdi,rcx
   140004e47:	test   rbx,rbx
   140004e4a:	je     0x140004e5c
   140004e4c:	mov    rcx,rbx
   140004e4f:	call   0x14001dc50
   140004e54:	mov    rcx,rbx
   140004e57:	call   0x14001dc90
   140004e5c:	mov    r8d,0x200
   140004e62:	mov    QWORD PTR [rdi+0xe0],rbp
   140004e69:	mov    rdx,rsi
   140004e6c:	lea    rcx,[rsp+0x30]
   140004e71:	call   QWORD PTR [rip+0x2d6e1]        # 0x140032558
   140004e77:	mov    dl,0x5c
   140004e79:	lea    rcx,[rsp+0x30]
   140004e7e:	call   QWORD PTR [rip+0x2d64c]        # 0x1400324d0
   140004e84:	lea    rcx,[rdi+0x110]
   140004e8b:	lea    rdx,[rsp+0x30]
   140004e90:	call   0x14001aae0
   140004e95:	mov    rcx,rsi
   140004e98:	call   QWORD PTR [rip+0x2d66a]        # 0x140032508
   140004e9e:	mov    rdx,rax
   140004ea1:	lea    rcx,[rdi+0x120]
   140004ea8:	call   0x14001aae0
   140004ead:	mov    dl,0x2f
   140004eaf:	lea    rcx,[rsp+0x30]
   140004eb4:	call   QWORD PTR [rip+0x2d616]        # 0x1400324d0
   140004eba:	lea    r9,[rsp+0x230]
   140004ec2:	mov    BYTE PTR [rsp+0x28],0x0
   140004ec7:	lea    r8,[rip+0x2daba]        # 0x140032988
   140004ece:	mov    DWORD PTR [rsp+0x20],0x200
   140004ed6:	lea    rdx,[rip+0x2dab7]        # 0x140032994
   140004edd:	lea    rcx,[rsp+0x30]
   140004ee2:	call   QWORD PTR [rip+0x2d648]        # 0x140032530
   140004ee8:	test   al,al
   140004eea:	jne    0x140004efc
   140004eec:	mov    rdx,rsi
   140004eef:	lea    rcx,[rip+0x2daaa]        # 0x1400329a0
   140004ef6:	call   QWORD PTR [rip+0x2d4b4]        # 0x1400323b0
   140004efc:	mov    dl,0x5c
   140004efe:	lea    rcx,[rsp+0x230]
   140004f06:	call   QWORD PTR [rip+0x2d5c4]        # 0x1400324d0
   140004f0c:	lea    rcx,[rdi+0x128]
   140004f13:	lea    rdx,[rsp+0x230]
   140004f1b:	call   0x14001aae0
   140004f20:	lea    r11,[rsp+0x430]
   140004f28:	mov    rbx,QWORD PTR [r11+0x10]
   140004f2c:	mov    rbp,QWORD PTR [r11+0x18]
   140004f30:	mov    rsi,QWORD PTR [r11+0x20]
   140004f34:	mov    rsp,r11
   140004f37:	pop    rdi
   140004f38:	ret    
   140004f39:	int3   
   140004f3a:	int3   
   140004f3b:	int3   
   140004f3c:	int3   
   140004f3d:	int3   
   140004f3e:	int3   
   140004f3f:	int3   
   140004f40:	mov    rcx,QWORD PTR [rcx+0x8]
   140004f44:	jmp    0x14000b430
   140004f49:	int3   
   140004f4a:	int3   
   140004f4b:	int3   
   140004f4c:	int3   
   140004f4d:	int3   
   140004f4e:	int3   
   140004f4f:	int3   
   140004f50:	mov    rax,QWORD PTR [rcx+0x8]
   140004f54:	mov    BYTE PTR [rax+0x145],dl
   140004f5a:	ret    
   140004f5b:	int3   
   140004f5c:	int3   
   140004f5d:	int3   
   140004f5e:	int3   
   140004f5f:	int3   
   140004f60:	mov    QWORD PTR [rsp+0x8],rbx
   140004f65:	mov    QWORD PTR [rsp+0x10],rsi
   140004f6a:	mov    QWORD PTR [rsp+0x18],rdi
   140004f6f:	push   rbp
   140004f70:	lea    rbp,[rsp-0x960]
   140004f78:	sub    rsp,0xa60
   140004f7f:	mov    rsi,rcx
   140004f82:	mov    rdi,rdx
   140004f85:	add    rcx,0x118
   140004f8c:	call   0x14001b050
   140004f91:	mov    r8d,0x200
   140004f97:	lea    rcx,[rbp+0x160]
   140004f9e:	mov    rdx,rax
   140004fa1:	call   QWORD PTR [rip+0x2d5b1]        # 0x140032558
   140004fa7:	mov    dl,0x5c
   140004fa9:	lea    rcx,[rbp+0x160]
   140004fb0:	call   QWORD PTR [rip+0x2d532]        # 0x1400324e8
   140004fb6:	mov    r8d,0x200
   140004fbc:	lea    rdx,[rbp+0x160]
   140004fc3:	lea    rcx,[rsp+0x60]
   140004fc8:	call   QWORD PTR [rip+0x2d58a]        # 0x140032558
   140004fce:	lea    rax,[rsp+0x60]
   140004fd3:	or     rbx,0xffffffffffffffff
   140004fd7:	inc    rbx
   140004fda:	cmp    BYTE PTR [rax+rbx*1],0x0
   140004fde:	jne    0x140004fd7
   140004fe0:	lea    rcx,[rsp+0x60]
   140004fe5:	call   QWORD PTR [rip+0x2d5b5]        # 0x1400325a0
   140004feb:	test   al,al
   140004fed:	je     0x1400050d2
   140004ff3:	mov    r9d,0x200
   140004ff9:	lea    r8,[rbp+0x360]
   140005000:	lea    rdx,[rip+0x2dd09]        # 0x140032d10
   140005007:	lea    rcx,[rsp+0x60]
   14000500c:	call   QWORD PTR [rip+0x2d4ee]        # 0x140032500
   140005012:	lea    rcx,[rbp+0x360]
   140005019:	call   QWORD PTR [rip+0x2d581]        # 0x1400325a0
   14000501f:	mov    r9d,0x200
   140005025:	lea    rcx,[rsp+0x60]
   14000502a:	test   al,al
   14000502c:	jne    0x1400050be
   140005032:	lea    r8,[rbp+0x360]
   140005039:	lea    rdx,[rip+0x2dcb8]        # 0x140032cf8
   140005040:	call   QWORD PTR [rip+0x2d4ba]        # 0x140032500
   140005046:	lea    rcx,[rbp+0x360]
   14000504d:	call   QWORD PTR [rip+0x2d555]        # 0x1400325a8
   140005053:	test   al,al
   140005055:	jne    0x1400050a4
   140005057:	mov    edx,0x200
   14000505c:	lea    rcx,[rsp+0x60]
   140005061:	call   QWORD PTR [rip+0x2d4a9]        # 0x140032510
   140005067:	test   al,al
   140005069:	je     0x1400050d2
   14000506b:	lea    rcx,[rsp+0x60]
   140005070:	call   QWORD PTR [rip+0x2d4b2]        # 0x140032528
   140005076:	lea    rcx,[rsp+0x60]
   14000507b:	or     rax,0xffffffffffffffff
   14000507f:	nop
   140005080:	inc    rax
   140005083:	cmp    BYTE PTR [rcx+rax*1],0x0
   140005087:	jne    0x140005080
   140005089:	cmp    eax,ebx
   14000508b:	jge    0x1400050d2
   14000508d:	lea    rcx,[rsp+0x60]
   140005092:	mov    ebx,eax
   140005094:	call   QWORD PTR [rip+0x2d506]        # 0x1400325a0
   14000509a:	test   al,al
   14000509c:	jne    0x140004ff3
   1400050a2:	jmp    0x1400050d2
   1400050a4:	mov    r8d,0x200
   1400050aa:	lea    rdx,[rsp+0x60]
   1400050af:	lea    rcx,[rbp+0x160]
   1400050b6:	call   QWORD PTR [rip+0x2d49c]        # 0x140032558
   1400050bc:	jmp    0x1400050d2
   1400050be:	lea    r8,[rbp+0x160]
   1400050c5:	lea    rdx,[rip+0x2dc50]        # 0x140032d1c
   1400050cc:	call   QWORD PTR [rip+0x2d42e]        # 0x140032500
   1400050d2:	mov    rcx,rdi
   1400050d5:	call   QWORD PTR [rip+0x2d3fd]        # 0x1400324d8
   1400050db:	test   al,al
   1400050dd:	jne    0x1400051b8
   1400050e3:	mov    r9d,0x200
   1400050e9:	lea    r8,[rbp+0x560]
   1400050f0:	mov    rdx,rdi
   1400050f3:	lea    rcx,[rbp+0x160]
   1400050fa:	call   QWORD PTR [rip+0x2d400]        # 0x140032500
   140005100:	lea    rdi,[rbp+0x560]
   140005107:	mov    rcx,rdi
   14000510a:	call   0x14000b860
   14000510f:	test   rax,rax
   140005112:	jne    0x14000534a
   140005118:	lea    edx,[rax+0x4]
   14000511b:	mov    rax,QWORD PTR [rip+0x2d266]        # 0x140032388
   140005122:	mov    ecx,DWORD PTR [rax]
   140005124:	call   QWORD PTR [rip+0x2d37e]        # 0x1400324a8
   14000512a:	test   al,al
   14000512c:	je     0x140005173
   14000512e:	lea    rax,[rip+0x2dd1b]        # 0x140032e50
   140005135:	mov    DWORD PTR [rsp+0x48],0x25f
   14000513d:	mov    QWORD PTR [rsp+0x40],rax
   140005142:	lea    r9,[rip+0x2dd57]        # 0x140032ea0
   140005149:	lea    rax,[rip+0x2dce0]        # 0x140032e30
   140005150:	mov    QWORD PTR [rsp+0x20],rdi
   140005155:	mov    QWORD PTR [rsp+0x50],rax
   14000515a:	lea    r8,[rsp+0x40]
   14000515f:	mov    rax,QWORD PTR [rip+0x2d222]        # 0x140032388
   140005166:	mov    edx,0x4
   14000516b:	mov    ecx,DWORD PTR [rax]
   14000516d:	call   QWORD PTR [rip+0x2d325]        # 0x140032498
   140005173:	call   QWORD PTR [rip+0x2d40f]        # 0x140032588
   140005179:	test   al,al
   14000517b:	je     0x1400051ac
   14000517d:	call   QWORD PTR [rip+0x2d2fd]        # 0x140032480
   140005183:	lea    rcx,[rip+0x2d622]        # 0x1400327ac
   14000518a:	xorps  xmm0,xmm0
   14000518d:	lea    rdx,[rsp+0x40]
   140005192:	mov    DWORD PTR [rsp+0x48],eax
   140005196:	mov    QWORD PTR [rsp+0x40],rcx
   14000519b:	mov    r8b,0x1
   14000519e:	xor    ecx,ecx
   1400051a0:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   1400051a6:	call   QWORD PTR [rip+0x2d2cc]        # 0x140032478
   1400051ac:	mov    ecx,0x1
   1400051b1:	call   QWORD PTR [rip+0x2d091]        # 0x140032248
   1400051b7:	int3   
   1400051b8:	call   QWORD PTR [rip+0x2d2fa]        # 0x1400324b8
   1400051be:	lea    rdx,[rip+0x2db63]        # 0x140032d28
   1400051c5:	mov    rcx,rax
   1400051c8:	mov    r8,QWORD PTR [rax]
   1400051cb:	call   QWORD PTR [r8+0x20]
   1400051cf:	test   al,al
   1400051d1:	jne    0x140005107
   1400051d7:	cmp    BYTE PTR [rsi+0x148],al
   1400051dd:	jne    0x140005107
   1400051e3:	mov    r8d,0x200
   1400051e9:	lea    rdx,[rbp+0x360]
   1400051f0:	mov    rcx,rdi
   1400051f3:	call   QWORD PTR [rip+0x2d047]        # 0x140032240
   1400051f9:	lea    rcx,[rbp+0x360]
   140005200:	call   QWORD PTR [rip+0x2d312]        # 0x140032518
   140005206:	xor    r9d,r9d
   140005209:	lea    r8,[rbp+0x360]
   140005210:	mov    edx,0x200
   140005215:	lea    rcx,[rsp+0x60]
   14000521a:	call   QWORD PTR [rip+0x2d2c0]        # 0x1400324e0
   140005220:	lea    rdx,[rbp+0x160]
   140005227:	lea    rcx,[rsp+0x60]
   14000522c:	call   QWORD PTR [rip+0x2d32e]        # 0x140032560
   140005232:	test   eax,eax
   140005234:	je     0x140005107
   14000523a:	lea    rdx,[rip+0x2daf7]        # 0x140032d38
   140005241:	lea    rcx,[rbp+0x160]
   140005248:	call   QWORD PTR [rip+0x2d31a]        # 0x140032568
   14000524e:	test   rax,rax
   140005251:	jne    0x140005107
   140005257:	lea    rdx,[rip+0x2daea]        # 0x140032d48
   14000525e:	lea    rcx,[rbp+0x160]
   140005265:	call   QWORD PTR [rip+0x2d2fd]        # 0x140032568
   14000526b:	test   rax,rax
   14000526e:	jne    0x140005107
   140005274:	mov    edx,0x200
   140005279:	lea    rcx,[rbp+0x760]
   140005280:	call   QWORD PTR [rip+0x2d2f2]        # 0x140032578
   140005286:	mov    rax,QWORD PTR [rip+0x2d0fb]        # 0x140032388
   14000528d:	mov    edx,0x4
   140005292:	mov    ecx,DWORD PTR [rax]
   140005294:	call   QWORD PTR [rip+0x2d20e]        # 0x1400324a8
   14000529a:	test   al,al
   14000529c:	je     0x140005305
   14000529e:	lea    rax,[rip+0x2dbab]        # 0x140032e50
   1400052a5:	mov    DWORD PTR [rsp+0x48],0x24f
   1400052ad:	mov    QWORD PTR [rsp+0x40],rax
   1400052b2:	lea    r9,[rip+0x2daa7]        # 0x140032d60
   1400052b9:	lea    rax,[rip+0x2db70]        # 0x140032e30
   1400052c0:	mov    edx,0x4
   1400052c5:	mov    QWORD PTR [rsp+0x50],rax
   1400052ca:	lea    r8,[rsp+0x40]
   1400052cf:	lea    rax,[rsp+0x60]
   1400052d4:	mov    QWORD PTR [rsp+0x38],rax
   1400052d9:	lea    rax,[rbp+0x160]
   1400052e0:	mov    QWORD PTR [rsp+0x30],rax
   1400052e5:	lea    rax,[rbp+0x760]
   1400052ec:	mov    QWORD PTR [rsp+0x28],rdi
   1400052f1:	mov    QWORD PTR [rsp+0x20],rax
   1400052f6:	mov    rax,QWORD PTR [rip+0x2d08b]        # 0x140032388
   1400052fd:	mov    ecx,DWORD PTR [rax]
   1400052ff:	call   QWORD PTR [rip+0x2d193]        # 0x140032498
   140005305:	call   QWORD PTR [rip+0x2d27d]        # 0x140032588
   14000530b:	test   al,al
   14000530d:	je     0x14000533e
   14000530f:	call   QWORD PTR [rip+0x2d16b]        # 0x140032480
   140005315:	lea    rcx,[rip+0x2d490]        # 0x1400327ac
   14000531c:	xorps  xmm0,xmm0
   14000531f:	lea    rdx,[rsp+0x40]
   140005324:	mov    DWORD PTR [rsp+0x48],eax
   140005328:	mov    QWORD PTR [rsp+0x40],rcx
   14000532d:	mov    r8b,0x1
   140005330:	xor    ecx,ecx
   140005332:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140005338:	call   QWORD PTR [rip+0x2d13a]        # 0x140032478
   14000533e:	mov    ecx,0x1
   140005343:	call   QWORD PTR [rip+0x2ceff]        # 0x140032248
   140005349:	int3   
   14000534a:	mov    r8,rdi
   14000534d:	mov    rdx,rax
   140005350:	mov    rcx,rsi
   140005353:	call   0x140004e20
   140005358:	lea    r11,[rsp+0xa60]
   140005360:	mov    rbx,QWORD PTR [r11+0x10]
   140005364:	mov    rsi,QWORD PTR [r11+0x18]
   140005368:	mov    rdi,QWORD PTR [r11+0x20]
   14000536c:	mov    rsp,r11
   14000536f:	pop    rbp
   140005370:	ret    
   140005371:	int3   
   140005372:	int3   
   140005373:	int3   
   140005374:	int3   
   140005375:	int3   
   140005376:	int3   
   140005377:	int3   
   140005378:	int3   
   140005379:	int3   
   14000537a:	int3   
   14000537b:	int3   
   14000537c:	int3   
   14000537d:	int3   
   14000537e:	int3   
   14000537f:	int3   
   140005380:	mov    rax,QWORD PTR [rcx+0x8]
   140005384:	mov    QWORD PTR [rax+0x1f0],rdx
   14000538b:	ret    
   14000538c:	int3   
   14000538d:	int3   
   14000538e:	int3   
   14000538f:	int3   
   140005390:	rex push rbp
   140005392:	push   rbx
   140005393:	push   r13
   140005395:	lea    rbp,[rsp-0xd40]
   14000539d:	sub    rsp,0xe40
   1400053a4:	cmp    QWORD PTR [rip+0x42164],0x0        # 0x140047510
   1400053ac:	mov    r13,rcx
   1400053af:	je     0x1400053de
   1400053b1:	call   QWORD PTR [rip+0x2d101]        # 0x1400324b8
   1400053b7:	lea    rdx,[rip+0x2df36]        # 0x1400332f4
   1400053be:	mov    rcx,rax
   1400053c1:	mov    r8,QWORD PTR [rax]
   1400053c4:	call   QWORD PTR [r8+0x40]
   1400053c8:	test   eax,eax
   1400053ca:	jne    0x1400053de
   1400053cc:	mov    rcx,QWORD PTR [rip+0x41db5]        # 0x140047188
   1400053d3:	mov    dl,0x1
   1400053d5:	mov    rax,QWORD PTR [rcx]
   1400053d8:	call   QWORD PTR [rax+0x3a8]
   1400053de:	mov    rcx,QWORD PTR [r13+0xe8]
   1400053e5:	mov    BYTE PTR [rbp+0xd78],0x1
   1400053ec:	test   rcx,rcx
   1400053ef:	je     0x140005409
   1400053f1:	xor    r8d,r8d
   1400053f4:	lea    rdx,[rip+0x2d7d5]        # 0x140032bd0
   1400053fb:	call   0x14001e240
   140005400:	test   eax,eax
   140005402:	sete   BYTE PTR [rbp+0xd78]
   140005409:	xor    edx,edx
   14000540b:	lea    rcx,[rbp+0x380]
   140005412:	mov    r8d,0x104
   140005418:	call   0x1400277b0
   14000541d:	cmp    BYTE PTR [r13+0x1dd],0x0
   140005425:	je     0x14000548b
   140005427:	lea    rcx,[r13+0x110]
   14000542e:	mov    rax,QWORD PTR [rcx]
   140005431:	test   rax,rax
   140005434:	je     0x14000548b
   140005436:	cmp    BYTE PTR [rax],0x0
   140005439:	je     0x14000548b
   14000543b:	call   0x14001b050
   140005440:	test   rax,rax
   140005443:	je     0x14000548b
   140005445:	mov    r8d,0x104
   14000544b:	lea    rcx,[rbp+0x380]
   140005452:	mov    rdx,rax
   140005455:	call   QWORD PTR [rip+0x2d0fd]        # 0x140032558
   14000545b:	mov    edx,0x104
   140005460:	lea    rcx,[rbp+0x380]
   140005467:	call   QWORD PTR [rip+0x2d0a3]        # 0x140032510
   14000546d:	or     r9d,0xffffffff
   140005471:	lea    rdx,[rip+0x2de70]        # 0x1400332e8
   140005478:	mov    r8d,0x104
   14000547e:	lea    rcx,[rbp+0x380]
   140005485:	call   QWORD PTR [rip+0x2d0c5]        # 0x140032550
   14000548b:	cmp    BYTE PTR [rbp+0x380],0x0
   140005492:	jne    0x1400054b6
   140005494:	lea    rcx,[r13+0x118]
   14000549b:	call   0x14001b050
   1400054a0:	mov    r8d,0x104
   1400054a6:	lea    rcx,[rbp+0x380]
   1400054ad:	mov    rdx,rax
   1400054b0:	call   QWORD PTR [rip+0x2d0a2]        # 0x140032558
   1400054b6:	mov    rcx,QWORD PTR [rip+0x41ccb]        # 0x140047188
   1400054bd:	lea    r8,[rip+0x2de3c]        # 0x140033300
   1400054c4:	mov    r9d,0x1
   1400054ca:	mov    DWORD PTR [rsp+0x20],0x0
   1400054d2:	lea    rdx,[rbp+0x380]
   1400054d9:	mov    rax,QWORD PTR [rcx]
   1400054dc:	call   QWORD PTR [rax+0x68]
   1400054df:	mov    r9d,0x104
   1400054e5:	lea    r8,[rbp+0x50]
   1400054e9:	lea    rdx,[rip+0x2de20]        # 0x140033310
   1400054f0:	lea    rcx,[rbp+0x380]
   1400054f7:	call   QWORD PTR [rip+0x2d003]        # 0x140032500
   1400054fd:	mov    r9b,0x1
   140005500:	lea    r8,[rbp+0x50]
   140005504:	mov    edx,0x104
   140005509:	lea    rcx,[rbp+0x270]
   140005510:	call   QWORD PTR [rip+0x2cfca]        # 0x1400324e0
   140005516:	mov    rcx,QWORD PTR [rip+0x41c6b]        # 0x140047188
   14000551d:	lea    r8,[rip+0x2dddc]        # 0x140033300
   140005524:	mov    r9d,0x1
   14000552a:	mov    DWORD PTR [rsp+0x20],0x0
   140005532:	lea    rdx,[rbp+0x270]
   140005539:	mov    rax,QWORD PTR [rcx]
   14000553c:	call   QWORD PTR [rax+0x68]
   14000553f:	mov    rcx,QWORD PTR [rip+0x41c42]        # 0x140047188
   140005546:	lea    rdx,[rip+0x2ddb3]        # 0x140033300
   14000554d:	mov    r8b,0x1
   140005550:	mov    rax,QWORD PTR [rcx]
   140005553:	call   QWORD PTR [rax+0xa0]
   140005559:	xor    edx,edx
   14000555b:	lea    rcx,[rbp+0x490]
   140005562:	mov    r8d,0x104
   140005568:	call   0x1400277b0
   14000556d:	xor    r9d,r9d
   140005570:	lea    r8,[rbp+0x380]
   140005577:	mov    edx,0x104
   14000557c:	lea    rcx,[rsp+0x40]
   140005581:	call   QWORD PTR [rip+0x2cf59]        # 0x1400324e0
   140005587:	lea    rax,[rsp+0x40]
   14000558c:	or     rbx,0xffffffffffffffff
   140005590:	inc    rbx
   140005593:	cmp    BYTE PTR [rax+rbx*1],0x0
   140005597:	jne    0x140005590
   140005599:	lea    rcx,[rsp+0x40]
   14000559e:	call   QWORD PTR [rip+0x2cffc]        # 0x1400325a0
   1400055a4:	test   al,al
   1400055a6:	je     0x140005692
   1400055ac:	nop    DWORD PTR [rax+0x0]
   1400055b0:	mov    r9d,0x104
   1400055b6:	lea    r8,[rbp+0x160]
   1400055bd:	lea    rdx,[rip+0x2d74c]        # 0x140032d10
   1400055c4:	lea    rcx,[rsp+0x40]
   1400055c9:	call   QWORD PTR [rip+0x2cf31]        # 0x140032500
   1400055cf:	lea    rcx,[rbp+0x160]
   1400055d6:	call   QWORD PTR [rip+0x2cfc4]        # 0x1400325a0
   1400055dc:	mov    r9d,0x104
   1400055e2:	lea    rcx,[rsp+0x40]
   1400055e7:	test   al,al
   1400055e9:	jne    0x14000567e
   1400055ef:	lea    r8,[rbp+0x160]
   1400055f6:	lea    rdx,[rip+0x2d6fb]        # 0x140032cf8
   1400055fd:	call   QWORD PTR [rip+0x2cefd]        # 0x140032500
   140005603:	lea    rcx,[rbp+0x160]
   14000560a:	call   QWORD PTR [rip+0x2cf98]        # 0x1400325a8
   140005610:	test   al,al
   140005612:	jne    0x140005664
   140005614:	mov    edx,0x104
   140005619:	lea    rcx,[rsp+0x40]
   14000561e:	call   QWORD PTR [rip+0x2ceec]        # 0x140032510
   140005624:	test   al,al
   140005626:	je     0x140005692
   140005628:	lea    rcx,[rsp+0x40]
   14000562d:	call   QWORD PTR [rip+0x2cef5]        # 0x140032528
   140005633:	lea    rcx,[rsp+0x40]
   140005638:	or     rax,0xffffffffffffffff
   14000563c:	nop    DWORD PTR [rax+0x0]
   140005640:	inc    rax
   140005643:	cmp    BYTE PTR [rcx+rax*1],0x0
   140005647:	jne    0x140005640
   140005649:	cmp    eax,ebx
   14000564b:	jge    0x140005692
   14000564d:	lea    rcx,[rsp+0x40]
   140005652:	mov    ebx,eax
   140005654:	call   QWORD PTR [rip+0x2cf46]        # 0x1400325a0
   14000565a:	test   al,al
   14000565c:	jne    0x1400055b0
   140005662:	jmp    0x140005692
   140005664:	mov    r8d,0x104
   14000566a:	lea    rdx,[rsp+0x40]
   14000566f:	lea    rcx,[rbp+0x490]
   140005676:	call   QWORD PTR [rip+0x2cedc]        # 0x140032558
   14000567c:	jmp    0x140005692
   14000567e:	lea    r8,[rbp+0x490]
   140005685:	lea    rdx,[rip+0x2d690]        # 0x140032d1c
   14000568c:	call   QWORD PTR [rip+0x2ce6e]        # 0x140032500
   140005692:	cmp    BYTE PTR [rbp+0x490],0x0
   140005699:	jne    0x1400056d4
   14000569b:	lea    r8,[rbp+0x380]
   1400056a2:	lea    rdx,[rip+0x2dc6f]        # 0x140033318
   1400056a9:	lea    rcx,[rbp+0x5a0]
   1400056b0:	call   0x140001600
   1400056b5:	lea    rcx,[rip+0x2d0e8]        # 0x1400327a4
   1400056bc:	lea    rdx,[rax+0x9]
   1400056c0:	call   QWORD PTR [rip+0x2cb6a]        # 0x140032230
   1400056c6:	xor    al,al
   1400056c8:	add    rsp,0xe40
   1400056cf:	pop    r13
   1400056d1:	pop    rbx
   1400056d2:	pop    rbp
   1400056d3:	ret    
   1400056d4:	mov    r9d,0x104
   1400056da:	lea    r8,[rbp+0xaf0]
   1400056e1:	lea    rdx,[rip+0x2dc60]        # 0x140033348
   1400056e8:	lea    rcx,[rbp+0x490]
   1400056ef:	call   QWORD PTR [rip+0x2ce0b]        # 0x140032500
   1400056f5:	mov    rcx,QWORD PTR [rip+0x41a8c]        # 0x140047188
   1400056fc:	lea    r8,[rip+0x2dc4d]        # 0x140033350
   140005703:	mov    r9d,0x1
   140005709:	mov    DWORD PTR [rsp+0x20],0x0
   140005711:	lea    rdx,[rbp+0xaf0]
   140005718:	mov    rax,QWORD PTR [rcx]
   14000571b:	call   QWORD PTR [rax+0x68]
   14000571e:	mov    rcx,QWORD PTR [rip+0x41a63]        # 0x140047188
   140005725:	lea    rdx,[rip+0x2dc24]        # 0x140033350
   14000572c:	mov    r8b,0x1
   14000572f:	mov    rax,QWORD PTR [rcx]
   140005732:	call   QWORD PTR [rax+0xa0]
   140005738:	call   QWORD PTR [rip+0x2cd7a]        # 0x1400324b8
   14000573e:	lea    r8,[rip+0x2d05b]        # 0x1400327a0
   140005745:	mov    rcx,rax
   140005748:	lea    rdx,[rip+0x2dc11]        # 0x140033360
   14000574f:	mov    r9,QWORD PTR [rax]
   140005752:	call   QWORD PTR [r9+0x68]
   140005756:	test   rax,rax
   140005759:	je     0x140005778
   14000575b:	cmp    BYTE PTR [rax],0x0
   14000575e:	je     0x140005778
   140005760:	mov    r8d,0x104
   140005766:	lea    rcx,[rbp+0x9e0]
   14000576d:	mov    rdx,rax
   140005770:	call   QWORD PTR [rip+0x2cde2]        # 0x140032558
   140005776:	jmp    0x140005799
   140005778:	mov    r9d,0x104
   14000577e:	lea    r8,[rbp+0x9e0]
   140005785:	lea    rdx,[rip+0x2dbe4]        # 0x140033370
   14000578c:	lea    rcx,[rbp+0x490]
   140005793:	call   QWORD PTR [rip+0x2cd67]        # 0x140032500
   140005799:	xor    r9d,r9d
   14000579c:	lea    r8,[rbp+0x9e0]
   1400057a3:	mov    edx,0x104
   1400057a8:	lea    rcx,[rbp+0x6b0]
   1400057af:	call   QWORD PTR [rip+0x2cd2b]        # 0x1400324e0
   1400057b5:	mov    rcx,QWORD PTR [rip+0x419cc]        # 0x140047188
   1400057bc:	lea    r8,[rip+0x2dbbd]        # 0x140033380
   1400057c3:	mov    r9d,0x1
   1400057c9:	mov    DWORD PTR [rsp+0x20],0x0
   1400057d1:	lea    rdx,[rbp+0x6b0]
   1400057d8:	mov    rax,QWORD PTR [rcx]
   1400057db:	call   QWORD PTR [rax+0x68]
   1400057de:	mov    rcx,QWORD PTR [rip+0x419a3]        # 0x140047188
   1400057e5:	lea    rdx,[rip+0x2db94]        # 0x140033380
   1400057ec:	mov    r8b,0x1
   1400057ef:	mov    rax,QWORD PTR [rcx]
   1400057f2:	call   QWORD PTR [rax+0xa0]
   1400057f8:	mov    rcx,QWORD PTR [rip+0x41989]        # 0x140047188
   1400057ff:	lea    r8,[rip+0x2db8a]        # 0x140033390
   140005806:	mov    r9d,0x1
   14000580c:	mov    DWORD PTR [rsp+0x20],0x0
   140005814:	lea    rdx,[rbp+0x490]
   14000581b:	mov    rax,QWORD PTR [rcx]
   14000581e:	call   QWORD PTR [rax+0x68]
   140005821:	mov    rcx,QWORD PTR [rip+0x41960]        # 0x140047188
   140005828:	lea    rdx,[rip+0x2db61]        # 0x140033390
   14000582f:	mov    r8b,0x1
   140005832:	mov    rax,QWORD PTR [rcx]
   140005835:	call   QWORD PTR [rax+0xa0]
   14000583b:	mov    rcx,QWORD PTR [r13+0xe0]
   140005842:	test   rcx,rcx
   140005845:	je     0x1400065b1
   14000584b:	xor    r8d,r8d
   14000584e:	lea    rdx,[rip+0x2db4b]        # 0x1400333a0
   140005855:	call   0x14001ded0
   14000585a:	test   rax,rax
   14000585d:	je     0x1400065b1
   140005863:	xor    r8d,r8d
   140005866:	lea    rdx,[rip+0x2db43]        # 0x1400333b0
   14000586d:	mov    rcx,rax
   140005870:	call   0x14001ded0
   140005875:	mov    QWORD PTR [rsp+0x38],rax
   14000587a:	mov    rbx,rax
   14000587d:	test   rax,rax
   140005880:	je     0x1400065b1
   140005886:	movzx  eax,BYTE PTR [r13+0x145]
   14000588e:	mov    QWORD PTR [rsp+0xe38],rsi
   140005896:	mov    QWORD PTR [rsp+0xe30],rdi
   14000589e:	mov    QWORD PTR [rsp+0xe28],r12
   1400058a6:	mov    QWORD PTR [rsp+0xe20],r14
   1400058ae:	mov    QWORD PTR [rsp+0xe18],r15
   1400058b6:	mov    BYTE PTR [rsp+0x30],al
   1400058ba:	call   QWORD PTR [rip+0x2cbf8]        # 0x1400324b8
   1400058c0:	lea    rdx,[rip+0x2db11]        # 0x1400333d8
   1400058c7:	mov    rcx,rax
   1400058ca:	mov    r8,QWORD PTR [rax]
   1400058cd:	call   QWORD PTR [r8+0x20]
   1400058d1:	xor    dil,dil
   1400058d4:	mov    BYTE PTR [rbp+0xd70],0x0
   1400058db:	xor    edx,edx
   1400058dd:	mov    BYTE PTR [rbp+0xd68],dil
   1400058e4:	mov    r8d,0x104
   1400058ea:	mov    BYTE PTR [rbp+0xd60],0x0
   1400058f1:	lea    rcx,[rbp+0x8d0]
   1400058f8:	movzx  r14d,al
   1400058fc:	call   0x1400277b0
   140005901:	call   QWORD PTR [rip+0x2cbb1]        # 0x1400324b8
   140005907:	lea    rdx,[rip+0x2dada]        # 0x1400333e8
   14000590e:	mov    rcx,rax
   140005911:	mov    r8,QWORD PTR [rax]
   140005914:	call   QWORD PTR [r8+0x20]
   140005918:	mov    rcx,rbx
   14000591b:	movzx  r15d,al
   14000591f:	call   0x14001e200
   140005924:	mov    r12,rax
   140005927:	test   rax,rax
   14000592a:	je     0x140005a34
   140005930:	mov    rcx,r12
   140005933:	call   0x14001e270
   140005938:	xor    r9d,r9d
   14000593b:	mov    QWORD PTR [rsp+0x20],0x0
   140005944:	lea    r8,[rip+0x2ce55]        # 0x1400327a0
   14000594b:	xor    edx,edx
   14000594d:	mov    rcx,r12
   140005950:	mov    rbx,rax
   140005953:	call   0x14001e360
   140005958:	mov    r9d,0x104
   14000595e:	lea    r8,[rsp+0x40]
   140005963:	mov    rdx,rax
   140005966:	lea    rcx,[rbp+0x490]
   14000596d:	mov    rsi,rax
   140005970:	call   QWORD PTR [rip+0x2cb8a]        # 0x140032500
   140005976:	lea    rdx,[rip+0x2da7b]        # 0x1400333f8
   14000597d:	mov    rcx,rbx
   140005980:	call   QWORD PTR [rip+0x2cbda]        # 0x140032560
   140005986:	test   eax,eax
   140005988:	jne    0x140005c3f
   14000598e:	lea    rdx,[r13+0x108]
   140005995:	mov    rax,QWORD PTR [rdx]
   140005998:	lea    rcx,[r13+0x100]
   14000599f:	test   rax,rax
   1400059a2:	je     0x1400059ab
   1400059a4:	cmp    BYTE PTR [rax],0x0
   1400059a7:	cmovne rcx,rdx
   1400059ab:	mov    rax,QWORD PTR [rcx]
   1400059ae:	test   rax,rax
   1400059b1:	je     0x140005a11
   1400059b3:	cmp    BYTE PTR [rax],0x0
   1400059b6:	je     0x140005a11
   1400059b8:	call   0x14001b050
   1400059bd:	mov    rdi,rax
   1400059c0:	test   rax,rax
   1400059c3:	je     0x140005a0a
   1400059c5:	lea    rdx,[rip+0x2da3c]        # 0x140033408
   1400059cc:	mov    rcx,rax
   1400059cf:	call   QWORD PTR [rip+0x2cb8b]        # 0x140032560
   1400059d5:	test   eax,eax
   1400059d7:	je     0x140005a0a
   1400059d9:	lea    rdx,[rip+0x2da30]        # 0x140033410
   1400059e0:	lea    rcx,[rsp+0x40]
   1400059e5:	call   QWORD PTR [rip+0x2cb7d]        # 0x140032568
   1400059eb:	mov    rbx,rax
   1400059ee:	test   rax,rax
   1400059f1:	jne    0x140005a6d
   1400059f3:	lea    r8,[rip+0x2da16]        # 0x140033410
   1400059fa:	mov    rdx,rsi
   1400059fd:	lea    rcx,[rip+0x2da1c]        # 0x140033420
   140005a04:	call   QWORD PTR [rip+0x2c9a6]        # 0x1400323b0
   140005a0a:	movzx  edi,BYTE PTR [rbp+0xd68]
   140005a11:	movzx  ebx,BYTE PTR [rbp+0xd60]
   140005a18:	mov    rcx,r12
   140005a1b:	call   0x14001e330
   140005a20:	mov    r12,rax
   140005a23:	test   rax,rax
   140005a26:	jne    0x140005930
   140005a2c:	test   bl,bl
   140005a2e:	jne    0x1400062d4
   140005a34:	xor    r15d,r15d
   140005a37:	cmp    BYTE PTR [rbp+0xd78],r15b
   140005a3e:	je     0x1400062d7
   140005a44:	mov    rcx,QWORD PTR [rip+0x4173d]        # 0x140047188
   140005a4b:	lea    r9d,[r15+0x1]
   140005a4f:	lea    r8,[rip+0x2da82]        # 0x1400334d8
   140005a56:	mov    DWORD PTR [rsp+0x20],r15d
   140005a5b:	lea    rdx,[rbp+0x8d0]
   140005a62:	mov    rax,QWORD PTR [rcx]
   140005a65:	call   QWORD PTR [rax+0x68]
   140005a68:	jmp    0x1400062d7
   140005a6d:	lea    rax,[rsp+0x40]
   140005a72:	mov    r8d,ebx
   140005a75:	sub    r8d,eax
   140005a78:	lea    rdx,[rsp+0x40]
   140005a7d:	inc    r8d
   140005a80:	lea    rcx,[rbp+0x160]
   140005a87:	call   QWORD PTR [rip+0x2cacb]        # 0x140032558
   140005a8d:	or     r9d,0xffffffff
   140005a91:	lea    rcx,[rbp+0x160]
   140005a98:	mov    r8d,0x104
   140005a9e:	mov    rdx,rdi
   140005aa1:	call   QWORD PTR [rip+0x2caa9]        # 0x140032550
   140005aa7:	lea    rdx,[rbx+0xa]
   140005aab:	or     r9d,0xffffffff
   140005aaf:	mov    r8d,0x104
   140005ab5:	lea    rcx,[rbp+0x160]
   140005abc:	call   QWORD PTR [rip+0x2ca8e]        # 0x140032550
   140005ac2:	test   r14b,r14b
   140005ac5:	je     0x140005b0a
   140005ac7:	lea    r9,[rbp+0x160]
   140005ace:	mov    edx,0x104
   140005ad3:	lea    r8,[rip+0x2d7ee]        # 0x1400332c8
   140005ada:	lea    rcx,[rbp+0x50]
   140005ade:	call   QWORD PTR [rip+0x2ca8c]        # 0x140032570
   140005ae4:	mov    rcx,QWORD PTR [rip+0x4169d]        # 0x140047188
   140005aeb:	lea    r8,[rip+0x2d6f2]        # 0x1400331e4
   140005af2:	mov    r9d,0x1
   140005af8:	mov    DWORD PTR [rsp+0x20],0x0
   140005b00:	lea    rdx,[rbp+0x50]
   140005b04:	mov    rax,QWORD PTR [rcx]
   140005b07:	call   QWORD PTR [rax+0x68]
   140005b0a:	mov    rcx,QWORD PTR [rip+0x41677]        # 0x140047188
   140005b11:	lea    r8,[rip+0x2d6cc]        # 0x1400331e4
   140005b18:	mov    r9d,0x1
   140005b1e:	mov    DWORD PTR [rsp+0x20],0x0
   140005b26:	lea    rdx,[rbp+0x160]
   140005b2d:	mov    rax,QWORD PTR [rcx]
   140005b30:	call   QWORD PTR [rax+0x68]
   140005b33:	test   r15b,r15b
   140005b36:	jne    0x140005a0a
   140005b3c:	mov    r9d,0x104
   140005b42:	lea    r8,[rbp+0x270]
   140005b49:	mov    rdx,rsi
   140005b4c:	lea    rcx,[rbp+0x6b0]
   140005b53:	call   QWORD PTR [rip+0x2c9a7]        # 0x140032500
   140005b59:	lea    rdx,[rip+0x2d8b0]        # 0x140033410
   140005b60:	lea    rcx,[rbp+0x270]
   140005b67:	call   QWORD PTR [rip+0x2c9fb]        # 0x140032568
   140005b6d:	mov    rbx,rax
   140005b70:	lea    rdx,[rbp+0x270]
   140005b77:	mov    r8d,ebx
   140005b7a:	lea    rax,[rbp+0x270]
   140005b81:	sub    r8d,eax
   140005b84:	lea    rcx,[rbp+0x160]
   140005b8b:	inc    r8d
   140005b8e:	call   QWORD PTR [rip+0x2c9c4]        # 0x140032558
   140005b94:	or     r9d,0xffffffff
   140005b98:	lea    rcx,[rbp+0x160]
   140005b9f:	mov    r8d,0x104
   140005ba5:	mov    rdx,rdi
   140005ba8:	call   QWORD PTR [rip+0x2c9a2]        # 0x140032550
   140005bae:	lea    rdx,[rbx+0xa]
   140005bb2:	or     r9d,0xffffffff
   140005bb6:	mov    r8d,0x104
   140005bbc:	lea    rcx,[rbp+0x160]
   140005bc3:	call   QWORD PTR [rip+0x2c987]        # 0x140032550
   140005bc9:	test   r14b,r14b
   140005bcc:	je     0x140005c11
   140005bce:	lea    r9,[rbp+0x160]
   140005bd5:	mov    edx,0x104
   140005bda:	lea    r8,[rip+0x2d6e7]        # 0x1400332c8
   140005be1:	lea    rcx,[rbp+0x50]
   140005be5:	call   QWORD PTR [rip+0x2c985]        # 0x140032570
   140005beb:	mov    rcx,QWORD PTR [rip+0x41596]        # 0x140047188
   140005bf2:	lea    r8,[rip+0x2d887]        # 0x140033480
   140005bf9:	mov    r9d,0x1
   140005bff:	mov    DWORD PTR [rsp+0x20],0x0
   140005c07:	lea    rdx,[rbp+0x50]
   140005c0b:	mov    rax,QWORD PTR [rcx]
   140005c0e:	call   QWORD PTR [rax+0x68]
   140005c11:	mov    rcx,QWORD PTR [rip+0x41570]        # 0x140047188
   140005c18:	lea    r8,[rip+0x2d861]        # 0x140033480
   140005c1f:	mov    r9d,0x1
   140005c25:	mov    DWORD PTR [rsp+0x20],0x0
   140005c2d:	lea    rdx,[rbp+0x160]
   140005c34:	mov    rax,QWORD PTR [rcx]
   140005c37:	call   QWORD PTR [rax+0x68]
   140005c3a:	jmp    0x140005a0a
   140005c3f:	lea    rdx,[rip+0x2d842]        # 0x140033488
   140005c46:	mov    rcx,rbx
   140005c49:	call   QWORD PTR [rip+0x2c911]        # 0x140032560
   140005c4f:	test   eax,eax
   140005c51:	jne    0x140005d6a
   140005c57:	cmp    BYTE PTR [rsp+0x30],al
   140005c5b:	je     0x140005a11
   140005c61:	test   r14b,r14b
   140005c64:	je     0x140005ca7
   140005c66:	lea    r9,[rsp+0x40]
   140005c6b:	mov    edx,0x104
   140005c70:	lea    r8,[rip+0x2d651]        # 0x1400332c8
   140005c77:	lea    rcx,[rbp+0x50]
   140005c7b:	call   QWORD PTR [rip+0x2c8ef]        # 0x140032570
   140005c81:	mov    rcx,QWORD PTR [rip+0x41500]        # 0x140047188
   140005c88:	lea    r8,[rip+0x2d555]        # 0x1400331e4
   140005c8f:	mov    r9d,0x1
   140005c95:	mov    DWORD PTR [rsp+0x20],0x0
   140005c9d:	lea    rdx,[rbp+0x50]
   140005ca1:	mov    rax,QWORD PTR [rcx]
   140005ca4:	call   QWORD PTR [rax+0x68]
   140005ca7:	mov    rcx,QWORD PTR [rip+0x414da]        # 0x140047188
   140005cae:	lea    r8,[rip+0x2d52f]        # 0x1400331e4
   140005cb5:	mov    r9d,0x1
   140005cbb:	mov    DWORD PTR [rsp+0x20],0x0
   140005cc3:	lea    rdx,[rsp+0x40]
   140005cc8:	mov    rax,QWORD PTR [rcx]
   140005ccb:	call   QWORD PTR [rax+0x68]
   140005cce:	test   r15b,r15b
   140005cd1:	jne    0x140005a11
   140005cd7:	mov    r9d,0x104
   140005cdd:	lea    r8,[rbp+0x270]
   140005ce4:	mov    rdx,rsi
   140005ce7:	lea    rcx,[rbp+0x6b0]
   140005cee:	call   QWORD PTR [rip+0x2c80c]        # 0x140032500
   140005cf4:	test   r14b,r14b
   140005cf7:	je     0x140005d3c
   140005cf9:	lea    r9,[rbp+0x270]
   140005d00:	mov    edx,0x104
   140005d05:	lea    r8,[rip+0x2d5bc]        # 0x1400332c8
   140005d0c:	lea    rcx,[rbp+0x50]
   140005d10:	call   QWORD PTR [rip+0x2c85a]        # 0x140032570
   140005d16:	mov    rcx,QWORD PTR [rip+0x4146b]        # 0x140047188
   140005d1d:	lea    r8,[rip+0x2d75c]        # 0x140033480
   140005d24:	mov    r9d,0x1
   140005d2a:	mov    DWORD PTR [rsp+0x20],0x0
   140005d32:	lea    rdx,[rbp+0x50]
   140005d36:	mov    rax,QWORD PTR [rcx]
   140005d39:	call   QWORD PTR [rax+0x68]
   140005d3c:	mov    rcx,QWORD PTR [rip+0x41445]        # 0x140047188
   140005d43:	lea    r8,[rip+0x2d736]        # 0x140033480
   140005d4a:	mov    r9d,0x1
   140005d50:	mov    DWORD PTR [rsp+0x20],0x0
   140005d58:	lea    rdx,[rbp+0x270]
   140005d5f:	mov    rax,QWORD PTR [rcx]
   140005d62:	call   QWORD PTR [rax+0x68]
   140005d65:	jmp    0x140005a11
   140005d6a:	lea    rdx,[rip+0x2cfab]        # 0x140032d1c
   140005d71:	mov    rcx,rbx
   140005d74:	call   QWORD PTR [rip+0x2c7e6]        # 0x140032560
   140005d7a:	test   eax,eax
   140005d7c:	jne    0x1400060e8
   140005d82:	test   r14b,r14b
   140005d85:	je     0x140005dc6
   140005d87:	lea    r9,[rsp+0x40]
   140005d8c:	mov    edx,0x104
   140005d91:	lea    r8,[rip+0x2d530]        # 0x1400332c8
   140005d98:	lea    rcx,[rbp+0x50]
   140005d9c:	call   QWORD PTR [rip+0x2c7ce]        # 0x140032570
   140005da2:	mov    rcx,QWORD PTR [rip+0x413df]        # 0x140047188
   140005da9:	lea    r8,[rip+0x2d434]        # 0x1400331e4
   140005db0:	xor    ebx,ebx
   140005db2:	lea    rdx,[rbp+0x50]
   140005db6:	mov    DWORD PTR [rsp+0x20],ebx
   140005dba:	mov    rax,QWORD PTR [rcx]
   140005dbd:	lea    r9d,[rbx+0x1]
   140005dc1:	call   QWORD PTR [rax+0x68]
   140005dc4:	jmp    0x140005dc8
   140005dc6:	xor    ebx,ebx
   140005dc8:	mov    rcx,QWORD PTR [rip+0x413b9]        # 0x140047188
   140005dcf:	lea    r8,[rip+0x2d40e]        # 0x1400331e4
   140005dd6:	mov    r9d,0x1
   140005ddc:	mov    DWORD PTR [rsp+0x20],ebx
   140005de0:	lea    rdx,[rsp+0x40]
   140005de5:	mov    rax,QWORD PTR [rcx]
   140005de8:	call   QWORD PTR [rax+0x68]
   140005deb:	cmp    BYTE PTR [rip+0x4127a],0x0        # 0x14004706c
   140005df2:	jne    0x140005ec7
   140005df8:	call   QWORD PTR [rip+0x2c6ba]        # 0x1400324b8
   140005dfe:	lea    rdx,[rip+0x2d69b]        # 0x1400334a0
   140005e05:	mov    rcx,rax
   140005e08:	mov    r8,QWORD PTR [rax]
   140005e0b:	call   QWORD PTR [r8+0x20]
   140005e0f:	test   al,al
   140005e11:	je     0x140005ec7
   140005e17:	call   QWORD PTR [rip+0x2c69b]        # 0x1400324b8
   140005e1d:	lea    rdx,[rip+0x2d2d0]        # 0x1400330f4
   140005e24:	mov    rcx,rax
   140005e27:	mov    r8,QWORD PTR [rax]
   140005e2a:	call   QWORD PTR [r8+0x20]
   140005e2e:	test   al,al
   140005e30:	jne    0x140005ec7
   140005e36:	mov    r9d,0x104
   140005e3c:	lea    r8,[rbp+0x160]
   140005e43:	lea    rdx,[rip+0x2d666]        # 0x1400334b0
   140005e4a:	lea    rcx,[rbp+0x490]
   140005e51:	call   QWORD PTR [rip+0x2c6a9]        # 0x140032500
   140005e57:	test   r14b,r14b
   140005e5a:	je     0x140005e9b
   140005e5c:	lea    r9,[rbp+0x160]
   140005e63:	mov    edx,0x104
   140005e68:	lea    r8,[rip+0x2d459]        # 0x1400332c8
   140005e6f:	lea    rcx,[rbp+0x50]
   140005e73:	call   QWORD PTR [rip+0x2c6f7]        # 0x140032570
   140005e79:	mov    rcx,QWORD PTR [rip+0x41308]        # 0x140047188
   140005e80:	lea    r8,[rip+0x2d35d]        # 0x1400331e4
   140005e87:	mov    r9d,0x1
   140005e8d:	mov    DWORD PTR [rsp+0x20],ebx
   140005e91:	lea    rdx,[rbp+0x50]
   140005e95:	mov    rax,QWORD PTR [rcx]
   140005e98:	call   QWORD PTR [rax+0x68]
   140005e9b:	mov    rcx,QWORD PTR [rip+0x412e6]        # 0x140047188
   140005ea2:	lea    r8,[rip+0x2d33b]        # 0x1400331e4
   140005ea9:	mov    r9d,0x1
   140005eaf:	mov    DWORD PTR [rsp+0x20],ebx
   140005eb3:	lea    rdx,[rbp+0x160]
   140005eba:	mov    rax,QWORD PTR [rcx]
   140005ebd:	call   QWORD PTR [rax+0x68]
   140005ec0:	mov    BYTE PTR [rip+0x411a5],0x1        # 0x14004706c
   140005ec7:	test   r15b,r15b
   140005eca:	jne    0x14000602f
   140005ed0:	mov    r9d,0x104
   140005ed6:	lea    r8,[rbp+0x160]
   140005edd:	mov    rdx,rsi
   140005ee0:	lea    rcx,[rbp+0x6b0]
   140005ee7:	call   QWORD PTR [rip+0x2c613]        # 0x140032500
   140005eed:	test   r14b,r14b
   140005ef0:	je     0x140005f31
   140005ef2:	lea    r9,[rbp+0x160]
   140005ef9:	mov    edx,0x104
   140005efe:	lea    r8,[rip+0x2d3c3]        # 0x1400332c8
   140005f05:	lea    rcx,[rbp+0x50]
   140005f09:	call   QWORD PTR [rip+0x2c661]        # 0x140032570
   140005f0f:	mov    rcx,QWORD PTR [rip+0x41272]        # 0x140047188
   140005f16:	lea    r8,[rip+0x2d563]        # 0x140033480
   140005f1d:	mov    r9d,0x1
   140005f23:	mov    DWORD PTR [rsp+0x20],ebx
   140005f27:	lea    rdx,[rbp+0x50]
   140005f2b:	mov    rax,QWORD PTR [rcx]
   140005f2e:	call   QWORD PTR [rax+0x68]
   140005f31:	mov    rcx,QWORD PTR [rip+0x41250]        # 0x140047188
   140005f38:	lea    r8,[rip+0x2d541]        # 0x140033480
   140005f3f:	mov    r9d,0x1
   140005f45:	mov    DWORD PTR [rsp+0x20],ebx
   140005f49:	lea    rdx,[rbp+0x160]
   140005f50:	mov    rax,QWORD PTR [rcx]
   140005f53:	call   QWORD PTR [rax+0x68]
   140005f56:	cmp    BYTE PTR [rip+0x41110],0x0        # 0x14004706d
   140005f5d:	jne    0x14000602f
   140005f63:	call   QWORD PTR [rip+0x2c54f]        # 0x1400324b8
   140005f69:	lea    rdx,[rip+0x2d530]        # 0x1400334a0
   140005f70:	mov    rcx,rax
   140005f73:	mov    r8,QWORD PTR [rax]
   140005f76:	call   QWORD PTR [r8+0x20]
   140005f7a:	test   al,al
   140005f7c:	je     0x14000602f
   140005f82:	call   QWORD PTR [rip+0x2c530]        # 0x1400324b8
   140005f88:	lea    rdx,[rip+0x2d165]        # 0x1400330f4
   140005f8f:	mov    rcx,rax
   140005f92:	mov    r8,QWORD PTR [rax]
   140005f95:	call   QWORD PTR [r8+0x20]
   140005f99:	test   al,al
   140005f9b:	jne    0x14000602f
   140005fa1:	mov    r9d,0x104
   140005fa7:	lea    r8,[rbp+0x50]
   140005fab:	lea    rdx,[rip+0x2d4fe]        # 0x1400334b0
   140005fb2:	lea    rcx,[rbp+0x6b0]
   140005fb9:	call   QWORD PTR [rip+0x2c541]        # 0x140032500
   140005fbf:	test   r14b,r14b
   140005fc2:	je     0x140006006
   140005fc4:	lea    r9,[rbp+0x50]
   140005fc8:	mov    edx,0x104
   140005fcd:	lea    r8,[rip+0x2d2f4]        # 0x1400332c8
   140005fd4:	lea    rcx,[rbp+0x5a0]
   140005fdb:	call   QWORD PTR [rip+0x2c58f]        # 0x140032570
   140005fe1:	mov    rcx,QWORD PTR [rip+0x411a0]        # 0x140047188
   140005fe8:	lea    r8,[rip+0x2d491]        # 0x140033480
   140005fef:	mov    r9d,0x1
   140005ff5:	mov    DWORD PTR [rsp+0x20],ebx
   140005ff9:	lea    rdx,[rbp+0x5a0]
   140006000:	mov    rax,QWORD PTR [rcx]
   140006003:	call   QWORD PTR [rax+0x68]
   140006006:	mov    rcx,QWORD PTR [rip+0x4117b]        # 0x140047188
   14000600d:	lea    r8,[rip+0x2d46c]        # 0x140033480
   140006014:	mov    r9d,0x1
   14000601a:	mov    DWORD PTR [rsp+0x20],ebx
   14000601e:	lea    rdx,[rbp+0x50]
   140006022:	mov    rax,QWORD PTR [rcx]
   140006025:	call   QWORD PTR [rax+0x68]
   140006028:	mov    BYTE PTR [rip+0x4103e],0x1        # 0x14004706d
   14000602f:	mov    r9d,0x104
   140006035:	lea    r8,[rbp+0x270]
   14000603c:	lea    rdx,[rip+0x2d2a5]        # 0x1400332e8
   140006043:	lea    rcx,[rsp+0x40]
   140006048:	call   QWORD PTR [rip+0x2c4b2]        # 0x140032500
   14000604e:	mov    rcx,QWORD PTR [rip+0x41133]        # 0x140047188
   140006055:	lea    r8,[rip+0x2d46c]        # 0x1400334c8
   14000605c:	mov    r9d,0x1
   140006062:	mov    DWORD PTR [rsp+0x20],ebx
   140006066:	lea    rdx,[rbp+0x270]
   14000606d:	mov    rax,QWORD PTR [rcx]
   140006070:	call   QWORD PTR [rax+0x68]
   140006073:	mov    r9d,0x104
   140006079:	lea    r8,[rbp+0x270]
   140006080:	lea    rdx,[rip+0x2d449]        # 0x1400334d0
   140006087:	lea    rcx,[rsp+0x40]
   14000608c:	call   QWORD PTR [rip+0x2c46e]        # 0x140032500
   140006092:	mov    rcx,QWORD PTR [rip+0x410ef]        # 0x140047188
   140006099:	lea    r8,[rip+0x2d428]        # 0x1400334c8
   1400060a0:	mov    r9d,0x1
   1400060a6:	mov    DWORD PTR [rsp+0x20],ebx
   1400060aa:	lea    rdx,[rbp+0x270]
   1400060b1:	mov    rax,QWORD PTR [rcx]
   1400060b4:	call   QWORD PTR [rax+0x68]
   1400060b7:	cmp    BYTE PTR [rbp+0xd70],0x0
   1400060be:	jne    0x140005a11
   1400060c4:	mov    r8d,0x104
   1400060ca:	lea    rdx,[rsp+0x40]
   1400060cf:	lea    rcx,[rbp+0x8d0]
   1400060d6:	call   QWORD PTR [rip+0x2c47c]        # 0x140032558
   1400060dc:	mov    BYTE PTR [rbp+0xd70],0x1
   1400060e3:	jmp    0x140005a11
   1400060e8:	lea    rdx,[rip+0x2d3e5]        # 0x1400334d4
   1400060ef:	mov    rcx,rbx
   1400060f2:	call   QWORD PTR [rip+0x2c468]        # 0x140032560
   1400060f8:	test   eax,eax
   1400060fa:	jne    0x140006130
   1400060fc:	mov    rcx,QWORD PTR [rip+0x41085]        # 0x140047188
   140006103:	lea    r8,[rip+0x2d3ce]        # 0x1400334d8
   14000610a:	mov    bl,0x1
   14000610c:	mov    DWORD PTR [rsp+0x20],0x0
   140006114:	mov    r9d,0x1
   14000611a:	mov    BYTE PTR [rbp+0xd60],bl
   140006120:	lea    rdx,[rsp+0x40]
   140006125:	mov    rax,QWORD PTR [rcx]
   140006128:	call   QWORD PTR [rax+0x68]
   14000612b:	jmp    0x140005a18
   140006130:	lea    rdx,[rip+0x2d3a9]        # 0x1400334e0
   140006137:	mov    rcx,rbx
   14000613a:	call   QWORD PTR [rip+0x2c420]        # 0x140032560
   140006140:	test   eax,eax
   140006142:	jne    0x1400061d4
   140006148:	mov    r8d,0x104
   14000614e:	lea    rdx,[rsp+0x40]
   140006153:	lea    rcx,[rbp+0xc00]
   14000615a:	call   QWORD PTR [rip+0x2c3f8]        # 0x140032558
   140006160:	mov    rcx,QWORD PTR [rip+0x41021]        # 0x140047188
   140006167:	lea    r8,[rip+0x2d37e]        # 0x1400334ec
   14000616e:	mov    r9d,0x1
   140006174:	mov    DWORD PTR [rsp+0x20],0x0
   14000617c:	lea    rdx,[rbp+0xc00]
   140006183:	mov    rax,QWORD PTR [rcx]
   140006186:	call   QWORD PTR [rax+0x68]
   140006189:	mov    r9d,0x104
   14000618f:	lea    r8,[rbp+0x5a0]
   140006196:	mov    rdx,rsi
   140006199:	lea    rcx,[rbp+0x6b0]
   1400061a0:	call   QWORD PTR [rip+0x2c35a]        # 0x140032500
   1400061a6:	mov    rcx,QWORD PTR [rip+0x40fdb]        # 0x140047188
   1400061ad:	lea    r8,[rip+0x2d344]        # 0x1400334f8
   1400061b4:	mov    r9d,0x1
   1400061ba:	mov    DWORD PTR [rsp+0x20],0x0
   1400061c2:	lea    rdx,[rbp+0x5a0]
   1400061c9:	mov    rax,QWORD PTR [rcx]
   1400061cc:	call   QWORD PTR [rax+0x68]
   1400061cf:	jmp    0x140005a11
   1400061d4:	test   dil,dil
   1400061d7:	jne    0x140006223
   1400061d9:	lea    rdx,[rip+0x2d328]        # 0x140033508
   1400061e0:	mov    rcx,rbx
   1400061e3:	call   QWORD PTR [rip+0x2c377]        # 0x140032560
   1400061e9:	test   eax,eax
   1400061eb:	jne    0x140006223
   1400061ed:	mov    rcx,QWORD PTR [rip+0x40f94]        # 0x140047188
   1400061f4:	lea    r8,[rip+0x2d1c5]        # 0x1400333c0
   1400061fb:	mov    dil,0x1
   1400061fe:	mov    DWORD PTR [rsp+0x20],0x0
   140006206:	mov    r9d,0x1
   14000620c:	mov    BYTE PTR [rbp+0xd68],dil
   140006213:	lea    rdx,[rsp+0x40]
   140006218:	mov    rax,QWORD PTR [rcx]
   14000621b:	call   QWORD PTR [rax+0x68]
   14000621e:	jmp    0x140005a11
   140006223:	test   r15b,r15b
   140006226:	je     0x140005a11
   14000622c:	lea    rdx,[rip+0x2d2dd]        # 0x140033510
   140006233:	mov    rcx,rbx
   140006236:	call   QWORD PTR [rip+0x2c324]        # 0x140032560
   14000623c:	test   eax,eax
   14000623e:	jne    0x140005a11
   140006244:	mov    r9d,0x104
   14000624a:	lea    r8,[rbp+0x50]
   14000624e:	mov    rdx,rsi
   140006251:	lea    rcx,[rbp+0x6b0]
   140006258:	call   QWORD PTR [rip+0x2c2a2]        # 0x140032500
   14000625e:	test   r14b,r14b
   140006261:	je     0x1400062a9
   140006263:	lea    r9,[rbp+0x50]
   140006267:	mov    edx,0x104
   14000626c:	lea    r8,[rip+0x2d055]        # 0x1400332c8
   140006273:	lea    rcx,[rbp+0x5a0]
   14000627a:	call   QWORD PTR [rip+0x2c2f0]        # 0x140032570
   140006280:	mov    rcx,QWORD PTR [rip+0x40f01]        # 0x140047188
   140006287:	lea    r8,[rip+0x2d1f2]        # 0x140033480
   14000628e:	mov    r9d,0x1
   140006294:	mov    DWORD PTR [rsp+0x20],0x0
   14000629c:	lea    rdx,[rbp+0x5a0]
   1400062a3:	mov    rax,QWORD PTR [rcx]
   1400062a6:	call   QWORD PTR [rax+0x68]
   1400062a9:	mov    rcx,QWORD PTR [rip+0x40ed8]        # 0x140047188
   1400062b0:	lea    r8,[rip+0x2d1c9]        # 0x140033480
   1400062b7:	mov    r9d,0x1
   1400062bd:	mov    DWORD PTR [rsp+0x20],0x0
   1400062c5:	lea    rdx,[rbp+0x50]
   1400062c9:	mov    rax,QWORD PTR [rcx]
   1400062cc:	call   QWORD PTR [rax+0x68]
   1400062cf:	jmp    0x140005a11
   1400062d4:	xor    r15d,r15d
   1400062d7:	mov    r12,QWORD PTR [rsp+0xe28]
   1400062df:	test   dil,dil
   1400062e2:	jne    0x14000630a
   1400062e4:	mov    rcx,QWORD PTR [rip+0x40e9d]        # 0x140047188
   1400062eb:	lea    r8,[rip+0x2d0ce]        # 0x1400333c0
   1400062f2:	mov    r9d,0x1
   1400062f8:	mov    DWORD PTR [rsp+0x20],r15d
   1400062fd:	lea    rdx,[rbp+0x8d0]
   140006304:	mov    rax,QWORD PTR [rcx]
   140006307:	call   QWORD PTR [rax+0x68]
   14000630a:	mov    rcx,QWORD PTR [rip+0x40e77]        # 0x140047188
   140006311:	lea    r8,[rip+0x2cecc]        # 0x1400331e4
   140006318:	mov    r9d,0x1
   14000631e:	mov    DWORD PTR [rsp+0x20],r15d
   140006323:	lea    rdx,[rbp+0xaf0]
   14000632a:	mov    rax,QWORD PTR [rcx]
   14000632d:	call   QWORD PTR [rax+0x68]
   140006330:	mov    rcx,r15
   140006333:	nop    DWORD PTR [rax+0x0]
   140006337:	nop    WORD PTR [rax+rax*1+0x0]
   140006340:	movzx  eax,BYTE PTR [rbp+rcx*1+0x490]
   140006348:	mov    BYTE PTR [rbp+rcx*1+0x7c0],al
   14000634f:	lea    rcx,[rcx+0x1]
   140006353:	test   al,al
   140006355:	jne    0x140006340
   140006357:	lea    rcx,[rbp+0x7c0]
   14000635e:	call   QWORD PTR [rip+0x2c1b4]        # 0x140032518
   140006364:	or     r9d,0xffffffff
   140006368:	lea    rdx,[rip+0x2d1b1]        # 0x140033520
   14000636f:	mov    r8d,0x104
   140006375:	lea    rcx,[rbp+0x7c0]
   14000637c:	call   QWORD PTR [rip+0x2c1ce]        # 0x140032550
   140006382:	mov    rcx,QWORD PTR [rsp+0x38]
   140006387:	xor    sil,sil
   14000638a:	call   0x14001e200
   14000638f:	mov    rbx,rax
   140006392:	test   rax,rax
   140006395:	je     0x140006499
   14000639b:	nop    DWORD PTR [rax+rax*1+0x0]
   1400063a0:	mov    rcx,rbx
   1400063a3:	call   0x14001e270
   1400063a8:	xor    r9d,r9d
   1400063ab:	mov    QWORD PTR [rsp+0x20],r15
   1400063b0:	lea    r8,[rip+0x2c3e9]        # 0x1400327a0
   1400063b7:	xor    edx,edx
   1400063b9:	mov    rcx,rbx
   1400063bc:	mov    rdi,rax
   1400063bf:	call   0x14001e360
   1400063c4:	lea    rdx,[rip+0x2d02d]        # 0x1400333f8
   1400063cb:	mov    rcx,rdi
   1400063ce:	mov    r14,rax
   1400063d1:	call   QWORD PTR [rip+0x2c189]        # 0x140032560
   1400063d7:	test   eax,eax
   1400063d9:	je     0x140006485
   1400063df:	lea    rdx,[rip+0x2d0a2]        # 0x140033488
   1400063e6:	mov    rcx,rdi
   1400063e9:	call   QWORD PTR [rip+0x2c171]        # 0x140032560
   1400063ef:	test   eax,eax
   1400063f1:	je     0x140006485
   1400063f7:	mov    r9d,0x104
   1400063fd:	lea    r8,[rbp+0x50]
   140006401:	mov    rdx,r14
   140006404:	lea    rcx,[rbp+0x7c0]
   14000640b:	call   QWORD PTR [rip+0x2c0ef]        # 0x140032500
   140006411:	test   sil,sil
   140006414:	jne    0x140006462
   140006416:	mov    rcx,QWORD PTR [rip+0x40d6b]        # 0x140047188
   14000641d:	lea    r8,[rip+0x2d10c]        # 0x140033530
   140006424:	mov    r9d,0x1
   14000642a:	mov    DWORD PTR [rsp+0x20],r15d
   14000642f:	lea    rdx,[rbp+0x7c0]
   140006436:	mov    sil,0x1
   140006439:	mov    rax,QWORD PTR [rcx]
   14000643c:	call   QWORD PTR [rax+0x68]
   14000643f:	mov    rcx,QWORD PTR [rip+0x40d42]        # 0x140047188
   140006446:	lea    r8,[rip+0x2d0fb]        # 0x140033548
   14000644d:	mov    r9d,0x1
   140006453:	mov    DWORD PTR [rsp+0x20],r15d
   140006458:	lea    rdx,[rbp+0x50]
   14000645c:	mov    rax,QWORD PTR [rcx]
   14000645f:	call   QWORD PTR [rax+0x68]
   140006462:	mov    rcx,QWORD PTR [rip+0x40d1f]        # 0x140047188
   140006469:	lea    r8,[rip+0x2d0f0]        # 0x140033560
   140006470:	mov    r9d,0x1
   140006476:	mov    DWORD PTR [rsp+0x20],r15d
   14000647b:	lea    rdx,[rbp+0x50]
   14000647f:	mov    rax,QWORD PTR [rcx]
   140006482:	call   QWORD PTR [rax+0x68]
   140006485:	mov    rcx,rbx
   140006488:	call   0x14001e330
   14000648d:	mov    rbx,rax
   140006490:	test   rax,rax
   140006493:	jne    0x1400063a0
   140006499:	mov    rcx,QWORD PTR [rip+0x40ce8]        # 0x140047188
   1400064a0:	lea    rdx,[rip+0x2d045]        # 0x1400334ec
   1400064a7:	mov    r8b,0x1
   1400064aa:	mov    rax,QWORD PTR [rcx]
   1400064ad:	call   QWORD PTR [rax+0xa0]
   1400064b3:	mov    rcx,QWORD PTR [rip+0x40cce]        # 0x140047188
   1400064ba:	lea    rdx,[rip+0x2d037]        # 0x1400334f8
   1400064c1:	mov    r8b,0x1
   1400064c4:	mov    rax,QWORD PTR [rcx]
   1400064c7:	call   QWORD PTR [rax+0xa0]
   1400064cd:	mov    rcx,QWORD PTR [rip+0x40cb4]        # 0x140047188
   1400064d4:	lea    rdx,[rip+0x2cfa5]        # 0x140033480
   1400064db:	mov    r8b,0x1
   1400064de:	mov    rax,QWORD PTR [rcx]
   1400064e1:	call   QWORD PTR [rax+0xa0]
   1400064e7:	mov    rcx,QWORD PTR [rip+0x40c9a]        # 0x140047188
   1400064ee:	lea    rdx,[rip+0x2cecb]        # 0x1400333c0
   1400064f5:	mov    r8b,0x1
   1400064f8:	mov    rax,QWORD PTR [rcx]
   1400064fb:	call   QWORD PTR [rax+0xa0]
   140006501:	mov    rcx,QWORD PTR [rip+0x40c80]        # 0x140047188
   140006508:	lea    rdx,[rip+0x2cdf1]        # 0x140033300
   14000650f:	mov    r8b,0x1
   140006512:	mov    rax,QWORD PTR [rcx]
   140006515:	call   QWORD PTR [rax+0xa0]
   14000651b:	mov    rcx,QWORD PTR [rip+0x40c66]        # 0x140047188
   140006522:	lea    rdx,[rip+0x2cf9f]        # 0x1400334c8
   140006529:	mov    r8b,0x1
   14000652c:	mov    rax,QWORD PTR [rcx]
   14000652f:	call   QWORD PTR [rax+0xa0]
   140006535:	mov    rcx,QWORD PTR [rip+0x40c4c]        # 0x140047188
   14000653c:	lea    rdx,[rip+0x2cf95]        # 0x1400334d8
   140006543:	mov    r8b,0x1
   140006546:	mov    rax,QWORD PTR [rcx]
   140006549:	call   QWORD PTR [rax+0xa0]
   14000654f:	mov    rcx,QWORD PTR [rip+0x40c32]        # 0x140047188
   140006556:	lea    rdx,[rip+0x2cfeb]        # 0x140033548
   14000655d:	mov    r8b,0x1
   140006560:	mov    rax,QWORD PTR [rcx]
   140006563:	call   QWORD PTR [rax+0xa0]
   140006569:	mov    rcx,QWORD PTR [rip+0x40c18]        # 0x140047188
   140006570:	lea    rdx,[rip+0x2cfe9]        # 0x140033560
   140006577:	mov    r8b,0x1
   14000657a:	mov    rax,QWORD PTR [rcx]
   14000657d:	call   QWORD PTR [rax+0xa0]
   140006583:	mov    r15,QWORD PTR [rsp+0xe18]
   14000658b:	mov    al,0x1
   14000658d:	mov    r14,QWORD PTR [rsp+0xe20]
   140006595:	mov    rdi,QWORD PTR [rsp+0xe30]
   14000659d:	mov    rsi,QWORD PTR [rsp+0xe38]
   1400065a5:	add    rsp,0xe40
   1400065ac:	pop    r13
   1400065ae:	pop    rbx
   1400065af:	pop    rbp
   1400065b0:	ret    
   1400065b1:	mov    r8b,0x1
   1400065b4:	lea    rcx,[rbp+0x5a0]
   1400065bb:	mov    edx,0x104
   1400065c0:	call   QWORD PTR [rip+0x2bc92]        # 0x140032258
   1400065c6:	mov    rcx,QWORD PTR [rip+0x40bbb]        # 0x140047188
   1400065cd:	lea    r8,[rip+0x2cdec]        # 0x1400333c0
   1400065d4:	mov    r9d,0x1
   1400065da:	mov    DWORD PTR [rsp+0x20],0x0
   1400065e2:	lea    rdx,[rbp+0x5a0]
   1400065e9:	mov    rax,QWORD PTR [rcx]
   1400065ec:	call   QWORD PTR [rax+0x68]
   1400065ef:	mov    rcx,QWORD PTR [rip+0x40b92]        # 0x140047188
   1400065f6:	lea    rdx,[rip+0x2cdc3]        # 0x1400333c0
   1400065fd:	mov    r8b,0x1
   140006600:	mov    rax,QWORD PTR [rcx]
   140006603:	call   QWORD PTR [rax+0xa0]
   140006609:	mov    rcx,QWORD PTR [rip+0x40b78]        # 0x140047188
   140006610:	lea    rdx,[rip+0x2cd39]        # 0x140033350
   140006617:	xor    r8d,r8d
   14000661a:	mov    rax,QWORD PTR [rcx]
   14000661d:	call   QWORD PTR [rax+0xa0]
   140006623:	mov    al,0x1
   140006625:	add    rsp,0xe40
   14000662c:	pop    r13
   14000662e:	pop    rbx
   14000662f:	pop    rbp
   140006630:	ret    
   140006631:	int3   
   140006632:	int3   
   140006633:	int3   
   140006634:	int3   
   140006635:	int3   
   140006636:	int3   
   140006637:	int3   
   140006638:	int3   
   140006639:	int3   
   14000663a:	int3   
   14000663b:	int3   
   14000663c:	int3   
   14000663d:	int3   
   14000663e:	int3   
   14000663f:	int3   
   140006640:	cmp    QWORD PTR [rip+0x40ed0],0x0        # 0x140047518
   140006648:	jne    0x14001bb20
   14000664e:	ret    
   14000664f:	int3   
   140006650:	test   rdx,rdx
   140006653:	je     0x140006987
   140006659:	push   rbp
   14000665a:	push   rbx
   14000665b:	push   rdi
   14000665c:	lea    rbp,[rsp-0x47]
   140006661:	sub    rsp,0x90
   140006668:	cmp    BYTE PTR [rdx],0x0
   14000666b:	mov    rbx,rdx
   14000666e:	mov    rdi,rcx
   140006671:	je     0x14000697d
   140006677:	mov    eax,DWORD PTR [rcx+0x1e4]
   14000667d:	test   eax,eax
   14000667f:	jne    0x14000671d
   140006685:	lea    edx,[rax+0x4]
   140006688:	mov    rax,QWORD PTR [rip+0x2bcf9]        # 0x140032388
   14000668f:	mov    ecx,DWORD PTR [rax]
   140006691:	call   QWORD PTR [rip+0x2be11]        # 0x1400324a8
   140006697:	test   al,al
   140006699:	je     0x1400066dc
   14000669b:	lea    rax,[rip+0x2cf3e]        # 0x1400335e0
   1400066a2:	mov    DWORD PTR [rbp-0x1],0x5cb
   1400066a9:	mov    QWORD PTR [rbp-0x9],rax
   1400066ad:	lea    r9,[rip+0x2d21c]        # 0x1400338d0
   1400066b4:	lea    rax,[rip+0x2d2a5]        # 0x140033960
   1400066bb:	mov    QWORD PTR [rsp+0x20],rbx
   1400066c0:	mov    QWORD PTR [rbp+0x7],rax
   1400066c4:	lea    r8,[rbp-0x9]
   1400066c8:	mov    rax,QWORD PTR [rip+0x2bcb9]        # 0x140032388
   1400066cf:	mov    edx,0x4
   1400066d4:	mov    ecx,DWORD PTR [rax]
   1400066d6:	call   QWORD PTR [rip+0x2bdbc]        # 0x140032498
   1400066dc:	call   QWORD PTR [rip+0x2bea6]        # 0x140032588
   1400066e2:	test   al,al
   1400066e4:	je     0x140006711
   1400066e6:	call   QWORD PTR [rip+0x2bd94]        # 0x140032480
   1400066ec:	lea    rcx,[rip+0x2c0b9]        # 0x1400327ac
   1400066f3:	xorps  xmm0,xmm0
   1400066f6:	lea    rdx,[rbp+0xf]
   1400066fa:	mov    DWORD PTR [rbp+0x17],eax
   1400066fd:	mov    QWORD PTR [rbp+0xf],rcx
   140006701:	mov    r8b,0x1
   140006704:	xor    ecx,ecx
   140006706:	movdqu XMMWORD PTR [rbp+0x1f],xmm0
   14000670b:	call   QWORD PTR [rip+0x2bd67]        # 0x140032478
   140006711:	mov    ecx,0x1
   140006716:	call   QWORD PTR [rip+0x2bb2c]        # 0x140032248
   14000671c:	int3   
   14000671d:	add    rcx,0x168
   140006724:	lea    rdx,[rbp+0x7f]
   140006728:	mov    r8,rbx
   14000672b:	call   0x14001ce30
   140006730:	mov    ecx,0xffff
   140006735:	cmp    WORD PTR [rax],cx
   140006738:	je     0x14000697d
   14000673e:	mov    QWORD PTR [rsp+0x88],rsi
   140006746:	lea    rdx,[rbp+0x6f]
   14000674a:	lea    rsi,[rdi+0x150]
   140006751:	mov    QWORD PTR [rsp+0x80],r14
   140006759:	lea    rcx,[rsi+0x18]
   14000675d:	mov    r8,rbx
   140006760:	call   0x14001c980
   140006765:	movzx  r14d,WORD PTR [rbp+0x6f]
   14000676a:	mov    edx,DWORD PTR [rsi]
   14000676c:	cmp    edx,r14d
   14000676f:	jg     0x140006785
   140006771:	lea    r8d,[r14+0x1]
   140006775:	cmp    edx,r8d
   140006778:	jge    0x140006785
   14000677a:	sub    r8d,edx
   14000677d:	mov    rcx,rsi
   140006780:	call   0x1400038c0
   140006785:	mov    rax,QWORD PTR [rsi+0x8]
   140006789:	cmp    DWORD PTR [rax+r14*4],0x0
   14000678e:	je     0x14000696d
   140006794:	lea    rcx,[rsi+0x18]
   140006798:	mov    r8,rbx
   14000679b:	lea    rdx,[rbp+0x77]
   14000679f:	call   0x14001c980
   1400067a4:	movzx  r14d,WORD PTR [rbp+0x77]
   1400067a9:	mov    edx,DWORD PTR [rsi]
   1400067ab:	cmp    edx,r14d
   1400067ae:	jg     0x1400067c4
   1400067b0:	lea    r8d,[r14+0x1]
   1400067b4:	cmp    edx,r8d
   1400067b7:	jge    0x1400067c4
   1400067b9:	sub    r8d,edx
   1400067bc:	mov    rcx,rsi
   1400067bf:	call   0x1400038c0
   1400067c4:	mov    rax,QWORD PTR [rsi+0x8]
   1400067c8:	dec    DWORD PTR [rax+r14*4]
   1400067cc:	cmp    DWORD PTR [rax+r14*4],0x0
   1400067d1:	jg     0x14000696d
   1400067d7:	mov    rdx,rbx
   1400067da:	mov    QWORD PTR [rbp-0x19],0x0
   1400067e2:	mov    rcx,rdi
   1400067e5:	call   0x140003b70
   1400067ea:	test   al,al
   1400067ec:	je     0x140006859
   1400067ee:	mov    r8,rbx
   1400067f1:	lea    rdx,[rbp-0x11]
   1400067f5:	mov    rcx,rdi
   1400067f8:	call   0x140002db0
   1400067fd:	cmp    QWORD PTR [rbp-0x19],0x0
   140006802:	mov    rsi,rax
   140006805:	mov    r14,QWORD PTR [rax]
   140006808:	je     0x140006813
   14000680a:	lea    rcx,[rbp-0x19]
   14000680e:	call   0x14001b030
   140006813:	mov    QWORD PTR [rbp-0x19],r14
   140006817:	mov    QWORD PTR [rsi],0x0
   14000681e:	cmp    QWORD PTR [rbp-0x11],0x0
   140006823:	je     0x14000682e
   140006825:	lea    rcx,[rbp-0x11]
   140006829:	call   0x14001b030
   14000682e:	mov    rax,QWORD PTR [rbp-0x19]
   140006832:	test   rax,rax
   140006835:	je     0x140006859
   140006837:	or     rcx,0xffffffffffffffff
   14000683b:	nop    DWORD PTR [rax+rax*1+0x0]
   140006840:	inc    rcx
   140006843:	cmp    BYTE PTR [rax+rcx*1],0x0
   140006847:	jne    0x140006840
   140006849:	test   ecx,ecx
   14000684b:	jle    0x140006859
   14000684d:	lea    rcx,[rbp-0x19]
   140006851:	call   0x14001b050
   140006856:	mov    rbx,rax
   140006859:	mov    rcx,rdi
   14000685c:	call   0x140003960
   140006861:	mov    rcx,rbx
   140006864:	movzx  esi,al
   140006867:	call   QWORD PTR [rip+0x2bc6b]        # 0x1400324d8
   14000686d:	test   al,al
   14000686f:	je     0x14000690d
   140006875:	mov    rcx,rbx
   140006878:	call   QWORD PTR [rip+0x2bc7a]        # 0x1400324f8
   14000687e:	test   rax,rax
   140006881:	je     0x1400068b6
   140006883:	lea    rdx,[rip+0x2cfae]        # 0x140033838
   14000688a:	mov    rcx,rax
   14000688d:	call   QWORD PTR [rip+0x2bccd]        # 0x140032560
   140006893:	test   eax,eax
   140006895:	jne    0x1400068b6
   140006897:	mov    rcx,QWORD PTR [rip+0x408ea]        # 0x140047188
   14000689e:	lea    r8,[rip+0x2c93f]        # 0x1400331e4
   1400068a5:	mov    rdx,rbx
   1400068a8:	mov    rax,QWORD PTR [rcx]
   1400068ab:	call   QWORD PTR [rax+0x398]
   1400068b1:	jmp    0x14000695d
   1400068b6:	mov    rcx,QWORD PTR [rip+0x408cb]        # 0x140047188
   1400068bd:	lea    r8,[rip+0x2c920]        # 0x1400331e4
   1400068c4:	mov    rdx,rbx
   1400068c7:	mov    rax,QWORD PTR [rcx]
   1400068ca:	call   QWORD PTR [rax+0xe0]
   1400068d0:	test   al,al
   1400068d2:	je     0x14000695d
   1400068d8:	mov    rcx,QWORD PTR [rip+0x408a9]        # 0x140047188
   1400068df:	lea    r8,[rip+0x2c8fe]        # 0x1400331e4
   1400068e6:	mov    rdx,rbx
   1400068e9:	mov    rax,QWORD PTR [rcx]
   1400068ec:	call   QWORD PTR [rax+0x70]
   1400068ef:	test   sil,sil
   1400068f2:	je     0x14000695d
   1400068f4:	mov    rcx,QWORD PTR [rip+0x4088d]        # 0x140047188
   1400068fb:	lea    r8,[rip+0x2cabe]        # 0x1400333c0
   140006902:	mov    rdx,rbx
   140006905:	mov    rax,QWORD PTR [rcx]
   140006908:	call   QWORD PTR [rax+0x70]
   14000690b:	jmp    0x14000695d
   14000690d:	mov    r9,rbx
   140006910:	lea    r8,[rip+0x2cbd5]        # 0x1400334ec
   140006917:	lea    rdx,[rip+0x2c8c6]        # 0x1400331e4
   14000691e:	mov    rcx,rdi
   140006921:	call   0x140004b40
   140006926:	test   sil,sil
   140006929:	je     0x140006944
   14000692b:	mov    r9,rbx
   14000692e:	lea    r8,[rip+0x2cbb7]        # 0x1400334ec
   140006935:	lea    rdx,[rip+0x2ca84]        # 0x1400333c0
   14000693c:	mov    rcx,rdi
   14000693f:	call   0x140004b40
   140006944:	mov    r9,rbx
   140006947:	lea    r8,[rip+0x2cbaa]        # 0x1400334f8
   14000694e:	lea    rdx,[rip+0x2cb2b]        # 0x140033480
   140006955:	mov    rcx,rdi
   140006958:	call   0x140004b40
   14000695d:	cmp    QWORD PTR [rbp-0x19],0x0
   140006962:	je     0x14000696d
   140006964:	lea    rcx,[rbp-0x19]
   140006968:	call   0x14001b030
   14000696d:	mov    rsi,QWORD PTR [rsp+0x88]
   140006975:	mov    r14,QWORD PTR [rsp+0x80]
   14000697d:	add    rsp,0x90
   140006984:	pop    rdi
   140006985:	pop    rbx
   140006986:	pop    rbp
   140006987:	ret    
   140006988:	int3   
   140006989:	int3   
   14000698a:	int3   
   14000698b:	int3   
   14000698c:	int3   
   14000698d:	int3   
   14000698e:	int3   
   14000698f:	int3   
   140006990:	mov    rcx,QWORD PTR [rcx+0x8]
   140006994:	jmp    0x140006650
   140006999:	int3   
   14000699a:	int3   
   14000699b:	int3   
   14000699c:	int3   
   14000699d:	int3   
   14000699e:	int3   
   14000699f:	int3   
   1400069a0:	mov    QWORD PTR [rsp+0x10],rsi
   1400069a5:	mov    QWORD PTR [rsp+0x18],rdi
   1400069aa:	push   rbp
   1400069ab:	lea    rbp,[rsp-0x630]
   1400069b3:	sub    rsp,0x730
   1400069ba:	mov    BYTE PTR [rsp+0x30],0x0
   1400069bf:	mov    BYTE PTR [rsp+0x28],0x0
   1400069c4:	mov    DWORD PTR [rsp+0x20],r9d
   1400069c9:	mov    r9,r8
   1400069cc:	mov    r8,rdx
   1400069cf:	movzx  edx,cl
   1400069d2:	lea    rcx,[rbp-0x70]
   1400069d6:	call   0x1400016a0
   1400069db:	lea    rcx,[rbp-0x70]
   1400069df:	call   0x140003310
   1400069e4:	mov    edi,0x1
   1400069e9:	test   al,al
   1400069eb:	je     0x140006b7c
   1400069f1:	xor    r9d,r9d
   1400069f4:	lea    r8,[rip+0x2c81d]        # 0x140033218
   1400069fb:	lea    rdx,[rip+0x2c826]        # 0x140033228
   140006a02:	lea    rcx,[rbp-0x70]
   140006a06:	call   0x140008980
   140006a0b:	test   rax,rax
   140006a0e:	je     0x140006b7c
   140006a14:	lea    rcx,[rbp-0x70]
   140006a18:	call   0x1400095e0
   140006a1d:	mov    edx,edi
   140006a1f:	mov    QWORD PTR [rsp+0x68],rax
   140006a24:	lea    rcx,[rsp+0x68]
   140006a29:	call   0x140024f20
   140006a2e:	lea    rcx,[rbp-0x70]
   140006a32:	mov    BYTE PTR [rbp+0x16e],dil
   140006a39:	call   0x140005390
   140006a3e:	test   al,al
   140006a40:	je     0x140006b7c
   140006a46:	mov    rcx,QWORD PTR [rip+0x40ad3]        # 0x140047520
   140006a4d:	test   rcx,rcx
   140006a50:	je     0x140006a58
   140006a52:	mov    rax,QWORD PTR [rcx]
   140006a55:	call   QWORD PTR [rax+0x60]
   140006a58:	lea    rcx,[rbp-0x70]
   140006a5c:	call   0x140003700
   140006a61:	lea    rax,[rip+0x2d2c0]        # 0x140033d28
   140006a68:	mov    edx,0x2
   140006a6d:	mov    QWORD PTR [rsp+0x70],rax
   140006a72:	lea    r8,[rsp+0x70]
   140006a77:	lea    rax,[rip+0x2d292]        # 0x140033d10
   140006a7e:	mov    QWORD PTR [rsp+0x78],rax
   140006a83:	lea    rcx,[rbp-0x70]
   140006a87:	lea    rax,[rip+0x2d2b2]        # 0x140033d40
   140006a8e:	mov    QWORD PTR [rbp-0x80],rax
   140006a92:	lea    rax,[rip+0x2d29f]        # 0x140033d38
   140006a99:	mov    QWORD PTR [rbp-0x78],rax
   140006a9d:	call   0x140008c40
   140006aa2:	test   al,al
   140006aa4:	je     0x140006b7c
   140006aaa:	mov    QWORD PTR [rsp+0x740],rbx
   140006ab2:	call   0x140019fb0
   140006ab7:	xor    esi,esi
   140006ab9:	lea    rdx,[rsp+0x40]
   140006abe:	lea    rcx,[rsp+0x48]
   140006ac3:	mov    DWORD PTR [rsp+0x48],esi
   140006ac7:	mov    QWORD PTR [rsp+0x50],rsi
   140006acc:	mov    QWORD PTR [rsp+0x58],rsi
   140006ad1:	mov    BYTE PTR [rsp+0x40],sil
   140006ad6:	call   0x1400046f0
   140006adb:	test   al,al
   140006add:	je     0x140006af0
   140006adf:	movzx  edx,BYTE PTR [rsp+0x40]
   140006ae4:	lea    rcx,[rsp+0x48]
   140006ae9:	call   0x140006e80
   140006aee:	mov    edi,esi
   140006af0:	mov    eax,DWORD PTR [rsp+0x48]
   140006af4:	mov    rdx,QWORD PTR [rsp+0x50]
   140006af9:	sub    eax,0x1
   140006afc:	movsxd rbx,eax
   140006aff:	js     0x140006b1b
   140006b01:	cmp    QWORD PTR [rdx+rbx*8],rsi
   140006b05:	lea    rcx,[rdx+rbx*8]
   140006b09:	je     0x140006b15
   140006b0b:	call   0x14001b030
   140006b10:	mov    rdx,QWORD PTR [rsp+0x50]
   140006b15:	sub    rbx,0x1
   140006b19:	jns    0x140006b01
   140006b1b:	mov    eax,DWORD PTR [rsp+0x5c]
   140006b1f:	mov    rbx,QWORD PTR [rsp+0x740]
   140006b27:	mov    DWORD PTR [rsp+0x48],esi
   140006b2b:	test   eax,0xc0000000
   140006b30:	jne    0x140006b7c
   140006b32:	test   rdx,rdx
   140006b35:	je     0x140006b53
   140006b37:	mov    rax,QWORD PTR [rip+0x2b852]        # 0x140032390
   140006b3e:	mov    rcx,QWORD PTR [rax]
   140006b41:	mov    rax,QWORD PTR [rcx]
   140006b44:	call   QWORD PTR [rax+0x28]
   140006b47:	mov    eax,DWORD PTR [rsp+0x5c]
   140006b4b:	mov    rdx,rsi
   140006b4e:	mov    QWORD PTR [rsp+0x50],rdx
   140006b53:	mov    DWORD PTR [rsp+0x58],esi
   140006b57:	test   eax,0xc0000000
   140006b5c:	jne    0x140006b7c
   140006b5e:	test   rdx,rdx
   140006b61:	je     0x140006b78
   140006b63:	mov    rax,QWORD PTR [rip+0x2b826]        # 0x140032390
   140006b6a:	mov    rcx,QWORD PTR [rax]
   140006b6d:	mov    rax,QWORD PTR [rcx]
   140006b70:	call   QWORD PTR [rax+0x28]
   140006b73:	mov    QWORD PTR [rsp+0x50],rsi
   140006b78:	mov    DWORD PTR [rsp+0x58],esi
   140006b7c:	lea    rcx,[rbp-0x70]
   140006b80:	call   0x140001950
   140006b85:	lea    r11,[rsp+0x730]
   140006b8d:	mov    eax,edi
   140006b8f:	mov    rsi,QWORD PTR [r11+0x18]
   140006b93:	mov    rdi,QWORD PTR [r11+0x20]
   140006b97:	mov    rsp,r11
   140006b9a:	pop    rbp
   140006b9b:	ret    
   140006b9c:	int3   
   140006b9d:	int3   
   140006b9e:	int3   
   140006b9f:	int3   
   140006ba0:	mov    QWORD PTR [rsp+0x8],rbx
   140006ba5:	push   rdi
   140006ba6:	sub    rsp,0x70
   140006baa:	mov    rbx,rdx
   140006bad:	mov    edi,ecx
   140006baf:	lea    rax,[rsp+0x30]
   140006bb4:	test   al,0x7
   140006bb6:	je     0x140006bc3
   140006bb8:	call   QWORD PTR [rip+0x2b9f2]        # 0x1400325b0
   140006bbe:	test   eax,eax
   140006bc0:	je     0x140006bc3
   140006bc2:	int3   
   140006bc3:	xor    r8d,r8d
   140006bc6:	xor    edx,edx
   140006bc8:	lea    rcx,[rsp+0x30]
   140006bcd:	call   QWORD PTR [rip+0x2b7cd]        # 0x1400323a0
   140006bd3:	call   QWORD PTR [rip+0x2b7cf]        # 0x1400323a8
   140006bd9:	call   QWORD PTR [rip+0x2b8d9]        # 0x1400324b8
   140006bdf:	mov    r9,QWORD PTR [rax]
   140006be2:	mov    r8,rbx
   140006be5:	mov    edx,edi
   140006be7:	mov    rcx,rax
   140006bea:	call   QWORD PTR [r9]
   140006bed:	mov    r8b,0x1
   140006bf0:	movzx  edx,r8b
   140006bf4:	xor    ecx,ecx
   140006bf6:	call   QWORD PTR [rip+0x2b874]        # 0x140032470
   140006bfc:	call   QWORD PTR [rip+0x2b8b6]        # 0x1400324b8
   140006c02:	mov    r8,QWORD PTR [rax]
   140006c05:	lea    rdx,[rip+0x2bdbc]        # 0x1400329c8
   140006c0c:	mov    rcx,rax
   140006c0f:	call   QWORD PTR [r8+0x20]
   140006c13:	movzx  ebx,al
   140006c16:	call   QWORD PTR [rip+0x2b89c]        # 0x1400324b8
   140006c1c:	mov    r8,QWORD PTR [rax]
   140006c1f:	lea    rdx,[rip+0x2bdba]        # 0x1400329e0
   140006c26:	mov    rcx,rax
   140006c29:	call   QWORD PTR [r8+0x20]
   140006c2d:	test   bl,bl
   140006c2f:	jne    0x140006c35
   140006c31:	test   al,al
   140006c33:	je     0x140006c40
   140006c35:	xor    edx,edx
   140006c37:	movzx  ecx,al
   140006c3a:	call   QWORD PTR [rip+0x2b610]        # 0x140032250
   140006c40:	mov    DWORD PTR [rsp+0x90],0x1
   140006c4b:	lea    r9,[rip+0x2cfde]        # 0x140033c30
   140006c52:	mov    r8d,0x96
   140006c58:	lea    rdx,[rip+0x2cfe1]        # 0x140033c40
   140006c5f:	lea    rcx,[rip+0x2d02a]        # 0x140033c90
   140006c66:	call   QWORD PTR [rip+0x2b764]        # 0x1400323d0
   140006c6c:	nop
   140006c6d:	lea    rcx,[rip+0x2d04c]        # 0x140033cc0
   140006c74:	call   QWORD PTR [rip+0x2b756]        # 0x1400323d0
   140006c7a:	xor    r9d,r9d
   140006c7d:	xor    r8d,r8d
   140006c80:	xor    edx,edx
   140006c82:	mov    cl,0x1
   140006c84:	call   0x1400069a0
   140006c89:	mov    ebx,eax
   140006c8b:	mov    DWORD PTR [rsp+0x90],eax
   140006c92:	jmp    0x140006ca8
   140006c94:	lea    rcx,[rip+0x2d04d]        # 0x140033ce8
   140006c9b:	call   QWORD PTR [rip+0x2b72f]        # 0x1400323d0
   140006ca1:	mov    ebx,DWORD PTR [rsp+0x90]
   140006ca8:	lea    rcx,[rsp+0x30]
   140006cad:	call   QWORD PTR [rip+0x2b6e5]        # 0x140032398
   140006cb3:	mov    eax,ebx
   140006cb5:	mov    rbx,QWORD PTR [rsp+0x80]
   140006cbd:	add    rsp,0x70
   140006cc1:	pop    rdi
   140006cc2:	ret    
   140006cc3:	int3   
   140006cc4:	int3   
   140006cc5:	int3   
   140006cc6:	int3   
   140006cc7:	int3   
   140006cc8:	int3   
   140006cc9:	int3   
   140006cca:	int3   
   140006ccb:	int3   
   140006ccc:	int3   
   140006ccd:	int3   
   140006cce:	int3   
   140006ccf:	int3   
   140006cd0:	mov    QWORD PTR [rsp+0x8],rbx
   140006cd5:	mov    QWORD PTR [rsp+0x10],rsi
   140006cda:	push   rdi
   140006cdb:	sub    rsp,0x20
   140006cdf:	mov    rbx,rcx
   140006ce2:	mov    edi,r8d
   140006ce5:	mov    ecx,0x18
   140006cea:	mov    rsi,rdx
   140006ced:	call   0x140007bf0
   140006cf2:	test   rax,rax
   140006cf5:	je     0x140006d05
   140006cf7:	mov    r8d,edi
   140006cfa:	mov    rdx,rsi
   140006cfd:	mov    rcx,rax
   140006d00:	call   0x140025ee0
   140006d05:	mov    QWORD PTR [rbx],rax
   140006d08:	mov    rcx,rax
   140006d0b:	mov    BYTE PTR [rbx+0x8],0x1
   140006d0f:	mov    rax,QWORD PTR [rax]
   140006d12:	call   QWORD PTR [rax+0x10]
   140006d15:	cmp    eax,0x1
   140006d18:	jl     0x140006d41
   140006d1a:	je     0x140006d2a
   140006d1c:	cmp    eax,0x2
   140006d1f:	jne    0x140006d41
   140006d21:	mov    rcx,QWORD PTR [rbx]
   140006d24:	mov    rax,QWORD PTR [rcx]
   140006d27:	call   QWORD PTR [rax+0x28]
   140006d2a:	mov    BYTE PTR [rbx+0x8],0x0
   140006d2e:	mov    rax,rbx
   140006d31:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d36:	mov    rsi,QWORD PTR [rsp+0x38]
   140006d3b:	add    rsp,0x20
   140006d3f:	pop    rdi
   140006d40:	ret    
   140006d41:	mov    rsi,QWORD PTR [rsp+0x38]
   140006d46:	mov    rax,rbx
   140006d49:	mov    BYTE PTR [rbx+0x8],0x1
   140006d4d:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d52:	add    rsp,0x20
   140006d56:	pop    rdi
   140006d57:	ret    
   140006d58:	int3   
   140006d59:	int3   
   140006d5a:	int3   
   140006d5b:	int3   
   140006d5c:	int3   
   140006d5d:	int3   
   140006d5e:	int3   
   140006d5f:	int3   
   140006d60:	mov    QWORD PTR [rsp+0x10],rbx
   140006d65:	push   rdi
   140006d66:	sub    rsp,0x130
   140006d6d:	mov    edx,0x1
   140006d72:	mov    rdi,rcx
   140006d75:	call   0x14000f1c0
   140006d7a:	test   al,al
   140006d7c:	je     0x140006deb
   140006d7e:	xor    edx,edx
   140006d80:	mov    rcx,rdi
   140006d83:	call   0x14000f030
   140006d88:	mov    rbx,rax
   140006d8b:	test   rax,rax
   140006d8e:	je     0x140006deb
   140006d90:	cmp    BYTE PTR [rax],0x0
   140006d93:	je     0x140006deb
   140006d95:	mov    r8d,0x104
   140006d9b:	lea    rdx,[rsp+0x20]
   140006da0:	mov    rcx,rax
   140006da3:	call   0x14001a1a0
   140006da8:	test   al,al
   140006daa:	je     0x140006dbb
   140006dac:	lea    rdx,[rsp+0x20]
   140006db1:	mov    rcx,rdi
   140006db4:	call   0x1400116c0
   140006db9:	jmp    0x140006deb
   140006dbb:	mov    ecx,DWORD PTR [rip+0x40283]        # 0x140047044
   140006dc1:	mov    edx,0x2
   140006dc6:	call   QWORD PTR [rip+0x2b6dc]        # 0x1400324a8
   140006dcc:	test   al,al
   140006dce:	je     0x140006deb
   140006dd0:	mov    ecx,DWORD PTR [rip+0x4026e]        # 0x140047044
   140006dd6:	lea    r8,[rip+0x2d0d3]        # 0x140033eb0
   140006ddd:	mov    r9,rbx
   140006de0:	mov    edx,0x2
   140006de5:	call   QWORD PTR [rip+0x2b6b5]        # 0x1400324a0
   140006deb:	mov    rcx,rdi
   140006dee:	mov    QWORD PTR [rsp+0x140],rsi
   140006df6:	call   0x14000f090
   140006dfb:	mov    rcx,rdi
   140006dfe:	cmp    al,0x8
   140006e00:	jne    0x140006e2a
   140006e02:	call   0x14000ea00
   140006e07:	xor    ebx,ebx
   140006e09:	mov    esi,eax
   140006e0b:	test   eax,eax
   140006e0d:	jle    0x140006e5b
   140006e0f:	nop
   140006e10:	mov    edx,ebx
   140006e12:	mov    rcx,rdi
   140006e15:	call   0x14000e9b0
   140006e1a:	mov    rcx,rax
   140006e1d:	call   0x140006d60
   140006e22:	inc    ebx
   140006e24:	cmp    ebx,esi
   140006e26:	jl     0x140006e10
   140006e28:	jmp    0x140006e5b
   140006e2a:	call   0x14000f090
   140006e2f:	cmp    al,0x9
   140006e31:	jne    0x140006e5b
   140006e33:	mov    rcx,rdi
   140006e36:	call   0x14000ec10
   140006e3b:	xor    ebx,ebx
   140006e3d:	mov    esi,eax
   140006e3f:	test   eax,eax
   140006e41:	jle    0x140006e5b
   140006e43:	mov    edx,ebx
   140006e45:	mov    rcx,rdi
   140006e48:	call   0x14000ebc0
   140006e4d:	mov    rcx,rax
   140006e50:	call   0x140006d60
   140006e55:	inc    ebx
   140006e57:	cmp    ebx,esi
   140006e59:	jl     0x140006e43
   140006e5b:	mov    rsi,QWORD PTR [rsp+0x140]
   140006e63:	mov    rbx,QWORD PTR [rsp+0x148]
   140006e6b:	add    rsp,0x130
   140006e72:	pop    rdi
   140006e73:	ret    
   140006e74:	int3   
   140006e75:	int3   
   140006e76:	int3   
   140006e77:	int3   
   140006e78:	int3   
   140006e79:	int3   
   140006e7a:	int3   
   140006e7b:	int3   
   140006e7c:	int3   
   140006e7d:	int3   
   140006e7e:	int3   
   140006e7f:	int3   
   140006e80:	mov    QWORD PTR [rsp+0x8],rbx
   140006e85:	mov    QWORD PTR [rsp+0x10],rsi
   140006e8a:	mov    QWORD PTR [rsp+0x18],rdi
   140006e8f:	mov    QWORD PTR [rsp+0x20],r12
   140006e94:	push   rbp
   140006e95:	push   r14
   140006e97:	push   r15
   140006e99:	mov    eax,0x1040
   140006e9e:	call   0x1400263c0
   140006ea3:	sub    rsp,rax
   140006ea6:	lea    rbp,[rsp+0x440]
   140006eae:	and    rbp,0xfffffffffffffc00
   140006eb5:	mov    r15,rcx
   140006eb8:	mov    rcx,QWORD PTR [rip+0x40359]        # 0x140047218
   140006ebf:	test   rcx,rcx
   140006ec2:	je     0x140006ed4
   140006ec4:	mov    rax,QWORD PTR [rcx]
   140006ec7:	lea    rdx,[rip+0x2d00a]        # 0x140033ed8
   140006ece:	call   QWORD PTR [rax+0x138]
   140006ed4:	xor    r12d,r12d
   140006ed7:	lea    rdx,[rip+0x2d022]        # 0x140033f00
   140006ede:	lea    rcx,[rbp+0x0]
   140006ee2:	mov    DWORD PTR [rbp+0x8],r12d
   140006ee6:	mov    QWORD PTR [rbp+0x10],r12
   140006eea:	mov    QWORD PTR [rbp+0x18],r12
   140006eee:	mov    QWORD PTR [rbp+0x0],r12
   140006ef2:	call   0x14001b3a0
   140006ef7:	movsxd rax,DWORD PTR [rbp+0x8]
   140006efb:	mov    rbx,rax
   140006efe:	cmp    eax,DWORD PTR [rbp+0x18]
   140006f01:	jne    0x140006f14
   140006f03:	lea    edx,[r12+0x1]
   140006f08:	lea    rcx,[rbp+0x10]
   140006f0c:	call   0x140013420
   140006f11:	mov    eax,DWORD PTR [rbp+0x8]
   140006f14:	inc    eax
   140006f16:	mov    DWORD PTR [rbp+0x8],eax
   140006f19:	mov    rax,QWORD PTR [rbp+0x10]
   140006f1d:	lea    rbx,[rax+rbx*8]
   140006f21:	test   rbx,rbx
   140006f24:	je     0x140006f3d
   140006f26:	lea    rcx,[rbp+0x0]
   140006f2a:	mov    QWORD PTR [rbx],r12
   140006f2d:	call   0x14001b050
   140006f32:	mov    rdx,rax
   140006f35:	mov    rcx,rbx
   140006f38:	call   0x14001b3a0
   140006f3d:	cmp    QWORD PTR [rbp+0x0],r12
   140006f41:	je     0x140006f4c
   140006f43:	lea    rcx,[rbp+0x0]
   140006f47:	call   0x14001b030
   140006f4c:	mov    rcx,QWORD PTR [rip+0x40265]        # 0x1400471b8
   140006f53:	lea    rdx,[rbp+0x8]
   140006f57:	mov    rax,QWORD PTR [rcx]
   140006f5a:	call   QWORD PTR [rax+0xa0]
   140006f60:	mov    r14d,r12d
   140006f63:	cmp    DWORD PTR [r15],r12d
   140006f66:	jle    0x1400072f2
   140006f6c:	nop    DWORD PTR [rax+0x0]
   140006f70:	mov    rax,QWORD PTR [r15+0x8]
   140006f74:	mov    r9d,0x1
   140006f7a:	movsxd rcx,r14d
   140006f7d:	xor    r8d,r8d
   140006f80:	xor    edx,edx
   140006f82:	lea    rsi,[rax+rcx*8]
   140006f86:	lea    rcx,[rbp+0x70]
   140006f8a:	call   0x140020850
   140006f8f:	mov    rax,QWORD PTR [rip+0x401f2]        # 0x140047188
   140006f96:	mov    rcx,rsi
   140006f99:	mov    rbx,QWORD PTR [rax+0x8]
   140006f9d:	call   0x14001b050
   140006fa2:	mov    rcx,QWORD PTR [rip+0x401df]        # 0x140047188
   140006fa9:	lea    r9,[rbp+0x70]
   140006fad:	mov    QWORD PTR [rsp+0x30],r12
   140006fb2:	add    rcx,0x8
   140006fb6:	mov    rdx,rax
   140006fb9:	mov    DWORD PTR [rsp+0x28],r12d
   140006fbe:	xor    r8d,r8d
   140006fc1:	mov    DWORD PTR [rsp+0x20],r12d
   140006fc6:	call   QWORD PTR [rbx+0x70]
   140006fc9:	test   al,al
   140006fcb:	jne    0x14000700e
   140006fcd:	mov    ecx,DWORD PTR [rip+0x40071]        # 0x140047044
   140006fd3:	mov    edx,0x2
   140006fd8:	call   QWORD PTR [rip+0x2b4ca]        # 0x1400324a8
   140006fde:	test   al,al
   140006fe0:	je     0x1400072c4
   140006fe6:	mov    rcx,rsi
   140006fe9:	call   0x14001b050
   140006fee:	mov    ecx,DWORD PTR [rip+0x40050]        # 0x140047044
   140006ff4:	lea    r8,[rip+0x2cf15]        # 0x140033f10
   140006ffb:	mov    r9,rax
   140006ffe:	mov    edx,0x2
   140007003:	call   QWORD PTR [rip+0x2b497]        # 0x1400324a0
   140007009:	jmp    0x1400072c4
   14000700e:	lea    rcx,[rbp+0x400]
   140007015:	call   0x14000c4e0
   14000701a:	lea    r9,[rip+0x3f017]        # 0x140046038
   140007021:	mov    QWORD PTR [rbp+0x0],r12
   140007025:	lea    r8,[rbp+0x70]
   140007029:	lea    rdx,[rbp+0x0]
   14000702d:	lea    rcx,[rbp+0x400]
   140007034:	call   0x14000ff10
   140007039:	test   al,al
   14000703b:	jne    0x14000708f
   14000703d:	mov    ecx,DWORD PTR [rip+0x40001]        # 0x140047044
   140007043:	mov    edx,0x2
   140007048:	call   QWORD PTR [rip+0x2b45a]        # 0x1400324a8
   14000704e:	test   al,al
   140007050:	je     0x1400072a9
   140007056:	lea    rcx,[rbp+0x0]
   14000705a:	call   0x14001b050
   14000705f:	mov    rcx,rsi
   140007062:	mov    rbx,rax
   140007065:	call   0x14001b050
   14000706a:	mov    ecx,DWORD PTR [rip+0x3ffd4]        # 0x140047044
   140007070:	lea    r8,[rip+0x2ceb9]        # 0x140033f30
   140007077:	mov    r9,rax
   14000707a:	mov    QWORD PTR [rsp+0x20],rbx
   14000707f:	mov    edx,0x2
   140007084:	call   QWORD PTR [rip+0x2b416]        # 0x1400324a0
   14000708a:	jmp    0x1400072a9
   14000708f:	lea    rcx,[rbp+0x400]
   140007096:	call   0x140011170
   14000709b:	mov    rcx,rax
   14000709e:	lea    rdx,[rip+0x2ceb3]        # 0x140033f58
   1400070a5:	call   0x140013520
   1400070aa:	lea    rcx,[rbp+0x400]
   1400070b1:	call   0x140011170
   1400070b6:	mov    rcx,rax
   1400070b9:	call   0x140013970
   1400070be:	lea    rcx,[rbp+0x400]
   1400070c5:	call   0x140011170
   1400070ca:	mov    rcx,rax
   1400070cd:	call   0x140013da0
   1400070d2:	lea    rcx,[rbp+0x400]
   1400070d9:	call   0x140011170
   1400070de:	mov    rcx,rax
   1400070e1:	call   0x140006d60
   1400070e6:	mov    r9d,0x1
   1400070ec:	lea    rcx,[rbp+0x30]
   1400070f0:	xor    r8d,r8d
   1400070f3:	xor    edx,edx
   1400070f5:	call   0x140020850
   1400070fa:	lea    rcx,[rbp+0x400]
   140007101:	call   0x140011170
   140007106:	mov    r8,rax
   140007109:	lea    r9,[rbp+0x0]
   14000710d:	lea    rax,[rbp+0x30]
   140007111:	lea    rdx,[rip+0x3ef20]        # 0x140046038
   140007118:	mov    QWORD PTR [rsp+0x20],rax
   14000711d:	lea    rcx,[rip+0x3eee4]        # 0x140046008
   140007124:	call   0x140011860
   140007129:	test   al,al
   14000712b:	jne    0x14000717f
   14000712d:	mov    ecx,DWORD PTR [rip+0x3ff11]        # 0x140047044
   140007133:	mov    edx,0x2
   140007138:	call   QWORD PTR [rip+0x2b36a]        # 0x1400324a8
   14000713e:	test   al,al
   140007140:	je     0x14000727f
   140007146:	lea    rcx,[rbp+0x0]
   14000714a:	call   0x14001b050
   14000714f:	mov    rcx,rsi
   140007152:	mov    rbx,rax
   140007155:	call   0x14001b050
   14000715a:	mov    ecx,DWORD PTR [rip+0x3fee4]        # 0x140047044
   140007160:	lea    r8,[rip+0x2ce11]        # 0x140033f78
   140007167:	mov    r9,rax
   14000716a:	mov    QWORD PTR [rsp+0x20],rbx
   14000716f:	mov    edx,0x2
   140007174:	call   QWORD PTR [rip+0x2b326]        # 0x1400324a0
   14000717a:	jmp    0x14000727f
   14000717f:	cmp    QWORD PTR [rip+0x40092],r12        # 0x140047218
   140007186:	mov    rcx,rsi
   140007189:	setne  bl
   14000718c:	call   0x14001b050
   140007191:	mov    rdi,rax
   140007194:	test   bl,bl
   140007196:	je     0x1400071ba
   140007198:	mov    ecx,0x10
   14000719d:	call   0x140007bf0
   1400071a2:	test   rax,rax
   1400071a5:	je     0x1400071ba
   1400071a7:	xor    r8d,r8d
   1400071aa:	mov    rdx,rdi
   1400071ad:	mov    rcx,rax
   1400071b0:	call   0x140006cd0
   1400071b5:	mov    rbx,rax
   1400071b8:	jmp    0x1400071bd
   1400071ba:	mov    rbx,r12
   1400071bd:	mov    rax,QWORD PTR [rip+0x3ffc4]        # 0x140047188
   1400071c4:	mov    rcx,rsi
   1400071c7:	mov    rdi,QWORD PTR [rax+0x8]
   1400071cb:	call   0x14001b050
   1400071d0:	mov    rcx,QWORD PTR [rip+0x3ffb1]        # 0x140047188
   1400071d7:	lea    r9,[rbp+0x30]
   1400071db:	add    rcx,0x8
   1400071df:	mov    rdx,rax
   1400071e2:	xor    r8d,r8d
   1400071e5:	call   QWORD PTR [rdi+0x78]
   1400071e8:	mov    ecx,DWORD PTR [rip+0x3fe56]        # 0x140047044
   1400071ee:	test   al,al
   1400071f0:	jne    0x140007217
   1400071f2:	mov    edx,0x2
   1400071f7:	call   QWORD PTR [rip+0x2b2ab]        # 0x1400324a8
   1400071fd:	test   al,al
   1400071ff:	je     0x140007249
   140007201:	mov    rcx,rsi
   140007204:	call   0x14001b050
   140007209:	lea    r8,[rip+0x2cd90]        # 0x140033fa0
   140007210:	mov    edx,0x2
   140007215:	jmp    0x14000723a
   140007217:	mov    edx,0x1
   14000721c:	call   QWORD PTR [rip+0x2b286]        # 0x1400324a8
   140007222:	test   al,al
   140007224:	je     0x140007249
   140007226:	mov    rcx,rsi
   140007229:	call   0x14001b050
   14000722e:	lea    r8,[rip+0x2cd8b]        # 0x140033fc0
   140007235:	mov    edx,0x1
   14000723a:	mov    ecx,DWORD PTR [rip+0x3fe04]        # 0x140047044
   140007240:	mov    r9,rax
   140007243:	call   QWORD PTR [rip+0x2b257]        # 0x1400324a0
   140007249:	test   rbx,rbx
   14000724c:	je     0x14000727f
   14000724e:	cmp    BYTE PTR [rbx+0x8],r12b
   140007252:	je     0x14000725d
   140007254:	mov    rcx,QWORD PTR [rbx]
   140007257:	mov    rax,QWORD PTR [rcx]
   14000725a:	call   QWORD PTR [rax+0x18]
   14000725d:	mov    rcx,QWORD PTR [rbx]
   140007260:	mov    QWORD PTR [rbx],r12
   140007263:	test   rcx,rcx
   140007266:	je     0x140007272
   140007268:	mov    rax,QWORD PTR [rcx]
   14000726b:	mov    edx,0x1
   140007270:	call   QWORD PTR [rax]
   140007272:	mov    edx,0x10
   140007277:	mov    rcx,rbx
   14000727a:	call   0x14002639c
   14000727f:	test   DWORD PTR [rbp+0x3c],0xc0000000
   140007286:	jne    0x1400072a9
   140007288:	mov    rdx,QWORD PTR [rbp+0x30]
   14000728c:	test   rdx,rdx
   14000728f:	je     0x1400072a5
   140007291:	mov    rax,QWORD PTR [rip+0x2b0f8]        # 0x140032390
   140007298:	mov    rcx,QWORD PTR [rax]
   14000729b:	mov    rax,QWORD PTR [rcx]
   14000729e:	call   QWORD PTR [rax+0x28]
   1400072a1:	mov    QWORD PTR [rbp+0x30],r12
   1400072a5:	mov    DWORD PTR [rbp+0x38],r12d
   1400072a9:	cmp    QWORD PTR [rbp+0x0],r12
   1400072ad:	je     0x1400072b8
   1400072af:	lea    rcx,[rbp+0x0]
   1400072b3:	call   0x14001b030
   1400072b8:	lea    rcx,[rbp+0x400]
   1400072bf:	call   0x14000c850
   1400072c4:	test   DWORD PTR [rbp+0x7c],0xc0000000
   1400072cb:	jne    0x1400072e6
   1400072cd:	mov    rdx,QWORD PTR [rbp+0x70]
   1400072d1:	test   rdx,rdx
   1400072d4:	je     0x1400072e6
   1400072d6:	mov    rax,QWORD PTR [rip+0x2b0b3]        # 0x140032390
   1400072dd:	mov    rcx,QWORD PTR [rax]
   1400072e0:	mov    rax,QWORD PTR [rcx]
   1400072e3:	call   QWORD PTR [rax+0x28]
   1400072e6:	inc    r14d
   1400072e9:	cmp    r14d,DWORD PTR [r15]
   1400072ec:	jl     0x140006f70
   1400072f2:	mov    eax,DWORD PTR [rbp+0x8]
   1400072f5:	mov    rdx,QWORD PTR [rbp+0x10]
   1400072f9:	sub    eax,0x1
   1400072fc:	movsxd rbx,eax
   1400072ff:	js     0x14000731a
   140007301:	cmp    QWORD PTR [rdx+rbx*8],r12
   140007305:	lea    rcx,[rdx+rbx*8]
   140007309:	je     0x140007314
   14000730b:	call   0x14001b030
   140007310:	mov    rdx,QWORD PTR [rbp+0x10]
   140007314:	sub    rbx,0x1
   140007318:	jns    0x140007301
   14000731a:	mov    eax,DWORD PTR [rbp+0x1c]
   14000731d:	mov    DWORD PTR [rbp+0x8],r12d
   140007321:	test   eax,0xc0000000
   140007326:	jne    0x140007367
   140007328:	test   rdx,rdx
   14000732b:	je     0x140007347
   14000732d:	mov    rax,QWORD PTR [rip+0x2b05c]        # 0x140032390
   140007334:	mov    rcx,QWORD PTR [rax]
   140007337:	mov    rax,QWORD PTR [rcx]
   14000733a:	call   QWORD PTR [rax+0x28]
   14000733d:	mov    eax,DWORD PTR [rbp+0x1c]
   140007340:	mov    rdx,r12
   140007343:	mov    QWORD PTR [rbp+0x10],rdx
   140007347:	mov    DWORD PTR [rbp+0x18],r12d
   14000734b:	test   eax,0xc0000000
   140007350:	jne    0x140007367
   140007352:	test   rdx,rdx
   140007355:	je     0x140007367
   140007357:	mov    rax,QWORD PTR [rip+0x2b032]        # 0x140032390
   14000735e:	mov    rcx,QWORD PTR [rax]
   140007361:	mov    rax,QWORD PTR [rcx]
   140007364:	call   QWORD PTR [rax+0x28]
   140007367:	lea    r11,[rsp+0x1040]
   14000736f:	mov    rbx,QWORD PTR [r11+0x20]
   140007373:	mov    rsi,QWORD PTR [r11+0x28]
   140007377:	mov    rdi,QWORD PTR [r11+0x30]
   14000737b:	mov    r12,QWORD PTR [r11+0x38]
   14000737f:	mov    rsp,r11
   140007382:	pop    r15
   140007384:	pop    r14
   140007386:	pop    rbp
   140007387:	ret    
   140007388:	int3   
   140007389:	int3   
   14000738a:	int3   
   14000738b:	int3   
   14000738c:	int3   
   14000738d:	int3   
   14000738e:	int3   
   14000738f:	int3   
   140007390:	mov    QWORD PTR [rsp+0x8],rbx
   140007395:	push   rdi
   140007396:	sub    rsp,0x20
   14000739a:	mov    rbx,rdx
   14000739d:	movsxd rdi,ecx
   1400073a0:	prefetchw BYTE PTR [rip+0x3fcd9]        # 0x140047080
   1400073a7:	mov    eax,DWORD PTR [rip+0x3fcd3]        # 0x140047080
   1400073ad:	nop    DWORD PTR [rax]
   1400073b0:	mov    r8d,eax
   1400073b3:	bts    r8d,0x1e
   1400073b8:	lock cmpxchg DWORD PTR [rip+0x3fcbf],r8d        # 0x140047080
   1400073c1:	jne    0x1400073b0
   1400073c3:	cmp    eax,0xbfffffff
   1400073c8:	jne    0x1400073de
   1400073ca:	lea    rdx,[rip+0x3fca7]        # 0x140047078
   1400073d1:	lea    rcx,[rip+0x2cc40]        # 0x140034018
   1400073d8:	call   QWORD PTR [rip+0x2afa2]        # 0x140032380
   1400073de:	cmp    edi,0x8
   1400073e1:	ja     0x140007496
   1400073e7:	lea    rdx,[rip+0xffffffffffff8c12]        # 0x140000000
   1400073ee:	mov    ecx,DWORD PTR [rdx+rdi*4+0x74a4]
   1400073f5:	add    rcx,rdx
   1400073f8:	jmp    rcx
   1400073fa:	lea    rax,[rip+0x2cbff]        # 0x140034000
   140007401:	mov    DWORD PTR [rbx+0x8],0x0
   140007408:	mov    QWORD PTR [rbx],rax
   14000740b:	mov    eax,0x1
   140007410:	mov    rbx,QWORD PTR [rsp+0x30]
   140007415:	add    rsp,0x20
   140007419:	pop    rdi
   14000741a:	ret    
   14000741b:	mov    DWORD PTR [rbx+0x8],0x1
   140007422:	mov    eax,0x1
   140007427:	mov    QWORD PTR [rbx],0x0
   14000742e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007433:	add    rsp,0x20
   140007437:	pop    rdi
   140007438:	ret    
   140007439:	mov    DWORD PTR [rbx+0x8],0x1
   140007440:	mov    eax,0x1
   140007445:	mov    QWORD PTR [rbx],0x1
   14000744c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007451:	add    rsp,0x20
   140007455:	pop    rdi
   140007456:	ret    
   140007457:	lea    rax,[rip+0x2cbaa]        # 0x140034008
   14000745e:	mov    DWORD PTR [rbx+0x8],0x0
   140007465:	mov    QWORD PTR [rbx],rax
   140007468:	mov    eax,0x1
   14000746d:	mov    rbx,QWORD PTR [rsp+0x30]
   140007472:	add    rsp,0x20
   140007476:	pop    rdi
   140007477:	ret    
   140007478:	mov    DWORD PTR [rbx+0x8],0x1
   14000747f:	mov    eax,0x1
   140007484:	mov    QWORD PTR [rbx],0x100000
   14000748b:	mov    rbx,QWORD PTR [rsp+0x30]
   140007490:	add    rsp,0x20
   140007494:	pop    rdi
   140007495:	ret    
   140007496:	xor    eax,eax
   140007498:	mov    rbx,QWORD PTR [rsp+0x30]
   14000749d:	add    rsp,0x20
   1400074a1:	pop    rdi
   1400074a2:	ret    
   1400074a3:	nop
   1400074a4:	cli    
   1400074a5:	jae    0x1400074a7
   1400074a7:	add    BYTE PTR [rbx],bl
   1400074a9:	je     0x1400074ab
   1400074ab:	add    BYTE PTR [rcx],bh
   1400074ad:	je     0x1400074af
   1400074af:	add    BYTE PTR [rdi+0x74],dl
   1400074b2:	add    BYTE PTR [rax],al
   1400074b4:	push   rdi
   1400074b5:	je     0x1400074b7
   1400074b7:	add    BYTE PTR [rbx],bl
   1400074b9:	je     0x1400074bb
   1400074bb:	add    BYTE PTR [rcx],bh
   1400074bd:	je     0x1400074bf
   1400074bf:	add    BYTE PTR [rcx],bh
   1400074c1:	je     0x1400074c3
   1400074c3:	add    BYTE PTR [rax+0x74],bh
   1400074c6:	add    BYTE PTR [rax],al
   1400074c8:	int3   
   1400074c9:	int3   
   1400074ca:	int3   
   1400074cb:	int3   
   1400074cc:	int3   
   1400074cd:	int3   
   1400074ce:	int3   
   1400074cf:	int3   
   1400074d0:	mov    QWORD PTR [rcx],rdx
   1400074d3:	mov    rax,rcx
   1400074d6:	mov    QWORD PTR [rcx+0x8],r8
   1400074da:	ret    
   1400074db:	int3   
   1400074dc:	int3   
   1400074dd:	int3   
   1400074de:	int3   
   1400074df:	int3   
   1400074e0:	mov    QWORD PTR [rcx],rdx
   1400074e3:	mov    DWORD PTR [rcx+0x8],r8d
   1400074e7:	mov    rax,QWORD PTR [r9]
   1400074ea:	mov    QWORD PTR [rcx+0x10],rax
   1400074ee:	mov    rax,QWORD PTR [r9+0x8]
   1400074f2:	mov    QWORD PTR [rcx+0x18],rax
   1400074f6:	mov    rax,rcx
   1400074f9:	ret    
   1400074fa:	int3   
   1400074fb:	int3   
   1400074fc:	int3   
   1400074fd:	int3   
   1400074fe:	int3   
   1400074ff:	int3   
   140007500:	mov    QWORD PTR [rsp+0x8],rbx
   140007505:	push   rdi
   140007506:	sub    rsp,0x20
   14000750a:	movzx  edi,dl
   14000750d:	mov    rbx,rcx
   140007510:	mov    eax,0x1
   140007515:	lock xadd DWORD PTR [rcx+0x8],eax
   14000751a:	add    eax,0x1
   14000751d:	jns    0x140007529
   14000751f:	nop
   140007520:	pause  
   140007522:	mov    eax,DWORD PTR [rcx+0x8]
   140007525:	test   eax,eax
   140007527:	js     0x140007520
   140007529:	bt     eax,0x19
   14000752d:	jb     0x14000758d
   14000752f:	nop
   140007530:	prefetchw BYTE PTR [rbx+0x8]
   140007534:	mov    eax,DWORD PTR [rbx+0x8]
   140007537:	nop    WORD PTR [rax+rax*1+0x0]
   140007540:	mov    ecx,eax
   140007542:	or     ecx,0x80000000
   140007548:	lock cmpxchg DWORD PTR [rbx+0x8],ecx
   14000754d:	jne    0x140007540
   14000754f:	test   eax,eax
   140007551:	js     0x140007530
   140007553:	mov    eax,DWORD PTR [rbx+0x8]
   140007556:	bt     eax,0x19
   14000755a:	jb     0x140007585
   14000755c:	mov    rcx,rbx
   14000755f:	call   QWORD PTR [rip+0x2ae13]        # 0x140032378
   140007565:	lea    rcx,[rip+0x174]        # 0x1400076e0
   14000756c:	call   0x140026f24
   140007571:	lea    rcx,[rip+0x138]        # 0x1400076b0
   140007578:	call   0x140028214
   14000757d:	lock or DWORD PTR [rbx+0x8],0x2000000
   140007585:	lock and DWORD PTR [rbx+0x8],0x7fffffff
   14000758d:	test   dil,dil
   140007590:	jne    0x1400075a0
   140007592:	mov    eax,DWORD PTR [rbx+0x8]
   140007595:	test   eax,0xc000000
   14000759a:	jne    0x1400075cb
   14000759c:	lock inc DWORD PTR [rbx+0x8]
   1400075a0:	prefetchw BYTE PTR [rbx+0x8]
   1400075a4:	mov    eax,DWORD PTR [rbx+0x8]
   1400075a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400075b0:	mov    ecx,eax
   1400075b2:	bts    ecx,0x1a
   1400075b6:	lock cmpxchg DWORD PTR [rbx+0x8],ecx
   1400075bb:	jne    0x1400075b0
   1400075bd:	bt     eax,0x1a
   1400075c1:	jae    0x1400075cb
   1400075c3:	mov    rcx,rbx
   1400075c6:	call   0x1400075e0
   1400075cb:	mov    rbx,QWORD PTR [rsp+0x30]
   1400075d0:	add    rsp,0x20
   1400075d4:	pop    rdi
   1400075d5:	ret    
   1400075d6:	int3   
   1400075d7:	int3   
   1400075d8:	int3   
   1400075d9:	int3   
   1400075da:	int3   
   1400075db:	int3   
   1400075dc:	int3   
   1400075dd:	int3   
   1400075de:	int3   
   1400075df:	int3   
   1400075e0:	rex push rbx
   1400075e2:	sub    rsp,0x20
   1400075e6:	mov    rbx,rcx
   1400075e9:	or     eax,0xffffffff
   1400075ec:	lock xadd DWORD PTR [rcx+0x8],eax
   1400075f1:	dec    eax
   1400075f3:	test   eax,0x1ffffff
   1400075f8:	jne    0x14000764e
   1400075fa:	nop    WORD PTR [rax+rax*1+0x0]
   140007600:	prefetchw BYTE PTR [rbx+0x8]
   140007604:	mov    eax,DWORD PTR [rbx+0x8]
   140007607:	nop    WORD PTR [rax+rax*1+0x0]
   140007610:	mov    ecx,eax
   140007612:	or     ecx,0x80000000
   140007618:	lock cmpxchg DWORD PTR [rbx+0x8],ecx
   14000761d:	jne    0x140007610
   14000761f:	test   eax,eax
   140007621:	js     0x140007600
   140007623:	mov    eax,DWORD PTR [rbx+0x8]
   140007626:	test   eax,0x1ffffff
   14000762b:	jne    0x140007646
   14000762d:	mov    eax,DWORD PTR [rbx+0x8]
   140007630:	bt     eax,0x19
   140007634:	jae    0x140007646
   140007636:	lock and DWORD PTR [rbx+0x8],0xfdffffff
   14000763e:	mov    rcx,rbx
   140007641:	call   0x140007660
   140007646:	lock and DWORD PTR [rbx+0x8],0x7fffffff
   14000764e:	add    rsp,0x20
   140007652:	pop    rbx
   140007653:	ret    
   140007654:	int3   
   140007655:	int3   
   140007656:	int3   
   140007657:	int3   
   140007658:	int3   
   140007659:	int3   
   14000765a:	int3   
   14000765b:	int3   
   14000765c:	int3   
   14000765d:	int3   
   14000765e:	int3   
   14000765f:	int3   
   140007660:	mov    QWORD PTR [rsp+0x8],rbx
   140007665:	push   rdi
   140007666:	sub    rsp,0x20
   14000766a:	mov    rbx,QWORD PTR [rcx]
   14000766d:	mov    rdi,rcx
   140007670:	test   rbx,rbx
   140007673:	je     0x140007692
   140007675:	mov    rcx,QWORD PTR [rbx]
   140007678:	call   QWORD PTR [rbx+0x8]
   14000767b:	mov    rbx,QWORD PTR [rbx+0x10]
   14000767f:	test   rbx,rbx
   140007682:	jne    0x140007675
   140007684:	mov    QWORD PTR [rdi],rbx
   140007687:	mov    rbx,QWORD PTR [rsp+0x30]
   14000768c:	add    rsp,0x20
   140007690:	pop    rdi
   140007691:	ret    
   140007692:	mov    QWORD PTR [rcx],0x0
   140007699:	mov    rbx,QWORD PTR [rsp+0x30]
   14000769e:	add    rsp,0x20
   1400076a2:	pop    rdi
   1400076a3:	ret    
   1400076a4:	int3   
   1400076a5:	int3   
   1400076a6:	int3   
   1400076a7:	int3   
   1400076a8:	int3   
   1400076a9:	int3   
   1400076aa:	int3   
   1400076ab:	int3   
   1400076ac:	int3   
   1400076ad:	int3   
   1400076ae:	int3   
   1400076af:	int3   
   1400076b0:	mov    DWORD PTR [rsp+0x20],r9d
   1400076b5:	mov    QWORD PTR [rsp+0x18],r8
   1400076ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400076bf:	mov    QWORD PTR [rsp+0x8],rcx
   1400076c4:	sub    rsp,0x28
   1400076c8:	lea    rcx,[rip+0x2c919]        # 0x140033fe8
   1400076cf:	call   0x140007700
   1400076d4:	add    rsp,0x28
   1400076d8:	ret    
   1400076d9:	int3   
   1400076da:	int3   
   1400076db:	int3   
   1400076dc:	int3   
   1400076dd:	int3   
   1400076de:	int3   
   1400076df:	int3   
   1400076e0:	sub    rsp,0x28
   1400076e4:	lea    rcx,[rip+0x2c8ed]        # 0x140033fd8
   1400076eb:	call   0x140007700
   1400076f0:	add    rsp,0x28
   1400076f4:	ret    
   1400076f5:	int3   
   1400076f6:	int3   
   1400076f7:	int3   
   1400076f8:	int3   
   1400076f9:	int3   
   1400076fa:	int3   
   1400076fb:	int3   
   1400076fc:	int3   
   1400076fd:	int3   
   1400076fe:	int3   
   1400076ff:	int3   
   140007700:	mov    QWORD PTR [rsp+0x8],rcx
   140007705:	sub    rsp,0x68
   140007709:	call   QWORD PTR [rip+0x2aea1]        # 0x1400325b0
   14000770f:	test   eax,eax
   140007711:	je     0x14000771a
   140007713:	mov    BYTE PTR [rsp+0x20],0x1
   140007718:	jmp    0x14000771f
   14000771a:	mov    BYTE PTR [rsp+0x20],0x0
   14000771f:	movzx  eax,BYTE PTR [rsp+0x20]
   140007724:	test   eax,eax
   140007726:	je     0x14000772b
   140007728:	int3   
   140007729:	jmp    0x14000777a
   14000772b:	xor    r8d,r8d
   14000772e:	xor    edx,edx
   140007730:	lea    rcx,[rsp+0x30]
   140007735:	call   0x1400074d0
   14000773a:	mov    QWORD PTR [rsp+0x28],rax
   14000773f:	call   QWORD PTR [rip+0x2ad3b]        # 0x140032480
   140007745:	mov    rcx,QWORD PTR [rsp+0x28]
   14000774a:	mov    r9,rcx
   14000774d:	mov    r8d,eax
   140007750:	mov    rdx,QWORD PTR [rsp+0x70]
   140007755:	lea    rcx,[rsp+0x40]
   14000775a:	call   0x1400074e0
   14000775f:	xor    r8d,r8d
   140007762:	lea    rdx,[rsp+0x40]
   140007767:	xor    ecx,ecx
   140007769:	call   QWORD PTR [rip+0x2ad09]        # 0x140032478
   14000776f:	mov    ecx,0x1
   140007774:	call   QWORD PTR [rip+0x2aace]        # 0x140032248
   14000777a:	add    rsp,0x68
   14000777e:	ret    
   14000777f:	int3   
   140007780:	mov    QWORD PTR [rsp+0x8],rbx
   140007785:	mov    QWORD PTR [rsp+0x10],rbp
   14000778a:	mov    QWORD PTR [rsp+0x18],rsi
   14000778f:	push   rdi
   140007790:	push   r12
   140007792:	push   r13
   140007794:	push   r14
   140007796:	push   r15
   140007798:	sub    rsp,0x30
   14000779c:	mov    rbp,rdx
   14000779f:	mov    rdi,rcx
   1400077a2:	cmp    rcx,rdx
   1400077a5:	je     0x1400078d1
   1400077ab:	lea    r12,[rip+0xffffffffffff884e]        # 0x140000000
   1400077b2:	lea    r15,[rip+0x2c9b7]        # 0x140034170
   1400077b9:	lea    r13,[rip+0x2c960]        # 0x140034120
   1400077c0:	mov    eax,DWORD PTR [rdi]
   1400077c2:	xor    ecx,ecx
   1400077c4:	lea    r14,[rax*8+0x0]
   1400077cc:	xor    eax,eax
   1400077ce:	lock cmpxchg QWORD PTR [r14+r12*1+0x47090],rcx
   1400077d8:	mov    rbx,rax
   1400077db:	je     0x1400077ec
   1400077dd:	cmp    rax,0xffffffffffffffff
   1400077e1:	je     0x1400078c4
   1400077e7:	jmp    0x14000787c
   1400077ec:	mov    rsi,QWORD PTR [r14+r12*1+0x34048]
   1400077f4:	xor    edx,edx
   1400077f6:	mov    rcx,rsi
   1400077f9:	mov    r8d,0x800
   1400077ff:	call   QWORD PTR [rip+0x2a9c3]        # 0x1400321c8
   140007805:	mov    rbx,rax
   140007808:	test   rax,rax
   14000780b:	jne    0x140007829
   14000780d:	call   QWORD PTR [rip+0x2a9f5]        # 0x140032208
   140007813:	cmp    eax,0x57
   140007816:	jne    0x140007886
   140007818:	xor    r8d,r8d
   14000781b:	xor    edx,edx
   14000781d:	mov    rcx,rsi
   140007820:	call   QWORD PTR [rip+0x2a9a2]        # 0x1400321c8
   140007826:	mov    rbx,rax
   140007829:	test   rbx,rbx
   14000782c:	je     0x140007886
   14000782e:	mov    rax,rbx
   140007831:	xchg   QWORD PTR [r14+r12*1+0x47090],rax
   140007839:	test   rax,rax
   14000783c:	je     0x14000787c
   14000783e:	cmp    rax,rbx
   140007841:	je     0x140007873
   140007843:	xor    r9d,r9d
   140007846:	lea    rax,[rip+0x2c9cb]        # 0x140034218
   14000784d:	mov    QWORD PTR [rsp+0x28],rax
   140007852:	lea    rdx,[rip+0x2c927]        # 0x140034180
   140007859:	mov    r8d,0x128
   14000785f:	mov    QWORD PTR [rsp+0x20],r15
   140007864:	lea    ecx,[r9+0x2]
   140007868:	call   0x140004ae0
   14000786d:	cmp    eax,0x1
   140007870:	jne    0x140007873
   140007872:	int3   
   140007873:	mov    rcx,rbx
   140007876:	call   QWORD PTR [rip+0x2a95c]        # 0x1400321d8
   14000787c:	test   rbx,rbx
   14000787f:	je     0x1400078c4
   140007881:	mov    rax,rbx
   140007884:	jmp    0x1400078d3
   140007886:	or     rax,0xffffffffffffffff
   14000788a:	xchg   QWORD PTR [r14+r12*1+0x47090],rax
   140007892:	dec    rax
   140007895:	cmp    rax,0xfffffffffffffffd
   140007899:	ja     0x1400078c4
   14000789b:	xor    r9d,r9d
   14000789e:	mov    QWORD PTR [rsp+0x28],r13
   1400078a3:	mov    r8d,0x11c
   1400078a9:	mov    QWORD PTR [rsp+0x20],r15
   1400078ae:	lea    rdx,[rip+0x2c8cb]        # 0x140034180
   1400078b5:	lea    ecx,[r9+0x2]
   1400078b9:	call   0x140004ae0
   1400078be:	cmp    eax,0x1
   1400078c1:	jne    0x1400078c4
   1400078c3:	int3   
   1400078c4:	add    rdi,0x4
   1400078c8:	cmp    rdi,rbp
   1400078cb:	jne    0x1400077c0
   1400078d1:	xor    eax,eax
   1400078d3:	mov    rbx,QWORD PTR [rsp+0x60]
   1400078d8:	mov    rbp,QWORD PTR [rsp+0x68]
   1400078dd:	mov    rsi,QWORD PTR [rsp+0x70]
   1400078e2:	add    rsp,0x30
   1400078e6:	pop    r15
   1400078e8:	pop    r14
   1400078ea:	pop    r13
   1400078ec:	pop    r12
   1400078ee:	pop    rdi
   1400078ef:	ret    
   1400078f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400078f5:	push   rdi
   1400078f6:	sub    rsp,0x30
   1400078fa:	mov    eax,ecx
   1400078fc:	mov    rbx,rdx
   1400078ff:	lea    rcx,[rip+0x3f7aa]        # 0x1400470b0
   140007906:	lea    rdi,[rcx+rax*8]
   14000790a:	xor    ecx,ecx
   14000790c:	xor    eax,eax
   14000790e:	lock cmpxchg QWORD PTR [rdi],rcx
   140007913:	mov    r10,QWORD PTR [rip+0x3e8ce]        # 0x1400461e8
   14000791a:	mov    ecx,r10d
   14000791d:	xor    r10,rax
   140007920:	and    ecx,0x3f
   140007923:	ror    r10,cl
   140007926:	cmp    r10,0xffffffffffffffff
   14000792a:	je     0x140007a68
   140007930:	test   r10,r10
   140007933:	je     0x140007943
   140007935:	mov    rax,r10
   140007938:	mov    rbx,QWORD PTR [rsp+0x40]
   14000793d:	add    rsp,0x30
   140007941:	pop    rdi
   140007942:	ret    
   140007943:	mov    rdx,r9
   140007946:	mov    rcx,r8
   140007949:	call   0x140007780
   14000794e:	test   rax,rax
   140007951:	je     0x1400079f5
   140007957:	mov    rdx,rbx
   14000795a:	mov    rcx,rax
   14000795d:	call   QWORD PTR [rip+0x2a86d]        # 0x1400321d0
   140007963:	mov    rbx,rax
   140007966:	test   rax,rax
   140007969:	je     0x1400079f5
   14000796f:	mov    rdx,QWORD PTR [rip+0x3e872]        # 0x1400461e8
   140007976:	mov    r9d,0x40
   14000797c:	mov    ecx,edx
   14000797e:	mov    r8,rax
   140007981:	and    ecx,0x3f
   140007984:	sub    r9d,ecx
   140007987:	movzx  ecx,r9b
   14000798b:	ror    r8,cl
   14000798e:	xor    r8,rdx
   140007991:	xchg   QWORD PTR [rdi],r8
   140007994:	mov    rdx,QWORD PTR [rip+0x3e84d]        # 0x1400461e8
   14000799b:	mov    ecx,edx
   14000799d:	xor    rdx,r8
   1400079a0:	and    ecx,0x3f
   1400079a3:	ror    rdx,cl
   1400079a6:	test   rdx,rdx
   1400079a9:	je     0x1400079e7
   1400079ab:	cmp    rdx,rax
   1400079ae:	je     0x1400079e7
   1400079b0:	xor    r9d,r9d
   1400079b3:	lea    rax,[rip+0x2c8ee]        # 0x1400342a8
   1400079ba:	mov    QWORD PTR [rsp+0x28],rax
   1400079bf:	lea    rdx,[rip+0x2c7ba]        # 0x140034180
   1400079c6:	lea    rax,[rip+0x2c7a3]        # 0x140034170
   1400079cd:	mov    r8d,0x185
   1400079d3:	mov    QWORD PTR [rsp+0x20],rax
   1400079d8:	lea    ecx,[r9+0x2]
   1400079dc:	call   0x140004ae0
   1400079e1:	cmp    eax,0x1
   1400079e4:	jne    0x1400079e7
   1400079e6:	int3   
   1400079e7:	mov    rax,rbx
   1400079ea:	mov    rbx,QWORD PTR [rsp+0x40]
   1400079ef:	add    rsp,0x30
   1400079f3:	pop    rdi
   1400079f4:	ret    
   1400079f5:	mov    rdx,QWORD PTR [rip+0x3e7ec]        # 0x1400461e8
   1400079fc:	or     r8,0xffffffffffffffff
   140007a00:	mov    eax,edx
   140007a02:	mov    ecx,0x40
   140007a07:	and    eax,0x3f
   140007a0a:	sub    ecx,eax
   140007a0c:	ror    r8,cl
   140007a0f:	xor    r8,rdx
   140007a12:	xchg   QWORD PTR [rdi],r8
   140007a15:	mov    rdx,QWORD PTR [rip+0x3e7cc]        # 0x1400461e8
   140007a1c:	mov    ecx,edx
   140007a1e:	xor    rdx,r8
   140007a21:	and    ecx,0x3f
   140007a24:	ror    rdx,cl
   140007a27:	lea    rax,[rdx-0x1]
   140007a2b:	cmp    rax,0xfffffffffffffffd
   140007a2f:	ja     0x140007a68
   140007a31:	xor    r9d,r9d
   140007a34:	lea    rax,[rip+0x2c815]        # 0x140034250
   140007a3b:	mov    QWORD PTR [rsp+0x28],rax
   140007a40:	lea    rdx,[rip+0x2c739]        # 0x140034180
   140007a47:	lea    rax,[rip+0x2c722]        # 0x140034170
   140007a4e:	mov    r8d,0x173
   140007a54:	mov    QWORD PTR [rsp+0x20],rax
   140007a59:	lea    ecx,[r9+0x2]
   140007a5d:	call   0x140004ae0
   140007a62:	cmp    eax,0x1
   140007a65:	jne    0x140007a68
   140007a67:	int3   
   140007a68:	xor    eax,eax
   140007a6a:	mov    rbx,QWORD PTR [rsp+0x40]
   140007a6f:	add    rsp,0x30
   140007a73:	pop    rdi
   140007a74:	ret    
   140007a75:	int3   
   140007a76:	int3   
   140007a77:	int3   
   140007a78:	int3   
   140007a79:	int3   
   140007a7a:	int3   
   140007a7b:	int3   
   140007a7c:	int3   
   140007a7d:	int3   
   140007a7e:	int3   
   140007a7f:	int3   
   140007a80:	rex.W jmp QWORD PTR [rip+0x2a771]        # 0x1400321f8
   140007a87:	int3   
   140007a88:	int3   
   140007a89:	int3   
   140007a8a:	int3   
   140007a8b:	int3   
   140007a8c:	int3   
   140007a8d:	int3   
   140007a8e:	int3   
   140007a8f:	int3   
   140007a90:	rex.W jmp QWORD PTR [rip+0x2a749]        # 0x1400321e0
   140007a97:	int3   
   140007a98:	int3   
   140007a99:	int3   
   140007a9a:	int3   
   140007a9b:	int3   
   140007a9c:	int3   
   140007a9d:	int3   
   140007a9e:	int3   
   140007a9f:	int3   
   140007aa0:	rex.W jmp QWORD PTR [rip+0x2a741]        # 0x1400321e8
   140007aa7:	int3   
   140007aa8:	int3   
   140007aa9:	int3   
   140007aaa:	int3   
   140007aab:	int3   
   140007aac:	int3   
   140007aad:	int3   
   140007aae:	int3   
   140007aaf:	int3   
   140007ab0:	mov    QWORD PTR [rsp+0x8],rbx
   140007ab5:	mov    QWORD PTR [rsp+0x10],rsi
   140007aba:	push   rdi
   140007abb:	sub    rsp,0x20
   140007abf:	mov    esi,r8d
   140007ac2:	lea    r9,[rip+0x2c80f]        # 0x1400342d8
   140007ac9:	mov    ebx,edx
   140007acb:	lea    r8,[rip+0x2c7fe]        # 0x1400342d0
   140007ad2:	mov    rdi,rcx
   140007ad5:	lea    rdx,[rip+0x2c7fc]        # 0x1400342d8
   140007adc:	mov    ecx,0x8
   140007ae1:	call   0x1400078f0
   140007ae6:	mov    edx,ebx
   140007ae8:	mov    rcx,rdi
   140007aeb:	test   rax,rax
   140007aee:	je     0x140007b05
   140007af0:	mov    r8d,esi
   140007af3:	mov    rbx,QWORD PTR [rsp+0x30]
   140007af8:	mov    rsi,QWORD PTR [rsp+0x38]
   140007afd:	add    rsp,0x20
   140007b01:	pop    rdi
   140007b02:	rex.W jmp rax
   140007b05:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b0a:	mov    rsi,QWORD PTR [rsp+0x38]
   140007b0f:	add    rsp,0x20
   140007b13:	pop    rdi
   140007b14:	rex.W jmp QWORD PTR [rip+0x2a6e5]        # 0x140032200
   140007b1b:	int3   
   140007b1c:	int3   
   140007b1d:	int3   
   140007b1e:	int3   
   140007b1f:	int3   
   140007b20:	mov    rdx,QWORD PTR [rip+0x3e6c1]        # 0x1400461e8
   140007b27:	lea    r9,[rip+0x3f5ca]        # 0x1400470f8
   140007b2e:	mov    eax,edx
   140007b30:	mov    ecx,0x40
   140007b35:	and    eax,0x3f
   140007b38:	sub    ecx,eax
   140007b3a:	xor    eax,eax
   140007b3c:	mov    r8d,eax
   140007b3f:	ror    r8,cl
   140007b42:	lea    rcx,[rip+0x3f567]        # 0x1400470b0
   140007b49:	xor    r8,rdx
   140007b4c:	mov    edx,0x9
   140007b51:	cmp    rcx,r9
   140007b54:	cmova  edx,eax
   140007b57:	nop    WORD PTR [rax+rax*1+0x0]
   140007b60:	inc    rax
   140007b63:	mov    QWORD PTR [rcx],r8
   140007b66:	lea    rcx,[rcx+0x8]
   140007b6a:	cmp    rax,rdx
   140007b6d:	jne    0x140007b60
   140007b6f:	ret    
   140007b70:	sub    rsp,0x28
   140007b74:	test   cl,cl
   140007b76:	jne    0x140007bc6
   140007b78:	mov    QWORD PTR [rsp+0x30],rbx
   140007b7d:	lea    rbx,[rip+0x3f50c]        # 0x140047090
   140007b84:	mov    QWORD PTR [rsp+0x38],rsi
   140007b89:	lea    rsi,[rip+0x3f520]        # 0x1400470b0
   140007b90:	mov    QWORD PTR [rsp+0x20],rdi
   140007b95:	xor    edi,edi
   140007b97:	mov    rcx,QWORD PTR [rbx]
   140007b9a:	test   rcx,rcx
   140007b9d:	je     0x140007bae
   140007b9f:	cmp    rcx,0xffffffffffffffff
   140007ba3:	je     0x140007bab
   140007ba5:	call   QWORD PTR [rip+0x2a62d]        # 0x1400321d8
   140007bab:	mov    QWORD PTR [rbx],rdi
   140007bae:	add    rbx,0x8
   140007bb2:	cmp    rbx,rsi
   140007bb5:	jne    0x140007b97
   140007bb7:	mov    rdi,QWORD PTR [rsp+0x20]
   140007bbc:	mov    rsi,QWORD PTR [rsp+0x38]
   140007bc1:	mov    rbx,QWORD PTR [rsp+0x30]
   140007bc6:	add    rsp,0x28
   140007bca:	ret    
   140007bcb:	int3   
   140007bcc:	int3   
   140007bcd:	int3   
   140007bce:	int3   
   140007bcf:	int3   
   140007bd0:	mov    rax,QWORD PTR [rip+0x2a7b9]        # 0x140032390
   140007bd7:	mov    rdx,rcx
   140007bda:	mov    rcx,QWORD PTR [rax]
   140007bdd:	mov    rax,QWORD PTR [rcx]
   140007be0:	rex.W jmp QWORD PTR [rax+0x28]
   140007be4:	int3   
   140007be5:	int3   
   140007be6:	int3   
   140007be7:	int3   
   140007be8:	int3   
   140007be9:	int3   
   140007bea:	int3   
   140007beb:	int3   
   140007bec:	int3   
   140007bed:	int3   
   140007bee:	int3   
   140007bef:	int3   
   140007bf0:	mov    rax,QWORD PTR [rip+0x2a799]        # 0x140032390
   140007bf7:	mov    rdx,rcx
   140007bfa:	mov    rcx,QWORD PTR [rax]
   140007bfd:	mov    rax,QWORD PTR [rcx]
   140007c00:	rex.W jmp QWORD PTR [rax+0x8]
   140007c04:	int3   
   140007c05:	int3   
   140007c06:	int3   
   140007c07:	int3   
   140007c08:	int3   
   140007c09:	int3   
   140007c0a:	int3   
   140007c0b:	int3   
   140007c0c:	int3   
   140007c0d:	int3   
   140007c0e:	int3   
   140007c0f:	int3   
   140007c10:	lea    rax,[rip+0x2c6e1]        # 0x1400342f8
   140007c17:	ret    
   140007c18:	int3   
   140007c19:	int3   
   140007c1a:	int3   
   140007c1b:	int3   
   140007c1c:	int3   
   140007c1d:	int3   
   140007c1e:	int3   
   140007c1f:	int3   
   140007c20:	mov    QWORD PTR [rsp+0x8],rbx
   140007c25:	push   rdi
   140007c26:	sub    rsp,0x20
   140007c2a:	mov    rax,QWORD PTR [rip+0x2a75f]        # 0x140032390
   140007c31:	mov    rdi,rcx
   140007c34:	imul   rdi,rdx
   140007c38:	mov    rcx,QWORD PTR [rax]
   140007c3b:	mov    rdx,rdi
   140007c3e:	mov    rax,QWORD PTR [rcx]
   140007c41:	call   QWORD PTR [rax+0x8]
   140007c44:	mov    r8,rdi
   140007c47:	xor    edx,edx
   140007c49:	mov    rcx,rax
   140007c4c:	mov    rbx,rax
   140007c4f:	call   0x1400277b0
   140007c54:	mov    rax,rbx
   140007c57:	mov    rbx,QWORD PTR [rsp+0x30]
   140007c5c:	add    rsp,0x20
   140007c60:	pop    rdi
   140007c61:	ret    
   140007c62:	int3   
   140007c63:	int3   
   140007c64:	int3   
   140007c65:	int3   
   140007c66:	int3   
   140007c67:	int3   
   140007c68:	int3   
   140007c69:	int3   
   140007c6a:	int3   
   140007c6b:	int3   
   140007c6c:	int3   
   140007c6d:	int3   
   140007c6e:	int3   
   140007c6f:	int3   
   140007c70:	imul   rdx,r8
   140007c74:	jmp    0x140007c80
   140007c79:	int3   
   140007c7a:	int3   
   140007c7b:	int3   
   140007c7c:	int3   
   140007c7d:	int3   
   140007c7e:	int3   
   140007c7f:	int3   
   140007c80:	mov    QWORD PTR [rsp+0x8],rbx
   140007c85:	mov    QWORD PTR [rsp+0x10],rsi
   140007c8a:	push   rdi
   140007c8b:	sub    rsp,0x20
   140007c8f:	mov    rax,QWORD PTR [rip+0x2a6fa]        # 0x140032390
   140007c96:	mov    rbx,rcx
   140007c99:	mov    rdi,rdx
   140007c9c:	mov    rdx,rbx
   140007c9f:	mov    rcx,QWORD PTR [rax]
   140007ca2:	mov    rax,QWORD PTR [rcx]
   140007ca5:	call   QWORD PTR [rax+0x98]
   140007cab:	mov    r8,QWORD PTR [rip+0x2a6de]        # 0x140032390
   140007cb2:	mov    rdx,rbx
   140007cb5:	mov    rsi,rax
   140007cb8:	mov    rcx,QWORD PTR [r8]
   140007cbb:	mov    r8,rdi
   140007cbe:	mov    r9,QWORD PTR [rcx]
   140007cc1:	call   QWORD PTR [r9+0x18]
   140007cc5:	mov    rbx,rax
   140007cc8:	cmp    rdi,rsi
   140007ccb:	jbe    0x140007ce1
   140007ccd:	sub    rdi,rsi
   140007cd0:	lea    rcx,[rax+rsi*1]
   140007cd4:	mov    r8,rdi
   140007cd7:	xor    edx,edx
   140007cd9:	call   0x1400277b0
   140007cde:	mov    rax,rbx
   140007ce1:	mov    rbx,QWORD PTR [rsp+0x30]
   140007ce6:	mov    rsi,QWORD PTR [rsp+0x38]
   140007ceb:	add    rsp,0x20
   140007cef:	pop    rdi
   140007cf0:	ret    
   140007cf1:	int3   
   140007cf2:	int3   
   140007cf3:	int3   
   140007cf4:	int3   
   140007cf5:	int3   
   140007cf6:	int3   
   140007cf7:	int3   
   140007cf8:	int3   
   140007cf9:	int3   
   140007cfa:	int3   
   140007cfb:	int3   
   140007cfc:	int3   
   140007cfd:	int3   
   140007cfe:	int3   
   140007cff:	int3   
   140007d00:	mov    QWORD PTR [rsp+0x10],rbx
   140007d05:	mov    QWORD PTR [rsp+0x18],rbp
   140007d0a:	push   rdi
   140007d0b:	sub    rsp,0x30
   140007d0f:	cmp    BYTE PTR [rcx+0x8],0x0
   140007d13:	mov    rbp,r8
   140007d16:	mov    rdi,rdx
   140007d19:	mov    rbx,rcx
   140007d1c:	jne    0x140007dd1
   140007d22:	mov    eax,DWORD PTR [rcx+0x1c]
   140007d25:	mov    QWORD PTR [rsp+0x40],rsi
   140007d2a:	cmp    eax,0xffffff00
   140007d2f:	je     0x140007d54
   140007d31:	mov    ecx,DWORD PTR [rdx+0x8]
   140007d34:	cmp    eax,ecx
   140007d36:	je     0x140007d54
   140007d38:	cmp    ecx,0x2
   140007d3b:	jl     0x140007d54
   140007d3d:	call   QWORD PTR [rip+0x2a5b5]        # 0x1400322f8
   140007d43:	test   eax,eax
   140007d45:	je     0x140007d54
   140007d47:	lea    rcx,[rip+0x2c5ea]        # 0x140034338
   140007d4e:	call   QWORD PTR [rip+0x2a604]        # 0x140032358
   140007d54:	mov    eax,DWORD PTR [rip+0x3f3ae]        # 0x140047108
   140007d5a:	or     esi,0xffffffff
   140007d5d:	cmp    DWORD PTR [rdi+0xc],eax
   140007d60:	je     0x140007dab
   140007d62:	movzx  edx,BYTE PTR [rdi+0xc]
   140007d66:	movzx  ecx,BYTE PTR [rdi+0xd]
   140007d6a:	movzx  r9d,BYTE PTR [rdi+0xe]
   140007d6f:	cmp    dl,cl
   140007d71:	mov    eax,ecx
   140007d73:	cmova  eax,edx
   140007d76:	cmp    al,r9b
   140007d79:	jbe    0x140007d86
   140007d7b:	cmp    dl,cl
   140007d7d:	mov    r8d,ecx
   140007d80:	cmova  r8d,edx
   140007d84:	jmp    0x140007d8a
   140007d86:	movzx  r8d,r9b
   140007d8a:	xor    eax,eax
   140007d8c:	movzx  r9d,r9b
   140007d90:	cmp    r8b,0x80
   140007d94:	mov    r8d,ecx
   140007d97:	lea    rcx,[rbx+0x10]
   140007d9b:	seta   al
   140007d9e:	mov    DWORD PTR [rsp+0x20],eax
   140007da2:	call   QWORD PTR [rip+0x2a560]        # 0x140032308
   140007da8:	movzx  esi,ax
   140007dab:	mov    rdx,rbp
   140007dae:	lea    rcx,[rip+0x2c553]        # 0x140034308
   140007db5:	call   QWORD PTR [rip+0x2a59d]        # 0x140032358
   140007dbb:	test   esi,esi
   140007dbd:	js     0x140007dcc
   140007dbf:	lea    rcx,[rbx+0x10]
   140007dc3:	movzx  edx,si
   140007dc6:	call   QWORD PTR [rip+0x2a534]        # 0x140032300
   140007dcc:	mov    rsi,QWORD PTR [rsp+0x40]
   140007dd1:	cmp    BYTE PTR [rbx+0x9],0x0
   140007dd5:	jne    0x140007dea
   140007dd7:	call   QWORD PTR [rip+0x2a7d3]        # 0x1400325b0
   140007ddd:	test   eax,eax
   140007ddf:	je     0x140007dea
   140007de1:	mov    rcx,rbp
   140007de4:	call   QWORD PTR [rip+0x2a586]        # 0x140032370
   140007dea:	mov    eax,DWORD PTR [rdi+0x8]
   140007ded:	mov    rbp,QWORD PTR [rsp+0x50]
   140007df2:	mov    DWORD PTR [rbx+0x1c],eax
   140007df5:	mov    rbx,QWORD PTR [rsp+0x48]
   140007dfa:	add    rsp,0x30
   140007dfe:	pop    rdi
   140007dff:	ret    
   140007e00:	mov    QWORD PTR [rsp+0x8],rbx
   140007e05:	push   rdi
   140007e06:	sub    rsp,0x20
   140007e0a:	test   BYTE PTR [rdx+0x4],0x10
   140007e0e:	mov    rbx,r8
   140007e11:	mov    rdi,rdx
   140007e14:	jne    0x140007e29
   140007e16:	call   QWORD PTR [rip+0x2a794]        # 0x1400325b0
   140007e1c:	test   eax,eax
   140007e1e:	je     0x140007e29
   140007e20:	mov    rcx,rbx
   140007e23:	call   QWORD PTR [rip+0x2a547]        # 0x140032370
   140007e29:	cmp    DWORD PTR [rdi+0x8],0x4
   140007e2d:	jne    0x140007e54
   140007e2f:	call   QWORD PTR [rip+0x2a77b]        # 0x1400325b0
   140007e35:	test   eax,eax
   140007e37:	je     0x140007e3a
   140007e39:	int3   
   140007e3a:	call   QWORD PTR [rip+0x2a750]        # 0x140032590
   140007e40:	test   al,al
   140007e42:	jne    0x140007e54
   140007e44:	mov    rdx,rbx
   140007e47:	lea    rcx,[rip+0x2a956]        # 0x1400327a4
   140007e4e:	call   QWORD PTR [rip+0x2a3dc]        # 0x140032230
   140007e54:	mov    rbx,QWORD PTR [rsp+0x30]
   140007e59:	add    rsp,0x20
   140007e5d:	pop    rdi
   140007e5e:	ret    
   140007e5f:	int3   
   140007e60:	mov    QWORD PTR [rsp+0x8],rbx
   140007e65:	mov    QWORD PTR [rsp+0x10],rbp
   140007e6a:	mov    QWORD PTR [rsp+0x18],rsi
   140007e6f:	push   rdi
   140007e70:	push   r14
   140007e72:	push   r15
   140007e74:	sub    rsp,0x220
   140007e7b:	xor    edi,edi
   140007e7d:	lea    rax,[rip+0x2c52c]        # 0x1400343b0
   140007e84:	mov    QWORD PTR [rcx],rax
   140007e87:	mov    r15,r8
   140007e8a:	mov    DWORD PTR [rcx+0x8],edi
   140007e8d:	movzx  esi,dl
   140007e90:	mov    QWORD PTR [rcx+0x10],rdi
   140007e94:	mov    rbx,rcx
   140007e97:	mov    QWORD PTR [rcx+0x18],rdi
   140007e9b:	mov    DWORD PTR [rcx+0x20],edi
   140007e9e:	mov    QWORD PTR [rcx+0x28],rdi
   140007ea2:	mov    QWORD PTR [rcx+0x30],rdi
   140007ea6:	mov    DWORD PTR [rcx+0x38],edi
   140007ea9:	mov    QWORD PTR [rcx+0x40],rdi
   140007ead:	mov    QWORD PTR [rcx+0x48],rdi
   140007eb1:	mov    DWORD PTR [rcx+0x50],edi
   140007eb4:	mov    QWORD PTR [rcx+0x58],rdi
   140007eb8:	mov    QWORD PTR [rcx+0x60],rdi
   140007ebc:	mov    DWORD PTR [rcx+0x68],edi
   140007ebf:	mov    QWORD PTR [rcx+0x70],rdi
   140007ec3:	mov    QWORD PTR [rcx+0x78],0x20
   140007ecb:	call   QWORD PTR [rip+0x2a5ef]        # 0x1400324c0
   140007ed1:	mov    rax,QWORD PTR [rip+0x2a4b8]        # 0x140032390
   140007ed8:	movsxd rdx,DWORD PTR [rbx+0x78]
   140007edc:	add    rdx,rdx
   140007edf:	mov    rcx,QWORD PTR [rax]
   140007ee2:	mov    rax,QWORD PTR [rcx]
   140007ee5:	call   QWORD PTR [rax+0x8]
   140007ee8:	lea    rcx,[rbx+0x80]
   140007eef:	mov    r9b,0x1
   140007ef2:	lea    r8d,[rdi+0x20]
   140007ef6:	mov    QWORD PTR [rbx+0x70],rax
   140007efa:	xor    edx,edx
   140007efc:	call   0x14001c880
   140007f01:	mov    QWORD PTR [rbx+0x100],rdi
   140007f08:	mov    QWORD PTR [rbx+0x108],rdi
   140007f0f:	mov    QWORD PTR [rbx+0x110],rdi
   140007f16:	mov    QWORD PTR [rbx+0x118],rdi
   140007f1d:	mov    QWORD PTR [rbx+0x120],rdi
   140007f24:	mov    QWORD PTR [rbx+0x128],rdi
   140007f2b:	mov    QWORD PTR [rbx+0x13c],rdi
   140007f32:	mov    BYTE PTR [rbx+0x139],dil
   140007f39:	mov    BYTE PTR [rbx+0x146],dil
   140007f40:	call   QWORD PTR [rip+0x2a40a]        # 0x140032350
   140007f46:	movzx  ebp,BYTE PTR [rsp+0x268]
   140007f4e:	mov    BYTE PTR [rbx+0x144],al
   140007f54:	movzx  eax,BYTE PTR [rsp+0x270]
   140007f5c:	mov    BYTE PTR [rbx+0xfc],al
   140007f62:	mov    QWORD PTR [rip+0x3f1a7],rbx        # 0x140047110
   140007f69:	mov    QWORD PTR [rbx+0x130],rdi
   140007f70:	mov    QWORD PTR [rbx+0xe0],rdi
   140007f77:	mov    BYTE PTR [rbx+0xf8],sil
   140007f7e:	mov    BYTE PTR [rbx+0xfb],bpl
   140007f85:	call   QWORD PTR [rip+0x2a63d]        # 0x1400325c8
   140007f8b:	lea    ecx,[rdi+0x14]
   140007f8e:	call   0x14001dc70
   140007f93:	test   rax,rax
   140007f96:	je     0x140007fa9
   140007f98:	lea    rdx,[rip+0x2c451]        # 0x1400343f0
   140007f9f:	mov    rcx,rax
   140007fa2:	call   0x14001dbb0
   140007fa7:	jmp    0x140007fac
   140007fa9:	mov    rax,rdi
   140007fac:	test   bpl,bpl
   140007faf:	mov    QWORD PTR [rbx+0xe8],rax
   140007fb6:	lea    rdx,[rip+0x2b12f]        # 0x1400330ec
   140007fbd:	mov    rcx,rax
   140007fc0:	setne  dil
   140007fc4:	mov    r8d,edi
   140007fc7:	call   0x140020740
   140007fcc:	lea    rax,[rip+0x3e0cd]        # 0x1400460a0
   140007fd3:	test   sil,sil
   140007fd6:	jne    0x140007fdf
   140007fd8:	lea    rax,[rip+0x3e0b9]        # 0x140046098
   140007fdf:	xor    ecx,ecx
   140007fe1:	mov    QWORD PTR [rbx+0xd8],rax
   140007fe8:	call   QWORD PTR [rip+0x2a2e2]        # 0x1400322d0
   140007fee:	mov    dl,0x1
   140007ff0:	xor    ecx,ecx
   140007ff2:	mov    DWORD PTR [rbx+0xd0],eax
   140007ff8:	call   QWORD PTR [rip+0x2a2e2]        # 0x1400322e0
   140007ffe:	mov    rcx,QWORD PTR [rbx+0xd8]
   140008005:	call   QWORD PTR [rip+0x2a2e5]        # 0x1400322f0
   14000800b:	mov    edx,0x200
   140008010:	mov    QWORD PTR [rbx+0xf0],r15
   140008017:	lea    rcx,[rsp+0x20]
   14000801c:	mov    WORD PTR [rbx+0xf9],0x0
   140008025:	call   QWORD PTR [rip+0x2a54d]        # 0x140032578
   14000802b:	lea    rcx,[rsp+0x20]
   140008030:	call   QWORD PTR [rip+0x2a4e2]        # 0x140032518
   140008036:	lea    rdx,[rsp+0x20]
   14000803b:	lea    rcx,[rbx+0x118]
   140008042:	call   0x14001aae0
   140008047:	lea    r11,[rsp+0x220]
   14000804f:	mov    BYTE PTR [rbx+0x138],0x0
   140008056:	mov    rbp,QWORD PTR [r11+0x28]
   14000805a:	mov    rax,rbx
   14000805d:	mov    rsi,QWORD PTR [r11+0x30]
   140008061:	mov    BYTE PTR [rbx+0x145],0x0
   140008068:	mov    rbx,QWORD PTR [r11+0x20]
   14000806c:	mov    rsp,r11
   14000806f:	pop    r15
   140008071:	pop    r14
   140008073:	pop    rdi
   140008074:	ret    
   140008075:	int3   
   140008076:	int3   
   140008077:	int3   
   140008078:	int3   
   140008079:	int3   
   14000807a:	int3   
   14000807b:	int3   
   14000807c:	int3   
   14000807d:	int3   
   14000807e:	int3   
   14000807f:	int3   
   140008080:	mov    QWORD PTR [rsp+0x20],rbx
   140008085:	push   rbp
   140008086:	sub    rsp,0x20
   14000808a:	lea    rax,[rip+0x2c31f]        # 0x1400343b0
   140008091:	mov    QWORD PTR [rsp+0x38],rdi
   140008096:	xor    edx,edx
   140008098:	mov    QWORD PTR [rcx],rax
   14000809b:	mov    rbx,rcx
   14000809e:	call   0x14000b440
   1400080a3:	xor    ecx,ecx
   1400080a5:	call   QWORD PTR [rip+0x2a22d]        # 0x1400322d8
   1400080ab:	xor    ecx,ecx
   1400080ad:	call   QWORD PTR [rip+0x2a21d]        # 0x1400322d0
   1400080b3:	cmp    DWORD PTR [rbx+0xd0],eax
   1400080b9:	je     0x1400080db
   1400080bb:	call   QWORD PTR [rip+0x2a227]        # 0x1400322e8
   1400080c1:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400080c8:	call   QWORD PTR [rip+0x2a222]        # 0x1400322f0
   1400080ce:	lea    rcx,[rip+0x2c32b]        # 0x140034400
   1400080d5:	call   QWORD PTR [rip+0x2a2d5]        # 0x1400323b0
   1400080db:	mov    eax,DWORD PTR [rbx+0x20]
   1400080de:	sub    eax,0x1
   1400080e1:	mov    QWORD PTR [rsp+0x30],rsi
   1400080e6:	movsxd rdi,eax
   1400080e9:	js     0x140008158
   1400080eb:	mov    QWORD PTR [rsp+0x40],r14
   1400080f0:	lea    r14,[rdi+rdi*4]
   1400080f4:	shl    r14,0x3
   1400080f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140008100:	mov    rsi,QWORD PTR [rbx+0x28]
   140008104:	mov    rdx,QWORD PTR [rsi+r14*1+0x18]
   140008109:	test   rdx,rdx
   14000810c:	je     0x140008116
   14000810e:	mov    rcx,rbx
   140008111:	call   0x14000b780
   140008116:	mov    rdx,QWORD PTR [rsi+r14*1]
   14000811a:	test   rdx,rdx
   14000811d:	je     0x14000812f
   14000811f:	mov    rax,QWORD PTR [rip+0x2a26a]        # 0x140032390
   140008126:	mov    rcx,QWORD PTR [rax]
   140008129:	mov    rax,QWORD PTR [rcx]
   14000812c:	call   QWORD PTR [rax+0x28]
   14000812f:	mov    rdx,QWORD PTR [rsi+r14*1+0x8]
   140008134:	test   rdx,rdx
   140008137:	je     0x140008149
   140008139:	mov    rax,QWORD PTR [rip+0x2a250]        # 0x140032390
   140008140:	mov    rcx,QWORD PTR [rax]
   140008143:	mov    rax,QWORD PTR [rcx]
   140008146:	call   QWORD PTR [rax+0x28]
   140008149:	sub    r14,0x28
   14000814d:	sub    rdi,0x1
   140008151:	jns    0x140008100
   140008153:	mov    r14,QWORD PTR [rsp+0x40]
   140008158:	xor    ebp,ebp
   14000815a:	lea    rcx,[rbx+0x80]
   140008161:	mov    DWORD PTR [rbx+0x20],ebp
   140008164:	mov    DWORD PTR [rbx+0x68],ebp
   140008167:	call   0x14001d800
   14000816c:	mov    rcx,QWORD PTR [rbx+0xe0]
   140008173:	test   rcx,rcx
   140008176:	je     0x140008184
   140008178:	call   0x140020790
   14000817d:	mov    QWORD PTR [rbx+0xe0],rbp
   140008184:	mov    rcx,QWORD PTR [rbx+0xe8]
   14000818b:	test   rcx,rcx
   14000818e:	je     0x14000819c
   140008190:	call   0x140020790
   140008195:	mov    QWORD PTR [rbx+0xe8],rbp
   14000819c:	mov    rcx,QWORD PTR [rbx+0x130]
   1400081a3:	test   rcx,rcx
   1400081a6:	je     0x1400081ba
   1400081a8:	mov    rax,QWORD PTR [rcx]
   1400081ab:	mov    edx,0x1
   1400081b0:	call   QWORD PTR [rax+0x58]
   1400081b3:	mov    QWORD PTR [rbx+0x130],rbp
   1400081ba:	mov    QWORD PTR [rip+0x3ef4f],rbp        # 0x140047110
   1400081c1:	call   QWORD PTR [rip+0x2a0e9]        # 0x1400322b0
   1400081c7:	test   rax,rax
   1400081ca:	je     0x1400081d5
   1400081cc:	call   QWORD PTR [rax+0x8]
   1400081cf:	call   QWORD PTR [rip+0x2a0d3]        # 0x1400322a8
   1400081d5:	cmp    BYTE PTR [rbx+0x139],bpl
   1400081dc:	jne    0x1400081e4
   1400081de:	call   QWORD PTR [rip+0x2a13c]        # 0x140032320
   1400081e4:	lea    rcx,[rbx+0x128]
   1400081eb:	cmp    QWORD PTR [rcx],rbp
   1400081ee:	je     0x1400081f5
   1400081f0:	call   0x14001b030
   1400081f5:	lea    rcx,[rbx+0x120]
   1400081fc:	cmp    QWORD PTR [rcx],rbp
   1400081ff:	je     0x140008206
   140008201:	call   0x14001b030
   140008206:	lea    rcx,[rbx+0x118]
   14000820d:	cmp    QWORD PTR [rcx],rbp
   140008210:	je     0x140008217
   140008212:	call   0x14001b030
   140008217:	lea    rcx,[rbx+0x110]
   14000821e:	cmp    QWORD PTR [rcx],rbp
   140008221:	je     0x140008228
   140008223:	call   0x14001b030
   140008228:	lea    rcx,[rbx+0x108]
   14000822f:	cmp    QWORD PTR [rcx],rbp
   140008232:	je     0x140008239
   140008234:	call   0x14001b030
   140008239:	lea    rcx,[rbx+0x100]
   140008240:	cmp    QWORD PTR [rcx],rbp
   140008243:	je     0x14000824a
   140008245:	call   0x14001b030
   14000824a:	lea    rcx,[rbx+0x80]
   140008251:	call   0x14001c950
   140008256:	mov    DWORD PTR [rbx+0x68],ebp
   140008259:	test   DWORD PTR [rbx+0x7c],0xc0000000
   140008260:	jne    0x1400082ab
   140008262:	mov    rdx,QWORD PTR [rbx+0x70]
   140008266:	test   rdx,rdx
   140008269:	je     0x14000827f
   14000826b:	mov    rax,QWORD PTR [rip+0x2a11e]        # 0x140032390
   140008272:	mov    rcx,QWORD PTR [rax]
   140008275:	mov    rax,QWORD PTR [rcx]
   140008278:	call   QWORD PTR [rax+0x28]
   14000827b:	mov    QWORD PTR [rbx+0x70],rbp
   14000827f:	mov    DWORD PTR [rbx+0x78],ebp
   140008282:	test   DWORD PTR [rbx+0x7c],0xc0000000
   140008289:	jne    0x1400082ab
   14000828b:	mov    rdx,QWORD PTR [rbx+0x70]
   14000828f:	test   rdx,rdx
   140008292:	je     0x1400082a8
   140008294:	mov    rax,QWORD PTR [rip+0x2a0f5]        # 0x140032390
   14000829b:	mov    rcx,QWORD PTR [rax]
   14000829e:	mov    rax,QWORD PTR [rcx]
   1400082a1:	call   QWORD PTR [rax+0x28]
   1400082a4:	mov    QWORD PTR [rbx+0x70],rbp
   1400082a8:	mov    DWORD PTR [rbx+0x78],ebp
   1400082ab:	mov    edi,ebp
   1400082ad:	cmp    DWORD PTR [rbx+0x50],ebp
   1400082b0:	jle    0x1400082e3
   1400082b2:	mov    rsi,rbp
   1400082b5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400082c0:	mov    rax,QWORD PTR [rip+0x2a0c9]        # 0x140032390
   1400082c7:	mov    rdx,QWORD PTR [rbx+0x58]
   1400082cb:	mov    rcx,QWORD PTR [rax]
   1400082ce:	mov    rdx,QWORD PTR [rdx+rsi*1]
   1400082d2:	mov    rax,QWORD PTR [rcx]
   1400082d5:	call   QWORD PTR [rax+0x28]
   1400082d8:	inc    edi
   1400082da:	lea    rsi,[rsi+0x8]
   1400082de:	cmp    edi,DWORD PTR [rbx+0x50]
   1400082e1:	jl     0x1400082c0
   1400082e3:	mov    rdi,QWORD PTR [rsp+0x38]
   1400082e8:	mov    rsi,QWORD PTR [rsp+0x30]
   1400082ed:	mov    DWORD PTR [rbx+0x50],ebp
   1400082f0:	test   DWORD PTR [rbx+0x64],0xc0000000
   1400082f7:	jne    0x140008342
   1400082f9:	mov    rdx,QWORD PTR [rbx+0x58]
   1400082fd:	test   rdx,rdx
   140008300:	je     0x140008316
   140008302:	mov    rax,QWORD PTR [rip+0x2a087]        # 0x140032390
   140008309:	mov    rcx,QWORD PTR [rax]
   14000830c:	mov    rax,QWORD PTR [rcx]
   14000830f:	call   QWORD PTR [rax+0x28]
   140008312:	mov    QWORD PTR [rbx+0x58],rbp
   140008316:	mov    DWORD PTR [rbx+0x60],ebp
   140008319:	test   DWORD PTR [rbx+0x64],0xc0000000
   140008320:	jne    0x140008342
   140008322:	mov    rdx,QWORD PTR [rbx+0x58]
   140008326:	test   rdx,rdx
   140008329:	je     0x14000833f
   14000832b:	mov    rax,QWORD PTR [rip+0x2a05e]        # 0x140032390
   140008332:	mov    rcx,QWORD PTR [rax]
   140008335:	mov    rax,QWORD PTR [rcx]
   140008338:	call   QWORD PTR [rax+0x28]
   14000833b:	mov    QWORD PTR [rbx+0x58],rbp
   14000833f:	mov    DWORD PTR [rbx+0x60],ebp
   140008342:	mov    DWORD PTR [rbx+0x38],ebp
   140008345:	test   DWORD PTR [rbx+0x4c],0xc0000000
   14000834c:	jne    0x140008397
   14000834e:	mov    rdx,QWORD PTR [rbx+0x40]
   140008352:	test   rdx,rdx
   140008355:	je     0x14000836b
   140008357:	mov    rax,QWORD PTR [rip+0x2a032]        # 0x140032390
   14000835e:	mov    rcx,QWORD PTR [rax]
   140008361:	mov    rax,QWORD PTR [rcx]
   140008364:	call   QWORD PTR [rax+0x28]
   140008367:	mov    QWORD PTR [rbx+0x40],rbp
   14000836b:	mov    DWORD PTR [rbx+0x48],ebp
   14000836e:	test   DWORD PTR [rbx+0x4c],0xc0000000
   140008375:	jne    0x140008397
   140008377:	mov    rdx,QWORD PTR [rbx+0x40]
   14000837b:	test   rdx,rdx
   14000837e:	je     0x140008394
   140008380:	mov    rax,QWORD PTR [rip+0x2a009]        # 0x140032390
   140008387:	mov    rcx,QWORD PTR [rax]
   14000838a:	mov    rax,QWORD PTR [rcx]
   14000838d:	call   QWORD PTR [rax+0x28]
   140008390:	mov    QWORD PTR [rbx+0x40],rbp
   140008394:	mov    DWORD PTR [rbx+0x48],ebp
   140008397:	mov    DWORD PTR [rbx+0x20],ebp
   14000839a:	test   DWORD PTR [rbx+0x34],0xc0000000
   1400083a1:	jne    0x1400083ec
   1400083a3:	mov    rdx,QWORD PTR [rbx+0x28]
   1400083a7:	test   rdx,rdx
   1400083aa:	je     0x1400083c0
   1400083ac:	mov    rax,QWORD PTR [rip+0x29fdd]        # 0x140032390
   1400083b3:	mov    rcx,QWORD PTR [rax]
   1400083b6:	mov    rax,QWORD PTR [rcx]
   1400083b9:	call   QWORD PTR [rax+0x28]
   1400083bc:	mov    QWORD PTR [rbx+0x28],rbp
   1400083c0:	mov    DWORD PTR [rbx+0x30],ebp
   1400083c3:	test   DWORD PTR [rbx+0x34],0xc0000000
   1400083ca:	jne    0x1400083ec
   1400083cc:	mov    rdx,QWORD PTR [rbx+0x28]
   1400083d0:	test   rdx,rdx
   1400083d3:	je     0x1400083e9
   1400083d5:	mov    rax,QWORD PTR [rip+0x29fb4]        # 0x140032390
   1400083dc:	mov    rcx,QWORD PTR [rax]
   1400083df:	mov    rax,QWORD PTR [rcx]
   1400083e2:	call   QWORD PTR [rax+0x28]
   1400083e5:	mov    QWORD PTR [rbx+0x28],rbp
   1400083e9:	mov    DWORD PTR [rbx+0x30],ebp
   1400083ec:	mov    DWORD PTR [rbx+0x8],ebp
   1400083ef:	test   DWORD PTR [rbx+0x1c],0xc0000000
   1400083f6:	jne    0x140008441
   1400083f8:	mov    rdx,QWORD PTR [rbx+0x10]
   1400083fc:	test   rdx,rdx
   1400083ff:	je     0x140008415
   140008401:	mov    rax,QWORD PTR [rip+0x29f88]        # 0x140032390
   140008408:	mov    rcx,QWORD PTR [rax]
   14000840b:	mov    rax,QWORD PTR [rcx]
   14000840e:	call   QWORD PTR [rax+0x28]
   140008411:	mov    QWORD PTR [rbx+0x10],rbp
   140008415:	mov    DWORD PTR [rbx+0x18],ebp
   140008418:	test   DWORD PTR [rbx+0x1c],0xc0000000
   14000841f:	jne    0x140008441
   140008421:	mov    rdx,QWORD PTR [rbx+0x10]
   140008425:	test   rdx,rdx
   140008428:	je     0x14000843e
   14000842a:	mov    rax,QWORD PTR [rip+0x29f5f]        # 0x140032390
   140008431:	mov    rcx,QWORD PTR [rax]
   140008434:	mov    rax,QWORD PTR [rcx]
   140008437:	call   QWORD PTR [rax+0x28]
   14000843a:	mov    QWORD PTR [rbx+0x10],rbp
   14000843e:	mov    DWORD PTR [rbx+0x18],ebp
   140008441:	mov    rbx,QWORD PTR [rsp+0x48]
   140008446:	add    rsp,0x20
   14000844a:	pop    rbp
   14000844b:	ret    
   14000844c:	int3   
   14000844d:	int3   
   14000844e:	int3   
   14000844f:	int3   
   140008450:	mov    QWORD PTR [rsp+0x8],rbx
   140008455:	push   rdi
   140008456:	sub    rsp,0x20
   14000845a:	mov    ebx,edx
   14000845c:	mov    rdi,rcx
   14000845f:	call   0x140008080
   140008464:	test   bl,0x1
   140008467:	je     0x140008476
   140008469:	mov    edx,0x148
   14000846e:	mov    rcx,rdi
   140008471:	call   0x14002639c
   140008476:	mov    rax,rdi
   140008479:	mov    rbx,QWORD PTR [rsp+0x30]
   14000847e:	add    rsp,0x20
   140008482:	pop    rdi
   140008483:	ret    
   140008484:	int3   
   140008485:	int3   
   140008486:	int3   
   140008487:	int3   
   140008488:	int3   
   140008489:	int3   
   14000848a:	int3   
   14000848b:	int3   
   14000848c:	int3   
   14000848d:	int3   
   14000848e:	int3   
   14000848f:	int3   
   140008490:	mov    QWORD PTR [rsp+0x18],rbx
   140008495:	mov    QWORD PTR [rsp+0x20],rsi
   14000849a:	push   rbp
   14000849b:	push   rdi
   14000849c:	push   r15
   14000849e:	lea    rbp,[rsp-0x47]
   1400084a3:	sub    rsp,0xa0
   1400084aa:	mov    ebx,r9d
   1400084ad:	mov    r15,r8
   1400084b0:	mov    rdi,rdx
   1400084b3:	mov    rsi,rcx
   1400084b6:	test   rdx,rdx
   1400084b9:	jne    0x1400084c2
   1400084bb:	xor    eax,eax
   1400084bd:	jmp    0x1400086fa
   1400084c2:	sub    rcx,0xffffffffffffff80
   1400084c6:	mov    QWORD PTR [rsp+0xc0],r14
   1400084ce:	lea    rdx,[rbp+0x6f]
   1400084d2:	call   0x14001ce30
   1400084d7:	movzx  ecx,WORD PTR [rax]
   1400084da:	mov    eax,0xffff
   1400084df:	cmp    cx,ax
   1400084e2:	je     0x1400085ef
   1400084e8:	mov    rax,QWORD PTR [rsi+0x70]
   1400084ec:	movzx  ecx,cx
   1400084ef:	movzx  ecx,WORD PTR [rax+rcx*2]
   1400084f3:	mov    rax,QWORD PTR [rsi+0x28]
   1400084f7:	lea    rdx,[rcx+rcx*4]
   1400084fb:	cmp    QWORD PTR [rax+rdx*8+0x18],rdi
   140008500:	lea    r14,[rax+rdx*8]
   140008504:	je     0x1400085ef
   14000850a:	mov    rcx,QWORD PTR [r14+0x10]
   14000850e:	mov    rax,QWORD PTR [rcx]
   140008511:	call   QWORD PTR [rax+0x48]
   140008514:	test   al,al
   140008516:	je     0x1400085ef
   14000851c:	test   ebx,ebx
   14000851e:	jne    0x1400085c8
   140008524:	mov    rax,QWORD PTR [rip+0x29e5d]        # 0x140032388
   14000852b:	lea    edx,[rbx+0x4]
   14000852e:	mov    ecx,DWORD PTR [rax]
   140008530:	call   QWORD PTR [rip+0x29f72]        # 0x1400324a8
   140008536:	test   al,al
   140008538:	je     0x140008587
   14000853a:	lea    rax,[rip+0x2c04f]        # 0x140034590
   140008541:	mov    QWORD PTR [rsp+0x30],rdi
   140008546:	mov    QWORD PTR [rbp-0x19],rax
   14000854a:	lea    r9,[rip+0x2c08f]        # 0x1400345e0
   140008551:	lea    rax,[rip+0x2c018]        # 0x140034570
   140008558:	mov    DWORD PTR [rbp-0x11],0x1f7
   14000855f:	mov    QWORD PTR [rbp-0x9],rax
   140008563:	lea    r8,[rbp-0x19]
   140008567:	mov    rax,QWORD PTR [r14+0x18]
   14000856b:	lea    edx,[rbx+0x4]
   14000856e:	mov    QWORD PTR [rsp+0x28],rax
   140008573:	mov    rax,QWORD PTR [rip+0x29e0e]        # 0x140032388
   14000857a:	mov    QWORD PTR [rsp+0x20],r15
   14000857f:	mov    ecx,DWORD PTR [rax]
   140008581:	call   QWORD PTR [rip+0x29f11]        # 0x140032498
   140008587:	call   QWORD PTR [rip+0x29ffb]        # 0x140032588
   14000858d:	test   al,al
   14000858f:	je     0x1400085bc
   140008591:	call   QWORD PTR [rip+0x29ee9]        # 0x140032480
   140008597:	lea    rcx,[rip+0x2a20e]        # 0x1400327ac
   14000859e:	xorps  xmm0,xmm0
   1400085a1:	lea    rdx,[rbp-0x19]
   1400085a5:	mov    DWORD PTR [rbp-0x11],eax
   1400085a8:	mov    QWORD PTR [rbp-0x19],rcx
   1400085ac:	mov    r8b,0x1
   1400085af:	xor    ecx,ecx
   1400085b1:	movdqu XMMWORD PTR [rbp-0x9],xmm0
   1400085b6:	call   QWORD PTR [rip+0x29ebc]        # 0x140032478
   1400085bc:	mov    ecx,0x1
   1400085c1:	call   QWORD PTR [rip+0x29c81]        # 0x140032248
   1400085c7:	int3   
   1400085c8:	cmp    ebx,0x1
   1400085cb:	jne    0x1400086b3
   1400085d1:	mov    r8,QWORD PTR [r14+0x18]
   1400085d5:	lea    rcx,[rip+0x2c004]        # 0x1400345e0
   1400085dc:	mov    r9,rdi
   1400085df:	mov    rdx,r15
   1400085e2:	call   QWORD PTR [rip+0x29dc8]        # 0x1400323b0
   1400085e8:	xor    eax,eax
   1400085ea:	jmp    0x1400086f2
   1400085ef:	xor    eax,eax
   1400085f1:	mov    QWORD PTR [rbp+0x2f],rdi
   1400085f5:	mov    QWORD PTR [rbp+0x7],rax
   1400085f9:	mov    QWORD PTR [rbp+0xf],rax
   1400085fd:	mov    QWORD PTR [rbp+0x17],rax
   140008601:	mov    QWORD PTR [rbp+0x27],rax
   140008605:	mov    QWORD PTR [rbp+0x37],rax
   140008609:	mov    QWORD PTR [rbp+0x1f],r15
   14000860d:	mov    QWORD PTR [rbp-0x9],0x40
   140008615:	call   QWORD PTR [rip+0x29ea5]        # 0x1400324c0
   14000861b:	mov    rax,QWORD PTR [rip+0x29d6e]        # 0x140032390
   140008622:	mov    edx,0xe00
   140008627:	mov    rcx,QWORD PTR [rax]
   14000862a:	mov    rax,QWORD PTR [rcx]
   14000862d:	call   QWORD PTR [rax+0x8]
   140008630:	mov    QWORD PTR [rbp-0x11],rax
   140008634:	mov    DWORD PTR [rbp-0x19],0x1
   14000863b:	test   rax,rax
   14000863e:	je     0x140008661
   140008640:	movups xmm0,XMMWORD PTR [rbp+0x7]
   140008644:	movups xmm1,XMMWORD PTR [rbp+0x17]
   140008648:	movups XMMWORD PTR [rax],xmm0
   14000864b:	movups xmm0,XMMWORD PTR [rbp+0x27]
   14000864f:	movups XMMWORD PTR [rax+0x10],xmm1
   140008653:	movsd  xmm1,QWORD PTR [rbp+0x37]
   140008658:	movups XMMWORD PTR [rax+0x20],xmm0
   14000865c:	movsd  QWORD PTR [rax+0x30],xmm1
   140008661:	mov    r8d,ebx
   140008664:	lea    rdx,[rbp-0x19]
   140008668:	mov    rcx,rsi
   14000866b:	call   0x14000a170
   140008670:	mov    ebx,DWORD PTR [rbp-0x5]
   140008673:	mov    rdx,QWORD PTR [rbp-0x11]
   140008677:	test   al,al
   140008679:	jne    0x1400086b7
   14000867b:	and    ebx,0xc0000000
   140008681:	jne    0x14000869a
   140008683:	test   rdx,rdx
   140008686:	je     0x14000869a
   140008688:	mov    rax,QWORD PTR [rip+0x29d01]        # 0x140032390
   14000868f:	mov    rcx,QWORD PTR [rax]
   140008692:	mov    rax,QWORD PTR [rcx]
   140008695:	call   QWORD PTR [rax+0x28]
   140008698:	xor    edx,edx
   14000869a:	test   ebx,ebx
   14000869c:	jne    0x1400086b3
   14000869e:	test   rdx,rdx
   1400086a1:	je     0x1400086b3
   1400086a3:	mov    rax,QWORD PTR [rip+0x29ce6]        # 0x140032390
   1400086aa:	mov    rcx,QWORD PTR [rax]
   1400086ad:	mov    rax,QWORD PTR [rcx]
   1400086b0:	call   QWORD PTR [rax+0x28]
   1400086b3:	xor    eax,eax
   1400086b5:	jmp    0x1400086f2
   1400086b7:	mov    rdi,QWORD PTR [rdx+0x20]
   1400086bb:	and    ebx,0xc0000000
   1400086c1:	jne    0x1400086d5
   1400086c3:	mov    rax,QWORD PTR [rip+0x29cc6]        # 0x140032390
   1400086ca:	mov    rcx,QWORD PTR [rax]
   1400086cd:	mov    rax,QWORD PTR [rcx]
   1400086d0:	call   QWORD PTR [rax+0x28]
   1400086d3:	xor    edx,edx
   1400086d5:	test   ebx,ebx
   1400086d7:	jne    0x1400086ef
   1400086d9:	test   rdx,rdx
   1400086dc:	je     0x1400086ef
   1400086de:	mov    rcx,QWORD PTR [rip+0x29cab]        # 0x140032390
   1400086e5:	mov    rcx,QWORD PTR [rcx]
   1400086e8:	mov    r8,QWORD PTR [rcx]
   1400086eb:	call   QWORD PTR [r8+0x28]
   1400086ef:	mov    rax,rdi
   1400086f2:	mov    r14,QWORD PTR [rsp+0xc0]
   1400086fa:	lea    r11,[rsp+0xa0]
   140008702:	mov    rbx,QWORD PTR [r11+0x30]
   140008706:	mov    rsi,QWORD PTR [r11+0x38]
   14000870a:	mov    rsp,r11
   14000870d:	pop    r15
   14000870f:	pop    rdi
   140008710:	pop    rbp
   140008711:	ret    
   140008712:	int3   
   140008713:	int3   
   140008714:	int3   
   140008715:	int3   
   140008716:	int3   
   140008717:	int3   
   140008718:	int3   
   140008719:	int3   
   14000871a:	int3   
   14000871b:	int3   
   14000871c:	int3   
   14000871d:	int3   
   14000871e:	int3   
   14000871f:	int3   
   140008720:	mov    QWORD PTR [rsp+0x8],rbx
   140008725:	mov    QWORD PTR [rsp+0x18],rsi
   14000872a:	mov    QWORD PTR [rsp+0x20],rdi
   14000872f:	push   rbp
   140008730:	lea    rbp,[rsp-0x57]
   140008735:	sub    rsp,0xb0
   14000873c:	mov    rsi,r8
   14000873f:	mov    rbx,rdx
   140008742:	mov    rdi,rcx
   140008745:	test   rdx,rdx
   140008748:	je     0x14000891f
   14000874e:	mov    rax,QWORD PTR [rdx]
   140008751:	mov    rcx,rdx
   140008754:	call   QWORD PTR [rax+0x48]
   140008757:	test   al,al
   140008759:	je     0x14000885b
   14000875f:	lea    rcx,[rdi+0x80]
   140008766:	mov    r8,rsi
   140008769:	lea    rdx,[rbp+0x6f]
   14000876d:	call   0x14001ce30
   140008772:	movzx  ecx,WORD PTR [rax]
   140008775:	mov    eax,0xffff
   14000877a:	cmp    cx,ax
   14000877d:	je     0x14000885b
   140008783:	mov    rax,QWORD PTR [rdi+0x70]
   140008787:	movzx  ecx,cx
   14000878a:	movzx  ecx,WORD PTR [rax+rcx*2]
   14000878e:	mov    rax,QWORD PTR [rdi+0x28]
   140008792:	lea    rdx,[rcx+rcx*4]
   140008796:	cmp    QWORD PTR [rax+rdx*8+0x10],rbx
   14000879b:	lea    rdi,[rax+rdx*8]
   14000879f:	je     0x14000895e
   1400087a5:	mov    rax,QWORD PTR [rip+0x29bdc]        # 0x140032388
   1400087ac:	mov    edx,0x4
   1400087b1:	mov    ecx,DWORD PTR [rax]
   1400087b3:	call   QWORD PTR [rip+0x29cef]        # 0x1400324a8
   1400087b9:	test   al,al
   1400087bb:	je     0x14000881a
   1400087bd:	mov    QWORD PTR [rsp+0x40],rbx
   1400087c2:	lea    rax,[rip+0x2bdc7]        # 0x140034590
   1400087c9:	mov    QWORD PTR [rbp-0x9],rax
   1400087cd:	lea    r9,[rip+0x2bcfc]        # 0x1400344d0
   1400087d4:	mov    QWORD PTR [rsp+0x38],rsi
   1400087d9:	lea    rax,[rip+0x2bd90]        # 0x140034570
   1400087e0:	mov    QWORD PTR [rbp+0x7],rax
   1400087e4:	lea    r8,[rbp-0x9]
   1400087e8:	mov    rax,QWORD PTR [rdi+0x10]
   1400087ec:	mov    edx,0x4
   1400087f1:	mov    QWORD PTR [rsp+0x30],rax
   1400087f6:	mov    rax,QWORD PTR [rdi+0x8]
   1400087fa:	mov    QWORD PTR [rsp+0x28],rax
   1400087ff:	mov    rax,QWORD PTR [rip+0x29b82]        # 0x140032388
   140008806:	mov    DWORD PTR [rbp-0x1],0x1b5
   14000880d:	mov    QWORD PTR [rsp+0x20],rsi
   140008812:	mov    ecx,DWORD PTR [rax]
   140008814:	call   QWORD PTR [rip+0x29c7e]        # 0x140032498
   14000881a:	call   QWORD PTR [rip+0x29d68]        # 0x140032588
   140008820:	test   al,al
   140008822:	je     0x14000884f
   140008824:	call   QWORD PTR [rip+0x29c56]        # 0x140032480
   14000882a:	lea    rcx,[rip+0x29f7b]        # 0x1400327ac
   140008831:	xorps  xmm0,xmm0
   140008834:	lea    rdx,[rbp-0x9]
   140008838:	mov    DWORD PTR [rbp-0x1],eax
   14000883b:	mov    QWORD PTR [rbp-0x9],rcx
   14000883f:	mov    r8b,0x1
   140008842:	xor    ecx,ecx
   140008844:	movdqu XMMWORD PTR [rbp+0x7],xmm0
   140008849:	call   QWORD PTR [rip+0x29c29]        # 0x140032478
   14000884f:	mov    ecx,0x1
   140008854:	call   QWORD PTR [rip+0x299ee]        # 0x140032248
   14000885a:	int3   
   14000885b:	xor    eax,eax
   14000885d:	mov    QWORD PTR [rbp+0x37],rbx
   140008861:	mov    QWORD PTR [rbp+0x17],rax
   140008865:	mov    QWORD PTR [rbp+0x1f],rax
   140008869:	mov    QWORD PTR [rbp+0x27],rax
   14000886d:	mov    QWORD PTR [rbp+0x3f],rax
   140008871:	mov    QWORD PTR [rbp+0x47],rax
   140008875:	mov    QWORD PTR [rbp+0x2f],rsi
   140008879:	mov    QWORD PTR [rbp+0x7],0x40
   140008881:	call   QWORD PTR [rip+0x29c39]        # 0x1400324c0
   140008887:	mov    rax,QWORD PTR [rip+0x29b02]        # 0x140032390
   14000888e:	mov    edx,0xe00
   140008893:	mov    rcx,QWORD PTR [rax]
   140008896:	mov    rax,QWORD PTR [rcx]
   140008899:	call   QWORD PTR [rax+0x8]
   14000889c:	mov    QWORD PTR [rbp-0x1],rax
   1400088a0:	mov    DWORD PTR [rbp-0x9],0x1
   1400088a7:	test   rax,rax
   1400088aa:	je     0x1400088cd
   1400088ac:	movups xmm0,XMMWORD PTR [rbp+0x17]
   1400088b0:	movups xmm1,XMMWORD PTR [rbp+0x27]
   1400088b4:	movups XMMWORD PTR [rax],xmm0
   1400088b7:	movups xmm0,XMMWORD PTR [rbp+0x37]
   1400088bb:	movups XMMWORD PTR [rax+0x10],xmm1
   1400088bf:	movsd  xmm1,QWORD PTR [rbp+0x47]
   1400088c4:	movups XMMWORD PTR [rax+0x20],xmm0
   1400088c8:	movsd  QWORD PTR [rax+0x30],xmm1
   1400088cd:	xor    r8d,r8d
   1400088d0:	lea    rdx,[rbp-0x9]
   1400088d4:	mov    rcx,rdi
   1400088d7:	call   0x14000a170
   1400088dc:	mov    rdx,QWORD PTR [rbp-0x1]
   1400088e0:	test   al,al
   1400088e2:	jne    0x140008923
   1400088e4:	mov    ebx,DWORD PTR [rbp+0xb]
   1400088e7:	and    ebx,0xc0000000
   1400088ed:	jne    0x140008906
   1400088ef:	test   rdx,rdx
   1400088f2:	je     0x140008906
   1400088f4:	mov    rax,QWORD PTR [rip+0x29a95]        # 0x140032390
   1400088fb:	mov    rcx,QWORD PTR [rax]
   1400088fe:	mov    rax,QWORD PTR [rcx]
   140008901:	call   QWORD PTR [rax+0x28]
   140008904:	xor    edx,edx
   140008906:	test   ebx,ebx
   140008908:	jne    0x14000891f
   14000890a:	test   rdx,rdx
   14000890d:	je     0x14000891f
   14000890f:	mov    rax,QWORD PTR [rip+0x29a7a]        # 0x140032390
   140008916:	mov    rcx,QWORD PTR [rax]
   140008919:	mov    rax,QWORD PTR [rcx]
   14000891c:	call   QWORD PTR [rax+0x28]
   14000891f:	xor    eax,eax
   140008921:	jmp    0x140008961
   140008923:	mov    edi,DWORD PTR [rbp+0xb]
   140008926:	and    edi,0xc0000000
   14000892c:	jne    0x140008945
   14000892e:	test   rdx,rdx
   140008931:	je     0x140008945
   140008933:	mov    rax,QWORD PTR [rip+0x29a56]        # 0x140032390
   14000893a:	mov    rcx,QWORD PTR [rax]
   14000893d:	mov    rax,QWORD PTR [rcx]
   140008940:	call   QWORD PTR [rax+0x28]
   140008943:	xor    edx,edx
   140008945:	test   edi,edi
   140008947:	jne    0x14000895e
   140008949:	test   rdx,rdx
   14000894c:	je     0x14000895e
   14000894e:	mov    rax,QWORD PTR [rip+0x29a3b]        # 0x140032390
   140008955:	mov    rcx,QWORD PTR [rax]
   140008958:	mov    rax,QWORD PTR [rcx]
   14000895b:	call   QWORD PTR [rax+0x28]
   14000895e:	mov    rax,rbx
   140008961:	lea    r11,[rsp+0xb0]
   140008969:	mov    rbx,QWORD PTR [r11+0x10]
   14000896d:	mov    rsi,QWORD PTR [r11+0x20]
   140008971:	mov    rdi,QWORD PTR [r11+0x28]
   140008975:	mov    rsp,r11
   140008978:	pop    rbp
   140008979:	ret    
   14000897a:	int3   
   14000897b:	int3   
   14000897c:	int3   
   14000897d:	int3   
   14000897e:	int3   
   14000897f:	int3   
   140008980:	mov    QWORD PTR [rsp+0x18],rbx
   140008985:	mov    QWORD PTR [rsp+0x20],rsi
   14000898a:	push   rbp
   14000898b:	push   rdi
   14000898c:	push   r14
   14000898e:	lea    rbp,[rsp-0x1a0]
   140008996:	sub    rsp,0x2a0
   14000899d:	mov    ebx,r9d
   1400089a0:	mov    rdi,r8
   1400089a3:	mov    r14,rdx
   1400089a6:	mov    rsi,rcx
   1400089a9:	test   rdx,rdx
   1400089ac:	jne    0x1400089b5
   1400089ae:	xor    eax,eax
   1400089b0:	jmp    0x140008c25
   1400089b5:	sub    rcx,0xffffffffffffff80
   1400089b9:	mov    QWORD PTR [rsp+0x2c0],r15
   1400089c1:	lea    rdx,[rbp+0x1c8]
   1400089c8:	call   0x14001ce30
   1400089cd:	movzx  ecx,WORD PTR [rax]
   1400089d0:	mov    eax,0xffff
   1400089d5:	cmp    cx,ax
   1400089d8:	je     0x140008b0e
   1400089de:	mov    rax,QWORD PTR [rsi+0x70]
   1400089e2:	movzx  ecx,cx
   1400089e5:	movzx  ecx,WORD PTR [rax+rcx*2]
   1400089e9:	mov    rax,QWORD PTR [rsi+0x28]
   1400089ed:	lea    rdx,[rcx+rcx*4]
   1400089f1:	mov    rcx,QWORD PTR [rax+rdx*8+0x10]
   1400089f6:	lea    r15,[rax+rdx*8]
   1400089fa:	mov    rax,QWORD PTR [rcx]
   1400089fd:	call   QWORD PTR [rax+0x48]
   140008a00:	test   al,al
   140008a02:	je     0x140008b0e
   140008a08:	mov    r8d,0x200
   140008a0e:	lea    rdx,[rbp-0x60]
   140008a12:	mov    rcx,r14
   140008a15:	call   QWORD PTR [rip+0x29b05]        # 0x140032520
   140008a1b:	mov    rcx,QWORD PTR [r15]
   140008a1e:	lea    rdx,[rbp-0x60]
   140008a22:	call   QWORD PTR [rip+0x29b38]        # 0x140032560
   140008a28:	test   eax,eax
   140008a2a:	je     0x140008b0e
   140008a30:	test   ebx,ebx
   140008a32:	jne    0x140008ae7
   140008a38:	mov    rax,QWORD PTR [rip+0x29949]        # 0x140032388
   140008a3f:	lea    edx,[rbx+0x4]
   140008a42:	mov    ecx,DWORD PTR [rax]
   140008a44:	call   QWORD PTR [rip+0x29a5e]        # 0x1400324a8
   140008a4a:	test   al,al
   140008a4c:	je     0x140008aa2
   140008a4e:	lea    rax,[rip+0x2bb3b]        # 0x140034590
   140008a55:	mov    DWORD PTR [rsp+0x48],0x21b
   140008a5d:	mov    QWORD PTR [rsp+0x40],rax
   140008a62:	lea    r9,[rip+0x2bc07]        # 0x140034670
   140008a69:	lea    rax,[rip+0x2bb00]        # 0x140034570
   140008a70:	mov    QWORD PTR [rsp+0x50],rax
   140008a75:	lea    r8,[rsp+0x40]
   140008a7a:	lea    rax,[rbp-0x60]
   140008a7e:	mov    QWORD PTR [rsp+0x30],rax
   140008a83:	lea    edx,[rbx+0x4]
   140008a86:	mov    rax,QWORD PTR [r15]
   140008a89:	mov    QWORD PTR [rsp+0x28],rax
   140008a8e:	mov    rax,QWORD PTR [rip+0x298f3]        # 0x140032388
   140008a95:	mov    QWORD PTR [rsp+0x20],rdi
   140008a9a:	mov    ecx,DWORD PTR [rax]
   140008a9c:	call   QWORD PTR [rip+0x299f6]        # 0x140032498
   140008aa2:	call   QWORD PTR [rip+0x29ae0]        # 0x140032588
   140008aa8:	test   al,al
   140008aaa:	je     0x140008adb
   140008aac:	call   QWORD PTR [rip+0x299ce]        # 0x140032480
   140008ab2:	lea    rcx,[rip+0x29cf3]        # 0x1400327ac
   140008ab9:	xorps  xmm0,xmm0
   140008abc:	lea    rdx,[rsp+0x40]
   140008ac1:	mov    DWORD PTR [rsp+0x48],eax
   140008ac5:	mov    QWORD PTR [rsp+0x40],rcx
   140008aca:	mov    r8b,0x1
   140008acd:	xor    ecx,ecx
   140008acf:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140008ad5:	call   QWORD PTR [rip+0x2999d]        # 0x140032478
   140008adb:	mov    ecx,0x1
   140008ae0:	call   QWORD PTR [rip+0x29762]        # 0x140032248
   140008ae6:	int3   
   140008ae7:	cmp    ebx,0x1
   140008aea:	jne    0x140008bde
   140008af0:	mov    r8,QWORD PTR [r15]
   140008af3:	lea    r9,[rbp-0x60]
   140008af7:	mov    rdx,rdi
   140008afa:	lea    rcx,[rip+0x2bb6f]        # 0x140034670
   140008b01:	call   QWORD PTR [rip+0x298a9]        # 0x1400323b0
   140008b07:	xor    eax,eax
   140008b09:	jmp    0x140008c1d
   140008b0e:	xor    eax,eax
   140008b10:	mov    QWORD PTR [rsp+0x70],r14
   140008b15:	mov    QWORD PTR [rsp+0x60],rax
   140008b1a:	mov    QWORD PTR [rsp+0x68],rax
   140008b1f:	mov    QWORD PTR [rbp-0x80],rax
   140008b23:	mov    QWORD PTR [rbp-0x78],rax
   140008b27:	mov    QWORD PTR [rbp-0x70],rax
   140008b2b:	mov    QWORD PTR [rsp+0x78],rdi
   140008b30:	mov    QWORD PTR [rsp+0x50],0x40
   140008b39:	call   QWORD PTR [rip+0x29981]        # 0x1400324c0
   140008b3f:	mov    rax,QWORD PTR [rip+0x2984a]        # 0x140032390
   140008b46:	mov    edx,0xe00
   140008b4b:	mov    rcx,QWORD PTR [rax]
   140008b4e:	mov    rax,QWORD PTR [rcx]
   140008b51:	call   QWORD PTR [rax+0x8]
   140008b54:	mov    QWORD PTR [rsp+0x48],rax
   140008b59:	mov    DWORD PTR [rsp+0x40],0x1
   140008b61:	test   rax,rax
   140008b64:	je     0x140008b89
   140008b66:	movups xmm0,XMMWORD PTR [rsp+0x60]
   140008b6b:	movups xmm1,XMMWORD PTR [rsp+0x70]
   140008b70:	movups XMMWORD PTR [rax],xmm0
   140008b73:	movups xmm0,XMMWORD PTR [rbp-0x80]
   140008b77:	movups XMMWORD PTR [rax+0x10],xmm1
   140008b7b:	movsd  xmm1,QWORD PTR [rbp-0x70]
   140008b80:	movups XMMWORD PTR [rax+0x20],xmm0
   140008b84:	movsd  QWORD PTR [rax+0x30],xmm1
   140008b89:	mov    r8d,ebx
   140008b8c:	lea    rdx,[rsp+0x40]
   140008b91:	mov    rcx,rsi
   140008b94:	call   0x14000a170
   140008b99:	mov    ebx,DWORD PTR [rsp+0x54]
   140008b9d:	mov    rdx,QWORD PTR [rsp+0x48]
   140008ba2:	test   al,al
   140008ba4:	jne    0x140008be2
   140008ba6:	and    ebx,0xc0000000
   140008bac:	jne    0x140008bc5
   140008bae:	test   rdx,rdx
   140008bb1:	je     0x140008bc5
   140008bb3:	mov    rax,QWORD PTR [rip+0x297d6]        # 0x140032390
   140008bba:	mov    rcx,QWORD PTR [rax]
   140008bbd:	mov    rax,QWORD PTR [rcx]
   140008bc0:	call   QWORD PTR [rax+0x28]
   140008bc3:	xor    edx,edx
   140008bc5:	test   ebx,ebx
   140008bc7:	jne    0x140008bde
   140008bc9:	test   rdx,rdx
   140008bcc:	je     0x140008bde
   140008bce:	mov    rax,QWORD PTR [rip+0x297bb]        # 0x140032390
   140008bd5:	mov    rcx,QWORD PTR [rax]
   140008bd8:	mov    rax,QWORD PTR [rcx]
   140008bdb:	call   QWORD PTR [rax+0x28]
   140008bde:	xor    eax,eax
   140008be0:	jmp    0x140008c1d
   140008be2:	mov    rdi,QWORD PTR [rdx+0x20]
   140008be6:	and    ebx,0xc0000000
   140008bec:	jne    0x140008c00
   140008bee:	mov    rax,QWORD PTR [rip+0x2979b]        # 0x140032390
   140008bf5:	mov    rcx,QWORD PTR [rax]
   140008bf8:	mov    rax,QWORD PTR [rcx]
   140008bfb:	call   QWORD PTR [rax+0x28]
   140008bfe:	xor    edx,edx
   140008c00:	test   ebx,ebx
   140008c02:	jne    0x140008c1a
   140008c04:	test   rdx,rdx
   140008c07:	je     0x140008c1a
   140008c09:	mov    rcx,QWORD PTR [rip+0x29780]        # 0x140032390
   140008c10:	mov    rcx,QWORD PTR [rcx]
   140008c13:	mov    r8,QWORD PTR [rcx]
   140008c16:	call   QWORD PTR [r8+0x28]
   140008c1a:	mov    rax,rdi
   140008c1d:	mov    r15,QWORD PTR [rsp+0x2c0]
   140008c25:	lea    r11,[rsp+0x2a0]
   140008c2d:	mov    rbx,QWORD PTR [r11+0x30]
   140008c31:	mov    rsi,QWORD PTR [r11+0x38]
   140008c35:	mov    rsp,r11
   140008c38:	pop    r14
   140008c3a:	pop    rdi
   140008c3b:	pop    rbp
   140008c3c:	ret    
   140008c3d:	int3   
   140008c3e:	int3   
   140008c3f:	int3   
   140008c40:	mov    DWORD PTR [rsp+0x10],edx
   140008c44:	push   rbp
   140008c45:	push   rbx
   140008c46:	push   r13
   140008c48:	push   r14
   140008c4a:	lea    rbp,[rsp-0x1e8]
   140008c52:	sub    rsp,0x2e8
   140008c59:	cmp    BYTE PTR [rcx+0x138],0x0
   140008c60:	mov    rbx,r8
   140008c63:	mov    r14d,edx
   140008c66:	mov    r13,rcx
   140008c69:	jne    0x140008d0c
   140008c6f:	mov    rax,QWORD PTR [rip+0x29712]        # 0x140032388
   140008c76:	mov    edx,0x4
   140008c7b:	mov    ecx,DWORD PTR [rax]
   140008c7d:	call   QWORD PTR [rip+0x29825]        # 0x1400324a8
   140008c83:	test   al,al
   140008c85:	je     0x140008cc7
   140008c87:	lea    rax,[rip+0x2b902]        # 0x140034590
   140008c8e:	mov    DWORD PTR [rsp+0x48],0x238
   140008c96:	mov    QWORD PTR [rsp+0x40],rax
   140008c9b:	lea    r9,[rip+0x2ba5e]        # 0x140034700
   140008ca2:	lea    rax,[rip+0x2bab7]        # 0x140034760
   140008ca9:	mov    edx,0x4
   140008cae:	mov    QWORD PTR [rsp+0x50],rax
   140008cb3:	lea    r8,[rsp+0x40]
   140008cb8:	mov    rax,QWORD PTR [rip+0x296c9]        # 0x140032388
   140008cbf:	mov    ecx,DWORD PTR [rax]
   140008cc1:	call   QWORD PTR [rip+0x297d1]        # 0x140032498
   140008cc7:	call   QWORD PTR [rip+0x298bb]        # 0x140032588
   140008ccd:	test   al,al
   140008ccf:	je     0x140008d00
   140008cd1:	call   QWORD PTR [rip+0x297a9]        # 0x140032480
   140008cd7:	lea    rcx,[rip+0x29ace]        # 0x1400327ac
   140008cde:	xorps  xmm0,xmm0
   140008ce1:	lea    rdx,[rsp+0x40]
   140008ce6:	mov    DWORD PTR [rsp+0x48],eax
   140008cea:	mov    QWORD PTR [rsp+0x40],rcx
   140008cef:	mov    r8b,0x1
   140008cf2:	xor    ecx,ecx
   140008cf4:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140008cfa:	call   QWORD PTR [rip+0x29778]        # 0x140032478
   140008d00:	mov    ecx,0x1
   140008d05:	call   QWORD PTR [rip+0x2953d]        # 0x140032248
   140008d0b:	int3   
   140008d0c:	mov    QWORD PTR [rsp+0x320],rsi
   140008d14:	mov    QWORD PTR [rsp+0x2e0],rdi
   140008d1c:	xor    edi,edi
   140008d1e:	mov    QWORD PTR [rsp+0x2d8],r12
   140008d26:	mov    QWORD PTR [rsp+0x2d0],r15
   140008d2e:	mov    r15d,0x40
   140008d34:	movaps XMMWORD PTR [rsp+0x2c0],xmm6
   140008d3c:	movaps XMMWORD PTR [rsp+0x2b0],xmm7
   140008d44:	movaps XMMWORD PTR [rsp+0x2a0],xmm8
   140008d4d:	mov    QWORD PTR [rsp+0x50],r15
   140008d52:	mov    DWORD PTR [rsp+0x40],edi
   140008d56:	call   QWORD PTR [rip+0x29764]        # 0x1400324c0
   140008d5c:	mov    rax,QWORD PTR [rip+0x2962d]        # 0x140032390
   140008d63:	mov    edx,0xe00
   140008d68:	mov    rcx,QWORD PTR [rax]
   140008d6b:	mov    rax,QWORD PTR [rcx]
   140008d6e:	call   QWORD PTR [rax+0x8]
   140008d71:	mov    r12,rax
   140008d74:	mov    QWORD PTR [rsp+0x48],rax
   140008d79:	xor    eax,eax
   140008d7b:	xor    esi,esi
   140008d7d:	mov    QWORD PTR [rsp+0x60],rax
   140008d82:	mov    QWORD PTR [rsp+0x68],rax
   140008d87:	mov    QWORD PTR [rsp+0x70],rax
   140008d8c:	mov    QWORD PTR [rsp+0x78],rax
   140008d91:	mov    QWORD PTR [rbp-0x80],rax
   140008d95:	mov    QWORD PTR [rbp-0x78],rax
   140008d99:	mov    QWORD PTR [rbp-0x70],rax
   140008d9d:	test   r14d,r14d
   140008da0:	jle    0x140008e99
   140008da6:	movsd  xmm6,QWORD PTR [rbp-0x70]
   140008dab:	movups xmm7,XMMWORD PTR [rbp-0x80]
   140008daf:	movups xmm8,XMMWORD PTR [rsp+0x60]
   140008db5:	mov    r8,QWORD PTR [rbx+0x8]
   140008db9:	lea    rax,[r13+0x80]
   140008dc0:	mov    rcx,rax
   140008dc3:	lea    rdx,[rbp+0x210]
   140008dca:	mov    r14d,0xffff
   140008dd0:	call   0x14001ce30
   140008dd5:	movzx  ecx,WORD PTR [rax]
   140008dd8:	cmp    cx,r14w
   140008ddc:	je     0x140008e2c
   140008dde:	mov    rax,QWORD PTR [r13+0x70]
   140008de2:	movzx  ecx,cx
   140008de5:	movzx  ecx,WORD PTR [rax+rcx*2]
   140008de9:	mov    rax,QWORD PTR [r13+0x28]
   140008ded:	lea    rdx,[rcx+rcx*4]
   140008df1:	mov    rcx,QWORD PTR [rax+rdx*8+0x10]
   140008df6:	lea    r14,[rax+rdx*8]
   140008dfa:	mov    rax,QWORD PTR [rcx]
   140008dfd:	call   QWORD PTR [rax+0x48]
   140008e00:	test   al,al
   140008e02:	je     0x140008e2c
   140008e04:	mov    rcx,QWORD PTR [rbx]
   140008e07:	lea    rdx,[rbp-0x60]
   140008e0b:	mov    r8d,0x200
   140008e11:	call   QWORD PTR [rip+0x29709]        # 0x140032520
   140008e17:	mov    rcx,QWORD PTR [r14]
   140008e1a:	lea    rdx,[rbp-0x60]
   140008e1e:	call   QWORD PTR [rip+0x2973c]        # 0x140032560
   140008e24:	test   eax,eax
   140008e26:	jne    0x140008f39
   140008e2c:	mov    rax,QWORD PTR [rbx]
   140008e2f:	mov    QWORD PTR [rsp+0x70],rax
   140008e34:	mov    rax,QWORD PTR [rbx+0x8]
   140008e38:	mov    QWORD PTR [rsp+0x78],rax
   140008e3d:	movsxd r14,edi
   140008e40:	cmp    edi,r15d
   140008e43:	jne    0x140008e62
   140008e45:	mov    edx,0x1
   140008e4a:	lea    rcx,[rsp+0x48]
   140008e4f:	call   0x140009700
   140008e54:	mov    r15d,DWORD PTR [rsp+0x50]
   140008e59:	mov    r12,QWORD PTR [rsp+0x48]
   140008e5e:	mov    edi,DWORD PTR [rsp+0x40]
   140008e62:	inc    edi
   140008e64:	imul   rcx,r14,0x38
   140008e68:	mov    DWORD PTR [rsp+0x40],edi
   140008e6c:	add    rcx,r12
   140008e6f:	je     0x140008e87
   140008e71:	movups xmm1,XMMWORD PTR [rsp+0x70]
   140008e76:	movups XMMWORD PTR [rcx],xmm8
   140008e7a:	movups XMMWORD PTR [rcx+0x10],xmm1
   140008e7e:	movups XMMWORD PTR [rcx+0x20],xmm7
   140008e82:	movsd  QWORD PTR [rcx+0x30],xmm6
   140008e87:	inc    esi
   140008e89:	add    rbx,0x10
   140008e8d:	cmp    esi,DWORD PTR [rbp+0x218]
   140008e93:	jl     0x140008db5
   140008e99:	xor    r8d,r8d
   140008e9c:	lea    rdx,[rsp+0x40]
   140008ea1:	mov    rcx,r13
   140008ea4:	call   0x14000a170
   140008ea9:	mov    ebx,DWORD PTR [rsp+0x54]
   140008ead:	movzx  edi,al
   140008eb0:	mov    rdx,QWORD PTR [rsp+0x48]
   140008eb5:	and    ebx,0xc0000000
   140008ebb:	jne    0x140008ed5
   140008ebd:	test   rdx,rdx
   140008ec0:	je     0x140008ed5
   140008ec2:	mov    rcx,QWORD PTR [rip+0x294c7]        # 0x140032390
   140008ec9:	mov    rcx,QWORD PTR [rcx]
   140008ecc:	mov    r8,QWORD PTR [rcx]
   140008ecf:	call   QWORD PTR [r8+0x28]
   140008ed3:	xor    edx,edx
   140008ed5:	test   ebx,ebx
   140008ed7:	jne    0x140008eee
   140008ed9:	test   rdx,rdx
   140008edc:	je     0x140008eee
   140008ede:	mov    rax,QWORD PTR [rip+0x294ab]        # 0x140032390
   140008ee5:	mov    rcx,QWORD PTR [rax]
   140008ee8:	mov    rax,QWORD PTR [rcx]
   140008eeb:	call   QWORD PTR [rax+0x28]
   140008eee:	movaps xmm7,XMMWORD PTR [rsp+0x2b0]
   140008ef6:	movzx  eax,dil
   140008efa:	mov    rdi,QWORD PTR [rsp+0x2e0]
   140008f02:	movaps xmm6,XMMWORD PTR [rsp+0x2c0]
   140008f0a:	mov    r15,QWORD PTR [rsp+0x2d0]
   140008f12:	mov    r12,QWORD PTR [rsp+0x2d8]
   140008f1a:	mov    rsi,QWORD PTR [rsp+0x320]
   140008f22:	movaps xmm8,XMMWORD PTR [rsp+0x2a0]
   140008f2b:	add    rsp,0x2e8
   140008f32:	pop    r14
   140008f34:	pop    r13
   140008f36:	pop    rbx
   140008f37:	pop    rbp
   140008f38:	ret    
   140008f39:	mov    rax,QWORD PTR [rip+0x29448]        # 0x140032388
   140008f40:	mov    edx,0x4
   140008f45:	mov    ecx,DWORD PTR [rax]
   140008f47:	call   QWORD PTR [rip+0x2955b]        # 0x1400324a8
   140008f4d:	test   al,al
   140008f4f:	je     0x140008fab
   140008f51:	lea    rax,[rip+0x2b638]        # 0x140034590
   140008f58:	mov    DWORD PTR [rsp+0x48],0x24f
   140008f60:	mov    QWORD PTR [rsp+0x40],rax
   140008f65:	lea    r9,[rip+0x2b704]        # 0x140034670
   140008f6c:	lea    rax,[rip+0x2b7ed]        # 0x140034760
   140008f73:	mov    edx,0x4
   140008f78:	mov    QWORD PTR [rsp+0x50],rax
   140008f7d:	lea    r8,[rsp+0x40]
   140008f82:	lea    rax,[rbp-0x60]
   140008f86:	mov    QWORD PTR [rsp+0x30],rax
   140008f8b:	mov    rax,QWORD PTR [r14]
   140008f8e:	mov    QWORD PTR [rsp+0x28],rax
   140008f93:	mov    rax,QWORD PTR [rbx+0x8]
   140008f97:	mov    QWORD PTR [rsp+0x20],rax
   140008f9c:	mov    rax,QWORD PTR [rip+0x293e5]        # 0x140032388
   140008fa3:	mov    ecx,DWORD PTR [rax]
   140008fa5:	call   QWORD PTR [rip+0x294ed]        # 0x140032498
   140008fab:	call   QWORD PTR [rip+0x295d7]        # 0x140032588
   140008fb1:	test   al,al
   140008fb3:	je     0x140008fe4
   140008fb5:	call   QWORD PTR [rip+0x294c5]        # 0x140032480
   140008fbb:	lea    rcx,[rip+0x297ea]        # 0x1400327ac
   140008fc2:	xorps  xmm0,xmm0
   140008fc5:	lea    rdx,[rsp+0x40]
   140008fca:	mov    DWORD PTR [rsp+0x48],eax
   140008fce:	mov    QWORD PTR [rsp+0x40],rcx
   140008fd3:	mov    r8b,0x1
   140008fd6:	xor    ecx,ecx
   140008fd8:	movdqu XMMWORD PTR [rsp+0x50],xmm0
   140008fde:	call   QWORD PTR [rip+0x29494]        # 0x140032478
   140008fe4:	mov    ecx,0x1
   140008fe9:	call   QWORD PTR [rip+0x29259]        # 0x140032248
   140008fef:	int3   
   140008ff0:	rex push rbx
   140008ff2:	sub    rsp,0x20
   140008ff6:	mov    rbx,rdx
   140008ff9:	mov    rdx,rcx
   140008ffc:	mov    rcx,QWORD PTR [rip+0x3e10d]        # 0x140047110
   140009003:	call   0x140009500
   140009008:	test   rbx,rbx
   14000900b:	je     0x140009017
   14000900d:	xor    ecx,ecx
   14000900f:	test   rax,rax
   140009012:	sete   cl
   140009015:	mov    DWORD PTR [rbx],ecx
   140009017:	add    rsp,0x20
   14000901b:	pop    rbx
   14000901c:	ret    
   14000901d:	int3   
   14000901e:	int3   
   14000901f:	int3   
   140009020:	mov    QWORD PTR [rsp+0x8],rbx
   140009025:	push   rbp
   140009026:	push   rsi
   140009027:	push   rdi
   140009028:	push   r12
   14000902a:	push   r13
   14000902c:	push   r14
   14000902e:	push   r15
   140009030:	sub    rsp,0x40
   140009034:	mov    rsi,rdx
   140009037:	mov    r14d,0xffff
   14000903d:	nop    DWORD PTR [rax]
   140009040:	movzx  eax,WORD PTR [rsi+0x32]
   140009044:	xor    edi,edi
   140009046:	mov    BYTE PTR [rsp+0x90],0x1
   14000904e:	mov    DWORD PTR [rsp+0x34],eax
   140009052:	mov    DWORD PTR [rsp+0x2c],edi
   140009056:	test   eax,eax
   140009058:	jle    0x1400091e4
   14000905e:	xchg   ax,ax
   140009060:	movzx  eax,di
   140009063:	xor    r12d,r12d
   140009066:	imul   rbp,rax,0x78
   14000906a:	mov    rax,QWORD PTR [rsi+0x8]
   14000906e:	mov    DWORD PTR [rsp+0x30],r12d
   140009073:	movzx  r15d,WORD PTR [rax+rbp*1+0x42]
   140009079:	test   r15d,r15d
   14000907c:	jle    0x1400091c4
   140009082:	lea    rbx,[rsi+0x18]
   140009086:	data16 nop WORD PTR [rax+rax*1+0x0]
   140009090:	mov    rcx,QWORD PTR [rsi+0x8]
   140009094:	lea    rdx,[rsp+0x98]
   14000909c:	add    rcx,0x28
   1400090a0:	mov    WORD PTR [rsp+0x98],r12w
   1400090a9:	add    rcx,rbp
   1400090ac:	call   0x14001db60
   1400090b1:	mov    r8,rax
   1400090b4:	lea    rdx,[rsp+0x24]
   1400090b9:	mov    rcx,rbx
   1400090bc:	call   0x14001ce30
   1400090c1:	movzx  ecx,WORD PTR [rax]
   1400090c4:	cmp    ecx,r14d
   1400090c7:	je     0x1400091af
   1400090cd:	mov    rax,QWORD PTR [rsi+0x8]
   1400090d1:	xor    ebx,ebx
   1400090d3:	imul   r13,rcx,0x78
   1400090d7:	movzx  r14d,WORD PTR [rax+r13*1+0x42]
   1400090dd:	test   r14d,r14d
   1400090e0:	jle    0x1400091a5
   1400090e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400090f0:	mov    rcx,QWORD PTR [rsi+0x8]
   1400090f4:	lea    rdx,[rsp+0x20]
   1400090f9:	add    rcx,0x28
   1400090fd:	mov    WORD PTR [rsp+0x20],bx
   140009102:	add    rcx,r13
   140009105:	call   0x14001db60
   14000910a:	mov    rcx,QWORD PTR [rsi+0x8]
   14000910e:	lea    rdx,[rsp+0x26]
   140009113:	add    rcx,0x28
   140009117:	mov    r8,rax
   14000911a:	add    rcx,rbp
   14000911d:	mov    rdi,rax
   140009120:	call   0x14001ce30
   140009125:	mov    ecx,0xffff
   14000912a:	cmp    WORD PTR [rax],cx
   14000912d:	jne    0x140009195
   14000912f:	mov    ecx,DWORD PTR [rsp+0x2c]
   140009133:	lea    rdx,[rsp+0x22]
   140009138:	movzx  eax,cx
   14000913b:	lea    rcx,[rsi+0x18]
   14000913f:	mov    WORD PTR [rsp+0x22],ax
   140009144:	call   0x14001db60
   140009149:	mov    rdx,rax
   14000914c:	mov    rcx,rdi
   14000914f:	call   QWORD PTR [rip+0x2940b]        # 0x140032560
   140009155:	test   eax,eax
   140009157:	jne    0x14000916b
   140009159:	mov    rdx,rdi
   14000915c:	lea    rcx,[rip+0x2b61d]        # 0x140034780
   140009163:	call   QWORD PTR [rip+0x29247]        # 0x1400323b0
   140009169:	jmp    0x140009195
   14000916b:	mov    rcx,QWORD PTR [rsi+0x8]
   14000916f:	lea    rdx,[rsp+0x28]
   140009174:	add    rcx,0x28
   140009178:	mov    BYTE PTR [rsp+0x90],0x0
   140009180:	add    rcx,rbp
   140009183:	mov    r8,rdi
   140009186:	call   0x14001c980
   14000918b:	mov    rax,QWORD PTR [rsi+0x8]
   14000918f:	movzx  r15d,WORD PTR [rax+rbp*1+0x42]
   140009195:	inc    ebx
   140009197:	cmp    ebx,r14d
   14000919a:	jl     0x1400090f0
   1400091a0:	mov    r12d,DWORD PTR [rsp+0x30]
   1400091a5:	mov    r14d,0xffff
   1400091ab:	lea    rbx,[rsi+0x18]
   1400091af:	inc    r12d
   1400091b2:	mov    DWORD PTR [rsp+0x30],r12d
   1400091b7:	cmp    r12d,r15d
   1400091ba:	jl     0x140009090
   1400091c0:	mov    edi,DWORD PTR [rsp+0x2c]
   1400091c4:	inc    edi
   1400091c6:	mov    DWORD PTR [rsp+0x2c],edi
   1400091ca:	cmp    edi,DWORD PTR [rsp+0x34]
   1400091ce:	jl     0x140009060
   1400091d4:	movzx  eax,BYTE PTR [rsp+0x90]
   1400091dc:	test   al,al
   1400091de:	je     0x140009040
   1400091e4:	mov    rbx,QWORD PTR [rsp+0x80]
   1400091ec:	add    rsp,0x40
   1400091f0:	pop    r15
   1400091f2:	pop    r14
   1400091f4:	pop    r13
   1400091f6:	pop    r12
   1400091f8:	pop    rdi
   1400091f9:	pop    rsi
   1400091fa:	pop    rbp
   1400091fb:	ret    
   1400091fc:	int3   
   1400091fd:	int3   
   1400091fe:	int3   
   1400091ff:	int3   
   140009200:	rex push rbx
   140009202:	sub    rsp,0x20
   140009206:	mov    rbx,rcx
   140009209:	mov    ecx,0x10
   14000920e:	call   0x140007bf0
   140009213:	test   rax,rax
   140009216:	je     0x14000922c
   140009218:	lea    rcx,[rip+0x297e1]        # 0x140032a00
   14000921f:	mov    QWORD PTR [rax+0x8],rbx
   140009223:	mov    QWORD PTR [rax],rcx
   140009226:	add    rsp,0x20
   14000922a:	pop    rbx
   14000922b:	ret    
   14000922c:	add    rsp,0x20
   140009230:	pop    rbx
   140009231:	ret    
   140009232:	int3   
   140009233:	int3   
   140009234:	int3   
   140009235:	int3   
   140009236:	int3   
   140009237:	int3   
   140009238:	int3   
   140009239:	int3   
   14000923a:	int3   
   14000923b:	int3   
   14000923c:	int3   
   14000923d:	int3   
   14000923e:	int3   
   14000923f:	int3   
   140009240:	rex push rbp
   140009242:	push   rbx
   140009243:	push   rsi
   140009244:	push   rdi
   140009245:	push   r12
   140009247:	push   r15
   140009249:	mov    rbp,rsp
   14000924c:	sub    rsp,0x68
   140009250:	movzx  eax,WORD PTR [rdx]
   140009253:	mov    rdi,rcx
   140009256:	lea    rdx,[rbp+0x38]
   14000925a:	mov    WORD PTR [rbp+0x38],ax
   14000925e:	add    rcx,0x18
   140009262:	mov    rbx,r8
   140009265:	call   0x14001db60
   14000926a:	movzx  edx,WORD PTR [rbx]
   14000926d:	lea    rcx,[rdi+0x18]
   140009271:	mov    WORD PTR [rbp+0x40],dx
   140009275:	mov    r15,rax
   140009278:	lea    rdx,[rbp+0x40]
   14000927c:	call   0x14001db60
   140009281:	mov    r8,rax
   140009284:	lea    rdx,[rbp+0x48]
   140009288:	lea    rcx,[rdi+0x18]
   14000928c:	mov    r12,rax
   14000928f:	call   0x14001c980
   140009294:	movzx  ebx,WORD PTR [rbp+0x48]
   140009298:	mov    edx,DWORD PTR [rdi]
   14000929a:	cmp    edx,ebx
   14000929c:	jg     0x1400092b2
   14000929e:	lea    r8d,[rbx+0x1]
   1400092a2:	cmp    edx,r8d
   1400092a5:	jge    0x1400092b2
   1400092a7:	sub    r8d,edx
   1400092aa:	mov    rcx,rdi
   1400092ad:	call   0x140009c90
   1400092b2:	imul   rcx,rbx,0x78
   1400092b6:	mov    r8,r15
   1400092b9:	mov    QWORD PTR [rsp+0x60],r14
   1400092be:	add    rcx,0x28
   1400092c2:	lea    rdx,[rbp+0x50]
   1400092c6:	add    rcx,QWORD PTR [rdi+0x8]
   1400092ca:	call   0x14001ce30
   1400092cf:	mov    ecx,0xffff
   1400092d4:	lea    rdx,[rbp+0x48]
   1400092d8:	cmp    WORD PTR [rax],cx
   1400092db:	lea    rcx,[rdi+0x18]
   1400092df:	je     0x140009477
   1400092e5:	mov    r8,r12
   1400092e8:	call   0x14001c980
   1400092ed:	movzx  ebx,WORD PTR [rbp+0x48]
   1400092f1:	mov    edx,DWORD PTR [rdi]
   1400092f3:	cmp    edx,ebx
   1400092f5:	jg     0x14000930b
   1400092f7:	lea    r8d,[rbx+0x1]
   1400092fb:	cmp    edx,r8d
   1400092fe:	jge    0x14000930b
   140009300:	sub    r8d,edx
   140009303:	mov    rcx,rdi
   140009306:	call   0x140009c90
   14000930b:	imul   r14,rbx,0x78
   14000930f:	mov    r8,r15
   140009312:	lea    rdx,[rbp+0x50]
   140009316:	add    r14,QWORD PTR [rdi+0x8]
   14000931a:	lea    rcx,[rdi+0x18]
   14000931e:	call   0x14001c980
   140009323:	movzx  ebx,WORD PTR [rbp+0x50]
   140009327:	mov    edx,DWORD PTR [rdi]
   140009329:	cmp    edx,ebx
   14000932b:	jg     0x140009341
   14000932d:	lea    r8d,[rbx+0x1]
   140009331:	cmp    edx,r8d
   140009334:	jge    0x140009341
   140009336:	sub    r8d,edx
   140009339:	mov    rcx,rdi
   14000933c:	call   0x140009c90
   140009341:	mov    rax,QWORD PTR [rdi+0x8]
   140009345:	imul   rcx,rbx,0x78
   140009349:	mov    ecx,DWORD PTR [rcx+rax*1]
   14000934c:	cmp    DWORD PTR [r14],ecx
   14000934f:	jge    0x140009473
   140009355:	mov    rax,QWORD PTR [rip+0x2902c]        # 0x140032388
   14000935c:	mov    edx,0x4
   140009361:	mov    ecx,DWORD PTR [rax]
   140009363:	call   QWORD PTR [rip+0x2913f]        # 0x1400324a8
   140009369:	test   al,al
   14000936b:	je     0x140009432
   140009371:	mov    r8,r15
   140009374:	lea    rdx,[rbp+0x48]
   140009378:	lea    rcx,[rdi+0x18]
   14000937c:	call   0x14001c980
   140009381:	movzx  ebx,WORD PTR [rbp+0x48]
   140009385:	mov    edx,DWORD PTR [rdi]
   140009387:	cmp    edx,ebx
   140009389:	jg     0x14000939f
   14000938b:	lea    r8d,[rbx+0x1]
   14000938f:	cmp    edx,r8d
   140009392:	jge    0x14000939f
   140009394:	sub    r8d,edx
   140009397:	mov    rcx,rdi
   14000939a:	call   0x140009c90
   14000939f:	imul   r14,rbx,0x78
   1400093a3:	mov    r8,r12
   1400093a6:	lea    rdx,[rbp+0x50]
   1400093aa:	add    r14,QWORD PTR [rdi+0x8]
   1400093ae:	lea    rcx,[rdi+0x18]
   1400093b2:	call   0x14001c980
   1400093b7:	movzx  ebx,WORD PTR [rbp+0x50]
   1400093bb:	mov    edx,DWORD PTR [rdi]
   1400093bd:	cmp    edx,ebx
   1400093bf:	jg     0x1400093d5
   1400093c1:	lea    r8d,[rbx+0x1]
   1400093c5:	cmp    edx,r8d
   1400093c8:	jge    0x1400093d5
   1400093ca:	sub    r8d,edx
   1400093cd:	mov    rcx,rdi
   1400093d0:	call   0x140009c90
   1400093d5:	mov    rcx,QWORD PTR [rdi+0x8]
   1400093d9:	lea    rax,[rip+0x2b1b0]        # 0x140034590
   1400093e0:	mov    QWORD PTR [rbp-0x28],rax
   1400093e4:	lea    r9,[rip+0x2b3d5]        # 0x1400347c0
   1400093eb:	mov    DWORD PTR [rbp-0x20],0x364
   1400093f2:	lea    rax,[rip+0x2b42f]        # 0x140034828
   1400093f9:	mov    QWORD PTR [rbp-0x18],rax
   1400093fd:	mov    edx,0x4
   140009402:	mov    eax,DWORD PTR [r14]
   140009405:	mov    DWORD PTR [rsp+0x38],eax
   140009409:	imul   r8,rbx,0x78
   14000940d:	mov    QWORD PTR [rsp+0x30],r15
   140009412:	mov    eax,DWORD PTR [r8+rcx*1]
   140009416:	lea    r8,[rbp-0x28]
   14000941a:	mov    DWORD PTR [rsp+0x28],eax
   14000941e:	mov    rax,QWORD PTR [rip+0x28f63]        # 0x140032388
   140009425:	mov    QWORD PTR [rsp+0x20],r12
   14000942a:	mov    ecx,DWORD PTR [rax]
   14000942c:	call   QWORD PTR [rip+0x29066]        # 0x140032498
   140009432:	call   QWORD PTR [rip+0x29150]        # 0x140032588
   140009438:	test   al,al
   14000943a:	je     0x140009467
   14000943c:	call   QWORD PTR [rip+0x2903e]        # 0x140032480
   140009442:	lea    rcx,[rip+0x29363]        # 0x1400327ac
   140009449:	xorps  xmm0,xmm0
   14000944c:	lea    rdx,[rbp-0x28]
   140009450:	mov    DWORD PTR [rbp-0x20],eax
   140009453:	mov    QWORD PTR [rbp-0x28],rcx
   140009457:	mov    r8b,0x1
   14000945a:	xor    ecx,ecx
   14000945c:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140009461:	call   QWORD PTR [rip+0x29011]        # 0x140032478
   140009467:	mov    ecx,0x1
   14000946c:	call   QWORD PTR [rip+0x28dd6]        # 0x140032248
   140009472:	int3   
   140009473:	mov    al,0x1
   140009475:	jmp    0x1400094e4
   140009477:	mov    r8,r15
   14000947a:	call   0x14001c980
   14000947f:	movzx  ebx,WORD PTR [rbp+0x48]
   140009483:	mov    edx,DWORD PTR [rdi]
   140009485:	cmp    edx,ebx
   140009487:	jg     0x14000949d
   140009489:	lea    r8d,[rbx+0x1]
   14000948d:	cmp    edx,r8d
   140009490:	jge    0x14000949d
   140009492:	sub    r8d,edx
   140009495:	mov    rcx,rdi
   140009498:	call   0x140009c90
   14000949d:	imul   r14,rbx,0x78
   1400094a1:	mov    r8,r12
   1400094a4:	lea    rdx,[rbp+0x38]
   1400094a8:	add    r14,QWORD PTR [rdi+0x8]
   1400094ac:	lea    rcx,[rdi+0x18]
   1400094b0:	call   0x14001c980
   1400094b5:	movzx  ebx,WORD PTR [rbp+0x38]
   1400094b9:	mov    edx,DWORD PTR [rdi]
   1400094bb:	cmp    edx,ebx
   1400094bd:	jg     0x1400094d3
   1400094bf:	lea    r8d,[rbx+0x1]
   1400094c3:	cmp    edx,r8d
   1400094c6:	jge    0x1400094d3
   1400094c8:	sub    r8d,edx
   1400094cb:	mov    rcx,rdi
   1400094ce:	call   0x140009c90
   1400094d3:	mov    rdx,QWORD PTR [rdi+0x8]
   1400094d7:	imul   rcx,rbx,0x78
   1400094db:	mov    eax,DWORD PTR [rcx+rdx*1]
   1400094de:	cmp    DWORD PTR [r14],eax
   1400094e1:	setl   al
   1400094e4:	mov    r14,QWORD PTR [rsp+0x60]
   1400094e9:	add    rsp,0x68
   1400094ed:	pop    r15
   1400094ef:	pop    r12
   1400094f1:	pop    rdi
   1400094f2:	pop    rsi
   1400094f3:	pop    rbx
   1400094f4:	pop    rbp
   1400094f5:	ret    
   1400094f6:	int3   
   1400094f7:	int3   
   1400094f8:	int3   
   1400094f9:	int3   
   1400094fa:	int3   
   1400094fb:	int3   
   1400094fc:	int3   
   1400094fd:	int3   
   1400094fe:	int3   
   1400094ff:	int3   
   140009500:	rex push rbp
   140009502:	push   r15
   140009504:	sub    rsp,0x28
   140009508:	mov    r15,rdx
   14000950b:	mov    rbp,rcx
   14000950e:	mov    r8,rdx
   140009511:	sub    rcx,0xffffffffffffff80
   140009515:	lea    rdx,[rsp+0x40]
   14000951a:	call   0x14001ce30
   14000951f:	movzx  ecx,WORD PTR [rax]
   140009522:	mov    eax,0xffff
   140009527:	cmp    cx,ax
   14000952a:	je     0x14000954c
   14000952c:	mov    rax,QWORD PTR [rbp+0x70]
   140009530:	movzx  edx,cx
   140009533:	movzx  edx,WORD PTR [rax+rdx*2]
   140009537:	mov    rax,QWORD PTR [rbp+0x28]
   14000953b:	lea    rcx,[rdx+rdx*4]
   14000953f:	mov    rax,QWORD PTR [rax+rcx*8+0x10]
   140009544:	add    rsp,0x28
   140009548:	pop    r15
   14000954a:	pop    rbp
   14000954b:	ret    
   14000954c:	mov    QWORD PTR [rsp+0x48],rbx
   140009551:	xor    ebx,ebx
   140009553:	mov    QWORD PTR [rsp+0x50],rsi
   140009558:	mov    QWORD PTR [rsp+0x58],rdi
   14000955d:	mov    edi,ebx
   14000955f:	mov    QWORD PTR [rsp+0x20],r14
   140009564:	movsxd r14,DWORD PTR [rbp+0x20]
   140009568:	test   r14,r14
   14000956b:	jle    0x140009599
   14000956d:	mov    esi,ebx
   14000956f:	nop
   140009570:	mov    rax,QWORD PTR [rbp+0x28]
   140009574:	cmp    BYTE PTR [rax+rsi*1+0x24],bl
   140009578:	jne    0x14000958d
   14000957a:	mov    rcx,QWORD PTR [rax+rsi*1+0x10]
   14000957f:	mov    rdx,r15
   140009582:	mov    rax,QWORD PTR [rcx]
   140009585:	call   QWORD PTR [rax+0x10]
   140009588:	test   rax,rax
   14000958b:	jne    0x1400095bd
   14000958d:	inc    rdi
   140009590:	add    rsi,0x28
   140009594:	cmp    rdi,r14
   140009597:	jl     0x140009570
   140009599:	movsxd rdi,DWORD PTR [rbp+0x38]
   14000959d:	test   rdi,rdi
   1400095a0:	jle    0x1400095bb
   1400095a2:	mov    rax,QWORD PTR [rbp+0x40]
   1400095a6:	xor    edx,edx
   1400095a8:	mov    rcx,r15
   1400095ab:	call   QWORD PTR [rax+rbx*8]
   1400095ae:	test   rax,rax
   1400095b1:	jne    0x1400095bd
   1400095b3:	inc    rbx
   1400095b6:	cmp    rbx,rdi
   1400095b9:	jl     0x1400095a2
   1400095bb:	xor    eax,eax
   1400095bd:	mov    rdi,QWORD PTR [rsp+0x58]
   1400095c2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400095c7:	mov    rbx,QWORD PTR [rsp+0x48]
   1400095cc:	mov    r14,QWORD PTR [rsp+0x20]
   1400095d1:	add    rsp,0x28
   1400095d5:	pop    r15
   1400095d7:	pop    rbp
   1400095d8:	ret    
   1400095d9:	int3   
   1400095da:	int3   
   1400095db:	int3   
   1400095dc:	int3   
   1400095dd:	int3   
   1400095de:	int3   
   1400095df:	int3   
   1400095e0:	lea    rax,[rip+0xfffffffffffffa09]        # 0x140008ff0
   1400095e7:	ret    
   1400095e8:	int3   
   1400095e9:	int3   
   1400095ea:	int3   
   1400095eb:	int3   
   1400095ec:	int3   
   1400095ed:	int3   
   1400095ee:	int3   
   1400095ef:	int3   
   1400095f0:	mov    eax,DWORD PTR [rcx+0x140]
   1400095f6:	ret    
   1400095f7:	int3   
   1400095f8:	int3   
   1400095f9:	int3   
   1400095fa:	int3   
   1400095fb:	int3   
   1400095fc:	int3   
   1400095fd:	int3   
   1400095fe:	int3   
   1400095ff:	int3   
   140009600:	rex push rdi
   140009602:	sub    rsp,0x20
   140009606:	mov    eax,edx
   140009608:	mov    rdi,rcx
   14000960b:	mov    edx,DWORD PTR [rcx+0xc]
   14000960e:	bt     edx,0x1e
   140009612:	jb     0x1400096f4
   140009618:	mov    ecx,DWORD PTR [rcx+0x8]
   14000961b:	and    edx,0x3fffffff
   140009621:	mov    QWORD PTR [rsp+0x30],rbx
   140009626:	mov    r9d,0x2
   14000962c:	mov    QWORD PTR [rsp+0x38],rsi
   140009631:	lea    esi,[rcx+rax*1]
   140009634:	mov    r8d,esi
   140009637:	call   0x14001aa30
   14000963c:	mov    ebx,eax
   14000963e:	cmp    eax,esi
   140009640:	jge    0x14000965e
   140009642:	test   eax,eax
   140009644:	jne    0x140009650
   140009646:	cmp    esi,0xffffffff
   140009649:	jg     0x140009650
   14000964b:	or     ebx,0xffffffff
   14000964e:	jmp    0x14000965e
   140009650:	lea    eax,[rbx+rsi*1]
   140009653:	cdq    
   140009654:	sub    eax,edx
   140009656:	sar    eax,1
   140009658:	mov    ebx,eax
   14000965a:	cmp    eax,esi
   14000965c:	jl     0x140009650
   14000965e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009665:	mov    rax,QWORD PTR [rip+0x28d24]        # 0x140032390
   14000966c:	mov    rcx,QWORD PTR [rax]
   14000966f:	mov    rax,QWORD PTR [rcx]
   140009672:	jne    0x1400096ba
   140009674:	mov    rdx,QWORD PTR [rdi]
   140009677:	test   rdx,rdx
   14000967a:	je     0x14000969b
   14000967c:	movsxd r8,ebx
   14000967f:	add    r8,r8
   140009682:	call   QWORD PTR [rax+0x18]
   140009685:	mov    rsi,QWORD PTR [rsp+0x38]
   14000968a:	mov    DWORD PTR [rdi+0x8],ebx
   14000968d:	mov    rbx,QWORD PTR [rsp+0x30]
   140009692:	mov    QWORD PTR [rdi],rax
   140009695:	add    rsp,0x20
   140009699:	pop    rdi
   14000969a:	ret    
   14000969b:	movsxd rdx,ebx
   14000969e:	add    rdx,rdx
   1400096a1:	call   QWORD PTR [rax+0x8]
   1400096a4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400096a9:	mov    DWORD PTR [rdi+0x8],ebx
   1400096ac:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096b1:	mov    QWORD PTR [rdi],rax
   1400096b4:	add    rsp,0x20
   1400096b8:	pop    rdi
   1400096b9:	ret    
   1400096ba:	mov    rsi,QWORD PTR [rdi]
   1400096bd:	movsxd rdx,ebx
   1400096c0:	add    rdx,rdx
   1400096c3:	call   QWORD PTR [rax+0x8]
   1400096c6:	mov    QWORD PTR [rdi],rax
   1400096c9:	test   rsi,rsi
   1400096cc:	je     0x1400096e0
   1400096ce:	movsxd r8,DWORD PTR [rdi+0x8]
   1400096d2:	mov    rdx,rsi
   1400096d5:	add    r8,r8
   1400096d8:	mov    rcx,rax
   1400096db:	call   0x140026f70
   1400096e0:	and    DWORD PTR [rdi+0xc],0x3fffffff
   1400096e7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400096ec:	mov    DWORD PTR [rdi+0x8],ebx
   1400096ef:	mov    rbx,QWORD PTR [rsp+0x30]
   1400096f4:	add    rsp,0x20
   1400096f8:	pop    rdi
   1400096f9:	ret    
   1400096fa:	int3   
   1400096fb:	int3   
   1400096fc:	int3   
   1400096fd:	int3   
   1400096fe:	int3   
   1400096ff:	int3   
   140009700:	rex push rdi
   140009702:	sub    rsp,0x20
   140009706:	mov    eax,edx
   140009708:	mov    rdi,rcx
   14000970b:	mov    edx,DWORD PTR [rcx+0xc]
   14000970e:	bt     edx,0x1e
   140009712:	jb     0x1400097fb
   140009718:	mov    ecx,DWORD PTR [rcx+0x8]
   14000971b:	and    edx,0x3fffffff
   140009721:	mov    QWORD PTR [rsp+0x30],rbx
   140009726:	mov    r9d,0x38
   14000972c:	mov    QWORD PTR [rsp+0x38],rsi
   140009731:	lea    esi,[rcx+rax*1]
   140009734:	mov    r8d,esi
   140009737:	call   0x14001aa30
   14000973c:	mov    ebx,eax
   14000973e:	cmp    eax,esi
   140009740:	jge    0x14000975e
   140009742:	test   eax,eax
   140009744:	jne    0x140009750
   140009746:	cmp    esi,0xffffffff
   140009749:	jg     0x140009750
   14000974b:	or     ebx,0xffffffff
   14000974e:	jmp    0x14000975e
   140009750:	lea    eax,[rbx+rsi*1]
   140009753:	cdq    
   140009754:	sub    eax,edx
   140009756:	sar    eax,1
   140009758:	mov    ebx,eax
   14000975a:	cmp    eax,esi
   14000975c:	jl     0x140009750
   14000975e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009765:	mov    rax,QWORD PTR [rip+0x28c24]        # 0x140032390
   14000976c:	mov    rcx,QWORD PTR [rax]
   14000976f:	movsxd rax,ebx
   140009772:	jne    0x1400097be
   140009774:	mov    rdx,QWORD PTR [rdi]
   140009777:	test   rdx,rdx
   14000977a:	je     0x14000979d
   14000977c:	mov    r9,QWORD PTR [rcx]
   14000977f:	imul   r8,rax,0x38
   140009783:	call   QWORD PTR [r9+0x18]
   140009787:	mov    rsi,QWORD PTR [rsp+0x38]
   14000978c:	mov    DWORD PTR [rdi+0x8],ebx
   14000978f:	mov    rbx,QWORD PTR [rsp+0x30]
   140009794:	mov    QWORD PTR [rdi],rax
   140009797:	add    rsp,0x20
   14000979b:	pop    rdi
   14000979c:	ret    
   14000979d:	mov    r8,QWORD PTR [rcx]
   1400097a0:	imul   rdx,rax,0x38
   1400097a4:	call   QWORD PTR [r8+0x8]
   1400097a8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400097ad:	mov    DWORD PTR [rdi+0x8],ebx
   1400097b0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097b5:	mov    QWORD PTR [rdi],rax
   1400097b8:	add    rsp,0x20
   1400097bc:	pop    rdi
   1400097bd:	ret    
   1400097be:	mov    r8,QWORD PTR [rcx]
   1400097c1:	mov    rsi,QWORD PTR [rdi]
   1400097c4:	imul   rdx,rax,0x38
   1400097c8:	call   QWORD PTR [r8+0x8]
   1400097cc:	mov    QWORD PTR [rdi],rax
   1400097cf:	test   rsi,rsi
   1400097d2:	je     0x1400097e7
   1400097d4:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400097d8:	mov    rdx,rsi
   1400097db:	imul   r8,rcx,0x38
   1400097df:	mov    rcx,rax
   1400097e2:	call   0x140026f70
   1400097e7:	and    DWORD PTR [rdi+0xc],0x3fffffff
   1400097ee:	mov    rsi,QWORD PTR [rsp+0x38]
   1400097f3:	mov    DWORD PTR [rdi+0x8],ebx
   1400097f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400097fb:	add    rsp,0x20
   1400097ff:	pop    rdi
   140009800:	ret    
   140009801:	int3   
   140009802:	int3   
   140009803:	int3   
   140009804:	int3   
   140009805:	int3   
   140009806:	int3   
   140009807:	int3   
   140009808:	int3   
   140009809:	int3   
   14000980a:	int3   
   14000980b:	int3   
   14000980c:	int3   
   14000980d:	int3   
   14000980e:	int3   
   14000980f:	int3   
   140009810:	rex push rdi
   140009812:	sub    rsp,0x20
   140009816:	mov    eax,edx
   140009818:	mov    rdi,rcx
   14000981b:	mov    edx,DWORD PTR [rcx+0xc]
   14000981e:	bt     edx,0x1e
   140009822:	jb     0x14000991b
   140009828:	mov    ecx,DWORD PTR [rcx+0x8]
   14000982b:	and    edx,0x3fffffff
   140009831:	mov    QWORD PTR [rsp+0x30],rbx
   140009836:	mov    r9d,0x28
   14000983c:	mov    QWORD PTR [rsp+0x38],rsi
   140009841:	lea    esi,[rcx+rax*1]
   140009844:	mov    r8d,esi
   140009847:	call   0x14001aa30
   14000984c:	mov    ebx,eax
   14000984e:	cmp    eax,esi
   140009850:	jge    0x14000986e
   140009852:	test   eax,eax
   140009854:	jne    0x140009860
   140009856:	cmp    esi,0xffffffff
   140009859:	jg     0x140009860
   14000985b:	or     ebx,0xffffffff
   14000985e:	jmp    0x14000986e
   140009860:	lea    eax,[rbx+rsi*1]
   140009863:	cdq    
   140009864:	sub    eax,edx
   140009866:	sar    eax,1
   140009868:	mov    ebx,eax
   14000986a:	cmp    eax,esi
   14000986c:	jl     0x140009860
   14000986e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009875:	mov    rax,QWORD PTR [rip+0x28b14]        # 0x140032390
   14000987c:	mov    rcx,QWORD PTR [rax]
   14000987f:	movsxd rax,ebx
   140009882:	jne    0x1400098d6
   140009884:	mov    rdx,QWORD PTR [rdi]
   140009887:	test   rdx,rdx
   14000988a:	je     0x1400098b1
   14000988c:	mov    r9,QWORD PTR [rcx]
   14000988f:	lea    r8,[rax+rax*4]
   140009893:	shl    r8,0x3
   140009897:	call   QWORD PTR [r9+0x18]
   14000989b:	mov    rsi,QWORD PTR [rsp+0x38]
   1400098a0:	mov    DWORD PTR [rdi+0x8],ebx
   1400098a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098a8:	mov    QWORD PTR [rdi],rax
   1400098ab:	add    rsp,0x20
   1400098af:	pop    rdi
   1400098b0:	ret    
   1400098b1:	mov    r8,QWORD PTR [rcx]
   1400098b4:	lea    rdx,[rax+rax*4]
   1400098b8:	shl    rdx,0x3
   1400098bc:	call   QWORD PTR [r8+0x8]
   1400098c0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400098c5:	mov    DWORD PTR [rdi+0x8],ebx
   1400098c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400098cd:	mov    QWORD PTR [rdi],rax
   1400098d0:	add    rsp,0x20
   1400098d4:	pop    rdi
   1400098d5:	ret    
   1400098d6:	mov    r8,QWORD PTR [rcx]
   1400098d9:	lea    rdx,[rax+rax*4]
   1400098dd:	mov    rsi,QWORD PTR [rdi]
   1400098e0:	shl    rdx,0x3
   1400098e4:	call   QWORD PTR [r8+0x8]
   1400098e8:	mov    QWORD PTR [rdi],rax
   1400098eb:	test   rsi,rsi
   1400098ee:	je     0x140009907
   1400098f0:	movsxd rcx,DWORD PTR [rdi+0x8]
   1400098f4:	mov    rdx,rsi
   1400098f7:	lea    r8,[rcx+rcx*4]
   1400098fb:	mov    rcx,rax
   1400098fe:	shl    r8,0x3
   140009902:	call   0x140026f70
   140009907:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14000990e:	mov    rsi,QWORD PTR [rsp+0x38]
   140009913:	mov    DWORD PTR [rdi+0x8],ebx
   140009916:	mov    rbx,QWORD PTR [rsp+0x30]
   14000991b:	add    rsp,0x20
   14000991f:	pop    rdi
   140009920:	ret    
   140009921:	int3   
   140009922:	int3   
   140009923:	int3   
   140009924:	int3   
   140009925:	int3   
   140009926:	int3   
   140009927:	int3   
   140009928:	int3   
   140009929:	int3   
   14000992a:	int3   
   14000992b:	int3   
   14000992c:	int3   
   14000992d:	int3   
   14000992e:	int3   
   14000992f:	int3   
   140009930:	rex push rdi
   140009932:	sub    rsp,0x20
   140009936:	mov    eax,edx
   140009938:	mov    rdi,rcx
   14000993b:	mov    edx,DWORD PTR [rcx+0xc]
   14000993e:	bt     edx,0x1e
   140009942:	jb     0x140009a2b
   140009948:	mov    ecx,DWORD PTR [rcx+0x8]
   14000994b:	and    edx,0x3fffffff
   140009951:	mov    QWORD PTR [rsp+0x30],rbx
   140009956:	mov    r9d,0x78
   14000995c:	mov    QWORD PTR [rsp+0x38],rsi
   140009961:	lea    esi,[rcx+rax*1]
   140009964:	mov    r8d,esi
   140009967:	call   0x14001aa30
   14000996c:	mov    ebx,eax
   14000996e:	cmp    eax,esi
   140009970:	jge    0x14000998e
   140009972:	test   eax,eax
   140009974:	jne    0x140009980
   140009976:	cmp    esi,0xffffffff
   140009979:	jg     0x140009980
   14000997b:	or     ebx,0xffffffff
   14000997e:	jmp    0x14000998e
   140009980:	lea    eax,[rbx+rsi*1]
   140009983:	cdq    
   140009984:	sub    eax,edx
   140009986:	sar    eax,1
   140009988:	mov    ebx,eax
   14000998a:	cmp    eax,esi
   14000998c:	jl     0x140009980
   14000998e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009995:	mov    rax,QWORD PTR [rip+0x289f4]        # 0x140032390
   14000999c:	mov    rcx,QWORD PTR [rax]
   14000999f:	movsxd rax,ebx
   1400099a2:	jne    0x1400099ee
   1400099a4:	mov    rdx,QWORD PTR [rdi]
   1400099a7:	test   rdx,rdx
   1400099aa:	je     0x1400099cd
   1400099ac:	mov    r9,QWORD PTR [rcx]
   1400099af:	imul   r8,rax,0x78
   1400099b3:	call   QWORD PTR [r9+0x18]
   1400099b7:	mov    rsi,QWORD PTR [rsp+0x38]
   1400099bc:	mov    DWORD PTR [rdi+0x8],ebx
   1400099bf:	mov    rbx,QWORD PTR [rsp+0x30]
   1400099c4:	mov    QWORD PTR [rdi],rax
   1400099c7:	add    rsp,0x20
   1400099cb:	pop    rdi
   1400099cc:	ret    
   1400099cd:	mov    r8,QWORD PTR [rcx]
   1400099d0:	imul   rdx,rax,0x78
   1400099d4:	call   QWORD PTR [r8+0x8]
   1400099d8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400099dd:	mov    DWORD PTR [rdi+0x8],ebx
   1400099e0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400099e5:	mov    QWORD PTR [rdi],rax
   1400099e8:	add    rsp,0x20
   1400099ec:	pop    rdi
   1400099ed:	ret    
   1400099ee:	mov    r8,QWORD PTR [rcx]
   1400099f1:	mov    rsi,QWORD PTR [rdi]
   1400099f4:	imul   rdx,rax,0x78
   1400099f8:	call   QWORD PTR [r8+0x8]
   1400099fc:	mov    QWORD PTR [rdi],rax
   1400099ff:	test   rsi,rsi
   140009a02:	je     0x140009a17
   140009a04:	movsxd rcx,DWORD PTR [rdi+0x8]
   140009a08:	mov    rdx,rsi
   140009a0b:	imul   r8,rcx,0x78
   140009a0f:	mov    rcx,rax
   140009a12:	call   0x140026f70
   140009a17:	and    DWORD PTR [rdi+0xc],0x3fffffff
   140009a1e:	mov    rsi,QWORD PTR [rsp+0x38]
   140009a23:	mov    DWORD PTR [rdi+0x8],ebx
   140009a26:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a2b:	add    rsp,0x20
   140009a2f:	pop    rdi
   140009a30:	ret    
   140009a31:	int3   
   140009a32:	int3   
   140009a33:	int3   
   140009a34:	int3   
   140009a35:	int3   
   140009a36:	int3   
   140009a37:	int3   
   140009a38:	int3   
   140009a39:	int3   
   140009a3a:	int3   
   140009a3b:	int3   
   140009a3c:	int3   
   140009a3d:	int3   
   140009a3e:	int3   
   140009a3f:	int3   
   140009a40:	rex push rdi
   140009a42:	sub    rsp,0x20
   140009a46:	mov    eax,edx
   140009a48:	mov    rdi,rcx
   140009a4b:	mov    edx,DWORD PTR [rcx+0xc]
   140009a4e:	bt     edx,0x1e
   140009a52:	jb     0x140009b4b
   140009a58:	mov    ecx,DWORD PTR [rcx+0x8]
   140009a5b:	and    edx,0x3fffffff
   140009a61:	mov    QWORD PTR [rsp+0x30],rbx
   140009a66:	mov    r9d,0x18
   140009a6c:	mov    QWORD PTR [rsp+0x38],rsi
   140009a71:	lea    esi,[rcx+rax*1]
   140009a74:	mov    r8d,esi
   140009a77:	call   0x14001aa30
   140009a7c:	mov    ebx,eax
   140009a7e:	cmp    eax,esi
   140009a80:	jge    0x140009a9e
   140009a82:	test   eax,eax
   140009a84:	jne    0x140009a90
   140009a86:	cmp    esi,0xffffffff
   140009a89:	jg     0x140009a90
   140009a8b:	or     ebx,0xffffffff
   140009a8e:	jmp    0x140009a9e
   140009a90:	lea    eax,[rbx+rsi*1]
   140009a93:	cdq    
   140009a94:	sub    eax,edx
   140009a96:	sar    eax,1
   140009a98:	mov    ebx,eax
   140009a9a:	cmp    eax,esi
   140009a9c:	jl     0x140009a90
   140009a9e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140009aa5:	mov    rax,QWORD PTR [rip+0x288e4]        # 0x140032390
   140009aac:	mov    rcx,QWORD PTR [rax]
   140009aaf:	movsxd rax,ebx
   140009ab2:	jne    0x140009b06
   140009ab4:	mov    rdx,QWORD PTR [rdi]
   140009ab7:	test   rdx,rdx
   140009aba:	je     0x140009ae1
   140009abc:	mov    r9,QWORD PTR [rcx]
   140009abf:	lea    r8,[rax+rax*2]
   140009ac3:	shl    r8,0x3
   140009ac7:	call   QWORD PTR [r9+0x18]
   140009acb:	mov    rsi,QWORD PTR [rsp+0x38]
   140009ad0:	mov    DWORD PTR [rdi+0x8],ebx
   140009ad3:	mov    rbx,QWORD PTR [rsp+0x30]
   140009ad8:	mov    QWORD PTR [rdi],rax
   140009adb:	add    rsp,0x20
   140009adf:	pop    rdi
   140009ae0:	ret    
   140009ae1:	mov    r8,QWORD PTR [rcx]
   140009ae4:	lea    rdx,[rax+rax*2]
   140009ae8:	shl    rdx,0x3
   140009aec:	call   QWORD PTR [r8+0x8]
   140009af0:	mov    rsi,QWORD PTR [rsp+0x38]
   140009af5:	mov    DWORD PTR [rdi+0x8],ebx
   140009af8:	mov    rbx,QWORD PTR [rsp+0x30]
   140009afd:	mov    QWORD PTR [rdi],rax
   140009b00:	add    rsp,0x20
   140009b04:	pop    rdi
   140009b05:	ret    
   140009b06:	mov    r8,QWORD PTR [rcx]
   140009b09:	lea    rdx,[rax+rax*2]
   140009b0d:	mov    rsi,QWORD PTR [rdi]
   140009b10:	shl    rdx,0x3
   140009b14:	call   QWORD PTR [r8+0x8]
   140009b18:	mov    QWORD PTR [rdi],rax
   140009b1b:	test   rsi,rsi
   140009b1e:	je     0x140009b37
   140009b20:	movsxd rcx,DWORD PTR [rdi+0x8]
   140009b24:	mov    rdx,rsi
   140009b27:	lea    r8,[rcx+rcx*2]
   140009b2b:	mov    rcx,rax
   140009b2e:	shl    r8,0x3
   140009b32:	call   0x140026f70
   140009b37:	and    DWORD PTR [rdi+0xc],0x3fffffff
   140009b3e:	mov    rsi,QWORD PTR [rsp+0x38]
   140009b43:	mov    DWORD PTR [rdi+0x8],ebx
   140009b46:	mov    rbx,QWORD PTR [rsp+0x30]
   140009b4b:	add    rsp,0x20
   140009b4f:	pop    rdi
   140009b50:	ret    
   140009b51:	int3   
   140009b52:	int3   
   140009b53:	int3   
   140009b54:	int3   
   140009b55:	int3   
   140009b56:	int3   
   140009b57:	int3   
   140009b58:	int3   
   140009b59:	int3   
   140009b5a:	int3   
   140009b5b:	int3   
   140009b5c:	int3   
   140009b5d:	int3   
   140009b5e:	int3   
   140009b5f:	int3   
   140009b60:	rex push rbx
   140009b62:	sub    rsp,0x20
   140009b66:	mov    rax,QWORD PTR [rcx]
   140009b69:	mov    rbx,rcx
   140009b6c:	call   QWORD PTR [rax+0x20]
   140009b6f:	cmp    BYTE PTR [rbx+0x139],0x0
   140009b76:	mov    QWORD PTR [rbx+0x130],rax
   140009b7d:	jne    0x140009b85
   140009b7f:	call   QWORD PTR [rip+0x287a3]        # 0x140032328
   140009b85:	cmp    BYTE PTR [rbx+0xf8],0x0
   140009b8c:	mov    QWORD PTR [rsp+0x30],rdi
   140009b91:	jne    0x140009bc5
   140009b93:	cmp    BYTE PTR [rbx+0xfc],0x0
   140009b9a:	jne    0x140009bc5
   140009b9c:	call   QWORD PTR [rip+0x28716]        # 0x1400322b8
   140009ba2:	mov    rdi,rax
   140009ba5:	mov    rax,QWORD PTR [rax]
   140009ba8:	test   rax,rax
   140009bab:	je     0x140009bf4
   140009bad:	mov    ecx,0x20
   140009bb2:	call   rax
   140009bb4:	lea    rdx,[rip+0x2a8d5]        # 0x140034490
   140009bbb:	lea    rcx,[rip+0x2a8d6]        # 0x140034498
   140009bc2:	call   QWORD PTR [rdi+0x30]
   140009bc5:	mov    rdx,QWORD PTR [rbx+0x130]
   140009bcc:	lea    r8,[rip+0x2a8ad]        # 0x140034480
   140009bd3:	mov    rcx,rbx
   140009bd6:	call   0x140008720
   140009bdb:	test   rax,rax
   140009bde:	je     0x140009bf4
   140009be0:	mov    BYTE PTR [rbx+0x138],0x1
   140009be7:	mov    al,0x1
   140009be9:	mov    rdi,QWORD PTR [rsp+0x30]
   140009bee:	add    rsp,0x20
   140009bf2:	pop    rbx
   140009bf3:	ret    
   140009bf4:	xor    al,al
   140009bf6:	mov    rdi,QWORD PTR [rsp+0x30]
   140009bfb:	add    rsp,0x20
   140009bff:	pop    rbx
   140009c00:	ret    
   140009c01:	int3   
   140009c02:	int3   
   140009c03:	int3   
   140009c04:	int3   
   140009c05:	int3   
   140009c06:	int3   
   140009c07:	int3   
   140009c08:	int3   
   140009c09:	int3   
   140009c0a:	int3   
   140009c0b:	int3   
   140009c0c:	int3   
   140009c0d:	int3   
   140009c0e:	int3   
   140009c0f:	int3   
   140009c10:	mov    QWORD PTR [rsp+0x10],rsi
   140009c15:	mov    QWORD PTR [rsp+0x18],rdi
   140009c1a:	push   r14
   140009c1c:	sub    rsp,0x20
   140009c20:	movsxd rdi,edx
   140009c23:	mov    esi,r8d
   140009c26:	mov    r14,rcx
   140009c29:	test   r8d,r8d
   140009c2c:	je     0x140009c7d
   140009c2e:	mov    eax,DWORD PTR [rcx+0x10]
   140009c31:	mov    QWORD PTR [rsp+0x30],rbx
   140009c36:	mov    ebx,DWORD PTR [rcx]
   140009c38:	add    ebx,r8d
   140009c3b:	cmp    ebx,eax
   140009c3d:	jle    0x140009c4c
   140009c3f:	mov    edx,ebx
   140009c41:	add    rcx,0x8
   140009c45:	sub    edx,eax
   140009c47:	call   0x140009600
   140009c4c:	mov    DWORD PTR [r14],ebx
   140009c4f:	sub    ebx,edi
   140009c51:	sub    ebx,esi
   140009c53:	test   ebx,ebx
   140009c55:	jle    0x140009c78
   140009c57:	test   esi,esi
   140009c59:	jle    0x140009c78
   140009c5b:	mov    r9,QWORD PTR [r14+0x8]
   140009c5f:	lea    eax,[rdi+rsi*1]
   140009c62:	movsxd rcx,eax
   140009c65:	movsxd r8,ebx
   140009c68:	add    r8,r8
   140009c6b:	lea    rdx,[r9+rdi*2]
   140009c6f:	lea    rcx,[r9+rcx*2]
   140009c73:	call   0x140026f70
   140009c78:	mov    rbx,QWORD PTR [rsp+0x30]
   140009c7d:	mov    rsi,QWORD PTR [rsp+0x38]
   140009c82:	mov    eax,edi
   140009c84:	mov    rdi,QWORD PTR [rsp+0x40]
   140009c89:	add    rsp,0x20
   140009c8d:	pop    r14
   140009c8f:	ret    
   140009c90:	mov    QWORD PTR [rsp+0x10],rsi
   140009c95:	mov    QWORD PTR [rsp+0x18],rdi
   140009c9a:	push   r14
   140009c9c:	sub    rsp,0x20
   140009ca0:	mov    edi,r8d
   140009ca3:	mov    rsi,rcx
   140009ca6:	movsxd r14,edx
   140009ca9:	test   r8d,r8d
   140009cac:	je     0x140009d3a
   140009cb2:	mov    eax,DWORD PTR [rcx+0x10]
   140009cb5:	mov    QWORD PTR [rsp+0x30],rbx
   140009cba:	mov    ebx,DWORD PTR [rcx]
   140009cbc:	add    ebx,edi
   140009cbe:	cmp    ebx,eax
   140009cc0:	jle    0x140009ccf
   140009cc2:	mov    edx,ebx
   140009cc4:	add    rcx,0x8
   140009cc8:	sub    edx,eax
   140009cca:	call   0x140009930
   140009ccf:	mov    DWORD PTR [rsi],ebx
   140009cd1:	sub    ebx,r14d
   140009cd4:	sub    ebx,edi
   140009cd6:	test   ebx,ebx
   140009cd8:	jle    0x140009d01
   140009cda:	test   edi,edi
   140009cdc:	jle    0x140009d35
   140009cde:	movsxd rax,ebx
   140009ce1:	imul   r8,rax,0x78
   140009ce5:	imul   rdx,r14,0x78
   140009ce9:	lea    eax,[r14+rdi*1]
   140009ced:	movsxd rcx,eax
   140009cf0:	imul   rcx,rcx,0x78
   140009cf4:	add    rdx,QWORD PTR [rsi+0x8]
   140009cf8:	add    rcx,QWORD PTR [rsi+0x8]
   140009cfc:	call   0x140026f70
   140009d01:	test   edi,edi
   140009d03:	jle    0x140009d35
   140009d05:	imul   rbx,r14,0x78
   140009d09:	nop    DWORD PTR [rax+0x0]
   140009d10:	mov    rcx,QWORD PTR [rsi+0x8]
   140009d14:	add    rcx,rbx
   140009d17:	je     0x140009d2b
   140009d19:	xor    r9d,r9d
   140009d1c:	add    rcx,0x28
   140009d20:	xor    edx,edx
   140009d22:	lea    r8d,[r9+0x10]
   140009d26:	call   0x14001c880
   140009d2b:	add    rbx,0x78
   140009d2f:	sub    rdi,0x1
   140009d33:	jne    0x140009d10
   140009d35:	mov    rbx,QWORD PTR [rsp+0x30]
   140009d3a:	mov    rsi,QWORD PTR [rsp+0x38]
   140009d3f:	mov    eax,r14d
   140009d42:	mov    rdi,QWORD PTR [rsp+0x40]
   140009d47:	add    rsp,0x20
   140009d4b:	pop    r14
   140009d4d:	ret    
   140009d4e:	int3   
   140009d4f:	int3   
   140009d50:	sub    rsp,0x28
   140009d54:	mov    rcx,QWORD PTR [rip+0x3d505]        # 0x140047260
   140009d5b:	test   rcx,rcx
   140009d5e:	je     0x140009d71
   140009d60:	mov    rax,QWORD PTR [rcx]
   140009d63:	call   QWORD PTR [rax+0x70]
   140009d66:	test   al,al
   140009d68:	je     0x140009d71
   140009d6a:	mov    al,0x1
   140009d6c:	add    rsp,0x28
   140009d70:	ret    
   140009d71:	xor    al,al
   140009d73:	add    rsp,0x28
   140009d77:	ret    
   140009d78:	int3   
   140009d79:	int3   
   140009d7a:	int3   
   140009d7b:	int3   
   140009d7c:	int3   
   140009d7d:	int3   
   140009d7e:	int3   
   140009d7f:	int3   
   140009d80:	mov    QWORD PTR [rsp+0x20],rbx
   140009d85:	mov    QWORD PTR [rsp+0x10],rdx
   140009d8a:	push   rbp
   140009d8b:	push   rsi
   140009d8c:	push   rdi
   140009d8d:	push   r12
   140009d8f:	push   r13
   140009d91:	push   r14
   140009d93:	push   r15
   140009d95:	lea    rbp,[rsp-0x430]
   140009d9d:	sub    rsp,0x530
   140009da4:	test   r8,r8
   140009da7:	lea    r13,[rbp+0x470]
   140009dae:	mov    rdi,rdx
   140009db1:	mov    r15,rcx
   140009db4:	cmovne r13,r8
   140009db8:	lea    rdx,[rbp+0x120]
   140009dbf:	xor    esi,esi
   140009dc1:	mov    r8d,0x104
   140009dc7:	mov    rcx,rdi
   140009dca:	mov    DWORD PTR [r13+0x0],esi
   140009dce:	call   QWORD PTR [rip+0x2874c]        # 0x140032520
   140009dd4:	mov    rcx,rdi
   140009dd7:	call   0x14000b950
   140009ddc:	mov    rbx,rax
   140009ddf:	cmp    rax,rdi
   140009de2:	je     0x140009e01
   140009de4:	mov    r8d,0x104
   140009dea:	lea    rcx,[rbp+0x120]
   140009df1:	mov    rdx,rax
   140009df4:	call   QWORD PTR [rip+0x2875e]        # 0x140032558
   140009dfa:	mov    QWORD PTR [rbp+0x478],rbx
   140009e01:	movsxd r12,DWORD PTR [r15+0x8]
   140009e05:	mov    r14d,esi
   140009e08:	mov    rbx,rsi
   140009e0b:	test   r12,r12
   140009e0e:	jle    0x140009e4c
   140009e10:	mov    rdi,rsi
   140009e13:	nop    DWORD PTR [rax+0x0]
   140009e17:	nop    WORD PTR [rax+rax*1+0x0]
   140009e20:	mov    rdx,QWORD PTR [r15+0x10]
   140009e24:	lea    rcx,[rbp+0x120]
   140009e2b:	mov    rdx,QWORD PTR [rdi+rdx*1]
   140009e2f:	call   QWORD PTR [rip+0x2872b]        # 0x140032560
   140009e35:	test   eax,eax
   140009e37:	je     0x140009f55
   140009e3d:	inc    r14d
   140009e40:	inc    rbx
   140009e43:	add    rdi,0x18
   140009e47:	cmp    rbx,r12
   140009e4a:	jl     0x140009e20
   140009e4c:	call   QWORD PTR [rip+0x28516]        # 0x140032368
   140009e52:	lea    rcx,[r15+0x118]
   140009e59:	mov    QWORD PTR [rbp+0x480],rsi
   140009e60:	mov    rbx,rax
   140009e63:	call   0x14001b050
   140009e68:	mov    r8d,0x200
   140009e6e:	lea    rdx,[rip+0x2892b]        # 0x1400327a0
   140009e75:	lea    rcx,[rsp+0x20]
   140009e7a:	mov    rdi,rax
   140009e7d:	call   QWORD PTR [rip+0x286d5]        # 0x140032558
   140009e83:	or     r14,0xffffffffffffffff
   140009e87:	lea    rdx,[rbp+0x120]
   140009e8e:	mov    r9d,r14d
   140009e91:	lea    rcx,[rsp+0x20]
   140009e96:	mov    r8d,0x200
   140009e9c:	call   QWORD PTR [rip+0x286ae]        # 0x140032550
   140009ea2:	mov    r9d,0x200
   140009ea8:	lea    r8,[rbp+0x230]
   140009eaf:	lea    rdx,[rsp+0x20]
   140009eb4:	mov    rcx,rdi
   140009eb7:	call   QWORD PTR [rip+0x28643]        # 0x140032500
   140009ebd:	xor    r9d,r9d
   140009ec0:	lea    r8,[rbp+0x230]
   140009ec7:	mov    edx,0x200
   140009ecc:	lea    rcx,[rsp+0x20]
   140009ed1:	call   QWORD PTR [rip+0x28609]        # 0x1400324e0
   140009ed7:	mov    r8d,0x200
   140009edd:	lea    rdx,[rsp+0x20]
   140009ee2:	lea    rcx,[rsp+0x20]
   140009ee7:	call   QWORD PTR [rip+0x28633]        # 0x140032520
   140009eed:	mov    r9d,r14d
   140009ef0:	lea    rdx,[rip+0x288a9]        # 0x1400327a0
   140009ef7:	mov    r8d,0x200
   140009efd:	lea    rcx,[rsp+0x20]
   140009f02:	call   QWORD PTR [rip+0x28648]        # 0x140032550
   140009f08:	mov    r8d,0x200
   140009f0e:	lea    rdx,[rip+0x2a937]        # 0x14003484c
   140009f15:	lea    rcx,[rsp+0x20]
   140009f1a:	call   QWORD PTR [rip+0x283f8]        # 0x140032318
   140009f20:	lea    rcx,[rsp+0x20]
   140009f25:	call   QWORD PTR [rip+0x2867d]        # 0x1400325a8
   140009f2b:	test   al,al
   140009f2d:	je     0x140009f72
   140009f2f:	or     r8d,0xffffffff
   140009f33:	lea    rdx,[rbp+0x480]
   140009f3a:	lea    rcx,[rsp+0x20]
   140009f3f:	call   QWORD PTR [rip+0x283fb]        # 0x140032340
   140009f45:	mov    rsi,QWORD PTR [rbp+0x478]
   140009f4c:	mov    DWORD PTR [r13+0x0],eax
   140009f50:	jmp    0x14000a072
   140009f55:	movsxd rax,r14d
   140009f58:	lea    rcx,[rax+rax*2]
   140009f5c:	mov    rax,QWORD PTR [r15+0x10]
   140009f60:	inc    DWORD PTR [rax+rcx*8+0x10]
   140009f64:	mov    rax,QWORD PTR [r15+0x10]
   140009f68:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
   140009f6d:	jmp    0x14000a149
   140009f72:	movsxd r12,DWORD PTR [r15+0x50]
   140009f76:	test   r12,r12
   140009f79:	jle    0x14000a058
   140009f7f:	nop
   140009f80:	mov    rax,QWORD PTR [r15+0x58]
   140009f84:	lea    rdx,[rip+0x28815]        # 0x1400327a0
   140009f8b:	mov    r8d,0x200
   140009f91:	lea    rcx,[rsp+0x20]
   140009f96:	mov    rdi,QWORD PTR [rax+rsi*8]
   140009f9a:	call   QWORD PTR [rip+0x285b8]        # 0x140032558
   140009fa0:	mov    r9d,r14d
   140009fa3:	lea    rdx,[rbp+0x120]
   140009faa:	mov    r8d,0x200
   140009fb0:	lea    rcx,[rsp+0x20]
   140009fb5:	call   QWORD PTR [rip+0x28595]        # 0x140032550
   140009fbb:	mov    r9d,0x200
   140009fc1:	lea    r8,[rbp+0x230]
   140009fc8:	lea    rdx,[rsp+0x20]
   140009fcd:	mov    rcx,rdi
   140009fd0:	call   QWORD PTR [rip+0x2852a]        # 0x140032500
   140009fd6:	xor    r9d,r9d
   140009fd9:	lea    r8,[rbp+0x230]
   140009fe0:	mov    edx,0x200
   140009fe5:	lea    rcx,[rsp+0x20]
   140009fea:	call   QWORD PTR [rip+0x284f0]        # 0x1400324e0
   140009ff0:	mov    r8d,0x200
   140009ff6:	lea    rdx,[rsp+0x20]
   140009ffb:	lea    rcx,[rsp+0x20]
   14000a000:	call   QWORD PTR [rip+0x2851a]        # 0x140032520
   14000a006:	mov    r9d,r14d
   14000a009:	lea    rdx,[rip+0x28790]        # 0x1400327a0
   14000a010:	mov    r8d,0x200
   14000a016:	lea    rcx,[rsp+0x20]
   14000a01b:	call   QWORD PTR [rip+0x2852f]        # 0x140032550
   14000a021:	mov    r8d,0x200
   14000a027:	lea    rdx,[rip+0x2a81e]        # 0x14003484c
   14000a02e:	lea    rcx,[rsp+0x20]
   14000a033:	call   QWORD PTR [rip+0x282df]        # 0x140032318
   14000a039:	lea    rcx,[rsp+0x20]
   14000a03e:	call   QWORD PTR [rip+0x28564]        # 0x1400325a8
   14000a044:	test   al,al
   14000a046:	jne    0x140009f2f
   14000a04c:	inc    rsi
   14000a04f:	cmp    rsi,r12
   14000a052:	jl     0x140009f80
   14000a058:	mov    rsi,QWORD PTR [rbp+0x478]
   14000a05f:	mov    rdx,r13
   14000a062:	mov    rcx,rsi
   14000a065:	call   QWORD PTR [rip+0x282dd]        # 0x140032348
   14000a06b:	mov    QWORD PTR [rbp+0x480],rax
   14000a072:	movsxd rdi,DWORD PTR [r15+0x8]
   14000a076:	cmp    edi,DWORD PTR [r15+0x18]
   14000a07a:	jne    0x14000a08a
   14000a07c:	lea    rcx,[r15+0x10]
   14000a080:	mov    edx,0x1
   14000a085:	call   0x140009a40
   14000a08a:	inc    DWORD PTR [r15+0x8]
   14000a08e:	lea    r12,[rdi+rdi*2]
   14000a092:	mov    rax,QWORD PTR [r15+0x10]
   14000a096:	mov    DWORD PTR [rax+r12*8+0x10],0x1
   14000a09f:	mov    rax,QWORD PTR [rbp+0x480]
   14000a0a6:	mov    rcx,QWORD PTR [r15+0x10]
   14000a0aa:	mov    QWORD PTR [rcx+r12*8+0x8],rax
   14000a0af:	lea    rax,[rbp+0x120]
   14000a0b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000a0c0:	cmp    BYTE PTR [rax+r14*1+0x1],0x0
   14000a0c6:	lea    r14,[r14+0x1]
   14000a0ca:	jne    0x14000a0c0
   14000a0cc:	mov    rax,QWORD PTR [rip+0x282bd]        # 0x140032390
   14000a0d3:	lea    rdx,[r14+0x1]
   14000a0d7:	lea    rdi,[rbp+0x120]
   14000a0de:	mov    rcx,QWORD PTR [rax]
   14000a0e1:	mov    rax,QWORD PTR [rcx]
   14000a0e4:	call   QWORD PTR [rax+0x8]
   14000a0e7:	mov    r8,rax
   14000a0ea:	lea    rax,[rbp+0x120]
   14000a0f1:	mov    rdx,r8
   14000a0f4:	sub    rdx,rax
   14000a0f7:	nop    WORD PTR [rax+rax*1+0x0]
   14000a100:	movzx  ecx,BYTE PTR [rdi]
   14000a103:	mov    BYTE PTR [rdx+rdi*1],cl
   14000a106:	lea    rdi,[rdi+0x1]
   14000a10a:	test   cl,cl
   14000a10c:	jne    0x14000a100
   14000a10e:	mov    rax,QWORD PTR [r15+0x10]
   14000a112:	mov    QWORD PTR [rax+r12*8],r8
   14000a116:	call   QWORD PTR [rip+0x2824c]        # 0x140032368
   14000a11c:	sub    rax,rbx
   14000a11f:	xor    ecx,ecx
   14000a121:	mov    rdx,rax
   14000a124:	call   QWORD PTR [rip+0x28236]        # 0x140032360
   14000a12a:	mov    rdx,rsi
   14000a12d:	lea    rcx,[rip+0x2a724]        # 0x140034858
   14000a134:	movaps xmm2,xmm0
   14000a137:	movq   r8,xmm2
   14000a13c:	call   QWORD PTR [rip+0x2817e]        # 0x1400322c0
   14000a142:	mov    rax,QWORD PTR [rbp+0x480]
   14000a149:	mov    rbx,QWORD PTR [rsp+0x588]
   14000a151:	add    rsp,0x530
   14000a158:	pop    r15
   14000a15a:	pop    r14
   14000a15c:	pop    r13
   14000a15e:	pop    r12
   14000a160:	pop    rdi
   14000a161:	pop    rsi
   14000a162:	pop    rbp
   14000a163:	ret    
   14000a164:	int3   
   14000a165:	int3   
   14000a166:	int3   
   14000a167:	int3   
   14000a168:	int3   
   14000a169:	int3   
   14000a16a:	int3   
   14000a16b:	int3   
   14000a16c:	int3   
   14000a16d:	int3   
   14000a16e:	int3   
   14000a16f:	int3   
   14000a170:	mov    DWORD PTR [rsp+0x18],r8d
   14000a175:	mov    QWORD PTR [rsp+0x8],rcx
   14000a17a:	push   rbp
   14000a17b:	push   rbx
   14000a17c:	push   rsi
   14000a17d:	push   rdi
   14000a17e:	push   r12
   14000a180:	push   r13
   14000a182:	push   r14
   14000a184:	push   r15
   14000a186:	lea    rbp,[rsp-0x218]
   14000a18e:	sub    rsp,0x318
   14000a195:	mov    r15,rdx
   14000a198:	mov    DWORD PTR [rbp-0x70],0x0
   14000a19f:	mov    r12,rcx
   14000a1a2:	mov    QWORD PTR [rbp-0x68],0x0
   14000a1aa:	mov    QWORD PTR [rbp-0x60],0x20
   14000a1b2:	call   QWORD PTR [rip+0x28308]        # 0x1400324c0
   14000a1b8:	mov    rax,QWORD PTR [rip+0x281d1]        # 0x140032390
   14000a1bf:	mov    rcx,QWORD PTR [rax]
   14000a1c2:	movsxd rax,DWORD PTR [rbp-0x60]
   14000a1c6:	imul   rdx,rax,0x78
   14000a1ca:	mov    r9,QWORD PTR [rcx]
   14000a1cd:	call   QWORD PTR [r9+0x8]
   14000a1d1:	xor    edx,edx
   14000a1d3:	lea    rcx,[rbp-0x58]
   14000a1d7:	mov    r9b,0x1
   14000a1da:	mov    QWORD PTR [rbp-0x68],rax
   14000a1de:	lea    r8d,[rdx+0x20]
   14000a1e2:	call   0x14001c880
   14000a1e7:	cmp    DWORD PTR [r15],0x0
   14000a1eb:	mov    DWORD PTR [rbp-0x78],0x0
   14000a1f2:	jle    0x14000a4f2
   14000a1f8:	xor    edi,edi
   14000a1fa:	mov    ebx,0xffff
   14000a1ff:	nop
   14000a200:	mov    rsi,QWORD PTR [r15+0x8]
   14000a204:	xor    edx,edx
   14000a206:	mov    rcx,QWORD PTR [rdi+rsi*1+0x18]
   14000a20b:	call   0x140008ff0
   14000a210:	test   rax,rax
   14000a213:	je     0x14000a21f
   14000a215:	mov    QWORD PTR [rdi+rsi*1+0x20],rax
   14000a21a:	jmp    0x14000a4d6
   14000a21f:	mov    r8,QWORD PTR [rdi+rsi*1+0x18]
   14000a224:	lea    rdx,[rbp+0x0]
   14000a228:	lea    rcx,[rbp-0x58]
   14000a22c:	call   0x14001ce30
   14000a231:	cmp    WORD PTR [rax],bx
   14000a234:	je     0x14000a27f
   14000a236:	mov    r8,QWORD PTR [rdi+rsi*1+0x18]
   14000a23b:	lea    rdx,[rbp-0x80]
   14000a23f:	lea    rcx,[rbp-0x58]
   14000a243:	call   0x14001c980
   14000a248:	movzx  ebx,WORD PTR [rbp-0x80]
   14000a24c:	mov    edx,DWORD PTR [rbp-0x70]
   14000a24f:	cmp    edx,ebx
   14000a251:	jg     0x14000a268
   14000a253:	lea    r8d,[rbx+0x1]
   14000a257:	cmp    edx,r8d
   14000a25a:	jge    0x14000a268
   14000a25c:	sub    r8d,edx
   14000a25f:	lea    rcx,[rbp-0x70]
   14000a263:	call   0x140009c90
   14000a268:	mov    rax,QWORD PTR [rbp-0x68]
   14000a26c:	imul   rcx,rbx,0x78
   14000a270:	mov    rcx,QWORD PTR [rcx+rax*1+0x18]
   14000a275:	mov    QWORD PTR [rdi+rsi*1+0x20],rcx
   14000a27a:	jmp    0x14000a4d1
   14000a27f:	xor    r13d,r13d
   14000a282:	xor    cl,cl
   14000a284:	mov    DWORD PTR [rsp+0x40],r13d
   14000a289:	mov    r12,QWORD PTR [rdi+rsi*1+0x20]
   14000a28e:	mov    QWORD PTR [rbp+0x8],r13
   14000a292:	mov    BYTE PTR [rbp+0x268],cl
   14000a298:	test   r12,r12
   14000a29b:	jne    0x14000a34b
   14000a2a1:	mov    rax,QWORD PTR [rdi+rsi*1+0x30]
   14000a2a6:	test   rax,rax
   14000a2a9:	je     0x14000a2b4
   14000a2ab:	mov    rbx,QWORD PTR [rbp+0x260]
   14000a2b2:	jmp    0x14000a321
   14000a2b4:	mov    rcx,QWORD PTR [rdi+rsi*1+0x28]
   14000a2b9:	test   rcx,rcx
   14000a2bc:	je     0x14000a2d7
   14000a2be:	lea    rdx,[rsp+0x40]
   14000a2c3:	call   QWORD PTR [rip+0x28067]        # 0x140032330
   14000a2c9:	mov    r13,QWORD PTR [rdi+rsi*1+0x28]
   14000a2ce:	mov    rbx,QWORD PTR [rbp+0x260]
   14000a2d5:	jmp    0x14000a31a
   14000a2d7:	mov    rbx,QWORD PTR [rbp+0x260]
   14000a2de:	lea    r8,[rsp+0x40]
   14000a2e3:	mov    rdx,QWORD PTR [rdi+rsi*1+0x10]
   14000a2e8:	mov    rcx,rbx
   14000a2eb:	call   0x140009d80
   14000a2f0:	mov    r13,rax
   14000a2f3:	mov    BYTE PTR [rbp+0x268],0x1
   14000a2fa:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a2ff:	mov    QWORD PTR [rbp+0x8],rax
   14000a303:	test   r13,r13
   14000a306:	je     0x14000a7ac
   14000a30c:	lea    rdx,[rsp+0x40]
   14000a311:	mov    rcx,r13
   14000a314:	call   QWORD PTR [rip+0x28016]        # 0x140032330
   14000a31a:	movzx  ecx,BYTE PTR [rbp+0x268]
   14000a321:	test   rax,rax
   14000a324:	je     0x14000a667
   14000a32a:	mov    rcx,QWORD PTR [rdi+rsi*1+0x18]
   14000a32f:	lea    rdx,[rbp+0x4]
   14000a333:	call   rax
   14000a335:	cmp    DWORD PTR [rbp+0x4],0x0
   14000a339:	mov    r12,rax
   14000a33c:	jne    0x14000a53e
   14000a342:	test   rax,rax
   14000a345:	je     0x14000a53e
   14000a34b:	mov    r8,QWORD PTR [rdi+rsi*1+0x18]
   14000a350:	lea    rdx,[rbp+0x278]
   14000a357:	lea    rcx,[rbp-0x58]
   14000a35b:	mov    QWORD PTR [rdi+rsi*1+0x20],r12
   14000a360:	call   0x14001c980
   14000a365:	movzx  ecx,WORD PTR [rbp+0x278]
   14000a36c:	mov    edx,DWORD PTR [rbp-0x70]
   14000a36f:	mov    r8d,ecx
   14000a372:	cmp    edx,ecx
   14000a374:	jg     0x14000a391
   14000a376:	inc    r8d
   14000a379:	cmp    edx,r8d
   14000a37c:	jge    0x14000a391
   14000a37e:	sub    r8d,edx
   14000a381:	lea    rcx,[rbp-0x70]
   14000a385:	call   0x140009c90
   14000a38a:	movzx  ecx,WORD PTR [rbp+0x278]
   14000a391:	movzx  eax,cx
   14000a394:	mov    rcx,r12
   14000a397:	imul   rbx,rax,0x78
   14000a39b:	mov    rax,QWORD PTR [r12]
   14000a39f:	add    rbx,QWORD PTR [rbp-0x68]
   14000a3a3:	call   QWORD PTR [rax+0x38]
   14000a3a6:	mov    QWORD PTR [rbx+0x18],r12
   14000a3aa:	mov    rcx,r12
   14000a3ad:	mov    DWORD PTR [rbx],eax
   14000a3af:	mov    rax,QWORD PTR [rbp+0x8]
   14000a3b3:	mov    QWORD PTR [rbx+0x8],rax
   14000a3b7:	mov    QWORD PTR [rbx+0x20],r13
   14000a3bb:	mov    rax,QWORD PTR [rdi+rsi*1+0x18]
   14000a3c0:	mov    QWORD PTR [rbx+0x10],rax
   14000a3c4:	mov    rax,QWORD PTR [r12]
   14000a3c8:	call   QWORD PTR [rax+0x30]
   14000a3cb:	test   rax,rax
   14000a3ce:	je     0x14000a4d1
   14000a3d4:	cmp    QWORD PTR [rax+0x8],0x0
   14000a3d9:	lea    rbx,[rax+0x8]
   14000a3dd:	je     0x14000a4d1
   14000a3e3:	mov    rax,QWORD PTR [rbx]
   14000a3e6:	cmp    BYTE PTR [rax],0x0
   14000a3e9:	je     0x14000a4d1
   14000a3ef:	mov    r8,QWORD PTR [r15+0x8]
   14000a3f3:	lea    rdx,[rbp-0x7c]
   14000a3f7:	lea    rcx,[rbp-0x58]
   14000a3fb:	mov    r8,QWORD PTR [r8+rdi*1+0x18]
   14000a400:	call   0x14001c980
   14000a405:	movzx  esi,WORD PTR [rbp-0x7c]
   14000a409:	mov    edx,DWORD PTR [rbp-0x70]
   14000a40c:	cmp    edx,esi
   14000a40e:	jg     0x14000a425
   14000a410:	lea    r8d,[rsi+0x1]
   14000a414:	cmp    edx,r8d
   14000a417:	jge    0x14000a425
   14000a419:	sub    r8d,edx
   14000a41c:	lea    rcx,[rbp-0x70]
   14000a420:	call   0x140009c90
   14000a425:	mov    rax,QWORD PTR [rbp-0x68]
   14000a429:	lea    rdx,[rbp+0x2]
   14000a42d:	mov    r8,QWORD PTR [rbx]
   14000a430:	add    rax,0x28
   14000a434:	imul   rcx,rsi,0x78
   14000a438:	add    rcx,rax
   14000a43b:	call   0x14001c980
   14000a440:	mov    rcx,QWORD PTR [r15+0x8]
   14000a444:	xor    eax,eax
   14000a446:	movsxd rsi,DWORD PTR [r15]
   14000a449:	mov    QWORD PTR [rsp+0x68],rax
   14000a44e:	mov    QWORD PTR [rsp+0x70],rax
   14000a453:	mov    QWORD PTR [rsp+0x78],rax
   14000a458:	mov    rax,QWORD PTR [rbx-0x8]
   14000a45c:	mov    QWORD PTR [rsp+0x58],rax
   14000a461:	mov    rax,QWORD PTR [rbx]
   14000a464:	mov    QWORD PTR [rsp+0x60],rax
   14000a469:	mov    rax,QWORD PTR [rcx+rdi*1+0x18]
   14000a46e:	mov    QWORD PTR [rsp+0x50],rax
   14000a473:	mov    rax,QWORD PTR [rcx+rdi*1+0x10]
   14000a478:	mov    QWORD PTR [rsp+0x48],rax
   14000a47d:	cmp    esi,DWORD PTR [r15+0x10]
   14000a481:	jne    0x14000a491
   14000a483:	mov    edx,0x1
   14000a488:	lea    rcx,[r15+0x8]
   14000a48c:	call   0x140009700
   14000a491:	inc    DWORD PTR [r15]
   14000a494:	imul   rcx,rsi,0x38
   14000a498:	add    rcx,QWORD PTR [r15+0x8]
   14000a49c:	je     0x14000a4c3
   14000a49e:	movups xmm0,XMMWORD PTR [rsp+0x48]
   14000a4a3:	movups xmm1,XMMWORD PTR [rsp+0x58]
   14000a4a8:	movups XMMWORD PTR [rcx],xmm0
   14000a4ab:	movups xmm0,XMMWORD PTR [rsp+0x68]
   14000a4b0:	movups XMMWORD PTR [rcx+0x10],xmm1
   14000a4b4:	movsd  xmm1,QWORD PTR [rsp+0x78]
   14000a4ba:	movups XMMWORD PTR [rcx+0x20],xmm0
   14000a4be:	movsd  QWORD PTR [rcx+0x30],xmm1
   14000a4c3:	add    rbx,0x10
   14000a4c7:	cmp    QWORD PTR [rbx],0x0
   14000a4cb:	jne    0x14000a3e3
   14000a4d1:	mov    ebx,0xffff
   14000a4d6:	mov    eax,DWORD PTR [rbp-0x78]
   14000a4d9:	add    rdi,0x38
   14000a4dd:	inc    eax
   14000a4df:	mov    DWORD PTR [rbp-0x78],eax
   14000a4e2:	cmp    eax,DWORD PTR [r15]
   14000a4e5:	jl     0x14000a200
   14000a4eb:	mov    r12,QWORD PTR [rbp+0x260]
   14000a4f2:	cmp    WORD PTR [rbp-0x3e],0x0
   14000a4f7:	jne    0x14000a995
   14000a4fd:	lea    rcx,[rbp-0x58]
   14000a501:	call   0x14001c950
   14000a506:	mov    ebx,DWORD PTR [rbp-0x70]
   14000a509:	sub    ebx,0x1
   14000a50c:	js     0x14000ad89
   14000a512:	movsxd rax,ebx
   14000a515:	imul   rdi,rax,0x78
   14000a519:	nop    DWORD PTR [rax+0x0]
   14000a520:	mov    rcx,QWORD PTR [rbp-0x68]
   14000a524:	add    rcx,0x28
   14000a528:	add    rcx,rdi
   14000a52b:	call   0x14001c950
   14000a530:	add    rdi,0xffffffffffffff88
   14000a534:	sub    ebx,0x1
   14000a537:	jns    0x14000a520
   14000a539:	jmp    0x14000ad89
   14000a53e:	mov    eax,DWORD PTR [rbp+0x270]
   14000a544:	test   eax,eax
   14000a546:	jne    0x14000a621
   14000a54c:	lea    edx,[rax+0x4]
   14000a54f:	mov    rax,QWORD PTR [rip+0x27e32]        # 0x140032388
   14000a556:	mov    ecx,DWORD PTR [rax]
   14000a558:	call   QWORD PTR [rip+0x27f4a]        # 0x1400324a8
   14000a55e:	test   al,al
   14000a560:	je     0x14000a5dc
   14000a562:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a567:	lea    r8,[rip+0x2a4aa]        # 0x140034a18
   14000a56e:	test   rax,rax
   14000a571:	mov    DWORD PTR [rsp+0x50],0x497
   14000a579:	lea    rdx,[rip+0x29e60]        # 0x1400343e0
   14000a580:	cmovne r8,rax
   14000a584:	lea    r9,[rip+0x2a585]        # 0x140034b10
   14000a58b:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a590:	test   rax,rax
   14000a593:	mov    QWORD PTR [rsp+0x30],r8
   14000a598:	lea    r8,[rsp+0x48]
   14000a59d:	cmovne rdx,rax
   14000a5a1:	lea    rax,[rip+0x29fe8]        # 0x140034590
   14000a5a8:	mov    QWORD PTR [rsp+0x48],rax
   14000a5ad:	lea    rax,[rip+0x2a4c4]        # 0x140034a78
   14000a5b4:	mov    QWORD PTR [rsp+0x58],rax
   14000a5b9:	mov    rax,QWORD PTR [rdi+rsi*1+0x18]
   14000a5be:	mov    QWORD PTR [rsp+0x28],rdx
   14000a5c3:	mov    edx,0x4
   14000a5c8:	mov    QWORD PTR [rsp+0x20],rax
   14000a5cd:	mov    rax,QWORD PTR [rip+0x27db4]        # 0x140032388
   14000a5d4:	mov    ecx,DWORD PTR [rax]
   14000a5d6:	call   QWORD PTR [rip+0x27ebc]        # 0x140032498
   14000a5dc:	call   QWORD PTR [rip+0x27fa6]        # 0x140032588
   14000a5e2:	test   al,al
   14000a5e4:	je     0x14000a615
   14000a5e6:	call   QWORD PTR [rip+0x27e94]        # 0x140032480
   14000a5ec:	lea    rdx,[rip+0x281b9]        # 0x1400327ac
   14000a5f3:	xorps  xmm0,xmm0
   14000a5f6:	mov    r8b,0x1
   14000a5f9:	mov    DWORD PTR [rsp+0x50],eax
   14000a5fd:	mov    QWORD PTR [rsp+0x48],rdx
   14000a602:	xor    ecx,ecx
   14000a604:	lea    rdx,[rsp+0x48]
   14000a609:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000a60f:	call   QWORD PTR [rip+0x27e63]        # 0x140032478
   14000a615:	mov    ecx,0x1
   14000a61a:	call   QWORD PTR [rip+0x27c28]        # 0x140032248
   14000a620:	int3   
   14000a621:	cmp    eax,0x1
   14000a624:	jne    0x14000a95a
   14000a62a:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a62f:	lea    r9,[rip+0x2a3e2]        # 0x140034a18
   14000a636:	mov    rdx,QWORD PTR [rdi+rsi*1+0x18]
   14000a63b:	lea    r8,[rip+0x29d9e]        # 0x1400343e0
   14000a642:	test   rax,rax
   14000a645:	lea    rcx,[rip+0x2a4c4]        # 0x140034b10
   14000a64c:	cmovne r9,rax
   14000a650:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a655:	test   rax,rax
   14000a658:	cmovne r8,rax
   14000a65c:	call   QWORD PTR [rip+0x27d4e]        # 0x1400323b0
   14000a662:	jmp    0x14000a95a
   14000a667:	test   cl,cl
   14000a669:	jne    0x14000a7ac
   14000a66f:	mov    eax,DWORD PTR [rbp+0x270]
   14000a675:	test   eax,eax
   14000a677:	jne    0x14000a75e
   14000a67d:	lea    edx,[rax+0x4]
   14000a680:	mov    rax,QWORD PTR [rip+0x27d01]        # 0x140032388
   14000a687:	mov    ecx,DWORD PTR [rax]
   14000a689:	call   QWORD PTR [rip+0x27e19]        # 0x1400324a8
   14000a68f:	test   al,al
   14000a691:	je     0x14000a719
   14000a697:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a69c:	lea    r8,[rip+0x2a375]        # 0x140034a18
   14000a6a3:	test   rax,rax
   14000a6a6:	mov    DWORD PTR [rsp+0x50],0x48c
   14000a6ae:	lea    rdx,[rip+0x29d2b]        # 0x1400343e0
   14000a6b5:	cmovne r8,rax
   14000a6b9:	lea    r9,[rip+0x2a3f0]        # 0x140034ab0
   14000a6c0:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a6c5:	test   rax,rax
   14000a6c8:	cmovne rdx,rax
   14000a6cc:	lea    rax,[rip+0x29ebd]        # 0x140034590
   14000a6d3:	mov    QWORD PTR [rsp+0x48],rax
   14000a6d8:	lea    rax,[rip+0x2a399]        # 0x140034a78
   14000a6df:	mov    QWORD PTR [rsp+0x58],rax
   14000a6e4:	mov    eax,DWORD PTR [rsp+0x40]
   14000a6e8:	mov    DWORD PTR [rsp+0x38],eax
   14000a6ec:	mov    rax,QWORD PTR [rdi+rsi*1+0x18]
   14000a6f1:	mov    QWORD PTR [rsp+0x30],r8
   14000a6f6:	lea    r8,[rsp+0x48]
   14000a6fb:	mov    QWORD PTR [rsp+0x28],rdx
   14000a700:	mov    edx,0x4
   14000a705:	mov    QWORD PTR [rsp+0x20],rax
   14000a70a:	mov    rax,QWORD PTR [rip+0x27c77]        # 0x140032388
   14000a711:	mov    ecx,DWORD PTR [rax]
   14000a713:	call   QWORD PTR [rip+0x27d7f]        # 0x140032498
   14000a719:	call   QWORD PTR [rip+0x27e69]        # 0x140032588
   14000a71f:	test   al,al
   14000a721:	je     0x14000a752
   14000a723:	call   QWORD PTR [rip+0x27d57]        # 0x140032480
   14000a729:	lea    rdx,[rip+0x2807c]        # 0x1400327ac
   14000a730:	xorps  xmm0,xmm0
   14000a733:	mov    r8b,0x1
   14000a736:	mov    DWORD PTR [rsp+0x50],eax
   14000a73a:	mov    QWORD PTR [rsp+0x48],rdx
   14000a73f:	xor    ecx,ecx
   14000a741:	lea    rdx,[rsp+0x48]
   14000a746:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000a74c:	call   QWORD PTR [rip+0x27d26]        # 0x140032478
   14000a752:	mov    ecx,0x1
   14000a757:	call   QWORD PTR [rip+0x27aeb]        # 0x140032248
   14000a75d:	int3   
   14000a75e:	cmp    eax,0x1
   14000a761:	jne    0x14000a95a
   14000a767:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a76c:	lea    r9,[rip+0x2a2a5]        # 0x140034a18
   14000a773:	mov    rdx,QWORD PTR [rdi+rsi*1+0x18]
   14000a778:	lea    r8,[rip+0x29c61]        # 0x1400343e0
   14000a77f:	test   rax,rax
   14000a782:	lea    rcx,[rip+0x2a327]        # 0x140034ab0
   14000a789:	cmovne r9,rax
   14000a78d:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a792:	test   rax,rax
   14000a795:	cmovne r8,rax
   14000a799:	mov    eax,DWORD PTR [rsp+0x40]
   14000a79d:	mov    DWORD PTR [rsp+0x20],eax
   14000a7a1:	call   QWORD PTR [rip+0x27c09]        # 0x1400323b0
   14000a7a7:	jmp    0x14000a95a
   14000a7ac:	cmp    BYTE PTR [rbx+0xf8],0x0
   14000a7b3:	mov    eax,DWORD PTR [rbp+0x270]
   14000a7b9:	jne    0x14000a840
   14000a7bf:	test   eax,eax
   14000a7c1:	jne    0x14000a91d
   14000a7c7:	mov    eax,DWORD PTR [rsp+0x40]
   14000a7cb:	lea    r14,[rip+0x2a0be]        # 0x140034890
   14000a7d2:	lea    rbx,[rip+0x2a0d7]        # 0x1400348b0
   14000a7d9:	cmp    eax,0x8
   14000a7dc:	je     0x14000a7ff
   14000a7de:	cmp    eax,0xe
   14000a7e1:	je     0x14000a7ff
   14000a7e3:	mov    rcx,QWORD PTR [rip+0x3c99e]        # 0x140047188
   14000a7ea:	test   rcx,rcx
   14000a7ed:	je     0x14000a80d
   14000a7ef:	mov    rax,QWORD PTR [rcx]
   14000a7f2:	xor    r8d,r8d
   14000a7f5:	xor    edx,edx
   14000a7f7:	call   QWORD PTR [rax+0x480]
   14000a7fd:	jmp    0x14000a80d
   14000a7ff:	lea    r14,[rip+0x2a182]        # 0x140034988
   14000a806:	lea    rbx,[rip+0x2a19b]        # 0x1400349a8
   14000a80d:	mov    rcx,QWORD PTR [rip+0x3c934]        # 0x140047148
   14000a814:	test   rcx,rcx
   14000a817:	je     0x14000a82e
   14000a819:	mov    rax,QWORD PTR [rcx]
   14000a81c:	lea    rdx,[rip+0x2a1bd]        # 0x1400349e0
   14000a823:	mov    r8,r14
   14000a826:	call   QWORD PTR [rax+0x140]
   14000a82c:	jmp    0x14000a848
   14000a82e:	mov    rdx,rbx
   14000a831:	lea    rcx,[rip+0x2a1c8]        # 0x140034a00
   14000a838:	call   QWORD PTR [rip+0x279f2]        # 0x140032230
   14000a83e:	jmp    0x14000a848
   14000a840:	test   eax,eax
   14000a842:	jne    0x14000a91d
   14000a848:	mov    rax,QWORD PTR [rip+0x27b39]        # 0x140032388
   14000a84f:	mov    edx,0x4
   14000a854:	mov    ecx,DWORD PTR [rax]
   14000a856:	call   QWORD PTR [rip+0x27c4c]        # 0x1400324a8
   14000a85c:	test   al,al
   14000a85e:	je     0x14000a8d8
   14000a860:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a865:	lea    r8,[rip+0x2a1ac]        # 0x140034a18
   14000a86c:	test   rax,rax
   14000a86f:	mov    DWORD PTR [rsp+0x50],0x485
   14000a877:	lea    rdx,[rip+0x29b62]        # 0x1400343e0
   14000a87e:	cmovne r8,rax
   14000a882:	lea    r9,[rip+0x2a1a7]        # 0x140034a30
   14000a889:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a88e:	test   rax,rax
   14000a891:	cmovne rdx,rax
   14000a895:	lea    rax,[rip+0x29cf4]        # 0x140034590
   14000a89c:	mov    QWORD PTR [rsp+0x48],rax
   14000a8a1:	lea    rax,[rip+0x2a1d0]        # 0x140034a78
   14000a8a8:	mov    QWORD PTR [rsp+0x58],rax
   14000a8ad:	mov    eax,DWORD PTR [rsp+0x40]
   14000a8b1:	mov    DWORD PTR [rsp+0x30],eax
   14000a8b5:	mov    rax,QWORD PTR [rip+0x27acc]        # 0x140032388
   14000a8bc:	mov    QWORD PTR [rsp+0x28],r8
   14000a8c1:	lea    r8,[rsp+0x48]
   14000a8c6:	mov    QWORD PTR [rsp+0x20],rdx
   14000a8cb:	mov    edx,0x4
   14000a8d0:	mov    ecx,DWORD PTR [rax]
   14000a8d2:	call   QWORD PTR [rip+0x27bc0]        # 0x140032498
   14000a8d8:	call   QWORD PTR [rip+0x27caa]        # 0x140032588
   14000a8de:	test   al,al
   14000a8e0:	je     0x14000a911
   14000a8e2:	call   QWORD PTR [rip+0x27b98]        # 0x140032480
   14000a8e8:	lea    rdx,[rip+0x27ebd]        # 0x1400327ac
   14000a8ef:	xorps  xmm0,xmm0
   14000a8f2:	mov    r8b,0x1
   14000a8f5:	mov    DWORD PTR [rsp+0x50],eax
   14000a8f9:	mov    QWORD PTR [rsp+0x48],rdx
   14000a8fe:	xor    ecx,ecx
   14000a900:	lea    rdx,[rsp+0x48]
   14000a905:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000a90b:	call   QWORD PTR [rip+0x27b67]        # 0x140032478
   14000a911:	mov    ecx,0x1
   14000a916:	call   QWORD PTR [rip+0x2792c]        # 0x140032248
   14000a91c:	int3   
   14000a91d:	cmp    eax,0x1
   14000a920:	jne    0x14000a95a
   14000a922:	mov    rax,QWORD PTR [rdi+rsi*1+0x8]
   14000a927:	lea    r8,[rip+0x2a0ea]        # 0x140034a18
   14000a92e:	mov    r9d,DWORD PTR [rsp+0x40]
   14000a933:	lea    rdx,[rip+0x29aa6]        # 0x1400343e0
   14000a93a:	test   rax,rax
   14000a93d:	lea    rcx,[rip+0x2a0ec]        # 0x140034a30
   14000a944:	cmovne r8,rax
   14000a948:	mov    rax,QWORD PTR [rdi+rsi*1+0x10]
   14000a94d:	test   rax,rax
   14000a950:	cmovne rdx,rax
   14000a954:	call   QWORD PTR [rip+0x27a56]        # 0x1400323b0
   14000a95a:	lea    rcx,[rbp-0x58]
   14000a95e:	call   0x14001c950
   14000a963:	lea    rcx,[rbp-0x70]
   14000a967:	call   0x14000b170
   14000a96c:	test   DWORD PTR [rbp-0x5c],0xc0000000
   14000a973:	jne    0x14000a98e
   14000a975:	mov    rdx,QWORD PTR [rbp-0x68]
   14000a979:	test   rdx,rdx
   14000a97c:	je     0x14000a98e
   14000a97e:	mov    rax,QWORD PTR [rip+0x27a0b]        # 0x140032390
   14000a985:	mov    rcx,QWORD PTR [rax]
   14000a988:	mov    rax,QWORD PTR [rcx]
   14000a98b:	call   QWORD PTR [rax+0x28]
   14000a98e:	xor    al,al
   14000a990:	jmp    0x14000ade1
   14000a995:	lea    rdx,[rbp-0x70]
   14000a999:	mov    rcx,r12
   14000a99c:	call   0x140009020
   14000a9a1:	movsxd rbx,DWORD PTR [r15]
   14000a9a4:	mov    DWORD PTR [rsp+0x48],0x0
   14000a9ac:	mov    QWORD PTR [rsp+0x50],0x0
   14000a9b5:	mov    DWORD PTR [rsp+0x58],ebx
   14000a9b9:	mov    DWORD PTR [rsp+0x5c],0x0
   14000a9c1:	test   ebx,ebx
   14000a9c3:	je     0x14000a9e7
   14000a9c5:	call   QWORD PTR [rip+0x27af5]        # 0x1400324c0
   14000a9cb:	mov    rax,QWORD PTR [rip+0x279be]        # 0x140032390
   14000a9d2:	mov    rdx,rbx
   14000a9d5:	shl    rdx,0x2
   14000a9d9:	mov    rcx,QWORD PTR [rax]
   14000a9dc:	mov    rax,QWORD PTR [rcx]
   14000a9df:	call   QWORD PTR [rax+0x8]
   14000a9e2:	mov    QWORD PTR [rsp+0x50],rax
   14000a9e7:	lea    r8,[rsp+0x48]
   14000a9ec:	mov    rcx,r12
   14000a9ef:	lea    rdx,[rbp-0x70]
   14000a9f3:	call   0x14000b550
   14000a9f8:	movsxd rcx,DWORD PTR [rsp+0x48]
   14000a9fd:	xor    r15d,r15d
   14000aa00:	mov    eax,DWORD PTR [r12+0x20]
   14000aa05:	mov    rbx,QWORD PTR [rsp+0x50]
   14000aa0a:	mov    DWORD PTR [rbp+0x278],eax
   14000aa10:	test   rcx,rcx
   14000aa13:	jle    0x14000abb3
   14000aa19:	nop    DWORD PTR [rax+0x0]
   14000aa20:	movsxd r13,DWORD PTR [r12+0x20]
   14000aa25:	cmp    r13d,DWORD PTR [r12+0x30]
   14000aa2a:	jne    0x14000aa3b
   14000aa2c:	lea    rcx,[r12+0x28]
   14000aa31:	mov    edx,0x1
   14000aa36:	call   0x140009810
   14000aa3b:	inc    DWORD PTR [r12+0x20]
   14000aa40:	lea    rdi,[r13*4+0x0]
   14000aa48:	movzx  eax,WORD PTR [rbx+r15*4]
   14000aa4d:	add    rdi,r13
   14000aa50:	mov    rsi,QWORD PTR [r12+0x28]
   14000aa55:	imul   r14,rax,0x78
   14000aa59:	add    r14,QWORD PTR [rbp-0x68]
   14000aa5d:	mov    rax,QWORD PTR [r14+0x18]
   14000aa61:	mov    QWORD PTR [rsi+rdi*8+0x10],rax
   14000aa66:	mov    rax,QWORD PTR [r14+0x20]
   14000aa6a:	mov    QWORD PTR [rsi+rdi*8+0x18],rax
   14000aa6f:	mov    eax,DWORD PTR [r12+0x140]
   14000aa77:	mov    DWORD PTR [rsi+rdi*8+0x20],eax
   14000aa7b:	mov    BYTE PTR [rsi+rdi*8+0x24],0x0
   14000aa80:	mov    rcx,QWORD PTR [r14+0x8]
   14000aa84:	test   rcx,rcx
   14000aa87:	je     0x14000aae4
   14000aa89:	mov    r8d,0x200
   14000aa8f:	lea    rdx,[rbp+0x10]
   14000aa93:	call   QWORD PTR [rip+0x27a87]        # 0x140032520
   14000aa99:	lea    rax,[rbp+0x10]
   14000aa9d:	or     rdx,0xffffffffffffffff
   14000aaa1:	inc    rdx
   14000aaa4:	cmp    BYTE PTR [rax+rdx*1],0x0
   14000aaa8:	jne    0x14000aaa1
   14000aaaa:	mov    rax,QWORD PTR [rip+0x278df]        # 0x140032390
   14000aab1:	lea    rbx,[rbp+0x10]
   14000aab5:	inc    rdx
   14000aab8:	mov    rcx,QWORD PTR [rax]
   14000aabb:	mov    rax,QWORD PTR [rcx]
   14000aabe:	call   QWORD PTR [rax+0x8]
   14000aac1:	mov    rdx,rax
   14000aac4:	lea    rcx,[rbp+0x10]
   14000aac8:	sub    rdx,rcx
   14000aacb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000aad0:	movzx  ecx,BYTE PTR [rbx]
   14000aad3:	mov    BYTE PTR [rbx+rdx*1],cl
   14000aad6:	lea    rbx,[rbx+0x1]
   14000aada:	test   cl,cl
   14000aadc:	jne    0x14000aad0
   14000aade:	mov    QWORD PTR [rsi+rdi*8],rax
   14000aae2:	jmp    0x14000aaec
   14000aae4:	mov    QWORD PTR [rsi+rdi*8],0x0
   14000aaec:	mov    rbx,QWORD PTR [r14+0x10]
   14000aaf0:	test   rbx,rbx
   14000aaf3:	je     0x14000ab37
   14000aaf5:	or     rdx,0xffffffffffffffff
   14000aaf9:	nop    DWORD PTR [rax+0x0]
   14000ab00:	inc    rdx
   14000ab03:	cmp    BYTE PTR [rbx+rdx*1],0x0
   14000ab07:	jne    0x14000ab00
   14000ab09:	mov    rax,QWORD PTR [rip+0x27880]        # 0x140032390
   14000ab10:	inc    rdx
   14000ab13:	mov    rcx,QWORD PTR [rax]
   14000ab16:	mov    rax,QWORD PTR [rcx]
   14000ab19:	call   QWORD PTR [rax+0x8]
   14000ab1c:	mov    rdx,rax
   14000ab1f:	sub    rdx,rbx
   14000ab22:	movzx  ecx,BYTE PTR [rbx]
   14000ab25:	mov    BYTE PTR [rbx+rdx*1],cl
   14000ab28:	lea    rbx,[rbx+0x1]
   14000ab2c:	test   cl,cl
   14000ab2e:	jne    0x14000ab22
   14000ab30:	mov    QWORD PTR [rsi+rdi*8+0x8],rax
   14000ab35:	jmp    0x14000ab40
   14000ab37:	mov    QWORD PTR [rsi+rdi*8+0x8],0x0
   14000ab40:	mov    rcx,QWORD PTR [rsi+rdi*8+0x10]
   14000ab45:	mov    rax,QWORD PTR [rcx]
   14000ab48:	call   QWORD PTR [rax+0x48]
   14000ab4b:	test   al,al
   14000ab4d:	je     0x14000ab97
   14000ab4f:	mov    r8,QWORD PTR [r14+0x10]
   14000ab53:	lea    rcx,[r12+0x80]
   14000ab5b:	lea    rdx,[rbp+0x268]
   14000ab62:	call   0x14001c980
   14000ab67:	movzx  edi,WORD PTR [rbp+0x268]
   14000ab6e:	mov    edx,DWORD PTR [r12+0x68]
   14000ab73:	cmp    edx,edi
   14000ab75:	jg     0x14000ab8d
   14000ab77:	lea    r8d,[rdi+0x1]
   14000ab7b:	cmp    edx,r8d
   14000ab7e:	jge    0x14000ab8d
   14000ab80:	sub    r8d,edx
   14000ab83:	lea    rcx,[r12+0x68]
   14000ab88:	call   0x140009c10
   14000ab8d:	mov    rax,QWORD PTR [r12+0x70]
   14000ab92:	mov    WORD PTR [rax+rdi*2],r13w
   14000ab97:	movsxd rax,DWORD PTR [rsp+0x48]
   14000ab9c:	inc    r15
   14000ab9f:	mov    rbx,QWORD PTR [rsp+0x50]
   14000aba4:	cmp    r15,rax
   14000aba7:	jl     0x14000aa20
   14000abad:	mov    eax,DWORD PTR [rbp+0x278]
   14000abb3:	movsxd rsi,eax
   14000abb6:	mov    r15d,eax
   14000abb9:	movsxd rax,DWORD PTR [r12+0x20]
   14000abbe:	mov    r13,rsi
   14000abc1:	mov    QWORD PTR [rbp+0x268],rax
   14000abc8:	cmp    rsi,rax
   14000abcb:	jge    0x14000ac50
   14000abd1:	lea    r14,[rsi+rsi*4]
   14000abd5:	shl    r14,0x3
   14000abd9:	nop    DWORD PTR [rax+0x0]
   14000abe0:	mov    rax,QWORD PTR [r12+0x28]
   14000abe5:	mov    rdi,QWORD PTR [rax+r14*1+0x10]
   14000abea:	call   QWORD PTR [rip+0x27778]        # 0x140032368
   14000abf0:	lea    rdx,[rip+0xffffffffffffe3f9]        # 0x140008ff0
   14000abf7:	mov    rcx,rdi
   14000abfa:	mov    rbx,rax
   14000abfd:	mov    rax,QWORD PTR [rdi]
   14000ac00:	call   QWORD PTR [rax]
   14000ac02:	test   al,al
   14000ac04:	je     0x14000adf5
   14000ac0a:	call   QWORD PTR [rip+0x27758]        # 0x140032368
   14000ac10:	sub    rax,rbx
   14000ac13:	xor    ecx,ecx
   14000ac15:	mov    rdx,rax
   14000ac18:	call   QWORD PTR [rip+0x27742]        # 0x140032360
   14000ac1e:	mov    rdx,QWORD PTR [r12+0x28]
   14000ac23:	lea    rcx,[rip+0x29f6e]        # 0x140034b98
   14000ac2a:	movaps xmm2,xmm0
   14000ac2d:	movq   r8,xmm2
   14000ac32:	mov    rdx,QWORD PTR [rdx+r14*1+0x8]
   14000ac37:	call   QWORD PTR [rip+0x27683]        # 0x1400322c0
   14000ac3d:	inc    r15d
   14000ac40:	inc    r13
   14000ac43:	add    r14,0x28
   14000ac47:	cmp    r13,QWORD PTR [rbp+0x268]
   14000ac4e:	jl     0x14000abe0
   14000ac50:	test   rsi,rsi
   14000ac53:	jle    0x14000ac84
   14000ac55:	xor    ebx,ebx
   14000ac57:	mov    rdi,rsi
   14000ac5a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ac60:	mov    rax,QWORD PTR [r12+0x28]
   14000ac65:	lea    rdx,[rip+0xffffffffffffe384]        # 0x140008ff0
   14000ac6c:	xor    r8d,r8d
   14000ac6f:	mov    rcx,QWORD PTR [rax+rbx*1+0x10]
   14000ac74:	mov    rax,QWORD PTR [rcx]
   14000ac77:	call   QWORD PTR [rax+0x40]
   14000ac7a:	lea    rbx,[rbx+0x28]
   14000ac7e:	sub    rdi,0x1
   14000ac82:	jne    0x14000ac60
   14000ac84:	mov    r15,QWORD PTR [rbp+0x268]
   14000ac8b:	cmp    rsi,r15
   14000ac8e:	jge    0x14000ad07
   14000ac90:	mov    r13d,DWORD PTR [rbp+0x278]
   14000ac97:	lea    r14,[rsi+rsi*4]
   14000ac9b:	shl    r14,0x3
   14000ac9f:	nop
   14000aca0:	mov    rax,QWORD PTR [r12+0x28]
   14000aca5:	mov    rdi,QWORD PTR [rax+r14*1+0x10]
   14000acaa:	call   QWORD PTR [rip+0x276b8]        # 0x140032368
   14000acb0:	mov    rbx,rax
   14000acb3:	mov    rcx,rdi
   14000acb6:	mov    rax,QWORD PTR [rdi]
   14000acb9:	call   QWORD PTR [rax+0x18]
   14000acbc:	cmp    eax,0x1
   14000acbf:	jne    0x14000af97
   14000acc5:	call   QWORD PTR [rip+0x2769d]        # 0x140032368
   14000accb:	sub    rax,rbx
   14000acce:	xor    ecx,ecx
   14000acd0:	mov    rdx,rax
   14000acd3:	call   QWORD PTR [rip+0x27687]        # 0x140032360
   14000acd9:	mov    rdx,QWORD PTR [r12+0x28]
   14000acde:	lea    rcx,[rip+0x29f1b]        # 0x140034c00
   14000ace5:	movaps xmm2,xmm0
   14000ace8:	movq   r8,xmm2
   14000aced:	mov    rdx,QWORD PTR [rdx+r14*1+0x8]
   14000acf2:	call   QWORD PTR [rip+0x275c8]        # 0x1400322c0
   14000acf8:	inc    r13d
   14000acfb:	inc    rsi
   14000acfe:	add    r14,0x28
   14000ad02:	cmp    rsi,r15
   14000ad05:	jl     0x14000aca0
   14000ad07:	mov    rax,QWORD PTR [r12]
   14000ad0b:	mov    rcx,r12
   14000ad0e:	call   QWORD PTR [rax+0x28]
   14000ad11:	mov    ebx,DWORD PTR [rsp+0x5c]
   14000ad15:	mov    rdx,QWORD PTR [rsp+0x50]
   14000ad1a:	and    ebx,0xc0000000
   14000ad20:	jne    0x14000ad39
   14000ad22:	test   rdx,rdx
   14000ad25:	je     0x14000ad39
   14000ad27:	mov    rax,QWORD PTR [rip+0x27662]        # 0x140032390
   14000ad2e:	mov    rcx,QWORD PTR [rax]
   14000ad31:	mov    rax,QWORD PTR [rcx]
   14000ad34:	call   QWORD PTR [rax+0x28]
   14000ad37:	xor    edx,edx
   14000ad39:	test   ebx,ebx
   14000ad3b:	jne    0x14000ad52
   14000ad3d:	test   rdx,rdx
   14000ad40:	je     0x14000ad52
   14000ad42:	mov    rax,QWORD PTR [rip+0x27647]        # 0x140032390
   14000ad49:	mov    rcx,QWORD PTR [rax]
   14000ad4c:	mov    rax,QWORD PTR [rcx]
   14000ad4f:	call   QWORD PTR [rax+0x28]
   14000ad52:	lea    rcx,[rbp-0x58]
   14000ad56:	call   0x14001c950
   14000ad5b:	mov    ebx,DWORD PTR [rbp-0x70]
   14000ad5e:	sub    ebx,0x1
   14000ad61:	js     0x14000ad89
   14000ad63:	movsxd rax,ebx
   14000ad66:	imul   rdi,rax,0x78
   14000ad6a:	nop    WORD PTR [rax+rax*1+0x0]
   14000ad70:	mov    rcx,QWORD PTR [rbp-0x68]
   14000ad74:	add    rcx,0x28
   14000ad78:	add    rcx,rdi
   14000ad7b:	call   0x14001c950
   14000ad80:	add    rdi,0xffffffffffffff88
   14000ad84:	sub    ebx,0x1
   14000ad87:	jns    0x14000ad70
   14000ad89:	mov    eax,DWORD PTR [rbp-0x5c]
   14000ad8c:	mov    rdx,QWORD PTR [rbp-0x68]
   14000ad90:	mov    DWORD PTR [rbp-0x70],0x0
   14000ad97:	test   eax,0xc0000000
   14000ad9c:	jne    0x14000addf
   14000ad9e:	test   rdx,rdx
   14000ada1:	je     0x14000adbc
   14000ada3:	mov    rax,QWORD PTR [rip+0x275e6]        # 0x140032390
   14000adaa:	mov    rcx,QWORD PTR [rax]
   14000adad:	mov    rax,QWORD PTR [rcx]
   14000adb0:	call   QWORD PTR [rax+0x28]
   14000adb3:	mov    eax,DWORD PTR [rbp-0x5c]
   14000adb6:	xor    edx,edx
   14000adb8:	mov    QWORD PTR [rbp-0x68],rdx
   14000adbc:	mov    DWORD PTR [rbp-0x60],0x0
   14000adc3:	test   eax,0xc0000000
   14000adc8:	jne    0x14000addf
   14000adca:	test   rdx,rdx
   14000adcd:	je     0x14000addf
   14000adcf:	mov    rax,QWORD PTR [rip+0x275ba]        # 0x140032390
   14000add6:	mov    rcx,QWORD PTR [rax]
   14000add9:	mov    rax,QWORD PTR [rcx]
   14000addc:	call   QWORD PTR [rax+0x28]
   14000addf:	mov    al,0x1
   14000ade1:	add    rsp,0x318
   14000ade8:	pop    r15
   14000adea:	pop    r14
   14000adec:	pop    r13
   14000adee:	pop    r12
   14000adf0:	pop    rdi
   14000adf1:	pop    rsi
   14000adf2:	pop    rbx
   14000adf3:	pop    rbp
   14000adf4:	ret    
   14000adf5:	mov    eax,DWORD PTR [rbp+0x270]
   14000adfb:	test   eax,eax
   14000adfd:	jne    0x14000aeb4
   14000ae03:	lea    edx,[rax+0x4]
   14000ae06:	mov    rax,QWORD PTR [rip+0x2757b]        # 0x140032388
   14000ae0d:	mov    ecx,DWORD PTR [rax]
   14000ae0f:	call   QWORD PTR [rip+0x27693]        # 0x1400324a8
   14000ae15:	test   al,al
   14000ae17:	je     0x14000ae6f
   14000ae19:	mov    DWORD PTR [rsp+0x50],0x500
   14000ae21:	lea    rax,[rip+0x29768]        # 0x140034590
   14000ae28:	mov    QWORD PTR [rsp+0x48],rax
   14000ae2d:	lea    r9,[rip+0x29d2c]        # 0x140034b60
   14000ae34:	lea    rax,[rip+0x29c3d]        # 0x140034a78
   14000ae3b:	mov    edx,0x4
   14000ae40:	mov    QWORD PTR [rsp+0x58],rax
   14000ae45:	lea    r8,[rsp+0x48]
   14000ae4a:	movsxd rax,r15d
   14000ae4d:	lea    rcx,[rax+rax*4]
   14000ae51:	mov    rax,QWORD PTR [r12+0x28]
   14000ae56:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14000ae5b:	mov    rax,QWORD PTR [rip+0x27526]        # 0x140032388
   14000ae62:	mov    QWORD PTR [rsp+0x20],rcx
   14000ae67:	mov    ecx,DWORD PTR [rax]
   14000ae69:	call   QWORD PTR [rip+0x27629]        # 0x140032498
   14000ae6f:	call   QWORD PTR [rip+0x27713]        # 0x140032588
   14000ae75:	test   al,al
   14000ae77:	je     0x14000aea8
   14000ae79:	call   QWORD PTR [rip+0x27601]        # 0x140032480
   14000ae7f:	lea    rdx,[rip+0x27926]        # 0x1400327ac
   14000ae86:	xorps  xmm0,xmm0
   14000ae89:	mov    r8b,0x1
   14000ae8c:	mov    DWORD PTR [rsp+0x50],eax
   14000ae90:	mov    QWORD PTR [rsp+0x48],rdx
   14000ae95:	xor    ecx,ecx
   14000ae97:	lea    rdx,[rsp+0x48]
   14000ae9c:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000aea2:	call   QWORD PTR [rip+0x275d0]        # 0x140032478
   14000aea8:	mov    ecx,0x1
   14000aead:	call   QWORD PTR [rip+0x27395]        # 0x140032248
   14000aeb3:	int3   
   14000aeb4:	cmp    eax,0x1
   14000aeb7:	jne    0x14000aed7
   14000aeb9:	mov    rdx,QWORD PTR [r12+0x28]
   14000aebe:	movsxd rax,r15d
   14000aec1:	lea    rcx,[rax+rax*4]
   14000aec5:	mov    rdx,QWORD PTR [rdx+rcx*8+0x8]
   14000aeca:	lea    rcx,[rip+0x29c8f]        # 0x140034b60
   14000aed1:	call   QWORD PTR [rip+0x274d9]        # 0x1400323b0
   14000aed7:	mov    ebx,DWORD PTR [rsp+0x5c]
   14000aedb:	mov    rdx,QWORD PTR [rsp+0x50]
   14000aee0:	and    ebx,0xc0000000
   14000aee6:	jne    0x14000aeff
   14000aee8:	test   rdx,rdx
   14000aeeb:	je     0x14000aeff
   14000aeed:	mov    rax,QWORD PTR [rip+0x2749c]        # 0x140032390
   14000aef4:	mov    rcx,QWORD PTR [rax]
   14000aef7:	mov    rax,QWORD PTR [rcx]
   14000aefa:	call   QWORD PTR [rax+0x28]
   14000aefd:	xor    edx,edx
   14000aeff:	test   ebx,ebx
   14000af01:	jne    0x14000af18
   14000af03:	test   rdx,rdx
   14000af06:	je     0x14000af18
   14000af08:	mov    rax,QWORD PTR [rip+0x27481]        # 0x140032390
   14000af0f:	mov    rcx,QWORD PTR [rax]
   14000af12:	mov    rax,QWORD PTR [rcx]
   14000af15:	call   QWORD PTR [rax+0x28]
   14000af18:	lea    rcx,[rbp-0x58]
   14000af1c:	call   0x14001c950
   14000af21:	mov    ebx,DWORD PTR [rbp-0x70]
   14000af24:	sub    ebx,0x1
   14000af27:	js     0x14000af49
   14000af29:	movsxd rax,ebx
   14000af2c:	imul   rdi,rax,0x78
   14000af30:	mov    rcx,QWORD PTR [rbp-0x68]
   14000af34:	add    rcx,0x28
   14000af38:	add    rcx,rdi
   14000af3b:	call   0x14001c950
   14000af40:	add    rdi,0xffffffffffffff88
   14000af44:	sub    ebx,0x1
   14000af47:	jns    0x14000af30
   14000af49:	mov    eax,DWORD PTR [rbp-0x5c]
   14000af4c:	mov    rdx,QWORD PTR [rbp-0x68]
   14000af50:	mov    DWORD PTR [rbp-0x70],0x0
   14000af57:	test   eax,0xc0000000
   14000af5c:	jne    0x14000a98e
   14000af62:	test   rdx,rdx
   14000af65:	je     0x14000af80
   14000af67:	mov    rax,QWORD PTR [rip+0x27422]        # 0x140032390
   14000af6e:	mov    rcx,QWORD PTR [rax]
   14000af71:	mov    rax,QWORD PTR [rcx]
   14000af74:	call   QWORD PTR [rax+0x28]
   14000af77:	mov    eax,DWORD PTR [rbp-0x5c]
   14000af7a:	xor    edx,edx
   14000af7c:	mov    QWORD PTR [rbp-0x68],rdx
   14000af80:	mov    DWORD PTR [rbp-0x60],0x0
   14000af87:	test   eax,0xc0000000
   14000af8c:	jne    0x14000a98e
   14000af92:	jmp    0x14000a979
   14000af97:	mov    eax,DWORD PTR [rbp+0x270]
   14000af9d:	test   eax,eax
   14000af9f:	jne    0x14000b056
   14000afa5:	lea    edx,[rax+0x4]
   14000afa8:	mov    rax,QWORD PTR [rip+0x273d9]        # 0x140032388
   14000afaf:	mov    ecx,DWORD PTR [rax]
   14000afb1:	call   QWORD PTR [rip+0x274f1]        # 0x1400324a8
   14000afb7:	test   al,al
   14000afb9:	je     0x14000b011
   14000afbb:	mov    DWORD PTR [rsp+0x50],0x518
   14000afc3:	lea    rax,[rip+0x295c6]        # 0x140034590
   14000afca:	mov    QWORD PTR [rsp+0x48],rax
   14000afcf:	lea    r9,[rip+0x29bf2]        # 0x140034bc8
   14000afd6:	lea    rax,[rip+0x29a9b]        # 0x140034a78
   14000afdd:	mov    edx,0x4
   14000afe2:	mov    QWORD PTR [rsp+0x58],rax
   14000afe7:	lea    r8,[rsp+0x48]
   14000afec:	movsxd rax,r13d
   14000afef:	lea    rcx,[rax+rax*4]
   14000aff3:	mov    rax,QWORD PTR [r12+0x28]
   14000aff8:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14000affd:	mov    rax,QWORD PTR [rip+0x27384]        # 0x140032388
   14000b004:	mov    QWORD PTR [rsp+0x20],rcx
   14000b009:	mov    ecx,DWORD PTR [rax]
   14000b00b:	call   QWORD PTR [rip+0x27487]        # 0x140032498
   14000b011:	call   QWORD PTR [rip+0x27571]        # 0x140032588
   14000b017:	test   al,al
   14000b019:	je     0x14000b04a
   14000b01b:	call   QWORD PTR [rip+0x2745f]        # 0x140032480
   14000b021:	lea    rdx,[rip+0x27784]        # 0x1400327ac
   14000b028:	xorps  xmm0,xmm0
   14000b02b:	mov    r8b,0x1
   14000b02e:	mov    DWORD PTR [rsp+0x50],eax
   14000b032:	mov    QWORD PTR [rsp+0x48],rdx
   14000b037:	xor    ecx,ecx
   14000b039:	lea    rdx,[rsp+0x48]
   14000b03e:	movdqu XMMWORD PTR [rsp+0x58],xmm0
   14000b044:	call   QWORD PTR [rip+0x2742e]        # 0x140032478
   14000b04a:	mov    ecx,0x1
   14000b04f:	call   QWORD PTR [rip+0x271f3]        # 0x140032248
   14000b055:	int3   
   14000b056:	cmp    eax,0x1
   14000b059:	jne    0x14000b079
   14000b05b:	mov    rdx,QWORD PTR [r12+0x28]
   14000b060:	movsxd rax,r13d
   14000b063:	lea    rcx,[rax+rax*4]
   14000b067:	mov    rdx,QWORD PTR [rdx+rcx*8+0x8]
   14000b06c:	lea    rcx,[rip+0x29b55]        # 0x140034bc8
   14000b073:	call   QWORD PTR [rip+0x27337]        # 0x1400323b0
   14000b079:	mov    ebx,DWORD PTR [rsp+0x5c]
   14000b07d:	mov    rdx,QWORD PTR [rsp+0x50]
   14000b082:	and    ebx,0xc0000000
   14000b088:	jne    0x14000b0a1
   14000b08a:	test   rdx,rdx
   14000b08d:	je     0x14000b0a1
   14000b08f:	mov    rax,QWORD PTR [rip+0x272fa]        # 0x140032390
   14000b096:	mov    rcx,QWORD PTR [rax]
   14000b099:	mov    rax,QWORD PTR [rcx]
   14000b09c:	call   QWORD PTR [rax+0x28]
   14000b09f:	xor    edx,edx
   14000b0a1:	test   ebx,ebx
   14000b0a3:	jne    0x14000b0ba
   14000b0a5:	test   rdx,rdx
   14000b0a8:	je     0x14000b0ba
   14000b0aa:	mov    rax,QWORD PTR [rip+0x272df]        # 0x140032390
   14000b0b1:	mov    rcx,QWORD PTR [rax]
   14000b0b4:	mov    rax,QWORD PTR [rcx]
   14000b0b7:	call   QWORD PTR [rax+0x28]
   14000b0ba:	lea    rcx,[rbp-0x58]
   14000b0be:	call   0x14001c950
   14000b0c3:	mov    ebx,DWORD PTR [rbp-0x70]
   14000b0c6:	sub    ebx,0x1
   14000b0c9:	js     0x14000af49
   14000b0cf:	movsxd rax,ebx
   14000b0d2:	imul   rdi,rax,0x78
   14000b0d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b0e0:	mov    rcx,QWORD PTR [rbp-0x68]
   14000b0e4:	add    rcx,0x28
   14000b0e8:	add    rcx,rdi
   14000b0eb:	call   0x14001c950
   14000b0f0:	add    rdi,0xffffffffffffff88
   14000b0f4:	sub    ebx,0x1
   14000b0f7:	jns    0x14000b0e0
   14000b0f9:	jmp    0x14000af49
   14000b0fe:	int3   
   14000b0ff:	int3   
   14000b100:	rex push rsi
   14000b102:	sub    rsp,0x20
   14000b106:	cmp    BYTE PTR [rcx+0x146],0x0
   14000b10d:	mov    rsi,rcx
   14000b110:	jne    0x14000b163
   14000b112:	mov    eax,DWORD PTR [rcx+0x20]
   14000b115:	sub    eax,0x1
   14000b118:	mov    QWORD PTR [rsp+0x30],rbx
   14000b11d:	movsxd rbx,eax
   14000b120:	mov    BYTE PTR [rcx+0x146],0x1
   14000b127:	js     0x14000b15e
   14000b129:	mov    QWORD PTR [rsp+0x38],rdi
   14000b12e:	lea    rdi,[rbx+rbx*4]
   14000b132:	shl    rdi,0x3
   14000b136:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000b140:	mov    rax,QWORD PTR [rsi+0x28]
   14000b144:	mov    rcx,QWORD PTR [rax+rdi*1+0x10]
   14000b149:	mov    rax,QWORD PTR [rcx]
   14000b14c:	call   QWORD PTR [rax+0x28]
   14000b14f:	sub    rbx,0x1
   14000b153:	lea    rdi,[rdi-0x28]
   14000b157:	jns    0x14000b140
   14000b159:	mov    rdi,QWORD PTR [rsp+0x38]
   14000b15e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b163:	add    rsp,0x20
   14000b167:	pop    rsi
   14000b168:	ret    
   14000b169:	int3   
   14000b16a:	int3   
   14000b16b:	int3   
   14000b16c:	int3   
   14000b16d:	int3   
   14000b16e:	int3   
   14000b16f:	int3   
   14000b170:	mov    QWORD PTR [rsp+0x10],rbx
   14000b175:	push   rdi
   14000b176:	sub    rsp,0x20
   14000b17a:	mov    ebx,DWORD PTR [rcx]
   14000b17c:	mov    rdi,rcx
   14000b17f:	sub    ebx,0x1
   14000b182:	js     0x14000b1ae
   14000b184:	movsxd rax,ebx
   14000b187:	mov    QWORD PTR [rsp+0x30],rsi
   14000b18c:	imul   rsi,rax,0x78
   14000b190:	mov    rcx,QWORD PTR [rdi+0x8]
   14000b194:	add    rcx,0x28
   14000b198:	add    rcx,rsi
   14000b19b:	call   0x14001c950
   14000b1a0:	add    rsi,0xffffffffffffff88
   14000b1a4:	sub    ebx,0x1
   14000b1a7:	jns    0x14000b190
   14000b1a9:	mov    rsi,QWORD PTR [rsp+0x30]
   14000b1ae:	xor    ebx,ebx
   14000b1b0:	mov    DWORD PTR [rdi],ebx
   14000b1b2:	test   DWORD PTR [rdi+0x14],0xc0000000
   14000b1b9:	jne    0x14000b1db
   14000b1bb:	mov    rdx,QWORD PTR [rdi+0x8]
   14000b1bf:	test   rdx,rdx
   14000b1c2:	je     0x14000b1d8
   14000b1c4:	mov    rax,QWORD PTR [rip+0x271c5]        # 0x140032390
   14000b1cb:	mov    rcx,QWORD PTR [rax]
   14000b1ce:	mov    rax,QWORD PTR [rcx]
   14000b1d1:	call   QWORD PTR [rax+0x28]
   14000b1d4:	mov    QWORD PTR [rdi+0x8],rbx
   14000b1d8:	mov    DWORD PTR [rdi+0x10],ebx
   14000b1db:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b1e0:	add    rsp,0x20
   14000b1e4:	pop    rdi
   14000b1e5:	ret    
   14000b1e6:	int3   
   14000b1e7:	int3   
   14000b1e8:	int3   
   14000b1e9:	int3   
   14000b1ea:	int3   
   14000b1eb:	int3   
   14000b1ec:	int3   
   14000b1ed:	int3   
   14000b1ee:	int3   
   14000b1ef:	int3   
   14000b1f0:	mov    QWORD PTR [rsp+0x20],rbx
   14000b1f5:	push   rbp
   14000b1f6:	push   r14
   14000b1f8:	push   r15
   14000b1fa:	sub    rsp,0x20
   14000b1fe:	mov    r15,rcx
   14000b201:	xor    ebx,ebx
   14000b203:	mov    DWORD PTR [rcx+0x68],ebx
   14000b206:	sub    rcx,0xffffffffffffff80
   14000b20a:	call   0x14001d800
   14000b20f:	mov    ebp,DWORD PTR [r15+0x20]
   14000b213:	test   ebp,ebp
   14000b215:	jle    0x14000b2a4
   14000b21b:	mov    QWORD PTR [rsp+0x48],rsi
   14000b220:	mov    esi,ebx
   14000b222:	mov    QWORD PTR [rsp+0x50],rdi
   14000b227:	nop    WORD PTR [rax+rax*1+0x0]
   14000b230:	mov    rdi,QWORD PTR [r15+0x28]
   14000b234:	mov    rcx,QWORD PTR [rdi+rsi*1+0x10]
   14000b239:	test   rcx,rcx
   14000b23c:	je     0x14000b290
   14000b23e:	cmp    QWORD PTR [rdi+rsi*1+0x8],0x0
   14000b244:	je     0x14000b290
   14000b246:	mov    rax,QWORD PTR [rcx]
   14000b249:	call   QWORD PTR [rax+0x48]
   14000b24c:	test   al,al
   14000b24e:	je     0x14000b290
   14000b250:	mov    r8,QWORD PTR [rdi+rsi*1+0x8]
   14000b255:	lea    rcx,[r15+0x80]
   14000b25c:	lea    rdx,[rsp+0x40]
   14000b261:	call   0x14001c980
   14000b266:	movzx  edi,WORD PTR [rsp+0x40]
   14000b26b:	mov    edx,DWORD PTR [r15+0x68]
   14000b26f:	cmp    edx,edi
   14000b271:	jg     0x14000b288
   14000b273:	lea    r8d,[rdi+0x1]
   14000b277:	cmp    edx,r8d
   14000b27a:	jge    0x14000b288
   14000b27c:	sub    r8d,edx
   14000b27f:	lea    rcx,[r15+0x68]
   14000b283:	call   0x140009c10
   14000b288:	mov    rax,QWORD PTR [r15+0x70]
   14000b28c:	mov    WORD PTR [rax+rdi*2],bx
   14000b290:	inc    ebx
   14000b292:	add    rsi,0x28
   14000b296:	cmp    ebx,ebp
   14000b298:	jl     0x14000b230
   14000b29a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000b29f:	mov    rsi,QWORD PTR [rsp+0x48]
   14000b2a4:	mov    rbx,QWORD PTR [rsp+0x58]
   14000b2a9:	add    rsp,0x20
   14000b2ad:	pop    r15
   14000b2af:	pop    r14
   14000b2b1:	pop    rbp
   14000b2b2:	ret    
   14000b2b3:	int3   
   14000b2b4:	int3   
   14000b2b5:	int3   
   14000b2b6:	int3   
   14000b2b7:	int3   
   14000b2b8:	int3   
   14000b2b9:	int3   
   14000b2ba:	int3   
   14000b2bb:	int3   
   14000b2bc:	int3   
   14000b2bd:	int3   
   14000b2be:	int3   
   14000b2bf:	int3   
   14000b2c0:	mov    QWORD PTR [rsp+0x10],rbx
   14000b2c5:	mov    QWORD PTR [rsp+0x18],rsi
   14000b2ca:	push   rdi
   14000b2cb:	sub    rsp,0x20
   14000b2cf:	mov    rdi,rcx
   14000b2d2:	xor    ebx,ebx
   14000b2d4:	movsxd rcx,DWORD PTR [rcx+0x20]
   14000b2d8:	mov    rsi,rdx
   14000b2db:	test   ecx,ecx
   14000b2dd:	jle    0x14000b3d3
   14000b2e3:	mov    rax,QWORD PTR [rdi+0x28]
   14000b2e7:	mov    r8d,ebx
   14000b2ea:	add    rax,0x10
   14000b2ee:	xchg   ax,ax
   14000b2f0:	cmp    QWORD PTR [rax],rsi
   14000b2f3:	je     0x14000b313
   14000b2f5:	inc    ebx
   14000b2f7:	inc    r8
   14000b2fa:	add    rax,0x28
   14000b2fe:	cmp    r8,rcx
   14000b301:	jl     0x14000b2f0
   14000b303:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b308:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b30d:	add    rsp,0x20
   14000b311:	pop    rdi
   14000b312:	ret    
   14000b313:	cmp    ebx,0xffffffff
   14000b316:	je     0x14000b3d3
   14000b31c:	mov    rax,QWORD PTR [rdx]
   14000b31f:	mov    rcx,rsi
   14000b322:	mov    QWORD PTR [rsp+0x30],r14
   14000b327:	call   QWORD PTR [rax+0x20]
   14000b32a:	mov    rax,QWORD PTR [rsi]
   14000b32d:	mov    rcx,rsi
   14000b330:	call   QWORD PTR [rax+0x8]
   14000b333:	mov    rsi,QWORD PTR [rdi+0x28]
   14000b337:	movsxd rax,ebx
   14000b33a:	lea    rcx,[rax+rax*4]
   14000b33e:	mov    rdx,QWORD PTR [rsi+rcx*8+0x18]
   14000b343:	lea    r14,[rcx*8+0x0]
   14000b34b:	test   rdx,rdx
   14000b34e:	je     0x14000b358
   14000b350:	mov    rcx,rdi
   14000b353:	call   0x14000b780
   14000b358:	mov    rdx,QWORD PTR [rsi+r14*1]
   14000b35c:	test   rdx,rdx
   14000b35f:	je     0x14000b371
   14000b361:	mov    rax,QWORD PTR [rip+0x27028]        # 0x140032390
   14000b368:	mov    rcx,QWORD PTR [rax]
   14000b36b:	mov    rax,QWORD PTR [rcx]
   14000b36e:	call   QWORD PTR [rax+0x28]
   14000b371:	mov    rdx,QWORD PTR [rsi+r14*1+0x8]
   14000b376:	test   rdx,rdx
   14000b379:	je     0x14000b38b
   14000b37b:	mov    rax,QWORD PTR [rip+0x2700e]        # 0x140032390
   14000b382:	mov    rcx,QWORD PTR [rax]
   14000b385:	mov    rax,QWORD PTR [rcx]
   14000b388:	call   QWORD PTR [rax+0x28]
   14000b38b:	mov    eax,DWORD PTR [rdi+0x20]
   14000b38e:	test   eax,eax
   14000b390:	jle    0x14000b3c6
   14000b392:	dec    eax
   14000b394:	cmp    ebx,eax
   14000b396:	je     0x14000b3c3
   14000b398:	mov    rdx,QWORD PTR [rdi+0x28]
   14000b39c:	cdqe   
   14000b39e:	lea    rcx,[rax+rax*4]
   14000b3a2:	movups xmm0,XMMWORD PTR [rdx+rcx*8]
   14000b3a6:	movups XMMWORD PTR [r14+rdx*1],xmm0
   14000b3ab:	movups xmm1,XMMWORD PTR [rdx+rcx*8+0x10]
   14000b3b0:	movups XMMWORD PTR [r14+rdx*1+0x10],xmm1
   14000b3b6:	movsd  xmm0,QWORD PTR [rdx+rcx*8+0x20]
   14000b3bc:	movsd  QWORD PTR [r14+rdx*1+0x20],xmm0
   14000b3c3:	dec    DWORD PTR [rdi+0x20]
   14000b3c6:	mov    rcx,rdi
   14000b3c9:	call   0x14000b1f0
   14000b3ce:	mov    r14,QWORD PTR [rsp+0x30]
   14000b3d3:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b3d8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b3dd:	add    rsp,0x20
   14000b3e1:	pop    rdi
   14000b3e2:	ret    
   14000b3e3:	int3   
   14000b3e4:	int3   
   14000b3e5:	int3   
   14000b3e6:	int3   
   14000b3e7:	int3   
   14000b3e8:	int3   
   14000b3e9:	int3   
   14000b3ea:	int3   
   14000b3eb:	int3   
   14000b3ec:	int3   
   14000b3ed:	int3   
   14000b3ee:	int3   
   14000b3ef:	int3   
   14000b3f0:	rex push rbx
   14000b3f2:	sub    rsp,0x20
   14000b3f6:	xor    ebx,ebx
   14000b3f8:	mov    BYTE PTR [rcx+0xfa],dl
   14000b3fe:	mov    ecx,DWORD PTR [rip+0x3bd08]        # 0x14004710c
   14000b404:	test   dl,dl
   14000b406:	setne  bl
   14000b409:	lea    edx,[rbx+0x1]
   14000b40c:	call   QWORD PTR [rip+0x26eb6]        # 0x1400322c8
   14000b412:	mov    ecx,DWORD PTR [rip+0x3bce8]        # 0x140047100
   14000b418:	lea    edx,[rbx+0x1]
   14000b41b:	add    rsp,0x20
   14000b41f:	pop    rbx
   14000b420:	rex.W jmp QWORD PTR [rip+0x26ea1]        # 0x1400322c8
   14000b427:	int3   
   14000b428:	int3   
   14000b429:	int3   
   14000b42a:	int3   
   14000b42b:	int3   
   14000b42c:	int3   
   14000b42d:	int3   
   14000b42e:	int3   
   14000b42f:	int3   
   14000b430:	mov    DWORD PTR [rcx+0x140],edx
   14000b436:	ret    
   14000b437:	int3   
   14000b438:	int3   
   14000b439:	int3   
   14000b43a:	int3   
   14000b43b:	int3   
   14000b43c:	int3   
   14000b43d:	int3   
   14000b43e:	int3   
   14000b43f:	int3   
   14000b440:	mov    QWORD PTR [rsp+0x20],rbp
   14000b445:	push   rsi
   14000b446:	sub    rsp,0x20
   14000b44a:	mov    ebp,edx
   14000b44c:	mov    rsi,rcx
   14000b44f:	call   0x14000b100
   14000b454:	cmp    DWORD PTR [rsi+0x140],ebp
   14000b45a:	jl     0x14000b536
   14000b460:	mov    QWORD PTR [rsp+0x30],rbx
   14000b465:	mov    QWORD PTR [rsp+0x38],rdi
   14000b46a:	mov    QWORD PTR [rsp+0x40],r14
   14000b46f:	nop
   14000b470:	mov    eax,DWORD PTR [rsi+0x20]
   14000b473:	sub    eax,0x1
   14000b476:	movsxd rbx,eax
   14000b479:	js     0x14000b4d4
   14000b47b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000b480:	mov    r14,QWORD PTR [rsi+0x28]
   14000b484:	lea    rax,[rbx+rbx*4]
   14000b488:	lea    rdi,[rax*8+0x0]
   14000b490:	mov    eax,DWORD PTR [rsi+0x140]
   14000b496:	cmp    DWORD PTR [r14+rdi*1+0x20],eax
   14000b49b:	jne    0x14000b4ce
   14000b49d:	mov    r14,QWORD PTR [r14+rdi*1+0x10]
   14000b4a2:	mov    rcx,r14
   14000b4a5:	mov    rax,QWORD PTR [r14]
   14000b4a8:	call   QWORD PTR [rax+0x20]
   14000b4ab:	test   rbx,rbx
   14000b4ae:	js     0x14000b4ce
   14000b4b0:	movsxd rcx,DWORD PTR [rsi+0x20]
   14000b4b4:	cmp    rbx,rcx
   14000b4b7:	jge    0x14000b4c4
   14000b4b9:	mov    rax,QWORD PTR [rsi+0x28]
   14000b4bd:	cmp    QWORD PTR [rax+rdi*1+0x10],r14
   14000b4c2:	je     0x14000b4ce
   14000b4c4:	sub    rdi,0x28
   14000b4c8:	sub    rbx,0x1
   14000b4cc:	jns    0x14000b4b4
   14000b4ce:	sub    rbx,0x1
   14000b4d2:	jns    0x14000b480
   14000b4d4:	mov    eax,DWORD PTR [rsi+0x20]
   14000b4d7:	sub    eax,0x1
   14000b4da:	movsxd rbx,eax
   14000b4dd:	js     0x14000b515
   14000b4df:	lea    rdi,[rbx+rbx*4]
   14000b4e3:	shl    rdi,0x3
   14000b4e7:	nop    WORD PTR [rax+rax*1+0x0]
   14000b4f0:	mov    rcx,QWORD PTR [rsi+0x28]
   14000b4f4:	mov    eax,DWORD PTR [rsi+0x140]
   14000b4fa:	cmp    DWORD PTR [rcx+rdi*1+0x20],eax
   14000b4fe:	jne    0x14000b50b
   14000b500:	mov    rcx,QWORD PTR [rcx+rdi*1+0x10]
   14000b505:	mov    rax,QWORD PTR [rcx]
   14000b508:	call   QWORD PTR [rax+0x8]
   14000b50b:	sub    rdi,0x28
   14000b50f:	sub    rbx,0x1
   14000b513:	jns    0x14000b4f0
   14000b515:	dec    DWORD PTR [rsi+0x140]
   14000b51b:	cmp    DWORD PTR [rsi+0x140],ebp
   14000b521:	jge    0x14000b470
   14000b527:	mov    r14,QWORD PTR [rsp+0x40]
   14000b52c:	mov    rdi,QWORD PTR [rsp+0x38]
   14000b531:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b536:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b53b:	add    rsp,0x20
   14000b53f:	pop    rsi
   14000b540:	ret    
   14000b541:	int3   
   14000b542:	int3   
   14000b543:	int3   
   14000b544:	int3   
   14000b545:	int3   
   14000b546:	int3   
   14000b547:	int3   
   14000b548:	int3   
   14000b549:	int3   
   14000b54a:	int3   
   14000b54b:	int3   
   14000b54c:	int3   
   14000b54d:	int3   
   14000b54e:	int3   
   14000b54f:	int3   
   14000b550:	mov    QWORD PTR [rsp+0x8],rbx
   14000b555:	push   rbp
   14000b556:	push   rsi
   14000b557:	push   rdi
   14000b558:	push   r12
   14000b55a:	push   r13
   14000b55c:	push   r14
   14000b55e:	push   r15
   14000b560:	sub    rsp,0x30
   14000b564:	movzx  ebx,WORD PTR [rdx+0x32]
   14000b568:	mov    rsi,r8
   14000b56b:	mov    ecx,DWORD PTR [r8]
   14000b56e:	mov    eax,ebx
   14000b570:	sub    eax,ecx
   14000b572:	mov    r12,rdx
   14000b575:	test   eax,eax
   14000b577:	jle    0x14000b588
   14000b579:	mov    edx,ecx
   14000b57b:	mov    r8d,eax
   14000b57e:	mov    rcx,rsi
   14000b581:	call   0x1400038c0
   14000b586:	jmp    0x14000b591
   14000b588:	jns    0x14000b591
   14000b58a:	neg    eax
   14000b58c:	sub    ecx,eax
   14000b58e:	mov    DWORD PTR [r8],ecx
   14000b591:	xor    r8d,r8d
   14000b594:	mov    QWORD PTR [rsp+0x80],rbx
   14000b59c:	xor    ecx,ecx
   14000b59e:	mov    rdx,rbx
   14000b5a1:	test   ebx,ebx
   14000b5a3:	je     0x14000b5d0
   14000b5a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000b5b0:	mov    rax,QWORD PTR [rsi+0x8]
   14000b5b4:	mov    DWORD PTR [rax+rcx*4],r8d
   14000b5b8:	inc    r8d
   14000b5bb:	inc    rcx
   14000b5be:	cmp    rcx,rbx
   14000b5c1:	jl     0x14000b5b0
   14000b5c3:	nop    DWORD PTR [rax+0x0]
   14000b5c7:	nop    WORD PTR [rax+rax*1+0x0]
   14000b5d0:	mov    r15d,0x1
   14000b5d6:	xor    r13b,r13b
   14000b5d9:	mov    DWORD PTR [rsp+0x78],r15d
   14000b5de:	mov    r14d,r15d
   14000b5e1:	cmp    r15,rdx
   14000b5e4:	jae    0x14000b677
   14000b5ea:	nop    WORD PTR [rax+rax*1+0x0]
   14000b5f0:	test   r15d,r15d
   14000b5f3:	jle    0x14000b65e
   14000b5f5:	movsxd rax,r15d
   14000b5f8:	xor    ebx,ebx
   14000b5fa:	mov    ebp,r15d
   14000b5fd:	xor    edi,edi
   14000b5ff:	lea    rax,[rax*4+0x0]
   14000b607:	mov    r15,rax
   14000b60a:	nop    WORD PTR [rax+rax*1+0x0]
   14000b610:	mov    rax,QWORD PTR [rsi+0x8]
   14000b614:	mov    rcx,r12
   14000b617:	lea    r8,[rdi+rax*1]
   14000b61b:	lea    rdx,[r15+rax*1]
   14000b61f:	call   0x140009240
   14000b624:	test   al,al
   14000b626:	je     0x14000b643
   14000b628:	mov    rax,QWORD PTR [rsi+0x8]
   14000b62c:	mov    r13b,0x1
   14000b62f:	mov    edx,DWORD PTR [rax+r14*4]
   14000b633:	lea    rcx,[rax+r14*4]
   14000b637:	mov    eax,DWORD PTR [rbx+rax*1]
   14000b63a:	mov    DWORD PTR [rcx],eax
   14000b63c:	mov    rax,QWORD PTR [rsi+0x8]
   14000b640:	mov    DWORD PTR [rbx+rax*1],edx
   14000b643:	add    rdi,0x4
   14000b647:	add    rbx,0x4
   14000b64b:	sub    rbp,0x1
   14000b64f:	jne    0x14000b610
   14000b651:	mov    r15d,DWORD PTR [rsp+0x78]
   14000b656:	mov    rdx,QWORD PTR [rsp+0x80]
   14000b65e:	inc    r15d
   14000b661:	inc    r14
   14000b664:	mov    DWORD PTR [rsp+0x78],r15d
   14000b669:	cmp    r14,rdx
   14000b66c:	jl     0x14000b5f0
   14000b66e:	test   r13b,r13b
   14000b671:	jne    0x14000b5d0
   14000b677:	mov    r14,QWORD PTR [rsp+0x80]
   14000b67f:	nop
   14000b680:	mov    edi,0x1
   14000b685:	mov    r15b,0x1
   14000b688:	cmp    rdi,r14
   14000b68b:	jae    0x14000b75e
   14000b691:	mov    rax,QWORD PTR [rsi+0x8]
   14000b695:	mov    ecx,DWORD PTR [rax+rdi*4-0x4]
   14000b699:	mov    ebp,DWORD PTR [rax+rdi*4]
   14000b69c:	cmp    ebp,ecx
   14000b69e:	jg     0x14000b749
   14000b6a4:	mov    WORD PTR [rsp+0x78],cx
   14000b6a9:	lea    rdx,[rsp+0x78]
   14000b6ae:	lea    rcx,[r12+0x18]
   14000b6b3:	call   0x14001db60
   14000b6b8:	lea    rdx,[rsp+0x80]
   14000b6c0:	mov    WORD PTR [rsp+0x80],bp
   14000b6c8:	lea    rcx,[r12+0x18]
   14000b6cd:	mov    r13,rax
   14000b6d0:	call   0x14001db60
   14000b6d5:	mov    r8,rax
   14000b6d8:	lea    rdx,[rsp+0x88]
   14000b6e0:	lea    rcx,[r12+0x18]
   14000b6e5:	call   0x14001c980
   14000b6ea:	movzx  ebx,WORD PTR [rsp+0x88]
   14000b6f2:	mov    edx,DWORD PTR [r12]
   14000b6f6:	cmp    edx,ebx
   14000b6f8:	jg     0x14000b70e
   14000b6fa:	lea    r8d,[rbx+0x1]
   14000b6fe:	cmp    edx,r8d
   14000b701:	jge    0x14000b70e
   14000b703:	sub    r8d,edx
   14000b706:	mov    rcx,r12
   14000b709:	call   0x140009c90
   14000b70e:	imul   rcx,rbx,0x78
   14000b712:	mov    r8,r13
   14000b715:	lea    rdx,[rsp+0x20]
   14000b71a:	add    rcx,0x28
   14000b71e:	add    rcx,QWORD PTR [r12+0x8]
   14000b723:	call   0x14001ce30
   14000b728:	mov    ecx,0xffff
   14000b72d:	cmp    WORD PTR [rax],cx
   14000b730:	jne    0x14000b749
   14000b732:	mov    rax,QWORD PTR [rsi+0x8]
   14000b736:	xor    r15b,r15b
   14000b739:	mov    ecx,DWORD PTR [rax+rdi*4]
   14000b73c:	lea    rdx,[rax+rdi*4]
   14000b740:	mov    eax,DWORD PTR [rax+rdi*4-0x4]
   14000b744:	mov    DWORD PTR [rdx],eax
   14000b746:	mov    DWORD PTR [rdx-0x4],ecx
   14000b749:	inc    rdi
   14000b74c:	cmp    rdi,r14
   14000b74f:	jl     0x14000b691
   14000b755:	test   r15b,r15b
   14000b758:	je     0x14000b680
   14000b75e:	mov    rbx,QWORD PTR [rsp+0x70]
   14000b763:	add    rsp,0x30
   14000b767:	pop    r15
   14000b769:	pop    r14
   14000b76b:	pop    r13
   14000b76d:	pop    r12
   14000b76f:	pop    rdi
   14000b770:	pop    rsi
   14000b771:	pop    rbp
   14000b772:	ret    
   14000b773:	int3   
   14000b774:	int3   
   14000b775:	int3   
   14000b776:	int3   
   14000b777:	int3   
   14000b778:	int3   
   14000b779:	int3   
   14000b77a:	int3   
   14000b77b:	int3   
   14000b77c:	int3   
   14000b77d:	int3   
   14000b77e:	int3   
   14000b77f:	int3   
   14000b780:	mov    QWORD PTR [rsp+0x10],rbx
   14000b785:	push   rdi
   14000b786:	sub    rsp,0x20
   14000b78a:	movsxd rax,DWORD PTR [rcx+0x8]
   14000b78e:	xor    ebx,ebx
   14000b790:	mov    rdi,rcx
   14000b793:	test   eax,eax
   14000b795:	jle    0x14000b849
   14000b79b:	mov    r9,QWORD PTR [rcx+0x10]
   14000b79f:	mov    r8d,ebx
   14000b7a2:	mov    rcx,rax
   14000b7a5:	lea    rax,[r9+0x8]
   14000b7a9:	nop    DWORD PTR [rax+0x0]
   14000b7b0:	cmp    rdx,QWORD PTR [rax]
   14000b7b3:	je     0x14000b7ce
   14000b7b5:	inc    ebx
   14000b7b7:	inc    r8
   14000b7ba:	add    rax,0x18
   14000b7be:	cmp    r8,rcx
   14000b7c1:	jl     0x14000b7b0
   14000b7c3:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b7c8:	add    rsp,0x20
   14000b7cc:	pop    rdi
   14000b7cd:	ret    
   14000b7ce:	movsxd rax,ebx
   14000b7d1:	mov    QWORD PTR [rsp+0x30],rsi
   14000b7d6:	lea    rcx,[rax+rax*2]
   14000b7da:	dec    DWORD PTR [r9+rcx*8+0x10]
   14000b7df:	lea    rsi,[rcx*8+0x0]
   14000b7e7:	cmp    DWORD PTR [r9+rsi*1+0x10],0x0
   14000b7ed:	jg     0x14000b844
   14000b7ef:	mov    rax,QWORD PTR [rip+0x26b9a]        # 0x140032390
   14000b7f6:	mov    rdx,QWORD PTR [rdi+0x10]
   14000b7fa:	mov    rcx,QWORD PTR [rax]
   14000b7fd:	mov    rdx,QWORD PTR [rsi+rdx*1]
   14000b801:	mov    rax,QWORD PTR [rcx]
   14000b804:	call   QWORD PTR [rax+0x28]
   14000b807:	mov    rcx,QWORD PTR [rdi+0x10]
   14000b80b:	mov    rcx,QWORD PTR [rsi+rcx*1+0x8]
   14000b810:	call   QWORD PTR [rip+0x26b22]        # 0x140032338
   14000b816:	mov    eax,DWORD PTR [rdi+0x8]
   14000b819:	test   eax,eax
   14000b81b:	jle    0x14000b844
   14000b81d:	dec    eax
   14000b81f:	cmp    ebx,eax
   14000b821:	je     0x14000b841
   14000b823:	mov    rdx,QWORD PTR [rdi+0x10]
   14000b827:	cdqe   
   14000b829:	lea    rcx,[rax+rax*2]
   14000b82d:	movups xmm0,XMMWORD PTR [rdx+rcx*8]
   14000b831:	movups XMMWORD PTR [rdx+rsi*1],xmm0
   14000b835:	movsd  xmm1,QWORD PTR [rdx+rcx*8+0x10]
   14000b83b:	movsd  QWORD PTR [rdx+rsi*1+0x10],xmm1
   14000b841:	dec    DWORD PTR [rdi+0x8]
   14000b844:	mov    rsi,QWORD PTR [rsp+0x30]
   14000b849:	mov    rbx,QWORD PTR [rsp+0x38]
   14000b84e:	add    rsp,0x20
   14000b852:	pop    rdi
   14000b853:	ret    
   14000b854:	int3   
   14000b855:	int3   
   14000b856:	int3   
   14000b857:	int3   
   14000b858:	int3   
   14000b859:	int3   
   14000b85a:	int3   
   14000b85b:	int3   
   14000b85c:	int3   
   14000b85d:	int3   
   14000b85e:	int3   
   14000b85f:	int3   
   14000b860:	rex push rbx
   14000b862:	sub    rsp,0x280
   14000b869:	mov    r9d,0x200
   14000b86f:	lea    r8,[rsp+0x80]
   14000b877:	lea    rdx,[rip+0x293b2]        # 0x140034c30
   14000b87e:	call   QWORD PTR [rip+0x26c7c]        # 0x140032500
   14000b884:	mov    r9d,0x1
   14000b88a:	lea    rcx,[rsp+0x40]
   14000b88f:	xor    r8d,r8d
   14000b892:	xor    edx,edx
   14000b894:	call   0x140020850
   14000b899:	mov    r8d,0x5f5e100
   14000b89f:	lea    rdx,[rsp+0x40]
   14000b8a4:	lea    rcx,[rsp+0x80]
   14000b8ac:	call   0x140022440
   14000b8b1:	test   eax,eax
   14000b8b3:	jne    0x14000b916
   14000b8b5:	lea    ecx,[rax+0x14]
   14000b8b8:	call   0x14001dc70
   14000b8bd:	test   rax,rax
   14000b8c0:	je     0x14000b8d6
   14000b8c2:	lea    rdx,[rip+0x29377]        # 0x140034c40
   14000b8c9:	mov    rcx,rax
   14000b8cc:	call   0x14001dbb0
   14000b8d1:	mov    rbx,rax
   14000b8d4:	jmp    0x14000b8d8
   14000b8d6:	xor    ebx,ebx
   14000b8d8:	mov    QWORD PTR [rsp+0x30],0x0
   14000b8e1:	lea    r8,[rsp+0x40]
   14000b8e6:	mov    QWORD PTR [rsp+0x28],0x0
   14000b8ef:	lea    rdx,[rip+0x2934a]        # 0x140034c40
   14000b8f6:	xor    r9d,r9d
   14000b8f9:	mov    QWORD PTR [rsp+0x20],0x0
   14000b902:	mov    rcx,rbx
   14000b905:	call   0x14001ecb0
   14000b90a:	test   al,al
   14000b90c:	jne    0x14000b918
   14000b90e:	mov    rcx,rbx
   14000b911:	call   0x140020790
   14000b916:	xor    ebx,ebx
   14000b918:	test   DWORD PTR [rsp+0x4c],0xc0000000
   14000b920:	jne    0x14000b93d
   14000b922:	mov    rdx,QWORD PTR [rsp+0x40]
   14000b927:	test   rdx,rdx
   14000b92a:	je     0x14000b93d
   14000b92c:	mov    rcx,QWORD PTR [rip+0x26a5d]        # 0x140032390
   14000b933:	mov    rcx,QWORD PTR [rcx]
   14000b936:	mov    r8,QWORD PTR [rcx]
   14000b939:	call   QWORD PTR [r8+0x28]
   14000b93d:	mov    rax,rbx
   14000b940:	add    rsp,0x280
   14000b947:	pop    rbx
   14000b948:	ret    
   14000b949:	int3   
   14000b94a:	int3   
   14000b94b:	int3   
   14000b94c:	int3   
   14000b94d:	int3   
   14000b94e:	int3   
   14000b94f:	int3   
   14000b950:	mov    QWORD PTR [rsp+0x10],rbx
   14000b955:	push   rdi
   14000b956:	sub    rsp,0x20
   14000b95a:	cmp    BYTE PTR [rip+0x3b7bb],0x0        # 0x14004711c
   14000b961:	mov    rdi,rcx
   14000b964:	jne    0x14000ba82
   14000b96a:	lea    rcx,[rip+0x2941f]        # 0x140034d90
   14000b971:	call   QWORD PTR [rip+0x268c1]        # 0x140032238
   14000b977:	test   rax,rax
   14000b97a:	je     0x14000b98a
   14000b97c:	mov    BYTE PTR [rip+0x3a73d],0x0        # 0x1400460c0
   14000b983:	mov    BYTE PTR [rip+0x3a737],0x0        # 0x1400460c1
   14000b98a:	lea    rcx,[rip+0x29417]        # 0x140034da8
   14000b991:	call   QWORD PTR [rip+0x268a1]        # 0x140032238
   14000b997:	test   rax,rax
   14000b99a:	je     0x14000b9aa
   14000b99c:	mov    BYTE PTR [rip+0x3a71d],0x1        # 0x1400460c0
   14000b9a3:	mov    BYTE PTR [rip+0x3a717],0x1        # 0x1400460c1
   14000b9aa:	call   QWORD PTR [rip+0x26b08]        # 0x1400324b8
   14000b9b0:	lea    rdx,[rip+0x29409]        # 0x140034dc0
   14000b9b7:	mov    rcx,rax
   14000b9ba:	mov    r8,QWORD PTR [rax]
   14000b9bd:	call   QWORD PTR [r8+0x20]
   14000b9c1:	movzx  ecx,BYTE PTR [rip+0x3a6f8]        # 0x1400460c0
   14000b9c8:	xor    ebx,ebx
   14000b9ca:	test   al,al
   14000b9cc:	cmovne ecx,ebx
   14000b9cf:	mov    BYTE PTR [rip+0x3a6eb],cl        # 0x1400460c0
   14000b9d5:	call   QWORD PTR [rip+0x26add]        # 0x1400324b8
   14000b9db:	lea    rdx,[rip+0x293f6]        # 0x140034dd8
   14000b9e2:	mov    rcx,rax
   14000b9e5:	mov    r8,QWORD PTR [rax]
   14000b9e8:	call   QWORD PTR [r8+0x20]
   14000b9ec:	movzx  ecx,BYTE PTR [rip+0x3a6ce]        # 0x1400460c1
   14000b9f3:	test   al,al
   14000b9f5:	cmovne ecx,ebx
   14000b9f8:	mov    BYTE PTR [rip+0x3a6c3],cl        # 0x1400460c1
   14000b9fe:	call   QWORD PTR [rip+0x26ab4]        # 0x1400324b8
   14000ba04:	lea    rdx,[rip+0x293e5]        # 0x140034df0
   14000ba0b:	mov    rcx,rax
   14000ba0e:	mov    r8,QWORD PTR [rax]
   14000ba11:	call   QWORD PTR [r8+0x20]
   14000ba15:	movzx  ecx,BYTE PTR [rip+0x3a6a4]        # 0x1400460c0
   14000ba1c:	mov    ebx,0x1
   14000ba21:	test   al,al
   14000ba23:	cmovne ecx,ebx
   14000ba26:	mov    BYTE PTR [rip+0x3a694],cl        # 0x1400460c0
   14000ba2c:	call   QWORD PTR [rip+0x26a86]        # 0x1400324b8
   14000ba32:	lea    rdx,[rip+0x293cf]        # 0x140034e08
   14000ba39:	mov    rcx,rax
   14000ba3c:	mov    r8,QWORD PTR [rax]
   14000ba3f:	call   QWORD PTR [r8+0x20]
   14000ba43:	movzx  ecx,BYTE PTR [rip+0x3a677]        # 0x1400460c1
   14000ba4a:	test   al,al
   14000ba4c:	cmovne ecx,ebx
   14000ba4f:	mov    BYTE PTR [rip+0x3a66c],cl        # 0x1400460c1
   14000ba55:	call   QWORD PTR [rip+0x26a5d]        # 0x1400324b8
   14000ba5b:	lea    r8,[rip+0x26d3e]        # 0x1400327a0
   14000ba62:	mov    rcx,rax
   14000ba65:	lea    rdx,[rip+0x293b4]        # 0x140034e20
   14000ba6c:	mov    r9,QWORD PTR [rax]
   14000ba6f:	call   QWORD PTR [r9+0x68]
   14000ba73:	mov    QWORD PTR [rip+0x3b6a6],rax        # 0x140047120
   14000ba7a:	mov    BYTE PTR [rip+0x3b69c],bl        # 0x14004711c
   14000ba80:	jmp    0x14000ba89
   14000ba82:	mov    rax,QWORD PTR [rip+0x3b697]        # 0x140047120
   14000ba89:	test   rax,rax
   14000ba8c:	je     0x14000bab1
   14000ba8e:	cmp    BYTE PTR [rax],0x0
   14000ba91:	je     0x14000bab1
   14000ba93:	mov    rdx,rax
   14000ba96:	mov    rcx,rdi
   14000ba99:	call   QWORD PTR [rip+0x26ac1]        # 0x140032560
   14000ba9f:	test   eax,eax
   14000baa1:	jne    0x14000bab1
   14000baa3:	mov    rax,rdi
   14000baa6:	mov    rbx,QWORD PTR [rsp+0x38]
   14000baab:	add    rsp,0x20
   14000baaf:	pop    rdi
   14000bab0:	ret    
   14000bab1:	cmp    BYTE PTR [rip+0x3a608],0x0        # 0x1400460c0
   14000bab8:	mov    QWORD PTR [rsp+0x30],rsi
   14000babd:	jne    0x14000bae9
   14000babf:	lea    rbx,[rip+0x2918a]        # 0x140034c50
   14000bac6:	lea    rsi,[rip+0x291cb]        # 0x140034c98
   14000bacd:	nop    DWORD PTR [rax]
   14000bad0:	mov    rdx,QWORD PTR [rbx]
   14000bad3:	mov    rcx,rdi
   14000bad6:	call   QWORD PTR [rip+0x26a84]        # 0x140032560
   14000badc:	test   eax,eax
   14000bade:	je     0x14000bb2c
   14000bae0:	add    rbx,0x8
   14000bae4:	cmp    rbx,rsi
   14000bae7:	jl     0x14000bad0
   14000bae9:	cmp    BYTE PTR [rip+0x3a5d1],0x0        # 0x1400460c1
   14000baf0:	jne    0x14000bb19
   14000baf2:	lea    rbx,[rip+0x2920f]        # 0x140034d08
   14000baf9:	lea    rsi,[rip+0x29238]        # 0x140034d38
   14000bb00:	mov    rdx,QWORD PTR [rbx]
   14000bb03:	mov    rcx,rdi
   14000bb06:	call   QWORD PTR [rip+0x26a54]        # 0x140032560
   14000bb0c:	test   eax,eax
   14000bb0e:	je     0x14000bb43
   14000bb10:	add    rbx,0x8
   14000bb14:	cmp    rbx,rsi
   14000bb17:	jl     0x14000bb00
   14000bb19:	mov    rax,rdi
   14000bb1c:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bb21:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bb26:	add    rsp,0x20
   14000bb2a:	pop    rdi
   14000bb2b:	ret    
   14000bb2c:	lea    rax,[rip+0x29305]        # 0x140034e38
   14000bb33:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bb38:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bb3d:	add    rsp,0x20
   14000bb41:	pop    rdi
   14000bb42:	ret    
   14000bb43:	mov    rsi,QWORD PTR [rsp+0x30]
   14000bb48:	lea    rax,[rip+0x292f9]        # 0x140034e48
   14000bb4f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000bb54:	add    rsp,0x20
   14000bb58:	pop    rdi
   14000bb59:	ret    
   14000bb5a:	int3   
   14000bb5b:	int3   
   14000bb5c:	int3   
   14000bb5d:	int3   
   14000bb5e:	int3   
   14000bb5f:	int3   
   14000bb60:	lea    rax,[rip+0x2a7f1]        # 0x140036358
   14000bb67:	mov    QWORD PTR [rcx],rax
   14000bb6a:	mov    rax,QWORD PTR [rip+0x3b987]        # 0x1400474f8
   14000bb71:	mov    QWORD PTR [rcx+0x8],rax
   14000bb75:	mov    DWORD PTR [rcx+0x10],edx
   14000bb78:	mov    eax,DWORD PTR [rip+0x3b982]        # 0x140047500
   14000bb7e:	mov    QWORD PTR [rip+0x3b973],rcx        # 0x1400474f8
   14000bb85:	mov    DWORD PTR [rcx+0x14],eax
   14000bb88:	mov    rax,rcx
   14000bb8b:	inc    DWORD PTR [rip+0x3b96f]        # 0x140047500
   14000bb91:	ret    
   14000bb92:	int3   
   14000bb93:	int3   
   14000bb94:	int3   
   14000bb95:	int3   
   14000bb96:	int3   
   14000bb97:	int3   
   14000bb98:	int3   
   14000bb99:	int3   
   14000bb9a:	int3   
   14000bb9b:	int3   
   14000bb9c:	int3   
   14000bb9d:	int3   
   14000bb9e:	int3   
   14000bb9f:	int3   
   14000bba0:	rex push rbp
   14000bba2:	sub    rsp,0x30
   14000bba6:	lea    rbp,[rsp+0x30]
   14000bbab:	movsxd rax,DWORD PTR [rip+0x3b94e]        # 0x140047500
   14000bbb2:	mov    QWORD PTR [rbp+0x10],rbx
   14000bbb6:	mov    QWORD PTR [rbp+0x18],rsi
   14000bbba:	mov    QWORD PTR [rbp+0x20],rdi
   14000bbbe:	mov    QWORD PTR [rbp+0x28],r14
   14000bbc2:	test   eax,eax
   14000bbc4:	je     0x14000bc9a
   14000bbca:	mov    rsi,rax
   14000bbcd:	lea    rax,[rax*8+0x1f]
   14000bbd5:	and    rax,0xfffffffffffffff0
   14000bbd9:	lea    rcx,[rax+0xf]
   14000bbdd:	cmp    rcx,rax
   14000bbe0:	ja     0x14000bbec
   14000bbe2:	movabs rcx,0xffffffffffffff0
   14000bbec:	and    rcx,0xfffffffffffffff0
   14000bbf0:	mov    rax,rcx
   14000bbf3:	call   0x1400263c0
   14000bbf8:	sub    rsp,rcx
   14000bbfb:	xor    ebx,ebx
   14000bbfd:	mov    rcx,QWORD PTR [rip+0x3b8f4]        # 0x1400474f8
   14000bc04:	mov    eax,ebx
   14000bc06:	lea    r14,[rsp+0x30]
   14000bc0b:	add    r14,0x10
   14000bc0f:	and    r14,0xffffffffffffffef
   14000bc13:	test   rsi,rsi
   14000bc16:	jle    0x14000bc30
   14000bc18:	nop    DWORD PTR [rax+rax*1+0x0]
   14000bc20:	mov    QWORD PTR [r14+rax*8],rcx
   14000bc24:	inc    rax
   14000bc27:	mov    rcx,QWORD PTR [rcx+0x8]
   14000bc2b:	cmp    rax,rsi
   14000bc2e:	jl     0x14000bc20
   14000bc30:	lea    r9,[rip+0x79]        # 0x14000bcb0
   14000bc37:	mov    QWORD PTR [rsp+0x20],rbx
   14000bc3c:	mov    r8d,0x8
   14000bc42:	mov    rdx,rsi
   14000bc45:	mov    rcx,r14
   14000bc48:	call   QWORD PTR [rip+0x26652]        # 0x1400322a0
   14000bc4e:	mov    DWORD PTR [rip+0x3b8ac],ebx        # 0x140047500
   14000bc54:	mov    QWORD PTR [rip+0x3b89d],rbx        # 0x1400474f8
   14000bc5b:	test   rsi,rsi
   14000bc5e:	jle    0x14000bc9a
   14000bc60:	mov    rdi,QWORD PTR [r14+rbx*8]
   14000bc64:	mov    rcx,rdi
   14000bc67:	mov    rax,QWORD PTR [rdi]
   14000bc6a:	call   QWORD PTR [rax]
   14000bc6c:	cmp    eax,0x1
   14000bc6f:	jne    0x14000bc92
   14000bc71:	mov    rax,QWORD PTR [rip+0x3b880]        # 0x1400474f8
   14000bc78:	mov    QWORD PTR [rdi+0x8],rax
   14000bc7c:	mov    eax,DWORD PTR [rip+0x3b87e]        # 0x140047500
   14000bc82:	mov    QWORD PTR [rip+0x3b86f],rdi        # 0x1400474f8
   14000bc89:	mov    DWORD PTR [rdi+0x14],eax
   14000bc8c:	inc    DWORD PTR [rip+0x3b86e]        # 0x140047500
   14000bc92:	inc    rbx
   14000bc95:	cmp    rbx,rsi
   14000bc98:	jl     0x14000bc60
   14000bc9a:	mov    rbx,QWORD PTR [rbp+0x10]
   14000bc9e:	mov    rsi,QWORD PTR [rbp+0x18]
   14000bca2:	mov    rdi,QWORD PTR [rbp+0x20]
   14000bca6:	mov    r14,QWORD PTR [rbp+0x28]
   14000bcaa:	mov    rsp,rbp
   14000bcad:	pop    rbp
   14000bcae:	ret    
   14000bcaf:	int3   
   14000bcb0:	mov    r9,QWORD PTR [rdx]
   14000bcb3:	mov    rdx,QWORD PTR [r8]
   14000bcb6:	mov    eax,DWORD PTR [r9+0x10]
   14000bcba:	mov    ecx,DWORD PTR [rdx+0x10]
   14000bcbd:	cmp    eax,ecx
   14000bcbf:	jle    0x14000bcc7
   14000bcc1:	mov    eax,0x1
   14000bcc6:	ret    
   14000bcc7:	jge    0x14000bccd
   14000bcc9:	or     eax,0xffffffff
   14000bccc:	ret    
   14000bccd:	mov    ecx,DWORD PTR [r9+0x14]
   14000bcd1:	mov    edx,DWORD PTR [rdx+0x14]
   14000bcd4:	cmp    ecx,edx
   14000bcd6:	jg     0x14000bcc1
   14000bcd8:	xor    eax,eax
   14000bcda:	cmp    ecx,edx
   14000bcdc:	setge  al
   14000bcdf:	dec    eax
   14000bce1:	ret    
   14000bce2:	int3   
   14000bce3:	int3   
   14000bce4:	int3   
   14000bce5:	int3   
   14000bce6:	int3   
   14000bce7:	int3   
   14000bce8:	int3   
   14000bce9:	int3   
   14000bcea:	int3   
   14000bceb:	int3   
   14000bcec:	int3   
   14000bced:	int3   
   14000bcee:	int3   
   14000bcef:	int3   
   14000bcf0:	push   r14
   14000bcf2:	sub    rsp,0x60
   14000bcf6:	mov    eax,DWORD PTR [rip+0x3b8ac]        # 0x1400475a8
   14000bcfc:	mov    r14,rcx
   14000bcff:	test   eax,eax
   14000bd01:	jns    0x14000bdae
   14000bd07:	mov    rax,QWORD PTR [rip+0x2667a]        # 0x140032388
   14000bd0e:	mov    edx,0x4
   14000bd13:	mov    ecx,DWORD PTR [rax]
   14000bd15:	call   QWORD PTR [rip+0x2678d]        # 0x1400324a8
   14000bd1b:	test   al,al
   14000bd1d:	je     0x14000bd69
   14000bd1f:	lea    rax,[rip+0x2a69a]        # 0x1400363c0
   14000bd26:	mov    DWORD PTR [rsp+0x38],0x1e2
   14000bd2e:	mov    QWORD PTR [rsp+0x30],rax
   14000bd33:	lea    r9,[rip+0x2a626]        # 0x140036360
   14000bd3a:	lea    rax,[rip+0x2a65f]        # 0x1400363a0
   14000bd41:	mov    edx,0x4
   14000bd46:	mov    QWORD PTR [rsp+0x40],rax
   14000bd4b:	lea    r8,[rsp+0x30]
   14000bd50:	mov    eax,DWORD PTR [rip+0x3b852]        # 0x1400475a8
   14000bd56:	mov    DWORD PTR [rsp+0x20],eax
   14000bd5a:	mov    rax,QWORD PTR [rip+0x26627]        # 0x140032388
   14000bd61:	mov    ecx,DWORD PTR [rax]
   14000bd63:	call   QWORD PTR [rip+0x2672f]        # 0x140032498
   14000bd69:	call   QWORD PTR [rip+0x26819]        # 0x140032588
   14000bd6f:	test   al,al
   14000bd71:	je     0x14000bda2
   14000bd73:	call   QWORD PTR [rip+0x26707]        # 0x140032480
   14000bd79:	lea    rcx,[rip+0x26a2c]        # 0x1400327ac
   14000bd80:	xorps  xmm0,xmm0
   14000bd83:	lea    rdx,[rsp+0x30]
   14000bd88:	mov    DWORD PTR [rsp+0x38],eax
   14000bd8c:	mov    QWORD PTR [rsp+0x30],rcx
   14000bd91:	mov    r8b,0x1
   14000bd94:	xor    ecx,ecx
   14000bd96:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000bd9c:	call   QWORD PTR [rip+0x266d6]        # 0x140032478
   14000bda2:	mov    ecx,0x1
   14000bda7:	call   QWORD PTR [rip+0x2649b]        # 0x140032248
   14000bdad:	int3   
   14000bdae:	mov    QWORD PTR [rsp+0x70],rbx
   14000bdb3:	mov    QWORD PTR [rsp+0x78],rbp
   14000bdb8:	mov    QWORD PTR [rsp+0x80],rsi
   14000bdc0:	mov    QWORD PTR [rsp+0x88],rdi
   14000bdc8:	mov    QWORD PTR [rsp+0x58],r12
   14000bdcd:	mov    QWORD PTR [rsp+0x50],r15
   14000bdd2:	movsxd r15,edx
   14000bdd5:	test   eax,eax
   14000bdd7:	jne    0x14000be6d
   14000bddd:	test   edx,edx
   14000bddf:	jle    0x14000bf0e
   14000bde5:	lea    r12,[rip+0x29074]        # 0x140034e60
   14000bdec:	lea    rbp,[rip+0x3b7bd]        # 0x1400475b0
   14000bdf3:	nop    DWORD PTR [rax+0x0]
   14000bdf7:	nop    WORD PTR [rax+rax*1+0x0]
   14000be00:	xor    edi,edi
   14000be02:	mov    rbx,r12
   14000be05:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000be10:	mov    rsi,QWORD PTR [rbx+0x8]
   14000be14:	mov    rax,QWORD PTR [r14]
   14000be17:	cmp    QWORD PTR [rsi],0x0
   14000be1b:	jne    0x14000be50
   14000be1d:	mov    rcx,QWORD PTR [rbx]
   14000be20:	xor    edx,edx
   14000be22:	call   rax
   14000be24:	mov    QWORD PTR [rsi],rax
   14000be27:	test   rax,rax
   14000be2a:	je     0x14000be50
   14000be2c:	movsxd rax,DWORD PTR [rip+0x3b775]        # 0x1400475a8
   14000be33:	mov    rcx,rax
   14000be36:	add    rcx,rcx
   14000be39:	inc    eax
   14000be3b:	mov    DWORD PTR [rip+0x3b767],eax        # 0x1400475a8
   14000be41:	mov    eax,DWORD PTR [rip+0x3b75d]        # 0x1400475a4
   14000be47:	mov    DWORD PTR [rbp+rcx*8+0x8],eax
   14000be4b:	mov    QWORD PTR [rbp+rcx*8+0x0],rsi
   14000be50:	inc    edi
   14000be52:	add    rbx,0x10
   14000be56:	cmp    edi,0x89
   14000be5c:	jb     0x14000be10
   14000be5e:	add    r14,0x8
   14000be62:	sub    r15,0x1
   14000be66:	jne    0x14000be00
   14000be68:	jmp    0x14000bf0e
   14000be6d:	test   edx,edx
   14000be6f:	jle    0x14000bf0e
   14000be75:	lea    r12,[rip+0x28fe4]        # 0x140034e60
   14000be7c:	lea    rbp,[rip+0x3b72d]        # 0x1400475b0
   14000be83:	xor    edi,edi
   14000be85:	mov    rsi,r12
   14000be88:	nop    DWORD PTR [rax+rax*1+0x0]
   14000be90:	mov    rax,QWORD PTR [r14]
   14000be93:	xor    edx,edx
   14000be95:	mov    rcx,QWORD PTR [rsi]
   14000be98:	mov    rbx,QWORD PTR [rsi+0x8]
   14000be9c:	call   rax
   14000be9e:	movsxd r8,DWORD PTR [rip+0x3b703]        # 0x1400475a8
   14000bea5:	xor    dl,dl
   14000bea7:	mov    QWORD PTR [rbx],rax
   14000beaa:	test   r8d,r8d
   14000bead:	jle    0x14000becd
   14000beaf:	mov    rax,rbp
   14000beb2:	mov    ecx,r8d
   14000beb5:	cmp    QWORD PTR [rax],rbx
   14000beb8:	jne    0x14000bebf
   14000beba:	mov    QWORD PTR [rax],rbx
   14000bebd:	mov    dl,0x1
   14000bebf:	add    rax,0x10
   14000bec3:	sub    rcx,0x1
   14000bec7:	jne    0x14000beb5
   14000bec9:	test   dl,dl
   14000becb:	jne    0x14000bef2
   14000becd:	cmp    QWORD PTR [rbx],0x0
   14000bed1:	je     0x14000bef2
   14000bed3:	mov    eax,DWORD PTR [rip+0x3b6cb]        # 0x1400475a4
   14000bed9:	mov    rcx,r8
   14000bedc:	add    rcx,rcx
   14000bedf:	inc    r8d
   14000bee2:	mov    DWORD PTR [rip+0x3b6bf],r8d        # 0x1400475a8
   14000bee9:	mov    QWORD PTR [rbp+rcx*8+0x0],rbx
   14000beee:	mov    DWORD PTR [rbp+rcx*8+0x8],eax
   14000bef2:	inc    edi
   14000bef4:	add    rsi,0x10
   14000bef8:	cmp    edi,0x89
   14000befe:	jb     0x14000be90
   14000bf00:	add    r14,0x8
   14000bf04:	sub    r15,0x1
   14000bf08:	jne    0x14000be83
   14000bf0e:	inc    DWORD PTR [rip+0x3b690]        # 0x1400475a4
   14000bf14:	mov    r15,QWORD PTR [rsp+0x50]
   14000bf19:	mov    r12,QWORD PTR [rsp+0x58]
   14000bf1e:	mov    rdi,QWORD PTR [rsp+0x88]
   14000bf26:	mov    rsi,QWORD PTR [rsp+0x80]
   14000bf2e:	mov    rbp,QWORD PTR [rsp+0x78]
   14000bf33:	mov    rbx,QWORD PTR [rsp+0x70]
   14000bf38:	add    rsp,0x60
   14000bf3c:	pop    r14
   14000bf3e:	jmp    0x14000bba0
   14000bf43:	int3   
   14000bf44:	int3   
   14000bf45:	int3   
   14000bf46:	int3   
   14000bf47:	int3   
   14000bf48:	int3   
   14000bf49:	int3   
   14000bf4a:	int3   
   14000bf4b:	int3   
   14000bf4c:	int3   
   14000bf4d:	int3   
   14000bf4e:	int3   
   14000bf4f:	int3   
   14000bf50:	mov    edx,DWORD PTR [rip+0x3b64e]        # 0x1400475a4
   14000bf56:	sub    edx,0x1
   14000bf59:	mov    DWORD PTR [rip+0x3b645],edx        # 0x1400475a4
   14000bf5f:	js     0x14000bf8d
   14000bf61:	mov    ecx,DWORD PTR [rip+0x3b641]        # 0x1400475a8
   14000bf67:	test   ecx,ecx
   14000bf69:	jle    0x14000bf8d
   14000bf6b:	lea    rax,[rip+0x3b63e]        # 0x1400475b0
   14000bf72:	mov    r8d,ecx
   14000bf75:	xor    r9d,r9d
   14000bf78:	cmp    DWORD PTR [rax+0x8],edx
   14000bf7b:	jne    0x14000bf83
   14000bf7d:	mov    rcx,QWORD PTR [rax]
   14000bf80:	mov    QWORD PTR [rcx],r9
   14000bf83:	add    rax,0x10
   14000bf87:	sub    r8,0x1
   14000bf8b:	jne    0x14000bf78
   14000bf8d:	ret    
   14000bf8e:	int3   
   14000bf8f:	int3   
   14000bf90:	mov    QWORD PTR [rsp+0x8],rbx
   14000bf95:	mov    QWORD PTR [rsp+0x10],rbp
   14000bf9a:	mov    QWORD PTR [rsp+0x18],rsi
   14000bf9f:	push   rdi
   14000bfa0:	push   r14
   14000bfa2:	push   r15
   14000bfa4:	sub    rsp,0x20
   14000bfa8:	mov    rbp,rdx
   14000bfab:	lea    rdi,[rip+0x28eae]        # 0x140034e60
   14000bfb2:	mov    r14,rcx
   14000bfb5:	lea    r15,[rip+0x3b5f4]        # 0x1400475b0
   14000bfbc:	xor    esi,esi
   14000bfbe:	xchg   ax,ax
   14000bfc0:	test   rbp,rbp
   14000bfc3:	je     0x14000bfe7
   14000bfc5:	mov    rax,QWORD PTR [rdi]
   14000bfc8:	mov    r8,rbp
   14000bfcb:	sub    r8,rax
   14000bfce:	xchg   ax,ax
   14000bfd0:	movzx  edx,BYTE PTR [rax]
   14000bfd3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000bfd8:	sub    edx,ecx
   14000bfda:	jne    0x14000bfe3
   14000bfdc:	inc    rax
   14000bfdf:	test   ecx,ecx
   14000bfe1:	jne    0x14000bfd0
   14000bfe3:	test   edx,edx
   14000bfe5:	jne    0x14000c04d
   14000bfe7:	mov    rcx,QWORD PTR [rdi]
   14000bfea:	xor    edx,edx
   14000bfec:	mov    rbx,QWORD PTR [rdi+0x8]
   14000bff0:	call   r14
   14000bff3:	movsxd r8,DWORD PTR [rip+0x3b5ae]        # 0x1400475a8
   14000bffa:	xor    dl,dl
   14000bffc:	mov    QWORD PTR [rbx],rax
   14000bfff:	test   r8d,r8d
   14000c002:	jle    0x14000c028
   14000c004:	mov    rax,r15
   14000c007:	mov    ecx,r8d
   14000c00a:	nop    WORD PTR [rax+rax*1+0x0]
   14000c010:	cmp    QWORD PTR [rax],rbx
   14000c013:	jne    0x14000c01a
   14000c015:	mov    QWORD PTR [rax],rbx
   14000c018:	mov    dl,0x1
   14000c01a:	add    rax,0x10
   14000c01e:	sub    rcx,0x1
   14000c022:	jne    0x14000c010
   14000c024:	test   dl,dl
   14000c026:	jne    0x14000c04d
   14000c028:	cmp    QWORD PTR [rbx],0x0
   14000c02c:	je     0x14000c04d
   14000c02e:	mov    eax,DWORD PTR [rip+0x3b570]        # 0x1400475a4
   14000c034:	mov    rcx,r8
   14000c037:	add    rcx,rcx
   14000c03a:	inc    r8d
   14000c03d:	mov    DWORD PTR [rip+0x3b564],r8d        # 0x1400475a8
   14000c044:	mov    QWORD PTR [r15+rcx*8],rbx
   14000c048:	mov    DWORD PTR [r15+rcx*8+0x8],eax
   14000c04d:	inc    esi
   14000c04f:	add    rdi,0x10
   14000c053:	cmp    esi,0x89
   14000c059:	jb     0x14000bfc0
   14000c05f:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c064:	mov    rbp,QWORD PTR [rsp+0x48]
   14000c069:	mov    rsi,QWORD PTR [rsp+0x50]
   14000c06e:	add    rsp,0x20
   14000c072:	pop    r15
   14000c074:	pop    r14
   14000c076:	pop    rdi
   14000c077:	jmp    0x14000bba0
   14000c07c:	int3   
   14000c07d:	int3   
   14000c07e:	int3   
   14000c07f:	int3   
   14000c080:	sub    rsp,0x28
   14000c084:	mov    rdx,QWORD PTR [rcx]
   14000c087:	mov    r8,rdx
   14000c08a:	and    r8d,0x1e
   14000c08e:	lea    rax,[r8-0x14]
   14000c092:	test   rax,0xfffffffffffffffd
   14000c098:	je     0x14000c0e0
   14000c09a:	cmp    r8,0x18
   14000c09e:	je     0x14000c0d9
   14000c0a0:	shr    dl,1
   14000c0a2:	and    dl,0xf
   14000c0a5:	cmp    dl,0x2
   14000c0a8:	jne    0x14000c0b3
   14000c0aa:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c0ae:	add    rsp,0x28
   14000c0b2:	ret    
   14000c0b3:	cmp    dl,0x3
   14000c0b6:	jne    0x14000c0c0
   14000c0b8:	mov    eax,DWORD PTR [rcx+0x8]
   14000c0bb:	add    rsp,0x28
   14000c0bf:	ret    
   14000c0c0:	cmp    dl,0x4
   14000c0c3:	je     0x14000c0b8
   14000c0c5:	cmp    dl,0x5
   14000c0c8:	jne    0x14000c0d4
   14000c0ca:	cvttsd2si eax,QWORD PTR [rcx+0x8]
   14000c0cf:	add    rsp,0x28
   14000c0d3:	ret    
   14000c0d4:	cmp    dl,0x6
   14000c0d7:	je     0x14000c0e0
   14000c0d9:	xor    eax,eax
   14000c0db:	add    rsp,0x28
   14000c0df:	ret    
   14000c0e0:	cmp    r8,0xc
   14000c0e4:	je     0x14000c116
   14000c0e6:	cmp    r8,0x16
   14000c0ea:	je     0x14000c116
   14000c0ec:	cmp    r8,0x14
   14000c0f0:	jne    0x14000c105
   14000c0f2:	add    rcx,0x8
   14000c0f6:	call   QWORD PTR [rip+0x26184]        # 0x140032280
   14000c0fc:	cvttsd2si eax,xmm0
   14000c100:	add    rsp,0x28
   14000c104:	ret    
   14000c105:	xor    ecx,ecx
   14000c107:	call   QWORD PTR [rip+0x26173]        # 0x140032280
   14000c10d:	cvttsd2si eax,xmm0
   14000c111:	add    rsp,0x28
   14000c115:	ret    
   14000c116:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c11a:	call   QWORD PTR [rip+0x26160]        # 0x140032280
   14000c120:	cvttsd2si eax,xmm0
   14000c124:	add    rsp,0x28
   14000c128:	ret    
   14000c129:	int3   
   14000c12a:	int3   
   14000c12b:	int3   
   14000c12c:	int3   
   14000c12d:	int3   
   14000c12e:	int3   
   14000c12f:	int3   
   14000c130:	mov    rdx,QWORD PTR [rcx]
   14000c133:	mov    r8,rdx
   14000c136:	and    r8d,0x1e
   14000c13a:	lea    rax,[r8-0x14]
   14000c13e:	test   rax,0xfffffffffffffffd
   14000c144:	je     0x14000c1a5
   14000c146:	cmp    r8,0x18
   14000c14a:	je     0x14000c1a1
   14000c14c:	shr    dl,1
   14000c14e:	and    dl,0xf
   14000c151:	cmp    dl,0x2
   14000c154:	jne    0x14000c163
   14000c156:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c15a:	movd   xmm0,eax
   14000c15e:	cvtdq2pd xmm0,xmm0
   14000c162:	ret    
   14000c163:	cmp    dl,0x3
   14000c166:	jne    0x14000c172
   14000c168:	xorps  xmm0,xmm0
   14000c16b:	cvtsi2sd xmm0,QWORD PTR [rcx+0x8]
   14000c171:	ret    
   14000c172:	cmp    dl,0x4
   14000c175:	jne    0x14000c191
   14000c177:	mov    rax,QWORD PTR [rcx+0x8]
   14000c17b:	xorps  xmm0,xmm0
   14000c17e:	cvtsi2sd xmm0,rax
   14000c183:	test   rax,rax
   14000c186:	jns    0x14000c1d6
   14000c188:	addsd  xmm0,QWORD PTR [rip+0x2a558]        # 0x1400366e8
   14000c190:	ret    
   14000c191:	cmp    dl,0x5
   14000c194:	jne    0x14000c19c
   14000c196:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14000c19b:	ret    
   14000c19c:	cmp    dl,0x6
   14000c19f:	je     0x14000c1a5
   14000c1a1:	xorps  xmm0,xmm0
   14000c1a4:	ret    
   14000c1a5:	cmp    r8,0xc
   14000c1a9:	je     0x14000c1cb
   14000c1ab:	cmp    r8,0x16
   14000c1af:	je     0x14000c1cb
   14000c1b1:	cmp    r8,0x14
   14000c1b5:	jne    0x14000c1c2
   14000c1b7:	add    rcx,0x8
   14000c1bb:	rex.W jmp QWORD PTR [rip+0x260be]        # 0x140032280
   14000c1c2:	xor    ecx,ecx
   14000c1c4:	rex.W jmp QWORD PTR [rip+0x260b5]        # 0x140032280
   14000c1cb:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c1cf:	rex.W jmp QWORD PTR [rip+0x260aa]        # 0x140032280
   14000c1d6:	ret    
   14000c1d7:	int3   
   14000c1d8:	int3   
   14000c1d9:	int3   
   14000c1da:	int3   
   14000c1db:	int3   
   14000c1dc:	int3   
   14000c1dd:	int3   
   14000c1de:	int3   
   14000c1df:	int3   
   14000c1e0:	sub    rsp,0x28
   14000c1e4:	mov    rdx,QWORD PTR [rcx]
   14000c1e7:	mov    r8,rdx
   14000c1ea:	and    r8d,0x1e
   14000c1ee:	lea    rax,[r8-0x14]
   14000c1f2:	test   rax,0xfffffffffffffffd
   14000c1f8:	je     0x14000c242
   14000c1fa:	cmp    r8,0x18
   14000c1fe:	je     0x14000c23b
   14000c200:	shr    dl,1
   14000c202:	and    dl,0xf
   14000c205:	cmp    dl,0x2
   14000c208:	jne    0x14000c213
   14000c20a:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c20e:	add    rsp,0x28
   14000c212:	ret    
   14000c213:	cmp    dl,0x3
   14000c216:	jne    0x14000c221
   14000c218:	mov    rax,QWORD PTR [rcx+0x8]
   14000c21c:	add    rsp,0x28
   14000c220:	ret    
   14000c221:	cmp    dl,0x4
   14000c224:	je     0x14000c218
   14000c226:	cmp    dl,0x5
   14000c229:	jne    0x14000c236
   14000c22b:	cvttsd2si rax,QWORD PTR [rcx+0x8]
   14000c231:	add    rsp,0x28
   14000c235:	ret    
   14000c236:	cmp    dl,0x6
   14000c239:	je     0x14000c242
   14000c23b:	xor    eax,eax
   14000c23d:	add    rsp,0x28
   14000c241:	ret    
   14000c242:	cmp    r8,0xc
   14000c246:	je     0x14000c27a
   14000c248:	cmp    r8,0x16
   14000c24c:	je     0x14000c27a
   14000c24e:	cmp    r8,0x14
   14000c252:	jne    0x14000c268
   14000c254:	add    rcx,0x8
   14000c258:	call   QWORD PTR [rip+0x26022]        # 0x140032280
   14000c25e:	cvttsd2si rax,xmm0
   14000c263:	add    rsp,0x28
   14000c267:	ret    
   14000c268:	xor    ecx,ecx
   14000c26a:	call   QWORD PTR [rip+0x26010]        # 0x140032280
   14000c270:	cvttsd2si rax,xmm0
   14000c275:	add    rsp,0x28
   14000c279:	ret    
   14000c27a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c27e:	call   QWORD PTR [rip+0x25ffc]        # 0x140032280
   14000c284:	cvttsd2si rax,xmm0
   14000c289:	add    rsp,0x28
   14000c28d:	ret    
   14000c28e:	int3   
   14000c28f:	int3   
   14000c290:	sub    rsp,0x28
   14000c294:	mov    rdx,QWORD PTR [rcx]
   14000c297:	mov    r8,rdx
   14000c29a:	and    r8d,0x1e
   14000c29e:	lea    rax,[r8-0x14]
   14000c2a2:	test   rax,0xfffffffffffffffd
   14000c2a8:	je     0x14000c320
   14000c2aa:	cmp    r8,0x18
   14000c2ae:	je     0x14000c319
   14000c2b0:	shr    dl,1
   14000c2b2:	and    dl,0xf
   14000c2b5:	cmp    dl,0x2
   14000c2b8:	jne    0x14000c2c3
   14000c2ba:	movzx  eax,BYTE PTR [rcx+0x8]
   14000c2be:	add    rsp,0x28
   14000c2c2:	ret    
   14000c2c3:	cmp    dl,0x3
   14000c2c6:	jne    0x14000c2d1
   14000c2c8:	mov    rax,QWORD PTR [rcx+0x8]
   14000c2cc:	add    rsp,0x28
   14000c2d0:	ret    
   14000c2d1:	cmp    dl,0x4
   14000c2d4:	je     0x14000c2c8
   14000c2d6:	cmp    dl,0x5
   14000c2d9:	jne    0x14000c314
   14000c2db:	movsd  xmm0,QWORD PTR [rcx+0x8]
   14000c2e0:	xor    edx,edx
   14000c2e2:	movsd  xmm1,QWORD PTR [rip+0x2a3f6]        # 0x1400366e0
   14000c2ea:	comisd xmm0,xmm1
   14000c2ee:	jb     0x14000c307
   14000c2f0:	subsd  xmm0,xmm1
   14000c2f4:	comisd xmm0,xmm1
   14000c2f8:	jae    0x14000c307
   14000c2fa:	movabs rax,0x8000000000000000
   14000c304:	mov    rdx,rax
   14000c307:	cvttsd2si rax,xmm0
   14000c30c:	add    rax,rdx
   14000c30f:	add    rsp,0x28
   14000c313:	ret    
   14000c314:	cmp    dl,0x6
   14000c317:	je     0x14000c320
   14000c319:	xor    eax,eax
   14000c31b:	add    rsp,0x28
   14000c31f:	ret    
   14000c320:	cmp    r8,0xc
   14000c324:	je     0x14000c33c
   14000c326:	cmp    r8,0x16
   14000c32a:	je     0x14000c33c
   14000c32c:	cmp    r8,0x14
   14000c330:	jne    0x14000c338
   14000c332:	add    rcx,0x8
   14000c336:	jmp    0x14000c340
   14000c338:	xor    ecx,ecx
   14000c33a:	jmp    0x14000c340
   14000c33c:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c340:	call   QWORD PTR [rip+0x25f3a]        # 0x140032280
   14000c346:	movsd  xmm1,QWORD PTR [rip+0x2a392]        # 0x1400366e0
   14000c34e:	xor    ecx,ecx
   14000c350:	comisd xmm0,xmm1
   14000c354:	jb     0x14000c36d
   14000c356:	subsd  xmm0,xmm1
   14000c35a:	comisd xmm0,xmm1
   14000c35e:	jae    0x14000c36d
   14000c360:	movabs rax,0x8000000000000000
   14000c36a:	mov    rcx,rax
   14000c36d:	cvttsd2si rax,xmm0
   14000c372:	add    rax,rcx
   14000c375:	add    rsp,0x28
   14000c379:	ret    
   14000c37a:	int3   
   14000c37b:	int3   
   14000c37c:	int3   
   14000c37d:	int3   
   14000c37e:	int3   
   14000c37f:	int3   
   14000c380:	rex push rbx
   14000c382:	sub    rsp,0x20
   14000c386:	mov    rbx,rcx
   14000c389:	mov    QWORD PTR [rcx+0x8],0x0
   14000c391:	mov    QWORD PTR [rcx+0x10],0x10
   14000c399:	call   QWORD PTR [rip+0x26121]        # 0x1400324c0
   14000c39f:	mov    rax,QWORD PTR [rip+0x25fea]        # 0x140032390
   14000c3a6:	mov    rcx,QWORD PTR [rax]
   14000c3a9:	movsxd rax,DWORD PTR [rbx+0x10]
   14000c3ad:	mov    r8,QWORD PTR [rcx]
   14000c3b0:	lea    rdx,[rax+rax*4]
   14000c3b4:	shl    rdx,0x3
   14000c3b8:	call   QWORD PTR [r8+0x8]
   14000c3bc:	mov    QWORD PTR [rbx+0x8],rax
   14000c3c0:	mov    QWORD PTR [rbx+0x18],0xffffffffffffffff
   14000c3c8:	mov    QWORD PTR [rbx+0x20],0x0
   14000c3d0:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
   14000c3d8:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
   14000c3e0:	mov    QWORD PTR [rbx+0x38],rax
   14000c3e4:	mov    rax,rbx
   14000c3e7:	add    rsp,0x20
   14000c3eb:	pop    rbx
   14000c3ec:	ret    
   14000c3ed:	int3   
   14000c3ee:	int3   
   14000c3ef:	int3   
   14000c3f0:	rex push rbx
   14000c3f2:	sub    rsp,0x50
   14000c3f6:	mov    rbx,rcx
   14000c3f9:	lea    rdx,[rcx+0x18]
   14000c3fd:	xor    ecx,ecx
   14000c3ff:	mov    r8d,0x3e
   14000c405:	mov    rax,QWORD PTR [rdx]
   14000c408:	mov    QWORD PTR [rdx+0x8],rcx
   14000c40c:	lea    rdx,[rdx+0x10]
   14000c410:	and    rax,0xffffffffffe00003
   14000c416:	or     rax,0x3
   14000c41a:	mov    QWORD PTR [rdx-0x10],rax
   14000c41e:	sub    r8,0x1
   14000c422:	jne    0x14000c405
   14000c424:	test   rbx,0x3ff
   14000c42b:	je     0x14000c4d2
   14000c431:	mov    rax,QWORD PTR [rip+0x25f50]        # 0x140032388
   14000c438:	lea    edx,[r8+0x4]
   14000c43c:	mov    ecx,DWORD PTR [rax]
   14000c43e:	call   QWORD PTR [rip+0x26064]        # 0x1400324a8
   14000c444:	test   al,al
   14000c446:	je     0x14000c48d
   14000c448:	lea    rax,[rip+0x2a0a1]        # 0x1400364f0
   14000c44f:	mov    DWORD PTR [rsp+0x38],0xc2
   14000c457:	mov    QWORD PTR [rsp+0x30],rax
   14000c45c:	lea    r9,[rip+0x29fbd]        # 0x140036420
   14000c463:	lea    rax,[rip+0x2a05e]        # 0x1400364c8
   14000c46a:	mov    QWORD PTR [rsp+0x20],rbx
   14000c46f:	mov    QWORD PTR [rsp+0x40],rax
   14000c474:	lea    r8,[rsp+0x30]
   14000c479:	mov    rax,QWORD PTR [rip+0x25f08]        # 0x140032388
   14000c480:	mov    edx,0x4
   14000c485:	mov    ecx,DWORD PTR [rax]
   14000c487:	call   QWORD PTR [rip+0x2600b]        # 0x140032498
   14000c48d:	call   QWORD PTR [rip+0x260f5]        # 0x140032588
   14000c493:	test   al,al
   14000c495:	je     0x14000c4c6
   14000c497:	call   QWORD PTR [rip+0x25fe3]        # 0x140032480
   14000c49d:	lea    rcx,[rip+0x26308]        # 0x1400327ac
   14000c4a4:	xorps  xmm0,xmm0
   14000c4a7:	lea    rdx,[rsp+0x30]
   14000c4ac:	mov    DWORD PTR [rsp+0x38],eax
   14000c4b0:	mov    QWORD PTR [rsp+0x30],rcx
   14000c4b5:	mov    r8b,0x1
   14000c4b8:	xor    ecx,ecx
   14000c4ba:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14000c4c0:	call   QWORD PTR [rip+0x25fb2]        # 0x140032478
   14000c4c6:	mov    ecx,0x1
   14000c4cb:	call   QWORD PTR [rip+0x25d77]        # 0x140032248
   14000c4d1:	int3   
   14000c4d2:	mov    rax,rbx
   14000c4d5:	add    rsp,0x50
   14000c4d9:	pop    rbx
   14000c4da:	ret    
   14000c4db:	int3   
   14000c4dc:	int3   
   14000c4dd:	int3   
   14000c4de:	int3   
   14000c4df:	int3   
   14000c4e0:	rex push rbx
   14000c4e2:	sub    rsp,0x20
   14000c4e6:	mov    rbx,rcx
   14000c4e9:	test   rcx,rcx
   14000c4ec:	je     0x14000c4f3
   14000c4ee:	call   0x14000c710
   14000c4f3:	xor    edx,edx
   14000c4f5:	mov    r8d,0x400
   14000c4fb:	mov    rcx,rbx
   14000c4fe:	call   0x1400277b0
   14000c503:	mov    QWORD PTR [rbx],rbx
   14000c506:	mov    rcx,rbx
   14000c509:	mov    QWORD PTR [rbx+0x458],rbx
   14000c510:	call   0x14000d090
   14000c515:	mov    dl,0x1
   14000c517:	mov    rcx,rax
   14000c51a:	call   0x14000faa0
   14000c51f:	mov    rax,rbx
   14000c522:	mov    DWORD PTR [rbx+0x4d0],0x0
   14000c52c:	add    rsp,0x20
   14000c530:	pop    rbx
   14000c531:	ret    
   14000c532:	int3   
   14000c533:	int3   
   14000c534:	int3   
   14000c535:	int3   
   14000c536:	int3   
   14000c537:	int3   
   14000c538:	int3   
   14000c539:	int3   
   14000c53a:	int3   
   14000c53b:	int3   
   14000c53c:	int3   
   14000c53d:	int3   
   14000c53e:	int3   
   14000c53f:	int3   
   14000c540:	mov    QWORD PTR [rsp+0x8],rbx
   14000c545:	mov    QWORD PTR [rsp+0x10],rsi
   14000c54a:	push   rdi
   14000c54b:	sub    rsp,0x20
   14000c54f:	lea    rdi,[rcx+0x8]
   14000c553:	mov    DWORD PTR [rcx],0x0
   14000c559:	mov    rsi,rdx
   14000c55c:	mov    QWORD PTR [rdi],0x0
   14000c563:	mov    rbx,rcx
   14000c566:	mov    DWORD PTR [rdi+0x8],0x4
   14000c56d:	mov    rcx,rdi
   14000c570:	mov    DWORD PTR [rdi+0xc],0x80000000
   14000c577:	mov    edx,0x4
   14000c57c:	call   0x14001a520
   14000c581:	test   dil,0x7
   14000c585:	je     0x14000c592
   14000c587:	call   QWORD PTR [rip+0x26023]        # 0x1400325b0
   14000c58d:	test   eax,eax
   14000c58f:	je     0x14000c592
   14000c591:	int3   
   14000c592:	lea    rax,[rdi+0x10]
   14000c596:	mov    QWORD PTR [rdi],rax
   14000c599:	mov    DWORD PTR [rbx],0x0
   14000c59f:	test   rsi,rsi
   14000c5a2:	je     0x14000c5c6
   14000c5a4:	cmp    DWORD PTR [rbx+0x10],0x0
   14000c5a8:	jne    0x14000c5b7
   14000c5aa:	mov    edx,0x1
   14000c5af:	mov    rcx,rdi
   14000c5b2:	call   0x140023260
   14000c5b7:	inc    DWORD PTR [rbx]
   14000c5b9:	mov    rax,QWORD PTR [rdi]
   14000c5bc:	mov    DWORD PTR [rax+0x8],0xffffffff
   14000c5c3:	mov    QWORD PTR [rax],rsi
   14000c5c6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c5cb:	mov    rax,rbx
   14000c5ce:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c5d3:	add    rsp,0x20
   14000c5d7:	pop    rdi
   14000c5d8:	ret    
   14000c5d9:	int3   
   14000c5da:	int3   
   14000c5db:	int3   
   14000c5dc:	int3   
   14000c5dd:	int3   
   14000c5de:	int3   
   14000c5df:	int3   
   14000c5e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c5e5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c5ea:	push   rdi
   14000c5eb:	sub    rsp,0x20
   14000c5ef:	lea    rbx,[rcx+0x8]
   14000c5f3:	xor    esi,esi
   14000c5f5:	mov    DWORD PTR [rcx],esi
   14000c5f7:	mov    rdi,rcx
   14000c5fa:	mov    rcx,rbx
   14000c5fd:	mov    QWORD PTR [rbx],rsi
   14000c600:	mov    DWORD PTR [rbx+0x8],0x8
   14000c607:	lea    edx,[rsi+0x8]
   14000c60a:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c611:	call   0x14000dc10
   14000c616:	test   bl,0x3
   14000c619:	je     0x14000c626
   14000c61b:	call   QWORD PTR [rip+0x25f8f]        # 0x1400325b0
   14000c621:	test   eax,eax
   14000c623:	je     0x14000c626
   14000c625:	int3   
   14000c626:	lea    rax,[rbx+0x10]
   14000c62a:	mov    edx,0x8
   14000c62f:	mov    QWORD PTR [rbx],rax
   14000c632:	lea    rbx,[rdi+0x40]
   14000c636:	mov    DWORD PTR [rdi+0x38],esi
   14000c639:	mov    rcx,rbx
   14000c63c:	mov    QWORD PTR [rbx],rsi
   14000c63f:	mov    DWORD PTR [rbx+0x8],0x8
   14000c646:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c64d:	call   0x14000db40
   14000c652:	test   bl,0x7
   14000c655:	je     0x14000c662
   14000c657:	call   QWORD PTR [rip+0x25f53]        # 0x1400325b0
   14000c65d:	test   eax,eax
   14000c65f:	je     0x14000c662
   14000c661:	int3   
   14000c662:	lea    rax,[rbx+0x10]
   14000c666:	mov    edx,0x8
   14000c66b:	mov    QWORD PTR [rbx],rax
   14000c66e:	lea    rbx,[rdi+0x98]
   14000c675:	mov    DWORD PTR [rdi+0x90],esi
   14000c67b:	mov    rcx,rbx
   14000c67e:	mov    QWORD PTR [rbx],rsi
   14000c681:	mov    DWORD PTR [rbx+0x8],0x8
   14000c688:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c68f:	call   0x14000db40
   14000c694:	test   bl,0x7
   14000c697:	je     0x14000c6a4
   14000c699:	call   QWORD PTR [rip+0x25f11]        # 0x1400325b0
   14000c69f:	test   eax,eax
   14000c6a1:	je     0x14000c6a4
   14000c6a3:	int3   
   14000c6a4:	lea    rax,[rbx+0x10]
   14000c6a8:	mov    edx,0x8
   14000c6ad:	mov    QWORD PTR [rbx],rax
   14000c6b0:	lea    rbx,[rdi+0xf0]
   14000c6b7:	mov    DWORD PTR [rdi+0xe8],esi
   14000c6bd:	mov    rcx,rbx
   14000c6c0:	mov    QWORD PTR [rbx],rsi
   14000c6c3:	mov    DWORD PTR [rbx+0x8],0x8
   14000c6ca:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c6d1:	call   0x14000da80
   14000c6d6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c6db:	lea    rax,[rbx+0x10]
   14000c6df:	mov    QWORD PTR [rbx],rax
   14000c6e2:	mov    rax,rdi
   14000c6e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c6ea:	add    rsp,0x20
   14000c6ee:	pop    rdi
   14000c6ef:	ret    
   14000c6f0:	mov    rax,QWORD PTR [rcx]
   14000c6f3:	and    rax,0xffffffffffe00003
   14000c6f9:	mov    QWORD PTR [rcx+0x8],0x0
   14000c701:	or     rax,0x3
   14000c705:	mov    QWORD PTR [rcx],rax
   14000c708:	mov    rax,rcx
   14000c70b:	ret    
   14000c70c:	int3   
   14000c70d:	int3   
   14000c70e:	int3   
   14000c70f:	int3   
   14000c710:	mov    QWORD PTR [rsp+0x8],rbx
   14000c715:	mov    QWORD PTR [rsp+0x10],rsi
   14000c71a:	push   rdi
   14000c71b:	sub    rsp,0x20
   14000c71f:	mov    rdi,rcx
   14000c722:	call   0x14000c3f0
   14000c727:	lea    rbx,[rdi+0x408]
   14000c72e:	xor    esi,esi
   14000c730:	mov    DWORD PTR [rdi+0x400],esi
   14000c736:	mov    rcx,rbx
   14000c739:	mov    QWORD PTR [rbx],rsi
   14000c73c:	mov    DWORD PTR [rbx+0x8],0x8
   14000c743:	lea    edx,[rsi+0x8]
   14000c746:	mov    DWORD PTR [rbx+0xc],0x80000000
   14000c74d:	call   0x14000db40
   14000c752:	test   bl,0x7
   14000c755:	je     0x14000c762
   14000c757:	call   QWORD PTR [rip+0x25e53]        # 0x1400325b0
   14000c75d:	test   eax,eax
   14000c75f:	je     0x14000c762
   14000c761:	int3   
   14000c762:	lea    rax,[rbx+0x10]
   14000c766:	lea    rcx,[rdi+0x460]
   14000c76d:	mov    QWORD PTR [rbx],rax
   14000c770:	call   0x14000c380
   14000c775:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c77a:	mov    rax,rdi
   14000c77d:	mov    DWORD PTR [rdi+0x4a0],esi
   14000c783:	mov    QWORD PTR [rdi+0x4a8],rsi
   14000c78a:	mov    DWORD PTR [rdi+0x4b0],esi
   14000c790:	mov    QWORD PTR [rdi+0x4b4],0x8
   14000c79b:	mov    QWORD PTR [rdi+0x4c0],rsi
   14000c7a2:	mov    QWORD PTR [rdi+0x4c8],rsi
   14000c7a9:	mov    DWORD PTR [rdi+0x4d0],esi
   14000c7af:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c7b4:	add    rsp,0x20
   14000c7b8:	pop    rdi
   14000c7b9:	ret    
   14000c7ba:	int3   
   14000c7bb:	int3   
   14000c7bc:	int3   
   14000c7bd:	int3   
   14000c7be:	int3   
   14000c7bf:	int3   
   14000c7c0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c7c5:	push   rdi
   14000c7c6:	sub    rsp,0x20
   14000c7ca:	mov    rbx,rcx
   14000c7cd:	call   0x140010e20
   14000c7d2:	xor    edi,edi
   14000c7d4:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
   14000c7dc:	test   DWORD PTR [rbx+0x14],0xc0000000
   14000c7e3:	jne    0x14000c805
   14000c7e5:	mov    rdx,QWORD PTR [rbx+0x8]
   14000c7e9:	test   rdx,rdx
   14000c7ec:	je     0x14000c802
   14000c7ee:	mov    rax,QWORD PTR [rip+0x25b9b]        # 0x140032390
   14000c7f5:	mov    rcx,QWORD PTR [rax]
   14000c7f8:	mov    rax,QWORD PTR [rcx]
   14000c7fb:	call   QWORD PTR [rax+0x28]
   14000c7fe:	mov    QWORD PTR [rbx+0x8],rdi
   14000c802:	mov    DWORD PTR [rbx+0x10],edi
   14000c805:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
   14000c80d:	test   DWORD PTR [rbx+0x14],0xc0000000
   14000c814:	jne    0x14000c836
   14000c816:	mov    rdx,QWORD PTR [rbx+0x8]
   14000c81a:	test   rdx,rdx
   14000c81d:	je     0x14000c833
   14000c81f:	mov    rax,QWORD PTR [rip+0x25b6a]        # 0x140032390
   14000c826:	mov    rcx,QWORD PTR [rax]
   14000c829:	mov    rax,QWORD PTR [rcx]
   14000c82c:	call   QWORD PTR [rax+0x28]
   14000c82f:	mov    QWORD PTR [rbx+0x8],rdi
   14000c833:	mov    DWORD PTR [rbx+0x10],edi
   14000c836:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c83b:	add    rsp,0x20
   14000c83f:	pop    rdi
   14000c840:	ret    
   14000c841:	int3   
   14000c842:	int3   
   14000c843:	int3   
   14000c844:	int3   
   14000c845:	int3   
   14000c846:	int3   
   14000c847:	int3   
   14000c848:	int3   
   14000c849:	int3   
   14000c84a:	int3   
   14000c84b:	int3   
   14000c84c:	int3   
   14000c84d:	int3   
   14000c84e:	int3   
   14000c84f:	int3   
   14000c850:	rex push rbx
   14000c852:	sub    rsp,0x20
   14000c856:	mov    rbx,rcx
   14000c859:	mov    dl,0x1
   14000c85b:	add    rcx,0x18
   14000c85f:	call   0x14000faa0
   14000c864:	mov    rcx,rbx
   14000c867:	add    rsp,0x20
   14000c86b:	pop    rbx
   14000c86c:	jmp    0x14000c9d0
   14000c871:	int3   
   14000c872:	int3   
   14000c873:	int3   
   14000c874:	int3   
   14000c875:	int3   
   14000c876:	int3   
   14000c877:	int3   
   14000c878:	int3   
   14000c879:	int3   
   14000c87a:	int3   
   14000c87b:	int3   
   14000c87c:	int3   
   14000c87d:	int3   
   14000c87e:	int3   
   14000c87f:	int3   
   14000c880:	mov    QWORD PTR [rsp+0x8],rbx
   14000c885:	mov    QWORD PTR [rsp+0x10],rsi
   14000c88a:	push   rdi
   14000c88b:	sub    rsp,0x20
   14000c88f:	lea    rbx,[rcx+0xf0]
   14000c896:	xor    esi,esi
   14000c898:	mov    rdi,rcx
   14000c89b:	mov    DWORD PTR [rcx+0xe8],esi
   14000c8a1:	lea    rdx,[rbx+0x10]
   14000c8a5:	xor    r9d,r9d
   14000c8a8:	mov    rcx,rbx
   14000c8ab:	lea    r8d,[rsi+0x8]
   14000c8af:	call   0x140010610
   14000c8b4:	test   DWORD PTR [rbx+0xc],0xc0000000
   14000c8bb:	jne    0x14000c8db
   14000c8bd:	mov    rdx,QWORD PTR [rbx]
   14000c8c0:	test   rdx,rdx
   14000c8c3:	je     0x14000c8d8
   14000c8c5:	mov    rax,QWORD PTR [rip+0x25ac4]        # 0x140032390
   14000c8cc:	mov    rcx,QWORD PTR [rax]
   14000c8cf:	mov    rax,QWORD PTR [rcx]
   14000c8d2:	call   QWORD PTR [rax+0x28]
   14000c8d5:	mov    QWORD PTR [rbx],rsi
   14000c8d8:	mov    DWORD PTR [rbx+0x8],esi
   14000c8db:	xor    r9d,r9d
   14000c8de:	mov    DWORD PTR [rdi+0x90],esi
   14000c8e4:	lea    rbx,[rdi+0x98]
   14000c8eb:	lea    rdx,[rbx+0x10]
   14000c8ef:	mov    rcx,rbx
   14000c8f2:	lea    r8d,[r9+0x8]
   14000c8f6:	call   0x140010720
   14000c8fb:	test   DWORD PTR [rbx+0xc],0xc0000000
   14000c902:	jne    0x14000c922
   14000c904:	mov    rdx,QWORD PTR [rbx]
   14000c907:	test   rdx,rdx
   14000c90a:	je     0x14000c91f
   14000c90c:	mov    rax,QWORD PTR [rip+0x25a7d]        # 0x140032390
   14000c913:	mov    rcx,QWORD PTR [rax]
   14000c916:	mov    rax,QWORD PTR [rcx]
   14000c919:	call   QWORD PTR [rax+0x28]
   14000c91c:	mov    QWORD PTR [rbx],rsi
   14000c91f:	mov    DWORD PTR [rbx+0x8],esi
   14000c922:	xor    r9d,r9d
   14000c925:	mov    DWORD PTR [rdi+0x38],esi
   14000c928:	lea    rdx,[rdi+0x50]
   14000c92c:	lea    rcx,[rdi+0x40]
   14000c930:	lea    r8d,[r9+0x8]
   14000c934:	call   0x140010720
   14000c939:	test   DWORD PTR [rdi+0x4c],0xc0000000
   14000c940:	jne    0x14000c962
   14000c942:	mov    rdx,QWORD PTR [rdi+0x40]
   14000c946:	test   rdx,rdx
   14000c949:	je     0x14000c95f
   14000c94b:	mov    rax,QWORD PTR [rip+0x25a3e]        # 0x140032390
   14000c952:	mov    rcx,QWORD PTR [rax]
   14000c955:	mov    rax,QWORD PTR [rcx]
   14000c958:	call   QWORD PTR [rax+0x28]
   14000c95b:	mov    QWORD PTR [rdi+0x40],rsi
   14000c95f:	mov    DWORD PTR [rdi+0x48],esi
   14000c962:	xor    r9d,r9d
   14000c965:	mov    DWORD PTR [rdi],esi
   14000c967:	lea    rdx,[rdi+0x18]
   14000c96b:	lea    rcx,[rdi+0x8]
   14000c96f:	lea    r8d,[r9+0x8]
   14000c973:	call   0x140010840
   14000c978:	test   DWORD PTR [rdi+0x14],0xc0000000
   14000c97f:	jne    0x14000c9a1
   14000c981:	mov    rdx,QWORD PTR [rdi+0x8]
   14000c985:	test   rdx,rdx
   14000c988:	je     0x14000c99e
   14000c98a:	mov    rax,QWORD PTR [rip+0x259ff]        # 0x140032390
   14000c991:	mov    rcx,QWORD PTR [rax]
   14000c994:	mov    rax,QWORD PTR [rcx]
   14000c997:	call   QWORD PTR [rax+0x28]
   14000c99a:	mov    QWORD PTR [rdi+0x8],rsi
   14000c99e:	mov    DWORD PTR [rdi+0x10],esi
   14000c9a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c9a6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c9ab:	add    rsp,0x20
   14000c9af:	pop    rdi
   14000c9b0:	ret    
   14000c9b1:	int3   
   14000c9b2:	int3   
   14000c9b3:	int3   
   14000c9b4:	int3   
   14000c9b5:	int3   
   14000c9b6:	int3   
   14000c9b7:	int3   
   14000c9b8:	int3   
   14000c9b9:	int3   
   14000c9ba:	int3   
   14000c9bb:	int3   
   14000c9bc:	int3   
   14000c9bd:	int3   
   14000c9be:	int3   
   14000c9bf:	int3   
   14000c9c0:	jmp    0x14000f9e0
   14000c9c5:	int3   
   14000c9c6:	int3   
   14000c9c7:	int3   
   14000c9c8:	int3   
   14000c9c9:	int3   
   14000c9ca:	int3   
   14000c9cb:	int3   
   14000c9cc:	int3   
   14000c9cd:	int3   
   14000c9ce:	int3   
   14000c9cf:	int3   
   14000c9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c9d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c9da:	push   rdi
   14000c9db:	sub    rsp,0x20
   14000c9df:	mov    rsi,rcx
   14000c9e2:	add    rcx,0x4b8
   14000c9e9:	call   0x1400181a0
   14000c9ee:	lea    rcx,[rsi+0x460]
   14000c9f5:	call   0x140010ed0
   14000c9fa:	lea    rcx,[rsi+0x4a0]
   14000ca01:	call   0x1400181a0
   14000ca06:	lea    rcx,[rsi+0x460]
   14000ca0d:	call   0x14000c7c0
   14000ca12:	xor    edi,edi
   14000ca14:	lea    rbx,[rsi+0x408]
   14000ca1b:	lea    rdx,[rbx+0x10]
   14000ca1f:	mov    DWORD PTR [rsi+0x400],edi
   14000ca25:	xor    r9d,r9d
   14000ca28:	mov    rcx,rbx
   14000ca2b:	lea    r8d,[rdi+0x8]
   14000ca2f:	call   0x140010720
   14000ca34:	test   DWORD PTR [rbx+0xc],0xc0000000
   14000ca3b:	jne    0x14000ca5b
   14000ca3d:	mov    rdx,QWORD PTR [rbx]
   14000ca40:	test   rdx,rdx
   14000ca43:	je     0x14000ca58
   14000ca45:	mov    rax,QWORD PTR [rip+0x25944]        # 0x140032390
   14000ca4c:	mov    rcx,QWORD PTR [rax]
   14000ca4f:	mov    rax,QWORD PTR [rcx]
   14000ca52:	call   QWORD PTR [rax+0x28]
   14000ca55:	mov    QWORD PTR [rbx],rdi
   14000ca58:	mov    DWORD PTR [rbx+0x8],edi
   14000ca5b:	mov    edi,0x3e
   14000ca60:	lea    rbx,[rsi+0x3f8]
   14000ca67:	nop    WORD PTR [rax+rax*1+0x0]
   14000ca70:	sub    rbx,0x10
   14000ca74:	mov    rcx,rbx
   14000ca77:	call   0x14000f9e0
   14000ca7c:	sub    rdi,0x1
   14000ca80:	jne    0x14000ca70
   14000ca82:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ca87:	mov    rsi,QWORD PTR [rsp+0x38]
   14000ca8c:	add    rsp,0x20
   14000ca90:	pop    rdi
   14000ca91:	ret    
   14000ca92:	int3   
   14000ca93:	int3   
   14000ca94:	int3   
   14000ca95:	int3   
   14000ca96:	int3   
   14000ca97:	int3   
   14000ca98:	int3   
   14000ca99:	int3   
   14000ca9a:	int3   
   14000ca9b:	int3   
   14000ca9c:	int3   
   14000ca9d:	int3   
   14000ca9e:	int3   
   14000ca9f:	int3   
   14000caa0:	rex push rbp
   14000caa2:	push   r13
   14000caa4:	push   r14
   14000caa6:	push   r15
   14000caa8:	sub    rsp,0x28
   14000caac:	movsxd r13,r9d
   14000caaf:	mov    r15,r8
   14000cab2:	mov    r14,rdx
   14000cab5:	mov    rbp,rcx
   14000cab8:	test   r8,r8
   14000cabb:	je     0x14000cbff
   14000cac1:	test   r9d,r9d
   14000cac4:	jle    0x14000cbff
   14000caca:	cmp    BYTE PTR [r8],0x0
   14000cace:	je     0x14000cbff
   14000cad4:	mov    r9d,r13d
   14000cad7:	lea    rdx,[rsp+0x60]
   14000cadc:	call   0x14000e0f0
   14000cae1:	mov    rax,QWORD PTR [rsp+0x60]
   14000cae6:	test   rax,rax
   14000cae9:	je     0x14000cafd
   14000caeb:	mov    QWORD PTR [r14],rax
   14000caee:	mov    rax,r14
   14000caf1:	add    rsp,0x28
   14000caf5:	pop    r15
   14000caf7:	pop    r14
   14000caf9:	pop    r13
   14000cafb:	pop    rbp
   14000cafc:	ret    
   14000cafd:	mov    QWORD PTR [rsp+0x50],rbx
   14000cb02:	mov    rcx,rbp
   14000cb05:	lea    ebx,[r13+0x10]
   14000cb09:	mov    QWORD PTR [rsp+0x58],rsi
   14000cb0e:	and    ebx,0xfffffff8
   14000cb11:	mov    QWORD PTR [rsp+0x20],rdi
   14000cb16:	mov    edx,ebx
   14000cb18:	call   0x14000e590
   14000cb1d:	mov    edi,eax
   14000cb1f:	cmp    eax,0xffffffff
   14000cb22:	jne    0x14000cb84
   14000cb24:	movsxd rax,ebx
   14000cb27:	mov    edi,0x800
   14000cb2c:	add    rax,0xc
   14000cb30:	cmp    rax,rdi
   14000cb33:	jbe    0x14000cb38
   14000cb35:	lea    edi,[rbx+0xc]
   14000cb38:	mov    rax,QWORD PTR [rip+0x25851]        # 0x140032390
   14000cb3f:	movsxd rdx,edi
   14000cb42:	mov    rcx,QWORD PTR [rax]
   14000cb45:	mov    rax,QWORD PTR [rcx]
   14000cb48:	call   QWORD PTR [rax+0x8]
   14000cb4b:	lea    ecx,[rdi-0xc]
   14000cb4e:	mov    rsi,rax
   14000cb51:	mov    DWORD PTR [rax],ecx
   14000cb53:	mov    DWORD PTR [rax+0x4],0x0
   14000cb5a:	movsxd rdi,DWORD PTR [rbp+0x40]
   14000cb5e:	cmp    edi,DWORD PTR [rbp+0x50]
   14000cb61:	jne    0x14000cb71
   14000cb63:	lea    rcx,[rbp+0x48]
   14000cb67:	mov    edx,0x1
   14000cb6c:	call   0x140013420
   14000cb71:	mov    rax,QWORD PTR [rbp+0x48]
   14000cb75:	inc    DWORD PTR [rbp+0x40]
   14000cb78:	lea    rdx,[rax+rdi*8]
   14000cb7c:	test   rdx,rdx
   14000cb7f:	je     0x14000cb84
   14000cb81:	mov    QWORD PTR [rdx],rsi
   14000cb84:	mov    rax,QWORD PTR [rbp+0x48]
   14000cb88:	movsxd rcx,edi
   14000cb8b:	mov    r8,QWORD PTR [rax+rcx*8]
   14000cb8f:	movsxd rcx,DWORD PTR [r8+0x4]
   14000cb93:	lea    eax,[rcx+rbx*1]
   14000cb96:	lea    rsi,[r8+rcx*1]
   14000cb9a:	mov    DWORD PTR [r8+0x4],eax
   14000cb9e:	mov    rcx,r15
   14000cba1:	call   0x1400226d0
   14000cba6:	mov    eax,eax
   14000cba8:	lea    rcx,[rsi+0x10]
   14000cbac:	mov    r8,r13
   14000cbaf:	mov    QWORD PTR [rsi+0x8],rax
   14000cbb3:	mov    rdx,r15
   14000cbb6:	call   0x140026f70
   14000cbbb:	lea    rdx,[rsi+0x8]
   14000cbbf:	mov    BYTE PTR [r13+rsi*1+0x10],0x0
   14000cbc5:	mov    rcx,rbp
   14000cbc8:	call   0x14000f1e0
   14000cbcd:	mov    rdi,QWORD PTR [rsp+0x20]
   14000cbd2:	mov    rsi,QWORD PTR [rsp+0x58]
   14000cbd7:	mov    rbx,QWORD PTR [rsp+0x50]
   14000cbdc:	lea    rcx,[rax+rax*4]
   14000cbe0:	mov    rax,QWORD PTR [rbp+0x8]
   14000cbe4:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   14000cbe9:	mov    rax,r14
   14000cbec:	add    rdx,0x8
   14000cbf0:	mov    QWORD PTR [r14],rdx
   14000cbf3:	add    rsp,0x28
   14000cbf7:	pop    r15
   14000cbf9:	pop    r14
   14000cbfb:	pop    r13
   14000cbfd:	pop    rbp
   14000cbfe:	ret    
   14000cbff:	mov    QWORD PTR [rdx],0x0
   14000cc06:	mov    rax,r14
   14000cc09:	add    rsp,0x28
   14000cc0d:	pop    r15
   14000cc0f:	pop    r14
   14000cc11:	pop    r13
   14000cc13:	pop    rbp
   14000cc14:	ret    
   14000cc15:	int3   
   14000cc16:	int3   
   14000cc17:	int3   
   14000cc18:	int3   
   14000cc19:	int3   
   14000cc1a:	int3   
   14000cc1b:	int3   
   14000cc1c:	int3   
   14000cc1d:	int3   
   14000cc1e:	int3   
   14000cc1f:	int3   
   14000cc20:	rex push rbx
   14000cc22:	sub    rsp,0x30
   14000cc26:	mov    eax,DWORD PTR [rcx]
   14000cc28:	mov    rbx,rcx
   14000cc2b:	test   eax,eax
   14000cc2d:	je     0x14000ce2e
   14000cc33:	mov    QWORD PTR [rsp+0x48],rsi
   14000cc38:	xor    esi,esi
   14000cc3a:	mov    QWORD PTR [rsp+0x50],rdi
   14000cc3f:	mov    QWORD PTR [rsp+0x28],r14
   14000cc44:	mov    QWORD PTR [rsp+0x20],r15
   14000cc49:	mov    QWORD PTR [rsp+0x40],rbp
   14000cc4e:	xchg   ax,ax
   14000cc50:	lea    r8d,[rax-0x1]
   14000cc54:	movsxd rdi,r8d
   14000cc57:	shl    rdi,0x4
   14000cc5b:	add    rdi,QWORD PTR [rbx+0x8]
   14000cc5f:	mov    r14,QWORD PTR [rdi]
   14000cc62:	mov    rcx,QWORD PTR [r14]
   14000cc65:	mov    rdx,rcx
   14000cc68:	and    edx,0x1e
   14000cc6b:	lea    rax,[rdx-0x14]
   14000cc6f:	test   rax,0xfffffffffffffff9
   14000cc75:	jne    0x14000cc7d
   14000cc77:	cmp    rdx,0x1a
   14000cc7b:	jne    0x14000ccc8
   14000cc7d:	movzx  eax,cl
   14000cc80:	shr    al,1
   14000cc82:	and    al,0xf
   14000cc84:	cmp    al,0x8
   14000cc86:	jne    0x14000ccc8
   14000cc88:	inc    DWORD PTR [rdi+0x8]
   14000cc8b:	mov    rcx,QWORD PTR [r14]
   14000cc8e:	mov    rdx,rcx
   14000cc91:	and    edx,0x1e
   14000cc94:	lea    rax,[rdx-0x14]
   14000cc98:	test   rax,0xfffffffffffffff9
   14000cc9e:	jne    0x14000cca6
   14000cca0:	cmp    rdx,0x1a
   14000cca4:	jne    0x14000ccbd
   14000cca6:	shr    cl,1
   14000cca8:	and    cl,0xf
   14000ccab:	cmp    cl,0x8
   14000ccae:	jne    0x14000ccbd
   14000ccb0:	mov    rax,QWORD PTR [r14+0x8]
   14000ccb4:	test   rax,rax
   14000ccb7:	je     0x14000ccbd
   14000ccb9:	mov    eax,DWORD PTR [rax]
   14000ccbb:	jmp    0x14000ccbf
   14000ccbd:	mov    eax,esi
   14000ccbf:	cmp    DWORD PTR [rdi+0x8],eax
   14000ccc2:	jl     0x14000cd35
   14000ccc4:	dec    DWORD PTR [rbx]
   14000ccc6:	jmp    0x14000cd26
   14000ccc8:	lea    rax,[rdx-0x14]
   14000cccc:	test   rax,0xfffffffffffffff9
   14000ccd2:	jne    0x14000ccda
   14000ccd4:	cmp    rdx,0x1a
   14000ccd8:	jne    0x14000cd23
   14000ccda:	shr    cl,1
   14000ccdc:	and    cl,0xf
   14000ccdf:	cmp    cl,0x9
   14000cce2:	jne    0x14000cd23
   14000cce4:	inc    DWORD PTR [rdi+0x8]
   14000cce7:	mov    rcx,QWORD PTR [r14]
   14000ccea:	mov    rdx,rcx
   14000cced:	and    edx,0x1e
   14000ccf0:	lea    rax,[rdx-0x14]
   14000ccf4:	test   rax,0xfffffffffffffff9
   14000ccfa:	jne    0x14000cd02
   14000ccfc:	cmp    rdx,0x1a
   14000cd00:	jne    0x14000cd0c
   14000cd02:	shr    cl,1
   14000cd04:	and    cl,0xf
   14000cd07:	cmp    cl,0x9
   14000cd0a:	je     0x14000cd10
   14000cd0c:	mov    eax,esi
   14000cd0e:	jmp    0x14000cd16
   14000cd10:	mov    rax,QWORD PTR [r14+0x8]
   14000cd14:	mov    eax,DWORD PTR [rax]
   14000cd16:	cmp    DWORD PTR [rdi+0x8],eax
   14000cd19:	jl     0x14000cda6
   14000cd1f:	dec    DWORD PTR [rbx]
   14000cd21:	jmp    0x14000cd26
   14000cd23:	mov    DWORD PTR [rbx],r8d
   14000cd26:	mov    eax,DWORD PTR [rbx]
   14000cd28:	test   eax,eax
   14000cd2a:	jne    0x14000cc50
   14000cd30:	jmp    0x14000ce15
   14000cd35:	movsxd rbp,DWORD PTR [rbx]
   14000cd38:	cmp    ebp,DWORD PTR [rbx+0x10]
   14000cd3b:	jne    0x14000cd4b
   14000cd3d:	mov    edx,0x1
   14000cd42:	lea    rcx,[rbx+0x8]
   14000cd46:	call   0x140023260
   14000cd4b:	inc    DWORD PTR [rbx]
   14000cd4d:	mov    rdx,rbp
   14000cd50:	shl    rdx,0x4
   14000cd54:	add    rdx,QWORD PTR [rbx+0x8]
   14000cd58:	mov    DWORD PTR [rdx+0x8],0xffffffff
   14000cd5f:	mov    rcx,QWORD PTR [r14]
   14000cd62:	movsxd r8,DWORD PTR [rdi+0x8]
   14000cd66:	mov    r9,rcx
   14000cd69:	and    r9d,0x1e
   14000cd6d:	lea    rax,[r9-0x14]
   14000cd71:	test   rax,0xfffffffffffffff9
   14000cd77:	jne    0x14000cd7f
   14000cd79:	cmp    r9,0x1a
   14000cd7d:	jne    0x14000cda1
   14000cd7f:	shr    cl,1
   14000cd81:	and    cl,0xf
   14000cd84:	cmp    cl,0x8
   14000cd87:	jne    0x14000cda1
   14000cd89:	mov    rax,QWORD PTR [r14+0x8]
   14000cd8d:	test   rax,rax
   14000cd90:	je     0x14000cda1
   14000cd92:	test   r8d,r8d
   14000cd95:	js     0x14000cda1
   14000cd97:	cmp    r8,QWORD PTR [rax]
   14000cd9a:	jge    0x14000cda1
   14000cd9c:	mov    rsi,QWORD PTR [rax+r8*8+0x8]
   14000cda1:	mov    QWORD PTR [rdx],rsi
   14000cda4:	jmp    0x14000ce15
   14000cda6:	movsxd rbp,DWORD PTR [rbx]
   14000cda9:	cmp    ebp,DWORD PTR [rbx+0x10]
   14000cdac:	jne    0x14000cdbc
   14000cdae:	mov    edx,0x1
   14000cdb3:	lea    rcx,[rbx+0x8]
   14000cdb7:	call   0x140023260
   14000cdbc:	inc    DWORD PTR [rbx]
   14000cdbe:	mov    r8,rbp
   14000cdc1:	shl    r8,0x4
   14000cdc5:	add    r8,QWORD PTR [rbx+0x8]
   14000cdc9:	mov    DWORD PTR [r8+0x8],0xffffffff
   14000cdd1:	mov    rcx,QWORD PTR [r14]
   14000cdd4:	movsxd rdx,DWORD PTR [rdi+0x8]
   14000cdd8:	mov    r9,rcx
   14000cddb:	and    r9d,0x1e
   14000cddf:	lea    rax,[r9-0x14]
   14000cde3:	test   rax,0xfffffffffffffff9
   14000cde9:	jne    0x14000cdf1
   14000cdeb:	cmp    r9,0x1a
   14000cdef:	jne    0x14000ce12
   14000cdf1:	shr    cl,1
   14000cdf3:	and    cl,0xf
   14000cdf6:	cmp    cl,0x9
   14000cdf9:	jne    0x14000ce12
   14000cdfb:	mov    rax,QWORD PTR [r14+0x8]
   14000cdff:	test   edx,edx
   14000ce01:	js     0x14000ce12
   14000ce03:	cmp    edx,DWORD PTR [rax]
   14000ce05:	jge    0x14000ce12
   14000ce07:	mov    rax,QWORD PTR [rax+0x98]
   14000ce0e:	mov    rsi,QWORD PTR [rax+rdx*8]
   14000ce12:	mov    QWORD PTR [r8],rsi
   14000ce15:	mov    rbp,QWORD PTR [rsp+0x40]
   14000ce1a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000ce1f:	mov    rsi,QWORD PTR [rsp+0x48]
   14000ce24:	mov    r14,QWORD PTR [rsp+0x28]
   14000ce29:	mov    r15,QWORD PTR [rsp+0x20]
   14000ce2e:	add    rsp,0x30
   14000ce32:	pop    rbx
   14000ce33:	ret    
   14000ce34:	int3   
   14000ce35:	int3   
   14000ce36:	int3   
   14000ce37:	int3   
   14000ce38:	int3   
   14000ce39:	int3   
   14000ce3a:	int3   
   14000ce3b:	int3   
   14000ce3c:	int3   
   14000ce3d:	int3   
   14000ce3e:	int3   
   14000ce3f:	int3   
   14000ce40:	mov    QWORD PTR [rsp+0x18],rbx
   14000ce45:	push   rbp
   14000ce46:	sub    rsp,0x20
   14000ce4a:	movsxd rbx,r8d
   14000ce4d:	mov    rbp,rdx
   14000ce50:	test   r8d,r8d
   14000ce53:	jne    0x14000ce62
   14000ce55:	xor    eax,eax
   14000ce57:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ce5c:	add    rsp,0x20
   14000ce60:	pop    rbp
   14000ce61:	ret    
   14000ce62:	mov    rax,QWORD PTR [rip+0x25527]        # 0x140032390
   14000ce69:	lea    rdx,[rbx+0x8]
   14000ce6d:	mov    QWORD PTR [rsp+0x30],rsi
   14000ce72:	mov    QWORD PTR [rsp+0x38],rdi
   14000ce77:	mov    rcx,QWORD PTR [rax]
   14000ce7a:	mov    rax,QWORD PTR [rcx]
   14000ce7d:	call   QWORD PTR [rax+0x8]
   14000ce80:	mov    rdi,rax
   14000ce83:	mov    QWORD PTR [rax],rbx
   14000ce86:	test   ebx,ebx
   14000ce88:	jns    0x14000ce8b
   14000ce8a:	int3   
   14000ce8b:	lea    rcx,[rax+0x8]
   14000ce8f:	mov    r8,rbx
   14000ce92:	mov    rdx,rbp
   14000ce95:	call   0x140026f70
   14000ce9a:	mov    rsi,QWORD PTR [rsp+0x30]
   14000ce9f:	mov    rax,rdi
   14000cea2:	mov    rdi,QWORD PTR [rsp+0x38]
   14000cea7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ceac:	add    rsp,0x20
   14000ceb0:	pop    rbp
   14000ceb1:	ret    
   14000ceb2:	int3   
   14000ceb3:	int3   
   14000ceb4:	int3   
   14000ceb5:	int3   
   14000ceb6:	int3   
   14000ceb7:	int3   
   14000ceb8:	int3   
   14000ceb9:	int3   
   14000ceba:	int3   
   14000cebb:	int3   
   14000cebc:	int3   
   14000cebd:	int3   
   14000cebe:	int3   
   14000cebf:	int3   
   14000cec0:	rex push rbx
   14000cec2:	sub    rsp,0x20
   14000cec6:	inc    DWORD PTR [rcx+0x4d0]
   14000cecc:	mov    rbx,rcx
   14000cecf:	mov    rcx,QWORD PTR [rcx+0x458]
   14000ced6:	test   rcx,rcx
   14000ced9:	je     0x14000cf14
   14000cedb:	call   0x14000d090
   14000cee0:	mov    rdx,QWORD PTR [rbx+0x458]
   14000cee7:	movabs rcx,0x3fffffffffffffff
   14000cef1:	cmp    QWORD PTR [rdx+0x10],rcx
   14000cef5:	jne    0x14000cfb2
   14000cefb:	mov    rcx,QWORD PTR [rdx+0x8]
   14000ceff:	mov    QWORD PTR [rdx+0x8],0x0
   14000cf07:	mov    QWORD PTR [rbx+0x458],rcx
   14000cf0e:	add    rsp,0x20
   14000cf12:	pop    rbx
   14000cf13:	ret    
   14000cf14:	mov    rax,QWORD PTR [rip+0x25475]        # 0x140032390
   14000cf1b:	mov    edx,0x807
   14000cf20:	mov    QWORD PTR [rsp+0x30],rsi
   14000cf25:	mov    QWORD PTR [rsp+0x38],rdi
   14000cf2a:	mov    rcx,QWORD PTR [rax]
   14000cf2d:	mov    rax,QWORD PTR [rcx]
   14000cf30:	call   QWORD PTR [rax+0x8]
   14000cf33:	lea    rcx,[rax+0x407]
   14000cf3a:	and    rcx,0xfffffffffffffc00
   14000cf41:	mov    QWORD PTR [rcx-0x8],rax
   14000cf45:	call   0x14000c3f0
   14000cf4a:	xor    edx,edx
   14000cf4c:	mov    r8d,0x400
   14000cf52:	mov    rcx,rax
   14000cf55:	mov    rdi,rax
   14000cf58:	call   0x1400277b0
   14000cf5d:	mov    QWORD PTR [rdi],rbx
   14000cf60:	movsxd rsi,DWORD PTR [rbx+0x400]
   14000cf67:	cmp    esi,DWORD PTR [rbx+0x410]
   14000cf6d:	jne    0x14000cf80
   14000cf6f:	lea    rcx,[rbx+0x408]
   14000cf76:	mov    edx,0x1
   14000cf7b:	call   0x140013420
   14000cf80:	mov    rax,QWORD PTR [rbx+0x408]
   14000cf87:	inc    DWORD PTR [rbx+0x400]
   14000cf8d:	lea    rdx,[rax+rsi*8]
   14000cf91:	mov    rsi,QWORD PTR [rsp+0x30]
   14000cf96:	test   rdx,rdx
   14000cf99:	je     0x14000cf9e
   14000cf9b:	mov    QWORD PTR [rdx],rdi
   14000cf9e:	mov    rcx,rdi
   14000cfa1:	mov    QWORD PTR [rbx+0x458],rdi
   14000cfa8:	call   0x14000d090
   14000cfad:	mov    rdi,QWORD PTR [rsp+0x38]
   14000cfb2:	add    rsp,0x20
   14000cfb6:	pop    rbx
   14000cfb7:	ret    
   14000cfb8:	int3   
   14000cfb9:	int3   
   14000cfba:	int3   
   14000cfbb:	int3   
   14000cfbc:	int3   
   14000cfbd:	int3   
   14000cfbe:	int3   
   14000cfbf:	int3   
   14000cfc0:	rex push rbx
   14000cfc2:	sub    rsp,0x20
   14000cfc6:	movzx  eax,BYTE PTR [rcx]
   14000cfc9:	xor    r8d,r8d
   14000cfcc:	and    rcx,0xfffffffffffffc00
   14000cfd3:	mov    rbx,rdx
   14000cfd6:	and    al,0x1
   14000cfd8:	mov    edx,r8d
   14000cfdb:	cmove  rdx,rcx
   14000cfdf:	test   rdx,rdx
   14000cfe2:	je     0x14000cfe9
   14000cfe4:	mov    rcx,QWORD PTR [rdx]
   14000cfe7:	jmp    0x14000cfec
   14000cfe9:	mov    rcx,r8
   14000cfec:	test   rcx,rcx
   14000cfef:	je     0x14000d03e
   14000cff1:	test   rbx,rbx
   14000cff4:	je     0x14000d00b
   14000cff6:	or     rdx,0xffffffffffffffff
   14000cffa:	nop    WORD PTR [rax+rax*1+0x0]
   14000d000:	inc    rdx
   14000d003:	cmp    BYTE PTR [rbx+rdx*1],r8b
   14000d007:	jne    0x14000d000
   14000d009:	jmp    0x14000d00e
   14000d00b:	mov    edx,r8d
   14000d00e:	mov    r9d,edx
   14000d011:	add    rcx,0x460
   14000d018:	lea    rdx,[rsp+0x30]
   14000d01d:	mov    r8,rbx
   14000d020:	call   0x14000caa0
   14000d025:	mov    rcx,QWORD PTR [rsp+0x30]
   14000d02a:	lea    rax,[rip+0x2576f]        # 0x1400327a0
   14000d031:	test   rcx,rcx
   14000d034:	cmovne rax,rcx
   14000d038:	add    rsp,0x20
   14000d03c:	pop    rbx
   14000d03d:	ret    
   14000d03e:	test   rbx,rbx
   14000d041:	je     0x14000d07e
   14000d043:	or     rdx,0xffffffffffffffff
   14000d047:	inc    rdx
   14000d04a:	cmp    BYTE PTR [rbx+rdx*1],r8b
   14000d04e:	jne    0x14000d047
   14000d050:	mov    rax,QWORD PTR [rip+0x25339]        # 0x140032390
   14000d057:	inc    rdx
   14000d05a:	mov    rcx,QWORD PTR [rax]
   14000d05d:	mov    rax,QWORD PTR [rcx]
   14000d060:	call   QWORD PTR [rax+0x8]
   14000d063:	mov    rdx,rax
   14000d066:	mov    r8,rax
   14000d069:	sub    rdx,rbx
   14000d06c:	nop    DWORD PTR [rax+0x0]
   14000d070:	movzx  ecx,BYTE PTR [rbx]
   14000d073:	mov    BYTE PTR [rdx+rbx*1],cl
   14000d076:	lea    rbx,[rbx+0x1]
   14000d07a:	test   cl,cl
   14000d07c:	jne    0x14000d070
   14000d07e:	mov    rax,r8
   14000d081:	add    rsp,0x20
   14000d085:	pop    rbx
   14000d086:	ret    
   14000d087:	int3   
   14000d088:	int3   
   14000d089:	int3   
   14000d08a:	int3   
   14000d08b:	int3   
   14000d08c:	int3   
   14000d08d:	int3   
   14000d08e:	int3   
   14000d08f:	int3   
   14000d090:	mov    r8,QWORD PTR [rcx+0x10]
   14000d094:	mov    rax,r8
   14000d097:	not    rax
   14000d09a:	test   eax,eax
   14000d09c:	je     0x14000d0ab
   14000d09e:	bsf    edx,eax
   14000d0a1:	mov    eax,0xffffffff
   14000d0a6:	cmove  edx,eax
   14000d0a9:	jmp    0x14000d0c0
   14000d0ab:	shr    rax,0x20
   14000d0af:	test   eax,eax
   14000d0b1:	je     0x14000d0f7
   14000d0b3:	bsf    edx,eax
   14000d0b6:	jne    0x14000d0bd
   14000d0b8:	or     edx,0xffffffff
   14000d0bb:	jmp    0x14000d0c0
   14000d0bd:	add    edx,0x20
   14000d0c0:	cmp    edx,0xffffffff
   14000d0c3:	je     0x14000d0f7
   14000d0c5:	movsxd rax,edx
   14000d0c8:	bts    r8,rax
   14000d0cc:	shl    rax,0x4
   14000d0d0:	add    rax,0x18
   14000d0d4:	mov    QWORD PTR [rcx+0x10],r8
   14000d0d8:	add    rax,rcx
   14000d0db:	je     0x14000d0f9
   14000d0dd:	mov    rcx,QWORD PTR [rax]
   14000d0e0:	and    rcx,0xffffffffffe00002
   14000d0e7:	mov    QWORD PTR [rax+0x8],0x0
   14000d0ef:	or     rcx,0x2
   14000d0f3:	mov    QWORD PTR [rax],rcx
   14000d0f6:	ret    
   14000d0f7:	xor    eax,eax
   14000d0f9:	ret    
   14000d0fa:	int3   
   14000d0fb:	int3   
   14000d0fc:	int3   
   14000d0fd:	int3   
   14000d0fe:	int3   
   14000d0ff:	int3   
   14000d100:	mov    QWORD PTR [rsp+0x8],rbx
   14000d105:	push   rdi
   14000d106:	sub    rsp,0x20
   14000d10a:	mov    rdx,QWORD PTR [rcx]
   14000d10d:	mov    rbx,rcx
   14000d110:	mov    rcx,rdx
   14000d113:	and    ecx,0x1e
   14000d116:	lea    rax,[rcx-0x14]
   14000d11a:	test   rax,0xfffffffffffffff9
   14000d120:	jne    0x14000d128
   14000d122:	cmp    rcx,0x1a
   14000d126:	jne    0x14000d132
   14000d128:	shr    dl,1
   14000d12a:	and    dl,0xf
   14000d12d:	cmp    dl,0x8
   14000d130:	je     0x14000d13c
   14000d132:	mov    dl,0x8
   14000d134:	mov    rcx,rbx
   14000d137:	call   0x14000faa0
   14000d13c:	mov    rcx,QWORD PTR [rbx]
   14000d13f:	mov    rdx,rcx
   14000d142:	and    edx,0x1e
   14000d145:	lea    rax,[rdx-0x14]
   14000d149:	test   rax,0xfffffffffffffff9
   14000d14f:	jne    0x14000d157
   14000d151:	cmp    rdx,0x1a
   14000d155:	jne    0x14000d16e
   14000d157:	shr    cl,1
   14000d159:	and    cl,0xf
   14000d15c:	cmp    cl,0x8
   14000d15f:	jne    0x14000d16e
   14000d161:	mov    rax,QWORD PTR [rbx+0x8]
   14000d165:	test   rax,rax
   14000d168:	je     0x14000d16e
   14000d16a:	mov    edi,DWORD PTR [rax]
   14000d16c:	jmp    0x14000d170
   14000d16e:	xor    edi,edi
   14000d170:	mov    rdx,QWORD PTR [rbx+0x8]
   14000d174:	mov    r9d,0x1
   14000d17a:	mov    r8d,edi
   14000d17d:	mov    rcx,rbx
   14000d180:	call   0x14000d1e0
   14000d185:	mov    rdx,QWORD PTR [rbx]
   14000d188:	mov    r8,rdx
   14000d18b:	mov    QWORD PTR [rbx+0x8],rax
   14000d18f:	and    r8d,0x1e
   14000d193:	lea    rcx,[r8-0x14]
   14000d197:	test   rcx,0xfffffffffffffff9
   14000d19e:	jne    0x14000d1a6
   14000d1a0:	cmp    r8,0x1a
   14000d1a4:	jne    0x14000d1d1
   14000d1a6:	shr    dl,1
   14000d1a8:	and    dl,0xf
   14000d1ab:	cmp    dl,0x8
   14000d1ae:	jne    0x14000d1d1
   14000d1b0:	test   rax,rax
   14000d1b3:	je     0x14000d1d1
   14000d1b5:	test   edi,edi
   14000d1b7:	js     0x14000d1d1
   14000d1b9:	movsxd rcx,edi
   14000d1bc:	cmp    rcx,QWORD PTR [rax]
   14000d1bf:	jge    0x14000d1d1
   14000d1c1:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
   14000d1c6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1cb:	add    rsp,0x20
   14000d1cf:	pop    rdi
   14000d1d0:	ret    
   14000d1d1:	xor    eax,eax
   14000d1d3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d1d8:	add    rsp,0x20
   14000d1dc:	pop    rdi
   14000d1dd:	ret    
   14000d1de:	int3   
   14000d1df:	int3   
   14000d1e0:	mov    DWORD PTR [rsp+0x18],r8d
   14000d1e5:	push   rbp
   14000d1e6:	push   rsi
   14000d1e7:	push   rdi
   14000d1e8:	push   r12
   14000d1ea:	sub    rsp,0x48
   14000d1ee:	movsxd rdi,r9d
   14000d1f1:	mov    rsi,rdx
   14000d1f4:	movsxd rbp,r8d
   14000d1f7:	mov    r12,rcx
   14000d1fa:	test   r9d,r9d
   14000d1fd:	jne    0x14000d20c
   14000d1ff:	mov    rax,rdx
   14000d202:	add    rsp,0x48
   14000d206:	pop    r12
   14000d208:	pop    rdi
   14000d209:	pop    rsi
   14000d20a:	pop    rbp
   14000d20b:	ret    
   14000d20c:	mov    QWORD PTR [rsp+0x70],rbx
   14000d211:	mov    QWORD PTR [rsp+0x78],r13
   14000d216:	mov    QWORD PTR [rsp+0x88],r14
   14000d21e:	mov    QWORD PTR [rsp+0x40],r15
   14000d223:	test   rsi,rsi
   14000d226:	je     0x14000d22d
   14000d228:	mov    r14d,DWORD PTR [rdx]
   14000d22b:	jmp    0x14000d230
   14000d22d:	xor    r14d,r14d
   14000d230:	lea    eax,[r14+rdi*1]
   14000d234:	movsxd rbx,eax
   14000d237:	mov    rax,QWORD PTR [rip+0x25152]        # 0x140032390
   14000d23e:	lea    rdx,[rbx*8+0x8]
   14000d246:	mov    rcx,QWORD PTR [rax]
   14000d249:	mov    rax,QWORD PTR [rcx]
   14000d24c:	call   QWORD PTR [rax+0x8]
   14000d24f:	mov    QWORD PTR [rsp+0x20],rbp
   14000d254:	lea    r13,[rsi+0x8]
   14000d258:	mov    QWORD PTR [rsp+0x30],rax
   14000d25d:	mov    r9,rbp
   14000d260:	mov    QWORD PTR [rax],rbx
   14000d263:	lea    r10,[rax+0x8]
   14000d267:	mov    QWORD PTR [rsp+0x28],r10
   14000d26c:	test   ebp,ebp
   14000d26e:	jle    0x14000d298
   14000d270:	mov    r8,r10
   14000d273:	mov    rcx,r13
   14000d276:	sub    r8,r13
   14000d279:	mov    rdx,rbp
   14000d27c:	nop    DWORD PTR [rax+0x0]
   14000d280:	mov    rax,QWORD PTR [rcx]
   14000d283:	mov    QWORD PTR [r8+rcx*1],rax
   14000d287:	mov    QWORD PTR [rcx],0x0
   14000d28e:	lea    rcx,[rcx+0x8]
   14000d292:	sub    rdx,0x1
   14000d296:	jne    0x14000d280
   14000d298:	mov    r15,rdi
   14000d29b:	test   edi,edi
   14000d29d:	jle    0x14000d322
   14000d2a3:	mov    rbp,r12
   14000d2a6:	lea    rbx,[r10+r9*8]
   14000d2aa:	and    rbp,0xfffffffffffffc00
   14000d2b1:	test   BYTE PTR [r12],0x1
   14000d2b6:	mov    ecx,0x0
   14000d2bb:	cmove  rcx,rbp
   14000d2bf:	test   rcx,rcx
   14000d2c2:	je     0x14000d2c7
   14000d2c4:	mov    rcx,QWORD PTR [rcx]
   14000d2c7:	test   rcx,rcx
   14000d2ca:	je     0x14000d2d6
   14000d2cc:	call   0x14000cec0
   14000d2d1:	mov    rcx,rax
   14000d2d4:	jmp    0x14000d304
   14000d2d6:	mov    ecx,0x10
   14000d2db:	call   0x140007bf0
   14000d2e0:	mov    rcx,rax
   14000d2e3:	test   rax,rax
   14000d2e6:	je     0x14000d302
   14000d2e8:	mov    rax,QWORD PTR [rax]
   14000d2eb:	and    rax,0xffffffffffe00003
   14000d2f1:	mov    QWORD PTR [rcx+0x8],0x0
   14000d2f9:	or     rax,0x3
   14000d2fd:	mov    QWORD PTR [rcx],rax
   14000d300:	jmp    0x14000d304
   14000d302:	xor    ecx,ecx
   14000d304:	mov    QWORD PTR [rbx],rcx
   14000d307:	add    rbx,0x8
   14000d30b:	sub    rdi,0x1
   14000d30f:	jne    0x14000d2b1
   14000d311:	mov    r9,QWORD PTR [rsp+0x20]
   14000d316:	mov    r10,QWORD PTR [rsp+0x28]
   14000d31b:	mov    ebp,DWORD PTR [rsp+0x80]
   14000d322:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d327:	sub    r14d,ebp
   14000d32a:	mov    eax,0x0
   14000d32f:	cmovns eax,r14d
   14000d333:	mov    r14,QWORD PTR [rsp+0x88]
   14000d33b:	movsxd rdx,eax
   14000d33e:	test   eax,eax
   14000d340:	jle    0x14000d378
   14000d342:	lea    rax,[r9*8+0x0]
   14000d34a:	lea    r8,[r15*8+0x0]
   14000d352:	add    rax,r13
   14000d355:	sub    r8,r13
   14000d358:	add    r8,r10
   14000d35b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d360:	mov    rcx,QWORD PTR [rax]
   14000d363:	mov    QWORD PTR [r8+rax*1],rcx
   14000d367:	mov    QWORD PTR [rax],0x0
   14000d36e:	lea    rax,[rax+0x8]
   14000d372:	sub    rdx,0x1
   14000d376:	jne    0x14000d360
   14000d378:	mov    rax,QWORD PTR [rip+0x25011]        # 0x140032390
   14000d37f:	mov    rdx,rsi
   14000d382:	mov    rcx,QWORD PTR [rax]
   14000d385:	mov    rax,QWORD PTR [rcx]
   14000d388:	call   QWORD PTR [rax+0x28]
   14000d38b:	mov    rax,QWORD PTR [rsp+0x30]
   14000d390:	mov    r15,QWORD PTR [rsp+0x40]
   14000d395:	mov    r13,QWORD PTR [rsp+0x78]
   14000d39a:	add    rsp,0x48
   14000d39e:	pop    r12
   14000d3a0:	pop    rdi
   14000d3a1:	pop    rsi
   14000d3a2:	pop    rbp
   14000d3a3:	ret    
   14000d3a4:	int3   
   14000d3a5:	int3   
   14000d3a6:	int3   
   14000d3a7:	int3   
   14000d3a8:	int3   
   14000d3a9:	int3   
   14000d3aa:	int3   
   14000d3ab:	int3   
   14000d3ac:	int3   
   14000d3ad:	int3   
   14000d3ae:	int3   
   14000d3af:	int3   
   14000d3b0:	rex push rsi
   14000d3b2:	push   rdi
   14000d3b3:	push   r13
   14000d3b5:	push   r14
   14000d3b7:	sub    rsp,0x38
   14000d3bb:	movsxd rdi,r9d
   14000d3be:	mov    rsi,rdx
   14000d3c1:	movsxd r14,r8d
   14000d3c4:	mov    r13,rcx
   14000d3c7:	test   r9d,r9d
   14000d3ca:	jne    0x14000d3da
   14000d3cc:	mov    rax,rdx
   14000d3cf:	add    rsp,0x38
   14000d3d3:	pop    r14
   14000d3d5:	pop    r13
   14000d3d7:	pop    rdi
   14000d3d8:	pop    rsi
   14000d3d9:	ret    
   14000d3da:	mov    QWORD PTR [rsp+0x70],r12
   14000d3df:	mov    QWORD PTR [rsp+0x30],r15
   14000d3e4:	test   rsi,rsi
   14000d3e7:	je     0x14000d3ee
   14000d3e9:	mov    r15d,DWORD PTR [rdx]
   14000d3ec:	jmp    0x14000d3f1
   14000d3ee:	xor    r15d,r15d
   14000d3f1:	lea    r12d,[r14+rdi*1]
   14000d3f5:	mov    DWORD PTR [rsp+0x78],r12d
   14000d3fa:	cmp    r12d,r15d
   14000d3fd:	jle    0x14000d407
   14000d3ff:	mov    rax,rsi
   14000d402:	jmp    0x14000d560
   14000d407:	mov    eax,r15d
   14000d40a:	sub    eax,edi
   14000d40c:	jne    0x14000d41f
   14000d40e:	test   rsi,rsi
   14000d411:	je     0x14000d41f
   14000d413:	call   0x14000e6b0
   14000d418:	xor    eax,eax
   14000d41a:	jmp    0x14000d560
   14000d41f:	mov    QWORD PTR [rsp+0x60],rbx
   14000d424:	movsxd rbx,eax
   14000d427:	mov    rax,QWORD PTR [rip+0x24f62]        # 0x140032390
   14000d42e:	mov    QWORD PTR [rsp+0x68],rbp
   14000d433:	lea    rdx,[rbx*8+0x8]
   14000d43b:	mov    rcx,QWORD PTR [rax]
   14000d43e:	mov    rax,QWORD PTR [rcx]
   14000d441:	call   QWORD PTR [rax+0x8]
   14000d444:	mov    QWORD PTR [rsp+0x28],rax
   14000d449:	lea    r9,[rsi+0x8]
   14000d44d:	mov    QWORD PTR [rax],rbx
   14000d450:	lea    r10,[rax+0x8]
   14000d454:	mov    QWORD PTR [rsp+0x20],r10
   14000d459:	test   r14,r14
   14000d45c:	jle    0x14000d488
   14000d45e:	mov    r8,r10
   14000d461:	mov    rcx,r9
   14000d464:	sub    r8,r9
   14000d467:	mov    rdx,r14
   14000d46a:	nop    WORD PTR [rax+rax*1+0x0]
   14000d470:	mov    rax,QWORD PTR [rcx]
   14000d473:	mov    QWORD PTR [r8+rcx*1],rax
   14000d477:	mov    QWORD PTR [rcx],0x0
   14000d47e:	lea    rcx,[rcx+0x8]
   14000d482:	sub    rdx,0x1
   14000d486:	jne    0x14000d470
   14000d488:	mov    rbp,rdi
   14000d48b:	test   edi,edi
   14000d48d:	jle    0x14000d4fa
   14000d48f:	mov    r12,r13
   14000d492:	lea    rdi,[r9+r14*8]
   14000d496:	and    r12,0xfffffffffffffc00
   14000d49d:	nop    DWORD PTR [rax]
   14000d4a0:	test   BYTE PTR [r13+0x0],0x1
   14000d4a5:	mov    ecx,0x0
   14000d4aa:	mov    rbx,QWORD PTR [rdi]
   14000d4ad:	cmove  rcx,r12
   14000d4b1:	test   rcx,rcx
   14000d4b4:	je     0x14000d4b9
   14000d4b6:	mov    rcx,QWORD PTR [rcx]
   14000d4b9:	test   rcx,rcx
   14000d4bc:	je     0x14000d4c8
   14000d4be:	mov    rdx,rbx
   14000d4c1:	call   0x14000e790
   14000d4c6:	jmp    0x14000d4e2
   14000d4c8:	test   rbx,rbx
   14000d4cb:	je     0x14000d4e2
   14000d4cd:	mov    rcx,rbx
   14000d4d0:	call   0x14000f9e0
   14000d4d5:	mov    edx,0x10
   14000d4da:	mov    rcx,rbx
   14000d4dd:	call   0x14002639c
   14000d4e2:	add    rdi,0x8
   14000d4e6:	sub    rbp,0x1
   14000d4ea:	jne    0x14000d4a0
   14000d4ec:	mov    r12d,DWORD PTR [rsp+0x78]
   14000d4f1:	lea    r9,[rsi+0x8]
   14000d4f5:	mov    r10,QWORD PTR [rsp+0x20]
   14000d4fa:	mov    rbp,QWORD PTR [rsp+0x68]
   14000d4ff:	sub    r15d,r12d
   14000d502:	mov    rbx,QWORD PTR [rsp+0x60]
   14000d507:	mov    eax,0x0
   14000d50c:	cmovns eax,r15d
   14000d510:	movsxd rdx,eax
   14000d513:	test   eax,eax
   14000d515:	jle    0x14000d548
   14000d517:	movsxd rax,r12d
   14000d51a:	sub    r14,rax
   14000d51d:	shl    r14,0x3
   14000d521:	sub    r14,r9
   14000d524:	lea    rcx,[r9+rax*8]
   14000d528:	lea    r8,[r14+r10*1]
   14000d52c:	nop    DWORD PTR [rax+0x0]
   14000d530:	mov    rax,QWORD PTR [rcx]
   14000d533:	mov    QWORD PTR [r8+rcx*1],rax
   14000d537:	mov    QWORD PTR [rcx],0x0
   14000d53e:	lea    rcx,[rcx+0x8]
   14000d542:	sub    rdx,0x1
   14000d546:	jne    0x14000d530
   14000d548:	mov    rax,QWORD PTR [rip+0x24e41]        # 0x140032390
   14000d54f:	mov    rdx,rsi
   14000d552:	mov    rcx,QWORD PTR [rax]
   14000d555:	mov    rax,QWORD PTR [rcx]
   14000d558:	call   QWORD PTR [rax+0x28]
   14000d55b:	mov    rax,QWORD PTR [rsp+0x28]
   14000d560:	mov    r12,QWORD PTR [rsp+0x70]
   14000d565:	mov    r15,QWORD PTR [rsp+0x30]
   14000d56a:	add    rsp,0x38
   14000d56e:	pop    r14
   14000d570:	pop    r13
   14000d572:	pop    rdi
   14000d573:	pop    rsi
   14000d574:	ret    
   14000d575:	int3   
   14000d576:	int3   
   14000d577:	int3   
   14000d578:	int3   
   14000d579:	int3   
   14000d57a:	int3   
   14000d57b:	int3   
   14000d57c:	int3   
   14000d57d:	int3   
   14000d57e:	int3   
   14000d57f:	int3   
   14000d580:	rex push rbx
   14000d582:	sub    rsp,0x20
   14000d586:	mov    r9d,r8d
   14000d589:	mov    rbx,rcx
   14000d58c:	mov    r8d,edx
   14000d58f:	mov    rdx,QWORD PTR [rcx+0x8]
   14000d593:	call   0x14000d3b0
   14000d598:	mov    QWORD PTR [rbx+0x8],rax
   14000d59c:	add    rsp,0x20
   14000d5a0:	pop    rbx
   14000d5a1:	ret    
   14000d5a2:	int3   
   14000d5a3:	int3   
   14000d5a4:	int3   
   14000d5a5:	int3   
   14000d5a6:	int3   
   14000d5a7:	int3   
   14000d5a8:	int3   
   14000d5a9:	int3   
   14000d5aa:	int3   
   14000d5ab:	int3   
   14000d5ac:	int3   
   14000d5ad:	int3   
   14000d5ae:	int3   
   14000d5af:	int3   
   14000d5b0:	mov    QWORD PTR [rsp+0x18],rbx
   14000d5b5:	mov    QWORD PTR [rsp+0x20],rbp
   14000d5ba:	push   rsi
   14000d5bb:	push   r12
   14000d5bd:	push   r15
   14000d5bf:	sub    rsp,0x20
   14000d5c3:	movsxd rbp,DWORD PTR [rcx]
   14000d5c6:	xor    r12d,r12d
   14000d5c9:	mov    r15,rdx
   14000d5cc:	mov    rsi,rcx
   14000d5cf:	mov    ebx,r12d
   14000d5d2:	test   rbp,rbp
   14000d5d5:	jle    0x14000d64e
   14000d5d7:	mov    QWORD PTR [rsp+0x40],rdi
   14000d5dc:	mov    QWORD PTR [rsp+0x48],r14
   14000d5e1:	mov    r14,rdx
   14000d5e4:	and    r14,0xfffffffffffffc00
   14000d5eb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000d5f0:	test   BYTE PTR [r15],0x1
   14000d5f4:	mov    rcx,r12
   14000d5f7:	mov    rax,QWORD PTR [rsi+0x98]
   14000d5fe:	cmove  rcx,r14
   14000d602:	mov    rdi,QWORD PTR [rax+rbx*8]
   14000d606:	test   rcx,rcx
   14000d609:	je     0x14000d610
   14000d60b:	mov    rcx,QWORD PTR [rcx]
   14000d60e:	jmp    0x14000d613
   14000d610:	mov    rcx,r12
   14000d613:	test   rcx,rcx
   14000d616:	je     0x14000d622
   14000d618:	mov    rdx,rdi
   14000d61b:	call   0x14000e790
   14000d620:	jmp    0x14000d63c
   14000d622:	test   rdi,rdi
   14000d625:	je     0x14000d63c
   14000d627:	mov    rcx,rdi
   14000d62a:	call   0x14000f9e0
   14000d62f:	mov    edx,0x10
   14000d634:	mov    rcx,rdi
   14000d637:	call   0x14002639c
   14000d63c:	inc    rbx
   14000d63f:	cmp    rbx,rbp
   14000d642:	jl     0x14000d5f0
   14000d644:	mov    r14,QWORD PTR [rsp+0x48]
   14000d649:	mov    rdi,QWORD PTR [rsp+0x40]
   14000d64e:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d653:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d658:	mov    DWORD PTR [rsi],r12d
   14000d65b:	mov    DWORD PTR [rsi+0x90],r12d
   14000d662:	mov    DWORD PTR [rsi+0x38],r12d
   14000d666:	mov    DWORD PTR [rsi+0xe8],r12d
   14000d66d:	add    rsp,0x20
   14000d671:	pop    r15
   14000d673:	pop    r12
   14000d675:	pop    rsi
   14000d676:	ret    
   14000d677:	int3   
   14000d678:	int3   
   14000d679:	int3   
   14000d67a:	int3   
   14000d67b:	int3   
   14000d67c:	int3   
   14000d67d:	int3   
   14000d67e:	int3   
   14000d67f:	int3   
   14000d680:	mov    QWORD PTR [rsp+0x10],rbx
   14000d685:	mov    QWORD PTR [rsp+0x18],rbp
   14000d68a:	push   rsi
   14000d68b:	push   rdi
   14000d68c:	push   r13
   14000d68e:	push   r14
   14000d690:	push   r15
   14000d692:	sub    rsp,0x20
   14000d696:	mov    r14,r8
   14000d699:	mov    r15,rdx
   14000d69c:	mov    rdi,rcx
   14000d69f:	call   0x14000d5b0
   14000d6a4:	movsxd rbx,DWORD PTR [r14]
   14000d6a7:	mov    ecx,DWORD PTR [rdi]
   14000d6a9:	mov    eax,ebx
   14000d6ab:	sub    eax,ecx
   14000d6ad:	test   eax,eax
   14000d6af:	jle    0x14000d6c0
   14000d6b1:	mov    edx,ecx
   14000d6b3:	mov    r8d,eax
   14000d6b6:	mov    rcx,rdi
   14000d6b9:	call   0x14000f450
   14000d6be:	jmp    0x14000d6c8
   14000d6c0:	jns    0x14000d6c8
   14000d6c2:	neg    eax
   14000d6c4:	sub    ecx,eax
   14000d6c6:	mov    DWORD PTR [rdi],ecx
   14000d6c8:	lea    rcx,[rdi+0x90]
   14000d6cf:	mov    eax,ebx
   14000d6d1:	mov    edx,DWORD PTR [rcx]
   14000d6d3:	sub    eax,edx
   14000d6d5:	test   eax,eax
   14000d6d7:	jle    0x14000d6e3
   14000d6d9:	mov    r8d,eax
   14000d6dc:	call   0x14000f3c0
   14000d6e1:	jmp    0x14000d6eb
   14000d6e3:	jns    0x14000d6eb
   14000d6e5:	neg    eax
   14000d6e7:	sub    edx,eax
   14000d6e9:	mov    DWORD PTR [rcx],edx
   14000d6eb:	mov    edx,DWORD PTR [rdi+0x38]
   14000d6ee:	lea    rcx,[rdi+0x38]
   14000d6f2:	mov    eax,ebx
   14000d6f4:	sub    eax,edx
   14000d6f6:	test   eax,eax
   14000d6f8:	jle    0x14000d704
   14000d6fa:	mov    r8d,eax
   14000d6fd:	call   0x14000f3c0
   14000d702:	jmp    0x14000d70c
   14000d704:	jns    0x14000d70c
   14000d706:	neg    eax
   14000d708:	sub    edx,eax
   14000d70a:	mov    DWORD PTR [rcx],edx
   14000d70c:	lea    rcx,[rdi+0xe8]
   14000d713:	mov    eax,ebx
   14000d715:	mov    edx,DWORD PTR [rcx]
   14000d717:	sub    eax,edx
   14000d719:	test   eax,eax
   14000d71b:	jle    0x14000d727
   14000d71d:	mov    r8d,eax
   14000d720:	call   0x14000f340
   14000d725:	jmp    0x14000d72f
   14000d727:	jns    0x14000d72f
   14000d729:	neg    eax
   14000d72b:	sub    edx,eax
   14000d72d:	mov    DWORD PTR [rcx],edx
   14000d72f:	xor    r13d,r13d
   14000d732:	mov    rbp,rbx
   14000d735:	mov    esi,r13d
   14000d738:	test   ebx,ebx
   14000d73a:	jle    0x14000d80a
   14000d740:	mov    QWORD PTR [rsp+0x50],r12
   14000d745:	mov    r12,r15
   14000d748:	and    r12,0xfffffffffffffc00
   14000d74f:	nop
   14000d750:	mov    rax,QWORD PTR [r14+0x40]
   14000d754:	mov    rcx,r15
   14000d757:	mov    rdx,QWORD PTR [rax+rsi*8]
   14000d75b:	mov    rax,QWORD PTR [r14+0x8]
   14000d75f:	mov    r8d,DWORD PTR [rax+rsi*4]
   14000d763:	mov    rax,QWORD PTR [rdi+0x8]
   14000d767:	mov    DWORD PTR [rax+rsi*4],r8d
   14000d76b:	mov    rax,QWORD PTR [rdi+0xf0]
   14000d772:	mov    BYTE PTR [rsi+rax*1],r13b
   14000d776:	mov    rax,QWORD PTR [rdi+0x40]
   14000d77a:	lea    rbx,[rax+rsi*8]
   14000d77e:	call   0x14000cfc0
   14000d783:	mov    QWORD PTR [rbx],rax
   14000d786:	mov    rcx,r13
   14000d789:	test   BYTE PTR [r15],0x1
   14000d78d:	cmove  rcx,r12
   14000d791:	test   rcx,rcx
   14000d794:	je     0x14000d79b
   14000d796:	mov    rcx,QWORD PTR [rcx]
   14000d799:	jmp    0x14000d79e
   14000d79b:	mov    rcx,r13
   14000d79e:	test   rcx,rcx
   14000d7a1:	je     0x14000d7aa
   14000d7a3:	call   0x14000cec0
   14000d7a8:	jmp    0x14000d7d3
   14000d7aa:	mov    ecx,0x10
   14000d7af:	call   0x140007bf0
   14000d7b4:	test   rax,rax
   14000d7b7:	je     0x14000d7d0
   14000d7b9:	mov    rcx,QWORD PTR [rax]
   14000d7bc:	and    rcx,0xffffffffffe00003
   14000d7c3:	mov    QWORD PTR [rax+0x8],r13
   14000d7c7:	or     rcx,0x3
   14000d7cb:	mov    QWORD PTR [rax],rcx
   14000d7ce:	jmp    0x14000d7d3
   14000d7d0:	mov    rax,r13
   14000d7d3:	mov    rdx,QWORD PTR [rdi+0x98]
   14000d7da:	mov    QWORD PTR [rdx+rsi*8],rax
   14000d7de:	mov    rdx,QWORD PTR [r14+0x98]
   14000d7e5:	mov    rcx,QWORD PTR [rdi+0x98]
   14000d7ec:	mov    rdx,QWORD PTR [rdx+rsi*8]
   14000d7f0:	mov    rcx,QWORD PTR [rcx+rsi*8]
   14000d7f4:	call   0x14000d830
   14000d7f9:	inc    rsi
   14000d7fc:	cmp    rsi,rbp
   14000d7ff:	jl     0x14000d750
   14000d805:	mov    r12,QWORD PTR [rsp+0x50]
   14000d80a:	mov    rbx,QWORD PTR [rsp+0x58]
   14000d80f:	mov    rbp,QWORD PTR [rsp+0x60]
   14000d814:	add    rsp,0x20
   14000d818:	pop    r15
   14000d81a:	pop    r14
   14000d81c:	pop    r13
   14000d81e:	pop    rdi
   14000d81f:	pop    rsi
   14000d820:	ret    
   14000d821:	int3   
   14000d822:	int3   
   14000d823:	int3   
   14000d824:	int3   
   14000d825:	int3   
   14000d826:	int3   
   14000d827:	int3   
   14000d828:	int3   
   14000d829:	int3   
   14000d82a:	int3   
   14000d82b:	int3   
   14000d82c:	int3   
   14000d82d:	int3   
   14000d82e:	int3   
   14000d82f:	int3   
   14000d830:	mov    QWORD PTR [rsp+0x10],rbx
   14000d835:	mov    QWORD PTR [rsp+0x18],rsi
   14000d83a:	push   rdi
   14000d83b:	sub    rsp,0x20
   14000d83f:	mov    rbx,QWORD PTR [rdx]
   14000d842:	mov    rdi,rdx
   14000d845:	mov    rax,rbx
   14000d848:	mov    rsi,rcx
   14000d84b:	and    eax,0x1e
   14000d84e:	cmp    rax,0x14
   14000d852:	jne    0x14000d858
   14000d854:	mov    bl,0x6
   14000d856:	jmp    0x14000d871
   14000d858:	cmp    rax,0x16
   14000d85c:	jne    0x14000d862
   14000d85e:	mov    bl,0x6
   14000d860:	jmp    0x14000d871
   14000d862:	cmp    rax,0x18
   14000d866:	jne    0x14000d86c
   14000d868:	mov    bl,0x7
   14000d86a:	jmp    0x14000d871
   14000d86c:	shr    bl,1
   14000d86e:	and    bl,0xf
   14000d871:	movzx  edx,bl
   14000d874:	call   0x14000faa0
   14000d879:	mov    eax,DWORD PTR [rdi]
   14000d87b:	xor    eax,DWORD PTR [rsi]
   14000d87d:	and    eax,0x1fffe0
   14000d882:	xor    QWORD PTR [rsi],rax
   14000d885:	movzx  eax,bl
   14000d888:	add    eax,0xfffffffe
   14000d88b:	cmp    eax,0x7
   14000d88e:	ja     0x14000da14
   14000d894:	lea    rdx,[rip+0xffffffffffff2765]        # 0x140000000
   14000d89b:	cdqe   
   14000d89d:	mov    ecx,DWORD PTR [rdx+rax*4+0xda60]
   14000d8a4:	add    rcx,rdx
   14000d8a7:	jmp    rcx
   14000d8a9:	movzx  eax,BYTE PTR [rdi+0x8]
   14000d8ad:	mov    BYTE PTR [rsi+0x8],al
   14000d8b0:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d8b5:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d8ba:	add    rsp,0x20
   14000d8be:	pop    rdi
   14000d8bf:	ret    
   14000d8c0:	mov    rax,QWORD PTR [rdi+0x8]
   14000d8c4:	mov    QWORD PTR [rsi+0x8],rax
   14000d8c8:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d8cd:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d8d2:	add    rsp,0x20
   14000d8d6:	pop    rdi
   14000d8d7:	ret    
   14000d8d8:	mov    rax,QWORD PTR [rdi]
   14000d8db:	and    eax,0x1e
   14000d8de:	cmp    rax,0xc
   14000d8e2:	je     0x14000d929
   14000d8e4:	cmp    rax,0x16
   14000d8e8:	je     0x14000d929
   14000d8ea:	cmp    rax,0x14
   14000d8ee:	jne    0x14000d90e
   14000d8f0:	lea    rbx,[rdi+0x8]
   14000d8f4:	mov    rcx,rsi
   14000d8f7:	mov    rdx,rbx
   14000d8fa:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d8ff:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d904:	add    rsp,0x20
   14000d908:	pop    rdi
   14000d909:	jmp    0x1400116c0
   14000d90e:	xor    ebx,ebx
   14000d910:	mov    rcx,rsi
   14000d913:	mov    edx,ebx
   14000d915:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d91a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d91f:	add    rsp,0x20
   14000d923:	pop    rdi
   14000d924:	jmp    0x1400116c0
   14000d929:	mov    rbx,QWORD PTR [rdi+0x8]
   14000d92d:	mov    rcx,rsi
   14000d930:	mov    rdx,rbx
   14000d933:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d938:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d93d:	add    rsp,0x20
   14000d941:	pop    rdi
   14000d942:	jmp    0x1400116c0
   14000d947:	mov    rcx,QWORD PTR [rdi]
   14000d94a:	xor    ebx,ebx
   14000d94c:	mov    rax,QWORD PTR [rdi+0x8]
   14000d950:	and    ecx,0x1e
   14000d953:	cmp    rcx,0x18
   14000d957:	jne    0x14000d964
   14000d959:	test   rax,rax
   14000d95c:	je     0x14000d96d
   14000d95e:	mov    rdx,QWORD PTR [rax+0x8]
   14000d962:	jmp    0x14000d970
   14000d964:	lea    rdx,[rax+0x8]
   14000d968:	test   rax,rax
   14000d96b:	jne    0x14000d975
   14000d96d:	mov    rdx,rbx
   14000d970:	test   rax,rax
   14000d973:	je     0x14000d994
   14000d975:	mov    r8d,DWORD PTR [rax]
   14000d978:	test   r8d,r8d
   14000d97b:	je     0x14000d994
   14000d97d:	mov    rcx,rsi
   14000d980:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d985:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d98a:	add    rsp,0x20
   14000d98e:	pop    rdi
   14000d98f:	jmp    0x140011790
   14000d994:	mov    dl,0x7
   14000d996:	mov    rcx,rsi
   14000d999:	call   0x14000faa0
   14000d99e:	mov    QWORD PTR [rsi+0x8],rbx
   14000d9a2:	mov    rbx,QWORD PTR [rsp+0x38]
   14000d9a7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000d9ac:	add    rsp,0x20
   14000d9b0:	pop    rdi
   14000d9b1:	ret    
   14000d9b2:	mov    rax,QWORD PTR [rdi+0x8]
   14000d9b6:	xor    ebx,ebx
   14000d9b8:	mov    QWORD PTR [rsp+0x30],rbp
   14000d9bd:	test   rax,rax
   14000d9c0:	je     0x14000d9c6
   14000d9c2:	mov    ebp,DWORD PTR [rax]
   14000d9c4:	jmp    0x14000d9c8
   14000d9c6:	mov    ebp,ebx
   14000d9c8:	mov    rdx,QWORD PTR [rsi+0x8]
   14000d9cc:	test   rdx,rdx
   14000d9cf:	je     0x14000d9d9
   14000d9d1:	movsxd rax,ebp
   14000d9d4:	cmp    QWORD PTR [rdx],rax
   14000d9d7:	je     0x14000d9e8
   14000d9d9:	mov    r8d,ebp
   14000d9dc:	mov    rcx,rsi
   14000d9df:	call   0x140010960
   14000d9e4:	mov    QWORD PTR [rsi+0x8],rax
   14000d9e8:	movsxd rbp,ebp
   14000d9eb:	test   rbp,rbp
   14000d9ee:	jle    0x14000da0f
   14000d9f0:	mov    rdx,QWORD PTR [rdi+0x8]
   14000d9f4:	mov    rcx,QWORD PTR [rsi+0x8]
   14000d9f8:	mov    rdx,QWORD PTR [rdx+rbx*8+0x8]
   14000d9fd:	mov    rcx,QWORD PTR [rcx+rbx*8+0x8]
   14000da02:	call   0x14000d830
   14000da07:	inc    rbx
   14000da0a:	cmp    rbx,rbp
   14000da0d:	jl     0x14000d9f0
   14000da0f:	mov    rbp,QWORD PTR [rsp+0x30]
   14000da14:	mov    rbx,QWORD PTR [rsp+0x38]
   14000da19:	mov    rsi,QWORD PTR [rsp+0x40]
   14000da1e:	add    rsp,0x20
   14000da22:	pop    rdi
   14000da23:	ret    
   14000da24:	mov    dl,0x9
   14000da26:	mov    rcx,rsi
   14000da29:	call   0x14000faa0
   14000da2e:	mov    rcx,rdi
   14000da31:	call   0x14000f060
   14000da36:	mov    rcx,rsi
   14000da39:	mov    rbx,rax
   14000da3c:	call   0x14000f060
   14000da41:	mov    rcx,rax
   14000da44:	mov    r8,rbx
   14000da47:	mov    rdx,rsi
   14000da4a:	mov    rbx,QWORD PTR [rsp+0x38]
   14000da4f:	mov    rsi,QWORD PTR [rsp+0x40]
   14000da54:	add    rsp,0x20
   14000da58:	pop    rdi
   14000da59:	jmp    0x14000d680
   14000da5e:	xchg   ax,ax
   14000da60:	test   eax,0xc00000d8
   14000da65:	fadd   DWORD PTR [rax]
   14000da67:	add    al,al
   14000da69:	fadd   DWORD PTR [rax]
   14000da6b:	add    al,al
   14000da6d:	fadd   DWORD PTR [rax]
   14000da6f:	add    al,bl
   14000da71:	fadd   DWORD PTR [rax]
   14000da73:	add    BYTE PTR [rdi-0x27],al
   14000da76:	add    BYTE PTR [rax],al
   14000da78:	mov    dl,0xd9
   14000da7a:	add    BYTE PTR [rax],al
   14000da7c:	and    al,0xda
   14000da7e:	add    BYTE PTR [rax],al
   14000da80:	mov    QWORD PTR [rsp+0x10],rbx
   14000da85:	push   rdi
   14000da86:	sub    rsp,0x20
   14000da8a:	movsxd rdi,edx
   14000da8d:	mov    rbx,rcx
   14000da90:	cmp    DWORD PTR [rcx+0x8],edi
   14000da93:	jge    0x14000db2d
   14000da99:	mov    eax,DWORD PTR [rcx+0xc]
   14000da9c:	and    eax,0xc0000000
   14000daa1:	test   eax,0x7fffffff
   14000daa6:	jne    0x14000db2d
   14000daac:	test   eax,eax
   14000daae:	mov    rax,QWORD PTR [rip+0x248db]        # 0x140032390
   14000dab5:	jne    0x14000daf3
   14000dab7:	mov    rdx,QWORD PTR [rcx]
   14000daba:	mov    rcx,QWORD PTR [rax]
   14000dabd:	mov    rax,QWORD PTR [rcx]
   14000dac0:	test   rdx,rdx
   14000dac3:	je     0x14000dadc
   14000dac5:	mov    r8,rdi
   14000dac8:	call   QWORD PTR [rax+0x18]
   14000dacb:	mov    QWORD PTR [rbx],rax
   14000dace:	mov    DWORD PTR [rbx+0x8],edi
   14000dad1:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dad6:	add    rsp,0x20
   14000dada:	pop    rdi
   14000dadb:	ret    
   14000dadc:	mov    rdx,rdi
   14000dadf:	call   QWORD PTR [rax+0x8]
   14000dae2:	mov    QWORD PTR [rbx],rax
   14000dae5:	mov    DWORD PTR [rbx+0x8],edi
   14000dae8:	mov    rbx,QWORD PTR [rsp+0x38]
   14000daed:	add    rsp,0x20
   14000daf1:	pop    rdi
   14000daf2:	ret    
   14000daf3:	mov    QWORD PTR [rsp+0x30],rsi
   14000daf8:	mov    rdx,rdi
   14000dafb:	mov    rsi,QWORD PTR [rcx]
   14000dafe:	mov    rcx,QWORD PTR [rax]
   14000db01:	mov    rax,QWORD PTR [rcx]
   14000db04:	call   QWORD PTR [rax+0x8]
   14000db07:	mov    QWORD PTR [rbx],rax
   14000db0a:	test   rsi,rsi
   14000db0d:	je     0x14000db1e
   14000db0f:	movsxd r8,DWORD PTR [rbx+0x8]
   14000db13:	mov    rdx,rsi
   14000db16:	mov    rcx,rax
   14000db19:	call   0x140026f70
   14000db1e:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14000db25:	mov    rsi,QWORD PTR [rsp+0x30]
   14000db2a:	mov    DWORD PTR [rbx+0x8],edi
   14000db2d:	mov    rbx,QWORD PTR [rsp+0x38]
   14000db32:	add    rsp,0x20
   14000db36:	pop    rdi
   14000db37:	ret    
   14000db38:	int3   
   14000db39:	int3   
   14000db3a:	int3   
   14000db3b:	int3   
   14000db3c:	int3   
   14000db3d:	int3   
   14000db3e:	int3   
   14000db3f:	int3   
   14000db40:	mov    QWORD PTR [rsp+0x10],rbx
   14000db45:	push   rdi
   14000db46:	sub    rsp,0x20
   14000db4a:	movsxd rdi,edx
   14000db4d:	mov    rbx,rcx
   14000db50:	cmp    DWORD PTR [rcx+0x8],edi
   14000db53:	jge    0x14000dbfd
   14000db59:	mov    eax,DWORD PTR [rcx+0xc]
   14000db5c:	and    eax,0xc0000000
   14000db61:	test   eax,0x7fffffff
   14000db66:	jne    0x14000dbfd
   14000db6c:	test   eax,eax
   14000db6e:	mov    rax,QWORD PTR [rip+0x2481b]        # 0x140032390
   14000db75:	jne    0x14000dbbb
   14000db77:	mov    rdx,QWORD PTR [rcx]
   14000db7a:	mov    rcx,QWORD PTR [rax]
   14000db7d:	mov    rax,QWORD PTR [rcx]
   14000db80:	test   rdx,rdx
   14000db83:	je     0x14000dba0
   14000db85:	mov    r8,rdi
   14000db88:	shl    r8,0x3
   14000db8c:	call   QWORD PTR [rax+0x18]
   14000db8f:	mov    QWORD PTR [rbx],rax
   14000db92:	mov    DWORD PTR [rbx+0x8],edi
   14000db95:	mov    rbx,QWORD PTR [rsp+0x38]
   14000db9a:	add    rsp,0x20
   14000db9e:	pop    rdi
   14000db9f:	ret    
   14000dba0:	mov    rdx,rdi
   14000dba3:	shl    rdx,0x3
   14000dba7:	call   QWORD PTR [rax+0x8]
   14000dbaa:	mov    QWORD PTR [rbx],rax
   14000dbad:	mov    DWORD PTR [rbx+0x8],edi
   14000dbb0:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dbb5:	add    rsp,0x20
   14000dbb9:	pop    rdi
   14000dbba:	ret    
   14000dbbb:	mov    QWORD PTR [rsp+0x30],rsi
   14000dbc0:	mov    rdx,rdi
   14000dbc3:	mov    rsi,QWORD PTR [rcx]
   14000dbc6:	mov    rcx,QWORD PTR [rax]
   14000dbc9:	shl    rdx,0x3
   14000dbcd:	mov    rax,QWORD PTR [rcx]
   14000dbd0:	call   QWORD PTR [rax+0x8]
   14000dbd3:	mov    QWORD PTR [rbx],rax
   14000dbd6:	test   rsi,rsi
   14000dbd9:	je     0x14000dbee
   14000dbdb:	movsxd r8,DWORD PTR [rbx+0x8]
   14000dbdf:	mov    rdx,rsi
   14000dbe2:	shl    r8,0x3
   14000dbe6:	mov    rcx,rax
   14000dbe9:	call   0x140026f70
   14000dbee:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14000dbf5:	mov    rsi,QWORD PTR [rsp+0x30]
   14000dbfa:	mov    DWORD PTR [rbx+0x8],edi
   14000dbfd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dc02:	add    rsp,0x20
   14000dc06:	pop    rdi
   14000dc07:	ret    
   14000dc08:	int3   
   14000dc09:	int3   
   14000dc0a:	int3   
   14000dc0b:	int3   
   14000dc0c:	int3   
   14000dc0d:	int3   
   14000dc0e:	int3   
   14000dc0f:	int3   
   14000dc10:	mov    QWORD PTR [rsp+0x10],rbx
   14000dc15:	push   rdi
   14000dc16:	sub    rsp,0x20
   14000dc1a:	movsxd rdi,edx
   14000dc1d:	mov    rbx,rcx
   14000dc20:	cmp    DWORD PTR [rcx+0x8],edi
   14000dc23:	jge    0x14000dccd
   14000dc29:	mov    eax,DWORD PTR [rcx+0xc]
   14000dc2c:	and    eax,0xc0000000
   14000dc31:	test   eax,0x7fffffff
   14000dc36:	jne    0x14000dccd
   14000dc3c:	test   eax,eax
   14000dc3e:	mov    rax,QWORD PTR [rip+0x2474b]        # 0x140032390
   14000dc45:	jne    0x14000dc8b
   14000dc47:	mov    rdx,QWORD PTR [rcx]
   14000dc4a:	mov    rcx,QWORD PTR [rax]
   14000dc4d:	mov    rax,QWORD PTR [rcx]
   14000dc50:	test   rdx,rdx
   14000dc53:	je     0x14000dc70
   14000dc55:	mov    r8,rdi
   14000dc58:	shl    r8,0x2
   14000dc5c:	call   QWORD PTR [rax+0x18]
   14000dc5f:	mov    QWORD PTR [rbx],rax
   14000dc62:	mov    DWORD PTR [rbx+0x8],edi
   14000dc65:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dc6a:	add    rsp,0x20
   14000dc6e:	pop    rdi
   14000dc6f:	ret    
   14000dc70:	mov    rdx,rdi
   14000dc73:	shl    rdx,0x2
   14000dc77:	call   QWORD PTR [rax+0x8]
   14000dc7a:	mov    QWORD PTR [rbx],rax
   14000dc7d:	mov    DWORD PTR [rbx+0x8],edi
   14000dc80:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dc85:	add    rsp,0x20
   14000dc89:	pop    rdi
   14000dc8a:	ret    
   14000dc8b:	mov    QWORD PTR [rsp+0x30],rsi
   14000dc90:	mov    rdx,rdi
   14000dc93:	mov    rsi,QWORD PTR [rcx]
   14000dc96:	mov    rcx,QWORD PTR [rax]
   14000dc99:	shl    rdx,0x2
   14000dc9d:	mov    rax,QWORD PTR [rcx]
   14000dca0:	call   QWORD PTR [rax+0x8]
   14000dca3:	mov    QWORD PTR [rbx],rax
   14000dca6:	test   rsi,rsi
   14000dca9:	je     0x14000dcbe
   14000dcab:	movsxd r8,DWORD PTR [rbx+0x8]
   14000dcaf:	mov    rdx,rsi
   14000dcb2:	shl    r8,0x2
   14000dcb6:	mov    rcx,rax
   14000dcb9:	call   0x140026f70
   14000dcbe:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14000dcc5:	mov    rsi,QWORD PTR [rsp+0x30]
   14000dcca:	mov    DWORD PTR [rbx+0x8],edi
   14000dccd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000dcd2:	add    rsp,0x20
   14000dcd6:	pop    rdi
   14000dcd7:	ret    
   14000dcd8:	int3   
   14000dcd9:	int3   
   14000dcda:	int3   
   14000dcdb:	int3   
   14000dcdc:	int3   
   14000dcdd:	int3   
   14000dcde:	int3   
   14000dcdf:	int3   
   14000dce0:	mov    QWORD PTR [rsp+0x8],rbx
   14000dce5:	push   rdi
   14000dce6:	sub    rsp,0x20
   14000dcea:	mov    rbx,rcx
   14000dced:	movsxd rdi,edx
   14000dcf0:	mov    rcx,QWORD PTR [rcx]
   14000dcf3:	mov    r8,rcx
   14000dcf6:	and    r8d,0x1e
   14000dcfa:	lea    rax,[r8-0x14]
   14000dcfe:	test   rax,0xfffffffffffffff9
   14000dd04:	jne    0x14000dd0c
   14000dd06:	cmp    r8,0x1a
   14000dd0a:	jne    0x14000dd16
   14000dd0c:	shr    cl,1
   14000dd0e:	and    cl,0xf
   14000dd11:	cmp    cl,0x8
   14000dd14:	je     0x14000dd20
   14000dd16:	mov    dl,0x8
   14000dd18:	mov    rcx,rbx
   14000dd1b:	call   0x14000faa0
   14000dd20:	mov    rcx,QWORD PTR [rbx]
   14000dd23:	mov    rdx,rcx
   14000dd26:	and    edx,0x1e
   14000dd29:	lea    rax,[rdx-0x14]
   14000dd2d:	test   rax,0xfffffffffffffff9
   14000dd33:	jne    0x14000dd3b
   14000dd35:	cmp    rdx,0x1a
   14000dd39:	jne    0x14000dd53
   14000dd3b:	movzx  eax,cl
   14000dd3e:	shr    al,1
   14000dd40:	and    al,0xf
   14000dd42:	cmp    al,0x8
   14000dd44:	jne    0x14000dd53
   14000dd46:	mov    rax,QWORD PTR [rbx+0x8]
   14000dd4a:	test   rax,rax
   14000dd4d:	je     0x14000dd53
   14000dd4f:	mov    eax,DWORD PTR [rax]
   14000dd51:	jmp    0x14000dd55
   14000dd53:	xor    eax,eax
   14000dd55:	cmp    eax,edi
   14000dd57:	je     0x14000dd9c
   14000dd59:	lea    rax,[rdx-0x14]
   14000dd5d:	test   rax,0xfffffffffffffff9
   14000dd63:	jne    0x14000dd6b
   14000dd65:	cmp    rdx,0x1a
   14000dd69:	jne    0x14000dd75
   14000dd6b:	shr    cl,1
   14000dd6d:	and    cl,0xf
   14000dd70:	cmp    cl,0x8
   14000dd73:	je     0x14000dd7f
   14000dd75:	mov    dl,0x8
   14000dd77:	mov    rcx,rbx
   14000dd7a:	call   0x14000faa0
   14000dd7f:	mov    rdx,QWORD PTR [rbx+0x8]
   14000dd83:	test   rdx,rdx
   14000dd86:	je     0x14000dd8d
   14000dd88:	cmp    QWORD PTR [rdx],rdi
   14000dd8b:	je     0x14000dd9c
   14000dd8d:	mov    r8d,edi
   14000dd90:	mov    rcx,rbx
   14000dd93:	call   0x140010960
   14000dd98:	mov    QWORD PTR [rbx+0x8],rax
   14000dd9c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dda1:	add    rsp,0x20
   14000dda5:	pop    rdi
   14000dda6:	ret    
   14000dda7:	int3   
   14000dda8:	int3   
   14000dda9:	int3   
   14000ddaa:	int3   
   14000ddab:	int3   
   14000ddac:	int3   
   14000ddad:	int3   
   14000ddae:	int3   
   14000ddaf:	int3   
   14000ddb0:	rex push rdi
   14000ddb2:	sub    rsp,0x30
   14000ddb6:	mov    rax,QWORD PTR [rcx]
   14000ddb9:	mov    rdi,rcx
   14000ddbc:	mov    rcx,rax
   14000ddbf:	and    ecx,0x1e
   14000ddc2:	cmp    rcx,0x14
   14000ddc6:	jne    0x14000ddcc
   14000ddc8:	mov    al,0x6
   14000ddca:	jmp    0x14000dde4
   14000ddcc:	cmp    rcx,0x16
   14000ddd0:	jne    0x14000ddd6
   14000ddd2:	mov    al,0x6
   14000ddd4:	jmp    0x14000dde4
   14000ddd6:	cmp    rcx,0x18
   14000ddda:	jne    0x14000dde0
   14000dddc:	mov    al,0x7
   14000ddde:	jmp    0x14000dde4
   14000dde0:	shr    al,1
   14000dde2:	and    al,0xf
   14000dde4:	cmp    al,dl
   14000dde6:	je     0x14000df4c
   14000ddec:	movzx  eax,dl
   14000ddef:	dec    eax
   14000ddf1:	cmp    eax,0x8
   14000ddf4:	ja     0x14000df4c
   14000ddfa:	lea    rdx,[rip+0xffffffffffff21ff]        # 0x140000000
   14000de01:	cdqe   
   14000de03:	mov    QWORD PTR [rsp+0x48],rbx
   14000de08:	mov    ecx,DWORD PTR [rdx+rax*4+0xdf54]
   14000de0f:	add    rcx,rdx
   14000de12:	jmp    rcx
   14000de14:	mov    dl,0x1
   14000de16:	mov    rcx,rdi
   14000de19:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de1e:	add    rsp,0x30
   14000de22:	pop    rdi
   14000de23:	jmp    0x14000faa0
   14000de28:	mov    rcx,rdi
   14000de2b:	call   0x14000c080
   14000de30:	test   eax,eax
   14000de32:	mov    dl,0x2
   14000de34:	mov    rcx,rdi
   14000de37:	setne  bl
   14000de3a:	call   0x14000faa0
   14000de3f:	mov    BYTE PTR [rdi+0x8],bl
   14000de42:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de47:	add    rsp,0x30
   14000de4b:	pop    rdi
   14000de4c:	ret    
   14000de4d:	mov    rcx,rdi
   14000de50:	call   0x14000c1e0
   14000de55:	mov    dl,0x3
   14000de57:	mov    rcx,rdi
   14000de5a:	mov    rbx,rax
   14000de5d:	call   0x14000faa0
   14000de62:	mov    QWORD PTR [rdi+0x8],rbx
   14000de66:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de6b:	add    rsp,0x30
   14000de6f:	pop    rdi
   14000de70:	ret    
   14000de71:	mov    rcx,rdi
   14000de74:	call   0x14000c290
   14000de79:	mov    dl,0x4
   14000de7b:	mov    rcx,rdi
   14000de7e:	mov    rbx,rax
   14000de81:	call   0x14000faa0
   14000de86:	mov    QWORD PTR [rdi+0x8],rbx
   14000de8a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000de8f:	add    rsp,0x30
   14000de93:	pop    rdi
   14000de94:	ret    
   14000de95:	mov    rcx,rdi
   14000de98:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14000de9d:	call   0x14000c130
   14000dea2:	mov    dl,0x5
   14000dea4:	mov    rcx,rdi
   14000dea7:	movaps xmm6,xmm0
   14000deaa:	call   0x14000faa0
   14000deaf:	mov    rbx,QWORD PTR [rsp+0x48]
   14000deb4:	movsd  QWORD PTR [rdi+0x8],xmm6
   14000deb9:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14000debe:	add    rsp,0x30
   14000dec2:	pop    rdi
   14000dec3:	ret    
   14000dec4:	lea    rdx,[rsp+0x40]
   14000dec9:	mov    QWORD PTR [rsp+0x40],0x0
   14000ded2:	mov    rcx,rdi
   14000ded5:	call   0x14000ef50
   14000deda:	lea    rcx,[rsp+0x40]
   14000dedf:	call   0x14001b050
   14000dee4:	mov    rdx,rax
   14000dee7:	mov    rcx,rdi
   14000deea:	call   0x1400116c0
   14000deef:	cmp    QWORD PTR [rsp+0x40],0x0
   14000def5:	je     0x14000df47
   14000def7:	lea    rcx,[rsp+0x40]
   14000defc:	call   0x14001b030
   14000df01:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df06:	add    rsp,0x30
   14000df0a:	pop    rdi
   14000df0b:	ret    
   14000df0c:	mov    dl,0x7
   14000df0e:	mov    rcx,rdi
   14000df11:	call   0x14000faa0
   14000df16:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df1b:	mov    QWORD PTR [rdi+0x8],0x0
   14000df23:	add    rsp,0x30
   14000df27:	pop    rdi
   14000df28:	ret    
   14000df29:	mov    dl,0x8
   14000df2b:	mov    rcx,rdi
   14000df2e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df33:	add    rsp,0x30
   14000df37:	pop    rdi
   14000df38:	jmp    0x14000faa0
   14000df3d:	mov    dl,0x9
   14000df3f:	mov    rcx,rdi
   14000df42:	call   0x14000faa0
   14000df47:	mov    rbx,QWORD PTR [rsp+0x48]
   14000df4c:	add    rsp,0x30
   14000df50:	pop    rdi
   14000df51:	ret    
   14000df52:	xchg   ax,ax
   14000df54:	adc    al,0xde
   14000df56:	add    BYTE PTR [rax],al
   14000df58:	sub    dh,bl
   14000df5a:	add    BYTE PTR [rax],al
   14000df5c:	rex.WRB fiadd WORD PTR [r8]
   14000df5f:	add    BYTE PTR [rcx-0x22],dh
   14000df62:	add    BYTE PTR [rax],al
   14000df64:	xchg   ebp,eax
   14000df65:	fiadd  WORD PTR [rax]
   14000df67:	add    ah,al
   14000df69:	fiadd  WORD PTR [rax]
   14000df6b:	add    BYTE PTR [rdi+rbx*8],cl
   14000df6e:	add    BYTE PTR [rax],al
   14000df70:	sub    edi,ebx
   14000df72:	add    BYTE PTR [rax],al
   14000df74:	cmp    eax,0xcc0000df
   14000df79:	int3   
   14000df7a:	int3   
   14000df7b:	int3   
   14000df7c:	int3   
   14000df7d:	int3   
   14000df7e:	int3   
   14000df7f:	int3   
   14000df80:	mov    QWORD PTR [rsp+0x8],rbx
   14000df85:	push   rdi
   14000df86:	sub    rsp,0x30
   14000df8a:	mov    rax,QWORD PTR [rsp+0x20]
   14000df8f:	mov    rbx,rdx
   14000df92:	and    rax,0xffffffffffe00003
   14000df98:	mov    QWORD PTR [rsp+0x28],0x0
   14000dfa1:	or     rax,0x3
   14000dfa5:	mov    rdi,rcx
   14000dfa8:	mov    rdx,rcx
   14000dfab:	mov    QWORD PTR [rsp+0x20],rax
   14000dfb0:	lea    rcx,[rsp+0x20]
   14000dfb5:	call   0x14000d830
   14000dfba:	mov    rdx,rbx
   14000dfbd:	lea    rcx,[rsp+0x20]
   14000dfc2:	call   0x140010350
   14000dfc7:	xor    r8d,r8d
   14000dfca:	lea    rdx,[rsp+0x20]
   14000dfcf:	mov    rcx,rdi
   14000dfd2:	call   0x14000fc30
   14000dfd7:	lea    rcx,[rsp+0x20]
   14000dfdc:	movzx  ebx,al
   14000dfdf:	call   0x14000f9e0
   14000dfe4:	movzx  eax,bl
   14000dfe7:	mov    rbx,QWORD PTR [rsp+0x40]
   14000dfec:	add    rsp,0x30
   14000dff0:	pop    rdi
   14000dff1:	ret    
   14000dff2:	int3   
   14000dff3:	int3   
   14000dff4:	int3   
   14000dff5:	int3   
   14000dff6:	int3   
   14000dff7:	int3   
   14000dff8:	int3   
   14000dff9:	int3   
   14000dffa:	int3   
   14000dffb:	int3   
   14000dffc:	int3   
   14000dffd:	int3   
   14000dffe:	int3   
   14000dfff:	int3   
   14000e000:	sub    rsp,0x8
   14000e004:	mov    r9,QWORD PTR [rcx+0x18]
   14000e008:	cmp    r9,0xffffffffffffffff
   14000e00c:	je     0x14000e0da
   14000e012:	mov    QWORD PTR [rsp+0x10],rbx
   14000e017:	mov    QWORD PTR [rsp+0x18],rsi
   14000e01c:	mov    rsi,QWORD PTR [rdx]
   14000e01f:	mov    QWORD PTR [rsp+0x20],rdi
   14000e024:	mov    QWORD PTR [rsp],r14
   14000e028:	mov    r14,QWORD PTR [rcx+0x8]
   14000e02c:	mov    rbx,QWORD PTR [rsi]
   14000e02f:	nop
   14000e030:	lea    rax,[r9+r9*4]
   14000e034:	mov    r11,QWORD PTR [r14+rax*8+0x20]
   14000e039:	lea    rdi,[r14+rax*8]
   14000e03d:	mov    r10,QWORD PTR [r11]
   14000e040:	cmp    rbx,r10
   14000e043:	jne    0x14000e06a
   14000e045:	lea    r8,[r11+0x8]
   14000e049:	lea    rax,[rsi+0x8]
   14000e04d:	sub    r8,rax
   14000e050:	movzx  edx,BYTE PTR [rax]
   14000e053:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000e058:	sub    edx,ecx
   14000e05a:	jne    0x14000e063
   14000e05c:	inc    rax
   14000e05f:	test   ecx,ecx
   14000e061:	jne    0x14000e050
   14000e063:	test   edx,edx
   14000e065:	sets   al
   14000e068:	jmp    0x14000e06d
   14000e06a:	setb   al
   14000e06d:	test   al,al
   14000e06f:	je     0x14000e076
   14000e071:	mov    r9,QWORD PTR [rdi]
   14000e074:	jmp    0x14000e0b5
   14000e076:	cmp    r10,rbx
   14000e079:	jne    0x14000e0aa
   14000e07b:	lea    r8,[rsi+0x8]
   14000e07f:	lea    rax,[r11+0x8]
   14000e083:	sub    r8,rax
   14000e086:	data16 nop WORD PTR [rax+rax*1+0x0]
   14000e090:	movzx  edx,BYTE PTR [rax]
   14000e093:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000e098:	sub    edx,ecx
   14000e09a:	jne    0x14000e0a3
   14000e09c:	inc    rax
   14000e09f:	test   ecx,ecx
   14000e0a1:	jne    0x14000e090
   14000e0a3:	test   edx,edx
   14000e0a5:	sets   al
   14000e0a8:	jmp    0x14000e0ad
   14000e0aa:	setb   al
   14000e0ad:	test   al,al
   14000e0af:	je     0x14000e0bf
   14000e0b1:	mov    r9,QWORD PTR [rdi+0x8]
   14000e0b5:	cmp    r9,0xffffffffffffffff
   14000e0b9:	jne    0x14000e030
   14000e0bf:	mov    rdi,QWORD PTR [rsp+0x20]
   14000e0c4:	mov    rax,r9
   14000e0c7:	mov    rsi,QWORD PTR [rsp+0x18]
   14000e0cc:	mov    rbx,QWORD PTR [rsp+0x10]
   14000e0d1:	mov    r14,QWORD PTR [rsp]
   14000e0d5:	add    rsp,0x8
   14000e0d9:	ret    
   14000e0da:	mov    rax,r9
   14000e0dd:	add    rsp,0x8
   14000e0e1:	ret    
   14000e0e2:	int3   
   14000e0e3:	int3   
   14000e0e4:	int3   
   14000e0e5:	int3   
   14000e0e6:	int3   
   14000e0e7:	int3   
   14000e0e8:	int3   
   14000e0e9:	int3   
   14000e0ea:	int3   
   14000e0eb:	int3   
   14000e0ec:	int3   
   14000e0ed:	int3   
   14000e0ee:	int3   
   14000e0ef:	int3   
   14000e0f0:	rex push rbp
   14000e0f2:	push   r14
   14000e0f4:	push   r15
   14000e0f6:	sub    rsp,0x20
   14000e0fa:	lea    rbp,[rsp+0x20]
   14000e0ff:	mov    QWORD PTR [rbp+0x20],rbx
   14000e103:	mov    r14,r8
   14000e106:	mov    QWORD PTR [rbp+0x28],rsi
   14000e10a:	mov    rsi,rdx
   14000e10d:	mov    QWORD PTR [rbp+0x38],rdi
   14000e111:	mov    r15,rcx
   14000e114:	movsxd rbx,r9d
   14000e117:	test   r8,r8
   14000e11a:	je     0x14000e1c3
   14000e120:	test   r9d,r9d
   14000e123:	jle    0x14000e1c3
   14000e129:	cmp    BYTE PTR [r8],0x0
   14000e12d:	je     0x14000e1c3
   14000e133:	lea    eax,[rbx+0x1]
   14000e136:	movsxd r9,eax
   14000e139:	add    r9,0x27
   14000e13d:	and    r9,0xfffffffffffffff0
   14000e141:	lea    rax,[r9+0xf]
   14000e145:	cmp    rax,r9
   14000e148:	ja     0x14000e154
   14000e14a:	movabs rax,0xffffffffffffff0
   14000e154:	and    rax,0xfffffffffffffff0
   14000e158:	call   0x1400263c0
   14000e15d:	sub    rsp,rax
   14000e160:	mov    rcx,r14
   14000e163:	lea    rdi,[rsp+0x20]
   14000e168:	add    rdi,0x10
   14000e16c:	and    rdi,0xffffffffffffffef
   14000e170:	call   0x1400226d0
   14000e175:	mov    eax,eax
   14000e177:	lea    rcx,[rdi+0x8]
   14000e17b:	mov    r8,rbx
   14000e17e:	mov    QWORD PTR [rdi],rax
   14000e181:	mov    rdx,r14
   14000e184:	call   0x140026f70
   14000e189:	lea    rdx,[rbp+0x30]
   14000e18d:	mov    BYTE PTR [rbx+rdi*1+0x8],0x0
   14000e192:	mov    rcx,r15
   14000e195:	mov    QWORD PTR [rbp+0x30],rdi
   14000e199:	call   0x14000e000
   14000e19e:	cmp    rax,0xffffffffffffffff
   14000e1a2:	jne    0x14000e1ad
   14000e1a4:	mov    QWORD PTR [rsi],0x0
   14000e1ab:	jmp    0x14000e1ca
   14000e1ad:	lea    rcx,[rax+rax*4]
   14000e1b1:	mov    rax,QWORD PTR [r15+0x8]
   14000e1b5:	mov    rdx,QWORD PTR [rax+rcx*8+0x20]
   14000e1ba:	add    rdx,0x8
   14000e1be:	mov    QWORD PTR [rsi],rdx
   14000e1c1:	jmp    0x14000e1ca
   14000e1c3:	mov    QWORD PTR [rdx],0x0
   14000e1ca:	mov    rbx,QWORD PTR [rbp+0x20]
   14000e1ce:	mov    rax,rsi
   14000e1d1:	mov    rsi,QWORD PTR [rbp+0x28]
   14000e1d5:	mov    rdi,QWORD PTR [rbp+0x38]
   14000e1d9:	mov    rsp,rbp
   14000e1dc:	pop    r15
   14000e1de:	pop    r14
   14000e1e0:	pop    rbp
   14000e1e1:	ret    
   14000e1e2:	int3   
   14000e1e3:	int3   
   14000e1e4:	int3   
   14000e1e5:	int3   
   14000e1e6:	int3   
   14000e1e7:	int3   
   14000e1e8:	int3   
   14000e1e9:	int3   
   14000e1ea:	int3   
   14000e1eb:	int3   
   14000e1ec:	int3   
   14000e1ed:	int3   
   14000e1ee:	int3   
   14000e1ef:	int3   
   14000e1f0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e1f5:	mov    QWORD PTR [rsp+0x10],rsi
   14000e1fa:	mov    DWORD PTR [rsp+0x18],r8d
   14000e1ff:	push   rdi
   14000e200:	sub    rsp,0x20
   14000e204:	mov    ebx,r8d
   14000e207:	mov    rdi,rdx
   14000e20a:	mov    rsi,rcx
   14000e20d:	test   r8d,r8d
   14000e210:	jne    0x14000e248
   14000e212:	test   rdx,rdx
   14000e215:	je     0x14000e244
   14000e217:	cmp    BYTE PTR [rdx],bl
   14000e219:	je     0x14000e244
   14000e21b:	mov    edx,0x31415926
   14000e220:	mov    rcx,rdi
   14000e223:	call   0x140022790
   14000e228:	cmp    BYTE PTR [rip+0x3a039],0x0        # 0x140048268
   14000e22f:	mov    ebx,eax
   14000e231:	je     0x14000e244
   14000e233:	mov    r9b,0x1
   14000e236:	xor    r8d,r8d
   14000e239:	mov    rdx,rdi
   14000e23c:	mov    ecx,eax
   14000e23e:	call   QWORD PTR [rip+0x2437c]        # 0x1400325c0
   14000e244:	mov    DWORD PTR [rsp+0x40],ebx
   14000e248:	mov    r8,rdi
   14000e24b:	mov    edx,ebx
   14000e24d:	mov    rcx,rsi
   14000e250:	call   0x14000f810
   14000e255:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e25a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e25f:	add    rsp,0x20
   14000e263:	pop    rdi
   14000e264:	ret    
   14000e265:	int3   
   14000e266:	int3   
   14000e267:	int3   
   14000e268:	int3   
   14000e269:	int3   
   14000e26a:	int3   
   14000e26b:	int3   
   14000e26c:	int3   
   14000e26d:	int3   
   14000e26e:	int3   
   14000e26f:	int3   
   14000e270:	mov    QWORD PTR [rsp+0x8],rbx
   14000e275:	mov    QWORD PTR [rsp+0x10],rbp
   14000e27a:	mov    QWORD PTR [rsp+0x20],rsi
   14000e27f:	mov    DWORD PTR [rsp+0x18],r8d
   14000e284:	push   rdi
   14000e285:	sub    rsp,0x30
   14000e289:	mov    rdi,rcx
   14000e28c:	mov    ebx,r8d
   14000e28f:	mov    r8,QWORD PTR [rcx]
   14000e292:	mov    rbp,rdx
   14000e295:	mov    rcx,r8
   14000e298:	and    ecx,0x1e
   14000e29b:	lea    rax,[rcx-0x14]
   14000e29f:	test   rax,0xfffffffffffffff9
   14000e2a5:	jne    0x14000e2ad
   14000e2a7:	cmp    rcx,0x1a
   14000e2ab:	jne    0x14000e2ba
   14000e2ad:	shr    r8b,1
   14000e2b0:	and    r8b,0xf
   14000e2b4:	cmp    r8b,0x9
   14000e2b8:	je     0x14000e2c8
   14000e2ba:	mov    dl,0x9
   14000e2bc:	mov    rcx,rdi
   14000e2bf:	call   0x14000faa0
   14000e2c4:	mov    ebx,DWORD PTR [rsp+0x50]
   14000e2c8:	xor    esi,esi
   14000e2ca:	test   ebx,ebx
   14000e2cc:	jne    0x14000e307
   14000e2ce:	mov    ebx,esi
   14000e2d0:	test   rbp,rbp
   14000e2d3:	je     0x14000e303
   14000e2d5:	cmp    BYTE PTR [rbp+0x0],bl
   14000e2d8:	je     0x14000e303
   14000e2da:	mov    edx,0x31415926
   14000e2df:	mov    rcx,rbp
   14000e2e2:	call   0x140022790
   14000e2e7:	cmp    BYTE PTR [rip+0x39f7a],sil        # 0x140048268
   14000e2ee:	mov    ebx,eax
   14000e2f0:	je     0x14000e303
   14000e2f2:	mov    r9b,0x1
   14000e2f5:	xor    r8d,r8d
   14000e2f8:	mov    rdx,rbp
   14000e2fb:	mov    ecx,eax
   14000e2fd:	call   QWORD PTR [rip+0x242bd]        # 0x1400325c0
   14000e303:	mov    DWORD PTR [rsp+0x50],ebx
   14000e307:	mov    rcx,QWORD PTR [rdi]
   14000e30a:	mov    rdx,rcx
   14000e30d:	and    edx,0x1e
   14000e310:	lea    rax,[rdx-0x14]
   14000e314:	test   rax,0xfffffffffffffff9
   14000e31a:	jne    0x14000e322
   14000e31c:	cmp    rdx,0x1a
   14000e320:	jne    0x14000e332
   14000e322:	shr    cl,1
   14000e324:	and    cl,0xf
   14000e327:	cmp    cl,0x9
   14000e32a:	jne    0x14000e332
   14000e32c:	mov    rcx,QWORD PTR [rdi+0x8]
   14000e330:	jmp    0x14000e335
   14000e332:	mov    rcx,rsi
   14000e335:	mov    r9,rbp
   14000e338:	mov    BYTE PTR [rsp+0x20],sil
   14000e33d:	mov    r8d,ebx
   14000e340:	mov    rdx,rdi
   14000e343:	call   0x14000e3a0
   14000e348:	mov    rdx,QWORD PTR [rdi]
   14000e34b:	mov    r8,rdx
   14000e34e:	and    r8d,0x1e
   14000e352:	lea    rcx,[r8-0x14]
   14000e356:	test   rcx,0xfffffffffffffff9
   14000e35d:	jne    0x14000e365
   14000e35f:	cmp    r8,0x1a
   14000e363:	jne    0x14000e373
   14000e365:	shr    dl,1
   14000e367:	and    dl,0xf
   14000e36a:	cmp    dl,0x9
   14000e36d:	jne    0x14000e373
   14000e36f:	mov    rsi,QWORD PTR [rdi+0x8]
   14000e373:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e378:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e37d:	movsxd rcx,eax
   14000e380:	mov    rax,QWORD PTR [rsi+0x98]
   14000e387:	mov    rsi,QWORD PTR [rsp+0x58]
   14000e38c:	mov    rax,QWORD PTR [rax+rcx*8]
   14000e390:	add    rsp,0x30
   14000e394:	pop    rdi
   14000e395:	ret    
   14000e396:	int3   
   14000e397:	int3   
   14000e398:	int3   
   14000e399:	int3   
   14000e39a:	int3   
   14000e39b:	int3   
   14000e39c:	int3   
   14000e39d:	int3   
   14000e39e:	int3   
   14000e39f:	int3   
   14000e3a0:	mov    QWORD PTR [rsp+0x20],rbx
   14000e3a5:	mov    DWORD PTR [rsp+0x18],r8d
   14000e3aa:	push   rbp
   14000e3ab:	push   rsi
   14000e3ac:	push   r15
   14000e3ae:	sub    rsp,0x20
   14000e3b2:	movsxd rbp,DWORD PTR [rcx]
   14000e3b5:	xor    r10d,r10d
   14000e3b8:	mov    r15,r9
   14000e3bb:	mov    rsi,rdx
   14000e3be:	mov    rbx,rcx
   14000e3c1:	test   ebp,ebp
   14000e3c3:	jle    0x14000e3e8
   14000e3c5:	mov    rax,QWORD PTR [rcx+0x8]
   14000e3c9:	xor    ecx,ecx
   14000e3cb:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e3d0:	cmp    r8d,DWORD PTR [rax]
   14000e3d3:	je     0x14000e45a
   14000e3d9:	inc    r10d
   14000e3dc:	inc    rcx
   14000e3df:	add    rax,0x4
   14000e3e3:	cmp    rcx,rbp
   14000e3e6:	jl     0x14000e3d0
   14000e3e8:	mov    QWORD PTR [rsp+0x40],rdi
   14000e3ed:	mov    QWORD PTR [rsp+0x48],r14
   14000e3f2:	xor    r14b,r14b
   14000e3f5:	cmp    ebp,DWORD PTR [rbx+0x10]
   14000e3f8:	jne    0x14000e40d
   14000e3fa:	lea    rcx,[rbx+0x8]
   14000e3fe:	mov    edx,0x1
   14000e403:	call   0x1400031e0
   14000e408:	mov    r8d,DWORD PTR [rsp+0x50]
   14000e40d:	mov    rax,QWORD PTR [rbx+0x8]
   14000e411:	inc    DWORD PTR [rbx]
   14000e413:	lea    rdx,[rax+rbp*4]
   14000e417:	test   rdx,rdx
   14000e41a:	je     0x14000e424
   14000e41c:	mov    DWORD PTR [rdx],r8d
   14000e41f:	mov    r8d,DWORD PTR [rsp+0x50]
   14000e424:	cmp    BYTE PTR [rsp+0x60],0x0
   14000e429:	je     0x14000e46b
   14000e42b:	movsxd rdi,DWORD PTR [rbx+0x38]
   14000e42f:	cmp    edi,DWORD PTR [rbx+0x48]
   14000e432:	jne    0x14000e442
   14000e434:	lea    rcx,[rbx+0x40]
   14000e438:	mov    edx,0x1
   14000e43d:	call   0x140013420
   14000e442:	mov    rax,QWORD PTR [rbx+0x40]
   14000e446:	inc    DWORD PTR [rbx+0x38]
   14000e449:	lea    rdx,[rax+rdi*8]
   14000e44d:	test   rdx,rdx
   14000e450:	je     0x14000e455
   14000e452:	mov    QWORD PTR [rdx],r15
   14000e455:	mov    r14b,0x1
   14000e458:	jmp    0x14000e4a3
   14000e45a:	mov    eax,r10d
   14000e45d:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e462:	add    rsp,0x20
   14000e466:	pop    r15
   14000e468:	pop    rsi
   14000e469:	pop    rbp
   14000e46a:	ret    
   14000e46b:	mov    rdx,r15
   14000e46e:	mov    rcx,rsi
   14000e471:	call   0x14000cfc0
   14000e476:	movsxd rdi,DWORD PTR [rbx+0x38]
   14000e47a:	mov    r15,rax
   14000e47d:	cmp    edi,DWORD PTR [rbx+0x48]
   14000e480:	jne    0x14000e490
   14000e482:	lea    rcx,[rbx+0x40]
   14000e486:	mov    edx,0x1
   14000e48b:	call   0x140013420
   14000e490:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e494:	inc    DWORD PTR [rbx+0x38]
   14000e497:	lea    rax,[rcx+rdi*8]
   14000e49b:	test   rax,rax
   14000e49e:	je     0x14000e4a3
   14000e4a0:	mov    QWORD PTR [rax],r15
   14000e4a3:	movzx  eax,BYTE PTR [rsi]
   14000e4a6:	xor    ecx,ecx
   14000e4a8:	and    rsi,0xfffffffffffffc00
   14000e4af:	and    al,0x1
   14000e4b1:	cmove  rcx,rsi
   14000e4b5:	test   rcx,rcx
   14000e4b8:	je     0x14000e4bd
   14000e4ba:	mov    rcx,QWORD PTR [rcx]
   14000e4bd:	test   rcx,rcx
   14000e4c0:	je     0x14000e4cc
   14000e4c2:	call   0x14000cec0
   14000e4c7:	mov    rdi,rax
   14000e4ca:	jmp    0x14000e4fa
   14000e4cc:	mov    ecx,0x10
   14000e4d1:	call   0x140007bf0
   14000e4d6:	mov    rdi,rax
   14000e4d9:	test   rax,rax
   14000e4dc:	je     0x14000e4f8
   14000e4de:	mov    rax,QWORD PTR [rax]
   14000e4e1:	and    rax,0xffffffffffe00003
   14000e4e7:	mov    QWORD PTR [rdi+0x8],0x0
   14000e4ef:	or     rax,0x3
   14000e4f3:	mov    QWORD PTR [rdi],rax
   14000e4f6:	jmp    0x14000e4fa
   14000e4f8:	xor    edi,edi
   14000e4fa:	movsxd rsi,DWORD PTR [rbx+0x90]
   14000e501:	cmp    esi,DWORD PTR [rbx+0xa0]
   14000e507:	jne    0x14000e51a
   14000e509:	lea    rcx,[rbx+0x98]
   14000e510:	mov    edx,0x1
   14000e515:	call   0x140013420
   14000e51a:	mov    rax,QWORD PTR [rbx+0x98]
   14000e521:	inc    DWORD PTR [rbx+0x90]
   14000e527:	lea    r8,[rax+rsi*8]
   14000e52b:	test   r8,r8
   14000e52e:	je     0x14000e533
   14000e530:	mov    QWORD PTR [r8],rdi
   14000e533:	movsxd rdi,DWORD PTR [rbx+0xe8]
   14000e53a:	cmp    edi,DWORD PTR [rbx+0xf8]
   14000e540:	jne    0x14000e553
   14000e542:	lea    rcx,[rbx+0xf0]
   14000e549:	mov    edx,0x1
   14000e54e:	call   0x14000f0d0
   14000e553:	inc    DWORD PTR [rbx+0xe8]
   14000e559:	mov    rcx,rdi
   14000e55c:	mov    rdi,QWORD PTR [rsp+0x40]
   14000e561:	add    rcx,QWORD PTR [rbx+0xf0]
   14000e568:	je     0x14000e56d
   14000e56a:	mov    BYTE PTR [rcx],r14b
   14000e56d:	mov    r14,QWORD PTR [rsp+0x48]
   14000e572:	mov    eax,ebp
   14000e574:	mov    rbx,QWORD PTR [rsp+0x58]
   14000e579:	add    rsp,0x20
   14000e57d:	pop    r15
   14000e57f:	pop    rsi
   14000e580:	pop    rbp
   14000e581:	ret    
   14000e582:	int3   
   14000e583:	int3   
   14000e584:	int3   
   14000e585:	int3   
   14000e586:	int3   
   14000e587:	int3   
   14000e588:	int3   
   14000e589:	int3   
   14000e58a:	int3   
   14000e58b:	int3   
   14000e58c:	int3   
   14000e58d:	int3   
   14000e58e:	int3   
   14000e58f:	int3   
   14000e590:	movsxd rax,DWORD PTR [rcx+0x40]
   14000e594:	xor    r9d,r9d
   14000e597:	mov    r11d,edx
   14000e59a:	test   eax,eax
   14000e59c:	jle    0x14000e5cc
   14000e59e:	mov    r8,QWORD PTR [rcx+0x48]
   14000e5a2:	mov    r10,rax
   14000e5a5:	mov    eax,r9d
   14000e5a8:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e5b0:	mov    rcx,QWORD PTR [r8]
   14000e5b3:	mov    edx,DWORD PTR [rcx]
   14000e5b5:	sub    edx,DWORD PTR [rcx+0x4]
   14000e5b8:	cmp    edx,r11d
   14000e5bb:	jge    0x14000e5d0
   14000e5bd:	inc    r9d
   14000e5c0:	inc    rax
   14000e5c3:	add    r8,0x8
   14000e5c7:	cmp    rax,r10
   14000e5ca:	jl     0x14000e5b0
   14000e5cc:	or     eax,0xffffffff
   14000e5cf:	ret    
   14000e5d0:	mov    eax,r9d
   14000e5d3:	ret    
   14000e5d4:	int3   
   14000e5d5:	int3   
   14000e5d6:	int3   
   14000e5d7:	int3   
   14000e5d8:	int3   
   14000e5d9:	int3   
   14000e5da:	int3   
   14000e5db:	int3   
   14000e5dc:	int3   
   14000e5dd:	int3   
   14000e5de:	int3   
   14000e5df:	int3   
   14000e5e0:	mov    QWORD PTR [rsp+0x10],rbx
   14000e5e5:	mov    QWORD PTR [rsp+0x18],rbp
   14000e5ea:	mov    QWORD PTR [rsp+0x20],rsi
   14000e5ef:	push   rdi
   14000e5f0:	sub    rsp,0x20
   14000e5f4:	movsxd rdi,DWORD PTR [rcx+0x90]
   14000e5fb:	xor    ebx,ebx
   14000e5fd:	mov    rsi,rdx
   14000e600:	mov    rbp,rcx
   14000e603:	test   rdi,rdi
   14000e606:	jle    0x14000e62b
   14000e608:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e610:	mov    rdx,QWORD PTR [rbp+0x98]
   14000e617:	mov    rcx,rsi
   14000e61a:	mov    rdx,QWORD PTR [rdx+rbx*8]
   14000e61e:	call   0x14000e720
   14000e623:	inc    rbx
   14000e626:	cmp    rbx,rdi
   14000e629:	jl     0x14000e610
   14000e62b:	xor    ebx,ebx
   14000e62d:	test   rdi,rdi
   14000e630:	jle    0x14000e691
   14000e632:	mov    QWORD PTR [rsp+0x30],r14
   14000e637:	mov    r14,rsi
   14000e63a:	and    r14,0xfffffffffffffc00
   14000e641:	nop    DWORD PTR [rax+0x0]
   14000e645:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000e650:	mov    rax,QWORD PTR [rbp+0x40]
   14000e654:	test   BYTE PTR [rsi],0x1
   14000e657:	mov    rdx,QWORD PTR [rax+rbx*8]
   14000e65b:	mov    eax,0x0
   14000e660:	cmove  rax,r14
   14000e664:	test   rax,rax
   14000e667:	je     0x14000e66f
   14000e669:	cmp    QWORD PTR [rax],0x0
   14000e66d:	jne    0x14000e684
   14000e66f:	test   rdx,rdx
   14000e672:	je     0x14000e684
   14000e674:	mov    rax,QWORD PTR [rip+0x23d15]        # 0x140032390
   14000e67b:	mov    rcx,QWORD PTR [rax]
   14000e67e:	mov    rax,QWORD PTR [rcx]
   14000e681:	call   QWORD PTR [rax+0x28]
   14000e684:	inc    rbx
   14000e687:	cmp    rbx,rdi
   14000e68a:	jl     0x14000e650
   14000e68c:	mov    r14,QWORD PTR [rsp+0x30]
   14000e691:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e696:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e69b:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e6a0:	add    rsp,0x20
   14000e6a4:	pop    rdi
   14000e6a5:	ret    
   14000e6a6:	int3   
   14000e6a7:	int3   
   14000e6a8:	int3   
   14000e6a9:	int3   
   14000e6aa:	int3   
   14000e6ab:	int3   
   14000e6ac:	int3   
   14000e6ad:	int3   
   14000e6ae:	int3   
   14000e6af:	int3   
   14000e6b0:	test   rdx,rdx
   14000e6b3:	je     0x14000e71c
   14000e6b5:	mov    QWORD PTR [rsp+0x18],rbp
   14000e6ba:	push   rsi
   14000e6bb:	sub    rsp,0x20
   14000e6bf:	mov    QWORD PTR [rsp+0x38],rdi
   14000e6c4:	mov    rsi,rdx
   14000e6c7:	movsxd rdi,DWORD PTR [rdx]
   14000e6ca:	mov    rbp,rcx
   14000e6cd:	test   rdi,rdi
   14000e6d0:	jle    0x14000e6fa
   14000e6d2:	mov    QWORD PTR [rsp+0x30],rbx
   14000e6d7:	lea    rbx,[rdx+0x8]
   14000e6db:	nop    DWORD PTR [rax+rax*1+0x0]
   14000e6e0:	mov    rdx,QWORD PTR [rbx]
   14000e6e3:	mov    rcx,rbp
   14000e6e6:	call   0x14000e720
   14000e6eb:	lea    rbx,[rbx+0x8]
   14000e6ef:	sub    rdi,0x1
   14000e6f3:	jne    0x14000e6e0
   14000e6f5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e6fa:	mov    rax,QWORD PTR [rip+0x23c8f]        # 0x140032390
   14000e701:	mov    rdx,rsi
   14000e704:	mov    rcx,QWORD PTR [rax]
   14000e707:	mov    rax,QWORD PTR [rcx]
   14000e70a:	call   QWORD PTR [rax+0x28]
   14000e70d:	mov    rdi,QWORD PTR [rsp+0x38]
   14000e712:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e717:	add    rsp,0x20
   14000e71b:	pop    rsi
   14000e71c:	ret    
   14000e71d:	int3   
   14000e71e:	int3   
   14000e71f:	int3   
   14000e720:	rex push rbx
   14000e722:	sub    rsp,0x20
   14000e726:	movzx  eax,BYTE PTR [rcx]
   14000e729:	xor    r8d,r8d
   14000e72c:	and    rcx,0xfffffffffffffc00
   14000e733:	mov    rbx,rdx
   14000e736:	and    al,0x1
   14000e738:	mov    edx,r8d
   14000e73b:	cmove  rdx,rcx
   14000e73f:	test   rdx,rdx
   14000e742:	je     0x14000e747
   14000e744:	mov    r8,QWORD PTR [rdx]
   14000e747:	test   r8,r8
   14000e74a:	je     0x14000e75c
   14000e74c:	mov    rdx,rbx
   14000e74f:	mov    rcx,r8
   14000e752:	add    rsp,0x20
   14000e756:	pop    rbx
   14000e757:	jmp    0x14000e790
   14000e75c:	test   rbx,rbx
   14000e75f:	je     0x14000e77b
   14000e761:	mov    rcx,rbx
   14000e764:	call   0x14000f9e0
   14000e769:	mov    edx,0x10
   14000e76e:	mov    rcx,rbx
   14000e771:	add    rsp,0x20
   14000e775:	pop    rbx
   14000e776:	jmp    0x14002639c
   14000e77b:	add    rsp,0x20
   14000e77f:	pop    rbx
   14000e780:	ret    
   14000e781:	int3   
   14000e782:	int3   
   14000e783:	int3   
   14000e784:	int3   
   14000e785:	int3   
   14000e786:	int3   
   14000e787:	int3   
   14000e788:	int3   
   14000e789:	int3   
   14000e78a:	int3   
   14000e78b:	int3   
   14000e78c:	int3   
   14000e78d:	int3   
   14000e78e:	int3   
   14000e78f:	int3   
   14000e790:	mov    QWORD PTR [rsp+0x10],rbx
   14000e795:	mov    QWORD PTR [rsp+0x18],rbp
   14000e79a:	mov    QWORD PTR [rsp+0x20],rsi
   14000e79f:	push   rdi
   14000e7a0:	sub    rsp,0x20
   14000e7a4:	dec    DWORD PTR [rcx+0x4d0]
   14000e7aa:	xor    esi,esi
   14000e7ac:	movzx  r8d,BYTE PTR [rdx]
   14000e7b0:	mov    rax,rdx
   14000e7b3:	and    rax,0xfffffffffffffc00
   14000e7b9:	mov    QWORD PTR [rsp+0x30],r14
   14000e7be:	and    r8b,0x1
   14000e7c2:	mov    ebx,esi
   14000e7c4:	mov    r14,rdx
   14000e7c7:	mov    rbp,rcx
   14000e7ca:	cmove  rbx,rax
   14000e7ce:	lea    rax,[rbx+0x18]
   14000e7d2:	cmp    rax,rdx
   14000e7d5:	ja     0x14000e811
   14000e7d7:	lea    rax,[rbx+0x3e8]
   14000e7de:	cmp    rdx,rax
   14000e7e1:	ja     0x14000e811
   14000e7e3:	mov    rcx,rdx
   14000e7e6:	mov    edi,0x1
   14000e7eb:	sub    rcx,rbx
   14000e7ee:	sub    rcx,0x18
   14000e7f2:	shr    rcx,0x4
   14000e7f6:	shl    rdi,cl
   14000e7f9:	mov    rcx,rdx
   14000e7fc:	call   0x14000f9e0
   14000e801:	xor    eax,eax
   14000e803:	not    rdi
   14000e806:	mov    QWORD PTR [r14],rax
   14000e809:	mov    QWORD PTR [r14+0x8],rax
   14000e80d:	and    QWORD PTR [rbx+0x10],rdi
   14000e811:	mov    rcx,QWORD PTR [rbx+0x10]
   14000e815:	movabs rdx,0x5555555555555555
   14000e81f:	mov    r14,QWORD PTR [rsp+0x30]
   14000e824:	mov    rax,rcx
   14000e827:	shr    rax,1
   14000e82a:	and    rax,rdx
   14000e82d:	movabs rdx,0x3333333333333333
   14000e837:	sub    rcx,rax
   14000e83a:	mov    rax,rcx
   14000e83d:	and    rcx,rdx
   14000e840:	shr    rax,0x2
   14000e844:	and    rax,rdx
   14000e847:	add    rax,rcx
   14000e84a:	mov    rcx,rax
   14000e84d:	shr    rcx,0x4
   14000e851:	add    rcx,rax
   14000e854:	movabs rax,0xf0f0f0f0f0f0f0f
   14000e85e:	and    rcx,rax
   14000e861:	movabs rax,0x101010101010101
   14000e86b:	imul   rcx,rax
   14000e86f:	shr    rcx,0x38
   14000e873:	test   ecx,ecx
   14000e875:	jne    0x14000e948
   14000e87b:	cmp    rbx,rbp
   14000e87e:	je     0x14000e95f
   14000e884:	mov    ecx,DWORD PTR [rbp+0x400]
   14000e88a:	test   ecx,ecx
   14000e88c:	jle    0x14000e8cc
   14000e88e:	mov    rdx,QWORD PTR [rbp+0x408]
   14000e895:	mov    rax,rdx
   14000e898:	cmp    QWORD PTR [rax],rbx
   14000e89b:	je     0x14000e8a9
   14000e89d:	inc    esi
   14000e89f:	add    rax,0x8
   14000e8a3:	cmp    esi,ecx
   14000e8a5:	jl     0x14000e898
   14000e8a7:	jmp    0x14000e8cc
   14000e8a9:	cmp    esi,0xffffffff
   14000e8ac:	je     0x14000e8cc
   14000e8ae:	test   ecx,ecx
   14000e8b0:	jle    0x14000e8cc
   14000e8b2:	dec    ecx
   14000e8b4:	cmp    esi,ecx
   14000e8b6:	je     0x14000e8c6
   14000e8b8:	movsxd rax,ecx
   14000e8bb:	movsxd rcx,esi
   14000e8be:	mov    rax,QWORD PTR [rdx+rax*8]
   14000e8c2:	mov    QWORD PTR [rdx+rcx*8],rax
   14000e8c6:	dec    DWORD PTR [rbp+0x400]
   14000e8cc:	mov    rcx,QWORD PTR [rbp+0x458]
   14000e8d3:	cmp    rcx,rbx
   14000e8d6:	jne    0x14000e8e5
   14000e8d8:	mov    rax,QWORD PTR [rbx+0x8]
   14000e8dc:	mov    QWORD PTR [rbp+0x458],rax
   14000e8e3:	jmp    0x14000e90b
   14000e8e5:	test   rcx,rcx
   14000e8e8:	je     0x14000e90b
   14000e8ea:	nop    WORD PTR [rax+rax*1+0x0]
   14000e8f0:	mov    rax,QWORD PTR [rcx+0x8]
   14000e8f4:	cmp    rax,rbx
   14000e8f7:	je     0x14000e903
   14000e8f9:	mov    rcx,rax
   14000e8fc:	test   rax,rax
   14000e8ff:	jne    0x14000e8f0
   14000e901:	jmp    0x14000e90b
   14000e903:	mov    rax,QWORD PTR [rbx+0x8]
   14000e907:	mov    QWORD PTR [rcx+0x8],rax
   14000e90b:	mov    edi,0x3e
   14000e910:	lea    rsi,[rbx+0x3f8]
   14000e917:	nop    WORD PTR [rax+rax*1+0x0]
   14000e920:	sub    rsi,0x10
   14000e924:	mov    rcx,rsi
   14000e927:	call   0x14000f9e0
   14000e92c:	sub    rdi,0x1
   14000e930:	jne    0x14000e920
   14000e932:	mov    rax,QWORD PTR [rip+0x23a57]        # 0x140032390
   14000e939:	mov    rdx,QWORD PTR [rbx-0x8]
   14000e93d:	mov    rcx,QWORD PTR [rax]
   14000e940:	mov    rax,QWORD PTR [rcx]
   14000e943:	call   QWORD PTR [rax+0x28]
   14000e946:	jmp    0x14000e95f
   14000e948:	cmp    ecx,0x3d
   14000e94b:	jne    0x14000e95f
   14000e94d:	mov    rax,QWORD PTR [rbp+0x458]
   14000e954:	mov    QWORD PTR [rbx+0x8],rax
   14000e958:	mov    QWORD PTR [rbp+0x458],rbx
   14000e95f:	mov    rbx,QWORD PTR [rsp+0x38]
   14000e964:	mov    rbp,QWORD PTR [rsp+0x40]
   14000e969:	mov    rsi,QWORD PTR [rsp+0x48]
   14000e96e:	add    rsp,0x20
   14000e972:	pop    rdi
   14000e973:	ret    
   14000e974:	int3   
   14000e975:	int3   
   14000e976:	int3   
   14000e977:	int3   
   14000e978:	int3   
   14000e979:	int3   
   14000e97a:	int3   
   14000e97b:	int3   
   14000e97c:	int3   
   14000e97d:	int3   
   14000e97e:	int3   
   14000e97f:	int3   
   14000e980:	mov    eax,DWORD PTR [rcx]
   14000e982:	mov    rdx,rcx
   14000e985:	test   eax,eax
   14000e987:	jne    0x14000e98c
   14000e989:	xor    eax,eax
   14000e98b:	ret    
   14000e98c:	dec    eax
   14000e98e:	movsxd rcx,eax
   14000e991:	mov    rax,QWORD PTR [rdx+0x8]
   14000e995:	add    rcx,rcx
   14000e998:	mov    rax,QWORD PTR [rax+rcx*8]
   14000e99c:	ret    
   14000e99d:	int3   
   14000e99e:	int3   
   14000e99f:	int3   
   14000e9a0:	mov    eax,DWORD PTR [rcx]
   14000e9a2:	shr    rax,0x5
   14000e9a6:	ret    
   14000e9a7:	int3   
   14000e9a8:	int3   
   14000e9a9:	int3   
   14000e9aa:	int3   
   14000e9ab:	int3   
   14000e9ac:	int3   
   14000e9ad:	int3   
   14000e9ae:	int3   
   14000e9af:	int3   
   14000e9b0:	mov    r8,QWORD PTR [rcx]
   14000e9b3:	mov    r9,r8
   14000e9b6:	and    r9d,0x1e
   14000e9ba:	lea    rax,[r9-0x14]
   14000e9be:	test   rax,0xfffffffffffffff9
   14000e9c4:	jne    0x14000e9cc
   14000e9c6:	cmp    r9,0x1a
   14000e9ca:	jne    0x14000e9f4
   14000e9cc:	shr    r8b,1
   14000e9cf:	and    r8b,0xf
   14000e9d3:	cmp    r8b,0x8
   14000e9d7:	jne    0x14000e9f4
   14000e9d9:	mov    rax,QWORD PTR [rcx+0x8]
   14000e9dd:	test   rax,rax
   14000e9e0:	je     0x14000e9f4
   14000e9e2:	test   edx,edx
   14000e9e4:	js     0x14000e9f4
   14000e9e6:	movsxd rcx,edx
   14000e9e9:	cmp    rcx,QWORD PTR [rax]
   14000e9ec:	jge    0x14000e9f4
   14000e9ee:	mov    rax,QWORD PTR [rax+rcx*8+0x8]
   14000e9f3:	ret    
   14000e9f4:	xor    eax,eax
   14000e9f6:	ret    
   14000e9f7:	int3   
   14000e9f8:	int3   
   14000e9f9:	int3   
   14000e9fa:	int3   
   14000e9fb:	int3   
   14000e9fc:	int3   
   14000e9fd:	int3   
   14000e9fe:	int3   
   14000e9ff:	int3   
   14000ea00:	mov    rdx,QWORD PTR [rcx]
   14000ea03:	mov    r8,rdx
   14000ea06:	and    r8d,0x1e
   14000ea0a:	lea    rax,[r8-0x14]
   14000ea0e:	test   rax,0xfffffffffffffff9
   14000ea14:	jne    0x14000ea1c
   14000ea16:	cmp    r8,0x1a
   14000ea1a:	jne    0x14000ea32
   14000ea1c:	shr    dl,1
   14000ea1e:	and    dl,0xf
   14000ea21:	cmp    dl,0x8
   14000ea24:	jne    0x14000ea32
   14000ea26:	mov    rax,QWORD PTR [rcx+0x8]
   14000ea2a:	test   rax,rax
   14000ea2d:	je     0x14000ea32
   14000ea2f:	mov    eax,DWORD PTR [rax]
   14000ea31:	ret    
   14000ea32:	xor    eax,eax
   14000ea34:	ret    
   14000ea35:	int3   
   14000ea36:	int3   
   14000ea37:	int3   
   14000ea38:	int3   
   14000ea39:	int3   
   14000ea3a:	int3   
   14000ea3b:	int3   
   14000ea3c:	int3   
   14000ea3d:	int3   
   14000ea3e:	int3   
   14000ea3f:	int3   
   14000ea40:	mov    r8,QWORD PTR [rcx]
   14000ea43:	mov    rdx,r8
   14000ea46:	and    edx,0x1e
   14000ea49:	lea    rax,[rdx-0x14]
   14000ea4d:	test   rax,0xfffffffffffffffd
   14000ea53:	je     0x14000ea8a
   14000ea55:	cmp    rdx,0x18
   14000ea59:	je     0x14000ea6e
   14000ea5b:	shr    r8b,1
   14000ea5e:	and    r8b,0xf
   14000ea62:	cmp    r8b,0x7
   14000ea66:	jne    0x14000ea8a
   14000ea68:	cmp    rdx,0x18
   14000ea6c:	jne    0x14000ea7c
   14000ea6e:	mov    rax,QWORD PTR [rcx+0x8]
   14000ea72:	test   rax,rax
   14000ea75:	je     0x14000ea8a
   14000ea77:	mov    rax,QWORD PTR [rax+0x8]
   14000ea7b:	ret    
   14000ea7c:	mov    rax,QWORD PTR [rcx+0x8]
   14000ea80:	test   rax,rax
   14000ea83:	je     0x14000ea8a
   14000ea85:	add    rax,0x8
   14000ea89:	ret    
   14000ea8a:	xor    eax,eax
   14000ea8c:	ret    
   14000ea8d:	int3   
   14000ea8e:	int3   
   14000ea8f:	int3   
   14000ea90:	mov    r9,QWORD PTR [rcx]
   14000ea93:	mov    r10,rcx
   14000ea96:	mov    r8,r9
   14000ea99:	movsxd r11,edx
   14000ea9c:	and    r8d,0x1e
   14000eaa0:	lea    rax,[r8-0x14]
   14000eaa4:	test   rax,0xfffffffffffffffd
   14000eaaa:	je     0x14000eaff
   14000eaac:	cmp    r8,0x18
   14000eab0:	je     0x14000eabf
   14000eab2:	shr    r9b,1
   14000eab5:	and    r9b,0xf
   14000eab9:	cmp    r9b,0x7
   14000eabd:	jne    0x14000eaff
   14000eabf:	mov    rax,QWORD PTR [r10+0x8]
   14000eac3:	xor    ecx,ecx
   14000eac5:	test   rax,rax
   14000eac8:	je     0x14000eace
   14000eaca:	mov    edx,DWORD PTR [rax]
   14000eacc:	jmp    0x14000ead0
   14000eace:	mov    edx,ecx
   14000ead0:	cmp    r11d,edx
   14000ead3:	jge    0x14000eaff
   14000ead5:	cmp    r8,0x18
   14000ead9:	jne    0x14000eaed
   14000eadb:	test   rax,rax
   14000eade:	je     0x14000eaf6
   14000eae0:	mov    rcx,QWORD PTR [rax+0x8]
   14000eae4:	mov    rax,r11
   14000eae7:	movzx  eax,BYTE PTR [r11+rcx*1]
   14000eaec:	ret    
   14000eaed:	test   rax,rax
   14000eaf0:	je     0x14000eaf6
   14000eaf2:	lea    rcx,[rax+0x8]
   14000eaf6:	mov    rax,r11
   14000eaf9:	movzx  eax,BYTE PTR [r11+rcx*1]
   14000eafe:	ret    
   14000eaff:	xor    al,al
   14000eb01:	ret    
   14000eb02:	int3   
   14000eb03:	int3   
   14000eb04:	int3   
   14000eb05:	int3   
   14000eb06:	int3   
   14000eb07:	int3   
   14000eb08:	int3   
   14000eb09:	int3   
   14000eb0a:	int3   
   14000eb0b:	int3   
   14000eb0c:	int3   
   14000eb0d:	int3   
   14000eb0e:	int3   
   14000eb0f:	int3   
   14000eb10:	mov    r8,QWORD PTR [rcx]
   14000eb13:	mov    rdx,r8
   14000eb16:	and    edx,0x1e
   14000eb19:	lea    rax,[rdx-0x14]
   14000eb1d:	test   rax,0xfffffffffffffffd
   14000eb23:	je     0x14000eb44
   14000eb25:	cmp    rdx,0x18
   14000eb29:	je     0x14000eb38
   14000eb2b:	shr    r8b,1
   14000eb2e:	and    r8b,0xf
   14000eb32:	cmp    r8b,0x7
   14000eb36:	jne    0x14000eb44
   14000eb38:	mov    rax,QWORD PTR [rcx+0x8]
   14000eb3c:	test   rax,rax
   14000eb3f:	je     0x14000eb44
   14000eb41:	mov    eax,DWORD PTR [rax]
   14000eb43:	ret    
   14000eb44:	xor    eax,eax
   14000eb46:	ret    
   14000eb47:	int3   
   14000eb48:	int3   
   14000eb49:	int3   
   14000eb4a:	int3   
   14000eb4b:	int3   
   14000eb4c:	int3   
   14000eb4d:	int3   
   14000eb4e:	int3   
   14000eb4f:	int3   
   14000eb50:	sub    rsp,0x28
   14000eb54:	mov    rdx,QWORD PTR [rcx]
   14000eb57:	mov    r8,rdx
   14000eb5a:	and    r8d,0x1e
   14000eb5e:	lea    rax,[r8-0x14]
   14000eb62:	test   rax,0xfffffffffffffff9
   14000eb68:	jne    0x14000eb70
   14000eb6a:	cmp    r8,0x1a
   14000eb6e:	jne    0x14000eb7a
   14000eb70:	shr    dl,1
   14000eb72:	and    dl,0xf
   14000eb75:	cmp    dl,0x2
   14000eb78:	je     0x14000eb89
   14000eb7a:	call   0x14000c080
   14000eb7f:	test   eax,eax
   14000eb81:	setne  al
   14000eb84:	add    rsp,0x28
   14000eb88:	ret    
   14000eb89:	movzx  eax,BYTE PTR [rcx+0x8]
   14000eb8d:	add    rsp,0x28
   14000eb91:	ret    
   14000eb92:	int3   
   14000eb93:	int3   
   14000eb94:	int3   
   14000eb95:	int3   
   14000eb96:	int3   
   14000eb97:	int3   
   14000eb98:	int3   
   14000eb99:	int3   
   14000eb9a:	int3   
   14000eb9b:	int3   
   14000eb9c:	int3   
   14000eb9d:	int3   
   14000eb9e:	int3   
   14000eb9f:	int3   
   14000eba0:	jmp    0x14000c130
   14000eba5:	int3   
   14000eba6:	int3   
   14000eba7:	int3   
   14000eba8:	int3   
   14000eba9:	int3   
   14000ebaa:	int3   
   14000ebab:	int3   
   14000ebac:	int3   
   14000ebad:	int3   
   14000ebae:	int3   
   14000ebaf:	int3   
   14000ebb0:	jmp    0x14000c1e0
   14000ebb5:	int3   
   14000ebb6:	int3   
   14000ebb7:	int3   
   14000ebb8:	int3   
   14000ebb9:	int3   
   14000ebba:	int3   
   14000ebbb:	int3   
   14000ebbc:	int3   
   14000ebbd:	int3   
   14000ebbe:	int3   
   14000ebbf:	int3   
   14000ebc0:	mov    r8,QWORD PTR [rcx]
   14000ebc3:	mov    r9,r8
   14000ebc6:	and    r9d,0x1e
   14000ebca:	lea    rax,[r9-0x14]
   14000ebce:	test   rax,0xfffffffffffffff9
   14000ebd4:	jne    0x14000ebdc
   14000ebd6:	cmp    r9,0x1a
   14000ebda:	jne    0x14000ec04
   14000ebdc:	shr    r8b,1
   14000ebdf:	and    r8b,0xf
   14000ebe3:	cmp    r8b,0x9
   14000ebe7:	jne    0x14000ec04
   14000ebe9:	mov    rax,QWORD PTR [rcx+0x8]
   14000ebed:	test   edx,edx
   14000ebef:	js     0x14000ec04
   14000ebf1:	cmp    edx,DWORD PTR [rax]
   14000ebf3:	jge    0x14000ec04
   14000ebf5:	mov    rax,QWORD PTR [rax+0x98]
   14000ebfc:	movsxd rcx,edx
   14000ebff:	mov    rax,QWORD PTR [rax+rcx*8]
   14000ec03:	ret    
   14000ec04:	xor    eax,eax
   14000ec06:	ret    
   14000ec07:	int3   
   14000ec08:	int3   
   14000ec09:	int3   
   14000ec0a:	int3   
   14000ec0b:	int3   
   14000ec0c:	int3   
   14000ec0d:	int3   
   14000ec0e:	int3   
   14000ec0f:	int3   
   14000ec10:	mov    rdx,QWORD PTR [rcx]
   14000ec13:	mov    r8,rdx
   14000ec16:	and    r8d,0x1e
   14000ec1a:	lea    rax,[r8-0x14]
   14000ec1e:	test   rax,0xfffffffffffffff9
   14000ec24:	jne    0x14000ec2c
   14000ec26:	cmp    r8,0x1a
   14000ec2a:	jne    0x14000ec36
   14000ec2c:	shr    dl,1
   14000ec2e:	and    dl,0xf
   14000ec31:	cmp    dl,0x9
   14000ec34:	je     0x14000ec39
   14000ec36:	xor    eax,eax
   14000ec38:	ret    
   14000ec39:	mov    rax,QWORD PTR [rcx+0x8]
   14000ec3d:	mov    eax,DWORD PTR [rax]
   14000ec3f:	ret    
   14000ec40:	mov    QWORD PTR [rsp+0x8],rbx
   14000ec45:	mov    QWORD PTR [rsp+0x10],rbp
   14000ec4a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ec4f:	mov    DWORD PTR [rsp+0x20],r9d
   14000ec54:	push   rdi
   14000ec55:	sub    rsp,0x20
   14000ec59:	mov    ebx,r9d
   14000ec5c:	mov    esi,r8d
   14000ec5f:	mov    rdi,rdx
   14000ec62:	mov    rbp,rcx
   14000ec65:	test   r9d,r9d
   14000ec68:	jne    0x14000eca0
   14000ec6a:	test   rdx,rdx
   14000ec6d:	je     0x14000ec9c
   14000ec6f:	cmp    BYTE PTR [rdx],bl
   14000ec71:	je     0x14000ec9c
   14000ec73:	mov    edx,0x31415926
   14000ec78:	mov    rcx,rdi
   14000ec7b:	call   0x140022790
   14000ec80:	cmp    BYTE PTR [rip+0x395e1],0x0        # 0x140048268
   14000ec87:	mov    ebx,eax
   14000ec89:	je     0x14000ec9c
   14000ec8b:	mov    r9b,0x1
   14000ec8e:	xor    r8d,r8d
   14000ec91:	mov    rdx,rdi
   14000ec94:	mov    ecx,eax
   14000ec96:	call   QWORD PTR [rip+0x23924]        # 0x1400325c0
   14000ec9c:	mov    DWORD PTR [rsp+0x48],ebx
   14000eca0:	mov    r8,rdi
   14000eca3:	mov    edx,ebx
   14000eca5:	mov    rcx,rbp
   14000eca8:	call   0x14000f810
   14000ecad:	test   rax,rax
   14000ecb0:	jne    0x14000ecb6
   14000ecb2:	mov    eax,esi
   14000ecb4:	jmp    0x14000ecbe
   14000ecb6:	mov    rcx,rax
   14000ecb9:	call   0x14000c080
   14000ecbe:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ecc3:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ecc8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000eccd:	add    rsp,0x20
   14000ecd1:	pop    rdi
   14000ecd2:	ret    
   14000ecd3:	int3   
   14000ecd4:	int3   
   14000ecd5:	int3   
   14000ecd6:	int3   
   14000ecd7:	int3   
   14000ecd8:	int3   
   14000ecd9:	int3   
   14000ecda:	int3   
   14000ecdb:	int3   
   14000ecdc:	int3   
   14000ecdd:	int3   
   14000ecde:	int3   
   14000ecdf:	int3   
   14000ece0:	mov    r8,QWORD PTR [rcx]
   14000ece3:	mov    r9,r8
   14000ece6:	and    r9d,0x1e
   14000ecea:	lea    rax,[r9-0x14]
   14000ecee:	test   rax,0xfffffffffffffff9
   14000ecf4:	jne    0x14000ecfc
   14000ecf6:	cmp    r9,0x1a
   14000ecfa:	jne    0x14000ed21
   14000ecfc:	shr    r8b,1
   14000ecff:	and    r8b,0xf
   14000ed03:	cmp    r8b,0x9
   14000ed07:	jne    0x14000ed21
   14000ed09:	mov    rax,QWORD PTR [rcx+0x8]
   14000ed0d:	test   edx,edx
   14000ed0f:	js     0x14000ed21
   14000ed11:	cmp    edx,DWORD PTR [rax]
   14000ed13:	jge    0x14000ed21
   14000ed15:	mov    rax,QWORD PTR [rax+0x40]
   14000ed19:	movsxd rcx,edx
   14000ed1c:	mov    rax,QWORD PTR [rax+rcx*8]
   14000ed20:	ret    
   14000ed21:	xor    eax,eax
   14000ed23:	ret    
   14000ed24:	int3   
   14000ed25:	int3   
   14000ed26:	int3   
   14000ed27:	int3   
   14000ed28:	int3   
   14000ed29:	int3   
   14000ed2a:	int3   
   14000ed2b:	int3   
   14000ed2c:	int3   
   14000ed2d:	int3   
   14000ed2e:	int3   
   14000ed2f:	int3   
   14000ed30:	mov    QWORD PTR [rsp+0x8],rbx
   14000ed35:	push   rdi
   14000ed36:	sub    rsp,0x20
   14000ed3a:	mov    r9,QWORD PTR [rcx]
   14000ed3d:	mov    rdi,r8
   14000ed40:	mov    r10,r9
   14000ed43:	and    r10d,0x1e
   14000ed47:	lea    rax,[r10-0x14]
   14000ed4b:	test   rax,0xfffffffffffffff9
   14000ed51:	jne    0x14000ed59
   14000ed53:	cmp    r10,0x1a
   14000ed57:	jne    0x14000ed66
   14000ed59:	shr    r9b,1
   14000ed5c:	and    r9b,0xf
   14000ed60:	cmp    r9b,0x9
   14000ed64:	je     0x14000ed6a
   14000ed66:	xor    ebx,ebx
   14000ed68:	jmp    0x14000ed8e
   14000ed6a:	xor    ebx,ebx
   14000ed6c:	cmp    r9b,0x9
   14000ed70:	jne    0x14000ed78
   14000ed72:	mov    rax,QWORD PTR [rcx+0x8]
   14000ed76:	jmp    0x14000ed7b
   14000ed78:	mov    rax,rbx
   14000ed7b:	test   edx,edx
   14000ed7d:	js     0x14000ed8e
   14000ed7f:	cmp    edx,DWORD PTR [rax]
   14000ed81:	jge    0x14000ed8e
   14000ed83:	mov    rax,QWORD PTR [rax+0x40]
   14000ed87:	movsxd rcx,edx
   14000ed8a:	mov    rbx,QWORD PTR [rax+rcx*8]
   14000ed8e:	mov    rdx,rdi
   14000ed91:	mov    rcx,rbx
   14000ed94:	call   0x1400240b0
   14000ed99:	test   al,al
   14000ed9b:	jne    0x14000eda8
   14000ed9d:	mov    rdx,rbx
   14000eda0:	mov    rcx,rdi
   14000eda3:	call   0x14001aae0
   14000eda8:	mov    rbx,QWORD PTR [rsp+0x30]
   14000edad:	add    rsp,0x20
   14000edb1:	pop    rdi
   14000edb2:	ret    
   14000edb3:	int3   
   14000edb4:	int3   
   14000edb5:	int3   
   14000edb6:	int3   
   14000edb7:	int3   
   14000edb8:	int3   
   14000edb9:	int3   
   14000edba:	int3   
   14000edbb:	int3   
   14000edbc:	int3   
   14000edbd:	int3   
   14000edbe:	int3   
   14000edbf:	int3   
   14000edc0:	mov    QWORD PTR [rsp+0x8],rbx
   14000edc5:	mov    QWORD PTR [rsp+0x10],rbp
   14000edca:	mov    QWORD PTR [rsp+0x18],rsi
   14000edcf:	mov    QWORD PTR [rsp+0x20],rdi
   14000edd4:	push   r14
   14000edd6:	sub    rsp,0x20
   14000edda:	mov    ebx,DWORD PTR [rsp+0x50]
   14000edde:	mov    rbp,r9
   14000ede1:	mov    rsi,r8
   14000ede4:	mov    rdi,rdx
   14000ede7:	mov    r14,rcx
   14000edea:	test   ebx,ebx
   14000edec:	jne    0x14000ee24
   14000edee:	test   rdx,rdx
   14000edf1:	je     0x14000ee20
   14000edf3:	cmp    BYTE PTR [rdx],bl
   14000edf5:	je     0x14000ee20
   14000edf7:	mov    edx,0x31415926
   14000edfc:	mov    rcx,rdi
   14000edff:	call   0x140022790
   14000ee04:	cmp    BYTE PTR [rip+0x3945d],0x0        # 0x140048268
   14000ee0b:	mov    ebx,eax
   14000ee0d:	je     0x14000ee20
   14000ee0f:	mov    r9b,0x1
   14000ee12:	xor    r8d,r8d
   14000ee15:	mov    rdx,rdi
   14000ee18:	mov    ecx,eax
   14000ee1a:	call   QWORD PTR [rip+0x237a0]        # 0x1400325c0
   14000ee20:	mov    DWORD PTR [rsp+0x50],ebx
   14000ee24:	mov    r8,rdi
   14000ee27:	mov    edx,ebx
   14000ee29:	mov    rcx,r14
   14000ee2c:	call   0x14000f810
   14000ee31:	test   rax,rax
   14000ee34:	jne    0x14000ee43
   14000ee36:	mov    rdx,rbp
   14000ee39:	mov    rcx,rsi
   14000ee3c:	call   0x14001aae0
   14000ee41:	jmp    0x14000ee4e
   14000ee43:	mov    rdx,rsi
   14000ee46:	mov    rcx,rax
   14000ee49:	call   0x14000ef50
   14000ee4e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ee53:	mov    rbp,QWORD PTR [rsp+0x38]
   14000ee58:	mov    rsi,QWORD PTR [rsp+0x40]
   14000ee5d:	mov    rdi,QWORD PTR [rsp+0x48]
   14000ee62:	add    rsp,0x20
   14000ee66:	pop    r14
   14000ee68:	ret    
   14000ee69:	int3   
   14000ee6a:	int3   
   14000ee6b:	int3   
   14000ee6c:	int3   
   14000ee6d:	int3   
   14000ee6e:	int3   
   14000ee6f:	int3   
   14000ee70:	mov    QWORD PTR [rsp+0x8],rbx
   14000ee75:	mov    QWORD PTR [rsp+0x10],rbp
   14000ee7a:	mov    DWORD PTR [rsp+0x20],r9d
   14000ee7f:	push   rsi
   14000ee80:	push   rdi
   14000ee81:	push   r14
   14000ee83:	sub    rsp,0x20
   14000ee87:	xor    edi,edi
   14000ee89:	mov    ebx,r9d
   14000ee8c:	mov    rbp,r8
   14000ee8f:	mov    rsi,rdx
   14000ee92:	mov    r14,rcx
   14000ee95:	test   r9d,r9d
   14000ee98:	jne    0x14000eed2
   14000ee9a:	mov    ebx,edi
   14000ee9c:	test   rdx,rdx
   14000ee9f:	je     0x14000eece
   14000eea1:	cmp    BYTE PTR [rdx],bl
   14000eea3:	je     0x14000eece
   14000eea5:	mov    edx,0x31415926
   14000eeaa:	mov    rcx,rsi
   14000eead:	call   0x140022790
   14000eeb2:	cmp    BYTE PTR [rip+0x393af],dil        # 0x140048268
   14000eeb9:	mov    ebx,eax
   14000eebb:	je     0x14000eece
   14000eebd:	mov    r9b,0x1
   14000eec0:	xor    r8d,r8d
   14000eec3:	mov    rdx,rsi
   14000eec6:	mov    ecx,eax
   14000eec8:	call   QWORD PTR [rip+0x236f2]        # 0x1400325c0
   14000eece:	mov    DWORD PTR [rsp+0x58],ebx
   14000eed2:	mov    r8,rsi
   14000eed5:	mov    edx,ebx
   14000eed7:	mov    rcx,r14
   14000eeda:	call   0x14000f810
   14000eedf:	test   rax,rax
   14000eee2:	je     0x14000ef31
   14000eee4:	mov    r8,QWORD PTR [rax]
   14000eee7:	mov    rdx,r8
   14000eeea:	and    edx,0x1e
   14000eeed:	lea    rcx,[rdx-0x14]
   14000eef1:	test   rcx,0xfffffffffffffffd
   14000eef8:	je     0x14000ef0d
   14000eefa:	cmp    rdx,0x18
   14000eefe:	je     0x14000ef31
   14000ef00:	shr    r8b,1
   14000ef03:	and    r8b,0xf
   14000ef07:	cmp    r8b,0x6
   14000ef0b:	jne    0x14000ef31
   14000ef0d:	cmp    rdx,0xc
   14000ef11:	je     0x14000ef28
   14000ef13:	cmp    rdx,0x16
   14000ef17:	je     0x14000ef28
   14000ef19:	cmp    rdx,0x14
   14000ef1d:	jne    0x14000ef2c
   14000ef1f:	lea    rdi,[rax+0x8]
   14000ef23:	mov    rax,rdi
   14000ef26:	jmp    0x14000ef34
   14000ef28:	mov    rdi,QWORD PTR [rax+0x8]
   14000ef2c:	mov    rax,rdi
   14000ef2f:	jmp    0x14000ef34
   14000ef31:	mov    rax,rbp
   14000ef34:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ef39:	mov    rbp,QWORD PTR [rsp+0x48]
   14000ef3e:	add    rsp,0x20
   14000ef42:	pop    r14
   14000ef44:	pop    rdi
   14000ef45:	pop    rsi
   14000ef46:	ret    
   14000ef47:	int3   
   14000ef48:	int3   
   14000ef49:	int3   
   14000ef4a:	int3   
   14000ef4b:	int3   
   14000ef4c:	int3   
   14000ef4d:	int3   
   14000ef4e:	int3   
   14000ef4f:	int3   
   14000ef50:	mov    r8,QWORD PTR [rcx]
   14000ef53:	mov    r9,rdx
   14000ef56:	and    r8d,0x1e
   14000ef5a:	cmp    r8,0x4
   14000ef5e:	jne    0x14000ef85
   14000ef60:	cmp    BYTE PTR [rcx+0x8],0x0
   14000ef64:	lea    rax,[rip+0x274a1]        # 0x14003640c
   14000ef6b:	lea    r8,[rip+0x274a2]        # 0x140036414
   14000ef72:	mov    rcx,r9
   14000ef75:	cmovne r8,rax
   14000ef79:	lea    rdx,[rip+0x25388]        # 0x140034308
   14000ef80:	jmp    0x14001ae50
   14000ef85:	cmp    r8,0x6
   14000ef89:	jne    0x14000ef9e
   14000ef8b:	mov    r8,QWORD PTR [rcx+0x8]
   14000ef8f:	lea    rdx,[rip+0x2381e]        # 0x1400327b4
   14000ef96:	mov    rcx,r9
   14000ef99:	jmp    0x14001ae50
   14000ef9e:	cmp    r8,0x8
   14000efa2:	jne    0x14000efb7
   14000efa4:	mov    r8,QWORD PTR [rcx+0x8]
   14000efa8:	lea    rdx,[rip+0x2380d]        # 0x1400327bc
   14000efaf:	mov    rcx,r9
   14000efb2:	jmp    0x14001ae50
   14000efb7:	cmp    r8,0xa
   14000efbb:	jne    0x14000efd6
   14000efbd:	movsd  xmm2,QWORD PTR [rcx+0x8]
   14000efc2:	lea    rdx,[rip+0x2756f]        # 0x140036538
   14000efc9:	movq   r8,xmm2
   14000efce:	mov    rcx,r9
   14000efd1:	jmp    0x14001ae50
   14000efd6:	lea    rax,[r8-0xc]
   14000efda:	test   rax,0xfffffffffffffff5
   14000efe0:	jne    0x14000f01c
   14000efe2:	cmp    r8,0xe
   14000efe6:	je     0x14000f01c
   14000efe8:	cmp    r8,0xc
   14000efec:	je     0x14000f010
   14000efee:	cmp    r8,0x16
   14000eff2:	je     0x14000f010
   14000eff4:	cmp    r8,0x14
   14000eff8:	jne    0x14000f006
   14000effa:	lea    rdx,[rcx+0x8]
   14000effe:	mov    rcx,r9
   14000f001:	jmp    0x14001b3a0
   14000f006:	xor    edx,edx
   14000f008:	mov    rcx,r9
   14000f00b:	jmp    0x14001b3a0
   14000f010:	mov    rdx,QWORD PTR [rcx+0x8]
   14000f014:	mov    rcx,r9
   14000f017:	jmp    0x14001b3a0
   14000f01c:	lea    rdx,[rip+0x2377d]        # 0x1400327a0
   14000f023:	mov    rcx,r9
   14000f026:	jmp    0x14001b3a0
   14000f02b:	int3   
   14000f02c:	int3   
   14000f02d:	int3   
   14000f02e:	int3   
   14000f02f:	int3   
   14000f030:	mov    rax,QWORD PTR [rcx]
   14000f033:	and    eax,0x1e
   14000f036:	cmp    rax,0xc
   14000f03a:	je     0x14000f051
   14000f03c:	cmp    rax,0x16
   14000f040:	je     0x14000f051
   14000f042:	cmp    rax,0x14
   14000f046:	jne    0x14000f04d
   14000f048:	lea    rax,[rcx+0x8]
   14000f04c:	ret    
   14000f04d:	mov    rax,rdx
   14000f050:	ret    
   14000f051:	mov    rax,QWORD PTR [rcx+0x8]
   14000f055:	ret    
   14000f056:	int3   
   14000f057:	int3   
   14000f058:	int3   
   14000f059:	int3   
   14000f05a:	int3   
   14000f05b:	int3   
   14000f05c:	int3   
   14000f05d:	int3   
   14000f05e:	int3   
   14000f05f:	int3   
   14000f060:	mov    rdx,QWORD PTR [rcx]
   14000f063:	mov    r8,rdx
   14000f066:	and    r8d,0x1e
   14000f06a:	lea    rax,[r8-0x14]
   14000f06e:	test   rax,0xfffffffffffffff9
   14000f074:	jne    0x14000f07c
   14000f076:	cmp    r8,0x1a
   14000f07a:	jne    0x14000f08b
   14000f07c:	shr    dl,1
   14000f07e:	and    dl,0xf
   14000f081:	cmp    dl,0x9
   14000f084:	jne    0x14000f08b
   14000f086:	mov    rax,QWORD PTR [rcx+0x8]
   14000f08a:	ret    
   14000f08b:	xor    eax,eax
   14000f08d:	ret    
   14000f08e:	int3   
   14000f08f:	int3   
   14000f090:	mov    rax,QWORD PTR [rcx]
   14000f093:	mov    rcx,rax
   14000f096:	and    ecx,0x1e
   14000f099:	cmp    rcx,0x14
   14000f09d:	jne    0x14000f0a2
   14000f09f:	mov    al,0x6
   14000f0a1:	ret    
   14000f0a2:	cmp    rcx,0x16
   14000f0a6:	je     0x14000f09f
   14000f0a8:	cmp    rcx,0x18
   14000f0ac:	jne    0x14000f0b1
   14000f0ae:	mov    al,0x7
   14000f0b0:	ret    
   14000f0b1:	shr    al,1
   14000f0b3:	and    al,0xf
   14000f0b5:	ret    
   14000f0b6:	int3   
   14000f0b7:	int3   
   14000f0b8:	int3   
   14000f0b9:	int3   
   14000f0ba:	int3   
   14000f0bb:	int3   
   14000f0bc:	int3   
   14000f0bd:	int3   
   14000f0be:	int3   
   14000f0bf:	int3   
   14000f0c0:	jmp    0x14000c290
   14000f0c5:	int3   
   14000f0c6:	int3   
   14000f0c7:	int3   
   14000f0c8:	int3   
   14000f0c9:	int3   
   14000f0ca:	int3   
   14000f0cb:	int3   
   14000f0cc:	int3   
   14000f0cd:	int3   
   14000f0ce:	int3   
   14000f0cf:	int3   
   14000f0d0:	rex push rdi
   14000f0d2:	sub    rsp,0x20
   14000f0d6:	mov    eax,edx
   14000f0d8:	mov    rdi,rcx
   14000f0db:	mov    edx,DWORD PTR [rcx+0xc]
   14000f0de:	bt     edx,0x1e
   14000f0e2:	jb     0x14000f1b8
   14000f0e8:	mov    ecx,DWORD PTR [rcx+0x8]
   14000f0eb:	and    edx,0x3fffffff
   14000f0f1:	mov    QWORD PTR [rsp+0x30],rbx
   14000f0f6:	mov    r9d,0x1
   14000f0fc:	mov    QWORD PTR [rsp+0x38],rsi
   14000f101:	lea    esi,[rcx+rax*1]
   14000f104:	mov    r8d,esi
   14000f107:	call   0x14001aa30
   14000f10c:	mov    ebx,eax
   14000f10e:	cmp    eax,esi
   14000f110:	jge    0x14000f12e
   14000f112:	test   eax,eax
   14000f114:	jne    0x14000f120
   14000f116:	cmp    esi,0xffffffff
   14000f119:	jg     0x14000f120
   14000f11b:	or     ebx,0xffffffff
   14000f11e:	jmp    0x14000f12e
   14000f120:	lea    eax,[rbx+rsi*1]
   14000f123:	cdq    
   14000f124:	sub    eax,edx
   14000f126:	sar    eax,1
   14000f128:	mov    ebx,eax
   14000f12a:	cmp    eax,esi
   14000f12c:	jl     0x14000f120
   14000f12e:	test   DWORD PTR [rdi+0xc],0xc0000000
   14000f135:	mov    rax,QWORD PTR [rip+0x23254]        # 0x140032390
   14000f13c:	mov    rcx,QWORD PTR [rax]
   14000f13f:	mov    rax,QWORD PTR [rcx]
   14000f142:	jne    0x14000f184
   14000f144:	mov    rdx,QWORD PTR [rdi]
   14000f147:	test   rdx,rdx
   14000f14a:	je     0x14000f168
   14000f14c:	movsxd r8,ebx
   14000f14f:	call   QWORD PTR [rax+0x18]
   14000f152:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f157:	mov    DWORD PTR [rdi+0x8],ebx
   14000f15a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f15f:	mov    QWORD PTR [rdi],rax
   14000f162:	add    rsp,0x20
   14000f166:	pop    rdi
   14000f167:	ret    
   14000f168:	movsxd rdx,ebx
   14000f16b:	call   QWORD PTR [rax+0x8]
   14000f16e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f173:	mov    DWORD PTR [rdi+0x8],ebx
   14000f176:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f17b:	mov    QWORD PTR [rdi],rax
   14000f17e:	add    rsp,0x20
   14000f182:	pop    rdi
   14000f183:	ret    
   14000f184:	mov    rsi,QWORD PTR [rdi]
   14000f187:	movsxd rdx,ebx
   14000f18a:	call   QWORD PTR [rax+0x8]
   14000f18d:	mov    QWORD PTR [rdi],rax
   14000f190:	test   rsi,rsi
   14000f193:	je     0x14000f1a4
   14000f195:	movsxd r8,DWORD PTR [rdi+0x8]
   14000f199:	mov    rdx,rsi
   14000f19c:	mov    rcx,rax
   14000f19f:	call   0x140026f70
   14000f1a4:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14000f1ab:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f1b0:	mov    DWORD PTR [rdi+0x8],ebx
   14000f1b3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f1b8:	add    rsp,0x20
   14000f1bc:	pop    rdi
   14000f1bd:	ret    
   14000f1be:	int3   
   14000f1bf:	int3   
   14000f1c0:	mov    r8,QWORD PTR [rcx]
   14000f1c3:	movzx  eax,dx
   14000f1c6:	shr    r8,0x5
   14000f1ca:	test   eax,r8d
   14000f1cd:	setne  al
   14000f1d0:	ret    
   14000f1d1:	int3   
   14000f1d2:	int3   
   14000f1d3:	int3   
   14000f1d4:	int3   
   14000f1d5:	int3   
   14000f1d6:	int3   
   14000f1d7:	int3   
   14000f1d8:	int3   
   14000f1d9:	int3   
   14000f1da:	int3   
   14000f1db:	int3   
   14000f1dc:	int3   
   14000f1dd:	int3   
   14000f1de:	int3   
   14000f1df:	int3   
   14000f1e0:	mov    QWORD PTR [rsp+0x18],rbx
   14000f1e5:	mov    QWORD PTR [rsp+0x10],rdx
   14000f1ea:	push   rdi
   14000f1eb:	sub    rsp,0x20
   14000f1ef:	mov    rax,QWORD PTR [rcx+0x18]
   14000f1f3:	or     rbx,0xffffffffffffffff
   14000f1f7:	xor    r8b,r8b
   14000f1fa:	mov    r11,rdx
   14000f1fd:	mov    rdi,rcx
   14000f200:	cmp    rax,rbx
   14000f203:	je     0x14000f27e
   14000f205:	mov    r10,QWORD PTR [rdx]
   14000f208:	mov    QWORD PTR [rsp+0x30],rsi
   14000f20d:	mov    rsi,QWORD PTR [rcx+0x8]
   14000f211:	nop    DWORD PTR [rax+0x0]
   14000f215:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000f220:	mov    rbx,rax
   14000f223:	lea    rax,[rax+rax*4]
   14000f227:	mov    r8,QWORD PTR [rsi+rax*8+0x20]
   14000f22c:	lea    r9,[rsi+rax*8]
   14000f230:	mov    rax,QWORD PTR [r8]
   14000f233:	cmp    r10,rax
   14000f236:	jne    0x14000f25d
   14000f238:	add    r8,0x8
   14000f23c:	lea    rax,[r11+0x8]
   14000f240:	sub    r8,rax
   14000f243:	movzx  edx,BYTE PTR [rax]
   14000f246:	movzx  ecx,BYTE PTR [rax+r8*1]
   14000f24b:	sub    edx,ecx
   14000f24d:	jne    0x14000f256
   14000f24f:	inc    rax
   14000f252:	test   ecx,ecx
   14000f254:	jne    0x14000f243
   14000f256:	test   edx,edx
   14000f258:	sets   al
   14000f25b:	jmp    0x14000f260
   14000f25d:	setb   al
   14000f260:	test   al,al
   14000f262:	je     0x14000f26c
   14000f264:	mov    rax,QWORD PTR [r9]
   14000f267:	mov    r8b,0x1
   14000f26a:	jmp    0x14000f273
   14000f26c:	mov    rax,QWORD PTR [r9+0x8]
   14000f270:	xor    r8b,r8b
   14000f273:	cmp    rax,0xffffffffffffffff
   14000f277:	jne    0x14000f220
   14000f279:	mov    rsi,QWORD PTR [rsp+0x30]
   14000f27e:	lea    r9,[rsp+0x38]
   14000f283:	mov    rdx,rbx
   14000f286:	mov    rcx,rdi
   14000f289:	call   0x14000f2a0
   14000f28e:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f293:	add    rsp,0x20
   14000f297:	pop    rdi
   14000f298:	ret    
   14000f299:	int3   
   14000f29a:	int3   
   14000f29b:	int3   
   14000f29c:	int3   
   14000f29d:	int3   
   14000f29e:	int3   
   14000f29f:	int3   
   14000f2a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000f2aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000f2af:	push   rdi
   14000f2b0:	sub    rsp,0x20
   14000f2b4:	mov    rsi,rdx
   14000f2b7:	movzx  ebp,r8b
   14000f2bb:	mov    rdx,r9
   14000f2be:	mov    rbx,rcx
   14000f2c1:	call   0x1400101a0
   14000f2c6:	mov    r9,QWORD PTR [rbx+0x8]
   14000f2ca:	mov    rdi,rax
   14000f2cd:	lea    r10,[rax+rax*4]
   14000f2d1:	mov    QWORD PTR [r9+r10*8+0x10],rsi
   14000f2d6:	mov    QWORD PTR [r9+r10*8+0x8],0xffffffffffffffff
   14000f2df:	mov    QWORD PTR [r9+r10*8],0xffffffffffffffff
   14000f2e7:	mov    QWORD PTR [r9+r10*8+0x18],0x0
   14000f2f0:	cmp    rsi,0xffffffffffffffff
   14000f2f4:	je     0x14000f310
   14000f2f6:	mov    rax,QWORD PTR [rbx+0x8]
   14000f2fa:	lea    rcx,[rsi+rsi*4]
   14000f2fe:	test   bpl,bpl
   14000f301:	je     0x14000f309
   14000f303:	mov    QWORD PTR [rax+rcx*8],rdi
   14000f307:	jmp    0x14000f314
   14000f309:	mov    QWORD PTR [rax+rcx*8+0x8],rdi
   14000f30e:	jmp    0x14000f314
   14000f310:	mov    QWORD PTR [rbx+0x18],rdi
   14000f314:	mov    rdx,rdi
   14000f317:	mov    rcx,rbx
   14000f31a:	call   0x14000f500
   14000f31f:	inc    QWORD PTR [rbx+0x20]
   14000f323:	mov    rax,rdi
   14000f326:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f32b:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f330:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f335:	add    rsp,0x20
   14000f339:	pop    rdi
   14000f33a:	ret    
   14000f33b:	int3   
   14000f33c:	int3   
   14000f33d:	int3   
   14000f33e:	int3   
   14000f33f:	int3   
   14000f340:	mov    QWORD PTR [rsp+0x10],rsi
   14000f345:	mov    QWORD PTR [rsp+0x18],rdi
   14000f34a:	push   r14
   14000f34c:	sub    rsp,0x20
   14000f350:	movsxd rdi,edx
   14000f353:	mov    esi,r8d
   14000f356:	mov    r14,rcx
   14000f359:	test   r8d,r8d
   14000f35c:	je     0x14000f3a9
   14000f35e:	mov    eax,DWORD PTR [rcx+0x10]
   14000f361:	mov    QWORD PTR [rsp+0x30],rbx
   14000f366:	mov    ebx,DWORD PTR [rcx]
   14000f368:	add    ebx,r8d
   14000f36b:	cmp    ebx,eax
   14000f36d:	jle    0x14000f37c
   14000f36f:	mov    edx,ebx
   14000f371:	add    rcx,0x8
   14000f375:	sub    edx,eax
   14000f377:	call   0x14000f0d0
   14000f37c:	mov    DWORD PTR [r14],ebx
   14000f37f:	sub    ebx,edi
   14000f381:	sub    ebx,esi
   14000f383:	test   ebx,ebx
   14000f385:	jle    0x14000f3a4
   14000f387:	test   esi,esi
   14000f389:	jle    0x14000f3a4
   14000f38b:	lea    eax,[rdi+rsi*1]
   14000f38e:	movsxd r8,ebx
   14000f391:	movsxd rcx,eax
   14000f394:	mov    rdx,rdi
   14000f397:	add    rcx,QWORD PTR [r14+0x8]
   14000f39b:	add    rdx,QWORD PTR [r14+0x8]
   14000f39f:	call   0x140026f70
   14000f3a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f3a9:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f3ae:	mov    eax,edi
   14000f3b0:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f3b5:	add    rsp,0x20
   14000f3b9:	pop    r14
   14000f3bb:	ret    
   14000f3bc:	int3   
   14000f3bd:	int3   
   14000f3be:	int3   
   14000f3bf:	int3   
   14000f3c0:	mov    QWORD PTR [rsp+0x10],rsi
   14000f3c5:	mov    QWORD PTR [rsp+0x18],rdi
   14000f3ca:	push   r14
   14000f3cc:	sub    rsp,0x20
   14000f3d0:	movsxd rdi,edx
   14000f3d3:	mov    esi,r8d
   14000f3d6:	mov    r14,rcx
   14000f3d9:	test   r8d,r8d
   14000f3dc:	je     0x14000f42e
   14000f3de:	mov    eax,DWORD PTR [rcx+0x10]
   14000f3e1:	mov    QWORD PTR [rsp+0x30],rbx
   14000f3e6:	mov    ebx,DWORD PTR [rcx]
   14000f3e8:	add    ebx,r8d
   14000f3eb:	cmp    ebx,eax
   14000f3ed:	jle    0x14000f3fc
   14000f3ef:	mov    edx,ebx
   14000f3f1:	add    rcx,0x8
   14000f3f5:	sub    edx,eax
   14000f3f7:	call   0x140013420
   14000f3fc:	mov    DWORD PTR [r14],ebx
   14000f3ff:	sub    ebx,edi
   14000f401:	sub    ebx,esi
   14000f403:	test   ebx,ebx
   14000f405:	jle    0x14000f429
   14000f407:	test   esi,esi
   14000f409:	jle    0x14000f429
   14000f40b:	mov    r9,QWORD PTR [r14+0x8]
   14000f40f:	lea    eax,[rdi+rsi*1]
   14000f412:	movsxd rcx,eax
   14000f415:	movsxd r8,ebx
   14000f418:	shl    r8,0x3
   14000f41c:	lea    rdx,[r9+rdi*8]
   14000f420:	lea    rcx,[r9+rcx*8]
   14000f424:	call   0x140026f70
   14000f429:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f42e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f433:	mov    eax,edi
   14000f435:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f43a:	add    rsp,0x20
   14000f43e:	pop    r14
   14000f440:	ret    
   14000f441:	int3   
   14000f442:	int3   
   14000f443:	int3   
   14000f444:	int3   
   14000f445:	int3   
   14000f446:	int3   
   14000f447:	int3   
   14000f448:	int3   
   14000f449:	int3   
   14000f44a:	int3   
   14000f44b:	int3   
   14000f44c:	int3   
   14000f44d:	int3   
   14000f44e:	int3   
   14000f44f:	int3   
   14000f450:	mov    QWORD PTR [rsp+0x10],rsi
   14000f455:	mov    QWORD PTR [rsp+0x18],rdi
   14000f45a:	push   r14
   14000f45c:	sub    rsp,0x20
   14000f460:	movsxd rsi,r8d
   14000f463:	mov    rdi,rcx
   14000f466:	movsxd r14,edx
   14000f469:	test   r8d,r8d
   14000f46c:	je     0x14000f4e6
   14000f46e:	mov    eax,DWORD PTR [rcx+0x10]
   14000f471:	mov    QWORD PTR [rsp+0x30],rbx
   14000f476:	mov    ebx,DWORD PTR [rcx]
   14000f478:	add    ebx,esi
   14000f47a:	cmp    ebx,eax
   14000f47c:	jle    0x14000f48b
   14000f47e:	mov    edx,ebx
   14000f480:	add    rcx,0x8
   14000f484:	sub    edx,eax
   14000f486:	call   0x1400031e0
   14000f48b:	mov    DWORD PTR [rdi],ebx
   14000f48d:	sub    ebx,r14d
   14000f490:	sub    ebx,esi
   14000f492:	test   ebx,ebx
   14000f494:	jle    0x14000f4b9
   14000f496:	test   esi,esi
   14000f498:	jle    0x14000f4b9
   14000f49a:	mov    r9,QWORD PTR [rdi+0x8]
   14000f49e:	lea    eax,[r14+rsi*1]
   14000f4a2:	movsxd rcx,eax
   14000f4a5:	movsxd r8,ebx
   14000f4a8:	shl    r8,0x2
   14000f4ac:	lea    rdx,[r9+r14*4]
   14000f4b0:	lea    rcx,[r9+rcx*4]
   14000f4b4:	call   0x140026f70
   14000f4b9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f4be:	mov    r8,rsi
   14000f4c1:	test   esi,esi
   14000f4c3:	jle    0x14000f4e6
   14000f4c5:	lea    rcx,[r14*4+0x0]
   14000f4cd:	xor    r9d,r9d
   14000f4d0:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f4d4:	add    rdx,rcx
   14000f4d7:	je     0x14000f4dc
   14000f4d9:	mov    DWORD PTR [rdx],r9d
   14000f4dc:	add    rcx,0x4
   14000f4e0:	sub    r8,0x1
   14000f4e4:	jne    0x14000f4d0
   14000f4e6:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f4eb:	mov    eax,r14d
   14000f4ee:	mov    rdi,QWORD PTR [rsp+0x40]
   14000f4f3:	add    rsp,0x20
   14000f4f7:	pop    r14
   14000f4f9:	ret    
   14000f4fa:	int3   
   14000f4fb:	int3   
   14000f4fc:	int3   
   14000f4fd:	int3   
   14000f4fe:	int3   
   14000f4ff:	int3   
   14000f500:	mov    QWORD PTR [rsp+0x18],rsi
   14000f505:	push   rdi
   14000f506:	sub    rsp,0x20
   14000f50a:	mov    rsi,rdx
   14000f50d:	mov    rdi,rcx
   14000f510:	cmp    rdx,QWORD PTR [rcx+0x18]
   14000f514:	je     0x14000f71c
   14000f51a:	mov    QWORD PTR [rsp+0x38],rbp
   14000f51f:	xor    ebp,ebp
   14000f521:	mov    QWORD PTR [rsp+0x30],rbx
   14000f526:	cmp    rsi,0xffffffffffffffff
   14000f52a:	je     0x14000f712
   14000f530:	mov    rcx,QWORD PTR [rdi+0x8]
   14000f534:	lea    rbx,[rsi+rsi*4]
   14000f538:	mov    rbx,QWORD PTR [rcx+rbx*8+0x10]
   14000f53d:	cmp    rbx,0xffffffffffffffff
   14000f541:	je     0x14000f712
   14000f547:	lea    rax,[rbx+rbx*4]
   14000f54b:	cmp    DWORD PTR [rcx+rax*8+0x18],ebp
   14000f54f:	jne    0x14000f712
   14000f555:	cmp    rbx,0xffffffffffffffff
   14000f559:	je     0x14000f574
   14000f55b:	lea    rax,[rbx+rbx*4]
   14000f55f:	mov    rdx,QWORD PTR [rcx+rax*8+0x10]
   14000f564:	cmp    rdx,0xffffffffffffffff
   14000f568:	je     0x14000f578
   14000f56a:	lea    rax,[rdx+rdx*4]
   14000f56e:	mov    r8,QWORD PTR [rcx+rax*8]
   14000f572:	jmp    0x14000f57c
   14000f574:	or     rdx,0xffffffffffffffff
   14000f578:	or     r8,0xffffffffffffffff
   14000f57c:	cmp    r8,rbx
   14000f57f:	jne    0x14000f638
   14000f585:	cmp    rdx,0xffffffffffffffff
   14000f589:	je     0x14000f5b9
   14000f58b:	lea    rax,[rdx+rdx*4]
   14000f58f:	lea    r8,[rax*8+0x0]
   14000f597:	mov    rax,QWORD PTR [r8+rcx*1+0x8]
   14000f59c:	cmp    rax,0xffffffffffffffff
   14000f5a0:	je     0x14000f5b9
   14000f5a2:	lea    rax,[rax+rax*4]
   14000f5a6:	lea    r9,[rax*8+0x0]
   14000f5ae:	cmp    DWORD PTR [r9+rcx*1+0x18],ebp
   14000f5b3:	je     0x14000f667
   14000f5b9:	cmp    rbx,0xffffffffffffffff
   14000f5bd:	je     0x14000f5ca
   14000f5bf:	lea    rax,[rbx+rbx*4]
   14000f5c3:	mov    r8,QWORD PTR [rcx+rax*8+0x8]
   14000f5c8:	jmp    0x14000f5ce
   14000f5ca:	or     r8,0xffffffffffffffff
   14000f5ce:	cmp    r8,rsi
   14000f5d1:	jne    0x14000f60d
   14000f5d3:	mov    rdx,rbx
   14000f5d6:	mov    rcx,rdi
   14000f5d9:	mov    rsi,rbx
   14000f5dc:	call   0x140011180
   14000f5e1:	cmp    rbx,0xffffffffffffffff
   14000f5e5:	je     0x14000f605
   14000f5e7:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f5eb:	lea    rax,[rbx+rbx*4]
   14000f5ef:	mov    rbx,QWORD PTR [rdx+rax*8+0x10]
   14000f5f4:	cmp    rbx,0xffffffffffffffff
   14000f5f8:	je     0x14000f609
   14000f5fa:	lea    rax,[rbx+rbx*4]
   14000f5fe:	mov    rdx,QWORD PTR [rdx+rax*8+0x10]
   14000f603:	jmp    0x14000f60d
   14000f605:	or     rbx,0xffffffffffffffff
   14000f609:	or     rdx,0xffffffffffffffff
   14000f60d:	mov    rax,QWORD PTR [rdi+0x8]
   14000f611:	lea    rcx,[rbx+rbx*4]
   14000f615:	mov    QWORD PTR [rax+rcx*8+0x18],0x1
   14000f61e:	lea    rcx,[rdx+rdx*4]
   14000f622:	mov    rax,QWORD PTR [rdi+0x8]
   14000f626:	mov    QWORD PTR [rax+rcx*8+0x18],rbp
   14000f62b:	mov    rcx,rdi
   14000f62e:	call   0x1400112b0
   14000f633:	jmp    0x14000f708
   14000f638:	cmp    rdx,0xffffffffffffffff
   14000f63c:	je     0x14000f68f
   14000f63e:	lea    rax,[rdx+rdx*4]
   14000f642:	lea    r8,[rax*8+0x0]
   14000f64a:	mov    rax,QWORD PTR [r8+rcx*1]
   14000f64e:	cmp    rax,0xffffffffffffffff
   14000f652:	je     0x14000f68f
   14000f654:	lea    rax,[rax+rax*4]
   14000f658:	lea    r9,[rax*8+0x0]
   14000f660:	cmp    DWORD PTR [r9+rcx*1+0x18],ebp
   14000f665:	jne    0x14000f68f
   14000f667:	lea    rax,[rbx+rbx*4]
   14000f66b:	mov    rsi,rdx
   14000f66e:	mov    QWORD PTR [rcx+rax*8+0x18],0x1
   14000f677:	mov    rax,QWORD PTR [rdi+0x8]
   14000f67b:	mov    QWORD PTR [r9+rax*1+0x18],0x1
   14000f684:	mov    rax,QWORD PTR [rdi+0x8]
   14000f688:	mov    QWORD PTR [r8+rax*1+0x18],rbp
   14000f68d:	jmp    0x14000f708
   14000f68f:	cmp    rbx,0xffffffffffffffff
   14000f693:	je     0x14000f69f
   14000f695:	lea    rax,[rbx+rbx*4]
   14000f699:	mov    r8,QWORD PTR [rcx+rax*8]
   14000f69d:	jmp    0x14000f6a3
   14000f69f:	or     r8,0xffffffffffffffff
   14000f6a3:	cmp    r8,rsi
   14000f6a6:	jne    0x14000f6e2
   14000f6a8:	mov    rdx,rbx
   14000f6ab:	mov    rcx,rdi
   14000f6ae:	mov    rsi,rbx
   14000f6b1:	call   0x1400112b0
   14000f6b6:	cmp    rbx,0xffffffffffffffff
   14000f6ba:	je     0x14000f6da
   14000f6bc:	mov    rdx,QWORD PTR [rdi+0x8]
   14000f6c0:	lea    rax,[rbx+rbx*4]
   14000f6c4:	mov    rbx,QWORD PTR [rdx+rax*8+0x10]
   14000f6c9:	cmp    rbx,0xffffffffffffffff
   14000f6cd:	je     0x14000f6de
   14000f6cf:	lea    rax,[rbx+rbx*4]
   14000f6d3:	mov    rdx,QWORD PTR [rdx+rax*8+0x10]
   14000f6d8:	jmp    0x14000f6e2
   14000f6da:	or     rbx,0xffffffffffffffff
   14000f6de:	or     rdx,0xffffffffffffffff
   14000f6e2:	mov    rax,QWORD PTR [rdi+0x8]
   14000f6e6:	lea    rcx,[rbx+rbx*4]
   14000f6ea:	mov    QWORD PTR [rax+rcx*8+0x18],0x1
   14000f6f3:	lea    rcx,[rdx+rdx*4]
   14000f6f7:	mov    rax,QWORD PTR [rdi+0x8]
   14000f6fb:	mov    QWORD PTR [rax+rcx*8+0x18],rbp
   14000f700:	mov    rcx,rdi
   14000f703:	call   0x140011180
   14000f708:	cmp    rsi,QWORD PTR [rdi+0x18]
   14000f70c:	jne    0x14000f526
   14000f712:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f717:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f71c:	mov    rax,QWORD PTR [rdi+0x18]
   14000f720:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f725:	lea    rcx,[rax+rax*4]
   14000f729:	mov    rax,QWORD PTR [rdi+0x8]
   14000f72d:	mov    QWORD PTR [rax+rcx*8+0x18],0x1
   14000f736:	add    rsp,0x20
   14000f73a:	pop    rdi
   14000f73b:	ret    
   14000f73c:	int3   
   14000f73d:	int3   
   14000f73e:	int3   
   14000f73f:	int3   
   14000f740:	mov    QWORD PTR [rsp+0x8],rbx
   14000f745:	mov    QWORD PTR [rsp+0x10],rsi
   14000f74a:	push   rdi
   14000f74b:	sub    rsp,0x20
   14000f74f:	mov    rsi,rdx
   14000f752:	movsxd rdi,r8d
   14000f755:	mov    dl,0xc
   14000f757:	mov    rbx,rcx
   14000f75a:	call   0x14000faa0
   14000f75f:	test   edi,edi
   14000f761:	jne    0x14000f77b
   14000f763:	mov    QWORD PTR [rbx+0x8],0x0
   14000f76b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f770:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f775:	add    rsp,0x20
   14000f779:	pop    rdi
   14000f77a:	ret    
   14000f77b:	mov    rax,QWORD PTR [rip+0x22c0e]        # 0x140032390
   14000f782:	mov    edx,0x10
   14000f787:	mov    rcx,QWORD PTR [rax]
   14000f78a:	mov    rax,QWORD PTR [rcx]
   14000f78d:	call   QWORD PTR [rax+0x8]
   14000f790:	mov    QWORD PTR [rax+0x8],rsi
   14000f794:	mov    rsi,QWORD PTR [rsp+0x38]
   14000f799:	mov    QWORD PTR [rax],rdi
   14000f79c:	mov    QWORD PTR [rbx+0x8],rax
   14000f7a0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7a5:	add    rsp,0x20
   14000f7a9:	pop    rdi
   14000f7aa:	ret    
   14000f7ab:	int3   
   14000f7ac:	int3   
   14000f7ad:	int3   
   14000f7ae:	int3   
   14000f7af:	int3   
   14000f7b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f7b5:	push   rdi
   14000f7b6:	sub    rsp,0x20
   14000f7ba:	mov    rbx,rdx
   14000f7bd:	mov    rdi,rcx
   14000f7c0:	or     rax,0xffffffffffffffff
   14000f7c4:	inc    rax
   14000f7c7:	cmp    BYTE PTR [rdx+rax*1],0x0
   14000f7cb:	jne    0x14000f7c4
   14000f7cd:	cmp    eax,0x7
   14000f7d0:	jg     0x14000f7f7
   14000f7d2:	mov    dl,0xa
   14000f7d4:	call   0x14000faa0
   14000f7d9:	lea    rcx,[rdi+0x8]
   14000f7dd:	mov    r8d,0x8
   14000f7e3:	mov    rdx,rbx
   14000f7e6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f7eb:	add    rsp,0x20
   14000f7ef:	pop    rdi
   14000f7f0:	rex.W jmp QWORD PTR [rip+0x22d61]        # 0x140032558
   14000f7f7:	mov    dl,0xb
   14000f7f9:	call   0x14000faa0
   14000f7fe:	mov    QWORD PTR [rdi+0x8],rbx
   14000f802:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f807:	add    rsp,0x20
   14000f80b:	pop    rdi
   14000f80c:	ret    
   14000f80d:	int3   
   14000f80e:	int3   
   14000f80f:	int3   
   14000f810:	mov    QWORD PTR [rsp+0x8],rbx
   14000f815:	mov    r9,QWORD PTR [rcx]
   14000f818:	mov    rbx,rcx
   14000f81b:	mov    r8,r9
   14000f81e:	and    r8d,0x1e
   14000f822:	lea    rax,[r8-0x14]
   14000f826:	test   rax,0xfffffffffffffff9
   14000f82c:	jne    0x14000f834
   14000f82e:	cmp    r8,0x1a
   14000f832:	jne    0x14000f879
   14000f834:	shr    r9b,1
   14000f837:	and    r9b,0xf
   14000f83b:	cmp    r9b,0x9
   14000f83f:	jne    0x14000f879
   14000f841:	xor    r10d,r10d
   14000f844:	cmp    r9b,r9b
   14000f847:	jne    0x14000f84f
   14000f849:	mov    rax,QWORD PTR [rcx+0x8]
   14000f84d:	jmp    0x14000f852
   14000f84f:	mov    rax,r10
   14000f852:	movsxd rcx,DWORD PTR [rax]
   14000f855:	mov    r8d,r10d
   14000f858:	test   ecx,ecx
   14000f85a:	jle    0x14000f879
   14000f85c:	mov    rax,QWORD PTR [rax+0x8]
   14000f860:	mov    r11,rcx
   14000f863:	mov    rcx,r10
   14000f866:	cmp    edx,DWORD PTR [rax]
   14000f868:	je     0x14000f881
   14000f86a:	inc    r8d
   14000f86d:	inc    rcx
   14000f870:	add    rax,0x4
   14000f874:	cmp    rcx,r11
   14000f877:	jl     0x14000f866
   14000f879:	xor    eax,eax
   14000f87b:	mov    rbx,QWORD PTR [rsp+0x8]
   14000f880:	ret    
   14000f881:	cmp    r8d,0xffffffff
   14000f885:	je     0x14000f879
   14000f887:	cmp    r9b,0x9
   14000f88b:	jne    0x14000f891
   14000f88d:	mov    r10,QWORD PTR [rbx+0x8]
   14000f891:	mov    rax,QWORD PTR [r10+0x98]
   14000f898:	mov    rbx,QWORD PTR [rsp+0x8]
   14000f89d:	movsxd rcx,r8d
   14000f8a0:	mov    rax,QWORD PTR [rax+rcx*8]
   14000f8a4:	ret    
   14000f8a5:	int3   
   14000f8a6:	int3   
   14000f8a7:	int3   
   14000f8a8:	int3   
   14000f8a9:	int3   
   14000f8aa:	int3   
   14000f8ab:	int3   
   14000f8ac:	int3   
   14000f8ad:	int3   
   14000f8ae:	int3   
   14000f8af:	int3   
   14000f8b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000f8b5:	mov    QWORD PTR [rsp+0x10],rbp
   14000f8ba:	mov    QWORD PTR [rsp+0x20],rsi
   14000f8bf:	mov    DWORD PTR [rsp+0x18],r8d
   14000f8c4:	push   rdi
   14000f8c5:	sub    rsp,0x30
   14000f8c9:	mov    rdi,rcx
   14000f8cc:	mov    ebx,r8d
   14000f8cf:	mov    r8,QWORD PTR [rcx]
   14000f8d2:	mov    rbp,rdx
   14000f8d5:	mov    rcx,r8
   14000f8d8:	and    ecx,0x1e
   14000f8db:	lea    rax,[rcx-0x14]
   14000f8df:	test   rax,0xfffffffffffffff9
   14000f8e5:	jne    0x14000f8ed
   14000f8e7:	cmp    rcx,0x1a
   14000f8eb:	jne    0x14000f8fa
   14000f8ed:	shr    r8b,1
   14000f8f0:	and    r8b,0xf
   14000f8f4:	cmp    r8b,0x9
   14000f8f8:	je     0x14000f908
   14000f8fa:	mov    dl,0x9
   14000f8fc:	mov    rcx,rdi
   14000f8ff:	call   0x14000faa0
   14000f904:	mov    ebx,DWORD PTR [rsp+0x50]
   14000f908:	xor    esi,esi
   14000f90a:	test   ebx,ebx
   14000f90c:	jne    0x14000f947
   14000f90e:	mov    ebx,esi
   14000f910:	test   rbp,rbp
   14000f913:	je     0x14000f943
   14000f915:	cmp    BYTE PTR [rbp+0x0],bl
   14000f918:	je     0x14000f943
   14000f91a:	mov    edx,0x31415926
   14000f91f:	mov    rcx,rbp
   14000f922:	call   0x140022790
   14000f927:	cmp    BYTE PTR [rip+0x3893a],sil        # 0x140048268
   14000f92e:	mov    ebx,eax
   14000f930:	je     0x14000f943
   14000f932:	mov    r9b,0x1
   14000f935:	xor    r8d,r8d
   14000f938:	mov    rdx,rbp
   14000f93b:	mov    ecx,eax
   14000f93d:	call   QWORD PTR [rip+0x22c7d]        # 0x1400325c0
   14000f943:	mov    DWORD PTR [rsp+0x50],ebx
   14000f947:	mov    rcx,QWORD PTR [rdi]
   14000f94a:	mov    rdx,rcx
   14000f94d:	and    edx,0x1e
   14000f950:	lea    rax,[rdx-0x14]
   14000f954:	test   rax,0xfffffffffffffff9
   14000f95a:	jne    0x14000f962
   14000f95c:	cmp    rdx,0x1a
   14000f960:	jne    0x14000f972
   14000f962:	shr    cl,1
   14000f964:	and    cl,0xf
   14000f967:	cmp    cl,0x9
   14000f96a:	jne    0x14000f972
   14000f96c:	mov    rcx,QWORD PTR [rdi+0x8]
   14000f970:	jmp    0x14000f975
   14000f972:	mov    rcx,rsi
   14000f975:	mov    r9,rbp
   14000f978:	mov    BYTE PTR [rsp+0x20],0x1
   14000f97d:	mov    r8d,ebx
   14000f980:	mov    rdx,rdi
   14000f983:	call   0x14000e3a0
   14000f988:	mov    rdx,QWORD PTR [rdi]
   14000f98b:	mov    r8,rdx
   14000f98e:	and    r8d,0x1e
   14000f992:	lea    rcx,[r8-0x14]
   14000f996:	test   rcx,0xfffffffffffffff9
   14000f99d:	jne    0x14000f9a5
   14000f99f:	cmp    r8,0x1a
   14000f9a3:	jne    0x14000f9b3
   14000f9a5:	shr    dl,1
   14000f9a7:	and    dl,0xf
   14000f9aa:	cmp    dl,0x9
   14000f9ad:	jne    0x14000f9b3
   14000f9af:	mov    rsi,QWORD PTR [rdi+0x8]
   14000f9b3:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f9b8:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f9bd:	movsxd rcx,eax
   14000f9c0:	mov    rax,QWORD PTR [rsi+0x98]
   14000f9c7:	mov    rsi,QWORD PTR [rsp+0x58]
   14000f9cc:	mov    rax,QWORD PTR [rax+rcx*8]
   14000f9d0:	add    rsp,0x30
   14000f9d4:	pop    rdi
   14000f9d5:	ret    
   14000f9d6:	int3   
   14000f9d7:	int3   
   14000f9d8:	int3   
   14000f9d9:	int3   
   14000f9da:	int3   
   14000f9db:	int3   
   14000f9dc:	int3   
   14000f9dd:	int3   
   14000f9de:	int3   
   14000f9df:	int3   
   14000f9e0:	rex push rbx
   14000f9e2:	sub    rsp,0x20
   14000f9e6:	mov    eax,DWORD PTR [rcx]
   14000f9e8:	mov    rbx,rcx
   14000f9eb:	shr    rax,1
   14000f9ee:	and    eax,0xf
   14000f9f1:	sub    rax,0x6
   14000f9f5:	je     0x14000fa72
   14000f9f7:	sub    rax,0x1
   14000f9fb:	je     0x14000fa0f
   14000f9fd:	sub    rax,0x1
   14000fa01:	je     0x14000fa5b
   14000fa03:	sub    rax,0x1
   14000fa07:	je     0x14000fa1a
   14000fa09:	cmp    rax,0x3
   14000fa0d:	jne    0x14000fa8e
   14000fa0f:	mov    rdx,QWORD PTR [rcx+0x8]
   14000fa13:	test   rdx,rdx
   14000fa16:	je     0x14000fa86
   14000fa18:	jmp    0x14000fa76
   14000fa1a:	mov    QWORD PTR [rsp+0x30],rdi
   14000fa1f:	mov    rdi,QWORD PTR [rcx+0x8]
   14000fa23:	test   rdi,rdi
   14000fa26:	je     0x14000fa48
   14000fa28:	mov    rdx,rbx
   14000fa2b:	mov    rcx,rdi
   14000fa2e:	call   0x14000e5e0
   14000fa33:	mov    rcx,rdi
   14000fa36:	call   0x14000c880
   14000fa3b:	mov    edx,0x108
   14000fa40:	mov    rcx,rdi
   14000fa43:	call   0x14002639c
   14000fa48:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fa4d:	mov    QWORD PTR [rbx+0x8],0x0
   14000fa55:	add    rsp,0x20
   14000fa59:	pop    rbx
   14000fa5a:	ret    
   14000fa5b:	mov    rdx,QWORD PTR [rcx+0x8]
   14000fa5f:	call   0x14000e6b0
   14000fa64:	mov    QWORD PTR [rbx+0x8],0x0
   14000fa6c:	add    rsp,0x20
   14000fa70:	pop    rbx
   14000fa71:	ret    
   14000fa72:	mov    rdx,QWORD PTR [rbx+0x8]
   14000fa76:	mov    rax,QWORD PTR [rip+0x22913]        # 0x140032390
   14000fa7d:	mov    rcx,QWORD PTR [rax]
   14000fa80:	mov    rax,QWORD PTR [rcx]
   14000fa83:	call   QWORD PTR [rax+0x28]
   14000fa86:	mov    QWORD PTR [rbx+0x8],0x0
   14000fa8e:	add    rsp,0x20
   14000fa92:	pop    rbx
   14000fa93:	ret    
   14000fa94:	int3   
   14000fa95:	int3   
   14000fa96:	int3   
   14000fa97:	int3   
   14000fa98:	int3   
   14000fa99:	int3   
   14000fa9a:	int3   
   14000fa9b:	int3   
   14000fa9c:	int3   
   14000fa9d:	int3   
   14000fa9e:	int3   
   14000fa9f:	int3   
   14000faa0:	mov    QWORD PTR [rsp+0x10],rbx
   14000faa5:	push   rsi
   14000faa6:	sub    rsp,0x20
   14000faaa:	mov    rbx,rcx
   14000faad:	movzx  esi,dl
   14000fab0:	mov    rcx,QWORD PTR [rcx]
   14000fab3:	movzx  eax,cl
   14000fab6:	shr    al,1
   14000fab8:	and    al,0xf
   14000faba:	cmp    dl,al
   14000fabc:	jne    0x14000faee
   14000fabe:	and    cl,0x1e
   14000fac1:	cmp    cl,0x12
   14000fac4:	jne    0x14000fadc
   14000fac6:	mov    rcx,QWORD PTR [rbx+0x8]
   14000faca:	mov    rdx,rbx
   14000facd:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fad2:	add    rsp,0x20
   14000fad6:	pop    rsi
   14000fad7:	jmp    0x14000d5b0
   14000fadc:	mov    rcx,rbx
   14000fadf:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fae4:	add    rsp,0x20
   14000fae8:	pop    rsi
   14000fae9:	jmp    0x14000f9e0
   14000faee:	mov    rcx,rbx
   14000faf1:	mov    QWORD PTR [rsp+0x30],rdi
   14000faf6:	call   0x14000f9e0
   14000fafb:	and    QWORD PTR [rbx],0xffffffffffffffe1
   14000faff:	xor    edi,edi
   14000fb01:	movzx  eax,sil
   14000fb05:	and    eax,0xf
   14000fb08:	mov    QWORD PTR [rbx+0x8],rdi
   14000fb0c:	add    rax,rax
   14000fb0f:	or     QWORD PTR [rbx],rax
   14000fb12:	mov    rax,QWORD PTR [rbx]
   14000fb15:	and    al,0x1e
   14000fb17:	cmp    al,0x12
   14000fb19:	jne    0x14000fb39
   14000fb1b:	mov    ecx,0x108
   14000fb20:	call   0x140007bf0
   14000fb25:	test   rax,rax
   14000fb28:	je     0x14000fb35
   14000fb2a:	mov    rcx,rax
   14000fb2d:	call   0x14000c5e0
   14000fb32:	mov    rdi,rax
   14000fb35:	mov    QWORD PTR [rbx+0x8],rdi
   14000fb39:	mov    rdi,QWORD PTR [rsp+0x30]
   14000fb3e:	mov    rbx,QWORD PTR [rsp+0x38]
   14000fb43:	add    rsp,0x20
   14000fb47:	pop    rsi
   14000fb48:	ret    
   14000fb49:	int3   
   14000fb4a:	int3   
   14000fb4b:	int3   
   14000fb4c:	int3   
   14000fb4d:	int3   
   14000fb4e:	int3   
   14000fb4f:	int3   
   14000fb50:	mov    QWORD PTR [rsp+0x18],rsi
   14000fb55:	mov    QWORD PTR [rsp+0x20],rdi
   14000fb5a:	push   r14
   14000fb5c:	sub    rsp,0x20
   14000fb60:	movsxd rax,DWORD PTR [rcx]
   14000fb63:	movzx  r14d,r8b
   14000fb67:	mov    rdi,rdx
   14000fb6a:	mov    rsi,rcx
   14000fb6d:	test   rdx,rdx
   14000fb70:	je     0x14000fc1a
   14000fb76:	cmp    eax,DWORD PTR [rdx]
   14000fb78:	jne    0x14000fc1a
   14000fb7e:	mov    QWORD PTR [rsp+0x30],rbx
   14000fb83:	mov    QWORD PTR [rsp+0x38],rbp
   14000fb88:	test   eax,eax
   14000fb8a:	jle    0x14000fc16
   14000fb90:	mov    rbp,rax
   14000fb93:	xor    ebx,ebx
   14000fb95:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14000fba0:	mov    rax,QWORD PTR [rsi+0x8]
   14000fba4:	xor    ecx,ecx
   14000fba6:	movsxd r8,DWORD PTR [rdi]
   14000fba9:	mov    eax,DWORD PTR [rax+rbx*4]
   14000fbac:	test   r8d,r8d
   14000fbaf:	jle    0x14000fbc5
   14000fbb1:	mov    rdx,QWORD PTR [rdi+0x8]
   14000fbb5:	cmp    eax,DWORD PTR [rdx]
   14000fbb7:	je     0x14000fbe2
   14000fbb9:	inc    rcx
   14000fbbc:	add    rdx,0x4
   14000fbc0:	cmp    rcx,r8
   14000fbc3:	jl     0x14000fbb5
   14000fbc5:	xor    al,al
   14000fbc7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fbcc:	mov    rbp,QWORD PTR [rsp+0x38]
   14000fbd1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fbd6:	mov    rdi,QWORD PTR [rsp+0x48]
   14000fbdb:	add    rsp,0x20
   14000fbdf:	pop    r14
   14000fbe1:	ret    
   14000fbe2:	cmp    rcx,0xffffffffffffffff
   14000fbe6:	je     0x14000fbc5
   14000fbe8:	mov    rax,QWORD PTR [rdi+0x98]
   14000fbef:	movzx  r8d,r14b
   14000fbf3:	lea    rdx,[rax+rcx*8]
   14000fbf7:	mov    rax,QWORD PTR [rsi+0x98]
   14000fbfe:	mov    rdx,QWORD PTR [rdx]
   14000fc01:	mov    rcx,QWORD PTR [rax+rbx*8]
   14000fc05:	call   0x14000fc30
   14000fc0a:	test   al,al
   14000fc0c:	je     0x14000fbc5
   14000fc0e:	inc    rbx
   14000fc11:	cmp    rbx,rbp
   14000fc14:	jl     0x14000fba0
   14000fc16:	mov    al,0x1
   14000fc18:	jmp    0x14000fbc7
   14000fc1a:	mov    rsi,QWORD PTR [rsp+0x40]
   14000fc1f:	xor    al,al
   14000fc21:	mov    rdi,QWORD PTR [rsp+0x48]
   14000fc26:	add    rsp,0x20
   14000fc2a:	pop    r14
   14000fc2c:	ret    
   14000fc2d:	int3   
   14000fc2e:	int3   
   14000fc2f:	int3   
   14000fc30:	mov    BYTE PTR [rsp+0x18],r8b
   14000fc35:	push   rbp
   14000fc36:	push   rsi
   14000fc37:	push   rdi
   14000fc38:	sub    rsp,0x20
   14000fc3c:	mov    r10,QWORD PTR [rcx]
   14000fc3f:	movzx  edi,r8b
   14000fc43:	mov    r9,r10
   14000fc46:	mov    rsi,rdx
   14000fc49:	and    r9d,0x1e
   14000fc4d:	mov    rbp,rcx
   14000fc50:	cmp    r9,0x14
   14000fc54:	jne    0x14000fc5a
   14000fc56:	mov    al,0x6
   14000fc58:	jmp    0x14000fc76
   14000fc5a:	cmp    r9,0x16
   14000fc5e:	jne    0x14000fc64
   14000fc60:	mov    al,0x6
   14000fc62:	jmp    0x14000fc76
   14000fc64:	cmp    r9,0x18
   14000fc68:	jne    0x14000fc6e
   14000fc6a:	mov    al,0x7
   14000fc6c:	jmp    0x14000fc76
   14000fc6e:	movzx  eax,r10b
   14000fc72:	shr    al,1
   14000fc74:	and    al,0xf
   14000fc76:	mov    rcx,QWORD PTR [rdx]
   14000fc79:	mov    rdx,rcx
   14000fc7c:	and    edx,0x1e
   14000fc7f:	cmp    rdx,0x14
   14000fc83:	jne    0x14000fc8a
   14000fc85:	mov    r8b,0x6
   14000fc88:	jmp    0x14000fcab
   14000fc8a:	cmp    rdx,0x16
   14000fc8e:	jne    0x14000fc95
   14000fc90:	mov    r8b,0x6
   14000fc93:	jmp    0x14000fcab
   14000fc95:	cmp    rdx,0x18
   14000fc99:	jne    0x14000fca0
   14000fc9b:	mov    r8b,0x7
   14000fc9e:	jmp    0x14000fcab
   14000fca0:	movzx  r8d,cl
   14000fca4:	shr    r8b,1
   14000fca7:	and    r8b,0xf
   14000fcab:	cmp    al,r8b
   14000fcae:	je     0x14000fcba
   14000fcb0:	xor    al,al
   14000fcb2:	add    rsp,0x20
   14000fcb6:	pop    rdi
   14000fcb7:	pop    rsi
   14000fcb8:	pop    rbp
   14000fcb9:	ret    
   14000fcba:	mov    rax,rcx
   14000fcbd:	xor    rax,r10
   14000fcc0:	test   rax,0x1fffe0
   14000fcc6:	jne    0x14000fcb0
   14000fcc8:	cmp    rdx,0x14
   14000fccc:	jne    0x14000fcd2
   14000fcce:	mov    cl,0x6
   14000fcd0:	jmp    0x14000fceb
   14000fcd2:	cmp    rdx,0x16
   14000fcd6:	jne    0x14000fcdc
   14000fcd8:	mov    cl,0x6
   14000fcda:	jmp    0x14000fceb
   14000fcdc:	cmp    rdx,0x18
   14000fce0:	jne    0x14000fce6
   14000fce2:	mov    cl,0x7
   14000fce4:	jmp    0x14000fceb
   14000fce6:	shr    cl,1
   14000fce8:	and    cl,0xf
   14000fceb:	movzx  eax,cl
   14000fcee:	dec    eax
   14000fcf0:	mov    QWORD PTR [rsp+0x48],rbx
   14000fcf5:	cmp    eax,0x8
   14000fcf8:	ja     0x14000fec1
   14000fcfe:	lea    r8,[rip+0xffffffffffff02fb]        # 0x140000000
   14000fd05:	cdqe   
   14000fd07:	mov    ecx,DWORD PTR [r8+rax*4+0xfed0]
   14000fd0f:	add    rcx,r8
   14000fd12:	jmp    rcx
   14000fd14:	movzx  eax,BYTE PTR [rsi+0x8]
   14000fd18:	cmp    BYTE PTR [rbp+0x8],al
   14000fd1b:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd20:	sete   al
   14000fd23:	add    rsp,0x20
   14000fd27:	pop    rdi
   14000fd28:	pop    rsi
   14000fd29:	pop    rbp
   14000fd2a:	ret    
   14000fd2b:	mov    rax,QWORD PTR [rsi+0x8]
   14000fd2f:	cmp    QWORD PTR [rbp+0x8],rax
   14000fd33:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd38:	sete   al
   14000fd3b:	add    rsp,0x20
   14000fd3f:	pop    rdi
   14000fd40:	pop    rsi
   14000fd41:	pop    rbp
   14000fd42:	ret    
   14000fd43:	movsd  xmm0,QWORD PTR [rbp+0x8]
   14000fd48:	subsd  xmm0,QWORD PTR [rsi+0x8]
   14000fd4d:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fd52:	andps  xmm0,XMMWORD PTR [rip+0x26997]        # 0x1400366f0
   14000fd59:	comisd xmm0,QWORD PTR [rip+0x26977]        # 0x1400366d8
   14000fd61:	setbe  al
   14000fd64:	add    rsp,0x20
   14000fd68:	pop    rdi
   14000fd69:	pop    rsi
   14000fd6a:	pop    rbp
   14000fd6b:	ret    
   14000fd6c:	xor    edi,edi
   14000fd6e:	cmp    rdx,0xc
   14000fd72:	je     0x14000fd8b
   14000fd74:	cmp    rdx,0x16
   14000fd78:	je     0x14000fd8b
   14000fd7a:	cmp    rdx,0x14
   14000fd7e:	jne    0x14000fd86
   14000fd80:	add    rsi,0x8
   14000fd84:	jmp    0x14000fd8f
   14000fd86:	mov    rsi,rdi
   14000fd89:	jmp    0x14000fd8f
   14000fd8b:	mov    rsi,QWORD PTR [rsi+0x8]
   14000fd8f:	cmp    r9,0xc
   14000fd93:	je     0x14000fda7
   14000fd95:	cmp    r9,0x16
   14000fd99:	je     0x14000fda7
   14000fd9b:	cmp    r9,0x14
   14000fd9f:	jne    0x14000fdab
   14000fda1:	lea    rdi,[rbp+0x8]
   14000fda5:	jmp    0x14000fdab
   14000fda7:	mov    rdi,QWORD PTR [rbp+0x8]
   14000fdab:	sub    rsi,rdi
   14000fdae:	xchg   ax,ax
   14000fdb0:	movzx  ecx,BYTE PTR [rdi]
   14000fdb3:	movzx  eax,BYTE PTR [rdi+rsi*1]
   14000fdb7:	sub    ecx,eax
   14000fdb9:	jne    0x14000fdc2
   14000fdbb:	inc    rdi
   14000fdbe:	test   eax,eax
   14000fdc0:	jne    0x14000fdb0
   14000fdc2:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fdc7:	test   ecx,ecx
   14000fdc9:	sete   al
   14000fdcc:	add    rsp,0x20
   14000fdd0:	pop    rdi
   14000fdd1:	pop    rsi
   14000fdd2:	pop    rbp
   14000fdd3:	ret    
   14000fdd4:	mov    rcx,rbp
   14000fdd7:	call   0x14000eb10
   14000fddc:	mov    rcx,rsi
   14000fddf:	movsxd rbx,eax
   14000fde2:	call   0x14000eb10
   14000fde7:	cmp    ebx,eax
   14000fde9:	jne    0x14000fec1
   14000fdef:	mov    rcx,rsi
   14000fdf2:	call   0x14000ea40
   14000fdf7:	mov    rcx,rbp
   14000fdfa:	mov    rdi,rax
   14000fdfd:	call   0x14000ea40
   14000fe02:	test   ebx,ebx
   14000fe04:	jns    0x14000fe07
   14000fe06:	int3   
   14000fe07:	mov    r8,rbx
   14000fe0a:	mov    rdx,rdi
   14000fe0d:	mov    rcx,rax
   14000fe10:	call   0x140027960
   14000fe15:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fe1a:	test   eax,eax
   14000fe1c:	sete   al
   14000fe1f:	add    rsp,0x20
   14000fe23:	pop    rdi
   14000fe24:	pop    rsi
   14000fe25:	pop    rbp
   14000fe26:	ret    
   14000fe27:	mov    rcx,rbp
   14000fe2a:	call   0x14000ea00
   14000fe2f:	mov    rcx,rsi
   14000fe32:	mov    DWORD PTR [rsp+0x40],eax
   14000fe36:	mov    ebx,eax
   14000fe38:	call   0x14000ea00
   14000fe3d:	cmp    ebx,eax
   14000fe3f:	jne    0x14000fec1
   14000fe45:	xor    edi,edi
   14000fe47:	test   ebx,ebx
   14000fe49:	jle    0x14000fe84
   14000fe4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14000fe50:	mov    edx,edi
   14000fe52:	mov    rcx,rbp
   14000fe55:	call   0x14000e9b0
   14000fe5a:	mov    edx,edi
   14000fe5c:	mov    rcx,rsi
   14000fe5f:	mov    rbx,rax
   14000fe62:	call   0x14000e9b0
   14000fe67:	movzx  r8d,BYTE PTR [rsp+0x50]
   14000fe6d:	mov    rdx,rax
   14000fe70:	mov    rcx,rbx
   14000fe73:	call   0x14000fc30
   14000fe78:	test   al,al
   14000fe7a:	je     0x14000fec1
   14000fe7c:	inc    edi
   14000fe7e:	cmp    edi,DWORD PTR [rsp+0x40]
   14000fe82:	jl     0x14000fe50
   14000fe84:	mov    al,0x1
   14000fe86:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fe8b:	add    rsp,0x20
   14000fe8f:	pop    rdi
   14000fe90:	pop    rsi
   14000fe91:	pop    rbp
   14000fe92:	ret    
   14000fe93:	mov    rcx,rsi
   14000fe96:	call   0x14000f060
   14000fe9b:	mov    rcx,rbp
   14000fe9e:	mov    rbx,rax
   14000fea1:	call   0x14000f060
   14000fea6:	mov    rcx,rax
   14000fea9:	movzx  r8d,dil
   14000fead:	mov    rdx,rbx
   14000feb0:	mov    rbx,QWORD PTR [rsp+0x48]
   14000feb5:	add    rsp,0x20
   14000feb9:	pop    rdi
   14000feba:	pop    rsi
   14000febb:	pop    rbp
   14000febc:	jmp    0x14000fb50
   14000fec1:	xor    al,al
   14000fec3:	mov    rbx,QWORD PTR [rsp+0x48]
   14000fec8:	add    rsp,0x20
   14000fecc:	pop    rdi
   14000fecd:	pop    rsi
   14000fece:	pop    rbp
   14000fecf:	ret    
   14000fed0:	test   dh,bh
   14000fed2:	add    BYTE PTR [rax],al
   14000fed4:	adc    al,0xfd
   14000fed6:	add    BYTE PTR [rax],al
   14000fed8:	sub    edi,ebp
   14000feda:	add    BYTE PTR [rax],al
   14000fedc:	sub    edi,ebp
   14000fede:	add    BYTE PTR [rax],al
   14000fee0:	rex.XB std 
   14000fee2:	add    BYTE PTR [rax],al
   14000fee4:	ins    BYTE PTR es:[rdi],dx
   14000fee5:	std    
   14000fee6:	add    BYTE PTR [rax],al
   14000fee8:	(bad)  
   14000fee9:	std    
   14000feea:	add    BYTE PTR [rax],al
   14000feec:	(bad)  
   14000feed:	inc    BYTE PTR [rax]
   14000feef:	add    BYTE PTR [rbx-0x33ffff02],dl
   14000fef5:	int3   
   14000fef6:	int3   
   14000fef7:	int3   
   14000fef8:	int3   
   14000fef9:	int3   
   14000fefa:	int3   
   14000fefb:	int3   
   14000fefc:	int3   
   14000fefd:	int3   
   14000fefe:	int3   
   14000feff:	int3   
   14000ff00:	cmp    DWORD PTR [rcx],0x0
   14000ff03:	setne  al
   14000ff06:	ret    
   14000ff07:	int3   
   14000ff08:	int3   
   14000ff09:	int3   
   14000ff0a:	int3   
   14000ff0b:	int3   
   14000ff0c:	int3   
   14000ff0d:	int3   
   14000ff0e:	int3   
   14000ff0f:	int3   
   14000ff10:	add    rcx,0x18
   14000ff14:	jmp    0x14000ff20
   14000ff19:	int3   
   14000ff1a:	int3   
   14000ff1b:	int3   
   14000ff1c:	int3   
   14000ff1d:	int3   
   14000ff1e:	int3   
   14000ff1f:	int3   
   14000ff20:	mov    QWORD PTR [rsp+0x8],rbx
   14000ff25:	mov    QWORD PTR [rsp+0x10],rbp
   14000ff2a:	mov    QWORD PTR [rsp+0x18],rsi
   14000ff2f:	push   rdi
   14000ff30:	push   r14
   14000ff32:	push   r15
   14000ff34:	sub    rsp,0x40
   14000ff38:	mov    r14,r9
   14000ff3b:	mov    rsi,r8
   14000ff3e:	mov    rbx,rdx
   14000ff41:	mov    r15,rcx
   14000ff44:	test   rdx,rdx
   14000ff47:	je     0x14000ff58
   14000ff49:	lea    rdx,[rip+0x22850]        # 0x1400327a0
   14000ff50:	mov    rcx,rbx
   14000ff53:	call   0x14001aae0
   14000ff58:	movsxd rax,DWORD PTR [rsi+0x10]
   14000ff5c:	mov    edi,DWORD PTR [rsi+0x20]
   14000ff5f:	mov    rbp,rax
   14000ff62:	add    rbp,QWORD PTR [rsi]
   14000ff65:	sub    edi,eax
   14000ff67:	mov    eax,DWORD PTR [rip+0x265db]        # 0x140036548
   14000ff6d:	movsd  xmm0,QWORD PTR [rip+0x265cb]        # 0x140036540
   14000ff75:	mov    DWORD PTR [rsp+0x38],eax
   14000ff79:	movzx  eax,BYTE PTR [rip+0x265cc]        # 0x14003654c
   14000ff80:	mov    BYTE PTR [rsp+0x3c],al
   14000ff84:	movsxd rax,edi
   14000ff87:	movsd  QWORD PTR [rsp+0x30],xmm0
   14000ff8d:	cmp    edi,0xc
   14000ff90:	jb     0x14000ff97
   14000ff92:	mov    eax,0xc
   14000ff97:	mov    r8d,eax
   14000ff9a:	lea    rdx,[rsp+0x30]
   14000ff9f:	mov    rcx,rbp
   14000ffa2:	call   0x140022670
   14000ffa7:	test   eax,eax
   14000ffa9:	jne    0x14000ffbe
   14000ffab:	mov    r9,r14
   14000ffae:	mov    r8,rsi
   14000ffb1:	mov    rdx,rbx
   14000ffb4:	mov    rcx,r15
   14000ffb7:	call   0x1400170e0
   14000ffbc:	jmp    0x14001001b
   14000ffbe:	mov    edx,edi
   14000ffc0:	mov    rcx,rbp
   14000ffc3:	call   0x1400147f0
   14000ffc8:	test   al,al
   14000ffca:	je     0x14000ffdf
   14000ffcc:	mov    r8,QWORD PTR [rsi]
   14000ffcf:	mov    r9,r14
   14000ffd2:	mov    rdx,rbx
   14000ffd5:	mov    rcx,r15
   14000ffd8:	call   0x140014540
   14000ffdd:	jmp    0x14001001b
   14000ffdf:	mov    edx,edi
   14000ffe1:	mov    rcx,rbp
   14000ffe4:	call   0x140016d00
   14000ffe9:	test   al,al
   14000ffeb:	je     0x140010005
   14000ffed:	xor    r9d,r9d
   14000fff0:	mov    QWORD PTR [rsp+0x20],r14
   14000fff5:	mov    r8,rsi
   14000fff8:	mov    rdx,rbx
   14000fffb:	mov    rcx,r15
   14000fffe:	call   0x1400160a0
   140010003:	jmp    0x14001001b
   140010005:	test   rbx,rbx
   140010008:	je     0x140010019
   14001000a:	lea    rdx,[rip+0x2653f]        # 0x140036550
   140010011:	mov    rcx,rbx
   140010014:	call   0x14001aae0
   140010019:	xor    al,al
   14001001b:	mov    rbx,QWORD PTR [rsp+0x60]
   140010020:	mov    rbp,QWORD PTR [rsp+0x68]
   140010025:	mov    rsi,QWORD PTR [rsp+0x70]
   14001002a:	add    rsp,0x40
   14001002e:	pop    r15
   140010030:	pop    r14
   140010032:	pop    rdi
   140010033:	ret    
   140010034:	int3   
   140010035:	int3   
   140010036:	int3   
   140010037:	int3   
   140010038:	int3   
   140010039:	int3   
   14001003a:	int3   
   14001003b:	int3   
   14001003c:	int3   
   14001003d:	int3   
   14001003e:	int3   
   14001003f:	int3   
   140010040:	mov    QWORD PTR [rsp+0x8],rbx
   140010045:	mov    QWORD PTR [rsp+0x10],rsi
   14001004a:	push   rdi
   14001004b:	sub    rsp,0x20
   14001004f:	xor    esi,esi
   140010051:	mov    rbx,rdx
   140010054:	mov    rdx,QWORD PTR [rdx]
   140010057:	mov    rdi,rcx
   14001005a:	mov    rax,rbx
   14001005d:	movzx  r8d,dl
   140010061:	and    rax,0xfffffffffffffc00
   140010067:	mov    ecx,esi
   140010069:	and    r8b,0x1
   14001006d:	cmove  rcx,rax
   140010071:	test   rcx,rcx
   140010074:	je     0x14001007b
   140010076:	mov    r9,QWORD PTR [rcx]
   140010079:	jmp    0x14001007e
   14001007b:	mov    r9,rsi
   14001007e:	movzx  ecx,BYTE PTR [rdi]
   140010081:	mov    rax,rdi
   140010084:	and    rax,0xfffffffffffffc00
   14001008a:	mov    r8,rsi
   14001008d:	and    cl,0x1
   140010090:	cmove  r8,rax
   140010094:	test   r8,r8
   140010097:	je     0x14001009e
   140010099:	mov    rax,QWORD PTR [r8]
   14001009c:	jmp    0x1400100a1
   14001009e:	mov    rax,rsi
   1400100a1:	cmp    r9,rax
   1400100a4:	jne    0x140010173
   1400100aa:	and    edx,0x1e
   1400100ad:	cmp    rdx,0x12
   1400100b1:	jne    0x1400100ef
   1400100b3:	mov    dl,0x1
   1400100b5:	mov    rcx,rdi
   1400100b8:	call   0x14000faa0
   1400100bd:	mov    rax,QWORD PTR [rdi]
   1400100c0:	and    rax,0xfffffffffffffff3
   1400100c4:	or     rax,0x12
   1400100c8:	mov    QWORD PTR [rdi],rax
   1400100cb:	mov    rax,QWORD PTR [rbx+0x8]
   1400100cf:	mov    QWORD PTR [rdi+0x8],rax
   1400100d3:	and    QWORD PTR [rbx],0xffffffffffffffe3
   1400100d7:	or     QWORD PTR [rbx],0x2
   1400100db:	mov    QWORD PTR [rbx+0x8],rsi
   1400100df:	mov    rbx,QWORD PTR [rsp+0x30]
   1400100e4:	mov    rsi,QWORD PTR [rsp+0x38]
   1400100e9:	add    rsp,0x20
   1400100ed:	pop    rdi
   1400100ee:	ret    
   1400100ef:	cmp    rdx,0x10
   1400100f3:	jne    0x14001011b
   1400100f5:	mov    dl,0x1
   1400100f7:	mov    rcx,rdi
   1400100fa:	call   0x14000faa0
   1400100ff:	mov    rax,QWORD PTR [rdi]
   140010102:	and    rax,0xfffffffffffffff1
   140010106:	or     rax,0x10
   14001010a:	mov    QWORD PTR [rdi],rax
   14001010d:	mov    rax,QWORD PTR [rbx+0x8]
   140010111:	mov    QWORD PTR [rdi+0x8],rax
   140010115:	mov    QWORD PTR [rbx+0x8],rsi
   140010119:	jmp    0x14001017e
   14001011b:	cmp    rdx,0xe
   14001011f:	jne    0x140010147
   140010121:	mov    dl,0x1
   140010123:	mov    rcx,rdi
   140010126:	call   0x14000faa0
   14001012b:	mov    rax,QWORD PTR [rdi]
   14001012e:	and    rax,0xffffffffffffffef
   140010132:	or     rax,0xe
   140010136:	mov    QWORD PTR [rdi],rax
   140010139:	mov    rax,QWORD PTR [rbx+0x8]
   14001013d:	mov    QWORD PTR [rdi+0x8],rax
   140010141:	mov    QWORD PTR [rbx+0x8],rsi
   140010145:	jmp    0x14001017e
   140010147:	cmp    rdx,0x18
   14001014b:	jne    0x140010173
   14001014d:	mov    dl,0x1
   14001014f:	mov    rcx,rdi
   140010152:	call   0x14000faa0
   140010157:	mov    rax,QWORD PTR [rdi]
   14001015a:	and    rax,0xfffffffffffffff9
   14001015e:	or     rax,0x18
   140010162:	mov    QWORD PTR [rdi],rax
   140010165:	mov    rax,QWORD PTR [rbx+0x8]
   140010169:	mov    QWORD PTR [rdi+0x8],rax
   14001016d:	mov    QWORD PTR [rbx+0x8],rsi
   140010171:	jmp    0x14001017e
   140010173:	mov    rdx,rbx
   140010176:	mov    rcx,rdi
   140010179:	call   0x14000d830
   14001017e:	mov    dl,0x1
   140010180:	mov    rcx,rbx
   140010183:	mov    rbx,QWORD PTR [rsp+0x30]
   140010188:	mov    rsi,QWORD PTR [rsp+0x38]
   14001018d:	add    rsp,0x20
   140010191:	pop    rdi
   140010192:	jmp    0x14000faa0
   140010197:	int3   
   140010198:	int3   
   140010199:	int3   
   14001019a:	int3   
   14001019b:	int3   
   14001019c:	int3   
   14001019d:	int3   
   14001019e:	int3   
   14001019f:	int3   
   1400101a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400101a5:	push   rdi
   1400101a6:	sub    rsp,0x50
   1400101aa:	mov    r8,QWORD PTR [rcx+0x28]
   1400101ae:	mov    rdi,rdx
   1400101b1:	mov    rbx,rcx
   1400101b4:	cmp    r8,0xffffffffffffffff
   1400101b8:	jne    0x1400102fd
   1400101be:	mov    rax,QWORD PTR [rcx+0x30]
   1400101c2:	test   rax,rax
   1400101c5:	js     0x1400101e4
   1400101c7:	movsxd rcx,DWORD PTR [rcx+0x10]
   1400101cb:	cmp    rax,rcx
   1400101ce:	jge    0x1400101e4
   1400101d0:	mov    r8,rax
   1400101d3:	add    r8,0x1
   1400101d7:	js     0x1400101de
   1400101d9:	cmp    r8,rcx
   1400101dc:	jl     0x1400101f3
   1400101de:	or     r8,0xffffffffffffffff
   1400101e2:	jmp    0x1400101f3
   1400101e4:	mov    ecx,DWORD PTR [rbx+0x10]
   1400101e7:	xor    r8d,r8d
   1400101ea:	test   ecx,ecx
   1400101ec:	setg   r8b
   1400101f0:	dec    r8
   1400101f3:	test   r8,r8
   1400101f6:	js     0x140010200
   1400101f8:	movsxd rax,ecx
   1400101fb:	cmp    r8,rax
   1400101fe:	jl     0x140010250
   140010200:	lea    rcx,[rbx+0x8]
   140010204:	mov    edx,0x1
   140010209:	call   0x140009810
   14001020e:	mov    rax,QWORD PTR [rbx+0x30]
   140010212:	test   rax,rax
   140010215:	js     0x140010234
   140010217:	movsxd rcx,DWORD PTR [rbx+0x10]
   14001021b:	cmp    rax,rcx
   14001021e:	jge    0x140010234
   140010220:	mov    r8,rax
   140010223:	add    r8,0x1
   140010227:	js     0x14001022e
   140010229:	cmp    r8,rcx
   14001022c:	jl     0x140010243
   14001022e:	or     r8,0xffffffffffffffff
   140010232:	jmp    0x140010243
   140010234:	mov    ecx,DWORD PTR [rbx+0x10]
   140010237:	xor    r8d,r8d
   14001023a:	test   ecx,ecx
   14001023c:	setg   r8b
   140010240:	dec    r8
   140010243:	test   r8,r8
   140010246:	js     0x140010259
   140010248:	movsxd rax,ecx
   14001024b:	cmp    r8,rax
   14001024e:	jge    0x140010259
   140010250:	mov    QWORD PTR [rbx+0x30],r8
   140010254:	jmp    0x14001030e
   140010259:	mov    rax,QWORD PTR [rip+0x22128]        # 0x140032388
   140010260:	mov    edx,0x4
   140010265:	mov    ecx,DWORD PTR [rax]
   140010267:	call   QWORD PTR [rip+0x2223b]        # 0x1400324a8
   14001026d:	test   al,al
   14001026f:	je     0x1400102b8
   140010271:	lea    rax,[rip+0x26418]        # 0x140036690
   140010278:	mov    DWORD PTR [rsp+0x38],0x31f
   140010280:	mov    QWORD PTR [rsp+0x30],rax
   140010285:	lea    r9,[rip+0x262ec]        # 0x140036578
   14001028c:	lea    rax,[rip+0x2630d]        # 0x1400365a0
   140010293:	mov    edx,0x4
   140010298:	mov    QWORD PTR [rsp+0x40],rax
   14001029d:	lea    r8,[rsp+0x30]
   1400102a2:	mov    eax,DWORD PTR [rbx+0x20]
   1400102a5:	mov    DWORD PTR [rsp+0x20],eax
   1400102a9:	mov    rax,QWORD PTR [rip+0x220d8]        # 0x140032388
   1400102b0:	mov    ecx,DWORD PTR [rax]
   1400102b2:	call   QWORD PTR [rip+0x221e0]        # 0x140032498
   1400102b8:	call   QWORD PTR [rip+0x222ca]        # 0x140032588
   1400102be:	test   al,al
   1400102c0:	je     0x1400102f1
   1400102c2:	call   QWORD PTR [rip+0x221b8]        # 0x140032480
   1400102c8:	lea    rdx,[rip+0x224dd]        # 0x1400327ac
   1400102cf:	xorps  xmm0,xmm0
   1400102d2:	mov    r8b,0x1
   1400102d5:	mov    DWORD PTR [rsp+0x38],eax
   1400102d9:	mov    QWORD PTR [rsp+0x30],rdx
   1400102de:	xor    ecx,ecx
   1400102e0:	lea    rdx,[rsp+0x30]
   1400102e5:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   1400102eb:	call   QWORD PTR [rip+0x22187]        # 0x140032478
   1400102f1:	mov    ecx,0x1
   1400102f6:	call   QWORD PTR [rip+0x21f4c]        # 0x140032248
   1400102fc:	int3   
   1400102fd:	mov    rax,QWORD PTR [rbx+0x8]
   140010301:	lea    rcx,[r8+r8*4]
   140010305:	mov    rcx,QWORD PTR [rax+rcx*8+0x8]
   14001030a:	mov    QWORD PTR [rbx+0x28],rcx
   14001030e:	test   rdi,rdi
   140010311:	je     0x14001032e
   140010313:	mov    rcx,QWORD PTR [rbx+0x8]
   140010317:	lea    rax,[r8+0x1]
   14001031b:	lea    rax,[r8+rax*4]
   14001031f:	lea    rax,[rcx+rax*8]
   140010323:	test   rax,rax
   140010326:	je     0x14001032e
   140010328:	mov    rcx,QWORD PTR [rdi]
   14001032b:	mov    QWORD PTR [rax],rcx
   14001032e:	mov    rcx,QWORD PTR [rbx+0x8]
   140010332:	mov    rax,r8
   140010335:	mov    QWORD PTR [rbx+0x38],rcx
   140010339:	mov    rbx,QWORD PTR [rsp+0x60]
   14001033e:	add    rsp,0x50
   140010342:	pop    rdi
   140010343:	ret    
   140010344:	int3   
   140010345:	int3   
   140010346:	int3   
   140010347:	int3   
   140010348:	int3   
   140010349:	int3   
   14001034a:	int3   
   14001034b:	int3   
   14001034c:	int3   
   14001034d:	int3   
   14001034e:	int3   
   14001034f:	int3   
   140010350:	mov    QWORD PTR [rsp+0x18],rbx
   140010355:	push   rdi
   140010356:	sub    rsp,0x50
   14001035a:	test   rdx,rdx
   14001035d:	lea    rbx,[rip+0x2243c]        # 0x1400327a0
   140010364:	mov    rdi,rcx
   140010367:	cmovne rbx,rdx
   14001036b:	mov    rdx,QWORD PTR [rcx]
   14001036e:	mov    rcx,rdx
   140010371:	and    ecx,0x1e
   140010374:	lea    rax,[rcx-0x14]
   140010378:	test   rax,0xfffffffffffffff9
   14001037e:	jne    0x140010386
   140010380:	cmp    rcx,0x1a
   140010384:	jne    0x140010395
   140010386:	movzx  eax,dl
   140010389:	shr    al,1
   14001038b:	and    al,0xf
   14001038d:	cmp    al,0x1
   14001038f:	je     0x1400105fa
   140010395:	lea    rax,[rcx-0x14]
   140010399:	test   rax,0xfffffffffffffff9
   14001039f:	jne    0x1400103ab
   1400103a1:	cmp    rcx,0x1a
   1400103a5:	jne    0x14001046d
   1400103ab:	movzx  eax,dl
   1400103ae:	shr    al,1
   1400103b0:	and    al,0xf
   1400103b2:	cmp    al,0x8
   1400103b4:	jne    0x14001046d
   1400103ba:	mov    QWORD PTR [rsp+0x60],rbp
   1400103bf:	lea    r8,[rip+0x22b1e]        # 0x140032ee4
   1400103c6:	mov    rdx,rbx
   1400103c9:	mov    QWORD PTR [rsp+0x68],rsi
   1400103ce:	lea    rcx,[rsp+0x20]
   1400103d3:	call   0x1400229e0
   1400103d8:	mov    rbx,QWORD PTR [rsp+0x20]
   1400103dd:	mov    rcx,rdi
   1400103e0:	mov    edx,ebx
   1400103e2:	call   0x140011400
   1400103e7:	movsxd rbp,ebx
   1400103ea:	xor    esi,esi
   1400103ec:	xor    ebx,ebx
   1400103ee:	test   rbp,rbp
   1400103f1:	jle    0x14001044e
   1400103f3:	mov    rcx,QWORD PTR [rdi]
   1400103f6:	mov    rdx,rcx
   1400103f9:	and    edx,0x1e
   1400103fc:	lea    rax,[rdx-0x14]
   140010400:	test   rax,0xfffffffffffffff9
   140010406:	jne    0x14001040e
   140010408:	cmp    rdx,0x1a
   14001040c:	jne    0x140010434
   14001040e:	shr    cl,1
   140010410:	and    cl,0xf
   140010413:	cmp    cl,0x8
   140010416:	jne    0x140010434
   140010418:	mov    rcx,QWORD PTR [rdi+0x8]
   14001041c:	test   rcx,rcx
   14001041f:	je     0x140010434
   140010421:	test   esi,esi
   140010423:	js     0x140010434
   140010425:	movsxd rax,esi
   140010428:	cmp    rax,QWORD PTR [rcx]
   14001042b:	jge    0x140010434
   14001042d:	mov    rcx,QWORD PTR [rcx+rbx*8+0x8]
   140010432:	jmp    0x140010436
   140010434:	xor    ecx,ecx
   140010436:	mov    rdx,QWORD PTR [rsp+0x28]
   14001043b:	mov    rdx,QWORD PTR [rdx+rbx*8]
   14001043f:	call   0x140010350
   140010444:	inc    esi
   140010446:	inc    rbx
   140010449:	cmp    rbx,rbp
   14001044c:	jl     0x1400103f3
   14001044e:	lea    rcx,[rsp+0x20]
   140010453:	call   0x140022a10
   140010458:	mov    rsi,QWORD PTR [rsp+0x68]
   14001045d:	mov    rbp,QWORD PTR [rsp+0x60]
   140010462:	mov    rbx,QWORD PTR [rsp+0x70]
   140010467:	add    rsp,0x50
   14001046b:	pop    rdi
   14001046c:	ret    
   14001046d:	lea    rax,[rcx-0x14]
   140010471:	test   rax,0xfffffffffffffff9
   140010477:	jne    0x14001047f
   140010479:	cmp    rcx,0x1a
   14001047d:	jne    0x140010495
   14001047f:	movzx  eax,dl
   140010482:	shr    al,1
   140010484:	and    al,0xf
   140010486:	cmp    al,0x3
   140010488:	jne    0x140010495
   14001048a:	mov    rcx,rbx
   14001048d:	call   QWORD PTR [rip+0x21dfd]        # 0x140032290
   140010493:	jmp    0x1400104bb
   140010495:	lea    rax,[rcx-0x14]
   140010499:	test   rax,0xfffffffffffffff9
   14001049f:	jne    0x1400104a7
   1400104a1:	cmp    rcx,0x1a
   1400104a5:	jne    0x1400104d7
   1400104a7:	movzx  eax,dl
   1400104aa:	shr    al,1
   1400104ac:	and    al,0xf
   1400104ae:	cmp    al,0x4
   1400104b0:	jne    0x1400104d7
   1400104b2:	mov    rcx,rbx
   1400104b5:	call   QWORD PTR [rip+0x21dcd]        # 0x140032288
   1400104bb:	mov    dl,0x3
   1400104bd:	mov    rcx,rdi
   1400104c0:	mov    rbx,rax
   1400104c3:	call   0x14000faa0
   1400104c8:	mov    QWORD PTR [rdi+0x8],rbx
   1400104cc:	mov    rbx,QWORD PTR [rsp+0x70]
   1400104d1:	add    rsp,0x50
   1400104d5:	pop    rdi
   1400104d6:	ret    
   1400104d7:	lea    rax,[rcx-0x14]
   1400104db:	test   rax,0xfffffffffffffff9
   1400104e1:	jne    0x1400104e9
   1400104e3:	cmp    rcx,0x1a
   1400104e7:	jne    0x140010523
   1400104e9:	shr    dl,1
   1400104eb:	and    dl,0xf
   1400104ee:	cmp    dl,0x5
   1400104f1:	jne    0x140010523
   1400104f3:	mov    rcx,rbx
   1400104f6:	movaps XMMWORD PTR [rsp+0x40],xmm6
   1400104fb:	call   QWORD PTR [rip+0x21d7f]        # 0x140032280
   140010501:	mov    dl,0x5
   140010503:	mov    rcx,rdi
   140010506:	movaps xmm6,xmm0
   140010509:	call   0x14000faa0
   14001050e:	movsd  QWORD PTR [rdi+0x8],xmm6
   140010513:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   140010518:	mov    rbx,QWORD PTR [rsp+0x70]
   14001051d:	add    rsp,0x50
   140010521:	pop    rdi
   140010522:	ret    
   140010523:	mov    rcx,rdi
   140010526:	call   0x14000f090
   14001052b:	mov    rcx,rdi
   14001052e:	cmp    al,0x6
   140010530:	jne    0x140010544
   140010532:	mov    rdx,rbx
   140010535:	mov    rbx,QWORD PTR [rsp+0x70]
   14001053a:	add    rsp,0x50
   14001053e:	pop    rdi
   14001053f:	jmp    0x1400116c0
   140010544:	call   0x14000f090
   140010549:	cmp    al,0x7
   14001054b:	jne    0x140010575
   14001054d:	or     rax,0xffffffffffffffff
   140010551:	cmp    BYTE PTR [rbx+rax*1+0x1],0x0
   140010556:	lea    rax,[rax+0x1]
   14001055a:	jne    0x140010551
   14001055c:	lea    r8d,[rax+0x1]
   140010560:	mov    rdx,rbx
   140010563:	mov    rcx,rdi
   140010566:	mov    rbx,QWORD PTR [rsp+0x70]
   14001056b:	add    rsp,0x50
   14001056f:	pop    rdi
   140010570:	jmp    0x140011790
   140010575:	mov    rcx,rdi
   140010578:	call   0x14000f090
   14001057d:	cmp    al,0x2
   14001057f:	jne    0x1400105fa
   140010585:	lea    rdx,[rip+0x25e80]        # 0x14003640c
   14001058c:	mov    rcx,rbx
   14001058f:	call   QWORD PTR [rip+0x21fcb]        # 0x140032560
   140010595:	test   eax,eax
   140010597:	jne    0x1400105b2
   140010599:	mov    dl,0x2
   14001059b:	mov    rcx,rdi
   14001059e:	call   0x14000faa0
   1400105a3:	mov    BYTE PTR [rdi+0x8],0x1
   1400105a7:	mov    rbx,QWORD PTR [rsp+0x70]
   1400105ac:	add    rsp,0x50
   1400105b0:	pop    rdi
   1400105b1:	ret    
   1400105b2:	lea    rdx,[rip+0x25e5b]        # 0x140036414
   1400105b9:	mov    rcx,rbx
   1400105bc:	call   QWORD PTR [rip+0x21f9e]        # 0x140032560
   1400105c2:	test   eax,eax
   1400105c4:	jne    0x1400105df
   1400105c6:	mov    dl,0x2
   1400105c8:	mov    rcx,rdi
   1400105cb:	call   0x14000faa0
   1400105d0:	mov    BYTE PTR [rdi+0x8],0x0
   1400105d4:	mov    rbx,QWORD PTR [rsp+0x70]
   1400105d9:	add    rsp,0x50
   1400105dd:	pop    rdi
   1400105de:	ret    
   1400105df:	mov    rcx,rbx
   1400105e2:	call   QWORD PTR [rip+0x21cb0]        # 0x140032298
   1400105e8:	mov    dl,0x2
   1400105ea:	mov    rcx,rdi
   1400105ed:	test   eax,eax
   1400105ef:	setne  bl
   1400105f2:	call   0x14000faa0
   1400105f7:	mov    BYTE PTR [rdi+0x8],bl
   1400105fa:	mov    rbx,QWORD PTR [rsp+0x70]
   1400105ff:	add    rsp,0x50
   140010603:	pop    rdi
   140010604:	ret    
   140010605:	int3   
   140010606:	int3   
   140010607:	int3   
   140010608:	int3   
   140010609:	int3   
   14001060a:	int3   
   14001060b:	int3   
   14001060c:	int3   
   14001060d:	int3   
   14001060e:	int3   
   14001060f:	int3   
   140010610:	mov    QWORD PTR [rsp+0x10],rbx
   140010615:	mov    QWORD PTR [rsp+0x18],rbp
   14001061a:	push   rdi
   14001061b:	sub    rsp,0x20
   14001061f:	mov    ebp,r8d
   140010622:	mov    rdi,rdx
   140010625:	mov    rbx,rcx
   140010628:	cmp    r9d,r8d
   14001062b:	jg     0x14001069a
   14001062d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140010631:	jg     0x14001068a
   140010633:	mov    rdx,QWORD PTR [rcx]
   140010636:	mov    QWORD PTR [rsp+0x30],rsi
   14001063b:	mov    esi,DWORD PTR [rcx+0xc]
   14001063e:	and    esi,0xc0000000
   140010644:	cmp    rdx,rdi
   140010647:	je     0x140010685
   140010649:	test   rdx,rdx
   14001064c:	je     0x140010670
   14001064e:	movsxd r8,r9d
   140010651:	mov    rcx,rdi
   140010654:	call   0x140026f70
   140010659:	test   esi,esi
   14001065b:	jne    0x140010670
   14001065d:	mov    rax,QWORD PTR [rip+0x21d2c]        # 0x140032390
   140010664:	mov    rdx,QWORD PTR [rbx]
   140010667:	mov    rcx,QWORD PTR [rax]
   14001066a:	mov    rax,QWORD PTR [rcx]
   14001066d:	call   QWORD PTR [rax+0x28]
   140010670:	mov    eax,DWORD PTR [rbx+0xc]
   140010673:	and    eax,0x3fffffff
   140010678:	mov    QWORD PTR [rbx],rdi
   14001067b:	bts    eax,0x1f
   14001067f:	mov    DWORD PTR [rbx+0x8],ebp
   140010682:	mov    DWORD PTR [rbx+0xc],eax
   140010685:	mov    rsi,QWORD PTR [rsp+0x30]
   14001068a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001068f:	mov    rbp,QWORD PTR [rsp+0x40]
   140010694:	add    rsp,0x20
   140010698:	pop    rdi
   140010699:	ret    
   14001069a:	mov    eax,DWORD PTR [rcx+0x8]
   14001069d:	cmp    r9d,eax
   1400106a0:	jg     0x14001068a
   1400106a2:	test   r9d,r9d
   1400106a5:	jne    0x1400106e0
   1400106a7:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400106ae:	jne    0x14001068a
   1400106b0:	mov    rdx,QWORD PTR [rcx]
   1400106b3:	xor    edi,edi
   1400106b5:	test   rdx,rdx
   1400106b8:	je     0x1400106cd
   1400106ba:	mov    rax,QWORD PTR [rip+0x21ccf]        # 0x140032390
   1400106c1:	mov    rcx,QWORD PTR [rax]
   1400106c4:	mov    rax,QWORD PTR [rcx]
   1400106c7:	call   QWORD PTR [rax+0x28]
   1400106ca:	mov    QWORD PTR [rbx],rdi
   1400106cd:	mov    DWORD PTR [rbx+0x8],edi
   1400106d0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400106d5:	mov    rbp,QWORD PTR [rsp+0x40]
   1400106da:	add    rsp,0x20
   1400106de:	pop    rdi
   1400106df:	ret    
   1400106e0:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400106e7:	jne    0x14001068a
   1400106e9:	cmp    r9d,eax
   1400106ec:	je     0x14001068a
   1400106ee:	mov    rdx,QWORD PTR [rcx]
   1400106f1:	test   rdx,rdx
   1400106f4:	je     0x14001068a
   1400106f6:	mov    DWORD PTR [rcx+0x8],r9d
   1400106fa:	mov    rax,QWORD PTR [rip+0x21c8f]        # 0x140032390
   140010701:	movsxd r8,r9d
   140010704:	mov    rcx,QWORD PTR [rax]
   140010707:	mov    rax,QWORD PTR [rcx]
   14001070a:	call   QWORD PTR [rax+0x18]
   14001070d:	mov    rbp,QWORD PTR [rsp+0x40]
   140010712:	mov    QWORD PTR [rbx],rax
   140010715:	mov    rbx,QWORD PTR [rsp+0x38]
   14001071a:	add    rsp,0x20
   14001071e:	pop    rdi
   14001071f:	ret    
   140010720:	mov    QWORD PTR [rsp+0x10],rbx
   140010725:	mov    QWORD PTR [rsp+0x18],rbp
   14001072a:	push   rdi
   14001072b:	sub    rsp,0x20
   14001072f:	mov    ebp,r8d
   140010732:	mov    rdi,rdx
   140010735:	mov    rbx,rcx
   140010738:	cmp    r9d,r8d
   14001073b:	jg     0x1400107ae
   14001073d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140010741:	jg     0x14001079e
   140010743:	mov    rdx,QWORD PTR [rcx]
   140010746:	mov    QWORD PTR [rsp+0x30],rsi
   14001074b:	mov    esi,DWORD PTR [rcx+0xc]
   14001074e:	and    esi,0xc0000000
   140010754:	cmp    rdx,rdi
   140010757:	je     0x140010799
   140010759:	test   rdx,rdx
   14001075c:	je     0x140010784
   14001075e:	movsxd r8,r9d
   140010761:	mov    rcx,rdi
   140010764:	shl    r8,0x3
   140010768:	call   0x140026f70
   14001076d:	test   esi,esi
   14001076f:	jne    0x140010784
   140010771:	mov    rax,QWORD PTR [rip+0x21c18]        # 0x140032390
   140010778:	mov    rdx,QWORD PTR [rbx]
   14001077b:	mov    rcx,QWORD PTR [rax]
   14001077e:	mov    rax,QWORD PTR [rcx]
   140010781:	call   QWORD PTR [rax+0x28]
   140010784:	mov    eax,DWORD PTR [rbx+0xc]
   140010787:	and    eax,0x3fffffff
   14001078c:	mov    QWORD PTR [rbx],rdi
   14001078f:	bts    eax,0x1f
   140010793:	mov    DWORD PTR [rbx+0x8],ebp
   140010796:	mov    DWORD PTR [rbx+0xc],eax
   140010799:	mov    rsi,QWORD PTR [rsp+0x30]
   14001079e:	mov    rbx,QWORD PTR [rsp+0x38]
   1400107a3:	mov    rbp,QWORD PTR [rsp+0x40]
   1400107a8:	add    rsp,0x20
   1400107ac:	pop    rdi
   1400107ad:	ret    
   1400107ae:	mov    eax,DWORD PTR [rcx+0x8]
   1400107b1:	cmp    r9d,eax
   1400107b4:	jg     0x14001079e
   1400107b6:	test   r9d,r9d
   1400107b9:	jne    0x1400107f4
   1400107bb:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400107c2:	jne    0x14001079e
   1400107c4:	mov    rdx,QWORD PTR [rcx]
   1400107c7:	xor    edi,edi
   1400107c9:	test   rdx,rdx
   1400107cc:	je     0x1400107e1
   1400107ce:	mov    rax,QWORD PTR [rip+0x21bbb]        # 0x140032390
   1400107d5:	mov    rcx,QWORD PTR [rax]
   1400107d8:	mov    rax,QWORD PTR [rcx]
   1400107db:	call   QWORD PTR [rax+0x28]
   1400107de:	mov    QWORD PTR [rbx],rdi
   1400107e1:	mov    DWORD PTR [rbx+0x8],edi
   1400107e4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400107e9:	mov    rbp,QWORD PTR [rsp+0x40]
   1400107ee:	add    rsp,0x20
   1400107f2:	pop    rdi
   1400107f3:	ret    
   1400107f4:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400107fb:	jne    0x14001079e
   1400107fd:	cmp    r9d,eax
   140010800:	je     0x14001079e
   140010802:	mov    rdx,QWORD PTR [rcx]
   140010805:	test   rdx,rdx
   140010808:	je     0x14001079e
   14001080a:	mov    DWORD PTR [rcx+0x8],r9d
   14001080e:	mov    rax,QWORD PTR [rip+0x21b7b]        # 0x140032390
   140010815:	movsxd r8,r9d
   140010818:	shl    r8,0x3
   14001081c:	mov    rcx,QWORD PTR [rax]
   14001081f:	mov    rax,QWORD PTR [rcx]
   140010822:	call   QWORD PTR [rax+0x18]
   140010825:	mov    rbp,QWORD PTR [rsp+0x40]
   14001082a:	mov    QWORD PTR [rbx],rax
   14001082d:	mov    rbx,QWORD PTR [rsp+0x38]
   140010832:	add    rsp,0x20
   140010836:	pop    rdi
   140010837:	ret    
   140010838:	int3   
   140010839:	int3   
   14001083a:	int3   
   14001083b:	int3   
   14001083c:	int3   
   14001083d:	int3   
   14001083e:	int3   
   14001083f:	int3   
   140010840:	mov    QWORD PTR [rsp+0x10],rbx
   140010845:	mov    QWORD PTR [rsp+0x18],rbp
   14001084a:	push   rdi
   14001084b:	sub    rsp,0x20
   14001084f:	mov    ebp,r8d
   140010852:	mov    rdi,rdx
   140010855:	mov    rbx,rcx
   140010858:	cmp    r9d,r8d
   14001085b:	jg     0x1400108ce
   14001085d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140010861:	jg     0x1400108be
   140010863:	mov    rdx,QWORD PTR [rcx]
   140010866:	mov    QWORD PTR [rsp+0x30],rsi
   14001086b:	mov    esi,DWORD PTR [rcx+0xc]
   14001086e:	and    esi,0xc0000000
   140010874:	cmp    rdx,rdi
   140010877:	je     0x1400108b9
   140010879:	test   rdx,rdx
   14001087c:	je     0x1400108a4
   14001087e:	movsxd r8,r9d
   140010881:	mov    rcx,rdi
   140010884:	shl    r8,0x2
   140010888:	call   0x140026f70
   14001088d:	test   esi,esi
   14001088f:	jne    0x1400108a4
   140010891:	mov    rax,QWORD PTR [rip+0x21af8]        # 0x140032390
   140010898:	mov    rdx,QWORD PTR [rbx]
   14001089b:	mov    rcx,QWORD PTR [rax]
   14001089e:	mov    rax,QWORD PTR [rcx]
   1400108a1:	call   QWORD PTR [rax+0x28]
   1400108a4:	mov    eax,DWORD PTR [rbx+0xc]
   1400108a7:	and    eax,0x3fffffff
   1400108ac:	mov    QWORD PTR [rbx],rdi
   1400108af:	bts    eax,0x1f
   1400108b3:	mov    DWORD PTR [rbx+0x8],ebp
   1400108b6:	mov    DWORD PTR [rbx+0xc],eax
   1400108b9:	mov    rsi,QWORD PTR [rsp+0x30]
   1400108be:	mov    rbx,QWORD PTR [rsp+0x38]
   1400108c3:	mov    rbp,QWORD PTR [rsp+0x40]
   1400108c8:	add    rsp,0x20
   1400108cc:	pop    rdi
   1400108cd:	ret    
   1400108ce:	mov    eax,DWORD PTR [rcx+0x8]
   1400108d1:	cmp    r9d,eax
   1400108d4:	jg     0x1400108be
   1400108d6:	test   r9d,r9d
   1400108d9:	jne    0x140010914
   1400108db:	test   DWORD PTR [rcx+0xc],0xc0000000
   1400108e2:	jne    0x1400108be
   1400108e4:	mov    rdx,QWORD PTR [rcx]
   1400108e7:	xor    edi,edi
   1400108e9:	test   rdx,rdx
   1400108ec:	je     0x140010901
   1400108ee:	mov    rax,QWORD PTR [rip+0x21a9b]        # 0x140032390
   1400108f5:	mov    rcx,QWORD PTR [rax]
   1400108f8:	mov    rax,QWORD PTR [rcx]
   1400108fb:	call   QWORD PTR [rax+0x28]
   1400108fe:	mov    QWORD PTR [rbx],rdi
   140010901:	mov    DWORD PTR [rbx+0x8],edi
   140010904:	mov    rbx,QWORD PTR [rsp+0x38]
   140010909:	mov    rbp,QWORD PTR [rsp+0x40]
   14001090e:	add    rsp,0x20
   140010912:	pop    rdi
   140010913:	ret    
   140010914:	test   DWORD PTR [rcx+0xc],0xc0000000
   14001091b:	jne    0x1400108be
   14001091d:	cmp    r9d,eax
   140010920:	je     0x1400108be
   140010922:	mov    rdx,QWORD PTR [rcx]
   140010925:	test   rdx,rdx
   140010928:	je     0x1400108be
   14001092a:	mov    DWORD PTR [rcx+0x8],r9d
   14001092e:	mov    rax,QWORD PTR [rip+0x21a5b]        # 0x140032390
   140010935:	movsxd r8,r9d
   140010938:	shl    r8,0x2
   14001093c:	mov    rcx,QWORD PTR [rax]
   14001093f:	mov    rax,QWORD PTR [rcx]
   140010942:	call   QWORD PTR [rax+0x18]
   140010945:	mov    rbp,QWORD PTR [rsp+0x40]
   14001094a:	mov    QWORD PTR [rbx],rax
   14001094d:	mov    rbx,QWORD PTR [rsp+0x38]
   140010952:	add    rsp,0x20
   140010956:	pop    rdi
   140010957:	ret    
   140010958:	int3   
   140010959:	int3   
   14001095a:	int3   
   14001095b:	int3   
   14001095c:	int3   
   14001095d:	int3   
   14001095e:	int3   
   14001095f:	int3   
   140010960:	rex push rsi
   140010962:	push   rdi
   140010963:	push   r14
   140010965:	push   r15
   140010967:	sub    rsp,0x28
   14001096b:	movsxd rsi,r8d
   14001096e:	mov    r15,rdx
   140010971:	mov    r14,rcx
   140010974:	test   rdx,rdx
   140010977:	je     0x14001097d
   140010979:	mov    edi,DWORD PTR [rdx]
   14001097b:	jmp    0x14001097f
   14001097d:	xor    edi,edi
   14001097f:	cmp    esi,edi
   140010981:	jne    0x140010991
   140010983:	mov    rax,r15
   140010986:	add    rsp,0x28
   14001098a:	pop    r15
   14001098c:	pop    r14
   14001098e:	pop    rdi
   14001098f:	pop    rsi
   140010990:	ret    
   140010991:	test   r8d,r8d
   140010994:	jne    0x1400109ad
   140010996:	test   r15,r15
   140010999:	je     0x1400109ad
   14001099b:	call   0x14000e6b0
   1400109a0:	xor    eax,eax
   1400109a2:	add    rsp,0x28
   1400109a6:	pop    r15
   1400109a8:	pop    r14
   1400109aa:	pop    rdi
   1400109ab:	pop    rsi
   1400109ac:	ret    
   1400109ad:	mov    rax,QWORD PTR [rip+0x219dc]        # 0x140032390
   1400109b4:	lea    rdx,[rsi*8+0x8]
   1400109bc:	mov    QWORD PTR [rsp+0x50],rbx
   1400109c1:	mov    QWORD PTR [rsp+0x60],rbp
   1400109c6:	mov    QWORD PTR [rsp+0x68],r12
   1400109cb:	mov    rcx,QWORD PTR [rax]
   1400109ce:	mov    QWORD PTR [rsp+0x20],r13
   1400109d3:	mov    rax,QWORD PTR [rcx]
   1400109d6:	call   QWORD PTR [rax+0x8]
   1400109d9:	xor    r9d,r9d
   1400109dc:	mov    QWORD PTR [rsp+0x58],rax
   1400109e1:	cmp    esi,edi
   1400109e3:	lea    r12,[r15+0x8]
   1400109e7:	mov    ecx,edi
   1400109e9:	cmovl  ecx,esi
   1400109ec:	mov    QWORD PTR [rax],rsi
   1400109ef:	movsxd rdx,ecx
   1400109f2:	lea    r13,[rax+0x8]
   1400109f6:	test   ecx,ecx
   1400109f8:	jle    0x140010a28
   1400109fa:	mov    r8,r13
   1400109fd:	mov    rcx,r12
   140010a00:	sub    r8,r12
   140010a03:	mov    r9d,edx
   140010a06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010a10:	mov    rax,QWORD PTR [rcx]
   140010a13:	mov    QWORD PTR [r8+rcx*1],rax
   140010a17:	mov    QWORD PTR [rcx],0x0
   140010a1e:	lea    rcx,[rcx+0x8]
   140010a22:	sub    rdx,0x1
   140010a26:	jne    0x140010a10
   140010a28:	movsxd rbx,r9d
   140010a2b:	cmp    esi,edi
   140010a2d:	jle    0x140010ab5
   140010a33:	cmp    rbx,rsi
   140010a36:	jge    0x140010b1e
   140010a3c:	mov    rdi,r14
   140010a3f:	and    rdi,0xfffffffffffffc00
   140010a46:	data16 nop WORD PTR [rax+rax*1+0x0]
   140010a50:	test   BYTE PTR [r14],0x1
   140010a54:	mov    eax,0x0
   140010a59:	cmove  rax,rdi
   140010a5d:	test   rax,rax
   140010a60:	je     0x140010a67
   140010a62:	mov    rcx,QWORD PTR [rax]
   140010a65:	jmp    0x140010a69
   140010a67:	xor    ecx,ecx
   140010a69:	test   rcx,rcx
   140010a6c:	je     0x140010a78
   140010a6e:	call   0x14000cec0
   140010a73:	mov    rcx,rax
   140010a76:	jmp    0x140010aa6
   140010a78:	mov    ecx,0x10
   140010a7d:	call   0x140007bf0
   140010a82:	mov    rcx,rax
   140010a85:	test   rax,rax
   140010a88:	je     0x140010aa4
   140010a8a:	mov    rax,QWORD PTR [rax]
   140010a8d:	and    rax,0xffffffffffe00003
   140010a93:	mov    QWORD PTR [rcx+0x8],0x0
   140010a9b:	or     rax,0x3
   140010a9f:	mov    QWORD PTR [rcx],rax
   140010aa2:	jmp    0x140010aa6
   140010aa4:	xor    ecx,ecx
   140010aa6:	mov    QWORD PTR [r13+rbx*8+0x0],rcx
   140010aab:	inc    rbx
   140010aae:	cmp    rbx,rsi
   140010ab1:	jl     0x140010a50
   140010ab3:	jmp    0x140010b1e
   140010ab5:	movsxd rsi,edi
   140010ab8:	cmp    rbx,rsi
   140010abb:	jge    0x140010b1e
   140010abd:	mov    rbp,r14
   140010ac0:	and    rbp,0xfffffffffffffc00
   140010ac7:	nop    WORD PTR [rax+rax*1+0x0]
   140010ad0:	test   BYTE PTR [r14],0x1
   140010ad4:	mov    eax,0x0
   140010ad9:	mov    rdi,QWORD PTR [r12+rbx*8]
   140010add:	cmove  rax,rbp
   140010ae1:	test   rax,rax
   140010ae4:	je     0x140010aeb
   140010ae6:	mov    rcx,QWORD PTR [rax]
   140010ae9:	jmp    0x140010aed
   140010aeb:	xor    ecx,ecx
   140010aed:	test   rcx,rcx
   140010af0:	je     0x140010afc
   140010af2:	mov    rdx,rdi
   140010af5:	call   0x14000e790
   140010afa:	jmp    0x140010b16
   140010afc:	test   rdi,rdi
   140010aff:	je     0x140010b16
   140010b01:	mov    rcx,rdi
   140010b04:	call   0x14000f9e0
   140010b09:	mov    edx,0x10
   140010b0e:	mov    rcx,rdi
   140010b11:	call   0x14002639c
   140010b16:	inc    rbx
   140010b19:	cmp    rbx,rsi
   140010b1c:	jl     0x140010ad0
   140010b1e:	mov    rax,QWORD PTR [rip+0x2186b]        # 0x140032390
   140010b25:	mov    rdx,r15
   140010b28:	mov    rcx,QWORD PTR [rax]
   140010b2b:	mov    rax,QWORD PTR [rcx]
   140010b2e:	call   QWORD PTR [rax+0x28]
   140010b31:	mov    rax,QWORD PTR [rsp+0x58]
   140010b36:	mov    r13,QWORD PTR [rsp+0x20]
   140010b3b:	mov    r12,QWORD PTR [rsp+0x68]
   140010b40:	mov    rbp,QWORD PTR [rsp+0x60]
   140010b45:	mov    rbx,QWORD PTR [rsp+0x50]
   140010b4a:	add    rsp,0x28
   140010b4e:	pop    r15
   140010b50:	pop    r14
   140010b52:	pop    rdi
   140010b53:	pop    rsi
   140010b54:	ret    
   140010b55:	int3   
   140010b56:	int3   
   140010b57:	int3   
   140010b58:	int3   
   140010b59:	int3   
   140010b5a:	int3   
   140010b5b:	int3   
   140010b5c:	int3   
   140010b5d:	int3   
   140010b5e:	int3   
   140010b5f:	int3   
   140010b60:	mov    QWORD PTR [rsp+0x8],rbx
   140010b65:	mov    QWORD PTR [rsp+0x10],rbp
   140010b6a:	mov    QWORD PTR [rsp+0x18],rsi
   140010b6f:	push   rdi
   140010b70:	sub    rsp,0x20
   140010b74:	mov    rax,QWORD PTR [rcx+0x98]
   140010b7b:	mov    rbx,rcx
   140010b7e:	movsxd rdi,r8d
   140010b81:	xor    ecx,ecx
   140010b83:	mov    r8d,ecx
   140010b86:	mov    rsi,QWORD PTR [rax+rdi*8]
   140010b8a:	movzx  eax,BYTE PTR [rdx]
   140010b8d:	and    rdx,0xfffffffffffffc00
   140010b94:	and    al,0x1
   140010b96:	cmove  r8,rdx
   140010b9a:	test   r8,r8
   140010b9d:	je     0x140010ba2
   140010b9f:	mov    rcx,QWORD PTR [r8]
   140010ba2:	test   rcx,rcx
   140010ba5:	je     0x140010bb1
   140010ba7:	mov    rdx,rsi
   140010baa:	call   0x14000e790
   140010baf:	jmp    0x140010bcb
   140010bb1:	test   rsi,rsi
   140010bb4:	je     0x140010bcb
   140010bb6:	mov    rcx,rsi
   140010bb9:	call   0x14000f9e0
   140010bbe:	mov    edx,0x10
   140010bc3:	mov    rcx,rsi
   140010bc6:	call   0x14002639c
   140010bcb:	mov    eax,DWORD PTR [rbx+0x90]
   140010bd1:	sub    eax,edi
   140010bd3:	dec    eax
   140010bd5:	test   eax,eax
   140010bd7:	jle    0x140010bfa
   140010bd9:	mov    r9,QWORD PTR [rbx+0x98]
   140010be0:	movsxd r8,eax
   140010be3:	lea    eax,[rdi+0x1]
   140010be6:	movsxd rcx,eax
   140010be9:	shl    r8,0x3
   140010bed:	lea    rdx,[r9+rcx*8]
   140010bf1:	lea    rcx,[r9+rdi*8]
   140010bf5:	call   0x140026f70
   140010bfa:	dec    DWORD PTR [rbx+0x90]
   140010c00:	mov    eax,DWORD PTR [rbx+0x38]
   140010c03:	sub    eax,edi
   140010c05:	dec    eax
   140010c07:	test   eax,eax
   140010c09:	jle    0x140010c29
   140010c0b:	mov    r9,QWORD PTR [rbx+0x40]
   140010c0f:	movsxd r8,eax
   140010c12:	lea    eax,[rdi+0x1]
   140010c15:	movsxd rcx,eax
   140010c18:	shl    r8,0x3
   140010c1c:	lea    rdx,[r9+rcx*8]
   140010c20:	lea    rcx,[r9+rdi*8]
   140010c24:	call   0x140026f70
   140010c29:	dec    DWORD PTR [rbx+0x38]
   140010c2c:	mov    eax,DWORD PTR [rbx]
   140010c2e:	sub    eax,edi
   140010c30:	dec    eax
   140010c32:	test   eax,eax
   140010c34:	jle    0x140010c54
   140010c36:	mov    r9,QWORD PTR [rbx+0x8]
   140010c3a:	movsxd r8,eax
   140010c3d:	lea    eax,[rdi+0x1]
   140010c40:	movsxd rcx,eax
   140010c43:	shl    r8,0x2
   140010c47:	lea    rdx,[r9+rcx*4]
   140010c4b:	lea    rcx,[r9+rdi*4]
   140010c4f:	call   0x140026f70
   140010c54:	dec    DWORD PTR [rbx]
   140010c56:	mov    eax,DWORD PTR [rbx+0xe8]
   140010c5c:	sub    eax,edi
   140010c5e:	dec    eax
   140010c60:	test   eax,eax
   140010c62:	jle    0x140010c7f
   140010c64:	mov    rcx,QWORD PTR [rbx+0xf0]
   140010c6b:	movsxd r8,eax
   140010c6e:	lea    eax,[rdi+0x1]
   140010c71:	movsxd rdx,eax
   140010c74:	add    rdx,rcx
   140010c77:	add    rcx,rdi
   140010c7a:	call   0x140026f70
   140010c7f:	dec    DWORD PTR [rbx+0xe8]
   140010c85:	mov    rbx,QWORD PTR [rsp+0x30]
   140010c8a:	mov    rbp,QWORD PTR [rsp+0x38]
   140010c8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140010c94:	add    rsp,0x20
   140010c98:	pop    rdi
   140010c99:	ret    
   140010c9a:	int3   
   140010c9b:	int3   
   140010c9c:	int3   
   140010c9d:	int3   
   140010c9e:	int3   
   140010c9f:	int3   
   140010ca0:	mov    QWORD PTR [rsp+0x10],rbx
   140010ca5:	mov    QWORD PTR [rsp+0x18],rsi
   140010caa:	push   rdi
   140010cab:	sub    rsp,0x20
   140010caf:	movsxd rax,DWORD PTR [rcx]
   140010cb2:	xor    r9d,r9d
   140010cb5:	mov    rbx,rcx
   140010cb8:	mov    edi,r9d
   140010cbb:	test   eax,eax
   140010cbd:	jle    0x140010ce3
   140010cbf:	mov    rsi,QWORD PTR [rcx+0x98]
   140010cc6:	mov    r10,rax
   140010cc9:	mov    rax,rsi
   140010ccc:	mov    ecx,r9d
   140010ccf:	nop
   140010cd0:	cmp    QWORD PTR [rax],r8
   140010cd3:	je     0x140010cf5
   140010cd5:	inc    edi
   140010cd7:	inc    rcx
   140010cda:	add    rax,0x8
   140010cde:	cmp    rcx,r10
   140010ce1:	jl     0x140010cd0
   140010ce3:	xor    al,al
   140010ce5:	mov    rbx,QWORD PTR [rsp+0x38]
   140010cea:	mov    rsi,QWORD PTR [rsp+0x40]
   140010cef:	add    rsp,0x20
   140010cf3:	pop    rdi
   140010cf4:	ret    
   140010cf5:	movzx  eax,BYTE PTR [rdx]
   140010cf8:	mov    rcx,r9
   140010cfb:	and    rdx,0xfffffffffffffc00
   140010d02:	mov    QWORD PTR [rsp+0x30],rbp
   140010d07:	and    al,0x1
   140010d09:	movsxd rbp,edi
   140010d0c:	cmove  rcx,rdx
   140010d10:	mov    rsi,QWORD PTR [rsi+rbp*8]
   140010d14:	test   rcx,rcx
   140010d17:	je     0x140010d1c
   140010d19:	mov    r9,QWORD PTR [rcx]
   140010d1c:	test   r9,r9
   140010d1f:	je     0x140010d2e
   140010d21:	mov    rdx,rsi
   140010d24:	mov    rcx,r9
   140010d27:	call   0x14000e790
   140010d2c:	jmp    0x140010d48
   140010d2e:	test   rsi,rsi
   140010d31:	je     0x140010d48
   140010d33:	mov    rcx,rsi
   140010d36:	call   0x14000f9e0
   140010d3b:	mov    edx,0x10
   140010d40:	mov    rcx,rsi
   140010d43:	call   0x14002639c
   140010d48:	mov    eax,DWORD PTR [rbx+0x90]
   140010d4e:	sub    eax,edi
   140010d50:	dec    eax
   140010d52:	test   eax,eax
   140010d54:	jle    0x140010d77
   140010d56:	mov    r9,QWORD PTR [rbx+0x98]
   140010d5d:	movsxd r8,eax
   140010d60:	lea    eax,[rdi+0x1]
   140010d63:	movsxd rcx,eax
   140010d66:	shl    r8,0x3
   140010d6a:	lea    rdx,[r9+rcx*8]
   140010d6e:	lea    rcx,[r9+rbp*8]
   140010d72:	call   0x140026f70
   140010d77:	dec    DWORD PTR [rbx+0x90]
   140010d7d:	mov    eax,DWORD PTR [rbx+0x38]
   140010d80:	sub    eax,edi
   140010d82:	dec    eax
   140010d84:	test   eax,eax
   140010d86:	jle    0x140010da6
   140010d88:	mov    r9,QWORD PTR [rbx+0x40]
   140010d8c:	movsxd r8,eax
   140010d8f:	lea    eax,[rdi+0x1]
   140010d92:	movsxd rcx,eax
   140010d95:	shl    r8,0x3
   140010d99:	lea    rdx,[r9+rcx*8]
   140010d9d:	lea    rcx,[r9+rbp*8]
   140010da1:	call   0x140026f70
   140010da6:	dec    DWORD PTR [rbx+0x38]
   140010da9:	mov    eax,DWORD PTR [rbx]
   140010dab:	sub    eax,edi
   140010dad:	dec    eax
   140010daf:	test   eax,eax
   140010db1:	jle    0x140010dd1
   140010db3:	mov    r9,QWORD PTR [rbx+0x8]
   140010db7:	movsxd r8,eax
   140010dba:	lea    eax,[rdi+0x1]
   140010dbd:	movsxd rcx,eax
   140010dc0:	shl    r8,0x2
   140010dc4:	lea    rdx,[r9+rcx*4]
   140010dc8:	lea    rcx,[r9+rbp*4]
   140010dcc:	call   0x140026f70
   140010dd1:	dec    DWORD PTR [rbx]
   140010dd3:	mov    eax,DWORD PTR [rbx+0xe8]
   140010dd9:	sub    eax,edi
   140010ddb:	dec    eax
   140010ddd:	test   eax,eax
   140010ddf:	jle    0x140010dfc
   140010de1:	mov    rcx,QWORD PTR [rbx+0xf0]
   140010de8:	movsxd r8,eax
   140010deb:	lea    eax,[rdi+0x1]
   140010dee:	movsxd rdx,eax
   140010df1:	add    rdx,rcx
   140010df4:	add    rcx,rbp
   140010df7:	call   0x140026f70
   140010dfc:	dec    DWORD PTR [rbx+0xe8]
   140010e02:	mov    al,0x1
   140010e04:	mov    rbx,QWORD PTR [rsp+0x38]
   140010e09:	mov    rbp,QWORD PTR [rsp+0x30]
   140010e0e:	mov    rsi,QWORD PTR [rsp+0x40]
   140010e13:	add    rsp,0x20
   140010e17:	pop    rdi
   140010e18:	ret    
   140010e19:	int3   
   140010e1a:	int3   
   140010e1b:	int3   
   140010e1c:	int3   
   140010e1d:	int3   
   140010e1e:	int3   
   140010e1f:	int3   
   140010e20:	mov    rdx,QWORD PTR [rcx+0x30]
   140010e24:	mov    r9,rcx
   140010e27:	cmp    rdx,0xffffffffffffffff
   140010e2b:	je     0x140010ecc
   140010e31:	cmp    DWORD PTR [rcx+0x10],0x0
   140010e35:	jle    0x140010ebc
   140010e3b:	xor    eax,eax
   140010e3d:	nop    DWORD PTR [rax]
   140010e40:	test   rax,rax
   140010e43:	js     0x140010e9a
   140010e45:	movsxd rcx,DWORD PTR [r9+0x10]
   140010e49:	cmp    rax,rcx
   140010e4c:	jge    0x140010e9a
   140010e4e:	cmp    rax,rdx
   140010e51:	jg     0x140010e9a
   140010e53:	cmp    rax,0xffffffffffffffff
   140010e57:	je     0x140010e67
   140010e59:	mov    rcx,QWORD PTR [r9+0x8]
   140010e5d:	lea    rdx,[rax+rax*4]
   140010e61:	mov    r8,QWORD PTR [rcx+rdx*8]
   140010e65:	jmp    0x140010e6b
   140010e67:	or     r8,0xffffffffffffffff
   140010e6b:	cmp    r8,rax
   140010e6e:	setne  cl
   140010e71:	test   cl,cl
   140010e73:	je     0x140010e9a
   140010e75:	mov    rdx,QWORD PTR [r9+0x8]
   140010e79:	lea    rcx,[rax+rax*4]
   140010e7d:	lea    r8,[rcx*8+0x0]
   140010e85:	mov    rcx,QWORD PTR [r9+0x28]
   140010e89:	mov    QWORD PTR [rdx+r8*1+0x8],rcx
   140010e8e:	mov    rcx,QWORD PTR [r9+0x8]
   140010e92:	mov    QWORD PTR [r8+rcx*1],rax
   140010e96:	mov    QWORD PTR [r9+0x28],rax
   140010e9a:	mov    rdx,QWORD PTR [r9+0x30]
   140010e9e:	cmp    rax,rdx
   140010ea1:	je     0x140010ebc
   140010ea3:	add    rax,0x1
   140010ea7:	js     0x140010eb2
   140010ea9:	movsxd rcx,DWORD PTR [r9+0x10]
   140010ead:	cmp    rax,rcx
   140010eb0:	jl     0x140010eb6
   140010eb2:	or     rax,0xffffffffffffffff
   140010eb6:	cmp    rax,0xffffffffffffffff
   140010eba:	jne    0x140010e40
   140010ebc:	mov    QWORD PTR [r9+0x18],0xffffffffffffffff
   140010ec4:	mov    QWORD PTR [r9+0x20],0x0
   140010ecc:	ret    
   140010ecd:	int3   
   140010ece:	int3   
   140010ecf:	int3   
   140010ed0:	mov    QWORD PTR [rsp+0x18],rbx
   140010ed5:	push   rbp
   140010ed6:	sub    rsp,0x20
   140010eda:	mov    QWORD PTR [rsp+0x38],rdi
   140010edf:	mov    rbx,rcx
   140010ee2:	call   0x140010e20
   140010ee7:	xor    ebp,ebp
   140010ee9:	mov    QWORD PTR [rbx+0x28],0xffffffffffffffff
   140010ef1:	test   DWORD PTR [rbx+0x14],0xc0000000
   140010ef8:	jne    0x140010f1a
   140010efa:	mov    rdx,QWORD PTR [rbx+0x8]
   140010efe:	test   rdx,rdx
   140010f01:	je     0x140010f17
   140010f03:	mov    rax,QWORD PTR [rip+0x21486]        # 0x140032390
   140010f0a:	mov    rcx,QWORD PTR [rax]
   140010f0d:	mov    rax,QWORD PTR [rcx]
   140010f10:	call   QWORD PTR [rax+0x28]
   140010f13:	mov    QWORD PTR [rbx+0x8],rbp
   140010f17:	mov    DWORD PTR [rbx+0x10],ebp
   140010f1a:	mov    QWORD PTR [rbx+0x30],0xffffffffffffffff
   140010f22:	mov    edi,ebp
   140010f24:	cmp    DWORD PTR [rbx+0x40],ebp
   140010f27:	jle    0x140010f59
   140010f29:	mov    QWORD PTR [rsp+0x30],rsi
   140010f2e:	mov    rsi,rbp
   140010f31:	mov    rax,QWORD PTR [rip+0x21458]        # 0x140032390
   140010f38:	mov    rdx,QWORD PTR [rbx+0x48]
   140010f3c:	mov    rcx,QWORD PTR [rax]
   140010f3f:	mov    rdx,QWORD PTR [rdx+rsi*1]
   140010f43:	mov    rax,QWORD PTR [rcx]
   140010f46:	call   QWORD PTR [rax+0x28]
   140010f49:	inc    edi
   140010f4b:	lea    rsi,[rsi+0x8]
   140010f4f:	cmp    edi,DWORD PTR [rbx+0x40]
   140010f52:	jl     0x140010f31
   140010f54:	mov    rsi,QWORD PTR [rsp+0x30]
   140010f59:	mov    rdi,QWORD PTR [rsp+0x38]
   140010f5e:	mov    DWORD PTR [rbx+0x40],ebp
   140010f61:	test   DWORD PTR [rbx+0x54],0xc0000000
   140010f68:	jne    0x140010f8a
   140010f6a:	mov    rdx,QWORD PTR [rbx+0x48]
   140010f6e:	test   rdx,rdx
   140010f71:	je     0x140010f87
   140010f73:	mov    rax,QWORD PTR [rip+0x21416]        # 0x140032390
   140010f7a:	mov    rcx,QWORD PTR [rax]
   140010f7d:	mov    rax,QWORD PTR [rcx]
   140010f80:	call   QWORD PTR [rax+0x28]
   140010f83:	mov    QWORD PTR [rbx+0x48],rbp
   140010f87:	mov    DWORD PTR [rbx+0x50],ebp
   140010f8a:	mov    rbx,QWORD PTR [rsp+0x40]
   140010f8f:	add    rsp,0x20
   140010f93:	pop    rbp
   140010f94:	ret    
   140010f95:	int3   
   140010f96:	int3   
   140010f97:	int3   
   140010f98:	int3   
   140010f99:	int3   
   140010f9a:	int3   
   140010f9b:	int3   
   140010f9c:	int3   
   140010f9d:	int3   
   140010f9e:	int3   
   140010f9f:	int3   
   140010fa0:	sub    rsp,0x28
   140010fa4:	mov    r8,QWORD PTR [rcx]
   140010fa7:	mov    r10,rcx
   140010faa:	mov    r9,r8
   140010fad:	and    r9d,0x1e
   140010fb1:	lea    rax,[r9-0x14]
   140010fb5:	test   rax,0xfffffffffffffff9
   140010fbb:	jne    0x140010fc3
   140010fbd:	cmp    r9,0x1a
   140010fc1:	jne    0x140010fee
   140010fc3:	shr    r8b,1
   140010fc6:	and    r8b,0xf
   140010fca:	cmp    r8b,0x9
   140010fce:	jne    0x140010fee
   140010fd0:	mov    rcx,QWORD PTR [rcx+0x8]
   140010fd4:	test   edx,edx
   140010fd6:	js     0x140010fee
   140010fd8:	cmp    edx,DWORD PTR [rcx]
   140010fda:	jge    0x140010fee
   140010fdc:	mov    r8d,edx
   140010fdf:	mov    rdx,r10
   140010fe2:	call   0x140010b60
   140010fe7:	mov    al,0x1
   140010fe9:	add    rsp,0x28
   140010fed:	ret    
   140010fee:	xor    al,al
   140010ff0:	add    rsp,0x28
   140010ff4:	ret    
   140010ff5:	int3   
   140010ff6:	int3   
   140010ff7:	int3   
   140010ff8:	int3   
   140010ff9:	int3   
   140010ffa:	int3   
   140010ffb:	int3   
   140010ffc:	int3   
   140010ffd:	int3   
   140010ffe:	int3   
   140010fff:	int3   
   140011000:	mov    r8,QWORD PTR [rcx]
   140011003:	movzx  eax,r8b
   140011007:	and    al,0x1e
   140011009:	cmp    al,0x12
   14001100b:	je     0x140011010
   14001100d:	xor    al,al
   14001100f:	ret    
   140011010:	shr    r8b,1
   140011013:	and    r8b,0xf
   140011017:	cmp    r8b,0x9
   14001101b:	jne    0x14001102f
   14001101d:	mov    rax,QWORD PTR [rcx+0x8]
   140011021:	mov    r8,rdx
   140011024:	mov    rdx,rcx
   140011027:	mov    rcx,rax
   14001102a:	jmp    0x140010ca0
   14001102f:	xor    eax,eax
   140011031:	mov    r8,rdx
   140011034:	mov    rdx,rcx
   140011037:	mov    ecx,eax
   140011039:	jmp    0x140010ca0
   14001103e:	int3   
   14001103f:	int3   
   140011040:	mov    QWORD PTR [rsp+0x10],rbx
   140011045:	mov    QWORD PTR [rsp+0x20],rsi
   14001104a:	mov    DWORD PTR [rsp+0x18],r8d
   14001104f:	push   r14
   140011051:	sub    rsp,0x20
   140011055:	mov    rsi,rdx
   140011058:	mov    ebx,r8d
   14001105b:	mov    r8,QWORD PTR [rcx]
   14001105e:	mov    r14,rcx
   140011061:	mov    rdx,r8
   140011064:	and    edx,0x1e
   140011067:	lea    rax,[rdx-0x14]
   14001106b:	test   rax,0xfffffffffffffff9
   140011071:	jne    0x140011079
   140011073:	cmp    rdx,0x1a
   140011077:	jne    0x140011086
   140011079:	shr    r8b,1
   14001107c:	and    r8b,0xf
   140011080:	cmp    r8b,0x9
   140011084:	je     0x140011099
   140011086:	xor    al,al
   140011088:	mov    rbx,QWORD PTR [rsp+0x38]
   14001108d:	mov    rsi,QWORD PTR [rsp+0x48]
   140011092:	add    rsp,0x20
   140011096:	pop    r14
   140011098:	ret    
   140011099:	mov    QWORD PTR [rsp+0x30],rdi
   14001109e:	xor    edi,edi
   1400110a0:	test   ebx,ebx
   1400110a2:	jne    0x1400110dc
   1400110a4:	mov    ebx,edi
   1400110a6:	test   rsi,rsi
   1400110a9:	je     0x1400110d8
   1400110ab:	cmp    BYTE PTR [rsi],bl
   1400110ad:	je     0x1400110d8
   1400110af:	mov    edx,0x31415926
   1400110b4:	mov    rcx,rsi
   1400110b7:	call   0x140022790
   1400110bc:	cmp    BYTE PTR [rip+0x371a5],dil        # 0x140048268
   1400110c3:	mov    ebx,eax
   1400110c5:	je     0x1400110d8
   1400110c7:	mov    r9b,0x1
   1400110ca:	xor    r8d,r8d
   1400110cd:	mov    rdx,rsi
   1400110d0:	mov    ecx,eax
   1400110d2:	call   QWORD PTR [rip+0x214e8]        # 0x1400325c0
   1400110d8:	mov    DWORD PTR [rsp+0x40],ebx
   1400110dc:	mov    rcx,QWORD PTR [r14]
   1400110df:	mov    rdx,rcx
   1400110e2:	and    edx,0x1e
   1400110e5:	lea    rax,[rdx-0x14]
   1400110e9:	test   rax,0xfffffffffffffff9
   1400110ef:	jne    0x1400110f7
   1400110f1:	cmp    rdx,0x1a
   1400110f5:	jne    0x140011107
   1400110f7:	shr    cl,1
   1400110f9:	and    cl,0xf
   1400110fc:	cmp    cl,0x9
   1400110ff:	jne    0x140011107
   140011101:	mov    r9,QWORD PTR [r14+0x8]
   140011105:	jmp    0x14001110a
   140011107:	mov    r9,rdi
   14001110a:	movsxd rax,DWORD PTR [r9]
   14001110d:	test   eax,eax
   14001110f:	jle    0x140011132
   140011111:	mov    rdx,rax
   140011114:	mov    rcx,rdi
   140011117:	mov    rax,QWORD PTR [r9+0x8]
   14001111b:	nop    DWORD PTR [rax+rax*1+0x0]
   140011120:	cmp    ebx,DWORD PTR [rax]
   140011122:	je     0x14001114a
   140011124:	inc    edi
   140011126:	inc    rcx
   140011129:	add    rax,0x4
   14001112d:	cmp    rcx,rdx
   140011130:	jl     0x140011120
   140011132:	xor    al,al
   140011134:	mov    rdi,QWORD PTR [rsp+0x30]
   140011139:	mov    rbx,QWORD PTR [rsp+0x38]
   14001113e:	mov    rsi,QWORD PTR [rsp+0x48]
   140011143:	add    rsp,0x20
   140011147:	pop    r14
   140011149:	ret    
   14001114a:	cmp    edi,0xffffffff
   14001114d:	je     0x140011132
   14001114f:	mov    r8d,edi
   140011152:	mov    rdx,r14
   140011155:	mov    rcx,r9
   140011158:	call   0x140010b60
   14001115d:	mov    al,0x1
   14001115f:	jmp    0x140011134
   140011161:	int3   
   140011162:	int3   
   140011163:	int3   
   140011164:	int3   
   140011165:	int3   
   140011166:	int3   
   140011167:	int3   
   140011168:	int3   
   140011169:	int3   
   14001116a:	int3   
   14001116b:	int3   
   14001116c:	int3   
   14001116d:	int3   
   14001116e:	int3   
   14001116f:	int3   
   140011170:	lea    rax,[rcx+0x18]
   140011174:	ret    
   140011175:	int3   
   140011176:	int3   
   140011177:	int3   
   140011178:	int3   
   140011179:	int3   
   14001117a:	int3   
   14001117b:	int3   
   14001117c:	int3   
   14001117d:	int3   
   14001117e:	int3   
   14001117f:	int3   
   140011180:	sub    rsp,0x8
   140011184:	mov    r8,rcx
   140011187:	or     rcx,0xffffffffffffffff
   14001118b:	cmp    rdx,rcx
   14001118e:	je     0x1400111ac
   140011190:	mov    r10,QWORD PTR [r8+0x8]
   140011194:	lea    rax,[rdx+rdx*4]
   140011198:	mov    r9,QWORD PTR [r10+rax*8+0x8]
   14001119d:	cmp    r9,rcx
   1400111a0:	je     0x1400111af
   1400111a2:	lea    rax,[r9+r9*4]
   1400111a6:	mov    r11,QWORD PTR [r10+rax*8]
   1400111aa:	jmp    0x1400111b2
   1400111ac:	mov    r9,rcx
   1400111af:	mov    r11,rcx
   1400111b2:	lea    rax,[rdx+rdx*4]
   1400111b6:	lea    r10,[rax*8+0x0]
   1400111be:	mov    rax,QWORD PTR [r8+0x8]
   1400111c2:	mov    QWORD PTR [rax+r10*1+0x8],r11
   1400111c7:	cmp    r9,0xffffffffffffffff
   1400111cb:	je     0x140011215
   1400111cd:	mov    r11,QWORD PTR [r8+0x8]
   1400111d1:	lea    rax,[r9+r9*4]
   1400111d5:	mov    QWORD PTR [rsp],rbx
   1400111d9:	lea    rbx,[rax*8+0x0]
   1400111e1:	mov    rax,QWORD PTR [rbx+r11*1]
   1400111e5:	cmp    rax,0xffffffffffffffff
   1400111e9:	je     0x1400111f4
   1400111eb:	lea    rax,[rax+rax*4]
   1400111ef:	mov    QWORD PTR [r11+rax*8+0x10],rdx
   1400111f4:	cmp    rdx,0xffffffffffffffff
   1400111f8:	je     0x140011205
   1400111fa:	mov    rax,QWORD PTR [r8+0x8]
   1400111fe:	mov    r11,QWORD PTR [rax+r10*1+0x10]
   140011203:	jmp    0x140011208
   140011205:	mov    r11,rcx
   140011208:	mov    rax,QWORD PTR [r8+0x8]
   14001120c:	mov    QWORD PTR [rax+rbx*1+0x10],r11
   140011211:	mov    rbx,QWORD PTR [rsp]
   140011215:	cmp    rdx,QWORD PTR [r8+0x18]
   140011219:	je     0x14001127d
   14001121b:	cmp    rdx,0xffffffffffffffff
   14001121f:	je     0x14001123a
   140011221:	mov    r11,QWORD PTR [r8+0x8]
   140011225:	mov    rax,QWORD PTR [r11+r10*1+0x10]
   14001122a:	cmp    rax,0xffffffffffffffff
   14001122e:	je     0x14001123a
   140011230:	lea    rax,[rax+rax*4]
   140011234:	mov    r11,QWORD PTR [r11+rax*8]
   140011238:	jmp    0x14001123d
   14001123a:	mov    r11,rcx
   14001123d:	cmp    r11,rdx
   140011240:	jne    0x14001125f
   140011242:	cmp    rdx,0xffffffffffffffff
   140011246:	je     0x140011251
   140011248:	mov    rax,QWORD PTR [r8+0x8]
   14001124c:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   140011251:	mov    rax,QWORD PTR [r8+0x8]
   140011255:	lea    rcx,[rcx+rcx*4]
   140011259:	mov    QWORD PTR [rax+rcx*8],r9
   14001125d:	jmp    0x140011281
   14001125f:	cmp    rdx,0xffffffffffffffff
   140011263:	je     0x14001126e
   140011265:	mov    rax,QWORD PTR [r8+0x8]
   140011269:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   14001126e:	mov    rax,QWORD PTR [r8+0x8]
   140011272:	lea    rcx,[rcx+rcx*4]
   140011276:	mov    QWORD PTR [rax+rcx*8+0x8],r9
   14001127b:	jmp    0x140011281
   14001127d:	mov    QWORD PTR [r8+0x18],r9
   140011281:	mov    rax,QWORD PTR [r8+0x8]
   140011285:	lea    rcx,[r9+r9*4]
   140011289:	mov    QWORD PTR [rax+rcx*8],rdx
   14001128d:	cmp    rdx,0xffffffffffffffff
   140011291:	je     0x14001129c
   140011293:	mov    rax,QWORD PTR [r8+0x8]
   140011297:	mov    QWORD PTR [rax+r10*1+0x10],r9
   14001129c:	add    rsp,0x8
   1400112a0:	ret    
   1400112a1:	int3   
   1400112a2:	int3   
   1400112a3:	int3   
   1400112a4:	int3   
   1400112a5:	int3   
   1400112a6:	int3   
   1400112a7:	int3   
   1400112a8:	int3   
   1400112a9:	int3   
   1400112aa:	int3   
   1400112ab:	int3   
   1400112ac:	int3   
   1400112ad:	int3   
   1400112ae:	int3   
   1400112af:	int3   
   1400112b0:	sub    rsp,0x8
   1400112b4:	mov    r8,rcx
   1400112b7:	or     rcx,0xffffffffffffffff
   1400112bb:	cmp    rdx,rcx
   1400112be:	je     0x1400112dc
   1400112c0:	mov    r10,QWORD PTR [r8+0x8]
   1400112c4:	lea    rax,[rdx+rdx*4]
   1400112c8:	mov    r9,QWORD PTR [r10+rax*8]
   1400112cc:	cmp    r9,rcx
   1400112cf:	je     0x1400112df
   1400112d1:	lea    rax,[r9+r9*4]
   1400112d5:	mov    r11,QWORD PTR [r10+rax*8+0x8]
   1400112da:	jmp    0x1400112e2
   1400112dc:	mov    r9,rcx
   1400112df:	mov    r11,rcx
   1400112e2:	lea    rax,[rdx+rdx*4]
   1400112e6:	lea    r10,[rax*8+0x0]
   1400112ee:	mov    rax,QWORD PTR [r8+0x8]
   1400112f2:	mov    QWORD PTR [r10+rax*1],r11
   1400112f6:	cmp    r9,0xffffffffffffffff
   1400112fa:	je     0x140011345
   1400112fc:	mov    r11,QWORD PTR [r8+0x8]
   140011300:	lea    rax,[r9+r9*4]
   140011304:	mov    QWORD PTR [rsp],rbx
   140011308:	lea    rbx,[rax*8+0x0]
   140011310:	mov    rax,QWORD PTR [rbx+r11*1+0x8]
   140011315:	cmp    rax,0xffffffffffffffff
   140011319:	je     0x140011324
   14001131b:	lea    rax,[rax+rax*4]
   14001131f:	mov    QWORD PTR [r11+rax*8+0x10],rdx
   140011324:	cmp    rdx,0xffffffffffffffff
   140011328:	je     0x140011335
   14001132a:	mov    rax,QWORD PTR [r8+0x8]
   14001132e:	mov    r11,QWORD PTR [rax+r10*1+0x10]
   140011333:	jmp    0x140011338
   140011335:	mov    r11,rcx
   140011338:	mov    rax,QWORD PTR [r8+0x8]
   14001133c:	mov    QWORD PTR [rax+rbx*1+0x10],r11
   140011341:	mov    rbx,QWORD PTR [rsp]
   140011345:	cmp    rdx,QWORD PTR [r8+0x18]
   140011349:	je     0x1400113ae
   14001134b:	cmp    rdx,0xffffffffffffffff
   14001134f:	je     0x14001136b
   140011351:	mov    r11,QWORD PTR [r8+0x8]
   140011355:	mov    rax,QWORD PTR [r11+r10*1+0x10]
   14001135a:	cmp    rax,0xffffffffffffffff
   14001135e:	je     0x14001136b
   140011360:	lea    rax,[rax+rax*4]
   140011364:	mov    r11,QWORD PTR [r11+rax*8+0x8]
   140011369:	jmp    0x14001136e
   14001136b:	mov    r11,rcx
   14001136e:	cmp    r11,rdx
   140011371:	jne    0x140011391
   140011373:	cmp    rdx,0xffffffffffffffff
   140011377:	je     0x140011382
   140011379:	mov    rax,QWORD PTR [r8+0x8]
   14001137d:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   140011382:	mov    rax,QWORD PTR [r8+0x8]
   140011386:	lea    rcx,[rcx+rcx*4]
   14001138a:	mov    QWORD PTR [rax+rcx*8+0x8],r9
   14001138f:	jmp    0x1400113b2
   140011391:	cmp    rdx,0xffffffffffffffff
   140011395:	je     0x1400113a0
   140011397:	mov    rax,QWORD PTR [r8+0x8]
   14001139b:	mov    rcx,QWORD PTR [rax+r10*1+0x10]
   1400113a0:	mov    rax,QWORD PTR [r8+0x8]
   1400113a4:	lea    rcx,[rcx+rcx*4]
   1400113a8:	mov    QWORD PTR [rax+rcx*8],r9
   1400113ac:	jmp    0x1400113b2
   1400113ae:	mov    QWORD PTR [r8+0x18],r9
   1400113b2:	mov    rax,QWORD PTR [r8+0x8]
   1400113b6:	lea    rcx,[r9+r9*4]
   1400113ba:	mov    QWORD PTR [rax+rcx*8+0x8],rdx
   1400113bf:	cmp    rdx,0xffffffffffffffff
   1400113c3:	je     0x1400113ce
   1400113c5:	mov    rax,QWORD PTR [r8+0x8]
   1400113c9:	mov    QWORD PTR [rax+r10*1+0x10],r9
   1400113ce:	add    rsp,0x8
   1400113d2:	ret    
   1400113d3:	int3   
   1400113d4:	int3   
   1400113d5:	int3   
   1400113d6:	int3   
   1400113d7:	int3   
   1400113d8:	int3   
   1400113d9:	int3   
   1400113da:	int3   
   1400113db:	int3   
   1400113dc:	int3   
   1400113dd:	int3   
   1400113de:	int3   
   1400113df:	int3   
   1400113e0:	and    QWORD PTR [rcx],0xffffffffffe0001f
   1400113e7:	movzx  eax,dx
   1400113ea:	shl    rax,0x5
   1400113ee:	or     QWORD PTR [rcx],rax
   1400113f1:	ret    
   1400113f2:	int3   
   1400113f3:	int3   
   1400113f4:	int3   
   1400113f5:	int3   
   1400113f6:	int3   
   1400113f7:	int3   
   1400113f8:	int3   
   1400113f9:	int3   
   1400113fa:	int3   
   1400113fb:	int3   
   1400113fc:	int3   
   1400113fd:	int3   
   1400113fe:	int3   
   1400113ff:	int3   
   140011400:	mov    QWORD PTR [rsp+0x8],rbx
   140011405:	push   rdi
   140011406:	sub    rsp,0x20
   14001140a:	mov    r8,QWORD PTR [rcx]
   14001140d:	mov    rbx,rcx
   140011410:	mov    rcx,r8
   140011413:	movsxd rdi,edx
   140011416:	and    ecx,0x1e
   140011419:	lea    rax,[rcx-0x14]
   14001141d:	test   rax,0xfffffffffffffff9
   140011423:	jne    0x14001142b
   140011425:	cmp    rcx,0x1a
   140011429:	jne    0x140011438
   14001142b:	shr    r8b,1
   14001142e:	and    r8b,0xf
   140011432:	cmp    r8b,0x8
   140011436:	je     0x140011442
   140011438:	mov    dl,0x8
   14001143a:	mov    rcx,rbx
   14001143d:	call   0x14000faa0
   140011442:	mov    rdx,QWORD PTR [rbx+0x8]
   140011446:	test   rdx,rdx
   140011449:	je     0x140011450
   14001144b:	cmp    QWORD PTR [rdx],rdi
   14001144e:	je     0x14001145f
   140011450:	mov    r8d,edi
   140011453:	mov    rcx,rbx
   140011456:	call   0x140010960
   14001145b:	mov    QWORD PTR [rbx+0x8],rax
   14001145f:	mov    rbx,QWORD PTR [rsp+0x30]
   140011464:	add    rsp,0x20
   140011468:	pop    rdi
   140011469:	ret    
   14001146a:	int3   
   14001146b:	int3   
   14001146c:	int3   
   14001146d:	int3   
   14001146e:	int3   
   14001146f:	int3   
   140011470:	mov    QWORD PTR [rsp+0x8],rbx
   140011475:	push   rdi
   140011476:	sub    rsp,0x20
   14001147a:	movzx  edi,dl
   14001147d:	mov    rbx,rcx
   140011480:	mov    dl,0x2
   140011482:	call   0x14000faa0
   140011487:	mov    BYTE PTR [rbx+0x8],dil
   14001148b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011490:	add    rsp,0x20
   140011494:	pop    rdi
   140011495:	ret    
   140011496:	int3   
   140011497:	int3   
   140011498:	int3   
   140011499:	int3   
   14001149a:	int3   
   14001149b:	int3   
   14001149c:	int3   
   14001149d:	int3   
   14001149e:	int3   
   14001149f:	int3   
   1400114a0:	rex push rbx
   1400114a2:	sub    rsp,0x30
   1400114a6:	movaps XMMWORD PTR [rsp+0x20],xmm6
   1400114ab:	mov    dl,0x5
   1400114ad:	movaps xmm6,xmm1
   1400114b0:	mov    rbx,rcx
   1400114b3:	call   0x14000faa0
   1400114b8:	movsd  QWORD PTR [rbx+0x8],xmm6
   1400114bd:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   1400114c2:	add    rsp,0x30
   1400114c6:	pop    rbx
   1400114c7:	ret    
   1400114c8:	int3   
   1400114c9:	int3   
   1400114ca:	int3   
   1400114cb:	int3   
   1400114cc:	int3   
   1400114cd:	int3   
   1400114ce:	int3   
   1400114cf:	int3   
   1400114d0:	movzx  r11d,dx
   1400114d4:	mov    r10,rcx
   1400114d7:	test   r8b,r8b
   1400114da:	je     0x140011502
   1400114dc:	mov    r9,QWORD PTR [rcx]
   1400114df:	mov    rax,r9
   1400114e2:	and    r9,0xffffffffffe0001f
   1400114e9:	shr    rax,0x5
   1400114ed:	movzx  r8d,ax
   1400114f1:	movzx  eax,dx
   1400114f4:	or     r8,rax
   1400114f7:	shl    r8,0x5
   1400114fb:	or     r8,r9
   1400114fe:	mov    QWORD PTR [rcx],r8
   140011501:	ret    
   140011502:	mov    rdx,QWORD PTR [rcx]
   140011505:	not    r11w
   140011509:	mov    rax,rdx
   14001150c:	and    rdx,0xffffffffffe0001f
   140011513:	shr    rax,0x5
   140011517:	movzx  ecx,ax
   14001151a:	movzx  eax,r11w
   14001151e:	and    rcx,rax
   140011521:	shl    rcx,0x5
   140011525:	or     rcx,rdx
   140011528:	mov    QWORD PTR [r10],rcx
   14001152b:	ret    
   14001152c:	int3   
   14001152d:	int3   
   14001152e:	int3   
   14001152f:	int3   
   140011530:	mov    QWORD PTR [rsp+0x8],rbx
   140011535:	push   rdi
   140011536:	sub    rsp,0x20
   14001153a:	mov    rdi,rdx
   14001153d:	mov    rbx,rcx
   140011540:	mov    dl,0x3
   140011542:	call   0x14000faa0
   140011547:	mov    QWORD PTR [rbx+0x8],rdi
   14001154b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011550:	add    rsp,0x20
   140011554:	pop    rdi
   140011555:	ret    
   140011556:	int3   
   140011557:	int3   
   140011558:	int3   
   140011559:	int3   
   14001155a:	int3   
   14001155b:	int3   
   14001155c:	int3   
   14001155d:	int3   
   14001155e:	int3   
   14001155f:	int3   
   140011560:	mov    QWORD PTR [rsp+0x8],rbx
   140011565:	push   rdi
   140011566:	sub    rsp,0x20
   14001156a:	movsxd rbx,edx
   14001156d:	mov    rdi,rcx
   140011570:	mov    dl,0x3
   140011572:	call   0x14000faa0
   140011577:	mov    QWORD PTR [rdi+0x8],rbx
   14001157b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011580:	add    rsp,0x20
   140011584:	pop    rdi
   140011585:	ret    
   140011586:	int3   
   140011587:	int3   
   140011588:	int3   
   140011589:	int3   
   14001158a:	int3   
   14001158b:	int3   
   14001158c:	int3   
   14001158d:	int3   
   14001158e:	int3   
   14001158f:	int3   
   140011590:	rex push rdi
   140011592:	sub    rsp,0x20
   140011596:	mov    rdi,rcx
   140011599:	test   rdx,rdx
   14001159c:	je     0x1400115f6
   14001159e:	movzx  eax,BYTE PTR [rdx]
   1400115a1:	test   al,al
   1400115a3:	je     0x1400115f6
   1400115a5:	mov    QWORD PTR [rsp+0x30],rbx
   1400115aa:	mov    rcx,rdx
   1400115ad:	cmp    al,0x2d
   1400115af:	jne    0x1400115d3
   1400115b1:	call   QWORD PTR [rip+0x20cd9]        # 0x140032290
   1400115b7:	mov    dl,0x3
   1400115b9:	mov    rcx,rdi
   1400115bc:	mov    rbx,rax
   1400115bf:	call   0x14000faa0
   1400115c4:	mov    QWORD PTR [rdi+0x8],rbx
   1400115c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400115cd:	add    rsp,0x20
   1400115d1:	pop    rdi
   1400115d2:	ret    
   1400115d3:	call   QWORD PTR [rip+0x20caf]        # 0x140032288
   1400115d9:	mov    rbx,rax
   1400115dc:	mov    rcx,rdi
   1400115df:	movabs rax,0x7fffffffffffffff
   1400115e9:	cmp    rbx,rax
   1400115ec:	jbe    0x1400115f2
   1400115ee:	mov    dl,0x4
   1400115f0:	jmp    0x1400115bf
   1400115f2:	mov    dl,0x3
   1400115f4:	jmp    0x1400115bf
   1400115f6:	mov    dl,0x3
   1400115f8:	call   0x14000faa0
   1400115fd:	mov    QWORD PTR [rdi+0x8],0x0
   140011605:	add    rsp,0x20
   140011609:	pop    rdi
   14001160a:	ret    
   14001160b:	int3   
   14001160c:	int3   
   14001160d:	int3   
   14001160e:	int3   
   14001160f:	int3   
   140011610:	mov    QWORD PTR [rsp+0x8],rbx
   140011615:	push   rdi
   140011616:	sub    rsp,0x20
   14001161a:	movsxd rdi,r8d
   14001161d:	mov    r8d,r9d
   140011620:	call   0x14000e270
   140011625:	mov    dl,0x3
   140011627:	mov    rcx,rax
   14001162a:	mov    rbx,rax
   14001162d:	call   0x14000faa0
   140011632:	mov    rax,rbx
   140011635:	mov    QWORD PTR [rbx+0x8],rdi
   140011639:	mov    rbx,QWORD PTR [rsp+0x30]
   14001163e:	add    rsp,0x20
   140011642:	pop    rdi
   140011643:	ret    
   140011644:	int3   
   140011645:	int3   
   140011646:	int3   
   140011647:	int3   
   140011648:	int3   
   140011649:	int3   
   14001164a:	int3   
   14001164b:	int3   
   14001164c:	int3   
   14001164d:	int3   
   14001164e:	int3   
   14001164f:	int3   
   140011650:	mov    QWORD PTR [rsp+0x8],rbx
   140011655:	push   rdi
   140011656:	sub    rsp,0x20
   14001165a:	mov    rdi,r8
   14001165d:	mov    r8d,r9d
   140011660:	call   0x14000e270
   140011665:	mov    rdx,rdi
   140011668:	mov    rcx,rax
   14001166b:	mov    rbx,rax
   14001166e:	call   0x1400116c0
   140011673:	mov    rax,rbx
   140011676:	mov    rbx,QWORD PTR [rsp+0x30]
   14001167b:	add    rsp,0x20
   14001167f:	pop    rdi
   140011680:	ret    
   140011681:	int3   
   140011682:	int3   
   140011683:	int3   
   140011684:	int3   
   140011685:	int3   
   140011686:	int3   
   140011687:	int3   
   140011688:	int3   
   140011689:	int3   
   14001168a:	int3   
   14001168b:	int3   
   14001168c:	int3   
   14001168d:	int3   
   14001168e:	int3   
   14001168f:	int3   
   140011690:	rex push rbx
   140011692:	sub    rsp,0x20
   140011696:	call   0x14000e270
   14001169b:	mov    dl,0x1
   14001169d:	mov    rcx,rax
   1400116a0:	mov    rbx,rax
   1400116a3:	call   0x14000faa0
   1400116a8:	mov    rax,rbx
   1400116ab:	add    rsp,0x20
   1400116af:	pop    rbx
   1400116b0:	ret    
   1400116b1:	int3   
   1400116b2:	int3   
   1400116b3:	int3   
   1400116b4:	int3   
   1400116b5:	int3   
   1400116b6:	int3   
   1400116b7:	int3   
   1400116b8:	int3   
   1400116b9:	int3   
   1400116ba:	int3   
   1400116bb:	int3   
   1400116bc:	int3   
   1400116bd:	int3   
   1400116be:	int3   
   1400116bf:	int3   
   1400116c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400116c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400116ca:	push   rdi
   1400116cb:	sub    rsp,0x20
   1400116cf:	test   rdx,rdx
   1400116d2:	lea    rbx,[rip+0x210c7]        # 0x1400327a0
   1400116d9:	mov    rsi,rcx
   1400116dc:	cmovne rbx,rdx
   1400116e0:	or     rdi,0xffffffffffffffff
   1400116e4:	mov    rax,rdi
   1400116e7:	inc    rax
   1400116ea:	cmp    BYTE PTR [rbx+rax*1],0x0
   1400116ee:	jne    0x1400116e7
   1400116f0:	cmp    eax,0x7
   1400116f3:	jg     0x14001171f
   1400116f5:	mov    dl,0xa
   1400116f7:	call   0x14000faa0
   1400116fc:	lea    rcx,[rsi+0x8]
   140011700:	mov    r8d,0x8
   140011706:	mov    rdx,rbx
   140011709:	mov    rbx,QWORD PTR [rsp+0x30]
   14001170e:	mov    rsi,QWORD PTR [rsp+0x38]
   140011713:	add    rsp,0x20
   140011717:	pop    rdi
   140011718:	rex.W jmp QWORD PTR [rip+0x20e39]        # 0x140032558
   14001171f:	mov    dl,0x6
   140011721:	call   0x14000faa0
   140011726:	test   rbx,rbx
   140011729:	jne    0x140011730
   14001172b:	xor    edx,edx
   14001172d:	jmp    0x140011771
   14001172f:	nop
   140011730:	cmp    BYTE PTR [rbx+rdi*1+0x1],0x0
   140011735:	lea    rdi,[rdi+0x1]
   140011739:	jne    0x140011730
   14001173b:	mov    rax,QWORD PTR [rip+0x20c4e]        # 0x140032390
   140011742:	lea    rdx,[rdi+0x1]
   140011746:	mov    rcx,QWORD PTR [rax]
   140011749:	mov    rax,QWORD PTR [rcx]
   14001174c:	call   QWORD PTR [rax+0x8]
   14001174f:	mov    rdx,rax
   140011752:	nop    DWORD PTR [rax+0x0]
   140011756:	data16 nop WORD PTR [rax+rax*1+0x0]
   140011760:	movzx  ecx,BYTE PTR [rbx]
   140011763:	lea    rbx,[rbx+0x1]
   140011767:	mov    BYTE PTR [rax],cl
   140011769:	lea    rax,[rax+0x1]
   14001176d:	test   cl,cl
   14001176f:	jne    0x140011760
   140011771:	mov    rbx,QWORD PTR [rsp+0x30]
   140011776:	mov    QWORD PTR [rsi+0x8],rdx
   14001177a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001177f:	add    rsp,0x20
   140011783:	pop    rdi
   140011784:	ret    
   140011785:	int3   
   140011786:	int3   
   140011787:	int3   
   140011788:	int3   
   140011789:	int3   
   14001178a:	int3   
   14001178b:	int3   
   14001178c:	int3   
   14001178d:	int3   
   14001178e:	int3   
   14001178f:	int3   
   140011790:	mov    QWORD PTR [rsp+0x8],rbx
   140011795:	mov    QWORD PTR [rsp+0x10],rsi
   14001179a:	push   rdi
   14001179b:	sub    rsp,0x20
   14001179f:	mov    rdi,rdx
   1400117a2:	mov    ebx,r8d
   1400117a5:	mov    dl,0x7
   1400117a7:	mov    rsi,rcx
   1400117aa:	call   0x14000faa0
   1400117af:	mov    r8d,ebx
   1400117b2:	mov    rdx,rdi
   1400117b5:	mov    rcx,rsi
   1400117b8:	call   0x14000ce40
   1400117bd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400117c2:	mov    QWORD PTR [rsi+0x8],rax
   1400117c6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400117cb:	add    rsp,0x20
   1400117cf:	pop    rdi
   1400117d0:	ret    
   1400117d1:	int3   
   1400117d2:	int3   
   1400117d3:	int3   
   1400117d4:	int3   
   1400117d5:	int3   
   1400117d6:	int3   
   1400117d7:	int3   
   1400117d8:	int3   
   1400117d9:	int3   
   1400117da:	int3   
   1400117db:	int3   
   1400117dc:	int3   
   1400117dd:	int3   
   1400117de:	int3   
   1400117df:	int3   
   1400117e0:	mov    dl,0x9
   1400117e2:	jmp    0x14000faa0
   1400117e7:	int3   
   1400117e8:	int3   
   1400117e9:	int3   
   1400117ea:	int3   
   1400117eb:	int3   
   1400117ec:	int3   
   1400117ed:	int3   
   1400117ee:	int3   
   1400117ef:	int3   
   1400117f0:	mov    dl,0x1
   1400117f2:	jmp    0x14000faa0
   1400117f7:	int3   
   1400117f8:	int3   
   1400117f9:	int3   
   1400117fa:	int3   
   1400117fb:	int3   
   1400117fc:	int3   
   1400117fd:	int3   
   1400117fe:	int3   
   1400117ff:	int3   
   140011800:	mov    QWORD PTR [rsp+0x8],rbx
   140011805:	push   rdi
   140011806:	sub    rsp,0x20
   14001180a:	mov    rdi,rdx
   14001180d:	mov    rbx,rcx
   140011810:	mov    dl,0x4
   140011812:	call   0x14000faa0
   140011817:	mov    QWORD PTR [rbx+0x8],rdi
   14001181b:	mov    rbx,QWORD PTR [rsp+0x30]
   140011820:	add    rsp,0x20
   140011824:	pop    rdi
   140011825:	ret    
   140011826:	int3   
   140011827:	int3   
   140011828:	int3   
   140011829:	int3   
   14001182a:	int3   
   14001182b:	int3   
   14001182c:	int3   
   14001182d:	int3   
   14001182e:	int3   
   14001182f:	int3   
   140011830:	sub    rsp,0x28
   140011834:	lea    rdx,[rip+0x24eed]        # 0x140036728
   14001183b:	call   QWORD PTR [rip+0x20d1f]        # 0x140032560
   140011841:	test   eax,eax
   140011843:	jne    0x14001184f
   140011845:	mov    eax,0x1
   14001184a:	add    rsp,0x28
   14001184e:	ret    
   14001184f:	xor    eax,eax
   140011851:	add    rsp,0x28
   140011855:	ret    
   140011856:	int3   
   140011857:	int3   
   140011858:	int3   
   140011859:	int3   
   14001185a:	int3   
   14001185b:	int3   
   14001185c:	int3   
   14001185d:	int3   
   14001185e:	int3   
   14001185f:	int3   
   140011860:	mov    QWORD PTR [rsp+0x8],rbx
   140011865:	mov    QWORD PTR [rsp+0x10],rbp
   14001186a:	mov    QWORD PTR [rsp+0x18],rsi
   14001186f:	mov    QWORD PTR [rsp+0x20],rdi
   140011874:	push   r14
   140011876:	sub    rsp,0x80
   14001187d:	mov    rdi,QWORD PTR [rsp+0xb0]
   140011885:	mov    rbx,r9
   140011888:	mov    rbp,r8
   14001188b:	mov    r14,rdx
   14001188e:	mov    rsi,rcx
   140011891:	test   BYTE PTR [rdi+0x19],0x1
   140011895:	jne    0x1400118ac
   140011897:	test   rbx,rbx
   14001189a:	je     0x14001195c
   1400118a0:	lea    rdx,[rip+0x24ee9]        # 0x140036790
   1400118a7:	jmp    0x140011954
   1400118ac:	mov    rcx,QWORD PTR [rcx+0x8]
   1400118b0:	mov    rdx,QWORD PTR [rip+0x34759]        # 0x140046010
   1400118b7:	mov    rax,QWORD PTR [rcx]
   1400118ba:	cmp    rax,QWORD PTR [rdx]
   1400118bd:	jne    0x140011948
   1400118c3:	mov    rax,QWORD PTR [rcx+0x8]
   1400118c7:	cmp    rax,QWORD PTR [rdx+0x8]
   1400118cb:	jne    0x140011948
   1400118cd:	mov    r8d,0x25
   1400118d3:	lea    rdx,[rsp+0x58]
   1400118d8:	call   QWORD PTR [rip+0x2099a]        # 0x140032278
   1400118de:	mov    rcx,QWORD PTR [r14+0x8]
   1400118e2:	lea    rdx,[rsp+0x30]
   1400118e7:	mov    r8d,0x25
   1400118ed:	call   QWORD PTR [rip+0x20985]        # 0x140032278
   1400118f3:	cmp    BYTE PTR [rsp+0x30],0x0
   1400118f8:	lea    rdx,[rip+0x24e01]        # 0x140036700
   1400118ff:	mov    rcx,QWORD PTR [r14]
   140011902:	lea    rax,[rsp+0x30]
   140011907:	mov    r8,QWORD PTR [rsi]
   14001190a:	lea    r9,[rsp+0x58]
   14001190f:	cmove  rax,rdx
   140011913:	cmp    BYTE PTR [rsp+0x58],0x0
   140011918:	mov    QWORD PTR [rsp+0x28],rax
   14001191d:	cmove  r9,rdx
   140011921:	mov    QWORD PTR [rsp+0x20],rcx
   140011926:	lea    rdx,[rip+0x24eb3]        # 0x1400367e0
   14001192d:	mov    rcx,rdi
   140011930:	call   0x140021a10
   140011935:	xor    r9d,r9d
   140011938:	mov    r8,rdi
   14001193b:	mov    rdx,rbx
   14001193e:	mov    rcx,rbp
   140011941:	call   0x140011980
   140011946:	jmp    0x14001195e
   140011948:	test   rbx,rbx
   14001194b:	je     0x14001195c
   14001194d:	lea    rdx,[rip+0x24e6c]        # 0x1400367c0
   140011954:	mov    rcx,rbx
   140011957:	call   0x14001aae0
   14001195c:	xor    al,al
   14001195e:	lea    r11,[rsp+0x80]
   140011966:	mov    rbx,QWORD PTR [r11+0x10]
   14001196a:	mov    rbp,QWORD PTR [r11+0x18]
   14001196e:	mov    rsi,QWORD PTR [r11+0x20]
   140011972:	mov    rdi,QWORD PTR [r11+0x28]
   140011976:	mov    rsp,r11
   140011979:	pop    r14
   14001197b:	ret    
   14001197c:	int3   
   14001197d:	int3   
   14001197e:	int3   
   14001197f:	int3   
   140011980:	mov    QWORD PTR [rsp+0x8],rbx
   140011985:	mov    BYTE PTR [rsp+0x20],r9b
   14001198a:	mov    QWORD PTR [rsp+0x10],rdx
   14001198f:	push   rbp
   140011990:	push   rsi
   140011991:	push   rdi
   140011992:	sub    rsp,0x250
   140011999:	movzx  esi,r9b
   14001199d:	mov    rdi,r8
   1400119a0:	mov    rbp,rcx
   1400119a3:	call   0x14000e9a0
   1400119a8:	mov    ecx,0xfffb
   1400119ad:	xor    ebx,ebx
   1400119af:	and    ax,cx
   1400119b2:	cmp    bx,ax
   1400119b5:	je     0x140011a26
   1400119b7:	mov    BYTE PTR [rsp+0x30],0x1
   1400119bc:	mov    esi,0x1
   1400119c1:	movzx  edx,si
   1400119c4:	mov    rcx,rbp
   1400119c7:	call   0x14000f1c0
   1400119cc:	test   al,al
   1400119ce:	je     0x140011a08
   1400119d0:	cmp    BYTE PTR [rsp+0x30],bl
   1400119d4:	jne    0x1400119e5
   1400119d6:	lea    rdx,[rip+0x24d57]        # 0x140036734
   1400119dd:	mov    rcx,rdi
   1400119e0:	call   0x140021a10
   1400119e5:	mov    r8,rbx
   1400119e8:	cmp    si,0x1
   1400119ec:	jne    0x1400119f5
   1400119ee:	lea    r8,[rip+0x24d33]        # 0x140036728
   1400119f5:	lea    rdx,[rip+0x2290c]        # 0x140034308
   1400119fc:	mov    rcx,rdi
   1400119ff:	call   0x140021a10
   140011a04:	mov    BYTE PTR [rsp+0x30],bl
   140011a08:	add    esi,esi
   140011a0a:	cmp    esi,0x4
   140011a0d:	jle    0x1400119c1
   140011a0f:	lea    rdx,[rip+0x24d22]        # 0x140036738
   140011a16:	mov    rcx,rdi
   140011a19:	call   0x140021a10
   140011a1e:	movzx  esi,BYTE PTR [rsp+0x288]
   140011a26:	mov    rcx,rbp
   140011a29:	call   0x14000f090
   140011a2e:	movzx  eax,al
   140011a31:	dec    eax
   140011a33:	cmp    eax,0x8
   140011a36:	ja     0x140011fe0
   140011a3c:	lea    rdx,[rip+0xfffffffffffee5bd]        # 0x140000000
   140011a43:	cdqe   
   140011a45:	mov    ecx,DWORD PTR [rdx+rax*4+0x11ff8]
   140011a4c:	add    rcx,rdx
   140011a4f:	jmp    rcx
   140011a51:	lea    rdx,[rip+0x24ce4]        # 0x14003673c
   140011a58:	mov    rcx,rdi
   140011a5b:	call   0x140021a10
   140011a60:	mov    al,0x1
   140011a62:	jmp    0x140011fe2
   140011a67:	mov    rcx,rbp
   140011a6a:	call   0x14000eb50
   140011a6f:	test   al,al
   140011a71:	lea    rcx,[rip+0x24994]        # 0x14003640c
   140011a78:	lea    r8,[rip+0x24995]        # 0x140036414
   140011a7f:	cmovne r8,rcx
   140011a83:	lea    rdx,[rip+0x2287e]        # 0x140034308
   140011a8a:	mov    rcx,rdi
   140011a8d:	call   0x140021a10
   140011a92:	mov    al,0x1
   140011a94:	jmp    0x140011fe2
   140011a99:	mov    rcx,rbp
   140011a9c:	call   0x14000ebb0
   140011aa1:	mov    r8,rax
   140011aa4:	lea    rdx,[rip+0x20d09]        # 0x1400327b4
   140011aab:	mov    rcx,rdi
   140011aae:	call   0x140021a10
   140011ab3:	mov    al,0x1
   140011ab5:	jmp    0x140011fe2
   140011aba:	mov    rcx,rbp
   140011abd:	call   0x14000f0c0
   140011ac2:	mov    r8,rax
   140011ac5:	lea    rdx,[rip+0x20cf0]        # 0x1400327bc
   140011acc:	mov    rcx,rdi
   140011acf:	call   0x140021a10
   140011ad4:	mov    al,0x1
   140011ad6:	jmp    0x140011fe2
   140011adb:	mov    rcx,rbp
   140011ade:	call   0x14000eba0
   140011ae3:	movaps xmm2,xmm0
   140011ae6:	lea    rdx,[rip+0x2492f]        # 0x14003641c
   140011aed:	movq   r8,xmm2
   140011af2:	lea    rcx,[rsp+0x50]
   140011af7:	call   0x1400015a0
   140011afc:	movzx  ecx,BYTE PTR [rsp+0x50]
   140011b01:	lea    rax,[rsp+0x50]
   140011b06:	test   cl,cl
   140011b08:	je     0x140011b42
   140011b0a:	nop    WORD PTR [rax+rax*1+0x0]
   140011b10:	cmp    cl,0x2e
   140011b13:	movzx  ecx,BYTE PTR [rax+0x1]
   140011b17:	cmove  rbx,rax
   140011b1b:	inc    rax
   140011b1e:	test   cl,cl
   140011b20:	jne    0x140011b10
   140011b22:	test   rbx,rbx
   140011b25:	je     0x140011b42
   140011b27:	dec    rax
   140011b2a:	inc    rbx
   140011b2d:	cmp    rax,rbx
   140011b30:	jbe    0x140011b42
   140011b32:	cmp    BYTE PTR [rax],0x30
   140011b35:	jne    0x140011b42
   140011b37:	mov    BYTE PTR [rax],0x0
   140011b3a:	dec    rax
   140011b3d:	cmp    rax,rbx
   140011b40:	ja     0x140011b32
   140011b42:	lea    rdx,[rsp+0x50]
   140011b47:	mov    rcx,rdi
   140011b4a:	call   0x140021ce0
   140011b4f:	mov    al,0x1
   140011b51:	jmp    0x140011fe2
   140011b56:	mov    edx,0x4
   140011b5b:	mov    rcx,rbp
   140011b5e:	call   0x14000f1c0
   140011b63:	test   al,al
   140011b65:	je     0x140011c2f
   140011b6b:	or     BYTE PTR [rdi+0x19],0x10
   140011b6f:	lea    rdx,[rip+0x24bce]        # 0x140036744
   140011b76:	mov    rcx,rdi
   140011b79:	call   0x140021a10
   140011b7e:	xor    edx,edx
   140011b80:	mov    rcx,rbp
   140011b83:	call   0x14000f030
   140011b88:	mov    rdx,rax
   140011b8b:	mov    QWORD PTR [rsp+0x38],rbx
   140011b90:	lea    rcx,[rsp+0x38]
   140011b95:	call   0x14001b3a0
   140011b9a:	lea    r9,[rip+0x24bab]        # 0x14003674c
   140011ba1:	mov    BYTE PTR [rsp+0x20],bl
   140011ba5:	lea    r8,[rip+0x24ba8]        # 0x140036754
   140011bac:	lea    rdx,[rsp+0x40]
   140011bb1:	lea    rcx,[rsp+0x38]
   140011bb6:	call   0x14001b1f0
   140011bbb:	mov    rsi,rax
   140011bbe:	mov    rbp,QWORD PTR [rax]
   140011bc1:	cmp    QWORD PTR [rsp+0x38],rbx
   140011bc6:	je     0x140011bd2
   140011bc8:	lea    rcx,[rsp+0x38]
   140011bcd:	call   0x14001b030
   140011bd2:	mov    QWORD PTR [rsp+0x38],rbp
   140011bd7:	mov    QWORD PTR [rsi],rbx
   140011bda:	cmp    QWORD PTR [rsp+0x40],rbx
   140011bdf:	je     0x140011beb
   140011be1:	lea    rcx,[rsp+0x40]
   140011be6:	call   0x14001b030
   140011beb:	lea    rcx,[rsp+0x38]
   140011bf0:	call   0x14001b050
   140011bf5:	mov    rdx,rax
   140011bf8:	mov    rcx,rdi
   140011bfb:	call   0x140021ce0
   140011c00:	lea    rdx,[rip+0x24b51]        # 0x140036758
   140011c07:	mov    rcx,rdi
   140011c0a:	call   0x140021a10
   140011c0f:	and    BYTE PTR [rdi+0x19],0xef
   140011c13:	cmp    QWORD PTR [rsp+0x38],rbx
   140011c18:	je     0x140011fcb
   140011c1e:	lea    rcx,[rsp+0x38]
   140011c23:	call   0x14001b030
   140011c28:	mov    al,0x1
   140011c2a:	jmp    0x140011fe2
   140011c2f:	xor    edx,edx
   140011c31:	mov    rcx,rbp
   140011c34:	call   0x14000f030
   140011c39:	mov    rbx,rax
   140011c3c:	call   0x140021190
   140011c41:	mov    rdx,rax
   140011c44:	mov    r8,rbx
   140011c47:	mov    rcx,rdi
   140011c4a:	call   0x140021b30
   140011c4f:	mov    al,0x1
   140011c51:	jmp    0x140011fe2
   140011c56:	mov    rcx,rbp
   140011c59:	call   0x14000eb10
   140011c5e:	cmp    eax,0x20
   140011c61:	mov    DWORD PTR [rsp+0x38],eax
   140011c65:	setle  sil
   140011c69:	mov    BYTE PTR [rsp+0x31],sil
   140011c6e:	cmp    BYTE PTR [rsp+0x288],bl
   140011c75:	je     0x140011c8d
   140011c77:	test   sil,sil
   140011c7a:	jne    0x140011c8d
   140011c7c:	lea    rdx,[rip+0x24add]        # 0x140036760
   140011c83:	mov    rcx,rdi
   140011c86:	call   0x140021a10
   140011c8b:	jmp    0x140011ca1
   140011c8d:	lea    rdx,[rip+0x24ad0]        # 0x140036764
   140011c94:	mov    rcx,rdi
   140011c97:	call   0x140021a10
   140011c9c:	test   sil,sil
   140011c9f:	jne    0x140011cb3
   140011ca1:	lea    rdx,[rip+0x22690]        # 0x140034338
   140011ca8:	mov    rcx,rdi
   140011cab:	call   0x140021ce0
   140011cb0:	inc    DWORD PTR [rdi+0x1c]
   140011cb3:	mov    esi,ebx
   140011cb5:	cmp    DWORD PTR [rsp+0x38],ebx
   140011cb9:	jle    0x140011d05
   140011cbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140011cc0:	test   esi,esi
   140011cc2:	jle    0x140011ce0
   140011cc4:	lea    rdx,[rip+0x2266d]        # 0x140034338
   140011ccb:	mov    rcx,rdi
   140011cce:	test   sil,0x1f
   140011cd2:	je     0x140011cdb
   140011cd4:	lea    rdx,[rip+0x21209]        # 0x140032ee4
   140011cdb:	call   0x140021a10
   140011ce0:	mov    edx,esi
   140011ce2:	mov    rcx,rbp
   140011ce5:	call   0x14000ea90
   140011cea:	movzx  r8d,al
   140011cee:	lea    rdx,[rip+0x24a73]        # 0x140036768
   140011cf5:	mov    rcx,rdi
   140011cf8:	call   0x140021a10
   140011cfd:	inc    esi
   140011cff:	cmp    esi,DWORD PTR [rsp+0x38]
   140011d03:	jl     0x140011cc0
   140011d05:	mov    rcx,rdi
   140011d08:	cmp    BYTE PTR [rsp+0x31],bl
   140011d0c:	jne    0x140011d39
   140011d0e:	lea    rdx,[rip+0x22623]        # 0x140034338
   140011d15:	call   0x140021a10
   140011d1a:	sub    DWORD PTR [rdi+0x1c],0x1
   140011d1e:	jns    0x140011d45
   140011d20:	lea    rdx,[rip+0x24a49]        # 0x140036770
   140011d27:	mov    DWORD PTR [rdi+0x1c],ebx
   140011d2a:	mov    rcx,rdi
   140011d2d:	call   0x140021ce0
   140011d32:	mov    al,0x1
   140011d34:	jmp    0x140011fe2
   140011d39:	lea    rdx,[rip+0x211a4]        # 0x140032ee4
   140011d40:	call   0x140021a10
   140011d45:	lea    rdx,[rip+0x24a24]        # 0x140036770
   140011d4c:	mov    rcx,rdi
   140011d4f:	call   0x140021ce0
   140011d54:	mov    al,0x1
   140011d56:	jmp    0x140011fe2
   140011d5b:	mov    rcx,rbp
   140011d5e:	call   0x14000ea00
   140011d63:	mov    rcx,rbp
   140011d66:	mov    DWORD PTR [rsp+0x38],eax
   140011d6a:	mov    esi,ebx
   140011d6c:	call   0x14000ea00
   140011d71:	test   eax,eax
   140011d73:	jle    0x140011d9b
   140011d75:	mov    edx,esi
   140011d77:	mov    rcx,rbp
   140011d7a:	call   0x14000e9b0
   140011d7f:	mov    rcx,rax
   140011d82:	call   0x14000f090
   140011d87:	dec    al
   140011d89:	cmp    al,0x4
   140011d8b:	ja     0x140011db1
   140011d8d:	mov    rcx,rbp
   140011d90:	inc    esi
   140011d92:	call   0x14000ea00
   140011d97:	cmp    esi,eax
   140011d99:	jl     0x140011d75
   140011d9b:	mov    al,0x1
   140011d9d:	cmp    DWORD PTR [rsp+0x38],0x4
   140011da2:	mov    BYTE PTR [rsp+0x31],al
   140011da6:	jg     0x140011db5
   140011da8:	test   al,al
   140011daa:	je     0x140011db5
   140011dac:	mov    sil,0x1
   140011daf:	jmp    0x140011db8
   140011db1:	xor    al,al
   140011db3:	jmp    0x140011d9d
   140011db5:	xor    sil,sil
   140011db8:	mov    BYTE PTR [rsp+0x30],sil
   140011dbd:	cmp    BYTE PTR [rsp+0x288],bl
   140011dc4:	je     0x140011ddc
   140011dc6:	test   sil,sil
   140011dc9:	jne    0x140011ddc
   140011dcb:	lea    rdx,[rip+0x249a2]        # 0x140036774
   140011dd2:	mov    rcx,rdi
   140011dd5:	call   0x140021a10
   140011dda:	jmp    0x140011df0
   140011ddc:	lea    rdx,[rip+0x24995]        # 0x140036778
   140011de3:	mov    rcx,rdi
   140011de6:	call   0x140021a10
   140011deb:	test   sil,sil
   140011dee:	jne    0x140011e02
   140011df0:	lea    rdx,[rip+0x22541]        # 0x140034338
   140011df7:	mov    rcx,rdi
   140011dfa:	call   0x140021ce0
   140011dff:	inc    DWORD PTR [rdi+0x1c]
   140011e02:	mov    esi,ebx
   140011e04:	cmp    DWORD PTR [rsp+0x38],ebx
   140011e08:	jle    0x140011e97
   140011e0e:	xchg   ax,ax
   140011e10:	test   esi,esi
   140011e12:	jle    0x140011e44
   140011e14:	cmp    BYTE PTR [rsp+0x31],bl
   140011e18:	je     0x140011e35
   140011e1a:	mov    eax,esi
   140011e1c:	and    eax,0x80000003
   140011e21:	jge    0x140011e2a
   140011e23:	dec    eax
   140011e25:	or     eax,0xfffffffc
   140011e28:	inc    eax
   140011e2a:	lea    rdx,[rip+0x210b3]        # 0x140032ee4
   140011e31:	test   eax,eax
   140011e33:	jne    0x140011e3c
   140011e35:	lea    rdx,[rip+0x224fc]        # 0x140034338
   140011e3c:	mov    rcx,rdi
   140011e3f:	call   0x140021a10
   140011e44:	mov    edx,esi
   140011e46:	mov    rcx,rbp
   140011e49:	call   0x14000e9b0
   140011e4e:	mov    rdx,QWORD PTR [rsp+0x278]
   140011e56:	mov    rcx,rax
   140011e59:	xor    r9d,r9d
   140011e5c:	mov    r8,rdi
   140011e5f:	call   0x140011980
   140011e64:	test   al,al
   140011e66:	je     0x140011fe0
   140011e6c:	cmp    BYTE PTR [rsp+0x30],bl
   140011e70:	je     0x140011e7c
   140011e72:	mov    eax,DWORD PTR [rsp+0x38]
   140011e76:	dec    eax
   140011e78:	cmp    esi,eax
   140011e7a:	je     0x140011e8b
   140011e7c:	lea    rdx,[rip+0x248f9]        # 0x14003677c
   140011e83:	mov    rcx,rdi
   140011e86:	call   0x140021a10
   140011e8b:	inc    esi
   140011e8d:	cmp    esi,DWORD PTR [rsp+0x38]
   140011e91:	jl     0x140011e10
   140011e97:	mov    rcx,rdi
   140011e9a:	cmp    BYTE PTR [rsp+0x30],bl
   140011e9e:	jne    0x140011ecb
   140011ea0:	lea    rdx,[rip+0x22491]        # 0x140034338
   140011ea7:	call   0x140021a10
   140011eac:	sub    DWORD PTR [rdi+0x1c],0x1
   140011eb0:	jns    0x140011ed7
   140011eb2:	lea    rdx,[rip+0x248b7]        # 0x140036770
   140011eb9:	mov    DWORD PTR [rdi+0x1c],ebx
   140011ebc:	mov    rcx,rdi
   140011ebf:	call   0x140021ce0
   140011ec4:	mov    al,0x1
   140011ec6:	jmp    0x140011fe2
   140011ecb:	lea    rdx,[rip+0x21012]        # 0x140032ee4
   140011ed2:	call   0x140021ce0
   140011ed7:	lea    rdx,[rip+0x24892]        # 0x140036770
   140011ede:	mov    rcx,rdi
   140011ee1:	call   0x140021ce0
   140011ee6:	mov    al,0x1
   140011ee8:	jmp    0x140011fe2
   140011eed:	test   sil,sil
   140011ef0:	je     0x140011f01
   140011ef2:	lea    rdx,[rip+0x2243f]        # 0x140034338
   140011ef9:	mov    rcx,rdi
   140011efc:	call   0x140021ce0
   140011f01:	lea    rdx,[rip+0x24878]        # 0x140036780
   140011f08:	mov    rcx,rdi
   140011f0b:	call   0x140021a10
   140011f10:	inc    DWORD PTR [rdi+0x1c]
   140011f13:	mov    rcx,rbp
   140011f16:	mov    QWORD PTR [rsp+0x40],rbx
   140011f1b:	call   0x14000ec10
   140011f20:	mov    DWORD PTR [rsp+0x38],eax
   140011f24:	mov    esi,ebx
   140011f26:	test   eax,eax
   140011f28:	jle    0x140011f9e
   140011f2a:	nop    WORD PTR [rax+rax*1+0x0]
   140011f30:	lea    r8,[rsp+0x40]
   140011f35:	mov    edx,esi
   140011f37:	mov    rcx,rbp
   140011f3a:	call   0x14000ed30
   140011f3f:	lea    rcx,[rsp+0x40]
   140011f44:	call   0x14001b050
   140011f49:	mov    rdx,rax
   140011f4c:	mov    rcx,rdi
   140011f4f:	call   0x140021ce0
   140011f54:	lea    rdx,[rip+0x24829]        # 0x140036784
   140011f5b:	mov    rcx,rdi
   140011f5e:	call   0x140021ce0
   140011f63:	mov    edx,esi
   140011f65:	mov    rcx,rbp
   140011f68:	call   0x14000ebc0
   140011f6d:	mov    rdx,QWORD PTR [rsp+0x278]
   140011f75:	mov    rcx,rax
   140011f78:	mov    r9b,0x1
   140011f7b:	mov    r8,rdi
   140011f7e:	call   0x140011980
   140011f83:	test   al,al
   140011f85:	je     0x140011fcf
   140011f87:	lea    rdx,[rip+0x223aa]        # 0x140034338
   140011f8e:	mov    rcx,rdi
   140011f91:	call   0x140021ce0
   140011f96:	inc    esi
   140011f98:	cmp    esi,DWORD PTR [rsp+0x38]
   140011f9c:	jl     0x140011f30
   140011f9e:	add    DWORD PTR [rdi+0x1c],0xffffffff
   140011fa2:	lea    rdx,[rip+0x247df]        # 0x140036788
   140011fa9:	mov    eax,DWORD PTR [rdi+0x1c]
   140011fac:	mov    rcx,rdi
   140011faf:	cmovs  eax,ebx
   140011fb2:	mov    DWORD PTR [rdi+0x1c],eax
   140011fb5:	call   0x140021ce0
   140011fba:	cmp    QWORD PTR [rsp+0x40],rbx
   140011fbf:	je     0x140011fcb
   140011fc1:	lea    rcx,[rsp+0x40]
   140011fc6:	call   0x14001b030
   140011fcb:	mov    al,0x1
   140011fcd:	jmp    0x140011fe2
   140011fcf:	cmp    QWORD PTR [rsp+0x40],rbx
   140011fd4:	je     0x140011fe0
   140011fd6:	lea    rcx,[rsp+0x40]
   140011fdb:	call   0x14001b030
   140011fe0:	xor    al,al
   140011fe2:	mov    rbx,QWORD PTR [rsp+0x270]
   140011fea:	add    rsp,0x250
   140011ff1:	pop    rdi
   140011ff2:	pop    rsi
   140011ff3:	pop    rbp
   140011ff4:	ret    
   140011ff5:	nop    DWORD PTR [rax]
   140011ff8:	push   rcx
   140011ff9:	sbb    al,BYTE PTR [rcx]
   140011ffb:	add    BYTE PTR [rdi+0x1a],ah
   140011ffe:	add    DWORD PTR [rax],eax
   140012000:	cdq    
   140012001:	sbb    al,BYTE PTR [rcx]
   140012003:	add    BYTE PTR [rdx-0x24fffee6],bh
   140012009:	sbb    al,BYTE PTR [rcx]
   14001200b:	add    BYTE PTR [rsi+0x1b],dl
   14001200e:	add    DWORD PTR [rax],eax
   140012010:	push   rsi
   140012011:	sbb    al,0x1
   140012013:	add    BYTE PTR [rbx+0x1d],bl
   140012016:	add    DWORD PTR [rax],eax
   140012018:	in     eax,dx
   140012019:	(bad)  
   14001201a:	add    DWORD PTR [rax],eax
   14001201c:	int3   
   14001201d:	int3   
   14001201e:	int3   
   14001201f:	int3   
   140012020:	rex push rbx
   140012022:	sub    rsp,0x20
   140012026:	mov    rax,QWORD PTR [rcx]
   140012029:	mov    rbx,rcx
   14001202c:	call   QWORD PTR [rax]
   14001202e:	cmp    eax,0x5
   140012031:	je     0x14001203d
   140012033:	xor    ecx,ecx
   140012035:	mov    eax,ecx
   140012037:	add    rsp,0x20
   14001203b:	pop    rbx
   14001203c:	ret    
   14001203d:	mov    rdx,QWORD PTR [rbx]
   140012040:	mov    rcx,rbx
   140012043:	call   QWORD PTR [rdx+0x30]
   140012046:	xor    ecx,ecx
   140012048:	cmp    eax,0x4
   14001204b:	cmovne rbx,rcx
   14001204f:	mov    rax,rbx
   140012052:	add    rsp,0x20
   140012056:	pop    rbx
   140012057:	ret    
   140012058:	int3   
   140012059:	int3   
   14001205a:	int3   
   14001205b:	int3   
   14001205c:	int3   
   14001205d:	int3   
   14001205e:	int3   
   14001205f:	int3   
   140012060:	mov    QWORD PTR [rsp+0x10],rbx
   140012065:	mov    QWORD PTR [rsp+0x18],rsi
   14001206a:	mov    QWORD PTR [rsp+0x20],rdi
   14001206f:	push   r14
   140012071:	sub    rsp,0x20
   140012075:	mov    rdi,rcx
   140012078:	mov    r14,r9
   14001207b:	mov    rcx,QWORD PTR [r8+0x18]
   14001207f:	mov    rsi,r8
   140012082:	mov    rbx,rdx
   140012085:	test   rcx,rcx
   140012088:	je     0x1400120b4
   14001208a:	mov    rax,QWORD PTR [rcx]
   14001208d:	xor    edx,edx
   14001208f:	call   QWORD PTR [rax]
   140012091:	test   rax,rax
   140012094:	je     0x1400120b4
   140012096:	mov    rdx,QWORD PTR [rax]
   140012099:	mov    rcx,rax
   14001209c:	call   QWORD PTR [rdx+0x30]
   14001209f:	mov    rcx,QWORD PTR [rsp+0x60]
   1400120a4:	mov    rdx,rdi
   1400120a7:	mov    r8,rax
   1400120aa:	call   0x140012ed0
   1400120af:	jmp    0x140012316
   1400120b4:	mov    rax,QWORD PTR [rsi]
   1400120b7:	mov    rcx,rsi
   1400120ba:	mov    QWORD PTR [rsp+0x30],rbp
   1400120bf:	call   QWORD PTR [rax]
   1400120c1:	cmp    eax,0x6
   1400120c4:	ja     0x140012309
   1400120ca:	cdqe   
   1400120cc:	lea    rbp,[rip+0xfffffffffffedf2d]        # 0x140000000
   1400120d3:	mov    eax,DWORD PTR [rbp+rax*4+0x1232c]
   1400120da:	add    rax,rbp
   1400120dd:	jmp    rax
   1400120df:	mov    rcx,rsi
   1400120e2:	call   0x140012020
   1400120e7:	jmp    0x1400121ee
   1400120ec:	mov    eax,DWORD PTR [rsi+0x30]
   1400120ef:	add    eax,0xfffffffe
   1400120f2:	cmp    eax,0xb
   1400120f5:	ja     0x140012309
   1400120fb:	cdqe   
   1400120fd:	mov    ecx,DWORD PTR [rbp+rax*4+0x12348]
   140012104:	add    rcx,rbp
   140012107:	jmp    rcx
   140012109:	mov    dl,0x3
   14001210b:	mov    rcx,rdi
   14001210e:	call   0x14000ddb0
   140012113:	mov    rdx,QWORD PTR [r14]
   140012116:	test   rdx,rdx
   140012119:	je     0x140012311
   14001211f:	mov    rcx,rdi
   140012122:	call   0x140010350
   140012127:	jmp    0x140012311
   14001212c:	mov    dl,0x4
   14001212e:	mov    rcx,rdi
   140012131:	call   0x14000ddb0
   140012136:	mov    rdx,QWORD PTR [r14]
   140012139:	test   rdx,rdx
   14001213c:	je     0x140012311
   140012142:	mov    rcx,rdi
   140012145:	call   0x140010350
   14001214a:	jmp    0x140012311
   14001214f:	mov    dl,0x2
   140012151:	jmp    0x1400122ef
   140012156:	mov    rbx,QWORD PTR [rsi+0x38]
   14001215a:	call   0x140012850
   14001215f:	cmp    rbx,rax
   140012162:	je     0x1400122ed
   140012168:	mov    r9,QWORD PTR [rsi+0x38]
   14001216c:	mov    rdx,rdi
   14001216f:	mov    r8d,DWORD PTR [rsi+0x30]
   140012173:	mov    rcx,QWORD PTR [rsp+0x50]
   140012178:	call   0x140012e10
   14001217d:	jmp    0x140012311
   140012182:	mov    rbx,QWORD PTR [rsi+0x30]
   140012186:	mov    rcx,rbx
   140012189:	mov    rax,QWORD PTR [rbx]
   14001218c:	call   QWORD PTR [rax]
   14001218e:	cmp    eax,0x5
   140012191:	jne    0x140012309
   140012197:	mov    rcx,rbx
   14001219a:	jmp    0x1400121e9
   14001219c:	mov    rax,QWORD PTR [rsi]
   14001219f:	mov    rcx,rsi
   1400121a2:	call   QWORD PTR [rax+0x30]
   1400121a5:	cmp    eax,0x1
   1400121a8:	jne    0x14001220c
   1400121aa:	mov    ecx,DWORD PTR [rsi+0x40]
   1400121ad:	sub    ecx,0xfa3
   1400121b3:	je     0x1400121d3
   1400121b5:	cmp    ecx,eax
   1400121b7:	jne    0x1400122ed
   1400121bd:	mov    r8,QWORD PTR [rsi+0x48]
   1400121c1:	mov    rdx,rdi
   1400121c4:	mov    rcx,QWORD PTR [rsp+0x60]
   1400121c9:	call   0x140012ed0
   1400121ce:	jmp    0x140012311
   1400121d3:	mov    rcx,QWORD PTR [rsi+0x48]
   1400121d7:	mov    rax,QWORD PTR [rcx]
   1400121da:	call   QWORD PTR [rax]
   1400121dc:	cmp    eax,0x5
   1400121df:	jne    0x140012309
   1400121e5:	mov    rcx,QWORD PTR [rsi+0x48]
   1400121e9:	call   0x140012020
   1400121ee:	mov    rbx,QWORD PTR [rax+0x30]
   1400121f2:	mov    dl,0x9
   1400121f4:	mov    rcx,rdi
   1400121f7:	call   0x14000ddb0
   1400121fc:	mov    rdx,rbx
   1400121ff:	mov    rcx,rdi
   140012202:	call   0x140013580
   140012207:	jmp    0x140012311
   14001220c:	mov    eax,DWORD PTR [rsi+0x40]
   14001220f:	add    eax,0xfffff830
   140012214:	cmp    eax,0xa
   140012217:	ja     0x1400122ed
   14001221d:	mov    ecx,DWORD PTR [rbp+rax*4+0x12378]
   140012224:	add    rcx,rbp
   140012227:	jmp    rcx
   140012229:	mov    dl,0x5
   14001222b:	mov    rcx,rdi
   14001222e:	call   0x14000ddb0
   140012233:	mov    rdx,QWORD PTR [r14]
   140012236:	test   rdx,rdx
   140012239:	je     0x140012311
   14001223f:	mov    rcx,rdi
   140012242:	call   0x140010350
   140012247:	jmp    0x140012311
   14001224c:	call   0x140012910
   140012251:	mov    rcx,QWORD PTR [rsp+0x50]
   140012256:	mov    r8d,0x2
   14001225c:	mov    r9,rax
   14001225f:	mov    rdx,rdi
   140012262:	call   0x140012e10
   140012267:	jmp    0x140012311
   14001226c:	call   0x140012910
   140012271:	mov    rcx,QWORD PTR [rsp+0x50]
   140012276:	mov    r8d,0x3
   14001227c:	mov    r9,rax
   14001227f:	mov    rdx,rdi
   140012282:	call   0x140012e10
   140012287:	jmp    0x140012311
   14001228c:	call   0x140012910
   140012291:	jmp    0x1400122d5
   140012293:	call   0x140012910
   140012298:	jmp    0x1400122b8
   14001229a:	test   rbx,rbx
   14001229d:	je     0x1400122d0
   14001229f:	lea    rcx,[rbx+0x20]
   1400122a3:	lea    rdx,[rip+0x24586]        # 0x140036830
   1400122aa:	call   0x140013810
   1400122af:	test   al,al
   1400122b1:	je     0x1400122d0
   1400122b3:	call   0x1400128b0
   1400122b8:	mov    rcx,QWORD PTR [rsp+0x50]
   1400122bd:	mov    r9,rax
   1400122c0:	mov    r8d,0x3
   1400122c6:	mov    rdx,rdi
   1400122c9:	call   0x140012e10
   1400122ce:	jmp    0x140012311
   1400122d0:	call   0x1400128b0
   1400122d5:	mov    rcx,QWORD PTR [rsp+0x50]
   1400122da:	mov    r8d,0x4
   1400122e0:	mov    r9,rax
   1400122e3:	mov    rdx,rdi
   1400122e6:	call   0x140012e10
   1400122eb:	jmp    0x140012311
   1400122ed:	mov    dl,0x6
   1400122ef:	mov    rcx,rdi
   1400122f2:	call   0x14000ddb0
   1400122f7:	mov    rdx,QWORD PTR [r14]
   1400122fa:	test   rdx,rdx
   1400122fd:	je     0x140012311
   1400122ff:	mov    rcx,rdi
   140012302:	call   0x140010350
   140012307:	jmp    0x140012311
   140012309:	mov    rcx,rdi
   14001230c:	call   0x1400117f0
   140012311:	mov    rbp,QWORD PTR [rsp+0x30]
   140012316:	mov    rbx,QWORD PTR [rsp+0x38]
   14001231b:	mov    rsi,QWORD PTR [rsp+0x40]
   140012320:	mov    rdi,QWORD PTR [rsp+0x48]
   140012325:	add    rsp,0x20
   140012329:	pop    r14
   14001232b:	ret    
   14001232c:	in     al,dx
   14001232d:	and    BYTE PTR [rcx],al
   14001232f:	add    BYTE PTR [rdx+0x9000121],al
   140012335:	and    eax,DWORD PTR [rcx]
   140012337:	add    BYTE PTR [rsi+0x21],dl
   14001233a:	add    DWORD PTR [rax],eax
   14001233c:	pushf  
   14001233d:	and    DWORD PTR [rcx],eax
   14001233f:	add    bh,bl
   140012341:	and    BYTE PTR [rcx],al
   140012343:	add    ch,ch
   140012345:	and    al,BYTE PTR [rcx]
   140012347:	add    BYTE PTR [rcx],cl
   140012349:	and    DWORD PTR [rcx],eax
   14001234b:	add    BYTE PTR [rcx],cl
   14001234d:	and    DWORD PTR [rcx],eax
   14001234f:	add    BYTE PTR [rcx],cl
   140012351:	and    DWORD PTR [rcx],eax
   140012353:	add    BYTE PTR [rcx],cl
   140012355:	and    DWORD PTR [rcx],eax
   140012357:	add    BYTE PTR [rcx],cl
   140012359:	and    DWORD PTR [rcx],eax
   14001235b:	add    BYTE PTR [rcx],cl
   14001235d:	and    DWORD PTR [rcx],eax
   14001235f:	add    BYTE PTR [rcx],cl
   140012361:	and    DWORD PTR [rcx],eax
   140012363:	add    BYTE PTR [rcx],cl
   140012365:	and    DWORD PTR [rcx],eax
   140012367:	add    BYTE PTR [rcx+riz*1],ch
   14001236a:	add    DWORD PTR [rax],eax
   14001236c:	sub    DWORD PTR [rdx],esp
   14001236e:	add    DWORD PTR [rax],eax
   140012370:	sub    DWORD PTR [rdx],esp
   140012372:	add    DWORD PTR [rax],eax
   140012374:	rex.WRXB and QWORD PTR [r9],r8
   140012377:	add    BYTE PTR [rdx+0x4c000122],bl
   14001237d:	and    al,BYTE PTR [rcx]
   14001237f:	add    BYTE PTR [rdx+riz*1+0x22ed0001],cl
   140012386:	add    DWORD PTR [rax],eax
   140012388:	in     eax,dx
   140012389:	and    al,BYTE PTR [rcx]
   14001238b:	add    BYTE PTR [rbx-0x12fffede],dl
   140012391:	and    al,BYTE PTR [rcx]
   140012393:	add    ch,ch
   140012395:	and    al,BYTE PTR [rcx]
   140012397:	add    BYTE PTR [rcx],ch
   140012399:	and    al,BYTE PTR [rcx]
   14001239b:	add    ch,ch
   14001239d:	and    al,BYTE PTR [rcx]
   14001239f:	add    BYTE PTR [rdx+riz*1+0x1],ch
   1400123a3:	add    ah,cl
   1400123a5:	int3   
   1400123a6:	int3   
   1400123a7:	int3   
   1400123a8:	int3   
   1400123a9:	int3   
   1400123aa:	int3   
   1400123ab:	int3   
   1400123ac:	int3   
   1400123ad:	int3   
   1400123ae:	int3   
   1400123af:	int3   
   1400123b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400123b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400123ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400123bf:	push   rdi
   1400123c0:	sub    rsp,0x20
   1400123c4:	mov    rsi,rcx
   1400123c7:	mov    rdi,r8
   1400123ca:	mov    rcx,QWORD PTR [r8+0x18]
   1400123ce:	mov    rbx,rdx
   1400123d1:	test   rcx,rcx
   1400123d4:	je     0x140012400
   1400123d6:	mov    rax,QWORD PTR [rcx]
   1400123d9:	xor    edx,edx
   1400123db:	call   QWORD PTR [rax]
   1400123dd:	test   rax,rax
   1400123e0:	je     0x140012400
   1400123e2:	mov    rdx,QWORD PTR [rax]
   1400123e5:	mov    rcx,rax
   1400123e8:	call   QWORD PTR [rdx+0x30]
   1400123eb:	mov    rcx,QWORD PTR [rsp+0x60]
   1400123f0:	mov    rdx,rsi
   1400123f3:	mov    r8,rax
   1400123f6:	call   0x140012d90
   1400123fb:	jmp    0x140012571
   140012400:	mov    rax,QWORD PTR [rdi]
   140012403:	mov    rcx,rdi
   140012406:	call   QWORD PTR [rax]
   140012408:	cmp    eax,0x6
   14001240b:	ja     0x140012571
   140012411:	cdqe   
   140012413:	lea    rbp,[rip+0xfffffffffffedbe6]        # 0x140000000
   14001241a:	mov    eax,DWORD PTR [rbp+rax*4+0x12588]
   140012421:	add    rax,rbp
   140012424:	jmp    rax
   140012426:	mov    rcx,rdi
   140012429:	call   0x140012020
   14001242e:	mov    r8,QWORD PTR [rax+0x30]
   140012432:	mov    rdx,rsi
   140012435:	mov    rcx,QWORD PTR [rsp+0x58]
   14001243a:	call   0x140012970
   14001243f:	jmp    0x140012571
   140012444:	mov    eax,DWORD PTR [rdi+0x30]
   140012447:	add    eax,0xfffffffe
   14001244a:	cmp    eax,0xb
   14001244d:	ja     0x140012571
   140012453:	cdqe   
   140012455:	mov    ecx,DWORD PTR [rbp+rax*4+0x125a4]
   14001245c:	add    rcx,rbp
   14001245f:	jmp    rcx
   140012461:	mov    rbx,QWORD PTR [rdi+0x38]
   140012465:	call   0x140012850
   14001246a:	cmp    rbx,rax
   14001246d:	je     0x140012571
   140012473:	mov    r9,QWORD PTR [rdi+0x38]
   140012477:	mov    r8d,DWORD PTR [rdi+0x30]
   14001247b:	jmp    0x140012564
   140012480:	mov    rbx,QWORD PTR [rdi+0x30]
   140012484:	mov    rcx,rbx
   140012487:	mov    rax,QWORD PTR [rbx]
   14001248a:	call   QWORD PTR [rax]
   14001248c:	cmp    eax,0x5
   14001248f:	jne    0x140012571
   140012495:	mov    rcx,rbx
   140012498:	call   0x140012020
   14001249d:	jmp    0x14001242e
   14001249f:	mov    rax,QWORD PTR [rdi]
   1400124a2:	mov    rcx,rdi
   1400124a5:	call   QWORD PTR [rax+0x30]
   1400124a8:	cmp    eax,0x1
   1400124ab:	jne    0x1400124f6
   1400124ad:	mov    ecx,DWORD PTR [rdi+0x40]
   1400124b0:	sub    ecx,0xfa3
   1400124b6:	je     0x1400124d6
   1400124b8:	cmp    ecx,eax
   1400124ba:	jne    0x140012571
   1400124c0:	mov    r8,QWORD PTR [rdi+0x48]
   1400124c4:	mov    rdx,rsi
   1400124c7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400124cc:	call   0x140012d90
   1400124d1:	jmp    0x140012571
   1400124d6:	mov    rcx,QWORD PTR [rdi+0x48]
   1400124da:	mov    rax,QWORD PTR [rcx]
   1400124dd:	call   QWORD PTR [rax]
   1400124df:	cmp    eax,0x5
   1400124e2:	jne    0x140012571
   1400124e8:	mov    rcx,QWORD PTR [rdi+0x48]
   1400124ec:	call   0x140012020
   1400124f1:	jmp    0x14001242e
   1400124f6:	mov    eax,DWORD PTR [rdi+0x40]
   1400124f9:	add    eax,0xfffff830
   1400124fe:	cmp    eax,0xa
   140012501:	ja     0x140012571
   140012503:	mov    ecx,DWORD PTR [rbp+rax*4+0x125d4]
   14001250a:	add    rcx,rbp
   14001250d:	jmp    rcx
   14001250f:	call   0x140012910
   140012514:	mov    r8d,0x2
   14001251a:	jmp    0x140012561
   14001251c:	call   0x140012910
   140012521:	mov    r8d,0x3
   140012527:	jmp    0x140012561
   140012529:	call   0x140012910
   14001252e:	jmp    0x14001255b
   140012530:	test   rbx,rbx
   140012533:	je     0x140012556
   140012535:	lea    rcx,[rbx+0x20]
   140012539:	lea    rdx,[rip+0x242f0]        # 0x140036830
   140012540:	call   0x140013810
   140012545:	test   al,al
   140012547:	je     0x140012556
   140012549:	call   0x1400128b0
   14001254e:	mov    r8d,0x3
   140012554:	jmp    0x140012561
   140012556:	call   0x1400128b0
   14001255b:	mov    r8d,0x4
   140012561:	mov    r9,rax
   140012564:	mov    rcx,QWORD PTR [rsp+0x50]
   140012569:	mov    rdx,rsi
   14001256c:	call   0x140012d10
   140012571:	mov    rbx,QWORD PTR [rsp+0x30]
   140012576:	mov    rbp,QWORD PTR [rsp+0x38]
   14001257b:	mov    rsi,QWORD PTR [rsp+0x40]
   140012580:	add    rsp,0x20
   140012584:	pop    rdi
   140012585:	ret    
   140012586:	xchg   ax,ax
   140012588:	rex.R and al,0x1
   14001258b:	add    BYTE PTR [rax+0x71000124],al
   140012591:	and    eax,0x24610001
   140012596:	add    DWORD PTR [rax],eax
   140012598:	lahf   
   140012599:	and    al,0x1
   14001259b:	add    BYTE PTR [rsi],ah
   14001259d:	and    al,0x1
   14001259f:	add    BYTE PTR [rcx+0x25],dh
   1400125a2:	add    DWORD PTR [rax],eax
   1400125a4:	jno    0x1400125cb
   1400125a6:	add    DWORD PTR [rax],eax
   1400125a8:	jno    0x1400125cf
   1400125aa:	add    DWORD PTR [rax],eax
   1400125ac:	jno    0x1400125d3
   1400125ae:	add    DWORD PTR [rax],eax
   1400125b0:	jno    0x1400125d7
   1400125b2:	add    DWORD PTR [rax],eax
   1400125b4:	jno    0x1400125db
   1400125b6:	add    DWORD PTR [rax],eax
   1400125b8:	jno    0x1400125df
   1400125ba:	add    DWORD PTR [rax],eax
   1400125bc:	jno    0x1400125e3
   1400125be:	add    DWORD PTR [rax],eax
   1400125c0:	jno    0x1400125e7
   1400125c2:	add    DWORD PTR [rax],eax
   1400125c4:	jno    0x1400125eb
   1400125c6:	add    DWORD PTR [rax],eax
   1400125c8:	jno    0x1400125ef
   1400125ca:	add    DWORD PTR [rax],eax
   1400125cc:	jno    0x1400125f3
   1400125ce:	add    DWORD PTR [rax],eax
   1400125d0:	jno    0x1400125f7
   1400125d2:	add    DWORD PTR [rax],eax
   1400125d4:	xor    BYTE PTR [rip+0x250f0001],ah        # 0x1651025db
   1400125da:	add    DWORD PTR [rax],eax
   1400125dc:	sub    DWORD PTR [rip+0x25710001],esp        # 0x1657225e3
   1400125e2:	add    DWORD PTR [rax],eax
   1400125e4:	jno    0x14001260b
   1400125e6:	add    DWORD PTR [rax],eax
   1400125e8:	sbb    al,0x25
   1400125ea:	add    DWORD PTR [rax],eax
   1400125ec:	jno    0x140012613
   1400125ee:	add    DWORD PTR [rax],eax
   1400125f0:	jno    0x140012617
   1400125f2:	add    DWORD PTR [rax],eax
   1400125f4:	jno    0x14001261b
   1400125f6:	add    DWORD PTR [rax],eax
   1400125f8:	jno    0x14001261f
   1400125fa:	add    DWORD PTR [rax],eax
   1400125fc:	sbb    al,0x25
   1400125fe:	add    DWORD PTR [rax],eax
   140012600:	mov    QWORD PTR [rsp+0x10],rbx
   140012605:	mov    QWORD PTR [rsp+0x18],rbp
   14001260a:	mov    QWORD PTR [rsp+0x20],rsi
   14001260f:	push   rdi
   140012610:	sub    rsp,0x20
   140012614:	mov    rdi,rcx
   140012617:	mov    rsi,r9
   14001261a:	mov    rcx,QWORD PTR [r8+0x18]
   14001261e:	mov    rbx,r8
   140012621:	mov    rbp,rdx
   140012624:	test   rcx,rcx
   140012627:	je     0x140012659
   140012629:	mov    rax,QWORD PTR [rcx]
   14001262c:	xor    edx,edx
   14001262e:	call   QWORD PTR [rax]
   140012630:	test   rax,rax
   140012633:	je     0x140012659
   140012635:	mov    rdx,QWORD PTR [rax]
   140012638:	mov    rcx,rax
   14001263b:	call   QWORD PTR [rdx+0x30]
   14001263e:	mov    rbx,QWORD PTR [rsp+0x60]
   140012643:	mov    rcx,rdi
   140012646:	mov    rdx,QWORD PTR [rbx]
   140012649:	call   0x14000df80
   14001264e:	mov    rcx,QWORD PTR [rbx+0x8]
   140012652:	mov    BYTE PTR [rcx],al
   140012654:	jmp    0x1400127c0
   140012659:	mov    rax,QWORD PTR [rbx]
   14001265c:	mov    rcx,rbx
   14001265f:	call   QWORD PTR [rax]
   140012661:	cmp    eax,0x6
   140012664:	ja     0x1400127c0
   14001266a:	cdqe   
   14001266c:	mov    QWORD PTR [rsp+0x30],r14
   140012671:	lea    r14,[rip+0xfffffffffffed988]        # 0x140000000
   140012678:	mov    eax,DWORD PTR [r14+rax*4+0x127d8]
   140012680:	add    rax,r14
   140012683:	jmp    rax
   140012685:	mov    rcx,rbx
   140012688:	call   0x140012020
   14001268d:	jmp    0x140012746
   140012692:	mov    eax,DWORD PTR [rbx+0x30]
   140012695:	add    eax,0xfffffffe
   140012698:	cmp    eax,0xb
   14001269b:	ja     0x1400127bb
   1400126a1:	cdqe   
   1400126a3:	mov    ecx,DWORD PTR [r14+rax*4+0x127f4]
   1400126ab:	add    rcx,r14
   1400126ae:	jmp    rcx
   1400126b0:	mov    rbx,QWORD PTR [rbx+0x38]
   1400126b4:	call   0x140012850
   1400126b9:	mov    rcx,rdi
   1400126bc:	cmp    rbx,rax
   1400126bf:	je     0x1400127ad
   1400126c5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400126ca:	mov    rdx,QWORD PTR [rbx]
   1400126cd:	call   0x14000df80
   1400126d2:	mov    rcx,QWORD PTR [rbx+0x8]
   1400126d6:	jmp    0x1400127b9
   1400126db:	mov    rbx,QWORD PTR [rbx+0x30]
   1400126df:	mov    rcx,rbx
   1400126e2:	mov    rax,QWORD PTR [rbx]
   1400126e5:	call   QWORD PTR [rax]
   1400126e7:	cmp    eax,0x5
   1400126ea:	jne    0x1400127bb
   1400126f0:	mov    rcx,rbx
   1400126f3:	jmp    0x140012741
   1400126f5:	mov    rax,QWORD PTR [rbx]
   1400126f8:	mov    rcx,rbx
   1400126fb:	call   QWORD PTR [rax+0x30]
   1400126fe:	cmp    eax,0x1
   140012701:	jne    0x140012759
   140012703:	mov    ecx,DWORD PTR [rbx+0x40]
   140012706:	sub    ecx,0xfa3
   14001270c:	je     0x14001272f
   14001270e:	cmp    ecx,eax
   140012710:	mov    rcx,rdi
   140012713:	jne    0x1400127ad
   140012719:	mov    rbx,QWORD PTR [rsp+0x60]
   14001271e:	mov    rdx,QWORD PTR [rbx]
   140012721:	call   0x14000df80
   140012726:	mov    rcx,QWORD PTR [rbx+0x8]
   14001272a:	jmp    0x1400127b9
   14001272f:	mov    rcx,QWORD PTR [rbx+0x48]
   140012733:	mov    rax,QWORD PTR [rcx]
   140012736:	call   QWORD PTR [rax]
   140012738:	cmp    eax,0x5
   14001273b:	jne    0x1400127bb
   14001273d:	mov    rcx,QWORD PTR [rbx+0x48]
   140012741:	call   0x140012020
   140012746:	mov    r8,QWORD PTR [rax+0x30]
   14001274a:	mov    rdx,rdi
   14001274d:	mov    rcx,QWORD PTR [rsp+0x58]
   140012752:	call   0x140012b60
   140012757:	jmp    0x1400127bb
   140012759:	mov    eax,DWORD PTR [rbx+0x40]
   14001275c:	add    eax,0xfffff830
   140012761:	cmp    eax,0xa
   140012764:	ja     0x1400127aa
   140012766:	mov    ecx,DWORD PTR [r14+rax*4+0x12824]
   14001276e:	add    rcx,r14
   140012771:	jmp    rcx
   140012773:	call   0x140012910
   140012778:	mov    rbx,QWORD PTR [rsp+0x50]
   14001277d:	mov    rcx,rdi
   140012780:	mov    rdx,QWORD PTR [rbx]
   140012783:	call   0x14000df80
   140012788:	mov    rcx,QWORD PTR [rbx+0x8]
   14001278c:	jmp    0x1400127b9
   14001278e:	test   rbp,rbp
   140012791:	je     0x1400127a3
   140012793:	lea    rcx,[rbp+0x20]
   140012797:	lea    rdx,[rip+0x24092]        # 0x140036830
   14001279e:	call   0x140013810
   1400127a3:	call   0x1400128b0
   1400127a8:	jmp    0x140012778
   1400127aa:	mov    rcx,rdi
   1400127ad:	mov    rdx,QWORD PTR [rsi]
   1400127b0:	call   0x14000df80
   1400127b5:	mov    rcx,QWORD PTR [rsi+0x8]
   1400127b9:	mov    BYTE PTR [rcx],al
   1400127bb:	mov    r14,QWORD PTR [rsp+0x30]
   1400127c0:	mov    rbx,QWORD PTR [rsp+0x38]
   1400127c5:	mov    rbp,QWORD PTR [rsp+0x40]
   1400127ca:	mov    rsi,QWORD PTR [rsp+0x48]
   1400127cf:	add    rsp,0x20
   1400127d3:	pop    rdi
   1400127d4:	ret    
   1400127d5:	nop    DWORD PTR [rax]
   1400127d8:	xchg   edx,eax
   1400127d9:	add    DWORD PTR es:[rax],eax
   1400127dc:	(bad)  [rsi]
   1400127de:	add    DWORD PTR [rax],eax
   1400127e0:	mov    ebx,0xb0000127
   1400127e5:	add    DWORD PTR es:[rax],eax
   1400127e8:	cmc    
   1400127e9:	add    DWORD PTR es:[rax],eax
   1400127ec:	test   DWORD PTR [rsi],esp
   1400127ee:	add    DWORD PTR [rax],eax
   1400127f0:	stos   BYTE PTR es:[rdi],al
   1400127f1:	(bad)  
   1400127f2:	add    DWORD PTR [rax],eax
   1400127f4:	stos   BYTE PTR es:[rdi],al
   1400127f5:	(bad)  
   1400127f6:	add    DWORD PTR [rax],eax
   1400127f8:	stos   BYTE PTR es:[rdi],al
   1400127f9:	(bad)  
   1400127fa:	add    DWORD PTR [rax],eax
   1400127fc:	stos   BYTE PTR es:[rdi],al
   1400127fd:	(bad)  
   1400127fe:	add    DWORD PTR [rax],eax
   140012800:	stos   BYTE PTR es:[rdi],al
   140012801:	(bad)  
   140012802:	add    DWORD PTR [rax],eax
   140012804:	stos   BYTE PTR es:[rdi],al
   140012805:	(bad)  
   140012806:	add    DWORD PTR [rax],eax
   140012808:	stos   BYTE PTR es:[rdi],al
   140012809:	(bad)  
   14001280a:	add    DWORD PTR [rax],eax
   14001280c:	stos   BYTE PTR es:[rdi],al
   14001280d:	(bad)  
   14001280e:	add    DWORD PTR [rax],eax
   140012810:	stos   BYTE PTR es:[rdi],al
   140012811:	(bad)  
   140012812:	add    DWORD PTR [rax],eax
   140012814:	stos   BYTE PTR es:[rdi],al
   140012815:	(bad)  
   140012816:	add    DWORD PTR [rax],eax
   140012818:	stos   BYTE PTR es:[rdi],al
   140012819:	(bad)  
   14001281a:	add    DWORD PTR [rax],eax
   14001281c:	stos   BYTE PTR es:[rdi],al
   14001281d:	(bad)  
   14001281e:	add    DWORD PTR [rax],eax
   140012820:	stos   BYTE PTR es:[rdi],al
   140012821:	(bad)  
   140012822:	add    DWORD PTR [rax],eax
   140012824:	mov    fs,WORD PTR [rdi]
   140012826:	add    DWORD PTR [rax],eax
   140012828:	jae    0x140012851
   14001282a:	add    DWORD PTR [rax],eax
   14001282c:	jae    0x140012855
   14001282e:	add    DWORD PTR [rax],eax
   140012830:	stos   BYTE PTR es:[rdi],al
   140012831:	(bad)  
   140012832:	add    DWORD PTR [rax],eax
   140012834:	stos   BYTE PTR es:[rdi],al
   140012835:	(bad)  
   140012836:	add    DWORD PTR [rax],eax
   140012838:	jae    0x140012861
   14001283a:	add    DWORD PTR [rax],eax
   14001283c:	stos   BYTE PTR es:[rdi],al
   14001283d:	(bad)  
   14001283e:	add    DWORD PTR [rax],eax
   140012840:	stos   BYTE PTR es:[rdi],al
   140012841:	(bad)  
   140012842:	add    DWORD PTR [rax],eax
   140012844:	stos   BYTE PTR es:[rdi],al
   140012845:	(bad)  
   140012846:	add    DWORD PTR [rax],eax
   140012848:	stos   BYTE PTR es:[rdi],al
   140012849:	(bad)  
   14001284a:	add    DWORD PTR [rax],eax
   14001284c:	jae    0x140012875
   14001284e:	add    DWORD PTR [rax],eax
   140012850:	sub    rsp,0x28
   140012854:	mov    rax,QWORD PTR [rip+0x35605]        # 0x140047e60
   14001285b:	test   rax,rax
   14001285e:	jne    0x14001289c
   140012860:	mov    rax,QWORD PTR [rip+0x34951]        # 0x1400471b8
   140012867:	mov    QWORD PTR [rsp+0x20],rbx
   14001286c:	mov    rbx,QWORD PTR [rax]
   14001286f:	call   0x140007c10
   140012874:	mov    rcx,QWORD PTR [rip+0x3493d]        # 0x1400471b8
   14001287b:	mov    rdx,rax
   14001287e:	call   QWORD PTR [rbx+0x68]
   140012881:	mov    edx,0x2
   140012886:	mov    rcx,rax
   140012889:	mov    r8,QWORD PTR [rax]
   14001288c:	call   QWORD PTR [r8+0x28]
   140012890:	mov    rbx,QWORD PTR [rsp+0x20]
   140012895:	mov    QWORD PTR [rip+0x355c4],rax        # 0x140047e60
   14001289c:	add    rsp,0x28
   1400128a0:	ret    
   1400128a1:	int3   
   1400128a2:	int3   
   1400128a3:	int3   
   1400128a4:	int3   
   1400128a5:	int3   
   1400128a6:	int3   
   1400128a7:	int3   
   1400128a8:	int3   
   1400128a9:	int3   
   1400128aa:	int3   
   1400128ab:	int3   
   1400128ac:	int3   
   1400128ad:	int3   
   1400128ae:	int3   
   1400128af:	int3   
   1400128b0:	sub    rsp,0x28
   1400128b4:	mov    rax,QWORD PTR [rip+0x355b5]        # 0x140047e70
   1400128bb:	test   rax,rax
   1400128be:	jne    0x1400128fc
   1400128c0:	mov    rax,QWORD PTR [rip+0x348f1]        # 0x1400471b8
   1400128c7:	mov    QWORD PTR [rsp+0x20],rbx
   1400128cc:	mov    rbx,QWORD PTR [rax]
   1400128cf:	call   0x140007c10
   1400128d4:	mov    rcx,QWORD PTR [rip+0x348dd]        # 0x1400471b8
   1400128db:	mov    rdx,rax
   1400128de:	call   QWORD PTR [rbx+0x68]
   1400128e1:	mov    edx,0x7
   1400128e6:	mov    rcx,rax
   1400128e9:	mov    r8,QWORD PTR [rax]
   1400128ec:	call   QWORD PTR [r8+0x28]
   1400128f0:	mov    rbx,QWORD PTR [rsp+0x20]
   1400128f5:	mov    QWORD PTR [rip+0x35574],rax        # 0x140047e70
   1400128fc:	add    rsp,0x28
   140012900:	ret    
   140012901:	int3   
   140012902:	int3   
   140012903:	int3   
   140012904:	int3   
   140012905:	int3   
   140012906:	int3   
   140012907:	int3   
   140012908:	int3   
   140012909:	int3   
   14001290a:	int3   
   14001290b:	int3   
   14001290c:	int3   
   14001290d:	int3   
   14001290e:	int3   
   14001290f:	int3   
   140012910:	sub    rsp,0x28
   140012914:	mov    rax,QWORD PTR [rip+0x3554d]        # 0x140047e68
   14001291b:	test   rax,rax
   14001291e:	jne    0x14001295c
   140012920:	mov    rax,QWORD PTR [rip+0x34891]        # 0x1400471b8
   140012927:	mov    QWORD PTR [rsp+0x20],rbx
   14001292c:	mov    rbx,QWORD PTR [rax]
   14001292f:	call   0x140007c10
   140012934:	mov    rcx,QWORD PTR [rip+0x3487d]        # 0x1400471b8
   14001293b:	mov    rdx,rax
   14001293e:	call   QWORD PTR [rbx+0x68]
   140012941:	mov    edx,0xc
   140012946:	mov    rcx,rax
   140012949:	mov    r8,QWORD PTR [rax]
   14001294c:	call   QWORD PTR [r8+0x28]
   140012950:	mov    rbx,QWORD PTR [rsp+0x20]
   140012955:	mov    QWORD PTR [rip+0x3550c],rax        # 0x140047e68
   14001295c:	add    rsp,0x28
   140012960:	ret    
   140012961:	int3   
   140012962:	int3   
   140012963:	int3   
   140012964:	int3   
   140012965:	int3   
   140012966:	int3   
   140012967:	int3   
   140012968:	int3   
   140012969:	int3   
   14001296a:	int3   
   14001296b:	int3   
   14001296c:	int3   
   14001296d:	int3   
   14001296e:	int3   
   14001296f:	int3   
   140012970:	mov    QWORD PTR [rsp+0x8],rbx
   140012975:	mov    QWORD PTR [rsp+0x10],rbp
   14001297a:	mov    QWORD PTR [rsp+0x18],rsi
   14001297f:	mov    QWORD PTR [rsp+0x20],rdi
   140012984:	push   r14
   140012986:	sub    rsp,0xe0
   14001298d:	test   BYTE PTR [r8+0xbc],0x1
   140012995:	mov    rdi,r8
   140012998:	mov    rbp,rdx
   14001299b:	mov    rsi,rcx
   14001299e:	je     0x1400129e4
   1400129a0:	xor    r9d,r9d
   1400129a3:	lea    rdx,[rip+0x23ea2]        # 0x14003684c
   1400129aa:	xor    r8d,r8d
   1400129ad:	mov    rcx,rbp
   1400129b0:	call   0x14000ee70
   1400129b5:	mov    rdi,rax
   1400129b8:	mov    rax,QWORD PTR [rip+0x347f9]        # 0x1400471b8
   1400129bf:	mov    rbx,QWORD PTR [rax]
   1400129c2:	call   0x140007c10
   1400129c7:	mov    rcx,QWORD PTR [rip+0x347ea]        # 0x1400471b8
   1400129ce:	mov    rdx,rax
   1400129d1:	call   QWORD PTR [rbx+0x68]
   1400129d4:	mov    rdx,rdi
   1400129d7:	mov    rcx,rax
   1400129da:	mov    r8,QWORD PTR [rax]
   1400129dd:	call   QWORD PTR [r8+0x10]
   1400129e1:	mov    rdi,rax
   1400129e4:	mov    rcx,QWORD PTR [rsi]
   1400129e7:	mov    rbx,QWORD PTR [rcx]
   1400129ea:	movsxd r14,DWORD PTR [rbx]
   1400129ed:	cmp    r14d,DWORD PTR [rbx+0x10]
   1400129f1:	jne    0x140012a01
   1400129f3:	lea    rcx,[rbx+0x8]
   1400129f7:	mov    edx,0x1
   1400129fc:	call   0x140013420
   140012a01:	mov    rax,QWORD PTR [rbx+0x8]
   140012a05:	inc    DWORD PTR [rbx]
   140012a07:	lea    r8,[rax+r14*8]
   140012a0b:	test   r8,r8
   140012a0e:	je     0x140012a13
   140012a10:	mov    QWORD PTR [r8],rbp
   140012a13:	mov    rax,QWORD PTR [rsi+0x8]
   140012a17:	mov    rbx,QWORD PTR [rax]
   140012a1a:	movsxd r14,DWORD PTR [rbx]
   140012a1d:	cmp    r14d,DWORD PTR [rbx+0x10]
   140012a21:	jne    0x140012a31
   140012a23:	lea    rcx,[rbx+0x8]
   140012a27:	mov    edx,0x1
   140012a2c:	call   0x140013420
   140012a31:	mov    rax,QWORD PTR [rbx+0x8]
   140012a35:	inc    DWORD PTR [rbx]
   140012a37:	lea    rdx,[rax+r14*8]
   140012a3b:	test   rdx,rdx
   140012a3e:	je     0x140012a43
   140012a40:	mov    QWORD PTR [rdx],rdi
   140012a43:	mov    r8d,0x2
   140012a49:	lea    rcx,[rsp+0x20]
   140012a4e:	mov    rdx,rdi
   140012a51:	call   0x14001a2e0
   140012a56:	lea    rcx,[rsp+0x20]
   140012a5b:	call   0x14001a7c0
   140012a60:	test   al,al
   140012a62:	je     0x140012abe
   140012a64:	lea    rcx,[rsp+0x20]
   140012a69:	call   0x14001a6d0
   140012a6e:	mov    rdx,rax
   140012a71:	xor    r8d,r8d
   140012a74:	mov    rcx,rbp
   140012a77:	call   0x14000e1f0
   140012a7c:	mov    rbx,rax
   140012a7f:	test   rax,rax
   140012a82:	je     0x140012aa6
   140012a84:	lea    rcx,[rsp+0x20]
   140012a89:	call   0x14001a6f0
   140012a8e:	mov    rdx,QWORD PTR [rsi+0x8]
   140012a92:	mov    r9,rax
   140012a95:	mov    rcx,QWORD PTR [rsi]
   140012a98:	mov    r8,rbx
   140012a9b:	mov    rdx,QWORD PTR [rdx]
   140012a9e:	mov    rcx,QWORD PTR [rcx]
   140012aa1:	call   0x140012f50
   140012aa6:	lea    rcx,[rsp+0x20]
   140012aab:	call   0x14001a3b0
   140012ab0:	lea    rcx,[rsp+0x20]
   140012ab5:	call   0x14001a7c0
   140012aba:	test   al,al
   140012abc:	jne    0x140012a64
   140012abe:	cmp    DWORD PTR [rsp+0x30],0x0
   140012ac3:	mov    rdx,QWORD PTR [rsp+0x28]
   140012ac8:	mov    DWORD PTR [rsp+0x20],0x0
   140012ad0:	jl     0x140012b1e
   140012ad2:	lea    rax,[rsp+0x38]
   140012ad7:	cmp    rdx,rax
   140012ada:	je     0x140012b1e
   140012adc:	test   rdx,rdx
   140012adf:	je     0x140012afb
   140012ae1:	test   DWORD PTR [rsp+0x34],0xc0000000
   140012ae9:	jne    0x140012afb
   140012aeb:	mov    rax,QWORD PTR [rip+0x1f89e]        # 0x140032390
   140012af2:	mov    rcx,QWORD PTR [rax]
   140012af5:	mov    rax,QWORD PTR [rcx]
   140012af8:	call   QWORD PTR [rax+0x28]
   140012afb:	mov    eax,DWORD PTR [rsp+0x34]
   140012aff:	lea    rdx,[rsp+0x38]
   140012b04:	and    eax,0x3fffffff
   140012b09:	mov    QWORD PTR [rsp+0x28],rdx
   140012b0e:	bts    eax,0x1f
   140012b12:	mov    DWORD PTR [rsp+0x30],0x8
   140012b1a:	mov    DWORD PTR [rsp+0x34],eax
   140012b1e:	test   DWORD PTR [rsp+0x34],0xc0000000
   140012b26:	jne    0x140012b3d
   140012b28:	test   rdx,rdx
   140012b2b:	je     0x140012b3d
   140012b2d:	mov    rax,QWORD PTR [rip+0x1f85c]        # 0x140032390
   140012b34:	mov    rcx,QWORD PTR [rax]
   140012b37:	mov    rax,QWORD PTR [rcx]
   140012b3a:	call   QWORD PTR [rax+0x28]
   140012b3d:	lea    r11,[rsp+0xe0]
   140012b45:	mov    rbx,QWORD PTR [r11+0x10]
   140012b49:	mov    rbp,QWORD PTR [r11+0x18]
   140012b4d:	mov    rsi,QWORD PTR [r11+0x20]
   140012b51:	mov    rdi,QWORD PTR [r11+0x28]
   140012b55:	mov    rsp,r11
   140012b58:	pop    r14
   140012b5a:	ret    
   140012b5b:	int3   
   140012b5c:	int3   
   140012b5d:	int3   
   140012b5e:	int3   
   140012b5f:	int3   
   140012b60:	mov    QWORD PTR [rsp+0x8],rbx
   140012b65:	mov    QWORD PTR [rsp+0x10],rsi
   140012b6a:	mov    QWORD PTR [rsp+0x18],rdi
   140012b6f:	push   rbp
   140012b70:	push   r14
   140012b72:	push   r15
   140012b74:	lea    rbp,[rsp-0x47]
   140012b79:	sub    rsp,0xe0
   140012b80:	mov    rax,r8
   140012b83:	mov    r14,rdx
   140012b86:	mov    r15,rcx
   140012b89:	xor    edi,edi
   140012b8b:	mov    rdx,rax
   140012b8e:	lea    rcx,[rbp-0x79]
   140012b92:	lea    r8d,[rdi+0x2]
   140012b96:	call   0x14001a2e0
   140012b9b:	lea    rcx,[rbp-0x79]
   140012b9f:	call   0x14001a7c0
   140012ba4:	test   al,al
   140012ba6:	je     0x140012c22
   140012ba8:	nop    DWORD PTR [rax+rax*1+0x0]
   140012bb0:	lea    rcx,[rbp-0x79]
   140012bb4:	call   0x14001a6d0
   140012bb9:	mov    rdx,rax
   140012bbc:	xor    r8d,r8d
   140012bbf:	mov    rcx,r14
   140012bc2:	call   0x14000e1f0
   140012bc7:	mov    rsi,rax
   140012bca:	test   rax,rax
   140012bcd:	je     0x140012c0c
   140012bcf:	lea    rdx,[rip+0x23c4a]        # 0x140036820
   140012bd6:	lea    rcx,[rbp-0x79]
   140012bda:	call   0x1400130b0
   140012bdf:	test   rax,rax
   140012be2:	je     0x140012be9
   140012be4:	mov    rbx,QWORD PTR [rax]
   140012be7:	jmp    0x140012beb
   140012be9:	xor    ebx,ebx
   140012beb:	lea    rcx,[rbp-0x79]
   140012bef:	call   0x14001a6e0
   140012bf4:	mov    rdx,rax
   140012bf7:	mov    r8,rbx
   140012bfa:	mov    rcx,rsi
   140012bfd:	call   0x1400138f0
   140012c02:	test   al,al
   140012c04:	je     0x140012cc5
   140012c0a:	inc    edi
   140012c0c:	lea    rcx,[rbp-0x79]
   140012c10:	call   0x14001a3b0
   140012c15:	lea    rcx,[rbp-0x79]
   140012c19:	call   0x14001a7c0
   140012c1e:	test   al,al
   140012c20:	jne    0x140012bb0
   140012c22:	cmp    DWORD PTR [rbp-0x69],0x0
   140012c26:	mov    rdx,QWORD PTR [rbp-0x71]
   140012c2a:	mov    DWORD PTR [rbp-0x79],0x0
   140012c31:	jl     0x140012c78
   140012c33:	lea    rax,[rbp-0x61]
   140012c37:	cmp    rdx,rax
   140012c3a:	je     0x140012c78
   140012c3c:	test   rdx,rdx
   140012c3f:	je     0x140012c5a
   140012c41:	test   DWORD PTR [rbp-0x65],0xc0000000
   140012c48:	jne    0x140012c5a
   140012c4a:	mov    rax,QWORD PTR [rip+0x1f73f]        # 0x140032390
   140012c51:	mov    rcx,QWORD PTR [rax]
   140012c54:	mov    rax,QWORD PTR [rcx]
   140012c57:	call   QWORD PTR [rax+0x28]
   140012c5a:	mov    eax,DWORD PTR [rbp-0x65]
   140012c5d:	lea    rdx,[rbp-0x61]
   140012c61:	and    eax,0x3fffffff
   140012c66:	mov    QWORD PTR [rbp-0x71],rdx
   140012c6a:	bts    eax,0x1f
   140012c6e:	mov    DWORD PTR [rbp-0x69],0x8
   140012c75:	mov    DWORD PTR [rbp-0x65],eax
   140012c78:	test   DWORD PTR [rbp-0x65],0xc0000000
   140012c7f:	jne    0x140012c96
   140012c81:	test   rdx,rdx
   140012c84:	je     0x140012c96
   140012c86:	mov    rax,QWORD PTR [rip+0x1f703]        # 0x140032390
   140012c8d:	mov    rcx,QWORD PTR [rax]
   140012c90:	mov    rax,QWORD PTR [rcx]
   140012c93:	call   QWORD PTR [rax+0x28]
   140012c96:	mov    rcx,r14
   140012c99:	call   0x14000ec10
   140012c9e:	cmp    edi,eax
   140012ca0:	mov    rax,QWORD PTR [r15]
   140012ca3:	sete   cl
   140012ca6:	mov    BYTE PTR [rax],cl
   140012ca8:	lea    r11,[rsp+0xe0]
   140012cb0:	mov    rbx,QWORD PTR [r11+0x20]
   140012cb4:	mov    rsi,QWORD PTR [r11+0x28]
   140012cb8:	mov    rdi,QWORD PTR [r11+0x30]
   140012cbc:	mov    rsp,r11
   140012cbf:	pop    r15
   140012cc1:	pop    r14
   140012cc3:	pop    rbp
   140012cc4:	ret    
   140012cc5:	xor    r9d,r9d
   140012cc8:	mov    DWORD PTR [rbp-0x79],0x0
   140012ccf:	lea    rdx,[rbp-0x61]
   140012cd3:	lea    rcx,[rbp-0x71]
   140012cd7:	lea    r8d,[r9+0x8]
   140012cdb:	call   0x140013c80
   140012ce0:	test   DWORD PTR [rbp-0x65],0xc0000000
   140012ce7:	jne    0x140012ca8
   140012ce9:	mov    rdx,QWORD PTR [rbp-0x71]
   140012ced:	test   rdx,rdx
   140012cf0:	je     0x140012ca8
   140012cf2:	mov    rax,QWORD PTR [rip+0x1f697]        # 0x140032390
   140012cf9:	mov    rcx,QWORD PTR [rax]
   140012cfc:	mov    rax,QWORD PTR [rcx]
   140012cff:	call   QWORD PTR [rax+0x28]
   140012d02:	jmp    0x140012ca8
   140012d04:	int3   
   140012d05:	int3   
   140012d06:	int3   
   140012d07:	int3   
   140012d08:	int3   
   140012d09:	int3   
   140012d0a:	int3   
   140012d0b:	int3   
   140012d0c:	int3   
   140012d0d:	int3   
   140012d0e:	int3   
   140012d0f:	int3   
   140012d10:	mov    QWORD PTR [rsp+0x8],rbx
   140012d15:	mov    QWORD PTR [rsp+0x10],rbp
   140012d1a:	mov    QWORD PTR [rsp+0x18],rsi
   140012d1f:	push   rdi
   140012d20:	sub    rsp,0x20
   140012d24:	mov    rsi,rcx
   140012d27:	mov    rbp,r9
   140012d2a:	mov    rcx,rdx
   140012d2d:	mov    rdi,rdx
   140012d30:	xor    ebx,ebx
   140012d32:	call   0x14000ea00
   140012d37:	test   eax,eax
   140012d39:	jle    0x140012d70
   140012d3b:	nop    DWORD PTR [rax+rax*1+0x0]
   140012d40:	mov    edx,ebx
   140012d42:	mov    rcx,rdi
   140012d45:	call   0x14000e9b0
   140012d4a:	mov    rdx,QWORD PTR [rsi+0x8]
   140012d4e:	mov    r8,rax
   140012d51:	mov    rcx,QWORD PTR [rsi]
   140012d54:	mov    r9,rbp
   140012d57:	mov    rdx,QWORD PTR [rdx]
   140012d5a:	mov    rcx,QWORD PTR [rcx]
   140012d5d:	call   0x140012f50
   140012d62:	mov    rcx,rdi
   140012d65:	inc    ebx
   140012d67:	call   0x14000ea00
   140012d6c:	cmp    ebx,eax
   140012d6e:	jl     0x140012d40
   140012d70:	mov    rbx,QWORD PTR [rsp+0x30]
   140012d75:	mov    rbp,QWORD PTR [rsp+0x38]
   140012d7a:	mov    rsi,QWORD PTR [rsp+0x40]
   140012d7f:	add    rsp,0x20
   140012d83:	pop    rdi
   140012d84:	ret    
   140012d85:	int3   
   140012d86:	int3   
   140012d87:	int3   
   140012d88:	int3   
   140012d89:	int3   
   140012d8a:	int3   
   140012d8b:	int3   
   140012d8c:	int3   
   140012d8d:	int3   
   140012d8e:	int3   
   140012d8f:	int3   
   140012d90:	mov    QWORD PTR [rsp+0x8],rbx
   140012d95:	mov    QWORD PTR [rsp+0x10],rbp
   140012d9a:	mov    QWORD PTR [rsp+0x18],rsi
   140012d9f:	push   rdi
   140012da0:	sub    rsp,0x20
   140012da4:	mov    rsi,rcx
   140012da7:	mov    rbp,r8
   140012daa:	mov    rcx,rdx
   140012dad:	mov    rdi,rdx
   140012db0:	xor    ebx,ebx
   140012db2:	call   0x14000ea00
   140012db7:	test   eax,eax
   140012db9:	jle    0x140012df0
   140012dbb:	nop    DWORD PTR [rax+rax*1+0x0]
   140012dc0:	mov    edx,ebx
   140012dc2:	mov    rcx,rdi
   140012dc5:	call   0x14000e9b0
   140012dca:	mov    rdx,QWORD PTR [rsi+0x8]
   140012dce:	mov    r8,rax
   140012dd1:	mov    rcx,QWORD PTR [rsi]
   140012dd4:	mov    r9,rbp
   140012dd7:	mov    rdx,QWORD PTR [rdx]
   140012dda:	mov    rcx,QWORD PTR [rcx]
   140012ddd:	call   0x140012f50
   140012de2:	mov    rcx,rdi
   140012de5:	inc    ebx
   140012de7:	call   0x14000ea00
   140012dec:	cmp    ebx,eax
   140012dee:	jl     0x140012dc0
   140012df0:	mov    rbx,QWORD PTR [rsp+0x30]
   140012df5:	mov    rbp,QWORD PTR [rsp+0x38]
   140012dfa:	mov    rsi,QWORD PTR [rsp+0x40]
   140012dff:	add    rsp,0x20
   140012e03:	pop    rdi
   140012e04:	ret    
   140012e05:	int3   
   140012e06:	int3   
   140012e07:	int3   
   140012e08:	int3   
   140012e09:	int3   
   140012e0a:	int3   
   140012e0b:	int3   
   140012e0c:	int3   
   140012e0d:	int3   
   140012e0e:	int3   
   140012e0f:	int3   
   140012e10:	mov    QWORD PTR [rsp+0x8],rbx
   140012e15:	mov    QWORD PTR [rsp+0x10],rbp
   140012e1a:	mov    QWORD PTR [rsp+0x18],rsi
   140012e1f:	push   rdi
   140012e20:	push   r14
   140012e22:	push   r15
   140012e24:	sub    rsp,0x40
   140012e28:	mov    rsi,rdx
   140012e2b:	mov    r14,rcx
   140012e2e:	mov    rcx,rsi
   140012e31:	mov    edx,r8d
   140012e34:	mov    r15,r9
   140012e37:	call   0x14000dce0
   140012e3c:	mov    rax,QWORD PTR [r14]
   140012e3f:	lea    rdx,[rip+0x1f95a]        # 0x1400327a0
   140012e46:	test   rax,rax
   140012e49:	lea    r8,[rip+0x20094]        # 0x140032ee4
   140012e50:	lea    rcx,[rsp+0x20]
   140012e55:	cmovne rdx,rax
   140012e59:	call   0x1400229e0
   140012e5e:	movsxd rbp,DWORD PTR [rsp+0x20]
   140012e63:	xor    ebx,ebx
   140012e65:	mov    edi,ebx
   140012e67:	test   rbp,rbp
   140012e6a:	jle    0x140012ea8
   140012e6c:	nop    DWORD PTR [rax+0x0]
   140012e70:	mov    rcx,rsi
   140012e73:	call   0x14000ea00
   140012e78:	cmp    ebx,eax
   140012e7a:	jge    0x140012ea8
   140012e7c:	mov    edx,ebx
   140012e7e:	mov    rcx,rsi
   140012e81:	call   0x14000e9b0
   140012e86:	mov    r9,QWORD PTR [rsp+0x28]
   140012e8b:	mov    rcx,rax
   140012e8e:	mov    rdx,QWORD PTR [r14+0x8]
   140012e92:	mov    r8,r15
   140012e95:	mov    r9,QWORD PTR [r9+rdi*8]
   140012e99:	call   0x140013770
   140012e9e:	inc    ebx
   140012ea0:	inc    rdi
   140012ea3:	cmp    rdi,rbp
   140012ea6:	jl     0x140012e70
   140012ea8:	lea    rcx,[rsp+0x20]
   140012ead:	call   0x140022a10
   140012eb2:	mov    rbx,QWORD PTR [rsp+0x60]
   140012eb7:	mov    rbp,QWORD PTR [rsp+0x68]
   140012ebc:	mov    rsi,QWORD PTR [rsp+0x70]
   140012ec1:	add    rsp,0x40
   140012ec5:	pop    r15
   140012ec7:	pop    r14
   140012ec9:	pop    rdi
   140012eca:	ret    
   140012ecb:	int3   
   140012ecc:	int3   
   140012ecd:	int3   
   140012ece:	int3   
   140012ecf:	int3   
   140012ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140012ed5:	mov    QWORD PTR [rsp+0x10],rbp
   140012eda:	mov    QWORD PTR [rsp+0x18],rsi
   140012edf:	push   rdi
   140012ee0:	sub    rsp,0x20
   140012ee4:	mov    rdi,rdx
   140012ee7:	mov    rsi,rcx
   140012eea:	mov    rcx,rdi
   140012eed:	mov    dl,0x8
   140012eef:	mov    rbp,r8
   140012ef2:	call   0x14000ddb0
   140012ef7:	mov    rcx,rdi
   140012efa:	xor    ebx,ebx
   140012efc:	call   0x14000ea00
   140012f01:	test   eax,eax
   140012f03:	jle    0x140012f2f
   140012f05:	mov    edx,ebx
   140012f07:	mov    rcx,rdi
   140012f0a:	call   0x14000e9b0
   140012f0f:	mov    r9,QWORD PTR [rsi]
   140012f12:	mov    rcx,rax
   140012f15:	mov    rdx,QWORD PTR [rsi+0x8]
   140012f19:	mov    r8,rbp
   140012f1c:	call   0x140013770
   140012f21:	mov    rcx,rdi
   140012f24:	inc    ebx
   140012f26:	call   0x14000ea00
   140012f2b:	cmp    ebx,eax
   140012f2d:	jl     0x140012f05
   140012f2f:	mov    rbx,QWORD PTR [rsp+0x30]
   140012f34:	mov    rbp,QWORD PTR [rsp+0x38]
   140012f39:	mov    rsi,QWORD PTR [rsp+0x40]
   140012f3e:	add    rsp,0x20
   140012f42:	pop    rdi
   140012f43:	ret    
   140012f44:	int3   
   140012f45:	int3   
   140012f46:	int3   
   140012f47:	int3   
   140012f48:	int3   
   140012f49:	int3   
   140012f4a:	int3   
   140012f4b:	int3   
   140012f4c:	int3   
   140012f4d:	int3   
   140012f4e:	int3   
   140012f4f:	int3   
   140012f50:	mov    r11,rsp
   140012f53:	mov    QWORD PTR [r11+0x10],rdx
   140012f57:	mov    QWORD PTR [r11+0x8],rcx
   140012f5b:	sub    rsp,0x88
   140012f62:	lea    rcx,[r11+0x8]
   140012f66:	mov    rax,r9
   140012f69:	mov    QWORD PTR [r11-0x20],rcx
   140012f6d:	lea    r9,[r11-0x48]
   140012f71:	lea    rcx,[r11+0x10]
   140012f75:	mov    r10,r8
   140012f78:	mov    QWORD PTR [r11-0x18],rcx
   140012f7c:	mov    r8,rax
   140012f7f:	lea    rcx,[r11+0x8]
   140012f83:	xor    edx,edx
   140012f85:	mov    QWORD PTR [r11-0x40],rcx
   140012f89:	lea    rcx,[r11+0x10]
   140012f8d:	mov    QWORD PTR [r11-0x38],rcx
   140012f91:	lea    rcx,[r11+0x8]
   140012f95:	mov    QWORD PTR [r11-0x30],rcx
   140012f99:	lea    rcx,[r11+0x10]
   140012f9d:	mov    QWORD PTR [r11-0x28],rcx
   140012fa1:	lea    rcx,[r11-0x48]
   140012fa5:	mov    QWORD PTR [r11-0x50],rcx
   140012fa9:	lea    rcx,[r11-0x40]
   140012fad:	mov    QWORD PTR [r11-0x58],rcx
   140012fb1:	lea    rcx,[r11-0x30]
   140012fb5:	mov    QWORD PTR [r11-0x60],rcx
   140012fb9:	lea    rcx,[r11-0x20]
   140012fbd:	mov    QWORD PTR [r11-0x68],rcx
   140012fc1:	mov    rcx,r10
   140012fc4:	call   0x1400123b0
   140012fc9:	add    rsp,0x88
   140012fd0:	ret    
   140012fd1:	int3   
   140012fd2:	int3   
   140012fd3:	int3   
   140012fd4:	int3   
   140012fd5:	int3   
   140012fd6:	int3   
   140012fd7:	int3   
   140012fd8:	int3   
   140012fd9:	int3   
   140012fda:	int3   
   140012fdb:	int3   
   140012fdc:	int3   
   140012fdd:	int3   
   140012fde:	int3   
   140012fdf:	int3   
   140012fe0:	mov    QWORD PTR [rsp+0x20],rbx
   140012fe5:	push   rbp
   140012fe6:	push   r12
   140012fe8:	push   r15
   140012fea:	sub    rsp,0x20
   140012fee:	mov    eax,DWORD PTR [rcx+0x20]
   140012ff1:	mov    r12,rdx
   140012ff4:	cdq    
   140012ff5:	xor    r9b,r9b
   140012ff8:	xor    eax,edx
   140012ffa:	mov    rbx,r8
   140012ffd:	sub    eax,edx
   140012fff:	mov    r15,rcx
   140013002:	movsxd rbp,eax
   140013005:	test   eax,eax
   140013007:	jle    0x140013090
   14001300d:	mov    QWORD PTR [rsp+0x40],rsi
   140013012:	xor    esi,esi
   140013014:	mov    QWORD PTR [rsp+0x50],r14
   140013019:	mov    QWORD PTR [rsp+0x48],rdi
   14001301e:	xchg   ax,ax
   140013020:	mov    r14,QWORD PTR [r15+0x18]
   140013024:	mov    rax,r12
   140013027:	mov    r8,QWORD PTR [r14+rsi*1]
   14001302b:	sub    r8,r12
   14001302e:	xchg   ax,ax
   140013030:	movzx  edx,BYTE PTR [rax]
   140013033:	movzx  ecx,BYTE PTR [rax+r8*1]
   140013038:	sub    edx,ecx
   14001303a:	jne    0x140013043
   14001303c:	inc    rax
   14001303f:	test   ecx,ecx
   140013041:	jne    0x140013030
   140013043:	test   edx,edx
   140013045:	jne    0x140013077
   140013047:	movsxd rdi,DWORD PTR [rbx]
   14001304a:	cmp    edi,DWORD PTR [rbx+0x10]
   14001304d:	jne    0x14001305d
   14001304f:	lea    rcx,[rbx+0x8]
   140013053:	mov    edx,0x1
   140013058:	call   0x140013420
   14001305d:	mov    rax,QWORD PTR [rbx+0x8]
   140013061:	inc    DWORD PTR [rbx]
   140013063:	lea    rdx,[rax+rdi*8]
   140013067:	test   rdx,rdx
   14001306a:	je     0x140013074
   14001306c:	mov    rax,QWORD PTR [r14+rsi*1+0x18]
   140013071:	mov    QWORD PTR [rdx],rax
   140013074:	mov    r9b,0x1
   140013077:	add    rsi,0x20
   14001307b:	sub    rbp,0x1
   14001307f:	jne    0x140013020
   140013081:	mov    r14,QWORD PTR [rsp+0x50]
   140013086:	mov    rdi,QWORD PTR [rsp+0x48]
   14001308b:	mov    rsi,QWORD PTR [rsp+0x40]
   140013090:	movzx  eax,r9b
   140013094:	mov    rbx,QWORD PTR [rsp+0x58]
   140013099:	add    rsp,0x20
   14001309d:	pop    r15
   14001309f:	pop    r12
   1400130a1:	pop    rbp
   1400130a2:	ret    
   1400130a3:	int3   
   1400130a4:	int3   
   1400130a5:	int3   
   1400130a6:	int3   
   1400130a7:	int3   
   1400130a8:	int3   
   1400130a9:	int3   
   1400130aa:	int3   
   1400130ab:	int3   
   1400130ac:	int3   
   1400130ad:	int3   
   1400130ae:	int3   
   1400130af:	int3   
   1400130b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400130b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400130ba:	mov    QWORD PTR [rsp+0x18],rdi
   1400130bf:	mov    QWORD PTR [rsp+0x20],r12
   1400130c4:	push   rbp
   1400130c5:	push   r14
   1400130c7:	push   r15
   1400130c9:	lea    rbp,[rsp-0x60]
   1400130ce:	sub    rsp,0x160
   1400130d5:	xor    r12d,r12d
   1400130d8:	mov    DWORD PTR [rsp+0x50],0x20
   1400130e0:	mov    r15,rdx
   1400130e3:	mov    DWORD PTR [rsp+0x40],r12d
   1400130e8:	mov    r14,rcx
   1400130eb:	mov    QWORD PTR [rsp+0x48],r12
   1400130f0:	lea    rcx,[rsp+0x48]
   1400130f5:	mov    DWORD PTR [rsp+0x54],0x80000000
   1400130fd:	lea    edx,[r12+0x20]
   140013102:	call   0x14000db40
   140013107:	lea    rax,[rsp+0x48]
   14001310c:	test   al,0x7
   14001310e:	je     0x14001311b
   140013110:	call   QWORD PTR [rip+0x1f49a]        # 0x1400325b0
   140013116:	test   eax,eax
   140013118:	je     0x14001311b
   14001311a:	int3   
   14001311b:	lea    rax,[rsp+0x58]
   140013120:	mov    QWORD PTR [rsp+0x48],rax
   140013125:	movsxd rax,DWORD PTR [r14+0xa8]
   14001312c:	cmp    eax,0xffffffff
   14001312f:	je     0x1400131a2
   140013131:	mov    rcx,QWORD PTR [r14+0x8]
   140013135:	add    rax,rax
   140013138:	mov    r8d,DWORD PTR [rcx+rax*8+0xc]
   14001313d:	cmp    r8d,0xffffffff
   140013141:	je     0x1400131a2
   140013143:	mov    edx,DWORD PTR [rsp+0x40]
   140013147:	nop    WORD PTR [rax+rax*1+0x0]
   140013150:	movsxd rbx,r8d
   140013153:	add    rbx,rbx
   140013156:	movsxd rsi,edx
   140013159:	mov    rdi,QWORD PTR [rcx+rbx*8]
   14001315d:	cmp    edx,DWORD PTR [rsp+0x50]
   140013161:	jne    0x140013176
   140013163:	mov    edx,0x1
   140013168:	lea    rcx,[rsp+0x48]
   14001316d:	call   0x140013420
   140013172:	mov    edx,DWORD PTR [rsp+0x40]
   140013176:	mov    rax,QWORD PTR [rsp+0x48]
   14001317b:	inc    edx
   14001317d:	mov    DWORD PTR [rsp+0x40],edx
   140013181:	lea    r8,[rax+rsi*8]
   140013185:	test   r8,r8
   140013188:	je     0x140013191
   14001318a:	mov    QWORD PTR [r8],rdi
   14001318d:	mov    edx,DWORD PTR [rsp+0x40]
   140013191:	mov    rcx,QWORD PTR [r14+0x8]
   140013195:	mov    r8d,DWORD PTR [rcx+rbx*8+0xc]
   14001319a:	cmp    r8d,0xffffffff
   14001319e:	jne    0x140013150
   1400131a0:	jmp    0x1400131a6
   1400131a2:	mov    edx,DWORD PTR [rsp+0x40]
   1400131a6:	lea    eax,[rdx-0x1]
   1400131a9:	mov    DWORD PTR [rsp+0x20],r12d
   1400131ae:	mov    QWORD PTR [rsp+0x30],r12
   1400131b3:	mov    rbx,r12
   1400131b6:	mov    QWORD PTR [rsp+0x28],rbx
   1400131bb:	movsxd rdi,eax
   1400131be:	test   eax,eax
   1400131c0:	js     0x140013221
   1400131c2:	mov    rax,QWORD PTR [rsp+0x48]
   1400131c7:	mov    rcx,r14
   1400131ca:	mov    rbx,QWORD PTR [rax+rdi*8]
   1400131ce:	call   0x14001a6d0
   1400131d3:	mov    rdx,rax
   1400131d6:	mov    rcx,rbx
   1400131d9:	call   0x14001a270
   1400131de:	mov    rsi,rax
   1400131e1:	test   rax,rax
   1400131e4:	je     0x140013216
   1400131e6:	lea    r8,[rsp+0x20]
   1400131eb:	mov    rdx,r15
   1400131ee:	mov    rcx,rax
   1400131f1:	call   0x140012fe0
   1400131f6:	mov    rbx,QWORD PTR [rsp+0x28]
   1400131fb:	test   al,al
   1400131fd:	jne    0x1400132e2
   140013203:	mov    rdx,r15
   140013206:	mov    rcx,rsi
   140013209:	call   0x1400143c0
   14001320e:	test   al,al
   140013210:	jne    0x1400132da
   140013216:	sub    rdi,0x1
   14001321a:	jns    0x1400131c2
   14001321c:	mov    rbx,QWORD PTR [rsp+0x28]
   140013221:	mov    rcx,QWORD PTR [r14+0xb0]
   140013228:	mov    rdx,r15
   14001322b:	add    rcx,0x20
   14001322f:	call   0x140013340
   140013234:	mov    rdi,rax
   140013237:	mov    esi,DWORD PTR [rsp+0x34]
   14001323b:	and    esi,0xc0000000
   140013241:	jne    0x14001325f
   140013243:	test   rbx,rbx
   140013246:	je     0x14001325f
   140013248:	mov    rcx,QWORD PTR [rip+0x1f141]        # 0x140032390
   14001324f:	mov    rdx,rbx
   140013252:	mov    rcx,QWORD PTR [rcx]
   140013255:	mov    r8,QWORD PTR [rcx]
   140013258:	call   QWORD PTR [r8+0x28]
   14001325c:	mov    rbx,r12
   14001325f:	test   esi,esi
   140013261:	jne    0x14001327b
   140013263:	test   rbx,rbx
   140013266:	je     0x14001327b
   140013268:	mov    rax,QWORD PTR [rip+0x1f121]        # 0x140032390
   14001326f:	mov    rdx,rbx
   140013272:	mov    rcx,QWORD PTR [rax]
   140013275:	mov    rax,QWORD PTR [rcx]
   140013278:	call   QWORD PTR [rax+0x28]
   14001327b:	mov    DWORD PTR [rsp+0x40],r12d
   140013280:	cmp    DWORD PTR [rsp+0x50],r12d
   140013285:	jl     0x1400132ea
   140013287:	mov    rdx,QWORD PTR [rsp+0x48]
   14001328c:	lea    rax,[rsp+0x58]
   140013291:	cmp    rdx,rax
   140013294:	je     0x1400132ea
   140013296:	test   rdx,rdx
   140013299:	je     0x1400132b5
   14001329b:	test   DWORD PTR [rsp+0x54],0xc0000000
   1400132a3:	jne    0x1400132b5
   1400132a5:	mov    rax,QWORD PTR [rip+0x1f0e4]        # 0x140032390
   1400132ac:	mov    rcx,QWORD PTR [rax]
   1400132af:	mov    rax,QWORD PTR [rcx]
   1400132b2:	call   QWORD PTR [rax+0x28]
   1400132b5:	lea    rax,[rsp+0x58]
   1400132ba:	mov    DWORD PTR [rsp+0x50],0x20
   1400132c2:	mov    QWORD PTR [rsp+0x48],rax
   1400132c7:	mov    eax,DWORD PTR [rsp+0x54]
   1400132cb:	and    eax,0x3fffffff
   1400132d0:	bts    eax,0x1f
   1400132d4:	mov    DWORD PTR [rsp+0x54],eax
   1400132d8:	jmp    0x1400132ee
   1400132da:	mov    rdi,r12
   1400132dd:	jmp    0x140013237
   1400132e2:	mov    rdi,QWORD PTR [rbx]
   1400132e5:	jmp    0x140013237
   1400132ea:	mov    eax,DWORD PTR [rsp+0x54]
   1400132ee:	test   eax,0xc0000000
   1400132f3:	jne    0x14001330f
   1400132f5:	mov    rdx,QWORD PTR [rsp+0x48]
   1400132fa:	test   rdx,rdx
   1400132fd:	je     0x14001330f
   1400132ff:	mov    rax,QWORD PTR [rip+0x1f08a]        # 0x140032390
   140013306:	mov    rcx,QWORD PTR [rax]
   140013309:	mov    rax,QWORD PTR [rcx]
   14001330c:	call   QWORD PTR [rax+0x28]
   14001330f:	lea    r11,[rsp+0x160]
   140013317:	mov    rax,rdi
   14001331a:	mov    rbx,QWORD PTR [r11+0x20]
   14001331e:	mov    rsi,QWORD PTR [r11+0x28]
   140013322:	mov    rdi,QWORD PTR [r11+0x30]
   140013326:	mov    r12,QWORD PTR [r11+0x38]
   14001332a:	mov    rsp,r11
   14001332d:	pop    r15
   14001332f:	pop    r14
   140013331:	pop    rbp
   140013332:	ret    
   140013333:	int3   
   140013334:	int3   
   140013335:	int3   
   140013336:	int3   
   140013337:	int3   
   140013338:	int3   
   140013339:	int3   
   14001333a:	int3   
   14001333b:	int3   
   14001333c:	int3   
   14001333d:	int3   
   14001333e:	int3   
   14001333f:	int3   
   140013340:	mov    QWORD PTR [rsp+0x8],rbx
   140013345:	mov    QWORD PTR [rsp+0x10],rsi
   14001334a:	mov    QWORD PTR [rsp+0x18],rdi
   14001334f:	mov    eax,DWORD PTR [rcx+0x8]
   140013352:	mov    rsi,rdx
   140013355:	cdq    
   140013356:	xor    r11d,r11d
   140013359:	xor    eax,edx
   14001335b:	mov    rdi,rcx
   14001335e:	sub    eax,edx
   140013360:	test   eax,eax
   140013362:	jle    0x1400133a3
   140013364:	mov    r9,QWORD PTR [rcx]
   140013367:	mov    r10d,r11d
   14001336a:	movsxd rbx,eax
   14001336d:	nop    DWORD PTR [rax]
   140013370:	mov    rax,QWORD PTR [r9]
   140013373:	mov    r8,rsi
   140013376:	sub    r8,rax
   140013379:	nop    DWORD PTR [rax+0x0]
   140013380:	movzx  edx,BYTE PTR [rax]
   140013383:	movzx  ecx,BYTE PTR [rax+r8*1]
   140013388:	sub    edx,ecx
   14001338a:	jne    0x140013393
   14001338c:	inc    rax
   14001338f:	test   ecx,ecx
   140013391:	jne    0x140013380
   140013393:	test   edx,edx
   140013395:	je     0x140013405
   140013397:	inc    r10
   14001339a:	add    r9,0x20
   14001339e:	cmp    r10,rbx
   1400133a1:	jl     0x140013370
   1400133a3:	mov    eax,DWORD PTR [rdi+0x18]
   1400133a6:	cdq    
   1400133a7:	xor    eax,edx
   1400133a9:	sub    eax,edx
   1400133ab:	test   eax,eax
   1400133ad:	jle    0x1400133f3
   1400133af:	mov    r9,QWORD PTR [rdi+0x10]
   1400133b3:	movsxd r10,eax
   1400133b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400133c0:	mov    rax,QWORD PTR [r9]
   1400133c3:	mov    r8,rsi
   1400133c6:	sub    r8,rax
   1400133c9:	nop    DWORD PTR [rax+0x0]
   1400133d0:	movzx  edx,BYTE PTR [rax]
   1400133d3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400133d8:	sub    edx,ecx
   1400133da:	jne    0x1400133e3
   1400133dc:	inc    rax
   1400133df:	test   ecx,ecx
   1400133e1:	jne    0x1400133d0
   1400133e3:	test   edx,edx
   1400133e5:	je     0x140013405
   1400133e7:	inc    r11
   1400133ea:	add    r9,0x20
   1400133ee:	cmp    r11,r10
   1400133f1:	jl     0x1400133c0
   1400133f3:	xor    eax,eax
   1400133f5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400133fa:	mov    rsi,QWORD PTR [rsp+0x10]
   1400133ff:	mov    rdi,QWORD PTR [rsp+0x18]
   140013404:	ret    
   140013405:	mov    rax,QWORD PTR [r9+0x18]
   140013409:	mov    rbx,QWORD PTR [rsp+0x8]
   14001340e:	mov    rsi,QWORD PTR [rsp+0x10]
   140013413:	mov    rdi,QWORD PTR [rsp+0x18]
   140013418:	ret    
   140013419:	int3   
   14001341a:	int3   
   14001341b:	int3   
   14001341c:	int3   
   14001341d:	int3   
   14001341e:	int3   
   14001341f:	int3   
   140013420:	rex push rdi
   140013422:	sub    rsp,0x20
   140013426:	mov    eax,edx
   140013428:	mov    rdi,rcx
   14001342b:	mov    edx,DWORD PTR [rcx+0xc]
   14001342e:	bt     edx,0x1e
   140013432:	jb     0x140013518
   140013438:	mov    ecx,DWORD PTR [rcx+0x8]
   14001343b:	and    edx,0x3fffffff
   140013441:	mov    QWORD PTR [rsp+0x30],rbx
   140013446:	mov    r9d,0x8
   14001344c:	mov    QWORD PTR [rsp+0x38],rsi
   140013451:	lea    esi,[rcx+rax*1]
   140013454:	mov    r8d,esi
   140013457:	call   0x14001aa30
   14001345c:	mov    ebx,eax
   14001345e:	cmp    eax,esi
   140013460:	jge    0x14001347e
   140013462:	test   eax,eax
   140013464:	jne    0x140013470
   140013466:	cmp    esi,0xffffffff
   140013469:	jg     0x140013470
   14001346b:	or     ebx,0xffffffff
   14001346e:	jmp    0x14001347e
   140013470:	lea    eax,[rbx+rsi*1]
   140013473:	cdq    
   140013474:	sub    eax,edx
   140013476:	sar    eax,1
   140013478:	mov    ebx,eax
   14001347a:	cmp    eax,esi
   14001347c:	jl     0x140013470
   14001347e:	test   DWORD PTR [rdi+0xc],0xc0000000
   140013485:	mov    rax,QWORD PTR [rip+0x1ef04]        # 0x140032390
   14001348c:	mov    rcx,QWORD PTR [rax]
   14001348f:	mov    rax,QWORD PTR [rcx]
   140013492:	jne    0x1400134dc
   140013494:	mov    rdx,QWORD PTR [rdi]
   140013497:	test   rdx,rdx
   14001349a:	je     0x1400134bc
   14001349c:	movsxd r8,ebx
   14001349f:	shl    r8,0x3
   1400134a3:	call   QWORD PTR [rax+0x18]
   1400134a6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400134ab:	mov    DWORD PTR [rdi+0x8],ebx
   1400134ae:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134b3:	mov    QWORD PTR [rdi],rax
   1400134b6:	add    rsp,0x20
   1400134ba:	pop    rdi
   1400134bb:	ret    
   1400134bc:	movsxd rdx,ebx
   1400134bf:	shl    rdx,0x3
   1400134c3:	call   QWORD PTR [rax+0x8]
   1400134c6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400134cb:	mov    DWORD PTR [rdi+0x8],ebx
   1400134ce:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134d3:	mov    QWORD PTR [rdi],rax
   1400134d6:	add    rsp,0x20
   1400134da:	pop    rdi
   1400134db:	ret    
   1400134dc:	mov    rsi,QWORD PTR [rdi]
   1400134df:	movsxd rdx,ebx
   1400134e2:	shl    rdx,0x3
   1400134e6:	call   QWORD PTR [rax+0x8]
   1400134e9:	mov    QWORD PTR [rdi],rax
   1400134ec:	test   rsi,rsi
   1400134ef:	je     0x140013504
   1400134f1:	movsxd r8,DWORD PTR [rdi+0x8]
   1400134f5:	mov    rdx,rsi
   1400134f8:	shl    r8,0x3
   1400134fc:	mov    rcx,rax
   1400134ff:	call   0x140026f70
   140013504:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14001350b:	mov    rsi,QWORD PTR [rsp+0x38]
   140013510:	mov    DWORD PTR [rdi+0x8],ebx
   140013513:	mov    rbx,QWORD PTR [rsp+0x30]
   140013518:	add    rsp,0x20
   14001351c:	pop    rdi
   14001351d:	ret    
   14001351e:	int3   
   14001351f:	int3   
   140013520:	mov    QWORD PTR [rsp+0x8],rbx
   140013525:	mov    QWORD PTR [rsp+0x10],rsi
   14001352a:	push   rdi
   14001352b:	sub    rsp,0x20
   14001352f:	mov    rax,QWORD PTR [rip+0x33c82]        # 0x1400471b8
   140013536:	mov    rdi,rdx
   140013539:	mov    rsi,rcx
   14001353c:	mov    rbx,QWORD PTR [rax]
   14001353f:	call   0x140007c10
   140013544:	mov    rcx,QWORD PTR [rip+0x33c6d]        # 0x1400471b8
   14001354b:	mov    rdx,rax
   14001354e:	call   QWORD PTR [rbx+0x68]
   140013551:	mov    rdx,rdi
   140013554:	mov    rcx,rax
   140013557:	mov    r8,QWORD PTR [rax]
   14001355a:	call   QWORD PTR [r8+0x10]
   14001355e:	test   rax,rax
   140013561:	je     0x14001356e
   140013563:	mov    rdx,rax
   140013566:	mov    rcx,rsi
   140013569:	call   0x140013580
   14001356e:	mov    rbx,QWORD PTR [rsp+0x30]
   140013573:	mov    rsi,QWORD PTR [rsp+0x38]
   140013578:	add    rsp,0x20
   14001357c:	pop    rdi
   14001357d:	ret    
   14001357e:	int3   
   14001357f:	int3   
   140013580:	mov    rax,rsp
   140013583:	sub    rsp,0xe8
   14001358a:	test   BYTE PTR [rdx+0xbc],0x1
   140013591:	mov    QWORD PTR [rax+0x8],rbx
   140013595:	mov    rbx,rdx
   140013598:	mov    QWORD PTR [rax+0x18],rsi
   14001359c:	lea    rdx,[rip+0x232a9]        # 0x14003684c
   1400135a3:	mov    rsi,rcx
   1400135a6:	je     0x1400135cf
   1400135a8:	xor    r9d,r9d
   1400135ab:	xor    r8d,r8d
   1400135ae:	call   0x14000ee70
   1400135b3:	test   rax,rax
   1400135b6:	jne    0x1400135d7
   1400135b8:	mov    r8,QWORD PTR [rbx]
   1400135bb:	lea    rdx,[rip+0x2328a]        # 0x14003684c
   1400135c2:	xor    r9d,r9d
   1400135c5:	mov    rcx,rsi
   1400135c8:	call   0x140011650
   1400135cd:	jmp    0x1400135d7
   1400135cf:	xor    r8d,r8d
   1400135d2:	call   0x140011040
   1400135d7:	mov    r8d,0x2
   1400135dd:	lea    rcx,[rsp+0x20]
   1400135e2:	mov    rdx,rbx
   1400135e5:	call   0x14001a2e0
   1400135ea:	lea    rcx,[rsp+0x20]
   1400135ef:	call   0x14001a7c0
   1400135f4:	test   al,al
   1400135f6:	je     0x1400136d6
   1400135fc:	mov    QWORD PTR [rsp+0xf8],rbp
   140013604:	mov    QWORD PTR [rsp+0xe0],rdi
   14001360c:	nop    DWORD PTR [rax+0x0]
   140013610:	lea    rcx,[rsp+0x20]
   140013615:	call   0x14001a6d0
   14001361a:	mov    rdx,rax
   14001361d:	xor    r8d,r8d
   140013620:	mov    rcx,rsi
   140013623:	call   0x14000e1f0
   140013628:	lea    rcx,[rsp+0x20]
   14001362d:	mov    rdi,rax
   140013630:	test   rax,rax
   140013633:	jne    0x140013687
   140013635:	call   0x14001a6d0
   14001363a:	mov    rdx,rax
   14001363d:	xor    r8d,r8d
   140013640:	mov    rcx,rsi
   140013643:	call   0x140011690
   140013648:	lea    rdx,[rip+0x231d1]        # 0x140036820
   14001364f:	mov    rbp,rax
   140013652:	lea    rcx,[rsp+0x20]
   140013657:	call   0x1400130b0
   14001365c:	test   rax,rax
   14001365f:	je     0x140013666
   140013661:	mov    rdi,QWORD PTR [rax]
   140013664:	jmp    0x140013668
   140013666:	xor    edi,edi
   140013668:	lea    rcx,[rsp+0x20]
   14001366d:	call   0x14001a6f0
   140013672:	lea    rcx,[rsp+0x20]
   140013677:	mov    rbx,rax
   14001367a:	call   0x14001a6e0
   14001367f:	mov    r9,rdi
   140013682:	mov    rcx,rbp
   140013685:	jmp    0x14001369f
   140013687:	call   0x14001a6f0
   14001368c:	lea    rcx,[rsp+0x20]
   140013691:	mov    rbx,rax
   140013694:	call   0x14001a6e0
   140013699:	xor    r9d,r9d
   14001369c:	mov    rcx,rdi
   14001369f:	mov    r8,rbx
   1400136a2:	mov    rdx,rax
   1400136a5:	call   0x140013770
   1400136aa:	lea    rcx,[rsp+0x20]
   1400136af:	call   0x14001a3b0
   1400136b4:	lea    rcx,[rsp+0x20]
   1400136b9:	call   0x14001a7c0
   1400136be:	test   al,al
   1400136c0:	jne    0x140013610
   1400136c6:	mov    rdi,QWORD PTR [rsp+0xe0]
   1400136ce:	mov    rbp,QWORD PTR [rsp+0xf8]
   1400136d6:	cmp    DWORD PTR [rsp+0x30],0x0
   1400136db:	mov    rsi,QWORD PTR [rsp+0x100]
   1400136e3:	mov    rbx,QWORD PTR [rsp+0xf0]
   1400136eb:	mov    rdx,QWORD PTR [rsp+0x28]
   1400136f0:	mov    DWORD PTR [rsp+0x20],0x0
   1400136f8:	jl     0x140013746
   1400136fa:	lea    rax,[rsp+0x38]
   1400136ff:	cmp    rdx,rax
   140013702:	je     0x140013746
   140013704:	test   rdx,rdx
   140013707:	je     0x140013723
   140013709:	test   DWORD PTR [rsp+0x34],0xc0000000
   140013711:	jne    0x140013723
   140013713:	mov    rax,QWORD PTR [rip+0x1ec76]        # 0x140032390
   14001371a:	mov    rcx,QWORD PTR [rax]
   14001371d:	mov    rax,QWORD PTR [rcx]
   140013720:	call   QWORD PTR [rax+0x28]
   140013723:	mov    eax,DWORD PTR [rsp+0x34]
   140013727:	lea    rdx,[rsp+0x38]
   14001372c:	and    eax,0x3fffffff
   140013731:	mov    QWORD PTR [rsp+0x28],rdx
   140013736:	bts    eax,0x1f
   14001373a:	mov    DWORD PTR [rsp+0x30],0x8
   140013742:	mov    DWORD PTR [rsp+0x34],eax
   140013746:	test   DWORD PTR [rsp+0x34],0xc0000000
   14001374e:	jne    0x140013765
   140013750:	test   rdx,rdx
   140013753:	je     0x140013765
   140013755:	mov    rax,QWORD PTR [rip+0x1ec34]        # 0x140032390
   14001375c:	mov    rcx,QWORD PTR [rax]
   14001375f:	mov    rax,QWORD PTR [rcx]
   140013762:	call   QWORD PTR [rax+0x28]
   140013765:	add    rsp,0xe8
   14001376c:	ret    
   14001376d:	int3   
   14001376e:	int3   
   14001376f:	int3   
   140013770:	mov    r11,rsp
   140013773:	mov    QWORD PTR [r11+0x8],rbx
   140013777:	push   rdi
   140013778:	sub    rsp,0x60
   14001377c:	lea    rax,[r11+0x18]
   140013780:	mov    QWORD PTR [r11+0x10],r9
   140013784:	mov    QWORD PTR [r11-0x30],rax
   140013788:	mov    rbx,r8
   14001378b:	lea    rax,[r11-0x28]
   14001378f:	mov    QWORD PTR [r11-0x18],r9
   140013793:	mov    QWORD PTR [r11-0x38],rax
   140013797:	mov    rdi,rcx
   14001379a:	lea    rax,[r11+0x18]
   14001379e:	mov    QWORD PTR [r11-0x28],r9
   1400137a2:	mov    QWORD PTR [r11-0x40],rax
   1400137a6:	lea    r9,[r11+0x10]
   1400137aa:	lea    rax,[r11-0x18]
   1400137ae:	mov    QWORD PTR [r11-0x10],rdx
   1400137b2:	mov    QWORD PTR [r11-0x48],rax
   1400137b6:	mov    QWORD PTR [r11-0x20],rdx
   1400137ba:	call   0x140012060
   1400137bf:	mov    rax,QWORD PTR [rbx]
   1400137c2:	mov    rcx,rbx
   1400137c5:	call   QWORD PTR [rax]
   1400137c7:	cmp    eax,0x4
   1400137ca:	jne    0x1400137fc
   1400137cc:	mov    rax,QWORD PTR [rbx]
   1400137cf:	mov    rcx,rbx
   1400137d2:	call   QWORD PTR [rax+0x30]
   1400137d5:	cmp    eax,0x1
   1400137d8:	jne    0x1400137fc
   1400137da:	mov    eax,DWORD PTR [rbx+0x40]
   1400137dd:	cmp    eax,0xfa1
   1400137e2:	je     0x1400137eb
   1400137e4:	cmp    eax,0xfa0
   1400137e9:	jne    0x1400137fc
   1400137eb:	mov    edx,0x1
   1400137f0:	mov    rcx,rdi
   1400137f3:	movzx  r8d,dl
   1400137f7:	call   0x1400114d0
   1400137fc:	mov    rbx,QWORD PTR [rsp+0x70]
   140013801:	add    rsp,0x60
   140013805:	pop    rdi
   140013806:	ret    
   140013807:	int3   
   140013808:	int3   
   140013809:	int3   
   14001380a:	int3   
   14001380b:	int3   
   14001380c:	int3   
   14001380d:	int3   
   14001380e:	int3   
   14001380f:	int3   
   140013810:	mov    QWORD PTR [rsp+0x8],rbx
   140013815:	mov    QWORD PTR [rsp+0x10],rsi
   14001381a:	mov    QWORD PTR [rsp+0x18],rdi
   14001381f:	mov    eax,DWORD PTR [rcx+0x8]
   140013822:	mov    rsi,rdx
   140013825:	cdq    
   140013826:	xor    r11d,r11d
   140013829:	xor    eax,edx
   14001382b:	mov    rdi,rcx
   14001382e:	sub    eax,edx
   140013830:	test   eax,eax
   140013832:	jle    0x140013873
   140013834:	mov    r10,QWORD PTR [rcx]
   140013837:	mov    r9d,r11d
   14001383a:	movsxd rbx,eax
   14001383d:	nop    DWORD PTR [rax]
   140013840:	mov    rax,QWORD PTR [r10]
   140013843:	mov    r8,rsi
   140013846:	sub    r8,rax
   140013849:	nop    DWORD PTR [rax+0x0]
   140013850:	movzx  edx,BYTE PTR [rax]
   140013853:	movzx  ecx,BYTE PTR [rax+r8*1]
   140013858:	sub    edx,ecx
   14001385a:	jne    0x140013863
   14001385c:	inc    rax
   14001385f:	test   ecx,ecx
   140013861:	jne    0x140013850
   140013863:	test   edx,edx
   140013865:	je     0x1400138d5
   140013867:	inc    r9
   14001386a:	add    r10,0x20
   14001386e:	cmp    r9,rbx
   140013871:	jl     0x140013840
   140013873:	mov    eax,DWORD PTR [rdi+0x18]
   140013876:	cdq    
   140013877:	xor    eax,edx
   140013879:	sub    eax,edx
   14001387b:	test   eax,eax
   14001387d:	jle    0x1400138c3
   14001387f:	mov    r9,QWORD PTR [rdi+0x10]
   140013883:	movsxd r10,eax
   140013886:	data16 nop WORD PTR [rax+rax*1+0x0]
   140013890:	mov    rax,QWORD PTR [r9]
   140013893:	mov    r8,rsi
   140013896:	sub    r8,rax
   140013899:	nop    DWORD PTR [rax+0x0]
   1400138a0:	movzx  edx,BYTE PTR [rax]
   1400138a3:	movzx  ecx,BYTE PTR [rax+r8*1]
   1400138a8:	sub    edx,ecx
   1400138aa:	jne    0x1400138b3
   1400138ac:	inc    rax
   1400138af:	test   ecx,ecx
   1400138b1:	jne    0x1400138a0
   1400138b3:	test   edx,edx
   1400138b5:	je     0x1400138d5
   1400138b7:	inc    r11
   1400138ba:	add    r9,0x20
   1400138be:	cmp    r11,r10
   1400138c1:	jl     0x140013890
   1400138c3:	xor    al,al
   1400138c5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400138ca:	mov    rsi,QWORD PTR [rsp+0x10]
   1400138cf:	mov    rdi,QWORD PTR [rsp+0x18]
   1400138d4:	ret    
   1400138d5:	mov    rbx,QWORD PTR [rsp+0x8]
   1400138da:	mov    al,0x1
   1400138dc:	mov    rsi,QWORD PTR [rsp+0x10]
   1400138e1:	mov    rdi,QWORD PTR [rsp+0x18]
   1400138e6:	ret    
   1400138e7:	int3   
   1400138e8:	int3   
   1400138e9:	int3   
   1400138ea:	int3   
   1400138eb:	int3   
   1400138ec:	int3   
   1400138ed:	int3   
   1400138ee:	int3   
   1400138ef:	int3   
   1400138f0:	mov    r11,rsp
   1400138f3:	sub    rsp,0x78
   1400138f7:	lea    rax,[r11+0x10]
   1400138fb:	mov    QWORD PTR [r11-0x18],r8
   1400138ff:	mov    QWORD PTR [r11-0x10],rax
   140013903:	lea    r9,[r11-0x18]
   140013907:	lea    rax,[r11+0x10]
   14001390b:	mov    QWORD PTR [r11-0x28],r8
   14001390f:	mov    QWORD PTR [r11-0x20],rax
   140013913:	lea    rax,[r11+0x10]
   140013917:	mov    QWORD PTR [r11-0x30],rax
   14001391b:	lea    rax,[r11+0x10]
   14001391f:	mov    QWORD PTR [r11+0x20],rax
   140013923:	lea    rax,[r11+0x18]
   140013927:	mov    QWORD PTR [r11-0x40],rax
   14001392b:	lea    rax,[r11-0x38]
   14001392f:	mov    QWORD PTR [r11-0x48],rax
   140013933:	lea    rax,[r11+0x20]
   140013937:	mov    QWORD PTR [r11-0x50],rax
   14001393b:	lea    rax,[r11-0x28]
   14001393f:	mov    QWORD PTR [r11-0x38],r8
   140013943:	mov    r8,QWORD PTR [rdx+0x10]
   140013947:	mov    QWORD PTR [r11-0x58],rax
   14001394b:	mov    BYTE PTR [r11+0x10],0x0
   140013950:	call   0x140012600
   140013955:	movzx  eax,BYTE PTR [rsp+0x88]
   14001395d:	add    rsp,0x78
   140013961:	ret    
   140013962:	int3   
   140013963:	int3   
   140013964:	int3   
   140013965:	int3   
   140013966:	int3   
   140013967:	int3   
   140013968:	int3   
   140013969:	int3   
   14001396a:	int3   
   14001396b:	int3   
   14001396c:	int3   
   14001396d:	int3   
   14001396e:	int3   
   14001396f:	int3   
   140013970:	mov    rax,rsp
   140013973:	push   rbp
   140013974:	lea    rbp,[rax-0x1a8]
   14001397b:	sub    rsp,0x2a0
   140013982:	mov    QWORD PTR [rax+0x8],rbx
   140013986:	mov    rbx,rcx
   140013989:	mov    QWORD PTR [rax+0x10],rsi
   14001398d:	lea    rcx,[rbp-0x80]
   140013991:	mov    QWORD PTR [rax+0x20],r12
   140013995:	xor    r12d,r12d
   140013998:	mov    DWORD PTR [rsp+0x78],r12d
   14001399d:	mov    QWORD PTR [rbp-0x80],r12
   1400139a1:	mov    DWORD PTR [rbp-0x78],0x40
   1400139a8:	lea    edx,[r12+0x40]
   1400139ad:	mov    DWORD PTR [rbp-0x74],0x80000000
   1400139b4:	call   0x14000db40
   1400139b9:	lea    rax,[rbp-0x80]
   1400139bd:	test   al,0x7
   1400139bf:	je     0x1400139cc
   1400139c1:	call   QWORD PTR [rip+0x1ebe9]        # 0x1400325b0
   1400139c7:	test   eax,eax
   1400139c9:	je     0x1400139cc
   1400139cb:	int3   
   1400139cc:	lea    rax,[rbp-0x70]
   1400139d0:	mov    QWORD PTR [rsp+0x2c0],rdi
   1400139d8:	mov    rdx,rbx
   1400139db:	mov    QWORD PTR [rbp-0x80],rax
   1400139df:	lea    rcx,[rsp+0x20]
   1400139e4:	call   0x14000c540
   1400139e9:	lea    rcx,[rsp+0x20]
   1400139ee:	call   0x14000ff00
   1400139f3:	test   al,al
   1400139f5:	je     0x140013a70
   1400139f7:	nop    WORD PTR [rax+rax*1+0x0]
   140013a00:	lea    rcx,[rsp+0x20]
   140013a05:	call   0x14000e980
   140013a0a:	mov    rcx,rax
   140013a0d:	call   0x14000f090
   140013a12:	cmp    al,0x9
   140013a14:	jne    0x140013a58
   140013a16:	lea    rcx,[rsp+0x20]
   140013a1b:	call   0x14000e980
   140013a20:	movsxd rcx,DWORD PTR [rsp+0x78]
   140013a25:	mov    rbx,rax
   140013a28:	mov    rdi,rcx
   140013a2b:	cmp    ecx,DWORD PTR [rbp-0x78]
   140013a2e:	jne    0x140013a42
   140013a30:	mov    edx,0x1
   140013a35:	lea    rcx,[rbp-0x80]
   140013a39:	call   0x140013420
   140013a3e:	mov    ecx,DWORD PTR [rsp+0x78]
   140013a42:	mov    rax,QWORD PTR [rbp-0x80]
   140013a46:	inc    ecx
   140013a48:	mov    DWORD PTR [rsp+0x78],ecx
   140013a4c:	lea    rdx,[rax+rdi*8]
   140013a50:	test   rdx,rdx
   140013a53:	je     0x140013a58
   140013a55:	mov    QWORD PTR [rdx],rbx
   140013a58:	lea    rcx,[rsp+0x20]
   140013a5d:	call   0x14000cc20
   140013a62:	lea    rcx,[rsp+0x20]
   140013a67:	call   0x14000ff00
   140013a6c:	test   al,al
   140013a6e:	jne    0x140013a00
   140013a70:	mov    rdx,QWORD PTR [rsp+0x28]
   140013a75:	mov    DWORD PTR [rsp+0x20],r12d
   140013a7a:	cmp    DWORD PTR [rsp+0x30],r12d
   140013a7f:	jl     0x140013acd
   140013a81:	lea    rax,[rsp+0x38]
   140013a86:	cmp    rdx,rax
   140013a89:	je     0x140013acd
   140013a8b:	test   rdx,rdx
   140013a8e:	je     0x140013aaa
   140013a90:	test   DWORD PTR [rsp+0x34],0xc0000000
   140013a98:	jne    0x140013aaa
   140013a9a:	mov    rax,QWORD PTR [rip+0x1e8ef]        # 0x140032390
   140013aa1:	mov    rcx,QWORD PTR [rax]
   140013aa4:	mov    rax,QWORD PTR [rcx]
   140013aa7:	call   QWORD PTR [rax+0x28]
   140013aaa:	mov    eax,DWORD PTR [rsp+0x34]
   140013aae:	lea    rdx,[rsp+0x38]
   140013ab3:	and    eax,0x3fffffff
   140013ab8:	mov    QWORD PTR [rsp+0x28],rdx
   140013abd:	bts    eax,0x1f
   140013ac1:	mov    DWORD PTR [rsp+0x30],0x4
   140013ac9:	mov    DWORD PTR [rsp+0x34],eax
   140013acd:	test   DWORD PTR [rsp+0x34],0xc0000000
   140013ad5:	jne    0x140013aec
   140013ad7:	test   rdx,rdx
   140013ada:	je     0x140013aec
   140013adc:	mov    rax,QWORD PTR [rip+0x1e8ad]        # 0x140032390
   140013ae3:	mov    rcx,QWORD PTR [rax]
   140013ae6:	mov    rax,QWORD PTR [rcx]
   140013ae9:	call   QWORD PTR [rax+0x28]
   140013aec:	mov    esi,r12d
   140013aef:	cmp    DWORD PTR [rsp+0x78],r12d
   140013af4:	jle    0x140013bdf
   140013afa:	mov    QWORD PTR [rsp+0x298],r14
   140013b02:	mov    QWORD PTR [rsp+0x290],r15
   140013b0a:	mov    r15,r12
   140013b0d:	nop    DWORD PTR [rax]
   140013b10:	mov    rax,QWORD PTR [rbp-0x80]
   140013b14:	lea    rdx,[rip+0x22d31]        # 0x14003684c
   140013b1b:	mov    r8d,0x2b234708
   140013b21:	mov    r14,QWORD PTR [r15+rax*1]
   140013b25:	mov    rcx,r14
   140013b28:	call   0x14000e1f0
   140013b2d:	test   rax,rax
   140013b30:	je     0x140013b46
   140013b32:	xor    edx,edx
   140013b34:	mov    rcx,rax
   140013b37:	call   0x14000f030
   140013b3c:	mov    rdi,rax
   140013b3f:	test   rax,rax
   140013b42:	je     0x140013bbf
   140013b44:	jmp    0x140013b4d
   140013b46:	lea    rdi,[rip+0x1ec53]        # 0x1400327a0
   140013b4d:	mov    rax,QWORD PTR [rip+0x33664]        # 0x1400471b8
   140013b54:	mov    rbx,QWORD PTR [rax]
   140013b57:	call   0x140007c10
   140013b5c:	mov    rcx,QWORD PTR [rip+0x33655]        # 0x1400471b8
   140013b63:	mov    rdx,rax
   140013b66:	call   QWORD PTR [rbx+0x68]
   140013b69:	mov    rdx,rdi
   140013b6c:	mov    rcx,rax
   140013b6f:	mov    r8,QWORD PTR [rax]
   140013b72:	call   QWORD PTR [r8+0x10]
   140013b76:	test   rax,rax
   140013b79:	je     0x140013b86
   140013b7b:	mov    rdx,rax
   140013b7e:	mov    rcx,r14
   140013b81:	call   0x140014280
   140013b86:	mov    rax,QWORD PTR [rip+0x3362b]        # 0x1400471b8
   140013b8d:	mov    rbx,QWORD PTR [rax]
   140013b90:	call   0x140007c10
   140013b95:	mov    rcx,QWORD PTR [rip+0x3361c]        # 0x1400471b8
   140013b9c:	mov    rdx,rax
   140013b9f:	call   QWORD PTR [rbx+0x68]
   140013ba2:	mov    rdx,rdi
   140013ba5:	mov    rcx,rax
   140013ba8:	mov    r8,QWORD PTR [rax]
   140013bab:	call   QWORD PTR [r8+0x10]
   140013baf:	test   rax,rax
   140013bb2:	je     0x140013bbf
   140013bb4:	mov    rdx,rax
   140013bb7:	mov    rcx,r14
   140013bba:	call   0x140013580
   140013bbf:	inc    esi
   140013bc1:	add    r15,0x8
   140013bc5:	cmp    esi,DWORD PTR [rsp+0x78]
   140013bc9:	jl     0x140013b10
   140013bcf:	mov    r15,QWORD PTR [rsp+0x290]
   140013bd7:	mov    r14,QWORD PTR [rsp+0x298]
   140013bdf:	cmp    DWORD PTR [rbp-0x78],0x0
   140013be3:	mov    rdi,QWORD PTR [rsp+0x2c0]
   140013beb:	mov    rsi,QWORD PTR [rsp+0x2b8]
   140013bf3:	mov    rbx,QWORD PTR [rsp+0x2b0]
   140013bfb:	mov    rdx,QWORD PTR [rbp-0x80]
   140013bff:	mov    DWORD PTR [rsp+0x78],r12d
   140013c04:	mov    r12,QWORD PTR [rsp+0x2c8]
   140013c0c:	jl     0x140013c53
   140013c0e:	lea    rax,[rbp-0x70]
   140013c12:	cmp    rdx,rax
   140013c15:	je     0x140013c53
   140013c17:	test   rdx,rdx
   140013c1a:	je     0x140013c35
   140013c1c:	test   DWORD PTR [rbp-0x74],0xc0000000
   140013c23:	jne    0x140013c35
   140013c25:	mov    rax,QWORD PTR [rip+0x1e764]        # 0x140032390
   140013c2c:	mov    rcx,QWORD PTR [rax]
   140013c2f:	mov    rax,QWORD PTR [rcx]
   140013c32:	call   QWORD PTR [rax+0x28]
   140013c35:	mov    eax,DWORD PTR [rbp-0x74]
   140013c38:	lea    rdx,[rbp-0x70]
   140013c3c:	and    eax,0x3fffffff
   140013c41:	mov    QWORD PTR [rbp-0x80],rdx
   140013c45:	bts    eax,0x1f
   140013c49:	mov    DWORD PTR [rbp-0x78],0x40
   140013c50:	mov    DWORD PTR [rbp-0x74],eax
   140013c53:	test   DWORD PTR [rbp-0x74],0xc0000000
   140013c5a:	jne    0x140013c71
   140013c5c:	test   rdx,rdx
   140013c5f:	je     0x140013c71
   140013c61:	mov    rax,QWORD PTR [rip+0x1e728]        # 0x140032390
   140013c68:	mov    rcx,QWORD PTR [rax]
   140013c6b:	mov    rax,QWORD PTR [rcx]
   140013c6e:	call   QWORD PTR [rax+0x28]
   140013c71:	add    rsp,0x2a0
   140013c78:	pop    rbp
   140013c79:	ret    
   140013c7a:	int3   
   140013c7b:	int3   
   140013c7c:	int3   
   140013c7d:	int3   
   140013c7e:	int3   
   140013c7f:	int3   
   140013c80:	mov    QWORD PTR [rsp+0x10],rbx
   140013c85:	mov    QWORD PTR [rsp+0x18],rbp
   140013c8a:	push   rdi
   140013c8b:	sub    rsp,0x20
   140013c8f:	mov    ebp,r8d
   140013c92:	mov    rdi,rdx
   140013c95:	mov    rbx,rcx
   140013c98:	cmp    r9d,r8d
   140013c9b:	jg     0x140013d0e
   140013c9d:	cmp    r9d,DWORD PTR [rcx+0x8]
   140013ca1:	jg     0x140013cfe
   140013ca3:	mov    rdx,QWORD PTR [rcx]
   140013ca6:	mov    QWORD PTR [rsp+0x30],rsi
   140013cab:	mov    esi,DWORD PTR [rcx+0xc]
   140013cae:	and    esi,0xc0000000
   140013cb4:	cmp    rdx,rdi
   140013cb7:	je     0x140013cf9
   140013cb9:	test   rdx,rdx
   140013cbc:	je     0x140013ce4
   140013cbe:	movsxd r8,r9d
   140013cc1:	mov    rcx,rdi
   140013cc4:	shl    r8,0x4
   140013cc8:	call   0x140026f70
   140013ccd:	test   esi,esi
   140013ccf:	jne    0x140013ce4
   140013cd1:	mov    rax,QWORD PTR [rip+0x1e6b8]        # 0x140032390
   140013cd8:	mov    rdx,QWORD PTR [rbx]
   140013cdb:	mov    rcx,QWORD PTR [rax]
   140013cde:	mov    rax,QWORD PTR [rcx]
   140013ce1:	call   QWORD PTR [rax+0x28]
   140013ce4:	mov    eax,DWORD PTR [rbx+0xc]
   140013ce7:	and    eax,0x3fffffff
   140013cec:	mov    QWORD PTR [rbx],rdi
   140013cef:	bts    eax,0x1f
   140013cf3:	mov    DWORD PTR [rbx+0x8],ebp
   140013cf6:	mov    DWORD PTR [rbx+0xc],eax
   140013cf9:	mov    rsi,QWORD PTR [rsp+0x30]
   140013cfe:	mov    rbx,QWORD PTR [rsp+0x38]
   140013d03:	mov    rbp,QWORD PTR [rsp+0x40]
   140013d08:	add    rsp,0x20
   140013d0c:	pop    rdi
   140013d0d:	ret    
   140013d0e:	mov    eax,DWORD PTR [rcx+0x8]
   140013d11:	cmp    r9d,eax
   140013d14:	jg     0x140013cfe
   140013d16:	test   r9d,r9d
   140013d19:	jne    0x140013d54
   140013d1b:	test   DWORD PTR [rcx+0xc],0xc0000000
   140013d22:	jne    0x140013cfe
   140013d24:	mov    rdx,QWORD PTR [rcx]
   140013d27:	xor    edi,edi
   140013d29:	test   rdx,rdx
   140013d2c:	je     0x140013d41
   140013d2e:	mov    rax,QWORD PTR [rip+0x1e65b]        # 0x140032390
   140013d35:	mov    rcx,QWORD PTR [rax]
   140013d38:	mov    rax,QWORD PTR [rcx]
   140013d3b:	call   QWORD PTR [rax+0x28]
   140013d3e:	mov    QWORD PTR [rbx],rdi
   140013d41:	mov    DWORD PTR [rbx+0x8],edi
   140013d44:	mov    rbx,QWORD PTR [rsp+0x38]
   140013d49:	mov    rbp,QWORD PTR [rsp+0x40]
   140013d4e:	add    rsp,0x20
   140013d52:	pop    rdi
   140013d53:	ret    
   140013d54:	test   DWORD PTR [rcx+0xc],0xc0000000
   140013d5b:	jne    0x140013cfe
   140013d5d:	cmp    r9d,eax
   140013d60:	je     0x140013cfe
   140013d62:	mov    rdx,QWORD PTR [rcx]
   140013d65:	test   rdx,rdx
   140013d68:	je     0x140013cfe
   140013d6a:	mov    DWORD PTR [rcx+0x8],r9d
   140013d6e:	mov    rax,QWORD PTR [rip+0x1e61b]        # 0x140032390
   140013d75:	movsxd r8,r9d
   140013d78:	shl    r8,0x4
   140013d7c:	mov    rcx,QWORD PTR [rax]
   140013d7f:	mov    rax,QWORD PTR [rcx]
   140013d82:	call   QWORD PTR [rax+0x18]
   140013d85:	mov    rbp,QWORD PTR [rsp+0x40]
   140013d8a:	mov    QWORD PTR [rbx],rax
   140013d8d:	mov    rbx,QWORD PTR [rsp+0x38]
   140013d92:	add    rsp,0x20
   140013d96:	pop    rdi
   140013d97:	ret    
   140013d98:	int3   
   140013d99:	int3   
   140013d9a:	int3   
   140013d9b:	int3   
   140013d9c:	int3   
   140013d9d:	int3   
   140013d9e:	int3   
   140013d9f:	int3   
   140013da0:	rex push rbp
   140013da2:	push   rbx
   140013da3:	push   rsi
   140013da4:	push   rdi
   140013da5:	push   r14
   140013da7:	lea    rbp,[rsp-0x3a0]
   140013daf:	sub    rsp,0x4a0
   140013db6:	xor    r14d,r14d
   140013db9:	mov    DWORD PTR [rbp+0x198],0x40
   140013dc3:	mov    rsi,rcx
   140013dc6:	mov    DWORD PTR [rbp+0x188],r14d
   140013dcd:	lea    rcx,[rbp+0x190]
   140013dd4:	mov    QWORD PTR [rbp+0x190],r14
   140013ddb:	mov    DWORD PTR [rbp+0x19c],0x80000000
   140013de5:	lea    edx,[r14+0x40]
   140013de9:	call   0x14000db40
   140013dee:	lea    rax,[rbp+0x190]
   140013df5:	test   al,0x7
   140013df7:	je     0x140013e04
   140013df9:	call   QWORD PTR [rip+0x1e7b1]        # 0x1400325b0
   140013dff:	test   eax,eax
   140013e01:	je     0x140013e04
   140013e03:	int3   
   140013e04:	lea    rax,[rbp+0x1a0]
   140013e0b:	mov    DWORD PTR [rsp+0x70],r14d
   140013e10:	mov    edx,0x40
   140013e15:	mov    QWORD PTR [rbp+0x190],rax
   140013e1c:	lea    rcx,[rsp+0x78]
   140013e21:	mov    QWORD PTR [rsp+0x78],r14
   140013e26:	mov    DWORD PTR [rbp-0x80],0x40
   140013e2d:	mov    DWORD PTR [rbp-0x7c],0x80000000
   140013e34:	call   0x14000db40
   140013e39:	lea    rax,[rsp+0x78]
   140013e3e:	test   al,0x7
   140013e40:	je     0x140013e4d
   140013e42:	call   QWORD PTR [rip+0x1e768]        # 0x1400325b0
   140013e48:	test   eax,eax
   140013e4a:	je     0x140013e4d
   140013e4c:	int3   
   140013e4d:	lea    rax,[rbp-0x78]
   140013e51:	mov    r8d,0x2b234708
   140013e57:	lea    rdx,[rip+0x229ee]        # 0x14003684c
   140013e5e:	mov    QWORD PTR [rsp+0x78],rax
   140013e63:	mov    rcx,rsi
   140013e66:	call   0x14000e1f0
   140013e6b:	test   rax,rax
   140013e6e:	je     0x140013e7f
   140013e70:	xor    edx,edx
   140013e72:	mov    rcx,rax
   140013e75:	call   0x14000f030
   140013e7a:	mov    rdi,rax
   140013e7d:	jmp    0x140013e86
   140013e7f:	lea    rdi,[rip+0x1e91a]        # 0x1400327a0
   140013e86:	mov    rax,QWORD PTR [rip+0x3332b]        # 0x1400471b8
   140013e8d:	mov    rbx,QWORD PTR [rax]
   140013e90:	call   0x140007c10
   140013e95:	mov    rcx,QWORD PTR [rip+0x3331c]        # 0x1400471b8
   140013e9c:	mov    rdx,rax
   140013e9f:	call   QWORD PTR [rbx+0x68]
   140013ea2:	mov    rdx,rdi
   140013ea5:	mov    rcx,rax
   140013ea8:	mov    r8,QWORD PTR [rax]
   140013eab:	call   QWORD PTR [r8+0x10]
   140013eaf:	test   rax,rax
   140013eb2:	je     0x140013f5c
   140013eb8:	mov    r8,QWORD PTR [rax+0xa8]
   140013ebf:	lea    rcx,[rsp+0x70]
   140013ec4:	mov    QWORD PTR [rbp+0x3e8],rcx
   140013ecb:	lea    r9,[rbp+0x3d8]
   140013ed2:	lea    rcx,[rbp+0x188]
   140013ed9:	xor    edx,edx
   140013edb:	mov    QWORD PTR [rbp+0x3e0],rcx
   140013ee2:	lea    rcx,[rbp+0x3e0]
   140013ee9:	mov    QWORD PTR [rsp+0x60],rcx
   140013eee:	lea    rcx,[rbp+0x3e8]
   140013ef5:	mov    QWORD PTR [rsp+0x68],rcx
   140013efa:	lea    rcx,[rbp+0x3e0]
   140013f01:	mov    QWORD PTR [rsp+0x40],rcx
   140013f06:	lea    rcx,[rbp+0x3e8]
   140013f0d:	mov    QWORD PTR [rsp+0x48],rcx
   140013f12:	lea    rcx,[rbp+0x3e0]
   140013f19:	mov    QWORD PTR [rsp+0x50],rcx
   140013f1e:	lea    rcx,[rbp+0x3e8]
   140013f25:	mov    QWORD PTR [rsp+0x58],rcx
   140013f2a:	lea    rcx,[rbp+0x3d8]
   140013f31:	mov    QWORD PTR [rsp+0x38],rcx
   140013f36:	lea    rcx,[rsp+0x40]
   140013f3b:	mov    QWORD PTR [rsp+0x30],rcx
   140013f40:	lea    rcx,[rsp+0x50]
   140013f45:	mov    QWORD PTR [rsp+0x28],rcx
   140013f4a:	lea    rcx,[rsp+0x60]
   140013f4f:	mov    QWORD PTR [rsp+0x20],rcx
   140013f54:	mov    rcx,rsi
   140013f57:	call   0x1400123b0
   140013f5c:	mov    eax,DWORD PTR [rbp+0x188]
   140013f62:	sub    eax,0x1
   140013f65:	movsxd rbx,eax
   140013f68:	js     0x140013f8f
   140013f6a:	nop    WORD PTR [rax+rax*1+0x0]
   140013f70:	mov    rdx,QWORD PTR [rsp+0x78]
   140013f75:	mov    rcx,QWORD PTR [rbp+0x190]
   140013f7c:	mov    rdx,QWORD PTR [rdx+rbx*8]
   140013f80:	mov    rcx,QWORD PTR [rcx+rbx*8]
   140013f84:	call   0x1400140b0
   140013f89:	sub    rbx,0x1
   140013f8d:	jns    0x140013f70
   140013f8f:	mov    rdx,QWORD PTR [rsp+0x78]
   140013f94:	mov    DWORD PTR [rsp+0x70],r14d
   140013f99:	cmp    DWORD PTR [rbp-0x80],r14d
   140013f9d:	jl     0x140013fe5
   140013f9f:	lea    rax,[rbp-0x78]
   140013fa3:	cmp    rdx,rax
   140013fa6:	je     0x140013fe5
   140013fa8:	test   rdx,rdx
   140013fab:	je     0x140013fc6
   140013fad:	test   DWORD PTR [rbp-0x7c],0xc0000000
   140013fb4:	jne    0x140013fc6
   140013fb6:	mov    rax,QWORD PTR [rip+0x1e3d3]        # 0x140032390
   140013fbd:	mov    rcx,QWORD PTR [rax]
   140013fc0:	mov    rax,QWORD PTR [rcx]
   140013fc3:	call   QWORD PTR [rax+0x28]
   140013fc6:	mov    eax,DWORD PTR [rbp-0x7c]
   140013fc9:	lea    rdx,[rbp-0x78]
   140013fcd:	and    eax,0x3fffffff
   140013fd2:	mov    QWORD PTR [rsp+0x78],rdx
   140013fd7:	bts    eax,0x1f
   140013fdb:	mov    DWORD PTR [rbp-0x80],0x40
   140013fe2:	mov    DWORD PTR [rbp-0x7c],eax
   140013fe5:	test   DWORD PTR [rbp-0x7c],0xc0000000
   140013fec:	jne    0x14001400c
   140013fee:	test   rdx,rdx
   140013ff1:	je     0x140014008
   140013ff3:	mov    rax,QWORD PTR [rip+0x1e396]        # 0x140032390
   140013ffa:	mov    rcx,QWORD PTR [rax]
   140013ffd:	mov    rax,QWORD PTR [rcx]
   140014000:	call   QWORD PTR [rax+0x28]
   140014003:	mov    QWORD PTR [rsp+0x78],r14
   140014008:	mov    DWORD PTR [rbp-0x80],r14d
   14001400c:	mov    rdx,QWORD PTR [rbp+0x190]
   140014013:	mov    DWORD PTR [rbp+0x188],r14d
   14001401a:	cmp    DWORD PTR [rbp+0x198],r14d
   140014021:	jl     0x14001407d
   140014023:	lea    rax,[rbp+0x1a0]
   14001402a:	cmp    rdx,rax
   14001402d:	je     0x14001407d
   14001402f:	test   rdx,rdx
   140014032:	je     0x140014050
   140014034:	test   DWORD PTR [rbp+0x19c],0xc0000000
   14001403e:	jne    0x140014050
   140014040:	mov    rax,QWORD PTR [rip+0x1e349]        # 0x140032390
   140014047:	mov    rcx,QWORD PTR [rax]
   14001404a:	mov    rax,QWORD PTR [rcx]
   14001404d:	call   QWORD PTR [rax+0x28]
   140014050:	mov    eax,DWORD PTR [rbp+0x19c]
   140014056:	lea    rdx,[rbp+0x1a0]
   14001405d:	and    eax,0x3fffffff
   140014062:	mov    QWORD PTR [rbp+0x190],rdx
   140014069:	bts    eax,0x1f
   14001406d:	mov    DWORD PTR [rbp+0x198],0x40
   140014077:	mov    DWORD PTR [rbp+0x19c],eax
   14001407d:	test   DWORD PTR [rbp+0x19c],0xc0000000
   140014087:	jne    0x14001409e
   140014089:	test   rdx,rdx
   14001408c:	je     0x14001409e
   14001408e:	mov    rax,QWORD PTR [rip+0x1e2fb]        # 0x140032390
   140014095:	mov    rcx,QWORD PTR [rax]
   140014098:	mov    rax,QWORD PTR [rcx]
   14001409b:	call   QWORD PTR [rax+0x28]
   14001409e:	add    rsp,0x4a0
   1400140a5:	pop    r14
   1400140a7:	pop    rdi
   1400140a8:	pop    rsi
   1400140a9:	pop    rbx
   1400140aa:	pop    rbp
   1400140ab:	ret    
   1400140ac:	int3   
   1400140ad:	int3   
   1400140ae:	int3   
   1400140af:	int3   
   1400140b0:	rex push rbp
   1400140b2:	lea    rbp,[rsp-0x50]
   1400140b7:	sub    rsp,0x150
   1400140be:	mov    QWORD PTR [rsp+0x148],rsi
   1400140c6:	mov    r8d,0x2
   1400140cc:	mov    rsi,rcx
   1400140cf:	lea    rcx,[rsp+0x78]
   1400140d4:	call   0x14001a2e0
   1400140d9:	lea    rcx,[rsp+0x78]
   1400140de:	call   0x14001a7c0
   1400140e3:	test   al,al
   1400140e5:	je     0x1400141fa
   1400140eb:	mov    QWORD PTR [rsp+0x160],rbx
   1400140f3:	mov    QWORD PTR [rsp+0x140],rdi
   1400140fb:	nop    DWORD PTR [rax+rax*1+0x0]
   140014100:	lea    rcx,[rsp+0x78]
   140014105:	call   0x14001a6d0
   14001410a:	mov    rdx,rax
   14001410d:	xor    r8d,r8d
   140014110:	mov    rcx,rsi
   140014113:	call   0x14000e1f0
   140014118:	mov    rdi,rax
   14001411b:	test   rax,rax
   14001411e:	je     0x1400141ce
   140014124:	lea    rdx,[rip+0x226f5]        # 0x140036820
   14001412b:	lea    rcx,[rsp+0x78]
   140014130:	call   0x1400130b0
   140014135:	test   rax,rax
   140014138:	je     0x14001413f
   14001413a:	mov    rbx,QWORD PTR [rax]
   14001413d:	jmp    0x140014141
   14001413f:	xor    ebx,ebx
   140014141:	lea    rcx,[rsp+0x78]
   140014146:	call   0x14001a6e0
   14001414b:	lea    rcx,[rbp+0x70]
   14001414f:	mov    BYTE PTR [rbp+0x70],0x0
   140014153:	mov    QWORD PTR [rsp+0x70],rcx
   140014158:	lea    r9,[rsp+0x68]
   14001415d:	lea    rcx,[rbp+0x70]
   140014161:	mov    QWORD PTR [rsp+0x68],rbx
   140014166:	mov    r8,QWORD PTR [rax+0x10]
   14001416a:	mov    rdx,rax
   14001416d:	mov    QWORD PTR [rsp+0x60],rcx
   140014172:	lea    rcx,[rbp+0x70]
   140014176:	mov    QWORD PTR [rsp+0x50],rcx
   14001417b:	lea    rcx,[rbp+0x70]
   14001417f:	mov    QWORD PTR [rsp+0x40],rcx
   140014184:	lea    rcx,[rbp+0x78]
   140014188:	mov    QWORD PTR [rsp+0x38],rcx
   14001418d:	lea    rcx,[rsp+0x48]
   140014192:	mov    QWORD PTR [rsp+0x30],rcx
   140014197:	lea    rcx,[rsp+0x40]
   14001419c:	mov    QWORD PTR [rsp+0x28],rcx
   1400141a1:	lea    rcx,[rsp+0x58]
   1400141a6:	mov    QWORD PTR [rsp+0x20],rcx
   1400141ab:	mov    rcx,rdi
   1400141ae:	mov    QWORD PTR [rsp+0x58],rbx
   1400141b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400141b8:	call   0x140012600
   1400141bd:	cmp    BYTE PTR [rbp+0x70],0x0
   1400141c1:	je     0x1400141ce
   1400141c3:	mov    rdx,rdi
   1400141c6:	mov    rcx,rsi
   1400141c9:	call   0x140011000
   1400141ce:	lea    rcx,[rsp+0x78]
   1400141d3:	call   0x14001a3b0
   1400141d8:	lea    rcx,[rsp+0x78]
   1400141dd:	call   0x14001a7c0
   1400141e2:	test   al,al
   1400141e4:	jne    0x140014100
   1400141ea:	mov    rdi,QWORD PTR [rsp+0x140]
   1400141f2:	mov    rbx,QWORD PTR [rsp+0x160]
   1400141fa:	cmp    DWORD PTR [rbp-0x78],0x0
   1400141fe:	mov    rsi,QWORD PTR [rsp+0x148]
   140014206:	mov    rdx,QWORD PTR [rbp-0x80]
   14001420a:	mov    DWORD PTR [rsp+0x78],0x0
   140014212:	jl     0x140014259
   140014214:	lea    rax,[rbp-0x70]
   140014218:	cmp    rdx,rax
   14001421b:	je     0x140014259
   14001421d:	test   rdx,rdx
   140014220:	je     0x14001423b
   140014222:	test   DWORD PTR [rbp-0x74],0xc0000000
   140014229:	jne    0x14001423b
   14001422b:	mov    rax,QWORD PTR [rip+0x1e15e]        # 0x140032390
   140014232:	mov    rcx,QWORD PTR [rax]
   140014235:	mov    rax,QWORD PTR [rcx]
   140014238:	call   QWORD PTR [rax+0x28]
   14001423b:	mov    eax,DWORD PTR [rbp-0x74]
   14001423e:	lea    rdx,[rbp-0x70]
   140014242:	and    eax,0x3fffffff
   140014247:	mov    QWORD PTR [rbp-0x80],rdx
   14001424b:	bts    eax,0x1f
   14001424f:	mov    DWORD PTR [rbp-0x78],0x8
   140014256:	mov    DWORD PTR [rbp-0x74],eax
   140014259:	test   DWORD PTR [rbp-0x74],0xc0000000
   140014260:	jne    0x140014277
   140014262:	test   rdx,rdx
   140014265:	je     0x140014277
   140014267:	mov    rax,QWORD PTR [rip+0x1e122]        # 0x140032390
   14001426e:	mov    rcx,QWORD PTR [rax]
   140014271:	mov    rax,QWORD PTR [rcx]
   140014274:	call   QWORD PTR [rax+0x28]
   140014277:	add    rsp,0x150
   14001427e:	pop    rbp
   14001427f:	ret    
   140014280:	mov    rax,rsp
   140014283:	sub    rsp,0xe8
   14001428a:	mov    QWORD PTR [rax+0x18],rsi
   14001428e:	mov    r8d,0x2
   140014294:	mov    rsi,rcx
   140014297:	mov    QWORD PTR [rax-0x8],rdi
   14001429b:	lea    rcx,[rsp+0x20]
   1400142a0:	call   0x14001a2e0
   1400142a5:	mov    rcx,rsi
   1400142a8:	call   0x14000ec10
   1400142ad:	mov    edi,eax
   1400142af:	sub    edi,0x1
   1400142b2:	js     0x140014324
   1400142b4:	mov    QWORD PTR [rsp+0xf0],rbx
   1400142bc:	mov    QWORD PTR [rsp+0xf8],rbp
   1400142c4:	lea    rbp,[rip+0x22581]        # 0x14003684c
   1400142cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400142d0:	mov    edx,edi
   1400142d2:	mov    rcx,rsi
   1400142d5:	call   0x14000ece0
   1400142da:	mov    rdx,rax
   1400142dd:	lea    rcx,[rsp+0x20]
   1400142e2:	mov    rbx,rax
   1400142e5:	call   0x14001a5f0
   1400142ea:	test   al,al
   1400142ec:	jne    0x14001430f
   1400142ee:	xor    ecx,ecx
   1400142f0:	movzx  eax,BYTE PTR [rbx+rcx*1]
   1400142f4:	inc    rcx
   1400142f7:	cmp    al,BYTE PTR [rcx+rbp*1-0x1]
   1400142fb:	jne    0x140014305
   1400142fd:	cmp    rcx,0x7
   140014301:	jne    0x1400142f0
   140014303:	jmp    0x14001430f
   140014305:	mov    edx,edi
   140014307:	mov    rcx,rsi
   14001430a:	call   0x140010fa0
   14001430f:	sub    edi,0x1
   140014312:	jns    0x1400142d0
   140014314:	mov    rbp,QWORD PTR [rsp+0xf8]
   14001431c:	mov    rbx,QWORD PTR [rsp+0xf0]
   140014324:	cmp    DWORD PTR [rsp+0x30],0x0
   140014329:	mov    rdi,QWORD PTR [rsp+0xe0]
   140014331:	mov    rsi,QWORD PTR [rsp+0x100]
   140014339:	mov    rdx,QWORD PTR [rsp+0x28]
   14001433e:	mov    DWORD PTR [rsp+0x20],0x0
   140014346:	jl     0x140014394
   140014348:	lea    rax,[rsp+0x38]
   14001434d:	cmp    rdx,rax
   140014350:	je     0x140014394
   140014352:	test   rdx,rdx
   140014355:	je     0x140014371
   140014357:	test   DWORD PTR [rsp+0x34],0xc0000000
   14001435f:	jne    0x140014371
   140014361:	mov    rax,QWORD PTR [rip+0x1e028]        # 0x140032390
   140014368:	mov    rcx,QWORD PTR [rax]
   14001436b:	mov    rax,QWORD PTR [rcx]
   14001436e:	call   QWORD PTR [rax+0x28]
   140014371:	mov    eax,DWORD PTR [rsp+0x34]
   140014375:	lea    rdx,[rsp+0x38]
   14001437a:	and    eax,0x3fffffff
   14001437f:	mov    QWORD PTR [rsp+0x28],rdx
   140014384:	bts    eax,0x1f
   140014388:	mov    DWORD PTR [rsp+0x30],0x8
   140014390:	mov    DWORD PTR [rsp+0x34],eax
   140014394:	test   DWORD PTR [rsp+0x34],0xc0000000
   14001439c:	jne    0x1400143b3
   14001439e:	test   rdx,rdx
   1400143a1:	je     0x1400143b3
   1400143a3:	mov    rax,QWORD PTR [rip+0x1dfe6]        # 0x140032390
   1400143aa:	mov    rcx,QWORD PTR [rax]
   1400143ad:	mov    rax,QWORD PTR [rcx]
   1400143b0:	call   QWORD PTR [rax+0x28]
   1400143b3:	add    rsp,0xe8
   1400143ba:	ret    
   1400143bb:	int3   
   1400143bc:	int3   
   1400143bd:	int3   
   1400143be:	int3   
   1400143bf:	int3   
   1400143c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400143c5:	cmp    BYTE PTR [rcx+0x10],0x0
   1400143c9:	mov    rbx,rdx
   1400143cc:	je     0x1400143d6
   1400143ce:	mov    al,0x1
   1400143d0:	mov    rbx,QWORD PTR [rsp+0x8]
   1400143d5:	ret    
   1400143d6:	mov    eax,DWORD PTR [rcx+0x30]
   1400143d9:	cdq    
   1400143da:	xor    eax,edx
   1400143dc:	sub    eax,edx
   1400143de:	test   eax,eax
   1400143e0:	jle    0x140014423
   1400143e2:	mov    r10,QWORD PTR [rcx+0x28]
   1400143e6:	xor    r9d,r9d
   1400143e9:	movsxd r11,eax
   1400143ec:	nop    DWORD PTR [rax+0x0]
   1400143f0:	mov    r8,QWORD PTR [r10]
   1400143f3:	mov    rax,rbx
   1400143f6:	sub    r8,rbx
   1400143f9:	nop    DWORD PTR [rax+0x0]
   140014400:	movzx  edx,BYTE PTR [rax]
   140014403:	movzx  ecx,BYTE PTR [rax+r8*1]
   140014408:	sub    edx,ecx
   14001440a:	jne    0x140014413
   14001440c:	inc    rax
   14001440f:	test   ecx,ecx
   140014411:	jne    0x140014400
   140014413:	test   edx,edx
   140014415:	je     0x1400143ce
   140014417:	inc    r9
   14001441a:	add    r10,0x10
   14001441e:	cmp    r9,r11
   140014421:	jl     0x1400143f0
   140014423:	mov    rbx,QWORD PTR [rsp+0x8]
   140014428:	xor    al,al
   14001442a:	ret    
   14001442b:	int3   
   14001442c:	int3   
   14001442d:	int3   
   14001442e:	int3   
   14001442f:	int3   
   140014430:	mov    QWORD PTR [rsp+0x8],rbx
   140014435:	push   rdi
   140014436:	sub    rsp,0x20
   14001443a:	mov    rbx,rcx
   14001443d:	call   0x140015700
   140014442:	xor    edi,edi
   140014444:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001444b:	jne    0x140014496
   14001444d:	mov    rdx,QWORD PTR [rbx+0x8]
   140014451:	test   rdx,rdx
   140014454:	je     0x14001446a
   140014456:	mov    rax,QWORD PTR [rip+0x1df33]        # 0x140032390
   14001445d:	mov    rcx,QWORD PTR [rax]
   140014460:	mov    rax,QWORD PTR [rcx]
   140014463:	call   QWORD PTR [rax+0x28]
   140014466:	mov    QWORD PTR [rbx+0x8],rdi
   14001446a:	mov    DWORD PTR [rbx+0x10],edi
   14001446d:	test   DWORD PTR [rbx+0x14],0xc0000000
   140014474:	jne    0x140014496
   140014476:	mov    rdx,QWORD PTR [rbx+0x8]
   14001447a:	test   rdx,rdx
   14001447d:	je     0x140014493
   14001447f:	mov    rax,QWORD PTR [rip+0x1df0a]        # 0x140032390
   140014486:	mov    rcx,QWORD PTR [rax]
   140014489:	mov    rax,QWORD PTR [rcx]
   14001448c:	call   QWORD PTR [rax+0x28]
   14001448f:	mov    QWORD PTR [rbx+0x8],rdi
   140014493:	mov    DWORD PTR [rbx+0x10],edi
   140014496:	mov    rbx,QWORD PTR [rsp+0x30]
   14001449b:	add    rsp,0x20
   14001449f:	pop    rdi
   1400144a0:	ret    
   1400144a1:	int3   
   1400144a2:	int3   
   1400144a3:	int3   
   1400144a4:	int3   
   1400144a5:	int3   
   1400144a6:	int3   
   1400144a7:	int3   
   1400144a8:	int3   
   1400144a9:	int3   
   1400144aa:	int3   
   1400144ab:	int3   
   1400144ac:	int3   
   1400144ad:	int3   
   1400144ae:	int3   
   1400144af:	int3   
   1400144b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400144b5:	push   rsi
   1400144b6:	sub    rsp,0x20
   1400144ba:	mov    ebx,DWORD PTR [rcx]
   1400144bc:	mov    rsi,rcx
   1400144bf:	sub    ebx,0x1
   1400144c2:	js     0x1400144ee
   1400144c4:	mov    QWORD PTR [rsp+0x30],rdi
   1400144c9:	movsxd rax,ebx
   1400144cc:	lea    rdi,[rax+rax*4]
   1400144d0:	shl    rdi,0x3
   1400144d4:	mov    rcx,QWORD PTR [rsi+0x8]
   1400144d8:	add    rcx,rdi
   1400144db:	call   0x140022d40
   1400144e0:	add    rdi,0xffffffffffffffd8
   1400144e4:	sub    ebx,0x1
   1400144e7:	jns    0x1400144d4
   1400144e9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400144ee:	xor    ebx,ebx
   1400144f0:	lea    rdx,[rsi+0x18]
   1400144f4:	xor    r9d,r9d
   1400144f7:	mov    DWORD PTR [rsi],ebx
   1400144f9:	lea    rcx,[rsi+0x8]
   1400144fd:	lea    r8d,[rbx+0x8]
   140014501:	call   0x140014870
   140014506:	test   DWORD PTR [rsi+0x14],0xc0000000
   14001450d:	jne    0x14001452f
   14001450f:	mov    rdx,QWORD PTR [rsi+0x8]
   140014513:	test   rdx,rdx
   140014516:	je     0x14001452c
   140014518:	mov    rax,QWORD PTR [rip+0x1de71]        # 0x140032390
   14001451f:	mov    rcx,QWORD PTR [rax]
   140014522:	mov    rax,QWORD PTR [rcx]
   140014525:	call   QWORD PTR [rax+0x28]
   140014528:	mov    QWORD PTR [rsi+0x8],rbx
   14001452c:	mov    DWORD PTR [rsi+0x10],ebx
   14001452f:	mov    rbx,QWORD PTR [rsp+0x38]
   140014534:	add    rsp,0x20
   140014538:	pop    rsi
   140014539:	ret    
   14001453a:	int3   
   14001453b:	int3   
   14001453c:	int3   
   14001453d:	int3   
   14001453e:	int3   
   14001453f:	int3   
   140014540:	sub    rsp,0x38
   140014544:	mov    QWORD PTR [rsp+0x20],0x0
   14001454d:	call   0x140014560
   140014552:	add    rsp,0x38
   140014556:	ret    
   140014557:	int3   
   140014558:	int3   
   140014559:	int3   
   14001455a:	int3   
   14001455b:	int3   
   14001455c:	int3   
   14001455d:	int3   
   14001455e:	int3   
   14001455f:	int3   
   140014560:	mov    rax,rsp
   140014563:	push   rbp
   140014564:	push   rbx
   140014565:	lea    rbp,[rax-0x288]
   14001456c:	sub    rsp,0x378
   140014573:	mov    QWORD PTR [rax+0x8],rsi
   140014577:	or     rbx,0xffffffffffffffff
   14001457b:	mov    QWORD PTR [rax+0x18],r12
   14001457f:	mov    rsi,r8
   140014582:	mov    QWORD PTR [rax+0x20],r14
   140014586:	mov    r12,r9
   140014589:	mov    QWORD PTR [rax-0x18],r15
   14001458d:	mov    r14,rdx
   140014590:	mov    r15,rcx
   140014593:	inc    rbx
   140014596:	cmp    BYTE PTR [r8+rbx*1],0x0
   14001459b:	jne    0x140014593
   14001459d:	cmp    ebx,0x3
   1400145a0:	jle    0x1400145bd
   1400145a2:	cmp    BYTE PTR [r8],0xef
   1400145a6:	jne    0x1400145bd
   1400145a8:	cmp    BYTE PTR [r8+0x1],0xbb
   1400145ad:	jne    0x1400145bd
   1400145af:	cmp    BYTE PTR [r8+0x2],0xbf
   1400145b4:	jne    0x1400145bd
   1400145b6:	add    rsi,0x3
   1400145ba:	sub    ebx,0x3
   1400145bd:	lea    r8d,[rbx+0x1]
   1400145c1:	mov    r9d,0x9
   1400145c7:	mov    rdx,rsi
   1400145ca:	lea    rcx,[rsp+0x40]
   1400145cf:	call   0x140020940
   1400145d4:	cmp    ebx,0x2
   1400145d7:	jle    0x140014648
   1400145d9:	cmp    BYTE PTR [rsi],0xff
   1400145dc:	jne    0x140014648
   1400145de:	cmp    BYTE PTR [rsi+0x1],0xfe
   1400145e2:	jne    0x140014648
   1400145e4:	mov    r9d,0x4
   1400145ea:	mov    QWORD PTR [rsp+0x398],rdi
   1400145f2:	xor    r8d,r8d
   1400145f5:	lea    rcx,[rsi+0x2]
   1400145f9:	xor    edx,edx
   1400145fb:	call   QWORD PTR [rip+0x1dc6f]        # 0x140032270
   140014601:	movsxd rdi,eax
   140014604:	mov    rcx,rdi
   140014607:	call   0x140007bf0
   14001460c:	mov    r9d,0x4
   140014612:	lea    rcx,[rsi+0x2]
   140014616:	mov    r8d,edi
   140014619:	mov    rdx,rax
   14001461c:	mov    rbx,rax
   14001461f:	call   QWORD PTR [rip+0x1dc4b]        # 0x140032270
   140014625:	mov    r9d,edi
   140014628:	mov    DWORD PTR [rsp+0x20],0x9
   140014630:	mov    r8d,edi
   140014633:	lea    rcx,[rsp+0x40]
   140014638:	mov    rdx,rbx
   14001463b:	call   0x140020a50
   140014640:	mov    rdi,QWORD PTR [rsp+0x398]
   140014648:	lea    r8,[rip+0x22215]        # 0x140036864
   14001464f:	lea    rdx,[rsp+0x40]
   140014654:	lea    rcx,[rbp-0x78]
   140014658:	call   0x140022c30
   14001465d:	movups xmm0,XMMWORD PTR [rip+0x1e12c]        # 0x140032790
   140014664:	lea    rdx,[rip+0x22205]        # 0x140036870
   14001466b:	mov    QWORD PTR [rbp+0x268],0x0
   140014676:	lea    rcx,[rbp-0x78]
   14001467a:	movups XMMWORD PTR [rbp+0x258],xmm0
   140014681:	call   0x140024030
   140014686:	lea    rax,[rsp+0x40]
   14001468b:	mov    QWORD PTR [rbp+0x240],r15
   140014692:	lea    rcx,[rbp-0x78]
   140014696:	mov    QWORD PTR [rbp+0x250],rax
   14001469d:	mov    QWORD PTR [rbp+0x248],r14
   1400146a4:	mov    BYTE PTR [rbp-0x80],0x1
   1400146a8:	call   0x140023fb0
   1400146ad:	mov    rbx,QWORD PTR [rbp+0x2b0]
   1400146b4:	mov    rsi,QWORD PTR [rsp+0x390]
   1400146bc:	test   rbx,rbx
   1400146bf:	jne    0x140014781
   1400146c5:	lea    rcx,[rbp-0x80]
   1400146c9:	call   0x140014d60
   1400146ce:	test   al,al
   1400146d0:	jne    0x140014781
   1400146d6:	lea    rdx,[rip+0x221cb]        # 0x1400368a8
   1400146dd:	lea    rcx,[rbp-0x80]
   1400146e1:	call   0x1400157d0
   1400146e6:	xor    bl,bl
   1400146e8:	cmp    QWORD PTR [rbp+0x268],0x0
   1400146f0:	mov    r15,QWORD PTR [rsp+0x370]
   1400146f8:	mov    r14,QWORD PTR [rsp+0x3a8]
   140014700:	mov    r12,QWORD PTR [rsp+0x3a0]
   140014708:	je     0x140014716
   14001470a:	lea    rcx,[rbp+0x268]
   140014711:	call   0x14001b030
   140014716:	lea    rcx,[rbp+0x220]
   14001471d:	call   0x140014430
   140014722:	cmp    QWORD PTR [rbp+0x218],0x0
   14001472a:	je     0x140014738
   14001472c:	lea    rcx,[rbp+0x218]
   140014733:	call   0x14001b030
   140014738:	lea    rcx,[rbp+0x1e8]
   14001473f:	call   0x140022d40
   140014744:	lea    rcx,[rbp+0x90]
   14001474b:	call   0x1400144b0
   140014750:	test   DWORD PTR [rsp+0x4c],0xc0000000
   140014758:	jne    0x140014774
   14001475a:	mov    rdx,QWORD PTR [rsp+0x40]
   14001475f:	test   rdx,rdx
   140014762:	je     0x140014774
   140014764:	mov    rax,QWORD PTR [rip+0x1dc25]        # 0x140032390
   14001476b:	mov    rcx,QWORD PTR [rax]
   14001476e:	mov    rax,QWORD PTR [rcx]
   140014771:	call   QWORD PTR [rax+0x28]
   140014774:	movzx  eax,bl
   140014777:	add    rsp,0x378
   14001477e:	pop    rbx
   14001477f:	pop    rbp
   140014780:	ret    
   140014781:	mov    rdx,QWORD PTR [rbp+0x240]
   140014788:	lea    rcx,[rbp-0x80]
   14001478c:	call   0x140015540
   140014791:	test   al,al
   140014793:	je     0x1400146e6
   140014799:	cmp    BYTE PTR [rbp-0x80],0x0
   14001479d:	je     0x1400146e6
   1400147a3:	lea    rcx,[rbp+0x268]
   1400147aa:	call   0x14001b050
   1400147af:	test   rbx,rbx
   1400147b2:	mov    QWORD PTR [rsp+0x30],rax
   1400147b7:	lea    rax,[rbp+0x258]
   1400147be:	mov    r9,r14
   1400147c1:	lea    rdx,[rsp+0x30]
   1400147c6:	mov    QWORD PTR [rsp+0x38],rax
   1400147cb:	cmovne rdx,rbx
   1400147cf:	mov    r8,r12
   1400147d2:	mov    rcx,r15
   1400147d5:	call   0x140018480
   1400147da:	movzx  ebx,al
   1400147dd:	jmp    0x1400146e8
   1400147e2:	int3   
   1400147e3:	int3   
   1400147e4:	int3   
   1400147e5:	int3   
   1400147e6:	int3   
   1400147e7:	int3   
   1400147e8:	int3   
   1400147e9:	int3   
   1400147ea:	int3   
   1400147eb:	int3   
   1400147ec:	int3   
   1400147ed:	int3   
   1400147ee:	int3   
   1400147ef:	int3   
   1400147f0:	sub    rsp,0x38
   1400147f4:	cmp    edx,0x3
   1400147f7:	jle    0x140014811
   1400147f9:	cmp    BYTE PTR [rcx],0xef
   1400147fc:	jne    0x140014811
   1400147fe:	cmp    BYTE PTR [rcx+0x1],0xbb
   140014802:	jne    0x140014811
   140014804:	cmp    BYTE PTR [rcx+0x2],0xbf
   140014808:	jne    0x140014811
   14001480a:	add    rcx,0x3
   14001480e:	sub    edx,0x3
   140014811:	cmp    edx,0x2
   140014814:	jle    0x140014828
   140014816:	cmp    BYTE PTR [rcx],0xff
   140014819:	jne    0x140014828
   14001481b:	cmp    BYTE PTR [rcx+0x1],0xfe
   14001481f:	jne    0x140014828
   140014821:	add    rcx,0x2
   140014825:	sub    edx,0x2
   140014828:	movsd  xmm0,QWORD PTR [rip+0x22028]        # 0x140036858
   140014830:	movzx  eax,WORD PTR [rip+0x22029]        # 0x140036860
   140014837:	movsd  QWORD PTR [rsp+0x20],xmm0
   14001483d:	mov    WORD PTR [rsp+0x28],ax
   140014842:	cmp    edx,0x9
   140014845:	jae    0x14001484e
   140014847:	xor    al,al
   140014849:	add    rsp,0x38
   14001484d:	ret    
   14001484e:	mov    r8d,0x9
   140014854:	lea    rdx,[rsp+0x20]
   140014859:	call   0x140022670
   14001485e:	test   eax,eax
   140014860:	sete   al
   140014863:	add    rsp,0x38
   140014867:	ret    
   140014868:	int3   
   140014869:	int3   
   14001486a:	int3   
   14001486b:	int3   
   14001486c:	int3   
   14001486d:	int3   
   14001486e:	int3   
   14001486f:	int3   
   140014870:	mov    QWORD PTR [rsp+0x10],rbx
   140014875:	mov    QWORD PTR [rsp+0x18],rbp
   14001487a:	push   rdi
   14001487b:	sub    rsp,0x20
   14001487f:	movsxd r10,r9d
   140014882:	mov    ebp,r8d
   140014885:	mov    rdi,rdx
   140014888:	mov    rbx,rcx
   14001488b:	cmp    r10d,r8d
   14001488e:	jg     0x140014902
   140014890:	cmp    r10d,DWORD PTR [rcx+0x8]
   140014894:	jg     0x1400148f2
   140014896:	mov    rdx,QWORD PTR [rcx]
   140014899:	mov    QWORD PTR [rsp+0x30],rsi
   14001489e:	mov    esi,DWORD PTR [rcx+0xc]
   1400148a1:	and    esi,0xc0000000
   1400148a7:	cmp    rdx,rdi
   1400148aa:	je     0x1400148ed
   1400148ac:	test   rdx,rdx
   1400148af:	je     0x1400148d8
   1400148b1:	lea    r8,[r10+r10*4]
   1400148b5:	mov    rcx,rdi
   1400148b8:	shl    r8,0x3
   1400148bc:	call   0x140026f70
   1400148c1:	test   esi,esi
   1400148c3:	jne    0x1400148d8
   1400148c5:	mov    rax,QWORD PTR [rip+0x1dac4]        # 0x140032390
   1400148cc:	mov    rdx,QWORD PTR [rbx]
   1400148cf:	mov    rcx,QWORD PTR [rax]
   1400148d2:	mov    rax,QWORD PTR [rcx]
   1400148d5:	call   QWORD PTR [rax+0x28]
   1400148d8:	mov    eax,DWORD PTR [rbx+0xc]
   1400148db:	and    eax,0x3fffffff
   1400148e0:	mov    QWORD PTR [rbx],rdi
   1400148e3:	bts    eax,0x1f
   1400148e7:	mov    DWORD PTR [rbx+0x8],ebp
   1400148ea:	mov    DWORD PTR [rbx+0xc],eax
   1400148ed:	mov    rsi,QWORD PTR [rsp+0x30]
   1400148f2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400148f7:	mov    rbp,QWORD PTR [rsp+0x40]
   1400148fc:	add    rsp,0x20
   140014900:	pop    rdi
   140014901:	ret    
   140014902:	mov    eax,DWORD PTR [rcx+0x8]
   140014905:	cmp    r10d,eax
   140014908:	jg     0x1400148f2
   14001490a:	test   r9d,r9d
   14001490d:	jne    0x140014948
   14001490f:	test   DWORD PTR [rcx+0xc],0xc0000000
   140014916:	jne    0x1400148f2
   140014918:	mov    rdx,QWORD PTR [rcx]
   14001491b:	xor    edi,edi
   14001491d:	test   rdx,rdx
   140014920:	je     0x140014935
   140014922:	mov    rax,QWORD PTR [rip+0x1da67]        # 0x140032390
   140014929:	mov    rcx,QWORD PTR [rax]
   14001492c:	mov    rax,QWORD PTR [rcx]
   14001492f:	call   QWORD PTR [rax+0x28]
   140014932:	mov    QWORD PTR [rbx],rdi
   140014935:	mov    DWORD PTR [rbx+0x8],edi
   140014938:	mov    rbx,QWORD PTR [rsp+0x38]
   14001493d:	mov    rbp,QWORD PTR [rsp+0x40]
   140014942:	add    rsp,0x20
   140014946:	pop    rdi
   140014947:	ret    
   140014948:	test   DWORD PTR [rcx+0xc],0xc0000000
   14001494f:	jne    0x1400148f2
   140014951:	cmp    r10d,eax
   140014954:	je     0x1400148f2
   140014956:	mov    rdx,QWORD PTR [rcx]
   140014959:	test   rdx,rdx
   14001495c:	je     0x1400148f2
   14001495e:	mov    DWORD PTR [rcx+0x8],r10d
   140014962:	lea    r8,[r10+r10*4]
   140014966:	mov    rax,QWORD PTR [rip+0x1da23]        # 0x140032390
   14001496d:	shl    r8,0x3
   140014971:	mov    rcx,QWORD PTR [rax]
   140014974:	mov    r9,QWORD PTR [rcx]
   140014977:	call   QWORD PTR [r9+0x18]
   14001497b:	mov    rbp,QWORD PTR [rsp+0x40]
   140014980:	mov    QWORD PTR [rbx],rax
   140014983:	mov    rbx,QWORD PTR [rsp+0x38]
   140014988:	add    rsp,0x20
   14001498c:	pop    rdi
   14001498d:	ret    
   14001498e:	int3   
   14001498f:	int3   
   140014990:	mov    QWORD PTR [rsp+0x18],rbx
   140014995:	mov    QWORD PTR [rsp+0x20],rsi
   14001499a:	push   r14
   14001499c:	sub    rsp,0x130
   1400149a3:	mov    r14,rdx
   1400149a6:	mov    rsi,rcx
   1400149a9:	lea    rdx,[rip+0x22218]        # 0x140036bc8
   1400149b0:	add    rcx,0x8
   1400149b4:	xor    r8d,r8d
   1400149b7:	call   0x140022f20
   1400149bc:	test   al,al
   1400149be:	jne    0x1400149d6
   1400149c0:	lea    rdx,[rip+0x221f1]        # 0x140036bb8
   1400149c7:	mov    rcx,rsi
   1400149ca:	call   0x1400157d0
   1400149cf:	xor    al,al
   1400149d1:	jmp    0x140014a93
   1400149d6:	mov    QWORD PTR [rsp+0x140],rbp
   1400149de:	xor    edx,edx
   1400149e0:	mov    rcx,r14
   1400149e3:	mov    QWORD PTR [rsp+0x148],rdi
   1400149eb:	call   0x140011400
   1400149f0:	xor    r8d,r8d
   1400149f3:	lea    rdx,[rip+0x21d76]        # 0x140036770
   1400149fa:	lea    rcx,[rsi+0x8]
   1400149fe:	xor    edi,edi
   140014a00:	call   0x140022f20
   140014a05:	test   al,al
   140014a07:	jne    0x140014a81
   140014a09:	nop    DWORD PTR [rax+0x0]
   140014a10:	lea    edx,[rdi+0x1]
   140014a13:	mov    rcx,r14
   140014a16:	call   0x140011400
   140014a1b:	mov    edx,edi
   140014a1d:	mov    rcx,r14
   140014a20:	call   0x14000e9b0
   140014a25:	mov    rdx,rax
   140014a28:	mov    rcx,rsi
   140014a2b:	call   0x140015540
   140014a30:	test   al,al
   140014a32:	je     0x140014ad1
   140014a38:	xor    r8d,r8d
   140014a3b:	lea    rdx,[rip+0x21d3a]        # 0x14003677c
   140014a42:	lea    rcx,[rsi+0x8]
   140014a46:	call   0x140022f20
   140014a4b:	test   al,al
   140014a4d:	jne    0x140014a68
   140014a4f:	xor    r9d,r9d
   140014a52:	lea    r8,[rip+0x21d17]        # 0x140036770
   140014a59:	xor    edx,edx
   140014a5b:	lea    rcx,[rsi+0x8]
   140014a5f:	call   0x140023680
   140014a64:	test   al,al
   140014a66:	je     0x140014aa9
   140014a68:	xor    r8d,r8d
   140014a6b:	lea    rdx,[rip+0x21cfe]        # 0x140036770
   140014a72:	lea    rcx,[rsi+0x8]
   140014a76:	inc    edi
   140014a78:	call   0x140022f20
   140014a7d:	test   al,al
   140014a7f:	je     0x140014a10
   140014a81:	mov    al,0x1
   140014a83:	mov    rbp,QWORD PTR [rsp+0x140]
   140014a8b:	mov    rdi,QWORD PTR [rsp+0x148]
   140014a93:	lea    r11,[rsp+0x130]
   140014a9b:	mov    rbx,QWORD PTR [r11+0x20]
   140014a9f:	mov    rsi,QWORD PTR [r11+0x28]
   140014aa3:	mov    rsp,r11
   140014aa6:	pop    r14
   140014aa8:	ret    
   140014aa9:	lea    r8,[rip+0x21cc0]        # 0x140036770
   140014ab0:	lea    rdx,[rip+0x22131]        # 0x140036be8
   140014ab7:	lea    rcx,[rsp+0x20]
   140014abc:	call   0x140001600
   140014ac1:	mov    rcx,rsi
   140014ac4:	lea    rdx,[rax+0x9]
   140014ac8:	call   0x1400157d0
   140014acd:	xor    al,al
   140014acf:	jmp    0x140014a83
   140014ad1:	lea    rdx,[rip+0x220f8]        # 0x140036bd0
   140014ad8:	mov    rcx,rsi
   140014adb:	call   0x1400157d0
   140014ae0:	xor    al,al
   140014ae2:	jmp    0x140014a83
   140014ae4:	int3   
   140014ae5:	int3   
   140014ae6:	int3   
   140014ae7:	int3   
   140014ae8:	int3   
   140014ae9:	int3   
   140014aea:	int3   
   140014aeb:	int3   
   140014aec:	int3   
   140014aed:	int3   
   140014aee:	int3   
   140014aef:	int3   
   140014af0:	mov    QWORD PTR [rsp+0x18],rsi
   140014af5:	push   rbp
   140014af6:	push   r14
   140014af8:	push   r15
   140014afa:	lea    rbp,[rsp-0x370]
   140014b02:	sub    rsp,0x470
   140014b09:	mov    r15,rdx
   140014b0c:	mov    r14,rcx
   140014b0f:	lea    rdx,[rip+0x220b6]        # 0x140036bcc
   140014b16:	add    rcx,0x8
   140014b1a:	xor    r8d,r8d
   140014b1d:	call   0x140022f20
   140014b22:	test   al,al
   140014b24:	jne    0x140014b3c
   140014b26:	lea    rdx,[rip+0x220d3]        # 0x140036c00
   140014b2d:	mov    rcx,r14
   140014b30:	call   0x1400157d0
   140014b35:	xor    al,al
   140014b37:	jmp    0x140014d20
   140014b3c:	xor    r8d,r8d
   140014b3f:	lea    rdx,[rip+0x22082]        # 0x140036bc8
   140014b46:	lea    rcx,[r14+0x8]
   140014b4a:	call   0x140022f20
   140014b4f:	test   al,al
   140014b51:	jne    0x140014b69
   140014b53:	lea    rdx,[rip+0x2205e]        # 0x140036bb8
   140014b5a:	mov    rcx,r14
   140014b5d:	call   0x1400157d0
   140014b62:	xor    al,al
   140014b64:	jmp    0x140014d20
   140014b69:	mov    QWORD PTR [rsp+0x490],rbx
   140014b71:	lea    rcx,[rsp+0x58]
   140014b76:	mov    edx,0x400
   140014b7b:	mov    QWORD PTR [rsp+0x498],rdi
   140014b83:	mov    DWORD PTR [rsp+0x50],0x0
   140014b8b:	mov    QWORD PTR [rsp+0x58],0x0
   140014b94:	mov    DWORD PTR [rsp+0x60],0x400
   140014b9c:	mov    DWORD PTR [rsp+0x64],0x80000000
   140014ba4:	call   0x14000da80
   140014ba9:	lea    rax,[rsp+0x68]
   140014bae:	xor    r8d,r8d
   140014bb1:	lea    rdx,[rip+0x21bb8]        # 0x140036770
   140014bb8:	mov    QWORD PTR [rsp+0x58],rax
   140014bbd:	lea    rcx,[r14+0x8]
   140014bc1:	call   0x140022f20
   140014bc6:	test   al,al
   140014bc8:	jne    0x140014cb4
   140014bce:	xchg   ax,ax
   140014bd0:	lea    rcx,[rsp+0x20]
   140014bd5:	call   0x140022c10
   140014bda:	lea    rdx,[rsp+0x20]
   140014bdf:	lea    rcx,[r14+0x8]
   140014be3:	call   0x140022e80
   140014be8:	test   al,al
   140014bea:	je     0x140014d3e
   140014bf0:	mov    eax,DWORD PTR [rsp+0x38]
   140014bf4:	mov    rcx,QWORD PTR [rsp+0x30]
   140014bf9:	sub    eax,ecx
   140014bfb:	cmp    eax,0x2
   140014bfe:	jne    0x140014d35
   140014c04:	movzx  ebx,BYTE PTR [rcx]
   140014c07:	lea    eax,[rbx-0x30]
   140014c0a:	cmp    al,0x9
   140014c0c:	ja     0x140014c13
   140014c0e:	sub    bl,0x30
   140014c11:	jmp    0x140014c2d
   140014c13:	lea    eax,[rbx-0x61]
   140014c16:	cmp    al,0x5
   140014c18:	ja     0x140014c1f
   140014c1a:	sub    bl,0x57
   140014c1d:	jmp    0x140014c2d
   140014c1f:	lea    eax,[rbx-0x41]
   140014c22:	cmp    al,0x5
   140014c24:	ja     0x140014d35
   140014c2a:	sub    bl,0x37
   140014c2d:	movzx  ecx,BYTE PTR [rcx+0x1]
   140014c31:	shl    bl,0x4
   140014c34:	lea    eax,[rcx-0x30]
   140014c37:	cmp    al,0x9
   140014c39:	ja     0x140014c40
   140014c3b:	sub    cl,0x30
   140014c3e:	jmp    0x140014c5a
   140014c40:	lea    eax,[rcx-0x61]
   140014c43:	cmp    al,0x5
   140014c45:	ja     0x140014c4c
   140014c47:	sub    cl,0x57
   140014c4a:	jmp    0x140014c5a
   140014c4c:	lea    eax,[rcx-0x41]
   140014c4f:	cmp    al,0x5
   140014c51:	ja     0x140014d35
   140014c57:	sub    cl,0x37
   140014c5a:	movsxd rax,DWORD PTR [rsp+0x50]
   140014c5f:	add    bl,cl
   140014c61:	mov    rdi,rax
   140014c64:	cmp    eax,DWORD PTR [rsp+0x60]
   140014c68:	jne    0x140014c7d
   140014c6a:	mov    edx,0x1
   140014c6f:	lea    rcx,[rsp+0x58]
   140014c74:	call   0x14000f0d0
   140014c79:	mov    eax,DWORD PTR [rsp+0x50]
   140014c7d:	inc    eax
   140014c7f:	mov    DWORD PTR [rsp+0x50],eax
   140014c83:	mov    rax,rdi
   140014c86:	add    rax,QWORD PTR [rsp+0x58]
   140014c8b:	je     0x140014c8f
   140014c8d:	mov    BYTE PTR [rax],bl
   140014c8f:	lea    rcx,[rsp+0x20]
   140014c94:	call   0x140022d40
   140014c99:	xor    r8d,r8d
   140014c9c:	lea    rdx,[rip+0x21acd]        # 0x140036770
   140014ca3:	lea    rcx,[r14+0x8]
   140014ca7:	call   0x140022f20
   140014cac:	test   al,al
   140014cae:	je     0x140014bd0
   140014cb4:	mov    r8d,DWORD PTR [rsp+0x50]
   140014cb9:	mov    rcx,r15
   140014cbc:	mov    rdx,QWORD PTR [rsp+0x58]
   140014cc1:	call   0x140011790
   140014cc6:	mov    bl,0x1
   140014cc8:	xor    r9d,r9d
   140014ccb:	mov    DWORD PTR [rsp+0x50],0x0
   140014cd3:	mov    r8d,0x400
   140014cd9:	lea    rdx,[rsp+0x68]
   140014cde:	lea    rcx,[rsp+0x58]
   140014ce3:	call   0x140010610
   140014ce8:	test   DWORD PTR [rsp+0x64],0xc0000000
   140014cf0:	mov    rdi,QWORD PTR [rsp+0x498]
   140014cf8:	jne    0x140014d15
   140014cfa:	mov    rdx,QWORD PTR [rsp+0x58]
   140014cff:	test   rdx,rdx
   140014d02:	je     0x140014d15
   140014d04:	mov    rcx,QWORD PTR [rip+0x1d685]        # 0x140032390
   140014d0b:	mov    rcx,QWORD PTR [rcx]
   140014d0e:	mov    r8,QWORD PTR [rcx]
   140014d11:	call   QWORD PTR [r8+0x28]
   140014d15:	movzx  eax,bl
   140014d18:	mov    rbx,QWORD PTR [rsp+0x490]
   140014d20:	mov    rsi,QWORD PTR [rsp+0x4a0]
   140014d28:	add    rsp,0x470
   140014d2f:	pop    r15
   140014d31:	pop    r14
   140014d33:	pop    rbp
   140014d34:	ret    
   140014d35:	lea    rdx,[rip+0x21ee4]        # 0x140036c20
   140014d3c:	jmp    0x140014d45
   140014d3e:	lea    rdx,[rip+0x21ecb]        # 0x140036c10
   140014d45:	mov    rcx,r14
   140014d48:	call   0x1400157d0
   140014d4d:	lea    rcx,[rsp+0x20]
   140014d52:	call   0x140022d40
   140014d57:	xor    bl,bl
   140014d59:	jmp    0x140014cc8
   140014d5e:	int3   
   140014d5f:	int3   
   140014d60:	mov    QWORD PTR [rsp+0x8],rbx
   140014d65:	push   rdi
   140014d66:	sub    rsp,0xd0
   140014d6d:	mov    rbx,rcx
   140014d70:	lea    rcx,[rsp+0xa8]
   140014d78:	call   0x140022c10
   140014d7d:	lea    rcx,[rsp+0x80]
   140014d85:	call   0x140022c10
   140014d8a:	lea    rcx,[rsp+0x58]
   140014d8f:	call   0x140022c10
   140014d94:	lea    rcx,[rsp+0x30]
   140014d99:	call   0x140022c10
   140014d9e:	xor    r8d,r8d
   140014da1:	lea    rdx,[rip+0x21b10]        # 0x1400368b8
   140014da8:	lea    rcx,[rbx+0x8]
   140014dac:	call   0x140022f20
   140014db1:	test   al,al
   140014db3:	jne    0x140014dc1
   140014db5:	lea    rdx,[rip+0x21b04]        # 0x1400368c0
   140014dbc:	jmp    0x140015086
   140014dc1:	xor    r8d,r8d
   140014dc4:	lea    rdx,[rip+0x21b19]        # 0x1400368e4
   140014dcb:	lea    rcx,[rbx+0x8]
   140014dcf:	call   0x140022f20
   140014dd4:	test   al,al
   140014dd6:	jne    0x140014de4
   140014dd8:	lea    rdx,[rip+0x21b09]        # 0x1400368e8
   140014ddf:	jmp    0x140015086
   140014de4:	xor    r8d,r8d
   140014de7:	lea    rdx,[rip+0x21b22]        # 0x140036910
   140014dee:	lea    rcx,[rbx+0x8]
   140014df2:	call   0x140022f20
   140014df7:	test   al,al
   140014df9:	jne    0x140014e07
   140014dfb:	lea    rdx,[rip+0x21b1e]        # 0x140036920
   140014e02:	jmp    0x140015086
   140014e07:	xor    r8d,r8d
   140014e0a:	lea    rdx,[rip+0x21927]        # 0x140036738
   140014e11:	lea    rcx,[rbx+0x8]
   140014e15:	call   0x140022f20
   140014e1a:	test   al,al
   140014e1c:	jne    0x140014e2a
   140014e1e:	lea    rdx,[rip+0x21b23]        # 0x140036948
   140014e25:	jmp    0x140015086
   140014e2a:	lea    rdx,[rsp+0xa8]
   140014e32:	lea    rcx,[rbx+0x8]
   140014e36:	call   0x140022fc0
   140014e3b:	test   al,al
   140014e3d:	jne    0x140014e4b
   140014e3f:	lea    rdx,[rip+0x21b22]        # 0x140036968
   140014e46:	jmp    0x140015086
   140014e4b:	xor    r8d,r8d
   140014e4e:	lea    rdx,[rip+0x218e3]        # 0x140036738
   140014e55:	lea    rcx,[rbx+0x8]
   140014e59:	call   0x140022f20
   140014e5e:	test   al,al
   140014e60:	je     0x140014e1e
   140014e62:	xor    r8d,r8d
   140014e65:	lea    rdx,[rip+0x21b2c]        # 0x140036998
   140014e6c:	lea    rcx,[rbx+0x8]
   140014e70:	call   0x140022f20
   140014e75:	test   al,al
   140014e77:	jne    0x140014e85
   140014e79:	lea    rdx,[rip+0x21b20]        # 0x1400369a0
   140014e80:	jmp    0x140015086
   140014e85:	xor    r8d,r8d
   140014e88:	lea    rdx,[rip+0x21b39]        # 0x1400369c8
   140014e8f:	lea    rcx,[rbx+0x8]
   140014e93:	call   0x140022f20
   140014e98:	test   al,al
   140014e9a:	je     0x140014ec8
   140014e9c:	lea    rdx,[rsp+0x80]
   140014ea4:	lea    rcx,[rbx+0x8]
   140014ea8:	call   0x140022e80
   140014ead:	test   al,al
   140014eaf:	je     0x140014ec8
   140014eb1:	xor    r8d,r8d
   140014eb4:	lea    rdx,[rip+0x218cd]        # 0x140036788
   140014ebb:	lea    rcx,[rbx+0x8]
   140014ebf:	call   0x140022f20
   140014ec4:	test   al,al
   140014ec6:	jne    0x140014ed7
   140014ec8:	lea    rdx,[rip+0x21b01]        # 0x1400369d0
   140014ecf:	mov    rcx,rbx
   140014ed2:	call   0x1400157d0
   140014ed7:	xor    r8d,r8d
   140014eda:	lea    rdx,[rip+0x21b1b]        # 0x1400369fc
   140014ee1:	lea    rcx,[rbx+0x8]
   140014ee5:	call   0x140022f20
   140014eea:	test   al,al
   140014eec:	jne    0x140014efa
   140014eee:	lea    rdx,[rip+0x21b13]        # 0x140036a08
   140014ef5:	jmp    0x140015086
   140014efa:	xor    r8d,r8d
   140014efd:	lea    rdx,[rip+0x21834]        # 0x140036738
   140014f04:	lea    rcx,[rbx+0x8]
   140014f08:	call   0x140022f20
   140014f0d:	test   al,al
   140014f0f:	je     0x140014e1e
   140014f15:	lea    rdx,[rsp+0x58]
   140014f1a:	lea    rcx,[rbx+0x8]
   140014f1e:	call   0x140022fc0
   140014f23:	test   al,al
   140014f25:	jne    0x140014f33
   140014f27:	lea    rdx,[rip+0x21b02]        # 0x140036a30
   140014f2e:	jmp    0x140015086
   140014f33:	xor    r8d,r8d
   140014f36:	lea    rdx,[rip+0x217fb]        # 0x140036738
   140014f3d:	lea    rcx,[rbx+0x8]
   140014f41:	call   0x140022f20
   140014f46:	test   al,al
   140014f48:	je     0x140014e1e
   140014f4e:	xor    r8d,r8d
   140014f51:	lea    rdx,[rip+0x21a40]        # 0x140036998
   140014f58:	lea    rcx,[rbx+0x8]
   140014f5c:	call   0x140022f20
   140014f61:	test   al,al
   140014f63:	je     0x140014e79
   140014f69:	xor    r8d,r8d
   140014f6c:	lea    rdx,[rip+0x21a55]        # 0x1400369c8
   140014f73:	lea    rcx,[rbx+0x8]
   140014f77:	call   0x140022f20
   140014f7c:	test   al,al
   140014f7e:	je     0x140014fa9
   140014f80:	lea    rdx,[rsp+0x30]
   140014f85:	lea    rcx,[rbx+0x8]
   140014f89:	call   0x140022e80
   140014f8e:	test   al,al
   140014f90:	je     0x140014fa9
   140014f92:	xor    r8d,r8d
   140014f95:	lea    rdx,[rip+0x217ec]        # 0x140036788
   140014f9c:	lea    rcx,[rbx+0x8]
   140014fa0:	call   0x140022f20
   140014fa5:	test   al,al
   140014fa7:	jne    0x140014fb8
   140014fa9:	lea    rdx,[rip+0x21ab0]        # 0x140036a60
   140014fb0:	mov    rcx,rbx
   140014fb3:	call   0x1400157d0
   140014fb8:	xor    r8d,r8d
   140014fbb:	lea    rdx,[rip+0x21aca]        # 0x140036a8c
   140014fc2:	lea    rcx,[rbx+0x8]
   140014fc6:	call   0x140022f20
   140014fcb:	test   al,al
   140014fcd:	jne    0x140014fdb
   140014fcf:	lea    rdx,[rip+0x21aba]        # 0x140036a90
   140014fd6:	jmp    0x140015086
   140014fdb:	lea    rcx,[rsp+0x80]
   140014fe3:	call   0x140022dc0
   140014fe8:	mov    rdx,rax
   140014feb:	lea    rcx,[rsp+0x20]
   140014ff0:	call   QWORD PTR [rip+0x1d272]        # 0x140032268
   140014ff6:	test   al,al
   140014ff8:	je     0x14001507f
   140014ffe:	lea    rcx,[rsp+0x30]
   140015003:	call   0x140022dc0
   140015008:	mov    rdx,rax
   14001500b:	lea    rcx,[rbx+0x2d8]
   140015012:	call   QWORD PTR [rip+0x1d250]        # 0x140032268
   140015018:	test   al,al
   14001501a:	je     0x14001507f
   14001501c:	lea    rcx,[rsp+0x58]
   140015021:	call   0x140022dc0
   140015026:	mov    rdx,rax
   140015029:	lea    rcx,[rbx+0x2e8]
   140015030:	call   0x14001aae0
   140015035:	lea    rcx,[rsp+0xa8]
   14001503d:	call   0x140022dc0
   140015042:	mov    rdx,QWORD PTR [rip+0x30fbf]        # 0x140046008
   140015049:	mov    rcx,rax
   14001504c:	call   QWORD PTR [rip+0x1d50e]        # 0x140032560
   140015052:	test   eax,eax
   140015054:	jne    0x140015076
   140015056:	mov    rcx,QWORD PTR [rip+0x30fb3]        # 0x140046010
   14001505d:	mov    rax,QWORD PTR [rsp+0x20]
   140015062:	cmp    rax,QWORD PTR [rcx]
   140015065:	jne    0x140015076
   140015067:	mov    rax,QWORD PTR [rsp+0x28]
   14001506c:	cmp    rax,QWORD PTR [rcx+0x8]
   140015070:	jne    0x140015076
   140015072:	mov    bl,0x1
   140015074:	jmp    0x140015090
   140015076:	lea    rdx,[rip+0x21a53]        # 0x140036ad0
   14001507d:	jmp    0x140015086
   14001507f:	lea    rdx,[rip+0x21a22]        # 0x140036aa8
   140015086:	mov    rcx,rbx
   140015089:	call   0x1400157d0
   14001508e:	xor    bl,bl
   140015090:	lea    rcx,[rsp+0x30]
   140015095:	call   0x140022d40
   14001509a:	lea    rcx,[rsp+0x58]
   14001509f:	call   0x140022d40
   1400150a4:	lea    rcx,[rsp+0x80]
   1400150ac:	call   0x140022d40
   1400150b1:	lea    rcx,[rsp+0xa8]
   1400150b9:	call   0x140022d40
   1400150be:	movzx  eax,bl
   1400150c1:	mov    rbx,QWORD PTR [rsp+0xe0]
   1400150c9:	add    rsp,0xd0
   1400150d0:	pop    rdi
   1400150d1:	ret    
   1400150d2:	int3   
   1400150d3:	int3   
   1400150d4:	int3   
   1400150d5:	int3   
   1400150d6:	int3   
   1400150d7:	int3   
   1400150d8:	int3   
   1400150d9:	int3   
   1400150da:	int3   
   1400150db:	int3   
   1400150dc:	int3   
   1400150dd:	int3   
   1400150de:	int3   
   1400150df:	int3   
   1400150e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400150e5:	push   rdi
   1400150e6:	sub    rsp,0x160
   1400150ed:	mov    rdi,rcx
   1400150f0:	mov    rbx,rdx
   1400150f3:	lea    rcx,[rsp+0x20]
   1400150f8:	call   0x140022c10
   1400150fd:	lea    rcx,[rdi+0x8]
   140015101:	lea    rdx,[rsp+0x20]
   140015106:	call   0x140022e80
   14001510b:	test   al,al
   14001510d:	jne    0x140015123
   14001510f:	lea    rdx,[rip+0x21afa]        # 0x140036c10
   140015116:	mov    rcx,rdi
   140015119:	call   0x1400157d0
   14001511e:	jmp    0x1400152c7
   140015123:	test   rbx,rbx
   140015126:	je     0x140015289
   14001512c:	lea    rcx,[rsp+0x20]
   140015131:	call   0x140023360
   140015136:	lea    rcx,[rsp+0x20]
   14001513b:	test   al,al
   14001513d:	je     0x1400151a2
   14001513f:	xor    r8d,r8d
   140015142:	lea    rdx,[rip+0x212c3]        # 0x14003640c
   140015149:	call   0x140023450
   14001514e:	test   al,al
   140015150:	je     0x140015163
   140015152:	mov    dl,0x1
   140015154:	mov    rcx,rbx
   140015157:	call   0x140011470
   14001515c:	mov    bl,0x1
   14001515e:	jmp    0x1400152c9
   140015163:	xor    r8d,r8d
   140015166:	lea    rdx,[rip+0x212a7]        # 0x140036414
   14001516d:	lea    rcx,[rsp+0x20]
   140015172:	call   0x140023450
   140015177:	test   al,al
   140015179:	je     0x14001518c
   14001517b:	xor    edx,edx
   14001517d:	mov    rcx,rbx
   140015180:	call   0x140011470
   140015185:	mov    bl,0x1
   140015187:	jmp    0x1400152c9
   14001518c:	lea    rdx,[rip+0x21aad]        # 0x140036c40
   140015193:	mov    rcx,rdi
   140015196:	call   0x1400157d0
   14001519b:	mov    bl,0x1
   14001519d:	jmp    0x1400152c9
   1400151a2:	call   0x1400235a0
   1400151a7:	lea    rcx,[rsp+0x20]
   1400151ac:	test   al,al
   1400151ae:	je     0x1400151c7
   1400151b0:	call   0x140022dc0
   1400151b5:	mov    rdx,rax
   1400151b8:	mov    rcx,rbx
   1400151bb:	call   0x140011590
   1400151c0:	mov    bl,0x1
   1400151c2:	jmp    0x1400152c9
   1400151c7:	call   0x1400234c0
   1400151cc:	lea    rcx,[rsp+0x20]
   1400151d1:	test   al,al
   1400151d3:	je     0x1400151f5
   1400151d5:	call   0x140022dc0
   1400151da:	mov    rcx,rax
   1400151dd:	call   QWORD PTR [rip+0x1d09d]        # 0x140032280
   1400151e3:	movaps xmm1,xmm0
   1400151e6:	mov    rcx,rbx
   1400151e9:	call   0x1400114a0
   1400151ee:	mov    bl,0x1
   1400151f0:	jmp    0x1400152c9
   1400151f5:	call   0x140023620
   1400151fa:	lea    rcx,[rsp+0x20]
   1400151ff:	test   al,al
   140015201:	je     0x14001526e
   140015203:	lea    rdx,[rsp+0x170]
   14001520b:	mov    QWORD PTR [rsp+0x170],0x0
   140015217:	call   0x140022e50
   14001521c:	lea    rcx,[rsp+0x170]
   140015224:	call   0x14001b050
   140015229:	mov    rdx,rax
   14001522c:	mov    rcx,rbx
   14001522f:	call   0x1400116c0
   140015234:	lea    rcx,[rsp+0x20]
   140015239:	call   0x1400235f0
   14001523e:	test   al,al
   140015240:	je     0x140015252
   140015242:	mov    edx,0x4
   140015247:	mov    r8b,0x1
   14001524a:	mov    rcx,rbx
   14001524d:	call   0x1400114d0
   140015252:	cmp    QWORD PTR [rsp+0x170],0x0
   14001525b:	je     0x140015289
   14001525d:	lea    rcx,[rsp+0x170]
   140015265:	call   0x14001b030
   14001526a:	mov    bl,0x1
   14001526c:	jmp    0x1400152c9
   14001526e:	xor    r8d,r8d
   140015271:	lea    rdx,[rip+0x214c4]        # 0x14003673c
   140015278:	call   0x140023450
   14001527d:	test   al,al
   14001527f:	je     0x14001528d
   140015281:	mov    rcx,rbx
   140015284:	call   0x1400117f0
   140015289:	mov    bl,0x1
   14001528b:	jmp    0x1400152c9
   14001528d:	lea    rcx,[rsp+0x20]
   140015292:	call   0x140022dc0
   140015297:	lea    rcx,[rsp+0x20]
   14001529c:	mov    rbx,rax
   14001529f:	call   0x140023250
   1400152a4:	mov    r8d,eax
   1400152a7:	lea    rdx,[rip+0x219ba]        # 0x140036c68
   1400152ae:	mov    r9,rbx
   1400152b1:	lea    rcx,[rsp+0x48]
   1400152b6:	call   0x140001600
   1400152bb:	mov    rcx,rdi
   1400152be:	lea    rdx,[rax+0x9]
   1400152c2:	call   0x1400158c0
   1400152c7:	xor    bl,bl
   1400152c9:	lea    rcx,[rsp+0x20]
   1400152ce:	call   0x140022d40
   1400152d3:	movzx  eax,bl
   1400152d6:	mov    rbx,QWORD PTR [rsp+0x178]
   1400152de:	add    rsp,0x160
   1400152e5:	pop    rdi
   1400152e6:	ret    
   1400152e7:	int3   
   1400152e8:	int3   
   1400152e9:	int3   
   1400152ea:	int3   
   1400152eb:	int3   
   1400152ec:	int3   
   1400152ed:	int3   
   1400152ee:	int3   
   1400152ef:	int3   
   1400152f0:	mov    QWORD PTR [rsp+0x18],rbx
   1400152f5:	push   rbp
   1400152f6:	push   rsi
   1400152f7:	push   rdi
   1400152f8:	lea    rbp,[rsp-0x60]
   1400152fd:	sub    rsp,0x160
   140015304:	mov    rsi,rdx
   140015307:	mov    rdi,rcx
   14001530a:	lea    rdx,[rip+0x216b7]        # 0x1400369c8
   140015311:	add    rcx,0x8
   140015315:	xor    r8d,r8d
   140015318:	call   0x140022f20
   14001531d:	test   al,al
   14001531f:	jne    0x140015337
   140015321:	lea    rdx,[rip+0x217d8]        # 0x140036b00
   140015328:	mov    rcx,rdi
   14001532b:	call   0x1400157d0
   140015330:	xor    al,al
   140015332:	jmp    0x14001546b
   140015337:	mov    rcx,rsi
   14001533a:	mov    QWORD PTR [rsp+0x188],r14
   140015342:	call   0x1400117e0
   140015347:	xor    r9d,r9d
   14001534a:	lea    r8,[rip+0x21437]        # 0x140036788
   140015351:	xor    edx,edx
   140015353:	lea    rcx,[rdi+0x8]
   140015357:	call   0x140023680
   14001535c:	test   al,al
   14001535e:	jne    0x14001544e
   140015364:	xor    r14d,r14d
   140015367:	nop    WORD PTR [rax+rax*1+0x0]
   140015370:	lea    rcx,[rsp+0x20]
   140015375:	call   0x140022c10
   14001537a:	lea    rdx,[rsp+0x20]
   14001537f:	lea    rcx,[rdi+0x8]
   140015383:	call   0x140022e80
   140015388:	test   al,al
   14001538a:	je     0x140015509
   140015390:	mov    dl,0x1
   140015392:	lea    rcx,[rsp+0x20]
   140015397:	call   0x140023510
   14001539c:	test   al,al
   14001539e:	jne    0x1400153b2
   1400153a0:	lea    rcx,[rsp+0x20]
   1400153a5:	call   0x140023620
   1400153aa:	test   al,al
   1400153ac:	je     0x14001547e
   1400153b2:	xor    r8d,r8d
   1400153b5:	lea    rdx,[rip+0x21790]        # 0x140036b4c
   1400153bc:	lea    rcx,[rdi+0x8]
   1400153c0:	call   0x140022f20
   1400153c5:	lea    rcx,[rsp+0x20]
   1400153ca:	test   al,al
   1400153cc:	je     0x1400154ee
   1400153d2:	lea    rdx,[rbp+0x80]
   1400153d9:	mov    QWORD PTR [rbp+0x80],r14
   1400153e0:	call   0x140022e50
   1400153e5:	lea    rcx,[rbp+0x80]
   1400153ec:	call   0x14001b050
   1400153f1:	mov    rdx,rax
   1400153f4:	mov    r8d,r14d
   1400153f7:	mov    rcx,rsi
   1400153fa:	call   0x140011690
   1400153ff:	mov    rdx,rax
   140015402:	mov    rcx,rdi
   140015405:	call   0x140015540
   14001540a:	test   al,al
   14001540c:	je     0x14001549e
   140015412:	cmp    QWORD PTR [rbp+0x80],r14
   140015419:	je     0x140015427
   14001541b:	lea    rcx,[rbp+0x80]
   140015422:	call   0x14001b030
   140015427:	lea    rcx,[rsp+0x20]
   14001542c:	call   0x140022d40
   140015431:	xor    r9d,r9d
   140015434:	lea    r8,[rip+0x2134d]        # 0x140036788
   14001543b:	xor    edx,edx
   14001543d:	lea    rcx,[rdi+0x8]
   140015441:	call   0x140023680
   140015446:	test   al,al
   140015448:	je     0x140015370
   14001544e:	xor    r8d,r8d
   140015451:	lea    rdx,[rip+0x21330]        # 0x140036788
   140015458:	lea    rcx,[rdi+0x8]
   14001545c:	call   0x140022f20
   140015461:	mov    al,0x1
   140015463:	mov    r14,QWORD PTR [rsp+0x188]
   14001546b:	mov    rbx,QWORD PTR [rsp+0x190]
   140015473:	add    rsp,0x160
   14001547a:	pop    rdi
   14001547b:	pop    rsi
   14001547c:	pop    rbp
   14001547d:	ret    
   14001547e:	lea    rcx,[rsp+0x20]
   140015483:	call   0x140022dc0
   140015488:	mov    r8,rax
   14001548b:	lea    rdx,[rip+0x2169e]        # 0x140036b30
   140015492:	lea    rcx,[rsp+0x48]
   140015497:	call   0x140001600
   14001549c:	jmp    0x14001551a
   14001549e:	lea    rcx,[rsp+0x20]
   1400154a3:	call   0x140022dc0
   1400154a8:	mov    r8,rax
   1400154ab:	lea    rdx,[rip+0x216c6]        # 0x140036b78
   1400154b2:	lea    rcx,[rsp+0x48]
   1400154b7:	call   0x140001600
   1400154bc:	mov    rcx,rdi
   1400154bf:	lea    rdx,[rax+0x9]
   1400154c3:	call   0x1400157d0
   1400154c8:	cmp    QWORD PTR [rbp+0x80],r14
   1400154cf:	je     0x140015526
   1400154d1:	lea    rcx,[rbp+0x80]
   1400154d8:	call   0x14001b030
   1400154dd:	lea    rcx,[rsp+0x20]
   1400154e2:	call   0x140022d40
   1400154e7:	xor    al,al
   1400154e9:	jmp    0x140015463
   1400154ee:	call   0x140022dc0
   1400154f3:	mov    r8,rax
   1400154f6:	lea    rdx,[rip+0x21653]        # 0x140036b50
   1400154fd:	lea    rcx,[rsp+0x48]
   140015502:	call   0x140001600
   140015507:	jmp    0x14001551a
   140015509:	lea    rdx,[rip+0x21600]        # 0x140036b10
   140015510:	lea    rcx,[rsp+0x48]
   140015515:	call   0x140001600
   14001551a:	lea    rdx,[rax+0x9]
   14001551e:	mov    rcx,rdi
   140015521:	call   0x1400157d0
   140015526:	lea    rcx,[rsp+0x20]
   14001552b:	call   0x140022d40
   140015530:	xor    al,al
   140015532:	jmp    0x140015463
   140015537:	int3   
   140015538:	int3   
   140015539:	int3   
   14001553a:	int3   
   14001553b:	int3   
   14001553c:	int3   
   14001553d:	int3   
   14001553e:	int3   
   14001553f:	int3   
   140015540:	mov    QWORD PTR [rsp+0x8],rbx
   140015545:	mov    QWORD PTR [rsp+0x10],rsi
   14001554a:	push   rdi
   14001554b:	sub    rsp,0x160
   140015552:	mov    rdi,rdx
   140015555:	mov    rsi,rcx
   140015558:	xor    edx,edx
   14001555a:	add    rcx,0x8
   14001555e:	call   0x1400236e0
   140015563:	test   al,al
   140015565:	je     0x14001560b
   14001556b:	nop    DWORD PTR [rax+rax*1+0x0]
   140015570:	xor    r9d,r9d
   140015573:	lea    r8,[rip+0x211ba]        # 0x140036734
   14001557a:	lea    rcx,[rsi+0x8]
   14001557e:	lea    edx,[r9+0x1]
   140015582:	call   0x140023680
   140015587:	test   al,al
   140015589:	jne    0x1400155a6
   14001558b:	xor    r9d,r9d
   14001558e:	lea    r8,[rip+0x211a3]        # 0x140036738
   140015595:	lea    rcx,[rsi+0x8]
   140015599:	lea    edx,[r9+0x1]
   14001559d:	call   0x140023680
   1400155a2:	test   al,al
   1400155a4:	je     0x14001560b
   1400155a6:	lea    rcx,[rsp+0x20]
   1400155ab:	call   0x140022c10
   1400155b0:	lea    rdx,[rsp+0x20]
   1400155b5:	lea    rcx,[rsi+0x8]
   1400155b9:	call   0x140022fc0
   1400155be:	xor    edx,edx
   1400155c0:	lea    rcx,[rsi+0x8]
   1400155c4:	call   0x140022e80
   1400155c9:	lea    rcx,[rsp+0x20]
   1400155ce:	call   0x140022dc0
   1400155d3:	mov    rcx,rax
   1400155d6:	call   0x140011830
   1400155db:	test   ax,ax
   1400155de:	je     0x140015634
   1400155e0:	mov    r8b,0x1
   1400155e3:	movzx  edx,ax
   1400155e6:	mov    rcx,rdi
   1400155e9:	call   0x1400114d0
   1400155ee:	lea    rcx,[rsp+0x20]
   1400155f3:	call   0x140022d40
   1400155f8:	xor    edx,edx
   1400155fa:	lea    rcx,[rsi+0x8]
   1400155fe:	call   0x1400236e0
   140015603:	test   al,al
   140015605:	jne    0x140015570
   14001560b:	xor    r9d,r9d
   14001560e:	lea    r8,[rip+0x215b3]        # 0x140036bc8
   140015615:	xor    edx,edx
   140015617:	lea    rcx,[rsi+0x8]
   14001561b:	call   0x140023680
   140015620:	test   al,al
   140015622:	je     0x14001567b
   140015624:	mov    rdx,rdi
   140015627:	mov    rcx,rsi
   14001562a:	call   0x140014990
   14001562f:	jmp    0x1400156e7
   140015634:	lea    rcx,[rsp+0x20]
   140015639:	call   0x140022dc0
   14001563e:	mov    r8,rax
   140015641:	lea    rdx,[rip+0x21550]        # 0x140036b98
   140015648:	lea    rcx,[rsp+0x48]
   14001564d:	call   0x140001600
   140015652:	mov    rcx,rsi
   140015655:	lea    rdx,[rax+0x9]
   140015659:	call   0x1400157d0
   14001565e:	lea    rdx,[rip+0x21553]        # 0x140036bb8
   140015665:	mov    rcx,rsi
   140015668:	call   0x1400157d0
   14001566d:	lea    rcx,[rsp+0x20]
   140015672:	call   0x140022d40
   140015677:	xor    al,al
   140015679:	jmp    0x1400156e7
   14001567b:	xor    r9d,r9d
   14001567e:	lea    r8,[rip+0x21547]        # 0x140036bcc
   140015685:	xor    edx,edx
   140015687:	lea    rcx,[rsi+0x8]
   14001568b:	call   0x140023680
   140015690:	test   al,al
   140015692:	je     0x1400156bc
   140015694:	xor    r9d,r9d
   140015697:	lea    r8,[rip+0x2152a]        # 0x140036bc8
   14001569e:	lea    rcx,[rsi+0x8]
   1400156a2:	lea    edx,[r9+0x1]
   1400156a6:	call   0x140023680
   1400156ab:	test   al,al
   1400156ad:	je     0x1400156bc
   1400156af:	mov    rdx,rdi
   1400156b2:	mov    rcx,rsi
   1400156b5:	call   0x140014af0
   1400156ba:	jmp    0x1400156e7
   1400156bc:	xor    r9d,r9d
   1400156bf:	lea    r8,[rip+0x21302]        # 0x1400369c8
   1400156c6:	xor    edx,edx
   1400156c8:	lea    rcx,[rsi+0x8]
   1400156cc:	call   0x140023680
   1400156d1:	mov    rdx,rdi
   1400156d4:	mov    rcx,rsi
   1400156d7:	test   al,al
   1400156d9:	je     0x1400156e2
   1400156db:	call   0x1400152f0
   1400156e0:	jmp    0x1400156e7
   1400156e2:	call   0x1400150e0
   1400156e7:	lea    r11,[rsp+0x160]
   1400156ef:	mov    rbx,QWORD PTR [r11+0x10]
   1400156f3:	mov    rsi,QWORD PTR [r11+0x18]
   1400156f7:	mov    rsp,r11
   1400156fa:	pop    rdi
   1400156fb:	ret    
   1400156fc:	int3   
   1400156fd:	int3   
   1400156fe:	int3   
   1400156ff:	int3   
   140015700:	mov    QWORD PTR [rsp+0x10],rbx
   140015705:	push   rsi
   140015706:	sub    rsp,0x20
   14001570a:	mov    eax,DWORD PTR [rcx]
   14001570c:	mov    rsi,rcx
   14001570f:	sub    eax,0x1
   140015712:	movsxd rbx,eax
   140015715:	js     0x140015755
   140015717:	mov    QWORD PTR [rsp+0x30],rdi
   14001571c:	mov    rdi,rbx
   14001571f:	shl    rdi,0x4
   140015723:	mov    rcx,QWORD PTR [rsi+0x8]
   140015727:	add    rcx,rdi
   14001572a:	cmp    QWORD PTR [rcx],0x0
   14001572e:	je     0x140015735
   140015730:	call   0x14001b030
   140015735:	sub    rdi,0x10
   140015739:	sub    rbx,0x1
   14001573d:	jns    0x140015723
   14001573f:	mov    DWORD PTR [rsi],0x0
   140015745:	mov    rdi,QWORD PTR [rsp+0x30]
   14001574a:	mov    rbx,QWORD PTR [rsp+0x38]
   14001574f:	add    rsp,0x20
   140015753:	pop    rsi
   140015754:	ret    
   140015755:	mov    DWORD PTR [rcx],0x0
   14001575b:	mov    rbx,QWORD PTR [rsp+0x38]
   140015760:	add    rsp,0x20
   140015764:	pop    rsi
   140015765:	ret    
   140015766:	int3   
   140015767:	int3   
   140015768:	int3   
   140015769:	int3   
   14001576a:	int3   
   14001576b:	int3   
   14001576c:	int3   
   14001576d:	int3   
   14001576e:	int3   
   14001576f:	int3   
   140015770:	mov    QWORD PTR [rsp+0x10],rbx
   140015775:	push   rsi
   140015776:	sub    rsp,0x20
   14001577a:	mov    ebx,DWORD PTR [rcx]
   14001577c:	mov    rsi,rcx
   14001577f:	sub    ebx,0x1
   140015782:	js     0x1400157bf
   140015784:	mov    QWORD PTR [rsp+0x30],rdi
   140015789:	movsxd rax,ebx
   14001578c:	lea    rdi,[rax+rax*4]
   140015790:	shl    rdi,0x3
   140015794:	mov    rcx,QWORD PTR [rsi+0x8]
   140015798:	add    rcx,rdi
   14001579b:	call   0x140022d40
   1400157a0:	add    rdi,0xffffffffffffffd8
   1400157a4:	sub    ebx,0x1
   1400157a7:	jns    0x140015794
   1400157a9:	mov    DWORD PTR [rsi],0x0
   1400157af:	mov    rdi,QWORD PTR [rsp+0x30]
   1400157b4:	mov    rbx,QWORD PTR [rsp+0x38]
   1400157b9:	add    rsp,0x20
   1400157bd:	pop    rsi
   1400157be:	ret    
   1400157bf:	mov    DWORD PTR [rcx],0x0
   1400157c5:	mov    rbx,QWORD PTR [rsp+0x38]
   1400157ca:	add    rsp,0x20
   1400157ce:	pop    rsi
   1400157cf:	ret    
   1400157d0:	mov    QWORD PTR [rsp+0x10],rbp
   1400157d5:	mov    QWORD PTR [rsp+0x18],rsi
   1400157da:	push   rdi
   1400157db:	sub    rsp,0x170
   1400157e2:	mov    rdi,rcx
   1400157e5:	mov    rbp,rdx
   1400157e8:	lea    rcx,[rsp+0x30]
   1400157ed:	call   0x140022c10
   1400157f2:	lea    r8,[rsp+0x30]
   1400157f7:	xor    edx,edx
   1400157f9:	lea    rcx,[rdi+0x8]
   1400157fd:	call   0x140023780
   140015802:	test   al,al
   140015804:	je     0x14001584a
   140015806:	lea    rcx,[rsp+0x30]
   14001580b:	mov    QWORD PTR [rsp+0x180],rbx
   140015813:	call   0x140022dc0
   140015818:	lea    rcx,[rdi+0x8]
   14001581c:	mov    rbx,rax
   14001581f:	call   0x140023230
   140015824:	mov    r8d,eax
   140015827:	mov    QWORD PTR [rsp+0x20],rbp
   14001582c:	mov    r9,rbx
   14001582f:	lea    rdx,[rip+0x2104a]        # 0x140036880
   140015836:	lea    rcx,[rsp+0x58]
   14001583b:	call   0x140001600
   140015840:	mov    rbx,QWORD PTR [rsp+0x180]
   140015848:	jmp    0x14001586a
   14001584a:	lea    rcx,[rdi+0x8]
   14001584e:	call   0x140023230
   140015853:	mov    r8d,eax
   140015856:	lea    rdx,[rip+0x2103b]        # 0x140036898
   14001585d:	mov    r9,rbp
   140015860:	lea    rcx,[rsp+0x58]
   140015865:	call   0x140001600
   14001586a:	mov    rcx,QWORD PTR [rdi+0x2c8]
   140015871:	mov    BYTE PTR [rdi],0x0
   140015874:	test   rcx,rcx
   140015877:	je     0x140015895
   140015879:	lea    rdx,[rax+0x9]
   14001587d:	call   0x14001ac10
   140015882:	mov    rcx,QWORD PTR [rdi+0x2c8]
   140015889:	lea    rdx,[rip+0x1eaa8]        # 0x140034338
   140015890:	call   0x14001ac10
   140015895:	lea    rcx,[rsp+0x30]
   14001589a:	call   0x140022d40
   14001589f:	lea    r11,[rsp+0x170]
   1400158a7:	mov    rbp,QWORD PTR [r11+0x18]
   1400158ab:	mov    rsi,QWORD PTR [r11+0x20]
   1400158af:	mov    rsp,r11
   1400158b2:	pop    rdi
   1400158b3:	ret    
   1400158b4:	int3   
   1400158b5:	int3   
   1400158b6:	int3   
   1400158b7:	int3   
   1400158b8:	int3   
   1400158b9:	int3   
   1400158ba:	int3   
   1400158bb:	int3   
   1400158bc:	int3   
   1400158bd:	int3   
   1400158be:	int3   
   1400158bf:	int3   
   1400158c0:	rex push rbx
   1400158c2:	sub    rsp,0x20
   1400158c6:	mov    rbx,rcx
   1400158c9:	mov    BYTE PTR [rcx],0x0
   1400158cc:	mov    rcx,QWORD PTR [rcx+0x2c8]
   1400158d3:	test   rcx,rcx
   1400158d6:	je     0x1400158f5
   1400158d8:	call   0x14001ac10
   1400158dd:	mov    rcx,QWORD PTR [rbx+0x2c8]
   1400158e4:	lea    rdx,[rip+0x1ea4d]        # 0x140034338
   1400158eb:	add    rsp,0x20
   1400158ef:	pop    rbx
   1400158f0:	jmp    0x14001ac10
   1400158f5:	add    rsp,0x20
   1400158f9:	pop    rbx
   1400158fa:	ret    
   1400158fb:	int3   
   1400158fc:	int3   
   1400158fd:	int3   
   1400158fe:	int3   
   1400158ff:	int3   
   140015900:	sub    rsp,0x38
   140015904:	mov    r10,rdx
   140015907:	test   r9d,r9d
   14001590a:	jle    0x1400159b0
   140015910:	test   rdx,rdx
   140015913:	je     0x1400159b0
   140015919:	test   r8,r8
   14001591c:	cmovne rdx,r8
   140015920:	test   BYTE PTR [rcx],0x1
   140015923:	je     0x14001598f
   140015925:	movsxd r9,r9d
   140015928:	test   r9,r9
   14001592b:	jle    0x1400159b0
   140015931:	sub    rdx,r10
   140015934:	lea    r11,[rdx+0x7]
   140015938:	nop    DWORD PTR [rax+rax*1+0x0]
   140015940:	mov    rax,QWORD PTR [r10]
   140015943:	lea    r8,[rsp+0x20]
   140015948:	mov    QWORD PTR [rsp+0x20],rax
   14001594d:	xor    edx,edx
   14001594f:	lea    rax,[r11+r10*1]
   140015953:	nop    DWORD PTR [rax+0x0]
   140015957:	nop    WORD PTR [rax+rax*1+0x0]
   140015960:	movzx  ecx,BYTE PTR [rax]
   140015963:	inc    edx
   140015965:	mov    BYTE PTR [r8],cl
   140015968:	lea    r8,[r8+0x1]
   14001596c:	lea    rax,[rax-0x1]
   140015970:	cmp    edx,0x8
   140015973:	jb     0x140015960
   140015975:	movsd  xmm0,QWORD PTR [rsp+0x20]
   14001597b:	movsd  QWORD PTR [r10],xmm0
   140015980:	add    r10,0x8
   140015984:	sub    r9,0x1
   140015988:	jne    0x140015940
   14001598a:	add    rsp,0x38
   14001598e:	ret    
   14001598f:	test   rdx,rdx
   140015992:	je     0x1400159b0
   140015994:	cmp    r10,rdx
   140015997:	je     0x1400159b0
   140015999:	movsxd r8,r9d
   14001599c:	mov    rcx,r10
   14001599f:	lea    r8,[r8*8+0x0]
   1400159a7:	add    rsp,0x38
   1400159ab:	jmp    0x140026f70
   1400159b0:	add    rsp,0x38
   1400159b4:	ret    
   1400159b5:	int3   
   1400159b6:	int3   
   1400159b7:	int3   
   1400159b8:	int3   
   1400159b9:	int3   
   1400159ba:	int3   
   1400159bb:	int3   
   1400159bc:	int3   
   1400159bd:	int3   
   1400159be:	int3   
   1400159bf:	int3   
   1400159c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400159c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400159ca:	push   rdi
   1400159cb:	sub    rsp,0x20
   1400159cf:	mov    edi,DWORD PTR [rdx+0x14]
   1400159d2:	xor    eax,eax
   1400159d4:	mov    rsi,QWORD PTR [rdx]
   1400159d7:	mov    rbx,rcx
   1400159da:	mov    QWORD PTR [rcx+0x10],rax
   1400159de:	mov    BYTE PTR [rcx+0x18],al
   1400159e1:	mov    DWORD PTR [rcx+0x24],eax
   1400159e4:	mov    DWORD PTR [rcx+0x20],0xffffffff
   1400159eb:	call   0x1400209e0
   1400159f0:	test   edi,edi
   1400159f2:	je     0x140015a02
   1400159f4:	mov    r8d,edi
   1400159f7:	mov    rdx,rsi
   1400159fa:	mov    rcx,rbx
   1400159fd:	call   0x140021a40
   140015a02:	mov    rbx,QWORD PTR [rsp+0x30]
   140015a07:	mov    rsi,QWORD PTR [rsp+0x38]
   140015a0c:	add    rsp,0x20
   140015a10:	pop    rdi
   140015a11:	ret    
   140015a12:	int3   
   140015a13:	int3   
   140015a14:	int3   
   140015a15:	int3   
   140015a16:	int3   
   140015a17:	int3   
   140015a18:	int3   
   140015a19:	int3   
   140015a1a:	int3   
   140015a1b:	int3   
   140015a1c:	int3   
   140015a1d:	int3   
   140015a1e:	int3   
   140015a1f:	int3   
   140015a20:	mov    r8,rcx
   140015a23:	cmp    edx,0x4
   140015a26:	jae    0x140015a2b
   140015a28:	xor    eax,eax
   140015a2a:	ret    
   140015a2b:	movzx  eax,BYTE PTR [rcx+0x3]
   140015a2f:	movzx  ecx,BYTE PTR [rcx+0x2]
   140015a33:	and    eax,0x7f
   140015a36:	shl    eax,0x8
   140015a39:	or     eax,ecx
   140015a3b:	movzx  ecx,BYTE PTR [r8+0x1]
   140015a40:	shl    eax,0x8
   140015a43:	or     eax,ecx
   140015a45:	movzx  ecx,BYTE PTR [r8]
   140015a49:	shl    eax,0x8
   140015a4c:	or     eax,ecx
   140015a4e:	ret    
   140015a4f:	int3   
   140015a50:	rex push rdi
   140015a52:	sub    rsp,0x20
   140015a56:	test   BYTE PTR [rcx+0x19],0x1
   140015a5a:	mov    rdi,rcx
   140015a5d:	jne    0x140015ad4
   140015a5f:	mov    edx,0x8
   140015a64:	call   0x140020b70
   140015a69:	test   al,al
   140015a6b:	je     0x140015aec
   140015a6d:	mov    r9d,DWORD PTR [rdi+0x10]
   140015a71:	mov    eax,r9d
   140015a74:	sub    eax,DWORD PTR [rdi+0x24]
   140015a77:	test   BYTE PTR [rdi+0x38],0x1
   140015a7b:	movsxd rcx,eax
   140015a7e:	mov    rax,QWORD PTR [rdi]
   140015a81:	movsd  xmm0,QWORD PTR [rcx+rax*1]
   140015a86:	movsd  QWORD PTR [rsp+0x30],xmm0
   140015a8c:	je     0x140015ac7
   140015a8e:	movsd  QWORD PTR [rsp+0x38],xmm0
   140015a94:	lea    rdx,[rsp+0x38]
   140015a99:	xor    ecx,ecx
   140015a9b:	lea    r8,[rsp+0x37]
   140015aa0:	movzx  eax,BYTE PTR [r8]
   140015aa4:	inc    ecx
   140015aa6:	mov    BYTE PTR [rdx],al
   140015aa8:	lea    rdx,[rdx+0x1]
   140015aac:	lea    r8,[r8-0x1]
   140015ab0:	cmp    ecx,0x8
   140015ab3:	jb     0x140015aa0
   140015ab5:	movsd  xmm0,QWORD PTR [rsp+0x38]
   140015abb:	movsd  QWORD PTR [rsp+0x30],xmm0
   140015ac1:	movsd  xmm0,QWORD PTR [rsp+0x30]
   140015ac7:	lea    eax,[r9+0x8]
   140015acb:	mov    DWORD PTR [rdi+0x10],eax
   140015ace:	add    rsp,0x20
   140015ad2:	pop    rdi
   140015ad3:	ret    
   140015ad4:	lea    r8,[rsp+0x30]
   140015ad9:	mov    DWORD PTR [rsp+0x30],0x80
   140015ae1:	xor    edx,edx
   140015ae3:	call   0x140020b00
   140015ae8:	test   al,al
   140015aea:	jne    0x140015af5
   140015aec:	xorps  xmm0,xmm0
   140015aef:	add    rsp,0x20
   140015af3:	pop    rdi
   140015af4:	ret    
   140015af5:	mov    eax,DWORD PTR [rdi+0x10]
   140015af8:	lea    rdx,[rsp+0x38]
   140015afd:	sub    eax,DWORD PTR [rdi+0x24]
   140015b00:	mov    QWORD PTR [rsp+0x40],rbx
   140015b05:	movsxd rbx,eax
   140015b08:	add    rbx,QWORD PTR [rdi]
   140015b0b:	mov    rcx,rbx
   140015b0e:	mov    QWORD PTR [rsp+0x38],rbx
   140015b13:	call   QWORD PTR [rip+0x1c707]        # 0x140032220
   140015b19:	mov    eax,DWORD PTR [rsp+0x38]
   140015b1d:	sub    eax,ebx
   140015b1f:	mov    rbx,QWORD PTR [rsp+0x40]
   140015b24:	je     0x140015b29
   140015b26:	add    DWORD PTR [rdi+0x10],eax
   140015b29:	add    rsp,0x20
   140015b2d:	pop    rdi
   140015b2e:	ret    
   140015b2f:	int3   
   140015b30:	rex push rdi
   140015b32:	sub    rsp,0x20
   140015b36:	test   BYTE PTR [rcx+0x19],0x1
   140015b3a:	mov    rdi,rcx
   140015b3d:	jne    0x140015b95
   140015b3f:	mov    edx,0x8
   140015b44:	call   0x140020b70
   140015b49:	test   al,al
   140015b4b:	je     0x140015bad
   140015b4d:	mov    eax,DWORD PTR [rdi+0x10]
   140015b50:	lea    rcx,[rdi+0x38]
   140015b54:	sub    eax,DWORD PTR [rdi+0x24]
   140015b57:	test   BYTE PTR [rcx],0x1
   140015b5a:	je     0x140015b81
   140015b5c:	movsxd r8,eax
   140015b5f:	lea    rdx,[rsp+0x30]
   140015b64:	add    r8,QWORD PTR [rdi]
   140015b67:	mov    r9d,0x1
   140015b6d:	call   0x140015900
   140015b72:	mov    rax,QWORD PTR [rsp+0x30]
   140015b77:	add    DWORD PTR [rdi+0x10],0x8
   140015b7b:	add    rsp,0x20
   140015b7f:	pop    rdi
   140015b80:	ret    
   140015b81:	movsxd rcx,eax
   140015b84:	mov    rax,QWORD PTR [rdi]
   140015b87:	mov    rax,QWORD PTR [rcx+rax*1]
   140015b8b:	add    DWORD PTR [rdi+0x10],0x8
   140015b8f:	add    rsp,0x20
   140015b93:	pop    rdi
   140015b94:	ret    
   140015b95:	lea    r8,[rsp+0x30]
   140015b9a:	mov    DWORD PTR [rsp+0x30],0x80
   140015ba2:	xor    edx,edx
   140015ba4:	call   0x140020b00
   140015ba9:	test   al,al
   140015bab:	jne    0x140015bb5
   140015bad:	xor    eax,eax
   140015baf:	add    rsp,0x20
   140015bb3:	pop    rdi
   140015bb4:	ret    
   140015bb5:	mov    eax,DWORD PTR [rdi+0x10]
   140015bb8:	lea    rdx,[rsp+0x38]
   140015bbd:	sub    eax,DWORD PTR [rdi+0x24]
   140015bc0:	mov    r8d,0xa
   140015bc6:	mov    QWORD PTR [rsp+0x40],rbx
   140015bcb:	movsxd rbx,eax
   140015bce:	add    rbx,QWORD PTR [rdi]
   140015bd1:	mov    rcx,rbx
   140015bd4:	mov    QWORD PTR [rsp+0x38],rbx
   140015bd9:	call   QWORD PTR [rip+0x1c681]        # 0x140032260
   140015bdf:	mov    ecx,DWORD PTR [rsp+0x38]
   140015be3:	sub    ecx,ebx
   140015be5:	mov    rbx,QWORD PTR [rsp+0x40]
   140015bea:	je     0x140015bef
   140015bec:	add    DWORD PTR [rdi+0x10],ecx
   140015bef:	add    rsp,0x20
   140015bf3:	pop    rdi
   140015bf4:	ret    
   140015bf5:	int3   
   140015bf6:	int3   
   140015bf7:	int3   
   140015bf8:	int3   
   140015bf9:	int3   
   140015bfa:	int3   
   140015bfb:	int3   
   140015bfc:	int3   
   140015bfd:	int3   
   140015bfe:	int3   
   140015bff:	int3   
   140015c00:	rex push rdi
   140015c02:	sub    rsp,0x20
   140015c06:	test   BYTE PTR [rcx+0x19],0x1
   140015c0a:	mov    rdi,rcx
   140015c0d:	jne    0x140015cbb
   140015c13:	mov    edx,0x4
   140015c18:	call   0x140020b70
   140015c1d:	test   al,al
   140015c1f:	je     0x140015cd3
   140015c25:	mov    r9d,DWORD PTR [rdi+0x10]
   140015c29:	mov    eax,r9d
   140015c2c:	sub    eax,DWORD PTR [rdi+0x24]
   140015c2f:	test   BYTE PTR [rdi+0x38],0x1
   140015c33:	je     0x140015ca5
   140015c35:	movsxd rdx,eax
   140015c38:	lea    r8,[rsp+0x30]
   140015c3d:	add    rdx,QWORD PTR [rdi]
   140015c40:	cmovne r8,rdx
   140015c44:	test   BYTE PTR [rdi+0x38],0x1
   140015c48:	je     0x140015c86
   140015c4a:	mov    eax,DWORD PTR [rsp+0x30]
   140015c4e:	lea    rdx,[rsp+0x30]
   140015c53:	xor    ecx,ecx
   140015c55:	mov    DWORD PTR [rsp+0x30],eax
   140015c59:	add    r8,0x3
   140015c5d:	nop    DWORD PTR [rax]
   140015c60:	movzx  eax,BYTE PTR [r8]
   140015c64:	inc    ecx
   140015c66:	mov    BYTE PTR [rdx],al
   140015c68:	lea    rdx,[rdx+0x1]
   140015c6c:	lea    r8,[r8-0x1]
   140015c70:	cmp    ecx,0x4
   140015c73:	jb     0x140015c60
   140015c75:	mov    eax,DWORD PTR [rsp+0x30]
   140015c79:	lea    ecx,[r9+0x4]
   140015c7d:	mov    DWORD PTR [rdi+0x10],ecx
   140015c80:	add    rsp,0x20
   140015c84:	pop    rdi
   140015c85:	ret    
   140015c86:	test   r8,r8
   140015c89:	je     0x140015c75
   140015c8b:	lea    rax,[rsp+0x30]
   140015c90:	cmp    rax,r8
   140015c93:	je     0x140015c75
   140015c95:	mov    eax,DWORD PTR [r8]
   140015c98:	lea    ecx,[r9+0x4]
   140015c9c:	mov    DWORD PTR [rdi+0x10],ecx
   140015c9f:	add    rsp,0x20
   140015ca3:	pop    rdi
   140015ca4:	ret    
   140015ca5:	movsxd rcx,eax
   140015ca8:	mov    rax,QWORD PTR [rdi]
   140015cab:	mov    eax,DWORD PTR [rcx+rax*1]
   140015cae:	lea    ecx,[r9+0x4]
   140015cb2:	mov    DWORD PTR [rdi+0x10],ecx
   140015cb5:	add    rsp,0x20
   140015cb9:	pop    rdi
   140015cba:	ret    
   140015cbb:	lea    r8,[rsp+0x30]
   140015cc0:	mov    DWORD PTR [rsp+0x30],0x80
   140015cc8:	xor    edx,edx
   140015cca:	call   0x140020b00
   140015ccf:	test   al,al
   140015cd1:	jne    0x140015cdd
   140015cd3:	xor    ecx,ecx
   140015cd5:	mov    eax,ecx
   140015cd7:	add    rsp,0x20
   140015cdb:	pop    rdi
   140015cdc:	ret    
   140015cdd:	mov    eax,DWORD PTR [rdi+0x10]
   140015ce0:	lea    rdx,[rsp+0x38]
   140015ce5:	sub    eax,DWORD PTR [rdi+0x24]
   140015ce8:	mov    r8d,0xa
   140015cee:	mov    QWORD PTR [rsp+0x40],rbx
   140015cf3:	movsxd rbx,eax
   140015cf6:	add    rbx,QWORD PTR [rdi]
   140015cf9:	mov    rcx,rbx
   140015cfc:	mov    QWORD PTR [rsp+0x38],rbx
   140015d01:	call   QWORD PTR [rip+0x1c559]        # 0x140032260
   140015d07:	mov    ecx,DWORD PTR [rsp+0x38]
   140015d0b:	sub    ecx,ebx
   140015d0d:	mov    rbx,QWORD PTR [rsp+0x40]
   140015d12:	je     0x140015d17
   140015d14:	add    DWORD PTR [rdi+0x10],ecx
   140015d17:	add    rsp,0x20
   140015d1b:	pop    rdi
   140015d1c:	ret    
   140015d1d:	int3   
   140015d1e:	int3   
   140015d1f:	int3   
   140015d20:	rex push rbx
   140015d22:	sub    rsp,0x20
   140015d26:	test   BYTE PTR [rcx+0x19],0x1
   140015d2a:	mov    rbx,rcx
   140015d2d:	jne    0x140015d63
   140015d2f:	mov    edx,0x1
   140015d34:	call   0x140020b70
   140015d39:	test   al,al
   140015d3b:	je     0x140015d5b
   140015d3d:	mov    edx,DWORD PTR [rbx+0x10]
   140015d40:	mov    eax,edx
   140015d42:	sub    eax,DWORD PTR [rbx+0x24]
   140015d45:	movsxd rcx,eax
   140015d48:	mov    rax,QWORD PTR [rbx]
   140015d4b:	movzx  eax,BYTE PTR [rcx+rax*1]
   140015d4f:	lea    ecx,[rdx+0x1]
   140015d52:	mov    DWORD PTR [rbx+0x10],ecx
   140015d55:	add    rsp,0x20
   140015d59:	pop    rbx
   140015d5a:	ret    
   140015d5b:	xor    al,al
   140015d5d:	add    rsp,0x20
   140015d61:	pop    rbx
   140015d62:	ret    
   140015d63:	add    rsp,0x20
   140015d67:	pop    rbx
   140015d68:	jmp    0x140015f60
   140015d6d:	int3   
   140015d6e:	int3   
   140015d6f:	int3   
   140015d70:	rex push rdi
   140015d72:	sub    rsp,0x20
   140015d76:	test   BYTE PTR [rcx+0x19],0x1
   140015d7a:	mov    rdi,rcx
   140015d7d:	jne    0x140015dd5
   140015d7f:	mov    edx,0x8
   140015d84:	call   0x140020b70
   140015d89:	test   al,al
   140015d8b:	je     0x140015ded
   140015d8d:	mov    eax,DWORD PTR [rdi+0x10]
   140015d90:	lea    rcx,[rdi+0x38]
   140015d94:	sub    eax,DWORD PTR [rdi+0x24]
   140015d97:	test   BYTE PTR [rcx],0x1
   140015d9a:	je     0x140015dc1
   140015d9c:	movsxd r8,eax
   140015d9f:	lea    rdx,[rsp+0x30]
   140015da4:	add    r8,QWORD PTR [rdi]
   140015da7:	mov    r9d,0x1
   140015dad:	call   0x140015900
   140015db2:	mov    rax,QWORD PTR [rsp+0x30]
   140015db7:	add    DWORD PTR [rdi+0x10],0x8
   140015dbb:	add    rsp,0x20
   140015dbf:	pop    rdi
   140015dc0:	ret    
   140015dc1:	movsxd rcx,eax
   140015dc4:	mov    rax,QWORD PTR [rdi]
   140015dc7:	mov    rax,QWORD PTR [rcx+rax*1]
   140015dcb:	add    DWORD PTR [rdi+0x10],0x8
   140015dcf:	add    rsp,0x20
   140015dd3:	pop    rdi
   140015dd4:	ret    
   140015dd5:	lea    r8,[rsp+0x30]
   140015dda:	mov    DWORD PTR [rsp+0x30],0x80
   140015de2:	xor    edx,edx
   140015de4:	call   0x140020b00
   140015de9:	test   al,al
   140015deb:	jne    0x140015df5
   140015ded:	xor    eax,eax
   140015def:	add    rsp,0x20
   140015df3:	pop    rdi
   140015df4:	ret    
   140015df5:	mov    eax,DWORD PTR [rdi+0x10]
   140015df8:	lea    rdx,[rsp+0x38]
   140015dfd:	sub    eax,DWORD PTR [rdi+0x24]
   140015e00:	mov    r8d,0xa
   140015e06:	mov    QWORD PTR [rsp+0x40],rbx
   140015e0b:	movsxd rbx,eax
   140015e0e:	add    rbx,QWORD PTR [rdi]
   140015e11:	mov    rcx,rbx
   140015e14:	mov    QWORD PTR [rsp+0x38],rbx
   140015e19:	call   QWORD PTR [rip+0x1c3f9]        # 0x140032218
   140015e1f:	mov    ecx,DWORD PTR [rsp+0x38]
   140015e23:	sub    ecx,ebx
   140015e25:	mov    rbx,QWORD PTR [rsp+0x40]
   140015e2a:	je     0x140015e2f
   140015e2c:	add    DWORD PTR [rdi+0x10],ecx
   140015e2f:	add    rsp,0x20
   140015e33:	pop    rdi
   140015e34:	ret    
   140015e35:	int3   
   140015e36:	int3   
   140015e37:	int3   
   140015e38:	int3   
   140015e39:	int3   
   140015e3a:	int3   
   140015e3b:	int3   
   140015e3c:	int3   
   140015e3d:	int3   
   140015e3e:	int3   
   140015e3f:	int3   
   140015e40:	rex push rdi
   140015e42:	sub    rsp,0x20
   140015e46:	test   BYTE PTR [rcx+0x19],0x1
   140015e4a:	mov    rdi,rcx
   140015e4d:	jne    0x140015efb
   140015e53:	mov    edx,0x4
   140015e58:	call   0x140020b70
   140015e5d:	test   al,al
   140015e5f:	je     0x140015f13
   140015e65:	mov    r9d,DWORD PTR [rdi+0x10]
   140015e69:	mov    eax,r9d
   140015e6c:	sub    eax,DWORD PTR [rdi+0x24]
   140015e6f:	test   BYTE PTR [rdi+0x38],0x1
   140015e73:	je     0x140015ee5
   140015e75:	movsxd rdx,eax
   140015e78:	lea    r8,[rsp+0x30]
   140015e7d:	add    rdx,QWORD PTR [rdi]
   140015e80:	cmovne r8,rdx
   140015e84:	test   BYTE PTR [rdi+0x38],0x1
   140015e88:	je     0x140015ec6
   140015e8a:	mov    eax,DWORD PTR [rsp+0x30]
   140015e8e:	lea    rdx,[rsp+0x30]
   140015e93:	xor    ecx,ecx
   140015e95:	mov    DWORD PTR [rsp+0x30],eax
   140015e99:	add    r8,0x3
   140015e9d:	nop    DWORD PTR [rax]
   140015ea0:	movzx  eax,BYTE PTR [r8]
   140015ea4:	inc    ecx
   140015ea6:	mov    BYTE PTR [rdx],al
   140015ea8:	lea    rdx,[rdx+0x1]
   140015eac:	lea    r8,[r8-0x1]
   140015eb0:	cmp    ecx,0x4
   140015eb3:	jb     0x140015ea0
   140015eb5:	mov    eax,DWORD PTR [rsp+0x30]
   140015eb9:	lea    ecx,[r9+0x4]
   140015ebd:	mov    DWORD PTR [rdi+0x10],ecx
   140015ec0:	add    rsp,0x20
   140015ec4:	pop    rdi
   140015ec5:	ret    
   140015ec6:	test   r8,r8
   140015ec9:	je     0x140015eb5
   140015ecb:	lea    rax,[rsp+0x30]
   140015ed0:	cmp    rax,r8
   140015ed3:	je     0x140015eb5
   140015ed5:	mov    eax,DWORD PTR [r8]
   140015ed8:	lea    ecx,[r9+0x4]
   140015edc:	mov    DWORD PTR [rdi+0x10],ecx
   140015edf:	add    rsp,0x20
   140015ee3:	pop    rdi
   140015ee4:	ret    
   140015ee5:	movsxd rcx,eax
   140015ee8:	mov    rax,QWORD PTR [rdi]
   140015eeb:	mov    eax,DWORD PTR [rcx+rax*1]
   140015eee:	lea    ecx,[r9+0x4]
   140015ef2:	mov    DWORD PTR [rdi+0x10],ecx
   140015ef5:	add    rsp,0x20
   140015ef9:	pop    rdi
   140015efa:	ret    
   140015efb:	lea    r8,[rsp+0x30]
   140015f00:	mov    DWORD PTR [rsp+0x30],0x80
   140015f08:	xor    edx,edx
   140015f0a:	call   0x140020b00
   140015f0f:	test   al,al
   140015f11:	jne    0x140015f1d
   140015f13:	xor    ecx,ecx
   140015f15:	mov    eax,ecx
   140015f17:	add    rsp,0x20
   140015f1b:	pop    rdi
   140015f1c:	ret    
   140015f1d:	mov    eax,DWORD PTR [rdi+0x10]
   140015f20:	lea    rdx,[rsp+0x38]
   140015f25:	sub    eax,DWORD PTR [rdi+0x24]
   140015f28:	mov    r8d,0xa
   140015f2e:	mov    QWORD PTR [rsp+0x40],rbx
   140015f33:	movsxd rbx,eax
   140015f36:	add    rbx,QWORD PTR [rdi]
   140015f39:	mov    rcx,rbx
   140015f3c:	mov    QWORD PTR [rsp+0x38],rbx
   140015f41:	call   QWORD PTR [rip+0x1c2d1]        # 0x140032218
   140015f47:	mov    ecx,DWORD PTR [rsp+0x38]
   140015f4b:	sub    ecx,ebx
   140015f4d:	mov    rbx,QWORD PTR [rsp+0x40]
   140015f52:	je     0x140015f57
   140015f54:	add    DWORD PTR [rdi+0x10],ecx
   140015f57:	add    rsp,0x20
   140015f5b:	pop    rdi
   140015f5c:	ret    
   140015f5d:	int3   
   140015f5e:	int3   
   140015f5f:	int3   
   140015f60:	rex push rdi
   140015f62:	sub    rsp,0x20
   140015f66:	test   BYTE PTR [rcx+0x19],0x1
   140015f6a:	mov    rdi,rcx
   140015f6d:	jne    0x14001602e
   140015f73:	mov    edx,0x2
   140015f78:	call   0x140020b70
   140015f7d:	test   al,al
   140015f7f:	je     0x140016046
   140015f85:	mov    r9d,DWORD PTR [rdi+0x10]
   140015f89:	mov    eax,r9d
   140015f8c:	sub    eax,DWORD PTR [rdi+0x24]
   140015f8f:	test   BYTE PTR [rdi+0x38],0x1
   140015f93:	je     0x140016017
   140015f99:	movsxd rdx,eax
   140015f9c:	lea    r8,[rsp+0x30]
   140015fa1:	mov    rax,QWORD PTR [rdi]
   140015fa4:	add    rdx,rax
   140015fa7:	cmovne r8,rdx
   140015fab:	test   BYTE PTR [rdi+0x38],0x1
   140015faf:	je     0x140015ff7
   140015fb1:	movzx  eax,WORD PTR [rsp+0x30]
   140015fb6:	lea    rdx,[rsp+0x30]
   140015fbb:	xor    ecx,ecx
   140015fbd:	mov    WORD PTR [rsp+0x30],ax
   140015fc2:	inc    r8
   140015fc5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140015fd0:	movzx  eax,BYTE PTR [r8]
   140015fd4:	inc    ecx
   140015fd6:	mov    BYTE PTR [rdx],al
   140015fd8:	lea    rdx,[rdx+0x1]
   140015fdc:	lea    r8,[r8-0x1]
   140015fe0:	cmp    ecx,0x2
   140015fe3:	jb     0x140015fd0
   140015fe5:	movzx  eax,WORD PTR [rsp+0x30]
   140015fea:	lea    ecx,[r9+0x2]
   140015fee:	mov    DWORD PTR [rdi+0x10],ecx
   140015ff1:	add    rsp,0x20
   140015ff5:	pop    rdi
   140015ff6:	ret    
   140015ff7:	test   r8,r8
   140015ffa:	je     0x140015fe5
   140015ffc:	lea    rax,[rsp+0x30]
   140016001:	cmp    rax,r8
   140016004:	je     0x140015fe5
   140016006:	movzx  eax,WORD PTR [r8]
   14001600a:	lea    ecx,[r9+0x2]
   14001600e:	mov    DWORD PTR [rdi+0x10],ecx
   140016011:	add    rsp,0x20
   140016015:	pop    rdi
   140016016:	ret    
   140016017:	movsxd rcx,eax
   14001601a:	mov    rax,QWORD PTR [rdi]
   14001601d:	movzx  eax,WORD PTR [rcx+rax*1]
   140016021:	lea    ecx,[r9+0x2]
   140016025:	mov    DWORD PTR [rdi+0x10],ecx
   140016028:	add    rsp,0x20
   14001602c:	pop    rdi
   14001602d:	ret    
   14001602e:	lea    r8,[rsp+0x30]
   140016033:	mov    DWORD PTR [rsp+0x30],0x80
   14001603b:	xor    edx,edx
   14001603d:	call   0x140020b00
   140016042:	test   al,al
   140016044:	jne    0x140016051
   140016046:	xor    ecx,ecx
   140016048:	movzx  eax,cx
   14001604b:	add    rsp,0x20
   14001604f:	pop    rdi
   140016050:	ret    
   140016051:	mov    eax,DWORD PTR [rdi+0x10]
   140016054:	lea    rdx,[rsp+0x38]
   140016059:	sub    eax,DWORD PTR [rdi+0x24]
   14001605c:	mov    r8d,0xa
   140016062:	mov    QWORD PTR [rsp+0x40],rbx
   140016067:	movsxd rbx,eax
   14001606a:	add    rbx,QWORD PTR [rdi]
   14001606d:	mov    rcx,rbx
   140016070:	mov    QWORD PTR [rsp+0x38],rbx
   140016075:	call   QWORD PTR [rip+0x1c19d]        # 0x140032218
   14001607b:	mov    ecx,DWORD PTR [rsp+0x38]
   14001607f:	sub    ecx,ebx
   140016081:	mov    rbx,QWORD PTR [rsp+0x40]
   140016086:	je     0x14001608b
   140016088:	add    DWORD PTR [rdi+0x10],ecx
   14001608b:	add    rsp,0x20
   14001608f:	pop    rdi
   140016090:	ret    
   140016091:	int3   
   140016092:	int3   
   140016093:	int3   
   140016094:	int3   
   140016095:	int3   
   140016096:	int3   
   140016097:	int3   
   140016098:	int3   
   140016099:	int3   
   14001609a:	int3   
   14001609b:	int3   
   14001609c:	int3   
   14001609d:	int3   
   14001609e:	int3   
   14001609f:	int3   
   1400160a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400160a5:	push   rbp
   1400160a6:	push   rbx
   1400160a7:	push   rsi
   1400160a8:	push   rdi
   1400160a9:	push   r12
   1400160ab:	lea    rbp,[rsp-0x3d0]
   1400160b3:	sub    rsp,0x4d0
   1400160ba:	mov    DWORD PTR [rsp+0x40],0x0
   1400160c2:	mov    rbx,r8
   1400160c5:	mov    QWORD PTR [rsp+0x28],rbx
   1400160ca:	xorps  xmm0,xmm0
   1400160cd:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   1400160d3:	mov    BYTE PTR [rsp+0x44],0x0
   1400160d8:	mov    rdi,r9
   1400160db:	mov    QWORD PTR [rsp+0x20],rdx
   1400160e0:	mov    rsi,rdx
   1400160e3:	mov    eax,DWORD PTR [r8+0x20]
   1400160e7:	mov    r12,rcx
   1400160ea:	sub    eax,DWORD PTR [r8+0x10]
   1400160ee:	cmp    eax,0x4
   1400160f1:	jae    0x140016117
   1400160f3:	test   rdx,rdx
   1400160f6:	je     0x140016107
   1400160f8:	lea    rdx,[rip+0x20b89]        # 0x140036c88
   1400160ff:	mov    rcx,rsi
   140016102:	call   0x14001aae0
   140016107:	xor    al,al
   140016109:	add    rsp,0x4d0
   140016110:	pop    r12
   140016112:	pop    rdi
   140016113:	pop    rsi
   140016114:	pop    rbx
   140016115:	pop    rbp
   140016116:	ret    
   140016117:	mov    rcx,rbx
   14001611a:	call   0x140015e40
   14001611f:	cmp    eax,0x3564b56
   140016124:	je     0x140016145
   140016126:	lea    rdx,[rip+0x20b9b]        # 0x140036cc8
   14001612d:	mov    rcx,rsi
   140016130:	call   0x14001aae0
   140016135:	xor    al,al
   140016137:	add    rsp,0x4d0
   14001613e:	pop    r12
   140016140:	pop    rdi
   140016141:	pop    rsi
   140016142:	pop    rbx
   140016143:	pop    rbp
   140016144:	ret    
   140016145:	movups xmm0,XMMWORD PTR [rip+0x1c644]        # 0x140032790
   14001614c:	mov    rax,QWORD PTR [rsp+0x28]
   140016151:	movups XMMWORD PTR [rsp+0x58],xmm0
   140016156:	movups XMMWORD PTR [rsp+0x48],xmm0
   14001615b:	mov    ecx,DWORD PTR [rax+0x20]
   14001615e:	sub    ecx,DWORD PTR [rax+0x10]
   140016161:	cmp    ecx,0x10
   140016164:	jae    0x14001618c
   140016166:	mov    rcx,QWORD PTR [rsp+0x20]
   14001616b:	test   rcx,rcx
   14001616e:	je     0x140016107
   140016170:	lea    rdx,[rip+0x20b11]        # 0x140036c88
   140016177:	call   0x14001aae0
   14001617c:	xor    al,al
   14001617e:	add    rsp,0x4d0
   140016185:	pop    r12
   140016187:	pop    rdi
   140016188:	pop    rsi
   140016189:	pop    rbx
   14001618a:	pop    rbp
   14001618b:	ret    
   14001618c:	mov    r8d,0x10
   140016192:	lea    rdx,[rsp+0x58]
   140016197:	mov    rcx,rbx
   14001619a:	call   0x1400210e0
   14001619f:	mov    rax,QWORD PTR [rsp+0x28]
   1400161a4:	mov    ecx,DWORD PTR [rax+0x20]
   1400161a7:	sub    ecx,DWORD PTR [rax+0x10]
   1400161aa:	cmp    ecx,0x10
   1400161ad:	jb     0x140016166
   1400161af:	mov    r8d,0x10
   1400161b5:	lea    rdx,[rsp+0x48]
   1400161ba:	mov    rcx,rbx
   1400161bd:	call   0x1400210e0
   1400161c2:	mov    r8,QWORD PTR [rip+0x2fe57]        # 0x140046020
   1400161c9:	mov    rdx,QWORD PTR [rsp+0x58]
   1400161ce:	mov    rax,QWORD PTR [rip+0x2fe5b]        # 0x140046030
   1400161d5:	mov    rcx,QWORD PTR [rsp+0x60]
   1400161da:	cmp    rdx,QWORD PTR [r8]
   1400161dd:	jne    0x1400161e5
   1400161df:	cmp    rcx,QWORD PTR [r8+0x8]
   1400161e3:	je     0x1400161f8
   1400161e5:	cmp    rdx,QWORD PTR [rax]
   1400161e8:	jne    0x1400164bd
   1400161ee:	cmp    rcx,QWORD PTR [rax+0x8]
   1400161f2:	jne    0x1400164bd
   1400161f8:	cmp    rdx,QWORD PTR [rax]
   1400161fb:	jne    0x140016477
   140016201:	cmp    rcx,QWORD PTR [rax+0x8]
   140016205:	jne    0x140016477
   14001620b:	mov    eax,DWORD PTR [rbx+0x10]
   14001620e:	mov    QWORD PTR [rsp+0x508],r13
   140016216:	mov    r13d,DWORD PTR [rbx+0x20]
   14001621a:	sub    r13d,eax
   14001621d:	mov    QWORD PTR [rsp+0x510],r14
   140016225:	sub    eax,DWORD PTR [rbx+0x24]
   140016228:	mov    edx,r13d
   14001622b:	movsxd rcx,eax
   14001622e:	add    rcx,QWORD PTR [rbx]
   140016231:	call   0x140015a20
   140016236:	mov    r14d,eax
   140016239:	test   eax,eax
   14001623b:	jne    0x14001626c
   14001623d:	lea    rdx,[rip+0x20ad4]        # 0x140036d18
   140016244:	mov    rcx,rsi
   140016247:	call   0x14001aae0
   14001624c:	xor    al,al
   14001624e:	mov    r13,QWORD PTR [rsp+0x508]
   140016256:	mov    r14,QWORD PTR [rsp+0x510]
   14001625e:	add    rsp,0x4d0
   140016265:	pop    r12
   140016267:	pop    rdi
   140016268:	pop    rsi
   140016269:	pop    rbx
   14001626a:	pop    rbp
   14001626b:	ret    
   14001626c:	test   rdi,rdi
   14001626f:	je     0x1400162e8
   140016271:	mov    edx,DWORD PTR [rdi+0x14]
   140016274:	mov    rcx,rdi
   140016277:	add    edx,r14d
   14001627a:	call   0x140020fc0
   14001627f:	mov    eax,DWORD PTR [rdi+0x14]
   140016282:	mov    r9d,r14d
   140016285:	sub    eax,DWORD PTR [rdi+0x24]
   140016288:	mov    edx,r13d
   14001628b:	movsxd r8,eax
   14001628e:	mov    eax,DWORD PTR [rbx+0x10]
   140016291:	sub    eax,DWORD PTR [rbx+0x24]
   140016294:	add    r8,QWORD PTR [rdi]
   140016297:	movsxd rcx,eax
   14001629a:	add    rcx,QWORD PTR [rbx]
   14001629d:	call   0x1400243f0
   1400162a2:	cmp    eax,r14d
   1400162a5:	je     0x1400162b0
   1400162a7:	lea    rdx,[rip+0x20a92]        # 0x140036d40
   1400162ae:	jmp    0x140016244
   1400162b0:	mov    r8d,r14d
   1400162b3:	mov    edx,0x1
   1400162b8:	mov    rcx,rdi
   1400162bb:	call   0x140021f40
   1400162c0:	mov    r9,QWORD PTR [rbp+0x420]
   1400162c7:	lea    r8,[rsp+0x48]
   1400162cc:	mov    rdx,r12
   1400162cf:	mov    QWORD PTR [rsp+0x28],rdi
   1400162d4:	lea    rcx,[rsp+0x20]
   1400162d9:	mov    BYTE PTR [rsp+0x44],0x1
   1400162de:	call   0x1400164e0
   1400162e3:	jmp    0x14001624e
   1400162e8:	mov    edx,0x400
   1400162ed:	mov    QWORD PTR [rsp+0x518],r15
   1400162f5:	lea    rcx,[rbp-0x48]
   1400162f9:	mov    DWORD PTR [rbp-0x50],0x0
   140016300:	mov    QWORD PTR [rbp-0x48],0x0
   140016308:	mov    DWORD PTR [rbp-0x40],0x400
   14001630f:	mov    DWORD PTR [rbp-0x3c],0x80000000
   140016316:	call   0x14000da80
   14001631b:	movsxd r15,DWORD PTR [rbp-0x50]
   14001631f:	lea    r10,[rbp-0x38]
   140016323:	mov    QWORD PTR [rbp-0x48],r10
   140016327:	cmp    r15d,r14d
   14001632a:	jge    0x140016383
   14001632c:	mov    edi,r14d
   14001632f:	sub    edi,r15d
   140016332:	je     0x140016383
   140016334:	mov    eax,DWORD PTR [rbp-0x40]
   140016337:	lea    r12d,[r15+rdi*1]
   14001633b:	cmp    r12d,eax
   14001633e:	jle    0x140016352
   140016340:	mov    edx,r12d
   140016343:	lea    rcx,[rbp-0x48]
   140016347:	sub    edx,eax
   140016349:	call   0x14000f0d0
   14001634e:	mov    r10,QWORD PTR [rbp-0x48]
   140016352:	mov    eax,r12d
   140016355:	mov    DWORD PTR [rbp-0x50],r12d
   140016359:	sub    eax,r15d
   14001635c:	sub    eax,edi
   14001635e:	test   eax,eax
   140016360:	jle    0x14001637c
   140016362:	test   edi,edi
   140016364:	jle    0x14001637c
   140016366:	movsxd rcx,r12d
   140016369:	lea    rdx,[r10+r15*1]
   14001636d:	add    rcx,r10
   140016370:	movsxd r8,eax
   140016373:	call   0x140026f70
   140016378:	mov    r10,QWORD PTR [rbp-0x48]
   14001637c:	mov    r12,QWORD PTR [rbp+0x400]
   140016383:	mov    eax,DWORD PTR [rbx+0x10]
   140016386:	mov    r9d,r14d
   140016389:	sub    eax,DWORD PTR [rbx+0x24]
   14001638c:	mov    r8,r10
   14001638f:	movsxd rcx,eax
   140016392:	mov    edx,r13d
   140016395:	add    rcx,QWORD PTR [rbx]
   140016398:	call   0x1400243f0
   14001639d:	mov    r15,QWORD PTR [rsp+0x518]
   1400163a5:	cmp    eax,r14d
   1400163a8:	je     0x1400163bd
   1400163aa:	lea    rdx,[rip+0x2098f]        # 0x140036d40
   1400163b1:	mov    rcx,rsi
   1400163b4:	call   0x14001aae0
   1400163b9:	xor    bl,bl
   1400163bb:	jmp    0x140016430
   1400163bd:	mov    rdx,QWORD PTR [rbp-0x48]
   1400163c1:	lea    rcx,[rsp+0x70]
   1400163c6:	mov    r9d,0x8
   1400163cc:	mov    r8d,eax
   1400163cf:	call   0x140020940
   1400163d4:	mov    r9,QWORD PTR [rbp+0x420]
   1400163db:	lea    rax,[rsp+0x70]
   1400163e0:	lea    r8,[rsp+0x48]
   1400163e5:	mov    QWORD PTR [rsp+0x28],rax
   1400163ea:	mov    rdx,r12
   1400163ed:	lea    rcx,[rsp+0x20]
   1400163f2:	call   0x1400164e0
   1400163f7:	test   DWORD PTR [rsp+0x7c],0xc0000000
   1400163ff:	movzx  ebx,al
   140016402:	jne    0x140016430
   140016404:	mov    rdx,QWORD PTR [rsp+0x70]
   140016409:	test   rdx,rdx
   14001640c:	je     0x140016428
   14001640e:	mov    rcx,QWORD PTR [rip+0x1bf7b]        # 0x140032390
   140016415:	mov    rcx,QWORD PTR [rcx]
   140016418:	mov    r9,QWORD PTR [rcx]
   14001641b:	call   QWORD PTR [r9+0x28]
   14001641f:	mov    QWORD PTR [rsp+0x70],0x0
   140016428:	mov    DWORD PTR [rsp+0x78],0x0
   140016430:	xor    r9d,r9d
   140016433:	mov    DWORD PTR [rbp-0x50],0x0
   14001643a:	mov    r8d,0x400
   140016440:	lea    rdx,[rbp-0x38]
   140016444:	lea    rcx,[rbp-0x48]
   140016448:	call   0x140010610
   14001644d:	test   DWORD PTR [rbp-0x3c],0xc0000000
   140016454:	jne    0x14001646f
   140016456:	mov    rdx,QWORD PTR [rbp-0x48]
   14001645a:	test   rdx,rdx
   14001645d:	je     0x14001646f
   14001645f:	mov    rax,QWORD PTR [rip+0x1bf2a]        # 0x140032390
   140016466:	mov    rcx,QWORD PTR [rax]
   140016469:	mov    rax,QWORD PTR [rcx]
   14001646c:	call   QWORD PTR [rax+0x28]
   14001646f:	movzx  eax,bl
   140016472:	jmp    0x14001624e
   140016477:	test   rdi,rdi
   14001647a:	je     0x140016496
   14001647c:	cmp    rdi,rbx
   14001647f:	je     0x140016491
   140016481:	mov    rdx,rbx
   140016484:	mov    rcx,rdi
   140016487:	call   0x1400159c0
   14001648c:	mov    QWORD PTR [rsp+0x28],rdi
   140016491:	mov    BYTE PTR [rsp+0x44],0x1
   140016496:	mov    r9,QWORD PTR [rbp+0x420]
   14001649d:	lea    r8,[rsp+0x48]
   1400164a2:	mov    rdx,r12
   1400164a5:	lea    rcx,[rsp+0x20]
   1400164aa:	call   0x1400164e0
   1400164af:	add    rsp,0x4d0
   1400164b6:	pop    r12
   1400164b8:	pop    rdi
   1400164b9:	pop    rsi
   1400164ba:	pop    rbx
   1400164bb:	pop    rbp
   1400164bc:	ret    
   1400164bd:	lea    rdx,[rip+0x2082c]        # 0x140036cf0
   1400164c4:	mov    rcx,rsi
   1400164c7:	call   0x14001aae0
   1400164cc:	xor    al,al
   1400164ce:	add    rsp,0x4d0
   1400164d5:	pop    r12
   1400164d7:	pop    rdi
   1400164d8:	pop    rsi
   1400164d9:	pop    rbx
   1400164da:	pop    rbp
   1400164db:	ret    
   1400164dc:	int3   
   1400164dd:	int3   
   1400164de:	int3   
   1400164df:	int3   
   1400164e0:	mov    rax,rsp
   1400164e3:	push   rbp
   1400164e4:	push   rbx
   1400164e5:	lea    rbp,[rax-0xb98]
   1400164ec:	sub    rsp,0xc88
   1400164f3:	mov    QWORD PTR [rax+0x8],rsi
   1400164f7:	mov    rbx,rcx
   1400164fa:	mov    rcx,QWORD PTR [rcx+0x8]
   1400164fe:	mov    QWORD PTR [rax+0x10],rdi
   140016502:	mov    QWORD PTR [rax+0x18],r12
   140016506:	mov    r12,r9
   140016509:	mov    QWORD PTR [rax-0x18],r13
   14001650d:	mov    r13,r8
   140016510:	mov    QWORD PTR [rax-0x28],r15
   140016514:	mov    r15,rdx
   140016517:	call   0x140015c00
   14001651c:	xor    esi,esi
   14001651e:	mov    edi,eax
   140016520:	mov    edx,0x100
   140016525:	mov    DWORD PTR [rsp+0x30],esi
   140016529:	lea    rcx,[rsp+0x38]
   14001652e:	mov    QWORD PTR [rsp+0x38],rsi
   140016533:	mov    DWORD PTR [rsp+0x40],0x100
   14001653b:	mov    DWORD PTR [rsp+0x44],0x80000000
   140016543:	call   0x14000dc10
   140016548:	lea    rax,[rsp+0x38]
   14001654d:	test   al,0x3
   14001654f:	je     0x14001655c
   140016551:	call   QWORD PTR [rip+0x1c059]        # 0x1400325b0
   140016557:	test   eax,eax
   140016559:	je     0x14001655c
   14001655b:	int3   
   14001655c:	lea    rax,[rsp+0x48]
   140016561:	mov    DWORD PTR [rbp+0x350],esi
   140016567:	mov    edx,0x100
   14001656c:	mov    QWORD PTR [rsp+0x38],rax
   140016571:	lea    rcx,[rbp+0x358]
   140016578:	mov    QWORD PTR [rbp+0x358],rsi
   14001657f:	mov    DWORD PTR [rbp+0x360],0x100
   140016589:	mov    DWORD PTR [rbp+0x364],0x80000000
   140016593:	call   0x14000db40
   140016598:	lea    rax,[rbp+0x358]
   14001659f:	test   al,0x7
   1400165a1:	je     0x1400165ae
   1400165a3:	call   QWORD PTR [rip+0x1c007]        # 0x1400325b0
   1400165a9:	test   eax,eax
   1400165ab:	je     0x1400165ae
   1400165ad:	int3   
   1400165ae:	lea    rax,[rbp+0x368]
   1400165b5:	mov    edx,edi
   1400165b7:	lea    rcx,[rbp+0x358]
   1400165be:	mov    QWORD PTR [rbp+0x358],rax
   1400165c5:	call   0x14000db40
   1400165ca:	mov    edx,edi
   1400165cc:	lea    rcx,[rsp+0x38]
   1400165d1:	call   0x14000dc10
   1400165d6:	test   edi,edi
   1400165d8:	jle    0x1400166a9
   1400165de:	mov    QWORD PTR [rsp+0xc78],r14
   1400165e6:	mov    r14,rdi
   1400165e9:	nop    DWORD PTR [rax+0x0]
   1400165f0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400165f4:	mov    eax,DWORD PTR [rcx+0x10]
   1400165f7:	sub    eax,DWORD PTR [rcx+0x24]
   1400165fa:	movsxd rdi,eax
   1400165fd:	movsxd rax,DWORD PTR [rbp+0x350]
   140016604:	add    rdi,QWORD PTR [rcx]
   140016607:	mov    rsi,rax
   14001660a:	cmp    eax,DWORD PTR [rbp+0x360]
   140016610:	jne    0x140016629
   140016612:	mov    edx,0x1
   140016617:	lea    rcx,[rbp+0x358]
   14001661e:	call   0x140013420
   140016623:	mov    eax,DWORD PTR [rbp+0x350]
   140016629:	inc    eax
   14001662b:	mov    DWORD PTR [rbp+0x350],eax
   140016631:	mov    rax,QWORD PTR [rbp+0x358]
   140016638:	lea    rdx,[rax+rsi*8]
   14001663c:	test   rdx,rdx
   14001663f:	je     0x140016644
   140016641:	mov    QWORD PTR [rdx],rdi
   140016644:	movsxd rax,DWORD PTR [rsp+0x30]
   140016649:	mov    rdi,rax
   14001664c:	cmp    eax,DWORD PTR [rsp+0x40]
   140016650:	jne    0x140016665
   140016652:	mov    edx,0x1
   140016657:	lea    rcx,[rsp+0x38]
   14001665c:	call   0x1400031e0
   140016661:	mov    eax,DWORD PTR [rsp+0x30]
   140016665:	inc    eax
   140016667:	xor    esi,esi
   140016669:	mov    DWORD PTR [rsp+0x30],eax
   14001666d:	mov    rax,QWORD PTR [rsp+0x38]
   140016672:	lea    rdx,[rax+rdi*4]
   140016676:	test   rdx,rdx
   140016679:	je     0x14001667d
   14001667b:	mov    DWORD PTR [rdx],esi
   14001667d:	mov    rcx,QWORD PTR [rbx+0x8]
   140016681:	call   0x140021780
   140016686:	mov    rcx,QWORD PTR [rbx+0x8]
   14001668a:	mov    r8d,eax
   14001668d:	mov    edx,0x1
   140016692:	call   0x140021ee0
   140016697:	sub    r14,0x1
   14001669b:	jne    0x1400165f0
   1400166a1:	mov    r14,QWORD PTR [rsp+0xc78]
   1400166a9:	mov    rax,QWORD PTR [rsp+0x38]
   1400166ae:	mov    rdx,r15
   1400166b1:	mov    QWORD PTR [rbx+0x18],rax
   1400166b5:	mov    rcx,rbx
   1400166b8:	mov    rax,QWORD PTR [rbp+0x358]
   1400166bf:	mov    QWORD PTR [rbx+0x10],rax
   1400166c3:	mov    eax,DWORD PTR [rbp+0x350]
   1400166c9:	mov    DWORD PTR [rbx+0x20],eax
   1400166cc:	call   0x1400168a0
   1400166d1:	mov    rdi,QWORD PTR [rsp+0xca8]
   1400166d9:	test   al,al
   1400166db:	je     0x140016704
   1400166dd:	mov    rcx,QWORD PTR [rbx+0x8]
   1400166e1:	mov    eax,DWORD PTR [rcx+0x20]
   1400166e4:	sub    eax,DWORD PTR [rcx+0x10]
   1400166e7:	cmp    eax,0x4
   1400166ea:	jae    0x14001684c
   1400166f0:	mov    rcx,QWORD PTR [rbx]
   1400166f3:	test   rcx,rcx
   1400166f6:	je     0x140016704
   1400166f8:	lea    rdx,[rip+0x20589]        # 0x140036c88
   1400166ff:	call   0x14001aae0
   140016704:	xor    bl,bl
   140016706:	cmp    DWORD PTR [rbp+0x360],0x0
   14001670d:	mov    r15,QWORD PTR [rsp+0xc70]
   140016715:	mov    r13,QWORD PTR [rsp+0xc80]
   14001671d:	mov    r12,QWORD PTR [rsp+0xcb0]
   140016725:	mov    rdx,QWORD PTR [rbp+0x358]
   14001672c:	mov    DWORD PTR [rbp+0x350],esi
   140016732:	jl     0x14001678e
   140016734:	lea    rax,[rbp+0x368]
   14001673b:	cmp    rdx,rax
   14001673e:	je     0x14001678e
   140016740:	test   rdx,rdx
   140016743:	je     0x140016761
   140016745:	test   DWORD PTR [rbp+0x364],0xc0000000
   14001674f:	jne    0x140016761
   140016751:	mov    rax,QWORD PTR [rip+0x1bc38]        # 0x140032390
   140016758:	mov    rcx,QWORD PTR [rax]
   14001675b:	mov    rax,QWORD PTR [rcx]
   14001675e:	call   QWORD PTR [rax+0x28]
   140016761:	mov    eax,DWORD PTR [rbp+0x364]
   140016767:	lea    rdx,[rbp+0x368]
   14001676e:	and    eax,0x3fffffff
   140016773:	mov    QWORD PTR [rbp+0x358],rdx
   14001677a:	bts    eax,0x1f
   14001677e:	mov    DWORD PTR [rbp+0x360],0x100
   140016788:	mov    DWORD PTR [rbp+0x364],eax
   14001678e:	test   DWORD PTR [rbp+0x364],0xc0000000
   140016798:	jne    0x1400167bc
   14001679a:	test   rdx,rdx
   14001679d:	je     0x1400167b6
   14001679f:	mov    rax,QWORD PTR [rip+0x1bbea]        # 0x140032390
   1400167a6:	mov    rcx,QWORD PTR [rax]
   1400167a9:	mov    rax,QWORD PTR [rcx]
   1400167ac:	call   QWORD PTR [rax+0x28]
   1400167af:	mov    QWORD PTR [rbp+0x358],rsi
   1400167b6:	mov    DWORD PTR [rbp+0x360],esi
   1400167bc:	cmp    DWORD PTR [rsp+0x40],0x0
   1400167c1:	mov    rdx,QWORD PTR [rsp+0x38]
   1400167c6:	mov    DWORD PTR [rsp+0x30],esi
   1400167ca:	mov    rsi,QWORD PTR [rsp+0xca0]
   1400167d2:	jl     0x140016820
   1400167d4:	lea    rax,[rsp+0x48]
   1400167d9:	cmp    rdx,rax
   1400167dc:	je     0x140016820
   1400167de:	test   rdx,rdx
   1400167e1:	je     0x1400167fd
   1400167e3:	test   DWORD PTR [rsp+0x44],0xc0000000
   1400167eb:	jne    0x1400167fd
   1400167ed:	mov    rax,QWORD PTR [rip+0x1bb9c]        # 0x140032390
   1400167f4:	mov    rcx,QWORD PTR [rax]
   1400167f7:	mov    rax,QWORD PTR [rcx]
   1400167fa:	call   QWORD PTR [rax+0x28]
   1400167fd:	mov    eax,DWORD PTR [rsp+0x44]
   140016801:	lea    rdx,[rsp+0x48]
   140016806:	and    eax,0x3fffffff
   14001680b:	mov    QWORD PTR [rsp+0x38],rdx
   140016810:	bts    eax,0x1f
   140016814:	mov    DWORD PTR [rsp+0x40],0x100
   14001681c:	mov    DWORD PTR [rsp+0x44],eax
   140016820:	test   DWORD PTR [rsp+0x44],0xc0000000
   140016828:	jne    0x14001683f
   14001682a:	test   rdx,rdx
   14001682d:	je     0x14001683f
   14001682f:	mov    rax,QWORD PTR [rip+0x1bb5a]        # 0x140032390
   140016836:	mov    rcx,QWORD PTR [rax]
   140016839:	mov    rax,QWORD PTR [rcx]
   14001683c:	call   QWORD PTR [rax+0x28]
   14001683f:	movzx  eax,bl
   140016842:	add    rsp,0xc88
   140016849:	pop    rbx
   14001684a:	pop    rbp
   14001684b:	ret    
   14001684c:	call   0x140015e40
   140016851:	cmp    eax,0xffffffff
   140016854:	je     0x14001686e
   140016856:	mov    rcx,QWORD PTR [rbx]
   140016859:	test   rcx,rcx
   14001685c:	je     0x140016704
   140016862:	lea    rdx,[rip+0x2044f]        # 0x140036cb8
   140016869:	jmp    0x1400166ff
   14001686e:	mov    r9,QWORD PTR [rbx]
   140016871:	lea    rdx,[rsp+0x20]
   140016876:	mov    r8,r12
   140016879:	mov    QWORD PTR [rsp+0x20],rsi
   14001687e:	mov    rcx,r15
   140016881:	mov    QWORD PTR [rsp+0x28],r13
   140016886:	call   0x140018480
   14001688b:	movzx  ebx,al
   14001688e:	jmp    0x140016706
   140016893:	int3   
   140016894:	int3   
   140016895:	int3   
   140016896:	int3   
   140016897:	int3   
   140016898:	int3   
   140016899:	int3   
   14001689a:	int3   
   14001689b:	int3   
   14001689c:	int3   
   14001689d:	int3   
   14001689e:	int3   
   14001689f:	int3   
   1400168a0:	rex push rbx
   1400168a2:	push   rbp
   1400168a3:	sub    rsp,0x38
   1400168a7:	mov    rbp,rdx
   1400168aa:	mov    rbx,rcx
   1400168ad:	call   0x140016d20
   1400168b2:	mov    r8d,eax
   1400168b5:	test   eax,eax
   1400168b7:	jne    0x1400168c0
   1400168b9:	add    rsp,0x38
   1400168bd:	pop    rbp
   1400168be:	pop    rbx
   1400168bf:	ret    
   1400168c0:	dec    eax
   1400168c2:	mov    QWORD PTR [rsp+0x50],rsi
   1400168c7:	mov    QWORD PTR [rsp+0x30],rdi
   1400168cc:	cmp    eax,0x8
   1400168cf:	ja     0x140016cb2
   1400168d5:	lea    rdx,[rip+0xfffffffffffe9724]        # 0x140000000
   1400168dc:	cdqe   
   1400168de:	mov    ecx,DWORD PTR [rdx+rax*4+0x16cdc]
   1400168e5:	add    rcx,rdx
   1400168e8:	jmp    rcx
   1400168ea:	mov    rcx,rbp
   1400168ed:	call   0x1400117f0
   1400168f2:	mov    rsi,QWORD PTR [rsp+0x50]
   1400168f7:	mov    al,0x1
   1400168f9:	mov    rdi,QWORD PTR [rsp+0x30]
   1400168fe:	add    rsp,0x38
   140016902:	pop    rbp
   140016903:	pop    rbx
   140016904:	ret    
   140016905:	mov    rcx,QWORD PTR [rbx+0x8]
   140016909:	mov    eax,DWORD PTR [rcx+0x20]
   14001690c:	sub    eax,DWORD PTR [rcx+0x10]
   14001690f:	cmp    eax,0x1
   140016912:	jae    0x140016931
   140016914:	mov    rcx,QWORD PTR [rbx]
   140016917:	test   rcx,rcx
   14001691a:	je     0x140016cc6
   140016920:	lea    rdx,[rip+0x20361]        # 0x140036c88
   140016927:	call   0x14001aae0
   14001692c:	jmp    0x140016cc6
   140016931:	call   0x140015d20
   140016936:	test   al,al
   140016938:	mov    rcx,rbp
   14001693b:	setne  dl
   14001693e:	call   0x140011470
   140016943:	mov    rsi,QWORD PTR [rsp+0x50]
   140016948:	mov    al,0x1
   14001694a:	mov    rdi,QWORD PTR [rsp+0x30]
   14001694f:	add    rsp,0x38
   140016953:	pop    rbp
   140016954:	pop    rbx
   140016955:	ret    
   140016956:	mov    rcx,QWORD PTR [rbx+0x8]
   14001695a:	mov    eax,DWORD PTR [rcx+0x20]
   14001695d:	sub    eax,DWORD PTR [rcx+0x10]
   140016960:	cmp    eax,0x8
   140016963:	jb     0x140016914
   140016965:	call   0x140015b30
   14001696a:	mov    rdx,rax
   14001696d:	mov    rcx,rbp
   140016970:	call   0x140011530
   140016975:	mov    rsi,QWORD PTR [rsp+0x50]
   14001697a:	mov    al,0x1
   14001697c:	mov    rdi,QWORD PTR [rsp+0x30]
   140016981:	add    rsp,0x38
   140016985:	pop    rbp
   140016986:	pop    rbx
   140016987:	ret    
   140016988:	mov    rcx,QWORD PTR [rbx+0x8]
   14001698c:	mov    eax,DWORD PTR [rcx+0x20]
   14001698f:	sub    eax,DWORD PTR [rcx+0x10]
   140016992:	cmp    eax,0x8
   140016995:	jb     0x140016914
   14001699b:	call   0x140015d70
   1400169a0:	mov    rdx,rax
   1400169a3:	mov    rcx,rbp
   1400169a6:	call   0x140011800
   1400169ab:	mov    rsi,QWORD PTR [rsp+0x50]
   1400169b0:	mov    al,0x1
   1400169b2:	mov    rdi,QWORD PTR [rsp+0x30]
   1400169b7:	add    rsp,0x38
   1400169bb:	pop    rbp
   1400169bc:	pop    rbx
   1400169bd:	ret    
   1400169be:	mov    rcx,QWORD PTR [rbx+0x8]
   1400169c2:	mov    eax,DWORD PTR [rcx+0x20]
   1400169c5:	sub    eax,DWORD PTR [rcx+0x10]
   1400169c8:	cmp    eax,0x8
   1400169cb:	jb     0x140016914
   1400169d1:	call   0x140015a50
   1400169d6:	movaps xmm1,xmm0
   1400169d9:	mov    rcx,rbp
   1400169dc:	call   0x1400114a0
   1400169e1:	mov    rsi,QWORD PTR [rsp+0x50]
   1400169e6:	mov    al,0x1
   1400169e8:	mov    rdi,QWORD PTR [rsp+0x30]
   1400169ed:	add    rsp,0x38
   1400169f1:	pop    rbp
   1400169f2:	pop    rbx
   1400169f3:	ret    
   1400169f4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400169f8:	mov    eax,DWORD PTR [rcx+0x20]
   1400169fb:	sub    eax,DWORD PTR [rcx+0x10]
   1400169fe:	cmp    eax,0x4
   140016a01:	jb     0x140016914
   140016a07:	call   0x140015c00
   140016a0c:	cmp    BYTE PTR [rbx+0x24],0x0
   140016a10:	je     0x140016a69
   140016a12:	test   eax,eax
   140016a14:	js     0x140016a44
   140016a16:	cmp    eax,DWORD PTR [rbx+0x20]
   140016a19:	jge    0x140016a44
   140016a1b:	movsxd rcx,eax
   140016a1e:	mov    rax,QWORD PTR [rbx+0x10]
   140016a22:	mov    rdi,QWORD PTR [rax+rcx*8]
   140016a26:	mov    rcx,rbp
   140016a29:	mov    rdx,rdi
   140016a2c:	call   0x14000f7b0
   140016a31:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a36:	mov    al,0x1
   140016a38:	mov    rdi,QWORD PTR [rsp+0x30]
   140016a3d:	add    rsp,0x38
   140016a41:	pop    rbp
   140016a42:	pop    rbx
   140016a43:	ret    
   140016a44:	lea    rdi,[rip+0x1bd55]        # 0x1400327a0
   140016a4b:	mov    rcx,rbp
   140016a4e:	mov    rdx,rdi
   140016a51:	call   0x14000f7b0
   140016a56:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a5b:	mov    al,0x1
   140016a5d:	mov    rdi,QWORD PTR [rsp+0x30]
   140016a62:	add    rsp,0x38
   140016a66:	pop    rbp
   140016a67:	pop    rbx
   140016a68:	ret    
   140016a69:	test   eax,eax
   140016a6b:	js     0x140016a9b
   140016a6d:	cmp    eax,DWORD PTR [rbx+0x20]
   140016a70:	jge    0x140016a9b
   140016a72:	movsxd rcx,eax
   140016a75:	mov    rax,QWORD PTR [rbx+0x10]
   140016a79:	mov    rdi,QWORD PTR [rax+rcx*8]
   140016a7d:	mov    rcx,rbp
   140016a80:	mov    rdx,rdi
   140016a83:	call   0x1400116c0
   140016a88:	mov    rsi,QWORD PTR [rsp+0x50]
   140016a8d:	mov    al,0x1
   140016a8f:	mov    rdi,QWORD PTR [rsp+0x30]
   140016a94:	add    rsp,0x38
   140016a98:	pop    rbp
   140016a99:	pop    rbx
   140016a9a:	ret    
   140016a9b:	lea    rdi,[rip+0x1bcfe]        # 0x1400327a0
   140016aa2:	mov    rcx,rbp
   140016aa5:	mov    rdx,rdi
   140016aa8:	call   0x1400116c0
   140016aad:	mov    rsi,QWORD PTR [rsp+0x50]
   140016ab2:	mov    al,0x1
   140016ab4:	mov    rdi,QWORD PTR [rsp+0x30]
   140016ab9:	add    rsp,0x38
   140016abd:	pop    rbp
   140016abe:	pop    rbx
   140016abf:	ret    
   140016ac0:	mov    rcx,QWORD PTR [rbx+0x8]
   140016ac4:	mov    eax,DWORD PTR [rcx+0x20]
   140016ac7:	sub    eax,DWORD PTR [rcx+0x10]
   140016aca:	cmp    eax,0x4
   140016acd:	jb     0x140016914
   140016ad3:	call   0x140015c00
   140016ad8:	mov    r9,QWORD PTR [rbx+0x8]
   140016adc:	mov    edi,eax
   140016ade:	mov    ecx,DWORD PTR [r9+0x20]
   140016ae2:	sub    ecx,DWORD PTR [r9+0x10]
   140016ae6:	cmp    ecx,eax
   140016ae8:	jl     0x140016914
   140016aee:	mov    eax,DWORD PTR [r9+0x10]
   140016af2:	mov    r8d,edi
   140016af5:	sub    eax,DWORD PTR [r9+0x24]
   140016af9:	mov    edx,0x1
   140016afe:	movsxd rsi,eax
   140016b01:	mov    rcx,r9
   140016b04:	add    rsi,QWORD PTR [r9]
   140016b07:	call   0x140021ee0
   140016b0c:	cmp    BYTE PTR [rbx+0x24],0x0
   140016b10:	mov    r8d,edi
   140016b13:	mov    rdx,rsi
   140016b16:	mov    rcx,rbp
   140016b19:	je     0x140016b33
   140016b1b:	call   0x14000f740
   140016b20:	mov    rsi,QWORD PTR [rsp+0x50]
   140016b25:	mov    al,0x1
   140016b27:	mov    rdi,QWORD PTR [rsp+0x30]
   140016b2c:	add    rsp,0x38
   140016b30:	pop    rbp
   140016b31:	pop    rbx
   140016b32:	ret    
   140016b33:	call   0x140011790
   140016b38:	mov    rsi,QWORD PTR [rsp+0x50]
   140016b3d:	mov    al,0x1
   140016b3f:	mov    rdi,QWORD PTR [rsp+0x30]
   140016b44:	add    rsp,0x38
   140016b48:	pop    rbp
   140016b49:	pop    rbx
   140016b4a:	ret    
   140016b4b:	mov    rcx,QWORD PTR [rbx+0x8]
   140016b4f:	mov    eax,DWORD PTR [rcx+0x20]
   140016b52:	sub    eax,DWORD PTR [rcx+0x10]
   140016b55:	cmp    eax,0x4
   140016b58:	jb     0x140016914
   140016b5e:	call   0x140015c00
   140016b63:	mov    rcx,rbp
   140016b66:	mov    DWORD PTR [rsp+0x60],eax
   140016b6a:	mov    edi,eax
   140016b6c:	call   0x1400117e0
   140016b71:	xor    esi,esi
   140016b73:	test   edi,edi
   140016b75:	jle    0x140016c9f
   140016b7b:	lea    rdi,[rip+0x1bc1e]        # 0x1400327a0
   140016b82:	mov    rcx,QWORD PTR [rbx+0x8]
   140016b86:	mov    eax,DWORD PTR [rcx+0x20]
   140016b89:	sub    eax,DWORD PTR [rcx+0x10]
   140016b8c:	cmp    eax,0x4
   140016b8f:	jb     0x140016914
   140016b95:	call   0x140015c00
   140016b9a:	cmp    BYTE PTR [rbx+0x24],0x0
   140016b9e:	movsxd r8,eax
   140016ba1:	je     0x140016be0
   140016ba3:	test   eax,eax
   140016ba5:	js     0x140016bbc
   140016ba7:	cmp    r8d,DWORD PTR [rbx+0x20]
   140016bab:	jge    0x140016bbc
   140016bad:	mov    rax,QWORD PTR [rbx+0x10]
   140016bb1:	mov    rax,QWORD PTR [rax+r8*8]
   140016bb5:	mov    QWORD PTR [rsp+0x28],rax
   140016bba:	jmp    0x140016bc1
   140016bbc:	mov    QWORD PTR [rsp+0x28],rdi
   140016bc1:	lea    rdx,[rsp+0x68]
   140016bc6:	mov    rcx,rbx
   140016bc9:	call   0x140016e10
   140016bce:	mov    rdx,QWORD PTR [rsp+0x28]
   140016bd3:	mov    rcx,rbp
   140016bd6:	mov    r8d,DWORD PTR [rax]
   140016bd9:	call   0x14000f8b0
   140016bde:	jmp    0x140016c1b
   140016be0:	test   eax,eax
   140016be2:	js     0x140016bf9
   140016be4:	cmp    r8d,DWORD PTR [rbx+0x20]
   140016be8:	jge    0x140016bf9
   140016bea:	mov    rax,QWORD PTR [rbx+0x10]
   140016bee:	mov    rax,QWORD PTR [rax+r8*8]
   140016bf2:	mov    QWORD PTR [rsp+0x28],rax
   140016bf7:	jmp    0x140016bfe
   140016bf9:	mov    QWORD PTR [rsp+0x28],rdi
   140016bfe:	lea    rdx,[rsp+0x20]
   140016c03:	mov    rcx,rbx
   140016c06:	call   0x140016e10
   140016c0b:	mov    rdx,QWORD PTR [rsp+0x28]
   140016c10:	mov    rcx,rbp
   140016c13:	mov    r8d,DWORD PTR [rax]
   140016c16:	call   0x14000e270
   140016c1b:	mov    rdx,rax
   140016c1e:	mov    rcx,rbx
   140016c21:	call   0x1400168a0
   140016c26:	test   al,al
   140016c28:	je     0x140016cc6
   140016c2e:	inc    esi
   140016c30:	cmp    esi,DWORD PTR [rsp+0x60]
   140016c34:	jl     0x140016b82
   140016c3a:	mov    rsi,QWORD PTR [rsp+0x50]
   140016c3f:	mov    al,0x1
   140016c41:	mov    rdi,QWORD PTR [rsp+0x30]
   140016c46:	add    rsp,0x38
   140016c4a:	pop    rbp
   140016c4b:	pop    rbx
   140016c4c:	ret    
   140016c4d:	mov    rcx,QWORD PTR [rbx+0x8]
   140016c51:	mov    eax,DWORD PTR [rcx+0x20]
   140016c54:	sub    eax,DWORD PTR [rcx+0x10]
   140016c57:	cmp    eax,0x4
   140016c5a:	jb     0x140016914
   140016c60:	call   0x140015c00
   140016c65:	mov    edx,eax
   140016c67:	mov    rcx,rbp
   140016c6a:	mov    edi,eax
   140016c6c:	call   0x140011400
   140016c71:	xor    esi,esi
   140016c73:	test   edi,edi
   140016c75:	jle    0x140016c9f
   140016c77:	nop    WORD PTR [rax+rax*1+0x0]
   140016c80:	mov    edx,esi
   140016c82:	mov    rcx,rbp
   140016c85:	call   0x14000e9b0
   140016c8a:	mov    rdx,rax
   140016c8d:	mov    rcx,rbx
   140016c90:	call   0x1400168a0
   140016c95:	test   al,al
   140016c97:	je     0x140016cc6
   140016c99:	inc    esi
   140016c9b:	cmp    esi,edi
   140016c9d:	jl     0x140016c80
   140016c9f:	mov    rsi,QWORD PTR [rsp+0x50]
   140016ca4:	mov    al,0x1
   140016ca6:	mov    rdi,QWORD PTR [rsp+0x30]
   140016cab:	add    rsp,0x38
   140016caf:	pop    rbp
   140016cb0:	pop    rbx
   140016cb1:	ret    
   140016cb2:	mov    rcx,QWORD PTR [rbx]
   140016cb5:	test   rcx,rcx
   140016cb8:	je     0x140016cc6
   140016cba:	lea    rdx,[rip+0x1ffdf]        # 0x140036ca0
   140016cc1:	call   0x14001ae50
   140016cc6:	mov    rsi,QWORD PTR [rsp+0x50]
   140016ccb:	xor    al,al
   140016ccd:	mov    rdi,QWORD PTR [rsp+0x30]
   140016cd2:	add    rsp,0x38
   140016cd6:	pop    rbp
   140016cd7:	pop    rbx
   140016cd8:	ret    
   140016cd9:	nop    DWORD PTR [rax]
   140016cdc:	(bad)  
   140016cdd:	push   0x69050001
   140016ce2:	add    DWORD PTR [rax],eax
   140016ce4:	push   rsi
   140016ce5:	imul   eax,DWORD PTR [rcx],0x1698800
   140016ceb:	add    BYTE PTR [rsi-0xbfffe97],bh
   140016cf1:	imul   eax,DWORD PTR [rcx],0x16ac000
   140016cf7:	add    BYTE PTR [rbp+0x6c],cl
   140016cfa:	add    DWORD PTR [rax],eax
   140016cfc:	rex.WXB imul rax,QWORD PTR [r9],0x0
   140016d00:	cmp    edx,0x4
   140016d03:	jae    0x140016d08
   140016d05:	xor    al,al
   140016d07:	ret    
   140016d08:	cmp    DWORD PTR [rcx],0x3564b56
   140016d0e:	sete   al
   140016d11:	ret    
   140016d12:	int3   
   140016d13:	int3   
   140016d14:	int3   
   140016d15:	int3   
   140016d16:	int3   
   140016d17:	int3   
   140016d18:	int3   
   140016d19:	int3   
   140016d1a:	int3   
   140016d1b:	int3   
   140016d1c:	int3   
   140016d1d:	int3   
   140016d1e:	int3   
   140016d1f:	int3   
   140016d20:	mov    QWORD PTR [rsp+0x10],rbx
   140016d25:	mov    QWORD PTR [rsp+0x18],rbp
   140016d2a:	push   rsi
   140016d2b:	sub    rsp,0x20
   140016d2f:	mov    rbx,QWORD PTR [rcx+0x8]
   140016d33:	mov    rbp,rdx
   140016d36:	mov    rsi,rcx
   140016d39:	mov    eax,DWORD PTR [rbx+0x20]
   140016d3c:	sub    eax,DWORD PTR [rbx+0x10]
   140016d3f:	cmp    eax,0x1
   140016d42:	jge    0x140016d6a
   140016d44:	mov    rcx,QWORD PTR [rcx]
   140016d47:	test   rcx,rcx
   140016d4a:	je     0x140016d58
   140016d4c:	lea    rdx,[rip+0x1ff35]        # 0x140036c88
   140016d53:	call   0x14001aae0
   140016d58:	xor    eax,eax
   140016d5a:	mov    rbx,QWORD PTR [rsp+0x38]
   140016d5f:	mov    rbp,QWORD PTR [rsp+0x40]
   140016d64:	add    rsp,0x20
   140016d68:	pop    rsi
   140016d69:	ret    
   140016d6a:	test   BYTE PTR [rbx+0x19],0x1
   140016d6e:	mov    rcx,rbx
   140016d71:	mov    QWORD PTR [rsp+0x30],rdi
   140016d76:	jne    0x140016da5
   140016d78:	mov    edx,0x1
   140016d7d:	call   0x140020b70
   140016d82:	test   al,al
   140016d84:	je     0x140016da0
   140016d86:	mov    edx,DWORD PTR [rbx+0x10]
   140016d89:	mov    eax,edx
   140016d8b:	sub    eax,DWORD PTR [rbx+0x24]
   140016d8e:	movsxd rcx,eax
   140016d91:	mov    rax,QWORD PTR [rbx]
   140016d94:	movzx  edi,BYTE PTR [rcx+rax*1]
   140016d98:	lea    eax,[rdx+0x1]
   140016d9b:	mov    DWORD PTR [rbx+0x10],eax
   140016d9e:	jmp    0x140016dad
   140016da0:	xor    dil,dil
   140016da3:	jmp    0x140016dec
   140016da5:	call   0x140015f60
   140016daa:	movzx  edi,ax
   140016dad:	test   dil,dil
   140016db0:	jns    0x140016dec
   140016db2:	mov    rax,QWORD PTR [rsi+0x8]
   140016db6:	mov    ecx,DWORD PTR [rax+0x20]
   140016db9:	sub    ecx,DWORD PTR [rax+0x10]
   140016dbc:	cmp    ecx,0x1
   140016dbf:	jge    0x140016dd9
   140016dc1:	mov    rcx,QWORD PTR [rsi]
   140016dc4:	test   rcx,rcx
   140016dc7:	je     0x140016dd5
   140016dc9:	lea    rdx,[rip+0x1feb8]        # 0x140036c88
   140016dd0:	call   0x14001aae0
   140016dd5:	xor    eax,eax
   140016dd7:	jmp    0x140016df4
   140016dd9:	mov    rcx,rax
   140016ddc:	call   0x140015d20
   140016de1:	movzx  edx,al
   140016de4:	mov    rcx,rbp
   140016de7:	call   0x1400113e0
   140016dec:	movzx  eax,dil
   140016df0:	btr    eax,0x7
   140016df4:	mov    rdi,QWORD PTR [rsp+0x30]
   140016df9:	mov    rbx,QWORD PTR [rsp+0x38]
   140016dfe:	mov    rbp,QWORD PTR [rsp+0x40]
   140016e03:	add    rsp,0x20
   140016e07:	pop    rsi
   140016e08:	ret    
   140016e09:	int3   
   140016e0a:	int3   
   140016e0b:	int3   
   140016e0c:	int3   
   140016e0d:	int3   
   140016e0e:	int3   
   140016e0f:	int3   
   140016e10:	mov    QWORD PTR [rsp+0x18],rbx
   140016e15:	mov    QWORD PTR [rsp+0x20],rsi
   140016e1a:	push   rdi
   140016e1b:	sub    rsp,0x20
   140016e1f:	mov    rdi,rdx
   140016e22:	mov    rsi,rcx
   140016e25:	test   r8d,r8d
   140016e28:	js     0x140016ebb
   140016e2e:	cmp    r8d,DWORD PTR [rcx+0x20]
   140016e32:	jge    0x140016ebb
   140016e38:	mov    rax,QWORD PTR [rcx+0x18]
   140016e3c:	mov    QWORD PTR [rsp+0x30],rbp
   140016e41:	movsxd rbp,r8d
   140016e44:	mov    QWORD PTR [rsp+0x38],r14
   140016e49:	lea    r14,[rbp*4+0x0]
   140016e51:	mov    ebx,DWORD PTR [r14+rax*1]
   140016e55:	test   ebx,ebx
   140016e57:	jne    0x140016e9c
   140016e59:	mov    rax,QWORD PTR [rcx+0x10]
   140016e5d:	mov    rbp,QWORD PTR [rax+rbp*8]
   140016e61:	test   rbp,rbp
   140016e64:	je     0x140016e94
   140016e66:	cmp    BYTE PTR [rbp+0x0],bl
   140016e69:	je     0x140016e94
   140016e6b:	mov    edx,0x31415926
   140016e70:	mov    rcx,rbp
   140016e73:	call   0x140022790
   140016e78:	cmp    BYTE PTR [rip+0x313e9],0x0        # 0x140048268
   140016e7f:	mov    ebx,eax
   140016e81:	je     0x140016e94
   140016e83:	mov    r9b,0x1
   140016e86:	xor    r8d,r8d
   140016e89:	mov    rdx,rbp
   140016e8c:	mov    ecx,eax
   140016e8e:	call   QWORD PTR [rip+0x1b72c]        # 0x1400325c0
   140016e94:	mov    rax,QWORD PTR [rsi+0x18]
   140016e98:	mov    DWORD PTR [r14+rax*1],ebx
   140016e9c:	mov    r14,QWORD PTR [rsp+0x38]
   140016ea1:	mov    rax,rdi
   140016ea4:	mov    rbp,QWORD PTR [rsp+0x30]
   140016ea9:	mov    DWORD PTR [rdi],ebx
   140016eab:	mov    rbx,QWORD PTR [rsp+0x40]
   140016eb0:	mov    rsi,QWORD PTR [rsp+0x48]
   140016eb5:	add    rsp,0x20
   140016eb9:	pop    rdi
   140016eba:	ret    
   140016ebb:	mov    rsi,QWORD PTR [rsp+0x48]
   140016ec0:	xor    ebx,ebx
   140016ec2:	mov    DWORD PTR [rdx],ebx
   140016ec4:	mov    rax,rdi
   140016ec7:	mov    rbx,QWORD PTR [rsp+0x40]
   140016ecc:	add    rsp,0x20
   140016ed0:	pop    rdi
   140016ed1:	ret    
   140016ed2:	int3   
   140016ed3:	int3   
   140016ed4:	int3   
   140016ed5:	int3   
   140016ed6:	int3   
   140016ed7:	int3   
   140016ed8:	int3   
   140016ed9:	int3   
   140016eda:	int3   
   140016edb:	int3   
   140016edc:	int3   
   140016edd:	int3   
   140016ede:	int3   
   140016edf:	int3   
   140016ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140016ee5:	push   rdi
   140016ee6:	sub    rsp,0x20
   140016eea:	mov    rbx,rcx
   140016eed:	call   0x140017e60
   140016ef2:	xor    edi,edi
   140016ef4:	test   DWORD PTR [rbx+0x14],0xc0000000
   140016efb:	jne    0x140016f46
   140016efd:	mov    rdx,QWORD PTR [rbx+0x8]
   140016f01:	test   rdx,rdx
   140016f04:	je     0x140016f1a
   140016f06:	mov    rax,QWORD PTR [rip+0x1b483]        # 0x140032390
   140016f0d:	mov    rcx,QWORD PTR [rax]
   140016f10:	mov    rax,QWORD PTR [rcx]
   140016f13:	call   QWORD PTR [rax+0x28]
   140016f16:	mov    QWORD PTR [rbx+0x8],rdi
   140016f1a:	mov    DWORD PTR [rbx+0x10],edi
   140016f1d:	test   DWORD PTR [rbx+0x14],0xc0000000
   140016f24:	jne    0x140016f46
   140016f26:	mov    rdx,QWORD PTR [rbx+0x8]
   140016f2a:	test   rdx,rdx
   140016f2d:	je     0x140016f43
   140016f2f:	mov    rax,QWORD PTR [rip+0x1b45a]        # 0x140032390
   140016f36:	mov    rcx,QWORD PTR [rax]
   140016f39:	mov    rax,QWORD PTR [rcx]
   140016f3c:	call   QWORD PTR [rax+0x28]
   140016f3f:	mov    QWORD PTR [rbx+0x8],rdi
   140016f43:	mov    DWORD PTR [rbx+0x10],edi
   140016f46:	mov    rbx,QWORD PTR [rsp+0x30]
   140016f4b:	add    rsp,0x20
   140016f4f:	pop    rdi
   140016f50:	ret    
   140016f51:	int3   
   140016f52:	int3   
   140016f53:	int3   
   140016f54:	int3   
   140016f55:	int3   
   140016f56:	int3   
   140016f57:	int3   
   140016f58:	int3   
   140016f59:	int3   
   140016f5a:	int3   
   140016f5b:	int3   
   140016f5c:	int3   
   140016f5d:	int3   
   140016f5e:	int3   
   140016f5f:	int3   
   140016f60:	mov    QWORD PTR [rsp+0x8],rbx
   140016f65:	push   rdi
   140016f66:	sub    rsp,0x70
   140016f6a:	mov    rdi,rcx
   140016f6d:	lea    rcx,[rsp+0x48]
   140016f72:	call   0x140022c10
   140016f77:	lea    rbx,[rdi+0x8]
   140016f7b:	mov    rcx,rbx
   140016f7e:	lea    rdx,[rsp+0x48]
   140016f83:	call   0x140022fc0
   140016f88:	test   al,al
   140016f8a:	jne    0x140016fb0
   140016f8c:	lea    rdx,[rip+0x1feb5]        # 0x140036e48
   140016f93:	mov    rcx,rdi
   140016f96:	call   0x140017ee0
   140016f9b:	xor    bl,bl
   140016f9d:	jmp    0x14001709f
   140016fa2:	nop    DWORD PTR [rax+0x0]
   140016fa6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016fb0:	xor    r9d,r9d
   140016fb3:	lea    r8,[rip+0x1fc0e]        # 0x140036bc8
   140016fba:	xor    edx,edx
   140016fbc:	mov    rcx,rbx
   140016fbf:	call   0x140023680
   140016fc4:	mov    rcx,rbx
   140016fc7:	test   al,al
   140016fc9:	je     0x14001700a
   140016fcb:	xor    r8d,r8d
   140016fce:	lea    rdx,[rip+0x1fbf3]        # 0x140036bc8
   140016fd5:	call   0x140022f20
   140016fda:	test   al,al
   140016fdc:	je     0x140016ff4
   140016fde:	xor    r8d,r8d
   140016fe1:	lea    rdx,[rip+0x1f788]        # 0x140036770
   140016fe8:	mov    rcx,rbx
   140016feb:	call   0x140022f20
   140016ff0:	test   al,al
   140016ff2:	jne    0x140016fb0
   140016ff4:	lea    rdx,[rip+0x1fe6d]        # 0x140036e68
   140016ffb:	mov    rcx,rdi
   140016ffe:	call   0x140017ee0
   140017003:	xor    bl,bl
   140017005:	jmp    0x14001709f
   14001700a:	xor    r9d,r9d
   14001700d:	lea    r8,[rip+0x1fe60]        # 0x140036e74
   140017014:	xor    edx,edx
   140017016:	call   0x140023680
   14001701b:	test   al,al
   14001701d:	je     0x140017083
   14001701f:	lea    rcx,[rsp+0x20]
   140017024:	call   0x140022c10
   140017029:	xor    r8d,r8d
   14001702c:	lea    rdx,[rip+0x1fe41]        # 0x140036e74
   140017033:	mov    rcx,rbx
   140017036:	call   0x140022f20
   14001703b:	test   al,al
   14001703d:	je     0x1400170ba
   14001703f:	lea    rdx,[rsp+0x20]
   140017044:	mov    rcx,rbx
   140017047:	call   0x140022e80
   14001704c:	test   al,al
   14001704e:	je     0x1400170ba
   140017050:	xor    r8d,r8d
   140017053:	lea    rdx,[rip+0x1fe1e]        # 0x140036e78
   14001705a:	mov    rcx,rbx
   14001705d:	call   0x140022f20
   140017062:	test   al,al
   140017064:	je     0x1400170ba
   140017066:	lea    rcx,[rsp+0x20]
   14001706b:	call   0x1400235a0
   140017070:	test   al,al
   140017072:	je     0x1400170ba
   140017074:	lea    rcx,[rsp+0x20]
   140017079:	call   0x140022d40
   14001707e:	jmp    0x140016fb0
   140017083:	xor    r8d,r8d
   140017086:	lea    rdx,[rip+0x1fe0b]        # 0x140036e98
   14001708d:	mov    rcx,rbx
   140017090:	call   0x140022f20
   140017095:	test   al,al
   140017097:	jne    0x140016fb0
   14001709d:	mov    bl,0x1
   14001709f:	lea    rcx,[rsp+0x48]
   1400170a4:	call   0x140022d40
   1400170a9:	movzx  eax,bl
   1400170ac:	mov    rbx,QWORD PTR [rsp+0x80]
   1400170b4:	add    rsp,0x70
   1400170b8:	pop    rdi
   1400170b9:	ret    
   1400170ba:	lea    rdx,[rip+0x1fdbf]        # 0x140036e80
   1400170c1:	mov    rcx,rdi
   1400170c4:	call   0x140017ee0
   1400170c9:	lea    rcx,[rsp+0x20]
   1400170ce:	call   0x140022d40
   1400170d3:	xor    bl,bl
   1400170d5:	jmp    0x14001709f
   1400170d7:	int3   
   1400170d8:	int3   
   1400170d9:	int3   
   1400170da:	int3   
   1400170db:	int3   
   1400170dc:	int3   
   1400170dd:	int3   
   1400170de:	int3   
   1400170df:	int3   
   1400170e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400170e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400170ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400170ef:	push   rdi
   1400170f0:	sub    rsp,0x340
   1400170f7:	mov    rbx,r8
   1400170fa:	mov    rdi,rdx
   1400170fd:	mov    rsi,rcx
   140017100:	lea    r8,[rip+0x1f75d]        # 0x140036864
   140017107:	mov    rdx,rbx
   14001710a:	lea    rcx,[rsp+0x28]
   14001710f:	mov    rbp,r9
   140017112:	call   0x140022c30
   140017117:	xor    eax,eax
   140017119:	lea    rdx,[rip+0x1fc88]        # 0x140036da8
   140017120:	lea    rcx,[rsp+0x28]
   140017125:	mov    DWORD PTR [rsp+0x300],eax
   14001712c:	mov    QWORD PTR [rsp+0x308],rax
   140017134:	mov    QWORD PTR [rsp+0x310],rax
   14001713c:	mov    DWORD PTR [rsp+0x318],eax
   140017143:	mov    QWORD PTR [rsp+0x320],rax
   14001714b:	mov    QWORD PTR [rsp+0x328],rax
   140017153:	call   0x140024030
   140017158:	lea    rcx,[rsp+0x20]
   14001715d:	mov    BYTE PTR [rsp+0x2e0],0x1
   140017165:	mov    QWORD PTR [rsp+0x2e8],rsi
   14001716d:	mov    QWORD PTR [rsp+0x2f0],rdi
   140017175:	mov    QWORD PTR [rsp+0x2f8],rbx
   14001717d:	mov    BYTE PTR [rsp+0x20],0x1
   140017182:	call   0x140017220
   140017187:	test   al,al
   140017189:	jne    0x14001718f
   14001718b:	xor    bl,bl
   14001718d:	jmp    0x1400171a7
   14001718f:	mov    r9,rdi
   140017192:	lea    rdx,[rip+0x2ee9f]        # 0x140046038
   140017199:	mov    r8,rbp
   14001719c:	mov    rcx,rsi
   14001719f:	call   0x140018480
   1400171a4:	movzx  ebx,al
   1400171a7:	lea    rcx,[rsp+0x318]
   1400171af:	call   0x140014430
   1400171b4:	lea    rcx,[rsp+0x300]
   1400171bc:	call   0x140016ee0
   1400171c1:	lea    rcx,[rsp+0x2c0]
   1400171c9:	call   0x140014430
   1400171ce:	cmp    QWORD PTR [rsp+0x2b8],0x0
   1400171d7:	je     0x1400171e6
   1400171d9:	lea    rcx,[rsp+0x2b8]
   1400171e1:	call   0x14001b030
   1400171e6:	lea    rcx,[rsp+0x288]
   1400171ee:	call   0x140022d40
   1400171f3:	lea    rcx,[rsp+0x130]
   1400171fb:	call   0x1400144b0
   140017200:	lea    r11,[rsp+0x340]
   140017208:	movzx  eax,bl
   14001720b:	mov    rbx,QWORD PTR [r11+0x10]
   14001720f:	mov    rbp,QWORD PTR [r11+0x18]
   140017213:	mov    rsi,QWORD PTR [r11+0x20]
   140017217:	mov    rsp,r11
   14001721a:	pop    rdi
   14001721b:	ret    
   14001721c:	int3   
   14001721d:	int3   
   14001721e:	int3   
   14001721f:	int3   
   140017220:	rex push rbx
   140017222:	push   r14
   140017224:	sub    rsp,0x28
   140017228:	mov    rbx,rcx
   14001722b:	add    rcx,0x8
   14001722f:	call   0x140023fb0
   140017234:	mov    rcx,rbx
   140017237:	call   0x140017500
   14001723c:	mov    rcx,rbx
   14001723f:	test   al,al
   140017241:	jne    0x140017259
   140017243:	lea    rdx,[rip+0x1f65e]        # 0x1400368a8
   14001724a:	call   0x140017ee0
   14001724f:	xor    al,al
   140017251:	add    rsp,0x28
   140017255:	pop    r14
   140017257:	pop    rbx
   140017258:	ret    
   140017259:	mov    rdx,QWORD PTR [rbx+0x2c8]
   140017260:	xor    r8d,r8d
   140017263:	call   0x140017970
   140017268:	test   al,al
   14001726a:	je     0x14001724f
   14001726c:	mov    QWORD PTR [rsp+0x40],rbp
   140017271:	lea    rcx,[rbx+0x8]
   140017275:	mov    QWORD PTR [rsp+0x48],rsi
   14001727a:	mov    QWORD PTR [rsp+0x50],rdi
   14001727f:	mov    QWORD PTR [rsp+0x20],r15
   140017284:	call   0x140022db0
   140017289:	test   al,al
   14001728b:	je     0x140017369
   140017291:	lea    rcx,[rbx+0x8]
   140017295:	call   0x140022db0
   14001729a:	test   al,al
   14001729c:	je     0x140017369
   1400172a2:	xor    r15d,r15d
   1400172a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400172b0:	movsxd rdi,DWORD PTR [rbx+0x2e0]
   1400172b7:	cmp    edi,DWORD PTR [rbx+0x2f0]
   1400172bd:	jne    0x1400172d0
   1400172bf:	lea    rcx,[rbx+0x2e8]
   1400172c6:	mov    edx,0x1
   1400172cb:	call   0x140009a40
   1400172d0:	inc    DWORD PTR [rbx+0x2e0]
   1400172d6:	lea    rcx,[rdi+rdi*2]
   1400172da:	lea    rdx,[rcx*8+0x0]
   1400172e2:	mov    rcx,QWORD PTR [rbx+0x2e8]
   1400172e9:	add    rcx,rdx
   1400172ec:	je     0x1400172f9
   1400172ee:	mov    QWORD PTR [rcx],r15
   1400172f1:	mov    QWORD PTR [rcx+0x8],r15
   1400172f5:	mov    BYTE PTR [rcx+0x10],r15b
   1400172f9:	mov    rbp,QWORD PTR [rbx+0x2e8]
   140017300:	mov    r8d,r15d
   140017303:	mov    rcx,QWORD PTR [rbx+0x2c8]
   14001730a:	add    rbp,rdx
   14001730d:	mov    rdx,QWORD PTR [rip+0x2edb4]        # 0x1400460c8
   140017314:	call   0x14000e270
   140017319:	mov    rcx,rax
   14001731c:	mov    rsi,rax
   14001731f:	call   0x14000ea00
   140017324:	mov    rcx,rsi
   140017327:	mov    edi,eax
   140017329:	lea    edx,[rax+0x1]
   14001732c:	call   0x140011400
   140017331:	mov    edx,edi
   140017333:	mov    rcx,rsi
   140017336:	call   0x14000e9b0
   14001733b:	mov    r8,rbp
   14001733e:	mov    rdx,rax
   140017341:	mov    rcx,rbx
   140017344:	mov    rdi,rax
   140017347:	call   0x140017970
   14001734c:	test   al,al
   14001734e:	je     0x14001736e
   140017350:	lea    rcx,[rbx+0x8]
   140017354:	mov    QWORD PTR [rbp+0x8],rdi
   140017358:	mov    BYTE PTR [rbp+0x10],r15b
   14001735c:	call   0x140022db0
   140017361:	test   al,al
   140017363:	jne    0x1400172b0
   140017369:	cmp    BYTE PTR [rbx],0x0
   14001736c:	jne    0x140017372
   14001736e:	xor    al,al
   140017370:	jmp    0x14001737a
   140017372:	mov    rcx,rbx
   140017375:	call   0x140018040
   14001737a:	mov    rdi,QWORD PTR [rsp+0x50]
   14001737f:	mov    rsi,QWORD PTR [rsp+0x48]
   140017384:	mov    rbp,QWORD PTR [rsp+0x40]
   140017389:	mov    r15,QWORD PTR [rsp+0x20]
   14001738e:	add    rsp,0x28
   140017392:	pop    r14
   140017394:	pop    rbx
   140017395:	ret    
   140017396:	int3   
   140017397:	int3   
   140017398:	int3   
   140017399:	int3   
   14001739a:	int3   
   14001739b:	int3   
   14001739c:	int3   
   14001739d:	int3   
   14001739e:	int3   
   14001739f:	int3   
   1400173a0:	mov    QWORD PTR [rsp+0x18],rbx
   1400173a5:	push   rbp
   1400173a6:	push   rdi
   1400173a7:	push   r15
   1400173a9:	sub    rsp,0x130
   1400173b0:	mov    r15,rdx
   1400173b3:	mov    rbp,rcx
   1400173b6:	lea    rdx,[rip+0x1f80b]        # 0x140036bc8
   1400173bd:	add    rcx,0x8
   1400173c1:	xor    r8d,r8d
   1400173c4:	call   0x140022f20
   1400173c9:	test   al,al
   1400173cb:	je     0x1400173d6
   1400173cd:	lea    rdi,[rip+0x1f39c]        # 0x140036770
   1400173d4:	jmp    0x1400173f8
   1400173d6:	xor    r8d,r8d
   1400173d9:	lea    rdx,[rip+0x1fa94]        # 0x140036e74
   1400173e0:	lea    rcx,[rbp+0x8]
   1400173e4:	call   0x140022f20
   1400173e9:	test   al,al
   1400173eb:	je     0x1400174ec
   1400173f1:	lea    rdi,[rip+0x1fa80]        # 0x140036e78
   1400173f8:	mov    QWORD PTR [rsp+0x150],rsi
   140017400:	xor    edx,edx
   140017402:	mov    rcx,r15
   140017405:	mov    QWORD PTR [rsp+0x158],r14
   14001740d:	call   0x140011400
   140017412:	xor    r8d,r8d
   140017415:	lea    rcx,[rbp+0x8]
   140017419:	mov    rdx,rdi
   14001741c:	xor    esi,esi
   14001741e:	call   0x140022f20
   140017423:	test   al,al
   140017425:	jne    0x140017499
   140017427:	nop    WORD PTR [rax+rax*1+0x0]
   140017430:	lea    edx,[rsi+0x1]
   140017433:	mov    rcx,r15
   140017436:	call   0x140011400
   14001743b:	mov    edx,esi
   14001743d:	mov    rcx,r15
   140017440:	call   0x14000e9b0
   140017445:	mov    rdx,rax
   140017448:	mov    rcx,rbp
   14001744b:	call   0x140017cf0
   140017450:	test   al,al
   140017452:	je     0x1400174e3
   140017458:	xor    r8d,r8d
   14001745b:	lea    rdx,[rip+0x1f31a]        # 0x14003677c
   140017462:	lea    rcx,[rbp+0x8]
   140017466:	call   0x140022f20
   14001746b:	test   al,al
   14001746d:	jne    0x140017484
   14001746f:	xor    r9d,r9d
   140017472:	lea    rcx,[rbp+0x8]
   140017476:	mov    r8,rdi
   140017479:	xor    edx,edx
   14001747b:	call   0x140023680
   140017480:	test   al,al
   140017482:	je     0x14001749d
   140017484:	xor    r8d,r8d
   140017487:	lea    rcx,[rbp+0x8]
   14001748b:	mov    rdx,rdi
   14001748e:	inc    esi
   140017490:	call   0x140022f20
   140017495:	test   al,al
   140017497:	je     0x140017430
   140017499:	mov    al,0x1
   14001749b:	jmp    0x1400174bf
   14001749d:	mov    r8,rdi
   1400174a0:	lea    rdx,[rip+0x1f741]        # 0x140036be8
   1400174a7:	lea    rcx,[rsp+0x20]
   1400174ac:	call   0x140001600
   1400174b1:	lea    rdx,[rax+0x9]
   1400174b5:	mov    rcx,rbp
   1400174b8:	call   0x140017ee0
   1400174bd:	xor    al,al
   1400174bf:	mov    rsi,QWORD PTR [rsp+0x150]
   1400174c7:	mov    r14,QWORD PTR [rsp+0x158]
   1400174cf:	mov    rbx,QWORD PTR [rsp+0x160]
   1400174d7:	add    rsp,0x130
   1400174de:	pop    r15
   1400174e0:	pop    rdi
   1400174e1:	pop    rbp
   1400174e2:	ret    
   1400174e3:	lea    rdx,[rip+0x1f6e6]        # 0x140036bd0
   1400174ea:	jmp    0x1400174b5
   1400174ec:	lea    rdx,[rip+0x1f9b5]        # 0x140036ea8
   1400174f3:	mov    rcx,rbp
   1400174f6:	call   0x140017ee0
   1400174fb:	xor    al,al
   1400174fd:	jmp    0x1400174cf
   1400174ff:	int3   
   140017500:	mov    QWORD PTR [rsp+0x8],rbx
   140017505:	push   rdi
   140017506:	sub    rsp,0xe0
   14001750d:	lea    rbx,[rcx+0x8]
   140017511:	mov    rdi,rcx
   140017514:	mov    rcx,rbx
   140017517:	lea    rdx,[rip+0x1f39a]        # 0x1400368b8
   14001751e:	xor    r8d,r8d
   140017521:	call   0x140022f20
   140017526:	test   al,al
   140017528:	je     0x140017757
   14001752e:	xor    r8d,r8d
   140017531:	lea    rdx,[rip+0x1f8a4]        # 0x140036ddc
   140017538:	mov    rcx,rbx
   14001753b:	call   0x140022f20
   140017540:	test   al,al
   140017542:	je     0x140017757
   140017548:	lea    rcx,[rsp+0xb8]
   140017550:	call   0x140022c10
   140017555:	lea    rcx,[rsp+0x90]
   14001755d:	call   0x140022c10
   140017562:	lea    rdx,[rsp+0xb8]
   14001756a:	mov    rcx,rbx
   14001756d:	call   0x140022fc0
   140017572:	test   al,al
   140017574:	je     0x140017727
   14001757a:	xor    r8d,r8d
   14001757d:	lea    rdx,[rip+0x1f444]        # 0x1400369c8
   140017584:	mov    rcx,rbx
   140017587:	call   0x140022f20
   14001758c:	test   al,al
   14001758e:	je     0x140017727
   140017594:	lea    rdx,[rsp+0x90]
   14001759c:	mov    rcx,rbx
   14001759f:	call   0x140022e80
   1400175a4:	test   al,al
   1400175a6:	je     0x140017727
   1400175ac:	xor    r8d,r8d
   1400175af:	lea    rdx,[rip+0x1f1d2]        # 0x140036788
   1400175b6:	mov    rcx,rbx
   1400175b9:	call   0x140022f20
   1400175be:	test   al,al
   1400175c0:	je     0x140017727
   1400175c6:	lea    rcx,[rsp+0x68]
   1400175cb:	call   0x140022c10
   1400175d0:	lea    rcx,[rsp+0x40]
   1400175d5:	call   0x140022c10
   1400175da:	lea    rdx,[rsp+0x68]
   1400175df:	mov    rcx,rbx
   1400175e2:	call   0x140022fc0
   1400175e7:	test   al,al
   1400175e9:	je     0x14001770f
   1400175ef:	xor    r8d,r8d
   1400175f2:	lea    rdx,[rip+0x1f3cf]        # 0x1400369c8
   1400175f9:	mov    rcx,rbx
   1400175fc:	call   0x140022f20
   140017601:	test   al,al
   140017603:	je     0x14001770f
   140017609:	lea    rdx,[rsp+0x40]
   14001760e:	mov    rcx,rbx
   140017611:	call   0x140022e80
   140017616:	test   al,al
   140017618:	je     0x14001770f
   14001761e:	xor    r8d,r8d
   140017621:	lea    rdx,[rip+0x1f160]        # 0x140036788
   140017628:	mov    rcx,rbx
   14001762b:	call   0x140022f20
   140017630:	test   al,al
   140017632:	je     0x14001770f
   140017638:	lea    rcx,[rsp+0x90]
   140017640:	call   0x140022dc0
   140017645:	mov    rdx,rax
   140017648:	lea    rcx,[rsp+0x30]
   14001764d:	call   QWORD PTR [rip+0x1ac15]        # 0x140032268
   140017653:	test   al,al
   140017655:	je     0x14001770f
   14001765b:	lea    rcx,[rsp+0x40]
   140017660:	call   0x140022dc0
   140017665:	mov    rdx,rax
   140017668:	lea    rcx,[rsp+0x20]
   14001766d:	call   QWORD PTR [rip+0x1abf5]        # 0x140032268
   140017673:	test   al,al
   140017675:	je     0x14001770f
   14001767b:	xor    r8d,r8d
   14001767e:	lea    rdx,[rip+0x1f407]        # 0x140036a8c
   140017685:	mov    rcx,rbx
   140017688:	call   0x140022f20
   14001768d:	test   al,al
   14001768f:	je     0x14001770f
   140017691:	lea    rcx,[rsp+0x68]
   140017696:	call   0x140022dc0
   14001769b:	mov    rcx,rax
   14001769e:	lea    rdx,[rip+0x1c763]        # 0x140033e08
   1400176a5:	call   QWORD PTR [rip+0x1aeb5]        # 0x140032560
   1400176ab:	test   eax,eax
   1400176ad:	jne    0x1400176cb
   1400176af:	mov    rax,QWORD PTR [rsp+0x20]
   1400176b4:	cmp    rax,QWORD PTR [rip+0x1f6dd]        # 0x140036d98
   1400176bb:	jne    0x14001770f
   1400176bd:	mov    rax,QWORD PTR [rsp+0x28]
   1400176c2:	cmp    rax,QWORD PTR [rip+0x1f6d7]        # 0x140036da0
   1400176c9:	jne    0x14001770f
   1400176cb:	mov    rcx,QWORD PTR [rsp+0x30]
   1400176d0:	cmp    rcx,QWORD PTR [rip+0x1f6a1]        # 0x140036d78
   1400176d7:	mov    rax,QWORD PTR [rsp+0x38]
   1400176dc:	jne    0x1400176f2
   1400176de:	cmp    rax,QWORD PTR [rip+0x1f69b]        # 0x140036d80
   1400176e5:	jne    0x1400176f2
   1400176e7:	mov    BYTE PTR [rdi+0x2c0],0x0
   1400176ee:	mov    bl,0x1
   1400176f0:	jmp    0x140017711
   1400176f2:	cmp    rcx,QWORD PTR [rip+0x1f68f]        # 0x140036d88
   1400176f9:	jne    0x14001770f
   1400176fb:	cmp    rax,QWORD PTR [rip+0x1f68e]        # 0x140036d90
   140017702:	jne    0x14001770f
   140017704:	mov    BYTE PTR [rdi+0x2c0],0x1
   14001770b:	mov    bl,0x1
   14001770d:	jmp    0x140017711
   14001770f:	xor    bl,bl
   140017711:	lea    rcx,[rsp+0x40]
   140017716:	call   0x140022d40
   14001771b:	lea    rcx,[rsp+0x68]
   140017720:	call   0x140022d40
   140017725:	jmp    0x140017729
   140017727:	xor    bl,bl
   140017729:	lea    rcx,[rsp+0x90]
   140017731:	call   0x140022d40
   140017736:	lea    rcx,[rsp+0xb8]
   14001773e:	call   0x140022d40
   140017743:	movzx  eax,bl
   140017746:	mov    rbx,QWORD PTR [rsp+0xf0]
   14001774e:	add    rsp,0xe0
   140017755:	pop    rdi
   140017756:	ret    
   140017757:	xor    al,al
   140017759:	mov    rbx,QWORD PTR [rsp+0xf0]
   140017761:	add    rsp,0xe0
   140017768:	pop    rdi
   140017769:	ret    
   14001776a:	int3   
   14001776b:	int3   
   14001776c:	int3   
   14001776d:	int3   
   14001776e:	int3   
   14001776f:	int3   
   140017770:	mov    QWORD PTR [rsp+0x10],rbx
   140017775:	push   rdi
   140017776:	sub    rsp,0x160
   14001777d:	mov    rdi,rcx
   140017780:	mov    rbx,rdx
   140017783:	lea    rcx,[rsp+0x20]
   140017788:	call   0x140022c10
   14001778d:	lea    rcx,[rdi+0x8]
   140017791:	lea    rdx,[rsp+0x20]
   140017796:	call   0x140022e80
   14001779b:	test   al,al
   14001779d:	jne    0x1400177b3
   14001779f:	lea    rdx,[rip+0x1f46a]        # 0x140036c10
   1400177a6:	mov    rcx,rdi
   1400177a9:	call   0x140017ee0
   1400177ae:	jmp    0x14001794e
   1400177b3:	test   rbx,rbx
   1400177b6:	je     0x140017915
   1400177bc:	lea    rcx,[rsp+0x20]
   1400177c1:	call   0x140023360
   1400177c6:	lea    rcx,[rsp+0x20]
   1400177cb:	test   al,al
   1400177cd:	je     0x140017832
   1400177cf:	xor    r8d,r8d
   1400177d2:	lea    rdx,[rip+0x1ec33]        # 0x14003640c
   1400177d9:	call   0x140023450
   1400177de:	test   al,al
   1400177e0:	je     0x1400177f3
   1400177e2:	mov    dl,0x1
   1400177e4:	mov    rcx,rbx
   1400177e7:	call   0x140011470
   1400177ec:	mov    bl,0x1
   1400177ee:	jmp    0x140017950
   1400177f3:	xor    r8d,r8d
   1400177f6:	lea    rdx,[rip+0x1ec17]        # 0x140036414
   1400177fd:	lea    rcx,[rsp+0x20]
   140017802:	call   0x140023450
   140017807:	test   al,al
   140017809:	je     0x14001781c
   14001780b:	xor    edx,edx
   14001780d:	mov    rcx,rbx
   140017810:	call   0x140011470
   140017815:	mov    bl,0x1
   140017817:	jmp    0x140017950
   14001781c:	lea    rdx,[rip+0x1f41d]        # 0x140036c40
   140017823:	mov    rcx,rdi
   140017826:	call   0x140017ee0
   14001782b:	mov    bl,0x1
   14001782d:	jmp    0x140017950
   140017832:	mov    dl,0x1
   140017834:	call   0x140023510
   140017839:	lea    rcx,[rsp+0x20]
   14001783e:	test   al,al
   140017840:	je     0x140017859
   140017842:	call   0x140022dc0
   140017847:	mov    rdx,rax
   14001784a:	mov    rcx,rbx
   14001784d:	call   0x1400116c0
   140017852:	mov    bl,0x1
   140017854:	jmp    0x140017950
   140017859:	call   0x1400235a0
   14001785e:	lea    rcx,[rsp+0x20]
   140017863:	test   al,al
   140017865:	je     0x140017886
   140017867:	call   0x140022dc0
   14001786c:	mov    rcx,rax
   14001786f:	call   QWORD PTR [rip+0x1aa23]        # 0x140032298
   140017875:	mov    edx,eax
   140017877:	mov    rcx,rbx
   14001787a:	call   0x140011560
   14001787f:	mov    bl,0x1
   140017881:	jmp    0x140017950
   140017886:	call   0x1400234c0
   14001788b:	lea    rcx,[rsp+0x20]
   140017890:	test   al,al
   140017892:	je     0x1400178b4
   140017894:	call   0x140022dc0
   140017899:	mov    rcx,rax
   14001789c:	call   QWORD PTR [rip+0x1a9de]        # 0x140032280
   1400178a2:	movaps xmm1,xmm0
   1400178a5:	mov    rcx,rbx
   1400178a8:	call   0x1400114a0
   1400178ad:	mov    bl,0x1
   1400178af:	jmp    0x140017950
   1400178b4:	call   0x140023620
   1400178b9:	lea    rcx,[rsp+0x20]
   1400178be:	test   al,al
   1400178c0:	je     0x140017919
   1400178c2:	lea    rdx,[rsp+0x170]
   1400178ca:	mov    QWORD PTR [rsp+0x170],0x0
   1400178d6:	call   0x140022e50
   1400178db:	lea    rcx,[rsp+0x170]
   1400178e3:	call   0x14001b050
   1400178e8:	mov    rdx,rax
   1400178eb:	mov    rcx,rbx
   1400178ee:	call   0x1400116c0
   1400178f3:	lea    rcx,[rsp+0x20]
   1400178f8:	call   0x1400235f0
   1400178fd:	cmp    QWORD PTR [rsp+0x170],0x0
   140017906:	je     0x140017915
   140017908:	lea    rcx,[rsp+0x170]
   140017910:	call   0x14001b030
   140017915:	mov    bl,0x1
   140017917:	jmp    0x140017950
   140017919:	call   0x140022dc0
   14001791e:	lea    rcx,[rsp+0x20]
   140017923:	mov    rbx,rax
   140017926:	call   0x140023250
   14001792b:	mov    r8d,eax
   14001792e:	lea    rdx,[rip+0x1f5bb]        # 0x140036ef0
   140017935:	mov    r9,rbx
   140017938:	lea    rcx,[rsp+0x48]
   14001793d:	call   0x140001600
   140017942:	mov    rcx,rdi
   140017945:	lea    rdx,[rax+0x9]
   140017949:	call   0x140017fe0
   14001794e:	xor    bl,bl
   140017950:	lea    rcx,[rsp+0x20]
   140017955:	call   0x140022d40
   14001795a:	movzx  eax,bl
   14001795d:	mov    rbx,QWORD PTR [rsp+0x178]
   140017965:	add    rsp,0x160
   14001796c:	pop    rdi
   14001796d:	ret    
   14001796e:	int3   
   14001796f:	int3   
   140017970:	mov    QWORD PTR [rsp+0x8],rbx
   140017975:	mov    QWORD PTR [rsp+0x10],rsi
   14001797a:	mov    QWORD PTR [rsp+0x18],rdi
   14001797f:	mov    QWORD PTR [rsp+0x20],r14
   140017984:	push   rbp
   140017985:	lea    rbp,[rsp-0xb0]
   14001798d:	sub    rsp,0x1b0
   140017994:	mov    rbx,rcx
   140017997:	mov    rsi,r8
   14001799a:	lea    rcx,[rsp+0x70]
   14001799f:	mov    r14,rdx
   1400179a2:	call   0x140022c10
   1400179a7:	lea    rcx,[rsp+0x48]
   1400179ac:	call   0x140022c10
   1400179b1:	lea    rdx,[rsp+0x70]
   1400179b6:	lea    rcx,[rbx+0x8]
   1400179ba:	call   0x140022fc0
   1400179bf:	test   al,al
   1400179c1:	je     0x1400179d1
   1400179c3:	lea    rdx,[rsp+0x48]
   1400179c8:	lea    rcx,[rbx+0x8]
   1400179cc:	call   0x140022fc0
   1400179d1:	xor    r8d,r8d
   1400179d4:	lea    rdx,[rip+0x1efed]        # 0x1400369c8
   1400179db:	lea    rcx,[rbx+0x8]
   1400179df:	call   0x140022f20
   1400179e4:	test   al,al
   1400179e6:	jne    0x1400179fe
   1400179e8:	lea    rdx,[rip+0x1f111]        # 0x140036b00
   1400179ef:	mov    rcx,rbx
   1400179f2:	call   0x140017ee0
   1400179f7:	xor    bl,bl
   1400179f9:	jmp    0x140017b4e
   1400179fe:	mov    rcx,r14
   140017a01:	call   0x1400117e0
   140017a06:	lea    rcx,[rsp+0x70]
   140017a0b:	call   0x140023660
   140017a10:	test   al,al
   140017a12:	je     0x140017a33
   140017a14:	lea    rcx,[rsp+0x70]
   140017a19:	call   0x140022dc0
   140017a1e:	mov    r8,rax
   140017a21:	lea    rdx,[rip+0x1ee24]        # 0x14003684c
   140017a28:	xor    r9d,r9d
   140017a2b:	mov    rcx,r14
   140017a2e:	call   0x140011650
   140017a33:	test   rsi,rsi
   140017a36:	je     0x140017a4d
   140017a38:	lea    rcx,[rsp+0x48]
   140017a3d:	call   0x140022dc0
   140017a42:	mov    rdx,rax
   140017a45:	mov    rcx,rsi
   140017a48:	call   0x14001aae0
   140017a4d:	lea    rcx,[rsp+0x48]
   140017a52:	call   0x140023660
   140017a57:	test   al,al
   140017a59:	je     0x140017a7a
   140017a5b:	lea    rcx,[rsp+0x48]
   140017a60:	call   0x140022dc0
   140017a65:	mov    r8,rax
   140017a68:	lea    rdx,[rip+0x1f379]        # 0x140036de8
   140017a6f:	xor    r9d,r9d
   140017a72:	mov    rcx,r14
   140017a75:	call   0x140011650
   140017a7a:	xor    r9d,r9d
   140017a7d:	lea    r8,[rip+0x1ed04]        # 0x140036788
   140017a84:	xor    edx,edx
   140017a86:	lea    rcx,[rbx+0x8]
   140017a8a:	call   0x140023680
   140017a8f:	test   al,al
   140017a91:	jne    0x140017b39
   140017a97:	cmp    BYTE PTR [rbx+0x2c0],0x0
   140017a9e:	je     0x140017ab0
   140017aa0:	mov    rcx,rbx
   140017aa3:	call   0x140016f60
   140017aa8:	test   al,al
   140017aaa:	je     0x140017bdc
   140017ab0:	lea    rcx,[rsp+0x20]
   140017ab5:	call   0x140022c10
   140017aba:	lea    rdx,[rsp+0x20]
   140017abf:	lea    rcx,[rbx+0x8]
   140017ac3:	call   0x140022fc0
   140017ac8:	test   al,al
   140017aca:	je     0x140017bb6
   140017ad0:	xor    r8d,r8d
   140017ad3:	lea    rdx,[rip+0x1f072]        # 0x140036b4c
   140017ada:	lea    rcx,[rbx+0x8]
   140017ade:	call   0x140022f20
   140017ae3:	lea    rcx,[rsp+0x20]
   140017ae8:	test   al,al
   140017aea:	je     0x140017b9c
   140017af0:	call   0x140022dc0
   140017af5:	xor    r8d,r8d
   140017af8:	mov    rdx,rax
   140017afb:	mov    rcx,r14
   140017afe:	call   0x140011690
   140017b03:	mov    rdx,rax
   140017b06:	mov    rcx,rbx
   140017b09:	call   0x140017cf0
   140017b0e:	lea    rcx,[rsp+0x20]
   140017b13:	test   al,al
   140017b15:	je     0x140017b82
   140017b17:	call   0x140022d40
   140017b1c:	xor    r9d,r9d
   140017b1f:	lea    r8,[rip+0x1ec62]        # 0x140036788
   140017b26:	xor    edx,edx
   140017b28:	lea    rcx,[rbx+0x8]
   140017b2c:	call   0x140023680
   140017b31:	test   al,al
   140017b33:	je     0x140017a97
   140017b39:	xor    r8d,r8d
   140017b3c:	lea    rdx,[rip+0x1ec45]        # 0x140036788
   140017b43:	lea    rcx,[rbx+0x8]
   140017b47:	call   0x140022f20
   140017b4c:	mov    bl,0x1
   140017b4e:	lea    rcx,[rsp+0x48]
   140017b53:	call   0x140022d40
   140017b58:	lea    rcx,[rsp+0x70]
   140017b5d:	call   0x140022d40
   140017b62:	lea    r11,[rsp+0x1b0]
   140017b6a:	movzx  eax,bl
   140017b6d:	mov    rbx,QWORD PTR [r11+0x10]
   140017b71:	mov    rsi,QWORD PTR [r11+0x18]
   140017b75:	mov    rdi,QWORD PTR [r11+0x20]
   140017b79:	mov    r14,QWORD PTR [r11+0x28]
   140017b7d:	mov    rsp,r11
   140017b80:	pop    rbp
   140017b81:	ret    
   140017b82:	call   0x140022dc0
   140017b87:	mov    r8,rax
   140017b8a:	lea    rdx,[rip+0x1efe7]        # 0x140036b78
   140017b91:	lea    rcx,[rbp-0x68]
   140017b95:	call   0x140001600
   140017b9a:	jmp    0x140017bc6
   140017b9c:	call   0x140022dc0
   140017ba1:	mov    r8,rax
   140017ba4:	lea    rdx,[rip+0x1f27d]        # 0x140036e28
   140017bab:	lea    rcx,[rbp-0x68]
   140017baf:	call   0x140001600
   140017bb4:	jmp    0x140017bc6
   140017bb6:	lea    rdx,[rip+0x1f243]        # 0x140036e00
   140017bbd:	lea    rcx,[rbp-0x68]
   140017bc1:	call   0x140001600
   140017bc6:	lea    rdx,[rax+0x9]
   140017bca:	mov    rcx,rbx
   140017bcd:	call   0x140017ee0
   140017bd2:	lea    rcx,[rsp+0x20]
   140017bd7:	call   0x140022d40
   140017bdc:	xor    bl,bl
   140017bde:	jmp    0x140017b4e
   140017be3:	int3   
   140017be4:	int3   
   140017be5:	int3   
   140017be6:	int3   
   140017be7:	int3   
   140017be8:	int3   
   140017be9:	int3   
   140017bea:	int3   
   140017beb:	int3   
   140017bec:	int3   
   140017bed:	int3   
   140017bee:	int3   
   140017bef:	int3   
   140017bf0:	mov    QWORD PTR [rsp+0x8],rbx
   140017bf5:	mov    QWORD PTR [rsp+0x10],rsi
   140017bfa:	push   rdi
   140017bfb:	sub    rsp,0x50
   140017bff:	mov    rbx,rcx
   140017c02:	mov    rdi,rdx
   140017c05:	lea    rcx,[rsp+0x20]
   140017c0a:	call   0x140022c10
   140017c0f:	xor    r8d,r8d
   140017c12:	lea    rdx,[rip+0x1f287]        # 0x140036ea0
   140017c19:	lea    rcx,[rbx+0x8]
   140017c1d:	call   0x140022f20
   140017c22:	test   al,al
   140017c24:	je     0x140017c35
   140017c26:	mov    rcx,rdi
   140017c29:	call   0x1400117f0
   140017c2e:	mov    bl,0x1
   140017c30:	jmp    0x140017cc7
   140017c35:	lea    rdx,[rsp+0x20]
   140017c3a:	lea    rcx,[rbx+0x8]
   140017c3e:	call   0x140022fc0
   140017c43:	test   al,al
   140017c45:	je     0x140017cb6
   140017c47:	mov    rcx,rdi
   140017c4a:	call   0x1400117f0
   140017c4f:	movsxd rsi,DWORD PTR [rbx+0x2f8]
   140017c56:	cmp    esi,DWORD PTR [rbx+0x308]
   140017c5c:	jne    0x140017c6f
   140017c5e:	lea    rcx,[rbx+0x300]
   140017c65:	mov    edx,0x1
   140017c6a:	call   0x140023260
   140017c6f:	inc    DWORD PTR [rbx+0x2f8]
   140017c75:	mov    rcx,rsi
   140017c78:	mov    rdx,QWORD PTR [rbx+0x300]
   140017c7f:	shl    rcx,0x4
   140017c83:	add    rdx,rcx
   140017c86:	je     0x140017c8f
   140017c88:	mov    QWORD PTR [rdx],0x0
   140017c8f:	mov    rbx,QWORD PTR [rbx+0x300]
   140017c96:	add    rbx,rcx
   140017c99:	lea    rcx,[rsp+0x20]
   140017c9e:	call   0x140022dc0
   140017ca3:	mov    rdx,rax
   140017ca6:	mov    rcx,rbx
   140017ca9:	call   0x14001aae0
   140017cae:	mov    QWORD PTR [rbx+0x8],rdi
   140017cb2:	mov    bl,0x1
   140017cb4:	jmp    0x140017cc7
   140017cb6:	lea    rdx,[rip+0x1f203]        # 0x140036ec0
   140017cbd:	mov    rcx,rbx
   140017cc0:	call   0x140017ee0
   140017cc5:	xor    bl,bl
   140017cc7:	lea    rcx,[rsp+0x20]
   140017ccc:	call   0x140022d40
   140017cd1:	mov    rsi,QWORD PTR [rsp+0x68]
   140017cd6:	movzx  eax,bl
   140017cd9:	mov    rbx,QWORD PTR [rsp+0x60]
   140017cde:	add    rsp,0x50
   140017ce2:	pop    rdi
   140017ce3:	ret    
   140017ce4:	int3   
   140017ce5:	int3   
   140017ce6:	int3   
   140017ce7:	int3   
   140017ce8:	int3   
   140017ce9:	int3   
   140017cea:	int3   
   140017ceb:	int3   
   140017cec:	int3   
   140017ced:	int3   
   140017cee:	int3   
   140017cef:	int3   
   140017cf0:	mov    QWORD PTR [rsp+0x8],rbx
   140017cf5:	mov    QWORD PTR [rsp+0x10],rsi
   140017cfa:	push   rdi
   140017cfb:	sub    rsp,0x20
   140017cff:	mov    rsi,rdx
   140017d02:	lea    r8,[rip+0x1eebf]        # 0x140036bc8
   140017d09:	mov    rdi,rcx
   140017d0c:	xor    edx,edx
   140017d0e:	add    rcx,0x8
   140017d12:	xor    r9d,r9d
   140017d15:	call   0x140023680
   140017d1a:	test   al,al
   140017d1c:	jne    0x140017e3d
   140017d22:	xor    r9d,r9d
   140017d25:	lea    r8,[rip+0x1f148]        # 0x140036e74
   140017d2c:	xor    edx,edx
   140017d2e:	lea    rcx,[rdi+0x8]
   140017d32:	call   0x140023680
   140017d37:	test   al,al
   140017d39:	jne    0x140017e3d
   140017d3f:	xor    r8d,r8d
   140017d42:	lea    rdx,[rip+0x1f153]        # 0x140036e9c
   140017d49:	lea    rcx,[rdi+0x8]
   140017d4d:	call   0x140022f20
   140017d52:	test   al,al
   140017d54:	jne    0x140017e23
   140017d5a:	xor    r9d,r9d
   140017d5d:	lea    r8,[rip+0x1f13c]        # 0x140036ea0
   140017d64:	xor    edx,edx
   140017d66:	lea    rcx,[rdi+0x8]
   140017d6a:	call   0x140023680
   140017d6f:	test   al,al
   140017d71:	jne    0x140017e23
   140017d77:	xor    edx,edx
   140017d79:	lea    rcx,[rdi+0x8]
   140017d7d:	call   0x1400236e0
   140017d82:	test   al,al
   140017d84:	je     0x140017dd9
   140017d86:	xor    r9d,r9d
   140017d89:	lea    r8,[rip+0x1ec38]        # 0x1400369c8
   140017d90:	lea    rcx,[rdi+0x8]
   140017d94:	lea    edx,[r9+0x1]
   140017d98:	call   0x140023680
   140017d9d:	test   al,al
   140017d9f:	jne    0x140017dbc
   140017da1:	xor    r9d,r9d
   140017da4:	lea    r8,[rip+0x1ec1d]        # 0x1400369c8
   140017dab:	lea    rcx,[rdi+0x8]
   140017daf:	lea    edx,[r9+0x2]
   140017db3:	call   0x140023680
   140017db8:	test   al,al
   140017dba:	je     0x140017dd9
   140017dbc:	xor    r8d,r8d
   140017dbf:	mov    rdx,rsi
   140017dc2:	mov    rcx,rdi
   140017dc5:	mov    rbx,QWORD PTR [rsp+0x30]
   140017dca:	mov    rsi,QWORD PTR [rsp+0x38]
   140017dcf:	add    rsp,0x20
   140017dd3:	pop    rdi
   140017dd4:	jmp    0x140017970
   140017dd9:	xor    r9d,r9d
   140017ddc:	lea    r8,[rip+0x1ebe5]        # 0x1400369c8
   140017de3:	xor    edx,edx
   140017de5:	lea    rcx,[rdi+0x8]
   140017de9:	call   0x140023680
   140017dee:	mov    rdx,rsi
   140017df1:	mov    rcx,rdi
   140017df4:	test   al,al
   140017df6:	je     0x140017e0f
   140017df8:	xor    r8d,r8d
   140017dfb:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e00:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e05:	add    rsp,0x20
   140017e09:	pop    rdi
   140017e0a:	jmp    0x140017970
   140017e0f:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e14:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e19:	add    rsp,0x20
   140017e1d:	pop    rdi
   140017e1e:	jmp    0x140017770
   140017e23:	mov    rdx,rsi
   140017e26:	mov    rcx,rdi
   140017e29:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e2e:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e33:	add    rsp,0x20
   140017e37:	pop    rdi
   140017e38:	jmp    0x140017bf0
   140017e3d:	mov    rdx,rsi
   140017e40:	mov    rcx,rdi
   140017e43:	mov    rbx,QWORD PTR [rsp+0x30]
   140017e48:	mov    rsi,QWORD PTR [rsp+0x38]
   140017e4d:	add    rsp,0x20
   140017e51:	pop    rdi
   140017e52:	jmp    0x1400173a0
   140017e57:	int3   
   140017e58:	int3   
   140017e59:	int3   
   140017e5a:	int3   
   140017e5b:	int3   
   140017e5c:	int3   
   140017e5d:	int3   
   140017e5e:	int3   
   140017e5f:	int3   
   140017e60:	mov    QWORD PTR [rsp+0x10],rbx
   140017e65:	push   rsi
   140017e66:	sub    rsp,0x20
   140017e6a:	mov    eax,DWORD PTR [rcx]
   140017e6c:	mov    rsi,rcx
   140017e6f:	sub    eax,0x1
   140017e72:	movsxd rbx,eax
   140017e75:	js     0x140017ec2
   140017e77:	mov    QWORD PTR [rsp+0x30],rdi
   140017e7c:	lea    rdi,[rbx+rbx*2]
   140017e80:	shl    rdi,0x3
   140017e84:	nop    DWORD PTR [rax+0x0]
   140017e88:	nop    DWORD PTR [rax+rax*1+0x0]
   140017e90:	mov    rcx,QWORD PTR [rsi+0x8]
   140017e94:	add    rcx,rdi
   140017e97:	cmp    QWORD PTR [rcx],0x0
   140017e9b:	je     0x140017ea2
   140017e9d:	call   0x14001b030
   140017ea2:	sub    rdi,0x18
   140017ea6:	sub    rbx,0x1
   140017eaa:	jns    0x140017e90
   140017eac:	mov    DWORD PTR [rsi],0x0
   140017eb2:	mov    rdi,QWORD PTR [rsp+0x30]
   140017eb7:	mov    rbx,QWORD PTR [rsp+0x38]
   140017ebc:	add    rsp,0x20
   140017ec0:	pop    rsi
   140017ec1:	ret    
   140017ec2:	mov    DWORD PTR [rcx],0x0
   140017ec8:	mov    rbx,QWORD PTR [rsp+0x38]
   140017ecd:	add    rsp,0x20
   140017ed1:	pop    rsi
   140017ed2:	ret    
   140017ed3:	int3   
   140017ed4:	int3   
   140017ed5:	int3   
   140017ed6:	int3   
   140017ed7:	int3   
   140017ed8:	int3   
   140017ed9:	int3   
   140017eda:	int3   
   140017edb:	int3   
   140017edc:	int3   
   140017edd:	int3   
   140017ede:	int3   
   140017edf:	int3   
   140017ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140017ee5:	mov    QWORD PTR [rsp+0x10],rbp
   140017eea:	mov    QWORD PTR [rsp+0x18],rsi
   140017eef:	push   rdi
   140017ef0:	sub    rsp,0x170
   140017ef7:	mov    rdi,rcx
   140017efa:	mov    rbp,rdx
   140017efd:	lea    rcx,[rsp+0x30]
   140017f02:	call   0x140022c10
   140017f07:	lea    r8,[rsp+0x30]
   140017f0c:	xor    edx,edx
   140017f0e:	lea    rcx,[rdi+0x8]
   140017f12:	call   0x140023780
   140017f17:	test   al,al
   140017f19:	je     0x140017f4f
   140017f1b:	lea    rcx,[rsp+0x30]
   140017f20:	call   0x140022dc0
   140017f25:	lea    rcx,[rdi+0x8]
   140017f29:	mov    rbx,rax
   140017f2c:	call   0x140023230
   140017f31:	mov    r8d,eax
   140017f34:	mov    QWORD PTR [rsp+0x20],rbp
   140017f39:	mov    r9,rbx
   140017f3c:	lea    rdx,[rip+0x1e93d]        # 0x140036880
   140017f43:	lea    rcx,[rsp+0x58]
   140017f48:	call   0x140001600
   140017f4d:	jmp    0x140017f6f
   140017f4f:	lea    rcx,[rdi+0x8]
   140017f53:	call   0x140023230
   140017f58:	mov    r8d,eax
   140017f5b:	lea    rdx,[rip+0x1e936]        # 0x140036898
   140017f62:	mov    r9,rbp
   140017f65:	lea    rcx,[rsp+0x58]
   140017f6a:	call   0x140001600
   140017f6f:	lea    rdx,[rax+0x9]
   140017f73:	mov    BYTE PTR [rdi],0x0
   140017f76:	lea    rcx,[rip+0x1ee43]        # 0x140036dc0
   140017f7d:	mov    rbx,rax
   140017f80:	call   QWORD PTR [rip+0x1a432]        # 0x1400323b8
   140017f86:	mov    rcx,QWORD PTR [rdi+0x2d0]
   140017f8d:	test   rcx,rcx
   140017f90:	je     0x140017fae
   140017f92:	lea    rdx,[rbx+0x9]
   140017f96:	call   0x14001ac10
   140017f9b:	mov    rcx,QWORD PTR [rdi+0x2d0]
   140017fa2:	lea    rdx,[rip+0x1c38f]        # 0x140034338
   140017fa9:	call   0x14001ac10
   140017fae:	lea    rcx,[rsp+0x30]
   140017fb3:	call   0x140022d40
   140017fb8:	lea    r11,[rsp+0x170]
   140017fc0:	mov    rbx,QWORD PTR [r11+0x10]
   140017fc4:	mov    rbp,QWORD PTR [r11+0x18]
   140017fc8:	mov    rsi,QWORD PTR [r11+0x20]
   140017fcc:	mov    rsp,r11
   140017fcf:	pop    rdi
   140017fd0:	ret    
   140017fd1:	int3   
   140017fd2:	int3   
   140017fd3:	int3   
   140017fd4:	int3   
   140017fd5:	int3   
   140017fd6:	int3   
   140017fd7:	int3   
   140017fd8:	int3   
   140017fd9:	int3   
   140017fda:	int3   
   140017fdb:	int3   
   140017fdc:	int3   
   140017fdd:	int3   
   140017fde:	int3   
   140017fdf:	int3   
   140017fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140017fe5:	push   rdi
   140017fe6:	sub    rsp,0x20
   140017fea:	mov    rbx,rcx
   140017fed:	mov    BYTE PTR [rcx],0x0
   140017ff0:	lea    rcx,[rip+0x1edc9]        # 0x140036dc0
   140017ff7:	mov    rdi,rdx
   140017ffa:	call   QWORD PTR [rip+0x1a3b8]        # 0x1400323b8
   140018000:	mov    rcx,QWORD PTR [rbx+0x2d0]
   140018007:	test   rcx,rcx
   14001800a:	je     0x140018027
   14001800c:	mov    rdx,rdi
   14001800f:	call   0x14001ac10
   140018014:	mov    rcx,QWORD PTR [rbx+0x2d0]
   14001801b:	lea    rdx,[rip+0x1c316]        # 0x140034338
   140018022:	call   0x14001ac10
   140018027:	mov    rbx,QWORD PTR [rsp+0x30]
   14001802c:	add    rsp,0x20
   140018030:	pop    rdi
   140018031:	ret    
   140018032:	int3   
   140018033:	int3   
   140018034:	int3   
   140018035:	int3   
   140018036:	int3   
   140018037:	int3   
   140018038:	int3   
   140018039:	int3   
   14001803a:	int3   
   14001803b:	int3   
   14001803c:	int3   
   14001803d:	int3   
   14001803e:	int3   
   14001803f:	int3   
   140018040:	mov    QWORD PTR [rsp+0x8],rbx
   140018045:	mov    QWORD PTR [rsp+0x10],rbp
   14001804a:	mov    QWORD PTR [rsp+0x18],rsi
   14001804f:	push   rdi
   140018050:	push   r12
   140018052:	push   r13
   140018054:	push   r14
   140018056:	push   r15
   140018058:	sub    rsp,0x130
   14001805f:	movsxd r13,DWORD PTR [rcx+0x2f8]
   140018066:	xor    r15d,r15d
   140018069:	mov    rsi,rcx
   14001806c:	test   r13,r13
   14001806f:	jle    0x1400180f0
   140018071:	xor    r12d,r12d
   140018074:	mov    r14,QWORD PTR [rsi+0x300]
   14001807b:	xor    ebx,ebx
   14001807d:	add    r14,r12
   140018080:	cmp    DWORD PTR [rsi+0x2e0],ebx
   140018086:	jle    0x1400180c3
   140018088:	xor    edi,edi
   14001808a:	nop    WORD PTR [rax+rax*1+0x0]
   140018090:	mov    rbp,QWORD PTR [rsi+0x2e8]
   140018097:	mov    rcx,r14
   14001809a:	add    rbp,rdi
   14001809d:	call   0x14001b050
   1400180a2:	mov    rdx,rax
   1400180a5:	mov    rcx,rbp
   1400180a8:	call   0x14001b0d0
   1400180ad:	test   al,al
   1400180af:	jne    0x14001813d
   1400180b5:	inc    ebx
   1400180b7:	add    rdi,0x18
   1400180bb:	cmp    ebx,DWORD PTR [rsi+0x2e0]
   1400180c1:	jl     0x140018090
   1400180c3:	cmp    BYTE PTR [rip+0x2fdb6],0x0        # 0x140047e80
   1400180ca:	mov    rcx,r14
   1400180cd:	je     0x14001818b
   1400180d3:	call   0x14001b050
   1400180d8:	mov    rcx,QWORD PTR [r14+0x8]
   1400180dc:	mov    rdx,rax
   1400180df:	call   0x1400116c0
   1400180e4:	inc    r15
   1400180e7:	add    r12,0x10
   1400180eb:	cmp    r15,r13
   1400180ee:	jl     0x140018074
   1400180f0:	mov    rdx,QWORD PTR [rip+0x2dfd1]        # 0x1400460c8
   1400180f7:	xor    r8d,r8d
   1400180fa:	mov    rcx,QWORD PTR [rsi+0x2c8]
   140018101:	call   0x14000e270
   140018106:	test   rax,rax
   140018109:	je     0x14001811a
   14001810b:	mov    rcx,QWORD PTR [rsi+0x2c8]
   140018112:	mov    rdx,rax
   140018115:	call   0x140011000
   14001811a:	mov    al,0x1
   14001811c:	lea    r11,[rsp+0x130]
   140018124:	mov    rbx,QWORD PTR [r11+0x30]
   140018128:	mov    rbp,QWORD PTR [r11+0x38]
   14001812c:	mov    rsi,QWORD PTR [r11+0x40]
   140018130:	mov    rsp,r11
   140018133:	pop    r15
   140018135:	pop    r14
   140018137:	pop    r13
   140018139:	pop    r12
   14001813b:	pop    rdi
   14001813c:	ret    
   14001813d:	cmp    BYTE PTR [rbp+0x10],0x0
   140018141:	jne    0x14001815f
   140018143:	mov    rdx,QWORD PTR [rbp+0x8]
   140018147:	mov    BYTE PTR [rbp+0x10],0x1
   14001814b:	test   rdx,rdx
   14001814e:	je     0x1400180c3
   140018154:	mov    rcx,QWORD PTR [r14+0x8]
   140018158:	call   0x140010040
   14001815d:	jmp    0x1400180e4
   14001815f:	mov    rcx,r14
   140018162:	call   0x14001b050
   140018167:	lea    rdx,[rip+0x1edaa]        # 0x140036f18
   14001816e:	mov    r8,rax
   140018171:	lea    rcx,[rsp+0x20]
   140018176:	call   0x140001600
   14001817b:	mov    rcx,rsi
   14001817e:	lea    rdx,[rax+0x9]
   140018182:	call   0x140017ee0
   140018187:	xor    al,al
   140018189:	jmp    0x14001811c
   14001818b:	call   0x14001b050
   140018190:	lea    rdx,[rip+0x1edb1]        # 0x140036f48
   140018197:	jmp    0x14001816e
   140018199:	int3   
   14001819a:	int3   
   14001819b:	int3   
   14001819c:	int3   
   14001819d:	int3   
   14001819e:	int3   
   14001819f:	int3   
   1400181a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400181a5:	push   rdi
   1400181a6:	sub    rsp,0x20
   1400181aa:	xor    edi,edi
   1400181ac:	mov    rbx,rcx
   1400181af:	mov    DWORD PTR [rcx],edi
   1400181b1:	test   DWORD PTR [rcx+0x14],0xc0000000
   1400181b8:	jne    0x1400181da
   1400181ba:	mov    rdx,QWORD PTR [rcx+0x8]
   1400181be:	test   rdx,rdx
   1400181c1:	je     0x1400181d7
   1400181c3:	mov    rax,QWORD PTR [rip+0x1a1c6]        # 0x140032390
   1400181ca:	mov    rcx,QWORD PTR [rax]
   1400181cd:	mov    rax,QWORD PTR [rcx]
   1400181d0:	call   QWORD PTR [rax+0x28]
   1400181d3:	mov    QWORD PTR [rbx+0x8],rdi
   1400181d7:	mov    DWORD PTR [rbx+0x10],edi
   1400181da:	test   DWORD PTR [rbx+0x14],0xc0000000
   1400181e1:	jne    0x140018203
   1400181e3:	mov    rdx,QWORD PTR [rbx+0x8]
   1400181e7:	test   rdx,rdx
   1400181ea:	je     0x140018200
   1400181ec:	mov    rax,QWORD PTR [rip+0x1a19d]        # 0x140032390
   1400181f3:	mov    rcx,QWORD PTR [rax]
   1400181f6:	mov    rax,QWORD PTR [rcx]
   1400181f9:	call   QWORD PTR [rax+0x28]
   1400181fc:	mov    QWORD PTR [rbx+0x8],rdi
   140018200:	mov    DWORD PTR [rbx+0x10],edi
   140018203:	mov    rbx,QWORD PTR [rsp+0x30]
   140018208:	add    rsp,0x20
   14001820c:	pop    rdi
   14001820d:	ret    
   14001820e:	int3   
   14001820f:	int3   
   140018210:	mov    QWORD PTR [rsp+0x10],rbx
   140018215:	mov    QWORD PTR [rsp+0x18],rsi
   14001821a:	mov    QWORD PTR [rsp+0x20],rdi
   14001821f:	push   rbp
   140018220:	push   r14
   140018222:	push   r15
   140018224:	lea    rbp,[rsp-0x3f]
   140018229:	sub    rsp,0xb0
   140018230:	xor    r15d,r15d
   140018233:	mov    BYTE PTR [rcx+0x18],0x0
   140018237:	mov    rsi,rdx
   14001823a:	mov    DWORD PTR [rbp-0x41],r15d
   14001823e:	mov    rdi,rcx
   140018241:	mov    QWORD PTR [rbp-0x39],r15
   140018245:	lea    rcx,[rbp-0x39]
   140018249:	mov    DWORD PTR [rbp-0x31],0x8
   140018250:	lea    edx,[r15+0x8]
   140018254:	mov    DWORD PTR [rbp-0x2d],0x80000000
   14001825b:	mov    r14,r9
   14001825e:	mov    rbx,r8
   140018261:	call   0x14000db40
   140018266:	lea    rax,[rbp-0x39]
   14001826a:	test   al,0x7
   14001826c:	je     0x140018279
   14001826e:	call   QWORD PTR [rip+0x1a33c]        # 0x1400325b0
   140018274:	test   eax,eax
   140018276:	je     0x140018279
   140018278:	int3   
   140018279:	lea    rax,[rbp-0x29]
   14001827d:	mov    r9,r14
   140018280:	mov    r8,rbx
   140018283:	mov    QWORD PTR [rbp-0x39],rax
   140018287:	lea    rdx,[rbp-0x41]
   14001828b:	mov    rcx,rdi
   14001828e:	call   0x1400184b0
   140018293:	test   al,al
   140018295:	jne    0x140018373
   14001829b:	mov    rdi,QWORD PTR [rbp+0x7f]
   14001829f:	test   rdi,rdi
   1400182a2:	je     0x14001846e
   1400182a8:	mov    rdx,QWORD PTR [rbx]
   1400182ab:	lea    rsi,[rip+0x1e44e]        # 0x140036700
   1400182b2:	mov    QWORD PTR [rbp+0x5f],r15
   1400182b6:	mov    QWORD PTR [rbp-0x51],r15
   1400182ba:	test   rdx,rdx
   1400182bd:	je     0x1400182c4
   1400182bf:	cmp    BYTE PTR [rdx],r15b
   1400182c2:	jne    0x1400182e4
   1400182c4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400182c8:	lea    rdx,[rbp+0x17]
   1400182cc:	mov    r8d,0x25
   1400182d2:	call   QWORD PTR [rip+0x19fa0]        # 0x140032278
   1400182d8:	cmp    BYTE PTR [rbp+0x17],r15b
   1400182dc:	lea    rdx,[rbp+0x17]
   1400182e0:	cmove  rdx,rsi
   1400182e4:	lea    rcx,[rbp+0x5f]
   1400182e8:	call   0x14001aae0
   1400182ed:	mov    rdx,QWORD PTR [rbx]
   1400182f0:	test   rdx,rdx
   1400182f3:	je     0x1400182fa
   1400182f5:	cmp    BYTE PTR [rdx],r15b
   1400182f8:	jne    0x14001831a
   1400182fa:	mov    rcx,QWORD PTR [rbx+0x8]
   1400182fe:	lea    rdx,[rbp+0x17]
   140018302:	mov    r8d,0x25
   140018308:	call   QWORD PTR [rip+0x19f6a]        # 0x140032278
   14001830e:	cmp    BYTE PTR [rbp+0x17],r15b
   140018312:	lea    rdx,[rbp+0x17]
   140018316:	cmove  rdx,rsi
   14001831a:	lea    rcx,[rbp+0x5f]
   14001831e:	call   0x14001aae0
   140018323:	lea    rcx,[rbp-0x51]
   140018327:	call   0x14001b050
   14001832c:	lea    rcx,[rbp+0x5f]
   140018330:	mov    rbx,rax
   140018333:	call   0x14001b050
   140018338:	mov    r8,rax
   14001833b:	lea    rdx,[rip+0x1ed76]        # 0x1400370b8
   140018342:	mov    r9,rbx
   140018345:	mov    rcx,rdi
   140018348:	call   0x14001ae50
   14001834d:	cmp    QWORD PTR [rbp-0x51],r15
   140018351:	je     0x14001835c
   140018353:	lea    rcx,[rbp-0x51]
   140018357:	call   0x14001b030
   14001835c:	cmp    QWORD PTR [rbp+0x5f],r15
   140018360:	je     0x14001846e
   140018366:	lea    rcx,[rbp+0x5f]
   14001836a:	call   0x14001b030
   14001836f:	xor    bl,bl
   140018371:	jmp    0x1400183bb
   140018373:	mov    ebx,r15d
   140018376:	cmp    DWORD PTR [rbp-0x41],ebx
   140018379:	jle    0x1400183b9
   14001837b:	mov    rdi,r15
   14001837e:	xchg   ax,ax
   140018380:	mov    rax,QWORD PTR [rbp-0x39]
   140018384:	lea    rcx,[rbp-0x51]
   140018388:	mov    rdx,QWORD PTR [rdi+rax*1]
   14001838c:	mov    QWORD PTR [rbp-0x51],r15
   140018390:	mov    QWORD PTR [rbp-0x49],rsi
   140018394:	call   QWORD PTR [rdx]
   140018396:	cmp    eax,0x1
   140018399:	jne    0x14001844d
   14001839f:	cmp    QWORD PTR [rbp-0x51],r15
   1400183a3:	je     0x1400183ae
   1400183a5:	lea    rcx,[rbp-0x51]
   1400183a9:	call   0x14001b030
   1400183ae:	inc    ebx
   1400183b0:	add    rdi,0x8
   1400183b4:	cmp    ebx,DWORD PTR [rbp-0x41]
   1400183b7:	jl     0x140018380
   1400183b9:	mov    bl,0x1
   1400183bb:	mov    rdx,QWORD PTR [rbp-0x39]
   1400183bf:	mov    DWORD PTR [rbp-0x41],r15d
   1400183c3:	cmp    DWORD PTR [rbp-0x31],r15d
   1400183c7:	jl     0x14001840e
   1400183c9:	lea    rax,[rbp-0x29]
   1400183cd:	cmp    rdx,rax
   1400183d0:	je     0x14001840e
   1400183d2:	test   rdx,rdx
   1400183d5:	je     0x1400183f0
   1400183d7:	test   DWORD PTR [rbp-0x2d],0xc0000000
   1400183de:	jne    0x1400183f0
   1400183e0:	mov    rax,QWORD PTR [rip+0x19fa9]        # 0x140032390
   1400183e7:	mov    rcx,QWORD PTR [rax]
   1400183ea:	mov    rax,QWORD PTR [rcx]
   1400183ed:	call   QWORD PTR [rax+0x28]
   1400183f0:	mov    eax,DWORD PTR [rbp-0x2d]
   1400183f3:	lea    rdx,[rbp-0x29]
   1400183f7:	and    eax,0x3fffffff
   1400183fc:	mov    QWORD PTR [rbp-0x39],rdx
   140018400:	bts    eax,0x1f
   140018404:	mov    DWORD PTR [rbp-0x31],0x8
   14001840b:	mov    DWORD PTR [rbp-0x2d],eax
   14001840e:	test   DWORD PTR [rbp-0x2d],0xc0000000
   140018415:	jne    0x14001842d
   140018417:	test   rdx,rdx
   14001841a:	je     0x14001842d
   14001841c:	mov    rcx,QWORD PTR [rip+0x19f6d]        # 0x140032390
   140018423:	mov    rcx,QWORD PTR [rcx]
   140018426:	mov    r8,QWORD PTR [rcx]
   140018429:	call   QWORD PTR [r8+0x28]
   14001842d:	lea    r11,[rsp+0xb0]
   140018435:	movzx  eax,bl
   140018438:	mov    rbx,QWORD PTR [r11+0x28]
   14001843c:	mov    rsi,QWORD PTR [r11+0x30]
   140018440:	mov    rdi,QWORD PTR [r11+0x38]
   140018444:	mov    rsp,r11
   140018447:	pop    r15
   140018449:	pop    r14
   14001844b:	pop    rbp
   14001844c:	ret    
   14001844d:	mov    rcx,QWORD PTR [rbp+0x7f]
   140018451:	test   rcx,rcx
   140018454:	je     0x14001845f
   140018456:	lea    rdx,[rbp-0x51]
   14001845a:	call   0x14001aa90
   14001845f:	cmp    QWORD PTR [rbp-0x51],r15
   140018463:	je     0x14001846e
   140018465:	lea    rcx,[rbp-0x51]
   140018469:	call   0x14001b030
   14001846e:	xor    bl,bl
   140018470:	jmp    0x1400183bb
   140018475:	int3   
   140018476:	int3   
   140018477:	int3   
   140018478:	int3   
   140018479:	int3   
   14001847a:	int3   
   14001847b:	int3   
   14001847c:	int3   
   14001847d:	int3   
   14001847e:	int3   
   14001847f:	int3   
   140018480:	sub    rsp,0x38
   140018484:	mov    QWORD PTR [rsp+0x20],r9
   140018489:	mov    r9,r8
   14001848c:	mov    r8,rdx
   14001848f:	mov    rdx,rcx
   140018492:	lea    rcx,[rip+0x2dc37]        # 0x1400460d0
   140018499:	call   0x140018210
   14001849e:	add    rsp,0x38
   1400184a2:	ret    
   1400184a3:	int3   
   1400184a4:	int3   
   1400184a5:	int3   
   1400184a6:	int3   
   1400184a7:	int3   
   1400184a8:	int3   
   1400184a9:	int3   
   1400184aa:	int3   
   1400184ab:	int3   
   1400184ac:	int3   
   1400184ad:	int3   
   1400184ae:	int3   
   1400184af:	int3   
   1400184b0:	mov    QWORD PTR [rsp+0x20],r9
   1400184b5:	mov    QWORD PTR [rsp+0x18],r8
   1400184ba:	mov    QWORD PTR [rsp+0x10],rdx
   1400184bf:	push   rbp
   1400184c0:	sub    rsp,0x30
   1400184c4:	mov    rbp,rcx
   1400184c7:	mov    r10,rdx
   1400184ca:	mov    rcx,QWORD PTR [r8+0x8]
   1400184ce:	mov    rdx,QWORD PTR [r9+0x8]
   1400184d2:	mov    rax,QWORD PTR [rcx]
   1400184d5:	cmp    rax,QWORD PTR [rdx]
   1400184d8:	jne    0x1400184ec
   1400184da:	mov    rax,QWORD PTR [rcx+0x8]
   1400184de:	cmp    rax,QWORD PTR [rdx+0x8]
   1400184e2:	jne    0x1400184ec
   1400184e4:	mov    al,0x1
   1400184e6:	add    rsp,0x30
   1400184ea:	pop    rbp
   1400184eb:	ret    
   1400184ec:	mov    QWORD PTR [rsp+0x40],rbx
   1400184f1:	mov    QWORD PTR [rsp+0x28],rsi
   1400184f6:	mov    QWORD PTR [rsp+0x20],rdi
   1400184fb:	xor    edi,edi
   1400184fd:	cmp    DWORD PTR [rbp+0x0],edi
   140018500:	jle    0x14001856c
   140018502:	mov    esi,edi
   140018504:	nop    DWORD PTR [rax+0x0]
   140018508:	nop    DWORD PTR [rax+rax*1+0x0]
   140018510:	mov    rax,QWORD PTR [rbp+0x8]
   140018514:	mov    rdx,QWORD PTR [r9+0x8]
   140018518:	mov    rbx,QWORD PTR [rsi+rax*1]
   14001851c:	mov    rcx,QWORD PTR [rbx+0x20]
   140018520:	mov    rax,QWORD PTR [rcx]
   140018523:	cmp    rax,QWORD PTR [rdx]
   140018526:	jne    0x140018561
   140018528:	mov    rax,QWORD PTR [rcx+0x8]
   14001852c:	cmp    rax,QWORD PTR [rdx+0x8]
   140018530:	jne    0x140018561
   140018532:	cmp    BYTE PTR [rbx+0x28],0x0
   140018536:	jne    0x140018561
   140018538:	lea    r9,[rbx+0x8]
   14001853c:	mov    BYTE PTR [rbx+0x28],0x1
   140018540:	mov    rdx,r10
   140018543:	mov    rcx,rbp
   140018546:	call   0x1400184b0
   14001854b:	test   al,al
   14001854d:	jne    0x140018583
   14001854f:	mov    r10,QWORD PTR [rsp+0x48]
   140018554:	mov    r9,QWORD PTR [rsp+0x58]
   140018559:	mov    r8,QWORD PTR [rsp+0x50]
   14001855e:	mov    BYTE PTR [rbx+0x28],al
   140018561:	inc    edi
   140018563:	add    rsi,0x8
   140018567:	cmp    edi,DWORD PTR [rbp+0x0]
   14001856a:	jl     0x140018510
   14001856c:	xor    al,al
   14001856e:	mov    rsi,QWORD PTR [rsp+0x28]
   140018573:	mov    rbx,QWORD PTR [rsp+0x40]
   140018578:	mov    rdi,QWORD PTR [rsp+0x20]
   14001857d:	add    rsp,0x30
   140018581:	pop    rbp
   140018582:	ret    
   140018583:	mov    rdi,QWORD PTR [rsp+0x48]
   140018588:	movsxd rsi,DWORD PTR [rdi]
   14001858b:	cmp    esi,DWORD PTR [rdi+0x10]
   14001858e:	jne    0x14001859e
   140018590:	lea    rcx,[rdi+0x8]
   140018594:	mov    edx,0x1
   140018599:	call   0x140013420
   14001859e:	mov    rax,QWORD PTR [rdi+0x8]
   1400185a2:	inc    DWORD PTR [rdi]
   1400185a4:	lea    rdx,[rax+rsi*8]
   1400185a8:	test   rdx,rdx
   1400185ab:	je     0x1400185b0
   1400185ad:	mov    QWORD PTR [rdx],rbx
   1400185b0:	mov    BYTE PTR [rbx+0x28],0x0
   1400185b4:	mov    al,0x1
   1400185b6:	jmp    0x14001856e
   1400185b8:	int3   
   1400185b9:	int3   
   1400185ba:	int3   
   1400185bb:	int3   
   1400185bc:	int3   
   1400185bd:	int3   
   1400185be:	int3   
   1400185bf:	int3   
   1400185c0:	rex push rbx
   1400185c2:	sub    rsp,0x20
   1400185c6:	mov    QWORD PTR [rsp+0x38],rdi
   1400185cb:	mov    rbx,rcx
   1400185ce:	xor    edi,edi
   1400185d0:	cmp    DWORD PTR [rcx],edi
   1400185d2:	jle    0x140018601
   1400185d4:	mov    QWORD PTR [rsp+0x30],rsi
   1400185d9:	xor    esi,esi
   1400185db:	nop    DWORD PTR [rax+rax*1+0x0]
   1400185e0:	mov    rcx,QWORD PTR [rbx+0x8]
   1400185e4:	mov    edx,0x30
   1400185e9:	mov    rcx,QWORD PTR [rsi+rcx*1]
   1400185ed:	call   0x14002639c
   1400185f2:	inc    edi
   1400185f4:	lea    rsi,[rsi+0x8]
   1400185f8:	cmp    edi,DWORD PTR [rbx]
   1400185fa:	jl     0x1400185e0
   1400185fc:	mov    rsi,QWORD PTR [rsp+0x30]
   140018601:	mov    rdi,QWORD PTR [rsp+0x38]
   140018606:	mov    DWORD PTR [rbx],0x0
   14001860c:	test   DWORD PTR [rbx+0x14],0xc0000000
   140018613:	jne    0x14001863d
   140018615:	mov    rdx,QWORD PTR [rbx+0x8]
   140018619:	test   rdx,rdx
   14001861c:	je     0x140018636
   14001861e:	mov    rax,QWORD PTR [rip+0x19d6b]        # 0x140032390
   140018625:	mov    rcx,QWORD PTR [rax]
   140018628:	mov    rax,QWORD PTR [rcx]
   14001862b:	call   QWORD PTR [rax+0x28]
   14001862e:	mov    QWORD PTR [rbx+0x8],0x0
   140018636:	mov    DWORD PTR [rbx+0x10],0x0
   14001863d:	add    rsp,0x20
   140018641:	pop    rbx
   140018642:	ret    
   140018643:	int3   
   140018644:	int3   
   140018645:	int3   
   140018646:	int3   
   140018647:	int3   
   140018648:	int3   
   140018649:	int3   
   14001864a:	int3   
   14001864b:	int3   
   14001864c:	int3   
   14001864d:	int3   
   14001864e:	int3   
   14001864f:	int3   
   140018650:	mov    QWORD PTR [rsp+0x10],rbx
   140018655:	mov    QWORD PTR [rsp+0x18],rsi
   14001865a:	push   rbp
   14001865b:	push   rdi
   14001865c:	push   r12
   14001865e:	push   r14
   140018660:	push   r15
   140018662:	mov    rbp,rsp
   140018665:	sub    rsp,0x60
   140018669:	cmp    BYTE PTR [rcx+0x18],0x0
   14001866d:	mov    r12,r9
   140018670:	mov    r14,r8
   140018673:	mov    r15,rdx
   140018676:	mov    rsi,rcx
   140018679:	jne    0x1400187b0
   14001867f:	mov    rdx,QWORD PTR [rdx]
   140018682:	lea    rbx,[rip+0x1e077]        # 0x140036700
   140018689:	xor    edi,edi
   14001868b:	mov    QWORD PTR [rbp-0x30],rdi
   14001868f:	mov    QWORD PTR [rbp+0x30],rdi
   140018693:	test   rdx,rdx
   140018696:	je     0x14001869d
   140018698:	cmp    BYTE PTR [rdx],dil
   14001869b:	jne    0x1400186bd
   14001869d:	mov    rcx,QWORD PTR [r15+0x8]
   1400186a1:	lea    rdx,[rbp-0x28]
   1400186a5:	mov    r8d,0x25
   1400186ab:	call   QWORD PTR [rip+0x19bc7]        # 0x140032278
   1400186b1:	cmp    BYTE PTR [rbp-0x28],dil
   1400186b5:	lea    rdx,[rbp-0x28]
   1400186b9:	cmove  rdx,rbx
   1400186bd:	lea    rcx,[rbp-0x30]
   1400186c1:	call   0x14001aae0
   1400186c6:	mov    rdx,QWORD PTR [r14]
   1400186c9:	test   rdx,rdx
   1400186cc:	je     0x1400186d3
   1400186ce:	cmp    BYTE PTR [rdx],dil
   1400186d1:	jne    0x1400186f3
   1400186d3:	mov    rcx,QWORD PTR [r14+0x8]
   1400186d7:	lea    rdx,[rbp-0x28]
   1400186db:	mov    r8d,0x25
   1400186e1:	call   QWORD PTR [rip+0x19b91]        # 0x140032278
   1400186e7:	cmp    BYTE PTR [rbp-0x28],dil
   1400186eb:	lea    rdx,[rbp-0x28]
   1400186ef:	cmove  rdx,rbx
   1400186f3:	lea    rcx,[rbp+0x30]
   1400186f7:	call   0x14001aae0
   1400186fc:	mov    rax,QWORD PTR [rip+0x19c85]        # 0x140032388
   140018703:	mov    edx,0x4
   140018708:	mov    ecx,DWORD PTR [rax]
   14001870a:	call   QWORD PTR [rip+0x19d98]        # 0x1400324a8
   140018710:	test   al,al
   140018712:	je     0x14001876f
   140018714:	lea    rax,[rip+0x1e8c5]        # 0x140036fe0
   14001871b:	mov    DWORD PTR [rbp-0x20],0x4f
   140018722:	mov    QWORD PTR [rbp-0x28],rax
   140018726:	lea    rcx,[rbp+0x30]
   14001872a:	lea    rax,[rip+0x1e87f]        # 0x140036fb0
   140018731:	mov    QWORD PTR [rbp-0x18],rax
   140018735:	call   0x14001b050
   14001873a:	lea    rcx,[rbp-0x30]
   14001873e:	mov    rbx,rax
   140018741:	call   0x14001b050
   140018746:	mov    QWORD PTR [rsp+0x28],rbx
   14001874b:	lea    r9,[rip+0x1e81e]        # 0x140036f70
   140018752:	mov    QWORD PTR [rsp+0x20],rax
   140018757:	lea    r8,[rbp-0x28]
   14001875b:	mov    rax,QWORD PTR [rip+0x19c26]        # 0x140032388
   140018762:	mov    edx,0x4
   140018767:	mov    ecx,DWORD PTR [rax]
   140018769:	call   QWORD PTR [rip+0x19d29]        # 0x140032498
   14001876f:	call   QWORD PTR [rip+0x19e13]        # 0x140032588
   140018775:	test   al,al
   140018777:	je     0x1400187a4
   140018779:	call   QWORD PTR [rip+0x19d01]        # 0x140032480
   14001877f:	lea    rcx,[rip+0x1a026]        # 0x1400327ac
   140018786:	xorps  xmm0,xmm0
   140018789:	lea    rdx,[rbp-0x28]
   14001878d:	mov    DWORD PTR [rbp-0x20],eax
   140018790:	mov    QWORD PTR [rbp-0x28],rcx
   140018794:	mov    r8b,0x1
   140018797:	xor    ecx,ecx
   140018799:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   14001879e:	call   QWORD PTR [rip+0x19cd4]        # 0x140032478
   1400187a4:	mov    ecx,0x1
   1400187a9:	call   QWORD PTR [rip+0x19a99]        # 0x140032248
   1400187af:	int3   
   1400187b0:	mov    r10,QWORD PTR [rdx+0x8]
   1400187b4:	mov    r11,QWORD PTR [r8+0x8]
   1400187b8:	mov    rax,QWORD PTR [r10]
   1400187bb:	cmp    rax,QWORD PTR [r11]
   1400187be:	jne    0x140018902
   1400187c4:	mov    rax,QWORD PTR [r10+0x8]
   1400187c8:	cmp    rax,QWORD PTR [r11+0x8]
   1400187cc:	jne    0x140018902
   1400187d2:	mov    rdx,QWORD PTR [rdx]
   1400187d5:	lea    rbx,[rip+0x1df24]        # 0x140036700
   1400187dc:	xor    edi,edi
   1400187de:	mov    QWORD PTR [rbp-0x30],rdi
   1400187e2:	mov    QWORD PTR [rbp+0x30],rdi
   1400187e6:	test   rdx,rdx
   1400187e9:	je     0x1400187f0
   1400187eb:	cmp    BYTE PTR [rdx],dil
   1400187ee:	jne    0x14001880f
   1400187f0:	mov    r8d,0x25
   1400187f6:	lea    rdx,[rbp-0x28]
   1400187fa:	mov    rcx,r10
   1400187fd:	call   QWORD PTR [rip+0x19a75]        # 0x140032278
   140018803:	cmp    BYTE PTR [rbp-0x28],dil
   140018807:	lea    rdx,[rbp-0x28]
   14001880b:	cmove  rdx,rbx
   14001880f:	lea    rcx,[rbp-0x30]
   140018813:	call   0x14001aae0
   140018818:	mov    rdx,QWORD PTR [r14]
   14001881b:	test   rdx,rdx
   14001881e:	je     0x140018825
   140018820:	cmp    BYTE PTR [rdx],dil
   140018823:	jne    0x140018845
   140018825:	mov    rcx,QWORD PTR [r14+0x8]
   140018829:	lea    rdx,[rbp-0x28]
   14001882d:	mov    r8d,0x25
   140018833:	call   QWORD PTR [rip+0x19a3f]        # 0x140032278
   140018839:	cmp    BYTE PTR [rbp-0x28],dil
   14001883d:	lea    rdx,[rbp-0x28]
   140018841:	cmove  rdx,rbx
   140018845:	lea    rcx,[rbp+0x30]
   140018849:	call   0x14001aae0
   14001884e:	mov    rax,QWORD PTR [rip+0x19b33]        # 0x140032388
   140018855:	mov    edx,0x4
   14001885a:	mov    ecx,DWORD PTR [rax]
   14001885c:	call   QWORD PTR [rip+0x19c46]        # 0x1400324a8
   140018862:	test   al,al
   140018864:	je     0x1400188c1
   140018866:	lea    rax,[rip+0x1e773]        # 0x140036fe0
   14001886d:	mov    DWORD PTR [rbp-0x20],0x58
   140018874:	mov    QWORD PTR [rbp-0x28],rax
   140018878:	lea    rcx,[rbp+0x30]
   14001887c:	lea    rax,[rip+0x1e72d]        # 0x140036fb0
   140018883:	mov    QWORD PTR [rbp-0x18],rax
   140018887:	call   0x14001b050
   14001888c:	lea    rcx,[rbp-0x30]
   140018890:	mov    rbx,rax
   140018893:	call   0x14001b050
   140018898:	mov    QWORD PTR [rsp+0x28],rbx
   14001889d:	lea    r9,[rip+0x1e78c]        # 0x140037030
   1400188a4:	mov    QWORD PTR [rsp+0x20],rax
   1400188a9:	lea    r8,[rbp-0x28]
   1400188ad:	mov    rax,QWORD PTR [rip+0x19ad4]        # 0x140032388
   1400188b4:	mov    edx,0x4
   1400188b9:	mov    ecx,DWORD PTR [rax]
   1400188bb:	call   QWORD PTR [rip+0x19bd7]        # 0x140032498
   1400188c1:	call   QWORD PTR [rip+0x19cc1]        # 0x140032588
   1400188c7:	test   al,al
   1400188c9:	je     0x1400188f6
   1400188cb:	call   QWORD PTR [rip+0x19baf]        # 0x140032480
   1400188d1:	lea    rcx,[rip+0x19ed4]        # 0x1400327ac
   1400188d8:	xorps  xmm0,xmm0
   1400188db:	lea    rdx,[rbp-0x28]
   1400188df:	mov    DWORD PTR [rbp-0x20],eax
   1400188e2:	mov    QWORD PTR [rbp-0x28],rcx
   1400188e6:	mov    r8b,0x1
   1400188e9:	xor    ecx,ecx
   1400188eb:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   1400188f0:	call   QWORD PTR [rip+0x19b82]        # 0x140032478
   1400188f6:	mov    ecx,0x1
   1400188fb:	call   QWORD PTR [rip+0x19947]        # 0x140032248
   140018901:	int3   
   140018902:	movsxd rax,DWORD PTR [rcx]
   140018905:	xor    edi,edi
   140018907:	test   eax,eax
   140018909:	jle    0x14001895b
   14001890b:	mov    rdx,QWORD PTR [rcx+0x8]
   14001890f:	mov    rbx,rax
   140018912:	mov    ecx,edi
   140018914:	nop    DWORD PTR [rax+0x0]
   140018918:	nop    DWORD PTR [rax+rax*1+0x0]
   140018920:	mov    r9,QWORD PTR [rdx]
   140018923:	mov    r8,QWORD PTR [r9+0x10]
   140018927:	mov    rax,QWORD PTR [r8]
   14001892a:	cmp    rax,QWORD PTR [r10]
   14001892d:	jne    0x14001894f
   14001892f:	mov    rax,QWORD PTR [r8+0x8]
   140018933:	cmp    rax,QWORD PTR [r10+0x8]
   140018937:	jne    0x14001894f
   140018939:	mov    r8,QWORD PTR [r9+0x20]
   14001893d:	mov    rax,QWORD PTR [r8]
   140018940:	cmp    rax,QWORD PTR [r11]
   140018943:	jne    0x14001894f
   140018945:	mov    rax,QWORD PTR [r8+0x8]
   140018949:	cmp    rax,QWORD PTR [r11+0x8]
   14001894d:	je     0x14001899b
   14001894f:	inc    rcx
   140018952:	add    rdx,0x8
   140018956:	cmp    rcx,rbx
   140018959:	jl     0x140018920
   14001895b:	mov    ecx,0x30
   140018960:	call   0x140007bf0
   140018965:	mov    rbx,rax
   140018968:	test   rax,rax
   14001896b:	je     0x140018ac9
   140018971:	mov    QWORD PTR [rax],r12
   140018974:	mov    rcx,QWORD PTR [r15]
   140018977:	mov    QWORD PTR [rax+0x8],rcx
   14001897b:	mov    rcx,QWORD PTR [r15+0x8]
   14001897f:	mov    QWORD PTR [rax+0x10],rcx
   140018983:	mov    rcx,QWORD PTR [r14]
   140018986:	mov    QWORD PTR [rax+0x18],rcx
   14001898a:	mov    rcx,QWORD PTR [r14+0x8]
   14001898e:	mov    QWORD PTR [rax+0x20],rcx
   140018992:	mov    BYTE PTR [rax+0x28],dil
   140018996:	jmp    0x140018acc
   14001899b:	mov    rdx,QWORD PTR [r15]
   14001899e:	lea    rbx,[rip+0x1dd5b]        # 0x140036700
   1400189a5:	mov    QWORD PTR [rbp-0x30],rdi
   1400189a9:	mov    QWORD PTR [rbp+0x30],rdi
   1400189ad:	test   rdx,rdx
   1400189b0:	je     0x1400189b7
   1400189b2:	cmp    BYTE PTR [rdx],dil
   1400189b5:	jne    0x1400189d6
   1400189b7:	mov    r8d,0x25
   1400189bd:	lea    rdx,[rbp-0x28]
   1400189c1:	mov    rcx,r10
   1400189c4:	call   QWORD PTR [rip+0x198ae]        # 0x140032278
   1400189ca:	cmp    BYTE PTR [rbp-0x28],dil
   1400189ce:	lea    rdx,[rbp-0x28]
   1400189d2:	cmove  rdx,rbx
   1400189d6:	lea    rcx,[rbp-0x30]
   1400189da:	call   0x14001aae0
   1400189df:	mov    rdx,QWORD PTR [r14]
   1400189e2:	test   rdx,rdx
   1400189e5:	je     0x1400189ec
   1400189e7:	cmp    BYTE PTR [rdx],dil
   1400189ea:	jne    0x140018a0c
   1400189ec:	mov    rcx,QWORD PTR [r14+0x8]
   1400189f0:	lea    rdx,[rbp-0x28]
   1400189f4:	mov    r8d,0x25
   1400189fa:	call   QWORD PTR [rip+0x19878]        # 0x140032278
   140018a00:	cmp    BYTE PTR [rbp-0x28],dil
   140018a04:	lea    rdx,[rbp-0x28]
   140018a08:	cmove  rdx,rbx
   140018a0c:	lea    rcx,[rbp+0x30]
   140018a10:	call   0x14001aae0
   140018a15:	mov    rax,QWORD PTR [rip+0x1996c]        # 0x140032388
   140018a1c:	mov    edx,0x4
   140018a21:	mov    ecx,DWORD PTR [rax]
   140018a23:	call   QWORD PTR [rip+0x19a7f]        # 0x1400324a8
   140018a29:	test   al,al
   140018a2b:	je     0x140018a88
   140018a2d:	lea    rax,[rip+0x1e5ac]        # 0x140036fe0
   140018a34:	mov    DWORD PTR [rbp-0x20],0x64
   140018a3b:	mov    QWORD PTR [rbp-0x28],rax
   140018a3f:	lea    rcx,[rbp+0x30]
   140018a43:	lea    rax,[rip+0x1e566]        # 0x140036fb0
   140018a4a:	mov    QWORD PTR [rbp-0x18],rax
   140018a4e:	call   0x14001b050
   140018a53:	lea    rcx,[rbp-0x30]
   140018a57:	mov    rbx,rax
   140018a5a:	call   0x14001b050
   140018a5f:	mov    QWORD PTR [rsp+0x28],rbx
   140018a64:	lea    r9,[rip+0x1e615]        # 0x140037080
   140018a6b:	mov    QWORD PTR [rsp+0x20],rax
   140018a70:	lea    r8,[rbp-0x28]
   140018a74:	mov    rax,QWORD PTR [rip+0x1990d]        # 0x140032388
   140018a7b:	mov    edx,0x4
   140018a80:	mov    ecx,DWORD PTR [rax]
   140018a82:	call   QWORD PTR [rip+0x19a10]        # 0x140032498
   140018a88:	call   QWORD PTR [rip+0x19afa]        # 0x140032588
   140018a8e:	test   al,al
   140018a90:	je     0x140018abd
   140018a92:	call   QWORD PTR [rip+0x199e8]        # 0x140032480
   140018a98:	lea    rcx,[rip+0x19d0d]        # 0x1400327ac
   140018a9f:	xorps  xmm0,xmm0
   140018aa2:	lea    rdx,[rbp-0x28]
   140018aa6:	mov    DWORD PTR [rbp-0x20],eax
   140018aa9:	mov    QWORD PTR [rbp-0x28],rcx
   140018aad:	mov    r8b,0x1
   140018ab0:	xor    ecx,ecx
   140018ab2:	movdqu XMMWORD PTR [rbp-0x18],xmm0
   140018ab7:	call   QWORD PTR [rip+0x199bb]        # 0x140032478
   140018abd:	mov    ecx,0x1
   140018ac2:	call   QWORD PTR [rip+0x19780]        # 0x140032248
   140018ac8:	int3   
   140018ac9:	mov    rbx,rdi
   140018acc:	movsxd rdi,DWORD PTR [rsi]
   140018acf:	cmp    edi,DWORD PTR [rsi+0x10]
   140018ad2:	jne    0x140018ae2
   140018ad4:	lea    rcx,[rsi+0x8]
   140018ad8:	mov    edx,0x1
   140018add:	call   0x140013420
   140018ae2:	mov    rax,QWORD PTR [rsi+0x8]
   140018ae6:	inc    DWORD PTR [rsi]
   140018ae8:	lea    rdx,[rax+rdi*8]
   140018aec:	test   rdx,rdx
   140018aef:	je     0x140018af4
   140018af1:	mov    QWORD PTR [rdx],rbx
   140018af4:	lea    r11,[rsp+0x60]
   140018af9:	mov    rbx,QWORD PTR [r11+0x38]
   140018afd:	mov    rsi,QWORD PTR [r11+0x40]
   140018b01:	mov    rsp,r11
   140018b04:	pop    r15
   140018b06:	pop    r14
   140018b08:	pop    r12
   140018b0a:	pop    rdi
   140018b0b:	pop    rbp
   140018b0c:	ret    
   140018b0d:	int3   
   140018b0e:	int3   
   140018b0f:	int3   
   140018b10:	mov    QWORD PTR [rsp+0x8],rbx
   140018b15:	mov    QWORD PTR [rsp+0x10],rbp
   140018b1a:	mov    QWORD PTR [rsp+0x18],rsi
   140018b1f:	push   rdi
   140018b20:	sub    rsp,0x20
   140018b24:	mov    rbp,rdx
   140018b27:	mov    rsi,rcx
   140018b2a:	xor    edi,edi
   140018b2c:	call   0x14000ea00
   140018b31:	test   eax,eax
   140018b33:	jle    0x140018b95
   140018b35:	mov    ebx,edi
   140018b37:	nop    WORD PTR [rax+rax*1+0x0]
   140018b40:	mov    edx,edi
   140018b42:	mov    rcx,rsi
   140018b45:	call   0x14000e9b0
   140018b4a:	mov    rdx,QWORD PTR [rip+0x2d59f]        # 0x1400460f0
   140018b51:	lea    r8,[rip+0x19c48]        # 0x1400327a0
   140018b58:	mov    r9d,ebx
   140018b5b:	mov    rcx,rax
   140018b5e:	call   0x14000ee70
   140018b63:	mov    r8,rbp
   140018b66:	sub    r8,rax
   140018b69:	nop    DWORD PTR [rax+0x0]
   140018b70:	movzx  edx,BYTE PTR [rax]
   140018b73:	movzx  ecx,BYTE PTR [rax+r8*1]
   140018b78:	sub    edx,ecx
   140018b7a:	jne    0x140018b83
   140018b7c:	inc    rax
   140018b7f:	test   ecx,ecx
   140018b81:	jne    0x140018b70
   140018b83:	test   edx,edx
   140018b85:	je     0x140018bad
   140018b87:	mov    rcx,rsi
   140018b8a:	inc    edi
   140018b8c:	call   0x14000ea00
   140018b91:	cmp    edi,eax
   140018b93:	jl     0x140018b40
   140018b95:	or     eax,0xffffffff
   140018b98:	mov    rbx,QWORD PTR [rsp+0x30]
   140018b9d:	mov    rbp,QWORD PTR [rsp+0x38]
   140018ba2:	mov    rsi,QWORD PTR [rsp+0x40]
   140018ba7:	add    rsp,0x20
   140018bab:	pop    rdi
   140018bac:	ret    
   140018bad:	mov    eax,edi
   140018baf:	jmp    0x140018b98
   140018bb1:	int3   
   140018bb2:	int3   
   140018bb3:	int3   
   140018bb4:	int3   
   140018bb5:	int3   
   140018bb6:	int3   
   140018bb7:	int3   
   140018bb8:	int3   
   140018bb9:	int3   
   140018bba:	int3   
   140018bbb:	int3   
   140018bbc:	int3   
   140018bbd:	int3   
   140018bbe:	int3   
   140018bbf:	int3   
   140018bc0:	rex push rbp
   140018bc2:	lea    rbp,[rsp-0x57]
   140018bc7:	sub    rsp,0xd0
   140018bce:	mov    rdx,QWORD PTR [rcx+0x8]
   140018bd2:	lea    rax,[rip+0x1e62f]        # 0x140037208
   140018bd9:	mov    QWORD PTR [rbp+0x7],rax
   140018bdd:	lea    rcx,[rbp-0x59]
   140018be1:	lea    rax,[rip+0x1e630]        # 0x140037218
   140018be8:	mov    QWORD PTR [rbp+0xf],rax
   140018bec:	lea    rax,[rip+0x1e635]        # 0x140037228
   140018bf3:	mov    QWORD PTR [rbp+0x17],rax
   140018bf7:	lea    rax,[rip+0x1e63a]        # 0x140037238
   140018bfe:	mov    QWORD PTR [rbp+0x1f],rax
   140018c02:	lea    rax,[rip+0x1e63f]        # 0x140037248
   140018c09:	mov    QWORD PTR [rbp+0x27],rax
   140018c0d:	lea    rax,[rip+0x1e64c]        # 0x140037260
   140018c14:	mov    QWORD PTR [rbp+0x2f],rax
   140018c18:	lea    rax,[rip+0x1e659]        # 0x140037278
   140018c1f:	mov    QWORD PTR [rbp+0x37],rax
   140018c23:	lea    rax,[rip+0x1e65e]        # 0x140037288
   140018c2a:	mov    QWORD PTR [rbp+0x3f],rax
   140018c2e:	lea    rax,[rip+0x1e663]        # 0x140037298
   140018c35:	mov    QWORD PTR [rbp+0x47],rax
   140018c39:	lea    rax,[rip+0x1e668]        # 0x1400372a8
   140018c40:	mov    QWORD PTR [rbp+0x4f],rax
   140018c44:	call   0x14000c540
   140018c49:	lea    rcx,[rbp-0x59]
   140018c4d:	call   0x14000ff00
   140018c52:	test   al,al
   140018c54:	je     0x140018d55
   140018c5a:	nop    WORD PTR [rax+rax*1+0x0]
   140018c60:	lea    rcx,[rbp-0x59]
   140018c64:	call   0x14000e980
   140018c69:	mov    rdx,QWORD PTR [rip+0x2d480]        # 0x1400460f0
   140018c70:	lea    r8,[rip+0x19b29]        # 0x1400327a0
   140018c77:	xor    r9d,r9d
   140018c7a:	mov    rcx,rax
   140018c7d:	call   0x14000ee70
   140018c82:	xor    r10d,r10d
   140018c85:	lea    r11,[rbp+0x7]
   140018c89:	nop    DWORD PTR [rax+0x0]
   140018c90:	mov    r9,QWORD PTR [r11]
   140018c93:	mov    rcx,rax
   140018c96:	sub    r9,rax
   140018c99:	nop    DWORD PTR [rax+0x0]
   140018ca0:	movzx  r8d,BYTE PTR [rcx]
   140018ca4:	movzx  edx,BYTE PTR [rcx+r9*1]
   140018ca9:	sub    r8d,edx
   140018cac:	jne    0x140018cb5
   140018cae:	inc    rcx
   140018cb1:	test   edx,edx
   140018cb3:	jne    0x140018ca0
   140018cb5:	test   r8d,r8d
   140018cb8:	je     0x140018cc9
   140018cba:	inc    r10d
   140018cbd:	add    r11,0x8
   140018cc1:	cmp    r10d,0xa
   140018cc5:	jb     0x140018c90
   140018cc7:	jmp    0x140018ce4
   140018cc9:	lea    rcx,[rbp-0x59]
   140018ccd:	call   0x14000e980
   140018cd2:	xor    r8d,r8d
   140018cd5:	lea    rdx,[rip+0x1e5e0]        # 0x1400372bc
   140018cdc:	mov    rcx,rax
   140018cdf:	call   0x140011040
   140018ce4:	lea    rcx,[rbp-0x59]
   140018ce8:	call   0x14000e980
   140018ced:	mov    rdx,QWORD PTR [rip+0x2d3fc]        # 0x1400460f0
   140018cf4:	lea    r8,[rip+0x19aa5]        # 0x1400327a0
   140018cfb:	xor    r9d,r9d
   140018cfe:	mov    rcx,rax
   140018d01:	call   0x14000ee70
   140018d06:	lea    rdx,[rip+0x1e5bb]        # 0x1400372c8
   140018d0d:	mov    rcx,rax
   140018d10:	call   0x140028260
   140018d15:	test   eax,eax
   140018d17:	jne    0x140018d3b
   140018d19:	lea    rcx,[rbp-0x59]
   140018d1d:	call   0x14000e980
   140018d22:	mov    rdx,QWORD PTR [rip+0x2d3c7]        # 0x1400460f0
   140018d29:	lea    r8,[rip+0x1e5a8]        # 0x1400372d8
   140018d30:	xor    r9d,r9d
   140018d33:	mov    rcx,rax
   140018d36:	call   0x140011650
   140018d3b:	lea    rcx,[rbp-0x59]
   140018d3f:	call   0x14000cc20
   140018d44:	lea    rcx,[rbp-0x59]
   140018d48:	call   0x14000ff00
   140018d4d:	test   al,al
   140018d4f:	jne    0x140018c60
   140018d55:	cmp    DWORD PTR [rbp-0x49],0x0
   140018d59:	mov    rdx,QWORD PTR [rbp-0x51]
   140018d5d:	mov    DWORD PTR [rbp-0x59],0x0
   140018d64:	jl     0x140018dab
   140018d66:	lea    rax,[rbp-0x41]
   140018d6a:	cmp    rdx,rax
   140018d6d:	je     0x140018dab
   140018d6f:	test   rdx,rdx
   140018d72:	je     0x140018d8d
   140018d74:	test   DWORD PTR [rbp-0x45],0xc0000000
   140018d7b:	jne    0x140018d8d
   140018d7d:	mov    rax,QWORD PTR [rip+0x1960c]        # 0x140032390
   140018d84:	mov    rcx,QWORD PTR [rax]
   140018d87:	mov    rax,QWORD PTR [rcx]
   140018d8a:	call   QWORD PTR [rax+0x28]
   140018d8d:	mov    eax,DWORD PTR [rbp-0x45]
   140018d90:	lea    rdx,[rbp-0x41]
   140018d94:	and    eax,0x3fffffff
   140018d99:	mov    QWORD PTR [rbp-0x51],rdx
   140018d9d:	bts    eax,0x1f
   140018da1:	mov    DWORD PTR [rbp-0x49],0x4
   140018da8:	mov    DWORD PTR [rbp-0x45],eax
   140018dab:	test   DWORD PTR [rbp-0x45],0xc0000000
   140018db2:	jne    0x140018dc9
   140018db4:	test   rdx,rdx
   140018db7:	je     0x140018dc9
   140018db9:	mov    rax,QWORD PTR [rip+0x195d0]        # 0x140032390
   140018dc0:	mov    rcx,QWORD PTR [rax]
   140018dc3:	mov    rax,QWORD PTR [rcx]
   140018dc6:	call   QWORD PTR [rax+0x28]
   140018dc9:	mov    eax,0x1
   140018dce:	add    rsp,0xd0
   140018dd5:	pop    rbp
   140018dd6:	ret    
   140018dd7:	int3   
   140018dd8:	int3   
   140018dd9:	int3   
   140018dda:	int3   
   140018ddb:	int3   
   140018ddc:	int3   
   140018ddd:	int3   
   140018dde:	int3   
   140018ddf:	int3   
   140018de0:	mov    QWORD PTR [rsp+0x8],rbx
   140018de5:	push   rdi
   140018de6:	sub    rsp,0x20
   140018dea:	mov    rdi,rcx
   140018ded:	lea    rdx,[rip+0x1e6c4]        # 0x1400374b8
   140018df4:	mov    rcx,QWORD PTR [rcx+0x8]
   140018df8:	xor    r9d,r9d
   140018dfb:	xor    r8d,r8d
   140018dfe:	call   0x14000ec40
   140018e03:	mov    rcx,QWORD PTR [rdi+0x8]
   140018e07:	lea    rdx,[rip+0x1e6ce]        # 0x1400374dc
   140018e0e:	mov    ebx,eax
   140018e10:	xor    r9d,r9d
   140018e13:	lea    r8d,[rbx+0x1]
   140018e17:	call   0x140011610
   140018e1c:	mov    rcx,QWORD PTR [rdi+0x8]
   140018e20:	lea    r8d,[rbx+0x1]
   140018e24:	xor    r9d,r9d
   140018e27:	lea    rdx,[rip+0x1e68a]        # 0x1400374b8
   140018e2e:	call   0x140011610
   140018e33:	mov    rbx,QWORD PTR [rsp+0x30]
   140018e38:	mov    eax,0x1
   140018e3d:	add    rsp,0x20
   140018e41:	pop    rdi
   140018e42:	ret    
   140018e43:	int3   
   140018e44:	int3   
   140018e45:	int3   
   140018e46:	int3   
   140018e47:	int3   
   140018e48:	int3   
   140018e49:	int3   
   140018e4a:	int3   
   140018e4b:	int3   
   140018e4c:	int3   
   140018e4d:	int3   
   140018e4e:	int3   
   140018e4f:	int3   
   140018e50:	push   r14
   140018e52:	sub    rsp,0x50
   140018e56:	mov    rcx,QWORD PTR [rcx+0x8]
   140018e5a:	lea    rdx,[rip+0x1e487]        # 0x1400372e8
   140018e61:	xor    r8d,r8d
   140018e64:	call   0x14000e1f0
   140018e69:	test   rax,rax
   140018e6c:	je     0x140019068
   140018e72:	xor    r8d,r8d
   140018e75:	lea    rdx,[rip+0x1e47c]        # 0x1400372f8
   140018e7c:	mov    rcx,rax
   140018e7f:	call   0x14000e1f0
   140018e84:	mov    r14,rax
   140018e87:	test   rax,rax
   140018e8a:	je     0x140019068
   140018e90:	mov    QWORD PTR [rsp+0x60],rbx
   140018e95:	mov    rcx,rax
   140018e98:	mov    QWORD PTR [rsp+0x70],rsi
   140018e9d:	xor    ebx,ebx
   140018e9f:	mov    QWORD PTR [rsp+0x78],rdi
   140018ea4:	xor    esi,esi
   140018ea6:	mov    QWORD PTR [rsp+0x40],r15
   140018eab:	xor    edi,edi
   140018ead:	xor    r15d,r15d
   140018eb0:	mov    DWORD PTR [rsp+0x20],edi
   140018eb4:	mov    QWORD PTR [rsp+0x30],r15
   140018eb9:	mov    QWORD PTR [rsp+0x28],rsi
   140018ebe:	call   0x14000ea00
   140018ec3:	test   eax,eax
   140018ec5:	jle    0x140018ff1
   140018ecb:	mov    QWORD PTR [rsp+0x68],rbp
   140018ed0:	mov    QWORD PTR [rsp+0x48],r12
   140018ed5:	mov    edx,ebx
   140018ed7:	mov    rcx,r14
   140018eda:	call   0x14000e9b0
   140018edf:	mov    rdx,QWORD PTR [rip+0x2d20a]        # 0x1400460f0
   140018ee6:	lea    r8,[rip+0x198b3]        # 0x1400327a0
   140018eed:	xor    r9d,r9d
   140018ef0:	mov    rcx,rax
   140018ef3:	mov    r12,rax
   140018ef6:	call   0x14000ee70
   140018efb:	lea    rdx,[rip+0x1e406]        # 0x140037308
   140018f02:	mov    rcx,rax
   140018f05:	call   0x140028260
   140018f0a:	test   eax,eax
   140018f0c:	jne    0x140018f65
   140018f0e:	movsxd rbp,edi
   140018f11:	cmp    edi,r15d
   140018f14:	jne    0x140018f31
   140018f16:	lea    edx,[rax+0x1]
   140018f19:	lea    rcx,[rsp+0x28]
   140018f1e:	call   0x140023260
   140018f23:	mov    r15d,DWORD PTR [rsp+0x30]
   140018f28:	mov    rsi,QWORD PTR [rsp+0x28]
   140018f2d:	mov    edi,DWORD PTR [rsp+0x20]
   140018f31:	inc    edi
   140018f33:	shl    rbp,0x4
   140018f37:	mov    DWORD PTR [rsp+0x20],edi
   140018f3b:	add    rbp,rsi
   140018f3e:	je     0x140018f48
   140018f40:	mov    rcx,rbp
   140018f43:	call   0x14000c6f0
   140018f48:	mov    rdx,r12
   140018f4b:	mov    rcx,rbp
   140018f4e:	call   0x14000d830
   140018f53:	mov    r8d,0x1
   140018f59:	mov    edx,ebx
   140018f5b:	mov    rcx,r14
   140018f5e:	call   0x14000d580
   140018f63:	jmp    0x140018f67
   140018f65:	inc    ebx
   140018f67:	mov    rcx,r14
   140018f6a:	call   0x14000ea00
   140018f6f:	cmp    ebx,eax
   140018f71:	jl     0x140018ed5
   140018f77:	mov    r12,QWORD PTR [rsp+0x48]
   140018f7c:	test   edi,edi
   140018f7e:	je     0x140018fec
   140018f80:	mov    rcx,r14
   140018f83:	call   0x14000d100
   140018f88:	mov    rdx,QWORD PTR [rip+0x2d161]        # 0x1400460f0
   140018f8f:	lea    r8,[rip+0x1e38a]        # 0x140037320
   140018f96:	xor    r9d,r9d
   140018f99:	mov    rcx,rax
   140018f9c:	mov    rbx,rax
   140018f9f:	call   0x140011650
   140018fa4:	xor    r8d,r8d
   140018fa7:	lea    rdx,[rip+0x1e34a]        # 0x1400372f8
   140018fae:	mov    rcx,rbx
   140018fb1:	call   0x14000e270
   140018fb6:	movsxd rbp,edi
   140018fb9:	mov    r14,rax
   140018fbc:	shl    rbp,0x4
   140018fc0:	mov    rbx,rsi
   140018fc3:	add    rbp,rsi
   140018fc6:	cmp    rsi,rbp
   140018fc9:	je     0x140018fec
   140018fcb:	nop    DWORD PTR [rax+rax*1+0x0]
   140018fd0:	mov    rcx,r14
   140018fd3:	call   0x14000d100
   140018fd8:	mov    rcx,rax
   140018fdb:	mov    rdx,rbx
   140018fde:	call   0x14000d830
   140018fe3:	add    rbx,0x10
   140018fe7:	cmp    rbx,rbp
   140018fea:	jne    0x140018fd0
   140018fec:	mov    rbp,QWORD PTR [rsp+0x68]
   140018ff1:	sub    edi,0x1
   140018ff4:	mov    r15,QWORD PTR [rsp+0x40]
   140018ff9:	js     0x140019016
   140018ffb:	movsxd rbx,edi
   140018ffe:	shl    rbx,0x4
   140019002:	add    rbx,rsi
   140019005:	mov    rcx,rbx
   140019008:	call   0x14000c9c0
   14001900d:	sub    rbx,0x10
   140019011:	sub    edi,0x1
   140019014:	jns    0x140019005
   140019016:	mov    ebx,DWORD PTR [rsp+0x34]
   14001901a:	mov    rdi,QWORD PTR [rsp+0x78]
   14001901f:	and    ebx,0xc0000000
   140019025:	jne    0x140019041
   140019027:	test   rsi,rsi
   14001902a:	je     0x140019041
   14001902c:	mov    rax,QWORD PTR [rip+0x1935d]        # 0x140032390
   140019033:	mov    rdx,rsi
   140019036:	mov    rcx,QWORD PTR [rax]
   140019039:	mov    rax,QWORD PTR [rcx]
   14001903c:	call   QWORD PTR [rax+0x28]
   14001903f:	xor    esi,esi
   140019041:	test   ebx,ebx
   140019043:	mov    rbx,QWORD PTR [rsp+0x60]
   140019048:	jne    0x140019063
   14001904a:	test   rsi,rsi
   14001904d:	je     0x140019063
   14001904f:	mov    rcx,QWORD PTR [rip+0x1933a]        # 0x140032390
   140019056:	mov    rdx,rsi
   140019059:	mov    rcx,QWORD PTR [rcx]
   14001905c:	mov    r8,QWORD PTR [rcx]
   14001905f:	call   QWORD PTR [r8+0x28]
   140019063:	mov    rsi,QWORD PTR [rsp+0x70]
   140019068:	mov    eax,0x1
   14001906d:	add    rsp,0x50
   140019071:	pop    r14
   140019073:	ret    
   140019074:	int3   
   140019075:	int3   
   140019076:	int3   
   140019077:	int3   
   140019078:	int3   
   140019079:	int3   
   14001907a:	int3   
   14001907b:	int3   
   14001907c:	int3   
   14001907d:	int3   
   14001907e:	int3   
   14001907f:	int3   
   140019080:	rex push rbp
   140019082:	lea    rbp,[rsp-0x57]
   140019087:	sub    rsp,0xb0
   14001908e:	mov    rdx,QWORD PTR [rcx+0x8]
   140019092:	lea    rax,[rip+0x1e29f]        # 0x140037338
   140019099:	mov    QWORD PTR [rbp+0x1f],rax
   14001909d:	lea    rcx,[rbp-0x39]
   1400190a1:	lea    rax,[rip+0x1e2a8]        # 0x140037350
   1400190a8:	mov    QWORD PTR [rbp+0x27],rax
   1400190ac:	lea    rax,[rip+0x1e2b5]        # 0x140037368
   1400190b3:	mov    QWORD PTR [rbp+0x2f],rax
   1400190b7:	lea    rax,[rip+0x1e2c2]        # 0x140037380
   1400190be:	mov    QWORD PTR [rbp+0x37],rax
   1400190c2:	lea    rax,[rip+0x1e2cf]        # 0x140037398
   1400190c9:	mov    QWORD PTR [rbp+0x3f],rax
   1400190cd:	lea    rax,[rip+0x1e2dc]        # 0x1400373b0
   1400190d4:	mov    QWORD PTR [rbp+0x47],rax
   1400190d8:	call   0x14000c540
   1400190dd:	lea    rcx,[rbp-0x39]
   1400190e1:	call   0x14000ff00
   1400190e6:	test   al,al
   1400190e8:	je     0x1400191ef
   1400190ee:	mov    QWORD PTR [rsp+0xc0],rbx
   1400190f6:	lea    rcx,[rbp-0x39]
   1400190fa:	call   0x14000e980
   1400190ff:	mov    rdx,QWORD PTR [rip+0x2cfea]        # 0x1400460f0
   140019106:	lea    r8,[rip+0x19693]        # 0x1400327a0
   14001910d:	xor    r9d,r9d
   140019110:	mov    rcx,rax
   140019113:	call   0x14000ee70
   140019118:	xor    r10d,r10d
   14001911b:	lea    r11,[rbp+0x1f]
   14001911f:	nop
   140019120:	mov    r9,QWORD PTR [r11]
   140019123:	mov    rcx,rax
   140019126:	sub    r9,rax
   140019129:	nop    DWORD PTR [rax+0x0]
   140019130:	movzx  r8d,BYTE PTR [rcx]
   140019134:	movzx  edx,BYTE PTR [rcx+r9*1]
   140019139:	sub    r8d,edx
   14001913c:	jne    0x140019145
   14001913e:	inc    rcx
   140019141:	test   edx,edx
   140019143:	jne    0x140019130
   140019145:	test   r8d,r8d
   140019148:	je     0x140019159
   14001914a:	inc    r10d
   14001914d:	add    r11,0x8
   140019151:	cmp    r10d,0x6
   140019155:	jb     0x140019120
   140019157:	jmp    0x1400191cd
   140019159:	lea    rcx,[rbp-0x39]
   14001915d:	call   0x14000e980
   140019162:	xor    r8d,r8d
   140019165:	lea    rdx,[rip+0x1e25c]        # 0x1400373c8
   14001916c:	mov    rcx,rax
   14001916f:	call   0x14000e1f0
   140019174:	mov    rbx,rax
   140019177:	test   rax,rax
   14001917a:	je     0x14001919e
   14001917c:	lea    rdx,[rip+0x1961d]        # 0x1400327a0
   140019183:	mov    rcx,rax
   140019186:	call   0x14000df80
   14001918b:	test   al,al
   14001918d:	je     0x14001919e
   14001918f:	lea    rdx,[rip+0x1e242]        # 0x1400373d8
   140019196:	mov    rcx,rbx
   140019199:	call   0x1400116c0
   14001919e:	lea    rcx,[rbp-0x39]
   1400191a2:	call   0x14000e980
   1400191a7:	xor    r8d,r8d
   1400191aa:	lea    rdx,[rip+0x1e22f]        # 0x1400373e0
   1400191b1:	mov    rcx,rax
   1400191b4:	call   0x14000e1f0
   1400191b9:	test   rax,rax
   1400191bc:	je     0x1400191cd
   1400191be:	lea    rdx,[rip+0x1e213]        # 0x1400373d8
   1400191c5:	mov    rcx,rax
   1400191c8:	call   0x1400116c0
   1400191cd:	lea    rcx,[rbp-0x39]
   1400191d1:	call   0x14000cc20
   1400191d6:	lea    rcx,[rbp-0x39]
   1400191da:	call   0x14000ff00
   1400191df:	test   al,al
   1400191e1:	jne    0x1400190f6
   1400191e7:	mov    rbx,QWORD PTR [rsp+0xc0]
   1400191ef:	cmp    DWORD PTR [rbp-0x29],0x0
   1400191f3:	mov    rdx,QWORD PTR [rbp-0x31]
   1400191f7:	mov    DWORD PTR [rbp-0x39],0x0
   1400191fe:	jl     0x140019245
   140019200:	lea    rax,[rbp-0x21]
   140019204:	cmp    rdx,rax
   140019207:	je     0x140019245
   140019209:	test   rdx,rdx
   14001920c:	je     0x140019227
   14001920e:	test   DWORD PTR [rbp-0x25],0xc0000000
   140019215:	jne    0x140019227
   140019217:	mov    rax,QWORD PTR [rip+0x19172]        # 0x140032390
   14001921e:	mov    rcx,QWORD PTR [rax]
   140019221:	mov    rax,QWORD PTR [rcx]
   140019224:	call   QWORD PTR [rax+0x28]
   140019227:	mov    eax,DWORD PTR [rbp-0x25]
   14001922a:	lea    rdx,[rbp-0x21]
   14001922e:	and    eax,0x3fffffff
   140019233:	mov    QWORD PTR [rbp-0x31],rdx
   140019237:	bts    eax,0x1f
   14001923b:	mov    DWORD PTR [rbp-0x29],0x4
   140019242:	mov    DWORD PTR [rbp-0x25],eax
   140019245:	test   DWORD PTR [rbp-0x25],0xc0000000
   14001924c:	jne    0x140019263
   14001924e:	test   rdx,rdx
   140019251:	je     0x140019263
   140019253:	mov    rax,QWORD PTR [rip+0x19136]        # 0x140032390
   14001925a:	mov    rcx,QWORD PTR [rax]
   14001925d:	mov    rax,QWORD PTR [rcx]
   140019260:	call   QWORD PTR [rax+0x28]
   140019263:	mov    eax,0x1
   140019268:	add    rsp,0xb0
   14001926f:	pop    rbp
   140019270:	ret    
   140019271:	int3   
   140019272:	int3   
   140019273:	int3   
   140019274:	int3   
   140019275:	int3   
   140019276:	int3   
   140019277:	int3   
   140019278:	int3   
   140019279:	int3   
   14001927a:	int3   
   14001927b:	int3   
   14001927c:	int3   
   14001927d:	int3   
   14001927e:	int3   
   14001927f:	int3   
   140019280:	sub    rsp,0x88
   140019287:	mov    rdx,QWORD PTR [rcx+0x8]
   14001928b:	lea    rcx,[rsp+0x20]
   140019290:	call   0x14000c540
   140019295:	lea    rcx,[rsp+0x20]
   14001929a:	call   0x14000ff00
   14001929f:	test   al,al
   1400192a1:	je     0x140019355
   1400192a7:	nop    WORD PTR [rax+rax*1+0x0]
   1400192b0:	lea    rcx,[rsp+0x20]
   1400192b5:	call   0x14000e980
   1400192ba:	mov    rdx,QWORD PTR [rip+0x2ce2f]        # 0x1400460f0
   1400192c1:	lea    r8,[rip+0x194d8]        # 0x1400327a0
   1400192c8:	xor    r9d,r9d
   1400192cb:	mov    rcx,rax
   1400192ce:	call   0x14000ee70
   1400192d3:	lea    rdx,[rip+0x1e116]        # 0x1400373f0
   1400192da:	mov    rcx,rax
   1400192dd:	call   0x140028260
   1400192e2:	test   eax,eax
   1400192e4:	jne    0x140019339
   1400192e6:	lea    rcx,[rsp+0x20]
   1400192eb:	call   0x14000e980
   1400192f0:	mov    rdx,QWORD PTR [rip+0x2cdf9]        # 0x1400460f0
   1400192f7:	lea    r8,[rip+0x1e102]        # 0x140037400
   1400192fe:	xor    r9d,r9d
   140019301:	mov    rcx,rax
   140019304:	call   0x140011650
   140019309:	lea    rcx,[rsp+0x20]
   14001930e:	call   0x14000e980
   140019313:	xor    r8d,r8d
   140019316:	lea    rdx,[rip+0x1e0ef]        # 0x14003740c
   14001931d:	mov    rcx,rax
   140019320:	call   0x14000e1f0
   140019325:	test   rax,rax
   140019328:	je     0x140019339
   14001932a:	lea    rdx,[rip+0x1e0e7]        # 0x140037418
   140019331:	mov    rcx,rax
   140019334:	call   0x1400116c0
   140019339:	lea    rcx,[rsp+0x20]
   14001933e:	call   0x14000cc20
   140019343:	lea    rcx,[rsp+0x20]
   140019348:	call   0x14000ff00
   14001934d:	test   al,al
   14001934f:	jne    0x1400192b0
   140019355:	cmp    DWORD PTR [rsp+0x30],0x0
   14001935a:	mov    rdx,QWORD PTR [rsp+0x28]
   14001935f:	mov    DWORD PTR [rsp+0x20],0x0
   140019367:	jl     0x1400193b5
   140019369:	lea    rax,[rsp+0x38]
   14001936e:	cmp    rdx,rax
   140019371:	je     0x1400193b5
   140019373:	test   rdx,rdx
   140019376:	je     0x140019392
   140019378:	test   DWORD PTR [rsp+0x34],0xc0000000
   140019380:	jne    0x140019392
   140019382:	mov    rax,QWORD PTR [rip+0x19007]        # 0x140032390
   140019389:	mov    rcx,QWORD PTR [rax]
   14001938c:	mov    rax,QWORD PTR [rcx]
   14001938f:	call   QWORD PTR [rax+0x28]
   140019392:	mov    eax,DWORD PTR [rsp+0x34]
   140019396:	lea    rdx,[rsp+0x38]
   14001939b:	and    eax,0x3fffffff
   1400193a0:	mov    QWORD PTR [rsp+0x28],rdx
   1400193a5:	bts    eax,0x1f
   1400193a9:	mov    DWORD PTR [rsp+0x30],0x4
   1400193b1:	mov    DWORD PTR [rsp+0x34],eax
   1400193b5:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400193bd:	jne    0x1400193d4
   1400193bf:	test   rdx,rdx
   1400193c2:	je     0x1400193d4
   1400193c4:	mov    rax,QWORD PTR [rip+0x18fc5]        # 0x140032390
   1400193cb:	mov    rcx,QWORD PTR [rax]
   1400193ce:	mov    rax,QWORD PTR [rcx]
   1400193d1:	call   QWORD PTR [rax+0x28]
   1400193d4:	mov    eax,0x1
   1400193d9:	add    rsp,0x88
   1400193e0:	ret    
   1400193e1:	int3   
   1400193e2:	int3   
   1400193e3:	int3   
   1400193e4:	int3   
   1400193e5:	int3   
   1400193e6:	int3   
   1400193e7:	int3   
   1400193e8:	int3   
   1400193e9:	int3   
   1400193ea:	int3   
   1400193eb:	int3   
   1400193ec:	int3   
   1400193ed:	int3   
   1400193ee:	int3   
   1400193ef:	int3   
   1400193f0:	sub    rsp,0x88
   1400193f7:	mov    rdx,QWORD PTR [rcx+0x8]
   1400193fb:	lea    rcx,[rsp+0x20]
   140019400:	call   0x14000c540
   140019405:	lea    rcx,[rsp+0x20]
   14001940a:	call   0x14000ff00
   14001940f:	test   al,al
   140019411:	je     0x140019484
   140019413:	lea    rcx,[rsp+0x20]
   140019418:	call   0x14000e980
   14001941d:	mov    rdx,QWORD PTR [rip+0x2cccc]        # 0x1400460f0
   140019424:	lea    r8,[rip+0x19375]        # 0x1400327a0
   14001942b:	xor    r9d,r9d
   14001942e:	mov    rcx,rax
   140019431:	call   0x14000ee70
   140019436:	lea    rdx,[rip+0x1defb]        # 0x140037338
   14001943d:	mov    rcx,rax
   140019440:	call   0x140028260
   140019445:	test   eax,eax
   140019447:	jne    0x14001946c
   140019449:	lea    rcx,[rsp+0x20]
   14001944e:	call   0x14000e980
   140019453:	mov    rdx,QWORD PTR [rip+0x2cc96]        # 0x1400460f0
   14001945a:	lea    r8,[rip+0x1dfbf]        # 0x140037420
   140019461:	xor    r9d,r9d
   140019464:	mov    rcx,rax
   140019467:	call   0x140011650
   14001946c:	lea    rcx,[rsp+0x20]
   140019471:	call   0x14000cc20
   140019476:	lea    rcx,[rsp+0x20]
   14001947b:	call   0x14000ff00
   140019480:	test   al,al
   140019482:	jne    0x140019413
   140019484:	cmp    DWORD PTR [rsp+0x30],0x0
   140019489:	mov    rdx,QWORD PTR [rsp+0x28]
   14001948e:	mov    DWORD PTR [rsp+0x20],0x0
   140019496:	jl     0x1400194e4
   140019498:	lea    rax,[rsp+0x38]
   14001949d:	cmp    rdx,rax
   1400194a0:	je     0x1400194e4
   1400194a2:	test   rdx,rdx
   1400194a5:	je     0x1400194c1
   1400194a7:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400194af:	jne    0x1400194c1
   1400194b1:	mov    rax,QWORD PTR [rip+0x18ed8]        # 0x140032390
   1400194b8:	mov    rcx,QWORD PTR [rax]
   1400194bb:	mov    rax,QWORD PTR [rcx]
   1400194be:	call   QWORD PTR [rax+0x28]
   1400194c1:	mov    eax,DWORD PTR [rsp+0x34]
   1400194c5:	lea    rdx,[rsp+0x38]
   1400194ca:	and    eax,0x3fffffff
   1400194cf:	mov    QWORD PTR [rsp+0x28],rdx
   1400194d4:	bts    eax,0x1f
   1400194d8:	mov    DWORD PTR [rsp+0x30],0x4
   1400194e0:	mov    DWORD PTR [rsp+0x34],eax
   1400194e4:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400194ec:	jne    0x140019503
   1400194ee:	test   rdx,rdx
   1400194f1:	je     0x140019503
   1400194f3:	mov    rax,QWORD PTR [rip+0x18e96]        # 0x140032390
   1400194fa:	mov    rcx,QWORD PTR [rax]
   1400194fd:	mov    rax,QWORD PTR [rcx]
   140019500:	call   QWORD PTR [rax+0x28]
   140019503:	mov    eax,0x1
   140019508:	add    rsp,0x88
   14001950f:	ret    
   140019510:	rex push rbx
   140019512:	push   rdi
   140019513:	sub    rsp,0x88
   14001951a:	mov    rdx,QWORD PTR [rcx+0x8]
   14001951e:	mov    rdi,rcx
   140019521:	lea    rcx,[rsp+0x20]
   140019526:	call   0x14000c540
   14001952b:	lea    rcx,[rsp+0x20]
   140019530:	call   0x14000ff00
   140019535:	xor    ebx,ebx
   140019537:	test   al,al
   140019539:	je     0x1400195b1
   14001953b:	nop    DWORD PTR [rax+rax*1+0x0]
   140019540:	lea    rcx,[rsp+0x20]
   140019545:	call   0x14000e980
   14001954a:	mov    rdx,QWORD PTR [rip+0x2cb9f]        # 0x1400460f0
   140019551:	lea    r8,[rip+0x19248]        # 0x1400327a0
   140019558:	mov    r9d,ebx
   14001955b:	mov    rcx,rax
   14001955e:	call   0x14000ee70
   140019563:	lea    rdx,[rip+0x1dec6]        # 0x140037430
   14001956a:	mov    rcx,rax
   14001956d:	call   0x140028260
   140019572:	test   eax,eax
   140019574:	jne    0x140019599
   140019576:	lea    rcx,[rsp+0x20]
   14001957b:	call   0x14000e980
   140019580:	mov    rdx,QWORD PTR [rip+0x2cb69]        # 0x1400460f0
   140019587:	lea    r8,[rip+0x1deb2]        # 0x140037440
   14001958e:	mov    r9d,ebx
   140019591:	mov    rcx,rax
   140019594:	call   0x140011650
   140019599:	lea    rcx,[rsp+0x20]
   14001959e:	call   0x14000cc20
   1400195a3:	lea    rcx,[rsp+0x20]
   1400195a8:	call   0x14000ff00
   1400195ad:	test   al,al
   1400195af:	jne    0x140019540
   1400195b1:	mov    rdx,QWORD PTR [rsp+0x28]
   1400195b6:	mov    DWORD PTR [rsp+0x20],ebx
   1400195ba:	cmp    DWORD PTR [rsp+0x30],ebx
   1400195be:	jl     0x14001960c
   1400195c0:	lea    rax,[rsp+0x38]
   1400195c5:	cmp    rdx,rax
   1400195c8:	je     0x14001960c
   1400195ca:	test   rdx,rdx
   1400195cd:	je     0x1400195e9
   1400195cf:	test   DWORD PTR [rsp+0x34],0xc0000000
   1400195d7:	jne    0x1400195e9
   1400195d9:	mov    rax,QWORD PTR [rip+0x18db0]        # 0x140032390
   1400195e0:	mov    rcx,QWORD PTR [rax]
   1400195e3:	mov    rax,QWORD PTR [rcx]
   1400195e6:	call   QWORD PTR [rax+0x28]
   1400195e9:	mov    eax,DWORD PTR [rsp+0x34]
   1400195ed:	lea    rdx,[rsp+0x38]
   1400195f2:	and    eax,0x3fffffff
   1400195f7:	mov    QWORD PTR [rsp+0x28],rdx
   1400195fc:	bts    eax,0x1f
   140019600:	mov    DWORD PTR [rsp+0x30],0x4
   140019608:	mov    DWORD PTR [rsp+0x34],eax
   14001960c:	test   DWORD PTR [rsp+0x34],0xc0000000
   140019614:	jne    0x14001962b
   140019616:	test   rdx,rdx
   140019619:	je     0x14001962b
   14001961b:	mov    rax,QWORD PTR [rip+0x18d6e]        # 0x140032390
   140019622:	mov    rcx,QWORD PTR [rax]
   140019625:	mov    rax,QWORD PTR [rcx]
   140019628:	call   QWORD PTR [rax+0x28]
   14001962b:	mov    rcx,QWORD PTR [rdi+0x8]
   14001962f:	lea    rdx,[rip+0x1dcb2]        # 0x1400372e8
   140019636:	mov    r8d,ebx
   140019639:	mov    QWORD PTR [rsp+0xa0],rbp
   140019641:	call   0x14000e1f0
   140019646:	test   rax,rax
   140019649:	je     0x1400197bd
   14001964f:	mov    r8d,ebx
   140019652:	lea    rdx,[rip+0x1dc9f]        # 0x1400372f8
   140019659:	mov    rcx,rax
   14001965c:	call   0x14000e1f0
   140019661:	mov    rbp,rax
   140019664:	test   rax,rax
   140019667:	je     0x1400197bd
   14001966d:	mov    QWORD PTR [rsp+0xa8],rsi
   140019675:	mov    rcx,rax
   140019678:	mov    esi,ebx
   14001967a:	call   0x14000ea00
   14001967f:	test   eax,eax
   140019681:	jle    0x1400196c7
   140019683:	mov    edx,esi
   140019685:	mov    rcx,rbp
   140019688:	call   0x14000e9b0
   14001968d:	mov    rdx,QWORD PTR [rip+0x2ca5c]        # 0x1400460f0
   140019694:	lea    r8,[rip+0x19105]        # 0x1400327a0
   14001969b:	mov    r9d,ebx
   14001969e:	mov    rcx,rax
   1400196a1:	call   0x14000ee70
   1400196a6:	lea    rdx,[rip+0x1dda3]        # 0x140037450
   1400196ad:	mov    rcx,rax
   1400196b0:	call   0x140028260
   1400196b5:	test   eax,eax
   1400196b7:	je     0x1400196e6
   1400196b9:	mov    rcx,rbp
   1400196bc:	inc    esi
   1400196be:	call   0x14000ea00
   1400196c3:	cmp    esi,eax
   1400196c5:	jl     0x140019683
   1400196c7:	mov    eax,0x1
   1400196cc:	mov    rsi,QWORD PTR [rsp+0xa8]
   1400196d4:	mov    rbp,QWORD PTR [rsp+0xa0]
   1400196dc:	add    rsp,0x88
   1400196e3:	pop    rdi
   1400196e4:	pop    rbx
   1400196e5:	ret    
   1400196e6:	cmp    esi,0xffffffff
   1400196e9:	je     0x1400196c7
   1400196eb:	mov    QWORD PTR [rsp+0xb0],r12
   1400196f3:	lea    rdx,[rip+0x1db1e]        # 0x140037218
   1400196fa:	mov    QWORD PTR [rsp+0xb8],r14
   140019702:	mov    r8b,0x1
   140019705:	mov    rcx,rbp
   140019708:	mov    QWORD PTR [rsp+0x80],r15
   140019710:	call   0x140018b10
   140019715:	mov    edx,esi
   140019717:	mov    rcx,rbp
   14001971a:	mov    edi,eax
   14001971c:	call   0x14000e9b0
   140019721:	mov    rcx,rax
   140019724:	lea    rdx,[rip+0x1dbcd]        # 0x1400372f8
   14001972b:	mov    r8d,ebx
   14001972e:	call   0x14000e270
   140019733:	mov    edx,edi
   140019735:	mov    rcx,rbp
   140019738:	mov    r14,rax
   14001973b:	call   0x14000e9b0
   140019740:	mov    rcx,rax
   140019743:	lea    rdx,[rip+0x1dbae]        # 0x1400372f8
   14001974a:	mov    r8d,ebx
   14001974d:	call   0x14000e270
   140019752:	mov    rcx,r14
   140019755:	mov    r12,rax
   140019758:	call   0x14000ea00
   14001975d:	mov    r15d,eax
   140019760:	test   eax,eax
   140019762:	jle    0x14001978b
   140019764:	mov    edx,ebx
   140019766:	mov    rcx,r14
   140019769:	call   0x14000e9b0
   14001976e:	mov    rcx,r12
   140019771:	mov    rdi,rax
   140019774:	call   0x14000d100
   140019779:	mov    rcx,rax
   14001977c:	mov    rdx,rdi
   14001977f:	call   0x14000d830
   140019784:	inc    ebx
   140019786:	cmp    ebx,r15d
   140019789:	jl     0x140019764
   14001978b:	mov    r8d,0x1
   140019791:	mov    edx,esi
   140019793:	mov    rcx,rbp
   140019796:	call   0x14000d580
   14001979b:	mov    r15,QWORD PTR [rsp+0x80]
   1400197a3:	mov    eax,0x1
   1400197a8:	mov    r14,QWORD PTR [rsp+0xb8]
   1400197b0:	mov    r12,QWORD PTR [rsp+0xb0]
   1400197b8:	jmp    0x1400196cc
   1400197bd:	mov    eax,0x1
   1400197c2:	mov    rbp,QWORD PTR [rsp+0xa0]
   1400197ca:	add    rsp,0x88
   1400197d1:	pop    rdi
   1400197d2:	pop    rbx
   1400197d3:	ret    
   1400197d4:	int3   
   1400197d5:	int3   
   1400197d6:	int3   
   1400197d7:	int3   
   1400197d8:	int3   
   1400197d9:	int3   
   1400197da:	int3   
   1400197db:	int3   
   1400197dc:	int3   
   1400197dd:	int3   
   1400197de:	int3   
   1400197df:	int3   
   1400197e0:	rex push rbp
   1400197e2:	lea    rbp,[rsp-0x57]
   1400197e7:	sub    rsp,0xa0
   1400197ee:	mov    rdx,QWORD PTR [rcx+0x8]
   1400197f2:	lea    rcx,[rbp-0x19]
   1400197f6:	mov    QWORD PTR [rsp+0xc0],rsi
   1400197fe:	call   0x14000c540
   140019803:	lea    rcx,[rbp-0x19]
   140019807:	call   0x14000ff00
   14001980c:	xor    esi,esi
   14001980e:	test   al,al
   140019810:	je     0x140019993
   140019816:	mov    QWORD PTR [rsp+0x90],r14
   14001981e:	lea    r14,[rip+0x1dc3f]        # 0x140037464
   140019825:	mov    QWORD PTR [rsp+0xb8],rbx
   14001982d:	mov    QWORD PTR [rsp+0x98],rdi
   140019835:	lea    rcx,[rbp-0x19]
   140019839:	call   0x14000e980
   14001983e:	mov    rdx,QWORD PTR [rip+0x2c8ab]        # 0x1400460f0
   140019845:	lea    r8,[rip+0x18f54]        # 0x1400327a0
   14001984c:	mov    r9d,esi
   14001984f:	mov    rcx,rax
   140019852:	call   0x14000ee70
   140019857:	lea    rdx,[rip+0x1dba2]        # 0x140037400
   14001985e:	mov    rcx,rax
   140019861:	call   0x140028260
   140019866:	test   eax,eax
   140019868:	je     0x1400198a8
   14001986a:	lea    rcx,[rbp-0x19]
   14001986e:	call   0x14000e980
   140019873:	mov    rdx,QWORD PTR [rip+0x2c876]        # 0x1400460f0
   14001987a:	lea    r8,[rip+0x18f1f]        # 0x1400327a0
   140019881:	mov    r9d,esi
   140019884:	mov    rcx,rax
   140019887:	call   0x14000ee70
   14001988c:	mov    rcx,rsi
   14001988f:	nop
   140019890:	movzx  edx,BYTE PTR [rax+rcx*1]
   140019894:	inc    rcx
   140019897:	cmp    dl,BYTE PTR [r14+rcx*1-0x1]
   14001989c:	jne    0x140019a19
   1400198a2:	cmp    rcx,0x5
   1400198a6:	jne    0x140019890
   1400198a8:	lea    rcx,[rbp-0x19]
   1400198ac:	call   0x14000e980
   1400198b1:	mov    r8d,esi
   1400198b4:	lea    rdx,[rip+0x1dbb5]        # 0x140037470
   1400198bb:	mov    rcx,rax
   1400198be:	call   0x14000e1f0
   1400198c3:	mov    rdi,rax
   1400198c6:	test   rax,rax
   1400198c9:	je     0x140019961
   1400198cf:	lea    rdx,[rbp+0x67]
   1400198d3:	mov    QWORD PTR [rbp+0x67],rsi
   1400198d7:	mov    rcx,rax
   1400198da:	call   0x14000ef50
   1400198df:	mov    rcx,QWORD PTR [rbp+0x67]
   1400198e3:	test   rcx,rcx
   1400198e6:	je     0x1400198ed
   1400198e8:	cmp    BYTE PTR [rcx],sil
   1400198eb:	jne    0x140019914
   1400198ed:	lea    rcx,[rbp-0x19]
   1400198f1:	call   0x14000e980
   1400198f6:	lea    r9,[rip+0x18ea3]        # 0x1400327a0
   1400198fd:	mov    DWORD PTR [rsp+0x20],esi
   140019901:	lea    r8,[rbp+0x67]
   140019905:	mov    rcx,rax
   140019908:	lea    rdx,[rip+0x1d9ad]        # 0x1400372bc
   14001990f:	call   0x14000edc0
   140019914:	lea    rcx,[rbp-0x19]
   140019918:	call   0x14000e980
   14001991d:	lea    rcx,[rbp+0x67]
   140019921:	mov    rbx,rax
   140019924:	call   0x14001b050
   140019929:	mov    r9d,esi
   14001992c:	lea    rdx,[rip+0x1db4d]        # 0x140037480
   140019933:	mov    r8,rax
   140019936:	mov    rcx,rbx
   140019939:	call   0x140011650
   14001993e:	lea    rcx,[rbp-0x19]
   140019942:	call   0x14000e980
   140019947:	mov    rdx,rdi
   14001994a:	mov    rcx,rax
   14001994d:	call   0x140011000
   140019952:	cmp    QWORD PTR [rbp+0x67],rsi
   140019956:	je     0x140019961
   140019958:	lea    rcx,[rbp+0x67]
   14001995c:	call   0x14001b030
   140019961:	lea    rcx,[rbp-0x19]
   140019965:	call   0x14000cc20
   14001996a:	lea    rcx,[rbp-0x19]
   14001996e:	call   0x14000ff00
   140019973:	test   al,al
   140019975:	jne    0x140019835
   14001997b:	mov    r14,QWORD PTR [rsp+0x90]
   140019983:	mov    rdi,QWORD PTR [rsp+0x98]
   14001998b:	mov    rbx,QWORD PTR [rsp+0xb8]
   140019993:	cmp    DWORD PTR [rbp-0x9],0x0
   140019997:	mov    rdx,QWORD PTR [rbp-0x11]
   14001999b:	mov    DWORD PTR [rbp-0x19],esi
   14001999e:	mov    rsi,QWORD PTR [rsp+0xc0]
   1400199a6:	jl     0x1400199ed
   1400199a8:	lea    rax,[rbp-0x1]
   1400199ac:	cmp    rdx,rax
   1400199af:	je     0x1400199ed
   1400199b1:	test   rdx,rdx
   1400199b4:	je     0x1400199cf
   1400199b6:	test   DWORD PTR [rbp-0x5],0xc0000000
   1400199bd:	jne    0x1400199cf
   1400199bf:	mov    rax,QWORD PTR [rip+0x189ca]        # 0x140032390
   1400199c6:	mov    rcx,QWORD PTR [rax]
   1400199c9:	mov    rax,QWORD PTR [rcx]
   1400199cc:	call   QWORD PTR [rax+0x28]
   1400199cf:	mov    eax,DWORD PTR [rbp-0x5]
   1400199d2:	lea    rdx,[rbp-0x1]
   1400199d6:	and    eax,0x3fffffff
   1400199db:	mov    QWORD PTR [rbp-0x11],rdx
   1400199df:	bts    eax,0x1f
   1400199e3:	mov    DWORD PTR [rbp-0x9],0x4
   1400199ea:	mov    DWORD PTR [rbp-0x5],eax
   1400199ed:	test   DWORD PTR [rbp-0x5],0xc0000000
   1400199f4:	jne    0x140019a0b
   1400199f6:	test   rdx,rdx
   1400199f9:	je     0x140019a0b
   1400199fb:	mov    rax,QWORD PTR [rip+0x1898e]        # 0x140032390
   140019a02:	mov    rcx,QWORD PTR [rax]
   140019a05:	mov    rax,QWORD PTR [rcx]
   140019a08:	call   QWORD PTR [rax+0x28]
   140019a0b:	mov    eax,0x1
   140019a10:	add    rsp,0xa0
   140019a17:	pop    rbp
   140019a18:	ret    
   140019a19:	lea    rcx,[rbp-0x19]
   140019a1d:	call   0x14000e980
   140019a22:	mov    rdx,QWORD PTR [rip+0x2c6c7]        # 0x1400460f0
   140019a29:	lea    r8,[rip+0x18d70]        # 0x1400327a0
   140019a30:	mov    r9d,esi
   140019a33:	mov    rcx,rax
   140019a36:	call   0x14000ee70
   140019a3b:	lea    rdx,[rip+0x1d9fe]        # 0x140037440
   140019a42:	mov    rcx,rax
   140019a45:	call   0x140028260
   140019a4a:	test   eax,eax
   140019a4c:	jne    0x140019961
   140019a52:	lea    rcx,[rbp-0x19]
   140019a56:	call   0x14000e980
   140019a5b:	mov    r8d,esi
   140019a5e:	lea    rdx,[rip+0x1da0b]        # 0x140037470
   140019a65:	mov    rcx,rax
   140019a68:	call   0x14000e1f0
   140019a6d:	mov    rdi,rax
   140019a70:	test   rax,rax
   140019a73:	je     0x140019961
   140019a79:	lea    rdx,[rbp+0x67]
   140019a7d:	mov    QWORD PTR [rbp+0x67],rsi
   140019a81:	mov    rcx,rax
   140019a84:	call   0x14000ef50
   140019a89:	jmp    0x140019914
   140019a8e:	int3   
   140019a8f:	int3   
   140019a90:	rex push rbx
   140019a92:	push   rsi
   140019a93:	sub    rsp,0x28
   140019a97:	mov    rcx,QWORD PTR [rcx+0x8]
   140019a9b:	lea    rdx,[rip+0x1d846]        # 0x1400372e8
   140019aa2:	xor    ebx,ebx
   140019aa4:	mov    r8d,ebx
   140019aa7:	call   0x14000e1f0
   140019aac:	test   rax,rax
   140019aaf:	je     0x140019bed
   140019ab5:	mov    r8d,ebx
   140019ab8:	lea    rdx,[rip+0x1d839]        # 0x1400372f8
   140019abf:	mov    rcx,rax
   140019ac2:	call   0x14000e1f0
   140019ac7:	mov    rsi,rax
   140019aca:	test   rax,rax
   140019acd:	je     0x140019bed
   140019ad3:	xor    r8d,r8d
   140019ad6:	mov    QWORD PTR [rsp+0x58],r14
   140019adb:	lea    rdx,[rip+0x1d9ae]        # 0x140037490
   140019ae2:	mov    rcx,rax
   140019ae5:	call   0x140018b10
   140019aea:	mov    r14d,eax
   140019aed:	cmp    eax,0xffffffff
   140019af0:	jne    0x140019b01
   140019af2:	lea    eax,[rbx+0x1]
   140019af5:	mov    r14,QWORD PTR [rsp+0x58]
   140019afa:	add    rsp,0x28
   140019afe:	pop    rsi
   140019aff:	pop    rbx
   140019b00:	ret    
   140019b01:	mov    edx,r14d
   140019b04:	mov    QWORD PTR [rsp+0x40],rbp
   140019b09:	mov    rcx,rsi
   140019b0c:	call   0x14000e9b0
   140019b11:	mov    rcx,rax
   140019b14:	lea    rdx,[rip+0x1d7dd]        # 0x1400372f8
   140019b1b:	mov    r8d,ebx
   140019b1e:	call   0x14000e1f0
   140019b23:	mov    rbp,rax
   140019b26:	test   rax,rax
   140019b29:	jne    0x140019b3f
   140019b2b:	mov    r14,QWORD PTR [rsp+0x58]
   140019b30:	lea    eax,[rbp+0x1]
   140019b33:	mov    rbp,QWORD PTR [rsp+0x40]
   140019b38:	add    rsp,0x28
   140019b3c:	pop    rsi
   140019b3d:	pop    rbx
   140019b3e:	ret    
   140019b3f:	mov    QWORD PTR [rsp+0x50],r12
   140019b44:	lea    rdx,[rip+0x1d6cd]        # 0x140037218
   140019b4b:	mov    r8b,0x1
   140019b4e:	mov    QWORD PTR [rsp+0x20],r15
   140019b53:	mov    rcx,rsi
   140019b56:	call   0x140018b10
   140019b5b:	mov    edx,eax
   140019b5d:	mov    rcx,rsi
   140019b60:	call   0x14000e9b0
   140019b65:	mov    rcx,rax
   140019b68:	lea    rdx,[rip+0x1d789]        # 0x1400372f8
   140019b6f:	mov    r8d,ebx
   140019b72:	call   0x14000e270
   140019b77:	mov    rcx,rbp
   140019b7a:	mov    r12,rax
   140019b7d:	call   0x14000ea00
   140019b82:	mov    r15d,eax
   140019b85:	test   eax,eax
   140019b87:	jle    0x140019bbc
   140019b89:	mov    QWORD PTR [rsp+0x48],rdi
   140019b8e:	xchg   ax,ax
   140019b90:	mov    edx,ebx
   140019b92:	mov    rcx,rbp
   140019b95:	call   0x14000e9b0
   140019b9a:	mov    rcx,r12
   140019b9d:	mov    rdi,rax
   140019ba0:	call   0x14000d100
   140019ba5:	mov    rcx,rax
   140019ba8:	mov    rdx,rdi
   140019bab:	call   0x14000d830
   140019bb0:	inc    ebx
   140019bb2:	cmp    ebx,r15d
   140019bb5:	jl     0x140019b90
   140019bb7:	mov    rdi,QWORD PTR [rsp+0x48]
   140019bbc:	mov    r8d,0x1
   140019bc2:	mov    edx,r14d
   140019bc5:	mov    rcx,rsi
   140019bc8:	call   0x14000d580
   140019bcd:	mov    r15,QWORD PTR [rsp+0x20]
   140019bd2:	mov    eax,0x1
   140019bd7:	mov    r12,QWORD PTR [rsp+0x50]
   140019bdc:	mov    rbp,QWORD PTR [rsp+0x40]
   140019be1:	mov    r14,QWORD PTR [rsp+0x58]
   140019be6:	add    rsp,0x28
   140019bea:	pop    rsi
   140019beb:	pop    rbx
   140019bec:	ret    
   140019bed:	mov    eax,0x1
   140019bf2:	add    rsp,0x28
   140019bf6:	pop    rsi
   140019bf7:	pop    rbx
   140019bf8:	ret    
   140019bf9:	int3   
   140019bfa:	int3   
   140019bfb:	int3   
   140019bfc:	int3   
   140019bfd:	int3   
   140019bfe:	int3   
   140019bff:	int3   
   140019c00:	rex push rbp
   140019c02:	lea    rbp,[rsp-0x57]
   140019c07:	sub    rsp,0xa0
   140019c0e:	mov    rdx,QWORD PTR [rcx+0x8]
   140019c12:	lea    rax,[rip+0x1d827]        # 0x140037440
   140019c19:	mov    QWORD PTR [rbp+0x2f],rax
   140019c1d:	lea    rcx,[rbp-0x29]
   140019c21:	lea    rax,[rip+0x1d878]        # 0x1400374a0
   140019c28:	mov    QWORD PTR [rbp+0x37],rax
   140019c2c:	lea    rax,[rip+0x1d831]        # 0x140037464
   140019c33:	mov    QWORD PTR [rbp+0x3f],rax
   140019c37:	lea    rax,[rip+0x1d7c2]        # 0x140037400
   140019c3e:	mov    QWORD PTR [rbp+0x47],rax
   140019c42:	lea    rax,[rip+0x1d85f]        # 0x1400374a8
   140019c49:	mov    QWORD PTR [rbp+0x4f],rax
   140019c4d:	call   0x14000c540
   140019c52:	lea    rcx,[rbp-0x29]
   140019c56:	call   0x14000ff00
   140019c5b:	test   al,al
   140019c5d:	je     0x140019d65
   140019c63:	mov    QWORD PTR [rsp+0xb0],rbx
   140019c6b:	mov    QWORD PTR [rsp+0xb8],rdi
   140019c73:	lea    rcx,[rbp-0x29]
   140019c77:	call   0x14000e980
   140019c7c:	mov    rdx,QWORD PTR [rip+0x2c46d]        # 0x1400460f0
   140019c83:	lea    r8,[rip+0x18b16]        # 0x1400327a0
   140019c8a:	xor    r9d,r9d
   140019c8d:	mov    rcx,rax
   140019c90:	call   0x14000ee70
   140019c95:	xor    r10d,r10d
   140019c98:	lea    r11,[rbp+0x2f]
   140019c9c:	nop    DWORD PTR [rax+0x0]
   140019ca0:	mov    r9,QWORD PTR [r11]
   140019ca3:	mov    rcx,rax
   140019ca6:	sub    r9,rax
   140019ca9:	nop    DWORD PTR [rax+0x0]
   140019cb0:	movzx  r8d,BYTE PTR [rcx]
   140019cb4:	movzx  edx,BYTE PTR [rcx+r9*1]
   140019cb9:	sub    r8d,edx
   140019cbc:	jne    0x140019cc5
   140019cbe:	inc    rcx
   140019cc1:	test   edx,edx
   140019cc3:	jne    0x140019cb0
   140019cc5:	test   r8d,r8d
   140019cc8:	je     0x140019cd9
   140019cca:	inc    r10d
   140019ccd:	add    r11,0x8
   140019cd1:	cmp    r10d,0x5
   140019cd5:	jb     0x140019ca0
   140019cd7:	jmp    0x140019d3b
   140019cd9:	lea    rcx,[rbp-0x29]
   140019cdd:	call   0x14000e980
   140019ce2:	xor    r8d,r8d
   140019ce5:	lea    rdx,[rip+0x1d794]        # 0x140037480
   140019cec:	mov    rcx,rax
   140019cef:	call   0x14000e1f0
   140019cf4:	mov    rdi,rax
   140019cf7:	test   rax,rax
   140019cfa:	je     0x140019d3b
   140019cfc:	lea    rcx,[rbp-0x29]
   140019d00:	call   0x14000e980
   140019d05:	xor    edx,edx
   140019d07:	mov    rcx,rdi
   140019d0a:	mov    rbx,rax
   140019d0d:	call   0x14000f030
   140019d12:	mov    r8,rax
   140019d15:	lea    rdx,[rip+0x1d5a0]        # 0x1400372bc
   140019d1c:	xor    r9d,r9d
   140019d1f:	mov    rcx,rbx
   140019d22:	call   0x140011650
   140019d27:	lea    rcx,[rbp-0x29]
   140019d2b:	call   0x14000e980
   140019d30:	mov    rcx,rax
   140019d33:	mov    rdx,rdi
   140019d36:	call   0x140011000
   140019d3b:	lea    rcx,[rbp-0x29]
   140019d3f:	call   0x14000cc20
   140019d44:	lea    rcx,[rbp-0x29]
   140019d48:	call   0x14000ff00
   140019d4d:	test   al,al
   140019d4f:	jne    0x140019c73
   140019d55:	mov    rdi,QWORD PTR [rsp+0xb8]
   140019d5d:	mov    rbx,QWORD PTR [rsp+0xb0]
   140019d65:	cmp    DWORD PTR [rbp-0x19],0x0
   140019d69:	mov    rdx,QWORD PTR [rbp-0x21]
   140019d6d:	mov    DWORD PTR [rbp-0x29],0x0
   140019d74:	jl     0x140019dbb
   140019d76:	lea    rax,[rbp-0x11]
   140019d7a:	cmp    rdx,rax
   140019d7d:	je     0x140019dbb
   140019d7f:	test   rdx,rdx
   140019d82:	je     0x140019d9d
   140019d84:	test   DWORD PTR [rbp-0x15],0xc0000000
   140019d8b:	jne    0x140019d9d
   140019d8d:	mov    rax,QWORD PTR [rip+0x185fc]        # 0x140032390
   140019d94:	mov    rcx,QWORD PTR [rax]
   140019d97:	mov    rax,QWORD PTR [rcx]
   140019d9a:	call   QWORD PTR [rax+0x28]
   140019d9d:	mov    eax,DWORD PTR [rbp-0x15]
   140019da0:	lea    rdx,[rbp-0x11]
   140019da4:	and    eax,0x3fffffff
   140019da9:	mov    QWORD PTR [rbp-0x21],rdx
   140019dad:	bts    eax,0x1f
   140019db1:	mov    DWORD PTR [rbp-0x19],0x4
   140019db8:	mov    DWORD PTR [rbp-0x15],eax
   140019dbb:	test   DWORD PTR [rbp-0x15],0xc0000000
   140019dc2:	jne    0x140019dd9
   140019dc4:	test   rdx,rdx
   140019dc7:	je     0x140019dd9
   140019dc9:	mov    rax,QWORD PTR [rip+0x185c0]        # 0x140032390
   140019dd0:	mov    rcx,QWORD PTR [rax]
   140019dd3:	mov    rax,QWORD PTR [rcx]
   140019dd6:	call   QWORD PTR [rax+0x28]
   140019dd9:	mov    eax,0x1
   140019dde:	add    rsp,0xa0
   140019de5:	pop    rbp
   140019de6:	ret    
   140019de7:	int3   
   140019de8:	int3   
   140019de9:	int3   
   140019dea:	int3   
   140019deb:	int3   
   140019dec:	int3   
   140019ded:	int3   
   140019dee:	int3   
   140019def:	int3   
   140019df0:	mov    QWORD PTR [rsp+0x8],rbx
   140019df5:	push   rdi
   140019df6:	sub    rsp,0x20
   140019dfa:	mov    rdi,rcx
   140019dfd:	lea    rdx,[rip+0x1d6b4]        # 0x1400374b8
   140019e04:	mov    rcx,QWORD PTR [rcx+0x8]
   140019e08:	xor    r9d,r9d
   140019e0b:	xor    r8d,r8d
   140019e0e:	call   0x14000ec40
   140019e13:	mov    rcx,QWORD PTR [rdi+0x8]
   140019e17:	lea    rdx,[rip+0x1d6b6]        # 0x1400374d4
   140019e1e:	mov    ebx,eax
   140019e20:	xor    r9d,r9d
   140019e23:	lea    r8d,[rbx+0x1]
   140019e27:	call   0x140011610
   140019e2c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019e30:	lea    r8d,[rbx+0x1]
   140019e34:	xor    r9d,r9d
   140019e37:	lea    rdx,[rip+0x1d67a]        # 0x1400374b8
   140019e3e:	call   0x140011610
   140019e43:	mov    rbx,QWORD PTR [rsp+0x30]
   140019e48:	mov    eax,0x1
   140019e4d:	add    rsp,0x20
   140019e51:	pop    rdi
   140019e52:	ret    
   140019e53:	int3   
   140019e54:	int3   
   140019e55:	int3   
   140019e56:	int3   
   140019e57:	int3   
   140019e58:	int3   
   140019e59:	int3   
   140019e5a:	int3   
   140019e5b:	int3   
   140019e5c:	int3   
   140019e5d:	int3   
   140019e5e:	int3   
   140019e5f:	int3   
   140019e60:	mov    QWORD PTR [rsp+0x8],rbx
   140019e65:	push   rdi
   140019e66:	sub    rsp,0x20
   140019e6a:	mov    rdi,rcx
   140019e6d:	lea    rdx,[rip+0x1d644]        # 0x1400374b8
   140019e74:	mov    rcx,QWORD PTR [rcx+0x8]
   140019e78:	xor    r9d,r9d
   140019e7b:	xor    r8d,r8d
   140019e7e:	call   0x14000ec40
   140019e83:	mov    rcx,QWORD PTR [rdi+0x8]
   140019e87:	lea    rdx,[rip+0x1d656]        # 0x1400374e4
   140019e8e:	mov    ebx,eax
   140019e90:	xor    r9d,r9d
   140019e93:	lea    r8d,[rbx+0x1]
   140019e97:	call   0x140011610
   140019e9c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019ea0:	lea    r8d,[rbx+0x1]
   140019ea4:	xor    r9d,r9d
   140019ea7:	lea    rdx,[rip+0x1d60a]        # 0x1400374b8
   140019eae:	call   0x140011610
   140019eb3:	mov    rbx,QWORD PTR [rsp+0x30]
   140019eb8:	mov    eax,0x1
   140019ebd:	add    rsp,0x20
   140019ec1:	pop    rdi
   140019ec2:	ret    
   140019ec3:	int3   
   140019ec4:	int3   
   140019ec5:	int3   
   140019ec6:	int3   
   140019ec7:	int3   
   140019ec8:	int3   
   140019ec9:	int3   
   140019eca:	int3   
   140019ecb:	int3   
   140019ecc:	int3   
   140019ecd:	int3   
   140019ece:	int3   
   140019ecf:	int3   
   140019ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140019ed5:	push   rdi
   140019ed6:	sub    rsp,0x20
   140019eda:	mov    rdi,rcx
   140019edd:	lea    rdx,[rip+0x1d5d4]        # 0x1400374b8
   140019ee4:	mov    rcx,QWORD PTR [rcx+0x8]
   140019ee8:	xor    r9d,r9d
   140019eeb:	xor    r8d,r8d
   140019eee:	call   0x14000ec40
   140019ef3:	mov    rcx,QWORD PTR [rdi+0x8]
   140019ef7:	lea    rdx,[rip+0x1d5ee]        # 0x1400374ec
   140019efe:	mov    ebx,eax
   140019f00:	xor    r9d,r9d
   140019f03:	lea    r8d,[rbx+0x1]
   140019f07:	call   0x140011610
   140019f0c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019f10:	lea    r8d,[rbx+0x1]
   140019f14:	xor    r9d,r9d
   140019f17:	lea    rdx,[rip+0x1d59a]        # 0x1400374b8
   140019f1e:	call   0x140011610
   140019f23:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f28:	mov    eax,0x1
   140019f2d:	add    rsp,0x20
   140019f31:	pop    rdi
   140019f32:	ret    
   140019f33:	int3   
   140019f34:	int3   
   140019f35:	int3   
   140019f36:	int3   
   140019f37:	int3   
   140019f38:	int3   
   140019f39:	int3   
   140019f3a:	int3   
   140019f3b:	int3   
   140019f3c:	int3   
   140019f3d:	int3   
   140019f3e:	int3   
   140019f3f:	int3   
   140019f40:	mov    QWORD PTR [rsp+0x8],rbx
   140019f45:	push   rdi
   140019f46:	sub    rsp,0x20
   140019f4a:	mov    rdi,rcx
   140019f4d:	lea    rdx,[rip+0x1d564]        # 0x1400374b8
   140019f54:	mov    rcx,QWORD PTR [rcx+0x8]
   140019f58:	xor    r9d,r9d
   140019f5b:	xor    r8d,r8d
   140019f5e:	call   0x14000ec40
   140019f63:	mov    rcx,QWORD PTR [rdi+0x8]
   140019f67:	lea    rdx,[rip+0x1d586]        # 0x1400374f4
   140019f6e:	mov    ebx,eax
   140019f70:	xor    r9d,r9d
   140019f73:	lea    r8d,[rbx+0x1]
   140019f77:	call   0x140011610
   140019f7c:	mov    rcx,QWORD PTR [rdi+0x8]
   140019f80:	lea    r8d,[rbx+0x1]
   140019f84:	xor    r9d,r9d
   140019f87:	lea    rdx,[rip+0x1d52a]        # 0x1400374b8
   140019f8e:	call   0x140011610
   140019f93:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f98:	mov    eax,0x1
   140019f9d:	add    rsp,0x20
   140019fa1:	pop    rdi
   140019fa2:	ret    
   140019fa3:	int3   
   140019fa4:	int3   
   140019fa5:	int3   
   140019fa6:	int3   
   140019fa7:	int3   
   140019fa8:	int3   
   140019fa9:	int3   
   140019faa:	int3   
   140019fab:	int3   
   140019fac:	int3   
   140019fad:	int3   
   140019fae:	int3   
   140019faf:	int3   
   140019fb0:	sub    rsp,0x68
   140019fb4:	cmp    BYTE PTR [rip+0x2def7],0x0        # 0x140047eb2
   140019fbb:	je     0x140019fca
   140019fbd:	cmp    BYTE PTR [rip+0x2deef],0x0        # 0x140047eb3
   140019fc4:	je     0x14001a0e8
   140019fca:	call   QWORD PTR [rip+0x18258]        # 0x140032228
   140019fd0:	movzx  ecx,BYTE PTR [rax+0x6]
   140019fd4:	and    cl,0x30
   140019fd7:	cmp    cl,0x30
   140019fda:	jne    0x14001a0ed
   140019fe0:	test   BYTE PTR [rax+0x7],0x2
   140019fe4:	mov    ecx,DWORD PTR [rip+0x2c19e]        # 0x140046188
   140019fea:	mov    QWORD PTR [rsp+0x78],rbx
   140019fef:	mov    ebx,0x1e
   140019ff4:	cmovne ecx,ebx
   140019ff7:	mov    QWORD PTR [rsp+0x60],rdi
   140019ffc:	mov    DWORD PTR [rip+0x2c186],ecx        # 0x140046188
   14001a002:	mov    edi,0x28
   14001a007:	test   BYTE PTR [rax+0x7],0x10
   14001a00b:	cmovne ecx,edi
   14001a00e:	mov    DWORD PTR [rip+0x2c174],ecx        # 0x140046188
   14001a014:	test   BYTE PTR [rax+0x7],0x20
   14001a018:	mov    eax,0x2a
   14001a01d:	cmovne ecx,eax
   14001a020:	mov    DWORD PTR [rip+0x2c162],ecx        # 0x140046188
   14001a026:	call   QWORD PTR [rip+0x1848c]        # 0x1400324b8
   14001a02c:	xor    r8d,r8d
   14001a02f:	lea    rdx,[rip+0x1d542]        # 0x140037578
   14001a036:	mov    rcx,rax
   14001a039:	mov    r9,QWORD PTR [rax]
   14001a03c:	call   QWORD PTR [r9+0x18]
   14001a040:	mov    ecx,DWORD PTR [rip+0x2c142]        # 0x140046188
   14001a046:	mov    edx,0x14
   14001a04b:	test   rax,rax
   14001a04e:	cmovne ecx,edx
   14001a051:	mov    DWORD PTR [rip+0x2c131],ecx        # 0x140046188
   14001a057:	call   QWORD PTR [rip+0x1845b]        # 0x1400324b8
   14001a05d:	xor    r8d,r8d
   14001a060:	lea    rdx,[rip+0x1d519]        # 0x140037580
   14001a067:	mov    rcx,rax
   14001a06a:	mov    r9,QWORD PTR [rax]
   14001a06d:	call   QWORD PTR [r9+0x18]
   14001a071:	mov    ecx,DWORD PTR [rip+0x2c111]        # 0x140046188
   14001a077:	test   rax,rax
   14001a07a:	cmovne ecx,ebx
   14001a07d:	mov    DWORD PTR [rip+0x2c105],ecx        # 0x140046188
   14001a083:	call   QWORD PTR [rip+0x1842f]        # 0x1400324b8
   14001a089:	xor    r8d,r8d
   14001a08c:	lea    rdx,[rip+0x1d4f5]        # 0x140037588
   14001a093:	mov    rcx,rax
   14001a096:	mov    r9,QWORD PTR [rax]
   14001a099:	call   QWORD PTR [r9+0x18]
   14001a09d:	mov    ecx,DWORD PTR [rip+0x2c0e5]        # 0x140046188
   14001a0a3:	test   rax,rax
   14001a0a6:	stmxcsr DWORD PTR [rsp+0x70]
   14001a0ab:	mov    eax,DWORD PTR [rsp+0x70]
   14001a0af:	cmovne ecx,edi
   14001a0b2:	mov    DWORD PTR [rip+0x2c0d0],ecx        # 0x140046188
   14001a0b8:	or     eax,0x8040
   14001a0bd:	mov    DWORD PTR [rsp+0x70],eax
   14001a0c1:	mov    ecx,0x31415926
   14001a0c6:	mov    BYTE PTR [rip+0x2dde5],0x1        # 0x140047eb2
   14001a0cd:	mov    BYTE PTR [rip+0x2dddf],0x0        # 0x140047eb3
   14001a0d4:	ldmxcsr DWORD PTR [rsp+0x70]
   14001a0d9:	call   0x14001a190
   14001a0de:	mov    rdi,QWORD PTR [rsp+0x60]
   14001a0e3:	mov    rbx,QWORD PTR [rsp+0x78]
   14001a0e8:	add    rsp,0x68
   14001a0ec:	ret    
   14001a0ed:	mov    rax,QWORD PTR [rip+0x18294]        # 0x140032388
   14001a0f4:	mov    edx,0x4
   14001a0f9:	mov    ecx,DWORD PTR [rax]
   14001a0fb:	call   QWORD PTR [rip+0x183a7]        # 0x1400324a8
   14001a101:	test   al,al
   14001a103:	je     0x14001a145
   14001a105:	lea    rax,[rip+0x1d424]        # 0x140037530
   14001a10c:	mov    DWORD PTR [rsp+0x28],0x11a7
   14001a114:	mov    QWORD PTR [rsp+0x20],rax
   14001a119:	lea    r9,[rip+0x1d3e0]        # 0x140037500
   14001a120:	lea    rax,[rip+0x1d3f9]        # 0x140037520
   14001a127:	mov    edx,0x4
   14001a12c:	mov    QWORD PTR [rsp+0x30],rax
   14001a131:	lea    r8,[rsp+0x20]
   14001a136:	mov    rax,QWORD PTR [rip+0x1824b]        # 0x140032388
   14001a13d:	mov    ecx,DWORD PTR [rax]
   14001a13f:	call   QWORD PTR [rip+0x18353]        # 0x140032498
   14001a145:	call   QWORD PTR [rip+0x1843d]        # 0x140032588
   14001a14b:	test   al,al
   14001a14d:	je     0x14001a17e
   14001a14f:	call   QWORD PTR [rip+0x1832b]        # 0x140032480
   14001a155:	lea    rcx,[rip+0x18650]        # 0x1400327ac
   14001a15c:	xorps  xmm0,xmm0
   14001a15f:	lea    rdx,[rsp+0x38]
   14001a164:	mov    DWORD PTR [rsp+0x40],eax
   14001a168:	mov    QWORD PTR [rsp+0x38],rcx
   14001a16d:	mov    r8b,0x1
   14001a170:	xor    ecx,ecx
   14001a172:	movdqu XMMWORD PTR [rsp+0x48],xmm0
   14001a178:	call   QWORD PTR [rip+0x182fa]        # 0x140032478
   14001a17e:	mov    ecx,0x1
   14001a183:	call   QWORD PTR [rip+0x180bf]        # 0x140032248
   14001a189:	int3   
   14001a18a:	int3   
   14001a18b:	int3   
   14001a18c:	int3   
   14001a18d:	int3   
   14001a18e:	int3   
   14001a18f:	int3   
   14001a190:	mov    DWORD PTR [rip+0x2dd4e],ecx        # 0x140047ee4
   14001a196:	ret    
   14001a197:	int3   
   14001a198:	int3   
   14001a199:	int3   
   14001a19a:	int3   
   14001a19b:	int3   
   14001a19c:	int3   
   14001a19d:	int3   
   14001a19e:	int3   
   14001a19f:	int3   
   14001a1a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a1a5:	mov    QWORD PTR [rsp+0x10],rsi
   14001a1aa:	push   rdi
   14001a1ab:	sub    rsp,0x20
   14001a1af:	mov    esi,r8d
   14001a1b2:	mov    rdi,rdx
   14001a1b5:	mov    rbx,rcx
   14001a1b8:	test   rcx,rcx
   14001a1bb:	je     0x14001a25a
   14001a1c1:	cmp    BYTE PTR [rcx],0x0
   14001a1c4:	je     0x14001a25a
   14001a1ca:	call   QWORD PTR [rip+0x18308]        # 0x1400324d8
   14001a1d0:	test   al,al
   14001a1d2:	je     0x14001a1f9
   14001a1d4:	mov    rdx,rbx
   14001a1d7:	lea    rcx,[rip+0x1d3b2]        # 0x140037590
   14001a1de:	call   QWORD PTR [rip+0x181cc]        # 0x1400323b0
   14001a1e4:	xor    al,al
   14001a1e6:	mov    BYTE PTR [rdi],0x0
   14001a1e9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a1ee:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a1f3:	add    rsp,0x20
   14001a1f7:	pop    rdi
   14001a1f8:	ret    
   14001a1f9:	mov    rcx,rbx
   14001a1fc:	call   QWORD PTR [rip+0x182f6]        # 0x1400324f8
   14001a202:	test   rax,rax
   14001a205:	jne    0x14001a22c
   14001a207:	mov    rdx,rbx
   14001a20a:	lea    rcx,[rip+0x1d3bf]        # 0x1400375d0
   14001a211:	call   QWORD PTR [rip+0x18199]        # 0x1400323b0
   14001a217:	xor    al,al
   14001a219:	mov    BYTE PTR [rdi],0x0
   14001a21c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a221:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a226:	add    rsp,0x20
   14001a22a:	pop    rdi
   14001a22b:	ret    
   14001a22c:	mov    r9b,0x1
   14001a22f:	mov    r8,rbx
   14001a232:	mov    edx,esi
   14001a234:	mov    rcx,rdi
   14001a237:	call   QWORD PTR [rip+0x182a3]        # 0x1400324e0
   14001a23d:	mov    dl,0x2f
   14001a23f:	mov    rcx,rdi
   14001a242:	call   QWORD PTR [rip+0x18288]        # 0x1400324d0
   14001a248:	mov    al,0x1
   14001a24a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a24f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a254:	add    rsp,0x20
   14001a258:	pop    rdi
   14001a259:	ret    
   14001a25a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a25f:	mov    al,0x1
   14001a261:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a266:	mov    BYTE PTR [rdx],0x0
   14001a269:	add    rsp,0x20
   14001a26d:	pop    rdi
   14001a26e:	ret    
   14001a26f:	int3   
   14001a270:	mov    QWORD PTR [rsp+0x8],rbx
   14001a275:	mov    eax,DWORD PTR [rcx+0x58]
   14001a278:	mov    rbx,rdx
   14001a27b:	cdq    
   14001a27c:	xor    eax,edx
   14001a27e:	sub    eax,edx
   14001a280:	test   eax,eax
   14001a282:	jle    0x14001a2c3
   14001a284:	mov    r9,QWORD PTR [rcx+0x50]
   14001a288:	xor    r10d,r10d
   14001a28b:	movsxd r11,eax
   14001a28e:	xchg   ax,ax
   14001a290:	mov    rax,QWORD PTR [r9]
   14001a293:	mov    r8,rbx
   14001a296:	sub    r8,rax
   14001a299:	nop    DWORD PTR [rax+0x0]
   14001a2a0:	movzx  edx,BYTE PTR [rax]
   14001a2a3:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001a2a8:	sub    edx,ecx
   14001a2aa:	jne    0x14001a2b3
   14001a2ac:	inc    rax
   14001a2af:	test   ecx,ecx
   14001a2b1:	jne    0x14001a2a0
   14001a2b3:	test   edx,edx
   14001a2b5:	je     0x14001a2cb
   14001a2b7:	inc    r10
   14001a2ba:	add    r9,0x38
   14001a2be:	cmp    r10,r11
   14001a2c1:	jl     0x14001a290
   14001a2c3:	xor    eax,eax
   14001a2c5:	mov    rbx,QWORD PTR [rsp+0x8]
   14001a2ca:	ret    
   14001a2cb:	mov    rbx,QWORD PTR [rsp+0x8]
   14001a2d0:	mov    rax,r9
   14001a2d3:	ret    
   14001a2d4:	int3   
   14001a2d5:	int3   
   14001a2d6:	int3   
   14001a2d7:	int3   
   14001a2d8:	int3   
   14001a2d9:	int3   
   14001a2da:	int3   
   14001a2db:	int3   
   14001a2dc:	int3   
   14001a2dd:	int3   
   14001a2de:	int3   
   14001a2df:	int3   
   14001a2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a2e5:	mov    QWORD PTR [rsp+0x10],rsi
   14001a2ea:	push   rdi
   14001a2eb:	sub    rsp,0x20
   14001a2ef:	mov    ebx,r8d
   14001a2f2:	mov    rdi,rdx
   14001a2f5:	mov    rsi,rcx
   14001a2f8:	call   0x14001a330
   14001a2fd:	xor    r9d,r9d
   14001a300:	mov    r8d,ebx
   14001a303:	mov    rdx,rdi
   14001a306:	mov    rcx,rsi
   14001a309:	call   0x14001a710
   14001a30e:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a313:	mov    rax,rsi
   14001a316:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a31b:	add    rsp,0x20
   14001a31f:	pop    rdi
   14001a320:	ret    
   14001a321:	int3   
   14001a322:	int3   
   14001a323:	int3   
   14001a324:	int3   
   14001a325:	int3   
   14001a326:	int3   
   14001a327:	int3   
   14001a328:	int3   
   14001a329:	int3   
   14001a32a:	int3   
   14001a32b:	int3   
   14001a32c:	int3   
   14001a32d:	int3   
   14001a32e:	int3   
   14001a32f:	int3   
   14001a330:	mov    QWORD PTR [rsp+0x8],rbx
   14001a335:	mov    QWORD PTR [rsp+0x10],rsi
   14001a33a:	push   rdi
   14001a33b:	sub    rsp,0x20
   14001a33f:	lea    rdi,[rcx+0x8]
   14001a343:	xor    esi,esi
   14001a345:	mov    DWORD PTR [rcx],esi
   14001a347:	mov    rbx,rcx
   14001a34a:	mov    rcx,rdi
   14001a34d:	mov    QWORD PTR [rdi],rsi
   14001a350:	mov    DWORD PTR [rdi+0x8],0x8
   14001a357:	lea    edx,[rsi+0x8]
   14001a35a:	mov    DWORD PTR [rdi+0xc],0x80000000
   14001a361:	call   0x14001a520
   14001a366:	test   dil,0x7
   14001a36a:	je     0x14001a377
   14001a36c:	call   QWORD PTR [rip+0x1823e]        # 0x1400325b0
   14001a372:	test   eax,eax
   14001a374:	je     0x14001a377
   14001a376:	int3   
   14001a377:	lea    rax,[rdi+0x10]
   14001a37b:	mov    QWORD PTR [rdi],rax
   14001a37e:	mov    rax,rbx
   14001a381:	mov    DWORD PTR [rbx],esi
   14001a383:	mov    QWORD PTR [rbx+0x98],rsi
   14001a38a:	mov    QWORD PTR [rbx+0xa0],rsi
   14001a391:	mov    QWORD PTR [rbx+0xa8],rsi
   14001a398:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a39d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001a3a2:	add    rsp,0x20
   14001a3a6:	pop    rdi
   14001a3a7:	ret    
   14001a3a8:	int3   
   14001a3a9:	int3   
   14001a3aa:	int3   
   14001a3ab:	int3   
   14001a3ac:	int3   
   14001a3ad:	int3   
   14001a3ae:	int3   
   14001a3af:	int3   
   14001a3b0:	rex push rbx
   14001a3b2:	sub    rsp,0x20
   14001a3b6:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001a3be:	mov    rbx,rcx
   14001a3c1:	je     0x14001a3d1
   14001a3c3:	mov    eax,DWORD PTR [rcx+0xa8]
   14001a3c9:	test   eax,eax
   14001a3cb:	js     0x14001a42d
   14001a3cd:	cmp    eax,DWORD PTR [rcx]
   14001a3cf:	jge    0x14001a42d
   14001a3d1:	mov    eax,DWORD PTR [rcx+0xa8]
   14001a3d7:	test   eax,eax
   14001a3d9:	js     0x14001a42d
   14001a3db:	cmp    eax,DWORD PTR [rcx]
   14001a3dd:	jge    0x14001a42d
   14001a3df:	inc    DWORD PTR [rcx+0xb8]
   14001a3e5:	mov    r8,QWORD PTR [rbx+0x98]
   14001a3ec:	movsxd rcx,DWORD PTR [rcx+0xb8]
   14001a3f3:	mov    eax,DWORD PTR [r8+0x28]
   14001a3f7:	cdq    
   14001a3f8:	xor    eax,edx
   14001a3fa:	sub    eax,edx
   14001a3fc:	cmp    ecx,eax
   14001a3fe:	jge    0x14001a418
   14001a400:	mov    rax,rcx
   14001a403:	shl    rax,0x6
   14001a407:	add    rax,QWORD PTR [r8+0x20]
   14001a40b:	mov    QWORD PTR [rbx+0xb0],rax
   14001a412:	add    rsp,0x20
   14001a416:	pop    rbx
   14001a417:	ret    
   14001a418:	mov    rcx,rbx
   14001a41b:	call   0x14001a440
   14001a420:	mov    rcx,rbx
   14001a423:	add    rsp,0x20
   14001a427:	pop    rbx
   14001a428:	jmp    0x14001a480
   14001a42d:	add    rsp,0x20
   14001a431:	pop    rbx
   14001a432:	ret    
   14001a433:	int3   
   14001a434:	int3   
   14001a435:	int3   
   14001a436:	int3   
   14001a437:	int3   
   14001a438:	int3   
   14001a439:	int3   
   14001a43a:	int3   
   14001a43b:	int3   
   14001a43c:	int3   
   14001a43d:	int3   
   14001a43e:	int3   
   14001a43f:	int3   
   14001a440:	inc    DWORD PTR [rcx+0xa8]
   14001a446:	movsxd rax,DWORD PTR [rcx+0xa8]
   14001a44d:	cmp    eax,DWORD PTR [rcx]
   14001a44f:	jge    0x14001a471
   14001a451:	mov    r8,rax
   14001a454:	shl    r8,0x4
   14001a458:	add    r8,QWORD PTR [rcx+0x8]
   14001a45c:	mov    rax,QWORD PTR [r8]
   14001a45f:	mov    QWORD PTR [rcx+0x98],rax
   14001a466:	mov    eax,DWORD PTR [r8+0x8]
   14001a46a:	mov    DWORD PTR [rcx+0xac],eax
   14001a470:	ret    
   14001a471:	mov    QWORD PTR [rcx+0x98],0x0
   14001a47c:	ret    
   14001a47d:	int3   
   14001a47e:	int3   
   14001a47f:	int3   
   14001a480:	xor    r9d,r9d
   14001a483:	mov    r8d,DWORD PTR [rcx+0xa8]
   14001a48a:	test   r8d,r8d
   14001a48d:	js     0x14001a4e8
   14001a48f:	cmp    r8d,DWORD PTR [rcx]
   14001a492:	jge    0x14001a4e8
   14001a494:	mov    rax,QWORD PTR [rcx+0x98]
   14001a49b:	mov    eax,DWORD PTR [rax+0x28]
   14001a49e:	cdq    
   14001a49f:	xor    eax,edx
   14001a4a1:	cmp    eax,edx
   14001a4a3:	jne    0x14001a4e8
   14001a4a5:	inc    r8d
   14001a4a8:	mov    DWORD PTR [rcx+0xa8],r8d
   14001a4af:	cmp    r8d,DWORD PTR [rcx]
   14001a4b2:	jge    0x14001a4df
   14001a4b4:	mov    rdx,QWORD PTR [rcx+0x8]
   14001a4b8:	movsxd rax,r8d
   14001a4bb:	add    rax,rax
   14001a4be:	mov    rax,QWORD PTR [rdx+rax*8]
   14001a4c2:	mov    QWORD PTR [rcx+0x98],rax
   14001a4c9:	movsxd rax,DWORD PTR [rcx+0xa8]
   14001a4d0:	add    rax,rax
   14001a4d3:	mov    eax,DWORD PTR [rdx+rax*8+0x8]
   14001a4d7:	mov    DWORD PTR [rcx+0xac],eax
   14001a4dd:	jmp    0x14001a483
   14001a4df:	mov    QWORD PTR [rcx+0x98],r9
   14001a4e6:	jmp    0x14001a483
   14001a4e8:	mov    DWORD PTR [rcx+0xb8],r9d
   14001a4ef:	test   r8d,r8d
   14001a4f2:	js     0x14001a50c
   14001a4f4:	cmp    r8d,DWORD PTR [rcx]
   14001a4f7:	jge    0x14001a50c
   14001a4f9:	mov    rax,QWORD PTR [rcx+0x98]
   14001a500:	mov    rdx,QWORD PTR [rax+0x20]
   14001a504:	mov    QWORD PTR [rcx+0xb0],rdx
   14001a50b:	ret    
   14001a50c:	mov    QWORD PTR [rcx+0xb0],r9
   14001a513:	ret    
   14001a514:	int3   
   14001a515:	int3   
   14001a516:	int3   
   14001a517:	int3   
   14001a518:	int3   
   14001a519:	int3   
   14001a51a:	int3   
   14001a51b:	int3   
   14001a51c:	int3   
   14001a51d:	int3   
   14001a51e:	int3   
   14001a51f:	int3   
   14001a520:	mov    QWORD PTR [rsp+0x10],rbx
   14001a525:	push   rdi
   14001a526:	sub    rsp,0x20
   14001a52a:	movsxd rdi,edx
   14001a52d:	mov    rbx,rcx
   14001a530:	cmp    DWORD PTR [rcx+0x8],edi
   14001a533:	jge    0x14001a5dd
   14001a539:	mov    eax,DWORD PTR [rcx+0xc]
   14001a53c:	and    eax,0xc0000000
   14001a541:	test   eax,0x7fffffff
   14001a546:	jne    0x14001a5dd
   14001a54c:	test   eax,eax
   14001a54e:	mov    rax,QWORD PTR [rip+0x17e3b]        # 0x140032390
   14001a555:	jne    0x14001a59b
   14001a557:	mov    rdx,QWORD PTR [rcx]
   14001a55a:	mov    rcx,QWORD PTR [rax]
   14001a55d:	mov    rax,QWORD PTR [rcx]
   14001a560:	test   rdx,rdx
   14001a563:	je     0x14001a580
   14001a565:	mov    r8,rdi
   14001a568:	shl    r8,0x4
   14001a56c:	call   QWORD PTR [rax+0x18]
   14001a56f:	mov    QWORD PTR [rbx],rax
   14001a572:	mov    DWORD PTR [rbx+0x8],edi
   14001a575:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a57a:	add    rsp,0x20
   14001a57e:	pop    rdi
   14001a57f:	ret    
   14001a580:	mov    rdx,rdi
   14001a583:	shl    rdx,0x4
   14001a587:	call   QWORD PTR [rax+0x8]
   14001a58a:	mov    QWORD PTR [rbx],rax
   14001a58d:	mov    DWORD PTR [rbx+0x8],edi
   14001a590:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a595:	add    rsp,0x20
   14001a599:	pop    rdi
   14001a59a:	ret    
   14001a59b:	mov    QWORD PTR [rsp+0x30],rsi
   14001a5a0:	mov    rdx,rdi
   14001a5a3:	mov    rsi,QWORD PTR [rcx]
   14001a5a6:	mov    rcx,QWORD PTR [rax]
   14001a5a9:	shl    rdx,0x4
   14001a5ad:	mov    rax,QWORD PTR [rcx]
   14001a5b0:	call   QWORD PTR [rax+0x8]
   14001a5b3:	mov    QWORD PTR [rbx],rax
   14001a5b6:	test   rsi,rsi
   14001a5b9:	je     0x14001a5ce
   14001a5bb:	movsxd r8,DWORD PTR [rbx+0x8]
   14001a5bf:	mov    rdx,rsi
   14001a5c2:	shl    r8,0x4
   14001a5c6:	mov    rcx,rax
   14001a5c9:	call   0x140026f70
   14001a5ce:	and    DWORD PTR [rbx+0xc],0x3fffffff
   14001a5d5:	mov    rsi,QWORD PTR [rsp+0x30]
   14001a5da:	mov    DWORD PTR [rbx+0x8],edi
   14001a5dd:	mov    rbx,QWORD PTR [rsp+0x38]
   14001a5e2:	add    rsp,0x20
   14001a5e6:	pop    rdi
   14001a5e7:	ret    
   14001a5e8:	int3   
   14001a5e9:	int3   
   14001a5ea:	int3   
   14001a5eb:	int3   
   14001a5ec:	int3   
   14001a5ed:	int3   
   14001a5ee:	int3   
   14001a5ef:	int3   
   14001a5f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a5f5:	push   rdi
   14001a5f6:	sub    rsp,0x20
   14001a5fa:	mov    rbx,rcx
   14001a5fd:	mov    rdi,rdx
   14001a600:	mov    rcx,QWORD PTR [rcx+0xb0]
   14001a607:	test   rcx,rcx
   14001a60a:	je     0x14001a62f
   14001a60c:	mov    eax,DWORD PTR [rbx+0xa8]
   14001a612:	test   eax,eax
   14001a614:	js     0x14001a6ab
   14001a61a:	cmp    eax,DWORD PTR [rbx]
   14001a61c:	jge    0x14001a6ab
   14001a622:	test   rcx,rcx
   14001a625:	je     0x14001a62f
   14001a627:	test   eax,eax
   14001a629:	js     0x14001a663
   14001a62b:	cmp    eax,DWORD PTR [rbx]
   14001a62d:	jge    0x14001a663
   14001a62f:	xor    eax,eax
   14001a631:	mov    DWORD PTR [rbx+0xa8],eax
   14001a637:	cmp    DWORD PTR [rbx],eax
   14001a639:	jle    0x14001a654
   14001a63b:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a63f:	mov    rax,QWORD PTR [rcx]
   14001a642:	mov    QWORD PTR [rbx+0x98],rax
   14001a649:	mov    eax,DWORD PTR [rcx+0x8]
   14001a64c:	mov    DWORD PTR [rbx+0xac],eax
   14001a652:	jmp    0x14001a65b
   14001a654:	mov    QWORD PTR [rbx+0x98],rax
   14001a65b:	mov    rcx,rbx
   14001a65e:	call   0x14001a480
   14001a663:	mov    rcx,rbx
   14001a666:	call   0x14001a7c0
   14001a66b:	test   al,al
   14001a66d:	je     0x14001a6ab
   14001a66f:	nop
   14001a670:	mov    rax,QWORD PTR [rbx+0xb0]
   14001a677:	mov    r8,rdi
   14001a67a:	mov    rax,QWORD PTR [rax]
   14001a67d:	sub    r8,rax
   14001a680:	movzx  edx,BYTE PTR [rax]
   14001a683:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001a688:	sub    edx,ecx
   14001a68a:	jne    0x14001a693
   14001a68c:	inc    rax
   14001a68f:	test   ecx,ecx
   14001a691:	jne    0x14001a680
   14001a693:	test   edx,edx
   14001a695:	je     0x14001a6b8
   14001a697:	mov    rcx,rbx
   14001a69a:	call   0x14001a3b0
   14001a69f:	mov    rcx,rbx
   14001a6a2:	call   0x14001a7c0
   14001a6a7:	test   al,al
   14001a6a9:	jne    0x14001a670
   14001a6ab:	xor    al,al
   14001a6ad:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a6b2:	add    rsp,0x20
   14001a6b6:	pop    rdi
   14001a6b7:	ret    
   14001a6b8:	mov    al,0x1
   14001a6ba:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a6bf:	add    rsp,0x20
   14001a6c3:	pop    rdi
   14001a6c4:	ret    
   14001a6c5:	int3   
   14001a6c6:	int3   
   14001a6c7:	int3   
   14001a6c8:	int3   
   14001a6c9:	int3   
   14001a6ca:	int3   
   14001a6cb:	int3   
   14001a6cc:	int3   
   14001a6cd:	int3   
   14001a6ce:	int3   
   14001a6cf:	int3   
   14001a6d0:	mov    rax,QWORD PTR [rcx+0xb0]
   14001a6d7:	mov    rax,QWORD PTR [rax]
   14001a6da:	ret    
   14001a6db:	int3   
   14001a6dc:	int3   
   14001a6dd:	int3   
   14001a6de:	int3   
   14001a6df:	int3   
   14001a6e0:	mov    rax,QWORD PTR [rcx+0xb0]
   14001a6e7:	ret    
   14001a6e8:	int3   
   14001a6e9:	int3   
   14001a6ea:	int3   
   14001a6eb:	int3   
   14001a6ec:	int3   
   14001a6ed:	int3   
   14001a6ee:	int3   
   14001a6ef:	int3   
   14001a6f0:	mov    rax,QWORD PTR [rcx+0xb0]
   14001a6f7:	test   rax,rax
   14001a6fa:	jne    0x14001a6fd
   14001a6fc:	ret    
   14001a6fd:	mov    rax,QWORD PTR [rax+0x10]
   14001a701:	ret    
   14001a702:	int3   
   14001a703:	int3   
   14001a704:	int3   
   14001a705:	int3   
   14001a706:	int3   
   14001a707:	int3   
   14001a708:	int3   
   14001a709:	int3   
   14001a70a:	int3   
   14001a70b:	int3   
   14001a70c:	int3   
   14001a70d:	int3   
   14001a70e:	int3   
   14001a70f:	int3   
   14001a710:	mov    QWORD PTR [rsp+0x8],rbx
   14001a715:	push   rdi
   14001a716:	sub    rsp,0x20
   14001a71a:	xor    edi,edi
   14001a71c:	mov    QWORD PTR [rcx+0xa0],r9
   14001a723:	mov    QWORD PTR [rcx+0x98],rdi
   14001a72a:	mov    rbx,rcx
   14001a72d:	mov    DWORD PTR [rcx+0xac],edi
   14001a733:	call   0x14001a7e0
   14001a738:	mov    DWORD PTR [rbx+0xa8],edi
   14001a73e:	cmp    DWORD PTR [rbx],edi
   14001a740:	jle    0x14001a75b
   14001a742:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a746:	mov    rax,QWORD PTR [rcx]
   14001a749:	mov    QWORD PTR [rbx+0x98],rax
   14001a750:	mov    eax,DWORD PTR [rcx+0x8]
   14001a753:	mov    DWORD PTR [rbx+0xac],eax
   14001a759:	jmp    0x14001a762
   14001a75b:	mov    QWORD PTR [rbx+0x98],rdi
   14001a762:	mov    QWORD PTR [rbx+0xb0],rdi
   14001a769:	mov    DWORD PTR [rbx+0xb8],edi
   14001a76f:	mov    DWORD PTR [rbx+0xa8],edi
   14001a775:	cmp    DWORD PTR [rbx],edi
   14001a777:	jle    0x14001a7a2
   14001a779:	mov    rcx,QWORD PTR [rbx+0x8]
   14001a77d:	mov    rax,QWORD PTR [rcx]
   14001a780:	mov    QWORD PTR [rbx+0x98],rax
   14001a787:	mov    eax,DWORD PTR [rcx+0x8]
   14001a78a:	mov    rcx,rbx
   14001a78d:	mov    DWORD PTR [rbx+0xac],eax
   14001a793:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a798:	add    rsp,0x20
   14001a79c:	pop    rdi
   14001a79d:	jmp    0x14001a480
   14001a7a2:	mov    rcx,rbx
   14001a7a5:	mov    QWORD PTR [rbx+0x98],rdi
   14001a7ac:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a7b1:	add    rsp,0x20
   14001a7b5:	pop    rdi
   14001a7b6:	jmp    0x14001a480
   14001a7bb:	int3   
   14001a7bc:	int3   
   14001a7bd:	int3   
   14001a7be:	int3   
   14001a7bf:	int3   
   14001a7c0:	mov    eax,DWORD PTR [rcx+0xa8]
   14001a7c6:	test   eax,eax
   14001a7c8:	js     0x14001a7db
   14001a7ca:	cmp    eax,DWORD PTR [rcx]
   14001a7cc:	jge    0x14001a7db
   14001a7ce:	cmp    QWORD PTR [rcx+0xb0],0x0
   14001a7d6:	je     0x14001a7db
   14001a7d8:	mov    al,0x1
   14001a7da:	ret    
   14001a7db:	xor    al,al
   14001a7dd:	ret    
   14001a7de:	int3   
   14001a7df:	int3   
   14001a7e0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a7e5:	push   rdi
   14001a7e6:	sub    rsp,0x30
   14001a7ea:	mov    DWORD PTR [rcx],0x0
   14001a7f0:	mov    r10,r9
   14001a7f3:	mov    rdi,rdx
   14001a7f6:	mov    rbx,rcx
   14001a7f9:	test   r8d,r8d
   14001a7fc:	jne    0x14001a838
   14001a7fe:	cmp    rdx,r9
   14001a801:	je     0x14001a864
   14001a803:	cmp    DWORD PTR [rcx+0x10],r8d
   14001a807:	jne    0x14001a816
   14001a809:	add    rcx,0x8
   14001a80d:	lea    edx,[r8+0x1]
   14001a811:	call   0x140023260
   14001a816:	inc    DWORD PTR [rbx]
   14001a818:	mov    rax,QWORD PTR [rbx+0x8]
   14001a81c:	mov    QWORD PTR [rax],rdi
   14001a81f:	mov    DWORD PTR [rax+0x8],0x0
   14001a826:	mov    DWORD PTR [rax+0xc],0xffffffff
   14001a82d:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a832:	add    rsp,0x30
   14001a836:	pop    rdi
   14001a837:	ret    
   14001a838:	lea    eax,[r8-0x2]
   14001a83c:	test   eax,0xfffffffd
   14001a841:	lea    eax,[r8-0x3]
   14001a845:	mov    r8,r10
   14001a848:	sete   cl
   14001a84b:	cmp    eax,0x1
   14001a84e:	setbe  al
   14001a851:	xor    r9d,r9d
   14001a854:	mov    BYTE PTR [rsp+0x28],al
   14001a858:	mov    BYTE PTR [rsp+0x20],cl
   14001a85c:	mov    rcx,rbx
   14001a85f:	call   0x14001a870
   14001a864:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a869:	add    rsp,0x30
   14001a86d:	pop    rdi
   14001a86e:	ret    
   14001a86f:	int3   
   14001a870:	mov    DWORD PTR [rsp+0x20],r9d
   14001a875:	mov    QWORD PTR [rsp+0x18],r8
   14001a87a:	mov    QWORD PTR [rsp+0x10],rdx
   14001a87f:	push   rbp
   14001a880:	push   rsi
   14001a881:	push   rdi
   14001a882:	sub    rsp,0x50
   14001a886:	lea    rbp,[rsp+0x30]
   14001a88b:	cmp    rdx,r8
   14001a88e:	mov    QWORD PTR [rbp+0x40],rbx
   14001a892:	mov    r8,rdx
   14001a895:	mov    rdi,rcx
   14001a898:	jne    0x14001a8a9
   14001a89a:	or     eax,0xffffffff
   14001a89d:	mov    rbx,QWORD PTR [rbp+0x40]
   14001a8a1:	lea    rsp,[rbp+0x20]
   14001a8a5:	pop    rdi
   14001a8a6:	pop    rsi
   14001a8a7:	pop    rbp
   14001a8a8:	ret    
   14001a8a9:	mov    eax,DWORD PTR [rdx+0x48]
   14001a8ac:	mov    r10d,0x1
   14001a8b2:	cdq    
   14001a8b3:	mov    esi,eax
   14001a8b5:	xor    esi,edx
   14001a8b7:	sub    esi,edx
   14001a8b9:	cmp    esi,r10d
   14001a8bc:	jle    0x14001a8c6
   14001a8be:	cmp    BYTE PTR [rbp+0x60],0x0
   14001a8c2:	cmove  esi,r10d
   14001a8c6:	movzx  edx,BYTE PTR [rbp+0x68]
   14001a8ca:	mov    DWORD PTR [rbp+0x4],0xffffffff
   14001a8d1:	test   dl,dl
   14001a8d3:	jne    0x14001a8f9
   14001a8d5:	mov    eax,DWORD PTR [rcx]
   14001a8d7:	mov    DWORD PTR [rbp+0x4],eax
   14001a8da:	cmp    eax,DWORD PTR [rcx+0x10]
   14001a8dd:	jne    0x14001a8f7
   14001a8df:	add    rcx,0x8
   14001a8e3:	mov    edx,r10d
   14001a8e6:	call   0x140023260
   14001a8eb:	mov    r8,QWORD PTR [rbp+0x48]
   14001a8ef:	movzx  edx,BYTE PTR [rbp+0x68]
   14001a8f3:	mov    r9d,DWORD PTR [rbp+0x58]
   14001a8f7:	inc    DWORD PTR [rdi]
   14001a8f9:	xor    ebx,ebx
   14001a8fb:	test   esi,esi
   14001a8fd:	je     0x14001a93f
   14001a8ff:	movsxd rax,esi
   14001a902:	lea    rax,[rax*4+0x1f]
   14001a90a:	and    rax,0xfffffffffffffff0
   14001a90e:	lea    rcx,[rax+0xf]
   14001a912:	cmp    rcx,rax
   14001a915:	ja     0x14001a921
   14001a917:	movabs rcx,0xffffffffffffff0
   14001a921:	and    rcx,0xfffffffffffffff0
   14001a925:	mov    rax,rcx
   14001a928:	call   0x1400263c0
   14001a92d:	sub    rsp,rcx
   14001a930:	lea    rax,[rsp+0x30]
   14001a935:	add    rax,0x10
   14001a939:	and    rax,0xffffffffffffffef
   14001a93d:	jmp    0x14001a942
   14001a93f:	mov    rax,rbx
   14001a942:	movsxd rcx,esi
   14001a945:	mov    QWORD PTR [rbp+0x8],rcx
   14001a949:	mov    QWORD PTR [rbp+0x10],rax
   14001a94d:	mov    DWORD PTR [rbp+0x0],ebx
   14001a950:	test   esi,esi
   14001a952:	jle    0x14001a9ac
   14001a954:	mov    rsi,rbx
   14001a957:	mov    rbx,rax
   14001a95a:	nop    WORD PTR [rax+rax*1+0x0]
   14001a960:	mov    rax,QWORD PTR [r8+0x40]
   14001a964:	movzx  ecx,BYTE PTR [rbp+0x60]
   14001a968:	mov    r8,QWORD PTR [rbp+0x50]
   14001a96c:	mov    BYTE PTR [rsp+0x28],dl
   14001a970:	add    r9d,DWORD PTR [rsi+rax*1]
   14001a974:	mov    rdx,QWORD PTR [rsi+rax*1+0x8]
   14001a979:	mov    BYTE PTR [rsp+0x20],cl
   14001a97d:	mov    rcx,rdi
   14001a980:	call   0x14001a870
   14001a985:	mov    DWORD PTR [rbx],eax
   14001a987:	cmp    eax,0xffffffff
   14001a98a:	je     0x14001a993
   14001a98c:	inc    DWORD PTR [rbp+0x0]
   14001a98f:	add    rbx,0x4
   14001a993:	mov    r8,QWORD PTR [rbp+0x48]
   14001a997:	add    rsi,0x10
   14001a99b:	sub    QWORD PTR [rbp+0x8],0x1
   14001a9a0:	movzx  edx,BYTE PTR [rbp+0x68]
   14001a9a4:	mov    r9d,DWORD PTR [rbp+0x58]
   14001a9a8:	jne    0x14001a960
   14001a9aa:	xor    ebx,ebx
   14001a9ac:	cmp    BYTE PTR [rbp+0x68],0x0
   14001a9b0:	je     0x14001a9cb
   14001a9b2:	mov    esi,DWORD PTR [rdi]
   14001a9b4:	cmp    esi,DWORD PTR [rdi+0x10]
   14001a9b7:	jne    0x14001a9c7
   14001a9b9:	lea    rcx,[rdi+0x8]
   14001a9bd:	mov    edx,0x1
   14001a9c2:	call   0x140023260
   14001a9c7:	inc    DWORD PTR [rdi]
   14001a9c9:	jmp    0x14001a9ce
   14001a9cb:	mov    esi,DWORD PTR [rbp+0x4]
   14001a9ce:	movsxd r8,DWORD PTR [rbp+0x0]
   14001a9d2:	test   r8,r8
   14001a9d5:	jle    0x14001a9f7
   14001a9d7:	mov    rdx,QWORD PTR [rbp+0x10]
   14001a9db:	nop    DWORD PTR [rax+rax*1+0x0]
   14001a9e0:	movsxd rcx,DWORD PTR [rdx+rbx*4]
   14001a9e4:	inc    rbx
   14001a9e7:	mov    rax,QWORD PTR [rdi+0x8]
   14001a9eb:	add    rcx,rcx
   14001a9ee:	mov    DWORD PTR [rax+rcx*8+0xc],esi
   14001a9f2:	cmp    rbx,r8
   14001a9f5:	jl     0x14001a9e0
   14001a9f7:	mov    rax,QWORD PTR [rbp+0x48]
   14001a9fb:	mov    rbx,QWORD PTR [rbp+0x40]
   14001a9ff:	movsxd rcx,esi
   14001aa02:	shl    rcx,0x4
   14001aa06:	add    rcx,QWORD PTR [rdi+0x8]
   14001aa0a:	mov    QWORD PTR [rcx],rax
   14001aa0d:	mov    eax,DWORD PTR [rbp+0x58]
   14001aa10:	mov    DWORD PTR [rcx+0x8],eax
   14001aa13:	mov    eax,esi
   14001aa15:	mov    DWORD PTR [rcx+0xc],0xffffffff
   14001aa1c:	lea    rsp,[rbp+0x20]
   14001aa20:	pop    rdi
   14001aa21:	pop    rsi
   14001aa22:	pop    rbp
   14001aa23:	ret    
   14001aa24:	int3   
   14001aa25:	int3   
   14001aa26:	int3   
   14001aa27:	int3   
   14001aa28:	int3   
   14001aa29:	int3   
   14001aa2a:	int3   
   14001aa2b:	int3   
   14001aa2c:	int3   
   14001aa2d:	int3   
   14001aa2e:	int3   
   14001aa2f:	int3   
   14001aa30:	mov    r10d,edx
   14001aa33:	test   edx,edx
   14001aa35:	je     0x14001aa49
   14001aa37:	lea    ecx,[r8-0x1]
   14001aa3b:	mov    eax,ecx
   14001aa3d:	cdq    
   14001aa3e:	idiv   r10d
   14001aa41:	sub    ecx,edx
   14001aa43:	add    ecx,r10d
   14001aa46:	mov    eax,ecx
   14001aa48:	ret    
   14001aa49:	test   ecx,ecx
   14001aa4b:	jne    0x14001aa62
   14001aa4d:	lea    eax,[r9+0x1f]
   14001aa51:	cdq    
   14001aa52:	idiv   r9d
   14001aa55:	mov    ecx,eax
   14001aa57:	cmp    eax,r8d
   14001aa5a:	jge    0x14001aa46
   14001aa5c:	mov    ecx,r8d
   14001aa5f:	mov    eax,ecx
   14001aa61:	ret    
   14001aa62:	cmp    ecx,r8d
   14001aa65:	jge    0x14001aa46
   14001aa67:	nop    WORD PTR [rax+rax*1+0x0]
   14001aa70:	add    ecx,ecx
   14001aa72:	cmp    ecx,0x40000000
   14001aa78:	jge    0x14001aa82
   14001aa7a:	cmp    ecx,r8d
   14001aa7d:	jl     0x14001aa70
   14001aa7f:	mov    eax,ecx
   14001aa81:	ret    
   14001aa82:	mov    eax,0x7fffffff
   14001aa87:	ret    
   14001aa88:	int3   
   14001aa89:	int3   
   14001aa8a:	int3   
   14001aa8b:	int3   
   14001aa8c:	int3   
   14001aa8d:	int3   
   14001aa8e:	int3   
   14001aa8f:	int3   
   14001aa90:	rex push rbx
   14001aa92:	sub    rsp,0x20
   14001aa96:	mov    r8,QWORD PTR [rdx]
   14001aa99:	mov    rbx,rcx
   14001aa9c:	test   r8,r8
   14001aa9f:	je     0x14001aab1
   14001aaa1:	or     rax,0xffffffffffffffff
   14001aaa5:	inc    rax
   14001aaa8:	cmp    BYTE PTR [r8+rax*1],0x0
   14001aaad:	jne    0x14001aaa5
   14001aaaf:	jmp    0x14001aab3
   14001aab1:	xor    eax,eax
   14001aab3:	test   r8,r8
   14001aab6:	lea    rdx,[rip+0x17ce3]        # 0x1400327a0
   14001aabd:	cmovne rdx,r8
   14001aac1:	mov    r8d,eax
   14001aac4:	call   0x14001b3d0
   14001aac9:	mov    rax,rbx
   14001aacc:	add    rsp,0x20
   14001aad0:	pop    rbx
   14001aad1:	ret    
   14001aad2:	int3   
   14001aad3:	int3   
   14001aad4:	int3   
   14001aad5:	int3   
   14001aad6:	int3   
   14001aad7:	int3   
   14001aad8:	int3   
   14001aad9:	int3   
   14001aada:	int3   
   14001aadb:	int3   
   14001aadc:	int3   
   14001aadd:	int3   
   14001aade:	int3   
   14001aadf:	int3   
   14001aae0:	rex push rbx
   14001aae2:	sub    rsp,0x20
   14001aae6:	mov    rbx,rcx
   14001aae9:	test   rdx,rdx
   14001aaec:	je     0x14001ab0c
   14001aaee:	or     rax,0xffffffffffffffff
   14001aaf2:	inc    rax
   14001aaf5:	cmp    BYTE PTR [rdx+rax*1],0x0
   14001aaf9:	jne    0x14001aaf2
   14001aafb:	mov    r8d,eax
   14001aafe:	call   0x14001b3d0
   14001ab03:	mov    rax,rbx
   14001ab06:	add    rsp,0x20
   14001ab0a:	pop    rbx
   14001ab0b:	ret    
   14001ab0c:	xor    eax,eax
   14001ab0e:	mov    r8d,eax
   14001ab11:	call   0x14001b3d0
   14001ab16:	mov    rax,rbx
   14001ab19:	add    rsp,0x20
   14001ab1d:	pop    rbx
   14001ab1e:	ret    
   14001ab1f:	int3   
   14001ab20:	mov    rax,QWORD PTR [rcx]
   14001ab23:	test   rax,rax
   14001ab26:	je     0x14001ab5b
   14001ab28:	cmp    BYTE PTR [rax],0x0
   14001ab2b:	je     0x14001ab5b
   14001ab2d:	mov    r8,QWORD PTR [rdx]
   14001ab30:	test   r8,r8
   14001ab33:	je     0x14001ab68
   14001ab35:	cmp    BYTE PTR [r8],0x0
   14001ab39:	je     0x14001ab68
   14001ab3b:	sub    r8,rax
   14001ab3e:	xchg   ax,ax
   14001ab40:	movzx  edx,BYTE PTR [rax]
   14001ab43:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001ab48:	sub    edx,ecx
   14001ab4a:	jne    0x14001ab53
   14001ab4c:	inc    rax
   14001ab4f:	test   ecx,ecx
   14001ab51:	jne    0x14001ab40
   14001ab53:	xor    eax,eax
   14001ab55:	test   edx,edx
   14001ab57:	sete   al
   14001ab5a:	ret    
   14001ab5b:	mov    rax,QWORD PTR [rdx]
   14001ab5e:	test   rax,rax
   14001ab61:	je     0x14001ab6b
   14001ab63:	cmp    BYTE PTR [rax],0x0
   14001ab66:	je     0x14001ab6b
   14001ab68:	xor    al,al
   14001ab6a:	ret    
   14001ab6b:	mov    al,0x1
   14001ab6d:	ret    
   14001ab6e:	int3   
   14001ab6f:	int3   
   14001ab70:	mov    QWORD PTR [rsp+0x8],rbx
   14001ab75:	mov    QWORD PTR [rsp+0x10],rbp
   14001ab7a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ab7f:	push   rdi
   14001ab80:	sub    rsp,0x20
   14001ab84:	mov    rax,QWORD PTR [rcx]
   14001ab87:	movzx  ebp,dl
   14001ab8a:	mov    rdi,rcx
   14001ab8d:	test   rax,rax
   14001ab90:	je     0x14001aba1
   14001ab92:	or     rbx,0xffffffffffffffff
   14001ab96:	inc    rbx
   14001ab99:	cmp    BYTE PTR [rax+rbx*1],0x0
   14001ab9d:	jne    0x14001ab96
   14001ab9f:	jmp    0x14001aba3
   14001aba1:	xor    ebx,ebx
   14001aba3:	lea    esi,[rbx+0x1]
   14001aba6:	call   QWORD PTR [rip+0x17914]        # 0x1400324c0
   14001abac:	mov    rax,QWORD PTR [rip+0x177dd]        # 0x140032390
   14001abb3:	mov    rdx,QWORD PTR [rdi]
   14001abb6:	mov    rcx,QWORD PTR [rax]
   14001abb9:	test   rdx,rdx
   14001abbc:	je     0x14001abcb
   14001abbe:	mov    r9,QWORD PTR [rcx]
   14001abc1:	lea    r8d,[rsi+0x1]
   14001abc5:	call   QWORD PTR [r9+0x18]
   14001abc9:	jmp    0x14001abd5
   14001abcb:	mov    r8,QWORD PTR [rcx]
   14001abce:	lea    edx,[rsi+0x1]
   14001abd1:	call   QWORD PTR [r8+0x8]
   14001abd5:	mov    QWORD PTR [rdi],rax
   14001abd8:	mov    rcx,rax
   14001abdb:	mov    BYTE PTR [rsi+rax*1],0x0
   14001abdf:	mov    rax,QWORD PTR [rdi]
   14001abe2:	mov    rsi,QWORD PTR [rsp+0x40]
   14001abe7:	movsxd rcx,ebx
   14001abea:	mov    rbx,QWORD PTR [rsp+0x30]
   14001abef:	mov    BYTE PTR [rcx+rax*1],bpl
   14001abf3:	mov    rax,rdi
   14001abf6:	mov    rbp,QWORD PTR [rsp+0x38]
   14001abfb:	add    rsp,0x20
   14001abff:	pop    rdi
   14001ac00:	ret    
   14001ac01:	int3   
   14001ac02:	int3   
   14001ac03:	int3   
   14001ac04:	int3   
   14001ac05:	int3   
   14001ac06:	int3   
   14001ac07:	int3   
   14001ac08:	int3   
   14001ac09:	int3   
   14001ac0a:	int3   
   14001ac0b:	int3   
   14001ac0c:	int3   
   14001ac0d:	int3   
   14001ac0e:	int3   
   14001ac0f:	int3   
   14001ac10:	mov    QWORD PTR [rsp+0x8],rbx
   14001ac15:	mov    QWORD PTR [rsp+0x10],rbp
   14001ac1a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ac1f:	mov    QWORD PTR [rsp+0x20],rdi
   14001ac24:	push   r14
   14001ac26:	sub    rsp,0x20
   14001ac2a:	mov    rax,QWORD PTR [rcx]
   14001ac2d:	or     rbx,0xffffffffffffffff
   14001ac31:	mov    rbp,rdx
   14001ac34:	mov    rsi,rcx
   14001ac37:	test   rax,rax
   14001ac3a:	je     0x14001ac4b
   14001ac3c:	mov    rdi,rbx
   14001ac3f:	nop
   14001ac40:	inc    rdi
   14001ac43:	cmp    BYTE PTR [rax+rdi*1],0x0
   14001ac47:	jne    0x14001ac40
   14001ac49:	jmp    0x14001ac50
   14001ac4b:	xor    edi,edi
   14001ac4d:	nop    DWORD PTR [rax]
   14001ac50:	inc    rbx
   14001ac53:	cmp    BYTE PTR [rbx+rdx*1],0x0
   14001ac57:	jne    0x14001ac50
   14001ac59:	lea    r14d,[rbx+rdi*1]
   14001ac5d:	test   r14d,r14d
   14001ac60:	je     0x14001acb3
   14001ac62:	call   QWORD PTR [rip+0x17858]        # 0x1400324c0
   14001ac68:	mov    rax,QWORD PTR [rip+0x17721]        # 0x140032390
   14001ac6f:	mov    rdx,QWORD PTR [rsi]
   14001ac72:	mov    rcx,QWORD PTR [rax]
   14001ac75:	test   rdx,rdx
   14001ac78:	je     0x14001ac87
   14001ac7a:	mov    r9,QWORD PTR [rcx]
   14001ac7d:	lea    r8d,[r14+0x1]
   14001ac81:	call   QWORD PTR [r9+0x18]
   14001ac85:	jmp    0x14001ac92
   14001ac87:	mov    r8,QWORD PTR [rcx]
   14001ac8a:	lea    edx,[r14+0x1]
   14001ac8e:	call   QWORD PTR [r8+0x8]
   14001ac92:	mov    QWORD PTR [rsi],rax
   14001ac95:	mov    rcx,rax
   14001ac98:	movsxd rcx,edi
   14001ac9b:	mov    BYTE PTR [r14+rax*1],0x0
   14001aca0:	add    rcx,QWORD PTR [rsi]
   14001aca3:	test   ebx,ebx
   14001aca5:	jns    0x14001aca8
   14001aca7:	int3   
   14001aca8:	movsxd r8,ebx
   14001acab:	mov    rdx,rbp
   14001acae:	call   0x140026f70
   14001acb3:	mov    rbx,QWORD PTR [rsp+0x30]
   14001acb8:	mov    rax,rsi
   14001acbb:	mov    rsi,QWORD PTR [rsp+0x40]
   14001acc0:	mov    rbp,QWORD PTR [rsp+0x38]
   14001acc5:	mov    rdi,QWORD PTR [rsp+0x48]
   14001acca:	add    rsp,0x20
   14001acce:	pop    r14
   14001acd0:	ret    
   14001acd1:	int3   
   14001acd2:	int3   
   14001acd3:	int3   
   14001acd4:	int3   
   14001acd5:	int3   
   14001acd6:	int3   
   14001acd7:	int3   
   14001acd8:	int3   
   14001acd9:	int3   
   14001acda:	int3   
   14001acdb:	int3   
   14001acdc:	int3   
   14001acdd:	int3   
   14001acde:	int3   
   14001acdf:	int3   
   14001ace0:	mov    QWORD PTR [rsp+0x8],rbx
   14001ace5:	push   rdi
   14001ace6:	sub    rsp,0x20
   14001acea:	mov    ebx,edx
   14001acec:	mov    rdi,rcx
   14001acef:	call   QWORD PTR [rip+0x177cb]        # 0x1400324c0
   14001acf5:	mov    rax,QWORD PTR [rip+0x17694]        # 0x140032390
   14001acfc:	mov    rdx,QWORD PTR [rdi]
   14001acff:	mov    rcx,QWORD PTR [rax]
   14001ad02:	test   rdx,rdx
   14001ad05:	je     0x14001ad14
   14001ad07:	mov    r9,QWORD PTR [rcx]
   14001ad0a:	lea    r8d,[rbx+0x1]
   14001ad0e:	call   QWORD PTR [r9+0x18]
   14001ad12:	jmp    0x14001ad1e
   14001ad14:	mov    r8,QWORD PTR [rcx]
   14001ad17:	lea    edx,[rbx+0x1]
   14001ad1a:	call   QWORD PTR [r8+0x8]
   14001ad1e:	mov    QWORD PTR [rdi],rax
   14001ad21:	mov    rcx,rax
   14001ad24:	mov    BYTE PTR [rbx+rax*1],0x0
   14001ad28:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ad2d:	add    rsp,0x20
   14001ad31:	pop    rdi
   14001ad32:	ret    
   14001ad33:	int3   
   14001ad34:	int3   
   14001ad35:	int3   
   14001ad36:	int3   
   14001ad37:	int3   
   14001ad38:	int3   
   14001ad39:	int3   
   14001ad3a:	int3   
   14001ad3b:	int3   
   14001ad3c:	int3   
   14001ad3d:	int3   
   14001ad3e:	int3   
   14001ad3f:	int3   
   14001ad40:	jmp    0x14001ac10
   14001ad45:	int3   
   14001ad46:	int3   
   14001ad47:	int3   
   14001ad48:	int3   
   14001ad49:	int3   
   14001ad4a:	int3   
   14001ad4b:	int3   
   14001ad4c:	int3   
   14001ad4d:	int3   
   14001ad4e:	int3   
   14001ad4f:	int3   
   14001ad50:	mov    QWORD PTR [rsp+0x18],rbx
   14001ad55:	push   rbp
   14001ad56:	push   rdi
   14001ad57:	push   r15
   14001ad59:	sub    rsp,0x20
   14001ad5d:	mov    r15,rdx
   14001ad60:	mov    rdi,rcx
   14001ad63:	mov    rcx,r15
   14001ad66:	mov    edx,r8d
   14001ad69:	mov    ebx,r8d
   14001ad6c:	call   0x1400226c0
   14001ad71:	cmp    ebx,eax
   14001ad73:	mov    ebp,eax
   14001ad75:	cmovl  ebp,ebx
   14001ad78:	test   ebp,ebp
   14001ad7a:	je     0x14001ae37
   14001ad80:	mov    rdx,QWORD PTR [rdi]
   14001ad83:	mov    QWORD PTR [rsp+0x40],rsi
   14001ad88:	mov    QWORD PTR [rsp+0x48],r14
   14001ad8d:	test   rdx,rdx
   14001ad90:	je     0x14001ada1
   14001ad92:	or     rbx,0xffffffffffffffff
   14001ad96:	inc    rbx
   14001ad99:	cmp    BYTE PTR [rdx+rbx*1],0x0
   14001ad9d:	jne    0x14001ad96
   14001ad9f:	jmp    0x14001ada3
   14001ada1:	xor    ebx,ebx
   14001ada3:	lea    r14d,[rbx+rbp*1]
   14001ada7:	call   QWORD PTR [rip+0x17713]        # 0x1400324c0
   14001adad:	mov    rax,QWORD PTR [rip+0x175dc]        # 0x140032390
   14001adb4:	mov    rdx,QWORD PTR [rdi]
   14001adb7:	mov    rcx,QWORD PTR [rax]
   14001adba:	test   rdx,rdx
   14001adbd:	je     0x14001adcc
   14001adbf:	mov    r9,QWORD PTR [rcx]
   14001adc2:	lea    r8d,[r14+0x1]
   14001adc6:	call   QWORD PTR [r9+0x18]
   14001adca:	jmp    0x14001add7
   14001adcc:	mov    r8,QWORD PTR [rcx]
   14001adcf:	lea    edx,[r14+0x1]
   14001add3:	call   QWORD PTR [r8+0x8]
   14001add7:	mov    QWORD PTR [rdi],rax
   14001adda:	mov    esi,r14d
   14001addd:	sub    esi,ebx
   14001addf:	mov    BYTE PTR [r14+rax*1],0x0
   14001ade4:	cmp    esi,ebp
   14001ade6:	mov    rcx,rax
   14001ade9:	cmovge esi,ebp
   14001adec:	cmp    QWORD PTR [rdi],0x0
   14001adf0:	jne    0x14001ae0d
   14001adf2:	mov    rax,QWORD PTR [rip+0x17597]        # 0x140032390
   14001adf9:	mov    edx,0x1
   14001adfe:	mov    rcx,QWORD PTR [rax]
   14001ae01:	mov    rax,QWORD PTR [rcx]
   14001ae04:	call   QWORD PTR [rax+0x8]
   14001ae07:	mov    QWORD PTR [rdi],rax
   14001ae0a:	mov    BYTE PTR [rax],0x0
   14001ae0d:	test   esi,esi
   14001ae0f:	jns    0x14001ae12
   14001ae11:	int3   
   14001ae12:	movsxd rcx,ebx
   14001ae15:	mov    rdx,r15
   14001ae18:	add    rcx,QWORD PTR [rdi]
   14001ae1b:	movsxd r8,esi
   14001ae1e:	call   0x140026f70
   14001ae23:	mov    rax,QWORD PTR [rdi]
   14001ae26:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ae2b:	movsxd rcx,r14d
   14001ae2e:	mov    r14,QWORD PTR [rsp+0x48]
   14001ae33:	mov    BYTE PTR [rcx+rax*1],0x0
   14001ae37:	mov    rbx,QWORD PTR [rsp+0x50]
   14001ae3c:	add    rsp,0x20
   14001ae40:	pop    r15
   14001ae42:	pop    rdi
   14001ae43:	pop    rbp
   14001ae44:	ret    
   14001ae45:	int3   
   14001ae46:	int3   
   14001ae47:	int3   
   14001ae48:	int3   
   14001ae49:	int3   
   14001ae4a:	int3   
   14001ae4b:	int3   
   14001ae4c:	int3   
   14001ae4d:	int3   
   14001ae4e:	int3   
   14001ae4f:	int3   
   14001ae50:	mov    QWORD PTR [rsp+0x10],rdx
   14001ae55:	mov    QWORD PTR [rsp+0x18],r8
   14001ae5a:	mov    QWORD PTR [rsp+0x20],r9
   14001ae5f:	sub    rsp,0x28
   14001ae63:	lea    r8,[rsp+0x40]
   14001ae68:	call   0x14001ae80
   14001ae6d:	add    rsp,0x28
   14001ae71:	ret    
   14001ae72:	int3   
   14001ae73:	int3   
   14001ae74:	int3   
   14001ae75:	int3   
   14001ae76:	int3   
   14001ae77:	int3   
   14001ae78:	int3   
   14001ae79:	int3   
   14001ae7a:	int3   
   14001ae7b:	int3   
   14001ae7c:	int3   
   14001ae7d:	int3   
   14001ae7e:	int3   
   14001ae7f:	int3   
   14001ae80:	mov    QWORD PTR [rsp+0x8],rbx
   14001ae85:	mov    QWORD PTR [rsp+0x10],rbp
   14001ae8a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ae8f:	push   rdi
   14001ae90:	push   r14
   14001ae92:	push   r15
   14001ae94:	mov    eax,0x1050
   14001ae99:	call   0x1400263c0
   14001ae9e:	sub    rsp,rax
   14001aea1:	mov    rbp,r8
   14001aea4:	mov    BYTE PTR [rsp+0x50],0x0
   14001aea9:	mov    r9,r8
   14001aeac:	lea    rdi,[rsp+0x50]
   14001aeb1:	mov    r8,rdx
   14001aeb4:	mov    r15,rdx
   14001aeb7:	mov    r14,rcx
   14001aeba:	mov    esi,0x1000
   14001aebf:	mov    edx,esi
   14001aec1:	lea    rcx,[rsp+0x50]
   14001aec6:	call   QWORD PTR [rip+0x1750c]        # 0x1400323d8
   14001aecc:	mov    ebx,eax
   14001aece:	test   eax,eax
   14001aed0:	jle    0x14001af09
   14001aed2:	cmp    ebx,esi
   14001aed4:	jl     0x14001afed
   14001aeda:	cmp    ebx,0x5f5e100
   14001aee0:	jg     0x14001af47
   14001aee2:	mov    edx,ebx
   14001aee4:	lea    esi,[rbx+0x1]
   14001aee7:	mov    rcx,r14
   14001aeea:	call   0x14001b450
   14001aeef:	mov    rdi,QWORD PTR [r14]
   14001aef2:	mov    r9,rbp
   14001aef5:	mov    rcx,rdi
   14001aef8:	mov    r8,r15
   14001aefb:	mov    edx,esi
   14001aefd:	call   QWORD PTR [rip+0x174d5]        # 0x1400323d8
   14001af03:	mov    ebx,eax
   14001af05:	test   eax,eax
   14001af07:	jg     0x14001aed2
   14001af09:	mov    rdx,QWORD PTR [r14]
   14001af0c:	test   rdx,rdx
   14001af0f:	je     0x14001af28
   14001af11:	mov    rax,QWORD PTR [rip+0x17478]        # 0x140032390
   14001af18:	mov    rcx,QWORD PTR [rax]
   14001af1b:	mov    rax,QWORD PTR [rcx]
   14001af1e:	call   QWORD PTR [rax+0x28]
   14001af21:	mov    QWORD PTR [r14],0x0
   14001af28:	xor    eax,eax
   14001af2a:	lea    r11,[rsp+0x1050]
   14001af32:	mov    rbx,QWORD PTR [r11+0x20]
   14001af36:	mov    rbp,QWORD PTR [r11+0x28]
   14001af3a:	mov    rsi,QWORD PTR [r11+0x30]
   14001af3e:	mov    rsp,r11
   14001af41:	pop    r15
   14001af43:	pop    r14
   14001af45:	pop    rdi
   14001af46:	ret    
   14001af47:	mov    rax,QWORD PTR [rip+0x1743a]        # 0x140032388
   14001af4e:	mov    edx,0x4
   14001af53:	mov    ecx,DWORD PTR [rax]
   14001af55:	call   QWORD PTR [rip+0x1754d]        # 0x1400324a8
   14001af5b:	test   al,al
   14001af5d:	je     0x14001afa8
   14001af5f:	lea    rax,[rip+0x1c6fa]        # 0x140037660
   14001af66:	mov    DWORD PTR [rsp+0x38],0x1f7
   14001af6e:	mov    QWORD PTR [rsp+0x30],rax
   14001af73:	lea    r9,[rip+0x1c6b6]        # 0x140037630
   14001af7a:	lea    rax,[rip+0x1c697]        # 0x140037618
   14001af81:	mov    DWORD PTR [rsp+0x28],ebx
   14001af85:	mov    QWORD PTR [rsp+0x40],rax
   14001af8a:	lea    r8,[rsp+0x30]
   14001af8f:	mov    QWORD PTR [rsp+0x20],rax
   14001af94:	mov    edx,0x4
   14001af99:	mov    rax,QWORD PTR [rip+0x173e8]        # 0x140032388
   14001afa0:	mov    ecx,DWORD PTR [rax]
   14001afa2:	call   QWORD PTR [rip+0x174f0]        # 0x140032498
   14001afa8:	call   QWORD PTR [rip+0x175da]        # 0x140032588
   14001afae:	test   al,al
   14001afb0:	je     0x14001afe1
   14001afb2:	call   QWORD PTR [rip+0x174c8]        # 0x140032480
   14001afb8:	lea    rcx,[rip+0x177ed]        # 0x1400327ac
   14001afbf:	xorps  xmm0,xmm0
   14001afc2:	lea    rdx,[rsp+0x30]
   14001afc7:	mov    DWORD PTR [rsp+0x38],eax
   14001afcb:	mov    QWORD PTR [rsp+0x30],rcx
   14001afd0:	mov    r8b,0x1
   14001afd3:	xor    ecx,ecx
   14001afd5:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001afdb:	call   QWORD PTR [rip+0x17497]        # 0x140032478
   14001afe1:	mov    ecx,0x1
   14001afe6:	call   QWORD PTR [rip+0x1725c]        # 0x140032248
   14001afec:	int3   
   14001afed:	lea    rax,[rsp+0x50]
   14001aff2:	cmp    rdi,rax
   14001aff5:	jne    0x14001b01b
   14001aff7:	test   rdi,rdi
   14001affa:	je     0x14001b00b
   14001affc:	or     rax,0xffffffffffffffff
   14001b000:	inc    rax
   14001b003:	cmp    BYTE PTR [rdi+rax*1],0x0
   14001b007:	jne    0x14001b000
   14001b009:	jmp    0x14001b00d
   14001b00b:	xor    eax,eax
   14001b00d:	mov    r8d,eax
   14001b010:	mov    rdx,rdi
   14001b013:	mov    rcx,r14
   14001b016:	call   0x14001b3d0
   14001b01b:	mov    eax,ebx
   14001b01d:	jmp    0x14001af2a
   14001b022:	int3   
   14001b023:	int3   
   14001b024:	int3   
   14001b025:	int3   
   14001b026:	int3   
   14001b027:	int3   
   14001b028:	int3   
   14001b029:	int3   
   14001b02a:	int3   
   14001b02b:	int3   
   14001b02c:	int3   
   14001b02d:	int3   
   14001b02e:	int3   
   14001b02f:	int3   
   14001b030:	mov    rax,QWORD PTR [rip+0x17359]        # 0x140032390
   14001b037:	mov    rdx,QWORD PTR [rcx]
   14001b03a:	mov    rcx,QWORD PTR [rax]
   14001b03d:	mov    rax,QWORD PTR [rcx]
   14001b040:	rex.W jmp QWORD PTR [rax+0x28]
   14001b044:	int3   
   14001b045:	int3   
   14001b046:	int3   
   14001b047:	int3   
   14001b048:	int3   
   14001b049:	int3   
   14001b04a:	int3   
   14001b04b:	int3   
   14001b04c:	int3   
   14001b04d:	int3   
   14001b04e:	int3   
   14001b04f:	int3   
   14001b050:	mov    rax,QWORD PTR [rcx]
   14001b053:	test   rax,rax
   14001b056:	jne    0x14001b05f
   14001b058:	lea    rax,[rip+0x17741]        # 0x1400327a0
   14001b05f:	ret    
   14001b060:	rex push rbx
   14001b062:	sub    rsp,0x220
   14001b069:	mov    rax,QWORD PTR [rcx]
   14001b06c:	mov    rbx,rdx
   14001b06f:	test   rax,rax
   14001b072:	lea    rcx,[rip+0x17727]        # 0x1400327a0
   14001b079:	mov    r8d,0x200
   14001b07f:	lea    rdx,[rsp+0x20]
   14001b084:	cmovne rcx,rax
   14001b088:	call   QWORD PTR [rip+0x17352]        # 0x1400323e0
   14001b08e:	lea    rcx,[rsp+0x20]
   14001b093:	mov    QWORD PTR [rbx],0x0
   14001b09a:	or     rax,0xffffffffffffffff
   14001b09e:	xchg   ax,ax
   14001b0a0:	inc    rax
   14001b0a3:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001b0a7:	jne    0x14001b0a0
   14001b0a9:	mov    r8d,eax
   14001b0ac:	lea    rdx,[rsp+0x20]
   14001b0b1:	mov    rcx,rbx
   14001b0b4:	call   0x14001b3d0
   14001b0b9:	mov    rax,rbx
   14001b0bc:	add    rsp,0x220
   14001b0c3:	pop    rbx
   14001b0c4:	ret    
   14001b0c5:	int3   
   14001b0c6:	int3   
   14001b0c7:	int3   
   14001b0c8:	int3   
   14001b0c9:	int3   
   14001b0ca:	int3   
   14001b0cb:	int3   
   14001b0cc:	int3   
   14001b0cd:	int3   
   14001b0ce:	int3   
   14001b0cf:	int3   
   14001b0d0:	mov    rcx,QWORD PTR [rcx]
   14001b0d3:	mov    r8,rdx
   14001b0d6:	test   rdx,rdx
   14001b0d9:	jne    0x14001b0fb
   14001b0db:	test   rcx,rcx
   14001b0de:	je     0x14001b0f3
   14001b0e0:	or     rax,0xffffffffffffffff
   14001b0e4:	inc    rax
   14001b0e7:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001b0eb:	jne    0x14001b0e4
   14001b0ed:	test   eax,eax
   14001b0ef:	sete   al
   14001b0f2:	ret    
   14001b0f3:	xor    eax,eax
   14001b0f5:	test   eax,eax
   14001b0f7:	sete   al
   14001b0fa:	ret    
   14001b0fb:	test   rcx,rcx
   14001b0fe:	lea    rax,[rip+0x1769b]        # 0x1400327a0
   14001b105:	cmovne rax,rcx
   14001b109:	sub    r8,rax
   14001b10c:	nop    DWORD PTR [rax+0x0]
   14001b110:	movzx  edx,BYTE PTR [rax]
   14001b113:	movzx  ecx,BYTE PTR [rax+r8*1]
   14001b118:	sub    edx,ecx
   14001b11a:	jne    0x14001b123
   14001b11c:	inc    rax
   14001b11f:	test   ecx,ecx
   14001b121:	jne    0x14001b110
   14001b123:	xor    eax,eax
   14001b125:	test   edx,edx
   14001b127:	sete   al
   14001b12a:	ret    
   14001b12b:	int3   
   14001b12c:	int3   
   14001b12d:	int3   
   14001b12e:	int3   
   14001b12f:	int3   
   14001b130:	mov    QWORD PTR [rsp+0x10],rbx
   14001b135:	mov    QWORD PTR [rsp+0x18],rbp
   14001b13a:	push   rsi
   14001b13b:	push   r14
   14001b13d:	push   r15
   14001b13f:	sub    rsp,0x20
   14001b143:	movzx  r15d,r9b
   14001b147:	mov    rbp,r8
   14001b14a:	mov    r14,rdx
   14001b14d:	test   r8,r8
   14001b150:	je     0x14001b162
   14001b152:	or     rsi,0xffffffffffffffff
   14001b156:	inc    rsi
   14001b159:	cmp    BYTE PTR [rsi+r8*1],0x0
   14001b15e:	jne    0x14001b156
   14001b160:	jmp    0x14001b164
   14001b162:	xor    esi,esi
   14001b164:	mov    QWORD PTR [rdx],0x0
   14001b16b:	mov    rbx,QWORD PTR [rcx]
   14001b16e:	test   rbx,rbx
   14001b171:	je     0x14001b1d0
   14001b173:	cmp    BYTE PTR [rbx],0x0
   14001b176:	je     0x14001b1d0
   14001b178:	mov    QWORD PTR [rsp+0x40],rdi
   14001b17d:	nop    DWORD PTR [rax]
   14001b180:	mov    rdx,rbp
   14001b183:	mov    rcx,rbx
   14001b186:	test   r15b,r15b
   14001b189:	je     0x14001b192
   14001b18b:	call   0x1400273a8
   14001b190:	jmp    0x14001b198
   14001b192:	call   QWORD PTR [rip+0x173d0]        # 0x140032568
   14001b198:	mov    rdi,rax
   14001b19b:	test   rax,rax
   14001b19e:	je     0x14001b1c0
   14001b1a0:	mov    r8d,edi
   14001b1a3:	sub    r8d,ebx
   14001b1a6:	je     0x14001b1b3
   14001b1a8:	mov    rdx,rbx
   14001b1ab:	mov    rcx,r14
   14001b1ae:	call   0x14001ad50
   14001b1b3:	movsxd rbx,esi
   14001b1b6:	add    rbx,rdi
   14001b1b9:	cmp    BYTE PTR [rbx],0x0
   14001b1bc:	jne    0x14001b180
   14001b1be:	jmp    0x14001b1cb
   14001b1c0:	mov    rdx,rbx
   14001b1c3:	mov    rcx,r14
   14001b1c6:	call   0x14001ac10
   14001b1cb:	mov    rdi,QWORD PTR [rsp+0x40]
   14001b1d0:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b1d5:	mov    rax,r14
   14001b1d8:	mov    rbp,QWORD PTR [rsp+0x50]
   14001b1dd:	add    rsp,0x20
   14001b1e1:	pop    r15
   14001b1e3:	pop    r14
   14001b1e5:	pop    rsi
   14001b1e6:	ret    
   14001b1e7:	int3   
   14001b1e8:	int3   
   14001b1e9:	int3   
   14001b1ea:	int3   
   14001b1eb:	int3   
   14001b1ec:	int3   
   14001b1ed:	int3   
   14001b1ee:	int3   
   14001b1ef:	int3   
   14001b1f0:	mov    QWORD PTR [rsp+0x10],rdx
   14001b1f5:	push   rsi
   14001b1f6:	push   r13
   14001b1f8:	push   r15
   14001b1fa:	sub    rsp,0x40
   14001b1fe:	mov    r15,r9
   14001b201:	mov    r13,r8
   14001b204:	mov    rsi,rdx
   14001b207:	test   r9,r9
   14001b20a:	jne    0x14001b227
   14001b20c:	movzx  r9d,BYTE PTR [rsp+0x80]
   14001b215:	call   0x14001b130
   14001b21a:	mov    rax,rsi
   14001b21d:	add    rsp,0x40
   14001b221:	pop    r15
   14001b223:	pop    r13
   14001b225:	pop    rsi
   14001b226:	ret    
   14001b227:	mov    QWORD PTR [rsp+0x60],rbx
   14001b22c:	mov    QWORD PTR [rsp+0x30],rdi
   14001b231:	mov    QWORD PTR [rsp+0x28],r12
   14001b236:	test   r13,r13
   14001b239:	je     0x14001b24c
   14001b23b:	or     r12,0xffffffffffffffff
   14001b23f:	nop
   14001b240:	inc    r12
   14001b243:	cmp    BYTE PTR [r12+r8*1],0x0
   14001b248:	jne    0x14001b240
   14001b24a:	jmp    0x14001b24f
   14001b24c:	xor    r12d,r12d
   14001b24f:	mov    rdi,QWORD PTR [rcx]
   14001b252:	xor    ebx,ebx
   14001b254:	mov    QWORD PTR [rsp+0x78],rbx
   14001b259:	test   rdi,rdi
   14001b25c:	je     0x14001b376
   14001b262:	cmp    BYTE PTR [rdi],bl
   14001b264:	je     0x14001b376
   14001b26a:	mov    QWORD PTR [rsp+0x38],rbp
   14001b26f:	mov    QWORD PTR [rsp+0x20],r14
   14001b274:	nop    DWORD PTR [rax+0x0]
   14001b278:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b280:	cmp    BYTE PTR [rsp+0x80],0x0
   14001b288:	mov    rdx,r13
   14001b28b:	mov    rcx,rdi
   14001b28e:	je     0x14001b297
   14001b290:	call   0x1400273a8
   14001b295:	jmp    0x14001b29d
   14001b297:	call   QWORD PTR [rip+0x172cb]        # 0x140032568
   14001b29d:	mov    r14,rax
   14001b2a0:	test   rax,rax
   14001b2a3:	je     0x14001b355
   14001b2a9:	mov    r8d,r14d
   14001b2ac:	sub    r8d,edi
   14001b2af:	je     0x14001b2c3
   14001b2b1:	mov    rdx,rdi
   14001b2b4:	lea    rcx,[rsp+0x78]
   14001b2b9:	call   0x14001ad50
   14001b2be:	mov    rbx,QWORD PTR [rsp+0x78]
   14001b2c3:	test   rbx,rbx
   14001b2c6:	je     0x14001b2db
   14001b2c8:	or     rdi,0xffffffffffffffff
   14001b2cc:	nop    DWORD PTR [rax+0x0]
   14001b2d0:	inc    rdi
   14001b2d3:	cmp    BYTE PTR [rbx+rdi*1],0x0
   14001b2d7:	jne    0x14001b2d0
   14001b2d9:	jmp    0x14001b2dd
   14001b2db:	xor    edi,edi
   14001b2dd:	or     rsi,0xffffffffffffffff
   14001b2e1:	inc    rsi
   14001b2e4:	cmp    BYTE PTR [r15+rsi*1],0x0
   14001b2e9:	jne    0x14001b2e1
   14001b2eb:	lea    ebp,[rsi+rdi*1]
   14001b2ee:	test   ebp,ebp
   14001b2f0:	je     0x14001b344
   14001b2f2:	call   QWORD PTR [rip+0x171c8]        # 0x1400324c0
   14001b2f8:	mov    rax,QWORD PTR [rip+0x17091]        # 0x140032390
   14001b2ff:	mov    rcx,QWORD PTR [rax]
   14001b302:	test   rbx,rbx
   14001b305:	je     0x14001b317
   14001b307:	mov    r9,QWORD PTR [rcx]
   14001b30a:	lea    r8d,[rbp+0x1]
   14001b30e:	mov    rdx,rbx
   14001b311:	call   QWORD PTR [r9+0x18]
   14001b315:	jmp    0x14001b321
   14001b317:	mov    r8,QWORD PTR [rcx]
   14001b31a:	lea    edx,[rbp+0x1]
   14001b31d:	call   QWORD PTR [r8+0x8]
   14001b321:	movsxd rcx,edi
   14001b324:	mov    rbx,rax
   14001b327:	add    rcx,rax
   14001b32a:	mov    QWORD PTR [rsp+0x78],rax
   14001b32f:	mov    BYTE PTR [rbp+rax*1+0x0],0x0
   14001b334:	test   esi,esi
   14001b336:	jns    0x14001b339
   14001b338:	int3   
   14001b339:	movsxd r8,esi
   14001b33c:	mov    rdx,r15
   14001b33f:	call   0x140026f70
   14001b344:	movsxd rdi,r12d
   14001b347:	add    rdi,r14
   14001b34a:	cmp    BYTE PTR [rdi],0x0
   14001b34d:	jne    0x14001b280
   14001b353:	jmp    0x14001b367
   14001b355:	mov    rdx,rdi
   14001b358:	lea    rcx,[rsp+0x78]
   14001b35d:	call   0x14001ac10
   14001b362:	mov    rbx,QWORD PTR [rsp+0x78]
   14001b367:	mov    rsi,QWORD PTR [rsp+0x68]
   14001b36c:	mov    rbp,QWORD PTR [rsp+0x38]
   14001b371:	mov    r14,QWORD PTR [rsp+0x20]
   14001b376:	mov    r12,QWORD PTR [rsp+0x28]
   14001b37b:	mov    rax,rsi
   14001b37e:	mov    rdi,QWORD PTR [rsp+0x30]
   14001b383:	mov    QWORD PTR [rsi],rbx
   14001b386:	mov    rbx,QWORD PTR [rsp+0x60]
   14001b38b:	add    rsp,0x40
   14001b38f:	pop    r15
   14001b391:	pop    r13
   14001b393:	pop    rsi
   14001b394:	ret    
   14001b395:	int3   
   14001b396:	int3   
   14001b397:	int3   
   14001b398:	int3   
   14001b399:	int3   
   14001b39a:	int3   
   14001b39b:	int3   
   14001b39c:	int3   
   14001b39d:	int3   
   14001b39e:	int3   
   14001b39f:	int3   
   14001b3a0:	test   rdx,rdx
   14001b3a3:	je     0x14001b3c1
   14001b3a5:	or     rax,0xffffffffffffffff
   14001b3a9:	nop    DWORD PTR [rax+0x0]
   14001b3b0:	inc    rax
   14001b3b3:	cmp    BYTE PTR [rdx+rax*1],0x0
   14001b3b7:	jne    0x14001b3b0
   14001b3b9:	mov    r8d,eax
   14001b3bc:	jmp    0x14001b3d0
   14001b3c1:	xor    eax,eax
   14001b3c3:	mov    r8d,eax
   14001b3c6:	jmp    0x14001b3d0
   14001b3cb:	int3   
   14001b3cc:	int3   
   14001b3cd:	int3   
   14001b3ce:	int3   
   14001b3cf:	int3   
   14001b3d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001b3d5:	mov    QWORD PTR [rsp+0x10],rsi
   14001b3da:	push   rdi
   14001b3db:	sub    rsp,0x20
   14001b3df:	movsxd rsi,r8d
   14001b3e2:	mov    rdi,rdx
   14001b3e5:	mov    rbx,rcx
   14001b3e8:	test   rdx,rdx
   14001b3eb:	je     0x14001b41b
   14001b3ed:	test   r8d,r8d
   14001b3f0:	jle    0x14001b41b
   14001b3f2:	cmp    rdx,QWORD PTR [rcx]
   14001b3f5:	je     0x14001b43a
   14001b3f7:	mov    edx,esi
   14001b3f9:	call   0x14001ace0
   14001b3fe:	mov    rcx,QWORD PTR [rbx]
   14001b401:	mov    r8,rsi
   14001b404:	mov    rdx,rdi
   14001b407:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b40c:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b411:	add    rsp,0x20
   14001b415:	pop    rdi
   14001b416:	jmp    0x140026f70
   14001b41b:	mov    rdx,QWORD PTR [rcx]
   14001b41e:	test   rdx,rdx
   14001b421:	je     0x14001b43a
   14001b423:	mov    rax,QWORD PTR [rip+0x16f66]        # 0x140032390
   14001b42a:	mov    rcx,QWORD PTR [rax]
   14001b42d:	mov    rax,QWORD PTR [rcx]
   14001b430:	call   QWORD PTR [rax+0x28]
   14001b433:	mov    QWORD PTR [rbx],0x0
   14001b43a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b43f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b444:	add    rsp,0x20
   14001b448:	pop    rdi
   14001b449:	ret    
   14001b44a:	int3   
   14001b44b:	int3   
   14001b44c:	int3   
   14001b44d:	int3   
   14001b44e:	int3   
   14001b44f:	int3   
   14001b450:	mov    QWORD PTR [rsp+0x8],rbx
   14001b455:	mov    QWORD PTR [rsp+0x10],rsi
   14001b45a:	push   rdi
   14001b45b:	sub    rsp,0x20
   14001b45f:	mov    ebx,edx
   14001b461:	mov    rdi,rcx
   14001b464:	test   edx,edx
   14001b466:	jle    0x14001b4f6
   14001b46c:	mov    rcx,QWORD PTR [rcx]
   14001b46f:	test   rcx,rcx
   14001b472:	je     0x14001b490
   14001b474:	or     rax,0xffffffffffffffff
   14001b478:	nop    DWORD PTR [rax+rax*1+0x0]
   14001b480:	cmp    BYTE PTR [rcx+rax*1+0x1],0x0
   14001b485:	lea    rax,[rax+0x1]
   14001b489:	jne    0x14001b480
   14001b48b:	lea    esi,[rax+0x1]
   14001b48e:	jmp    0x14001b492
   14001b490:	xor    esi,esi
   14001b492:	call   QWORD PTR [rip+0x17028]        # 0x1400324c0
   14001b498:	mov    rax,QWORD PTR [rip+0x16ef1]        # 0x140032390
   14001b49f:	mov    rdx,QWORD PTR [rdi]
   14001b4a2:	mov    rcx,QWORD PTR [rax]
   14001b4a5:	test   rdx,rdx
   14001b4a8:	je     0x14001b4b7
   14001b4aa:	mov    r9,QWORD PTR [rcx]
   14001b4ad:	lea    r8d,[rbx+0x1]
   14001b4b1:	call   QWORD PTR [r9+0x18]
   14001b4b5:	jmp    0x14001b4c1
   14001b4b7:	mov    r8,QWORD PTR [rcx]
   14001b4ba:	lea    edx,[rbx+0x1]
   14001b4bd:	call   QWORD PTR [r8+0x8]
   14001b4c1:	mov    QWORD PTR [rdi],rax
   14001b4c4:	mov    rcx,rax
   14001b4c7:	mov    BYTE PTR [rbx+rax*1],0x0
   14001b4cb:	cmp    ebx,esi
   14001b4cd:	jle    0x14001b513
   14001b4cf:	movsxd rcx,esi
   14001b4d2:	add    rcx,QWORD PTR [rdi]
   14001b4d5:	sub    ebx,esi
   14001b4d7:	jns    0x14001b4da
   14001b4d9:	int3   
   14001b4da:	movsxd r8,ebx
   14001b4dd:	mov    edx,0xff
   14001b4e2:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b4e7:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b4ec:	add    rsp,0x20
   14001b4f0:	pop    rdi
   14001b4f1:	jmp    0x1400277b0
   14001b4f6:	mov    rdx,QWORD PTR [rcx]
   14001b4f9:	test   rdx,rdx
   14001b4fc:	je     0x14001b513
   14001b4fe:	mov    rax,QWORD PTR [rip+0x16e8b]        # 0x140032390
   14001b505:	mov    rcx,QWORD PTR [rax]
   14001b508:	mov    rax,QWORD PTR [rcx]
   14001b50b:	call   QWORD PTR [rax+0x28]
   14001b50e:	xor    esi,esi
   14001b510:	mov    QWORD PTR [rdi],rsi
   14001b513:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b518:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b51d:	add    rsp,0x20
   14001b521:	pop    rdi
   14001b522:	ret    
   14001b523:	int3   
   14001b524:	int3   
   14001b525:	int3   
   14001b526:	int3   
   14001b527:	int3   
   14001b528:	int3   
   14001b529:	int3   
   14001b52a:	int3   
   14001b52b:	int3   
   14001b52c:	int3   
   14001b52d:	int3   
   14001b52e:	int3   
   14001b52f:	int3   
   14001b530:	mov    QWORD PTR [rsp+0x10],rbx
   14001b535:	mov    QWORD PTR [rsp+0x18],rsi
   14001b53a:	push   rdi
   14001b53b:	sub    rsp,0x20
   14001b53f:	mov    r10,QWORD PTR [rcx]
   14001b542:	mov    rsi,rdx
   14001b545:	test   r10,r10
   14001b548:	je     0x14001b621
   14001b54e:	or     rdi,0xffffffffffffffff
   14001b552:	inc    rdi
   14001b555:	cmp    BYTE PTR [r10+rdi*1],0x0
   14001b55a:	jne    0x14001b552
   14001b55c:	test   edi,edi
   14001b55e:	je     0x14001b621
   14001b564:	test   r8d,r8d
   14001b567:	jns    0x14001b57a
   14001b569:	neg    r8d
   14001b56c:	mov    eax,r8d
   14001b56f:	mov    r8d,edi
   14001b572:	cdq    
   14001b573:	idiv   edi
   14001b575:	sub    r8d,edx
   14001b578:	jmp    0x14001b581
   14001b57a:	cmp    r8d,edi
   14001b57d:	cmovge r8d,edi
   14001b581:	cmp    r9d,0x7fffffff
   14001b588:	je     0x14001b5a6
   14001b58a:	test   r9d,r9d
   14001b58d:	jns    0x14001b59c
   14001b58f:	neg    r9d
   14001b592:	mov    eax,r9d
   14001b595:	cdq    
   14001b596:	idiv   edi
   14001b598:	sub    edi,edx
   14001b59a:	jmp    0x14001b5a6
   14001b59c:	cmp    r9d,edi
   14001b59f:	cmovge r9d,edi
   14001b5a3:	mov    edi,r9d
   14001b5a6:	xor    ebx,ebx
   14001b5a8:	cmp    r8d,edi
   14001b5ab:	jl     0x14001b5c3
   14001b5ad:	mov    QWORD PTR [rsi],rbx
   14001b5b0:	mov    rax,rsi
   14001b5b3:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b5b8:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b5bd:	add    rsp,0x20
   14001b5c1:	pop    rdi
   14001b5c2:	ret    
   14001b5c3:	mov    QWORD PTR [rsp+0x30],rbp
   14001b5c8:	sub    edi,r8d
   14001b5cb:	movsxd rbp,r8d
   14001b5ce:	add    rbp,r10
   14001b5d1:	je     0x14001b606
   14001b5d3:	test   edi,edi
   14001b5d5:	jle    0x14001b606
   14001b5d7:	call   QWORD PTR [rip+0x16ee3]        # 0x1400324c0
   14001b5dd:	mov    rax,QWORD PTR [rip+0x16dac]        # 0x140032390
   14001b5e4:	lea    edx,[rdi+0x1]
   14001b5e7:	mov    rcx,QWORD PTR [rax]
   14001b5ea:	mov    r8,QWORD PTR [rcx]
   14001b5ed:	call   QWORD PTR [r8+0x8]
   14001b5f1:	movsxd r8,edi
   14001b5f4:	mov    rdx,rbp
   14001b5f7:	mov    rcx,rax
   14001b5fa:	mov    rbx,rax
   14001b5fd:	mov    BYTE PTR [rdi+rax*1],0x0
   14001b601:	call   0x140026f70
   14001b606:	mov    rbp,QWORD PTR [rsp+0x30]
   14001b60b:	mov    rax,rsi
   14001b60e:	mov    QWORD PTR [rsi],rbx
   14001b611:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b616:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b61b:	add    rsp,0x20
   14001b61f:	pop    rdi
   14001b620:	ret    
   14001b621:	xor    ebx,ebx
   14001b623:	mov    rax,rsi
   14001b626:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b62b:	mov    QWORD PTR [rdx],rbx
   14001b62e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b633:	add    rsp,0x20
   14001b637:	pop    rdi
   14001b638:	ret    
   14001b639:	int3   
   14001b63a:	int3   
   14001b63b:	int3   
   14001b63c:	int3   
   14001b63d:	int3   
   14001b63e:	int3   
   14001b63f:	int3   
   14001b640:	rex push rbx
   14001b642:	sub    rsp,0x220
   14001b649:	mov    rax,QWORD PTR [rcx]
   14001b64c:	mov    rbx,rdx
   14001b64f:	test   rax,rax
   14001b652:	lea    rcx,[rip+0x17147]        # 0x1400327a0
   14001b659:	mov    r8d,0x200
   14001b65f:	lea    rdx,[rsp+0x20]
   14001b664:	cmovne rcx,rax
   14001b668:	call   QWORD PTR [rip+0x16eb2]        # 0x140032520
   14001b66e:	lea    rcx,[rsp+0x20]
   14001b673:	mov    QWORD PTR [rbx],0x0
   14001b67a:	or     rax,0xffffffffffffffff
   14001b67e:	xchg   ax,ax
   14001b680:	inc    rax
   14001b683:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001b687:	jne    0x14001b680
   14001b689:	mov    r8d,eax
   14001b68c:	lea    rdx,[rsp+0x20]
   14001b691:	mov    rcx,rbx
   14001b694:	call   0x14001b3d0
   14001b699:	mov    rax,rbx
   14001b69c:	add    rsp,0x220
   14001b6a3:	pop    rbx
   14001b6a4:	ret    
   14001b6a5:	int3   
   14001b6a6:	int3   
   14001b6a7:	int3   
   14001b6a8:	int3   
   14001b6a9:	int3   
   14001b6aa:	int3   
   14001b6ab:	int3   
   14001b6ac:	int3   
   14001b6ad:	int3   
   14001b6ae:	int3   
   14001b6af:	int3   
   14001b6b0:	sub    rsp,0x28
   14001b6b4:	mov    rcx,QWORD PTR [rip+0x2be5d]        # 0x140047518
   14001b6bb:	mov    rax,QWORD PTR [rcx]
   14001b6be:	call   QWORD PTR [rax+0x60]
   14001b6c1:	mov    al,0x1
   14001b6c3:	add    rsp,0x28
   14001b6c7:	ret    
   14001b6c8:	int3   
   14001b6c9:	int3   
   14001b6ca:	int3   
   14001b6cb:	int3   
   14001b6cc:	int3   
   14001b6cd:	int3   
   14001b6ce:	int3   
   14001b6cf:	int3   
   14001b6d0:	mov    QWORD PTR [rsp+0x10],rbx
   14001b6d5:	mov    QWORD PTR [rsp+0x18],rsi
   14001b6da:	push   rdi
   14001b6db:	sub    rsp,0x20
   14001b6df:	xor    edi,edi
   14001b6e1:	mov    BYTE PTR [rcx+0x10],0x0
   14001b6e5:	mov    QWORD PTR [rcx+0x18],rdi
   14001b6e9:	lea    rax,[rip+0x1c040]        # 0x140037730
   14001b6f0:	mov    QWORD PTR [rcx],rax
   14001b6f3:	mov    rbx,rcx
   14001b6f6:	mov    QWORD PTR [rcx+0x20],rdi
   14001b6fa:	lea    rax,[rip+0x1c0ef]        # 0x1400377f0
   14001b701:	mov    QWORD PTR [rcx+0x30],rax
   14001b705:	lea    rax,[rip+0x18d84]        # 0x140034490
   14001b70c:	mov    QWORD PTR [rcx+0x28],rdi
   14001b710:	mov    QWORD PTR [rcx+0x8],rdi
   14001b714:	mov    QWORD PTR [rcx+0x6c],rdi
   14001b718:	mov    QWORD PTR [rcx+0x78],rdi
   14001b71c:	mov    QWORD PTR [rcx+0x80],rdi
   14001b723:	mov    QWORD PTR [rcx+0x40],rax
   14001b727:	mov    QWORD PTR [rcx+0x38],rcx
   14001b72b:	mov    BYTE PTR [rcx+0x60],dil
   14001b72f:	mov    DWORD PTR [rcx+0x64],edi
   14001b732:	mov    BYTE PTR [rcx+0x68],dil
   14001b736:	mov    DWORD PTR [rcx+0x50],0x2
   14001b73d:	lea    ecx,[rdi+0x2]
   14001b740:	call   0x140007bf0
   14001b745:	movsxd r8,DWORD PTR [rbx+0x50]
   14001b749:	mov    rcx,rax
   14001b74c:	mov    rdx,QWORD PTR [rbx+0x40]
   14001b750:	mov    QWORD PTR [rbx+0x48],rax
   14001b754:	call   0x140026f70
   14001b759:	mov    rdx,QWORD PTR [rbx+0x48]
   14001b75d:	mov    rcx,rbx
   14001b760:	call   0x14001c120
   14001b765:	lea    rsi,[rip+0x17034]        # 0x1400327a0
   14001b76c:	test   al,al
   14001b76e:	jne    0x14001b7bd
   14001b770:	mov    rcx,QWORD PTR [rbx+0x48]
   14001b774:	call   QWORD PTR [rip+0x16c76]        # 0x1400323f0
   14001b77a:	movss  DWORD PTR [rsp+0x30],xmm0
   14001b780:	mov    eax,DWORD PTR [rsp+0x30]
   14001b784:	and    eax,0x7f800000
   14001b789:	movss  DWORD PTR [rbx+0x54],xmm0
   14001b78e:	cmp    eax,0x7f800000
   14001b793:	jne    0x14001b7b0
   14001b795:	mov    r8,QWORD PTR [rbx+0x48]
   14001b799:	lea    rcx,[rip+0x1c1f0]        # 0x140037990
   14001b7a0:	mov    rdx,rsi
   14001b7a3:	call   QWORD PTR [rip+0x16c07]        # 0x1400323b0
   14001b7a9:	mov    DWORD PTR [rbx+0x54],0x7f7fffff
   14001b7b0:	mov    rcx,QWORD PTR [rbx+0x48]
   14001b7b4:	call   QWORD PTR [rip+0x16ade]        # 0x140032298
   14001b7ba:	mov    DWORD PTR [rbx+0x58],eax
   14001b7bd:	mov    rax,QWORD PTR [rip+0x2a9ec]        # 0x1400461b0
   14001b7c4:	mov    QWORD PTR [rbx+0x20],rax
   14001b7c8:	mov    BYTE PTR [rbx+0x10],dil
   14001b7cc:	mov    QWORD PTR [rbx+0x18],rsi
   14001b7d0:	mov    QWORD PTR [rbx+0x28],rdi
   14001b7d4:	mov    rax,QWORD PTR [rip+0x2c78d]        # 0x140047f68
   14001b7db:	mov    QWORD PTR [rbx+0x8],rax
   14001b7df:	cmp    QWORD PTR [rip+0x2c78a],rdi        # 0x140047f70
   14001b7e6:	mov    QWORD PTR [rip+0x2c77b],rbx        # 0x140047f68
   14001b7ed:	je     0x14001b7f8
   14001b7ef:	mov    rax,QWORD PTR [rbx]
   14001b7f2:	mov    rcx,rbx
   14001b7f5:	call   QWORD PTR [rax+0x60]
   14001b7f8:	mov    rsi,QWORD PTR [rsp+0x40]
   14001b7fd:	lea    rax,[rip+0x1c03c]        # 0x140037840
   14001b804:	mov    QWORD PTR [rbx],rax
   14001b807:	lea    rax,[rip+0x1c0f2]        # 0x140037900
   14001b80e:	mov    QWORD PTR [rbx+0x30],rax
   14001b812:	mov    rax,rbx
   14001b815:	mov    rbx,QWORD PTR [rsp+0x38]
   14001b81a:	add    rsp,0x20
   14001b81e:	pop    rdi
   14001b81f:	ret    
   14001b820:	mov    QWORD PTR [rsp+0x8],rbx
   14001b825:	push   rdi
   14001b826:	sub    rsp,0x20
   14001b82a:	cmp    BYTE PTR [rcx+0x10],0x0
   14001b82e:	lea    rax,[rip+0x1befb]        # 0x140037730
   14001b835:	mov    QWORD PTR [rcx],rax
   14001b838:	mov    edi,edx
   14001b83a:	lea    rax,[rip+0x1bfaf]        # 0x1400377f0
   14001b841:	mov    rbx,rcx
   14001b844:	mov    QWORD PTR [rcx+0x30],rax
   14001b848:	je     0x14001b855
   14001b84a:	cmp    QWORD PTR [rcx+0x38],rcx
   14001b84e:	jne    0x14001b855
   14001b850:	call   0x14001bdc0
   14001b855:	mov    rcx,QWORD PTR [rbx+0x48]
   14001b859:	test   rcx,rcx
   14001b85c:	je     0x14001b86b
   14001b85e:	call   0x140007bd0
   14001b863:	mov    QWORD PTR [rbx+0x48],0x0
   14001b86b:	lea    rcx,[rbx+0x70]
   14001b86f:	call   0x1400181a0
   14001b874:	lea    rax,[rip+0x1be45]        # 0x1400376c0
   14001b87b:	mov    QWORD PTR [rbx],rax
   14001b87e:	test   dil,0x1
   14001b882:	je     0x14001b891
   14001b884:	mov    edx,0x88
   14001b889:	mov    rcx,rbx
   14001b88c:	call   0x14002639c
   14001b891:	mov    rax,rbx
   14001b894:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b899:	add    rsp,0x20
   14001b89d:	pop    rdi
   14001b89e:	ret    
   14001b89f:	int3   
   14001b8a0:	rex push rbx
   14001b8a2:	sub    rsp,0x20
   14001b8a6:	lea    rax,[rip+0x1be13]        # 0x1400376c0
   14001b8ad:	mov    rbx,rcx
   14001b8b0:	mov    QWORD PTR [rcx],rax
   14001b8b3:	test   dl,0x1
   14001b8b6:	je     0x14001b8c2
   14001b8b8:	mov    edx,0x30
   14001b8bd:	call   0x14002639c
   14001b8c2:	mov    rax,rbx
   14001b8c5:	add    rsp,0x20
   14001b8c9:	pop    rbx
   14001b8ca:	ret    
   14001b8cb:	int3   
   14001b8cc:	int3   
   14001b8cd:	int3   
   14001b8ce:	int3   
   14001b8cf:	int3   
   14001b8d0:	or     QWORD PTR [rcx+0x28],rdx
   14001b8d4:	ret    
   14001b8d5:	int3   
   14001b8d6:	int3   
   14001b8d7:	int3   
   14001b8d8:	int3   
   14001b8d9:	int3   
   14001b8da:	int3   
   14001b8db:	int3   
   14001b8dc:	int3   
   14001b8dd:	int3   
   14001b8de:	int3   
   14001b8df:	int3   
   14001b8e0:	mov    rax,QWORD PTR [rcx+0x38]
   14001b8e4:	or     QWORD PTR [rax+0x28],rdx
   14001b8e8:	ret    
   14001b8e9:	int3   
   14001b8ea:	int3   
   14001b8eb:	int3   
   14001b8ec:	sub    rcx,0x30
   14001b8f0:	jmp    0x14001b8e0
   14001b8f5:	int3   
   14001b8f6:	int3   
   14001b8f7:	int3   
   14001b8f8:	int3   
   14001b8f9:	int3   
   14001b8fa:	int3   
   14001b8fb:	int3   
   14001b8fc:	int3   
   14001b8fd:	int3   
   14001b8fe:	int3   
   14001b8ff:	int3   
   14001b900:	rex push rbp
   14001b902:	push   r14
   14001b904:	push   r15
   14001b906:	sub    rsp,0x30
   14001b90a:	lea    rbp,[rsp+0x20]
   14001b90f:	mov    QWORD PTR [rbp+0x30],rbx
   14001b913:	mov    QWORD PTR [rbp+0x38],rsi
   14001b917:	mov    rsi,rdx
   14001b91a:	mov    QWORD PTR [rbp+0x40],rdi
   14001b91e:	mov    rdi,rcx
   14001b921:	movsxd rcx,DWORD PTR [rcx+0x50]
   14001b925:	movaps XMMWORD PTR [rbp+0x0],xmm6
   14001b929:	movaps xmm6,xmm2
   14001b92c:	lea    eax,[rcx+0x1f]
   14001b92f:	movsxd r8,eax
   14001b932:	and    r8,0xfffffffffffffff0
   14001b936:	lea    rax,[r8+0xf]
   14001b93a:	cmp    rax,r8
   14001b93d:	ja     0x14001b949
   14001b93f:	movabs rax,0xffffffffffffff0
   14001b949:	and    rax,0xfffffffffffffff0
   14001b94d:	call   0x1400263c0
   14001b952:	mov    rdx,QWORD PTR [rdi+0x48]
   14001b956:	sub    rsp,rax
   14001b959:	mov    r8,rcx
   14001b95c:	lea    r14,[rsp+0x20]
   14001b961:	add    r14,0x10
   14001b965:	and    r14,0xffffffffffffffef
   14001b969:	mov    rcx,r14
   14001b96c:	call   0x140026f70
   14001b971:	or     rbx,0xffffffffffffffff
   14001b975:	inc    rbx
   14001b978:	cmp    BYTE PTR [rsi+rbx*1],0x0
   14001b97c:	jne    0x14001b975
   14001b97e:	inc    ebx
   14001b980:	cmp    ebx,DWORD PTR [rdi+0x50]
   14001b983:	jle    0x14001b9a2
   14001b985:	mov    rcx,QWORD PTR [rdi+0x48]
   14001b989:	test   rcx,rcx
   14001b98c:	je     0x14001b993
   14001b98e:	call   0x140007bd0
   14001b993:	movsxd rcx,ebx
   14001b996:	call   0x140007bf0
   14001b99b:	mov    QWORD PTR [rdi+0x48],rax
   14001b99f:	mov    DWORD PTR [rdi+0x50],ebx
   14001b9a2:	mov    rcx,QWORD PTR [rdi+0x48]
   14001b9a6:	mov    rdx,rsi
   14001b9a9:	movsxd r8,ebx
   14001b9ac:	call   0x140026f70
   14001b9b1:	xor    ebx,ebx
   14001b9b3:	cmp    DWORD PTR [rdi+0x70],ebx
   14001b9b6:	jle    0x14001b9dc
   14001b9b8:	mov    esi,ebx
   14001b9ba:	nop    WORD PTR [rax+rax*1+0x0]
   14001b9c0:	mov    rax,QWORD PTR [rdi+0x78]
   14001b9c4:	lea    rcx,[rdi+0x30]
   14001b9c8:	movaps xmm2,xmm6
   14001b9cb:	mov    rdx,r14
   14001b9ce:	call   QWORD PTR [rsi+rax*1]
   14001b9d1:	inc    ebx
   14001b9d3:	lea    rsi,[rsi+0x8]
   14001b9d7:	cmp    ebx,DWORD PTR [rdi+0x70]
   14001b9da:	jl     0x14001b9c0
   14001b9dc:	mov    rcx,QWORD PTR [rip+0x2bb35]        # 0x140047518
   14001b9e3:	test   rcx,rcx
   14001b9e6:	je     0x14001b9fa
   14001b9e8:	mov    rax,QWORD PTR [rcx]
   14001b9eb:	movaps xmm3,xmm6
   14001b9ee:	mov    r8,r14
   14001b9f1:	mov    rdx,rdi
   14001b9f4:	call   QWORD PTR [rax+0xc0]
   14001b9fa:	mov    rbx,QWORD PTR [rbp+0x30]
   14001b9fe:	mov    rsi,QWORD PTR [rbp+0x38]
   14001ba02:	mov    rdi,QWORD PTR [rbp+0x40]
   14001ba06:	movaps xmm6,XMMWORD PTR [rbp+0x0]
   14001ba0a:	lea    rsp,[rbp+0x10]
   14001ba0e:	pop    r15
   14001ba10:	pop    r14
   14001ba12:	pop    rbp
   14001ba13:	ret    
   14001ba14:	int3   
   14001ba15:	int3   
   14001ba16:	int3   
   14001ba17:	int3   
   14001ba18:	int3   
   14001ba19:	int3   
   14001ba1a:	int3   
   14001ba1b:	int3   
   14001ba1c:	int3   
   14001ba1d:	int3   
   14001ba1e:	int3   
   14001ba1f:	int3   
   14001ba20:	cmp    BYTE PTR [rcx+0x60],0x0
   14001ba24:	je     0x14001ba37
   14001ba26:	movss  xmm0,DWORD PTR [rcx+0x64]
   14001ba2b:	comiss xmm0,DWORD PTR [rdx]
   14001ba2e:	jbe    0x14001ba37
   14001ba30:	movss  DWORD PTR [rdx],xmm0
   14001ba34:	mov    al,0x1
   14001ba36:	ret    
   14001ba37:	cmp    BYTE PTR [rcx+0x68],0x0
   14001ba3b:	je     0x14001ba47
   14001ba3d:	movss  xmm0,DWORD PTR [rcx+0x6c]
   14001ba42:	comiss xmm0,DWORD PTR [rdx]
   14001ba45:	jb     0x14001ba30
   14001ba47:	xor    al,al
   14001ba49:	ret    
   14001ba4a:	int3   
   14001ba4b:	int3   
   14001ba4c:	int3   
   14001ba4d:	int3   
   14001ba4e:	int3   
   14001ba4f:	int3   
   14001ba50:	rex push rbx
   14001ba52:	sub    rsp,0x20
   14001ba56:	mov    rax,rcx
   14001ba59:	mov    rbx,rdx
   14001ba5c:	mov    rcx,QWORD PTR [rip+0x2bab5]        # 0x140047518
   14001ba63:	test   rcx,rcx
   14001ba66:	je     0x14001bb15
   14001ba6c:	cmp    BYTE PTR [rip+0x2c625],0x0        # 0x140048098
   14001ba73:	jne    0x14001bb15
   14001ba79:	mov    QWORD PTR [rip+0x2c610],rax        # 0x140048090
   14001ba80:	mov    rax,QWORD PTR [rcx]
   14001ba83:	mov    BYTE PTR [rip+0x2c60e],0x1        # 0x140048098
   14001ba8a:	call   QWORD PTR [rax+0x58]
   14001ba8d:	test   rbx,rbx
   14001ba90:	mov    DWORD PTR [rip+0x2a70a],eax        # 0x1400461a0
   14001ba96:	lea    rax,[rip+0x2a70b]        # 0x1400461a8
   14001ba9d:	cmovne rax,rbx
   14001baa1:	mov    rbx,QWORD PTR [rip+0x2c4c0]        # 0x140047f68
   14001baa8:	mov    QWORD PTR [rip+0x2c4c1],rax        # 0x140047f70
   14001baaf:	test   rbx,rbx
   14001bab2:	je     0x14001baea
   14001bab4:	mov    QWORD PTR [rsp+0x30],rdi
   14001bab9:	nop    DWORD PTR [rax+0x0]
   14001bac0:	mov    rax,QWORD PTR [rbx]
   14001bac3:	mov    rcx,rbx
   14001bac6:	mov    rdx,QWORD PTR [rip+0x2c5c3]        # 0x140048090
   14001bacd:	mov    rdi,QWORD PTR [rbx+0x8]
   14001bad1:	call   QWORD PTR [rax+0x20]
   14001bad4:	mov    rax,QWORD PTR [rbx]
   14001bad7:	mov    rcx,rbx
   14001bada:	call   QWORD PTR [rax+0x60]
   14001badd:	mov    rbx,rdi
   14001bae0:	test   rdi,rdi
   14001bae3:	jne    0x14001bac0
   14001bae5:	mov    rdi,QWORD PTR [rsp+0x30]
   14001baea:	mov    rcx,QWORD PTR [rip+0x2ba27]        # 0x140047518
   14001baf1:	mov    rax,QWORD PTR [rcx]
   14001baf4:	call   QWORD PTR [rax+0x110]
   14001bafa:	mov    rcx,QWORD PTR [rip+0x2ba17]        # 0x140047518
   14001bb01:	mov    rax,QWORD PTR [rcx]
   14001bb04:	call   QWORD PTR [rax+0x158]
   14001bb0a:	mov    QWORD PTR [rip+0x2c453],0x0        # 0x140047f68
   14001bb15:	add    rsp,0x20
   14001bb19:	pop    rbx
   14001bb1a:	ret    
   14001bb1b:	int3   
   14001bb1c:	int3   
   14001bb1d:	int3   
   14001bb1e:	int3   
   14001bb1f:	int3   
   14001bb20:	sub    rsp,0x28
   14001bb24:	mov    rcx,QWORD PTR [rip+0x2b9ed]        # 0x140047518
   14001bb2b:	test   rcx,rcx
   14001bb2e:	je     0x14001bb6c
   14001bb30:	cmp    BYTE PTR [rip+0x2c561],0x0        # 0x140048098
   14001bb37:	je     0x14001bb6c
   14001bb39:	mov    rax,QWORD PTR [rcx]
   14001bb3c:	mov    edx,DWORD PTR [rip+0x2a65e]        # 0x1400461a0
   14001bb42:	call   QWORD PTR [rax+0x118]
   14001bb48:	mov    rcx,QWORD PTR [rip+0x2b9c9]        # 0x140047518
   14001bb4f:	mov    edx,DWORD PTR [rip+0x2a64b]        # 0x1400461a0
   14001bb55:	mov    rax,QWORD PTR [rcx]
   14001bb58:	call   QWORD PTR [rax+0x70]
   14001bb5b:	mov    DWORD PTR [rip+0x2a63b],0xffffffff        # 0x1400461a0
   14001bb65:	mov    BYTE PTR [rip+0x2c52c],0x0        # 0x140048098
   14001bb6c:	add    rsp,0x28
   14001bb70:	ret    
   14001bb71:	int3   
   14001bb72:	int3   
   14001bb73:	int3   
   14001bb74:	int3   
   14001bb75:	int3   
   14001bb76:	int3   
   14001bb77:	int3   
   14001bb78:	int3   
   14001bb79:	int3   
   14001bb7a:	int3   
   14001bb7b:	int3   
   14001bb7c:	int3   
   14001bb7d:	int3   
   14001bb7e:	int3   
   14001bb7f:	int3   
   14001bb80:	mov    rax,QWORD PTR [rip+0x2a629]        # 0x1400461b0
   14001bb87:	test   r8,r8
   14001bb8a:	mov    BYTE PTR [rcx+0x10],0x0
   14001bb8e:	cmovne rax,r8
   14001bb92:	mov    QWORD PTR [rcx+0x18],rdx
   14001bb96:	mov    QWORD PTR [rcx+0x20],rax
   14001bb9a:	mov    QWORD PTR [rcx+0x28],r9
   14001bb9e:	test   r9b,0x1
   14001bba2:	jne    0x14001bbb8
   14001bba4:	mov    rax,QWORD PTR [rip+0x2c3bd]        # 0x140047f68
   14001bbab:	mov    QWORD PTR [rcx+0x8],rax
   14001bbaf:	mov    QWORD PTR [rip+0x2c3b2],rcx        # 0x140047f68
   14001bbb6:	jmp    0x14001bbc0
   14001bbb8:	mov    QWORD PTR [rcx+0x8],0x0
   14001bbc0:	cmp    QWORD PTR [rip+0x2c3a8],0x0        # 0x140047f70
   14001bbc8:	je     0x14001bbd1
   14001bbca:	mov    rax,QWORD PTR [rcx]
   14001bbcd:	rex.W jmp QWORD PTR [rax+0x60]
   14001bbd1:	ret    
   14001bbd2:	int3   
   14001bbd3:	int3   
   14001bbd4:	int3   
   14001bbd5:	int3   
   14001bbd6:	int3   
   14001bbd7:	int3   
   14001bbd8:	int3   
   14001bbd9:	int3   
   14001bbda:	int3   
   14001bbdb:	int3   
   14001bbdc:	int3   
   14001bbdd:	int3   
   14001bbde:	int3   
   14001bbdf:	int3   
   14001bbe0:	rex push rbx
   14001bbe2:	sub    rsp,0x20
   14001bbe6:	movss  xmm0,DWORD PTR [rsp+0x60]
   14001bbec:	test   r8,r8
   14001bbef:	mov    rax,QWORD PTR [rip+0x2a5c2]        # 0x1400461b8
   14001bbf6:	mov    rbx,rcx
   14001bbf9:	cmovne rax,r8
   14001bbfd:	mov    QWORD PTR [rsp+0x30],rbp
   14001bc02:	mov    QWORD PTR [rcx+0x40],rax
   14001bc06:	mov    rbp,r9
   14001bc09:	movzx  eax,BYTE PTR [rsp+0x58]
   14001bc0e:	mov    QWORD PTR [rsp+0x38],rsi
   14001bc13:	mov    rsi,QWORD PTR [rsp+0x78]
   14001bc18:	mov    BYTE PTR [rcx+0x60],al
   14001bc1b:	movzx  eax,BYTE PTR [rsp+0x68]
   14001bc20:	movss  DWORD PTR [rcx+0x64],xmm0
   14001bc25:	movss  xmm0,DWORD PTR [rsp+0x70]
   14001bc2b:	mov    QWORD PTR [rsp+0x48],r14
   14001bc30:	mov    r14,rdx
   14001bc33:	mov    BYTE PTR [rcx+0x68],al
   14001bc36:	movss  DWORD PTR [rcx+0x6c],xmm0
   14001bc3b:	mov    QWORD PTR [rcx+0x38],rcx
   14001bc3f:	test   rsi,rsi
   14001bc42:	je     0x14001bc7b
   14001bc44:	mov    QWORD PTR [rsp+0x40],rdi
   14001bc49:	movsxd rdi,DWORD PTR [rcx+0x70]
   14001bc4d:	cmp    edi,DWORD PTR [rcx+0x80]
   14001bc53:	jne    0x14001bc63
   14001bc55:	add    rcx,0x78
   14001bc59:	mov    edx,0x1
   14001bc5e:	call   0x140013420
   14001bc63:	mov    rax,QWORD PTR [rbx+0x78]
   14001bc67:	inc    DWORD PTR [rbx+0x70]
   14001bc6a:	lea    rdx,[rax+rdi*8]
   14001bc6e:	mov    rdi,QWORD PTR [rsp+0x40]
   14001bc73:	test   rdx,rdx
   14001bc76:	je     0x14001bc7b
   14001bc78:	mov    QWORD PTR [rdx],rsi
   14001bc7b:	mov    rcx,QWORD PTR [rbx+0x40]
   14001bc7f:	or     rax,0xffffffffffffffff
   14001bc83:	mov    rsi,QWORD PTR [rsp+0x38]
   14001bc88:	nop    DWORD PTR [rax+rax*1+0x0]
   14001bc90:	inc    rax
   14001bc93:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001bc97:	jne    0x14001bc90
   14001bc99:	inc    eax
   14001bc9b:	movsxd rcx,eax
   14001bc9e:	mov    DWORD PTR [rbx+0x50],eax
   14001bca1:	call   0x140007bf0
   14001bca6:	movsxd r8,DWORD PTR [rbx+0x50]
   14001bcaa:	mov    rcx,rax
   14001bcad:	mov    rdx,QWORD PTR [rbx+0x40]
   14001bcb1:	mov    QWORD PTR [rbx+0x48],rax
   14001bcb5:	call   0x140026f70
   14001bcba:	mov    rdx,QWORD PTR [rbx+0x48]
   14001bcbe:	mov    rcx,rbx
   14001bcc1:	call   0x14001c120
   14001bcc6:	test   al,al
   14001bcc8:	jne    0x14001bd17
   14001bcca:	mov    rcx,QWORD PTR [rbx+0x48]
   14001bcce:	call   QWORD PTR [rip+0x1671c]        # 0x1400323f0
   14001bcd4:	movss  DWORD PTR [rsp+0x58],xmm0
   14001bcda:	mov    eax,DWORD PTR [rsp+0x58]
   14001bcde:	and    eax,0x7f800000
   14001bce3:	movss  DWORD PTR [rbx+0x54],xmm0
   14001bce8:	cmp    eax,0x7f800000
   14001bced:	jne    0x14001bd0a
   14001bcef:	mov    r8,QWORD PTR [rbx+0x48]
   14001bcf3:	lea    rcx,[rip+0x1bc96]        # 0x140037990
   14001bcfa:	mov    rdx,r14
   14001bcfd:	call   QWORD PTR [rip+0x166ad]        # 0x1400323b0
   14001bd03:	mov    DWORD PTR [rbx+0x54],0x7f7fffff
   14001bd0a:	mov    rcx,QWORD PTR [rbx+0x48]
   14001bd0e:	call   QWORD PTR [rip+0x16584]        # 0x140032298
   14001bd14:	mov    DWORD PTR [rbx+0x58],eax
   14001bd17:	mov    rax,QWORD PTR [rsp+0x50]
   14001bd1c:	mov    rcx,QWORD PTR [rip+0x2a48d]        # 0x1400461b0
   14001bd23:	test   rax,rax
   14001bd26:	mov    QWORD PTR [rbx+0x18],r14
   14001bd2a:	mov    r14,QWORD PTR [rsp+0x48]
   14001bd2f:	cmovne rcx,rax
   14001bd33:	test   bpl,0x1
   14001bd37:	mov    QWORD PTR [rbx+0x28],rbp
   14001bd3b:	mov    rbp,QWORD PTR [rsp+0x30]
   14001bd40:	mov    QWORD PTR [rbx+0x20],rcx
   14001bd44:	mov    BYTE PTR [rbx+0x10],0x0
   14001bd48:	jne    0x14001bd5e
   14001bd4a:	mov    rax,QWORD PTR [rip+0x2c217]        # 0x140047f68
   14001bd51:	mov    QWORD PTR [rbx+0x8],rax
   14001bd55:	mov    QWORD PTR [rip+0x2c20c],rbx        # 0x140047f68
   14001bd5c:	jmp    0x14001bd66
   14001bd5e:	mov    QWORD PTR [rbx+0x8],0x0
   14001bd66:	cmp    QWORD PTR [rip+0x2c202],0x0        # 0x140047f70
   14001bd6e:	je     0x14001bd7f
   14001bd70:	mov    rax,QWORD PTR [rbx]
   14001bd73:	mov    rcx,rbx
   14001bd76:	add    rsp,0x20
   14001bd7a:	pop    rbx
   14001bd7b:	rex.W jmp QWORD PTR [rax+0x60]
   14001bd7f:	add    rsp,0x20
   14001bd83:	pop    rbx
   14001bd84:	ret    
   14001bd85:	int3   
   14001bd86:	int3   
   14001bd87:	int3   
   14001bd88:	int3   
   14001bd89:	int3   
   14001bd8a:	int3   
   14001bd8b:	int3   
   14001bd8c:	int3   
   14001bd8d:	int3   
   14001bd8e:	int3   
   14001bd8f:	int3   
   14001bd90:	mov    rax,QWORD PTR [rcx+0x8]
   14001bd94:	mov    rax,QWORD PTR [rax+0x18]
   14001bd98:	ret    
   14001bd99:	int3   
   14001bd9a:	int3   
   14001bd9b:	int3   
   14001bd9c:	int3   
   14001bd9d:	int3   
   14001bd9e:	int3   
   14001bd9f:	int3   
   14001bda0:	mov    rax,QWORD PTR [rcx+0x38]
   14001bda4:	cmp    DWORD PTR [rax+0x58],0x0
   14001bda8:	setne  al
   14001bdab:	ret    
   14001bdac:	int3   
   14001bdad:	int3   
   14001bdae:	int3   
   14001bdaf:	int3   
   14001bdb0:	mov    eax,DWORD PTR [rip+0x2a3ea]        # 0x1400461a0
   14001bdb6:	ret    
   14001bdb7:	int3   
   14001bdb8:	int3   
   14001bdb9:	int3   
   14001bdba:	int3   
   14001bdbb:	int3   
   14001bdbc:	int3   
   14001bdbd:	int3   
   14001bdbe:	int3   
   14001bdbf:	int3   
   14001bdc0:	rex push rbx
   14001bdc2:	sub    rsp,0x20
   14001bdc6:	mov    eax,DWORD PTR [rip+0x2c35c]        # 0x140048128
   14001bdcc:	test   al,0x1
   14001bdce:	jne    0x14001bdfd
   14001bdd0:	or     eax,0x1
   14001bdd3:	lea    rbx,[rip+0x2c2c6]        # 0x1400480a0
   14001bdda:	mov    rcx,rbx
   14001bddd:	mov    DWORD PTR [rip+0x2c345],eax        # 0x140048128
   14001bde3:	call   0x14001b6d0
   14001bde8:	lea    rcx,[rip+0x151e1]        # 0x140030fd0
   14001bdef:	call   0x1400266d0
   14001bdf4:	mov    rax,rbx
   14001bdf7:	add    rsp,0x20
   14001bdfb:	pop    rbx
   14001bdfc:	ret    
   14001bdfd:	lea    rax,[rip+0x2c29c]        # 0x1400480a0
   14001be04:	add    rsp,0x20
   14001be08:	pop    rbx
   14001be09:	ret    
   14001be0a:	int3   
   14001be0b:	int3   
   14001be0c:	int3   
   14001be0d:	int3   
   14001be0e:	int3   
   14001be0f:	int3   
   14001be10:	mov    rax,QWORD PTR [rcx+0x28]
   14001be14:	ret    
   14001be15:	int3   
   14001be16:	int3   
   14001be17:	int3   
   14001be18:	int3   
   14001be19:	int3   
   14001be1a:	int3   
   14001be1b:	int3   
   14001be1c:	int3   
   14001be1d:	int3   
   14001be1e:	int3   
   14001be1f:	int3   
   14001be20:	mov    rax,QWORD PTR [rcx+0x38]
   14001be24:	mov    rax,QWORD PTR [rax+0x28]
   14001be28:	ret    
   14001be29:	int3   
   14001be2a:	int3   
   14001be2b:	int3   
   14001be2c:	int3   
   14001be2d:	int3   
   14001be2e:	int3   
   14001be2f:	int3   
   14001be30:	mov    rax,QWORD PTR [rcx+0x38]
   14001be34:	movss  xmm0,DWORD PTR [rax+0x54]
   14001be39:	ret    
   14001be3a:	int3   
   14001be3b:	int3   
   14001be3c:	int3   
   14001be3d:	int3   
   14001be3e:	int3   
   14001be3f:	int3   
   14001be40:	mov    rax,QWORD PTR [rcx+0x20]
   14001be44:	ret    
   14001be45:	int3   
   14001be46:	int3   
   14001be47:	int3   
   14001be48:	int3   
   14001be49:	int3   
   14001be4a:	int3   
   14001be4b:	int3   
   14001be4c:	int3   
   14001be4d:	int3   
   14001be4e:	int3   
   14001be4f:	int3   
   14001be50:	mov    rax,QWORD PTR [rcx+0x38]
   14001be54:	mov    rax,QWORD PTR [rax+0x20]
   14001be58:	ret    
   14001be59:	int3   
   14001be5a:	int3   
   14001be5b:	int3   
   14001be5c:	int3   
   14001be5d:	int3   
   14001be5e:	int3   
   14001be5f:	int3   
   14001be60:	mov    rax,QWORD PTR [rcx+0x38]
   14001be64:	mov    eax,DWORD PTR [rax+0x58]
   14001be67:	ret    
   14001be68:	int3   
   14001be69:	int3   
   14001be6a:	int3   
   14001be6b:	int3   
   14001be6c:	int3   
   14001be6d:	int3   
   14001be6e:	int3   
   14001be6f:	int3   
   14001be70:	lea    rax,[rip+0x16929]        # 0x1400327a0
   14001be77:	ret    
   14001be78:	sub    rcx,0x30
   14001be7c:	jmp    0x14001be70
   14001be81:	int3   
   14001be82:	int3   
   14001be83:	int3   
   14001be84:	int3   
   14001be85:	int3   
   14001be86:	int3   
   14001be87:	int3   
   14001be88:	int3   
   14001be89:	int3   
   14001be8a:	int3   
   14001be8b:	int3   
   14001be8c:	int3   
   14001be8d:	int3   
   14001be8e:	int3   
   14001be8f:	int3   
   14001be90:	mov    rax,QWORD PTR [rcx+0x18]
   14001be94:	ret    
   14001be95:	int3   
   14001be96:	int3   
   14001be97:	int3   
   14001be98:	int3   
   14001be99:	int3   
   14001be9a:	int3   
   14001be9b:	int3   
   14001be9c:	int3   
   14001be9d:	int3   
   14001be9e:	int3   
   14001be9f:	int3   
   14001bea0:	mov    rax,QWORD PTR [rcx+0x38]
   14001bea4:	mov    rax,QWORD PTR [rax+0x18]
   14001bea8:	ret    
   14001bea9:	int3   
   14001beaa:	int3   
   14001beab:	int3   
   14001beac:	sub    rcx,0x30
   14001beb0:	jmp    0x14001bea0
   14001beb5:	int3   
   14001beb6:	int3   
   14001beb7:	int3   
   14001beb8:	int3   
   14001beb9:	int3   
   14001beba:	int3   
   14001bebb:	int3   
   14001bebc:	int3   
   14001bebd:	int3   
   14001bebe:	int3   
   14001bebf:	int3   
   14001bec0:	mov    DWORD PTR [rdx],0x0
   14001bec6:	mov    rax,rdx
   14001bec9:	ret    
   14001beca:	int3   
   14001becb:	int3   
   14001becc:	int3   
   14001becd:	int3   
   14001bece:	int3   
   14001becf:	int3   
   14001bed0:	mov    rdx,rcx
   14001bed3:	mov    rcx,QWORD PTR [rip+0x2c096]        # 0x140047f70
   14001beda:	test   rcx,rcx
   14001bedd:	je     0x14001bee5
   14001bedf:	mov    rax,QWORD PTR [rcx]
   14001bee2:	rex.W jmp QWORD PTR [rax]
   14001bee5:	ret    
   14001bee6:	int3   
   14001bee7:	int3   
   14001bee8:	int3   
   14001bee9:	int3   
   14001beea:	int3   
   14001beeb:	int3   
   14001beec:	int3   
   14001beed:	int3   
   14001beee:	int3   
   14001beef:	int3   
   14001bef0:	mov    QWORD PTR [rsp+0x10],rbx
   14001bef5:	mov    QWORD PTR [rsp+0x18],rsi
   14001befa:	mov    QWORD PTR [rsp+0x20],rdi
   14001beff:	push   r14
   14001bf01:	sub    rsp,0x20
   14001bf05:	mov    r14,rcx
   14001bf08:	movzx  ebx,r8b
   14001bf0c:	mov    rcx,QWORD PTR [rip+0x2b605]        # 0x140047518
   14001bf13:	mov    rsi,rdx
   14001bf16:	test   rcx,rcx
   14001bf19:	jne    0x14001bf5d
   14001bf1b:	mov    ecx,0x18
   14001bf20:	call   0x140007bf0
   14001bf25:	xor    edi,edi
   14001bf27:	mov    rbx,rax
   14001bf2a:	test   rax,rax
   14001bf2d:	je     0x14001bf34
   14001bf2f:	mov    QWORD PTR [rax],rdi
   14001bf32:	jmp    0x14001bf37
   14001bf34:	mov    rbx,rdi
   14001bf37:	mov    rdx,rsi
   14001bf3a:	mov    rcx,rbx
   14001bf3d:	call   0x14001aae0
   14001bf42:	mov    QWORD PTR [rbx+0x8],r14
   14001bf46:	mov    rax,QWORD PTR [rip+0x2c02b]        # 0x140047f78
   14001bf4d:	mov    QWORD PTR [rbx+0x10],rax
   14001bf51:	mov    QWORD PTR [rip+0x2c020],rbx        # 0x140047f78
   14001bf58:	jmp    0x14001c07e
   14001bf5d:	mov    QWORD PTR [rsp+0x30],rbp
   14001bf62:	test   rsi,rsi
   14001bf65:	je     0x14001bf80
   14001bf67:	cmp    BYTE PTR [rdx],0x0
   14001bf6a:	je     0x14001bf80
   14001bf6c:	mov    rax,QWORD PTR [rcx]
   14001bf6f:	call   QWORD PTR [rax+0x98]
   14001bf75:	mov    ecx,DWORD PTR [rip+0x2c1ad]        # 0x140048128
   14001bf7b:	mov    rdx,rax
   14001bf7e:	jmp    0x14001bfb9
   14001bf80:	mov    ecx,DWORD PTR [rip+0x2c1a2]        # 0x140048128
   14001bf86:	test   cl,0x1
   14001bf89:	jne    0x14001bfb2
   14001bf8b:	or     ecx,0x1
   14001bf8e:	mov    DWORD PTR [rip+0x2c194],ecx        # 0x140048128
   14001bf94:	lea    rcx,[rip+0x2c105]        # 0x1400480a0
   14001bf9b:	call   0x14001b6d0
   14001bfa0:	lea    rcx,[rip+0x15029]        # 0x140030fd0
   14001bfa7:	call   0x1400266d0
   14001bfac:	mov    ecx,DWORD PTR [rip+0x2c176]        # 0x140048128
   14001bfb2:	lea    rdx,[rip+0x2c0e7]        # 0x1400480a0
   14001bfb9:	xor    edi,edi
   14001bfbb:	lea    rax,[rdx+0x30]
   14001bfbf:	test   rdx,rdx
   14001bfc2:	lea    rbp,[rip+0x2c107]        # 0x1400480d0
   14001bfc9:	cmove  rax,rdi
   14001bfcd:	mov    QWORD PTR [r14],rax
   14001bfd0:	test   rax,rax
   14001bfd3:	jne    0x14001c004
   14001bfd5:	test   cl,0x1
   14001bfd8:	jne    0x14001c001
   14001bfda:	or     ecx,0x1
   14001bfdd:	mov    DWORD PTR [rip+0x2c145],ecx        # 0x140048128
   14001bfe3:	lea    rcx,[rip+0x2c0b6]        # 0x1400480a0
   14001bfea:	call   0x14001b6d0
   14001bfef:	lea    rcx,[rip+0x14fda]        # 0x140030fd0
   14001bff6:	call   0x1400266d0
   14001bffb:	mov    ecx,DWORD PTR [rip+0x2c127]        # 0x140048128
   14001c001:	mov    QWORD PTR [r14],rbp
   14001c004:	mov    rax,QWORD PTR [r14]
   14001c007:	test   rax,rax
   14001c00a:	lea    rdx,[rax-0x30]
   14001c00e:	cmove  rdx,rdi
   14001c012:	mov    QWORD PTR [r14+0x8],rdx
   14001c016:	test   cl,0x1
   14001c019:	jne    0x14001c03c
   14001c01b:	or     ecx,0x1
   14001c01e:	mov    DWORD PTR [rip+0x2c104],ecx        # 0x140048128
   14001c024:	lea    rcx,[rip+0x2c075]        # 0x1400480a0
   14001c02b:	call   0x14001b6d0
   14001c030:	lea    rcx,[rip+0x14f99]        # 0x140030fd0
   14001c037:	call   0x1400266d0
   14001c03c:	cmp    QWORD PTR [r14],rbp
   14001c03f:	mov    rbp,QWORD PTR [rsp+0x30]
   14001c044:	jne    0x14001c07e
   14001c046:	cmp    QWORD PTR [rip+0x2b4cb],rdi        # 0x140047518
   14001c04d:	jne    0x14001c058
   14001c04f:	cmp    BYTE PTR [rip+0x2a16a],dil        # 0x1400461c0
   14001c056:	je     0x14001c07e
   14001c058:	test   bl,bl
   14001c05a:	jne    0x14001c077
   14001c05c:	test   rsi,rsi
   14001c05f:	lea    rdx,[rip+0x1b95e]        # 0x1400379c4
   14001c066:	lea    rcx,[rip+0x1b963]        # 0x1400379d0
   14001c06d:	cmovne rdx,rsi
   14001c071:	call   QWORD PTR [rip+0x16339]        # 0x1400323b0
   14001c077:	mov    BYTE PTR [rip+0x2a142],dil        # 0x1400461c0
   14001c07e:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c083:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c088:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c08d:	add    rsp,0x20
   14001c091:	pop    r14
   14001c093:	ret    
   14001c094:	int3   
   14001c095:	int3   
   14001c096:	int3   
   14001c097:	int3   
   14001c098:	int3   
   14001c099:	int3   
   14001c09a:	int3   
   14001c09b:	int3   
   14001c09c:	int3   
   14001c09d:	int3   
   14001c09e:	int3   
   14001c09f:	int3   
   14001c0a0:	rex push rbx
   14001c0a2:	sub    rsp,0x20
   14001c0a6:	mov    rbx,QWORD PTR [rip+0x2becb]        # 0x140047f78
   14001c0ad:	mov    QWORD PTR [rip+0x2bec0],0x0        # 0x140047f78
   14001c0b8:	test   rbx,rbx
   14001c0bb:	je     0x14001c10c
   14001c0bd:	mov    QWORD PTR [rsp+0x30],rdi
   14001c0c2:	cmp    QWORD PTR [rbx+0x8],0x0
   14001c0c7:	mov    rdi,QWORD PTR [rbx+0x10]
   14001c0cb:	je     0x14001c0e4
   14001c0cd:	mov    rcx,rbx
   14001c0d0:	call   0x14001b050
   14001c0d5:	mov    rcx,QWORD PTR [rbx+0x8]
   14001c0d9:	xor    r8d,r8d
   14001c0dc:	mov    rdx,rax
   14001c0df:	call   0x14001bef0
   14001c0e4:	cmp    QWORD PTR [rbx],0x0
   14001c0e8:	je     0x14001c0f2
   14001c0ea:	mov    rcx,rbx
   14001c0ed:	call   0x14001b030
   14001c0f2:	mov    edx,0x18
   14001c0f7:	mov    rcx,rbx
   14001c0fa:	call   0x14002639c
   14001c0ff:	mov    rbx,rdi
   14001c102:	test   rdi,rdi
   14001c105:	jne    0x14001c0c2
   14001c107:	mov    rdi,QWORD PTR [rsp+0x30]
   14001c10c:	add    rsp,0x20
   14001c110:	pop    rbx
   14001c111:	ret    
   14001c112:	int3   
   14001c113:	int3   
   14001c114:	int3   
   14001c115:	int3   
   14001c116:	int3   
   14001c117:	int3   
   14001c118:	int3   
   14001c119:	int3   
   14001c11a:	int3   
   14001c11b:	int3   
   14001c11c:	int3   
   14001c11d:	int3   
   14001c11e:	int3   
   14001c11f:	int3   
   14001c120:	rex push rbx
   14001c122:	sub    rsp,0x40
   14001c126:	mov    rbx,rcx
   14001c129:	lea    r9,[rsp+0x34]
   14001c12e:	mov    rax,rdx
   14001c131:	lea    rcx,[rsp+0x3c]
   14001c136:	mov    QWORD PTR [rsp+0x28],rcx
   14001c13b:	lea    r8,[rsp+0x30]
   14001c140:	lea    rcx,[rsp+0x38]
   14001c145:	mov    QWORD PTR [rsp+0x20],rcx
   14001c14a:	lea    rdx,[rip+0x1b7f7]        # 0x140037948
   14001c151:	mov    rcx,rax
   14001c154:	call   QWORD PTR [rip+0x163de]        # 0x140032538
   14001c15a:	mov    ecx,eax
   14001c15c:	cmp    eax,0x3
   14001c15f:	jl     0x14001c1bf
   14001c161:	mov    eax,DWORD PTR [rsp+0x3c]
   14001c165:	cmp    ecx,0x3
   14001c168:	mov    edx,0xff
   14001c16d:	cmove  eax,edx
   14001c170:	mov    DWORD PTR [rsp+0x3c],eax
   14001c174:	cmp    DWORD PTR [rsp+0x30],edx
   14001c178:	ja     0x14001c1bf
   14001c17a:	cmp    DWORD PTR [rsp+0x34],edx
   14001c17e:	ja     0x14001c1bf
   14001c180:	cmp    DWORD PTR [rsp+0x38],edx
   14001c184:	ja     0x14001c1bf
   14001c186:	cmp    eax,edx
   14001c188:	ja     0x14001c1bf
   14001c18a:	movzx  eax,BYTE PTR [rsp+0x30]
   14001c18f:	mov    BYTE PTR [rbx+0x58],al
   14001c192:	movzx  eax,BYTE PTR [rsp+0x34]
   14001c197:	mov    BYTE PTR [rbx+0x59],al
   14001c19a:	movzx  eax,BYTE PTR [rsp+0x38]
   14001c19f:	mov    BYTE PTR [rbx+0x5a],al
   14001c1a2:	movzx  eax,BYTE PTR [rsp+0x3c]
   14001c1a7:	mov    BYTE PTR [rbx+0x5b],al
   14001c1aa:	mov    al,0x1
   14001c1ac:	movd   xmm0,DWORD PTR [rbx+0x58]
   14001c1b1:	cvtdq2ps xmm0,xmm0
   14001c1b4:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c1b9:	add    rsp,0x40
   14001c1bd:	pop    rbx
   14001c1be:	ret    
   14001c1bf:	xor    al,al
   14001c1c1:	add    rsp,0x40
   14001c1c5:	pop    rbx
   14001c1c6:	ret    
   14001c1c7:	int3   
   14001c1c8:	int3   
   14001c1c9:	int3   
   14001c1ca:	int3   
   14001c1cb:	int3   
   14001c1cc:	int3   
   14001c1cd:	int3   
   14001c1ce:	int3   
   14001c1cf:	int3   
   14001c1d0:	sub    rsp,0x28
   14001c1d4:	mov    eax,edx
   14001c1d6:	mov    BYTE PTR [rsp+0x30],dl
   14001c1da:	shr    eax,0x8
   14001c1dd:	mov    BYTE PTR [rsp+0x31],al
   14001c1e1:	mov    eax,edx
   14001c1e3:	shr    eax,0x10
   14001c1e6:	mov    BYTE PTR [rsp+0x32],al
   14001c1ea:	mov    rax,QWORD PTR [rcx]
   14001c1ed:	shr    edx,0x18
   14001c1f0:	mov    BYTE PTR [rsp+0x33],dl
   14001c1f4:	mov    edx,DWORD PTR [rsp+0x30]
   14001c1f8:	call   QWORD PTR [rax+0x90]
   14001c1fe:	add    rsp,0x28
   14001c202:	ret    
   14001c203:	int3   
   14001c204:	int3   
   14001c205:	int3   
   14001c206:	int3   
   14001c207:	int3   
   14001c208:	int3   
   14001c209:	int3   
   14001c20a:	int3   
   14001c20b:	int3   
   14001c20c:	int3   
   14001c20d:	int3   
   14001c20e:	int3   
   14001c20f:	int3   
   14001c210:	movss  DWORD PTR [rsp+0x10],xmm1
   14001c216:	push   rbx
   14001c217:	sub    rsp,0x50
   14001c21b:	ucomiss xmm1,DWORD PTR [rcx+0x54]
   14001c21f:	mov    rbx,rcx
   14001c222:	je     0x14001c2de
   14001c228:	mov    rax,QWORD PTR [rcx]
   14001c22b:	mov    edx,0xb00000
   14001c230:	call   QWORD PTR [rax+0x18]
   14001c233:	test   al,al
   14001c235:	je     0x14001c26f
   14001c237:	mov    rcx,QWORD PTR [rip+0x2b2da]        # 0x140047518
   14001c23e:	test   rcx,rcx
   14001c241:	je     0x14001c26f
   14001c243:	mov    rax,QWORD PTR [rcx]
   14001c246:	call   QWORD PTR [rax+0x130]
   14001c24c:	test   al,al
   14001c24e:	jne    0x14001c26f
   14001c250:	mov    rcx,QWORD PTR [rip+0x2b2c1]        # 0x140047518
   14001c257:	mov    rdx,rbx
   14001c25a:	movss  xmm2,DWORD PTR [rsp+0x68]
   14001c260:	mov    rax,QWORD PTR [rcx]
   14001c263:	call   QWORD PTR [rax+0x138]
   14001c269:	add    rsp,0x50
   14001c26d:	pop    rbx
   14001c26e:	ret    
   14001c26f:	mov    rax,QWORD PTR [rbx]
   14001c272:	lea    rdx,[rsp+0x68]
   14001c277:	mov    rcx,rbx
   14001c27a:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001c27f:	call   QWORD PTR [rax+0xa0]
   14001c285:	movss  xmm0,DWORD PTR [rsp+0x68]
   14001c28b:	movss  xmm6,DWORD PTR [rbx+0x54]
   14001c290:	cvttss2si eax,xmm0
   14001c294:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c299:	mov    DWORD PTR [rbx+0x58],eax
   14001c29c:	mov    eax,DWORD PTR [rbx+0x28]
   14001c29f:	bt     rax,0xc
   14001c2a4:	jb     0x14001c2d9
   14001c2a6:	cvtps2pd xmm3,xmm0
   14001c2a9:	lea    r8,[rip+0x1a16c]        # 0x14003641c
   14001c2b0:	mov    edx,0x20
   14001c2b5:	lea    rcx,[rsp+0x20]
   14001c2ba:	movq   r9,xmm3
   14001c2bf:	call   QWORD PTR [rip+0x162ab]        # 0x140032570
   14001c2c5:	mov    rax,QWORD PTR [rbx]
   14001c2c8:	lea    rdx,[rsp+0x20]
   14001c2cd:	movaps xmm2,xmm6
   14001c2d0:	mov    rcx,rbx
   14001c2d3:	call   QWORD PTR [rax+0xa8]
   14001c2d9:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001c2de:	add    rsp,0x50
   14001c2e2:	pop    rbx
   14001c2e3:	ret    
   14001c2e4:	int3   
   14001c2e5:	int3   
   14001c2e6:	int3   
   14001c2e7:	int3   
   14001c2e8:	int3   
   14001c2e9:	int3   
   14001c2ea:	int3   
   14001c2eb:	int3   
   14001c2ec:	int3   
   14001c2ed:	int3   
   14001c2ee:	int3   
   14001c2ef:	int3   
   14001c2f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c2f5:	push   rdi
   14001c2f6:	sub    rsp,0x50
   14001c2fa:	mov    edi,edx
   14001c2fc:	mov    rbx,rcx
   14001c2ff:	cmp    edx,DWORD PTR [rcx+0x58]
   14001c302:	jne    0x14001c315
   14001c304:	movd   xmm0,edi
   14001c308:	cvtdq2ps xmm0,xmm0
   14001c30b:	ucomiss xmm0,DWORD PTR [rcx+0x54]
   14001c30f:	je     0x14001c3d9
   14001c315:	mov    rax,QWORD PTR [rcx]
   14001c318:	mov    edx,0xb00000
   14001c31d:	call   QWORD PTR [rax+0x18]
   14001c320:	test   al,al
   14001c322:	je     0x14001c35e
   14001c324:	mov    rcx,QWORD PTR [rip+0x2b1ed]        # 0x140047518
   14001c32b:	test   rcx,rcx
   14001c32e:	je     0x14001c35e
   14001c330:	mov    rax,QWORD PTR [rcx]
   14001c333:	call   QWORD PTR [rax+0x130]
   14001c339:	test   al,al
   14001c33b:	jne    0x14001c35e
   14001c33d:	mov    rcx,QWORD PTR [rip+0x2b1d4]        # 0x140047518
   14001c344:	mov    r8d,edi
   14001c347:	mov    rdx,rbx
   14001c34a:	mov    rax,QWORD PTR [rcx]
   14001c34d:	call   QWORD PTR [rax+0x140]
   14001c353:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c358:	add    rsp,0x50
   14001c35c:	pop    rdi
   14001c35d:	ret    
   14001c35e:	mov    rax,QWORD PTR [rbx]
   14001c361:	lea    rdx,[rsp+0x68]
   14001c366:	movd   xmm0,edi
   14001c36a:	mov    rcx,rbx
   14001c36d:	cvtdq2ps xmm0,xmm0
   14001c370:	movaps XMMWORD PTR [rsp+0x40],xmm6
   14001c375:	movss  DWORD PTR [rsp+0x68],xmm0
   14001c37b:	call   QWORD PTR [rax+0xa0]
   14001c381:	movss  xmm0,DWORD PTR [rsp+0x68]
   14001c387:	test   al,al
   14001c389:	je     0x14001c38f
   14001c38b:	cvttss2si edi,xmm0
   14001c38f:	mov    eax,DWORD PTR [rbx+0x28]
   14001c392:	movss  xmm6,DWORD PTR [rbx+0x54]
   14001c397:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c39c:	mov    DWORD PTR [rbx+0x58],edi
   14001c39f:	bt     rax,0xc
   14001c3a4:	jb     0x14001c3d4
   14001c3a6:	mov    r9d,edi
   14001c3a9:	lea    r8,[rip+0x1abbc]        # 0x140036f6c
   14001c3b0:	mov    edx,0x20
   14001c3b5:	lea    rcx,[rsp+0x20]
   14001c3ba:	call   QWORD PTR [rip+0x161b0]        # 0x140032570
   14001c3c0:	mov    rax,QWORD PTR [rbx]
   14001c3c3:	lea    rdx,[rsp+0x20]
   14001c3c8:	movaps xmm2,xmm6
   14001c3cb:	mov    rcx,rbx
   14001c3ce:	call   QWORD PTR [rax+0xa8]
   14001c3d4:	movaps xmm6,XMMWORD PTR [rsp+0x40]
   14001c3d9:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c3de:	add    rsp,0x50
   14001c3e2:	pop    rdi
   14001c3e3:	ret    
   14001c3e4:	int3   
   14001c3e5:	int3   
   14001c3e6:	int3   
   14001c3e7:	int3   
   14001c3e8:	int3   
   14001c3e9:	int3   
   14001c3ea:	int3   
   14001c3eb:	int3   
   14001c3ec:	int3   
   14001c3ed:	int3   
   14001c3ee:	int3   
   14001c3ef:	int3   
   14001c3f0:	mov    QWORD PTR [rsp+0x20],rbx
   14001c3f5:	push   rdi
   14001c3f6:	sub    rsp,0x60
   14001c3fa:	mov    rax,QWORD PTR [rcx]
   14001c3fd:	mov    rdi,rdx
   14001c400:	mov    edx,0xb00000
   14001c405:	mov    rbx,rcx
   14001c408:	call   QWORD PTR [rax+0x18]
   14001c40b:	test   al,al
   14001c40d:	je     0x14001c44c
   14001c40f:	mov    rcx,QWORD PTR [rip+0x2b102]        # 0x140047518
   14001c416:	test   rcx,rcx
   14001c419:	je     0x14001c44c
   14001c41b:	mov    rax,QWORD PTR [rcx]
   14001c41e:	call   QWORD PTR [rax+0x130]
   14001c424:	test   al,al
   14001c426:	jne    0x14001c44c
   14001c428:	mov    rcx,QWORD PTR [rip+0x2b0e9]        # 0x140047518
   14001c42f:	mov    r8,rdi
   14001c432:	mov    rdx,rbx
   14001c435:	mov    rax,QWORD PTR [rcx]
   14001c438:	call   QWORD PTR [rax+0x148]
   14001c43e:	mov    rbx,QWORD PTR [rsp+0x88]
   14001c446:	add    rsp,0x60
   14001c44a:	pop    rdi
   14001c44b:	ret    
   14001c44c:	mov    QWORD PTR [rsp+0x78],rsi
   14001c451:	test   rdi,rdi
   14001c454:	lea    rsi,[rip+0x16345]        # 0x1400327a0
   14001c45b:	movaps XMMWORD PTR [rsp+0x40],xmm7
   14001c460:	movss  xmm7,DWORD PTR [rbx+0x54]
   14001c465:	mov    rdx,rdi
   14001c468:	mov    rcx,rbx
   14001c46b:	cmovne rsi,rdi
   14001c46f:	call   0x14001c120
   14001c474:	test   al,al
   14001c476:	jne    0x14001c536
   14001c47c:	mov    rcx,rdi
   14001c47f:	movaps XMMWORD PTR [rsp+0x50],xmm6
   14001c484:	call   QWORD PTR [rip+0x15f66]        # 0x1400323f0
   14001c48a:	xorps  xmm6,xmm6
   14001c48d:	cvtss2sd xmm6,xmm0
   14001c491:	cvtpd2ps xmm1,xmm6
   14001c495:	movss  DWORD PTR [rsp+0x80],xmm1
   14001c49e:	mov    eax,DWORD PTR [rsp+0x80]
   14001c4a5:	and    eax,0x7f800000
   14001c4aa:	cmp    eax,0x7f800000
   14001c4af:	jne    0x14001c4d5
   14001c4b1:	mov    rax,QWORD PTR [rbx]
   14001c4b4:	mov    rcx,rbx
   14001c4b7:	call   QWORD PTR [rax+0x38]
   14001c4ba:	mov    r8,rdi
   14001c4bd:	lea    rcx,[rip+0x1b494]        # 0x140037958
   14001c4c4:	mov    rdx,rax
   14001c4c7:	call   QWORD PTR [rip+0x15ee3]        # 0x1400323b0
   14001c4cd:	movsd  xmm6,QWORD PTR [rip+0x1b533]        # 0x140037a08
   14001c4d5:	mov    rax,QWORD PTR [rbx]
   14001c4d8:	lea    rdx,[rsp+0x70]
   14001c4dd:	cvtpd2ps xmm0,xmm6
   14001c4e1:	mov    rcx,rbx
   14001c4e4:	movss  DWORD PTR [rsp+0x70],xmm0
   14001c4ea:	call   QWORD PTR [rax+0xa0]
   14001c4f0:	test   al,al
   14001c4f2:	je     0x14001c521
   14001c4f4:	movss  xmm6,DWORD PTR [rsp+0x70]
   14001c4fa:	lea    r8,[rip+0x19f1b]        # 0x14003641c
   14001c501:	cvtps2pd xmm6,xmm6
   14001c504:	mov    edx,0x20
   14001c509:	lea    rcx,[rsp+0x20]
   14001c50e:	movaps xmm3,xmm6
   14001c511:	movq   r9,xmm3
   14001c516:	call   QWORD PTR [rip+0x16054]        # 0x140032570
   14001c51c:	lea    rsi,[rsp+0x20]
   14001c521:	cvttsd2si eax,xmm6
   14001c525:	cvtpd2ps xmm0,xmm6
   14001c529:	mov    DWORD PTR [rbx+0x58],eax
   14001c52c:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   14001c531:	movss  DWORD PTR [rbx+0x54],xmm0
   14001c536:	mov    eax,DWORD PTR [rbx+0x28]
   14001c539:	bt     rax,0xc
   14001c53e:	jb     0x14001c552
   14001c540:	mov    rax,QWORD PTR [rbx]
   14001c543:	movaps xmm2,xmm7
   14001c546:	mov    rdx,rsi
   14001c549:	mov    rcx,rbx
   14001c54c:	call   QWORD PTR [rax+0xa8]
   14001c552:	mov    rsi,QWORD PTR [rsp+0x78]
   14001c557:	movaps xmm7,XMMWORD PTR [rsp+0x40]
   14001c55c:	mov    rbx,QWORD PTR [rsp+0x88]
   14001c564:	add    rsp,0x60
   14001c568:	pop    rdi
   14001c569:	ret    
   14001c56a:	int3   
   14001c56b:	int3   
   14001c56c:	sub    rcx,0x30
   14001c570:	jmp    0x1400039b0
   14001c575:	int3   
   14001c576:	int3   
   14001c577:	int3   
   14001c578:	int3   
   14001c579:	int3   
   14001c57a:	int3   
   14001c57b:	int3   
   14001c57c:	int3   
   14001c57d:	int3   
   14001c57e:	int3   
   14001c57f:	int3   
   14001c580:	test   QWORD PTR [rcx+0x28],rdx
   14001c584:	setne  al
   14001c587:	ret    
   14001c588:	int3   
   14001c589:	int3   
   14001c58a:	int3   
   14001c58b:	int3   
   14001c58c:	int3   
   14001c58d:	int3   
   14001c58e:	int3   
   14001c58f:	int3   
   14001c590:	mov    rax,QWORD PTR [rcx+0x38]
   14001c594:	test   QWORD PTR [rax+0x28],rdx
   14001c598:	setne  al
   14001c59b:	ret    
   14001c59c:	sub    rcx,0x30
   14001c5a0:	jmp    0x14001c590
   14001c5a5:	int3   
   14001c5a6:	int3   
   14001c5a7:	int3   
   14001c5a8:	int3   
   14001c5a9:	int3   
   14001c5aa:	int3   
   14001c5ab:	int3   
   14001c5ac:	int3   
   14001c5ad:	int3   
   14001c5ae:	int3   
   14001c5af:	int3   
   14001c5b0:	movzx  eax,BYTE PTR [rcx+0x10]
   14001c5b4:	ret    
   14001c5b5:	int3   
   14001c5b6:	int3   
   14001c5b7:	int3   
   14001c5b8:	int3   
   14001c5b9:	int3   
   14001c5ba:	int3   
   14001c5bb:	int3   
   14001c5bc:	int3   
   14001c5bd:	int3   
   14001c5be:	int3   
   14001c5bf:	int3   
   14001c5c0:	mov    rax,QWORD PTR [rcx+0x38]
   14001c5c4:	movzx  eax,BYTE PTR [rax+0x10]
   14001c5c8:	ret    
   14001c5c9:	int3   
   14001c5ca:	int3   
   14001c5cb:	int3   
   14001c5cc:	int3   
   14001c5cd:	int3   
   14001c5ce:	int3   
   14001c5cf:	int3   
   14001c5d0:	not    rdx
   14001c5d3:	and    QWORD PTR [rcx+0x28],rdx
   14001c5d7:	ret    
   14001c5d8:	int3   
   14001c5d9:	int3   
   14001c5da:	int3   
   14001c5db:	int3   
   14001c5dc:	int3   
   14001c5dd:	int3   
   14001c5de:	int3   
   14001c5df:	int3   
   14001c5e0:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c5e4:	mov    rax,QWORD PTR [rcx]
   14001c5e7:	rex.W jmp QWORD PTR [rax+0x90]
   14001c5ee:	int3   
   14001c5ef:	int3   
   14001c5f0:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c5f4:	mov    rax,QWORD PTR [rcx]
   14001c5f7:	rex.W jmp QWORD PTR [rax+0x88]
   14001c5fe:	int3   
   14001c5ff:	int3   
   14001c600:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c604:	mov    rax,QWORD PTR [rcx]
   14001c607:	rex.W jmp QWORD PTR [rax+0x80]
   14001c60e:	int3   
   14001c60f:	int3   
   14001c610:	sub    rsp,0x28
   14001c614:	mov    rcx,QWORD PTR [rcx+0x8]
   14001c618:	mov    rax,QWORD PTR [rcx]
   14001c61b:	call   QWORD PTR [rax+0x98]
   14001c621:	add    rsp,0x28
   14001c625:	ret    
   14001c626:	int3   
   14001c627:	int3   
   14001c628:	int3   
   14001c629:	int3   
   14001c62a:	int3   
   14001c62b:	int3   
   14001c62c:	int3   
   14001c62d:	int3   
   14001c62e:	int3   
   14001c62f:	int3   
   14001c630:	sub    rsp,0x28
   14001c634:	call   0x14001c650
   14001c639:	mov    rcx,QWORD PTR [rip+0x2aaf0]        # 0x140047130
   14001c640:	mov    rax,QWORD PTR [rcx]
   14001c643:	add    rsp,0x28
   14001c647:	rex.W jmp QWORD PTR [rax+0x150]
   14001c64e:	int3   
   14001c64f:	int3   
   14001c650:	sub    rsp,0x58
   14001c654:	cmp    BYTE PTR [rip+0x2bad5],0x0        # 0x140048130
   14001c65b:	jne    0x14001c7d5
   14001c661:	mov    rcx,QWORD PTR [rip+0x2aac8]        # 0x140047130
   14001c668:	test   rcx,rcx
   14001c66b:	je     0x14001c7d5
   14001c671:	mov    QWORD PTR [rsp+0x68],rbp
   14001c676:	mov    rbp,QWORD PTR [rip+0x2babb]        # 0x140048138
   14001c67d:	mov    BYTE PTR [rip+0x2baac],0x1        # 0x140048130
   14001c684:	test   rbp,rbp
   14001c687:	je     0x14001c7d0
   14001c68d:	mov    QWORD PTR [rsp+0x60],rbx
   14001c692:	mov    QWORD PTR [rsp+0x70],rsi
   14001c697:	mov    QWORD PTR [rsp+0x78],rdi
   14001c69c:	mov    QWORD PTR [rsp+0x50],r14
   14001c6a1:	xor    esi,esi
   14001c6a3:	cmp    DWORD PTR [rbp+0x0],esi
   14001c6a6:	jle    0x14001c6f1
   14001c6a8:	lea    rbx,[rbp+0x14]
   14001c6ac:	nop    DWORD PTR [rax+0x0]
   14001c6b0:	mov    r14,QWORD PTR [rbx-0xc]
   14001c6b4:	lea    rax,[rbx+0x4]
   14001c6b8:	mov    r10,QWORD PTR [rcx]
   14001c6bb:	mov    rdx,r14
   14001c6be:	mov    r9d,DWORD PTR [rbx]
   14001c6c1:	mov    r8d,DWORD PTR [rbx-0x4]
   14001c6c5:	mov    rdi,QWORD PTR [rbx+0x44]
   14001c6c9:	mov    QWORD PTR [rsp+0x20],rax
   14001c6ce:	call   QWORD PTR [r10+0x1a0]
   14001c6d5:	mov    QWORD PTR [rdi],rax
   14001c6d8:	test   rax,rax
   14001c6db:	je     0x14001c71a
   14001c6dd:	inc    esi
   14001c6df:	add    rbx,0x58
   14001c6e3:	cmp    esi,DWORD PTR [rbp+0x0]
   14001c6e6:	jge    0x14001c6f1
   14001c6e8:	mov    rcx,QWORD PTR [rip+0x2aa41]        # 0x140047130
   14001c6ef:	jmp    0x14001c6b0
   14001c6f1:	mov    rbx,QWORD PTR [rbp+0x2268]
   14001c6f8:	mov    edx,0x2270
   14001c6fd:	mov    rcx,rbp
   14001c700:	call   0x14002639c
   14001c705:	mov    rbp,rbx
   14001c708:	test   rbx,rbx
   14001c70b:	je     0x14001c7bc
   14001c711:	mov    rcx,QWORD PTR [rip+0x2aa18]        # 0x140047130
   14001c718:	jmp    0x14001c6a1
   14001c71a:	mov    rax,QWORD PTR [rip+0x15c67]        # 0x140032388
   14001c721:	mov    edx,0x4
   14001c726:	mov    ecx,DWORD PTR [rax]
   14001c728:	call   QWORD PTR [rip+0x15d7a]        # 0x1400324a8
   14001c72e:	test   al,al
   14001c730:	je     0x14001c777
   14001c732:	lea    rax,[rip+0x1b357]        # 0x140037a90
   14001c739:	mov    DWORD PTR [rsp+0x38],0x27
   14001c741:	mov    QWORD PTR [rsp+0x30],rax
   14001c746:	lea    r9,[rip+0x1b2c3]        # 0x140037a10
   14001c74d:	lea    rax,[rip+0x1b304]        # 0x140037a58
   14001c754:	mov    QWORD PTR [rsp+0x20],r14
   14001c759:	mov    QWORD PTR [rsp+0x40],rax
   14001c75e:	lea    r8,[rsp+0x30]
   14001c763:	mov    rax,QWORD PTR [rip+0x15c1e]        # 0x140032388
   14001c76a:	mov    edx,0x4
   14001c76f:	mov    ecx,DWORD PTR [rax]
   14001c771:	call   QWORD PTR [rip+0x15d21]        # 0x140032498
   14001c777:	call   QWORD PTR [rip+0x15e0b]        # 0x140032588
   14001c77d:	test   al,al
   14001c77f:	je     0x14001c7b0
   14001c781:	call   QWORD PTR [rip+0x15cf9]        # 0x140032480
   14001c787:	lea    rcx,[rip+0x1601e]        # 0x1400327ac
   14001c78e:	xorps  xmm0,xmm0
   14001c791:	lea    rdx,[rsp+0x30]
   14001c796:	mov    DWORD PTR [rsp+0x38],eax
   14001c79a:	mov    QWORD PTR [rsp+0x30],rcx
   14001c79f:	mov    r8b,0x1
   14001c7a2:	xor    ecx,ecx
   14001c7a4:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001c7aa:	call   QWORD PTR [rip+0x15cc8]        # 0x140032478
   14001c7b0:	mov    ecx,0x1
   14001c7b5:	call   QWORD PTR [rip+0x15a8d]        # 0x140032248
   14001c7bb:	int3   
   14001c7bc:	mov    rdi,QWORD PTR [rsp+0x78]
   14001c7c1:	mov    rsi,QWORD PTR [rsp+0x70]
   14001c7c6:	mov    rbx,QWORD PTR [rsp+0x60]
   14001c7cb:	mov    r14,QWORD PTR [rsp+0x50]
   14001c7d0:	mov    rbp,QWORD PTR [rsp+0x68]
   14001c7d5:	add    rsp,0x58
   14001c7d9:	ret    
   14001c7da:	int3   
   14001c7db:	int3   
   14001c7dc:	int3   
   14001c7dd:	int3   
   14001c7de:	int3   
   14001c7df:	int3   
   14001c7e0:	sub    rsp,0x28
   14001c7e4:	call   0x14000bcf0
   14001c7e9:	add    rsp,0x28
   14001c7ed:	jmp    0x14001c0a0
   14001c7f2:	int3   
   14001c7f3:	int3   
   14001c7f4:	int3   
   14001c7f5:	int3   
   14001c7f6:	int3   
   14001c7f7:	int3   
   14001c7f8:	int3   
   14001c7f9:	int3   
   14001c7fa:	int3   
   14001c7fb:	int3   
   14001c7fc:	int3   
   14001c7fd:	int3   
   14001c7fe:	int3   
   14001c7ff:	int3   
   14001c800:	jmp    0x14000bf50
   14001c805:	int3   
   14001c806:	int3   
   14001c807:	int3   
   14001c808:	int3   
   14001c809:	int3   
   14001c80a:	int3   
   14001c80b:	int3   
   14001c80c:	int3   
   14001c80d:	int3   
   14001c80e:	int3   
   14001c80f:	int3   
   14001c810:	mov    QWORD PTR [rsp+0x8],rbx
   14001c815:	push   rdi
   14001c816:	sub    rsp,0x20
   14001c81a:	xor    edi,edi
   14001c81c:	mov    DWORD PTR [rcx+0x10],r8d
   14001c820:	and    edx,0x3fffffff
   14001c826:	mov    QWORD PTR [rcx+0x8],rdi
   14001c82a:	mov    DWORD PTR [rcx+0x14],edx
   14001c82d:	mov    rbx,rcx
   14001c830:	test   r8d,r8d
   14001c833:	je     0x14001c85c
   14001c835:	call   QWORD PTR [rip+0x15c85]        # 0x1400324c0
   14001c83b:	mov    rax,QWORD PTR [rip+0x15b4e]        # 0x140032390
   14001c842:	mov    rcx,QWORD PTR [rax]
   14001c845:	movsxd rax,DWORD PTR [rbx+0x10]
   14001c849:	mov    r8,QWORD PTR [rcx]
   14001c84c:	lea    rdx,[rax+rax*2]
   14001c850:	shl    rdx,0x2
   14001c854:	call   QWORD PTR [r8+0x8]
   14001c858:	mov    QWORD PTR [rbx+0x8],rax
   14001c85c:	mov    rax,QWORD PTR [rbx+0x8]
   14001c860:	mov    QWORD PTR [rbx+0x20],rax
   14001c864:	mov    rax,rbx
   14001c867:	mov    DWORD PTR [rbx+0x18],0xffff
   14001c86e:	mov    DWORD PTR [rbx+0x1c],0xffffffff
   14001c875:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c87a:	add    rsp,0x20
   14001c87e:	pop    rdi
   14001c87f:	ret    
   14001c880:	mov    QWORD PTR [rsp+0x8],rbx
   14001c885:	push   rdi
   14001c886:	sub    rsp,0x20
   14001c88a:	movzx  ebx,r9b
   14001c88e:	mov    rdi,rcx
   14001c891:	call   0x14001c810
   14001c896:	mov    BYTE PTR [rdi+0x28],bl
   14001c899:	xor    eax,eax
   14001c89b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c8a0:	mov    DWORD PTR [rdi+0x38],eax
   14001c8a3:	mov    QWORD PTR [rdi+0x40],rax
   14001c8a7:	mov    DWORD PTR [rdi+0x48],eax
   14001c8aa:	mov    rax,rdi
   14001c8ad:	mov    DWORD PTR [rdi+0x4c],0x8
   14001c8b4:	add    rsp,0x20
   14001c8b8:	pop    rdi
   14001c8b9:	ret    
   14001c8ba:	int3   
   14001c8bb:	int3   
   14001c8bc:	int3   
   14001c8bd:	int3   
   14001c8be:	int3   
   14001c8bf:	int3   
   14001c8c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001c8c5:	mov    QWORD PTR [rsp+0x10],rsi
   14001c8ca:	push   rdi
   14001c8cb:	sub    rsp,0x20
   14001c8cf:	mov    rbx,rcx
   14001c8d2:	call   0x14001d730
   14001c8d7:	mov    esi,0xffff
   14001c8dc:	xor    edi,edi
   14001c8de:	mov    WORD PTR [rbx+0x1c],si
   14001c8e2:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001c8e9:	jne    0x14001c90b
   14001c8eb:	mov    rdx,QWORD PTR [rbx+0x8]
   14001c8ef:	test   rdx,rdx
   14001c8f2:	je     0x14001c908
   14001c8f4:	mov    rax,QWORD PTR [rip+0x15a95]        # 0x140032390
   14001c8fb:	mov    rcx,QWORD PTR [rax]
   14001c8fe:	mov    rax,QWORD PTR [rcx]
   14001c901:	call   QWORD PTR [rax+0x28]
   14001c904:	mov    QWORD PTR [rbx+0x8],rdi
   14001c908:	mov    DWORD PTR [rbx+0x10],edi
   14001c90b:	mov    WORD PTR [rbx+0x1e],si
   14001c90f:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001c916:	jne    0x14001c938
   14001c918:	mov    rdx,QWORD PTR [rbx+0x8]
   14001c91c:	test   rdx,rdx
   14001c91f:	je     0x14001c935
   14001c921:	mov    rax,QWORD PTR [rip+0x15a68]        # 0x140032390
   14001c928:	mov    rcx,QWORD PTR [rax]
   14001c92b:	mov    rax,QWORD PTR [rcx]
   14001c92e:	call   QWORD PTR [rax+0x28]
   14001c931:	mov    QWORD PTR [rbx+0x8],rdi
   14001c935:	mov    DWORD PTR [rbx+0x10],edi
   14001c938:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c93d:	mov    rsi,QWORD PTR [rsp+0x38]
   14001c942:	add    rsp,0x20
   14001c946:	pop    rdi
   14001c947:	ret    
   14001c948:	int3   
   14001c949:	int3   
   14001c94a:	int3   
   14001c94b:	int3   
   14001c94c:	int3   
   14001c94d:	int3   
   14001c94e:	int3   
   14001c94f:	int3   
   14001c950:	rex push rbx
   14001c952:	sub    rsp,0x20
   14001c956:	mov    rbx,rcx
   14001c959:	call   0x14001d800
   14001c95e:	lea    rcx,[rbx+0x38]
   14001c962:	call   0x1400181a0
   14001c967:	mov    rcx,rbx
   14001c96a:	add    rsp,0x20
   14001c96e:	pop    rbx
   14001c96f:	jmp    0x14001c8c0
   14001c974:	int3   
   14001c975:	int3   
   14001c976:	int3   
   14001c977:	int3   
   14001c978:	int3   
   14001c979:	int3   
   14001c97a:	int3   
   14001c97b:	int3   
   14001c97c:	int3   
   14001c97d:	int3   
   14001c97e:	int3   
   14001c97f:	int3   
   14001c980:	rex push rsi
   14001c982:	push   r12
   14001c984:	push   r15
   14001c986:	sub    rsp,0x60
   14001c98a:	mov    r15,r8
   14001c98d:	mov    r12,rdx
   14001c990:	mov    rsi,rcx
   14001c993:	test   r8,r8
   14001c996:	jne    0x14001c9af
   14001c998:	mov    edx,0xffff
   14001c99d:	mov    rax,r12
   14001c9a0:	mov    WORD PTR [r12],dx
   14001c9a5:	add    rsp,0x60
   14001c9a9:	pop    r15
   14001c9ab:	pop    r12
   14001c9ad:	pop    rsi
   14001c9ae:	ret    
   14001c9af:	cmp    BYTE PTR [rcx+0x28],0x0
   14001c9b3:	mov    QWORD PTR [rcx+0x30],r15
   14001c9b7:	mov    rcx,r15
   14001c9ba:	mov    QWORD PTR [rsp+0x80],rbx
   14001c9c2:	je     0x14001c9d0
   14001c9c4:	mov    edx,0x3501a674
   14001c9c9:	call   0x140022790
   14001c9ce:	jmp    0x14001c9d5
   14001c9d0:	call   0x1400226d0
   14001c9d5:	lea    rdx,[rsp+0x90]
   14001c9dd:	mov    WORD PTR [rsi+0x2a],ax
   14001c9e1:	mov    rcx,rsi
   14001c9e4:	mov    DWORD PTR [rsp+0x90],0xffffffff
   14001c9ef:	mov    ebx,0xffff
   14001c9f4:	call   0x14001cc20
   14001c9f9:	cmp    ax,bx
   14001c9fc:	je     0x14001ca08
   14001c9fe:	mov    WORD PTR [r12],ax
   14001ca03:	jmp    0x14001cc0b
   14001ca08:	mov    QWORD PTR [rsp+0x58],rbp
   14001ca0d:	or     rbp,0xffffffffffffffff
   14001ca11:	mov    QWORD PTR [rsp+0x50],rdi
   14001ca16:	mov    QWORD PTR [rsp+0x48],r13
   14001ca1b:	mov    QWORD PTR [rsp+0x40],r14
   14001ca20:	inc    rbp
   14001ca23:	cmp    BYTE PTR [r15+rbp*1],0x0
   14001ca28:	jne    0x14001ca20
   14001ca2a:	mov    r8d,DWORD PTR [rsi+0x38]
   14001ca2e:	inc    ebp
   14001ca30:	xor    eax,eax
   14001ca32:	mov    r14d,eax
   14001ca35:	lea    r13d,[rbp+0x3]
   14001ca39:	and    r13d,0xfffffffe
   14001ca3d:	test   r8d,r8d
   14001ca40:	jle    0x14001ca71
   14001ca42:	mov    rdx,QWORD PTR [rsi+0x40]
   14001ca46:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001ca50:	mov    rax,QWORD PTR [rdx]
   14001ca53:	mov    ecx,DWORD PTR [rax]
   14001ca55:	sub    ecx,DWORD PTR [rax+0x4]
   14001ca58:	cmp    ecx,r13d
   14001ca5b:	jge    0x14001ca6b
   14001ca5d:	inc    r14d
   14001ca60:	add    rdx,0x8
   14001ca64:	cmp    r14d,r8d
   14001ca67:	jl     0x14001ca50
   14001ca69:	jmp    0x14001ca71
   14001ca6b:	cmp    r14d,0xffffffff
   14001ca6f:	jne    0x14001cacf
   14001ca71:	movsxd rax,r13d
   14001ca74:	mov    ebx,0x800
   14001ca79:	add    rax,0xc
   14001ca7d:	cmp    rax,rbx
   14001ca80:	jbe    0x14001ca86
   14001ca82:	lea    ebx,[r13+0xc]
   14001ca86:	mov    rax,QWORD PTR [rip+0x15903]        # 0x140032390
   14001ca8d:	movsxd rdx,ebx
   14001ca90:	mov    rcx,QWORD PTR [rax]
   14001ca93:	mov    rax,QWORD PTR [rcx]
   14001ca96:	call   QWORD PTR [rax+0x8]
   14001ca99:	mov    rdi,rax
   14001ca9c:	lea    ecx,[rbx-0xc]
   14001ca9f:	mov    DWORD PTR [rax],ecx
   14001caa1:	xor    eax,eax
   14001caa3:	mov    DWORD PTR [rdi+0x4],eax
   14001caa6:	movsxd r14,DWORD PTR [rsi+0x38]
   14001caaa:	cmp    r14d,DWORD PTR [rsi+0x48]
   14001caae:	jne    0x14001cabc
   14001cab0:	lea    rcx,[rsi+0x40]
   14001cab4:	lea    edx,[rax+0x1]
   14001cab7:	call   0x140013420
   14001cabc:	mov    rax,QWORD PTR [rsi+0x40]
   14001cac0:	inc    DWORD PTR [rsi+0x38]
   14001cac3:	lea    r8,[rax+r14*8]
   14001cac7:	test   r8,r8
   14001caca:	je     0x14001cacf
   14001cacc:	mov    QWORD PTR [r8],rdi
   14001cacf:	cmp    BYTE PTR [rsi+0x28],0x0
   14001cad3:	mov    rcx,r15
   14001cad6:	je     0x14001cae6
   14001cad8:	mov    edx,0x3501a674
   14001cadd:	call   0x140022790
   14001cae2:	mov    edx,eax
   14001cae4:	jmp    0x14001caee
   14001cae6:	call   0x1400226d0
   14001caeb:	movzx  edx,ax
   14001caee:	mov    rax,QWORD PTR [rsi+0x40]
   14001caf2:	movsxd rcx,r14d
   14001caf5:	movsxd r8,ebp
   14001caf8:	mov    rbx,QWORD PTR [rax+rcx*8]
   14001cafc:	movsxd rax,DWORD PTR [rbx+0x4]
   14001cb00:	movzx  edi,WORD PTR [rbx+0x4]
   14001cb04:	lea    rcx,[rax+0xa]
   14001cb08:	mov    WORD PTR [rax+rbx*1+0x8],dx
   14001cb0d:	add    rcx,rbx
   14001cb10:	mov    rdx,r15
   14001cb13:	call   0x140026f70
   14001cb18:	add    DWORD PTR [rbx+0x4],r13d
   14001cb1c:	lea    rax,[rsp+0x98]
   14001cb24:	mov    QWORD PTR [rsp+0x28],rax
   14001cb29:	lea    r9,[rsp+0x30]
   14001cb2e:	lea    rax,[rsp+0x90]
   14001cb36:	mov    WORD PTR [rsp+0x34],r14w
   14001cb3c:	xor    r8d,r8d
   14001cb3f:	mov    QWORD PTR [rsp+0x20],rax
   14001cb44:	lea    rdx,[rsp+0x34]
   14001cb49:	mov    WORD PTR [rsp+0x36],di
   14001cb4e:	mov    rcx,rsi
   14001cb51:	call   0x14001ceb0
   14001cb56:	cmp    BYTE PTR [rsp+0x98],0x0
   14001cb5e:	mov    rcx,rsi
   14001cb61:	mov    r14,QWORD PTR [rsp+0x40]
   14001cb66:	mov    r13,QWORD PTR [rsp+0x48]
   14001cb6b:	mov    rdi,QWORD PTR [rsp+0x50]
   14001cb70:	mov    rbp,QWORD PTR [rsp+0x58]
   14001cb75:	je     0x14001cb94
   14001cb77:	movzx  r8d,BYTE PTR [rsp+0x90]
   14001cb80:	lea    r9,[rsp+0x34]
   14001cb85:	movzx  edx,WORD PTR [rsp+0x30]
   14001cb8a:	call   0x14001d240
   14001cb8f:	movzx  ebx,ax
   14001cb92:	jmp    0x14001cc06
   14001cb94:	lea    rdx,[rsp+0x34]
   14001cb99:	call   0x14001d560
   14001cb9e:	movzx  r8d,WORD PTR [rsp+0x30]
   14001cba4:	xor    r9d,r9d
   14001cba7:	movzx  ebx,ax
   14001cbaa:	mov    edx,0xffff
   14001cbaf:	mov    rax,QWORD PTR [rsi+0x8]
   14001cbb3:	lea    rcx,[rbx+rbx*2]
   14001cbb7:	mov    WORD PTR [rax+rcx*4+0x4],r8w
   14001cbbd:	mov    DWORD PTR [rax+rcx*4],0xffffffff
   14001cbc4:	mov    WORD PTR [rax+rcx*4+0x6],r9w
   14001cbca:	cmp    r8w,dx
   14001cbce:	je     0x14001cbf3
   14001cbd0:	movzx  eax,r8w
   14001cbd4:	lea    rcx,[rax+rax*2]
   14001cbd8:	mov    rax,QWORD PTR [rsi+0x8]
   14001cbdc:	cmp    BYTE PTR [rsp+0x90],r9b
   14001cbe4:	je     0x14001cbec
   14001cbe6:	mov    WORD PTR [rax+rcx*4],bx
   14001cbea:	jmp    0x14001cbf7
   14001cbec:	mov    WORD PTR [rax+rcx*4+0x2],bx
   14001cbf1:	jmp    0x14001cbf7
   14001cbf3:	mov    WORD PTR [rsi+0x18],bx
   14001cbf7:	movzx  edx,bx
   14001cbfa:	mov    rcx,rsi
   14001cbfd:	call   0x14001d2e0
   14001cc02:	inc    WORD PTR [rsi+0x1a]
   14001cc06:	mov    WORD PTR [r12],bx
   14001cc0b:	mov    rbx,QWORD PTR [rsp+0x80]
   14001cc13:	mov    rax,r12
   14001cc16:	add    rsp,0x60
   14001cc1a:	pop    r15
   14001cc1c:	pop    r12
   14001cc1e:	pop    rsi
   14001cc1f:	ret    
   14001cc20:	mov    QWORD PTR [rsp+0x10],rbx
   14001cc25:	mov    QWORD PTR [rsp+0x18],rbp
   14001cc2a:	mov    QWORD PTR [rsp+0x20],rsi
   14001cc2f:	push   rdi
   14001cc30:	sub    rsp,0x20
   14001cc34:	movzx  edi,WORD PTR [rcx+0x18]
   14001cc38:	mov    ebp,0xffff
   14001cc3d:	mov    rsi,rdx
   14001cc40:	mov    rbx,rcx
   14001cc43:	cmp    di,bp
   14001cc46:	je     0x14001ce21
   14001cc4c:	mov    QWORD PTR [rsp+0x30],r14
   14001cc51:	movzx  eax,di
   14001cc54:	lea    r8,[rax+rax*2]
   14001cc58:	mov    rax,QWORD PTR [rbx+0x8]
   14001cc5c:	lea    r14,[r8*4+0x0]
   14001cc64:	lea    r10,[rax+r14*1]
   14001cc68:	movzx  eax,WORD PTR [rsi]
   14001cc6b:	cmp    ax,bp
   14001cc6e:	jne    0x14001cc81
   14001cc70:	cmp    WORD PTR [rsi+0x2],bp
   14001cc74:	jne    0x14001cc81
   14001cc76:	mov    r8,QWORD PTR [rbx+0x30]
   14001cc7a:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001cc7f:	jmp    0x14001cc9d
   14001cc81:	movzx  r8d,WORD PTR [rsi+0x2]
   14001cc86:	movzx  edx,ax
   14001cc89:	mov    rax,QWORD PTR [rbx+0x40]
   14001cc8d:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cc91:	add    r8,rax
   14001cc94:	movzx  r9d,WORD PTR [r8+0x8]
   14001cc99:	add    r8,0xa
   14001cc9d:	movzx  eax,WORD PTR [r10+0x8]
   14001cca2:	cmp    ax,bp
   14001cca5:	jne    0x14001ccb8
   14001cca7:	cmp    WORD PTR [r10+0xa],bp
   14001ccac:	jne    0x14001ccb8
   14001ccae:	mov    rdx,QWORD PTR [rbx+0x30]
   14001ccb2:	movzx  eax,WORD PTR [rbx+0x2a]
   14001ccb6:	jmp    0x14001ccd5
   14001ccb8:	movzx  ecx,WORD PTR [r10+0xa]
   14001ccbd:	movzx  edx,ax
   14001ccc0:	mov    rax,QWORD PTR [rbx+0x40]
   14001ccc4:	mov    rax,QWORD PTR [rax+rdx*8]
   14001ccc8:	lea    rdx,[rax+rcx*1]
   14001cccc:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
   14001ccd1:	add    rdx,0xa
   14001ccd5:	cmp    r9w,ax
   14001ccd9:	jne    0x14001cd1b
   14001ccdb:	test   r8,r8
   14001ccde:	je     0x14001cd30
   14001cce0:	test   rdx,rdx
   14001cce3:	je     0x14001cd22
   14001cce5:	cmp    BYTE PTR [rbx+0x28],0x0
   14001cce9:	jne    0x14001cd0b
   14001cceb:	sub    rdx,r8
   14001ccee:	xchg   ax,ax
   14001ccf0:	movzx  ecx,BYTE PTR [r8]
   14001ccf4:	movzx  eax,BYTE PTR [r8+rdx*1]
   14001ccf9:	sub    ecx,eax
   14001ccfb:	jne    0x14001cd04
   14001ccfd:	inc    r8
   14001cd00:	test   eax,eax
   14001cd02:	jne    0x14001ccf0
   14001cd04:	test   ecx,ecx
   14001cd06:	sets   al
   14001cd09:	jmp    0x14001cd1e
   14001cd0b:	mov    rcx,r8
   14001cd0e:	call   QWORD PTR [rip+0x1584c]        # 0x140032560
   14001cd14:	test   eax,eax
   14001cd16:	sets   al
   14001cd19:	jmp    0x14001cd1e
   14001cd1b:	setb   al
   14001cd1e:	test   al,al
   14001cd20:	je     0x14001cd30
   14001cd22:	mov    rax,QWORD PTR [rbx+0x8]
   14001cd26:	movzx  edi,WORD PTR [r14+rax*1]
   14001cd2b:	jmp    0x14001cdfb
   14001cd30:	mov    rax,QWORD PTR [rbx+0x8]
   14001cd34:	lea    rcx,[rax+r14*1]
   14001cd38:	movzx  eax,WORD PTR [rax+r14*1+0x8]
   14001cd3e:	cmp    ax,bp
   14001cd41:	jne    0x14001cd54
   14001cd43:	cmp    WORD PTR [rcx+0xa],bp
   14001cd47:	jne    0x14001cd54
   14001cd49:	mov    rcx,QWORD PTR [rbx+0x30]
   14001cd4d:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001cd52:	jmp    0x14001cd6f
   14001cd54:	movzx  ecx,WORD PTR [rcx+0xa]
   14001cd58:	movzx  edx,ax
   14001cd5b:	mov    rax,QWORD PTR [rbx+0x40]
   14001cd5f:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cd63:	add    rcx,rax
   14001cd66:	movzx  r9d,WORD PTR [rcx+0x8]
   14001cd6b:	add    rcx,0xa
   14001cd6f:	movzx  eax,WORD PTR [rsi]
   14001cd72:	cmp    ax,bp
   14001cd75:	jne    0x14001cd87
   14001cd77:	cmp    WORD PTR [rsi+0x2],bp
   14001cd7b:	jne    0x14001cd87
   14001cd7d:	mov    r8,QWORD PTR [rbx+0x30]
   14001cd81:	movzx  eax,WORD PTR [rbx+0x2a]
   14001cd85:	jmp    0x14001cda4
   14001cd87:	movzx  edx,WORD PTR [rsi+0x2]
   14001cd8b:	movzx  r8d,ax
   14001cd8f:	mov    rax,QWORD PTR [rbx+0x40]
   14001cd93:	mov    rax,QWORD PTR [rax+r8*8]
   14001cd97:	lea    r8,[rax+rdx*1]
   14001cd9b:	movzx  eax,WORD PTR [rax+rdx*1+0x8]
   14001cda0:	add    r8,0xa
   14001cda4:	cmp    r9w,ax
   14001cda8:	jne    0x14001cdea
   14001cdaa:	test   rcx,rcx
   14001cdad:	je     0x14001ce04
   14001cdaf:	test   r8,r8
   14001cdb2:	je     0x14001cdf1
   14001cdb4:	cmp    BYTE PTR [rbx+0x28],0x0
   14001cdb8:	jne    0x14001cdda
   14001cdba:	sub    r8,rcx
   14001cdbd:	nop    DWORD PTR [rax]
   14001cdc0:	movzx  edx,BYTE PTR [rcx]
   14001cdc3:	movzx  eax,BYTE PTR [rcx+r8*1]
   14001cdc8:	sub    edx,eax
   14001cdca:	jne    0x14001cdd3
   14001cdcc:	inc    rcx
   14001cdcf:	test   eax,eax
   14001cdd1:	jne    0x14001cdc0
   14001cdd3:	test   edx,edx
   14001cdd5:	sets   al
   14001cdd8:	jmp    0x14001cded
   14001cdda:	mov    rdx,r8
   14001cddd:	call   QWORD PTR [rip+0x1577d]        # 0x140032560
   14001cde3:	test   eax,eax
   14001cde5:	sets   al
   14001cde8:	jmp    0x14001cded
   14001cdea:	setb   al
   14001cded:	test   al,al
   14001cdef:	je     0x14001ce04
   14001cdf1:	mov    rax,QWORD PTR [rbx+0x8]
   14001cdf5:	movzx  edi,WORD PTR [rax+r14*1+0x2]
   14001cdfb:	cmp    di,bp
   14001cdfe:	jne    0x14001cc51
   14001ce04:	mov    r14,QWORD PTR [rsp+0x30]
   14001ce09:	movzx  eax,di
   14001ce0c:	mov    rbx,QWORD PTR [rsp+0x38]
   14001ce11:	mov    rbp,QWORD PTR [rsp+0x40]
   14001ce16:	mov    rsi,QWORD PTR [rsp+0x48]
   14001ce1b:	add    rsp,0x20
   14001ce1f:	pop    rdi
   14001ce20:	ret    
   14001ce21:	movzx  eax,di
   14001ce24:	jmp    0x14001ce0c
   14001ce26:	int3   
   14001ce27:	int3   
   14001ce28:	int3   
   14001ce29:	int3   
   14001ce2a:	int3   
   14001ce2b:	int3   
   14001ce2c:	int3   
   14001ce2d:	int3   
   14001ce2e:	int3   
   14001ce2f:	int3   
   14001ce30:	mov    QWORD PTR [rsp+0x8],rbx
   14001ce35:	push   rdi
   14001ce36:	sub    rsp,0x20
   14001ce3a:	mov    rdi,rdx
   14001ce3d:	mov    rbx,rcx
   14001ce40:	test   r8,r8
   14001ce43:	jne    0x14001ce5b
   14001ce45:	mov    eax,0xffff
   14001ce4a:	mov    WORD PTR [rdx],ax
   14001ce4d:	mov    rax,rdx
   14001ce50:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce55:	add    rsp,0x20
   14001ce59:	pop    rdi
   14001ce5a:	ret    
   14001ce5b:	cmp    BYTE PTR [rcx+0x28],0x0
   14001ce5f:	mov    QWORD PTR [rcx+0x30],r8
   14001ce63:	mov    rcx,r8
   14001ce66:	je     0x14001ce74
   14001ce68:	mov    edx,0x3501a674
   14001ce6d:	call   0x140022790
   14001ce72:	jmp    0x14001ce79
   14001ce74:	call   0x1400226d0
   14001ce79:	lea    rdx,[rsp+0x40]
   14001ce7e:	mov    WORD PTR [rbx+0x2a],ax
   14001ce82:	mov    rcx,rbx
   14001ce85:	mov    DWORD PTR [rsp+0x40],0xffffffff
   14001ce8d:	call   0x14001cc20
   14001ce92:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ce97:	mov    WORD PTR [rdi],ax
   14001ce9a:	mov    rax,rdi
   14001ce9d:	add    rsp,0x20
   14001cea1:	pop    rdi
   14001cea2:	ret    
   14001cea3:	int3   
   14001cea4:	int3   
   14001cea5:	int3   
   14001cea6:	int3   
   14001cea7:	int3   
   14001cea8:	int3   
   14001cea9:	int3   
   14001ceaa:	int3   
   14001ceab:	int3   
   14001ceac:	int3   
   14001cead:	int3   
   14001ceae:	int3   
   14001ceaf:	int3   
   14001ceb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001ceb5:	mov    QWORD PTR [rsp+0x18],rbp
   14001ceba:	push   rdi
   14001cebb:	push   r12
   14001cebd:	push   r13
   14001cebf:	push   r14
   14001cec1:	push   r15
   14001cec3:	sub    rsp,0x20
   14001cec7:	movzx  eax,WORD PTR [rcx+0x18]
   14001cecb:	mov    r13d,0xffff
   14001ced1:	mov    r14,QWORD PTR [rsp+0x70]
   14001ced6:	mov    r15,r9
   14001ced9:	mov    r12,QWORD PTR [rsp+0x78]
   14001cede:	movzx  ebp,r8b
   14001cee2:	mov    WORD PTR [r9],r13w
   14001cee6:	mov    rdi,rdx
   14001cee9:	mov    rbx,rcx
   14001ceec:	mov    BYTE PTR [r14],0x0
   14001cef0:	mov    BYTE PTR [r12],0x0
   14001cef5:	cmp    ax,r13w
   14001cef9:	je     0x14001d0f8
   14001ceff:	mov    QWORD PTR [rsp+0x50],rsi
   14001cf04:	nop    DWORD PTR [rax+0x0]
   14001cf08:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cf10:	mov    WORD PTR [r15],ax
   14001cf14:	movzx  eax,ax
   14001cf17:	lea    rcx,[rax+rax*2]
   14001cf1b:	mov    rax,QWORD PTR [rbx+0x8]
   14001cf1f:	lea    rsi,[rcx*4+0x0]
   14001cf27:	lea    r10,[rsi+rax*1]
   14001cf2b:	movzx  eax,WORD PTR [rdi]
   14001cf2e:	cmp    ax,r13w
   14001cf32:	jne    0x14001cf46
   14001cf34:	cmp    WORD PTR [rdi+0x2],r13w
   14001cf39:	jne    0x14001cf46
   14001cf3b:	mov    r8,QWORD PTR [rbx+0x30]
   14001cf3f:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001cf44:	jmp    0x14001cf62
   14001cf46:	movzx  r8d,WORD PTR [rdi+0x2]
   14001cf4b:	movzx  edx,ax
   14001cf4e:	mov    rax,QWORD PTR [rbx+0x40]
   14001cf52:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cf56:	add    r8,rax
   14001cf59:	movzx  r9d,WORD PTR [r8+0x8]
   14001cf5e:	add    r8,0xa
   14001cf62:	movzx  eax,WORD PTR [r10+0x8]
   14001cf67:	cmp    ax,r13w
   14001cf6b:	jne    0x14001cf7e
   14001cf6d:	cmp    WORD PTR [r10+0xa],r13w
   14001cf72:	jne    0x14001cf7e
   14001cf74:	mov    rdx,QWORD PTR [rbx+0x30]
   14001cf78:	movzx  eax,WORD PTR [rbx+0x2a]
   14001cf7c:	jmp    0x14001cf9b
   14001cf7e:	movzx  ecx,WORD PTR [r10+0xa]
   14001cf83:	movzx  edx,ax
   14001cf86:	mov    rax,QWORD PTR [rbx+0x40]
   14001cf8a:	mov    rax,QWORD PTR [rax+rdx*8]
   14001cf8e:	lea    rdx,[rax+rcx*1]
   14001cf92:	movzx  eax,WORD PTR [rax+rcx*1+0x8]
   14001cf97:	add    rdx,0xa
   14001cf9b:	cmp    r9w,ax
   14001cf9f:	jne    0x14001cfeb
   14001cfa1:	test   r8,r8
   14001cfa4:	je     0x14001d003
   14001cfa6:	test   rdx,rdx
   14001cfa9:	je     0x14001cff2
   14001cfab:	cmp    BYTE PTR [rbx+0x28],0x0
   14001cfaf:	jne    0x14001cfdb
   14001cfb1:	sub    rdx,r8
   14001cfb4:	nop    DWORD PTR [rax+0x0]
   14001cfb8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001cfc0:	movzx  ecx,BYTE PTR [r8]
   14001cfc4:	movzx  eax,BYTE PTR [r8+rdx*1]
   14001cfc9:	sub    ecx,eax
   14001cfcb:	jne    0x14001cfd4
   14001cfcd:	inc    r8
   14001cfd0:	test   eax,eax
   14001cfd2:	jne    0x14001cfc0
   14001cfd4:	test   ecx,ecx
   14001cfd6:	sets   al
   14001cfd9:	jmp    0x14001cfee
   14001cfdb:	mov    rcx,r8
   14001cfde:	call   QWORD PTR [rip+0x1557c]        # 0x140032560
   14001cfe4:	test   eax,eax
   14001cfe6:	sets   al
   14001cfe9:	jmp    0x14001cfee
   14001cfeb:	setb   al
   14001cfee:	test   al,al
   14001cff0:	je     0x14001d003
   14001cff2:	mov    BYTE PTR [r14],0x1
   14001cff6:	mov    rax,QWORD PTR [rbx+0x8]
   14001cffa:	movzx  eax,WORD PTR [rsi+rax*1]
   14001cffe:	jmp    0x14001d0de
   14001d003:	test   bpl,bpl
   14001d006:	je     0x14001d0d1
   14001d00c:	mov    rax,QWORD PTR [rbx+0x8]
   14001d010:	lea    rcx,[rsi+rax*1]
   14001d014:	movzx  eax,WORD PTR [rsi+rax*1+0x8]
   14001d019:	cmp    ax,r13w
   14001d01d:	jne    0x14001d031
   14001d01f:	cmp    WORD PTR [rcx+0xa],r13w
   14001d024:	jne    0x14001d031
   14001d026:	mov    rcx,QWORD PTR [rbx+0x30]
   14001d02a:	movzx  r9d,WORD PTR [rbx+0x2a]
   14001d02f:	jmp    0x14001d04c
   14001d031:	movzx  ecx,WORD PTR [rcx+0xa]
   14001d035:	movzx  edx,ax
   14001d038:	mov    rax,QWORD PTR [rbx+0x40]
   14001d03c:	mov    rax,QWORD PTR [rax+rdx*8]
   14001d040:	add    rcx,rax
   14001d043:	movzx  r9d,WORD PTR [rcx+0x8]
   14001d048:	add    rcx,0xa
   14001d04c:	movzx  eax,WORD PTR [rdi]
   14001d04f:	cmp    ax,r13w
   14001d053:	jne    0x14001d066
   14001d055:	cmp    WORD PTR [rdi+0x2],r13w
   14001d05a:	jne    0x14001d066
   14001d05c:	mov    r8,QWORD PTR [rbx+0x30]
   14001d060:	movzx  eax,WORD PTR [rbx+0x2a]
   14001d064:	jmp    0x14001d083
   14001d066:	movzx  edx,WORD PTR [rdi+0x2]
   14001d06a:	movzx  r8d,ax
   14001d06e:	mov    rax,QWORD PTR [rbx+0x40]
   14001d072:	mov    rax,QWORD PTR [rax+r8*8]
   14001d076:	lea    r8,[rax+rdx*1]
   14001d07a:	movzx  eax,WORD PTR [rax+rdx*1+0x8]
   14001d07f:	add    r8,0xa
   14001d083:	cmp    r9w,ax
   14001d087:	jne    0x14001d0ca
   14001d089:	test   rcx,rcx
   14001d08c:	je     0x14001d0ea
   14001d08e:	test   r8,r8
   14001d091:	je     0x14001d0d1
   14001d093:	cmp    BYTE PTR [rbx+0x28],0x0
   14001d097:	jne    0x14001d0ba
   14001d099:	sub    r8,rcx
   14001d09c:	nop    DWORD PTR [rax+0x0]
   14001d0a0:	movzx  edx,BYTE PTR [rcx]
   14001d0a3:	movzx  eax,BYTE PTR [rcx+r8*1]
   14001d0a8:	sub    edx,eax
   14001d0aa:	jne    0x14001d0b3
   14001d0ac:	inc    rcx
   14001d0af:	test   eax,eax
   14001d0b1:	jne    0x14001d0a0
   14001d0b3:	test   edx,edx
   14001d0b5:	sets   al
   14001d0b8:	jmp    0x14001d0cd
   14001d0ba:	mov    rdx,r8
   14001d0bd:	call   QWORD PTR [rip+0x1549d]        # 0x140032560
   14001d0c3:	test   eax,eax
   14001d0c5:	sets   al
   14001d0c8:	jmp    0x14001d0cd
   14001d0ca:	setb   al
   14001d0cd:	test   al,al
   14001d0cf:	je     0x14001d0ea
   14001d0d1:	mov    BYTE PTR [r14],0x0
   14001d0d5:	mov    rax,QWORD PTR [rbx+0x8]
   14001d0d9:	movzx  eax,WORD PTR [rsi+rax*1+0x2]
   14001d0de:	cmp    ax,r13w
   14001d0e2:	jne    0x14001cf10
   14001d0e8:	jmp    0x14001d0f3
   14001d0ea:	mov    BYTE PTR [r14],0x0
   14001d0ee:	mov    BYTE PTR [r12],0x1
   14001d0f3:	mov    rsi,QWORD PTR [rsp+0x50]
   14001d0f8:	mov    rbx,QWORD PTR [rsp+0x58]
   14001d0fd:	mov    rbp,QWORD PTR [rsp+0x60]
   14001d102:	add    rsp,0x20
   14001d106:	pop    r15
   14001d108:	pop    r14
   14001d10a:	pop    r13
   14001d10c:	pop    r12
   14001d10e:	pop    rdi
   14001d10f:	ret    
   14001d110:	rex push rdi
   14001d112:	sub    rsp,0x20
   14001d116:	mov    eax,edx
   14001d118:	mov    rdi,rcx
   14001d11b:	mov    edx,DWORD PTR [rcx+0xc]
   14001d11e:	bt     edx,0x1e
   14001d122:	jb     0x14001d22f
   14001d128:	mov    ecx,DWORD PTR [rcx+0x8]
   14001d12b:	and    edx,0x3fffffff
   14001d131:	mov    QWORD PTR [rsp+0x30],rbx
   14001d136:	mov    r9d,0xc
   14001d13c:	mov    QWORD PTR [rsp+0x38],rsi
   14001d141:	lea    esi,[rcx+rax*1]
   14001d144:	mov    r8d,esi
   14001d147:	call   0x14001aa30
   14001d14c:	movzx  ecx,ax
   14001d14f:	mov    ebx,eax
   14001d151:	cmp    ecx,esi
   14001d153:	jge    0x14001d182
   14001d155:	test   bx,bx
   14001d158:	jne    0x14001d166
   14001d15a:	cmp    esi,0xffff
   14001d160:	jg     0x14001d166
   14001d162:	dec    ebx
   14001d164:	jmp    0x14001d182
   14001d166:	movzx  eax,si
   14001d169:	cmp    eax,esi
   14001d16b:	jne    0x14001d225
   14001d171:	lea    eax,[rbx+rsi*1]
   14001d174:	cdq    
   14001d175:	sub    eax,edx
   14001d177:	sar    eax,1
   14001d179:	mov    ebx,eax
   14001d17b:	movzx  eax,ax
   14001d17e:	cmp    eax,esi
   14001d180:	jl     0x14001d171
   14001d182:	test   DWORD PTR [rdi+0xc],0xc0000000
   14001d189:	mov    rax,QWORD PTR [rip+0x15200]        # 0x140032390
   14001d190:	mov    rcx,QWORD PTR [rax]
   14001d193:	movsxd rax,ebx
   14001d196:	jne    0x14001d1ea
   14001d198:	mov    rdx,QWORD PTR [rdi]
   14001d19b:	test   rdx,rdx
   14001d19e:	je     0x14001d1c5
   14001d1a0:	mov    r9,QWORD PTR [rcx]
   14001d1a3:	lea    r8,[rax+rax*2]
   14001d1a7:	shl    r8,0x2
   14001d1ab:	call   QWORD PTR [r9+0x18]
   14001d1af:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d1b4:	mov    DWORD PTR [rdi+0x8],ebx
   14001d1b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d1bc:	mov    QWORD PTR [rdi],rax
   14001d1bf:	add    rsp,0x20
   14001d1c3:	pop    rdi
   14001d1c4:	ret    
   14001d1c5:	mov    r8,QWORD PTR [rcx]
   14001d1c8:	lea    rdx,[rax+rax*2]
   14001d1cc:	shl    rdx,0x2
   14001d1d0:	call   QWORD PTR [r8+0x8]
   14001d1d4:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d1d9:	mov    DWORD PTR [rdi+0x8],ebx
   14001d1dc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d1e1:	mov    QWORD PTR [rdi],rax
   14001d1e4:	add    rsp,0x20
   14001d1e8:	pop    rdi
   14001d1e9:	ret    
   14001d1ea:	mov    r8,QWORD PTR [rcx]
   14001d1ed:	lea    rdx,[rax+rax*2]
   14001d1f1:	mov    rsi,QWORD PTR [rdi]
   14001d1f4:	shl    rdx,0x2
   14001d1f8:	call   QWORD PTR [r8+0x8]
   14001d1fc:	mov    QWORD PTR [rdi],rax
   14001d1ff:	test   rsi,rsi
   14001d202:	je     0x14001d21b
   14001d204:	movsxd rcx,DWORD PTR [rdi+0x8]
   14001d208:	mov    rdx,rsi
   14001d20b:	lea    r8,[rcx+rcx*2]
   14001d20f:	mov    rcx,rax
   14001d212:	shl    r8,0x2
   14001d216:	call   0x140026f70
   14001d21b:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14001d222:	mov    DWORD PTR [rdi+0x8],ebx
   14001d225:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d22a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001d22f:	add    rsp,0x20
   14001d233:	pop    rdi
   14001d234:	ret    
   14001d235:	int3   
   14001d236:	int3   
   14001d237:	int3   
   14001d238:	int3   
   14001d239:	int3   
   14001d23a:	int3   
   14001d23b:	int3   
   14001d23c:	int3   
   14001d23d:	int3   
   14001d23e:	int3   
   14001d23f:	int3   
   14001d240:	mov    QWORD PTR [rsp+0x8],rbx
   14001d245:	mov    QWORD PTR [rsp+0x10],rbp
   14001d24a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d24f:	push   rdi
   14001d250:	sub    rsp,0x20
   14001d254:	movzx  esi,dx
   14001d257:	movzx  ebp,r8b
   14001d25b:	mov    rdx,r9
   14001d25e:	mov    rbx,rcx
   14001d261:	call   0x14001d560
   14001d266:	mov    r9,QWORD PTR [rbx+0x8]
   14001d26a:	mov    ecx,0xffff
   14001d26f:	movzx  edi,ax
   14001d272:	xor    eax,eax
   14001d274:	lea    r10,[rdi+rdi*2]
   14001d278:	mov    WORD PTR [r9+r10*4+0x4],si
   14001d27e:	mov    DWORD PTR [r9+r10*4],0xffffffff
   14001d286:	mov    WORD PTR [r9+r10*4+0x6],ax
   14001d28c:	cmp    si,cx
   14001d28f:	je     0x14001d2ae
   14001d291:	movzx  eax,si
   14001d294:	lea    rcx,[rax+rax*2]
   14001d298:	mov    rax,QWORD PTR [rbx+0x8]
   14001d29c:	test   bpl,bpl
   14001d29f:	je     0x14001d2a7
   14001d2a1:	mov    WORD PTR [rax+rcx*4],di
   14001d2a5:	jmp    0x14001d2b2
   14001d2a7:	mov    WORD PTR [rax+rcx*4+0x2],di
   14001d2ac:	jmp    0x14001d2b2
   14001d2ae:	mov    WORD PTR [rbx+0x18],di
   14001d2b2:	movzx  edx,di
   14001d2b5:	mov    rcx,rbx
   14001d2b8:	call   0x14001d2e0
   14001d2bd:	inc    WORD PTR [rbx+0x1a]
   14001d2c1:	movzx  eax,di
   14001d2c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d2c9:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d2ce:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d2d3:	add    rsp,0x20
   14001d2d7:	pop    rdi
   14001d2d8:	ret    
   14001d2d9:	int3   
   14001d2da:	int3   
   14001d2db:	int3   
   14001d2dc:	int3   
   14001d2dd:	int3   
   14001d2de:	int3   
   14001d2df:	int3   
   14001d2e0:	rex push rsi
   14001d2e2:	push   rdi
   14001d2e3:	push   r14
   14001d2e5:	sub    rsp,0x20
   14001d2e9:	movzx  esi,dx
   14001d2ec:	mov    rdi,rcx
   14001d2ef:	mov    r14d,0x1
   14001d2f5:	cmp    dx,WORD PTR [rcx+0x18]
   14001d2f9:	je     0x14001d538
   14001d2ff:	mov    QWORD PTR [rsp+0x48],rbp
   14001d304:	mov    ebp,0xffff
   14001d309:	mov    QWORD PTR [rsp+0x50],r15
   14001d30e:	xor    r15d,r15d
   14001d311:	mov    QWORD PTR [rsp+0x40],rbx
   14001d316:	cmp    si,bp
   14001d319:	je     0x14001d529
   14001d31f:	mov    r8,QWORD PTR [rdi+0x8]
   14001d323:	movzx  eax,si
   14001d326:	lea    rcx,[rax+rax*2]
   14001d32a:	movzx  ebx,WORD PTR [r8+rcx*4+0x4]
   14001d330:	cmp    bx,bp
   14001d333:	je     0x14001d529
   14001d339:	movzx  eax,bx
   14001d33c:	lea    rcx,[rax+rax*2]
   14001d340:	cmp    WORD PTR [r8+rcx*4+0x6],r15w
   14001d346:	jne    0x14001d529
   14001d34c:	cmp    bx,bp
   14001d34f:	je     0x14001d371
   14001d351:	movzx  eax,bx
   14001d354:	lea    rcx,[rax+rax*2]
   14001d358:	movzx  edx,WORD PTR [r8+rcx*4+0x4]
   14001d35e:	cmp    dx,bp
   14001d361:	je     0x14001d373
   14001d363:	movzx  eax,dx
   14001d366:	lea    rcx,[rax+rax*2]
   14001d36a:	movzx  eax,WORD PTR [r8+rcx*4]
   14001d36f:	jmp    0x14001d375
   14001d371:	mov    edx,ebp
   14001d373:	mov    eax,ebp
   14001d375:	cmp    ax,bx
   14001d378:	jne    0x14001d43f
   14001d37e:	cmp    dx,bp
   14001d381:	je     0x14001d3ba
   14001d383:	movzx  eax,dx
   14001d386:	lea    rcx,[rax+rax*2]
   14001d38a:	lea    r10,[rcx*4+0x0]
   14001d392:	movzx  eax,WORD PTR [r10+r8*1+0x2]
   14001d398:	cmp    ax,bp
   14001d39b:	je     0x14001d3ba
   14001d39d:	movzx  eax,ax
   14001d3a0:	lea    rcx,[rax+rax*2]
   14001d3a4:	lea    r9,[rcx*4+0x0]
   14001d3ac:	movzx  eax,WORD PTR [r9+r8*1+0x6]
   14001d3b2:	test   eax,eax
   14001d3b4:	je     0x14001d476
   14001d3ba:	cmp    bx,bp
   14001d3bd:	je     0x14001d3ce
   14001d3bf:	movzx  eax,bx
   14001d3c2:	lea    rcx,[rax+rax*2]
   14001d3c6:	movzx  eax,WORD PTR [r8+rcx*4+0x2]
   14001d3cc:	jmp    0x14001d3d0
   14001d3ce:	mov    eax,ebp
   14001d3d0:	cmp    ax,si
   14001d3d3:	jne    0x14001d410
   14001d3d5:	movzx  edx,bx
   14001d3d8:	mov    rcx,rdi
   14001d3db:	movzx  esi,bx
   14001d3de:	call   0x14001d8a0
   14001d3e3:	cmp    bx,bp
   14001d3e6:	je     0x14001d40b
   14001d3e8:	mov    rdx,QWORD PTR [rdi+0x8]
   14001d3ec:	movzx  eax,bx
   14001d3ef:	lea    rcx,[rax+rax*2]
   14001d3f3:	movzx  ebx,WORD PTR [rdx+rcx*4+0x4]
   14001d3f8:	cmp    bx,bp
   14001d3fb:	je     0x14001d40d
   14001d3fd:	movzx  eax,bx
   14001d400:	lea    rcx,[rax+rax*2]
   14001d404:	movzx  edx,WORD PTR [rdx+rcx*4+0x4]
   14001d409:	jmp    0x14001d410
   14001d40b:	mov    ebx,ebp
   14001d40d:	movzx  edx,bp
   14001d410:	movzx  eax,bx
   14001d413:	lea    rcx,[rax+rax*2]
   14001d417:	mov    rax,QWORD PTR [rdi+0x8]
   14001d41b:	mov    WORD PTR [rax+rcx*4+0x6],r14w
   14001d421:	movzx  eax,dx
   14001d424:	lea    rcx,[rax+rax*2]
   14001d428:	mov    rax,QWORD PTR [rdi+0x8]
   14001d42c:	mov    WORD PTR [rax+rcx*4+0x6],r15w
   14001d432:	mov    rcx,rdi
   14001d435:	call   0x14001da00
   14001d43a:	jmp    0x14001d51f
   14001d43f:	cmp    dx,bp
   14001d442:	je     0x14001d49f
   14001d444:	movzx  eax,dx
   14001d447:	lea    rcx,[rax+rax*2]
   14001d44b:	lea    r10,[rcx*4+0x0]
   14001d453:	movzx  eax,WORD PTR [r10+r8*1]
   14001d458:	cmp    ax,bp
   14001d45b:	je     0x14001d49f
   14001d45d:	movzx  eax,ax
   14001d460:	lea    rcx,[rax+rax*2]
   14001d464:	lea    r9,[rcx*4+0x0]
   14001d46c:	movzx  eax,WORD PTR [r9+r8*1+0x6]
   14001d472:	test   eax,eax
   14001d474:	jne    0x14001d49f
   14001d476:	movzx  eax,bx
   14001d479:	movzx  esi,dx
   14001d47c:	lea    rcx,[rax+rax*2]
   14001d480:	mov    WORD PTR [r8+rcx*4+0x6],r14w
   14001d486:	mov    rax,QWORD PTR [rdi+0x8]
   14001d48a:	mov    WORD PTR [rax+r9*1+0x6],r14w
   14001d490:	mov    rax,QWORD PTR [rdi+0x8]
   14001d494:	mov    WORD PTR [rax+r10*1+0x6],r15w
   14001d49a:	jmp    0x14001d51f
   14001d49f:	cmp    bx,bp
   14001d4a2:	je     0x14001d4b2
   14001d4a4:	movzx  eax,bx
   14001d4a7:	lea    rcx,[rax+rax*2]
   14001d4ab:	movzx  eax,WORD PTR [r8+rcx*4]
   14001d4b0:	jmp    0x14001d4b4
   14001d4b2:	mov    eax,ebp
   14001d4b4:	cmp    ax,si
   14001d4b7:	jne    0x14001d4f5
   14001d4b9:	movzx  edx,bx
   14001d4bc:	mov    rcx,rdi
   14001d4bf:	movzx  esi,bx
   14001d4c2:	call   0x14001da00
   14001d4c7:	cmp    bx,bp
   14001d4ca:	je     0x14001d4ef
   14001d4cc:	mov    rdx,QWORD PTR [rdi+0x8]
   14001d4d0:	movzx  eax,bx
   14001d4d3:	lea    rcx,[rax+rax*2]
   14001d4d7:	movzx  ebx,WORD PTR [rdx+rcx*4+0x4]
   14001d4dc:	cmp    bx,bp
   14001d4df:	je     0x14001d4f2
   14001d4e1:	movzx  eax,bx
   14001d4e4:	lea    rcx,[rax+rax*2]
   14001d4e8:	movzx  edx,WORD PTR [rdx+rcx*4+0x4]
   14001d4ed:	jmp    0x14001d4f5
   14001d4ef:	movzx  ebx,bp
   14001d4f2:	movzx  edx,bp
   14001d4f5:	movzx  eax,bx
   14001d4f8:	lea    rcx,[rax+rax*2]
   14001d4fc:	mov    rax,QWORD PTR [rdi+0x8]
   14001d500:	mov    WORD PTR [rax+rcx*4+0x6],r14w
   14001d506:	movzx  eax,dx
   14001d509:	lea    rcx,[rax+rax*2]
   14001d50d:	mov    rax,QWORD PTR [rdi+0x8]
   14001d511:	mov    WORD PTR [rax+rcx*4+0x6],r15w
   14001d517:	mov    rcx,rdi
   14001d51a:	call   0x14001d8a0
   14001d51f:	cmp    si,WORD PTR [rdi+0x18]
   14001d523:	jne    0x14001d316
   14001d529:	mov    rbx,QWORD PTR [rsp+0x40]
   14001d52e:	mov    rbp,QWORD PTR [rsp+0x48]
   14001d533:	mov    r15,QWORD PTR [rsp+0x50]
   14001d538:	movzx  eax,WORD PTR [rdi+0x18]
   14001d53c:	lea    rcx,[rax+rax*2]
   14001d540:	mov    rax,QWORD PTR [rdi+0x8]
   14001d544:	mov    WORD PTR [rax+rcx*4+0x6],r14w
   14001d54a:	add    rsp,0x20
   14001d54e:	pop    r14
   14001d550:	pop    rdi
   14001d551:	pop    rsi
   14001d552:	ret    
   14001d553:	int3   
   14001d554:	int3   
   14001d555:	int3   
   14001d556:	int3   
   14001d557:	int3   
   14001d558:	int3   
   14001d559:	int3   
   14001d55a:	int3   
   14001d55b:	int3   
   14001d55c:	int3   
   14001d55d:	int3   
   14001d55e:	int3   
   14001d55f:	int3   
   14001d560:	mov    QWORD PTR [rsp+0x8],rbx
   14001d565:	mov    QWORD PTR [rsp+0x10],rbp
   14001d56a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d56f:	push   rdi
   14001d570:	sub    rsp,0x50
   14001d574:	movzx  eax,WORD PTR [rcx+0x1c]
   14001d578:	mov    edi,0xffff
   14001d57d:	mov    rsi,rdx
   14001d580:	mov    rbx,rcx
   14001d583:	cmp    ax,di
   14001d586:	jne    0x14001d6c9
   14001d58c:	movsxd r8,DWORD PTR [rcx+0x10]
   14001d590:	xor    ebp,ebp
   14001d592:	movzx  eax,WORD PTR [rbx+0x1e]
   14001d596:	mov    rcx,r8
   14001d599:	cmp    rax,r8
   14001d59c:	jge    0x14001d5bb
   14001d59e:	movzx  edx,WORD PTR [rbx+0x1e]
   14001d5a2:	lea    eax,[rdx+0x1]
   14001d5a5:	movzx  eax,ax
   14001d5a8:	cmp    rax,rcx
   14001d5ab:	jge    0x14001d5b6
   14001d5ad:	movzx  r8d,dx
   14001d5b1:	inc    r8d
   14001d5b4:	jmp    0x14001d5c7
   14001d5b6:	mov    r8d,edi
   14001d5b9:	jmp    0x14001d5c7
   14001d5bb:	test   r8d,r8d
   14001d5be:	mov    eax,edi
   14001d5c0:	cmovg  eax,ebp
   14001d5c3:	movzx  r8d,ax
   14001d5c7:	movzx  eax,r8w
   14001d5cb:	cmp    rax,rcx
   14001d5ce:	jl     0x14001d6c2
   14001d5d4:	lea    rcx,[rbx+0x8]
   14001d5d8:	mov    edx,0x1
   14001d5dd:	call   0x14001d110
   14001d5e2:	movsxd rcx,DWORD PTR [rbx+0x10]
   14001d5e6:	movzx  eax,WORD PTR [rbx+0x1e]
   14001d5ea:	mov    rdx,rcx
   14001d5ed:	cmp    rax,rcx
   14001d5f0:	jge    0x14001d608
   14001d5f2:	movzx  ecx,WORD PTR [rbx+0x1e]
   14001d5f6:	lea    eax,[rcx+0x1]
   14001d5f9:	movzx  eax,ax
   14001d5fc:	cmp    rax,rdx
   14001d5ff:	jge    0x14001d60d
   14001d601:	movzx  edi,cx
   14001d604:	inc    edi
   14001d606:	jmp    0x14001d60d
   14001d608:	test   ecx,ecx
   14001d60a:	cmovg  edi,ebp
   14001d60d:	movzx  eax,di
   14001d610:	movzx  r8d,di
   14001d614:	cmp    rax,rdx
   14001d617:	jl     0x14001d6c2
   14001d61d:	mov    rax,QWORD PTR [rip+0x14d64]        # 0x140032388
   14001d624:	mov    edx,0x4
   14001d629:	mov    ecx,DWORD PTR [rax]
   14001d62b:	call   QWORD PTR [rip+0x14e77]        # 0x1400324a8
   14001d631:	test   al,al
   14001d633:	je     0x14001d67d
   14001d635:	lea    rax,[rip+0x19054]        # 0x140036690
   14001d63c:	mov    DWORD PTR [rsp+0x38],0x31f
   14001d644:	mov    QWORD PTR [rsp+0x30],rax
   14001d649:	lea    r9,[rip+0x18f28]        # 0x140036578
   14001d650:	lea    rax,[rip+0x1a489]        # 0x140037ae0
   14001d657:	mov    edx,0x4
   14001d65c:	mov    QWORD PTR [rsp+0x40],rax
   14001d661:	lea    r8,[rsp+0x30]
   14001d666:	movzx  eax,WORD PTR [rbx+0x1a]
   14001d66a:	mov    DWORD PTR [rsp+0x20],eax
   14001d66e:	mov    rax,QWORD PTR [rip+0x14d13]        # 0x140032388
   14001d675:	mov    ecx,DWORD PTR [rax]
   14001d677:	call   QWORD PTR [rip+0x14e1b]        # 0x140032498
   14001d67d:	call   QWORD PTR [rip+0x14f05]        # 0x140032588
   14001d683:	test   al,al
   14001d685:	je     0x14001d6b6
   14001d687:	call   QWORD PTR [rip+0x14df3]        # 0x140032480
   14001d68d:	lea    rdx,[rip+0x15118]        # 0x1400327ac
   14001d694:	xorps  xmm0,xmm0
   14001d697:	mov    r8b,0x1
   14001d69a:	mov    DWORD PTR [rsp+0x38],eax
   14001d69e:	mov    QWORD PTR [rsp+0x30],rdx
   14001d6a3:	xor    ecx,ecx
   14001d6a5:	lea    rdx,[rsp+0x30]
   14001d6aa:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14001d6b0:	call   QWORD PTR [rip+0x14dc2]        # 0x140032478
   14001d6b6:	mov    ecx,0x1
   14001d6bb:	call   QWORD PTR [rip+0x14b87]        # 0x140032248
   14001d6c1:	int3   
   14001d6c2:	mov    WORD PTR [rbx+0x1e],r8w
   14001d6c7:	jmp    0x14001d6e1
   14001d6c9:	movzx  r8d,ax
   14001d6cd:	movzx  eax,ax
   14001d6d0:	lea    rcx,[rax+rax*2]
   14001d6d4:	mov    rax,QWORD PTR [rbx+0x8]
   14001d6d8:	movzx  ecx,WORD PTR [rax+rcx*4+0x2]
   14001d6dd:	mov    WORD PTR [rbx+0x1c],cx
   14001d6e1:	test   rsi,rsi
   14001d6e4:	je     0x14001d703
   14001d6e6:	movzx  ecx,r8w
   14001d6ea:	lea    rax,[rcx+rcx*2]
   14001d6ee:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d6f2:	lea    rax,[rax+0x2]
   14001d6f6:	lea    rax,[rcx+rax*4]
   14001d6fa:	test   rax,rax
   14001d6fd:	je     0x14001d703
   14001d6ff:	mov    ecx,DWORD PTR [rsi]
   14001d701:	mov    DWORD PTR [rax],ecx
   14001d703:	mov    rcx,QWORD PTR [rbx+0x8]
   14001d707:	movzx  eax,r8w
   14001d70b:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d710:	mov    rsi,QWORD PTR [rsp+0x70]
   14001d715:	mov    QWORD PTR [rbx+0x20],rcx
   14001d719:	mov    rbx,QWORD PTR [rsp+0x60]
   14001d71e:	add    rsp,0x50
   14001d722:	pop    rdi
   14001d723:	ret    
   14001d724:	int3   
   14001d725:	int3   
   14001d726:	int3   
   14001d727:	int3   
   14001d728:	int3   
   14001d729:	int3   
   14001d72a:	int3   
   14001d72b:	int3   
   14001d72c:	int3   
   14001d72d:	int3   
   14001d72e:	int3   
   14001d72f:	int3   
   14001d730:	rex push rbx
   14001d732:	movzx  r10d,WORD PTR [rcx+0x1e]
   14001d737:	mov    ebx,0xffff
   14001d73c:	mov    r9,rcx
   14001d73f:	cmp    r10w,bx
   14001d743:	je     0x14001d7f2
   14001d749:	mov    r11d,DWORD PTR [rcx+0x10]
   14001d74d:	mov    QWORD PTR [rsp+0x10],rdi
   14001d752:	xor    edi,edi
   14001d754:	test   r11d,r11d
   14001d757:	jle    0x14001d7e9
   14001d75d:	movzx  eax,di
   14001d760:	movzx  r8d,ax
   14001d764:	movsxd rcx,r11d
   14001d767:	cmp    r8,rcx
   14001d76a:	jge    0x14001d7bd
   14001d76c:	cmp    ax,r10w
   14001d770:	ja     0x14001d7bd
   14001d772:	cmp    ax,bx
   14001d775:	je     0x14001d786
   14001d777:	mov    rcx,QWORD PTR [r9+0x8]
   14001d77b:	lea    rdx,[r8+r8*2]
   14001d77f:	movzx  r10d,WORD PTR [rcx+rdx*4]
   14001d784:	jmp    0x14001d789
   14001d786:	mov    r10d,ebx
   14001d789:	cmp    r10w,ax
   14001d78d:	setne  cl
   14001d790:	test   cl,cl
   14001d792:	je     0x14001d7bd
   14001d794:	mov    rdx,QWORD PTR [r9+0x8]
   14001d798:	lea    rcx,[r8+r8*2]
   14001d79c:	lea    r8,[rcx*4+0x0]
   14001d7a4:	movzx  ecx,WORD PTR [r9+0x1c]
   14001d7a9:	mov    WORD PTR [rdx+r8*1+0x2],cx
   14001d7af:	mov    rcx,QWORD PTR [r9+0x8]
   14001d7b3:	mov    WORD PTR [r8+rcx*1],ax
   14001d7b8:	mov    WORD PTR [r9+0x1c],ax
   14001d7bd:	movzx  r10d,WORD PTR [r9+0x1e]
   14001d7c2:	cmp    ax,r10w
   14001d7c6:	je     0x14001d7e9
   14001d7c8:	movsxd r11,DWORD PTR [r9+0x10]
   14001d7cc:	lea    ecx,[rax+0x1]
   14001d7cf:	movzx  edx,cx
   14001d7d2:	cmp    rdx,r11
   14001d7d5:	jge    0x14001d7de
   14001d7d7:	movzx  eax,ax
   14001d7da:	inc    eax
   14001d7dc:	jmp    0x14001d7e0
   14001d7de:	mov    eax,ebx
   14001d7e0:	cmp    ax,bx
   14001d7e3:	jne    0x14001d760
   14001d7e9:	mov    rdi,QWORD PTR [rsp+0x10]
   14001d7ee:	mov    DWORD PTR [r9+0x18],ebx
   14001d7f2:	pop    rbx
   14001d7f3:	ret    
   14001d7f4:	int3   
   14001d7f5:	int3   
   14001d7f6:	int3   
   14001d7f7:	int3   
   14001d7f8:	int3   
   14001d7f9:	int3   
   14001d7fa:	int3   
   14001d7fb:	int3   
   14001d7fc:	int3   
   14001d7fd:	int3   
   14001d7fe:	int3   
   14001d7ff:	int3   
   14001d800:	mov    QWORD PTR [rsp+0x8],rbx
   14001d805:	mov    QWORD PTR [rsp+0x10],rbp
   14001d80a:	mov    QWORD PTR [rsp+0x18],rsi
   14001d80f:	push   rdi
   14001d810:	sub    rsp,0x20
   14001d814:	mov    rbx,rcx
   14001d817:	call   0x14001d730
   14001d81c:	mov    edi,0xffff
   14001d821:	xor    ebp,ebp
   14001d823:	mov    WORD PTR [rbx+0x1c],di
   14001d827:	test   DWORD PTR [rbx+0x14],0xc0000000
   14001d82e:	jne    0x14001d850
   14001d830:	mov    rdx,QWORD PTR [rbx+0x8]
   14001d834:	test   rdx,rdx
   14001d837:	je     0x14001d84d
   14001d839:	mov    rax,QWORD PTR [rip+0x14b50]        # 0x140032390
   14001d840:	mov    rcx,QWORD PTR [rax]
   14001d843:	mov    rax,QWORD PTR [rcx]
   14001d846:	call   QWORD PTR [rax+0x28]
   14001d849:	mov    QWORD PTR [rbx+0x8],rbp
   14001d84d:	mov    DWORD PTR [rbx+0x10],ebp
   14001d850:	mov    WORD PTR [rbx+0x1e],di
   14001d854:	mov    esi,ebp
   14001d856:	cmp    DWORD PTR [rbx+0x38],ebp
   14001d859:	jle    0x14001d883
   14001d85b:	mov    rdi,rbp
   14001d85e:	xchg   ax,ax
   14001d860:	mov    rax,QWORD PTR [rip+0x14b29]        # 0x140032390
   14001d867:	mov    rdx,QWORD PTR [rbx+0x40]
   14001d86b:	mov    rcx,QWORD PTR [rax]
   14001d86e:	mov    rdx,QWORD PTR [rdx+rdi*1]
   14001d872:	mov    rax,QWORD PTR [rcx]
   14001d875:	call   QWORD PTR [rax+0x28]
   14001d878:	inc    esi
   14001d87a:	lea    rdi,[rdi+0x8]
   14001d87e:	cmp    esi,DWORD PTR [rbx+0x38]
   14001d881:	jl     0x14001d860
   14001d883:	mov    rsi,QWORD PTR [rsp+0x40]
   14001d888:	mov    DWORD PTR [rbx+0x38],ebp
   14001d88b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001d890:	mov    rbp,QWORD PTR [rsp+0x38]
   14001d895:	add    rsp,0x20
   14001d899:	pop    rdi
   14001d89a:	ret    
   14001d89b:	int3   
   14001d89c:	int3   
   14001d89d:	int3   
   14001d89e:	int3   
   14001d89f:	int3   
   14001d8a0:	sub    rsp,0x8
   14001d8a4:	mov    QWORD PTR [rsp],rdi
   14001d8a8:	mov    r9,rcx
   14001d8ab:	mov    edi,0xffff
   14001d8b0:	cmp    dx,di
   14001d8b3:	je     0x14001d8db
   14001d8b5:	mov    r11,QWORD PTR [rcx+0x8]
   14001d8b9:	movzx  eax,dx
   14001d8bc:	lea    r8,[rax+rax*2]
   14001d8c0:	movzx  r10d,WORD PTR [r11+r8*4+0x2]
   14001d8c6:	cmp    r10w,di
   14001d8ca:	je     0x14001d8de
   14001d8cc:	movzx  eax,r10w
   14001d8d0:	lea    rcx,[rax+rax*2]
   14001d8d4:	movzx  r11d,WORD PTR [r11+rcx*4]
   14001d8d9:	jmp    0x14001d8e1
   14001d8db:	mov    r10d,edi
   14001d8de:	mov    r11d,edi
   14001d8e1:	movzx  eax,dx
   14001d8e4:	lea    rcx,[rax+rax*2]
   14001d8e8:	mov    rax,QWORD PTR [r9+0x8]
   14001d8ec:	lea    r8,[rcx*4+0x0]
   14001d8f4:	mov    WORD PTR [rax+r8*1+0x2],r11w
   14001d8fa:	cmp    r10w,di
   14001d8fe:	je     0x14001d951
   14001d900:	mov    r11,QWORD PTR [r9+0x8]
   14001d904:	movzx  eax,r10w
   14001d908:	mov    QWORD PTR [rsp+0x10],rbx
   14001d90d:	lea    rcx,[rax+rax*2]
   14001d911:	lea    rbx,[rcx*4+0x0]
   14001d919:	movzx  eax,WORD PTR [rbx+r11*1]
   14001d91e:	cmp    ax,di
   14001d921:	je     0x14001d930
   14001d923:	movzx  eax,ax
   14001d926:	lea    rcx,[rax+rax*2]
   14001d92a:	mov    WORD PTR [r11+rcx*4+0x4],dx
   14001d930:	cmp    dx,di
   14001d933:	je     0x14001d941
   14001d935:	mov    rax,QWORD PTR [r9+0x8]
   14001d939:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001d93f:	jmp    0x14001d943
   14001d941:	mov    ecx,edi
   14001d943:	mov    rax,QWORD PTR [r9+0x8]
   14001d947:	mov    WORD PTR [rax+rbx*1+0x4],cx
   14001d94c:	mov    rbx,QWORD PTR [rsp+0x10]
   14001d951:	cmp    dx,WORD PTR [r9+0x18]
   14001d956:	je     0x14001d9cc
   14001d958:	cmp    dx,di
   14001d95b:	je     0x14001d97a
   14001d95d:	mov    r11,QWORD PTR [r9+0x8]
   14001d961:	movzx  eax,WORD PTR [r11+r8*1+0x4]
   14001d967:	cmp    ax,di
   14001d96a:	je     0x14001d97a
   14001d96c:	movzx  eax,ax
   14001d96f:	lea    rcx,[rax+rax*2]
   14001d973:	movzx  eax,WORD PTR [r11+rcx*4]
   14001d978:	jmp    0x14001d97c
   14001d97a:	mov    eax,edi
   14001d97c:	cmp    ax,dx
   14001d97f:	jne    0x14001d9a6
   14001d981:	cmp    dx,di
   14001d984:	je     0x14001d992
   14001d986:	mov    rax,QWORD PTR [r9+0x8]
   14001d98a:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001d990:	jmp    0x14001d994
   14001d992:	mov    ecx,edi
   14001d994:	movzx  eax,cx
   14001d997:	lea    rcx,[rax+rax*2]
   14001d99b:	mov    rax,QWORD PTR [r9+0x8]
   14001d99f:	mov    WORD PTR [rax+rcx*4],r10w
   14001d9a4:	jmp    0x14001d9d1
   14001d9a6:	cmp    dx,di
   14001d9a9:	je     0x14001d9b7
   14001d9ab:	mov    rax,QWORD PTR [r9+0x8]
   14001d9af:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001d9b5:	jmp    0x14001d9b9
   14001d9b7:	mov    ecx,edi
   14001d9b9:	movzx  eax,cx
   14001d9bc:	lea    rcx,[rax+rax*2]
   14001d9c0:	mov    rax,QWORD PTR [r9+0x8]
   14001d9c4:	mov    WORD PTR [rax+rcx*4+0x2],r10w
   14001d9ca:	jmp    0x14001d9d1
   14001d9cc:	mov    WORD PTR [r9+0x18],r10w
   14001d9d1:	movzx  eax,r10w
   14001d9d5:	cmp    dx,di
   14001d9d8:	mov    rdi,QWORD PTR [rsp]
   14001d9dc:	lea    rcx,[rax+rax*2]
   14001d9e0:	mov    rax,QWORD PTR [r9+0x8]
   14001d9e4:	mov    WORD PTR [rax+rcx*4],dx
   14001d9e8:	je     0x14001d9f4
   14001d9ea:	mov    rax,QWORD PTR [r9+0x8]
   14001d9ee:	mov    WORD PTR [rax+r8*1+0x4],r10w
   14001d9f4:	add    rsp,0x8
   14001d9f8:	ret    
   14001d9f9:	int3   
   14001d9fa:	int3   
   14001d9fb:	int3   
   14001d9fc:	int3   
   14001d9fd:	int3   
   14001d9fe:	int3   
   14001d9ff:	int3   
   14001da00:	sub    rsp,0x8
   14001da04:	mov    QWORD PTR [rsp],rdi
   14001da08:	mov    r9,rcx
   14001da0b:	mov    edi,0xffff
   14001da10:	cmp    dx,di
   14001da13:	je     0x14001da3b
   14001da15:	mov    r11,QWORD PTR [rcx+0x8]
   14001da19:	movzx  eax,dx
   14001da1c:	lea    r8,[rax+rax*2]
   14001da20:	movzx  r10d,WORD PTR [r11+r8*4]
   14001da25:	cmp    r10w,di
   14001da29:	je     0x14001da3e
   14001da2b:	movzx  eax,r10w
   14001da2f:	lea    rcx,[rax+rax*2]
   14001da33:	movzx  r11d,WORD PTR [r11+rcx*4+0x2]
   14001da39:	jmp    0x14001da41
   14001da3b:	mov    r10d,edi
   14001da3e:	mov    r11d,edi
   14001da41:	movzx  eax,dx
   14001da44:	lea    rcx,[rax+rax*2]
   14001da48:	mov    rax,QWORD PTR [r9+0x8]
   14001da4c:	lea    r8,[rcx*4+0x0]
   14001da54:	mov    WORD PTR [r8+rax*1],r11w
   14001da59:	cmp    r10w,di
   14001da5d:	je     0x14001dab1
   14001da5f:	mov    r11,QWORD PTR [r9+0x8]
   14001da63:	movzx  eax,r10w
   14001da67:	mov    QWORD PTR [rsp+0x10],rbx
   14001da6c:	lea    rcx,[rax+rax*2]
   14001da70:	lea    rbx,[rcx*4+0x0]
   14001da78:	movzx  eax,WORD PTR [rbx+r11*1+0x2]
   14001da7e:	cmp    ax,di
   14001da81:	je     0x14001da90
   14001da83:	movzx  eax,ax
   14001da86:	lea    rcx,[rax+rax*2]
   14001da8a:	mov    WORD PTR [r11+rcx*4+0x4],dx
   14001da90:	cmp    dx,di
   14001da93:	je     0x14001daa1
   14001da95:	mov    rax,QWORD PTR [r9+0x8]
   14001da99:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001da9f:	jmp    0x14001daa3
   14001daa1:	mov    ecx,edi
   14001daa3:	mov    rax,QWORD PTR [r9+0x8]
   14001daa7:	mov    WORD PTR [rax+rbx*1+0x4],cx
   14001daac:	mov    rbx,QWORD PTR [rsp+0x10]
   14001dab1:	cmp    dx,WORD PTR [r9+0x18]
   14001dab6:	je     0x14001db2d
   14001dab8:	cmp    dx,di
   14001dabb:	je     0x14001dadb
   14001dabd:	mov    r11,QWORD PTR [r9+0x8]
   14001dac1:	movzx  eax,WORD PTR [r11+r8*1+0x4]
   14001dac7:	cmp    ax,di
   14001daca:	je     0x14001dadb
   14001dacc:	movzx  eax,ax
   14001dacf:	lea    rcx,[rax+rax*2]
   14001dad3:	movzx  eax,WORD PTR [r11+rcx*4+0x2]
   14001dad9:	jmp    0x14001dadd
   14001dadb:	mov    eax,edi
   14001dadd:	cmp    ax,dx
   14001dae0:	jne    0x14001db08
   14001dae2:	cmp    dx,di
   14001dae5:	je     0x14001daf3
   14001dae7:	mov    rax,QWORD PTR [r9+0x8]
   14001daeb:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001daf1:	jmp    0x14001daf5
   14001daf3:	mov    ecx,edi
   14001daf5:	movzx  eax,cx
   14001daf8:	lea    rcx,[rax+rax*2]
   14001dafc:	mov    rax,QWORD PTR [r9+0x8]
   14001db00:	mov    WORD PTR [rax+rcx*4+0x2],r10w
   14001db06:	jmp    0x14001db32
   14001db08:	cmp    dx,di
   14001db0b:	je     0x14001db19
   14001db0d:	mov    rax,QWORD PTR [r9+0x8]
   14001db11:	movzx  ecx,WORD PTR [rax+r8*1+0x4]
   14001db17:	jmp    0x14001db1b
   14001db19:	mov    ecx,edi
   14001db1b:	movzx  eax,cx
   14001db1e:	lea    rcx,[rax+rax*2]
   14001db22:	mov    rax,QWORD PTR [r9+0x8]
   14001db26:	mov    WORD PTR [rax+rcx*4],r10w
   14001db2b:	jmp    0x14001db32
   14001db2d:	mov    WORD PTR [r9+0x18],r10w
   14001db32:	movzx  eax,r10w
   14001db36:	cmp    dx,di
   14001db39:	mov    rdi,QWORD PTR [rsp]
   14001db3d:	lea    rcx,[rax+rax*2]
   14001db41:	mov    rax,QWORD PTR [r9+0x8]
   14001db45:	mov    WORD PTR [rax+rcx*4+0x2],dx
   14001db4a:	je     0x14001db56
   14001db4c:	mov    rax,QWORD PTR [r9+0x8]
   14001db50:	mov    WORD PTR [rax+r8*1+0x4],r10w
   14001db56:	add    rsp,0x8
   14001db5a:	ret    
   14001db5b:	int3   
   14001db5c:	int3   
   14001db5d:	int3   
   14001db5e:	int3   
   14001db5f:	int3   
   14001db60:	movzx  eax,WORD PTR [rdx]
   14001db63:	mov    r9,rcx
   14001db66:	mov    ecx,0xffff
   14001db6b:	cmp    ax,cx
   14001db6e:	jne    0x14001db78
   14001db70:	lea    rax,[rip+0x14c29]        # 0x1400327a0
   14001db77:	ret    
   14001db78:	movzx  eax,ax
   14001db7b:	lea    rcx,[rax+rax*2]
   14001db7f:	mov    rax,QWORD PTR [r9+0x8]
   14001db83:	movzx  r8d,WORD PTR [rax+rcx*4+0x8]
   14001db89:	lea    rdx,[rax+rcx*4]
   14001db8d:	mov    rax,QWORD PTR [r9+0x40]
   14001db91:	movzx  ecx,WORD PTR [rdx+0xa]
   14001db95:	add    rcx,0xa
   14001db99:	mov    rax,QWORD PTR [rax+r8*8]
   14001db9d:	add    rax,rcx
   14001dba0:	ret    
   14001dba1:	int3   
   14001dba2:	int3   
   14001dba3:	int3   
   14001dba4:	int3   
   14001dba5:	int3   
   14001dba6:	int3   
   14001dba7:	int3   
   14001dba8:	int3   
   14001dba9:	int3   
   14001dbaa:	int3   
   14001dbab:	int3   
   14001dbac:	int3   
   14001dbad:	int3   
   14001dbae:	int3   
   14001dbaf:	int3   
   14001dbb0:	mov    QWORD PTR [rsp+0x10],rbx
   14001dbb5:	mov    QWORD PTR [rsp+0x20],rsi
   14001dbba:	push   rdi
   14001dbbb:	sub    rsp,0x30
   14001dbbf:	mov    eax,DWORD PTR [rcx+0x8]
   14001dbc2:	xor    edi,edi
   14001dbc4:	and    eax,0x80ffffff
   14001dbc9:	mov    QWORD PTR [rcx],rdi
   14001dbcc:	or     eax,0xffffff
   14001dbd1:	mov    rbx,rdx
   14001dbd4:	mov    DWORD PTR [rcx+0x8],eax
   14001dbd7:	mov    rsi,rcx
   14001dbda:	call   0x14001e3b0
   14001dbdf:	and    DWORD PTR [rsi+0x8],0xf7ffffff
   14001dbe6:	mov    QWORD PTR [rsi+0xc],rdi
   14001dbea:	mov    DWORD PTR [rsp+0x40],0xffffff
   14001dbf2:	call   QWORD PTR [rip+0x14800]        # 0x1400323f8
   14001dbf8:	mov    r9,rbx
   14001dbfb:	mov    BYTE PTR [rsp+0x20],0x1
   14001dc00:	lea    r8,[rsp+0x40]
   14001dc05:	mov    rcx,rax
   14001dc08:	lea    rdx,[rsp+0x50]
   14001dc0d:	mov    r10,QWORD PTR [rax]
   14001dc10:	call   QWORD PTR [r10+0x40]
   14001dc14:	mov    rbx,QWORD PTR [rsp+0x48]
   14001dc19:	mov    eax,DWORD PTR [rax]
   14001dc1b:	cmp    eax,DWORD PTR [rsp+0x40]
   14001dc1f:	sete   dil
   14001dc23:	and    eax,0xffffff
   14001dc28:	shl    edi,0x1d
   14001dc2b:	or     edi,eax
   14001dc2d:	mov    eax,DWORD PTR [rsi+0x8]
   14001dc30:	and    eax,0xdf000000
   14001dc35:	or     edi,eax
   14001dc37:	mov    rax,rsi
   14001dc3a:	mov    DWORD PTR [rsi+0x8],edi
   14001dc3d:	mov    rsi,QWORD PTR [rsp+0x58]
   14001dc42:	add    rsp,0x30
   14001dc46:	pop    rdi
   14001dc47:	ret    
   14001dc48:	int3   
   14001dc49:	int3   
   14001dc4a:	int3   
   14001dc4b:	int3   
   14001dc4c:	int3   
   14001dc4d:	int3   
   14001dc4e:	int3   
   14001dc4f:	int3   
   14001dc50:	rex push rbx
   14001dc52:	sub    rsp,0x20
   14001dc56:	mov    rbx,rcx
   14001dc59:	call   0x140020420
   14001dc5e:	mov    rcx,rbx
   14001dc61:	add    rsp,0x20
   14001dc65:	pop    rbx
   14001dc66:	jmp    0x14001e3b0
   14001dc6b:	int3   
   14001dc6c:	int3   
   14001dc6d:	int3   
   14001dc6e:	int3   
   14001dc6f:	int3   
   14001dc70:	sub    rsp,0x28
   14001dc74:	call   QWORD PTR [rip+0x1477e]        # 0x1400323f8
   14001dc7a:	mov    rcx,rax
   14001dc7d:	mov    rdx,QWORD PTR [rax]
   14001dc80:	add    rsp,0x28
   14001dc84:	rex.W jmp QWORD PTR [rdx]
   14001dc87:	int3   
   14001dc88:	int3   
   14001dc89:	int3   
   14001dc8a:	int3   
   14001dc8b:	int3   
   14001dc8c:	int3   
   14001dc8d:	int3   
   14001dc8e:	int3   
   14001dc8f:	int3   
   14001dc90:	rex push rbx
   14001dc92:	sub    rsp,0x20
   14001dc96:	mov    rbx,rcx
   14001dc99:	call   QWORD PTR [rip+0x14759]        # 0x1400323f8
   14001dc9f:	mov    rdx,rbx
   14001dca2:	mov    rcx,rax
   14001dca5:	mov    r8,QWORD PTR [rax]
   14001dca8:	add    rsp,0x20
   14001dcac:	pop    rbx
   14001dcad:	rex.WB jmp QWORD PTR [r8+0x8]
   14001dcb1:	int3   
   14001dcb2:	int3   
   14001dcb3:	int3   
   14001dcb4:	int3   
   14001dcb5:	int3   
   14001dcb6:	int3   
   14001dcb7:	int3   
   14001dcb8:	int3   
   14001dcb9:	int3   
   14001dcba:	int3   
   14001dcbb:	int3   
   14001dcbc:	int3   
   14001dcbd:	int3   
   14001dcbe:	int3   
   14001dcbf:	int3   
   14001dcc0:	mov    QWORD PTR [rsp+0x8],rbx
   14001dcc5:	push   rdi
   14001dcc6:	sub    rsp,0x20
   14001dcca:	mov    edi,edx
   14001dccc:	mov    rbx,rcx
   14001dccf:	call   0x140020420
   14001dcd4:	mov    rcx,rbx
   14001dcd7:	call   0x14001e3b0
   14001dcdc:	test   dil,0x1
   14001dce0:	je     0x14001dd16
   14001dce2:	test   dil,0x4
   14001dce6:	jne    0x14001dd09
   14001dce8:	call   QWORD PTR [rip+0x1470a]        # 0x1400323f8
   14001dcee:	mov    rdx,rbx
   14001dcf1:	mov    rcx,rax
   14001dcf4:	mov    r8,QWORD PTR [rax]
   14001dcf7:	call   QWORD PTR [r8+0x8]
   14001dcfb:	mov    rax,rbx
   14001dcfe:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dd03:	add    rsp,0x20
   14001dd07:	pop    rdi
   14001dd08:	ret    
   14001dd09:	mov    edx,0x14
   14001dd0e:	mov    rcx,rbx
   14001dd11:	call   0x14001e1b0
   14001dd16:	mov    rax,rbx
   14001dd19:	mov    rbx,QWORD PTR [rsp+0x30]
   14001dd1e:	add    rsp,0x20
   14001dd22:	pop    rdi
   14001dd23:	ret    
   14001dd24:	int3   
   14001dd25:	int3   
   14001dd26:	int3   
   14001dd27:	int3   
   14001dd28:	int3   
   14001dd29:	int3   
   14001dd2a:	int3   
   14001dd2b:	int3   
   14001dd2c:	int3   
   14001dd2d:	int3   
   14001dd2e:	int3   
   14001dd2f:	int3   
   14001dd30:	mov    QWORD PTR [rsp+0x18],rbx
   14001dd35:	mov    QWORD PTR [rsp+0x20],rbp
   14001dd3a:	push   r14
   14001dd3c:	sub    rsp,0x20
   14001dd40:	mov    eax,DWORD PTR [rcx+0x8]
   14001dd43:	xor    r14d,r14d
   14001dd46:	mov    rbx,rdx
   14001dd49:	mov    ebp,r14d
   14001dd4c:	test   eax,0x7000000
   14001dd51:	jne    0x14001ddc9
   14001dd53:	bt     eax,0x1e
   14001dd57:	jae    0x14001ddc9
   14001dd59:	mov    QWORD PTR [rsp+0x30],rsi
   14001dd5e:	mov    rsi,QWORD PTR [rcx]
   14001dd61:	test   rsi,rsi
   14001dd64:	je     0x14001ddc4
   14001dd66:	mov    QWORD PTR [rsp+0x38],rdi
   14001dd6b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001dd70:	mov    rcx,rsi
   14001dd73:	call   0x14001f450
   14001dd78:	mov    rdi,rax
   14001dd7b:	test   rbp,rbp
   14001dd7e:	je     0x14001dd86
   14001dd80:	mov    QWORD PTR [rbp+0xc],rax
   14001dd84:	jmp    0x14001ddaf
   14001dd86:	test   rdi,rdi
   14001dd89:	jne    0x14001dd94
   14001dd8b:	and    DWORD PTR [rbx+0x8],0xbfffffff
   14001dd92:	jmp    0x14001ddaf
   14001dd94:	test   DWORD PTR [rbx+0x8],0x7000000
   14001dd9b:	je     0x14001dda5
   14001dd9d:	mov    rcx,rbx
   14001dda0:	call   0x14001e3b0
   14001dda5:	or     DWORD PTR [rbx+0x8],0x40000000
   14001ddac:	mov    QWORD PTR [rbx],rdi
   14001ddaf:	mov    QWORD PTR [rdi+0xc],r14
   14001ddb3:	mov    rbp,rdi
   14001ddb6:	mov    rsi,QWORD PTR [rsi+0xc]
   14001ddba:	test   rsi,rsi
   14001ddbd:	jne    0x14001dd70
   14001ddbf:	mov    rdi,QWORD PTR [rsp+0x38]
   14001ddc4:	mov    rsi,QWORD PTR [rsp+0x30]
   14001ddc9:	mov    rbx,QWORD PTR [rsp+0x40]
   14001ddce:	mov    rbp,QWORD PTR [rsp+0x48]
   14001ddd3:	add    rsp,0x20
   14001ddd7:	pop    r14
   14001ddd9:	ret    
   14001ddda:	int3   
   14001dddb:	int3   
   14001dddc:	int3   
   14001dddd:	int3   
   14001ddde:	int3   
   14001dddf:	int3   
   14001dde0:	mov    QWORD PTR [rsp+0x8],rbx
   14001dde5:	mov    QWORD PTR [rsp+0x10],rsi
   14001ddea:	push   rdi
   14001ddeb:	sub    rsp,0x20
   14001ddef:	mov    rsi,r8
   14001ddf2:	mov    rbx,rdx
   14001ddf5:	mov    rdi,rcx
   14001ddf8:	call   QWORD PTR [rip+0x145fa]        # 0x1400323f8
   14001ddfe:	mov    rcx,rax
   14001de01:	mov    r9,QWORD PTR [rax]
   14001de04:	call   QWORD PTR [r9]
   14001de07:	test   rax,rax
   14001de0a:	je     0x14001de1c
   14001de0c:	mov    rdx,rbx
   14001de0f:	mov    rcx,rax
   14001de12:	call   0x14001dbb0
   14001de17:	mov    rbx,rax
   14001de1a:	jmp    0x14001de1e
   14001de1c:	xor    ebx,ebx
   14001de1e:	mov    eax,DWORD PTR [rdi+0x8]
   14001de21:	and    eax,0xf8000000
   14001de26:	xor    eax,DWORD PTR [rbx+0x8]
   14001de29:	and    eax,0x8000000
   14001de2e:	xor    DWORD PTR [rbx+0x8],eax
   14001de31:	test   rsi,rsi
   14001de34:	jne    0x14001de64
   14001de36:	test   DWORD PTR [rdi+0x8],0x7000000
   14001de3d:	je     0x14001de47
   14001de3f:	mov    rcx,rdi
   14001de42:	call   0x14001e3b0
   14001de47:	or     DWORD PTR [rdi+0x8],0x40000000
   14001de4e:	mov    rax,rbx
   14001de51:	mov    QWORD PTR [rdi],rbx
   14001de54:	mov    rbx,QWORD PTR [rsp+0x30]
   14001de59:	mov    rsi,QWORD PTR [rsp+0x38]
   14001de5e:	add    rsp,0x20
   14001de62:	pop    rdi
   14001de63:	ret    
   14001de64:	mov    QWORD PTR [rsi+0xc],rbx
   14001de68:	mov    rax,rbx
   14001de6b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001de70:	mov    rsi,QWORD PTR [rsp+0x38]
   14001de75:	add    rsp,0x20
   14001de79:	pop    rdi
   14001de7a:	ret    
   14001de7b:	int3   
   14001de7c:	int3   
   14001de7d:	int3   
   14001de7e:	int3   
   14001de7f:	int3   
   14001de80:	rex push rbx
   14001de82:	sub    rsp,0x40
   14001de86:	mov    rbx,rdx
   14001de89:	mov    BYTE PTR [rsp+0x30],0x0
   14001de8e:	lea    rdx,[rsp+0x30]
   14001de93:	mov    QWORD PTR [rsp+0x20],0x0
   14001de9c:	lea    rcx,[rip+0x2a2cd]        # 0x140048170
   14001dea3:	call   0x1400247e0
   14001dea8:	test   al,al
   14001deaa:	jne    0x14001debb
   14001deac:	lea    rdx,[rip+0x19dd5]        # 0x140037c88
   14001deb3:	mov    rcx,rbx
   14001deb6:	call   0x140020630
   14001debb:	movzx  eax,BYTE PTR [rsp+0x30]
   14001dec0:	add    rsp,0x40
   14001dec4:	pop    rbx
   14001dec5:	ret    
   14001dec6:	int3   
   14001dec7:	int3   
   14001dec8:	int3   
   14001dec9:	int3   
   14001deca:	int3   
   14001decb:	int3   
   14001decc:	int3   
   14001decd:	int3   
   14001dece:	int3   
   14001decf:	int3   
   14001ded0:	mov    BYTE PTR [rsp+0x18],r8b
   14001ded5:	mov    QWORD PTR [rsp+0x8],rcx
   14001deda:	push   rbx
   14001dedb:	push   rdi
   14001dedc:	sub    rsp,0x58
   14001dee0:	mov    rdi,rdx
   14001dee3:	mov    rbx,rcx
   14001dee6:	test   rcx,rcx
   14001dee9:	jne    0x14001def4
   14001deeb:	xor    eax,eax
   14001deed:	add    rsp,0x58
   14001def1:	pop    rdi
   14001def2:	pop    rbx
   14001def3:	ret    
   14001def4:	test   rdi,rdi
   14001def7:	je     0x14001e115
   14001defd:	cmp    BYTE PTR [rdx],0x0
   14001df00:	je     0x14001e115
   14001df06:	xor    eax,eax
   14001df08:	mov    QWORD PTR [rsp+0x78],rbp
   14001df0d:	mov    QWORD PTR [rsp+0x50],rsi
   14001df12:	mov    rcx,rdi
   14001df15:	xor    esi,esi
   14001df17:	mov    DWORD PTR [rsp+0x30],0x0
   14001df1f:	mov    QWORD PTR [rsp+0x38],rsi
   14001df24:	mov    QWORD PTR [rsp+0x40],rsi
   14001df29:	mov    DWORD PTR [rsp+0x24],eax
   14001df2d:	lea    edx,[rsi+0x2f]
   14001df30:	call   0x140027a28
   14001df35:	mov    QWORD PTR [rsp+0x28],rax
   14001df3a:	test   rax,rax
   14001df3d:	je     0x14001df9b
   14001df3f:	mov    ebx,eax
   14001df41:	sub    ebx,edi
   14001df43:	lea    ebp,[rbx+0x1]
   14001df46:	cmp    ebp,0x1
   14001df49:	jl     0x14001df68
   14001df4b:	test   ebp,ebp
   14001df4d:	jle    0x14001df68
   14001df4f:	mov    edx,ebp
   14001df51:	lea    rcx,[rsp+0x38]
   14001df56:	call   0x14000f0d0
   14001df5b:	mov    eax,DWORD PTR [rsp+0x44]
   14001df5f:	mov    rsi,QWORD PTR [rsp+0x38]
   14001df64:	mov    DWORD PTR [rsp+0x24],eax
   14001df68:	test   ebx,ebx
   14001df6a:	jns    0x14001df6d
   14001df6c:	int3   
   14001df6d:	movsxd rbx,ebx
   14001df70:	mov    rdx,rdi
   14001df73:	mov    r8,rbx
   14001df76:	mov    rcx,rsi
   14001df79:	call   0x140026f70
   14001df7e:	or     rax,0xffffffffffffffff
   14001df82:	mov    BYTE PTR [rbx+rsi*1],0x0
   14001df86:	inc    rax
   14001df89:	cmp    BYTE PTR [rdi+rax*1],0x0
   14001df8d:	jne    0x14001df86
   14001df8f:	mov    rbx,QWORD PTR [rsp+0x70]
   14001df94:	cmp    eax,0x1
   14001df97:	cmovg  rdi,rsi
   14001df9b:	call   QWORD PTR [rip+0x14457]        # 0x1400323f8
   14001dfa1:	movzx  r9d,BYTE PTR [rsp+0x80]
   14001dfaa:	lea    rdx,[rsp+0x88]
   14001dfb2:	mov    r8,rdi
   14001dfb5:	mov    rcx,rax
   14001dfb8:	mov    r10,QWORD PTR [rax]
   14001dfbb:	call   QWORD PTR [r10+0x10]
   14001dfbf:	mov    ecx,DWORD PTR [rsp+0x88]
   14001dfc6:	cmp    ecx,0xffffff
   14001dfcc:	je     0x14001e0bc
   14001dfd2:	mov    eax,DWORD PTR [rbx+0x8]
   14001dfd5:	xor    ebp,ebp
   14001dfd7:	test   eax,0x7000000
   14001dfdc:	jne    0x14001e03f
   14001dfde:	bt     eax,0x1e
   14001dfe2:	jae    0x14001e03f
   14001dfe4:	mov    rbx,QWORD PTR [rbx]
   14001dfe7:	test   rbx,rbx
   14001dfea:	je     0x14001e03f
   14001dfec:	nop    DWORD PTR [rax+0x0]
   14001dff0:	mov    eax,DWORD PTR [rbx+0x8]
   14001dff3:	mov    rbp,rbx
   14001dff6:	bt     eax,0x1d
   14001dffa:	jae    0x14001e007
   14001dffc:	and    eax,0xffffff
   14001e001:	mov    DWORD PTR [rsp+0x20],eax
   14001e005:	jmp    0x14001e032
   14001e007:	call   QWORD PTR [rip+0x143eb]        # 0x1400323f8
   14001e00d:	mov    r8d,DWORD PTR [rbx+0x8]
   14001e011:	lea    rdx,[rsp+0x20]
   14001e016:	and    r8d,0xffffff
   14001e01d:	mov    rcx,rax
   14001e020:	mov    r9,QWORD PTR [rax]
   14001e023:	call   QWORD PTR [r9+0x48]
   14001e027:	mov    ecx,DWORD PTR [rsp+0x88]
   14001e02e:	mov    eax,DWORD PTR [rsp+0x20]
   14001e032:	cmp    eax,ecx
   14001e034:	je     0x14001e099
   14001e036:	mov    rbx,QWORD PTR [rbx+0xc]
   14001e03a:	test   rbx,rbx
   14001e03d:	jne    0x14001dff0
   14001e03f:	cmp    BYTE PTR [rsp+0x80],0x0
   14001e047:	je     0x14001e0bc
   14001e049:	call   QWORD PTR [rip+0x143a9]        # 0x1400323f8
   14001e04f:	mov    rcx,rax
   14001e052:	mov    r8,QWORD PTR [rax]
   14001e055:	call   QWORD PTR [r8]
   14001e058:	test   rax,rax
   14001e05b:	je     0x14001e06d
   14001e05d:	mov    rdx,rdi
   14001e060:	mov    rcx,rax
   14001e063:	call   0x14001dbb0
   14001e068:	mov    rbx,rax
   14001e06b:	jmp    0x14001e06f
   14001e06d:	xor    ebx,ebx
   14001e06f:	test   rbp,rbp
   14001e072:	je     0x14001e07a
   14001e074:	mov    QWORD PTR [rbp+0xc],rbx
   14001e078:	jmp    0x14001e091
   14001e07a:	mov    rcx,QWORD PTR [rsp+0x70]
   14001e07f:	call   0x14001e3b0
   14001e084:	mov    rcx,QWORD PTR [rsp+0x70]
   14001e089:	mov    rdx,rbx
   14001e08c:	call   0x14001e9a0
   14001e091:	mov    QWORD PTR [rbx+0xc],0x0
   14001e099:	mov    rdx,QWORD PTR [rsp+0x28]
   14001e09e:	test   rdx,rdx
   14001e0a1:	je     0x14001e0be
   14001e0a3:	movzx  r8d,BYTE PTR [rsp+0x80]
   14001e0ac:	inc    rdx
   14001e0af:	mov    rcx,rbx
   14001e0b2:	call   0x14001ded0
   14001e0b7:	mov    rbx,rax
   14001e0ba:	jmp    0x14001e0be
   14001e0bc:	xor    ebx,ebx
   14001e0be:	mov    edi,DWORD PTR [rsp+0x24]
   14001e0c2:	mov    rbp,QWORD PTR [rsp+0x78]
   14001e0c7:	and    edi,0xc0000000
   14001e0cd:	jne    0x14001e0e9
   14001e0cf:	test   rsi,rsi
   14001e0d2:	je     0x14001e0e9
   14001e0d4:	mov    rax,QWORD PTR [rip+0x142b5]        # 0x140032390
   14001e0db:	mov    rdx,rsi
   14001e0de:	mov    rcx,QWORD PTR [rax]
   14001e0e1:	mov    rax,QWORD PTR [rcx]
   14001e0e4:	call   QWORD PTR [rax+0x28]
   14001e0e7:	xor    esi,esi
   14001e0e9:	test   edi,edi
   14001e0eb:	jne    0x14001e106
   14001e0ed:	test   rsi,rsi
   14001e0f0:	je     0x14001e106
   14001e0f2:	mov    rcx,QWORD PTR [rip+0x14297]        # 0x140032390
   14001e0f9:	mov    rdx,rsi
   14001e0fc:	mov    rcx,QWORD PTR [rcx]
   14001e0ff:	mov    r8,QWORD PTR [rcx]
   14001e102:	call   QWORD PTR [r8+0x28]
   14001e106:	mov    rax,rbx
   14001e109:	mov    rsi,QWORD PTR [rsp+0x50]
   14001e10e:	add    rsp,0x58
   14001e112:	pop    rdi
   14001e113:	pop    rbx
   14001e114:	ret    
   14001e115:	mov    rax,rcx
   14001e118:	add    rsp,0x58
   14001e11c:	pop    rdi
   14001e11d:	pop    rbx
   14001e11e:	ret    
   14001e11f:	int3   
   14001e120:	mov    DWORD PTR [rsp+0x10],edx
   14001e124:	push   rbx
   14001e125:	sub    rsp,0x20
   14001e129:	test   rcx,rcx
   14001e12c:	je     0x14001e143
   14001e12e:	mov    eax,DWORD PTR [rcx+0x8]
   14001e131:	test   eax,0x7000000
   14001e136:	jne    0x14001e143
   14001e138:	bt     eax,0x1e
   14001e13c:	jae    0x14001e143
   14001e13e:	mov    rbx,QWORD PTR [rcx]
   14001e141:	jmp    0x14001e145
   14001e143:	xor    ebx,ebx
   14001e145:	test   rbx,rbx
   14001e148:	je     0x14001e198
   14001e14a:	nop    WORD PTR [rax+rax*1+0x0]
   14001e150:	mov    eax,DWORD PTR [rbx+0x8]
   14001e153:	bt     eax,0x1d
   14001e157:	jae    0x14001e164
   14001e159:	and    eax,0xffffff
   14001e15e:	mov    DWORD PTR [rsp+0x30],eax
   14001e162:	jmp    0x14001e18b
   14001e164:	call   QWORD PTR [rip+0x1428e]        # 0x1400323f8
   14001e16a:	mov    r8d,DWORD PTR [rbx+0x8]
   14001e16e:	lea    rdx,[rsp+0x30]
   14001e173:	mov    rcx,rax
   14001e176:	and    r8d,0xffffff
   14001e17d:	mov    rax,QWORD PTR [rax]
   14001e180:	call   QWORD PTR [rax+0x48]
   14001e183:	mov    edx,DWORD PTR [rsp+0x38]
   14001e187:	mov    eax,DWORD PTR [rsp+0x30]
   14001e18b:	cmp    eax,edx
   14001e18d:	je     0x14001e1a0
   14001e18f:	mov    rbx,QWORD PTR [rbx+0xc]
   14001e193:	test   rbx,rbx
   14001e196:	jne    0x14001e150
   14001e198:	xor    eax,eax
   14001e19a:	add    rsp,0x20
   14001e19e:	pop    rbx
   14001e19f:	ret    
   14001e1a0:	mov    rax,rbx
   14001e1a3:	add    rsp,0x20
   14001e1a7:	pop    rbx
   14001e1a8:	ret    
   14001e1a9:	int3   
   14001e1aa:	int3   
   14001e1ab:	int3   
   14001e1ac:	int3   
   14001e1ad:	int3   
   14001e1ae:	int3   
   14001e1af:	int3   
   14001e1b0:	ret    0x0
   14001e1b3:	int3   
   14001e1b4:	int3   
   14001e1b5:	int3   
   14001e1b6:	int3   
   14001e1b7:	int3   
   14001e1b8:	int3   
   14001e1b9:	int3   
   14001e1ba:	int3   
   14001e1bb:	int3   
   14001e1bc:	int3   
   14001e1bd:	int3   
   14001e1be:	int3   
   14001e1bf:	int3   
   14001e1c0:	rex push rbx
   14001e1c2:	sub    rsp,0x20
   14001e1c6:	mov    edx,0x1
   14001e1cb:	mov    rbx,rcx
   14001e1ce:	call   0x140020b70
   14001e1d3:	test   al,al
   14001e1d5:	je     0x14001e1f4
   14001e1d7:	mov    ecx,DWORD PTR [rbx+0x10]
   14001e1da:	mov    eax,ecx
   14001e1dc:	sub    eax,DWORD PTR [rbx+0x24]
   14001e1df:	movsxd rdx,eax
   14001e1e2:	inc    ecx
   14001e1e4:	mov    rax,QWORD PTR [rbx]
   14001e1e7:	movzx  eax,BYTE PTR [rdx+rax*1]
   14001e1eb:	mov    DWORD PTR [rbx+0x10],ecx
   14001e1ee:	add    rsp,0x20
   14001e1f2:	pop    rbx
   14001e1f3:	ret    
   14001e1f4:	xor    al,al
   14001e1f6:	add    rsp,0x20
   14001e1fa:	pop    rbx
   14001e1fb:	ret    
   14001e1fc:	int3   
   14001e1fd:	int3   
   14001e1fe:	int3   
   14001e1ff:	int3   
   14001e200:	test   rcx,rcx
   14001e203:	je     0x14001e21a
   14001e205:	mov    eax,DWORD PTR [rcx+0x8]
   14001e208:	test   eax,0x7000000
   14001e20d:	jne    0x14001e21a
   14001e20f:	bt     eax,0x1e
   14001e213:	jae    0x14001e21a
   14001e215:	mov    rax,QWORD PTR [rcx]
   14001e218:	jmp    0x14001e21c
   14001e21a:	xor    eax,eax
   14001e21c:	test   rax,rax
   14001e21f:	je     0x14001e233
   14001e221:	test   DWORD PTR [rax+0x8],0x7000000
   14001e228:	jne    0x14001e233
   14001e22a:	mov    rax,QWORD PTR [rax+0xc]
   14001e22e:	test   rax,rax
   14001e231:	jne    0x14001e221
   14001e233:	ret    
   14001e234:	int3   
   14001e235:	int3   
   14001e236:	int3   
   14001e237:	int3   
   14001e238:	int3   
   14001e239:	int3   
   14001e23a:	int3   
   14001e23b:	int3   
   14001e23c:	int3   
   14001e23d:	int3   
   14001e23e:	int3   
   14001e23f:	int3   
   14001e240:	rex push rbx
   14001e242:	sub    rsp,0x20
   14001e246:	mov    ebx,r8d
   14001e249:	xor    r8d,r8d
   14001e24c:	call   0x14001ded0
   14001e251:	test   rax,rax
   14001e254:	je     0x14001e263
   14001e256:	mov    rcx,rax
   14001e259:	add    rsp,0x20
   14001e25d:	pop    rbx
   14001e25e:	jmp    0x14001e540
   14001e263:	mov    eax,ebx
   14001e265:	add    rsp,0x20
   14001e269:	pop    rbx
   14001e26a:	ret    
   14001e26b:	int3   
   14001e26c:	int3   
   14001e26d:	int3   
   14001e26e:	int3   
   14001e26f:	int3   
   14001e270:	rex push rbx
   14001e272:	sub    rsp,0x20
   14001e276:	mov    rbx,rcx
   14001e279:	test   rcx,rcx
   14001e27c:	je     0x14001e29c
   14001e27e:	call   QWORD PTR [rip+0x14174]        # 0x1400323f8
   14001e284:	mov    edx,DWORD PTR [rbx+0x8]
   14001e287:	mov    rcx,rax
   14001e28a:	and    edx,0xffffff
   14001e290:	mov    r8,QWORD PTR [rax]
   14001e293:	add    rsp,0x20
   14001e297:	pop    rbx
   14001e298:	rex.WB jmp QWORD PTR [r8+0x18]
   14001e29c:	lea    rax,[rip+0x144fd]        # 0x1400327a0
   14001e2a3:	add    rsp,0x20
   14001e2a7:	pop    rbx
   14001e2a8:	ret    
   14001e2a9:	int3   
   14001e2aa:	int3   
   14001e2ab:	int3   
   14001e2ac:	int3   
   14001e2ad:	int3   
   14001e2ae:	int3   
   14001e2af:	int3   
   14001e2b0:	mov    QWORD PTR [rsp+0x10],rbx
   14001e2b5:	push   rdi
   14001e2b6:	sub    rsp,0x20
   14001e2ba:	mov    rbx,rdx
   14001e2bd:	mov    rdi,rcx
   14001e2c0:	test   rcx,rcx
   14001e2c3:	je     0x14001e317
   14001e2c5:	mov    eax,DWORD PTR [rcx+0x8]
   14001e2c8:	bt     eax,0x1d
   14001e2cc:	jae    0x14001e2e3
   14001e2ce:	and    eax,0xffffff
   14001e2d3:	mov    DWORD PTR [rdx],eax
   14001e2d5:	mov    rax,rdx
   14001e2d8:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e2dd:	add    rsp,0x20
   14001e2e1:	pop    rdi
   14001e2e2:	ret    
   14001e2e3:	call   QWORD PTR [rip+0x1410f]        # 0x1400323f8
   14001e2e9:	mov    r8d,DWORD PTR [rdi+0x8]
   14001e2ed:	lea    rdx,[rsp+0x30]
   14001e2f2:	and    r8d,0xffffff
   14001e2f9:	mov    rcx,rax
   14001e2fc:	mov    r9,QWORD PTR [rax]
   14001e2ff:	call   QWORD PTR [r9+0x48]
   14001e303:	mov    eax,DWORD PTR [rsp+0x30]
   14001e307:	mov    DWORD PTR [rbx],eax
   14001e309:	mov    rax,rbx
   14001e30c:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e311:	add    rsp,0x20
   14001e315:	pop    rdi
   14001e316:	ret    
   14001e317:	mov    rax,rbx
   14001e31a:	mov    DWORD PTR [rdx],0xffffff
   14001e320:	mov    rbx,QWORD PTR [rsp+0x38]
   14001e325:	add    rsp,0x20
   14001e329:	pop    rdi
   14001e32a:	ret    
   14001e32b:	int3   
   14001e32c:	int3   
   14001e32d:	int3   
   14001e32e:	int3   
   14001e32f:	int3   
   14001e330:	test   rcx,rcx
   14001e333:	je     0x14001e353
   14001e335:	mov    rax,QWORD PTR [rcx+0xc]
   14001e339:	test   rax,rax
   14001e33c:	je     0x14001e355
   14001e33e:	xchg   ax,ax
   14001e340:	test   DWORD PTR [rax+0x8],0x7000000
   14001e347:	jne    0x14001e355
   14001e349:	mov    rax,QWORD PTR [rax+0xc]
   14001e34d:	test   rax,rax
   14001e350:	jne    0x14001e340
   14001e352:	ret    
   14001e353:	xor    eax,eax
   14001e355:	ret    
   14001e356:	int3   
   14001e357:	int3   
   14001e358:	int3   
   14001e359:	int3   
   14001e35a:	int3   
   14001e35b:	int3   
   14001e35c:	int3   
   14001e35d:	int3   
   14001e35e:	int3   
   14001e35f:	int3   
   14001e360:	mov    QWORD PTR [rsp+0x8],rbx
   14001e365:	push   rdi
   14001e366:	sub    rsp,0x20
   14001e36a:	mov    rbx,r8
   14001e36d:	mov    rdi,r9
   14001e370:	xor    r8d,r8d
   14001e373:	call   0x14001ded0
   14001e378:	test   rax,rax
   14001e37b:	je     0x14001e39a
   14001e37d:	mov    r9,QWORD PTR [rsp+0x50]
   14001e382:	mov    r8,rdi
   14001e385:	mov    rdx,rbx
   14001e388:	mov    rcx,rax
   14001e38b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e390:	add    rsp,0x20
   14001e394:	pop    rdi
   14001e395:	jmp    0x14001e5c0
   14001e39a:	mov    rax,rbx
   14001e39d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e3a2:	add    rsp,0x20
   14001e3a6:	pop    rdi
   14001e3a7:	ret    
   14001e3a8:	int3   
   14001e3a9:	int3   
   14001e3aa:	int3   
   14001e3ab:	int3   
   14001e3ac:	int3   
   14001e3ad:	int3   
   14001e3ae:	int3   
   14001e3af:	int3   
   14001e3b0:	rex push rbx
   14001e3b2:	sub    rsp,0x20
   14001e3b6:	mov    rbx,rcx
   14001e3b9:	mov    ecx,DWORD PTR [rcx+0x8]
   14001e3bc:	mov    eax,ecx
   14001e3be:	shr    eax,0x18
   14001e3c1:	and    eax,0x7
   14001e3c4:	sub    eax,0x1
   14001e3c7:	je     0x14001e412
   14001e3c9:	sub    eax,0x4
   14001e3cc:	je     0x14001e3f1
   14001e3ce:	cmp    eax,0x2
   14001e3d1:	jne    0x14001e438
   14001e3d3:	bt     ecx,0x1c
   14001e3d7:	jae    0x14001e438
   14001e3d9:	mov    rcx,QWORD PTR [rbx]
   14001e3dc:	lea    edx,[rax+0x6]
   14001e3df:	call   0x14002639c
   14001e3e4:	and    DWORD PTR [rbx+0x8],0xa8ffffff
   14001e3eb:	add    rsp,0x20
   14001e3ef:	pop    rbx
   14001e3f0:	ret    
   14001e3f1:	cmp    QWORD PTR [rbx],0x0
   14001e3f5:	je     0x14001e438
   14001e3f7:	bt     ecx,0x1c
   14001e3fb:	jae    0x14001e431
   14001e3fd:	call   QWORD PTR [rip+0x13ff5]        # 0x1400323f8
   14001e403:	mov    rdx,QWORD PTR [rbx]
   14001e406:	mov    rcx,rax
   14001e409:	mov    r8,QWORD PTR [rax]
   14001e40c:	call   QWORD PTR [r8+0x68]
   14001e410:	jmp    0x14001e431
   14001e412:	cmp    QWORD PTR [rbx],0x0
   14001e416:	je     0x14001e438
   14001e418:	bt     ecx,0x1c
   14001e41c:	jae    0x14001e431
   14001e41e:	call   QWORD PTR [rip+0x13fd4]        # 0x1400323f8
   14001e424:	mov    rdx,QWORD PTR [rbx]
   14001e427:	mov    rcx,rax
   14001e42a:	mov    r8,QWORD PTR [rax]
   14001e42d:	call   QWORD PTR [r8+0x58]
   14001e431:	mov    QWORD PTR [rbx],0x0
   14001e438:	and    DWORD PTR [rbx+0x8],0xa8ffffff
   14001e43f:	add    rsp,0x20
   14001e443:	pop    rbx
   14001e444:	ret    
   14001e445:	int3   
   14001e446:	int3   
   14001e447:	int3   
   14001e448:	int3   
   14001e449:	int3   
   14001e44a:	int3   
   14001e44b:	int3   
   14001e44c:	int3   
   14001e44d:	int3   
   14001e44e:	int3   
   14001e44f:	int3   
   14001e450:	mov    r9d,DWORD PTR [rdx+0x8]
   14001e454:	mov    r8,rcx
   14001e457:	test   r9d,0x7000000
   14001e45e:	jne    0x14001e471
   14001e460:	bt     r9d,0x1e
   14001e465:	jae    0x14001e471
   14001e467:	cmp    QWORD PTR [rdx],0x0
   14001e46b:	jne    0x14001e51b
   14001e471:	mov    eax,r9d
   14001e474:	lea    r10,[rip+0xfffffffffffe1b85]        # 0x140000000
   14001e47b:	shr    eax,0x18
   14001e47e:	and    eax,0x7
   14001e481:	mov    ecx,DWORD PTR [r10+rax*4+0x1e51c]
   14001e489:	add    rcx,r10
   14001e48c:	jmp    rcx
   14001e48e:	mov    rcx,r8
   14001e491:	jmp    0x14001e3b0
   14001e496:	bt     r9d,0x1c
   14001e49b:	jae    0x14001e4a0
   14001e49d:	mov    rdx,QWORD PTR [rdx]
   14001e4a0:	mov    rcx,r8
   14001e4a3:	jmp    0x14001e890
   14001e4a8:	mov    edx,DWORD PTR [rdx]
   14001e4aa:	mov    rcx,r8
   14001e4ad:	jmp    0x14001e820
   14001e4b2:	movss  xmm1,DWORD PTR [rdx]
   14001e4b6:	mov    rcx,r8
   14001e4b9:	jmp    0x14001e7e0
   14001e4be:	mov    rdx,QWORD PTR [rdx]
   14001e4c1:	mov    rcx,r8
   14001e4c4:	jmp    0x14001e850
   14001e4c9:	bt     r9d,0x1c
   14001e4ce:	jae    0x14001e4d3
   14001e4d0:	mov    rdx,QWORD PTR [rdx]
   14001e4d3:	mov    rcx,r8
   14001e4d6:	jmp    0x14001ea30
   14001e4db:	bt     r9d,0x1c
   14001e4e0:	jae    0x14001e4e5
   14001e4e2:	mov    rdx,QWORD PTR [rdx]
   14001e4e5:	mov    rdx,QWORD PTR [rdx]
   14001e4e8:	mov    rcx,r8
   14001e4eb:	jmp    0x14001e9f0
   14001e4f0:	movzx  eax,BYTE PTR [rdx]
   14001e4f3:	mov    rcx,r8
   14001e4f6:	mov    BYTE PTR [rsp+0x10],al
   14001e4fa:	movzx  eax,BYTE PTR [rdx+0x1]
   14001e4fe:	mov    BYTE PTR [rsp+0x11],al
   14001e502:	movzx  eax,BYTE PTR [rdx+0x2]
   14001e506:	mov    BYTE PTR [rsp+0x12],al
   14001e50a:	movzx  eax,BYTE PTR [rdx+0x3]
   14001e50e:	mov    BYTE PTR [rsp+0x13],al
   14001e512:	mov    edx,DWORD PTR [rsp+0x10]
   14001e516:	jmp    0x14001e790
   14001e51b:	ret    
   14001e51c:	mov    fs,esp
   14001e51e:	add    DWORD PTR [rax],eax
   14001e520:	xchg   esi,eax
   14001e521:	in     al,0x1
   14001e523:	add    BYTE PTR [rax-0x4dfffe1c],ch
   14001e529:	in     al,0x1
   14001e52b:	add    BYTE PTR [rsi-0x36fffe1c],bh
   14001e531:	in     al,0x1
   14001e533:	add    al,dh
   14001e535:	in     al,0x1
   14001e537:	add    bl,bl
   14001e539:	in     al,0x1
   14001e53b:	add    ah,cl
   14001e53d:	int3   
   14001e53e:	int3   
   14001e53f:	int3   
   14001e540:	mov    r8d,DWORD PTR [rcx+0x8]
   14001e544:	lea    r9,[rip+0xfffffffffffe1ab5]        # 0x140000000
   14001e54b:	mov    eax,r8d
   14001e54e:	shr    eax,0x18
   14001e551:	and    eax,0x7
   14001e554:	mov    edx,DWORD PTR [r9+rax*4+0x1e594]
   14001e55c:	add    rdx,r9
   14001e55f:	jmp    rdx
   14001e561:	mov    eax,DWORD PTR [rcx]
   14001e563:	ret    
   14001e564:	bt     r8d,0x1c
   14001e569:	jae    0x14001e56e
   14001e56b:	mov    rcx,QWORD PTR [rcx]
   14001e56e:	rex.W jmp QWORD PTR [rip+0x13d23]        # 0x140032298
   14001e575:	bt     r8d,0x1c
   14001e57a:	jae    0x14001e57f
   14001e57c:	mov    rcx,QWORD PTR [rcx]
   14001e57f:	xor    edx,edx
   14001e581:	lea    r8d,[rdx+0xa]
   14001e585:	rex.W jmp QWORD PTR [rip+0x13e84]        # 0x140032410
   14001e58c:	cvttss2si eax,DWORD PTR [rcx]
   14001e590:	ret    
   14001e591:	xor    eax,eax
   14001e593:	ret    
   14001e594:	(bad)  
   14001e595:	in     eax,0x1
   14001e597:	add    BYTE PTR [rbp+riz*8+0x1],ah
   14001e59b:	add    BYTE PTR [rcx-0x1b],ah
   14001e59e:	add    DWORD PTR [rax],eax
   14001e5a0:	mov    ebp,fs
   14001e5a2:	add    DWORD PTR [rax],eax
   14001e5a4:	(bad)  
   14001e5a5:	in     eax,0x1
   14001e5a7:	add    BYTE PTR [rbp-0x1b],dh
   14001e5aa:	add    DWORD PTR [rax],eax
   14001e5ac:	(bad)  
   14001e5ad:	in     eax,0x1
   14001e5af:	add    BYTE PTR [rcx-0x33fffe1b],dl
   14001e5b5:	int3   
   14001e5b6:	int3   
   14001e5b7:	int3   
   14001e5b8:	int3   
   14001e5b9:	int3   
   14001e5ba:	int3   
   14001e5bb:	int3   
   14001e5bc:	int3   
   14001e5bd:	int3   
   14001e5be:	int3   
   14001e5bf:	int3   
   14001e5c0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e5c5:	mov    QWORD PTR [rsp+0x10],rbp
   14001e5ca:	mov    QWORD PTR [rsp+0x18],rsi
   14001e5cf:	push   rdi
   14001e5d0:	sub    rsp,0x820
   14001e5d7:	mov    rbx,rcx
   14001e5da:	mov    rsi,rdx
   14001e5dd:	mov    ecx,DWORD PTR [rcx+0x8]
   14001e5e0:	lea    rdx,[rip+0xfffffffffffe1a19]        # 0x140000000
   14001e5e7:	mov    eax,ecx
   14001e5e9:	mov    rbp,r9
   14001e5ec:	shr    eax,0x18
   14001e5ef:	mov    rdi,r8
   14001e5f2:	and    eax,0x7
   14001e5f5:	mov    r10d,DWORD PTR [rdx+rax*4+0x1e74c]
   14001e5fd:	add    r10,rdx
   14001e600:	jmp    r10
   14001e603:	mov    rax,rsi
   14001e606:	jmp    0x14001e616
   14001e608:	test   ecx,0x10000000
   14001e60e:	je     0x14001e613
   14001e610:	mov    rbx,QWORD PTR [rbx]
   14001e613:	mov    rax,rbx
   14001e616:	lea    r11,[rsp+0x820]
   14001e61e:	mov    rbx,QWORD PTR [r11+0x10]
   14001e622:	mov    rbp,QWORD PTR [r11+0x18]
   14001e626:	mov    rsi,QWORD PTR [r11+0x20]
   14001e62a:	mov    rsp,r11
   14001e62d:	pop    rdi
   14001e62e:	ret    
   14001e62f:	mov    r9d,DWORD PTR [rbx]
   14001e632:	lea    r8,[rip+0x18933]        # 0x140036f6c
   14001e639:	mov    edx,0x800
   14001e63e:	lea    rcx,[rsp+0x20]
   14001e643:	call   QWORD PTR [rip+0x13f27]        # 0x140032570
   14001e649:	test   rdi,rdi
   14001e64c:	je     0x14001e66d
   14001e64e:	cmp    ebp,eax
   14001e650:	jle    0x14001e66d
   14001e652:	add    eax,0x1
   14001e655:	jns    0x14001e658
   14001e657:	int3   
   14001e658:	movsxd r8,eax
   14001e65b:	lea    rdx,[rsp+0x20]
   14001e660:	mov    rcx,rdi
   14001e663:	call   0x140026f70
   14001e668:	mov    rax,rdi
   14001e66b:	jmp    0x14001e616
   14001e66d:	lea    rdx,[rsp+0x20]
   14001e672:	mov    rcx,rbx
   14001e675:	call   0x14001e890
   14001e67a:	test   DWORD PTR [rbx+0x8],0x10000000
   14001e681:	jmp    0x14001e60e
   14001e683:	movss  xmm3,DWORD PTR [rbx]
   14001e687:	lea    r8,[rip+0x17d8e]        # 0x14003641c
   14001e68e:	cvtps2pd xmm3,xmm3
   14001e691:	mov    edx,0x800
   14001e696:	lea    rcx,[rsp+0x20]
   14001e69b:	movq   r9,xmm3
   14001e6a0:	call   QWORD PTR [rip+0x13eca]        # 0x140032570
   14001e6a6:	jmp    0x14001e649
   14001e6a8:	mov    r9,QWORD PTR [rbx]
   14001e6ab:	lea    r8,[rip+0x14102]        # 0x1400327b4
   14001e6b2:	mov    edx,0x800
   14001e6b7:	lea    rcx,[rsp+0x20]
   14001e6bc:	call   QWORD PTR [rip+0x13eae]        # 0x140032570
   14001e6c2:	jmp    0x14001e649
   14001e6c4:	bt     ecx,0x1c
   14001e6c8:	jae    0x14001e6cf
   14001e6ca:	mov    rcx,QWORD PTR [rbx]
   14001e6cd:	jmp    0x14001e6d2
   14001e6cf:	mov    rcx,rbx
   14001e6d2:	mov    r9d,0x4
   14001e6d8:	lea    rdx,[rsp+0x20]
   14001e6dd:	mov    r8d,0x800
   14001e6e3:	call   QWORD PTR [rip+0x13b87]        # 0x140032270
   14001e6e9:	test   eax,eax
   14001e6eb:	je     0x14001e603
   14001e6f1:	test   rdi,rdi
   14001e6f4:	je     0x14001e66d
   14001e6fa:	lea    rcx,[rsp+0x20]
   14001e6ff:	or     rax,0xffffffffffffffff
   14001e703:	inc    rax
   14001e706:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001e70a:	jne    0x14001e703
   14001e70c:	cmp    ebp,eax
   14001e70e:	jle    0x14001e66d
   14001e714:	lea    ecx,[rax+0x1]
   14001e717:	test   ecx,ecx
   14001e719:	jns    0x14001e71c
   14001e71b:	int3   
   14001e71c:	movsxd r8,ecx
   14001e71f:	lea    rdx,[rsp+0x20]
   14001e724:	mov    rcx,rdi
   14001e727:	call   0x140026f70
   14001e72c:	mov    rax,rdi
   14001e72f:	jmp    0x14001e616
   14001e734:	bt     ecx,0x1c
   14001e738:	jae    0x14001e6a8
   14001e73e:	mov    rax,QWORD PTR [rbx]
   14001e741:	mov    r9,QWORD PTR [rax]
   14001e744:	jmp    0x14001e6ab
   14001e749:	nop    DWORD PTR [rax]
   14001e74c:	add    esp,esi
   14001e74e:	add    DWORD PTR [rax],eax
   14001e750:	or     dh,ah
   14001e752:	add    DWORD PTR [rax],eax
   14001e754:	(bad)  
   14001e755:	out    0x1,al
   14001e757:	add    BYTE PTR [rbx-0x57fffe1a],al
   14001e75d:	out    0x1,al
   14001e75f:	add    ah,al
   14001e761:	out    0x1,al
   14001e763:	add    BYTE PTR [rbx],al
   14001e765:	out    0x1,al
   14001e767:	add    BYTE PTR [rdi+riz*8],dh
   14001e76a:	add    DWORD PTR [rax],eax
   14001e76c:	int3   
   14001e76d:	int3   
   14001e76e:	int3   
   14001e76f:	int3   
   14001e770:	mov    eax,DWORD PTR [rcx+0x8]
   14001e773:	test   eax,0x7000000
   14001e778:	jne    0x14001e784
   14001e77a:	bt     eax,0x1e
   14001e77e:	jae    0x14001e784
   14001e780:	mov    rax,QWORD PTR [rcx]
   14001e783:	ret    
   14001e784:	xor    eax,eax
   14001e786:	ret    
   14001e787:	int3   
   14001e788:	int3   
   14001e789:	int3   
   14001e78a:	int3   
   14001e78b:	int3   
   14001e78c:	int3   
   14001e78d:	int3   
   14001e78e:	int3   
   14001e78f:	int3   
   14001e790:	mov    DWORD PTR [rsp+0x10],edx
   14001e794:	push   rbx
   14001e795:	sub    rsp,0x20
   14001e799:	mov    rbx,rcx
   14001e79c:	call   0x14001e3b0
   14001e7a1:	and    DWORD PTR [rbx+0x8],0xfeffffff
   14001e7a8:	or     DWORD PTR [rbx+0x8],0x6000000
   14001e7af:	movzx  eax,BYTE PTR [rsp+0x38]
   14001e7b4:	mov    BYTE PTR [rbx],al
   14001e7b6:	movzx  eax,BYTE PTR [rsp+0x39]
   14001e7bb:	mov    BYTE PTR [rbx+0x1],al
   14001e7be:	movzx  eax,BYTE PTR [rsp+0x3a]
   14001e7c3:	mov    BYTE PTR [rbx+0x2],al
   14001e7c6:	movzx  eax,BYTE PTR [rsp+0x3b]
   14001e7cb:	mov    BYTE PTR [rbx+0x3],al
   14001e7ce:	add    rsp,0x20
   14001e7d2:	pop    rbx
   14001e7d3:	ret    
   14001e7d4:	int3   
   14001e7d5:	int3   
   14001e7d6:	int3   
   14001e7d7:	int3   
   14001e7d8:	int3   
   14001e7d9:	int3   
   14001e7da:	int3   
   14001e7db:	int3   
   14001e7dc:	int3   
   14001e7dd:	int3   
   14001e7de:	int3   
   14001e7df:	int3   
   14001e7e0:	rex push rbx
   14001e7e2:	sub    rsp,0x30
   14001e7e6:	movaps XMMWORD PTR [rsp+0x20],xmm6
   14001e7eb:	mov    rbx,rcx
   14001e7ee:	movaps xmm6,xmm1
   14001e7f1:	call   0x14001e3b0
   14001e7f6:	and    DWORD PTR [rbx+0x8],0xfbffffff
   14001e7fd:	or     DWORD PTR [rbx+0x8],0x3000000
   14001e804:	movss  DWORD PTR [rbx],xmm6
   14001e808:	movaps xmm6,XMMWORD PTR [rsp+0x20]
   14001e80d:	add    rsp,0x30
   14001e811:	pop    rbx
   14001e812:	ret    
   14001e813:	int3   
   14001e814:	int3   
   14001e815:	int3   
   14001e816:	int3   
   14001e817:	int3   
   14001e818:	int3   
   14001e819:	int3   
   14001e81a:	int3   
   14001e81b:	int3   
   14001e81c:	int3   
   14001e81d:	int3   
   14001e81e:	int3   
   14001e81f:	int3   
   14001e820:	mov    QWORD PTR [rsp+0x8],rbx
   14001e825:	push   rdi
   14001e826:	sub    rsp,0x20
   14001e82a:	mov    ebx,edx
   14001e82c:	mov    rdi,rcx
   14001e82f:	call   0x14001e3b0
   14001e834:	and    DWORD PTR [rdi+0x8],0xfaffffff
   14001e83b:	or     DWORD PTR [rdi+0x8],0x2000000
   14001e842:	mov    DWORD PTR [rdi],ebx
   14001e844:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e849:	add    rsp,0x20
   14001e84d:	pop    rdi
   14001e84e:	ret    
   14001e84f:	int3   
   14001e850:	mov    QWORD PTR [rsp+0x8],rbx
   14001e855:	push   rdi
   14001e856:	sub    rsp,0x20
   14001e85a:	mov    rbx,rdx
   14001e85d:	mov    rdi,rcx
   14001e860:	call   0x14001e3b0
   14001e865:	and    DWORD PTR [rdi+0x8],0xfcffffff
   14001e86c:	or     DWORD PTR [rdi+0x8],0x4000000
   14001e873:	mov    QWORD PTR [rdi],rbx
   14001e876:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e87b:	add    rsp,0x20
   14001e87f:	pop    rdi
   14001e880:	ret    
   14001e881:	int3   
   14001e882:	int3   
   14001e883:	int3   
   14001e884:	int3   
   14001e885:	int3   
   14001e886:	int3   
   14001e887:	int3   
   14001e888:	int3   
   14001e889:	int3   
   14001e88a:	int3   
   14001e88b:	int3   
   14001e88c:	int3   
   14001e88d:	int3   
   14001e88e:	int3   
   14001e88f:	int3   
   14001e890:	mov    QWORD PTR [rsp+0x8],rbx
   14001e895:	mov    QWORD PTR [rsp+0x10],rbp
   14001e89a:	mov    QWORD PTR [rsp+0x18],rsi
   14001e89f:	mov    QWORD PTR [rsp+0x20],rdi
   14001e8a4:	push   r14
   14001e8a6:	sub    rsp,0x20
   14001e8aa:	test   rdx,rdx
   14001e8ad:	lea    rdi,[rip+0x13eec]        # 0x1400327a0
   14001e8b4:	mov    rbx,rcx
   14001e8b7:	cmovne rdi,rdx
   14001e8bb:	or     rax,0xffffffffffffffff
   14001e8bf:	nop
   14001e8c0:	cmp    BYTE PTR [rdi+rax*1+0x1],0x0
   14001e8c5:	lea    rax,[rax+0x1]
   14001e8c9:	jne    0x14001e8c0
   14001e8cb:	lea    esi,[rax+0x1]
   14001e8ce:	xor    ebp,ebp
   14001e8d0:	mov    rax,QWORD PTR [rcx]
   14001e8d3:	mov    r14,rdi
   14001e8d6:	test   rax,rax
   14001e8d9:	je     0x14001e90f
   14001e8db:	cmp    rax,rdi
   14001e8de:	jne    0x14001e90f
   14001e8e0:	mov    rax,QWORD PTR [rip+0x13aa9]        # 0x140032390
   14001e8e7:	movsxd r14,esi
   14001e8ea:	mov    rdx,r14
   14001e8ed:	mov    rcx,QWORD PTR [rax]
   14001e8f0:	mov    rax,QWORD PTR [rcx]
   14001e8f3:	call   QWORD PTR [rax+0x8]
   14001e8f6:	mov    rbp,rax
   14001e8f9:	test   esi,esi
   14001e8fb:	jns    0x14001e8fe
   14001e8fd:	int3   
   14001e8fe:	mov    r8,r14
   14001e901:	mov    rdx,rdi
   14001e904:	mov    rcx,rbp
   14001e907:	call   0x140026f70
   14001e90c:	mov    r14,rbp
   14001e90f:	mov    rcx,rbx
   14001e912:	call   0x14001e3b0
   14001e917:	cmp    esi,0x8
   14001e91a:	ja     0x14001e938
   14001e91c:	test   esi,esi
   14001e91e:	jns    0x14001e921
   14001e920:	int3   
   14001e921:	movsxd r8,esi
   14001e924:	mov    rdx,r14
   14001e927:	mov    rcx,rbx
   14001e92a:	call   0x140026f70
   14001e92f:	and    DWORD PTR [rbx+0x8],0xefffffff
   14001e936:	jmp    0x14001e955
   14001e938:	call   QWORD PTR [rip+0x13aba]        # 0x1400323f8
   14001e93e:	mov    rdx,r14
   14001e941:	mov    rcx,rax
   14001e944:	mov    r8,QWORD PTR [rax]
   14001e947:	call   QWORD PTR [r8+0x50]
   14001e94b:	or     DWORD PTR [rbx+0x8],0x10000000
   14001e952:	mov    QWORD PTR [rbx],rax
   14001e955:	and    DWORD PTR [rbx+0x8],0xf9ffffff
   14001e95c:	or     DWORD PTR [rbx+0x8],0x1000000
   14001e963:	test   rbp,rbp
   14001e966:	je     0x14001e97b
   14001e968:	mov    rax,QWORD PTR [rip+0x13a21]        # 0x140032390
   14001e96f:	mov    rdx,rbp
   14001e972:	mov    rcx,QWORD PTR [rax]
   14001e975:	mov    rax,QWORD PTR [rcx]
   14001e978:	call   QWORD PTR [rax+0x28]
   14001e97b:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e980:	mov    rbp,QWORD PTR [rsp+0x38]
   14001e985:	mov    rsi,QWORD PTR [rsp+0x40]
   14001e98a:	mov    rdi,QWORD PTR [rsp+0x48]
   14001e98f:	add    rsp,0x20
   14001e993:	pop    r14
   14001e995:	ret    
   14001e996:	int3   
   14001e997:	int3   
   14001e998:	int3   
   14001e999:	int3   
   14001e99a:	int3   
   14001e99b:	int3   
   14001e99c:	int3   
   14001e99d:	int3   
   14001e99e:	int3   
   14001e99f:	int3   
   14001e9a0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9a5:	push   rdi
   14001e9a6:	sub    rsp,0x20
   14001e9aa:	mov    rdi,rdx
   14001e9ad:	mov    rbx,rcx
   14001e9b0:	test   rdx,rdx
   14001e9b3:	jne    0x14001e9c7
   14001e9b5:	and    DWORD PTR [rcx+0x8],0xbfffffff
   14001e9bc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e9c1:	add    rsp,0x20
   14001e9c5:	pop    rdi
   14001e9c6:	ret    
   14001e9c7:	test   DWORD PTR [rcx+0x8],0x7000000
   14001e9ce:	je     0x14001e9d5
   14001e9d0:	call   0x14001e3b0
   14001e9d5:	or     DWORD PTR [rbx+0x8],0x40000000
   14001e9dc:	mov    QWORD PTR [rbx],rdi
   14001e9df:	mov    rbx,QWORD PTR [rsp+0x30]
   14001e9e4:	add    rsp,0x20
   14001e9e8:	pop    rdi
   14001e9e9:	ret    
   14001e9ea:	int3   
   14001e9eb:	int3   
   14001e9ec:	int3   
   14001e9ed:	int3   
   14001e9ee:	int3   
   14001e9ef:	int3   
   14001e9f0:	mov    QWORD PTR [rsp+0x8],rbx
   14001e9f5:	push   rdi
   14001e9f6:	sub    rsp,0x20
   14001e9fa:	mov    rbx,rdx
   14001e9fd:	mov    rdi,rcx
   14001ea00:	call   0x14001e3b0
   14001ea05:	and    DWORD PTR [rdi+0x8],0xefffffff
   14001ea0c:	or     DWORD PTR [rdi+0x8],0x7000000
   14001ea13:	mov    QWORD PTR [rdi],rbx
   14001ea16:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ea1b:	add    rsp,0x20
   14001ea1f:	pop    rdi
   14001ea20:	ret    
   14001ea21:	int3   
   14001ea22:	int3   
   14001ea23:	int3   
   14001ea24:	int3   
   14001ea25:	int3   
   14001ea26:	int3   
   14001ea27:	int3   
   14001ea28:	int3   
   14001ea29:	int3   
   14001ea2a:	int3   
   14001ea2b:	int3   
   14001ea2c:	int3   
   14001ea2d:	int3   
   14001ea2e:	int3   
   14001ea2f:	int3   
   14001ea30:	mov    QWORD PTR [rsp+0x8],rbx
   14001ea35:	mov    QWORD PTR [rsp+0x10],rbp
   14001ea3a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ea3f:	mov    QWORD PTR [rsp+0x20],rdi
   14001ea44:	push   r14
   14001ea46:	sub    rsp,0x20
   14001ea4a:	test   rdx,rdx
   14001ea4d:	lea    rbp,[rip+0x19168]        # 0x140037bbc
   14001ea54:	mov    rsi,rcx
   14001ea57:	cmovne rbp,rdx
   14001ea5b:	or     rdi,0xffffffffffffffff
   14001ea5f:	nop
   14001ea60:	inc    rdi
   14001ea63:	cmp    WORD PTR [rbp+rdi*2+0x0],0x0
   14001ea69:	jne    0x14001ea60
   14001ea6b:	mov    rax,QWORD PTR [rcx]
   14001ea6e:	inc    edi
   14001ea70:	xor    r14d,r14d
   14001ea73:	mov    rbx,rbp
   14001ea76:	test   rax,rax
   14001ea79:	je     0x14001eaad
   14001ea7b:	cmp    rax,rbp
   14001ea7e:	jne    0x14001eaad
   14001ea80:	mov    rax,QWORD PTR [rip+0x13909]        # 0x140032390
   14001ea87:	movsxd rbx,edi
   14001ea8a:	add    rbx,rbx
   14001ea8d:	mov    rdx,rbx
   14001ea90:	mov    rcx,QWORD PTR [rax]
   14001ea93:	mov    rax,QWORD PTR [rcx]
   14001ea96:	call   QWORD PTR [rax+0x8]
   14001ea99:	mov    r8,rbx
   14001ea9c:	mov    rdx,rbp
   14001ea9f:	mov    rcx,rax
   14001eaa2:	mov    r14,rax
   14001eaa5:	call   0x140026f70
   14001eaaa:	mov    rbx,r14
   14001eaad:	mov    rcx,rsi
   14001eab0:	call   0x14001e3b0
   14001eab5:	movsxd r8,edi
   14001eab8:	add    r8,r8
   14001eabb:	cmp    r8,0x8
   14001eabf:	ja     0x14001ead5
   14001eac1:	mov    rdx,rbx
   14001eac4:	mov    rcx,rsi
   14001eac7:	call   0x140026f70
   14001eacc:	and    DWORD PTR [rsi+0x8],0xefffffff
   14001ead3:	jmp    0x14001eaf2
   14001ead5:	call   QWORD PTR [rip+0x1391d]        # 0x1400323f8
   14001eadb:	mov    rdx,rbx
   14001eade:	mov    rcx,rax
   14001eae1:	mov    r8,QWORD PTR [rax]
   14001eae4:	call   QWORD PTR [r8+0x60]
   14001eae8:	or     DWORD PTR [rsi+0x8],0x10000000
   14001eaef:	mov    QWORD PTR [rsi],rax
   14001eaf2:	and    DWORD PTR [rsi+0x8],0xfdffffff
   14001eaf9:	or     DWORD PTR [rsi+0x8],0x5000000
   14001eb00:	test   r14,r14
   14001eb03:	je     0x14001eb18
   14001eb05:	mov    rax,QWORD PTR [rip+0x13884]        # 0x140032390
   14001eb0c:	mov    rdx,r14
   14001eb0f:	mov    rcx,QWORD PTR [rax]
   14001eb12:	mov    rax,QWORD PTR [rcx]
   14001eb15:	call   QWORD PTR [rax+0x28]
   14001eb18:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eb1d:	mov    rbp,QWORD PTR [rsp+0x38]
   14001eb22:	mov    rsi,QWORD PTR [rsp+0x40]
   14001eb27:	mov    rdi,QWORD PTR [rsp+0x48]
   14001eb2c:	add    rsp,0x20
   14001eb30:	pop    r14
   14001eb32:	ret    
   14001eb33:	int3   
   14001eb34:	int3   
   14001eb35:	int3   
   14001eb36:	int3   
   14001eb37:	int3   
   14001eb38:	int3   
   14001eb39:	int3   
   14001eb3a:	int3   
   14001eb3b:	int3   
   14001eb3c:	int3   
   14001eb3d:	int3   
   14001eb3e:	int3   
   14001eb3f:	int3   
   14001eb40:	mov    QWORD PTR [rsp+0x18],rbp
   14001eb45:	push   rsi
   14001eb46:	push   r14
   14001eb48:	push   r15
   14001eb4a:	sub    rsp,0x80
   14001eb51:	mov    rbp,r9
   14001eb54:	mov    rsi,r8
   14001eb57:	mov    r14,rdx
   14001eb5a:	mov    r15,rcx
   14001eb5d:	test   r8,r8
   14001eb60:	jne    0x14001eb69
   14001eb62:	mov    al,0x1
   14001eb64:	jmp    0x14001ec96
   14001eb69:	mov    QWORD PTR [rsp+0xa0],rbx
   14001eb71:	or     rbx,0xffffffffffffffff
   14001eb75:	inc    rbx
   14001eb78:	cmp    BYTE PTR [r8+rbx*1],0x0
   14001eb7d:	jne    0x14001eb75
   14001eb7f:	cmp    ebx,0x3
   14001eb82:	jle    0x14001eb9f
   14001eb84:	cmp    BYTE PTR [r8],0xef
   14001eb88:	jne    0x14001eb9f
   14001eb8a:	cmp    BYTE PTR [r8+0x1],0xbb
   14001eb8f:	jne    0x14001eb9f
   14001eb91:	cmp    BYTE PTR [r8+0x2],0xbf
   14001eb96:	jne    0x14001eb9f
   14001eb98:	add    rsi,0x3
   14001eb9c:	sub    ebx,0x3
   14001eb9f:	mov    r9d,0x9
   14001eba5:	lea    rcx,[rsp+0x40]
   14001ebaa:	mov    r8d,ebx
   14001ebad:	mov    rdx,rsi
   14001ebb0:	call   0x140020940
   14001ebb5:	cmp    ebx,0x2
   14001ebb8:	jle    0x14001ec29
   14001ebba:	cmp    BYTE PTR [rsi],0xff
   14001ebbd:	jne    0x14001ec29
   14001ebbf:	cmp    BYTE PTR [rsi+0x1],0xfe
   14001ebc3:	jne    0x14001ec29
   14001ebc5:	mov    r9d,0x4
   14001ebcb:	mov    QWORD PTR [rsp+0xa8],rdi
   14001ebd3:	xor    r8d,r8d
   14001ebd6:	lea    rcx,[rsi+0x2]
   14001ebda:	xor    edx,edx
   14001ebdc:	call   QWORD PTR [rip+0x1368e]        # 0x140032270
   14001ebe2:	movsxd rdi,eax
   14001ebe5:	mov    rcx,rdi
   14001ebe8:	call   0x140007bf0
   14001ebed:	mov    r9d,0x4
   14001ebf3:	lea    rcx,[rsi+0x2]
   14001ebf7:	mov    r8d,edi
   14001ebfa:	mov    rdx,rax
   14001ebfd:	mov    rbx,rax
   14001ec00:	call   QWORD PTR [rip+0x1366a]        # 0x140032270
   14001ec06:	mov    r9d,edi
   14001ec09:	mov    DWORD PTR [rsp+0x20],0x9
   14001ec11:	mov    r8d,edi
   14001ec14:	lea    rcx,[rsp+0x40]
   14001ec19:	mov    rdx,rbx
   14001ec1c:	call   0x140020a50
   14001ec21:	mov    rdi,QWORD PTR [rsp+0xa8]
   14001ec29:	mov    rax,QWORD PTR [rsp+0xd0]
   14001ec31:	lea    r8,[rsp+0x40]
   14001ec36:	mov    QWORD PTR [rsp+0x30],rax
   14001ec3b:	mov    r9,rbp
   14001ec3e:	mov    rax,QWORD PTR [rsp+0xc8]
   14001ec46:	mov    rdx,r14
   14001ec49:	mov    QWORD PTR [rsp+0x28],rax
   14001ec4e:	mov    rcx,r15
   14001ec51:	mov    rax,QWORD PTR [rsp+0xc0]
   14001ec59:	mov    QWORD PTR [rsp+0x20],rax
   14001ec5e:	call   0x14001ecb0
   14001ec63:	test   DWORD PTR [rsp+0x4c],0xc0000000
   14001ec6b:	movzx  ebx,al
   14001ec6e:	jne    0x14001ec8b
   14001ec70:	mov    rdx,QWORD PTR [rsp+0x40]
   14001ec75:	test   rdx,rdx
   14001ec78:	je     0x14001ec8b
   14001ec7a:	mov    rcx,QWORD PTR [rip+0x1370f]        # 0x140032390
   14001ec81:	mov    rcx,QWORD PTR [rcx]
   14001ec84:	mov    r8,QWORD PTR [rcx]
   14001ec87:	call   QWORD PTR [r8+0x28]
   14001ec8b:	movzx  eax,bl
   14001ec8e:	mov    rbx,QWORD PTR [rsp+0xa0]
   14001ec96:	mov    rbp,QWORD PTR [rsp+0xb0]
   14001ec9e:	add    rsp,0x80
   14001eca5:	pop    r15
   14001eca7:	pop    r14
   14001eca9:	pop    rsi
   14001ecaa:	ret    
   14001ecab:	int3   
   14001ecac:	int3   
   14001ecad:	int3   
   14001ecae:	int3   
   14001ecaf:	int3   
   14001ecb0:	mov    QWORD PTR [rsp+0x20],r9
   14001ecb5:	mov    QWORD PTR [rsp+0x18],r8
   14001ecba:	push   rbp
   14001ecbb:	push   rbx
   14001ecbc:	push   rsi
   14001ecbd:	push   rdi
   14001ecbe:	push   r12
   14001ecc0:	push   r13
   14001ecc2:	push   r14
   14001ecc4:	push   r15
   14001ecc6:	lea    rbp,[rsp-0x80e8]
   14001ecce:	mov    eax,0x81e8
   14001ecd3:	call   0x1400263c0
   14001ecd8:	sub    rsp,rax
   14001ecdb:	xor    r15d,r15d
   14001ecde:	lea    rax,[rbp-0x70]
   14001ece2:	mov    r12,rdx
   14001ece5:	mov    DWORD PTR [rsp+0x60],r15d
   14001ecea:	mov    r13,rcx
   14001eced:	mov    QWORD PTR [rsp+0x68],r15
   14001ecf2:	mov    rbx,rcx
   14001ecf5:	mov    QWORD PTR [rsp+0x70],r15
   14001ecfa:	lea    ecx,[r15+0x4]
   14001ecfe:	mov    DWORD PTR [rsp+0x40],r15d
   14001ed03:	mov    rdi,r8
   14001ed06:	mov    QWORD PTR [rsp+0x48],r15
   14001ed0b:	mov    r14d,r15d
   14001ed0e:	mov    QWORD PTR [rsp+0x50],r15
   14001ed13:	movabs rdx,0xffffff00ffffff
   14001ed1d:	nop    DWORD PTR [rax]
   14001ed20:	mov    QWORD PTR [rax],rdx
   14001ed23:	mov    QWORD PTR [rax+0x8],rdx
   14001ed27:	mov    QWORD PTR [rax+0x10],rdx
   14001ed2b:	lea    rax,[rax+0x40]
   14001ed2f:	mov    QWORD PTR [rax-0x28],rdx
   14001ed33:	mov    QWORD PTR [rax-0x20],rdx
   14001ed37:	mov    QWORD PTR [rax-0x18],rdx
   14001ed3b:	mov    QWORD PTR [rax-0x10],rdx
   14001ed3f:	mov    QWORD PTR [rax-0x8],rdx
   14001ed43:	sub    rcx,0x1
   14001ed47:	jne    0x14001ed20
   14001ed49:	lea    rax,[rip+0x18150]        # 0x140036ea0
   14001ed50:	mov    QWORD PTR [rbp+0x98],r15
   14001ed57:	mov    QWORD PTR [rbp+0x90],rax
   14001ed5e:	lea    rcx,[rbp+0xa1]
   14001ed65:	lea    rax,[rip+0x18e64]        # 0x140037bd0
   14001ed6c:	mov    BYTE PTR [rbp+0xa0],r14b
   14001ed73:	mov    QWORD PTR [rbp+0xa1],rax
   14001ed7a:	mov    rax,QWORD PTR [rbp+0x8160]
   14001ed81:	test   rax,rax
   14001ed84:	cmovne rcx,rax
   14001ed88:	mov    QWORD PTR [rbp+0xb0],rcx
   14001ed8f:	mov    rax,QWORD PTR [rcx]
   14001ed92:	call   QWORD PTR [rax]
   14001ed94:	lea    rax,[rbp-0x70]
   14001ed98:	mov    DWORD PTR [rbp+0x80d8],r15d
   14001ed9f:	mov    DWORD PTR [rbp+0x9c],r15d
   14001eda6:	mov    r15,QWORD PTR [rbp+0x8158]
   14001edad:	mov    QWORD PTR [rbp+0xc0],rax
   14001edb4:	mov    QWORD PTR [rbp+0xc8],r13
   14001edbb:	mov    QWORD PTR [rbp+0xd0],rdi
   14001edc2:	mov    WORD PTR [rbp+0x80dc],r14w
   14001edca:	mov    BYTE PTR [rbp+0x80de],r14b
   14001edd1:	mov    BYTE PTR [rbp+0xd8],r14b
   14001edd8:	mov    QWORD PTR [rbp+0x90],r12
   14001eddf:	nop
   14001ede0:	lea    r8,[rbp+0x8130]
   14001ede7:	mov    sil,0x1
   14001edea:	lea    rdx,[rbp+0x8160]
   14001edf1:	lea    rcx,[rbp+0xc0]
   14001edf8:	call   0x14001fa00
   14001edfd:	mov    rdi,rax
   14001ee00:	mov    rax,QWORD PTR [rbp+0x8140]
   14001ee07:	cmp    BYTE PTR [rax+0x18],0x0
   14001ee0b:	jne    0x14001f11b
   14001ee11:	test   rdi,rdi
   14001ee14:	je     0x14001f11b
   14001ee1a:	cmp    BYTE PTR [rbp+0x8160],0x0
   14001ee21:	jne    0x14001ee2c
   14001ee23:	cmp    BYTE PTR [rdi],0x0
   14001ee26:	je     0x14001f11b
   14001ee2c:	lea    rdx,[rip+0x18e75]        # 0x140037ca8
   14001ee33:	mov    rcx,rdi
   14001ee36:	call   QWORD PTR [rip+0x13724]        # 0x140032560
   14001ee3c:	test   eax,eax
   14001ee3e:	jne    0x14001eeae
   14001ee40:	lea    r8,[rbp+0x8130]
   14001ee47:	lea    rdx,[rbp+0x8160]
   14001ee4e:	lea    rcx,[rbp+0xc0]
   14001ee55:	call   0x14001fa00
   14001ee5a:	test   rax,rax
   14001ee5d:	je     0x14001ee99
   14001ee5f:	cmp    BYTE PTR [rax],0x0
   14001ee62:	je     0x14001ee99
   14001ee64:	lea    rcx,[rsp+0x60]
   14001ee69:	mov    r9,QWORD PTR [rbp+0x8148]
   14001ee70:	mov    r8,rax
   14001ee73:	mov    QWORD PTR [rsp+0x30],r15
   14001ee78:	mov    rdx,r12
   14001ee7b:	mov    QWORD PTR [rsp+0x28],rcx
   14001ee80:	mov    rcx,QWORD PTR [rbp+0x8150]
   14001ee87:	mov    QWORD PTR [rsp+0x20],rcx
   14001ee8c:	mov    rcx,r13
   14001ee8f:	call   0x14001f750
   14001ee94:	jmp    0x14001f10a
   14001ee99:	lea    rdx,[rip+0x18e18]        # 0x140037cb8
   14001eea0:	lea    rcx,[rbp-0x70]
   14001eea4:	call   0x140020630
   14001eea9:	jmp    0x14001f10a
   14001eeae:	lea    rdx,[rip+0x18e17]        # 0x140037ccc
   14001eeb5:	mov    rcx,rdi
   14001eeb8:	call   QWORD PTR [rip+0x136a2]        # 0x140032560
   14001eebe:	test   eax,eax
   14001eec0:	jne    0x14001ef05
   14001eec2:	lea    r8,[rbp+0x8130]
   14001eec9:	lea    rdx,[rbp+0x8160]
   14001eed0:	lea    rcx,[rbp+0xc0]
   14001eed7:	call   0x14001fa00
   14001eedc:	test   rax,rax
   14001eedf:	je     0x14001eef0
   14001eee1:	cmp    BYTE PTR [rax],0x0
   14001eee4:	je     0x14001eef0
   14001eee6:	lea    rcx,[rsp+0x40]
   14001eeeb:	jmp    0x14001ee69
   14001eef0:	lea    rdx,[rip+0x18de1]        # 0x140037cd8
   14001eef7:	lea    rcx,[rbp-0x70]
   14001eefb:	call   0x140020630
   14001ef00:	jmp    0x14001f10a
   14001ef05:	test   rbx,rbx
   14001ef08:	jne    0x14001ef4e
   14001ef0a:	call   QWORD PTR [rip+0x134e8]        # 0x1400323f8
   14001ef10:	mov    rcx,rax
   14001ef13:	mov    rdx,QWORD PTR [rax]
   14001ef16:	call   QWORD PTR [rdx]
   14001ef18:	test   rax,rax
   14001ef1b:	je     0x14001ef2d
   14001ef1d:	mov    rdx,rdi
   14001ef20:	mov    rcx,rax
   14001ef23:	call   0x14001dbb0
   14001ef28:	mov    rbx,rax
   14001ef2b:	jmp    0x14001ef2f
   14001ef2d:	xor    ebx,ebx
   14001ef2f:	mov    eax,DWORD PTR [r13+0x8]
   14001ef33:	and    eax,0xf8000000
   14001ef38:	xor    eax,DWORD PTR [rbx+0x8]
   14001ef3b:	and    eax,0x8000000
   14001ef40:	xor    DWORD PTR [rbx+0x8],eax
   14001ef43:	test   r14,r14
   14001ef46:	je     0x14001ef9c
   14001ef48:	mov    QWORD PTR [r14+0xc],rbx
   14001ef4c:	jmp    0x14001ef9c
   14001ef4e:	mov    DWORD PTR [rbp+0x8138],0xffffff
   14001ef58:	call   QWORD PTR [rip+0x1349a]        # 0x1400323f8
   14001ef5e:	mov    r9,rdi
   14001ef61:	mov    BYTE PTR [rsp+0x20],0x1
   14001ef66:	lea    r8,[rbp+0x8138]
   14001ef6d:	mov    rcx,rax
   14001ef70:	lea    rdx,[rbp-0x80]
   14001ef74:	mov    r10,QWORD PTR [rax]
   14001ef77:	call   QWORD PTR [r10+0x40]
   14001ef7b:	xor    ecx,ecx
   14001ef7d:	mov    eax,DWORD PTR [rax]
   14001ef7f:	and    DWORD PTR [rbx+0x8],0xdf000000
   14001ef86:	cmp    eax,DWORD PTR [rbp+0x8138]
   14001ef8c:	sete   cl
   14001ef8f:	and    eax,0xffffff
   14001ef94:	shl    ecx,0x1d
   14001ef97:	or     ecx,eax
   14001ef99:	or     DWORD PTR [rbx+0x8],ecx
   14001ef9c:	lea    r8,[rbp+0x8130]
   14001efa3:	lea    rdx,[rbp+0x8160]
   14001efaa:	lea    rcx,[rbp+0xc0]
   14001efb1:	call   0x14001fa00
   14001efb6:	cmp    BYTE PTR [rbp+0x8130],0x0
   14001efbd:	je     0x14001f01d
   14001efbf:	mov    r9,r15
   14001efc2:	mov    BYTE PTR [rbp+0x8138],0x0
   14001efc9:	mov    r8,rax
   14001efcc:	mov    QWORD PTR [rsp+0x20],0x0
   14001efd5:	lea    rdx,[rbp+0x8138]
   14001efdc:	lea    rcx,[rip+0x2918d]        # 0x140048170
   14001efe3:	call   0x1400247e0
   14001efe8:	test   al,al
   14001efea:	jne    0x14001effc
   14001efec:	lea    rdx,[rip+0x18c95]        # 0x140037c88
   14001eff3:	lea    rcx,[rbp-0x70]
   14001eff7:	call   0x140020630
   14001effc:	movzx  esi,BYTE PTR [rbp+0x8138]
   14001f003:	lea    r8,[rbp+0x8130]
   14001f00a:	lea    rdx,[rbp+0x8160]
   14001f011:	lea    rcx,[rbp+0xc0]
   14001f018:	call   0x14001fa00
   14001f01d:	test   rax,rax
   14001f020:	je     0x14001f04d
   14001f022:	cmp    BYTE PTR [rax],0x7b
   14001f025:	jne    0x14001f04d
   14001f027:	cmp    BYTE PTR [rbp+0x8160],0x0
   14001f02e:	jne    0x14001f04d
   14001f030:	lea    r9,[rbp+0xc0]
   14001f037:	mov    QWORD PTR [rsp+0x20],r15
   14001f03c:	mov    r8,r12
   14001f03f:	lea    rdx,[rbp-0x70]
   14001f043:	mov    rcx,rbx
   14001f046:	call   0x14001fc70
   14001f04b:	jmp    0x14001f0a7
   14001f04d:	test   rax,rax
   14001f050:	mov    QWORD PTR [rbp+0x8138],0x0
   14001f05b:	lea    r8,[rip+0x18c86]        # 0x140037ce8
   14001f062:	cmovne r8,rax
   14001f066:	lea    rdx,[rip+0x18c83]        # 0x140037cf0
   14001f06d:	lea    rcx,[rbp+0x8138]
   14001f074:	call   0x14001ae50
   14001f079:	lea    rcx,[rbp+0x8138]
   14001f080:	call   0x14001b050
   14001f085:	mov    rdx,rax
   14001f088:	lea    rcx,[rbp-0x70]
   14001f08c:	call   0x140020630
   14001f091:	cmp    QWORD PTR [rbp+0x8138],0x0
   14001f099:	je     0x14001f0a7
   14001f09b:	lea    rcx,[rbp+0x8138]
   14001f0a2:	call   0x14001b030
   14001f0a7:	test   sil,sil
   14001f0aa:	jne    0x14001f105
   14001f0ac:	test   r14,r14
   14001f0af:	je     0x14001f0b9
   14001f0b1:	mov    QWORD PTR [r14+0xc],0x0
   14001f0b9:	mov    eax,DWORD PTR [rbx+0x8]
   14001f0bc:	test   eax,0x7000000
   14001f0c1:	jne    0x14001f0fb
   14001f0c3:	bt     eax,0x1e
   14001f0c7:	jae    0x14001f0fb
   14001f0c9:	mov    rdi,QWORD PTR [rbx]
   14001f0cc:	test   rdi,rdi
   14001f0cf:	je     0x14001f0fb
   14001f0d1:	mov    rcx,rdi
   14001f0d4:	call   0x140020420
   14001f0d9:	mov    rcx,rdi
   14001f0dc:	call   0x14001e3b0
   14001f0e1:	call   QWORD PTR [rip+0x13311]        # 0x1400323f8
   14001f0e7:	mov    rdx,rdi
   14001f0ea:	mov    rcx,rax
   14001f0ed:	mov    r8,QWORD PTR [rax]
   14001f0f0:	call   QWORD PTR [r8+0x8]
   14001f0f4:	and    DWORD PTR [rbx+0x8],0xbfffffff
   14001f0fb:	mov    rcx,rbx
   14001f0fe:	call   0x14001e3b0
   14001f103:	jmp    0x14001f10a
   14001f105:	mov    r14,rbx
   14001f108:	xor    ebx,ebx
   14001f10a:	mov    rax,QWORD PTR [rbp+0x8140]
   14001f111:	cmp    BYTE PTR [rax+0x18],0x0
   14001f115:	je     0x14001ede0
   14001f11b:	movsxd r10,DWORD PTR [rsp+0x60]
   14001f120:	xor    r15d,r15d
   14001f123:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f128:	mov    rax,r13
   14001f12b:	mov    edx,r15d
   14001f12e:	test   r10d,r10d
   14001f131:	jle    0x14001f156
   14001f133:	mov    r8,QWORD PTR [rsi+rdx*8]
   14001f137:	test   rax,rax
   14001f13a:	je     0x14001f14a
   14001f13c:	mov    rcx,QWORD PTR [rax+0xc]
   14001f140:	test   rcx,rcx
   14001f143:	je     0x14001f14a
   14001f145:	mov    rax,rcx
   14001f148:	jmp    0x14001f137
   14001f14a:	inc    rdx
   14001f14d:	mov    QWORD PTR [rax+0xc],r8
   14001f151:	cmp    rdx,r10
   14001f154:	jl     0x14001f133
   14001f156:	lea    eax,[r10-0x1]
   14001f15a:	movsxd rbx,eax
   14001f15d:	test   eax,eax
   14001f15f:	jle    0x14001f195
   14001f161:	mov    rdi,QWORD PTR [rsi+rbx*8]
   14001f165:	test   rdi,rdi
   14001f168:	je     0x14001f18d
   14001f16a:	mov    rcx,rdi
   14001f16d:	call   0x140020420
   14001f172:	mov    rcx,rdi
   14001f175:	call   0x14001e3b0
   14001f17a:	call   QWORD PTR [rip+0x13278]        # 0x1400323f8
   14001f180:	mov    rdx,rdi
   14001f183:	mov    rcx,rax
   14001f186:	mov    r8,QWORD PTR [rax]
   14001f189:	call   QWORD PTR [r8+0x8]
   14001f18d:	dec    rbx
   14001f190:	test   rbx,rbx
   14001f193:	jg     0x14001f161
   14001f195:	lea    rdx,[rsp+0x40]
   14001f19a:	mov    rcx,r13
   14001f19d:	call   0x14001f4d0
   14001f1a2:	mov    eax,DWORD PTR [rsp+0x40]
   14001f1a6:	mov    r14,QWORD PTR [rsp+0x48]
   14001f1ab:	sub    eax,0x1
   14001f1ae:	movsxd rdi,eax
   14001f1b1:	js     0x14001f1e5
   14001f1b3:	mov    rbx,QWORD PTR [r14+rdi*8]
   14001f1b7:	test   rbx,rbx
   14001f1ba:	je     0x14001f1df
   14001f1bc:	mov    rcx,rbx
   14001f1bf:	call   0x140020420
   14001f1c4:	mov    rcx,rbx
   14001f1c7:	call   0x14001e3b0
   14001f1cc:	call   QWORD PTR [rip+0x13226]        # 0x1400323f8
   14001f1d2:	mov    rdx,rbx
   14001f1d5:	mov    rcx,rax
   14001f1d8:	mov    r8,QWORD PTR [rax]
   14001f1db:	call   QWORD PTR [r8+0x8]
   14001f1df:	sub    rdi,0x1
   14001f1e3:	jns    0x14001f1b3
   14001f1e5:	movzx  eax,BYTE PTR [rbp+0xa0]
   14001f1ec:	lea    rcx,[rip+0x135ad]        # 0x1400327a0
   14001f1f3:	mov    QWORD PTR [rbp+0x90],rcx
   14001f1fa:	test   al,al
   14001f1fc:	mov    rcx,QWORD PTR [rbp+0xb0]
   14001f203:	mov    DWORD PTR [rbp+0x9c],r15d
   14001f20a:	sete   dil
   14001f20e:	mov    BYTE PTR [rbp+0xa0],r15b
   14001f215:	mov    rax,QWORD PTR [rcx]
   14001f218:	call   QWORD PTR [rax+0x8]
   14001f21b:	mov    ebx,DWORD PTR [rsp+0x54]
   14001f21f:	and    ebx,0xc0000000
   14001f225:	jne    0x14001f242
   14001f227:	test   r14,r14
   14001f22a:	je     0x14001f242
   14001f22c:	mov    rax,QWORD PTR [rip+0x1315d]        # 0x140032390
   14001f233:	mov    rdx,r14
   14001f236:	mov    rcx,QWORD PTR [rax]
   14001f239:	mov    rax,QWORD PTR [rcx]
   14001f23c:	call   QWORD PTR [rax+0x28]
   14001f23f:	mov    r14,r15
   14001f242:	test   ebx,ebx
   14001f244:	jne    0x14001f25e
   14001f246:	test   r14,r14
   14001f249:	je     0x14001f25e
   14001f24b:	mov    rax,QWORD PTR [rip+0x1313e]        # 0x140032390
   14001f252:	mov    rdx,r14
   14001f255:	mov    rcx,QWORD PTR [rax]
   14001f258:	mov    rax,QWORD PTR [rcx]
   14001f25b:	call   QWORD PTR [rax+0x28]
   14001f25e:	mov    ebx,DWORD PTR [rsp+0x74]
   14001f262:	and    ebx,0xc0000000
   14001f268:	jne    0x14001f285
   14001f26a:	test   rsi,rsi
   14001f26d:	je     0x14001f285
   14001f26f:	mov    rax,QWORD PTR [rip+0x1311a]        # 0x140032390
   14001f276:	mov    rdx,rsi
   14001f279:	mov    rcx,QWORD PTR [rax]
   14001f27c:	mov    rax,QWORD PTR [rcx]
   14001f27f:	call   QWORD PTR [rax+0x28]
   14001f282:	mov    rsi,r15
   14001f285:	test   ebx,ebx
   14001f287:	jne    0x14001f2a2
   14001f289:	test   rsi,rsi
   14001f28c:	je     0x14001f2a2
   14001f28e:	mov    rcx,QWORD PTR [rip+0x130fb]        # 0x140032390
   14001f295:	mov    rdx,rsi
   14001f298:	mov    rcx,QWORD PTR [rcx]
   14001f29b:	mov    r8,QWORD PTR [rcx]
   14001f29e:	call   QWORD PTR [r8+0x28]
   14001f2a2:	movzx  eax,dil
   14001f2a6:	add    rsp,0x81e8
   14001f2ad:	pop    r15
   14001f2af:	pop    r14
   14001f2b1:	pop    r13
   14001f2b3:	pop    r12
   14001f2b5:	pop    rdi
   14001f2b6:	pop    rsi
   14001f2b7:	pop    rbx
   14001f2b8:	pop    rbp
   14001f2b9:	ret    
   14001f2ba:	int3   
   14001f2bb:	int3   
   14001f2bc:	int3   
   14001f2bd:	int3   
   14001f2be:	int3   
   14001f2bf:	int3   
   14001f2c0:	mov    QWORD PTR [rsp+0x8],rcx
   14001f2c5:	push   rbx
   14001f2c6:	push   rsi
   14001f2c7:	push   r12
   14001f2c9:	push   r13
   14001f2cb:	sub    rsp,0x58
   14001f2cf:	mov    rax,QWORD PTR [rdx]
   14001f2d2:	mov    r12,r8
   14001f2d5:	mov    rbx,rdx
   14001f2d8:	lea    r8,[rip+0x18955]        # 0x140037c34
   14001f2df:	mov    rdx,r12
   14001f2e2:	mov    rcx,rbx
   14001f2e5:	mov    r13,r9
   14001f2e8:	call   QWORD PTR [rax+0x10]
   14001f2eb:	mov    rsi,rax
   14001f2ee:	test   rax,rax
   14001f2f1:	jne    0x14001f2fe
   14001f2f3:	add    rsp,0x58
   14001f2f7:	pop    r13
   14001f2f9:	pop    r12
   14001f2fb:	pop    rsi
   14001f2fc:	pop    rbx
   14001f2fd:	ret    
   14001f2fe:	mov    rax,QWORD PTR [rbx]
   14001f301:	mov    rdx,rsi
   14001f304:	mov    rcx,rbx
   14001f307:	mov    QWORD PTR [rsp+0x48],r14
   14001f30c:	mov    QWORD PTR [rip+0x26eb5],r12        # 0x1400461c8
   14001f313:	call   QWORD PTR [rax+0x38]
   14001f316:	mov    r14,rax
   14001f319:	mov    rdx,rsi
   14001f31c:	cmp    rax,0x3b9aca00
   14001f322:	jle    0x14001f33f
   14001f324:	mov    rax,QWORD PTR [rbx]
   14001f327:	mov    rcx,rbx
   14001f32a:	call   QWORD PTR [rax+0x18]
   14001f32d:	mov    r14,QWORD PTR [rsp+0x48]
   14001f332:	xor    al,al
   14001f334:	add    rsp,0x58
   14001f338:	pop    r13
   14001f33a:	pop    r12
   14001f33c:	pop    rsi
   14001f33d:	pop    rbx
   14001f33e:	ret    
   14001f33f:	mov    QWORD PTR [rsp+0x90],rbp
   14001f347:	lea    r8,[rsp+0x88]
   14001f34f:	lea    ebp,[rax+0x2]
   14001f352:	mov    QWORD PTR [rsp+0x50],rdi
   14001f357:	mov    rax,QWORD PTR [rbx-0x8]
   14001f35b:	lea    rcx,[rbx-0x8]
   14001f35f:	xor    r9d,r9d
   14001f362:	mov    QWORD PTR [rsp+0x40],r15
   14001f367:	mov    QWORD PTR [rsp+0x20],0x0
   14001f370:	call   QWORD PTR [rax+0x2e0]
   14001f376:	test   al,al
   14001f378:	je     0x14001f38c
   14001f37a:	mov    eax,DWORD PTR [rsp+0x88]
   14001f381:	dec    ebp
   14001f383:	add    ebp,eax
   14001f385:	lea    ecx,[rax-0x1]
   14001f388:	not    ecx
   14001f38a:	and    ebp,ecx
   14001f38c:	mov    rax,QWORD PTR [rbx-0x8]
   14001f390:	lea    rcx,[rbx-0x8]
   14001f394:	xor    r9d,r9d
   14001f397:	mov    r8d,ebp
   14001f39a:	mov    rdx,rsi
   14001f39d:	call   QWORD PTR [rax+0x2e8]
   14001f3a3:	mov    r10,QWORD PTR [rbx-0x8]
   14001f3a7:	lea    rcx,[rbx-0x8]
   14001f3ab:	mov    r9d,r14d
   14001f3ae:	mov    QWORD PTR [rsp+0x20],rsi
   14001f3b3:	mov    r8d,ebp
   14001f3b6:	mov    rdx,rax
   14001f3b9:	mov    r15,rax
   14001f3bc:	call   QWORD PTR [r10+0x280]
   14001f3c3:	mov    r8,QWORD PTR [rbx]
   14001f3c6:	mov    rdx,rsi
   14001f3c9:	test   eax,eax
   14001f3cb:	mov    rcx,rbx
   14001f3ce:	setne  bpl
   14001f3d2:	call   QWORD PTR [r8+0x18]
   14001f3d6:	test   bpl,bpl
   14001f3d9:	je     0x14001f416
   14001f3db:	mov    rax,QWORD PTR [rsp+0xa0]
   14001f3e3:	mov    r9,rbx
   14001f3e6:	mov    rcx,QWORD PTR [rsp+0x80]
   14001f3ee:	mov    r8,r15
   14001f3f1:	mov    QWORD PTR [rsp+0x30],0x0
   14001f3fa:	mov    rdx,r12
   14001f3fd:	mov    QWORD PTR [rsp+0x28],rax
   14001f402:	mov    QWORD PTR [rsp+0x20],r13
   14001f407:	mov    WORD PTR [r15+r14*1],0x0
   14001f40e:	call   0x14001eb40
   14001f413:	movzx  ebp,al
   14001f416:	mov    r8,QWORD PTR [rbx-0x8]
   14001f41a:	lea    rcx,[rbx-0x8]
   14001f41e:	mov    rdx,r15
   14001f421:	call   QWORD PTR [r8+0x2f0]
   14001f428:	mov    r15,QWORD PTR [rsp+0x40]
   14001f42d:	movzx  eax,bpl
   14001f431:	mov    rbp,QWORD PTR [rsp+0x90]
   14001f439:	mov    rdi,QWORD PTR [rsp+0x50]
   14001f43e:	mov    r14,QWORD PTR [rsp+0x48]
   14001f443:	add    rsp,0x58
   14001f447:	pop    r13
   14001f449:	pop    r12
   14001f44b:	pop    rsi
   14001f44c:	pop    rbx
   14001f44d:	ret    
   14001f44e:	int3   
   14001f44f:	int3   
   14001f450:	mov    QWORD PTR [rsp+0x8],rbx
   14001f455:	push   rdi
   14001f456:	sub    rsp,0x20
   14001f45a:	mov    rdi,rcx
   14001f45d:	call   QWORD PTR [rip+0x12f95]        # 0x1400323f8
   14001f463:	mov    rcx,rax
   14001f466:	mov    rdx,QWORD PTR [rax]
   14001f469:	call   QWORD PTR [rdx]
   14001f46b:	test   rax,rax
   14001f46e:	je     0x14001f47f
   14001f470:	xor    edx,edx
   14001f472:	mov    rcx,rax
   14001f475:	call   0x14001dbb0
   14001f47a:	mov    rbx,rax
   14001f47d:	jmp    0x14001f481
   14001f47f:	xor    ebx,ebx
   14001f481:	mov    eax,DWORD PTR [rbx+0x8]
   14001f484:	mov    rdx,rdi
   14001f487:	xor    eax,DWORD PTR [rdi+0x8]
   14001f48a:	and    eax,0xffffff
   14001f48f:	xor    DWORD PTR [rbx+0x8],eax
   14001f492:	mov    ecx,DWORD PTR [rdi+0x8]
   14001f495:	xor    ecx,DWORD PTR [rbx+0x8]
   14001f498:	and    ecx,0x20000000
   14001f49e:	xor    DWORD PTR [rbx+0x8],ecx
   14001f4a1:	mov    rcx,rbx
   14001f4a4:	call   0x14001e450
   14001f4a9:	mov    rdx,rbx
   14001f4ac:	mov    rcx,rdi
   14001f4af:	call   0x14001dd30
   14001f4b4:	mov    rax,rbx
   14001f4b7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f4bc:	add    rsp,0x20
   14001f4c0:	pop    rdi
   14001f4c1:	ret    
   14001f4c2:	int3   
   14001f4c3:	int3   
   14001f4c4:	int3   
   14001f4c5:	int3   
   14001f4c6:	int3   
   14001f4c7:	int3   
   14001f4c8:	int3   
   14001f4c9:	int3   
   14001f4ca:	int3   
   14001f4cb:	int3   
   14001f4cc:	int3   
   14001f4cd:	int3   
   14001f4ce:	int3   
   14001f4cf:	int3   
   14001f4d0:	rex push rbp
   14001f4d2:	push   r12
   14001f4d4:	push   r13
   14001f4d6:	push   r14
   14001f4d8:	push   r15
   14001f4da:	sub    rsp,0x40
   14001f4de:	movsxd r15,DWORD PTR [rdx]
   14001f4e1:	xor    r12d,r12d
   14001f4e4:	mov    r13,rdx
   14001f4e7:	mov    r14,rcx
   14001f4ea:	mov    ebp,r12d
   14001f4ed:	test   r15,r15
   14001f4f0:	jle    0x14001f738
   14001f4f6:	mov    QWORD PTR [rsp+0x70],rbx
   14001f4fb:	mov    QWORD PTR [rsp+0x38],rsi
   14001f500:	mov    QWORD PTR [rsp+0x30],rdi
   14001f505:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14001f510:	mov    rax,QWORD PTR [r13+0x8]
   14001f514:	mov    rcx,QWORD PTR [rax+rbp*8]
   14001f518:	mov    eax,DWORD PTR [rcx+0x8]
   14001f51b:	test   eax,0x7000000
   14001f520:	jne    0x14001f71d
   14001f526:	bt     eax,0x1e
   14001f52a:	jae    0x14001f71d
   14001f530:	mov    rsi,QWORD PTR [rcx]
   14001f533:	test   rsi,rsi
   14001f536:	je     0x14001f71d
   14001f53c:	nop    DWORD PTR [rax+0x0]
   14001f540:	mov    rcx,r14
   14001f543:	call   0x14001e770
   14001f548:	mov    rdi,rax
   14001f54b:	test   rax,rax
   14001f54e:	je     0x14001f5c7
   14001f550:	test   rax,rax
   14001f553:	je     0x14001f573
   14001f555:	call   QWORD PTR [rip+0x12e9d]        # 0x1400323f8
   14001f55b:	mov    edx,DWORD PTR [rdi+0x8]
   14001f55e:	mov    rcx,rax
   14001f561:	and    edx,0xffffff
   14001f567:	mov    r8,QWORD PTR [rax]
   14001f56a:	call   QWORD PTR [r8+0x18]
   14001f56e:	mov    rbx,rax
   14001f571:	jmp    0x14001f57a
   14001f573:	lea    rbx,[rip+0x13226]        # 0x1400327a0
   14001f57a:	test   rsi,rsi
   14001f57d:	je     0x14001f59a
   14001f57f:	call   QWORD PTR [rip+0x12e73]        # 0x1400323f8
   14001f585:	mov    edx,DWORD PTR [rsi+0x8]
   14001f588:	mov    rcx,rax
   14001f58b:	and    edx,0xffffff
   14001f591:	mov    r8,QWORD PTR [rax]
   14001f594:	call   QWORD PTR [r8+0x18]
   14001f598:	jmp    0x14001f5a1
   14001f59a:	lea    rax,[rip+0x131ff]        # 0x1400327a0
   14001f5a1:	sub    rbx,rax
   14001f5a4:	movzx  edx,BYTE PTR [rax]
   14001f5a7:	movzx  ecx,BYTE PTR [rax+rbx*1]
   14001f5ab:	sub    edx,ecx
   14001f5ad:	jne    0x14001f5b6
   14001f5af:	inc    rax
   14001f5b2:	test   ecx,ecx
   14001f5b4:	jne    0x14001f5a4
   14001f5b6:	test   edx,edx
   14001f5b8:	je     0x14001f679
   14001f5be:	mov    rdi,QWORD PTR [rdi+0xc]
   14001f5c2:	test   rdi,rdi
   14001f5c5:	jne    0x14001f555
   14001f5c7:	call   QWORD PTR [rip+0x12e2b]        # 0x1400323f8
   14001f5cd:	mov    rcx,rax
   14001f5d0:	mov    rdx,QWORD PTR [rax]
   14001f5d3:	call   QWORD PTR [rdx]
   14001f5d5:	mov    rbx,rax
   14001f5d8:	test   rax,rax
   14001f5db:	je     0x14001f689
   14001f5e1:	mov    QWORD PTR [rax],r12
   14001f5e4:	mov    eax,DWORD PTR [rax+0x8]
   14001f5e7:	and    eax,0x80ffffff
   14001f5ec:	or     eax,0xffffff
   14001f5f1:	mov    ecx,eax
   14001f5f3:	mov    DWORD PTR [rbx+0x8],eax
   14001f5f6:	shr    ecx,0x18
   14001f5f9:	and    ecx,0x7
   14001f5fc:	sub    ecx,0x1
   14001f5ff:	je     0x14001f61b
   14001f601:	sub    ecx,0x4
   14001f604:	je     0x14001f61b
   14001f606:	cmp    ecx,0x2
   14001f609:	jne    0x14001f61b
   14001f60b:	bt     eax,0x1c
   14001f60f:	jae    0x14001f61b
   14001f611:	lea    edx,[rcx+0x6]
   14001f614:	xor    ecx,ecx
   14001f616:	call   0x14002639c
   14001f61b:	and    DWORD PTR [rbx+0x8],0xa0ffffff
   14001f622:	mov    QWORD PTR [rbx+0xc],r12
   14001f626:	mov    DWORD PTR [rsp+0x78],0xffffff
   14001f62e:	call   QWORD PTR [rip+0x12dc4]        # 0x1400323f8
   14001f634:	xor    r9d,r9d
   14001f637:	mov    BYTE PTR [rsp+0x20],0x1
   14001f63c:	lea    r8,[rsp+0x78]
   14001f641:	mov    rcx,rax
   14001f644:	lea    rdx,[rsp+0x80]
   14001f64c:	mov    r10,QWORD PTR [rax]
   14001f64f:	call   QWORD PTR [r10+0x40]
   14001f653:	mov    ecx,DWORD PTR [rbx+0x8]
   14001f656:	mov    edx,r12d
   14001f659:	mov    eax,DWORD PTR [rax]
   14001f65b:	cmp    eax,DWORD PTR [rsp+0x78]
   14001f65f:	sete   dl
   14001f662:	and    ecx,0xdf000000
   14001f668:	shl    edx,0x1d
   14001f66b:	and    eax,0xffffff
   14001f670:	or     edx,ecx
   14001f672:	or     edx,eax
   14001f674:	mov    DWORD PTR [rbx+0x8],edx
   14001f677:	jmp    0x14001f68c
   14001f679:	mov    rdx,rsi
   14001f67c:	mov    rcx,rdi
   14001f67f:	call   0x140020200
   14001f684:	jmp    0x14001f710
   14001f689:	mov    rbx,r12
   14001f68c:	mov    eax,DWORD PTR [rsi+0x8]
   14001f68f:	mov    rdx,rsi
   14001f692:	xor    eax,DWORD PTR [rbx+0x8]
   14001f695:	and    eax,0xffffff
   14001f69a:	xor    DWORD PTR [rbx+0x8],eax
   14001f69d:	mov    ecx,DWORD PTR [rbx+0x8]
   14001f6a0:	xor    ecx,DWORD PTR [rsi+0x8]
   14001f6a3:	and    ecx,0x20000000
   14001f6a9:	xor    DWORD PTR [rbx+0x8],ecx
   14001f6ac:	mov    rcx,rbx
   14001f6af:	call   0x14001e450
   14001f6b4:	mov    rdx,rbx
   14001f6b7:	mov    rcx,rsi
   14001f6ba:	call   0x14001dd30
   14001f6bf:	mov    eax,DWORD PTR [r14+0x8]
   14001f6c3:	mov    ecx,eax
   14001f6c5:	and    ecx,0x7000000
   14001f6cb:	jne    0x14001f6f9
   14001f6cd:	bt     eax,0x1e
   14001f6d1:	jae    0x14001f6f9
   14001f6d3:	mov    rax,QWORD PTR [r14]
   14001f6d6:	test   rax,rax
   14001f6d9:	je     0x14001f6f9
   14001f6db:	nop    DWORD PTR [rax+rax*1+0x0]
   14001f6e0:	test   rax,rax
   14001f6e3:	je     0x14001f6f3
   14001f6e5:	mov    rcx,QWORD PTR [rax+0xc]
   14001f6e9:	test   rcx,rcx
   14001f6ec:	je     0x14001f6f3
   14001f6ee:	mov    rax,rcx
   14001f6f1:	jmp    0x14001f6e0
   14001f6f3:	mov    QWORD PTR [rax+0xc],rbx
   14001f6f7:	jmp    0x14001f710
   14001f6f9:	test   ecx,ecx
   14001f6fb:	je     0x14001f705
   14001f6fd:	mov    rcx,r14
   14001f700:	call   0x14001e3b0
   14001f705:	or     DWORD PTR [r14+0x8],0x40000000
   14001f70d:	mov    QWORD PTR [r14],rbx
   14001f710:	mov    rsi,QWORD PTR [rsi+0xc]
   14001f714:	test   rsi,rsi
   14001f717:	jne    0x14001f540
   14001f71d:	inc    rbp
   14001f720:	cmp    rbp,r15
   14001f723:	jl     0x14001f510
   14001f729:	mov    rdi,QWORD PTR [rsp+0x30]
   14001f72e:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f733:	mov    rbx,QWORD PTR [rsp+0x70]
   14001f738:	add    rsp,0x40
   14001f73c:	pop    r15
   14001f73e:	pop    r14
   14001f740:	pop    r13
   14001f742:	pop    r12
   14001f744:	pop    rbp
   14001f745:	ret    
   14001f746:	int3   
   14001f747:	int3   
   14001f748:	int3   
   14001f749:	int3   
   14001f74a:	int3   
   14001f74b:	int3   
   14001f74c:	int3   
   14001f74d:	int3   
   14001f74e:	int3   
   14001f74f:	int3   
   14001f750:	test   r9,r9
   14001f753:	je     0x14001f93a
   14001f759:	mov    QWORD PTR [rsp+0x10],rbx
   14001f75e:	mov    QWORD PTR [rsp+0x18],rbp
   14001f763:	push   rsi
   14001f764:	sub    rsp,0x240
   14001f76b:	mov    rbx,r8
   14001f76e:	mov    rbp,rcx
   14001f771:	mov    r8d,0x200
   14001f777:	lea    rcx,[rsp+0x40]
   14001f77c:	mov    rsi,r9
   14001f77f:	call   QWORD PTR [rip+0x12dd3]        # 0x140032558
   14001f785:	lea    rcx,[rsp+0x40]
   14001f78a:	or     rax,0xffffffffffffffff
   14001f78e:	xchg   ax,ax
   14001f790:	inc    rax
   14001f793:	cmp    BYTE PTR [rcx+rax*1],0x0
   14001f797:	jne    0x14001f790
   14001f799:	cdqe   
   14001f79b:	test   rax,rax
   14001f79e:	jle    0x14001f7c1
   14001f7a0:	lea    rdx,[rsp+0x40]
   14001f7a5:	movzx  ecx,BYTE PTR [rdx+rax*1-0x1]
   14001f7aa:	cmp    cl,0x5c
   14001f7ad:	je     0x14001f7c1
   14001f7af:	cmp    cl,0x2f
   14001f7b2:	je     0x14001f7c1
   14001f7b4:	mov    BYTE PTR [rdx+rax*1-0x1],0x0
   14001f7b9:	dec    rax
   14001f7bc:	test   rax,rax
   14001f7bf:	jg     0x14001f7a5
   14001f7c1:	or     r9d,0xffffffff
   14001f7c5:	mov    QWORD PTR [rsp+0x250],rdi
   14001f7cd:	mov    r8d,0x200
   14001f7d3:	lea    rcx,[rsp+0x40]
   14001f7d8:	mov    rdx,rbx
   14001f7db:	call   QWORD PTR [rip+0x12d6f]        # 0x140032550
   14001f7e1:	call   QWORD PTR [rip+0x12c11]        # 0x1400323f8
   14001f7e7:	mov    rcx,rax
   14001f7ea:	mov    rdx,QWORD PTR [rax]
   14001f7ed:	call   QWORD PTR [rdx]
   14001f7ef:	xor    edi,edi
   14001f7f1:	mov    rbx,rax
   14001f7f4:	test   rax,rax
   14001f7f7:	je     0x14001f878
   14001f7f9:	mov    QWORD PTR [rax],rdi
   14001f7fc:	mov    rcx,rbx
   14001f7ff:	mov    eax,DWORD PTR [rax+0x8]
   14001f802:	and    eax,0x80ffffff
   14001f807:	or     eax,0xffffff
   14001f80c:	mov    DWORD PTR [rbx+0x8],eax
   14001f80f:	call   0x14001e3b0
   14001f814:	and    DWORD PTR [rbx+0x8],0xf7ffffff
   14001f81b:	mov    QWORD PTR [rbx+0xc],rdi
   14001f81f:	mov    DWORD PTR [rsp+0x268],0xffffff
   14001f82a:	call   QWORD PTR [rip+0x12bc8]        # 0x1400323f8
   14001f830:	lea    r9,[rsp+0x40]
   14001f835:	mov    BYTE PTR [rsp+0x20],0x1
   14001f83a:	lea    r8,[rsp+0x268]
   14001f842:	mov    rcx,rax
   14001f845:	lea    rdx,[rsp+0x30]
   14001f84a:	mov    r10,QWORD PTR [rax]
   14001f84d:	call   QWORD PTR [r10+0x40]
   14001f851:	mov    ecx,DWORD PTR [rbx+0x8]
   14001f854:	mov    eax,DWORD PTR [rax]
   14001f856:	cmp    eax,DWORD PTR [rsp+0x268]
   14001f85d:	sete   dil
   14001f861:	and    ecx,0xdf000000
   14001f867:	shl    edi,0x1d
   14001f86a:	and    eax,0xffffff
   14001f86f:	or     edi,ecx
   14001f871:	or     edi,eax
   14001f873:	mov    DWORD PTR [rbx+0x8],edi
   14001f876:	jmp    0x14001f87b
   14001f878:	mov    rbx,rdi
   14001f87b:	mov    eax,DWORD PTR [rbp+0x8]
   14001f87e:	lea    r8,[rsp+0x40]
   14001f883:	mov    r9,QWORD PTR [rsp+0x270]
   14001f88b:	and    eax,0xf8000000
   14001f890:	xor    eax,DWORD PTR [rbx+0x8]
   14001f893:	mov    rdx,rsi
   14001f896:	and    eax,0x8000000
   14001f89b:	mov    rcx,rbx
   14001f89e:	xor    DWORD PTR [rbx+0x8],eax
   14001f8a1:	mov    rax,QWORD PTR [rsp+0x280]
   14001f8a9:	mov    QWORD PTR [rsp+0x20],rax
   14001f8ae:	call   0x14001f2c0
   14001f8b3:	test   al,al
   14001f8b5:	je     0x14001f8e9
   14001f8b7:	mov    rdi,QWORD PTR [rsp+0x278]
   14001f8bf:	movsxd rsi,DWORD PTR [rdi]
   14001f8c2:	cmp    esi,DWORD PTR [rdi+0x10]
   14001f8c5:	jne    0x14001f8d5
   14001f8c7:	lea    rcx,[rdi+0x8]
   14001f8cb:	mov    edx,0x1
   14001f8d0:	call   0x140013420
   14001f8d5:	mov    rax,QWORD PTR [rdi+0x8]
   14001f8d9:	inc    DWORD PTR [rdi]
   14001f8db:	lea    rdx,[rax+rsi*8]
   14001f8df:	test   rdx,rdx
   14001f8e2:	je     0x14001f91e
   14001f8e4:	mov    QWORD PTR [rdx],rbx
   14001f8e7:	jmp    0x14001f91e
   14001f8e9:	lea    rdx,[rsp+0x40]
   14001f8ee:	lea    rcx,[rip+0x1834b]        # 0x140037c40
   14001f8f5:	call   QWORD PTR [rip+0x12b25]        # 0x140032420
   14001f8fb:	mov    rcx,rbx
   14001f8fe:	call   0x140020420
   14001f903:	mov    rcx,rbx
   14001f906:	call   0x14001e3b0
   14001f90b:	call   QWORD PTR [rip+0x12ae7]        # 0x1400323f8
   14001f911:	mov    rdx,rbx
   14001f914:	mov    rcx,rax
   14001f917:	mov    r8,QWORD PTR [rax]
   14001f91a:	call   QWORD PTR [r8+0x8]
   14001f91e:	mov    rdi,QWORD PTR [rsp+0x250]
   14001f926:	lea    r11,[rsp+0x240]
   14001f92e:	mov    rbx,QWORD PTR [r11+0x18]
   14001f932:	mov    rbp,QWORD PTR [r11+0x20]
   14001f936:	mov    rsp,r11
   14001f939:	pop    rsi
   14001f93a:	ret    
   14001f93b:	int3   
   14001f93c:	int3   
   14001f93d:	int3   
   14001f93e:	int3   
   14001f93f:	int3   
   14001f940:	mov    QWORD PTR [rsp+0x10],rbx
   14001f945:	push   rsi
   14001f946:	sub    rsp,0x20
   14001f94a:	movzx  r8d,BYTE PTR [rcx+0x19]
   14001f94f:	movzx  esi,dl
   14001f952:	mov    rbx,rcx
   14001f955:	test   r8b,0x1
   14001f959:	je     0x14001f976
   14001f95b:	mov    eax,DWORD PTR [rcx+0x14]
   14001f95e:	sub    eax,DWORD PTR [rcx+0x24]
   14001f961:	je     0x14001f976
   14001f963:	dec    eax
   14001f965:	movsxd rcx,eax
   14001f968:	mov    rax,QWORD PTR [rbx]
   14001f96b:	cmp    BYTE PTR [rcx+rax*1],0xa
   14001f96f:	sete   al
   14001f972:	test   al,al
   14001f974:	jne    0x14001f97c
   14001f976:	cmp    DWORD PTR [rbx+0x14],0x0
   14001f97a:	jne    0x14001f9c9
   14001f97c:	mov    QWORD PTR [rsp+0x30],rdi
   14001f981:	test   r8b,0x10
   14001f985:	je     0x14001f98b
   14001f987:	xor    edi,edi
   14001f989:	jmp    0x14001f98e
   14001f98b:	mov    edi,DWORD PTR [rbx+0x1c]
   14001f98e:	sub    edi,0x1
   14001f991:	js     0x14001f9c4
   14001f993:	mov    edx,0x1
   14001f998:	mov    rcx,rbx
   14001f99b:	call   0x140020c50
   14001f9a0:	test   al,al
   14001f9a2:	je     0x14001f9bf
   14001f9a4:	mov    eax,DWORD PTR [rbx+0x14]
   14001f9a7:	sub    eax,DWORD PTR [rbx+0x24]
   14001f9aa:	movsxd rcx,eax
   14001f9ad:	mov    rax,QWORD PTR [rbx]
   14001f9b0:	mov    BYTE PTR [rcx+rax*1],0x9
   14001f9b4:	mov    rcx,rbx
   14001f9b7:	inc    DWORD PTR [rbx+0x14]
   14001f9ba:	call   0x1400209e0
   14001f9bf:	sub    edi,0x1
   14001f9c2:	jns    0x14001f993
   14001f9c4:	mov    rdi,QWORD PTR [rsp+0x30]
   14001f9c9:	mov    edx,0x1
   14001f9ce:	mov    rcx,rbx
   14001f9d1:	call   0x140020c50
   14001f9d6:	test   al,al
   14001f9d8:	je     0x14001f9f5
   14001f9da:	mov    eax,DWORD PTR [rbx+0x14]
   14001f9dd:	sub    eax,DWORD PTR [rbx+0x24]
   14001f9e0:	movsxd rcx,eax
   14001f9e3:	mov    rax,QWORD PTR [rbx]
   14001f9e6:	mov    BYTE PTR [rcx+rax*1],sil
   14001f9ea:	mov    rcx,rbx
   14001f9ed:	inc    DWORD PTR [rbx+0x14]
   14001f9f0:	call   0x1400209e0
   14001f9f5:	mov    rbx,QWORD PTR [rsp+0x38]
   14001f9fa:	add    rsp,0x20
   14001f9fe:	pop    rsi
   14001f9ff:	ret    
   14001fa00:	rex push rbx
   14001fa02:	push   rdi
   14001fa03:	push   r15
   14001fa05:	sub    rsp,0x30
   14001fa09:	cmp    BYTE PTR [rcx+0x801c],0x0
   14001fa10:	mov    r15,r8
   14001fa13:	mov    rdi,rdx
   14001fa16:	mov    rbx,rcx
   14001fa19:	je     0x14001fa42
   14001fa1b:	movzx  eax,BYTE PTR [rcx+0x801d]
   14001fa22:	mov    BYTE PTR [rcx+0x801c],0x0
   14001fa29:	mov    BYTE PTR [rdx],al
   14001fa2b:	movzx  eax,BYTE PTR [rcx+0x801e]
   14001fa32:	mov    BYTE PTR [r8],al
   14001fa35:	lea    rax,[rcx+0x18]
   14001fa39:	add    rsp,0x30
   14001fa3d:	pop    r15
   14001fa3f:	pop    rdi
   14001fa40:	pop    rbx
   14001fa41:	ret    
   14001fa42:	mov    BYTE PTR [rdx],0x0
   14001fa45:	mov    BYTE PTR [rcx+0x801d],0x0
   14001fa4c:	mov    BYTE PTR [r8],0x0
   14001fa50:	mov    BYTE PTR [rcx+0x801e],0x0
   14001fa57:	mov    rcx,QWORD PTR [rcx+0x10]
   14001fa5b:	cmp    BYTE PTR [rcx+0x18],0x0
   14001fa5f:	je     0x14001fa6c
   14001fa61:	xor    eax,eax
   14001fa63:	add    rsp,0x30
   14001fa67:	pop    r15
   14001fa69:	pop    rdi
   14001fa6a:	pop    rbx
   14001fa6b:	ret    
   14001fa6c:	call   0x140020f40
   14001fa71:	mov    rax,QWORD PTR [rbx+0x10]
   14001fa75:	cmp    BYTE PTR [rax+0x18],0x0
   14001fa79:	jne    0x14001fa61
   14001fa7b:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fa80:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fa84:	call   0x140020e70
   14001fa89:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fa8d:	test   al,al
   14001fa8f:	je     0x14001faab
   14001fa91:	call   0x140020f40
   14001fa96:	mov    rax,QWORD PTR [rbx+0x10]
   14001fa9a:	cmp    BYTE PTR [rax+0x18],0x0
   14001fa9e:	je     0x14001fa80
   14001faa0:	xor    eax,eax
   14001faa2:	add    rsp,0x30
   14001faa6:	pop    r15
   14001faa8:	pop    rdi
   14001faa9:	pop    rbx
   14001faaa:	ret    
   14001faab:	mov    QWORD PTR [rsp+0x60],r12
   14001fab0:	xor    r8d,r8d
   14001fab3:	mov    r12d,0x1
   14001fab9:	mov    edx,r12d
   14001fabc:	call   0x140021730
   14001fac1:	test   rax,rax
   14001fac4:	jne    0x14001fad4
   14001fac6:	mov    r12,QWORD PTR [rsp+0x60]
   14001facb:	add    rsp,0x30
   14001facf:	pop    r15
   14001fad1:	pop    rdi
   14001fad2:	pop    rbx
   14001fad3:	ret    
   14001fad4:	movzx  eax,BYTE PTR [rax]
   14001fad7:	cmp    al,0x22
   14001fad9:	jne    0x14001fb1d
   14001fadb:	mov    BYTE PTR [rdi],r12b
   14001fade:	mov    BYTE PTR [rbx+0x801d],r12b
   14001fae5:	call   QWORD PTR [rip+0x1290d]        # 0x1400323f8
   14001faeb:	mov    rcx,QWORD PTR [rbx+0x8]
   14001faef:	mov    r8,QWORD PTR [rax]
   14001faf2:	mov    edx,DWORD PTR [rcx+0x8]
   14001faf5:	mov    rcx,rax
   14001faf8:	shr    edx,0x1b
   14001fafb:	and    dl,r12b
   14001fafe:	call   QWORD PTR [r8+0x70]
   14001fb02:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fb06:	lea    r8,[rbx+0x18]
   14001fb0a:	mov    rdx,rax
   14001fb0d:	mov    r9d,0x8000
   14001fb13:	call   0x140021410
   14001fb18:	jmp    0x14001fc57
   14001fb1d:	cmp    al,0x7b
   14001fb1f:	je     0x14001fc47
   14001fb25:	cmp    al,0x7d
   14001fb27:	je     0x14001fc47
   14001fb2d:	cmp    al,0x3d
   14001fb2f:	je     0x14001fc47
   14001fb35:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fb39:	xor    r8d,r8d
   14001fb3c:	mov    QWORD PTR [rsp+0x50],rbp
   14001fb41:	mov    edx,r12d
   14001fb44:	mov    QWORD PTR [rsp+0x20],r14
   14001fb49:	xor    dil,dil
   14001fb4c:	xor    r14b,r14b
   14001fb4f:	xor    ebp,ebp
   14001fb51:	call   0x140021730
   14001fb56:	mov    rdx,rax
   14001fb59:	test   rax,rax
   14001fb5c:	je     0x14001fc33
   14001fb62:	mov    QWORD PTR [rsp+0x58],rsi
   14001fb67:	mov    esi,ebp
   14001fb69:	mov    QWORD PTR [rsp+0x28],r13
   14001fb6e:	movabs r13,0x2000000400000001
   14001fb78:	movzx  ecx,BYTE PTR [rdx]
   14001fb7b:	cmp    cl,0x3d
   14001fb7e:	ja     0x14001fb8a
   14001fb80:	bt     r13,rcx
   14001fb84:	jb     0x14001fc29
   14001fb8a:	cmp    cl,0x7b
   14001fb8d:	je     0x14001fc29
   14001fb93:	cmp    cl,0x7d
   14001fb96:	je     0x14001fc29
   14001fb9c:	cmp    cl,0x5b
   14001fb9f:	movzx  edi,dil
   14001fba3:	cmove  edi,r12d
   14001fba7:	cmp    cl,0x5d
   14001fbaa:	jne    0x14001fbbe
   14001fbac:	test   dil,dil
   14001fbaf:	je     0x14001fbbe
   14001fbb1:	mov    BYTE PTR [r15],r12b
   14001fbb4:	xor    dil,dil
   14001fbb7:	mov    BYTE PTR [rbx+0x801e],r12b
   14001fbbe:	movsx  r8d,BYTE PTR [rdx]
   14001fbc2:	mov    ecx,r8d
   14001fbc5:	lea    eax,[r8-0x9]
   14001fbc9:	cmp    eax,0x4
   14001fbcc:	jbe    0x14001fbd3
   14001fbce:	cmp    ecx,0x20
   14001fbd1:	jne    0x14001fbd8
   14001fbd3:	test   dil,dil
   14001fbd6:	je     0x14001fc29
   14001fbd8:	cmp    rsi,0x7fff
   14001fbdf:	jge    0x14001fbed
   14001fbe1:	inc    ebp
   14001fbe3:	mov    BYTE PTR [rsi+rbx*1+0x18],r8b
   14001fbe8:	inc    rsi
   14001fbeb:	jmp    0x14001fc05
   14001fbed:	test   r14b,r14b
   14001fbf0:	jne    0x14001fc05
   14001fbf2:	mov    rcx,QWORD PTR [rbx]
   14001fbf5:	lea    rdx,[rip+0x18024]        # 0x140037c20
   14001fbfc:	movzx  r14d,r12b
   14001fc00:	call   0x140020630
   14001fc05:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fc09:	call   0x14001e1c0
   14001fc0e:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fc12:	xor    r8d,r8d
   14001fc15:	mov    edx,r12d
   14001fc18:	call   0x140021730
   14001fc1d:	mov    rdx,rax
   14001fc20:	test   rax,rax
   14001fc23:	jne    0x14001fb78
   14001fc29:	mov    rsi,QWORD PTR [rsp+0x58]
   14001fc2e:	mov    r13,QWORD PTR [rsp+0x28]
   14001fc33:	mov    r14,QWORD PTR [rsp+0x20]
   14001fc38:	movsxd rax,ebp
   14001fc3b:	mov    rbp,QWORD PTR [rsp+0x50]
   14001fc40:	mov    BYTE PTR [rax+rbx*1+0x18],0x0
   14001fc45:	jmp    0x14001fc57
   14001fc47:	mov    BYTE PTR [rbx+0x18],al
   14001fc4a:	mov    BYTE PTR [rbx+0x19],0x0
   14001fc4e:	mov    rcx,QWORD PTR [rbx+0x10]
   14001fc52:	call   0x14001e1c0
   14001fc57:	inc    DWORD PTR [rbx+0x8018]
   14001fc5d:	lea    rax,[rbx+0x18]
   14001fc61:	mov    r12,QWORD PTR [rsp+0x60]
   14001fc66:	add    rsp,0x30
   14001fc6a:	pop    r15
   14001fc6c:	pop    rdi
   14001fc6d:	pop    rbx
   14001fc6e:	ret    
   14001fc6f:	int3   
   14001fc70:	mov    QWORD PTR [rsp+0x20],r9
   14001fc75:	mov    QWORD PTR [rsp+0x18],r8
   14001fc7a:	mov    QWORD PTR [rsp+0x10],rdx
   14001fc7f:	mov    QWORD PTR [rsp+0x8],rcx
   14001fc84:	push   rbp
   14001fc85:	push   rbx
   14001fc86:	push   rdi
   14001fc87:	lea    rbp,[rsp-0x3f]
   14001fc8c:	sub    rsp,0x90
   14001fc93:	mov    rbx,r9
   14001fc96:	mov    rdi,rdx
   14001fc99:	mov    r8,rcx
   14001fc9c:	test   rcx,rcx
   14001fc9f:	je     0x14001fcae
   14001fca1:	mov    eax,DWORD PTR [rcx+0x8]
   14001fca4:	and    eax,0xffffff
   14001fca9:	mov    DWORD PTR [rbp-0x1d],eax
   14001fcac:	jmp    0x14001fcb5
   14001fcae:	mov    DWORD PTR [rbp-0x1d],0xffffff
   14001fcb5:	movsxd rcx,DWORD PTR [rdx+0x108]
   14001fcbc:	lea    rax,[rbp-0x1d]
   14001fcc0:	cmp    ecx,0x40
   14001fcc3:	jge    0x14001fcca
   14001fcc5:	mov    eax,DWORD PTR [rax]
   14001fcc7:	mov    DWORD PTR [rdx+rcx*4],eax
   14001fcca:	mov    ecx,DWORD PTR [rdx+0x108]
   14001fcd0:	mov    eax,DWORD PTR [rdi+0x10c]
   14001fcd6:	cmp    eax,ecx
   14001fcd8:	lea    edx,[rcx+0x1]
   14001fcdb:	cmovg  ecx,eax
   14001fcde:	lea    eax,[rdx-0x1]
   14001fce1:	mov    DWORD PTR [rdi+0x108],edx
   14001fce7:	mov    DWORD PTR [rdi+0x10c],ecx
   14001fced:	cmp    eax,0x64
   14001fcf0:	jle    0x14001fd12
   14001fcf2:	lea    rdx,[rip+0x18027]        # 0x140037d20
   14001fcf9:	mov    rcx,rdi
   14001fcfc:	call   0x140020630
   14001fd01:	dec    DWORD PTR [rdi+0x108]
   14001fd07:	add    rsp,0x90
   14001fd0e:	pop    rdi
   14001fd0f:	pop    rbx
   14001fd10:	pop    rbp
   14001fd11:	ret    
   14001fd12:	cmp    edx,0x40
   14001fd15:	jge    0x14001fd21
   14001fd17:	movsxd rax,edx
   14001fd1a:	mov    DWORD PTR [rdi+rax*4],0xffffff
   14001fd21:	mov    edx,DWORD PTR [rdi+0x108]
   14001fd27:	mov    eax,DWORD PTR [rdi+0x10c]
   14001fd2d:	cmp    eax,edx
   14001fd2f:	mov    QWORD PTR [rsp+0x88],rsi
   14001fd37:	lea    ecx,[rdx+0x1]
   14001fd3a:	cmovg  edx,eax
   14001fd3d:	mov    DWORD PTR [rdi+0x108],ecx
   14001fd43:	dec    ecx
   14001fd45:	mov    DWORD PTR [rdi+0x10c],edx
   14001fd4b:	mov    eax,DWORD PTR [r8+0x8]
   14001fd4f:	mov    DWORD PTR [rbp-0x1d],ecx
   14001fd52:	test   eax,0x7000000
   14001fd57:	jne    0x14001fd97
   14001fd59:	bt     eax,0x1e
   14001fd5d:	jae    0x14001fd97
   14001fd5f:	mov    rsi,QWORD PTR [r8]
   14001fd62:	mov    QWORD PTR [rbp-0x19],rsi
   14001fd66:	test   rsi,rsi
   14001fd69:	je     0x14001fd97
   14001fd6b:	mov    rax,QWORD PTR [rsi+0xc]
   14001fd6f:	test   rax,rax
   14001fd72:	je     0x14001fd9d
   14001fd74:	nop    DWORD PTR [rax+0x0]
   14001fd78:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fd80:	mov    QWORD PTR [rbp-0x19],rax
   14001fd84:	mov    rax,QWORD PTR [rax+0xc]
   14001fd88:	test   rax,rax
   14001fd8b:	jne    0x14001fd80
   14001fd8d:	mov    rdi,QWORD PTR [rbp+0x67]
   14001fd91:	mov    rsi,QWORD PTR [rbp-0x19]
   14001fd95:	jmp    0x14001fd9d
   14001fd97:	xor    esi,esi
   14001fd99:	mov    QWORD PTR [rbp-0x19],rsi
   14001fd9d:	lea    r8,[rbp-0x21]
   14001fda1:	movaps XMMWORD PTR [rsp+0x70],xmm6
   14001fda6:	lea    rdx,[rbp-0x20]
   14001fdaa:	mov    rcx,rbx
   14001fdad:	call   0x14001fa00
   14001fdb2:	test   rax,rax
   14001fdb5:	je     0x1400201a9
   14001fdbb:	nop    DWORD PTR [rax+rax*1+0x0]
   14001fdc0:	cmp    BYTE PTR [rax],0x0
   14001fdc3:	jne    0x14001fdd5
   14001fdc5:	mov    rax,QWORD PTR [rip+0x2838c]        # 0x140048158
   14001fdcc:	test   rax,rax
   14001fdcf:	je     0x1400201dc
   14001fdd5:	cmp    BYTE PTR [rax],0x7d
   14001fdd8:	jne    0x14001fde4
   14001fdda:	cmp    BYTE PTR [rbp-0x20],0x0
   14001fdde:	je     0x1400201b8
   14001fde4:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001fde8:	mov    r8,rsi
   14001fdeb:	mov    rdx,rax
   14001fdee:	call   0x14001dde0
   14001fdf3:	mov    rsi,rax
   14001fdf6:	test   rax,rax
   14001fdf9:	je     0x14001fe0d
   14001fdfb:	mov    ecx,DWORD PTR [rax+0x8]
   14001fdfe:	lea    rax,[rbp-0x9]
   14001fe02:	and    ecx,0xffffff
   14001fe08:	mov    DWORD PTR [rbp-0x9],ecx
   14001fe0b:	jmp    0x14001fe18
   14001fe0d:	mov    DWORD PTR [rbp-0x5],0xffffff
   14001fe14:	lea    rax,[rbp-0x5]
   14001fe18:	movsxd rcx,DWORD PTR [rbp-0x1d]
   14001fe1c:	cmp    ecx,0x40
   14001fe1f:	jge    0x14001fe26
   14001fe21:	mov    eax,DWORD PTR [rax]
   14001fe23:	mov    DWORD PTR [rdi+rcx*4],eax
   14001fe26:	lea    r8,[rbp-0x21]
   14001fe2a:	mov    rcx,rbx
   14001fe2d:	lea    rdx,[rbp-0x20]
   14001fe31:	call   0x14001fa00
   14001fe36:	cmp    BYTE PTR [rbp-0x21],0x0
   14001fe3a:	mov    rbx,rax
   14001fe3d:	mov    BYTE PTR [rbp-0x1f],0x1
   14001fe41:	je     0x14001fe9e
   14001fe43:	test   rax,rax
   14001fe46:	je     0x1400201f7
   14001fe4c:	mov    r9,QWORD PTR [rbp+0x7f]
   14001fe50:	lea    rdx,[rbp-0x1f]
   14001fe54:	mov    r8,rax
   14001fe57:	mov    BYTE PTR [rbp-0x1f],0x0
   14001fe5b:	lea    rcx,[rip+0x2830e]        # 0x140048170
   14001fe62:	mov    QWORD PTR [rsp+0x20],0x0
   14001fe6b:	call   0x1400247e0
   14001fe70:	test   al,al
   14001fe72:	jne    0x14001fe83
   14001fe74:	lea    rdx,[rip+0x17e0d]        # 0x140037c88
   14001fe7b:	mov    rcx,rdi
   14001fe7e:	call   0x140020630
   14001fe83:	movzx  eax,BYTE PTR [rbp-0x1f]
   14001fe87:	lea    r8,[rbp-0x21]
   14001fe8b:	mov    rcx,QWORD PTR [rbp+0x77]
   14001fe8f:	lea    rdx,[rbp-0x20]
   14001fe93:	mov    BYTE PTR [rbp-0x1f],al
   14001fe96:	call   0x14001fa00
   14001fe9b:	mov    rbx,rax
   14001fe9e:	test   rbx,rbx
   14001fea1:	je     0x1400201f7
   14001fea7:	cmp    BYTE PTR [rbx],0x3d
   14001feaa:	jne    0x14001ff48
   14001feb0:	movzx  eax,BYTE PTR [rbp-0x20]
   14001feb4:	test   al,al
   14001feb6:	jne    0x14001ff4c
   14001febc:	mov    rcx,QWORD PTR [rbp+0x77]
   14001fec0:	lea    r8,[rbp-0x21]
   14001fec4:	lea    rdx,[rbp-0x20]
   14001fec8:	call   0x14001fa00
   14001fecd:	cmp    BYTE PTR [rbp-0x21],0x0
   14001fed1:	mov    rbx,rax
   14001fed4:	je     0x14001ff48
   14001fed6:	test   rax,rax
   14001fed9:	je     0x14001ff05
   14001fedb:	mov    r9,QWORD PTR [rbp+0x7f]
   14001fedf:	mov    r8,rax
   14001fee2:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001fee6:	mov    rdx,rdi
   14001fee9:	call   0x14001de80
   14001feee:	mov    rcx,QWORD PTR [rbp+0x77]
   14001fef2:	lea    r8,[rbp-0x21]
   14001fef6:	lea    rdx,[rbp-0x20]
   14001fefa:	mov    BYTE PTR [rbp-0x1f],al
   14001fefd:	call   0x14001fa00
   14001ff02:	mov    rbx,rax
   14001ff05:	cmp    BYTE PTR [rbp-0x1f],0x0
   14001ff09:	je     0x14001ff48
   14001ff0b:	lea    rdx,[rbp-0x1]
   14001ff0f:	mov    rcx,rsi
   14001ff12:	call   0x14001e2b0
   14001ff17:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001ff1b:	mov    edx,DWORD PTR [rax]
   14001ff1d:	call   0x14001e120
   14001ff22:	mov    QWORD PTR [rbp-0x11],rax
   14001ff26:	test   rax,rax
   14001ff29:	je     0x14001ff48
   14001ff2b:	cmp    rax,rsi
   14001ff2e:	je     0x14001ff48
   14001ff30:	mov    rcx,QWORD PTR [rbp+0x5f]
   14001ff34:	xor    r8d,r8d
   14001ff37:	mov    rdx,rax
   14001ff3a:	call   0x140020540
   14001ff3f:	mov    rcx,QWORD PTR [rbp-0x11]
   14001ff43:	call   0x140020790
   14001ff48:	movzx  eax,BYTE PTR [rbp-0x20]
   14001ff4c:	test   rbx,rbx
   14001ff4f:	je     0x1400201f7
   14001ff55:	movzx  ecx,BYTE PTR [rbx]
   14001ff58:	cmp    cl,0x7d
   14001ff5b:	jne    0x14001ff65
   14001ff5d:	test   al,al
   14001ff5f:	je     0x1400201e5
   14001ff65:	cmp    cl,0x7b
   14001ff68:	jne    0x14001ffb2
   14001ff6a:	test   al,al
   14001ff6c:	jne    0x14001ffb2
   14001ff6e:	movsxd rax,DWORD PTR [rbp-0x1d]
   14001ff72:	cmp    eax,0x40
   14001ff75:	jge    0x14001ff7e
   14001ff77:	mov    DWORD PTR [rdi+rax*4],0xffffff
   14001ff7e:	mov    rax,QWORD PTR [rbp+0x7f]
   14001ff82:	mov    rdx,rdi
   14001ff85:	mov    rbx,QWORD PTR [rbp+0x77]
   14001ff89:	mov    rcx,rsi
   14001ff8c:	mov    r8,QWORD PTR [rbp+0x6f]
   14001ff90:	mov    r9,rbx
   14001ff93:	mov    QWORD PTR [rsp+0x20],rax
   14001ff98:	call   0x14001fc70
   14001ff9d:	movzx  eax,BYTE PTR [rbp-0x1f]
   14001ffa1:	test   al,al
   14001ffa3:	je     0x140020146
   14001ffa9:	mov    QWORD PTR [rbp-0x19],rsi
   14001ffad:	jmp    0x140020190
   14001ffb2:	cmp    BYTE PTR [rbp-0x21],0x0
   14001ffb6:	jne    0x1400201ee
   14001ffbc:	mov    rcx,rsi
   14001ffbf:	call   0x14001e3b0
   14001ffc4:	or     rdi,0xffffffffffffffff
   14001ffc8:	nop    DWORD PTR [rax+rax*1+0x0]
   14001ffd0:	inc    rdi
   14001ffd3:	cmp    BYTE PTR [rbx+rdi*1],0x0
   14001ffd7:	jne    0x14001ffd0
   14001ffd9:	movsxd rax,edi
   14001ffdc:	lea    rdx,[rbp+0xf]
   14001ffe0:	add    rax,rbx
   14001ffe3:	mov    r8d,0xa
   14001ffe9:	mov    rcx,rbx
   14001ffec:	mov    QWORD PTR [rbp-0x11],rax
   14001fff0:	call   QWORD PTR [rip+0x1226a]        # 0x140032260
   14001fff6:	mov    QWORD PTR [rbp+0x17],rax
   14001fffa:	mov    ecx,0x80000000
   14001ffff:	add    rcx,rax
   140020002:	mov    eax,0xffffffff
   140020007:	cmp    rcx,rax
   14002000a:	seta   BYTE PTR [rbp-0x1e]
   14002000e:	xor    ecx,ecx
   140020010:	call   QWORD PTR [rip+0x123f2]        # 0x140032408
   140020016:	lea    rdx,[rbp+0x7]
   14002001a:	mov    rcx,rbx
   14002001d:	call   QWORD PTR [rip+0x121fd]        # 0x140032220
   140020023:	xorps  xmm6,xmm6
   140020026:	cvtsd2ss xmm6,xmm0
   14002002a:	call   QWORD PTR [rip+0x123d0]        # 0x140032400
   140020030:	cmp    eax,0x22
   140020033:	movzx  eax,BYTE PTR [rbx]
   140020036:	sete   r8b
   14002003a:	test   al,al
   14002003c:	je     0x1400200db
   140020042:	cmp    edi,0x12
   140020045:	jne    0x14002009b
   140020047:	cmp    al,0x30
   140020049:	jne    0x14002009b
   14002004b:	cmp    BYTE PTR [rbx+0x1],0x78
   14002004f:	jne    0x14002009b
   140020051:	xor    r8d,r8d
   140020054:	mov    edx,0x2
   140020059:	nop    DWORD PTR [rax+0x0]
   140020060:	movzx  eax,BYTE PTR [rdx+rbx*1]
   140020064:	cmp    al,0x61
   140020066:	jl     0x14002006c
   140020068:	add    al,0xd9
   14002006a:	jmp    0x140020072
   14002006c:	cmp    al,0x41
   14002006e:	jl     0x140020072
   140020070:	add    al,0xf9
   140020072:	shl    r8,0x4
   140020076:	inc    rdx
   140020079:	movsx  eax,al
   14002007c:	sub    eax,0x30
   14002007f:	movsxd rcx,eax
   140020082:	add    rcx,r8
   140020085:	mov    r8,rcx
   140020088:	cmp    rdx,0x12
   14002008c:	jl     0x140020060
   14002008e:	mov    rdx,rcx
   140020091:	mov    rcx,rsi
   140020094:	call   0x14001e9f0
   140020099:	jmp    0x1400200e6
   14002009b:	mov    rax,QWORD PTR [rbp+0x7]
   14002009f:	mov    rcx,QWORD PTR [rbp+0xf]
   1400200a3:	mov    rdx,QWORD PTR [rbp-0x11]
   1400200a7:	cmp    rax,rcx
   1400200aa:	jbe    0x1400200c3
   1400200ac:	cmp    rax,rdx
   1400200af:	jne    0x1400200c3
   1400200b1:	test   r8b,r8b
   1400200b4:	jne    0x1400200c3
   1400200b6:	movaps xmm1,xmm6
   1400200b9:	mov    rcx,rsi
   1400200bc:	call   0x14001e7e0
   1400200c1:	jmp    0x1400200e6
   1400200c3:	cmp    rcx,rdx
   1400200c6:	jne    0x1400200db
   1400200c8:	cmp    BYTE PTR [rbp-0x1e],0x0
   1400200cc:	jne    0x1400200db
   1400200ce:	mov    edx,DWORD PTR [rbp+0x17]
   1400200d1:	mov    rcx,rsi
   1400200d4:	call   0x14001e820
   1400200d9:	jmp    0x1400200e6
   1400200db:	mov    rdx,rbx
   1400200de:	mov    rcx,rsi
   1400200e1:	call   0x14001e890
   1400200e6:	mov    rbx,QWORD PTR [rbp+0x77]
   1400200ea:	lea    r8,[rbp-0x21]
   1400200ee:	mov    rcx,rbx
   1400200f1:	lea    rdx,[rbp-0x20]
   1400200f5:	call   0x14001fa00
   1400200fa:	cmp    BYTE PTR [rbp-0x21],0x0
   1400200fe:	mov    rdi,QWORD PTR [rbp+0x67]
   140020102:	je     0x14002011c
   140020104:	mov    r9,QWORD PTR [rbp+0x7f]
   140020108:	mov    r8,rax
   14002010b:	mov    rcx,QWORD PTR [rbp+0x5f]
   14002010f:	mov    rdx,rdi
   140020112:	call   0x14001de80
   140020117:	jmp    0x14001ffa1
   14002011c:	cmp    BYTE PTR [rbx+0x801c],0x0
   140020123:	jne    0x14001ff9d
   140020129:	cmp    DWORD PTR [rbx+0x8018],0x0
   140020130:	movzx  eax,BYTE PTR [rbp-0x1f]
   140020134:	je     0x14001ffa1
   14002013a:	mov    BYTE PTR [rbx+0x801c],0x1
   140020141:	jmp    0x14001ffa1
   140020146:	mov    rax,QWORD PTR [rbp-0x19]
   14002014a:	test   rax,rax
   14002014d:	jne    0x14002015c
   14002014f:	mov    rax,QWORD PTR [rbp+0x5f]
   140020153:	and    DWORD PTR [rax+0x8],0xbfffffff
   14002015a:	jmp    0x140020164
   14002015c:	mov    QWORD PTR [rax+0xc],0x0
   140020164:	test   rsi,rsi
   140020167:	je     0x14002018c
   140020169:	mov    rcx,rsi
   14002016c:	call   0x140020420
   140020171:	mov    rcx,rsi
   140020174:	call   0x14001e3b0
   140020179:	call   QWORD PTR [rip+0x12279]        # 0x1400323f8
   14002017f:	mov    rdx,rsi
   140020182:	mov    rcx,rax
   140020185:	mov    r8,QWORD PTR [rax]
   140020188:	call   QWORD PTR [r8+0x8]
   14002018c:	mov    rsi,QWORD PTR [rbp-0x19]
   140020190:	lea    r8,[rbp-0x21]
   140020194:	mov    rcx,rbx
   140020197:	lea    rdx,[rbp-0x20]
   14002019b:	call   0x14001fa00
   1400201a0:	test   rax,rax
   1400201a3:	jne    0x14001fdc0
   1400201a9:	lea    rdx,[rip+0x17ba0]        # 0x140037d50
   1400201b0:	mov    rcx,rdi
   1400201b3:	call   0x140020630
   1400201b8:	dec    DWORD PTR [rdi+0x108]
   1400201be:	dec    DWORD PTR [rdi+0x108]
   1400201c4:	movaps xmm6,XMMWORD PTR [rsp+0x70]
   1400201c9:	mov    rsi,QWORD PTR [rsp+0x88]
   1400201d1:	add    rsp,0x90
   1400201d8:	pop    rdi
   1400201d9:	pop    rbx
   1400201da:	pop    rbp
   1400201db:	ret    
   1400201dc:	lea    rdx,[rip+0x17ba5]        # 0x140037d88
   1400201e3:	jmp    0x1400201b0
   1400201e5:	lea    rdx,[rip+0x17bf4]        # 0x140037de0
   1400201ec:	jmp    0x1400201b0
   1400201ee:	lea    rdx,[rip+0x17c1b]        # 0x140037e10
   1400201f5:	jmp    0x1400201b0
   1400201f7:	lea    rdx,[rip+0x17bba]        # 0x140037db8
   1400201fe:	jmp    0x1400201b0
   140020200:	rex push rbp
   140020202:	sub    rsp,0x40
   140020206:	mov    eax,DWORD PTR [rdx+0x8]
   140020209:	mov    rbp,rcx
   14002020c:	test   eax,0x7000000
   140020211:	jne    0x14002040c
   140020217:	bt     eax,0x1e
   14002021b:	jae    0x14002040c
   140020221:	mov    QWORD PTR [rsp+0x38],rsi
   140020226:	mov    rsi,QWORD PTR [rdx]
   140020229:	test   rsi,rsi
   14002022c:	je     0x140020407
   140020232:	mov    QWORD PTR [rsp+0x50],rbx
   140020237:	mov    QWORD PTR [rsp+0x30],rdi
   14002023c:	nop    DWORD PTR [rax+0x0]
   140020240:	mov    rcx,rbp
   140020243:	call   0x14001e770
   140020248:	mov    rdi,rax
   14002024b:	test   rax,rax
   14002024e:	je     0x1400202c7
   140020250:	test   rax,rax
   140020253:	je     0x140020273
   140020255:	call   QWORD PTR [rip+0x1219d]        # 0x1400323f8
   14002025b:	mov    edx,DWORD PTR [rdi+0x8]
   14002025e:	mov    rcx,rax
   140020261:	and    edx,0xffffff
   140020267:	mov    r8,QWORD PTR [rax]
   14002026a:	call   QWORD PTR [r8+0x18]
   14002026e:	mov    rbx,rax
   140020271:	jmp    0x14002027a
   140020273:	lea    rbx,[rip+0x12526]        # 0x1400327a0
   14002027a:	test   rsi,rsi
   14002027d:	je     0x14002029a
   14002027f:	call   QWORD PTR [rip+0x12173]        # 0x1400323f8
   140020285:	mov    edx,DWORD PTR [rsi+0x8]
   140020288:	mov    rcx,rax
   14002028b:	and    edx,0xffffff
   140020291:	mov    r8,QWORD PTR [rax]
   140020294:	call   QWORD PTR [r8+0x18]
   140020298:	jmp    0x1400202a1
   14002029a:	lea    rax,[rip+0x124ff]        # 0x1400327a0
   1400202a1:	sub    rbx,rax
   1400202a4:	movzx  edx,BYTE PTR [rax]
   1400202a7:	movzx  ecx,BYTE PTR [rax+rbx*1]
   1400202ab:	sub    edx,ecx
   1400202ad:	jne    0x1400202b6
   1400202af:	inc    rax
   1400202b2:	test   ecx,ecx
   1400202b4:	jne    0x1400202a4
   1400202b6:	test   edx,edx
   1400202b8:	je     0x14002035a
   1400202be:	mov    rdi,QWORD PTR [rdi+0xc]
   1400202c2:	test   rdi,rdi
   1400202c5:	jne    0x140020255
   1400202c7:	call   QWORD PTR [rip+0x1212b]        # 0x1400323f8
   1400202cd:	mov    rcx,rax
   1400202d0:	mov    rdx,QWORD PTR [rax]
   1400202d3:	call   QWORD PTR [rdx]
   1400202d5:	mov    rbx,rax
   1400202d8:	test   rax,rax
   1400202db:	je     0x14002036a
   1400202e1:	mov    ecx,DWORD PTR [rax+0x8]
   1400202e4:	xor    edi,edi
   1400202e6:	and    ecx,0x80ffffff
   1400202ec:	mov    QWORD PTR [rax],rdi
   1400202ef:	or     ecx,0xffffff
   1400202f5:	mov    DWORD PTR [rax+0x8],ecx
   1400202f8:	mov    rcx,rax
   1400202fb:	call   0x14001e3b0
   140020300:	and    DWORD PTR [rbx+0x8],0xf7ffffff
   140020307:	mov    QWORD PTR [rbx+0xc],rdi
   14002030b:	mov    DWORD PTR [rsp+0x58],0xffffff
   140020313:	call   QWORD PTR [rip+0x120df]        # 0x1400323f8
   140020319:	xor    r9d,r9d
   14002031c:	mov    BYTE PTR [rsp+0x20],0x1
   140020321:	lea    r8,[rsp+0x58]
   140020326:	mov    rcx,rax
   140020329:	lea    rdx,[rsp+0x60]
   14002032e:	mov    r10,QWORD PTR [rax]
   140020331:	call   QWORD PTR [r10+0x40]
   140020335:	mov    ecx,DWORD PTR [rbx+0x8]
   140020338:	mov    edx,edi
   14002033a:	mov    eax,DWORD PTR [rax]
   14002033c:	cmp    eax,DWORD PTR [rsp+0x58]
   140020340:	sete   dl
   140020343:	and    ecx,0xdf000000
   140020349:	shl    edx,0x1d
   14002034c:	and    eax,0xffffff
   140020351:	or     edx,ecx
   140020353:	or     edx,eax
   140020355:	mov    DWORD PTR [rbx+0x8],edx
   140020358:	jmp    0x14002036c
   14002035a:	mov    rdx,rsi
   14002035d:	mov    rcx,rdi
   140020360:	call   0x140020200
   140020365:	jmp    0x1400203f0
   14002036a:	xor    ebx,ebx
   14002036c:	mov    eax,DWORD PTR [rsi+0x8]
   14002036f:	mov    rdx,rsi
   140020372:	xor    eax,DWORD PTR [rbx+0x8]
   140020375:	and    eax,0xffffff
   14002037a:	xor    DWORD PTR [rbx+0x8],eax
   14002037d:	mov    ecx,DWORD PTR [rsi+0x8]
   140020380:	xor    ecx,DWORD PTR [rbx+0x8]
   140020383:	and    ecx,0x20000000
   140020389:	xor    DWORD PTR [rbx+0x8],ecx
   14002038c:	mov    rcx,rbx
   14002038f:	call   0x14001e450
   140020394:	mov    rdx,rbx
   140020397:	mov    rcx,rsi
   14002039a:	call   0x14001dd30
   14002039f:	mov    eax,DWORD PTR [rbp+0x8]
   1400203a2:	mov    ecx,eax
   1400203a4:	and    ecx,0x7000000
   1400203aa:	jne    0x1400203d9
   1400203ac:	bt     eax,0x1e
   1400203b0:	jae    0x1400203d9
   1400203b2:	mov    rax,QWORD PTR [rbp+0x0]
   1400203b6:	test   rax,rax
   1400203b9:	je     0x1400203d9
   1400203bb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400203c0:	test   rax,rax
   1400203c3:	je     0x1400203d3
   1400203c5:	mov    rcx,QWORD PTR [rax+0xc]
   1400203c9:	test   rcx,rcx
   1400203cc:	je     0x1400203d3
   1400203ce:	mov    rax,rcx
   1400203d1:	jmp    0x1400203c0
   1400203d3:	mov    QWORD PTR [rax+0xc],rbx
   1400203d7:	jmp    0x1400203f0
   1400203d9:	test   ecx,ecx
   1400203db:	je     0x1400203e5
   1400203dd:	mov    rcx,rbp
   1400203e0:	call   0x14001e3b0
   1400203e5:	or     DWORD PTR [rbp+0x8],0x40000000
   1400203ec:	mov    QWORD PTR [rbp+0x0],rbx
   1400203f0:	mov    rsi,QWORD PTR [rsi+0xc]
   1400203f4:	test   rsi,rsi
   1400203f7:	jne    0x140020240
   1400203fd:	mov    rdi,QWORD PTR [rsp+0x30]
   140020402:	mov    rbx,QWORD PTR [rsp+0x50]
   140020407:	mov    rsi,QWORD PTR [rsp+0x38]
   14002040c:	add    rsp,0x40
   140020410:	pop    rbp
   140020411:	ret    
   140020412:	int3   
   140020413:	int3   
   140020414:	int3   
   140020415:	int3   
   140020416:	int3   
   140020417:	int3   
   140020418:	int3   
   140020419:	int3   
   14002041a:	int3   
   14002041b:	int3   
   14002041c:	int3   
   14002041d:	int3   
   14002041e:	int3   
   14002041f:	int3   
   140020420:	mov    QWORD PTR [rsp+0x10],rsi
   140020425:	push   rdi
   140020426:	sub    rsp,0x20
   14002042a:	mov    eax,DWORD PTR [rcx+0x8]
   14002042d:	xor    esi,esi
   14002042f:	mov    QWORD PTR [rsp+0x30],rbx
   140020434:	mov    rdi,rcx
   140020437:	test   eax,0x7000000
   14002043c:	jne    0x14002046a
   14002043e:	bt     eax,0x1e
   140020442:	jae    0x14002046a
   140020444:	mov    rcx,QWORD PTR [rcx]
   140020447:	test   rcx,rcx
   14002044a:	je     0x14002046a
   14002044c:	nop    DWORD PTR [rax+0x0]
   140020450:	mov    rbx,QWORD PTR [rcx+0xc]
   140020454:	mov    edx,0x1
   140020459:	mov    QWORD PTR [rcx+0xc],rsi
   14002045d:	call   0x14001dcc0
   140020462:	mov    rcx,rbx
   140020465:	test   rbx,rbx
   140020468:	jne    0x140020450
   14002046a:	and    DWORD PTR [rdi+0x8],0xbfffffff
   140020471:	mov    rcx,QWORD PTR [rdi+0xc]
   140020475:	test   rcx,rcx
   140020478:	je     0x14002049f
   14002047a:	nop    WORD PTR [rax+rax*1+0x0]
   140020480:	cmp    rcx,rdi
   140020483:	je     0x14002049f
   140020485:	mov    rbx,QWORD PTR [rcx+0xc]
   140020489:	mov    edx,0x1
   14002048e:	mov    QWORD PTR [rcx+0xc],rsi
   140020492:	call   0x14001dcc0
   140020497:	mov    rcx,rbx
   14002049a:	test   rbx,rbx
   14002049d:	jne    0x140020480
   14002049f:	mov    ecx,DWORD PTR [rdi+0x8]
   1400204a2:	mov    eax,ecx
   1400204a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400204a9:	shr    eax,0x18
   1400204ac:	and    eax,0x7
   1400204af:	sub    eax,0x1
   1400204b2:	je     0x140020501
   1400204b4:	sub    eax,0x4
   1400204b7:	je     0x1400204e1
   1400204b9:	cmp    eax,0x2
   1400204bc:	jne    0x140020522
   1400204be:	bt     ecx,0x1c
   1400204c2:	jae    0x140020522
   1400204c4:	mov    rcx,QWORD PTR [rdi]
   1400204c7:	lea    edx,[rax+0x6]
   1400204ca:	call   0x14002639c
   1400204cf:	and    DWORD PTR [rdi+0x8],0xa8ffffff
   1400204d6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400204db:	add    rsp,0x20
   1400204df:	pop    rdi
   1400204e0:	ret    
   1400204e1:	cmp    QWORD PTR [rdi],rsi
   1400204e4:	je     0x140020522
   1400204e6:	bt     ecx,0x1c
   1400204ea:	jae    0x14002051f
   1400204ec:	call   QWORD PTR [rip+0x11f06]        # 0x1400323f8
   1400204f2:	mov    rdx,QWORD PTR [rdi]
   1400204f5:	mov    rcx,rax
   1400204f8:	mov    r8,QWORD PTR [rax]
   1400204fb:	call   QWORD PTR [r8+0x68]
   1400204ff:	jmp    0x14002051f
   140020501:	cmp    QWORD PTR [rdi],rsi
   140020504:	je     0x140020522
   140020506:	bt     ecx,0x1c
   14002050a:	jae    0x14002051f
   14002050c:	call   QWORD PTR [rip+0x11ee6]        # 0x1400323f8
   140020512:	mov    rdx,QWORD PTR [rdi]
   140020515:	mov    rcx,rax
   140020518:	mov    r8,QWORD PTR [rax]
   14002051b:	call   QWORD PTR [r8+0x58]
   14002051f:	mov    QWORD PTR [rdi],rsi
   140020522:	and    DWORD PTR [rdi+0x8],0xa8ffffff
   140020529:	mov    rsi,QWORD PTR [rsp+0x38]
   14002052e:	add    rsp,0x20
   140020532:	pop    rdi
   140020533:	ret    
   140020534:	int3   
   140020535:	int3   
   140020536:	int3   
   140020537:	int3   
   140020538:	int3   
   140020539:	int3   
   14002053a:	int3   
   14002053b:	int3   
   14002053c:	int3   
   14002053d:	int3   
   14002053e:	int3   
   14002053f:	int3   
   140020540:	test   rdx,rdx
   140020543:	je     0x140020626
   140020549:	mov    QWORD PTR [rsp+0x10],rbx
   14002054e:	mov    QWORD PTR [rsp+0x18],rbp
   140020553:	push   rdi
   140020554:	sub    rsp,0x20
   140020558:	mov    eax,DWORD PTR [rcx+0x8]
   14002055b:	mov    rdi,rcx
   14002055e:	mov    ecx,eax
   140020560:	movzx  ebp,r8b
   140020564:	mov    rbx,rdx
   140020567:	and    ecx,0x7000000
   14002056d:	jne    0x14002057a
   14002056f:	bt     eax,0x1e
   140020573:	jae    0x14002057a
   140020575:	mov    rdx,QWORD PTR [rdi]
   140020578:	jmp    0x14002057c
   14002057a:	xor    edx,edx
   14002057c:	mov    QWORD PTR [rsp+0x30],rsi
   140020581:	cmp    rdx,rbx
   140020584:	jne    0x1400205b0
   140020586:	mov    rsi,QWORD PTR [rbx+0xc]
   14002058a:	test   rsi,rsi
   14002058d:	jne    0x140020598
   14002058f:	btr    eax,0x1e
   140020593:	mov    DWORD PTR [rdi+0x8],eax
   140020596:	jmp    0x1400205e2
   140020598:	test   ecx,ecx
   14002059a:	je     0x1400205a4
   14002059c:	mov    rcx,rdi
   14002059f:	call   0x14001e3b0
   1400205a4:	or     DWORD PTR [rdi+0x8],0x40000000
   1400205ab:	mov    QWORD PTR [rdi],rsi
   1400205ae:	jmp    0x1400205e2
   1400205b0:	test   ecx,ecx
   1400205b2:	jne    0x1400205e2
   1400205b4:	bt     eax,0x1e
   1400205b8:	jae    0x1400205e2
   1400205ba:	mov    rcx,QWORD PTR [rdi]
   1400205bd:	test   rcx,rcx
   1400205c0:	je     0x1400205e2
   1400205c2:	mov    rax,QWORD PTR [rcx+0xc]
   1400205c6:	test   rax,rax
   1400205c9:	je     0x1400205e2
   1400205cb:	cmp    rax,rbx
   1400205ce:	je     0x1400205da
   1400205d0:	mov    rcx,rax
   1400205d3:	test   rax,rax
   1400205d6:	jne    0x1400205c2
   1400205d8:	jmp    0x1400205e2
   1400205da:	mov    rax,QWORD PTR [rbx+0xc]
   1400205de:	mov    QWORD PTR [rcx+0xc],rax
   1400205e2:	mov    rsi,QWORD PTR [rsp+0x30]
   1400205e7:	mov    QWORD PTR [rbx+0xc],0x0
   1400205ef:	test   bpl,bpl
   1400205f2:	je     0x140020617
   1400205f4:	mov    rcx,rbx
   1400205f7:	call   0x140020420
   1400205fc:	mov    rcx,rbx
   1400205ff:	call   0x14001e3b0
   140020604:	call   QWORD PTR [rip+0x11dee]        # 0x1400323f8
   14002060a:	mov    rdx,rbx
   14002060d:	mov    rcx,rax
   140020610:	mov    r8,QWORD PTR [rax]
   140020613:	call   QWORD PTR [r8+0x8]
   140020617:	mov    rbx,QWORD PTR [rsp+0x38]
   14002061c:	mov    rbp,QWORD PTR [rsp+0x40]
   140020621:	add    rsp,0x20
   140020625:	pop    rdi
   140020626:	ret    
   140020627:	int3   
   140020628:	int3   
   140020629:	int3   
   14002062a:	int3   
   14002062b:	int3   
   14002062c:	int3   
   14002062d:	int3   
   14002062e:	int3   
   14002062f:	int3   
   140020630:	mov    QWORD PTR [rsp+0x10],rbx
   140020635:	push   rdi
   140020636:	sub    rsp,0x130
   14002063d:	mov    r9,QWORD PTR [rcx+0x100]
   140020644:	mov    rdi,rcx
   140020647:	mov    r8,rdx
   14002064a:	lea    rcx,[rsp+0x20]
   14002064f:	lea    rdx,[rip+0x17592]        # 0x140037be8
   140020656:	call   0x140001600
   14002065b:	mov    rcx,QWORD PTR [rdi+0x120]
   140020662:	lea    rdx,[rax+0x9]
   140020666:	mov    r8,QWORD PTR [rcx]
   140020669:	call   QWORD PTR [r8+0x10]
   14002066d:	xor    ebx,ebx
   14002066f:	cmp    DWORD PTR [rdi+0x10c],ebx
   140020675:	jle    0x14002070c
   14002067b:	mov    QWORD PTR [rsp+0x140],rsi
   140020683:	mov    rsi,rdi
   140020686:	cmp    ebx,0x40
   140020689:	jge    0x1400206f6
   14002068b:	cmp    DWORD PTR [rsi],0xffffff
   140020691:	je     0x1400206f6
   140020693:	cmp    ebx,DWORD PTR [rdi+0x108]
   140020699:	jge    0x1400206ba
   14002069b:	call   QWORD PTR [rip+0x11d57]        # 0x1400323f8
   1400206a1:	movsxd rcx,ebx
   1400206a4:	mov    r8,QWORD PTR [rax]
   1400206a7:	mov    edx,DWORD PTR [rdi+rcx*4]
   1400206aa:	mov    rcx,rax
   1400206ad:	call   QWORD PTR [r8+0x18]
   1400206b1:	lea    rdx,[rip+0x17550]        # 0x140037c08
   1400206b8:	jmp    0x1400206d7
   1400206ba:	call   QWORD PTR [rip+0x11d38]        # 0x1400323f8
   1400206c0:	movsxd rcx,ebx
   1400206c3:	mov    r8,QWORD PTR [rax]
   1400206c6:	mov    edx,DWORD PTR [rdi+rcx*4]
   1400206c9:	mov    rcx,rax
   1400206cc:	call   QWORD PTR [r8+0x18]
   1400206d0:	lea    rdx,[rip+0x17539]        # 0x140037c10
   1400206d7:	mov    r8,rax
   1400206da:	lea    rcx,[rsp+0x20]
   1400206df:	call   0x140001600
   1400206e4:	mov    rcx,QWORD PTR [rdi+0x120]
   1400206eb:	lea    rdx,[rax+0x9]
   1400206ef:	mov    r8,QWORD PTR [rcx]
   1400206f2:	call   QWORD PTR [r8+0x10]
   1400206f6:	inc    ebx
   1400206f8:	add    rsi,0x4
   1400206fc:	cmp    ebx,DWORD PTR [rdi+0x10c]
   140020702:	jl     0x140020686
   140020704:	mov    rsi,QWORD PTR [rsp+0x140]
   14002070c:	mov    rcx,QWORD PTR [rdi+0x120]
   140020713:	lea    rdx,[rip+0x13c1e]        # 0x140034338
   14002071a:	mov    rax,QWORD PTR [rcx]
   14002071d:	call   QWORD PTR [rax+0x10]
   140020720:	mov    rbx,QWORD PTR [rsp+0x148]
   140020728:	mov    BYTE PTR [rdi+0x110],0x1
   14002072f:	add    rsp,0x130
   140020736:	pop    rdi
   140020737:	ret    
   140020738:	int3   
   140020739:	int3   
   14002073a:	int3   
   14002073b:	int3   
   14002073c:	int3   
   14002073d:	int3   
   14002073e:	int3   
   14002073f:	int3   
   140020740:	mov    QWORD PTR [rsp+0x8],rbx
   140020745:	push   rdi
   140020746:	sub    rsp,0x20
   14002074a:	mov    edi,r8d
   14002074d:	mov    r8b,0x1
   140020750:	call   0x14001ded0
   140020755:	mov    rbx,rax
   140020758:	test   rax,rax
   14002075b:	je     0x140020775
   14002075d:	mov    rcx,rax
   140020760:	call   0x14001e3b0
   140020765:	and    DWORD PTR [rbx+0x8],0xfaffffff
   14002076c:	or     DWORD PTR [rbx+0x8],0x2000000
   140020773:	mov    DWORD PTR [rbx],edi
   140020775:	mov    rbx,QWORD PTR [rsp+0x30]
   14002077a:	add    rsp,0x20
   14002077e:	pop    rdi
   14002077f:	ret    
   140020780:	lea    rcx,[rip+0x13b81]        # 0x140034308
   140020787:	rex.W jmp QWORD PTR [rip+0x11c22]        # 0x1400323b0
   14002078e:	int3   
   14002078f:	int3   
   140020790:	test   rcx,rcx
   140020793:	je     0x1400207c2
   140020795:	push   rbx
   140020796:	sub    rsp,0x20
   14002079a:	mov    rbx,rcx
   14002079d:	call   0x140020420
   1400207a2:	mov    rcx,rbx
   1400207a5:	call   0x14001e3b0
   1400207aa:	call   QWORD PTR [rip+0x11c48]        # 0x1400323f8
   1400207b0:	mov    rdx,rbx
   1400207b3:	mov    rcx,rax
   1400207b6:	mov    r8,QWORD PTR [rax]
   1400207b9:	call   QWORD PTR [r8+0x8]
   1400207bd:	add    rsp,0x20
   1400207c1:	pop    rbx
   1400207c2:	ret    
   1400207c3:	int3   
   1400207c4:	int3   
   1400207c5:	int3   
   1400207c6:	int3   
   1400207c7:	int3   
   1400207c8:	int3   
   1400207c9:	int3   
   1400207ca:	int3   
   1400207cb:	int3   
   1400207cc:	int3   
   1400207cd:	int3   
   1400207ce:	int3   
   1400207cf:	int3   
   1400207d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400207d5:	push   rdi
   1400207d6:	sub    rsp,0x20
   1400207da:	test   BYTE PTR [rcx+0x18],0x1
   1400207de:	movzx  edi,dl
   1400207e1:	mov    rbx,rcx
   1400207e4:	jne    0x140020838
   1400207e6:	test   BYTE PTR [rcx+0x19],0x8
   1400207ea:	jne    0x140020838
   1400207ec:	mov    eax,DWORD PTR [rcx+0x14]
   1400207ef:	mov    ecx,DWORD PTR [rcx+0x24]
   1400207f2:	cmp    eax,ecx
   1400207f4:	jl     0x1400207ff
   1400207f6:	sub    eax,ecx
   1400207f8:	inc    eax
   1400207fa:	cmp    DWORD PTR [rbx+0x8],eax
   1400207fd:	jge    0x14002081d
   1400207ff:	mov    edx,0x1
   140020804:	mov    rcx,rbx
   140020807:	call   QWORD PTR [rbx+0x30]
   14002080a:	test   al,al
   14002080c:	jne    0x14002081d
   14002080e:	or     BYTE PTR [rbx+0x18],0x1
   140020812:	mov    rbx,QWORD PTR [rsp+0x30]
   140020817:	add    rsp,0x20
   14002081b:	pop    rdi
   14002081c:	ret    
   14002081d:	mov    eax,DWORD PTR [rbx+0x14]
   140020820:	sub    eax,DWORD PTR [rbx+0x24]
   140020823:	movsxd rcx,eax
   140020826:	mov    rax,QWORD PTR [rbx]
   140020829:	mov    BYTE PTR [rcx+rax*1],dil
   14002082d:	mov    rcx,rbx
   140020830:	inc    DWORD PTR [rbx+0x14]
   140020833:	call   0x1400209e0
   140020838:	mov    rbx,QWORD PTR [rsp+0x30]
   14002083d:	add    rsp,0x20
   140020841:	pop    rdi
   140020842:	ret    
   140020843:	int3   
   140020844:	int3   
   140020845:	int3   
   140020846:	int3   
   140020847:	int3   
   140020848:	int3   
   140020849:	int3   
   14002084a:	int3   
   14002084b:	int3   
   14002084c:	int3   
   14002084d:	int3   
   14002084e:	int3   
   14002084f:	int3   
   140020850:	mov    QWORD PTR [rsp+0x8],rbx
   140020855:	mov    QWORD PTR [rsp+0x10],rbp
   14002085a:	mov    QWORD PTR [rsp+0x18],rsi
   14002085f:	push   rdi
   140020860:	sub    rsp,0x20
   140020864:	xor    ebp,ebp
   140020866:	mov    DWORD PTR [rcx+0x8],r8d
   14002086a:	and    edx,0x3fffffff
   140020870:	mov    QWORD PTR [rcx],rbp
   140020873:	mov    DWORD PTR [rcx+0xc],edx
   140020876:	mov    esi,r9d
   140020879:	mov    edi,r8d
   14002087c:	mov    rbx,rcx
   14002087f:	test   r8d,r8d
   140020882:	je     0x1400208a1
   140020884:	call   QWORD PTR [rip+0x11c36]        # 0x1400324c0
   14002088a:	mov    rax,QWORD PTR [rip+0x11aff]        # 0x140032390
   140020891:	movsxd rdx,DWORD PTR [rbx+0x8]
   140020895:	mov    rcx,QWORD PTR [rax]
   140020898:	mov    rax,QWORD PTR [rcx]
   14002089b:	call   QWORD PTR [rax+0x8]
   14002089e:	mov    QWORD PTR [rbx],rax
   1400208a1:	mov    BYTE PTR [rbx+0x18],bpl
   1400208a5:	and    DWORD PTR [rbx+0x38],0xfffffffc
   1400208a9:	mov    QWORD PTR [rbx+0x10],rbp
   1400208ad:	mov    DWORD PTR [rbx+0x1c],ebp
   1400208b0:	mov    DWORD PTR [rbx+0x24],ebp
   1400208b3:	mov    BYTE PTR [rbx+0x19],sil
   1400208b7:	test   edi,edi
   1400208b9:	je     0x14002090d
   1400208bb:	test   sil,0x8
   1400208bf:	jne    0x14002090d
   1400208c1:	mov    DWORD PTR [rbx+0x20],0xffffffff
   1400208c8:	test   bpl,0x1
   1400208cc:	jne    0x140020905
   1400208ce:	cmp    DWORD PTR [rbx+0x8],0x1
   1400208d2:	jge    0x1400208f3
   1400208d4:	mov    edx,0x1
   1400208d9:	mov    rcx,rbx
   1400208dc:	call   QWORD PTR [rbx+0x30]
   1400208df:	test   al,al
   1400208e1:	jne    0x1400208f3
   1400208e3:	or     BYTE PTR [rbx+0x18],0x1
   1400208e7:	mov    eax,DWORD PTR [rbx+0x14]
   1400208ea:	and    BYTE PTR [rbx+0x18],0xfe
   1400208ee:	mov    DWORD PTR [rbx+0x20],eax
   1400208f1:	jmp    0x140020910
   1400208f3:	mov    eax,DWORD PTR [rbx+0x14]
   1400208f6:	sub    eax,DWORD PTR [rbx+0x24]
   1400208f9:	js     0x140020905
   1400208fb:	movsxd rcx,eax
   1400208fe:	mov    rax,QWORD PTR [rbx]
   140020901:	mov    BYTE PTR [rcx+rax*1],bpl
   140020905:	mov    eax,DWORD PTR [rbx+0x14]
   140020908:	mov    DWORD PTR [rbx+0x20],eax
   14002090b:	jmp    0x140020910
   14002090d:	mov    DWORD PTR [rbx+0x20],ebp
   140020910:	mov    rbp,QWORD PTR [rsp+0x38]
   140020915:	lea    rax,[rip+0xfffffffffffe3094]        # 0x1400039b0
   14002091c:	mov    rsi,QWORD PTR [rsp+0x40]
   140020921:	mov    QWORD PTR [rbx+0x28],rax
   140020925:	lea    rax,[rip+0x1344]        # 0x140021c70
   14002092c:	mov    QWORD PTR [rbx+0x30],rax
   140020930:	mov    rax,rbx
   140020933:	mov    rbx,QWORD PTR [rsp+0x30]
   140020938:	add    rsp,0x20
   14002093c:	pop    rdi
   14002093d:	ret    
   14002093e:	int3   
   14002093f:	int3   
   140020940:	rex push rbx
   140020942:	sub    rsp,0x20
   140020946:	mov    QWORD PTR [rcx],rdx
   140020949:	xor    eax,eax
   14002094b:	mov    DWORD PTR [rcx+0x8],r8d
   14002094f:	mov    rbx,rcx
   140020952:	mov    QWORD PTR [rcx+0xc],0x40000000
   14002095a:	mov    BYTE PTR [rcx+0x18],0x0
   14002095e:	and    DWORD PTR [rcx+0x38],0xfffffffc
   140020962:	mov    DWORD PTR [rcx+0x14],eax
   140020965:	mov    DWORD PTR [rcx+0x1c],eax
   140020968:	mov    DWORD PTR [rcx+0x24],eax
   14002096b:	mov    BYTE PTR [rcx+0x19],r9b
   14002096f:	test   r9b,0x8
   140020973:	je     0x14002097f
   140020975:	mov    DWORD PTR [rcx+0x14],r8d
   140020979:	mov    DWORD PTR [rcx+0x20],r8d
   14002097d:	jmp    0x1400209c0
   14002097f:	test   BYTE PTR [rcx+0x18],0x1
   140020983:	mov    DWORD PTR [rcx+0x20],0xffffffff
   14002098a:	jne    0x1400209ba
   14002098c:	cmp    r8d,0x1
   140020990:	jge    0x1400209a8
   140020992:	mov    edx,0x1
   140020997:	call   QWORD PTR [rcx+0x30]
   14002099a:	test   al,al
   14002099c:	jne    0x1400209a8
   14002099e:	or     BYTE PTR [rbx+0x18],0x1
   1400209a2:	and    BYTE PTR [rbx+0x18],0xfe
   1400209a6:	jmp    0x1400209ba
   1400209a8:	mov    eax,DWORD PTR [rbx+0x14]
   1400209ab:	sub    eax,DWORD PTR [rbx+0x24]
   1400209ae:	js     0x1400209ba
   1400209b0:	movsxd rcx,eax
   1400209b3:	mov    rax,QWORD PTR [rbx]
   1400209b6:	mov    BYTE PTR [rcx+rax*1],0x0
   1400209ba:	mov    eax,DWORD PTR [rbx+0x14]
   1400209bd:	mov    DWORD PTR [rbx+0x20],eax
   1400209c0:	lea    rax,[rip+0xfffffffffffe2fe9]        # 0x1400039b0
   1400209c7:	mov    QWORD PTR [rbx+0x28],rax
   1400209cb:	lea    rax,[rip+0x129e]        # 0x140021c70
   1400209d2:	mov    QWORD PTR [rbx+0x30],rax
   1400209d6:	mov    rax,rbx
   1400209d9:	add    rsp,0x20
   1400209dd:	pop    rbx
   1400209de:	ret    
   1400209df:	int3   
   1400209e0:	rex push rbx
   1400209e2:	sub    rsp,0x20
   1400209e6:	mov    eax,DWORD PTR [rcx+0x14]
   1400209e9:	mov    rbx,rcx
   1400209ec:	cmp    eax,DWORD PTR [rcx+0x20]
   1400209ef:	jle    0x140020a48
   1400209f1:	test   BYTE PTR [rcx+0x19],0x8
   1400209f5:	jne    0x140020a42
   1400209f7:	test   BYTE PTR [rcx+0x18],0x1
   1400209fb:	jne    0x140020a42
   1400209fd:	mov    ecx,DWORD PTR [rcx+0x24]
   140020a00:	cmp    eax,ecx
   140020a02:	jl     0x140020a0d
   140020a04:	sub    eax,ecx
   140020a06:	inc    eax
   140020a08:	cmp    DWORD PTR [rbx+0x8],eax
   140020a0b:	jge    0x140020a30
   140020a0d:	mov    edx,0x1
   140020a12:	mov    rcx,rbx
   140020a15:	call   QWORD PTR [rbx+0x30]
   140020a18:	test   al,al
   140020a1a:	jne    0x140020a30
   140020a1c:	or     BYTE PTR [rbx+0x18],0x1
   140020a20:	mov    eax,DWORD PTR [rbx+0x14]
   140020a23:	and    BYTE PTR [rbx+0x18],0xfe
   140020a27:	mov    DWORD PTR [rbx+0x20],eax
   140020a2a:	add    rsp,0x20
   140020a2e:	pop    rbx
   140020a2f:	ret    
   140020a30:	mov    eax,DWORD PTR [rbx+0x14]
   140020a33:	sub    eax,DWORD PTR [rbx+0x24]
   140020a36:	js     0x140020a42
   140020a38:	movsxd rcx,eax
   140020a3b:	mov    rax,QWORD PTR [rbx]
   140020a3e:	mov    BYTE PTR [rcx+rax*1],0x0
   140020a42:	mov    eax,DWORD PTR [rbx+0x14]
   140020a45:	mov    DWORD PTR [rbx+0x20],eax
   140020a48:	add    rsp,0x20
   140020a4c:	pop    rbx
   140020a4d:	ret    
   140020a4e:	int3   
   140020a4f:	int3   
   140020a50:	mov    QWORD PTR [rsp+0x8],rbx
   140020a55:	mov    QWORD PTR [rsp+0x10],rbp
   140020a5a:	mov    QWORD PTR [rsp+0x18],rsi
   140020a5f:	mov    QWORD PTR [rsp+0x20],rdi
   140020a64:	push   r14
   140020a66:	sub    rsp,0x20
   140020a6a:	xor    r14d,r14d
   140020a6d:	mov    edi,r9d
   140020a70:	test   DWORD PTR [rcx+0xc],0xc0000000
   140020a77:	mov    esi,r8d
   140020a7a:	mov    rbp,rdx
   140020a7d:	mov    rbx,rcx
   140020a80:	jne    0x140020aa1
   140020a82:	mov    rdx,QWORD PTR [rcx]
   140020a85:	test   rdx,rdx
   140020a88:	je     0x140020a9d
   140020a8a:	mov    rax,QWORD PTR [rip+0x118ff]        # 0x140032390
   140020a91:	mov    rcx,QWORD PTR [rax]
   140020a94:	mov    rax,QWORD PTR [rcx]
   140020a97:	call   QWORD PTR [rax+0x28]
   140020a9a:	mov    QWORD PTR [rbx],r14
   140020a9d:	mov    DWORD PTR [rbx+0x8],r14d
   140020aa1:	and    DWORD PTR [rbx+0xc],0x3fffffff
   140020aa8:	mov    rcx,rbx
   140020aab:	movzx  eax,BYTE PTR [rsp+0x50]
   140020ab0:	mov    QWORD PTR [rbx],rbp
   140020ab3:	mov    DWORD PTR [rbx+0x8],esi
   140020ab6:	mov    BYTE PTR [rbx+0x19],al
   140020ab9:	mov    DWORD PTR [rbx+0x10],r14d
   140020abd:	mov    DWORD PTR [rbx+0x14],edi
   140020ac0:	mov    DWORD PTR [rbx+0x1c],r14d
   140020ac4:	mov    BYTE PTR [rbx+0x18],r14b
   140020ac8:	mov    DWORD PTR [rbx+0x24],r14d
   140020acc:	mov    DWORD PTR [rbx+0x20],0xffffffff
   140020ad3:	mov    rbx,QWORD PTR [rsp+0x30]
   140020ad8:	mov    rbp,QWORD PTR [rsp+0x38]
   140020add:	mov    rsi,QWORD PTR [rsp+0x40]
   140020ae2:	mov    rdi,QWORD PTR [rsp+0x48]
   140020ae7:	add    rsp,0x20
   140020aeb:	pop    r14
   140020aed:	jmp    0x1400209e0
   140020af2:	int3   
   140020af3:	int3   
   140020af4:	int3   
   140020af5:	int3   
   140020af6:	int3   
   140020af7:	int3   
   140020af8:	int3   
   140020af9:	int3   
   140020afa:	int3   
   140020afb:	int3   
   140020afc:	int3   
   140020afd:	int3   
   140020afe:	int3   
   140020aff:	int3   
   140020b00:	mov    QWORD PTR [rsp+0x8],rbx
   140020b05:	push   rdi
   140020b06:	sub    rsp,0x20
   140020b0a:	mov    rdi,rcx
   140020b0d:	mov    rbx,r8
   140020b10:	mov    ecx,DWORD PTR [rcx+0x10]
   140020b13:	mov    r8d,DWORD PTR [rdi+0x20]
   140020b17:	lea    eax,[rcx+rdx*1]
   140020b1a:	cmp    eax,r8d
   140020b1d:	jl     0x140020b32
   140020b1f:	mov    DWORD PTR [rbx],0x0
   140020b25:	xor    al,al
   140020b27:	mov    rbx,QWORD PTR [rsp+0x30]
   140020b2c:	add    rsp,0x20
   140020b30:	pop    rdi
   140020b31:	ret    
   140020b32:	mov    eax,DWORD PTR [rbx]
   140020b34:	add    eax,ecx
   140020b36:	add    eax,edx
   140020b38:	cmp    eax,r8d
   140020b3b:	jle    0x140020b46
   140020b3d:	sub    r8d,ecx
   140020b40:	sub    r8d,edx
   140020b43:	mov    DWORD PTR [rbx],r8d
   140020b46:	mov    r8d,DWORD PTR [rbx]
   140020b49:	mov    rcx,rdi
   140020b4c:	call   0x140020bd0
   140020b51:	mov    eax,DWORD PTR [rdi+0x20]
   140020b54:	sub    eax,DWORD PTR [rdi+0x10]
   140020b57:	cmp    eax,DWORD PTR [rbx]
   140020b59:	jge    0x140020b5d
   140020b5b:	mov    DWORD PTR [rbx],eax
   140020b5d:	cmp    DWORD PTR [rbx],0x0
   140020b60:	mov    rbx,QWORD PTR [rsp+0x30]
   140020b65:	setne  al
   140020b68:	add    rsp,0x20
   140020b6c:	pop    rdi
   140020b6d:	ret    
   140020b6e:	int3   
   140020b6f:	int3   
   140020b70:	rex push rbx
   140020b72:	sub    rsp,0x20
   140020b76:	movzx  r8d,BYTE PTR [rcx+0x18]
   140020b7b:	mov    rbx,rcx
   140020b7e:	test   r8b,0x2
   140020b82:	jne    0x140020b97
   140020b84:	mov    ecx,DWORD PTR [rcx+0x10]
   140020b87:	lea    eax,[rcx+rdx*1]
   140020b8a:	cmp    DWORD PTR [rbx+0x20],eax
   140020b8d:	jge    0x140020b9f
   140020b8f:	or     r8b,0x2
   140020b93:	mov    BYTE PTR [rbx+0x18],r8b
   140020b97:	xor    al,al
   140020b99:	add    rsp,0x20
   140020b9d:	pop    rbx
   140020b9e:	ret    
   140020b9f:	mov    eax,DWORD PTR [rbx+0x24]
   140020ba2:	cmp    ecx,eax
   140020ba4:	jl     0x140020baf
   140020ba6:	sub    ecx,eax
   140020ba8:	add    ecx,edx
   140020baa:	cmp    DWORD PTR [rbx+0x8],ecx
   140020bad:	jge    0x140020bc3
   140020baf:	mov    rcx,rbx
   140020bb2:	call   QWORD PTR [rbx+0x28]
   140020bb5:	test   al,al
   140020bb7:	jne    0x140020bc3
   140020bb9:	or     BYTE PTR [rbx+0x18],0x2
   140020bbd:	add    rsp,0x20
   140020bc1:	pop    rbx
   140020bc2:	ret    
   140020bc3:	mov    al,0x1
   140020bc5:	add    rsp,0x20
   140020bc9:	pop    rbx
   140020bca:	ret    
   140020bcb:	int3   
   140020bcc:	int3   
   140020bcd:	int3   
   140020bce:	int3   
   140020bcf:	int3   
   140020bd0:	rex push rbx
   140020bd2:	sub    rsp,0x20
   140020bd6:	movzx  r9d,BYTE PTR [rcx+0x18]
   140020bdb:	mov    rbx,rcx
   140020bde:	test   r9b,0x2
   140020be2:	je     0x140020bec
   140020be4:	xor    al,al
   140020be6:	add    rsp,0x20
   140020bea:	pop    rbx
   140020beb:	ret    
   140020bec:	mov    ecx,DWORD PTR [rcx+0x10]
   140020bef:	add    edx,r8d
   140020bf2:	lea    eax,[rcx+rdx*1]
   140020bf5:	cmp    DWORD PTR [rbx+0x20],eax
   140020bf8:	jge    0x140020c0e
   140020bfa:	or     r9b,0x2
   140020bfe:	xor    al,al
   140020c00:	mov    BYTE PTR [rbx+0x18],r9b
   140020c04:	and    BYTE PTR [rbx+0x18],0xfd
   140020c08:	add    rsp,0x20
   140020c0c:	pop    rbx
   140020c0d:	ret    
   140020c0e:	mov    eax,DWORD PTR [rbx+0x24]
   140020c11:	cmp    ecx,eax
   140020c13:	jl     0x140020c1e
   140020c15:	sub    ecx,eax
   140020c17:	add    ecx,edx
   140020c19:	cmp    DWORD PTR [rbx+0x8],ecx
   140020c1c:	jge    0x140020c36
   140020c1e:	mov    rcx,rbx
   140020c21:	call   QWORD PTR [rbx+0x28]
   140020c24:	test   al,al
   140020c26:	jne    0x140020c36
   140020c28:	or     BYTE PTR [rbx+0x18],0x2
   140020c2c:	and    BYTE PTR [rbx+0x18],0xfd
   140020c30:	add    rsp,0x20
   140020c34:	pop    rbx
   140020c35:	ret    
   140020c36:	mov    al,0x1
   140020c38:	and    BYTE PTR [rbx+0x18],0xfd
   140020c3c:	add    rsp,0x20
   140020c40:	pop    rbx
   140020c41:	ret    
   140020c42:	int3   
   140020c43:	int3   
   140020c44:	int3   
   140020c45:	int3   
   140020c46:	int3   
   140020c47:	int3   
   140020c48:	int3   
   140020c49:	int3   
   140020c4a:	int3   
   140020c4b:	int3   
   140020c4c:	int3   
   140020c4d:	int3   
   140020c4e:	int3   
   140020c4f:	int3   
   140020c50:	rex push rbx
   140020c52:	sub    rsp,0x20
   140020c56:	test   BYTE PTR [rcx+0x18],0x1
   140020c5a:	mov    rbx,rcx
   140020c5d:	jne    0x140020c86
   140020c5f:	test   BYTE PTR [rcx+0x19],0x8
   140020c63:	jne    0x140020c86
   140020c65:	mov    eax,DWORD PTR [rcx+0x14]
   140020c68:	mov    ecx,DWORD PTR [rcx+0x24]
   140020c6b:	cmp    eax,ecx
   140020c6d:	jl     0x140020c78
   140020c6f:	sub    eax,ecx
   140020c71:	add    eax,edx
   140020c73:	cmp    DWORD PTR [rbx+0x8],eax
   140020c76:	jge    0x140020c8e
   140020c78:	mov    rcx,rbx
   140020c7b:	call   QWORD PTR [rbx+0x30]
   140020c7e:	test   al,al
   140020c80:	jne    0x140020c8e
   140020c82:	or     BYTE PTR [rbx+0x18],0x1
   140020c86:	xor    al,al
   140020c88:	add    rsp,0x20
   140020c8c:	pop    rbx
   140020c8d:	ret    
   140020c8e:	mov    al,0x1
   140020c90:	add    rsp,0x20
   140020c94:	pop    rbx
   140020c95:	ret    
   140020c96:	int3   
   140020c97:	int3   
   140020c98:	int3   
   140020c99:	int3   
   140020c9a:	int3   
   140020c9b:	int3   
   140020c9c:	int3   
   140020c9d:	int3   
   140020c9e:	int3   
   140020c9f:	int3   
   140020ca0:	rex push rsi
   140020ca2:	sub    rsp,0x20
   140020ca6:	test   DWORD PTR [rcx+0xc],0xc0000000
   140020cad:	mov    rsi,rcx
   140020cb0:	je     0x140020d0b
   140020cb2:	and    edx,0x3fffffff
   140020cb8:	mov    DWORD PTR [rcx+0xc],edx
   140020cbb:	movsxd rdx,DWORD PTR [rcx+0x8]
   140020cbf:	test   edx,edx
   140020cc1:	je     0x140020d04
   140020cc3:	mov    rax,QWORD PTR [rip+0x116c6]        # 0x140032390
   140020cca:	mov    QWORD PTR [rsp+0x30],rbx
   140020ccf:	mov    QWORD PTR [rsp+0x38],rdi
   140020cd4:	mov    rdi,rdx
   140020cd7:	mov    rcx,QWORD PTR [rax]
   140020cda:	mov    rax,QWORD PTR [rcx]
   140020cdd:	call   QWORD PTR [rax+0x8]
   140020ce0:	mov    rdx,QWORD PTR [rsi]
   140020ce3:	mov    r8,rdi
   140020ce6:	mov    rcx,rax
   140020ce9:	mov    rbx,rax
   140020cec:	call   0x140026f70
   140020cf1:	mov    rdi,QWORD PTR [rsp+0x38]
   140020cf6:	mov    QWORD PTR [rsi],rbx
   140020cf9:	mov    rbx,QWORD PTR [rsp+0x30]
   140020cfe:	add    rsp,0x20
   140020d02:	pop    rsi
   140020d03:	ret    
   140020d04:	mov    QWORD PTR [rcx],0x0
   140020d0b:	add    rsp,0x20
   140020d0f:	pop    rsi
   140020d10:	ret    
   140020d11:	int3   
   140020d12:	int3   
   140020d13:	int3   
   140020d14:	int3   
   140020d15:	int3   
   140020d16:	int3   
   140020d17:	int3   
   140020d18:	int3   
   140020d19:	int3   
   140020d1a:	int3   
   140020d1b:	int3   
   140020d1c:	int3   
   140020d1d:	int3   
   140020d1e:	int3   
   140020d1f:	int3   
   140020d20:	mov    QWORD PTR [rsp+0x8],rbx
   140020d25:	push   rdi
   140020d26:	sub    rsp,0x20
   140020d2a:	test   BYTE PTR [rcx+0x19],0x1
   140020d2e:	mov    rdi,rdx
   140020d31:	mov    rbx,rcx
   140020d34:	je     0x140020e50
   140020d3a:	cmp    BYTE PTR [rcx+0x18],0x0
   140020d3e:	jne    0x140020e50
   140020d44:	mov    ecx,DWORD PTR [rcx+0x10]
   140020d47:	lea    eax,[rcx+0x2]
   140020d4a:	cmp    DWORD PTR [rbx+0x20],eax
   140020d4d:	jge    0x140020d57
   140020d4f:	mov    BYTE PTR [rbx+0x18],0x2
   140020d53:	xor    al,al
   140020d55:	jmp    0x140020d7f
   140020d57:	mov    eax,DWORD PTR [rbx+0x24]
   140020d5a:	cmp    ecx,eax
   140020d5c:	jl     0x140020d68
   140020d5e:	sub    ecx,eax
   140020d60:	add    ecx,0x2
   140020d63:	cmp    DWORD PTR [rbx+0x8],ecx
   140020d66:	jge    0x140020d7d
   140020d68:	mov    edx,0x2
   140020d6d:	mov    rcx,rbx
   140020d70:	call   QWORD PTR [rbx+0x28]
   140020d73:	test   al,al
   140020d75:	jne    0x140020d7d
   140020d77:	or     BYTE PTR [rbx+0x18],0x2
   140020d7b:	jmp    0x140020d7f
   140020d7d:	mov    al,0x1
   140020d7f:	and    BYTE PTR [rbx+0x18],0xfd
   140020d83:	test   al,al
   140020d85:	je     0x140020e50
   140020d8b:	mov    eax,DWORD PTR [rbx+0x10]
   140020d8e:	sub    eax,DWORD PTR [rbx+0x24]
   140020d91:	movsxd rcx,eax
   140020d94:	add    rcx,QWORD PTR [rbx]
   140020d97:	je     0x140020e50
   140020d9d:	cmp    BYTE PTR [rcx],0x2f
   140020da0:	jne    0x140020e50
   140020da6:	cmp    BYTE PTR [rcx+0x1],0x2a
   140020daa:	jne    0x140020e50
   140020db0:	test   rdi,rdi
   140020db3:	je     0x140020dbb
   140020db5:	mov    DWORD PTR [rdi],0x0
   140020dbb:	add    DWORD PTR [rbx+0x10],0x2
   140020dbf:	cmp    BYTE PTR [rbx+0x18],0x0
   140020dc3:	jne    0x140020e50
   140020dc9:	nop    DWORD PTR [rax+0x0]
   140020dd0:	movzx  edx,BYTE PTR [rbx+0x18]
   140020dd4:	test   dl,0x2
   140020dd7:	jne    0x140020e50
   140020dd9:	mov    ecx,DWORD PTR [rbx+0x10]
   140020ddc:	lea    eax,[rcx+0x2]
   140020ddf:	cmp    DWORD PTR [rbx+0x20],eax
   140020de2:	jge    0x140020dee
   140020de4:	or     dl,0x2
   140020de7:	mov    BYTE PTR [rbx+0x18],dl
   140020dea:	xor    al,al
   140020dec:	jmp    0x140020e16
   140020dee:	mov    eax,DWORD PTR [rbx+0x24]
   140020df1:	cmp    ecx,eax
   140020df3:	jl     0x140020dff
   140020df5:	sub    ecx,eax
   140020df7:	add    ecx,0x2
   140020dfa:	cmp    DWORD PTR [rbx+0x8],ecx
   140020dfd:	jge    0x140020e14
   140020dff:	mov    edx,0x2
   140020e04:	mov    rcx,rbx
   140020e07:	call   QWORD PTR [rbx+0x28]
   140020e0a:	test   al,al
   140020e0c:	jne    0x140020e14
   140020e0e:	or     BYTE PTR [rbx+0x18],0x2
   140020e12:	jmp    0x140020e16
   140020e14:	mov    al,0x1
   140020e16:	and    BYTE PTR [rbx+0x18],0xfd
   140020e1a:	test   al,al
   140020e1c:	je     0x140020e50
   140020e1e:	mov    eax,DWORD PTR [rbx+0x10]
   140020e21:	sub    eax,DWORD PTR [rbx+0x24]
   140020e24:	movsxd rcx,eax
   140020e27:	add    rcx,QWORD PTR [rbx]
   140020e2a:	je     0x140020e50
   140020e2c:	cmp    BYTE PTR [rcx],0x2a
   140020e2f:	jne    0x140020e37
   140020e31:	cmp    BYTE PTR [rcx+0x1],0x2f
   140020e35:	je     0x140020e5d
   140020e37:	mov    rcx,rbx
   140020e3a:	call   0x14001e1c0
   140020e3f:	cmp    al,0xa
   140020e41:	jne    0x140020e4a
   140020e43:	test   rdi,rdi
   140020e46:	je     0x140020e4a
   140020e48:	inc    DWORD PTR [rdi]
   140020e4a:	cmp    BYTE PTR [rbx+0x18],0x0
   140020e4e:	je     0x140020dd0
   140020e50:	xor    al,al
   140020e52:	mov    rbx,QWORD PTR [rsp+0x30]
   140020e57:	add    rsp,0x20
   140020e5b:	pop    rdi
   140020e5c:	ret    
   140020e5d:	add    DWORD PTR [rbx+0x10],0x2
   140020e61:	mov    al,0x1
   140020e63:	mov    rbx,QWORD PTR [rsp+0x30]
   140020e68:	add    rsp,0x20
   140020e6c:	pop    rdi
   140020e6d:	ret    
   140020e6e:	int3   
   140020e6f:	int3   
   140020e70:	rex push rbx
   140020e72:	sub    rsp,0x20
   140020e76:	test   BYTE PTR [rcx+0x19],0x1
   140020e7a:	mov    rbx,rcx
   140020e7d:	je     0x140020f2f
   140020e83:	cmp    BYTE PTR [rcx+0x18],0x0
   140020e87:	jne    0x140020f2f
   140020e8d:	mov    ecx,DWORD PTR [rcx+0x10]
   140020e90:	lea    eax,[rcx+0x2]
   140020e93:	cmp    DWORD PTR [rbx+0x20],eax
   140020e96:	jge    0x140020ea0
   140020e98:	mov    BYTE PTR [rbx+0x18],0x2
   140020e9c:	xor    al,al
   140020e9e:	jmp    0x140020ec8
   140020ea0:	mov    eax,DWORD PTR [rbx+0x24]
   140020ea3:	cmp    ecx,eax
   140020ea5:	jl     0x140020eb1
   140020ea7:	sub    ecx,eax
   140020ea9:	add    ecx,0x2
   140020eac:	cmp    DWORD PTR [rbx+0x8],ecx
   140020eaf:	jge    0x140020ec6
   140020eb1:	mov    edx,0x2
   140020eb6:	mov    rcx,rbx
   140020eb9:	call   QWORD PTR [rbx+0x28]
   140020ebc:	test   al,al
   140020ebe:	jne    0x140020ec6
   140020ec0:	or     BYTE PTR [rbx+0x18],0x2
   140020ec4:	jmp    0x140020ec8
   140020ec6:	mov    al,0x1
   140020ec8:	and    BYTE PTR [rbx+0x18],0xfd
   140020ecc:	test   al,al
   140020ece:	je     0x140020f2f
   140020ed0:	mov    edx,DWORD PTR [rbx+0x10]
   140020ed3:	mov    eax,edx
   140020ed5:	sub    eax,DWORD PTR [rbx+0x24]
   140020ed8:	movsxd rcx,eax
   140020edb:	add    rcx,QWORD PTR [rbx]
   140020ede:	je     0x140020f2f
   140020ee0:	cmp    BYTE PTR [rcx],0x2f
   140020ee3:	jne    0x140020f2f
   140020ee5:	cmp    BYTE PTR [rcx+0x1],0x2f
   140020ee9:	jne    0x140020f2f
   140020eeb:	lea    eax,[rdx+0x2]
   140020eee:	mov    QWORD PTR [rsp+0x30],rdi
   140020ef3:	mov    rcx,rbx
   140020ef6:	mov    DWORD PTR [rbx+0x10],eax
   140020ef9:	xor    dil,dil
   140020efc:	call   0x14001e1c0
   140020f01:	cmp    BYTE PTR [rbx+0x18],dil
   140020f05:	jne    0x140020f22
   140020f07:	cmp    al,0xa
   140020f09:	jne    0x140020f11
   140020f0b:	cmp    dil,0x5c
   140020f0f:	jne    0x140020f22
   140020f11:	mov    rcx,rbx
   140020f14:	movzx  edi,al
   140020f17:	call   0x14001e1c0
   140020f1c:	cmp    BYTE PTR [rbx+0x18],0x0
   140020f20:	je     0x140020f07
   140020f22:	mov    al,0x1
   140020f24:	mov    rdi,QWORD PTR [rsp+0x30]
   140020f29:	add    rsp,0x20
   140020f2d:	pop    rbx
   140020f2e:	ret    
   140020f2f:	xor    al,al
   140020f31:	add    rsp,0x20
   140020f35:	pop    rbx
   140020f36:	ret    
   140020f37:	int3   
   140020f38:	int3   
   140020f39:	int3   
   140020f3a:	int3   
   140020f3b:	int3   
   140020f3c:	int3   
   140020f3d:	int3   
   140020f3e:	int3   
   140020f3f:	int3   
   140020f40:	rex push rbx
   140020f42:	sub    rsp,0x20
   140020f46:	test   BYTE PTR [rcx+0x19],0x1
   140020f4a:	mov    rbx,rcx
   140020f4d:	je     0x140020fb5
   140020f4f:	cmp    BYTE PTR [rcx+0x18],0x0
   140020f53:	jne    0x140020fb5
   140020f55:	test   BYTE PTR [rbx+0x18],0x2
   140020f59:	jne    0x140020fb5
   140020f5b:	mov    ecx,DWORD PTR [rbx+0x10]
   140020f5e:	lea    eax,[rcx+0x1]
   140020f61:	cmp    DWORD PTR [rbx+0x20],eax
   140020f64:	jl     0x140020fb1
   140020f66:	mov    eax,DWORD PTR [rbx+0x24]
   140020f69:	cmp    ecx,eax
   140020f6b:	jl     0x140020f76
   140020f6d:	sub    ecx,eax
   140020f6f:	inc    ecx
   140020f71:	cmp    DWORD PTR [rbx+0x8],ecx
   140020f74:	jge    0x140020f85
   140020f76:	mov    edx,0x1
   140020f7b:	mov    rcx,rbx
   140020f7e:	call   QWORD PTR [rbx+0x28]
   140020f81:	test   al,al
   140020f83:	je     0x140020fb1
   140020f85:	mov    r8d,DWORD PTR [rbx+0x10]
   140020f89:	mov    eax,r8d
   140020f8c:	sub    eax,DWORD PTR [rbx+0x24]
   140020f8f:	movsxd rcx,eax
   140020f92:	mov    rax,QWORD PTR [rbx]
   140020f95:	movzx  edx,BYTE PTR [rcx+rax*1]
   140020f99:	cmp    edx,0x9
   140020f9c:	jb     0x140020fb5
   140020f9e:	cmp    edx,0xd
   140020fa1:	jbe    0x140020fa8
   140020fa3:	cmp    edx,0x20
   140020fa6:	jne    0x140020fb5
   140020fa8:	lea    eax,[r8+0x1]
   140020fac:	mov    DWORD PTR [rbx+0x10],eax
   140020faf:	jmp    0x140020f55
   140020fb1:	or     BYTE PTR [rbx+0x18],0x2
   140020fb5:	add    rsp,0x20
   140020fb9:	pop    rbx
   140020fba:	ret    
   140020fbb:	int3   
   140020fbc:	int3   
   140020fbd:	int3   
   140020fbe:	int3   
   140020fbf:	int3   
   140020fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140020fc5:	push   rdi
   140020fc6:	sub    rsp,0x20
   140020fca:	test   DWORD PTR [rcx+0xc],0xc0000000
   140020fd1:	lea    ebx,[rdx+0x1]
   140020fd4:	mov    rdi,rcx
   140020fd7:	je     0x140020fef
   140020fd9:	test   BYTE PTR [rcx+0x19],0x2
   140020fdd:	je     0x140020fed
   140020fdf:	cmp    DWORD PTR [rcx+0x8],ebx
   140020fe2:	jge    0x140020fed
   140020fe4:	xor    edx,edx
   140020fe6:	call   0x140020ca0
   140020feb:	jmp    0x140020fef
   140020fed:	mov    ebx,edx
   140020fef:	mov    edx,ebx
   140020ff1:	mov    rcx,rdi
   140020ff4:	mov    rbx,QWORD PTR [rsp+0x30]
   140020ff9:	add    rsp,0x20
   140020ffd:	pop    rdi
   140020ffe:	jmp    0x14000da80
   140021003:	int3   
   140021004:	int3   
   140021005:	int3   
   140021006:	int3   
   140021007:	int3   
   140021008:	int3   
   140021009:	int3   
   14002100a:	int3   
   14002100b:	int3   
   14002100c:	int3   
   14002100d:	int3   
   14002100e:	int3   
   14002100f:	int3   
   140021010:	movzx  eax,BYTE PTR [rdx]
   140021013:	movzx  eax,BYTE PTR [rax+rcx*1+0x1128]
   14002101b:	xor    ecx,ecx
   14002101d:	test   al,al
   14002101f:	setne  cl
   140021022:	mov    DWORD PTR [r8],ecx
   140021025:	ret    
   140021026:	int3   
   140021027:	int3   
   140021028:	int3   
   140021029:	int3   
   14002102a:	int3   
   14002102b:	int3   
   14002102c:	int3   
   14002102d:	int3   
   14002102e:	int3   
   14002102f:	int3   
   140021030:	mov    QWORD PTR [rsp+0x8],rbx
   140021035:	mov    QWORD PTR [rsp+0x10],rbp
   14002103a:	mov    QWORD PTR [rsp+0x18],rsi
   14002103f:	mov    QWORD PTR [rsp+0x20],rdi
   140021044:	movsxd rdi,DWORD PTR [rcx+0x1c]
   140021048:	xor    r11d,r11d
   14002104b:	xor    r10d,r10d
   14002104e:	mov    rsi,r8
   140021051:	mov    rbp,rdx
   140021054:	mov    rbx,rcx
   140021057:	test   rdi,rdi
   14002105a:	jle    0x1400210a2
   14002105c:	nop    DWORD PTR [rax+0x0]
   140021060:	movzx  r8d,BYTE PTR [rbx+r10*1+0x24]
   140021066:	mov    rax,rbp
   140021069:	add    r8,0x13
   14002106d:	add    r8,r8
   140021070:	mov    r9,QWORD PTR [rbx+r8*8]
   140021074:	sub    r9,rbp
   140021077:	nop    WORD PTR [rax+rax*1+0x0]
   140021080:	movzx  edx,BYTE PTR [rax]
   140021083:	movzx  ecx,BYTE PTR [rax+r9*1]
   140021088:	sub    edx,ecx
   14002108a:	jne    0x140021093
   14002108c:	inc    rax
   14002108f:	test   ecx,ecx
   140021091:	jne    0x140021080
   140021093:	test   edx,edx
   140021095:	je     0x1400210bf
   140021097:	inc    r11d
   14002109a:	inc    r10
   14002109d:	cmp    r10,rdi
   1400210a0:	jl     0x140021060
   1400210a2:	mov    DWORD PTR [rsi],0x0
   1400210a8:	xor    al,al
   1400210aa:	mov    rbx,QWORD PTR [rsp+0x8]
   1400210af:	mov    rbp,QWORD PTR [rsp+0x10]
   1400210b4:	mov    rsi,QWORD PTR [rsp+0x18]
   1400210b9:	mov    rdi,QWORD PTR [rsp+0x20]
   1400210be:	ret    
   1400210bf:	movsxd rax,r11d
   1400210c2:	movzx  ecx,BYTE PTR [rax+rbx*1+0x24]
   1400210c7:	add    rcx,rcx
   1400210ca:	mov    ecx,DWORD PTR [rbx+rcx*8+0x128]
   1400210d1:	mov    DWORD PTR [rsi],ecx
   1400210d3:	movzx  eax,BYTE PTR [rax+rbx*1+0x24]
   1400210d8:	jmp    0x1400210aa
   1400210da:	int3   
   1400210db:	int3   
   1400210dc:	int3   
   1400210dd:	int3   
   1400210de:	int3   
   1400210df:	int3   
   1400210e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400210e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400210ea:	push   rdi
   1400210eb:	sub    rsp,0x20
   1400210ef:	movsxd rdi,r8d
   1400210f2:	mov    rsi,rdx
   1400210f5:	mov    rbx,rcx
   1400210f8:	test   r8d,r8d
   1400210fb:	jle    0x140021119
   1400210fd:	movzx  ecx,BYTE PTR [rcx+0x18]
   140021101:	test   cl,0x2
   140021104:	jne    0x140021119
   140021106:	mov    r9d,DWORD PTR [rbx+0x10]
   14002110a:	lea    eax,[r9+rdi*1]
   14002110e:	cmp    DWORD PTR [rbx+0x20],eax
   140021111:	jge    0x14002112b
   140021113:	or     cl,0x2
   140021116:	mov    BYTE PTR [rbx+0x18],cl
   140021119:	xor    al,al
   14002111b:	mov    rbx,QWORD PTR [rsp+0x30]
   140021120:	mov    rsi,QWORD PTR [rsp+0x38]
   140021125:	add    rsp,0x20
   140021129:	pop    rdi
   14002112a:	ret    
   14002112b:	mov    eax,DWORD PTR [rbx+0x24]
   14002112e:	cmp    r9d,eax
   140021131:	jl     0x14002113f
   140021133:	sub    r9d,eax
   140021136:	add    r9d,edi
   140021139:	cmp    DWORD PTR [rbx+0x8],r9d
   14002113d:	jge    0x14002115f
   14002113f:	mov    edx,edi
   140021141:	mov    rcx,rbx
   140021144:	call   QWORD PTR [rbx+0x28]
   140021147:	test   al,al
   140021149:	jne    0x14002115f
   14002114b:	or     BYTE PTR [rbx+0x18],0x2
   14002114f:	mov    rbx,QWORD PTR [rsp+0x30]
   140021154:	mov    rsi,QWORD PTR [rsp+0x38]
   140021159:	add    rsp,0x20
   14002115d:	pop    rdi
   14002115e:	ret    
   14002115f:	mov    eax,DWORD PTR [rbx+0x10]
   140021162:	mov    r8,rdi
   140021165:	sub    eax,DWORD PTR [rbx+0x24]
   140021168:	mov    rcx,rsi
   14002116b:	movsxd rdx,eax
   14002116e:	add    rdx,QWORD PTR [rbx]
   140021171:	call   0x140026f70
   140021176:	add    DWORD PTR [rbx+0x10],edi
   140021179:	mov    al,0x1
   14002117b:	mov    rbx,QWORD PTR [rsp+0x30]
   140021180:	mov    rsi,QWORD PTR [rsp+0x38]
   140021185:	add    rsp,0x20
   140021189:	pop    rdi
   14002118a:	ret    
   14002118b:	int3   
   14002118c:	int3   
   14002118d:	int3   
   14002118e:	int3   
   14002118f:	int3   
   140021190:	sub    rsp,0x28
   140021194:	mov    eax,DWORD PTR [rip+0x2709e]        # 0x140048238
   14002119a:	test   al,0x1
   14002119c:	jne    0x1400212f6
   1400211a2:	or     eax,0x1
   1400211a5:	mov    QWORD PTR [rsp+0x30],rbx
   1400211aa:	mov    ecx,0x1228
   1400211af:	mov    DWORD PTR [rip+0x27083],eax        # 0x140048238
   1400211b5:	mov    QWORD PTR [rsp+0x40],rsi
   1400211ba:	call   0x140007bf0
   1400211bf:	xor    esi,esi
   1400211c1:	mov    rbx,rax
   1400211c4:	test   rax,rax
   1400211c7:	je     0x1400212dd
   1400211cd:	lea    rax,[rip+0x16d5c]        # 0x140037f30
   1400211d4:	mov    QWORD PTR [rsp+0x38],rbp
   1400211d9:	mov    QWORD PTR [rbx],rax
   1400211dc:	lea    rcx,[rbx+0x128]
   1400211e3:	lea    rax,[rip+0x16a4e]        # 0x140037c38
   1400211ea:	mov    QWORD PTR [rsp+0x20],rdi
   1400211ef:	xor    edx,edx
   1400211f1:	mov    QWORD PTR [rbx+0x10],rax
   1400211f5:	mov    r8d,0x1000
   1400211fb:	mov    BYTE PTR [rbx+0x8],0x5c
   1400211ff:	mov    DWORD PTR [rbx+0x1c],0xb
   140021206:	mov    DWORD PTR [rbx+0x18],0x1
   14002120d:	mov    DWORD PTR [rbx+0x20],esi
   140021210:	call   0x1400277b0
   140021215:	lea    rdi,[rip+0x16c3c]        # 0x140037e58
   14002121c:	mov    rdx,rdi
   14002121f:	lea    rbp,[rip+0x16ce2]        # 0x140037f08
   140021226:	data16 nop WORD PTR [rax+rax*1+0x0]
   140021230:	movzx  eax,BYTE PTR [rdx-0x8]
   140021234:	mov    BYTE PTR [rbx+rsi*1+0x24],al
   140021238:	mov    r8d,eax
   14002123b:	mov    rcx,QWORD PTR [rdx]
   14002123e:	add    r8,r8
   140021241:	or     rax,0xffffffffffffffff
   140021245:	mov    QWORD PTR [rbx+r8*8+0x130],rcx
   14002124d:	nop    DWORD PTR [rax]
   140021250:	inc    rax
   140021253:	cmp    BYTE PTR [rcx+rax*1],0x0
   140021257:	jne    0x140021250
   140021259:	mov    DWORD PTR [rbx+r8*8+0x128],eax
   140021261:	mov    ecx,DWORD PTR [rbx+0x20]
   140021264:	cmp    eax,ecx
   140021266:	cmovg  ecx,eax
   140021269:	inc    rsi
   14002126c:	add    rdx,0x10
   140021270:	mov    DWORD PTR [rbx+0x20],ecx
   140021273:	cmp    rdx,rbp
   140021276:	jl     0x140021230
   140021278:	lea    rax,[rip+0x16cc1]        # 0x140037f40
   14002127f:	xor    edx,edx
   140021281:	lea    rcx,[rbx+0x1128]
   140021288:	mov    QWORD PTR [rbx],rax
   14002128b:	mov    r8d,0x100
   140021291:	call   0x1400277b0
   140021296:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400212a0:	mov    rcx,QWORD PTR [rdi]
   1400212a3:	movzx  edx,BYTE PTR [rcx]
   1400212a6:	movzx  ecx,BYTE PTR [rdi-0x8]
   1400212aa:	add    rdi,0x10
   1400212ae:	mov    BYTE PTR [rdx+rbx*1+0x1128],cl
   1400212b5:	cmp    rdi,rbp
   1400212b8:	jl     0x1400212a0
   1400212ba:	mov    rdi,QWORD PTR [rsp+0x20]
   1400212bf:	mov    rax,rbx
   1400212c2:	mov    rbp,QWORD PTR [rsp+0x38]
   1400212c7:	mov    rsi,QWORD PTR [rsp+0x40]
   1400212cc:	mov    QWORD PTR [rip+0x26f5d],rbx        # 0x140048230
   1400212d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400212d8:	add    rsp,0x28
   1400212dc:	ret    
   1400212dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400212e2:	mov    rax,rsi
   1400212e5:	mov    QWORD PTR [rip+0x26f44],rsi        # 0x140048230
   1400212ec:	mov    rsi,QWORD PTR [rsp+0x40]
   1400212f1:	add    rsp,0x28
   1400212f5:	ret    
   1400212f6:	mov    rax,QWORD PTR [rip+0x26f33]        # 0x140048230
   1400212fd:	add    rsp,0x28
   140021301:	ret    
   140021302:	int3   
   140021303:	int3   
   140021304:	int3   
   140021305:	int3   
   140021306:	int3   
   140021307:	int3   
   140021308:	int3   
   140021309:	int3   
   14002130a:	int3   
   14002130b:	int3   
   14002130c:	int3   
   14002130d:	int3   
   14002130e:	int3   
   14002130f:	int3   
   140021310:	mov    QWORD PTR [rsp+0x8],rbx
   140021315:	mov    QWORD PTR [rsp+0x18],rsi
   14002131a:	push   rdi
   14002131b:	sub    rsp,0x20
   14002131f:	mov    rsi,rdx
   140021322:	mov    rbx,rcx
   140021325:	call   0x14001e1c0
   14002132a:	movzx  edi,al
   14002132d:	cmp    al,BYTE PTR [rsi+0x8]
   140021330:	jne    0x1400213b8
   140021336:	mov    ecx,DWORD PTR [rbx+0x10]
   140021339:	mov    r9d,DWORD PTR [rbx+0x20]
   14002133d:	mov    r8d,DWORD PTR [rsi+0x20]
   140021341:	mov    DWORD PTR [rsp+0x38],r8d
   140021346:	cmp    ecx,r9d
   140021349:	jge    0x1400213fd
   14002134f:	lea    eax,[rcx+r8*1]
   140021353:	cmp    eax,r9d
   140021356:	jle    0x140021363
   140021358:	mov    r8d,r9d
   14002135b:	sub    r8d,ecx
   14002135e:	mov    DWORD PTR [rsp+0x38],r8d
   140021363:	xor    edx,edx
   140021365:	mov    rcx,rbx
   140021368:	call   0x140020bd0
   14002136d:	mov    ecx,DWORD PTR [rsp+0x38]
   140021371:	mov    eax,DWORD PTR [rbx+0x20]
   140021374:	sub    eax,DWORD PTR [rbx+0x10]
   140021377:	cmp    eax,ecx
   140021379:	cmovl  ecx,eax
   14002137c:	test   ecx,ecx
   14002137e:	mov    DWORD PTR [rsp+0x38],ecx
   140021382:	setne  al
   140021385:	test   al,al
   140021387:	je     0x1400213fd
   140021389:	mov    eax,DWORD PTR [rbx+0x10]
   14002138c:	lea    r8,[rsp+0x38]
   140021391:	sub    eax,DWORD PTR [rbx+0x24]
   140021394:	mov    rcx,rsi
   140021397:	movsxd rdx,eax
   14002139a:	mov    rax,QWORD PTR [rsi]
   14002139d:	add    rdx,QWORD PTR [rbx]
   1400213a0:	call   QWORD PTR [rax]
   1400213a2:	movzx  edi,al
   1400213a5:	mov    eax,DWORD PTR [rsp+0x38]
   1400213a9:	add    DWORD PTR [rbx+0x10],eax
   1400213ac:	mov    edx,DWORD PTR [rbx+0x10]
   1400213af:	cmp    edx,DWORD PTR [rbx+0x20]
   1400213b2:	jle    0x1400213cc
   1400213b4:	or     BYTE PTR [rbx+0x18],0x2
   1400213b8:	movzx  eax,dil
   1400213bc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400213c1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400213c6:	add    rsp,0x20
   1400213ca:	pop    rdi
   1400213cb:	ret    
   1400213cc:	and    BYTE PTR [rbx+0x18],0xfd
   1400213d0:	mov    ecx,DWORD PTR [rbx+0x24]
   1400213d3:	cmp    edx,ecx
   1400213d5:	jl     0x1400213e0
   1400213d7:	mov    eax,DWORD PTR [rbx+0x8]
   1400213da:	add    ecx,eax
   1400213dc:	cmp    edx,ecx
   1400213de:	jl     0x1400213b8
   1400213e0:	or     edx,0xffffffff
   1400213e3:	mov    rcx,rbx
   1400213e6:	call   QWORD PTR [rbx+0x28]
   1400213e9:	movzx  eax,dil
   1400213ed:	mov    rbx,QWORD PTR [rsp+0x30]
   1400213f2:	mov    rsi,QWORD PTR [rsp+0x40]
   1400213f7:	add    rsp,0x20
   1400213fb:	pop    rdi
   1400213fc:	ret    
   1400213fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140021402:	xor    al,al
   140021404:	mov    rsi,QWORD PTR [rsp+0x40]
   140021409:	add    rsp,0x20
   14002140d:	pop    rdi
   14002140e:	ret    
   14002140f:	int3   
   140021410:	rex push rbx
   140021412:	push   rbp
   140021413:	push   r13
   140021415:	push   r15
   140021417:	sub    rsp,0x28
   14002141b:	test   BYTE PTR [rcx+0x19],0x1
   14002141f:	mov    r15,r8
   140021422:	movsxd r13,r9d
   140021425:	mov    rbp,rdx
   140021428:	mov    rbx,rcx
   14002142b:	je     0x1400215c2
   140021431:	test   rdx,rdx
   140021434:	je     0x1400215c2
   14002143a:	cmp    BYTE PTR [rcx+0x18],0x0
   14002143e:	je     0x14002144f
   140021440:	mov    BYTE PTR [r8],0x0
   140021444:	add    rsp,0x28
   140021448:	pop    r15
   14002144a:	pop    r13
   14002144c:	pop    rbp
   14002144d:	pop    rbx
   14002144e:	ret    
   14002144f:	call   0x140020f40
   140021454:	mov    r9d,DWORD PTR [rbp+0x18]
   140021458:	xor    edx,edx
   14002145a:	mov    r8,QWORD PTR [rbp+0x10]
   14002145e:	mov    rcx,rbx
   140021461:	call   0x1400218e0
   140021466:	test   al,al
   140021468:	jne    0x140021478
   14002146a:	mov    BYTE PTR [r15],al
   14002146d:	add    rsp,0x28
   140021471:	pop    r15
   140021473:	pop    r13
   140021475:	pop    rbp
   140021476:	pop    rbx
   140021477:	ret    
   140021478:	mov    eax,DWORD PTR [rbp+0x18]
   14002147b:	add    DWORD PTR [rbx+0x10],eax
   14002147e:	mov    eax,DWORD PTR [rbx+0x10]
   140021481:	mov    QWORD PTR [rsp+0x20],r14
   140021486:	cmp    eax,DWORD PTR [rbx+0x20]
   140021489:	jle    0x140021491
   14002148b:	or     BYTE PTR [rbx+0x18],0x2
   14002148f:	jmp    0x1400214ae
   140021491:	and    BYTE PTR [rbx+0x18],0xfd
   140021495:	mov    edx,eax
   140021497:	mov    ecx,DWORD PTR [rbx+0x24]
   14002149a:	cmp    eax,ecx
   14002149c:	jl     0x1400214a5
   14002149e:	add    ecx,DWORD PTR [rbx+0x8]
   1400214a1:	cmp    eax,ecx
   1400214a3:	jl     0x1400214ae
   1400214a5:	or     edx,0xffffffff
   1400214a8:	mov    rcx,rbx
   1400214ab:	call   QWORD PTR [rbx+0x28]
   1400214ae:	xor    r14d,r14d
   1400214b1:	cmp    BYTE PTR [rbx+0x18],r14b
   1400214b5:	jne    0x1400215a0
   1400214bb:	mov    QWORD PTR [rsp+0x50],rsi
   1400214c0:	mov    esi,r14d
   1400214c3:	mov    QWORD PTR [rsp+0x58],rdi
   1400214c8:	mov    QWORD PTR [rsp+0x60],r12
   1400214cd:	nop    DWORD PTR [rax]
   1400214d0:	movzx  edx,BYTE PTR [rbx+0x18]
   1400214d4:	mov    edi,DWORD PTR [rbp+0x18]
   1400214d7:	mov    r12,QWORD PTR [rbp+0x10]
   1400214db:	test   dl,0x2
   1400214de:	jne    0x14002153c
   1400214e0:	mov    ecx,DWORD PTR [rbx+0x10]
   1400214e3:	lea    eax,[rcx+rdi*1]
   1400214e6:	cmp    DWORD PTR [rbx+0x20],eax
   1400214e9:	jge    0x1400214f5
   1400214eb:	or     dl,0x2
   1400214ee:	mov    BYTE PTR [rbx+0x18],dl
   1400214f1:	xor    al,al
   1400214f3:	jmp    0x140021519
   1400214f5:	mov    eax,DWORD PTR [rbx+0x24]
   1400214f8:	cmp    ecx,eax
   1400214fa:	jl     0x140021505
   1400214fc:	sub    ecx,eax
   1400214fe:	add    ecx,edi
   140021500:	cmp    DWORD PTR [rbx+0x8],ecx
   140021503:	jge    0x140021517
   140021505:	mov    edx,edi
   140021507:	mov    rcx,rbx
   14002150a:	call   QWORD PTR [rbx+0x28]
   14002150d:	test   al,al
   14002150f:	jne    0x140021517
   140021511:	or     BYTE PTR [rbx+0x18],0x2
   140021515:	jmp    0x140021519
   140021517:	mov    al,0x1
   140021519:	and    BYTE PTR [rbx+0x18],0xfd
   14002151d:	test   al,al
   14002151f:	je     0x14002153c
   140021521:	mov    eax,DWORD PTR [rbx+0x10]
   140021524:	mov    r8d,edi
   140021527:	sub    eax,DWORD PTR [rbx+0x24]
   14002152a:	mov    rdx,r12
   14002152d:	movsxd rcx,eax
   140021530:	add    rcx,QWORD PTR [rbx]
   140021533:	call   0x140022670
   140021538:	test   eax,eax
   14002153a:	je     0x140021562
   14002153c:	mov    rdx,rbp
   14002153f:	mov    rcx,rbx
   140021542:	call   0x140021310
   140021547:	cmp    rsi,r13
   14002154a:	jge    0x140021556
   14002154c:	inc    r14d
   14002154f:	mov    BYTE PTR [rsi+r15*1],al
   140021553:	inc    rsi
   140021556:	cmp    BYTE PTR [rbx+0x18],0x0
   14002155a:	je     0x1400214d0
   140021560:	jmp    0x140021591
   140021562:	mov    eax,DWORD PTR [rbp+0x18]
   140021565:	add    DWORD PTR [rbx+0x10],eax
   140021568:	mov    eax,DWORD PTR [rbx+0x10]
   14002156b:	cmp    eax,DWORD PTR [rbx+0x20]
   14002156e:	jle    0x140021576
   140021570:	or     BYTE PTR [rbx+0x18],0x2
   140021574:	jmp    0x140021591
   140021576:	and    BYTE PTR [rbx+0x18],0xfd
   14002157a:	mov    ecx,DWORD PTR [rbx+0x24]
   14002157d:	cmp    eax,ecx
   14002157f:	jl     0x140021588
   140021581:	add    ecx,DWORD PTR [rbx+0x8]
   140021584:	cmp    eax,ecx
   140021586:	jl     0x140021591
   140021588:	or     edx,0xffffffff
   14002158b:	mov    rcx,rbx
   14002158e:	call   QWORD PTR [rbx+0x28]
   140021591:	mov    rdi,QWORD PTR [rsp+0x58]
   140021596:	mov    rsi,QWORD PTR [rsp+0x50]
   14002159b:	mov    r12,QWORD PTR [rsp+0x60]
   1400215a0:	cmp    r14d,r13d
   1400215a3:	lea    eax,[r13-0x1]
   1400215a7:	cmovl  eax,r14d
   1400215ab:	mov    r14,QWORD PTR [rsp+0x20]
   1400215b0:	cdqe   
   1400215b2:	mov    BYTE PTR [rax+r15*1],0x0
   1400215b7:	add    rsp,0x28
   1400215bb:	pop    r15
   1400215bd:	pop    r13
   1400215bf:	pop    rbp
   1400215c0:	pop    rbx
   1400215c1:	ret    
   1400215c2:	mov    r8d,r13d
   1400215c5:	mov    rdx,r15
   1400215c8:	add    rsp,0x28
   1400215cc:	pop    r15
   1400215ce:	pop    r13
   1400215d0:	pop    rbp
   1400215d1:	pop    rbx
   1400215d2:	jmp    0x1400215e0
   1400215d7:	int3   
   1400215d8:	int3   
   1400215d9:	int3   
   1400215da:	int3   
   1400215db:	int3   
   1400215dc:	int3   
   1400215dd:	int3   
   1400215de:	int3   
   1400215df:	int3   
   1400215e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400215e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400215ea:	push   r14
   1400215ec:	sub    rsp,0x20
   1400215f0:	cmp    BYTE PTR [rcx+0x18],0x0
   1400215f4:	mov    r14d,r8d
   1400215f7:	mov    rsi,rdx
   1400215fa:	mov    rbx,rcx
   1400215fd:	je     0x140021613
   1400215ff:	mov    BYTE PTR [rdx],0x0
   140021602:	mov    rbx,QWORD PTR [rsp+0x40]
   140021607:	mov    rsi,QWORD PTR [rsp+0x48]
   14002160c:	add    rsp,0x20
   140021610:	pop    r14
   140021612:	ret    
   140021613:	mov    QWORD PTR [rsp+0x30],rbp
   140021618:	call   0x140021780
   14002161d:	test   BYTE PTR [rbx+0x19],0x1
   140021621:	mov    ebp,eax
   140021623:	je     0x140021690
   140021625:	cmp    BYTE PTR [rbx+0x18],0x0
   140021629:	jne    0x140021690
   14002162b:	nop    DWORD PTR [rax+rax*1+0x0]
   140021630:	test   BYTE PTR [rbx+0x18],0x2
   140021634:	jne    0x140021690
   140021636:	mov    ecx,DWORD PTR [rbx+0x10]
   140021639:	lea    eax,[rcx+0x1]
   14002163c:	cmp    DWORD PTR [rbx+0x20],eax
   14002163f:	jl     0x14002168c
   140021641:	mov    eax,DWORD PTR [rbx+0x24]
   140021644:	cmp    ecx,eax
   140021646:	jl     0x140021651
   140021648:	sub    ecx,eax
   14002164a:	inc    ecx
   14002164c:	cmp    DWORD PTR [rbx+0x8],ecx
   14002164f:	jge    0x140021660
   140021651:	mov    edx,0x1
   140021656:	mov    rcx,rbx
   140021659:	call   QWORD PTR [rbx+0x28]
   14002165c:	test   al,al
   14002165e:	je     0x14002168c
   140021660:	mov    r8d,DWORD PTR [rbx+0x10]
   140021664:	mov    eax,r8d
   140021667:	sub    eax,DWORD PTR [rbx+0x24]
   14002166a:	movsxd rcx,eax
   14002166d:	mov    rax,QWORD PTR [rbx]
   140021670:	movzx  edx,BYTE PTR [rcx+rax*1]
   140021674:	cmp    edx,0x9
   140021677:	jb     0x140021690
   140021679:	cmp    edx,0xd
   14002167c:	jbe    0x140021683
   14002167e:	cmp    edx,0x20
   140021681:	jne    0x140021690
   140021683:	lea    eax,[r8+0x1]
   140021687:	mov    DWORD PTR [rbx+0x10],eax
   14002168a:	jmp    0x140021630
   14002168c:	or     BYTE PTR [rbx+0x18],0x2
   140021690:	test   ebp,ebp
   140021692:	jne    0x14002169d
   140021694:	mov    BYTE PTR [rsi],bpl
   140021697:	or     BYTE PTR [rbx+0x18],0x2
   14002169b:	jmp    0x140021716
   14002169d:	mov    QWORD PTR [rsp+0x38],rdi
   1400216a2:	mov    rdx,rsi
   1400216a5:	mov    rcx,rbx
   1400216a8:	cmp    ebp,r14d
   1400216ab:	jg     0x1400216c1
   1400216ad:	lea    edi,[rbp-0x1]
   1400216b0:	mov    r8d,edi
   1400216b3:	call   0x1400210e0
   1400216b8:	movsxd rax,edi
   1400216bb:	mov    BYTE PTR [rax+rsi*1],0x0
   1400216bf:	jmp    0x140021703
   1400216c1:	lea    edi,[r14-0x1]
   1400216c5:	mov    r8d,edi
   1400216c8:	call   0x1400210e0
   1400216cd:	sub    ebp,r14d
   1400216d0:	movsxd rax,edi
   1400216d3:	mov    BYTE PTR [rax+rsi*1],0x0
   1400216d7:	add    DWORD PTR [rbx+0x10],ebp
   1400216da:	mov    edx,DWORD PTR [rbx+0x10]
   1400216dd:	cmp    edx,DWORD PTR [rbx+0x20]
   1400216e0:	jle    0x1400216e8
   1400216e2:	or     BYTE PTR [rbx+0x18],0x2
   1400216e6:	jmp    0x140021703
   1400216e8:	and    BYTE PTR [rbx+0x18],0xfd
   1400216ec:	mov    ecx,DWORD PTR [rbx+0x24]
   1400216ef:	cmp    edx,ecx
   1400216f1:	jl     0x1400216fa
   1400216f3:	add    ecx,DWORD PTR [rbx+0x8]
   1400216f6:	cmp    edx,ecx
   1400216f8:	jl     0x140021703
   1400216fa:	or     edx,0xffffffff
   1400216fd:	mov    rcx,rbx
   140021700:	call   QWORD PTR [rbx+0x28]
   140021703:	test   BYTE PTR [rbx+0x19],0x1
   140021707:	mov    rdi,QWORD PTR [rsp+0x38]
   14002170c:	jne    0x140021716
   14002170e:	mov    rcx,rbx
   140021711:	call   0x14001e1c0
   140021716:	mov    rbp,QWORD PTR [rsp+0x30]
   14002171b:	mov    rbx,QWORD PTR [rsp+0x40]
   140021720:	mov    rsi,QWORD PTR [rsp+0x48]
   140021725:	add    rsp,0x20
   140021729:	pop    r14
   14002172b:	ret    
   14002172c:	int3   
   14002172d:	int3   
   14002172e:	int3   
   14002172f:	int3   
   140021730:	mov    QWORD PTR [rsp+0x8],rbx
   140021735:	push   rdi
   140021736:	sub    rsp,0x20
   14002173a:	mov    edi,r8d
   14002173d:	mov    rbx,rcx
   140021740:	mov    r8d,edx
   140021743:	mov    edx,edi
   140021745:	call   0x140020bd0
   14002174a:	test   al,al
   14002174c:	jne    0x14002175b
   14002174e:	xor    eax,eax
   140021750:	mov    rbx,QWORD PTR [rsp+0x30]
   140021755:	add    rsp,0x20
   140021759:	pop    rdi
   14002175a:	ret    
   14002175b:	mov    eax,DWORD PTR [rbx+0x10]
   14002175e:	sub    eax,DWORD PTR [rbx+0x24]
   140021761:	add    eax,edi
   140021763:	cdqe   
   140021765:	add    rax,QWORD PTR [rbx]
   140021768:	mov    rbx,QWORD PTR [rsp+0x30]
   14002176d:	add    rsp,0x20
   140021771:	pop    rdi
   140021772:	ret    
   140021773:	int3   
   140021774:	int3   
   140021775:	int3   
   140021776:	int3   
   140021777:	int3   
   140021778:	int3   
   140021779:	int3   
   14002177a:	int3   
   14002177b:	int3   
   14002177c:	int3   
   14002177d:	int3   
   14002177e:	int3   
   14002177f:	int3   
   140021780:	rex push rbx
   140021782:	sub    rsp,0x20
   140021786:	cmp    BYTE PTR [rcx+0x18],0x0
   14002178a:	mov    rbx,rcx
   14002178d:	je     0x140021797
   14002178f:	xor    eax,eax
   140021791:	add    rsp,0x20
   140021795:	pop    rbx
   140021796:	ret    
   140021797:	mov    QWORD PTR [rsp+0x30],rbp
   14002179c:	mov    QWORD PTR [rsp+0x38],rsi
   1400217a1:	xor    esi,esi
   1400217a3:	test   BYTE PTR [rcx+0x19],0x1
   1400217a7:	mov    QWORD PTR [rsp+0x40],rdi
   1400217ac:	je     0x1400217b7
   1400217ae:	xor    edx,edx
   1400217b0:	call   0x140021940
   1400217b5:	mov    esi,eax
   1400217b7:	mov    ebp,esi
   1400217b9:	nop    DWORD PTR [rax+0x0]
   1400217c0:	mov    ecx,DWORD PTR [rbx+0x10]
   1400217c3:	mov    edi,0x80
   1400217c8:	mov    r8d,DWORD PTR [rbx+0x20]
   1400217cc:	lea    eax,[rcx+rsi*1]
   1400217cf:	cmp    eax,r8d
   1400217d2:	jge    0x1400218bb
   1400217d8:	sub    eax,0xffffff80
   1400217db:	cmp    eax,r8d
   1400217de:	jle    0x1400217e7
   1400217e0:	mov    edi,r8d
   1400217e3:	sub    edi,ecx
   1400217e5:	sub    edi,esi
   1400217e7:	movzx  edx,BYTE PTR [rbx+0x18]
   1400217eb:	test   dl,0x2
   1400217ee:	jne    0x14002182b
   1400217f0:	lea    r9d,[rdi+rsi*1]
   1400217f4:	lea    eax,[rcx+r9*1]
   1400217f8:	cmp    r8d,eax
   1400217fb:	jge    0x140021805
   1400217fd:	or     dl,0x2
   140021800:	mov    BYTE PTR [rbx+0x18],dl
   140021803:	jmp    0x140021827
   140021805:	mov    eax,DWORD PTR [rbx+0x24]
   140021808:	cmp    ecx,eax
   14002180a:	jl     0x140021816
   14002180c:	sub    ecx,eax
   14002180e:	add    ecx,r9d
   140021811:	cmp    DWORD PTR [rbx+0x8],ecx
   140021814:	jge    0x140021827
   140021816:	mov    edx,r9d
   140021819:	mov    rcx,rbx
   14002181c:	call   QWORD PTR [rbx+0x28]
   14002181f:	test   al,al
   140021821:	jne    0x140021827
   140021823:	or     BYTE PTR [rbx+0x18],0x2
   140021827:	and    BYTE PTR [rbx+0x18],0xfd
   14002182b:	mov    r10d,DWORD PTR [rbx+0x20]
   14002182f:	mov    ecx,DWORD PTR [rbx+0x10]
   140021832:	sub    r10d,ecx
   140021835:	cmp    r10d,edi
   140021838:	cmovge r10d,edi
   14002183c:	test   r10d,r10d
   14002183f:	setne  al
   140021842:	test   al,al
   140021844:	je     0x1400218bb
   140021846:	sub    ecx,DWORD PTR [rbx+0x24]
   140021849:	xor    edx,edx
   14002184b:	add    ecx,esi
   14002184d:	movsxd r8,r10d
   140021850:	movsxd rcx,ecx
   140021853:	add    rcx,QWORD PTR [rbx]
   140021856:	test   BYTE PTR [rbx+0x19],0x1
   14002185a:	jne    0x14002187b
   14002185c:	xor    eax,eax
   14002185e:	test   r10d,r10d
   140021861:	jle    0x1400218aa
   140021863:	cmp    BYTE PTR [rax+rcx*1],0x0
   140021867:	je     0x1400218b2
   140021869:	inc    edx
   14002186b:	inc    rax
   14002186e:	cmp    rax,r8
   140021871:	jl     0x140021863
   140021873:	add    esi,r10d
   140021876:	jmp    0x1400217c0
   14002187b:	test   r10d,r10d
   14002187e:	jle    0x1400218aa
   140021880:	mov    r9,rcx
   140021883:	neg    r9
   140021886:	movzx  eax,BYTE PTR [rcx]
   140021889:	cmp    eax,0x9
   14002188c:	jb     0x140021898
   14002188e:	cmp    eax,0xd
   140021891:	jbe    0x1400218b2
   140021893:	cmp    eax,0x20
   140021896:	je     0x1400218b2
   140021898:	test   al,al
   14002189a:	je     0x1400218b2
   14002189c:	inc    rcx
   14002189f:	inc    edx
   1400218a1:	lea    rax,[r9+rcx*1]
   1400218a5:	cmp    rax,r8
   1400218a8:	jl     0x140021886
   1400218aa:	add    esi,r10d
   1400218ad:	jmp    0x1400217c0
   1400218b2:	sub    edx,ebp
   1400218b4:	lea    eax,[rsi+0x1]
   1400218b7:	add    eax,edx
   1400218b9:	jmp    0x1400218c8
   1400218bb:	cmp    esi,ebp
   1400218bd:	jne    0x1400218c3
   1400218bf:	xor    eax,eax
   1400218c1:	jmp    0x1400218c8
   1400218c3:	sub    esi,ebp
   1400218c5:	lea    eax,[rsi+0x1]
   1400218c8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400218cd:	mov    rbp,QWORD PTR [rsp+0x30]
   1400218d2:	mov    rdi,QWORD PTR [rsp+0x40]
   1400218d7:	add    rsp,0x20
   1400218db:	pop    rbx
   1400218dc:	ret    
   1400218dd:	int3   
   1400218de:	int3   
   1400218df:	int3   
   1400218e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400218e5:	mov    QWORD PTR [rsp+0x10],rbp
   1400218ea:	mov    QWORD PTR [rsp+0x18],rsi
   1400218ef:	push   rdi
   1400218f0:	sub    rsp,0x20
   1400218f4:	mov    rbp,r8
   1400218f7:	mov    edi,r9d
   1400218fa:	mov    r8d,r9d
   1400218fd:	mov    esi,edx
   1400218ff:	mov    rbx,rcx
   140021902:	call   0x140020bd0
   140021907:	test   al,al
   140021909:	je     0x140021929
   14002190b:	mov    eax,DWORD PTR [rbx+0x10]
   14002190e:	mov    r8d,edi
   140021911:	sub    eax,DWORD PTR [rbx+0x24]
   140021914:	mov    rdx,rbp
   140021917:	add    eax,esi
   140021919:	movsxd rcx,eax
   14002191c:	add    rcx,QWORD PTR [rbx]
   14002191f:	call   0x140022670
   140021924:	test   eax,eax
   140021926:	sete   al
   140021929:	mov    rbx,QWORD PTR [rsp+0x30]
   14002192e:	mov    rbp,QWORD PTR [rsp+0x38]
   140021933:	mov    rsi,QWORD PTR [rsp+0x40]
   140021938:	add    rsp,0x20
   14002193c:	pop    rdi
   14002193d:	ret    
   14002193e:	int3   
   14002193f:	int3   
   140021940:	mov    QWORD PTR [rsp+0x10],rbx
   140021945:	push   rsi
   140021946:	sub    rsp,0x20
   14002194a:	test   BYTE PTR [rcx+0x19],0x1
   14002194e:	mov    esi,edx
   140021950:	mov    rbx,rcx
   140021953:	je     0x1400219f5
   140021959:	cmp    BYTE PTR [rcx+0x18],0x0
   14002195d:	jne    0x1400219f5
   140021963:	mov    QWORD PTR [rsp+0x30],rdi
   140021968:	lea    edi,[rdx+0x1]
   14002196b:	nop    DWORD PTR [rax+rax*1+0x0]
   140021970:	movzx  ecx,BYTE PTR [rbx+0x18]
   140021974:	test   cl,0x2
   140021977:	jne    0x1400219e3
   140021979:	mov    edx,DWORD PTR [rbx+0x10]
   14002197c:	lea    eax,[rdi+rdx*1]
   14002197f:	cmp    DWORD PTR [rbx+0x20],eax
   140021982:	jge    0x14002198e
   140021984:	or     cl,0x2
   140021987:	mov    BYTE PTR [rbx+0x18],cl
   14002198a:	xor    al,al
   14002198c:	jmp    0x1400219b4
   14002198e:	mov    ecx,DWORD PTR [rbx+0x24]
   140021991:	cmp    edx,ecx
   140021993:	jl     0x1400219a0
   140021995:	mov    eax,edi
   140021997:	sub    eax,ecx
   140021999:	add    eax,edx
   14002199b:	cmp    DWORD PTR [rbx+0x8],eax
   14002199e:	jge    0x1400219b2
   1400219a0:	mov    edx,edi
   1400219a2:	mov    rcx,rbx
   1400219a5:	call   QWORD PTR [rbx+0x28]
   1400219a8:	test   al,al
   1400219aa:	jne    0x1400219b2
   1400219ac:	or     BYTE PTR [rbx+0x18],0x2
   1400219b0:	jmp    0x1400219b4
   1400219b2:	mov    al,0x1
   1400219b4:	and    BYTE PTR [rbx+0x18],0xfd
   1400219b8:	test   al,al
   1400219ba:	je     0x1400219e3
   1400219bc:	mov    eax,esi
   1400219be:	sub    eax,DWORD PTR [rbx+0x24]
   1400219c1:	add    eax,DWORD PTR [rbx+0x10]
   1400219c4:	movsxd rcx,eax
   1400219c7:	mov    rax,QWORD PTR [rbx]
   1400219ca:	movzx  edx,BYTE PTR [rcx+rax*1]
   1400219ce:	cmp    edx,0x9
   1400219d1:	jb     0x1400219e3
   1400219d3:	cmp    edx,0xd
   1400219d6:	jbe    0x1400219dd
   1400219d8:	cmp    edx,0x20
   1400219db:	jne    0x1400219e3
   1400219dd:	inc    esi
   1400219df:	inc    edi
   1400219e1:	jmp    0x140021970
   1400219e3:	mov    eax,esi
   1400219e5:	mov    rdi,QWORD PTR [rsp+0x30]
   1400219ea:	mov    rbx,QWORD PTR [rsp+0x38]
   1400219ef:	add    rsp,0x20
   1400219f3:	pop    rsi
   1400219f4:	ret    
   1400219f5:	xor    eax,eax
   1400219f7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400219fc:	add    rsp,0x20
   140021a00:	pop    rsi
   140021a01:	ret    
   140021a02:	int3   
   140021a03:	int3   
   140021a04:	int3   
   140021a05:	int3   
   140021a06:	int3   
   140021a07:	int3   
   140021a08:	int3   
   140021a09:	int3   
   140021a0a:	int3   
   140021a0b:	int3   
   140021a0c:	int3   
   140021a0d:	int3   
   140021a0e:	int3   
   140021a0f:	int3   
   140021a10:	mov    QWORD PTR [rsp+0x10],rdx
   140021a15:	mov    QWORD PTR [rsp+0x18],r8
   140021a1a:	mov    QWORD PTR [rsp+0x20],r9
   140021a1f:	sub    rsp,0x28
   140021a23:	lea    r8,[rsp+0x40]
   140021a28:	call   0x140021f90
   140021a2d:	add    rsp,0x28
   140021a31:	ret    
   140021a32:	int3   
   140021a33:	int3   
   140021a34:	int3   
   140021a35:	int3   
   140021a36:	int3   
   140021a37:	int3   
   140021a38:	int3   
   140021a39:	int3   
   140021a3a:	int3   
   140021a3b:	int3   
   140021a3c:	int3   
   140021a3d:	int3   
   140021a3e:	int3   
   140021a3f:	int3   
   140021a40:	test   r8d,r8d
   140021a43:	je     0x140021b28
   140021a49:	mov    QWORD PTR [rsp+0x8],rbx
   140021a4e:	mov    QWORD PTR [rsp+0x10],rsi
   140021a53:	push   rdi
   140021a54:	sub    rsp,0x20
   140021a58:	test   BYTE PTR [rcx+0x18],0x1
   140021a5c:	mov    rsi,rdx
   140021a5f:	movsxd rdi,r8d
   140021a62:	mov    rbx,rcx
   140021a65:	jne    0x140021b19
   140021a6b:	test   BYTE PTR [rcx+0x19],0x8
   140021a6f:	jne    0x140021b19
   140021a75:	mov    eax,DWORD PTR [rcx+0x14]
   140021a78:	mov    ecx,DWORD PTR [rcx+0x24]
   140021a7b:	cmp    eax,ecx
   140021a7d:	jl     0x140021a88
   140021a7f:	sub    eax,ecx
   140021a81:	add    eax,edi
   140021a83:	cmp    DWORD PTR [rbx+0x8],eax
   140021a86:	jge    0x140021aa8
   140021a88:	mov    edx,edi
   140021a8a:	mov    rcx,rbx
   140021a8d:	call   QWORD PTR [rbx+0x30]
   140021a90:	test   al,al
   140021a92:	jne    0x140021aa8
   140021a94:	or     BYTE PTR [rbx+0x18],0x1
   140021a98:	mov    rbx,QWORD PTR [rsp+0x30]
   140021a9d:	mov    rsi,QWORD PTR [rsp+0x38]
   140021aa2:	add    rsp,0x20
   140021aa6:	pop    rdi
   140021aa7:	ret    
   140021aa8:	mov    eax,DWORD PTR [rbx+0x14]
   140021aab:	sub    eax,DWORD PTR [rbx+0x24]
   140021aae:	js     0x140021b19
   140021ab0:	movsxd rcx,eax
   140021ab3:	mov    r8,rdi
   140021ab6:	add    rcx,QWORD PTR [rbx]
   140021ab9:	mov    rdx,rsi
   140021abc:	call   0x140026f70
   140021ac1:	add    DWORD PTR [rbx+0x14],edi
   140021ac4:	mov    eax,DWORD PTR [rbx+0x14]
   140021ac7:	cmp    eax,DWORD PTR [rbx+0x20]
   140021aca:	jle    0x140021b19
   140021acc:	test   BYTE PTR [rbx+0x19],0x8
   140021ad0:	jne    0x140021b13
   140021ad2:	test   BYTE PTR [rbx+0x18],0x1
   140021ad6:	jne    0x140021b13
   140021ad8:	mov    ecx,DWORD PTR [rbx+0x24]
   140021adb:	cmp    eax,ecx
   140021add:	jl     0x140021ae8
   140021adf:	sub    eax,ecx
   140021ae1:	inc    eax
   140021ae3:	cmp    DWORD PTR [rbx+0x8],eax
   140021ae6:	jge    0x140021b01
   140021ae8:	mov    edx,0x1
   140021aed:	mov    rcx,rbx
   140021af0:	call   QWORD PTR [rbx+0x30]
   140021af3:	test   al,al
   140021af5:	jne    0x140021b01
   140021af7:	or     BYTE PTR [rbx+0x18],0x1
   140021afb:	and    BYTE PTR [rbx+0x18],0xfe
   140021aff:	jmp    0x140021b13
   140021b01:	mov    eax,DWORD PTR [rbx+0x14]
   140021b04:	sub    eax,DWORD PTR [rbx+0x24]
   140021b07:	js     0x140021b13
   140021b09:	movsxd rcx,eax
   140021b0c:	mov    rax,QWORD PTR [rbx]
   140021b0f:	mov    BYTE PTR [rcx+rax*1],0x0
   140021b13:	mov    eax,DWORD PTR [rbx+0x14]
   140021b16:	mov    DWORD PTR [rbx+0x20],eax
   140021b19:	mov    rbx,QWORD PTR [rsp+0x30]
   140021b1e:	mov    rsi,QWORD PTR [rsp+0x38]
   140021b23:	add    rsp,0x20
   140021b27:	pop    rdi
   140021b28:	ret    
   140021b29:	int3   
   140021b2a:	int3   
   140021b2b:	int3   
   140021b2c:	int3   
   140021b2d:	int3   
   140021b2e:	int3   
   140021b2f:	int3   
   140021b30:	rex push rbx
   140021b32:	push   rsi
   140021b33:	push   r15
   140021b35:	sub    rsp,0x20
   140021b39:	test   BYTE PTR [rcx+0x19],0x1
   140021b3d:	mov    r15,r8
   140021b40:	mov    rsi,rdx
   140021b43:	mov    rbx,rcx
   140021b46:	je     0x140021c60
   140021b4c:	test   rdx,rdx
   140021b4f:	je     0x140021c60
   140021b55:	mov    edx,DWORD PTR [rcx+0x14]
   140021b58:	mov    eax,edx
   140021b5a:	mov    QWORD PTR [rsp+0x48],rdi
   140021b5f:	mov    QWORD PTR [rsp+0x50],r12
   140021b64:	sub    eax,DWORD PTR [rcx+0x24]
   140021b67:	je     0x140021b7c
   140021b69:	dec    eax
   140021b6b:	movsxd rcx,eax
   140021b6e:	mov    rax,QWORD PTR [rbx]
   140021b71:	cmp    BYTE PTR [rcx+rax*1],0xa
   140021b75:	sete   al
   140021b78:	test   al,al
   140021b7a:	jne    0x140021b80
   140021b7c:	test   edx,edx
   140021b7e:	jne    0x140021b88
   140021b80:	mov    rcx,rbx
   140021b83:	call   0x140021e00
   140021b88:	mov    r8d,DWORD PTR [rsi+0x18]
   140021b8c:	mov    rcx,rbx
   140021b8f:	mov    rdx,QWORD PTR [rsi+0x10]
   140021b93:	call   0x140021a40
   140021b98:	xor    edi,edi
   140021b9a:	test   r15,r15
   140021b9d:	je     0x140021bae
   140021b9f:	or     rax,0xffffffffffffffff
   140021ba3:	inc    rax
   140021ba6:	cmp    BYTE PTR [r15+rax*1],dil
   140021baa:	jne    0x140021ba3
   140021bac:	jmp    0x140021bb0
   140021bae:	mov    eax,edi
   140021bb0:	movsxd r12,eax
   140021bb3:	test   eax,eax
   140021bb5:	jle    0x140021c15
   140021bb7:	mov    QWORD PTR [rsp+0x40],rbp
   140021bbc:	mov    QWORD PTR [rsp+0x58],r14
   140021bc1:	movzx  edx,BYTE PTR [rdi+r15*1]
   140021bc6:	mov    rcx,rbx
   140021bc9:	mov    eax,edx
   140021bcb:	mov    ebp,edx
   140021bcd:	add    rax,rax
   140021bd0:	mov    r14d,DWORD PTR [rsi+rax*8+0x128]
   140021bd8:	test   r14d,r14d
   140021bdb:	jne    0x140021be4
   140021bdd:	call   0x14001f940
   140021be2:	jmp    0x140021c03
   140021be4:	movzx  edx,BYTE PTR [rsi+0x8]
   140021be8:	call   0x14001f940
   140021bed:	lea    rdx,[rbp+0x13]
   140021bf1:	mov    r8d,r14d
   140021bf4:	add    rdx,rdx
   140021bf7:	mov    rcx,rbx
   140021bfa:	mov    rdx,QWORD PTR [rsi+rdx*8]
   140021bfe:	call   0x140021a40
   140021c03:	inc    rdi
   140021c06:	cmp    rdi,r12
   140021c09:	jl     0x140021bc1
   140021c0b:	mov    r14,QWORD PTR [rsp+0x58]
   140021c10:	mov    rbp,QWORD PTR [rsp+0x40]
   140021c15:	test   BYTE PTR [rbx+0x19],0x1
   140021c19:	mov    r12,QWORD PTR [rsp+0x50]
   140021c1e:	mov    rdi,QWORD PTR [rsp+0x48]
   140021c23:	je     0x140021c48
   140021c25:	mov    eax,DWORD PTR [rbx+0x14]
   140021c28:	sub    eax,DWORD PTR [rbx+0x24]
   140021c2b:	je     0x140021c48
   140021c2d:	dec    eax
   140021c2f:	movsxd rcx,eax
   140021c32:	mov    rax,QWORD PTR [rbx]
   140021c35:	cmp    BYTE PTR [rcx+rax*1],0xa
   140021c39:	sete   al
   140021c3c:	test   al,al
   140021c3e:	je     0x140021c48
   140021c40:	mov    rcx,rbx
   140021c43:	call   0x140021e00
   140021c48:	mov    r8d,DWORD PTR [rsi+0x18]
   140021c4c:	mov    rcx,rbx
   140021c4f:	mov    rdx,QWORD PTR [rsi+0x10]
   140021c53:	add    rsp,0x20
   140021c57:	pop    r15
   140021c59:	pop    rsi
   140021c5a:	pop    rbx
   140021c5b:	jmp    0x140021a40
   140021c60:	mov    rdx,r15
   140021c63:	add    rsp,0x20
   140021c67:	pop    r15
   140021c69:	pop    rsi
   140021c6a:	pop    rbx
   140021c6b:	jmp    0x140021ce0
   140021c70:	mov    QWORD PTR [rsp+0x8],rbx
   140021c75:	push   rdi
   140021c76:	sub    rsp,0x20
   140021c7a:	test   DWORD PTR [rcx+0xc],0xc0000000
   140021c81:	mov    edi,edx
   140021c83:	mov    rbx,rcx
   140021c86:	je     0x140021ca2
   140021c88:	test   BYTE PTR [rcx+0x19],0x2
   140021c8c:	jne    0x140021c9b
   140021c8e:	xor    al,al
   140021c90:	mov    rbx,QWORD PTR [rsp+0x30]
   140021c95:	add    rsp,0x20
   140021c99:	pop    rdi
   140021c9a:	ret    
   140021c9b:	xor    edx,edx
   140021c9d:	call   0x140020ca0
   140021ca2:	mov    eax,edi
   140021ca4:	sub    eax,DWORD PTR [rbx+0x24]
   140021ca7:	add    eax,DWORD PTR [rbx+0x14]
   140021caa:	cmp    DWORD PTR [rbx+0x8],eax
   140021cad:	jge    0x140021cca
   140021caf:	nop
   140021cb0:	mov    edx,0x1
   140021cb5:	mov    rcx,rbx
   140021cb8:	call   0x14000f0d0
   140021cbd:	mov    eax,edi
   140021cbf:	sub    eax,DWORD PTR [rbx+0x24]
   140021cc2:	add    eax,DWORD PTR [rbx+0x14]
   140021cc5:	cmp    DWORD PTR [rbx+0x8],eax
   140021cc8:	jl     0x140021cb0
   140021cca:	mov    al,0x1
   140021ccc:	mov    rbx,QWORD PTR [rsp+0x30]
   140021cd1:	add    rsp,0x20
   140021cd5:	pop    rdi
   140021cd6:	ret    
   140021cd7:	int3   
   140021cd8:	int3   
   140021cd9:	int3   
   140021cda:	int3   
   140021cdb:	int3   
   140021cdc:	int3   
   140021cdd:	int3   
   140021cde:	int3   
   140021cdf:	int3   
   140021ce0:	mov    QWORD PTR [rsp+0x10],rbx
   140021ce5:	push   rdi
   140021ce6:	sub    rsp,0x20
   140021cea:	movzx  eax,BYTE PTR [rcx+0x19]
   140021cee:	mov    rbx,rdx
   140021cf1:	mov    rdi,rcx
   140021cf4:	test   al,0x1
   140021cf6:	jne    0x140021d2e
   140021cf8:	test   rdx,rdx
   140021cfb:	je     0x140021d1f
   140021cfd:	or     rax,0xffffffffffffffff
   140021d01:	cmp    BYTE PTR [rdx+rax*1+0x1],0x0
   140021d06:	lea    rax,[rax+0x1]
   140021d0a:	jne    0x140021d01
   140021d0c:	lea    r8d,[rax+0x1]
   140021d10:	mov    rbx,QWORD PTR [rsp+0x38]
   140021d15:	add    rsp,0x20
   140021d19:	pop    rdi
   140021d1a:	jmp    0x140021a40
   140021d1f:	mov    rbx,QWORD PTR [rsp+0x38]
   140021d24:	add    rsp,0x20
   140021d28:	pop    rdi
   140021d29:	jmp    0x1400207d0
   140021d2e:	test   rbx,rbx
   140021d31:	je     0x140021def
   140021d37:	test   al,0x10
   140021d39:	jne    0x140021dd0
   140021d3f:	cmp    DWORD PTR [rcx+0x1c],0x0
   140021d43:	jle    0x140021dd0
   140021d49:	mov    edx,DWORD PTR [rcx+0x14]
   140021d4c:	mov    eax,edx
   140021d4e:	mov    QWORD PTR [rsp+0x30],rsi
   140021d53:	sub    eax,DWORD PTR [rcx+0x24]
   140021d56:	je     0x140021d6b
   140021d58:	dec    eax
   140021d5a:	movsxd rcx,eax
   140021d5d:	mov    rax,QWORD PTR [rdi]
   140021d60:	cmp    BYTE PTR [rcx+rax*1],0xa
   140021d64:	sete   al
   140021d67:	test   al,al
   140021d69:	jne    0x140021d6f
   140021d6b:	test   edx,edx
   140021d6d:	jne    0x140021d77
   140021d6f:	mov    rcx,rdi
   140021d72:	call   0x140021e00
   140021d77:	mov    edx,0xa
   140021d7c:	mov    rcx,rbx
   140021d7f:	call   0x140027a28
   140021d84:	mov    rsi,rax
   140021d87:	test   rax,rax
   140021d8a:	je     0x140021dcb
   140021d8c:	nop    DWORD PTR [rax+0x0]
   140021d90:	mov    r8d,esi
   140021d93:	mov    rdx,rbx
   140021d96:	sub    r8d,ebx
   140021d99:	mov    rcx,rdi
   140021d9c:	inc    r8d
   140021d9f:	call   0x140021a40
   140021da4:	cmp    BYTE PTR [rsi+0x1],0x0
   140021da8:	lea    rbx,[rsi+0x1]
   140021dac:	je     0x140021dcb
   140021dae:	mov    rcx,rdi
   140021db1:	call   0x140021e00
   140021db6:	mov    edx,0xa
   140021dbb:	mov    rcx,rbx
   140021dbe:	call   0x140027a28
   140021dc3:	mov    rsi,rax
   140021dc6:	test   rax,rax
   140021dc9:	jne    0x140021d90
   140021dcb:	mov    rsi,QWORD PTR [rsp+0x30]
   140021dd0:	or     rax,0xffffffffffffffff
   140021dd4:	inc    rax
   140021dd7:	cmp    BYTE PTR [rbx+rax*1],0x0
   140021ddb:	jne    0x140021dd4
   140021ddd:	test   eax,eax
   140021ddf:	je     0x140021def
   140021de1:	mov    r8d,eax
   140021de4:	mov    rdx,rbx
   140021de7:	mov    rcx,rdi
   140021dea:	call   0x140021a40
   140021def:	mov    rbx,QWORD PTR [rsp+0x38]
   140021df4:	add    rsp,0x20
   140021df8:	pop    rdi
   140021df9:	ret    
   140021dfa:	int3   
   140021dfb:	int3   
   140021dfc:	int3   
   140021dfd:	int3   
   140021dfe:	int3   
   140021dff:	int3   
   140021e00:	mov    QWORD PTR [rsp+0x8],rbx
   140021e05:	push   rdi
   140021e06:	sub    rsp,0x20
   140021e0a:	test   BYTE PTR [rcx+0x19],0x10
   140021e0e:	mov    rbx,rcx
   140021e11:	je     0x140021e17
   140021e13:	xor    edi,edi
   140021e15:	jmp    0x140021e1a
   140021e17:	mov    edi,DWORD PTR [rcx+0x1c]
   140021e1a:	sub    edi,0x1
   140021e1d:	js     0x140021ed0
   140021e23:	test   BYTE PTR [rbx+0x18],0x1
   140021e27:	jne    0x140021ec7
   140021e2d:	test   BYTE PTR [rbx+0x19],0x8
   140021e31:	jne    0x140021ec7
   140021e37:	mov    eax,DWORD PTR [rbx+0x14]
   140021e3a:	mov    ecx,DWORD PTR [rbx+0x24]
   140021e3d:	cmp    eax,ecx
   140021e3f:	jl     0x140021e4a
   140021e41:	sub    eax,ecx
   140021e43:	inc    eax
   140021e45:	cmp    DWORD PTR [rbx+0x8],eax
   140021e48:	jge    0x140021e5f
   140021e4a:	mov    edx,0x1
   140021e4f:	mov    rcx,rbx
   140021e52:	call   QWORD PTR [rbx+0x30]
   140021e55:	test   al,al
   140021e57:	jne    0x140021e5f
   140021e59:	or     BYTE PTR [rbx+0x18],0x1
   140021e5d:	jmp    0x140021ec7
   140021e5f:	mov    eax,DWORD PTR [rbx+0x14]
   140021e62:	sub    eax,DWORD PTR [rbx+0x24]
   140021e65:	movsxd rcx,eax
   140021e68:	mov    rax,QWORD PTR [rbx]
   140021e6b:	mov    BYTE PTR [rcx+rax*1],0x9
   140021e6f:	inc    DWORD PTR [rbx+0x14]
   140021e72:	mov    eax,DWORD PTR [rbx+0x14]
   140021e75:	cmp    eax,DWORD PTR [rbx+0x20]
   140021e78:	jle    0x140021ec7
   140021e7a:	test   BYTE PTR [rbx+0x19],0x8
   140021e7e:	jne    0x140021ec1
   140021e80:	test   BYTE PTR [rbx+0x18],0x1
   140021e84:	jne    0x140021ec1
   140021e86:	mov    ecx,DWORD PTR [rbx+0x24]
   140021e89:	cmp    eax,ecx
   140021e8b:	jl     0x140021e96
   140021e8d:	sub    eax,ecx
   140021e8f:	inc    eax
   140021e91:	cmp    DWORD PTR [rbx+0x8],eax
   140021e94:	jge    0x140021eaf
   140021e96:	mov    edx,0x1
   140021e9b:	mov    rcx,rbx
   140021e9e:	call   QWORD PTR [rbx+0x30]
   140021ea1:	test   al,al
   140021ea3:	jne    0x140021eaf
   140021ea5:	or     BYTE PTR [rbx+0x18],0x1
   140021ea9:	and    BYTE PTR [rbx+0x18],0xfe
   140021ead:	jmp    0x140021ec1
   140021eaf:	mov    eax,DWORD PTR [rbx+0x14]
   140021eb2:	sub    eax,DWORD PTR [rbx+0x24]
   140021eb5:	js     0x140021ec1
   140021eb7:	movsxd rcx,eax
   140021eba:	mov    rax,QWORD PTR [rbx]
   140021ebd:	mov    BYTE PTR [rcx+rax*1],0x0
   140021ec1:	mov    eax,DWORD PTR [rbx+0x14]
   140021ec4:	mov    DWORD PTR [rbx+0x20],eax
   140021ec7:	sub    edi,0x1
   140021eca:	jns    0x140021e23
   140021ed0:	mov    rbx,QWORD PTR [rsp+0x30]
   140021ed5:	add    rsp,0x20
   140021ed9:	pop    rdi
   140021eda:	ret    
   140021edb:	int3   
   140021edc:	int3   
   140021edd:	int3   
   140021ede:	int3   
   140021edf:	int3   
   140021ee0:	mov    r9,rcx
   140021ee3:	test   edx,edx
   140021ee5:	je     0x140021f02
   140021ee7:	sub    edx,0x1
   140021eea:	je     0x140021efc
   140021eec:	cmp    edx,0x1
   140021eef:	jne    0x140021f06
   140021ef1:	mov    eax,DWORD PTR [rcx+0x20]
   140021ef4:	sub    eax,r8d
   140021ef7:	mov    DWORD PTR [rcx+0x10],eax
   140021efa:	jmp    0x140021f06
   140021efc:	add    DWORD PTR [rcx+0x10],r8d
   140021f00:	jmp    0x140021f06
   140021f02:	mov    DWORD PTR [rcx+0x10],r8d
   140021f06:	mov    edx,DWORD PTR [rcx+0x10]
   140021f09:	cmp    edx,DWORD PTR [rcx+0x20]
   140021f0c:	jle    0x140021f13
   140021f0e:	or     BYTE PTR [rcx+0x18],0x2
   140021f12:	ret    
   140021f13:	and    BYTE PTR [rcx+0x18],0xfd
   140021f17:	mov    ecx,DWORD PTR [rcx+0x24]
   140021f1a:	cmp    edx,ecx
   140021f1c:	jl     0x140021f26
   140021f1e:	add    ecx,DWORD PTR [r9+0x8]
   140021f22:	cmp    edx,ecx
   140021f24:	jl     0x140021f30
   140021f26:	or     edx,0xffffffff
   140021f29:	mov    rcx,r9
   140021f2c:	rex.WB jmp QWORD PTR [r9+0x28]
   140021f30:	ret    
   140021f31:	int3   
   140021f32:	int3   
   140021f33:	int3   
   140021f34:	int3   
   140021f35:	int3   
   140021f36:	int3   
   140021f37:	int3   
   140021f38:	int3   
   140021f39:	int3   
   140021f3a:	int3   
   140021f3b:	int3   
   140021f3c:	int3   
   140021f3d:	int3   
   140021f3e:	int3   
   140021f3f:	int3   
   140021f40:	mov    QWORD PTR [rsp+0x8],rbx
   140021f45:	push   rdi
   140021f46:	sub    rsp,0x20
   140021f4a:	mov    ebx,DWORD PTR [rcx+0x14]
   140021f4d:	mov    rdi,rcx
   140021f50:	test   edx,edx
   140021f52:	je     0x140021f6b
   140021f54:	sub    edx,0x1
   140021f57:	je     0x140021f66
   140021f59:	cmp    edx,0x1
   140021f5c:	jne    0x140021f6e
   140021f5e:	mov    ebx,DWORD PTR [rcx+0x20]
   140021f61:	sub    ebx,r8d
   140021f64:	jmp    0x140021f6e
   140021f66:	add    ebx,r8d
   140021f69:	jmp    0x140021f6e
   140021f6b:	mov    ebx,r8d
   140021f6e:	mov    edx,ebx
   140021f70:	not    edx
   140021f72:	call   QWORD PTR [rcx+0x30]
   140021f75:	mov    rcx,rdi
   140021f78:	mov    DWORD PTR [rdi+0x14],ebx
   140021f7b:	mov    rbx,QWORD PTR [rsp+0x30]
   140021f80:	add    rsp,0x20
   140021f84:	pop    rdi
   140021f85:	jmp    0x1400209e0
   140021f8a:	int3   
   140021f8b:	int3   
   140021f8c:	int3   
   140021f8d:	int3   
   140021f8e:	int3   
   140021f8f:	int3   
   140021f90:	rex push rbx
   140021f92:	mov    eax,0x2050
   140021f97:	call   0x1400263c0
   140021f9c:	sub    rsp,rax
   140021f9f:	mov    r9,r8
   140021fa2:	mov    rbx,rcx
   140021fa5:	mov    r8,rdx
   140021fa8:	lea    rcx,[rsp+0x50]
   140021fad:	lea    edx,[rax-0x50]
   140021fb0:	call   QWORD PTR [rip+0x10592]        # 0x140032548
   140021fb6:	movsxd rdx,eax
   140021fb9:	cmp    rdx,0x1fff
   140021fc0:	jae    0x140021fd8
   140021fc2:	lea    rdx,[rsp+0x50]
   140021fc7:	mov    rcx,rbx
   140021fca:	call   0x140021ce0
   140021fcf:	add    rsp,0x2050
   140021fd6:	pop    rbx
   140021fd7:	ret    
   140021fd8:	mov    rax,QWORD PTR [rip+0x103a9]        # 0x140032388
   140021fdf:	mov    edx,0x4
   140021fe4:	mov    ecx,DWORD PTR [rax]
   140021fe6:	call   QWORD PTR [rip+0x104bc]        # 0x1400324a8
   140021fec:	test   al,al
   140021fee:	je     0x140022039
   140021ff0:	lea    rax,[rip+0x15fa9]        # 0x140037fa0
   140021ff7:	mov    DWORD PTR [rsp+0x38],0x622
   140021fff:	mov    QWORD PTR [rsp+0x30],rax
   140022004:	lea    r9,[rip+0x15f3d]        # 0x140037f48
   14002200b:	lea    rax,[rip+0x15f6e]        # 0x140037f80
   140022012:	mov    QWORD PTR [rsp+0x20],0x2000
   14002201b:	mov    QWORD PTR [rsp+0x40],rax
   140022020:	lea    r8,[rsp+0x30]
   140022025:	mov    rax,QWORD PTR [rip+0x1035c]        # 0x140032388
   14002202c:	mov    edx,0x4
   140022031:	mov    ecx,DWORD PTR [rax]
   140022033:	call   QWORD PTR [rip+0x1045f]        # 0x140032498
   140022039:	call   QWORD PTR [rip+0x10549]        # 0x140032588
   14002203f:	test   al,al
   140022041:	je     0x140022072
   140022043:	call   QWORD PTR [rip+0x10437]        # 0x140032480
   140022049:	lea    rcx,[rip+0x1075c]        # 0x1400327ac
   140022050:	xorps  xmm0,xmm0
   140022053:	lea    rdx,[rsp+0x30]
   140022058:	mov    DWORD PTR [rsp+0x38],eax
   14002205c:	mov    QWORD PTR [rsp+0x30],rcx
   140022061:	mov    r8b,0x1
   140022064:	xor    ecx,ecx
   140022066:	movdqu XMMWORD PTR [rsp+0x40],xmm0
   14002206c:	call   QWORD PTR [rip+0x10406]        # 0x140032478
   140022072:	mov    ecx,0x1
   140022077:	call   QWORD PTR [rip+0x101cb]        # 0x140032248
   14002207d:	int3   
   14002207e:	int3   
   14002207f:	int3   
   140022080:	sub    rsp,0x48
   140022084:	test   cl,0xf
   140022087:	je     0x14002212a
   14002208d:	mov    rax,QWORD PTR [rip+0x102f4]        # 0x140032388
   140022094:	mov    edx,0x4
   140022099:	mov    ecx,DWORD PTR [rax]
   14002209b:	call   QWORD PTR [rip+0x10407]        # 0x1400324a8
   1400220a1:	test   al,al
   1400220a3:	je     0x1400220e5
   1400220a5:	lea    rax,[rip+0x15f84]        # 0x140038030
   1400220ac:	mov    DWORD PTR [rsp+0x28],0x7e
   1400220b4:	mov    QWORD PTR [rsp+0x20],rax
   1400220b9:	lea    r9,[rip+0x15f28]        # 0x140037fe8
   1400220c0:	lea    rax,[rip+0x15f41]        # 0x140038008
   1400220c7:	mov    edx,0x4
   1400220cc:	mov    QWORD PTR [rsp+0x30],rax
   1400220d1:	lea    r8,[rsp+0x20]
   1400220d6:	mov    rax,QWORD PTR [rip+0x102ab]        # 0x140032388
   1400220dd:	mov    ecx,DWORD PTR [rax]
   1400220df:	call   QWORD PTR [rip+0x103b3]        # 0x140032498
   1400220e5:	call   QWORD PTR [rip+0x1049d]        # 0x140032588
   1400220eb:	test   al,al
   1400220ed:	je     0x14002211e
   1400220ef:	call   QWORD PTR [rip+0x1038b]        # 0x140032480
   1400220f5:	lea    rcx,[rip+0x106b0]        # 0x1400327ac
   1400220fc:	xorps  xmm0,xmm0
   1400220ff:	lea    rdx,[rsp+0x20]
   140022104:	mov    DWORD PTR [rsp+0x28],eax
   140022108:	mov    QWORD PTR [rsp+0x20],rcx
   14002210d:	mov    r8b,0x1
   140022110:	xor    ecx,ecx
   140022112:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   140022118:	call   QWORD PTR [rip+0x1035a]        # 0x140032478
   14002211e:	mov    ecx,0x1
   140022123:	call   QWORD PTR [rip+0x1011f]        # 0x140032248
   140022129:	int3   
   14002212a:	xorps  xmm0,xmm0
   14002212d:	mov    rax,rcx
   140022130:	movdqa XMMWORD PTR [rcx],xmm0
   140022134:	add    rsp,0x48
   140022138:	ret    
   140022139:	int3   
   14002213a:	int3   
   14002213b:	int3   
   14002213c:	int3   
   14002213d:	int3   
   14002213e:	int3   
   14002213f:	int3   
   140022140:	mov    QWORD PTR [rsp+0x10],rdx
   140022145:	push   rbx
   140022146:	push   rsi
   140022147:	push   rdi
   140022148:	push   r13
   14002214a:	push   r15
   14002214c:	sub    rsp,0x50
   140022150:	xor    edi,edi
   140022152:	mov    rbx,r9
   140022155:	mov    r13,r8
   140022158:	mov    r15,rcx
   14002215b:	test   r9,r9
   14002215e:	je     0x14002217e
   140022160:	mov    rcx,rbx
   140022163:	mov    QWORD PTR [r9+0x10],rdi
   140022167:	mov    BYTE PTR [r9+0x18],dil
   14002216b:	mov    DWORD PTR [r9+0x24],edi
   14002216f:	mov    DWORD PTR [r9+0x20],0xffffffff
   140022177:	call   0x1400209e0
   14002217c:	jmp    0x140022184
   14002217e:	mov    QWORD PTR [rdx],rdi
   140022181:	mov    DWORD PTR [r8],edi
   140022184:	mov    rcx,r15
   140022187:	call   QWORD PTR [rip+0x1029b]        # 0x140032428
   14002218d:	mov    rsi,rax
   140022190:	test   rax,rax
   140022193:	jg     0x1400221a3
   140022195:	xor    eax,eax
   140022197:	add    rsp,0x50
   14002219b:	pop    r15
   14002219d:	pop    r13
   14002219f:	pop    rdi
   1400221a0:	pop    rsi
   1400221a1:	pop    rbx
   1400221a2:	ret    
   1400221a3:	cmp    rsi,0x7fffffff
   1400221aa:	jge    0x14002242c
   1400221b0:	movsxd rax,DWORD PTR [rsp+0xa8]
   1400221b8:	test   eax,eax
   1400221ba:	jle    0x1400221c5
   1400221bc:	cmp    rsi,rax
   1400221bf:	jg     0x14002242c
   1400221c5:	mov    QWORD PTR [rsp+0x80],rbp
   1400221cd:	mov    QWORD PTR [rsp+0x48],r12
   1400221d2:	mov    QWORD PTR [rsp+0x40],r14
   1400221d7:	call   0x140022460
   1400221dc:	xor    r9d,r9d
   1400221df:	mov    BYTE PTR [rsp+0x20],0x0
   1400221e4:	mov    r8,r15
   1400221e7:	mov    edx,0x1fffc
   1400221ec:	mov    rcx,rax
   1400221ef:	mov    r14,rax
   1400221f2:	mov    BYTE PTR [rax],0x0
   1400221f5:	mov    rbp,rdi
   1400221f8:	call   QWORD PTR [rip+0x101ea]        # 0x1400323e8
   1400221fe:	mov    rcx,r14
   140022201:	call   QWORD PTR [rip+0x102c1]        # 0x1400324c8
   140022207:	movzx  eax,BYTE PTR [r14]
   14002220b:	test   al,al
   14002220d:	je     0x14002226c
   14002220f:	cmp    al,0x5c
   140022211:	jne    0x140022238
   140022213:	cmp    BYTE PTR [r14+0x1],al
   140022217:	jne    0x140022238
   140022219:	call   0x140022460
   14002221e:	movups xmm0,XMMWORD PTR [rip+0x15e53]        # 0x140038078
   140022225:	lea    rcx,[r14+0x2]
   140022229:	mov    r8d,0x1ffec
   14002222f:	movups XMMWORD PTR [rax],xmm0
   140022232:	lea    rdx,[rax+0x10]
   140022236:	jmp    0x140022256
   140022238:	call   0x140022460
   14002223d:	movsd  xmm0,QWORD PTR [rip+0x15e4b]        # 0x140038090
   140022245:	mov    r8d,0x1fff4
   14002224b:	mov    rcx,r14
   14002224e:	movsd  QWORD PTR [rax],xmm0
   140022252:	lea    rdx,[rax+0x8]
   140022256:	mov    r9d,0x4
   14002225c:	mov    rbp,rax
   14002225f:	call   QWORD PTR [rip+0x101b3]        # 0x140032418
   140022265:	mov    WORD PTR [rbp+0x1fffa],di
   14002226c:	xor    r9d,r9d
   14002226f:	mov    QWORD PTR [rsp+0x30],rdi
   140022274:	mov    DWORD PTR [rsp+0x28],0x8000080
   14002227c:	mov    edx,0x80000000
   140022281:	mov    rcx,rbp
   140022284:	mov    DWORD PTR [rsp+0x20],0x3
   14002228c:	lea    r8d,[r9+0x5]
   140022290:	call   QWORD PTR [rip+0xff22]        # 0x1400321b8
   140022296:	mov    r12,rax
   140022299:	cmp    rax,0xffffffffffffffff
   14002229d:	jne    0x1400222f1
   14002229f:	call   QWORD PTR [rip+0xff63]        # 0x140032208
   1400222a5:	mov    r15d,eax
   1400222a8:	test   rbp,rbp
   1400222ab:	je     0x1400222bc
   1400222ad:	mov    rdx,rbp
   1400222b0:	lea    rcx,[rip+0x25f89]        # 0x140048240
   1400222b7:	call   0x1400225c0
   1400222bc:	mov    rdx,r14
   1400222bf:	lea    rcx,[rip+0x25f7a]        # 0x140048240
   1400222c6:	call   0x1400225c0
   1400222cb:	test   r15d,r15d
   1400222ce:	je     0x140022314
   1400222d0:	mov    eax,r15d
   1400222d3:	mov    r12,QWORD PTR [rsp+0x48]
   1400222d8:	mov    rbp,QWORD PTR [rsp+0x80]
   1400222e0:	mov    r14,QWORD PTR [rsp+0x40]
   1400222e5:	add    rsp,0x50
   1400222e9:	pop    r15
   1400222eb:	pop    r13
   1400222ed:	pop    rdi
   1400222ee:	pop    rsi
   1400222ef:	pop    rbx
   1400222f0:	ret    
   1400222f1:	test   rbp,rbp
   1400222f4:	je     0x140022305
   1400222f6:	mov    rdx,rbp
   1400222f9:	lea    rcx,[rip+0x25f40]        # 0x140048240
   140022300:	call   0x1400225c0
   140022305:	mov    rdx,r14
   140022308:	lea    rcx,[rip+0x25f31]        # 0x140048240
   14002230f:	call   0x1400225c0
   140022314:	test   rbx,rbx
   140022317:	je     0x140022328
   140022319:	mov    edx,esi
   14002231b:	mov    rcx,rbx
   14002231e:	call   0x140020fc0
   140022323:	mov    r14,QWORD PTR [rbx]
   140022326:	jmp    0x140022357
   140022328:	cmp    BYTE PTR [rsp+0xa0],0x0
   140022330:	lea    ebp,[rsi+0x1]
   140022333:	jne    0x140022337
   140022335:	mov    ebp,esi
   140022337:	mov    rax,QWORD PTR [rip+0x10052]        # 0x140032390
   14002233e:	movsxd rdx,ebp
   140022341:	mov    rcx,QWORD PTR [rax]
   140022344:	mov    rax,QWORD PTR [rcx]
   140022347:	call   QWORD PTR [rax+0x8]
   14002234a:	lea    ecx,[rbp-0x1]
   14002234d:	mov    r14,rax
   140022350:	movsxd rdx,ecx
   140022353:	mov    BYTE PTR [rdx+rax*1],0x0
   140022357:	lea    r9,[rsp+0x98]
   14002235f:	mov    DWORD PTR [rsp+0x98],edi
   140022366:	mov    r8d,esi
   140022369:	mov    QWORD PTR [rsp+0x20],rdi
   14002236e:	mov    rdx,r14
   140022371:	mov    rcx,r12
   140022374:	call   QWORD PTR [rip+0xfe26]        # 0x1400321a0
   14002237a:	test   eax,eax
   14002237c:	jne    0x140022388
   14002237e:	call   QWORD PTR [rip+0xfe84]        # 0x140032208
   140022384:	mov    ebp,eax
   140022386:	jmp    0x1400223a2
   140022388:	cmp    DWORD PTR [rsp+0x98],esi
   14002238f:	jge    0x1400223a0
   140022391:	mov    ebp,0x26
   140022396:	mov    ecx,ebp
   140022398:	call   QWORD PTR [rip+0xfdea]        # 0x140032188
   14002239e:	jmp    0x1400223a2
   1400223a0:	mov    ebp,edi
   1400223a2:	mov    rcx,r12
   1400223a5:	call   QWORD PTR [rip+0xfde5]        # 0x140032190
   1400223ab:	test   eax,eax
   1400223ad:	jne    0x1400223b5
   1400223af:	call   QWORD PTR [rip+0xfe53]        # 0x140032208
   1400223b5:	test   ebp,ebp
   1400223b7:	je     0x1400223fd
   1400223b9:	test   rbx,rbx
   1400223bc:	je     0x1400223e3
   1400223be:	mov    rcx,rbx
   1400223c1:	mov    QWORD PTR [rbx+0x10],0x0
   1400223c9:	mov    BYTE PTR [rbx+0x18],0x0
   1400223cd:	mov    DWORD PTR [rbx+0x24],edi
   1400223d0:	mov    DWORD PTR [rbx+0x20],0xffffffff
   1400223d7:	call   0x1400209e0
   1400223dc:	mov    eax,ebp
   1400223de:	jmp    0x1400222d3
   1400223e3:	mov    rax,QWORD PTR [rip+0xffa6]        # 0x140032390
   1400223ea:	mov    rdx,r14
   1400223ed:	mov    rcx,QWORD PTR [rax]
   1400223f0:	mov    rax,QWORD PTR [rcx]
   1400223f3:	call   QWORD PTR [rax+0x28]
   1400223f6:	mov    eax,ebp
   1400223f8:	jmp    0x1400222d3
   1400223fd:	test   rbx,rbx
   140022400:	je     0x140022416
   140022402:	mov    r8d,esi
   140022405:	xor    edx,edx
   140022407:	mov    rcx,rbx
   14002240a:	call   0x140021f40
   14002240f:	xor    eax,eax
   140022411:	jmp    0x1400222d3
   140022416:	mov    rax,QWORD PTR [rsp+0x88]
   14002241e:	mov    QWORD PTR [rax],r14
   140022421:	xor    eax,eax
   140022423:	mov    DWORD PTR [r13+0x0],esi
   140022427:	jmp    0x1400222d3
   14002242c:	mov    eax,0x216
   140022431:	add    rsp,0x50
   140022435:	pop    r15
   140022437:	pop    r13
   140022439:	pop    rdi
   14002243a:	pop    rsi
   14002243b:	pop    rbx
   14002243c:	ret    
   14002243d:	int3   
   14002243e:	int3   
   14002243f:	int3   
   140022440:	sub    rsp,0x38
   140022444:	mov    DWORD PTR [rsp+0x28],r8d
   140022449:	mov    r9,rdx
   14002244c:	xor    r8d,r8d
   14002244f:	mov    BYTE PTR [rsp+0x20],0x1
   140022454:	xor    edx,edx
   140022456:	call   0x140022140
   14002245b:	add    rsp,0x38
   14002245f:	ret    
   140022460:	rex push rbx
   140022462:	sub    rsp,0x40
   140022466:	movdqa xmm0,XMMWORD PTR [rip+0x25dd2]        # 0x140048240
   14002246e:	movq   r8,xmm0
   140022473:	mov    DWORD PTR [rsp+0x2c],0x0
   14002247b:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140022481:	test   r8,r8
   140022484:	je     0x1400224eb
   140022486:	data16 nop WORD PTR [rax+rax*1+0x0]
   140022490:	mov    eax,DWORD PTR [rsp+0x38]
   140022494:	mov    rbx,QWORD PTR [r8]
   140022497:	dec    eax
   140022499:	mov    DWORD PTR [rsp+0x28],eax
   14002249d:	movq   rax,xmm0
   1400224a2:	mov    rcx,QWORD PTR [rsp+0x28]
   1400224a7:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400224ad:	psrldq xmm0,0x8
   1400224b2:	movq   rdx,xmm0
   1400224b7:	mov    QWORD PTR [rsp+0x20],rbx
   1400224bc:	lock cmpxchg16b OWORD PTR [rip+0x25d7b]        # 0x140048240
   1400224c5:	sete   al
   1400224c8:	mov    QWORD PTR [rsp+0x38],rdx
   1400224cd:	cmp    al,0x1
   1400224cf:	je     0x1400224fa
   1400224d1:	pause  
   1400224d3:	movdqa xmm0,XMMWORD PTR [rip+0x25d65]        # 0x140048240
   1400224db:	movq   r8,xmm0
   1400224e0:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   1400224e6:	test   r8,r8
   1400224e9:	jne    0x140022490
   1400224eb:	mov    ecx,0x20000
   1400224f0:	add    rsp,0x40
   1400224f4:	pop    rbx
   1400224f5:	jmp    0x140007bf0
   1400224fa:	mov    rax,r8
   1400224fd:	add    rsp,0x40
   140022501:	pop    rbx
   140022502:	ret    
   140022503:	int3   
   140022504:	int3   
   140022505:	int3   
   140022506:	int3   
   140022507:	int3   
   140022508:	int3   
   140022509:	int3   
   14002250a:	int3   
   14002250b:	int3   
   14002250c:	int3   
   14002250d:	int3   
   14002250e:	int3   
   14002250f:	int3   
   140022510:	mov    QWORD PTR [rsp+0x8],rbx
   140022515:	mov    QWORD PTR [rsp+0x10],rsi
   14002251a:	push   rdi
   14002251b:	sub    rsp,0x40
   14002251f:	mov    rdi,rcx
   140022522:	xor    esi,esi
   140022524:	nop    DWORD PTR [rax+0x0]
   140022528:	nop    DWORD PTR [rax+rax*1+0x0]
   140022530:	movdqa xmm1,XMMWORD PTR [rdi]
   140022534:	movq   r8,xmm1
   140022539:	mov    DWORD PTR [rsp+0x2c],esi
   14002253d:	test   r8,r8
   140022540:	je     0x14002259b
   140022542:	nop    DWORD PTR [rax+0x0]
   140022546:	data16 nop WORD PTR [rax+rax*1+0x0]
   140022550:	mov    rbx,QWORD PTR [r8]
   140022553:	movdqa xmm0,xmm1
   140022557:	psrldq xmm0,0x8
   14002255c:	movd   eax,xmm0
   140022560:	mov    QWORD PTR [rsp+0x20],rbx
   140022565:	dec    eax
   140022567:	mov    DWORD PTR [rsp+0x28],eax
   14002256b:	movq   rax,xmm1
   140022570:	mov    rcx,QWORD PTR [rsp+0x28]
   140022575:	psrldq xmm1,0x8
   14002257a:	movq   rdx,xmm1
   14002257f:	lock cmpxchg16b OWORD PTR [rdi]
   140022584:	sete   al
   140022587:	cmp    al,0x1
   140022589:	je     0x1400225ab
   14002258b:	pause  
   14002258d:	movdqa xmm1,XMMWORD PTR [rdi]
   140022591:	movq   r8,xmm1
   140022596:	test   r8,r8
   140022599:	jne    0x140022550
   14002259b:	mov    rbx,QWORD PTR [rsp+0x50]
   1400225a0:	mov    rsi,QWORD PTR [rsp+0x58]
   1400225a5:	add    rsp,0x40
   1400225a9:	pop    rdi
   1400225aa:	ret    
   1400225ab:	mov    edx,0x20000
   1400225b0:	mov    rcx,r8
   1400225b3:	call   0x14002639c
   1400225b8:	jmp    0x140022530
   1400225bd:	int3   
   1400225be:	int3   
   1400225bf:	int3   
   1400225c0:	rex push rbx
   1400225c2:	sub    rsp,0x20
   1400225c6:	movdqa xmm1,XMMWORD PTR [rcx]
   1400225ca:	mov    rbx,rdx
   1400225cd:	movdqa xmm0,xmm1
   1400225d1:	mov    DWORD PTR [rsp+0x1c],0x0
   1400225d9:	movq   r9,xmm1
   1400225de:	psrldq xmm0,0x8
   1400225e3:	movd   eax,xmm0
   1400225e7:	mov    r8,rcx
   1400225ea:	mov    QWORD PTR [rdx],r9
   1400225ed:	add    eax,0x10001
   1400225f2:	mov    DWORD PTR [rsp+0x18],eax
   1400225f6:	movq   rax,xmm1
   1400225fb:	mov    rcx,QWORD PTR [rsp+0x18]
   140022600:	psrldq xmm1,0x8
   140022605:	movq   rdx,xmm1
   14002260a:	lock cmpxchg16b OWORD PTR [r8]
   14002260f:	sete   al
   140022612:	cmp    al,0x1
   140022614:	je     0x140022666
   140022616:	prefetchw BYTE PTR [r8]
   14002261a:	nop    WORD PTR [rax+rax*1+0x0]
   140022620:	pause  
   140022622:	movdqa xmm1,XMMWORD PTR [r8]
   140022627:	movdqa xmm0,xmm1
   14002262b:	movq   r9,xmm1
   140022630:	psrldq xmm0,0x8
   140022635:	movd   eax,xmm0
   140022639:	mov    QWORD PTR [rbx],r9
   14002263c:	add    eax,0x10001
   140022641:	mov    DWORD PTR [rsp+0x18],eax
   140022645:	movq   rax,xmm1
   14002264a:	mov    rcx,QWORD PTR [rsp+0x18]
   14002264f:	psrldq xmm1,0x8
   140022654:	movq   rdx,xmm1
   140022659:	lock cmpxchg16b OWORD PTR [r8]
   14002265e:	sete   cl
   140022661:	cmp    cl,0x1
   140022664:	jne    0x140022620
   140022666:	mov    rax,r9
   140022669:	add    rsp,0x20
   14002266d:	pop    rbx
   14002266e:	ret    
   14002266f:	int3   
   140022670:	mov    r9,rcx
   140022673:	test   r8d,r8d
   140022676:	jle    0x14002269a
   140022678:	nop    DWORD PTR [rax+rax*1+0x0]
   140022680:	movzx  eax,BYTE PTR [r9]
   140022684:	dec    r8d
   140022687:	cmp    al,BYTE PTR [rdx]
   140022689:	jne    0x14002269d
   14002268b:	test   al,al
   14002268d:	je     0x14002269a
   14002268f:	inc    r9
   140022692:	inc    rdx
   140022695:	test   r8d,r8d
   140022698:	jg     0x140022680
   14002269a:	xor    eax,eax
   14002269c:	ret    
   14002269d:	movzx  ecx,BYTE PTR [rdx]
   1400226a0:	or     r8d,0xffffffff
   1400226a4:	cmp    BYTE PTR [r9],cl
   1400226a7:	mov    eax,0x1
   1400226ac:	cmovl  eax,r8d
   1400226b0:	ret    
   1400226b1:	int3   
   1400226b2:	int3   
   1400226b3:	int3   
   1400226b4:	int3   
   1400226b5:	int3   
   1400226b6:	int3   
   1400226b7:	int3   
   1400226b8:	int3   
   1400226b9:	int3   
   1400226ba:	int3   
   1400226bb:	int3   
   1400226bc:	int3   
   1400226bd:	int3   
   1400226be:	int3   
   1400226bf:	int3   
   1400226c0:	movsxd rdx,edx
   1400226c3:	jmp    0x140028444
   1400226c8:	int3   
   1400226c9:	int3   
   1400226ca:	int3   
   1400226cb:	int3   
   1400226cc:	int3   
   1400226cd:	int3   
   1400226ce:	int3   
   1400226cf:	int3   
   1400226d0:	cmp    BYTE PTR [rcx],0x0
   1400226d3:	mov    rax,rcx
   1400226d6:	je     0x1400226e0
   1400226d8:	inc    rax
   1400226db:	cmp    BYTE PTR [rax],0x0
   1400226de:	jne    0x1400226d8
   1400226e0:	sub    eax,ecx
   1400226e2:	mov    r8d,0x3501a674
   1400226e8:	mov    edx,eax
   1400226ea:	jmp    0x1400226f0
   1400226ef:	int3   
   1400226f0:	mov    r9d,edx
   1400226f3:	mov    r10,rcx
   1400226f6:	xor    r9d,r8d
   1400226f9:	cmp    edx,0x4
   1400226fc:	jl     0x140022738
   1400226fe:	mov    r8d,edx
   140022701:	shr    r8,0x2
   140022705:	mov    eax,r8d
   140022708:	neg    eax
   14002270a:	lea    edx,[rdx+rax*4]
   14002270d:	nop    DWORD PTR [rax]
   140022710:	imul   eax,DWORD PTR [r10],0x5bd1e995
   140022717:	add    r10,0x4
   14002271b:	imul   r9d,r9d,0x5bd1e995
   140022722:	mov    ecx,eax
   140022724:	shr    ecx,0x18
   140022727:	xor    ecx,eax
   140022729:	imul   ecx,ecx,0x5bd1e995
   14002272f:	xor    r9d,ecx
   140022732:	sub    r8,0x1
   140022736:	jne    0x140022710
   140022738:	sub    edx,0x1
   14002273b:	je     0x14002275d
   14002273d:	sub    edx,0x1
   140022740:	je     0x140022752
   140022742:	cmp    edx,0x1
   140022745:	jne    0x14002276b
   140022747:	movzx  eax,BYTE PTR [r10+0x2]
   14002274c:	shl    eax,0x10
   14002274f:	xor    r9d,eax
   140022752:	movzx  eax,BYTE PTR [r10+0x1]
   140022757:	shl    eax,0x8
   14002275a:	xor    r9d,eax
   14002275d:	movzx  eax,BYTE PTR [r10]
   140022761:	xor    eax,r9d
   140022764:	imul   r9d,eax,0x5bd1e995
   14002276b:	mov    eax,r9d
   14002276e:	shr    eax,0xd
   140022771:	xor    eax,r9d
   140022774:	imul   ecx,eax,0x5bd1e995
   14002277a:	mov    eax,ecx
   14002277c:	shr    eax,0xf
   14002277f:	xor    eax,ecx
   140022781:	ret    
   140022782:	int3   
   140022783:	int3   
   140022784:	int3   
   140022785:	int3   
   140022786:	int3   
   140022787:	int3   
   140022788:	int3   
   140022789:	int3   
   14002278a:	int3   
   14002278b:	int3   
   14002278c:	int3   
   14002278d:	int3   
   14002278e:	int3   
   14002278f:	int3   
   140022790:	rex push rbp
   140022792:	sub    rsp,0x30
   140022796:	lea    rbp,[rsp+0x20]
   14002279b:	mov    QWORD PTR [rbp+0x20],rbx
   14002279f:	or     r8,0xffffffffffffffff
   1400227a3:	mov    QWORD PTR [rbp+0x28],rsi
   1400227a7:	mov    rbx,rcx
   1400227aa:	mov    QWORD PTR [rbp+0x30],rdi
   1400227ae:	mov    esi,edx
   1400227b0:	movaps XMMWORD PTR [rbp+0x0],xmm6
   1400227b4:	inc    r8
   1400227b7:	cmp    BYTE PTR [rcx+r8*1],0x0
   1400227bc:	jne    0x1400227b4
   1400227be:	lea    eax,[r8+0x20]
   1400227c2:	movsxd rcx,eax
   1400227c5:	and    rcx,0xfffffffffffffff0
   1400227c9:	lea    rax,[rcx+0xf]
   1400227cd:	cmp    rax,rcx
   1400227d0:	ja     0x1400227dc
   1400227d2:	movabs rax,0xffffffffffffff0
   1400227dc:	and    rax,0xfffffffffffffff0
   1400227e0:	call   0x1400263c0
   1400227e5:	sub    rsp,rax
   1400227e8:	xor    r9d,r9d
   1400227eb:	lea    rdx,[rsp+0x20]
   1400227f0:	add    rdx,0x10
   1400227f4:	and    rdx,0xffffffffffffffef
   1400227f8:	test   r8d,r8d
   1400227fb:	jle    0x1400228f7
   140022801:	cmp    r8d,0x20
   140022805:	jb     0x1400228f7
   14002280b:	lea    eax,[r8-0x1]
   14002280f:	movsxd rcx,eax
   140022812:	lea    rax,[rcx+rbx*1]
   140022816:	lea    r10,[rcx+rdx*1]
   14002281a:	cmp    rdx,rax
   14002281d:	ja     0x140022828
   14002281f:	cmp    r10,rbx
   140022822:	jae    0x1400228f7
   140022828:	mov    ecx,r8d
   14002282b:	and    ecx,0x8000001f
   140022831:	jge    0x14002283a
   140022833:	dec    ecx
   140022835:	or     ecx,0xffffffe0
   140022838:	inc    ecx
   14002283a:	movdqa xmm3,XMMWORD PTR [rip+0x1587e]        # 0x1400380c0
   140022842:	mov    eax,r8d
   140022845:	movdqa xmm4,XMMWORD PTR [rip+0x15893]        # 0x1400380e0
   14002284d:	sub    eax,ecx
   14002284f:	movdqa xmm5,XMMWORD PTR [rip+0x15879]        # 0x1400380d0
   140022857:	mov    rcx,rbx
   14002285a:	movdqa xmm6,XMMWORD PTR [rip+0x1584e]        # 0x1400380b0
   140022862:	sub    rcx,rdx
   140022865:	mov    r11,rdx
   140022868:	movsxd rdi,eax
   14002286b:	neg    r11
   14002286e:	mov    r10,rdx
   140022871:	movdqu xmm1,XMMWORD PTR [rcx+r10*1]
   140022877:	lea    r10,[r10+0x20]
   14002287b:	add    r9d,0x20
   14002287f:	movdqa xmm0,xmm3
   140022883:	lea    rax,[r11+r10*1]
   140022887:	pcmpgtb xmm0,xmm1
   14002288b:	movdqa xmm2,xmm1
   14002288f:	pxor   xmm0,xmm4
   140022893:	pcmpgtb xmm2,xmm5
   140022897:	pandn  xmm2,xmm0
   14002289b:	movdqa xmm0,xmm1
   14002289f:	paddb  xmm0,xmm6
   1400228a3:	pand   xmm0,xmm2
   1400228a7:	pandn  xmm2,xmm1
   1400228ab:	por    xmm0,xmm2
   1400228af:	movdqu XMMWORD PTR [r10-0x20],xmm0
   1400228b5:	movdqa xmm0,xmm3
   1400228b9:	movdqu xmm1,XMMWORD PTR [rcx+r10*1-0x10]
   1400228c0:	pcmpgtb xmm0,xmm1
   1400228c4:	movdqa xmm2,xmm1
   1400228c8:	pxor   xmm0,xmm4
   1400228cc:	pcmpgtb xmm2,xmm5
   1400228d0:	pandn  xmm2,xmm0
   1400228d4:	movdqa xmm0,xmm1
   1400228d8:	paddb  xmm0,xmm6
   1400228dc:	pand   xmm0,xmm2
   1400228e0:	pandn  xmm2,xmm1
   1400228e4:	por    xmm0,xmm2
   1400228e8:	movdqu XMMWORD PTR [r10-0x10],xmm0
   1400228ee:	cmp    rax,rdi
   1400228f1:	jl     0x140022871
   1400228f7:	movsxd rax,r9d
   1400228fa:	movsxd r10,r8d
   1400228fd:	cmp    rax,r10
   140022900:	jge    0x14002292b
   140022902:	sub    rbx,rdx
   140022905:	lea    r9,[rax+rdx*1]
   140022909:	sub    r10,rax
   14002290c:	nop    DWORD PTR [rax+0x0]
   140022910:	movzx  ecx,BYTE PTR [r9+rbx*1]
   140022915:	lea    eax,[rcx-0x41]
   140022918:	cmp    al,0x19
   14002291a:	ja     0x14002291f
   14002291c:	add    cl,0x20
   14002291f:	mov    BYTE PTR [r9],cl
   140022922:	inc    r9
   140022925:	sub    r10,0x1
   140022929:	jne    0x140022910
   14002292b:	mov    r9d,r8d
   14002292e:	xor    r9d,esi
   140022931:	cmp    r8d,0x4
   140022935:	jl     0x140022977
   140022937:	mov    r10d,r8d
   14002293a:	shr    r10,0x2
   14002293e:	lea    eax,[r10*4+0x0]
   140022946:	sub    r8d,eax
   140022949:	nop    DWORD PTR [rax+0x0]
   140022950:	imul   eax,DWORD PTR [rdx],0x5bd1e995
   140022956:	add    rdx,0x4
   14002295a:	imul   r9d,r9d,0x5bd1e995
   140022961:	mov    ecx,eax
   140022963:	shr    ecx,0x18
   140022966:	xor    ecx,eax
   140022968:	imul   ecx,ecx,0x5bd1e995
   14002296e:	xor    r9d,ecx
   140022971:	sub    r10,0x1
   140022975:	jne    0x140022950
   140022977:	sub    r8d,0x1
   14002297b:	je     0x14002299d
   14002297d:	sub    r8d,0x1
   140022981:	je     0x140022993
   140022983:	cmp    r8d,0x1
   140022987:	jne    0x1400229aa
   140022989:	movzx  eax,BYTE PTR [rdx+0x2]
   14002298d:	shl    eax,0x10
   140022990:	xor    r9d,eax
   140022993:	movzx  eax,BYTE PTR [rdx+0x1]
   140022997:	shl    eax,0x8
   14002299a:	xor    r9d,eax
   14002299d:	movzx  eax,BYTE PTR [rdx]
   1400229a0:	xor    eax,r9d
   1400229a3:	imul   r9d,eax,0x5bd1e995
   1400229aa:	mov    rbx,QWORD PTR [rbp+0x20]
   1400229ae:	mov    eax,r9d
   1400229b1:	mov    rsi,QWORD PTR [rbp+0x28]
   1400229b5:	mov    rdi,QWORD PTR [rbp+0x30]
   1400229b9:	movaps xmm6,XMMWORD PTR [rbp+0x0]
   1400229bd:	shr    eax,0xd
   1400229c0:	xor    eax,r9d
   1400229c3:	imul   ecx,eax,0x5bd1e995
   1400229c9:	mov    eax,ecx
   1400229cb:	shr    eax,0xf
   1400229ce:	xor    eax,ecx
   1400229d0:	lea    rsp,[rbp+0x10]
   1400229d4:	pop    rbp
   1400229d5:	ret    
   1400229d6:	int3   
   1400229d7:	int3   
   1400229d8:	int3   
   1400229d9:	int3   
   1400229da:	int3   
   1400229db:	int3   
   1400229dc:	int3   
   1400229dd:	int3   
   1400229de:	int3   
   1400229df:	int3   
   1400229e0:	mov    QWORD PTR [rsp+0x18],r8
   1400229e5:	push   rbx
   1400229e6:	sub    rsp,0x20
   1400229ea:	xor    eax,eax
   1400229ec:	lea    r8,[rsp+0x40]
   1400229f1:	mov    DWORD PTR [rcx],eax
   1400229f3:	mov    rbx,rcx
   1400229f6:	mov    QWORD PTR [rcx+0x8],rax
   1400229fa:	mov    QWORD PTR [rcx+0x10],rax
   1400229fe:	lea    r9d,[rax+0x1]
   140022a02:	call   0x140022a40
   140022a07:	mov    rax,rbx
   140022a0a:	add    rsp,0x20
   140022a0e:	pop    rbx
   140022a0f:	ret    
   140022a10:	rex push rbx
   140022a12:	sub    rsp,0x20
   140022a16:	mov    rbx,rcx
   140022a19:	mov    rcx,QWORD PTR [rcx+0x18]
   140022a1d:	test   rcx,rcx
   140022a20:	je     0x140022a27
   140022a22:	call   0x140007bd0
   140022a27:	mov    rcx,rbx
   140022a2a:	add    rsp,0x20
   140022a2e:	pop    rbx
   140022a2f:	jmp    0x1400181a0
   140022a34:	int3   
   140022a35:	int3   
   140022a36:	int3   
   140022a37:	int3   
   140022a38:	int3   
   140022a39:	int3   
   140022a3a:	int3   
   140022a3b:	int3   
   140022a3c:	int3   
   140022a3d:	int3   
   140022a3e:	int3   
   140022a3f:	int3   
   140022a40:	mov    QWORD PTR [rsp+0x8],rbx
   140022a45:	mov    DWORD PTR [rsp+0x20],r9d
   140022a4a:	mov    QWORD PTR [rsp+0x10],rdx
   140022a4f:	push   rbp
   140022a50:	push   rsi
   140022a51:	push   rdi
   140022a52:	push   r12
   140022a54:	push   r13
   140022a56:	push   r14
   140022a58:	push   r15
   140022a5a:	sub    rsp,0x20
   140022a5e:	or     r15,0xffffffffffffffff
   140022a62:	mov    r13,r8
   140022a65:	mov    rax,r15
   140022a68:	mov    rdi,rdx
   140022a6b:	mov    r12,rcx
   140022a6e:	xchg   ax,ax
   140022a70:	inc    rax
   140022a73:	cmp    BYTE PTR [rdx+rax*1],0x0
   140022a77:	jne    0x140022a70
   140022a79:	inc    eax
   140022a7b:	movsxd rbx,eax
   140022a7e:	mov    rcx,rbx
   140022a81:	call   0x140007bf0
   140022a86:	mov    r8,rbx
   140022a89:	mov    QWORD PTR [r12+0x18],rax
   140022a8e:	mov    rdx,rdi
   140022a91:	mov    rcx,rax
   140022a94:	call   0x140026f70
   140022a99:	mov    DWORD PTR [r12],0x0
   140022aa1:	test   DWORD PTR [r12+0x14],0xc0000000
   140022aaa:	jne    0x140022ad8
   140022aac:	mov    rdx,QWORD PTR [r12+0x8]
   140022ab1:	test   rdx,rdx
   140022ab4:	je     0x140022acf
   140022ab6:	mov    rax,QWORD PTR [rip+0xf8d3]        # 0x140032390
   140022abd:	mov    rcx,QWORD PTR [rax]
   140022ac0:	mov    rax,QWORD PTR [rcx]
   140022ac3:	call   QWORD PTR [rax+0x28]
   140022ac6:	mov    QWORD PTR [r12+0x8],0x0
   140022acf:	mov    DWORD PTR [r12+0x10],0x0
   140022ad8:	mov    rbp,rdi
   140022adb:	nop    DWORD PTR [rax+rax*1+0x0]
   140022ae0:	mov    eax,DWORD PTR [rsp+0x78]
   140022ae4:	xor    edi,edi
   140022ae6:	xor    ebx,ebx
   140022ae8:	mov    r14,r15
   140022aeb:	test   eax,eax
   140022aed:	jle    0x140022ba0
   140022af3:	mov    esi,eax
   140022af5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140022b00:	mov    rdx,QWORD PTR [r13+rbx*8+0x0]
   140022b05:	mov    rcx,rbp
   140022b08:	call   QWORD PTR [rip+0xfa5a]        # 0x140032568
   140022b0e:	test   rax,rax
   140022b11:	je     0x140022b23
   140022b13:	test   rdi,rdi
   140022b16:	je     0x140022b1d
   140022b18:	cmp    rax,rdi
   140022b1b:	jae    0x140022b23
   140022b1d:	mov    r14,rbx
   140022b20:	mov    rdi,rax
   140022b23:	inc    rbx
   140022b26:	sub    rsi,0x1
   140022b2a:	jne    0x140022b00
   140022b2c:	test   rdi,rdi
   140022b2f:	je     0x140022ba0
   140022b31:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   140022b36:	mov    rbx,r15
   140022b39:	nop    DWORD PTR [rax+0x0]
   140022b40:	cmp    BYTE PTR [rax+rbx*1+0x1],0x0
   140022b45:	lea    rbx,[rbx+0x1]
   140022b49:	jne    0x140022b40
   140022b4b:	cmp    rdi,rbp
   140022b4e:	jbe    0x140022b96
   140022b50:	mov    rsi,QWORD PTR [r12+0x18]
   140022b55:	mov    eax,edi
   140022b57:	sub    rsi,QWORD PTR [rsp+0x68]
   140022b5c:	sub    eax,ebp
   140022b5e:	add    rsi,rbp
   140022b61:	cdqe   
   140022b63:	mov    BYTE PTR [rax+rsi*1],0x0
   140022b67:	movsxd rbp,DWORD PTR [r12]
   140022b6b:	cmp    ebp,DWORD PTR [r12+0x10]
   140022b70:	jne    0x140022b81
   140022b72:	mov    edx,0x1
   140022b77:	lea    rcx,[r12+0x8]
   140022b7c:	call   0x140013420
   140022b81:	mov    rax,QWORD PTR [r12+0x8]
   140022b86:	inc    DWORD PTR [r12]
   140022b8a:	lea    rdx,[rax+rbp*8]
   140022b8e:	test   rdx,rdx
   140022b91:	je     0x140022b96
   140022b93:	mov    QWORD PTR [rdx],rsi
   140022b96:	lea    rbp,[rbx+rdi*1]
   140022b9a:	jmp    0x140022ae0
   140022b9f:	nop
   140022ba0:	inc    r15
   140022ba3:	cmp    BYTE PTR [r15+rbp*1],0x0
   140022ba8:	jne    0x140022ba0
   140022baa:	test   r15,r15
   140022bad:	je     0x140022bec
   140022baf:	mov    rbx,QWORD PTR [r12+0x18]
   140022bb4:	lea    rsi,[r12+0x8]
   140022bb9:	sub    rbx,QWORD PTR [rsp+0x68]
   140022bbe:	movsxd rdi,DWORD PTR [r12]
   140022bc2:	add    rbx,rbp
   140022bc5:	cmp    edi,DWORD PTR [r12+0x10]
   140022bca:	jne    0x140022bd9
   140022bcc:	mov    edx,0x1
   140022bd1:	mov    rcx,rsi
   140022bd4:	call   0x140013420
   140022bd9:	mov    rax,QWORD PTR [rsi]
   140022bdc:	inc    DWORD PTR [r12]
   140022be0:	lea    rdx,[rax+rdi*8]
   140022be4:	test   rdx,rdx
   140022be7:	je     0x140022bec
   140022be9:	mov    QWORD PTR [rdx],rbx
   140022bec:	mov    rbx,QWORD PTR [rsp+0x60]
   140022bf1:	add    rsp,0x20
   140022bf5:	pop    r15
   140022bf7:	pop    r14
   140022bf9:	pop    r13
   140022bfb:	pop    r12
   140022bfd:	pop    rdi
   140022bfe:	pop    rsi
   140022bff:	pop    rbp
   140022c00:	ret    
   140022c01:	int3   
   140022c02:	int3   
   140022c03:	int3   
   140022c04:	int3   
   140022c05:	int3   
   140022c06:	int3   
   140022c07:	int3   
   140022c08:	int3   
   140022c09:	int3   
   140022c0a:	int3   
   140022c0b:	int3   
   140022c0c:	int3   
   140022c0d:	int3   
   140022c0e:	int3   
   140022c0f:	int3   
   140022c10:	xor    eax,eax
   140022c12:	mov    DWORD PTR [rcx+0x20],0xffffffff
   140022c19:	mov    QWORD PTR [rcx+0x8],rax
   140022c1d:	mov    QWORD PTR [rcx+0x10],rax
   140022c21:	mov    QWORD PTR [rcx+0x18],rax
   140022c25:	mov    DWORD PTR [rcx],eax
   140022c27:	mov    rax,rcx
   140022c2a:	ret    
   140022c2b:	int3   
   140022c2c:	int3   
   140022c2d:	int3   
   140022c2e:	int3   
   140022c2f:	int3   
   140022c30:	mov    QWORD PTR [rsp+0x8],rbx
   140022c35:	mov    QWORD PTR [rsp+0x10],rbp
   140022c3a:	mov    QWORD PTR [rsp+0x18],rsi
   140022c3f:	mov    QWORD PTR [rsp+0x20],rdi
   140022c44:	push   r14
   140022c46:	sub    rsp,0x20
   140022c4a:	lea    rbx,[rcx+0x110]
   140022c51:	xor    r14d,r14d
   140022c54:	mov    DWORD PTR [rcx+0x108],r14d
   140022c5b:	mov    rsi,rdx
   140022c5e:	mov    rdi,rcx
   140022c61:	mov    QWORD PTR [rbx],r14
   140022c64:	mov    rcx,rbx
   140022c67:	mov    DWORD PTR [rbx+0x8],0x8
   140022c6e:	lea    edx,[r14+0x8]
   140022c72:	mov    DWORD PTR [rbx+0xc],0x80000000
   140022c79:	mov    rbp,r8
   140022c7c:	call   0x140023150
   140022c81:	test   bl,0x7
   140022c84:	je     0x140022c91
   140022c86:	call   QWORD PTR [rip+0xf924]        # 0x1400325b0
   140022c8c:	test   eax,eax
   140022c8e:	je     0x140022c91
   140022c90:	int3   
   140022c91:	lea    rax,[rbx+0x10]
   140022c95:	mov    rcx,rdi
   140022c98:	mov    QWORD PTR [rbx],rax
   140022c9b:	lea    rdx,[rip+0x1545e]        # 0x140038100
   140022ca2:	mov    QWORD PTR [rdi+0x268],r14
   140022ca9:	mov    QWORD PTR [rdi+0x270],r14
   140022cb0:	mov    QWORD PTR [rdi+0x278],r14
   140022cb7:	mov    DWORD PTR [rdi+0x280],0xffffffff
   140022cc1:	mov    DWORD PTR [rdi+0x260],r14d
   140022cc8:	mov    QWORD PTR [rdi+0x290],r14
   140022ccf:	mov    DWORD PTR [rdi+0x298],r14d
   140022cd6:	mov    QWORD PTR [rdi+0x2a0],r14
   140022cdd:	mov    QWORD PTR [rdi+0x2a8],r14
   140022ce4:	mov    DWORD PTR [rdi+0x2b0],0x1010101
   140022cee:	call   0x1400245d0
   140022cf3:	xor    r8d,r8d
   140022cf6:	mov    QWORD PTR [rdi+0x100],rsi
   140022cfd:	xor    edx,edx
   140022cff:	mov    rcx,rsi
   140022d02:	call   0x140021ee0
   140022d07:	mov    rdx,rbp
   140022d0a:	mov    DWORD PTR [rdi+0x288],0x1
   140022d14:	lea    rcx,[rdi+0x290]
   140022d1b:	call   0x14001aae0
   140022d20:	mov    rbx,QWORD PTR [rsp+0x30]
   140022d25:	mov    rax,rdi
   140022d28:	mov    rdi,QWORD PTR [rsp+0x48]
   140022d2d:	mov    rbp,QWORD PTR [rsp+0x38]
   140022d32:	mov    rsi,QWORD PTR [rsp+0x40]
   140022d37:	add    rsp,0x20
   140022d3b:	pop    r14
   140022d3d:	ret    
   140022d3e:	int3   
   140022d3f:	int3   
   140022d40:	mov    rdx,QWORD PTR [rcx+0x8]
   140022d44:	test   rdx,rdx
   140022d47:	je     0x140022d5a
   140022d49:	mov    rax,QWORD PTR [rip+0xf640]        # 0x140032390
   140022d50:	mov    rcx,QWORD PTR [rax]
   140022d53:	mov    rax,QWORD PTR [rcx]
   140022d56:	rex.W jmp QWORD PTR [rax+0x28]
   140022d5a:	ret    
   140022d5b:	int3   
   140022d5c:	int3   
   140022d5d:	int3   
   140022d5e:	int3   
   140022d5f:	int3   
   140022d60:	mov    QWORD PTR [rsp+0x8],rbx
   140022d65:	push   rdi
   140022d66:	sub    rsp,0x20
   140022d6a:	movsxd rdi,DWORD PTR [rcx]
   140022d6d:	mov    rbx,rcx
   140022d70:	cmp    edi,DWORD PTR [rcx+0x10]
   140022d73:	jne    0x140022d83
   140022d75:	add    rcx,0x8
   140022d79:	mov    edx,0x1
   140022d7e:	call   0x140023260
   140022d83:	inc    DWORD PTR [rbx]
   140022d85:	mov    rax,rdi
   140022d88:	shl    rax,0x4
   140022d8c:	add    rax,QWORD PTR [rbx+0x8]
   140022d90:	je     0x140022d99
   140022d92:	mov    QWORD PTR [rax],0x0
   140022d99:	mov    eax,edi
   140022d9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022da0:	add    rsp,0x20
   140022da4:	pop    rdi
   140022da5:	ret    
   140022da6:	int3   
   140022da7:	int3   
   140022da8:	int3   
   140022da9:	int3   
   140022daa:	int3   
   140022dab:	int3   
   140022dac:	int3   
   140022dad:	int3   
   140022dae:	int3   
   140022daf:	int3   
   140022db0:	xor    edx,edx
   140022db2:	jmp    0x140023d90
   140022db7:	int3   
   140022db8:	int3   
   140022db9:	int3   
   140022dba:	int3   
   140022dbb:	int3   
   140022dbc:	int3   
   140022dbd:	int3   
   140022dbe:	int3   
   140022dbf:	int3   
   140022dc0:	rex push rdi
   140022dc2:	sub    rsp,0x20
   140022dc6:	cmp    QWORD PTR [rcx+0x8],0x0
   140022dcb:	mov    rdi,rcx
   140022dce:	jne    0x140022e43
   140022dd0:	mov    rax,QWORD PTR [rcx+0x10]
   140022dd4:	test   rax,rax
   140022dd7:	je     0x140022e43
   140022dd9:	mov    rcx,QWORD PTR [rcx+0x18]
   140022ddd:	test   rcx,rcx
   140022de0:	je     0x140022e39
   140022de2:	cmp    rax,rcx
   140022de5:	je     0x140022e39
   140022de7:	mov    QWORD PTR [rsp+0x30],rbx
   140022dec:	mov    ebx,ecx
   140022dee:	sub    ebx,eax
   140022df0:	mov    rax,QWORD PTR [rip+0xf599]        # 0x140032390
   140022df7:	mov    rcx,QWORD PTR [rax]
   140022dfa:	lea    eax,[rbx+0x1]
   140022dfd:	movsxd rdx,eax
   140022e00:	mov    r8,QWORD PTR [rcx]
   140022e03:	call   QWORD PTR [r8+0x8]
   140022e07:	mov    QWORD PTR [rdi+0x8],rax
   140022e0b:	test   ebx,ebx
   140022e0d:	jns    0x140022e10
   140022e0f:	int3   
   140022e10:	mov    rdx,QWORD PTR [rdi+0x10]
   140022e14:	mov    rcx,rax
   140022e17:	movsxd rbx,ebx
   140022e1a:	mov    r8,rbx
   140022e1d:	call   0x140026f70
   140022e22:	mov    rax,QWORD PTR [rdi+0x8]
   140022e26:	mov    BYTE PTR [rbx+rax*1],0x0
   140022e2a:	mov    rax,QWORD PTR [rdi+0x8]
   140022e2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140022e33:	add    rsp,0x20
   140022e37:	pop    rdi
   140022e38:	ret    
   140022e39:	mov    rax,QWORD PTR [rdi+0x8]
   140022e3d:	add    rsp,0x20
   140022e41:	pop    rdi
   140022e42:	ret    
   140022e43:	mov    rax,QWORD PTR [rcx+0x8]
   140022e47:	add    rsp,0x20
   140022e4b:	pop    rdi
   140022e4c:	ret    
   140022e4d:	int3   
   140022e4e:	int3   
   140022e4f:	int3   
   140022e50:	mov    r8,rdx
   140022e53:	mov    rdx,QWORD PTR [rcx+0x18]
   140022e57:	mov    rcx,QWORD PTR [rcx+0x10]
   140022e5b:	jmp    0x140024160
   140022e60:	mov    eax,DWORD PTR [rcx+0x20]
   140022e63:	mov    edx,DWORD PTR [rcx+0x10]
   140022e66:	sub    eax,edx
   140022e68:	je     0x140022e7c
   140022e6a:	sub    edx,DWORD PTR [rcx+0x24]
   140022e6d:	mov    rax,QWORD PTR [rcx]
   140022e70:	movsxd rdx,edx
   140022e73:	cmp    BYTE PTR [rdx+rax*1],0x0
   140022e77:	je     0x140022e7c
   140022e79:	xor    al,al
   140022e7b:	ret    
   140022e7c:	mov    al,0x1
   140022e7e:	ret    
   140022e7f:	int3   
   140022e80:	mov    QWORD PTR [rsp+0x8],rbx
   140022e85:	push   rdi
   140022e86:	sub    rsp,0x20
   140022e8a:	mov    rdi,rdx
   140022e8d:	mov    rbx,rcx
   140022e90:	xor    edx,edx
   140022e92:	call   0x140023d90
   140022e97:	test   al,al
   140022e99:	jne    0x140022ea6
   140022e9b:	mov    rbx,QWORD PTR [rsp+0x30]
   140022ea0:	add    rsp,0x20
   140022ea4:	pop    rdi
   140022ea5:	ret    
   140022ea6:	test   rdi,rdi
   140022ea9:	je     0x140022eca
   140022eab:	mov    rax,QWORD PTR [rbx+0x110]
   140022eb2:	movups xmm0,XMMWORD PTR [rax]
   140022eb5:	movups XMMWORD PTR [rdi],xmm0
   140022eb8:	movups xmm1,XMMWORD PTR [rax+0x10]
   140022ebc:	movups XMMWORD PTR [rdi+0x10],xmm1
   140022ec0:	movsd  xmm0,QWORD PTR [rax+0x20]
   140022ec5:	movsd  QWORD PTR [rdi+0x20],xmm0
   140022eca:	mov    rax,QWORD PTR [rbx+0x110]
   140022ed1:	lea    rcx,[rbx+0x108]
   140022ed8:	mov    edx,0x1
   140022edd:	movups xmm0,XMMWORD PTR [rax]
   140022ee0:	movups XMMWORD PTR [rbx+0x260],xmm0
   140022ee7:	movups xmm1,XMMWORD PTR [rax+0x10]
   140022eeb:	movups XMMWORD PTR [rbx+0x270],xmm1
   140022ef2:	movsd  xmm0,QWORD PTR [rax+0x20]
   140022ef7:	movsd  QWORD PTR [rbx+0x280],xmm0
   140022eff:	call   0x140023f10
   140022f04:	mov    rbx,QWORD PTR [rsp+0x30]
   140022f09:	mov    al,0x1
   140022f0b:	add    rsp,0x20
   140022f0f:	pop    rdi
   140022f10:	ret    
   140022f11:	int3   
   140022f12:	int3   
   140022f13:	int3   
   140022f14:	int3   
   140022f15:	int3   
   140022f16:	int3   
   140022f17:	int3   
   140022f18:	int3   
   140022f19:	int3   
   140022f1a:	int3   
   140022f1b:	int3   
   140022f1c:	int3   
   140022f1d:	int3   
   140022f1e:	int3   
   140022f1f:	int3   
   140022f20:	mov    QWORD PTR [rsp+0x8],rbx
   140022f25:	mov    QWORD PTR [rsp+0x10],rbp
   140022f2a:	mov    QWORD PTR [rsp+0x18],rsi
   140022f2f:	push   rdi
   140022f30:	sub    rsp,0x20
   140022f34:	mov    rbp,rdx
   140022f37:	movzx  esi,r8b
   140022f3b:	xor    edx,edx
   140022f3d:	mov    rbx,rcx
   140022f40:	call   0x140023d90
   140022f45:	test   al,al
   140022f47:	je     0x140022f9a
   140022f49:	mov    rdi,QWORD PTR [rbx+0x110]
   140022f50:	movzx  r8d,sil
   140022f54:	mov    rcx,rdi
   140022f57:	mov    rdx,rbp
   140022f5a:	call   0x140023450
   140022f5f:	test   al,al
   140022f61:	je     0x140022f9a
   140022f63:	movups xmm0,XMMWORD PTR [rdi]
   140022f66:	lea    rcx,[rbx+0x108]
   140022f6d:	mov    edx,0x1
   140022f72:	movups XMMWORD PTR [rbx+0x260],xmm0
   140022f79:	movups xmm1,XMMWORD PTR [rdi+0x10]
   140022f7d:	movups XMMWORD PTR [rbx+0x270],xmm1
   140022f84:	movsd  xmm0,QWORD PTR [rdi+0x20]
   140022f89:	movsd  QWORD PTR [rbx+0x280],xmm0
   140022f91:	call   0x140023f10
   140022f96:	mov    al,0x1
   140022f98:	jmp    0x140022f9c
   140022f9a:	xor    al,al
   140022f9c:	mov    rbx,QWORD PTR [rsp+0x30]
   140022fa1:	mov    rbp,QWORD PTR [rsp+0x38]
   140022fa6:	mov    rsi,QWORD PTR [rsp+0x40]
   140022fab:	add    rsp,0x20
   140022faf:	pop    rdi
   140022fb0:	ret    
   140022fb1:	int3   
   140022fb2:	int3   
   140022fb3:	int3   
   140022fb4:	int3   
   140022fb5:	int3   
   140022fb6:	int3   
   140022fb7:	int3   
   140022fb8:	int3   
   140022fb9:	int3   
   140022fba:	int3   
   140022fbb:	int3   
   140022fbc:	int3   
   140022fbd:	int3   
   140022fbe:	int3   
   140022fbf:	int3   
   140022fc0:	mov    QWORD PTR [rsp+0x8],rbx
   140022fc5:	push   rdi
   140022fc6:	sub    rsp,0x20
   140022fca:	mov    rdi,rdx
   140022fcd:	mov    rbx,rcx
   140022fd0:	xor    edx,edx
   140022fd2:	call   0x1400236e0
   140022fd7:	test   al,al
   140022fd9:	jne    0x140022fe6
   140022fdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140022fe0:	add    rsp,0x20
   140022fe4:	pop    rdi
   140022fe5:	ret    
   140022fe6:	test   rdi,rdi
   140022fe9:	je     0x14002300a
   140022feb:	mov    rax,QWORD PTR [rbx+0x110]
   140022ff2:	movups xmm0,XMMWORD PTR [rax]
   140022ff5:	movups XMMWORD PTR [rdi],xmm0
   140022ff8:	movups xmm1,XMMWORD PTR [rax+0x10]
   140022ffc:	movups XMMWORD PTR [rdi+0x10],xmm1
   140023000:	movsd  xmm0,QWORD PTR [rax+0x20]
   140023005:	movsd  QWORD PTR [rdi+0x20],xmm0
   14002300a:	mov    rax,QWORD PTR [rbx+0x110]
   140023011:	lea    rcx,[rbx+0x108]
   140023018:	mov    edx,0x1
   14002301d:	movups xmm0,XMMWORD PTR [rax]
   140023020:	movups XMMWORD PTR [rbx+0x260],xmm0
   140023027:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002302b:	movups XMMWORD PTR [rbx+0x270],xmm1
   140023032:	movsd  xmm0,QWORD PTR [rax+0x20]
   140023037:	movsd  QWORD PTR [rbx+0x280],xmm0
   14002303f:	call   0x140023f10
   140023044:	mov    rbx,QWORD PTR [rsp+0x30]
   140023049:	mov    al,0x1
   14002304b:	add    rsp,0x20
   14002304f:	pop    rdi
   140023050:	ret    
   140023051:	int3   
   140023052:	int3   
   140023053:	int3   
   140023054:	int3   
   140023055:	int3   
   140023056:	int3   
   140023057:	int3   
   140023058:	int3   
   140023059:	int3   
   14002305a:	int3   
   14002305b:	int3   
   14002305c:	int3   
   14002305d:	int3   
   14002305e:	int3   
   14002305f:	int3   
   140023060:	mov    QWORD PTR [rsp+0x8],rbx
   140023065:	mov    QWORD PTR [rsp+0x10],rbp
   14002306a:	mov    QWORD PTR [rsp+0x18],rsi
   14002306f:	push   rdi
   140023070:	push   r12
   140023072:	push   r13
   140023074:	push   r14
   140023076:	push   r15
   140023078:	sub    rsp,0x20
   14002307c:	or     rbx,0xffffffffffffffff
   140023080:	mov    r12,r9
   140023083:	mov    rdi,rbx
   140023086:	mov    rbp,r8
   140023089:	mov    rsi,rdx
   14002308c:	mov    r13,rcx
   14002308f:	nop
   140023090:	inc    rdi
   140023093:	cmp    BYTE PTR [rdx+rdi*1],0x0
   140023097:	jne    0x140023090
   140023099:	nop    DWORD PTR [rax+0x0]
   1400230a0:	inc    rbx
   1400230a3:	cmp    BYTE PTR [rbx+r8*1],0x0
   1400230a8:	jne    0x1400230a0
   1400230aa:	xor    r8d,r8d
   1400230ad:	mov    edx,edi
   1400230af:	call   0x140021730
   1400230b4:	xor    r8d,r8d
   1400230b7:	mov    edx,ebx
   1400230b9:	mov    rcx,r13
   1400230bc:	mov    r15,rax
   1400230bf:	call   0x140021730
   1400230c4:	mov    r14,rax
   1400230c7:	test   r15,r15
   1400230ca:	je     0x1400230e3
   1400230cc:	mov    r8d,edi
   1400230cf:	mov    rdx,rsi
   1400230d2:	mov    rcx,r15
   1400230d5:	call   0x140022670
   1400230da:	test   eax,eax
   1400230dc:	jne    0x1400230e3
   1400230de:	mov    sil,0x1
   1400230e1:	jmp    0x1400230e6
   1400230e3:	xor    sil,sil
   1400230e6:	test   r14,r14
   1400230e9:	je     0x140023101
   1400230eb:	mov    r8d,ebx
   1400230ee:	mov    rdx,rbp
   1400230f1:	mov    rcx,r14
   1400230f4:	call   0x140022670
   1400230f9:	test   eax,eax
   1400230fb:	jne    0x140023101
   1400230fd:	mov    al,0x1
   1400230ff:	jmp    0x140023103
   140023101:	xor    al,al
   140023103:	test   sil,sil
   140023106:	jne    0x14002310f
   140023108:	test   al,al
   14002310a:	je     0x140023128
   14002310c:	test   sil,sil
   14002310f:	cmovne ebx,edi
   140023112:	mov    edx,0x1
   140023117:	mov    r8d,ebx
   14002311a:	mov    rcx,r13
   14002311d:	call   0x140021ee0
   140023122:	inc    DWORD PTR [r12]
   140023126:	mov    al,0x1
   140023128:	mov    rbx,QWORD PTR [rsp+0x50]
   14002312d:	mov    rbp,QWORD PTR [rsp+0x58]
   140023132:	mov    rsi,QWORD PTR [rsp+0x60]
   140023137:	add    rsp,0x20
   14002313b:	pop    r15
   14002313d:	pop    r14
   14002313f:	pop    r13
   140023141:	pop    r12
   140023143:	pop    rdi
   140023144:	ret    
   140023145:	int3   
   140023146:	int3   
   140023147:	int3   
   140023148:	int3   
   140023149:	int3   
   14002314a:	int3   
   14002314b:	int3   
   14002314c:	int3   
   14002314d:	int3   
   14002314e:	int3   
   14002314f:	int3   
   140023150:	mov    QWORD PTR [rsp+0x10],rbx
   140023155:	push   rdi
   140023156:	sub    rsp,0x20
   14002315a:	movsxd rdi,edx
   14002315d:	mov    rbx,rcx
   140023160:	cmp    DWORD PTR [rcx+0x8],edi
   140023163:	jge    0x14002321a
   140023169:	mov    eax,DWORD PTR [rcx+0xc]
   14002316c:	and    eax,0xc0000000
   140023171:	test   eax,0x7fffffff
   140023176:	jne    0x14002321a
   14002317c:	test   eax,eax
   14002317e:	mov    rax,QWORD PTR [rip+0xf20b]        # 0x140032390
   140023185:	jne    0x1400231d2
   140023187:	mov    rdx,QWORD PTR [rcx]
   14002318a:	mov    rcx,QWORD PTR [rax]
   14002318d:	test   rdx,rdx
   140023190:	je     0x1400231b2
   140023192:	mov    r9,QWORD PTR [rcx]
   140023195:	lea    r8,[rdi+rdi*4]
   140023199:	shl    r8,0x3
   14002319d:	call   QWORD PTR [r9+0x18]
   1400231a1:	mov    QWORD PTR [rbx],rax
   1400231a4:	mov    DWORD PTR [rbx+0x8],edi
   1400231a7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400231ac:	add    rsp,0x20
   1400231b0:	pop    rdi
   1400231b1:	ret    
   1400231b2:	mov    r8,QWORD PTR [rcx]
   1400231b5:	lea    rdx,[rdi+rdi*4]
   1400231b9:	shl    rdx,0x3
   1400231bd:	call   QWORD PTR [r8+0x8]
   1400231c1:	mov    QWORD PTR [rbx],rax
   1400231c4:	mov    DWORD PTR [rbx+0x8],edi
   1400231c7:	mov    rbx,QWORD PTR [rsp+0x38]
   1400231cc:	add    rsp,0x20
   1400231d0:	pop    rdi
   1400231d1:	ret    
   1400231d2:	mov    QWORD PTR [rsp+0x30],rsi
   1400231d7:	lea    rdx,[rdi+rdi*4]
   1400231db:	mov    rsi,QWORD PTR [rcx]
   1400231de:	mov    rcx,QWORD PTR [rax]
   1400231e1:	shl    rdx,0x3
   1400231e5:	mov    r8,QWORD PTR [rcx]
   1400231e8:	call   QWORD PTR [r8+0x8]
   1400231ec:	mov    QWORD PTR [rbx],rax
   1400231ef:	test   rsi,rsi
   1400231f2:	je     0x14002320b
   1400231f4:	movsxd rcx,DWORD PTR [rbx+0x8]
   1400231f8:	mov    rdx,rsi
   1400231fb:	lea    r8,[rcx+rcx*4]
   1400231ff:	mov    rcx,rax
   140023202:	shl    r8,0x3
   140023206:	call   0x140026f70
   14002320b:	and    DWORD PTR [rbx+0xc],0x3fffffff
   140023212:	mov    rsi,QWORD PTR [rsp+0x30]
   140023217:	mov    DWORD PTR [rbx+0x8],edi
   14002321a:	mov    rbx,QWORD PTR [rsp+0x38]
   14002321f:	add    rsp,0x20
   140023223:	pop    rdi
   140023224:	ret    
   140023225:	int3   
   140023226:	int3   
   140023227:	int3   
   140023228:	int3   
   140023229:	int3   
   14002322a:	int3   
   14002322b:	int3   
   14002322c:	int3   
   14002322d:	int3   
   14002322e:	int3   
   14002322f:	int3   
   140023230:	cmp    DWORD PTR [rcx+0x108],0x0
   140023237:	je     0x140023243
   140023239:	mov    rax,QWORD PTR [rcx+0x110]
   140023240:	mov    eax,DWORD PTR [rax]
   140023242:	ret    
   140023243:	mov    eax,DWORD PTR [rcx+0x288]
   140023249:	ret    
   14002324a:	int3   
   14002324b:	int3   
   14002324c:	int3   
   14002324d:	int3   
   14002324e:	int3   
   14002324f:	int3   
   140023250:	mov    eax,DWORD PTR [rcx]
   140023252:	ret    
   140023253:	int3   
   140023254:	int3   
   140023255:	int3   
   140023256:	int3   
   140023257:	int3   
   140023258:	int3   
   140023259:	int3   
   14002325a:	int3   
   14002325b:	int3   
   14002325c:	int3   
   14002325d:	int3   
   14002325e:	int3   
   14002325f:	int3   
   140023260:	rex push rdi
   140023262:	sub    rsp,0x20
   140023266:	mov    eax,edx
   140023268:	mov    rdi,rcx
   14002326b:	mov    edx,DWORD PTR [rcx+0xc]
   14002326e:	bt     edx,0x1e
   140023272:	jb     0x140023358
   140023278:	mov    ecx,DWORD PTR [rcx+0x8]
   14002327b:	and    edx,0x3fffffff
   140023281:	mov    QWORD PTR [rsp+0x30],rbx
   140023286:	mov    r9d,0x10
   14002328c:	mov    QWORD PTR [rsp+0x38],rsi
   140023291:	lea    esi,[rcx+rax*1]
   140023294:	mov    r8d,esi
   140023297:	call   0x14001aa30
   14002329c:	mov    ebx,eax
   14002329e:	cmp    eax,esi
   1400232a0:	jge    0x1400232be
   1400232a2:	test   eax,eax
   1400232a4:	jne    0x1400232b0
   1400232a6:	cmp    esi,0xffffffff
   1400232a9:	jg     0x1400232b0
   1400232ab:	or     ebx,0xffffffff
   1400232ae:	jmp    0x1400232be
   1400232b0:	lea    eax,[rbx+rsi*1]
   1400232b3:	cdq    
   1400232b4:	sub    eax,edx
   1400232b6:	sar    eax,1
   1400232b8:	mov    ebx,eax
   1400232ba:	cmp    eax,esi
   1400232bc:	jl     0x1400232b0
   1400232be:	test   DWORD PTR [rdi+0xc],0xc0000000
   1400232c5:	mov    rax,QWORD PTR [rip+0xf0c4]        # 0x140032390
   1400232cc:	mov    rcx,QWORD PTR [rax]
   1400232cf:	mov    rax,QWORD PTR [rcx]
   1400232d2:	jne    0x14002331c
   1400232d4:	mov    rdx,QWORD PTR [rdi]
   1400232d7:	test   rdx,rdx
   1400232da:	je     0x1400232fc
   1400232dc:	movsxd r8,ebx
   1400232df:	shl    r8,0x4
   1400232e3:	call   QWORD PTR [rax+0x18]
   1400232e6:	mov    rsi,QWORD PTR [rsp+0x38]
   1400232eb:	mov    DWORD PTR [rdi+0x8],ebx
   1400232ee:	mov    rbx,QWORD PTR [rsp+0x30]
   1400232f3:	mov    QWORD PTR [rdi],rax
   1400232f6:	add    rsp,0x20
   1400232fa:	pop    rdi
   1400232fb:	ret    
   1400232fc:	movsxd rdx,ebx
   1400232ff:	shl    rdx,0x4
   140023303:	call   QWORD PTR [rax+0x8]
   140023306:	mov    rsi,QWORD PTR [rsp+0x38]
   14002330b:	mov    DWORD PTR [rdi+0x8],ebx
   14002330e:	mov    rbx,QWORD PTR [rsp+0x30]
   140023313:	mov    QWORD PTR [rdi],rax
   140023316:	add    rsp,0x20
   14002331a:	pop    rdi
   14002331b:	ret    
   14002331c:	mov    rsi,QWORD PTR [rdi]
   14002331f:	movsxd rdx,ebx
   140023322:	shl    rdx,0x4
   140023326:	call   QWORD PTR [rax+0x8]
   140023329:	mov    QWORD PTR [rdi],rax
   14002332c:	test   rsi,rsi
   14002332f:	je     0x140023344
   140023331:	movsxd r8,DWORD PTR [rdi+0x8]
   140023335:	mov    rdx,rsi
   140023338:	shl    r8,0x4
   14002333c:	mov    rcx,rax
   14002333f:	call   0x140026f70
   140023344:	and    DWORD PTR [rdi+0xc],0x3fffffff
   14002334b:	mov    rsi,QWORD PTR [rsp+0x38]
   140023350:	mov    DWORD PTR [rdi+0x8],ebx
   140023353:	mov    rbx,QWORD PTR [rsp+0x30]
   140023358:	add    rsp,0x20
   14002335c:	pop    rdi
   14002335d:	ret    
   14002335e:	int3   
   14002335f:	int3   
   140023360:	mov    QWORD PTR [rsp+0x8],rbx
   140023365:	mov    rdx,QWORD PTR [rcx+0x10]
   140023369:	lea    r10,[rip+0x1309c]        # 0x14003640c
   140023370:	mov    rbx,rcx
   140023373:	test   rdx,rdx
   140023376:	je     0x1400233d4
   140023378:	mov    r11,QWORD PTR [rcx+0x18]
   14002337c:	test   r11,r11
   14002337f:	je     0x1400233d4
   140023381:	cmp    rdx,r11
   140023384:	je     0x1400233d4
   140023386:	mov    r8,rdx
   140023389:	nop    DWORD PTR [rax+0x0]
   140023390:	movzx  ecx,BYTE PTR [r10]
   140023394:	test   cl,cl
   140023396:	je     0x1400233d4
   140023398:	movzx  r9d,BYTE PTR [r8]
   14002339c:	lea    eax,[r9-0x41]
   1400233a0:	movsx  r9d,r9b
   1400233a4:	cmp    al,0x19
   1400233a6:	ja     0x1400233ac
   1400233a8:	add    r9d,0x20
   1400233ac:	lea    eax,[rcx-0x41]
   1400233af:	cmp    al,0x19
   1400233b1:	movsx  eax,cl
   1400233b4:	ja     0x1400233b9
   1400233b6:	add    eax,0x20
   1400233b9:	cmp    r9d,eax
   1400233bc:	jne    0x1400233d4
   1400233be:	inc    r10
   1400233c1:	inc    r8
   1400233c4:	cmp    r8,r11
   1400233c7:	jne    0x140023390
   1400233c9:	cmp    BYTE PTR [r10],0x0
   1400233cd:	sete   al
   1400233d0:	test   al,al
   1400233d2:	jne    0x140023434
   1400233d4:	lea    r9,[rip+0x13039]        # 0x140036414
   1400233db:	test   rdx,rdx
   1400233de:	je     0x14002343c
   1400233e0:	mov    r10,QWORD PTR [rbx+0x18]
   1400233e4:	test   r10,r10
   1400233e7:	je     0x14002343c
   1400233e9:	cmp    rdx,r10
   1400233ec:	je     0x14002343c
   1400233ee:	xchg   ax,ax
   1400233f0:	movzx  ecx,BYTE PTR [r9]
   1400233f4:	test   cl,cl
   1400233f6:	je     0x14002343c
   1400233f8:	movzx  r8d,BYTE PTR [rdx]
   1400233fc:	lea    eax,[r8-0x41]
   140023400:	movsx  r8d,r8b
   140023404:	cmp    al,0x19
   140023406:	ja     0x14002340c
   140023408:	add    r8d,0x20
   14002340c:	lea    eax,[rcx-0x41]
   14002340f:	cmp    al,0x19
   140023411:	movsx  eax,cl
   140023414:	ja     0x140023419
   140023416:	add    eax,0x20
   140023419:	cmp    r8d,eax
   14002341c:	jne    0x14002343c
   14002341e:	inc    r9
   140023421:	inc    rdx
   140023424:	cmp    rdx,r10
   140023427:	jne    0x1400233f0
   140023429:	cmp    BYTE PTR [r9],0x0
   14002342d:	sete   al
   140023430:	test   al,al
   140023432:	je     0x14002343c
   140023434:	mov    al,0x1
   140023436:	mov    rbx,QWORD PTR [rsp+0x8]
   14002343b:	ret    
   14002343c:	mov    rbx,QWORD PTR [rsp+0x8]
   140023441:	xor    al,al
   140023443:	ret    
   140023444:	int3   
   140023445:	int3   
   140023446:	int3   
   140023447:	int3   
   140023448:	int3   
   140023449:	int3   
   14002344a:	int3   
   14002344b:	int3   
   14002344c:	int3   
   14002344d:	int3   
   14002344e:	int3   
   14002344f:	int3   
   140023450:	mov    r9,QWORD PTR [rcx+0x10]
   140023454:	mov    r10,rdx
   140023457:	test   r9,r9
   14002345a:	je     0x1400234b8
   14002345c:	mov    r11,QWORD PTR [rcx+0x18]
   140023460:	test   r11,r11
   140023463:	je     0x1400234b8
   140023465:	cmp    r9,r11
   140023468:	je     0x1400234b8
   14002346a:	test   rdx,rdx
   14002346d:	je     0x1400234b8
   14002346f:	cmp    r9,r11
   140023472:	je     0x1400234b0
   140023474:	movzx  ecx,BYTE PTR [r10]
   140023478:	test   cl,cl
   14002347a:	je     0x1400234b8
   14002347c:	test   r8b,r8b
   14002347f:	je     0x140023486
   140023481:	cmp    BYTE PTR [r9],cl
   140023484:	jmp    0x1400234a6
   140023486:	movzx  edx,BYTE PTR [r9]
   14002348a:	lea    eax,[rdx-0x41]
   14002348d:	movsx  edx,dl
   140023490:	cmp    al,0x19
   140023492:	ja     0x140023497
   140023494:	add    edx,0x20
   140023497:	lea    eax,[rcx-0x41]
   14002349a:	cmp    al,0x19
   14002349c:	movsx  eax,cl
   14002349f:	ja     0x1400234a4
   1400234a1:	add    eax,0x20
   1400234a4:	cmp    edx,eax
   1400234a6:	jne    0x1400234b8
   1400234a8:	inc    r10
   1400234ab:	inc    r9
   1400234ae:	jmp    0x14002346f
   1400234b0:	cmp    BYTE PTR [r10],0x0
   1400234b4:	sete   al
   1400234b7:	ret    
   1400234b8:	xor    al,al
   1400234ba:	ret    
   1400234bb:	int3   
   1400234bc:	int3   
   1400234bd:	int3   
   1400234be:	int3   
   1400234bf:	int3   
   1400234c0:	mov    rax,QWORD PTR [rcx+0x10]
   1400234c4:	test   rax,rax
   1400234c7:	je     0x140023501
   1400234c9:	mov    rdx,QWORD PTR [rcx+0x18]
   1400234cd:	test   rdx,rdx
   1400234d0:	je     0x140023501
   1400234d2:	cmp    rax,rdx
   1400234d5:	je     0x140023501
   1400234d7:	movabs r8,0x400000004007fed
   1400234e1:	movzx  ecx,BYTE PTR [rax]
   1400234e4:	sub    cl,0x2b
   1400234e7:	cmp    cl,0x3a
   1400234ea:	ja     0x140023501
   1400234ec:	movsx  rcx,cl
   1400234f0:	bt     r8,rcx
   1400234f4:	jae    0x140023501
   1400234f6:	inc    rax
   1400234f9:	cmp    rax,rdx
   1400234fc:	jne    0x1400234e1
   1400234fe:	mov    al,0x1
   140023500:	ret    
   140023501:	xor    al,al
   140023503:	ret    
   140023504:	int3   
   140023505:	int3   
   140023506:	int3   
   140023507:	int3   
   140023508:	int3   
   140023509:	int3   
   14002350a:	int3   
   14002350b:	int3   
   14002350c:	int3   
   14002350d:	int3   
   14002350e:	int3   
   14002350f:	int3   
   140023510:	sub    rsp,0x28
   140023514:	mov    r10,QWORD PTR [rcx+0x10]
   140023518:	mov    r11,rcx
   14002351b:	test   r10,r10
   14002351e:	je     0x140023599
   140023520:	mov    r9,QWORD PTR [rcx+0x18]
   140023524:	test   r9,r9
   140023527:	je     0x140023599
   140023529:	cmp    r10,r9
   14002352c:	je     0x140023599
   14002352e:	mov    QWORD PTR [rsp+0x20],rbx
   140023533:	mov    r8,r10
   140023536:	movabs rbx,0x21ffffff81001
   140023540:	movzx  ecx,BYTE PTR [r8]
   140023544:	lea    eax,[rcx-0x2e]
   140023547:	cmp    al,0x31
   140023549:	ja     0x140023555
   14002354b:	movsx  rax,al
   14002354f:	bt     rbx,rax
   140023553:	jb     0x140023569
   140023555:	lea    eax,[rcx-0x61]
   140023558:	cmp    al,0x19
   14002355a:	jbe    0x140023569
   14002355c:	cmp    r8,r10
   14002355f:	je     0x140023581
   140023561:	sub    cl,0x30
   140023564:	cmp    cl,0x9
   140023567:	ja     0x140023581
   140023569:	inc    r8
   14002356c:	cmp    r8,r9
   14002356f:	jne    0x140023540
   140023571:	test   dl,dl
   140023573:	jne    0x14002358d
   140023575:	mov    rcx,r11
   140023578:	call   0x140023360
   14002357d:	test   al,al
   14002357f:	je     0x14002358d
   140023581:	xor    al,al
   140023583:	mov    rbx,QWORD PTR [rsp+0x20]
   140023588:	add    rsp,0x28
   14002358c:	ret    
   14002358d:	mov    al,0x1
   14002358f:	mov    rbx,QWORD PTR [rsp+0x20]
   140023594:	add    rsp,0x28
   140023598:	ret    
   140023599:	xor    al,al
   14002359b:	add    rsp,0x28
   14002359f:	ret    
   1400235a0:	mov    rax,QWORD PTR [rcx+0x10]
   1400235a4:	test   rax,rax
   1400235a7:	je     0x1400235de
   1400235a9:	mov    rdx,QWORD PTR [rcx+0x18]
   1400235ad:	test   rdx,rdx
   1400235b0:	je     0x1400235de
   1400235b2:	cmp    rax,rdx
   1400235b5:	je     0x1400235de
   1400235b7:	movabs r8,0x3ff280000000000
   1400235c1:	movzx  ecx,BYTE PTR [rax]
   1400235c4:	cmp    cl,0x39
   1400235c7:	ja     0x1400235de
   1400235c9:	movsx  rcx,cl
   1400235cd:	bt     r8,rcx
   1400235d1:	jae    0x1400235de
   1400235d3:	inc    rax
   1400235d6:	cmp    rax,rdx
   1400235d9:	jne    0x1400235c1
   1400235db:	mov    al,0x1
   1400235dd:	ret    
   1400235de:	xor    al,al
   1400235e0:	ret    
   1400235e1:	int3   
   1400235e2:	int3   
   1400235e3:	int3   
   1400235e4:	int3   
   1400235e5:	int3   
   1400235e6:	int3   
   1400235e7:	int3   
   1400235e8:	int3   
   1400235e9:	int3   
   1400235ea:	int3   
   1400235eb:	int3   
   1400235ec:	int3   
   1400235ed:	int3   
   1400235ee:	int3   
   1400235ef:	int3   
   1400235f0:	mov    rdx,rcx
   1400235f3:	mov    rcx,QWORD PTR [rcx+0x10]
   1400235f7:	test   rcx,rcx
   1400235fa:	je     0x14002360e
   1400235fc:	mov    rdx,QWORD PTR [rdx+0x18]
   140023600:	test   rdx,rdx
   140023603:	je     0x14002360e
   140023605:	cmp    rcx,rdx
   140023608:	jne    0x140024040
   14002360e:	xor    al,al
   140023610:	ret    
   140023611:	int3   
   140023612:	int3   
   140023613:	int3   
   140023614:	int3   
   140023615:	int3   
   140023616:	int3   
   140023617:	int3   
   140023618:	int3   
   140023619:	int3   
   14002361a:	int3   
   14002361b:	int3   
   14002361c:	int3   
   14002361d:	int3   
   14002361e:	int3   
   14002361f:	int3   
   140023620:	mov    rdx,QWORD PTR [rcx+0x10]
   140023624:	test   rdx,rdx
   140023627:	je     0x140023657
   140023629:	mov    rcx,QWORD PTR [rcx+0x18]
   14002362d:	test   rcx,rcx
   140023630:	je     0x140023657
   140023632:	cmp    rdx,rcx
   140023635:	je     0x140023657
   140023637:	mov    rax,rcx
   14002363a:	sub    rax,rdx
   14002363d:	cmp    rax,0x2
   140023641:	jl     0x140023657
   140023643:	cmp    BYTE PTR [rdx],0x22
   140023646:	jne    0x140023654
   140023648:	cmp    BYTE PTR [rcx-0x1],0x22
   14002364c:	jne    0x140023654
   14002364e:	mov    eax,0x1
   140023653:	ret    
   140023654:	xor    eax,eax
   140023656:	ret    
   140023657:	xor    al,al
   140023659:	ret    
   14002365a:	int3   
   14002365b:	int3   
   14002365c:	int3   
   14002365d:	int3   
   14002365e:	int3   
   14002365f:	int3   
   140023660:	mov    rdx,QWORD PTR [rcx+0x10]
   140023664:	test   rdx,rdx
   140023667:	je     0x14002367a
   140023669:	mov    rax,QWORD PTR [rcx+0x18]
   14002366d:	test   rax,rax
   140023670:	je     0x14002367a
   140023672:	cmp    rdx,rax
   140023675:	je     0x14002367a
   140023677:	mov    al,0x1
   140023679:	ret    
   14002367a:	xor    al,al
   14002367c:	ret    
   14002367d:	int3   
   14002367e:	int3   
   14002367f:	int3   
   140023680:	mov    QWORD PTR [rsp+0x8],rbx
   140023685:	mov    QWORD PTR [rsp+0x10],rbp
   14002368a:	mov    QWORD PTR [rsp+0x18],rsi
   14002368f:	push   rdi
   140023690:	sub    rsp,0x20
   140023694:	movsxd rbx,edx
   140023697:	movzx  esi,r9b
   14002369b:	mov    edx,ebx
   14002369d:	mov    rbp,r8
   1400236a0:	mov    rdi,rcx
   1400236a3:	call   0x140023d90
   1400236a8:	test   al,al
   1400236aa:	je     0x1400236c7
   1400236ac:	mov    rax,QWORD PTR [rdi+0x110]
   1400236b3:	lea    rcx,[rbx+rbx*4]
   1400236b7:	movzx  r8d,sil
   1400236bb:	mov    rdx,rbp
   1400236be:	lea    rcx,[rax+rcx*8]
   1400236c2:	call   0x140023450
   1400236c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400236cc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400236d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400236d6:	add    rsp,0x20
   1400236da:	pop    rdi
   1400236db:	ret    
   1400236dc:	int3   
   1400236dd:	int3   
   1400236de:	int3   
   1400236df:	int3   
   1400236e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400236e5:	push   rdi
   1400236e6:	sub    rsp,0x20
   1400236ea:	movsxd rbx,edx
   1400236ed:	mov    rdi,rcx
   1400236f0:	mov    edx,ebx
   1400236f2:	call   0x140023d90
   1400236f7:	test   al,al
   1400236f9:	je     0x14002376d
   1400236fb:	mov    rax,QWORD PTR [rdi+0x110]
   140023702:	lea    rcx,[rbx+rbx*4]
   140023706:	mov    r9,QWORD PTR [rax+rcx*8+0x10]
   14002370b:	test   r9,r9
   14002370e:	je     0x14002376d
   140023710:	mov    r8,QWORD PTR [rax+rcx*8+0x18]
   140023715:	test   r8,r8
   140023718:	je     0x14002376d
   14002371a:	cmp    r9,r8
   14002371d:	je     0x14002376d
   14002371f:	mov    rcx,r9
   140023722:	movabs r10,0x21ffffff81001
   14002372c:	nop    DWORD PTR [rax+0x0]
   140023730:	movzx  edx,BYTE PTR [rcx]
   140023733:	lea    eax,[rdx-0x2e]
   140023736:	cmp    al,0x31
   140023738:	ja     0x140023744
   14002373a:	movsx  rax,al
   14002373e:	bt     r10,rax
   140023742:	jb     0x140023758
   140023744:	lea    eax,[rdx-0x61]
   140023747:	cmp    al,0x19
   140023749:	jbe    0x140023758
   14002374b:	cmp    rcx,r9
   14002374e:	je     0x14002376d
   140023750:	sub    dl,0x30
   140023753:	cmp    dl,0x9
   140023756:	ja     0x14002376d
   140023758:	inc    rcx
   14002375b:	cmp    rcx,r8
   14002375e:	jne    0x140023730
   140023760:	mov    al,0x1
   140023762:	mov    rbx,QWORD PTR [rsp+0x30]
   140023767:	add    rsp,0x20
   14002376b:	pop    rdi
   14002376c:	ret    
   14002376d:	xor    al,al
   14002376f:	mov    rbx,QWORD PTR [rsp+0x30]
   140023774:	add    rsp,0x20
   140023778:	pop    rdi
   140023779:	ret    
   14002377a:	int3   
   14002377b:	int3   
   14002377c:	int3   
   14002377d:	int3   
   14002377e:	int3   
   14002377f:	int3   
   140023780:	mov    QWORD PTR [rsp+0x8],rbx
   140023785:	mov    QWORD PTR [rsp+0x10],rsi
   14002378a:	push   rdi
   14002378b:	sub    rsp,0x20
   14002378f:	movsxd rdi,edx
   140023792:	mov    rbx,r8
   140023795:	mov    edx,edi
   140023797:	mov    rsi,rcx
   14002379a:	call   0x140023d90
   14002379f:	test   al,al
   1400237a1:	jne    0x1400237b3
   1400237a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400237a8:	mov    rsi,QWORD PTR [rsp+0x38]
   1400237ad:	add    rsp,0x20
   1400237b1:	pop    rdi
   1400237b2:	ret    
   1400237b3:	test   rbx,rbx
   1400237b6:	je     0x1400237de
   1400237b8:	mov    rax,QWORD PTR [rsi+0x110]
   1400237bf:	lea    rcx,[rdi+rdi*4]
   1400237c3:	movups xmm0,XMMWORD PTR [rax+rcx*8]
   1400237c7:	movups XMMWORD PTR [rbx],xmm0
   1400237ca:	movups xmm1,XMMWORD PTR [rax+rcx*8+0x10]
   1400237cf:	movups XMMWORD PTR [rbx+0x10],xmm1
   1400237d3:	movsd  xmm0,QWORD PTR [rax+rcx*8+0x20]
   1400237d9:	movsd  QWORD PTR [rbx+0x20],xmm0
   1400237de:	mov    rbx,QWORD PTR [rsp+0x30]
   1400237e3:	mov    al,0x1
   1400237e5:	mov    rsi,QWORD PTR [rsp+0x38]
   1400237ea:	add    rsp,0x20
   1400237ee:	pop    rdi
   1400237ef:	ret    
   1400237f0:	mov    QWORD PTR [rsp+0x20],r9
   1400237f5:	mov    QWORD PTR [rsp+0x18],r8
   1400237fa:	push   rbx
   1400237fb:	push   rbp
   1400237fc:	push   rsi
   1400237fd:	push   rdi
   1400237fe:	push   r14
   140023800:	push   r15
   140023802:	sub    rsp,0x28
   140023806:	mov    rbp,r8
   140023809:	mov    r15,rdx
   14002380c:	mov    rdi,rcx
   14002380f:	xor    r14d,r14d
   140023812:	nop    DWORD PTR [rax+0x0]
   140023816:	data16 nop WORD PTR [rax+rax*1+0x0]
   140023820:	mov    rbx,QWORD PTR [rdi+0x100]
   140023827:	mov    eax,DWORD PTR [rbx+0x20]
   14002382a:	mov    ecx,DWORD PTR [rbx+0x10]
   14002382d:	sub    eax,ecx
   14002382f:	je     0x140023d7c
   140023835:	sub    ecx,DWORD PTR [rbx+0x24]
   140023838:	mov    rax,QWORD PTR [rbx]
   14002383b:	movsxd rcx,ecx
   14002383e:	cmp    BYTE PTR [rcx+rax*1],r14b
   140023842:	je     0x140023d7c
   140023848:	cmp    BYTE PTR [rdi+0x2b2],r14b
   14002384f:	je     0x1400238e1
   140023855:	mov    rcx,rbx
   140023858:	mov    esi,r14d
   14002385b:	call   0x140022e60
   140023860:	test   al,al
   140023862:	jne    0x1400238db
   140023864:	nop    DWORD PTR [rax+0x0]
   140023868:	nop    DWORD PTR [rax+rax*1+0x0]
   140023870:	xor    r8d,r8d
   140023873:	mov    rcx,rbx
   140023876:	lea    edx,[r8+0x1]
   14002387a:	call   0x140021730
   14002387f:	test   rax,rax
   140023882:	je     0x1400238db
   140023884:	movsx  ecx,BYTE PTR [rax]
   140023887:	lea    eax,[rcx-0x9]
   14002388a:	cmp    eax,0x4
   14002388d:	jbe    0x140023894
   14002388f:	cmp    ecx,0x20
   140023892:	jne    0x1400238db
   140023894:	mov    edx,0x1
   140023899:	mov    rcx,rbx
   14002389c:	call   0x140020b70
   1400238a1:	test   al,al
   1400238a3:	je     0x1400238c0
   1400238a5:	mov    edx,DWORD PTR [rbx+0x10]
   1400238a8:	mov    eax,edx
   1400238aa:	sub    eax,DWORD PTR [rbx+0x24]
   1400238ad:	movsxd rcx,eax
   1400238b0:	mov    rax,QWORD PTR [rbx]
   1400238b3:	movzx  r8d,BYTE PTR [rcx+rax*1]
   1400238b8:	lea    eax,[rdx+0x1]
   1400238bb:	mov    DWORD PTR [rbx+0x10],eax
   1400238be:	jmp    0x1400238c3
   1400238c0:	xor    r8b,r8b
   1400238c3:	lea    eax,[rsi+0x1]
   1400238c6:	cmp    r8b,0xa
   1400238ca:	mov    rcx,rbx
   1400238cd:	cmovne eax,esi
   1400238d0:	mov    esi,eax
   1400238d2:	call   0x140022e60
   1400238d7:	test   al,al
   1400238d9:	je     0x140023870
   1400238db:	add    DWORD PTR [rdi+0x288],esi
   1400238e1:	mov    DWORD PTR [rsp+0x60],r14d
   1400238e6:	cmp    BYTE PTR [rdi+0x2b1],r14b
   1400238ed:	je     0x140023937
   1400238ef:	mov    rcx,QWORD PTR [rdi+0x100]
   1400238f6:	lea    rdx,[rsp+0x60]
   1400238fb:	call   0x140020d20
   140023900:	test   al,al
   140023902:	je     0x140023913
   140023904:	mov    eax,DWORD PTR [rsp+0x60]
   140023908:	add    DWORD PTR [rdi+0x288],eax
   14002390e:	jmp    0x140023820
   140023913:	cmp    BYTE PTR [rdi+0x2b1],r14b
   14002391a:	je     0x140023937
   14002391c:	mov    rcx,QWORD PTR [rdi+0x100]
   140023923:	call   0x140020e70
   140023928:	test   al,al
   14002392a:	je     0x140023937
   14002392c:	inc    DWORD PTR [rdi+0x288]
   140023932:	jmp    0x140023820
   140023937:	mov    rax,QWORD PTR [rsp+0x80]
   14002393f:	lea    r14,[rdi+0x288]
   140023946:	mov    ecx,DWORD PTR [r14]
   140023949:	mov    DWORD PTR [rax],ecx
   14002394b:	mov    rcx,QWORD PTR [rdi+0x100]
   140023952:	mov    eax,DWORD PTR [rcx+0x20]
   140023955:	mov    edx,DWORD PTR [rcx+0x10]
   140023958:	sub    eax,edx
   14002395a:	je     0x140023d7c
   140023960:	sub    edx,DWORD PTR [rcx+0x24]
   140023963:	mov    rax,QWORD PTR [rcx]
   140023966:	movsxd rdx,edx
   140023969:	cmp    BYTE PTR [rdx+rax*1],0x0
   14002396d:	je     0x140023d7c
   140023973:	xor    r8d,r8d
   140023976:	lea    edx,[r8+0x1]
   14002397a:	call   0x140021730
   14002397f:	mov    QWORD PTR [r15],rax
   140023982:	test   rax,rax
   140023985:	je     0x140023d7c
   14002398b:	mov    rbx,QWORD PTR [rdi+0x100]
   140023992:	mov    edx,0x1
   140023997:	mov    rcx,rbx
   14002399a:	mov    QWORD PTR [rsp+0x20],r13
   14002399f:	call   0x140020b70
   1400239a4:	test   al,al
   1400239a6:	je     0x140023d75
   1400239ac:	mov    edx,DWORD PTR [rbx+0x10]
   1400239af:	mov    eax,edx
   1400239b1:	sub    eax,DWORD PTR [rbx+0x24]
   1400239b4:	movsxd rcx,eax
   1400239b7:	mov    rax,QWORD PTR [rbx]
   1400239ba:	movzx  r13d,BYTE PTR [rcx+rax*1]
   1400239bf:	lea    eax,[rdx+0x1]
   1400239c2:	mov    DWORD PTR [rbx+0x10],eax
   1400239c5:	test   r13b,r13b
   1400239c8:	je     0x140023d75
   1400239ce:	cmp    BYTE PTR [rdi+0x2b0],0x0
   1400239d5:	je     0x140023c64
   1400239db:	cmp    r13b,0x22
   1400239df:	je     0x140023a58
   1400239e1:	cmp    r13b,0x27
   1400239e5:	jne    0x140023c64
   1400239eb:	xor    al,al
   1400239ed:	mov    QWORD PTR [rsp+0x68],r12
   1400239f2:	xor    r12b,r12b
   1400239f5:	mov    BYTE PTR [rsp+0x60],al
   1400239f9:	xor    bpl,bpl
   1400239fc:	xor    r15b,r15b
   1400239ff:	nop
   140023a00:	mov    rsi,QWORD PTR [rdi+0x100]
   140023a07:	mov    ecx,DWORD PTR [rsi+0x10]
   140023a0a:	cmp    DWORD PTR [rsi+0x20],ecx
   140023a0d:	je     0x140023c56
   140023a13:	sub    ecx,DWORD PTR [rsi+0x24]
   140023a16:	mov    rax,QWORD PTR [rsi]
   140023a19:	movsxd rcx,ecx
   140023a1c:	cmp    BYTE PTR [rcx+rax*1],0x0
   140023a20:	je     0x140023c56
   140023a26:	mov    edx,0x1
   140023a2b:	mov    rcx,rsi
   140023a2e:	call   0x140020b70
   140023a33:	test   al,al
   140023a35:	je     0x140023b37
   140023a3b:	mov    edx,DWORD PTR [rsi+0x10]
   140023a3e:	mov    eax,edx
   140023a40:	sub    eax,DWORD PTR [rsi+0x24]
   140023a43:	movsxd rcx,eax
   140023a46:	mov    rax,QWORD PTR [rsi]
   140023a49:	movzx  ebx,BYTE PTR [rcx+rax*1]
   140023a4d:	lea    eax,[rdx+0x1]
   140023a50:	mov    DWORD PTR [rsi+0x10],eax
   140023a53:	jmp    0x140023b39
   140023a58:	mov    rcx,QWORD PTR [rdi+0x100]
   140023a5f:	lea    r8,[rip+0x146a2]        # 0x140038108
   140023a66:	mov    r9,r14
   140023a69:	lea    rdx,[rip+0x146a0]        # 0x140038110
   140023a70:	call   0x140023060
   140023a75:	test   al,al
   140023a77:	je     0x1400239eb
   140023a7d:	mov    rcx,QWORD PTR [rdi+0x100]
   140023a84:	lea    r8,[rip+0x14689]        # 0x140038114
   140023a8b:	mov    r9,r14
   140023a8e:	lea    rdx,[rip+0x12caf]        # 0x140036744
   140023a95:	call   0x140023060
   140023a9a:	test   al,al
   140023a9c:	je     0x140023ac0
   140023a9e:	mov    rdx,QWORD PTR [rdi+0x100]
   140023aa5:	mov    eax,DWORD PTR [rdx+0x10]
   140023aa8:	sub    eax,DWORD PTR [rdx+0x24]
   140023aab:	movsxd rcx,eax
   140023aae:	mov    rax,QWORD PTR [rdx]
   140023ab1:	dec    rcx
   140023ab4:	add    rcx,rax
   140023ab7:	mov    QWORD PTR [rbp+0x0],rcx
   140023abb:	jmp    0x140023c42
   140023ac0:	xor    r8b,r8b
   140023ac3:	mov    rcx,QWORD PTR [rdi+0x100]
   140023aca:	mov    edx,DWORD PTR [rcx+0x10]
   140023acd:	cmp    DWORD PTR [rcx+0x20],edx
   140023ad0:	je     0x1400239eb
   140023ad6:	sub    edx,DWORD PTR [rcx+0x24]
   140023ad9:	mov    rax,QWORD PTR [rcx]
   140023adc:	movsxd rdx,edx
   140023adf:	cmp    BYTE PTR [rdx+rax*1],0x0
   140023ae3:	je     0x1400239eb
   140023ae9:	test   r8b,r8b
   140023aec:	jne    0x140023b0c
   140023aee:	mov    r9,r14
   140023af1:	lea    r8,[rip+0x14624]        # 0x14003811c
   140023af8:	lea    rdx,[rip+0x12c59]        # 0x140036758
   140023aff:	call   0x140023060
   140023b04:	test   al,al
   140023b06:	jne    0x140023d59
   140023b0c:	mov    rcx,QWORD PTR [rdi+0x100]
   140023b13:	call   0x14001e1c0
   140023b18:	cmp    al,0xa
   140023b1a:	jne    0x140023b27
   140023b1c:	inc    DWORD PTR [r14]
   140023b1f:	cmp    al,0x5c
   140023b21:	sete   r8b
   140023b25:	jmp    0x140023ac3
   140023b27:	test   al,al
   140023b29:	je     0x140023d75
   140023b2f:	cmp    al,0x5c
   140023b31:	sete   r8b
   140023b35:	jmp    0x140023ac3
   140023b37:	xor    bl,bl
   140023b39:	cmp    bpl,0x5c
   140023b3d:	jne    0x140023b80
   140023b3f:	test   r12b,r12b
   140023b42:	jne    0x140023b80
   140023b44:	mov    r12b,0x1
   140023b47:	xor    al,al
   140023b49:	test   bl,bl
   140023b4b:	je     0x140023c22
   140023b51:	test   al,al
   140023b53:	jne    0x140023c22
   140023b59:	cmp    bpl,0x5c
   140023b5d:	jne    0x140023b8c
   140023b5f:	cmp    bl,0xd
   140023b62:	jne    0x140023b8c
   140023b64:	mov    dl,0x1
   140023b66:	xor    cl,cl
   140023b68:	cmp    r15b,0x5c
   140023b6c:	jne    0x140023b9d
   140023b6e:	cmp    bpl,0xd
   140023b72:	jne    0x140023b9d
   140023b74:	cmp    bl,0xa
   140023b77:	jne    0x140023b9d
   140023b79:	mov    al,0x1
   140023b7b:	movzx  esi,al
   140023b7e:	jmp    0x140023bbc
   140023b80:	xor    r12b,r12b
   140023b83:	cmp    bl,r13b
   140023b86:	jne    0x140023b47
   140023b88:	mov    al,0x1
   140023b8a:	jmp    0x140023b49
   140023b8c:	xor    dl,dl
   140023b8e:	cmp    bpl,0x5c
   140023b92:	jne    0x140023b66
   140023b94:	cmp    bl,0xa
   140023b97:	jne    0x140023b66
   140023b99:	mov    cl,0x1
   140023b9b:	jmp    0x140023b68
   140023b9d:	xor    al,al
   140023b9f:	cmp    bpl,0xd
   140023ba3:	jne    0x140023baf
   140023ba5:	cmp    bl,0xa
   140023ba8:	jne    0x140023baf
   140023baa:	mov    sil,0x1
   140023bad:	jmp    0x140023bbc
   140023baf:	xor    sil,sil
   140023bb2:	cmp    bl,0xd
   140023bb5:	je     0x140023bbc
   140023bb7:	cmp    bl,0xa
   140023bba:	jne    0x140023c16
   140023bbc:	test   dl,dl
   140023bbe:	jne    0x140023c01
   140023bc0:	test   cl,cl
   140023bc2:	jne    0x140023c01
   140023bc4:	test   al,al
   140023bc6:	jne    0x140023c01
   140023bc8:	cmp    BYTE PTR [rsp+0x60],al
   140023bcc:	jne    0x140023c09
   140023bce:	lea    rcx,[rdi+0x298]
   140023bd5:	call   0x140022d60
   140023bda:	movsxd rcx,eax
   140023bdd:	lea    rdx,[rip+0x14544]        # 0x140038128
   140023be4:	mov    eax,DWORD PTR [r14]
   140023be7:	shl    rcx,0x4
   140023beb:	add    rcx,QWORD PTR [rdi+0x2a0]
   140023bf2:	mov    DWORD PTR [rcx+0x8],eax
   140023bf5:	call   0x14001aae0
   140023bfa:	mov    BYTE PTR [rsp+0x60],0x1
   140023bff:	jmp    0x140023c09
   140023c01:	mov    rax,QWORD PTR [rsp+0x78]
   140023c06:	mov    BYTE PTR [rax],0x1
   140023c09:	cmp    bl,0xd
   140023c0c:	jne    0x140023c13
   140023c0e:	test   sil,sil
   140023c11:	je     0x140023c16
   140023c13:	inc    DWORD PTR [r14]
   140023c16:	movzx  r15d,bpl
   140023c1a:	movzx  ebp,bl
   140023c1d:	jmp    0x140023a00
   140023c22:	mov    rdx,QWORD PTR [rdi+0x100]
   140023c29:	mov    eax,DWORD PTR [rdx+0x10]
   140023c2c:	sub    eax,DWORD PTR [rdx+0x24]
   140023c2f:	movsxd rcx,eax
   140023c32:	add    rcx,QWORD PTR [rdx]
   140023c35:	mov    rax,QWORD PTR [rsp+0x70]
   140023c3a:	mov    r12,QWORD PTR [rsp+0x68]
   140023c3f:	mov    QWORD PTR [rax],rcx
   140023c42:	mov    al,0x1
   140023c44:	mov    r13,QWORD PTR [rsp+0x20]
   140023c49:	add    rsp,0x28
   140023c4d:	pop    r15
   140023c4f:	pop    r14
   140023c51:	pop    rdi
   140023c52:	pop    rsi
   140023c53:	pop    rbp
   140023c54:	pop    rbx
   140023c55:	ret    
   140023c56:	mov    eax,DWORD PTR [rsi+0x10]
   140023c59:	sub    eax,DWORD PTR [rsi+0x24]
   140023c5c:	movsxd rcx,eax
   140023c5f:	add    rcx,QWORD PTR [rsi]
   140023c62:	jmp    0x140023c35
   140023c64:	cmp    r13b,0x22
   140023c68:	je     0x140023c74
   140023c6a:	cmp    r13b,0x27
   140023c6e:	je     0x140023c74
   140023c70:	xor    cl,cl
   140023c72:	jmp    0x140023c76
   140023c74:	mov    cl,0x1
   140023c76:	movzx  eax,r13b
   140023c7a:	cmp    BYTE PTR [rax+rdi*1],0x0
   140023c7e:	jne    0x140023d59
   140023c84:	test   cl,cl
   140023c86:	jne    0x140023d59
   140023c8c:	cmp    r13b,0x20
   140023c90:	jg     0x140023c9e
   140023c92:	cmp    BYTE PTR [rdi+0x2b3],cl
   140023c98:	jne    0x140023d59
   140023c9e:	xor    sil,sil
   140023ca1:	mov    rbx,QWORD PTR [rdi+0x100]
   140023ca8:	mov    edx,0x1
   140023cad:	mov    rcx,rbx
   140023cb0:	call   0x140020b70
   140023cb5:	test   al,al
   140023cb7:	je     0x140023cd4
   140023cb9:	mov    edx,DWORD PTR [rbx+0x10]
   140023cbc:	mov    eax,edx
   140023cbe:	sub    eax,DWORD PTR [rbx+0x24]
   140023cc1:	movsxd rcx,eax
   140023cc4:	mov    rax,QWORD PTR [rbx]
   140023cc7:	movzx  r8d,BYTE PTR [rcx+rax*1]
   140023ccc:	lea    eax,[rdx+0x1]
   140023ccf:	mov    DWORD PTR [rbx+0x10],eax
   140023cd2:	jmp    0x140023cd7
   140023cd4:	xor    r8b,r8b
   140023cd7:	cmp    sil,0x5c
   140023cdb:	je     0x140023ced
   140023cdd:	cmp    r8b,0x22
   140023ce1:	je     0x140023ce9
   140023ce3:	cmp    r8b,0x27
   140023ce7:	jne    0x140023ced
   140023ce9:	mov    cl,0x1
   140023ceb:	jmp    0x140023cef
   140023ced:	xor    cl,cl
   140023cef:	movzx  eax,r8b
   140023cf3:	cmp    BYTE PTR [rax+rdi*1],0x0
   140023cf7:	jne    0x140023d45
   140023cf9:	test   cl,cl
   140023cfb:	jne    0x140023d45
   140023cfd:	cmp    r8b,0x20
   140023d01:	jg     0x140023d0b
   140023d03:	cmp    BYTE PTR [rdi+0x2b3],cl
   140023d09:	jne    0x140023d45
   140023d0b:	mov    rdx,QWORD PTR [rdi+0x100]
   140023d12:	mov    ecx,DWORD PTR [rdx+0x10]
   140023d15:	cmp    DWORD PTR [rdx+0x20],ecx
   140023d18:	je     0x140023d32
   140023d1a:	sub    ecx,DWORD PTR [rdx+0x24]
   140023d1d:	mov    rax,QWORD PTR [rdx]
   140023d20:	movsxd rcx,ecx
   140023d23:	cmp    BYTE PTR [rcx+rax*1],0x0
   140023d27:	je     0x140023d32
   140023d29:	movzx  esi,r8b
   140023d2d:	jmp    0x140023ca1
   140023d32:	movsxd rcx,DWORD PTR [rdx+0x10]
   140023d36:	mov    rax,rdx
   140023d39:	add    rcx,QWORD PTR [rdx]
   140023d3c:	mov    QWORD PTR [rbp+0x0],rcx
   140023d40:	jmp    0x140023c42
   140023d45:	mov    rcx,QWORD PTR [rdi+0x100]
   140023d4c:	or     r8d,0xffffffff
   140023d50:	lea    edx,[r8+0x2]
   140023d54:	call   0x140021ee0
   140023d59:	mov    rdx,QWORD PTR [rdi+0x100]
   140023d60:	mov    eax,DWORD PTR [rdx+0x10]
   140023d63:	sub    eax,DWORD PTR [rdx+0x24]
   140023d66:	movsxd rcx,eax
   140023d69:	add    rcx,QWORD PTR [rdx]
   140023d6c:	mov    QWORD PTR [rbp+0x0],rcx
   140023d70:	jmp    0x140023c42
   140023d75:	xor    al,al
   140023d77:	jmp    0x140023c44
   140023d7c:	xor    al,al
   140023d7e:	add    rsp,0x28
   140023d82:	pop    r15
   140023d84:	pop    r14
   140023d86:	pop    rdi
   140023d87:	pop    rsi
   140023d88:	pop    rbp
   140023d89:	pop    rbx
   140023d8a:	ret    
   140023d8b:	int3   
   140023d8c:	int3   
   140023d8d:	int3   
   140023d8e:	int3   
   140023d8f:	int3   
   140023d90:	rex push rbx
   140023d92:	push   rbp
   140023d93:	push   rsi
   140023d94:	push   rdi
   140023d95:	push   r12
   140023d97:	push   r14
   140023d99:	push   r15
   140023d9b:	sub    rsp,0x30
   140023d9f:	mov    r14d,edx
   140023da2:	mov    rbx,rcx
   140023da5:	inc    edx
   140023da7:	add    rcx,0x110
   140023dae:	call   0x140023150
   140023db3:	sub    r14d,DWORD PTR [rbx+0x108]
   140023dba:	xor    r12d,r12d
   140023dbd:	inc    r14d
   140023dc0:	mov    ebp,r12d
   140023dc3:	test   r14d,r14d
   140023dc6:	jle    0x140023edf
   140023dcc:	mov    ecx,DWORD PTR [rip+0x24492]        # 0x140048264
   140023dd2:	cmp    ecx,DWORD PTR [rip+0x223f8]        # 0x1400461d0
   140023dd8:	mov    QWORD PTR [rsp+0x80],r12
   140023de0:	mov    QWORD PTR [rsp+0x88],r12
   140023de8:	jne    0x140023df5
   140023dea:	call   QWORD PTR [rip+0xe7c0]        # 0x1400325b0
   140023df0:	test   eax,eax
   140023df2:	je     0x140023df5
   140023df4:	int3   
   140023df5:	lea    rax,[rsp+0x70]
   140023dfa:	mov    rcx,rbx
   140023dfd:	lea    r9,[rsp+0x78]
   140023e02:	mov    QWORD PTR [rsp+0x20],rax
   140023e07:	lea    r8,[rsp+0x88]
   140023e0f:	lea    rdx,[rsp+0x80]
   140023e17:	call   0x1400237f0
   140023e1c:	test   al,al
   140023e1e:	je     0x140023ef0
   140023e24:	movsxd rdi,DWORD PTR [rbx+0x108]
   140023e2b:	cmp    edi,DWORD PTR [rbx+0x118]
   140023e31:	jne    0x140023e44
   140023e33:	lea    rcx,[rbx+0x110]
   140023e3a:	mov    edx,0x1
   140023e3f:	call   0x140009810
   140023e44:	mov    rax,QWORD PTR [rbx+0x110]
   140023e4b:	lea    rcx,[rdi+rdi*4]
   140023e4f:	inc    DWORD PTR [rbx+0x108]
   140023e55:	lea    rax,[rax+rcx*8]
   140023e59:	test   rax,rax
   140023e5c:	je     0x140023e74
   140023e5e:	mov    QWORD PTR [rax+0x8],r12
   140023e62:	mov    QWORD PTR [rax+0x10],r12
   140023e66:	mov    QWORD PTR [rax+0x18],r12
   140023e6a:	mov    DWORD PTR [rax+0x20],0xffffffff
   140023e71:	mov    DWORD PTR [rax],r12d
   140023e74:	mov    rax,QWORD PTR [rbx+0x110]
   140023e7b:	mov    rdx,QWORD PTR [rax+rcx*8+0x8]
   140023e80:	lea    rdi,[rax+rcx*8]
   140023e84:	mov    ecx,DWORD PTR [rip+0x243da]        # 0x140048264
   140023e8a:	mov    esi,ecx
   140023e8c:	test   rdx,rdx
   140023e8f:	je     0x140023ea7
   140023e91:	mov    rax,QWORD PTR [rip+0xe4f8]        # 0x140032390
   140023e98:	mov    rcx,QWORD PTR [rax]
   140023e9b:	mov    rax,QWORD PTR [rcx]
   140023e9e:	call   QWORD PTR [rax+0x28]
   140023ea1:	mov    ecx,DWORD PTR [rip+0x243bd]        # 0x140048264
   140023ea7:	mov    eax,DWORD PTR [rsp+0x70]
   140023eab:	inc    ecx
   140023ead:	mov    DWORD PTR [rdi],eax
   140023eaf:	inc    ebp
   140023eb1:	mov    rax,QWORD PTR [rsp+0x80]
   140023eb9:	mov    QWORD PTR [rdi+0x10],rax
   140023ebd:	mov    rax,QWORD PTR [rsp+0x88]
   140023ec5:	mov    QWORD PTR [rdi+0x18],rax
   140023ec9:	mov    QWORD PTR [rdi+0x8],r12
   140023ecd:	mov    DWORD PTR [rdi+0x20],esi
   140023ed0:	mov    DWORD PTR [rip+0x2438e],ecx        # 0x140048264
   140023ed6:	cmp    ebp,r14d
   140023ed9:	jl     0x140023dd2
   140023edf:	mov    al,0x1
   140023ee1:	add    rsp,0x30
   140023ee5:	pop    r15
   140023ee7:	pop    r14
   140023ee9:	pop    r12
   140023eeb:	pop    rdi
   140023eec:	pop    rsi
   140023eed:	pop    rbp
   140023eee:	pop    rbx
   140023eef:	ret    
   140023ef0:	xor    al,al
   140023ef2:	add    rsp,0x30
   140023ef6:	pop    r15
   140023ef8:	pop    r14
   140023efa:	pop    r12
   140023efc:	pop    rdi
   140023efd:	pop    rsi
   140023efe:	pop    rbp
   140023eff:	pop    rbx
   140023f00:	ret    
   140023f01:	int3   
   140023f02:	int3   
   140023f03:	int3   
   140023f04:	int3   
   140023f05:	int3   
   140023f06:	int3   
   140023f07:	int3   
   140023f08:	int3   
   140023f09:	int3   
   140023f0a:	int3   
   140023f0b:	int3   
   140023f0c:	int3   
   140023f0d:	int3   
   140023f0e:	int3   
   140023f0f:	int3   
   140023f10:	mov    QWORD PTR [rsp+0x18],rbp
   140023f15:	push   rsi
   140023f16:	sub    rsp,0x20
   140023f1a:	movsxd rbp,edx
   140023f1d:	mov    rsi,rcx
   140023f20:	mov    QWORD PTR [rsp+0x30],rbx
   140023f25:	lea    eax,[rbp-0x1]
   140023f28:	movsxd rbx,eax
   140023f2b:	test   eax,eax
   140023f2d:	js     0x140023f6d
   140023f2f:	mov    QWORD PTR [rsp+0x38],rdi
   140023f34:	lea    rdi,[rbx+rbx*4]
   140023f38:	shl    rdi,0x3
   140023f3c:	nop    DWORD PTR [rax+0x0]
   140023f40:	mov    rax,QWORD PTR [rsi+0x8]
   140023f44:	mov    rdx,QWORD PTR [rdi+rax*1+0x8]
   140023f49:	test   rdx,rdx
   140023f4c:	je     0x140023f5e
   140023f4e:	mov    rax,QWORD PTR [rip+0xe43b]        # 0x140032390
   140023f55:	mov    rcx,QWORD PTR [rax]
   140023f58:	mov    rax,QWORD PTR [rcx]
   140023f5b:	call   QWORD PTR [rax+0x28]
   140023f5e:	sub    rdi,0x28
   140023f62:	sub    rbx,0x1
   140023f66:	jns    0x140023f40
   140023f68:	mov    rdi,QWORD PTR [rsp+0x38]
   140023f6d:	mov    eax,DWORD PTR [rsi]
   140023f6f:	mov    rbx,QWORD PTR [rsp+0x30]
   140023f74:	sub    eax,ebp
   140023f76:	test   eax,eax
   140023f78:	jle    0x140023fa0
   140023f7a:	test   ebp,ebp
   140023f7c:	jle    0x140023fa0
   140023f7e:	mov    rcx,QWORD PTR [rsi+0x8]
   140023f82:	lea    rdx,[rbp*4+0x0]
   140023f8a:	cdqe   
   140023f8c:	add    rdx,rbp
   140023f8f:	lea    r8,[rax+rax*4]
   140023f93:	shl    r8,0x3
   140023f97:	lea    rdx,[rcx+rdx*8]
   140023f9b:	call   0x140026f70
   140023fa0:	sub    DWORD PTR [rsi],ebp
   140023fa2:	mov    rbp,QWORD PTR [rsp+0x40]
   140023fa7:	add    rsp,0x20
   140023fab:	pop    rsi
   140023fac:	ret    
   140023fad:	int3   
   140023fae:	int3   
   140023faf:	int3   
   140023fb0:	rex push rbx
   140023fb2:	sub    rsp,0x20
   140023fb6:	mov    rbx,rcx
   140023fb9:	xor    r8d,r8d
   140023fbc:	mov    rcx,QWORD PTR [rcx+0x100]
   140023fc3:	xor    edx,edx
   140023fc5:	call   0x140021ee0
   140023fca:	lea    rcx,[rbx+0x108]
   140023fd1:	call   0x140015770
   140023fd6:	mov    rdx,QWORD PTR [rbx+0x268]
   140023fdd:	test   rdx,rdx
   140023fe0:	je     0x140023ff2
   140023fe2:	mov    rax,QWORD PTR [rip+0xe3a7]        # 0x140032390
   140023fe9:	mov    rcx,QWORD PTR [rax]
   140023fec:	mov    rax,QWORD PTR [rcx]
   140023fef:	call   QWORD PTR [rax+0x28]
   140023ff2:	xor    eax,eax
   140023ff4:	mov    DWORD PTR [rbx+0x280],0xffffffff
   140023ffe:	mov    QWORD PTR [rbx+0x268],rax
   140024005:	mov    QWORD PTR [rbx+0x270],rax
   14002400c:	mov    QWORD PTR [rbx+0x278],rax
   140024013:	mov    DWORD PTR [rbx+0x260],eax
   140024019:	mov    DWORD PTR [rbx+0x288],0x1
   140024023:	add    rsp,0x20
   140024027:	pop    rbx
   140024028:	ret    
   140024029:	int3   
   14002402a:	int3   
   14002402b:	int3   
   14002402c:	int3   
   14002402d:	int3   
   14002402e:	int3   
   14002402f:	int3   
   140024030:	jmp    0x1400245d0
   140024035:	int3   
   140024036:	int3   
   140024037:	int3   
   140024038:	int3   
   140024039:	int3   
   14002403a:	int3   
   14002403b:	int3   
   14002403c:	int3   
   14002403d:	int3   
   14002403e:	int3   
   14002403f:	int3   
   140024040:	rex push rbx
   140024042:	sub    rsp,0x20
   140024046:	mov    rbx,rdx
   140024049:	test   rcx,rcx
   14002404c:	je     0x1400240a0
   14002404e:	test   rdx,rdx
   140024051:	je     0x1400240a0
   140024053:	mov    rax,rdx
   140024056:	sub    rax,rcx
   140024059:	cmp    rax,0x6
   14002405d:	jl     0x1400240a0
   14002405f:	mov    r8d,0x3
   140024065:	lea    rdx,[rip+0x126e8]        # 0x140036754
   14002406c:	call   0x140022670
   140024071:	test   eax,eax
   140024073:	jne    0x140024098
   140024075:	lea    rcx,[rbx-0x3]
   140024079:	lea    r8d,[rax+0x3]
   14002407d:	lea    rdx,[rip+0x126d0]        # 0x140036754
   140024084:	call   0x140022670
   140024089:	test   eax,eax
   14002408b:	jne    0x140024098
   14002408d:	mov    eax,0x1
   140024092:	add    rsp,0x20
   140024096:	pop    rbx
   140024097:	ret    
   140024098:	xor    eax,eax
   14002409a:	add    rsp,0x20
   14002409e:	pop    rbx
   14002409f:	ret    
   1400240a0:	xor    al,al
   1400240a2:	add    rsp,0x20
   1400240a6:	pop    rbx
   1400240a7:	ret    
   1400240a8:	int3   
   1400240a9:	int3   
   1400240aa:	int3   
   1400240ab:	int3   
   1400240ac:	int3   
   1400240ad:	int3   
   1400240ae:	int3   
   1400240af:	int3   
   1400240b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400240b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400240ba:	push   rdi
   1400240bb:	sub    rsp,0x20
   1400240bf:	mov    rdi,rdx
   1400240c2:	mov    rsi,rcx
   1400240c5:	mov    rcx,rdi
   1400240c8:	lea    rdx,[rip+0x13b69]        # 0x140037c38
   1400240cf:	call   0x14001aae0
   1400240d4:	xor    bl,bl
   1400240d6:	cmp    BYTE PTR [rsi],bl
   1400240d8:	je     0x14002413e
   1400240da:	nop    WORD PTR [rax+rax*1+0x0]
   1400240e0:	movsx  edx,BYTE PTR [rsi]
   1400240e3:	mov    eax,edx
   1400240e5:	sub    eax,0x9
   1400240e8:	je     0x140024125
   1400240ea:	sub    eax,0x1
   1400240ed:	je     0x14002411c
   1400240ef:	sub    eax,0x16
   1400240f2:	je     0x140024110
   1400240f4:	sub    eax,0x2
   1400240f7:	je     0x140024107
   1400240f9:	cmp    eax,0x5
   1400240fc:	jne    0x140024112
   1400240fe:	lea    rdx,[rip+0x13ff3]        # 0x1400380f8
   140024105:	jmp    0x14002412c
   140024107:	lea    rdx,[rip+0x13fee]        # 0x1400380fc
   14002410e:	jmp    0x14002412c
   140024110:	mov    bl,0x1
   140024112:	mov    rcx,rdi
   140024115:	call   0x14001ab70
   14002411a:	jmp    0x140024136
   14002411c:	lea    rdx,[rip+0x13fcd]        # 0x1400380f0
   140024123:	jmp    0x14002412c
   140024125:	lea    rdx,[rip+0x13fc8]        # 0x1400380f4
   14002412c:	mov    rcx,rdi
   14002412f:	call   0x14001ac10
   140024134:	mov    bl,0x1
   140024136:	inc    rsi
   140024139:	cmp    BYTE PTR [rsi],0x0
   14002413c:	jne    0x1400240e0
   14002413e:	lea    rdx,[rip+0x13af3]        # 0x140037c38
   140024145:	mov    rcx,rdi
   140024148:	call   0x14001ac10
   14002414d:	mov    rsi,QWORD PTR [rsp+0x38]
   140024152:	movzx  eax,bl
   140024155:	mov    rbx,QWORD PTR [rsp+0x30]
   14002415a:	add    rsp,0x20
   14002415e:	pop    rdi
   14002415f:	ret    
   140024160:	mov    QWORD PTR [rsp+0x18],rbx
   140024165:	push   rbp
   140024166:	push   rsi
   140024167:	push   rdi
   140024168:	push   r14
   14002416a:	push   r15
   14002416c:	mov    rbp,rsp
   14002416f:	sub    rsp,0x30
   140024173:	mov    rdi,rdx
   140024176:	mov    r14,rcx
   140024179:	lea    rdx,[rip+0xe620]        # 0x1400327a0
   140024180:	mov    rcx,r8
   140024183:	mov    r15,r8
   140024186:	call   0x14001aae0
   14002418b:	test   r14,r14
   14002418e:	je     0x14002438a
   140024194:	test   rdi,rdi
   140024197:	je     0x14002438a
   14002419d:	mov    rax,rdi
   1400241a0:	sub    rax,r14
   1400241a3:	cmp    rax,0x6
   1400241a7:	jl     0x14002438a
   1400241ad:	mov    r8d,0x3
   1400241b3:	lea    rdx,[rip+0x1259a]        # 0x140036754
   1400241ba:	mov    rcx,r14
   1400241bd:	call   0x140022670
   1400241c2:	test   eax,eax
   1400241c4:	jne    0x14002438a
   1400241ca:	lea    rcx,[rdi-0x3]
   1400241ce:	lea    r8d,[rax+0x3]
   1400241d2:	lea    rdx,[rip+0x1257b]        # 0x140036754
   1400241d9:	call   0x140022670
   1400241de:	test   eax,eax
   1400241e0:	jne    0x14002438a
   1400241e6:	sub    edi,r14d
   1400241e9:	mov    QWORD PTR [rsp+0x68],r12
   1400241ee:	xor    r12d,r12d
   1400241f1:	lea    rdx,[r14+0x3]
   1400241f5:	lea    rcx,[rbp+0x30]
   1400241f9:	mov    QWORD PTR [rbp+0x30],r12
   1400241fd:	lea    r8d,[rdi-0x6]
   140024201:	call   0x14001b3d0
   140024206:	lea    r9,[rip+0x1012b]        # 0x140034338
   14002420d:	mov    BYTE PTR [rsp+0x20],r12b
   140024212:	lea    r8,[rip+0x13dcb]        # 0x140037fe4
   140024219:	lea    rdx,[rbp+0x48]
   14002421d:	lea    rcx,[rbp+0x30]
   140024221:	call   0x14001b1f0
   140024226:	mov    rbx,rax
   140024229:	mov    rdi,QWORD PTR [rax]
   14002422c:	cmp    QWORD PTR [rbp+0x30],r12
   140024230:	je     0x14002423b
   140024232:	lea    rcx,[rbp+0x30]
   140024236:	call   0x14001b030
   14002423b:	mov    QWORD PTR [rbp+0x30],rdi
   14002423f:	mov    QWORD PTR [rbx],r12
   140024242:	cmp    QWORD PTR [rbp+0x48],r12
   140024246:	je     0x140024251
   140024248:	lea    rcx,[rbp+0x48]
   14002424c:	call   0x14001b030
   140024251:	mov    rax,QWORD PTR [rbp+0x30]
   140024255:	test   rax,rax
   140024258:	je     0x14002431b
   14002425e:	or     rbx,0xffffffffffffffff
   140024262:	mov    rcx,rbx
   140024265:	inc    rcx
   140024268:	cmp    BYTE PTR [rax+rcx*1],r12b
   14002426c:	jne    0x140024265
   14002426e:	cmp    ecx,0x1
   140024271:	jl     0x1400242bb
   140024273:	mov    r9d,0x7fffffff
   140024279:	lea    rdx,[rbp+0x48]
   14002427d:	mov    r8d,0x1
   140024283:	lea    rcx,[rbp+0x30]
   140024287:	call   0x14001b530
   14002428c:	mov    rdi,rax
   14002428f:	mov    rsi,QWORD PTR [rax]
   140024292:	cmp    QWORD PTR [rbp+0x30],r12
   140024296:	je     0x1400242a1
   140024298:	lea    rcx,[rbp+0x30]
   14002429c:	call   0x14001b030
   1400242a1:	mov    QWORD PTR [rbp+0x30],rsi
   1400242a5:	mov    QWORD PTR [rdi],r12
   1400242a8:	cmp    QWORD PTR [rbp+0x48],r12
   1400242ac:	je     0x1400242b7
   1400242ae:	lea    rcx,[rbp+0x48]
   1400242b2:	call   0x14001b030
   1400242b7:	mov    rax,QWORD PTR [rbp+0x30]
   1400242bb:	test   rax,rax
   1400242be:	je     0x14002431b
   1400242c0:	mov    rcx,rbx
   1400242c3:	inc    rcx
   1400242c6:	cmp    BYTE PTR [rax+rcx*1],r12b
   1400242ca:	jne    0x1400242c3
   1400242cc:	cmp    ecx,0x1
   1400242cf:	jl     0x14002431b
   1400242d1:	cmp    BYTE PTR [rax+rbx*1+0x1],r12b
   1400242d6:	lea    rbx,[rbx+0x1]
   1400242da:	jne    0x1400242d1
   1400242dc:	lea    r9d,[rbx-0x1]
   1400242e0:	xor    r8d,r8d
   1400242e3:	lea    rdx,[rbp+0x48]
   1400242e7:	lea    rcx,[rbp+0x30]
   1400242eb:	call   0x14001b530
   1400242f0:	mov    rbx,rax
   1400242f3:	mov    rdi,QWORD PTR [rax]
   1400242f6:	cmp    QWORD PTR [rbp+0x30],r12
   1400242fa:	je     0x140024305
   1400242fc:	lea    rcx,[rbp+0x30]
   140024300:	call   0x14001b030
   140024305:	mov    QWORD PTR [rbp+0x30],rdi
   140024309:	mov    QWORD PTR [rbx],r12
   14002430c:	cmp    QWORD PTR [rbp+0x48],r12
   140024310:	je     0x14002431b
   140024312:	lea    rcx,[rbp+0x48]
   140024316:	call   0x14001b030
   14002431b:	lea    r9,[rip+0x12432]        # 0x140036754
   140024322:	mov    BYTE PTR [rsp+0x20],r12b
   140024327:	lea    r8,[rip+0x1241e]        # 0x14003674c
   14002432e:	lea    rdx,[rbp+0x48]
   140024332:	lea    rcx,[rbp+0x30]
   140024336:	call   0x14001b1f0
   14002433b:	mov    rbx,rax
   14002433e:	mov    rdi,QWORD PTR [rax]
   140024341:	cmp    QWORD PTR [r15],r12
   140024344:	je     0x14002434e
   140024346:	mov    rcx,r15
   140024349:	call   0x14001b030
   14002434e:	mov    QWORD PTR [r15],rdi
   140024351:	mov    QWORD PTR [rbx],r12
   140024354:	cmp    QWORD PTR [rbp+0x48],0x0
   140024359:	mov    r12,QWORD PTR [rsp+0x68]
   14002435e:	je     0x140024369
   140024360:	lea    rcx,[rbp+0x48]
   140024364:	call   0x14001b030
   140024369:	cmp    QWORD PTR [rbp+0x30],0x0
   14002436e:	je     0x1400243dd
   140024370:	lea    rcx,[rbp+0x30]
   140024374:	call   0x14001b030
   140024379:	mov    rbx,QWORD PTR [rsp+0x70]
   14002437e:	add    rsp,0x30
   140024382:	pop    r15
   140024384:	pop    r14
   140024386:	pop    rdi
   140024387:	pop    rsi
   140024388:	pop    rbp
   140024389:	ret    
   14002438a:	xor    sil,sil
   14002438d:	mov    rbx,r14
   140024390:	cmp    r14,rdi
   140024393:	je     0x1400243dd
   140024395:	movzx  edx,BYTE PTR [rbx]
   140024398:	cmp    rbx,r14
   14002439b:	je     0x1400243a6
   14002439d:	lea    rax,[rdi-0x1]
   1400243a1:	cmp    rbx,rax
   1400243a4:	jne    0x1400243ab
   1400243a6:	cmp    dl,0x22
   1400243a9:	je     0x1400243d5
   1400243ab:	test   sil,sil
   1400243ae:	jne    0x1400243ba
   1400243b0:	cmp    dl,0x5c
   1400243b3:	jne    0x1400243cd
   1400243b5:	mov    sil,0x1
   1400243b8:	jmp    0x1400243d5
   1400243ba:	cmp    dl,0x6e
   1400243bd:	je     0x1400243c8
   1400243bf:	cmp    dl,0x74
   1400243c2:	jne    0x1400243ca
   1400243c4:	mov    dl,0x9
   1400243c6:	jmp    0x1400243ca
   1400243c8:	mov    dl,0xa
   1400243ca:	xor    sil,sil
   1400243cd:	mov    rcx,r15
   1400243d0:	call   0x14001ab70
   1400243d5:	inc    rbx
   1400243d8:	cmp    rbx,rdi
   1400243db:	jne    0x140024395
   1400243dd:	mov    rbx,QWORD PTR [rsp+0x70]
   1400243e2:	add    rsp,0x30
   1400243e6:	pop    r15
   1400243e8:	pop    r14
   1400243ea:	pop    rdi
   1400243eb:	pop    rsi
   1400243ec:	pop    rbp
   1400243ed:	ret    
   1400243ee:	int3   
   1400243ef:	int3   
   1400243f0:	rex push rdi
   1400243f2:	push   r12
   1400243f4:	sub    rsp,0x28
   1400243f8:	mov    r12,r8
   1400243fb:	mov    rdi,rcx
   1400243fe:	cmp    edx,0x4
   140024401:	jae    0x14002440d
   140024403:	xor    eax,eax
   140024405:	add    rsp,0x28
   140024409:	pop    r12
   14002440b:	pop    rdi
   14002440c:	ret    
   14002440d:	movzx  ecx,BYTE PTR [rcx+0x3]
   140024411:	movzx  eax,BYTE PTR [rdi+0x2]
   140024415:	shl    ecx,0x8
   140024418:	or     ecx,eax
   14002441a:	mov    QWORD PTR [rsp+0x20],r15
   14002441f:	movzx  eax,BYTE PTR [rdi+0x1]
   140024423:	shl    ecx,0x8
   140024426:	or     ecx,eax
   140024428:	movzx  eax,BYTE PTR [rdi]
   14002442b:	shl    ecx,0x8
   14002442e:	or     ecx,eax
   140024430:	mov    r15d,ecx
   140024433:	btr    r15d,0x1f
   140024438:	cmp    r9d,r15d
   14002443b:	jb     0x140024470
   14002443d:	test   ecx,ecx
   14002443f:	jns    0x14002446b
   140024441:	mov    eax,edx
   140024443:	sub    rax,0x4
   140024447:	mov    r8d,r15d
   14002444a:	cmp    rax,r8
   14002444d:	jb     0x140024470
   14002444f:	lea    rdx,[rdi+0x4]
   140024453:	mov    rcx,r12
   140024456:	call   0x140026f70
   14002445b:	mov    eax,r15d
   14002445e:	mov    r15,QWORD PTR [rsp+0x20]
   140024463:	add    rsp,0x28
   140024467:	pop    r12
   140024469:	pop    rdi
   14002446a:	ret    
   14002446b:	cmp    edx,0x6
   14002446e:	jae    0x14002447f
   140024470:	xor    eax,eax
   140024472:	mov    r15,QWORD PTR [rsp+0x20]
   140024477:	add    rsp,0x28
   14002447b:	pop    r12
   14002447d:	pop    rdi
   14002447e:	ret    
   14002447f:	movzx  r9d,BYTE PTR [rdi+0x5]
   140024484:	lea    r8,[rdi+0x6]
   140024488:	movzx  eax,BYTE PTR [rdi+0x4]
   14002448c:	mov    QWORD PTR [rsp+0x40],rbx
   140024491:	mov    ebx,0x10
   140024496:	mov    QWORD PTR [rsp+0x48],rbp
   14002449b:	shl    r9w,0x8
   1400244a0:	mov    ebp,edx
   1400244a2:	or     r9w,ax
   1400244a6:	mov    QWORD PTR [rsp+0x50],rsi
   1400244ab:	add    rbp,rdi
   1400244ae:	mov    QWORD PTR [rsp+0x58],r14
   1400244b3:	mov    rdx,r12
   1400244b6:	mov    r14d,r15d
   1400244b9:	add    r14,r12
   1400244bc:	cmp    r12,r14
   1400244bf:	jae    0x1400245a5
   1400244c5:	test   ebx,ebx
   1400244c7:	jne    0x1400244ee
   1400244c9:	add    r8,0x2
   1400244cd:	cmp    r8,rbp
   1400244d0:	ja     0x1400245c9
   1400244d6:	movzx  r9d,BYTE PTR [r8-0x1]
   1400244db:	mov    ebx,0x10
   1400244e0:	movzx  eax,BYTE PTR [r8-0x2]
   1400244e5:	shl    r9w,0x8
   1400244ea:	or     r9w,ax
   1400244ee:	test   r9b,0x1
   1400244f2:	je     0x140024584
   1400244f8:	add    r8,0x2
   1400244fc:	cmp    r8,rbp
   1400244ff:	ja     0x1400245c9
   140024505:	movzx  eax,BYTE PTR [r8-0x2]
   14002450a:	mov    rdi,rdx
   14002450d:	movzx  r11d,BYTE PTR [r8-0x1]
   140024512:	shl    r11d,0x8
   140024516:	or     r11d,eax
   140024519:	mov    r10d,r11d
   14002451c:	shr    r11d,0x4
   140024520:	inc    r11d
   140024523:	and    r10d,0xf
   140024527:	mov    eax,r11d
   14002452a:	add    r10d,0x3
   14002452e:	sub    rdi,rax
   140024531:	cmp    rdi,r12
   140024534:	jb     0x1400245c9
   14002453a:	lea    rsi,[r10+rdx*1]
   14002453e:	mov    ecx,r10d
   140024541:	cmp    rsi,r14
   140024544:	ja     0x1400245c9
   14002454a:	cmp    r11d,0x1
   14002454e:	jne    0x140024562
   140024550:	movzx  eax,BYTE PTR [rdi]
   140024553:	test   r10d,r10d
   140024556:	je     0x14002455d
   140024558:	mov    rdi,rdx
   14002455b:	rep stos BYTE PTR es:[rdi],al
   14002455d:	mov    rdx,rsi
   140024560:	jmp    0x140024596
   140024562:	test   r10d,r10d
   140024565:	je     0x140024596
   140024567:	nop    WORD PTR [rax+rax*1+0x0]
   140024570:	movzx  eax,BYTE PTR [rdi]
   140024573:	lea    rdi,[rdi+0x1]
   140024577:	mov    BYTE PTR [rdx],al
   140024579:	inc    rdx
   14002457c:	sub    rcx,0x1
   140024580:	jne    0x140024570
   140024582:	jmp    0x140024596
   140024584:	inc    r8
   140024587:	cmp    r8,rbp
   14002458a:	ja     0x1400245c9
   14002458c:	movzx  eax,BYTE PTR [r8-0x1]
   140024591:	mov    BYTE PTR [rdx],al
   140024593:	inc    rdx
   140024596:	shr    r9w,1
   14002459a:	dec    ebx
   14002459c:	cmp    rdx,r14
   14002459f:	jb     0x1400244c5
   1400245a5:	mov    eax,r15d
   1400245a8:	mov    r14,QWORD PTR [rsp+0x58]
   1400245ad:	mov    rsi,QWORD PTR [rsp+0x50]
   1400245b2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400245b7:	mov    rbx,QWORD PTR [rsp+0x40]
   1400245bc:	mov    r15,QWORD PTR [rsp+0x20]
   1400245c1:	add    rsp,0x28
   1400245c5:	pop    r12
   1400245c7:	pop    rdi
   1400245c8:	ret    
   1400245c9:	xor    eax,eax
   1400245cb:	jmp    0x1400245a8
   1400245cd:	int3   
   1400245ce:	int3   
   1400245cf:	int3   
   1400245d0:	test   rcx,rcx
   1400245d3:	je     0x14002461d
   1400245d5:	mov    QWORD PTR [rsp+0x8],rbx
   1400245da:	push   rdi
   1400245db:	sub    rsp,0x20
   1400245df:	mov    rbx,rdx
   1400245e2:	mov    rdi,rcx
   1400245e5:	test   rdx,rdx
   1400245e8:	je     0x140024613
   1400245ea:	xor    edx,edx
   1400245ec:	mov    r8d,0x100
   1400245f2:	call   0x1400277b0
   1400245f7:	movzx  eax,BYTE PTR [rbx]
   1400245fa:	test   al,al
   1400245fc:	je     0x140024613
   1400245fe:	xchg   ax,ax
   140024600:	movsx  rax,al
   140024604:	lea    rbx,[rbx+0x1]
   140024608:	mov    BYTE PTR [rax+rdi*1],0x1
   14002460c:	movzx  eax,BYTE PTR [rbx]
   14002460f:	test   al,al
   140024611:	jne    0x140024600
   140024613:	mov    rbx,QWORD PTR [rsp+0x30]
   140024618:	add    rsp,0x20
   14002461c:	pop    rdi
   14002461d:	ret    
   14002461e:	int3   
   14002461f:	int3   
   140024620:	mov    QWORD PTR [rcx],0x0
   140024627:	mov    rax,rcx
   14002462a:	ret    
   14002462b:	int3   
   14002462c:	int3   
   14002462d:	int3   
   14002462e:	int3   
   14002462f:	int3   
   140024630:	rex push rbx
   140024632:	sub    rsp,0x20
   140024636:	mov    rdx,QWORD PTR [rcx]
   140024639:	mov    rbx,rcx
   14002463c:	test   rdx,rdx
   14002463f:	je     0x140024669
   140024641:	call   0x1400249b0
   140024646:	mov    rdx,QWORD PTR [rbx]
   140024649:	mov    rcx,rbx
   14002464c:	add    rdx,0x8
   140024650:	call   0x1400249b0
   140024655:	mov    rcx,QWORD PTR [rbx]
   140024658:	mov    edx,0x18
   14002465d:	call   0x14002639c
   140024662:	mov    QWORD PTR [rbx],0x0
   140024669:	add    rsp,0x20
   14002466d:	pop    rbx
   14002466e:	ret    
   14002466f:	int3   
   140024670:	mov    rdx,rcx
   140024673:	lea    rcx,[rip+0x13b56]        # 0x1400381d0
   14002467a:	rex.W jmp QWORD PTR [rip+0xdd2f]        # 0x1400323b0
   140024681:	int3   
   140024682:	int3   
   140024683:	int3   
   140024684:	int3   
   140024685:	int3   
   140024686:	int3   
   140024687:	int3   
   140024688:	int3   
   140024689:	int3   
   14002468a:	int3   
   14002468b:	int3   
   14002468c:	int3   
   14002468d:	int3   
   14002468e:	int3   
   14002468f:	int3   
   140024690:	rex push rbx
   140024692:	sub    rsp,0x20
   140024696:	cmp    BYTE PTR [rcx],0x24
   140024699:	lea    rbx,[rcx+0x1]
   14002469d:	lea    rdx,[rip+0x13ac4]        # 0x140038168
   1400246a4:	cmovne rbx,rcx
   1400246a8:	mov    rcx,rbx
   1400246ab:	call   QWORD PTR [rip+0xdeaf]        # 0x140032560
   1400246b1:	test   eax,eax
   1400246b3:	jne    0x1400246bd
   1400246b5:	mov    al,0x1
   1400246b7:	add    rsp,0x20
   1400246bb:	pop    rbx
   1400246bc:	ret    
   1400246bd:	lea    rdx,[rip+0x13aac]        # 0x140038170
   1400246c4:	mov    rcx,rbx
   1400246c7:	call   QWORD PTR [rip+0xde93]        # 0x140032560
   1400246cd:	test   eax,eax
   1400246cf:	je     0x1400246b5
   1400246d1:	lea    rdx,[rip+0x13aa0]        # 0x140038178
   1400246d8:	mov    rcx,rbx
   1400246db:	call   QWORD PTR [rip+0xde7f]        # 0x140032560
   1400246e1:	test   eax,eax
   1400246e3:	jne    0x1400246ed
   1400246e5:	xor    al,al
   1400246e7:	add    rsp,0x20
   1400246eb:	pop    rbx
   1400246ec:	ret    
   1400246ed:	lea    rdx,[rip+0x13a8c]        # 0x140038180
   1400246f4:	mov    rcx,rbx
   1400246f7:	call   QWORD PTR [rip+0xde63]        # 0x140032560
   1400246fd:	test   eax,eax
   1400246ff:	je     0x1400246e5
   140024701:	lea    rdx,[rip+0x13a7c]        # 0x140038184
   140024708:	mov    rcx,rbx
   14002470b:	call   QWORD PTR [rip+0xde4f]        # 0x140032560
   140024711:	test   eax,eax
   140024713:	je     0x1400246e5
   140024715:	lea    rdx,[rip+0x13a6c]        # 0x140038188
   14002471c:	mov    rcx,rbx
   14002471f:	call   QWORD PTR [rip+0xde3b]        # 0x140032560
   140024725:	test   eax,eax
   140024727:	je     0x1400246e5
   140024729:	lea    rdx,[rip+0x13a60]        # 0x140038190
   140024730:	mov    rcx,rbx
   140024733:	call   QWORD PTR [rip+0xde27]        # 0x140032560
   140024739:	test   eax,eax
   14002473b:	je     0x1400246e5
   14002473d:	lea    rdx,[rip+0x13a54]        # 0x140038198
   140024744:	mov    rcx,rbx
   140024747:	call   QWORD PTR [rip+0xde13]        # 0x140032560
   14002474d:	test   eax,eax
   14002474f:	jne    0x140024763
   140024751:	call   QWORD PTR [rip+0xdce1]        # 0x140032438
   140024757:	cmp    eax,0x7
   14002475a:	sete   al
   14002475d:	add    rsp,0x20
   140024761:	pop    rbx
   140024762:	ret    
   140024763:	lea    rdx,[rip+0x13a36]        # 0x1400381a0
   14002476a:	mov    rcx,rbx
   14002476d:	call   QWORD PTR [rip+0xdded]        # 0x140032560
   140024773:	test   eax,eax
   140024775:	je     0x1400246e5
   14002477b:	lea    rdx,[rip+0x13a2a]        # 0x1400381ac
   140024782:	mov    rcx,rbx
   140024785:	call   QWORD PTR [rip+0xddd5]        # 0x140032560
   14002478b:	test   eax,eax
   14002478d:	je     0x1400246e5
   140024793:	lea    rdx,[rip+0x13a1e]        # 0x1400381b8
   14002479a:	mov    rcx,rbx
   14002479d:	call   QWORD PTR [rip+0xddbd]        # 0x140032560
   1400247a3:	lea    rdx,[rip+0x13a1e]        # 0x1400381c8
   1400247aa:	mov    rcx,rbx
   1400247ad:	call   QWORD PTR [rip+0xddad]        # 0x140032560
   1400247b3:	test   eax,eax
   1400247b5:	jne    0x1400247c3
   1400247b7:	add    rsp,0x20
   1400247bb:	pop    rbx
   1400247bc:	rex.W jmp QWORD PTR [rip+0xdc7d]        # 0x140032440
   1400247c3:	call   QWORD PTR [rip+0xdc2f]        # 0x1400323f8
   1400247c9:	mov    rdx,rbx
   1400247cc:	mov    rcx,rax
   1400247cf:	mov    r8,QWORD PTR [rax]
   1400247d2:	add    rsp,0x20
   1400247d6:	pop    rbx
   1400247d7:	rex.WB jmp QWORD PTR [r8+0x38]
   1400247db:	int3   
   1400247dc:	int3   
   1400247dd:	int3   
   1400247de:	int3   
   1400247df:	int3   
   1400247e0:	mov    QWORD PTR [rsp+0x18],rbx
   1400247e5:	mov    QWORD PTR [rsp+0x20],rsi
   1400247ea:	push   r14
   1400247ec:	sub    rsp,0x330
   1400247f3:	mov    rsi,r8
   1400247f6:	mov    r14,rdx
   1400247f9:	mov    rbx,rcx
   1400247fc:	test   r8,r8
   1400247ff:	jne    0x140024808
   140024801:	xor    al,al
   140024803:	jmp    0x140024995
   140024808:	test   r9,r9
   14002480b:	mov    QWORD PTR [rsp+0x348],rdi
   140024813:	lea    rax,[rip+0xfffffffffffffe76]        # 0x140024690
   14002481a:	cmovne rax,r9
   14002481e:	mov    QWORD PTR [rcx+0xa0],rax
   140024825:	lea    rcx,[rip+0xfffffffffffffe44]        # 0x140024670
   14002482c:	mov    rax,QWORD PTR [rsp+0x360]
   140024834:	test   rax,rax
   140024837:	cmovne rcx,rax
   14002483b:	mov    QWORD PTR [rbx+0xa8],rcx
   140024842:	cmp    BYTE PTR [r8],0x5b
   140024846:	jne    0x1400248e7
   14002484c:	or     rdi,0xffffffffffffffff
   140024850:	inc    rdi
   140024853:	cmp    BYTE PTR [r8+rdi*1],0x0
   140024858:	jne    0x140024850
   14002485a:	lea    eax,[rdi+0x1]
   14002485d:	cmp    eax,0x200
   140024862:	ja     0x1400248db
   140024864:	lea    rdx,[r8+0x1]
   140024868:	mov    r8d,edi
   14002486b:	lea    rcx,[rsp+0x20]
   140024870:	call   QWORD PTR [rip+0xdce2]        # 0x140032558
   140024876:	dec    edi
   140024878:	lea    eax,[rdi-0x1]
   14002487b:	movsxd rcx,eax
   14002487e:	cmp    BYTE PTR [rsp+rcx*1+0x20],0x5d
   140024883:	jne    0x14002488a
   140024885:	mov    BYTE PTR [rsp+rcx*1+0x20],0x0
   14002488a:	cmp    QWORD PTR [rbx+0xa8],0x0
   140024892:	je     0x1400248e2
   140024894:	mov    edx,0x5b
   140024899:	lea    rcx,[rsp+0x20]
   14002489e:	call   0x140027a28
   1400248a3:	test   rax,rax
   1400248a6:	jne    0x1400248ba
   1400248a8:	lea    edx,[rax+0x5d]
   1400248ab:	lea    rcx,[rsp+0x20]
   1400248b0:	call   0x140027a28
   1400248b5:	test   rax,rax
   1400248b8:	je     0x1400248e2
   1400248ba:	mov    r8,rsi
   1400248bd:	lea    rdx,[rip+0x1399c]        # 0x140038260
   1400248c4:	lea    rcx,[rsp+0x220]
   1400248cc:	call   0x140001600
   1400248d1:	lea    rcx,[rax+0x9]
   1400248d5:	call   QWORD PTR [rbx+0xa8]
   1400248db:	xor    al,al
   1400248dd:	jmp    0x14002498d
   1400248e2:	lea    rsi,[rsp+0x20]
   1400248e7:	mov    QWORD PTR [rsp+0x340],rbp
   1400248ef:	xor    ebp,ebp
   1400248f1:	mov    QWORD PTR [rbx],rbp
   1400248f4:	mov    DWORD PTR [rbx+0x18],ebp
   1400248f7:	mov    BYTE PTR [rbx+0x8],bpl
   1400248fb:	mov    QWORD PTR [rbx+0x10],rsi
   1400248ff:	cmp    BYTE PTR [rsi],0x20
   140024902:	jne    0x14002491e
   140024904:	mov    ecx,ebp
   140024906:	data16 nop WORD PTR [rax+rax*1+0x0]
   140024910:	inc    ecx
   140024912:	movsxd rax,ecx
   140024915:	mov    DWORD PTR [rbx+0x18],ecx
   140024918:	cmp    BYTE PTR [rax+rsi*1],0x20
   14002491c:	je     0x140024910
   14002491e:	movsxd rdx,DWORD PTR [rbx+0x18]
   140024922:	movzx  ecx,BYTE PTR [rdx+rsi*1]
   140024926:	lea    eax,[rdx+0x1]
   140024929:	mov    BYTE PTR [rbx+0x8],cl
   14002492c:	mov    rdx,rbx
   14002492f:	mov    rcx,rbx
   140024932:	mov    DWORD PTR [rbx+0x18],eax
   140024935:	call   0x140024ac0
   14002493a:	movzx  edi,al
   14002493d:	test   al,al
   14002493f:	je     0x14002494f
   140024941:	mov    rdx,rbx
   140024944:	mov    rcx,rbx
   140024947:	call   0x140024e40
   14002494c:	mov    BYTE PTR [r14],al
   14002494f:	mov    rdx,QWORD PTR [rbx]
   140024952:	test   rdx,rdx
   140024955:	je     0x14002497e
   140024957:	mov    rcx,rbx
   14002495a:	call   0x1400249b0
   14002495f:	mov    rdx,QWORD PTR [rbx]
   140024962:	mov    rcx,rbx
   140024965:	add    rdx,0x8
   140024969:	call   0x1400249b0
   14002496e:	mov    rcx,QWORD PTR [rbx]
   140024971:	mov    edx,0x18
   140024976:	call   0x14002639c
   14002497b:	mov    QWORD PTR [rbx],rbp
   14002497e:	mov    QWORD PTR [rbx],rbp
   140024981:	movzx  eax,dil
   140024985:	mov    rbp,QWORD PTR [rsp+0x340]
   14002498d:	mov    rdi,QWORD PTR [rsp+0x348]
   140024995:	lea    r11,[rsp+0x330]
   14002499d:	mov    rbx,QWORD PTR [r11+0x20]
   1400249a1:	mov    rsi,QWORD PTR [r11+0x28]
   1400249a5:	mov    rsp,r11
   1400249a8:	pop    r14
   1400249aa:	ret    
   1400249ab:	int3   
   1400249ac:	int3   
   1400249ad:	int3   
   1400249ae:	int3   
   1400249af:	int3   
   1400249b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400249b5:	push   rdi
   1400249b6:	sub    rsp,0x20
   1400249ba:	mov    rbx,rdx
   1400249bd:	mov    rdi,rcx
   1400249c0:	mov    rdx,QWORD PTR [rdx]
   1400249c3:	test   rdx,rdx
   1400249c6:	je     0x1400249f0
   1400249c8:	call   0x1400249b0
   1400249cd:	mov    rdx,QWORD PTR [rbx]
   1400249d0:	mov    rcx,rdi
   1400249d3:	add    rdx,0x8
   1400249d7:	call   0x1400249b0
   1400249dc:	mov    rcx,QWORD PTR [rbx]
   1400249df:	mov    edx,0x18
   1400249e4:	call   0x14002639c
   1400249e9:	mov    QWORD PTR [rbx],0x0
   1400249f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400249f5:	add    rsp,0x20
   1400249f9:	pop    rdi
   1400249fa:	ret    
   1400249fb:	int3   
   1400249fc:	int3   
   1400249fd:	int3   
   1400249fe:	int3   
   1400249ff:	int3   
   140024a00:	mov    r8,rcx
   140024a03:	cmp    dl,0x24
   140024a06:	jne    0x140024a57
   140024a08:	mov    BYTE PTR [rcx+0x1c],dl
   140024a0b:	mov    edx,0x1
   140024a10:	mov    r10d,edx
   140024a13:	mov    rax,QWORD PTR [r8+0x10]
   140024a17:	movsxd rcx,DWORD PTR [r8+0x18]
   140024a1b:	movzx  r9d,BYTE PTR [rcx+rax*1]
   140024a20:	lea    eax,[r9-0x41]
   140024a24:	cmp    al,0x19
   140024a26:	jbe    0x140024a3e
   140024a28:	lea    eax,[r9-0x61]
   140024a2c:	cmp    al,0x19
   140024a2e:	jbe    0x140024a3e
   140024a30:	lea    eax,[r9-0x30]
   140024a34:	cmp    al,0x9
   140024a36:	jbe    0x140024a3e
   140024a38:	cmp    r9b,0x5f
   140024a3c:	jne    0x140024a9e
   140024a3e:	cmp    r10,0x80
   140024a45:	jge    0x140024a9e
   140024a47:	mov    BYTE PTR [r8+r10*1+0x1c],r9b
   140024a4c:	inc    edx
   140024a4e:	inc    DWORD PTR [r8+0x18]
   140024a52:	inc    r10
   140024a55:	jmp    0x140024a13
   140024a57:	lea    eax,[rdx-0x30]
   140024a5a:	cmp    al,0x9
   140024a5c:	ja     0x140024aaf
   140024a5e:	mov    BYTE PTR [rcx+0x1c],dl
   140024a61:	mov    edx,0x1
   140024a66:	mov    r9d,edx
   140024a69:	nop    DWORD PTR [rax+0x0]
   140024a70:	mov    rax,QWORD PTR [r8+0x10]
   140024a74:	movsxd rcx,DWORD PTR [r8+0x18]
   140024a78:	movzx  r10d,BYTE PTR [rcx+rax*1]
   140024a7d:	lea    eax,[r10-0x30]
   140024a81:	cmp    al,0x9
   140024a83:	ja     0x140024a9e
   140024a85:	cmp    r9,0x80
   140024a8c:	jge    0x140024a9e
   140024a8e:	mov    BYTE PTR [r8+r9*1+0x1c],r10b
   140024a93:	inc    edx
   140024a95:	inc    DWORD PTR [r8+0x18]
   140024a99:	inc    r9
   140024a9c:	jmp    0x140024a70
   140024a9e:	cmp    edx,0x7f
   140024aa1:	jge    0x140024aaf
   140024aa3:	movsxd rax,edx
   140024aa6:	mov    BYTE PTR [rax+r8*1+0x1c],0x0
   140024aac:	mov    al,0x1
   140024aae:	ret    
   140024aaf:	xor    al,al
   140024ab1:	ret    
   140024ab2:	int3   
   140024ab3:	int3   
   140024ab4:	int3   
   140024ab5:	int3   
   140024ab6:	int3   
   140024ab7:	int3   
   140024ab8:	int3   
   140024ab9:	int3   
   140024aba:	int3   
   140024abb:	int3   
   140024abc:	int3   
   140024abd:	int3   
   140024abe:	int3   
   140024abf:	int3   
   140024ac0:	rex push rdi
   140024ac2:	push   r14
   140024ac4:	sub    rsp,0x138
   140024acb:	mov    r14,rdx
   140024ace:	mov    rdi,rcx
   140024ad1:	call   0x140024d80
   140024ad6:	test   al,al
   140024ad8:	jne    0x140024ae5
   140024ada:	add    rsp,0x138
   140024ae1:	pop    r14
   140024ae3:	pop    rdi
   140024ae4:	ret    
   140024ae5:	mov    QWORD PTR [rsp+0x158],rbp
   140024aed:	movzx  ebp,BYTE PTR [rsp+0x160]
   140024af5:	mov    QWORD PTR [rsp+0x168],rsi
   140024afd:	mov    QWORD PTR [rsp+0x130],r15
   140024b05:	xor    r15d,r15d
   140024b08:	mov    QWORD PTR [rsp+0x150],rbx
   140024b10:	movzx  esi,BYTE PTR [rdi+0x8]
   140024b14:	cmp    sil,0x7c
   140024b18:	je     0x140024b24
   140024b1a:	cmp    sil,0x26
   140024b1e:	jne    0x140024bca
   140024b24:	movsxd rdx,DWORD PTR [rdi+0x18]
   140024b28:	mov    rax,QWORD PTR [rdi+0x10]
   140024b2c:	movzx  r8d,BYTE PTR [rdx+rax*1]
   140024b31:	lea    eax,[rdx+0x1]
   140024b34:	mov    DWORD PTR [rdi+0x18],eax
   140024b37:	movzx  eax,r8b
   140024b3b:	and    al,sil
   140024b3e:	cmp    al,sil
   140024b41:	jne    0x140024b48
   140024b43:	mov    bpl,0x1
   140024b46:	jmp    0x140024b56
   140024b48:	cmp    QWORD PTR [rdi+0xa8],r15
   140024b4f:	jne    0x140024bce
   140024b51:	test   bpl,bpl
   140024b54:	je     0x140024bca
   140024b56:	mov    rbx,QWORD PTR [r14]
   140024b59:	mov    ecx,0x18
   140024b5e:	call   0x140007bf0
   140024b63:	mov    QWORD PTR [r14],rax
   140024b66:	mov    QWORD PTR [rax],rbx
   140024b69:	mov    rax,QWORD PTR [r14]
   140024b6c:	mov    QWORD PTR [rax+0x8],r15
   140024b70:	mov    rax,QWORD PTR [r14]
   140024b73:	mov    DWORD PTR [rax+0x10],r15d
   140024b77:	mov    rax,QWORD PTR [r14]
   140024b7a:	mov    BYTE PTR [rax+0x14],sil
   140024b7e:	movsxd rax,DWORD PTR [rdi+0x18]
   140024b82:	mov    r8,QWORD PTR [rdi+0x10]
   140024b86:	cmp    BYTE PTR [rax+r8*1],0x20
   140024b8b:	jne    0x140024b9f
   140024b8d:	nop    DWORD PTR [rax]
   140024b90:	inc    eax
   140024b92:	movsxd rcx,eax
   140024b95:	mov    DWORD PTR [rdi+0x18],eax
   140024b98:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024b9d:	je     0x140024b90
   140024b9f:	movsxd rdx,DWORD PTR [rdi+0x18]
   140024ba3:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024ba8:	lea    eax,[rdx+0x1]
   140024bab:	mov    BYTE PTR [rdi+0x8],cl
   140024bae:	mov    rcx,rdi
   140024bb1:	mov    DWORD PTR [rdi+0x18],eax
   140024bb4:	mov    rdx,QWORD PTR [r14]
   140024bb7:	add    rdx,0x8
   140024bbb:	call   0x140024d80
   140024bc0:	test   al,al
   140024bc2:	jne    0x140024b10
   140024bc8:	jmp    0x140024bf1
   140024bca:	mov    al,0x1
   140024bcc:	jmp    0x140024bf3
   140024bce:	movsx  r9d,r8b
   140024bd2:	lea    rdx,[rip+0x13617]        # 0x1400381f0
   140024bd9:	movsx  r8d,sil
   140024bdd:	lea    rcx,[rsp+0x20]
   140024be2:	call   0x140001600
   140024be7:	lea    rcx,[rax+0x9]
   140024beb:	call   QWORD PTR [rdi+0xa8]
   140024bf1:	xor    al,al
   140024bf3:	mov    rbx,QWORD PTR [rsp+0x150]
   140024bfb:	mov    rbp,QWORD PTR [rsp+0x158]
   140024c03:	mov    rsi,QWORD PTR [rsp+0x168]
   140024c0b:	mov    r15,QWORD PTR [rsp+0x130]
   140024c13:	add    rsp,0x138
   140024c1a:	pop    r14
   140024c1c:	pop    rdi
   140024c1d:	ret    
   140024c1e:	int3   
   140024c1f:	int3   
   140024c20:	mov    QWORD PTR [rsp+0x8],rbx
   140024c25:	push   rdi
   140024c26:	sub    rsp,0x130
   140024c2d:	mov    rdi,rdx
   140024c30:	mov    rbx,rcx
   140024c33:	movzx  edx,BYTE PTR [rcx+0x8]
   140024c37:	cmp    dl,0x28
   140024c3a:	jne    0x140024c91
   140024c3c:	movsxd rcx,DWORD PTR [rcx+0x18]
   140024c40:	mov    r8,QWORD PTR [rbx+0x10]
   140024c44:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024c49:	jne    0x140024c5f
   140024c4b:	nop    DWORD PTR [rax+rax*1+0x0]
   140024c50:	inc    ecx
   140024c52:	movsxd rax,ecx
   140024c55:	mov    DWORD PTR [rbx+0x18],ecx
   140024c58:	cmp    BYTE PTR [rax+r8*1],0x20
   140024c5d:	je     0x140024c50
   140024c5f:	movsxd rdx,DWORD PTR [rbx+0x18]
   140024c63:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024c68:	lea    eax,[rdx+0x1]
   140024c6b:	mov    BYTE PTR [rbx+0x8],cl
   140024c6e:	mov    rdx,rdi
   140024c71:	mov    rcx,rbx
   140024c74:	mov    DWORD PTR [rbx+0x18],eax
   140024c77:	call   0x140024ac0
   140024c7c:	test   al,al
   140024c7e:	jne    0x140024ced
   140024c80:	mov    rbx,QWORD PTR [rsp+0x140]
   140024c88:	add    rsp,0x130
   140024c8f:	pop    rdi
   140024c90:	ret    
   140024c91:	call   0x140024a00
   140024c96:	test   al,al
   140024c98:	je     0x140024d34
   140024c9e:	mov    ecx,0x18
   140024ca3:	call   0x140007bf0
   140024ca8:	mov    QWORD PTR [rdi],rax
   140024cab:	xor    ecx,ecx
   140024cad:	mov    QWORD PTR [rax],rcx
   140024cb0:	mov    rax,QWORD PTR [rdi]
   140024cb3:	mov    QWORD PTR [rax+0x8],rcx
   140024cb7:	lea    rcx,[rbx+0x1c]
   140024cbb:	mov    rax,QWORD PTR [rdi]
   140024cbe:	mov    DWORD PTR [rax+0x10],0x2
   140024cc5:	movzx  eax,BYTE PTR [rcx]
   140024cc8:	sub    al,0x30
   140024cca:	cmp    al,0x9
   140024ccc:	ja     0x140024ce1
   140024cce:	call   QWORD PTR [rip+0xd5c4]        # 0x140032298
   140024cd4:	test   eax,eax
   140024cd6:	mov    rax,QWORD PTR [rdi]
   140024cd9:	setne  cl
   140024cdc:	mov    BYTE PTR [rax+0x14],cl
   140024cdf:	jmp    0x140024ced
   140024ce1:	call   QWORD PTR [rbx+0xa0]
   140024ce7:	mov    rcx,QWORD PTR [rdi]
   140024cea:	mov    BYTE PTR [rcx+0x14],al
   140024ced:	movsxd rcx,DWORD PTR [rbx+0x18]
   140024cf1:	mov    r8,QWORD PTR [rbx+0x10]
   140024cf5:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024cfa:	jne    0x140024d0f
   140024cfc:	nop    DWORD PTR [rax+0x0]
   140024d00:	inc    ecx
   140024d02:	movsxd rax,ecx
   140024d05:	mov    DWORD PTR [rbx+0x18],ecx
   140024d08:	cmp    BYTE PTR [rax+r8*1],0x20
   140024d0d:	je     0x140024d00
   140024d0f:	movsxd rdx,DWORD PTR [rbx+0x18]
   140024d13:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024d18:	lea    eax,[rdx+0x1]
   140024d1b:	mov    BYTE PTR [rbx+0x8],cl
   140024d1e:	mov    DWORD PTR [rbx+0x18],eax
   140024d21:	mov    al,0x1
   140024d23:	mov    rbx,QWORD PTR [rsp+0x140]
   140024d2b:	add    rsp,0x130
   140024d32:	pop    rdi
   140024d33:	ret    
   140024d34:	movzx  eax,BYTE PTR [rbx+0x8]
   140024d38:	cmp    al,0x21
   140024d3a:	je     0x140024d21
   140024d3c:	cmp    QWORD PTR [rbx+0xa8],0x0
   140024d44:	je     0x140024d65
   140024d46:	movsx  r8d,al
   140024d4a:	lea    rdx,[rip+0x134ef]        # 0x140038240
   140024d51:	lea    rcx,[rsp+0x20]
   140024d56:	call   0x140001600
   140024d5b:	lea    rcx,[rax+0x9]
   140024d5f:	call   QWORD PTR [rbx+0xa8]
   140024d65:	xor    al,al
   140024d67:	mov    rbx,QWORD PTR [rsp+0x140]
   140024d6f:	add    rsp,0x130
   140024d76:	pop    rdi
   140024d77:	ret    
   140024d78:	int3   
   140024d79:	int3   
   140024d7a:	int3   
   140024d7b:	int3   
   140024d7c:	int3   
   140024d7d:	int3   
   140024d7e:	int3   
   140024d7f:	int3   
   140024d80:	mov    QWORD PTR [rsp+0x18],rsi
   140024d85:	push   rdi
   140024d86:	sub    rsp,0x20
   140024d8a:	mov    rsi,rdx
   140024d8d:	mov    rdi,rcx
   140024d90:	call   0x140024c20
   140024d95:	test   al,al
   140024d97:	jne    0x140024da4
   140024d99:	mov    rsi,QWORD PTR [rsp+0x40]
   140024d9e:	add    rsp,0x20
   140024da2:	pop    rdi
   140024da3:	ret    
   140024da4:	mov    QWORD PTR [rsp+0x38],rbp
   140024da9:	xor    ebp,ebp
   140024dab:	mov    QWORD PTR [rsp+0x30],rbx
   140024db0:	cmp    BYTE PTR [rdi+0x8],0x21
   140024db4:	jne    0x140024e26
   140024db6:	mov    rbx,QWORD PTR [rsi]
   140024db9:	mov    ecx,0x18
   140024dbe:	call   0x140007bf0
   140024dc3:	mov    QWORD PTR [rsi],rax
   140024dc6:	mov    QWORD PTR [rax],rbx
   140024dc9:	mov    rax,QWORD PTR [rsi]
   140024dcc:	mov    QWORD PTR [rax+0x8],rbp
   140024dd0:	mov    rax,QWORD PTR [rsi]
   140024dd3:	mov    DWORD PTR [rax+0x10],0x1
   140024dda:	movsxd rax,DWORD PTR [rdi+0x18]
   140024dde:	mov    r8,QWORD PTR [rdi+0x10]
   140024de2:	cmp    BYTE PTR [rax+r8*1],0x20
   140024de7:	jne    0x140024dff
   140024de9:	nop    DWORD PTR [rax+0x0]
   140024df0:	inc    eax
   140024df2:	movsxd rcx,eax
   140024df5:	mov    DWORD PTR [rdi+0x18],eax
   140024df8:	cmp    BYTE PTR [rcx+r8*1],0x20
   140024dfd:	je     0x140024df0
   140024dff:	movsxd rdx,DWORD PTR [rdi+0x18]
   140024e03:	movzx  ecx,BYTE PTR [rdx+r8*1]
   140024e08:	lea    eax,[rdx+0x1]
   140024e0b:	mov    BYTE PTR [rdi+0x8],cl
   140024e0e:	mov    rcx,rdi
   140024e11:	mov    DWORD PTR [rdi+0x18],eax
   140024e14:	mov    rdx,QWORD PTR [rsi]
   140024e17:	add    rdx,0x8
   140024e1b:	call   0x140024c20
   140024e20:	test   al,al
   140024e22:	jne    0x140024db0
   140024e24:	jmp    0x140024e28
   140024e26:	mov    al,0x1
   140024e28:	mov    rbx,QWORD PTR [rsp+0x30]
   140024e2d:	mov    rbp,QWORD PTR [rsp+0x38]
   140024e32:	mov    rsi,QWORD PTR [rsp+0x40]
   140024e37:	add    rsp,0x20
   140024e3b:	pop    rdi
   140024e3c:	ret    
   140024e3d:	int3   
   140024e3e:	int3   
   140024e3f:	int3   
   140024e40:	mov    QWORD PTR [rsp+0x10],rbx
   140024e45:	push   rsi
   140024e46:	sub    rsp,0x20
   140024e4a:	mov    rbx,rdx
   140024e4d:	mov    rsi,rcx
   140024e50:	mov    rdx,QWORD PTR [rdx]
   140024e53:	test   rdx,rdx
   140024e56:	jne    0x140024e65
   140024e58:	xor    al,al
   140024e5a:	mov    rbx,QWORD PTR [rsp+0x38]
   140024e5f:	add    rsp,0x20
   140024e63:	pop    rsi
   140024e64:	ret    
   140024e65:	mov    QWORD PTR [rsp+0x30],rdi
   140024e6a:	call   0x140024e40
   140024e6f:	mov    rdx,QWORD PTR [rbx]
   140024e72:	mov    rcx,rsi
   140024e75:	add    rdx,0x8
   140024e79:	movzx  edi,al
   140024e7c:	call   0x140024e40
   140024e81:	mov    rdx,QWORD PTR [rbx]
   140024e84:	mov    r8d,DWORD PTR [rdx+0x10]
   140024e88:	test   r8d,r8d
   140024e8b:	je     0x140024e9a
   140024e8d:	cmp    r8d,0x1
   140024e91:	jne    0x140024eb1
   140024e93:	test   al,al
   140024e95:	sete   al
   140024e98:	jmp    0x140024eae
   140024e9a:	cmp    BYTE PTR [rdx+0x14],0x26
   140024e9e:	jne    0x140024ed2
   140024ea0:	test   dil,dil
   140024ea3:	je     0x140024edb
   140024ea5:	test   al,al
   140024ea7:	je     0x140024edb
   140024ea9:	mov    eax,0x1
   140024eae:	mov    BYTE PTR [rdx+0x14],al
   140024eb1:	mov    rax,QWORD PTR [rbx]
   140024eb4:	mov    rdi,QWORD PTR [rsp+0x30]
   140024eb9:	mov    DWORD PTR [rax+0x10],0x2
   140024ec0:	mov    rax,QWORD PTR [rbx]
   140024ec3:	mov    rbx,QWORD PTR [rsp+0x38]
   140024ec8:	movzx  eax,BYTE PTR [rax+0x14]
   140024ecc:	add    rsp,0x20
   140024ed0:	pop    rsi
   140024ed1:	ret    
   140024ed2:	test   dil,dil
   140024ed5:	jne    0x140024ea9
   140024ed7:	test   al,al
   140024ed9:	jne    0x140024ea9
   140024edb:	xor    eax,eax
   140024edd:	jmp    0x140024eae
   140024edf:	int3   
   140024ee0:	sub    rsp,0x28
   140024ee4:	mov    rcx,QWORD PTR [rip+0x222cd]        # 0x1400471b8
   140024eeb:	test   rcx,rcx
   140024eee:	je     0x140024f09
   140024ef0:	mov    rax,QWORD PTR [rcx]
   140024ef3:	call   QWORD PTR [rax+0xa8]
   140024ef9:	test   al,al
   140024efb:	je     0x140024f09
   140024efd:	call   0x1400262b0
   140024f02:	xor    eax,eax
   140024f04:	add    rsp,0x28
   140024f08:	ret    
   140024f09:	mov    eax,0x1
   140024f0e:	add    rsp,0x28
   140024f12:	ret    
   140024f13:	int3   
   140024f14:	int3   
   140024f15:	int3   
   140024f16:	int3   
   140024f17:	int3   
   140024f18:	int3   
   140024f19:	int3   
   140024f1a:	int3   
   140024f1b:	int3   
   140024f1c:	int3   
   140024f1d:	int3   
   140024f1e:	int3   
   140024f1f:	int3   
   140024f20:	sub    rsp,0x28
   140024f24:	mov    rcx,QWORD PTR [rip+0x222ad]        # 0x1400471d8
   140024f2b:	test   rcx,rcx
   140024f2e:	je     0x140024f51
   140024f30:	cmp    BYTE PTR [rip+0x23371],0x0        # 0x1400482a8
   140024f37:	jne    0x140024f4c
   140024f39:	mov    rax,QWORD PTR [rcx]
   140024f3c:	lea    rdx,[rip+0x2333d]        # 0x140048280
   140024f43:	call   QWORD PTR [rax]
   140024f45:	mov    BYTE PTR [rip+0x2335c],0x1        # 0x1400482a8
   140024f4c:	call   0x1400261b0
   140024f51:	inc    DWORD PTR [rip+0x23355]        # 0x1400482ac
   140024f57:	add    rsp,0x28
   140024f5b:	ret    
   140024f5c:	int3   
   140024f5d:	int3   
   140024f5e:	int3   
   140024f5f:	int3   
   140024f60:	sub    rsp,0x28
   140024f64:	sub    DWORD PTR [rip+0x23341],0x1        # 0x1400482ac
   140024f6b:	jne    0x140024fa0
   140024f6d:	cmp    QWORD PTR [rip+0x22263],0x0        # 0x1400471d8
   140024f75:	je     0x140024fa0
   140024f77:	call   0x140026200
   140024f7c:	cmp    BYTE PTR [rip+0x23325],0x0        # 0x1400482a8
   140024f83:	je     0x140024fa0
   140024f85:	mov    rcx,QWORD PTR [rip+0x2224c]        # 0x1400471d8
   140024f8c:	lea    rdx,[rip+0x232ed]        # 0x140048280
   140024f93:	mov    rax,QWORD PTR [rcx]
   140024f96:	call   QWORD PTR [rax+0x8]
   140024f99:	mov    BYTE PTR [rip+0x23308],0x0        # 0x1400482a8
   140024fa0:	add    rsp,0x28
   140024fa4:	ret    
   140024fa5:	int3   
   140024fa6:	int3   
   140024fa7:	int3   
   140024fa8:	int3   
   140024fa9:	int3   
   140024faa:	int3   
   140024fab:	int3   
   140024fac:	int3   
   140024fad:	int3   
   140024fae:	int3   
   140024faf:	int3   
   140024fb0:	sub    rsp,0x38
   140024fb4:	mov    rax,QWORD PTR [rsp+0x60]
   140024fb9:	mov    QWORD PTR [rsp+0x28],rax
   140024fbe:	mov    DWORD PTR [rsp+0x20],0x0
   140024fc6:	call   0x140024fd0
   140024fcb:	add    rsp,0x38
   140024fcf:	ret    
   140024fd0:	mov    BYTE PTR [rsp+0x20],r9b
   140024fd5:	mov    QWORD PTR [rsp+0x18],r8
   140024fda:	mov    QWORD PTR [rsp+0x10],rdx
   140024fdf:	mov    QWORD PTR [rsp+0x8],rcx
   140024fe4:	push   rbp
   140024fe5:	push   rbx
   140024fe6:	push   rsi
   140024fe7:	push   rdi
   140024fe8:	lea    rbp,[rsp-0x548]
   140024ff0:	sub    rsp,0x648
   140024ff7:	mov    rbx,r8
   140024ffa:	xorps  xmm0,xmm0
   140024ffd:	lea    r8,[rsp+0x40]
   140025002:	mov    r9d,0x200
   140025008:	movdqu XMMWORD PTR [rsp+0x30],xmm0
   14002500e:	mov    rsi,rcx
   140025011:	call   QWORD PTR [rip+0xd4e9]        # 0x140032500
   140025017:	mov    rcx,QWORD PTR [rip+0x2216a]        # 0x140047188
   14002501e:	lea    r9,[rsp+0x30]
   140025023:	mov    r8,rbx
   140025026:	lea    rdx,[rsp+0x40]
   14002502b:	mov    rax,QWORD PTR [rcx]
   14002502e:	call   QWORD PTR [rax+0x150]
   140025034:	mov    rbx,QWORD PTR [rbp+0x598]
   14002503b:	mov    rdi,rax
   14002503e:	test   rax,rax
   140025041:	je     0x14002511f
   140025047:	cmp    DWORD PTR [rbp+0x590],0x1
   14002504e:	sete   sil
   140025052:	nop    DWORD PTR [rax+0x0]
   140025056:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025060:	mov    rcx,QWORD PTR [rip+0x22121]        # 0x140047188
   140025067:	lea    rdx,[rsp+0x30]
   14002506c:	mov    r8,QWORD PTR [rcx]
   14002506f:	call   QWORD PTR [r8+0x140]
   140025076:	cmp    sil,al
   140025079:	jne    0x1400250f7
   14002507b:	mov    rcx,QWORD PTR [rbp+0x570]
   140025082:	lea    r8,[rbp+0x340]
   140025089:	mov    r9d,0x200
   14002508f:	mov    rdx,rdi
   140025092:	call   QWORD PTR [rip+0xd468]        # 0x140032500
   140025098:	mov    r9b,0x1
   14002509b:	lea    r8,[rbp+0x340]
   1400250a2:	mov    edx,0x200
   1400250a7:	lea    rcx,[rbp+0x140]
   1400250ae:	call   QWORD PTR [rip+0xd42c]        # 0x1400324e0
   1400250b4:	movsxd rdi,DWORD PTR [rbx]
   1400250b7:	cmp    edi,DWORD PTR [rbx+0x10]
   1400250ba:	jne    0x1400250ca
   1400250bc:	lea    rcx,[rbx+0x8]
   1400250c0:	mov    edx,0x1
   1400250c5:	call   0x140013420
   1400250ca:	inc    DWORD PTR [rbx]
   1400250cc:	lea    rdx,[rdi*8+0x0]
   1400250d4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400250d8:	add    rcx,rdx
   1400250db:	je     0x1400250e4
   1400250dd:	mov    QWORD PTR [rcx],0x0
   1400250e4:	mov    rcx,QWORD PTR [rbx+0x8]
   1400250e8:	add    rcx,rdx
   1400250eb:	lea    rdx,[rbp+0x140]
   1400250f2:	call   0x14001aae0
   1400250f7:	mov    rcx,QWORD PTR [rip+0x2208a]        # 0x140047188
   1400250fe:	lea    rdx,[rsp+0x30]
   140025103:	mov    rax,QWORD PTR [rcx]
   140025106:	call   QWORD PTR [rax+0x138]
   14002510c:	mov    rdi,rax
   14002510f:	test   rax,rax
   140025112:	jne    0x140025060
   140025118:	mov    rsi,QWORD PTR [rbp+0x570]
   14002511f:	mov    rcx,QWORD PTR [rip+0x22062]        # 0x140047188
   140025126:	lea    rdx,[rsp+0x30]
   14002512b:	mov    rax,QWORD PTR [rcx]
   14002512e:	call   QWORD PTR [rax+0x148]
   140025134:	cmp    BYTE PTR [rbp+0x588],0x0
   14002513b:	je     0x14002525e
   140025141:	mov    r9d,0x200
   140025147:	lea    r8,[rsp+0x40]
   14002514c:	lea    rdx,[rip+0x11d45]        # 0x140036e98
   140025153:	mov    rcx,rsi
   140025156:	call   QWORD PTR [rip+0xd3a4]        # 0x140032500
   14002515c:	mov    rcx,QWORD PTR [rip+0x22025]        # 0x140047188
   140025163:	lea    r9,[rsp+0x30]
   140025168:	mov    r8,QWORD PTR [rbp+0x580]
   14002516f:	lea    rdx,[rsp+0x40]
   140025174:	mov    rax,QWORD PTR [rcx]
   140025177:	call   QWORD PTR [rax+0x150]
   14002517d:	mov    rdi,rax
   140025180:	test   rax,rax
   140025183:	je     0x140025249
   140025189:	nop    DWORD PTR [rax+0x0]
   140025190:	mov    rcx,QWORD PTR [rip+0x21ff1]        # 0x140047188
   140025197:	lea    rdx,[rsp+0x30]
   14002519c:	mov    r8,QWORD PTR [rcx]
   14002519f:	call   QWORD PTR [r8+0x140]
   1400251a6:	test   al,al
   1400251a8:	je     0x140025228
   1400251aa:	mov    r8d,0x2
   1400251b0:	lea    rdx,[rip+0xe05d]        # 0x140033214
   1400251b7:	mov    rcx,rdi
   1400251ba:	call   QWORD PTR [rip+0xd288]        # 0x140032448
   1400251c0:	test   eax,eax
   1400251c2:	je     0x140025228
   1400251c4:	mov    r8d,0x3
   1400251ca:	lea    rdx,[rip+0xe13f]        # 0x140033310
   1400251d1:	mov    rcx,rdi
   1400251d4:	call   QWORD PTR [rip+0xd26e]        # 0x140032448
   1400251da:	test   eax,eax
   1400251dc:	je     0x140025228
   1400251de:	mov    r9d,0x200
   1400251e4:	lea    r8,[rbp+0x140]
   1400251eb:	mov    rdx,rdi
   1400251ee:	mov    rcx,rsi
   1400251f1:	call   QWORD PTR [rip+0xd309]        # 0x140032500
   1400251f7:	mov    eax,DWORD PTR [rbp+0x590]
   1400251fd:	lea    rcx,[rbp+0x140]
   140025204:	movzx  r9d,BYTE PTR [rbp+0x588]
   14002520c:	mov    r8,QWORD PTR [rbp+0x580]
   140025213:	mov    rdx,QWORD PTR [rbp+0x578]
   14002521a:	mov    QWORD PTR [rsp+0x28],rbx
   14002521f:	mov    DWORD PTR [rsp+0x20],eax
   140025223:	call   0x140024fd0
   140025228:	mov    rcx,QWORD PTR [rip+0x21f59]        # 0x140047188
   14002522f:	lea    rdx,[rsp+0x30]
   140025234:	mov    rax,QWORD PTR [rcx]
   140025237:	call   QWORD PTR [rax+0x138]
   14002523d:	mov    rdi,rax
   140025240:	test   rax,rax
   140025243:	jne    0x140025190
   140025249:	mov    rcx,QWORD PTR [rip+0x21f38]        # 0x140047188
   140025250:	lea    rdx,[rsp+0x30]
   140025255:	mov    rax,QWORD PTR [rcx]
   140025258:	call   QWORD PTR [rax+0x148]
   14002525e:	mov    rcx,QWORD PTR [rsp+0x30]
   140025263:	test   rcx,rcx
   140025266:	je     0x140025276
   140025268:	mov    rax,QWORD PTR [rcx]
   14002526b:	lea    rdx,[rsp+0x30]
   140025270:	call   QWORD PTR [rax+0x148]
   140025276:	add    rsp,0x648
   14002527d:	pop    rdi
   14002527e:	pop    rsi
   14002527f:	pop    rbx
   140025280:	pop    rbp
   140025281:	ret    
   140025282:	int3   
   140025283:	int3   
   140025284:	int3   
   140025285:	int3   
   140025286:	int3   
   140025287:	int3   
   140025288:	int3   
   140025289:	int3   
   14002528a:	int3   
   14002528b:	int3   
   14002528c:	int3   
   14002528d:	int3   
   14002528e:	int3   
   14002528f:	int3   
   140025290:	mov    QWORD PTR [rsp+0x8],rbx
   140025295:	mov    QWORD PTR [rsp+0x10],rbp
   14002529a:	mov    QWORD PTR [rsp+0x18],rsi
   14002529f:	push   rdi
   1400252a0:	sub    rsp,0x240
   1400252a7:	mov    esi,r9d
   1400252aa:	mov    rbx,r8
   1400252ad:	mov    rbp,rdx
   1400252b0:	mov    rdi,rcx
   1400252b3:	call   QWORD PTR [rip+0xd21f]        # 0x1400324d8
   1400252b9:	test   al,al
   1400252bb:	je     0x1400252d9
   1400252bd:	mov    r8d,esi
   1400252c0:	mov    rdx,rdi
   1400252c3:	mov    rcx,rbx
   1400252c6:	call   QWORD PTR [rip+0xd28c]        # 0x140032558
   1400252cc:	mov    dl,0x5c
   1400252ce:	mov    rcx,rbx
   1400252d1:	call   QWORD PTR [rip+0xd1f9]        # 0x1400324d0
   1400252d7:	jmp    0x14002534a
   1400252d9:	mov    rcx,QWORD PTR [rip+0x21ea8]        # 0x140047188
   1400252e0:	xor    edx,edx
   1400252e2:	mov    QWORD PTR [rsp+0x30],rdx
   1400252e7:	mov    r9,rbx
   1400252ea:	mov    DWORD PTR [rsp+0x28],edx
   1400252ee:	mov    r8,rbp
   1400252f1:	mov    rdx,rdi
   1400252f4:	mov    DWORD PTR [rsp+0x20],esi
   1400252f8:	mov    rax,QWORD PTR [rcx]
   1400252fb:	call   QWORD PTR [rax+0xb8]
   140025301:	test   rax,rax
   140025304:	je     0x140025317
   140025306:	mov    rcx,rax
   140025309:	call   QWORD PTR [rip+0xd1c9]        # 0x1400324d8
   14002530f:	test   al,al
   140025311:	je     0x140025317
   140025313:	mov    al,0x1
   140025315:	jmp    0x140025355
   140025317:	mov    rcx,QWORD PTR [rip+0x21e6a]        # 0x140047188
   14002531e:	lea    rdx,[rsp+0x40]
   140025323:	mov    r8d,0x200
   140025329:	mov    rax,QWORD PTR [rcx]
   14002532c:	call   QWORD PTR [rax+0x170]
   140025332:	test   al,al
   140025334:	je     0x140025355
   140025336:	mov    r9d,esi
   140025339:	lea    rcx,[rsp+0x40]
   14002533e:	mov    r8,rbx
   140025341:	mov    rdx,rdi
   140025344:	call   QWORD PTR [rip+0xd1b6]        # 0x140032500
   14002534a:	mov    dl,0x5c
   14002534c:	mov    rcx,rbx
   14002534f:	call   QWORD PTR [rip+0xd193]        # 0x1400324e8
   140025355:	lea    r11,[rsp+0x240]
   14002535d:	mov    rbx,QWORD PTR [r11+0x10]
   140025361:	mov    rbp,QWORD PTR [r11+0x18]
   140025365:	mov    rsi,QWORD PTR [r11+0x20]
   140025369:	mov    rsp,r11
   14002536c:	pop    rdi
   14002536d:	ret    
   14002536e:	int3   
   14002536f:	int3   
   140025370:	mov    QWORD PTR [rsp+0x8],rbx
   140025375:	mov    QWORD PTR [rsp+0x10],rbp
   14002537a:	mov    QWORD PTR [rsp+0x18],rsi
   14002537f:	push   rdi
   140025380:	push   r14
   140025382:	push   r15
   140025384:	sub    rsp,0x20
   140025388:	mov    rbx,QWORD PTR [rsp+0x60]
   14002538d:	mov    esi,edx
   14002538f:	mov    r14,rcx
   140025392:	lea    rdx,[rip+0x12f47]        # 0x1400382e0
   140025399:	mov    rcx,rbx
   14002539c:	mov    ebp,r9d
   14002539f:	mov    rdi,r8
   1400253a2:	call   QWORD PTR [rip+0xd1c0]        # 0x140032568
   1400253a8:	mov    rdx,rbx
   1400253ab:	mov    rcx,r14
   1400253ae:	mov    r15,rax
   1400253b1:	test   rax,rax
   1400253b4:	je     0x1400253de
   1400253b6:	mov    r8d,r15d
   1400253b9:	sub    r8d,ebx
   1400253bc:	inc    r8d
   1400253bf:	cmp    esi,r8d
   1400253c2:	cmovl  r8d,esi
   1400253c6:	call   QWORD PTR [rip+0xd18c]        # 0x140032558
   1400253cc:	lea    rdx,[r15+0x8]
   1400253d0:	mov    r8d,ebp
   1400253d3:	mov    rcx,rdi
   1400253d6:	call   QWORD PTR [rip+0xd17c]        # 0x140032558
   1400253dc:	jmp    0x1400253ee
   1400253de:	mov    r8d,esi
   1400253e1:	call   QWORD PTR [rip+0xd171]        # 0x140032558
   1400253e7:	test   ebp,ebp
   1400253e9:	jle    0x1400253ee
   1400253eb:	mov    BYTE PTR [rdi],0x0
   1400253ee:	mov    rbx,QWORD PTR [rsp+0x40]
   1400253f3:	mov    rbp,QWORD PTR [rsp+0x48]
   1400253f8:	mov    rsi,QWORD PTR [rsp+0x50]
   1400253fd:	add    rsp,0x20
   140025401:	pop    r15
   140025403:	pop    r14
   140025405:	pop    rdi
   140025406:	ret    
   140025407:	int3   
   140025408:	int3   
   140025409:	int3   
   14002540a:	int3   
   14002540b:	int3   
   14002540c:	int3   
   14002540d:	int3   
   14002540e:	int3   
   14002540f:	int3   
   140025410:	rex push rbp
   140025412:	push   r14
   140025414:	push   r15
   140025416:	sub    rsp,0x30
   14002541a:	lea    rbp,[rsp+0x30]
   14002541f:	mov    QWORD PTR [rbp+0x20],rbx
   140025423:	mov    r14d,edx
   140025426:	mov    rbx,rcx
   140025429:	mov    QWORD PTR [rbp+0x28],rsi
   14002542d:	mov    rcx,QWORD PTR [rip+0x21d54]        # 0x140047188
   140025434:	mov    rsi,r8
   140025437:	mov    r8d,edx
   14002543a:	mov    QWORD PTR [rbp+0x30],rdi
   14002543e:	xor    r15d,r15d
   140025441:	xor    r9d,r9d
   140025444:	mov    rdx,rsi
   140025447:	mov    DWORD PTR [rsp+0x20],r15d
   14002544c:	mov    rax,QWORD PTR [rcx]
   14002544f:	call   QWORD PTR [rax+0xc0]
   140025455:	mov    edx,eax
   140025457:	lea    ecx,[rax+0x1f]
   14002545a:	movsxd r8,ecx
   14002545d:	and    r8,0xfffffffffffffff0
   140025461:	lea    rax,[r8+0xf]
   140025465:	cmp    rax,r8
   140025468:	ja     0x140025474
   14002546a:	movabs rax,0xffffffffffffff0
   140025474:	and    rax,0xfffffffffffffff0
   140025478:	call   0x1400263c0
   14002547d:	mov    rcx,QWORD PTR [rip+0x21d04]        # 0x140047188
   140025484:	sub    rsp,rax
   140025487:	mov    r8d,r14d
   14002548a:	mov    rax,QWORD PTR [rcx]
   14002548d:	lea    rdi,[rsp+0x30]
   140025492:	mov    DWORD PTR [rsp+0x20],edx
   140025496:	add    rdi,0x10
   14002549a:	and    rdi,0xffffffffffffffef
   14002549e:	mov    rdx,rsi
   1400254a1:	mov    r9,rdi
   1400254a4:	call   QWORD PTR [rax+0xc0]
   1400254aa:	mov    edx,0x3b
   1400254af:	mov    rcx,rdi
   1400254b2:	call   0x140027a28
   1400254b7:	mov    rsi,rax
   1400254ba:	test   rax,rax
   1400254bd:	je     0x140025537
   1400254bf:	nop
   1400254c0:	mov    rdx,rdi
   1400254c3:	mov    BYTE PTR [rsi],r15b
   1400254c6:	lea    rcx,[rbp+0x38]
   1400254ca:	mov    QWORD PTR [rbp+0x38],r15
   1400254ce:	call   0x14001b3a0
   1400254d3:	movsxd rdi,DWORD PTR [rbx]
   1400254d6:	cmp    edi,DWORD PTR [rbx+0x10]
   1400254d9:	jne    0x1400254e9
   1400254db:	mov    edx,0x1
   1400254e0:	lea    rcx,[rbx+0x8]
   1400254e4:	call   0x140013420
   1400254e9:	mov    rax,QWORD PTR [rbx+0x8]
   1400254ed:	inc    DWORD PTR [rbx]
   1400254ef:	lea    rdi,[rax+rdi*8]
   1400254f3:	test   rdi,rdi
   1400254f6:	je     0x14002550f
   1400254f8:	lea    rcx,[rbp+0x38]
   1400254fc:	mov    QWORD PTR [rdi],r15
   1400254ff:	call   0x14001b050
   140025504:	mov    rdx,rax
   140025507:	mov    rcx,rdi
   14002550a:	call   0x14001b3a0
   14002550f:	cmp    QWORD PTR [rbp+0x38],r15
   140025513:	je     0x14002551e
   140025515:	lea    rcx,[rbp+0x38]
   140025519:	call   0x14001b030
   14002551e:	lea    rdi,[rsi+0x1]
   140025522:	mov    edx,0x3b
   140025527:	mov    rcx,rdi
   14002552a:	call   0x140027a28
   14002552f:	mov    rsi,rax
   140025532:	test   rax,rax
   140025535:	jne    0x1400254c0
   140025537:	cmp    BYTE PTR [rdi],r15b
   14002553a:	je     0x140025597
   14002553c:	mov    rdx,rdi
   14002553f:	mov    QWORD PTR [rbp+0x38],r15
   140025543:	lea    rcx,[rbp+0x38]
   140025547:	call   0x14001b3a0
   14002554c:	movsxd rdi,DWORD PTR [rbx]
   14002554f:	cmp    edi,DWORD PTR [rbx+0x10]
   140025552:	jne    0x140025562
   140025554:	lea    rcx,[rbx+0x8]
   140025558:	mov    edx,0x1
   14002555d:	call   0x140013420
   140025562:	inc    DWORD PTR [rbx]
   140025564:	mov    rax,QWORD PTR [rbx+0x8]
   140025568:	lea    rbx,[rax+rdi*8]
   14002556c:	test   rbx,rbx
   14002556f:	je     0x140025588
   140025571:	lea    rcx,[rbp+0x38]
   140025575:	mov    QWORD PTR [rbx],r15
   140025578:	call   0x14001b050
   14002557d:	mov    rdx,rax
   140025580:	mov    rcx,rbx
   140025583:	call   0x14001b3a0
   140025588:	cmp    QWORD PTR [rbp+0x38],r15
   14002558c:	je     0x140025597
   14002558e:	lea    rcx,[rbp+0x38]
   140025592:	call   0x14001b030
   140025597:	mov    rbx,QWORD PTR [rbp+0x20]
   14002559b:	mov    rsi,QWORD PTR [rbp+0x28]
   14002559f:	mov    rdi,QWORD PTR [rbp+0x30]
   1400255a3:	mov    rsp,rbp
   1400255a6:	pop    r15
   1400255a8:	pop    r14
   1400255aa:	pop    rbp
   1400255ab:	ret    
   1400255ac:	int3   
   1400255ad:	int3   
   1400255ae:	int3   
   1400255af:	int3   
   1400255b0:	mov    rax,rsp
   1400255b3:	mov    QWORD PTR [rax+0x8],rcx
   1400255b7:	push   rsi
   1400255b8:	sub    rsp,0x70
   1400255bc:	mov    QWORD PTR [rax+0x10],rbx
   1400255c0:	mov    QWORD PTR [rax+0x20],rdi
   1400255c4:	mov    QWORD PTR [rax-0x18],r13
   1400255c8:	mov    r13,r9
   1400255cb:	mov    QWORD PTR [rax-0x20],r14
   1400255cf:	mov    r14,r8
   1400255d2:	test   r8,r8
   1400255d5:	je     0x1400255db
   1400255d7:	mov    BYTE PTR [r8],0x0
   1400255db:	xor    ebx,ebx
   1400255dd:	mov    QWORD PTR [rsp+0x90],rbp
   1400255e5:	mov    r8,rdx
   1400255e8:	mov    QWORD PTR [rsp+0x68],r12
   1400255ed:	xor    edx,edx
   1400255ef:	mov    QWORD PTR [rsp+0x50],r15
   1400255f4:	lea    rcx,[rsp+0x30]
   1400255f9:	mov    DWORD PTR [rsp+0x30],ebx
   1400255fd:	mov    QWORD PTR [rsp+0x38],rbx
   140025602:	mov    QWORD PTR [rsp+0x40],rbx
   140025607:	call   0x140025410
   14002560c:	mov    edi,DWORD PTR [rsp+0x30]
   140025610:	mov    rsi,QWORD PTR [rsp+0x38]
   140025615:	test   edi,edi
   140025617:	jle    0x14002566c
   140025619:	mov    ebp,DWORD PTR [rsp+0xa8]
   140025620:	mov    r12,QWORD PTR [rsp+0xa0]
   140025628:	nop    DWORD PTR [rax+rax*1+0x0]
   140025630:	movsxd rax,ebx
   140025633:	lea    r15,[rax*8+0x0]
   14002563b:	lea    rcx,[r15+rsi*1]
   14002563f:	call   0x14001b050
   140025644:	mov    rcx,QWORD PTR [rsp+0x80]
   14002564c:	mov    r9,r12
   14002564f:	mov    r8,r13
   140025652:	mov    DWORD PTR [rsp+0x20],ebp
   140025656:	mov    rdx,rax
   140025659:	call   0x140025740
   14002565e:	test   al,al
   140025660:	jne    0x14002570e
   140025666:	inc    ebx
   140025668:	cmp    ebx,edi
   14002566a:	jl     0x140025630
   14002566c:	xor    bpl,bpl
   14002566f:	mov    r15,QWORD PTR [rsp+0x50]
   140025674:	lea    eax,[rdi-0x1]
   140025677:	mov    r14,QWORD PTR [rsp+0x58]
   14002567c:	mov    r13,QWORD PTR [rsp+0x60]
   140025681:	mov    r12,QWORD PTR [rsp+0x68]
   140025686:	movsxd rdi,eax
   140025689:	test   eax,eax
   14002568b:	js     0x1400256a9
   14002568d:	lea    rbx,[rsi+rdi*8]
   140025691:	cmp    QWORD PTR [rbx],0x0
   140025695:	je     0x14002569f
   140025697:	mov    rcx,rbx
   14002569a:	call   0x14001b030
   14002569f:	sub    rbx,0x8
   1400256a3:	sub    rdi,0x1
   1400256a7:	jns    0x140025691
   1400256a9:	mov    ebx,DWORD PTR [rsp+0x44]
   1400256ad:	mov    rdi,QWORD PTR [rsp+0x98]
   1400256b5:	and    ebx,0xc0000000
   1400256bb:	jne    0x1400256d7
   1400256bd:	test   rsi,rsi
   1400256c0:	je     0x1400256d7
   1400256c2:	mov    rax,QWORD PTR [rip+0xccc7]        # 0x140032390
   1400256c9:	mov    rdx,rsi
   1400256cc:	mov    rcx,QWORD PTR [rax]
   1400256cf:	mov    rax,QWORD PTR [rcx]
   1400256d2:	call   QWORD PTR [rax+0x28]
   1400256d5:	xor    esi,esi
   1400256d7:	test   ebx,ebx
   1400256d9:	mov    rbx,QWORD PTR [rsp+0x88]
   1400256e1:	jne    0x1400256fc
   1400256e3:	test   rsi,rsi
   1400256e6:	je     0x1400256fc
   1400256e8:	mov    rcx,QWORD PTR [rip+0xcca1]        # 0x140032390
   1400256ef:	mov    rdx,rsi
   1400256f2:	mov    rcx,QWORD PTR [rcx]
   1400256f5:	mov    r8,QWORD PTR [rcx]
   1400256f8:	call   QWORD PTR [r8+0x28]
   1400256fc:	movzx  eax,bpl
   140025700:	mov    rbp,QWORD PTR [rsp+0x90]
   140025708:	add    rsp,0x70
   14002570c:	pop    rsi
   14002570d:	ret    
   14002570e:	test   r14,r14
   140025711:	je     0x140025736
   140025713:	lea    rcx,[r15+rsi*1]
   140025717:	call   0x14001b050
   14002571c:	mov    r8d,ebp
   14002571f:	mov    rdx,rax
   140025722:	mov    rcx,r14
   140025725:	call   QWORD PTR [rip+0xce2d]        # 0x140032558
   14002572b:	mov    dl,0x2f
   14002572d:	mov    rcx,r14
   140025730:	call   QWORD PTR [rip+0xcd9a]        # 0x1400324d0
   140025736:	mov    bpl,0x1
   140025739:	jmp    0x14002566f
   14002573e:	int3   
   14002573f:	int3   
   140025740:	mov    QWORD PTR [rsp+0x8],rbx
   140025745:	mov    QWORD PTR [rsp+0x10],rsi
   14002574a:	mov    QWORD PTR [rsp+0x18],rdi
   14002574f:	mov    QWORD PTR [rsp+0x20],r14
   140025754:	push   rbp
   140025755:	lea    rbp,[rsp-0x630]
   14002575d:	sub    rsp,0x730
   140025764:	mov    rdi,r9
   140025767:	mov    r14,r8
   14002576a:	mov    rbx,rdx
   14002576d:	mov    rsi,rcx
   140025770:	test   r8,r8
   140025773:	je     0x140025779
   140025775:	mov    BYTE PTR [r8],0x0
   140025779:	test   rdi,rdi
   14002577c:	je     0x140025782
   14002577e:	mov    BYTE PTR [r9],0x0
   140025782:	mov    r8b,0x1
   140025785:	mov    rdx,rsi
   140025788:	mov    rcx,rbx
   14002578b:	call   QWORD PTR [rip+0xcc9f]        # 0x140032430
   140025791:	test   al,al
   140025793:	jne    0x14002579c
   140025795:	xor    al,al
   140025797:	jmp    0x140025983
   14002579c:	mov    r9d,0x200
   1400257a2:	lea    r8,[rbp+0x30]
   1400257a6:	mov    rdx,rbx
   1400257a9:	mov    rcx,rsi
   1400257ac:	call   QWORD PTR [rip+0xcca6]        # 0x140032458
   1400257b2:	test   al,al
   1400257b4:	je     0x140025795
   1400257b6:	cmp    BYTE PTR [rbp+0x30],0x0
   1400257ba:	je     0x140025981
   1400257c0:	lea    r8,[rbp+0x30]
   1400257c4:	mov    edx,0x104
   1400257c9:	lea    rcx,[rsp+0x20]
   1400257ce:	call   QWORD PTR [rip+0xcc7c]        # 0x140032450
   1400257d4:	or     rbx,0xffffffffffffffff
   1400257d8:	lea    rcx,[rsp+0x20]
   1400257dd:	test   al,al
   1400257df:	jne    0x1400257fa
   1400257e1:	mov    r8d,0x104
   1400257e7:	lea    rdx,[rbp+0x30]
   1400257eb:	call   QWORD PTR [rip+0xcd67]        # 0x140032558
   1400257f1:	lea    rdx,[rip+0xcfa8]        # 0x1400327a0
   1400257f8:	jmp    0x14002582c
   1400257fa:	mov    rax,rbx
   1400257fd:	nop    DWORD PTR [rax]
   140025800:	inc    rax
   140025803:	cmp    BYTE PTR [rcx+rax*1],0x0
   140025807:	jne    0x140025800
   140025809:	cdqe   
   14002580b:	lea    rdx,[rbp+0x31]
   14002580f:	add    rdx,rax
   140025812:	lea    rcx,[rbp+0x230]
   140025819:	mov    r8d,0x200
   14002581f:	call   QWORD PTR [rip+0xcd33]        # 0x140032558
   140025825:	lea    rdx,[rbp+0x230]
   14002582c:	mov    r8d,0x200
   140025832:	lea    rcx,[rbp+0x30]
   140025836:	call   QWORD PTR [rip+0xcd1c]        # 0x140032558
   14002583c:	lea    rcx,[rsp+0x20]
   140025841:	mov    rax,rbx
   140025844:	inc    rax
   140025847:	cmp    BYTE PTR [rcx+rax*1],0x0
   14002584b:	jne    0x140025844
   14002584d:	cmp    eax,0x7
   140025850:	jl     0x14002593a
   140025856:	add    eax,0xfffffff9
   140025859:	lea    rdx,[rsp+0x20]
   14002585e:	movsxd rcx,eax
   140025861:	lea    r8,[rip+0x12a78]        # 0x1400382e0
   140025868:	add    rdx,rcx
   14002586b:	xor    eax,eax
   14002586d:	nop    DWORD PTR [rax]
   140025870:	movzx  ecx,BYTE PTR [rdx+rax*1]
   140025874:	inc    rax
   140025877:	cmp    cl,BYTE PTR [r8+rax*1-0x1]
   14002587c:	jne    0x14002593a
   140025882:	cmp    rax,0x8
   140025886:	jne    0x140025870
   140025888:	cmp    cl,BYTE PTR [r8+rax*1-0x1]
   14002588d:	jne    0x14002593a
   140025893:	cmp    BYTE PTR [rbp+0x30],0x0
   140025897:	je     0x140025795
   14002589d:	lea    r8,[rbp+0x30]
   1400258a1:	mov    edx,0x104
   1400258a6:	lea    rcx,[rbp+0x230]
   1400258ad:	call   QWORD PTR [rip+0xcb9d]        # 0x140032450
   1400258b3:	test   al,al
   1400258b5:	jne    0x1400258d7
   1400258b7:	mov    r8d,0x104
   1400258bd:	lea    rdx,[rbp+0x30]
   1400258c1:	lea    rcx,[rbp+0x230]
   1400258c8:	call   QWORD PTR [rip+0xcc8a]        # 0x140032558
   1400258ce:	lea    rdx,[rip+0xcecb]        # 0x1400327a0
   1400258d5:	jmp    0x14002590d
   1400258d7:	lea    rax,[rbp+0x230]
   1400258de:	xchg   ax,ax
   1400258e0:	inc    rbx
   1400258e3:	cmp    BYTE PTR [rax+rbx*1],0x0
   1400258e7:	jne    0x1400258e0
   1400258e9:	movsxd rax,ebx
   1400258ec:	lea    rdx,[rbp+0x31]
   1400258f0:	add    rdx,rax
   1400258f3:	lea    rcx,[rbp+0x430]
   1400258fa:	mov    r8d,0x200
   140025900:	call   QWORD PTR [rip+0xcc52]        # 0x140032558
   140025906:	lea    rdx,[rbp+0x430]
   14002590d:	mov    r8d,0x200
   140025913:	lea    rcx,[rbp+0x30]
   140025917:	call   QWORD PTR [rip+0xcc3b]        # 0x140032558
   14002591d:	mov    r9d,0x104
   140025923:	lea    r8,[rsp+0x20]
   140025928:	lea    rdx,[rbp+0x230]
   14002592f:	lea    rcx,[rsp+0x20]
   140025934:	call   QWORD PTR [rip+0xcbc6]        # 0x140032500
   14002593a:	mov    ebx,DWORD PTR [rbp+0x660]
   140025940:	test   r14,r14
   140025943:	je     0x140025961
   140025945:	mov    r8d,ebx
   140025948:	lea    rdx,[rsp+0x20]
   14002594d:	mov    rcx,r14
   140025950:	call   QWORD PTR [rip+0xcc02]        # 0x140032558
   140025956:	mov    dl,0x2f
   140025958:	mov    rcx,r14
   14002595b:	call   QWORD PTR [rip+0xcb6f]        # 0x1400324d0
   140025961:	test   rdi,rdi
   140025964:	je     0x140025981
   140025966:	mov    r8d,ebx
   140025969:	lea    rdx,[rbp+0x30]
   14002596d:	mov    rcx,rdi
   140025970:	call   QWORD PTR [rip+0xcbe2]        # 0x140032558
   140025976:	mov    dl,0x2f
   140025978:	mov    rcx,rdi
   14002597b:	call   QWORD PTR [rip+0xcb4f]        # 0x1400324d0
   140025981:	mov    al,0x1
   140025983:	lea    r11,[rsp+0x730]
   14002598b:	mov    rbx,QWORD PTR [r11+0x10]
   14002598f:	mov    rsi,QWORD PTR [r11+0x18]
   140025993:	mov    rdi,QWORD PTR [r11+0x20]
   140025997:	mov    r14,QWORD PTR [r11+0x28]
   14002599b:	mov    rsp,r11
   14002599e:	pop    rbp
   14002599f:	ret    
   1400259a0:	mov    QWORD PTR [rsp+0x10],rdx
   1400259a5:	mov    QWORD PTR [rsp+0x18],r8
   1400259aa:	mov    QWORD PTR [rsp+0x20],r9
   1400259af:	sub    rsp,0x28
   1400259b3:	mov    r8,rdx
   1400259b6:	lea    r9,[rsp+0x40]
   1400259bb:	mov    edx,0x100
   1400259c0:	call   QWORD PTR [rip+0xcb82]        # 0x140032548
   1400259c6:	add    rsp,0x28
   1400259ca:	ret    
   1400259cb:	int3   
   1400259cc:	int3   
   1400259cd:	int3   
   1400259ce:	int3   
   1400259cf:	int3   
   1400259d0:	mov    QWORD PTR [rsp+0x8],rdi
   1400259d5:	mov    r8,rcx
   1400259d8:	mov    WORD PTR [rcx+0x488],0x0
   1400259e1:	lea    rax,[rip+0x12908]        # 0x1400382f0
   1400259e8:	mov    edx,0x10
   1400259ed:	mov    QWORD PTR [rcx],rax
   1400259f0:	lea    rdi,[rcx+0x8]
   1400259f4:	xor    eax,eax
   1400259f6:	mov    ecx,edx
   1400259f8:	rep stos QWORD PTR es:[rdi],rax
   1400259fb:	lea    rax,[r8+0x88]
   140025a02:	nop    DWORD PTR [rax+0x0]
   140025a06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140025a10:	mov    QWORD PTR [rax],0xffffffffffffffff
   140025a17:	mov    QWORD PTR [rax+0x8],0xffffffffffffffff
   140025a1f:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
   140025a27:	lea    rax,[rax+0x40]
   140025a2b:	mov    QWORD PTR [rax-0x28],0xffffffffffffffff
   140025a33:	mov    QWORD PTR [rax-0x20],0xffffffffffffffff
   140025a3b:	mov    QWORD PTR [rax-0x18],0xffffffffffffffff
   140025a43:	mov    QWORD PTR [rax-0x10],0xffffffffffffffff
   140025a4b:	mov    QWORD PTR [rax-0x8],0xffffffffffffffff
   140025a53:	sub    rdx,0x1
   140025a57:	jne    0x140025a10
   140025a59:	mov    rdi,QWORD PTR [rsp+0x8]
   140025a5e:	mov    rax,r8
   140025a61:	ret    
   140025a62:	int3   
   140025a63:	int3   
   140025a64:	int3   
   140025a65:	int3   
   140025a66:	int3   
   140025a67:	int3   
   140025a68:	int3   
   140025a69:	int3   
   140025a6a:	int3   
   140025a6b:	int3   
   140025a6c:	int3   
   140025a6d:	int3   
   140025a6e:	int3   
   140025a6f:	int3   
   140025a70:	mov    QWORD PTR [rsp+0x8],rbx
   140025a75:	mov    QWORD PTR [rsp+0x10],rsi
   140025a7a:	push   rdi
   140025a7b:	sub    rsp,0x20
   140025a7f:	lea    rax,[rip+0x1286a]        # 0x1400382f0
   140025a86:	mov    edi,0x10
   140025a8b:	mov    QWORD PTR [rcx],rax
   140025a8e:	lea    rbx,[rcx+0x8]
   140025a92:	xor    esi,esi
   140025a94:	mov    rdx,QWORD PTR [rbx]
   140025a97:	test   rdx,rdx
   140025a9a:	je     0x140025ab0
   140025a9c:	mov    rcx,QWORD PTR [rip+0x216e5]        # 0x140047188
   140025aa3:	add    rcx,0x8
   140025aa7:	mov    rax,QWORD PTR [rcx]
   140025aaa:	call   QWORD PTR [rax+0x18]
   140025aad:	mov    QWORD PTR [rbx],rsi
   140025ab0:	add    rbx,0x8
   140025ab4:	sub    rdi,0x1
   140025ab8:	jne    0x140025a94
   140025aba:	mov    rbx,QWORD PTR [rsp+0x30]
   140025abf:	mov    rsi,QWORD PTR [rsp+0x38]
   140025ac4:	add    rsp,0x20
   140025ac8:	pop    rdi
   140025ac9:	ret    
   140025aca:	int3   
   140025acb:	int3   
   140025acc:	int3   
   140025acd:	int3   
   140025ace:	int3   
   140025acf:	int3   
   140025ad0:	mov    QWORD PTR [rsp+0x8],rdi
   140025ad5:	lea    rdi,[rcx+0x88]
   140025adc:	movsxd rax,edx
   140025adf:	mov    ecx,0x100
   140025ae4:	rep stos DWORD PTR es:[rdi],eax
   140025ae6:	mov    rdi,QWORD PTR [rsp+0x8]
   140025aeb:	ret    
   140025aec:	int3   
   140025aed:	int3   
   140025aee:	int3   
   140025aef:	int3   
   140025af0:	movsxd rax,edx
   140025af3:	mov    DWORD PTR [rcx+rax*4+0x88],r8d
   140025afb:	ret    
   140025afc:	int3   
   140025afd:	int3   
   140025afe:	int3   
   140025aff:	int3   
   140025b00:	mov    QWORD PTR [rsp+0x8],rbx
   140025b05:	push   rdi
   140025b06:	sub    rsp,0x20
   140025b0a:	xor    ebx,ebx
   140025b0c:	lea    rax,[rcx+0x8]
   140025b10:	mov    r10d,ebx
   140025b13:	mov    rdi,rcx
   140025b16:	cmp    QWORD PTR [rax],0x0
   140025b1a:	je     0x140025b39
   140025b1c:	inc    ebx
   140025b1e:	inc    r10
   140025b21:	add    rax,0x8
   140025b25:	cmp    r10,0x10
   140025b29:	jl     0x140025b16
   140025b2b:	or     eax,0xffffffff
   140025b2e:	mov    rbx,QWORD PTR [rsp+0x30]
   140025b33:	add    rsp,0x20
   140025b37:	pop    rdi
   140025b38:	ret    
   140025b39:	cmp    ebx,0xffffffff
   140025b3c:	je     0x140025b58
   140025b3e:	mov    rcx,QWORD PTR [rip+0x21643]        # 0x140047188
   140025b45:	add    rcx,0x8
   140025b49:	mov    r10,QWORD PTR [rcx]
   140025b4c:	call   QWORD PTR [r10+0x10]
   140025b50:	movsxd rcx,ebx
   140025b53:	mov    QWORD PTR [rdi+rcx*8+0x8],rax
   140025b58:	mov    eax,ebx
   140025b5a:	mov    rbx,QWORD PTR [rsp+0x30]
   140025b5f:	add    rsp,0x20
   140025b63:	pop    rdi
   140025b64:	ret    
   140025b65:	int3   
   140025b66:	int3   
   140025b67:	int3   
   140025b68:	int3   
   140025b69:	int3   
   140025b6a:	int3   
   140025b6b:	int3   
   140025b6c:	int3   
   140025b6d:	int3   
   140025b6e:	int3   
   140025b6f:	int3   
   140025b70:	mov    QWORD PTR [rsp+0x18],rbp
   140025b75:	push   rsi
   140025b76:	sub    rsp,0x20
   140025b7a:	movsxd rbp,edx
   140025b7d:	mov    rsi,rcx
   140025b80:	cmp    ebp,0xffffffff
   140025b83:	je     0x140025be0
   140025b85:	mov    QWORD PTR [rsp+0x30],rbx
   140025b8a:	xor    ebx,ebx
   140025b8c:	mov    QWORD PTR [rsp+0x38],rdi
   140025b91:	lea    rdi,[rcx+0x88]
   140025b98:	cmp    DWORD PTR [rdi],ebp
   140025b9a:	jne    0x140025ba7
   140025b9c:	mov    rax,QWORD PTR [rsi]
   140025b9f:	mov    edx,ebx
   140025ba1:	mov    rcx,rsi
   140025ba4:	call   QWORD PTR [rax+0x38]
   140025ba7:	inc    ebx
   140025ba9:	add    rdi,0x4
   140025bad:	cmp    ebx,0x100
   140025bb3:	jl     0x140025b98
   140025bb5:	mov    rcx,QWORD PTR [rip+0x215cc]        # 0x140047188
   140025bbc:	lea    rbx,[rsi+rbp*8]
   140025bc0:	mov    rdx,QWORD PTR [rbx+0x8]
   140025bc4:	add    rcx,0x8
   140025bc8:	mov    rax,QWORD PTR [rcx]
   140025bcb:	call   QWORD PTR [rax+0x18]
   140025bce:	mov    rdi,QWORD PTR [rsp+0x38]
   140025bd3:	mov    QWORD PTR [rbx+0x8],0x0
   140025bdb:	mov    rbx,QWORD PTR [rsp+0x30]
   140025be0:	mov    rbp,QWORD PTR [rsp+0x40]
   140025be5:	add    rsp,0x20
   140025be9:	pop    rsi
   140025bea:	ret    
   140025beb:	int3   
   140025bec:	int3   
   140025bed:	int3   
   140025bee:	int3   
   140025bef:	int3   
   140025bf0:	sub    rsp,0x88
   140025bf7:	lea    rcx,[rsp+0x50]
   140025bfc:	call   QWORD PTR [rip+0xc85e]        # 0x140032460
   140025c02:	mov    eax,DWORD PTR [rsp+0x50]
   140025c06:	lea    r8,[rip+0x1273b]        # 0x140038348
   140025c0d:	mov    ecx,DWORD PTR [rsp+0x64]
   140025c11:	mov    edx,0x80
   140025c16:	mov    r9d,DWORD PTR [rsp+0x60]
   140025c1b:	add    ecx,0x76c
   140025c21:	mov    DWORD PTR [rsp+0x40],eax
   140025c25:	inc    r9d
   140025c28:	mov    eax,DWORD PTR [rsp+0x54]
   140025c2c:	mov    DWORD PTR [rsp+0x38],eax
   140025c30:	mov    eax,DWORD PTR [rsp+0x58]
   140025c34:	mov    DWORD PTR [rsp+0x30],eax
   140025c38:	mov    eax,DWORD PTR [rsp+0x5c]
   140025c3c:	mov    DWORD PTR [rsp+0x28],ecx
   140025c40:	lea    rcx,[rip+0x22689]        # 0x1400482d0
   140025c47:	mov    DWORD PTR [rsp+0x20],eax
   140025c4b:	call   QWORD PTR [rip+0xc91f]        # 0x140032570
   140025c51:	lea    rax,[rip+0x22678]        # 0x1400482d0
   140025c58:	add    rsp,0x88
   140025c5f:	ret    
   140025c60:	mov    r11,rsp
   140025c63:	push   rbp
   140025c64:	push   rsi
   140025c65:	push   r14
   140025c67:	sub    rsp,0x120
   140025c6e:	test   BYTE PTR [rdx+0x4],0x1
   140025c72:	mov    rbp,r8
   140025c75:	mov    r14,rdx
   140025c78:	mov    rsi,rcx
   140025c7b:	jne    0x140025dd1
   140025c81:	movsxd rax,DWORD PTR [rdx]
   140025c84:	movsxd rcx,DWORD PTR [rcx+rax*4+0x88]
   140025c8c:	cmp    ecx,0xf
   140025c8f:	ja     0x140025dd1
   140025c95:	mov    QWORD PTR [r11+0x8],rbx
   140025c99:	or     rbx,0xffffffffffffffff
   140025c9d:	mov    QWORD PTR [r11+0x10],rdi
   140025ca1:	mov    rdi,rbx
   140025ca4:	mov    QWORD PTR [r11+0x18],r15
   140025ca8:	mov    r15,QWORD PTR [rsi+rcx*8+0x8]
   140025cad:	nop    DWORD PTR [rax]
   140025cb0:	inc    rdi
   140025cb3:	cmp    BYTE PTR [rdi+r8*1],0x0
   140025cb8:	jne    0x140025cb0
   140025cba:	cmp    BYTE PTR [rsi+0x488],0x0
   140025cc1:	je     0x140025d33
   140025cc3:	cmp    BYTE PTR [rsi+0x489],0x0
   140025cca:	je     0x140025d17
   140025ccc:	call   0x140025bf0
   140025cd1:	mov    rcx,QWORD PTR [rip+0x214b0]        # 0x140047188
   140025cd8:	mov    r8,rbx
   140025cdb:	add    rcx,0x8
   140025cdf:	mov    r10,QWORD PTR [rcx]
   140025ce2:	inc    r8
   140025ce5:	cmp    BYTE PTR [rax+r8*1],0x0
   140025cea:	jne    0x140025ce2
   140025cec:	mov    r9,r15
   140025cef:	mov    rdx,rax
   140025cf2:	call   QWORD PTR [r10+0x8]
   140025cf6:	mov    rcx,QWORD PTR [rip+0x2148b]        # 0x140047188
   140025cfd:	lea    rdx,[rip+0x12664]        # 0x140038368
   140025d04:	add    rcx,0x8
   140025d08:	mov    r9,r15
   140025d0b:	mov    r8d,0x2
   140025d11:	mov    rax,QWORD PTR [rcx]
   140025d14:	call   QWORD PTR [rax+0x8]
   140025d17:	lea    rdx,[rip+0xe61a]        # 0x140034338
   140025d1e:	mov    rcx,rbp
   140025d21:	call   QWORD PTR [rip+0xc841]        # 0x140032568
   140025d27:	test   rax,rax
   140025d2a:	setne  al
   140025d2d:	mov    BYTE PTR [rsi+0x489],al
   140025d33:	mov    rax,QWORD PTR [rip+0xc64e]        # 0x140032388
   140025d3a:	mov    ecx,DWORD PTR [r14]
   140025d3d:	cmp    ecx,DWORD PTR [rax]
   140025d3f:	je     0x140025d8b
   140025d41:	call   QWORD PTR [rip+0xc721]        # 0x140032468
   140025d47:	test   rax,rax
   140025d4a:	je     0x140025d8b
   140025d4c:	lea    r8,[rax+0x18]
   140025d50:	lea    rdx,[rip+0x12615]        # 0x14003836c
   140025d57:	lea    rcx,[rsp+0x20]
   140025d5c:	call   0x1400259a0
   140025d61:	mov    rcx,QWORD PTR [rip+0x21420]        # 0x140047188
   140025d68:	lea    rdx,[rsp+0x20]
   140025d6d:	add    rcx,0x8
   140025d71:	mov    rax,QWORD PTR [rcx]
   140025d74:	inc    rbx
   140025d77:	cmp    BYTE PTR [rdx+rbx*1],0x0
   140025d7b:	jne    0x140025d74
   140025d7d:	mov    r8,rbx
   140025d80:	lea    rdx,[rsp+0x20]
   140025d85:	mov    r9,r15
   140025d88:	call   QWORD PTR [rax+0x8]
   140025d8b:	mov    rcx,QWORD PTR [rip+0x213f6]        # 0x140047188
   140025d92:	mov    r9,r15
   140025d95:	add    rcx,0x8
   140025d99:	mov    r8d,edi
   140025d9c:	mov    rdx,rbp
   140025d9f:	mov    rax,QWORD PTR [rcx]
   140025da2:	call   QWORD PTR [rax+0x8]
   140025da5:	mov    rcx,QWORD PTR [rip+0x213dc]        # 0x140047188
   140025dac:	mov    rdx,r15
   140025daf:	add    rcx,0x8
   140025db3:	mov    rax,QWORD PTR [rcx]
   140025db6:	call   QWORD PTR [rax+0x40]
   140025db9:	mov    r15,QWORD PTR [rsp+0x150]
   140025dc1:	mov    rdi,QWORD PTR [rsp+0x148]
   140025dc9:	mov    rbx,QWORD PTR [rsp+0x140]
   140025dd1:	add    rsp,0x120
   140025dd8:	pop    r14
   140025dda:	pop    rsi
   140025ddb:	pop    rbp
   140025ddc:	ret    
   140025ddd:	int3   
   140025dde:	int3   
   140025ddf:	int3   
   140025de0:	cmp    edx,0xf
   140025de3:	ja     0x140025e4b
   140025de5:	mov    QWORD PTR [rsp+0x10],rsi
   140025dea:	push   rdi
   140025deb:	sub    rsp,0x20
   140025def:	movsxd rax,edx
   140025df2:	mov    rdi,r9
   140025df5:	mov    rdx,QWORD PTR [rcx+rax*8+0x8]
   140025dfa:	mov    rsi,r8
   140025dfd:	mov    QWORD PTR [rsp+0x30],rbx
   140025e02:	lea    rbx,[rcx+rax*8]
   140025e06:	test   rdx,rdx
   140025e09:	je     0x140025e3c
   140025e0b:	mov    rcx,QWORD PTR [rip+0x21376]        # 0x140047188
   140025e12:	add    rcx,0x8
   140025e16:	mov    rax,QWORD PTR [rcx]
   140025e19:	call   QWORD PTR [rax+0x18]
   140025e1c:	mov    rcx,QWORD PTR [rip+0x21365]        # 0x140047188
   140025e23:	mov    r8,rdi
   140025e26:	mov    r9,QWORD PTR [rsp+0x50]
   140025e2b:	add    rcx,0x8
   140025e2f:	mov    rdx,rsi
   140025e32:	mov    rax,QWORD PTR [rcx]
   140025e35:	call   QWORD PTR [rax+0x10]
   140025e38:	mov    QWORD PTR [rbx+0x8],rax
   140025e3c:	mov    rbx,QWORD PTR [rsp+0x30]
   140025e41:	mov    rsi,QWORD PTR [rsp+0x38]
   140025e46:	add    rsp,0x20
   140025e4a:	pop    rdi
   140025e4b:	ret    
   140025e4c:	int3   
   140025e4d:	int3   
   140025e4e:	int3   
   140025e4f:	int3   
   140025e50:	mov    BYTE PTR [rcx+0x488],dl
   140025e56:	mov    BYTE PTR [rcx+0x489],dl
   140025e5c:	ret    
   140025e5d:	int3   
   140025e5e:	int3   
   140025e5f:	int3   
   140025e60:	lea    rax,[rcx+0x88]
   140025e67:	mov    ecx,0x10
   140025e6c:	nop    DWORD PTR [rax+0x0]
   140025e70:	mov    QWORD PTR [rax],0xffffffffffffffff
   140025e77:	mov    QWORD PTR [rax+0x8],0xffffffffffffffff
   140025e7f:	mov    QWORD PTR [rax+0x10],0xffffffffffffffff
   140025e87:	lea    rax,[rax+0x40]
   140025e8b:	mov    QWORD PTR [rax-0x28],0xffffffffffffffff
   140025e93:	mov    QWORD PTR [rax-0x20],0xffffffffffffffff
   140025e9b:	mov    QWORD PTR [rax-0x18],0xffffffffffffffff
   140025ea3:	mov    QWORD PTR [rax-0x10],0xffffffffffffffff
   140025eab:	mov    QWORD PTR [rax-0x8],0xffffffffffffffff
   140025eb3:	sub    rcx,0x1
   140025eb7:	jne    0x140025e70
   140025eb9:	ret    
   140025eba:	int3   
   140025ebb:	int3   
   140025ebc:	int3   
   140025ebd:	int3   
   140025ebe:	int3   
   140025ebf:	int3   
   140025ec0:	movsxd rax,edx
   140025ec3:	mov    DWORD PTR [rcx+rax*4+0x88],0xffffffff
   140025ece:	ret    
   140025ecf:	int3   
   140025ed0:	lea    rax,[rip+0x223e1]        # 0x1400482b8
   140025ed7:	ret    
   140025ed8:	int3   
   140025ed9:	int3   
   140025eda:	int3   
   140025edb:	int3   
   140025edc:	int3   
   140025edd:	int3   
   140025ede:	int3   
   140025edf:	int3   
   140025ee0:	mov    QWORD PTR [rsp+0x8],rbx
   140025ee5:	mov    QWORD PTR [rsp+0x10],rsi
   140025eea:	push   rdi
   140025eeb:	sub    rsp,0x240
   140025ef2:	lea    rax,[rip+0x12487]        # 0x140038380
   140025ef9:	mov    rsi,rdx
   140025efc:	mov    QWORD PTR [rcx],rax
   140025eff:	mov    rbx,rcx
   140025f02:	mov    QWORD PTR [rcx+0x8],0x0
   140025f0a:	xor    edx,edx
   140025f0c:	mov    DWORD PTR [rcx+0x10],r8d
   140025f10:	mov    r8d,0x104
   140025f16:	lea    rcx,[rsp+0x20]
   140025f1b:	call   0x1400277b0
   140025f20:	mov    r8d,0x104
   140025f26:	lea    rdx,[rsp+0x20]
   140025f2b:	mov    rcx,rsi
   140025f2e:	call   QWORD PTR [rip+0xc23c]        # 0x140032170
   140025f34:	dec    eax
   140025f36:	cmp    eax,0x103
   140025f3b:	ja     0x140025f7c
   140025f3d:	xor    edx,edx
   140025f3f:	lea    rcx,[rsp+0x130]
   140025f47:	mov    r8d,0x104
   140025f4d:	call   0x1400277b0
   140025f52:	mov    r8d,0x104
   140025f58:	lea    rdx,[rsp+0x130]
   140025f60:	lea    rcx,[rsp+0x20]
   140025f65:	call   QWORD PTR [rip+0xc20d]        # 0x140032178
   140025f6b:	dec    eax
   140025f6d:	lea    rdx,[rsp+0x130]
   140025f75:	cmp    eax,0x103
   140025f7a:	jbe    0x140025f7f
   140025f7c:	mov    rdx,rsi
   140025f7f:	lea    rcx,[rbx+0x8]
   140025f83:	call   0x14001aae0
   140025f88:	lea    r11,[rsp+0x240]
   140025f90:	mov    rax,rbx
   140025f93:	mov    rbx,QWORD PTR [r11+0x10]
   140025f97:	mov    rsi,QWORD PTR [r11+0x18]
   140025f9b:	mov    rsp,r11
   140025f9e:	pop    rdi
   140025f9f:	ret    
   140025fa0:	mov    QWORD PTR [rsp+0x8],rbx
   140025fa5:	push   rdi
   140025fa6:	sub    rsp,0x20
   140025faa:	lea    rax,[rip+0x123cf]        # 0x140038380
   140025fb1:	mov    rbx,rcx
   140025fb4:	mov    QWORD PTR [rcx],rax
   140025fb7:	mov    edi,edx
   140025fb9:	add    rcx,0x8
   140025fbd:	cmp    QWORD PTR [rcx],0x0
   140025fc1:	je     0x140025fc8
   140025fc3:	call   0x14001b030
   140025fc8:	test   dil,0x1
   140025fcc:	je     0x140025fdb
   140025fce:	mov    edx,0x18
   140025fd3:	mov    rcx,rbx
   140025fd6:	call   0x14002639c
   140025fdb:	mov    rax,rbx
   140025fde:	mov    rbx,QWORD PTR [rsp+0x30]
   140025fe3:	add    rsp,0x20
   140025fe7:	pop    rdi
   140025fe8:	ret    
   140025fe9:	int3   
   140025fea:	int3   
   140025feb:	int3   
   140025fec:	int3   
   140025fed:	int3   
   140025fee:	int3   
   140025fef:	int3   
   140025ff0:	rex push rbx
   140025ff2:	sub    rsp,0x20
   140025ff6:	cmp    QWORD PTR [rip+0x2121a],0x0        # 0x140047218
   140025ffe:	mov    rbx,rcx
   140026001:	jne    0x14002600b
   140026003:	mov    al,0x1
   140026005:	add    rsp,0x20
   140026009:	pop    rbx
   14002600a:	ret    
   14002600b:	add    rcx,0x8
   14002600f:	call   0x14001b050
   140026014:	mov    rcx,QWORD PTR [rip+0x211fd]        # 0x140047218
   14002601b:	mov    rdx,rax
   14002601e:	mov    r8d,DWORD PTR [rbx+0x10]
   140026022:	mov    r9,QWORD PTR [rcx]
   140026025:	add    rsp,0x20
   140026029:	pop    rbx
   14002602a:	rex.WB jmp QWORD PTR [r9+0xf0]
   140026031:	int3   
   140026032:	int3   
   140026033:	int3   
   140026034:	int3   
   140026035:	int3   
   140026036:	int3   
   140026037:	int3   
   140026038:	int3   
   140026039:	int3   
   14002603a:	int3   
   14002603b:	int3   
   14002603c:	int3   
   14002603d:	int3   
   14002603e:	int3   
   14002603f:	int3   
   140026040:	rex push rbx
   140026042:	sub    rsp,0x20
   140026046:	cmp    QWORD PTR [rip+0x211ca],0x0        # 0x140047218
   14002604e:	mov    rbx,rcx
   140026051:	jne    0x14002605b
   140026053:	mov    al,0x1
   140026055:	add    rsp,0x20
   140026059:	pop    rbx
   14002605a:	ret    
   14002605b:	add    rcx,0x8
   14002605f:	call   0x14001b050
   140026064:	mov    rcx,QWORD PTR [rip+0x211ad]        # 0x140047218
   14002606b:	mov    rdx,rax
   14002606e:	mov    r8d,DWORD PTR [rbx+0x10]
   140026072:	mov    r9,QWORD PTR [rcx]
   140026075:	add    rsp,0x20
   140026079:	pop    rbx
   14002607a:	rex.WB jmp QWORD PTR [r9+0xf8]
   140026081:	int3   
   140026082:	int3   
   140026083:	int3   
   140026084:	int3   
   140026085:	int3   
   140026086:	int3   
   140026087:	int3   
   140026088:	int3   
   140026089:	int3   
   14002608a:	int3   
   14002608b:	int3   
   14002608c:	int3   
   14002608d:	int3   
   14002608e:	int3   
   14002608f:	int3   
   140026090:	rex push rbx
   140026092:	sub    rsp,0x20
   140026096:	cmp    QWORD PTR [rip+0x2117a],0x0        # 0x140047218
   14002609e:	mov    rbx,rcx
   1400260a1:	jne    0x1400260ac
   1400260a3:	or     eax,0xffffffff
   1400260a6:	add    rsp,0x20
   1400260aa:	pop    rbx
   1400260ab:	ret    
   1400260ac:	add    rcx,0x8
   1400260b0:	call   0x14001b050
   1400260b5:	mov    rcx,QWORD PTR [rip+0x2115c]        # 0x140047218
   1400260bc:	mov    rdx,rax
   1400260bf:	mov    r8d,DWORD PTR [rbx+0x10]
   1400260c3:	mov    r9,QWORD PTR [rcx]
   1400260c6:	add    rsp,0x20
   1400260ca:	pop    rbx
   1400260cb:	rex.WB jmp QWORD PTR [r9+0x100]
   1400260d2:	int3   
   1400260d3:	int3   
   1400260d4:	int3   
   1400260d5:	int3   
   1400260d6:	int3   
   1400260d7:	int3   
   1400260d8:	int3   
   1400260d9:	int3   
   1400260da:	int3   
   1400260db:	int3   
   1400260dc:	int3   
   1400260dd:	int3   
   1400260de:	int3   
   1400260df:	int3   
   1400260e0:	rex push rbx
   1400260e2:	sub    rsp,0x20
   1400260e6:	cmp    QWORD PTR [rip+0x2112a],0x0        # 0x140047218
   1400260ee:	mov    rbx,rdx
   1400260f1:	jne    0x1400260fb
   1400260f3:	mov    al,0x1
   1400260f5:	add    rsp,0x20
   1400260f9:	pop    rbx
   1400260fa:	ret    
   1400260fb:	add    rcx,0x8
   1400260ff:	call   0x14001b050
   140026104:	mov    rcx,QWORD PTR [rip+0x2110d]        # 0x140047218
   14002610b:	mov    r8,rax
   14002610e:	mov    rdx,rbx
   140026111:	mov    r9,QWORD PTR [rcx]
   140026114:	add    rsp,0x20
   140026118:	pop    rbx
   140026119:	rex.WB jmp QWORD PTR [r9+0x238]
   140026120:	sub    rsp,0x28
   140026124:	cmp    QWORD PTR [rip+0x210ec],0x0        # 0x140047218
   14002612c:	jne    0x140026135
   14002612e:	mov    al,0x1
   140026130:	add    rsp,0x28
   140026134:	ret    
   140026135:	add    rcx,0x8
   140026139:	call   0x14001b050
   14002613e:	mov    rcx,QWORD PTR [rip+0x210d3]        # 0x140047218
   140026145:	mov    rdx,rax
   140026148:	mov    r8,QWORD PTR [rcx]
   14002614b:	add    rsp,0x28
   14002614f:	rex.WB jmp QWORD PTR [r8+0x178]
   140026156:	int3   
   140026157:	int3   
   140026158:	int3   
   140026159:	int3   
   14002615a:	int3   
   14002615b:	int3   
   14002615c:	int3   
   14002615d:	int3   
   14002615e:	int3   
   14002615f:	int3   
   140026160:	rex push rbx
   140026162:	sub    rsp,0x20
   140026166:	cmp    QWORD PTR [rip+0x210aa],0x0        # 0x140047218
   14002616e:	mov    rbx,rcx
   140026171:	jne    0x14002617b
   140026173:	mov    al,0x1
   140026175:	add    rsp,0x20
   140026179:	pop    rbx
   14002617a:	ret    
   14002617b:	add    rcx,0x8
   14002617f:	call   0x14001b050
   140026184:	mov    rcx,QWORD PTR [rip+0x2108d]        # 0x140047218
   14002618b:	xor    r8d,r8d
   14002618e:	mov    r9d,DWORD PTR [rbx+0x10]
   140026192:	mov    rdx,rax
   140026195:	mov    r10,QWORD PTR [rcx]
   140026198:	add    rsp,0x20
   14002619c:	pop    rbx
   14002619d:	rex.WB jmp QWORD PTR [r10+0x218]
   1400261a4:	int3   
   1400261a5:	int3   
   1400261a6:	int3   
   1400261a7:	int3   
   1400261a8:	int3   
   1400261a9:	int3   
   1400261aa:	int3   
   1400261ab:	int3   
   1400261ac:	int3   
   1400261ad:	int3   
   1400261ae:	int3   
   1400261af:	int3   
   1400261b0:	rex push rbx
   1400261b2:	sub    rsp,0x20
   1400261b6:	mov    rbx,QWORD PTR [rip+0x2219b]        # 0x140048358
   1400261bd:	test   rbx,rbx
   1400261c0:	je     0x1400261ef
   1400261c2:	mov    rax,QWORD PTR [rbx+0x8]
   1400261c6:	cmp    BYTE PTR [rax+0x24],0x0
   1400261ca:	jne    0x1400261e7
   1400261cc:	cmp    BYTE PTR [rax+0x25],0x0
   1400261d0:	jne    0x1400261e7
   1400261d2:	mov    BYTE PTR [rax+0x24],0x1
   1400261d6:	mov    rcx,QWORD PTR [rip+0x20ffb]        # 0x1400471d8
   1400261dd:	mov    rdx,QWORD PTR [rbx+0x8]
   1400261e1:	mov    rax,QWORD PTR [rcx]
   1400261e4:	call   QWORD PTR [rax+0x10]
   1400261e7:	mov    rbx,QWORD PTR [rbx]
   1400261ea:	test   rbx,rbx
   1400261ed:	jne    0x1400261c2
   1400261ef:	add    rsp,0x20
   1400261f3:	pop    rbx
   1400261f4:	ret    
   1400261f5:	int3   
   1400261f6:	int3   
   1400261f7:	int3   
   1400261f8:	int3   
   1400261f9:	int3   
   1400261fa:	int3   
   1400261fb:	int3   
   1400261fc:	int3   
   1400261fd:	int3   
   1400261fe:	int3   
   1400261ff:	int3   
   140026200:	rex push rbx
   140026202:	sub    rsp,0x20
   140026206:	mov    rbx,QWORD PTR [rip+0x2214b]        # 0x140048358
   14002620d:	test   rbx,rbx
   140026210:	je     0x14002624b
   140026212:	mov    QWORD PTR [rsp+0x30],rdi
   140026217:	nop    WORD PTR [rax+rax*1+0x0]
   140026220:	mov    rdi,QWORD PTR [rbx+0x8]
   140026224:	cmp    BYTE PTR [rdi+0x24],0x0
   140026228:	je     0x14002623e
   14002622a:	mov    rcx,QWORD PTR [rip+0x20fa7]        # 0x1400471d8
   140026231:	mov    rdx,rdi
   140026234:	mov    rax,QWORD PTR [rcx]
   140026237:	call   QWORD PTR [rax+0x18]
   14002623a:	mov    BYTE PTR [rdi+0x24],0x0
   14002623e:	mov    rbx,QWORD PTR [rbx]
   140026241:	test   rbx,rbx
   140026244:	jne    0x140026220
   140026246:	mov    rdi,QWORD PTR [rsp+0x30]
   14002624b:	add    rsp,0x20
   14002624f:	pop    rbx
   140026250:	ret    
   140026251:	int3   
   140026252:	int3   
   140026253:	int3   
   140026254:	int3   
   140026255:	int3   
   140026256:	int3   
   140026257:	int3   
   140026258:	int3   
   140026259:	int3   
   14002625a:	int3   
   14002625b:	int3   
   14002625c:	int3   
   14002625d:	int3   
   14002625e:	int3   
   14002625f:	int3   
   140026260:	mov    eax,DWORD PTR [rip+0x220fa]        # 0x140048360
   140026266:	ret    
   140026267:	int3   
   140026268:	int3   
   140026269:	int3   
   14002626a:	int3   
   14002626b:	int3   
   14002626c:	int3   
   14002626d:	int3   
   14002626e:	int3   
   14002626f:	int3   
   140026270:	mov    r9,QWORD PTR [rip+0x220e1]        # 0x140048358
   140026277:	xor    r10d,r10d
   14002627a:	mov    eax,r10d
   14002627d:	mov    r11d,ecx
   140026280:	test   r9,r9
   140026283:	je     0x1400262a2
   140026285:	cmp    r10d,r11d
   140026288:	jl     0x14002629a
   14002628a:	mov    rcx,QWORD PTR [r9+0x8]
   14002628e:	mov    QWORD PTR [rdx+rax*8],rcx
   140026292:	inc    rax
   140026295:	cmp    rax,r8
   140026298:	jae    0x1400262a2
   14002629a:	mov    r9,QWORD PTR [r9]
   14002629d:	inc    r10d
   1400262a0:	jmp    0x140026280
   1400262a2:	ret    
   1400262a3:	int3   
   1400262a4:	int3   
   1400262a5:	int3   
   1400262a6:	int3   
   1400262a7:	int3   
   1400262a8:	int3   
   1400262a9:	int3   
   1400262aa:	int3   
   1400262ab:	int3   
   1400262ac:	int3   
   1400262ad:	int3   
   1400262ae:	int3   
   1400262af:	int3   
   1400262b0:	sub    rsp,0x28
   1400262b4:	mov    rcx,QWORD PTR [rip+0x20efd]        # 0x1400471b8
   1400262bb:	test   rcx,rcx
   1400262be:	je     0x1400262d5
   1400262c0:	cmp    BYTE PTR [rip+0x220ad],0x0        # 0x140048374
   1400262c7:	jne    0x1400262d5
   1400262c9:	call   0x1400262e0
   1400262ce:	mov    BYTE PTR [rip+0x2209f],0x1        # 0x140048374
   1400262d5:	add    rsp,0x28
   1400262d9:	ret    
   1400262da:	int3   
   1400262db:	int3   
   1400262dc:	int3   
   1400262dd:	int3   
   1400262de:	int3   
   1400262df:	int3   
   1400262e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400262e5:	mov    QWORD PTR [rsp+0x10],rsi
   1400262ea:	push   rdi
   1400262eb:	sub    rsp,0x20
   1400262ef:	mov    rsi,rcx
   1400262f2:	xor    edi,edi
   1400262f4:	mov    rbx,QWORD PTR [rip+0x2206d]        # 0x140048368
   1400262fb:	test   rbx,rbx
   1400262fe:	je     0x140026317
   140026300:	mov    rax,QWORD PTR [rbx]
   140026303:	mov    r8d,edi
   140026306:	mov    rdx,rsi
   140026309:	mov    rcx,rbx
   14002630c:	call   QWORD PTR [rax]
   14002630e:	mov    rbx,QWORD PTR [rbx+0x8]
   140026312:	test   rbx,rbx
   140026315:	jne    0x140026300
   140026317:	inc    edi
   140026319:	cmp    edi,0x2
   14002631c:	jl     0x1400262f4
   14002631e:	mov    rbx,QWORD PTR [rsi]
   140026321:	call   0x140007c10
   140026326:	mov    rdx,rax
   140026329:	mov    rcx,rsi
   14002632c:	mov    rax,QWORD PTR [rbx+0xc8]
   140026333:	mov    rbx,QWORD PTR [rsp+0x30]
   140026338:	mov    rsi,QWORD PTR [rsp+0x38]
   14002633d:	add    rsp,0x20
   140026341:	pop    rdi
   140026342:	rex.W jmp rax
   140026345:	int3   
   140026346:	int3   
   140026347:	int3   
   140026348:	int3   
   140026349:	int3   
   14002634a:	int3   
   14002634b:	int3   
   14002634c:	int3   
   14002634d:	int3   
   14002634e:	int3   
   14002634f:	int3   
   140026350:	rex push rbx
   140026352:	sub    rsp,0x20
   140026356:	mov    rbx,rdx
   140026359:	mov    rdx,rcx
   14002635c:	lea    rcx,[rip+0xd9ad]        # 0x140033d10
   140026363:	call   0x140028260
   140026368:	test   eax,eax
   14002636a:	je     0x140026374
   14002636c:	xor    al,al
   14002636e:	add    rsp,0x20
   140026372:	pop    rbx
   140026373:	ret    
   140026374:	cmp    BYTE PTR [rip+0x21ff9],0x0        # 0x140048374
   14002637b:	jne    0x140026393
   14002637d:	mov    rcx,rbx
   140026380:	mov    QWORD PTR [rip+0x20e31],rbx        # 0x1400471b8
   140026387:	call   0x1400262e0
   14002638c:	mov    BYTE PTR [rip+0x21fe1],0x1        # 0x140048374
   140026393:	mov    al,0x1
   140026395:	add    rsp,0x20
   140026399:	pop    rbx
   14002639a:	ret    
   14002639b:	int3   
   14002639c:	jmp    0x140007bd0
   1400263a1:	int3   
   1400263a2:	int3   
   1400263a3:	int3   
   1400263a4:	int3   
   1400263a5:	int3   
   1400263a6:	int3   
   1400263a7:	int3   
   1400263a8:	int3   
   1400263a9:	int3   
   1400263aa:	int3   
   1400263ab:	int3   
   1400263ac:	int3   
   1400263ad:	int3   
   1400263ae:	int3   
   1400263af:	int3   
   1400263b0:	int3   
   1400263b1:	int3   
   1400263b2:	int3   
   1400263b3:	int3   
   1400263b4:	int3   
   1400263b5:	int3   
   1400263b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400263c0:	sub    rsp,0x10
   1400263c4:	mov    QWORD PTR [rsp],r10
   1400263c8:	mov    QWORD PTR [rsp+0x8],r11
   1400263cd:	xor    r11,r11
   1400263d0:	lea    r10,[rsp+0x18]
   1400263d5:	sub    r10,rax
   1400263d8:	cmovb  r10,r11
   1400263dc:	mov    r11,QWORD PTR gs:0x10
   1400263e5:	cmp    r10,r11
   1400263e8:	bnd jae 0x140026402
   1400263eb:	and    r10w,0xf000
   1400263f1:	lea    r11,[r11-0x1000]
   1400263f8:	mov    BYTE PTR [r11],0x0
   1400263fc:	cmp    r10,r11
   1400263ff:	bnd jne 0x1400263f1
   140026402:	mov    r10,QWORD PTR [rsp]
   140026406:	mov    r11,QWORD PTR [rsp+0x8]
   14002640b:	add    rsp,0x10
   14002640f:	bnd ret 
   140026411:	int3   
   140026412:	int3   
   140026413:	int3   
   140026414:	rex push rbx
   140026416:	sub    rsp,0x20
   14002641a:	lea    rax,[rip+0x11f9f]        # 0x1400383c0
   140026421:	mov    rbx,rcx
   140026424:	mov    QWORD PTR [rcx],rax
   140026427:	test   dl,0x1
   14002642a:	je     0x140026436
   14002642c:	mov    edx,0x18
   140026431:	call   0x14002639c
   140026436:	mov    rax,rbx
   140026439:	add    rsp,0x20
   14002643d:	pop    rbx
   14002643e:	ret    
   14002643f:	int3   
   140026440:	sub    rsp,0x28
   140026444:	call   0x140026b38
   140026449:	test   eax,eax
   14002644b:	je     0x14002646e
   14002644d:	mov    rax,QWORD PTR gs:0x30
   140026456:	mov    rcx,QWORD PTR [rax+0x8]
   14002645a:	jmp    0x140026461
   14002645c:	cmp    rcx,rax
   14002645f:	je     0x140026475
   140026461:	xor    eax,eax
   140026463:	lock cmpxchg QWORD PTR [rip+0x21f14],rcx        # 0x140048380
   14002646c:	jne    0x14002645c
   14002646e:	xor    al,al
   140026470:	add    rsp,0x28
   140026474:	ret    
   140026475:	mov    al,0x1
   140026477:	jmp    0x140026470
   140026479:	int3   
   14002647a:	int3   
   14002647b:	int3   
   14002647c:	rex push rbx
   14002647e:	sub    rsp,0x20
   140026482:	movzx  eax,BYTE PTR [rip+0x21f2f]        # 0x1400483b8
   140026489:	test   ecx,ecx
   14002648b:	mov    ebx,0x1
   140026490:	cmove  eax,ebx
   140026493:	mov    BYTE PTR [rip+0x21f1f],al        # 0x1400483b8
   140026499:	call   0x14002695c
   14002649e:	call   0x140027ab4
   1400264a3:	test   al,al
   1400264a5:	jne    0x1400264ab
   1400264a7:	xor    al,al
   1400264a9:	jmp    0x1400264bf
   1400264ab:	call   0x140029a90
   1400264b0:	test   al,al
   1400264b2:	jne    0x1400264bd
   1400264b4:	xor    ecx,ecx
   1400264b6:	call   0x140027ae8
   1400264bb:	jmp    0x1400264a7
   1400264bd:	mov    al,bl
   1400264bf:	add    rsp,0x20
   1400264c3:	pop    rbx
   1400264c4:	ret    
   1400264c5:	int3   
   1400264c6:	int3   
   1400264c7:	int3   
   1400264c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400264cd:	push   rbp
   1400264ce:	mov    rbp,rsp
   1400264d1:	sub    rsp,0x40
   1400264d5:	mov    ebx,ecx
   1400264d7:	cmp    ecx,0x1
   1400264da:	ja     0x140026586
   1400264e0:	call   0x140026b38
   1400264e5:	test   eax,eax
   1400264e7:	je     0x140026514
   1400264e9:	test   ebx,ebx
   1400264eb:	jne    0x140026514
   1400264ed:	lea    rcx,[rip+0x21e94]        # 0x140048388
   1400264f4:	call   0x1400298c4
   1400264f9:	test   eax,eax
   1400264fb:	je     0x140026501
   1400264fd:	xor    al,al
   1400264ff:	jmp    0x14002657b
   140026501:	lea    rcx,[rip+0x21e98]        # 0x1400483a0
   140026508:	call   0x1400298c4
   14002650d:	test   eax,eax
   14002650f:	sete   al
   140026512:	jmp    0x14002657b
   140026514:	mov    rdx,QWORD PTR [rip+0x1fccd]        # 0x1400461e8
   14002651b:	or     r8,0xffffffffffffffff
   14002651f:	mov    eax,edx
   140026521:	mov    ecx,0x40
   140026526:	and    eax,0x3f
   140026529:	sub    ecx,eax
   14002652b:	mov    al,0x1
   14002652d:	ror    r8,cl
   140026530:	xor    r8,rdx
   140026533:	mov    QWORD PTR [rbp-0x20],r8
   140026537:	mov    QWORD PTR [rbp-0x18],r8
   14002653b:	movups xmm0,XMMWORD PTR [rbp-0x20]
   14002653f:	mov    QWORD PTR [rbp-0x10],r8
   140026543:	movsd  xmm1,QWORD PTR [rbp-0x10]
   140026548:	movups XMMWORD PTR [rip+0x21e39],xmm0        # 0x140048388
   14002654f:	mov    QWORD PTR [rbp-0x20],r8
   140026553:	mov    QWORD PTR [rbp-0x18],r8
   140026557:	movups xmm0,XMMWORD PTR [rbp-0x20]
   14002655b:	mov    QWORD PTR [rbp-0x10],r8
   14002655f:	movsd  QWORD PTR [rip+0x21e31],xmm1        # 0x140048398
   140026567:	movsd  xmm1,QWORD PTR [rbp-0x10]
   14002656c:	movups XMMWORD PTR [rip+0x21e2d],xmm0        # 0x1400483a0
   140026573:	movsd  QWORD PTR [rip+0x21e35],xmm1        # 0x1400483b0
   14002657b:	mov    rbx,QWORD PTR [rsp+0x50]
   140026580:	add    rsp,0x40
   140026584:	pop    rbp
   140026585:	ret    
   140026586:	mov    ecx,0x5
   14002658b:	call   0x140026b4c
   140026590:	int3   
   140026591:	int3   
   140026592:	int3   
   140026593:	int3   
   140026594:	sub    rsp,0x18
   140026598:	mov    r8,rcx
   14002659b:	mov    eax,0x5a4d
   1400265a0:	cmp    WORD PTR [rip+0xfffffffffffd9a59],ax        # 0x140000000
   1400265a7:	jne    0x140026622
   1400265a9:	movsxd rax,DWORD PTR [rip+0xfffffffffffd9a8c]        # 0x14000003c
   1400265b0:	lea    rdx,[rip+0xfffffffffffd9a49]        # 0x140000000
   1400265b7:	lea    rcx,[rax+rdx*1]
   1400265bb:	cmp    DWORD PTR [rcx],0x4550
   1400265c1:	jne    0x140026622
   1400265c3:	mov    eax,0x20b
   1400265c8:	cmp    WORD PTR [rcx+0x18],ax
   1400265cc:	jne    0x140026622
   1400265ce:	sub    r8,rdx
   1400265d1:	movzx  eax,WORD PTR [rcx+0x14]
   1400265d5:	lea    rdx,[rcx+0x18]
   1400265d9:	add    rdx,rax
   1400265dc:	movzx  eax,WORD PTR [rcx+0x6]
   1400265e0:	lea    rcx,[rax+rax*4]
   1400265e4:	lea    r9,[rdx+rcx*8]
   1400265e8:	mov    QWORD PTR [rsp],rdx
   1400265ec:	cmp    rdx,r9
   1400265ef:	je     0x140026609
   1400265f1:	mov    ecx,DWORD PTR [rdx+0xc]
   1400265f4:	cmp    r8,rcx
   1400265f7:	jb     0x140026603
   1400265f9:	mov    eax,DWORD PTR [rdx+0x8]
   1400265fc:	add    eax,ecx
   1400265fe:	cmp    r8,rax
   140026601:	jb     0x14002660b
   140026603:	add    rdx,0x28
   140026607:	jmp    0x1400265e8
   140026609:	xor    edx,edx
   14002660b:	test   rdx,rdx
   14002660e:	jne    0x140026614
   140026610:	xor    al,al
   140026612:	jmp    0x140026628
   140026614:	cmp    DWORD PTR [rdx+0x24],0x0
   140026618:	jge    0x14002661e
   14002661a:	xor    al,al
   14002661c:	jmp    0x140026628
   14002661e:	mov    al,0x1
   140026620:	jmp    0x140026628
   140026622:	xor    al,al
   140026624:	jmp    0x140026628
   140026626:	xor    al,al
   140026628:	add    rsp,0x18
   14002662c:	ret    
   14002662d:	int3   
   14002662e:	int3   
   14002662f:	int3   
   140026630:	rex push rbx
   140026632:	sub    rsp,0x20
   140026636:	mov    bl,cl
   140026638:	call   0x140026b38
   14002663d:	xor    edx,edx
   14002663f:	test   eax,eax
   140026641:	je     0x14002664e
   140026643:	test   bl,bl
   140026645:	jne    0x14002664e
   140026647:	xchg   QWORD PTR [rip+0x21d32],rdx        # 0x140048380
   14002664e:	add    rsp,0x20
   140026652:	pop    rbx
   140026653:	ret    
   140026654:	rex push rbx
   140026656:	sub    rsp,0x20
   14002665a:	cmp    BYTE PTR [rip+0x21d57],0x0        # 0x1400483b8
   140026661:	mov    bl,cl
   140026663:	je     0x140026669
   140026665:	test   dl,dl
   140026667:	jne    0x140026677
   140026669:	mov    cl,bl
   14002666b:	call   0x140029aa4
   140026670:	mov    cl,bl
   140026672:	call   0x140027ae8
   140026677:	mov    al,0x1
   140026679:	add    rsp,0x20
   14002667d:	pop    rbx
   14002667e:	ret    
   14002667f:	int3   
   140026680:	rex push rbx
   140026682:	sub    rsp,0x20
   140026686:	mov    rdx,QWORD PTR [rip+0x1fb5b]        # 0x1400461e8
   14002668d:	mov    rbx,rcx
   140026690:	mov    ecx,edx
   140026692:	xor    rdx,QWORD PTR [rip+0x21cef]        # 0x140048388
   140026699:	and    ecx,0x3f
   14002669c:	ror    rdx,cl
   14002669f:	cmp    rdx,0xffffffffffffffff
   1400266a3:	jne    0x1400266af
   1400266a5:	mov    rcx,rbx
   1400266a8:	call   0x140029878
   1400266ad:	jmp    0x1400266be
   1400266af:	mov    rdx,rbx
   1400266b2:	lea    rcx,[rip+0x21ccf]        # 0x140048388
   1400266b9:	call   0x140029904
   1400266be:	xor    ecx,ecx
   1400266c0:	test   eax,eax
   1400266c2:	cmove  rcx,rbx
   1400266c6:	mov    rax,rcx
   1400266c9:	add    rsp,0x20
   1400266cd:	pop    rbx
   1400266ce:	ret    
   1400266cf:	int3   
   1400266d0:	sub    rsp,0x28
   1400266d4:	call   0x140026680
   1400266d9:	neg    rax
   1400266dc:	sbb    eax,eax
   1400266de:	neg    eax
   1400266e0:	dec    eax
   1400266e2:	add    rsp,0x28
   1400266e6:	ret    
   1400266e7:	int3   
   1400266e8:	rex push rbx
   1400266ea:	sub    rsp,0x20
   1400266ee:	mov    ecx,0x1
   1400266f3:	call   0x140029ac0
   1400266f8:	call   0x140026de4
   1400266fd:	mov    ecx,eax
   1400266ff:	call   0x140029c24
   140026704:	call   0x140029d88
   140026709:	mov    rbx,rax
   14002670c:	call   0x140004ae0
   140026711:	mov    ecx,0x1
   140026716:	mov    DWORD PTR [rbx],eax
   140026718:	call   0x1400264c8
   14002671d:	test   al,al
   14002671f:	je     0x14002678d
   140026721:	call   0x140026e3c
   140026726:	lea    rcx,[rip+0x75b]        # 0x140026e88
   14002672d:	call   0x1400266d0
   140026732:	call   0x140026b30
   140026737:	mov    ecx,eax
   140026739:	call   0x140028fdc
   14002673e:	test   eax,eax
   140026740:	jne    0x140026798
   140026742:	call   0x140026dec
   140026747:	call   0x140026e20
   14002674c:	test   eax,eax
   14002674e:	je     0x14002675c
   140026750:	lea    rcx,[rip+0xfffffffffffde389]        # 0x140004ae0
   140026757:	call   0x140029b38
   14002675c:	call   0x14001e1b0
   140026761:	call   0x14001e1b0
   140026766:	call   0x140004ae0
   14002676b:	mov    ecx,eax
   14002676d:	call   0x140029cf0
   140026772:	call   0x140029990
   140026777:	test   al,al
   140026779:	je     0x140026780
   14002677b:	call   0x1400294b8
   140026780:	call   0x140004ae0
   140026785:	xor    eax,eax
   140026787:	add    rsp,0x20
   14002678b:	pop    rbx
   14002678c:	ret    
   14002678d:	mov    ecx,0x7
   140026792:	call   0x140026b4c
   140026797:	int3   
   140026798:	mov    ecx,0x7
   14002679d:	call   0x140026b4c
   1400267a2:	int3   
   1400267a3:	int3   
   1400267a4:	sub    rsp,0x28
   1400267a8:	call   0x140026e04
   1400267ad:	xor    eax,eax
   1400267af:	add    rsp,0x28
   1400267b3:	ret    
   1400267b4:	sub    rsp,0x28
   1400267b8:	call   0x140026ce8
   1400267bd:	call   0x140004ae0
   1400267c2:	mov    ecx,eax
   1400267c4:	add    rsp,0x28
   1400267c8:	jmp    0x140029d5c
   1400267cd:	int3   
   1400267ce:	int3   
   1400267cf:	int3   
   1400267d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400267d5:	mov    QWORD PTR [rsp+0x10],rsi
   1400267da:	push   rdi
   1400267db:	sub    rsp,0x30
   1400267df:	mov    ecx,0x1
   1400267e4:	call   0x14002647c
   1400267e9:	test   al,al
   1400267eb:	jne    0x1400267f8
   1400267ed:	mov    ecx,0x7
   1400267f2:	call   0x140026b4c
   1400267f7:	int3   
   1400267f8:	xor    sil,sil
   1400267fb:	mov    BYTE PTR [rsp+0x20],sil
   140026800:	call   0x140026440
   140026805:	mov    bl,al
   140026807:	mov    ecx,DWORD PTR [rip+0x21b6b]        # 0x140048378
   14002680d:	cmp    ecx,0x1
   140026810:	jne    0x14002681c
   140026812:	mov    ecx,0x7
   140026817:	call   0x140026b4c
   14002681c:	test   ecx,ecx
   14002681e:	jne    0x14002686a
   140026820:	mov    DWORD PTR [rip+0x21b4e],0x1        # 0x140048378
   14002682a:	lea    rdx,[rip+0xbf07]        # 0x140032738
   140026831:	lea    rcx,[rip+0xbed0]        # 0x140032708
   140026838:	call   0x140029bd8
   14002683d:	test   eax,eax
   14002683f:	je     0x14002684b
   140026841:	mov    eax,0xff
   140026846:	jmp    0x140026937
   14002684b:	lea    rdx,[rip+0xbeae]        # 0x140032700
   140026852:	lea    rcx,[rip+0xbd97]        # 0x1400325f0
   140026859:	call   0x140029b60
   14002685e:	mov    DWORD PTR [rip+0x21b10],0x2        # 0x140048378
   140026868:	jmp    0x140026872
   14002686a:	mov    sil,0x1
   14002686d:	mov    BYTE PTR [rsp+0x20],sil
   140026872:	mov    cl,bl
   140026874:	call   0x140026630
   140026879:	call   0x140026e2c
   14002687e:	mov    rbx,rax
   140026881:	cmp    QWORD PTR [rax],0x0
   140026885:	je     0x1400268a9
   140026887:	mov    rcx,rax
   14002688a:	call   0x140026594
   14002688f:	test   al,al
   140026891:	je     0x1400268a9
   140026893:	mov    rbx,QWORD PTR [rbx]
   140026896:	mov    rcx,rbx
   140026899:	call   0x140026d30
   14002689e:	xor    r8d,r8d
   1400268a1:	lea    edx,[r8+0x2]
   1400268a5:	xor    ecx,ecx
   1400268a7:	call   rbx
   1400268a9:	call   0x140026e34
   1400268ae:	mov    rbx,rax
   1400268b1:	cmp    QWORD PTR [rax],0x0
   1400268b5:	je     0x1400268cb
   1400268b7:	mov    rcx,rax
   1400268ba:	call   0x140026594
   1400268bf:	test   al,al
   1400268c1:	je     0x1400268cb
   1400268c3:	mov    rcx,QWORD PTR [rbx]
   1400268c6:	call   0x140028d6c
   1400268cb:	call   0x140029c94
   1400268d0:	mov    rdi,rax
   1400268d3:	call   0x140029c8c
   1400268d8:	mov    rbx,rax
   1400268db:	call   0x140029494
   1400268e0:	mov    r8,rax
   1400268e3:	mov    rdx,QWORD PTR [rdi]
   1400268e6:	mov    ecx,DWORD PTR [rbx]
   1400268e8:	call   0x140006ba0
   1400268ed:	mov    ebx,eax
   1400268ef:	call   0x140026c94
   1400268f4:	test   al,al
   1400268f6:	jne    0x1400268ff
   1400268f8:	mov    ecx,ebx
   1400268fa:	call   0x140028db0
   1400268ff:	test   sil,sil
   140026902:	jne    0x140026909
   140026904:	call   0x140028d50
   140026909:	xor    edx,edx
   14002690b:	mov    cl,0x1
   14002690d:	call   0x140026654
   140026912:	mov    eax,ebx
   140026914:	jmp    0x140026937
   140026916:	mov    ebx,eax
   140026918:	call   0x140026c94
   14002691d:	test   al,al
   14002691f:	jne    0x140026929
   140026921:	mov    ecx,ebx
   140026923:	call   0x140028d60
   140026928:	int3   
   140026929:	cmp    BYTE PTR [rsp+0x20],0x0
   14002692e:	jne    0x140026935
   140026930:	call   0x140028d40
   140026935:	mov    eax,ebx
   140026937:	mov    rbx,QWORD PTR [rsp+0x40]
   14002693c:	mov    rsi,QWORD PTR [rsp+0x48]
   140026941:	add    rsp,0x30
   140026945:	pop    rdi
   140026946:	ret    
   140026947:	int3   
   140026948:	sub    rsp,0x28
   14002694c:	call   0x140026d38
   140026951:	add    rsp,0x28
   140026955:	jmp    0x1400267d0
   14002695a:	int3   
   14002695b:	int3   
   14002695c:	mov    QWORD PTR [rsp+0x10],rbx
   140026961:	mov    QWORD PTR [rsp+0x18],rdi
   140026966:	push   rbp
   140026967:	mov    rbp,rsp
   14002696a:	sub    rsp,0x20
   14002696e:	and    DWORD PTR [rbp-0x18],0x0
   140026972:	xor    ecx,ecx
   140026974:	xor    eax,eax
   140026976:	mov    DWORD PTR [rip+0x1f884],0x2        # 0x140046204
   140026980:	cpuid  
   140026982:	mov    r8d,ecx
   140026985:	mov    DWORD PTR [rip+0x1f871],0x1        # 0x140046200
   14002698f:	xor    ecx,0x444d4163
   140026995:	mov    r9d,edx
   140026998:	mov    r10d,edx
   14002699b:	xor    r9d,0x69746e65
   1400269a2:	xor    r10d,0x49656e69
   1400269a9:	xor    r8d,0x6c65746e
   1400269b0:	or     r10d,r8d
   1400269b3:	mov    r11d,ebx
   1400269b6:	mov    r8d,DWORD PTR [rip+0x219ff]        # 0x1400483bc
   1400269bd:	xor    r11d,0x68747541
   1400269c4:	or     r11d,r9d
   1400269c7:	mov    edx,ebx
   1400269c9:	or     r11d,ecx
   1400269cc:	xor    edx,0x756e6547
   1400269d2:	xor    ecx,ecx
   1400269d4:	mov    edi,eax
   1400269d6:	or     r10d,edx
   1400269d9:	mov    eax,0x1
   1400269de:	cpuid  
   1400269e0:	mov    DWORD PTR [rbp-0x10],eax
   1400269e3:	mov    r9d,ecx
   1400269e6:	mov    DWORD PTR [rbp-0x8],r9d
   1400269ea:	mov    ecx,eax
   1400269ec:	mov    DWORD PTR [rbp-0xc],ebx
   1400269ef:	mov    DWORD PTR [rbp-0x4],edx
   1400269f2:	test   r10d,r10d
   1400269f5:	jne    0x140026a49
   1400269f7:	or     QWORD PTR [rip+0x1f809],0xffffffffffffffff        # 0x140046208
   1400269ff:	or     r8d,0x4
   140026a03:	and    eax,0xfff3ff0
   140026a08:	mov    DWORD PTR [rip+0x219ad],r8d        # 0x1400483bc
   140026a0f:	cmp    eax,0x106c0
   140026a14:	je     0x140026a3e
   140026a16:	cmp    eax,0x20660
   140026a1b:	je     0x140026a3e
   140026a1d:	cmp    eax,0x20670
   140026a22:	je     0x140026a3e
   140026a24:	add    eax,0xfffcf9b0
   140026a29:	cmp    eax,0x20
   140026a2c:	ja     0x140026a49
   140026a2e:	movabs rbx,0x100010001
   140026a38:	bt     rbx,rax
   140026a3c:	jae    0x140026a49
   140026a3e:	or     r8d,0x1
   140026a42:	mov    DWORD PTR [rip+0x21973],r8d        # 0x1400483bc
   140026a49:	test   r11d,r11d
   140026a4c:	jne    0x140026a67
   140026a4e:	and    ecx,0xff00f00
   140026a54:	cmp    ecx,0x600f00
   140026a5a:	jb     0x140026a67
   140026a5c:	or     r8d,0x4
   140026a60:	mov    DWORD PTR [rip+0x21955],r8d        # 0x1400483bc
   140026a67:	mov    eax,0x7
   140026a6c:	mov    DWORD PTR [rbp-0x20],edx
   140026a6f:	mov    DWORD PTR [rbp-0x1c],r9d
   140026a73:	cmp    edi,eax
   140026a75:	jl     0x140026a9b
   140026a77:	xor    ecx,ecx
   140026a79:	cpuid  
   140026a7b:	mov    DWORD PTR [rbp-0x10],eax
   140026a7e:	mov    DWORD PTR [rbp-0xc],ebx
   140026a81:	mov    DWORD PTR [rbp-0x8],ecx
   140026a84:	mov    DWORD PTR [rbp-0x4],edx
   140026a87:	mov    DWORD PTR [rbp-0x18],ebx
   140026a8a:	bt     ebx,0x9
   140026a8e:	jae    0x140026a9b
   140026a90:	or     r8d,0x2
   140026a94:	mov    DWORD PTR [rip+0x21921],r8d        # 0x1400483bc
   140026a9b:	bt     r9d,0x14
   140026aa0:	jae    0x140026b10
   140026aa2:	mov    DWORD PTR [rip+0x1f754],0x2        # 0x140046200
   140026aac:	mov    DWORD PTR [rip+0x1f74e],0x6        # 0x140046204
   140026ab6:	bt     r9d,0x1b
   140026abb:	jae    0x140026b10
   140026abd:	bt     r9d,0x1c
   140026ac2:	jae    0x140026b10
   140026ac4:	xor    ecx,ecx
   140026ac6:	xgetbv 
   140026ac9:	shl    rdx,0x20
   140026acd:	or     rdx,rax
   140026ad0:	mov    QWORD PTR [rbp+0x10],rdx
   140026ad4:	mov    rax,QWORD PTR [rbp+0x10]
   140026ad8:	and    al,0x6
   140026ada:	cmp    al,0x6
   140026adc:	jne    0x140026b10
   140026ade:	mov    eax,DWORD PTR [rip+0x1f720]        # 0x140046204
   140026ae4:	or     eax,0x8
   140026ae7:	mov    DWORD PTR [rip+0x1f70f],0x3        # 0x140046200
   140026af1:	test   BYTE PTR [rbp-0x18],0x20
   140026af5:	mov    DWORD PTR [rip+0x1f709],eax        # 0x140046204
   140026afb:	je     0x140026b10
   140026afd:	or     eax,0x20
   140026b00:	mov    DWORD PTR [rip+0x1f6f6],0x5        # 0x140046200
   140026b0a:	mov    DWORD PTR [rip+0x1f6f4],eax        # 0x140046204
   140026b10:	mov    rbx,QWORD PTR [rsp+0x38]
   140026b15:	xor    eax,eax
   140026b17:	mov    rdi,QWORD PTR [rsp+0x40]
   140026b1c:	add    rsp,0x20
   140026b20:	pop    rbp
   140026b21:	ret    
   140026b22:	int3   
   140026b23:	int3   
   140026b24:	int3   
   140026b25:	int3   
   140026b26:	int3   
   140026b27:	int3   
   140026b28:	int3   
   140026b29:	int3   
   140026b2a:	int3   
   140026b2b:	int3   
   140026b2c:	int3   
   140026b2d:	int3   
   140026b2e:	int3   
   140026b2f:	int3   
   140026b30:	mov    eax,0x1
   140026b35:	ret    
   140026b36:	int3   
   140026b37:	int3   
   140026b38:	xor    eax,eax
   140026b3a:	cmp    DWORD PTR [rip+0x22990],eax        # 0x1400494d0
   140026b40:	setne  al
   140026b43:	ret    
   140026b44:	and    DWORD PTR [rip+0x21875],0x0        # 0x1400483c0
   140026b4b:	ret    
   140026b4c:	mov    QWORD PTR [rsp+0x8],rbx
   140026b51:	push   rbp
   140026b52:	lea    rbp,[rsp-0x4c0]
   140026b5a:	sub    rsp,0x5c0
   140026b61:	mov    ebx,ecx
   140026b63:	mov    ecx,0x17
   140026b68:	call   0x140026ee0
   140026b6d:	test   eax,eax
   140026b6f:	je     0x140026b75
   140026b71:	mov    ecx,ebx
   140026b73:	int    0x29
   140026b75:	and    DWORD PTR [rip+0x21844],0x0        # 0x1400483c0
   140026b7c:	lea    rcx,[rbp-0x10]
   140026b80:	xor    edx,edx
   140026b82:	mov    r8d,0x4d0
   140026b88:	call   0x1400277b0
   140026b8d:	lea    rcx,[rbp-0x10]
   140026b91:	call   QWORD PTR [rip+0xb5d1]        # 0x140032168
   140026b97:	mov    rbx,QWORD PTR [rbp+0xe8]
   140026b9e:	lea    rdx,[rbp+0x4d8]
   140026ba5:	mov    rcx,rbx
   140026ba8:	xor    r8d,r8d
   140026bab:	call   QWORD PTR [rip+0xb5af]        # 0x140032160
   140026bb1:	test   rax,rax
   140026bb4:	je     0x140026bf2
   140026bb6:	and    QWORD PTR [rsp+0x38],0x0
   140026bbc:	lea    rcx,[rbp+0x4e0]
   140026bc3:	mov    rdx,QWORD PTR [rbp+0x4d8]
   140026bca:	mov    r9,rax
   140026bcd:	mov    QWORD PTR [rsp+0x30],rcx
   140026bd2:	mov    r8,rbx
   140026bd5:	lea    rcx,[rbp+0x4e8]
   140026bdc:	mov    QWORD PTR [rsp+0x28],rcx
   140026be1:	lea    rcx,[rbp-0x10]
   140026be5:	mov    QWORD PTR [rsp+0x20],rcx
   140026bea:	xor    ecx,ecx
   140026bec:	call   QWORD PTR [rip+0xb566]        # 0x140032158
   140026bf2:	mov    rax,QWORD PTR [rbp+0x4c8]
   140026bf9:	lea    rcx,[rsp+0x50]
   140026bfe:	mov    QWORD PTR [rbp+0xe8],rax
   140026c05:	xor    edx,edx
   140026c07:	lea    rax,[rbp+0x4c8]
   140026c0e:	mov    r8d,0x98
   140026c14:	add    rax,0x8
   140026c18:	mov    QWORD PTR [rbp+0x88],rax
   140026c1f:	call   0x1400277b0
   140026c24:	mov    rax,QWORD PTR [rbp+0x4c8]
   140026c2b:	mov    QWORD PTR [rsp+0x60],rax
   140026c30:	mov    DWORD PTR [rsp+0x50],0x40000015
   140026c38:	mov    DWORD PTR [rsp+0x54],0x1
   140026c40:	call   QWORD PTR [rip+0xb50a]        # 0x140032150
   140026c46:	cmp    eax,0x1
   140026c49:	lea    rax,[rsp+0x50]
   140026c4e:	mov    QWORD PTR [rsp+0x40],rax
   140026c53:	lea    rax,[rbp-0x10]
   140026c57:	sete   bl
   140026c5a:	mov    QWORD PTR [rsp+0x48],rax
   140026c5f:	xor    ecx,ecx
   140026c61:	call   QWORD PTR [rip+0xb4d9]        # 0x140032140
   140026c67:	lea    rcx,[rsp+0x40]
   140026c6c:	call   QWORD PTR [rip+0xb4d6]        # 0x140032148
   140026c72:	test   eax,eax
   140026c74:	jne    0x140026c80
   140026c76:	neg    bl
   140026c78:	sbb    eax,eax
   140026c7a:	and    DWORD PTR [rip+0x21740],eax        # 0x1400483c0
   140026c80:	mov    rbx,QWORD PTR [rsp+0x5d0]
   140026c88:	add    rsp,0x5c0
   140026c8f:	pop    rbp
   140026c90:	ret    
   140026c91:	int3   
   140026c92:	int3   
   140026c93:	int3   
   140026c94:	sub    rsp,0x28
   140026c98:	xor    ecx,ecx
   140026c9a:	call   QWORD PTR [rip+0xb488]        # 0x140032128
   140026ca0:	mov    rcx,rax
   140026ca3:	test   rax,rax
   140026ca6:	jne    0x140026cac
   140026ca8:	xor    al,al
   140026caa:	jmp    0x140026ce3
   140026cac:	mov    eax,0x5a4d
   140026cb1:	cmp    WORD PTR [rcx],ax
   140026cb4:	jne    0x140026ca8
   140026cb6:	movsxd rax,DWORD PTR [rcx+0x3c]
   140026cba:	add    rax,rcx
   140026cbd:	cmp    DWORD PTR [rax],0x4550
   140026cc3:	jne    0x140026ca8
   140026cc5:	mov    ecx,0x20b
   140026cca:	cmp    WORD PTR [rax+0x18],cx
   140026cce:	jne    0x140026ca8
   140026cd0:	cmp    DWORD PTR [rax+0x84],0xe
   140026cd7:	jbe    0x140026ca8
   140026cd9:	cmp    DWORD PTR [rax+0xf8],0x0
   140026ce0:	setne  al
   140026ce3:	add    rsp,0x28
   140026ce7:	ret    
   140026ce8:	lea    rcx,[rip+0x9]        # 0x140026cf8
   140026cef:	rex.W jmp QWORD PTR [rip+0xb44a]        # 0x140032140
   140026cf6:	int3   
   140026cf7:	int3   
   140026cf8:	sub    rsp,0x28
   140026cfc:	mov    rax,QWORD PTR [rcx]
   140026cff:	cmp    DWORD PTR [rax],0xe06d7363
   140026d05:	jne    0x140026d23
   140026d07:	cmp    DWORD PTR [rax+0x18],0x4
   140026d0b:	jne    0x140026d23
   140026d0d:	mov    ecx,DWORD PTR [rax+0x20]
   140026d10:	lea    eax,[rcx-0x19930520]
   140026d16:	cmp    eax,0x2
   140026d19:	jbe    0x140026d2a
   140026d1b:	cmp    ecx,0x1994000
   140026d21:	je     0x140026d2a
   140026d23:	xor    eax,eax
   140026d25:	add    rsp,0x28
   140026d29:	ret    
   140026d2a:	call   0x140029d90
   140026d2f:	int3   
   140026d30:	rex.W jmp QWORD PTR [rip+0xb8a9]        # 0x1400325e0
   140026d37:	int3   
   140026d38:	mov    QWORD PTR [rsp+0x20],rbx
   140026d3d:	push   rbp
   140026d3e:	mov    rbp,rsp
   140026d41:	sub    rsp,0x20
   140026d45:	and    QWORD PTR [rbp+0x18],0x0
   140026d4a:	movabs rbx,0x2b992ddfa232
   140026d54:	mov    rax,QWORD PTR [rip+0x1f48d]        # 0x1400461e8
   140026d5b:	cmp    rax,rbx
   140026d5e:	jne    0x140026dcf
   140026d60:	lea    rcx,[rbp+0x18]
   140026d64:	call   QWORD PTR [rip+0xb3a6]        # 0x140032110
   140026d6a:	mov    rax,QWORD PTR [rbp+0x18]
   140026d6e:	mov    QWORD PTR [rbp+0x10],rax
   140026d72:	call   QWORD PTR [rip+0xb448]        # 0x1400321c0
   140026d78:	mov    eax,eax
   140026d7a:	xor    QWORD PTR [rbp+0x10],rax
   140026d7e:	call   QWORD PTR [rip+0xb394]        # 0x140032118
   140026d84:	mov    eax,eax
   140026d86:	lea    rcx,[rbp+0x20]
   140026d8a:	xor    QWORD PTR [rbp+0x10],rax
   140026d8e:	call   QWORD PTR [rip+0xb38c]        # 0x140032120
   140026d94:	mov    eax,DWORD PTR [rbp+0x20]
   140026d97:	lea    rcx,[rbp+0x10]
   140026d9b:	shl    rax,0x20
   140026d9f:	xor    rax,QWORD PTR [rbp+0x20]
   140026da3:	xor    rax,QWORD PTR [rbp+0x10]
   140026da7:	xor    rax,rcx
   140026daa:	movabs rcx,0xffffffffffff
   140026db4:	and    rax,rcx
   140026db7:	movabs rcx,0x2b992ddfa233
   140026dc1:	cmp    rax,rbx
   140026dc4:	cmove  rax,rcx
   140026dc8:	mov    QWORD PTR [rip+0x1f419],rax        # 0x1400461e8
   140026dcf:	mov    rbx,QWORD PTR [rsp+0x48]
   140026dd4:	not    rax
   140026dd7:	mov    QWORD PTR [rip+0x1f412],rax        # 0x1400461f0
   140026dde:	add    rsp,0x20
   140026de2:	pop    rbp
   140026de3:	ret    
   140026de4:	mov    eax,0x4000
   140026de9:	ret    
   140026dea:	int3   
   140026deb:	int3   
   140026dec:	lea    rcx,[rip+0x215dd]        # 0x1400483d0
   140026df3:	rex.W jmp QWORD PTR [rip+0xb30e]        # 0x140032108
   140026dfa:	int3   
   140026dfb:	int3   
   140026dfc:	lea    rax,[rip+0x215dd]        # 0x1400483e0
   140026e03:	ret    
   140026e04:	sub    rsp,0x28
   140026e08:	call   0x140025ed0
   140026e0d:	or     QWORD PTR [rax],0x4
   140026e11:	call   0x140026dfc
   140026e16:	or     QWORD PTR [rax],0x2
   140026e1a:	add    rsp,0x28
   140026e1e:	ret    
   140026e1f:	int3   
   140026e20:	xor    eax,eax
   140026e22:	cmp    DWORD PTR [rip+0x1f3e8],eax        # 0x140046210
   140026e28:	sete   al
   140026e2b:	ret    
   140026e2c:	lea    rax,[rip+0x22695]        # 0x1400494c8
   140026e33:	ret    
   140026e34:	lea    rax,[rip+0x22685]        # 0x1400494c0
   140026e3b:	ret    
   140026e3c:	mov    QWORD PTR [rsp+0x8],rbx
   140026e41:	mov    QWORD PTR [rsp+0x10],rsi
   140026e46:	push   rdi
   140026e47:	sub    rsp,0x20
   140026e4b:	lea    rbx,[rip+0x19646]        # 0x140040498
   140026e52:	lea    rsi,[rip+0x1963f]        # 0x140040498
   140026e59:	jmp    0x140026e71
   140026e5b:	mov    rdi,QWORD PTR [rbx]
   140026e5e:	test   rdi,rdi
   140026e61:	je     0x140026e6d
   140026e63:	mov    rcx,rdi
   140026e66:	call   0x140026d30
   140026e6b:	call   rdi
   140026e6d:	add    rbx,0x8
   140026e71:	cmp    rbx,rsi
   140026e74:	jb     0x140026e5b
   140026e76:	mov    rbx,QWORD PTR [rsp+0x30]
   140026e7b:	mov    rsi,QWORD PTR [rsp+0x38]
   140026e80:	add    rsp,0x20
   140026e84:	pop    rdi
   140026e85:	ret    
   140026e86:	int3   
   140026e87:	int3   
   140026e88:	mov    QWORD PTR [rsp+0x8],rbx
   140026e8d:	mov    QWORD PTR [rsp+0x10],rsi
   140026e92:	push   rdi
   140026e93:	sub    rsp,0x20
   140026e97:	lea    rbx,[rip+0x1960a]        # 0x1400404a8
   140026e9e:	lea    rsi,[rip+0x19603]        # 0x1400404a8
   140026ea5:	jmp    0x140026ebd
   140026ea7:	mov    rdi,QWORD PTR [rbx]
   140026eaa:	test   rdi,rdi
   140026ead:	je     0x140026eb9
   140026eaf:	mov    rcx,rdi
   140026eb2:	call   0x140026d30
   140026eb7:	call   rdi
   140026eb9:	add    rbx,0x8
   140026ebd:	cmp    rbx,rsi
   140026ec0:	jb     0x140026ea7
   140026ec2:	mov    rbx,QWORD PTR [rsp+0x30]
   140026ec7:	mov    rsi,QWORD PTR [rsp+0x38]
   140026ecc:	add    rsp,0x20
   140026ed0:	pop    rdi
   140026ed1:	ret    
   140026ed2:	int3   
   140026ed3:	int3   
   140026ed4:	int3   
   140026ed5:	int3   
   140026ed6:	int3   
   140026ed7:	int3   
   140026ed8:	int3   
   140026ed9:	int3   
   140026eda:	int3   
   140026edb:	int3   
   140026edc:	int3   
   140026edd:	int3   
   140026ede:	int3   
   140026edf:	int3   
   140026ee0:	jmp    QWORD PTR [rip+0xb24a]        # 0x140032130
   140026ee6:	int3   
   140026ee7:	int3   
   140026ee8:	rex push rbx
   140026eea:	sub    rsp,0x20
   140026eee:	xor    edx,edx
   140026ef0:	xor    eax,eax
   140026ef2:	lock cmpxchg QWORD PTR [rip+0x214ed],rdx        # 0x1400483e8
   140026efb:	mov    rbx,QWORD PTR [rip+0x1f2e6]        # 0x1400461e8
   140026f02:	mov    ecx,ebx
   140026f04:	xor    rbx,rax
   140026f07:	and    ecx,0x3f
   140026f0a:	ror    rbx,cl
   140026f0d:	test   rbx,rbx
   140026f10:	je     0x140026f1c
   140026f12:	mov    rcx,rbx
   140026f15:	call   0x140026d30
   140026f1a:	call   rbx
   140026f1c:	call   0x140029db8
   140026f21:	int3   
   140026f22:	int3   
   140026f23:	int3   
   140026f24:	mov    r8,QWORD PTR [rip+0x1f2bd]        # 0x1400461e8
   140026f2b:	mov    r9,rcx
   140026f2e:	mov    edx,r8d
   140026f31:	mov    ecx,0x40
   140026f36:	and    edx,0x3f
   140026f39:	sub    ecx,edx
   140026f3b:	ror    r9,cl
   140026f3e:	xor    r9,r8
   140026f41:	xchg   QWORD PTR [rip+0x214a0],r9        # 0x1400483e8
   140026f48:	mov    rax,QWORD PTR [rip+0x1f299]        # 0x1400461e8
   140026f4f:	mov    ecx,eax
   140026f51:	xor    rax,r9
   140026f54:	and    ecx,0x3f
   140026f57:	ror    rax,cl
   140026f5a:	ret    
   140026f5b:	int3   
   140026f5c:	int3   
   140026f5d:	int3   
   140026f5e:	int3   
   140026f5f:	int3   
   140026f60:	int3   
   140026f61:	int3   
   140026f62:	int3   
   140026f63:	int3   
   140026f64:	int3   
   140026f65:	int3   
   140026f66:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026f70:	mov    r11,rcx
   140026f73:	mov    r10,rdx
   140026f76:	cmp    r8,0x10
   140026f7a:	jbe    0x140026ff0
   140026f80:	cmp    r8,0x20
   140026f84:	jbe    0x140026fd0
   140026f86:	sub    rdx,rcx
   140026f89:	jae    0x140026f9a
   140026f8b:	mov    rax,r10
   140026f8e:	add    rax,r8
   140026f91:	cmp    rcx,rax
   140026f94:	jl     0x1400272d0
   140026f9a:	cmp    r8,0x80
   140026fa1:	jbe    0x140027210
   140026fa7:	bt     DWORD PTR [rip+0x2140d],0x1        # 0x1400483bc
   140026faf:	jae    0x140027160
   140026fb5:	mov    rax,r11
   140026fb8:	mov    r11,rdi
   140026fbb:	mov    rdi,rcx
   140026fbe:	mov    rcx,r8
   140026fc1:	mov    r8,rsi
   140026fc4:	mov    rsi,r10
   140026fc7:	rep movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140026fc9:	mov    rsi,r8
   140026fcc:	mov    rdi,r11
   140026fcf:	ret    
   140026fd0:	movups xmm0,XMMWORD PTR [rdx]
   140026fd3:	movups xmm1,XMMWORD PTR [r8+rdx*1-0x10]
   140026fd9:	movups XMMWORD PTR [rcx],xmm0
   140026fdc:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm1
   140026fe2:	mov    rax,rcx
   140026fe5:	ret    
   140026fe6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140026ff0:	mov    rax,rcx
   140026ff3:	lea    r9,[rip+0xfffffffffffd9006]        # 0x140000000
   140026ffa:	mov    ecx,DWORD PTR [r9+r8*4+0x27007]
   140027002:	add    rcx,r9
   140027005:	jmp    rcx
   140027007:	push   rax
   140027008:	jo     0x14002700c
   14002700a:	add    BYTE PTR [rdi+0x70],ch
   14002700d:	add    al,BYTE PTR [rax]
   14002700f:	push   rcx
   140027010:	jo     0x140027014
   140027012:	add    BYTE PTR [rdi+0x70],bl
   140027015:	add    al,BYTE PTR [rax]
   140027017:	fwait
   140027018:	jo     0x14002701c
   14002701a:	add    BYTE PTR [rax-0x4ffffd90],ah
   140027020:	jo     0x140027024
   140027022:	add    al,al
   140027024:	jo     0x140027028
   140027026:	add    BYTE PTR [rax+0x70],bl
   140027029:	add    al,BYTE PTR [rax]
   14002702b:	lock jo 0x140027030
   14002702e:	add    BYTE PTR [rax],al
   140027030:	jno    0x140027034
   140027032:	add    BYTE PTR [rax+0x10000270],al
   140027038:	jno    0x14002703c
   14002703a:	add    al,bl
   14002703c:	jo     0x140027040
   14002703e:	add    BYTE PTR [rax],ah
   140027040:	jno    0x140027044
   140027042:	add    BYTE PTR [rax+0x71],al
   140027045:	add    al,BYTE PTR [rax]
   140027047:	jne    0x1400270b9
   140027049:	add    al,BYTE PTR [rax]
   14002704b:	nop    DWORD PTR [rax+rax*1+0x0]
   140027050:	ret    
   140027051:	movzx  ecx,WORD PTR [rdx]
   140027054:	mov    WORD PTR [rax],cx
   140027057:	ret    
   140027058:	mov    rcx,QWORD PTR [rdx]
   14002705b:	mov    QWORD PTR [rax],rcx
   14002705e:	ret    
   14002705f:	movzx  ecx,WORD PTR [rdx]
   140027062:	movzx  r8d,BYTE PTR [rdx+0x2]
   140027067:	mov    WORD PTR [rax],cx
   14002706a:	mov    BYTE PTR [rax+0x2],r8b
   14002706e:	ret    
   14002706f:	movzx  ecx,BYTE PTR [rdx]
   140027072:	mov    BYTE PTR [rax],cl
   140027074:	ret    
   140027075:	movdqu xmm0,XMMWORD PTR [rdx]
   140027079:	movdqu XMMWORD PTR [rax],xmm0
   14002707d:	ret    
   14002707e:	xchg   ax,ax
   140027080:	mov    r8,QWORD PTR [rdx]
   140027083:	movzx  ecx,WORD PTR [rdx+0x8]
   140027087:	movzx  r9d,BYTE PTR [rdx+0xa]
   14002708c:	mov    QWORD PTR [rax],r8
   14002708f:	mov    WORD PTR [rax+0x8],cx
   140027093:	mov    BYTE PTR [rax+0xa],r9b
   140027097:	mov    rcx,r11
   14002709a:	ret    
   14002709b:	mov    ecx,DWORD PTR [rdx]
   14002709d:	mov    DWORD PTR [rax],ecx
   14002709f:	ret    
   1400270a0:	mov    ecx,DWORD PTR [rdx]
   1400270a2:	movzx  r8d,BYTE PTR [rdx+0x4]
   1400270a7:	mov    DWORD PTR [rax],ecx
   1400270a9:	mov    BYTE PTR [rax+0x4],r8b
   1400270ad:	ret    
   1400270ae:	xchg   ax,ax
   1400270b0:	mov    ecx,DWORD PTR [rdx]
   1400270b2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400270b7:	mov    DWORD PTR [rax],ecx
   1400270b9:	mov    WORD PTR [rax+0x4],r8w
   1400270be:	ret    
   1400270bf:	nop
   1400270c0:	mov    ecx,DWORD PTR [rdx]
   1400270c2:	movzx  r8d,WORD PTR [rdx+0x4]
   1400270c7:	movzx  r9d,BYTE PTR [rdx+0x6]
   1400270cc:	mov    DWORD PTR [rax],ecx
   1400270ce:	mov    WORD PTR [rax+0x4],r8w
   1400270d3:	mov    BYTE PTR [rax+0x6],r9b
   1400270d7:	ret    
   1400270d8:	mov    r8,QWORD PTR [rdx]
   1400270db:	mov    ecx,DWORD PTR [rdx+0x8]
   1400270de:	movzx  r9d,BYTE PTR [rdx+0xc]
   1400270e3:	mov    QWORD PTR [rax],r8
   1400270e6:	mov    DWORD PTR [rax+0x8],ecx
   1400270e9:	mov    BYTE PTR [rax+0xc],r9b
   1400270ed:	ret    
   1400270ee:	xchg   ax,ax
   1400270f0:	mov    r8,QWORD PTR [rdx]
   1400270f3:	movzx  ecx,BYTE PTR [rdx+0x8]
   1400270f7:	mov    QWORD PTR [rax],r8
   1400270fa:	mov    BYTE PTR [rax+0x8],cl
   1400270fd:	ret    
   1400270fe:	xchg   ax,ax
   140027100:	mov    r8,QWORD PTR [rdx]
   140027103:	movzx  ecx,WORD PTR [rdx+0x8]
   140027107:	mov    QWORD PTR [rax],r8
   14002710a:	mov    WORD PTR [rax+0x8],cx
   14002710e:	ret    
   14002710f:	nop
   140027110:	mov    r8,QWORD PTR [rdx]
   140027113:	mov    ecx,DWORD PTR [rdx+0x8]
   140027116:	mov    QWORD PTR [rax],r8
   140027119:	mov    DWORD PTR [rax+0x8],ecx
   14002711c:	ret    
   14002711d:	nop    DWORD PTR [rax]
   140027120:	mov    r8,QWORD PTR [rdx]
   140027123:	mov    ecx,DWORD PTR [rdx+0x8]
   140027126:	movzx  r9d,WORD PTR [rdx+0xc]
   14002712b:	mov    QWORD PTR [rax],r8
   14002712e:	mov    DWORD PTR [rax+0x8],ecx
   140027131:	mov    WORD PTR [rax+0xc],r9w
   140027136:	ret    
   140027137:	nop    WORD PTR [rax+rax*1+0x0]
   140027140:	mov    r8,QWORD PTR [rdx]
   140027143:	mov    ecx,DWORD PTR [rdx+0x8]
   140027146:	movzx  r9d,WORD PTR [rdx+0xc]
   14002714b:	movzx  r10d,BYTE PTR [rdx+0xe]
   140027150:	mov    QWORD PTR [rax],r8
   140027153:	mov    DWORD PTR [rax+0x8],ecx
   140027156:	mov    WORD PTR [rax+0xc],r9w
   14002715b:	mov    BYTE PTR [rax+0xe],r10b
   14002715f:	ret    
   140027160:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027164:	add    r8,rcx
   140027167:	add    rcx,0x10
   14002716b:	test   r11b,0xf
   14002716f:	je     0x140027184
   140027171:	movaps xmm1,xmm0
   140027174:	and    rcx,0xfffffffffffffff0
   140027178:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14002717c:	add    rcx,0x10
   140027180:	movups XMMWORD PTR [r11],xmm1
   140027184:	sub    r8,rcx
   140027187:	mov    r9,r8
   14002718a:	shr    r9,0x7
   14002718e:	je     0x14002721c
   140027194:	movaps XMMWORD PTR [rcx-0x10],xmm0
   140027198:	cmp    r9,QWORD PTR [rip+0x1f069]        # 0x140046208
   14002719f:	jbe    0x1400271b8
   1400271a1:	jmp    0x140027268
   1400271a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400271b0:	movaps XMMWORD PTR [rcx-0x20],xmm0
   1400271b4:	movaps XMMWORD PTR [rcx-0x10],xmm1
   1400271b8:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400271bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   1400271c1:	add    rcx,0x80
   1400271c8:	movaps XMMWORD PTR [rcx-0x80],xmm0
   1400271cc:	movaps XMMWORD PTR [rcx-0x70],xmm1
   1400271d0:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   1400271d5:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   1400271da:	dec    r9
   1400271dd:	movaps XMMWORD PTR [rcx-0x60],xmm0
   1400271e1:	movaps XMMWORD PTR [rcx-0x50],xmm1
   1400271e5:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400271ea:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400271ef:	movaps XMMWORD PTR [rcx-0x40],xmm0
   1400271f3:	movaps XMMWORD PTR [rcx-0x30],xmm1
   1400271f7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   1400271fc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   140027201:	jne    0x1400271b0
   140027203:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140027207:	and    r8,0x7f
   14002720b:	movaps xmm0,xmm1
   14002720e:	jmp    0x14002721c
   140027210:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027214:	add    rcx,0x10
   140027218:	sub    r8,0x10
   14002721c:	mov    r9,r8
   14002721f:	shr    r9,0x4
   140027223:	je     0x140027241
   140027225:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140027230:	movups XMMWORD PTR [rcx-0x10],xmm0
   140027234:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027238:	add    rcx,0x10
   14002723c:	dec    r9
   14002723f:	jne    0x140027230
   140027241:	and    r8,0xf
   140027245:	je     0x140027254
   140027247:	lea    rax,[r8+rcx*1]
   14002724b:	movups xmm1,XMMWORD PTR [rdx+rax*1-0x10]
   140027250:	movups XMMWORD PTR [rax-0x10],xmm1
   140027254:	movups XMMWORD PTR [rcx-0x10],xmm0
   140027258:	mov    rax,r11
   14002725b:	ret    
   14002725c:	nop    DWORD PTR [rax+0x0]
   140027260:	movntps XMMWORD PTR [rcx-0x20],xmm0
   140027264:	movntps XMMWORD PTR [rcx-0x10],xmm1
   140027268:	prefetchnta BYTE PTR [rdx+rcx*1+0x200]
   140027270:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   140027274:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x10]
   140027279:	add    rcx,0x80
   140027280:	movntps XMMWORD PTR [rcx-0x80],xmm0
   140027284:	movntps XMMWORD PTR [rcx-0x70],xmm1
   140027288:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x60]
   14002728d:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x50]
   140027292:	dec    r9
   140027295:	movntps XMMWORD PTR [rcx-0x60],xmm0
   140027299:	movntps XMMWORD PTR [rcx-0x50],xmm1
   14002729d:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x40]
   1400272a2:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x30]
   1400272a7:	prefetchnta BYTE PTR [rdx+rcx*1+0x240]
   1400272af:	movntps XMMWORD PTR [rcx-0x40],xmm0
   1400272b3:	movntps XMMWORD PTR [rcx-0x30],xmm1
   1400272b7:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x20]
   1400272bc:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x10]
   1400272c1:	jne    0x140027260
   1400272c3:	sfence 
   1400272c6:	jmp    0x140027203
   1400272cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400272d0:	add    rcx,r8
   1400272d3:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   1400272d8:	sub    rcx,0x10
   1400272dc:	sub    r8,0x10
   1400272e0:	test   cl,0xf
   1400272e3:	je     0x1400272fc
   1400272e5:	mov    rax,rcx
   1400272e8:	and    rcx,0xfffffffffffffff0
   1400272ec:	movups xmm1,xmm0
   1400272ef:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   1400272f3:	movups XMMWORD PTR [rax],xmm1
   1400272f6:	mov    r8,rcx
   1400272f9:	sub    r8,r11
   1400272fc:	mov    r9,r8
   1400272ff:	shr    r9,0x7
   140027303:	je     0x14002736d
   140027305:	movaps XMMWORD PTR [rcx],xmm0
   140027308:	jmp    0x140027317
   14002730a:	nop    WORD PTR [rax+rax*1+0x0]
   140027310:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140027314:	movaps XMMWORD PTR [rcx],xmm1
   140027317:	movups xmm0,XMMWORD PTR [rdx+rcx*1-0x10]
   14002731c:	movups xmm1,XMMWORD PTR [rdx+rcx*1-0x20]
   140027321:	sub    rcx,0x80
   140027328:	movaps XMMWORD PTR [rcx+0x70],xmm0
   14002732c:	movaps XMMWORD PTR [rcx+0x60],xmm1
   140027330:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x50]
   140027335:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x40]
   14002733a:	dec    r9
   14002733d:	movaps XMMWORD PTR [rcx+0x50],xmm0
   140027341:	movaps XMMWORD PTR [rcx+0x40],xmm1
   140027345:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x30]
   14002734a:	movups xmm1,XMMWORD PTR [rdx+rcx*1+0x20]
   14002734f:	movaps XMMWORD PTR [rcx+0x30],xmm0
   140027353:	movaps XMMWORD PTR [rcx+0x20],xmm1
   140027357:	movups xmm0,XMMWORD PTR [rdx+rcx*1+0x10]
   14002735c:	movups xmm1,XMMWORD PTR [rdx+rcx*1]
   140027360:	jne    0x140027310
   140027362:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140027366:	and    r8,0x7f
   14002736a:	movaps xmm0,xmm1
   14002736d:	mov    r9,r8
   140027370:	shr    r9,0x4
   140027374:	je     0x140027390
   140027376:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027380:	movups XMMWORD PTR [rcx],xmm0
   140027383:	sub    rcx,0x10
   140027387:	movups xmm0,XMMWORD PTR [rdx+rcx*1]
   14002738b:	dec    r9
   14002738e:	jne    0x140027380
   140027390:	and    r8,0xf
   140027394:	je     0x14002739e
   140027396:	movups xmm1,XMMWORD PTR [r10]
   14002739a:	movups XMMWORD PTR [r11],xmm1
   14002739e:	movups XMMWORD PTR [rcx],xmm0
   1400273a1:	mov    rax,r11
   1400273a4:	ret    
   1400273a5:	int3   
   1400273a6:	int3   
   1400273a7:	int3   
   1400273a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400273ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400273b2:	push   rsi
   1400273b3:	sub    rsp,0x10
   1400273b7:	mov    bpl,BYTE PTR [rdx]
   1400273ba:	mov    rsi,rdx
   1400273bd:	mov    r8,rcx
   1400273c0:	test   bpl,bpl
   1400273c3:	jne    0x1400273cd
   1400273c5:	mov    rax,rcx
   1400273c8:	jmp    0x140027589
   1400273cd:	cmp    DWORD PTR [rip+0x1ee2c],0x2        # 0x140046200
   1400273d4:	mov    ebx,0xff0
   1400273d9:	mov    r10d,0x1
   1400273df:	lea    r11d,[rbx+0xf]
   1400273e3:	jge    0x1400274b9
   1400273e9:	movzx  eax,bpl
   1400273ed:	xorps  xmm2,xmm2
   1400273f0:	mov    ecx,eax
   1400273f2:	shl    ecx,0x8
   1400273f5:	or     ecx,eax
   1400273f7:	movd   xmm0,ecx
   1400273fb:	pshuflw xmm1,xmm0,0x0
   140027400:	pshufd xmm3,xmm1,0x0
   140027405:	mov    rax,r8
   140027408:	and    rax,r11
   14002740b:	cmp    rax,rbx
   14002740e:	ja     0x140027439
   140027410:	movdqu xmm0,XMMWORD PTR [r8]
   140027415:	movdqa xmm1,xmm0
   140027419:	pcmpeqb xmm0,xmm3
   14002741d:	pcmpeqb xmm1,xmm2
   140027421:	por    xmm1,xmm0
   140027425:	pmovmskb eax,xmm1
   140027429:	test   eax,eax
   14002742b:	jne    0x140027433
   14002742d:	add    r8,0x10
   140027431:	jmp    0x140027405
   140027433:	bsf    eax,eax
   140027436:	add    r8,rax
   140027439:	cmp    BYTE PTR [r8],0x0
   14002743d:	je     0x140027587
   140027443:	cmp    bpl,BYTE PTR [r8]
   140027446:	jne    0x1400274b1
   140027448:	mov    rdx,r8
   14002744b:	mov    r9,rsi
   14002744e:	mov    rax,r9
   140027451:	and    rax,r11
   140027454:	cmp    rax,rbx
   140027457:	ja     0x14002749a
   140027459:	mov    rax,rdx
   14002745c:	and    rax,r11
   14002745f:	cmp    rax,rbx
   140027462:	ja     0x14002749a
   140027464:	movdqu xmm1,XMMWORD PTR [r9]
   140027469:	movdqu xmm0,XMMWORD PTR [rdx]
   14002746d:	pcmpeqb xmm0,xmm1
   140027471:	pcmpeqb xmm1,xmm2
   140027475:	pcmpeqb xmm0,xmm2
   140027479:	por    xmm0,xmm1
   14002747d:	pmovmskb eax,xmm0
   140027481:	test   eax,eax
   140027483:	jne    0x14002748f
   140027485:	add    rdx,0x10
   140027489:	add    r9,0x10
   14002748d:	jmp    0x14002744e
   14002748f:	bsf    eax,eax
   140027492:	mov    ecx,eax
   140027494:	add    rdx,rcx
   140027497:	add    r9,rcx
   14002749a:	mov    al,BYTE PTR [r9]
   14002749d:	test   al,al
   14002749f:	je     0x140027582
   1400274a5:	cmp    BYTE PTR [rdx],al
   1400274a7:	jne    0x1400274b1
   1400274a9:	add    rdx,r10
   1400274ac:	add    r9,r10
   1400274af:	jmp    0x14002744e
   1400274b1:	add    r8,r10
   1400274b4:	jmp    0x140027405
   1400274b9:	mov    rax,rsi
   1400274bc:	and    rax,r11
   1400274bf:	cmp    rax,rbx
   1400274c2:	ja     0x1400274ca
   1400274c4:	movdqu xmm0,XMMWORD PTR [rdx]
   1400274c8:	jmp    0x1400274f5
   1400274ca:	xorps  xmm0,xmm0
   1400274cd:	mov    rcx,rsi
   1400274d0:	mov    dl,bpl
   1400274d3:	mov    r9d,0x10
   1400274d9:	movsx  eax,dl
   1400274dc:	psrldq xmm0,0x1
   1400274e1:	pinsrb xmm0,eax,0xf
   1400274e7:	test   dl,dl
   1400274e9:	je     0x1400274f0
   1400274eb:	add    rcx,r10
   1400274ee:	mov    dl,BYTE PTR [rcx]
   1400274f0:	sub    r9,r10
   1400274f3:	jne    0x1400274d9
   1400274f5:	mov    rax,r8
   1400274f8:	and    rax,r11
   1400274fb:	cmp    rax,rbx
   1400274fe:	ja     0x140027559
   140027500:	movdqu xmm1,XMMWORD PTR [r8]
   140027505:	pcmpistri xmm0,xmm1,0xc
   14002750b:	jbe    0x140027513
   14002750d:	add    r8,0x10
   140027511:	jmp    0x1400274f5
   140027513:	jae    0x140027587
   140027515:	pcmpistri xmm0,xmm1,0xc
   14002751b:	movsxd rax,ecx
   14002751e:	add    r8,rax
   140027521:	mov    rdx,r8
   140027524:	mov    r9,rsi
   140027527:	mov    rax,rdx
   14002752a:	and    rax,r11
   14002752d:	cmp    rax,rbx
   140027530:	ja     0x140027569
   140027532:	mov    rax,r9
   140027535:	and    rax,r11
   140027538:	cmp    rax,rbx
   14002753b:	ja     0x140027569
   14002753d:	movdqu xmm1,XMMWORD PTR [rdx]
   140027541:	movdqu xmm2,XMMWORD PTR [r9]
   140027546:	pcmpistri xmm2,xmm1,0xc
   14002754c:	jno    0x140027564
   14002754e:	js     0x140027582
   140027550:	mov    eax,0x10
   140027555:	mov    ecx,eax
   140027557:	jmp    0x14002757a
   140027559:	cmp    BYTE PTR [r8],0x0
   14002755d:	je     0x140027587
   14002755f:	cmp    BYTE PTR [r8],bpl
   140027562:	je     0x140027521
   140027564:	add    r8,r10
   140027567:	jmp    0x1400274f5
   140027569:	mov    al,BYTE PTR [r9]
   14002756c:	test   al,al
   14002756e:	je     0x140027582
   140027570:	cmp    BYTE PTR [rdx],al
   140027572:	jne    0x140027564
   140027574:	mov    rax,r10
   140027577:	mov    rcx,r10
   14002757a:	add    rdx,rax
   14002757d:	add    r9,rcx
   140027580:	jmp    0x140027527
   140027582:	mov    rax,r8
   140027585:	jmp    0x140027589
   140027587:	xor    eax,eax
   140027589:	mov    rbx,QWORD PTR [rsp+0x20]
   14002758e:	mov    rbp,QWORD PTR [rsp+0x28]
   140027593:	add    rsp,0x10
   140027597:	pop    rsi
   140027598:	ret    
   140027599:	int3   
   14002759a:	int3   
   14002759b:	int3   
   14002759c:	mov    QWORD PTR [rsp+0x8],rbx
   1400275a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400275a6:	mov    QWORD PTR [rsp+0x18],rsi
   1400275ab:	push   rdi
   1400275ac:	push   r12
   1400275ae:	push   r13
   1400275b0:	push   r14
   1400275b2:	push   r15
   1400275b4:	sub    rsp,0x40
   1400275b8:	mov    r12,QWORD PTR [r9+0x8]
   1400275bc:	mov    rbp,rcx
   1400275bf:	mov    r15,QWORD PTR [r9]
   1400275c2:	mov    rcx,r8
   1400275c5:	mov    rbx,QWORD PTR [r9+0x38]
   1400275c9:	sub    r15,r12
   1400275cc:	mov    r14,r9
   1400275cf:	mov    rdi,r8
   1400275d2:	mov    r13,rdx
   1400275d5:	call   0x14001e1b0
   1400275da:	test   BYTE PTR [rbp+0x4],0x66
   1400275de:	jne    0x1400276c4
   1400275e4:	mov    esi,DWORD PTR [r14+0x48]
   1400275e8:	mov    QWORD PTR [rsp+0x30],rbp
   1400275ed:	mov    QWORD PTR [rsp+0x38],rdi
   1400275f2:	cmp    esi,DWORD PTR [rbx]
   1400275f4:	jae    0x140027774
   1400275fa:	mov    edi,esi
   1400275fc:	add    rdi,rdi
   1400275ff:	mov    eax,DWORD PTR [rbx+rdi*8+0x4]
   140027603:	cmp    r15,rax
   140027606:	jb     0x1400276b6
   14002760c:	mov    eax,DWORD PTR [rbx+rdi*8+0x8]
   140027610:	cmp    r15,rax
   140027613:	jae    0x1400276b6
   140027619:	cmp    DWORD PTR [rbx+rdi*8+0x10],0x0
   14002761e:	je     0x1400276b6
   140027624:	cmp    DWORD PTR [rbx+rdi*8+0xc],0x1
   140027629:	je     0x140027642
   14002762b:	mov    eax,DWORD PTR [rbx+rdi*8+0xc]
   14002762f:	lea    rcx,[rsp+0x30]
   140027634:	add    rax,r12
   140027637:	mov    rdx,r13
   14002763a:	call   rax
   14002763c:	test   eax,eax
   14002763e:	js     0x1400276bd
   140027640:	jle    0x1400276b6
   140027642:	cmp    DWORD PTR [rbp+0x0],0xe06d7363
   140027649:	jne    0x140027673
   14002764b:	cmp    QWORD PTR [rip+0x21e85],0x0        # 0x1400494d8
   140027653:	je     0x140027673
   140027655:	lea    rcx,[rip+0x21e7c]        # 0x1400494d8
   14002765c:	call   0x140030920
   140027661:	test   eax,eax
   140027663:	je     0x140027673
   140027665:	mov    edx,0x1
   14002766a:	mov    rcx,rbp
   14002766d:	call   QWORD PTR [rip+0x21e65]        # 0x1400494d8
   140027673:	mov    ecx,DWORD PTR [rbx+rdi*8+0x10]
   140027677:	mov    r8d,0x1
   14002767d:	add    rcx,r12
   140027680:	mov    rdx,r13
   140027683:	call   0x140027b70
   140027688:	mov    rax,QWORD PTR [r14+0x40]
   14002768c:	mov    r8,rbp
   14002768f:	mov    edx,DWORD PTR [rbx+rdi*8+0x10]
   140027693:	mov    rcx,r13
   140027696:	mov    r9d,DWORD PTR [rbp+0x0]
   14002769a:	add    rdx,r12
   14002769d:	mov    QWORD PTR [rsp+0x28],rax
   1400276a2:	mov    rax,QWORD PTR [r14+0x28]
   1400276a6:	mov    QWORD PTR [rsp+0x20],rax
   1400276ab:	call   QWORD PTR [rip+0xaa4f]        # 0x140032100
   1400276b1:	call   0x140027ba0
   1400276b6:	inc    esi
   1400276b8:	jmp    0x1400275f2
   1400276bd:	xor    eax,eax
   1400276bf:	jmp    0x140027779
   1400276c4:	mov    rsi,QWORD PTR [r14+0x20]
   1400276c8:	mov    edi,DWORD PTR [r14+0x48]
   1400276cc:	sub    rsi,r12
   1400276cf:	jmp    0x14002776a
   1400276d4:	mov    ecx,edi
   1400276d6:	add    rcx,rcx
   1400276d9:	mov    eax,DWORD PTR [rbx+rcx*8+0x4]
   1400276dd:	cmp    r15,rax
   1400276e0:	jb     0x140027768
   1400276e6:	mov    eax,DWORD PTR [rbx+rcx*8+0x8]
   1400276ea:	cmp    r15,rax
   1400276ed:	jae    0x140027768
   1400276ef:	mov    r10d,DWORD PTR [rbp+0x4]
   1400276f3:	and    r10d,0x20
   1400276f7:	je     0x14002773d
   1400276f9:	xor    r9d,r9d
   1400276fc:	test   edx,edx
   1400276fe:	je     0x140027738
   140027700:	mov    r8d,r9d
   140027703:	add    r8,r8
   140027706:	mov    eax,DWORD PTR [rbx+r8*8+0x4]
   14002770b:	cmp    rsi,rax
   14002770e:	jb     0x140027730
   140027710:	mov    eax,DWORD PTR [rbx+r8*8+0x8]
   140027715:	cmp    rsi,rax
   140027718:	jae    0x140027730
   14002771a:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   14002771e:	cmp    DWORD PTR [rbx+r8*8+0x10],eax
   140027723:	jne    0x140027730
   140027725:	mov    eax,DWORD PTR [rbx+rcx*8+0xc]
   140027729:	cmp    DWORD PTR [rbx+r8*8+0xc],eax
   14002772e:	je     0x140027738
   140027730:	inc    r9d
   140027733:	cmp    r9d,edx
   140027736:	jb     0x140027700
   140027738:	cmp    r9d,edx
   14002773b:	jne    0x140027774
   14002773d:	mov    eax,DWORD PTR [rbx+rcx*8+0x10]
   140027741:	test   eax,eax
   140027743:	je     0x140027751
   140027745:	cmp    rsi,rax
   140027748:	jne    0x140027768
   14002774a:	test   r10d,r10d
   14002774d:	jne    0x140027774
   14002774f:	jmp    0x140027768
   140027751:	lea    eax,[rdi+0x1]
   140027754:	mov    rdx,r13
   140027757:	mov    DWORD PTR [r14+0x48],eax
   14002775b:	mov    r8d,DWORD PTR [rbx+rcx*8+0xc]
   140027760:	mov    cl,0x1
   140027762:	add    r8,r12
   140027765:	call   r8
   140027768:	inc    edi
   14002776a:	mov    edx,DWORD PTR [rbx]
   14002776c:	cmp    edi,edx
   14002776e:	jb     0x1400276d4
   140027774:	mov    eax,0x1
   140027779:	lea    r11,[rsp+0x40]
   14002777e:	mov    rbx,QWORD PTR [r11+0x30]
   140027782:	mov    rbp,QWORD PTR [r11+0x38]
   140027786:	mov    rsi,QWORD PTR [r11+0x40]
   14002778a:	mov    rsp,r11
   14002778d:	pop    r15
   14002778f:	pop    r14
   140027791:	pop    r13
   140027793:	pop    r12
   140027795:	pop    rdi
   140027796:	ret    
   140027797:	int3   
   140027798:	int3   
   140027799:	int3   
   14002779a:	int3   
   14002779b:	int3   
   14002779c:	int3   
   14002779d:	int3   
   14002779e:	int3   
   14002779f:	int3   
   1400277a0:	int3   
   1400277a1:	int3   
   1400277a2:	int3   
   1400277a3:	int3   
   1400277a4:	int3   
   1400277a5:	int3   
   1400277a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400277b0:	mov    r11,rcx
   1400277b3:	movzx  edx,dl
   1400277b6:	movabs r9,0x101010101010101
   1400277c0:	imul   r9,rdx
   1400277c4:	cmp    r8,0x10
   1400277c8:	jbe    0x1400278d0
   1400277ce:	movq   xmm0,r9
   1400277d3:	punpcklbw xmm0,xmm0
   1400277d7:	cmp    r8,0x80
   1400277de:	jbe    0x140027860
   1400277e4:	bt     DWORD PTR [rip+0x20bd0],0x1        # 0x1400483bc
   1400277ec:	jae    0x140027810
   1400277ee:	mov    eax,edx
   1400277f0:	mov    rdx,rdi
   1400277f3:	mov    rdi,rcx
   1400277f6:	mov    rcx,r8
   1400277f9:	rep stos BYTE PTR es:[rdi],al
   1400277fb:	mov    rdi,rdx
   1400277fe:	mov    rax,r11
   140027801:	ret    
   140027802:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140027810:	movups XMMWORD PTR [rcx],xmm0
   140027813:	add    r8,rcx
   140027816:	add    rcx,0x10
   14002781a:	and    rcx,0xfffffffffffffff0
   14002781e:	sub    r8,rcx
   140027821:	mov    r9,r8
   140027824:	shr    r9,0x7
   140027828:	je     0x140027860
   14002782a:	nop    WORD PTR [rax+rax*1+0x0]
   140027830:	movaps XMMWORD PTR [rcx],xmm0
   140027833:	movaps XMMWORD PTR [rcx+0x10],xmm0
   140027837:	add    rcx,0x80
   14002783e:	movaps XMMWORD PTR [rcx-0x60],xmm0
   140027842:	movaps XMMWORD PTR [rcx-0x50],xmm0
   140027846:	dec    r9
   140027849:	movaps XMMWORD PTR [rcx-0x40],xmm0
   14002784d:	movaps XMMWORD PTR [rcx-0x30],xmm0
   140027851:	movaps XMMWORD PTR [rcx-0x20],xmm0
   140027855:	movapd XMMWORD PTR [rcx-0x10],xmm0
   14002785a:	jne    0x140027830
   14002785c:	and    r8,0x7f
   140027860:	mov    r9,r8
   140027863:	shr    r9,0x4
   140027867:	je     0x14002787c
   140027869:	nop    DWORD PTR [rax+0x0]
   140027870:	movups XMMWORD PTR [rcx],xmm0
   140027873:	add    rcx,0x10
   140027877:	dec    r9
   14002787a:	jne    0x140027870
   14002787c:	and    r8,0xf
   140027880:	je     0x140027888
   140027882:	movups XMMWORD PTR [r8+rcx*1-0x10],xmm0
   140027888:	mov    rax,r11
   14002788b:	ret    
   14002788c:	(bad)  
   14002788d:	js     0x140027891
   14002788f:	add    bl,bh
   140027891:	js     0x140027895
   140027893:	add    BYTE PTR [rdi],ah
   140027895:	jns    0x140027899
   140027897:	add    bh,dh
   140027899:	js     0x14002789d
   14002789b:	add    BYTE PTR [rcx+rdi*2],al
   14002789e:	add    al,BYTE PTR [rax]
   1400278a0:	adc    al,0x79
   1400278a2:	add    al,BYTE PTR [rax]
   1400278a4:	and    al,0x79
   1400278a6:	add    al,BYTE PTR [rax]
   1400278a8:	hlt    
   1400278a9:	js     0x1400278ad
   1400278ab:	add    BYTE PTR [rcx+rdi*2],ch
   1400278ae:	add    al,BYTE PTR [rax]
   1400278b0:	or     BYTE PTR [rcx+0x2],bh
   1400278b3:	add    BYTE PTR [rax+0x79],al
   1400278b6:	add    al,BYTE PTR [rax]
   1400278b8:	xor    BYTE PTR [rcx+0x2],bh
   1400278bb:	add    BYTE PTR [rax],al
   1400278bd:	jns    0x1400278c1
   1400278bf:	add    BYTE PTR [rax],dl
   1400278c1:	jns    0x1400278c5
   1400278c3:	add    BYTE PTR [rax],ah
   1400278c5:	jns    0x1400278c9
   1400278c7:	add    al,dh
   1400278c9:	js     0x1400278cd
   1400278cb:	add    BYTE PTR [rax+0x79],cl
   1400278ce:	add    al,BYTE PTR [rax]
   1400278d0:	mov    rdx,r9
   1400278d3:	lea    r9,[rip+0xfffffffffffd8726]        # 0x140000000
   1400278da:	mov    eax,DWORD PTR [r9+r8*4+0x2788c]
   1400278e2:	add    r9,rax
   1400278e5:	add    rcx,r8
   1400278e8:	mov    rax,r11
   1400278eb:	jmp    r9
   1400278ee:	xchg   ax,ax
   1400278f0:	mov    QWORD PTR [rcx-0xf],rdx
   1400278f4:	mov    DWORD PTR [rcx-0x7],edx
   1400278f7:	mov    WORD PTR [rcx-0x3],dx
   1400278fb:	mov    BYTE PTR [rcx-0x1],dl
   1400278fe:	ret    
   1400278ff:	nop
   140027900:	mov    QWORD PTR [rcx-0xc],rdx
   140027904:	mov    DWORD PTR [rcx-0x4],edx
   140027907:	ret    
   140027908:	mov    QWORD PTR [rcx-0x9],rdx
   14002790c:	mov    BYTE PTR [rcx-0x1],dl
   14002790f:	ret    
   140027910:	mov    QWORD PTR [rcx-0xd],rdx
   140027914:	mov    DWORD PTR [rcx-0x5],edx
   140027917:	mov    BYTE PTR [rcx-0x1],dl
   14002791a:	ret    
   14002791b:	nop    DWORD PTR [rax+rax*1+0x0]
   140027920:	mov    QWORD PTR [rcx-0xe],rdx
   140027924:	mov    DWORD PTR [rcx-0x6],edx
   140027927:	mov    WORD PTR [rcx-0x2],dx
   14002792b:	ret    
   14002792c:	mov    QWORD PTR [rax],rdx
   14002792f:	ret    
   140027930:	mov    QWORD PTR [rax],rdx
   140027933:	mov    WORD PTR [rax+0x8],dx
   140027937:	mov    BYTE PTR [rax+0xa],dl
   14002793a:	ret    
   14002793b:	nop    DWORD PTR [rax+rax*1+0x0]
   140027940:	mov    QWORD PTR [rax],rdx
   140027943:	mov    WORD PTR [rax+0x8],dx
   140027947:	ret    
   140027948:	mov    QWORD PTR [rax],rdx
   14002794b:	mov    QWORD PTR [rax+0x8],rdx
   14002794f:	ret    
   140027950:	int3   
   140027951:	int3   
   140027952:	int3   
   140027953:	int3   
   140027954:	int3   
   140027955:	int3   
   140027956:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027960:	sub    rdx,rcx
   140027963:	cmp    r8,0x8
   140027967:	jb     0x14002798b
   140027969:	test   cl,0x7
   14002796c:	je     0x140027982
   14002796e:	xchg   ax,ax
   140027970:	mov    al,BYTE PTR [rcx]
   140027972:	cmp    al,BYTE PTR [rdx+rcx*1]
   140027975:	jne    0x1400279a3
   140027977:	inc    rcx
   14002797a:	dec    r8
   14002797d:	test   cl,0x7
   140027980:	jne    0x140027970
   140027982:	mov    r9,r8
   140027985:	shr    r9,0x3
   140027989:	jne    0x1400279aa
   14002798b:	test   r8,r8
   14002798e:	je     0x14002799f
   140027990:	mov    al,BYTE PTR [rcx]
   140027992:	cmp    al,BYTE PTR [rdx+rcx*1]
   140027995:	jne    0x1400279a3
   140027997:	inc    rcx
   14002799a:	dec    r8
   14002799d:	jne    0x140027990
   14002799f:	xor    rax,rax
   1400279a2:	ret    
   1400279a3:	sbb    eax,eax
   1400279a5:	sbb    eax,0xffffffff
   1400279a8:	ret    
   1400279a9:	nop
   1400279aa:	shr    r9,0x2
   1400279ae:	je     0x1400279e7
   1400279b0:	mov    rax,QWORD PTR [rcx]
   1400279b3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400279b7:	jne    0x140027a14
   1400279b9:	mov    rax,QWORD PTR [rcx+0x8]
   1400279bd:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   1400279c2:	jne    0x140027a10
   1400279c4:	mov    rax,QWORD PTR [rcx+0x10]
   1400279c8:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   1400279cd:	jne    0x140027a0c
   1400279cf:	mov    rax,QWORD PTR [rcx+0x18]
   1400279d3:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   1400279d8:	jne    0x140027a08
   1400279da:	add    rcx,0x20
   1400279de:	dec    r9
   1400279e1:	jne    0x1400279b0
   1400279e3:	and    r8,0x1f
   1400279e7:	mov    r9,r8
   1400279ea:	shr    r9,0x3
   1400279ee:	je     0x14002798b
   1400279f0:	mov    rax,QWORD PTR [rcx]
   1400279f3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400279f7:	jne    0x140027a14
   1400279f9:	add    rcx,0x8
   1400279fd:	dec    r9
   140027a00:	jne    0x1400279f0
   140027a02:	and    r8,0x7
   140027a06:	jmp    0x14002798b
   140027a08:	add    rcx,0x8
   140027a0c:	add    rcx,0x8
   140027a10:	add    rcx,0x8
   140027a14:	mov    rcx,QWORD PTR [rcx+rdx*1]
   140027a18:	bswap  rax
   140027a1b:	bswap  rcx
   140027a1e:	cmp    rax,rcx
   140027a21:	sbb    eax,eax
   140027a23:	sbb    eax,0xffffffff
   140027a26:	ret    
   140027a27:	int3   
   140027a28:	sub    rsp,0x18
   140027a2c:	movzx  eax,dl
   140027a2f:	mov    r8,rcx
   140027a32:	mov    r10d,eax
   140027a35:	and    r8,0xfffffffffffffff0
   140027a39:	shl    r10d,0x8
   140027a3d:	and    ecx,0xf
   140027a40:	or     r10d,eax
   140027a43:	xorps  xmm2,xmm2
   140027a46:	or     eax,0xffffffff
   140027a49:	xor    r9d,r9d
   140027a4c:	shl    eax,cl
   140027a4e:	movd   xmm0,r10d
   140027a53:	pshuflw xmm1,xmm0,0x0
   140027a58:	movdqa xmm0,xmm2
   140027a5c:	pcmpeqb xmm0,XMMWORD PTR [r8]
   140027a61:	pshufd xmm3,xmm1,0x0
   140027a66:	movdqa xmm1,xmm3
   140027a6a:	pcmpeqb xmm1,XMMWORD PTR [r8]
   140027a6f:	por    xmm1,xmm0
   140027a73:	pmovmskb edx,xmm1
   140027a77:	and    edx,eax
   140027a79:	jne    0x140027a9d
   140027a7b:	add    r8,0x10
   140027a7f:	movdqa xmm1,xmm3
   140027a83:	movdqa xmm0,xmm2
   140027a87:	pcmpeqb xmm1,XMMWORD PTR [r8]
   140027a8c:	pcmpeqb xmm0,XMMWORD PTR [r8]
   140027a91:	por    xmm1,xmm0
   140027a95:	pmovmskb edx,xmm1
   140027a99:	test   edx,edx
   140027a9b:	je     0x140027a7b
   140027a9d:	bsf    edx,edx
   140027aa0:	add    rdx,r8
   140027aa3:	cmp    BYTE PTR [rdx],r10b
   140027aa6:	cmove  r9,rdx
   140027aaa:	mov    rax,r9
   140027aad:	add    rsp,0x18
   140027ab1:	ret    
   140027ab2:	int3   
   140027ab3:	int3   
   140027ab4:	sub    rsp,0x28
   140027ab8:	call   0x140027b08
   140027abd:	call   0x140007b20
   140027ac2:	call   0x140027c28
   140027ac7:	test   al,al
   140027ac9:	jne    0x140027acf
   140027acb:	xor    al,al
   140027acd:	jmp    0x140027ae1
   140027acf:	call   0x140027bc4
   140027ad4:	test   al,al
   140027ad6:	jne    0x140027adf
   140027ad8:	call   0x140027c70
   140027add:	jmp    0x140027acb
   140027adf:	mov    al,0x1
   140027ae1:	add    rsp,0x28
   140027ae5:	ret    
   140027ae6:	int3   
   140027ae7:	int3   
   140027ae8:	sub    rsp,0x28
   140027aec:	test   cl,cl
   140027aee:	jne    0x140027b01
   140027af0:	call   0x140027c04
   140027af5:	call   0x140027c70
   140027afa:	xor    ecx,ecx
   140027afc:	call   0x140007b70
   140027b01:	mov    al,0x1
   140027b03:	add    rsp,0x28
   140027b07:	ret    
   140027b08:	mov    rdx,QWORD PTR [rip+0x1e6d9]        # 0x1400461e8
   140027b0f:	mov    ecx,0x40
   140027b14:	mov    eax,edx
   140027b16:	and    eax,0x3f
   140027b19:	sub    ecx,eax
   140027b1b:	xor    eax,eax
   140027b1d:	ror    rax,cl
   140027b20:	xor    rax,rdx
   140027b23:	mov    QWORD PTR [rip+0x208be],rax        # 0x1400483e8
   140027b2a:	ret    
   140027b2b:	int3   
   140027b2c:	int3   
   140027b2d:	int3   
   140027b2e:	int3   
   140027b2f:	int3   
   140027b30:	int3   
   140027b31:	int3   
   140027b32:	int3   
   140027b33:	int3   
   140027b34:	int3   
   140027b35:	int3   
   140027b36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140027b40:	sub    rsp,0x4d8
   140027b47:	xor    r8,r8
   140027b4a:	xor    r9,r9
   140027b4d:	mov    QWORD PTR [rsp+0x20],rsp
   140027b52:	mov    QWORD PTR [rsp+0x28],r8
   140027b57:	call   0x140030cee
   140027b5c:	add    rsp,0x4d8
   140027b63:	ret    
   140027b64:	int3   
   140027b65:	int3   
   140027b66:	int3   
   140027b67:	int3   
   140027b68:	int3   
   140027b69:	int3   
   140027b6a:	nop    WORD PTR [rax+rax*1+0x0]
   140027b70:	mov    QWORD PTR [rsp+0x8],rcx
   140027b75:	mov    QWORD PTR [rsp+0x18],rdx
   140027b7a:	mov    DWORD PTR [rsp+0x10],r8d
   140027b7f:	mov    r9,0x19930520
   140027b86:	jmp    0x140027b90
   140027b88:	int3   
   140027b89:	int3   
   140027b8a:	int3   
   140027b8b:	int3   
   140027b8c:	int3   
   140027b8d:	int3   
   140027b8e:	xchg   ax,ax
   140027b90:	ret    
   140027b91:	int3   
   140027b92:	int3   
   140027b93:	int3   
   140027b94:	int3   
   140027b95:	int3   
   140027b96:	int3   
   140027b97:	nop    WORD PTR [rax+rax*1+0x0]
   140027ba0:	ret    
   140027ba1:	int3   
   140027ba2:	int3   
   140027ba3:	int3   
   140027ba4:	sub    rsp,0x28
   140027ba8:	test   rcx,rcx
   140027bab:	je     0x140027bbe
   140027bad:	lea    rax,[rip+0x2083c]        # 0x1400483f0
   140027bb4:	cmp    rcx,rax
   140027bb7:	je     0x140027bbe
   140027bb9:	call   0x140007bd0
   140027bbe:	add    rsp,0x28
   140027bc2:	ret    
   140027bc3:	int3   
   140027bc4:	sub    rsp,0x28
   140027bc8:	lea    rcx,[rip+0xffffffffffffffd5]        # 0x140027ba4
   140027bcf:	call   0x140007a80
   140027bd4:	mov    DWORD PTR [rip+0x1e646],eax        # 0x140046220
   140027bda:	cmp    eax,0xffffffff
   140027bdd:	jne    0x140027be3
   140027bdf:	xor    al,al
   140027be1:	jmp    0x140027bfe
   140027be3:	lea    rdx,[rip+0x20806]        # 0x1400483f0
   140027bea:	mov    ecx,eax
   140027bec:	call   0x140007aa0
   140027bf1:	test   eax,eax
   140027bf3:	jne    0x140027bfc
   140027bf5:	call   0x140027c04
   140027bfa:	jmp    0x140027bdf
   140027bfc:	mov    al,0x1
   140027bfe:	add    rsp,0x28
   140027c02:	ret    
   140027c03:	int3   
   140027c04:	sub    rsp,0x28
   140027c08:	mov    ecx,DWORD PTR [rip+0x1e612]        # 0x140046220
   140027c0e:	cmp    ecx,0xffffffff
   140027c11:	je     0x140027c1f
   140027c13:	call   0x140007a90
   140027c18:	or     DWORD PTR [rip+0x1e601],0xffffffff        # 0x140046220
   140027c1f:	mov    al,0x1
   140027c21:	add    rsp,0x28
   140027c25:	ret    
   140027c26:	int3   
   140027c27:	int3   
   140027c28:	rex push rbx
   140027c2a:	sub    rsp,0x20
   140027c2e:	xor    ebx,ebx
   140027c30:	lea    rdx,[rip+0x20831]        # 0x140048468
   140027c37:	xor    r8d,r8d
   140027c3a:	lea    rcx,[rbx+rbx*4]
   140027c3e:	lea    rcx,[rdx+rcx*8]
   140027c42:	mov    edx,0xfa0
   140027c47:	call   0x140007ab0
   140027c4c:	test   eax,eax
   140027c4e:	je     0x140027c61
   140027c50:	inc    DWORD PTR [rip+0x2083a]        # 0x140048490
   140027c56:	inc    ebx
   140027c58:	cmp    ebx,0x1
   140027c5b:	jb     0x140027c30
   140027c5d:	mov    al,0x1
   140027c5f:	jmp    0x140027c68
   140027c61:	call   0x140027c70
   140027c66:	xor    al,al
   140027c68:	add    rsp,0x20
   140027c6c:	pop    rbx
   140027c6d:	ret    
   140027c6e:	int3   
   140027c6f:	int3   
   140027c70:	rex push rbx
   140027c72:	sub    rsp,0x20
   140027c76:	mov    ebx,DWORD PTR [rip+0x20814]        # 0x140048490
   140027c7c:	jmp    0x140027c9b
   140027c7e:	lea    rax,[rip+0x207e3]        # 0x140048468
   140027c85:	dec    ebx
   140027c87:	lea    rcx,[rbx+rbx*4]
   140027c8b:	lea    rcx,[rax+rcx*8]
   140027c8f:	call   QWORD PTR [rip+0xa453]        # 0x1400320e8
   140027c95:	dec    DWORD PTR [rip+0x207f5]        # 0x140048490
   140027c9b:	test   ebx,ebx
   140027c9d:	jne    0x140027c7e
   140027c9f:	mov    al,0x1
   140027ca1:	add    rsp,0x20
   140027ca5:	pop    rbx
   140027ca6:	ret    
   140027ca7:	int3   
   140027ca8:	rex push rbx
   140027caa:	sub    rsp,0x20
   140027cae:	call   0x140029e80
   140027cb3:	mov    ebx,eax
   140027cb5:	call   0x140029e9a
   140027cba:	xor    eax,eax
   140027cbc:	test   bl,0x3f
   140027cbf:	je     0x140027cf4
   140027cc1:	mov    cl,bl
   140027cc3:	lea    edx,[rax+0x10]
   140027cc6:	and    cl,0x1
   140027cc9:	cmovne eax,edx
   140027ccc:	test   bl,0x4
   140027ccf:	je     0x140027cd4
   140027cd1:	or     eax,0x8
   140027cd4:	test   bl,0x8
   140027cd7:	je     0x140027cdc
   140027cd9:	or     eax,0x4
   140027cdc:	test   dl,bl
   140027cde:	je     0x140027ce3
   140027ce0:	or     eax,0x2
   140027ce3:	test   bl,0x20
   140027ce6:	je     0x140027ceb
   140027ce8:	or     eax,0x1
   140027ceb:	test   bl,0x2
   140027cee:	je     0x140027cf4
   140027cf0:	bts    eax,0x13
   140027cf4:	add    rsp,0x20
   140027cf8:	pop    rbx
   140027cf9:	ret    
   140027cfa:	int3   
   140027cfb:	int3   
   140027cfc:	btr    edx,0x13
   140027d00:	jmp    0x140027d08
   140027d05:	int3   
   140027d06:	int3   
   140027d07:	int3   
   140027d08:	mov    QWORD PTR [rsp+0x10],rbx
   140027d0d:	mov    QWORD PTR [rsp+0x18],rsi
   140027d12:	mov    QWORD PTR [rsp+0x20],rdi
   140027d17:	push   r12
   140027d19:	push   r14
   140027d1b:	push   r15
   140027d1d:	sub    rsp,0x20
   140027d21:	mov    ebx,edx
   140027d23:	mov    esi,ecx
   140027d25:	and    ebx,0x308031f
   140027d2b:	call   0x140029e80
   140027d30:	mov    r9d,eax
   140027d33:	xor    edi,edi
   140027d35:	mov    r8b,al
   140027d38:	mov    r11d,0x80
   140027d3e:	mov    eax,edi
   140027d40:	lea    ecx,[rdi+0x10]
   140027d43:	and    r8b,r11b
   140027d46:	cmovne eax,ecx
   140027d49:	mov    r12d,0x200
   140027d4f:	test   r12d,r9d
   140027d52:	je     0x140027d57
   140027d54:	or     eax,0x8
   140027d57:	bt     r9d,0xa
   140027d5c:	jae    0x140027d61
   140027d5e:	or     eax,0x4
   140027d61:	mov    r8d,0x800
   140027d67:	test   r8d,r9d
   140027d6a:	je     0x140027d6f
   140027d6c:	or     eax,0x2
   140027d6f:	mov    r10d,0x1000
   140027d75:	test   r10d,r9d
   140027d78:	je     0x140027d7d
   140027d7a:	or     eax,0x1
   140027d7d:	mov    r14d,0x100
   140027d83:	test   r14d,r9d
   140027d86:	je     0x140027d8c
   140027d88:	bts    eax,0x13
   140027d8c:	mov    ecx,r9d
   140027d8f:	mov    r15d,0x6000
   140027d95:	and    ecx,r15d
   140027d98:	je     0x140027dbe
   140027d9a:	cmp    ecx,0x2000
   140027da0:	je     0x140027dbb
   140027da2:	cmp    ecx,0x4000
   140027da8:	je     0x140027db6
   140027daa:	cmp    ecx,r15d
   140027dad:	jne    0x140027dbe
   140027daf:	or     eax,0x300
   140027db4:	jmp    0x140027dbe
   140027db6:	or     eax,r12d
   140027db9:	jmp    0x140027dbe
   140027dbb:	or     eax,r14d
   140027dbe:	mov    edx,0x8040
   140027dc3:	and    r9d,edx
   140027dc6:	sub    r9d,0x40
   140027dca:	je     0x140027de8
   140027dcc:	sub    r9d,0x7fc0
   140027dd3:	je     0x140027de1
   140027dd5:	cmp    r9d,0x40
   140027dd9:	jne    0x140027dec
   140027ddb:	bts    eax,0x18
   140027ddf:	jmp    0x140027dec
   140027de1:	or     eax,0x3000000
   140027de6:	jmp    0x140027dec
   140027de8:	bts    eax,0x19
   140027dec:	mov    ecx,ebx
   140027dee:	not    ecx
   140027df0:	and    ecx,eax
   140027df2:	and    esi,ebx
   140027df4:	or     ecx,esi
   140027df6:	cmp    ecx,eax
   140027df8:	je     0x140027f84
   140027dfe:	mov    al,cl
   140027e00:	mov    esi,0x10
   140027e05:	mov    ebx,edi
   140027e07:	and    al,sil
   140027e0a:	cmovne ebx,r11d
   140027e0e:	mov    DWORD PTR [rsp+0x40],ebx
   140027e12:	test   cl,0x8
   140027e15:	je     0x140027e1e
   140027e17:	or     ebx,r12d
   140027e1a:	mov    DWORD PTR [rsp+0x40],ebx
   140027e1e:	test   cl,0x4
   140027e21:	je     0x140027e2b
   140027e23:	bts    ebx,0xa
   140027e27:	mov    DWORD PTR [rsp+0x40],ebx
   140027e2b:	test   cl,0x2
   140027e2e:	je     0x140027e37
   140027e30:	or     ebx,r8d
   140027e33:	mov    DWORD PTR [rsp+0x40],ebx
   140027e37:	test   cl,0x1
   140027e3a:	je     0x140027e43
   140027e3c:	or     ebx,r10d
   140027e3f:	mov    DWORD PTR [rsp+0x40],ebx
   140027e43:	bt     ecx,0x13
   140027e47:	jae    0x140027e50
   140027e49:	or     ebx,r14d
   140027e4c:	mov    DWORD PTR [rsp+0x40],ebx
   140027e50:	mov    eax,ecx
   140027e52:	and    eax,0x300
   140027e57:	je     0x140027e7d
   140027e59:	cmp    eax,r14d
   140027e5c:	je     0x140027e75
   140027e5e:	cmp    eax,r12d
   140027e61:	je     0x140027e6f
   140027e63:	cmp    eax,0x300
   140027e68:	jne    0x140027e7d
   140027e6a:	or     ebx,r15d
   140027e6d:	jmp    0x140027e79
   140027e6f:	bts    ebx,0xe
   140027e73:	jmp    0x140027e79
   140027e75:	bts    ebx,0xd
   140027e79:	mov    DWORD PTR [rsp+0x40],ebx
   140027e7d:	and    ecx,0x3000000
   140027e83:	cmp    ecx,0x1000000
   140027e89:	je     0x140027ea6
   140027e8b:	cmp    ecx,0x2000000
   140027e91:	je     0x140027ea1
   140027e93:	cmp    ecx,0x3000000
   140027e99:	jne    0x140027eac
   140027e9b:	bts    ebx,0xf
   140027e9f:	jmp    0x140027ea8
   140027ea1:	or     ebx,0x40
   140027ea4:	jmp    0x140027ea8
   140027ea6:	or     ebx,edx
   140027ea8:	mov    DWORD PTR [rsp+0x40],ebx
   140027eac:	cmp    BYTE PTR [rip+0x1e371],dil        # 0x140046224
   140027eb3:	je     0x140027ef1
   140027eb5:	test   bl,0x40
   140027eb8:	je     0x140027ef1
   140027eba:	mov    ecx,ebx
   140027ebc:	call   0x140029e90
   140027ec1:	jmp    0x140027eef
   140027ec3:	mov    BYTE PTR [rip+0x1e35a],0x0        # 0x140046224
   140027eca:	mov    ebx,DWORD PTR [rsp+0x40]
   140027ece:	and    ebx,0xffffffbf
   140027ed1:	mov    ecx,ebx
   140027ed3:	call   0x140029e90
   140027ed8:	xor    edi,edi
   140027eda:	lea    esi,[rdi+0x10]
   140027edd:	mov    r12d,0x200
   140027ee3:	mov    r14d,0x100
   140027ee9:	mov    r15d,0x6000
   140027eef:	jmp    0x140027efb
   140027ef1:	and    ebx,0xffffffbf
   140027ef4:	mov    ecx,ebx
   140027ef6:	call   0x140029e90
   140027efb:	mov    al,bl
   140027efd:	and    al,0x80
   140027eff:	cmovne edi,esi
   140027f02:	test   r12d,ebx
   140027f05:	je     0x140027f0a
   140027f07:	or     edi,0x8
   140027f0a:	bt     ebx,0xa
   140027f0e:	jae    0x140027f13
   140027f10:	or     edi,0x4
   140027f13:	bt     ebx,0xb
   140027f17:	jae    0x140027f1c
   140027f19:	or     edi,0x2
   140027f1c:	bt     ebx,0xc
   140027f20:	jae    0x140027f25
   140027f22:	or     edi,0x1
   140027f25:	test   r14d,ebx
   140027f28:	je     0x140027f2e
   140027f2a:	bts    edi,0x13
   140027f2e:	mov    eax,ebx
   140027f30:	and    eax,r15d
   140027f33:	je     0x140027f58
   140027f35:	cmp    eax,0x2000
   140027f3a:	je     0x140027f55
   140027f3c:	cmp    eax,0x4000
   140027f41:	je     0x140027f50
   140027f43:	cmp    eax,r15d
   140027f46:	jne    0x140027f58
   140027f48:	or     edi,0x300
   140027f4e:	jmp    0x140027f58
   140027f50:	or     edi,r12d
   140027f53:	jmp    0x140027f58
   140027f55:	or     edi,r14d
   140027f58:	and    ebx,0x8040
   140027f5e:	sub    ebx,0x40
   140027f61:	je     0x140027f7e
   140027f63:	sub    ebx,0x7fc0
   140027f69:	je     0x140027f76
   140027f6b:	cmp    ebx,0x40
   140027f6e:	jne    0x140027f82
   140027f70:	bts    edi,0x18
   140027f74:	jmp    0x140027f82
   140027f76:	or     edi,0x3000000
   140027f7c:	jmp    0x140027f82
   140027f7e:	bts    edi,0x19
   140027f82:	mov    eax,edi
   140027f84:	mov    rbx,QWORD PTR [rsp+0x48]
   140027f89:	mov    rsi,QWORD PTR [rsp+0x50]
   140027f8e:	mov    rdi,QWORD PTR [rsp+0x58]
   140027f93:	add    rsp,0x20
   140027f97:	pop    r15
   140027f99:	pop    r14
   140027f9b:	pop    r12
   140027f9d:	ret    
   140027f9e:	int3   
   140027f9f:	int3   
   140027fa0:	mov    QWORD PTR [rsp+0x10],rbx
   140027fa5:	mov    QWORD PTR [rsp+0x18],rsi
   140027faa:	push   rbp
   140027fab:	push   rdi
   140027fac:	push   r14
   140027fae:	lea    rbp,[rsp-0x4f0]
   140027fb6:	sub    rsp,0x5f0
   140027fbd:	mov    rax,QWORD PTR [rip+0x1e224]        # 0x1400461e8
   140027fc4:	xor    rax,rsp
   140027fc7:	mov    QWORD PTR [rbp+0x4e0],rax
   140027fce:	mov    edi,r8d
   140027fd1:	mov    esi,edx
   140027fd3:	mov    ebx,ecx
   140027fd5:	cmp    ecx,0xffffffff
   140027fd8:	je     0x140027fdf
   140027fda:	call   0x140026b44
   140027fdf:	xor    edx,edx
   140027fe1:	lea    rcx,[rsp+0x70]
   140027fe6:	mov    r8d,0x98
   140027fec:	call   0x1400277b0
   140027ff1:	xor    edx,edx
   140027ff3:	lea    rcx,[rbp+0x10]
   140027ff7:	mov    r8d,0x4d0
   140027ffd:	call   0x1400277b0
   140028002:	lea    rax,[rsp+0x70]
   140028007:	mov    QWORD PTR [rsp+0x48],rax
   14002800c:	lea    rcx,[rbp+0x10]
   140028010:	lea    rax,[rbp+0x10]
   140028014:	mov    QWORD PTR [rsp+0x50],rax
   140028019:	call   QWORD PTR [rip+0xa149]        # 0x140032168
   14002801f:	mov    r14,QWORD PTR [rbp+0x108]
   140028026:	lea    rdx,[rsp+0x40]
   14002802b:	mov    rcx,r14
   14002802e:	xor    r8d,r8d
   140028031:	call   QWORD PTR [rip+0xa129]        # 0x140032160
   140028037:	test   rax,rax
   14002803a:	je     0x140028072
   14002803c:	and    QWORD PTR [rsp+0x38],0x0
   140028042:	lea    rcx,[rsp+0x60]
   140028047:	mov    rdx,QWORD PTR [rsp+0x40]
   14002804c:	mov    r9,rax
   14002804f:	mov    QWORD PTR [rsp+0x30],rcx
   140028054:	mov    r8,r14
   140028057:	lea    rcx,[rsp+0x58]
   14002805c:	mov    QWORD PTR [rsp+0x28],rcx
   140028061:	lea    rcx,[rbp+0x10]
   140028065:	mov    QWORD PTR [rsp+0x20],rcx
   14002806a:	xor    ecx,ecx
   14002806c:	call   QWORD PTR [rip+0xa0e6]        # 0x140032158
   140028072:	mov    rax,QWORD PTR [rbp+0x508]
   140028079:	mov    QWORD PTR [rbp+0x108],rax
   140028080:	lea    rax,[rbp+0x508]
   140028087:	add    rax,0x8
   14002808b:	mov    DWORD PTR [rsp+0x70],esi
   14002808f:	mov    QWORD PTR [rbp+0xa8],rax
   140028096:	mov    rax,QWORD PTR [rbp+0x508]
   14002809d:	mov    QWORD PTR [rbp-0x80],rax
   1400280a1:	mov    DWORD PTR [rsp+0x74],edi
   1400280a5:	call   QWORD PTR [rip+0xa0a5]        # 0x140032150
   1400280ab:	xor    ecx,ecx
   1400280ad:	mov    edi,eax
   1400280af:	call   QWORD PTR [rip+0xa08b]        # 0x140032140
   1400280b5:	lea    rcx,[rsp+0x48]
   1400280ba:	call   QWORD PTR [rip+0xa088]        # 0x140032148
   1400280c0:	test   eax,eax
   1400280c2:	jne    0x1400280d4
   1400280c4:	test   edi,edi
   1400280c6:	jne    0x1400280d4
   1400280c8:	cmp    ebx,0xffffffff
   1400280cb:	je     0x1400280d4
   1400280cd:	mov    ecx,ebx
   1400280cf:	call   0x140026b44
   1400280d4:	mov    rcx,QWORD PTR [rbp+0x4e0]
   1400280db:	xor    rcx,rsp
   1400280de:	call   0x140030a30
   1400280e3:	lea    r11,[rsp+0x5f0]
   1400280eb:	mov    rbx,QWORD PTR [r11+0x28]
   1400280ef:	mov    rsi,QWORD PTR [r11+0x30]
   1400280f3:	mov    rsp,r11
   1400280f6:	pop    r14
   1400280f8:	pop    rdi
   1400280f9:	pop    rbp
   1400280fa:	ret    
   1400280fb:	int3   
   1400280fc:	mov    QWORD PTR [rip+0x20405],rcx        # 0x140048508
   140028103:	ret    
   140028104:	mov    rax,rsp
   140028107:	mov    QWORD PTR [rax+0x8],rbx
   14002810b:	mov    QWORD PTR [rax+0x10],rbp
   14002810f:	mov    QWORD PTR [rax+0x18],rsi
   140028113:	mov    QWORD PTR [rax+0x20],rdi
   140028117:	push   r14
   140028119:	sub    rsp,0x30
   14002811d:	mov    edi,r9d
   140028120:	mov    rsi,r8
   140028123:	mov    rbp,rdx
   140028126:	mov    r14,rcx
   140028129:	call   0x14002a2dc
   14002812e:	test   rax,rax
   140028131:	je     0x140028174
   140028133:	mov    rbx,QWORD PTR [rax+0x3b8]
   14002813a:	test   rbx,rbx
   14002813d:	je     0x140028174
   14002813f:	mov    rcx,rbx
   140028142:	call   QWORD PTR [rip+0xa498]        # 0x1400325e0
   140028148:	mov    r9d,edi
   14002814b:	mov    r8,rsi
   14002814e:	mov    rdx,rbp
   140028151:	mov    rcx,r14
   140028154:	mov    rax,rbx
   140028157:	mov    rbx,QWORD PTR [rsp+0x40]
   14002815c:	mov    rbp,QWORD PTR [rsp+0x48]
   140028161:	mov    rsi,QWORD PTR [rsp+0x50]
   140028166:	mov    rdi,QWORD PTR [rsp+0x58]
   14002816b:	add    rsp,0x30
   14002816f:	pop    r14
   140028171:	rex.W jmp rax
   140028174:	mov    rbx,QWORD PTR [rip+0x1e06d]        # 0x1400461e8
   14002817b:	mov    ecx,ebx
   14002817d:	xor    rbx,QWORD PTR [rip+0x20384]        # 0x140048508
   140028184:	and    ecx,0x3f
   140028187:	ror    rbx,cl
   14002818a:	test   rbx,rbx
   14002818d:	jne    0x14002813f
   14002818f:	mov    rax,QWORD PTR [rsp+0x60]
   140028194:	mov    r9d,edi
   140028197:	mov    r8,rsi
   14002819a:	mov    QWORD PTR [rsp+0x20],rax
   14002819f:	mov    rdx,rbp
   1400281a2:	mov    rcx,r14
   1400281a5:	call   0x1400281cc
   1400281aa:	int3   
   1400281ab:	int3   
   1400281ac:	sub    rsp,0x38
   1400281b0:	and    QWORD PTR [rsp+0x20],0x0
   1400281b6:	xor    r9d,r9d
   1400281b9:	xor    r8d,r8d
   1400281bc:	xor    edx,edx
   1400281be:	xor    ecx,ecx
   1400281c0:	call   0x140028104
   1400281c5:	add    rsp,0x38
   1400281c9:	ret    
   1400281ca:	int3   
   1400281cb:	int3   
   1400281cc:	sub    rsp,0x28
   1400281d0:	mov    ecx,0x17
   1400281d5:	call   0x140026ee0
   1400281da:	test   eax,eax
   1400281dc:	je     0x1400281e5
   1400281de:	mov    ecx,0x5
   1400281e3:	int    0x29
   1400281e5:	mov    r8d,0x1
   1400281eb:	mov    edx,0xc0000417
   1400281f0:	lea    ecx,[r8+0x1]
   1400281f4:	call   0x140027fa0
   1400281f9:	call   QWORD PTR [rip+0x9f81]        # 0x140032180
   1400281ff:	mov    rcx,rax
   140028202:	mov    edx,0xc0000417
   140028207:	add    rsp,0x28
   14002820b:	rex.W jmp QWORD PTR [rip+0x9ece]        # 0x1400320e0
   140028212:	int3   
   140028213:	int3   
   140028214:	mov    r8,QWORD PTR [rip+0x1dfcd]        # 0x1400461e8
   14002821b:	mov    r9,rcx
   14002821e:	mov    edx,r8d
   140028221:	mov    ecx,0x40
   140028226:	and    edx,0x3f
   140028229:	mov    rax,r8
   14002822c:	xor    rax,QWORD PTR [rip+0x202d5]        # 0x140048508
   140028233:	sub    ecx,edx
   140028235:	ror    r9,cl
   140028238:	mov    ecx,edx
   14002823a:	xor    r9,r8
   14002823d:	ror    rax,cl
   140028240:	mov    QWORD PTR [rip+0x202c1],r9        # 0x140048508
   140028247:	ret    
   140028248:	int3   
   140028249:	int3   
   14002824a:	int3   
   14002824b:	int3   
   14002824c:	int3   
   14002824d:	int3   
   14002824e:	int3   
   14002824f:	int3   
   140028250:	int3   
   140028251:	int3   
   140028252:	int3   
   140028253:	int3   
   140028254:	int3   
   140028255:	int3   
   140028256:	data16 nop WORD PTR [rax+rax*1+0x0]
   140028260:	sub    rdx,rcx
   140028263:	test   cl,0x7
   140028266:	je     0x14002827c
   140028268:	movzx  eax,BYTE PTR [rcx]
   14002826b:	cmp    al,BYTE PTR [rcx+rdx*1]
   14002826e:	jne    0x1400282bf
   140028270:	inc    rcx
   140028273:	test   al,al
   140028275:	je     0x1400282bc
   140028277:	test   cl,0x7
   14002827a:	jne    0x140028268
   14002827c:	movabs r11,0x8080808080808080
   140028286:	movabs r10,0xfefefefefefefeff
   140028290:	lea    eax,[ecx+edx*1]
   140028294:	and    eax,0xfff
   140028299:	cmp    eax,0xff8
   14002829e:	ja     0x140028268
   1400282a0:	mov    rax,QWORD PTR [rcx]
   1400282a3:	cmp    rax,QWORD PTR [rcx+rdx*1]
   1400282a7:	jne    0x140028268
   1400282a9:	lea    r9,[r10+rax*1]
   1400282ad:	not    rax
   1400282b0:	add    rcx,0x8
   1400282b4:	and    rax,r9
   1400282b7:	test   r11,rax
   1400282ba:	je     0x140028290
   1400282bc:	xor    eax,eax
   1400282be:	ret    
   1400282bf:	sbb    rax,rax
   1400282c2:	or     rax,0x1
   1400282c6:	ret    
   1400282c7:	int3   
   1400282c8:	int3   
   1400282c9:	int3   
   1400282ca:	int3   
   1400282cb:	int3   
   1400282cc:	int3   
   1400282cd:	int3   
   1400282ce:	int3   
   1400282cf:	int3   
   1400282d0:	int3   
   1400282d1:	int3   
   1400282d2:	int3   
   1400282d3:	int3   
   1400282d4:	int3   
   1400282d5:	int3   
   1400282d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400282e0:	mov    r11,rcx
   1400282e3:	or     r8,r8
   1400282e6:	je     0x14002830c
   1400282e8:	sub    rcx,rdx
   1400282eb:	test   dl,0x7
   1400282ee:	je     0x140028318
   1400282f0:	mov    al,BYTE PTR [rdx]
   1400282f2:	test   al,al
   1400282f4:	mov    BYTE PTR [rcx+rdx*1],al
   1400282f7:	je     0x1400283e0
   1400282fd:	inc    rdx
   140028300:	dec    r8
   140028303:	je     0x14002830c
   140028305:	test   dl,0x7
   140028308:	jne    0x1400282f0
   14002830a:	jmp    0x140028318
   14002830c:	mov    rax,r11
   14002830f:	ret    
   140028310:	mov    QWORD PTR [rcx+rdx*1],rax
   140028314:	add    rdx,0x8
   140028318:	mov    rax,QWORD PTR [rdx]
   14002831b:	sub    r8,0x8
   14002831f:	jbe    0x140028347
   140028321:	movabs r9,0x7efefefefefefeff
   14002832b:	add    r9,rax
   14002832e:	mov    r10,rax
   140028331:	xor    r10,0xffffffffffffffff
   140028335:	xor    r10,r9
   140028338:	movabs r9,0x8101010101010100
   140028342:	test   r9,r10
   140028345:	je     0x140028310
   140028347:	add    r8,0x8
   14002834b:	je     0x1400283dc
   140028351:	test   al,al
   140028353:	mov    BYTE PTR [rcx+rdx*1],al
   140028356:	je     0x1400283e0
   14002835c:	inc    rdx
   14002835f:	dec    r8
   140028362:	je     0x1400283dc
   140028364:	test   ah,ah
   140028366:	mov    BYTE PTR [rcx+rdx*1],ah
   140028369:	je     0x1400283e0
   14002836b:	inc    rdx
   14002836e:	dec    r8
   140028371:	je     0x1400283dc
   140028373:	shr    rax,0x10
   140028377:	test   al,al
   140028379:	mov    BYTE PTR [rcx+rdx*1],al
   14002837c:	je     0x1400283e0
   14002837e:	inc    rdx
   140028381:	dec    r8
   140028384:	je     0x1400283dc
   140028386:	test   ah,ah
   140028388:	mov    BYTE PTR [rcx+rdx*1],ah
   14002838b:	je     0x1400283e0
   14002838d:	inc    rdx
   140028390:	dec    r8
   140028393:	je     0x1400283dc
   140028395:	shr    rax,0x10
   140028399:	test   al,al
   14002839b:	mov    BYTE PTR [rcx+rdx*1],al
   14002839e:	je     0x1400283e0
   1400283a0:	inc    rdx
   1400283a3:	dec    r8
   1400283a6:	je     0x1400283dc
   1400283a8:	test   ah,ah
   1400283aa:	mov    BYTE PTR [rcx+rdx*1],ah
   1400283ad:	je     0x1400283e0
   1400283af:	inc    rdx
   1400283b2:	dec    r8
   1400283b5:	je     0x1400283dc
   1400283b7:	shr    eax,0x10
   1400283ba:	test   al,al
   1400283bc:	mov    BYTE PTR [rcx+rdx*1],al
   1400283bf:	je     0x1400283e0
   1400283c1:	inc    rdx
   1400283c4:	dec    r8
   1400283c7:	je     0x1400283dc
   1400283c9:	test   ah,ah
   1400283cb:	mov    BYTE PTR [rcx+rdx*1],ah
   1400283ce:	je     0x1400283e0
   1400283d0:	inc    rdx
   1400283d3:	dec    r8
   1400283d6:	jne    0x140028318
   1400283dc:	mov    rax,r11
   1400283df:	ret    
   1400283e0:	add    rcx,rdx
   1400283e3:	xor    rdx,rdx
   1400283e6:	cmp    r8,0x10
   1400283ea:	jb     0x140028431
   1400283ec:	test   cl,0x7
   1400283ef:	je     0x1400283fb
   1400283f1:	inc    rcx
   1400283f4:	mov    BYTE PTR [rcx],dl
   1400283f6:	dec    r8
   1400283f9:	jmp    0x1400283ec
   1400283fb:	sub    r8,0x20
   1400283ff:	jb     0x14002841a
   140028401:	mov    QWORD PTR [rcx],rdx
   140028404:	mov    QWORD PTR [rcx+0x8],rdx
   140028408:	mov    QWORD PTR [rcx+0x10],rdx
   14002840c:	mov    QWORD PTR [rcx+0x18],rdx
   140028410:	add    rcx,0x20
   140028414:	sub    r8,0x20
   140028418:	jae    0x140028401
   14002841a:	add    r8,0x20
   14002841e:	sub    r8,0x8
   140028422:	jb     0x14002842d
   140028424:	mov    QWORD PTR [rcx],rdx
   140028427:	add    rcx,0x8
   14002842b:	jmp    0x14002841e
   14002842d:	add    r8,0x8
   140028431:	sub    r8,0x1
   140028435:	jb     0x14002843e
   140028437:	mov    BYTE PTR [rcx],dl
   140028439:	inc    rcx
   14002843c:	jmp    0x140028431
   14002843e:	mov    rax,r11
   140028441:	ret    
   140028442:	int3   
   140028443:	int3   
   140028444:	rex push rbp
   140028446:	sub    rsp,0x20
   14002844a:	lea    rbp,[rsp+0x20]
   14002844f:	and    rbp,0xffffffffffffffe0
   140028453:	mov    eax,DWORD PTR [rip+0x1dda7]        # 0x140046200
   140028459:	mov    r9,rcx
   14002845c:	cmp    eax,0x5
   14002845f:	jl     0x1400284f1
   140028465:	mov    r8,rcx
   140028468:	mov    eax,0x20
   14002846d:	and    r8d,0x1f
   140028471:	sub    rax,r8
   140028474:	neg    r8
   140028477:	sbb    r10,r10
   14002847a:	and    r10,rax
   14002847d:	cmp    rdx,r10
   140028480:	cmovb  r10,rdx
   140028484:	lea    rax,[r10+rcx*1]
   140028488:	jmp    0x140028492
   14002848a:	cmp    BYTE PTR [rcx],0x0
   14002848d:	je     0x140028497
   14002848f:	inc    rcx
   140028492:	cmp    rcx,rax
   140028495:	jne    0x14002848a
   140028497:	sub    rcx,r9
   14002849a:	cmp    rcx,r10
   14002849d:	jne    0x140028594
   1400284a3:	mov    r8,rdx
   1400284a6:	add    rcx,r9
   1400284a9:	sub    r8,r10
   1400284ac:	mov    rax,r8
   1400284af:	and    eax,0x1f
   1400284b2:	sub    r8,rax
   1400284b5:	add    r8,rcx
   1400284b8:	vxorps ymm2,ymm2,ymm2
   1400284bc:	jmp    0x1400284ce
   1400284be:	vpcmpeqb ymm1,ymm2,YMMWORD PTR [rcx]
   1400284c2:	vpmovmskb eax,ymm1
   1400284c6:	test   eax,eax
   1400284c8:	jne    0x1400284d3
   1400284ca:	add    rcx,0x20
   1400284ce:	cmp    rcx,r8
   1400284d1:	jne    0x1400284be
   1400284d3:	lea    rax,[r9+rdx*1]
   1400284d7:	jmp    0x1400284e1
   1400284d9:	cmp    BYTE PTR [rcx],0x0
   1400284dc:	je     0x1400284e6
   1400284de:	inc    rcx
   1400284e1:	cmp    rcx,rax
   1400284e4:	jne    0x1400284d9
   1400284e6:	sub    rcx,r9
   1400284e9:	vzeroupper 
   1400284ec:	jmp    0x140028594
   1400284f1:	cmp    eax,0x1
   1400284f4:	jl     0x14002857e
   1400284fa:	and    ecx,0xf
   1400284fd:	mov    eax,0x10
   140028502:	sub    rax,rcx
   140028505:	neg    rcx
   140028508:	mov    rcx,r9
   14002850b:	sbb    r10,r10
   14002850e:	and    r10,rax
   140028511:	cmp    rdx,r10
   140028514:	cmovb  r10,rdx
   140028518:	lea    rax,[r10+r9*1]
   14002851c:	cmp    r9,rax
   14002851f:	je     0x14002852e
   140028521:	cmp    BYTE PTR [rcx],0x0
   140028524:	je     0x14002852e
   140028526:	inc    rcx
   140028529:	cmp    rcx,rax
   14002852c:	jne    0x140028521
   14002852e:	sub    rcx,r9
   140028531:	cmp    rcx,r10
   140028534:	jne    0x140028594
   140028536:	mov    r8,rdx
   140028539:	add    rcx,r9
   14002853c:	sub    r8,r10
   14002853f:	xorps  xmm1,xmm1
   140028542:	mov    rax,r8
   140028545:	and    eax,0xf
   140028548:	sub    r8,rax
   14002854b:	add    r8,rcx
   14002854e:	jmp    0x140028564
   140028550:	movdqa xmm0,xmm1
   140028554:	pcmpeqb xmm0,XMMWORD PTR [rcx]
   140028558:	pmovmskb eax,xmm0
   14002855c:	test   eax,eax
   14002855e:	jne    0x140028569
   140028560:	add    rcx,0x10
   140028564:	cmp    rcx,r8
   140028567:	jne    0x140028550
   140028569:	lea    rax,[r9+rdx*1]
   14002856d:	jmp    0x140028577
   14002856f:	cmp    BYTE PTR [rcx],0x0
   140028572:	je     0x140028591
   140028574:	inc    rcx
   140028577:	cmp    rcx,rax
   14002857a:	jne    0x14002856f
   14002857c:	jmp    0x140028591
   14002857e:	lea    rax,[rcx+rdx*1]
   140028582:	jmp    0x14002858c
   140028584:	cmp    BYTE PTR [rcx],0x0
   140028587:	je     0x140028591
   140028589:	inc    rcx
   14002858c:	cmp    rcx,rax
   14002858f:	jne    0x140028584
   140028591:	sub    rcx,r9
   140028594:	mov    rax,rcx
   140028597:	add    rsp,0x20
   14002859b:	pop    rbp
   14002859c:	ret    
   14002859d:	int3   
   14002859e:	int3   
   14002859f:	int3   
   1400285a0:	mov    rax,rsp
   1400285a3:	mov    QWORD PTR [rax+0x8],rbx
   1400285a7:	mov    QWORD PTR [rax+0x10],rbp
   1400285ab:	mov    QWORD PTR [rax+0x18],rsi
   1400285af:	mov    QWORD PTR [rax+0x20],rdi
   1400285b3:	push   r14
   1400285b5:	sub    rsp,0x20
   1400285b9:	mov    eax,DWORD PTR [rip+0x1ff51]        # 0x140048510
   1400285bf:	xor    ebx,ebx
   1400285c1:	mov    edi,0x3
   1400285c6:	test   eax,eax
   1400285c8:	jne    0x1400285d1
   1400285ca:	mov    eax,0x200
   1400285cf:	jmp    0x1400285d6
   1400285d1:	cmp    eax,edi
   1400285d3:	cmovl  eax,edi
   1400285d6:	movsxd rcx,eax
   1400285d9:	mov    edx,0x8
   1400285de:	mov    DWORD PTR [rip+0x1ff2c],eax        # 0x140048510
   1400285e4:	call   0x140007c20
   1400285e9:	xor    ecx,ecx
   1400285eb:	mov    QWORD PTR [rip+0x1ff26],rax        # 0x140048518
   1400285f2:	call   0x140007bd0
   1400285f7:	cmp    QWORD PTR [rip+0x1ff1a],rbx        # 0x140048518
   1400285fe:	jne    0x14002862f
   140028600:	mov    edx,0x8
   140028605:	mov    DWORD PTR [rip+0x1ff05],edi        # 0x140048510
   14002860b:	mov    rcx,rdi
   14002860e:	call   0x140007c20
   140028613:	xor    ecx,ecx
   140028615:	mov    QWORD PTR [rip+0x1fefc],rax        # 0x140048518
   14002861c:	call   0x140007bd0
   140028621:	cmp    QWORD PTR [rip+0x1fef0],rbx        # 0x140048518
   140028628:	jne    0x14002862f
   14002862a:	or     eax,0xffffffff
   14002862d:	jmp    0x1400286a4
   14002862f:	mov    r14,rbx
   140028632:	lea    rsi,[rip+0x1dc0f]        # 0x140046248
   140028639:	lea    rbp,[rip+0x1dbf0]        # 0x140046230
   140028640:	lea    rcx,[rbp+0x30]
   140028644:	xor    r8d,r8d
   140028647:	mov    edx,0xfa0
   14002864c:	call   0x14002a8b4
   140028651:	mov    rax,QWORD PTR [rip+0x1fec0]        # 0x140048518
   140028658:	lea    rdx,[rip+0x20241]        # 0x1400488a0
   14002865f:	mov    rcx,rbx
   140028662:	and    ecx,0x3f
   140028665:	shl    rcx,0x6
   140028669:	mov    QWORD PTR [r14+rax*1],rbp
   14002866d:	mov    rax,rbx
   140028670:	sar    rax,0x6
   140028674:	mov    rax,QWORD PTR [rdx+rax*8]
   140028678:	mov    rcx,QWORD PTR [rax+rcx*1+0x28]
   14002867d:	add    rcx,0x2
   140028681:	cmp    rcx,0x2
   140028685:	ja     0x14002868d
   140028687:	mov    DWORD PTR [rsi],0xfffffffe
   14002868d:	inc    rbx
   140028690:	add    rbp,0x58
   140028694:	add    r14,0x8
   140028698:	add    rsi,0x58
   14002869c:	sub    rdi,0x1
   1400286a0:	jne    0x140028640
   1400286a2:	xor    eax,eax
   1400286a4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400286a9:	mov    rbp,QWORD PTR [rsp+0x38]
   1400286ae:	mov    rsi,QWORD PTR [rsp+0x40]
   1400286b3:	mov    rdi,QWORD PTR [rsp+0x48]
   1400286b8:	add    rsp,0x20
   1400286bc:	pop    r14
   1400286be:	ret    
   1400286bf:	int3   
   1400286c0:	rex push rbx
   1400286c2:	sub    rsp,0x20
   1400286c6:	call   0x1400287f8
   1400286cb:	call   0x14002ab88
   1400286d0:	xor    ebx,ebx
   1400286d2:	mov    rcx,QWORD PTR [rip+0x1fe3f]        # 0x140048518
   1400286d9:	mov    rcx,QWORD PTR [rbx+rcx*1]
   1400286dd:	call   0x14002ac3c
   1400286e2:	mov    rax,QWORD PTR [rip+0x1fe2f]        # 0x140048518
   1400286e9:	mov    rcx,QWORD PTR [rbx+rax*1]
   1400286ed:	add    rcx,0x30
   1400286f1:	call   QWORD PTR [rip+0x99f1]        # 0x1400320e8
   1400286f7:	add    rbx,0x8
   1400286fb:	cmp    rbx,0x18
   1400286ff:	jne    0x1400286d2
   140028701:	mov    rcx,QWORD PTR [rip+0x1fe10]        # 0x140048518
   140028708:	call   0x140007bd0
   14002870d:	and    QWORD PTR [rip+0x1fe03],0x0        # 0x140048518
   140028715:	add    rsp,0x20
   140028719:	pop    rbx
   14002871a:	ret    
   14002871b:	int3   
   14002871c:	add    rcx,0x30
   140028720:	rex.W jmp QWORD PTR [rip+0x99d1]        # 0x1400320f8
   140028727:	int3   
   140028728:	add    rcx,0x30
   14002872c:	rex.W jmp QWORD PTR [rip+0x99bd]        # 0x1400320f0
   140028733:	int3   
   140028734:	mov    QWORD PTR [rsp+0x8],rbx
   140028739:	mov    QWORD PTR [rsp+0x10],rsi
   14002873e:	push   rdi
   14002873f:	sub    rsp,0x20
   140028743:	mov    rbx,rcx
   140028746:	mov    eax,DWORD PTR [rcx+0x14]
   140028749:	and    al,0x3
   14002874b:	cmp    al,0x2
   14002874d:	jne    0x140028799
   14002874f:	mov    eax,DWORD PTR [rcx+0x14]
   140028752:	test   al,0xc0
   140028754:	je     0x140028799
   140028756:	mov    edi,DWORD PTR [rcx]
   140028758:	sub    edi,DWORD PTR [rcx+0x8]
   14002875b:	and    DWORD PTR [rcx+0x10],0x0
   14002875f:	mov    rsi,QWORD PTR [rcx+0x8]
   140028763:	mov    QWORD PTR [rcx],rsi
   140028766:	test   edi,edi
   140028768:	jle    0x140028799
   14002876a:	call   0x14002ba28
   14002876f:	mov    ecx,eax
   140028771:	mov    r8d,edi
   140028774:	mov    rdx,rsi
   140028777:	call   0x14002b658
   14002877c:	cmp    edi,eax
   14002877e:	je     0x14002878a
   140028780:	lock or DWORD PTR [rbx+0x14],0x10
   140028785:	or     eax,0xffffffff
   140028788:	jmp    0x14002879b
   14002878a:	mov    eax,DWORD PTR [rbx+0x14]
   14002878d:	shr    eax,0x2
   140028790:	test   al,0x1
   140028792:	je     0x140028799
   140028794:	lock and DWORD PTR [rbx+0x14],0xfffffffd
   140028799:	xor    eax,eax
   14002879b:	mov    rbx,QWORD PTR [rsp+0x30]
   1400287a0:	mov    rsi,QWORD PTR [rsp+0x38]
   1400287a5:	add    rsp,0x20
   1400287a9:	pop    rdi
   1400287aa:	ret    
   1400287ab:	int3   
   1400287ac:	rex push rbx
   1400287ae:	sub    rsp,0x20
   1400287b2:	mov    rbx,rcx
   1400287b5:	test   rcx,rcx
   1400287b8:	jne    0x1400287c4
   1400287ba:	add    rsp,0x20
   1400287be:	pop    rbx
   1400287bf:	jmp    0x140028804
   1400287c4:	call   0x140028734
   1400287c9:	test   eax,eax
   1400287cb:	je     0x1400287d2
   1400287cd:	or     eax,0xffffffff
   1400287d0:	jmp    0x1400287f1
   1400287d2:	mov    eax,DWORD PTR [rbx+0x14]
   1400287d5:	shr    eax,0xb
   1400287d8:	test   al,0x1
   1400287da:	je     0x1400287ef
   1400287dc:	mov    rcx,rbx
   1400287df:	call   0x14002ba28
   1400287e4:	mov    ecx,eax
   1400287e6:	call   0x14002b024
   1400287eb:	test   eax,eax
   1400287ed:	jne    0x1400287cd
   1400287ef:	xor    eax,eax
   1400287f1:	add    rsp,0x20
   1400287f5:	pop    rbx
   1400287f6:	ret    
   1400287f7:	int3   
   1400287f8:	mov    ecx,0x1
   1400287fd:	jmp    0x140028804
   140028802:	int3   
   140028803:	int3   
   140028804:	mov    rax,rsp
   140028807:	mov    QWORD PTR [rax+0x8],rbx
   14002880b:	mov    QWORD PTR [rax+0x18],rsi
   14002880f:	push   rdi
   140028810:	push   r14
   140028812:	push   r15
   140028814:	sub    rsp,0x40
   140028818:	mov    esi,ecx
   14002881a:	and    DWORD PTR [rax-0x34],0x0
   14002881e:	and    DWORD PTR [rax-0x38],0x0
   140028822:	mov    ecx,0x8
   140028827:	call   0x14002af28
   14002882c:	nop
   14002882d:	mov    rdi,QWORD PTR [rip+0x1fce4]        # 0x140048518
   140028834:	movsxd rax,DWORD PTR [rip+0x1fcd5]        # 0x140048510
   14002883b:	lea    r14,[rdi+rax*8]
   14002883f:	or     r15d,0xffffffff
   140028843:	mov    QWORD PTR [rsp+0x28],rdi
   140028848:	cmp    rdi,r14
   14002884b:	je     0x1400288be
   14002884d:	mov    rbx,QWORD PTR [rdi]
   140028850:	mov    QWORD PTR [rsp+0x68],rbx
   140028855:	mov    QWORD PTR [rsp+0x30],rbx
   14002885a:	test   rbx,rbx
   14002885d:	jne    0x140028861
   14002885f:	jmp    0x1400288b8
   140028861:	mov    rcx,rbx
   140028864:	call   0x14002871c
   140028869:	nop
   14002886a:	mov    eax,DWORD PTR [rbx+0x14]
   14002886d:	shr    eax,0xd
   140028870:	test   al,0x1
   140028872:	je     0x1400288b0
   140028874:	cmp    esi,0x1
   140028877:	jne    0x14002888c
   140028879:	mov    rcx,rbx
   14002887c:	call   0x1400287ac
   140028881:	cmp    eax,r15d
   140028884:	je     0x1400288b0
   140028886:	inc    DWORD PTR [rsp+0x24]
   14002888a:	jmp    0x1400288b0
   14002888c:	test   esi,esi
   14002888e:	jne    0x1400288b0
   140028890:	mov    eax,DWORD PTR [rbx+0x14]
   140028893:	shr    eax,1
   140028895:	test   al,0x1
   140028897:	je     0x1400288b0
   140028899:	mov    rcx,rbx
   14002889c:	call   0x1400287ac
   1400288a1:	mov    edx,DWORD PTR [rsp+0x20]
   1400288a5:	cmp    eax,r15d
   1400288a8:	cmove  edx,r15d
   1400288ac:	mov    DWORD PTR [rsp+0x20],edx
   1400288b0:	mov    rcx,rbx
   1400288b3:	call   0x140028728
   1400288b8:	add    rdi,0x8
   1400288bc:	jmp    0x140028843
   1400288be:	mov    ecx,0x8
   1400288c3:	call   0x14002af7c
   1400288c8:	mov    eax,DWORD PTR [rsp+0x20]
   1400288cc:	cmp    esi,0x1
   1400288cf:	cmove  eax,DWORD PTR [rsp+0x24]
   1400288d4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400288d9:	mov    rsi,QWORD PTR [rsp+0x70]
   1400288de:	add    rsp,0x40
   1400288e2:	pop    r15
   1400288e4:	pop    r14
   1400288e6:	pop    rdi
   1400288e7:	ret    
   1400288e8:	mov    QWORD PTR [rsp+0x8],rbx
   1400288ed:	push   rdi
   1400288ee:	sub    rsp,0x20
   1400288f2:	mov    BYTE PTR [rcx+0x18],0x0
   1400288f6:	mov    rdi,rcx
   1400288f9:	test   rdx,rdx
   1400288fc:	je     0x140028903
   1400288fe:	movups xmm0,XMMWORD PTR [rdx]
   140028901:	jmp    0x140028914
   140028903:	mov    eax,DWORD PTR [rip+0x1fdcf]        # 0x1400486d8
   140028909:	test   eax,eax
   14002890b:	jne    0x14002891b
   14002890d:	movups xmm0,XMMWORD PTR [rip+0x1db94]        # 0x1400464a8
   140028914:	movdqu XMMWORD PTR [rcx+0x8],xmm0
   140028919:	jmp    0x14002896a
   14002891b:	call   0x14002a248
   140028920:	mov    QWORD PTR [rdi],rax
   140028923:	lea    rdx,[rdi+0x8]
   140028927:	mov    rcx,QWORD PTR [rax+0x90]
   14002892e:	mov    QWORD PTR [rdx],rcx
   140028931:	mov    rcx,QWORD PTR [rax+0x88]
   140028938:	mov    QWORD PTR [rdi+0x10],rcx
   14002893c:	mov    rcx,rax
   14002893f:	call   0x14002bd30
   140028944:	mov    rcx,QWORD PTR [rdi]
   140028947:	lea    rdx,[rdi+0x10]
   14002894b:	call   0x14002bd64
   140028950:	mov    rcx,QWORD PTR [rdi]
   140028953:	mov    eax,DWORD PTR [rcx+0x3a8]
   140028959:	test   al,0x2
   14002895b:	jne    0x14002896a
   14002895d:	or     eax,0x2
   140028960:	mov    DWORD PTR [rcx+0x3a8],eax
   140028966:	mov    BYTE PTR [rdi+0x18],0x1
   14002896a:	mov    rax,rdi
   14002896d:	mov    rbx,QWORD PTR [rsp+0x30]
   140028972:	add    rsp,0x20
   140028976:	pop    rdi
   140028977:	ret    
   140028978:	mov    QWORD PTR [rsp+0x8],rbx
   14002897d:	mov    QWORD PTR [rsp+0x10],rbp
   140028982:	mov    QWORD PTR [rsp+0x18],rsi
   140028987:	push   rdi
   140028988:	sub    rsp,0x20
   14002898c:	mov    rsi,rdx
   14002898f:	mov    edi,ecx
   140028991:	call   0x14002a2dc
   140028996:	xor    r8d,r8d
   140028999:	mov    rbx,rax
   14002899c:	test   rax,rax
   14002899f:	jne    0x1400289a8
   1400289a1:	xor    eax,eax
   1400289a3:	jmp    0x140028af0
   1400289a8:	mov    rcx,QWORD PTR [rax]
   1400289ab:	mov    rax,rcx
   1400289ae:	lea    rdx,[rcx+0xc0]
   1400289b5:	cmp    rcx,rdx
   1400289b8:	je     0x1400289c7
   1400289ba:	cmp    DWORD PTR [rax],edi
   1400289bc:	je     0x1400289ca
   1400289be:	add    rax,0x10
   1400289c2:	cmp    rax,rdx
   1400289c5:	jne    0x1400289ba
   1400289c7:	mov    rax,r8
   1400289ca:	test   rax,rax
   1400289cd:	je     0x1400289a1
   1400289cf:	mov    rdi,QWORD PTR [rax+0x8]
   1400289d3:	test   rdi,rdi
   1400289d6:	je     0x1400289a1
   1400289d8:	cmp    rdi,0x5
   1400289dc:	jne    0x1400289ea
   1400289de:	mov    QWORD PTR [rax+0x8],r8
   1400289e2:	lea    eax,[rdi-0x4]
   1400289e5:	jmp    0x140028af0
   1400289ea:	cmp    rdi,0x1
   1400289ee:	je     0x140028aed
   1400289f4:	mov    rbp,QWORD PTR [rbx+0x8]
   1400289f8:	mov    QWORD PTR [rbx+0x8],rsi
   1400289fc:	mov    esi,DWORD PTR [rax+0x4]
   1400289ff:	cmp    esi,0x8
   140028a02:	jne    0x140028ad8
   140028a08:	add    rcx,0x30
   140028a0c:	lea    rdx,[rcx+0x90]
   140028a13:	jmp    0x140028a1d
   140028a15:	mov    QWORD PTR [rcx+0x8],r8
   140028a19:	add    rcx,0x10
   140028a1d:	cmp    rcx,rdx
   140028a20:	jne    0x140028a15
   140028a22:	cmp    DWORD PTR [rax],0xc000008d
   140028a28:	mov    esi,DWORD PTR [rbx+0x10]
   140028a2b:	je     0x140028ab9
   140028a31:	cmp    DWORD PTR [rax],0xc000008e
   140028a37:	je     0x140028ab0
   140028a39:	cmp    DWORD PTR [rax],0xc000008f
   140028a3f:	je     0x140028aa7
   140028a41:	cmp    DWORD PTR [rax],0xc0000090
   140028a47:	je     0x140028a9e
   140028a49:	cmp    DWORD PTR [rax],0xc0000091
   140028a4f:	je     0x140028a95
   140028a51:	cmp    DWORD PTR [rax],0xc0000092
   140028a57:	je     0x140028a8c
   140028a59:	cmp    DWORD PTR [rax],0xc0000093
   140028a5f:	je     0x140028a83
   140028a61:	cmp    DWORD PTR [rax],0xc00002b4
   140028a67:	je     0x140028a7a
   140028a69:	cmp    DWORD PTR [rax],0xc00002b5
   140028a6f:	jne    0x140028ac0
   140028a71:	mov    DWORD PTR [rbx+0x10],0x8d
   140028a78:	jmp    0x140028ac0
   140028a7a:	mov    DWORD PTR [rbx+0x10],0x8e
   140028a81:	jmp    0x140028ac0
   140028a83:	mov    DWORD PTR [rbx+0x10],0x85
   140028a8a:	jmp    0x140028ac0
   140028a8c:	mov    DWORD PTR [rbx+0x10],0x8a
   140028a93:	jmp    0x140028ac0
   140028a95:	mov    DWORD PTR [rbx+0x10],0x84
   140028a9c:	jmp    0x140028ac0
   140028a9e:	mov    DWORD PTR [rbx+0x10],0x81
   140028aa5:	jmp    0x140028ac0
   140028aa7:	mov    DWORD PTR [rbx+0x10],0x86
   140028aae:	jmp    0x140028ac0
   140028ab0:	mov    DWORD PTR [rbx+0x10],0x83
   140028ab7:	jmp    0x140028ac0
   140028ab9:	mov    DWORD PTR [rbx+0x10],0x82
   140028ac0:	mov    rcx,rdi
   140028ac3:	call   QWORD PTR [rip+0x9b17]        # 0x1400325e0
   140028ac9:	mov    edx,DWORD PTR [rbx+0x10]
   140028acc:	mov    ecx,0x8
   140028ad1:	call   rdi
   140028ad3:	mov    DWORD PTR [rbx+0x10],esi
   140028ad6:	jmp    0x140028ae9
   140028ad8:	mov    rcx,rdi
   140028adb:	mov    QWORD PTR [rax+0x8],r8
   140028adf:	call   QWORD PTR [rip+0x9afb]        # 0x1400325e0
   140028ae5:	mov    ecx,esi
   140028ae7:	call   rdi
   140028ae9:	mov    QWORD PTR [rbx+0x8],rbp
   140028aed:	or     eax,0xffffffff
   140028af0:	mov    rbx,QWORD PTR [rsp+0x30]
   140028af5:	mov    rbp,QWORD PTR [rsp+0x38]
   140028afa:	mov    rsi,QWORD PTR [rsp+0x40]
   140028aff:	add    rsp,0x20
   140028b03:	pop    rdi
   140028b04:	ret    
   140028b05:	int3   
   140028b06:	int3   
   140028b07:	int3   
   140028b08:	xor    eax,eax
   140028b0a:	cmp    ecx,0xe06d7363
   140028b10:	sete   al
   140028b13:	ret    
   140028b14:	mov    rax,rsp
   140028b17:	mov    QWORD PTR [rax+0x8],rbx
   140028b1b:	mov    QWORD PTR [rax+0x10],rsi
   140028b1f:	mov    QWORD PTR [rax+0x18],rdi
   140028b23:	mov    QWORD PTR [rax+0x20],r14
   140028b27:	push   r15
   140028b29:	sub    rsp,0x20
   140028b2d:	mov    esi,r8d
   140028b30:	mov    ebx,edx
   140028b32:	mov    r14d,ecx
   140028b35:	test   r8d,r8d
   140028b38:	jne    0x140028b84
   140028b3a:	xor    ecx,ecx
   140028b3c:	call   QWORD PTR [rip+0x95e6]        # 0x140032128
   140028b42:	test   rax,rax
   140028b45:	je     0x140028b84
   140028b47:	mov    ecx,0x5a4d
   140028b4c:	cmp    WORD PTR [rax],cx
   140028b4f:	jne    0x140028b84
   140028b51:	movsxd rcx,DWORD PTR [rax+0x3c]
   140028b55:	add    rcx,rax
   140028b58:	cmp    DWORD PTR [rcx],0x4550
   140028b5e:	jne    0x140028b84
   140028b60:	mov    eax,0x20b
   140028b65:	cmp    WORD PTR [rcx+0x18],ax
   140028b69:	jne    0x140028b84
   140028b6b:	cmp    DWORD PTR [rcx+0x84],0xe
   140028b72:	jbe    0x140028b84
   140028b74:	cmp    DWORD PTR [rcx+0xf8],esi
   140028b7a:	je     0x140028b84
   140028b7c:	mov    ecx,r14d
   140028b7f:	call   0x140028ccc
   140028b84:	mov    ecx,0x2
   140028b89:	call   0x14002af28
   140028b8e:	nop
   140028b8f:	cmp    BYTE PTR [rip+0x1f99a],0x0        # 0x140048530
   140028b96:	jne    0x140028c4e
   140028b9c:	mov    r15d,0x1
   140028ba2:	mov    eax,r15d
   140028ba5:	xchg   DWORD PTR [rip+0x1f975],eax        # 0x140048520
   140028bab:	test   ebx,ebx
   140028bad:	jne    0x140028bf7
   140028baf:	mov    rdi,QWORD PTR [rip+0x1d632]        # 0x1400461e8
   140028bb6:	mov    edx,edi
   140028bb8:	and    edx,0x3f
   140028bbb:	lea    ecx,[rbx+0x40]
   140028bbe:	sub    ecx,edx
   140028bc0:	xor    eax,eax
   140028bc2:	ror    rax,cl
   140028bc5:	xor    rax,rdi
   140028bc8:	mov    rcx,QWORD PTR [rip+0x1f959]        # 0x140048528
   140028bcf:	cmp    rcx,rax
   140028bd2:	je     0x140028bee
   140028bd4:	xor    rdi,rcx
   140028bd7:	mov    ecx,edx
   140028bd9:	ror    rdi,cl
   140028bdc:	mov    rcx,rdi
   140028bdf:	call   QWORD PTR [rip+0x99fb]        # 0x1400325e0
   140028be5:	xor    r8d,r8d
   140028be8:	xor    edx,edx
   140028bea:	xor    ecx,ecx
   140028bec:	call   rdi
   140028bee:	lea    rcx,[rip+0x1fa73]        # 0x140048668
   140028bf5:	jmp    0x140028c03
   140028bf7:	cmp    ebx,r15d
   140028bfa:	jne    0x140028c09
   140028bfc:	lea    rcx,[rip+0x1fa7d]        # 0x140048680
   140028c03:	call   0x140029888
   140028c08:	nop
   140028c09:	test   ebx,ebx
   140028c0b:	jne    0x140028c20
   140028c0d:	lea    rdx,[rip+0x9b4c]        # 0x140032760
   140028c14:	lea    rcx,[rip+0x9b25]        # 0x140032740
   140028c1b:	call   0x140029b60
   140028c20:	lea    rdx,[rip+0x9b49]        # 0x140032770
   140028c27:	lea    rcx,[rip+0x9b3a]        # 0x140032768
   140028c2e:	call   0x140029b60
   140028c33:	movzx  eax,BYTE PTR [rip+0x1f8f6]        # 0x140048530
   140028c3a:	test   esi,esi
   140028c3c:	cmove  eax,r15d
   140028c40:	mov    BYTE PTR [rip+0x1f8ea],al        # 0x140048530
   140028c46:	jmp    0x140028c4e
   140028c48:	call   0x140029d90
   140028c4d:	nop
   140028c4e:	mov    ecx,0x2
   140028c53:	call   0x14002af7c
   140028c58:	test   esi,esi
   140028c5a:	jne    0x140028c65
   140028c5c:	mov    ecx,r14d
   140028c5f:	call   0x140028c80
   140028c64:	int3   
   140028c65:	mov    rbx,QWORD PTR [rsp+0x30]
   140028c6a:	mov    rsi,QWORD PTR [rsp+0x38]
   140028c6f:	mov    rdi,QWORD PTR [rsp+0x40]
   140028c74:	mov    r14,QWORD PTR [rsp+0x48]
   140028c79:	add    rsp,0x20
   140028c7d:	pop    r15
   140028c7f:	ret    
   140028c80:	rex push rbx
   140028c82:	sub    rsp,0x20
   140028c86:	mov    ebx,ecx
   140028c88:	call   0x14002aabc
   140028c8d:	test   al,al
   140028c8f:	je     0x140028cb9
   140028c91:	mov    rax,QWORD PTR gs:0x60
   140028c9a:	mov    edx,DWORD PTR [rax+0xbc]
   140028ca0:	shr    edx,0x8
   140028ca3:	test   dl,0x1
   140028ca6:	jne    0x140028cb9
   140028ca8:	call   QWORD PTR [rip+0x94d2]        # 0x140032180
   140028cae:	mov    rcx,rax
   140028cb1:	mov    edx,ebx
   140028cb3:	call   QWORD PTR [rip+0x9427]        # 0x1400320e0
   140028cb9:	mov    ecx,ebx
   140028cbb:	call   0x140028ccc
   140028cc0:	mov    ecx,ebx
   140028cc2:	call   QWORD PTR [rip+0x9410]        # 0x1400320d8
   140028cc8:	int3   
   140028cc9:	int3   
   140028cca:	int3   
   140028ccb:	int3   
   140028ccc:	mov    QWORD PTR [rsp+0x8],rbx
   140028cd1:	push   rdi
   140028cd2:	sub    rsp,0x20
   140028cd6:	and    QWORD PTR [rsp+0x38],0x0
   140028cdc:	lea    r8,[rsp+0x38]
   140028ce1:	mov    edi,ecx
   140028ce3:	lea    rdx,[rip+0x1011e]        # 0x140038e08
   140028cea:	xor    ecx,ecx
   140028cec:	call   QWORD PTR [rip+0x93de]        # 0x1400320d0
   140028cf2:	test   eax,eax
   140028cf4:	je     0x140028d1d
   140028cf6:	mov    rcx,QWORD PTR [rsp+0x38]
   140028cfb:	lea    rdx,[rip+0x1011e]        # 0x140038e20
   140028d02:	call   QWORD PTR [rip+0x94c8]        # 0x1400321d0
   140028d08:	mov    rbx,rax
   140028d0b:	test   rax,rax
   140028d0e:	je     0x140028d1d
   140028d10:	mov    rcx,rax
   140028d13:	call   QWORD PTR [rip+0x98c7]        # 0x1400325e0
   140028d19:	mov    ecx,edi
   140028d1b:	call   rbx
   140028d1d:	mov    rcx,QWORD PTR [rsp+0x38]
   140028d22:	test   rcx,rcx
   140028d25:	je     0x140028d2d
   140028d27:	call   QWORD PTR [rip+0x94ab]        # 0x1400321d8
   140028d2d:	mov    rbx,QWORD PTR [rsp+0x30]
   140028d32:	add    rsp,0x20
   140028d36:	pop    rdi
   140028d37:	ret    
   140028d38:	mov    QWORD PTR [rip+0x1f7e9],rcx        # 0x140048528
   140028d3f:	ret    
   140028d40:	mov    edx,0x2
   140028d45:	xor    ecx,ecx
   140028d47:	lea    r8d,[rdx-0x1]
   140028d4b:	jmp    0x140028b14
   140028d50:	xor    edx,edx
   140028d52:	xor    ecx,ecx
   140028d54:	lea    r8d,[rdx+0x1]
   140028d58:	jmp    0x140028b14
   140028d5d:	int3   
   140028d5e:	int3   
   140028d5f:	int3   
   140028d60:	xor    r8d,r8d
   140028d63:	lea    edx,[r8+0x2]
   140028d67:	jmp    0x140028b14
   140028d6c:	sub    rsp,0x28
   140028d70:	mov    r8,QWORD PTR [rip+0x1d471]        # 0x1400461e8
   140028d77:	mov    rdx,rcx
   140028d7a:	mov    eax,r8d
   140028d7d:	mov    ecx,0x40
   140028d82:	and    eax,0x3f
   140028d85:	sub    ecx,eax
   140028d87:	xor    eax,eax
   140028d89:	ror    rax,cl
   140028d8c:	xor    rax,r8
   140028d8f:	cmp    QWORD PTR [rip+0x1f792],rax        # 0x140048528
   140028d96:	jne    0x140028daa
   140028d98:	ror    rdx,cl
   140028d9b:	xor    rdx,r8
   140028d9e:	mov    QWORD PTR [rip+0x1f783],rdx        # 0x140048528
   140028da5:	add    rsp,0x28
   140028da9:	ret    
   140028daa:	call   0x140029d90
   140028daf:	int3   
   140028db0:	xor    r8d,r8d
   140028db3:	xor    edx,edx
   140028db5:	jmp    0x140028b14
   140028dba:	int3   
   140028dbb:	int3   
   140028dbc:	mov    rax,rsp
   140028dbf:	mov    QWORD PTR [rax+0x8],rbx
   140028dc3:	mov    QWORD PTR [rax+0x10],rbp
   140028dc7:	mov    QWORD PTR [rax+0x18],rsi
   140028dcb:	mov    QWORD PTR [rax+0x20],rdi
   140028dcf:	push   r12
   140028dd1:	push   r14
   140028dd3:	push   r15
   140028dd5:	sub    rsp,0x20
   140028dd9:	mov    r15,QWORD PTR [rsp+0x60]
   140028dde:	mov    r12,r9
   140028de1:	mov    rdi,r8
   140028de4:	mov    r14,rdx
   140028de7:	mov    rbx,rcx
   140028dea:	and    QWORD PTR [r15],0x0
   140028dee:	mov    QWORD PTR [r9],0x1
   140028df5:	test   rdx,rdx
   140028df8:	je     0x140028e01
   140028dfa:	mov    QWORD PTR [rdx],r8
   140028dfd:	add    r14,0x8
   140028e01:	xor    bpl,bpl
   140028e04:	cmp    BYTE PTR [rbx],0x22
   140028e07:	jne    0x140028e18
   140028e09:	test   bpl,bpl
   140028e0c:	mov    sil,0x22
   140028e0f:	sete   bpl
   140028e13:	inc    rbx
   140028e16:	jmp    0x140028e4f
   140028e18:	inc    QWORD PTR [r15]
   140028e1b:	test   rdi,rdi
   140028e1e:	je     0x140028e27
   140028e20:	mov    al,BYTE PTR [rbx]
   140028e22:	mov    BYTE PTR [rdi],al
   140028e24:	inc    rdi
   140028e27:	movsx  esi,BYTE PTR [rbx]
   140028e2a:	inc    rbx
   140028e2d:	mov    ecx,esi
   140028e2f:	call   0x14002ce48
   140028e34:	test   eax,eax
   140028e36:	je     0x140028e4a
   140028e38:	inc    QWORD PTR [r15]
   140028e3b:	test   rdi,rdi
   140028e3e:	je     0x140028e47
   140028e40:	mov    al,BYTE PTR [rbx]
   140028e42:	mov    BYTE PTR [rdi],al
   140028e44:	inc    rdi
   140028e47:	inc    rbx
   140028e4a:	test   sil,sil
   140028e4d:	je     0x140028e6b
   140028e4f:	test   bpl,bpl
   140028e52:	jne    0x140028e04
   140028e54:	cmp    sil,0x20
   140028e58:	je     0x140028e60
   140028e5a:	cmp    sil,0x9
   140028e5e:	jne    0x140028e04
   140028e60:	test   rdi,rdi
   140028e63:	je     0x140028e6e
   140028e65:	mov    BYTE PTR [rdi-0x1],0x0
   140028e69:	jmp    0x140028e6e
   140028e6b:	dec    rbx
   140028e6e:	xor    sil,sil
   140028e71:	cmp    BYTE PTR [rbx],0x0
   140028e74:	je     0x140028f4c
   140028e7a:	cmp    BYTE PTR [rbx],0x20
   140028e7d:	je     0x140028e84
   140028e7f:	cmp    BYTE PTR [rbx],0x9
   140028e82:	jne    0x140028e89
   140028e84:	inc    rbx
   140028e87:	jmp    0x140028e7a
   140028e89:	cmp    BYTE PTR [rbx],0x0
   140028e8c:	je     0x140028f4c
   140028e92:	test   r14,r14
   140028e95:	je     0x140028e9e
   140028e97:	mov    QWORD PTR [r14],rdi
   140028e9a:	add    r14,0x8
   140028e9e:	inc    QWORD PTR [r12]
   140028ea2:	mov    edx,0x1
   140028ea7:	xor    eax,eax
   140028ea9:	jmp    0x140028eb0
   140028eab:	inc    rbx
   140028eae:	inc    eax
   140028eb0:	cmp    BYTE PTR [rbx],0x5c
   140028eb3:	je     0x140028eab
   140028eb5:	cmp    BYTE PTR [rbx],0x22
   140028eb8:	jne    0x140028eeb
   140028eba:	test   dl,al
   140028ebc:	jne    0x140028ed7
   140028ebe:	test   sil,sil
   140028ec1:	je     0x140028ece
   140028ec3:	cmp    BYTE PTR [rbx+0x1],0x22
   140028ec7:	jne    0x140028ece
   140028ec9:	inc    rbx
   140028ecc:	jmp    0x140028ed7
   140028ece:	xor    edx,edx
   140028ed0:	test   sil,sil
   140028ed3:	sete   sil
   140028ed7:	shr    eax,1
   140028ed9:	jmp    0x140028eeb
   140028edb:	dec    eax
   140028edd:	test   rdi,rdi
   140028ee0:	je     0x140028ee8
   140028ee2:	mov    BYTE PTR [rdi],0x5c
   140028ee5:	inc    rdi
   140028ee8:	inc    QWORD PTR [r15]
   140028eeb:	test   eax,eax
   140028eed:	jne    0x140028edb
   140028eef:	mov    al,BYTE PTR [rbx]
   140028ef1:	test   al,al
   140028ef3:	je     0x140028f39
   140028ef5:	test   sil,sil
   140028ef8:	jne    0x140028f02
   140028efa:	cmp    al,0x20
   140028efc:	je     0x140028f39
   140028efe:	cmp    al,0x9
   140028f00:	je     0x140028f39
   140028f02:	test   edx,edx
   140028f04:	je     0x140028f31
   140028f06:	test   rdi,rdi
   140028f09:	je     0x140028f10
   140028f0b:	mov    BYTE PTR [rdi],al
   140028f0d:	inc    rdi
   140028f10:	movsx  ecx,BYTE PTR [rbx]
   140028f13:	call   0x14002ce48
   140028f18:	test   eax,eax
   140028f1a:	je     0x140028f2e
   140028f1c:	inc    QWORD PTR [r15]
   140028f1f:	inc    rbx
   140028f22:	test   rdi,rdi
   140028f25:	je     0x140028f2e
   140028f27:	mov    al,BYTE PTR [rbx]
   140028f29:	mov    BYTE PTR [rdi],al
   140028f2b:	inc    rdi
   140028f2e:	inc    QWORD PTR [r15]
   140028f31:	inc    rbx
   140028f34:	jmp    0x140028ea2
   140028f39:	test   rdi,rdi
   140028f3c:	je     0x140028f44
   140028f3e:	mov    BYTE PTR [rdi],0x0
   140028f41:	inc    rdi
   140028f44:	inc    QWORD PTR [r15]
   140028f47:	jmp    0x140028e71
   140028f4c:	test   r14,r14
   140028f4f:	je     0x140028f55
   140028f51:	and    QWORD PTR [r14],0x0
   140028f55:	inc    QWORD PTR [r12]
   140028f59:	mov    rbx,QWORD PTR [rsp+0x40]
   140028f5e:	mov    rbp,QWORD PTR [rsp+0x48]
   140028f63:	mov    rsi,QWORD PTR [rsp+0x50]
   140028f68:	mov    rdi,QWORD PTR [rsp+0x58]
   140028f6d:	add    rsp,0x20
   140028f71:	pop    r15
   140028f73:	pop    r14
   140028f75:	pop    r12
   140028f77:	ret    
   140028f78:	rex push rbx
   140028f7a:	sub    rsp,0x20
   140028f7e:	movabs rax,0x1fffffffffffffff
   140028f88:	mov    r9,rdx
   140028f8b:	mov    r10,rcx
   140028f8e:	cmp    rcx,rax
   140028f91:	jb     0x140028f97
   140028f93:	xor    eax,eax
   140028f95:	jmp    0x140028fd3
   140028f97:	or     rcx,0xffffffffffffffff
   140028f9b:	xor    edx,edx
   140028f9d:	mov    rax,rcx
   140028fa0:	div    r8
   140028fa3:	cmp    r9,rax
   140028fa6:	jae    0x140028f93
   140028fa8:	shl    r10,0x3
   140028fac:	imul   r9,r8
   140028fb0:	sub    rcx,r10
   140028fb3:	cmp    rcx,r9
   140028fb6:	jbe    0x140028f93
   140028fb8:	lea    rcx,[r9+r10*1]
   140028fbc:	mov    edx,0x1
   140028fc1:	call   0x140007c20
   140028fc6:	xor    ecx,ecx
   140028fc8:	mov    rbx,rax
   140028fcb:	call   0x140007bd0
   140028fd0:	mov    rax,rbx
   140028fd3:	add    rsp,0x20
   140028fd7:	pop    rbx
   140028fd8:	ret    
   140028fd9:	int3   
   140028fda:	int3   
   140028fdb:	int3   
   140028fdc:	mov    QWORD PTR [rsp+0x8],rbx
   140028fe1:	push   rbp
   140028fe2:	push   rsi
   140028fe3:	push   rdi
   140028fe4:	push   r14
   140028fe6:	push   r15
   140028fe8:	mov    rbp,rsp
   140028feb:	sub    rsp,0x30
   140028fef:	lea    eax,[rcx-0x1]
   140028ff2:	mov    r14d,ecx
   140028ff5:	cmp    eax,0x1
   140028ff8:	jbe    0x140029010
   140028ffa:	call   0x14002a494
   140028fff:	mov    edi,0x16
   140029004:	mov    DWORD PTR [rax],edi
   140029006:	call   0x1400281ac
   14002900b:	jmp    0x14002913f
   140029010:	call   0x14002ca40
   140029015:	lea    rbx,[rip+0x1f524]        # 0x140048540
   14002901c:	mov    r8d,0x104
   140029022:	mov    rdx,rbx
   140029025:	xor    ecx,ecx
   140029027:	call   QWORD PTR [rip+0x909b]        # 0x1400320c8
   14002902d:	mov    rsi,QWORD PTR [rip+0x1f68c]        # 0x1400486c0
   140029034:	xor    edi,edi
   140029036:	mov    QWORD PTR [rip+0x1f693],rbx        # 0x1400486d0
   14002903d:	test   rsi,rsi
   140029040:	je     0x140029047
   140029042:	cmp    BYTE PTR [rsi],dil
   140029045:	jne    0x14002904a
   140029047:	mov    rsi,rbx
   14002904a:	lea    rax,[rbp+0x48]
   14002904e:	mov    QWORD PTR [rbp+0x40],rdi
   140029052:	lea    r9,[rbp+0x40]
   140029056:	mov    QWORD PTR [rsp+0x20],rax
   14002905b:	xor    r8d,r8d
   14002905e:	mov    QWORD PTR [rbp+0x48],rdi
   140029062:	xor    edx,edx
   140029064:	mov    rcx,rsi
   140029067:	call   0x140028dbc
   14002906c:	mov    r15,QWORD PTR [rbp+0x40]
   140029070:	mov    r8d,0x1
   140029076:	mov    rdx,QWORD PTR [rbp+0x48]
   14002907a:	mov    rcx,r15
   14002907d:	call   0x140028f78
   140029082:	mov    rbx,rax
   140029085:	test   rax,rax
   140029088:	jne    0x14002909b
   14002908a:	call   0x14002a494
   14002908f:	lea    edi,[rbx+0xc]
   140029092:	mov    DWORD PTR [rax],edi
   140029094:	xor    ecx,ecx
   140029096:	jmp    0x14002913a
   14002909b:	lea    r8,[rax+r15*8]
   14002909f:	mov    rdx,rbx
   1400290a2:	lea    rax,[rbp+0x48]
   1400290a6:	mov    rcx,rsi
   1400290a9:	lea    r9,[rbp+0x40]
   1400290ad:	mov    QWORD PTR [rsp+0x20],rax
   1400290b2:	call   0x140028dbc
   1400290b7:	cmp    r14d,0x1
   1400290bb:	jne    0x1400290d1
   1400290bd:	mov    eax,DWORD PTR [rbp+0x40]
   1400290c0:	dec    eax
   1400290c2:	mov    QWORD PTR [rip+0x1f5e7],rbx        # 0x1400486b0
   1400290c9:	mov    DWORD PTR [rip+0x1f5d9],eax        # 0x1400486a8
   1400290cf:	jmp    0x140029094
   1400290d1:	lea    rdx,[rbp+0x38]
   1400290d5:	mov    QWORD PTR [rbp+0x38],rdi
   1400290d9:	mov    rcx,rbx
   1400290dc:	call   0x14002c33c
   1400290e1:	mov    esi,eax
   1400290e3:	test   eax,eax
   1400290e5:	je     0x140029100
   1400290e7:	mov    rcx,QWORD PTR [rbp+0x38]
   1400290eb:	call   0x140007bd0
   1400290f0:	mov    rcx,rbx
   1400290f3:	mov    QWORD PTR [rbp+0x38],rdi
   1400290f7:	call   0x140007bd0
   1400290fc:	mov    edi,esi
   1400290fe:	jmp    0x14002913f
   140029100:	mov    rdx,QWORD PTR [rbp+0x38]
   140029104:	mov    rcx,rdi
   140029107:	mov    rax,rdx
   14002910a:	cmp    QWORD PTR [rdx],rdi
   14002910d:	je     0x14002911b
   14002910f:	lea    rax,[rax+0x8]
   140029113:	inc    rcx
   140029116:	cmp    QWORD PTR [rax],rdi
   140029119:	jne    0x14002910f
   14002911b:	mov    DWORD PTR [rip+0x1f587],ecx        # 0x1400486a8
   140029121:	xor    ecx,ecx
   140029123:	mov    QWORD PTR [rbp+0x38],rdi
   140029127:	mov    QWORD PTR [rip+0x1f582],rdx        # 0x1400486b0
   14002912e:	call   0x140007bd0
   140029133:	mov    rcx,rbx
   140029136:	mov    QWORD PTR [rbp+0x38],rdi
   14002913a:	call   0x140007bd0
   14002913f:	mov    eax,edi
   140029141:	mov    rbx,QWORD PTR [rsp+0x60]
   140029146:	add    rsp,0x30
   14002914a:	pop    r15
   14002914c:	pop    r14
   14002914e:	pop    rdi
   14002914f:	pop    rsi
   140029150:	pop    rbp
   140029151:	ret    
   140029152:	int3   
   140029153:	int3   
   140029154:	rex push rbx
   140029156:	sub    rsp,0x20
   14002915a:	mov    rax,QWORD PTR [rip+0x1f4e7]        # 0x140048648
   140029161:	xor    ebx,ebx
   140029163:	test   rax,rax
   140029166:	jne    0x140029193
   140029168:	cmp    QWORD PTR [rip+0x1f4e1],rbx        # 0x140048650
   14002916f:	jne    0x140029175
   140029171:	xor    eax,eax
   140029173:	jmp    0x140029193
   140029175:	call   0x14002919c
   14002917a:	test   eax,eax
   14002917c:	jne    0x140029171
   14002917e:	call   0x140029348
   140029183:	mov    rcx,QWORD PTR [rip+0x1f4be]        # 0x140048648
   14002918a:	test   eax,eax
   14002918c:	cmovne rcx,rbx
   140029190:	mov    rax,rcx
   140029193:	add    rsp,0x20
   140029197:	pop    rbx
   140029198:	ret    
   140029199:	int3   
   14002919a:	int3   
   14002919b:	int3   
   14002919c:	mov    QWORD PTR [rsp+0x8],rbx
   1400291a1:	push   rdi
   1400291a2:	sub    rsp,0x20
   1400291a6:	xor    edi,edi
   1400291a8:	cmp    QWORD PTR [rip+0x1f499],rdi        # 0x140048648
   1400291af:	je     0x1400291b5
   1400291b1:	xor    eax,eax
   1400291b3:	jmp    0x1400291fd
   1400291b5:	call   0x14002ca40
   1400291ba:	call   0x14002ce5c
   1400291bf:	mov    rbx,rax
   1400291c2:	test   rax,rax
   1400291c5:	jne    0x1400291cc
   1400291c7:	or     edi,0xffffffff
   1400291ca:	jmp    0x1400291f3
   1400291cc:	mov    rcx,rax
   1400291cf:	call   0x140029208
   1400291d4:	test   rax,rax
   1400291d7:	jne    0x1400291de
   1400291d9:	or     edi,0xffffffff
   1400291dc:	jmp    0x1400291ec
   1400291de:	mov    QWORD PTR [rip+0x1f47b],rax        # 0x140048660
   1400291e5:	mov    QWORD PTR [rip+0x1f45c],rax        # 0x140048648
   1400291ec:	xor    ecx,ecx
   1400291ee:	call   0x140007bd0
   1400291f3:	mov    rcx,rbx
   1400291f6:	call   0x140007bd0
   1400291fb:	mov    eax,edi
   1400291fd:	mov    rbx,QWORD PTR [rsp+0x30]
   140029202:	add    rsp,0x20
   140029206:	pop    rdi
   140029207:	ret    
   140029208:	mov    QWORD PTR [rsp+0x8],rbx
   14002920d:	mov    QWORD PTR [rsp+0x10],rbp
   140029212:	mov    QWORD PTR [rsp+0x18],rsi
   140029217:	push   rdi
   140029218:	push   r14
   14002921a:	push   r15
   14002921c:	sub    rsp,0x30
   140029220:	xor    esi,esi
   140029222:	mov    r14,rcx
   140029225:	mov    edx,esi
   140029227:	jmp    0x140029243
   140029229:	cmp    al,0x3d
   14002922b:	je     0x140029230
   14002922d:	inc    rdx
   140029230:	or     rax,0xffffffffffffffff
   140029234:	inc    rax
   140029237:	cmp    BYTE PTR [rcx+rax*1],sil
   14002923b:	jne    0x140029234
   14002923d:	inc    rcx
   140029240:	add    rcx,rax
   140029243:	mov    al,BYTE PTR [rcx]
   140029245:	test   al,al
   140029247:	jne    0x140029229
   140029249:	lea    rcx,[rdx+0x1]
   14002924d:	mov    edx,0x8
   140029252:	call   0x140007c20
   140029257:	mov    rbx,rax
   14002925a:	test   rax,rax
   14002925d:	je     0x1400292cb
   14002925f:	mov    r15,rax
   140029262:	cmp    BYTE PTR [r14],sil
   140029265:	je     0x1400292c8
   140029267:	or     rbp,0xffffffffffffffff
   14002926b:	inc    rbp
   14002926e:	cmp    BYTE PTR [r14+rbp*1],sil
   140029272:	jne    0x14002926b
   140029274:	inc    rbp
   140029277:	cmp    BYTE PTR [r14],0x3d
   14002927b:	je     0x1400292b2
   14002927d:	mov    edx,0x1
   140029282:	mov    rcx,rbp
   140029285:	call   0x140007c20
   14002928a:	mov    rdi,rax
   14002928d:	test   rax,rax
   140029290:	je     0x1400292b7
   140029292:	mov    r8,r14
   140029295:	mov    rdx,rbp
   140029298:	mov    rcx,rax
   14002929b:	call   0x140029e10
   1400292a0:	xor    ecx,ecx
   1400292a2:	test   eax,eax
   1400292a4:	jne    0x1400292ee
   1400292a6:	mov    QWORD PTR [r15],rdi
   1400292a9:	add    r15,0x8
   1400292ad:	call   0x140007bd0
   1400292b2:	add    r14,rbp
   1400292b5:	jmp    0x140029262
   1400292b7:	mov    rcx,rbx
   1400292ba:	call   0x140029304
   1400292bf:	xor    ecx,ecx
   1400292c1:	call   0x140007bd0
   1400292c6:	jmp    0x1400292cb
   1400292c8:	mov    rsi,rbx
   1400292cb:	xor    ecx,ecx
   1400292cd:	call   0x140007bd0
   1400292d2:	mov    rbx,QWORD PTR [rsp+0x50]
   1400292d7:	mov    rax,rsi
   1400292da:	mov    rsi,QWORD PTR [rsp+0x60]
   1400292df:	mov    rbp,QWORD PTR [rsp+0x58]
   1400292e4:	add    rsp,0x30
   1400292e8:	pop    r15
   1400292ea:	pop    r14
   1400292ec:	pop    rdi
   1400292ed:	ret    
   1400292ee:	xor    r9d,r9d
   1400292f1:	mov    QWORD PTR [rsp+0x20],rsi
   1400292f6:	xor    r8d,r8d
   1400292f9:	xor    edx,edx
   1400292fb:	call   0x1400281cc
   140029300:	int3   
   140029301:	int3   
   140029302:	int3   
   140029303:	int3   
   140029304:	test   rcx,rcx
   140029307:	je     0x140029344
   140029309:	mov    QWORD PTR [rsp+0x8],rbx
   14002930e:	push   rdi
   14002930f:	sub    rsp,0x20
   140029313:	mov    rax,QWORD PTR [rcx]
   140029316:	mov    rbx,rcx
   140029319:	mov    rdi,rcx
   14002931c:	jmp    0x14002932d
   14002931e:	mov    rcx,rax
   140029321:	call   0x140007bd0
   140029326:	lea    rdi,[rdi+0x8]
   14002932a:	mov    rax,QWORD PTR [rdi]
   14002932d:	test   rax,rax
   140029330:	jne    0x14002931e
   140029332:	mov    rcx,rbx
   140029335:	call   0x140007bd0
   14002933a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002933f:	add    rsp,0x20
   140029343:	pop    rdi
   140029344:	ret    
   140029345:	int3   
   140029346:	int3   
   140029347:	int3   
   140029348:	mov    QWORD PTR [rsp+0x8],rbx
   14002934d:	mov    QWORD PTR [rsp+0x10],rbp
   140029352:	push   rsi
   140029353:	sub    rsp,0x40
   140029357:	mov    rsi,QWORD PTR [rip+0x1f2f2]        # 0x140048650
   14002935e:	test   rsi,rsi
   140029361:	jne    0x1400293f2
   140029367:	or     eax,0xffffffff
   14002936a:	jmp    0x1400293fe
   14002936f:	and    QWORD PTR [rsp+0x38],0x0
   140029375:	or     r9d,0xffffffff
   140029379:	and    QWORD PTR [rsp+0x30],0x0
   14002937f:	xor    edx,edx
   140029381:	and    DWORD PTR [rsp+0x28],0x0
   140029386:	xor    ecx,ecx
   140029388:	mov    r8,QWORD PTR [rsi]
   14002938b:	and    QWORD PTR [rsp+0x20],0x0
   140029391:	call   QWORD PTR [rip+0x8d21]        # 0x1400320b8
   140029397:	movsxd rbp,eax
   14002939a:	test   eax,eax
   14002939c:	je     0x140029367
   14002939e:	mov    edx,0x1
   1400293a3:	mov    rcx,rbp
   1400293a6:	call   0x140007c20
   1400293ab:	mov    rbx,rax
   1400293ae:	test   rax,rax
   1400293b1:	je     0x14002940e
   1400293b3:	and    QWORD PTR [rsp+0x38],0x0
   1400293b9:	or     r9d,0xffffffff
   1400293bd:	and    QWORD PTR [rsp+0x30],0x0
   1400293c3:	xor    edx,edx
   1400293c5:	mov    r8,QWORD PTR [rsi]
   1400293c8:	xor    ecx,ecx
   1400293ca:	mov    DWORD PTR [rsp+0x28],ebp
   1400293ce:	mov    QWORD PTR [rsp+0x20],rax
   1400293d3:	call   QWORD PTR [rip+0x8cdf]        # 0x1400320b8
   1400293d9:	test   eax,eax
   1400293db:	je     0x14002940e
   1400293dd:	xor    edx,edx
   1400293df:	mov    rcx,rbx
   1400293e2:	call   0x14002d33c
   1400293e7:	xor    ecx,ecx
   1400293e9:	call   0x140007bd0
   1400293ee:	add    rsi,0x8
   1400293f2:	cmp    QWORD PTR [rsi],0x0
   1400293f6:	jne    0x14002936f
   1400293fc:	xor    eax,eax
   1400293fe:	mov    rbx,QWORD PTR [rsp+0x50]
   140029403:	mov    rbp,QWORD PTR [rsp+0x58]
   140029408:	add    rsp,0x40
   14002940c:	pop    rsi
   14002940d:	ret    
   14002940e:	mov    rcx,rbx
   140029411:	call   0x140007bd0
   140029416:	jmp    0x140029367
   14002941b:	int3   
   14002941c:	sub    rsp,0x28
   140029420:	mov    rcx,QWORD PTR [rcx]
   140029423:	cmp    rcx,QWORD PTR [rip+0x1f236]        # 0x140048660
   14002942a:	je     0x140029431
   14002942c:	call   0x140029304
   140029431:	add    rsp,0x28
   140029435:	ret    
   140029436:	int3   
   140029437:	int3   
   140029438:	sub    rsp,0x28
   14002943c:	mov    rcx,QWORD PTR [rcx]
   14002943f:	cmp    rcx,QWORD PTR [rip+0x1f212]        # 0x140048658
   140029446:	je     0x14002944d
   140029448:	call   0x140029304
   14002944d:	add    rsp,0x28
   140029451:	ret    
   140029452:	int3   
   140029453:	int3   
   140029454:	jmp    0x140029154
   140029459:	int3   
   14002945a:	int3   
   14002945b:	int3   
   14002945c:	sub    rsp,0x28
   140029460:	lea    rcx,[rip+0x1f1e1]        # 0x140048648
   140029467:	call   0x14002941c
   14002946c:	lea    rcx,[rip+0x1f1dd]        # 0x140048650
   140029473:	call   0x140029438
   140029478:	mov    rcx,QWORD PTR [rip+0x1f1e1]        # 0x140048660
   14002947f:	call   0x140029304
   140029484:	mov    rcx,QWORD PTR [rip+0x1f1cd]        # 0x140048658
   14002948b:	add    rsp,0x28
   14002948f:	jmp    0x140029304
   140029494:	sub    rsp,0x28
   140029498:	mov    rax,QWORD PTR [rip+0x1f1c1]        # 0x140048660
   14002949f:	test   rax,rax
   1400294a2:	jne    0x1400294b0
   1400294a4:	call   0x140029154
   1400294a9:	mov    QWORD PTR [rip+0x1f1b0],rax        # 0x140048660
   1400294b0:	add    rsp,0x28
   1400294b4:	ret    
   1400294b5:	int3   
   1400294b6:	int3   
   1400294b7:	int3   
   1400294b8:	jmp    0x14002919c
   1400294bd:	int3   
   1400294be:	int3   
   1400294bf:	int3   
   1400294c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400294c5:	mov    QWORD PTR [rsp+0x20],r9
   1400294ca:	push   rdi
   1400294cb:	sub    rsp,0x20
   1400294cf:	mov    rbx,r9
   1400294d2:	mov    rdi,r8
   1400294d5:	mov    ecx,DWORD PTR [rdx]
   1400294d7:	call   0x14002af28
   1400294dc:	nop
   1400294dd:	mov    rcx,rdi
   1400294e0:	call   0x14002969c
   1400294e5:	mov    edi,eax
   1400294e7:	mov    ecx,DWORD PTR [rbx]
   1400294e9:	call   0x14002af7c
   1400294ee:	mov    eax,edi
   1400294f0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400294f5:	add    rsp,0x20
   1400294f9:	pop    rdi
   1400294fa:	ret    
   1400294fb:	int3   
   1400294fc:	mov    QWORD PTR [rsp+0x8],rbx
   140029501:	mov    QWORD PTR [rsp+0x10],rsi
   140029506:	mov    QWORD PTR [rsp+0x20],r9
   14002950b:	push   rdi
   14002950c:	push   r12
   14002950e:	push   r13
   140029510:	push   r14
   140029512:	push   r15
   140029514:	sub    rsp,0x40
   140029518:	mov    rdi,r9
   14002951b:	mov    r15,r8
   14002951e:	mov    ecx,DWORD PTR [rdx]
   140029520:	call   0x14002af28
   140029525:	nop
   140029526:	mov    rax,QWORD PTR [r15]
   140029529:	mov    rdx,QWORD PTR [rax]
   14002952c:	test   rdx,rdx
   14002952f:	jne    0x14002953a
   140029531:	or     rbx,0xffffffffffffffff
   140029535:	jmp    0x14002967a
   14002953a:	mov    rsi,QWORD PTR [rip+0x1cca7]        # 0x1400461e8
   140029541:	mov    r8d,esi
   140029544:	and    r8d,0x3f
   140029548:	mov    rdi,rsi
   14002954b:	xor    rdi,QWORD PTR [rdx]
   14002954e:	mov    ecx,r8d
   140029551:	ror    rdi,cl
   140029554:	mov    QWORD PTR [rsp+0x30],rdi
   140029559:	mov    rbx,rsi
   14002955c:	xor    rbx,QWORD PTR [rdx+0x8]
   140029560:	ror    rbx,cl
   140029563:	mov    QWORD PTR [rsp+0x20],rbx
   140029568:	lea    rax,[rdi-0x1]
   14002956c:	cmp    rax,0xfffffffffffffffd
   140029570:	ja     0x140029670
   140029576:	mov    r12,rdi
   140029579:	mov    QWORD PTR [rsp+0x28],rdi
   14002957e:	mov    r14,rbx
   140029581:	mov    QWORD PTR [rsp+0x38],rbx
   140029586:	mov    r13d,0x40
   14002958c:	mov    ecx,r13d
   14002958f:	sub    ecx,r8d
   140029592:	xor    eax,eax
   140029594:	ror    rax,cl
   140029597:	xor    rax,rsi
   14002959a:	sub    rbx,0x8
   14002959e:	mov    QWORD PTR [rsp+0x20],rbx
   1400295a3:	cmp    rbx,rdi
   1400295a6:	jb     0x1400295b4
   1400295a8:	cmp    QWORD PTR [rbx],rax
   1400295ab:	jne    0x1400295af
   1400295ad:	jmp    0x14002959a
   1400295af:	cmp    rbx,rdi
   1400295b2:	jae    0x1400295fe
   1400295b4:	or     rbx,0xffffffffffffffff
   1400295b8:	cmp    rdi,rbx
   1400295bb:	je     0x1400295cc
   1400295bd:	mov    rcx,rdi
   1400295c0:	call   0x140007bd0
   1400295c5:	mov    rsi,QWORD PTR [rip+0x1cc1c]        # 0x1400461e8
   1400295cc:	mov    eax,esi
   1400295ce:	and    eax,0x3f
   1400295d1:	sub    r13d,eax
   1400295d4:	mov    ecx,r13d
   1400295d7:	xor    edx,edx
   1400295d9:	ror    rdx,cl
   1400295dc:	xor    rdx,rsi
   1400295df:	mov    rax,QWORD PTR [r15]
   1400295e2:	mov    rcx,QWORD PTR [rax]
   1400295e5:	mov    QWORD PTR [rcx],rdx
   1400295e8:	mov    rax,QWORD PTR [r15]
   1400295eb:	mov    rcx,QWORD PTR [rax]
   1400295ee:	mov    QWORD PTR [rcx+0x8],rdx
   1400295f2:	mov    rax,QWORD PTR [r15]
   1400295f5:	mov    rcx,QWORD PTR [rax]
   1400295f8:	mov    QWORD PTR [rcx+0x10],rdx
   1400295fc:	jmp    0x140029670
   1400295fe:	mov    ecx,esi
   140029600:	and    ecx,0x3f
   140029603:	xor    rsi,QWORD PTR [rbx]
   140029606:	ror    rsi,cl
   140029609:	mov    QWORD PTR [rbx],rax
   14002960c:	mov    rcx,rsi
   14002960f:	call   QWORD PTR [rip+0x8fcb]        # 0x1400325e0
   140029615:	call   rsi
   140029617:	mov    rax,QWORD PTR [r15]
   14002961a:	mov    rdx,QWORD PTR [rax]
   14002961d:	mov    rsi,QWORD PTR [rip+0x1cbc4]        # 0x1400461e8
   140029624:	mov    r8d,esi
   140029627:	and    r8d,0x3f
   14002962b:	mov    r9,rsi
   14002962e:	xor    r9,QWORD PTR [rdx]
   140029631:	mov    ecx,r8d
   140029634:	ror    r9,cl
   140029637:	mov    rax,QWORD PTR [rdx+0x8]
   14002963b:	xor    rax,rsi
   14002963e:	ror    rax,cl
   140029641:	cmp    r9,r12
   140029644:	jne    0x14002964b
   140029646:	cmp    rax,r14
   140029649:	je     0x14002966b
   14002964b:	mov    r12,r9
   14002964e:	mov    QWORD PTR [rsp+0x28],r9
   140029653:	mov    rdi,r9
   140029656:	mov    QWORD PTR [rsp+0x30],r9
   14002965b:	mov    r14,rax
   14002965e:	mov    QWORD PTR [rsp+0x38],rax
   140029663:	mov    rbx,rax
   140029666:	mov    QWORD PTR [rsp+0x20],rax
   14002966b:	jmp    0x14002958c
   140029670:	mov    rdi,QWORD PTR [rsp+0x88]
   140029678:	xor    ebx,ebx
   14002967a:	mov    ecx,DWORD PTR [rdi]
   14002967c:	call   0x14002af7c
   140029681:	mov    eax,ebx
   140029683:	mov    rbx,QWORD PTR [rsp+0x70]
   140029688:	mov    rsi,QWORD PTR [rsp+0x78]
   14002968d:	add    rsp,0x40
   140029691:	pop    r15
   140029693:	pop    r14
   140029695:	pop    r13
   140029697:	pop    r12
   140029699:	pop    rdi
   14002969a:	ret    
   14002969b:	int3   
   14002969c:	mov    rax,rsp
   14002969f:	mov    QWORD PTR [rax+0x8],rbx
   1400296a3:	mov    QWORD PTR [rax+0x10],rbp
   1400296a7:	mov    QWORD PTR [rax+0x18],rsi
   1400296ab:	mov    QWORD PTR [rax+0x20],rdi
   1400296af:	push   r12
   1400296b1:	push   r14
   1400296b3:	push   r15
   1400296b5:	sub    rsp,0x20
   1400296b9:	mov    rax,QWORD PTR [rcx]
   1400296bc:	xor    esi,esi
   1400296be:	mov    r15,rcx
   1400296c1:	mov    rbx,QWORD PTR [rax]
   1400296c4:	test   rbx,rbx
   1400296c7:	jne    0x1400296d1
   1400296c9:	or     eax,0xffffffff
   1400296cc:	jmp    0x140029857
   1400296d1:	mov    r8,QWORD PTR [rip+0x1cb10]        # 0x1400461e8
   1400296d8:	mov    r12d,0x40
   1400296de:	mov    rbp,QWORD PTR [rbx]
   1400296e1:	mov    ecx,r8d
   1400296e4:	mov    r9,QWORD PTR [rbx+0x8]
   1400296e8:	and    ecx,0x3f
   1400296eb:	mov    rbx,QWORD PTR [rbx+0x10]
   1400296ef:	xor    rbp,r8
   1400296f2:	xor    r9,r8
   1400296f5:	ror    rbp,cl
   1400296f8:	xor    rbx,r8
   1400296fb:	ror    r9,cl
   1400296fe:	ror    rbx,cl
   140029701:	cmp    r9,rbx
   140029704:	jne    0x1400297d1
   14002970a:	sub    rbx,rbp
   14002970d:	mov    eax,0x200
   140029712:	sar    rbx,0x3
   140029716:	cmp    rbx,rax
   140029719:	mov    rdi,rbx
   14002971c:	cmova  rdi,rax
   140029720:	lea    eax,[r12-0x20]
   140029725:	add    rdi,rbx
   140029728:	cmove  rdi,rax
   14002972c:	cmp    rdi,rbx
   14002972f:	jb     0x140029750
   140029731:	lea    r8d,[r12-0x38]
   140029736:	mov    rdx,rdi
   140029739:	mov    rcx,rbp
   14002973c:	call   0x140007c70
   140029741:	xor    ecx,ecx
   140029743:	mov    r14,rax
   140029746:	call   0x140007bd0
   14002974b:	test   r14,r14
   14002974e:	jne    0x140029778
   140029750:	lea    rdi,[rbx+0x4]
   140029754:	mov    r8d,0x8
   14002975a:	mov    rdx,rdi
   14002975d:	mov    rcx,rbp
   140029760:	call   0x140007c70
   140029765:	xor    ecx,ecx
   140029767:	mov    r14,rax
   14002976a:	call   0x140007bd0
   14002976f:	test   r14,r14
   140029772:	je     0x1400296c9
   140029778:	mov    r8,QWORD PTR [rip+0x1ca69]        # 0x1400461e8
   14002977f:	lea    r9,[r14+rbx*8]
   140029783:	mov    eax,r8d
   140029786:	lea    rbx,[r14+rdi*8]
   14002978a:	and    eax,0x3f
   14002978d:	mov    ecx,r12d
   140029790:	sub    ecx,eax
   140029792:	mov    rdx,rsi
   140029795:	ror    rdx,cl
   140029798:	mov    rax,rbx
   14002979b:	sub    rax,r9
   14002979e:	xor    rdx,r8
   1400297a1:	add    rax,0x7
   1400297a5:	mov    rbp,r14
   1400297a8:	shr    rax,0x3
   1400297ac:	mov    rcx,r9
   1400297af:	cmp    r9,rbx
   1400297b2:	cmova  rax,rsi
   1400297b6:	test   rax,rax
   1400297b9:	je     0x1400297d1
   1400297bb:	inc    rsi
   1400297be:	mov    QWORD PTR [rcx],rdx
   1400297c1:	lea    rcx,[rcx+0x8]
   1400297c5:	cmp    rsi,rax
   1400297c8:	jne    0x1400297bb
   1400297ca:	mov    r8,QWORD PTR [rip+0x1ca17]        # 0x1400461e8
   1400297d1:	mov    eax,r8d
   1400297d4:	mov    ecx,r12d
   1400297d7:	and    eax,0x3f
   1400297da:	sub    ecx,eax
   1400297dc:	mov    rax,QWORD PTR [r15+0x8]
   1400297e0:	mov    rdx,QWORD PTR [rax]
   1400297e3:	mov    eax,r12d
   1400297e6:	ror    rdx,cl
   1400297e9:	xor    rdx,r8
   1400297ec:	lea    r8,[r9+0x8]
   1400297f0:	mov    QWORD PTR [r9],rdx
   1400297f3:	mov    rdx,QWORD PTR [rip+0x1c9ee]        # 0x1400461e8
   1400297fa:	mov    ecx,edx
   1400297fc:	and    ecx,0x3f
   1400297ff:	sub    eax,ecx
   140029801:	mov    cl,al
   140029803:	mov    rax,QWORD PTR [r15]
   140029806:	ror    rbp,cl
   140029809:	xor    rbp,rdx
   14002980c:	mov    rcx,QWORD PTR [rax]
   14002980f:	mov    QWORD PTR [rcx],rbp
   140029812:	mov    ecx,r12d
   140029815:	mov    rdx,QWORD PTR [rip+0x1c9cc]        # 0x1400461e8
   14002981c:	mov    eax,edx
   14002981e:	and    eax,0x3f
   140029821:	sub    ecx,eax
   140029823:	mov    rax,QWORD PTR [r15]
   140029826:	ror    r8,cl
   140029829:	xor    r8,rdx
   14002982c:	mov    rdx,QWORD PTR [rax]
   14002982f:	mov    QWORD PTR [rdx+0x8],r8
   140029833:	mov    rdx,QWORD PTR [rip+0x1c9ae]        # 0x1400461e8
   14002983a:	mov    eax,edx
   14002983c:	and    eax,0x3f
   14002983f:	sub    r12d,eax
   140029842:	mov    rax,QWORD PTR [r15]
   140029845:	mov    cl,r12b
   140029848:	ror    rbx,cl
   14002984b:	xor    rbx,rdx
   14002984e:	mov    rcx,QWORD PTR [rax]
   140029851:	xor    eax,eax
   140029853:	mov    QWORD PTR [rcx+0x10],rbx
   140029857:	mov    rbx,QWORD PTR [rsp+0x40]
   14002985c:	mov    rbp,QWORD PTR [rsp+0x48]
   140029861:	mov    rsi,QWORD PTR [rsp+0x50]
   140029866:	mov    rdi,QWORD PTR [rsp+0x58]
   14002986b:	add    rsp,0x20
   14002986f:	pop    r15
   140029871:	pop    r14
   140029873:	pop    r12
   140029875:	ret    
   140029876:	int3   
   140029877:	int3   
   140029878:	mov    rdx,rcx
   14002987b:	lea    rcx,[rip+0x1ede6]        # 0x140048668
   140029882:	jmp    0x140029904
   140029887:	int3   
   140029888:	mov    r11,rsp
   14002988b:	mov    QWORD PTR [r11+0x8],rcx
   14002988f:	sub    rsp,0x38
   140029893:	lea    rax,[r11+0x8]
   140029897:	mov    QWORD PTR [r11-0x18],rax
   14002989b:	lea    r9,[r11+0x18]
   14002989f:	mov    eax,0x2
   1400298a4:	lea    r8,[r11-0x18]
   1400298a8:	lea    rdx,[r11+0x20]
   1400298ac:	mov    DWORD PTR [rsp+0x50],eax
   1400298b0:	lea    rcx,[r11+0x10]
   1400298b4:	mov    DWORD PTR [rsp+0x58],eax
   1400298b8:	call   0x1400294fc
   1400298bd:	add    rsp,0x38
   1400298c1:	ret    
   1400298c2:	int3   
   1400298c3:	int3   
   1400298c4:	xor    r9d,r9d
   1400298c7:	mov    r8,rcx
   1400298ca:	test   rcx,rcx
   1400298cd:	jne    0x1400298d3
   1400298cf:	or     eax,0xffffffff
   1400298d2:	ret    
   1400298d3:	mov    rax,QWORD PTR [rcx+0x10]
   1400298d7:	cmp    QWORD PTR [rcx],rax
   1400298da:	jne    0x140029900
   1400298dc:	mov    rdx,QWORD PTR [rip+0x1c905]        # 0x1400461e8
   1400298e3:	mov    ecx,0x40
   1400298e8:	mov    eax,edx
   1400298ea:	and    eax,0x3f
   1400298ed:	sub    ecx,eax
   1400298ef:	ror    r9,cl
   1400298f2:	xor    r9,rdx
   1400298f5:	mov    QWORD PTR [r8],r9
   1400298f8:	mov    QWORD PTR [r8+0x8],r9
   1400298fc:	mov    QWORD PTR [r8+0x10],r9
   140029900:	xor    eax,eax
   140029902:	ret    
   140029903:	int3   
   140029904:	mov    QWORD PTR [rsp+0x10],rdx
   140029909:	mov    QWORD PTR [rsp+0x8],rcx
   14002990e:	push   rbp
   14002990f:	mov    rbp,rsp
   140029912:	sub    rsp,0x40
   140029916:	lea    rax,[rbp+0x10]
   14002991a:	mov    QWORD PTR [rbp-0x18],rax
   14002991e:	lea    r9,[rbp+0x28]
   140029922:	lea    rax,[rbp+0x18]
   140029926:	mov    QWORD PTR [rbp-0x10],rax
   14002992a:	lea    r8,[rbp-0x18]
   14002992e:	mov    eax,0x2
   140029933:	lea    rdx,[rbp-0x20]
   140029937:	lea    rcx,[rbp+0x20]
   14002993b:	mov    DWORD PTR [rbp+0x28],eax
   14002993e:	mov    DWORD PTR [rbp-0x20],eax
   140029941:	call   0x1400294c0
   140029946:	add    rsp,0x40
   14002994a:	pop    rbp
   14002994b:	ret    
   14002994c:	lea    rax,[rip+0x1c9fd]        # 0x140046350
   140029953:	mov    QWORD PTR [rip+0x1f576],rax        # 0x140048ed0
   14002995a:	mov    al,0x1
   14002995c:	ret    
   14002995d:	int3   
   14002995e:	int3   
   14002995f:	int3   
   140029960:	sub    rsp,0x28
   140029964:	lea    rcx,[rip+0x1ecfd]        # 0x140048668
   14002996b:	call   0x1400298c4
   140029970:	lea    rcx,[rip+0x1ed09]        # 0x140048680
   140029977:	call   0x1400298c4
   14002997c:	mov    al,0x1
   14002997e:	add    rsp,0x28
   140029982:	ret    
   140029983:	int3   
   140029984:	int3   
   140029985:	int3   
   140029986:	int3   
   140029987:	int3   
   140029988:	int3   
   140029989:	int3   
   14002998a:	int3   
   14002998b:	int3   
   14002998c:	int3   
   14002998d:	int3   
   14002998e:	int3   
   14002998f:	int3   
   140029990:	mov    al,0x1
   140029992:	ret    
   140029993:	int3   
   140029994:	sub    rsp,0x28
   140029998:	call   0x14002945c
   14002999d:	mov    al,0x1
   14002999f:	add    rsp,0x28
   1400299a3:	ret    
   1400299a4:	rex push rbx
   1400299a6:	sub    rsp,0x20
   1400299aa:	mov    rdx,QWORD PTR [rip+0x1c837]        # 0x1400461e8
   1400299b1:	mov    ecx,0x40
   1400299b6:	mov    eax,edx
   1400299b8:	xor    ebx,ebx
   1400299ba:	and    eax,0x3f
   1400299bd:	sub    ecx,eax
   1400299bf:	ror    rbx,cl
   1400299c2:	xor    rbx,rdx
   1400299c5:	mov    rcx,rbx
   1400299c8:	call   0x1400280fc
   1400299cd:	mov    rcx,rbx
   1400299d0:	call   0x14002d450
   1400299d5:	mov    rcx,rbx
   1400299d8:	call   0x14002d4d0
   1400299dd:	mov    rcx,rbx
   1400299e0:	call   0x140029ae8
   1400299e5:	mov    rcx,rbx
   1400299e8:	call   0x140028d38
   1400299ed:	mov    al,0x1
   1400299ef:	add    rsp,0x20
   1400299f3:	pop    rbx
   1400299f4:	ret    
   1400299f5:	int3   
   1400299f6:	int3   
   1400299f7:	int3   
   1400299f8:	xor    ecx,ecx
   1400299fa:	jmp    0x140027ae8
   1400299ff:	int3   
   140029a00:	rex push rbx
   140029a02:	sub    rsp,0x20
   140029a06:	mov    rcx,QWORD PTR [rip+0x1ccdb]        # 0x1400466e8
   140029a0d:	or     eax,0xffffffff
   140029a10:	lock xadd DWORD PTR [rcx],eax
   140029a14:	cmp    eax,0x1
   140029a17:	jne    0x140029a38
   140029a19:	mov    rcx,QWORD PTR [rip+0x1ccc8]        # 0x1400466e8
   140029a20:	lea    rbx,[rip+0x1ca99]        # 0x1400464c0
   140029a27:	cmp    rcx,rbx
   140029a2a:	je     0x140029a38
   140029a2c:	call   0x140007bd0
   140029a31:	mov    QWORD PTR [rip+0x1ccb0],rbx        # 0x1400466e8
   140029a38:	mov    rcx,QWORD PTR [rip+0x1f481]        # 0x140048ec0
   140029a3f:	call   0x140007bd0
   140029a44:	mov    rcx,QWORD PTR [rip+0x1f47d]        # 0x140048ec8
   140029a4b:	xor    ebx,ebx
   140029a4d:	mov    QWORD PTR [rip+0x1f46c],rbx        # 0x140048ec0
   140029a54:	call   0x140007bd0
   140029a59:	mov    rcx,QWORD PTR [rip+0x1ec50]        # 0x1400486b0
   140029a60:	mov    QWORD PTR [rip+0x1f461],rbx        # 0x140048ec8
   140029a67:	call   0x140007bd0
   140029a6c:	mov    rcx,QWORD PTR [rip+0x1ec45]        # 0x1400486b8
   140029a73:	mov    QWORD PTR [rip+0x1ec36],rbx        # 0x1400486b0
   140029a7a:	call   0x140007bd0
   140029a7f:	mov    al,0x1
   140029a81:	mov    QWORD PTR [rip+0x1ec30],rbx        # 0x1400486b8
   140029a88:	add    rsp,0x20
   140029a8c:	pop    rbx
   140029a8d:	ret    
   140029a8e:	int3   
   140029a8f:	int3   
   140029a90:	lea    rdx,[rip+0xf489]        # 0x140038f20
   140029a97:	lea    rcx,[rip+0xf392]        # 0x140038e30
   140029a9e:	jmp    0x14002d36c
   140029aa3:	int3   
   140029aa4:	lea    rdx,[rip+0xf475]        # 0x140038f20
   140029aab:	lea    rcx,[rip+0xf37e]        # 0x140038e30
   140029ab2:	jmp    0x14002d400
   140029ab7:	int3   
   140029ab8:	mov    eax,DWORD PTR [rip+0x1ebda]        # 0x140048698
   140029abe:	ret    
   140029abf:	int3   
   140029ac0:	mov    DWORD PTR [rip+0x1ebd2],ecx        # 0x140048698
   140029ac6:	ret    
   140029ac7:	int3   
   140029ac8:	mov    rdx,QWORD PTR [rip+0x1c719]        # 0x1400461e8
   140029acf:	mov    ecx,edx
   140029ad1:	xor    rdx,QWORD PTR [rip+0x1ebc8]        # 0x1400486a0
   140029ad8:	and    ecx,0x3f
   140029adb:	ror    rdx,cl
   140029ade:	test   rdx,rdx
   140029ae1:	setne  al
   140029ae4:	ret    
   140029ae5:	int3   
   140029ae6:	int3   
   140029ae7:	int3   
   140029ae8:	mov    QWORD PTR [rip+0x1ebb1],rcx        # 0x1400486a0
   140029aef:	ret    
   140029af0:	mov    QWORD PTR [rsp+0x8],rbx
   140029af5:	push   rdi
   140029af6:	sub    rsp,0x20
   140029afa:	mov    rbx,QWORD PTR [rip+0x1c6e7]        # 0x1400461e8
   140029b01:	mov    rdi,rcx
   140029b04:	mov    ecx,ebx
   140029b06:	xor    rbx,QWORD PTR [rip+0x1eb93]        # 0x1400486a0
   140029b0d:	and    ecx,0x3f
   140029b10:	ror    rbx,cl
   140029b13:	test   rbx,rbx
   140029b16:	jne    0x140029b1c
   140029b18:	xor    eax,eax
   140029b1a:	jmp    0x140029b2a
   140029b1c:	mov    rcx,rbx
   140029b1f:	call   QWORD PTR [rip+0x8abb]        # 0x1400325e0
   140029b25:	mov    rcx,rdi
   140029b28:	call   rbx
   140029b2a:	mov    rbx,QWORD PTR [rsp+0x30]
   140029b2f:	add    rsp,0x20
   140029b33:	pop    rdi
   140029b34:	ret    
   140029b35:	int3   
   140029b36:	int3   
   140029b37:	int3   
   140029b38:	mov    r8,QWORD PTR [rip+0x1c6a9]        # 0x1400461e8
   140029b3f:	mov    r9,rcx
   140029b42:	mov    edx,r8d
   140029b45:	mov    ecx,0x40
   140029b4a:	and    edx,0x3f
   140029b4d:	sub    ecx,edx
   140029b4f:	ror    r9,cl
   140029b52:	xor    r9,r8
   140029b55:	mov    QWORD PTR [rip+0x1eb44],r9        # 0x1400486a0
   140029b5c:	ret    
   140029b5d:	int3   
   140029b5e:	int3   
   140029b5f:	int3   
   140029b60:	mov    rax,rsp
   140029b63:	mov    QWORD PTR [rax+0x8],rbx
   140029b67:	mov    QWORD PTR [rax+0x10],rbp
   140029b6b:	mov    QWORD PTR [rax+0x18],rsi
   140029b6f:	mov    QWORD PTR [rax+0x20],rdi
   140029b73:	push   r14
   140029b75:	sub    rsp,0x20
   140029b79:	xor    r14d,r14d
   140029b7c:	mov    rdi,rdx
   140029b7f:	sub    rdi,rcx
   140029b82:	mov    rbx,rcx
   140029b85:	add    rdi,0x7
   140029b89:	mov    ebp,r14d
   140029b8c:	shr    rdi,0x3
   140029b90:	cmp    rcx,rdx
   140029b93:	cmova  rdi,r14
   140029b97:	test   rdi,rdi
   140029b9a:	je     0x140029bbb
   140029b9c:	mov    rsi,QWORD PTR [rbx]
   140029b9f:	test   rsi,rsi
   140029ba2:	je     0x140029baf
   140029ba4:	mov    rcx,rsi
   140029ba7:	call   QWORD PTR [rip+0x8a33]        # 0x1400325e0
   140029bad:	call   rsi
   140029baf:	add    rbx,0x8
   140029bb3:	inc    rbp
   140029bb6:	cmp    rbp,rdi
   140029bb9:	jne    0x140029b9c
   140029bbb:	mov    rbx,QWORD PTR [rsp+0x30]
   140029bc0:	mov    rbp,QWORD PTR [rsp+0x38]
   140029bc5:	mov    rsi,QWORD PTR [rsp+0x40]
   140029bca:	mov    rdi,QWORD PTR [rsp+0x48]
   140029bcf:	add    rsp,0x20
   140029bd3:	pop    r14
   140029bd5:	ret    
   140029bd6:	int3   
   140029bd7:	int3   
   140029bd8:	mov    QWORD PTR [rsp+0x8],rbx
   140029bdd:	mov    QWORD PTR [rsp+0x10],rsi
   140029be2:	push   rdi
   140029be3:	sub    rsp,0x20
   140029be7:	mov    rsi,rdx
   140029bea:	mov    rbx,rcx
   140029bed:	cmp    rcx,rdx
   140029bf0:	je     0x140029c12
   140029bf2:	mov    rdi,QWORD PTR [rbx]
   140029bf5:	test   rdi,rdi
   140029bf8:	je     0x140029c09
   140029bfa:	mov    rcx,rdi
   140029bfd:	call   QWORD PTR [rip+0x89dd]        # 0x1400325e0
   140029c03:	call   rdi
   140029c05:	test   eax,eax
   140029c07:	jne    0x140029c14
   140029c09:	add    rbx,0x8
   140029c0d:	cmp    rbx,rsi
   140029c10:	jmp    0x140029bf0
   140029c12:	xor    eax,eax
   140029c14:	mov    rbx,QWORD PTR [rsp+0x30]
   140029c19:	mov    rsi,QWORD PTR [rsp+0x38]
   140029c1e:	add    rsp,0x20
   140029c22:	pop    rdi
   140029c23:	ret    
   140029c24:	sub    rsp,0x28
   140029c28:	lea    eax,[rcx-0x4000]
   140029c2e:	test   eax,0xffff3fff
   140029c33:	jne    0x140029c47
   140029c35:	cmp    ecx,0xc000
   140029c3b:	je     0x140029c47
   140029c3d:	xchg   DWORD PTR [rip+0x1f2ed],ecx        # 0x140048f30
   140029c43:	xor    eax,eax
   140029c45:	jmp    0x140029c5c
   140029c47:	call   0x14002a494
   140029c4c:	mov    DWORD PTR [rax],0x16
   140029c52:	call   0x1400281ac
   140029c57:	mov    eax,0x16
   140029c5c:	add    rsp,0x28
   140029c60:	ret    
   140029c61:	int3   
   140029c62:	int3   
   140029c63:	int3   
   140029c64:	sub    rsp,0x28
   140029c68:	call   QWORD PTR [rip+0x843a]        # 0x1400320a8
   140029c6e:	mov    QWORD PTR [rip+0x1ea4b],rax        # 0x1400486c0
   140029c75:	call   QWORD PTR [rip+0x8425]        # 0x1400320a0
   140029c7b:	mov    QWORD PTR [rip+0x1ea46],rax        # 0x1400486c8
   140029c82:	mov    al,0x1
   140029c84:	add    rsp,0x28
   140029c88:	ret    
   140029c89:	int3   
   140029c8a:	int3   
   140029c8b:	int3   
   140029c8c:	lea    rax,[rip+0x1ea15]        # 0x1400486a8
   140029c93:	ret    
   140029c94:	lea    rax,[rip+0x1ea15]        # 0x1400486b0
   140029c9b:	ret    
   140029c9c:	mov    eax,0x1
   140029ca1:	xchg   DWORD PTR [rip+0x1ea31],eax        # 0x1400486d8
   140029ca7:	ret    
   140029ca8:	rex push rdi
   140029caa:	sub    rsp,0x20
   140029cae:	lea    rdi,[rip+0x1c69b]        # 0x140046350
   140029cb5:	cmp    QWORD PTR [rip+0x1f214],rdi        # 0x140048ed0
   140029cbc:	je     0x140029ce9
   140029cbe:	mov    ecx,0x4
   140029cc3:	call   0x14002af28
   140029cc8:	nop
   140029cc9:	mov    rdx,rdi
   140029ccc:	lea    rcx,[rip+0x1f1fd]        # 0x140048ed0
   140029cd3:	call   0x14002e308
   140029cd8:	mov    QWORD PTR [rip+0x1f1f1],rax        # 0x140048ed0
   140029cdf:	mov    ecx,0x4
   140029ce4:	call   0x14002af7c
   140029ce9:	add    rsp,0x20
   140029ced:	pop    rdi
   140029cee:	ret    
   140029cef:	int3   
   140029cf0:	rex push rbx
   140029cf2:	sub    rsp,0x20
   140029cf6:	mov    ebx,ecx
   140029cf8:	call   0x14002a248
   140029cfd:	mov    r8d,DWORD PTR [rax+0x3a8]
   140029d04:	mov    edx,r8d
   140029d07:	and    dl,0x2
   140029d0a:	neg    dl
   140029d0c:	sbb    ecx,ecx
   140029d0e:	cmp    ebx,0xffffffff
   140029d11:	je     0x140029d49
   140029d13:	test   ebx,ebx
   140029d15:	je     0x140029d50
   140029d17:	cmp    ebx,0x1
   140029d1a:	je     0x140029d3c
   140029d1c:	cmp    ebx,0x2
   140029d1f:	je     0x140029d36
   140029d21:	call   0x14002a494
   140029d26:	mov    DWORD PTR [rax],0x16
   140029d2c:	call   0x1400281ac
   140029d31:	or     eax,0xffffffff
   140029d34:	jmp    0x140029d53
   140029d36:	and    r8d,0xfffffffd
   140029d3a:	jmp    0x140029d40
   140029d3c:	or     r8d,0x2
   140029d40:	mov    DWORD PTR [rax+0x3a8],r8d
   140029d47:	jmp    0x140029d50
   140029d49:	or     DWORD PTR [rip+0x1cd50],0xffffffff        # 0x140046aa0
   140029d50:	lea    eax,[rcx+0x2]
   140029d53:	add    rsp,0x20
   140029d57:	pop    rbx
   140029d58:	ret    
   140029d59:	int3   
   140029d5a:	int3   
   140029d5b:	int3   
   140029d5c:	sub    rsp,0x28
   140029d60:	cmp    ecx,0x1
   140029d63:	jbe    0x140029d7a
   140029d65:	call   0x14002a494
   140029d6a:	mov    DWORD PTR [rax],0x16
   140029d70:	call   0x1400281ac
   140029d75:	or     eax,0xffffffff
   140029d78:	jmp    0x140029d82
   140029d7a:	xchg   DWORD PTR [rip+0x1e95c],ecx        # 0x1400486dc
   140029d80:	mov    eax,ecx
   140029d82:	add    rsp,0x28
   140029d86:	ret    
   140029d87:	int3   
   140029d88:	lea    rax,[rip+0x1e951]        # 0x1400486e0
   140029d8f:	ret    
   140029d90:	rex push rbx
   140029d92:	sub    rsp,0x20
   140029d96:	call   0x14002a248
   140029d9b:	mov    rbx,QWORD PTR [rax+0x18]
   140029d9f:	test   rbx,rbx
   140029da2:	je     0x140029db1
   140029da4:	mov    rcx,rbx
   140029da7:	call   QWORD PTR [rip+0x8833]        # 0x1400325e0
   140029dad:	call   rbx
   140029daf:	jmp    0x140029db1
   140029db1:	call   0x140029db8
   140029db6:	nop
   140029db7:	int3   
   140029db8:	sub    rsp,0x28
   140029dbc:	call   0x14002d4a0
   140029dc1:	test   rax,rax
   140029dc4:	je     0x140029dd0
   140029dc6:	mov    ecx,0x16
   140029dcb:	call   0x14002d4f0
   140029dd0:	test   BYTE PTR [rip+0x1c561],0x2        # 0x140046338
   140029dd7:	je     0x140029e02
   140029dd9:	mov    ecx,0x17
   140029dde:	call   0x140026ee0
   140029de3:	test   eax,eax
   140029de5:	je     0x140029dee
   140029de7:	mov    ecx,0x7
   140029dec:	int    0x29
   140029dee:	mov    r8d,0x1
   140029df4:	mov    edx,0x40000015
   140029df9:	lea    ecx,[r8+0x2]
   140029dfd:	call   0x140027fa0
   140029e02:	mov    ecx,0x3
   140029e07:	call   0x140028d60
   140029e0c:	int3   
   140029e0d:	int3   
   140029e0e:	int3   
   140029e0f:	int3   
   140029e10:	rex push rbx
   140029e12:	sub    rsp,0x20
   140029e16:	xor    ebx,ebx
   140029e18:	test   rcx,rcx
   140029e1b:	je     0x140029e29
   140029e1d:	test   rdx,rdx
   140029e20:	je     0x140029e29
   140029e22:	test   r8,r8
   140029e25:	jne    0x140029e42
   140029e27:	mov    BYTE PTR [rcx],bl
   140029e29:	call   0x14002a494
   140029e2e:	mov    ebx,0x16
   140029e33:	mov    DWORD PTR [rax],ebx
   140029e35:	call   0x1400281ac
   140029e3a:	mov    eax,ebx
   140029e3c:	add    rsp,0x20
   140029e40:	pop    rbx
   140029e41:	ret    
   140029e42:	mov    r9,rcx
   140029e45:	sub    r8,rcx
   140029e48:	mov    al,BYTE PTR [r8+r9*1]
   140029e4c:	mov    BYTE PTR [r9],al
   140029e4f:	inc    r9
   140029e52:	test   al,al
   140029e54:	je     0x140029e5c
   140029e56:	sub    rdx,0x1
   140029e5a:	jne    0x140029e48
   140029e5c:	test   rdx,rdx
   140029e5f:	jne    0x140029e3a
   140029e61:	mov    BYTE PTR [rcx],bl
   140029e63:	call   0x14002a494
   140029e68:	mov    ebx,0x22
   140029e6d:	jmp    0x140029e33
   140029e6f:	int3   
   140029e70:	int3   
   140029e71:	int3   
   140029e72:	int3   
   140029e73:	int3   
   140029e74:	int3   
   140029e75:	int3   
   140029e76:	data16 nop WORD PTR [rax+rax*1+0x0]
   140029e80:	sub    rsp,0x8
   140029e84:	stmxcsr DWORD PTR [rsp]
   140029e88:	mov    eax,DWORD PTR [rsp]
   140029e8b:	add    rsp,0x8
   140029e8f:	ret    
   140029e90:	mov    DWORD PTR [rsp+0x8],ecx
   140029e94:	ldmxcsr DWORD PTR [rsp+0x8]
   140029e99:	ret    
   140029e9a:	stmxcsr DWORD PTR [rsp+0x8]
   140029e9f:	mov    ecx,0xffffffc0
   140029ea4:	and    DWORD PTR [rsp+0x8],ecx
   140029ea8:	ldmxcsr DWORD PTR [rsp+0x8]
   140029ead:	ret    
   140029eae:	ucomisd xmm0,QWORD PTR [rip+0xf06a]        # 0x140038f20
   140029eb6:	jae    0x140029ecc
   140029eb8:	ucomisd xmm0,QWORD PTR [rip+0xf068]        # 0x140038f28
   140029ec0:	jbe    0x140029ecc
   140029ec2:	cvtsd2si rcx,xmm0
   140029ec7:	cvtsi2sd xmm0,rcx
   140029ecc:	ret    
   140029ecd:	int3   
   140029ece:	int3   
   140029ecf:	int3   
   140029ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140029ed5:	mov    QWORD PTR [rsp+0x20],r9
   140029eda:	push   rdi
   140029edb:	sub    rsp,0x20
   140029edf:	mov    rbx,r9
   140029ee2:	mov    rdi,r8
   140029ee5:	mov    ecx,DWORD PTR [rdx]
   140029ee7:	call   0x14002af28
   140029eec:	nop
   140029eed:	mov    rax,QWORD PTR [rdi]
   140029ef0:	mov    rcx,QWORD PTR [rax]
   140029ef3:	mov    rcx,QWORD PTR [rcx+0x88]
   140029efa:	test   rcx,rcx
   140029efd:	je     0x140029f1d
   140029eff:	or     eax,0xffffffff
   140029f02:	lock xadd DWORD PTR [rcx],eax
   140029f06:	cmp    eax,0x1
   140029f09:	jne    0x140029f1d
   140029f0b:	lea    rax,[rip+0x1c5ae]        # 0x1400464c0
   140029f12:	cmp    rcx,rax
   140029f15:	je     0x140029f1d
   140029f17:	call   0x140007bd0
   140029f1c:	nop
   140029f1d:	mov    ecx,DWORD PTR [rbx]
   140029f1f:	call   0x14002af7c
   140029f24:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f29:	add    rsp,0x20
   140029f2d:	pop    rdi
   140029f2e:	ret    
   140029f2f:	int3   
   140029f30:	mov    QWORD PTR [rsp+0x8],rbx
   140029f35:	mov    QWORD PTR [rsp+0x20],r9
   140029f3a:	push   rdi
   140029f3b:	sub    rsp,0x20
   140029f3f:	mov    rbx,r9
   140029f42:	mov    rdi,r8
   140029f45:	mov    ecx,DWORD PTR [rdx]
   140029f47:	call   0x14002af28
   140029f4c:	nop
   140029f4d:	mov    rax,QWORD PTR [rdi+0x8]
   140029f51:	mov    rdx,QWORD PTR [rax]
   140029f54:	mov    rcx,QWORD PTR [rdi]
   140029f57:	mov    rdx,QWORD PTR [rdx]
   140029f5a:	mov    rcx,QWORD PTR [rcx]
   140029f5d:	call   0x14002a1e0
   140029f62:	nop
   140029f63:	mov    ecx,DWORD PTR [rbx]
   140029f65:	call   0x14002af7c
   140029f6a:	mov    rbx,QWORD PTR [rsp+0x30]
   140029f6f:	add    rsp,0x20
   140029f73:	pop    rdi
   140029f74:	ret    
   140029f75:	int3   
   140029f76:	int3   
   140029f77:	int3   
   140029f78:	mov    QWORD PTR [rsp+0x8],rbx
   140029f7d:	mov    QWORD PTR [rsp+0x20],r9
   140029f82:	push   rdi
   140029f83:	sub    rsp,0x20
   140029f87:	mov    rbx,r9
   140029f8a:	mov    rdi,r8
   140029f8d:	mov    ecx,DWORD PTR [rdx]
   140029f8f:	call   0x14002af28
   140029f94:	nop
   140029f95:	mov    rax,QWORD PTR [rdi]
   140029f98:	mov    rcx,QWORD PTR [rax]
   140029f9b:	mov    rax,QWORD PTR [rcx+0x88]
   140029fa2:	lock inc DWORD PTR [rax]
   140029fa5:	mov    ecx,DWORD PTR [rbx]
   140029fa7:	call   0x14002af7c
   140029fac:	mov    rbx,QWORD PTR [rsp+0x30]
   140029fb1:	add    rsp,0x20
   140029fb5:	pop    rdi
   140029fb6:	ret    
   140029fb7:	int3   
   140029fb8:	mov    QWORD PTR [rsp+0x8],rbx
   140029fbd:	mov    QWORD PTR [rsp+0x20],r9
   140029fc2:	push   rdi
   140029fc3:	sub    rsp,0x20
   140029fc7:	mov    rbx,r9
   140029fca:	mov    rdi,r8
   140029fcd:	mov    ecx,DWORD PTR [rdx]
   140029fcf:	call   0x14002af28
   140029fd4:	nop
   140029fd5:	mov    rcx,QWORD PTR [rdi]
   140029fd8:	xor    edx,edx
   140029fda:	mov    rcx,QWORD PTR [rcx]
   140029fdd:	call   0x14002a1e0
   140029fe2:	nop
   140029fe3:	mov    ecx,DWORD PTR [rbx]
   140029fe5:	call   0x14002af7c
   140029fea:	mov    rbx,QWORD PTR [rsp+0x30]
   140029fef:	add    rsp,0x20
   140029ff3:	pop    rdi
   140029ff4:	ret    
   140029ff5:	int3   
   140029ff6:	int3   
   140029ff7:	int3   
   140029ff8:	rex push rbp
   140029ffa:	mov    rbp,rsp
   140029ffd:	sub    rsp,0x50
   14002a001:	mov    QWORD PTR [rbp-0x28],rcx
   14002a005:	lea    rax,[rbp-0x28]
   14002a009:	mov    QWORD PTR [rbp-0x18],rax
   14002a00d:	lea    r9,[rbp+0x20]
   14002a011:	mov    edx,0x1
   14002a016:	lea    r8,[rbp-0x18]
   14002a01a:	mov    eax,0x5
   14002a01f:	mov    DWORD PTR [rbp+0x20],eax
   14002a022:	mov    DWORD PTR [rbp+0x28],eax
   14002a025:	lea    rax,[rbp-0x28]
   14002a029:	mov    QWORD PTR [rbp-0x10],rax
   14002a02d:	lea    rax,[rbp-0x20]
   14002a031:	mov    QWORD PTR [rbp-0x8],rax
   14002a035:	mov    eax,0x4
   14002a03a:	mov    DWORD PTR [rbp-0x30],eax
   14002a03d:	mov    DWORD PTR [rbp-0x2c],eax
   14002a040:	lea    rax,[rip+0x1ee89]        # 0x140048ed0
   14002a047:	mov    QWORD PTR [rbp-0x20],rax
   14002a04b:	mov    DWORD PTR [rcx+0x28],edx
   14002a04e:	lea    rcx,[rip+0xecdb]        # 0x140038d30
   14002a055:	mov    rax,QWORD PTR [rbp-0x28]
   14002a059:	mov    QWORD PTR [rax],rcx
   14002a05c:	lea    rcx,[rip+0x1c45d]        # 0x1400464c0
   14002a063:	mov    rax,QWORD PTR [rbp-0x28]
   14002a067:	mov    DWORD PTR [rax+0x3a8],edx
   14002a06d:	mov    rax,QWORD PTR [rbp-0x28]
   14002a071:	mov    QWORD PTR [rax+0x88],rcx
   14002a078:	lea    ecx,[rdx+0x42]
   14002a07b:	mov    rax,QWORD PTR [rbp-0x28]
   14002a07f:	lea    rdx,[rbp+0x28]
   14002a083:	mov    WORD PTR [rax+0xbc],cx
   14002a08a:	mov    rax,QWORD PTR [rbp-0x28]
   14002a08e:	mov    WORD PTR [rax+0x1c2],cx
   14002a095:	lea    rcx,[rbp+0x18]
   14002a099:	mov    rax,QWORD PTR [rbp-0x28]
   14002a09d:	and    QWORD PTR [rax+0x3a0],0x0
   14002a0a5:	call   0x140029f78
   14002a0aa:	lea    r9,[rbp-0x30]
   14002a0ae:	lea    r8,[rbp-0x10]
   14002a0b2:	lea    rdx,[rbp-0x2c]
   14002a0b6:	lea    rcx,[rbp+0x18]
   14002a0ba:	call   0x140029f30
   14002a0bf:	add    rsp,0x50
   14002a0c3:	pop    rbp
   14002a0c4:	ret    
   14002a0c5:	int3   
   14002a0c6:	int3   
   14002a0c7:	int3   
   14002a0c8:	test   rcx,rcx
   14002a0cb:	je     0x14002a0e7
   14002a0cd:	push   rbx
   14002a0ce:	sub    rsp,0x20
   14002a0d2:	mov    rbx,rcx
   14002a0d5:	call   0x14002a0e8
   14002a0da:	mov    rcx,rbx
   14002a0dd:	call   0x140007bd0
   14002a0e2:	add    rsp,0x20
   14002a0e6:	pop    rbx
   14002a0e7:	ret    
   14002a0e8:	rex push rbp
   14002a0ea:	mov    rbp,rsp
   14002a0ed:	sub    rsp,0x40
   14002a0f1:	lea    rax,[rbp-0x18]
   14002a0f5:	mov    QWORD PTR [rbp-0x18],rcx
   14002a0f9:	mov    QWORD PTR [rbp-0x10],rax
   14002a0fd:	lea    rdx,[rip+0xec2c]        # 0x140038d30
   14002a104:	mov    eax,0x5
   14002a109:	mov    DWORD PTR [rbp+0x20],eax
   14002a10c:	mov    DWORD PTR [rbp+0x28],eax
   14002a10f:	lea    rax,[rbp-0x18]
   14002a113:	mov    QWORD PTR [rbp-0x8],rax
   14002a117:	mov    eax,0x4
   14002a11c:	mov    DWORD PTR [rbp-0x20],eax
   14002a11f:	mov    DWORD PTR [rbp-0x1c],eax
   14002a122:	mov    rax,QWORD PTR [rcx]
   14002a125:	cmp    rax,rdx
   14002a128:	je     0x14002a136
   14002a12a:	mov    rcx,rax
   14002a12d:	call   0x140007bd0
   14002a132:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a136:	mov    rcx,QWORD PTR [rcx+0x70]
   14002a13a:	call   0x140007bd0
   14002a13f:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a143:	mov    rcx,QWORD PTR [rcx+0x58]
   14002a147:	call   0x140007bd0
   14002a14c:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a150:	mov    rcx,QWORD PTR [rcx+0x60]
   14002a154:	call   0x140007bd0
   14002a159:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a15d:	mov    rcx,QWORD PTR [rcx+0x68]
   14002a161:	call   0x140007bd0
   14002a166:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a16a:	mov    rcx,QWORD PTR [rcx+0x48]
   14002a16e:	call   0x140007bd0
   14002a173:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a177:	mov    rcx,QWORD PTR [rcx+0x50]
   14002a17b:	call   0x140007bd0
   14002a180:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a184:	mov    rcx,QWORD PTR [rcx+0x78]
   14002a188:	call   0x140007bd0
   14002a18d:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a191:	mov    rcx,QWORD PTR [rcx+0x80]
   14002a198:	call   0x140007bd0
   14002a19d:	mov    rcx,QWORD PTR [rbp-0x18]
   14002a1a1:	mov    rcx,QWORD PTR [rcx+0x3c0]
   14002a1a8:	call   0x140007bd0
   14002a1ad:	lea    r9,[rbp+0x20]
   14002a1b1:	lea    r8,[rbp-0x10]
   14002a1b5:	lea    rdx,[rbp+0x28]
   14002a1b9:	lea    rcx,[rbp+0x18]
   14002a1bd:	call   0x140029ed0
   14002a1c2:	lea    r9,[rbp-0x20]
   14002a1c6:	lea    r8,[rbp-0x8]
   14002a1ca:	lea    rdx,[rbp-0x1c]
   14002a1ce:	lea    rcx,[rbp+0x18]
   14002a1d2:	call   0x140029fb8
   14002a1d7:	add    rsp,0x40
   14002a1db:	pop    rbp
   14002a1dc:	ret    
   14002a1dd:	int3   
   14002a1de:	int3   
   14002a1df:	int3   
   14002a1e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a1e5:	push   rdi
   14002a1e6:	sub    rsp,0x20
   14002a1ea:	mov    rdi,rcx
   14002a1ed:	mov    rbx,rdx
   14002a1f0:	mov    rcx,QWORD PTR [rcx+0x90]
   14002a1f7:	test   rcx,rcx
   14002a1fa:	je     0x14002a228
   14002a1fc:	call   0x14002e1f0
   14002a201:	mov    rcx,QWORD PTR [rdi+0x90]
   14002a208:	cmp    rcx,QWORD PTR [rip+0x1ecc1]        # 0x140048ed0
   14002a20f:	je     0x14002a228
   14002a211:	lea    rax,[rip+0x1c138]        # 0x140046350
   14002a218:	cmp    rcx,rax
   14002a21b:	je     0x14002a228
   14002a21d:	cmp    DWORD PTR [rcx+0x10],0x0
   14002a221:	jne    0x14002a228
   14002a223:	call   0x14002dff0
   14002a228:	mov    QWORD PTR [rdi+0x90],rbx
   14002a22f:	test   rbx,rbx
   14002a232:	je     0x14002a23c
   14002a234:	mov    rcx,rbx
   14002a237:	call   0x14002df64
   14002a23c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a241:	add    rsp,0x20
   14002a245:	pop    rdi
   14002a246:	ret    
   14002a247:	int3   
   14002a248:	mov    QWORD PTR [rsp+0x8],rbx
   14002a24d:	push   rdi
   14002a24e:	sub    rsp,0x20
   14002a252:	call   QWORD PTR [rip+0x7fb0]        # 0x140032208
   14002a258:	mov    ecx,DWORD PTR [rip+0x1c0e2]        # 0x140046340
   14002a25e:	mov    ebx,eax
   14002a260:	cmp    ecx,0xffffffff
   14002a263:	je     0x14002a272
   14002a265:	call   0x14002a7f4
   14002a26a:	mov    rdi,rax
   14002a26d:	test   rax,rax
   14002a270:	jne    0x14002a2b3
   14002a272:	mov    edx,0x3c8
   14002a277:	mov    ecx,0x1
   14002a27c:	call   0x140007c20
   14002a281:	mov    rdi,rax
   14002a284:	test   rax,rax
   14002a287:	jne    0x14002a292
   14002a289:	xor    ecx,ecx
   14002a28b:	call   0x140007bd0
   14002a290:	jmp    0x14002a2ce
   14002a292:	mov    ecx,DWORD PTR [rip+0x1c0a8]        # 0x140046340
   14002a298:	mov    rdx,rax
   14002a29b:	call   0x14002a84c
   14002a2a0:	mov    rcx,rdi
   14002a2a3:	test   eax,eax
   14002a2a5:	je     0x14002a28b
   14002a2a7:	call   0x140029ff8
   14002a2ac:	xor    ecx,ecx
   14002a2ae:	call   0x140007bd0
   14002a2b3:	test   rdi,rdi
   14002a2b6:	je     0x14002a2ce
   14002a2b8:	mov    ecx,ebx
   14002a2ba:	call   QWORD PTR [rip+0x7ec8]        # 0x140032188
   14002a2c0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a2c5:	mov    rax,rdi
   14002a2c8:	add    rsp,0x20
   14002a2cc:	pop    rdi
   14002a2cd:	ret    
   14002a2ce:	mov    ecx,ebx
   14002a2d0:	call   QWORD PTR [rip+0x7eb2]        # 0x140032188
   14002a2d6:	call   0x140029db8
   14002a2db:	int3   
   14002a2dc:	mov    QWORD PTR [rsp+0x8],rbx
   14002a2e1:	mov    QWORD PTR [rsp+0x10],rsi
   14002a2e6:	push   rdi
   14002a2e7:	sub    rsp,0x20
   14002a2eb:	call   QWORD PTR [rip+0x7f17]        # 0x140032208
   14002a2f1:	mov    ecx,DWORD PTR [rip+0x1c049]        # 0x140046340
   14002a2f7:	xor    esi,esi
   14002a2f9:	mov    ebx,eax
   14002a2fb:	cmp    ecx,0xffffffff
   14002a2fe:	je     0x14002a30d
   14002a300:	call   0x14002a7f4
   14002a305:	mov    rdi,rax
   14002a308:	test   rax,rax
   14002a30b:	jne    0x14002a34e
   14002a30d:	mov    edx,0x3c8
   14002a312:	mov    ecx,0x1
   14002a317:	call   0x140007c20
   14002a31c:	mov    rdi,rax
   14002a31f:	test   rax,rax
   14002a322:	jne    0x14002a32d
   14002a324:	xor    ecx,ecx
   14002a326:	call   0x140007bd0
   14002a32b:	jmp    0x14002a353
   14002a32d:	mov    ecx,DWORD PTR [rip+0x1c00d]        # 0x140046340
   14002a333:	mov    rdx,rax
   14002a336:	call   0x14002a84c
   14002a33b:	mov    rcx,rdi
   14002a33e:	test   eax,eax
   14002a340:	je     0x14002a326
   14002a342:	call   0x140029ff8
   14002a347:	xor    ecx,ecx
   14002a349:	call   0x140007bd0
   14002a34e:	test   rdi,rdi
   14002a351:	jne    0x14002a35d
   14002a353:	mov    ecx,ebx
   14002a355:	call   QWORD PTR [rip+0x7e2d]        # 0x140032188
   14002a35b:	jmp    0x14002a368
   14002a35d:	mov    ecx,ebx
   14002a35f:	call   QWORD PTR [rip+0x7e23]        # 0x140032188
   14002a365:	mov    rsi,rdi
   14002a368:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a36d:	mov    rax,rsi
   14002a370:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a375:	add    rsp,0x20
   14002a379:	pop    rdi
   14002a37a:	ret    
   14002a37b:	int3   
   14002a37c:	sub    rsp,0x28
   14002a380:	lea    rcx,[rip+0xfffffffffffffd41]        # 0x14002a0c8
   14002a387:	call   0x14002a744
   14002a38c:	mov    DWORD PTR [rip+0x1bfae],eax        # 0x140046340
   14002a392:	cmp    eax,0xffffffff
   14002a395:	jne    0x14002a39b
   14002a397:	xor    al,al
   14002a399:	jmp    0x14002a3b0
   14002a39b:	call   0x14002a2dc
   14002a3a0:	test   rax,rax
   14002a3a3:	jne    0x14002a3ae
   14002a3a5:	xor    ecx,ecx
   14002a3a7:	call   0x14002a3b8
   14002a3ac:	jmp    0x14002a397
   14002a3ae:	mov    al,0x1
   14002a3b0:	add    rsp,0x28
   14002a3b4:	ret    
   14002a3b5:	int3   
   14002a3b6:	int3   
   14002a3b7:	int3   
   14002a3b8:	sub    rsp,0x28
   14002a3bc:	mov    ecx,DWORD PTR [rip+0x1bf7e]        # 0x140046340
   14002a3c2:	cmp    ecx,0xffffffff
   14002a3c5:	je     0x14002a3d3
   14002a3c7:	call   0x14002a79c
   14002a3cc:	or     DWORD PTR [rip+0x1bf6d],0xffffffff        # 0x140046340
   14002a3d3:	mov    al,0x1
   14002a3d5:	add    rsp,0x28
   14002a3d9:	ret    
   14002a3da:	int3   
   14002a3db:	int3   
   14002a3dc:	xor    eax,eax
   14002a3de:	lea    r9,[rip+0xeb4b]        # 0x140038f30
   14002a3e5:	mov    rdx,r9
   14002a3e8:	lea    r8d,[rax+0x8]
   14002a3ec:	cmp    ecx,DWORD PTR [rdx]
   14002a3ee:	je     0x14002a41b
   14002a3f0:	inc    eax
   14002a3f2:	add    rdx,r8
   14002a3f5:	cmp    eax,0x2d
   14002a3f8:	jb     0x14002a3ec
   14002a3fa:	lea    eax,[rcx-0x13]
   14002a3fd:	cmp    eax,0x11
   14002a400:	ja     0x14002a408
   14002a402:	mov    eax,0xd
   14002a407:	ret    
   14002a408:	add    ecx,0xffffff44
   14002a40e:	mov    eax,0x16
   14002a413:	cmp    ecx,0xe
   14002a416:	cmovbe eax,r8d
   14002a41a:	ret    
   14002a41b:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   14002a420:	ret    
   14002a421:	int3   
   14002a422:	int3   
   14002a423:	int3   
   14002a424:	mov    QWORD PTR [rsp+0x8],rbx
   14002a429:	push   rdi
   14002a42a:	sub    rsp,0x20
   14002a42e:	mov    edi,ecx
   14002a430:	call   0x14002a2dc
   14002a435:	test   rax,rax
   14002a438:	jne    0x14002a443
   14002a43a:	lea    rax,[rip+0x1bf07]        # 0x140046348
   14002a441:	jmp    0x14002a447
   14002a443:	add    rax,0x24
   14002a447:	mov    DWORD PTR [rax],edi
   14002a449:	call   0x14002a2dc
   14002a44e:	lea    rbx,[rip+0x1beef]        # 0x140046344
   14002a455:	test   rax,rax
   14002a458:	je     0x14002a45e
   14002a45a:	lea    rbx,[rax+0x20]
   14002a45e:	mov    ecx,edi
   14002a460:	call   0x14002a3dc
   14002a465:	mov    DWORD PTR [rbx],eax
   14002a467:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a46c:	add    rsp,0x20
   14002a470:	pop    rdi
   14002a471:	ret    
   14002a472:	int3   
   14002a473:	int3   
   14002a474:	sub    rsp,0x28
   14002a478:	call   0x14002a2dc
   14002a47d:	test   rax,rax
   14002a480:	jne    0x14002a48b
   14002a482:	lea    rax,[rip+0x1bebf]        # 0x140046348
   14002a489:	jmp    0x14002a48f
   14002a48b:	add    rax,0x24
   14002a48f:	add    rsp,0x28
   14002a493:	ret    
   14002a494:	sub    rsp,0x28
   14002a498:	call   0x14002a2dc
   14002a49d:	test   rax,rax
   14002a4a0:	jne    0x14002a4ab
   14002a4a2:	lea    rax,[rip+0x1be9b]        # 0x140046344
   14002a4a9:	jmp    0x14002a4af
   14002a4ab:	add    rax,0x20
   14002a4af:	add    rsp,0x28
   14002a4b3:	ret    
   14002a4b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a4b9:	mov    QWORD PTR [rsp+0x10],rbp
   14002a4be:	mov    QWORD PTR [rsp+0x18],rsi
   14002a4c3:	push   rdi
   14002a4c4:	push   r12
   14002a4c6:	push   r13
   14002a4c8:	push   r14
   14002a4ca:	push   r15
   14002a4cc:	sub    rsp,0x20
   14002a4d0:	mov    r14d,ecx
   14002a4d3:	lea    r15,[rip+0xfffffffffffd5b26]        # 0x140000000
   14002a4da:	mov    r12,r9
   14002a4dd:	mov    rbp,r8
   14002a4e0:	mov    r13,rdx
   14002a4e3:	mov    rcx,QWORD PTR [r15+r14*8+0x48790]
   14002a4eb:	mov    r10,QWORD PTR [rip+0x1bcf6]        # 0x1400461e8
   14002a4f2:	or     rdi,0xffffffffffffffff
   14002a4f6:	mov    eax,r10d
   14002a4f9:	mov    rdx,r10
   14002a4fc:	xor    rdx,rcx
   14002a4ff:	and    eax,0x3f
   14002a502:	mov    cl,al
   14002a504:	ror    rdx,cl
   14002a507:	cmp    rdx,rdi
   14002a50a:	je     0x14002a635
   14002a510:	test   rdx,rdx
   14002a513:	je     0x14002a51d
   14002a515:	mov    rax,rdx
   14002a518:	jmp    0x14002a637
   14002a51d:	cmp    r8,r9
   14002a520:	je     0x14002a5c9
   14002a526:	mov    esi,DWORD PTR [rbp+0x0]
   14002a529:	mov    rbx,QWORD PTR [r15+rsi*8+0x486f0]
   14002a531:	test   rbx,rbx
   14002a534:	je     0x14002a53d
   14002a536:	cmp    rbx,rdi
   14002a539:	je     0x14002a5b5
   14002a53b:	jmp    0x14002a5b0
   14002a53d:	mov    r15,QWORD PTR [r15+rsi*8+0x390a0]
   14002a545:	xor    edx,edx
   14002a547:	mov    rcx,r15
   14002a54a:	mov    r8d,0x800
   14002a550:	call   QWORD PTR [rip+0x7c72]        # 0x1400321c8
   14002a556:	mov    rbx,rax
   14002a559:	test   rax,rax
   14002a55c:	jne    0x14002a57e
   14002a55e:	call   QWORD PTR [rip+0x7ca4]        # 0x140032208
   14002a564:	cmp    eax,0x57
   14002a567:	jne    0x14002a57c
   14002a569:	xor    r8d,r8d
   14002a56c:	xor    edx,edx
   14002a56e:	mov    rcx,r15
   14002a571:	call   QWORD PTR [rip+0x7c51]        # 0x1400321c8
   14002a577:	mov    rbx,rax
   14002a57a:	jmp    0x14002a57e
   14002a57c:	xor    ebx,ebx
   14002a57e:	lea    r15,[rip+0xfffffffffffd5a7b]        # 0x140000000
   14002a585:	test   rbx,rbx
   14002a588:	jne    0x14002a597
   14002a58a:	mov    rax,rdi
   14002a58d:	xchg   QWORD PTR [r15+rsi*8+0x486f0],rax
   14002a595:	jmp    0x14002a5b5
   14002a597:	mov    rax,rbx
   14002a59a:	xchg   QWORD PTR [r15+rsi*8+0x486f0],rax
   14002a5a2:	test   rax,rax
   14002a5a5:	je     0x14002a5b0
   14002a5a7:	mov    rcx,rbx
   14002a5aa:	call   QWORD PTR [rip+0x7c28]        # 0x1400321d8
   14002a5b0:	test   rbx,rbx
   14002a5b3:	jne    0x14002a60a
   14002a5b5:	add    rbp,0x4
   14002a5b9:	cmp    rbp,r12
   14002a5bc:	jne    0x14002a526
   14002a5c2:	mov    r10,QWORD PTR [rip+0x1bc1f]        # 0x1400461e8
   14002a5c9:	xor    ebx,ebx
   14002a5cb:	test   rbx,rbx
   14002a5ce:	je     0x14002a61a
   14002a5d0:	mov    rdx,r13
   14002a5d3:	mov    rcx,rbx
   14002a5d6:	call   QWORD PTR [rip+0x7bf4]        # 0x1400321d0
   14002a5dc:	test   rax,rax
   14002a5df:	je     0x14002a613
   14002a5e1:	mov    r8,QWORD PTR [rip+0x1bc00]        # 0x1400461e8
   14002a5e8:	mov    edx,0x40
   14002a5ed:	mov    ecx,r8d
   14002a5f0:	and    ecx,0x3f
   14002a5f3:	sub    edx,ecx
   14002a5f5:	mov    cl,dl
   14002a5f7:	mov    rdx,rax
   14002a5fa:	ror    rdx,cl
   14002a5fd:	xor    rdx,r8
   14002a600:	xchg   QWORD PTR [r15+r14*8+0x48790],rdx
   14002a608:	jmp    0x14002a637
   14002a60a:	mov    r10,QWORD PTR [rip+0x1bbd7]        # 0x1400461e8
   14002a611:	jmp    0x14002a5cb
   14002a613:	mov    r10,QWORD PTR [rip+0x1bbce]        # 0x1400461e8
   14002a61a:	mov    eax,r10d
   14002a61d:	mov    ecx,0x40
   14002a622:	and    eax,0x3f
   14002a625:	sub    ecx,eax
   14002a627:	ror    rdi,cl
   14002a62a:	xor    rdi,r10
   14002a62d:	xchg   QWORD PTR [r15+r14*8+0x48790],rdi
   14002a635:	xor    eax,eax
   14002a637:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a63c:	mov    rbp,QWORD PTR [rsp+0x58]
   14002a641:	mov    rsi,QWORD PTR [rsp+0x60]
   14002a646:	add    rsp,0x20
   14002a64a:	pop    r15
   14002a64c:	pop    r14
   14002a64e:	pop    r13
   14002a650:	pop    r12
   14002a652:	pop    rdi
   14002a653:	ret    
   14002a654:	mov    rax,rsp
   14002a657:	mov    QWORD PTR [rax+0x8],rbx
   14002a65b:	mov    QWORD PTR [rax+0x10],rbp
   14002a65f:	mov    QWORD PTR [rax+0x18],rsi
   14002a663:	mov    QWORD PTR [rax+0x20],rdi
   14002a667:	push   r14
   14002a669:	sub    rsp,0x50
   14002a66d:	mov    edi,r9d
   14002a670:	mov    rsi,r8
   14002a673:	mov    ebp,edx
   14002a675:	lea    r9,[rip+0xef5c]        # 0x1400395d8
   14002a67c:	mov    r14,rcx
   14002a67f:	lea    r8,[rip+0xef4a]        # 0x1400395d0
   14002a686:	lea    rdx,[rip+0xef4b]        # 0x1400395d8
   14002a68d:	mov    ecx,0x1
   14002a692:	call   0x14002a4b4
   14002a697:	mov    rbx,rax
   14002a69a:	test   rax,rax
   14002a69d:	je     0x14002a6f6
   14002a69f:	mov    rcx,rax
   14002a6a2:	call   QWORD PTR [rip+0x7f38]        # 0x1400325e0
   14002a6a8:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002a6b0:	mov    r9d,edi
   14002a6b3:	mov    rax,QWORD PTR [rsp+0x80]
   14002a6bb:	mov    r8,rsi
   14002a6be:	mov    QWORD PTR [rsp+0x40],rcx
   14002a6c3:	mov    edx,ebp
   14002a6c5:	mov    rcx,QWORD PTR [rsp+0x98]
   14002a6cd:	mov    QWORD PTR [rsp+0x38],rcx
   14002a6d2:	mov    rcx,QWORD PTR [rsp+0x90]
   14002a6da:	mov    QWORD PTR [rsp+0x30],rcx
   14002a6df:	mov    ecx,DWORD PTR [rsp+0x88]
   14002a6e6:	mov    DWORD PTR [rsp+0x28],ecx
   14002a6ea:	mov    rcx,r14
   14002a6ed:	mov    QWORD PTR [rsp+0x20],rax
   14002a6f2:	call   rbx
   14002a6f4:	jmp    0x14002a728
   14002a6f6:	xor    edx,edx
   14002a6f8:	mov    rcx,r14
   14002a6fb:	call   0x14002aa1c
   14002a700:	mov    ecx,eax
   14002a702:	mov    r9d,edi
   14002a705:	mov    eax,DWORD PTR [rsp+0x88]
   14002a70c:	mov    r8,rsi
   14002a70f:	mov    DWORD PTR [rsp+0x28],eax
   14002a713:	mov    edx,ebp
   14002a715:	mov    rax,QWORD PTR [rsp+0x80]
   14002a71d:	mov    QWORD PTR [rsp+0x20],rax
   14002a722:	call   QWORD PTR [rip+0x7968]        # 0x140032090
   14002a728:	mov    rbx,QWORD PTR [rsp+0x60]
   14002a72d:	mov    rbp,QWORD PTR [rsp+0x68]
   14002a732:	mov    rsi,QWORD PTR [rsp+0x70]
   14002a737:	mov    rdi,QWORD PTR [rsp+0x78]
   14002a73c:	add    rsp,0x50
   14002a740:	pop    r14
   14002a742:	ret    
   14002a743:	int3   
   14002a744:	mov    QWORD PTR [rsp+0x8],rbx
   14002a749:	push   rdi
   14002a74a:	sub    rsp,0x20
   14002a74e:	mov    rdi,rcx
   14002a751:	lea    r9,[rip+0xee98]        # 0x1400395f0
   14002a758:	mov    ecx,0x3
   14002a75d:	lea    r8,[rip+0xee84]        # 0x1400395e8
   14002a764:	lea    rdx,[rip+0xee85]        # 0x1400395f0
   14002a76b:	call   0x14002a4b4
   14002a770:	mov    rbx,rax
   14002a773:	test   rax,rax
   14002a776:	je     0x14002a788
   14002a778:	mov    rcx,rax
   14002a77b:	call   QWORD PTR [rip+0x7e5f]        # 0x1400325e0
   14002a781:	mov    rcx,rdi
   14002a784:	call   rbx
   14002a786:	jmp    0x14002a78e
   14002a788:	call   QWORD PTR [rip+0x7a6a]        # 0x1400321f8
   14002a78e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a793:	add    rsp,0x20
   14002a797:	pop    rdi
   14002a798:	ret    
   14002a799:	int3   
   14002a79a:	int3   
   14002a79b:	int3   
   14002a79c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a7a1:	push   rdi
   14002a7a2:	sub    rsp,0x20
   14002a7a6:	mov    ebx,ecx
   14002a7a8:	lea    r9,[rip+0xee59]        # 0x140039608
   14002a7af:	mov    ecx,0x4
   14002a7b4:	lea    r8,[rip+0xee45]        # 0x140039600
   14002a7bb:	lea    rdx,[rip+0xee46]        # 0x140039608
   14002a7c2:	call   0x14002a4b4
   14002a7c7:	mov    rdi,rax
   14002a7ca:	test   rax,rax
   14002a7cd:	je     0x14002a7de
   14002a7cf:	mov    rcx,rax
   14002a7d2:	call   QWORD PTR [rip+0x7e08]        # 0x1400325e0
   14002a7d8:	mov    ecx,ebx
   14002a7da:	call   rdi
   14002a7dc:	jmp    0x14002a7e6
   14002a7de:	mov    ecx,ebx
   14002a7e0:	call   QWORD PTR [rip+0x79fa]        # 0x1400321e0
   14002a7e6:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a7eb:	add    rsp,0x20
   14002a7ef:	pop    rdi
   14002a7f0:	ret    
   14002a7f1:	int3   
   14002a7f2:	int3   
   14002a7f3:	int3   
   14002a7f4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a7f9:	push   rdi
   14002a7fa:	sub    rsp,0x20
   14002a7fe:	mov    ebx,ecx
   14002a800:	lea    r9,[rip+0xee11]        # 0x140039618
   14002a807:	mov    ecx,0x5
   14002a80c:	lea    r8,[rip+0xedfd]        # 0x140039610
   14002a813:	lea    rdx,[rip+0xedfe]        # 0x140039618
   14002a81a:	call   0x14002a4b4
   14002a81f:	mov    rdi,rax
   14002a822:	test   rax,rax
   14002a825:	je     0x14002a836
   14002a827:	mov    rcx,rax
   14002a82a:	call   QWORD PTR [rip+0x7db0]        # 0x1400325e0
   14002a830:	mov    ecx,ebx
   14002a832:	call   rdi
   14002a834:	jmp    0x14002a83e
   14002a836:	mov    ecx,ebx
   14002a838:	call   QWORD PTR [rip+0x79b2]        # 0x1400321f0
   14002a83e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a843:	add    rsp,0x20
   14002a847:	pop    rdi
   14002a848:	ret    
   14002a849:	int3   
   14002a84a:	int3   
   14002a84b:	int3   
   14002a84c:	mov    QWORD PTR [rsp+0x8],rbx
   14002a851:	mov    QWORD PTR [rsp+0x10],rsi
   14002a856:	push   rdi
   14002a857:	sub    rsp,0x20
   14002a85b:	mov    rbx,rdx
   14002a85e:	lea    r9,[rip+0xedcb]        # 0x140039630
   14002a865:	mov    edi,ecx
   14002a867:	lea    rdx,[rip+0xedc2]        # 0x140039630
   14002a86e:	mov    ecx,0x6
   14002a873:	lea    r8,[rip+0xedae]        # 0x140039628
   14002a87a:	call   0x14002a4b4
   14002a87f:	mov    rsi,rax
   14002a882:	test   rax,rax
   14002a885:	je     0x14002a899
   14002a887:	mov    rcx,rax
   14002a88a:	call   QWORD PTR [rip+0x7d50]        # 0x1400325e0
   14002a890:	mov    rdx,rbx
   14002a893:	mov    ecx,edi
   14002a895:	call   rsi
   14002a897:	jmp    0x14002a8a4
   14002a899:	mov    rdx,rbx
   14002a89c:	mov    ecx,edi
   14002a89e:	call   QWORD PTR [rip+0x7944]        # 0x1400321e8
   14002a8a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a8a9:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a8ae:	add    rsp,0x20
   14002a8b2:	pop    rdi
   14002a8b3:	ret    
   14002a8b4:	mov    QWORD PTR [rsp+0x8],rbx
   14002a8b9:	mov    QWORD PTR [rsp+0x10],rbp
   14002a8be:	mov    QWORD PTR [rsp+0x18],rsi
   14002a8c3:	push   rdi
   14002a8c4:	sub    rsp,0x20
   14002a8c8:	mov    ebp,r8d
   14002a8cb:	lea    r9,[rip+0xed96]        # 0x140039668
   14002a8d2:	mov    ebx,edx
   14002a8d4:	lea    r8,[rip+0xed85]        # 0x140039660
   14002a8db:	mov    rdi,rcx
   14002a8de:	lea    rdx,[rip+0x99f3]        # 0x1400342d8
   14002a8e5:	mov    ecx,0x14
   14002a8ea:	call   0x14002a4b4
   14002a8ef:	mov    rsi,rax
   14002a8f2:	test   rax,rax
   14002a8f5:	je     0x14002a90c
   14002a8f7:	mov    rcx,rax
   14002a8fa:	call   QWORD PTR [rip+0x7ce0]        # 0x1400325e0
   14002a900:	mov    r8d,ebp
   14002a903:	mov    edx,ebx
   14002a905:	mov    rcx,rdi
   14002a908:	call   rsi
   14002a90a:	jmp    0x14002a917
   14002a90c:	mov    edx,ebx
   14002a90e:	mov    rcx,rdi
   14002a911:	call   QWORD PTR [rip+0x78e9]        # 0x140032200
   14002a917:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a91c:	mov    rbp,QWORD PTR [rsp+0x38]
   14002a921:	mov    rsi,QWORD PTR [rsp+0x40]
   14002a926:	add    rsp,0x20
   14002a92a:	pop    rdi
   14002a92b:	ret    
   14002a92c:	mov    rax,rsp
   14002a92f:	mov    QWORD PTR [rax+0x8],rbx
   14002a933:	mov    QWORD PTR [rax+0x10],rbp
   14002a937:	mov    QWORD PTR [rax+0x18],rsi
   14002a93b:	mov    QWORD PTR [rax+0x20],rdi
   14002a93f:	push   r14
   14002a941:	sub    rsp,0x50
   14002a945:	mov    edi,r9d
   14002a948:	mov    rsi,r8
   14002a94b:	mov    ebp,edx
   14002a94d:	lea    r9,[rip+0xed1c]        # 0x140039670
   14002a954:	mov    r14,rcx
   14002a957:	lea    r8,[rip+0xed0a]        # 0x140039668
   14002a95e:	lea    rdx,[rip+0xed0b]        # 0x140039670
   14002a965:	mov    ecx,0x16
   14002a96a:	call   0x14002a4b4
   14002a96f:	mov    rbx,rax
   14002a972:	test   rax,rax
   14002a975:	je     0x14002a9ce
   14002a977:	mov    rcx,rax
   14002a97a:	call   QWORD PTR [rip+0x7c60]        # 0x1400325e0
   14002a980:	mov    rcx,QWORD PTR [rsp+0xa0]
   14002a988:	mov    r9d,edi
   14002a98b:	mov    rax,QWORD PTR [rsp+0x80]
   14002a993:	mov    r8,rsi
   14002a996:	mov    QWORD PTR [rsp+0x40],rcx
   14002a99b:	mov    edx,ebp
   14002a99d:	mov    rcx,QWORD PTR [rsp+0x98]
   14002a9a5:	mov    QWORD PTR [rsp+0x38],rcx
   14002a9aa:	mov    rcx,QWORD PTR [rsp+0x90]
   14002a9b2:	mov    QWORD PTR [rsp+0x30],rcx
   14002a9b7:	mov    ecx,DWORD PTR [rsp+0x88]
   14002a9be:	mov    DWORD PTR [rsp+0x28],ecx
   14002a9c2:	mov    rcx,r14
   14002a9c5:	mov    QWORD PTR [rsp+0x20],rax
   14002a9ca:	call   rbx
   14002a9cc:	jmp    0x14002aa00
   14002a9ce:	xor    edx,edx
   14002a9d0:	mov    rcx,r14
   14002a9d3:	call   0x14002aa1c
   14002a9d8:	mov    ecx,eax
   14002a9da:	mov    r9d,edi
   14002a9dd:	mov    eax,DWORD PTR [rsp+0x88]
   14002a9e4:	mov    r8,rsi
   14002a9e7:	mov    DWORD PTR [rsp+0x28],eax
   14002a9eb:	mov    edx,ebp
   14002a9ed:	mov    rax,QWORD PTR [rsp+0x80]
   14002a9f5:	mov    QWORD PTR [rsp+0x20],rax
   14002a9fa:	call   QWORD PTR [rip+0x7688]        # 0x140032088
   14002aa00:	mov    rbx,QWORD PTR [rsp+0x60]
   14002aa05:	mov    rbp,QWORD PTR [rsp+0x68]
   14002aa0a:	mov    rsi,QWORD PTR [rsp+0x70]
   14002aa0f:	mov    rdi,QWORD PTR [rsp+0x78]
   14002aa14:	add    rsp,0x50
   14002aa18:	pop    r14
   14002aa1a:	ret    
   14002aa1b:	int3   
   14002aa1c:	mov    QWORD PTR [rsp+0x8],rbx
   14002aa21:	mov    QWORD PTR [rsp+0x10],rsi
   14002aa26:	push   rdi
   14002aa27:	sub    rsp,0x20
   14002aa2b:	mov    esi,edx
   14002aa2d:	lea    r9,[rip+0xec54]        # 0x140039688
   14002aa34:	mov    rbx,rcx
   14002aa37:	lea    rdx,[rip+0xec4a]        # 0x140039688
   14002aa3e:	mov    ecx,0x18
   14002aa43:	lea    r8,[rip+0xec36]        # 0x140039680
   14002aa4a:	call   0x14002a4b4
   14002aa4f:	mov    rdi,rax
   14002aa52:	test   rax,rax
   14002aa55:	je     0x14002aa69
   14002aa57:	mov    rcx,rax
   14002aa5a:	call   QWORD PTR [rip+0x7b80]        # 0x1400325e0
   14002aa60:	mov    edx,esi
   14002aa62:	mov    rcx,rbx
   14002aa65:	call   rdi
   14002aa67:	jmp    0x14002aa71
   14002aa69:	mov    rcx,rbx
   14002aa6c:	call   0x14002e548
   14002aa71:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aa76:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aa7b:	add    rsp,0x20
   14002aa7f:	pop    rdi
   14002aa80:	ret    
   14002aa81:	int3   
   14002aa82:	int3   
   14002aa83:	int3   
   14002aa84:	mov    QWORD PTR [rsp+0x8],rdi
   14002aa89:	mov    rdx,QWORD PTR [rip+0x1b758]        # 0x1400461e8
   14002aa90:	lea    rdi,[rip+0x1dcf9]        # 0x140048790
   14002aa97:	mov    eax,edx
   14002aa99:	mov    ecx,0x40
   14002aa9e:	and    eax,0x3f
   14002aaa1:	sub    ecx,eax
   14002aaa3:	xor    eax,eax
   14002aaa5:	ror    rax,cl
   14002aaa8:	mov    ecx,0x20
   14002aaad:	xor    rax,rdx
   14002aab0:	rep stos QWORD PTR es:[rdi],rax
   14002aab3:	mov    rdi,QWORD PTR [rsp+0x8]
   14002aab8:	mov    al,0x1
   14002aaba:	ret    
   14002aabb:	int3   
   14002aabc:	mov    QWORD PTR [rsp+0x10],rbx
   14002aac1:	push   rdi
   14002aac2:	sub    rsp,0x20
   14002aac6:	mov    eax,DWORD PTR [rip+0x1ddc4]        # 0x140048890
   14002aacc:	xor    ebx,ebx
   14002aace:	test   eax,eax
   14002aad0:	je     0x14002aada
   14002aad2:	cmp    eax,0x1
   14002aad5:	sete   al
   14002aad8:	jmp    0x14002ab36
   14002aada:	lea    r9,[rip+0xeb67]        # 0x140039648
   14002aae1:	mov    ecx,0x8
   14002aae6:	lea    r8,[rip+0xeb53]        # 0x140039640
   14002aaed:	lea    rdx,[rip+0xeb54]        # 0x140039648
   14002aaf4:	call   0x14002a4b4
   14002aaf9:	mov    rdi,rax
   14002aafc:	test   rax,rax
   14002aaff:	je     0x14002ab29
   14002ab01:	mov    rcx,rax
   14002ab04:	mov    DWORD PTR [rsp+0x30],ebx
   14002ab08:	call   QWORD PTR [rip+0x7ad2]        # 0x1400325e0
   14002ab0e:	xor    edx,edx
   14002ab10:	lea    rcx,[rsp+0x30]
   14002ab15:	call   rdi
   14002ab17:	cmp    eax,0x7a
   14002ab1a:	jne    0x14002ab29
   14002ab1c:	lea    ecx,[rax-0x79]
   14002ab1f:	mov    al,0x1
   14002ab21:	xchg   DWORD PTR [rip+0x1dd69],ecx        # 0x140048890
   14002ab27:	jmp    0x14002ab36
   14002ab29:	mov    eax,0x2
   14002ab2e:	xchg   DWORD PTR [rip+0x1dd5c],eax        # 0x140048890
   14002ab34:	xor    al,al
   14002ab36:	mov    rbx,QWORD PTR [rsp+0x38]
   14002ab3b:	add    rsp,0x20
   14002ab3f:	pop    rdi
   14002ab40:	ret    
   14002ab41:	int3   
   14002ab42:	int3   
   14002ab43:	int3   
   14002ab44:	rex push rbx
   14002ab46:	sub    rsp,0x20
   14002ab4a:	test   cl,cl
   14002ab4c:	jne    0x14002ab7d
   14002ab4e:	lea    rbx,[rip+0x1db9b]        # 0x1400486f0
   14002ab55:	mov    rcx,QWORD PTR [rbx]
   14002ab58:	test   rcx,rcx
   14002ab5b:	je     0x14002ab6d
   14002ab5d:	cmp    rcx,0xffffffffffffffff
   14002ab61:	je     0x14002ab69
   14002ab63:	call   QWORD PTR [rip+0x766f]        # 0x1400321d8
   14002ab69:	and    QWORD PTR [rbx],0x0
   14002ab6d:	add    rbx,0x8
   14002ab71:	lea    rax,[rip+0x1dc18]        # 0x140048790
   14002ab78:	cmp    rbx,rax
   14002ab7b:	jne    0x14002ab55
   14002ab7d:	mov    al,0x1
   14002ab7f:	add    rsp,0x20
   14002ab83:	pop    rbx
   14002ab84:	ret    
   14002ab85:	int3   
   14002ab86:	int3   
   14002ab87:	int3   
   14002ab88:	mov    QWORD PTR [rsp+0x8],rbx
   14002ab8d:	push   rdi
   14002ab8e:	sub    rsp,0x30
   14002ab92:	and    DWORD PTR [rsp+0x20],0x0
   14002ab97:	mov    ecx,0x8
   14002ab9c:	call   0x14002af28
   14002aba1:	nop
   14002aba2:	mov    ebx,0x3
   14002aba7:	mov    DWORD PTR [rsp+0x24],ebx
   14002abab:	cmp    ebx,DWORD PTR [rip+0x1d95f]        # 0x140048510
   14002abb1:	je     0x14002ac21
   14002abb3:	movsxd rdi,ebx
   14002abb6:	mov    rax,QWORD PTR [rip+0x1d95b]        # 0x140048518
   14002abbd:	mov    rax,QWORD PTR [rax+rdi*8]
   14002abc1:	test   rax,rax
   14002abc4:	jne    0x14002abc8
   14002abc6:	jmp    0x14002ac1d
   14002abc8:	mov    ecx,DWORD PTR [rax+0x14]
   14002abcb:	shr    ecx,0xd
   14002abce:	test   cl,0x1
   14002abd1:	je     0x14002abec
   14002abd3:	mov    rcx,QWORD PTR [rip+0x1d93e]        # 0x140048518
   14002abda:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14002abde:	call   0x14002e600
   14002abe3:	cmp    eax,0xffffffff
   14002abe6:	je     0x14002abec
   14002abe8:	inc    DWORD PTR [rsp+0x20]
   14002abec:	mov    rax,QWORD PTR [rip+0x1d925]        # 0x140048518
   14002abf3:	mov    rcx,QWORD PTR [rax+rdi*8]
   14002abf7:	add    rcx,0x30
   14002abfb:	call   QWORD PTR [rip+0x74e7]        # 0x1400320e8
   14002ac01:	mov    rcx,QWORD PTR [rip+0x1d910]        # 0x140048518
   14002ac08:	mov    rcx,QWORD PTR [rcx+rdi*8]
   14002ac0c:	call   0x140007bd0
   14002ac11:	mov    rax,QWORD PTR [rip+0x1d900]        # 0x140048518
   14002ac18:	and    QWORD PTR [rax+rdi*8],0x0
   14002ac1d:	inc    ebx
   14002ac1f:	jmp    0x14002aba7
   14002ac21:	mov    ecx,0x8
   14002ac26:	call   0x14002af7c
   14002ac2b:	mov    eax,DWORD PTR [rsp+0x20]
   14002ac2f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ac34:	add    rsp,0x30
   14002ac38:	pop    rdi
   14002ac39:	ret    
   14002ac3a:	int3   
   14002ac3b:	int3   
   14002ac3c:	rex push rbx
   14002ac3e:	sub    rsp,0x20
   14002ac42:	mov    rbx,rcx
   14002ac45:	mov    eax,DWORD PTR [rcx+0x14]
   14002ac48:	shr    eax,0xd
   14002ac4b:	test   al,0x1
   14002ac4d:	je     0x14002ac76
   14002ac4f:	mov    eax,DWORD PTR [rcx+0x14]
   14002ac52:	shr    eax,0x6
   14002ac55:	test   al,0x1
   14002ac57:	je     0x14002ac76
   14002ac59:	mov    rcx,QWORD PTR [rcx+0x8]
   14002ac5d:	call   0x140007bd0
   14002ac62:	lock and DWORD PTR [rbx+0x14],0xfffffebf
   14002ac6a:	xor    eax,eax
   14002ac6c:	mov    QWORD PTR [rbx+0x8],rax
   14002ac70:	mov    QWORD PTR [rbx],rax
   14002ac73:	mov    DWORD PTR [rbx+0x10],eax
   14002ac76:	add    rsp,0x20
   14002ac7a:	pop    rbx
   14002ac7b:	ret    
   14002ac7c:	mov    rax,rsp
   14002ac7f:	mov    QWORD PTR [rax+0x8],rbx
   14002ac83:	mov    QWORD PTR [rax+0x10],rbp
   14002ac87:	mov    QWORD PTR [rax+0x18],rsi
   14002ac8b:	mov    QWORD PTR [rax+0x20],rdi
   14002ac8f:	push   r14
   14002ac91:	sub    rsp,0x90
   14002ac98:	lea    rcx,[rax-0x78]
   14002ac9c:	call   QWORD PTR [rip+0x7496]        # 0x140032138
   14002aca2:	xor    r14d,r14d
   14002aca5:	cmp    WORD PTR [rsp+0x62],r14w
   14002acab:	je     0x14002ad49
   14002acb1:	mov    rax,QWORD PTR [rsp+0x68]
   14002acb6:	test   rax,rax
   14002acb9:	je     0x14002ad49
   14002acbf:	movsxd rbx,DWORD PTR [rax]
   14002acc2:	lea    rsi,[rax+0x4]
   14002acc6:	mov    edi,0x2000
   14002accb:	add    rbx,rsi
   14002acce:	cmp    DWORD PTR [rax],edi
   14002acd0:	cmovl  edi,DWORD PTR [rax]
   14002acd3:	mov    ecx,edi
   14002acd5:	call   0x14002d874
   14002acda:	cmp    edi,DWORD PTR [rip+0x1dfc0]        # 0x140048ca0
   14002ace0:	cmovg  edi,DWORD PTR [rip+0x1dfb9]        # 0x140048ca0
   14002ace7:	test   edi,edi
   14002ace9:	je     0x14002ad49
   14002aceb:	mov    ebp,r14d
   14002acee:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14002acf2:	je     0x14002ad39
   14002acf4:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   14002acf8:	je     0x14002ad39
   14002acfa:	test   BYTE PTR [rsi],0x1
   14002acfd:	je     0x14002ad39
   14002acff:	test   BYTE PTR [rsi],0x8
   14002ad02:	jne    0x14002ad11
   14002ad04:	mov    rcx,QWORD PTR [rbx]
   14002ad07:	call   QWORD PTR [rip+0x7373]        # 0x140032080
   14002ad0d:	test   eax,eax
   14002ad0f:	je     0x14002ad39
   14002ad11:	mov    rcx,rbp
   14002ad14:	lea    rdx,[rip+0x1db85]        # 0x1400488a0
   14002ad1b:	and    ecx,0x3f
   14002ad1e:	mov    rax,rbp
   14002ad21:	sar    rax,0x6
   14002ad25:	shl    rcx,0x6
   14002ad29:	add    rcx,QWORD PTR [rdx+rax*8]
   14002ad2d:	mov    rax,QWORD PTR [rbx]
   14002ad30:	mov    QWORD PTR [rcx+0x28],rax
   14002ad34:	mov    al,BYTE PTR [rsi]
   14002ad36:	mov    BYTE PTR [rcx+0x38],al
   14002ad39:	inc    rbp
   14002ad3c:	inc    rsi
   14002ad3f:	add    rbx,0x8
   14002ad43:	sub    rdi,0x1
   14002ad47:	jne    0x14002acee
   14002ad49:	lea    r11,[rsp+0x90]
   14002ad51:	mov    rbx,QWORD PTR [r11+0x10]
   14002ad55:	mov    rbp,QWORD PTR [r11+0x18]
   14002ad59:	mov    rsi,QWORD PTR [r11+0x20]
   14002ad5d:	mov    rdi,QWORD PTR [r11+0x28]
   14002ad61:	mov    rsp,r11
   14002ad64:	pop    r14
   14002ad66:	ret    
   14002ad67:	int3   
   14002ad68:	mov    QWORD PTR [rsp+0x8],rbx
   14002ad6d:	mov    QWORD PTR [rsp+0x10],rsi
   14002ad72:	mov    QWORD PTR [rsp+0x18],rdi
   14002ad77:	push   r14
   14002ad79:	sub    rsp,0x20
   14002ad7d:	xor    edi,edi
   14002ad7f:	xor    r14d,r14d
   14002ad82:	movsxd rbx,edi
   14002ad85:	lea    rcx,[rip+0x1db14]        # 0x1400488a0
   14002ad8c:	mov    rax,rbx
   14002ad8f:	and    ebx,0x3f
   14002ad92:	sar    rax,0x6
   14002ad96:	shl    rbx,0x6
   14002ad9a:	add    rbx,QWORD PTR [rcx+rax*8]
   14002ad9e:	mov    rax,QWORD PTR [rbx+0x28]
   14002ada2:	add    rax,0x2
   14002ada6:	cmp    rax,0x1
   14002adaa:	jbe    0x14002adb5
   14002adac:	or     BYTE PTR [rbx+0x38],0x80
   14002adb0:	jmp    0x14002ae3e
   14002adb5:	mov    BYTE PTR [rbx+0x38],0x81
   14002adb9:	mov    ecx,edi
   14002adbb:	test   edi,edi
   14002adbd:	je     0x14002add5
   14002adbf:	sub    ecx,0x1
   14002adc2:	je     0x14002adce
   14002adc4:	cmp    ecx,0x1
   14002adc7:	mov    ecx,0xfffffff4
   14002adcc:	jmp    0x14002adda
   14002adce:	mov    ecx,0xfffffff5
   14002add3:	jmp    0x14002adda
   14002add5:	mov    ecx,0xfffffff6
   14002adda:	call   QWORD PTR [rip+0x72d0]        # 0x1400320b0
   14002ade0:	mov    rsi,rax
   14002ade3:	lea    rcx,[rax+0x1]
   14002ade7:	cmp    rcx,0x1
   14002adeb:	jbe    0x14002adf8
   14002aded:	mov    rcx,rax
   14002adf0:	call   QWORD PTR [rip+0x728a]        # 0x140032080
   14002adf6:	jmp    0x14002adfa
   14002adf8:	xor    eax,eax
   14002adfa:	test   eax,eax
   14002adfc:	je     0x14002ae1b
   14002adfe:	movzx  ecx,al
   14002ae01:	mov    QWORD PTR [rbx+0x28],rsi
   14002ae05:	cmp    ecx,0x2
   14002ae08:	jne    0x14002ae10
   14002ae0a:	or     BYTE PTR [rbx+0x38],0x40
   14002ae0e:	jmp    0x14002ae3e
   14002ae10:	cmp    ecx,0x3
   14002ae13:	jne    0x14002ae3e
   14002ae15:	or     BYTE PTR [rbx+0x38],0x8
   14002ae19:	jmp    0x14002ae3e
   14002ae1b:	or     BYTE PTR [rbx+0x38],0x40
   14002ae1f:	mov    QWORD PTR [rbx+0x28],0xfffffffffffffffe
   14002ae27:	mov    rax,QWORD PTR [rip+0x1d6ea]        # 0x140048518
   14002ae2e:	test   rax,rax
   14002ae31:	je     0x14002ae3e
   14002ae33:	mov    rax,QWORD PTR [r14+rax*1]
   14002ae37:	mov    DWORD PTR [rax+0x18],0xfffffffe
   14002ae3e:	inc    edi
   14002ae40:	add    r14,0x8
   14002ae44:	cmp    edi,0x3
   14002ae47:	jne    0x14002ad82
   14002ae4d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae52:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ae57:	mov    rdi,QWORD PTR [rsp+0x40]
   14002ae5c:	add    rsp,0x20
   14002ae60:	pop    r14
   14002ae62:	ret    
   14002ae63:	int3   
   14002ae64:	rex push rbx
   14002ae66:	sub    rsp,0x20
   14002ae6a:	mov    ecx,0x7
   14002ae6f:	call   0x14002af28
   14002ae74:	xor    ebx,ebx
   14002ae76:	xor    ecx,ecx
   14002ae78:	call   0x14002d874
   14002ae7d:	test   eax,eax
   14002ae7f:	jne    0x14002ae8d
   14002ae81:	call   0x14002ac7c
   14002ae86:	call   0x14002ad68
   14002ae8b:	mov    bl,0x1
   14002ae8d:	mov    ecx,0x7
   14002ae92:	call   0x14002af7c
   14002ae97:	mov    al,bl
   14002ae99:	add    rsp,0x20
   14002ae9d:	pop    rbx
   14002ae9e:	ret    
   14002ae9f:	int3   
   14002aea0:	mov    QWORD PTR [rsp+0x8],rbx
   14002aea5:	push   rdi
   14002aea6:	sub    rsp,0x20
   14002aeaa:	xor    ebx,ebx
   14002aeac:	lea    rdi,[rip+0x1d9ed]        # 0x1400488a0
   14002aeb3:	mov    rcx,QWORD PTR [rbx+rdi*1]
   14002aeb7:	test   rcx,rcx
   14002aeba:	je     0x14002aec6
   14002aebc:	call   0x14002d824
   14002aec1:	and    QWORD PTR [rbx+rdi*1],0x0
   14002aec6:	add    rbx,0x8
   14002aeca:	cmp    rbx,0x400
   14002aed1:	jb     0x14002aeac
   14002aed3:	mov    al,0x1
   14002aed5:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aeda:	add    rsp,0x20
   14002aede:	pop    rdi
   14002aedf:	ret    
   14002aee0:	rex push rbx
   14002aee2:	sub    rsp,0x20
   14002aee6:	xor    ebx,ebx
   14002aee8:	lea    rdx,[rip+0x1ddc1]        # 0x140048cb0
   14002aeef:	xor    r8d,r8d
   14002aef2:	lea    rcx,[rbx+rbx*4]
   14002aef6:	lea    rcx,[rdx+rcx*8]
   14002aefa:	mov    edx,0xfa0
   14002aeff:	call   0x14002a8b4
   14002af04:	test   eax,eax
   14002af06:	je     0x14002af19
   14002af08:	inc    DWORD PTR [rip+0x1dfaa]        # 0x140048eb8
   14002af0e:	inc    ebx
   14002af10:	cmp    ebx,0xd
   14002af13:	jb     0x14002aee8
   14002af15:	mov    al,0x1
   14002af17:	jmp    0x14002af22
   14002af19:	xor    ecx,ecx
   14002af1b:	call   0x14002af44
   14002af20:	xor    al,al
   14002af22:	add    rsp,0x20
   14002af26:	pop    rbx
   14002af27:	ret    
   14002af28:	movsxd rax,ecx
   14002af2b:	lea    rcx,[rax+rax*4]
   14002af2f:	lea    rax,[rip+0x1dd7a]        # 0x140048cb0
   14002af36:	lea    rcx,[rax+rcx*8]
   14002af3a:	rex.W jmp QWORD PTR [rip+0x71b7]        # 0x1400320f8
   14002af41:	int3   
   14002af42:	int3   
   14002af43:	int3   
   14002af44:	rex push rbx
   14002af46:	sub    rsp,0x20
   14002af4a:	mov    ebx,DWORD PTR [rip+0x1df68]        # 0x140048eb8
   14002af50:	jmp    0x14002af6f
   14002af52:	lea    rax,[rip+0x1dd57]        # 0x140048cb0
   14002af59:	dec    ebx
   14002af5b:	lea    rcx,[rbx+rbx*4]
   14002af5f:	lea    rcx,[rax+rcx*8]
   14002af63:	call   QWORD PTR [rip+0x717f]        # 0x1400320e8
   14002af69:	dec    DWORD PTR [rip+0x1df49]        # 0x140048eb8
   14002af6f:	test   ebx,ebx
   14002af71:	jne    0x14002af52
   14002af73:	mov    al,0x1
   14002af75:	add    rsp,0x20
   14002af79:	pop    rbx
   14002af7a:	ret    
   14002af7b:	int3   
   14002af7c:	movsxd rax,ecx
   14002af7f:	lea    rcx,[rax+rax*4]
   14002af83:	lea    rax,[rip+0x1dd26]        # 0x140048cb0
   14002af8a:	lea    rcx,[rax+rcx*8]
   14002af8e:	rex.W jmp QWORD PTR [rip+0x715b]        # 0x1400320f0
   14002af95:	int3   
   14002af96:	int3   
   14002af97:	int3   
   14002af98:	mov    QWORD PTR [rsp+0x8],rbx
   14002af9d:	mov    QWORD PTR [rsp+0x20],r9
   14002afa2:	push   rdi
   14002afa3:	sub    rsp,0x20
   14002afa7:	mov    rdi,r9
   14002afaa:	mov    rbx,r8
   14002afad:	mov    ecx,DWORD PTR [rdx]
   14002afaf:	call   0x14002d92c
   14002afb4:	nop
   14002afb5:	mov    rax,QWORD PTR [rbx]
   14002afb8:	movsxd rcx,DWORD PTR [rax]
   14002afbb:	mov    rdx,rcx
   14002afbe:	mov    rax,rcx
   14002afc1:	sar    rax,0x6
   14002afc5:	lea    r8,[rip+0x1d8d4]        # 0x1400488a0
   14002afcc:	and    edx,0x3f
   14002afcf:	shl    rdx,0x6
   14002afd3:	mov    rax,QWORD PTR [r8+rax*8]
   14002afd7:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14002afdc:	je     0x14002b002
   14002afde:	call   0x14002da30
   14002afe3:	mov    rcx,rax
   14002afe6:	call   QWORD PTR [rip+0x71bc]        # 0x1400321a8
   14002afec:	xor    ebx,ebx
   14002afee:	test   eax,eax
   14002aff0:	jne    0x14002b010
   14002aff2:	call   0x14002a474
   14002aff7:	mov    rbx,rax
   14002affa:	call   QWORD PTR [rip+0x7208]        # 0x140032208
   14002b000:	mov    DWORD PTR [rbx],eax
   14002b002:	call   0x14002a494
   14002b007:	mov    DWORD PTR [rax],0x9
   14002b00d:	or     ebx,0xffffffff
   14002b010:	mov    ecx,DWORD PTR [rdi]
   14002b012:	call   0x14002d950
   14002b017:	mov    eax,ebx
   14002b019:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b01e:	add    rsp,0x20
   14002b022:	pop    rdi
   14002b023:	ret    
   14002b024:	mov    DWORD PTR [rsp+0x8],ecx
   14002b028:	sub    rsp,0x38
   14002b02c:	movsxd rdx,ecx
   14002b02f:	cmp    edx,0xfffffffe
   14002b032:	jne    0x14002b041
   14002b034:	call   0x14002a494
   14002b039:	mov    DWORD PTR [rax],0x9
   14002b03f:	jmp    0x14002b0ad
   14002b041:	test   ecx,ecx
   14002b043:	js     0x14002b09d
   14002b045:	cmp    edx,DWORD PTR [rip+0x1dc55]        # 0x140048ca0
   14002b04b:	jae    0x14002b09d
   14002b04d:	mov    rcx,rdx
   14002b050:	lea    r8,[rip+0x1d849]        # 0x1400488a0
   14002b057:	and    ecx,0x3f
   14002b05a:	mov    rax,rdx
   14002b05d:	sar    rax,0x6
   14002b061:	shl    rcx,0x6
   14002b065:	mov    rax,QWORD PTR [r8+rax*8]
   14002b069:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   14002b06e:	je     0x14002b09d
   14002b070:	lea    rax,[rsp+0x40]
   14002b075:	mov    DWORD PTR [rsp+0x50],edx
   14002b079:	mov    DWORD PTR [rsp+0x58],edx
   14002b07d:	lea    r9,[rsp+0x50]
   14002b082:	lea    rdx,[rsp+0x58]
   14002b087:	mov    QWORD PTR [rsp+0x20],rax
   14002b08c:	lea    r8,[rsp+0x20]
   14002b091:	lea    rcx,[rsp+0x48]
   14002b096:	call   0x14002af98
   14002b09b:	jmp    0x14002b0b0
   14002b09d:	call   0x14002a494
   14002b0a2:	mov    DWORD PTR [rax],0x9
   14002b0a8:	call   0x1400281ac
   14002b0ad:	or     eax,0xffffffff
   14002b0b0:	add    rsp,0x38
   14002b0b4:	ret    
   14002b0b5:	int3   
   14002b0b6:	int3   
   14002b0b7:	int3   
   14002b0b8:	mov    QWORD PTR [rsp+0x8],rbx
   14002b0bd:	push   rbp
   14002b0be:	push   rsi
   14002b0bf:	push   rdi
   14002b0c0:	push   r12
   14002b0c2:	push   r13
   14002b0c4:	push   r14
   14002b0c6:	push   r15
   14002b0c8:	mov    rbp,rsp
   14002b0cb:	sub    rsp,0x80
   14002b0d2:	mov    rax,QWORD PTR [rip+0x1b10f]        # 0x1400461e8
   14002b0d9:	xor    rax,rsp
   14002b0dc:	mov    QWORD PTR [rbp-0x10],rax
   14002b0e0:	movsxd rsi,edx
   14002b0e3:	lea    rax,[rip+0x1d7b6]        # 0x1400488a0
   14002b0ea:	mov    r15,rsi
   14002b0ed:	mov    r12d,r9d
   14002b0f0:	sar    r15,0x6
   14002b0f4:	and    esi,0x3f
   14002b0f7:	shl    rsi,0x6
   14002b0fb:	mov    r14,r8
   14002b0fe:	mov    QWORD PTR [rbp-0x28],r8
   14002b102:	mov    rbx,rcx
   14002b105:	add    r12,r8
   14002b108:	mov    rax,QWORD PTR [rax+r15*8]
   14002b10c:	mov    rax,QWORD PTR [rax+rsi*1+0x28]
   14002b111:	mov    QWORD PTR [rbp-0x30],rax
   14002b115:	call   QWORD PTR [rip+0x6f5d]        # 0x140032078
   14002b11b:	xor    edx,edx
   14002b11d:	mov    DWORD PTR [rbp-0x34],eax
   14002b120:	mov    QWORD PTR [rbx],rdx
   14002b123:	mov    rdi,r14
   14002b126:	mov    DWORD PTR [rbx+0x8],edx
   14002b129:	cmp    r14,r12
   14002b12c:	jae    0x14002b296
   14002b132:	mov    r13b,BYTE PTR [rdi]
   14002b135:	lea    r14,[rip+0x1d764]        # 0x1400488a0
   14002b13c:	mov    WORD PTR [rbp-0x40],dx
   14002b140:	mov    rdx,QWORD PTR [r14+r15*8]
   14002b144:	mov    cl,BYTE PTR [rdx+rsi*1+0x3d]
   14002b148:	test   cl,0x4
   14002b14b:	je     0x14002b16b
   14002b14d:	mov    al,BYTE PTR [rdx+rsi*1+0x3e]
   14002b151:	and    cl,0xfb
   14002b154:	mov    BYTE PTR [rdx+rsi*1+0x3d],cl
   14002b158:	mov    r8d,0x2
   14002b15e:	lea    rdx,[rbp-0x20]
   14002b162:	mov    BYTE PTR [rbp-0x20],al
   14002b165:	mov    BYTE PTR [rbp-0x1f],r13b
   14002b169:	jmp    0x14002b1b0
   14002b16b:	call   0x14002dd80
   14002b170:	movzx  ecx,BYTE PTR [rdi]
   14002b173:	mov    edx,0x8000
   14002b178:	test   WORD PTR [rax+rcx*2],dx
   14002b17c:	je     0x14002b1a7
   14002b17e:	cmp    rdi,r12
   14002b181:	jae    0x14002b276
   14002b187:	mov    r8d,0x2
   14002b18d:	lea    rcx,[rbp-0x40]
   14002b191:	mov    rdx,rdi
   14002b194:	call   0x14002bd28
   14002b199:	cmp    eax,0xffffffff
   14002b19c:	je     0x14002b296
   14002b1a2:	inc    rdi
   14002b1a5:	jmp    0x14002b1c2
   14002b1a7:	mov    r8d,0x1
   14002b1ad:	mov    rdx,rdi
   14002b1b0:	lea    rcx,[rbp-0x40]
   14002b1b4:	call   0x14002bd28
   14002b1b9:	cmp    eax,0xffffffff
   14002b1bc:	je     0x14002b296
   14002b1c2:	and    QWORD PTR [rsp+0x38],0x0
   14002b1c8:	lea    rax,[rbp-0x18]
   14002b1cc:	and    QWORD PTR [rsp+0x30],0x0
   14002b1d2:	lea    r8,[rbp-0x40]
   14002b1d6:	mov    ecx,DWORD PTR [rbp-0x34]
   14002b1d9:	mov    r9d,0x1
   14002b1df:	mov    DWORD PTR [rsp+0x28],0x5
   14002b1e7:	xor    edx,edx
   14002b1e9:	mov    QWORD PTR [rsp+0x20],rax
   14002b1ee:	inc    rdi
   14002b1f1:	call   QWORD PTR [rip+0x6ec1]        # 0x1400320b8
   14002b1f7:	mov    r14d,eax
   14002b1fa:	test   eax,eax
   14002b1fc:	je     0x14002b296
   14002b202:	mov    rcx,QWORD PTR [rbp-0x30]
   14002b206:	lea    r9,[rbp-0x38]
   14002b20a:	and    QWORD PTR [rsp+0x20],0x0
   14002b210:	lea    rdx,[rbp-0x18]
   14002b214:	mov    r8d,eax
   14002b217:	call   QWORD PTR [rip+0x6f7b]        # 0x140032198
   14002b21d:	xor    edx,edx
   14002b21f:	test   eax,eax
   14002b221:	je     0x14002b28e
   14002b223:	mov    ecx,DWORD PTR [rbx+0x8]
   14002b226:	sub    ecx,DWORD PTR [rbp-0x28]
   14002b229:	add    ecx,edi
   14002b22b:	mov    DWORD PTR [rbx+0x4],ecx
   14002b22e:	cmp    DWORD PTR [rbp-0x38],r14d
   14002b232:	jb     0x14002b296
   14002b234:	cmp    r13b,0xa
   14002b238:	jne    0x14002b26e
   14002b23a:	mov    rcx,QWORD PTR [rbp-0x30]
   14002b23e:	lea    eax,[rdx+0xd]
   14002b241:	mov    QWORD PTR [rsp+0x20],rdx
   14002b246:	lea    r8d,[rdx+0x1]
   14002b24a:	lea    rdx,[rbp-0x3c]
   14002b24e:	mov    WORD PTR [rbp-0x3c],ax
   14002b252:	lea    r9,[rbp-0x38]
   14002b256:	call   QWORD PTR [rip+0x6f3c]        # 0x140032198
   14002b25c:	xor    edx,edx
   14002b25e:	test   eax,eax
   14002b260:	je     0x14002b28e
   14002b262:	cmp    DWORD PTR [rbp-0x38],0x1
   14002b266:	jb     0x14002b296
   14002b268:	inc    DWORD PTR [rbx+0x8]
   14002b26b:	inc    DWORD PTR [rbx+0x4]
   14002b26e:	cmp    rdi,r12
   14002b271:	jmp    0x14002b12c
   14002b276:	mov    al,BYTE PTR [rdi]
   14002b278:	mov    rcx,QWORD PTR [r14+r15*8]
   14002b27c:	mov    BYTE PTR [rcx+rsi*1+0x3e],al
   14002b280:	mov    rax,QWORD PTR [r14+r15*8]
   14002b284:	or     BYTE PTR [rax+rsi*1+0x3d],0x4
   14002b289:	inc    DWORD PTR [rbx+0x4]
   14002b28c:	jmp    0x14002b296
   14002b28e:	call   QWORD PTR [rip+0x6f74]        # 0x140032208
   14002b294:	mov    DWORD PTR [rbx],eax
   14002b296:	mov    rax,rbx
   14002b299:	mov    rcx,QWORD PTR [rbp-0x10]
   14002b29d:	xor    rcx,rsp
   14002b2a0:	call   0x140030a30
   14002b2a5:	mov    rbx,QWORD PTR [rsp+0xc0]
   14002b2ad:	add    rsp,0x80
   14002b2b4:	pop    r15
   14002b2b6:	pop    r14
   14002b2b8:	pop    r13
   14002b2ba:	pop    r12
   14002b2bc:	pop    rdi
   14002b2bd:	pop    rsi
   14002b2be:	pop    rbp
   14002b2bf:	ret    
   14002b2c0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b2c5:	mov    QWORD PTR [rsp+0x18],rbp
   14002b2ca:	push   rsi
   14002b2cb:	push   rdi
   14002b2cc:	push   r14
   14002b2ce:	mov    eax,0x1450
   14002b2d3:	call   0x1400263c0
   14002b2d8:	sub    rsp,rax
   14002b2db:	mov    rax,QWORD PTR [rip+0x1af06]        # 0x1400461e8
   14002b2e2:	xor    rax,rsp
   14002b2e5:	mov    QWORD PTR [rsp+0x1440],rax
   14002b2ed:	mov    rbx,rcx
   14002b2f0:	movsxd r10,edx
   14002b2f3:	mov    rax,r10
   14002b2f6:	mov    ebp,r9d
   14002b2f9:	sar    rax,0x6
   14002b2fd:	lea    rcx,[rip+0x1d59c]        # 0x1400488a0
   14002b304:	and    r10d,0x3f
   14002b308:	add    rbp,r8
   14002b30b:	and    DWORD PTR [rbx],0x0
   14002b30e:	mov    rsi,r8
   14002b311:	and    DWORD PTR [rbx+0x4],0x0
   14002b315:	mov    rax,QWORD PTR [rcx+rax*8]
   14002b319:	and    DWORD PTR [rbx+0x8],0x0
   14002b31d:	shl    r10,0x6
   14002b321:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14002b326:	cmp    r8,rbp
   14002b329:	jae    0x14002b39a
   14002b32b:	lea    rdi,[rsp+0x40]
   14002b330:	cmp    rsi,rbp
   14002b333:	jae    0x14002b359
   14002b335:	mov    al,BYTE PTR [rsi]
   14002b337:	inc    rsi
   14002b33a:	cmp    al,0xa
   14002b33c:	jne    0x14002b347
   14002b33e:	inc    DWORD PTR [rbx+0x8]
   14002b341:	mov    BYTE PTR [rdi],0xd
   14002b344:	inc    rdi
   14002b347:	mov    BYTE PTR [rdi],al
   14002b349:	inc    rdi
   14002b34c:	lea    rax,[rsp+0x143f]
   14002b354:	cmp    rdi,rax
   14002b357:	jb     0x14002b330
   14002b359:	and    QWORD PTR [rsp+0x20],0x0
   14002b35f:	lea    rax,[rsp+0x40]
   14002b364:	sub    edi,eax
   14002b366:	lea    r9,[rsp+0x30]
   14002b36b:	mov    r8d,edi
   14002b36e:	lea    rdx,[rsp+0x40]
   14002b373:	mov    rcx,r14
   14002b376:	call   QWORD PTR [rip+0x6e1c]        # 0x140032198
   14002b37c:	test   eax,eax
   14002b37e:	je     0x14002b392
   14002b380:	mov    eax,DWORD PTR [rsp+0x30]
   14002b384:	add    DWORD PTR [rbx+0x4],eax
   14002b387:	cmp    eax,edi
   14002b389:	jb     0x14002b39a
   14002b38b:	cmp    rsi,rbp
   14002b38e:	jb     0x14002b32b
   14002b390:	jmp    0x14002b39a
   14002b392:	call   QWORD PTR [rip+0x6e70]        # 0x140032208
   14002b398:	mov    DWORD PTR [rbx],eax
   14002b39a:	mov    rax,rbx
   14002b39d:	mov    rcx,QWORD PTR [rsp+0x1440]
   14002b3a5:	xor    rcx,rsp
   14002b3a8:	call   0x140030a30
   14002b3ad:	lea    r11,[rsp+0x1450]
   14002b3b5:	mov    rbx,QWORD PTR [r11+0x20]
   14002b3b9:	mov    rbp,QWORD PTR [r11+0x30]
   14002b3bd:	mov    rsp,r11
   14002b3c0:	pop    r14
   14002b3c2:	pop    rdi
   14002b3c3:	pop    rsi
   14002b3c4:	ret    
   14002b3c5:	int3   
   14002b3c6:	int3   
   14002b3c7:	int3   
   14002b3c8:	mov    QWORD PTR [rsp+0x8],rbx
   14002b3cd:	mov    QWORD PTR [rsp+0x18],rbp
   14002b3d2:	push   rsi
   14002b3d3:	push   rdi
   14002b3d4:	push   r14
   14002b3d6:	mov    eax,0x1450
   14002b3db:	call   0x1400263c0
   14002b3e0:	sub    rsp,rax
   14002b3e3:	mov    rax,QWORD PTR [rip+0x1adfe]        # 0x1400461e8
   14002b3ea:	xor    rax,rsp
   14002b3ed:	mov    QWORD PTR [rsp+0x1440],rax
   14002b3f5:	mov    rdi,rcx
   14002b3f8:	movsxd r10,edx
   14002b3fb:	mov    rax,r10
   14002b3fe:	mov    ebp,r9d
   14002b401:	sar    rax,0x6
   14002b405:	lea    rcx,[rip+0x1d494]        # 0x1400488a0
   14002b40c:	and    r10d,0x3f
   14002b410:	add    rbp,r8
   14002b413:	and    DWORD PTR [rdi],0x0
   14002b416:	mov    rsi,r8
   14002b419:	and    DWORD PTR [rdi+0x4],0x0
   14002b41d:	mov    rax,QWORD PTR [rcx+rax*8]
   14002b421:	and    DWORD PTR [rdi+0x8],0x0
   14002b425:	shl    r10,0x6
   14002b429:	mov    r14,QWORD PTR [rax+r10*1+0x28]
   14002b42e:	cmp    r8,rbp
   14002b431:	jae    0x14002b4b9
   14002b437:	lea    rbx,[rsp+0x40]
   14002b43c:	cmp    rsi,rbp
   14002b43f:	jae    0x14002b472
   14002b441:	movzx  eax,WORD PTR [rsi]
   14002b444:	add    rsi,0x2
   14002b448:	cmp    ax,0xa
   14002b44c:	jne    0x14002b45e
   14002b44e:	add    DWORD PTR [rdi+0x8],0x2
   14002b452:	mov    ecx,0xd
   14002b457:	mov    WORD PTR [rbx],cx
   14002b45a:	add    rbx,0x2
   14002b45e:	mov    WORD PTR [rbx],ax
   14002b461:	add    rbx,0x2
   14002b465:	lea    rax,[rsp+0x143e]
   14002b46d:	cmp    rbx,rax
   14002b470:	jb     0x14002b43c
   14002b472:	and    QWORD PTR [rsp+0x20],0x0
   14002b478:	lea    rax,[rsp+0x40]
   14002b47d:	sub    rbx,rax
   14002b480:	lea    r9,[rsp+0x30]
   14002b485:	sar    rbx,1
   14002b488:	lea    rdx,[rsp+0x40]
   14002b48d:	add    ebx,ebx
   14002b48f:	mov    rcx,r14
   14002b492:	mov    r8d,ebx
   14002b495:	call   QWORD PTR [rip+0x6cfd]        # 0x140032198
   14002b49b:	test   eax,eax
   14002b49d:	je     0x14002b4b1
   14002b49f:	mov    eax,DWORD PTR [rsp+0x30]
   14002b4a3:	add    DWORD PTR [rdi+0x4],eax
   14002b4a6:	cmp    eax,ebx
   14002b4a8:	jb     0x14002b4b9
   14002b4aa:	cmp    rsi,rbp
   14002b4ad:	jb     0x14002b437
   14002b4af:	jmp    0x14002b4b9
   14002b4b1:	call   QWORD PTR [rip+0x6d51]        # 0x140032208
   14002b4b7:	mov    DWORD PTR [rdi],eax
   14002b4b9:	mov    rax,rdi
   14002b4bc:	mov    rcx,QWORD PTR [rsp+0x1440]
   14002b4c4:	xor    rcx,rsp
   14002b4c7:	call   0x140030a30
   14002b4cc:	lea    r11,[rsp+0x1450]
   14002b4d4:	mov    rbx,QWORD PTR [r11+0x20]
   14002b4d8:	mov    rbp,QWORD PTR [r11+0x30]
   14002b4dc:	mov    rsp,r11
   14002b4df:	pop    r14
   14002b4e1:	pop    rdi
   14002b4e2:	pop    rsi
   14002b4e3:	ret    
   14002b4e4:	mov    QWORD PTR [rsp+0x8],rbx
   14002b4e9:	mov    QWORD PTR [rsp+0x18],rbp
   14002b4ee:	push   rsi
   14002b4ef:	push   rdi
   14002b4f0:	push   r12
   14002b4f2:	push   r14
   14002b4f4:	push   r15
   14002b4f6:	mov    eax,0x1470
   14002b4fb:	call   0x1400263c0
   14002b500:	sub    rsp,rax
   14002b503:	mov    rax,QWORD PTR [rip+0x1acde]        # 0x1400461e8
   14002b50a:	xor    rax,rsp
   14002b50d:	mov    QWORD PTR [rsp+0x1460],rax
   14002b515:	movsxd r10,edx
   14002b518:	mov    rbx,rcx
   14002b51b:	mov    rax,r10
   14002b51e:	mov    r14d,r9d
   14002b521:	sar    rax,0x6
   14002b525:	lea    rcx,[rip+0x1d374]        # 0x1400488a0
   14002b52c:	and    r10d,0x3f
   14002b530:	add    r14,r8
   14002b533:	shl    r10,0x6
   14002b537:	mov    r15,r8
   14002b53a:	mov    rdi,r8
   14002b53d:	mov    rax,QWORD PTR [rcx+rax*8]
   14002b541:	mov    r12,QWORD PTR [rax+r10*1+0x28]
   14002b546:	xor    eax,eax
   14002b548:	and    DWORD PTR [rbx],0x0
   14002b54b:	mov    QWORD PTR [rbx+0x4],rax
   14002b54f:	cmp    r8,r14
   14002b552:	jae    0x14002b627
   14002b558:	lea    rax,[rsp+0x50]
   14002b55d:	cmp    rdi,r14
   14002b560:	jae    0x14002b58f
   14002b562:	movzx  ecx,WORD PTR [rdi]
   14002b565:	add    rdi,0x2
   14002b569:	cmp    cx,0xa
   14002b56d:	jne    0x14002b57b
   14002b56f:	mov    edx,0xd
   14002b574:	mov    WORD PTR [rax],dx
   14002b577:	add    rax,0x2
   14002b57b:	mov    WORD PTR [rax],cx
   14002b57e:	add    rax,0x2
   14002b582:	lea    rcx,[rsp+0x6f8]
   14002b58a:	cmp    rax,rcx
   14002b58d:	jb     0x14002b55d
   14002b58f:	and    QWORD PTR [rsp+0x38],0x0
   14002b595:	lea    rcx,[rsp+0x50]
   14002b59a:	and    QWORD PTR [rsp+0x30],0x0
   14002b5a0:	lea    r8,[rsp+0x50]
   14002b5a5:	sub    rax,rcx
   14002b5a8:	mov    DWORD PTR [rsp+0x28],0xd55
   14002b5b0:	lea    rcx,[rsp+0x700]
   14002b5b8:	sar    rax,1
   14002b5bb:	mov    QWORD PTR [rsp+0x20],rcx
   14002b5c0:	mov    r9d,eax
   14002b5c3:	mov    ecx,0xfde9
   14002b5c8:	xor    edx,edx
   14002b5ca:	call   QWORD PTR [rip+0x6ae8]        # 0x1400320b8
   14002b5d0:	mov    ebp,eax
   14002b5d2:	test   eax,eax
   14002b5d4:	je     0x14002b61f
   14002b5d6:	xor    esi,esi
   14002b5d8:	test   eax,eax
   14002b5da:	je     0x14002b60f
   14002b5dc:	and    QWORD PTR [rsp+0x20],0x0
   14002b5e2:	lea    rdx,[rsp+0x700]
   14002b5ea:	mov    ecx,esi
   14002b5ec:	lea    r9,[rsp+0x40]
   14002b5f1:	mov    r8d,ebp
   14002b5f4:	add    rdx,rcx
   14002b5f7:	mov    rcx,r12
   14002b5fa:	sub    r8d,esi
   14002b5fd:	call   QWORD PTR [rip+0x6b95]        # 0x140032198
   14002b603:	test   eax,eax
   14002b605:	je     0x14002b61f
   14002b607:	add    esi,DWORD PTR [rsp+0x40]
   14002b60b:	cmp    esi,ebp
   14002b60d:	jb     0x14002b5dc
   14002b60f:	mov    eax,edi
   14002b611:	sub    eax,r15d
   14002b614:	mov    DWORD PTR [rbx+0x4],eax
   14002b617:	cmp    rdi,r14
   14002b61a:	jmp    0x14002b552
   14002b61f:	call   QWORD PTR [rip+0x6be3]        # 0x140032208
   14002b625:	mov    DWORD PTR [rbx],eax
   14002b627:	mov    rax,rbx
   14002b62a:	mov    rcx,QWORD PTR [rsp+0x1460]
   14002b632:	xor    rcx,rsp
   14002b635:	call   0x140030a30
   14002b63a:	lea    r11,[rsp+0x1470]
   14002b642:	mov    rbx,QWORD PTR [r11+0x30]
   14002b646:	mov    rbp,QWORD PTR [r11+0x40]
   14002b64a:	mov    rsp,r11
   14002b64d:	pop    r15
   14002b64f:	pop    r14
   14002b651:	pop    r12
   14002b653:	pop    rdi
   14002b654:	pop    rsi
   14002b655:	ret    
   14002b656:	int3   
   14002b657:	int3   
   14002b658:	mov    QWORD PTR [rsp+0x10],rbx
   14002b65d:	mov    QWORD PTR [rsp+0x18],rsi
   14002b662:	mov    DWORD PTR [rsp+0x8],ecx
   14002b666:	push   rdi
   14002b667:	push   r12
   14002b669:	push   r13
   14002b66b:	push   r14
   14002b66d:	push   r15
   14002b66f:	sub    rsp,0x20
   14002b673:	mov    r15d,r8d
   14002b676:	mov    r12,rdx
   14002b679:	movsxd rbx,ecx
   14002b67c:	cmp    ebx,0xfffffffe
   14002b67f:	jne    0x14002b699
   14002b681:	call   0x14002a474
   14002b686:	and    DWORD PTR [rax],0x0
   14002b689:	call   0x14002a494
   14002b68e:	mov    DWORD PTR [rax],0x9
   14002b694:	jmp    0x14002b729
   14002b699:	test   ecx,ecx
   14002b69b:	js     0x14002b711
   14002b69d:	cmp    ebx,DWORD PTR [rip+0x1d5fd]        # 0x140048ca0
   14002b6a3:	jae    0x14002b711
   14002b6a5:	mov    rsi,rbx
   14002b6a8:	mov    r14,rbx
   14002b6ab:	sar    r14,0x6
   14002b6af:	lea    r13,[rip+0x1d1ea]        # 0x1400488a0
   14002b6b6:	and    esi,0x3f
   14002b6b9:	shl    rsi,0x6
   14002b6bd:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14002b6c2:	movzx  ecx,BYTE PTR [rax+rsi*1+0x38]
   14002b6c7:	and    ecx,0x1
   14002b6ca:	je     0x14002b711
   14002b6cc:	mov    ecx,ebx
   14002b6ce:	call   0x14002d92c
   14002b6d3:	or     edi,0xffffffff
   14002b6d6:	mov    rax,QWORD PTR [r13+r14*8+0x0]
   14002b6db:	test   BYTE PTR [rax+rsi*1+0x38],0x1
   14002b6e0:	jne    0x14002b6f7
   14002b6e2:	call   0x14002a494
   14002b6e7:	mov    DWORD PTR [rax],0x9
   14002b6ed:	call   0x14002a474
   14002b6f2:	and    DWORD PTR [rax],0x0
   14002b6f5:	jmp    0x14002b706
   14002b6f7:	mov    r8d,r15d
   14002b6fa:	mov    rdx,r12
   14002b6fd:	mov    ecx,ebx
   14002b6ff:	call   0x14002b744
   14002b704:	mov    edi,eax
   14002b706:	mov    ecx,ebx
   14002b708:	call   0x14002d950
   14002b70d:	mov    eax,edi
   14002b70f:	jmp    0x14002b72c
   14002b711:	call   0x14002a474
   14002b716:	and    DWORD PTR [rax],0x0
   14002b719:	call   0x14002a494
   14002b71e:	mov    DWORD PTR [rax],0x9
   14002b724:	call   0x1400281ac
   14002b729:	or     eax,0xffffffff
   14002b72c:	mov    rbx,QWORD PTR [rsp+0x58]
   14002b731:	mov    rsi,QWORD PTR [rsp+0x60]
   14002b736:	add    rsp,0x20
   14002b73a:	pop    r15
   14002b73c:	pop    r14
   14002b73e:	pop    r13
   14002b740:	pop    r12
   14002b742:	pop    rdi
   14002b743:	ret    
   14002b744:	mov    QWORD PTR [rsp+0x20],rbx
   14002b749:	push   rbp
   14002b74a:	push   rsi
   14002b74b:	push   rdi
   14002b74c:	push   r12
   14002b74e:	push   r13
   14002b750:	push   r14
   14002b752:	push   r15
   14002b754:	mov    rbp,rsp
   14002b757:	sub    rsp,0x60
   14002b75b:	xor    edi,edi
   14002b75d:	mov    r15d,r8d
   14002b760:	movsxd r12,ecx
   14002b763:	mov    rsi,rdx
   14002b766:	test   r8d,r8d
   14002b769:	jne    0x14002b772
   14002b76b:	xor    eax,eax
   14002b76d:	jmp    0x14002ba0d
   14002b772:	test   rdx,rdx
   14002b775:	jne    0x14002b796
   14002b777:	call   0x14002a474
   14002b77c:	mov    DWORD PTR [rax],edi
   14002b77e:	call   0x14002a494
   14002b783:	mov    DWORD PTR [rax],0x16
   14002b789:	call   0x1400281ac
   14002b78e:	or     eax,0xffffffff
   14002b791:	jmp    0x14002ba0d
   14002b796:	mov    r14,r12
   14002b799:	lea    rax,[rip+0x1d100]        # 0x1400488a0
   14002b7a0:	and    r14d,0x3f
   14002b7a4:	mov    r13,r12
   14002b7a7:	sar    r13,0x6
   14002b7ab:	shl    r14,0x6
   14002b7af:	mov    QWORD PTR [rbp-0x10],r13
   14002b7b3:	mov    rcx,QWORD PTR [rax+r13*8]
   14002b7b7:	mov    bl,BYTE PTR [rcx+r14*1+0x39]
   14002b7bc:	lea    eax,[rbx-0x1]
   14002b7bf:	cmp    al,0x1
   14002b7c1:	ja     0x14002b7cc
   14002b7c3:	mov    eax,r15d
   14002b7c6:	not    eax
   14002b7c8:	test   al,0x1
   14002b7ca:	je     0x14002b777
   14002b7cc:	test   BYTE PTR [rcx+r14*1+0x38],0x20
   14002b7d2:	je     0x14002b7e2
   14002b7d4:	xor    edx,edx
   14002b7d6:	mov    ecx,r12d
   14002b7d9:	lea    r8d,[rdx+0x2]
   14002b7dd:	call   0x14002e768
   14002b7e2:	mov    ecx,r12d
   14002b7e5:	mov    QWORD PTR [rbp-0x20],rdi
   14002b7e9:	call   0x14002e66c
   14002b7ee:	test   eax,eax
   14002b7f0:	je     0x14002b8f7
   14002b7f6:	lea    rax,[rip+0x1d0a3]        # 0x1400488a0
   14002b7fd:	mov    rax,QWORD PTR [rax+r13*8]
   14002b801:	test   BYTE PTR [rax+r14*1+0x38],0x80
   14002b807:	je     0x14002b8f7
   14002b80d:	call   0x14002a248
   14002b812:	mov    rcx,QWORD PTR [rax+0x90]
   14002b819:	cmp    QWORD PTR [rcx+0x138],rdi
   14002b820:	jne    0x14002b838
   14002b822:	lea    rax,[rip+0x1d077]        # 0x1400488a0
   14002b829:	mov    rax,QWORD PTR [rax+r13*8]
   14002b82d:	cmp    BYTE PTR [rax+r14*1+0x39],dil
   14002b832:	je     0x14002b8f7
   14002b838:	lea    rax,[rip+0x1d061]        # 0x1400488a0
   14002b83f:	mov    rcx,QWORD PTR [rax+r13*8]
   14002b843:	lea    rdx,[rbp-0x8]
   14002b847:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14002b84c:	call   QWORD PTR [rip+0x681e]        # 0x140032070
   14002b852:	test   eax,eax
   14002b854:	je     0x14002b8f7
   14002b85a:	test   bl,bl
   14002b85c:	je     0x14002b8d9
   14002b85e:	dec    bl
   14002b860:	cmp    bl,0x1
   14002b863:	ja     0x14002b994
   14002b869:	and    DWORD PTR [rbp-0x30],edi
   14002b86c:	lea    r12,[rsi+r15*1]
   14002b870:	xor    ebx,ebx
   14002b872:	mov    r15,rsi
   14002b875:	mov    DWORD PTR [rbp-0x2c],ebx
   14002b878:	cmp    rsi,r12
   14002b87b:	jae    0x14002b98a
   14002b881:	movzx  r13d,WORD PTR [r15]
   14002b885:	movzx  ecx,r13w
   14002b889:	call   0x14002e770
   14002b88e:	cmp    ax,r13w
   14002b892:	jne    0x14002b8c7
   14002b894:	add    ebx,0x2
   14002b897:	mov    DWORD PTR [rbp-0x2c],ebx
   14002b89a:	cmp    r13w,0xa
   14002b89f:	jne    0x14002b8bc
   14002b8a1:	mov    r13d,0xd
   14002b8a7:	mov    ecx,r13d
   14002b8aa:	call   0x14002e770
   14002b8af:	cmp    ax,r13w
   14002b8b3:	jne    0x14002b8c7
   14002b8b5:	inc    ebx
   14002b8b7:	mov    DWORD PTR [rbp-0x2c],ebx
   14002b8ba:	inc    edi
   14002b8bc:	add    r15,0x2
   14002b8c0:	cmp    r15,r12
   14002b8c3:	jae    0x14002b8d0
   14002b8c5:	jmp    0x14002b881
   14002b8c7:	call   QWORD PTR [rip+0x693b]        # 0x140032208
   14002b8cd:	mov    DWORD PTR [rbp-0x30],eax
   14002b8d0:	mov    r13,QWORD PTR [rbp-0x10]
   14002b8d4:	jmp    0x14002b98a
   14002b8d9:	mov    r9d,r15d
   14002b8dc:	lea    rcx,[rbp-0x30]
   14002b8e0:	mov    r8,rsi
   14002b8e3:	mov    edx,r12d
   14002b8e6:	call   0x14002b0b8
   14002b8eb:	movsd  xmm0,QWORD PTR [rax]
   14002b8ef:	mov    edi,DWORD PTR [rax+0x8]
   14002b8f2:	jmp    0x14002b98f
   14002b8f7:	lea    rax,[rip+0x1cfa2]        # 0x1400488a0
   14002b8fe:	mov    rcx,QWORD PTR [rax+r13*8]
   14002b902:	test   BYTE PTR [rcx+r14*1+0x38],0x80
   14002b908:	je     0x14002b957
   14002b90a:	movsx  ecx,bl
   14002b90d:	test   bl,bl
   14002b90f:	je     0x14002b943
   14002b911:	sub    ecx,0x1
   14002b914:	je     0x14002b92f
   14002b916:	cmp    ecx,0x1
   14002b919:	jne    0x14002b994
   14002b91b:	mov    r9d,r15d
   14002b91e:	lea    rcx,[rbp-0x30]
   14002b922:	mov    r8,rsi
   14002b925:	mov    edx,r12d
   14002b928:	call   0x14002b3c8
   14002b92d:	jmp    0x14002b8eb
   14002b92f:	mov    r9d,r15d
   14002b932:	lea    rcx,[rbp-0x30]
   14002b936:	mov    r8,rsi
   14002b939:	mov    edx,r12d
   14002b93c:	call   0x14002b4e4
   14002b941:	jmp    0x14002b8eb
   14002b943:	mov    r9d,r15d
   14002b946:	lea    rcx,[rbp-0x30]
   14002b94a:	mov    r8,rsi
   14002b94d:	mov    edx,r12d
   14002b950:	call   0x14002b2c0
   14002b955:	jmp    0x14002b8eb
   14002b957:	mov    rcx,QWORD PTR [rcx+r14*1+0x28]
   14002b95c:	lea    r9,[rbp-0x2c]
   14002b960:	and    DWORD PTR [rbp-0x30],edi
   14002b963:	xor    eax,eax
   14002b965:	and    QWORD PTR [rsp+0x20],rax
   14002b96a:	mov    r8d,r15d
   14002b96d:	mov    rdx,rsi
   14002b970:	mov    QWORD PTR [rbp-0x2c],rax
   14002b974:	call   QWORD PTR [rip+0x681e]        # 0x140032198
   14002b97a:	test   eax,eax
   14002b97c:	jne    0x14002b987
   14002b97e:	call   QWORD PTR [rip+0x6884]        # 0x140032208
   14002b984:	mov    DWORD PTR [rbp-0x30],eax
   14002b987:	mov    edi,DWORD PTR [rbp-0x28]
   14002b98a:	movsd  xmm0,QWORD PTR [rbp-0x30]
   14002b98f:	movsd  QWORD PTR [rbp-0x20],xmm0
   14002b994:	mov    rax,QWORD PTR [rbp-0x20]
   14002b998:	shr    rax,0x20
   14002b99c:	test   eax,eax
   14002b99e:	jne    0x14002ba08
   14002b9a0:	mov    eax,DWORD PTR [rbp-0x20]
   14002b9a3:	test   eax,eax
   14002b9a5:	je     0x14002b9d4
   14002b9a7:	cmp    eax,0x5
   14002b9aa:	jne    0x14002b9c7
   14002b9ac:	call   0x14002a494
   14002b9b1:	mov    DWORD PTR [rax],0x9
   14002b9b7:	call   0x14002a474
   14002b9bc:	mov    DWORD PTR [rax],0x5
   14002b9c2:	jmp    0x14002b78e
   14002b9c7:	mov    ecx,DWORD PTR [rbp-0x20]
   14002b9ca:	call   0x14002a424
   14002b9cf:	jmp    0x14002b78e
   14002b9d4:	lea    rax,[rip+0x1cec5]        # 0x1400488a0
   14002b9db:	mov    rax,QWORD PTR [rax+r13*8]
   14002b9df:	test   BYTE PTR [rax+r14*1+0x38],0x40
   14002b9e5:	je     0x14002b9f0
   14002b9e7:	cmp    BYTE PTR [rsi],0x1a
   14002b9ea:	je     0x14002b76b
   14002b9f0:	call   0x14002a494
   14002b9f5:	mov    DWORD PTR [rax],0x1c
   14002b9fb:	call   0x14002a474
   14002ba00:	and    DWORD PTR [rax],0x0
   14002ba03:	jmp    0x14002b78e
   14002ba08:	mov    eax,DWORD PTR [rbp-0x1c]
   14002ba0b:	sub    eax,edi
   14002ba0d:	mov    rbx,QWORD PTR [rsp+0xb8]
   14002ba15:	add    rsp,0x60
   14002ba19:	pop    r15
   14002ba1b:	pop    r14
   14002ba1d:	pop    r13
   14002ba1f:	pop    r12
   14002ba21:	pop    rdi
   14002ba22:	pop    rsi
   14002ba23:	pop    rbp
   14002ba24:	ret    
   14002ba25:	int3   
   14002ba26:	int3   
   14002ba27:	int3   
   14002ba28:	sub    rsp,0x28
   14002ba2c:	test   rcx,rcx
   14002ba2f:	jne    0x14002ba46
   14002ba31:	call   0x14002a494
   14002ba36:	mov    DWORD PTR [rax],0x16
   14002ba3c:	call   0x1400281ac
   14002ba41:	or     eax,0xffffffff
   14002ba44:	jmp    0x14002ba49
   14002ba46:	mov    eax,DWORD PTR [rcx+0x18]
   14002ba49:	add    rsp,0x28
   14002ba4d:	ret    
   14002ba4e:	int3   
   14002ba4f:	int3   
   14002ba50:	mov    QWORD PTR [rsp+0x8],rbx
   14002ba55:	push   rdi
   14002ba56:	sub    rsp,0x20
   14002ba5a:	movsxd rdi,ecx
   14002ba5d:	test   rdx,rdx
   14002ba60:	je     0x14002ba81
   14002ba62:	mov    rax,QWORD PTR [rdx]
   14002ba65:	cmp    DWORD PTR [rax+0x8],0x1
   14002ba69:	jle    0x14002ba7c
   14002ba6b:	mov    r8,rdx
   14002ba6e:	mov    ecx,edi
   14002ba70:	mov    edx,0x1
   14002ba75:	call   0x14002e370
   14002ba7a:	jmp    0x14002ba8d
   14002ba7c:	mov    rax,QWORD PTR [rax]
   14002ba7f:	jmp    0x14002ba86
   14002ba81:	call   0x14002dd80
   14002ba86:	movzx  eax,WORD PTR [rax+rdi*2]
   14002ba8a:	and    eax,0x1
   14002ba8d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ba92:	test   eax,eax
   14002ba94:	setne  al
   14002ba97:	add    rsp,0x20
   14002ba9b:	pop    rdi
   14002ba9c:	ret    
   14002ba9d:	int3   
   14002ba9e:	int3   
   14002ba9f:	int3   
   14002baa0:	mov    QWORD PTR [rsp+0x10],rbx
   14002baa5:	mov    QWORD PTR [rsp+0x20],rsi
   14002baaa:	push   rbp
   14002baab:	mov    rbp,rsp
   14002baae:	sub    rsp,0x70
   14002bab2:	movsxd rbx,ecx
   14002bab5:	lea    rcx,[rbp-0x20]
   14002bab9:	call   0x1400288e8
   14002babe:	cmp    ebx,0x100
   14002bac4:	jae    0x14002bafe
   14002bac6:	lea    rdx,[rbp-0x18]
   14002baca:	mov    ecx,ebx
   14002bacc:	call   0x14002ba50
   14002bad1:	test   al,al
   14002bad3:	je     0x14002bae4
   14002bad5:	mov    rax,QWORD PTR [rbp-0x18]
   14002bad9:	mov    rcx,QWORD PTR [rax+0x110]
   14002bae0:	movzx  ebx,BYTE PTR [rcx+rbx*1]
   14002bae4:	cmp    BYTE PTR [rbp-0x8],0x0
   14002bae8:	je     0x14002bbca
   14002baee:	mov    rax,QWORD PTR [rbp-0x20]
   14002baf2:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002baf9:	jmp    0x14002bbca
   14002bafe:	xor    eax,eax
   14002bb00:	mov    WORD PTR [rbp+0x10],ax
   14002bb04:	mov    BYTE PTR [rbp+0x12],al
   14002bb07:	mov    rax,QWORD PTR [rbp-0x18]
   14002bb0b:	cmp    DWORD PTR [rax+0x8],0x1
   14002bb0f:	jle    0x14002bb39
   14002bb11:	mov    esi,ebx
   14002bb13:	lea    rdx,[rbp-0x18]
   14002bb17:	sar    esi,0x8
   14002bb1a:	movzx  ecx,sil
   14002bb1e:	call   0x14002e7cc
   14002bb23:	test   eax,eax
   14002bb25:	je     0x14002bb39
   14002bb27:	mov    BYTE PTR [rbp+0x10],sil
   14002bb2b:	mov    ecx,0x2
   14002bb30:	mov    BYTE PTR [rbp+0x11],bl
   14002bb33:	mov    BYTE PTR [rbp+0x12],0x0
   14002bb37:	jmp    0x14002bb50
   14002bb39:	call   0x14002a494
   14002bb3e:	mov    ecx,0x1
   14002bb43:	mov    DWORD PTR [rax],0x2a
   14002bb49:	mov    BYTE PTR [rbp+0x10],bl
   14002bb4c:	mov    BYTE PTR [rbp+0x11],0x0
   14002bb50:	mov    rdx,QWORD PTR [rbp-0x18]
   14002bb54:	lea    r9,[rbp+0x10]
   14002bb58:	xor    eax,eax
   14002bb5a:	mov    DWORD PTR [rsp+0x40],0x1
   14002bb62:	mov    WORD PTR [rbp+0x20],ax
   14002bb66:	mov    r8d,0x100
   14002bb6c:	mov    BYTE PTR [rbp+0x22],al
   14002bb6f:	mov    eax,DWORD PTR [rdx+0xc]
   14002bb72:	mov    rdx,QWORD PTR [rdx+0x138]
   14002bb79:	mov    DWORD PTR [rsp+0x38],eax
   14002bb7d:	lea    rax,[rbp+0x20]
   14002bb81:	mov    DWORD PTR [rsp+0x30],0x3
   14002bb89:	mov    QWORD PTR [rsp+0x28],rax
   14002bb8e:	mov    DWORD PTR [rsp+0x20],ecx
   14002bb92:	lea    rcx,[rbp-0x18]
   14002bb96:	call   0x14002eb68
   14002bb9b:	test   eax,eax
   14002bb9d:	je     0x14002bae4
   14002bba3:	movzx  ebx,BYTE PTR [rbp+0x20]
   14002bba7:	cmp    eax,0x1
   14002bbaa:	je     0x14002bae4
   14002bbb0:	movzx  ecx,BYTE PTR [rbp+0x21]
   14002bbb4:	shl    ebx,0x8
   14002bbb7:	or     ebx,ecx
   14002bbb9:	cmp    BYTE PTR [rbp-0x8],0x0
   14002bbbd:	je     0x14002bbca
   14002bbbf:	mov    rcx,QWORD PTR [rbp-0x20]
   14002bbc3:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002bbca:	lea    r11,[rsp+0x70]
   14002bbcf:	mov    eax,ebx
   14002bbd1:	mov    rbx,QWORD PTR [r11+0x18]
   14002bbd5:	mov    rsi,QWORD PTR [r11+0x28]
   14002bbd9:	mov    rsp,r11
   14002bbdc:	pop    rbp
   14002bbdd:	ret    
   14002bbde:	int3   
   14002bbdf:	int3   
   14002bbe0:	mov    rax,rsp
   14002bbe3:	mov    QWORD PTR [rax+0x8],rbx
   14002bbe7:	mov    QWORD PTR [rax+0x10],rbp
   14002bbeb:	mov    QWORD PTR [rax+0x18],rsi
   14002bbef:	mov    QWORD PTR [rax+0x20],rdi
   14002bbf3:	push   r14
   14002bbf5:	sub    rsp,0x50
   14002bbf9:	xor    r14d,r14d
   14002bbfc:	mov    rbp,r8
   14002bbff:	mov    rsi,rdx
   14002bc02:	mov    rdi,rcx
   14002bc05:	test   rdx,rdx
   14002bc08:	je     0x14002bc1d
   14002bc0a:	test   r8,r8
   14002bc0d:	je     0x14002bc1d
   14002bc0f:	cmp    BYTE PTR [rdx],r14b
   14002bc12:	jne    0x14002bc3a
   14002bc14:	test   rcx,rcx
   14002bc17:	je     0x14002bc1d
   14002bc19:	mov    WORD PTR [rcx],r14w
   14002bc1d:	xor    eax,eax
   14002bc1f:	mov    rbx,QWORD PTR [rsp+0x60]
   14002bc24:	mov    rbp,QWORD PTR [rsp+0x68]
   14002bc29:	mov    rsi,QWORD PTR [rsp+0x70]
   14002bc2e:	mov    rdi,QWORD PTR [rsp+0x78]
   14002bc33:	add    rsp,0x50
   14002bc37:	pop    r14
   14002bc39:	ret    
   14002bc3a:	mov    rdx,r9
   14002bc3d:	lea    rcx,[rsp+0x30]
   14002bc42:	call   0x1400288e8
   14002bc47:	mov    rax,QWORD PTR [rsp+0x38]
   14002bc4c:	cmp    QWORD PTR [rax+0x138],r14
   14002bc53:	jne    0x14002bc6a
   14002bc55:	test   rdi,rdi
   14002bc58:	je     0x14002bc60
   14002bc5a:	movzx  eax,BYTE PTR [rsi]
   14002bc5d:	mov    WORD PTR [rdi],ax
   14002bc60:	mov    ebx,0x1
   14002bc65:	jmp    0x14002bd0e
   14002bc6a:	movzx  ecx,BYTE PTR [rsi]
   14002bc6d:	lea    rdx,[rsp+0x38]
   14002bc72:	call   0x14002e7cc
   14002bc77:	mov    ebx,0x1
   14002bc7c:	test   eax,eax
   14002bc7e:	je     0x14002bcd1
   14002bc80:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bc85:	mov    r9d,DWORD PTR [rcx+0x8]
   14002bc89:	cmp    r9d,ebx
   14002bc8c:	jle    0x14002bcbd
   14002bc8e:	cmp    ebp,r9d
   14002bc91:	jl     0x14002bcbd
   14002bc93:	mov    ecx,DWORD PTR [rcx+0xc]
   14002bc96:	lea    edx,[rbx+0x8]
   14002bc99:	mov    eax,r14d
   14002bc9c:	test   rdi,rdi
   14002bc9f:	mov    r8,rsi
   14002bca2:	setne  al
   14002bca5:	mov    DWORD PTR [rsp+0x28],eax
   14002bca9:	mov    QWORD PTR [rsp+0x20],rdi
   14002bcae:	call   QWORD PTR [rip+0x640c]        # 0x1400320c0
   14002bcb4:	mov    rcx,QWORD PTR [rsp+0x38]
   14002bcb9:	test   eax,eax
   14002bcbb:	jne    0x14002bccc
   14002bcbd:	movsxd rax,DWORD PTR [rcx+0x8]
   14002bcc1:	cmp    rbp,rax
   14002bcc4:	jb     0x14002bd00
   14002bcc6:	cmp    BYTE PTR [rsi+0x1],r14b
   14002bcca:	je     0x14002bd00
   14002bccc:	mov    ebx,DWORD PTR [rcx+0x8]
   14002bccf:	jmp    0x14002bd0e
   14002bcd1:	mov    eax,r14d
   14002bcd4:	test   rdi,rdi
   14002bcd7:	mov    r9d,ebx
   14002bcda:	mov    r8,rsi
   14002bcdd:	setne  al
   14002bce0:	mov    edx,0x9
   14002bce5:	mov    DWORD PTR [rsp+0x28],eax
   14002bce9:	mov    rax,QWORD PTR [rsp+0x38]
   14002bcee:	mov    QWORD PTR [rsp+0x20],rdi
   14002bcf3:	mov    ecx,DWORD PTR [rax+0xc]
   14002bcf6:	call   QWORD PTR [rip+0x63c4]        # 0x1400320c0
   14002bcfc:	test   eax,eax
   14002bcfe:	jne    0x14002bd0e
   14002bd00:	call   0x14002a494
   14002bd05:	or     ebx,0xffffffff
   14002bd08:	mov    DWORD PTR [rax],0x2a
   14002bd0e:	cmp    BYTE PTR [rsp+0x48],r14b
   14002bd13:	je     0x14002bd21
   14002bd15:	mov    rcx,QWORD PTR [rsp+0x30]
   14002bd1a:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002bd21:	mov    eax,ebx
   14002bd23:	jmp    0x14002bc1f
   14002bd28:	xor    r9d,r9d
   14002bd2b:	jmp    0x14002bbe0
   14002bd30:	rex push rbx
   14002bd32:	sub    rsp,0x20
   14002bd36:	mov    rax,QWORD PTR [rip+0x1d193]        # 0x140048ed0
   14002bd3d:	mov    rbx,rdx
   14002bd40:	cmp    QWORD PTR [rdx],rax
   14002bd43:	je     0x14002bd5b
   14002bd45:	mov    eax,DWORD PTR [rcx+0x3a8]
   14002bd4b:	test   DWORD PTR [rip+0x1ad4f],eax        # 0x140046aa0
   14002bd51:	jne    0x14002bd5b
   14002bd53:	call   0x14002e298
   14002bd58:	mov    QWORD PTR [rbx],rax
   14002bd5b:	add    rsp,0x20
   14002bd5f:	pop    rbx
   14002bd60:	ret    
   14002bd61:	int3   
   14002bd62:	int3   
   14002bd63:	int3   
   14002bd64:	rex push rbx
   14002bd66:	sub    rsp,0x20
   14002bd6a:	mov    rax,QWORD PTR [rip+0x1a977]        # 0x1400466e8
   14002bd71:	mov    rbx,rdx
   14002bd74:	cmp    QWORD PTR [rdx],rax
   14002bd77:	je     0x14002bd8f
   14002bd79:	mov    eax,DWORD PTR [rcx+0x3a8]
   14002bd7f:	test   DWORD PTR [rip+0x1ad1b],eax        # 0x140046aa0
   14002bd85:	jne    0x14002bd8f
   14002bd87:	call   0x14002ca68
   14002bd8c:	mov    QWORD PTR [rbx],rax
   14002bd8f:	add    rsp,0x20
   14002bd93:	pop    rbx
   14002bd94:	ret    
   14002bd95:	int3   
   14002bd96:	int3   
   14002bd97:	int3   
   14002bd98:	cmp    rcx,rdx
   14002bd9b:	jae    0x14002bda1
   14002bd9d:	or     eax,0xffffffff
   14002bda0:	ret    
   14002bda1:	xor    eax,eax
   14002bda3:	cmp    rcx,rdx
   14002bda6:	seta   al
   14002bda9:	ret    
   14002bdaa:	int3   
   14002bdab:	int3   
   14002bdac:	mov    QWORD PTR [rsp+0x8],rbx
   14002bdb1:	mov    QWORD PTR [rsp+0x10],rdx
   14002bdb6:	push   rbp
   14002bdb7:	push   rsi
   14002bdb8:	push   rdi
   14002bdb9:	push   r12
   14002bdbb:	push   r13
   14002bdbd:	push   r14
   14002bdbf:	push   r15
   14002bdc1:	mov    rbp,rsp
   14002bdc4:	sub    rsp,0x60
   14002bdc8:	xor    edi,edi
   14002bdca:	mov    rbx,rcx
   14002bdcd:	test   rdx,rdx
   14002bdd0:	jne    0x14002bde8
   14002bdd2:	call   0x14002a494
   14002bdd7:	lea    ebx,[rdi+0x16]
   14002bdda:	mov    DWORD PTR [rax],ebx
   14002bddc:	call   0x1400281ac
   14002bde1:	mov    eax,ebx
   14002bde3:	jmp    0x14002bf88
   14002bde8:	xorps  xmm0,xmm0
   14002bdeb:	mov    QWORD PTR [rdx],rdi
   14002bdee:	cmp    QWORD PTR [rcx],rdi
   14002bdf1:	movdqu XMMWORD PTR [rbp-0x20],xmm0
   14002bdf6:	mov    QWORD PTR [rbp-0x10],rdi
   14002bdfa:	je     0x14002be53
   14002bdfc:	mov    rcx,QWORD PTR [rbx]
   14002bdff:	lea    rdx,[rbp+0x50]
   14002be03:	mov    WORD PTR [rbp+0x50],0x3f2a
   14002be09:	mov    BYTE PTR [rbp+0x52],dil
   14002be0d:	call   0x14002f0d8
   14002be12:	mov    rcx,QWORD PTR [rbx]
   14002be15:	test   rax,rax
   14002be18:	jne    0x14002be2a
   14002be1a:	lea    r9,[rbp-0x20]
   14002be1e:	xor    r8d,r8d
   14002be21:	xor    edx,edx
   14002be23:	call   0x14002bfb8
   14002be28:	jmp    0x14002be36
   14002be2a:	lea    r8,[rbp-0x20]
   14002be2e:	mov    rdx,rax
   14002be31:	call   0x14002c0c8
   14002be36:	mov    r14d,eax
   14002be39:	test   eax,eax
   14002be3b:	jne    0x14002be46
   14002be3d:	add    rbx,0x8
   14002be41:	cmp    QWORD PTR [rbx],rdi
   14002be44:	jmp    0x14002bdfa
   14002be46:	mov    r12,QWORD PTR [rbp-0x18]
   14002be4a:	mov    rsi,QWORD PTR [rbp-0x20]
   14002be4e:	jmp    0x14002bf4c
   14002be53:	mov    rsi,QWORD PTR [rbp-0x20]
   14002be57:	mov    r9,rdi
   14002be5a:	mov    r12,QWORD PTR [rbp-0x18]
   14002be5e:	mov    rdx,rsi
   14002be61:	mov    rax,r12
   14002be64:	mov    QWORD PTR [rbp+0x50],rdi
   14002be68:	sub    rax,rsi
   14002be6b:	mov    r8,rdi
   14002be6e:	mov    r15,rax
   14002be71:	sar    r15,0x3
   14002be75:	inc    r15
   14002be78:	lea    rcx,[rax+0x7]
   14002be7c:	shr    rcx,0x3
   14002be80:	cmp    rsi,r12
   14002be83:	cmova  rcx,rdi
   14002be87:	or     r14,0xffffffffffffffff
   14002be8b:	test   rcx,rcx
   14002be8e:	je     0x14002beb5
   14002be90:	mov    r10,QWORD PTR [rdx]
   14002be93:	mov    rax,r14
   14002be96:	inc    rax
   14002be99:	cmp    BYTE PTR [r10+rax*1],dil
   14002be9d:	jne    0x14002be96
   14002be9f:	inc    r9
   14002bea2:	add    rdx,0x8
   14002bea6:	add    r9,rax
   14002bea9:	inc    r8
   14002beac:	cmp    r8,rcx
   14002beaf:	jne    0x14002be90
   14002beb1:	mov    QWORD PTR [rbp+0x50],r9
   14002beb5:	mov    r8d,0x1
   14002bebb:	mov    rdx,r9
   14002bebe:	mov    rcx,r15
   14002bec1:	call   0x140028f78
   14002bec6:	mov    rbx,rax
   14002bec9:	test   rax,rax
   14002becc:	je     0x14002bf45
   14002bece:	lea    rdx,[rax+r15*8]
   14002bed2:	mov    r15,rsi
   14002bed5:	mov    QWORD PTR [rbp-0x28],rdx
   14002bed9:	mov    rax,rdx
   14002bedc:	mov    QWORD PTR [rbp+0x58],rdx
   14002bee0:	cmp    rsi,r12
   14002bee3:	je     0x14002bf3b
   14002bee5:	mov    rcx,rbx
   14002bee8:	sub    rcx,rsi
   14002beeb:	mov    QWORD PTR [rbp-0x30],rcx
   14002beef:	mov    r8,QWORD PTR [r15]
   14002bef2:	mov    r13,r14
   14002bef5:	inc    r13
   14002bef8:	cmp    BYTE PTR [r8+r13*1],dil
   14002befc:	jne    0x14002bef5
   14002befe:	sub    rdx,rax
   14002bf01:	inc    r13
   14002bf04:	add    rdx,QWORD PTR [rbp+0x50]
   14002bf08:	mov    r9,r13
   14002bf0b:	mov    rcx,rax
   14002bf0e:	call   0x14002f004
   14002bf13:	test   eax,eax
   14002bf15:	jne    0x14002bfa0
   14002bf1b:	mov    rax,QWORD PTR [rbp+0x58]
   14002bf1f:	mov    rcx,QWORD PTR [rbp-0x30]
   14002bf23:	mov    rdx,QWORD PTR [rbp-0x28]
   14002bf27:	mov    QWORD PTR [rcx+r15*1],rax
   14002bf2b:	add    rax,r13
   14002bf2e:	add    r15,0x8
   14002bf32:	mov    QWORD PTR [rbp+0x58],rax
   14002bf36:	cmp    r15,r12
   14002bf39:	jne    0x14002beef
   14002bf3b:	mov    rax,QWORD PTR [rbp+0x48]
   14002bf3f:	mov    r14d,edi
   14002bf42:	mov    QWORD PTR [rax],rbx
   14002bf45:	xor    ecx,ecx
   14002bf47:	call   0x140007bd0
   14002bf4c:	mov    rbx,r12
   14002bf4f:	mov    r15,rsi
   14002bf52:	sub    rbx,rsi
   14002bf55:	add    rbx,0x7
   14002bf59:	shr    rbx,0x3
   14002bf5d:	cmp    rsi,r12
   14002bf60:	cmova  rbx,rdi
   14002bf64:	test   rbx,rbx
   14002bf67:	je     0x14002bf7d
   14002bf69:	mov    rcx,QWORD PTR [r15]
   14002bf6c:	call   0x140007bd0
   14002bf71:	inc    rdi
   14002bf74:	lea    r15,[r15+0x8]
   14002bf78:	cmp    rdi,rbx
   14002bf7b:	jne    0x14002bf69
   14002bf7d:	mov    rcx,rsi
   14002bf80:	call   0x140007bd0
   14002bf85:	mov    eax,r14d
   14002bf88:	mov    rbx,QWORD PTR [rsp+0xa0]
   14002bf90:	add    rsp,0x60
   14002bf94:	pop    r15
   14002bf96:	pop    r14
   14002bf98:	pop    r13
   14002bf9a:	pop    r12
   14002bf9c:	pop    rdi
   14002bf9d:	pop    rsi
   14002bf9e:	pop    rbp
   14002bf9f:	ret    
   14002bfa0:	xor    r9d,r9d
   14002bfa3:	mov    QWORD PTR [rsp+0x20],rdi
   14002bfa8:	xor    r8d,r8d
   14002bfab:	xor    edx,edx
   14002bfad:	xor    ecx,ecx
   14002bfaf:	call   0x1400281cc
   14002bfb4:	int3   
   14002bfb5:	int3   
   14002bfb6:	int3   
   14002bfb7:	int3   
   14002bfb8:	mov    rax,rsp
   14002bfbb:	mov    QWORD PTR [rax+0x8],rbx
   14002bfbf:	mov    QWORD PTR [rax+0x10],rbp
   14002bfc3:	mov    QWORD PTR [rax+0x18],rsi
   14002bfc7:	mov    QWORD PTR [rax+0x20],rdi
   14002bfcb:	push   r12
   14002bfcd:	push   r14
   14002bfcf:	push   r15
   14002bfd1:	sub    rsp,0x30
   14002bfd5:	or     rax,0xffffffffffffffff
   14002bfd9:	mov    rsi,r9
   14002bfdc:	mov    rdi,rax
   14002bfdf:	mov    rbp,r8
   14002bfe2:	mov    r12,rdx
   14002bfe5:	mov    r15,rcx
   14002bfe8:	inc    rdi
   14002bfeb:	cmp    BYTE PTR [rcx+rdi*1],0x0
   14002bfef:	jne    0x14002bfe8
   14002bff1:	mov    edx,0x1
   14002bff6:	sub    rax,r8
   14002bff9:	add    rdi,rdx
   14002bffc:	cmp    rdi,rax
   14002bfff:	jbe    0x14002c023
   14002c001:	lea    eax,[rdx+0xb]
   14002c004:	mov    rbx,QWORD PTR [rsp+0x50]
   14002c009:	mov    rbp,QWORD PTR [rsp+0x58]
   14002c00e:	mov    rsi,QWORD PTR [rsp+0x60]
   14002c013:	mov    rdi,QWORD PTR [rsp+0x68]
   14002c018:	add    rsp,0x30
   14002c01c:	pop    r15
   14002c01e:	pop    r14
   14002c020:	pop    r12
   14002c022:	ret    
   14002c023:	lea    r14,[r8+0x1]
   14002c027:	add    r14,rdi
   14002c02a:	mov    rcx,r14
   14002c02d:	call   0x140007c20
   14002c032:	mov    rbx,rax
   14002c035:	test   rbp,rbp
   14002c038:	je     0x14002c04f
   14002c03a:	mov    r9,rbp
   14002c03d:	mov    r8,r12
   14002c040:	mov    rdx,r14
   14002c043:	mov    rcx,rax
   14002c046:	call   0x14002f004
   14002c04b:	test   eax,eax
   14002c04d:	jne    0x14002c09c
   14002c04f:	sub    r14,rbp
   14002c052:	lea    rcx,[rbx+rbp*1]
   14002c056:	mov    rdx,r14
   14002c059:	mov    r9,rdi
   14002c05c:	mov    r8,r15
   14002c05f:	call   0x14002f004
   14002c064:	test   eax,eax
   14002c066:	jne    0x14002c0b2
   14002c068:	mov    rcx,rsi
   14002c06b:	call   0x14002c274
   14002c070:	mov    edi,eax
   14002c072:	test   eax,eax
   14002c074:	je     0x14002c080
   14002c076:	mov    rcx,rbx
   14002c079:	call   0x140007bd0
   14002c07e:	jmp    0x14002c08e
   14002c080:	mov    rax,QWORD PTR [rsi+0x8]
   14002c084:	mov    QWORD PTR [rax],rbx
   14002c087:	add    QWORD PTR [rsi+0x8],0x8
   14002c08c:	xor    edi,edi
   14002c08e:	xor    ecx,ecx
   14002c090:	call   0x140007bd0
   14002c095:	mov    eax,edi
   14002c097:	jmp    0x14002c004
   14002c09c:	and    QWORD PTR [rsp+0x20],0x0
   14002c0a2:	xor    r9d,r9d
   14002c0a5:	xor    r8d,r8d
   14002c0a8:	xor    edx,edx
   14002c0aa:	xor    ecx,ecx
   14002c0ac:	call   0x1400281cc
   14002c0b1:	int3   
   14002c0b2:	and    QWORD PTR [rsp+0x20],0x0
   14002c0b8:	xor    r9d,r9d
   14002c0bb:	xor    r8d,r8d
   14002c0be:	xor    edx,edx
   14002c0c0:	xor    ecx,ecx
   14002c0c2:	call   0x1400281cc
   14002c0c7:	int3   
   14002c0c8:	mov    QWORD PTR [rsp+0x20],rbx
   14002c0cd:	push   rbp
   14002c0ce:	push   rsi
   14002c0cf:	push   rdi
   14002c0d0:	push   r14
   14002c0d2:	push   r15
   14002c0d4:	sub    rsp,0x180
   14002c0db:	mov    rax,QWORD PTR [rip+0x1a106]        # 0x1400461e8
   14002c0e2:	xor    rax,rsp
   14002c0e5:	mov    QWORD PTR [rsp+0x170],rax
   14002c0ed:	mov    r14,r8
   14002c0f0:	mov    rsi,rcx
   14002c0f3:	movabs rbx,0x200000000801
   14002c0fd:	cmp    rdx,rcx
   14002c100:	je     0x14002c124
   14002c102:	mov    al,BYTE PTR [rdx]
   14002c104:	sub    al,0x2f
   14002c106:	cmp    al,0x2d
   14002c108:	ja     0x14002c114
   14002c10a:	movsx  rax,al
   14002c10e:	bt     rbx,rax
   14002c112:	jb     0x14002c124
   14002c114:	mov    rcx,rsi
   14002c117:	call   0x14002f178
   14002c11c:	mov    rdx,rax
   14002c11f:	cmp    rax,rsi
   14002c122:	jne    0x14002c102
   14002c124:	mov    cl,BYTE PTR [rdx]
   14002c126:	cmp    cl,0x3a
   14002c129:	jne    0x14002c149
   14002c12b:	lea    rax,[rsi+0x1]
   14002c12f:	cmp    rdx,rax
   14002c132:	je     0x14002c149
   14002c134:	mov    r9,r14
   14002c137:	xor    r8d,r8d
   14002c13a:	xor    edx,edx
   14002c13c:	mov    rcx,rsi
   14002c13f:	call   0x14002bfb8
   14002c144:	jmp    0x14002c1ca
   14002c149:	sub    cl,0x2f
   14002c14c:	xor    edi,edi
   14002c14e:	cmp    cl,0x2d
   14002c151:	ja     0x14002c160
   14002c153:	movsx  rax,cl
   14002c157:	bt     rbx,rax
   14002c15b:	lea    eax,[rdi+0x1]
   14002c15e:	jb     0x14002c162
   14002c160:	mov    eax,edi
   14002c162:	sub    rdx,rsi
   14002c165:	lea    rcx,[rsp+0x30]
   14002c16a:	inc    rdx
   14002c16d:	mov    r8d,0x140
   14002c173:	neg    al
   14002c175:	sbb    r15,r15
   14002c178:	and    r15,rdx
   14002c17b:	xor    edx,edx
   14002c17d:	call   0x1400277b0
   14002c182:	xor    r9d,r9d
   14002c185:	mov    DWORD PTR [rsp+0x28],edi
   14002c189:	lea    r8,[rsp+0x30]
   14002c18e:	mov    QWORD PTR [rsp+0x20],rdi
   14002c193:	xor    edx,edx
   14002c195:	mov    rcx,rsi
   14002c198:	call   QWORD PTR [rip+0x5eca]        # 0x140032068
   14002c19e:	mov    rbx,rax
   14002c1a1:	cmp    rax,0xffffffffffffffff
   14002c1a5:	jne    0x14002c1f1
   14002c1a7:	mov    r9,r14
   14002c1aa:	xor    r8d,r8d
   14002c1ad:	xor    edx,edx
   14002c1af:	mov    rcx,rsi
   14002c1b2:	call   0x14002bfb8
   14002c1b7:	mov    edi,eax
   14002c1b9:	cmp    rbx,0xffffffffffffffff
   14002c1bd:	je     0x14002c1c8
   14002c1bf:	mov    rcx,rbx
   14002c1c2:	call   QWORD PTR [rip+0x5e38]        # 0x140032000
   14002c1c8:	mov    eax,edi
   14002c1ca:	mov    rcx,QWORD PTR [rsp+0x170]
   14002c1d2:	xor    rcx,rsp
   14002c1d5:	call   0x140030a30
   14002c1da:	mov    rbx,QWORD PTR [rsp+0x1c8]
   14002c1e2:	add    rsp,0x180
   14002c1e9:	pop    r15
   14002c1eb:	pop    r14
   14002c1ed:	pop    rdi
   14002c1ee:	pop    rsi
   14002c1ef:	pop    rbp
   14002c1f0:	ret    
   14002c1f1:	mov    rbp,QWORD PTR [r14+0x8]
   14002c1f5:	sub    rbp,QWORD PTR [r14]
   14002c1f8:	sar    rbp,0x3
   14002c1fc:	cmp    BYTE PTR [rsp+0x5c],0x2e
   14002c201:	jne    0x14002c216
   14002c203:	mov    al,BYTE PTR [rsp+0x5d]
   14002c207:	test   al,al
   14002c209:	je     0x14002c22d
   14002c20b:	cmp    al,0x2e
   14002c20d:	jne    0x14002c216
   14002c20f:	cmp    BYTE PTR [rsp+0x5e],dil
   14002c214:	je     0x14002c22d
   14002c216:	mov    r9,r14
   14002c219:	lea    rcx,[rsp+0x5c]
   14002c21e:	mov    r8,r15
   14002c221:	mov    rdx,rsi
   14002c224:	call   0x14002bfb8
   14002c229:	test   eax,eax
   14002c22b:	jne    0x14002c1b7
   14002c22d:	lea    rdx,[rsp+0x30]
   14002c232:	mov    rcx,rbx
   14002c235:	call   QWORD PTR [rip+0x5e25]        # 0x140032060
   14002c23b:	test   eax,eax
   14002c23d:	jne    0x14002c1fc
   14002c23f:	mov    rax,QWORD PTR [r14]
   14002c242:	mov    rdx,QWORD PTR [r14+0x8]
   14002c246:	sub    rdx,rax
   14002c249:	sar    rdx,0x3
   14002c24d:	cmp    rbp,rdx
   14002c250:	je     0x14002c1b9
   14002c256:	sub    rdx,rbp
   14002c259:	lea    rcx,[rax+rbp*8]
   14002c25d:	lea    r9,[rip+0xfffffffffffffb34]        # 0x14002bd98
   14002c264:	mov    r8d,0x8
   14002c26a:	call   0x14002ecd0
   14002c26f:	jmp    0x14002c1b9
   14002c274:	mov    QWORD PTR [rsp+0x8],rbx
   14002c279:	mov    QWORD PTR [rsp+0x10],rbp
   14002c27e:	mov    QWORD PTR [rsp+0x18],rsi
   14002c283:	push   rdi
   14002c284:	sub    rsp,0x20
   14002c288:	mov    rsi,QWORD PTR [rcx+0x10]
   14002c28c:	mov    rdi,rcx
   14002c28f:	cmp    QWORD PTR [rcx+0x8],rsi
   14002c293:	je     0x14002c29c
   14002c295:	xor    eax,eax
   14002c297:	jmp    0x14002c326
   14002c29c:	xor    ebx,ebx
   14002c29e:	cmp    QWORD PTR [rcx],rbx
   14002c2a1:	jne    0x14002c2d5
   14002c2a3:	lea    edx,[rbx+0x8]
   14002c2a6:	lea    ecx,[rbx+0x4]
   14002c2a9:	call   0x140007c20
   14002c2ae:	xor    ecx,ecx
   14002c2b0:	mov    QWORD PTR [rdi],rax
   14002c2b3:	call   0x140007bd0
   14002c2b8:	mov    rax,QWORD PTR [rdi]
   14002c2bb:	test   rax,rax
   14002c2be:	jne    0x14002c2c7
   14002c2c0:	mov    eax,0xc
   14002c2c5:	jmp    0x14002c326
   14002c2c7:	mov    QWORD PTR [rdi+0x8],rax
   14002c2cb:	add    rax,0x20
   14002c2cf:	mov    QWORD PTR [rdi+0x10],rax
   14002c2d3:	jmp    0x14002c295
   14002c2d5:	sub    rsi,QWORD PTR [rcx]
   14002c2d8:	movabs rax,0x7fffffffffffffff
   14002c2e2:	sar    rsi,0x3
   14002c2e6:	cmp    rsi,rax
   14002c2e9:	ja     0x14002c2c0
   14002c2eb:	mov    rcx,QWORD PTR [rcx]
   14002c2ee:	lea    rbp,[rsi+rsi*1]
   14002c2f2:	mov    rdx,rbp
   14002c2f5:	mov    r8d,0x8
   14002c2fb:	call   0x140007c70
   14002c300:	test   rax,rax
   14002c303:	jne    0x14002c30a
   14002c305:	lea    ebx,[rax+0xc]
   14002c308:	jmp    0x14002c31d
   14002c30a:	lea    rcx,[rax+rsi*8]
   14002c30e:	mov    QWORD PTR [rdi],rax
   14002c311:	mov    QWORD PTR [rdi+0x8],rcx
   14002c315:	lea    rcx,[rax+rbp*8]
   14002c319:	mov    QWORD PTR [rdi+0x10],rcx
   14002c31d:	xor    ecx,ecx
   14002c31f:	call   0x140007bd0
   14002c324:	mov    eax,ebx
   14002c326:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c32b:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c330:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c335:	add    rsp,0x20
   14002c339:	pop    rdi
   14002c33a:	ret    
   14002c33b:	int3   
   14002c33c:	jmp    0x14002bdac
   14002c341:	int3   
   14002c342:	int3   
   14002c343:	int3   
   14002c344:	mov    QWORD PTR [rsp+0x8],rbx
   14002c349:	mov    QWORD PTR [rsp+0x20],r9
   14002c34e:	push   rdi
   14002c34f:	sub    rsp,0x20
   14002c353:	mov    rbx,r9
   14002c356:	mov    rdi,r8
   14002c359:	mov    ecx,DWORD PTR [rdx]
   14002c35b:	call   0x14002af28
   14002c360:	nop
   14002c361:	mov    rcx,rdi
   14002c364:	call   0x14002c37c
   14002c369:	nop
   14002c36a:	mov    ecx,DWORD PTR [rbx]
   14002c36c:	call   0x14002af7c
   14002c371:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c376:	add    rsp,0x20
   14002c37a:	pop    rdi
   14002c37b:	ret    
   14002c37c:	mov    QWORD PTR [rsp+0x8],rbx
   14002c381:	mov    QWORD PTR [rsp+0x10],rsi
   14002c386:	push   rdi
   14002c387:	sub    rsp,0x20
   14002c38b:	mov    rax,QWORD PTR [rcx]
   14002c38e:	mov    rbx,rcx
   14002c391:	mov    rdx,QWORD PTR [rax]
   14002c394:	mov    rax,QWORD PTR [rdx+0x88]
   14002c39b:	mov    edx,DWORD PTR [rax+0x4]
   14002c39e:	mov    DWORD PTR [rip+0x1cb34],edx        # 0x140048ed8
   14002c3a4:	mov    rax,QWORD PTR [rcx]
   14002c3a7:	mov    rdx,QWORD PTR [rax]
   14002c3aa:	mov    rax,QWORD PTR [rdx+0x88]
   14002c3b1:	mov    edx,DWORD PTR [rax+0x8]
   14002c3b4:	mov    DWORD PTR [rip+0x1cb22],edx        # 0x140048edc
   14002c3ba:	mov    rax,QWORD PTR [rcx]
   14002c3bd:	mov    rdx,QWORD PTR [rax]
   14002c3c0:	mov    rax,QWORD PTR [rdx+0x88]
   14002c3c7:	mov    rcx,QWORD PTR [rax+0x220]
   14002c3ce:	mov    QWORD PTR [rip+0x1cb1b],rcx        # 0x140048ef0
   14002c3d5:	mov    rax,QWORD PTR [rbx]
   14002c3d8:	mov    rcx,QWORD PTR [rax]
   14002c3db:	mov    rax,QWORD PTR [rcx+0x88]
   14002c3e2:	add    rax,0xc
   14002c3e6:	je     0x14002c3ff
   14002c3e8:	movsd  xmm0,QWORD PTR [rax]
   14002c3ec:	movsd  QWORD PTR [rip+0x1caec],xmm0        # 0x140048ee0
   14002c3f4:	mov    eax,DWORD PTR [rax+0x8]
   14002c3f7:	mov    DWORD PTR [rip+0x1caeb],eax        # 0x140048ee8
   14002c3fd:	jmp    0x14002c41e
   14002c3ff:	xor    eax,eax
   14002c401:	mov    QWORD PTR [rip+0x1cad8],rax        # 0x140048ee0
   14002c408:	mov    DWORD PTR [rip+0x1cada],eax        # 0x140048ee8
   14002c40e:	call   0x14002a494
   14002c413:	mov    DWORD PTR [rax],0x16
   14002c419:	call   0x1400281ac
   14002c41e:	mov    rax,QWORD PTR [rbx]
   14002c421:	mov    edi,0x2
   14002c426:	mov    rcx,QWORD PTR [rax]
   14002c429:	lea    esi,[rdi+0x7e]
   14002c42c:	mov    rax,QWORD PTR [rcx+0x88]
   14002c433:	lea    rcx,[rip+0x1a3b6]        # 0x1400467f0
   14002c43a:	add    rax,0x18
   14002c43e:	je     0x14002c492
   14002c440:	mov    edx,edi
   14002c442:	movups xmm0,XMMWORD PTR [rax]
   14002c445:	movups XMMWORD PTR [rcx],xmm0
   14002c448:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c44c:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c450:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002c454:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002c458:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002c45c:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002c460:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002c464:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002c468:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002c46c:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002c470:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002c474:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002c478:	add    rcx,rsi
   14002c47b:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002c47f:	add    rax,rsi
   14002c482:	movups XMMWORD PTR [rcx-0x10],xmm1
   14002c486:	sub    rdx,0x1
   14002c48a:	jne    0x14002c442
   14002c48c:	mov    al,BYTE PTR [rax]
   14002c48e:	mov    BYTE PTR [rcx],al
   14002c490:	jmp    0x14002c4af
   14002c492:	xor    edx,edx
   14002c494:	mov    r8d,0x101
   14002c49a:	call   0x1400277b0
   14002c49f:	call   0x14002a494
   14002c4a4:	mov    DWORD PTR [rax],0x16
   14002c4aa:	call   0x1400281ac
   14002c4af:	mov    rax,QWORD PTR [rbx]
   14002c4b2:	mov    rcx,QWORD PTR [rax]
   14002c4b5:	mov    rax,QWORD PTR [rcx+0x88]
   14002c4bc:	lea    rcx,[rip+0x1a43d]        # 0x140046900
   14002c4c3:	add    rax,0x119
   14002c4c9:	je     0x14002c517
   14002c4cb:	movups xmm0,XMMWORD PTR [rax]
   14002c4ce:	movups XMMWORD PTR [rcx],xmm0
   14002c4d1:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c4d5:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c4d9:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002c4dd:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002c4e1:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002c4e5:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002c4e9:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002c4ed:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002c4f1:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002c4f5:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002c4f9:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002c4fd:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002c501:	add    rcx,rsi
   14002c504:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002c508:	add    rax,rsi
   14002c50b:	movups XMMWORD PTR [rcx-0x10],xmm1
   14002c50f:	sub    rdi,0x1
   14002c513:	jne    0x14002c4cb
   14002c515:	jmp    0x14002c534
   14002c517:	xor    edx,edx
   14002c519:	mov    r8d,0x100
   14002c51f:	call   0x1400277b0
   14002c524:	call   0x14002a494
   14002c529:	mov    DWORD PTR [rax],0x16
   14002c52f:	call   0x1400281ac
   14002c534:	mov    rcx,QWORD PTR [rip+0x1a1ad]        # 0x1400466e8
   14002c53b:	or     eax,0xffffffff
   14002c53e:	lock xadd DWORD PTR [rcx],eax
   14002c542:	cmp    eax,0x1
   14002c545:	jne    0x14002c55f
   14002c547:	mov    rcx,QWORD PTR [rip+0x1a19a]        # 0x1400466e8
   14002c54e:	lea    rax,[rip+0x19f6b]        # 0x1400464c0
   14002c555:	cmp    rcx,rax
   14002c558:	je     0x14002c55f
   14002c55a:	call   0x140007bd0
   14002c55f:	mov    rax,QWORD PTR [rbx]
   14002c562:	mov    rcx,QWORD PTR [rax]
   14002c565:	mov    rax,QWORD PTR [rcx+0x88]
   14002c56c:	mov    QWORD PTR [rip+0x1a175],rax        # 0x1400466e8
   14002c573:	mov    rax,QWORD PTR [rbx]
   14002c576:	mov    rcx,QWORD PTR [rax]
   14002c579:	mov    rax,QWORD PTR [rcx+0x88]
   14002c580:	lock inc DWORD PTR [rax]
   14002c583:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c588:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c58d:	add    rsp,0x20
   14002c591:	pop    rdi
   14002c592:	ret    
   14002c593:	int3   
   14002c594:	rex push rbx
   14002c596:	sub    rsp,0x40
   14002c59a:	mov    ebx,ecx
   14002c59c:	xor    edx,edx
   14002c59e:	lea    rcx,[rsp+0x20]
   14002c5a3:	call   0x1400288e8
   14002c5a8:	and    DWORD PTR [rip+0x1c93d],0x0        # 0x140048eec
   14002c5af:	cmp    ebx,0xfffffffe
   14002c5b2:	jne    0x14002c5c6
   14002c5b4:	mov    DWORD PTR [rip+0x1c92e],0x1        # 0x140048eec
   14002c5be:	call   QWORD PTR [rip+0x5a8c]        # 0x140032050
   14002c5c4:	jmp    0x14002c5db
   14002c5c6:	cmp    ebx,0xfffffffd
   14002c5c9:	jne    0x14002c5df
   14002c5cb:	mov    DWORD PTR [rip+0x1c917],0x1        # 0x140048eec
   14002c5d5:	call   QWORD PTR [rip+0x5abd]        # 0x140032098
   14002c5db:	mov    ebx,eax
   14002c5dd:	jmp    0x14002c5f6
   14002c5df:	cmp    ebx,0xfffffffc
   14002c5e2:	jne    0x14002c5f6
   14002c5e4:	mov    rax,QWORD PTR [rsp+0x28]
   14002c5e9:	mov    DWORD PTR [rip+0x1c8f9],0x1        # 0x140048eec
   14002c5f3:	mov    ebx,DWORD PTR [rax+0xc]
   14002c5f6:	cmp    BYTE PTR [rsp+0x38],0x0
   14002c5fb:	je     0x14002c609
   14002c5fd:	mov    rcx,QWORD PTR [rsp+0x20]
   14002c602:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002c609:	mov    eax,ebx
   14002c60b:	add    rsp,0x40
   14002c60f:	pop    rbx
   14002c610:	ret    
   14002c611:	int3   
   14002c612:	int3   
   14002c613:	int3   
   14002c614:	mov    QWORD PTR [rsp+0x8],rbx
   14002c619:	mov    QWORD PTR [rsp+0x10],rbp
   14002c61e:	mov    QWORD PTR [rsp+0x18],rsi
   14002c623:	push   rdi
   14002c624:	sub    rsp,0x20
   14002c628:	lea    rbx,[rcx+0x18]
   14002c62c:	mov    rsi,rcx
   14002c62f:	mov    ebp,0x101
   14002c634:	mov    rcx,rbx
   14002c637:	mov    r8d,ebp
   14002c63a:	xor    edx,edx
   14002c63c:	call   0x1400277b0
   14002c641:	xor    eax,eax
   14002c643:	lea    rdi,[rsi+0xc]
   14002c647:	mov    QWORD PTR [rsi+0x4],rax
   14002c64b:	mov    ecx,0x6
   14002c650:	mov    QWORD PTR [rsi+0x220],rax
   14002c657:	movzx  eax,ax
   14002c65a:	rep stos WORD PTR es:[rdi],ax
   14002c65d:	lea    rdi,[rip+0x19e5c]        # 0x1400464c0
   14002c664:	sub    rdi,rsi
   14002c667:	mov    al,BYTE PTR [rdi+rbx*1]
   14002c66a:	mov    BYTE PTR [rbx],al
   14002c66c:	inc    rbx
   14002c66f:	sub    rbp,0x1
   14002c673:	jne    0x14002c667
   14002c675:	lea    rcx,[rsi+0x119]
   14002c67c:	mov    edx,0x100
   14002c681:	mov    al,BYTE PTR [rcx+rdi*1]
   14002c684:	mov    BYTE PTR [rcx],al
   14002c686:	inc    rcx
   14002c689:	sub    rdx,0x1
   14002c68d:	jne    0x14002c681
   14002c68f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c694:	mov    rbp,QWORD PTR [rsp+0x38]
   14002c699:	mov    rsi,QWORD PTR [rsp+0x40]
   14002c69e:	add    rsp,0x20
   14002c6a2:	pop    rdi
   14002c6a3:	ret    
   14002c6a4:	mov    QWORD PTR [rsp+0x10],rbx
   14002c6a9:	mov    QWORD PTR [rsp+0x18],rdi
   14002c6ae:	push   rbp
   14002c6af:	lea    rbp,[rsp-0x680]
   14002c6b7:	sub    rsp,0x780
   14002c6be:	mov    rax,QWORD PTR [rip+0x19b23]        # 0x1400461e8
   14002c6c5:	xor    rax,rsp
   14002c6c8:	mov    QWORD PTR [rbp+0x670],rax
   14002c6cf:	mov    rdi,rcx
   14002c6d2:	lea    rdx,[rsp+0x50]
   14002c6d7:	mov    ecx,DWORD PTR [rcx+0x4]
   14002c6da:	call   QWORD PTR [rip+0x5968]        # 0x140032048
   14002c6e0:	mov    ebx,0x100
   14002c6e5:	test   eax,eax
   14002c6e7:	je     0x14002c823
   14002c6ed:	xor    eax,eax
   14002c6ef:	lea    rcx,[rsp+0x70]
   14002c6f4:	mov    BYTE PTR [rcx],al
   14002c6f6:	inc    eax
   14002c6f8:	inc    rcx
   14002c6fb:	cmp    eax,ebx
   14002c6fd:	jb     0x14002c6f4
   14002c6ff:	mov    al,BYTE PTR [rsp+0x56]
   14002c703:	lea    rdx,[rsp+0x56]
   14002c708:	mov    BYTE PTR [rsp+0x70],0x20
   14002c70d:	jmp    0x14002c731
   14002c70f:	movzx  r8d,BYTE PTR [rdx+0x1]
   14002c714:	movzx  ecx,al
   14002c717:	jmp    0x14002c726
   14002c719:	cmp    ecx,ebx
   14002c71b:	jae    0x14002c72b
   14002c71d:	mov    eax,ecx
   14002c71f:	mov    BYTE PTR [rsp+rcx*1+0x70],0x20
   14002c724:	inc    ecx
   14002c726:	cmp    ecx,r8d
   14002c729:	jbe    0x14002c719
   14002c72b:	add    rdx,0x2
   14002c72f:	mov    al,BYTE PTR [rdx]
   14002c731:	test   al,al
   14002c733:	jne    0x14002c70f
   14002c735:	mov    eax,DWORD PTR [rdi+0x4]
   14002c738:	lea    r8,[rsp+0x70]
   14002c73d:	and    DWORD PTR [rsp+0x30],0x0
   14002c742:	mov    r9d,ebx
   14002c745:	mov    DWORD PTR [rsp+0x28],eax
   14002c749:	mov    edx,0x1
   14002c74e:	lea    rax,[rbp+0x270]
   14002c755:	xor    ecx,ecx
   14002c757:	mov    QWORD PTR [rsp+0x20],rax
   14002c75c:	call   0x14002ddb0
   14002c761:	and    DWORD PTR [rsp+0x40],0x0
   14002c766:	lea    r9,[rsp+0x70]
   14002c76b:	mov    eax,DWORD PTR [rdi+0x4]
   14002c76e:	mov    r8d,ebx
   14002c771:	mov    rdx,QWORD PTR [rdi+0x220]
   14002c778:	xor    ecx,ecx
   14002c77a:	mov    DWORD PTR [rsp+0x38],eax
   14002c77e:	lea    rax,[rbp+0x70]
   14002c782:	mov    DWORD PTR [rsp+0x30],ebx
   14002c786:	mov    QWORD PTR [rsp+0x28],rax
   14002c78b:	mov    DWORD PTR [rsp+0x20],ebx
   14002c78f:	call   0x14002eb68
   14002c794:	and    DWORD PTR [rsp+0x40],0x0
   14002c799:	lea    r9,[rsp+0x70]
   14002c79e:	mov    eax,DWORD PTR [rdi+0x4]
   14002c7a1:	mov    r8d,0x200
   14002c7a7:	mov    rdx,QWORD PTR [rdi+0x220]
   14002c7ae:	xor    ecx,ecx
   14002c7b0:	mov    DWORD PTR [rsp+0x38],eax
   14002c7b4:	lea    rax,[rbp+0x170]
   14002c7bb:	mov    DWORD PTR [rsp+0x30],ebx
   14002c7bf:	mov    QWORD PTR [rsp+0x28],rax
   14002c7c4:	mov    DWORD PTR [rsp+0x20],ebx
   14002c7c8:	call   0x14002eb68
   14002c7cd:	lea    r8,[rbp+0x70]
   14002c7d1:	sub    r8,rdi
   14002c7d4:	lea    r9,[rbp+0x170]
   14002c7db:	sub    r9,rdi
   14002c7de:	lea    rdx,[rbp+0x270]
   14002c7e5:	lea    rcx,[rdi+0x19]
   14002c7e9:	test   BYTE PTR [rdx],0x1
   14002c7ec:	je     0x14002c7f8
   14002c7ee:	or     BYTE PTR [rcx],0x10
   14002c7f1:	mov    al,BYTE PTR [r8+rcx*1-0x19]
   14002c7f6:	jmp    0x14002c805
   14002c7f8:	test   BYTE PTR [rdx],0x2
   14002c7fb:	je     0x14002c80d
   14002c7fd:	or     BYTE PTR [rcx],0x20
   14002c800:	mov    al,BYTE PTR [r9+rcx*1-0x19]
   14002c805:	mov    BYTE PTR [rcx+0x100],al
   14002c80b:	jmp    0x14002c814
   14002c80d:	mov    BYTE PTR [rcx+0x100],0x0
   14002c814:	inc    rcx
   14002c817:	add    rdx,0x2
   14002c81b:	sub    rbx,0x1
   14002c81f:	jne    0x14002c7e9
   14002c821:	jmp    0x14002c862
   14002c823:	xor    edx,edx
   14002c825:	lea    rcx,[rdi+0x19]
   14002c829:	lea    r8d,[rdx-0x61]
   14002c82d:	lea    eax,[r8+0x20]
   14002c831:	cmp    eax,0x19
   14002c834:	ja     0x14002c83e
   14002c836:	or     BYTE PTR [rcx],0x10
   14002c839:	lea    eax,[rdx+0x20]
   14002c83c:	jmp    0x14002c84a
   14002c83e:	cmp    r8d,0x19
   14002c842:	ja     0x14002c852
   14002c844:	or     BYTE PTR [rcx],0x20
   14002c847:	lea    eax,[rdx-0x20]
   14002c84a:	mov    BYTE PTR [rcx+0x100],al
   14002c850:	jmp    0x14002c859
   14002c852:	mov    BYTE PTR [rcx+0x100],0x0
   14002c859:	inc    edx
   14002c85b:	inc    rcx
   14002c85e:	cmp    edx,ebx
   14002c860:	jb     0x14002c829
   14002c862:	mov    rcx,QWORD PTR [rbp+0x670]
   14002c869:	xor    rcx,rsp
   14002c86c:	call   0x140030a30
   14002c871:	lea    r11,[rsp+0x780]
   14002c879:	mov    rbx,QWORD PTR [r11+0x18]
   14002c87d:	mov    rdi,QWORD PTR [r11+0x20]
   14002c881:	mov    rsp,r11
   14002c884:	pop    rbp
   14002c885:	ret    
   14002c886:	int3   
   14002c887:	int3   
   14002c888:	mov    QWORD PTR [rsp+0x8],rbx
   14002c88d:	push   rbp
   14002c88e:	push   rsi
   14002c88f:	push   rdi
   14002c890:	mov    rbp,rsp
   14002c893:	sub    rsp,0x40
   14002c897:	mov    sil,dl
   14002c89a:	mov    ebx,ecx
   14002c89c:	call   0x14002a248
   14002c8a1:	mov    QWORD PTR [rbp-0x18],rax
   14002c8a5:	call   0x14002ca68
   14002c8aa:	mov    ecx,ebx
   14002c8ac:	call   0x14002c594
   14002c8b1:	mov    rcx,QWORD PTR [rbp-0x18]
   14002c8b5:	mov    edi,eax
   14002c8b7:	mov    r8,QWORD PTR [rcx+0x88]
   14002c8be:	cmp    eax,DWORD PTR [r8+0x4]
   14002c8c2:	jne    0x14002c8cb
   14002c8c4:	xor    eax,eax
   14002c8c6:	jmp    0x14002c983
   14002c8cb:	mov    ecx,0x228
   14002c8d0:	call   0x140007bf0
   14002c8d5:	mov    rbx,rax
   14002c8d8:	test   rax,rax
   14002c8db:	je     0x14002c976
   14002c8e1:	mov    rax,QWORD PTR [rbp-0x18]
   14002c8e5:	mov    edx,0x4
   14002c8ea:	mov    rcx,rbx
   14002c8ed:	mov    rax,QWORD PTR [rax+0x88]
   14002c8f4:	lea    r8d,[rdx+0x7c]
   14002c8f8:	movups xmm0,XMMWORD PTR [rax]
   14002c8fb:	movups XMMWORD PTR [rcx],xmm0
   14002c8fe:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c902:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c906:	movups xmm0,XMMWORD PTR [rax+0x20]
   14002c90a:	movups XMMWORD PTR [rcx+0x20],xmm0
   14002c90e:	movups xmm1,XMMWORD PTR [rax+0x30]
   14002c912:	movups XMMWORD PTR [rcx+0x30],xmm1
   14002c916:	movups xmm0,XMMWORD PTR [rax+0x40]
   14002c91a:	movups XMMWORD PTR [rcx+0x40],xmm0
   14002c91e:	movups xmm1,XMMWORD PTR [rax+0x50]
   14002c922:	movups XMMWORD PTR [rcx+0x50],xmm1
   14002c926:	movups xmm0,XMMWORD PTR [rax+0x60]
   14002c92a:	movups XMMWORD PTR [rcx+0x60],xmm0
   14002c92e:	add    rcx,r8
   14002c931:	movups xmm1,XMMWORD PTR [rax+0x70]
   14002c935:	add    rax,r8
   14002c938:	movups XMMWORD PTR [rcx-0x10],xmm1
   14002c93c:	sub    rdx,0x1
   14002c940:	jne    0x14002c8f8
   14002c942:	movups xmm0,XMMWORD PTR [rax]
   14002c945:	movups XMMWORD PTR [rcx],xmm0
   14002c948:	movups xmm1,XMMWORD PTR [rax+0x10]
   14002c94c:	movups XMMWORD PTR [rcx+0x10],xmm1
   14002c950:	mov    rax,QWORD PTR [rax+0x20]
   14002c954:	mov    QWORD PTR [rcx+0x20],rax
   14002c958:	mov    ecx,edi
   14002c95a:	and    DWORD PTR [rbx],edx
   14002c95c:	mov    rdx,rbx
   14002c95f:	call   0x14002cb28
   14002c964:	mov    edi,eax
   14002c966:	cmp    eax,0xffffffff
   14002c969:	jne    0x14002c990
   14002c96b:	call   0x14002a494
   14002c970:	mov    DWORD PTR [rax],0x16
   14002c976:	or     edi,0xffffffff
   14002c979:	mov    rcx,rbx
   14002c97c:	call   0x140007bd0
   14002c981:	mov    eax,edi
   14002c983:	mov    rbx,QWORD PTR [rsp+0x60]
   14002c988:	add    rsp,0x40
   14002c98c:	pop    rdi
   14002c98d:	pop    rsi
   14002c98e:	pop    rbp
   14002c98f:	ret    
   14002c990:	test   sil,sil
   14002c993:	jne    0x14002c99a
   14002c995:	call   0x140029c9c
   14002c99a:	mov    rax,QWORD PTR [rbp-0x18]
   14002c99e:	mov    rcx,QWORD PTR [rax+0x88]
   14002c9a5:	or     eax,0xffffffff
   14002c9a8:	lock xadd DWORD PTR [rcx],eax
   14002c9ac:	cmp    eax,0x1
   14002c9af:	jne    0x14002c9cd
   14002c9b1:	mov    rax,QWORD PTR [rbp-0x18]
   14002c9b5:	mov    rcx,QWORD PTR [rax+0x88]
   14002c9bc:	lea    rax,[rip+0x19afd]        # 0x1400464c0
   14002c9c3:	cmp    rcx,rax
   14002c9c6:	je     0x14002c9cd
   14002c9c8:	call   0x140007bd0
   14002c9cd:	mov    DWORD PTR [rbx],0x1
   14002c9d3:	mov    rcx,rbx
   14002c9d6:	mov    rax,QWORD PTR [rbp-0x18]
   14002c9da:	xor    ebx,ebx
   14002c9dc:	mov    QWORD PTR [rax+0x88],rcx
   14002c9e3:	mov    rax,QWORD PTR [rbp-0x18]
   14002c9e7:	test   BYTE PTR [rax+0x3a8],0x2
   14002c9ee:	jne    0x14002c979
   14002c9f0:	test   BYTE PTR [rip+0x1a0a9],0x1        # 0x140046aa0
   14002c9f7:	jne    0x14002c979
   14002c9f9:	lea    rax,[rbp-0x18]
   14002c9fd:	mov    QWORD PTR [rbp-0x10],rax
   14002ca01:	lea    r9,[rbp+0x38]
   14002ca05:	lea    eax,[rbx+0x5]
   14002ca08:	lea    r8,[rbp-0x10]
   14002ca0c:	mov    DWORD PTR [rbp+0x38],eax
   14002ca0f:	lea    rdx,[rbp-0x20]
   14002ca13:	mov    DWORD PTR [rbp-0x20],eax
   14002ca16:	lea    rcx,[rbp+0x30]
   14002ca1a:	call   0x14002c344
   14002ca1f:	mov    rax,QWORD PTR [rip+0x19a8a]        # 0x1400464b0
   14002ca26:	test   sil,sil
   14002ca29:	cmovne rax,QWORD PTR [rip+0x19cb7]        # 0x1400466e8
   14002ca31:	mov    QWORD PTR [rip+0x19a78],rax        # 0x1400464b0
   14002ca38:	jmp    0x14002c979
   14002ca3d:	int3   
   14002ca3e:	int3   
   14002ca3f:	int3   
   14002ca40:	sub    rsp,0x28
   14002ca44:	cmp    BYTE PTR [rip+0x1c4ad],0x0        # 0x140048ef8
   14002ca4b:	jne    0x14002ca60
   14002ca4d:	mov    dl,0x1
   14002ca4f:	mov    ecx,0xfffffffd
   14002ca54:	call   0x14002c888
   14002ca59:	mov    BYTE PTR [rip+0x1c498],0x1        # 0x140048ef8
   14002ca60:	mov    al,0x1
   14002ca62:	add    rsp,0x28
   14002ca66:	ret    
   14002ca67:	int3   
   14002ca68:	mov    QWORD PTR [rsp+0x10],rbx
   14002ca6d:	push   rdi
   14002ca6e:	sub    rsp,0x20
   14002ca72:	call   0x14002a248
   14002ca77:	mov    rdi,rax
   14002ca7a:	mov    ecx,DWORD PTR [rip+0x1a020]        # 0x140046aa0
   14002ca80:	test   DWORD PTR [rax+0x3a8],ecx
   14002ca86:	je     0x14002ca9b
   14002ca88:	cmp    QWORD PTR [rax+0x90],0x0
   14002ca90:	je     0x14002ca9b
   14002ca92:	mov    rbx,QWORD PTR [rax+0x88]
   14002ca99:	jmp    0x14002cb0e
   14002ca9b:	mov    ecx,0x5
   14002caa0:	call   0x14002af28
   14002caa5:	nop
   14002caa6:	mov    rbx,QWORD PTR [rdi+0x88]
   14002caad:	mov    QWORD PTR [rsp+0x30],rbx
   14002cab2:	cmp    rbx,QWORD PTR [rip+0x19c2f]        # 0x1400466e8
   14002cab9:	je     0x14002cb04
   14002cabb:	test   rbx,rbx
   14002cabe:	je     0x14002cae2
   14002cac0:	or     eax,0xffffffff
   14002cac3:	lock xadd DWORD PTR [rbx],eax
   14002cac7:	cmp    eax,0x1
   14002caca:	jne    0x14002cae2
   14002cacc:	lea    rax,[rip+0x199ed]        # 0x1400464c0
   14002cad3:	mov    rcx,QWORD PTR [rsp+0x30]
   14002cad8:	cmp    rcx,rax
   14002cadb:	je     0x14002cae2
   14002cadd:	call   0x140007bd0
   14002cae2:	mov    rax,QWORD PTR [rip+0x19bff]        # 0x1400466e8
   14002cae9:	mov    QWORD PTR [rdi+0x88],rax
   14002caf0:	mov    rax,QWORD PTR [rip+0x19bf1]        # 0x1400466e8
   14002caf7:	mov    QWORD PTR [rsp+0x30],rax
   14002cafc:	lock inc DWORD PTR [rax]
   14002caff:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cb04:	mov    ecx,0x5
   14002cb09:	call   0x14002af7c
   14002cb0e:	test   rbx,rbx
   14002cb11:	jne    0x14002cb19
   14002cb13:	call   0x140029db8
   14002cb18:	int3   
   14002cb19:	mov    rax,rbx
   14002cb1c:	mov    rbx,QWORD PTR [rsp+0x38]
   14002cb21:	add    rsp,0x20
   14002cb25:	pop    rdi
   14002cb26:	ret    
   14002cb27:	int3   
   14002cb28:	mov    QWORD PTR [rsp+0x18],rbx
   14002cb2d:	mov    QWORD PTR [rsp+0x20],rbp
   14002cb32:	push   rsi
   14002cb33:	push   rdi
   14002cb34:	push   r12
   14002cb36:	push   r14
   14002cb38:	push   r15
   14002cb3a:	sub    rsp,0x40
   14002cb3e:	mov    rax,QWORD PTR [rip+0x196a3]        # 0x1400461e8
   14002cb45:	xor    rax,rsp
   14002cb48:	mov    QWORD PTR [rsp+0x38],rax
   14002cb4d:	mov    rbx,rdx
   14002cb50:	call   0x14002c594
   14002cb55:	xor    esi,esi
   14002cb57:	mov    edi,eax
   14002cb59:	test   eax,eax
   14002cb5b:	jne    0x14002cb6a
   14002cb5d:	mov    rcx,rbx
   14002cb60:	call   0x14002c614
   14002cb65:	jmp    0x14002cda7
   14002cb6a:	lea    r12,[rip+0x19b8f]        # 0x140046700
   14002cb71:	mov    ebp,esi
   14002cb73:	mov    rax,r12
   14002cb76:	mov    r15d,0x1
   14002cb7c:	cmp    DWORD PTR [rax],edi
   14002cb7e:	je     0x14002ccb4
   14002cb84:	add    ebp,r15d
   14002cb87:	add    rax,0x30
   14002cb8b:	cmp    ebp,0x5
   14002cb8e:	jb     0x14002cb7c
   14002cb90:	lea    eax,[rdi-0xfde8]
   14002cb96:	cmp    eax,r15d
   14002cb99:	jbe    0x14002ccac
   14002cb9f:	movzx  ecx,di
   14002cba2:	call   QWORD PTR [rip+0x54b0]        # 0x140032058
   14002cba8:	test   eax,eax
   14002cbaa:	je     0x14002ccac
   14002cbb0:	lea    rdx,[rsp+0x20]
   14002cbb5:	mov    ecx,edi
   14002cbb7:	call   QWORD PTR [rip+0x548b]        # 0x140032048
   14002cbbd:	test   eax,eax
   14002cbbf:	je     0x14002cca0
   14002cbc5:	lea    rcx,[rbx+0x18]
   14002cbc9:	xor    edx,edx
   14002cbcb:	mov    r8d,0x101
   14002cbd1:	call   0x1400277b0
   14002cbd6:	mov    DWORD PTR [rbx+0x4],edi
   14002cbd9:	mov    QWORD PTR [rbx+0x220],rsi
   14002cbe0:	cmp    DWORD PTR [rsp+0x20],r15d
   14002cbe5:	jbe    0x14002cc89
   14002cbeb:	lea    rcx,[rsp+0x26]
   14002cbf0:	cmp    BYTE PTR [rsp+0x26],sil
   14002cbf5:	je     0x14002cc27
   14002cbf7:	cmp    BYTE PTR [rcx+0x1],sil
   14002cbfb:	je     0x14002cc27
   14002cbfd:	movzx  eax,BYTE PTR [rcx+0x1]
   14002cc01:	movzx  edx,BYTE PTR [rcx]
   14002cc04:	cmp    edx,eax
   14002cc06:	ja     0x14002cc1e
   14002cc08:	sub    eax,edx
   14002cc0a:	lea    edi,[rdx+0x1]
   14002cc0d:	lea    edx,[r15+rax*1]
   14002cc11:	or     BYTE PTR [rdi+rbx*1+0x18],0x4
   14002cc16:	add    edi,r15d
   14002cc19:	sub    rdx,r15
   14002cc1c:	jne    0x14002cc11
   14002cc1e:	add    rcx,0x2
   14002cc22:	cmp    BYTE PTR [rcx],sil
   14002cc25:	jne    0x14002cbf7
   14002cc27:	lea    rax,[rbx+0x1a]
   14002cc2b:	mov    ecx,0xfe
   14002cc30:	or     BYTE PTR [rax],0x8
   14002cc33:	add    rax,r15
   14002cc36:	sub    rcx,r15
   14002cc39:	jne    0x14002cc30
   14002cc3b:	mov    ecx,DWORD PTR [rbx+0x4]
   14002cc3e:	sub    ecx,0x3a4
   14002cc44:	je     0x14002cc75
   14002cc46:	sub    ecx,0x4
   14002cc49:	je     0x14002cc6c
   14002cc4b:	sub    ecx,0xd
   14002cc4e:	je     0x14002cc63
   14002cc50:	cmp    ecx,r15d
   14002cc53:	je     0x14002cc5a
   14002cc55:	mov    rax,rsi
   14002cc58:	jmp    0x14002cc7c
   14002cc5a:	mov    rax,QWORD PTR [rip+0xd0cf]        # 0x140039d30
   14002cc61:	jmp    0x14002cc7c
   14002cc63:	mov    rax,QWORD PTR [rip+0xd0be]        # 0x140039d28
   14002cc6a:	jmp    0x14002cc7c
   14002cc6c:	mov    rax,QWORD PTR [rip+0xd0ad]        # 0x140039d20
   14002cc73:	jmp    0x14002cc7c
   14002cc75:	mov    rax,QWORD PTR [rip+0xd09c]        # 0x140039d18
   14002cc7c:	mov    QWORD PTR [rbx+0x220],rax
   14002cc83:	mov    DWORD PTR [rbx+0x8],r15d
   14002cc87:	jmp    0x14002cc8c
   14002cc89:	mov    DWORD PTR [rbx+0x8],esi
   14002cc8c:	lea    rdi,[rbx+0xc]
   14002cc90:	movzx  eax,si
   14002cc93:	mov    ecx,0x6
   14002cc98:	rep stos WORD PTR es:[rdi],ax
   14002cc9b:	jmp    0x14002cd9f
   14002cca0:	cmp    DWORD PTR [rip+0x1c246],esi        # 0x140048eec
   14002cca6:	jne    0x14002cb5d
   14002ccac:	or     eax,0xffffffff
   14002ccaf:	jmp    0x14002cda9
   14002ccb4:	lea    rcx,[rbx+0x18]
   14002ccb8:	xor    edx,edx
   14002ccba:	mov    r8d,0x101
   14002ccc0:	call   0x1400277b0
   14002ccc5:	mov    eax,ebp
   14002ccc7:	lea    r9,[r12+0x10]
   14002cccc:	lea    r14,[rip+0x19a1d]        # 0x1400466f0
   14002ccd3:	mov    ebp,0x4
   14002ccd8:	lea    r11,[rax+rax*2]
   14002ccdc:	shl    r11,0x4
   14002cce0:	add    r9,r11
   14002cce3:	mov    rdx,r9
   14002cce6:	cmp    BYTE PTR [r9],sil
   14002cce9:	je     0x14002cd2b
   14002cceb:	cmp    BYTE PTR [rdx+0x1],sil
   14002ccef:	je     0x14002cd2b
   14002ccf1:	movzx  r8d,BYTE PTR [rdx]
   14002ccf5:	movzx  eax,BYTE PTR [rdx+0x1]
   14002ccf9:	cmp    r8d,eax
   14002ccfc:	ja     0x14002cd22
   14002ccfe:	lea    r10d,[r8+0x1]
   14002cd02:	cmp    r10d,0x101
   14002cd09:	jae    0x14002cd22
   14002cd0b:	mov    al,BYTE PTR [r14]
   14002cd0e:	add    r8d,r15d
   14002cd11:	or     BYTE PTR [r10+rbx*1+0x18],al
   14002cd16:	add    r10d,r15d
   14002cd19:	movzx  eax,BYTE PTR [rdx+0x1]
   14002cd1d:	cmp    r8d,eax
   14002cd20:	jbe    0x14002cd02
   14002cd22:	add    rdx,0x2
   14002cd26:	cmp    BYTE PTR [rdx],sil
   14002cd29:	jne    0x14002cceb
   14002cd2b:	add    r9,0x8
   14002cd2f:	add    r14,r15
   14002cd32:	sub    rbp,r15
   14002cd35:	jne    0x14002cce3
   14002cd37:	mov    DWORD PTR [rbx+0x4],edi
   14002cd3a:	mov    DWORD PTR [rbx+0x8],r15d
   14002cd3e:	sub    edi,0x3a4
   14002cd44:	je     0x14002cd70
   14002cd46:	sub    edi,0x4
   14002cd49:	je     0x14002cd67
   14002cd4b:	sub    edi,0xd
   14002cd4e:	je     0x14002cd5e
   14002cd50:	cmp    edi,r15d
   14002cd53:	jne    0x14002cd77
   14002cd55:	mov    rsi,QWORD PTR [rip+0xcfd4]        # 0x140039d30
   14002cd5c:	jmp    0x14002cd77
   14002cd5e:	mov    rsi,QWORD PTR [rip+0xcfc3]        # 0x140039d28
   14002cd65:	jmp    0x14002cd77
   14002cd67:	mov    rsi,QWORD PTR [rip+0xcfb2]        # 0x140039d20
   14002cd6e:	jmp    0x14002cd77
   14002cd70:	mov    rsi,QWORD PTR [rip+0xcfa1]        # 0x140039d18
   14002cd77:	sub    r11,rbx
   14002cd7a:	mov    QWORD PTR [rbx+0x220],rsi
   14002cd81:	lea    rcx,[rbx+0xc]
   14002cd85:	mov    edx,0x6
   14002cd8a:	lea    rdi,[r11+r12*1]
   14002cd8e:	movzx  eax,WORD PTR [rdi+rcx*1-0x8]
   14002cd93:	mov    WORD PTR [rcx],ax
   14002cd96:	lea    rcx,[rcx+0x2]
   14002cd9a:	sub    rdx,r15
   14002cd9d:	jne    0x14002cd8e
   14002cd9f:	mov    rcx,rbx
   14002cda2:	call   0x14002c6a4
   14002cda7:	xor    eax,eax
   14002cda9:	mov    rcx,QWORD PTR [rsp+0x38]
   14002cdae:	xor    rcx,rsp
   14002cdb1:	call   0x140030a30
   14002cdb6:	lea    r11,[rsp+0x40]
   14002cdbb:	mov    rbx,QWORD PTR [r11+0x40]
   14002cdbf:	mov    rbp,QWORD PTR [r11+0x48]
   14002cdc3:	mov    rsp,r11
   14002cdc6:	pop    r15
   14002cdc8:	pop    r14
   14002cdca:	pop    r12
   14002cdcc:	pop    rdi
   14002cdcd:	pop    rsi
   14002cdce:	ret    
   14002cdcf:	int3   
   14002cdd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002cdd5:	mov    QWORD PTR [rsp+0x10],rsi
   14002cdda:	push   rdi
   14002cddb:	sub    rsp,0x40
   14002cddf:	mov    ebx,edx
   14002cde1:	mov    edi,r9d
   14002cde4:	mov    rdx,rcx
   14002cde7:	mov    esi,r8d
   14002cdea:	lea    rcx,[rsp+0x20]
   14002cdef:	call   0x1400288e8
   14002cdf4:	mov    rax,QWORD PTR [rsp+0x30]
   14002cdf9:	movzx  edx,bl
   14002cdfc:	test   BYTE PTR [rdx+rax*1+0x19],dil
   14002ce01:	jne    0x14002ce1d
   14002ce03:	test   esi,esi
   14002ce05:	je     0x14002ce17
   14002ce07:	mov    rax,QWORD PTR [rsp+0x28]
   14002ce0c:	mov    rcx,QWORD PTR [rax]
   14002ce0f:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002ce13:	and    eax,esi
   14002ce15:	jmp    0x14002ce19
   14002ce17:	xor    eax,eax
   14002ce19:	test   eax,eax
   14002ce1b:	je     0x14002ce22
   14002ce1d:	mov    eax,0x1
   14002ce22:	cmp    BYTE PTR [rsp+0x38],0x0
   14002ce27:	je     0x14002ce35
   14002ce29:	mov    rcx,QWORD PTR [rsp+0x20]
   14002ce2e:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002ce35:	mov    rbx,QWORD PTR [rsp+0x50]
   14002ce3a:	mov    rsi,QWORD PTR [rsp+0x58]
   14002ce3f:	add    rsp,0x40
   14002ce43:	pop    rdi
   14002ce44:	ret    
   14002ce45:	int3   
   14002ce46:	int3   
   14002ce47:	int3   
   14002ce48:	mov    edx,ecx
   14002ce4a:	mov    r9d,0x4
   14002ce50:	xor    ecx,ecx
   14002ce52:	xor    r8d,r8d
   14002ce55:	jmp    0x14002cdd0
   14002ce5a:	int3   
   14002ce5b:	int3   
   14002ce5c:	mov    rax,rsp
   14002ce5f:	mov    QWORD PTR [rax+0x8],rbx
   14002ce63:	mov    QWORD PTR [rax+0x10],rbp
   14002ce67:	mov    QWORD PTR [rax+0x18],rsi
   14002ce6b:	mov    QWORD PTR [rax+0x20],rdi
   14002ce6f:	push   r14
   14002ce71:	sub    rsp,0x40
   14002ce75:	call   QWORD PTR [rip+0x51c5]        # 0x140032040
   14002ce7b:	xor    r14d,r14d
   14002ce7e:	mov    rbx,rax
   14002ce81:	test   rax,rax
   14002ce84:	je     0x14002cf30
   14002ce8a:	mov    rsi,rax
   14002ce8d:	cmp    WORD PTR [rax],r14w
   14002ce91:	je     0x14002ceaf
   14002ce93:	or     rax,0xffffffffffffffff
   14002ce97:	inc    rax
   14002ce9a:	cmp    WORD PTR [rsi+rax*2],r14w
   14002ce9f:	jne    0x14002ce97
   14002cea1:	lea    rsi,[rsi+rax*2]
   14002cea5:	add    rsi,0x2
   14002cea9:	cmp    WORD PTR [rsi],r14w
   14002cead:	jne    0x14002ce93
   14002ceaf:	mov    QWORD PTR [rsp+0x38],r14
   14002ceb4:	sub    rsi,rbx
   14002ceb7:	mov    QWORD PTR [rsp+0x30],r14
   14002cebc:	add    rsi,0x2
   14002cec0:	sar    rsi,1
   14002cec3:	mov    r8,rbx
   14002cec6:	mov    r9d,esi
   14002cec9:	mov    DWORD PTR [rsp+0x28],r14d
   14002cece:	xor    edx,edx
   14002ced0:	mov    QWORD PTR [rsp+0x20],r14
   14002ced5:	xor    ecx,ecx
   14002ced7:	call   QWORD PTR [rip+0x51db]        # 0x1400320b8
   14002cedd:	movsxd rbp,eax
   14002cee0:	test   eax,eax
   14002cee2:	je     0x14002cf30
   14002cee4:	mov    rcx,rbp
   14002cee7:	call   0x140007bf0
   14002ceec:	mov    rdi,rax
   14002ceef:	test   rax,rax
   14002cef2:	je     0x14002cf23
   14002cef4:	mov    QWORD PTR [rsp+0x38],r14
   14002cef9:	mov    r9d,esi
   14002cefc:	mov    QWORD PTR [rsp+0x30],r14
   14002cf01:	mov    r8,rbx
   14002cf04:	mov    DWORD PTR [rsp+0x28],ebp
   14002cf08:	xor    edx,edx
   14002cf0a:	xor    ecx,ecx
   14002cf0c:	mov    QWORD PTR [rsp+0x20],rax
   14002cf11:	call   QWORD PTR [rip+0x51a1]        # 0x1400320b8
   14002cf17:	test   eax,eax
   14002cf19:	je     0x14002cf23
   14002cf1b:	mov    rsi,rdi
   14002cf1e:	mov    rdi,r14
   14002cf21:	jmp    0x14002cf26
   14002cf23:	mov    rsi,r14
   14002cf26:	mov    rcx,rdi
   14002cf29:	call   0x140007bd0
   14002cf2e:	jmp    0x14002cf33
   14002cf30:	mov    rsi,r14
   14002cf33:	test   rbx,rbx
   14002cf36:	je     0x14002cf41
   14002cf38:	mov    rcx,rbx
   14002cf3b:	call   QWORD PTR [rip+0x50f7]        # 0x140032038
   14002cf41:	mov    rbx,QWORD PTR [rsp+0x50]
   14002cf46:	mov    rax,rsi
   14002cf49:	mov    rsi,QWORD PTR [rsp+0x60]
   14002cf4e:	mov    rbp,QWORD PTR [rsp+0x58]
   14002cf53:	mov    rdi,QWORD PTR [rsp+0x68]
   14002cf58:	add    rsp,0x40
   14002cf5c:	pop    r14
   14002cf5e:	ret    
   14002cf5f:	int3   
   14002cf60:	mov    QWORD PTR [rsp+0x18],rbx
   14002cf65:	mov    DWORD PTR [rsp+0x10],edx
   14002cf69:	push   rbp
   14002cf6a:	push   rsi
   14002cf6b:	push   rdi
   14002cf6c:	push   r12
   14002cf6e:	push   r13
   14002cf70:	push   r14
   14002cf72:	push   r15
   14002cf74:	sub    rsp,0x30
   14002cf78:	xor    esi,esi
   14002cf7a:	mov    ebx,edx
   14002cf7c:	mov    r15,rcx
   14002cf7f:	test   rcx,rcx
   14002cf82:	jne    0x14002cf98
   14002cf84:	call   0x14002a494
   14002cf89:	mov    DWORD PTR [rax],0x16
   14002cf8f:	or     rax,0xffffffffffffffff
   14002cf93:	jmp    0x14002d02c
   14002cf98:	mov    edx,0x3d
   14002cf9d:	mov    rdi,rcx
   14002cfa0:	call   0x140027a28
   14002cfa5:	mov    r13,rax
   14002cfa8:	test   rax,rax
   14002cfab:	je     0x14002d00b
   14002cfad:	cmp    rax,r15
   14002cfb0:	je     0x14002d00b
   14002cfb2:	cmp    BYTE PTR [rax+0x1],sil
   14002cfb6:	mov    r14,QWORD PTR [rip+0x1b68b]        # 0x140048648
   14002cfbd:	sete   bpl
   14002cfc1:	cmp    r14,QWORD PTR [rip+0x1b698]        # 0x140048660
   14002cfc8:	mov    BYTE PTR [rsp+0x70],bpl
   14002cfcd:	jne    0x14002cfe1
   14002cfcf:	mov    rcx,r14
   14002cfd2:	call   0x14002d250
   14002cfd7:	mov    r14,rax
   14002cfda:	mov    QWORD PTR [rip+0x1b667],rax        # 0x140048648
   14002cfe1:	mov    r12d,0x1
   14002cfe7:	test   r14,r14
   14002cfea:	jne    0x14002d0af
   14002cff0:	test   ebx,ebx
   14002cff2:	je     0x14002d044
   14002cff4:	cmp    QWORD PTR [rip+0x1b655],rsi        # 0x140048650
   14002cffb:	je     0x14002d044
   14002cffd:	call   0x140029454
   14002d002:	test   rax,rax
   14002d005:	jne    0x14002d0a3
   14002d00b:	call   0x14002a494
   14002d010:	or     rsi,0xffffffffffffffff
   14002d014:	mov    DWORD PTR [rax],0x16
   14002d01a:	mov    ebp,esi
   14002d01c:	mov    esi,ebp
   14002d01e:	mov    ebp,esi
   14002d020:	mov    esi,ebp
   14002d022:	mov    rcx,rdi
   14002d025:	call   0x140007bd0
   14002d02a:	mov    eax,esi
   14002d02c:	mov    rbx,QWORD PTR [rsp+0x80]
   14002d034:	add    rsp,0x30
   14002d038:	pop    r15
   14002d03a:	pop    r14
   14002d03c:	pop    r13
   14002d03e:	pop    r12
   14002d040:	pop    rdi
   14002d041:	pop    rsi
   14002d042:	pop    rbp
   14002d043:	ret    
   14002d044:	test   bpl,bpl
   14002d047:	jne    0x14002d01a
   14002d049:	mov    edx,0x8
   14002d04e:	mov    rcx,r12
   14002d051:	call   0x140007c20
   14002d056:	xor    ecx,ecx
   14002d058:	mov    QWORD PTR [rip+0x1b5e9],rax        # 0x140048648
   14002d05f:	call   0x140007bd0
   14002d064:	mov    r14,QWORD PTR [rip+0x1b5dd]        # 0x140048648
   14002d06b:	test   r14,r14
   14002d06e:	jne    0x14002d076
   14002d070:	or     rbp,0xffffffffffffffff
   14002d074:	jmp    0x14002d01c
   14002d076:	cmp    QWORD PTR [rip+0x1b5d3],rsi        # 0x140048650
   14002d07d:	jne    0x14002d0aa
   14002d07f:	mov    edx,0x8
   14002d084:	mov    rcx,r12
   14002d087:	call   0x140007c20
   14002d08c:	xor    ecx,ecx
   14002d08e:	mov    QWORD PTR [rip+0x1b5bb],rax        # 0x140048650
   14002d095:	call   0x140007bd0
   14002d09a:	cmp    QWORD PTR [rip+0x1b5af],rsi        # 0x140048650
   14002d0a1:	je     0x14002d070
   14002d0a3:	mov    r14,QWORD PTR [rip+0x1b59e]        # 0x140048648
   14002d0aa:	test   r14,r14
   14002d0ad:	je     0x14002d070
   14002d0af:	mov    r12,r13
   14002d0b2:	mov    rbx,r14
   14002d0b5:	sub    r12,r15
   14002d0b8:	cmp    QWORD PTR [r14],rsi
   14002d0bb:	je     0x14002d0f1
   14002d0bd:	mov    rdx,QWORD PTR [rbx]
   14002d0c0:	mov    r8,r12
   14002d0c3:	mov    rcx,r15
   14002d0c6:	call   0x14002f230
   14002d0cb:	test   eax,eax
   14002d0cd:	jne    0x14002d0df
   14002d0cf:	mov    rax,QWORD PTR [rbx]
   14002d0d2:	cmp    BYTE PTR [r12+rax*1],0x3d
   14002d0d7:	je     0x14002d0e8
   14002d0d9:	cmp    BYTE PTR [r12+rax*1],sil
   14002d0dd:	je     0x14002d0e8
   14002d0df:	add    rbx,0x8
   14002d0e3:	cmp    QWORD PTR [rbx],rsi
   14002d0e6:	jmp    0x14002d0bb
   14002d0e8:	sub    rbx,r14
   14002d0eb:	sar    rbx,0x3
   14002d0ef:	jmp    0x14002d0fb
   14002d0f1:	sub    rbx,r14
   14002d0f4:	sar    rbx,0x3
   14002d0f8:	neg    rbx
   14002d0fb:	test   rbx,rbx
   14002d0fe:	js     0x14002d157
   14002d100:	cmp    QWORD PTR [r14],rsi
   14002d103:	je     0x14002d157
   14002d105:	mov    rcx,QWORD PTR [r14+rbx*8]
   14002d109:	call   0x140007bd0
   14002d10e:	test   bpl,bpl
   14002d111:	jne    0x14002d128
   14002d113:	mov    QWORD PTR [r14+rbx*8],r15
   14002d117:	jmp    0x14002d1b1
   14002d11c:	mov    rax,QWORD PTR [r14+rbx*8+0x8]
   14002d121:	mov    QWORD PTR [r14+rbx*8],rax
   14002d125:	inc    rbx
   14002d128:	cmp    QWORD PTR [r14+rbx*8],rsi
   14002d12c:	jne    0x14002d11c
   14002d12e:	mov    r8d,0x8
   14002d134:	mov    rdx,rbx
   14002d137:	mov    rcx,r14
   14002d13a:	call   0x140007c70
   14002d13f:	xor    ecx,ecx
   14002d141:	mov    rbx,rax
   14002d144:	call   0x140007bd0
   14002d149:	test   rbx,rbx
   14002d14c:	je     0x14002d1b4
   14002d14e:	mov    QWORD PTR [rip+0x1b4f3],rbx        # 0x140048648
   14002d155:	jmp    0x14002d1b4
   14002d157:	test   bpl,bpl
   14002d15a:	jne    0x14002d01e
   14002d160:	neg    rbx
   14002d163:	lea    rdx,[rbx+0x2]
   14002d167:	cmp    rdx,rbx
   14002d16a:	jae    0x14002d175
   14002d16c:	or     rbp,0xffffffffffffffff
   14002d170:	jmp    0x14002d020
   14002d175:	movabs rax,0x1fffffffffffffff
   14002d17f:	cmp    rdx,rax
   14002d182:	jae    0x14002d16c
   14002d184:	mov    r8d,0x8
   14002d18a:	mov    rcx,r14
   14002d18d:	call   0x140007c70
   14002d192:	xor    ecx,ecx
   14002d194:	mov    r14,rax
   14002d197:	call   0x140007bd0
   14002d19c:	test   r14,r14
   14002d19f:	je     0x14002d16c
   14002d1a1:	mov    QWORD PTR [r14+rbx*8],r15
   14002d1a5:	mov    QWORD PTR [r14+rbx*8+0x8],rsi
   14002d1aa:	mov    QWORD PTR [rip+0x1b497],r14        # 0x140048648
   14002d1b1:	mov    rdi,rsi
   14002d1b4:	cmp    DWORD PTR [rsp+0x78],esi
   14002d1b8:	je     0x14002d022
   14002d1be:	or     rbp,0xffffffffffffffff
   14002d1c2:	mov    r14,rbp
   14002d1c5:	inc    r14
   14002d1c8:	cmp    BYTE PTR [r15+r14*1],sil
   14002d1cc:	jne    0x14002d1c5
   14002d1ce:	mov    edx,0x1
   14002d1d3:	lea    rcx,[r14+0x2]
   14002d1d7:	call   0x140007c20
   14002d1dc:	mov    rbx,rax
   14002d1df:	test   rax,rax
   14002d1e2:	je     0x14002d22b
   14002d1e4:	mov    r8,r15
   14002d1e7:	lea    rdx,[r14+0x2]
   14002d1eb:	mov    rcx,rax
   14002d1ee:	call   0x140029e10
   14002d1f3:	test   eax,eax
   14002d1f5:	jne    0x14002d238
   14002d1f7:	mov    rax,rbx
   14002d1fa:	lea    rdx,[r13+0x1]
   14002d1fe:	sub    rax,r15
   14002d201:	mov    rcx,rbx
   14002d204:	add    rdx,rax
   14002d207:	cmp    BYTE PTR [rsp+0x70],sil
   14002d20c:	mov    BYTE PTR [rdx-0x1],sil
   14002d210:	cmovne rdx,rsi
   14002d214:	call   QWORD PTR [rip+0x4e16]        # 0x140032030
   14002d21a:	test   eax,eax
   14002d21c:	jne    0x14002d22b
   14002d21e:	call   0x14002a494
   14002d223:	mov    esi,ebp
   14002d225:	mov    DWORD PTR [rax],0x2a
   14002d22b:	mov    rcx,rbx
   14002d22e:	call   0x140007bd0
   14002d233:	jmp    0x14002d022
   14002d238:	xor    r9d,r9d
   14002d23b:	mov    QWORD PTR [rsp+0x20],rsi
   14002d240:	xor    r8d,r8d
   14002d243:	xor    edx,edx
   14002d245:	xor    ecx,ecx
   14002d247:	call   0x1400281cc
   14002d24c:	int3   
   14002d24d:	int3   
   14002d24e:	int3   
   14002d24f:	int3   
   14002d250:	mov    QWORD PTR [rsp+0x8],rbx
   14002d255:	mov    QWORD PTR [rsp+0x10],rsi
   14002d25a:	mov    QWORD PTR [rsp+0x18],rdi
   14002d25f:	push   r14
   14002d261:	sub    rsp,0x30
   14002d265:	mov    rdi,rcx
   14002d268:	test   rcx,rcx
   14002d26b:	jne    0x14002d274
   14002d26d:	xor    eax,eax
   14002d26f:	jmp    0x14002d302
   14002d274:	xor    ecx,ecx
   14002d276:	mov    rax,rdi
   14002d279:	cmp    QWORD PTR [rdi],rcx
   14002d27c:	je     0x14002d28b
   14002d27e:	inc    rcx
   14002d281:	lea    rax,[rax+0x8]
   14002d285:	cmp    QWORD PTR [rax],0x0
   14002d289:	jne    0x14002d27e
   14002d28b:	inc    rcx
   14002d28e:	mov    edx,0x8
   14002d293:	call   0x140007c20
   14002d298:	mov    rbx,rax
   14002d29b:	test   rax,rax
   14002d29e:	je     0x14002d318
   14002d2a0:	cmp    QWORD PTR [rdi],0x0
   14002d2a4:	je     0x14002d2f8
   14002d2a6:	mov    r14,rax
   14002d2a9:	sub    r14,rdi
   14002d2ac:	mov    rax,QWORD PTR [rdi]
   14002d2af:	or     rsi,0xffffffffffffffff
   14002d2b3:	inc    rsi
   14002d2b6:	cmp    BYTE PTR [rax+rsi*1],0x0
   14002d2ba:	jne    0x14002d2b3
   14002d2bc:	mov    edx,0x1
   14002d2c1:	lea    rcx,[rsi+0x1]
   14002d2c5:	call   0x140007c20
   14002d2ca:	xor    ecx,ecx
   14002d2cc:	mov    QWORD PTR [r14+rdi*1],rax
   14002d2d0:	call   0x140007bd0
   14002d2d5:	mov    rcx,QWORD PTR [r14+rdi*1]
   14002d2d9:	test   rcx,rcx
   14002d2dc:	je     0x14002d334
   14002d2de:	mov    r8,QWORD PTR [rdi]
   14002d2e1:	lea    rdx,[rsi+0x1]
   14002d2e5:	call   0x140029e10
   14002d2ea:	test   eax,eax
   14002d2ec:	jne    0x14002d31e
   14002d2ee:	add    rdi,0x8
   14002d2f2:	cmp    QWORD PTR [rdi],0x0
   14002d2f6:	jne    0x14002d2ac
   14002d2f8:	xor    ecx,ecx
   14002d2fa:	call   0x140007bd0
   14002d2ff:	mov    rax,rbx
   14002d302:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d307:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d30c:	mov    rdi,QWORD PTR [rsp+0x50]
   14002d311:	add    rsp,0x30
   14002d315:	pop    r14
   14002d317:	ret    
   14002d318:	call   0x140029db8
   14002d31d:	int3   
   14002d31e:	and    QWORD PTR [rsp+0x20],0x0
   14002d324:	xor    r9d,r9d
   14002d327:	xor    r8d,r8d
   14002d32a:	xor    edx,edx
   14002d32c:	xor    ecx,ecx
   14002d32e:	call   0x1400281cc
   14002d333:	int3   
   14002d334:	call   0x140029db8
   14002d339:	int3   
   14002d33a:	int3   
   14002d33b:	int3   
   14002d33c:	jmp    0x14002cf60
   14002d341:	int3   
   14002d342:	int3   
   14002d343:	int3   
   14002d344:	sub    rsp,0x28
   14002d348:	call   QWORD PTR [rip+0x4cda]        # 0x140032028
   14002d34e:	test   rax,rax
   14002d351:	mov    QWORD PTR [rip+0x1bba8],rax        # 0x140048f00
   14002d358:	setne  al
   14002d35b:	add    rsp,0x28
   14002d35f:	ret    
   14002d360:	and    QWORD PTR [rip+0x1bb98],0x0        # 0x140048f00
   14002d368:	mov    al,0x1
   14002d36a:	ret    
   14002d36b:	int3   
   14002d36c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d371:	mov    QWORD PTR [rsp+0x10],rbp
   14002d376:	mov    QWORD PTR [rsp+0x18],rsi
   14002d37b:	push   rdi
   14002d37c:	sub    rsp,0x20
   14002d380:	mov    rsi,rdx
   14002d383:	mov    rdi,rcx
   14002d386:	cmp    rcx,rdx
   14002d389:	jne    0x14002d38f
   14002d38b:	mov    al,0x1
   14002d38d:	jmp    0x14002d3eb
   14002d38f:	mov    rbx,rcx
   14002d392:	mov    rbp,QWORD PTR [rbx]
   14002d395:	test   rbp,rbp
   14002d398:	je     0x14002d3a9
   14002d39a:	mov    rcx,rbp
   14002d39d:	call   QWORD PTR [rip+0x523d]        # 0x1400325e0
   14002d3a3:	call   rbp
   14002d3a5:	test   al,al
   14002d3a7:	je     0x14002d3b2
   14002d3a9:	add    rbx,0x10
   14002d3ad:	cmp    rbx,rsi
   14002d3b0:	jne    0x14002d392
   14002d3b2:	cmp    rbx,rsi
   14002d3b5:	je     0x14002d38b
   14002d3b7:	cmp    rbx,rdi
   14002d3ba:	je     0x14002d3e9
   14002d3bc:	add    rbx,0xfffffffffffffff8
   14002d3c0:	cmp    QWORD PTR [rbx-0x8],0x0
   14002d3c5:	je     0x14002d3dc
   14002d3c7:	mov    rsi,QWORD PTR [rbx]
   14002d3ca:	test   rsi,rsi
   14002d3cd:	je     0x14002d3dc
   14002d3cf:	mov    rcx,rsi
   14002d3d2:	call   QWORD PTR [rip+0x5208]        # 0x1400325e0
   14002d3d8:	xor    ecx,ecx
   14002d3da:	call   rsi
   14002d3dc:	sub    rbx,0x10
   14002d3e0:	lea    rax,[rbx+0x8]
   14002d3e4:	cmp    rax,rdi
   14002d3e7:	jne    0x14002d3c0
   14002d3e9:	xor    al,al
   14002d3eb:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d3f0:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d3f5:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d3fa:	add    rsp,0x20
   14002d3fe:	pop    rdi
   14002d3ff:	ret    
   14002d400:	mov    QWORD PTR [rsp+0x8],rbx
   14002d405:	mov    QWORD PTR [rsp+0x10],rsi
   14002d40a:	push   rdi
   14002d40b:	sub    rsp,0x20
   14002d40f:	mov    rsi,rcx
   14002d412:	cmp    rcx,rdx
   14002d415:	je     0x14002d43d
   14002d417:	lea    rbx,[rdx-0x8]
   14002d41b:	mov    rdi,QWORD PTR [rbx]
   14002d41e:	test   rdi,rdi
   14002d421:	je     0x14002d430
   14002d423:	mov    rcx,rdi
   14002d426:	call   QWORD PTR [rip+0x51b4]        # 0x1400325e0
   14002d42c:	xor    ecx,ecx
   14002d42e:	call   rdi
   14002d430:	sub    rbx,0x10
   14002d434:	lea    rax,[rbx+0x8]
   14002d438:	cmp    rax,rsi
   14002d43b:	jne    0x14002d41b
   14002d43d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d442:	mov    al,0x1
   14002d444:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d449:	add    rsp,0x20
   14002d44d:	pop    rdi
   14002d44e:	ret    
   14002d44f:	int3   
   14002d450:	mov    QWORD PTR [rip+0x1bab1],rcx        # 0x140048f08
   14002d457:	ret    
   14002d458:	mov    QWORD PTR [rsp+0x8],rbx
   14002d45d:	mov    QWORD PTR [rsp+0x20],r9
   14002d462:	push   rdi
   14002d463:	sub    rsp,0x20
   14002d467:	mov    rdi,r9
   14002d46a:	mov    ecx,DWORD PTR [rdx]
   14002d46c:	call   0x14002af28
   14002d471:	nop
   14002d472:	mov    rbx,QWORD PTR [rip+0x18d6f]        # 0x1400461e8
   14002d479:	mov    ecx,ebx
   14002d47b:	and    ecx,0x3f
   14002d47e:	xor    rbx,QWORD PTR [rip+0x1ba9b]        # 0x140048f20
   14002d485:	ror    rbx,cl
   14002d488:	mov    ecx,DWORD PTR [rdi]
   14002d48a:	call   0x14002af7c
   14002d48f:	mov    rax,rbx
   14002d492:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d497:	add    rsp,0x20
   14002d49b:	pop    rdi
   14002d49c:	ret    
   14002d49d:	int3   
   14002d49e:	int3   
   14002d49f:	int3   
   14002d4a0:	mov    r11,rsp
   14002d4a3:	sub    rsp,0x28
   14002d4a7:	mov    eax,0x3
   14002d4ac:	lea    r9,[r11+0x10]
   14002d4b0:	lea    r8,[r11+0x8]
   14002d4b4:	mov    DWORD PTR [rsp+0x38],eax
   14002d4b8:	lea    rdx,[r11+0x18]
   14002d4bc:	mov    DWORD PTR [rsp+0x40],eax
   14002d4c0:	lea    rcx,[r11+0x8]
   14002d4c4:	call   0x14002d458
   14002d4c9:	add    rsp,0x28
   14002d4cd:	ret    
   14002d4ce:	int3   
   14002d4cf:	int3   
   14002d4d0:	mov    QWORD PTR [rip+0x1ba39],rcx        # 0x140048f10
   14002d4d7:	mov    QWORD PTR [rip+0x1ba3a],rcx        # 0x140048f18
   14002d4de:	mov    QWORD PTR [rip+0x1ba3b],rcx        # 0x140048f20
   14002d4e5:	mov    QWORD PTR [rip+0x1ba3c],rcx        # 0x140048f28
   14002d4ec:	ret    
   14002d4ed:	int3   
   14002d4ee:	int3   
   14002d4ef:	int3   
   14002d4f0:	mov    rax,rsp
   14002d4f3:	push   rbx
   14002d4f4:	push   rsi
   14002d4f5:	push   rdi
   14002d4f6:	push   r12
   14002d4f8:	push   r13
   14002d4fa:	push   r15
   14002d4fc:	sub    rsp,0x48
   14002d500:	mov    edi,ecx
   14002d502:	xor    r13d,r13d
   14002d505:	and    DWORD PTR [rax+0x18],r13d
   14002d509:	mov    sil,0x1
   14002d50c:	mov    BYTE PTR [rsp+0x80],sil
   14002d514:	cmp    ecx,0x2
   14002d517:	je     0x14002d5ab
   14002d51d:	cmp    ecx,0x4
   14002d520:	je     0x14002d544
   14002d522:	cmp    ecx,0x6
   14002d525:	je     0x14002d5ab
   14002d52b:	cmp    ecx,0x8
   14002d52e:	je     0x14002d544
   14002d530:	cmp    ecx,0xb
   14002d533:	je     0x14002d544
   14002d535:	cmp    ecx,0xf
   14002d538:	je     0x14002d5ab
   14002d53a:	lea    eax,[rcx-0x15]
   14002d53d:	cmp    eax,0x1
   14002d540:	jbe    0x14002d5ab
   14002d542:	jmp    0x14002d588
   14002d544:	call   0x14002a2dc
   14002d549:	mov    r13,rax
   14002d54c:	test   rax,rax
   14002d54f:	jne    0x14002d559
   14002d551:	or     eax,0xffffffff
   14002d554:	jmp    0x14002d77b
   14002d559:	mov    rcx,QWORD PTR [rax]
   14002d55c:	mov    rdx,QWORD PTR [rip+0xb88d]        # 0x140038df0
   14002d563:	shl    rdx,0x4
   14002d567:	add    rdx,rcx
   14002d56a:	jmp    0x14002d575
   14002d56c:	cmp    DWORD PTR [rcx+0x4],edi
   14002d56f:	je     0x14002d57c
   14002d571:	add    rcx,0x10
   14002d575:	cmp    rcx,rdx
   14002d578:	jne    0x14002d56c
   14002d57a:	xor    ecx,ecx
   14002d57c:	xor    eax,eax
   14002d57e:	test   rcx,rcx
   14002d581:	setne  al
   14002d584:	test   eax,eax
   14002d586:	jne    0x14002d59a
   14002d588:	call   0x14002a494
   14002d58d:	mov    DWORD PTR [rax],0x16
   14002d593:	call   0x1400281ac
   14002d598:	jmp    0x14002d551
   14002d59a:	lea    rbx,[rcx+0x8]
   14002d59e:	xor    sil,sil
   14002d5a1:	mov    BYTE PTR [rsp+0x80],sil
   14002d5a9:	jmp    0x14002d5ea
   14002d5ab:	sub    ecx,0x2
   14002d5ae:	je     0x14002d5e3
   14002d5b0:	sub    ecx,0x4
   14002d5b3:	je     0x14002d5c8
   14002d5b5:	sub    ecx,0x9
   14002d5b8:	je     0x14002d5da
   14002d5ba:	sub    ecx,0x6
   14002d5bd:	je     0x14002d5d1
   14002d5bf:	cmp    ecx,0x1
   14002d5c2:	je     0x14002d5c8
   14002d5c4:	xor    ebx,ebx
   14002d5c6:	jmp    0x14002d5ea
   14002d5c8:	lea    rbx,[rip+0x1b951]        # 0x140048f20
   14002d5cf:	jmp    0x14002d5ea
   14002d5d1:	lea    rbx,[rip+0x1b940]        # 0x140048f18
   14002d5d8:	jmp    0x14002d5ea
   14002d5da:	lea    rbx,[rip+0x1b947]        # 0x140048f28
   14002d5e1:	jmp    0x14002d5ea
   14002d5e3:	lea    rbx,[rip+0x1b926]        # 0x140048f10
   14002d5ea:	and    QWORD PTR [rsp+0x98],0x0
   14002d5f3:	test   sil,sil
   14002d5f6:	je     0x14002d603
   14002d5f8:	mov    ecx,0x3
   14002d5fd:	call   0x14002af28
   14002d602:	nop
   14002d603:	test   sil,sil
   14002d606:	je     0x14002d61f
   14002d608:	mov    rdx,QWORD PTR [rip+0x18bd9]        # 0x1400461e8
   14002d60f:	mov    ecx,edx
   14002d611:	and    ecx,0x3f
   14002d614:	xor    rdx,QWORD PTR [rbx]
   14002d617:	ror    rdx,cl
   14002d61a:	mov    r15,rdx
   14002d61d:	jmp    0x14002d622
   14002d61f:	mov    r15,QWORD PTR [rbx]
   14002d622:	cmp    r15,0x1
   14002d626:	sete   al
   14002d629:	mov    BYTE PTR [rsp+0x88],al
   14002d630:	test   al,al
   14002d632:	jne    0x14002d6f7
   14002d638:	test   r15,r15
   14002d63b:	jne    0x14002d655
   14002d63d:	test   sil,sil
   14002d640:	je     0x14002d64b
   14002d642:	lea    ecx,[r15+0x3]
   14002d646:	call   0x14002af7c
   14002d64b:	mov    ecx,0x3
   14002d650:	call   0x140028d60
   14002d655:	mov    r12d,0x910
   14002d65b:	cmp    edi,0xb
   14002d65e:	ja     0x14002d6a0
   14002d660:	bt     r12d,edi
   14002d664:	jae    0x14002d6a0
   14002d666:	mov    rax,QWORD PTR [r13+0x8]
   14002d66a:	mov    QWORD PTR [rsp+0x98],rax
   14002d672:	mov    QWORD PTR [rsp+0x30],rax
   14002d677:	and    QWORD PTR [r13+0x8],0x0
   14002d67c:	cmp    edi,0x8
   14002d67f:	jne    0x14002d6d7
   14002d681:	call   0x14002a248
   14002d686:	mov    eax,DWORD PTR [rax+0x10]
   14002d689:	mov    DWORD PTR [rsp+0x90],eax
   14002d690:	mov    DWORD PTR [rsp+0x20],eax
   14002d694:	call   0x14002a248
   14002d699:	mov    DWORD PTR [rax+0x10],0x8c
   14002d6a0:	cmp    edi,0x8
   14002d6a3:	jne    0x14002d6d7
   14002d6a5:	mov    rax,QWORD PTR [rip+0xb74c]        # 0x140038df8
   14002d6ac:	shl    rax,0x4
   14002d6b0:	add    rax,QWORD PTR [r13+0x0]
   14002d6b4:	mov    rcx,QWORD PTR [rip+0xb745]        # 0x140038e00
   14002d6bb:	shl    rcx,0x4
   14002d6bf:	add    rcx,rax
   14002d6c2:	mov    QWORD PTR [rsp+0x28],rax
   14002d6c7:	cmp    rax,rcx
   14002d6ca:	je     0x14002d6fd
   14002d6cc:	and    QWORD PTR [rax+0x8],0x0
   14002d6d1:	add    rax,0x10
   14002d6d5:	jmp    0x14002d6c2
   14002d6d7:	mov    rdx,QWORD PTR [rip+0x18b0a]        # 0x1400461e8
   14002d6de:	mov    eax,edx
   14002d6e0:	and    eax,0x3f
   14002d6e3:	mov    ecx,0x40
   14002d6e8:	sub    ecx,eax
   14002d6ea:	xor    eax,eax
   14002d6ec:	ror    rax,cl
   14002d6ef:	xor    rax,rdx
   14002d6f2:	mov    QWORD PTR [rbx],rax
   14002d6f5:	jmp    0x14002d6fd
   14002d6f7:	mov    r12d,0x910
   14002d6fd:	test   sil,sil
   14002d700:	je     0x14002d70c
   14002d702:	mov    ecx,0x3
   14002d707:	call   0x14002af7c
   14002d70c:	cmp    BYTE PTR [rsp+0x88],0x0
   14002d714:	je     0x14002d71a
   14002d716:	xor    eax,eax
   14002d718:	jmp    0x14002d77b
   14002d71a:	cmp    edi,0x8
   14002d71d:	jne    0x14002d73d
   14002d71f:	call   0x14002a248
   14002d724:	mov    rbx,rax
   14002d727:	mov    rcx,r15
   14002d72a:	mov    rdx,QWORD PTR [rip+0x4eaf]        # 0x1400325e0
   14002d731:	call   rdx
   14002d733:	mov    edx,DWORD PTR [rbx+0x10]
   14002d736:	mov    ecx,edi
   14002d738:	call   r15
   14002d73b:	jmp    0x14002d74e
   14002d73d:	mov    rcx,r15
   14002d740:	mov    rax,QWORD PTR [rip+0x4e99]        # 0x1400325e0
   14002d747:	call   rax
   14002d749:	mov    ecx,edi
   14002d74b:	call   r15
   14002d74e:	cmp    edi,0xb
   14002d751:	ja     0x14002d716
   14002d753:	bt     r12d,edi
   14002d757:	jae    0x14002d716
   14002d759:	mov    rax,QWORD PTR [rsp+0x98]
   14002d761:	mov    QWORD PTR [r13+0x8],rax
   14002d765:	cmp    edi,0x8
   14002d768:	jne    0x14002d716
   14002d76a:	call   0x14002a248
   14002d76f:	mov    ecx,DWORD PTR [rsp+0x90]
   14002d776:	mov    DWORD PTR [rax+0x10],ecx
   14002d779:	jmp    0x14002d716
   14002d77b:	add    rsp,0x48
   14002d77f:	pop    r15
   14002d781:	pop    r13
   14002d783:	pop    r12
   14002d785:	pop    rdi
   14002d786:	pop    rsi
   14002d787:	pop    rbx
   14002d788:	ret    
   14002d789:	int3   
   14002d78a:	int3   
   14002d78b:	int3   
   14002d78c:	mov    QWORD PTR [rsp+0x8],rbx
   14002d791:	mov    QWORD PTR [rsp+0x10],rbp
   14002d796:	mov    QWORD PTR [rsp+0x18],rsi
   14002d79b:	push   rdi
   14002d79c:	sub    rsp,0x20
   14002d7a0:	mov    edx,0x40
   14002d7a5:	mov    ecx,edx
   14002d7a7:	call   0x140007c20
   14002d7ac:	xor    esi,esi
   14002d7ae:	mov    rbx,rax
   14002d7b1:	test   rax,rax
   14002d7b4:	je     0x14002d802
   14002d7b6:	lea    rbp,[rax+0x1000]
   14002d7bd:	cmp    rax,rbp
   14002d7c0:	je     0x14002d7ff
   14002d7c2:	lea    rdi,[rax+0x30]
   14002d7c6:	lea    rcx,[rdi-0x30]
   14002d7ca:	xor    r8d,r8d
   14002d7cd:	mov    edx,0xfa0
   14002d7d2:	call   0x14002a8b4
   14002d7d7:	or     QWORD PTR [rdi-0x8],0xffffffffffffffff
   14002d7dc:	mov    QWORD PTR [rdi],rsi
   14002d7df:	mov    DWORD PTR [rdi+0x8],0xa0a0000
   14002d7e6:	mov    BYTE PTR [rdi+0xc],0xa
   14002d7ea:	and    BYTE PTR [rdi+0xd],0xf8
   14002d7ee:	mov    BYTE PTR [rdi+0xe],sil
   14002d7f2:	lea    rdi,[rdi+0x40]
   14002d7f6:	lea    rax,[rdi-0x30]
   14002d7fa:	cmp    rax,rbp
   14002d7fd:	jne    0x14002d7c6
   14002d7ff:	mov    rsi,rbx
   14002d802:	xor    ecx,ecx
   14002d804:	call   0x140007bd0
   14002d809:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d80e:	mov    rax,rsi
   14002d811:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d816:	mov    rbp,QWORD PTR [rsp+0x38]
   14002d81b:	add    rsp,0x20
   14002d81f:	pop    rdi
   14002d820:	ret    
   14002d821:	int3   
   14002d822:	int3   
   14002d823:	int3   
   14002d824:	test   rcx,rcx
   14002d827:	je     0x14002d873
   14002d829:	mov    QWORD PTR [rsp+0x8],rbx
   14002d82e:	mov    QWORD PTR [rsp+0x10],rsi
   14002d833:	push   rdi
   14002d834:	sub    rsp,0x20
   14002d838:	lea    rsi,[rcx+0x1000]
   14002d83f:	mov    rbx,rcx
   14002d842:	mov    rdi,rcx
   14002d845:	cmp    rcx,rsi
   14002d848:	je     0x14002d85c
   14002d84a:	mov    rcx,rdi
   14002d84d:	call   QWORD PTR [rip+0x4895]        # 0x1400320e8
   14002d853:	add    rdi,0x40
   14002d857:	cmp    rdi,rsi
   14002d85a:	jne    0x14002d84a
   14002d85c:	mov    rcx,rbx
   14002d85f:	call   0x140007bd0
   14002d864:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d869:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d86e:	add    rsp,0x20
   14002d872:	pop    rdi
   14002d873:	ret    
   14002d874:	mov    QWORD PTR [rsp+0x8],rbx
   14002d879:	mov    QWORD PTR [rsp+0x10],rsi
   14002d87e:	mov    QWORD PTR [rsp+0x18],rdi
   14002d883:	push   r15
   14002d885:	sub    rsp,0x30
   14002d889:	mov    esi,ecx
   14002d88b:	xor    ebx,ebx
   14002d88d:	mov    eax,ebx
   14002d88f:	cmp    ecx,0x2000
   14002d895:	setb   al
   14002d898:	test   eax,eax
   14002d89a:	jne    0x14002d8b1
   14002d89c:	call   0x14002a494
   14002d8a1:	mov    ebx,0x9
   14002d8a6:	mov    DWORD PTR [rax],ebx
   14002d8a8:	call   0x1400281ac
   14002d8ad:	mov    eax,ebx
   14002d8af:	jmp    0x14002d915
   14002d8b1:	mov    ecx,0x7
   14002d8b6:	call   0x14002af28
   14002d8bb:	nop
   14002d8bc:	mov    rdi,rbx
   14002d8bf:	mov    QWORD PTR [rsp+0x20],rbx
   14002d8c4:	mov    eax,DWORD PTR [rip+0x1b3d6]        # 0x140048ca0
   14002d8ca:	cmp    esi,eax
   14002d8cc:	jl     0x14002d909
   14002d8ce:	lea    r15,[rip+0x1afcb]        # 0x1400488a0
   14002d8d5:	cmp    QWORD PTR [r15+rdi*8],rbx
   14002d8d9:	je     0x14002d8dd
   14002d8db:	jmp    0x14002d8ff
   14002d8dd:	call   0x14002d78c
   14002d8e2:	mov    QWORD PTR [r15+rdi*8],rax
   14002d8e6:	test   rax,rax
   14002d8e9:	jne    0x14002d8f0
   14002d8eb:	lea    ebx,[rax+0xc]
   14002d8ee:	jmp    0x14002d909
   14002d8f0:	mov    eax,DWORD PTR [rip+0x1b3aa]        # 0x140048ca0
   14002d8f6:	add    eax,0x40
   14002d8f9:	mov    DWORD PTR [rip+0x1b3a1],eax        # 0x140048ca0
   14002d8ff:	inc    rdi
   14002d902:	mov    QWORD PTR [rsp+0x20],rdi
   14002d907:	jmp    0x14002d8ca
   14002d909:	mov    ecx,0x7
   14002d90e:	call   0x14002af7c
   14002d913:	jmp    0x14002d8ad
   14002d915:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d91a:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d91f:	mov    rdi,QWORD PTR [rsp+0x50]
   14002d924:	add    rsp,0x30
   14002d928:	pop    r15
   14002d92a:	ret    
   14002d92b:	int3   
   14002d92c:	movsxd rcx,ecx
   14002d92f:	lea    rdx,[rip+0x1af6a]        # 0x1400488a0
   14002d936:	mov    rax,rcx
   14002d939:	and    ecx,0x3f
   14002d93c:	sar    rax,0x6
   14002d940:	shl    rcx,0x6
   14002d944:	add    rcx,QWORD PTR [rdx+rax*8]
   14002d948:	rex.W jmp QWORD PTR [rip+0x47a9]        # 0x1400320f8
   14002d94f:	int3   
   14002d950:	movsxd rcx,ecx
   14002d953:	lea    rdx,[rip+0x1af46]        # 0x1400488a0
   14002d95a:	mov    rax,rcx
   14002d95d:	and    ecx,0x3f
   14002d960:	sar    rax,0x6
   14002d964:	shl    rcx,0x6
   14002d968:	add    rcx,QWORD PTR [rdx+rax*8]
   14002d96c:	rex.W jmp QWORD PTR [rip+0x477d]        # 0x1400320f0
   14002d973:	int3   
   14002d974:	mov    QWORD PTR [rsp+0x8],rbx
   14002d979:	mov    QWORD PTR [rsp+0x10],rsi
   14002d97e:	mov    QWORD PTR [rsp+0x18],rdi
   14002d983:	push   r14
   14002d985:	sub    rsp,0x20
   14002d989:	movsxd rbx,ecx
   14002d98c:	test   ecx,ecx
   14002d98e:	js     0x14002da02
   14002d990:	cmp    ebx,DWORD PTR [rip+0x1b30a]        # 0x140048ca0
   14002d996:	jae    0x14002da02
   14002d998:	mov    rdi,rbx
   14002d99b:	lea    r14,[rip+0x1aefe]        # 0x1400488a0
   14002d9a2:	and    edi,0x3f
   14002d9a5:	mov    rsi,rbx
   14002d9a8:	sar    rsi,0x6
   14002d9ac:	shl    rdi,0x6
   14002d9b0:	mov    rax,QWORD PTR [r14+rsi*8]
   14002d9b4:	test   BYTE PTR [rax+rdi*1+0x38],0x1
   14002d9b9:	je     0x14002da02
   14002d9bb:	cmp    QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14002d9c1:	je     0x14002da02
   14002d9c3:	call   0x140029ab8
   14002d9c8:	cmp    eax,0x1
   14002d9cb:	jne    0x14002d9f4
   14002d9cd:	test   ebx,ebx
   14002d9cf:	je     0x14002d9e7
   14002d9d1:	sub    ebx,eax
   14002d9d3:	je     0x14002d9e0
   14002d9d5:	cmp    ebx,eax
   14002d9d7:	jne    0x14002d9f4
   14002d9d9:	mov    ecx,0xfffffff4
   14002d9de:	jmp    0x14002d9ec
   14002d9e0:	mov    ecx,0xfffffff5
   14002d9e5:	jmp    0x14002d9ec
   14002d9e7:	mov    ecx,0xfffffff6
   14002d9ec:	xor    edx,edx
   14002d9ee:	call   QWORD PTR [rip+0x462c]        # 0x140032020
   14002d9f4:	mov    rax,QWORD PTR [r14+rsi*8]
   14002d9f8:	or     QWORD PTR [rax+rdi*1+0x28],0xffffffffffffffff
   14002d9fe:	xor    eax,eax
   14002da00:	jmp    0x14002da18
   14002da02:	call   0x14002a494
   14002da07:	mov    DWORD PTR [rax],0x9
   14002da0d:	call   0x14002a474
   14002da12:	and    DWORD PTR [rax],0x0
   14002da15:	or     eax,0xffffffff
   14002da18:	mov    rbx,QWORD PTR [rsp+0x30]
   14002da1d:	mov    rsi,QWORD PTR [rsp+0x38]
   14002da22:	mov    rdi,QWORD PTR [rsp+0x40]
   14002da27:	add    rsp,0x20
   14002da2b:	pop    r14
   14002da2d:	ret    
   14002da2e:	int3   
   14002da2f:	int3   
   14002da30:	sub    rsp,0x28
   14002da34:	cmp    ecx,0xfffffffe
   14002da37:	jne    0x14002da4e
   14002da39:	call   0x14002a474
   14002da3e:	and    DWORD PTR [rax],0x0
   14002da41:	call   0x14002a494
   14002da46:	mov    DWORD PTR [rax],0x9
   14002da4c:	jmp    0x14002da9c
   14002da4e:	test   ecx,ecx
   14002da50:	js     0x14002da84
   14002da52:	cmp    ecx,DWORD PTR [rip+0x1b248]        # 0x140048ca0
   14002da58:	jae    0x14002da84
   14002da5a:	movsxd rdx,ecx
   14002da5d:	lea    rcx,[rip+0x1ae3c]        # 0x1400488a0
   14002da64:	mov    rax,rdx
   14002da67:	and    edx,0x3f
   14002da6a:	sar    rax,0x6
   14002da6e:	shl    rdx,0x6
   14002da72:	mov    rax,QWORD PTR [rcx+rax*8]
   14002da76:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14002da7b:	je     0x14002da84
   14002da7d:	mov    rax,QWORD PTR [rax+rdx*1+0x28]
   14002da82:	jmp    0x14002daa0
   14002da84:	call   0x14002a474
   14002da89:	and    DWORD PTR [rax],0x0
   14002da8c:	call   0x14002a494
   14002da91:	mov    DWORD PTR [rax],0x9
   14002da97:	call   0x1400281ac
   14002da9c:	or     rax,0xffffffffffffffff
   14002daa0:	add    rsp,0x28
   14002daa4:	ret    
   14002daa5:	int3   
   14002daa6:	int3   
   14002daa7:	int3   
   14002daa8:	test   rcx,rcx
   14002daab:	je     0x14002dbb1
   14002dab1:	push   rbx
   14002dab2:	sub    rsp,0x20
   14002dab6:	mov    rbx,rcx
   14002dab9:	mov    rcx,QWORD PTR [rcx+0x18]
   14002dabd:	cmp    rcx,QWORD PTR [rip+0x18f54]        # 0x140046a18
   14002dac4:	je     0x14002dacb
   14002dac6:	call   0x140007bd0
   14002dacb:	mov    rcx,QWORD PTR [rbx+0x20]
   14002dacf:	cmp    rcx,QWORD PTR [rip+0x18f4a]        # 0x140046a20
   14002dad6:	je     0x14002dadd
   14002dad8:	call   0x140007bd0
   14002dadd:	mov    rcx,QWORD PTR [rbx+0x28]
   14002dae1:	cmp    rcx,QWORD PTR [rip+0x18f40]        # 0x140046a28
   14002dae8:	je     0x14002daef
   14002daea:	call   0x140007bd0
   14002daef:	mov    rcx,QWORD PTR [rbx+0x30]
   14002daf3:	cmp    rcx,QWORD PTR [rip+0x18f36]        # 0x140046a30
   14002dafa:	je     0x14002db01
   14002dafc:	call   0x140007bd0
   14002db01:	mov    rcx,QWORD PTR [rbx+0x38]
   14002db05:	cmp    rcx,QWORD PTR [rip+0x18f2c]        # 0x140046a38
   14002db0c:	je     0x14002db13
   14002db0e:	call   0x140007bd0
   14002db13:	mov    rcx,QWORD PTR [rbx+0x40]
   14002db17:	cmp    rcx,QWORD PTR [rip+0x18f22]        # 0x140046a40
   14002db1e:	je     0x14002db25
   14002db20:	call   0x140007bd0
   14002db25:	mov    rcx,QWORD PTR [rbx+0x48]
   14002db29:	cmp    rcx,QWORD PTR [rip+0x18f18]        # 0x140046a48
   14002db30:	je     0x14002db37
   14002db32:	call   0x140007bd0
   14002db37:	mov    rcx,QWORD PTR [rbx+0x68]
   14002db3b:	cmp    rcx,QWORD PTR [rip+0x18f26]        # 0x140046a68
   14002db42:	je     0x14002db49
   14002db44:	call   0x140007bd0
   14002db49:	mov    rcx,QWORD PTR [rbx+0x70]
   14002db4d:	cmp    rcx,QWORD PTR [rip+0x18f1c]        # 0x140046a70
   14002db54:	je     0x14002db5b
   14002db56:	call   0x140007bd0
   14002db5b:	mov    rcx,QWORD PTR [rbx+0x78]
   14002db5f:	cmp    rcx,QWORD PTR [rip+0x18f12]        # 0x140046a78
   14002db66:	je     0x14002db6d
   14002db68:	call   0x140007bd0
   14002db6d:	mov    rcx,QWORD PTR [rbx+0x80]
   14002db74:	cmp    rcx,QWORD PTR [rip+0x18f05]        # 0x140046a80
   14002db7b:	je     0x14002db82
   14002db7d:	call   0x140007bd0
   14002db82:	mov    rcx,QWORD PTR [rbx+0x88]
   14002db89:	cmp    rcx,QWORD PTR [rip+0x18ef8]        # 0x140046a88
   14002db90:	je     0x14002db97
   14002db92:	call   0x140007bd0
   14002db97:	mov    rcx,QWORD PTR [rbx+0x90]
   14002db9e:	cmp    rcx,QWORD PTR [rip+0x18eeb]        # 0x140046a90
   14002dba5:	je     0x14002dbac
   14002dba7:	call   0x140007bd0
   14002dbac:	add    rsp,0x20
   14002dbb0:	pop    rbx
   14002dbb1:	ret    
   14002dbb2:	int3   
   14002dbb3:	int3   
   14002dbb4:	test   rcx,rcx
   14002dbb7:	je     0x14002dc1f
   14002dbb9:	push   rbx
   14002dbba:	sub    rsp,0x20
   14002dbbe:	mov    rbx,rcx
   14002dbc1:	mov    rcx,QWORD PTR [rcx]
   14002dbc4:	cmp    rcx,QWORD PTR [rip+0x18e35]        # 0x140046a00
   14002dbcb:	je     0x14002dbd2
   14002dbcd:	call   0x140007bd0
   14002dbd2:	mov    rcx,QWORD PTR [rbx+0x8]
   14002dbd6:	cmp    rcx,QWORD PTR [rip+0x18e2b]        # 0x140046a08
   14002dbdd:	je     0x14002dbe4
   14002dbdf:	call   0x140007bd0
   14002dbe4:	mov    rcx,QWORD PTR [rbx+0x10]
   14002dbe8:	cmp    rcx,QWORD PTR [rip+0x18e21]        # 0x140046a10
   14002dbef:	je     0x14002dbf6
   14002dbf1:	call   0x140007bd0
   14002dbf6:	mov    rcx,QWORD PTR [rbx+0x58]
   14002dbfa:	cmp    rcx,QWORD PTR [rip+0x18e57]        # 0x140046a58
   14002dc01:	je     0x14002dc08
   14002dc03:	call   0x140007bd0
   14002dc08:	mov    rcx,QWORD PTR [rbx+0x60]
   14002dc0c:	cmp    rcx,QWORD PTR [rip+0x18e4d]        # 0x140046a60
   14002dc13:	je     0x14002dc1a
   14002dc15:	call   0x140007bd0
   14002dc1a:	add    rsp,0x20
   14002dc1e:	pop    rbx
   14002dc1f:	ret    
   14002dc20:	mov    QWORD PTR [rsp+0x8],rbx
   14002dc25:	mov    QWORD PTR [rsp+0x10],rsi
   14002dc2a:	push   rdi
   14002dc2b:	sub    rsp,0x20
   14002dc2f:	xor    edi,edi
   14002dc31:	lea    rax,[rcx+rdx*8]
   14002dc35:	mov    rsi,rax
   14002dc38:	mov    rbx,rcx
   14002dc3b:	sub    rsi,rcx
   14002dc3e:	add    rsi,0x7
   14002dc42:	shr    rsi,0x3
   14002dc46:	cmp    rcx,rax
   14002dc49:	cmova  rsi,rdi
   14002dc4d:	test   rsi,rsi
   14002dc50:	je     0x14002dc66
   14002dc52:	mov    rcx,QWORD PTR [rbx]
   14002dc55:	call   0x140007bd0
   14002dc5a:	inc    rdi
   14002dc5d:	lea    rbx,[rbx+0x8]
   14002dc61:	cmp    rdi,rsi
   14002dc64:	jne    0x14002dc52
   14002dc66:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dc6b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dc70:	add    rsp,0x20
   14002dc74:	pop    rdi
   14002dc75:	ret    
   14002dc76:	int3   
   14002dc77:	int3   
   14002dc78:	test   rcx,rcx
   14002dc7b:	je     0x14002dd7f
   14002dc81:	mov    QWORD PTR [rsp+0x8],rbx
   14002dc86:	mov    QWORD PTR [rsp+0x10],rbp
   14002dc8b:	push   rsi
   14002dc8c:	sub    rsp,0x20
   14002dc90:	mov    ebp,0x7
   14002dc95:	mov    rbx,rcx
   14002dc98:	mov    edx,ebp
   14002dc9a:	call   0x14002dc20
   14002dc9f:	lea    rcx,[rbx+0x38]
   14002dca3:	mov    edx,ebp
   14002dca5:	call   0x14002dc20
   14002dcaa:	lea    esi,[rbp+0x5]
   14002dcad:	mov    edx,esi
   14002dcaf:	lea    rcx,[rbx+0x70]
   14002dcb3:	call   0x14002dc20
   14002dcb8:	lea    rcx,[rbx+0xd0]
   14002dcbf:	mov    edx,esi
   14002dcc1:	call   0x14002dc20
   14002dcc6:	lea    rcx,[rbx+0x130]
   14002dccd:	lea    edx,[rbp-0x5]
   14002dcd0:	call   0x14002dc20
   14002dcd5:	mov    rcx,QWORD PTR [rbx+0x140]
   14002dcdc:	call   0x140007bd0
   14002dce1:	mov    rcx,QWORD PTR [rbx+0x148]
   14002dce8:	call   0x140007bd0
   14002dced:	mov    rcx,QWORD PTR [rbx+0x150]
   14002dcf4:	call   0x140007bd0
   14002dcf9:	lea    rcx,[rbx+0x160]
   14002dd00:	mov    edx,ebp
   14002dd02:	call   0x14002dc20
   14002dd07:	lea    rcx,[rbx+0x198]
   14002dd0e:	mov    edx,ebp
   14002dd10:	call   0x14002dc20
   14002dd15:	lea    rcx,[rbx+0x1d0]
   14002dd1c:	mov    edx,esi
   14002dd1e:	call   0x14002dc20
   14002dd23:	lea    rcx,[rbx+0x230]
   14002dd2a:	mov    edx,esi
   14002dd2c:	call   0x14002dc20
   14002dd31:	lea    rcx,[rbx+0x290]
   14002dd38:	lea    edx,[rbp-0x5]
   14002dd3b:	call   0x14002dc20
   14002dd40:	mov    rcx,QWORD PTR [rbx+0x2a0]
   14002dd47:	call   0x140007bd0
   14002dd4c:	mov    rcx,QWORD PTR [rbx+0x2a8]
   14002dd53:	call   0x140007bd0
   14002dd58:	mov    rcx,QWORD PTR [rbx+0x2b0]
   14002dd5f:	call   0x140007bd0
   14002dd64:	mov    rcx,QWORD PTR [rbx+0x2b8]
   14002dd6b:	call   0x140007bd0
   14002dd70:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dd75:	mov    rbp,QWORD PTR [rsp+0x38]
   14002dd7a:	add    rsp,0x20
   14002dd7e:	pop    rsi
   14002dd7f:	ret    
   14002dd80:	sub    rsp,0x28
   14002dd84:	call   0x14002a248
   14002dd89:	lea    rdx,[rsp+0x30]
   14002dd8e:	mov    rcx,QWORD PTR [rax+0x90]
   14002dd95:	mov    QWORD PTR [rsp+0x30],rcx
   14002dd9a:	mov    rcx,rax
   14002dd9d:	call   0x14002bd30
   14002dda2:	mov    rax,QWORD PTR [rsp+0x30]
   14002dda7:	mov    rax,QWORD PTR [rax]
   14002ddaa:	add    rsp,0x28
   14002ddae:	ret    
   14002ddaf:	int3   
   14002ddb0:	rex push rbp
   14002ddb2:	push   r12
   14002ddb4:	push   r13
   14002ddb6:	push   r14
   14002ddb8:	push   r15
   14002ddba:	sub    rsp,0x60
   14002ddbe:	lea    rbp,[rsp+0x30]
   14002ddc3:	mov    QWORD PTR [rbp+0x60],rbx
   14002ddc7:	mov    QWORD PTR [rbp+0x68],rsi
   14002ddcb:	mov    QWORD PTR [rbp+0x70],rdi
   14002ddcf:	mov    rax,QWORD PTR [rip+0x18412]        # 0x1400461e8
   14002ddd6:	xor    rax,rbp
   14002ddd9:	mov    QWORD PTR [rbp+0x20],rax
   14002dddd:	mov    r13d,edx
   14002dde0:	mov    r15d,r9d
   14002dde3:	mov    rdx,rcx
   14002dde6:	mov    r12,r8
   14002dde9:	lea    rcx,[rbp+0x0]
   14002dded:	call   0x1400288e8
   14002ddf2:	mov    esi,DWORD PTR [rbp+0x88]
   14002ddf8:	test   esi,esi
   14002ddfa:	jne    0x14002de03
   14002ddfc:	mov    rax,QWORD PTR [rbp+0x8]
   14002de00:	mov    esi,DWORD PTR [rax+0xc]
   14002de03:	neg    DWORD PTR [rbp+0x90]
   14002de09:	mov    r9d,r15d
   14002de0c:	mov    r8,r12
   14002de0f:	mov    ecx,esi
   14002de11:	sbb    edx,edx
   14002de13:	and    DWORD PTR [rsp+0x28],0x0
   14002de18:	and    QWORD PTR [rsp+0x20],0x0
   14002de1e:	and    edx,0x8
   14002de21:	inc    edx
   14002de23:	call   QWORD PTR [rip+0x4297]        # 0x1400320c0
   14002de29:	movsxd r14,eax
   14002de2c:	test   eax,eax
   14002de2e:	jne    0x14002de37
   14002de30:	xor    edi,edi
   14002de32:	jmp    0x14002df28
   14002de37:	mov    rdi,r14
   14002de3a:	add    rdi,rdi
   14002de3d:	lea    rcx,[rdi+0x10]
   14002de41:	cmp    rdi,rcx
   14002de44:	sbb    rax,rax
   14002de47:	test   rcx,rax
   14002de4a:	je     0x14002dec1
   14002de4c:	lea    rcx,[rdi+0x10]
   14002de50:	cmp    rdi,rcx
   14002de53:	sbb    rax,rax
   14002de56:	and    rax,rcx
   14002de59:	cmp    rax,0x400
   14002de5f:	lea    rax,[rdi+0x10]
   14002de63:	ja     0x14002de9f
   14002de65:	cmp    rdi,rax
   14002de68:	sbb    rcx,rcx
   14002de6b:	and    rcx,rax
   14002de6e:	lea    rax,[rcx+0xf]
   14002de72:	cmp    rax,rcx
   14002de75:	ja     0x14002de81
   14002de77:	movabs rax,0xffffffffffffff0
   14002de81:	and    rax,0xfffffffffffffff0
   14002de85:	call   0x1400263c0
   14002de8a:	sub    rsp,rax
   14002de8d:	lea    rbx,[rsp+0x30]
   14002de92:	test   rbx,rbx
   14002de95:	je     0x14002df10
   14002de97:	mov    DWORD PTR [rbx],0xcccc
   14002de9d:	jmp    0x14002debb
   14002de9f:	cmp    rdi,rax
   14002dea2:	sbb    rcx,rcx
   14002dea5:	and    rcx,rax
   14002dea8:	call   0x140007bf0
   14002dead:	mov    rbx,rax
   14002deb0:	test   rax,rax
   14002deb3:	je     0x14002dec3
   14002deb5:	mov    DWORD PTR [rax],0xdddd
   14002debb:	add    rbx,0x10
   14002debf:	jmp    0x14002dec3
   14002dec1:	xor    ebx,ebx
   14002dec3:	test   rbx,rbx
   14002dec6:	je     0x14002df10
   14002dec8:	mov    r8,rdi
   14002decb:	xor    edx,edx
   14002decd:	mov    rcx,rbx
   14002ded0:	call   0x1400277b0
   14002ded5:	mov    r9d,r15d
   14002ded8:	mov    DWORD PTR [rsp+0x28],r14d
   14002dedd:	mov    r8,r12
   14002dee0:	mov    QWORD PTR [rsp+0x20],rbx
   14002dee5:	mov    edx,0x1
   14002deea:	mov    ecx,esi
   14002deec:	call   QWORD PTR [rip+0x41ce]        # 0x1400320c0
   14002def2:	test   eax,eax
   14002def4:	je     0x14002df10
   14002def6:	mov    r9,QWORD PTR [rbp+0x80]
   14002defd:	mov    r8d,eax
   14002df00:	mov    rdx,rbx
   14002df03:	mov    ecx,r13d
   14002df06:	call   QWORD PTR [rip+0x410c]        # 0x140032018
   14002df0c:	mov    edi,eax
   14002df0e:	jmp    0x14002df12
   14002df10:	xor    edi,edi
   14002df12:	test   rbx,rbx
   14002df15:	je     0x14002df28
   14002df17:	lea    rcx,[rbx-0x10]
   14002df1b:	cmp    DWORD PTR [rcx],0xdddd
   14002df21:	jne    0x14002df28
   14002df23:	call   0x140007bd0
   14002df28:	cmp    BYTE PTR [rbp+0x18],0x0
   14002df2c:	je     0x14002df39
   14002df2e:	mov    rax,QWORD PTR [rbp+0x0]
   14002df32:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002df39:	mov    eax,edi
   14002df3b:	mov    rcx,QWORD PTR [rbp+0x20]
   14002df3f:	xor    rcx,rbp
   14002df42:	call   0x140030a30
   14002df47:	mov    rbx,QWORD PTR [rbp+0x60]
   14002df4b:	mov    rsi,QWORD PTR [rbp+0x68]
   14002df4f:	mov    rdi,QWORD PTR [rbp+0x70]
   14002df53:	lea    rsp,[rbp+0x30]
   14002df57:	pop    r15
   14002df59:	pop    r14
   14002df5b:	pop    r13
   14002df5d:	pop    r12
   14002df5f:	pop    rbp
   14002df60:	ret    
   14002df61:	int3   
   14002df62:	int3   
   14002df63:	int3   
   14002df64:	lock inc DWORD PTR [rcx+0x10]
   14002df68:	mov    rax,QWORD PTR [rcx+0xe0]
   14002df6f:	test   rax,rax
   14002df72:	je     0x14002df77
   14002df74:	lock inc DWORD PTR [rax]
   14002df77:	mov    rax,QWORD PTR [rcx+0xf0]
   14002df7e:	test   rax,rax
   14002df81:	je     0x14002df86
   14002df83:	lock inc DWORD PTR [rax]
   14002df86:	mov    rax,QWORD PTR [rcx+0xe8]
   14002df8d:	test   rax,rax
   14002df90:	je     0x14002df95
   14002df92:	lock inc DWORD PTR [rax]
   14002df95:	mov    rax,QWORD PTR [rcx+0x100]
   14002df9c:	test   rax,rax
   14002df9f:	je     0x14002dfa4
   14002dfa1:	lock inc DWORD PTR [rax]
   14002dfa4:	lea    rax,[rcx+0x38]
   14002dfa8:	mov    r8d,0x6
   14002dfae:	lea    rdx,[rip+0x18503]        # 0x1400464b8
   14002dfb5:	cmp    QWORD PTR [rax-0x10],rdx
   14002dfb9:	je     0x14002dfc6
   14002dfbb:	mov    rdx,QWORD PTR [rax]
   14002dfbe:	test   rdx,rdx
   14002dfc1:	je     0x14002dfc6
   14002dfc3:	lock inc DWORD PTR [rdx]
   14002dfc6:	cmp    QWORD PTR [rax-0x18],0x0
   14002dfcb:	je     0x14002dfd9
   14002dfcd:	mov    rdx,QWORD PTR [rax-0x8]
   14002dfd1:	test   rdx,rdx
   14002dfd4:	je     0x14002dfd9
   14002dfd6:	lock inc DWORD PTR [rdx]
   14002dfd9:	add    rax,0x20
   14002dfdd:	sub    r8,0x1
   14002dfe1:	jne    0x14002dfae
   14002dfe3:	mov    rcx,QWORD PTR [rcx+0x120]
   14002dfea:	jmp    0x14002e168
   14002dfef:	int3   
   14002dff0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dff5:	mov    QWORD PTR [rsp+0x10],rbp
   14002dffa:	mov    QWORD PTR [rsp+0x18],rsi
   14002dfff:	push   rdi
   14002e000:	sub    rsp,0x20
   14002e004:	mov    rax,QWORD PTR [rcx+0xf8]
   14002e00b:	mov    rbx,rcx
   14002e00e:	test   rax,rax
   14002e011:	je     0x14002e08c
   14002e013:	lea    rcx,[rip+0x189e6]        # 0x140046a00
   14002e01a:	cmp    rax,rcx
   14002e01d:	je     0x14002e08c
   14002e01f:	mov    rax,QWORD PTR [rbx+0xe0]
   14002e026:	test   rax,rax
   14002e029:	je     0x14002e08c
   14002e02b:	cmp    DWORD PTR [rax],0x0
   14002e02e:	jne    0x14002e08c
   14002e030:	mov    rcx,QWORD PTR [rbx+0xf0]
   14002e037:	test   rcx,rcx
   14002e03a:	je     0x14002e052
   14002e03c:	cmp    DWORD PTR [rcx],0x0
   14002e03f:	jne    0x14002e052
   14002e041:	call   0x140007bd0
   14002e046:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002e04d:	call   0x14002daa8
   14002e052:	mov    rcx,QWORD PTR [rbx+0xe8]
   14002e059:	test   rcx,rcx
   14002e05c:	je     0x14002e074
   14002e05e:	cmp    DWORD PTR [rcx],0x0
   14002e061:	jne    0x14002e074
   14002e063:	call   0x140007bd0
   14002e068:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002e06f:	call   0x14002dbb4
   14002e074:	mov    rcx,QWORD PTR [rbx+0xe0]
   14002e07b:	call   0x140007bd0
   14002e080:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002e087:	call   0x140007bd0
   14002e08c:	mov    rax,QWORD PTR [rbx+0x100]
   14002e093:	test   rax,rax
   14002e096:	je     0x14002e0df
   14002e098:	cmp    DWORD PTR [rax],0x0
   14002e09b:	jne    0x14002e0df
   14002e09d:	mov    rcx,QWORD PTR [rbx+0x108]
   14002e0a4:	sub    rcx,0xfe
   14002e0ab:	call   0x140007bd0
   14002e0b0:	mov    rcx,QWORD PTR [rbx+0x110]
   14002e0b7:	mov    edi,0x80
   14002e0bc:	sub    rcx,rdi
   14002e0bf:	call   0x140007bd0
   14002e0c4:	mov    rcx,QWORD PTR [rbx+0x118]
   14002e0cb:	sub    rcx,rdi
   14002e0ce:	call   0x140007bd0
   14002e0d3:	mov    rcx,QWORD PTR [rbx+0x100]
   14002e0da:	call   0x140007bd0
   14002e0df:	mov    rcx,QWORD PTR [rbx+0x120]
   14002e0e6:	call   0x14002e190
   14002e0eb:	lea    rsi,[rbx+0x128]
   14002e0f2:	mov    ebp,0x6
   14002e0f7:	lea    rdi,[rbx+0x38]
   14002e0fb:	lea    rax,[rip+0x183b6]        # 0x1400464b8
   14002e102:	cmp    QWORD PTR [rdi-0x10],rax
   14002e106:	je     0x14002e122
   14002e108:	mov    rcx,QWORD PTR [rdi]
   14002e10b:	test   rcx,rcx
   14002e10e:	je     0x14002e122
   14002e110:	cmp    DWORD PTR [rcx],0x0
   14002e113:	jne    0x14002e122
   14002e115:	call   0x140007bd0
   14002e11a:	mov    rcx,QWORD PTR [rsi]
   14002e11d:	call   0x140007bd0
   14002e122:	cmp    QWORD PTR [rdi-0x18],0x0
   14002e127:	je     0x14002e13c
   14002e129:	mov    rcx,QWORD PTR [rdi-0x8]
   14002e12d:	test   rcx,rcx
   14002e130:	je     0x14002e13c
   14002e132:	cmp    DWORD PTR [rcx],0x0
   14002e135:	jne    0x14002e13c
   14002e137:	call   0x140007bd0
   14002e13c:	add    rsi,0x8
   14002e140:	add    rdi,0x20
   14002e144:	sub    rbp,0x1
   14002e148:	jne    0x14002e0fb
   14002e14a:	mov    rcx,rbx
   14002e14d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e152:	mov    rbp,QWORD PTR [rsp+0x38]
   14002e157:	mov    rsi,QWORD PTR [rsp+0x40]
   14002e15c:	add    rsp,0x20
   14002e160:	pop    rdi
   14002e161:	jmp    0x140007bd0
   14002e166:	int3   
   14002e167:	int3   
   14002e168:	test   rcx,rcx
   14002e16b:	je     0x14002e189
   14002e16d:	lea    rax,[rip+0xb52c]        # 0x1400396a0
   14002e174:	cmp    rcx,rax
   14002e177:	je     0x14002e189
   14002e179:	mov    eax,0x1
   14002e17e:	lock xadd DWORD PTR [rcx+0x15c],eax
   14002e186:	inc    eax
   14002e188:	ret    
   14002e189:	mov    eax,0x7fffffff
   14002e18e:	ret    
   14002e18f:	int3   
   14002e190:	test   rcx,rcx
   14002e193:	je     0x14002e1c5
   14002e195:	push   rbx
   14002e196:	sub    rsp,0x20
   14002e19a:	lea    rax,[rip+0xb4ff]        # 0x1400396a0
   14002e1a1:	mov    rbx,rcx
   14002e1a4:	cmp    rcx,rax
   14002e1a7:	je     0x14002e1c0
   14002e1a9:	mov    eax,DWORD PTR [rcx+0x15c]
   14002e1af:	test   eax,eax
   14002e1b1:	jne    0x14002e1c0
   14002e1b3:	call   0x14002dc78
   14002e1b8:	mov    rcx,rbx
   14002e1bb:	call   0x140007bd0
   14002e1c0:	add    rsp,0x20
   14002e1c4:	pop    rbx
   14002e1c5:	ret    
   14002e1c6:	int3   
   14002e1c7:	int3   
   14002e1c8:	test   rcx,rcx
   14002e1cb:	je     0x14002e1e7
   14002e1cd:	lea    rax,[rip+0xb4cc]        # 0x1400396a0
   14002e1d4:	cmp    rcx,rax
   14002e1d7:	je     0x14002e1e7
   14002e1d9:	or     eax,0xffffffff
   14002e1dc:	lock xadd DWORD PTR [rcx+0x15c],eax
   14002e1e4:	dec    eax
   14002e1e6:	ret    
   14002e1e7:	mov    eax,0x7fffffff
   14002e1ec:	ret    
   14002e1ed:	int3   
   14002e1ee:	int3   
   14002e1ef:	int3   
   14002e1f0:	sub    rsp,0x28
   14002e1f4:	test   rcx,rcx
   14002e1f7:	je     0x14002e293
   14002e1fd:	or     r9d,0xffffffff
   14002e201:	lock add DWORD PTR [rcx+0x10],r9d
   14002e206:	mov    rax,QWORD PTR [rcx+0xe0]
   14002e20d:	test   rax,rax
   14002e210:	je     0x14002e216
   14002e212:	lock add DWORD PTR [rax],r9d
   14002e216:	mov    rax,QWORD PTR [rcx+0xf0]
   14002e21d:	test   rax,rax
   14002e220:	je     0x14002e226
   14002e222:	lock add DWORD PTR [rax],r9d
   14002e226:	mov    rax,QWORD PTR [rcx+0xe8]
   14002e22d:	test   rax,rax
   14002e230:	je     0x14002e236
   14002e232:	lock add DWORD PTR [rax],r9d
   14002e236:	mov    rax,QWORD PTR [rcx+0x100]
   14002e23d:	test   rax,rax
   14002e240:	je     0x14002e246
   14002e242:	lock add DWORD PTR [rax],r9d
   14002e246:	lea    rax,[rcx+0x38]
   14002e24a:	mov    r8d,0x6
   14002e250:	lea    rdx,[rip+0x18261]        # 0x1400464b8
   14002e257:	cmp    QWORD PTR [rax-0x10],rdx
   14002e25b:	je     0x14002e269
   14002e25d:	mov    rdx,QWORD PTR [rax]
   14002e260:	test   rdx,rdx
   14002e263:	je     0x14002e269
   14002e265:	lock add DWORD PTR [rdx],r9d
   14002e269:	cmp    QWORD PTR [rax-0x18],0x0
   14002e26e:	je     0x14002e27d
   14002e270:	mov    rdx,QWORD PTR [rax-0x8]
   14002e274:	test   rdx,rdx
   14002e277:	je     0x14002e27d
   14002e279:	lock add DWORD PTR [rdx],r9d
   14002e27d:	add    rax,0x20
   14002e281:	sub    r8,0x1
   14002e285:	jne    0x14002e250
   14002e287:	mov    rcx,QWORD PTR [rcx+0x120]
   14002e28e:	call   0x14002e1c8
   14002e293:	add    rsp,0x28
   14002e297:	ret    
   14002e298:	mov    QWORD PTR [rsp+0x8],rbx
   14002e29d:	push   rdi
   14002e29e:	sub    rsp,0x20
   14002e2a2:	call   0x14002a248
   14002e2a7:	mov    rdi,rax
   14002e2aa:	mov    ecx,DWORD PTR [rip+0x187f0]        # 0x140046aa0
   14002e2b0:	test   DWORD PTR [rax+0x3a8],ecx
   14002e2b6:	je     0x14002e2c4
   14002e2b8:	mov    rbx,QWORD PTR [rax+0x90]
   14002e2bf:	test   rbx,rbx
   14002e2c2:	jne    0x14002e2fa
   14002e2c4:	mov    ecx,0x4
   14002e2c9:	call   0x14002af28
   14002e2ce:	nop
   14002e2cf:	lea    rcx,[rdi+0x90]
   14002e2d6:	mov    rdx,QWORD PTR [rip+0x1abf3]        # 0x140048ed0
   14002e2dd:	call   0x14002e308
   14002e2e2:	mov    rbx,rax
   14002e2e5:	mov    ecx,0x4
   14002e2ea:	call   0x14002af7c
   14002e2ef:	test   rbx,rbx
   14002e2f2:	jne    0x14002e2fa
   14002e2f4:	call   0x140029db8
   14002e2f9:	int3   
   14002e2fa:	mov    rax,rbx
   14002e2fd:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e302:	add    rsp,0x20
   14002e306:	pop    rdi
   14002e307:	ret    
   14002e308:	mov    QWORD PTR [rsp+0x8],rbx
   14002e30d:	push   rdi
   14002e30e:	sub    rsp,0x20
   14002e312:	mov    rdi,rdx
   14002e315:	test   rdx,rdx
   14002e318:	je     0x14002e363
   14002e31a:	test   rcx,rcx
   14002e31d:	je     0x14002e363
   14002e31f:	mov    rbx,QWORD PTR [rcx]
   14002e322:	cmp    rbx,rdx
   14002e325:	jne    0x14002e32c
   14002e327:	mov    rax,rdx
   14002e32a:	jmp    0x14002e365
   14002e32c:	mov    QWORD PTR [rcx],rdx
   14002e32f:	mov    rcx,rdx
   14002e332:	call   0x14002df64
   14002e337:	test   rbx,rbx
   14002e33a:	je     0x14002e35e
   14002e33c:	mov    rcx,rbx
   14002e33f:	call   0x14002e1f0
   14002e344:	cmp    DWORD PTR [rbx+0x10],0x0
   14002e348:	jne    0x14002e35e
   14002e34a:	lea    rax,[rip+0x17fff]        # 0x140046350
   14002e351:	cmp    rbx,rax
   14002e354:	je     0x14002e35e
   14002e356:	mov    rcx,rbx
   14002e359:	call   0x14002dff0
   14002e35e:	mov    rax,rdi
   14002e361:	jmp    0x14002e365
   14002e363:	xor    eax,eax
   14002e365:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e36a:	add    rsp,0x20
   14002e36e:	pop    rdi
   14002e36f:	ret    
   14002e370:	mov    QWORD PTR [rsp+0x10],rsi
   14002e375:	mov    QWORD PTR [rsp+0x18],rdi
   14002e37a:	mov    QWORD PTR [rsp+0x20],r14
   14002e37f:	push   rbp
   14002e380:	mov    rbp,rsp
   14002e383:	sub    rsp,0x80
   14002e38a:	mov    rax,QWORD PTR [rip+0x17e57]        # 0x1400461e8
   14002e391:	xor    rax,rsp
   14002e394:	mov    QWORD PTR [rbp-0x10],rax
   14002e398:	mov    r14d,edx
   14002e39b:	movsxd rdi,ecx
   14002e39e:	mov    rdx,r8
   14002e3a1:	lea    rcx,[rbp-0x38]
   14002e3a5:	call   0x1400288e8
   14002e3aa:	lea    eax,[rdi+0x1]
   14002e3ad:	cmp    eax,0x100
   14002e3b2:	ja     0x14002e3c4
   14002e3b4:	mov    rax,QWORD PTR [rbp-0x30]
   14002e3b8:	mov    rcx,QWORD PTR [rax]
   14002e3bb:	movzx  eax,WORD PTR [rcx+rdi*2]
   14002e3bf:	jmp    0x14002e446
   14002e3c4:	mov    esi,edi
   14002e3c6:	lea    rdx,[rbp-0x30]
   14002e3ca:	sar    esi,0x8
   14002e3cd:	movzx  ecx,sil
   14002e3d1:	call   0x14002e7cc
   14002e3d6:	mov    edx,0x1
   14002e3db:	test   eax,eax
   14002e3dd:	je     0x14002e3f1
   14002e3df:	mov    BYTE PTR [rbp-0x40],sil
   14002e3e3:	lea    r9d,[rdx+0x1]
   14002e3e7:	mov    BYTE PTR [rbp-0x3f],dil
   14002e3eb:	mov    BYTE PTR [rbp-0x3e],0x0
   14002e3ef:	jmp    0x14002e3fc
   14002e3f1:	mov    BYTE PTR [rbp-0x40],dil
   14002e3f5:	mov    r9d,edx
   14002e3f8:	mov    BYTE PTR [rbp-0x3f],0x0
   14002e3fc:	xor    eax,eax
   14002e3fe:	mov    DWORD PTR [rsp+0x30],edx
   14002e402:	mov    DWORD PTR [rbp-0x18],eax
   14002e405:	lea    r8,[rbp-0x40]
   14002e409:	mov    WORD PTR [rbp-0x14],ax
   14002e40d:	mov    rax,QWORD PTR [rbp-0x30]
   14002e411:	mov    ecx,DWORD PTR [rax+0xc]
   14002e414:	lea    rax,[rbp-0x18]
   14002e418:	mov    DWORD PTR [rsp+0x28],ecx
   14002e41c:	lea    rcx,[rbp-0x30]
   14002e420:	mov    QWORD PTR [rsp+0x20],rax
   14002e425:	call   0x14002ddb0
   14002e42a:	test   eax,eax
   14002e42c:	jne    0x14002e442
   14002e42e:	cmp    BYTE PTR [rbp-0x20],al
   14002e431:	je     0x14002e43e
   14002e433:	mov    rax,QWORD PTR [rbp-0x38]
   14002e437:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002e43e:	xor    eax,eax
   14002e440:	jmp    0x14002e45a
   14002e442:	movzx  eax,WORD PTR [rbp-0x18]
   14002e446:	and    eax,r14d
   14002e449:	cmp    BYTE PTR [rbp-0x20],0x0
   14002e44d:	je     0x14002e45a
   14002e44f:	mov    rcx,QWORD PTR [rbp-0x38]
   14002e453:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002e45a:	mov    rcx,QWORD PTR [rbp-0x10]
   14002e45e:	xor    rcx,rsp
   14002e461:	call   0x140030a30
   14002e466:	lea    r11,[rsp+0x80]
   14002e46e:	mov    rsi,QWORD PTR [r11+0x18]
   14002e472:	mov    rdi,QWORD PTR [r11+0x20]
   14002e476:	mov    r14,QWORD PTR [r11+0x28]
   14002e47a:	mov    rsp,r11
   14002e47d:	pop    rbp
   14002e47e:	ret    
   14002e47f:	int3   
   14002e480:	mov    rax,rsp
   14002e483:	mov    QWORD PTR [rax+0x8],rbx
   14002e487:	mov    QWORD PTR [rax+0x10],rbp
   14002e48b:	mov    QWORD PTR [rax+0x18],rsi
   14002e48f:	mov    QWORD PTR [rax+0x20],rdi
   14002e493:	push   r14
   14002e495:	xor    ebp,ebp
   14002e497:	lea    r14,[rip+0xd942]        # 0x14003bde0
   14002e49e:	mov    r10d,ebp
   14002e4a1:	mov    rsi,rcx
   14002e4a4:	mov    r11d,0xe3
   14002e4aa:	lea    eax,[r11+r10*1]
   14002e4ae:	mov    rdi,rsi
   14002e4b1:	cdq    
   14002e4b2:	mov    ebx,0x55
   14002e4b7:	sub    eax,edx
   14002e4b9:	sar    eax,1
   14002e4bb:	movsxd r8,eax
   14002e4be:	mov    rcx,r8
   14002e4c1:	shl    rcx,0x4
   14002e4c5:	mov    r9,QWORD PTR [rcx+r14*1]
   14002e4c9:	sub    rdi,r9
   14002e4cc:	movzx  edx,WORD PTR [rdi+r9*1]
   14002e4d1:	lea    ecx,[rdx-0x41]
   14002e4d4:	cmp    cx,0x19
   14002e4d8:	ja     0x14002e4de
   14002e4da:	add    dx,0x20
   14002e4de:	movzx  ecx,WORD PTR [r9]
   14002e4e2:	lea    eax,[rcx-0x41]
   14002e4e5:	cmp    ax,0x19
   14002e4e9:	ja     0x14002e4ef
   14002e4eb:	add    cx,0x20
   14002e4ef:	add    r9,0x2
   14002e4f3:	sub    rbx,0x1
   14002e4f7:	je     0x14002e503
   14002e4f9:	test   dx,dx
   14002e4fc:	je     0x14002e503
   14002e4fe:	cmp    dx,cx
   14002e501:	je     0x14002e4cc
   14002e503:	movzx  eax,cx
   14002e506:	movzx  ecx,dx
   14002e509:	sub    ecx,eax
   14002e50b:	je     0x14002e525
   14002e50d:	test   ecx,ecx
   14002e50f:	jns    0x14002e517
   14002e511:	lea    r11d,[r8-0x1]
   14002e515:	jmp    0x14002e51b
   14002e517:	lea    r10d,[r8+0x1]
   14002e51b:	cmp    r10d,r11d
   14002e51e:	jle    0x14002e4aa
   14002e520:	or     eax,0xffffffff
   14002e523:	jmp    0x14002e530
   14002e525:	mov    rax,r8
   14002e528:	add    rax,rax
   14002e52b:	mov    eax,DWORD PTR [r14+rax*8+0x8]
   14002e530:	mov    rbx,QWORD PTR [rsp+0x10]
   14002e535:	mov    rbp,QWORD PTR [rsp+0x18]
   14002e53a:	mov    rsi,QWORD PTR [rsp+0x20]
   14002e53f:	mov    rdi,QWORD PTR [rsp+0x28]
   14002e544:	pop    r14
   14002e546:	ret    
   14002e547:	int3   
   14002e548:	sub    rsp,0x28
   14002e54c:	test   rcx,rcx
   14002e54f:	je     0x14002e573
   14002e551:	call   0x14002e480
   14002e556:	test   eax,eax
   14002e558:	js     0x14002e573
   14002e55a:	cdqe   
   14002e55c:	cmp    rax,0xe4
   14002e562:	jae    0x14002e573
   14002e564:	add    rax,rax
   14002e567:	lea    rcx,[rip+0xbe22]        # 0x14003a390
   14002e56e:	mov    eax,DWORD PTR [rcx+rax*8]
   14002e571:	jmp    0x14002e575
   14002e573:	xor    eax,eax
   14002e575:	add    rsp,0x28
   14002e579:	ret    
   14002e57a:	int3   
   14002e57b:	int3   
   14002e57c:	mov    QWORD PTR [rsp+0x8],rbx
   14002e581:	push   rdi
   14002e582:	sub    rsp,0x20
   14002e586:	mov    rbx,rcx
   14002e589:	test   rcx,rcx
   14002e58c:	jne    0x14002e5a3
   14002e58e:	call   0x14002a494
   14002e593:	mov    DWORD PTR [rax],0x16
   14002e599:	call   0x1400281ac
   14002e59e:	or     eax,0xffffffff
   14002e5a1:	jmp    0x14002e5f4
   14002e5a3:	or     edi,0xffffffff
   14002e5a6:	mov    eax,DWORD PTR [rcx+0x14]
   14002e5a9:	shr    eax,0xd
   14002e5ac:	test   al,0x1
   14002e5ae:	je     0x14002e5ea
   14002e5b0:	call   0x140028734
   14002e5b5:	mov    rcx,rbx
   14002e5b8:	mov    edi,eax
   14002e5ba:	call   0x14002ac3c
   14002e5bf:	mov    rcx,rbx
   14002e5c2:	call   0x14002ba28
   14002e5c7:	mov    ecx,eax
   14002e5c9:	call   0x14002f3bc
   14002e5ce:	test   eax,eax
   14002e5d0:	jns    0x14002e5d7
   14002e5d2:	or     edi,0xffffffff
   14002e5d5:	jmp    0x14002e5ea
   14002e5d7:	mov    rcx,QWORD PTR [rbx+0x28]
   14002e5db:	test   rcx,rcx
   14002e5de:	je     0x14002e5ea
   14002e5e0:	call   0x140007bd0
   14002e5e5:	and    QWORD PTR [rbx+0x28],0x0
   14002e5ea:	mov    rcx,rbx
   14002e5ed:	call   0x14002f51c
   14002e5f2:	mov    eax,edi
   14002e5f4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e5f9:	add    rsp,0x20
   14002e5fd:	pop    rdi
   14002e5fe:	ret    
   14002e5ff:	int3   
   14002e600:	mov    QWORD PTR [rsp+0x10],rbx
   14002e605:	mov    QWORD PTR [rsp+0x8],rcx
   14002e60a:	push   rdi
   14002e60b:	sub    rsp,0x20
   14002e60f:	mov    rbx,rcx
   14002e612:	xor    eax,eax
   14002e614:	test   rcx,rcx
   14002e617:	setne  al
   14002e61a:	test   eax,eax
   14002e61c:	jne    0x14002e633
   14002e61e:	call   0x14002a494
   14002e623:	mov    DWORD PTR [rax],0x16
   14002e629:	call   0x1400281ac
   14002e62e:	or     eax,0xffffffff
   14002e631:	jmp    0x14002e65e
   14002e633:	mov    eax,DWORD PTR [rcx+0x14]
   14002e636:	shr    eax,0xc
   14002e639:	test   al,0x1
   14002e63b:	je     0x14002e644
   14002e63d:	call   0x14002f51c
   14002e642:	jmp    0x14002e62e
   14002e644:	call   0x14002871c
   14002e649:	nop
   14002e64a:	mov    rcx,rbx
   14002e64d:	call   0x14002e57c
   14002e652:	mov    edi,eax
   14002e654:	mov    rcx,rbx
   14002e657:	call   0x140028728
   14002e65c:	mov    eax,edi
   14002e65e:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e663:	add    rsp,0x20
   14002e667:	pop    rdi
   14002e668:	ret    
   14002e669:	int3   
   14002e66a:	int3   
   14002e66b:	int3   
   14002e66c:	sub    rsp,0x28
   14002e670:	cmp    ecx,0xfffffffe
   14002e673:	jne    0x14002e682
   14002e675:	call   0x14002a494
   14002e67a:	mov    DWORD PTR [rax],0x9
   14002e680:	jmp    0x14002e6c4
   14002e682:	test   ecx,ecx
   14002e684:	js     0x14002e6b4
   14002e686:	cmp    ecx,DWORD PTR [rip+0x1a614]        # 0x140048ca0
   14002e68c:	jae    0x14002e6b4
   14002e68e:	movsxd rcx,ecx
   14002e691:	lea    rdx,[rip+0x1a208]        # 0x1400488a0
   14002e698:	mov    rax,rcx
   14002e69b:	and    ecx,0x3f
   14002e69e:	sar    rax,0x6
   14002e6a2:	shl    rcx,0x6
   14002e6a6:	mov    rax,QWORD PTR [rdx+rax*8]
   14002e6aa:	movzx  eax,BYTE PTR [rax+rcx*1+0x38]
   14002e6af:	and    eax,0x40
   14002e6b2:	jmp    0x14002e6c6
   14002e6b4:	call   0x14002a494
   14002e6b9:	mov    DWORD PTR [rax],0x9
   14002e6bf:	call   0x1400281ac
   14002e6c4:	xor    eax,eax
   14002e6c6:	add    rsp,0x28
   14002e6ca:	ret    
   14002e6cb:	int3   
   14002e6cc:	mov    QWORD PTR [rsp+0x8],rbx
   14002e6d1:	mov    QWORD PTR [rsp+0x10],rsi
   14002e6d6:	push   rdi
   14002e6d7:	sub    rsp,0x20
   14002e6db:	movsxd rbx,ecx
   14002e6de:	mov    edi,r8d
   14002e6e1:	mov    ecx,ebx
   14002e6e3:	mov    rsi,rdx
   14002e6e6:	call   0x14002da30
   14002e6eb:	cmp    rax,0xffffffffffffffff
   14002e6ef:	jne    0x14002e702
   14002e6f1:	call   0x14002a494
   14002e6f6:	mov    DWORD PTR [rax],0x9
   14002e6fc:	or     rax,0xffffffffffffffff
   14002e700:	jmp    0x14002e755
   14002e702:	mov    r9d,edi
   14002e705:	lea    r8,[rsp+0x48]
   14002e70a:	mov    rdx,rsi
   14002e70d:	mov    rcx,rax
   14002e710:	call   QWORD PTR [rip+0x38fa]        # 0x140032010
   14002e716:	test   eax,eax
   14002e718:	jne    0x14002e729
   14002e71a:	call   QWORD PTR [rip+0x3ae8]        # 0x140032208
   14002e720:	mov    ecx,eax
   14002e722:	call   0x14002a424
   14002e727:	jmp    0x14002e6fc
   14002e729:	mov    rax,QWORD PTR [rsp+0x48]
   14002e72e:	cmp    rax,0xffffffffffffffff
   14002e732:	je     0x14002e6fc
   14002e734:	mov    rdx,rbx
   14002e737:	lea    r8,[rip+0x1a162]        # 0x1400488a0
   14002e73e:	and    edx,0x3f
   14002e741:	mov    rcx,rbx
   14002e744:	sar    rcx,0x6
   14002e748:	shl    rdx,0x6
   14002e74c:	mov    rcx,QWORD PTR [r8+rcx*8]
   14002e750:	and    BYTE PTR [rcx+rdx*1+0x38],0xfd
   14002e755:	mov    rbx,QWORD PTR [rsp+0x30]
   14002e75a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002e75f:	add    rsp,0x20
   14002e763:	pop    rdi
   14002e764:	ret    
   14002e765:	int3   
   14002e766:	int3   
   14002e767:	int3   
   14002e768:	jmp    0x14002e6cc
   14002e76d:	int3   
   14002e76e:	int3   
   14002e76f:	int3   
   14002e770:	mov    WORD PTR [rsp+0x8],cx
   14002e775:	sub    rsp,0x38
   14002e779:	mov    rcx,QWORD PTR [rip+0x18328]        # 0x140046aa8
   14002e780:	cmp    rcx,0xfffffffffffffffe
   14002e784:	jne    0x14002e792
   14002e786:	call   0x14002f560
   14002e78b:	mov    rcx,QWORD PTR [rip+0x18316]        # 0x140046aa8
   14002e792:	cmp    rcx,0xffffffffffffffff
   14002e796:	jne    0x14002e79f
   14002e798:	mov    eax,0xffff
   14002e79d:	jmp    0x14002e7c4
   14002e79f:	and    QWORD PTR [rsp+0x20],0x0
   14002e7a5:	lea    r9,[rsp+0x48]
   14002e7aa:	mov    r8d,0x1
   14002e7b0:	lea    rdx,[rsp+0x40]
   14002e7b5:	call   QWORD PTR [rip+0x384d]        # 0x140032008
   14002e7bb:	test   eax,eax
   14002e7bd:	je     0x14002e798
   14002e7bf:	movzx  eax,WORD PTR [rsp+0x40]
   14002e7c4:	add    rsp,0x38
   14002e7c8:	ret    
   14002e7c9:	int3   
   14002e7ca:	int3   
   14002e7cb:	int3   
   14002e7cc:	rex push rbx
   14002e7ce:	sub    rsp,0x40
   14002e7d2:	mov    ebx,ecx
   14002e7d4:	lea    rcx,[rsp+0x20]
   14002e7d9:	call   0x1400288e8
   14002e7de:	mov    rax,QWORD PTR [rsp+0x28]
   14002e7e3:	movzx  edx,bl
   14002e7e6:	mov    rcx,QWORD PTR [rax]
   14002e7e9:	movzx  eax,WORD PTR [rcx+rdx*2]
   14002e7ed:	and    eax,0x8000
   14002e7f2:	cmp    BYTE PTR [rsp+0x38],0x0
   14002e7f7:	je     0x14002e805
   14002e7f9:	mov    rcx,QWORD PTR [rsp+0x20]
   14002e7fe:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002e805:	add    rsp,0x40
   14002e809:	pop    rbx
   14002e80a:	ret    
   14002e80b:	int3   
   14002e80c:	rex push rbp
   14002e80e:	push   r12
   14002e810:	push   r13
   14002e812:	push   r14
   14002e814:	push   r15
   14002e816:	sub    rsp,0x60
   14002e81a:	lea    rbp,[rsp+0x50]
   14002e81f:	mov    QWORD PTR [rbp+0x40],rbx
   14002e823:	mov    QWORD PTR [rbp+0x48],rsi
   14002e827:	mov    QWORD PTR [rbp+0x50],rdi
   14002e82b:	mov    rax,QWORD PTR [rip+0x179b6]        # 0x1400461e8
   14002e832:	xor    rax,rbp
   14002e835:	mov    QWORD PTR [rbp+0x8],rax
   14002e839:	movsxd rbx,DWORD PTR [rbp+0x60]
   14002e83d:	mov    r15,r9
   14002e840:	mov    QWORD PTR [rbp+0x0],rdx
   14002e844:	mov    r13d,r8d
   14002e847:	mov    rdi,rcx
   14002e84a:	test   ebx,ebx
   14002e84c:	jle    0x14002e862
   14002e84e:	mov    rdx,rbx
   14002e851:	mov    rcx,r9
   14002e854:	call   0x14002f5bc
   14002e859:	cmp    eax,ebx
   14002e85b:	lea    ebx,[rax+0x1]
   14002e85e:	jl     0x14002e862
   14002e860:	mov    ebx,eax
   14002e862:	mov    r14d,DWORD PTR [rbp+0x78]
   14002e866:	test   r14d,r14d
   14002e869:	jne    0x14002e872
   14002e86b:	mov    rax,QWORD PTR [rdi]
   14002e86e:	mov    r14d,DWORD PTR [rax+0xc]
   14002e872:	neg    DWORD PTR [rbp+0x80]
   14002e878:	mov    r9d,ebx
   14002e87b:	mov    r8,r15
   14002e87e:	mov    ecx,r14d
   14002e881:	sbb    edx,edx
   14002e883:	and    DWORD PTR [rsp+0x28],0x0
   14002e888:	and    QWORD PTR [rsp+0x20],0x0
   14002e88e:	and    edx,0x8
   14002e891:	inc    edx
   14002e893:	call   QWORD PTR [rip+0x3827]        # 0x1400320c0
   14002e899:	movsxd r12,eax
   14002e89c:	test   eax,eax
   14002e89e:	je     0x14002eb1f
   14002e8a4:	mov    rdx,r12
   14002e8a7:	movabs r8,0xffffffffffffff0
   14002e8b1:	add    rdx,rdx
   14002e8b4:	lea    rcx,[rdx+0x10]
   14002e8b8:	cmp    rdx,rcx
   14002e8bb:	sbb    rax,rax
   14002e8be:	test   rcx,rax
   14002e8c1:	je     0x14002e935
   14002e8c3:	lea    rcx,[rdx+0x10]
   14002e8c7:	cmp    rdx,rcx
   14002e8ca:	sbb    rax,rax
   14002e8cd:	and    rax,rcx
   14002e8d0:	cmp    rax,0x400
   14002e8d6:	lea    rax,[rdx+0x10]
   14002e8da:	ja     0x14002e913
   14002e8dc:	cmp    rdx,rax
   14002e8df:	sbb    rcx,rcx
   14002e8e2:	and    rcx,rax
   14002e8e5:	lea    rax,[rcx+0xf]
   14002e8e9:	cmp    rax,rcx
   14002e8ec:	ja     0x14002e8f1
   14002e8ee:	mov    rax,r8
   14002e8f1:	and    rax,0xfffffffffffffff0
   14002e8f5:	call   0x1400263c0
   14002e8fa:	sub    rsp,rax
   14002e8fd:	lea    rsi,[rsp+0x50]
   14002e902:	test   rsi,rsi
   14002e905:	je     0x14002eb05
   14002e90b:	mov    DWORD PTR [rsi],0xcccc
   14002e911:	jmp    0x14002e92f
   14002e913:	cmp    rdx,rax
   14002e916:	sbb    rcx,rcx
   14002e919:	and    rcx,rax
   14002e91c:	call   0x140007bf0
   14002e921:	mov    rsi,rax
   14002e924:	test   rax,rax
   14002e927:	je     0x14002e937
   14002e929:	mov    DWORD PTR [rax],0xdddd
   14002e92f:	add    rsi,0x10
   14002e933:	jmp    0x14002e937
   14002e935:	xor    esi,esi
   14002e937:	test   rsi,rsi
   14002e93a:	je     0x14002eb05
   14002e940:	mov    DWORD PTR [rsp+0x28],r12d
   14002e945:	mov    r9d,ebx
   14002e948:	mov    r8,r15
   14002e94b:	mov    QWORD PTR [rsp+0x20],rsi
   14002e950:	mov    edx,0x1
   14002e955:	mov    ecx,r14d
   14002e958:	call   QWORD PTR [rip+0x3762]        # 0x1400320c0
   14002e95e:	test   eax,eax
   14002e960:	je     0x14002eb05
   14002e966:	and    QWORD PTR [rsp+0x40],0x0
   14002e96c:	mov    r9d,r12d
   14002e96f:	and    QWORD PTR [rsp+0x38],0x0
   14002e975:	mov    r8,rsi
   14002e978:	and    QWORD PTR [rsp+0x30],0x0
   14002e97e:	mov    edx,r13d
   14002e981:	mov    r15,QWORD PTR [rbp+0x0]
   14002e985:	and    DWORD PTR [rsp+0x28],0x0
   14002e98a:	mov    rcx,r15
   14002e98d:	and    QWORD PTR [rsp+0x20],0x0
   14002e993:	call   0x14002a92c
   14002e998:	movsxd rdi,eax
   14002e99b:	test   eax,eax
   14002e99d:	je     0x14002eb05
   14002e9a3:	mov    r8d,0x400
   14002e9a9:	test   r8d,r13d
   14002e9ac:	je     0x14002ea00
   14002e9ae:	mov    eax,DWORD PTR [rbp+0x70]
   14002e9b1:	test   eax,eax
   14002e9b3:	je     0x14002eb07
   14002e9b9:	cmp    edi,eax
   14002e9bb:	jg     0x14002eb05
   14002e9c1:	and    QWORD PTR [rsp+0x40],0x0
   14002e9c7:	mov    r9d,r12d
   14002e9ca:	and    QWORD PTR [rsp+0x38],0x0
   14002e9d0:	mov    r8,rsi
   14002e9d3:	and    QWORD PTR [rsp+0x30],0x0
   14002e9d9:	mov    edx,r13d
   14002e9dc:	mov    DWORD PTR [rsp+0x28],eax
   14002e9e0:	mov    rcx,r15
   14002e9e3:	mov    rax,QWORD PTR [rbp+0x68]
   14002e9e7:	mov    QWORD PTR [rsp+0x20],rax
   14002e9ec:	call   0x14002a92c
   14002e9f1:	mov    edi,eax
   14002e9f3:	test   eax,eax
   14002e9f5:	jne    0x14002eb07
   14002e9fb:	jmp    0x14002eb05
   14002ea00:	mov    rdx,rdi
   14002ea03:	add    rdx,rdx
   14002ea06:	lea    rcx,[rdx+0x10]
   14002ea0a:	cmp    rdx,rcx
   14002ea0d:	sbb    rax,rax
   14002ea10:	test   rcx,rax
   14002ea13:	je     0x14002ea8b
   14002ea15:	lea    rcx,[rdx+0x10]
   14002ea19:	cmp    rdx,rcx
   14002ea1c:	sbb    rax,rax
   14002ea1f:	and    rax,rcx
   14002ea22:	cmp    rax,r8
   14002ea25:	lea    rax,[rdx+0x10]
   14002ea29:	ja     0x14002ea69
   14002ea2b:	cmp    rdx,rax
   14002ea2e:	sbb    rcx,rcx
   14002ea31:	and    rcx,rax
   14002ea34:	lea    rax,[rcx+0xf]
   14002ea38:	cmp    rax,rcx
   14002ea3b:	ja     0x14002ea47
   14002ea3d:	movabs rax,0xffffffffffffff0
   14002ea47:	and    rax,0xfffffffffffffff0
   14002ea4b:	call   0x1400263c0
   14002ea50:	sub    rsp,rax
   14002ea53:	lea    rbx,[rsp+0x50]
   14002ea58:	test   rbx,rbx
   14002ea5b:	je     0x14002eb05
   14002ea61:	mov    DWORD PTR [rbx],0xcccc
   14002ea67:	jmp    0x14002ea85
   14002ea69:	cmp    rdx,rax
   14002ea6c:	sbb    rcx,rcx
   14002ea6f:	and    rcx,rax
   14002ea72:	call   0x140007bf0
   14002ea77:	mov    rbx,rax
   14002ea7a:	test   rax,rax
   14002ea7d:	je     0x14002ea8d
   14002ea7f:	mov    DWORD PTR [rax],0xdddd
   14002ea85:	add    rbx,0x10
   14002ea89:	jmp    0x14002ea8d
   14002ea8b:	xor    ebx,ebx
   14002ea8d:	test   rbx,rbx
   14002ea90:	je     0x14002eb05
   14002ea92:	and    QWORD PTR [rsp+0x40],0x0
   14002ea98:	mov    r9d,r12d
   14002ea9b:	and    QWORD PTR [rsp+0x38],0x0
   14002eaa1:	mov    r8,rsi
   14002eaa4:	and    QWORD PTR [rsp+0x30],0x0
   14002eaaa:	mov    edx,r13d
   14002eaad:	mov    DWORD PTR [rsp+0x28],edi
   14002eab1:	mov    rcx,r15
   14002eab4:	mov    QWORD PTR [rsp+0x20],rbx
   14002eab9:	call   0x14002a92c
   14002eabe:	test   eax,eax
   14002eac0:	je     0x14002eaf4
   14002eac2:	and    QWORD PTR [rsp+0x38],0x0
   14002eac8:	xor    edx,edx
   14002eaca:	and    QWORD PTR [rsp+0x30],rdx
   14002eacf:	mov    r9d,edi
   14002ead2:	mov    eax,DWORD PTR [rbp+0x70]
   14002ead5:	mov    r8,rbx
   14002ead8:	mov    ecx,r14d
   14002eadb:	test   eax,eax
   14002eadd:	jne    0x14002eb45
   14002eadf:	and    DWORD PTR [rsp+0x28],edx
   14002eae3:	and    QWORD PTR [rsp+0x20],rdx
   14002eae8:	call   QWORD PTR [rip+0x35ca]        # 0x1400320b8
   14002eaee:	mov    edi,eax
   14002eaf0:	test   eax,eax
   14002eaf2:	jne    0x14002eb54
   14002eaf4:	lea    rcx,[rbx-0x10]
   14002eaf8:	cmp    DWORD PTR [rcx],0xdddd
   14002eafe:	jne    0x14002eb05
   14002eb00:	call   0x140007bd0
   14002eb05:	xor    edi,edi
   14002eb07:	test   rsi,rsi
   14002eb0a:	je     0x14002eb1d
   14002eb0c:	lea    rcx,[rsi-0x10]
   14002eb10:	cmp    DWORD PTR [rcx],0xdddd
   14002eb16:	jne    0x14002eb1d
   14002eb18:	call   0x140007bd0
   14002eb1d:	mov    eax,edi
   14002eb1f:	mov    rcx,QWORD PTR [rbp+0x8]
   14002eb23:	xor    rcx,rbp
   14002eb26:	call   0x140030a30
   14002eb2b:	mov    rbx,QWORD PTR [rbp+0x40]
   14002eb2f:	mov    rsi,QWORD PTR [rbp+0x48]
   14002eb33:	mov    rdi,QWORD PTR [rbp+0x50]
   14002eb37:	lea    rsp,[rbp+0x10]
   14002eb3b:	pop    r15
   14002eb3d:	pop    r14
   14002eb3f:	pop    r13
   14002eb41:	pop    r12
   14002eb43:	pop    rbp
   14002eb44:	ret    
   14002eb45:	mov    DWORD PTR [rsp+0x28],eax
   14002eb49:	mov    rax,QWORD PTR [rbp+0x68]
   14002eb4d:	mov    QWORD PTR [rsp+0x20],rax
   14002eb52:	jmp    0x14002eae8
   14002eb54:	lea    rcx,[rbx-0x10]
   14002eb58:	cmp    DWORD PTR [rcx],0xdddd
   14002eb5e:	jne    0x14002eb07
   14002eb60:	call   0x140007bd0
   14002eb65:	jmp    0x14002eb07
   14002eb67:	int3   
   14002eb68:	mov    QWORD PTR [rsp+0x8],rbx
   14002eb6d:	mov    QWORD PTR [rsp+0x10],rsi
   14002eb72:	push   rdi
   14002eb73:	sub    rsp,0x70
   14002eb77:	mov    rsi,rdx
   14002eb7a:	mov    rbx,r9
   14002eb7d:	mov    rdx,rcx
   14002eb80:	mov    edi,r8d
   14002eb83:	lea    rcx,[rsp+0x50]
   14002eb88:	call   0x1400288e8
   14002eb8d:	mov    eax,DWORD PTR [rsp+0xc0]
   14002eb94:	lea    rcx,[rsp+0x58]
   14002eb99:	mov    DWORD PTR [rsp+0x40],eax
   14002eb9d:	mov    r9,rbx
   14002eba0:	mov    eax,DWORD PTR [rsp+0xb8]
   14002eba7:	mov    r8d,edi
   14002ebaa:	mov    DWORD PTR [rsp+0x38],eax
   14002ebae:	mov    rdx,rsi
   14002ebb1:	mov    eax,DWORD PTR [rsp+0xb0]
   14002ebb8:	mov    DWORD PTR [rsp+0x30],eax
   14002ebbc:	mov    rax,QWORD PTR [rsp+0xa8]
   14002ebc4:	mov    QWORD PTR [rsp+0x28],rax
   14002ebc9:	mov    eax,DWORD PTR [rsp+0xa0]
   14002ebd0:	mov    DWORD PTR [rsp+0x20],eax
   14002ebd4:	call   0x14002e80c
   14002ebd9:	cmp    BYTE PTR [rsp+0x68],0x0
   14002ebde:	je     0x14002ebec
   14002ebe0:	mov    rcx,QWORD PTR [rsp+0x50]
   14002ebe5:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002ebec:	lea    r11,[rsp+0x70]
   14002ebf1:	mov    rbx,QWORD PTR [r11+0x10]
   14002ebf5:	mov    rsi,QWORD PTR [r11+0x18]
   14002ebf9:	mov    rsp,r11
   14002ebfc:	pop    rdi
   14002ebfd:	ret    
   14002ebfe:	int3   
   14002ebff:	int3   
   14002ec00:	cmp    rdx,rcx
   14002ec03:	jbe    0x14002eccb
   14002ec09:	mov    QWORD PTR [rsp+0x20],rbp
   14002ec0e:	push   rdi
   14002ec0f:	push   r14
   14002ec11:	push   r15
   14002ec13:	sub    rsp,0x20
   14002ec17:	mov    QWORD PTR [rsp+0x40],rbx
   14002ec1c:	mov    r14,r9
   14002ec1f:	mov    QWORD PTR [rsp+0x48],rsi
   14002ec24:	mov    rbp,r8
   14002ec27:	mov    QWORD PTR [rsp+0x50],r12
   14002ec2c:	mov    rdi,rdx
   14002ec2f:	lea    r12,[rcx+r8*1]
   14002ec33:	mov    r15,rcx
   14002ec36:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002ec40:	mov    rbx,r15
   14002ec43:	mov    rsi,r12
   14002ec46:	cmp    r12,rdi
   14002ec49:	ja     0x14002ec70
   14002ec4b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002ec50:	mov    rcx,r14
   14002ec53:	call   QWORD PTR [rip+0x3987]        # 0x1400325e0
   14002ec59:	mov    rdx,rbx
   14002ec5c:	mov    rcx,rsi
   14002ec5f:	call   r14
   14002ec62:	test   eax,eax
   14002ec64:	cmovg  rbx,rsi
   14002ec68:	add    rsi,rbp
   14002ec6b:	cmp    rsi,rdi
   14002ec6e:	jbe    0x14002ec50
   14002ec70:	mov    r8,rbp
   14002ec73:	mov    rax,rdi
   14002ec76:	cmp    rbx,rdi
   14002ec79:	je     0x14002eca6
   14002ec7b:	test   rbp,rbp
   14002ec7e:	je     0x14002eca6
   14002ec80:	sub    rbx,rdi
   14002ec83:	nop    DWORD PTR [rax+0x0]
   14002ec87:	nop    WORD PTR [rax+rax*1+0x0]
   14002ec90:	movzx  ecx,BYTE PTR [rax]
   14002ec93:	movzx  edx,BYTE PTR [rbx+rax*1]
   14002ec97:	mov    BYTE PTR [rbx+rax*1],cl
   14002ec9a:	mov    BYTE PTR [rax],dl
   14002ec9c:	lea    rax,[rax+0x1]
   14002eca0:	sub    r8,0x1
   14002eca4:	jne    0x14002ec90
   14002eca6:	sub    rdi,rbp
   14002eca9:	cmp    rdi,r15
   14002ecac:	ja     0x14002ec40
   14002ecae:	mov    r12,QWORD PTR [rsp+0x50]
   14002ecb3:	mov    rsi,QWORD PTR [rsp+0x48]
   14002ecb8:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ecbd:	mov    rbp,QWORD PTR [rsp+0x58]
   14002ecc2:	add    rsp,0x20
   14002ecc6:	pop    r15
   14002ecc8:	pop    r14
   14002ecca:	pop    rdi
   14002eccb:	ret    
   14002eccc:	int3   
   14002eccd:	int3   
   14002ecce:	int3   
   14002eccf:	int3   
   14002ecd0:	rex push rbp
   14002ecd2:	push   r12
   14002ecd4:	push   r14
   14002ecd6:	sub    rsp,0x440
   14002ecdd:	mov    rax,QWORD PTR [rip+0x17504]        # 0x1400461e8
   14002ece4:	xor    rax,rsp
   14002ece7:	mov    QWORD PTR [rsp+0x400],rax
   14002ecef:	mov    r14,r9
   14002ecf2:	mov    rbp,r8
   14002ecf5:	mov    r12,rcx
   14002ecf8:	test   rcx,rcx
   14002ecfb:	jne    0x14002ed17
   14002ecfd:	test   rdx,rdx
   14002ed00:	je     0x14002ed17
   14002ed02:	call   0x14002a494
   14002ed07:	mov    DWORD PTR [rax],0x16
   14002ed0d:	call   0x1400281ac
   14002ed12:	jmp    0x14002efe7
   14002ed17:	test   r8,r8
   14002ed1a:	je     0x14002ed02
   14002ed1c:	test   r9,r9
   14002ed1f:	je     0x14002ed02
   14002ed21:	cmp    rdx,0x2
   14002ed25:	jb     0x14002efe7
   14002ed2b:	mov    QWORD PTR [rsp+0x438],rbx
   14002ed33:	mov    QWORD PTR [rsp+0x430],rsi
   14002ed3b:	mov    QWORD PTR [rsp+0x428],rdi
   14002ed43:	mov    QWORD PTR [rsp+0x420],r13
   14002ed4b:	mov    QWORD PTR [rsp+0x418],r15
   14002ed53:	lea    r15,[rdx-0x1]
   14002ed57:	imul   r15,rbp
   14002ed5b:	add    r15,rcx
   14002ed5e:	xor    r13d,r13d
   14002ed61:	xor    edx,edx
   14002ed63:	mov    rax,r15
   14002ed66:	sub    rax,r12
   14002ed69:	div    rbp
   14002ed6c:	lea    rsi,[rax+0x1]
   14002ed70:	cmp    rsi,0x8
   14002ed74:	ja     0x14002eda0
   14002ed76:	mov    r9,r14
   14002ed79:	mov    r8,rbp
   14002ed7c:	mov    rdx,r15
   14002ed7f:	mov    rcx,r12
   14002ed82:	call   0x14002ec00
   14002ed87:	sub    r13,0x1
   14002ed8b:	js     0x14002efbf
   14002ed91:	mov    r12,QWORD PTR [rsp+r13*8+0x20]
   14002ed96:	mov    r15,QWORD PTR [rsp+r13*8+0x210]
   14002ed9e:	jmp    0x14002ed61
   14002eda0:	shr    rsi,1
   14002eda3:	mov    rcx,r14
   14002eda6:	imul   rsi,rbp
   14002edaa:	add    rsi,r12
   14002edad:	call   QWORD PTR [rip+0x382d]        # 0x1400325e0
   14002edb3:	mov    rdx,rsi
   14002edb6:	mov    rcx,r12
   14002edb9:	call   r14
   14002edbc:	test   eax,eax
   14002edbe:	jle    0x14002ede9
   14002edc0:	mov    r8,rbp
   14002edc3:	mov    rdx,rsi
   14002edc6:	cmp    r12,rsi
   14002edc9:	je     0x14002ede9
   14002edcb:	mov    r9,r12
   14002edce:	sub    r9,rsi
   14002edd1:	movzx  eax,BYTE PTR [rdx]
   14002edd4:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002edd9:	mov    BYTE PTR [r9+rdx*1],al
   14002eddd:	mov    BYTE PTR [rdx],cl
   14002eddf:	lea    rdx,[rdx+0x1]
   14002ede3:	sub    r8,0x1
   14002ede7:	jne    0x14002edd1
   14002ede9:	mov    rcx,r14
   14002edec:	call   QWORD PTR [rip+0x37ee]        # 0x1400325e0
   14002edf2:	mov    rdx,r15
   14002edf5:	mov    rcx,r12
   14002edf8:	call   r14
   14002edfb:	test   eax,eax
   14002edfd:	jle    0x14002ee28
   14002edff:	mov    r8,rbp
   14002ee02:	mov    rdx,r15
   14002ee05:	cmp    r12,r15
   14002ee08:	je     0x14002ee28
   14002ee0a:	mov    r9,r12
   14002ee0d:	sub    r9,r15
   14002ee10:	movzx  eax,BYTE PTR [rdx]
   14002ee13:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002ee18:	mov    BYTE PTR [r9+rdx*1],al
   14002ee1c:	mov    BYTE PTR [rdx],cl
   14002ee1e:	lea    rdx,[rdx+0x1]
   14002ee22:	sub    r8,0x1
   14002ee26:	jne    0x14002ee10
   14002ee28:	mov    rcx,r14
   14002ee2b:	call   QWORD PTR [rip+0x37af]        # 0x1400325e0
   14002ee31:	mov    rdx,r15
   14002ee34:	mov    rcx,rsi
   14002ee37:	call   r14
   14002ee3a:	test   eax,eax
   14002ee3c:	jle    0x14002ee68
   14002ee3e:	mov    r8,rbp
   14002ee41:	mov    rdx,r15
   14002ee44:	cmp    rsi,r15
   14002ee47:	je     0x14002ee68
   14002ee49:	mov    r9,rsi
   14002ee4c:	sub    r9,r15
   14002ee4f:	nop
   14002ee50:	movzx  eax,BYTE PTR [rdx]
   14002ee53:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002ee58:	mov    BYTE PTR [r9+rdx*1],al
   14002ee5c:	mov    BYTE PTR [rdx],cl
   14002ee5e:	lea    rdx,[rdx+0x1]
   14002ee62:	sub    r8,0x1
   14002ee66:	jne    0x14002ee50
   14002ee68:	mov    rbx,r12
   14002ee6b:	mov    rdi,r15
   14002ee6e:	xchg   ax,ax
   14002ee70:	cmp    rsi,rbx
   14002ee73:	jbe    0x14002ee98
   14002ee75:	add    rbx,rbp
   14002ee78:	cmp    rbx,rsi
   14002ee7b:	jae    0x14002ee98
   14002ee7d:	mov    rcx,r14
   14002ee80:	call   QWORD PTR [rip+0x375a]        # 0x1400325e0
   14002ee86:	mov    rdx,rsi
   14002ee89:	mov    rcx,rbx
   14002ee8c:	call   r14
   14002ee8f:	test   eax,eax
   14002ee91:	jle    0x14002ee75
   14002ee93:	cmp    rsi,rbx
   14002ee96:	ja     0x14002eeb6
   14002ee98:	add    rbx,rbp
   14002ee9b:	cmp    rbx,r15
   14002ee9e:	ja     0x14002eeb6
   14002eea0:	mov    rcx,r14
   14002eea3:	call   QWORD PTR [rip+0x3737]        # 0x1400325e0
   14002eea9:	mov    rdx,rsi
   14002eeac:	mov    rcx,rbx
   14002eeaf:	call   r14
   14002eeb2:	test   eax,eax
   14002eeb4:	jle    0x14002ee98
   14002eeb6:	sub    rdi,rbp
   14002eeb9:	cmp    rdi,rsi
   14002eebc:	jbe    0x14002eed4
   14002eebe:	mov    rcx,r14
   14002eec1:	call   QWORD PTR [rip+0x3719]        # 0x1400325e0
   14002eec7:	mov    rdx,rsi
   14002eeca:	mov    rcx,rdi
   14002eecd:	call   r14
   14002eed0:	test   eax,eax
   14002eed2:	jg     0x14002eeb6
   14002eed4:	cmp    rdi,rbx
   14002eed7:	jb     0x14002ef19
   14002eed9:	mov    r8,rbp
   14002eedc:	mov    rdx,rdi
   14002eedf:	cmp    rbx,rdi
   14002eee2:	je     0x14002ef08
   14002eee4:	mov    r9,rbx
   14002eee7:	sub    r9,rdi
   14002eeea:	nop    WORD PTR [rax+rax*1+0x0]
   14002eef0:	movzx  eax,BYTE PTR [rdx]
   14002eef3:	movzx  ecx,BYTE PTR [r9+rdx*1]
   14002eef8:	mov    BYTE PTR [r9+rdx*1],al
   14002eefc:	mov    BYTE PTR [rdx],cl
   14002eefe:	lea    rdx,[rdx+0x1]
   14002ef02:	sub    r8,0x1
   14002ef06:	jne    0x14002eef0
   14002ef08:	cmp    rsi,rdi
   14002ef0b:	jne    0x14002ee70
   14002ef11:	mov    rsi,rbx
   14002ef14:	jmp    0x14002ee70
   14002ef19:	add    rdi,rbp
   14002ef1c:	cmp    rsi,rdi
   14002ef1f:	jae    0x14002ef44
   14002ef21:	sub    rdi,rbp
   14002ef24:	cmp    rdi,rsi
   14002ef27:	jbe    0x14002ef44
   14002ef29:	mov    rcx,r14
   14002ef2c:	call   QWORD PTR [rip+0x36ae]        # 0x1400325e0
   14002ef32:	mov    rdx,rsi
   14002ef35:	mov    rcx,rdi
   14002ef38:	call   r14
   14002ef3b:	test   eax,eax
   14002ef3d:	je     0x14002ef21
   14002ef3f:	cmp    rsi,rdi
   14002ef42:	jb     0x14002ef62
   14002ef44:	sub    rdi,rbp
   14002ef47:	cmp    rdi,r12
   14002ef4a:	jbe    0x14002ef62
   14002ef4c:	mov    rcx,r14
   14002ef4f:	call   QWORD PTR [rip+0x368b]        # 0x1400325e0
   14002ef55:	mov    rdx,rsi
   14002ef58:	mov    rcx,rdi
   14002ef5b:	call   r14
   14002ef5e:	test   eax,eax
   14002ef60:	je     0x14002ef44
   14002ef62:	mov    rcx,r15
   14002ef65:	mov    rax,rdi
   14002ef68:	sub    rcx,rbx
   14002ef6b:	sub    rax,r12
   14002ef6e:	cmp    rax,rcx
   14002ef71:	jl     0x14002ef99
   14002ef73:	cmp    r12,rdi
   14002ef76:	jae    0x14002ef88
   14002ef78:	mov    QWORD PTR [rsp+r13*8+0x20],r12
   14002ef7d:	mov    QWORD PTR [rsp+r13*8+0x210],rdi
   14002ef85:	inc    r13
   14002ef88:	cmp    rbx,r15
   14002ef8b:	jae    0x14002ed87
   14002ef91:	mov    r12,rbx
   14002ef94:	jmp    0x14002ed61
   14002ef99:	cmp    rbx,r15
   14002ef9c:	jae    0x14002efae
   14002ef9e:	mov    QWORD PTR [rsp+r13*8+0x20],rbx
   14002efa3:	mov    QWORD PTR [rsp+r13*8+0x210],r15
   14002efab:	inc    r13
   14002efae:	cmp    r12,rdi
   14002efb1:	jae    0x14002ed87
   14002efb7:	mov    r15,rdi
   14002efba:	jmp    0x14002ed61
   14002efbf:	mov    r13,QWORD PTR [rsp+0x420]
   14002efc7:	mov    rdi,QWORD PTR [rsp+0x428]
   14002efcf:	mov    rsi,QWORD PTR [rsp+0x430]
   14002efd7:	mov    rbx,QWORD PTR [rsp+0x438]
   14002efdf:	mov    r15,QWORD PTR [rsp+0x418]
   14002efe7:	mov    rcx,QWORD PTR [rsp+0x400]
   14002efef:	xor    rcx,rsp
   14002eff2:	call   0x140030a30
   14002eff7:	add    rsp,0x440
   14002effe:	pop    r14
   14002f000:	pop    r12
   14002f002:	pop    rbp
   14002f003:	ret    
   14002f004:	mov    QWORD PTR [rsp+0x8],rbx
   14002f009:	push   rdi
   14002f00a:	sub    rsp,0x20
   14002f00e:	xor    r10d,r10d
   14002f011:	mov    r11,rdx
   14002f014:	test   r9,r9
   14002f017:	jne    0x14002f045
   14002f019:	test   rcx,rcx
   14002f01c:	jne    0x14002f04a
   14002f01e:	test   rdx,rdx
   14002f021:	je     0x14002f037
   14002f023:	call   0x14002a494
   14002f028:	mov    ebx,0x16
   14002f02d:	mov    DWORD PTR [rax],ebx
   14002f02f:	call   0x1400281ac
   14002f034:	mov    r10d,ebx
   14002f037:	mov    eax,r10d
   14002f03a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f03f:	add    rsp,0x20
   14002f043:	pop    rdi
   14002f044:	ret    
   14002f045:	test   rcx,rcx
   14002f048:	je     0x14002f023
   14002f04a:	test   rdx,rdx
   14002f04d:	je     0x14002f023
   14002f04f:	test   r9,r9
   14002f052:	jne    0x14002f059
   14002f054:	mov    BYTE PTR [rcx],r10b
   14002f057:	jmp    0x14002f037
   14002f059:	test   r8,r8
   14002f05c:	jne    0x14002f063
   14002f05e:	mov    BYTE PTR [rcx],r10b
   14002f061:	jmp    0x14002f023
   14002f063:	sub    r8,rcx
   14002f066:	mov    rdx,rcx
   14002f069:	mov    rbx,r11
   14002f06c:	mov    rdi,r9
   14002f06f:	cmp    r9,0xffffffffffffffff
   14002f073:	jne    0x14002f08a
   14002f075:	mov    al,BYTE PTR [r8+rdx*1]
   14002f079:	mov    BYTE PTR [rdx],al
   14002f07b:	inc    rdx
   14002f07e:	test   al,al
   14002f080:	je     0x14002f0ab
   14002f082:	sub    rbx,0x1
   14002f086:	jne    0x14002f075
   14002f088:	jmp    0x14002f0ab
   14002f08a:	mov    al,BYTE PTR [r8+rdx*1]
   14002f08e:	mov    BYTE PTR [rdx],al
   14002f090:	inc    rdx
   14002f093:	test   al,al
   14002f095:	je     0x14002f0a3
   14002f097:	sub    rbx,0x1
   14002f09b:	je     0x14002f0a3
   14002f09d:	sub    rdi,0x1
   14002f0a1:	jne    0x14002f08a
   14002f0a3:	test   rdi,rdi
   14002f0a6:	jne    0x14002f0ab
   14002f0a8:	mov    BYTE PTR [rdx],r10b
   14002f0ab:	test   rbx,rbx
   14002f0ae:	jne    0x14002f037
   14002f0b0:	cmp    r9,0xffffffffffffffff
   14002f0b4:	jne    0x14002f0c4
   14002f0b6:	mov    BYTE PTR [rcx+r11*1-0x1],r10b
   14002f0bb:	lea    r10d,[rbx+0x50]
   14002f0bf:	jmp    0x14002f037
   14002f0c4:	mov    BYTE PTR [rcx],r10b
   14002f0c7:	call   0x14002a494
   14002f0cc:	mov    ebx,0x22
   14002f0d1:	jmp    0x14002f02d
   14002f0d6:	int3   
   14002f0d7:	int3   
   14002f0d8:	sub    rsp,0x58
   14002f0dc:	mov    rax,QWORD PTR [rip+0x17105]        # 0x1400461e8
   14002f0e3:	xor    rax,rsp
   14002f0e6:	mov    QWORD PTR [rsp+0x40],rax
   14002f0eb:	xor    eax,eax
   14002f0ed:	mov    r9,rdx
   14002f0f0:	cmp    rax,0x20
   14002f0f4:	mov    r8,rcx
   14002f0f7:	jae    0x14002f170
   14002f0f9:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   14002f0fe:	inc    rax
   14002f101:	cmp    rax,0x20
   14002f105:	jl     0x14002f0f7
   14002f107:	mov    al,BYTE PTR [rdx]
   14002f109:	jmp    0x14002f12a
   14002f10b:	movzx  edx,al
   14002f10e:	shr    rdx,0x3
   14002f112:	movzx  eax,al
   14002f115:	and    eax,0x7
   14002f118:	movzx  ecx,BYTE PTR [rsp+rdx*1+0x20]
   14002f11d:	bts    ecx,eax
   14002f120:	inc    r9
   14002f123:	mov    BYTE PTR [rsp+rdx*1+0x20],cl
   14002f127:	mov    al,BYTE PTR [r9]
   14002f12a:	test   al,al
   14002f12c:	jne    0x14002f10b
   14002f12e:	jmp    0x14002f14f
   14002f130:	movzx  eax,r9b
   14002f134:	mov    edx,0x1
   14002f139:	movzx  ecx,r9b
   14002f13d:	and    ecx,0x7
   14002f140:	shr    rax,0x3
   14002f144:	shl    edx,cl
   14002f146:	test   BYTE PTR [rsp+rax*1+0x20],dl
   14002f14a:	jne    0x14002f16b
   14002f14c:	inc    r8
   14002f14f:	mov    r9b,BYTE PTR [r8]
   14002f152:	test   r9b,r9b
   14002f155:	jne    0x14002f130
   14002f157:	xor    eax,eax
   14002f159:	mov    rcx,QWORD PTR [rsp+0x40]
   14002f15e:	xor    rcx,rsp
   14002f161:	call   0x140030a30
   14002f166:	add    rsp,0x58
   14002f16a:	ret    
   14002f16b:	mov    rax,r8
   14002f16e:	jmp    0x14002f159
   14002f170:	call   0x140030b5c
   14002f175:	int3   
   14002f176:	int3   
   14002f177:	int3   
   14002f178:	xor    r8d,r8d
   14002f17b:	jmp    0x14002f180
   14002f180:	mov    QWORD PTR [rsp+0x8],rbx
   14002f185:	push   rdi
   14002f186:	sub    rsp,0x40
   14002f18a:	mov    rbx,rdx
   14002f18d:	mov    rdi,rcx
   14002f190:	test   rcx,rcx
   14002f193:	jne    0x14002f1a9
   14002f195:	call   0x14002a494
   14002f19a:	mov    DWORD PTR [rax],0x16
   14002f1a0:	call   0x1400281ac
   14002f1a5:	xor    eax,eax
   14002f1a7:	jmp    0x14002f20b
   14002f1a9:	test   rdx,rdx
   14002f1ac:	je     0x14002f195
   14002f1ae:	cmp    rcx,rdx
   14002f1b1:	jae    0x14002f1a5
   14002f1b3:	mov    rdx,r8
   14002f1b6:	lea    rcx,[rsp+0x20]
   14002f1bb:	call   0x1400288e8
   14002f1c0:	mov    rcx,QWORD PTR [rsp+0x30]
   14002f1c5:	cmp    DWORD PTR [rcx+0x8],0x0
   14002f1c9:	jne    0x14002f1d0
   14002f1cb:	dec    rbx
   14002f1ce:	jmp    0x14002f1f5
   14002f1d0:	lea    rdx,[rbx-0x1]
   14002f1d4:	dec    rdx
   14002f1d7:	cmp    rdi,rdx
   14002f1da:	ja     0x14002f1e6
   14002f1dc:	movzx  eax,BYTE PTR [rdx]
   14002f1df:	test   BYTE PTR [rax+rcx*1+0x19],0x4
   14002f1e4:	jne    0x14002f1d4
   14002f1e6:	mov    rcx,rbx
   14002f1e9:	sub    rcx,rdx
   14002f1ec:	and    ecx,0x1
   14002f1ef:	sub    rbx,rcx
   14002f1f2:	dec    rbx
   14002f1f5:	cmp    BYTE PTR [rsp+0x38],0x0
   14002f1fa:	je     0x14002f208
   14002f1fc:	mov    rcx,QWORD PTR [rsp+0x20]
   14002f201:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14002f208:	mov    rax,rbx
   14002f20b:	mov    rbx,QWORD PTR [rsp+0x50]
   14002f210:	add    rsp,0x40
   14002f214:	pop    rdi
   14002f215:	ret    
   14002f216:	int3   
   14002f217:	int3   
   14002f218:	sub    rsp,0x28
   14002f21c:	call   0x14002ca40
   14002f221:	xor    ecx,ecx
   14002f223:	test   al,al
   14002f225:	sete   cl
   14002f228:	mov    eax,ecx
   14002f22a:	add    rsp,0x28
   14002f22e:	ret    
   14002f22f:	int3   
   14002f230:	mov    eax,DWORD PTR [rip+0x194a2]        # 0x1400486d8
   14002f236:	test   eax,eax
   14002f238:	je     0x14002fbd4
   14002f23e:	xor    r9d,r9d
   14002f241:	jmp    0x14002f248
   14002f246:	int3   
   14002f247:	int3   
   14002f248:	mov    rax,rsp
   14002f24b:	mov    QWORD PTR [rax+0x8],rbx
   14002f24f:	mov    QWORD PTR [rax+0x10],rbp
   14002f253:	mov    QWORD PTR [rax+0x18],rsi
   14002f257:	push   rdi
   14002f258:	sub    rsp,0x60
   14002f25c:	mov    rsi,rdx
   14002f25f:	mov    rbp,rcx
   14002f262:	mov    rdx,r9
   14002f265:	lea    rcx,[rax-0x28]
   14002f269:	mov    rdi,r8
   14002f26c:	call   0x1400288e8
   14002f271:	test   rdi,rdi
   14002f274:	jne    0x14002f27d
   14002f276:	xor    ebx,ebx
   14002f278:	jmp    0x14002f31d
   14002f27d:	test   rbp,rbp
   14002f280:	je     0x14002f287
   14002f282:	test   rsi,rsi
   14002f285:	jne    0x14002f29e
   14002f287:	call   0x14002a494
   14002f28c:	mov    DWORD PTR [rax],0x16
   14002f292:	call   0x1400281ac
   14002f297:	mov    ebx,0x7fffffff
   14002f29c:	jmp    0x14002f31d
   14002f29e:	mov    ebx,0x7fffffff
   14002f2a3:	cmp    rdi,rbx
   14002f2a6:	jbe    0x14002f2ba
   14002f2a8:	call   0x14002a494
   14002f2ad:	mov    DWORD PTR [rax],0x16
   14002f2b3:	call   0x1400281ac
   14002f2b8:	jmp    0x14002f31d
   14002f2ba:	mov    rax,QWORD PTR [rsp+0x48]
   14002f2bf:	mov    rdx,QWORD PTR [rax+0x130]
   14002f2c6:	test   rdx,rdx
   14002f2c9:	jne    0x14002f2e2
   14002f2cb:	lea    r9,[rsp+0x48]
   14002f2d0:	mov    r8,rdi
   14002f2d3:	mov    rdx,rsi
   14002f2d6:	mov    rcx,rbp
   14002f2d9:	call   0x14002fc24
   14002f2de:	mov    ebx,eax
   14002f2e0:	jmp    0x14002f31d
   14002f2e2:	mov    eax,DWORD PTR [rax+0x14]
   14002f2e5:	lea    rcx,[rsp+0x48]
   14002f2ea:	mov    DWORD PTR [rsp+0x38],eax
   14002f2ee:	mov    r9,rbp
   14002f2f1:	mov    DWORD PTR [rsp+0x30],edi
   14002f2f5:	mov    r8d,0x1001
   14002f2fb:	mov    QWORD PTR [rsp+0x28],rsi
   14002f300:	mov    DWORD PTR [rsp+0x20],edi
   14002f304:	call   0x140030094
   14002f309:	test   eax,eax
   14002f30b:	jne    0x14002f31a
   14002f30d:	call   0x14002a494
   14002f312:	mov    DWORD PTR [rax],0x16
   14002f318:	jmp    0x14002f31d
   14002f31a:	lea    ebx,[rax-0x2]
   14002f31d:	cmp    BYTE PTR [rsp+0x58],0x0
   14002f322:	je     0x14002f330
   14002f324:	mov    rax,QWORD PTR [rsp+0x40]
   14002f329:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002f330:	lea    r11,[rsp+0x60]
   14002f335:	mov    eax,ebx
   14002f337:	mov    rbx,QWORD PTR [r11+0x10]
   14002f33b:	mov    rbp,QWORD PTR [r11+0x18]
   14002f33f:	mov    rsi,QWORD PTR [r11+0x20]
   14002f343:	mov    rsp,r11
   14002f346:	pop    rdi
   14002f347:	ret    
   14002f348:	mov    QWORD PTR [rsp+0x8],rbx
   14002f34d:	mov    QWORD PTR [rsp+0x20],r9
   14002f352:	push   rdi
   14002f353:	sub    rsp,0x20
   14002f357:	mov    rdi,r9
   14002f35a:	mov    rbx,r8
   14002f35d:	mov    ecx,DWORD PTR [rdx]
   14002f35f:	call   0x14002d92c
   14002f364:	nop
   14002f365:	mov    rax,QWORD PTR [rbx]
   14002f368:	movsxd rcx,DWORD PTR [rax]
   14002f36b:	mov    rdx,rcx
   14002f36e:	mov    rax,rcx
   14002f371:	sar    rax,0x6
   14002f375:	lea    r8,[rip+0x19524]        # 0x1400488a0
   14002f37c:	and    edx,0x3f
   14002f37f:	shl    rdx,0x6
   14002f383:	mov    rax,QWORD PTR [r8+rax*8]
   14002f387:	test   BYTE PTR [rax+rdx*1+0x38],0x1
   14002f38c:	je     0x14002f397
   14002f38e:	call   0x14002f460
   14002f393:	mov    ebx,eax
   14002f395:	jmp    0x14002f3a5
   14002f397:	call   0x14002a494
   14002f39c:	mov    DWORD PTR [rax],0x9
   14002f3a2:	or     ebx,0xffffffff
   14002f3a5:	mov    ecx,DWORD PTR [rdi]
   14002f3a7:	call   0x14002d950
   14002f3ac:	mov    eax,ebx
   14002f3ae:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f3b3:	add    rsp,0x20
   14002f3b7:	pop    rdi
   14002f3b8:	ret    
   14002f3b9:	int3   
   14002f3ba:	int3   
   14002f3bb:	int3   
   14002f3bc:	mov    DWORD PTR [rsp+0x8],ecx
   14002f3c0:	sub    rsp,0x38
   14002f3c4:	movsxd rdx,ecx
   14002f3c7:	cmp    edx,0xfffffffe
   14002f3ca:	jne    0x14002f3e1
   14002f3cc:	call   0x14002a474
   14002f3d1:	and    DWORD PTR [rax],0x0
   14002f3d4:	call   0x14002a494
   14002f3d9:	mov    DWORD PTR [rax],0x9
   14002f3df:	jmp    0x14002f455
   14002f3e1:	test   ecx,ecx
   14002f3e3:	js     0x14002f43d
   14002f3e5:	cmp    edx,DWORD PTR [rip+0x198b5]        # 0x140048ca0
   14002f3eb:	jae    0x14002f43d
   14002f3ed:	mov    rcx,rdx
   14002f3f0:	lea    r8,[rip+0x194a9]        # 0x1400488a0
   14002f3f7:	and    ecx,0x3f
   14002f3fa:	mov    rax,rdx
   14002f3fd:	sar    rax,0x6
   14002f401:	shl    rcx,0x6
   14002f405:	mov    rax,QWORD PTR [r8+rax*8]
   14002f409:	test   BYTE PTR [rax+rcx*1+0x38],0x1
   14002f40e:	je     0x14002f43d
   14002f410:	lea    rax,[rsp+0x40]
   14002f415:	mov    DWORD PTR [rsp+0x50],edx
   14002f419:	mov    DWORD PTR [rsp+0x58],edx
   14002f41d:	lea    r9,[rsp+0x50]
   14002f422:	lea    rdx,[rsp+0x58]
   14002f427:	mov    QWORD PTR [rsp+0x20],rax
   14002f42c:	lea    r8,[rsp+0x20]
   14002f431:	lea    rcx,[rsp+0x48]
   14002f436:	call   0x14002f348
   14002f43b:	jmp    0x14002f458
   14002f43d:	call   0x14002a474
   14002f442:	and    DWORD PTR [rax],0x0
   14002f445:	call   0x14002a494
   14002f44a:	mov    DWORD PTR [rax],0x9
   14002f450:	call   0x1400281ac
   14002f455:	or     eax,0xffffffff
   14002f458:	add    rsp,0x38
   14002f45c:	ret    
   14002f45d:	int3   
   14002f45e:	int3   
   14002f45f:	int3   
   14002f460:	mov    QWORD PTR [rsp+0x8],rbx
   14002f465:	push   rdi
   14002f466:	sub    rsp,0x20
   14002f46a:	movsxd rdi,ecx
   14002f46d:	mov    ecx,edi
   14002f46f:	call   0x14002da30
   14002f474:	cmp    rax,0xffffffffffffffff
   14002f478:	jne    0x14002f47e
   14002f47a:	xor    ebx,ebx
   14002f47c:	jmp    0x14002f4d5
   14002f47e:	mov    rax,QWORD PTR [rip+0x1941b]        # 0x1400488a0
   14002f485:	mov    ecx,0x2
   14002f48a:	cmp    edi,0x1
   14002f48d:	jne    0x14002f498
   14002f48f:	test   BYTE PTR [rax+0xb8],dil
   14002f496:	jne    0x14002f4a2
   14002f498:	cmp    edi,ecx
   14002f49a:	jne    0x14002f4b9
   14002f49c:	test   BYTE PTR [rax+0x78],0x1
   14002f4a0:	je     0x14002f4b9
   14002f4a2:	call   0x14002da30
   14002f4a7:	mov    ecx,0x1
   14002f4ac:	mov    rbx,rax
   14002f4af:	call   0x14002da30
   14002f4b4:	cmp    rax,rbx
   14002f4b7:	je     0x14002f47a
   14002f4b9:	mov    ecx,edi
   14002f4bb:	call   0x14002da30
   14002f4c0:	mov    rcx,rax
   14002f4c3:	call   QWORD PTR [rip+0x2cc7]        # 0x140032190
   14002f4c9:	test   eax,eax
   14002f4cb:	jne    0x14002f47a
   14002f4cd:	call   QWORD PTR [rip+0x2d35]        # 0x140032208
   14002f4d3:	mov    ebx,eax
   14002f4d5:	mov    ecx,edi
   14002f4d7:	call   0x14002d974
   14002f4dc:	mov    rdx,rdi
   14002f4df:	lea    r8,[rip+0x193ba]        # 0x1400488a0
   14002f4e6:	and    edx,0x3f
   14002f4e9:	mov    rcx,rdi
   14002f4ec:	sar    rcx,0x6
   14002f4f0:	shl    rdx,0x6
   14002f4f4:	mov    rcx,QWORD PTR [r8+rcx*8]
   14002f4f8:	mov    BYTE PTR [rcx+rdx*1+0x38],0x0
   14002f4fd:	test   ebx,ebx
   14002f4ff:	je     0x14002f50d
   14002f501:	mov    ecx,ebx
   14002f503:	call   0x14002a424
   14002f508:	or     eax,0xffffffff
   14002f50b:	jmp    0x14002f50f
   14002f50d:	xor    eax,eax
   14002f50f:	mov    rbx,QWORD PTR [rsp+0x30]
   14002f514:	add    rsp,0x20
   14002f518:	pop    rdi
   14002f519:	ret    
   14002f51a:	int3   
   14002f51b:	int3   
   14002f51c:	mov    QWORD PTR [rsp+0x8],rcx
   14002f521:	mov    r11,rsp
   14002f524:	xor    edx,edx
   14002f526:	mov    QWORD PTR [rcx],rdx
   14002f529:	mov    rax,QWORD PTR [r11+0x8]
   14002f52d:	mov    QWORD PTR [rax+0x8],rdx
   14002f531:	mov    rax,QWORD PTR [r11+0x8]
   14002f535:	mov    DWORD PTR [rax+0x10],edx
   14002f538:	mov    rax,QWORD PTR [r11+0x8]
   14002f53c:	or     DWORD PTR [rax+0x18],0xffffffff
   14002f540:	mov    rax,QWORD PTR [r11+0x8]
   14002f544:	mov    DWORD PTR [rax+0x1c],edx
   14002f547:	mov    rax,QWORD PTR [r11+0x8]
   14002f54b:	mov    DWORD PTR [rax+0x20],edx
   14002f54e:	mov    rax,QWORD PTR [r11+0x8]
   14002f552:	mov    QWORD PTR [rax+0x28],rdx
   14002f556:	mov    rax,QWORD PTR [r11+0x8]
   14002f55a:	xchg   DWORD PTR [rax+0x14],edx
   14002f55d:	ret    
   14002f55e:	int3   
   14002f55f:	int3   
   14002f560:	sub    rsp,0x48
   14002f564:	and    QWORD PTR [rsp+0x30],0x0
   14002f56a:	lea    rcx,[rip+0xe107]        # 0x14003d678
   14002f571:	and    DWORD PTR [rsp+0x28],0x0
   14002f576:	mov    r8d,0x3
   14002f57c:	xor    r9d,r9d
   14002f57f:	mov    DWORD PTR [rsp+0x20],r8d
   14002f584:	mov    edx,0x40000000
   14002f589:	call   QWORD PTR [rip+0x2c29]        # 0x1400321b8
   14002f58f:	mov    QWORD PTR [rip+0x17512],rax        # 0x140046aa8
   14002f596:	add    rsp,0x48
   14002f59a:	ret    
   14002f59b:	int3   
   14002f59c:	sub    rsp,0x28
   14002f5a0:	mov    rcx,QWORD PTR [rip+0x17501]        # 0x140046aa8
   14002f5a7:	lea    rax,[rcx+0x2]
   14002f5ab:	cmp    rax,0x1
   14002f5af:	jbe    0x14002f5b7
   14002f5b1:	call   QWORD PTR [rip+0x2bd9]        # 0x140032190
   14002f5b7:	add    rsp,0x28
   14002f5bb:	ret    
   14002f5bc:	xor    eax,eax
   14002f5be:	cmp    BYTE PTR [rcx],al
   14002f5c0:	je     0x14002f5d0
   14002f5c2:	cmp    rax,rdx
   14002f5c5:	je     0x14002f5d0
   14002f5c7:	inc    rax
   14002f5ca:	cmp    BYTE PTR [rax+rcx*1],0x0
   14002f5ce:	jne    0x14002f5c2
   14002f5d0:	ret    
   14002f5d1:	int3   
   14002f5d2:	int3   
   14002f5d3:	int3   
   14002f5d4:	int3   
   14002f5d5:	int3   
   14002f5d6:	int3   
   14002f5d7:	int3   
   14002f5d8:	int3   
   14002f5d9:	int3   
   14002f5da:	int3   
   14002f5db:	int3   
   14002f5dc:	int3   
   14002f5dd:	int3   
   14002f5de:	int3   
   14002f5df:	int3   
   14002f5e0:	sub    rsp,0x58
   14002f5e4:	movdqa XMMWORD PTR [rsp+0x20],xmm6
   14002f5ea:	cmp    DWORD PTR [rip+0x1994f],0x0        # 0x140048f40
   14002f5f1:	jne    0x14002f8e0
   14002f5f7:	movapd xmm3,xmm0
   14002f5fb:	movapd xmm4,xmm0
   14002f5ff:	psrlq  xmm3,0x34
   14002f604:	movq   rax,xmm0
   14002f609:	psubq  xmm3,XMMWORD PTR [rip+0xe0bf]        # 0x14003d6d0
   14002f611:	movapd xmm5,xmm0
   14002f615:	andpd  xmm5,XMMWORD PTR [rip+0xe083]        # 0x14003d6a0
   14002f61d:	comisd xmm5,QWORD PTR [rip+0xe07b]        # 0x14003d6a0
   14002f625:	je     0x14002f8b0
   14002f62b:	movapd xmm2,xmm0
   14002f62f:	cvtdq2pd xmm6,xmm3
   14002f633:	xorpd  xmm5,xmm5
   14002f637:	comisd xmm0,xmm5
   14002f63b:	jbe    0x14002f870
   14002f641:	pand   xmm2,XMMWORD PTR [rip+0xe0a7]        # 0x14003d6f0
   14002f649:	subsd  xmm4,QWORD PTR [rip+0xe12f]        # 0x14003d780
   14002f651:	comisd xmm6,QWORD PTR [rip+0xe1b7]        # 0x14003d810
   14002f659:	je     0x14002f837
   14002f65f:	andpd  xmm4,XMMWORD PTR [rip+0xe209]        # 0x14003d870
   14002f667:	mov    r9,rax
   14002f66a:	and    rax,QWORD PTR [rip+0xe08f]        # 0x14003d700
   14002f671:	and    r9,QWORD PTR [rip+0xe098]        # 0x14003d710
   14002f678:	shl    r9,1
   14002f67b:	add    rax,r9
   14002f67e:	movq   xmm1,rax
   14002f683:	comisd xmm4,QWORD PTR [rip+0xe1a5]        # 0x14003d830
   14002f68b:	jb     0x14002f770
   14002f691:	shr    rax,0x2c
   14002f695:	por    xmm2,XMMWORD PTR [rip+0xe0f3]        # 0x14003d790
   14002f69d:	por    xmm1,XMMWORD PTR [rip+0xe0eb]        # 0x14003d790
   14002f6a5:	lea    r9,[rip+0xf254]        # 0x14003e900
   14002f6ac:	subsd  xmm1,xmm2
   14002f6b0:	mulsd  xmm1,QWORD PTR [r9+rax*8]
   14002f6b6:	movapd xmm2,xmm1
   14002f6ba:	movapd xmm0,xmm1
   14002f6be:	lea    r9,[rip+0xe21b]        # 0x14003d8e0
   14002f6c5:	movsd  xmm3,QWORD PTR [rip+0xe133]        # 0x14003d800
   14002f6cd:	movsd  xmm1,QWORD PTR [rip+0xe0fb]        # 0x14003d7d0
   14002f6d5:	mulsd  xmm3,xmm2
   14002f6d9:	mulsd  xmm1,xmm2
   14002f6dd:	mulsd  xmm0,xmm2
   14002f6e1:	movapd xmm4,xmm0
   14002f6e5:	addsd  xmm3,QWORD PTR [rip+0xe103]        # 0x14003d7f0
   14002f6ed:	addsd  xmm1,QWORD PTR [rip+0xe0cb]        # 0x14003d7c0
   14002f6f5:	mulsd  xmm4,xmm0
   14002f6f9:	mulsd  xmm3,xmm2
   14002f6fd:	mulsd  xmm1,xmm0
   14002f701:	addsd  xmm3,QWORD PTR [rip+0xe0d7]        # 0x14003d7e0
   14002f709:	addsd  xmm1,xmm2
   14002f70d:	mulsd  xmm3,xmm4
   14002f711:	addsd  xmm1,xmm3
   14002f715:	movsd  xmm5,QWORD PTR [rip+0xe043]        # 0x14003d760
   14002f71d:	mulsd  xmm1,QWORD PTR [rip+0xdffb]        # 0x14003d720
   14002f725:	mulsd  xmm5,xmm6
   14002f729:	subsd  xmm5,xmm1
   14002f72d:	movsd  xmm0,QWORD PTR [r9+rax*8]
   14002f733:	lea    rdx,[rip+0xe9b6]        # 0x14003e0f0
   14002f73a:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   14002f73f:	movsd  xmm4,QWORD PTR [rip+0xe009]        # 0x14003d750
   14002f747:	mulsd  xmm4,xmm6
   14002f74b:	addsd  xmm0,xmm4
   14002f74f:	addsd  xmm2,xmm5
   14002f753:	addsd  xmm0,xmm2
   14002f757:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002f75d:	add    rsp,0x58
   14002f761:	ret    
   14002f762:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002f770:	movsd  xmm2,QWORD PTR [rip+0xdff8]        # 0x14003d770
   14002f778:	subsd  xmm0,QWORD PTR [rip+0xe000]        # 0x14003d780
   14002f780:	addsd  xmm2,xmm0
   14002f784:	movapd xmm1,xmm0
   14002f788:	divsd  xmm1,xmm2
   14002f78c:	movsd  xmm4,QWORD PTR [rip+0xe0fc]        # 0x14003d890
   14002f794:	movsd  xmm5,QWORD PTR [rip+0xe114]        # 0x14003d8b0
   14002f79c:	movapd xmm6,xmm0
   14002f7a0:	mulsd  xmm6,xmm1
   14002f7a4:	addsd  xmm1,xmm1
   14002f7a8:	movapd xmm2,xmm1
   14002f7ac:	mulsd  xmm2,xmm1
   14002f7b0:	mulsd  xmm4,xmm2
   14002f7b4:	mulsd  xmm5,xmm2
   14002f7b8:	addsd  xmm4,QWORD PTR [rip+0xe0c0]        # 0x14003d880
   14002f7c0:	addsd  xmm5,QWORD PTR [rip+0xe0d8]        # 0x14003d8a0
   14002f7c8:	mulsd  xmm2,xmm1
   14002f7cc:	mulsd  xmm4,xmm2
   14002f7d0:	mulsd  xmm2,xmm2
   14002f7d4:	mulsd  xmm2,xmm1
   14002f7d8:	mulsd  xmm5,xmm2
   14002f7dc:	movsd  xmm2,QWORD PTR [rip+0xdf5c]        # 0x14003d740
   14002f7e4:	addsd  xmm4,xmm5
   14002f7e8:	subsd  xmm4,xmm6
   14002f7ec:	movsd  xmm6,QWORD PTR [rip+0xdf3c]        # 0x14003d730
   14002f7f4:	movapd xmm3,xmm0
   14002f7f8:	pand   xmm3,XMMWORD PTR [rip+0xe0c0]        # 0x14003d8c0
   14002f800:	subsd  xmm0,xmm3
   14002f804:	addsd  xmm4,xmm0
   14002f808:	movapd xmm0,xmm3
   14002f80c:	movapd xmm1,xmm4
   14002f810:	mulsd  xmm4,xmm2
   14002f814:	mulsd  xmm0,xmm2
   14002f818:	mulsd  xmm1,xmm6
   14002f81c:	mulsd  xmm3,xmm6
   14002f820:	addsd  xmm0,xmm4
   14002f824:	addsd  xmm0,xmm1
   14002f828:	addsd  xmm0,xmm3
   14002f82c:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002f832:	add    rsp,0x58
   14002f836:	ret    
   14002f837:	por    xmm2,XMMWORD PTR [rip+0xdf41]        # 0x14003d780
   14002f83f:	subsd  xmm2,QWORD PTR [rip+0xdf39]        # 0x14003d780
   14002f847:	movsd  xmm5,xmm2
   14002f84b:	pand   xmm2,XMMWORD PTR [rip+0xde9d]        # 0x14003d6f0
   14002f853:	movq   rax,xmm2
   14002f858:	psrlq  xmm5,0x34
   14002f85d:	psubd  xmm5,XMMWORD PTR [rip+0xdfbb]        # 0x14003d820
   14002f865:	cvtdq2pd xmm6,xmm5
   14002f869:	jmp    0x14002f65f
   14002f86e:	xchg   ax,ax
   14002f870:	jne    0x14002f890
   14002f872:	movsd  xmm1,QWORD PTR [rip+0xde16]        # 0x14003d690
   14002f87a:	mov    r8d,DWORD PTR [rip+0xe04f]        # 0x14003d8d0
   14002f881:	call   0x1400303e0
   14002f886:	jmp    0x14002f8d0
   14002f888:	nop    DWORD PTR [rax+rax*1+0x0]
   14002f890:	movsd  xmm1,QWORD PTR [rip+0xde18]        # 0x14003d6b0
   14002f898:	mov    r8d,DWORD PTR [rip+0xe035]        # 0x14003d8d4
   14002f89f:	call   0x1400303e0
   14002f8a4:	jmp    0x14002f8d0
   14002f8a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002f8b0:	cmp    rax,QWORD PTR [rip+0xdde9]        # 0x14003d6a0
   14002f8b7:	je     0x14002f8d0
   14002f8b9:	cmp    rax,QWORD PTR [rip+0xddd0]        # 0x14003d690
   14002f8c0:	je     0x14002f890
   14002f8c2:	or     rax,QWORD PTR [rip+0xddf7]        # 0x14003d6c0
   14002f8c9:	movq   xmm0,rax
   14002f8ce:	xchg   ax,ax
   14002f8d0:	movdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002f8d6:	add    rsp,0x58
   14002f8da:	ret    
   14002f8db:	nop    DWORD PTR [rax+rax*1+0x0]
   14002f8e0:	xor    rax,rax
   14002f8e3:	vpsrlq xmm3,xmm0,0x34
   14002f8e8:	vmovq  rax,xmm0
   14002f8ed:	vpsubq xmm3,xmm3,XMMWORD PTR [rip+0xdddb]        # 0x14003d6d0
   14002f8f5:	vcvtdq2pd xmm6,xmm3
   14002f8f9:	vpand  xmm5,xmm0,XMMWORD PTR [rip+0xdd9f]        # 0x14003d6a0
   14002f901:	vcomisd xmm5,QWORD PTR [rip+0xdd97]        # 0x14003d6a0
   14002f909:	je     0x14002fb50
   14002f90f:	vpxor  xmm5,xmm5,xmm5
   14002f913:	vcomisd xmm0,xmm5
   14002f917:	jbe    0x14002fb00
   14002f91d:	vpand  xmm2,xmm0,XMMWORD PTR [rip+0xddcb]        # 0x14003d6f0
   14002f925:	vsubsd xmm4,xmm0,QWORD PTR [rip+0xde53]        # 0x14003d780
   14002f92d:	vcomisd xmm6,QWORD PTR [rip+0xdedb]        # 0x14003d810
   14002f935:	je     0x14002fac9
   14002f93b:	vpand  xmm1,xmm0,XMMWORD PTR [rip+0xddbd]        # 0x14003d700
   14002f943:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0xddc5]        # 0x14003d710
   14002f94b:	vpsllq xmm3,xmm3,0x1
   14002f950:	vpaddq xmm1,xmm3,xmm1
   14002f954:	vmovq  rax,xmm1
   14002f959:	vpand  xmm4,xmm4,XMMWORD PTR [rip+0xdf0f]        # 0x14003d870
   14002f961:	vcomisd xmm4,QWORD PTR [rip+0xdec7]        # 0x14003d830
   14002f969:	jb     0x14002fa20
   14002f96f:	shr    rax,0x2c
   14002f973:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0xde15]        # 0x14003d790
   14002f97b:	vpor   xmm1,xmm1,XMMWORD PTR [rip+0xde0d]        # 0x14003d790
   14002f983:	lea    r9,[rip+0xef76]        # 0x14003e900
   14002f98a:	vsubsd xmm1,xmm1,xmm2
   14002f98e:	vmulsd xmm1,xmm1,QWORD PTR [r9+rax*8]
   14002f994:	lea    r9,[rip+0xdf45]        # 0x14003d8e0
   14002f99b:	vmulsd xmm0,xmm1,xmm1
   14002f99f:	vmovsd xmm3,QWORD PTR [rip+0xde59]        # 0x14003d800
   14002f9a7:	vmovsd xmm5,QWORD PTR [rip+0xde21]        # 0x14003d7d0
   14002f9af:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0xde38]        # 0x14003d7f0
   14002f9b8:	vfmadd213sd xmm5,xmm1,QWORD PTR [rip+0xddcf]        # 0x14003d790
   14002f9c1:	movsd  xmm4,xmm0
   14002f9c5:	vfmadd213sd xmm3,xmm1,QWORD PTR [rip+0xde12]        # 0x14003d7e0
   14002f9ce:	vmulsd xmm4,xmm0,xmm0
   14002f9d2:	vfmadd231sd xmm1,xmm5,xmm0
   14002f9d7:	vfmadd231sd xmm1,xmm3,xmm4
   14002f9dc:	vmulsd xmm1,xmm1,QWORD PTR [rip+0xdd3c]        # 0x14003d720
   14002f9e4:	vmovsd xmm5,QWORD PTR [rip+0xdd74]        # 0x14003d760
   14002f9ec:	vfmsub213sd xmm5,xmm6,xmm1
   14002f9f1:	movsd  xmm0,QWORD PTR [r9+rax*8]
   14002f9f7:	lea    rdx,[rip+0xe6f2]        # 0x14003e0f0
   14002f9fe:	movsd  xmm2,QWORD PTR [rdx+rax*8]
   14002fa03:	vaddsd xmm2,xmm2,xmm5
   14002fa07:	vfmadd231sd xmm0,xmm6,QWORD PTR [rip+0xdd40]        # 0x14003d750
   14002fa10:	vaddsd xmm0,xmm0,xmm2
   14002fa14:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fa1a:	add    rsp,0x58
   14002fa1e:	ret    
   14002fa1f:	nop
   14002fa20:	vmovsd xmm2,QWORD PTR [rip+0xdd48]        # 0x14003d770
   14002fa28:	vsubsd xmm0,xmm0,QWORD PTR [rip+0xdd50]        # 0x14003d780
   14002fa30:	vaddsd xmm2,xmm2,xmm0
   14002fa34:	vdivsd xmm1,xmm0,xmm2
   14002fa38:	vmovsd xmm4,QWORD PTR [rip+0xde50]        # 0x14003d890
   14002fa40:	vmovsd xmm5,QWORD PTR [rip+0xde68]        # 0x14003d8b0
   14002fa48:	vmulsd xmm6,xmm0,xmm1
   14002fa4c:	vaddsd xmm1,xmm1,xmm1
   14002fa50:	vmulsd xmm2,xmm1,xmm1
   14002fa54:	vfmadd213sd xmm4,xmm2,QWORD PTR [rip+0xde23]        # 0x14003d880
   14002fa5d:	vfmadd213sd xmm5,xmm2,QWORD PTR [rip+0xde3a]        # 0x14003d8a0
   14002fa66:	vmulsd xmm2,xmm2,xmm1
   14002fa6a:	vmulsd xmm4,xmm4,xmm2
   14002fa6e:	vmulsd xmm2,xmm2,xmm2
   14002fa72:	vmulsd xmm2,xmm2,xmm1
   14002fa76:	vmulsd xmm5,xmm5,xmm2
   14002fa7a:	vaddsd xmm4,xmm4,xmm5
   14002fa7e:	vsubsd xmm4,xmm4,xmm6
   14002fa82:	vpand  xmm3,xmm0,XMMWORD PTR [rip+0xde36]        # 0x14003d8c0
   14002fa8a:	vsubsd xmm0,xmm0,xmm3
   14002fa8e:	vaddsd xmm4,xmm4,xmm0
   14002fa92:	vmulsd xmm1,xmm4,QWORD PTR [rip+0xdc96]        # 0x14003d730
   14002fa9a:	vmulsd xmm4,xmm4,QWORD PTR [rip+0xdc9e]        # 0x14003d740
   14002faa2:	vmulsd xmm0,xmm3,QWORD PTR [rip+0xdc96]        # 0x14003d740
   14002faaa:	vmulsd xmm3,xmm3,QWORD PTR [rip+0xdc7e]        # 0x14003d730
   14002fab2:	vaddsd xmm0,xmm0,xmm4
   14002fab6:	vaddsd xmm0,xmm0,xmm1
   14002faba:	vaddsd xmm0,xmm0,xmm3
   14002fabe:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fac4:	add    rsp,0x58
   14002fac8:	ret    
   14002fac9:	vpor   xmm2,xmm2,XMMWORD PTR [rip+0xdcaf]        # 0x14003d780
   14002fad1:	vsubsd xmm2,xmm2,QWORD PTR [rip+0xdca7]        # 0x14003d780
   14002fad9:	vpsrlq xmm5,xmm2,0x34
   14002fade:	vpand  xmm2,xmm2,XMMWORD PTR [rip+0xdc0a]        # 0x14003d6f0
   14002fae6:	vmovapd xmm0,xmm2
   14002faea:	vpsubd xmm5,xmm5,XMMWORD PTR [rip+0xdd2e]        # 0x14003d820
   14002faf2:	vcvtdq2pd xmm6,xmm5
   14002faf6:	jmp    0x14002f93b
   14002fafb:	nop    DWORD PTR [rax+rax*1+0x0]
   14002fb00:	jne    0x14002fb30
   14002fb02:	vmovsd xmm1,QWORD PTR [rip+0xdb86]        # 0x14003d690
   14002fb0a:	mov    r8d,DWORD PTR [rip+0xddbf]        # 0x14003d8d0
   14002fb11:	call   0x1400303e0
   14002fb16:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fb1c:	add    rsp,0x58
   14002fb20:	ret    
   14002fb21:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002fb30:	vmovsd xmm1,QWORD PTR [rip+0xdb78]        # 0x14003d6b0
   14002fb38:	mov    r8d,DWORD PTR [rip+0xdd95]        # 0x14003d8d4
   14002fb3f:	call   0x1400303e0
   14002fb44:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fb4a:	add    rsp,0x58
   14002fb4e:	ret    
   14002fb4f:	nop
   14002fb50:	cmp    rax,QWORD PTR [rip+0xdb49]        # 0x14003d6a0
   14002fb57:	je     0x14002fb80
   14002fb59:	cmp    rax,QWORD PTR [rip+0xdb30]        # 0x14003d690
   14002fb60:	je     0x14002fb30
   14002fb62:	or     rax,QWORD PTR [rip+0xdb57]        # 0x14003d6c0
   14002fb69:	movq   xmm1,rax
   14002fb6e:	mov    r8d,DWORD PTR [rip+0xdd63]        # 0x14003d8d8
   14002fb75:	call   0x1400303e0
   14002fb7a:	jmp    0x14002fb80
   14002fb7c:	nop    DWORD PTR [rax+0x0]
   14002fb80:	vmovdqa xmm6,XMMWORD PTR [rsp+0x20]
   14002fb86:	add    rsp,0x58
   14002fb8a:	ret    
   14002fb8b:	int3   
   14002fb8c:	mov    r10,rcx
   14002fb8f:	test   r8,r8
   14002fb92:	je     0x14002fbd0
   14002fb94:	movzx  r9d,BYTE PTR [r10]
   14002fb98:	inc    r10
   14002fb9b:	lea    eax,[r9-0x41]
   14002fb9f:	cmp    eax,0x19
   14002fba2:	ja     0x14002fba8
   14002fba4:	add    r9d,0x20
   14002fba8:	movzx  ecx,BYTE PTR [rdx]
   14002fbab:	inc    rdx
   14002fbae:	lea    eax,[rcx-0x41]
   14002fbb1:	cmp    eax,0x19
   14002fbb4:	ja     0x14002fbb9
   14002fbb6:	add    ecx,0x20
   14002fbb9:	sub    r8,0x1
   14002fbbd:	je     0x14002fbc9
   14002fbbf:	test   r9d,r9d
   14002fbc2:	je     0x14002fbc9
   14002fbc4:	cmp    r9d,ecx
   14002fbc7:	je     0x14002fb94
   14002fbc9:	sub    r9d,ecx
   14002fbcc:	mov    eax,r9d
   14002fbcf:	ret    
   14002fbd0:	xor    eax,eax
   14002fbd2:	ret    
   14002fbd3:	int3   
   14002fbd4:	sub    rsp,0x28
   14002fbd8:	mov    eax,DWORD PTR [rip+0x18afa]        # 0x1400486d8
   14002fbde:	test   eax,eax
   14002fbe0:	jne    0x14002fc18
   14002fbe2:	test   rcx,rcx
   14002fbe5:	jne    0x14002fc01
   14002fbe7:	call   0x14002a494
   14002fbec:	mov    DWORD PTR [rax],0x16
   14002fbf2:	call   0x1400281ac
   14002fbf7:	mov    eax,0x7fffffff
   14002fbfc:	add    rsp,0x28
   14002fc00:	ret    
   14002fc01:	test   rdx,rdx
   14002fc04:	je     0x14002fbe7
   14002fc06:	cmp    r8,0x7fffffff
   14002fc0d:	ja     0x14002fbe7
   14002fc0f:	add    rsp,0x28
   14002fc13:	jmp    0x14002fb8c
   14002fc18:	xor    r9d,r9d
   14002fc1b:	add    rsp,0x28
   14002fc1f:	jmp    0x14002fc24
   14002fc24:	mov    rax,rsp
   14002fc27:	mov    QWORD PTR [rax+0x8],rbx
   14002fc2b:	mov    QWORD PTR [rax+0x10],rbp
   14002fc2f:	mov    QWORD PTR [rax+0x18],rsi
   14002fc33:	push   rdi
   14002fc34:	sub    rsp,0x40
   14002fc38:	mov    rbp,r8
   14002fc3b:	mov    rdi,rdx
   14002fc3e:	mov    rsi,rcx
   14002fc41:	test   r8,r8
   14002fc44:	je     0x14002fce7
   14002fc4a:	mov    rdx,r9
   14002fc4d:	lea    rcx,[rax-0x28]
   14002fc51:	call   0x1400288e8
   14002fc56:	mov    ebx,0x7fffffff
   14002fc5b:	test   rsi,rsi
   14002fc5e:	je     0x14002fc6a
   14002fc60:	test   rdi,rdi
   14002fc63:	je     0x14002fc6a
   14002fc65:	cmp    rbp,rbx
   14002fc68:	jbe    0x14002fc7c
   14002fc6a:	call   0x14002a494
   14002fc6f:	mov    DWORD PTR [rax],0x16
   14002fc75:	call   0x1400281ac
   14002fc7a:	jmp    0x14002fcd0
   14002fc7c:	mov    rax,QWORD PTR [rsp+0x28]
   14002fc81:	cmp    QWORD PTR [rax+0x138],0x0
   14002fc89:	jne    0x14002fc9d
   14002fc8b:	mov    r8,rbp
   14002fc8e:	mov    rdx,rdi
   14002fc91:	mov    rcx,rsi
   14002fc94:	call   0x14002fb8c
   14002fc99:	mov    ebx,eax
   14002fc9b:	jmp    0x14002fcd0
   14002fc9d:	sub    rsi,rdi
   14002fca0:	movzx  ecx,BYTE PTR [rsi+rdi*1]
   14002fca4:	lea    rdx,[rsp+0x28]
   14002fca9:	call   0x14002baa0
   14002fcae:	movzx  ecx,BYTE PTR [rdi]
   14002fcb1:	lea    rdx,[rsp+0x28]
   14002fcb6:	mov    ebx,eax
   14002fcb8:	call   0x14002baa0
   14002fcbd:	inc    rdi
   14002fcc0:	sub    rbp,0x1
   14002fcc4:	je     0x14002fcce
   14002fcc6:	test   ebx,ebx
   14002fcc8:	je     0x14002fcce
   14002fcca:	cmp    ebx,eax
   14002fccc:	je     0x14002fca0
   14002fcce:	sub    ebx,eax
   14002fcd0:	cmp    BYTE PTR [rsp+0x38],0x0
   14002fcd5:	je     0x14002fce3
   14002fcd7:	mov    rax,QWORD PTR [rsp+0x20]
   14002fcdc:	and    DWORD PTR [rax+0x3a8],0xfffffffd
   14002fce3:	mov    eax,ebx
   14002fce5:	jmp    0x14002fce9
   14002fce7:	xor    eax,eax
   14002fce9:	mov    rbx,QWORD PTR [rsp+0x50]
   14002fcee:	mov    rbp,QWORD PTR [rsp+0x58]
   14002fcf3:	mov    rsi,QWORD PTR [rsp+0x60]
   14002fcf8:	add    rsp,0x40
   14002fcfc:	pop    rdi
   14002fcfd:	ret    
   14002fcfe:	int3   
   14002fcff:	int3   
   14002fd00:	rex push rbp
   14002fd02:	push   rbx
   14002fd03:	push   rsi
   14002fd04:	push   rdi
   14002fd05:	push   r12
   14002fd07:	push   r13
   14002fd09:	push   r14
   14002fd0b:	push   r15
   14002fd0d:	sub    rsp,0x88
   14002fd14:	lea    rbp,[rsp+0x50]
   14002fd19:	mov    rax,QWORD PTR [rip+0x164c8]        # 0x1400461e8
   14002fd20:	xor    rax,rbp
   14002fd23:	mov    QWORD PTR [rbp+0x28],rax
   14002fd27:	movsxd rbx,DWORD PTR [rbp+0xa0]
   14002fd2e:	xor    r12d,r12d
   14002fd31:	mov    r13,QWORD PTR [rbp+0xa8]
   14002fd38:	mov    r15,r9
   14002fd3b:	mov    DWORD PTR [rbp+0x0],r8d
   14002fd3f:	mov    rdi,rcx
   14002fd42:	mov    QWORD PTR [rbp+0x8],rdx
   14002fd46:	test   ebx,ebx
   14002fd48:	jle    0x14002fd73
   14002fd4a:	mov    rdx,rbx
   14002fd4d:	mov    rcx,r9
   14002fd50:	call   0x14002f5bc
   14002fd55:	mov    rbx,rax
   14002fd58:	movsxd rsi,DWORD PTR [rbp+0xb0]
   14002fd5f:	test   esi,esi
   14002fd61:	jle    0x14002fd7f
   14002fd63:	mov    rdx,rsi
   14002fd66:	mov    rcx,r13
   14002fd69:	call   0x14002f5bc
   14002fd6e:	mov    rsi,rax
   14002fd71:	jmp    0x14002fd84
   14002fd73:	cmp    ebx,0xffffffff
   14002fd76:	jge    0x14002fd58
   14002fd78:	xor    eax,eax
   14002fd7a:	jmp    0x140030075
   14002fd7f:	cmp    esi,0xffffffff
   14002fd82:	jl     0x14002fd78
   14002fd84:	mov    r14d,DWORD PTR [rbp+0xb8]
   14002fd8b:	test   r14d,r14d
   14002fd8e:	jne    0x14002fd97
   14002fd90:	mov    rax,QWORD PTR [rdi]
   14002fd93:	mov    r14d,DWORD PTR [rax+0xc]
   14002fd97:	mov    edi,0x1
   14002fd9c:	test   ebx,ebx
   14002fd9e:	je     0x14002fda8
   14002fda0:	test   esi,esi
   14002fda2:	jne    0x14002fe43
   14002fda8:	cmp    ebx,esi
   14002fdaa:	jne    0x14002fdb6
   14002fdac:	mov    eax,0x2
   14002fdb1:	jmp    0x140030075
   14002fdb6:	cmp    esi,edi
   14002fdb8:	jle    0x14002fdc1
   14002fdba:	mov    eax,edi
   14002fdbc:	jmp    0x140030075
   14002fdc1:	cmp    ebx,edi
   14002fdc3:	jle    0x14002fdcf
   14002fdc5:	mov    eax,0x3
   14002fdca:	jmp    0x140030075
   14002fdcf:	lea    rdx,[rbp+0x10]
   14002fdd3:	mov    ecx,r14d
   14002fdd6:	call   QWORD PTR [rip+0x226c]        # 0x140032048
   14002fddc:	test   eax,eax
   14002fdde:	je     0x14002fd78
   14002fde0:	test   ebx,ebx
   14002fde2:	jle    0x14002fe0f
   14002fde4:	cmp    DWORD PTR [rbp+0x10],0x2
   14002fde8:	jb     0x14002fdc5
   14002fdea:	cmp    BYTE PTR [rbp+0x16],r12b
   14002fdee:	lea    rax,[rbp+0x16]
   14002fdf2:	je     0x14002fdc5
   14002fdf4:	cmp    BYTE PTR [rax+0x1],r12b
   14002fdf8:	je     0x14002fdc5
   14002fdfa:	mov    cl,BYTE PTR [r15]
   14002fdfd:	cmp    cl,BYTE PTR [rax]
   14002fdff:	jb     0x14002fe06
   14002fe01:	cmp    cl,BYTE PTR [rax+0x1]
   14002fe04:	jbe    0x14002fdac
   14002fe06:	add    rax,0x2
   14002fe0a:	cmp    BYTE PTR [rax],r12b
   14002fe0d:	jmp    0x14002fdf2
   14002fe0f:	test   esi,esi
   14002fe11:	jle    0x14002fe43
   14002fe13:	cmp    DWORD PTR [rbp+0x10],0x2
   14002fe17:	jb     0x14002fdba
   14002fe19:	cmp    BYTE PTR [rbp+0x16],r12b
   14002fe1d:	lea    rax,[rbp+0x16]
   14002fe21:	je     0x14002fdba
   14002fe23:	cmp    BYTE PTR [rax+0x1],r12b
   14002fe27:	je     0x14002fdba
   14002fe29:	mov    cl,BYTE PTR [r13+0x0]
   14002fe2d:	cmp    cl,BYTE PTR [rax]
   14002fe2f:	jb     0x14002fe3a
   14002fe31:	cmp    cl,BYTE PTR [rax+0x1]
   14002fe34:	jbe    0x14002fdac
   14002fe3a:	add    rax,0x2
   14002fe3e:	cmp    BYTE PTR [rax],r12b
   14002fe41:	jmp    0x14002fe21
   14002fe43:	mov    DWORD PTR [rsp+0x28],r12d
   14002fe48:	mov    r9d,ebx
   14002fe4b:	mov    r8,r15
   14002fe4e:	mov    QWORD PTR [rsp+0x20],r12
   14002fe53:	mov    edx,0x9
   14002fe58:	mov    ecx,r14d
   14002fe5b:	call   QWORD PTR [rip+0x225f]        # 0x1400320c0
   14002fe61:	movsxd r12,eax
   14002fe64:	test   eax,eax
   14002fe66:	je     0x14002fd78
   14002fe6c:	mov    rdx,r12
   14002fe6f:	movabs r8,0xffffffffffffff0
   14002fe79:	add    rdx,rdx
   14002fe7c:	lea    rcx,[rdx+0x10]
   14002fe80:	cmp    rdx,rcx
   14002fe83:	sbb    rax,rax
   14002fe86:	test   rcx,rax
   14002fe89:	je     0x14002fefd
   14002fe8b:	lea    rcx,[rdx+0x10]
   14002fe8f:	cmp    rdx,rcx
   14002fe92:	sbb    rax,rax
   14002fe95:	and    rax,rcx
   14002fe98:	cmp    rax,0x400
   14002fe9e:	lea    rax,[rdx+0x10]
   14002fea2:	ja     0x14002fedb
   14002fea4:	cmp    rdx,rax
   14002fea7:	sbb    rcx,rcx
   14002feaa:	and    rcx,rax
   14002fead:	lea    rax,[rcx+0xf]
   14002feb1:	cmp    rax,rcx
   14002feb4:	ja     0x14002feb9
   14002feb6:	mov    rax,r8
   14002feb9:	and    rax,0xfffffffffffffff0
   14002febd:	call   0x1400263c0
   14002fec2:	sub    rsp,rax
   14002fec5:	lea    rdi,[rsp+0x50]
   14002feca:	test   rdi,rdi
   14002fecd:	je     0x14003005b
   14002fed3:	mov    DWORD PTR [rdi],0xcccc
   14002fed9:	jmp    0x14002fef7
   14002fedb:	cmp    rdx,rax
   14002fede:	sbb    rcx,rcx
   14002fee1:	and    rcx,rax
   14002fee4:	call   0x140007bf0
   14002fee9:	mov    rdi,rax
   14002feec:	test   rax,rax
   14002feef:	je     0x14002feff
   14002fef1:	mov    DWORD PTR [rax],0xdddd
   14002fef7:	add    rdi,0x10
   14002fefb:	jmp    0x14002feff
   14002fefd:	xor    edi,edi
   14002feff:	test   rdi,rdi
   14002ff02:	je     0x14003005b
   14002ff08:	mov    DWORD PTR [rsp+0x28],r12d
   14002ff0d:	mov    r9d,ebx
   14002ff10:	mov    r8,r15
   14002ff13:	mov    QWORD PTR [rsp+0x20],rdi
   14002ff18:	mov    edx,0x1
   14002ff1d:	mov    ecx,r14d
   14002ff20:	call   QWORD PTR [rip+0x219a]        # 0x1400320c0
   14002ff26:	test   eax,eax
   14002ff28:	je     0x14003005b
   14002ff2e:	and    DWORD PTR [rsp+0x28],0x0
   14002ff33:	mov    r9d,esi
   14002ff36:	and    QWORD PTR [rsp+0x20],0x0
   14002ff3c:	mov    r8,r13
   14002ff3f:	mov    edx,0x9
   14002ff44:	mov    ecx,r14d
   14002ff47:	call   QWORD PTR [rip+0x2173]        # 0x1400320c0
   14002ff4d:	movsxd r15,eax
   14002ff50:	test   eax,eax
   14002ff52:	je     0x14003005b
   14002ff58:	mov    r8,r15
   14002ff5b:	add    r8,r8
   14002ff5e:	lea    rdx,[r8+0x10]
   14002ff62:	cmp    r8,rdx
   14002ff65:	sbb    rcx,rcx
   14002ff68:	test   rdx,rcx
   14002ff6b:	je     0x14002ffe6
   14002ff6d:	lea    rcx,[r8+0x10]
   14002ff71:	cmp    r8,rcx
   14002ff74:	sbb    rax,rax
   14002ff77:	and    rax,rcx
   14002ff7a:	cmp    rax,0x400
   14002ff80:	lea    rax,[r8+0x10]
   14002ff84:	ja     0x14002ffc4
   14002ff86:	cmp    r8,rax
   14002ff89:	sbb    rcx,rcx
   14002ff8c:	and    rcx,rax
   14002ff8f:	lea    rax,[rcx+0xf]
   14002ff93:	cmp    rax,rcx
   14002ff96:	ja     0x14002ffa2
   14002ff98:	movabs rax,0xffffffffffffff0
   14002ffa2:	and    rax,0xfffffffffffffff0
   14002ffa6:	call   0x1400263c0
   14002ffab:	sub    rsp,rax
   14002ffae:	lea    rbx,[rsp+0x50]
   14002ffb3:	test   rbx,rbx
   14002ffb6:	je     0x140030041
   14002ffbc:	mov    DWORD PTR [rbx],0xcccc
   14002ffc2:	jmp    0x14002ffe0
   14002ffc4:	cmp    r8,rax
   14002ffc7:	sbb    rcx,rcx
   14002ffca:	and    rcx,rax
   14002ffcd:	call   0x140007bf0
   14002ffd2:	mov    rbx,rax
   14002ffd5:	test   rax,rax
   14002ffd8:	je     0x14002ffe8
   14002ffda:	mov    DWORD PTR [rax],0xdddd
   14002ffe0:	add    rbx,0x10
   14002ffe4:	jmp    0x14002ffe8
   14002ffe6:	xor    ebx,ebx
   14002ffe8:	test   rbx,rbx
   14002ffeb:	je     0x140030041
   14002ffed:	mov    DWORD PTR [rsp+0x28],r15d
   14002fff2:	mov    r9d,esi
   14002fff5:	mov    r8,r13
   14002fff8:	mov    QWORD PTR [rsp+0x20],rbx
   14002fffd:	mov    edx,0x1
   140030002:	mov    ecx,r14d
   140030005:	call   QWORD PTR [rip+0x20b5]        # 0x1400320c0
   14003000b:	test   eax,eax
   14003000d:	je     0x140030041
   14003000f:	and    QWORD PTR [rsp+0x40],0x0
   140030015:	mov    r9d,r12d
   140030018:	and    QWORD PTR [rsp+0x38],0x0
   14003001e:	mov    r8,rdi
   140030021:	and    QWORD PTR [rsp+0x30],0x0
   140030027:	mov    edx,DWORD PTR [rbp+0x0]
   14003002a:	mov    rcx,QWORD PTR [rbp+0x8]
   14003002e:	mov    DWORD PTR [rsp+0x28],r15d
   140030033:	mov    QWORD PTR [rsp+0x20],rbx
   140030038:	call   0x14002a654
   14003003d:	mov    esi,eax
   14003003f:	jmp    0x140030043
   140030041:	xor    esi,esi
   140030043:	test   rbx,rbx
   140030046:	je     0x14003005d
   140030048:	lea    rcx,[rbx-0x10]
   14003004c:	cmp    DWORD PTR [rcx],0xdddd
   140030052:	jne    0x14003005d
   140030054:	call   0x140007bd0
   140030059:	jmp    0x14003005d
   14003005b:	xor    esi,esi
   14003005d:	test   rdi,rdi
   140030060:	je     0x140030073
   140030062:	lea    rcx,[rdi-0x10]
   140030066:	cmp    DWORD PTR [rcx],0xdddd
   14003006c:	jne    0x140030073
   14003006e:	call   0x140007bd0
   140030073:	mov    eax,esi
   140030075:	mov    rcx,QWORD PTR [rbp+0x28]
   140030079:	xor    rcx,rbp
   14003007c:	call   0x140030a30
   140030081:	lea    rsp,[rbp+0x38]
   140030085:	pop    r15
   140030087:	pop    r14
   140030089:	pop    r13
   14003008b:	pop    r12
   14003008d:	pop    rdi
   14003008e:	pop    rsi
   14003008f:	pop    rbx
   140030090:	pop    rbp
   140030091:	ret    
   140030092:	int3   
   140030093:	int3   
   140030094:	mov    QWORD PTR [rsp+0x8],rbx
   140030099:	mov    QWORD PTR [rsp+0x10],rsi
   14003009e:	push   rdi
   14003009f:	sub    rsp,0x60
   1400300a3:	mov    rsi,rdx
   1400300a6:	mov    rbx,r9
   1400300a9:	mov    rdx,rcx
   1400300ac:	mov    edi,r8d
   1400300af:	lea    rcx,[rsp+0x40]
   1400300b4:	call   0x1400288e8
   1400300b9:	mov    eax,DWORD PTR [rsp+0xa8]
   1400300c0:	lea    rcx,[rsp+0x48]
   1400300c5:	mov    DWORD PTR [rsp+0x38],eax
   1400300c9:	mov    r9,rbx
   1400300cc:	mov    eax,DWORD PTR [rsp+0xa0]
   1400300d3:	mov    r8d,edi
   1400300d6:	mov    DWORD PTR [rsp+0x30],eax
   1400300da:	mov    rdx,rsi
   1400300dd:	mov    rax,QWORD PTR [rsp+0x98]
   1400300e5:	mov    QWORD PTR [rsp+0x28],rax
   1400300ea:	mov    eax,DWORD PTR [rsp+0x90]
   1400300f1:	mov    DWORD PTR [rsp+0x20],eax
   1400300f5:	call   0x14002fd00
   1400300fa:	cmp    BYTE PTR [rsp+0x58],0x0
   1400300ff:	je     0x14003010d
   140030101:	mov    rcx,QWORD PTR [rsp+0x40]
   140030106:	and    DWORD PTR [rcx+0x3a8],0xfffffffd
   14003010d:	mov    rbx,QWORD PTR [rsp+0x70]
   140030112:	mov    rsi,QWORD PTR [rsp+0x78]
   140030117:	add    rsp,0x60
   14003011b:	pop    rdi
   14003011c:	ret    
   14003011d:	int3   
   14003011e:	int3   
   14003011f:	int3   
   140030120:	mov    rax,rsp
   140030123:	push   rbx
   140030124:	sub    rsp,0x50
   140030128:	movsd  xmm0,QWORD PTR [rsp+0x80]
   140030131:	mov    ebx,ecx
   140030133:	movsd  xmm1,QWORD PTR [rsp+0x88]
   14003013c:	mov    edx,0xffc0
   140030141:	mov    DWORD PTR [rax-0x38],ecx
   140030144:	mov    rcx,QWORD PTR [rsp+0x90]
   14003014c:	movsd  QWORD PTR [rax-0x20],xmm0
   140030151:	movsd  QWORD PTR [rax-0x18],xmm1
   140030156:	movsd  QWORD PTR [rax-0x28],xmm3
   14003015b:	mov    QWORD PTR [rax-0x30],r8
   14003015f:	call   0x140030818
   140030164:	lea    rcx,[rsp+0x20]
   140030169:	call   0x140029af0
   14003016e:	test   eax,eax
   140030170:	jne    0x140030179
   140030172:	mov    ecx,ebx
   140030174:	call   0x1400307c8
   140030179:	movsd  xmm0,QWORD PTR [rsp+0x40]
   14003017f:	add    rsp,0x50
   140030183:	pop    rbx
   140030184:	ret    
   140030185:	int3   
   140030186:	int3   
   140030187:	int3   
   140030188:	mov    QWORD PTR [rsp+0x8],rbx
   14003018d:	mov    QWORD PTR [rsp+0x10],rsi
   140030192:	push   rdi
   140030193:	sub    rsp,0x20
   140030197:	mov    ebx,ecx
   140030199:	mov    rsi,rdx
   14003019c:	and    ebx,0x1f
   14003019f:	mov    edi,ecx
   1400301a1:	test   cl,0x8
   1400301a4:	je     0x1400301b9
   1400301a6:	test   dl,dl
   1400301a8:	jns    0x1400301b9
   1400301aa:	mov    ecx,0x1
   1400301af:	call   0x140030894
   1400301b4:	and    ebx,0xfffffff7
   1400301b7:	jmp    0x140030210
   1400301b9:	mov    ecx,0x4
   1400301be:	test   cl,dil
   1400301c1:	je     0x1400301d4
   1400301c3:	bt     rdx,0x9
   1400301c8:	jae    0x1400301d4
   1400301ca:	call   0x140030894
   1400301cf:	and    ebx,0xfffffffb
   1400301d2:	jmp    0x140030210
   1400301d4:	test   dil,0x1
   1400301d8:	je     0x1400301f0
   1400301da:	bt     rdx,0xa
   1400301df:	jae    0x1400301f0
   1400301e1:	mov    ecx,0x8
   1400301e6:	call   0x140030894
   1400301eb:	and    ebx,0xfffffffe
   1400301ee:	jmp    0x140030210
   1400301f0:	test   dil,0x2
   1400301f4:	je     0x140030210
   1400301f6:	bt     rdx,0xb
   1400301fb:	jae    0x140030210
   1400301fd:	test   dil,0x10
   140030201:	je     0x14003020d
   140030203:	mov    ecx,0x10
   140030208:	call   0x140030894
   14003020d:	and    ebx,0xfffffffd
   140030210:	test   dil,0x10
   140030214:	je     0x14003022a
   140030216:	bt     rsi,0xc
   14003021b:	jae    0x14003022a
   14003021d:	mov    ecx,0x20
   140030222:	call   0x140030894
   140030227:	and    ebx,0xffffffef
   14003022a:	mov    rsi,QWORD PTR [rsp+0x38]
   14003022f:	xor    eax,eax
   140030231:	test   ebx,ebx
   140030233:	mov    rbx,QWORD PTR [rsp+0x30]
   140030238:	sete   al
   14003023b:	add    rsp,0x20
   14003023f:	pop    rdi
   140030240:	ret    
   140030241:	int3   
   140030242:	int3   
   140030243:	int3   
   140030244:	mov    rax,rsp
   140030247:	push   rbp
   140030248:	push   rbx
   140030249:	push   rsi
   14003024a:	push   rdi
   14003024b:	push   r14
   14003024d:	lea    rbp,[rax-0x37]
   140030251:	sub    rsp,0xf0
   140030258:	movaps XMMWORD PTR [rax-0x38],xmm6
   14003025c:	mov    rax,QWORD PTR [rip+0x15f85]        # 0x1400461e8
   140030263:	xor    rax,rsp
   140030266:	mov    QWORD PTR [rbp-0x11],rax
   14003026a:	mov    esi,edx
   14003026c:	mov    r14,rcx
   14003026f:	mov    edx,0xffc0
   140030274:	mov    ecx,0x1f80
   140030279:	mov    edi,r9d
   14003027c:	mov    rbx,r8
   14003027f:	call   0x140030818
   140030284:	mov    ecx,DWORD PTR [rbp+0x5f]
   140030287:	mov    QWORD PTR [rsp+0x40],rax
   14003028c:	mov    QWORD PTR [rsp+0x50],rbx
   140030291:	movsd  xmm0,QWORD PTR [rsp+0x50]
   140030297:	mov    rdx,QWORD PTR [rsp+0x40]
   14003029c:	movsd  QWORD PTR [rsp+0x48],xmm0
   1400302a2:	call   0x140030188
   1400302a7:	movsd  xmm6,QWORD PTR [rbp+0x77]
   1400302ac:	test   eax,eax
   1400302ae:	jne    0x1400302f0
   1400302b0:	cmp    DWORD PTR [rbp+0x7f],0x2
   1400302b4:	jne    0x1400302c7
   1400302b6:	mov    eax,DWORD PTR [rbp-0x41]
   1400302b9:	and    eax,0xffffffe3
   1400302bc:	movsd  QWORD PTR [rbp-0x51],xmm6
   1400302c1:	or     eax,0x3
   1400302c4:	mov    DWORD PTR [rbp-0x41],eax
   1400302c7:	mov    r8d,DWORD PTR [rbp+0x5f]
   1400302cb:	lea    rax,[rsp+0x48]
   1400302d0:	mov    QWORD PTR [rsp+0x28],rax
   1400302d5:	lea    rdx,[rsp+0x40]
   1400302da:	lea    rax,[rbp+0x6f]
   1400302de:	mov    r9d,esi
   1400302e1:	lea    rcx,[rsp+0x60]
   1400302e6:	mov    QWORD PTR [rsp+0x20],rax
   1400302eb:	call   0x140030498
   1400302f0:	call   0x140029ac8
   1400302f5:	test   al,al
   1400302f7:	je     0x14003032d
   1400302f9:	test   edi,edi
   1400302fb:	je     0x14003032d
   1400302fd:	mov    rax,QWORD PTR [rsp+0x40]
   140030302:	mov    r8,r14
   140030305:	movsd  xmm0,QWORD PTR [rsp+0x48]
   14003030b:	mov    ecx,edi
   14003030d:	movsd  xmm3,QWORD PTR [rbp+0x6f]
   140030312:	mov    edx,DWORD PTR [rbp+0x67]
   140030315:	mov    QWORD PTR [rsp+0x30],rax
   14003031a:	movsd  QWORD PTR [rsp+0x28],xmm0
   140030320:	movsd  QWORD PTR [rsp+0x20],xmm6
   140030326:	call   0x140030120
   14003032b:	jmp    0x140030349
   14003032d:	mov    ecx,edi
   14003032f:	call   0x1400307c8
   140030334:	mov    rcx,QWORD PTR [rsp+0x40]
   140030339:	mov    edx,0xffc0
   14003033e:	call   0x140030818
   140030343:	movsd  xmm0,QWORD PTR [rsp+0x48]
   140030349:	mov    rcx,QWORD PTR [rbp-0x11]
   14003034d:	xor    rcx,rsp
   140030350:	call   0x140030a30
   140030355:	movaps xmm6,XMMWORD PTR [rsp+0xe0]
   14003035d:	add    rsp,0xf0
   140030364:	pop    r14
   140030366:	pop    rdi
   140030367:	pop    rsi
   140030368:	pop    rbx
   140030369:	pop    rbp
   14003036a:	ret    
   14003036b:	int3   
   14003036c:	int3   
   14003036d:	int3   
   14003036e:	int3   
   14003036f:	int3   
   140030370:	rex push rbx
   140030372:	sub    rsp,0x10
   140030376:	xor    r8d,r8d
   140030379:	xor    ecx,ecx
   14003037b:	mov    DWORD PTR [rip+0x18bba],r8d        # 0x140048f3c
   140030382:	lea    r9d,[r8+0x1]
   140030386:	mov    eax,r9d
   140030389:	cpuid  
   14003038b:	mov    DWORD PTR [rsp],eax
   14003038e:	mov    eax,0x18001000
   140030393:	mov    DWORD PTR [rsp+0x8],ecx
   140030397:	and    ecx,eax
   140030399:	mov    DWORD PTR [rsp+0x4],ebx
   14003039d:	mov    DWORD PTR [rsp+0xc],edx
   1400303a1:	cmp    ecx,eax
   1400303a3:	jne    0x1400303d1
   1400303a5:	xor    ecx,ecx
   1400303a7:	xgetbv 
   1400303aa:	shl    rdx,0x20
   1400303ae:	or     rdx,rax
   1400303b1:	mov    QWORD PTR [rsp+0x20],rdx
   1400303b6:	mov    rax,QWORD PTR [rsp+0x20]
   1400303bb:	mov    r8d,DWORD PTR [rip+0x18b7a]        # 0x140048f3c
   1400303c2:	and    al,0x6
   1400303c4:	cmp    al,0x6
   1400303c6:	cmove  r8d,r9d
   1400303ca:	mov    DWORD PTR [rip+0x18b6b],r8d        # 0x140048f3c
   1400303d1:	mov    DWORD PTR [rip+0x18b68],r8d        # 0x140048f40
   1400303d8:	xor    eax,eax
   1400303da:	add    rsp,0x10
   1400303de:	pop    rbx
   1400303df:	ret    
   1400303e0:	sub    rsp,0x38
   1400303e4:	lea    rax,[rip+0xed25]        # 0x14003f110
   1400303eb:	mov    r9d,0x1b
   1400303f1:	mov    QWORD PTR [rsp+0x20],rax
   1400303f6:	call   0x140030400
   1400303fb:	add    rsp,0x38
   1400303ff:	ret    
   140030400:	mov    rax,rsp
   140030403:	sub    rsp,0x68
   140030407:	movaps XMMWORD PTR [rax-0x18],xmm6
   14003040b:	movaps xmm6,xmm1
   14003040e:	mov    edx,r9d
   140030411:	movaps xmm3,xmm0
   140030414:	sub    r8d,0x1
   140030418:	je     0x140030444
   14003041a:	cmp    r8d,0x1
   14003041e:	jne    0x140030489
   140030420:	mov    DWORD PTR [rax-0x28],r8d
   140030424:	xorps  xmm2,xmm2
   140030427:	movsd  QWORD PTR [rax-0x30],xmm2
   14003042c:	mov    r9d,r8d
   14003042f:	movsd  QWORD PTR [rax-0x38],xmm0
   140030434:	mov    DWORD PTR [rax-0x40],0x21
   14003043b:	mov    DWORD PTR [rax-0x48],0x8
   140030442:	jmp    0x140030471
   140030444:	mov    DWORD PTR [rsp+0x40],0x1
   14003044c:	xorps  xmm0,xmm0
   14003044f:	movsd  QWORD PTR [rsp+0x38],xmm0
   140030455:	mov    r9d,0x2
   14003045b:	movsd  QWORD PTR [rsp+0x30],xmm3
   140030461:	mov    DWORD PTR [rsp+0x28],0x22
   140030469:	mov    DWORD PTR [rsp+0x20],0x4
   140030471:	mov    rcx,QWORD PTR [rsp+0x90]
   140030479:	movsd  QWORD PTR [rsp+0x78],xmm1
   14003047f:	mov    r8,QWORD PTR [rsp+0x78]
   140030484:	call   0x140030244
   140030489:	movaps xmm0,xmm6
   14003048c:	movaps xmm6,XMMWORD PTR [rsp+0x50]
   140030491:	add    rsp,0x68
   140030495:	ret    
   140030496:	int3   
   140030497:	int3   
   140030498:	sub    rsp,0x48
   14003049c:	and    DWORD PTR [rsp+0x30],0x0
   1400304a1:	mov    rax,QWORD PTR [rsp+0x78]
   1400304a6:	mov    QWORD PTR [rsp+0x28],rax
   1400304ab:	mov    rax,QWORD PTR [rsp+0x70]
   1400304b0:	mov    QWORD PTR [rsp+0x20],rax
   1400304b5:	call   0x1400304c0
   1400304ba:	add    rsp,0x48
   1400304be:	ret    
   1400304bf:	int3   
   1400304c0:	mov    rax,rsp
   1400304c3:	mov    QWORD PTR [rax+0x10],rbx
   1400304c7:	mov    QWORD PTR [rax+0x18],rsi
   1400304cb:	mov    QWORD PTR [rax+0x20],rdi
   1400304cf:	mov    QWORD PTR [rax+0x8],rcx
   1400304d3:	push   rbp
   1400304d4:	mov    rbp,rsp
   1400304d7:	sub    rsp,0x20
   1400304db:	mov    rbx,rdx
   1400304de:	mov    esi,r9d
   1400304e1:	xor    edx,edx
   1400304e3:	mov    edi,0xc000000d
   1400304e8:	mov    DWORD PTR [rcx+0x4],edx
   1400304eb:	mov    rax,QWORD PTR [rbp+0x10]
   1400304ef:	mov    DWORD PTR [rax+0x8],edx
   1400304f2:	mov    rax,QWORD PTR [rbp+0x10]
   1400304f6:	mov    DWORD PTR [rax+0xc],edx
   1400304f9:	test   r8b,0x10
   1400304fd:	je     0x14003050c
   1400304ff:	mov    rax,QWORD PTR [rbp+0x10]
   140030503:	mov    edi,0xc000008f
   140030508:	or     DWORD PTR [rax+0x4],0x1
   14003050c:	test   r8b,0x2
   140030510:	je     0x14003051f
   140030512:	mov    rax,QWORD PTR [rbp+0x10]
   140030516:	mov    edi,0xc0000093
   14003051b:	or     DWORD PTR [rax+0x4],0x2
   14003051f:	test   r8b,0x1
   140030523:	je     0x140030532
   140030525:	mov    rax,QWORD PTR [rbp+0x10]
   140030529:	mov    edi,0xc0000091
   14003052e:	or     DWORD PTR [rax+0x4],0x4
   140030532:	test   r8b,0x4
   140030536:	je     0x140030545
   140030538:	mov    rax,QWORD PTR [rbp+0x10]
   14003053c:	mov    edi,0xc000008e
   140030541:	or     DWORD PTR [rax+0x4],0x8
   140030545:	test   r8b,0x8
   140030549:	je     0x140030558
   14003054b:	mov    rax,QWORD PTR [rbp+0x10]
   14003054f:	mov    edi,0xc0000090
   140030554:	or     DWORD PTR [rax+0x4],0x10
   140030558:	mov    rcx,QWORD PTR [rbp+0x10]
   14003055c:	mov    rax,QWORD PTR [rbx]
   14003055f:	shr    rax,0x7
   140030563:	shl    eax,0x4
   140030566:	not    eax
   140030568:	xor    eax,DWORD PTR [rcx+0x8]
   14003056b:	and    eax,0x10
   14003056e:	xor    DWORD PTR [rcx+0x8],eax
   140030571:	mov    rcx,QWORD PTR [rbp+0x10]
   140030575:	mov    rax,QWORD PTR [rbx]
   140030578:	shr    rax,0x9
   14003057c:	shl    eax,0x3
   14003057f:	not    eax
   140030581:	xor    eax,DWORD PTR [rcx+0x8]
   140030584:	and    eax,0x8
   140030587:	xor    DWORD PTR [rcx+0x8],eax
   14003058a:	mov    rcx,QWORD PTR [rbp+0x10]
   14003058e:	mov    rax,QWORD PTR [rbx]
   140030591:	shr    rax,0xa
   140030595:	shl    eax,0x2
   140030598:	not    eax
   14003059a:	xor    eax,DWORD PTR [rcx+0x8]
   14003059d:	and    eax,0x4
   1400305a0:	xor    DWORD PTR [rcx+0x8],eax
   1400305a3:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305a7:	mov    rax,QWORD PTR [rbx]
   1400305aa:	shr    rax,0xb
   1400305ae:	add    eax,eax
   1400305b0:	not    eax
   1400305b2:	xor    eax,DWORD PTR [rcx+0x8]
   1400305b5:	and    eax,0x2
   1400305b8:	xor    DWORD PTR [rcx+0x8],eax
   1400305bb:	mov    eax,DWORD PTR [rbx]
   1400305bd:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305c1:	shr    rax,0xc
   1400305c5:	not    eax
   1400305c7:	xor    eax,DWORD PTR [rcx+0x8]
   1400305ca:	and    eax,0x1
   1400305cd:	xor    DWORD PTR [rcx+0x8],eax
   1400305d0:	call   0x1400308b4
   1400305d5:	mov    rdx,rax
   1400305d8:	test   al,0x1
   1400305da:	je     0x1400305e4
   1400305dc:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305e0:	or     DWORD PTR [rcx+0xc],0x10
   1400305e4:	test   al,0x4
   1400305e6:	je     0x1400305f0
   1400305e8:	mov    rcx,QWORD PTR [rbp+0x10]
   1400305ec:	or     DWORD PTR [rcx+0xc],0x8
   1400305f0:	test   al,0x8
   1400305f2:	je     0x1400305fc
   1400305f4:	mov    rax,QWORD PTR [rbp+0x10]
   1400305f8:	or     DWORD PTR [rax+0xc],0x4
   1400305fc:	test   dl,0x10
   1400305ff:	je     0x140030609
   140030601:	mov    rax,QWORD PTR [rbp+0x10]
   140030605:	or     DWORD PTR [rax+0xc],0x2
   140030609:	test   dl,0x20
   14003060c:	je     0x140030616
   14003060e:	mov    rax,QWORD PTR [rbp+0x10]
   140030612:	or     DWORD PTR [rax+0xc],0x1
   140030616:	mov    eax,DWORD PTR [rbx]
   140030618:	mov    ecx,0x6000
   14003061d:	and    rax,rcx
   140030620:	je     0x140030660
   140030622:	cmp    rax,0x2000
   140030628:	je     0x140030650
   14003062a:	cmp    rax,0x4000
   140030630:	je     0x140030640
   140030632:	cmp    rax,rcx
   140030635:	jne    0x140030667
   140030637:	mov    rax,QWORD PTR [rbp+0x10]
   14003063b:	or     DWORD PTR [rax],0x3
   14003063e:	jmp    0x140030667
   140030640:	mov    rax,QWORD PTR [rbp+0x10]
   140030644:	and    DWORD PTR [rax],0xfffffffe
   140030647:	mov    rax,QWORD PTR [rbp+0x10]
   14003064b:	or     DWORD PTR [rax],0x2
   14003064e:	jmp    0x140030667
   140030650:	mov    rax,QWORD PTR [rbp+0x10]
   140030654:	and    DWORD PTR [rax],0xfffffffd
   140030657:	mov    rax,QWORD PTR [rbp+0x10]
   14003065b:	or     DWORD PTR [rax],0x1
   14003065e:	jmp    0x140030667
   140030660:	mov    rax,QWORD PTR [rbp+0x10]
   140030664:	and    DWORD PTR [rax],0xfffffffc
   140030667:	mov    rax,QWORD PTR [rbp+0x10]
   14003066b:	and    esi,0xfff
   140030671:	shl    esi,0x5
   140030674:	and    DWORD PTR [rax],0xfffe001f
   14003067a:	mov    rax,QWORD PTR [rbp+0x10]
   14003067e:	or     DWORD PTR [rax],esi
   140030680:	mov    rax,QWORD PTR [rbp+0x10]
   140030684:	mov    rsi,QWORD PTR [rbp+0x38]
   140030688:	or     DWORD PTR [rax+0x20],0x1
   14003068c:	cmp    DWORD PTR [rbp+0x40],0x0
   140030690:	je     0x1400306c5
   140030692:	mov    rax,QWORD PTR [rbp+0x10]
   140030696:	mov    edx,0xffffffe1
   14003069b:	and    DWORD PTR [rax+0x20],edx
   14003069e:	mov    rax,QWORD PTR [rbp+0x30]
   1400306a2:	mov    ecx,DWORD PTR [rax]
   1400306a4:	mov    rax,QWORD PTR [rbp+0x10]
   1400306a8:	mov    DWORD PTR [rax+0x10],ecx
   1400306ab:	mov    rax,QWORD PTR [rbp+0x10]
   1400306af:	or     DWORD PTR [rax+0x60],0x1
   1400306b3:	mov    rax,QWORD PTR [rbp+0x10]
   1400306b7:	and    DWORD PTR [rax+0x60],edx
   1400306ba:	mov    rax,QWORD PTR [rbp+0x10]
   1400306be:	mov    ecx,DWORD PTR [rsi]
   1400306c0:	mov    DWORD PTR [rax+0x50],ecx
   1400306c3:	jmp    0x14003070d
   1400306c5:	mov    rcx,QWORD PTR [rbp+0x10]
   1400306c9:	mov    r8d,0xffffffe3
   1400306cf:	mov    eax,DWORD PTR [rcx+0x20]
   1400306d2:	and    eax,r8d
   1400306d5:	or     eax,0x2
   1400306d8:	mov    DWORD PTR [rcx+0x20],eax
   1400306db:	mov    rax,QWORD PTR [rbp+0x30]
   1400306df:	mov    rcx,QWORD PTR [rax]
   1400306e2:	mov    rax,QWORD PTR [rbp+0x10]
   1400306e6:	mov    QWORD PTR [rax+0x10],rcx
   1400306ea:	mov    rax,QWORD PTR [rbp+0x10]
   1400306ee:	or     DWORD PTR [rax+0x60],0x1
   1400306f2:	mov    rdx,QWORD PTR [rbp+0x10]
   1400306f6:	mov    eax,DWORD PTR [rdx+0x60]
   1400306f9:	and    eax,r8d
   1400306fc:	or     eax,0x2
   1400306ff:	mov    DWORD PTR [rdx+0x60],eax
   140030702:	mov    rax,QWORD PTR [rbp+0x10]
   140030706:	mov    rdx,QWORD PTR [rsi]
   140030709:	mov    QWORD PTR [rax+0x50],rdx
   14003070d:	call   0x1400307f8
   140030712:	xor    edx,edx
   140030714:	lea    r9,[rbp+0x10]
   140030718:	mov    ecx,edi
   14003071a:	lea    r8d,[rdx+0x1]
   14003071e:	call   QWORD PTR [rip+0x1a8c]        # 0x1400321b0
   140030724:	mov    rcx,QWORD PTR [rbp+0x10]
   140030728:	test   BYTE PTR [rcx+0x8],0x10
   14003072c:	je     0x140030733
   14003072e:	btr    QWORD PTR [rbx],0x7
   140030733:	test   BYTE PTR [rcx+0x8],0x8
   140030737:	je     0x14003073e
   140030739:	btr    QWORD PTR [rbx],0x9
   14003073e:	test   BYTE PTR [rcx+0x8],0x4
   140030742:	je     0x140030749
   140030744:	btr    QWORD PTR [rbx],0xa
   140030749:	test   BYTE PTR [rcx+0x8],0x2
   14003074d:	je     0x140030754
   14003074f:	btr    QWORD PTR [rbx],0xb
   140030754:	test   BYTE PTR [rcx+0x8],0x1
   140030758:	je     0x14003075f
   14003075a:	btr    QWORD PTR [rbx],0xc
   14003075f:	mov    eax,DWORD PTR [rcx]
   140030761:	and    eax,0x3
   140030764:	je     0x140030796
   140030766:	sub    eax,0x1
   140030769:	je     0x14003078a
   14003076b:	sub    eax,0x1
   14003076e:	je     0x14003077e
   140030770:	cmp    eax,0x1
   140030773:	jne    0x14003079d
   140030775:	or     QWORD PTR [rbx],0x6000
   14003077c:	jmp    0x14003079d
   14003077e:	btr    QWORD PTR [rbx],0xd
   140030783:	bts    QWORD PTR [rbx],0xe
   140030788:	jmp    0x14003079d
   14003078a:	btr    QWORD PTR [rbx],0xe
   14003078f:	bts    QWORD PTR [rbx],0xd
   140030794:	jmp    0x14003079d
   140030796:	and    QWORD PTR [rbx],0xffffffffffff9fff
   14003079d:	cmp    DWORD PTR [rbp+0x40],0x0
   1400307a1:	je     0x1400307aa
   1400307a3:	mov    eax,DWORD PTR [rcx+0x50]
   1400307a6:	mov    DWORD PTR [rsi],eax
   1400307a8:	jmp    0x1400307b1
   1400307aa:	mov    rax,QWORD PTR [rcx+0x50]
   1400307ae:	mov    QWORD PTR [rsi],rax
   1400307b1:	mov    rbx,QWORD PTR [rsp+0x38]
   1400307b6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400307bb:	mov    rdi,QWORD PTR [rsp+0x48]
   1400307c0:	add    rsp,0x20
   1400307c4:	pop    rbp
   1400307c5:	ret    
   1400307c6:	int3   
   1400307c7:	int3   
   1400307c8:	sub    rsp,0x28
   1400307cc:	cmp    ecx,0x1
   1400307cf:	je     0x1400307e6
   1400307d1:	lea    eax,[rcx-0x2]
   1400307d4:	cmp    eax,0x1
   1400307d7:	ja     0x1400307f1
   1400307d9:	call   0x14002a494
   1400307de:	mov    DWORD PTR [rax],0x22
   1400307e4:	jmp    0x1400307f1
   1400307e6:	call   0x14002a494
   1400307eb:	mov    DWORD PTR [rax],0x21
   1400307f1:	add    rsp,0x28
   1400307f5:	ret    
   1400307f6:	int3   
   1400307f7:	int3   
   1400307f8:	rex push rbx
   1400307fa:	sub    rsp,0x20
   1400307fe:	call   0x140029e80
   140030803:	mov    ebx,eax
   140030805:	and    ebx,0x3f
   140030808:	call   0x140029e9a
   14003080d:	mov    eax,ebx
   14003080f:	add    rsp,0x20
   140030813:	pop    rbx
   140030814:	ret    
   140030815:	int3   
   140030816:	int3   
   140030817:	int3   
   140030818:	mov    QWORD PTR [rsp+0x18],rbx
   14003081d:	mov    QWORD PTR [rsp+0x20],rsi
   140030822:	push   rdi
   140030823:	sub    rsp,0x20
   140030827:	mov    rbx,rdx
   14003082a:	mov    rdi,rcx
   14003082d:	call   0x140029e80
   140030832:	mov    esi,eax
   140030834:	mov    DWORD PTR [rsp+0x38],eax
   140030838:	mov    ecx,ebx
   14003083a:	not    ecx
   14003083c:	or     ecx,0xffff807f
   140030842:	and    ecx,eax
   140030844:	and    edi,ebx
   140030846:	or     ecx,edi
   140030848:	mov    DWORD PTR [rsp+0x30],ecx
   14003084c:	cmp    BYTE PTR [rip+0x1625d],0x0        # 0x140046ab0
   140030853:	je     0x14003087a
   140030855:	test   cl,0x40
   140030858:	je     0x14003087a
   14003085a:	call   0x140029e90
   14003085f:	jmp    0x140030878
   140030861:	mov    BYTE PTR [rip+0x16248],0x0        # 0x140046ab0
   140030868:	mov    ecx,DWORD PTR [rsp+0x30]
   14003086c:	and    ecx,0xffffffbf
   14003086f:	call   0x140029e90
   140030874:	mov    esi,DWORD PTR [rsp+0x38]
   140030878:	jmp    0x140030882
   14003087a:	and    ecx,0xffffffbf
   14003087d:	call   0x140029e90
   140030882:	mov    eax,esi
   140030884:	mov    rbx,QWORD PTR [rsp+0x40]
   140030889:	mov    rsi,QWORD PTR [rsp+0x48]
   14003088e:	add    rsp,0x20
   140030892:	pop    rdi
   140030893:	ret    
   140030894:	rex push rbx
   140030896:	sub    rsp,0x20
   14003089a:	mov    rbx,rcx
   14003089d:	call   0x140029e80
   1400308a2:	and    ebx,0x3f
   1400308a5:	or     eax,ebx
   1400308a7:	mov    ecx,eax
   1400308a9:	add    rsp,0x20
   1400308ad:	pop    rbx
   1400308ae:	jmp    0x140029e90
   1400308b3:	int3   
   1400308b4:	sub    rsp,0x28
   1400308b8:	call   0x140029e80
   1400308bd:	and    eax,0x3f
   1400308c0:	add    rsp,0x28
   1400308c4:	ret    
   1400308c5:	int3   
   1400308c6:	int3   
   1400308c7:	int3   
   1400308c8:	int3   
   1400308c9:	int3   
   1400308ca:	int3   
   1400308cb:	int3   
   1400308cc:	int3   
   1400308cd:	int3   
   1400308ce:	int3   
   1400308cf:	int3   
   1400308d0:	movsxd r8,DWORD PTR [rcx+0x3c]
   1400308d4:	xor    r9d,r9d
   1400308d7:	add    r8,rcx
   1400308da:	mov    r10,rdx
   1400308dd:	movzx  eax,WORD PTR [r8+0x14]
   1400308e2:	movzx  r11d,WORD PTR [r8+0x6]
   1400308e7:	add    rax,0x18
   1400308eb:	add    rax,r8
   1400308ee:	test   r11d,r11d
   1400308f1:	je     0x140030911
   1400308f3:	mov    edx,DWORD PTR [rax+0xc]
   1400308f6:	cmp    r10,rdx
   1400308f9:	jb     0x140030905
   1400308fb:	mov    ecx,DWORD PTR [rax+0x8]
   1400308fe:	add    ecx,edx
   140030900:	cmp    r10,rcx
   140030903:	jb     0x140030913
   140030905:	inc    r9d
   140030908:	add    rax,0x28
   14003090c:	cmp    r9d,r11d
   14003090f:	jb     0x1400308f3
   140030911:	xor    eax,eax
   140030913:	ret    
   140030914:	int3   
   140030915:	int3   
   140030916:	int3   
   140030917:	int3   
   140030918:	int3   
   140030919:	int3   
   14003091a:	int3   
   14003091b:	int3   
   14003091c:	int3   
   14003091d:	int3   
   14003091e:	int3   
   14003091f:	int3   
   140030920:	mov    QWORD PTR [rsp+0x8],rbx
   140030925:	push   rdi
   140030926:	sub    rsp,0x20
   14003092a:	mov    rbx,rcx
   14003092d:	lea    rdi,[rip+0xfffffffffffcf6cc]        # 0x140000000
   140030934:	mov    rcx,rdi
   140030937:	call   0x140030970
   14003093c:	test   eax,eax
   14003093e:	je     0x140030962
   140030940:	sub    rbx,rdi
   140030943:	mov    rdx,rbx
   140030946:	mov    rcx,rdi
   140030949:	call   0x1400308d0
   14003094e:	test   rax,rax
   140030951:	je     0x140030962
   140030953:	mov    eax,DWORD PTR [rax+0x24]
   140030956:	shr    eax,0x1f
   140030959:	not    eax
   14003095b:	and    eax,0x1
   14003095e:	jmp    0x140030962
   140030960:	xor    eax,eax
   140030962:	mov    rbx,QWORD PTR [rsp+0x30]
   140030967:	add    rsp,0x20
   14003096b:	pop    rdi
   14003096c:	ret    
   14003096d:	int3   
   14003096e:	int3   
   14003096f:	int3   
   140030970:	mov    rax,rcx
   140030973:	mov    ecx,0x5a4d
   140030978:	cmp    WORD PTR [rax],cx
   14003097b:	je     0x140030980
   14003097d:	xor    eax,eax
   14003097f:	ret    
   140030980:	movsxd rcx,DWORD PTR [rax+0x3c]
   140030984:	add    rcx,rax
   140030987:	xor    eax,eax
   140030989:	cmp    DWORD PTR [rcx],0x4550
   14003098f:	jne    0x14003099d
   140030991:	mov    edx,0x20b
   140030996:	cmp    WORD PTR [rcx+0x18],dx
   14003099a:	sete   al
   14003099d:	ret    
   14003099e:	int3   
   14003099f:	int3   
   1400309a0:	sub    rsp,0x28
   1400309a4:	mov    r8,QWORD PTR [r9+0x38]
   1400309a8:	mov    rcx,rdx
   1400309ab:	mov    rdx,r9
   1400309ae:	call   0x1400309c0
   1400309b3:	mov    eax,0x1
   1400309b8:	add    rsp,0x28
   1400309bc:	ret    
   1400309bd:	int3   
   1400309be:	int3   
   1400309bf:	int3   
   1400309c0:	rex push rbx
   1400309c2:	mov    r11d,DWORD PTR [r8]
   1400309c5:	mov    rbx,rdx
   1400309c8:	and    r11d,0xfffffff8
   1400309cc:	mov    r9,rcx
   1400309cf:	test   BYTE PTR [r8],0x4
   1400309d3:	mov    r10,rcx
   1400309d6:	je     0x1400309eb
   1400309d8:	mov    eax,DWORD PTR [r8+0x8]
   1400309dc:	movsxd r10,DWORD PTR [r8+0x4]
   1400309e0:	neg    eax
   1400309e2:	add    r10,rcx
   1400309e5:	movsxd rcx,eax
   1400309e8:	and    r10,rcx
   1400309eb:	movsxd rax,r11d
   1400309ee:	mov    rdx,QWORD PTR [rax+r10*1]
   1400309f2:	mov    rax,QWORD PTR [rbx+0x10]
   1400309f6:	mov    ecx,DWORD PTR [rax+0x8]
   1400309f9:	add    rcx,QWORD PTR [rbx+0x8]
   1400309fd:	test   BYTE PTR [rcx+0x3],0xf
   140030a01:	je     0x140030a0d
   140030a03:	movzx  eax,BYTE PTR [rcx+0x3]
   140030a07:	and    eax,0xfffffff0
   140030a0a:	add    r9,rax
   140030a0d:	xor    r9,rdx
   140030a10:	mov    rcx,r9
   140030a13:	pop    rbx
   140030a14:	jmp    0x140030a30
   140030a19:	int3   
   140030a1a:	int3   
   140030a1b:	int3   
   140030a1c:	int3   
   140030a1d:	int3   
   140030a1e:	int3   
   140030a1f:	int3   
   140030a20:	int3   
   140030a21:	int3   
   140030a22:	int3   
   140030a23:	int3   
   140030a24:	int3   
   140030a25:	int3   
   140030a26:	data16 nop WORD PTR [rax+rax*1+0x0]
   140030a30:	cmp    rcx,QWORD PTR [rip+0x157b1]        # 0x1400461e8
   140030a37:	bnd jne 0x140030a4c
   140030a3a:	rol    rcx,0x10
   140030a3e:	test   cx,0xffff
   140030a43:	bnd jne 0x140030a48
   140030a46:	bnd ret 
   140030a48:	ror    rcx,0x10
   140030a4c:	jmp    0x140030a88
   140030a51:	int3   
   140030a52:	int3   
   140030a53:	int3   
   140030a54:	rex push rbx
   140030a56:	sub    rsp,0x20
   140030a5a:	mov    rbx,rcx
   140030a5d:	xor    ecx,ecx
   140030a5f:	call   QWORD PTR [rip+0x16db]        # 0x140032140
   140030a65:	mov    rcx,rbx
   140030a68:	call   QWORD PTR [rip+0x16da]        # 0x140032148
   140030a6e:	call   QWORD PTR [rip+0x170c]        # 0x140032180
   140030a74:	mov    rcx,rax
   140030a77:	mov    edx,0xc0000409
   140030a7c:	add    rsp,0x20
   140030a80:	pop    rbx
   140030a81:	rex.W jmp QWORD PTR [rip+0x1658]        # 0x1400320e0
   140030a88:	mov    QWORD PTR [rsp+0x8],rcx
   140030a8d:	sub    rsp,0x38
   140030a91:	mov    ecx,0x17
   140030a96:	call   0x140026ee0
   140030a9b:	test   eax,eax
   140030a9d:	je     0x140030aa6
   140030a9f:	mov    ecx,0x2
   140030aa4:	int    0x29
   140030aa6:	lea    rcx,[rip+0x18543]        # 0x140048ff0
   140030aad:	call   0x140030c7c
   140030ab2:	mov    rax,QWORD PTR [rsp+0x38]
   140030ab7:	mov    QWORD PTR [rip+0x1862a],rax        # 0x1400490e8
   140030abe:	lea    rax,[rsp+0x38]
   140030ac3:	add    rax,0x8
   140030ac7:	mov    QWORD PTR [rip+0x185ba],rax        # 0x140049088
   140030ace:	mov    rax,QWORD PTR [rip+0x18613]        # 0x1400490e8
   140030ad5:	mov    QWORD PTR [rip+0x18484],rax        # 0x140048f60
   140030adc:	mov    rax,QWORD PTR [rsp+0x40]
   140030ae1:	mov    QWORD PTR [rip+0x18588],rax        # 0x140049070
   140030ae8:	mov    DWORD PTR [rip+0x1845e],0xc0000409        # 0x140048f50
   140030af2:	mov    DWORD PTR [rip+0x18458],0x1        # 0x140048f54
   140030afc:	mov    DWORD PTR [rip+0x18462],0x1        # 0x140048f68
   140030b06:	mov    eax,0x8
   140030b0b:	imul   rax,rax,0x0
   140030b0f:	lea    rcx,[rip+0x1845a]        # 0x140048f70
   140030b16:	mov    QWORD PTR [rcx+rax*1],0x2
   140030b1e:	mov    eax,0x8
   140030b23:	imul   rax,rax,0x0
   140030b27:	mov    rcx,QWORD PTR [rip+0x156ba]        # 0x1400461e8
   140030b2e:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140030b33:	mov    eax,0x8
   140030b38:	imul   rax,rax,0x1
   140030b3c:	mov    rcx,QWORD PTR [rip+0x156ad]        # 0x1400461f0
   140030b43:	mov    QWORD PTR [rsp+rax*1+0x20],rcx
   140030b48:	lea    rcx,[rip+0xe5c9]        # 0x14003f118
   140030b4f:	call   0x140030a54
   140030b54:	add    rsp,0x38
   140030b58:	ret    
   140030b59:	int3   
   140030b5a:	int3   
   140030b5b:	int3   
   140030b5c:	sub    rsp,0x28
   140030b60:	mov    ecx,0x8
   140030b65:	call   0x140030b70
   140030b6a:	add    rsp,0x28
   140030b6e:	ret    
   140030b6f:	int3   
   140030b70:	mov    DWORD PTR [rsp+0x8],ecx
   140030b74:	sub    rsp,0x28
   140030b78:	mov    ecx,0x17
   140030b7d:	call   0x140026ee0
   140030b82:	test   eax,eax
   140030b84:	je     0x140030b8e
   140030b86:	mov    eax,DWORD PTR [rsp+0x30]
   140030b8a:	mov    ecx,eax
   140030b8c:	int    0x29
   140030b8e:	lea    rcx,[rip+0x1845b]        # 0x140048ff0
   140030b95:	call   0x140030c0c
   140030b9a:	mov    rax,QWORD PTR [rsp+0x28]
   140030b9f:	mov    QWORD PTR [rip+0x18542],rax        # 0x1400490e8
   140030ba6:	lea    rax,[rsp+0x28]
   140030bab:	add    rax,0x8
   140030baf:	mov    QWORD PTR [rip+0x184d2],rax        # 0x140049088
   140030bb6:	mov    rax,QWORD PTR [rip+0x1852b]        # 0x1400490e8
   140030bbd:	mov    QWORD PTR [rip+0x1839c],rax        # 0x140048f60
   140030bc4:	mov    DWORD PTR [rip+0x18382],0xc0000409        # 0x140048f50
   140030bce:	mov    DWORD PTR [rip+0x1837c],0x1        # 0x140048f54
   140030bd8:	mov    DWORD PTR [rip+0x18386],0x1        # 0x140048f68
   140030be2:	mov    eax,0x8
   140030be7:	imul   rax,rax,0x0
   140030beb:	lea    rcx,[rip+0x1837e]        # 0x140048f70
   140030bf2:	mov    edx,DWORD PTR [rsp+0x30]
   140030bf6:	mov    QWORD PTR [rcx+rax*1],rdx
   140030bfa:	lea    rcx,[rip+0xe517]        # 0x14003f118
   140030c01:	call   0x140030a54
   140030c06:	add    rsp,0x28
   140030c0a:	ret    
   140030c0b:	int3   
   140030c0c:	mov    QWORD PTR [rsp+0x20],rbx
   140030c11:	push   rdi
   140030c12:	sub    rsp,0x40
   140030c16:	mov    rbx,rcx
   140030c19:	call   QWORD PTR [rip+0x1549]        # 0x140032168
   140030c1f:	mov    rdi,QWORD PTR [rbx+0xf8]
   140030c26:	lea    rdx,[rsp+0x50]
   140030c2b:	mov    rcx,rdi
   140030c2e:	xor    r8d,r8d
   140030c31:	call   QWORD PTR [rip+0x1529]        # 0x140032160
   140030c37:	test   rax,rax
   140030c3a:	je     0x140030c6e
   140030c3c:	and    QWORD PTR [rsp+0x38],0x0
   140030c42:	lea    rcx,[rsp+0x58]
   140030c47:	mov    rdx,QWORD PTR [rsp+0x50]
   140030c4c:	mov    r9,rax
   140030c4f:	mov    QWORD PTR [rsp+0x30],rcx
   140030c54:	mov    r8,rdi
   140030c57:	lea    rcx,[rsp+0x60]
   140030c5c:	mov    QWORD PTR [rsp+0x28],rcx
   140030c61:	xor    ecx,ecx
   140030c63:	mov    QWORD PTR [rsp+0x20],rbx
   140030c68:	call   QWORD PTR [rip+0x14ea]        # 0x140032158
   140030c6e:	mov    rbx,QWORD PTR [rsp+0x68]
   140030c73:	add    rsp,0x40
   140030c77:	pop    rdi
   140030c78:	ret    
   140030c79:	int3   
   140030c7a:	int3   
   140030c7b:	int3   
   140030c7c:	rex push rbx
   140030c7e:	push   rsi
   140030c7f:	push   rdi
   140030c80:	sub    rsp,0x40
   140030c84:	mov    rbx,rcx
   140030c87:	call   QWORD PTR [rip+0x14db]        # 0x140032168
   140030c8d:	mov    rsi,QWORD PTR [rbx+0xf8]
   140030c94:	xor    edi,edi
   140030c96:	xor    r8d,r8d
   140030c99:	lea    rdx,[rsp+0x60]
   140030c9e:	mov    rcx,rsi
   140030ca1:	call   QWORD PTR [rip+0x14b9]        # 0x140032160
   140030ca7:	test   rax,rax
   140030caa:	je     0x140030ce5
   140030cac:	and    QWORD PTR [rsp+0x38],0x0
   140030cb2:	lea    rcx,[rsp+0x68]
   140030cb7:	mov    rdx,QWORD PTR [rsp+0x60]
   140030cbc:	mov    r9,rax
   140030cbf:	mov    QWORD PTR [rsp+0x30],rcx
   140030cc4:	mov    r8,rsi
   140030cc7:	lea    rcx,[rsp+0x70]
   140030ccc:	mov    QWORD PTR [rsp+0x28],rcx
   140030cd1:	xor    ecx,ecx
   140030cd3:	mov    QWORD PTR [rsp+0x20],rbx
   140030cd8:	call   QWORD PTR [rip+0x147a]        # 0x140032158
   140030cde:	inc    edi
   140030ce0:	cmp    edi,0x2
   140030ce3:	jl     0x140030c96
   140030ce5:	add    rsp,0x40
   140030ce9:	pop    rdi
   140030cea:	pop    rsi
   140030ceb:	pop    rbx
   140030cec:	ret    
   140030ced:	int3   
   140030cee:	jmp    QWORD PTR [rip+0x140c]        # 0x140032100
   140030cf4:	int3   
   140030cf5:	int3   
   140030cf6:	int3   
   140030cf7:	int3   
   140030cf8:	int3   
   140030cf9:	int3   
   140030cfa:	int3   
   140030cfb:	int3   
   140030cfc:	int3   
   140030cfd:	int3   
   140030cfe:	int3   
   140030cff:	int3   
   140030d00:	int3   
   140030d01:	int3   
   140030d02:	int3   
   140030d03:	int3   
   140030d04:	int3   
   140030d05:	int3   
   140030d06:	data16 nop WORD PTR [rax+rax*1+0x0]
   140030d10:	jmp    rax
   140030d12:	int3   
   140030d13:	int3   
   140030d14:	int3   
   140030d15:	int3   
   140030d16:	int3   
   140030d17:	int3   
   140030d18:	int3   
   140030d19:	int3   
   140030d1a:	int3   
   140030d1b:	int3   
   140030d1c:	int3   
   140030d1d:	int3   
   140030d1e:	int3   
   140030d1f:	int3   
   140030d20:	rex push rbp
   140030d22:	sub    rsp,0x30
   140030d26:	mov    rbp,rdx
   140030d29:	mov    rax,QWORD PTR [rcx]
   140030d2c:	mov    rdx,rcx
   140030d2f:	mov    ecx,DWORD PTR [rax]
   140030d31:	mov    QWORD PTR [rsp+0x28],0x0
   140030d3a:	mov    DWORD PTR [rsp+0x20],0x0
   140030d42:	xor    r9d,r9d
   140030d45:	lea    r8d,[r9+0x2]
   140030d49:	call   QWORD PTR [rip+0x1679]        # 0x1400323c8
   140030d4f:	nop
   140030d50:	add    rsp,0x30
   140030d54:	pop    rbp
   140030d55:	ret    
   140030d56:	int3   
   140030d57:	rex push rbp
   140030d59:	mov    rbp,rdx
   140030d5c:	mov    rax,QWORD PTR [rcx]
   140030d5f:	xor    ecx,ecx
   140030d61:	cmp    DWORD PTR [rax],0xc0000005
   140030d67:	sete   cl
   140030d6a:	mov    eax,ecx
   140030d6c:	pop    rbp
   140030d6d:	ret    
   140030d6e:	int3   
   140030d6f:	rex push rbp
   140030d71:	sub    rsp,0x20
   140030d75:	mov    rbp,rdx
   140030d78:	mov    rax,QWORD PTR [rcx]
   140030d7b:	mov    rdx,rcx
   140030d7e:	mov    ecx,DWORD PTR [rax]
   140030d80:	call   0x140028978
   140030d85:	nop
   140030d86:	add    rsp,0x20
   140030d8a:	pop    rbp
   140030d8b:	ret    
   140030d8c:	int3   
   140030d8d:	rex push rbp
   140030d8f:	sub    rsp,0x20
   140030d93:	mov    rbp,rdx
   140030d96:	mov    rcx,QWORD PTR [rbp+0x68]
   140030d9a:	call   0x140028728
   140030d9f:	nop
   140030da0:	add    rsp,0x20
   140030da4:	pop    rbp
   140030da5:	ret    
   140030da6:	int3   
   140030da7:	rex push rbp
   140030da9:	sub    rsp,0x20
   140030dad:	mov    rbp,rdx
   140030db0:	mov    ecx,0x8
   140030db5:	add    rsp,0x20
   140030db9:	pop    rbp
   140030dba:	jmp    0x14002af7c
   140030dbf:	int3   
   140030dc0:	rex push rbp
   140030dc2:	sub    rsp,0x20
   140030dc6:	mov    rbp,rdx
   140030dc9:	mov    rax,QWORD PTR [rcx]
   140030dcc:	mov    ecx,DWORD PTR [rax]
   140030dce:	call   0x140028b08
   140030dd3:	nop
   140030dd4:	add    rsp,0x20
   140030dd8:	pop    rbp
   140030dd9:	ret    
   140030dda:	int3   
   140030ddb:	rex push rbp
   140030ddd:	sub    rsp,0x20
   140030de1:	mov    rbp,rdx
   140030de4:	mov    ecx,0x2
   140030de9:	add    rsp,0x20
   140030ded:	pop    rbp
   140030dee:	jmp    0x14002af7c
   140030df3:	int3   
   140030df4:	rex push rbp
   140030df6:	sub    rsp,0x20
   140030dfa:	mov    rbp,rdx
   140030dfd:	mov    rax,QWORD PTR [rbp+0x88]
   140030e04:	mov    ecx,DWORD PTR [rax]
   140030e06:	add    rsp,0x20
   140030e0a:	pop    rbp
   140030e0b:	jmp    0x14002af7c
   140030e10:	int3   
   140030e11:	rex push rbp
   140030e13:	sub    rsp,0x20
   140030e17:	mov    rbp,rdx
   140030e1a:	mov    ecx,0x4
   140030e1f:	add    rsp,0x20
   140030e23:	pop    rbp
   140030e24:	jmp    0x14002af7c
   140030e29:	int3   
   140030e2a:	rex push rbp
   140030e2c:	sub    rsp,0x20
   140030e30:	mov    rbp,rdx
   140030e33:	mov    rax,QWORD PTR [rbp+0x48]
   140030e37:	mov    ecx,DWORD PTR [rax]
   140030e39:	add    rsp,0x20
   140030e3d:	pop    rbp
   140030e3e:	jmp    0x14002af7c
   140030e43:	int3   
   140030e44:	rex push rbp
   140030e46:	sub    rsp,0x20
   140030e4a:	mov    rbp,rdx
   140030e4d:	mov    ecx,0x8
   140030e52:	add    rsp,0x20
   140030e56:	pop    rbp
   140030e57:	jmp    0x14002af7c
   140030e5c:	int3   
   140030e5d:	rex push rbp
   140030e5f:	sub    rsp,0x20
   140030e63:	mov    rbp,rdx
   140030e66:	mov    ecx,0x7
   140030e6b:	add    rsp,0x20
   140030e6f:	pop    rbp
   140030e70:	jmp    0x14002af7c
   140030e75:	int3   
   140030e76:	rex push rbp
   140030e78:	sub    rsp,0x20
   140030e7c:	mov    rbp,rdx
   140030e7f:	mov    rax,QWORD PTR [rbp+0x48]
   140030e83:	mov    ecx,DWORD PTR [rax]
   140030e85:	add    rsp,0x20
   140030e89:	pop    rbp
   140030e8a:	jmp    0x14002d950
   140030e8f:	int3   
   140030e90:	rex push rbp
   140030e92:	sub    rsp,0x20
   140030e96:	mov    rbp,rdx
   140030e99:	mov    ecx,DWORD PTR [rbp+0x50]
   140030e9c:	add    rsp,0x20
   140030ea0:	pop    rbp
   140030ea1:	jmp    0x14002d950
   140030ea6:	int3   
   140030ea7:	rex push rbp
   140030ea9:	sub    rsp,0x20
   140030ead:	mov    rbp,rdx
   140030eb0:	mov    ecx,0x5
   140030eb5:	add    rsp,0x20
   140030eb9:	pop    rbp
   140030eba:	jmp    0x14002af7c
   140030ebf:	int3   
   140030ec0:	rex push rbp
   140030ec2:	sub    rsp,0x20
   140030ec6:	mov    rbp,rdx
   140030ec9:	cmp    BYTE PTR [rbp+0x80],0x0
   140030ed0:	je     0x140030edd
   140030ed2:	mov    ecx,0x3
   140030ed7:	call   0x14002af7c
   140030edc:	nop
   140030edd:	add    rsp,0x20
   140030ee1:	pop    rbp
   140030ee2:	ret    
   140030ee3:	int3   
   140030ee4:	rex push rbp
   140030ee6:	sub    rsp,0x20
   140030eea:	mov    rbp,rdx
   140030eed:	mov    rcx,QWORD PTR [rbp+0x30]
   140030ef1:	add    rsp,0x20
   140030ef5:	pop    rbp
   140030ef6:	jmp    0x140028728
   140030efb:	int3   
   140030efc:	rex push rbp
   140030efe:	sub    rsp,0x20
   140030f02:	mov    rbp,rdx
   140030f05:	mov    rax,QWORD PTR [rcx]
   140030f08:	cmp    DWORD PTR [rax],0xc0000005
   140030f0e:	je     0x140030f1c
   140030f10:	cmp    DWORD PTR [rax],0xc000001d
   140030f16:	je     0x140030f1c
   140030f18:	xor    eax,eax
   140030f1a:	jmp    0x140030f21
   140030f1c:	mov    eax,0x1
   140030f21:	add    rsp,0x20
   140030f25:	pop    rbp
   140030f26:	ret    
   140030f27:	int3   
   140030f28:	int3   
   140030f29:	int3   
   140030f2a:	int3   
   140030f2b:	int3   
   140030f2c:	int3   
   140030f2d:	int3   
   140030f2e:	int3   
   140030f2f:	int3   
   140030f30:	rex push rbp
   140030f32:	sub    rsp,0x20
   140030f36:	mov    rbp,rdx
   140030f39:	mov    rax,QWORD PTR [rcx]
   140030f3c:	xor    ecx,ecx
   140030f3e:	cmp    DWORD PTR [rax],0xc0000005
   140030f44:	sete   cl
   140030f47:	mov    eax,ecx
   140030f49:	add    rsp,0x20
   140030f4d:	pop    rbp
   140030f4e:	ret    
   140030f4f:	int3   
   140030f50:	lock or DWORD PTR [rip+0x16125],0x10000000        # 0x140047080
   140030f5b:	mov    eax,DWORD PTR [rip+0x1611f]        # 0x140047080
   140030f61:	bt     eax,0x1a
   140030f65:	jae    0x140030fa2
   140030f67:	prefetchw BYTE PTR [rip+0x16112]        # 0x140047080
   140030f6e:	mov    eax,DWORD PTR [rip+0x1610c]        # 0x140047080
   140030f74:	nop    DWORD PTR [rax+0x0]
   140030f78:	nop    DWORD PTR [rax+rax*1+0x0]
   140030f80:	mov    ecx,eax
   140030f82:	btr    ecx,0x1a
   140030f86:	lock cmpxchg DWORD PTR [rip+0x160f2],ecx        # 0x140047080
   140030f8e:	jne    0x140030f80
   140030f90:	bt     eax,0x1a
   140030f94:	jae    0x140030fa2
   140030f96:	lea    rcx,[rip+0x160db]        # 0x140047078
   140030f9d:	jmp    0x1400075e0
   140030fa2:	ret    
   140030fa3:	int3   
   140030fa4:	int3   
   140030fa5:	int3   
   140030fa6:	int3   
   140030fa7:	int3   
   140030fa8:	int3   
   140030fa9:	int3   
   140030faa:	int3   
   140030fab:	int3   
   140030fac:	int3   
   140030fad:	int3   
   140030fae:	int3   
   140030faf:	int3   
   140030fb0:	sub    rsp,0x28
   140030fb4:	lea    rcx,[rip+0x15115]        # 0x1400460d0
   140030fbb:	call   0x1400185c0
   140030fc0:	lea    rcx,[rip+0x15109]        # 0x1400460d0
   140030fc7:	add    rsp,0x28
   140030fcb:	jmp    0x1400181a0
   140030fd0:	sub    rsp,0x28
   140030fd4:	cmp    BYTE PTR [rip+0x170d5],0x0        # 0x1400480b0
   140030fdb:	lea    rax,[rip+0x674e]        # 0x140037730
   140030fe2:	mov    QWORD PTR [rip+0x170b7],rax        # 0x1400480a0
   140030fe9:	lea    rax,[rip+0x6800]        # 0x1400377f0
   140030ff0:	mov    QWORD PTR [rip+0x170d9],rax        # 0x1400480d0
   140030ff7:	je     0x14003102d
   140030ff9:	lea    rcx,[rip+0x170a0]        # 0x1400480a0
   140031000:	cmp    QWORD PTR [rip+0x170d1],rcx        # 0x1400480d8
   140031007:	jne    0x14003102d
   140031009:	mov    eax,DWORD PTR [rip+0x17119]        # 0x140048128
   14003100f:	test   al,0x1
   140031011:	jne    0x14003102d
   140031013:	or     eax,0x1
   140031016:	mov    DWORD PTR [rip+0x1710c],eax        # 0x140048128
   14003101c:	call   0x14001b6d0
   140031021:	lea    rcx,[rip+0xffffffffffffffa8]        # 0x140030fd0
   140031028:	call   0x1400266d0
   14003102d:	mov    rcx,QWORD PTR [rip+0x170b4]        # 0x1400480e8
   140031034:	test   rcx,rcx
   140031037:	je     0x140031049
   140031039:	call   0x140007bd0
   14003103e:	mov    QWORD PTR [rip+0x1709f],0x0        # 0x1400480e8
   140031049:	lea    rcx,[rip+0x170c0]        # 0x140048110
   140031050:	call   0x1400181a0
   140031055:	lea    rax,[rip+0x6664]        # 0x1400376c0
   14003105c:	mov    QWORD PTR [rip+0x1703d],rax        # 0x1400480a0
   140031063:	add    rsp,0x28
   140031067:	ret    
   140031068:	int3   
   140031069:	int3   
   14003106a:	int3   
   14003106b:	int3   
   14003106c:	int3   
   14003106d:	int3   
   14003106e:	int3   
   14003106f:	int3   
   140031070:	rex push rbx
   140031072:	sub    rsp,0x20
   140031076:	mov    rbx,QWORD PTR [rip+0x170cb]        # 0x140048148
   14003107d:	test   rbx,rbx
   140031080:	je     0x1400310a8
   140031082:	mov    rcx,rbx
   140031085:	call   0x14001d800
   14003108a:	lea    rcx,[rbx+0x38]
   14003108e:	call   0x1400181a0
   140031093:	mov    rcx,rbx
   140031096:	call   0x14001c8c0
   14003109b:	mov    edx,0x60
   1400310a0:	mov    rcx,rbx
   1400310a3:	call   0x14002639c
   1400310a8:	mov    QWORD PTR [rip+0x17095],0x0        # 0x140048148
   1400310b3:	add    rsp,0x20
   1400310b7:	pop    rbx
   1400310b8:	ret    
   1400310b9:	int3   
   1400310ba:	int3   
   1400310bb:	int3   
   1400310bc:	int3   
   1400310bd:	int3   
   1400310be:	int3   
   1400310bf:	int3   
   1400310c0:	lea    rcx,[rip+0x170a9]        # 0x140048170
   1400310c7:	jmp    0x140024630
   1400310cc:	int3   
   1400310cd:	int3   
   1400310ce:	int3   
   1400310cf:	int3   
   1400310d0:	sub    rsp,0x48
   1400310d4:	lea    rcx,[rip+0x17165]        # 0x140048240
   1400310db:	call   0x140022510
   1400310e0:	mov    DWORD PTR [rsp+0x2c],0x0
   1400310e8:	mov    QWORD PTR [rsp+0x40],rbx
   1400310ed:	nop    DWORD PTR [rax]
   1400310f0:	pause  
   1400310f2:	movdqa xmm0,XMMWORD PTR [rip+0x17146]        # 0x140048240
   1400310fa:	movq   rax,xmm0
   1400310ff:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140031105:	test   rax,rax
   140031108:	je     0x140031148
   14003110a:	mov    eax,DWORD PTR [rsp+0x38]
   14003110e:	and    eax,0xffff0000
   140031113:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   140031119:	mov    DWORD PTR [rsp+0x28],eax
   14003111d:	xor    ebx,ebx
   14003111f:	mov    rcx,QWORD PTR [rsp+0x28]
   140031124:	movq   rax,xmm0
   140031129:	psrldq xmm0,0x8
   14003112e:	movq   rdx,xmm0
   140031133:	lock cmpxchg16b OWORD PTR [rip+0x17104]        # 0x140048240
   14003113c:	sete   al
   14003113f:	mov    QWORD PTR [rsp+0x38],rdx
   140031144:	cmp    al,0x1
   140031146:	jne    0x1400310f0
   140031148:	mov    rbx,QWORD PTR [rsp+0x40]
   14003114d:	add    rsp,0x48
   140031151:	ret    

Disassembly of section .rdata:

0000000140032000 <.rdata>:
   140032000:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140032001:	push   rbx
   140032002:	add    al,0x0
   140032004:	add    BYTE PTR [rax],al
   140032006:	add    BYTE PTR [rax],al
   140032008:	(bad)  
   140032009:	pop    rcx
   14003200a:	add    al,0x0
   14003200c:	add    BYTE PTR [rax],al
   14003200e:	add    BYTE PTR [rax],al
   140032010:	or     bl,BYTE PTR [rcx+0x4]
   140032013:	add    BYTE PTR [rax],al
   140032015:	add    BYTE PTR [rax],al
   140032017:	add    al,bh
   140032019:	pop    rax
   14003201a:	add    al,0x0
   14003201c:	add    BYTE PTR [rax],al
   14003201e:	add    BYTE PTR [rax],al
   140032020:	call   0x14003247d
   140032025:	add    BYTE PTR [rax],al
   140032027:	add    dh,dl
   140032029:	pop    rax
   14003202a:	add    al,0x0
   14003202c:	add    BYTE PTR [rax],al
   14003202e:	add    BYTE PTR [rax],al
   140032030:	mov    esp,0x458
   140032035:	add    BYTE PTR [rax],al
   140032037:	add    BYTE PTR [rdx+0x458],ah
   14003203d:	add    BYTE PTR [rax],al
   14003203f:	add    BYTE PTR [rax+0x458],cl
   140032045:	add    BYTE PTR [rax],al
   140032047:	add    BYTE PTR [rax+rbx*2+0x4],bh
   14003204b:	add    BYTE PTR [rax],al
   14003204d:	add    BYTE PTR [rax],al
   14003204f:	add    BYTE PTR [rax+0x58],dh
   140032052:	add    al,0x0
   140032054:	add    BYTE PTR [rax],al
   140032056:	add    BYTE PTR [rax],al
   140032058:	pop    rsi
   140032059:	pop    rax
   14003205a:	add    al,0x0
   14003205c:	add    BYTE PTR [rax],al
   14003205e:	add    BYTE PTR [rax],al
   140032060:	rex.WRX pop rax
   140032062:	add    al,0x0
   140032064:	add    BYTE PTR [rax],al
   140032066:	add    BYTE PTR [rax],al
   140032068:	cmp    bl,BYTE PTR [rax+0x4]
   14003206b:	add    BYTE PTR [rax],al
   14003206d:	add    BYTE PTR [rax],al
   14003206f:	add    BYTE PTR [rax],ch
   140032071:	pop    rax
   140032072:	add    al,0x0
   140032074:	add    BYTE PTR [rax],al
   140032076:	add    BYTE PTR [rax],al
   140032078:	sbb    BYTE PTR [rax+0x4],bl
   14003207b:	add    BYTE PTR [rax],al
   14003207d:	add    BYTE PTR [rax],al
   14003207f:	add    BYTE PTR [rdx],cl
   140032081:	pop    rax
   140032082:	add    al,0x0
   140032084:	add    BYTE PTR [rax],al
   140032086:	add    BYTE PTR [rax],al
   140032088:	cli    
   140032089:	push   rdi
   14003208a:	add    al,0x0
   14003208c:	add    BYTE PTR [rax],al
   14003208e:	add    BYTE PTR [rax],al
   140032090:	call   0x1400324ec
   140032095:	add    BYTE PTR [rax],al
   140032097:	add    dh,bl
   140032099:	push   rdi
   14003209a:	add    al,0x0
   14003209c:	add    BYTE PTR [rax],al
   14003209e:	add    BYTE PTR [rax],al
   1400320a0:	int3   
   1400320a1:	push   rdi
   1400320a2:	add    al,0x0
   1400320a4:	add    BYTE PTR [rax],al
   1400320a6:	add    BYTE PTR [rax],al
   1400320a8:	mov    edx,0x457
   1400320ad:	add    BYTE PTR [rax],al
   1400320af:	add    BYTE PTR [rdx+0x457],ch
   1400320b5:	add    BYTE PTR [rax],al
   1400320b7:	add    BYTE PTR [rdi+rdx*2+0x4],dl
   1400320be:	add    BYTE PTR [rax],al
   1400320c0:	jle    0x140032119
   1400320c2:	add    al,0x0
   1400320c4:	add    BYTE PTR [rax],al
   1400320c6:	add    BYTE PTR [rax],al
   1400320c8:	push   0x457
   1400320cd:	add    BYTE PTR [rax],al
   1400320cf:	add    BYTE PTR [rdx+0x57],dl
   1400320d2:	add    al,0x0
   1400320d4:	add    BYTE PTR [rax],al
   1400320d6:	add    BYTE PTR [rax],al
   1400320d8:	rex.R push rdi
   1400320da:	add    al,0x0
   1400320dc:	add    BYTE PTR [rax],al
   1400320de:	add    BYTE PTR [rax],al
   1400320e0:	xor    BYTE PTR [rdi+0x4],dl
   1400320e3:	add    BYTE PTR [rax],al
   1400320e5:	add    BYTE PTR [rax],al
   1400320e7:	add    BYTE PTR [rax],bl
   1400320e9:	push   rdi
   1400320ea:	add    al,0x0
   1400320ec:	add    BYTE PTR [rax],al
   1400320ee:	add    BYTE PTR [rax],al
   1400320f0:	add    BYTE PTR [rdi+0x4],dl
   1400320f3:	add    BYTE PTR [rax],al
   1400320f5:	add    BYTE PTR [rax],al
   1400320f7:	add    al,ch
   1400320f9:	push   rsi
   1400320fa:	add    al,0x0
   1400320fc:	add    BYTE PTR [rax],al
   1400320fe:	add    BYTE PTR [rax],al
   140032100:	ficom  DWORD PTR [rsi+0x4]
   140032103:	add    BYTE PTR [rax],al
   140032105:	add    BYTE PTR [rax],al
   140032107:	add    BYTE PTR [rdx+0x55],dl
   14003210a:	add    al,0x0
   14003210c:	add    BYTE PTR [rax],al
   14003210e:	add    BYTE PTR [rax],al
   140032110:	cmp    BYTE PTR [rbp+0x4],dl
   140032113:	add    BYTE PTR [rax],al
   140032115:	add    BYTE PTR [rax],al
   140032117:	add    BYTE PTR [rdx],ah
   140032119:	push   rbp
   14003211a:	add    al,0x0
   14003211c:	add    BYTE PTR [rax],al
   14003211e:	add    BYTE PTR [rax],al
   140032120:	or     BYTE PTR [rbp+0x4],dl
   140032123:	add    BYTE PTR [rax],al
   140032125:	add    BYTE PTR [rax],al
   140032127:	add    ah,dh
   140032129:	push   rsp
   14003212a:	add    al,0x0
   14003212c:	add    BYTE PTR [rax],al
   14003212e:	add    BYTE PTR [rax],al
   140032130:	fcom   DWORD PTR [rsp+rax*1+0x0]
   140032134:	add    BYTE PTR [rax],al
   140032136:	add    BYTE PTR [rax],al
   140032138:	(bad)  
   140032139:	push   rsp
   14003213a:	add    al,0x0
   14003213c:	add    BYTE PTR [rax],al
   14003213e:	add    BYTE PTR [rax],al
   140032140:	test   al,0x54
   140032142:	add    al,0x0
   140032144:	add    BYTE PTR [rax],al
   140032146:	add    BYTE PTR [rax],al
   140032148:	mov    WORD PTR [rsp+rax*1+0x0],ss
   14003214c:	add    BYTE PTR [rax],al
   14003214e:	add    BYTE PTR [rax],al
   140032150:	js     0x1400321a6
   140032152:	add    al,0x0
   140032154:	add    BYTE PTR [rax],al
   140032156:	add    BYTE PTR [rax],al
   140032158:	fs push rsp
   14003215a:	add    al,0x0
   14003215c:	add    BYTE PTR [rax],al
   14003215e:	add    BYTE PTR [rax],al
   140032160:	rex.WX push rsp
   140032162:	add    al,0x0
   140032164:	add    BYTE PTR [rax],al
   140032166:	add    BYTE PTR [rax],al
   140032168:	ss push rsp
   14003216a:	add    al,0x0
   14003216c:	add    BYTE PTR [rax],al
   14003216e:	add    BYTE PTR [rax],al
   140032170:	and    dl,BYTE PTR [rsp+rax*1+0x0]
   140032174:	add    BYTE PTR [rax],al
   140032176:	add    BYTE PTR [rax],al
   140032178:	(bad)  
   140032179:	push   rsp
   14003217a:	add    al,0x0
   14003217c:	add    BYTE PTR [rax],al
   14003217e:	add    BYTE PTR [rax],al
   140032180:	cli    
   140032181:	push   rbx
   140032182:	add    al,0x0
   140032184:	add    BYTE PTR [rax],al
   140032186:	add    BYTE PTR [rax],al
   140032188:	(bad)  
   140032189:	push   rbx
   14003218a:	add    al,0x0
   14003218c:	add    BYTE PTR [rax],al
   14003218e:	add    BYTE PTR [rax],al
   140032190:	fcom   QWORD PTR [rbx+0x4]
   140032193:	add    BYTE PTR [rax],al
   140032195:	add    BYTE PTR [rax],al
   140032197:	add    al,dl
   140032199:	push   rbx
   14003219a:	add    al,0x0
   14003219c:	add    BYTE PTR [rax],al
   14003219e:	add    BYTE PTR [rax],al
   1400321a0:	(bad)  
   1400321a1:	push   rbx
   1400321a2:	add    al,0x0
   1400321a4:	add    BYTE PTR [rax],al
   1400321a6:	add    BYTE PTR [rax],al
   1400321a8:	mov    al,0x53
   1400321aa:	add    al,0x0
   1400321ac:	add    BYTE PTR [rax],al
   1400321ae:	add    BYTE PTR [rax],al
   1400321b0:	cs pop rcx
   1400321b2:	add    al,0x0
   1400321b4:	add    BYTE PTR [rax],al
   1400321b6:	add    BYTE PTR [rax],al
   1400321b8:	xchg   esi,eax
   1400321b9:	push   rbx
   1400321ba:	add    al,0x0
   1400321bc:	add    BYTE PTR [rax],al
   1400321be:	add    BYTE PTR [rax],al
   1400321c0:	adc    BYTE PTR [rbx+0x4],0x0
   1400321c4:	add    BYTE PTR [rax],al
   1400321c6:	add    BYTE PTR [rax],al
   1400321c8:	outs   dx,BYTE PTR ds:[rsi]
   1400321c9:	push   rbx
   1400321ca:	add    al,0x0
   1400321cc:	add    BYTE PTR [rax],al
   1400321ce:	add    BYTE PTR [rax],al
   1400321d0:	pop    rsp
   1400321d1:	push   rbx
   1400321d2:	add    al,0x0
   1400321d4:	add    BYTE PTR [rax],al
   1400321d6:	add    BYTE PTR [rax],al
   1400321d8:	rex.WRX push rbx
   1400321da:	add    al,0x0
   1400321dc:	add    BYTE PTR [rax],al
   1400321de:	add    BYTE PTR [rax],al
   1400321e0:	rex.R push rbx
   1400321e2:	add    al,0x0
   1400321e4:	add    BYTE PTR [rax],al
   1400321e6:	add    BYTE PTR [rax],al
   1400321e8:	ss push rbx
   1400321ea:	add    al,0x0
   1400321ec:	add    BYTE PTR [rax],al
   1400321ee:	add    BYTE PTR [rax],al
   1400321f0:	sub    BYTE PTR [rbx+0x4],dl
   1400321f3:	add    BYTE PTR [rax],al
   1400321f5:	add    BYTE PTR [rax],al
   1400321f7:	add    BYTE PTR [rbx+rdx*2],bl
   1400321fa:	add    al,0x0
   1400321fc:	add    BYTE PTR [rax],al
   1400321fe:	add    BYTE PTR [rax],al
   140032200:	hlt    
   140032201:	push   rdx
   140032202:	add    al,0x0
   140032204:	add    BYTE PTR [rax],al
   140032206:	add    BYTE PTR [rax],al
   140032208:	in     al,0x52
   14003220a:	add    al,0x0
	...
   140032218:	es push rdx
   14003221a:	add    al,0x0
   14003221c:	add    BYTE PTR [rax],al
   14003221e:	add    BYTE PTR [rax],al
   140032220:	xor    al,0x52
   140032222:	add    al,0x0
   140032224:	add    BYTE PTR [rax],al
   140032226:	add    BYTE PTR [rax],al
   140032228:	rex push rdx
   14003222a:	add    al,0x0
   14003222c:	add    BYTE PTR [rax],al
   14003222e:	add    BYTE PTR [rax],al
   140032230:	ins    BYTE PTR es:[rdi],dx
   140032231:	rex.WB add al,0x0
   140032234:	add    BYTE PTR [rax],al
   140032236:	add    BYTE PTR [rax],al
   140032238:	jle    0x140032283
   14003223a:	add    al,0x0
   14003223c:	add    BYTE PTR [rax],al
   14003223e:	add    BYTE PTR [rax],al
   140032240:	mov    WORD PTR [rcx+0x4],cs
   140032243:	add    BYTE PTR [rax],al
   140032245:	add    BYTE PTR [rax],al
   140032247:	add    BYTE PTR [rdx+0x449],ch
   14003224d:	add    BYTE PTR [rax],al
   14003224f:	add    BYTE PTR [rsi+0x449],bh
   140032255:	add    BYTE PTR [rax],al
   140032257:	add    dh,bl
   140032259:	rex.WB add al,0x0
   14003225c:	add    BYTE PTR [rax],al
   14003225e:	add    BYTE PTR [rax],al
   140032260:	sbb    BYTE PTR [rdx+0x4],dl
   140032263:	add    BYTE PTR [rax],al
   140032265:	add    BYTE PTR [rax],al
   140032267:	add    BYTE PTR [rdx],al
   140032269:	push   rdx
   14003226a:	add    al,0x0
   14003226c:	add    BYTE PTR [rax],al
   14003226e:	add    BYTE PTR [rax],al
   140032270:	repnz push rcx
   140032272:	add    al,0x0
   140032274:	add    BYTE PTR [rax],al
   140032276:	add    BYTE PTR [rax],al
   140032278:	ficom  WORD PTR [rcx+0x4]
   14003227b:	add    BYTE PTR [rax],al
   14003227d:	add    BYTE PTR [rax],al
   14003227f:	add    ah,dl
   140032281:	push   rcx
   140032282:	add    al,0x0
   140032284:	add    BYTE PTR [rax],al
   140032286:	add    BYTE PTR [rax],al
   140032288:	enter  0x451,0x0
   14003228c:	add    BYTE PTR [rax],al
   14003228e:	add    BYTE PTR [rax],al
   140032290:	mov    esp,0x451
   140032295:	add    BYTE PTR [rax],al
   140032297:	add    BYTE PTR [rdx+0x451],dh
   14003229d:	add    BYTE PTR [rax],al
   14003229f:	add    BYTE PTR [rsi+0x451],ah
   1400322a5:	add    BYTE PTR [rax],al
   1400322a7:	add    BYTE PTR [rcx+rdx*2+0x4],dl
   1400322ae:	add    BYTE PTR [rax],al
   1400322b0:	test   BYTE PTR [rcx+0x4],dl
   1400322b3:	add    BYTE PTR [rax],al
   1400322b5:	add    BYTE PTR [rax],al
   1400322b7:	add    BYTE PTR [rcx+rdx*2+0x4],dh
   1400322bb:	add    BYTE PTR [rax],al
   1400322bd:	add    BYTE PTR [rax],al
   1400322bf:	add    BYTE PTR [rsi+0x51],bl
   1400322c2:	add    al,0x0
   1400322c4:	add    BYTE PTR [rax],al
   1400322c6:	add    BYTE PTR [rax],al
   1400322c8:	cmp    dl,BYTE PTR [rcx+0x4]
   1400322cb:	add    BYTE PTR [rax],al
   1400322cd:	add    BYTE PTR [rax],al
   1400322cf:	add    BYTE PTR [rax],bl
   1400322d1:	push   rcx
   1400322d2:	add    al,0x0
   1400322d4:	add    BYTE PTR [rax],al
   1400322d6:	add    BYTE PTR [rax],al
   1400322d8:	clc    
   1400322d9:	push   rax
   1400322da:	add    al,0x0
   1400322dc:	add    BYTE PTR [rax],al
   1400322de:	add    BYTE PTR [rax],al
   1400322e0:	(bad)  
   1400322e1:	push   rax
   1400322e2:	add    al,0x0
   1400322e4:	add    BYTE PTR [rax],al
   1400322e6:	add    BYTE PTR [rax],al
   1400322e8:	lods   al,BYTE PTR ds:[rsi]
   1400322e9:	push   rax
   1400322ea:	add    al,0x0
   1400322ec:	add    BYTE PTR [rax],al
   1400322ee:	add    BYTE PTR [rax],al
   1400322f0:	test   BYTE PTR [rax+0x4],dl
   1400322f3:	add    BYTE PTR [rax],al
   1400322f5:	add    BYTE PTR [rax],al
   1400322f7:	add    BYTE PTR [rax+0x50],ah
   1400322fa:	add    al,0x0
   1400322fc:	add    BYTE PTR [rax],al
   1400322fe:	add    BYTE PTR [rax],al
   140032300:	rex.R push rax
   140032302:	add    al,0x0
   140032304:	add    BYTE PTR [rax],al
   140032306:	add    BYTE PTR [rax],al
   140032308:	sub    al,0x50
   14003230a:	add    al,0x0
   14003230c:	add    BYTE PTR [rax],al
   14003230e:	add    BYTE PTR [rax],al
   140032310:	or     al,0x50
   140032312:	add    al,0x0
   140032314:	add    BYTE PTR [rax],al
   140032316:	add    BYTE PTR [rax],al
   140032318:	test   BYTE PTR [rdi+0x4],0x0
   14003231c:	add    BYTE PTR [rax],al
   14003231e:	add    BYTE PTR [rax],al
   140032320:	loop   0x140032371
   140032322:	add    al,0x0
   140032324:	add    BYTE PTR [rax],al
   140032326:	add    BYTE PTR [rax],al
   140032328:	int3   
   140032329:	rex.WRXB add al,0x0
   14003232c:	add    BYTE PTR [rax],al
   14003232e:	add    BYTE PTR [rax],al
   140032330:	stos   BYTE PTR es:[rdi],al
   140032331:	rex.WRXB add al,0x0
   140032334:	add    BYTE PTR [rax],al
   140032336:	add    BYTE PTR [rax],al
   140032338:	xchg   esi,eax
   140032339:	rex.WRXB add al,0x0
   14003233c:	add    BYTE PTR [rax],al
   14003233e:	add    BYTE PTR [rax],al
   140032340:	or     BYTE PTR [rdi+0x4],0x0
   140032344:	add    BYTE PTR [rax],al
   140032346:	add    BYTE PTR [rax],al
   140032348:	outs   dx,BYTE PTR ds:[rsi]
   140032349:	rex.WRXB add al,0x0
   14003234c:	add    BYTE PTR [rax],al
   14003234e:	add    BYTE PTR [rax],al
   140032350:	rex.WR
   140032351:	rex.WRXB add al,0x0
   140032354:	add    BYTE PTR [rax],al
   140032356:	add    BYTE PTR [rax],al
   140032358:	ds rex.WRXB add al,0x0
   14003235c:	add    BYTE PTR [rax],al
   14003235e:	add    BYTE PTR [rax],al
   140032360:	and    al,0x4f
   140032362:	add    al,0x0
   140032364:	add    BYTE PTR [rax],al
   140032366:	add    BYTE PTR [rax],al
   140032368:	(bad)  
   140032369:	rex.WRXB add al,0x0
   14003236c:	add    BYTE PTR [rax],al
   14003236e:	add    BYTE PTR [rax],al
   140032370:	cli    
   140032371:	rex.WRX add al,0x0
   140032374:	add    BYTE PTR [rax],al
   140032376:	add    BYTE PTR [rax],al
   140032378:	call   0x1400327cb
   14003237d:	add    BYTE PTR [rax],al
   14003237f:	add    dh,dl
   140032381:	rex.WRX add al,0x0
   140032384:	add    BYTE PTR [rax],al
   140032386:	add    BYTE PTR [rax],al
   140032388:	enter  0x44e,0x0
   14003238c:	add    BYTE PTR [rax],al
   14003238e:	add    BYTE PTR [rax],al
   140032390:	mov    edx,0x44e
   140032395:	add    BYTE PTR [rax],al
   140032397:	add    BYTE PTR [rdx+0x44e],bl
   14003239d:	add    BYTE PTR [rax],al
   14003239f:	add    BYTE PTR [rdx+0x4e],ah
   1400323a2:	add    al,0x0
   1400323a4:	add    BYTE PTR [rax],al
   1400323a6:	add    BYTE PTR [rax],al
   1400323a8:	ds rex.WRX add al,0x0
   1400323ac:	add    BYTE PTR [rax],al
   1400323ae:	add    BYTE PTR [rax],al
   1400323b0:	xor    al,0x4e
   1400323b2:	add    al,0x0
   1400323b4:	add    BYTE PTR [rax],al
   1400323b6:	add    BYTE PTR [rax],al
   1400323b8:	cs rex.WRX add al,0x0
   1400323bc:	add    BYTE PTR [rax],al
   1400323be:	add    BYTE PTR [rax],al
   1400323c0:	sbb    BYTE PTR [rsi+0x4],cl
   1400323c3:	add    BYTE PTR [rax],al
   1400323c5:	add    BYTE PTR [rax],al
   1400323c7:	add    ah,bh
   1400323c9:	rex.WRB add al,0x0
   1400323cc:	add    BYTE PTR [rax],al
   1400323ce:	add    BYTE PTR [rax],al
   1400323d0:	out    dx,al
   1400323d1:	rex.WRB add al,0x0
   1400323d4:	add    BYTE PTR [rax],al
   1400323d6:	add    BYTE PTR [rax],al
   1400323d8:	jbe    0x14003242f
   1400323da:	add    al,0x0
   1400323dc:	add    BYTE PTR [rax],al
   1400323de:	add    BYTE PTR [rax],al
   1400323e0:	mov    BYTE PTR [rbp+0x4],dl
   1400323e3:	add    BYTE PTR [rax],al
   1400323e5:	add    BYTE PTR [rax],al
   1400323e7:	add    BYTE PTR [rdx+0x455],ah
   1400323ed:	add    BYTE PTR [rax],al
   1400323ef:	add    BYTE PTR [rax+0x455],bh
   1400323f5:	add    BYTE PTR [rax],al
   1400323f7:	add    dl,al
   1400323f9:	push   rbp
   1400323fa:	add    al,0x0
   1400323fc:	add    BYTE PTR [rax],al
   1400323fe:	add    BYTE PTR [rax],al
   140032400:	(bad)  
   140032401:	push   rbp
   140032402:	add    al,0x0
   140032404:	add    BYTE PTR [rax],al
   140032406:	add    BYTE PTR [rax],al
   140032408:	loop   0x14003245f
   14003240a:	add    al,0x0
   14003240c:	add    BYTE PTR [rax],al
   14003240e:	add    BYTE PTR [rax],al
   140032410:	lock push rbp
   140032412:	add    al,0x0
   140032414:	add    BYTE PTR [rax],al
   140032416:	add    BYTE PTR [rax],al
   140032418:	(bad)  
   140032419:	push   rbp
   14003241a:	add    al,0x0
   14003241c:	add    BYTE PTR [rax],al
   14003241e:	add    BYTE PTR [rax],al
   140032420:	(bad)  
   140032421:	push   rsi
   140032422:	add    al,0x0
   140032424:	add    BYTE PTR [rax],al
   140032426:	add    BYTE PTR [rax],al
   140032428:	and    al,0x56
   14003242a:	add    al,0x0
   14003242c:	add    BYTE PTR [rax],al
   14003242e:	add    BYTE PTR [rax],al
   140032430:	xor    al,0x56
   140032432:	add    al,0x0
   140032434:	add    BYTE PTR [rax],al
   140032436:	add    BYTE PTR [rax],al
   140032438:	rex.WX push rsi
   14003243a:	add    al,0x0
   14003243c:	add    BYTE PTR [rax],al
   14003243e:	add    BYTE PTR [rax],al
   140032440:	pop    rsp
   140032441:	push   rsi
   140032442:	add    al,0x0
   140032444:	add    BYTE PTR [rax],al
   140032446:	add    BYTE PTR [rax],al
   140032448:	outs   dx,BYTE PTR ds:[rsi]
   140032449:	push   rsi
   14003244a:	add    al,0x0
   14003244c:	add    BYTE PTR [rax],al
   14003244e:	add    BYTE PTR [rax],al
   140032450:	(bad)  
   140032451:	push   rsi
   140032452:	add    al,0x0
   140032454:	add    BYTE PTR [rax],al
   140032456:	add    BYTE PTR [rax],al
   140032458:	xchg   esp,eax
   140032459:	push   rsi
   14003245a:	add    al,0x0
   14003245c:	add    BYTE PTR [rax],al
   14003245e:	add    BYTE PTR [rax],al
   140032460:	stos   BYTE PTR es:[rdi],al
   140032461:	push   rsi
   140032462:	add    al,0x0
   140032464:	add    BYTE PTR [rax],al
   140032466:	add    BYTE PTR [rax],al
   140032468:	mov    esi,0x456
   14003246d:	add    BYTE PTR [rax],al
   14003246f:	add    ah,al
   140032471:	rex.WRB add al,0x0
   140032474:	add    BYTE PTR [rax],al
   140032476:	add    BYTE PTR [rax],al
   140032478:	lods   al,BYTE PTR ds:[rsi]
   140032479:	rex.WRB add al,0x0
   14003247c:	add    BYTE PTR [rax],al
   14003247e:	add    BYTE PTR [rax],al
   140032480:	mov    cs,WORD PTR [rbp+0x4]
   140032483:	add    BYTE PTR [rax],al
   140032485:	add    BYTE PTR [rax],al
   140032487:	add    BYTE PTR [rbp+rcx*2+0x4],ah
   14003248b:	add    BYTE PTR [rax],al
   14003248d:	add    BYTE PTR [rax],al
   14003248f:	add    BYTE PTR [rcx*2+0x4],dh
   140032496:	add    BYTE PTR [rax],al
   140032498:	(bad)  
   140032499:	rex.WR add al,0x0
   14003249c:	add    BYTE PTR [rax],al
   14003249e:	add    BYTE PTR [rax],al
   1400324a0:	ror    BYTE PTR [rsp+rax*1+0x0],0x0
   1400324a5:	add    BYTE PTR [rax],al
   1400324a7:	add    BYTE PTR [rsi+0x44c],bl
   1400324ad:	add    BYTE PTR [rax],al
   1400324af:	add    BYTE PTR [rsi+0x4c],dh
   1400324b2:	add    al,0x0
   1400324b4:	add    BYTE PTR [rax],al
   1400324b6:	add    BYTE PTR [rax],al
   1400324b8:	push   0x44c
   1400324bd:	add    BYTE PTR [rax],al
   1400324bf:	add    BYTE PTR [rsp+rcx*2+0x4],cl
   1400324c3:	add    BYTE PTR [rax],al
   1400324c5:	add    BYTE PTR [rax],al
   1400324c7:	add    BYTE PTR [rsi],dh
   1400324c9:	rex.WR add al,0x0
   1400324cc:	add    BYTE PTR [rax],al
   1400324ce:	add    BYTE PTR [rax],al
   1400324d0:	es rex.WR add al,0x0
   1400324d4:	add    BYTE PTR [rax],al
   1400324d6:	add    BYTE PTR [rax],al
   1400324d8:	adc    cl,BYTE PTR [rsp+rax*1+0x0]
   1400324dc:	add    BYTE PTR [rax],al
   1400324de:	add    BYTE PTR [rax],al
   1400324e0:	dec    BYTE PTR [rbx+0x4]
   1400324e3:	add    BYTE PTR [rax],al
   1400324e5:	add    BYTE PTR [rax],al
   1400324e7:	add    al,ch
   1400324e9:	rex.WXB add al,0x0
   1400324ec:	add    BYTE PTR [rax],al
   1400324ee:	add    BYTE PTR [rax],al
   1400324f0:	(bad)  
   1400324f1:	rex.WXB add al,0x0
   1400324f4:	add    BYTE PTR [rax],al
   1400324f6:	add    BYTE PTR [rax],al
   1400324f8:	mov    eax,0x44b
   1400324fd:	add    BYTE PTR [rax],al
   1400324ff:	add    BYTE PTR [rdx+0x44b],ah
   140032505:	add    BYTE PTR [rax],al
   140032507:	add    BYTE PTR [rdx+0x44b],cl
   14003250d:	add    BYTE PTR [rax],al
   14003250f:	add    BYTE PTR [rax+0x4b],bh
   140032512:	add    al,0x0
   140032514:	add    BYTE PTR [rax],al
   140032516:	add    BYTE PTR [rax],al
   140032518:	data16 rex.WXB add al,0x0
   14003251c:	add    BYTE PTR [rax],al
   14003251e:	add    BYTE PTR [rax],al
   140032520:	push   rdx
   140032521:	rex.WXB add al,0x0
   140032524:	add    BYTE PTR [rax],al
   140032526:	add    BYTE PTR [rax],al
   140032528:	cmp    cl,BYTE PTR [rbx+0x4]
   14003252b:	add    BYTE PTR [rax],al
   14003252d:	add    BYTE PTR [rax],al
   14003252f:	add    BYTE PTR [rbx+rcx*2],ch
   140032532:	add    al,0x0
   140032534:	add    BYTE PTR [rax],al
   140032536:	add    BYTE PTR [rax],al
   140032538:	and    BYTE PTR [rbx+0x4],cl
   14003253b:	add    BYTE PTR [rax],al
   14003253d:	add    BYTE PTR [rax],al
   14003253f:	add    BYTE PTR [rsi],cl
   140032541:	rex.WXB add al,0x0
   140032544:	add    BYTE PTR [rax],al
   140032546:	add    BYTE PTR [rax],al
   140032548:	add    BYTE PTR [rbx+0x4],cl
   14003254b:	add    BYTE PTR [rax],al
   14003254d:	add    BYTE PTR [rax],al
   14003254f:	add    dl,dh
   140032551:	rex.WX add al,0x0
   140032554:	add    BYTE PTR [rax],al
   140032556:	add    BYTE PTR [rax],al
   140032558:	in     al,0x4a
   14003255a:	add    al,0x0
   14003255c:	add    BYTE PTR [rax],al
   14003255e:	add    BYTE PTR [rax],al
   140032560:	ror    BYTE PTR [rdx+0x4],cl
   140032563:	add    BYTE PTR [rax],al
   140032565:	add    BYTE PTR [rax],al
   140032567:	add    BYTE PTR [rax+0x44a],dh
   14003256d:	add    BYTE PTR [rax],al
   14003256f:	add    BYTE PTR [rdx+0x44a],ah
   140032575:	add    BYTE PTR [rax],al
   140032577:	add    BYTE PTR [rax+0x44a],cl
   14003257d:	add    BYTE PTR [rax],al
   14003257f:	add    BYTE PTR [rdx+rcx*2+0x4],ch
   140032583:	add    BYTE PTR [rax],al
   140032585:	add    BYTE PTR [rax],al
   140032587:	add    BYTE PTR [rax+0x4a],al
   14003258a:	add    al,0x0
   14003258c:	add    BYTE PTR [rax],al
   14003258e:	add    BYTE PTR [rax],al
   140032590:	sub    al,0x4a
   140032592:	add    al,0x0
   140032594:	add    BYTE PTR [rax],al
   140032596:	add    BYTE PTR [rax],al
   140032598:	adc    cl,BYTE PTR [rdx+0x4]
   14003259b:	add    BYTE PTR [rax],al
   14003259d:	add    BYTE PTR [rax],al
   14003259f:	add    dh,bh
   1400325a1:	rex.WB add al,0x0
   1400325a4:	add    BYTE PTR [rax],al
   1400325a6:	add    BYTE PTR [rax],al
   1400325a8:	in     al,dx
   1400325a9:	rex.WB add al,0x0
   1400325ac:	add    BYTE PTR [rax],al
   1400325ae:	add    BYTE PTR [rax],al
   1400325b0:	push   rax
   1400325b1:	rex.WB add al,0x0
	...
   1400325c0:	ret    0x452
   1400325c3:	add    BYTE PTR [rax],al
   1400325c5:	add    BYTE PTR [rax],al
   1400325c7:	add    BYTE PTR [rax+0x452],ch
   1400325cd:	add    BYTE PTR [rax],al
   1400325cf:	add    BYTE PTR [rsi+0x52],bl
   1400325d2:	add    al,0x0
	...
   1400325e0:	mov    al,0xe1
   1400325e2:	add    DWORD PTR [rax+0x1],eax
   1400325e5:	add    BYTE PTR [rax],al
   1400325e7:	add    BYTE PTR [rax],dl
   1400325e9:	or     eax,0x14003
	...
   1400325f6:	add    BYTE PTR [rax],al
   1400325f8:	mov    ah,0x67
   1400325fa:	add    al,BYTE PTR [rax+0x1]
   1400325fd:	add    BYTE PTR [rax],al
   1400325ff:	add    BYTE PTR [rax+0x10],al
   140032602:	add    BYTE PTR [rax+0x1],al
   140032605:	add    BYTE PTR [rax],al
   140032607:	add    BYTE PTR [rax],al
   140032609:	adc    BYTE PTR [rax],al
   14003260b:	rex add DWORD PTR [rax],eax
   14003260e:	add    BYTE PTR [rax],al
   140032610:	adc    BYTE PTR [rax],0x0
   140032613:	rex add DWORD PTR [rax],eax
   140032616:	add    BYTE PTR [rax],al
   140032618:	rcl    BYTE PTR [rax],0x0
   14003261b:	rex add DWORD PTR [rax],eax
   14003261e:	add    BYTE PTR [rax],al
   140032620:	add    BYTE PTR [rcx],dl
   140032622:	add    BYTE PTR [rax+0x1],al
   140032625:	add    BYTE PTR [rax],al
   140032627:	add    BYTE PTR [rax+0x11],al
   14003262a:	add    BYTE PTR [rax+0x1],al
   14003262d:	add    BYTE PTR [rax],al
   14003262f:	add    BYTE PTR [rax+0x11],dl
   140032632:	add    BYTE PTR [rax+0x1],al
   140032635:	add    BYTE PTR [rax],al
   140032637:	add    BYTE PTR [rax+0x11],ah
   14003263a:	add    BYTE PTR [rax+0x1],al
   14003263d:	add    BYTE PTR [rax],al
   14003263f:	add    BYTE PTR [rax],dl
   140032641:	adc    al,0x0
   140032643:	rex add DWORD PTR [rax],eax
   140032646:	add    BYTE PTR [rax],al
   140032648:	jo     0x14003265b
   14003264a:	add    BYTE PTR [rax+0x1],al
   14003264d:	add    BYTE PTR [rax],al
   14003264f:	add    al,dl
   140032651:	adc    DWORD PTR [rax],eax
   140032653:	rex add DWORD PTR [rax],eax
   140032656:	add    BYTE PTR [rax],al
   140032658:	add    BYTE PTR [rdx],dl
   14003265a:	add    BYTE PTR [rax+0x1],al
   14003265d:	add    BYTE PTR [rax],al
   14003265f:	add    BYTE PTR [rax],dh
   140032661:	adc    al,BYTE PTR [rax]
   140032663:	rex add DWORD PTR [rax],eax
   140032666:	add    BYTE PTR [rax],al
   140032668:	(bad)  
   140032669:	adc    al,BYTE PTR [rax]
   14003266b:	rex add DWORD PTR [rax],eax
   14003266e:	add    BYTE PTR [rax],al
   140032670:	nop
   140032671:	adc    al,BYTE PTR [rax]
   140032673:	rex add DWORD PTR [rax],eax
   140032676:	add    BYTE PTR [rax],al
   140032678:	rcl    BYTE PTR [rdx],0x0
   14003267b:	rex add DWORD PTR [rax],eax
   14003267e:	add    BYTE PTR [rax],al
   140032680:	lock adc al,BYTE PTR [rax]
   140032683:	rex add DWORD PTR [rax],eax
   140032686:	add    BYTE PTR [rax],al
   140032688:	and    BYTE PTR [rbx],dl
   14003268a:	add    BYTE PTR [rax+0x1],al
   14003268d:	add    BYTE PTR [rax],al
   14003268f:	add    BYTE PTR [rax+0x13],dl
   140032692:	add    BYTE PTR [rax+0x1],al
   140032695:	add    BYTE PTR [rax],al
   140032697:	add    BYTE PTR [rax+0x1400011],ah
   14003269d:	add    BYTE PTR [rax],al
   14003269f:	add    BYTE PTR [rax+0x1400013],al
   1400326a5:	add    BYTE PTR [rax],al
   1400326a7:	add    BYTE PTR [rax+0x1400013],dh
   1400326ad:	add    BYTE PTR [rax],al
   1400326af:	add    al,ah
   1400326b1:	adc    eax,DWORD PTR [rax]
   1400326b3:	rex add DWORD PTR [rax],eax
   1400326b6:	add    BYTE PTR [rax],al
   1400326b8:	and    BYTE PTR [rax+rax*1],dl
   1400326bb:	rex add DWORD PTR [rax],eax
   1400326be:	add    BYTE PTR [rax],al
   1400326c0:	xor    BYTE PTR [rax+rax*1],dl
   1400326c3:	rex add DWORD PTR [rax],eax
   1400326c6:	add    BYTE PTR [rax],al
   1400326c8:	push   rax
   1400326c9:	adc    al,0x0
   1400326cb:	rex add DWORD PTR [rax],eax
   1400326ce:	add    BYTE PTR [rax],al
   1400326d0:	(bad)  
   1400326d1:	adc    al,0x0
   1400326d3:	rex add DWORD PTR [rax],eax
   1400326d6:	add    BYTE PTR [rax],al
   1400326d8:	adc    BYTE PTR [rax+rax*1],0x40
   1400326dc:	add    DWORD PTR [rax],eax
   1400326de:	add    BYTE PTR [rax],al
   1400326e0:	movabs al,ds:0xc000000001400014
   1400326e9:	adc    al,0x0
   1400326eb:	rex add DWORD PTR [rax],eax
   1400326ee:	add    BYTE PTR [rax],al
   1400326f0:	add    BYTE PTR [rip+0x14000],dl        # 0x1400466f6
   1400326f6:	add    BYTE PTR [rax],al
   1400326f8:	rex adc eax,0x14000
	...
   14003270e:	add    BYTE PTR [rax],al
   140032710:	call   0x14143297b
   140032715:	add    BYTE PTR [rax],al
   140032717:	add    BYTE PTR [rdi+riz*2+0x14002],ah
   14003271e:	add    BYTE PTR [rax],al
   140032720:	movabs al,ds:0x1800000001400285
   140032729:	repnz add al,BYTE PTR [rax+0x1]
   14003272d:	add    BYTE PTR [rax],al
   14003272f:	add    BYTE PTR [rax+0x3],dh
   140032732:	add    eax,DWORD PTR [rax+0x1]
	...
   140032745:	add    BYTE PTR [rax],al
   140032747:	add    BYTE PTR [rax+0x140029c],ch
   14003274d:	add    BYTE PTR [rax],al
   14003274f:	add    BYTE PTR [rbp+rsi*8+0x14002],bl
   140032756:	add    BYTE PTR [rax],al
   140032758:	rol    BYTE PTR [rsi+0x14002],0x0
	...
   14003277f:	add    BYTE PTR [rbx+0x56],cl
   140032782:	xor    edx,DWORD PTR [rdi+rsi*2+0x65]
   140032786:	(bad)  
   140032787:	imul   eax,DWORD PTR [rax],0x0
	...
   1400327a2:	add    BYTE PTR [rax],al
   1400327a4:	rex.RB jb 0x140032819
   1400327a7:	outs   dx,DWORD PTR ds:[rsi]
   1400327a8:	jb     0x1400327aa
   1400327aa:	add    BYTE PTR [rax],al
   1400327ac:	gs jb  0x140032821
   1400327af:	outs   dx,DWORD PTR ds:[rsi]
   1400327b0:	jb     0x1400327b2
   1400327b2:	add    BYTE PTR [rax],al
   1400327b4:	and    eax,0x646c6c
   1400327b9:	add    BYTE PTR [rax],al
   1400327bb:	add    BYTE PTR [rip+0x756c6c],ah        # 0x14078942d
   1400327c1:	add    BYTE PTR [rax],al
   1400327c3:	add    BYTE PTR [rax],al
   1400327c5:	add    BYTE PTR [rax],al
   1400327c7:	add    BYTE PTR [rax],ch
   1400327c9:	repnz add eax,DWORD PTR [rax+0x1]
   1400327cd:	add    BYTE PTR [rax],al
   1400327cf:	add    al,ch
   1400327d1:	outs   dx,BYTE PTR ds:[rsi]
   1400327d2:	add    al,BYTE PTR [rax+0x1]
   1400327d5:	add    BYTE PTR [rax],al
   1400327d7:	add    al,ch
   1400327d9:	outs   dx,BYTE PTR ds:[rsi]
   1400327da:	add    al,BYTE PTR [rax+0x1]
   1400327dd:	add    BYTE PTR [rax],al
   1400327df:	add    al,ch
   1400327e1:	outs   dx,BYTE PTR ds:[rsi]
   1400327e2:	add    al,BYTE PTR [rax+0x1]
   1400327e5:	add    BYTE PTR [rax],al
   1400327e7:	add    al,ch
   1400327e9:	outs   dx,BYTE PTR ds:[rsi]
   1400327ea:	add    al,BYTE PTR [rax+0x1]
   1400327ed:	add    BYTE PTR [rax],al
   1400327ef:	add    al,ch
   1400327f1:	outs   dx,BYTE PTR ds:[rsi]
   1400327f2:	add    al,BYTE PTR [rax+0x1]
   1400327f5:	add    BYTE PTR [rax],al
   1400327f7:	add    al,ch
   1400327f9:	outs   dx,BYTE PTR ds:[rsi]
   1400327fa:	add    al,BYTE PTR [rax+0x1]
   1400327fd:	add    BYTE PTR [rax],al
   1400327ff:	add    al,ch
   140032801:	outs   dx,BYTE PTR ds:[rsi]
   140032802:	add    al,BYTE PTR [rax+0x1]
   140032805:	add    BYTE PTR [rax],al
   140032807:	add    al,ch
   140032809:	outs   dx,BYTE PTR ds:[rsi]
   14003280a:	add    al,BYTE PTR [rax+0x1]
   14003280d:	add    BYTE PTR [rax],al
   14003280f:	add    al,ch
   140032811:	outs   dx,BYTE PTR ds:[rsi]
   140032812:	add    al,BYTE PTR [rax+0x1]
   140032815:	add    BYTE PTR [rax],al
   140032817:	add    al,ch
   140032819:	outs   dx,BYTE PTR ds:[rsi]
   14003281a:	add    al,BYTE PTR [rax+0x1]
   14003281d:	add    BYTE PTR [rax],al
   14003281f:	add    al,ch
   140032821:	outs   dx,BYTE PTR ds:[rsi]
   140032822:	add    al,BYTE PTR [rax+0x1]
   140032825:	add    BYTE PTR [rax],al
   140032827:	add    BYTE PTR [rax],al
   140032829:	sbb    al,0x0
   14003282b:	rex add DWORD PTR [rax],eax
   14003282e:	add    BYTE PTR [rax],al
   140032830:	call   0x141432aa3
   140032835:	add    BYTE PTR [rax],al
   140032837:	add    al,ch
   140032839:	outs   dx,BYTE PTR ds:[rsi]
   14003283a:	add    al,BYTE PTR [rax+0x1]
   14003283d:	add    BYTE PTR [rax],al
   14003283f:	add    al,ch
   140032841:	outs   dx,BYTE PTR ds:[rsi]
   140032842:	add    al,BYTE PTR [rax+0x1]
   140032845:	add    BYTE PTR [rax],al
   140032847:	add    al,ch
   140032849:	outs   dx,BYTE PTR ds:[rsi]
   14003284a:	add    al,BYTE PTR [rax+0x1]
   14003284d:	add    BYTE PTR [rax],al
   14003284f:	add    al,ch
   140032851:	outs   dx,BYTE PTR ds:[rsi]
   140032852:	add    al,BYTE PTR [rax+0x1]
   140032855:	add    BYTE PTR [rax],al
   140032857:	add    al,ch
   140032859:	outs   dx,BYTE PTR ds:[rsi]
   14003285a:	add    al,BYTE PTR [rax+0x1]
   14003285d:	add    BYTE PTR [rax],al
   14003285f:	add    al,ch
   140032861:	outs   dx,BYTE PTR ds:[rsi]
   140032862:	add    al,BYTE PTR [rax+0x1]
   140032865:	add    BYTE PTR [rax],al
   140032867:	add    al,ch
   140032869:	outs   dx,BYTE PTR ds:[rsi]
   14003286a:	add    al,BYTE PTR [rax+0x1]
   14003286d:	add    BYTE PTR [rax],al
   14003286f:	add    al,ch
   140032871:	outs   dx,BYTE PTR ds:[rsi]
   140032872:	add    al,BYTE PTR [rax+0x1]
   140032875:	add    BYTE PTR [rax],al
   140032877:	add    al,ch
   140032879:	outs   dx,BYTE PTR ds:[rsi]
   14003287a:	add    al,BYTE PTR [rax+0x1]
   14003287d:	add    BYTE PTR [rax],al
   14003287f:	add    al,ch
   140032881:	outs   dx,BYTE PTR ds:[rsi]
   140032882:	add    al,BYTE PTR [rax+0x1]
   140032885:	add    BYTE PTR [rax],al
   140032887:	add    al,ch
   140032889:	outs   dx,BYTE PTR ds:[rsi]
   14003288a:	add    al,BYTE PTR [rax+0x1]
   14003288d:	add    BYTE PTR [rax],al
   14003288f:	add    al,ch
   140032891:	outs   dx,BYTE PTR ds:[rsi]
   140032892:	add    al,BYTE PTR [rax+0x1]
   140032895:	add    BYTE PTR [rax],al
   140032897:	add    al,ch
   140032899:	outs   dx,BYTE PTR ds:[rsi]
   14003289a:	add    al,BYTE PTR [rax+0x1]
   14003289d:	add    BYTE PTR [rax],al
   14003289f:	add    al,ch
   1400328a1:	outs   dx,BYTE PTR ds:[rsi]
   1400328a2:	add    al,BYTE PTR [rax+0x1]
   1400328a5:	add    BYTE PTR [rax],al
   1400328a7:	add    al,ch
   1400328a9:	outs   dx,BYTE PTR ds:[rsi]
   1400328aa:	add    al,BYTE PTR [rax+0x1]
   1400328ad:	add    BYTE PTR [rax],al
   1400328af:	add    al,ch
   1400328b1:	outs   dx,BYTE PTR ds:[rsi]
   1400328b2:	add    al,BYTE PTR [rax+0x1]
   1400328b5:	add    BYTE PTR [rax],al
   1400328b7:	add    al,ch
   1400328b9:	outs   dx,BYTE PTR ds:[rsi]
   1400328ba:	add    al,BYTE PTR [rax+0x1]
   1400328bd:	add    BYTE PTR [rax],al
   1400328bf:	add    al,ch
   1400328c1:	outs   dx,BYTE PTR ds:[rsi]
   1400328c2:	add    al,BYTE PTR [rax+0x1]
   1400328c5:	add    BYTE PTR [rax],al
   1400328c7:	add    al,ch
   1400328c9:	outs   dx,BYTE PTR ds:[rsi]
   1400328ca:	add    al,BYTE PTR [rax+0x1]
   1400328cd:	add    BYTE PTR [rax],al
   1400328cf:	add    al,ch
   1400328d1:	outs   dx,BYTE PTR ds:[rsi]
   1400328d2:	add    al,BYTE PTR [rax+0x1]
   1400328d5:	add    BYTE PTR [rax],al
   1400328d7:	add    al,ch
   1400328d9:	outs   dx,BYTE PTR ds:[rsi]
   1400328da:	add    al,BYTE PTR [rax+0x1]
   1400328dd:	add    BYTE PTR [rax],al
   1400328df:	add    al,ch
   1400328e1:	outs   dx,BYTE PTR ds:[rsi]
   1400328e2:	add    al,BYTE PTR [rax+0x1]
   1400328e5:	add    BYTE PTR [rax],al
   1400328e7:	add    al,ch
   1400328e9:	outs   dx,BYTE PTR ds:[rsi]
   1400328ea:	add    al,BYTE PTR [rax+0x1]
   1400328ed:	add    BYTE PTR [rax],al
   1400328ef:	add    al,ch
   1400328f1:	outs   dx,BYTE PTR ds:[rsi]
   1400328f2:	add    al,BYTE PTR [rax+0x1]
   1400328f5:	add    BYTE PTR [rax],al
   1400328f7:	add    al,ch
   1400328f9:	outs   dx,BYTE PTR ds:[rsi]
   1400328fa:	add    al,BYTE PTR [rax+0x1]
   1400328fd:	add    BYTE PTR [rax],al
   1400328ff:	add    al,ch
   140032901:	outs   dx,BYTE PTR ds:[rsi]
   140032902:	add    al,BYTE PTR [rax+0x1]
   140032905:	add    BYTE PTR [rax],al
   140032907:	add    al,ch
   140032909:	outs   dx,BYTE PTR ds:[rsi]
   14003290a:	add    al,BYTE PTR [rax+0x1]
   14003290d:	add    BYTE PTR [rax],al
   14003290f:	add    al,ch
   140032911:	outs   dx,BYTE PTR ds:[rsi]
   140032912:	add    al,BYTE PTR [rax+0x1]
   140032915:	add    BYTE PTR [rax],al
   140032917:	add    al,ch
   140032919:	outs   dx,BYTE PTR ds:[rsi]
   14003291a:	add    al,BYTE PTR [rax+0x1]
   14003291d:	add    BYTE PTR [rax],al
   14003291f:	add    al,ch
   140032921:	outs   dx,BYTE PTR ds:[rsi]
   140032922:	add    al,BYTE PTR [rax+0x1]
   140032925:	add    BYTE PTR [rax],al
   140032927:	add    al,ch
   140032929:	outs   dx,BYTE PTR ds:[rsi]
   14003292a:	add    al,BYTE PTR [rax+0x1]
   14003292d:	add    BYTE PTR [rax],al
   14003292f:	add    al,ch
   140032931:	outs   dx,BYTE PTR ds:[rsi]
   140032932:	add    al,BYTE PTR [rax+0x1]
   140032935:	add    BYTE PTR [rax],al
   140032937:	add    al,ch
   140032939:	outs   dx,BYTE PTR ds:[rsi]
   14003293a:	add    al,BYTE PTR [rax+0x1]
   14003293d:	add    BYTE PTR [rax],al
   14003293f:	add    al,ch
   140032941:	outs   dx,BYTE PTR ds:[rsi]
   140032942:	add    al,BYTE PTR [rax+0x1]
   140032945:	add    BYTE PTR [rax],al
   140032947:	add    al,ch
   140032949:	outs   dx,BYTE PTR ds:[rsi]
   14003294a:	add    al,BYTE PTR [rax+0x1]
   14003294d:	add    BYTE PTR [rax],al
   14003294f:	add    al,ch
   140032951:	outs   dx,BYTE PTR ds:[rsi]
   140032952:	add    al,BYTE PTR [rax+0x1]
   140032955:	add    BYTE PTR [rax],al
   140032957:	add    al,ch
   140032959:	outs   dx,BYTE PTR ds:[rsi]
   14003295a:	add    al,BYTE PTR [rax+0x1]
   14003295d:	add    BYTE PTR [rax],al
   14003295f:	add    al,ch
   140032961:	outs   dx,BYTE PTR ds:[rsi]
   140032962:	add    al,BYTE PTR [rax+0x1]
   140032965:	add    BYTE PTR [rax],al
   140032967:	add    al,ch
   140032969:	outs   dx,BYTE PTR ds:[rsi]
   14003296a:	add    al,BYTE PTR [rax+0x1]
   14003296d:	add    BYTE PTR [rax],al
   14003296f:	add    al,ch
   140032971:	outs   dx,BYTE PTR ds:[rsi]
   140032972:	add    al,BYTE PTR [rax+0x1]
   140032975:	add    BYTE PTR [rax],al
   140032977:	add    al,ch
   140032979:	outs   dx,BYTE PTR ds:[rsi]
   14003297a:	add    al,BYTE PTR [rax+0x1]
   14003297d:	add    BYTE PTR [rax],al
   14003297f:	add    al,ch
   140032981:	outs   dx,BYTE PTR ds:[rsi]
   140032982:	add    al,BYTE PTR [rax+0x1]
   140032985:	add    BYTE PTR [rax],al
   140032987:	add    BYTE PTR [rdi],ch
   140032989:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003298c:	je     0x1400329f3
   14003298e:	outs   dx,BYTE PTR ds:[rsi]
   14003298f:	je     0x1400329c0
   140032991:	add    BYTE PTR [rax],al
   140032993:	add    BYTE PTR [rdi],ch
   140032995:	addr32 (bad) 
   140032997:	ins    DWORD PTR es:[rdi],dx
   140032998:	gs (bad) 
   14003299a:	add    BYTE PTR [rax],al
   14003299c:	add    BYTE PTR [rax],al
   14003299e:	add    BYTE PTR [rax],al
   1400329a0:	rex.RX (bad) 
   1400329a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400329aa:	ins    DWORD PTR es:[rdi],dx
   1400329ab:	(bad)  
   1400329ac:	jo     0x1400329ce
   1400329ae:	data16 jb 0x140032a20
   1400329b1:	ins    DWORD PTR es:[rdi],dx
   1400329b2:	and    BYTE PTR [rip+0x6f742073],ah        # 0x1af774a2b
   1400329b8:	and    BYTE PTR [rdi+0x61],ah
   1400329bb:	ins    DWORD PTR es:[rdi],dx
   1400329bc:	gs sub eax,0x68746170
   1400329c2:	or     al,BYTE PTR [rax]
   1400329c4:	add    BYTE PTR [rax],al
   1400329c6:	add    BYTE PTR [rax],al
   1400329c8:	sub    eax,0x61747461
   1400329cd:	movsxd ebp,DWORD PTR [rax+0x74]
   1400329d0:	outs   dx,DWORD PTR ds:[rsi]
   1400329d1:	fs gs (bad) 
   1400329d4:	jne    0x140032a3d
   1400329d6:	addr32 gs jb 0x1400329da
   1400329da:	add    BYTE PTR [rax],al
   1400329dc:	add    BYTE PTR [rax],al
   1400329de:	add    BYTE PTR [rax],al
   1400329e0:	sub    eax,0x61657262
   1400329e5:	imul   ebp,DWORD PTR [rcx+0x6d],0x6d
   1400329e9:	gs imul esp,DWORD PTR fs:[rcx+0x74],0x796c65
   1400329f2:	add    BYTE PTR [rax],al
   1400329f4:	add    BYTE PTR [rax],al
   1400329f6:	add    BYTE PTR [rax],al
   1400329f8:	clc    
   1400329f9:	repnz add eax,DWORD PTR [rax+0x1]
   1400329fd:	add    BYTE PTR [rax],al
   1400329ff:	add    BYTE PTR [rax],dh
   140032a01:	sbb    eax,0x14000
   140032a06:	add    BYTE PTR [rax],al
   140032a08:	rcr    BYTE PTR [rip+0x14000],1        # 0x140046a0e
   140032a0e:	add    BYTE PTR [rax],al
   140032a10:	loopne 0x140032a5c
   140032a12:	add    BYTE PTR [rax+0x1],al
   140032a15:	add    BYTE PTR [rax],al
   140032a17:	add    al,ah
   140032a19:	xor    al,BYTE PTR [rax]
   140032a1b:	rex add DWORD PTR [rax],eax
   140032a1e:	add    BYTE PTR [rax],al
   140032a20:	rex
   140032a21:	data16 add BYTE PTR [rax+0x1],al
   140032a25:	add    BYTE PTR [rax],al
   140032a27:	add    BYTE PTR [rax+0x14001e1],dh
   140032a2d:	add    BYTE PTR [rax],al
   140032a2f:	add    BYTE PTR [rax+0x2d],dl
   140032a32:	add    BYTE PTR [rax+0x1],al
   140032a35:	add    BYTE PTR [rax],al
   140032a37:	add    BYTE PTR [rax],dh
   140032a39:	imul   eax,DWORD PTR [rdx],0x40
   140032a3c:	add    DWORD PTR [rax],eax
   140032a3e:	add    BYTE PTR [rax],al
   140032a40:	lock rex.WX add BYTE PTR [rax+0x1],al
   140032a45:	add    BYTE PTR [rax],al
   140032a47:	add    BYTE PTR [rax+0x1400299],dl
   140032a4d:	add    BYTE PTR [rax],al
   140032a4f:	add    al,dh
   140032a51:	sub    eax,DWORD PTR [rax]
   140032a53:	rex add DWORD PTR [rax],eax
   140032a56:	add    BYTE PTR [rax],al
   140032a58:	(bad)  
   140032a59:	sbb    eax,DWORD PTR [rax]
   140032a5b:	rex add DWORD PTR [rax],eax
   140032a5e:	add    BYTE PTR [rax],al
   140032a60:	xor    BYTE PTR [rax+rax*1],bl
   140032a63:	rex add DWORD PTR [rax],eax
   140032a66:	add    BYTE PTR [rax],al
   140032a68:	push   rax
   140032a69:	sbb    al,0x0
   140032a6b:	rex add DWORD PTR [rax],eax
   140032a6e:	add    BYTE PTR [rax],al
   140032a70:	sbb    al,0x0
   140032a73:	rex add DWORD PTR [rax],eax
   140032a76:	add    BYTE PTR [rax],al
   140032a78:	xor    BYTE PTR [rbp+0x0],cl
   140032a7b:	rex add DWORD PTR [rax],eax
   140032a7e:	add    BYTE PTR [rax],al
   140032a80:	nop
   140032a81:	sbb    al,0x0
   140032a83:	rex add DWORD PTR [rax],eax
   140032a86:	add    BYTE PTR [rax],al
   140032a88:	adc    BYTE PTR [rsi],bl
   140032a8a:	add    BYTE PTR [rax+0x1],al
   140032a8d:	add    BYTE PTR [rax],al
   140032a8f:	add    BYTE PTR [rax+0x140002e],ah
   140032a95:	add    BYTE PTR [rax],al
   140032a97:	add    BYTE PTR [rax],ah
   140032a99:	(bad)  
   140032a9a:	add    BYTE PTR [rax+0x1],al
   140032a9d:	add    BYTE PTR [rax],al
   140032a9f:	add    BYTE PTR [rax+0x3b],al
   140032aa2:	add    BYTE PTR [rax+0x1],al
   140032aa5:	add    BYTE PTR [rax],al
   140032aa7:	add    BYTE PTR [rax+0x140002f],al
   140032aad:	add    BYTE PTR [rax],al
   140032aaf:	add    BYTE PTR [rax+0x39],dl
   140032ab2:	add    BYTE PTR [rax+0x1],al
   140032ab5:	add    BYTE PTR [rax],al
   140032ab7:	add    BYTE PTR [rax],dh
   140032ab9:	cmp    eax,DWORD PTR [rax]
   140032abb:	rex add DWORD PTR [rax],eax
   140032abe:	add    BYTE PTR [rax],al
   140032ac0:	movabs al,ds:0x600000000140002d
   140032ac9:	(bad)  
   140032aca:	add    BYTE PTR [rax+0x1],al
   140032acd:	add    BYTE PTR [rax],al
   140032acf:	add    BYTE PTR [rax+0x1400021],al
   140032ad5:	add    BYTE PTR [rax],al
   140032ad7:	add    BYTE PTR [rax+0x21],dh
   140032ada:	add    BYTE PTR [rax+0x1],al
   140032add:	add    BYTE PTR [rax],al
   140032adf:	add    BYTE PTR [rax],dh
   140032ae1:	sub    eax,0x14000
   140032ae6:	add    BYTE PTR [rax],al
   140032ae8:	adc    BYTE PTR [rax+rax*1],ch
   140032aeb:	rex add DWORD PTR [rax],eax
   140032aee:	add    BYTE PTR [rax],al
   140032af0:	movabs al,ds:0x600000000140001c
   140032af9:	sbb    al,0x0
   140032afb:	rex add DWORD PTR [rax],eax
   140032afe:	add    BYTE PTR [rax],al
   140032b00:	mov    al,0x2e
   140032b02:	add    BYTE PTR [rax+0x1],al
   140032b05:	add    BYTE PTR [rax],al
   140032b07:	add    BYTE PTR [rax+0x14001e1],dh
   140032b0d:	add    BYTE PTR [rax],al
   140032b0f:	add    BYTE PTR [rax+0x14001e1],dh
   140032b15:	add    BYTE PTR [rax],al
   140032b17:	add    al,ah
   140032b19:	rex.WX add BYTE PTR [rax+0x1],al
   140032b1d:	add    BYTE PTR [rax],al
   140032b1f:	add    BYTE PTR [rax+0x14001e1],dh
   140032b25:	add    BYTE PTR [rax],al
   140032b27:	add    BYTE PTR [rax],ah
   140032b29:	(bad)  
   140032b2a:	add    BYTE PTR [rax+0x1],al
   140032b2d:	add    BYTE PTR [rax],al
   140032b2f:	add    BYTE PTR [rax],ah
   140032b31:	(bad)  
   140032b32:	add    BYTE PTR [rax+0x1],al
   140032b35:	add    BYTE PTR [rax],al
   140032b37:	add    BYTE PTR [rax+0x1400039],dh
   140032b3d:	add    BYTE PTR [rax],al
   140032b3f:	add    BYTE PTR [rax+0x14001e1],dh
   140032b45:	add    BYTE PTR [rax],al
   140032b47:	add    BYTE PTR [rax+0x1400039],dh
   140032b4d:	add    BYTE PTR [rax],al
   140032b4f:	add    BYTE PTR [rax+0x3b],ah
   140032b52:	add    BYTE PTR [rax+0x1],al
   140032b55:	add    BYTE PTR [rax],al
   140032b57:	add    BYTE PTR [rax+0x3b],dl
   140032b5a:	add    BYTE PTR [rax+0x1],al
   140032b5d:	add    BYTE PTR [rax],al
   140032b5f:	add    BYTE PTR [rax+0x4f],dl
   140032b62:	add    BYTE PTR [rax+0x1],al
   140032b65:	add    BYTE PTR [rax],al
   140032b67:	add    BYTE PTR [rax+0x4f],al
   140032b6a:	add    BYTE PTR [rax+0x1],al
   140032b6d:	add    BYTE PTR [rax],al
   140032b6f:	add    BYTE PTR [rax],dl
   140032b71:	(bad)  
   140032b72:	add    BYTE PTR [rax+0x1],al
   140032b75:	add    BYTE PTR [rax],al
   140032b77:	add    al,ah
   140032b79:	rex.WX add BYTE PTR [rax+0x1],al
   140032b7d:	add    BYTE PTR [rax],al
   140032b7f:	add    BYTE PTR [rax+0x14001e1],dh
   140032b85:	add    BYTE PTR [rax],al
   140032b87:	add    BYTE PTR [rax+0x14001e1],dh
   140032b8d:	add    BYTE PTR [rax],al
   140032b8f:	add    BYTE PTR [rax],al
   140032b91:	sub    al,0x0
   140032b93:	rex add DWORD PTR [rax],eax
   140032b96:	add    BYTE PTR [rax],al
   140032b98:	loopne 0x140032be4
   140032b9a:	add    BYTE PTR [rax+0x1],al
   140032b9d:	add    BYTE PTR [rax],al
   140032b9f:	add    BYTE PTR [rax],al
   140032ba1:	sub    al,0x0
   140032ba3:	rex add DWORD PTR [rax],eax
   140032ba6:	add    BYTE PTR [rax],al
   140032ba8:	mov    al,0xe1
   140032baa:	add    DWORD PTR [rax+0x1],eax
   140032bad:	add    BYTE PTR [rax],al
   140032baf:	add    BYTE PTR [rax+0x14001e1],dh
   140032bb5:	add    BYTE PTR [rax],al
   140032bb7:	add    BYTE PTR [rsi+0x45],dl
   140032bba:	outs   dx,BYTE PTR ds:[rsi]
   140032bbb:	imul   ebp,DWORD PTR [esi+0x65],0x72617643
   140032bc3:	xor    BYTE PTR [rax],dh
   140032bc5:	(bad)  
   140032bc6:	add    BYTE PTR [rax],al
   140032bc8:	jbe    0x140032c3d
   140032bca:	je     0x140032c30
   140032bcc:	ins    BYTE PTR es:[rdi],dx
   140032bcd:	imul   esp,DWORD PTR [rdx+0x0],0x65446f4e
   140032bd4:	data16 (bad) 
   140032bd6:	jne    0x140032c44
   140032bd8:	je     0x140032c27
   140032bda:	outs   dx,DWORD PTR ds:[rsi]
   140032bdb:	fs push rax
   140032bdd:	(bad)  
   140032bde:	je     0x140032c48
   140032be0:	add    BYTE PTR [rax],al
   140032be2:	add    BYTE PTR [rax],al
   140032be4:	sub    eax,0x656d6167
   140032be9:	add    BYTE PTR [rax],al
   140032beb:	add    BYTE PTR [rsi+0x4d],dl
   140032bee:	rex.WRXB
   140032bef:	add    BYTE PTR [rax],r8b
	...
   140032bfe:	add    BYTE PTR [rax],al
   140032c00:	rex.B jo 0x140032c73
   140032c03:	ins    BYTE PTR es:[rdi],dx
   140032c04:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140032c0b:	and    BYTE PTR [rdx],ah
   140032c0d:	and    eax,0x690a2273
   140032c12:	jae    0x140032c34
   140032c14:	jb     0x140032c8b
   140032c16:	outs   dx,BYTE PTR ds:[rsi]
   140032c17:	outs   dx,BYTE PTR ds:[rsi]
   140032c18:	imul   ebp,DWORD PTR [rsi+0x67],0x74697720
   140032c1f:	push   0x2074756f
   140032c24:	(bad)  
   140032c25:	and    BYTE PTR [rbx+0x6e],ch
   140032c28:	outs   dx,DWORD PTR ds:[rsi]
   140032c29:	ja     0x140032c99
   140032c2b:	and    BYTE PTR [rbp+0x6f],ch
   140032c2e:	and    DWORD PTR fs:[rdx],ecx
   140032c31:	or     dl,BYTE PTR [rbx+0x65]
   140032c34:	je     0x140032c56
   140032c36:	je     0x140032ca0
   140032c38:	and    BYTE PTR gs:[rsi+0x4d],dl
   140032c3c:	rex.WRXB
   140032c3d:	and    BYTE PTR [rbp+0x6e],r12b
   140032c41:	jbe    0x140032cac
   140032c43:	jb     0x140032cb4
   140032c45:	outs   dx,BYTE PTR ds:[rsi]
   140032c46:	ins    DWORD PTR es:[rdi],dx
   140032c47:	outs   dx,BYTE PTR gs:[rsi]
   140032c49:	je     0x140032c6b
   140032c4b:	jbe    0x140032cae
   140032c4d:	jb     0x140032cb8
   140032c4f:	(bad)  
   140032c50:	(bad)  
   140032c51:	ins    BYTE PTR es:[rdi],dx
   140032c52:	and    BYTE PTR gs:[rdi+0x72],ch
   140032c56:	and    BYTE PTR [rdx+0x75],dh
   140032c59:	outs   dx,BYTE PTR ds:[rsi]
   140032c5a:	and    BYTE PTR [rdi+0x69],dh
   140032c5d:	je     0x140032cc7
   140032c5f:	and    BYTE PTR [rip+0x656d6167],ch        # 0x1a5708dcc
   140032c65:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140032c69:	jae    0x140032cd0
   140032c6b:	je     0x140032c8d
   140032c6d:	je     0x140032cd7
   140032c6f:	and    BYTE PTR gs:[rbp+0x6f],ch
   140032c73:	and    BYTE PTR fs:[rsi+0x61],ch
   140032c77:	ins    DWORD PTR es:[rdi],dx
   140032c78:	gs or  al,BYTE PTR cs:[rax]
   140032c7c:	add    BYTE PTR [rax],al
   140032c7e:	add    BYTE PTR [rax],al
   140032c80:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140032c82:	and    BYTE PTR [rbx+0x6e],ch
   140032c85:	outs   dx,DWORD PTR ds:[rsi]
   140032c86:	ja     0x140032ca8
   140032c88:	ins    DWORD PTR es:[rdi],dx
   140032c89:	outs   dx,DWORD PTR ds:[rsi]
   140032c8a:	and    DWORD PTR fs:[rax],eax
   140032c8d:	add    BYTE PTR [rax],al
   140032c8f:	add    BYTE PTR [rip+0x61657473],ch        # 0x1a168a108
   140032c95:	ins    DWORD PTR es:[rdi],dx
   140032c96:	add    BYTE PTR [rax],al
   140032c98:	sub    eax,0x776f6873
   140032c9d:	(bad)  
   140032c9e:	jae    0x140032d13
   140032ca0:	gs jb  0x140032d17
   140032ca3:	jae    0x140032ca5
   140032ca5:	add    BYTE PTR [rax],al
   140032ca7:	add    BYTE PTR [rip+0x63766564],ch        # 0x1a3799211
   140032cad:	outs   dx,DWORD PTR ds:[rsi]
   140032cae:	outs   dx,BYTE PTR ds:[rsi]
   140032caf:	je     0x140032d16
   140032cb1:	outs   dx,BYTE PTR ds:[rsi]
   140032cb2:	je     0x140032cb4
   140032cb4:	sub    eax,0x766564
   140032cb9:	add    BYTE PTR [rax],al
   140032cbb:	add    BYTE PTR [rax],al
   140032cbd:	add    BYTE PTR [rax],al
   140032cbf:	add    BYTE PTR [rip+0x78657066],ch        # 0x1b8689d2b
   140032cc5:	movsxd esp,DWORD PTR [rbp+0x70]
   140032cc8:	je     0x140032cca
   140032cca:	add    BYTE PTR [rax],al
   140032ccc:	add    BYTE PTR [rax],al
   140032cce:	add    BYTE PTR [rax],al
   140032cd0:	sub    eax,0x75626e75
   140032cd5:	data16 data16 gs jb 0x140032d3f
   140032cda:	imul   ebp,DWORD PTR fs:[rdi+0x0],0x53560000
   140032ce2:	je     0x140032d56
   140032ce4:	imul   ebp,DWORD PTR [rsi+0x67],0x656b6f54
   140032ceb:	outs   dx,BYTE PTR ds:[rsi]
   140032cec:	push   rbx
   140032ced:	jns    0x140032d62
   140032cef:	je     0x140032d56
   140032cf1:	ins    DWORD PTR es:[rdi],dx
   140032cf2:	xor    BYTE PTR [rax],dh
   140032cf4:	xor    DWORD PTR [rax],eax
   140032cf6:	add    BYTE PTR [rax],al
   140032cf8:	(bad)  
   140032cf9:	imul   ebp,DWORD PTR [rsi+0x5c],0x366e6977
   140032d00:	xor    al,0x5c
   140032d02:	je     0x140032d6d
   140032d04:	gs jb  0x140032d37
   140032d07:	cs fs ins BYTE PTR es:[rdi],dx
   140032d0a:	ins    BYTE PTR es:[rdi],dx
   140032d0b:	add    BYTE PTR [rax],al
   140032d0d:	add    BYTE PTR [rax],al
   140032d0f:	add    BYTE PTR [rdi+0x61],ah
   140032d12:	ins    DWORD PTR es:[rdi],dx
   140032d13:	gs pop rsp
   140032d15:	(bad)  
   140032d16:	imul   ebp,DWORD PTR [rsi+0x0],0x67000000
   140032d1d:	(bad)  
   140032d1e:	ins    DWORD PTR es:[rdi],dx
   140032d1f:	add    BYTE PTR gs:[rax],al
   140032d22:	add    BYTE PTR [rax],al
   140032d24:	add    BYTE PTR [rax],al
   140032d26:	add    BYTE PTR [rax],al
   140032d28:	sub    eax,0x78656f6e
   140032d2d:	movsxd ebp,DWORD PTR gs:[rax+0x65]
   140032d31:	movsxd ebp,DWORD PTR [rbx+0x0]
   140032d34:	add    BYTE PTR [rax],al
   140032d36:	add    BYTE PTR [rax],al
   140032d38:	(bad)  
   140032d39:	jae    0x140032daa
   140032d3b:	data16 je 0x140032daa
   140032d3e:	imul   ebp,DWORD PTR [rsi+0x6b],0x2f73
   140032d45:	add    BYTE PTR [rax],al
   140032d47:	add    BYTE PTR [rbx+rsi*2+0x6f],bl
   140032d4b:	data16 je 0x140032dba
   140032d4e:	imul   ebp,DWORD PTR [rsi+0x6b],0x5c73
	...
   140032d5d:	add    BYTE PTR [rax],al
   140032d5f:	add    BYTE PTR [rcx+0x70],al
   140032d62:	jo     0x140032dd0
   140032d64:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140032d6b:	and    BYTE PTR [rsi],ch
   140032d6d:	gs js  0x140032dd5
   140032d70:	and    BYTE PTR [rdx],ah
   140032d72:	and    eax,0x690a2273
   140032d77:	jae    0x140032d99
   140032d79:	imul   ebp,DWORD PTR [rsi+0x20],0x75206e61
   140032d80:	outs   dx,BYTE PTR ds:[rsi]
   140032d81:	jae    0x140032df8
   140032d83:	jo     0x140032df5
   140032d85:	outs   dx,DWORD PTR ds:[rsi]
   140032d86:	jb     0x140032dfc
   140032d88:	gs and BYTE PTR fs:[rax+0x61],dh
   140032d8d:	je     0x140032df7
   140032d8f:	and    BYTE PTR [rsi+0x6f],ah
   140032d92:	jb     0x140032db4
   140032d94:	addr32 (bad) 
   140032d96:	ins    DWORD PTR es:[rdi],dx
   140032d97:	and    BYTE PTR gs:[rdx],ah
   140032d9a:	and    eax,0xa212273
   140032d9f:	rex.RXB (bad) 
   140032da1:	ins    DWORD PTR es:[rdi],dx
   140032da2:	and    BYTE PTR gs:[rdx+0x61],ah
   140032da6:	jae    0x140032e0d
   140032da8:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140032dac:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140032db1:	jns    0x140032dd3
   140032db3:	and    ah,BYTE PTR [rip+0x64202273]        # 0x1a423502c
   140032db9:	outs   dx,DWORD PTR ds:[rsi]
   140032dba:	gs jae 0x140032e2b
   140032dbd:	(bad)  
   140032dbe:	je     0x140032de0
   140032dc0:	ins    DWORD PTR es:[rdi],dx
   140032dc1:	(bad)  
   140032dc2:	je     0x140032e27
   140032dc4:	push   0x6f6f7220
   140032dc9:	je     0x140032deb
   140032dcb:	imul   esi,DWORD PTR fs:[rdx+0x20],0x22732522
   140032dd3:	or     cl,BYTE PTR [rcx+0x66]
   140032dd6:	and    BYTE PTR [rcx+0x6f],bh
   140032dd9:	jne    0x140032dfb
   140032ddb:	push   0x20657661
   140032de0:	jae    0x140032e52
   140032de2:	movsxd ebp,DWORD PTR gs:[rcx+0x61]
   140032de6:	ins    BYTE PTR es:[rdi],dx
   140032de7:	and    BYTE PTR [rbx+0x68],ah
   140032dea:	(bad)  
   140032deb:	jb     0x140032e4e
   140032ded:	movsxd esi,DWORD PTR [rbp+riz*2+0x72]
   140032df1:	jae    0x140032e13
   140032df3:	imul   ebp,DWORD PTR [rsi+0x20],0x72756f79
   140032dfa:	and    BYTE PTR [rcx+0x6e],ch
   140032dfd:	jae    0x140032e73
   140032dff:	(bad)  
   140032e00:	ins    BYTE PTR es:[rdi],dx
   140032e01:	ins    BYTE PTR es:[rdi],dx
   140032e02:	and    BYTE PTR [rax+0x61],dh
   140032e05:	je     0x140032e6f
   140032e07:	and    BYTE PTR [rax+rbp*2+0x69],dh
   140032e0b:	jae    0x140032e2d
   140032e0d:	ins    DWORD PTR es:[rdi],dx
   140032e0e:	(bad)  
   140032e0f:	jns    0x140032e31
   140032e11:	(bad)  
   140032e12:	and    BYTE PTR gs:[rbx+0x6f],ah
   140032e16:	outs   dx,BYTE PTR ds:[rsi]
   140032e17:	data16 jne 0x140032e8d
   140032e1a:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
   140032e21:	and    BYTE PTR [rdi+0x61],ah
   140032e24:	ins    DWORD PTR es:[rdi],dx
   140032e25:	gs or  al,BYTE PTR cs:[rax]
   140032e29:	add    BYTE PTR [rax],al
   140032e2b:	add    BYTE PTR [rax],al
   140032e2d:	add    BYTE PTR [rax],al
   140032e2f:	add    BYTE PTR [rbx+0x54],al
   140032e32:	imul   esp,DWORD PTR [rbp+0x72],0x70704131
   140032e39:	push   rbx
   140032e3a:	jns    0x140032eaf
   140032e3c:	je     0x140032ea3
   140032e3e:	ins    DWORD PTR es:[rdi],dx
   140032e3f:	imul   r12d,DWORD PTR [rbx+0x74],0x65533a3a
   140032e47:	je     0x140032e96
   140032e49:	outs   dx,DWORD PTR ds:[rsi]
   140032e4a:	fs push rax
   140032e4c:	(bad)  
   140032e4d:	je     0x140032eb7
   140032e4f:	add    BYTE PTR [rbx+0x3a],ah
   140032e52:	pop    rsp
   140032e53:	(bad)  
   140032e54:	jne    0x140032ebf
   140032e56:	ins    BYTE PTR es:[rdi],dx
   140032e57:	fs jae 0x140032ec6
   140032e5a:	(bad)  
   140032e5b:	jbe    0x140032ec2
   140032e5d:	pop    rsp
   140032e5e:	jae    0x140032ecf
   140032e60:	jne    0x140032ed4
   140032e62:	movsxd esp,DWORD PTR [rbp+0x32]
   140032e65:	pop    rdi
   140032e66:	outs   dx,DWORD PTR fs:[rsi]
   140032e68:	je     0x140032ecb
   140032e6a:	pop    rdi
   140032e6b:	jb     0x140032ed2
   140032e6d:	ins    BYTE PTR es:[rdi],dx
   140032e6e:	pop    rdi
   140032e6f:	ja     0x140032eda
   140032e71:	outs   dx,BYTE PTR ds:[rsi]
   140032e72:	ss xor al,0x5c
   140032e75:	(bad)  
   140032e76:	jne    0x140032ee1
   140032e78:	ins    BYTE PTR es:[rdi],dx
   140032e79:	fs pop rsp
   140032e7b:	jae    0x140032eef
   140032e7d:	movsxd ebx,DWORD PTR [rax+rsi*2+0x75]
   140032e81:	(bad)  
   140032e82:	ins    BYTE PTR es:[rdi],dx
   140032e83:	imul   esp,DWORD PTR [rbx+0x5c],0x66707061
   140032e8a:	jb     0x140032eed
   140032e8c:	ins    DWORD PTR es:[rdi],dx
   140032e8d:	gs ja  0x140032eff
   140032e90:	jb     0x140032efd
   140032e92:	pop    rsp
   140032e93:	je     0x140032efe
   140032e95:	gs jb  0x140032ec9
   140032e98:	(bad)  
   140032e99:	jo     0x140032f0b
   140032e9b:	cs push 0x41000000
   140032ea1:	jo     0x140032f13
   140032ea3:	ins    BYTE PTR es:[rdi],dx
   140032ea4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140032eab:	and    BYTE PTR [rbp+0x6e],dh
   140032eae:	(bad)  
   140032eaf:	(bad)  
   140032eb0:	ins    BYTE PTR es:[rdi],dx
   140032eb1:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140032eb6:	ins    BYTE PTR es:[rdi],dx
   140032eb7:	outs   dx,DWORD PTR ds:[rsi]
   140032eb8:	(bad)  
   140032eb9:	and    BYTE PTR fs:[rdi+0x61],ah
   140032ebd:	ins    DWORD PTR es:[rdi],dx
   140032ebe:	imul   ebp,DWORD PTR gs:[rsi+0x66],0x69672e6f
   140032ec6:	and    BYTE PTR [rsi+0x69],ah
   140032ec9:	ins    BYTE PTR es:[rdi],dx
   140032eca:	and    BYTE PTR gs:[rsi+0x72],ah
   140032ece:	outs   dx,DWORD PTR ds:[rsi]
   140032ecf:	ins    DWORD PTR es:[rdi],dx
   140032ed0:	and    BYTE PTR [rcx+rbp*2+0x72],ah
   140032ed4:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140032ed9:	jns    0x140032efb
   140032edb:	and    ah,BYTE PTR [rip+0xa212273]        # 0x14a245154
   140032ee1:	add    BYTE PTR [rax],al
   140032ee3:	add    BYTE PTR [rax],ah
   140032ee5:	add    BYTE PTR [rax],al
   140032ee7:	add    BYTE PTR [rax-0xa],bh
   140032eea:	add    eax,DWORD PTR [rax+0x1]
   140032eed:	add    BYTE PTR [rax],al
   140032eef:	add    BYTE PTR [rax+0x1d],dl
   140032ef2:	add    BYTE PTR [rax+0x1],al
   140032ef5:	add    BYTE PTR [rax],al
   140032ef7:	add    al,ah
   140032ef9:	sbb    eax,0x14000
   140032efe:	add    BYTE PTR [rax],al
   140032f00:	loopne 0x140032f4c
   140032f02:	add    BYTE PTR [rax+0x1],al
   140032f05:	add    BYTE PTR [rax],al
   140032f07:	add    al,ah
   140032f09:	xor    al,BYTE PTR [rax]
   140032f0b:	rex add DWORD PTR [rax],eax
   140032f0e:	add    BYTE PTR [rax],al
   140032f10:	rex
   140032f11:	data16 add BYTE PTR [rax+0x1],al
   140032f15:	add    BYTE PTR [rax],al
   140032f17:	add    BYTE PTR [rax+0x14001e1],dh
   140032f1d:	add    BYTE PTR [rax],al
   140032f1f:	add    BYTE PTR [rax+0x2d],dl
   140032f22:	add    BYTE PTR [rax+0x1],al
   140032f25:	add    BYTE PTR [rax],al
   140032f27:	add    BYTE PTR [rax],dh
   140032f29:	imul   eax,DWORD PTR [rdx],0x40
   140032f2c:	add    DWORD PTR [rax],eax
   140032f2e:	add    BYTE PTR [rax],al
   140032f30:	add    BYTE PTR [rbx+0x0],cl
   140032f33:	rex add DWORD PTR [rax],eax
   140032f36:	add    BYTE PTR [rax],al
   140032f38:	nop
   140032f39:	cdq    
   140032f3a:	add    al,BYTE PTR [rax+0x1]
   140032f3d:	add    BYTE PTR [rax],al
   140032f3f:	add    al,dh
   140032f41:	sub    eax,DWORD PTR [rax]
   140032f43:	rex add DWORD PTR [rax],eax
   140032f46:	add    BYTE PTR [rax],al
   140032f48:	rcr    BYTE PTR [rbx],1
   140032f4a:	add    BYTE PTR [rax+0x1],al
   140032f4d:	add    BYTE PTR [rax],al
   140032f4f:	add    BYTE PTR [rax],dh
   140032f51:	sbb    al,0x0
   140032f53:	rex add DWORD PTR [rax],eax
   140032f56:	add    BYTE PTR [rax],al
   140032f58:	push   rax
   140032f59:	sbb    al,0x0
   140032f5b:	rex add DWORD PTR [rax],eax
   140032f5e:	add    BYTE PTR [rax],al
   140032f60:	sbb    al,0x0
   140032f63:	rex add DWORD PTR [rax],eax
   140032f66:	add    BYTE PTR [rax],al
   140032f68:	xor    BYTE PTR [rbp+0x0],cl
   140032f6b:	rex add DWORD PTR [rax],eax
   140032f6e:	add    BYTE PTR [rax],al
   140032f70:	nop
   140032f71:	sbb    al,0x0
   140032f73:	rex add DWORD PTR [rax],eax
   140032f76:	add    BYTE PTR [rax],al
   140032f78:	adc    BYTE PTR [rsi],bl
   140032f7a:	add    BYTE PTR [rax+0x1],al
   140032f7d:	add    BYTE PTR [rax],al
   140032f7f:	add    BYTE PTR [rax+0x140002e],ah
   140032f85:	add    BYTE PTR [rax],al
   140032f87:	add    BYTE PTR [rax],ah
   140032f89:	(bad)  
   140032f8a:	add    BYTE PTR [rax+0x1],al
   140032f8d:	add    BYTE PTR [rax],al
   140032f8f:	add    BYTE PTR [rax+0x3b],al
   140032f92:	add    BYTE PTR [rax+0x1],al
   140032f95:	add    BYTE PTR [rax],al
   140032f97:	add    BYTE PTR [rax+0x140002f],al
   140032f9d:	add    BYTE PTR [rax],al
   140032f9f:	add    BYTE PTR [rax+0x39],dl
   140032fa2:	add    BYTE PTR [rax+0x1],al
   140032fa5:	add    BYTE PTR [rax],al
   140032fa7:	add    BYTE PTR [rax],dh
   140032fa9:	cmp    eax,DWORD PTR [rax]
   140032fab:	rex add DWORD PTR [rax],eax
   140032fae:	add    BYTE PTR [rax],al
   140032fb0:	movabs al,ds:0x600000000140002d
   140032fb9:	(bad)  
   140032fba:	add    BYTE PTR [rax+0x1],al
   140032fbd:	add    BYTE PTR [rax],al
   140032fbf:	add    BYTE PTR [rax+0x1400021],al
   140032fc5:	add    BYTE PTR [rax],al
   140032fc7:	add    BYTE PTR [rax+0x21],dh
   140032fca:	add    BYTE PTR [rax+0x1],al
   140032fcd:	add    BYTE PTR [rax],al
   140032fcf:	add    BYTE PTR [rax],dh
   140032fd1:	sub    eax,0x14000
   140032fd6:	add    BYTE PTR [rax],al
   140032fd8:	adc    BYTE PTR [rax+rax*1],ch
   140032fdb:	rex add DWORD PTR [rax],eax
   140032fde:	add    BYTE PTR [rax],al
   140032fe0:	movabs al,ds:0x600000000140001c
   140032fe9:	sbb    al,0x0
   140032feb:	rex add DWORD PTR [rax],eax
   140032fee:	add    BYTE PTR [rax],al
   140032ff0:	mov    al,0x2e
   140032ff2:	add    BYTE PTR [rax+0x1],al
   140032ff5:	add    BYTE PTR [rax],al
   140032ff7:	add    BYTE PTR [rax+0x1400045],al
   140032ffd:	add    BYTE PTR [rax],al
   140032fff:	add    BYTE PTR [rax+0x1400069],dl
   140033005:	add    BYTE PTR [rax],al
   140033007:	add    BYTE PTR [rax+0x1400031],ah
   14003300d:	add    BYTE PTR [rax],al
   14003300f:	add    BYTE PTR [rax+0x1400031],dh
   140033015:	add    BYTE PTR [rax],al
   140033017:	add    BYTE PTR [rax+0x21],ah
   14003301a:	add    BYTE PTR [rax+0x1],al
   14003301d:	add    BYTE PTR [rax],al
   14003301f:	add    BYTE PTR [rax+0x20],al
   140033022:	add    BYTE PTR [rax+0x1],al
   140033025:	add    BYTE PTR [rax],al
   140033027:	add    BYTE PTR [rax],ah
   140033029:	cmp    eax,DWORD PTR [rax]
   14003302b:	rex add DWORD PTR [rax],eax
   14003302e:	add    BYTE PTR [rax],al
   140033030:	loopne 0x14003305d
   140033032:	add    BYTE PTR [rax+0x1],al
   140033035:	add    BYTE PTR [rax],al
   140033037:	add    al,al
   140033039:	(bad)  
   14003303a:	add    BYTE PTR [rax+0x1],al
   14003303d:	add    BYTE PTR [rax],al
   14003303f:	add    BYTE PTR [rax+0x3b],ah
   140033042:	add    BYTE PTR [rax+0x1],al
   140033045:	add    BYTE PTR [rax],al
   140033047:	add    BYTE PTR [rax+0x3b],dl
   14003304a:	add    BYTE PTR [rax+0x1],al
   14003304d:	add    BYTE PTR [rax],al
   14003304f:	add    BYTE PTR [rax+0x4f],dl
   140033052:	add    BYTE PTR [rax+0x1],al
   140033055:	add    BYTE PTR [rax],al
   140033057:	add    BYTE PTR [rax+0x4f],al
   14003305a:	add    BYTE PTR [rax+0x1],al
   14003305d:	add    BYTE PTR [rax],al
   14003305f:	add    BYTE PTR [rax],dl
   140033061:	(bad)  
   140033062:	add    BYTE PTR [rax+0x1],al
   140033065:	add    BYTE PTR [rax],al
   140033067:	add    al,al
   140033069:	xor    DWORD PTR [rax],eax
   14003306b:	rex add DWORD PTR [rax],eax
   14003306e:	add    BYTE PTR [rax],al
   140033070:	adc    BYTE PTR [rsi+0x0],cl
   140033073:	rex add DWORD PTR [rax],eax
   140033076:	add    BYTE PTR [rax],al
   140033078:	adc    BYTE PTR [rbx+0x0],0x40
   14003307c:	add    DWORD PTR [rax],eax
   14003307e:	add    BYTE PTR [rax],al
   140033080:	rcr    BYTE PTR [rsi],1
   140033082:	add    BYTE PTR [rax+0x1],al
   140033085:	add    BYTE PTR [rax],al
   140033087:	add    al,dl
   140033089:	add    BYTE PTR cs:[rax+0x1],al
   14003308d:	add    BYTE PTR [rax],al
   14003308f:	add    BYTE PTR [rax+0x140002e],al
   140033095:	add    BYTE PTR [rax],al
   140033097:	add    BYTE PTR [rax+0x22],dl
   14003309a:	add    BYTE PTR [rax+0x1],al
   14003309d:	add    BYTE PTR [rax],al
   14003309f:	add    al,ah
   1400330a1:	add    BYTE PTR ds:[rax+0x1],al
   1400330a5:	add    BYTE PTR [rax],al
   1400330a7:	add    al,dh
   1400330a9:	cmc    
   1400330aa:	add    eax,DWORD PTR [rax+0x1]
   1400330ad:	add    BYTE PTR [rax],al
   1400330af:	add    BYTE PTR [rax+0x140001b],dl
   1400330b5:	add    BYTE PTR [rax],al
   1400330b7:	add    BYTE PTR [rax+0x36],dh
   1400330ba:	add    BYTE PTR [rax+0x1],al
   1400330bd:	add    BYTE PTR [rax],al
   1400330bf:	add    BYTE PTR [rax],dh
   1400330c1:	sub    al,0x0
   1400330c3:	rex add DWORD PTR [rax],eax
   1400330c6:	add    BYTE PTR [rax],al
   1400330c8:	mov    al,0x1c
   1400330ca:	add    BYTE PTR [rax+0x1],al
   1400330cd:	add    BYTE PTR [rax],al
   1400330cf:	add    BYTE PTR [rax+0x140001d],dl
   1400330d5:	add    BYTE PTR [rax],al
   1400330d7:	add    BYTE PTR [rax+0x1400045],dl
   1400330dd:	add    BYTE PTR [rax],al
   1400330df:	add    BYTE PTR [rbx+0x6f],ah
   1400330e2:	outs   dx,BYTE PTR ds:[rsi]
   1400330e3:	jae    0x140033154
   1400330e5:	ins    BYTE PTR es:[rdi],dx
   1400330e6:	gs cs ins BYTE PTR es:[rdi],dx
   1400330e9:	outs   dx,DWORD PTR ds:[rsi]
   1400330ea:	add    BYTE PTR [ecx+0x73],ch
   1400330ee:	addr32 (bad) 
   1400330f0:	ins    DWORD PTR es:[rdi],dx
   1400330f1:	add    BYTE PTR gs:[rax],al
   1400330f4:	sub    eax,0x6c6f6f74
   1400330f9:	jae    0x1400330fb
   1400330fb:	add    BYTE PTR [rip+0x2d00766e],ch        # 0x16d03a76f
   140033101:	jbe    0x140033166
   140033103:	outs   dx,DWORD PTR ds:[rsi]
   140033104:	outs   dx,BYTE PTR ds:[rsi]
   140033105:	jae    0x140033176
   140033107:	ins    BYTE PTR es:[rdi],dx
   140033108:	add    BYTE PTR gs:[rax],al
   14003310b:	add    BYTE PTR [rax],al
   14003310d:	add    BYTE PTR [rax],al
   14003310f:	add    BYTE PTR [rip+0x6e6f6376],ch        # 0x1ae72948b
   140033115:	jo     0x140033186
   140033117:	jb     0x14003318d
   140033119:	add    BYTE PTR [rax],al
   14003311b:	add    BYTE PTR [rax],al
   14003311d:	add    BYTE PTR [rax],al
   14003311f:	add    BYTE PTR [rip+0x736e6f63],ch        # 0x1b371a088
   140033125:	outs   dx,DWORD PTR ds:[rsi]
   140033126:	ins    BYTE PTR es:[rdi],dx
   140033127:	gs (bad) 
   140033129:	jo     0x14003319b
   14003312b:	add    BYTE PTR [rax],al
   14003312d:	add    BYTE PTR [rax],al
   14003312f:	add    BYTE PTR [rsi+0x43],dl
   140033132:	outs   dx,DWORD PTR ds:[rsi]
   140033133:	outs   dx,BYTE PTR ds:[rsi]
   140033134:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033136:	ins    DWORD PTR es:[rdi],dx
   140033137:	ins    DWORD PTR es:[rdi],dx
   140033138:	xor    BYTE PTR [rax],dh
   14003313a:	xor    DWORD PTR [rax],eax
   14003313c:	add    BYTE PTR [rax],al
   14003313e:	add    BYTE PTR [rax],al
   140033140:	jbe    0x1400331a5
   140033142:	outs   dx,DWORD PTR ds:[rsi]
   140033143:	outs   dx,BYTE PTR ds:[rsi]
   140033144:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140033147:	ins    DWORD PTR es:[rdi],dx
	...
   140033150:	rex.RX (bad) 
   140033152:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f5420
   14003315a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003315c:	(bad)  
   14003315d:	and    BYTE PTR fs:[rdi],ah
   140033160:	and    eax,0x20212773
   140033165:	push   rsi
   140033166:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033168:	outs   dx,BYTE PTR ds:[rsi]
   140033169:	jae    0x1400331da
   14003316b:	ins    BYTE PTR es:[rdi],dx
   14003316c:	and    BYTE PTR gs:[rbx+0x6f],al
   140033170:	ins    DWORD PTR es:[rdi],dx
   140033171:	ins    DWORD PTR es:[rdi],dx
   140033172:	jne    0x1400331e2
   140033174:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003317b:	and    BYTE PTR [rcx+rbp*2+0x73],al
   14003317f:	(bad)  
   140033180:	(bad)  
   140033181:	ins    BYTE PTR es:[rdi],dx
   140033182:	gs and DWORD PTR fs:[rdx],ecx
   140033186:	add    BYTE PTR [rax],al
   140033188:	rex.R
   140033189:	gs jae 0x140033200
   14003318c:	jb     0x1400331fd
   14003318e:	jns    0x1400331f9
   140033190:	outs   dx,BYTE PTR ds:[rsi]
   140033191:	and    BYTE PTR [eip+0x74732064],ah        # 0x1b47651fc
   140033198:	(bad)  
   140033199:	jb     0x14003320f
   14003319b:	jne    0x14003320d
   14003319d:	and    BYTE PTR [rdx+0x65],dh
   1400331a0:	jae    0x140033211
   1400331a2:	jne    0x140033216
   1400331a4:	movsxd esp,DWORD PTR [rbp+0x20]
   1400331a7:	ins    DWORD PTR es:[rdi],dx
   1400331a8:	(bad)  
   1400331a9:	outs   dx,BYTE PTR ds:[rsi]
   1400331aa:	imul   esp,DWORD PTR [rsi+0x65],0xa737473
   1400331b1:	add    BYTE PTR [rax],al
   1400331b3:	add    BYTE PTR [rax],al
   1400331b5:	add    BYTE PTR [rax],al
   1400331b7:	add    BYTE PTR [rip+0x646e6f63],ch        # 0x1a471a120
   1400331bd:	gs (bad) 
   1400331bf:	jne    0x140033228
   1400331c1:	add    BYTE PTR [rax],al
   1400331c3:	add    BYTE PTR [rax],al
   1400331c5:	add    BYTE PTR [rax],al
   1400331c7:	add    BYTE PTR [rip+0x5f6e6f63],ch        # 0x19f71a130
   1400331cd:	ins    BYTE PTR es:[rdi],dx
   1400331ce:	outs   dx,DWORD PTR ds:[rsi]
   1400331cf:	imul   bp,WORD PTR [ebp+eiz*2+0x0],0x0
   1400331d7:	add    BYTE PTR [rip+0x736e6f63],ch        # 0x1b371a140
   1400331dd:	outs   dx,DWORD PTR ds:[rsi]
   1400331de:	ins    BYTE PTR es:[rdi],dx
   1400331df:	gs ins BYTE PTR es:[rdi],dx
   1400331e1:	outs   dx,DWORD PTR ds:[rsi]
   1400331e2:	add    BYTE PTR [edi+0x41],al
   1400331e6:	rex.WRB
   1400331e7:	add    BYTE PTR [r8],r8b
   1400331ea:	add    BYTE PTR [rax],al
   1400331ec:	add    BYTE PTR [rax],al
   1400331ee:	add    BYTE PTR [rax],al
   1400331f0:	sub    eax,0x5f6e6f63
   1400331f5:	je     0x140033260
   1400331f7:	ins    DWORD PTR es:[rdi],dx
   1400331f8:	gs jae 0x14003326f
   1400331fb:	(bad)  
   1400331fc:	ins    DWORD PTR es:[rdi],dx
   1400331fd:	jo     0x1400331ff
   1400331ff:	add    BYTE PTR [rip+0x636e6f63],ch        # 0x1a371a168
   140033205:	ins    BYTE PTR es:[rdi],dx
   140033206:	gs (bad) 
   140033208:	jb     0x140033276
   14003320a:	outs   dx,DWORD PTR ds:[rsi]
   14003320b:	add    BYTE PTR [eax],al
   14003320e:	add    BYTE PTR [rax],al
   140033210:	(bad)  
   140033211:	add    BYTE PTR [rax],al
   140033213:	add    BYTE PTR [rsi],ch
   140033215:	add    BYTE PTR [rax],al
   140033217:	add    BYTE PTR [rsi+0x46],dl
   14003321a:	imul   ebp,DWORD PTR [rbp+riz*2+0x53],0x65747379
   140033222:	ins    DWORD PTR es:[rdi],dx
   140033223:	xor    BYTE PTR [rcx],dh
   140033225:	(bad)  
   140033226:	add    BYTE PTR [rax],al
   140033228:	imul   bp,WORD PTR [rbp+riz*2+0x73],0x7379
   14003322f:	je     0x140033296
   140033231:	ins    DWORD PTR es:[rdi],dx
   140033232:	pop    rdi
   140033233:	jae    0x1400332a9
   140033235:	imul   ebp,DWORD PTR fs:[rdi+0x0],0x0
   14003323d:	add    BYTE PTR [rax],al
   14003323f:	add    BYTE PTR [rbx+0x6f],al
   140033242:	outs   dx,BYTE PTR ds:[rsi]
   140033243:	jae    0x1400332b4
   140033245:	ins    BYTE PTR es:[rdi],dx
   140033246:	gs push rbx
   140033248:	je     0x1400332ab
   14003324a:	jb     0x1400332c0
   14003324c:	jne    0x1400332be
   14003324e:	add    BYTE PTR [rax],al
   140033250:	push   rsp
   140033251:	outs   dx,DWORD PTR ds:[rsi]
   140033252:	outs   dx,DWORD PTR ds:[rsi]
   140033253:	ins    BYTE PTR es:[rdi],dx
   140033254:	jae    0x1400332a9
   140033256:	je     0x1400332b9
   140033258:	jb     0x1400332ce
   14003325a:	jne    0x1400332cc
   14003325c:	push   rax
   14003325d:	jb     0x1400332c4
   14003325f:	rex.RXB (bad) 
   140033261:	ins    DWORD PTR es:[rdi],dx
   140033262:	add    BYTE PTR gs:[rax],al
   140033265:	add    BYTE PTR [rax],al
   140033267:	add    BYTE PTR [rdi+0x61],al
   14003326a:	ins    DWORD PTR es:[rdi],dx
   14003326b:	gs push rbx
   14003326d:	je     0x1400332d0
   14003326f:	jb     0x1400332e5
   140033271:	jne    0x1400332e3
   140033273:	add    BYTE PTR [rax],al
   140033275:	add    BYTE PTR [rax],al
   140033277:	add    BYTE PTR [rsi+0x52],dl
   14003327a:	push   rbx
   14003327b:	je     0x1400332de
   14003327d:	jb     0x1400332f3
   14003327f:	jne    0x1400332f1
   140033281:	add    BYTE PTR [rax],al
   140033283:	add    BYTE PTR [rax],al
   140033285:	add    BYTE PTR [rax],al
   140033287:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   14003328b:	ins    BYTE PTR es:[rdi],dx
   14003328c:	jae    0x1400332e1
   14003328e:	je     0x1400332f1
   140033290:	jb     0x140033306
   140033292:	jne    0x140033304
   140033294:	add    BYTE PTR [rax],al
   140033296:	add    BYTE PTR [rax],al
   140033298:	rex.XB push r12
   14003329a:	imul   esp,DWORD PTR [rbp+0x72],0x70704132
   1400332a1:	push   rbx
   1400332a2:	jns    0x140033317
   1400332a4:	je     0x14003330b
   1400332a6:	ins    DWORD PTR es:[rdi],dx
   1400332a7:	imul   r12d,DWORD PTR [rbx+0x74],0x6f4c3a3a
   1400332af:	(bad)  
   1400332b0:	fs push rbx
   1400332b2:	je     0x140033315
   1400332b4:	jb     0x14003332a
   1400332b6:	jne    0x140033328
   1400332b8:	rex.WRB (bad) 
   1400332ba:	outs   dx,BYTE PTR ds:[rsi]
   1400332bb:	imul   esp,DWORD PTR [rsi+0x65],0x72477473
   1400332c2:	outs   dx,DWORD PTR ds:[rsi]
   1400332c3:	jne    0x140033335
   1400332c5:	add    BYTE PTR [rax],al
   1400332c7:	add    BYTE PTR [rip+0x65745f73],ah        # 0x1a5779240
   1400332cd:	ins    DWORD PTR es:[rdi],dx
   1400332ce:	jo     0x140033333
   1400332d0:	outs   dx,DWORD PTR ds:[rsi]
   1400332d1:	outs   dx,BYTE PTR ds:[rsi]
   1400332d2:	je     0x140033339
   1400332d4:	outs   dx,BYTE PTR ds:[rsi]
   1400332d5:	je     0x1400332d7
   1400332d7:	add    BYTE PTR [rax-0xb],bh
   1400332da:	add    eax,DWORD PTR [rax+0x1]
   1400332dd:	add    BYTE PTR [rax],al
   1400332df:	add    BYTE PTR [rax+0x1400038],dh
   1400332e5:	add    BYTE PTR [rax],al
   1400332e7:	add    BYTE PTR [rdx+0x69],ah
   1400332ea:	outs   dx,BYTE PTR ds:[rsi]
   1400332eb:	pop    rsp
   1400332ec:	ja     0x140033357
   1400332ee:	outs   dx,BYTE PTR ds:[rsi]
   1400332ef:	ss xor al,0x0
   1400332f2:	add    BYTE PTR [rax],al
   1400332f4:	sub    eax,0x70766f6e
   1400332f9:	imul   eax,DWORD PTR [rax],0x0
   1400332fc:	add    BYTE PTR [rax],al
   1400332fe:	add    BYTE PTR [rax],al
   140033300:	rex.RB pop r8
   140033302:	rex.RB
   140033303:	rex.XB push r13
   140033305:	push   rsp
   140033306:	rex.B
   140033307:	rex.X
   140033308:	rex.WR
   140033309:	rex.RB pop r15
   14003330b:	push   rax
   14003330c:	push   r12
   14003330e:	rex.W add BYTE PTR [rsi],bpl
   140033311:	add    BYTE PTR cs:[rax],al
   140033314:	add    BYTE PTR [rax],al
   140033316:	add    BYTE PTR [rax],al
   140033318:	rex.RX (bad) 
   14003331a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140033322:	fs gs je 0x14003338b
   140033326:	jb     0x140033395
   140033328:	imul   ebp,DWORD PTR [rsi+0x65],0x73616220
   14003332f:	and    BYTE PTR gs:[rdi+0x61],ah
   140033333:	ins    DWORD PTR es:[rdi],dx
   140033334:	and    BYTE PTR gs:[rcx+rbp*2+0x72],ah
   140033339:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003333e:	jns    0x140033360
   140033340:	data16 jb 0x1400333b2
   140033343:	ins    DWORD PTR es:[rdi],dx
   140033344:	and    BYTE PTR [rip+0x6f630073],ah        # 0x1af6633bd
   14003334a:	jb     0x1400333b1
   14003334c:	add    BYTE PTR [rax],al
   14003334e:	add    BYTE PTR [rax],al
   140033350:	push   rax
   140033351:	rex.WR
   140033352:	push   r12
   140033354:	rex.RX
   140033355:	rex.WRXB push r10
   140033357:	rex.WRB add BYTE PTR [r8],r8b
   14003335a:	add    BYTE PTR [rax],al
   14003335c:	add    BYTE PTR [rax],al
   14003335e:	add    BYTE PTR [rax],al
   140033360:	sub    eax,0x746e6f63
   140033365:	outs   dx,BYTE PTR gs:[rsi]
   140033367:	je     0x1400333db
   140033369:	outs   dx,DWORD PTR ds:[rsi]
   14003336a:	outs   dx,DWORD PTR ds:[rsi]
   14003336b:	je     0x14003336d
   14003336d:	add    BYTE PTR [rax],al
   14003336f:	add    BYTE PTR [rsi],ch
   140033371:	cs pop rsp
   140033373:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033376:	je     0x1400333dd
   140033378:	outs   dx,BYTE PTR ds:[rsi]
   140033379:	je     0x14003337b
   14003337b:	add    BYTE PTR [rax],al
   14003337d:	add    BYTE PTR [rax],al
   14003337f:	add    BYTE PTR [rbx+0x4f],al
   140033382:	rex.WRX push rsp
   140033384:	rex.RB
   140033385:	rex.WRX push rsp
   140033387:	push   rdx
   140033388:	rex.WRXB
   140033389:	rex.WRXB push r12
   14003338b:	add    BYTE PTR [rax],al
   14003338d:	add    BYTE PTR [rax],al
   14003338f:	add    BYTE PTR [rdi+0x41],al
   140033392:	rex.WRB
   140033393:	rex.RB push r10
   140033395:	rex.WRXB
   140033396:	rex.WRXB push r12
	...
   1400333a0:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x65747379
   1400333a9:	ins    DWORD PTR es:[rdi],dx
   1400333aa:	add    BYTE PTR [rax],al
   1400333ac:	add    BYTE PTR [rax],al
   1400333ae:	add    BYTE PTR [rax],al
   1400333b0:	push   rbx
   1400333b1:	gs (bad) 
   1400333b3:	jb     0x140033418
   1400333b5:	push   0x68746150
   1400333ba:	jae    0x1400333bc
   1400333bc:	add    BYTE PTR [rax],al
   1400333be:	add    BYTE PTR [rax],al
   1400333c0:	rex.R
   1400333c1:	rex.RB
   1400333c2:	rex.RX
   1400333c3:	push   r13
   1400333c5:	rex.WR push rsp
   1400333c7:	pop    rdi
   1400333c8:	push   rdi
   1400333c9:	push   rdx
   1400333ca:	rex.WB push r12
   1400333cc:	rex.RB pop r15
   1400333ce:	push   rax
   1400333cf:	push   r12
   1400333d1:	rex.W add BYTE PTR [rax],al
   1400333d4:	add    BYTE PTR [rax],al
   1400333d6:	add    BYTE PTR [rax],al
   1400333d8:	sub    eax,0x706d6574
   1400333dd:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400333e0:	je     0x140033447
   1400333e2:	outs   dx,BYTE PTR ds:[rsi]
   1400333e3:	je     0x1400333e5
   1400333e5:	add    BYTE PTR [rax],al
   1400333e7:	add    BYTE PTR [rip+0x6c627570],ch        # 0x1ac65a95d
   1400333ed:	imul   esp,DWORD PTR [rbx+0x63],0x65746e6f
   1400333f4:	outs   dx,BYTE PTR ds:[rsi]
   1400333f5:	je     0x1400333f7
   1400333f7:	add    BYTE PTR [rdi+0x61],ah
   1400333fa:	ins    DWORD PTR es:[rdi],dx
   1400333fb:	gs pop rdi
   1400333fd:	ins    BYTE PTR es:[rdi],dx
   1400333fe:	(bad)  
   1400333ff:	outs   dx,BYTE PTR ds:[rsi]
   140033400:	addr32 jne 0x140033464
   140033403:	add    BYTE PTR gs:[eax],al
   140033407:	add    BYTE PTR [rbp+0x6e],ah
   14003340a:	ins    BYTE PTR es:[edi],dx
   14003340c:	imul   esi,DWORD PTR [rbx+0x68],0x414c2a00
   140033413:	rex.WRX
   140033414:	rex.RXB push r13
   140033416:	rex.B
   140033417:	rex.RXB
   140033418:	sub    r8b,BYTE PTR [r8]
   14003341b:	add    BYTE PTR [rax],al
   14003341d:	add    BYTE PTR [rax],al
   14003341f:	add    BYTE PTR [rcx+0x6e],cl
   140033422:	jbe    0x140033485
   140033424:	ins    BYTE PTR es:[rdi],dx
   140033425:	imul   esp,DWORD PTR [rax+riz*1+0x73],0x63726165
   14003342d:	push   0x74617020
   140033432:	push   0x65707320
   140033437:	movsxd ebp,DWORD PTR [rcx+0x66]
   14003343a:	imul   esp,DWORD PTR [rbp+0x64],0x726f6620
   140033441:	and    BYTE PTR [rdi],ah
   140033443:	addr32 (bad) 
   140033445:	ins    DWORD PTR es:[rdi],dx
   140033446:	gs pop rdi
   140033448:	ins    BYTE PTR es:[rdi],dx
   140033449:	(bad)  
   14003344a:	outs   dx,BYTE PTR ds:[rsi]
   14003344b:	addr32 jne 0x1400334af
   14003344e:	addr32 gs (bad) 
   140033451:	and    BYTE PTR cs:[rbx+0x65],dl
   140033455:	(bad)  
   140033456:	jb     0x1400334bb
   140033458:	push   0x74617020
   14003345d:	push   0x73252720
   140033462:	(bad)  
   140033463:	and    BYTE PTR [rdi+rbp*2+0x65],ah
   140033467:	jae    0x140033489
   140033469:	outs   dx,BYTE PTR ds:[rsi]
   14003346a:	outs   dx,DWORD PTR ds:[rsi]
   14003346b:	je     0x14003348d
   14003346d:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140033470:	je     0x1400334d3
   140033472:	imul   ebp,DWORD PTR [rsi+0x20],0x27732527
   140033479:	or     al,BYTE PTR [rax]
   14003347b:	add    BYTE PTR [rax],al
   14003347d:	add    BYTE PTR [rax],al
   14003347f:	add    BYTE PTR [rbx+0x4f],al
   140033482:	rex.WRX push rsp
   140033484:	rex.RB
   140033485:	rex.WRX push rsp
   140033487:	add    BYTE PTR [rdi+0x61],ah
   14003348a:	ins    DWORD PTR es:[rdi],dx
   14003348b:	gs pop rdi
   14003348d:	ins    BYTE PTR es:[rdi],dx
   14003348e:	outs   dx,DWORD PTR ds:[rsi]
   14003348f:	ja     0x140033507
   140033491:	imul   ebp,DWORD PTR [rdi+0x6c],0x65636e65
	...
   1400334a0:	sub    eax,0x61746f64
   1400334a5:	je     0x14003350c
   1400334a7:	jae    0x14003351d
   1400334a9:	ins    DWORD PTR es:[rdi],dx
   1400334aa:	outs   dx,DWORD PTR ds:[rsi]
   1400334ab:	fs gs ins BYTE PTR es:[rdi],dx
   1400334ae:	jae    0x1400334b0
   1400334b0:	outs   dx,DWORD PTR fs:[rsi]
   1400334b2:	je     0x140033515
   1400334b4:	pop    rdi
   1400334b5:	ins    DWORD PTR es:[rdi],dx
   1400334b6:	outs   dx,DWORD PTR ds:[rsi]
   1400334b7:	fs gs ins BYTE PTR es:[rdi],dx
   1400334ba:	jae    0x14003351b
   1400334bc:	imul   ebp,DWORD PTR [rbp+0x70],0x6574726f
   1400334c3:	add    BYTE PTR fs:[rax],al
   1400334c6:	add    BYTE PTR [rax],al
   1400334c8:	rex.RXB
   1400334c9:	rex.B
   1400334ca:	rex.WRB
   1400334cb:	rex.RB
   1400334cc:	rex.X
   1400334cd:	rex.WB
   1400334ce:	rex.WRX add BYTE PTR [rdx+0x69],r12b
   1400334d2:	outs   dx,BYTE PTR ds:[rsi]
   1400334d3:	add    BYTE PTR [rbp+0x6f],ch
   1400334d6:	add    BYTE PTR fs:[rbp+0x4f],cl
   1400334da:	add    BYTE PTR [rax],r8b
   1400334dd:	add    BYTE PTR [rax],al
   1400334df:	add    BYTE PTR [rcx+0x64],ah
   1400334e2:	outs   dx,DWORD PTR fs:[rsi]
   1400334e4:	outs   dx,BYTE PTR ds:[rsi]
   1400334e5:	jb     0x140033556
   1400334e7:	outs   dx,DWORD PTR ds:[rsi]
   1400334e8:	je     0x1400334ea
   1400334ea:	add    BYTE PTR [rax],al
   1400334ec:	rex.B
   1400334ed:	rex.R
   1400334ee:	rex.R
   1400334ef:	rex.WRXB
   1400334f0:	rex.WRX push rbx
   1400334f2:	add    BYTE PTR [rax],al
   1400334f4:	add    BYTE PTR [rax],al
   1400334f6:	add    BYTE PTR [rax],al
   1400334f8:	rex.XB
   1400334f9:	rex.WRXB
   1400334fa:	rex.WRX push rsp
   1400334fc:	rex.RB
   1400334fd:	rex.WRX push rsp
   1400334ff:	rex.B
   140033500:	rex.R
   140033501:	rex.R
   140033502:	rex.WRXB
   140033503:	rex.WRX push rbx
   140033505:	add    BYTE PTR [rax],al
   140033507:	add    BYTE PTR [rdi+0x72],dh
   14003350a:	imul   esi,DWORD PTR [rbp+riz*2+0x0],0x75700000
   140033512:	(bad)  
   140033513:	ins    BYTE PTR es:[rdi],dx
   140033514:	imul   esp,DWORD PTR [rbx+0x63],0x65746e6f
   14003351b:	outs   dx,BYTE PTR ds:[rsi]
   14003351c:	je     0x14003351e
   14003351e:	add    BYTE PTR [rax],al
   140033520:	pop    rsp
   140033521:	jae    0x140033595
   140033523:	movsxd ebx,DWORD PTR [rbx+rsi*2+0x68]
   140033527:	(bad)  
   140033528:	fs gs jb 0x14003359f
   14003352c:	pop    rsp
   14003352d:	add    BYTE PTR [rax],al
   14003352f:	add    BYTE PTR [rbx+0x48],dl
   140033532:	rex.B
   140033533:	rex.R
   140033534:	rex.RB push r10
   140033536:	pop    rdi
   140033537:	push   rbx
   140033538:	rex.WRXB push r13
   14003353a:	push   rdx
   14003353b:	rex.XB
   14003353c:	rex.RB pop r15
   14003353e:	push   rdx
   14003353f:	rex.WRXB
   140033540:	rex.WRXB push r12
   140033542:	add    BYTE PTR [rax],al
   140033544:	add    BYTE PTR [rax],al
   140033546:	add    BYTE PTR [rax],al
   140033548:	push   rbx
   140033549:	rex.W
   14003354a:	rex.B
   14003354b:	rex.R
   14003354c:	rex.RB push r10
   14003354e:	pop    rdi
   14003354f:	push   rbx
   140033550:	rex.WRXB push r13
   140033552:	push   rdx
   140033553:	rex.XB
   140033554:	rex.RB pop r15
   140033556:	rex.WRB
   140033557:	rex.WRXB
   140033558:	add    BYTE PTR [rax],r8b
   14003355b:	add    BYTE PTR [rax],al
   14003355d:	add    BYTE PTR [rax],al
   14003355f:	add    BYTE PTR [rbx+0x48],dl
   140033562:	rex.B
   140033563:	rex.R
   140033564:	rex.RB push r10
   140033566:	pop    rdi
   140033567:	push   rbx
   140033568:	rex.WRXB push r13
   14003356a:	push   rdx
   14003356b:	rex.XB
   14003356c:	add    BYTE PTR [r8],r8b
   14003356f:	add    BYTE PTR [rbp+0x69],cl
   140033572:	jae    0x1400335e1
   140033574:	(bad)  
   140033575:	je     0x1400335da
   140033577:	push   0x43206465
   14003357c:	push   rsp
   14003357d:	imul   esp,DWORD PTR [rbp+0x72],0x70704132
   140033584:	push   rbx
   140033585:	jns    0x1400335fa
   140033587:	je     0x1400335ee
   140033589:	ins    DWORD PTR es:[rdi],dx
   14003358a:	imul   r12d,DWORD PTR [rbx+0x74],0x65533a3a
   140033592:	je     0x1400335d5
   140033594:	ins    BYTE PTR es:[rdi],dx
   140033595:	ins    BYTE PTR es:[rdi],dx
   140033596:	outs   dx,DWORD PTR ds:[rsi]
   140033597:	ja     0x1400335da
   140033599:	fs outs dx,DWORD PTR fs:[rsi]
   14003359c:	outs   dx,BYTE PTR ds:[rsi]
   14003359d:	rex.XB push 0x65676e61
   1400335a3:	jae    0x1400335c6
   1400335a5:	and    DWORD PTR [rcx],esp
   1400335a7:	or     al,BYTE PTR [rax]
   1400335a9:	add    BYTE PTR [rax],al
   1400335ab:	add    BYTE PTR [rax],al
   1400335ad:	add    BYTE PTR [rax],al
   1400335af:	add    BYTE PTR [rbx+0x54],al
   1400335b2:	imul   esp,DWORD PTR [rbp+0x72],0x70704132
   1400335b9:	push   rbx
   1400335ba:	jns    0x14003362f
   1400335bc:	je     0x140033623
   1400335be:	ins    DWORD PTR es:[rdi],dx
   1400335bf:	imul   r12d,DWORD PTR [rbx+0x74],0x65533a3a
   1400335c7:	je     0x14003360a
   1400335c9:	ins    BYTE PTR es:[rdi],dx
   1400335ca:	ins    BYTE PTR es:[rdi],dx
   1400335cb:	outs   dx,DWORD PTR ds:[rsi]
   1400335cc:	ja     0x14003360f
   1400335ce:	fs outs dx,DWORD PTR fs:[rsi]
   1400335d1:	outs   dx,BYTE PTR ds:[rsi]
   1400335d2:	rex.XB push 0x65676e61
   1400335d8:	jae    0x1400335da
   1400335da:	add    BYTE PTR [rax],al
   1400335dc:	add    BYTE PTR [rax],al
   1400335de:	add    BYTE PTR [rax],al
   1400335e0:	movsxd edi,DWORD PTR [rdx]
   1400335e2:	pop    rsp
   1400335e3:	(bad)  
   1400335e4:	jne    0x14003364f
   1400335e6:	ins    BYTE PTR es:[rdi],dx
   1400335e7:	fs jae 0x140033656
   1400335ea:	(bad)  
   1400335eb:	jbe    0x140033652
   1400335ed:	pop    rsp
   1400335ee:	jae    0x14003365f
   1400335f0:	jne    0x140033664
   1400335f2:	movsxd esp,DWORD PTR [rbp+0x32]
   1400335f5:	pop    rdi
   1400335f6:	outs   dx,DWORD PTR fs:[rsi]
   1400335f8:	je     0x14003365b
   1400335fa:	pop    rdi
   1400335fb:	jb     0x140033662
   1400335fd:	ins    BYTE PTR es:[rdi],dx
   1400335fe:	pop    rdi
   1400335ff:	ja     0x14003366a
   140033601:	outs   dx,BYTE PTR ds:[rsi]
   140033602:	ss xor al,0x5c
   140033605:	(bad)  
   140033606:	jne    0x140033671
   140033608:	ins    BYTE PTR es:[rdi],dx
   140033609:	fs pop rsp
   14003360b:	jae    0x14003367f
   14003360d:	movsxd ebx,DWORD PTR [rax+rsi*2+0x75]
   140033611:	(bad)  
   140033612:	ins    BYTE PTR es:[rdi],dx
   140033613:	imul   esp,DWORD PTR [rbx+0x5c],0x66707061
   14003361a:	jb     0x14003367d
   14003361c:	ins    DWORD PTR es:[rdi],dx
   14003361d:	gs ja  0x14003368f
   140033620:	jb     0x14003368d
   140033622:	pop    rsp
   140033623:	je     0x14003368e
   140033625:	gs jb  0x14003365a
   140033628:	(bad)  
   140033629:	jo     0x14003369b
   14003362b:	cs push 0x41000000
   140033631:	fs outs dx,DWORD PTR fs:[rsi]
   140033634:	outs   dx,BYTE PTR ds:[rsi]
   140033635:	jae    0x14003367a
   140033637:	push   0x65676e61
   14003363c:	rex.R
   14003363d:	gs data16 (bad) 
   140033640:	jne    0x1400336ae
   140033642:	je     0x14003369b
   140033644:	jb     0x1400336af
   140033646:	je     0x1400336ad
   140033648:	push   rax
   140033649:	(bad)  
   14003364a:	je     0x1400336b4
   14003364c:	add    BYTE PTR [rax],al
   14003364e:	add    BYTE PTR [rax],al
   140033650:	rex.RB push r10
   140033652:	push   rdx
   140033653:	rex.WRXB push r10
   140033655:	cmp    ah,BYTE PTR [rax]
   140033657:	pop    rcx
   140033658:	outs   dx,DWORD PTR ds:[rsi]
   140033659:	jne    0x14003367b
   14003365b:	(bad)  
   14003365c:	jb     0x1400336c3
   14003365e:	and    BYTE PTR [rdx+rsi*2+0x79],dh
   140033662:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   140033669:	ins    DWORD PTR es:[rdi],dx
   14003366a:	outs   dx,DWORD PTR ds:[rsi]
   14003366b:	jne    0x1400336db
   14003366d:	je     0x14003368f
   14003366f:	(bad)  
   140033670:	fs outs dx,DWORD PTR fs:[rsi]
   140033673:	outs   dx,BYTE PTR ds:[rsi]
   140033674:	and    BYTE PTR [rdi],ah
   140033676:	and    eax,0x62202773
   14003367b:	jne    0x1400336f1
   14003367d:	and    BYTE PTR [rbx+0x65],dl
   140033680:	je     0x1400336c3
   140033682:	ins    BYTE PTR es:[rdi],dx
   140033683:	ins    BYTE PTR es:[rdi],dx
   140033684:	outs   dx,DWORD PTR ds:[rsi]
   140033685:	ja     0x1400336c8
   140033687:	fs outs dx,DWORD PTR fs:[rsi]
   14003368a:	outs   dx,BYTE PTR ds:[rsi]
   14003368b:	rex.XB push 0x65676e61
   140033691:	jae    0x1400336b3
   140033693:	imul   esi,DWORD PTR [rbx+0x20],0x736c6166
   14003369a:	and    BYTE PTR gs:[rdi+0x68],dh
   14003369e:	imul   esp,DWORD PTR [rbx+0x68],0x6f727020
   1400336a5:	(bad)  
   1400336a7:	(bad)  
   1400336a8:	ins    BYTE PTR es:[rdi],dx
   1400336a9:	jns    0x1400336cb
   1400336ab:	ins    DWORD PTR es:[rdi],dx
   1400336ac:	gs (bad) 
   1400336ae:	outs   dx,BYTE PTR ds:[rsi]
   1400336af:	jae    0x1400336d1
   1400336b1:	jns    0x140033722
   1400336b3:	jne    0x1400336d5
   1400336b5:	jae    0x14003371f
   1400336b7:	outs   dx,DWORD PTR ds:[rsi]
   1400336b8:	jne    0x140033726
   1400336ba:	outs   dx,BYTE PTR fs:[rsi]
   1400336bc:	(bad)  
   1400336bd:	je     0x1400336df
   1400336bf:	(bad)  
   1400336c0:	and    BYTE PTR gs:[rbx+0x61],ah
   1400336c4:	ins    BYTE PTR es:[rdi],dx
   1400336c5:	ins    BYTE PTR es:[rdi],dx
   1400336c6:	imul   ebp,DWORD PTR [rsi+0x67],0x69687420
   1400336cd:	jae    0x1400336ef
   1400336cf:	imul   esi,DWORD PTR fs:[rdx+0x65],0x796c7463
   1400336d7:	or     al,BYTE PTR cs:[rax]
   1400336da:	add    BYTE PTR [rax],al
   1400336dc:	add    BYTE PTR [rax],al
   1400336de:	add    BYTE PTR [rax],al
   1400336e0:	rex.XB push r12
   1400336e2:	imul   esp,DWORD PTR [rbp+0x72],0x70704132
   1400336e9:	push   rbx
   1400336ea:	jns    0x14003375f
   1400336ec:	je     0x140033753
   1400336ee:	ins    DWORD PTR es:[rdi],dx
   1400336ef:	imul   r12d,DWORD PTR [rbx+0x74],0x6f4d3a3a
   1400336f7:	jne    0x140033767
   1400336f9:	je     0x14003373c
   1400336fb:	fs outs dx,DWORD PTR fs:[rsi]
   1400336fe:	outs   dx,BYTE PTR ds:[rsi]
   1400336ff:	add    BYTE PTR [rdi+0x41],dl
   140033702:	push   rdx
   140033703:	rex.WRX
   140033704:	rex.WB
   140033705:	rex.WRX
   140033706:	rex.RXB cmp r12b,BYTE PTR [r8]
   140033709:	pop    rcx
   14003370a:	outs   dx,DWORD PTR ds:[rsi]
   14003370b:	jne    0x14003372d
   14003370d:	(bad)  
   14003370e:	jb     0x140033775
   140033710:	and    BYTE PTR [rdx+rsi*2+0x79],dh
   140033714:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14003371b:	ins    DWORD PTR es:[rdi],dx
   14003371c:	outs   dx,DWORD PTR ds:[rsi]
   14003371d:	jne    0x14003378d
   14003371f:	je     0x140033741
   140033721:	(bad)  
   140033722:	outs   dx,BYTE PTR ds:[rsi]
   140033723:	and    BYTE PTR [rcx+0x64],ah
   140033726:	outs   dx,DWORD PTR fs:[rsi]
   140033728:	outs   dx,BYTE PTR ds:[rsi]
   140033729:	and    BYTE PTR [rdx+0x75],ah
   14003372c:	je     0x14003374e
   14003372e:	push   0x20657661
   140033733:	outs   dx,BYTE PTR ds:[rsi]
   140033734:	outs   dx,DWORD PTR ds:[rsi]
   140033735:	je     0x140033757
   140033737:	jae    0x1400337a9
   140033739:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   14003373d:	imul   esp,DWORD PTR [rbp+0x64],0x206e6120
   140033744:	(bad)  
   140033745:	fs outs dx,DWORD PTR fs:[rsi]
   140033748:	outs   dx,BYTE PTR ds:[rsi]
   140033749:	and    BYTE PTR [rsi+0x61],ch
   14003374c:	ins    DWORD PTR es:[rdi],dx
   14003374d:	and    BYTE PTR gs:[rsi+0x69],dh
   140033751:	(bad)  
   140033752:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140033756:	and    BYTE PTR [rip+0x6f646461],ch        # 0x1af679bbd
   14003375c:	outs   dx,BYTE PTR ds:[rsi]
   14003375d:	and    BYTE PTR [rbx+0x6f],ah
   140033760:	ins    DWORD PTR es:[rdi],dx
   140033761:	ins    DWORD PTR es:[rdi],dx
   140033762:	(bad)  
   140033763:	outs   dx,BYTE PTR ds:[rsi]
   140033764:	and    BYTE PTR fs:[rcx+rbp*2+0x6e],ch
   140033769:	and    BYTE PTR gs:[rdi+0x70],ch
   14003376d:	je     0x1400337d8
   14003376f:	outs   dx,DWORD PTR ds:[rsi]
   140033770:	outs   dx,BYTE PTR ds:[rsi]
   140033771:	or     al,BYTE PTR cs:[rax]
	...
   140033780:	push   rdi
   140033781:	push   r10
   140033783:	rex.WRX
   140033784:	rex.WB
   140033785:	rex.WRX
   140033786:	rex.RXB cmp r12b,BYTE PTR [r8]
   140033789:	pop    rcx
   14003378a:	outs   dx,DWORD PTR ds:[rsi]
   14003378b:	jne    0x1400337ad
   14003378d:	(bad)  
   14003378e:	jb     0x1400337f5
   140033790:	and    BYTE PTR [rdx+rsi*2+0x79],dh
   140033794:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   14003379b:	ins    DWORD PTR es:[rdi],dx
   14003379c:	outs   dx,DWORD PTR ds:[rsi]
   14003379d:	jne    0x14003380d
   14003379f:	je     0x1400337c1
   1400337a1:	(bad)  
   1400337a2:	outs   dx,BYTE PTR ds:[rsi]
   1400337a3:	and    BYTE PTR [rcx+0x64],ah
   1400337a6:	outs   dx,DWORD PTR fs:[rsi]
   1400337a8:	outs   dx,BYTE PTR ds:[rsi]
   1400337a9:	and    BYTE PTR [rax],ch
   1400337ab:	and    eax,0x69202973
   1400337b0:	outs   dx,BYTE PTR ds:[rsi]
   1400337b1:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400337b5:	ins    BYTE PTR es:[rdi],dx
   1400337b6:	jae    0x1400337d8
   1400337b8:	ins    DWORD PTR es:[rdi],dx
   1400337b9:	outs   dx,DWORD PTR ds:[rsi]
   1400337ba:	fs and BYTE PTR gs:[rax+rbp*2+0x61],dh
   1400337c0:	je     0x1400337e2
   1400337c2:	imul   esi,DWORD PTR [rbx+0x20],0x66666964
   1400337c9:	gs jb  0x140033831
   1400337cc:	outs   dx,BYTE PTR ds:[rsi]
   1400337cd:	je     0x1400337ef
   1400337cf:	data16 jb 0x140033841
   1400337d2:	ins    DWORD PTR es:[rdi],dx
   1400337d3:	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400337d7:	and    BYTE PTR [rcx+0x64],ah
   1400337da:	outs   dx,DWORD PTR fs:[rsi]
   1400337dc:	outs   dx,BYTE PTR ds:[rsi]
   1400337dd:	and    BYTE PTR [rdi+rbp*2+0x6f],dh
   1400337e1:	ins    BYTE PTR es:[rdi],dx
   1400337e2:	jae    0x140033804
   1400337e4:	ins    DWORD PTR es:[rdi],dx
   1400337e5:	outs   dx,DWORD PTR ds:[rsi]
   1400337e6:	fs and BYTE PTR gs:[rdi+0x61],dh
   1400337eb:	jae    0x14003380d
   1400337ed:	ins    BYTE PTR es:[rdi],dx
   1400337ee:	(bad)  
   1400337ef:	jne    0x14003385f
   1400337f1:	movsxd ebp,DWORD PTR [rax+0x65]
   1400337f4:	and    BYTE PTR fs:[rdi+0x69],dh
   1400337f8:	je     0x140033862
   1400337fa:	and    BYTE PTR [rax],ch
   1400337fc:	and    eax,0xa2e2973
   140033801:	add    BYTE PTR [rax],al
   140033803:	add    BYTE PTR [rax],al
   140033805:	add    BYTE PTR [rax],al
   140033807:	add    BYTE PTR [rbp+0x6f],cl
   14003380a:	jne    0x14003387a
   14003380c:	je     0x14003384f
   14003380e:	fs outs dx,DWORD PTR fs:[rsi]
   140033811:	outs   dx,BYTE PTR ds:[rsi]
   140033812:	cmp    ah,BYTE PTR [rax]
   140033814:	rex.RX (bad) 
   140033816:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003381e:	imul   bp,WORD PTR [rsi+0x64],0x4120
   140033824:	rex.R
   140033825:	rex.R
   140033826:	rex.WRXB
   140033827:	rex.WRX push rbx
   140033829:	and    BYTE PTR [rbx+0x65],dh
   14003382c:	(bad)  
   14003382d:	jb     0x140033892
   14003382f:	push   0x74617020
   140033834:	push   0x76000a2e
   140033839:	jo     0x1400338a6
   14003383b:	add    BYTE PTR [rbx],bh
   14003383d:	add    BYTE PTR [rax],al
   14003383f:	add    BYTE PTR [rip+0x6b707673],ah        # 0x1ab73aeb8
   140033845:	jae    0x140033876
   140033847:	and    eax,0x70762e73
   14003384c:	imul   eax,DWORD PTR [rax],0x0
   14003384f:	add    BYTE PTR [rbp+0x6f],cl
   140033852:	jne    0x1400338c2
   140033854:	je     0x140033897
   140033856:	fs outs dx,DWORD PTR fs:[rsi]
   140033859:	outs   dx,BYTE PTR ds:[rsi]
   14003385a:	push   rbx
   14003385b:	gs (bad) 
   14003385d:	jb     0x1400338c2
   14003385f:	push   0x68746150
   140033864:	jae    0x1400338a0
   140033866:	and    BYTE PTR [rsi+0x61],al
   140033869:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140033871:	imul   bp,WORD PTR [rsi+0x64],0x4320
   140033877:	rex.WRXB
   140033878:	rex.WRX push rsp
   14003387a:	rex.RB
   14003387b:	rex.WRX push rsp
   14003387d:	rex.B
   14003387e:	rex.R
   14003387f:	rex.R
   140033880:	rex.WRXB
   140033881:	rex.WRX push rbx
   140033883:	and    BYTE PTR [rbx+0x65],dh
   140033886:	(bad)  
   140033887:	jb     0x1400338ec
   140033889:	push   0x74617020
   14003388e:	push   0xa2e
   140033893:	add    BYTE PTR [rax],al
   140033895:	add    BYTE PTR [rax],al
   140033897:	add    BYTE PTR [rbp+0x6e],dl
   14003389a:	ins    DWORD PTR es:[rdi],dx
   14003389b:	outs   dx,DWORD PTR ds:[rsi]
   14003389c:	jne    0x14003390c
   14003389e:	je     0x1400338e1
   1400338a0:	fs outs dx,DWORD PTR fs:[rsi]
   1400338a3:	outs   dx,BYTE PTR ds:[rsi]
   1400338a4:	cmp    ah,BYTE PTR [rax]
   1400338a6:	rex.RX (bad) 
   1400338a8:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400338b0:	imul   bp,WORD PTR [rsi+0x64],0x2520
   1400338b6:	jae    0x1400338d8
   1400338b8:	jae    0x14003391f
   1400338ba:	(bad)  
   1400338bb:	jb     0x140033920
   1400338bd:	push   0x74617020
   1400338c2:	push   0xa2e
	...
   1400338cf:	add    BYTE PTR [rbp+0x52],al
   1400338d2:	push   rdx
   1400338d3:	rex.WRXB push r10
   1400338d5:	cmp    ah,BYTE PTR [rax]
   1400338d7:	pop    rcx
   1400338d8:	outs   dx,DWORD PTR ds:[rsi]
   1400338d9:	jne    0x1400338fb
   1400338db:	(bad)  
   1400338dc:	jb     0x140033943
   1400338de:	and    BYTE PTR [rdx+rsi*2+0x79],dh
   1400338e2:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   1400338e9:	jne    0x140033959
   1400338eb:	ins    DWORD PTR es:[rdi],dx
   1400338ec:	outs   dx,DWORD PTR ds:[rsi]
   1400338ed:	jne    0x14003395d
   1400338ef:	je     0x140033911
   1400338f1:	(bad)  
   1400338f2:	fs outs dx,DWORD PTR fs:[rsi]
   1400338f5:	outs   dx,BYTE PTR ds:[rsi]
   1400338f6:	and    BYTE PTR [rdi],ah
   1400338f8:	and    eax,0x202c2773
   1400338fd:	(bad)  
   1400338fe:	jne    0x140033974
   140033900:	and    BYTE PTR [rbx+0x65],dl
   140033903:	je     0x140033946
   140033905:	ins    BYTE PTR es:[rdi],dx
   140033906:	ins    BYTE PTR es:[rdi],dx
   140033907:	outs   dx,DWORD PTR ds:[rsi]
   140033908:	ja     0x14003394b
   14003390a:	fs outs dx,DWORD PTR fs:[rsi]
   14003390d:	outs   dx,BYTE PTR ds:[rsi]
   14003390e:	rex.XB push 0x65676e61
   140033914:	jae    0x140033936
   140033916:	imul   esi,DWORD PTR [rbx+0x20],0x736c6166
   14003391d:	and    BYTE PTR gs:[rdi+0x68],dh
   140033921:	imul   esp,DWORD PTR [rbx+0x68],0x6f727020
   140033928:	(bad)  
   14003392a:	(bad)  
   14003392b:	ins    BYTE PTR es:[rdi],dx
   14003392c:	jns    0x14003394e
   14003392e:	ins    DWORD PTR es:[rdi],dx
   14003392f:	gs (bad) 
   140033931:	outs   dx,BYTE PTR ds:[rsi]
   140033932:	jae    0x140033954
   140033934:	jns    0x1400339a5
   140033936:	jne    0x140033958
   140033938:	jae    0x1400339a2
   14003393a:	outs   dx,DWORD PTR ds:[rsi]
   14003393b:	jne    0x1400339a9
   14003393d:	and    BYTE PTR fs:[rdx+0x65],ah
   140033941:	and    BYTE PTR [rbp+0x73],dh
   140033944:	imul   ebp,DWORD PTR [rsi+0x67],0x6c616320
   14003394b:	ins    BYTE PTR es:[rdi],dx
   14003394c:	imul   ebp,DWORD PTR [rsi+0x67],0x69687420
   140033953:	jae    0x140033975
   140033955:	imul   esi,DWORD PTR fs:[rdx+0x65],0x796c7463
   14003395d:	or     al,BYTE PTR cs:[rax]
   140033960:	rex.XB push r12
   140033962:	imul   esp,DWORD PTR [rbp+0x72],0x70704132
   140033969:	push   rbx
   14003396a:	jns    0x1400339df
   14003396c:	je     0x1400339d3
   14003396e:	ins    DWORD PTR es:[rdi],dx
   14003396f:	imul   r12d,DWORD PTR [rbx+0x74],0x6e553a3a
   140033977:	ins    DWORD PTR es:[rdi],dx
   140033978:	outs   dx,DWORD PTR ds:[rsi]
   140033979:	jne    0x1400339e9
   14003397b:	je     0x1400339be
   14003397d:	fs outs dx,DWORD PTR fs:[rsi]
   140033980:	outs   dx,BYTE PTR ds:[rsi]
   140033981:	add    BYTE PTR [rax],al
   140033983:	add    BYTE PTR [rax],al
   140033985:	add    BYTE PTR [rax],al
   140033987:	add    BYTE PTR [rdi+0x65],al
   14003398a:	je     0x1400339cd
   14003398c:	fs outs dx,DWORD PTR fs:[rsi]
   14003398f:	outs   dx,BYTE PTR ds:[rsi]
   140033990:	jae    0x1400339d6
   140033992:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140033999:	jns    0x1400339d5
   14003399b:	and    BYTE PTR [rsi+0x61],al
   14003399e:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400339a6:	imul   bp,WORD PTR [rsi+0x64],0x4120
   1400339ac:	rex.R
   1400339ad:	rex.R
   1400339ae:	rex.WRXB
   1400339af:	rex.WRX push rbx
   1400339b1:	and    BYTE PTR [rbx+0x65],dh
   1400339b4:	(bad)  
   1400339b5:	jb     0x140033a1a
   1400339b7:	push   0x74617020
   1400339bc:	push   0x47000a2e
   1400339c1:	gs je  0x140033a05
   1400339c4:	fs outs dx,DWORD PTR fs:[rsi]
   1400339c7:	outs   dx,BYTE PTR ds:[rsi]
   1400339c8:	jae    0x140033a0d
   1400339ca:	outs   dx,DWORD PTR ds:[rsi]
   1400339cb:	outs   dx,BYTE PTR ds:[rsi]
   1400339cc:	je     0x140033a33
   1400339ce:	outs   dx,BYTE PTR ds:[rsi]
   1400339cf:	je     0x140033a15
   1400339d1:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   1400339d8:	jns    0x140033a14
   1400339da:	and    BYTE PTR [rsi+0x61],al
   1400339dd:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   1400339e5:	imul   bp,WORD PTR [rsi+0x64],0x4320
   1400339eb:	rex.WRXB
   1400339ec:	rex.WRX push rsp
   1400339ee:	rex.RB
   1400339ef:	rex.WRX push rsp
   1400339f1:	rex.B
   1400339f2:	rex.R
   1400339f3:	rex.R
   1400339f4:	rex.WRXB
   1400339f5:	rex.WRX push rbx
   1400339f7:	and    BYTE PTR [rbx+0x65],dh
   1400339fa:	(bad)  
   1400339fb:	jb     0x140033a60
   1400339fd:	push   0x74617020
   140033a02:	push   0xa2e
   140033a07:	add    BYTE PTR [rsi+0x70],dh
   140033a0a:	imul   esi,DWORD PTR [rbx+0x0],0x0
   140033a0e:	add    BYTE PTR [rax],al
   140033a10:	sub    ch,BYTE PTR [rsi]
   140033a12:	sub    al,BYTE PTR [rax]
   140033a14:	add    BYTE PTR [rax],al
   140033a16:	add    BYTE PTR [rax],al
   140033a18:	(bad)  
   140033a19:	fs outs dx,DWORD PTR fs:[rsi]
   140033a1c:	outs   dx,BYTE PTR ds:[rsi]
   140033a1d:	imul   ebp,DWORD PTR [rsi+0x66],0x78742e6f
   140033a24:	je     0x140033a26
   140033a26:	add    BYTE PTR [rax],al
   140033a28:	cs jbe 0x140033a9b
   140033a2b:	imul   eax,DWORD PTR [rax],0x0
   140033a2e:	add    BYTE PTR [rax],al
   140033a30:	(bad)  
   140033a31:	addr32 (bad) 
   140033a33:	ins    DWORD PTR es:[rdi],dx
   140033a34:	gs (bad) 
   140033a36:	outs   dx,DWORD PTR fs:[rsi]
   140033a38:	je     0x140033a9b
   140033a3a:	pop    rdi
   140033a3b:	(bad)  
   140033a3c:	fs outs dx,DWORD PTR fs:[rsi]
   140033a3f:	outs   dx,BYTE PTR ds:[rsi]
   140033a40:	jae    0x140033a71
   140033a42:	and    eax,0x2f73
   140033a47:	add    BYTE PTR [rip+0x6f646461],ch        # 0x1af679eae
   140033a4d:	outs   dx,BYTE PTR ds:[rsi]
   140033a4e:	pop    rdi
   140033a4f:	jo     0x140033ab2
   140033a51:	je     0x140033abb
   140033a53:	add    BYTE PTR [rax],al
   140033a55:	add    BYTE PTR [rax],al
   140033a57:	add    BYTE PTR [rcx+0x64],al
   140033a5a:	rex.WRXB outs dx,BYTE PTR fs:[rsi]
   140033a5d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140033a5f:	outs   dx,WORD PTR ds:[rsi]
   140033a61:	add    BYTE PTR [rax],al
   140033a63:	add    BYTE PTR [rax],al
   140033a65:	add    BYTE PTR [rax],al
   140033a67:	add    BYTE PTR [rbp+0x61],ch
   140033a6a:	jo     0x140033adf
   140033a6c:	(bad)  
   140033a6d:	sub    ch,BYTE PTR [rsi]
   140033a6f:	sub    al,BYTE PTR [rax]
   140033a71:	add    BYTE PTR [rax],al
   140033a73:	add    BYTE PTR [rbp+0x61],ch
   140033a76:	jo     0x140033aeb
   140033a78:	add    BYTE PTR [rax],al
   140033a7a:	add    BYTE PTR [rax],al
   140033a7c:	ins    DWORD PTR es:[rdi],dx
   140033a7d:	(bad)  
   140033a7e:	jo     0x140033af3
   140033a80:	(bad)  
   140033a81:	add    BYTE PTR [rax],al
   140033a83:	add    BYTE PTR [rax],al
   140033a85:	add    BYTE PTR [rax],al
   140033a87:	add    BYTE PTR [rsi+0x6f],cl
   140033a8a:	and    BYTE PTR [rsi+0x69],ah
   140033a8d:	ins    BYTE PTR es:[rdi],dx
   140033a8e:	gs jae 0x140033ab1
   140033a91:	ins    DWORD PTR es:[rdi],dx
   140033a92:	(bad)  
   140033a93:	je     0x140033af8
   140033a95:	push   0x65707320
   140033a9a:	movsxd ebp,DWORD PTR [rcx+0x66]
   140033a9d:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140033aa4:	and    BYTE PTR [rdx],ah
   140033aa6:	and    eax,0xa212273
   140033aab:	add    BYTE PTR [rax],al
   140033aad:	add    BYTE PTR [rax],al
   140033aaf:	add    BYTE PTR [rdx+0x65],dh
   140033ab2:	movsxd esi,DWORD PTR [rbp+0x72]
   140033ab5:	jae    0x140033b20
   140033ab7:	jbe    0x140033b1e
   140033ab9:	add    BYTE PTR [rax],al
   140033abb:	add    BYTE PTR [rax],al
   140033abd:	add    BYTE PTR [rax],al
   140033abf:	add    BYTE PTR [rsi+0x6f],ch
   140033ac2:	outs   dx,BYTE PTR ds:[rsi]
   140033ac3:	jb     0x140033b2a
   140033ac5:	movsxd esi,DWORD PTR [rbp+0x72]
   140033ac8:	jae    0x140033b33
   140033aca:	jbe    0x140033b31
   140033acc:	add    BYTE PTR [rax],al
   140033ace:	add    BYTE PTR [rax],al
   140033ad0:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140033ad2:	jne    0x140033b42
   140033ad4:	and    BYTE PTR fs:[rip+0x69662075],ah        # 0x1a9695b50
   140033adb:	ins    BYTE PTR es:[rdi],dx
   140033adc:	sub    BYTE PTR gs:[rbx+0x29],dh
   140033ae0:	and    BYTE PTR [rbp+0x61],ch
   140033ae3:	je     0x140033b48
   140033ae5:	push   0x20676e69
   140033aea:	and    eax,0x70732073
   140033aef:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140033af3:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140033afa:	and    BYTE PTR [rdx],ah
   140033afc:	and    eax,0xa2273
   140033b01:	add    BYTE PTR [rax],al
   140033b03:	add    BYTE PTR [rax],al
   140033b05:	add    BYTE PTR [rax],al
   140033b07:	add    BYTE PTR [rbp+0x73],dl
   140033b0a:	(bad)  
   140033b0b:	cmp    ah,BYTE PTR gs:[eax]
   140033b0f:	jbe    0x140033b81
   140033b11:	movsxd esp,DWORD PTR [rsi+0x5f]
   140033b14:	je     0x140033b85
   140033b16:	pop    rdi
   140033b17:	imul   esi,DWORD PTR [rsi+0x33],0x20
   140033b1b:	pop    rbx
   140033b1c:	outs   dx,DWORD PTR ds:[rsi]
   140033b1d:	jo     0x140033b93
   140033b1f:	imul   ebp,DWORD PTR [rdi+0x6e],0x3c205d73
   140033b26:	imul   bp,WORD PTR [rbp+riz*2+0x73],0xa3e
   140033b2d:	add    BYTE PTR [rax],al
   140033b2f:	add    BYTE PTR [rdi+0x70],cl
   140033b32:	je     0x140033b9d
   140033b34:	outs   dx,DWORD PTR ds:[rsi]
   140033b35:	outs   dx,BYTE PTR ds:[rsi]
   140033b36:	jae    0x140033b72
   140033b38:	or     al,BYTE PTR [rax]
   140033b3a:	add    BYTE PTR [rax],al
   140033b3c:	add    BYTE PTR [rax],al
   140033b3e:	add    BYTE PTR [rax],al
   140033b40:	or     DWORD PTR [rip+0x56203a76],ebp        # 0x1962375bc
   140033b46:	gs jb  0x140033bab
   140033b49:	outs   dx,DWORD PTR ds:[rsi]
   140033b4a:	jae    0x140033bb1
   140033b4c:	and    BYTE PTR [rbp+0x6f],ch
   140033b4f:	fs gs or al,BYTE PTR cs:[rax]
   140033b54:	add    BYTE PTR [rax],al
   140033b56:	add    BYTE PTR [rax],al
   140033b58:	or     DWORD PTR [rip+0x57203a72],ebp        # 0x1972375d0
   140033b5e:	imul   ebp,DWORD PTR [rsp+riz*2+0x63],0x20647261
   140033b66:	jo     0x140033bc9
   140033b68:	je     0x140033bde
   140033b6a:	gs jb  0x140033bdb
   140033b6d:	jae    0x140033b8f
   140033b6f:	ja     0x140033bda
   140033b71:	ins    BYTE PTR es:[rdi],dx
   140033b72:	ins    BYTE PTR es:[rdi],dx
   140033b73:	and    BYTE PTR [rdx+0x65],dh
   140033b76:	movsxd esi,DWORD PTR [rbp+0x72]
   140033b79:	jae    0x140033be0
   140033b7b:	and    BYTE PTR [rcx+0x6e],ch
   140033b7e:	je     0x140033bef
   140033b80:	and    BYTE PTR [rbx+0x75],dh
   140033b83:	(bad)  
   140033b84:	outs   dx,WORD PTR ds:[rsi]
   140033b86:	ins    BYTE PTR es:[rdi],dx
   140033b87:	fs gs jb 0x140033bfe
   140033b8b:	or     al,BYTE PTR cs:[rax]
   140033b8e:	add    BYTE PTR [rax],al
   140033b90:	or     DWORD PTR [rip+0x4f203a73],ebp        # 0x18f237609
   140033b96:	outs   dx,BYTE PTR ds:[rsi]
   140033b97:	ins    BYTE PTR es:[rdi],dx
   140033b98:	jns    0x140033bba
   140033b9a:	ins    BYTE PTR es:[rdi],dx
   140033b9b:	imul   esi,DWORD PTR [rbx+0x74],0x65687420
   140033ba2:	and    BYTE PTR [rsi+0x69],ah
   140033ba5:	ins    BYTE PTR es:[rdi],dx
   140033ba6:	gs jae 0x140033bc9
   140033ba9:	je     0x140033c13
   140033bab:	(bad)  
   140033bac:	je     0x140033bce
   140033bae:	ja     0x140033c1f
   140033bb0:	jne    0x140033c1e
   140033bb2:	and    BYTE PTR fs:[rdx+0x65],ah
   140033bb6:	and    BYTE PTR [rcx+0x66],ah
   140033bb9:	movsxd si,DWORD PTR gs:[rbp+riz*2+0x64]
   140033bbf:	sub    al,0x20
   140033bc1:	outs   dx,DWORD PTR fs:[rsi]
   140033bc3:	outs   dx,BYTE PTR ds:[rsi]
   140033bc4:	(bad)  
   140033bc5:	je     0x140033be7
   140033bc7:	jo     0x140033c3b
   140033bc9:	outs   dx,DWORD PTR ds:[rsi]
   140033bca:	movsxd esp,DWORD PTR [rbp+0x73]
   140033bcd:	jae    0x140033bef
   140033bcf:	je     0x140033c39
   140033bd1:	gs ins DWORD PTR es:[rdi],dx
   140033bd3:	or     al,BYTE PTR cs:[rax]
   140033bd6:	add    BYTE PTR [rax],al
   140033bd8:	sub    eax,0x2d000068
   140033bdd:	jb     0x140033bdf
   140033bdf:	add    BYTE PTR [rip+0x2d000076],ch        # 0x16d033c5b
   140033be5:	jae    0x140033be7
   140033be7:	add    BYTE PTR [rsi+0x6f],cl
   140033bea:	and    BYTE PTR [rsi+0x69],ah
   140033bed:	ins    BYTE PTR es:[rdi],dx
   140033bee:	gs jae 0x140033c11
   140033bf1:	outs   dx,WORD PTR ds:[rsi]
   140033bf3:	jne    0x140033c63
   140033bf5:	fs (bad) 
   140033bf7:	jae    0x140033c69
   140033bf9:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140033bfd:	imul   esp,DWORD PTR [rbp+0x64],0xa2e
   140033c04:	add    BYTE PTR [rax],al
   140033c06:	add    BYTE PTR [rax],al
   140033c08:	or     al,BYTE PTR [rsi+0x69]
   140033c0b:	ins    BYTE PTR es:[rdi],dx
   140033c0c:	gs jae 0x140033c2f
   140033c0f:	je     0x140033c79
   140033c11:	(bad)  
   140033c12:	je     0x140033c34
   140033c14:	ja     0x140033c85
   140033c16:	jne    0x140033c84
   140033c18:	and    BYTE PTR fs:[rdx+0x65],ah
   140033c1c:	and    BYTE PTR [rcx+0x66],ah
   140033c1f:	movsxd si,DWORD PTR gs:[rbp+riz*2+0x64]
   140033c25:	cmp    cl,BYTE PTR [rdx]
   140033c27:	add    BYTE PTR [rcx],cl
   140033c29:	and    eax,0xa73
   140033c2e:	add    BYTE PTR [rax],al
   140033c30:	ins    DWORD PTR es:[rdi],dx
   140033c31:	(bad)  
   140033c32:	imul   ebp,DWORD PTR [rsi+0x0],0x0
   140033c39:	add    BYTE PTR [rax],al
   140033c3b:	add    BYTE PTR [rax],al
   140033c3d:	add    BYTE PTR [rax],al
   140033c3f:	add    BYTE PTR [rbx+0x3a],ah
   140033c42:	pop    rsp
   140033c43:	(bad)  
   140033c44:	jne    0x140033caf
   140033c46:	ins    BYTE PTR es:[rdi],dx
   140033c47:	fs jae 0x140033cb6
   140033c4a:	(bad)  
   140033c4b:	jbe    0x140033cb2
   140033c4d:	pop    rsp
   140033c4e:	jae    0x140033cbf
   140033c50:	jne    0x140033cc4
   140033c52:	movsxd esp,DWORD PTR [rbp+0x32]
   140033c55:	pop    rdi
   140033c56:	outs   dx,DWORD PTR fs:[rsi]
   140033c58:	je     0x140033cbb
   140033c5a:	pop    rdi
   140033c5b:	jb     0x140033cc2
   140033c5d:	ins    BYTE PTR es:[rdi],dx
   140033c5e:	pop    rdi
   140033c5f:	ja     0x140033cca
   140033c61:	outs   dx,BYTE PTR ds:[rsi]
   140033c62:	ss xor al,0x5c
   140033c65:	(bad)  
   140033c66:	jne    0x140033cd1
   140033c68:	ins    BYTE PTR es:[rdi],dx
   140033c69:	fs pop rsp
   140033c6b:	jae    0x140033cdf
   140033c6d:	movsxd ebx,DWORD PTR [rbp+rsi*2+0x74]
   140033c71:	imul   ebp,DWORD PTR [rbx+rsi*2+0x5c],0x66637076
   140033c79:	pop    rdi
   140033c7a:	je     0x140033ceb
   140033c7c:	pop    rdi
   140033c7d:	imul   esi,DWORD PTR [rsi+0x33],0x5c
   140033c81:	ins    DWORD PTR es:[rdi],dx
   140033c82:	(bad)  
   140033c83:	imul   ebp,DWORD PTR [rsi+0x2e],0x707063
   140033c8a:	add    BYTE PTR [rax],al
   140033c8c:	add    BYTE PTR [rax],al
   140033c8e:	add    BYTE PTR [rax],al
   140033c90:	rex.WRB
   140033c91:	rex.WB
   140033c92:	rex.WRX
   140033c93:	rex.WB
   140033c94:	rex.R push rbp
   140033c96:	rex.WRB push r8
   140033c98:	pop    rdi
   140033c99:	push   rdi
   140033c9a:	push   rdx
   140033c9b:	push   r8
   140033c9d:	pop    rdi
   140033c9e:	rex.XB
   140033c9f:	rex.WRXB
   140033ca0:	rex.R
   140033ca1:	cmp    r12b,BYTE PTR [r8]
   140033ca4:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140033ca6:	je     0x140033d0d
   140033ca8:	jb     0x140033d13
   140033caa:	outs   dx,BYTE PTR ds:[rsi]
   140033cab:	and    BYTE PTR [ebx+0x25],bl
   140033caf:	jae    0x140033cd9
   140033cb1:	and    eax,0x253a2975
   140033cb6:	jae    0x140033cf2
   140033cb8:	pop    rbp
   140033cb9:	or     al,BYTE PTR [rax]
   140033cbb:	add    BYTE PTR [rax],al
   140033cbd:	add    BYTE PTR [rax],al
   140033cbf:	add    BYTE PTR [rbp+0x49],cl
   140033cc2:	rex.WRX
   140033cc3:	rex.WB
   140033cc4:	rex.R push rbp
   140033cc6:	rex.WRB push r8
   140033cc8:	pop    rdi
   140033cc9:	push   rdi
   140033cca:	push   rdx
   140033ccb:	push   r8
   140033ccd:	pop    rdi
   140033cce:	rex.XB
   140033ccf:	rex.WRXB
   140033cd0:	rex.R
   140033cd1:	cmp    r12b,BYTE PTR [r8]
   140033cd4:	push   rdi
   140033cd5:	jb     0x140033d38
   140033cd7:	jo     0x140033d49
   140033cd9:	gs and BYTE PTR fs:[rbp+0x78],ah
   140033cde:	movsxd esi,DWORD PTR gs:[rbp+0x74]
   140033ce2:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d00000a
   140033ce9:	rex.WB
   140033cea:	rex.WRX
   140033ceb:	rex.WB
   140033cec:	rex.R push rbp
   140033cee:	rex.WRB push r8
   140033cf0:	pop    rdi
   140033cf1:	push   rdi
   140033cf2:	push   rdx
   140033cf3:	push   r8
   140033cf5:	pop    rdi
   140033cf6:	rex.XB
   140033cf7:	rex.WRXB
   140033cf8:	rex.R
   140033cf9:	cmp    r12b,BYTE PTR [r8]
   140033cfc:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140033cfe:	and    BYTE PTR [rdi+0x5f],bl
   140033d01:	gs js  0x140033d67
   140033d04:	gs jo  0x140033d7b
   140033d07:	and    BYTE PTR [rdx+0x6c],ah
   140033d0a:	outs   dx,DWORD PTR ds:[rsi]
   140033d0b:	movsxd ebp,DWORD PTR [rbx+0xa]
   140033d0e:	add    BYTE PTR [rax],al
   140033d10:	push   rbx
   140033d11:	movsxd ebp,DWORD PTR [rax+0x65]
   140033d14:	ins    DWORD PTR es:[rdi],dx
   140033d15:	(bad)  
   140033d16:	push   rbx
   140033d17:	jns    0x140033d8c
   140033d19:	je     0x140033d80
   140033d1b:	ins    DWORD PTR es:[rdi],dx
   140033d1c:	pop    rdi
   140033d1d:	xor    BYTE PTR [rax],dh
   140033d1f:	xor    DWORD PTR [rax],eax
   140033d21:	add    BYTE PTR [rax],al
   140033d23:	add    BYTE PTR [rax],al
   140033d25:	add    BYTE PTR [rax],al
   140033d27:	add    BYTE PTR [rbx+0x63],dh
   140033d2a:	push   0x73616d65
   140033d2f:	jns    0x140033da4
   140033d31:	je     0x140033d98
   140033d33:	ins    DWORD PTR es:[rdi],dx
   140033d34:	add    BYTE PTR [rax],al
   140033d36:	add    BYTE PTR [rax],al
   140033d38:	push   rsi
   140033d39:	push   rax
   140033d3a:	xor    al,0x30
   140033d3c:	xor    BYTE PTR [rbx],dh
   140033d3e:	add    BYTE PTR [rax],al
   140033d40:	jo     0x140033d76
   140033d42:	ins    BYTE PTR es:[rdi],dx
   140033d43:	imul   esp,DWORD PTR [rdx+0x0],0x0
   140033d4a:	add    BYTE PTR [rax],al
   140033d4c:	add    BYTE PTR [rax],al
   140033d4e:	add    BYTE PTR [rax],al
   140033d50:	rex.RX ins DWORD PTR es:[rdi],dx
   140033d52:	je     0x140033da7
   140033d54:	je     0x140033dc8
   140033d56:	push   rsi
   140033d57:	push   rbx
   140033d58:	rex.WRX push rax
   140033d5a:	jb     0x140033dc5
   140033d5c:	outs   dx,BYTE PTR ds:[rsi]
   140033d5d:	je     0x140033dc5
   140033d5f:	and    BYTE PTR [rdx+rsi*2+0x75],dh
   140033d63:	outs   dx,BYTE PTR ds:[rsi]
   140033d64:	movsxd esp,DWORD PTR [rcx+0x74]
   140033d67:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   140033d6d:	and    eax,0x69772064
   140033d72:	je     0x140033ddc
   140033d74:	outs   dx,DWORD PTR ds:[rsi]
   140033d75:	jne    0x140033deb
   140033d77:	and    BYTE PTR [rcx+0x55],dl
   140033d7a:	rex.WB
   140033d7b:	rex.RB push r12
   140033d7d:	pop    rdi
   140033d7e:	push   rsp
   140033d7f:	push   rdx
   140033d80:	push   rbp
   140033d81:	rex.WRX
   140033d82:	rex.XB
   140033d83:	push   r12
   140033d85:	rex.WB
   140033d86:	rex.WRXB
   140033d87:	rex.WRX and BYTE PTR [rbx+0x70],r14b
   140033d8b:	movsxd ebp,DWORD PTR gs:[rcx+0x66]
   140033d8f:	imul   esp,DWORD PTR [rbp+0x64],0x74532021
   140033d96:	jb     0x140033e01
   140033d98:	outs   dx,BYTE PTR ds:[rsi]
   140033d99:	cmp    ah,BYTE PTR [eax]
   140033d9c:	and    ah,BYTE PTR [rip+0xa2273]        # 0x1400d6015
   140033da2:	add    BYTE PTR [rax],al
   140033da4:	add    BYTE PTR [rax],al
   140033da6:	add    BYTE PTR [rax],al
   140033da8:	cmp    al,0x7f
   140033daa:	sbb    al,0xe2
   140033dac:	xor    ecx,DWORD PTR [rdx+0x779941c5]
   140033db2:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140033db3:	ins    DWORD PTR es:[rdi],dx
   140033db4:	cmp    dh,BYTE PTR [rdx]
   140033db6:	stos   BYTE PTR es:[rdi],al
   140033db7:	or     eax,0x74786574
   140033dbc:	add    BYTE PTR [rax],al
   140033dbe:	add    BYTE PTR [rax],al
   140033dc0:	add    BYTE PTR [rip+0xfffffffff7d81b86],al        # 0x137db594c
   140033dc6:	rol    DWORD PTR [rax-0x53],0x82
   140033dca:	jne    0x140033d70
   140033dcc:	(bad)  
   140033dcd:	addr32 out 0x14,eax
   140033dd0:	(bad)  
   140033dd1:	imul   ebp,DWORD PTR [rsi+0x61],0x7972
   140033dd8:	rex.RX sbb r15b,BYTE PTR [rcx-0x6b]
   140033ddc:	mov    esp,0xa74f6c95
   140033de1:	or     eax,DWORD PTR [rip+0xffffffffdfb7a1bc]        # 0x11fbadfa3
   140033de7:	shl    BYTE PTR [rdx+0x69],cl
   140033dea:	outs   dx,BYTE PTR ds:[rsi]
   140033deb:	(bad)  
   140033dec:	jb     0x140033e67
   140033dee:	pop    rdi
   140033def:	(bad)  
   140033df1:	add    BYTE PTR [rax],al
   140033df3:	add    BYTE PTR [rax],al
   140033df5:	add    BYTE PTR [rax],al
   140033df7:	add    BYTE PTR [rsi+rdx*1+0x12],bh
   140033dfb:	je     0x140033de6
   140033dfd:	(bad)  
   140033dfe:	cwde   
   140033dff:	rex.RX scas eax,DWORD PTR es:[rdi]
   140033e01:	repnz out 0x3e,al
   140033e04:	mov    ch,0x90
   140033e06:	(bad)  
   140033e07:	out    0x67,eax
   140033e09:	outs   dx,BYTE PTR gs:[rsi]
   140033e0b:	gs jb  0x140033e77
   140033e0e:	movsxd eax,DWORD PTR [rax]
   140033e10:	adc    edi,esi
   140033e12:	xchg   edx,eax
   140033e13:	sbb    eax,0x44923c51
   140033e18:	lahf   
   140033e19:	and    dl,BYTE PTR [rsi+0x35a88c2e]
   140033e1f:	je     0x140033e75
   140033e21:	gs jae 0x140033e98
   140033e24:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140033e26:	jb     0x140033e95
   140033e28:	(bad)  
   140033e29:	je     0x140033e6c
   140033e2b:	add    BYTE PTR [rax],al
   140033e2d:	add    BYTE PTR [rax],al
   140033e2f:	add    BYTE PTR [rcx+rbx*8-0x61],dl
   140033e33:	mov    ebp,ss
   140033e35:	(bad)  
   140033e36:	in     al,dx
   140033e37:	rex.WRB mov BYTE PTR [r8+0x16],r14b
   140033e3b:	rol    BYTE PTR [rcx-0x1f],1
   140033e3e:	cmp    BYTE PTR [rax+0x54],bh
   140033e41:	gs jae 0x140033eb8
   140033e44:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140033e46:	jb     0x140033eb5
   140033e48:	(bad)  
   140033e49:	je     0x140033e8d
   140033e4b:	add    BYTE PTR [rax],al
   140033e4d:	add    BYTE PTR [rax],al
   140033e4f:	add    BYTE PTR [rcx],bh
   140033e51:	sub    al,0x37
   140033e53:	mov    esi,0x45fa4063
   140033e58:	movabs eax,ds:0x5498675d0717d658
   140033e61:	gs jae 0x140033ed8
   140033e64:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140033e66:	jb     0x140033ed5
   140033e68:	(bad)  
   140033e69:	je     0x140033eae
   140033e6b:	add    BYTE PTR [rax],al
   140033e6d:	add    BYTE PTR [rax],al
   140033e6f:	add    BYTE PTR [rax+0x5456ee5e],ch
   140033e75:	jnp    0x140033e02
   140033e77:	rex.WX test rax,0x67a1acfd
   140033e7d:	rex fist WORD PTR [rbp+riz*2+0x73]
   140033e83:	je     0x140033ecb
   140033e85:	outs   dx,DWORD PTR ds:[rsi]
   140033e86:	jb     0x140033ef5
   140033e88:	(bad)  
   140033e89:	je     0x140033ecf
   140033e8b:	add    BYTE PTR [rax],al
   140033e8d:	add    BYTE PTR [rax],al
   140033e8f:	add    BYTE PTR [rdi+0x5],bl
   140033e92:	sub    ah,BYTE PTR [rdx-0x7f]
   140033e95:	rex.RXB
   140033e96:	rex.WXB
   140033e97:	rex.WRX lahf 
   140033e99:	and    bl,dh
   140033e9b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140033e9c:	fs pop rbx
   140033e9e:	in     al,0xf4
   140033ea0:	push   rsp
   140033ea1:	gs jae 0x140033f18
   140033ea4:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140033ea6:	jb     0x140033f15
   140033ea8:	(bad)  
   140033ea9:	je     0x140033ef0
   140033eab:	add    BYTE PTR [rax],al
   140033ead:	add    BYTE PTR [rax],al
   140033eaf:	add    BYTE PTR [rdi+0x41],dl
   140033eb2:	push   rdx
   140033eb3:	rex.WRX
   140033eb4:	rex.WB
   140033eb5:	rex.WRX
   140033eb6:	rex.RXB cmp r12b,BYTE PTR [r8]
   140033eb9:	rex.X (bad) 
   140033ebb:	and    BYTE PTR fs:[rdx+0x65],dh
   140033ebf:	jae    0x140033f30
   140033ec1:	jne    0x140033f35
   140033ec3:	movsxd esp,DWORD PTR [rbp+0x20]
   140033ec6:	jb     0x140033f2d
   140033ec8:	data16 gs jb 0x140033f31
   140033ecc:	outs   dx,BYTE PTR ds:[rsi]
   140033ecd:	movsxd esp,DWORD PTR [rbp+0x20]
   140033ed0:	and    ah,BYTE PTR [rip+0xa212273]        # 0x14a246149
   140033ed6:	add    BYTE PTR [rax],al
   140033ed8:	push   rsi
   140033ed9:	push   rax
   140033eda:	rex.XB
   140033edb:	and    BYTE PTR [rdi+r13*2+0x20],r14b
   140033ee0:	rex.WXB push r14
   140033ee2:	xor    esp,DWORD PTR [rax]
   140033ee4:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033ee6:	outs   dx,BYTE PTR ds:[rsi]
   140033ee7:	jbe    0x140033f4e
   140033ee9:	jb     0x140033f5e
   140033eeb:	imul   ebp,DWORD PTR [rdi+0x6e],0x74754120
   140033ef2:	outs   dx,DWORD PTR ds:[rsi]
   140033ef3:	sub    eax,0x63656843
   140033ef8:	imul   ebp,DWORD PTR [rdi+0x75],0x74
   140033efc:	add    BYTE PTR [rax],al
   140033efe:	add    BYTE PTR [rax],al
   140033f00:	jo     0x140033f63
   140033f02:	jb     0x140033f78
   140033f04:	imul   esp,DWORD PTR [rbx+0x6c],0x7365
   140033f0b:	add    BYTE PTR [rax],al
   140033f0d:	add    BYTE PTR [rax],al
   140033f0f:	add    BYTE PTR [rip+0x202d2073],ah        # 0x160305f88
   140033f15:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140033f17:	jne    0x140033f85
   140033f19:	and    BYTE PTR fs:[rsi+0x6f],ch
   140033f1d:	je     0x140033f3f
   140033f1f:	jb     0x140033f86
   140033f21:	(bad)  
   140033f22:	and    BYTE PTR fs:[rsi+0x69],ah
   140033f26:	ins    BYTE PTR es:[rdi],dx
   140033f27:	gs or  al,BYTE PTR cs:[rax]
   140033f2b:	add    BYTE PTR [rax],al
   140033f2d:	add    BYTE PTR [rax],al
   140033f2f:	add    BYTE PTR [rip+0x202d2073],ah        # 0x160305fa8
   140033f35:	rex.RB jb 0x140033faa
   140033f38:	outs   dx,DWORD PTR ds:[rsi]
   140033f39:	jb     0x140033f5b
   140033f3b:	ins    BYTE PTR es:[rdi],dx
   140033f3c:	outs   dx,DWORD PTR ds:[rsi]
   140033f3d:	(bad)  
   140033f3e:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x33766b20
   140033f46:	and    BYTE PTR [rcx+riz*2+0x74],ah
   140033f4a:	(bad)  
   140033f4b:	cmp    ah,BYTE PTR [rax]
   140033f4d:	and    ah,BYTE PTR [rip+0xa2273]        # 0x1400d61c6
   140033f53:	add    BYTE PTR [rax],al
   140033f55:	add    BYTE PTR [rax],al
   140033f57:	add    BYTE PTR [rbx+0x50],al
   140033f5a:	(bad)  
   140033f5b:	jb     0x140033fd1
   140033f5d:	imul   esp,DWORD PTR [rbx+0x6c],0x73795365
   140033f64:	je     0x140033fcb
   140033f66:	ins    DWORD PTR es:[rdi],dx
   140033f67:	rex.R
   140033f68:	imul   bp,WORD PTR gs:[rsi+0x69],0x6974
   140033f6f:	outs   dx,DWORD PTR ds:[rsi]
   140033f70:	outs   dx,BYTE PTR ds:[rsi]
   140033f71:	add    BYTE PTR [rax],al
   140033f73:	add    BYTE PTR [rax],al
   140033f75:	add    BYTE PTR [rax],al
   140033f77:	add    BYTE PTR [rip+0x202d2073],ah        # 0x160305ff0
   140033f7d:	rex.RB jb 0x140033ff2
   140033f80:	outs   dx,DWORD PTR ds:[rsi]
   140033f81:	jb     0x140033fa3
   140033f83:	ja     0x140033ff7
   140033f85:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x766b2067
   140033f8d:	xor    esp,DWORD PTR [rax]
   140033f8f:	fs (bad) 
   140033f91:	je     0x140033ff4
   140033f93:	cmp    ah,BYTE PTR [rax]
   140033f95:	and    ah,BYTE PTR [rip+0xa2273]        # 0x1400d620e
   140033f9b:	add    BYTE PTR [rax],al
   140033f9d:	add    BYTE PTR [rax],al
   140033f9f:	add    BYTE PTR [rip+0x202d2073],ah        # 0x160306018
   140033fa5:	rex.RB jb 0x14003401a
   140033fa8:	outs   dx,DWORD PTR ds:[rsi]
   140033fa9:	jb     0x140033fcb
   140033fab:	ja     0x14003401f
   140033fad:	imul   esi,DWORD PTR [rcx+rbp*2+0x6e],0x69662067
   140033fb5:	ins    BYTE PTR es:[rdi],dx
   140033fb6:	gs or  al,BYTE PTR cs:[rax]
   140033fba:	add    BYTE PTR [rax],al
   140033fbc:	add    BYTE PTR [rax],al
   140033fbe:	add    BYTE PTR [rax],al
   140033fc0:	jbe    0x140034032
   140033fc2:	movsxd bx,DWORD PTR [rdi+0x74]
   140033fc6:	outs   dx,DWORD PTR ds:[rsi]
   140033fc7:	pop    rdi
   140033fc8:	imul   esi,DWORD PTR [rsi+0x33],0x3a
   140033fcc:	and    BYTE PTR [rip+0x202d2073],ah        # 0x160306045
   140033fd2:	rex.WRXB
   140033fd3:	rex.WXB and QWORD PTR [r10],rcx
   140033fd6:	add    BYTE PTR [rax],al
   140033fd8:	jo     0x14003404f
   140033fda:	jb     0x140034041
   140033fdc:	movsxd esp,DWORD PTR [rcx+0x6c]
   140033fdf:	ins    BYTE PTR es:[rdi],dx
	...
   140033fe8:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   140033fef:	pop    rdi
   140033ff0:	jo     0x140034053
   140033ff2:	jb     0x140034055
   140033ff4:	ins    DWORD PTR es:[rdi],dx
   140033ff5:	gs je  0x14003405d
   140033ff8:	jb     0x140033ffa
   140033ffa:	add    BYTE PTR [rax],al
   140033ffc:	add    BYTE PTR [rax],al
   140033ffe:	add    BYTE PTR [rax],al
   140034000:	push   rdx
   140034001:	gs ins BYTE PTR es:[rdi],dx
   140034003:	gs (bad) 
   140034005:	jae    0x14003406c
   140034007:	add    BYTE PTR [rsi+0x70],dh
   14003400a:	movsxd esp,DWORD PTR [rsi+0x5f]
   14003400d:	je     0x14003407e
   14003400f:	pop    rdi
   140034010:	imul   esi,DWORD PTR [rsi+0x33],0x0
   140034014:	add    BYTE PTR [rax],al
   140034016:	add    BYTE PTR [rax],al
   140034018:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003401a:	je     0x140034081
   14003401c:	outs   dx,BYTE PTR ds:[rsi]
   14003401d:	je     0x140034088
   14003401f:	outs   dx,DWORD PTR ds:[rsi]
   140034020:	outs   dx,BYTE PTR ds:[rsi]
   140034021:	(bad)  
   140034022:	ins    BYTE PTR es:[rdi],dx
   140034023:	ins    BYTE PTR es:[rdi],dx
   140034024:	jns    0x140034046
   140034026:	jbe    0x140034089
   140034028:	addr32 jne 0x140034090
   14003402b:	and    BYTE PTR [rdi+rbp*2+0x75],dh
   14003402f:	movsxd ebp,DWORD PTR [rax+0x20]
   140034032:	(bad)  
   140034033:	gs push 0x6f697661
   140034039:	jb     0x14003405b
   14003403b:	outs   dx,WORD PTR ds:[rsi]
   14003403d:	jb     0x14003405f
   14003403f:	and    eax,0xa70
   140034044:	add    BYTE PTR [rax],al
   140034046:	add    BYTE PTR [rax],al
   140034048:	push   0x1400340
   14003404d:	add    BYTE PTR [rax],al
   14003404f:	add    BYTE PTR [rax+0x1400340],al
   140034055:	add    BYTE PTR [rax],al
   140034057:	add    al,al
   140034059:	rex add eax,DWORD PTR [rax+0x1]
   14003405d:	add    BYTE PTR [rax],al
   14003405f:	add    BYTE PTR [rax],al
   140034061:	add    eax,DWORD PTR [r8+0x1]
   140034065:	add    BYTE PTR [rax],al
   140034067:	add    BYTE PTR [rcx+0x0],ah
   14003406a:	add    BYTE PTR fs:[rsi+0x0],dh
   14003406e:	(bad)  
   14003406f:	add    BYTE PTR [rax+0x0],dh
   140034072:	imul   eax,DWORD PTR [rax],0x320033
	...
   140034080:	(bad)  
   140034081:	add    BYTE PTR [rax+0x0],dh
   140034084:	imul   eax,DWORD PTR [rax],0x6d002d
   14003408a:	jae    0x14003408c
   14003408c:	sub    eax,0x69007700
   140034091:	add    BYTE PTR [rsi+0x0],ch
   140034094:	sub    eax,0x6f006300
   140034099:	add    BYTE PTR [rdx+0x0],dh
   14003409c:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a903a6a3
   1400340a3:	add    BYTE PTR [rdx+0x0],ah
   1400340a6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400340aa:	jae    0x1400340ac
   1400340ac:	sub    eax,0x31006c00
   1400340b1:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d0371b7
   1400340b7:	add    BYTE PTR [rcx],dh
   1400340b9:	add    BYTE PTR [rax],al
   1400340bb:	add    BYTE PTR [rax],al
   1400340bd:	add    BYTE PTR [rax],al
   1400340bf:	add    BYTE PTR [rcx+0x0],ah
   1400340c2:	jo     0x1400340c4
   1400340c4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400340ca:	jae    0x1400340cc
   1400340cc:	sub    eax,0x69007700
   1400340d1:	add    BYTE PTR [rsi+0x0],ch
   1400340d4:	sub    eax,0x6f006300
   1400340d9:	add    BYTE PTR [rdx+0x0],dh
   1400340dc:	add    BYTE PTR gs:[rip+0x79007300],ch        # 0x1b903b3e3
   1400340e3:	add    BYTE PTR [rsi+0x0],ch
   1400340e6:	movsxd eax,DWORD PTR [rax]
   1400340e8:	push   0x6c002d00
   1400340ed:	add    BYTE PTR [rcx],dh
   1400340ef:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d0372f5
   1400340f5:	add    BYTE PTR [rax],dh
	...
   1400340ff:	add    BYTE PTR [rbx+0x0],ch
   140034102:	add    BYTE PTR gs:[rdx+0x0],dh
   140034106:	outs   dx,BYTE PTR ds:[rsi]
   140034107:	add    BYTE PTR [rbp+0x0],ah
   14003410a:	ins    BYTE PTR es:[rdi],dx
   14003410b:	add    BYTE PTR [rbx],dh
   14003410d:	add    BYTE PTR [rdx],dh
	...
   14003411f:	add    BYTE PTR [rbx+0x0],ah
   140034122:	(bad)  
   140034123:	add    BYTE PTR [rbx+0x0],ah
   140034126:	push   0x64006500
   14003412b:	add    BYTE PTR [rdi+0x0],bl
   14003412e:	push   0x6e006100
   140034133:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140034137:	add    BYTE PTR [rbp+0x0],ah
   14003413a:	and    BYTE PTR [rax],al
   14003413c:	cmp    eax,0x20003d00
   140034141:	add    BYTE PTR [rcx+0x0],cl
   140034144:	rex.WRX add BYTE PTR [rsi+0x0],r10b
   140034148:	add    BYTE PTR [r8+rax*1+0x49],cl
   14003414d:	add    BYTE PTR [rax+rax*1+0x5f],al
   140034151:	add    BYTE PTR [rax+0x0],cl
   140034154:	add    BYTE PTR [r14+0x0],cl
   140034158:	add    BYTE PTR [rax+rax*1+0x45],r9b
   14003415d:	add    BYTE PTR [rdi+0x0],bl
   140034160:	push   rsi
   140034161:	add    BYTE PTR [rcx+0x0],al
   140034164:	rex.WR add BYTE PTR [rbp+0x0],r10b
   140034168:	add    BYTE PTR [r8],r8b
   14003416b:	add    BYTE PTR [rax],al
   14003416d:	add    BYTE PTR [rax],al
   14003416f:	add    BYTE PTR [rip+0x73006c00],ah        # 0x1b303ad75
	...
   14003417d:	add    BYTE PTR [rax],al
   14003417f:	add    BYTE PTR [rbx+0x0],ah
   140034182:	cmp    al,BYTE PTR [rax]
   140034184:	pop    rsp
   140034185:	add    BYTE PTR [rdx+0x0],ah
   140034188:	jne    0x14003418a
   14003418a:	imul   eax,DWORD PTR [rax],0x64006c
   140034190:	jae    0x140034192
   140034192:	ins    BYTE PTR es:[rdi],dx
   140034193:	add    BYTE PTR [rcx+0x0],ah
   140034196:	jbe    0x140034198
   140034198:	add    BYTE PTR gs:[rax+rax*1+0x73],bl
   14003419d:	add    BYTE PTR [rdi+0x0],ch
   1400341a0:	jne    0x1400341a2
   1400341a2:	jb     0x1400341a4
   1400341a4:	movsxd eax,DWORD PTR [rax]
   1400341a6:	add    BYTE PTR gs:[rdx],dh
   1400341a9:	add    BYTE PTR [rdi+0x0],bl
   1400341ac:	add    BYTE PTR fs:[rdi+0x0],ch
   1400341b0:	je     0x1400341b2
   1400341b2:	(bad)  
   1400341b3:	add    BYTE PTR [rdi+0x0],bl
   1400341b6:	jb     0x1400341b8
   1400341b8:	add    BYTE PTR gs:[rax+rax*1+0x5f],ch
   1400341bd:	add    BYTE PTR [rdi+0x0],dh
   1400341c0:	imul   eax,DWORD PTR [rax],0x36006e
   1400341c6:	xor    al,0x0
   1400341c8:	pop    rsp
   1400341c9:	add    BYTE PTR [rdx+0x0],ah
   1400341cc:	jne    0x1400341ce
   1400341ce:	imul   eax,DWORD PTR [rax],0x64006c
   1400341d4:	pop    rsp
   1400341d5:	add    BYTE PTR [rbx+0x0],dh
   1400341d8:	jb     0x1400341da
   1400341da:	movsxd eax,DWORD PTR [rax]
   1400341dc:	pop    rsp
   1400341dd:	add    BYTE PTR [rax+0x0],dh
   1400341e0:	jne    0x1400341e2
   1400341e2:	(bad)  
   1400341e3:	add    BYTE PTR [rax+rax*1+0x69],ch
   1400341e7:	add    BYTE PTR [rbx+0x0],ah
   1400341ea:	pop    rsp
   1400341eb:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400341ef:	add    BYTE PTR [rbp+0x0],ah
   1400341f2:	jb     0x1400341f4
   1400341f4:	xor    BYTE PTR [rax],al
   1400341f6:	pop    rsp
   1400341f7:	add    BYTE PTR [rbx+0x0],ah
   1400341fa:	jb     0x1400341fc
   1400341fc:	je     0x1400341fe
   1400341fe:	outs   dx,DWORD PTR ds:[rsi]
   1400341ff:	add    BYTE PTR [rsi+0x0],dh
   140034202:	add    BYTE PTR gs:[rdx+0x0],dh
   140034206:	jb     0x140034208
   140034208:	imul   eax,DWORD PTR [rax],0x650064
   14003420e:	add    BYTE PTR cs:[rbx+0x0],ah
   140034212:	jo     0x140034214
   140034214:	jo     0x140034216
   140034216:	add    BYTE PTR [rax],al
   140034218:	movsxd eax,DWORD PTR [rax]
   14003421a:	(bad)  
   14003421b:	add    BYTE PTR [rbx+0x0],ah
   14003421e:	push   0x64006500
   140034223:	add    BYTE PTR [rdi+0x0],bl
   140034226:	push   0x6e006100
   14003422b:	add    BYTE PTR [rax+rax*1+0x6c],ah
   14003422f:	add    BYTE PTR [rbp+0x0],ah
   140034232:	and    BYTE PTR [rax],al
   140034234:	cmp    eax,0x20003d00
   140034239:	add    BYTE PTR [rsi+0x0],ch
   14003423c:	add    BYTE PTR gs:[rdi+0x0],dh
   140034240:	pop    rdi
   140034241:	add    BYTE PTR [rax+0x0],ch
   140034244:	(bad)  
   140034245:	add    BYTE PTR [rsi+0x0],ch
   140034248:	add    BYTE PTR fs:[rax+rax*1+0x65],ch
   14003424d:	add    BYTE PTR [rax],al
   14003424f:	add    BYTE PTR [rbx+0x0],ah
   140034252:	(bad)  
   140034253:	add    BYTE PTR [rbx+0x0],ah
   140034256:	push   0x64006500
   14003425b:	add    BYTE PTR [rdi+0x0],bl
   14003425e:	data16 add BYTE PTR [rax+0x0],dh
   140034262:	and    BYTE PTR [rax],al
   140034264:	cmp    eax,0x20003d00
   140034269:	add    BYTE PTR [rcx+0x0],ch
   14003426c:	outs   dx,BYTE PTR ds:[rsi]
   14003426d:	add    BYTE PTR [rsi+0x0],dh
   140034270:	(bad)  
   140034271:	add    BYTE PTR [rax+rax*1+0x69],ch
   140034275:	add    BYTE PTR [rax+rax*1+0x5f],ah
   140034279:	add    BYTE PTR [rsi+0x0],ah
   14003427c:	jne    0x14003427e
   14003427e:	outs   dx,BYTE PTR ds:[rsi]
   14003427f:	add    BYTE PTR [rbx+0x0],ah
   140034282:	je     0x140034284
   140034284:	imul   eax,DWORD PTR [rax],0x6e006f
   14003428a:	pop    rdi
   14003428b:	add    BYTE PTR [rbx+0x0],dh
   14003428e:	add    BYTE PTR gs:[rsi+0x0],ch
   140034292:	je     0x140034294
   140034294:	imul   eax,DWORD PTR [rax],0x65006e
   14003429a:	ins    BYTE PTR es:[rdi],dx
   14003429b:	add    BYTE PTR [rax],ch
   14003429d:	add    BYTE PTR [rcx],ch
	...
   1400342a7:	add    BYTE PTR [rbx+0x0],ah
   1400342aa:	(bad)  
   1400342ab:	add    BYTE PTR [rbx+0x0],ah
   1400342ae:	push   0x64006500
   1400342b3:	add    BYTE PTR [rdi+0x0],bl
   1400342b6:	data16 add BYTE PTR [rax+0x0],dh
   1400342ba:	and    BYTE PTR [rax],al
   1400342bc:	cmp    eax,0x20003d00
   1400342c1:	add    BYTE PTR [rsi+0x0],ch
   1400342c4:	add    BYTE PTR gs:[rdi+0x0],dh
   1400342c8:	pop    rdi
   1400342c9:	add    BYTE PTR [rsi+0x0],ah
   1400342cc:	jo     0x1400342ce
   1400342ce:	add    BYTE PTR [rax],al
   1400342d0:	add    al,BYTE PTR [rax]
   1400342d2:	add    BYTE PTR [rax],al
   1400342d4:	add    eax,DWORD PTR [rax]
   1400342d6:	add    BYTE PTR [rax],al
   1400342d8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400342da:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   1400342e2:	rex.XB jb 0x14003434e
   1400342e5:	je     0x140034350
   1400342e7:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400342ea:	push   rbx
   1400342eb:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400342f0:	outs   dx,BYTE PTR ds:[rsi]
   1400342f1:	rex.RB js 0x1400342f4
   1400342f4:	add    BYTE PTR [rax],al
   1400342f6:	add    BYTE PTR [rax],al
   1400342f8:	jbe    0x14003436a
   1400342fa:	movsxd esp,DWORD PTR [rsi+0x5f]
   1400342fd:	je     0x14003436e
   1400342ff:	pop    rdi
   140034300:	imul   esi,DWORD PTR [rsi+0x33],0x2e
   140034304:	gs js  0x14003436c
   140034307:	add    BYTE PTR [rip+0x73],ah        # 0x140034380
   14003430d:	add    BYTE PTR [rax],al
   14003430f:	add    al,cl
   140034311:	test   DWORD PTR [rbx],0x140
   140034317:	add    BYTE PTR [rax],al
   140034319:	jge    0x14003431b
   14003431b:	rex add DWORD PTR [rax],eax
   14003431e:	add    BYTE PTR [rax],al
   140034320:	mov    al,0xe1
   140034322:	add    DWORD PTR [rax+0x1],eax
   140034325:	add    BYTE PTR [rax],al
   140034327:	add    BYTE PTR [rax+0x14001e1],dh
   14003432d:	add    BYTE PTR [rax],al
   14003432f:	add    BYTE PTR [rax+0x14001e1],dh
   140034335:	add    BYTE PTR [rax],al
   140034337:	add    BYTE PTR [rdx],cl
   140034339:	add    BYTE PTR [rax],al
   14003433b:	add    BYTE PTR [rax],al
   14003433d:	add    BYTE PTR [rax],al
   14003433f:	add    BYTE PTR [rax-0x8],dl
   140034342:	add    eax,DWORD PTR [rax+0x1]
   140034345:	add    BYTE PTR [rax],al
   140034347:	add    BYTE PTR [rax],al
   140034349:	jle    0x14003434b
   14003434b:	rex add DWORD PTR [rax],eax
   14003434e:	add    BYTE PTR [rax],al
   140034350:	mov    al,0xe1
   140034352:	add    DWORD PTR [rax+0x1],eax
   140034355:	add    BYTE PTR [rax],al
   140034357:	add    BYTE PTR [rax+0x14001e1],dh
   14003435d:	add    BYTE PTR [rax],al
   14003435f:	add    BYTE PTR [rax+0x14001e1],dh
   140034365:	add    BYTE PTR [rax],al
   140034367:	add    BYTE PTR [rbp+riz*2+0x76],al
   14003436b:	gs ins BYTE PTR es:[rdi],dx
   14003436d:	outs   dx,DWORD PTR ds:[rsi]
   14003436e:	jo     0x1400343d5
   140034370:	jb     0x140034372
   140034372:	add    BYTE PTR [rax],al
   140034374:	add    BYTE PTR [rax],al
   140034376:	add    BYTE PTR [rax],al
   140034378:	rex.R
   140034379:	gs jbe 0x1400343e1
   14003437c:	ins    BYTE PTR es:[rdi],dx
   14003437d:	outs   dx,DWORD PTR ds:[rsi]
   14003437e:	jo     0x1400343e5
   140034380:	jb     0x1400343c5
   140034382:	outs   dx,DWORD PTR ds:[rsi]
   140034383:	outs   dx,BYTE PTR ds:[rsi]
   140034384:	jae    0x1400343f5
   140034386:	ins    BYTE PTR es:[rdi],dx
   140034387:	add    BYTE PTR gs:[rax],al
   14003438a:	add    BYTE PTR [rax],al
   14003438c:	add    BYTE PTR [rax],al
   14003438e:	add    BYTE PTR [rax],al
   140034390:	rex.R
   140034391:	gs jbe 0x1400343f9
   140034394:	ins    BYTE PTR es:[rdi],dx
   140034395:	outs   dx,DWORD PTR ds:[rsi]
   140034396:	jo     0x1400343fd
   140034398:	jb     0x1400343f0
   14003439a:	gs jb  0x1400343ff
   14003439d:	outs   dx,DWORD PTR ds:[rsi]
   14003439e:	jae    0x140034405
	...
   1400343a8:	sar    al,1
   1400343aa:	add    eax,DWORD PTR [rax+0x1]
   1400343ad:	add    BYTE PTR [rax],al
   1400343af:	add    BYTE PTR [rax-0x7c],dl
   1400343b2:	add    BYTE PTR [rax+0x1],al
   1400343b5:	add    BYTE PTR [rax],al
   1400343b7:	add    BYTE PTR [rax-0x65],ah
   1400343ba:	add    BYTE PTR [rax+0x1],al
   1400343bd:	add    BYTE PTR [rax],al
   1400343bf:	add    BYTE PTR [rax],al
   1400343c1:	sub    al,0x0
   1400343c3:	rex add DWORD PTR [rax],eax
   1400343c6:	add    BYTE PTR [rax],al
   1400343c8:	mov    al,0xe1
   1400343ca:	add    DWORD PTR [rax+0x1],eax
   1400343cd:	add    BYTE PTR [rax],al
   1400343cf:	add    BYTE PTR [rax],al
   1400343d1:	xchg   edx,eax
   1400343d2:	add    BYTE PTR [rax+0x1],al
   1400343d5:	add    BYTE PTR [rax],al
   1400343d7:	add    BYTE PTR [rax+0x14001e1],dh
   1400343dd:	add    BYTE PTR [rax],al
   1400343df:	add    BYTE PTR [rsi*2+0x6f6e6b6e],bh
   1400343e6:	ja     0x140034456
   1400343e8:	add    BYTE PTR ds:[rax],al
   1400343eb:	add    BYTE PTR [rax],al
   1400343ed:	add    BYTE PTR [rax],al
   1400343ef:	add    BYTE PTR [rcx+0x70],al
   1400343f2:	jo     0x140034460
   1400343f4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400343fb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400343fd:	outs   dx,WORD PTR ds:[rsi]
   1400343ff:	add    BYTE PTR [rbp+0x52],al
   140034402:	push   rdx
   140034403:	rex.WRXB push r10
   140034405:	cmp    ah,BYTE PTR [rax]
   140034407:	rex.R
   140034408:	gs je  0x140034470
   14003440b:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14003440f:	and    BYTE PTR [rbp+0x69],ch
   140034412:	jae    0x140034481
   140034414:	(bad)  
   140034415:	je     0x14003447a
   140034417:	push   0x6c206465
   14003441c:	outs   dx,DWORD PTR ds:[rsi]
   14003441d:	addr32 imul ebp,DWORD PTR [esi+0x67],0x61747320
   140034426:	je     0x14003448d
   140034428:	and    BYTE PTR cs:[rbp+0x78],al
   14003442c:	jo     0x140034493
   14003442e:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140034432:	and    BYTE PTR [rbp+0x61],ch
   140034435:	je     0x14003449a
   140034437:	push   0x20676e69
   14003443c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003443e:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140034447:	gs ins DWORD PTR es:[rdi],dx
   140034449:	pop    rdi
   14003444a:	push   rax
   14003444b:	jne    0x1400344c0
   14003444d:	push   0x67676f4c
   140034452:	imul   ebp,DWORD PTR [rsi+0x67],0x74617453
   140034459:	gs (bad) 
   14003445b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003445d:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140034466:	gs ins DWORD PTR es:[rdi],dx
   140034468:	pop    rdi
   140034469:	push   rax
   14003446a:	outs   dx,DWORD PTR ds:[rsi]
   14003446b:	jo     0x1400344b9
   14003446d:	outs   dx,DWORD PTR ds:[rsi]
   14003446e:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74617453
   140034477:	gs or  al,BYTE PTR cs:[rax]
   14003447b:	add    BYTE PTR [rax],al
   14003447d:	add    BYTE PTR [rax],al
   14003447f:	add    BYTE PTR [rsi+0x41],dl
   140034482:	jo     0x1400344f4
   140034484:	ins    BYTE PTR es:[rdi],dx
   140034485:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003448c:	xor    BYTE PTR [rax],dh
   14003448e:	xor    DWORD PTR [rax],eax
   140034490:	xor    BYTE PTR [rax],al
   140034492:	add    BYTE PTR [rax],al
   140034494:	add    BYTE PTR [rax],al
   140034496:	add    BYTE PTR [rax],al
   140034498:	push   rbx
   140034499:	rex.R
   14003449a:	rex.WR pop rdi
   14003449c:	push   rdi
   14003449d:	rex.WB
   14003449e:	rex.WRX
   14003449f:	rex.R
   1400344a0:	rex.WRXB push r15
   1400344a2:	pop    rdi
   1400344a3:	rex.RX push rdx
   1400344a5:	rex.B
   1400344a6:	rex.WRB
   1400344a7:	rex.RB pop r15
   1400344a9:	push   rbp
   1400344aa:	push   rbx
   1400344ab:	rex.B
   1400344ac:	rex.X
   1400344ad:	rex.WR
   1400344ae:	rex.RB pop r15
   1400344b0:	push   rdi
   1400344b1:	rex.W
   1400344b2:	rex.WB
   1400344b3:	rex.WR
   1400344b4:	rex.RB pop r15
   1400344b6:	rex.XB push r13
   1400344b8:	push   rdx
   1400344b9:	push   rbx
   1400344ba:	rex.WRXB push r10
   1400344bc:	pop    rdi
   1400344bd:	rex.W
   1400344be:	rex.WB
   1400344bf:	rex.R
   1400344c0:	rex.R
   1400344c1:	rex.RB
   1400344c2:	rex.WRX add BYTE PTR [rax],r8b
	...
   1400344cd:	add    BYTE PTR [rax],al
   1400344cf:	add    BYTE PTR [rcx+0x70],al
   1400344d2:	jo     0x140034527
   1400344d4:	jns    0x140034549
   1400344d6:	je     0x14003453d
   1400344d8:	ins    DWORD PTR es:[rdi],dx
   1400344d9:	imul   r12d,DWORD PTR [rbx+0x74],0x7441203a
   1400344e1:	je     0x140034548
   1400344e3:	ins    DWORD PTR es:[rdi],dx
   1400344e4:	jo     0x14003455a
   1400344e6:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   1400344ec:	(bad)  
   1400344ed:	fs and BYTE PTR fs:[rdi+rsi*2+0x6f],dh
   1400344f3:	and    BYTE PTR [rcx+rbp*2+0x66],ah
   1400344f7:	data16 gs jb 0x140034560
   1400344fb:	outs   dx,BYTE PTR ds:[rsi]
   1400344fc:	je     0x14003451e
   1400344fe:	jae    0x140034579
   140034500:	jae    0x140034576
   140034502:	gs ins DWORD PTR es:[rdi],dx
   140034504:	jae    0x140034526
   140034506:	ja     0x140034571
   140034508:	je     0x140034572
   14003450a:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14003450e:	and    BYTE PTR [rbx+0x61],dh
   140034511:	ins    DWORD PTR es:[rdi],dx
   140034512:	and    BYTE PTR gs:[rcx+0x6e],ch
   140034516:	je     0x14003457d
   140034518:	jb     0x140034580
   14003451a:	(bad)  
   14003451b:	movsxd esp,DWORD PTR [rbp+0x20]
   14003451e:	outs   dx,BYTE PTR ds:[rsi]
   14003451f:	(bad)  
   140034520:	ins    DWORD PTR es:[rdi],dx
   140034521:	and    BYTE PTR gs:[rip+0x280a2173],ah        # 0x1680d669b
   140034528:	rex.B
   140034529:	fs fs jb 0x140034592
   14003452d:	jae    0x1400345a2
   14003452f:	gs jae 0x140034552
   140034532:	imul   esp,DWORD PTR fs:[rsi+0x66],0x203a7265
   14003453a:	gs js  0x1400345a6
   14003453d:	jae    0x1400345b3
   14003453f:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
   140034546:	(bad)  
   140034547:	and    BYTE PTR [rax+0x20],al
   14003454a:	(bad)  
   14003454b:	and    eax,0x21202770
   140034550:	cmp    eax,0x71657220
   140034555:	jne    0x1400345bc
   140034557:	jae    0x1400345cd
   140034559:	gs and BYTE PTR fs:[rdi],ah
   14003455d:	and    eax,0x40202773
   140034562:	and    BYTE PTR [rdi],ah
   140034564:	and    eax,0xa292770
   140034569:	add    BYTE PTR [rax],al
   14003456b:	add    BYTE PTR [rax],al
   14003456d:	add    BYTE PTR [rax],al
   14003456f:	add    BYTE PTR [rbx+0x41],al
   140034572:	jo     0x1400345e4
   140034574:	push   rbx
   140034575:	jns    0x1400345ea
   140034577:	je     0x1400345de
   140034579:	ins    DWORD PTR es:[rdi],dx
   14003457a:	imul   r12d,DWORD PTR [rbx+0x74],0x64413a3a
   140034582:	fs push rbx
   140034584:	jns    0x1400345f9
   140034586:	je     0x1400345ed
   140034588:	ins    DWORD PTR es:[rdi],dx
   140034589:	add    BYTE PTR [rax],al
   14003458b:	add    BYTE PTR [rax],al
   14003458d:	add    BYTE PTR [rax],al
   14003458f:	add    BYTE PTR [rbx+0x3a],ah
   140034592:	pop    rsp
   140034593:	(bad)  
   140034594:	jne    0x1400345ff
   140034596:	ins    BYTE PTR es:[rdi],dx
   140034597:	fs jae 0x140034606
   14003459a:	(bad)  
   14003459b:	jbe    0x140034602
   14003459d:	pop    rsp
   14003459e:	jae    0x14003460f
   1400345a0:	jne    0x140034614
   1400345a2:	movsxd esp,DWORD PTR [rbp+0x32]
   1400345a5:	pop    rdi
   1400345a6:	outs   dx,DWORD PTR fs:[rsi]
   1400345a8:	je     0x14003460b
   1400345aa:	pop    rdi
   1400345ab:	jb     0x140034612
   1400345ad:	ins    BYTE PTR es:[rdi],dx
   1400345ae:	pop    rdi
   1400345af:	ja     0x14003461a
   1400345b1:	outs   dx,BYTE PTR ds:[rsi]
   1400345b2:	ss xor al,0x5c
   1400345b5:	(bad)  
   1400345b6:	jne    0x140034621
   1400345b8:	ins    BYTE PTR es:[rdi],dx
   1400345b9:	fs pop rsp
   1400345bb:	jae    0x14003462f
   1400345bd:	movsxd ebx,DWORD PTR [rcx+riz*2+0x70]
   1400345c1:	jo     0x140034629
   1400345c3:	jb     0x140034626
   1400345c5:	ins    DWORD PTR es:[rdi],dx
   1400345c6:	gs ja  0x140034638
   1400345c9:	jb     0x140034636
   1400345cb:	pop    rsp
   1400345cc:	(bad)  
   1400345cd:	jo     0x14003463f
   1400345cf:	jae    0x14003464a
   1400345d1:	jae    0x140034647
   1400345d3:	gs ins DWORD PTR es:[rdi],dx
   1400345d5:	imul   esp,DWORD PTR fs:[rbx+0x74],0x7070632e
   1400345dd:	add    BYTE PTR [rax],al
   1400345df:	add    BYTE PTR [rcx+0x70],al
   1400345e2:	jo     0x140034637
   1400345e4:	jns    0x140034659
   1400345e6:	je     0x14003464d
   1400345e8:	ins    DWORD PTR es:[rdi],dx
   1400345e9:	imul   r12d,DWORD PTR [rbx+0x74],0x7441203a
   1400345f1:	je     0x140034658
   1400345f3:	ins    DWORD PTR es:[rdi],dx
   1400345f4:	jo     0x14003466a
   1400345f6:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   1400345fc:	(bad)  
   1400345fd:	fs and BYTE PTR fs:[rdi+rsi*2+0x6f],dh
   140034603:	and    BYTE PTR [rcx+rbp*2+0x66],ah
   140034607:	data16 gs jb 0x140034670
   14003460b:	outs   dx,BYTE PTR ds:[rsi]
   14003460c:	je     0x14003462e
   14003460e:	jae    0x140034689
   140034610:	jae    0x140034686
   140034612:	gs ins DWORD PTR es:[rdi],dx
   140034614:	jae    0x140034636
   140034616:	ja     0x140034681
   140034618:	je     0x140034682
   14003461a:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14003461e:	and    BYTE PTR [rbx+0x61],dh
   140034621:	ins    DWORD PTR es:[rdi],dx
   140034622:	and    BYTE PTR gs:[rcx+0x6e],ch
   140034626:	je     0x14003468d
   140034628:	jb     0x140034690
   14003462a:	(bad)  
   14003462b:	movsxd esp,DWORD PTR [rbp+0x20]
   14003462e:	outs   dx,BYTE PTR ds:[rsi]
   14003462f:	(bad)  
   140034630:	ins    DWORD PTR es:[rdi],dx
   140034631:	and    BYTE PTR gs:[rip+0x280a2173],ah        # 0x1680d67ab
   140034638:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14003463a:	fs jne 0x1400346a9
   14003463d:	gs jae 0x140034660
   140034640:	imul   esp,DWORD PTR fs:[rsi+0x66],0x203a7265
   140034648:	gs js  0x1400346b4
   14003464b:	jae    0x1400346c1
   14003464d:	imul   ebp,DWORD PTR [rsi+0x67],0x70252720
   140034654:	(bad)  
   140034655:	and    BYTE PTR [rcx],ah
   140034657:	cmp    eax,0x71657220
   14003465c:	jne    0x1400346c3
   14003465e:	jae    0x1400346d4
   140034660:	gs and BYTE PTR fs:[rdi],ah
   140034664:	and    eax,0xa292770
   140034669:	add    BYTE PTR [rax],al
   14003466b:	add    BYTE PTR [rax],al
   14003466d:	add    BYTE PTR [rax],al
   14003466f:	add    BYTE PTR [rcx+0x70],al
   140034672:	jo     0x1400346c7
   140034674:	jns    0x1400346e9
   140034676:	je     0x1400346dd
   140034678:	ins    DWORD PTR es:[rdi],dx
   140034679:	imul   r12d,DWORD PTR [rbx+0x74],0x7441203a
   140034681:	je     0x1400346e8
   140034683:	ins    DWORD PTR es:[rdi],dx
   140034684:	jo     0x1400346fa
   140034686:	gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14003468c:	(bad)  
   14003468d:	fs and BYTE PTR fs:[rdi+rsi*2+0x6f],dh
   140034693:	and    BYTE PTR [rcx+rbp*2+0x66],ah
   140034697:	data16 gs jb 0x140034700
   14003469b:	outs   dx,BYTE PTR ds:[rsi]
   14003469c:	je     0x1400346be
   14003469e:	jae    0x140034719
   1400346a0:	jae    0x140034716
   1400346a2:	gs ins DWORD PTR es:[rdi],dx
   1400346a4:	jae    0x1400346c6
   1400346a6:	ja     0x140034711
   1400346a8:	je     0x140034712
   1400346aa:	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400346ae:	and    BYTE PTR [rbx+0x61],dh
   1400346b1:	ins    DWORD PTR es:[rdi],dx
   1400346b2:	and    BYTE PTR gs:[rcx+0x6e],ch
   1400346b6:	je     0x14003471d
   1400346b8:	jb     0x140034720
   1400346ba:	(bad)  
   1400346bb:	movsxd esp,DWORD PTR [rbp+0x20]
   1400346be:	outs   dx,BYTE PTR ds:[rsi]
   1400346bf:	(bad)  
   1400346c0:	ins    DWORD PTR es:[rdi],dx
   1400346c1:	and    BYTE PTR gs:[rip+0x280a2173],ah        # 0x1680d683b
   1400346c8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400346ca:	fs jne 0x140034739
   1400346cd:	and    BYTE PTR gs:[rsi+0x61],ch
   1400346d1:	ins    DWORD PTR es:[rdi],dx
   1400346d2:	gs jae 0x1400346f5
   1400346d5:	imul   esp,DWORD PTR fs:[rsi+0x66],0x203a7265
   1400346dd:	gs js  0x140034749
   1400346e0:	jae    0x140034756
   1400346e2:	imul   ebp,DWORD PTR [rsi+0x67],0x73252720
   1400346e9:	(bad)  
   1400346ea:	and    BYTE PTR [rcx],ah
   1400346ec:	cmp    eax,0x71657220
   1400346f1:	jne    0x140034758
   1400346f3:	jae    0x140034769
   1400346f5:	gs and BYTE PTR fs:[rdi],ah
   1400346f9:	and    eax,0xa292773
   1400346fe:	add    BYTE PTR [rax],al
   140034700:	sub    ch,BYTE PTR [rdx]
   140034702:	sub    ch,BYTE PTR [rdx]
   140034704:	sub    ch,BYTE PTR [rdx]
   140034706:	sub    ch,BYTE PTR [rdx]
   140034708:	sub    ch,BYTE PTR [rdx]
   14003470a:	sub    ch,BYTE PTR [rdx]
   14003470c:	sub    ch,BYTE PTR [rdx]
   14003470e:	sub    ch,BYTE PTR [rdx]
   140034710:	sub    ah,BYTE PTR [rax]
   140034712:	rex.RB push r10
   140034714:	push   rdx
   140034715:	rex.WRXB push r10
   140034717:	cmp    ah,BYTE PTR [rax]
   140034719:	rex.XB (bad) 
   14003471b:	outs   dx,BYTE PTR ds:[rsi]
   14003471c:	outs   dx,BYTE PTR ds:[rsi]
   14003471d:	outs   dx,DWORD PTR ds:[rsi]
   14003471e:	je     0x140034740
   140034720:	movsxd esp,DWORD PTR [rcx+0x6c]
   140034723:	ins    BYTE PTR es:[rdi],dx
   140034724:	and    BYTE PTR [rbx+0x41],al
   140034727:	jo     0x140034799
   140034729:	push   rbx
   14003472a:	jns    0x14003479f
   14003472c:	je     0x140034793
   14003472e:	ins    DWORD PTR es:[rdi],dx
   14003472f:	imul   r12d,DWORD PTR [rbx+0x74],0x64413a3a
   140034737:	fs push rbx
   140034739:	jns    0x1400347ae
   14003473b:	je     0x1400347a2
   14003473d:	ins    DWORD PTR es:[rdi],dx
   14003473e:	jae    0x140034760
   140034740:	ja     0x1400347ab
   140034742:	je     0x1400347ac
   140034744:	outs   dx,DWORD PTR ds:[rsi]
   140034745:	jne    0x1400347bb
   140034747:	and    BYTE PTR [rcx+0x6e],ch
   14003474a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x697a696c
   140034752:	outs   dx,BYTE PTR ds:[rsi]
   140034753:	and    BYTE PTR [esi+0x69],ah
   140034757:	jb     0x1400347cc
   140034759:	je     0x14003477c
   14003475b:	or     al,BYTE PTR [rax]
   14003475d:	add    BYTE PTR [rax],al
   14003475f:	add    BYTE PTR [rbx+0x41],al
   140034762:	jo     0x1400347d4
   140034764:	push   rbx
   140034765:	jns    0x1400347da
   140034767:	je     0x1400347ce
   140034769:	ins    DWORD PTR es:[rdi],dx
   14003476a:	imul   r12d,DWORD PTR [rbx+0x74],0x64413a3a
   140034772:	fs push rbx
   140034774:	jns    0x1400347e9
   140034776:	je     0x1400347dd
   140034778:	ins    DWORD PTR es:[rdi],dx
   140034779:	jae    0x14003477b
   14003477b:	add    BYTE PTR [rax],al
   14003477d:	add    BYTE PTR [rax],al
   14003477f:	add    BYTE PTR [rbp+0x6e],al
   140034782:	movsxd ebp,DWORD PTR [rdi+0x75]
   140034785:	outs   dx,BYTE PTR ds:[rsi]
   140034786:	je     0x1400347ed
   140034788:	jb     0x1400347ef
   14003478a:	and    BYTE PTR fs:[rcx+0x20],ah
   14003478e:	movsxd ebp,DWORD PTR [rcx+0x72]
   140034791:	movsxd esi,DWORD PTR [rbp+0x6c]
   140034794:	(bad)  
   140034795:	jb     0x1400347b7
   140034797:	fs gs jo 0x140034800
   14003479b:	outs   dx,BYTE PTR ds:[rsi]
   14003479c:	fs outs dx,BYTE PTR gs:[rsi]
   14003479f:	movsxd edi,DWORD PTR [rcx+0x20]
   1400347a2:	ja     0x14003480d
   1400347a4:	je     0x14003480e
   1400347a6:	and    BYTE PTR [rcx+rbp*2+0x62],ch
   1400347aa:	jb     0x14003480d
   1400347ac:	jb     0x140034827
   1400347ae:	and    BYTE PTR [rip+0xa2173],ah        # 0x1400d6927
	...
   1400347c0:	rex.B jo 0x140034833
   1400347c3:	push   rbx
   1400347c4:	jns    0x140034839
   1400347c6:	je     0x14003482d
   1400347c8:	ins    DWORD PTR es:[rdi],dx
   1400347c9:	imul   r12d,DWORD PTR [rbx+0x74],0x6e49203a
   1400347d1:	je     0x140034838
   1400347d3:	jb     0x14003483b
   1400347d5:	(bad)  
   1400347d6:	movsxd esp,DWORD PTR [rbp+0x20]
   1400347d9:	(bad)  
   1400347da:	and    eax,0x28202773
   1400347df:	je     0x14003484a
   1400347e1:	gs jb  0x140034804
   1400347e4:	and    eax,0x64202964
   1400347e9:	gs jo  0x140034851
   1400347ec:	outs   dx,BYTE PTR ds:[rsi]
   1400347ed:	fs jae 0x140034810
   1400347f0:	outs   dx,DWORD PTR ds:[rsi]
   1400347f1:	outs   dx,BYTE PTR ds:[rsi]
   1400347f2:	and    BYTE PTR [rcx+0x6e],ch
   1400347f5:	je     0x14003485c
   1400347f7:	jb     0x14003485f
   1400347f9:	(bad)  
   1400347fa:	movsxd esp,DWORD PTR [rbp+0x20]
   1400347fd:	(bad)  
   1400347fe:	and    eax,0x28202773
   140034803:	je     0x14003486e
   140034805:	gs jb  0x140034828
   140034808:	and    eax,0x62202964
   14003480d:	jne    0x140034883
   14003480f:	and    BYTE PTR [rcx+0x73],ch
   140034812:	and    BYTE PTR [rcx+0x6e],ch
   140034815:	and    BYTE PTR [rcx+0x20],ah
   140034818:	ins    BYTE PTR es:[rdi],dx
   140034819:	outs   dx,DWORD PTR ds:[rsi]
   14003481a:	ja     0x140034881
   14003481c:	jb     0x14003483e
   14003481e:	je     0x140034889
   140034820:	gs jb  0x140034844
   140034823:	or     al,BYTE PTR [rax]
   140034825:	add    BYTE PTR [rax],al
   140034827:	add    BYTE PTR [rbx+0x41],al
   14003482a:	jo     0x14003489c
   14003482c:	push   rbx
   14003482d:	jns    0x1400348a2
   14003482f:	je     0x140034896
   140034831:	ins    DWORD PTR es:[rdi],dx
   140034832:	imul   r12d,DWORD PTR [rbx+0x74],0x69443a3a
   14003483a:	movsxd esi,DWORD PTR [rbx+rdx*2+0x6f]
   14003483e:	jb     0x1400348b4
   140034840:	rex.WR
   140034841:	gs jae 0x1400348b7
   140034844:	rex.RX jne 0x1400348b5
   140034847:	movsxd eax,DWORD PTR [rax]
   140034849:	add    BYTE PTR [rax],al
   14003484b:	add    BYTE PTR [rsi],ch
   14003484d:	fs ins BYTE PTR es:[rdi],dx
   14003484f:	ins    BYTE PTR es:[rdi],dx
	...
   140034858:	rex.XB
   140034859:	rex.B jo 0x1400348cc
   14003485c:	push   rbx
   14003485d:	jns    0x1400348d2
   14003485f:	je     0x1400348c6
   140034861:	ins    DWORD PTR es:[rdi],dx
   140034862:	imul   r12d,DWORD PTR [rbx+0x74],0x6f4c3a3a
   14003486a:	(bad)  
   14003486b:	rex.WRB outs dx,DWORD PTR fs:[rsi]
   14003486e:	fs jne 0x1400348dd
   140034871:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140034874:	push   rax
   140034875:	(bad)  
   140034876:	je     0x1400348e0
   140034878:	sub    BYTE PTR [rax],ah
   14003487a:	and    eax,0x7333322d
   14003487f:	and    BYTE PTR [rcx],ch
   140034881:	and    BYTE PTR [rip+0x66332e38],ah        # 0x1a63676bf
   140034887:	and    BYTE PTR [rbp+0x73],ch
   14003488a:	movsxd eax,DWORD PTR gs:[rax]
   14003488d:	add    BYTE PTR [rax],al
   14003488f:	add    BYTE PTR [rbx],ah
   140034891:	rex.B jo 0x140034904
   140034894:	rex.RX jb 0x1400348f8
   140034897:	ins    DWORD PTR es:[rdi],dx
   140034898:	gs ja  0x14003490a
   14003489b:	jb     0x140034908
   14003489d:	pop    rdi
   14003489e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400348a0:	jbe    0x140034903
   1400348a2:	ins    BYTE PTR es:[rdi],dx
   1400348a3:	imul   esp,DWORD PTR [rsp+rcx*2+0x6f],0x466c6163
   1400348ab:	imul   ebp,DWORD PTR [rbp+riz*2+0x73],0x67204100
   1400348b3:	(bad)  
   1400348b4:	ins    DWORD PTR es:[rdi],dx
   1400348b5:	and    BYTE PTR gs:[rsi+0x69],ah
   1400348b9:	ins    BYTE PTR es:[rdi],dx
   1400348ba:	and    BYTE PTR gs:[rcx+0x70],ah
   1400348be:	jo     0x140034925
   1400348c0:	(bad)  
   1400348c1:	jb     0x140034936
   1400348c3:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400348c7:	(bad)  
   1400348c8:	and    BYTE PTR gs:[rbp+0x69],ch
   1400348cc:	jae    0x140034941
   1400348ce:	imul   ebp,DWORD PTR [rsi+0x67],0x20726f20
   1400348d5:	movsxd ebp,DWORD PTR [rdi+0x72]
   1400348d8:	jb     0x14003494f
   1400348da:	jo     0x140034950
   1400348dc:	gs fs and BYTE PTR cs:[rax],ah
   1400348e1:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400348e3:	and    BYTE PTR [rax+rbp*2+0x65],dh
   1400348e7:	and    BYTE PTR [rbx+0x74],dl
   1400348ea:	gs (bad) 
   1400348ec:	ins    DWORD PTR es:[rdi],dx
   1400348ed:	and    BYTE PTR [rbx+0x6c],ah
   1400348f0:	imul   esp,DWORD PTR [rbp+0x6e],0x6f672074
   1400348f7:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400348fb:	je     0x140034965
   1400348fd:	and    BYTE PTR gs:[rdi+0x61],ah
   140034901:	ins    DWORD PTR es:[rdi],dx
   140034902:	gs (bad) 
   140034904:	jae    0x140034926
   140034906:	jo     0x14003497a
   140034908:	outs   dx,DWORD PTR ds:[rsi]
   140034909:	jo     0x140034970
   14003490b:	jb     0x140034981
   14003490d:	imul   esp,DWORD PTR [rbp+0x73],0x4920202e
   140034914:	outs   dx,BYTE PTR ds:[rsi]
   140034915:	and    BYTE PTR [rax+rbp*2+0x65],dh
   140034919:	and    BYTE PTR [rdi],ah
   14003491b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003491d:	movsxd esp,DWORD PTR [rcx+0x6c]
   140034920:	and    BYTE PTR [rsi+0x69],al
   140034923:	ins    BYTE PTR es:[rdi],dx
   140034924:	gs jae 0x14003494e
   140034927:	and    BYTE PTR [rcx+riz*2+0x62],dh
   14003492b:	and    BYTE PTR [rbx+0x65],dh
   14003492e:	ins    BYTE PTR es:[rdi],dx
   14003492f:	movsxd esi,DWORD PTR gs:[rax+riz*1+0x27]
   140034934:	push   rsi
   140034935:	gs jb  0x1400349a1
   140034938:	data16 jns 0x14003495b
   14003493b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003493d:	je     0x1400349a4
   14003493f:	addr32 jb 0x1400349ab
   140034942:	je     0x1400349bd
   140034944:	and    BYTE PTR [rdi+0x66],ch
   140034947:	and    BYTE PTR [rdi+0x61],al
   14003494a:	ins    DWORD PTR es:[rdi],dx
   14003494b:	and    BYTE PTR gs:[rbx+0x61],al
   14003494f:	movsxd ebp,DWORD PTR [rax+0x65]
   140034952:	(bad)  
   140034953:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140034957:	push   0x20657661
   14003495c:	push   rbx
   14003495d:	je     0x1400349c4
   14003495f:	(bad)  
   140034960:	ins    DWORD PTR es:[rdi],dx
   140034961:	and    BYTE PTR [rdi+rbp*2+0x75],ah
   140034965:	(bad)  
   140034966:	ins    BYTE PTR es:[rdi],dx
   140034967:	gs sub eax,0x63656863
   14003496d:	imul   esp,DWORD PTR [rax],0x74
   140034970:	push   0x61672065
   140034975:	ins    DWORD PTR es:[rdi],dx
   140034976:	gs (bad) 
   140034978:	jae    0x14003499a
   14003497a:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   140034981:	(bad)  
   140034982:	je     0x1400349ed
   140034984:	outs   dx,DWORD PTR ds:[rsi]
   140034985:	outs   dx,BYTE PTR ds:[rsi]
   140034986:	add    BYTE PTR cs:[rbx],ah
   140034989:	rex.B jo 0x1400349fc
   14003498c:	rex.RX jb 0x1400349f0
   14003498f:	ins    DWORD PTR es:[rdi],dx
   140034990:	gs ja  0x140034a02
   140034993:	jb     0x140034a00
   140034995:	pop    rdi
   140034996:	rex.WRXB jne 0x140034a0d
   140034999:	rex.WRXB
   14003499a:	data16 rex.WRB
   14003499c:	gs ins DWORD PTR es:[rdi],dx
   14003499e:	outs   dx,DWORD PTR ds:[rsi]
   14003499f:	jb     0x140034a1a
   1400349a1:	add    BYTE PTR [rax],al
   1400349a3:	add    BYTE PTR [rax],al
   1400349a5:	add    BYTE PTR [rax],al
   1400349a7:	add    BYTE PTR [rax+rbp*2+0x65],dl
   1400349ab:	and    BYTE PTR [rbx+0x79],dh
   1400349ae:	jae    0x140034a24
   1400349b0:	gs ins DWORD PTR es:[rdi],dx
   1400349b2:	and    BYTE PTR [rdx+0x61],dh
   1400349b5:	outs   dx,BYTE PTR ds:[rsi]
   1400349b6:	and    BYTE PTR [rdi+0x75],ch
   1400349b9:	je     0x1400349db
   1400349bb:	outs   dx,DWORD PTR ds:[rsi]
   1400349bc:	data16 and BYTE PTR [rbp+0x65],ch
   1400349c0:	ins    DWORD PTR es:[rdi],dx
   1400349c1:	outs   dx,DWORD PTR ds:[rsi]
   1400349c2:	jb     0x140034a3d
   1400349c4:	and    BYTE PTR [rdi+0x68],dh
   1400349c7:	imul   ebp,DWORD PTR [rbp+riz*2+0x20],0x64616f6c
   1400349cf:	imul   ebp,DWORD PTR [rsi+0x67],0x65687420
   1400349d6:	and    BYTE PTR [rdi+0x61],ah
   1400349d9:	ins    DWORD PTR es:[rdi],dx
   1400349da:	gs add BYTE PTR cs:[rax],al
   1400349de:	add    BYTE PTR [rax],al
   1400349e0:	and    eax,DWORD PTR [rdi+0x65]
   1400349e3:	outs   dx,BYTE PTR ds:[rsi]
   1400349e4:	gs jb  0x140034a48
   1400349e7:	ins    BYTE PTR es:[rdi],dx
   1400349e8:	pop    rdi
   1400349e9:	push   rbp
   1400349ea:	outs   dx,BYTE PTR ds:[rsi]
   1400349eb:	(bad)  
   1400349ec:	(bad)  
   1400349ed:	ins    BYTE PTR es:[rdi],dx
   1400349ee:	gs push rsp
   1400349f0:	outs   dx,DWORD PTR ds:[rsi]
   1400349f1:	push   rbx
   1400349f2:	je     0x140034a55
   1400349f4:	jb     0x140034a6a
   1400349f6:	rex.RXB (bad) 
   1400349f8:	ins    DWORD PTR es:[rdi],dx
   1400349f9:	add    BYTE PTR gs:[rax],al
   1400349fc:	add    BYTE PTR [rax],al
   1400349fe:	add    BYTE PTR [rax],al
   140034a00:	push   rbp
   140034a01:	outs   dx,BYTE PTR ds:[rsi]
   140034a02:	(bad)  
   140034a03:	(bad)  
   140034a04:	ins    BYTE PTR es:[rdi],dx
   140034a05:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140034a0a:	push   rbx
   140034a0b:	je     0x140034a6e
   140034a0d:	jb     0x140034a83
   140034a0f:	and    BYTE PTR [rdi+0x61],al
   140034a12:	ins    DWORD PTR es:[rdi],dx
   140034a13:	add    BYTE PTR gs:[rax],al
   140034a16:	add    BYTE PTR [rax],al
   140034a18:	(bad)  
   140034a19:	jo     0x140034a8b
   140034a1b:	ins    BYTE PTR es:[rdi],dx
   140034a1c:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
	...
   140034a2f:	add    BYTE PTR [rbx+0x41],al
   140034a32:	jo     0x140034aa4
   140034a34:	push   rbx
   140034a35:	jns    0x140034aaa
   140034a37:	je     0x140034a9e
   140034a39:	ins    DWORD PTR es:[rdi],dx
   140034a3a:	imul   r12d,DWORD PTR [rbx+0x74],0x616e553a
   140034a42:	(bad)  
   140034a43:	ins    BYTE PTR es:[rdi],dx
   140034a44:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140034a49:	ins    BYTE PTR es:[rdi],dx
   140034a4a:	outs   dx,DWORD PTR ds:[rsi]
   140034a4b:	(bad)  
   140034a4c:	and    BYTE PTR fs:[rbp+0x6f],ch
   140034a50:	fs jne 0x140034abf
   140034a53:	and    BYTE PTR gs:[rip+0x44282073],ah        # 0x1842b6acd
   140034a5a:	gs jo  0x140034ac2
   140034a5d:	outs   dx,BYTE PTR ds:[rsi]
   140034a5e:	fs outs dx,BYTE PTR gs:[rsi]
   140034a61:	movsxd edi,DWORD PTR [rcx+0x20]
   140034a64:	outs   dx,DWORD PTR ds:[rsi]
   140034a65:	data16 and BYTE PTR [rip+0x202c2973],ah        # 0x1602f73df
   140034a6c:	gs jb  0x140034ae1
   140034a6f:	outs   dx,DWORD PTR ds:[rsi]
   140034a70:	jb     0x140034a92
   140034a72:	and    eax,0xa64
   140034a77:	add    BYTE PTR [rbx+0x41],al
   140034a7a:	jo     0x140034aec
   140034a7c:	push   rbx
   140034a7d:	jns    0x140034af2
   140034a7f:	je     0x140034ae6
   140034a81:	ins    DWORD PTR es:[rdi],dx
   140034a82:	imul   r12d,DWORD PTR [rbx+0x74],0x6f4c3a3a
   140034a8a:	(bad)  
   140034a8b:	fs push rbx
   140034a8d:	jns    0x140034b02
   140034a8f:	je     0x140034af6
   140034a91:	ins    DWORD PTR es:[rdi],dx
   140034a92:	rex.B outs dx,BYTE PTR ds:[rsi]
   140034a94:	fs rex.R
   140034a96:	gs jo  0x140034afe
   140034a99:	outs   dx,BYTE PTR ds:[rsi]
   140034a9a:	fs outs dx,BYTE PTR gs:[rsi]
   140034a9d:	movsxd ebp,DWORD PTR [rcx+0x65]
   140034aa0:	jae    0x140034aa2
	...
   140034aae:	add    BYTE PTR [rax],al
   140034ab0:	rex.XB
   140034ab1:	rex.B jo 0x140034b24
   140034ab4:	push   rbx
   140034ab5:	jns    0x140034b2a
   140034ab7:	je     0x140034b1e
   140034ab9:	ins    DWORD PTR es:[rdi],dx
   140034aba:	imul   r12d,DWORD PTR [rbx+0x74],0x616e553a
   140034ac2:	(bad)  
   140034ac3:	ins    BYTE PTR es:[rdi],dx
   140034ac4:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140034ac9:	ins    BYTE PTR es:[rdi],dx
   140034aca:	outs   dx,DWORD PTR ds:[rsi]
   140034acb:	(bad)  
   140034acc:	and    BYTE PTR fs:[rcx+0x6e],ch
   140034ad0:	je     0x140034b37
   140034ad2:	jb     0x140034b3a
   140034ad4:	(bad)  
   140034ad5:	movsxd esp,DWORD PTR [rbp+0x20]
   140034ad8:	data16 (bad) 
   140034ada:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140034ade:	jns    0x140034b00
   140034ae0:	and    eax,0x72662073
   140034ae5:	outs   dx,DWORD PTR ds:[rsi]
   140034ae6:	ins    DWORD PTR es:[rdi],dx
   140034ae7:	and    BYTE PTR [rip+0x44282073],ah        # 0x1842b6b60
   140034aed:	gs jo  0x140034b55
   140034af0:	outs   dx,BYTE PTR ds:[rsi]
   140034af1:	fs outs dx,BYTE PTR gs:[rsi]
   140034af4:	movsxd edi,DWORD PTR [rcx+0x20]
   140034af7:	outs   dx,DWORD PTR ds:[rsi]
   140034af8:	data16 and BYTE PTR [rip+0x202c2973],ah        # 0x1602f7472
   140034aff:	gs jb  0x140034b74
   140034b02:	outs   dx,DWORD PTR ds:[rsi]
   140034b03:	jb     0x140034b25
   140034b05:	and    eax,0xa64
   140034b0a:	add    BYTE PTR [rax],al
   140034b0c:	add    BYTE PTR [rax],al
   140034b0e:	add    BYTE PTR [rax],al
   140034b10:	rex.XB
   140034b11:	rex.B jo 0x140034b84
   140034b14:	push   rbx
   140034b15:	jns    0x140034b8a
   140034b17:	je     0x140034b7e
   140034b19:	ins    DWORD PTR es:[rdi],dx
   140034b1a:	imul   r12d,DWORD PTR [rbx+0x74],0x616e553a
   140034b22:	(bad)  
   140034b23:	ins    BYTE PTR es:[rdi],dx
   140034b24:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140034b29:	movsxd esi,DWORD PTR [rdx+0x65]
   140034b2c:	(bad)  
   140034b2d:	je     0x140034b94
   140034b2f:	and    BYTE PTR [rcx+0x6e],ch
   140034b32:	je     0x140034b99
   140034b34:	jb     0x140034b9c
   140034b36:	(bad)  
   140034b37:	movsxd esp,DWORD PTR [rbp+0x20]
   140034b3a:	and    eax,0x72662073
   140034b3f:	outs   dx,DWORD PTR ds:[rsi]
   140034b40:	ins    DWORD PTR es:[rdi],dx
   140034b41:	and    BYTE PTR [rip+0x44282073],ah        # 0x1842b6bba
   140034b47:	gs jo  0x140034baf
   140034b4a:	outs   dx,BYTE PTR ds:[rsi]
   140034b4b:	fs outs dx,BYTE PTR gs:[rsi]
   140034b4e:	movsxd edi,DWORD PTR [rcx+0x20]
   140034b51:	outs   dx,DWORD PTR ds:[rsi]
   140034b52:	data16 and BYTE PTR [rip+0xa2973],ah        # 0x1400d74cc
   140034b59:	add    BYTE PTR [rax],al
   140034b5b:	add    BYTE PTR [rax],al
   140034b5d:	add    BYTE PTR [rax],al
   140034b5f:	add    BYTE PTR [rcx+0x70],al
   140034b62:	jo     0x140034bb7
   140034b64:	jns    0x140034bd9
   140034b66:	je     0x140034bcd
   140034b68:	ins    DWORD PTR es:[rdi],dx
   140034b69:	imul   r12d,DWORD PTR [rbx+0x74],0x7245203a
   140034b71:	jb     0x140034be2
   140034b73:	jb     0x140034b95
   140034b75:	imul   ebp,DWORD PTR [rsi+0x20],0x6e6e6f43
   140034b7c:	movsxd esi,DWORD PTR gs:[rax+rbp*1+0x29]
   140034b81:	and    BYTE PTR [rdi+0x66],ch
   140034b84:	and    BYTE PTR [rcx+0x6e],ch
   140034b87:	je     0x140034bee
   140034b89:	jb     0x140034bf1
   140034b8b:	(bad)  
   140034b8c:	movsxd esp,DWORD PTR [rbp+0x20]
   140034b8f:	(bad)  
   140034b90:	and    eax,0xa212773
   140034b95:	add    BYTE PTR [rax],al
   140034b97:	add    BYTE PTR [rbx+0x41],al
   140034b9a:	jo     0x140034c0c
   140034b9c:	push   rbx
   140034b9d:	jns    0x140034c12
   140034b9f:	je     0x140034c06
   140034ba1:	ins    DWORD PTR es:[rdi],dx
   140034ba2:	imul   r12d,DWORD PTR [rbx+0x74],0x6f433a3a
   140034baa:	outs   dx,BYTE PTR ds:[rsi]
   140034bab:	outs   dx,BYTE PTR ds:[rsi]
   140034bac:	movsxd esi,DWORD PTR gs:[rax+rbp*1+0x20]
   140034bb1:	and    eax,0x7332332d
   140034bb6:	and    BYTE PTR [rcx],ch
   140034bb8:	and    BYTE PTR [rip+0x66332e38],ah        # 0x1a63679f6
   140034bbe:	and    BYTE PTR [rbp+0x73],ch
   140034bc1:	movsxd eax,DWORD PTR gs:[rax]
   140034bc4:	add    BYTE PTR [rax],al
   140034bc6:	add    BYTE PTR [rax],al
   140034bc8:	rex.B jo 0x140034c3b
   140034bcb:	push   rbx
   140034bcc:	jns    0x140034c41
   140034bce:	je     0x140034c35
   140034bd0:	ins    DWORD PTR es:[rdi],dx
   140034bd1:	imul   r12d,DWORD PTR [rbx+0x74],0x7245203a
   140034bd9:	jb     0x140034c4a
   140034bdb:	jb     0x140034bfd
   140034bdd:	imul   ebp,DWORD PTR [rsi+0x20],0x74696e49
   140034be4:	sub    BYTE PTR [rcx],ch
   140034be6:	and    BYTE PTR [rdi+0x66],ch
   140034be9:	and    BYTE PTR [rcx+0x6e],ch
   140034bec:	je     0x140034c53
   140034bee:	jb     0x140034c56
   140034bf0:	(bad)  
   140034bf1:	movsxd esp,DWORD PTR [rbp+0x20]
   140034bf4:	(bad)  
   140034bf5:	and    eax,0xa212773
   140034bfa:	add    BYTE PTR [rax],al
   140034bfc:	add    BYTE PTR [rax],al
   140034bfe:	add    BYTE PTR [rax],al
   140034c00:	rex.XB
   140034c01:	rex.B jo 0x140034c74
   140034c04:	push   rbx
   140034c05:	jns    0x140034c7a
   140034c07:	je     0x140034c6e
   140034c09:	ins    DWORD PTR es:[rdi],dx
   140034c0a:	imul   r12d,DWORD PTR [rbx+0x74],0x6e493a3a
   140034c12:	imul   esi,DWORD PTR [rax+riz*1+0x20],0x25202820
   140034c1a:	sub    eax,0x20733233
   140034c1f:	sub    DWORD PTR [rax],esp
   140034c21:	and    eax,0x66332e38
   140034c26:	and    BYTE PTR [rbp+0x73],ch
   140034c29:	movsxd eax,DWORD PTR gs:[rax]
   140034c2c:	add    BYTE PTR [rax],al
   140034c2e:	add    BYTE PTR [rax],al
   140034c30:	addr32 (bad) 
   140034c32:	ins    DWORD PTR es:[rdi],dx
   140034c33:	imul   ebp,DWORD PTR gs:[rsi+0x66],0x69672e6f
   140034c3b:	add    BYTE PTR [rax],al
   140034c3d:	add    BYTE PTR [rax],al
   140034c3f:	add    BYTE PTR [rdi+0x61],ah
   140034c42:	ins    DWORD PTR es:[rdi],dx
   140034c43:	imul   ebp,DWORD PTR gs:[rsi+0x66],0x6f
   140034c4b:	add    BYTE PTR [rax],al
   140034c4d:	add    BYTE PTR [rax],al
   140034c4f:	add    BYTE PTR [rax],ch
   140034c51:	xor    al,BYTE PTR [rbx]
   140034c53:	rex add DWORD PTR [rax],eax
   140034c56:	add    BYTE PTR [rax],al
   140034c58:	cwde   
   140034c59:	add    r8,QWORD PTR [rax+0x1]
   140034c5d:	add    BYTE PTR [rax],al
   140034c5f:	add    BYTE PTR [rax+0x140034c],ch
   140034c65:	add    BYTE PTR [rax],al
   140034c67:	add    BYTE PTR [rax+0x140034c],bh
   140034c6d:	add    BYTE PTR [rax],al
   140034c6f:	add    al,cl
   140034c71:	add    r8,QWORD PTR [rax+0x1]
   140034c75:	add    BYTE PTR [rax],al
   140034c77:	add    al,bl
   140034c79:	add    r8,QWORD PTR [rax+0x1]
   140034c7d:	add    BYTE PTR [rax],al
   140034c7f:	add    al,ch
   140034c81:	add    r8,QWORD PTR [rax+0x1]
   140034c85:	add    BYTE PTR [rax],al
   140034c87:	add    BYTE PTR [rax],ch
   140034c89:	cmp    eax,0x14003
   140034c8e:	add    BYTE PTR [rax],al
   140034c90:	clc    
   140034c91:	add    r8,QWORD PTR [rax+0x1]
   140034c95:	add    BYTE PTR [rax],al
   140034c97:	add    BYTE PTR [rcx+0x6d],ch
   140034c9a:	gs ins DWORD PTR es:[rdi],dx
   140034c9c:	(bad)  
   140034c9d:	outs   dx,BYTE PTR ds:[rsi]
   140034c9e:	(bad)  
   140034c9f:	addr32 gs jb 0x140034ca3
   140034ca3:	add    BYTE PTR [rax],al
   140034ca5:	add    BYTE PTR [rax],al
   140034ca7:	add    BYTE PTR [rcx+0x6e],ch
   140034caa:	jo     0x140034d21
   140034cac:	je     0x140034d21
   140034cae:	jns    0x140034d23
   140034cb0:	je     0x140034d17
   140034cb2:	ins    DWORD PTR es:[rdi],dx
   140034cb3:	add    BYTE PTR [rax],al
   140034cb5:	add    BYTE PTR [rax],al
   140034cb7:	add    BYTE PTR [rdi+rbp*2+0x63],ch
   140034cbb:	(bad)  
   140034cbc:	ins    BYTE PTR es:[rdi],dx
   140034cbd:	imul   edi,DWORD PTR [rdx+0x65],0x0
   140034cc4:	add    BYTE PTR [rax],al
   140034cc6:	add    BYTE PTR [rax],al
   140034cc8:	ins    DWORD PTR es:[rdi],dx
   140034cc9:	(bad)  
   140034cca:	je     0x140034d31
   140034ccc:	jb     0x140034d37
   140034cce:	(bad)  
   140034ccf:	ins    BYTE PTR es:[rdi],dx
   140034cd0:	jae    0x140034d4b
   140034cd2:	jae    0x140034d48
   140034cd4:	gs ins DWORD PTR es:[rdi],dx
   140034cd6:	xor    al,BYTE PTR [rax]
   140034cd8:	outs   dx,BYTE PTR ds:[rsi]
   140034cd9:	gs je  0x140034d53
   140034cdc:	outs   dx,DWORD PTR ds:[rsi]
   140034cdd:	jb     0x140034d4a
   140034cdf:	jae    0x140034d5a
   140034ce1:	jae    0x140034d57
   140034ce3:	gs ins DWORD PTR es:[rdi],dx
   140034ce5:	add    BYTE PTR [rax],al
   140034ce7:	add    BYTE PTR [rdx+0x65],dh
   140034cea:	jae    0x140034d5b
   140034cec:	jne    0x140034d60
   140034cee:	movsxd esp,DWORD PTR [rbp+0x73]
   140034cf1:	jns    0x140034d66
   140034cf3:	je     0x140034d5a
   140034cf5:	ins    DWORD PTR es:[rdi],dx
   140034cf6:	add    BYTE PTR [rax],al
   140034cf8:	jae    0x140034d69
   140034cfa:	jne    0x140034d6a
   140034cfc:	fs jae 0x140034d78
   140034cff:	jae    0x140034d75
   140034d01:	gs ins DWORD PTR es:[rdi],dx
   140034d03:	add    BYTE PTR [rax],al
   140034d05:	add    BYTE PTR [rax],al
   140034d07:	add    BYTE PTR [rax],bh
   140034d09:	add    r8,QWORD PTR [r8+0x1]
   140034d0d:	add    BYTE PTR [rax],al
   140034d0f:	add    BYTE PTR [rax+0x4d],cl
   140034d12:	add    eax,DWORD PTR [rax+0x1]
   140034d15:	add    BYTE PTR [rax],al
   140034d17:	add    BYTE PTR [rax],al
   140034d19:	(bad)  
   140034d1a:	add    eax,DWORD PTR [rax+0x1]
   140034d1d:	add    BYTE PTR [rax],al
   140034d1f:	add    BYTE PTR [rax+0x4d],bl
   140034d22:	add    eax,DWORD PTR [rax+0x1]
   140034d25:	add    BYTE PTR [rax],al
   140034d27:	add    BYTE PTR [rax+0x4d],dh
   140034d2a:	add    eax,DWORD PTR [rax+0x1]
   140034d2d:	add    BYTE PTR [rax],al
   140034d2f:	add    BYTE PTR [rax+0x140034d],al
   140034d35:	add    BYTE PTR [rax],al
   140034d37:	add    BYTE PTR [rcx+0x6e],ah
   140034d3a:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   140034d41:	jae    0x140034dbc
   140034d43:	jae    0x140034db9
   140034d45:	gs ins DWORD PTR es:[rdi],dx
   140034d47:	add    BYTE PTR [rbp+0x65],ch
   140034d4a:	jae    0x140034db4
   140034d4c:	jae    0x140034dc7
   140034d4e:	jae    0x140034dc4
   140034d50:	gs ins DWORD PTR es:[rdi],dx
   140034d52:	add    BYTE PTR [rax],al
   140034d54:	add    BYTE PTR [rax],al
   140034d56:	add    BYTE PTR [rax],al
   140034d58:	jb     0x140034dbf
   140034d5a:	outs   dx,BYTE PTR ds:[rsi]
   140034d5b:	fs gs jb 0x140034dc8
   140034d5f:	outs   dx,BYTE PTR ds:[rsi]
   140034d60:	addr32 jo 0x140034dcc
   140034d63:	jo     0x140034dca
   140034d65:	ins    BYTE PTR es:[rdi],dx
   140034d66:	imul   ebp,DWORD PTR [rsi+0x65],0x73
   140034d6d:	add    BYTE PTR [rax],al
   140034d6f:	add    BYTE PTR [rbx+0x63],dh
   140034d72:	outs   dx,BYTE PTR gs:[rsi]
   140034d74:	gs jae 0x140034df0
   140034d77:	jae    0x140034ded
   140034d79:	gs ins DWORD PTR es:[rdi],dx
   140034d7b:	add    BYTE PTR [rax],al
   140034d7d:	add    BYTE PTR [rax],al
   140034d7f:	add    BYTE PTR [rdi+0x6f],dh
   140034d82:	jb     0x140034df0
   140034d84:	fs jb  0x140034dec
   140034d87:	outs   dx,BYTE PTR ds:[rsi]
   140034d88:	fs gs jb 0x140034df1
   140034d8c:	jb     0x140034d8e
   140034d8e:	add    BYTE PTR [rax],al
   140034d90:	push   rbx
   140034d91:	rex.WRXB push r13
   140034d93:	push   rdx
   140034d94:	rex.XB
   140034d95:	xor    r11b,BYTE PTR [r15+0x55]
   140034d99:	push   rbx
   140034d9a:	rex.RB pop r15
   140034d9c:	rex.X push rbp
   140034d9e:	rex.WRX
   140034d9f:	rex.R
   140034da0:	rex.WR
   140034da1:	rex.RB push r11
   140034da3:	add    BYTE PTR [rax],al
   140034da5:	add    BYTE PTR [rax],al
   140034da7:	add    BYTE PTR [rbx+0x4f],dl
   140034daa:	push   rbp
   140034dab:	push   rdx
   140034dac:	rex.XB
   140034dad:	xor    r11b,BYTE PTR [r15+0x4e]
   140034db1:	rex.WRXB pop r15
   140034db3:	rex.X push rbp
   140034db5:	rex.WRX
   140034db6:	rex.R
   140034db7:	rex.WR
   140034db8:	rex.RB push r11
   140034dba:	add    BYTE PTR [rax],al
   140034dbc:	add    BYTE PTR [rax],al
   140034dbe:	add    BYTE PTR [rax],al
   140034dc0:	sub    eax,0x5f657375
   140034dc5:	je     0x140034e30
   140034dc7:	gs jb  0x140034dfc
   140034dca:	pop    rdi
   140034dcb:	(bad)  
   140034dcc:	jne    0x140034e3c
   140034dce:	fs ins BYTE PTR es:[rdi],dx
   140034dd0:	add    BYTE PTR gs:[rax],al
   140034dd3:	add    BYTE PTR [rax],al
   140034dd5:	add    BYTE PTR [rax],al
   140034dd7:	add    BYTE PTR [rip+0x5f657375],ch        # 0x19f68c152
   140034ddd:	je     0x140034e48
   140034ddf:	gs jb  0x140034e15
   140034de2:	pop    rdi
   140034de3:	(bad)  
   140034de4:	jne    0x140034e54
   140034de6:	fs ins BYTE PTR es:[rdi],dx
   140034de8:	add    BYTE PTR gs:[rax],al
   140034deb:	add    BYTE PTR [rax],al
   140034ded:	add    BYTE PTR [rax],al
   140034def:	add    BYTE PTR [rip+0x745f6f6e],ch        # 0x1b462bd63
   140034df5:	imul   esp,DWORD PTR [rbp+0x72],0x75625f32
   140034dfc:	outs   dx,BYTE PTR ds:[rsi]
   140034dfd:	fs ins BYTE PTR es:[rdi],dx
   140034dff:	add    BYTE PTR gs:[rax],al
   140034e02:	add    BYTE PTR [rax],al
   140034e04:	add    BYTE PTR [rax],al
   140034e06:	add    BYTE PTR [rax],al
   140034e08:	sub    eax,0x745f6f6e
   140034e0d:	imul   esp,DWORD PTR [rbp+0x72],0x75625f33
   140034e14:	outs   dx,BYTE PTR ds:[rsi]
   140034e15:	fs ins BYTE PTR es:[rdi],dx
   140034e17:	add    BYTE PTR gs:[rax],al
   140034e1a:	add    BYTE PTR [rax],al
   140034e1c:	add    BYTE PTR [rax],al
   140034e1e:	add    BYTE PTR [rax],al
   140034e20:	sub    eax,0x625f6f6e
   140034e25:	jne    0x140034e95
   140034e27:	fs ins BYTE PTR es:[rdi],dx
   140034e29:	gs pop rdi
   140034e2b:	ins    DWORD PTR es:[rdi],dx
   140034e2c:	outs   dx,DWORD PTR ds:[rsi]
   140034e2d:	fs jne 0x140034e9c
   140034e30:	add    BYTE PTR gs:[rax],al
   140034e33:	add    BYTE PTR [rax],al
   140034e35:	add    BYTE PTR [rax],al
   140034e37:	add    BYTE PTR [rcx+rbp*2+0x65],dh
   140034e3b:	jb     0x140034e6f
   140034e3d:	pop    rdi
   140034e3e:	(bad)  
   140034e3f:	jne    0x140034eaf
   140034e41:	fs ins BYTE PTR es:[rdi],dx
   140034e43:	add    BYTE PTR gs:[rax],al
   140034e46:	add    BYTE PTR [rax],al
   140034e48:	je     0x140034eb3
   140034e4a:	gs jb  0x140034e80
   140034e4d:	pop    rdi
   140034e4e:	(bad)  
   140034e4f:	jne    0x140034ebf
   140034e51:	fs ins BYTE PTR es:[rdi],dx
   140034e53:	add    BYTE PTR gs:[rax],al
	...
   140034e5e:	add    BYTE PTR [rax],al
   140034e60:	add    BYTE PTR [rbx+rax*1+0x40],0x1
   140034e65:	add    BYTE PTR [rax],al
   140034e67:	add    BYTE PTR [rax],dl
   140034e69:	jne    0x140034e6f
   140034e6b:	rex add DWORD PTR [rax],eax
   140034e6e:	add    BYTE PTR [rax],al
   140034e70:	mov    eax,0x140032b
   140034e75:	add    BYTE PTR [rax],al
   140034e77:	add    BYTE PTR [rax],bl
   140034e79:	jne    0x140034e7f
   140034e7b:	rex add DWORD PTR [rax],eax
   140034e7e:	add    BYTE PTR [rax],al
   140034e80:	loopne 0x140034eae
   140034e82:	add    eax,DWORD PTR [rax+0x1]
   140034e85:	add    BYTE PTR [rax],al
   140034e87:	add    BYTE PTR [rax],ah
   140034e89:	jne    0x140034e8f
   140034e8b:	rex add DWORD PTR [rax],eax
   140034e8e:	add    BYTE PTR [rax],al
   140034e90:	lock push rsi
   140034e92:	add    eax,DWORD PTR [rax+0x1]
   140034e95:	add    BYTE PTR [rax],al
   140034e97:	add    BYTE PTR [rax+0x1400475],dl
   140034e9d:	add    BYTE PTR [rax],al
   140034e9f:	add    BYTE PTR [rax],al
   140034ea1:	push   rdi
   140034ea2:	add    eax,DWORD PTR [rax+0x1]
   140034ea5:	add    BYTE PTR [rax],al
   140034ea7:	add    BYTE PTR [rax+0x1400475],bl
   140034ead:	add    BYTE PTR [rax],al
   140034eaf:	add    BYTE PTR [rax],bl
   140034eb1:	push   rdi
   140034eb2:	add    eax,DWORD PTR [rax+0x1]
   140034eb5:	add    BYTE PTR [rax],al
   140034eb7:	add    BYTE PTR [rax],ch
   140034eb9:	jne    0x140034ebf
   140034ebb:	rex add DWORD PTR [rax],eax
   140034ebe:	add    BYTE PTR [rax],al
   140034ec0:	xor    BYTE PTR [rdi+0x3],dl
   140034ec3:	rex add DWORD PTR [rax],eax
   140034ec6:	add    BYTE PTR [rax],al
   140034ec8:	xor    BYTE PTR [rbp+0x4],dh
   140034ecb:	rex add DWORD PTR [rax],eax
   140034ece:	add    BYTE PTR [rax],al
   140034ed0:	push   rax
   140034ed1:	push   rdi
   140034ed2:	add    eax,DWORD PTR [rax+0x1]
   140034ed5:	add    BYTE PTR [rax],al
   140034ed7:	add    BYTE PTR [rax+0x1400475],cl
   140034edd:	add    BYTE PTR [rax],al
   140034edf:	add    BYTE PTR [rax+0x57],bh
   140034ee2:	add    eax,DWORD PTR [rax+0x1]
   140034ee5:	add    BYTE PTR [rax],al
   140034ee7:	add    BYTE PTR [rax+0x1400471],dl
   140034eed:	add    BYTE PTR [rax],al
   140034eef:	add    BYTE PTR [rax],bl
   140034ef1:	xor    al,BYTE PTR [rbx]
   140034ef3:	rex add DWORD PTR [rax],eax
   140034ef6:	add    BYTE PTR [rax],al
   140034ef8:	mov    BYTE PTR [rcx+0x4],dh
   140034efb:	rex add DWORD PTR [rax],eax
   140034efe:	add    BYTE PTR [rax],al
   140034f00:	nop
   140034f01:	push   rdi
   140034f02:	add    eax,DWORD PTR [rax+0x1]
   140034f05:	add    BYTE PTR [rax],al
   140034f07:	add    BYTE PTR [rax+0x1400471],bl
   140034f0d:	add    BYTE PTR [rax],al
   140034f0f:	add    BYTE PTR [rax+0x1400357],ch
   140034f15:	add    BYTE PTR [rax],al
   140034f17:	add    al,cl
   140034f19:	jno    0x140034f1f
   140034f1b:	rex add DWORD PTR [rax],eax
   140034f1e:	add    BYTE PTR [rax],al
   140034f20:	rcl    BYTE PTR [rdi+0x3],0x40
   140034f24:	add    DWORD PTR [rax],eax
   140034f26:	add    BYTE PTR [rax],al
   140034f28:	fdiv   DWORD PTR [rcx+0x4]
   140034f2b:	rex add DWORD PTR [rax],eax
   140034f2e:	add    BYTE PTR [rax],al
   140034f30:	loopne 0x140034f89
   140034f32:	add    eax,DWORD PTR [rax+0x1]
   140034f35:	add    BYTE PTR [rax],al
   140034f37:	add    al,dl
   140034f39:	jno    0x140034f3f
   140034f3b:	rex add DWORD PTR [rax],eax
   140034f3e:	add    BYTE PTR [rax],al
   140034f40:	adc    BYTE PTR [rip+0x14003],bh        # 0x140048f49
   140034f46:	add    BYTE PTR [rax],al
   140034f48:	mov    eax,0x1400471
   140034f4d:	add    BYTE PTR [rax],al
   140034f4f:	add    al,bh
   140034f51:	push   rdi
   140034f52:	add    eax,DWORD PTR [rax+0x1]
   140034f55:	add    BYTE PTR [rax],al
   140034f57:	add    al,al
   140034f59:	jno    0x140034f5f
   140034f5b:	rex add DWORD PTR [rax],eax
   140034f5e:	add    BYTE PTR [rax],al
   140034f60:	sbb    BYTE PTR [rax+0x3],bl
   140034f63:	rex add DWORD PTR [rax],eax
   140034f66:	add    BYTE PTR [rax],al
   140034f68:	loopne 0x140034fdb
   140034f6a:	add    al,0x40
   140034f6c:	add    DWORD PTR [rax],eax
   140034f6e:	add    BYTE PTR [rax],al
   140034f70:	xor    BYTE PTR [rax+0x3],bl
   140034f73:	rex add DWORD PTR [rax],eax
   140034f76:	add    BYTE PTR [rax],al
   140034f78:	call   0x1414353ee
   140034f7d:	add    BYTE PTR [rax],al
   140034f7f:	add    BYTE PTR [rax+0x58],dl
   140034f82:	add    eax,DWORD PTR [rax+0x1]
   140034f85:	add    BYTE PTR [rax],al
   140034f87:	add    al,dh
   140034f89:	jno    0x140034f8f
   140034f8b:	rex add DWORD PTR [rax],eax
   140034f8e:	add    BYTE PTR [rax],al
   140034f90:	push   0x1400358
   140034f95:	add    BYTE PTR [rax],al
   140034f97:	add    al,bh
   140034f99:	jno    0x140034f9f
   140034f9b:	rex add DWORD PTR [rax],eax
   140034f9e:	add    BYTE PTR [rax],al
   140034fa0:	mov    BYTE PTR [rax+0x3],bl
   140034fa3:	rex add DWORD PTR [rax],eax
   140034fa6:	add    BYTE PTR [rax],al
   140034fa8:	xor    BYTE PTR [rcx+0x4],0x40
   140034fac:	add    DWORD PTR [rax],eax
   140034fae:	add    BYTE PTR [rax],al
   140034fb0:	movabs al,ds:0x8800000001400358
   140034fb9:	jb     0x140034fbf
   140034fbb:	rex add DWORD PTR [rax],eax
   140034fbe:	add    BYTE PTR [rax],al
   140034fc0:	mov    al,0x58
   140034fc2:	add    eax,DWORD PTR [rax+0x1]
   140034fc5:	add    BYTE PTR [rax],al
   140034fc7:	add    BYTE PTR [rax+0x1400472],dl
   140034fcd:	add    BYTE PTR [rax],al
   140034fcf:	add    al,al
   140034fd1:	pop    rax
   140034fd2:	add    eax,DWORD PTR [rax+0x1]
   140034fd5:	add    BYTE PTR [rax],al
   140034fd7:	add    BYTE PTR [rax+0x1400472],bl
   140034fdd:	add    BYTE PTR [rax],al
   140034fdf:	add    al,bl
   140034fe1:	pop    rax
   140034fe2:	add    eax,DWORD PTR [rax+0x1]
   140034fe5:	add    BYTE PTR [rax],al
   140034fe7:	add    BYTE PTR [rax+0x1400472],ah
   140034fed:	add    BYTE PTR [rax],al
   140034fef:	add    al,dh
   140034ff1:	pop    rax
   140034ff2:	add    eax,DWORD PTR [rax+0x1]
   140034ff5:	add    BYTE PTR [rax],al
   140034ff7:	add    BYTE PTR [rax+0x1400472],ch
   140034ffd:	add    BYTE PTR [rax],al
   140034fff:	add    BYTE PTR [rax],al
   140035001:	pop    rcx
   140035002:	add    eax,DWORD PTR [rax+0x1]
   140035005:	add    BYTE PTR [rax],al
   140035007:	add    BYTE PTR [rax],al
   140035009:	jb     0x14003500f
   14003500b:	rex add DWORD PTR [rax],eax
   14003500e:	add    BYTE PTR [rax],al
   140035010:	sbb    BYTE PTR [rcx+0x3],bl
   140035013:	rex add DWORD PTR [rax],eax
   140035016:	add    BYTE PTR [rax],al
   140035018:	or     BYTE PTR [rdx+0x4],dh
   14003501b:	rex add DWORD PTR [rax],eax
   14003501e:	add    BYTE PTR [rax],al
   140035020:	xor    BYTE PTR [rcx+0x3],bl
   140035023:	rex add DWORD PTR [rax],eax
   140035026:	add    BYTE PTR [rax],al
   140035028:	adc    BYTE PTR [rdx+0x4],dh
   14003502b:	rex add DWORD PTR [rax],eax
   14003502e:	add    BYTE PTR [rax],al
   140035030:	cmp    BYTE PTR [rip+0x14003],bh        # 0x140049039
   140035036:	add    BYTE PTR [rax],al
   140035038:	sbb    BYTE PTR [rdx+0x4],dh
   14003503b:	rex add DWORD PTR [rax],eax
   14003503e:	add    BYTE PTR [rax],al
   140035040:	push   rax
   140035041:	pop    rcx
   140035042:	add    eax,DWORD PTR [rax+0x1]
   140035045:	add    BYTE PTR [rax],al
   140035047:	add    BYTE PTR [rax],ah
   140035049:	jb     0x14003504f
   14003504b:	rex add DWORD PTR [rax],eax
   14003504e:	add    BYTE PTR [rax],al
   140035050:	(bad)  
   140035051:	pop    rcx
   140035052:	add    eax,DWORD PTR [rax+0x1]
   140035055:	add    BYTE PTR [rax],al
   140035057:	add    BYTE PTR [rax],ch
   140035059:	jb     0x14003505f
   14003505b:	rex add DWORD PTR [rax],eax
   14003505e:	add    BYTE PTR [rax],al
   140035060:	js     0x1400350bb
   140035062:	add    eax,DWORD PTR [rax+0x1]
   140035065:	add    BYTE PTR [rax],al
   140035067:	add    al,bh
   140035069:	jb     0x14003506f
   14003506b:	rex add DWORD PTR [rax],eax
   14003506e:	add    BYTE PTR [rax],al
   140035070:	mov    BYTE PTR [rcx+0x3],bl
   140035073:	rex add DWORD PTR [rax],eax
   140035076:	add    BYTE PTR [rax],al
   140035078:	lock jb 0x14003507f
   14003507b:	rex add DWORD PTR [rax],eax
   14003507e:	add    BYTE PTR [rax],al
   140035080:	cwde   
   140035081:	pop    rcx
   140035082:	add    eax,DWORD PTR [rax+0x1]
   140035085:	add    BYTE PTR [rax],al
   140035087:	add    BYTE PTR [rax],al
   140035089:	jae    0x14003508f
   14003508b:	rex add DWORD PTR [rax],eax
   14003508e:	add    BYTE PTR [rax],al
   140035090:	test   al,0x59
   140035092:	add    eax,DWORD PTR [rax+0x1]
   140035095:	add    BYTE PTR [rax],al
   140035097:	add    al,bl
   140035099:	jb     0x14003509f
   14003509b:	rex add DWORD PTR [rax],eax
   14003509e:	add    BYTE PTR [rax],al
   1400350a0:	mov    eax,0x1400359
   1400350a5:	add    BYTE PTR [rax],al
   1400350a7:	add    BYTE PTR [rax],cl
   1400350a9:	jae    0x1400350af
   1400350ab:	rex add DWORD PTR [rax],eax
   1400350ae:	add    BYTE PTR [rax],al
   1400350b0:	enter  0x359,0x40
   1400350b4:	add    DWORD PTR [rax],eax
   1400350b6:	add    BYTE PTR [rax],al
   1400350b8:	adc    BYTE PTR [rbx+0x4],dh
   1400350bb:	rex add DWORD PTR [rax],eax
   1400350be:	add    BYTE PTR [rax],al
   1400350c0:	fcomp  DWORD PTR [rcx+0x3]
   1400350c3:	rex add DWORD PTR [rax],eax
   1400350c6:	add    BYTE PTR [rax],al
   1400350c8:	rex.W jno 0x1400350cf
   1400350cb:	rex add DWORD PTR [rax],eax
   1400350ce:	add    BYTE PTR [rax],al
   1400350d0:	fcomp  DWORD PTR [rcx+0x3]
   1400350d3:	rex add DWORD PTR [rax],eax
   1400350d6:	add    BYTE PTR [rax],al
   1400350d8:	push   rax
   1400350d9:	jno    0x1400350df
   1400350db:	rex add DWORD PTR [rax],eax
   1400350de:	add    BYTE PTR [rax],al
   1400350e0:	call   0x14143543e
   1400350e5:	add    BYTE PTR [rax],al
   1400350e7:	add    BYTE PTR [rax],bl
   1400350e9:	jae    0x1400350ef
   1400350eb:	rex add DWORD PTR [rax],eax
   1400350ee:	add    BYTE PTR [rax],al
   1400350f0:	add    BYTE PTR [rdx+0x3],bl
   1400350f3:	rex add DWORD PTR [rax],eax
   1400350f6:	add    BYTE PTR [rax],al
   1400350f8:	and    BYTE PTR [rbx+0x4],dh
   1400350fb:	rex add DWORD PTR [rax],eax
   1400350fe:	add    BYTE PTR [rax],al
   140035100:	or     BYTE PTR [rdx+0x3],bl
   140035103:	rex add DWORD PTR [rax],eax
   140035106:	add    BYTE PTR [rax],al
   140035108:	sub    BYTE PTR [rbx+0x4],dh
   14003510b:	rex add DWORD PTR [rax],eax
   14003510e:	add    BYTE PTR [rax],al
   140035110:	adc    BYTE PTR [rdx+0x3],bl
   140035113:	rex add DWORD PTR [rax],eax
   140035116:	add    BYTE PTR [rax],al
   140035118:	xor    BYTE PTR [rbx+0x4],dh
   14003511b:	rex add DWORD PTR [rax],eax
   14003511e:	add    BYTE PTR [rax],al
   140035120:	and    BYTE PTR [rdx+0x3],bl
   140035123:	rex add DWORD PTR [rax],eax
   140035126:	add    BYTE PTR [rax],al
   140035128:	cmp    BYTE PTR [rbx+0x4],dh
   14003512b:	rex add DWORD PTR [rax],eax
   14003512e:	add    BYTE PTR [rax],al
   140035130:	cmp    BYTE PTR [rdx+0x3],bl
   140035133:	rex add DWORD PTR [rax],eax
   140035136:	add    BYTE PTR [rax],al
   140035138:	mov    al,0x72
   14003513a:	add    al,0x40
   14003513c:	add    DWORD PTR [rax],eax
   14003513e:	add    BYTE PTR [rax],al
   140035140:	rex.W pop rdx
   140035142:	add    eax,DWORD PTR [rax+0x1]
   140035145:	add    BYTE PTR [rax],al
   140035147:	add    BYTE PTR [rax+0x1400472],bh
   14003514d:	add    BYTE PTR [rax],al
   14003514f:	add    BYTE PTR [rax+0x5a],bl
   140035152:	add    eax,DWORD PTR [rax+0x1]
   140035155:	add    BYTE PTR [rax],al
   140035157:	add    BYTE PTR [rax+0x72],dh
   14003515a:	add    al,0x40
   14003515c:	add    DWORD PTR [rax],eax
   14003515e:	add    BYTE PTR [rax],al
   140035160:	push   0x140035a
   140035165:	add    BYTE PTR [rax],al
   140035167:	add    BYTE PTR [rax+0x72],bh
   14003516a:	add    al,0x40
   14003516c:	add    DWORD PTR [rax],eax
   14003516e:	add    BYTE PTR [rax],al
   140035170:	sbb    BYTE PTR [rdx+0x3],0x40
   140035174:	add    DWORD PTR [rax],eax
   140035176:	add    BYTE PTR [rax],al
   140035178:	xor    BYTE PTR [rdx+0x4],0x40
   14003517c:	add    DWORD PTR [rax],eax
   14003517e:	add    BYTE PTR [rax],al
   140035180:	cwde   
   140035181:	pop    rdx
   140035182:	add    eax,DWORD PTR [rax+0x1]
   140035185:	add    BYTE PTR [rax],al
   140035187:	add    al,cl
   140035189:	jb     0x14003518f
   14003518b:	rex add DWORD PTR [rax],eax
   14003518e:	add    BYTE PTR [rax],al
   140035190:	test   al,0x5a
   140035192:	add    eax,DWORD PTR [rax+0x1]
   140035195:	add    BYTE PTR [rax],al
   140035197:	add    al,dl
   140035199:	jb     0x14003519f
   14003519b:	rex add DWORD PTR [rax],eax
   14003519e:	add    BYTE PTR [rax],al
   1400351a0:	mov    eax,0x140035a
   1400351a5:	add    BYTE PTR [rax],al
   1400351a7:	add    BYTE PTR [rax+0x73],al
   1400351aa:	add    al,0x40
   1400351ac:	add    DWORD PTR [rax],eax
   1400351ae:	add    BYTE PTR [rax],al
   1400351b0:	rcr    BYTE PTR [rdx+0x3],1
   1400351b3:	rex add DWORD PTR [rax],eax
   1400351b6:	add    BYTE PTR [rax],al
   1400351b8:	shl    BYTE PTR [rdx+0x4],0x40
   1400351bc:	add    DWORD PTR [rax],eax
   1400351be:	add    BYTE PTR [rax],al
   1400351c0:	call   0x14143551f
   1400351c5:	add    BYTE PTR [rax],al
   1400351c7:	add    BYTE PTR [rax+0x1400471],ah
   1400351cd:	add    BYTE PTR [rax],al
   1400351cf:	add    al,bh
   1400351d1:	pop    rdx
   1400351d2:	add    eax,DWORD PTR [rax+0x1]
   1400351d5:	add    BYTE PTR [rax],al
   1400351d7:	add    BYTE PTR [rax+0x1400471],ch
   1400351dd:	add    BYTE PTR [rax],al
   1400351df:	add    BYTE PTR [rax],dl
   1400351e1:	pop    rbx
   1400351e2:	add    eax,DWORD PTR [rax+0x1]
   1400351e5:	add    BYTE PTR [rax],al
   1400351e7:	add    BYTE PTR [rax+0x73],ch
   1400351ea:	add    al,0x40
   1400351ec:	add    DWORD PTR [rax],eax
   1400351ee:	add    BYTE PTR [rax],al
   1400351f0:	sub    BYTE PTR [rbx+0x3],bl
   1400351f3:	rex add DWORD PTR [rax],eax
   1400351f6:	add    BYTE PTR [rax],al
   1400351f8:	loopne 0x14003526c
   1400351fa:	add    al,0x40
   1400351fc:	add    DWORD PTR [rax],eax
   1400351fe:	add    BYTE PTR [rax],al
   140035200:	rex pop rbx
   140035202:	add    eax,DWORD PTR [rax+0x1]
   140035205:	add    BYTE PTR [rax],al
   140035207:	add    al,ch
   140035209:	jb     0x14003520f
   14003520b:	rex add DWORD PTR [rax],eax
   14003520e:	add    BYTE PTR [rax],al
   140035210:	pop    rax
   140035211:	pop    rbx
   140035212:	add    eax,DWORD PTR [rax+0x1]
   140035215:	add    BYTE PTR [rax],al
   140035217:	add    BYTE PTR [rax+0x1400471],dh
   14003521d:	add    BYTE PTR [rax],al
   14003521f:	add    BYTE PTR [rax+0x5b],bh
   140035222:	add    eax,DWORD PTR [rax+0x1]
   140035225:	add    BYTE PTR [rax],al
   140035227:	add    BYTE PTR [rax],dh
   140035229:	jb     0x14003522f
   14003522b:	rex add DWORD PTR [rax],eax
   14003522e:	add    BYTE PTR [rax],al
   140035230:	nop
   140035231:	pop    rbx
   140035232:	add    eax,DWORD PTR [rax+0x1]
   140035235:	add    BYTE PTR [rax],al
   140035237:	add    al,cl
   140035239:	jae    0x14003523f
   14003523b:	rex add DWORD PTR [rax],eax
   14003523e:	add    BYTE PTR [rax],al
   140035240:	movabs al,ds:0x400000000140035b
   140035249:	jb     0x14003524f
   14003524b:	rex add DWORD PTR [rax],eax
   14003524e:	add    BYTE PTR [rax],al
   140035250:	mov    eax,0x140035b
   140035255:	add    BYTE PTR [rax],al
   140035257:	add    BYTE PTR [rax+0x72],cl
   14003525a:	add    al,0x40
   14003525c:	add    DWORD PTR [rax],eax
   14003525e:	add    BYTE PTR [rax],al
   140035260:	rcr    BYTE PTR [rbx+0x3],1
   140035263:	rex add DWORD PTR [rax],eax
   140035266:	add    BYTE PTR [rax],al
   140035268:	push   rax
   140035269:	jb     0x14003526f
   14003526b:	rex add DWORD PTR [rax],eax
   14003526e:	add    BYTE PTR [rax],al
   140035270:	call   0x1414355d0
   140035275:	add    BYTE PTR [rax],al
   140035277:	add    BYTE PTR [rax+0x73],dh
   14003527a:	add    al,0x40
   14003527c:	add    DWORD PTR [rax],eax
   14003527e:	add    BYTE PTR [rax],al
   140035280:	add    BYTE PTR [rbx+rax*1+0x40],bl
   140035284:	add    DWORD PTR [rax],eax
   140035286:	add    BYTE PTR [rax],al
   140035288:	cwde   
   140035289:	jae    0x14003528f
   14003528b:	rex add DWORD PTR [rax],eax
   14003528e:	add    BYTE PTR [rax],al
   140035290:	and    BYTE PTR [rbx+rax*1+0x40],bl
   140035294:	add    DWORD PTR [rax],eax
   140035296:	add    BYTE PTR [rax],al
   140035298:	movabs al,ds:0x3800000001400473
   1400352a1:	pop    rsp
   1400352a2:	add    eax,DWORD PTR [rax+0x1]
   1400352a5:	add    BYTE PTR [rax],al
   1400352a7:	add    BYTE PTR [rax+0x1400473],dl
   1400352ad:	add    BYTE PTR [rax],al
   1400352af:	add    BYTE PTR [rax+0x5c],dl
   1400352b2:	add    eax,DWORD PTR [rax+0x1]
   1400352b5:	add    BYTE PTR [rax],al
   1400352b7:	add    BYTE PTR [rax+0x1400473],cl
   1400352bd:	add    BYTE PTR [rax],al
   1400352bf:	add    BYTE PTR [rax+0x5c],ah
   1400352c2:	add    eax,DWORD PTR [rax+0x1]
   1400352c5:	add    BYTE PTR [rax],al
   1400352c7:	add    BYTE PTR [rax+0x1400473],al
   1400352cd:	add    BYTE PTR [rax],al
   1400352cf:	add    BYTE PTR [rax+0x140035c],al
   1400352d5:	add    BYTE PTR [rax],al
   1400352d7:	add    BYTE PTR [rax+0x1400473],ch
   1400352dd:	add    BYTE PTR [rax],al
   1400352df:	add    BYTE PTR [rax+0x140035c],bl
   1400352e5:	add    BYTE PTR [rax],al
   1400352e7:	add    BYTE PTR [rax],bh
   1400352e9:	jne    0x1400352ef
   1400352eb:	rex add DWORD PTR [rax],eax
   1400352ee:	add    BYTE PTR [rax],al
   1400352f0:	mov    al,0x5c
   1400352f2:	add    eax,DWORD PTR [rax+0x1]
   1400352f5:	add    BYTE PTR [rax],al
   1400352f7:	add    BYTE PTR [rax+0x75],al
   1400352fa:	add    al,0x40
   1400352fc:	add    DWORD PTR [rax],eax
   1400352fe:	add    BYTE PTR [rax],al
   140035300:	rcr    BYTE PTR [rbx+rax*1+0x40],0x1
   140035305:	add    BYTE PTR [rax],al
   140035307:	add    BYTE PTR [rax+0x75],cl
   14003530a:	add    al,0x40
   14003530c:	add    DWORD PTR [rax],eax
   14003530e:	add    BYTE PTR [rax],al
   140035310:	loopne 0x14003536e
   140035312:	add    eax,DWORD PTR [rax+0x1]
   140035315:	add    BYTE PTR [rax],al
   140035317:	add    BYTE PTR [rax+0x75],dl
   14003531a:	add    al,0x40
   14003531c:	add    DWORD PTR [rax],eax
   14003531e:	add    BYTE PTR [rax],al
   140035320:	clc    
   140035321:	pop    rsp
   140035322:	add    eax,DWORD PTR [rax+0x1]
   140035325:	add    BYTE PTR [rax],al
   140035327:	add    BYTE PTR [rax+0x75],bl
   14003532a:	add    al,0x40
   14003532c:	add    DWORD PTR [rax],eax
   14003532e:	add    BYTE PTR [rax],al
   140035330:	sbb    BYTE PTR [rbp+0x3],bl
   140035333:	rex add DWORD PTR [rax],eax
   140035336:	add    BYTE PTR [rax],al
   140035338:	(bad)  
   140035339:	jne    0x14003533f
   14003533b:	rex add DWORD PTR [rax],eax
   14003533e:	add    BYTE PTR [rax],al
   140035340:	rex pop rbp
   140035342:	add    eax,DWORD PTR [rax+0x1]
   140035345:	add    BYTE PTR [rax],al
   140035347:	add    BYTE PTR [rax+0x75],ch
   14003534a:	add    al,0x40
   14003534c:	add    DWORD PTR [rax],eax
   14003534e:	add    BYTE PTR [rax],al
   140035350:	(bad)  
   140035351:	pop    rbp
   140035352:	add    eax,DWORD PTR [rax+0x1]
   140035355:	add    BYTE PTR [rax],al
   140035357:	add    BYTE PTR [rax+0x75],dh
   14003535a:	add    al,0x40
   14003535c:	add    DWORD PTR [rax],eax
   14003535e:	add    BYTE PTR [rax],al
   140035360:	sbb    BYTE PTR [rbp+0x3],0x40
   140035364:	add    DWORD PTR [rax],eax
   140035366:	add    BYTE PTR [rax],al
   140035368:	js     0x1400353df
   14003536a:	add    al,0x40
   14003536c:	add    DWORD PTR [rax],eax
   14003536e:	add    BYTE PTR [rax],al
   140035370:	cwde   
   140035371:	pop    rbp
   140035372:	add    eax,DWORD PTR [rax+0x1]
   140035375:	add    BYTE PTR [rax],al
   140035377:	add    BYTE PTR [rax+0x1400475],al
   14003537d:	add    BYTE PTR [rax],al
   14003537f:	add    BYTE PTR [rax+0x140035d],bh
   140035385:	add    BYTE PTR [rax],al
   140035387:	add    BYTE PTR [rax+0x73],bh
   14003538a:	add    al,0x40
   14003538c:	add    DWORD PTR [rax],eax
   14003538e:	add    BYTE PTR [rax],al
   140035390:	rcr    BYTE PTR [rbp+0x3],1
   140035393:	rex add DWORD PTR [rax],eax
   140035396:	add    BYTE PTR [rax],al
   140035398:	pop    rax
   140035399:	jno    0x14003539f
   14003539b:	rex add DWORD PTR [rax],eax
   14003539e:	add    BYTE PTR [rax],al
   1400353a0:	call   0x141435702
   1400353a5:	add    BYTE PTR [rax],al
   1400353a7:	add    BYTE PTR [rax+0x71],ah
   1400353aa:	add    al,0x40
   1400353ac:	add    DWORD PTR [rax],eax
   1400353ae:	add    BYTE PTR [rax],al
   1400353b0:	clc    
   1400353b1:	pop    rbp
   1400353b2:	add    eax,DWORD PTR [rax+0x1]
   1400353b5:	add    BYTE PTR [rax],al
   1400353b7:	add    BYTE PTR [rax+0x71],ch
   1400353ba:	add    al,0x40
   1400353bc:	add    DWORD PTR [rax],eax
   1400353be:	add    BYTE PTR [rax],al
   1400353c0:	or     BYTE PTR [rsi+0x3],bl
   1400353c3:	rex add DWORD PTR [rax],eax
   1400353c6:	add    BYTE PTR [rax],al
   1400353c8:	jo     0x14003543b
   1400353ca:	add    al,0x40
   1400353cc:	add    DWORD PTR [rax],eax
   1400353ce:	add    BYTE PTR [rax],al
   1400353d0:	and    BYTE PTR [rsi+0x3],bl
   1400353d3:	rex add DWORD PTR [rax],eax
   1400353d6:	add    BYTE PTR [rax],al
   1400353d8:	js     0x14003544b
   1400353da:	add    al,0x40
   1400353dc:	add    DWORD PTR [rax],eax
   1400353de:	add    BYTE PTR [rax],al
   1400353e0:	xor    BYTE PTR [rcx],dh
   1400353e2:	add    eax,DWORD PTR [rax+0x1]
   1400353e5:	add    BYTE PTR [rax],al
   1400353e7:	add    BYTE PTR [rax],bh
   1400353e9:	jb     0x1400353ef
   1400353eb:	rex add DWORD PTR [rax],eax
   1400353ee:	add    BYTE PTR [rax],al
   1400353f0:	cmp    BYTE PTR [rsi+0x3],bl
   1400353f3:	rex add DWORD PTR [rax],eax
   1400353f6:	add    BYTE PTR [rax],al
   1400353f8:	xor    BYTE PTR [rcx+0x4],dh
   1400353fb:	rex add DWORD PTR [rax],eax
   1400353fe:	add    BYTE PTR [rax],al
   140035400:	push   rax
   140035401:	pop    rsi
   140035402:	add    eax,DWORD PTR [rax+0x1]
   140035405:	add    BYTE PTR [rax],al
   140035407:	add    BYTE PTR [rax],bh
   140035409:	jno    0x14003540f
   14003540b:	rex add DWORD PTR [rax],eax
   14003540e:	add    BYTE PTR [rax],al
   140035410:	js     0x140035470
   140035412:	add    eax,DWORD PTR [rax+0x1]
   140035415:	add    BYTE PTR [rax],al
   140035417:	add    BYTE PTR [rax+0x73],cl
   14003541a:	add    al,0x40
   14003541c:	add    DWORD PTR [rax],eax
   14003541e:	add    BYTE PTR [rax],al
   140035420:	nop
   140035421:	pop    rsi
   140035422:	add    eax,DWORD PTR [rax+0x1]
   140035425:	add    BYTE PTR [rax],al
   140035427:	add    BYTE PTR [rax+0x73],dl
   14003542a:	add    al,0x40
   14003542c:	add    DWORD PTR [rax],eax
   14003542e:	add    BYTE PTR [rax],al
   140035430:	mov    al,0x5e
   140035432:	add    eax,DWORD PTR [rax+0x1]
   140035435:	add    BYTE PTR [rax],al
   140035437:	add    BYTE PTR [rax+0x73],bl
   14003543a:	add    al,0x40
   14003543c:	add    DWORD PTR [rax],eax
   14003543e:	add    BYTE PTR [rax],al
   140035440:	rcr    BYTE PTR [rsi+0x3],1
   140035443:	rex add DWORD PTR [rax],eax
   140035446:	add    BYTE PTR [rax],al
   140035448:	(bad)  
   140035449:	jae    0x14003544f
   14003544b:	rex add DWORD PTR [rax],eax
   14003544e:	add    BYTE PTR [rax],al
   140035450:	lock pop rsi
   140035452:	add    eax,DWORD PTR [rax+0x1]
   140035455:	add    BYTE PTR [rax],al
   140035457:	add    al,bl
   140035459:	jae    0x14003545f
   14003545b:	rex add DWORD PTR [rax],eax
   14003545e:	add    BYTE PTR [rax],al
   140035460:	or     BYTE PTR [rdi+0x3],bl
   140035463:	rex add DWORD PTR [rax],eax
   140035466:	add    BYTE PTR [rax],al
   140035468:	loopne 0x1400354dd
   14003546a:	add    al,0x40
   14003546c:	add    DWORD PTR [rax],eax
   14003546e:	add    BYTE PTR [rax],al
   140035470:	and    BYTE PTR [rdi+0x3],bl
   140035473:	rex add DWORD PTR [rax],eax
   140035476:	add    BYTE PTR [rax],al
   140035478:	cmp    BYTE PTR [rsp+rax*1+0x40],dh
   14003547c:	add    DWORD PTR [rax],eax
   14003547e:	add    BYTE PTR [rax],al
   140035480:	rex pop rdi
   140035482:	add    eax,DWORD PTR [rax+0x1]
   140035485:	add    BYTE PTR [rax],al
   140035487:	add    al,dh
   140035489:	jae    0x14003548f
   14003548b:	rex add DWORD PTR [rax],eax
   14003548e:	add    BYTE PTR [rax],al
   140035490:	pop    rax
   140035491:	pop    rdi
   140035492:	add    eax,DWORD PTR [rax+0x1]
   140035495:	add    BYTE PTR [rax],al
   140035497:	add    al,bh
   140035499:	jae    0x14003549f
   14003549b:	rex add DWORD PTR [rax],eax
   14003549e:	add    BYTE PTR [rax],al
   1400354a0:	js     0x140035501
   1400354a2:	add    eax,DWORD PTR [rax+0x1]
   1400354a5:	add    BYTE PTR [rax],al
   1400354a7:	add    BYTE PTR [rax],dl
   1400354a9:	je     0x1400354af
   1400354ab:	rex add DWORD PTR [rax],eax
   1400354ae:	add    BYTE PTR [rax],al
   1400354b0:	mov    BYTE PTR [rdi+0x3],bl
   1400354b3:	rex add DWORD PTR [rax],eax
   1400354b6:	add    BYTE PTR [rax],al
   1400354b8:	add    BYTE PTR [rsp+rax*1+0x40],dh
   1400354bc:	add    DWORD PTR [rax],eax
   1400354be:	add    BYTE PTR [rax],al
   1400354c0:	movabs al,ds:0x80000000140035f
   1400354c9:	je     0x1400354cf
   1400354cb:	rex add DWORD PTR [rax],eax
   1400354ce:	add    BYTE PTR [rax],al
   1400354d0:	mov    eax,0x140035f
   1400354d5:	add    BYTE PTR [rax],al
   1400354d7:	add    BYTE PTR [rax+0x74],cl
   1400354da:	add    al,0x40
   1400354dc:	add    DWORD PTR [rax],eax
   1400354de:	add    BYTE PTR [rax],al
   1400354e0:	rcr    BYTE PTR [rdi+0x3],1
   1400354e3:	rex add DWORD PTR [rax],eax
   1400354e6:	add    BYTE PTR [rax],al
   1400354e8:	push   rax
   1400354e9:	je     0x1400354ef
   1400354eb:	rex add DWORD PTR [rax],eax
   1400354ee:	add    BYTE PTR [rax],al
   1400354f0:	loopne 0x140035551
   1400354f2:	add    eax,DWORD PTR [rax+0x1]
   1400354f5:	add    BYTE PTR [rax],al
   1400354f7:	add    BYTE PTR [rax+0x74],bl
   1400354fa:	add    al,0x40
   1400354fc:	add    DWORD PTR [rax],eax
   1400354fe:	add    BYTE PTR [rax],al
   140035500:	clc    
   140035501:	pop    rdi
   140035502:	add    eax,DWORD PTR [rax+0x1]
   140035505:	add    BYTE PTR [rax],al
   140035507:	add    BYTE PTR [rax+0x74],ah
   14003550a:	add    al,0x40
   14003550c:	add    DWORD PTR [rax],eax
   14003550e:	add    BYTE PTR [rax],al
   140035510:	sbb    BYTE PTR [rax+0x3],ah
   140035513:	rex add DWORD PTR [rax],eax
   140035516:	add    BYTE PTR [rax],al
   140035518:	push   0x1400474
   14003551d:	add    BYTE PTR [rax],al
   14003551f:	add    BYTE PTR [rax],dh
   140035521:	(bad)  
   140035522:	add    eax,DWORD PTR [rax+0x1]
   140035525:	add    BYTE PTR [rax],al
   140035527:	add    BYTE PTR [rax+0x74],dh
   14003552a:	add    al,0x40
   14003552c:	add    DWORD PTR [rax],eax
   14003552e:	add    BYTE PTR [rax],al
   140035530:	push   rax
   140035531:	(bad)  
   140035532:	add    eax,DWORD PTR [rax+0x1]
   140035535:	add    BYTE PTR [rax],al
   140035537:	add    BYTE PTR [rax+0x74],bh
   14003553a:	add    al,0x40
   14003553c:	add    DWORD PTR [rax],eax
   14003553e:	add    BYTE PTR [rax],al
   140035540:	push   0x1400360
   140035545:	add    BYTE PTR [rax],al
   140035547:	add    BYTE PTR [rax+0x1400474],al
   14003554d:	add    BYTE PTR [rax],al
   14003554f:	add    BYTE PTR [rax+0x60],bh
   140035552:	add    eax,DWORD PTR [rax+0x1]
   140035555:	add    BYTE PTR [rax],al
   140035557:	add    BYTE PTR [rax+0x1400474],cl
   14003555d:	add    BYTE PTR [rax],al
   14003555f:	add    BYTE PTR [rax+0x1400360],dl
   140035565:	add    BYTE PTR [rax],al
   140035567:	add    BYTE PTR [rax+0x1400474],dl
   14003556d:	add    BYTE PTR [rax],al
   14003556f:	add    BYTE PTR [rax+0x1400360],ch
   140035575:	add    BYTE PTR [rax],al
   140035577:	add    BYTE PTR [rax+0x1400474],bl
   14003557d:	add    BYTE PTR [rax],al
   14003557f:	add    al,cl
   140035581:	(bad)  
   140035582:	add    eax,DWORD PTR [rax+0x1]
   140035585:	add    BYTE PTR [rax],al
   140035587:	add    BYTE PTR [rax+0x1400474],ah
   14003558d:	add    BYTE PTR [rax],al
   14003558f:	add    al,ah
   140035591:	(bad)  
   140035592:	add    eax,DWORD PTR [rax+0x1]
   140035595:	add    BYTE PTR [rax],al
   140035597:	add    BYTE PTR [rax+0x1400474],ch
   14003559d:	add    BYTE PTR [rax],al
   14003559f:	add    al,bh
   1400355a1:	(bad)  
   1400355a2:	add    eax,DWORD PTR [rax+0x1]
   1400355a5:	add    BYTE PTR [rax],al
   1400355a7:	add    BYTE PTR [rax+0x1400474],dh
   1400355ad:	add    BYTE PTR [rax],al
   1400355af:	add    BYTE PTR [rax],dl
   1400355b1:	(bad)  
   1400355b2:	add    eax,DWORD PTR [rax+0x1]
   1400355b5:	add    BYTE PTR [rax],al
   1400355b7:	add    BYTE PTR [rax+0x1400474],bh
   1400355bd:	add    BYTE PTR [rax],al
   1400355bf:	add    BYTE PTR [rax],ch
   1400355c1:	(bad)  
   1400355c2:	add    eax,DWORD PTR [rax+0x1]
   1400355c5:	add    BYTE PTR [rax],al
   1400355c7:	add    al,al
   1400355c9:	je     0x1400355cf
   1400355cb:	rex add DWORD PTR [rax],eax
   1400355ce:	add    BYTE PTR [rax],al
   1400355d0:	rex (bad) 
   1400355d2:	add    eax,DWORD PTR [rax+0x1]
   1400355d5:	add    BYTE PTR [rax],al
   1400355d7:	add    al,cl
   1400355d9:	je     0x1400355df
   1400355db:	rex add DWORD PTR [rax],eax
   1400355de:	add    BYTE PTR [rax],al
   1400355e0:	pop    rax
   1400355e1:	(bad)  
   1400355e2:	add    eax,DWORD PTR [rax+0x1]
   1400355e5:	add    BYTE PTR [rax],al
   1400355e7:	add    al,dl
   1400355e9:	je     0x1400355ef
   1400355eb:	rex add DWORD PTR [rax],eax
   1400355ee:	add    BYTE PTR [rax],al
   1400355f0:	jo     0x140035653
   1400355f2:	add    eax,DWORD PTR [rax+0x1]
   1400355f5:	add    BYTE PTR [rax],al
   1400355f7:	add    al,bl
   1400355f9:	je     0x1400355ff
   1400355fb:	rex add DWORD PTR [rax],eax
   1400355fe:	add    BYTE PTR [rax],al
   140035600:	mov    BYTE PTR [rcx+0x3],ah
   140035603:	rex add DWORD PTR [rax],eax
   140035606:	add    BYTE PTR [rax],al
   140035608:	loopne 0x14003567e
   14003560a:	add    al,0x40
   14003560c:	add    DWORD PTR [rax],eax
   14003560e:	add    BYTE PTR [rax],al
   140035610:	test   al,0x61
   140035612:	add    eax,DWORD PTR [rax+0x1]
   140035615:	add    BYTE PTR [rax],al
   140035617:	add    al,ch
   140035619:	je     0x14003561f
   14003561b:	rex add DWORD PTR [rax],eax
   14003561e:	add    BYTE PTR [rax],al
   140035620:	enter  0x361,0x40
   140035624:	add    DWORD PTR [rax],eax
   140035626:	add    BYTE PTR [rax],al
   140035628:	sbb    BYTE PTR [rsp+rax*1+0x40],dh
   14003562c:	add    DWORD PTR [rax],eax
   14003562e:	add    BYTE PTR [rax],al
   140035630:	call   0x141435996
   140035635:	add    BYTE PTR [rax],al
   140035637:	add    BYTE PTR [rax],ah
   140035639:	je     0x14003563f
   14003563b:	rex add DWORD PTR [rax],eax
   14003563e:	add    BYTE PTR [rax],al
   140035640:	or     BYTE PTR [rdx+0x3],ah
   140035643:	rex add DWORD PTR [rax],eax
   140035646:	add    BYTE PTR [rax],al
   140035648:	sub    BYTE PTR [rsp+rax*1+0x40],dh
   14003564c:	add    DWORD PTR [rax],eax
   14003564e:	add    BYTE PTR [rax],al
   140035650:	xor    BYTE PTR [rdx+0x3],ah
   140035653:	rex add DWORD PTR [rax],eax
   140035656:	add    BYTE PTR [rax],al
   140035658:	xor    BYTE PTR [rsp+rax*1+0x40],dh
   14003565c:	add    DWORD PTR [rax],eax
   14003565e:	add    BYTE PTR [rax],al
   140035660:	pop    rax
   140035661:	(bad)  
   140035663:	rex add DWORD PTR [rax],eax
   140035666:	add    BYTE PTR [rax],al
   140035668:	mov    al,0x73
   14003566a:	add    al,0x40
   14003566c:	add    DWORD PTR [rax],eax
   14003566e:	add    BYTE PTR [rax],al
   140035670:	jo     0x1400356d4
   140035672:	add    eax,DWORD PTR [rax+0x1]
   140035675:	add    BYTE PTR [rax],al
   140035677:	add    BYTE PTR [rax+0x1400473],bh
   14003567d:	add    BYTE PTR [rax],al
   14003567f:	add    BYTE PTR [rax+0x1400362],dl
   140035685:	add    BYTE PTR [rax],al
   140035687:	add    BYTE PTR [rax+0x74],al
   14003568a:	add    al,0x40
   14003568c:	add    DWORD PTR [rax],eax
   14003568e:	add    BYTE PTR [rax],al
   140035690:	lods   al,BYTE PTR ds:[rsi]
   140035691:	(bad)  
   140035693:	rex add DWORD PTR [rax],eax
   140035696:	add    BYTE PTR [rax],al
   140035698:	(bad)  
   140035699:	jb     0x14003569f
   14003569b:	rex add DWORD PTR [rax],eax
   14003569e:	add    BYTE PTR [rax],al
   1400356a0:	mov    eax,0x1400362
   1400356a5:	add    BYTE PTR [rax],al
   1400356a7:	add    al,dh
   1400356a9:	je     0x1400356af
   1400356ab:	rex add DWORD PTR [rax],eax
   1400356ae:	add    BYTE PTR [rax],al
   1400356b0:	shl    BYTE PTR [rdx+0x3],1
   1400356b3:	rex add DWORD PTR [rax],eax
   1400356b6:	add    BYTE PTR [rax],al
   1400356b8:	push   0x1400472
   1400356bd:	add    BYTE PTR [rax],al
   1400356bf:	add    al,dh
   1400356c1:	(bad)  
   1400356c3:	rex add DWORD PTR [rax],eax
   1400356c6:	add    BYTE PTR [rax],al
   1400356c8:	rex jno 0x1400356cf
   1400356cb:	rex add DWORD PTR [rax],eax
   1400356ce:	add    BYTE PTR [rax],al
   1400356d0:	sbb    BYTE PTR [rbx+0x3],ah
   1400356d3:	rex add DWORD PTR [rax],eax
   1400356d6:	add    BYTE PTR [rax],al
   1400356d8:	shl    BYTE PTR [rbx+0x4],0x40
   1400356dc:	add    DWORD PTR [rax],eax
   1400356de:	add    BYTE PTR [rax],al
   1400356e0:	rex movsxd eax,DWORD PTR [rbx]
   1400356e3:	rex add DWORD PTR [rax],eax
   1400356e6:	add    BYTE PTR [rax],al
   1400356e8:	shl    BYTE PTR [rbx+0x4],1
   1400356eb:	rex add DWORD PTR [rax],eax
   1400356ee:	add    BYTE PTR [rax],al
   1400356f0:	rex.RB jbe 0x140035758
   1400356f3:	outs   dx,BYTE PTR ds:[rsi]
   1400356f4:	je     0x140035749
   1400356f6:	jns    0x14003576b
   1400356f8:	je     0x14003575f
   1400356fa:	ins    DWORD PTR es:[rdi],dx
   1400356fb:	xor    BYTE PTR [rax],dh
   1400356fd:	xor    DWORD PTR [rax],eax
   1400356ff:	add    BYTE PTR [rbp+riz*2+0x73],dl
   140035703:	je     0x140035758
   140035705:	movsxd esi,DWORD PTR [rdx+0x69]
   140035708:	jo     0x14003577e
   14003570a:	rex.WRB
   14003570b:	addr32 jb 0x14003573e
   14003570e:	xor    BYTE PTR [rcx],dh
	...
   140035718:	push   rsi
   140035719:	push   rax
   14003571a:	jb     0x14003578b
   14003571c:	movsxd esp,DWORD PTR [rbp+0x73]
   14003571f:	jae    0x140035776
   140035721:	je     0x14003578c
   140035723:	ins    BYTE PTR es:[rdi],dx
   140035724:	jae    0x140035756
   140035726:	xor    BYTE PTR [rdx],dh
	...
   140035730:	push   rax
   140035731:	push   0x63697379
   140035736:	jae    0x14003576a
   140035738:	and    BYTE PTR [rcx+0x6e],cl
   14003573b:	je     0x1400357a2
   14003573d:	jb     0x1400357a5
   14003573f:	(bad)  
   140035740:	movsxd esp,DWORD PTR [rbp+0x20]
   140035743:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140035745:	and    BYTE PTR fs:[rsi+0x30],dh
   140035749:	cs xor eax,0x0
   14003574f:	add    BYTE PTR [rsi+0x50],dl
   140035752:	push   0x20587379
   140035757:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140035759:	je     0x1400357c0
   14003575b:	jb     0x1400357c3
   14003575d:	(bad)  
   14003575e:	movsxd esp,DWORD PTR [rbp+0x20]
   140035761:	push   rdx
   140035762:	gs jae 0x1400357d4
   140035765:	jne    0x1400357d9
   140035767:	movsxd esp,DWORD PTR [rbp+0x4d]
   14003576a:	addr32 jb 0x14003578d
   14003576d:	jbe    0x14003579f
   14003576f:	xor    DWORD PTR cs:[rax],eax
   140035772:	add    BYTE PTR [rax],al
   140035774:	add    BYTE PTR [rax],al
   140035776:	add    BYTE PTR [rax],al
   140035778:	push   rsi
   140035779:	rex.X (bad) 
   14003577b:	jae    0x1400357e2
   14003577d:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x65747379
   140035786:	ins    DWORD PTR es:[rdi],dx
   140035787:	xor    BYTE PTR [rcx],dh
   140035789:	xor    DWORD PTR [rax],eax
   14003578b:	add    BYTE PTR [rax],al
   14003578d:	add    BYTE PTR [rax],al
   14003578f:	add    BYTE PTR [rsi+0x4e],dl
   140035792:	gs ja  0x1400357d6
   140035795:	jae    0x140035810
   140035797:	outs   dx,BYTE PTR ds:[rsi]
   140035798:	movsxd eax,DWORD PTR [rsi+0x69]
   14003579b:	ins    BYTE PTR es:[rdi],dx
   14003579c:	gs push rbx
   14003579e:	jns    0x140035813
   1400357a0:	je     0x140035807
   1400357a2:	ins    DWORD PTR es:[rdi],dx
   1400357a3:	xor    BYTE PTR [rax],dh
   1400357a5:	xor    DWORD PTR [rax],eax
   1400357a7:	add    BYTE PTR [rdx+0x65],dl
   1400357aa:	jae    0x14003581b
   1400357ac:	jne    0x140035820
   1400357ae:	movsxd esp,DWORD PTR [rbp+0x53]
   1400357b1:	jns    0x140035826
   1400357b3:	je     0x14003581a
   1400357b5:	ins    DWORD PTR es:[rdi],dx
   1400357b6:	xor    BYTE PTR [rcx],dh
   1400357b8:	xor    eax,DWORD PTR [rax]
   1400357ba:	add    BYTE PTR [rax],al
   1400357bc:	add    BYTE PTR [rax],al
   1400357be:	add    BYTE PTR [rax],al
   1400357c0:	push   rdx
   1400357c1:	gs jae 0x140035833
   1400357c4:	jne    0x140035838
   1400357c6:	movsxd esp,DWORD PTR [rbp+0x4d]
   1400357c9:	(bad)  
   1400357ca:	outs   dx,BYTE PTR ds:[rsi]
   1400357cb:	imul   esp,DWORD PTR [rsi+0x65],0x65527473
   1400357d2:	imul   esi,DWORD PTR [ebx+0x74],0x30307972
   1400357da:	xor    DWORD PTR [rax],eax
   1400357dc:	add    BYTE PTR [rax],al
   1400357de:	add    BYTE PTR [rax],al
   1400357e0:	push   rdx
   1400357e1:	gs jae 0x140035853
   1400357e4:	jne    0x140035858
   1400357e6:	movsxd esp,DWORD PTR [rbp+0x48]
   1400357e9:	(bad)  
   1400357ea:	outs   dx,BYTE PTR ds:[rsi]
   1400357eb:	fs ins BYTE PTR es:[rdi],dx
   1400357ed:	gs push rbp
   1400357ef:	je     0x14003585a
   1400357f1:	ins    BYTE PTR es:[rdi],dx
   1400357f2:	jae    0x140035824
   1400357f4:	xor    BYTE PTR [rcx],dh
   1400357f6:	add    BYTE PTR [rax],al
   1400357f8:	push   rdx
   1400357f9:	gs jae 0x14003586b
   1400357fc:	jne    0x140035870
   1400357fe:	movsxd esp,DWORD PTR [rbp+0x43]
   140035801:	outs   dx,DWORD PTR ds:[rsi]
   140035802:	ins    DWORD PTR es:[rdi],dx
   140035803:	jo     0x14003586e
   140035805:	ins    BYTE PTR es:[rdi],dx
   140035806:	gs jb  0x14003585c
   140035809:	jns    0x14003587e
   14003580b:	je     0x140035872
   14003580d:	ins    DWORD PTR es:[rdi],dx
   14003580e:	xor    BYTE PTR [rax],dh
   140035810:	xor    DWORD PTR [rax],eax
   140035812:	add    BYTE PTR [rax],al
   140035814:	add    BYTE PTR [rax],al
   140035816:	add    BYTE PTR [rax],al
   140035818:	push   rsi
   140035819:	rex.WRB (bad) 
   14003581b:	je     0x140035882
   14003581d:	jb     0x140035888
   14003581f:	(bad)  
   140035820:	ins    BYTE PTR es:[rdi],dx
   140035821:	push   rbx
   140035822:	jns    0x140035897
   140035824:	je     0x14003588b
   140035826:	ins    DWORD PTR es:[rdi],dx
   140035827:	xor    bl,BYTE PTR [rdi+0x30]
   14003582a:	xor    BYTE PTR [rcx],dh
   14003582c:	add    BYTE PTR [rax],al
   14003582e:	add    BYTE PTR [rax],al
   140035830:	push   rax
   140035831:	outs   dx,DWORD PTR ds:[rsi]
   140035832:	jae    0x1400358a8
   140035834:	push   rax
   140035835:	jb     0x1400358a6
   140035837:	movsxd esp,DWORD PTR [rbp+0x73]
   14003583a:	jae    0x1400358a5
   14003583c:	outs   dx,BYTE PTR ds:[rsi]
   14003583d:	addr32 push rbx
   14003583f:	jns    0x1400358b4
   140035841:	je     0x1400358a8
   140035843:	ins    DWORD PTR es:[rdi],dx
   140035844:	pop    rdi
   140035845:	xor    BYTE PTR [rax],dh
   140035847:	xor    DWORD PTR [rax],eax
   140035849:	add    BYTE PTR [rax],al
   14003584b:	add    BYTE PTR [rax],al
   14003584d:	add    BYTE PTR [rax],al
   14003584f:	add    BYTE PTR [rcx+0x6e],cl
   140035852:	jo     0x1400358c9
   140035854:	je     0x1400358a9
   140035856:	jns    0x1400358cb
   140035858:	je     0x1400358bf
   14003585a:	ins    DWORD PTR es:[rdi],dx
   14003585b:	push   rsi
   14003585c:	gs jb  0x1400358d2
   14003585f:	imul   ebp,DWORD PTR [rdi+0x6e],0x313030
   140035866:	add    BYTE PTR [rax],al
   140035868:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003586a:	jo     0x1400358e1
   14003586c:	je     0x1400358c1
   14003586e:	je     0x1400358d1
   140035870:	movsxd ebp,DWORD PTR [rbx+0x53]
   140035873:	jns    0x1400358e8
   140035875:	je     0x1400358dc
   140035877:	ins    DWORD PTR es:[rdi],dx
   140035878:	push   rsi
   140035879:	gs jb  0x1400358ef
   14003587c:	imul   ebp,DWORD PTR [rdi+0x6e],0x313030
   140035883:	add    BYTE PTR [rax],al
   140035885:	add    BYTE PTR [rax],al
   140035887:	add    BYTE PTR [rdx+0x65],dl
   14003588a:	outs   dx,BYTE PTR ds:[rsi]
   14003588b:	fs gs jb 0x1400358d3
   14003588f:	gs jbe 0x1400358fb
   140035892:	movsxd esp,DWORD PTR [rbp+0x4d]
   140035895:	addr32 jb 0x1400358c8
   140035898:	xor    BYTE PTR [rcx],dh
   14003589a:	add    BYTE PTR [rax],al
   14003589c:	add    BYTE PTR [rax],al
   14003589e:	add    BYTE PTR [rax],al
   1400358a0:	push   rdx
   1400358a1:	outs   dx,BYTE PTR gs:[rsi]
   1400358a3:	fs gs jb 0x1400358fc
   1400358a7:	je     0x140035912
   1400358a9:	ins    BYTE PTR es:[rdi],dx
   1400358aa:	jae    0x14003590b
   1400358ac:	xor    BYTE PTR [rax],dh
   1400358ae:	xor    DWORD PTR [rax],eax
   1400358b0:	push   rbx
   1400358b1:	outs   dx,DWORD PTR ds:[rsi]
   1400358b2:	jne    0x140035922
   1400358b4:	fs push rbx
   1400358b6:	jns    0x14003592b
   1400358b8:	je     0x14003591f
   1400358ba:	ins    DWORD PTR es:[rdi],dx
   1400358bb:	xor    BYTE PTR [rax],dh
   1400358bd:	xor    DWORD PTR [rax],eax
   1400358bf:	add    BYTE PTR [rbx+0x6f],dl
   1400358c2:	jne    0x140035932
   1400358c4:	fs rex.WRXB jo 0x14003591b
   1400358c8:	jns    0x14003593d
   1400358ca:	je     0x140035931
   1400358cc:	ins    DWORD PTR es:[rdi],dx
   1400358cd:	rex.RB
   1400358ce:	imul   esi,DWORD PTR fs:[rax+rsi*1+0x30],0x31
   1400358d7:	add    BYTE PTR [rbx+0x6f],dl
   1400358da:	jne    0x14003594a
   1400358dc:	fs rex.WRXB jo 0x140035933
   1400358e0:	jns    0x140035955
   1400358e2:	je     0x140035949
   1400358e4:	ins    DWORD PTR es:[rdi],dx
   1400358e5:	xor    BYTE PTR [rax],dh
   1400358e7:	xor    DWORD PTR [rax],eax
   1400358e9:	add    BYTE PTR [rax],al
   1400358eb:	add    BYTE PTR [rax],al
   1400358ed:	add    BYTE PTR [rax],al
   1400358ef:	add    BYTE PTR [rbx+0x74],dl
   1400358f2:	gs (bad) 
   1400358f4:	ins    DWORD PTR es:[rdi],dx
   1400358f5:	rex.B jne 0x14003595c
   1400358f8:	imul   ebp,DWORD PTR [rdi+0x30],0x3130
   1400358ff:	add    BYTE PTR [rbp+riz*2+0x62],al
   140035903:	jne    0x14003596c
   140035905:	push   rsp
   140035906:	gs js  0x14003597d
   140035909:	jne    0x14003597d
   14003590b:	rex.WB outs dx,BYTE PTR gs:[rsi]
   14003590e:	outs   dx,WORD PTR ds:[rsi]
   140035910:	xor    BYTE PTR [rax],dh
   140035912:	xor    DWORD PTR [rax],eax
   140035914:	add    BYTE PTR [rax],al
   140035916:	add    BYTE PTR [rax],al
   140035918:	push   rsi
   140035919:	rex.X
   14003591a:	rex.B ins BYTE PTR es:[rdi],dx
   14003591c:	ins    BYTE PTR es:[rdi],dx
   14003591d:	outs   dx,DWORD PTR ds:[rsi]
   14003591e:	movsxd edx,DWORD PTR [rdx+rsi*2+0x61]
   140035922:	movsxd ebp,DWORD PTR [rbx+0x65]
   140035925:	jb     0x140035957
   140035927:	xor    BYTE PTR [rcx],dh
   140035929:	add    BYTE PTR [rax],al
   14003592b:	add    BYTE PTR [rax],al
   14003592d:	add    BYTE PTR [rax],al
   14003592f:	add    BYTE PTR [rbx+0x4f],al
   140035932:	rex.WR
   140035933:	rex.WRXB push r10
   140035935:	rex.XB
   140035936:	rex.WRXB push r10
   140035938:	push   rdx
   140035939:	rex.RB
   14003593a:	rex.XB push r12
   14003593c:	rex.WB
   14003593d:	rex.WRXB
   14003593e:	rex.WRX pop rdi
   140035940:	push   rsi
   140035941:	rex.RB push r10
   140035943:	push   rbx
   140035944:	rex.WB
   140035945:	rex.WRXB
   140035946:	rex.WRX pop rdi
   140035948:	xor    DWORD PTR [rax],eax
   14003594a:	add    BYTE PTR [rax],al
   14003594c:	add    BYTE PTR [rax],al
   14003594e:	add    BYTE PTR [rax],al
   140035950:	push   rsi
   140035951:	rex.WRB
   140035952:	rex.R
   140035953:	rex.WR
   140035954:	rex.WR
   140035955:	rex.WB
   140035956:	rex.X xor BYTE PTR [rax],sil
   140035959:	xor    DWORD PTR [rax],eax
   14003595b:	add    BYTE PTR [rax],al
   14003595d:	add    BYTE PTR [rax],al
   14003595f:	add    BYTE PTR [rcx+0x75],dl
   140035962:	gs jne 0x1400359ca
   140035965:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140035968:	(bad)  
   140035969:	fs gs jb 0x1400359c3
   14003596d:	gs jb  0x1400359e3
   140035970:	imul   ebp,DWORD PTR [rdi+0x6e],0x313030
   140035977:	add    BYTE PTR [rsi+0x47],dl
   14003597a:	push   rbp
   14003597b:	rex.WB pop r15
   14003597d:	imul   esi,DWORD PTR [rsi+0x67],0x30306975
   140035984:	cmp    BYTE PTR [rax],al
   140035986:	add    BYTE PTR [rax],al
   140035988:	push   rsi
   140035989:	rex.RXB push r13
   14003598b:	rex.WB pop r15
   14003598d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003598f:	jo     0x140035a06
   140035991:	je     0x1400359c3
   140035993:	xor    BYTE PTR [rip+0x56000000],dh        # 0x196035999
   140035999:	rex.RXB push r13
   14003599b:	rex.WB pop r15
   14003599d:	push   rax
   14003599e:	(bad)  
   14003599f:	outs   dx,BYTE PTR ds:[rsi]
   1400359a0:	gs ins BYTE PTR es:[rdi],dx
   1400359a2:	xor    BYTE PTR [rcx],dh
   1400359a4:	xor    BYTE PTR [rax],al
   1400359a6:	add    BYTE PTR [rax],al
   1400359a8:	push   rsi
   1400359a9:	rex.RXB push r13
   1400359ab:	rex.WB pop r15
   1400359ad:	push   rbx
   1400359ae:	jne    0x140035a22
   1400359b0:	data16 (bad) 
   1400359b2:	movsxd esp,DWORD PTR [rbp+0x30]
   1400359b5:	xor    esi,DWORD PTR [rdx]
   1400359b7:	add    BYTE PTR [rsi+0x47],dl
   1400359ba:	push   rbp
   1400359bb:	rex.WB pop r15
   1400359bd:	push   rbx
   1400359be:	movsxd ebp,DWORD PTR [rax+0x65]
   1400359c1:	ins    DWORD PTR es:[rdi],dx
   1400359c2:	xor    BYTE PTR gs:[rcx],dh
   1400359c5:	xor    BYTE PTR [rax],al
   1400359c7:	add    BYTE PTR [rsi+0x47],dl
   1400359ca:	push   rbp
   1400359cb:	rex.WB pop r15
   1400359cd:	push   rbx
   1400359ce:	jns    0x140035a43
   1400359d0:	je     0x140035a37
   1400359d2:	ins    DWORD PTR es:[rdi],dx
   1400359d3:	xor    BYTE PTR [rcx],dh
   1400359d5:	xor    BYTE PTR [rax],al
   1400359d7:	add    BYTE PTR [rdi+rbp*2+0x63],cl
   1400359db:	(bad)  
   1400359dc:	ins    BYTE PTR es:[rdi],dx
   1400359dd:	imul   edi,DWORD PTR [rdx+0x65],0x3130305f
   1400359e4:	add    BYTE PTR [rax],al
   1400359e6:	add    BYTE PTR [rax],al
   1400359e8:	push   rsi
   1400359e9:	rex.WRB
   1400359ea:	gs imul esp,DWORD PTR fs:[rcx+0x46],0x646e756f
   1400359f3:	(bad)  
   1400359f4:	je     0x140035a5f
   1400359f6:	outs   dx,DWORD PTR ds:[rsi]
   1400359f7:	outs   dx,BYTE PTR ds:[rsi]
   1400359f8:	xor    BYTE PTR [rax],dh
   1400359fa:	xor    DWORD PTR [rax],eax
   1400359fc:	add    BYTE PTR [rax],al
   1400359fe:	add    BYTE PTR [rax],al
   140035a00:	push   rsi
   140035a01:	rex.B jbe 0x140035a6d
   140035a04:	xor    BYTE PTR [rax],dh
   140035a06:	xor    DWORD PTR [rax],eax
   140035a08:	push   rsi
   140035a09:	rex.X imul ebp,DWORD PTR [rbx+0x30],0x49003130
   140035a11:	push   rcx
   140035a12:	jne    0x140035a7d
   140035a14:	movsxd ebp,DWORD PTR [rbx+0x54]
   140035a17:	imul   ebp,DWORD PTR [rbp+0x65],0x313030
   140035a1e:	add    BYTE PTR [rax],al
   140035a20:	push   rsi
   140035a21:	rex.R ins DWORD PTR es:[rdi],dx
   140035a23:	gs rex.WRB (bad) 
   140035a26:	imul   esp,DWORD PTR [rbp+0x46],0x69
   140035a2a:	ins    BYTE PTR es:[rdi],dx
   140035a2b:	gs push rbp
   140035a2d:	je     0x140035a98
   140035a2f:	ins    BYTE PTR es:[rdi],dx
   140035a30:	jae    0x140035a62
   140035a32:	xor    BYTE PTR [rcx],dh
   140035a34:	add    BYTE PTR [rax],al
   140035a36:	add    BYTE PTR [rax],al
   140035a38:	rex.WRB
   140035a39:	gs jae 0x140035aa4
   140035a3c:	push   rbx
   140035a3d:	jns    0x140035ab2
   140035a3f:	je     0x140035aa6
   140035a41:	ins    DWORD PTR es:[rdi],dx
   140035a42:	xor    BYTE PTR [rax],dh
   140035a44:	xor    DWORD PTR [rax],eax
   140035a46:	add    BYTE PTR [rax],al
   140035a48:	rex.WRB
   140035a49:	gs jae 0x140035ab4
   140035a4c:	push   rbp
   140035a4d:	je     0x140035ab8
   140035a4f:	ins    BYTE PTR es:[rdi],dx
   140035a50:	jae    0x140035a82
   140035a52:	xor    BYTE PTR [rcx],dh
   140035a54:	add    BYTE PTR [rax],al
   140035a56:	add    BYTE PTR [rax],al
   140035a58:	push   rdx
   140035a59:	outs   dx,BYTE PTR gs:[rsi]
   140035a5b:	fs gs jb 0x140035aa3
   140035a5f:	gs jbe 0x140035acb
   140035a62:	movsxd esp,DWORD PTR [rbp+0x30]
   140035a65:	xor    BYTE PTR [rbx],dh
   140035a67:	add    BYTE PTR [rsi+0x52],dl
   140035a6a:	outs   dx,BYTE PTR gs:[rsi]
   140035a6c:	fs gs jb 0x140035ab4
   140035a70:	gs jbe 0x140035adc
   140035a73:	movsxd esp,DWORD PTR [rbp+0x53]
   140035a76:	gs je  0x140035aee
   140035a79:	jo     0x140035ad1
   140035a7b:	xor    BYTE PTR [rax],dh
   140035a7d:	xor    DWORD PTR [rax],eax
   140035a7f:	add    BYTE PTR [rdx+0x65],dl
   140035a82:	outs   dx,BYTE PTR ds:[rsi]
   140035a83:	fs gs jb 0x140035acf
   140035a87:	(bad)  
   140035a88:	jb     0x140035aee
   140035a8a:	ja     0x140035aed
   140035a8c:	jb     0x140035af3
   140035a8e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140035a90:	outs   dx,BYTE PTR ds:[rsi]
   140035a91:	imul   sp,WORD PTR [rdi+0x30],0x3230
   140035a97:	add    BYTE PTR [rbx+0x63],dl
   140035a9a:	outs   dx,BYTE PTR gs:[rsi]
   140035a9c:	gs push rbx
   140035a9e:	jns    0x140035b13
   140035aa0:	je     0x140035b07
   140035aa2:	ins    DWORD PTR es:[rdi],dx
   140035aa3:	pop    rdi
   140035aa4:	xor    BYTE PTR [rax],dh
   140035aa6:	xor    al,BYTE PTR [rax]
   140035aa8:	push   rbx
   140035aa9:	movsxd esp,DWORD PTR [rbp+0x6e]
   140035aac:	gs push rbp
   140035aae:	je     0x140035b19
   140035ab0:	ins    BYTE PTR es:[rdi],dx
   140035ab1:	jae    0x140035b12
   140035ab3:	xor    BYTE PTR [rax],dh
   140035ab5:	xor    DWORD PTR [rax],eax
   140035ab7:	add    BYTE PTR [rdi+0x6f],dl
   140035aba:	jb     0x140035b28
   140035abc:	fs push rdx
   140035abe:	outs   dx,BYTE PTR gs:[rsi]
   140035ac0:	fs gs jb 0x140035b29
   140035ac4:	jb     0x140035b13
   140035ac6:	addr32 jb 0x140035af9
   140035ac9:	xor    BYTE PTR [rcx],dh
   140035acb:	add    BYTE PTR [rax],al
   140035acd:	add    BYTE PTR [rax],al
   140035acf:	add    BYTE PTR [rdx+0x65],dl
   140035ad2:	outs   dx,BYTE PTR ds:[rsi]
   140035ad3:	fs gs jb 0x140035b2a
   140035ad7:	jns    0x140035b4c
   140035ad9:	je     0x140035b40
   140035adb:	ins    DWORD PTR es:[rdi],dx
   140035adc:	push   rbx
   140035add:	jne    0x140035b51
   140035adf:	data16 (bad) 
   140035ae1:	movsxd esp,DWORD PTR [rbp+0x30]
   140035ae4:	xor    BYTE PTR [rcx],dh
   140035ae6:	add    BYTE PTR [rax],al
   140035ae8:	rex.B jae 0x140035b5e
   140035aeb:	gs je  0x140035b41
   140035aee:	jns    0x140035b63
   140035af0:	je     0x140035b57
   140035af2:	ins    DWORD PTR es:[rdi],dx
   140035af3:	xor    BYTE PTR [rax],dh
   140035af5:	xor    DWORD PTR [rax],eax
   140035af7:	add    BYTE PTR [rcx+0x73],al
   140035afa:	jae    0x140035b61
   140035afc:	je     0x140035b51
   140035afe:	jns    0x140035b73
   140035b00:	je     0x140035b67
   140035b02:	ins    DWORD PTR es:[rdi],dx
   140035b03:	push   rsp
   140035b04:	gs jae 0x140035b7b
   140035b07:	xor    BYTE PTR [rax],dh
   140035b09:	xor    DWORD PTR [rax],eax
   140035b0b:	add    BYTE PTR [rax],al
   140035b0d:	add    BYTE PTR [rax],al
   140035b0f:	add    BYTE PTR [rax+0x61],dl
   140035b12:	jb     0x140035b88
   140035b14:	imul   esp,DWORD PTR [rbx+0x6c],0x73795365
   140035b1b:	je     0x140035b82
   140035b1d:	ins    DWORD PTR es:[rdi],dx
   140035b1e:	rex.WRB
   140035b1f:	addr32 jb 0x140035b52
   140035b22:	xor    BYTE PTR [rdx],dh
   140035b24:	add    BYTE PTR [rax],al
   140035b26:	add    BYTE PTR [rax],al
   140035b28:	push   rsi
   140035b29:	push   rbx
   140035b2a:	movsxd esi,DWORD PTR [rdx+0x69]
   140035b2d:	jo     0x140035ba3
   140035b2f:	rex.WRB (bad) 
   140035b31:	outs   dx,BYTE PTR ds:[rsi]
   140035b32:	(bad)  
   140035b33:	addr32 gs jb 0x140035b67
   140035b37:	xor    DWORD PTR [rax],esi
   140035b39:	add    BYTE PTR [rax],al
   140035b3b:	add    BYTE PTR [rax],al
   140035b3d:	add    BYTE PTR [rax],al
   140035b3f:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   140035b43:	ins    BYTE PTR es:[rdi],dx
   140035b44:	push   rbx
   140035b45:	movsxd esi,DWORD PTR [rdx+0x69]
   140035b48:	jo     0x140035bbe
   140035b4a:	rex.WRB (bad) 
   140035b4c:	outs   dx,BYTE PTR ds:[rsi]
   140035b4d:	(bad)  
   140035b4e:	addr32 gs jb 0x140035b82
   140035b52:	xor    BYTE PTR [rcx],dh
   140035b54:	add    BYTE PTR [rax],al
   140035b56:	add    BYTE PTR [rax],al
   140035b58:	push   rax
   140035b59:	jb     0x140035bca
   140035b5b:	jo     0x140035bc2
   140035b5d:	jb     0x140035bd3
   140035b5f:	jns    0x140035ba6
   140035b61:	imul   esi,DWORD PTR fs:[rdi+rbp*2+0x72],0x74737953
   140035b6a:	gs ins DWORD PTR es:[rdi],dx
   140035b6c:	pop    rdi
   140035b6d:	xor    BYTE PTR [rax],dh
   140035b6f:	xor    DWORD PTR [rax],eax
   140035b71:	add    BYTE PTR [rax],al
   140035b73:	add    BYTE PTR [rax],al
   140035b75:	add    BYTE PTR [rax],al
   140035b77:	add    BYTE PTR [rbp+0x41],cl
   140035b7a:	push   rsp
   140035b7b:	rex.XB
   140035b7c:	rex.W
   140035b7d:	rex.RX push rdx
   140035b7f:	rex.B
   140035b80:	rex.WRB
   140035b81:	rex.RB push r15
   140035b83:	rex.WRXB push r10
   140035b85:	rex.WXB pop r15
   140035b87:	xor    BYTE PTR [rax],dh
   140035b89:	xor    DWORD PTR [rax],eax
   140035b8b:	add    BYTE PTR [rax],al
   140035b8d:	add    BYTE PTR [rax],al
   140035b8f:	add    BYTE PTR [rbx+0x63],dl
   140035b92:	(bad)  
   140035b93:	ins    BYTE PTR es:[rdi],dx
   140035b94:	outs   dx,WORD PTR gs:[rsi]
   140035b97:	jb     0x140035c06
   140035b99:	push   rbp
   140035b9a:	rex.WB xor BYTE PTR [r8],sil
   140035b9d:	xor    DWORD PTR [rax],eax
   140035b9f:	add    BYTE PTR [rax+0x61],dl
   140035ba2:	outs   dx,BYTE PTR ds:[rsi]
   140035ba3:	outs   dx,DWORD PTR ds:[rsi]
   140035ba4:	jb     0x140035c07
   140035ba6:	ins    DWORD PTR es:[rdi],dx
   140035ba7:	(bad)  
   140035ba8:	push   rbp
   140035ba9:	rex.WB
   140035baa:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140035bac:	imul   ebp,DWORD PTR [esi+0x65],0x313030
   140035bb4:	add    BYTE PTR [rax],al
   140035bb6:	add    BYTE PTR [rax],al
   140035bb8:	push   rax
   140035bb9:	(bad)  
   140035bba:	outs   dx,BYTE PTR ds:[rsi]
   140035bbb:	outs   dx,DWORD PTR ds:[rsi]
   140035bbc:	jb     0x140035c1f
   140035bbe:	ins    DWORD PTR es:[rdi],dx
   140035bbf:	(bad)  
   140035bc0:	push   rbp
   140035bc1:	rex.WB
   140035bc2:	rex.XB ins BYTE PTR es:[rdi],dx
   140035bc4:	imul   esp,DWORD PTR [rbp+0x6e],0x31303074
   140035bcb:	add    BYTE PTR [rax],al
   140035bcd:	add    BYTE PTR [rax],al
   140035bcf:	add    BYTE PTR [rax+0x61],dl
   140035bd2:	outs   dx,BYTE PTR ds:[rsi]
   140035bd3:	outs   dx,DWORD PTR ds:[rsi]
   140035bd4:	jb     0x140035c37
   140035bd6:	ins    DWORD PTR es:[rdi],dx
   140035bd7:	(bad)  
   140035bd8:	push   rsp
   140035bd9:	gs js  0x140035c50
   140035bdc:	push   rbx
   140035bdd:	gs jb  0x140035c56
   140035be0:	imul   esp,DWORD PTR [rbx+0x65],0x31303073
   140035be7:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   140035beb:	ins    BYTE PTR es:[rdi],dx
   140035bec:	rex.RX jb 0x140035c50
   140035bef:	ins    DWORD PTR es:[rdi],dx
   140035bf0:	gs ja  0x140035c62
   140035bf3:	jb     0x140035c60
   140035bf5:	xor    bl,BYTE PTR [rdi+0x30]
   140035bf8:	xor    BYTE PTR [rdx],dh
   140035bfa:	add    BYTE PTR [rax],al
   140035bfc:	add    BYTE PTR [rax],al
   140035bfe:	add    BYTE PTR [rax],al
   140035c00:	push   rdi
   140035c01:	outs   dx,DWORD PTR ds:[rsi]
   140035c02:	jb     0x140035c70
   140035c04:	fs push rdx
   140035c06:	outs   dx,BYTE PTR gs:[rsi]
   140035c08:	fs gs jb 0x140035c71
   140035c0c:	jb     0x140035c50
   140035c0e:	jne    0x140035c79
   140035c10:	ins    BYTE PTR es:[rdi],dx
   140035c11:	fs gs jb 0x140035c62
   140035c15:	addr32 jb 0x140035c48
   140035c18:	xor    BYTE PTR [rcx],dh
   140035c1a:	add    BYTE PTR [rax],al
   140035c1c:	add    BYTE PTR [rax],al
   140035c1e:	add    BYTE PTR [rax],al
   140035c20:	imul   r12,QWORD PTR [rdi+0x68],0x676e6974
   140035c28:	rex.X jne 0x140035c94
   140035c2b:	ins    BYTE PTR es:[rdi],dx
   140035c2c:	fs gs jb 0x140035c7d
   140035c30:	addr32 jb 0x140035c63
   140035c33:	xor    BYTE PTR [rcx],dh
   140035c35:	add    BYTE PTR [rax],al
   140035c37:	add    BYTE PTR [rax+0x68],dl
   140035c3a:	jns    0x140035caf
   140035c3c:	imul   esp,DWORD PTR [rbx+0x73],0x6c697542
   140035c43:	fs gs jb 0x140035c94
   140035c47:	addr32 jb 0x140035c7a
   140035c4a:	xor    BYTE PTR [rcx],dh
   140035c4c:	add    BYTE PTR [rax],al
   140035c4e:	add    BYTE PTR [rax],al
   140035c50:	push   rsi
   140035c51:	imul   esi,DWORD PTR [rbx+0x42],0x646c6975
   140035c58:	gs jb  0x140035cba
   140035c5b:	xor    BYTE PTR [rax],dh
   140035c5d:	xor    DWORD PTR [rax],eax
   140035c5f:	add    BYTE PTR [rbp+0x6e],al
   140035c62:	jbe    0x140035ccd
   140035c64:	jb     0x140035cd5
   140035c66:	outs   dx,BYTE PTR ds:[rsi]
   140035c67:	ins    DWORD PTR es:[rdi],dx
   140035c68:	outs   dx,BYTE PTR gs:[rsi]
   140035c6a:	je     0x140035cb9
   140035c6c:	(bad)  
   140035c6d:	jo     0x140035cb1
   140035c6f:	jne    0x140035cda
   140035c71:	ins    BYTE PTR es:[rdi],dx
   140035c72:	fs gs jb 0x140035cd5
   140035c76:	xor    BYTE PTR [rax],dh
   140035c78:	xor    DWORD PTR [rax],eax
   140035c7a:	add    BYTE PTR [rax],al
   140035c7c:	add    BYTE PTR [rax],al
   140035c7e:	add    BYTE PTR [rax],al
   140035c80:	rex.X (bad) 
   140035c82:	imul   esp,DWORD PTR [rbp+0x64],0x4c
   140035c86:	rex.WRXB
   140035c87:	rex.R
   140035c88:	rex.X jne 0x140035cf4
   140035c8b:	ins    BYTE PTR es:[rdi],dx
   140035c8c:	fs gs jb 0x140035cdd
   140035c90:	addr32 jb 0x140035cc3
   140035c93:	xor    BYTE PTR [rcx],dh
   140035c95:	add    BYTE PTR [rax],al
   140035c97:	add    BYTE PTR [rdi+rbp*2+0x74],al
   140035c9b:	(bad)  
   140035c9c:	rex.XB (bad) 
   140035c9e:	jb     0x140035d04
   140035ca0:	rex.RXB (bad) 
   140035ca2:	ins    DWORD PTR es:[rdi],dx
   140035ca3:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140035ca6:	imul   esp,DWORD PTR [rbp+0x6e],0x30305f74
   140035cad:	xor    DWORD PTR [rax],eax
   140035caf:	add    BYTE PTR [rax+0x65],cl
   140035cb2:	ins    BYTE PTR es:[rdi],dx
   140035cb3:	jo     0x140035d08
   140035cb5:	jns    0x140035d2a
   140035cb7:	je     0x140035d1e
   140035cb9:	ins    DWORD PTR es:[rdi],dx
   140035cba:	pop    rdi
   140035cbb:	xor    BYTE PTR [rax],dh
   140035cbd:	xor    DWORD PTR [rax],eax
   140035cbf:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   140035cc3:	ins    BYTE PTR es:[rdi],dx
   140035cc4:	push   rbx
   140035cc5:	movsxd esp,DWORD PTR [rbp+0x6e]
   140035cc8:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   140035ccb:	fs gs rex.RX (bad) 
   140035ccf:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140035cd3:	jns    0x140035d34
   140035cd5:	xor    BYTE PTR [rax],dh
   140035cd7:	xor    DWORD PTR [rax],eax
   140035cd9:	add    BYTE PTR [rax],al
   140035cdb:	add    BYTE PTR [rax],al
   140035cdd:	add    BYTE PTR [rax],al
   140035cdf:	add    BYTE PTR [rbp+0x63],al
   140035ce2:	outs   dx,DWORD PTR ds:[rsi]
   140035ce3:	outs   dx,BYTE PTR ds:[rsi]
   140035ce4:	rex.WB je 0x140035d4c
   140035ce7:	ins    DWORD PTR es:[rdi],dx
   140035ce8:	push   rsp
   140035ce9:	outs   dx,DWORD PTR ds:[rsi]
   140035cea:	outs   dx,DWORD PTR ds:[rsi]
   140035ceb:	ins    BYTE PTR es:[rdi],dx
   140035cec:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140035cee:	fs gs ins BYTE PTR es:[rdi],dx
   140035cf1:	pop    rdi
   140035cf2:	xor    BYTE PTR [rax],dh
   140035cf4:	xor    DWORD PTR [rax],eax
   140035cf6:	add    BYTE PTR [rax],al
   140035cf8:	push   rsp
   140035cf9:	outs   dx,DWORD PTR ds:[rsi]
   140035cfa:	outs   dx,DWORD PTR ds:[rsi]
   140035cfb:	ins    BYTE PTR es:[rdi],dx
   140035cfc:	rex.RXB (bad) 
   140035cfe:	ins    DWORD PTR es:[rdi],dx
   140035cff:	gs push rbx
   140035d01:	imul   ebp,DWORD PTR [rbp+0x75],0x6974616c
   140035d08:	outs   dx,DWORD PTR ds:[rsi]
   140035d09:	outs   dx,BYTE PTR ds:[rsi]
   140035d0a:	push   rbx
   140035d0b:	jns    0x140035d80
   140035d0d:	je     0x140035d74
   140035d0f:	ins    DWORD PTR es:[rdi],dx
   140035d10:	pop    rdi
   140035d11:	xor    BYTE PTR [rax],dh
   140035d13:	xor    DWORD PTR [rax],eax
   140035d15:	add    BYTE PTR [rax],al
   140035d17:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   140035d1b:	ins    BYTE PTR es:[rdi],dx
   140035d1c:	rex.RXB (bad) 
   140035d1e:	ins    DWORD PTR es:[rdi],dx
   140035d1f:	gs push rbx
   140035d21:	imul   ebp,DWORD PTR [rbp+0x75],0x6974616c
   140035d28:	outs   dx,DWORD PTR ds:[rsi]
   140035d29:	outs   dx,BYTE PTR ds:[rsi]
   140035d2a:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140035d32:	gs jb  0x140035d94
   140035d35:	xor    BYTE PTR [rax],dh
   140035d37:	xor    DWORD PTR [rax],eax
   140035d39:	add    BYTE PTR [rax],al
   140035d3b:	add    BYTE PTR [rax],al
   140035d3d:	add    BYTE PTR [rax],al
   140035d3f:	add    BYTE PTR [rbx+0x63],dl
   140035d42:	push   0x54616d65
   140035d47:	gs jae 0x140035dbe
   140035d4a:	rex.RB js 0x140035dc1
   140035d4d:	gs jb  0x140035dbe
   140035d50:	(bad)  
   140035d51:	ins    BYTE PTR es:[rdi],dx
   140035d52:	pop    rdi
   140035d53:	push   rsp
   140035d54:	ja     0x140035dc5
   140035d56:	pop    rdi
   140035d57:	xor    BYTE PTR [rax],dh
   140035d59:	xor    DWORD PTR [rax],eax
   140035d5b:	add    BYTE PTR [rax],al
   140035d5d:	add    BYTE PTR [rax],al
   140035d5f:	add    BYTE PTR [rbx+0x63],dl
   140035d62:	push   0x54616d65
   140035d67:	gs jae 0x140035dde
   140035d6a:	rex.RB js 0x140035de1
   140035d6d:	gs jb  0x140035dde
   140035d70:	(bad)  
   140035d71:	ins    BYTE PTR es:[rdi],dx
   140035d72:	pop    rdi
   140035d73:	rex.WRXB outs dx,BYTE PTR ds:[rsi]
   140035d75:	gs pop rdi
   140035d77:	xor    BYTE PTR [rax],dh
   140035d79:	xor    DWORD PTR [rax],eax
   140035d7b:	add    BYTE PTR [rax],al
   140035d7d:	add    BYTE PTR [rax],al
   140035d7f:	add    BYTE PTR [rcx+0x6e],al
   140035d82:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   140035d89:	push   rbx
   140035d8a:	jns    0x140035dff
   140035d8c:	je     0x140035df3
   140035d8e:	ins    DWORD PTR es:[rdi],dx
   140035d8f:	pop    rdi
   140035d90:	xor    BYTE PTR [rax],dh
   140035d92:	xor    DWORD PTR [rax],eax
   140035d94:	add    BYTE PTR [rax],al
   140035d96:	add    BYTE PTR [rax],al
   140035d98:	rex.B outs dx,BYTE PTR ds:[rsi]
   140035d9a:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   140035da1:	push   rbx
   140035da2:	jns    0x140035e17
   140035da4:	je     0x140035e0b
   140035da6:	ins    DWORD PTR es:[rdi],dx
   140035da7:	push   rbp
   140035da8:	je     0x140035e13
   140035daa:	ins    BYTE PTR es:[rdi],dx
   140035dab:	jae    0x140035e0c
   140035dad:	xor    BYTE PTR [rax],dh
   140035daf:	xor    DWORD PTR [rax],eax
   140035db1:	add    BYTE PTR [rax],al
   140035db3:	add    BYTE PTR [rax],al
   140035db5:	add    BYTE PTR [rax],al
   140035db7:	add    BYTE PTR [rax+0x61],cl
   140035dba:	ins    DWORD PTR es:[rdi],dx
   140035dbb:	ins    DWORD PTR es:[rdi],dx
   140035dbc:	gs jb  0x140035e0c
   140035dbf:	(bad)  
   140035dc0:	jo     0x140035e0e
   140035dc2:	outs   dx,DWORD PTR ds:[rsi]
   140035dc3:	(bad)  
   140035dc4:	fs gs jb 0x140035df8
   140035dc8:	xor    BYTE PTR [rcx],dh
   140035dca:	add    BYTE PTR [rax],al
   140035dcc:	add    BYTE PTR [rax],al
   140035dce:	add    BYTE PTR [rax],al
   140035dd0:	rex.WRB (bad) 
   140035dd2:	je     0x140035e39
   140035dd4:	jb     0x140035e3f
   140035dd6:	(bad)  
   140035dd7:	ins    BYTE PTR es:[rdi],dx
   140035dd8:	push   rbp
   140035dd9:	je     0x140035e44
   140035ddb:	ins    BYTE PTR es:[rdi],dx
   140035ddc:	jae    0x140035e3d
   140035dde:	xor    BYTE PTR [rax],dh
   140035de0:	xor    DWORD PTR [rax],eax
   140035de2:	add    BYTE PTR [rax],al
   140035de4:	add    BYTE PTR [rax],al
   140035de6:	add    BYTE PTR [rax],al
   140035de8:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140035dea:	outs   dx,BYTE PTR ds:[rsi]
   140035deb:	je     0x140035e3a
   140035ded:	(bad)  
   140035dee:	outs   dx,BYTE PTR ds:[rsi]
   140035def:	(bad)  
   140035df0:	addr32 gs jb 0x140035e53
   140035df4:	xor    BYTE PTR [rax],dh
   140035df6:	xor    DWORD PTR [rax],eax
   140035df8:	push   rsp
   140035df9:	gs js  0x140035e70
   140035dfc:	rex.WR (bad) 
   140035dfe:	jns    0x140035e6f
   140035e00:	jne    0x140035e76
   140035e02:	pop    rdi
   140035e03:	xor    BYTE PTR [rax],dh
   140035e05:	xor    DWORD PTR [rax],eax
   140035e07:	add    BYTE PTR [rcx+0x73],al
   140035e0a:	jae    0x140035e71
   140035e0c:	je     0x140035e5e
   140035e0e:	jb     0x140035e75
   140035e10:	jbe    0x140035e7b
   140035e12:	gs ja  0x140035e68
   140035e15:	jns    0x140035e8a
   140035e17:	je     0x140035e7e
   140035e19:	ins    DWORD PTR es:[rdi],dx
   140035e1a:	pop    rdi
   140035e1b:	xor    BYTE PTR [rax],dh
   140035e1d:	xor    DWORD PTR [rax],eax
   140035e1f:	add    BYTE PTR [rcx+0x73],al
   140035e22:	jae    0x140035e89
   140035e24:	je     0x140035e68
   140035e26:	jb     0x140035e97
   140035e28:	ja     0x140035e9d
   140035e2a:	gs jb  0x140035e80
   140035e2d:	jns    0x140035ea2
   140035e2f:	je     0x140035e96
   140035e31:	ins    DWORD PTR es:[rdi],dx
   140035e32:	pop    rdi
   140035e33:	xor    BYTE PTR [rax],dh
   140035e35:	xor    DWORD PTR [rax],eax
   140035e37:	add    BYTE PTR [rbx+0x6f],al
   140035e3a:	outs   dx,BYTE PTR ds:[rsi]
   140035e3b:	imul   sp,WORD PTR [rdi+0x75],0x6172
   140035e41:	je     0x140035eac
   140035e43:	outs   dx,DWORD PTR ds:[rsi]
   140035e44:	outs   dx,BYTE PTR ds:[rsi]
   140035e45:	push   rbx
   140035e46:	jns    0x140035ebb
   140035e48:	je     0x140035eaf
   140035e4a:	ins    DWORD PTR es:[rdi],dx
   140035e4b:	pop    rdi
   140035e4c:	xor    BYTE PTR [rax],dh
   140035e4e:	xor    DWORD PTR [rax],eax
   140035e50:	rex.WRB
   140035e51:	rex.WRXB
   140035e52:	rex.R
   140035e53:	rex.RB
   140035e54:	rex.WR pop rdi
   140035e56:	push   rax
   140035e57:	push   rdx
   140035e58:	rex.WRXB
   140035e59:	rex.XB
   140035e5a:	rex.RB push r11
   140035e5c:	push   rbx
   140035e5d:	rex.WB
   140035e5e:	rex.WRX
   140035e5f:	rex.RXB pop r15
   140035e61:	push   rbx
   140035e62:	rex.RB push r10
   140035e64:	push   rsi
   140035e65:	rex.WB
   140035e66:	rex.XB
   140035e67:	rex.RB push r11
   140035e69:	pop    rdi
   140035e6a:	rex.WB
   140035e6b:	rex.WRX push rsp
   140035e6d:	rex.RB push r10
   140035e6f:	rex.RX
   140035e70:	rex.B
   140035e71:	rex.XB
   140035e72:	rex.RB pop r15
   140035e74:	xor    BYTE PTR [rax],dh
   140035e76:	xor    DWORD PTR [rax],eax
   140035e78:	rex.WRX
   140035e79:	gs je  0x140035ef3
   140035e7c:	outs   dx,DWORD PTR ds:[rsi]
   140035e7d:	jb     0x140035eea
   140035e7f:	push   rbx
   140035e80:	jns    0x140035ef5
   140035e82:	je     0x140035ee9
   140035e84:	ins    DWORD PTR es:[rdi],dx
   140035e85:	push   rsi
   140035e86:	gs jb  0x140035efc
   140035e89:	imul   ebp,DWORD PTR [rdi+0x6e],0x313030
   140035e90:	rex.WRX
   140035e91:	gs je  0x140035f0b
   140035e94:	outs   dx,DWORD PTR ds:[rsi]
   140035e95:	jb     0x140035f02
   140035e97:	push   rbx
   140035e98:	jns    0x140035f0d
   140035e9a:	je     0x140035f01
   140035e9c:	ins    DWORD PTR es:[rdi],dx
   140035e9d:	push   rbp
   140035e9e:	je     0x140035f09
   140035ea0:	ins    BYTE PTR es:[rdi],dx
   140035ea1:	jae    0x140035ef9
   140035ea3:	gs jb  0x140035f19
   140035ea6:	imul   ebp,DWORD PTR [rdi+0x6e],0x313030
   140035ead:	add    BYTE PTR [rax],al
   140035eaf:	add    BYTE PTR [rsi+0x65],cl
   140035eb2:	je     0x140035f2b
   140035eb4:	outs   dx,DWORD PTR ds:[rsi]
   140035eb5:	jb     0x140035f22
   140035eb7:	rex.WRB
   140035eb8:	gs jae 0x140035f2e
   140035ebb:	(bad)  
   140035ebc:	addr32 gs jae 0x140035f16
   140035ec0:	gs jb  0x140035f36
   140035ec3:	imul   ebp,DWORD PTR [rdi+0x6e],0x313030
   140035eca:	add    BYTE PTR [rax],al
   140035ecc:	add    BYTE PTR [rax],al
   140035ece:	add    BYTE PTR [rax],al
   140035ed0:	rex.RX ins BYTE PTR es:[rdi],dx
   140035ed2:	(bad)  
   140035ed3:	je     0x140035f49
   140035ed5:	outs   dx,BYTE PTR gs:[rsi]
   140035ed7:	gs fs push rbx
   140035eda:	gs jb  0x140035f46
   140035edd:	(bad)  
   140035ede:	ins    BYTE PTR es:[rdi],dx
   140035edf:	imul   edi,DWORD PTR [rdx+0x65],0x65567372
   140035ee6:	jb     0x140035f5b
   140035ee8:	imul   ebp,DWORD PTR [rdi+0x6e],0x313030
   140035eef:	add    BYTE PTR [rbx+0x6f],dl
   140035ef2:	jne    0x140035f66
   140035ef4:	movsxd esp,DWORD PTR [rbp+0x32]
   140035ef7:	rex.XB ins BYTE PTR es:[rdi],dx
   140035ef9:	imul   esp,DWORD PTR [rbp+0x6e],0x32303074
	...
   140035f08:	push   rbx
   140035f09:	outs   dx,DWORD PTR ds:[rsi]
   140035f0a:	jne    0x140035f7e
   140035f0c:	movsxd esp,DWORD PTR [rbp+0x32]
   140035f0f:	rex.XB ins BYTE PTR es:[rdi],dx
   140035f11:	imul   esp,DWORD PTR [rbp+0x6e],0x30495574
   140035f18:	xor    BYTE PTR [rcx],dh
   140035f1a:	add    BYTE PTR [rax],al
   140035f1c:	add    BYTE PTR [rax],al
   140035f1e:	add    BYTE PTR [rax],al
   140035f20:	push   rbx
   140035f21:	outs   dx,DWORD PTR ds:[rsi]
   140035f22:	jne    0x140035f96
   140035f24:	movsxd esp,DWORD PTR [rbp+0x32]
   140035f27:	rex.XB ins BYTE PTR es:[rdi],dx
   140035f29:	imul   esp,DWORD PTR [rbp+0x6e],0x65725074
   140035f30:	imul   esp,DWORD PTR fs:[rbx+0x74],0x306e6f69
   140035f38:	xor    BYTE PTR [rcx],dh
   140035f3a:	add    BYTE PTR [rax],al
   140035f3c:	add    BYTE PTR [rax],al
   140035f3e:	add    BYTE PTR [rax],al
   140035f40:	push   rbx
   140035f41:	outs   dx,DWORD PTR ds:[rsi]
   140035f42:	jne    0x140035fb6
   140035f44:	movsxd esp,DWORD PTR [rbp+0x32]
   140035f47:	push   rbx
   140035f48:	gs jb  0x140035fc1
   140035f4b:	gs jb  0x140035f7e
   140035f4e:	xor    BYTE PTR [rcx],dh
	...
   140035f58:	push   rbx
   140035f59:	outs   dx,DWORD PTR ds:[rsi]
   140035f5a:	jne    0x140035fce
   140035f5c:	movsxd esp,DWORD PTR [rbp+0x32]
   140035f5f:	push   rbx
   140035f60:	gs jb  0x140035fd9
   140035f63:	gs jb  0x140035fb9
   140035f66:	gs jb  0x140035fd2
   140035f69:	(bad)  
   140035f6a:	ins    BYTE PTR es:[rdi],dx
   140035f6b:	imul   edi,DWORD PTR [rdx+0x65],0x30307372
   140035f72:	xor    al,BYTE PTR [rax]
   140035f74:	add    BYTE PTR [rax],al
   140035f76:	add    BYTE PTR [rax],al
   140035f78:	push   rbx
   140035f79:	outs   dx,DWORD PTR ds:[rsi]
   140035f7a:	jne    0x140035fee
   140035f7c:	movsxd esp,DWORD PTR [rbp+0x32]
   140035f7f:	rex.W outs dx,DWORD PTR ds:[rsi]
   140035f81:	jae    0x140035ff7
   140035f83:	xor    BYTE PTR [rax],dh
   140035f85:	xor    DWORD PTR [rax],eax
   140035f87:	add    BYTE PTR [rbx+0x6f],dl
   140035f8a:	jne    0x140035ffe
   140035f8c:	movsxd esp,DWORD PTR [rbp+0x32]
   140035f8f:	rex.RXB (bad) 
   140035f91:	ins    DWORD PTR es:[rdi],dx
   140035f92:	gs rex.XB ins BYTE PTR es:[rdi],dx
   140035f95:	imul   esp,DWORD PTR [rbp+0x6e],0x30307374
   140035f9c:	xor    DWORD PTR [rax],eax
   140035f9e:	add    BYTE PTR [rax],al
   140035fa0:	push   rbx
   140035fa1:	outs   dx,DWORD PTR ds:[rsi]
   140035fa2:	jne    0x140036016
   140035fa4:	movsxd esp,DWORD PTR [rbp+0x32]
   140035fa7:	rex.RXB (bad) 
   140035fa9:	ins    DWORD PTR es:[rdi],dx
   140035faa:	rex.RB outs dx,BYTE PTR gs:[rsi]
   140035fad:	je     0x140036018
   140035faf:	je     0x14003601a
   140035fb1:	gs jae 0x140035fe4
   140035fb4:	xor    BYTE PTR [rcx],dh
   140035fb6:	add    BYTE PTR [rax],al
   140035fb8:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140035fba:	imul   ebp,DWORD PTR [esi+0x65],0x76726553
   140035fc2:	imul   esp,DWORD PTR [rbx+0x65],0x3072674d
   140035fc9:	xor    BYTE PTR [rcx],dh
   140035fcb:	add    BYTE PTR [rax],al
   140035fcd:	add    BYTE PTR [rax],al
   140035fcf:	add    BYTE PTR [rax+0x6f],cl
   140035fd2:	jae    0x140036048
   140035fd4:	push   rbx
   140035fd5:	je     0x140036038
   140035fd7:	je     0x14003603e
   140035fd9:	rex.WRB
   140035fda:	addr32 jb 0x14003600d
   140035fdd:	xor    BYTE PTR [rcx],dh
   140035fdf:	add    BYTE PTR [rsi+0x65],cl
   140035fe2:	je     0x14003605b
   140035fe4:	outs   dx,DWORD PTR ds:[rsi]
   140035fe5:	jb     0x140036052
   140035fe7:	push   rbx
   140035fe8:	gs jb  0x140036061
   140035feb:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   140035ff2:	add    BYTE PTR [rax],al
   140035ff4:	add    BYTE PTR [rax],al
   140035ff6:	add    BYTE PTR [rax],al
   140035ff8:	rex.WRX
   140035ff9:	gs je  0x140036073
   140035ffc:	outs   dx,DWORD PTR ds:[rsi]
   140035ffd:	jb     0x14003606a
   140035fff:	rex.XB ins BYTE PTR es:[rdi],dx
   140036001:	imul   esp,DWORD PTR [rbp+0x6e],0x72655374
   140036008:	jbe    0x140036073
   14003600a:	movsxd esp,DWORD PTR [rbp+0x5f]
   14003600d:	xor    BYTE PTR [rax],dh
   14003600f:	xor    DWORD PTR [rax],eax
   140036011:	add    BYTE PTR [rax],al
   140036013:	add    BYTE PTR [rax],al
   140036015:	add    BYTE PTR [rax],al
   140036017:	add    BYTE PTR [rsi+0x65],cl
   14003601a:	je     0x140036093
   14003601c:	outs   dx,DWORD PTR ds:[rsi]
   14003601d:	jb     0x14003608a
   14003601f:	push   rax
   140036020:	xor    dl,BYTE PTR [rax+0x53]
   140036023:	gs jb  0x14003609c
   140036026:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   14003602d:	add    BYTE PTR [rax],al
   14003602f:	add    BYTE PTR [rsi+0x65],cl
   140036032:	je     0x1400360ab
   140036034:	outs   dx,DWORD PTR ds:[rsi]
   140036035:	jb     0x1400360a2
   140036037:	push   rbx
   140036038:	gs jb  0x1400360b1
   14003603b:	gs jb  0x140036091
   14003603e:	gs jb  0x1400360b7
   140036041:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
	...
   140036050:	push   rsp
   140036051:	gs js  0x1400360c8
   140036054:	rex.WRB
   140036055:	gs jae 0x1400360cb
   140036058:	(bad)  
   140036059:	addr32 gs rex.WRB
   14003605c:	addr32 jb 0x1400360be
   14003605f:	xor    BYTE PTR [rax],dh
   140036061:	xor    DWORD PTR [rax],eax
   140036063:	add    BYTE PTR [rax],al
   140036065:	add    BYTE PTR [rax],al
   140036067:	add    BYTE PTR [rdi+rbp*2+0x6f],dl
   14003606b:	ins    BYTE PTR es:[rdi],dx
   14003606c:	push   rbx
   14003606d:	gs jb  0x1400360e6
   140036070:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   140036077:	add    BYTE PTR [rdx+0x65],dl
   14003607a:	outs   dx,BYTE PTR ds:[rsi]
   14003607b:	fs gs jb 0x1400360d2
   14003607f:	gs jb  0x1400360f8
   140036082:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   140036089:	add    BYTE PTR [rax],al
   14003608b:	add    BYTE PTR [rax],al
   14003608d:	add    BYTE PTR [rax],al
   14003608f:	add    BYTE PTR [rbx+0x74],dl
   140036092:	(bad)  
   140036093:	je     0x140036108
   140036095:	push   rbx
   140036096:	gs jb  0x14003610f
   140036099:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
	...
   1400360a8:	push   rbp
   1400360a9:	jae    0x140036110
   1400360ab:	jb     0x1400360f6
   1400360ad:	outs   dx,BYTE PTR ds:[rsi]
   1400360ae:	outs   dx,WORD PTR ds:[rsi]
   1400360b0:	rex.XB push 0x65676e61
   1400360b6:	push   rbx
   1400360b7:	gs jb  0x140036130
   1400360ba:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   1400360c1:	add    BYTE PTR [rax],al
   1400360c3:	add    BYTE PTR [rax],al
   1400360c5:	add    BYTE PTR [rax],al
   1400360c7:	add    BYTE PTR [rsi+0x50],dl
   1400360ca:	jb     0x14003613b
   1400360cc:	push   bx
   1400360ce:	gs jb  0x140036147
   1400360d1:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
	...
   1400360e0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400360e2:	jo     0x140036159
   1400360e4:	je     0x140036139
   1400360e6:	gs jb  0x14003615f
   1400360e9:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
	...
   1400360f8:	rex.WRB (bad) 
   1400360fa:	jo     0x140036148
   1400360fc:	imul   esi,DWORD PTR [rbx+0x74],0x76726553
   140036103:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   14003610a:	add    BYTE PTR [rax],al
   14003610c:	add    BYTE PTR [rax],al
   14003610e:	add    BYTE PTR [rax],al
   140036110:	rex.RXB (bad) 
   140036112:	ins    DWORD PTR es:[rdi],dx
   140036113:	gs push rbp
   140036115:	rex.WB push r11
   140036117:	gs jb  0x140036190
   14003611a:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   140036121:	add    BYTE PTR [rax],al
   140036123:	add    BYTE PTR [rax],al
   140036125:	add    BYTE PTR [rax],al
   140036127:	add    BYTE PTR [rbx+0x6f],dl
   14003612a:	jne    0x14003619a
   14003612c:	fs push rbx
   14003612e:	gs jb  0x1400361a7
   140036131:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
	...
   140036140:	rex.X
   140036141:	outs   dx,BYTE PTR gs:[rsi]
   140036143:	movsxd ebp,DWORD PTR [rax+0x6d]
   140036146:	(bad)  
   140036147:	jb     0x1400361b4
   140036149:	push   rbx
   14003614a:	gs jb  0x1400361c3
   14003614d:	imul   esp,DWORD PTR [rbx+0x65],0x313030
   140036154:	add    BYTE PTR [rax],al
   140036156:	add    BYTE PTR [rax],al
   140036158:	push   rsi
   140036159:	rex.R
   14003615a:	gs (bad) 
   14003615c:	jne    0x1400361c5
   14003615e:	push   rbx
   14003615f:	gs jb  0x1400361d8
   140036162:	imul   esp,DWORD PTR [rbx+0x65],0x3130305f
   140036169:	add    BYTE PTR [rax],al
   14003616b:	add    BYTE PTR [rax],al
   14003616d:	add    BYTE PTR [rax],al
   14003616f:	add    BYTE PTR [rbx+0x65],cl
   140036172:	jns    0x1400361ca
   140036174:	(bad)  
   140036175:	ins    BYTE PTR es:[rdi],dx
   140036176:	jne    0x1400361dd
   140036178:	rex.XB (bad) 
   14003617a:	movsxd ebp,DWORD PTR [rax+0x65]
   14003617d:	xor    BYTE PTR [rax],dh
   14003617f:	xor    DWORD PTR [rax],eax
   140036181:	add    BYTE PTR [rax],al
   140036183:	add    BYTE PTR [rax],al
   140036185:	add    BYTE PTR [rax],al
   140036187:	add    BYTE PTR [rdi+0x61],al
   14003618a:	ins    DWORD PTR es:[rdi],dx
   14003618b:	gs push rdx
   14003618d:	gs jae 0x1400361ff
   140036190:	jne    0x140036204
   140036192:	movsxd esp,DWORD PTR [rbp+0x53]
   140036195:	gs jb  0x14003620e
   140036198:	imul   esp,DWORD PTR [rbx+0x65],0x65696c43
   14003619f:	outs   dx,BYTE PTR ds:[rsi]
   1400361a0:	je     0x1400361f8
   1400361a2:	xor    BYTE PTR [rax],dh
   1400361a4:	xor    DWORD PTR [rax],eax
   1400361a6:	add    BYTE PTR [rax],al
   1400361a8:	rex.RXB (bad) 
   1400361aa:	ins    DWORD PTR es:[rdi],dx
   1400361ab:	gs push rdx
   1400361ad:	gs jae 0x14003621f
   1400361b0:	jne    0x140036224
   1400361b2:	movsxd esp,DWORD PTR [rbp+0x53]
   1400361b5:	gs jb  0x14003622e
   1400361b8:	imul   esp,DWORD PTR [rbx+0x65],0x76726553
   1400361bf:	gs jb  0x140036218
   1400361c2:	xor    BYTE PTR [rax],dh
   1400361c4:	xor    DWORD PTR [rax],eax
   1400361c6:	add    BYTE PTR [rax],al
   1400361c8:	push   rbx
   1400361c9:	outs   dx,DWORD PTR ds:[rsi]
   1400361ca:	jne    0x14003623e
   1400361cc:	movsxd esp,DWORD PTR [rbp+0x32]
   1400361cf:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400361d1:	imul   ebp,DWORD PTR [esi+0x65],0x6c436f54
   1400361d9:	imul   esp,DWORD PTR [rbp+0x6e],0x31303074
	...
   1400361e8:	push   rbx
   1400361e9:	outs   dx,DWORD PTR ds:[rsi]
   1400361ea:	jne    0x14003625e
   1400361ec:	movsxd esp,DWORD PTR [rbp+0x32]
   1400361ef:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400361f1:	imul   ebp,DWORD PTR [esi+0x65],0x65536f54
   1400361f9:	jb     0x140036271
   1400361fb:	gs jb  0x14003622e
   1400361fe:	xor    BYTE PTR [rcx],dh
	...
   140036208:	push   rbx
   140036209:	outs   dx,DWORD PTR ds:[rsi]
   14003620a:	jne    0x14003627e
   14003620c:	movsxd esp,DWORD PTR [rbp+0x32]
   14003620f:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140036211:	imul   ebp,DWORD PTR [esi+0x65],0x65536f54
   140036219:	jb     0x140036291
   14003621b:	gs jb  0x140036271
   14003621e:	je     0x140036292
   140036220:	imul   ebp,DWORD PTR [rsi+0x67],0x6c626154
   140036227:	xor    BYTE PTR gs:[rax],dh
   14003622a:	xor    DWORD PTR [rax],eax
   14003622c:	add    BYTE PTR [rax],al
   14003622e:	add    BYTE PTR [rax],al
   140036230:	push   rbx
   140036231:	outs   dx,DWORD PTR ds:[rsi]
   140036232:	jne    0x1400362a6
   140036234:	movsxd esp,DWORD PTR [rbp+0x32]
   140036237:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140036239:	imul   ebp,DWORD PTR [esi+0x65],0x6c436f54
   140036241:	imul   esp,DWORD PTR [rbp+0x6e],0x72745374
   140036248:	imul   ebp,DWORD PTR [rsi+0x67],0x6c626154
   14003624f:	xor    BYTE PTR gs:[rax],dh
   140036252:	xor    DWORD PTR [rax],eax
   140036254:	add    BYTE PTR [rax],al
   140036256:	add    BYTE PTR [rax],al
   140036258:	push   rsi
   140036259:	push   rax
   14003625a:	push   0x63697379
   14003625f:	jae    0x140036293
   140036261:	pop    rdi
   140036262:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140036264:	je     0x1400362cb
   140036266:	jb     0x1400362ce
   140036268:	(bad)  
   140036269:	movsxd esp,DWORD PTR [rbp+0x5f]
   14003626c:	xor    BYTE PTR [rax],dh
   14003626e:	xor    DWORD PTR [rax],eax
   140036270:	push   rsi
   140036271:	push   rax
   140036272:	push   0x63697379
   140036277:	jae    0x1400362ab
   140036279:	pop    rdi
   14003627a:	rex.W (bad) 
   14003627c:	outs   dx,BYTE PTR ds:[rsi]
   14003627d:	fs ins BYTE PTR es:[rdi],dx
   14003627f:	gs pop rdi
   140036281:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140036283:	je     0x1400362ea
   140036285:	jb     0x1400362ed
   140036287:	(bad)  
   140036288:	movsxd esp,DWORD PTR [rbp+0x5f]
   14003628b:	xor    BYTE PTR [rax],dh
   14003628d:	xor    DWORD PTR [rax],eax
   14003628f:	add    BYTE PTR [rbx+0x65],dl
   140036292:	jb     0x14003630a
   140036294:	gs jb  0x1400362ec
   140036297:	jo     0x140036305
   140036299:	outs   dx,DWORD PTR ds:[rsi]
   14003629a:	(bad)  
   14003629b:	fs rex.RXB (bad) 
   14003629e:	ins    DWORD PTR es:[rdi],dx
   14003629f:	gs push rbx
   1400362a1:	je     0x140036304
   1400362a3:	je     0x140036318
   1400362a5:	xor    BYTE PTR [rax],dh
   1400362a7:	xor    DWORD PTR [rax],eax
   1400362a9:	add    BYTE PTR [rax],al
   1400362ab:	add    BYTE PTR [rsi+0x52],dl
   1400362ae:	pop    rdi
   1400362af:	xor    BYTE PTR [rax],dh
   1400362b1:	xor    DWORD PTR [rax],eax
   1400362b3:	add    BYTE PTR [rax],al
   1400362b5:	add    BYTE PTR [rax],al
   1400362b7:	add    BYTE PTR [rdi+0x6f],dl
   1400362ba:	jb     0x140036327
   1400362bc:	jae    0x140036326
   1400362be:	outs   dx,DWORD PTR ds:[rsi]
   1400362bf:	jo     0x140036314
   1400362c1:	gs je  0x140036339
   1400362c4:	jo     0x1400362f6
   1400362c6:	xor    BYTE PTR [rcx],dh
	...
   1400362d0:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400362d2:	fs gs ins BYTE PTR es:[rdi],dx
   1400362d5:	rex.R outs dx,DWORD PTR ds:[rsi]
   1400362d7:	movsxd eax,DWORD PTR [rbx+0x6f]
   1400362da:	ins    DWORD PTR es:[rdi],dx
   1400362db:	ins    DWORD PTR es:[rdi],dx
   1400362dc:	(bad)  
   1400362dd:	outs   dx,BYTE PTR ds:[rsi]
   1400362de:	fs push rbx
   1400362e0:	jns    0x140036355
   1400362e2:	je     0x140036349
   1400362e4:	ins    DWORD PTR es:[rdi],dx
   1400362e5:	xor    BYTE PTR [rax],dh
   1400362e7:	xor    DWORD PTR [rax],eax
   1400362e9:	add    BYTE PTR [rax],al
   1400362eb:	add    BYTE PTR [rax],al
   1400362ed:	add    BYTE PTR [rax],al
   1400362ef:	add    BYTE PTR [rbp+0x4f],cl
   1400362f2:	rex.R
   1400362f3:	rex.RB
   1400362f4:	rex.WR pop rdi
   1400362f6:	push   rax
   1400362f7:	push   rdx
   1400362f8:	rex.WRXB
   1400362f9:	rex.XB
   1400362fa:	rex.RB push r11
   1400362fc:	push   rbx
   1400362fd:	rex.WB
   1400362fe:	rex.WRX
   1400362ff:	rex.RXB pop r15
   140036301:	push   rbx
   140036302:	rex.XB push r10
   140036304:	rex.WB push r8
   140036306:	push   rsp
   140036307:	pop    rdi
   140036308:	rex.WB
   140036309:	rex.WRX push rsp
   14003630b:	rex.RB push r10
   14003630d:	rex.RX
   14003630e:	rex.B
   14003630f:	rex.XB
   140036310:	rex.RB pop r15
   140036312:	xor    BYTE PTR [rax],dh
   140036314:	xor    DWORD PTR [rax],eax
   140036316:	add    BYTE PTR [rax],al
   140036318:	rex.RB pop r8
   14003631a:	push   rax
   14003631b:	rex.WRXB push r10
   14003631d:	push   rsp
   14003631e:	push   rbx
   14003631f:	pop    rcx
   140036320:	push   rbx
   140036321:	push   rsp
   140036322:	rex.RB
   140036323:	rex.WRB pop r15
   140036325:	rex.WB
   140036326:	rex.WRX push rsp
   140036328:	rex.RB push r10
   14003632a:	rex.RX
   14003632b:	rex.B
   14003632c:	rex.XB
   14003632d:	rex.RB pop r15
   14003632f:	push   rsi
   140036330:	rex.RB push r10
   140036332:	push   rbx
   140036333:	rex.WB
   140036334:	rex.WRXB
   140036335:	rex.WRX pop rdi
   140036337:	xor    BYTE PTR [rax],dh
   140036339:	xor    DWORD PTR [rax],eax
   14003633b:	add    BYTE PTR [rax],al
   14003633d:	add    BYTE PTR [rax],al
   14003633f:	add    BYTE PTR [rsi+0x61],cl
   140036342:	jbe    0x140036397
   140036344:	jns    0x1400363b9
   140036346:	je     0x1400363ad
   140036348:	ins    DWORD PTR es:[rdi],dx
   140036349:	xor    BYTE PTR [rax],dh
   14003634b:	xor    DWORD PTR [rax],eax
   14003634d:	add    BYTE PTR [rax],al
   14003634f:	add    al,bh
   140036351:	clc    
   140036352:	add    eax,DWORD PTR [rax+0x1]
   140036355:	add    BYTE PTR [rax],al
   140036357:	add    al,ch
   140036359:	outs   dx,BYTE PTR ds:[rsi]
   14003635a:	add    al,BYTE PTR [rax+0x1]
   14003635d:	add    BYTE PTR [rax],al
   14003635f:	add    BYTE PTR [rcx+0x50],al
   140036362:	push   rax
   140036363:	push   rbx
   140036364:	pop    rcx
   140036365:	push   rbx
   140036366:	push   rsp
   140036367:	rex.RB
   140036368:	rex.WRB cmp r12b,BYTE PTR [r8]
   14003636b:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14003636d:	and    BYTE PTR [rbx+0x6f],al
   140036370:	outs   dx,BYTE PTR ds:[rsi]
   140036371:	outs   dx,BYTE PTR ds:[rsi]
   140036372:	movsxd esi,DWORD PTR gs:[rcx+rcx*2+0x6e]
   140036377:	je     0x1400363de
   140036379:	jb     0x1400363e1
   14003637b:	(bad)  
   14003637c:	movsxd esp,DWORD PTR [rbp+0x73]
   14003637f:	sub    BYTE PTR [rcx],ch
   140036381:	sub    al,0x20
   140036383:	jae    0x1400363e4
   140036385:	outs   dx,BYTE PTR ds:[rsi]
   140036386:	push   rdx
   140036387:	imul   esi,DWORD PTR gs:[ebx+0x74],0x69746172
   140036390:	outs   dx,DWORD PTR ds:[rsi]
   140036391:	outs   dx,BYTE PTR ds:[rsi]
   140036392:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140036394:	jne    0x140036404
   140036396:	je     0x1400363b8
   140036398:	imul   esi,DWORD PTR [rbx+0x20],0xa216425
   14003639f:	add    BYTE PTR [rbx+0x6f],al
   1400363a2:	outs   dx,BYTE PTR ds:[rsi]
   1400363a3:	outs   dx,BYTE PTR ds:[rsi]
   1400363a4:	movsxd esi,DWORD PTR gs:[rcx+rcx*2+0x6e]
   1400363a9:	je     0x140036410
   1400363ab:	jb     0x140036413
   1400363ad:	(bad)  
   1400363ae:	movsxd esp,DWORD PTR [rbp+0x73]
	...
   1400363bd:	add    BYTE PTR [rax],al
   1400363bf:	add    BYTE PTR [rbx+0x3a],ah
   1400363c2:	pop    rsp
   1400363c3:	(bad)  
   1400363c4:	jne    0x14003642f
   1400363c6:	ins    BYTE PTR es:[rdi],dx
   1400363c7:	fs jae 0x140036436
   1400363ca:	(bad)  
   1400363cb:	jbe    0x140036432
   1400363cd:	pop    rsp
   1400363ce:	jae    0x14003643f
   1400363d0:	jne    0x140036444
   1400363d2:	movsxd esp,DWORD PTR [rbp+0x32]
   1400363d5:	pop    rdi
   1400363d6:	outs   dx,DWORD PTR fs:[rsi]
   1400363d8:	je     0x14003643b
   1400363da:	pop    rdi
   1400363db:	jb     0x140036442
   1400363dd:	ins    BYTE PTR es:[rdi],dx
   1400363de:	pop    rdi
   1400363df:	ja     0x14003644a
   1400363e1:	outs   dx,BYTE PTR ds:[rsi]
   1400363e2:	ss xor al,0x5c
   1400363e5:	(bad)  
   1400363e6:	jne    0x140036451
   1400363e8:	ins    BYTE PTR es:[rdi],dx
   1400363e9:	fs pop rsp
   1400363eb:	jae    0x14003645f
   1400363ed:	movsxd ebx,DWORD PTR [rcx+rbp*2+0x6e]
   1400363f1:	je     0x140036458
   1400363f3:	jb     0x14003645b
   1400363f5:	(bad)  
   1400363f6:	movsxd esp,DWORD PTR [rbp+0x73]
   1400363f9:	pop    rsp
   1400363fa:	imul   ebp,DWORD PTR [rsi+0x74],0x61667265
   140036401:	movsxd esp,DWORD PTR [rbp+0x73]
   140036404:	movsxd esi,DWORD PTR cs:[rax+0x70]
   140036408:	add    BYTE PTR [rax],al
   14003640a:	add    BYTE PTR [rax],al
   14003640c:	je     0x140036480
   14003640e:	jne    0x140036475
   140036410:	add    BYTE PTR [rax],al
   140036412:	add    BYTE PTR [rax],al
   140036414:	data16 (bad) 
   140036416:	ins    BYTE PTR es:[rdi],dx
   140036417:	jae    0x14003647e
   140036419:	add    BYTE PTR [rax],al
   14003641b:	add    BYTE PTR [rip+0x43000066],ah        # 0x183036487
   140036421:	rex.WXB
   140036422:	gs jns 0x14003647b
   140036425:	(bad)  
   140036426:	ins    BYTE PTR es:[rdi],dx
   140036427:	jne    0x14003648e
   140036429:	jae    0x14003645e
   14003642b:	rex.XB ins BYTE PTR es:[rdi],dx
   14003642d:	jne    0x1400364a2
   14003642f:	je     0x140036496
   140036431:	jb     0x140036453
   140036433:	(bad)  
   140036434:	ins    BYTE PTR es:[rdi],dx
   140036435:	ins    BYTE PTR es:[rdi],dx
   140036436:	outs   dx,DWORD PTR ds:[rsi]
   140036437:	movsxd esp,DWORD PTR [rcx+0x74]
   14003643a:	gs and BYTE PTR fs:[rdi+0x69],dh
   14003643f:	je     0x1400364a9
   140036441:	and    BYTE PTR [rdx+0x61],ah
   140036444:	and    BYTE PTR fs:[rcx+0x6c],ah
   140036448:	imul   esp,DWORD PTR [rdi+0x6e],0x746e656d
   14003644f:	and    DWORD PTR [rax],esp
   140036451:	sub    BYTE PTR [rip+0x28202970],ah        # 0x168238dc7
   140036457:	rex.WB
   140036458:	data16 and BYTE PTR [rax+rbp*2+0x69],dh
   14003645d:	jae    0x14003647f
   14003645f:	imul   esi,DWORD PTR [rbx+0x20],0x69736e69
   140036466:	fs and BYTE PTR gs:[rdi+0x66],ch
   14003646b:	and    BYTE PTR [rcx+0x20],ah
   14003646e:	push   0x20706165
   140036473:	(bad)  
   140036474:	ins    BYTE PTR es:[rdi],dx
   140036475:	ins    BYTE PTR es:[rdi],dx
   140036476:	outs   dx,DWORD PTR ds:[rsi]
   140036477:	movsxd esp,DWORD PTR [rcx+0x74]
   14003647a:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f79202c
   140036481:	jne    0x1400364a3
   140036483:	ins    DWORD PTR es:[rdi],dx
   140036484:	(bad)  
   140036485:	jns    0x1400364a7
   140036487:	outs   dx,BYTE PTR ds:[rsi]
   140036488:	gs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14003648f:	imul   ebp,DWORD PTR [rsi+0x68],0x74697265
   140036496:	and    BYTE PTR [rsi+0x72],ah
   140036499:	outs   dx,DWORD PTR ds:[rsi]
   14003649a:	ins    DWORD PTR es:[rdi],dx
   14003649b:	and    BYTE PTR [rbx+0x41],al
   14003649e:	ins    BYTE PTR es:[rdi],dx
   14003649f:	imul   esp,DWORD PTR [rdi+0x6e],0x654e6465
   1400364a6:	ja     0x1400364ec
   1400364a8:	gs ins BYTE PTR es:[rdi],dx
   1400364aa:	gs je  0x140036512
   1400364ad:	cmp    al,0x20
   1400364af:	rex.WXB push r14
   1400364b1:	xor    ebx,DWORD PTR [rdi+0x43]
   1400364b4:	rex.WR push rbp
   1400364b6:	push   rbx
   1400364b7:	push   rsp
   1400364b8:	rex.RB push r10
   1400364ba:	pop    rdi
   1400364bb:	push   rbx
   1400364bc:	rex.WB pop r10
   1400364be:	rex.RB
   1400364bf:	rex.WRXB
   1400364c0:	rex.RX and BYTE PTR [rsi],r15b
   1400364c3:	sub    DWORD PTR cs:[rdx],ecx
   1400364c6:	add    BYTE PTR [rax],al
   1400364c8:	rex.XB
   1400364c9:	rex.WXB
   1400364ca:	gs jns 0x140036523
   1400364cd:	(bad)  
   1400364ce:	ins    BYTE PTR es:[rdi],dx
   1400364cf:	jne    0x140036536
   1400364d1:	jae    0x140036506
   1400364d3:	rex.XB ins BYTE PTR es:[rdi],dx
   1400364d5:	jne    0x14003654a
   1400364d7:	je     0x14003653e
   1400364d9:	jb     0x140036515
   1400364db:	cmp    al,BYTE PTR [rbx+0x4b]
   1400364de:	gs jns 0x140036537
   1400364e1:	(bad)  
   1400364e2:	ins    BYTE PTR es:[rdi],dx
   1400364e3:	jne    0x14003654a
   1400364e5:	jae    0x14003651a
   1400364e7:	rex.XB ins BYTE PTR es:[rdi],dx
   1400364e9:	jne    0x14003655e
   1400364eb:	je     0x140036552
   1400364ed:	jb     0x1400364ef
   1400364ef:	add    BYTE PTR [rbx+0x3a],ah
   1400364f2:	pop    rsp
   1400364f3:	(bad)  
   1400364f4:	jne    0x14003655f
   1400364f6:	ins    BYTE PTR es:[rdi],dx
   1400364f7:	fs jae 0x140036566
   1400364fa:	(bad)  
   1400364fb:	jbe    0x140036562
   1400364fd:	pop    rsp
   1400364fe:	jae    0x14003656f
   140036500:	jne    0x140036574
   140036502:	movsxd esp,DWORD PTR [rbp+0x32]
   140036505:	pop    rdi
   140036506:	outs   dx,DWORD PTR fs:[rsi]
   140036508:	je     0x14003656b
   14003650a:	pop    rdi
   14003650b:	jb     0x140036572
   14003650d:	ins    BYTE PTR es:[rdi],dx
   14003650e:	pop    rdi
   14003650f:	ja     0x14003657a
   140036511:	outs   dx,BYTE PTR ds:[rsi]
   140036512:	ss xor al,0x5c
   140036515:	(bad)  
   140036516:	jne    0x140036581
   140036518:	ins    BYTE PTR es:[rdi],dx
   140036519:	fs pop rsp
   14003651b:	jae    0x14003658f
   14003651d:	movsxd ebx,DWORD PTR [rbx+rbp*2+0x76]
   140036521:	xor    ebp,DWORD PTR [rcx+rbp*2+0x62]
   140036525:	pop    rsp
   140036526:	imul   esp,DWORD PTR [rbp+0x79],0x76
   14003652a:	(bad)  
   14003652b:	ins    BYTE PTR es:[rdi],dx
   14003652c:	jne    0x140036593
   14003652e:	jae    0x140036563
   140036530:	movsxd esi,DWORD PTR cs:[rax+0x70]
   140036534:	add    BYTE PTR [rax],al
   140036536:	add    BYTE PTR [rax],al
   140036538:	and    eax,0x67
   14003653d:	add    BYTE PTR [rax],al
   14003653f:	add    BYTE PTR [rcx+riz*1],bh
   140036542:	sub    eax,0x6373202d
   140036547:	push   0x20616d65
   14003654c:	add    BYTE PTR [rax],al
   14003654e:	add    BYTE PTR [rax],al
   140036550:	push   rbp
   140036551:	outs   dx,BYTE PTR ds:[rsi]
   140036552:	(bad)  
   140036553:	(bad)  
   140036554:	ins    BYTE PTR es:[rdi],dx
   140036555:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   14003655a:	fs gs je 0x1400365c3
   14003655e:	jb     0x1400365cd
   140036560:	imul   ebp,DWORD PTR [rsi+0x65],0x66756220
   140036567:	data16 gs jb 0x14003658b
   14003656b:	outs   dx,BYTE PTR gs:[rsi]
   14003656d:	movsxd ebp,DWORD PTR [rdi+0x64]
   140036570:	imul   ebp,DWORD PTR [rsi+0x67],0x2e
   140036577:	add    BYTE PTR [rbx+0x55],al
   14003657a:	je     0x1400365e8
   14003657c:	push   rdx
   14003657d:	rex.X push rsp
   14003657f:	jb     0x1400365e6
   140036581:	and    BYTE PTR gs:[rdi+0x76],ch
   140036585:	gs jb  0x1400365ee
   140036588:	ins    BYTE PTR es:[rdi],dx
   140036589:	outs   dx,DWORD PTR ds:[rsi]
   14003658a:	ja     0x1400365ac
   14003658c:	ja     0x1400365f7
   14003658e:	je     0x1400365f8
   140036590:	and    BYTE PTR [rip+0x6c652075],ah        # 0x1ac68860b
   140036596:	gs ins DWORD PTR es:[rdi],dx
   140036598:	outs   dx,BYTE PTR gs:[rsi]
   14003659a:	je     0x14003660f
   14003659c:	and    DWORD PTR [rdx],ecx
   14003659e:	add    BYTE PTR [rax],al
   1400365a0:	rex.XB push r13
   1400365a2:	je     0x140036610
   1400365a4:	push   rdx
   1400365a5:	rex.X push rsp
   1400365a7:	jb     0x14003660e
   1400365a9:	gs cmp al,0x73
   1400365ac:	je     0x140036620
   1400365ae:	jne    0x140036613
   1400365b0:	je     0x1400365d2
   1400365b2:	rex.XB push r13
   1400365b4:	je     0x140036622
   1400365b6:	push   rbx
   1400365b7:	jns    0x140036626
   1400365b9:	(bad)  
   1400365ba:	outs   dx,DWORD PTR ds:[rsi]
   1400365bb:	ins    BYTE PTR es:[rdi],dx
   1400365bc:	push   rsp
   1400365bd:	(bad)  
   1400365be:	(bad)  
   1400365bf:	ins    BYTE PTR es:[rdi],dx
   1400365c0:	gs rex.WR (bad) 
   1400365c3:	jb     0x14003662c
   1400365c5:	gs rex.X (bad) 
   1400365c8:	jae    0x14003662f
   1400365ca:	push   rsp
   1400365cb:	jb     0x140036632
   1400365cd:	rex.RB outs dx,BYTE PTR gs:[rsi]
   1400365d0:	je     0x140036644
   1400365d2:	jns    0x140036633
   1400365d4:	je     0x1400365f6
   1400365d6:	sub    ch,BYTE PTR [rdi+rbx*2]
   1400365d9:	pop    rdi
   1400365da:	imul   ebp,DWORD PTR [rsi+0x74],0x632c3436
   1400365e1:	ins    BYTE PTR es:[rdi],dx
   1400365e2:	(bad)  
   1400365e3:	jae    0x140036658
   1400365e5:	and    BYTE PTR [rbx+0x54],al
   1400365e8:	jb     0x14003664f
   1400365ea:	rex.RB outs dx,BYTE PTR gs:[rsi]
   1400365ed:	je     0x140036661
   1400365ef:	jns    0x14003663d
   1400365f1:	gs jae 0x140036667
   1400365f4:	cmp    al,0x63
   1400365f6:	ins    BYTE PTR es:[rdi],dx
   1400365f7:	(bad)  
   1400365f8:	jae    0x14003666d
   1400365fa:	and    BYTE PTR [rbx+0x4e],al
   1400365fd:	outs   dx,DWORD PTR ds:[rsi]
   1400365fe:	outs   dx,BYTE PTR ds:[rsi]
   1400365ff:	push   rsp
   140036600:	push   0x64616572
   140036605:	jae    0x140036668
   140036607:	gs push sp
   14003660a:	jb     0x140036671
   14003660c:	gs cmp al,0x30
   14003660f:	ds sub al,0x30
   140036612:	ds sub al,0x63
   140036615:	ins    BYTE PTR es:[rdi],dx
   140036616:	(bad)  
   140036617:	jae    0x14003668c
   140036619:	and    BYTE PTR [rbx+0x55],al
   14003661c:	je     0x14003668a
   14003661e:	rex.WRB
   14003661f:	gs ins DWORD PTR es:[rdi],dx
   140036621:	outs   dx,DWORD PTR ds:[rsi]
   140036622:	jb     0x14003669d
   140036624:	cmp    al,0x73
   140036626:	je     0x14003669a
   140036628:	jne    0x14003668d
   14003662a:	je     0x14003664c
   14003662c:	push   rbp
   14003662d:	je     0x14003669b
   14003662f:	push   rdx
   140036630:	rex.X push rsp
   140036632:	jb     0x140036699
   140036634:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   140036637:	fs gs pop rdi
   14003663a:	je     0x140036678
   14003663c:	jae    0x1400366b2
   14003663e:	jb     0x1400366b5
   140036640:	movsxd esi,DWORD PTR [rax+riz*1+0x43]
   140036644:	push   rbp
   140036645:	je     0x1400366b3
   140036647:	push   rbx
   140036648:	jns    0x1400366b7
   14003664a:	(bad)  
   14003664b:	outs   dx,DWORD PTR ds:[rsi]
   14003664c:	ins    BYTE PTR es:[rdi],dx
   14003664d:	push   rsp
   14003664e:	(bad)  
   14003664f:	(bad)  
   140036650:	ins    BYTE PTR es:[rdi],dx
   140036651:	gs rex.WR (bad) 
   140036654:	jb     0x1400366bd
   140036656:	gs rex.X (bad) 
   140036659:	jae    0x1400366c0
   14003665b:	push   rsp
   14003665c:	jb     0x1400366c3
   14003665e:	rex.RB outs dx,BYTE PTR gs:[rsi]
   140036661:	je     0x1400366d5
   140036663:	jns    0x1400366c4
   140036665:	je     0x140036687
   140036667:	sub    ch,BYTE PTR [rdi+rbx*2]
   14003666a:	pop    rdi
   14003666b:	imul   ebp,DWORD PTR [rsi+0x74],0x2c3e3436
   140036672:	pop    rdi
   140036673:	pop    rdi
   140036674:	imul   ebp,DWORD PTR [rsi+0x74],0x203e3436
   14003667b:	cmp    bh,BYTE PTR ds:[rdx]
   14003667e:	rex.WRX
   14003667f:	gs ja  0x1400366d0
   140036682:	outs   dx,DWORD PTR ds:[rsi]
   140036683:	fs add BYTE PTR gs:[rax],al
	...
   14003668f:	add    BYTE PTR [rbx+0x3a],ah
   140036692:	pop    rsp
   140036693:	(bad)  
   140036694:	jne    0x1400366ff
   140036696:	ins    BYTE PTR es:[rdi],dx
   140036697:	fs jae 0x140036706
   14003669a:	(bad)  
   14003669b:	jbe    0x140036702
   14003669d:	pop    rsp
   14003669e:	jae    0x14003670f
   1400366a0:	jne    0x140036714
   1400366a2:	movsxd esp,DWORD PTR [rbp+0x32]
   1400366a5:	pop    rdi
   1400366a6:	outs   dx,DWORD PTR fs:[rsi]
   1400366a8:	je     0x14003670b
   1400366aa:	pop    rdi
   1400366ab:	jb     0x140036712
   1400366ad:	ins    BYTE PTR es:[rdi],dx
   1400366ae:	pop    rdi
   1400366af:	ja     0x14003671a
   1400366b1:	outs   dx,BYTE PTR ds:[rsi]
   1400366b2:	ss xor al,0x5c
   1400366b5:	(bad)  
   1400366b6:	jne    0x140036721
   1400366b8:	ins    BYTE PTR es:[rdi],dx
   1400366b9:	fs pop rsp
   1400366bb:	jae    0x14003672f
   1400366bd:	movsxd ebx,DWORD PTR [rax+rsi*2+0x75]
   1400366c1:	(bad)  
   1400366c2:	ins    BYTE PTR es:[rdi],dx
   1400366c3:	imul   esp,DWORD PTR [rbx+0x5c],0x72656974
   1400366ca:	xor    DWORD PTR [rbp+rsi*2+0x74],ebx
   1400366ce:	ins    BYTE PTR es:[rdi],dx
   1400366cf:	jb     0x140036733
   1400366d1:	je     0x140036745
   1400366d3:	gs gs cs push 0x0
   1400366db:	movabs al,ds:0x3e7ad7f2
   1400366e4:	add    BYTE PTR [rax],al
   1400366e6:	loopne 0x14003672b
   1400366e8:	add    BYTE PTR [rax],al
   1400366ea:	add    BYTE PTR [rax],al
   1400366ec:	add    BYTE PTR [rax],al
   1400366ee:	lock rex.XB (bad) 
   1400366f1:	(bad)  
   1400366f2:	(bad)  
   1400366f3:	(bad)  
   1400366f4:	(bad)  
   1400366f5:	(bad)  
   1400366f6:	(bad)  
   1400366f7:	jg     0x1400366f8
   1400366f9:	(bad)  
   1400366fa:	(bad)  
   1400366fb:	(bad)  
   1400366fc:	(bad)  
   1400366fd:	(bad)  
   1400366fe:	(bad)  
   1400366ff:	jg     0x140036731
   140036701:	xor    BYTE PTR [rax],dh
   140036703:	xor    BYTE PTR [rax],dh
   140036705:	xor    BYTE PTR [rax],dh
   140036707:	xor    BYTE PTR [rip+0x30303030],ch        # 0x17033973d
   14003670d:	sub    eax,0x30303030
   140036712:	sub    eax,0x30303030
   140036717:	sub    eax,0x30303030
   14003671c:	xor    BYTE PTR [rax],dh
   14003671e:	xor    BYTE PTR [rax],dh
   140036720:	xor    BYTE PTR [rax],dh
   140036722:	xor    BYTE PTR [rax],dh
   140036724:	add    BYTE PTR [rax],al
   140036726:	add    BYTE PTR [rax],al
   140036728:	jb     0x14003678f
   14003672a:	jae    0x14003679b
   14003672c:	jne    0x1400367a0
   14003672e:	movsxd esp,DWORD PTR [rbp+0x0]
   140036731:	add    BYTE PTR [rax],al
   140036733:	add    BYTE PTR [rbx],ch
   140036735:	add    BYTE PTR [rax],al
   140036737:	add    BYTE PTR [rdx],bh
   140036739:	add    BYTE PTR [rax],al
   14003673b:	add    BYTE PTR [rsi+0x75],ch
   14003673e:	ins    BYTE PTR es:[rdi],dx
   14003673f:	ins    BYTE PTR es:[rdi],dx
   140036740:	add    BYTE PTR [rax],al
   140036742:	add    BYTE PTR [rax],al
   140036744:	and    ah,BYTE PTR [rdx]
   140036746:	and    cl,BYTE PTR [rdx]
   140036748:	add    BYTE PTR [rax],al
   14003674a:	add    BYTE PTR [rax],al
   14003674c:	pop    rsp
   14003674d:	and    ah,BYTE PTR [rdx]
   14003674f:	and    al,BYTE PTR [rax]
   140036751:	add    BYTE PTR [rax],al
   140036753:	add    BYTE PTR [rdx],ah
   140036755:	and    ah,BYTE PTR [rdx]
   140036757:	add    BYTE PTR [rdx],cl
   140036759:	and    ah,BYTE PTR [rdx]
   14003675b:	and    al,BYTE PTR [rax]
   14003675d:	add    BYTE PTR [rax],al
   14003675f:	add    BYTE PTR [rdx],cl
   140036761:	and    ebx,DWORD PTR [rbx+0x0]
   140036764:	and    ebx,DWORD PTR [rbx+0x20]
   140036767:	add    BYTE PTR [rip+0x583230],ah        # 0x1405b999d
   14003676d:	add    BYTE PTR [rax],al
   14003676f:	add    BYTE PTR [rbp+0x0],bl
   140036772:	add    BYTE PTR [rax],al
   140036774:	or     bl,BYTE PTR [rbx+0x0]
   140036777:	add    BYTE PTR [rbx+0x20],bl
   14003677a:	add    BYTE PTR [rax],al
   14003677c:	sub    al,0x0
   14003677e:	add    BYTE PTR [rax],al
   140036780:	jnp    0x14003678c
   140036782:	add    BYTE PTR [rax],al
   140036784:	and    BYTE PTR [rip+0x7d0020],bh        # 0x1408067aa
   14003678a:	add    BYTE PTR [rax],al
   14003678c:	add    BYTE PTR [rax],al
   14003678e:	add    BYTE PTR [rax],al
   140036790:	rex.XB (bad) 
   140036792:	outs   dx,BYTE PTR ds:[rsi]
   140036793:	outs   dx,BYTE PTR ds:[rsi]
   140036794:	outs   dx,DWORD PTR ds:[rsi]
   140036795:	je     0x1400367b7
   140036797:	jae    0x1400367fa
   140036799:	jbe    0x140036800
   14003679b:	and    BYTE PTR [rbx+0x56],cl
   14003679e:	xor    esp,DWORD PTR [rax]
   1400367a0:	je     0x140036807
   1400367a2:	js     0x140036818
   1400367a4:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   1400367a8:	(bad)  
   1400367a9:	and    BYTE PTR [rsi+0x6f],ch
   1400367ac:	outs   dx,BYTE PTR ds:[rsi]
   1400367ad:	sub    eax,0x74786574
   1400367b2:	and    BYTE PTR [rdx+0x75],ah
   1400367b5:	data16 data16 gs jb 0x1400367db
   1400367ba:	add    BYTE PTR [rax],al
   1400367bc:	add    BYTE PTR [rax],al
   1400367be:	add    BYTE PTR [rax],al
   1400367c0:	push   rbp
   1400367c1:	outs   dx,BYTE PTR ds:[rsi]
   1400367c2:	jae    0x140036839
   1400367c4:	jo     0x140036836
   1400367c6:	outs   dx,DWORD PTR ds:[rsi]
   1400367c7:	jb     0x14003683d
   1400367c9:	gs and BYTE PTR fs:[rbp+riz*2+0x78],dh
   1400367cf:	je     0x1400367f1
   1400367d1:	outs   dx,BYTE PTR gs:[rsi]
   1400367d3:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400367d6:	imul   ebp,DWORD PTR [rsi+0x67],0x2e646920
   1400367dd:	add    BYTE PTR [rax],al
   1400367df:	add    BYTE PTR [rcx+riz*1],bh
   1400367e2:	sub    eax,0x766b202d
   1400367e7:	xor    esp,DWORD PTR [rax]
   1400367e9:	outs   dx,BYTE PTR gs:[rsi]
   1400367eb:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400367ee:	imul   ebp,DWORD PTR [rsi+0x67],0x3a73253a
   1400367f5:	jbe    0x14003685c
   1400367f7:	jb     0x14003686c
   1400367f9:	imul   ebp,DWORD PTR [rdi+0x6e],0x7d73257b
   140036800:	and    BYTE PTR [rsi+0x6f],ah
   140036803:	jb     0x140036872
   140036805:	(bad)  
   140036806:	je     0x140036842
   140036808:	and    eax,0x65763a73
   14003680d:	jb     0x140036882
   14003680f:	imul   ebp,DWORD PTR [rdi+0x6e],0x7d73257b
   140036816:	and    BYTE PTR [rip+0xa3e2d],ch        # 0x1400da649
   14003681c:	add    BYTE PTR [rax],al
   14003681e:	add    BYTE PTR [rax],al
   140036820:	rex.WRB
   140036821:	rex.R
   140036822:	gs data16 (bad) 
   140036825:	jne    0x140036893
   140036827:	je     0x14003687c
   140036829:	je     0x14003689d
   14003682b:	imul   ebp,DWORD PTR [rsi+0x67],0x504d0000
   140036832:	jb     0x1400368a3
   140036834:	jo     0x14003689b
   140036836:	jb     0x1400368ac
   140036838:	jns    0x14003687d
   14003683a:	outs   dx,DWORD PTR ds:[rsi]
   14003683b:	ins    BYTE PTR es:[rdi],dx
   14003683c:	outs   dx,DWORD PTR ds:[rsi]
   14003683d:	jb     0x140036896
   14003683f:	imul   esi,DWORD PTR [rax+rbp*2+0x4e],0x706c416f
   140036847:	push   0x61
   14003684c:	pop    rdi
   14003684d:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140036851:	jae    0x140036853
   140036853:	add    BYTE PTR [rax],al
   140036855:	add    BYTE PTR [rax],al
   140036857:	add    BYTE PTR [rcx+riz*1],bh
   14003685a:	sub    eax,0x766b202d
   14003685f:	xor    esp,DWORD PTR [rax]
   140036861:	add    BYTE PTR [rax],al
   140036863:	add    BYTE PTR [rax],ch
   140036865:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140036867:	outs   dx,BYTE PTR ds:[rsi]
   140036868:	sub    DWORD PTR gs:[rax],eax
   14003686b:	add    BYTE PTR [rax],al
   14003686d:	add    BYTE PTR [rax],al
   14003686f:	add    BYTE PTR [rbx+0x7d],bh
   140036872:	pop    rbx
   140036873:	pop    rbp
   140036874:	cmp    eax,0xa09202c
   140036879:	(bad)  
   14003687a:	and    bh,BYTE PTR [rdx]
   14003687c:	sub    edi,DWORD PTR [rbx]
   14003687e:	add    BYTE PTR [rax],al
   140036880:	imul   r13,QWORD PTR [rsi+0x65],0x20642520
   140036888:	(bad)  
   140036889:	je     0x1400368ab
   14003688b:	and    ah,BYTE PTR [rip+0x203a2273]        # 0x1603d8b04
   140036891:	and    eax,0x73
   140036896:	add    BYTE PTR [rax],al
   140036898:	imul   r13,QWORD PTR [rsi+0x65],0x3a642520
   1400368a0:	and    BYTE PTR [rip+0x73],ah        # 0x140036919
   1400368a6:	add    BYTE PTR [rax],al
   1400368a8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400368aa:	jbe    0x14003690d
   1400368ac:	ins    BYTE PTR es:[rdi],dx
   1400368ad:	imul   esp,DWORD PTR [rax+riz*1+0x68],0x65646165
   1400368b5:	jb     0x1400368b7
   1400368b7:	add    BYTE PTR [rcx+riz*1],bh
   1400368ba:	sub    eax,0x2d
   1400368bf:	add    BYTE PTR [rdx+0x61],al
   1400368c2:	and    BYTE PTR fs:[rax+0x65],ch
   1400368c6:	(bad)  
   1400368c7:	fs gs jb 0x1400368eb
   1400368cb:	outs   dx,WORD PTR ds:[rsi]
   1400368cd:	jb     0x14003693c
   1400368cf:	(bad)  
   1400368d0:	je     0x1400368f2
   1400368d2:	sub    BYTE PTR [rbp+0x78],ah
   1400368d5:	jo     0x14003693c
   1400368d7:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   1400368db:	and    BYTE PTR [rdi],ah
   1400368dd:	cmp    al,0x21
   1400368df:	sub    eax,0x272d
   1400368e4:	imul   esi,DWORD PTR [rsi+0x33],0x0
   1400368e8:	rex.X (bad) 
   1400368ea:	and    BYTE PTR fs:[rax+0x65],ch
   1400368ee:	(bad)  
   1400368ef:	fs gs jb 0x140036913
   1400368f3:	outs   dx,WORD PTR ds:[rsi]
   1400368f5:	jb     0x140036964
   1400368f7:	(bad)  
   1400368f8:	je     0x14003691a
   1400368fa:	sub    BYTE PTR [rbp+0x78],ah
   1400368fd:	jo     0x140036964
   1400368ff:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036903:	and    BYTE PTR [rdi],ah
   140036905:	imul   esi,DWORD PTR [rsi+0x33],0x27
   140036909:	add    BYTE PTR [rax],al
   14003690b:	add    BYTE PTR [rax],al
   14003690d:	add    BYTE PTR [rax],al
   14003690f:	add    BYTE PTR [rbp+0x6e],ah
   140036912:	movsxd ebp,DWORD PTR [rdi+0x64]
   140036915:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14003691c:	add    BYTE PTR [rax],al
   14003691e:	add    BYTE PTR [rax],al
   140036920:	rex.X (bad) 
   140036922:	and    BYTE PTR fs:[rax+0x65],ch
   140036926:	(bad)  
   140036927:	fs gs jb 0x14003694b
   14003692b:	outs   dx,WORD PTR ds:[rsi]
   14003692d:	jb     0x14003699c
   14003692f:	(bad)  
   140036930:	je     0x140036952
   140036932:	sub    BYTE PTR [rbp+0x78],ah
   140036935:	jo     0x14003699c
   140036937:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   14003693b:	and    BYTE PTR [rdi],ah
   14003693d:	outs   dx,BYTE PTR gs:[rsi]
   14003693f:	movsxd ebp,DWORD PTR [rdi+0x64]
   140036942:	imul   ebp,DWORD PTR [rsi+0x67],0x42000027
   140036949:	(bad)  
   14003694a:	and    BYTE PTR fs:[rax+0x65],ch
   14003694e:	(bad)  
   14003694f:	fs gs jb 0x140036973
   140036953:	outs   dx,WORD PTR ds:[rsi]
   140036955:	jb     0x1400369c4
   140036957:	(bad)  
   140036958:	je     0x14003697a
   14003695a:	sub    BYTE PTR [rbp+0x78],ah
   14003695d:	jo     0x1400369c4
   14003695f:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036963:	and    BYTE PTR [rdi],ah
   140036965:	cmp    ah,BYTE PTR [rdi]
   140036967:	add    BYTE PTR [rdx+0x61],al
   14003696a:	and    BYTE PTR fs:[rax+0x65],ch
   14003696e:	(bad)  
   14003696f:	fs gs jb 0x140036993
   140036973:	outs   dx,WORD PTR ds:[rsi]
   140036975:	jb     0x1400369e4
   140036977:	(bad)  
   140036978:	je     0x14003699a
   14003697a:	sub    BYTE PTR [rbp+0x78],ah
   14003697d:	jo     0x1400369e4
   14003697f:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036983:	and    BYTE PTR [rbp+0x6e],ah
   140036986:	movsxd ebp,DWORD PTR [rdi+0x64]
   140036989:	imul   ebp,DWORD PTR [rsi+0x67],0x6d616e20
   140036990:	sub    DWORD PTR gs:[rax],eax
   140036993:	add    BYTE PTR [rax],al
   140036995:	add    BYTE PTR [rax],al
   140036997:	add    BYTE PTR [rsi+0x65],dh
   14003699a:	jb     0x140036a0f
   14003699c:	imul   ebp,DWORD PTR [rdi+0x6e],0x64614200
   1400369a3:	and    BYTE PTR [rax+0x65],ch
   1400369a6:	(bad)  
   1400369a7:	fs gs jb 0x1400369cb
   1400369ab:	outs   dx,WORD PTR ds:[rsi]
   1400369ad:	jb     0x140036a1c
   1400369af:	(bad)  
   1400369b0:	je     0x1400369d2
   1400369b2:	sub    BYTE PTR [rbp+0x78],ah
   1400369b5:	jo     0x140036a1c
   1400369b7:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   1400369bb:	and    BYTE PTR [rdi],ah
   1400369bd:	jbe    0x140036a24
   1400369bf:	jb     0x140036a34
   1400369c1:	imul   ebp,DWORD PTR [rdi+0x6e],0x27
   1400369c8:	jnp    0x1400369ca
   1400369ca:	add    BYTE PTR [rax],al
   1400369cc:	add    BYTE PTR [rax],al
   1400369ce:	add    BYTE PTR [rax],al
   1400369d0:	rex.X (bad) 
   1400369d2:	and    BYTE PTR fs:[rax+0x65],ch
   1400369d6:	(bad)  
   1400369d7:	fs gs jb 0x1400369fb
   1400369db:	outs   dx,WORD PTR ds:[rsi]
   1400369dd:	jb     0x140036a4c
   1400369df:	(bad)  
   1400369e0:	je     0x140036a02
   1400369e2:	sub    BYTE PTR [rbp+0x78],ah
   1400369e5:	jo     0x140036a4c
   1400369e7:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   1400369eb:	and    BYTE PTR [rbp+0x6e],ah
   1400369ee:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400369f1:	imul   ebp,DWORD PTR [rsi+0x67],0x69757520
   1400369f8:	sub    DWORD PTR fs:[rax],eax
   1400369fb:	add    BYTE PTR [rsi+0x6f],ah
   1400369fe:	jb     0x140036a6d
   140036a00:	(bad)  
   140036a01:	je     0x140036a03
   140036a03:	add    BYTE PTR [rax],al
   140036a05:	add    BYTE PTR [rax],al
   140036a07:	add    BYTE PTR [rdx+0x61],al
   140036a0a:	and    BYTE PTR fs:[rax+0x65],ch
   140036a0e:	(bad)  
   140036a0f:	fs gs jb 0x140036a33
   140036a13:	outs   dx,WORD PTR ds:[rsi]
   140036a15:	jb     0x140036a84
   140036a17:	(bad)  
   140036a18:	je     0x140036a3a
   140036a1a:	sub    BYTE PTR [rbp+0x78],ah
   140036a1d:	jo     0x140036a84
   140036a1f:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036a23:	and    BYTE PTR [rdi],ah
   140036a25:	outs   dx,WORD PTR ds:[rsi]
   140036a27:	jb     0x140036a96
   140036a29:	(bad)  
   140036a2a:	je     0x140036a53
   140036a2c:	add    BYTE PTR [rax],al
   140036a2e:	add    BYTE PTR [rax],al
   140036a30:	rex.X (bad) 
   140036a32:	and    BYTE PTR fs:[rax+0x65],ch
   140036a36:	(bad)  
   140036a37:	fs gs jb 0x140036a5b
   140036a3b:	outs   dx,WORD PTR ds:[rsi]
   140036a3d:	jb     0x140036aac
   140036a3f:	(bad)  
   140036a40:	je     0x140036a62
   140036a42:	sub    BYTE PTR [rbp+0x78],ah
   140036a45:	jo     0x140036aac
   140036a47:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036a4b:	and    BYTE PTR [rsi+0x6f],ah
   140036a4e:	jb     0x140036abd
   140036a50:	(bad)  
   140036a51:	je     0x140036a73
   140036a53:	outs   dx,BYTE PTR ds:[rsi]
   140036a54:	(bad)  
   140036a55:	ins    DWORD PTR es:[rdi],dx
   140036a56:	sub    DWORD PTR gs:[rax],eax
   140036a59:	add    BYTE PTR [rax],al
   140036a5b:	add    BYTE PTR [rax],al
   140036a5d:	add    BYTE PTR [rax],al
   140036a5f:	add    BYTE PTR [rdx+0x61],al
   140036a62:	and    BYTE PTR fs:[rax+0x65],ch
   140036a66:	(bad)  
   140036a67:	fs gs jb 0x140036a8b
   140036a6b:	outs   dx,WORD PTR ds:[rsi]
   140036a6d:	jb     0x140036adc
   140036a6f:	(bad)  
   140036a70:	je     0x140036a92
   140036a72:	sub    BYTE PTR [rbp+0x78],ah
   140036a75:	jo     0x140036adc
   140036a77:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036a7b:	and    BYTE PTR [rsi+0x6f],ah
   140036a7e:	jb     0x140036aed
   140036a80:	(bad)  
   140036a81:	je     0x140036aa3
   140036a83:	jne    0x140036afa
   140036a85:	imul   esp,DWORD PTR [rcx+rbp*1+0x0],0x2d000000
   140036a8d:	sub    eax,0x6142003e
   140036a92:	and    BYTE PTR fs:[rax+0x65],ch
   140036a96:	(bad)  
   140036a97:	fs gs jb 0x140036abb
   140036a9b:	outs   dx,WORD PTR ds:[rsi]
   140036a9d:	jb     0x140036b0c
   140036a9f:	(bad)  
   140036aa0:	je     0x140036aa2
   140036aa2:	add    BYTE PTR [rax],al
   140036aa4:	add    BYTE PTR [rax],al
   140036aa6:	add    BYTE PTR [rax],al
   140036aa8:	rex.X (bad) 
   140036aaa:	and    BYTE PTR fs:[rax+0x65],ch
   140036aae:	(bad)  
   140036aaf:	fs gs jb 0x140036ad3
   140036ab3:	outs   dx,WORD PTR ds:[rsi]
   140036ab5:	jb     0x140036b24
   140036ab7:	(bad)  
   140036ab8:	je     0x140036ada
   140036aba:	sub    BYTE PTR [rbp+0x61],ch
   140036abd:	ins    BYTE PTR es:[rdi],dx
   140036abe:	outs   dx,WORD PTR ds:[rsi]
   140036ac0:	jb     0x140036b2f
   140036ac2:	gs and BYTE PTR fs:[rbp+0x55],dl
   140036ac7:	rex.WB
   140036ac8:	sub    DWORD PTR [rax],r8d
   140036acb:	add    BYTE PTR [rax],al
   140036acd:	add    BYTE PTR [rax],al
   140036acf:	add    BYTE PTR [rdx+0x61],al
   140036ad2:	and    BYTE PTR fs:[rax+0x65],ch
   140036ad6:	(bad)  
   140036ad7:	fs gs jb 0x140036afb
   140036adb:	sub    BYTE PTR [rbp+0x6e],dh
   140036ade:	jb     0x140036b45
   140036ae0:	movsxd ebp,DWORD PTR [rdi+0x67]
   140036ae3:	outs   dx,BYTE PTR ds:[rsi]
   140036ae4:	imul   edi,DWORD PTR [rdx+0x65],0x6e652064
   140036aeb:	movsxd ebp,DWORD PTR [rdi+0x64]
   140036aee:	imul   ebp,DWORD PTR [rsi+0x67],0x65707320
   140036af5:	movsxd ebp,DWORD PTR [rcx+0x66]
   140036af8:	imul   esp,DWORD PTR [rbp+0x72],0x29
   140036aff:	add    BYTE PTR [rbp+0x78],al
   140036b02:	jo     0x140036b69
   140036b04:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036b08:	and    BYTE PTR [rdi],ah
   140036b0a:	jnp    0x140036b33
   140036b0c:	add    BYTE PTR [rax],al
   140036b0e:	add    BYTE PTR [rax],al
   140036b10:	rex.RB js 0x140036b83
   140036b13:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140036b18:	and    BYTE PTR [rbp+0x65],ch
   140036b1b:	ins    DWORD PTR es:[rdi],dx
   140036b1c:	(bad)  
   140036b1d:	gs jb  0x140036b40
   140036b20:	outs   dx,BYTE PTR ds:[rsi]
   140036b21:	(bad)  
   140036b22:	ins    DWORD PTR es:[rdi],dx
   140036b23:	and    BYTE PTR gs:[rdi+0x72],ch
   140036b27:	and    BYTE PTR [rdi],ah
   140036b29:	jge    0x140036b52
   140036b2b:	add    BYTE PTR [rax],al
   140036b2d:	add    BYTE PTR [rax],al
   140036b2f:	add    BYTE PTR [rcx+0x6e],cl
   140036b32:	jbe    0x140036b95
   140036b34:	ins    BYTE PTR es:[rdi],dx
   140036b35:	imul   esp,DWORD PTR [rax+riz*1+0x6d],0x65626d65
   140036b3d:	jb     0x140036b5f
   140036b3f:	outs   dx,BYTE PTR ds:[rsi]
   140036b40:	(bad)  
   140036b41:	ins    DWORD PTR es:[rdi],dx
   140036b42:	and    BYTE PTR gs:[rdi],ah
   140036b45:	and    eax,0x2773
   140036b4a:	add    BYTE PTR [rax],al
   140036b4c:	cmp    eax,0x45000000
   140036b51:	js     0x140036bc3
   140036b53:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140036b58:	and    BYTE PTR [rdi],ah
   140036b5a:	cmp    eax,0x66612027
   140036b5f:	je     0x140036bc6
   140036b61:	jb     0x140036b83
   140036b63:	ins    DWORD PTR es:[rdi],dx
   140036b64:	gs ins DWORD PTR es:[rdi],dx
   140036b66:	(bad)  
   140036b67:	gs jb  0x140036b8a
   140036b6a:	outs   dx,BYTE PTR ds:[rsi]
   140036b6b:	(bad)  
   140036b6c:	ins    DWORD PTR es:[rdi],dx
   140036b6d:	and    BYTE PTR gs:[rdi],ah
   140036b70:	and    eax,0x2773
   140036b75:	add    BYTE PTR [rax],al
   140036b77:	add    BYTE PTR [rcx+0x6e],cl
   140036b7a:	jbe    0x140036bdd
   140036b7c:	ins    BYTE PTR es:[rdi],dx
   140036b7d:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x20617461
   140036b85:	outs   dx,WORD PTR ds:[rsi]
   140036b87:	jb     0x140036ba9
   140036b89:	ins    DWORD PTR es:[rdi],dx
   140036b8a:	gs ins DWORD PTR es:[rdi],dx
   140036b8c:	(bad)  
   140036b8d:	gs jb  0x140036bb0
   140036b90:	(bad)  
   140036b91:	and    eax,0x2773
   140036b96:	add    BYTE PTR [rax],al
   140036b98:	push   rbp
   140036b99:	outs   dx,BYTE PTR ds:[rsi]
   140036b9a:	jb     0x140036c01
   140036b9c:	movsxd ebp,DWORD PTR [rdi+0x67]
   140036b9f:	outs   dx,BYTE PTR ds:[rsi]
   140036ba0:	imul   edi,DWORD PTR [rdx+0x65],0x6c662064
   140036ba7:	(bad)  
   140036ba8:	and    BYTE PTR [esi+0x61],ch
   140036bac:	ins    DWORD PTR es:[rdi],dx
   140036bad:	and    BYTE PTR gs:[rdi],ah
   140036bb0:	and    eax,0x2773
   140036bb5:	add    BYTE PTR [rax],al
   140036bb7:	add    BYTE PTR [rbp+0x78],al
   140036bba:	jo     0x140036c21
   140036bbc:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036bc0:	and    BYTE PTR [rdi],ah
   140036bc2:	pop    rbx
   140036bc3:	(bad)  
   140036bc4:	add    BYTE PTR [rax],al
   140036bc6:	add    BYTE PTR [rax],al
   140036bc8:	pop    rbx
   140036bc9:	add    BYTE PTR [rax],al
   140036bcb:	add    BYTE PTR [rbx],ah
   140036bcd:	add    BYTE PTR [rax],al
   140036bcf:	add    BYTE PTR [rbp+0x78],al
   140036bd2:	jo     0x140036c39
   140036bd4:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036bd8:	and    BYTE PTR [rsi+0x61],dh
   140036bdb:	ins    BYTE PTR es:[rdi],dx
   140036bdc:	jne    0x140036c43
   140036bde:	and    BYTE PTR [rdi+0x72],ch
   140036be1:	and    BYTE PTR [rdi],ah
   140036be3:	pop    rbp
   140036be4:	(bad)  
   140036be5:	add    BYTE PTR [rax],al
   140036be7:	add    BYTE PTR [rbp+0x78],al
   140036bea:	jo     0x140036c51
   140036bec:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036bf0:	and    BYTE PTR [rdi],ah
   140036bf2:	sub    al,0x27
   140036bf4:	and    BYTE PTR [rdi+0x72],ch
   140036bf7:	and    BYTE PTR [rdi],ah
   140036bf9:	and    eax,0x2773
   140036bfe:	add    BYTE PTR [rax],al
   140036c00:	rex.RB js 0x140036c73
   140036c03:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140036c08:	and    BYTE PTR [rdi],ah
   140036c0a:	and    esp,DWORD PTR [rdi]
   140036c0c:	add    BYTE PTR [rax],al
   140036c0e:	add    BYTE PTR [rax],al
   140036c10:	rex.RB js 0x140036c83
   140036c13:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140036c18:	and    BYTE PTR [rdi+rbp*2+0x6b],dh
   140036c1c:	outs   dx,BYTE PTR gs:[rsi]
   140036c1e:	add    BYTE PTR [rax],al
   140036c20:	rex.RB js 0x140036c93
   140036c23:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140036c28:	and    BYTE PTR [rax+0x65],ch
   140036c2b:	js     0x140036c4d
   140036c2d:	(bad)  
   140036c2e:	jns    0x140036ca4
   140036c30:	and    BYTE PTR gs:[rax],ch
   140036c33:	gs and BYTE PTR cs:[eax],dh
   140036c38:	xor    BYTE PTR [rip+0x294646],ch        # 0x1402cb284
   140036c3e:	add    BYTE PTR [rax],al
   140036c40:	rex.RX (bad) 
   140036c42:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   140036c4a:	(bad)  
   140036c4b:	jae    0x140036cc0
   140036c4d:	imul   esp,DWORD PTR [rdi+0x6e],0x6f6f6220
   140036c54:	ins    BYTE PTR es:[rdi],dx
   140036c55:	and    BYTE PTR [rcx+rbp*2+0x74],ch
   140036c59:	gs jb  0x140036cbd
   140036c5c:	ins    BYTE PTR es:[rdi],dx
   140036c5d:	and    BYTE PTR [rsi+0x61],dh
   140036c60:	ins    BYTE PTR es:[rdi],dx
   140036c61:	jne    0x140036cc8
   140036c63:	add    BYTE PTR [rax],al
   140036c65:	add    BYTE PTR [rax],al
   140036c67:	add    BYTE PTR [rcx+rbp*2+0x6e],cl
   140036c6b:	and    BYTE PTR gs:[rip+0x49203a64],ah        # 0x18923a6d6
   140036c72:	outs   dx,BYTE PTR ds:[rsi]
   140036c73:	jbe    0x140036cd6
   140036c75:	ins    BYTE PTR es:[rdi],dx
   140036c76:	imul   esp,DWORD PTR [rax+riz*1+0x76],0x65756c61
   140036c7e:	and    BYTE PTR [rdx],ah
   140036c80:	and    eax,0x2273
   140036c85:	add    BYTE PTR [rax],al
   140036c87:	add    BYTE PTR [rbp+0x6e],dl
   140036c8a:	gs js  0x140036cfd
   140036c8d:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140036c92:	and    BYTE PTR [rbp+0x6e],ah
   140036c95:	and    BYTE PTR fs:[rdi+0x66],ch
   140036c99:	and    BYTE PTR [rsi+0x69],ah
   140036c9c:	ins    BYTE PTR es:[rdi],dx
   140036c9d:	add    BYTE PTR gs:[rax],al
   140036ca0:	push   rbp
   140036ca1:	outs   dx,BYTE PTR ds:[rsi]
   140036ca2:	jb     0x140036d09
   140036ca4:	movsxd ebp,DWORD PTR [rdi+0x67]
   140036ca7:	outs   dx,BYTE PTR ds:[rsi]
   140036ca8:	imul   edi,DWORD PTR [rdx+0x65],0x79742064
   140036caf:	jo     0x140036d16
   140036cb1:	and    BYTE PTR [rdi],ah
   140036cb3:	and    eax,0x2764
   140036cb8:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140036cba:	jbe    0x140036d1d
   140036cbc:	ins    BYTE PTR es:[rdi],dx
   140036cbd:	imul   esp,DWORD PTR [rax+riz*1+0x64],0x2e617461
   140036cc5:	add    BYTE PTR [rax],al
   140036cc7:	add    BYTE PTR [rdx+0x61],al
   140036cca:	and    BYTE PTR fs:[rax+0x65],ch
   140036cce:	(bad)  
   140036ccf:	fs gs jb 0x140036d0d
   140036cd3:	and    BYTE PTR [rcx+0x6e],ch
   140036cd6:	jbe    0x140036d39
   140036cd8:	ins    BYTE PTR es:[rdi],dx
   140036cd9:	imul   esp,DWORD PTR [rax+riz*1+0x62],0x72616e69
   140036ce1:	jns    0x140036d03
   140036ce3:	ins    DWORD PTR es:[rdi],dx
   140036ce4:	(bad)  
   140036ce5:	jb     0x140036d52
   140036ce7:	gs jb  0x140036cea
   140036cea:	add    BYTE PTR [rax],al
   140036cec:	add    BYTE PTR [rax],al
   140036cee:	add    BYTE PTR [rax],al
   140036cf0:	rex.X (bad) 
   140036cf2:	and    BYTE PTR fs:[rax+0x65],ch
   140036cf6:	(bad)  
   140036cf7:	fs gs jb 0x140036d35
   140036cfb:	and    BYTE PTR [rbp+0x6e],dh
   140036cfe:	jb     0x140036d65
   140036d00:	movsxd ebp,DWORD PTR [rdi+0x67]
   140036d03:	outs   dx,BYTE PTR ds:[rsi]
   140036d04:	imul   edi,DWORD PTR [rdx+0x65],0x6e652064
   140036d0b:	movsxd ebp,DWORD PTR [rdi+0x64]
   140036d0e:	imul   ebp,DWORD PTR [rsi+0x67],0x646920
   140036d15:	add    BYTE PTR [rax],al
   140036d17:	add    BYTE PTR [rdx+0x61],al
   140036d1a:	and    BYTE PTR fs:[rax+0x65],ch
   140036d1e:	(bad)  
   140036d1f:	fs gs jb 0x140036d5d
   140036d23:	and    BYTE PTR [rcx+0x6e],ch
   140036d26:	jbe    0x140036d89
   140036d28:	ins    BYTE PTR es:[rdi],dx
   140036d29:	imul   esp,DWORD PTR [rax+riz*1+0x63],0x72706d6f
   140036d31:	gs jae 0x140036da7
   140036d34:	imul   ebp,DWORD PTR [rdi+0x6e],0x61656820
   140036d3b:	fs gs jb 0x140036d3f
   140036d3f:	add    BYTE PTR [rbp+riz*2+0x63],al
   140036d43:	outs   dx,DWORD PTR ds:[rsi]
   140036d44:	ins    DWORD PTR es:[rdi],dx
   140036d45:	jo     0x140036db9
   140036d47:	gs jae 0x140036dbd
   140036d4a:	imul   ebp,DWORD PTR [rdi+0x6e],0x69616620
   140036d51:	ins    BYTE PTR es:[rdi],dx
   140036d52:	jne    0x140036dc6
   140036d54:	add    BYTE PTR gs:[rax],al
   140036d57:	add    BYTE PTR [rdi+0x5f],bl
   140036d5a:	je     0x140036dc1
   140036d5c:	ins    DWORD PTR es:[rdi],dx
   140036d5d:	jo     0x140036dbe
   140036d5f:	jne    0x140036dcf
   140036d61:	jae    0x140036dc8
   140036d63:	jb     0x140036dce
   140036d65:	(bad)  
   140036d66:	ins    BYTE PTR es:[rdi],dx
   140036d67:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140036d6e:	pop    rdi
   140036d6f:	ins    DWORD PTR es:[rdi],dx
   140036d70:	gs ins DWORD PTR es:[rdi],dx
   140036d72:	(bad)  
   140036d73:	gs jb  0x140036dd5
   140036d76:	pop    rdi
   140036d77:	add    BYTE PTR [rcx],ah
   140036d79:	xor    eax,ecx
   140036d7b:	sub    al,0x4f
   140036d7d:	icebp  
   140036d7e:	ss rex.WX stos QWORD PTR es:[rdi],rax
   140036d81:	mov    eax,0x79c2f462
   140036d86:	xchg   esi,eax
   140036d87:	mov    DWORD PTR [rbp+0x5a],eax
   140036d8a:	adc    bh,BYTE PTR [rsi-0x7d]
   140036d8d:	cmp    eax,0x92b24043
   140036d92:	sahf   
   140036d93:	and    al,0xf8
   140036d95:	out    dx,eax
   140036d96:	(bad)  
   140036d97:	mov    ah,0xd8
   140036d99:	or     BYTE PTR [rcx+0x193a9319],0x49
   140036da0:	mov    ah,0xc6
   140036da2:	fstp   QWORD PTR [rdi]
   140036da4:	mov    al,0x7a
   140036da6:	cmp    cl,BYTE PTR [rbx+0x7b]
   140036da9:	jge    0x140036e06
   140036dab:	pop    rbp
   140036dac:	sub    BYTE PTR [rcx],ch
   140036dae:	cmp    eax,0x9202c26
   140036db3:	or     ah,BYTE PTR [rdi]
   140036db5:	and    ch,BYTE PTR [rdx]
   140036db7:	cmp    eax,DWORD PTR [rax]
   140036db9:	add    BYTE PTR [rax],al
   140036dbb:	add    BYTE PTR [rax],al
   140036dbd:	add    BYTE PTR [rax],al
   140036dbf:	add    BYTE PTR [rbp+0x6e],dl
   140036dc2:	jae    0x140036e29
   140036dc4:	jb     0x140036e2f
   140036dc6:	(bad)  
   140036dc7:	ins    BYTE PTR es:[rdi],dx
   140036dc8:	imul   edi,DWORD PTR [rdx+0x61],0x6e6f6974
   140036dcf:	and    BYTE PTR [rbp+0x72],al
   140036dd2:	jb     0x140036e43
   140036dd4:	jb     0x140036e10
   140036dd6:	and    BYTE PTR [rip+0xa73],ah        # 0x14003784f
   140036ddc:	jae    0x140036e41
   140036dde:	push   0x616d65
   140036de3:	add    BYTE PTR [rax],al
   140036de5:	add    BYTE PTR [rax],al
   140036de7:	add    BYTE PTR [rdi+0x5f],bl
   140036dea:	outs   dx,DWORD PTR ds:[rsi]
   140036deb:	ins    BYTE PTR es:[rdi],dx
   140036dec:	fs jae 0x140036e52
   140036def:	push   0x5f616d65
   140036df4:	outs   dx,DWORD PTR ds:[rsi]
   140036df5:	(bad)  
   140036df6:	push   0x65
   140036df8:	movsxd esi,DWORD PTR [rdi+rbx*2+0x6e]
   140036dfc:	(bad)  
   140036dfd:	ins    DWORD PTR es:[rdi],dx
   140036dfe:	add    BYTE PTR gs:[rbp+0x78],al
   140036e02:	jo     0x140036e69
   140036e04:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036e08:	and    BYTE PTR [rbp*2+0x65626d65],bh
   140036e0f:	jb     0x140036e31
   140036e11:	outs   dx,BYTE PTR ds:[rsi]
   140036e12:	(bad)  
   140036e13:	ins    DWORD PTR es:[rdi],dx
   140036e14:	gs and BYTE PTR ds:[rcx+0x66],ah
   140036e19:	je     0x140036e80
   140036e1b:	jb     0x140036e3d
   140036e1d:	je     0x140036e98
   140036e1f:	jo     0x140036e86
   140036e21:	add    BYTE PTR [rax],al
   140036e23:	add    BYTE PTR [rax],al
   140036e25:	add    BYTE PTR [rax],al
   140036e27:	add    BYTE PTR [rbp+0x78],al
   140036e2a:	jo     0x140036e91
   140036e2c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036e30:	and    BYTE PTR [rdx],ah
   140036e32:	cmp    eax,0x74666122
   140036e37:	gs jb  0x140036e5a
   140036e3a:	ins    DWORD PTR es:[rdi],dx
   140036e3b:	gs ins DWORD PTR es:[rdi],dx
   140036e3d:	(bad)  
   140036e3e:	gs jb  0x140036e61
   140036e41:	(bad)  
   140036e42:	and    eax,0x2773
   140036e47:	add    BYTE PTR [rbp+0x78],al
   140036e4a:	jo     0x140036eb1
   140036e4c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036e50:	and    BYTE PTR [rcx+rdi*2+0x70],dh
   140036e54:	and    BYTE PTR gs:[rdi+0x66],ch
   140036e58:	and    BYTE PTR [rsi+0x65],ch
   140036e5b:	js     0x140036ed1
   140036e5d:	and    BYTE PTR [rbp+0x65],ch
   140036e60:	ins    DWORD PTR es:[rdi],dx
   140036e61:	(bad)  
   140036e62:	gs jb  0x140036e65
   140036e65:	add    BYTE PTR [rax],al
   140036e67:	add    BYTE PTR [rbp+0x78],al
   140036e6a:	jo     0x140036ed1
   140036e6c:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036e70:	and    BYTE PTR [rbx+0x5d],bl
   140036e73:	add    BYTE PTR [rax],ch
   140036e75:	add    BYTE PTR [rax],al
   140036e77:	add    BYTE PTR [rcx],ch
   140036e79:	add    BYTE PTR [rax],al
   140036e7b:	add    BYTE PTR [rax],al
   140036e7d:	add    BYTE PTR [rax],al
   140036e7f:	add    BYTE PTR [rbp+0x78],al
   140036e82:	jo     0x140036ee9
   140036e84:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036e88:	and    BYTE PTR [rax],ch
   140036e8a:	and    BYTE PTR [rbx+riz*2],bh
   140036e8d:	outs   dx,DWORD PTR ds:[rsi]
   140036e8e:	jne    0x140036efe
   140036e90:	je     0x140036ed0
   140036e92:	and    BYTE PTR [rcx],ch
   140036e94:	add    BYTE PTR [rax],al
   140036e96:	add    BYTE PTR [rax],al
   140036e98:	sub    al,BYTE PTR [rax]
   140036e9a:	add    BYTE PTR [rax],al
   140036e9c:	add    BYTE PTR es:[rax],al
   140036e9f:	add    BYTE PTR [rsi+0x55],cl
   140036ea2:	rex.WR
   140036ea3:	rex.WR add BYTE PTR [rax],r8b
   140036ea6:	add    BYTE PTR [rax],al
   140036ea8:	rex.RB js 0x140036f1b
   140036eab:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140036eb0:	and    BYTE PTR [rdi],ah
   140036eb2:	pop    rbx
   140036eb3:	(bad)  
   140036eb4:	and    BYTE PTR [rdi+0x72],ch
   140036eb7:	and    BYTE PTR [rdi],ah
   140036eb9:	sub    BYTE PTR [rdi],ah
   140036ebb:	add    BYTE PTR [rax],al
   140036ebd:	add    BYTE PTR [rax],al
   140036ebf:	add    BYTE PTR [rbp+0x78],al
   140036ec2:	jo     0x140036f29
   140036ec4:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140036ec8:	and    BYTE PTR [rdi],ah
   140036eca:	es (bad) 
   140036ecc:	and    BYTE PTR [rcx+0x6e],ah
   140036ecf:	and    BYTE PTR fs:[rcx+0x6e],ch
   140036ed3:	jae    0x140036f49
   140036ed5:	(bad)  
   140036ed6:	outs   dx,BYTE PTR ds:[rsi]
   140036ed7:	movsxd esp,DWORD PTR [rbp+0x20]
   140036eda:	outs   dx,BYTE PTR ds:[rsi]
   140036edb:	(bad)  
   140036edc:	ins    DWORD PTR es:[rdi],dx
   140036edd:	and    BYTE PTR gs:[rdi+0x72],ch
   140036ee1:	and    BYTE PTR [rdi],ah
   140036ee3:	rex.WRX push rbp
   140036ee5:	rex.WR
   140036ee6:	rex.WR (bad) 
	...
   140036ef0:	imul   r13,QWORD PTR [rsi+0x65],0x3a642520
   140036ef8:	and    BYTE PTR [rcx+0x6e],cl
   140036efb:	jbe    0x140036f5e
   140036efd:	ins    BYTE PTR es:[rdi],dx
   140036efe:	imul   esp,DWORD PTR [rax+riz*1+0x6c],0x72657469
   140036f06:	(bad)  
   140036f07:	ins    BYTE PTR es:[rdi],dx
   140036f08:	and    BYTE PTR [rsi+0x61],dh
   140036f0b:	ins    BYTE PTR es:[rdi],dx
   140036f0c:	jne    0x140036f73
   140036f0e:	and    BYTE PTR [rdx],ah
   140036f10:	and    eax,0x2273
   140036f15:	add    BYTE PTR [rax],al
   140036f17:	add    BYTE PTR [rbx+0x79],al
   140036f1a:	movsxd ebp,DWORD PTR [rbp+riz*2+0x20]
   140036f1e:	outs   dx,DWORD PTR ds:[rsi]
   140036f1f:	jb     0x140036f41
   140036f21:	imul   esp,DWORD PTR fs:[rcx+0x6d],0x20646e6f
   140036f29:	outs   dx,DWORD PTR fs:[rsi]
   140036f2b:	jne    0x140036f8f
   140036f2d:	ins    BYTE PTR es:[rdi],dx
   140036f2e:	gs sub eax,0x65666572
   140036f34:	jb     0x140036f9b
   140036f36:	outs   dx,BYTE PTR ds:[rsi]
   140036f37:	movsxd esp,DWORD PTR [rbp+0x20]
   140036f3a:	je     0x140036fab
   140036f3c:	and    BYTE PTR [rdi],ah
   140036f3e:	and    eax,0x2773
   140036f43:	add    BYTE PTR [rax],al
   140036f45:	add    BYTE PTR [rax],al
   140036f47:	add    BYTE PTR [rbp+0x6e],dl
   140036f4a:	jb     0x140036fb1
   140036f4c:	jae    0x140036fbd
   140036f4e:	ins    BYTE PTR es:[rdi],dx
   140036f4f:	jbe    0x140036fb6
   140036f51:	and    BYTE PTR fs:[rdi+0x62],ch
   140036f55:	push   0x65
   140036f57:	movsxd esi,DWORD PTR [rax+riz*1+0x72]
   140036f5b:	gs data16 gs jb 0x140036fc5
   140036f60:	outs   dx,BYTE PTR ds:[rsi]
   140036f61:	movsxd esp,DWORD PTR [rbp+0x20]
   140036f64:	(bad)  
   140036f65:	and    eax,0x2773
   140036f6a:	add    BYTE PTR [rax],al
   140036f6c:	and    eax,0x54000064
   140036f71:	jb     0x140036fec
   140036f73:	imul   ebp,DWORD PTR [rsi+0x67],0x206f7420
   140036f7a:	jb     0x140036fe1
   140036f7c:	imul   esi,DWORD PTR [ebx+0x74],0x4b207265
   140036f84:	push   rsi
   140036f85:	xor    esp,DWORD PTR [rax]
   140036f87:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140036f8a:	jbe    0x140036ff1
   140036f8c:	jb     0x140037001
   140036f8e:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f6f7420
   140036f95:	and    BYTE PTR [rcx+riz*2+0x74],ch
   140036f99:	and    BYTE PTR gs:[rax],ch
   140036f9c:	data16 jb 0x14003700e
   140036f9f:	ins    DWORD PTR es:[rdi],dx
   140036fa0:	and    BYTE PTR [rdi],ah
   140036fa2:	and    eax,0x74202773
   140036fa7:	outs   dx,DWORD PTR ds:[rsi]
   140036fa8:	and    BYTE PTR [rdi],ah
   140036faa:	and    eax,0x292773
   140036faf:	add    BYTE PTR [rbx+0x4b],al
   140036fb2:	push   rsi
   140036fb3:	xor    eax,DWORD PTR [rsi+0x6f]
   140036fb6:	jb     0x140037025
   140036fb8:	(bad)  
   140036fb9:	je     0x140037008
   140036fbb:	(bad)  
   140036fbc:	outs   dx,BYTE PTR ds:[rsi]
   140036fbd:	(bad)  
   140036fbe:	addr32 gs jb 0x140036ffc
   140036fc2:	cmp    dl,BYTE PTR [rdx+0x65]
   140036fc5:	imul   esi,DWORD PTR [ebx+0x74],0x6f467265
   140036fcd:	jb     0x14003703c
   140036fcf:	(bad)  
   140036fd0:	je     0x140037015
   140036fd2:	outs   dx,DWORD PTR ds:[rsi]
   140036fd3:	outs   dx,BYTE PTR ds:[rsi]
   140036fd4:	jbe    0x14003703b
   140036fd6:	jb     0x14003704b
   140036fd8:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140036fdf:	add    BYTE PTR [rbx+0x3a],ah
   140036fe2:	pop    rsp
   140036fe3:	(bad)  
   140036fe4:	jne    0x14003704f
   140036fe6:	ins    BYTE PTR es:[rdi],dx
   140036fe7:	fs jae 0x140037056
   140036fea:	(bad)  
   140036feb:	jbe    0x140037052
   140036fed:	pop    rsp
   140036fee:	jae    0x14003705f
   140036ff0:	jne    0x140037064
   140036ff2:	movsxd esp,DWORD PTR [rbp+0x32]
   140036ff5:	pop    rdi
   140036ff6:	outs   dx,DWORD PTR fs:[rsi]
   140036ff8:	je     0x14003705b
   140036ffa:	pop    rdi
   140036ffb:	jb     0x140037062
   140036ffd:	ins    BYTE PTR es:[rdi],dx
   140036ffe:	pop    rdi
   140036fff:	ja     0x14003706a
   140037001:	outs   dx,BYTE PTR ds:[rsi]
   140037002:	ss xor al,0x5c
   140037005:	(bad)  
   140037006:	jne    0x140037071
   140037008:	ins    BYTE PTR es:[rdi],dx
   140037009:	fs pop rsp
   14003700b:	jae    0x14003707f
   14003700d:	movsxd ebx,DWORD PTR [rbx+rbp*2+0x76]
   140037011:	xor    ebp,DWORD PTR [rcx+rbp*2+0x62]
   140037015:	pop    rsp
   140037016:	imul   esi,DWORD PTR [rsi+0x33],0x66
   14003701a:	outs   dx,DWORD PTR ds:[rsi]
   14003701b:	jb     0x14003708a
   14003701d:	(bad)  
   14003701e:	je     0x14003707f
   140037020:	ins    DWORD PTR es:[rdi],dx
   140037021:	(bad)  
   140037022:	outs   dx,BYTE PTR ds:[rsi]
   140037023:	(bad)  
   140037024:	addr32 gs jb 0x140037056
   140037028:	movsxd esi,DWORD PTR [rax+0x70]
   14003702b:	add    BYTE PTR [rax],al
   14003702d:	add    BYTE PTR [rax],al
   14003702f:	add    BYTE PTR [rbx+0x61],al
   140037032:	outs   dx,BYTE PTR ds:[rsi]
   140037033:	outs   dx,BYTE PTR ds:[rsi]
   140037034:	outs   dx,DWORD PTR ds:[rsi]
   140037035:	je     0x140037057
   140037037:	jb     0x14003709e
   140037039:	imul   esi,DWORD PTR [ebx+0x74],0x73207265
   140037041:	(bad)  
   140037042:	ins    DWORD PTR es:[rdi],dx
   140037043:	and    BYTE PTR gs:[rsi+0x6f],ah
   140037047:	jb     0x1400370b6
   140037049:	(bad)  
   14003704a:	je     0x14003706c
   14003704c:	data16 jb 0x1400370be
   14003704f:	ins    DWORD PTR es:[rdi],dx
   140037050:	(bad)  
   140037051:	je     0x1400370c2
   140037053:	and    BYTE PTR [rcx+0x20],ah
   140037056:	rex.WXB push r14
   140037058:	xor    esp,DWORD PTR [rax]
   14003705a:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003705d:	jbe    0x1400370c4
   14003705f:	jb     0x1400370d4
   140037061:	imul   ebp,DWORD PTR [rdi+0x6e],0x72662820
   140037068:	outs   dx,DWORD PTR ds:[rsi]
   140037069:	ins    DWORD PTR es:[rdi],dx
   14003706a:	and    BYTE PTR [rdi],ah
   14003706c:	and    eax,0x74202773
   140037071:	outs   dx,DWORD PTR ds:[rsi]
   140037072:	and    BYTE PTR [rdi],ah
   140037074:	and    eax,0x292773
   140037079:	add    BYTE PTR [rax],al
   14003707b:	add    BYTE PTR [rax],al
   14003707d:	add    BYTE PTR [rax],al
   14003707f:	add    BYTE PTR [rdi+rbp*2+0x75],al
   140037083:	(bad)  
   140037084:	ins    BYTE PTR es:[rdi],dx
   140037085:	gs sub eax,0x69676572
   14003708b:	jae    0x140037101
   14003708d:	gs jb  0x1400370b0
   140037090:	outs   dx,DWORD PTR ds:[rsi]
   140037091:	data16 and BYTE PTR [rbx+0x56],cl
   140037095:	xor    esp,DWORD PTR [rax]
   140037097:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003709a:	jbe    0x140037101
   14003709c:	jb     0x140037111
   14003709e:	imul   ebp,DWORD PTR [rdi+0x6e],0x72662820
   1400370a5:	outs   dx,DWORD PTR ds:[rsi]
   1400370a6:	ins    DWORD PTR es:[rdi],dx
   1400370a7:	and    BYTE PTR [rdi],ah
   1400370a9:	and    eax,0x74202773
   1400370ae:	outs   dx,DWORD PTR ds:[rsi]
   1400370af:	and    BYTE PTR [rdi],ah
   1400370b1:	and    eax,0x292773
   1400370b6:	add    BYTE PTR [rax],al
   1400370b8:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400370ba:	and    BYTE PTR [rsi+0x61],dh
   1400370bd:	ins    BYTE PTR es:[rdi],dx
   1400370be:	imul   esp,DWORD PTR [rax+riz*1+0x66],0x616d726f
   1400370c6:	je     0x1400370e8
   1400370c8:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400370cb:	jbe    0x140037132
   1400370cd:	jb     0x140037142
   1400370cf:	imul   ebp,DWORD PTR [rdi+0x6e],0x6f726620
   1400370d6:	ins    DWORD PTR es:[rdi],dx
   1400370d7:	and    BYTE PTR [rdi],ah
   1400370d9:	and    eax,0x74202773
   1400370de:	outs   dx,DWORD PTR ds:[rsi]
   1400370df:	and    BYTE PTR [rdi],ah
   1400370e1:	and    eax,0x2773
   1400370e6:	add    BYTE PTR [rax],al
   1400370e8:	test   DWORD PTR [rsi+0x4073f944],eax
   1400370ee:	pop    QWORD PTR [rcx+rbx*4+0x41]
   1400370f2:	test   DWORD PTR [rcx+0x22c25b8b],edi
   1400370f8:	ins    DWORD PTR es:[rdi],dx
   1400370f9:	outs   dx,DWORD PTR ds:[rsi]
   1400370fa:	fs gs ins BYTE PTR es:[rdi],dx
   1400370fd:	outs   dx,DWORD PTR fs:[rsi]
   1400370ff:	movsxd esi,DWORD PTR [rax]
   140037101:	add    BYTE PTR [rax],al
   140037103:	add    BYTE PTR [rax],al
   140037105:	add    BYTE PTR [rax],al
   140037107:	add    BYTE PTR [rdx-0x46a735a3],dh
   14003710d:	outs   dx,BYTE PTR ds:[rsi]
   14003710e:	movabs ds:0x334170220c6e9048,al
   140037117:	push   rcx
   140037118:	ins    DWORD PTR es:[rdi],dx
   140037119:	outs   dx,DWORD PTR ds:[rsi]
   14003711a:	fs gs ins BYTE PTR es:[rdi],dx
   14003711d:	outs   dx,DWORD PTR fs:[rsi]
   14003711f:	movsxd esi,DWORD PTR [rcx]
   140037121:	add    BYTE PTR [rax],al
   140037123:	add    BYTE PTR [rax],al
   140037125:	add    BYTE PTR [rax],al
   140037127:	add    BYTE PTR [rbp+0x57],dh
   14003712a:	adc    ch,dh
   14003712c:	xchg   esp,eax
   14003712d:	(bad)  
   14003712e:	clc    
   14003712f:	mov    rdi,gs
   140037132:	rex.WRXB cmp al,0xe7
   140037135:	pop    rdi
   140037136:	in     al,dx
   140037137:	pop    rsp
   140037138:	ins    DWORD PTR es:[rdi],dx
   140037139:	outs   dx,DWORD PTR ds:[rsi]
   14003713a:	fs gs ins BYTE PTR es:[rdi],dx
   14003713d:	outs   dx,DWORD PTR fs:[rsi]
   14003713f:	movsxd esi,DWORD PTR [rdx]
   140037141:	add    BYTE PTR [rax],al
   140037143:	add    BYTE PTR [rax],al
   140037145:	add    BYTE PTR [rax],al
   140037147:	add    BYTE PTR [rdx+rbx*8+0x562eac48],ch
   14003714e:	or     DWORD PTR [rsi-0x6b],0xffffff96
   140037152:	xor    bl,bh
   140037154:	push   rcx
   140037155:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140037156:	mov    DWORD PTR [rdi+0x6d],eax
   140037159:	outs   dx,DWORD PTR ds:[rsi]
   14003715a:	fs gs ins BYTE PTR es:[rdi],dx
   14003715d:	outs   dx,DWORD PTR fs:[rsi]
   14003715f:	movsxd esi,DWORD PTR [rbx]
   140037161:	add    BYTE PTR [rax],al
   140037163:	add    BYTE PTR [rax],al
   140037165:	add    BYTE PTR [rax],al
   140037167:	add    ah,ah
   140037169:	(bad)  
   14003716a:	je     0x1400371bd
   14003716c:	cli    
   14003716d:	mov    BYTE PTR [rcx+rax*2],al
   140037170:	mov    cl,0xb9
   140037172:	mov    ecx,0xc9e509f3
   140037177:	mov    cl,0x6d
   140037179:	outs   dx,DWORD PTR ds:[rsi]
   14003717a:	fs gs ins BYTE PTR es:[rdi],dx
   14003717d:	outs   dx,DWORD PTR fs:[rsi]
   14003717f:	movsxd esi,DWORD PTR [rax+rax*1]
   140037182:	add    BYTE PTR [rax],al
   140037184:	add    BYTE PTR [rax],al
   140037186:	add    BYTE PTR [rax],al
   140037188:	(bad)  
   140037189:	xchg   BYTE PTR [rbp-0x4181175e],al
   14003718f:	rex.RB and r11d,0xcf94f93e
   140037196:	ss ds ins DWORD PTR es:[rdi],dx
   140037199:	outs   dx,DWORD PTR ds:[rsi]
   14003719a:	fs gs ins BYTE PTR es:[rdi],dx
   14003719d:	outs   dx,DWORD PTR fs:[rsi]
   14003719f:	movsxd esi,DWORD PTR [rip+0x0]        # 0x1400371a5
   1400371a5:	add    BYTE PTR [rax],al
   1400371a7:	add    BYTE PTR [rcx+0x56],al
   1400371aa:	sbb    al,0xed
   1400371ac:	(bad)  
   1400371ad:	push   rsp
   1400371ae:	mov    eax,0x8a4ab141
   1400371b3:	js     0x1400371ae
   1400371b5:	push   rsi
   1400371b6:	ret    0x6d61
   1400371b9:	outs   dx,DWORD PTR ds:[rsi]
   1400371ba:	fs gs ins BYTE PTR es:[rdi],dx
   1400371bd:	outs   dx,DWORD PTR fs:[rsi]
   1400371bf:	movsxd esi,DWORD PTR [rsi]
   1400371c1:	add    BYTE PTR [rax],al
   1400371c3:	add    BYTE PTR [rax],al
   1400371c5:	add    BYTE PTR [rax],al
   1400371c7:	add    BYTE PTR [rax-0x19346ee5],bl
   1400371cd:	rex.WX (bad) 
   1400371cf:	rex.WRB xchg r14b,r10b
   1400371d2:	sti    
   1400371d3:	(bad)  
   1400371d4:	push   rcx
   1400371d5:	adc    al,0xe
   1400371d7:	or     eax,0x65646f6d
   1400371dc:	ins    BYTE PTR es:[rdi],dx
   1400371dd:	outs   dx,DWORD PTR fs:[rsi]
   1400371df:	movsxd esi,DWORD PTR [rdi]
   1400371e1:	add    BYTE PTR [rax],al
   1400371e3:	add    BYTE PTR [rax],al
   1400371e5:	add    BYTE PTR [rax],al
   1400371e7:	add    BYTE PTR [rbx-0x4b],bh
   1400371ea:	mov    dl,0x75
   1400371ec:	(bad)
   1400371ef:	rex.RB movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400371f1:	jnp    0x14003724c
   1400371f3:	rex.WB
   1400371f4:	rex.WRX (bad) 
   1400371f6:	add    DWORD PTR [rip+0x65646f6d],0x6c        # 0x1a567e16a
   1400371fd:	outs   dx,DWORD PTR fs:[rsi]
   1400371ff:	movsxd edi,DWORD PTR [rax]
   140037201:	add    BYTE PTR [rax],al
   140037203:	add    BYTE PTR [rax],al
   140037205:	add    BYTE PTR [rax],al
   140037207:	add    BYTE PTR [rdx+0x65],dl
   14003720a:	outs   dx,BYTE PTR ds:[rsi]
   14003720b:	fs gs jb 0x14003725c
   14003720f:	gs jae 0x14003727a
   140037212:	imul   r14,QWORD PTR [rbx+0x74],0x6e410000
   14003721a:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   140037221:	imul   r14,QWORD PTR [rbx+0x74],0x48000000
   140037229:	imul   esi,DWORD PTR [rdx+riz*2+0x6f],0x74655378
   140037231:	imul   r14,QWORD PTR [rbx+0x74],0x41000000
   140037239:	je     0x1400372af
   14003723b:	(bad)  
   14003723c:	movsxd ebp,DWORD PTR [rax+0x6d]
   14003723f:	outs   dx,BYTE PTR gs:[rsi]
   140037241:	je     0x14003728f
   140037243:	imul   esi,DWORD PTR [rbx+0x74],0x68500000
   14003724a:	jns    0x1400372bf
   14003724c:	imul   esp,DWORD PTR [rbx+0x73],0x70616853
   140037253:	imul   r14,QWORD PTR gs:[rbx+0x74],0x0
   14003725c:	add    BYTE PTR [rax],al
   14003725e:	add    BYTE PTR [rax],al
   140037260:	rex.WRB (bad) 
   140037262:	je     0x1400372c9
   140037264:	jb     0x1400372cf
   140037266:	(bad)  
   140037267:	ins    BYTE PTR es:[rdi],dx
   140037268:	rex.RXB jb 0x1400372da
   14003726b:	jne    0x1400372dd
   14003726d:	imul   r14,QWORD PTR [rbx+0x74],0x0
   140037275:	add    BYTE PTR [rax],al
   140037277:	add    BYTE PTR [rdx+0x6f],al
   14003727a:	fs jns 0x1400372c4
   14003727d:	jb     0x1400372ee
   14003727f:	jne    0x1400372f1
   140037281:	imul   r14,QWORD PTR [rbx+0x74],0x53000000
   140037289:	imul   esp,DWORD PTR [rbp+0x6c],0x65
   14003728d:	je     0x1400372fe
   14003728f:	outs   dx,BYTE PTR ds:[rsi]
	...
   140037298:	rex.RXB (bad) 
   14003729a:	ins    DWORD PTR es:[rdi],dx
   14003729b:	gs rex.R (bad) 
   14003729e:	je     0x140037301
   1400372a0:	imul   r14,QWORD PTR [rbx+0x74],0x0
   1400372a8:	rex.XB push 0x44646c69
   1400372ae:	outs   dx,DWORD PTR ds:[rsi]
   1400372af:	movsxd esi,DWORD PTR [rbp+0x6d]
   1400372b2:	outs   dx,BYTE PTR gs:[rsi]
   1400372b4:	je     0x140037302
   1400372b6:	imul   esi,DWORD PTR [rbx+0x74],0x6e000000
   1400372bd:	(bad)  
   1400372be:	ins    DWORD PTR es:[rdi],dx
   1400372bf:	add    BYTE PTR gs:[rax],al
   1400372c2:	add    BYTE PTR [rax],al
   1400372c4:	add    BYTE PTR [rax],al
   1400372c6:	add    BYTE PTR [rax],al
   1400372c8:	rex.RXB
   1400372c9:	outs   dx,BYTE PTR gs:[rsi]
   1400372cb:	gs jb  0x140037337
   1400372ce:	movsxd eax,DWORD PTR [rdi+0x61]
   1400372d1:	ins    DWORD PTR es:[rdi],dx
   1400372d2:	gs rex.WXB
   1400372d4:	gs jns 0x14003734a
   1400372d7:	add    BYTE PTR [rdx+0x61],dl
   1400372da:	ja     0x140037323
   1400372dc:	(bad)  
   1400372dd:	ins    DWORD PTR es:[rdi],dx
   1400372de:	gs rex.WXB
   1400372e0:	gs jns 0x140037356
   1400372e3:	add    BYTE PTR [rax],al
   1400372e5:	add    BYTE PTR [rax],al
   1400372e7:	add    BYTE PTR [rdx+0x6f],dh
   1400372ea:	outs   dx,DWORD PTR ds:[rsi]
   1400372eb:	je     0x14003733b
   1400372ed:	outs   dx,DWORD PTR ds:[rsi]
   1400372ee:	fs add BYTE PTR gs:[rax],al
   1400372f2:	add    BYTE PTR [rax],al
   1400372f4:	add    BYTE PTR [rax],al
   1400372f6:	add    BYTE PTR [rax],al
   1400372f8:	movsxd ebp,DWORD PTR [rax+0x69]
   1400372fb:	ins    BYTE PTR es:[rdi],dx
   1400372fc:	fs jb  0x140037364
   1400372ff:	outs   dx,BYTE PTR ds:[rsi]
	...
   140037308:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003730a:	ins    DWORD PTR es:[rdi],dx
   14003730b:	ins    DWORD PTR es:[rdi],dx
   14003730c:	(bad)  
   14003730d:	outs   dx,BYTE PTR ds:[rsi]
   14003730e:	fs push rax
   140037310:	jb     0x140037381
   140037312:	movsxd esp,DWORD PTR [rbp+0x64]
   140037315:	jne    0x140037389
   140037317:	add    BYTE PTR gs:[rax],al
   14003731a:	add    BYTE PTR [rax],al
   14003731c:	add    BYTE PTR [rax],al
   14003731e:	add    BYTE PTR [rax],al
   140037320:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140037322:	ins    DWORD PTR es:[rdi],dx
   140037323:	ins    DWORD PTR es:[rdi],dx
   140037324:	(bad)  
   140037325:	outs   dx,BYTE PTR ds:[rsi]
   140037326:	fs push rax
   140037328:	jb     0x140037399
   14003732a:	movsxd esp,DWORD PTR [rbp+0x64]
   14003732d:	jne    0x1400373a1
   14003732f:	imul   r14,QWORD PTR gs:[rbx+0x74],0x0
   140037338:	push   rax
   140037339:	push   0x63697379
   14003733e:	jae    0x140037386
   140037340:	imul   ebp,DWORD PTR [rbp+riz*2+0x52],0x72656665
   140037348:	outs   dx,BYTE PTR gs:[rsi]
   14003734a:	movsxd esp,DWORD PTR [rbp+0x0]
   14003734d:	add    BYTE PTR [rax],al
   14003734f:	add    BYTE PTR [rdx+0x61],al
   140037352:	jae    0x1400373b9
   140037354:	push   rax
   140037355:	push   0x63697379
   14003735a:	jae    0x1400373af
   14003735c:	push   0x657061
   140037361:	add    BYTE PTR [rax],al
   140037363:	add    BYTE PTR [rax],al
   140037365:	add    BYTE PTR [rax],al
   140037367:	add    BYTE PTR [rax+0x68],dl
   14003736a:	jns    0x1400373df
   14003736c:	imul   esp,DWORD PTR [rbx+0x73],0x70616853
   140037373:	gs rex.XB (bad) 
   140037376:	jo     0x1400373eb
   140037378:	jne    0x1400373e6
   14003737a:	add    BYTE PTR gs:[rax],al
   14003737d:	add    BYTE PTR [rax],al
   14003737f:	add    BYTE PTR [rax+0x68],dl
   140037382:	jns    0x1400373f7
   140037384:	imul   esp,DWORD PTR [rbx+0x73],0x70616853
   14003738b:	gs rex.W jne 0x1400373fb
   14003738f:	ins    BYTE PTR es:[rdi],dx
	...
   140037398:	push   rax
   140037399:	push   0x63697379
   14003739e:	jae    0x1400373f3
   1400373a0:	push   0x4d657061
   1400373a5:	gs jae 0x140037410
	...
   1400373b0:	push   rax
   1400373b1:	push   0x63697379
   1400373b6:	jae    0x14003740b
   1400373b8:	push   0x53657061
   1400373bd:	jo     0x140037427
   1400373bf:	gs jb  0x140037427
   1400373c2:	add    BYTE PTR [rax],al
   1400373c4:	add    BYTE PTR [rax],al
   1400373c6:	add    BYTE PTR [rax],al
   1400373c8:	jae    0x14003743f
   1400373ca:	jb     0x140037432
   1400373cc:	(bad)  
   1400373cd:	movsxd esp,DWORD PTR [rbp+0x5f]
   1400373d0:	jo     0x140037444
   1400373d2:	outs   dx,DWORD PTR ds:[rsi]
   1400373d3:	jo     0x1400373d5
   1400373d5:	add    BYTE PTR [rax],al
   1400373d7:	add    BYTE PTR [rbp+riz*2+0x66],ah
   1400373db:	(bad)  
   1400373dc:	jne    0x14003744a
   1400373de:	je     0x1400373e0
   1400373e0:	movsxd ebp,DWORD PTR [rdi+0x6c]
   1400373e3:	ins    BYTE PTR es:[rdi],dx
   1400373e4:	imul   esi,DWORD PTR [rbx+0x69],0x705f6e6f
   1400373eb:	jb     0x14003745c
   1400373ed:	jo     0x1400373ef
   1400373ef:	add    BYTE PTR [rcx+0x6e],al
   1400373f2:	imul   ebp,DWORD PTR [rbp+0x61],0x6e6f6974
   1400373f9:	add    BYTE PTR [rax],al
   1400373fb:	add    BYTE PTR [rax],al
   1400373fd:	add    BYTE PTR [rax],al
   1400373ff:	add    BYTE PTR [rcx+0x6e],al
   140037402:	imul   ebp,DWORD PTR [rbp+0x46],0x656c69
   140037409:	add    BYTE PTR [rax],al
   14003740b:	add    BYTE PTR [rdi+rbp*2+0x6f],ch
   14003740f:	jo     0x140037411
   140037411:	add    BYTE PTR [rax],al
   140037413:	add    BYTE PTR [rax],al
   140037415:	add    BYTE PTR [rax],al
   140037417:	add    BYTE PTR [rdi+rbp*2+0x6f],ch
   14003741b:	jo     0x140037486
   14003741d:	outs   dx,BYTE PTR ds:[rsi]
   14003741e:	add    BYTE PTR [eax+0x68],dl
   140037422:	jns    0x140037497
   140037424:	imul   esp,DWORD PTR [rbx+0x73],0x656c6946
   14003742b:	add    BYTE PTR [rax],al
   14003742d:	add    BYTE PTR [rax],al
   14003742f:	add    BYTE PTR [rbx+0x65],dl
   140037432:	jno    0x1400374a9
   140037434:	outs   dx,BYTE PTR gs:[rsi]
   140037436:	movsxd esp,DWORD PTR [rbp+0x4d]
   140037439:	(bad)  
   14003743a:	jb     0x1400374a7
   14003743c:	jne    0x1400374ae
   14003743e:	add    BYTE PTR [rax],al
   140037440:	rex.B outs dx,BYTE PTR ds:[rsi]
   140037442:	imul   ebp,DWORD PTR [rbp+0x50],0x79786f72
   140037449:	add    BYTE PTR [rax],al
   14003744b:	add    BYTE PTR [rax],al
   14003744d:	add    BYTE PTR [rax],al
   14003744f:	add    BYTE PTR [rbx+0x65],dl
   140037452:	jno    0x1400374c9
   140037454:	outs   dx,BYTE PTR gs:[rsi]
   140037456:	movsxd esp,DWORD PTR [rbp+0x4d]
   140037459:	(bad)  
   14003745a:	jb     0x1400374c7
   14003745c:	jne    0x1400374ce
   14003745e:	imul   r14,QWORD PTR [rbx+0x74],0x6e410000
   140037466:	imul   ebp,DWORD PTR [rbp+0x0],0x0
   14003746d:	add    BYTE PTR [rax],al
   14003746f:	add    BYTE PTR [rbx+0x65],dh
   140037472:	jno    0x1400374e9
   140037474:	outs   dx,BYTE PTR gs:[rsi]
   140037476:	movsxd esp,DWORD PTR [rbp+0x5f]
   140037479:	outs   dx,BYTE PTR ds:[rsi]
   14003747a:	(bad)  
   14003747b:	ins    DWORD PTR es:[rdi],dx
   14003747c:	add    BYTE PTR gs:[rax],al
   14003747f:	add    BYTE PTR [rcx+0x6e],ah
   140037482:	imul   ebp,DWORD PTR [rbp+0x5f],0x656d616e
   140037489:	add    BYTE PTR [rax],al
   14003748b:	add    BYTE PTR [rax],al
   14003748d:	add    BYTE PTR [rax],al
   14003748f:	add    BYTE PTR [rdx+0x6c],al
   140037492:	outs   dx,BYTE PTR gs:[rsi]
   140037494:	imul   r14,QWORD PTR fs:[rbx+0x74],0x0
   14003749d:	add    BYTE PTR [rax],al
   14003749f:	add    BYTE PTR [rcx],dh
   1400374a1:	rex.R
   1400374a2:	rex.X ins BYTE PTR es:[rdi],dx
   1400374a4:	outs   dx,BYTE PTR gs:[rsi]
   1400374a6:	add    BYTE PTR fs:[rbp+0x6d],al
   1400374aa:	jo     0x140037520
   1400374ac:	jns    0x1400374ef
   1400374ae:	outs   dx,BYTE PTR ds:[rsi]
   1400374af:	imul   ebp,DWORD PTR [rbp+0x0],0x0
   1400374b6:	add    BYTE PTR [rax],al
   1400374b8:	pop    rdi
   1400374b9:	je     0x140037520
   1400374bb:	jae    0x140037531
   1400374bd:	pop    rdi
   1400374be:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400374c1:	jbe    0x140037528
   1400374c3:	jb     0x140037538
   1400374c5:	imul   ebp,DWORD PTR [rdi+0x6e],0x756f635f
   1400374cc:	outs   dx,BYTE PTR ds:[rsi]
   1400374cd:	je     0x140037534
   1400374cf:	jb     0x1400374d1
   1400374d1:	add    BYTE PTR [rax],al
   1400374d3:	add    BYTE PTR [rcx+0x2d],al
   1400374d6:	rex.X add BYTE PTR ds:[rax],al
   1400374da:	add    BYTE PTR [rax],al
   1400374dc:	rex.RXB sub eax,0x423e
   1400374e2:	add    BYTE PTR [rax],al
   1400374e4:	rex.X sub eax,0x433e
   1400374ea:	add    BYTE PTR [rax],al
   1400374ec:	rex.XB sub eax,0x443e
   1400374f2:	add    BYTE PTR [rax],al
   1400374f4:	rex.XB sub eax,0x453e
   1400374fa:	add    BYTE PTR [rax],al
   1400374fc:	add    BYTE PTR [rax],al
   1400374fe:	add    BYTE PTR [rax],al
   140037500:	push   rbx
   140037501:	push   rbx
   140037502:	and    BYTE PTR [r9+0x6e],r12b
   140037506:	and    BYTE PTR fs:[rbx+0x53],dl
   14003750a:	xor    r12b,BYTE PTR [r8]
   14003750d:	(bad)  
   14003750e:	jb     0x140037575
   140037510:	and    BYTE PTR [rdx+0x65],dh
   140037513:	jno    0x14003758a
   140037515:	imul   esi,DWORD PTR [rdx+0x65],0x2e64
   14003751c:	add    BYTE PTR [rax],al
   14003751e:	add    BYTE PTR [rax],al
   140037520:	rex.WRB (bad) 
   140037522:	je     0x14003758c
   140037524:	imul   r12,QWORD PTR [rdx+0x5f],0x74696e49
   14003752c:	add    BYTE PTR [rax],al
   14003752e:	add    BYTE PTR [rax],al
   140037530:	movsxd edi,DWORD PTR [rdx]
   140037532:	pop    rsp
   140037533:	(bad)  
   140037534:	jne    0x14003759f
   140037536:	ins    BYTE PTR es:[rdi],dx
   140037537:	fs jae 0x1400375a6
   14003753a:	(bad)  
   14003753b:	jbe    0x1400375a2
   14003753d:	pop    rsp
   14003753e:	jae    0x1400375af
   140037540:	jne    0x1400375b4
   140037542:	movsxd esp,DWORD PTR [rbp+0x32]
   140037545:	pop    rdi
   140037546:	outs   dx,DWORD PTR fs:[rsi]
   140037548:	je     0x1400375ab
   14003754a:	pop    rdi
   14003754b:	jb     0x1400375b2
   14003754d:	ins    BYTE PTR es:[rdi],dx
   14003754e:	pop    rdi
   14003754f:	ja     0x1400375ba
   140037551:	outs   dx,BYTE PTR ds:[rsi]
   140037552:	ss xor al,0x5c
   140037555:	(bad)  
   140037556:	jne    0x1400375c1
   140037558:	ins    BYTE PTR es:[rdi],dx
   140037559:	fs pop rsp
   14003755b:	jae    0x1400375cf
   14003755d:	movsxd ebx,DWORD PTR [rbp+rbp*2+0x61]
   140037561:	je     0x1400375cb
   140037563:	ins    BYTE PTR es:[rdi],dx
   140037564:	imul   esp,DWORD PTR [rdx+0x5c],0x6874616d
   14003756b:	ins    BYTE PTR es:[rdi],dx
   14003756c:	imul   esp,DWORD PTR [rdx+0x5f],0x65736162
   140037573:	movsxd esi,DWORD PTR cs:[rax+0x70]
   140037577:	add    BYTE PTR [rip+0x32657373],ch        # 0x17268e8f0
   14003757d:	add    BYTE PTR [rax],al
   14003757f:	add    BYTE PTR [rip+0x33657373],ch        # 0x17368e8f8
   140037585:	add    BYTE PTR [rax],al
   140037587:	add    BYTE PTR [rip+0x34657373],ch        # 0x17468e900
   14003758d:	add    BYTE PTR [rax],al
   14003758f:	add    BYTE PTR [rsi+0x69],al
   140037592:	js     0x140037609
   140037594:	jo     0x1400375e8
   140037596:	gs jae 0x140037608
   140037599:	jne    0x14003760d
   14003759b:	movsxd esp,DWORD PTR [rbp+0x4e]
   14003759e:	(bad)  
   14003759f:	ins    DWORD PTR es:[rdi],dx
   1400375a0:	cmp    ah,BYTE PTR gs:[rax]
   1400375a3:	rex.WB ins BYTE PTR es:[rdi],dx
   1400375a5:	ins    BYTE PTR es:[rdi],dx
   1400375a6:	gs addr32 (bad) 
   1400375a9:	ins    BYTE PTR es:[rdi],dx
   1400375aa:	and    BYTE PTR [rsi+0x75],ah
   1400375ad:	ins    BYTE PTR es:[rdi],dx
   1400375ae:	ins    BYTE PTR es:[rdi],dx
   1400375af:	and    BYTE PTR [rax+0x61],dh
   1400375b2:	je     0x14003761c
   1400375b4:	and    BYTE PTR [rax+0x61],dh
   1400375b7:	jae    0x14003762c
   1400375b9:	gs and BYTE PTR fs:[rcx+0x6e],ch
   1400375be:	and    BYTE PTR [rax],ch
   1400375c0:	and    ah,BYTE PTR [rip+0x21292273]        # 0x1612c9839
   1400375c6:	or     al,BYTE PTR [rax]
	...
   1400375d0:	rex.RX imul r15d,DWORD PTR [rax+0x75],0x73655270
   1400375d8:	outs   dx,DWORD PTR ds:[rsi]
   1400375d9:	jne    0x14003764d
   1400375db:	movsxd esp,DWORD PTR [rbp+0x4e]
   1400375de:	(bad)  
   1400375df:	ins    DWORD PTR es:[rdi],dx
   1400375e0:	cmp    ah,BYTE PTR gs:[rax]
   1400375e3:	rex.WB ins BYTE PTR es:[rdi],dx
   1400375e5:	ins    BYTE PTR es:[rdi],dx
   1400375e6:	gs addr32 (bad) 
   1400375e9:	ins    BYTE PTR es:[rdi],dx
   1400375ea:	and    BYTE PTR [rax+0x61],dh
   1400375ed:	je     0x140037657
   1400375ef:	sub    al,0x20
   1400375f1:	ins    DWORD PTR es:[rdi],dx
   1400375f2:	imul   esi,DWORD PTR [rbx+0x73],0x20676e69
   1400375f9:	gs js  0x140037670
   1400375fc:	outs   dx,BYTE PTR gs:[rsi]
   1400375fe:	jae    0x140037669
   140037600:	outs   dx,DWORD PTR ds:[rsi]
   140037601:	outs   dx,BYTE PTR ds:[rsi]
   140037602:	and    BYTE PTR [rax+0x61],dh
   140037605:	jae    0x14003767a
   140037607:	gs and BYTE PTR fs:[rcx+0x6e],ch
   14003760c:	and    BYTE PTR [rax],ch
   14003760e:	and    ah,BYTE PTR [rip+0x21292273]        # 0x1612c9887
   140037614:	or     al,BYTE PTR [rax]
   140037616:	add    BYTE PTR [rax],al
   140037618:	rex.XB push r13
   14003761a:	je     0x140037688
   14003761c:	push   rbx
   14003761d:	je     0x140037691
   14003761f:	imul   ebp,DWORD PTR [rsi+0x67],0x6f463a3a
   140037626:	jb     0x140037695
   140037628:	(bad)  
   140037629:	je     0x140037681
   14003762b:	add    BYTE PTR [rax],al
   14003762d:	add    BYTE PTR [rax],al
   14003762f:	add    BYTE PTR [rip+0x73203a73],ah        # 0x1b323b0a8
   140037635:	je     0x1400376a9
   140037637:	imul   ebp,DWORD PTR [rsi+0x67],0x726f6620
   14003763e:	ins    DWORD PTR es:[rdi],dx
   14003763f:	(bad)  
   140037640:	je     0x140037662
   140037642:	jb     0x1400376a9
   140037644:	jno    0x1400376bb
   140037646:	gs jae 0x1400376bd
   140037649:	gs and BYTE PTR fs:[rip+0x68632064],ah        # 0x1a86696b5
   140037651:	(bad)  
   140037652:	jb     0x1400376c7
   140037654:	or     al,BYTE PTR [rax]
	...
   14003765e:	add    BYTE PTR [rax],al
   140037660:	movsxd edi,DWORD PTR [rdx]
   140037662:	pop    rsp
   140037663:	(bad)  
   140037664:	jne    0x1400376cf
   140037666:	ins    BYTE PTR es:[rdi],dx
   140037667:	fs jae 0x1400376d6
   14003766a:	(bad)  
   14003766b:	jbe    0x1400376d2
   14003766d:	pop    rsp
   14003766e:	jae    0x1400376df
   140037670:	jne    0x1400376e4
   140037672:	movsxd esp,DWORD PTR [rbp+0x32]
   140037675:	pop    rdi
   140037676:	outs   dx,DWORD PTR fs:[rsi]
   140037678:	je     0x1400376db
   14003767a:	pop    rdi
   14003767b:	jb     0x1400376e2
   14003767d:	ins    BYTE PTR es:[rdi],dx
   14003767e:	pop    rdi
   14003767f:	ja     0x1400376ea
   140037681:	outs   dx,BYTE PTR ds:[rsi]
   140037682:	ss xor al,0x5c
   140037685:	(bad)  
   140037686:	jne    0x1400376f1
   140037688:	ins    BYTE PTR es:[rdi],dx
   140037689:	fs pop rsp
   14003768b:	jae    0x1400376ff
   14003768d:	movsxd ebx,DWORD PTR [rsp+rsi*2+0x69]
   140037691:	gs jb  0x1400376c5
   140037694:	pop    rsp
   140037695:	jne    0x14003770b
   140037697:	ins    BYTE PTR es:[rdi],dx
   140037698:	jae    0x14003770e
   14003769a:	jb     0x140037705
   14003769c:	outs   dx,BYTE PTR ds:[rsi]
   14003769d:	movsxd esi,DWORD PTR cs:[eax+0x70]
   1400376a2:	add    BYTE PTR [rax],al
   1400376a4:	add    BYTE PTR [rax],al
   1400376a6:	add    BYTE PTR [rax],al
   1400376a8:	sar    cl,0x3
   1400376ab:	rex add DWORD PTR [rax],eax
   1400376ae:	add    BYTE PTR [rax],al
   1400376b0:	mov    al,0xb6
   1400376b2:	add    DWORD PTR [rax+0x1],eax
   1400376b5:	add    BYTE PTR [rax],al
   1400376b7:	add    BYTE PTR [rax+0x14003fa],dl
   1400376bd:	add    BYTE PTR [rax],al
   1400376bf:	add    BYTE PTR [rax+0x14001b8],ah
   1400376c5:	add    BYTE PTR [rax],al
   1400376c7:	add    BYTE PTR [rax+0x1400299],dl
   1400376cd:	add    BYTE PTR [rax],al
   1400376cf:	add    BYTE PTR [rax+0x1400039],dh
   1400376d5:	add    BYTE PTR [rax],al
   1400376d7:	add    BYTE PTR [rax+0x14001c5],al
   1400376dd:	add    BYTE PTR [rax],al
   1400376df:	add    al,dl
   1400376e1:	mov    eax,0x14001
   1400376e6:	add    BYTE PTR [rax],al
   1400376e8:	rol    ch,1
   1400376ea:	add    DWORD PTR [rax+0x1],eax
   1400376ed:	add    BYTE PTR [rax],al
   1400376ef:	add    BYTE PTR [rax],dl
   1400376f1:	mov    esi,0x14001
   1400376f6:	add    BYTE PTR [rax],al
   1400376f8:	nop
   1400376f9:	mov    esi,0x14001
   1400376fe:	add    BYTE PTR [rax],al
   140037700:	rex mov esi,0x14001
   140037706:	add    BYTE PTR [rax],al
   140037708:	mov    al,0xc5
   14003770a:	add    DWORD PTR [rax+0x1],eax
   14003770d:	add    BYTE PTR [rax],al
   14003770f:	add    BYTE PTR [rax+0x14001bd],dh
   140037715:	add    BYTE PTR [rax],al
   140037717:	add    BYTE PTR [rax+0x14001bb],al
   14003771d:	add    BYTE PTR [rax],al
   14003771f:	add    al,dl
   140037721:	mov    esi,0x14001
   140037726:	add    BYTE PTR [rax],al
   140037728:	or     bl,bh
   14003772a:	add    eax,DWORD PTR [rax+0x1]
   14003772d:	add    BYTE PTR [rax],al
   14003772f:	add    BYTE PTR [rax],ah
   140037731:	mov    eax,0x14001
   140037736:	add    BYTE PTR [rax],al
   140037738:	mov    al,0x39
   14003773a:	add    BYTE PTR [rax+0x1],al
   14003773d:	add    BYTE PTR [rax],al
   14003773f:	add    BYTE PTR [rax+0x1400039],dh
   140037745:	add    BYTE PTR [rax],al
   140037747:	add    BYTE PTR [rax+0x14001c5],dl
   14003774d:	add    BYTE PTR [rax],al
   14003774f:	add    al,ah
   140037751:	mov    eax,0x14001
   140037756:	add    BYTE PTR [rax],al
   140037758:	rol    ch,1
   14003775a:	add    DWORD PTR [rax+0x1],eax
   14003775d:	add    BYTE PTR [rax],al
   14003775f:	add    BYTE PTR [rax],ah
   140037761:	mov    esi,0x14001
   140037766:	add    BYTE PTR [rax],al
   140037768:	movabs al,ds:0x50000000014001be
   140037771:	mov    esi,0x14001
   140037776:	add    BYTE PTR [rax],al
   140037778:	rol    ch,0x1
   14003777b:	rex add DWORD PTR [rax],eax
   14003777e:	add    BYTE PTR [rax],al
   140037780:	mov    al,0xbd
   140037782:	add    DWORD PTR [rax+0x1],eax
   140037785:	add    BYTE PTR [rax],al
   140037787:	add    BYTE PTR [rax+0x14001bb],al
   14003778d:	add    BYTE PTR [rax],al
   14003778f:	add    al,dl
   140037791:	mov    esi,0x14001
   140037796:	add    BYTE PTR [rax],al
   140037798:	xor    BYTE PTR [rsi+0x14001],bh
   14003779e:	add    BYTE PTR [rax],al
   1400377a0:	(bad)  
   1400377a1:	mov    esi,0x14001
   1400377a6:	add    BYTE PTR [rax],al
   1400377a8:	movabs al,ds:0xf0000000014001bd
   1400377b1:	ret    
   1400377b2:	add    DWORD PTR [rax+0x1],eax
   1400377b5:	add    BYTE PTR [rax],al
   1400377b7:	add    BYTE PTR [rax],dl
   1400377b9:	ret    0x4001
   1400377bc:	add    DWORD PTR [rax],eax
   1400377be:	add    BYTE PTR [rax],al
   1400377c0:	lock ret 0x4001
   1400377c4:	add    DWORD PTR [rax],eax
   1400377c6:	add    BYTE PTR [rax],al
   1400377c8:	rol    cl,1
   1400377ca:	add    DWORD PTR [rax+0x1],eax
   1400377cd:	add    BYTE PTR [rax],al
   1400377cf:	add    BYTE PTR [rax],ah
   1400377d1:	mov    edx,0x14001
   1400377d6:	add    BYTE PTR [rax],al
   1400377d8:	add    BYTE PTR [rcx+0x14001],bh
   1400377de:	add    BYTE PTR [rax],al
   1400377e0:	loopne 0x14003779d
   1400377e2:	add    DWORD PTR [rax+0x1],eax
   1400377e5:	add    BYTE PTR [rax],al
   1400377e7:	add    BYTE PTR [rax+0x14003fb],bh
   1400377ed:	add    BYTE PTR [rax],al
   1400377ef:	add    BYTE PTR [rax],dl
   1400377f1:	mov    BYTE PTR [rcx],0x40
   1400377f4:	add    DWORD PTR [rax],eax
   1400377f6:	add    BYTE PTR [rax],al
   1400377f8:	loopne 0x1400377bf
   1400377fa:	add    DWORD PTR [rax+0x1],eax
   1400377fd:	add    BYTE PTR [rax],al
   1400377ff:	add    al,dh
   140037801:	(bad)
   140037804:	add    DWORD PTR [rax],eax
   140037806:	add    BYTE PTR [rax],al
   140037808:	add    dh,al
   14003780a:	add    DWORD PTR [rax+0x1],eax
   14003780d:	add    BYTE PTR [rax],al
   14003780f:	add    BYTE PTR [rsi+rdi*4+0x14001],ch
   140037816:	add    BYTE PTR [rax],al
   140037818:	nop
   140037819:	mov    ebp,0x14001
   14003781e:	add    BYTE PTR [rax],al
   140037820:	pushf  
   140037821:	(bad)
   140037824:	add    DWORD PTR [rax],eax
   140037826:	add    BYTE PTR [rax],al
   140037828:	sar    BYTE PTR [rsi+0x14001],0x0
   14003782f:	add    ah,ch
   140037831:	mov    eax,0x14001
   140037836:	add    BYTE PTR [rax],al
   140037838:	loopne 0x140037835
   14003783a:	add    eax,DWORD PTR [rax+0x1]
   14003783d:	add    BYTE PTR [rax],al
   14003783f:	add    BYTE PTR [rax],ah
   140037841:	mov    eax,0x14001
   140037846:	add    BYTE PTR [rax],al
   140037848:	mov    al,0x39
   14003784a:	add    BYTE PTR [rax+0x1],al
   14003784d:	add    BYTE PTR [rax],al
   14003784f:	add    BYTE PTR [rax+0x1400039],dh
   140037855:	add    BYTE PTR [rax],al
   140037857:	add    BYTE PTR [rax+0x1400039],dh
   14003785d:	add    BYTE PTR [rax],al
   14003785f:	add    al,ah
   140037861:	mov    eax,0x14001
   140037866:	add    BYTE PTR [rax],al
   140037868:	rol    ch,1
   14003786a:	add    DWORD PTR [rax+0x1],eax
   14003786d:	add    BYTE PTR [rax],al
   14003786f:	add    BYTE PTR [rax],ah
   140037871:	mov    esi,0x14001
   140037876:	add    BYTE PTR [rax],al
   140037878:	jo     0x140037838
   14003787a:	add    DWORD PTR [rax+0x1],eax
   14003787d:	add    BYTE PTR [rax],al
   14003787f:	add    BYTE PTR [rax-0x42],dl
   140037882:	add    DWORD PTR [rax+0x1],eax
   140037885:	add    BYTE PTR [rax],al
   140037887:	add    al,al
   140037889:	(bad)
   14003788c:	add    DWORD PTR [rax],eax
   14003788e:	add    BYTE PTR [rax],al
   140037890:	mov    al,0xbd
   140037892:	add    DWORD PTR [rax+0x1],eax
   140037895:	add    BYTE PTR [rax],al
   140037897:	add    BYTE PTR [rax+0x14001bb],al
   14003789d:	add    BYTE PTR [rax],al
   14003789f:	add    al,dl
   1400378a1:	mov    esi,0x14001
   1400378a6:	add    BYTE PTR [rax],al
   1400378a8:	xor    BYTE PTR [rsi+0x14001],bh
   1400378ae:	add    BYTE PTR [rax],al
   1400378b0:	(bad)  
   1400378b1:	mov    esi,0x14001
   1400378b6:	add    BYTE PTR [rax],al
   1400378b8:	movabs al,ds:0xf0000000014001bd
   1400378c1:	ret    
   1400378c2:	add    DWORD PTR [rax+0x1],eax
   1400378c5:	add    BYTE PTR [rax],al
   1400378c7:	add    BYTE PTR [rax],dl
   1400378c9:	ret    0x4001
   1400378cc:	add    DWORD PTR [rax],eax
   1400378ce:	add    BYTE PTR [rax],al
   1400378d0:	lock ret 0x4001
   1400378d4:	add    DWORD PTR [rax],eax
   1400378d6:	add    BYTE PTR [rax],al
   1400378d8:	rol    cl,1
   1400378da:	add    DWORD PTR [rax+0x1],eax
   1400378dd:	add    BYTE PTR [rax],al
   1400378df:	add    BYTE PTR [rax],ah
   1400378e1:	mov    edx,0x14001
   1400378e6:	add    BYTE PTR [rax],al
   1400378e8:	add    BYTE PTR [rcx+0x14001],bh
   1400378ee:	add    BYTE PTR [rax],al
   1400378f0:	loopne 0x1400378ad
   1400378f2:	add    DWORD PTR [rax+0x1],eax
   1400378f5:	add    BYTE PTR [rax],al
   1400378f7:	add    BYTE PTR [rax-0x4],dh
   1400378fa:	add    eax,DWORD PTR [rax+0x1]
   1400378fd:	add    BYTE PTR [rax],al
   1400378ff:	add    BYTE PTR [rax],dl
   140037901:	mov    BYTE PTR [rcx],0x40
   140037904:	add    DWORD PTR [rax],eax
   140037906:	add    BYTE PTR [rax],al
   140037908:	mov    al,0xe1
   14003790a:	add    DWORD PTR [rax+0x1],eax
   14003790d:	add    BYTE PTR [rax],al
   14003790f:	add    BYTE PTR [rax+0x14001e1],dh
   140037915:	add    BYTE PTR [rax],al
   140037917:	add    BYTE PTR [rax+0x14001e1],dh
   14003791d:	add    BYTE PTR [rax],al
   14003791f:	add    BYTE PTR [rax-0x42],bh
   140037922:	add    DWORD PTR [rax+0x1],eax
   140037925:	add    BYTE PTR [rax],al
   140037927:	add    BYTE PTR [rax+0x14001bd],dl
   14003792d:	add    BYTE PTR [rax],al
   14003792f:	add    BYTE PTR [rbp+rax*8+0x1],ch
   140037933:	rex add DWORD PTR [rax],eax
   140037936:	add    BYTE PTR [rax],al
   140037938:	sar    BYTE PTR [rsi+0x14001],0x0
   14003793f:	add    ah,ch
   140037941:	mov    eax,0x14001
   140037946:	add    BYTE PTR [rax],al
   140037948:	and    eax,0x69252069
   14003794d:	and    BYTE PTR [rip+0x69252069],ah        # 0x1a92899bc
   140037953:	add    BYTE PTR [rax],al
   140037955:	add    BYTE PTR [rax],al
   140037957:	add    BYTE PTR [rdi+0x61],dl
   14003795a:	jb     0x1400379ca
   14003795c:	imul   ebp,DWORD PTR [rsi+0x67],0x2520203a
   140037963:	jae    0x140037985
   140037965:	cmp    eax,0x73252720
   14003796a:	(bad)  
   14003796b:	and    BYTE PTR [rcx+0x73],ch
   14003796e:	and    BYTE PTR [rcx+0x6e],ch
   140037971:	imul   bp,WORD PTR [rsi+0x69],0x6574
   140037977:	sub    al,0x20
   140037979:	movsxd ebp,DWORD PTR [rcx+riz*2+0x6d]
   14003797d:	jo     0x1400379e8
   14003797f:	outs   dx,BYTE PTR ds:[rsi]
   140037980:	and    BYTE PTR [esi+0x61],dh
   140037984:	ins    BYTE PTR es:[rdi],dx
   140037985:	jne    0x1400379ec
   140037987:	or     al,BYTE PTR cs:[rax]
   14003798a:	add    BYTE PTR [rax],al
   14003798c:	add    BYTE PTR [rax],al
   14003798e:	add    BYTE PTR [rax],al
   140037990:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140037992:	outs   dx,BYTE PTR ds:[rsi]
   140037993:	push   rsi
   140037994:	(bad)  
   140037995:	jb     0x1400379bf
   140037997:	and    eax,0x64202973
   14003799c:	imul   bp,WORD PTR gs:[rsi+0x65],0x2064
   1400379a3:	ja     0x140037a0e
   1400379a5:	je     0x140037a0f
   1400379a7:	and    BYTE PTR [rcx+0x6e],ch
   1400379aa:	imul   bp,WORD PTR [rsi+0x69],0x6574
   1400379b0:	and    BYTE PTR [rsi+0x6c],ah
   1400379b3:	outs   dx,DWORD PTR ds:[rsi]
   1400379b4:	(bad)  
   1400379b5:	je     0x1400379d7
   1400379b7:	jbe    0x140037a1a
   1400379b9:	ins    BYTE PTR es:[rdi],dx
   1400379ba:	jne    0x140037a21
   1400379bc:	and    BYTE PTR [rax],ch
   1400379be:	and    eax,0xa2973
   1400379c3:	add    BYTE PTR [rsi+rbp*2],bh
   1400379c6:	jne    0x140037a34
   1400379c8:	ins    BYTE PTR es:[rdi],dx
   1400379c9:	add    BYTE PTR ds:[rax],al
   1400379cc:	add    BYTE PTR [rax],al
   1400379ce:	add    BYTE PTR [rax],al
   1400379d0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400379d2:	outs   dx,BYTE PTR ds:[rsi]
   1400379d3:	push   rsi
   1400379d4:	(bad)  
   1400379d5:	jb     0x140037a29
   1400379d7:	data16 and BYTE PTR gs:[rip+0x6f642073],ah        # 0x1af679a52
   1400379df:	gs jae 0x140037a50
   1400379e2:	(bad)  
   1400379e3:	je     0x140037a05
   1400379e5:	jo     0x140037a56
   1400379e7:	imul   ebp,DWORD PTR [rsi+0x74],0x206f7420
   1400379ee:	(bad)  
   1400379ef:	outs   dx,BYTE PTR ds:[rsi]
   1400379f0:	and    BYTE PTR [rbp+0x78],ah
   1400379f3:	imul   esi,DWORD PTR [rbx+0x74],0x20676e69
   1400379fa:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400379fc:	outs   dx,BYTE PTR ds:[rsi]
   1400379fd:	push   rsi
   1400379fe:	(bad)  
   1400379ff:	jb     0x140037a0b
	...
   140037a09:	add    BYTE PTR [rax],al
   140037a0b:	loopne 0x140037a0c
   140037a0d:	(bad)  
   140037a0e:	out    dx,eax
   140037a0f:	rex.RXB push r10
   140037a11:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f437265
   140037a1a:	outs   dx,BYTE PTR ds:[rsi]
   140037a1b:	imul   sp,WORD PTR [rdi+0x56],0x6c61
   140037a21:	jne    0x140037a88
   140037a23:	cmp    ah,BYTE PTR [rax]
   140037a25:	push   rbp
   140037a26:	outs   dx,BYTE PTR ds:[rsi]
   140037a27:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140037a2b:	outs   dx,BYTE PTR ds:[rsi]
   140037a2c:	and    BYTE PTR [rbp+0x72],ah
   140037a2f:	jb     0x140037aa0
   140037a31:	jb     0x140037a53
   140037a33:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140037a36:	jae    0x140037aac
   140037a38:	jb     0x140037aaf
   140037a3a:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6e]
   140037a3e:	and    BYTE PTR [ebx+0x6f],ah
   140037a42:	outs   dx,BYTE PTR ds:[rsi]
   140037a43:	imul   sp,WORD PTR [rdi+0x20],0x6176
   140037a49:	ins    BYTE PTR es:[rdi],dx
   140037a4a:	jne    0x140037ab1
   140037a4c:	and    BYTE PTR [rdx],ah
   140037a4e:	and    eax,0xa212273
   140037a53:	add    BYTE PTR [rax],al
   140037a55:	add    BYTE PTR [rax],al
   140037a57:	add    BYTE PTR [rbx+0x47],al
   140037a5a:	ins    BYTE PTR es:[rdi],dx
   140037a5b:	outs   dx,DWORD PTR ds:[rsi]
   140037a5c:	(bad)
   140037a61:	outs   dx,BYTE PTR ds:[rsi]
   140037a62:	imul   sp,WORD PTR [rdi+0x56],0x6c61
   140037a68:	jne    0x140037acf
   140037a6a:	push   rdx
   140037a6b:	imul   esi,DWORD PTR gs:[ebx+0x74],0x3a3a7972
   140037a74:	rex.W outs dx,DWORD PTR ds:[rsi]
   140037a76:	outs   dx,DWORD PTR ds:[rsi]
   140037a77:	imul   edx,DWORD PTR [rbp+0x70],0x43
   140037a7b:	outs   dx,DWORD PTR ds:[rsi]
   140037a7c:	outs   dx,BYTE PTR ds:[rsi]
   140037a7d:	imul   sp,WORD PTR [rdi+0x56],0x6c61
   140037a83:	jne    0x140037aea
	...
   140037a8d:	add    BYTE PTR [rax],al
   140037a8f:	add    BYTE PTR [rbx+0x3a],ah
   140037a92:	pop    rsp
   140037a93:	(bad)  
   140037a94:	jne    0x140037aff
   140037a96:	ins    BYTE PTR es:[rdi],dx
   140037a97:	fs jae 0x140037b06
   140037a9a:	(bad)  
   140037a9b:	jbe    0x140037b02
   140037a9d:	pop    rsp
   140037a9e:	jae    0x140037b0f
   140037aa0:	jne    0x140037b14
   140037aa2:	movsxd esp,DWORD PTR [rbp+0x32]
   140037aa5:	pop    rdi
   140037aa6:	outs   dx,DWORD PTR fs:[rsi]
   140037aa8:	je     0x140037b0b
   140037aaa:	pop    rdi
   140037aab:	jb     0x140037b12
   140037aad:	ins    BYTE PTR es:[rdi],dx
   140037aae:	pop    rdi
   140037aaf:	ja     0x140037b1a
   140037ab1:	outs   dx,BYTE PTR ds:[rsi]
   140037ab2:	ss xor al,0x5c
   140037ab5:	(bad)  
   140037ab6:	jne    0x140037b21
   140037ab8:	ins    BYTE PTR es:[rdi],dx
   140037ab9:	fs pop rsp
   140037abb:	jae    0x140037b2f
   140037abd:	movsxd ebx,DWORD PTR [rsp+rsi*2+0x69]
   140037ac1:	gs jb  0x140037af5
   140037ac4:	pop    rsp
   140037ac5:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140037ac8:	imul   sp,WORD PTR [rdi+0x76],0x6c61
   140037ace:	jne    0x140037b35
   140037ad0:	movsxd esi,DWORD PTR cs:[rax+0x70]
	...
   140037ae0:	rex.XB push r13
   140037ae2:	je     0x140037b50
   140037ae4:	push   rdx
   140037ae5:	rex.X push rsp
   140037ae7:	jb     0x140037b4e
   140037ae9:	gs cmp al,0x63
   140037aec:	ins    BYTE PTR es:[rdi],dx
   140037aed:	(bad)  
   140037aee:	jae    0x140037b63
   140037af0:	and    BYTE PTR [rbx+0x55],al
   140037af3:	je     0x140037b61
   140037af5:	push   rbx
   140037af6:	jns    0x140037b65
   140037af8:	(bad)  
   140037af9:	outs   dx,DWORD PTR ds:[rsi]
   140037afa:	ins    BYTE PTR es:[rdi],dx
   140037afb:	push   rsp
   140037afc:	(bad)  
   140037afd:	(bad)  
   140037afe:	ins    BYTE PTR es:[rdi],dx
   140037aff:	cmp    bh,BYTE PTR gs:[rdx]
   140037b02:	rex.XB push r11
   140037b04:	je     0x140037b78
   140037b06:	imul   ebp,DWORD PTR [rsi+0x67],0x6c6f6f50
   140037b0d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140037b0f:	fs gs js 0x140037b3f
   140037b13:	jne    0x140037b83
   140037b15:	jae    0x140037b80
   140037b17:	outs   dx,BYTE PTR ds:[esi]
   140037b19:	gs and BYTE PTR fs:[rbx+0x68],dh
   140037b1e:	outs   dx,DWORD PTR ds:[rsi]
   140037b1f:	jb     0x140037b95
   140037b21:	sub    al,0x63
   140037b23:	ins    BYTE PTR es:[rdi],dx
   140037b24:	(bad)  
   140037b25:	jae    0x140037b9a
   140037b27:	and    BYTE PTR [rbx+0x55],al
   140037b2a:	je     0x140037b98
   140037b2c:	push   rbx
   140037b2d:	jns    0x140037b9c
   140037b2f:	(bad)  
   140037b30:	outs   dx,DWORD PTR ds:[rsi]
   140037b31:	ins    BYTE PTR es:[rdi],dx
   140037b32:	push   rsp
   140037b33:	(bad)  
   140037b34:	(bad)  
   140037b35:	ins    BYTE PTR es:[rdi],dx
   140037b36:	cmp    bh,BYTE PTR gs:[rdx]
   140037b39:	rex.XB
   140037b3a:	rex.WR
   140037b3b:	gs jae 0x140037bb1
   140037b3e:	sub    al,0x63
   140037b40:	ins    BYTE PTR es:[rdi],dx
   140037b41:	(bad)  
   140037b42:	jae    0x140037bb7
   140037b44:	and    BYTE PTR [rbx+0x55],al
   140037b47:	je     0x140037bb5
   140037b49:	rex.WRB
   140037b4a:	gs ins DWORD PTR es:[rdi],dx
   140037b4c:	outs   dx,DWORD PTR ds:[rsi]
   140037b4d:	jb     0x140037bc8
   140037b4f:	cmp    al,0x73
   140037b51:	je     0x140037bc5
   140037b53:	jne    0x140037bb8
   140037b55:	je     0x140037b77
   140037b57:	push   rbp
   140037b58:	je     0x140037bc6
   140037b5a:	push   rdx
   140037b5b:	rex.X push rsp
   140037b5d:	jb     0x140037bc4
   140037b5f:	rex.WRX outs dx,DWORD PTR gs:[rsi]
   140037b62:	fs gs pop rdi
   140037b65:	je     0x140037ba3
   140037b67:	movsxd ebp,DWORD PTR [rcx+riz*2+0x73]
   140037b6b:	jae    0x140037b8d
   140037b6d:	rex.XB push r13
   140037b6f:	je     0x140037bdd
   140037b71:	push   rbx
   140037b72:	jns    0x140037be1
   140037b74:	(bad)  
   140037b75:	outs   dx,DWORD PTR ds:[rsi]
   140037b76:	ins    BYTE PTR es:[rdi],dx
   140037b77:	push   rsp
   140037b78:	(bad)  
   140037b79:	(bad)  
   140037b7a:	ins    BYTE PTR es:[rdi],dx
   140037b7b:	cmp    bh,BYTE PTR gs:[rdx]
   140037b7e:	rex.XB push r11
   140037b80:	je     0x140037bf4
   140037b82:	imul   ebp,DWORD PTR [rsi+0x67],0x6c6f6f50
   140037b89:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140037b8b:	fs gs js 0x140037bbb
   140037b8f:	jne    0x140037bff
   140037b91:	jae    0x140037bfc
   140037b93:	outs   dx,BYTE PTR ds:[esi]
   140037b95:	gs and BYTE PTR fs:[rbx+0x68],dh
   140037b9a:	outs   dx,DWORD PTR ds:[rsi]
   140037b9b:	jb     0x140037c11
   140037b9d:	ds sub al,0x75
   140037ba0:	outs   dx,BYTE PTR ds:[rsi]
   140037ba1:	jae    0x140037c0c
   140037ba3:	outs   dx,BYTE PTR ds:[esi]
   140037ba5:	gs and BYTE PTR fs:[rbx+0x68],dh
   140037baa:	outs   dx,DWORD PTR ds:[rsi]
   140037bab:	jb     0x140037c21
   140037bad:	and    BYTE PTR ds:[rsi],bh
   140037bb0:	cmp    bh,BYTE PTR [rdx]
   140037bb2:	rex.WRX
   140037bb3:	gs ja  0x140037c04
   140037bb6:	outs   dx,DWORD PTR ds:[rsi]
   140037bb7:	fs add BYTE PTR gs:[rax],al
   140037bbb:	add    BYTE PTR [rax],al
   140037bbd:	add    BYTE PTR [rax],al
   140037bbf:	add    BYTE PTR [rbp+0x6e],dh
   140037bc2:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140037bc6:	outs   dx,BYTE PTR ds:[rsi]
   140037bc7:	add    al,ch
   140037bc9:	cld    
   140037bca:	add    eax,DWORD PTR [rax+0x1]
   140037bcd:	add    BYTE PTR [rax],al
   140037bcf:	add    BYTE PTR [rax+0x14001e1],dh
   140037bd5:	add    BYTE PTR [rax],al
   140037bd7:	add    BYTE PTR [rax+0x14001e1],dh
   140037bdd:	add    BYTE PTR [rax],al
   140037bdf:	add    BYTE PTR [rax+0x1400207],al
   140037be5:	add    BYTE PTR [rax],al
   140037be7:	add    BYTE PTR [rbx+0x65],cl
   140037bea:	jns    0x140037c42
   140037bec:	(bad)  
   140037bed:	ins    BYTE PTR es:[rdi],dx
   140037bee:	jne    0x140037c55
   140037bf0:	jae    0x140037c12
   140037bf2:	rex.RB jb 0x140037c67
   140037bf5:	outs   dx,DWORD PTR ds:[rsi]
   140037bf6:	jb     0x140037c32
   140037bf8:	and    BYTE PTR [rip+0x6e692073],ah        # 0x1ae6c9c71
   140037bfe:	and    BYTE PTR [rsi+0x69],ah
   140037c01:	ins    BYTE PTR es:[rdi],dx
   140037c02:	and    BYTE PTR gs:[rip+0x25000a73],ah        # 0x16503867c
   140037c09:	jae    0x140037c37
   140037c0b:	and    BYTE PTR [rax],al
   140037c0d:	add    BYTE PTR [rax],al
   140037c0f:	add    BYTE PTR [rax],ch
   140037c11:	sub    ah,BYTE PTR [rip+0x2c292a73]        # 0x16c2ca68a
   140037c17:	and    BYTE PTR [rax],al
   140037c19:	add    BYTE PTR [rax],al
   140037c1b:	add    BYTE PTR [rax],al
   140037c1d:	add    BYTE PTR [rax],al
   140037c1f:	add    BYTE PTR [rax],ah
   140037c21:	push   rdx
   140037c22:	gs (bad) 
   140037c24:	fs push rsp
   140037c26:	outs   dx,DWORD PTR ds:[rsi]
   140037c27:	imul   esp,DWORD PTR [rbp+0x6e],0x20
   140037c2b:	outs   dx,DWORD PTR ds:[rsi]
   140037c2c:	jbe    0x140037c93
   140037c2e:	jb     0x140037c96
   140037c30:	ins    BYTE PTR es:[rdi],dx
   140037c31:	outs   dx,DWORD PTR ds:[rsi]
   140037c32:	ja     0x140037c34
   140037c34:	jb     0x140037c98
   140037c36:	add    BYTE PTR [rax],al
   140037c38:	and    al,BYTE PTR [rax]
   140037c3a:	add    BYTE PTR [rax],al
   140037c3c:	add    BYTE PTR [rax],al
   140037c3e:	add    BYTE PTR [rax],al
   140037c40:	rex.WXB
   140037c41:	gs jns 0x140037c9a
   140037c44:	(bad)  
   140037c45:	ins    BYTE PTR es:[rdi],dx
   140037c46:	jne    0x140037cad
   140037c48:	jae    0x140037c84
   140037c4a:	cmp    dl,BYTE PTR [rax+0x61]
   140037c4d:	jb     0x140037cc2
   140037c4f:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140037c52:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   140037c56:	gs fs rex.WXB
   140037c59:	gs jns 0x140037ccf
   140037c5c:	cmp    ah,BYTE PTR [rax]
   140037c5e:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140037c60:	jne    0x140037cce
   140037c62:	outs   dx,BYTE PTR fs:[rsi]
   140037c64:	(bad)  
   140037c65:	je     0x140037c87
   140037c67:	ins    BYTE PTR es:[rdi],dx
   140037c68:	outs   dx,DWORD PTR ds:[rsi]
   140037c69:	(bad)  
   140037c6a:	and    BYTE PTR fs:[rcx+0x6e],ch
   140037c6e:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   140037c72:	gs and BYTE PTR fs:[rbx+0x65],ch
   140037c77:	jns    0x140037cef
   140037c79:	(bad)  
   140037c7a:	ins    BYTE PTR es:[rdi],dx
   140037c7b:	jne    0x140037ce2
   140037c7d:	and    BYTE PTR [rsi+0x69],ah
   140037c80:	ins    BYTE PTR es:[rdi],dx
   140037c81:	and    BYTE PTR gs:[rip+0xa73],ah        # 0x1400386fb
   140037c88:	rex.WXB push r14
   140037c8a:	and    BYTE PTR [rbx+0x6f],al
   140037c8d:	outs   dx,BYTE PTR ds:[rsi]
   140037c8e:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
   140037c97:	rex.RB jbe 0x140037cfb
   140037c9a:	ins    BYTE PTR es:[rdi],dx
   140037c9b:	jne    0x140037cfe
   140037c9d:	je     0x140037d08
   140037c9f:	outs   dx,DWORD PTR ds:[rsi]
   140037ca0:	outs   dx,BYTE PTR ds:[rsi]
   140037ca1:	and    BYTE PTR [rbp+0x72],al
   140037ca4:	jb     0x140037d15
   140037ca6:	jb     0x140037ca8
   140037ca8:	and    ebp,DWORD PTR [rcx+0x6e]
   140037cab:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   140037caf:	add    BYTE PTR gs:[rax],al
   140037cb2:	add    BYTE PTR [rax],al
   140037cb4:	add    BYTE PTR [rax],al
   140037cb6:	add    BYTE PTR [rax],al
   140037cb8:	and    ebp,DWORD PTR [rcx+0x6e]
   140037cbb:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   140037cbf:	and    BYTE PTR gs:[rcx+0x73],ch
   140037cc3:	and    BYTE PTR [rsi+0x55],cl
   140037cc6:	rex.WR
   140037cc7:	rex.WR and BYTE PTR [rax],r8b
   140037cca:	add    BYTE PTR [rax],al
   140037ccc:	and    esp,DWORD PTR [rdx+0x61]
   140037ccf:	jae    0x140037d36
   140037cd1:	add    BYTE PTR [rax],al
   140037cd3:	add    BYTE PTR [rax],al
   140037cd5:	add    BYTE PTR [rax],al
   140037cd7:	add    BYTE PTR [rbx],ah
   140037cd9:	(bad)  
   140037cdb:	jae    0x140037d42
   140037cdd:	and    BYTE PTR [rcx+0x73],ch
   140037ce0:	and    BYTE PTR [rsi+0x55],cl
   140037ce3:	rex.WR
   140037ce4:	rex.WR and BYTE PTR [rax],r8b
   140037ce7:	add    BYTE PTR [rsi+rcx*2],bh
   140037cea:	push   rbp
   140037ceb:	rex.WR
   140037cec:	rex.WR
   140037ced:	add    BYTE PTR ds:[rax],al
   140037cf0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140037cf2:	(bad)  
   140037cf3:	fs rex.RX jb 0x140037d66
   140037cf7:	ins    DWORD PTR es:[rdi],dx
   140037cf8:	rex.X jne 0x140037d61
   140037cfb:	data16 gs jb 0x140037d39
   140037cff:	and    BYTE PTR [rbp+0x78],ah
   140037d02:	jo     0x140037d69
   140037d04:	movsxd esi,DWORD PTR [rbp+riz*2+0x64]
   140037d08:	and    BYTE PTR [rdi],ah
   140037d0a:	jnp    0x140037d33
   140037d0c:	sub    al,0x20
   140037d0e:	outs   dx,WORD PTR ds:[rsi]
   140037d10:	jne    0x140037d80
   140037d12:	and    BYTE PTR fs:[rdi],ah
   140037d15:	and    eax,0x2773
   140037d1a:	add    BYTE PTR [rax],al
   140037d1c:	add    BYTE PTR [rax],al
   140037d1e:	add    BYTE PTR [rax],al
   140037d20:	push   rdx
   140037d21:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140037d25:	jae    0x140037d90
   140037d27:	jbe    0x140037d8e
   140037d29:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140037d2b:	(bad)  
   140037d2c:	fs rex.RX jb 0x140037d9f
   140037d30:	ins    DWORD PTR es:[rdi],dx
   140037d31:	rex.X jne 0x140037d9a
   140037d34:	data16 gs jb 0x140037d72
   140037d38:	and    BYTE PTR [rax],ah
   140037d3a:	jb     0x140037da1
   140037d3c:	movsxd esi,DWORD PTR [rbp+0x72]
   140037d3f:	jae    0x140037daa
   140037d41:	outs   dx,DWORD PTR ds:[rsi]
   140037d42:	outs   dx,BYTE PTR ds:[rsi]
   140037d43:	and    BYTE PTR [rdi+0x76],ch
   140037d46:	gs jb  0x140037daf
   140037d49:	ins    BYTE PTR es:[rdi],dx
   140037d4a:	outs   dx,DWORD PTR ds:[rsi]
   140037d4b:	ja     0x140037d4d
   140037d4d:	add    BYTE PTR [rax],al
   140037d4f:	add    BYTE PTR [rdx+0x65],dl
   140037d52:	movsxd esi,DWORD PTR [rbp+0x72]
   140037d55:	jae    0x140037dc0
   140037d57:	jbe    0x140037dbe
   140037d59:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140037d5b:	(bad)  
   140037d5c:	fs rex.RX jb 0x140037dcf
   140037d60:	ins    DWORD PTR es:[rdi],dx
   140037d61:	rex.X jne 0x140037dca
   140037d64:	data16 gs jb 0x140037da2
   140037d68:	and    BYTE PTR [rax],ah
   140037d6a:	outs   dx,DWORD PTR ds:[esi]
   140037d6c:	je     0x140037d8e
   140037d6e:	rex.RB
   140037d6f:	rex.WRXB
   140037d70:	rex.RX and BYTE PTR [rcx+0x6e],r13b
   140037d74:	jae    0x140037dea
   140037d76:	gs (bad) 
   140037d78:	and    BYTE PTR fs:[rdi+0x66],ch
   140037d7c:	and    BYTE PTR [rbx+0x65],ch
   140037d7f:	jns    0x140037def
   140037d81:	(bad)  
   140037d82:	ins    DWORD PTR es:[rdi],dx
   140037d83:	add    BYTE PTR gs:[rax],al
   140037d86:	add    BYTE PTR [rax],al
   140037d88:	push   rdx
   140037d89:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140037d8d:	jae    0x140037df8
   140037d8f:	jbe    0x140037df6
   140037d91:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140037d93:	(bad)  
   140037d94:	fs rex.RX jb 0x140037e07
   140037d98:	ins    DWORD PTR es:[rdi],dx
   140037d99:	rex.X jne 0x140037e02
   140037d9c:	data16 gs jb 0x140037dda
   140037da0:	and    BYTE PTR [rax],ah
   140037da2:	outs   dx,DWORD PTR ds:[esi]
   140037da4:	je     0x140037dc6
   140037da6:	gs ins DWORD PTR es:[rdi],dx
   140037da8:	jo     0x140037e1e
   140037daa:	jns    0x140037dcc
   140037dac:	imul   esp,DWORD PTR [rbp+0x79],0x6e
   140037db0:	(bad)  
   140037db1:	ins    DWORD PTR es:[rdi],dx
   140037db2:	add    BYTE PTR gs:[rax],al
   140037db5:	add    BYTE PTR [rax],al
   140037db7:	add    BYTE PTR [rdx+0x65],dl
   140037dba:	movsxd esi,DWORD PTR [rbp+0x72]
   140037dbd:	jae    0x140037e28
   140037dbf:	jbe    0x140037e26
   140037dc1:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140037dc3:	(bad)  
   140037dc4:	fs rex.RX jb 0x140037e37
   140037dc8:	ins    DWORD PTR es:[rdi],dx
   140037dc9:	rex.X jne 0x140037e32
   140037dcc:	data16 gs jb 0x140037e0a
   140037dd0:	and    BYTE PTR [rax],ah
   140037dd2:	outs   dx,DWORD PTR ds:[esi]
   140037dd4:	je     0x140037df6
   140037dd6:	rex.WRX push rbp
   140037dd8:	rex.WR
   140037dd9:	rex.WR and BYTE PTR [rbx+0x65],r13b
   140037ddd:	jns    0x140037ddf
   140037ddf:	add    BYTE PTR [rdx+0x65],dl
   140037de2:	movsxd esi,DWORD PTR [rbp+0x72]
   140037de5:	jae    0x140037e50
   140037de7:	jbe    0x140037e4e
   140037de9:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140037deb:	(bad)  
   140037dec:	fs rex.RX jb 0x140037e5f
   140037df0:	ins    DWORD PTR es:[rdi],dx
   140037df1:	rex.X jne 0x140037e5a
   140037df4:	data16 gs jb 0x140037e32
   140037df8:	and    BYTE PTR [rax],ah
   140037dfa:	outs   dx,DWORD PTR ds:[esi]
   140037dfc:	je     0x140037e1e
   140037dfe:	jge    0x140037e20
   140037e00:	imul   ebp,DWORD PTR [rsi+0x20],0x79656b
	...
   140037e0f:	add    BYTE PTR [rdx+0x65],dl
   140037e12:	movsxd esi,DWORD PTR [rbp+0x72]
   140037e15:	jae    0x140037e80
   140037e17:	jbe    0x140037e7e
   140037e19:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140037e1b:	(bad)  
   140037e1c:	fs rex.RX jb 0x140037e8f
   140037e20:	ins    DWORD PTR es:[rdi],dx
   140037e21:	rex.X jne 0x140037e8a
   140037e24:	data16 gs jb 0x140037e62
   140037e28:	and    BYTE PTR [rax],ah
   140037e2a:	outs   dx,DWORD PTR ds:[esi]
   140037e2c:	je     0x140037e4e
   140037e2e:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140037e31:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
   140037e3a:	(bad)  
   140037e3b:	gs je  0x140037eb5
   140037e3e:	gs outs dx,BYTE PTR gs:[rsi]
   140037e41:	and    BYTE PTR [rbx+0x65],ch
   140037e44:	jns    0x140037e66
   140037e46:	(bad)  
   140037e47:	outs   dx,BYTE PTR ds:[rsi]
   140037e48:	and    BYTE PTR fs:[rsi+0x61],dh
   140037e4c:	ins    BYTE PTR es:[rdi],dx
   140037e4d:	jne    0x140037eb4
   140037e4f:	add    BYTE PTR [rdx],cl
	...
   140037e59:	jg     0x140037e5e
   140037e5b:	rex add DWORD PTR [rax],eax
   140037e5e:	add    BYTE PTR [rax],al
   140037e60:	or     DWORD PTR [rax],eax
   140037e62:	add    BYTE PTR [rax],al
   140037e64:	add    BYTE PTR [rax],al
   140037e66:	add    BYTE PTR [rax],al
   140037e68:	add    al,0x7f
   140037e6a:	add    eax,DWORD PTR [rax+0x1]
   140037e6d:	add    BYTE PTR [rax],al
   140037e6f:	add    BYTE PTR [rbx],cl
   140037e71:	add    BYTE PTR [rax],al
   140037e73:	add    BYTE PTR [rax],al
   140037e75:	add    BYTE PTR [rax],al
   140037e77:	add    BYTE PTR [rax],cl
   140037e79:	jg     0x140037e7e
   140037e7b:	rex add DWORD PTR [rax],eax
   140037e7e:	add    BYTE PTR [rax],al
   140037e80:	or     BYTE PTR [rax],al
   140037e82:	add    BYTE PTR [rax],al
   140037e84:	add    BYTE PTR [rax],al
   140037e86:	add    BYTE PTR [rax],al
   140037e88:	or     al,0x7f
   140037e8a:	add    eax,DWORD PTR [rax+0x1]
   140037e8d:	add    BYTE PTR [rax],al
   140037e8f:	add    BYTE PTR [rip+0x0],cl        # 0x140037e95
   140037e95:	add    BYTE PTR [rax],al
   140037e97:	add    BYTE PTR [rax],dl
   140037e99:	jg     0x140037e9e
   140037e9b:	rex add DWORD PTR [rax],eax
   140037e9e:	add    BYTE PTR [rax],al
   140037ea0:	or     al,0x0
   140037ea2:	add    BYTE PTR [rax],al
   140037ea4:	add    BYTE PTR [rax],al
   140037ea6:	add    BYTE PTR [rax],al
   140037ea8:	adc    al,0x7f
   140037eaa:	add    eax,DWORD PTR [rax+0x1]
   140037ead:	add    BYTE PTR [rax],al
   140037eaf:	add    BYTE PTR [rdi],al
   140037eb1:	add    BYTE PTR [rax],al
   140037eb3:	add    BYTE PTR [rax],al
   140037eb5:	add    BYTE PTR [rax],al
   140037eb7:	add    BYTE PTR [rax],dl
   140037eb9:	xor    al,BYTE PTR [rbx]
   140037ebb:	rex add DWORD PTR [rax],eax
   140037ebe:	add    BYTE PTR [rax],al
   140037ec0:	pop    rsp
   140037ec1:	add    BYTE PTR [rax],al
   140037ec3:	add    BYTE PTR [rax],al
   140037ec5:	add    BYTE PTR [rax],al
   140037ec7:	add    BYTE PTR [rax],bl
   140037ec9:	jg     0x140037ece
   140037ecb:	rex add DWORD PTR [rax],eax
   140037ece:	add    BYTE PTR [rax],al
   140037ed0:	(bad)  
   140037ed1:	add    BYTE PTR [rax],al
   140037ed3:	add    BYTE PTR [rax],al
   140037ed5:	add    BYTE PTR [rax],al
   140037ed7:	add    BYTE PTR [rdi+rdi*2],bl
   140037eda:	add    eax,DWORD PTR [rax+0x1]
   140037edd:	add    BYTE PTR [rax],al
   140037edf:	add    BYTE PTR [rdi],ah
   140037ee1:	add    BYTE PTR [rax],al
   140037ee3:	add    BYTE PTR [rax],al
   140037ee5:	add    BYTE PTR [rax],al
   140037ee7:	add    BYTE PTR [rax],ah
   140037ee9:	jg     0x140037eee
   140037eeb:	rex add DWORD PTR [rax],eax
   140037eee:	add    BYTE PTR [rax],al
   140037ef0:	and    al,BYTE PTR [rax]
   140037ef2:	add    BYTE PTR [rax],al
   140037ef4:	add    BYTE PTR [rax],al
   140037ef6:	add    BYTE PTR [rax],al
   140037ef8:	cmp    BYTE PTR [rbx+rax*1+0x40],bh
   140037efc:	add    DWORD PTR [rax],eax
   140037efe:	add    BYTE PTR [rax],al
   140037f00:	outs   dx,BYTE PTR ds:[rsi]
   140037f01:	add    BYTE PTR [rax],al
   140037f03:	add    BYTE PTR [rax+rax*1+0x0],dh
   140037f07:	add    BYTE PTR [rsi+0x0],dh
   140037f0a:	add    BYTE PTR [rax],al
   140037f0c:	(bad)  
   140037f0d:	add    BYTE PTR [rax],al
   140037f0f:	add    BYTE PTR [rdx+0x0],dh
   140037f12:	add    BYTE PTR [rax],al
   140037f14:	data16 add BYTE PTR [rax],al
   140037f17:	add    BYTE PTR [rax+rax*1+0x0],bl
   140037f1b:	add    BYTE PTR [rdi],bh
   140037f1d:	add    BYTE PTR [rax],al
   140037f1f:	add    BYTE PTR [rdi],ah
   140037f21:	add    BYTE PTR [rax],al
   140037f23:	add    BYTE PTR [rax],al
   140037f25:	add    BYTE PTR [rax],al
   140037f27:	add    BYTE PTR [rax-0x3],ch
   140037f2a:	add    eax,DWORD PTR [rax+0x1]
   140037f2d:	add    BYTE PTR [rax],al
   140037f2f:	add    BYTE PTR [rax],dh
   140037f31:	adc    BYTE PTR [rdx],al
   140037f33:	rex add DWORD PTR [rax],eax
   140037f36:	add    BYTE PTR [rax],al
   140037f38:	loopne 0x140037f37
   140037f3a:	add    eax,DWORD PTR [rax+0x1]
   140037f3d:	add    BYTE PTR [rax],al
   140037f3f:	add    BYTE PTR [rax],dl
   140037f41:	adc    BYTE PTR [rdx],al
   140037f43:	rex add DWORD PTR [rax],eax
   140037f46:	add    BYTE PTR [rax],al
   140037f48:	rex.XB push r13
   140037f4a:	je     0x140037fb8
   140037f4c:	rex.X jne 0x140037fb5
   140037f4f:	data16 gs jb 0x140037f8d
   140037f53:	cmp    dl,BYTE PTR [rsi+0x61]
   140037f56:	push   rax
   140037f57:	jb     0x140037fc2
   140037f59:	outs   dx,BYTE PTR ds:[rsi]
   140037f5a:	je     0x140037fc2
   140037f5c:	cmp    ah,BYTE PTR [rax]
   140037f5e:	push   rbx
   140037f5f:	je     0x140037fd3
   140037f61:	imul   ebp,DWORD PTR [rsi+0x67],0x65766f20
   140037f68:	jb     0x140037fd0
   140037f6a:	ins    BYTE PTR es:[rdi],dx
   140037f6b:	outs   dx,DWORD PTR ds:[rsi]
   140037f6c:	ja     0x140037fd3
   140037f6e:	and    BYTE PTR fs:[rdx+0x75],ah
   140037f72:	data16 data16 gs jb 0x140037f97
   140037f77:	pop    rbx
   140037f78:	and    eax,0x5d756c6c
   140037f7d:	or     al,BYTE PTR [rax]
   140037f7f:	add    BYTE PTR [rbx+0x55],al
   140037f82:	je     0x140037ff0
   140037f84:	rex.X jne 0x140037fed
   140037f87:	data16 gs jb 0x140037fc5
   140037f8b:	cmp    dl,BYTE PTR [rsi+0x61]
   140037f8e:	push   rax
   140037f8f:	jb     0x140037ffa
   140037f91:	outs   dx,BYTE PTR ds:[rsi]
   140037f92:	je     0x140037ffa
	...
   140037fa0:	movsxd edi,DWORD PTR [rdx]
   140037fa2:	pop    rsp
   140037fa3:	(bad)  
   140037fa4:	jne    0x14003800f
   140037fa6:	ins    BYTE PTR es:[rdi],dx
   140037fa7:	fs jae 0x140038016
   140037faa:	(bad)  
   140037fab:	jbe    0x140038012
   140037fad:	pop    rsp
   140037fae:	jae    0x14003801f
   140037fb0:	jne    0x140038024
   140037fb2:	movsxd esp,DWORD PTR [rbp+0x32]
   140037fb5:	pop    rdi
   140037fb6:	outs   dx,DWORD PTR fs:[rsi]
   140037fb8:	je     0x14003801b
   140037fba:	pop    rdi
   140037fbb:	jb     0x140038022
   140037fbd:	ins    BYTE PTR es:[rdi],dx
   140037fbe:	pop    rdi
   140037fbf:	ja     0x14003802a
   140037fc1:	outs   dx,BYTE PTR ds:[rsi]
   140037fc2:	ss xor al,0x5c
   140037fc5:	(bad)  
   140037fc6:	jne    0x140038031
   140037fc8:	ins    BYTE PTR es:[rdi],dx
   140037fc9:	fs pop rsp
   140037fcb:	jae    0x14003803f
   140037fcd:	movsxd ebx,DWORD PTR [rsp+rsi*2+0x69]
   140037fd1:	gs jb  0x140038005
   140037fd4:	pop    rsp
   140037fd5:	jne    0x14003804b
   140037fd7:	ins    BYTE PTR es:[rdi],dx
   140037fd8:	(bad)  
   140037fd9:	jne    0x140038041
   140037fdb:	data16 gs jb 0x14003800d
   140037fdf:	movsxd esi,DWORD PTR [rax+0x70]
   140037fe2:	add    BYTE PTR [rax],al
   140037fe4:	or     eax,0x4300000a
   140037fe9:	push   rsp
   140037fea:	push   rbx
   140037feb:	imul   r14,QWORD PTR [rbx+0x74],0x65736142
   140037ff3:	cmp    ah,BYTE PTR [rax]
   140037ff5:	imul   r14,QWORD PTR [r11+0x61],0x6e67696c
   140037ffd:	gs and BYTE PTR fs:[rcx+rbp*2+0x73],ch
   140038003:	je     0x14003800f
   140038005:	add    BYTE PTR [rax],al
   140038007:	add    BYTE PTR [rbx+0x54],al
   14003800a:	push   rbx
   14003800b:	imul   r14,QWORD PTR [rbx+0x74],0x65736142
   140038013:	cmp    bh,BYTE PTR [rdx]
   140038015:	rex.XB push r12
   140038017:	push   rbx
   140038018:	imul   r14,QWORD PTR [rbx+0x74],0x65736142
	...
   140038030:	movsxd edi,DWORD PTR [rdx]
   140038032:	pop    rsp
   140038033:	(bad)  
   140038034:	jne    0x14003809f
   140038036:	ins    BYTE PTR es:[rdi],dx
   140038037:	fs jae 0x1400380a6
   14003803a:	(bad)  
   14003803b:	jbe    0x1400380a2
   14003803d:	pop    rsp
   14003803e:	jae    0x1400380af
   140038040:	jne    0x1400380b4
   140038042:	movsxd esp,DWORD PTR [rbp+0x32]
   140038045:	pop    rdi
   140038046:	outs   dx,DWORD PTR fs:[rsi]
   140038048:	je     0x1400380ab
   14003804a:	pop    rdi
   14003804b:	jb     0x1400380b2
   14003804d:	ins    BYTE PTR es:[rdi],dx
   14003804e:	pop    rdi
   14003804f:	ja     0x1400380ba
   140038051:	outs   dx,BYTE PTR ds:[rsi]
   140038052:	ss xor al,0x5c
   140038055:	(bad)  
   140038056:	jne    0x1400380c1
   140038058:	ins    BYTE PTR es:[rdi],dx
   140038059:	fs pop rsp
   14003805b:	jae    0x1400380cf
   14003805d:	movsxd ebx,DWORD PTR [rax+rsi*2+0x75]
   140038061:	(bad)  
   140038062:	ins    BYTE PTR es:[rdi],dx
   140038063:	imul   esp,DWORD PTR [rbx+0x5c],0x72656974
   14003806a:	xor    BYTE PTR [rsp+rsi*2+0x73],bl
   14003806e:	ins    BYTE PTR es:[rdi],dx
   14003806f:	imul   esi,DWORD PTR [rbx+0x74],0x682e
   140038076:	add    BYTE PTR [rax],al
   140038078:	pop    rsp
   140038079:	add    BYTE PTR [rax+rax*1+0x3f],bl
   14003807d:	add    BYTE PTR [rax+rax*1+0x55],bl
   140038081:	add    BYTE PTR [rsi+0x0],cl
   140038084:	add    BYTE PTR [r8+r8*1+0x0],bl
   140038089:	add    BYTE PTR [rax],al
   14003808b:	add    BYTE PTR [rax],al
   14003808d:	add    BYTE PTR [rax],al
   14003808f:	add    BYTE PTR [rax+rax*1+0x5c],bl
   140038093:	add    BYTE PTR [rdi],bh
   140038095:	add    BYTE PTR [rax+rax*1+0x0],bl
   140038099:	add    BYTE PTR [rax],al
   14003809b:	add    BYTE PTR [rcx+0x4d],al
   14003809e:	add    BYTE PTR [rax],al
   1400380a0:	push   rax
   1400380a1:	rex.WRB add BYTE PTR [r8],r8b
	...
   1400380b0:	and    BYTE PTR [rax],ah
   1400380b2:	and    BYTE PTR [rax],ah
   1400380b4:	and    BYTE PTR [rax],ah
   1400380b6:	and    BYTE PTR [rax],ah
   1400380b8:	and    BYTE PTR [rax],ah
   1400380ba:	and    BYTE PTR [rax],ah
   1400380bc:	and    BYTE PTR [rax],ah
   1400380be:	and    BYTE PTR [rax],ah
   1400380c0:	rex.B
   1400380c1:	rex.B
   1400380c2:	rex.B
   1400380c3:	rex.B
   1400380c4:	rex.B
   1400380c5:	rex.B
   1400380c6:	rex.B
   1400380c7:	rex.B
   1400380c8:	rex.B
   1400380c9:	rex.B
   1400380ca:	rex.B
   1400380cb:	rex.B
   1400380cc:	rex.B
   1400380cd:	rex.B
   1400380ce:	rex.B
   1400380cf:	pop    r10
   1400380d1:	pop    rdx
   1400380d2:	pop    rdx
   1400380d3:	pop    rdx
   1400380d4:	pop    rdx
   1400380d5:	pop    rdx
   1400380d6:	pop    rdx
   1400380d7:	pop    rdx
   1400380d8:	pop    rdx
   1400380d9:	pop    rdx
   1400380da:	pop    rdx
   1400380db:	pop    rdx
   1400380dc:	pop    rdx
   1400380dd:	pop    rdx
   1400380de:	pop    rdx
   1400380df:	pop    rdx
   1400380e0:	(bad)  
   1400380e1:	(bad)  
   1400380e2:	(bad)  
   1400380e3:	(bad)  
   1400380e4:	(bad)  
   1400380e5:	(bad)  
   1400380e6:	(bad)  
   1400380e7:	(bad)  
   1400380e8:	(bad)  
   1400380e9:	(bad)  
   1400380ea:	(bad)  
   1400380eb:	(bad)  
   1400380ec:	(bad)  
   1400380ed:	(bad)  
   1400380ee:	(bad)  
   1400380ef:	call   FWORD PTR [rsi+rbp*2+0x0]
   1400380f3:	add    BYTE PTR [rsp+rsi*2+0x0],bl
   1400380f7:	add    BYTE PTR [rdi+riz*1+0x0],bl
   1400380fb:	add    BYTE PTR [rdx+riz*1+0x0],bl
   1400380ff:	add    BYTE PTR [rax],ah
   140038101:	or     DWORD PTR [rdx],ecx
   140038103:	or     eax,0x0
   140038108:	and    ah,BYTE PTR [rdx]
   14003810a:	or     eax,0xa
   14003810f:	add    BYTE PTR [rdx],ah
   140038111:	and    cl,BYTE PTR [rdx]
   140038113:	add    BYTE PTR [rdx],ah
   140038115:	and    ah,BYTE PTR [rdx]
   140038117:	or     eax,0xa
   14003811c:	or     eax,0x2222220a
   140038121:	add    BYTE PTR [rax],al
   140038123:	add    BYTE PTR [rax],al
   140038125:	add    BYTE PTR [rax],al
   140038127:	add    BYTE PTR [rsi+0x65],cl
   14003812a:	ja     0x140038198
   14003812c:	imul   ebp,DWORD PTR [rsi+0x65],0x206e6920
   140038133:	jae    0x1400381a9
   140038135:	jb     0x1400381a0
   140038137:	outs   dx,BYTE PTR ds:[rsi]
   140038138:	and    BYTE PTR [ecx+ebp*2+0x74],ch
   14003813d:	gs jb  0x1400381a1
   140038140:	ins    BYTE PTR es:[rdi],dx
   140038141:	add    BYTE PTR [rax],al
   140038143:	add    BYTE PTR [rax],al
   140038145:	add    BYTE PTR [rax],al
   140038147:	add    BYTE PTR [rbp+0x50],dl
   14003814a:	rex.R
   14003814b:	push   r12
   14003814d:	rex.RB pop r15
   14003814f:	push   rbx
   140038150:	push   rsp
   140038151:	push   rdx
   140038152:	rex.WB
   140038153:	rex.WRX
   140038154:	rex.RXB pop r15
   140038156:	push   rsp
   140038157:	rex.WRXB
   140038158:	rex.WXB
   140038159:	rex.RB
   14003815a:	rex.WRX pop rdi
   14003815c:	rex.R
   14003815d:	push   r12
   14003815f:	rex.B
   140038160:	rex.X
   140038161:	push   r11
   140038163:	add    BYTE PTR [r8],r8b
   140038166:	add    BYTE PTR [rax],al
   140038168:	push   rdi
   140038169:	rex.WB
   14003816a:	rex.WRX xor r14,QWORD PTR [rdx]
   14003816d:	add    BYTE PTR [rax],al
   14003816f:	add    BYTE PTR [rdi+0x49],dl
   140038172:	rex.WRX
   140038173:	rex.R
   140038174:	rex.WRXB push r15
   140038176:	push   rbx
   140038177:	add    BYTE PTR [rax+0x33],bl
   14003817a:	xor    BYTE PTR ss:[rax],al
   14003817d:	add    BYTE PTR [rax],al
   14003817f:	add    BYTE PTR [rax+0x53],dl
   140038182:	xor    eax,DWORD PTR [rax]
   140038184:	rex.WRXB push r11
   140038186:	pop    rax
   140038187:	add    BYTE PTR [rcx+rcx*2+0x4e],cl
   14003818b:	push   rbp
   14003818c:	pop    rax
   14003818d:	add    BYTE PTR [rax],al
   14003818f:	add    BYTE PTR [rax+0x4f],dl
   140038192:	push   rbx
   140038193:	rex.WB pop r8
   140038195:	add    BYTE PTR [rax],al
   140038197:	add    BYTE PTR [rdi+0x49],dl
   14003819a:	rex.WRX pop rax
   14003819c:	push   rax
   14003819d:	add    BYTE PTR [rax],al
   14003819f:	add    BYTE PTR [rdi+0x41],al
   1400381a2:	rex.WRB
   1400381a3:	rex.RB
   1400381a4:	rex.XB
   1400381a5:	rex.WRXB
   1400381a6:	rex.WRX push rbx
   1400381a8:	rex.WRXB
   1400381a9:	rex.WR
   1400381aa:	add    BYTE PTR [r13+rax*2+0x4d],r8b
   1400381af:	rex.WRXB add BYTE PTR [r8],r8b
   1400381b2:	add    BYTE PTR [rax],al
   1400381b4:	add    BYTE PTR [rax],al
   1400381b6:	add    BYTE PTR [rax],al
   1400381b8:	rex.WR
   1400381b9:	rex.WRXB push r15
   1400381bb:	push   rsi
   1400381bc:	rex.WB
   1400381bd:	rex.WRXB
   1400381be:	rex.WR
   1400381bf:	rex.RB
   1400381c0:	rex.WRX
   1400381c1:	rex.XB
   1400381c2:	add    BYTE PTR [r8],r8b
   1400381c5:	add    BYTE PTR [rax],al
   1400381c7:	add    BYTE PTR [rax+0x49],cl
   1400381ca:	rex.RXB
   1400381cb:	rex.W
   1400381cc:	rex.R push rax
   1400381ce:	rex.WB add BYTE PTR [r11+0x6f],al
   1400381d2:	outs   dx,BYTE PTR ds:[rsi]
   1400381d3:	imul   esi,DWORD PTR fs:[rcx+rbp*2+0x6f],0x206c616e
   1400381dc:	rex.RB jb 0x140038251
   1400381df:	outs   dx,DWORD PTR ds:[rsi]
   1400381e0:	jb     0x14003821c
   1400381e2:	and    BYTE PTR [rip+0xa73],ah        # 0x140038c5b
	...
   1400381f0:	rex.X (bad) 
   1400381f2:	and    BYTE PTR fs:[rbp+0x78],ah
   1400381f6:	jo     0x14003826a
   1400381f8:	gs jae 0x14003826e
   1400381fb:	imul   ebp,DWORD PTR [rdi+0x6e],0x65706f20
   140038202:	jb     0x140038265
   140038204:	je     0x140038275
   140038206:	jb     0x140038242
   140038208:	and    BYTE PTR [rdi],ah
   14003820a:	and    eax,0x27632563
   14003820f:	sub    al,0x20
   140038211:	gs js  0x140038284
   140038214:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140038219:	and    BYTE PTR [rbx+0x20],al
   14003821c:	jae    0x140038292
   14003821e:	jns    0x14003828c
   140038220:	and    BYTE PTR gs:[rdx+0x6f],ah
   140038224:	outs   dx,DWORD PTR ds:[rsi]
   140038225:	ins    BYTE PTR es:[rdi],dx
   140038226:	gs (bad) 
   140038228:	outs   dx,BYTE PTR ds:[rsi]
   140038229:	and    BYTE PTR [rbp+0x78],ah
   14003822c:	jo     0x1400382a0
   14003822e:	gs jae 0x1400382a4
   140038231:	imul   ebp,DWORD PTR [rdi+0x6e],0x65706f20
   140038238:	jb     0x14003829b
   14003823a:	je     0x1400382ab
   14003823c:	jb     0x14003826c
   14003823e:	add    BYTE PTR [rax],al
   140038240:	rex.X (bad) 
   140038242:	and    BYTE PTR fs:[rbp+0x78],ah
   140038246:	jo     0x1400382ba
   140038248:	gs jae 0x1400382be
   14003824b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6b6f7420
   140038252:	outs   dx,BYTE PTR gs:[rsi]
   140038254:	cmp    ah,BYTE PTR [rax]
   140038256:	and    eax,0x63
   14003825b:	add    BYTE PTR [rax],al
   14003825d:	add    BYTE PTR [rax],al
   14003825f:	add    BYTE PTR [rdx+0x61],al
   140038262:	and    BYTE PTR fs:[rbp+0x78],ah
   140038266:	jo     0x1400382da
   140038268:	gs jae 0x1400382de
   14003826b:	imul   ebp,DWORD PTR [rdi+0x6e],0x6e797320
   140038272:	je     0x1400382d5
   140038274:	js     0x1400382b0
   140038276:	and    BYTE PTR [rdi],ah
   140038278:	and    eax,0x202c2773
   14003827d:	gs js  0x1400382f0
   140038280:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140038285:	and    BYTE PTR [rcx+0x20],ah
   140038288:	jae    0x1400382f3
   14003828a:	outs   dx,BYTE PTR ds:[rsi]
   14003828b:	ins    BYTE PTR es:[edi],dx
   14003828d:	and    BYTE PTR gs:[rbp+0x61],ch
   140038291:	je     0x1400382f6
   140038293:	push   0x20676e69
   140038298:	jo     0x1400382fb
   14003829a:	imul   esi,DWORD PTR [rdx+0x20],0x6520666f
   1400382a1:	outs   dx,BYTE PTR ds:[rsi]
   1400382a2:	movsxd ebp,DWORD PTR [rdi+rbp*2+0x73]
   1400382a6:	imul   ebp,DWORD PTR [rsi+0x67],0x61726220
   1400382ad:	movsxd esp,DWORD PTR [rbp+0x73]
   1400382b0:	add    BYTE PTR cs:[rax],al
   1400382b3:	add    BYTE PTR [rax],al
   1400382b5:	add    BYTE PTR [rax],al
   1400382b7:	add    BYTE PTR [rsi+0x53],dl
   1400382ba:	movsxd esi,DWORD PTR [rdx+0x69]
   1400382bd:	jo     0x140038333
   1400382bf:	add    BYTE PTR [rsi+0x53],dl
   1400382c2:	movsxd esi,DWORD PTR [rdx+0x69]
   1400382c5:	jo     0x14003833b
   1400382c7:	rex.R (bad) 
   1400382c9:	add    BYTE PTR [eax],al
   1400382cc:	add    BYTE PTR [rax],al
   1400382ce:	add    BYTE PTR [rax],al
   1400382d0:	(bad)  
   1400382d1:	inc    BYTE PTR [rbx]
   1400382d3:	rex add DWORD PTR [rax],eax
   1400382d6:	add    BYTE PTR [rax],al
   1400382d8:	loopne 0x140038328
   1400382da:	add    al,BYTE PTR [rax+0x1]
   1400382dd:	add    BYTE PTR [rax],al
   1400382df:	add    BYTE PTR [rdi+0x61],bl
   1400382e2:	fs outs dx,DWORD PTR fs:[rsi]
   1400382e5:	outs   dx,BYTE PTR ds:[rsi]
   1400382e6:	jae    0x1400382e8
   1400382e8:	cmp    bh,bh
   1400382ea:	add    eax,DWORD PTR [rax+0x1]
   1400382ed:	add    BYTE PTR [rax],al
   1400382ef:	add    BYTE PTR [rax+0x5c],ah
   1400382f2:	add    al,BYTE PTR [rax+0x1]
   1400382f5:	add    BYTE PTR [rax],al
   1400382f7:	add    BYTE PTR [rax+0x14001e1],dh
   1400382fd:	add    BYTE PTR [rax],al
   1400382ff:	add    BYTE PTR [rax+0x14001e1],dh
   140038305:	add    BYTE PTR [rax],al
   140038307:	add    BYTE PTR [rax+0x14001e1],dh
   14003830d:	add    BYTE PTR [rax],al
   14003830f:	add    BYTE PTR [rax],al
   140038311:	pop    rbx
   140038312:	add    al,BYTE PTR [rax+0x1]
   140038315:	add    BYTE PTR [rax],al
   140038317:	add    BYTE PTR [rax+0x5b],dh
   14003831a:	add    al,BYTE PTR [rax+0x1]
   14003831d:	add    BYTE PTR [rax],al
   14003831f:	add    al,dh
   140038321:	pop    rdx
   140038322:	add    al,BYTE PTR [rax+0x1]
   140038325:	add    BYTE PTR [rax],al
   140038327:	add    al,al
   140038329:	pop    rsi
   14003832a:	add    al,BYTE PTR [rax+0x1]
   14003832d:	add    BYTE PTR [rax],al
   14003832f:	add    al,dl
   140038331:	pop    rdx
   140038332:	add    al,BYTE PTR [rax+0x1]
   140038335:	add    BYTE PTR [rax],al
   140038337:	add    BYTE PTR [rax+0x5e],ah
   14003833a:	add    al,BYTE PTR [rax+0x1]
   14003833d:	add    BYTE PTR [rax],al
   14003833f:	add    al,ah
   140038341:	pop    rbp
   140038342:	add    al,BYTE PTR [rax+0x1]
   140038345:	add    BYTE PTR [rax],al
   140038347:	add    BYTE PTR [rip+0x2f693230],ah        # 0x16f6cb57d
   14003834d:	and    eax,0x2f693230
   140038352:	and    eax,0x20693430
   140038357:	sub    eax,0x32302520
   14003835c:	imul   edi,DWORD PTR [rdx],0x69323025
   140038362:	cmp    ah,BYTE PTR [rip+0x693230]        # 0x1406cb598
   140038368:	cmp    ah,BYTE PTR [rax]
   14003836a:	add    BYTE PTR [rax],al
   14003836c:	pop    rbx
   14003836d:	and    eax,0x205d73
   140038372:	add    BYTE PTR [rax],al
   140038374:	add    BYTE PTR [rax],al
   140038376:	add    BYTE PTR [rax],al
   140038378:	sar    bh,0x3
   14003837b:	rex add DWORD PTR [rax],eax
   14003837e:	add    BYTE PTR [rax],al
   140038380:	movabs al,ds:0x400000000140025f
   140038389:	(bad)  
   14003838a:	add    al,BYTE PTR [rax+0x1]
   14003838d:	add    BYTE PTR [rax],al
   14003838f:	add    BYTE PTR [rax+0x1400260],dl
   140038395:	add    BYTE PTR [rax],al
   140038397:	add    al,dh
   140038399:	pop    rdi
   14003839a:	add    al,BYTE PTR [rax+0x1]
   14003839d:	add    BYTE PTR [rax],al
   14003839f:	add    al,ah
   1400383a1:	(bad)  
   1400383a2:	add    al,BYTE PTR [rax+0x1]
   1400383a5:	add    BYTE PTR [rax],al
   1400383a7:	add    BYTE PTR [rax+0x61],ah
   1400383aa:	add    al,BYTE PTR [rax+0x1]
   1400383ad:	add    BYTE PTR [rax],al
   1400383af:	add    BYTE PTR [rax],ah
   1400383b1:	(bad)  
   1400383b2:	add    al,BYTE PTR [rax+0x1]
   1400383b5:	add    BYTE PTR [rax],al
   1400383b7:	add    BYTE PTR [rax],bh
   1400383b9:	add    BYTE PTR [rax+rax*2],al
   1400383bc:	add    DWORD PTR [rax],eax
   1400383be:	add    BYTE PTR [rax],al
   1400383c0:	adc    al,0x64
   1400383c2:	add    al,BYTE PTR [rax+0x1]
	...
   1400383cd:	add    BYTE PTR [rax],al
   1400383cf:	add    al,dh
   1400383d1:	xchg   BYTE PTR [rbx],al
   1400383d3:	rex add DWORD PTR [rax],eax
   1400383d6:	add    BYTE PTR [rax],al
   1400383d8:	add    BYTE PTR [rdi+0x14003],al
   1400383de:	add    BYTE PTR [rax],al
   1400383e0:	or     BYTE PTR [rdi+0x14003],al
   1400383e6:	add    BYTE PTR [rax],al
   1400383e8:	sbb    BYTE PTR [rdi+0x14003],al
   1400383ee:	add    BYTE PTR [rax],al
   1400383f0:	sub    BYTE PTR [rdi+0x14003],al
   1400383f6:	add    BYTE PTR [rax],al
   1400383f8:	cmp    BYTE PTR [rdi+0x14003],al
   1400383fe:	add    BYTE PTR [rax],al
   140038400:	xchg   QWORD PTR [rbx],rax
   140038403:	rex add DWORD PTR [rax],eax
   140038406:	add    BYTE PTR [rax],al
   140038408:	pop    rax
   140038409:	xchg   DWORD PTR [rbx],eax
   14003840b:	rex add DWORD PTR [rax],eax
   14003840e:	add    BYTE PTR [rax],al
   140038410:	xchg   DWORD PTR fs:[rbx],eax
   140038413:	rex add DWORD PTR [rax],eax
   140038416:	add    BYTE PTR [rax],al
   140038418:	jo     0x1400383a1
   14003841a:	add    eax,DWORD PTR [rax+0x1]
   14003841d:	add    BYTE PTR [rax],al
   14003841f:	add    BYTE PTR [rax-0x79],bh
   140038422:	add    eax,DWORD PTR [rax+0x1]
   140038425:	add    BYTE PTR [rax],al
   140038427:	add    BYTE PTR [rax+0x1400387],cl
   14003842d:	add    BYTE PTR [rax],al
   14003842f:	add    BYTE PTR [rax+0x1400387],bl
   140038435:	add    BYTE PTR [rax],al
   140038437:	add    BYTE PTR [rax+0x1400327],ah
   14003843d:	add    BYTE PTR [rax],al
   14003843f:	add    BYTE PTR [rdi+rax*4+0x14003],ah
   140038446:	add    BYTE PTR [rax],al
   140038448:	mov    al,0x87
   14003844a:	add    eax,DWORD PTR [rax+0x1]
   14003844d:	add    BYTE PTR [rax],al
   14003844f:	add    BYTE PTR [rbx+rbp*2+0x3],cl
   140038453:	rex add DWORD PTR [rax],eax
   140038456:	add    BYTE PTR [rax],al
   140038458:	mov    eax,0x1400387
   14003845d:	add    BYTE PTR [rax],al
   14003845f:	add    BYTE PTR [rdi+rax*4+0x14003],bh
   140038466:	add    BYTE PTR [rax],al
   140038468:	rol    BYTE PTR [rdi+0x14003],0x0
   14003846f:	add    ah,al
   140038471:	xchg   DWORD PTR [rbx],eax
   140038473:	rex add DWORD PTR [rax],eax
   140038476:	add    BYTE PTR [rax],al
   140038478:	enter  0x387,0x40
   14003847c:	add    DWORD PTR [rax],eax
   14003847e:	add    BYTE PTR [rax],al
   140038480:	int3   
   140038481:	xchg   DWORD PTR [rbx],eax
   140038483:	rex add DWORD PTR [rax],eax
   140038486:	add    BYTE PTR [rax],al
   140038488:	rol    BYTE PTR [rdi+0x14003],1
   14003848e:	add    BYTE PTR [rax],al
   140038490:	fadd   QWORD PTR [rdi+0x14003]
   140038496:	add    BYTE PTR [rax],al
   140038498:	cwde   
   140038499:	outs   dx,BYTE PTR ds:[rsi]
   14003849a:	add    eax,DWORD PTR [rax+0x1]
   14003849d:	add    BYTE PTR [rax],al
   14003849f:	add    al,ah
   1400384a1:	xchg   DWORD PTR [rbx],eax
   1400384a3:	rex add DWORD PTR [rax],eax
   1400384a6:	add    BYTE PTR [rax],al
   1400384a8:	in     al,0x87
   1400384aa:	add    eax,DWORD PTR [rax+0x1]
   1400384ad:	add    BYTE PTR [rax],al
   1400384af:	add    al,ch
   1400384b1:	xchg   DWORD PTR [rbx],eax
   1400384b3:	rex add DWORD PTR [rax],eax
   1400384b6:	add    BYTE PTR [rax],al
   1400384b8:	xor    al,0x67
   1400384ba:	add    eax,DWORD PTR [rax+0x1]
   1400384bd:	add    BYTE PTR [rax],al
   1400384bf:	add    BYTE PTR [rsi+rbp*2+0x14003],bl
   1400384c6:	add    BYTE PTR [rax],al
   1400384c8:	in     al,dx
   1400384c9:	xchg   DWORD PTR [rbx],eax
   1400384cb:	rex add DWORD PTR [rax],eax
   1400384ce:	add    BYTE PTR [rax],al
   1400384d0:	lock xchg DWORD PTR [rbx],eax
   1400384d3:	rex add DWORD PTR [rax],eax
   1400384d6:	add    BYTE PTR [rax],al
   1400384d8:	hlt    
   1400384d9:	xchg   DWORD PTR [rbx],eax
   1400384db:	rex add DWORD PTR [rax],eax
   1400384de:	add    BYTE PTR [rax],al
   1400384e0:	clc    
   1400384e1:	xchg   DWORD PTR [rbx],eax
   1400384e3:	rex add DWORD PTR [rax],eax
   1400384e6:	add    BYTE PTR [rax],al
   1400384e8:	cld    
   1400384e9:	xchg   DWORD PTR [rbx],eax
   1400384eb:	rex add DWORD PTR [rax],eax
   1400384ee:	add    BYTE PTR [rax],al
   1400384f0:	add    BYTE PTR [rax+0x14003],cl
   1400384f6:	add    BYTE PTR [rax],al
   1400384f8:	add    al,0x88
   1400384fa:	add    eax,DWORD PTR [rax+0x1]
   1400384fd:	add    BYTE PTR [rax],al
   1400384ff:	add    BYTE PTR [rdi+riz*2+0x3],bh
   140038503:	rex add DWORD PTR [rax],eax
   140038506:	add    BYTE PTR [rax],al
   140038508:	or     BYTE PTR [rax+0x14003],cl
   14003850e:	add    BYTE PTR [rax],al
   140038510:	or     al,0x88
   140038512:	add    eax,DWORD PTR [rax+0x1]
   140038515:	add    BYTE PTR [rax],al
   140038517:	add    BYTE PTR [rax],dl
   140038519:	mov    BYTE PTR [rbx],al
   14003851b:	rex add DWORD PTR [rax],eax
   14003851e:	add    BYTE PTR [rax],al
   140038520:	adc    al,0x88
   140038522:	add    eax,DWORD PTR [rax+0x1]
   140038525:	add    BYTE PTR [rax],al
   140038527:	add    BYTE PTR [rax],bl
   140038529:	mov    BYTE PTR [rbx],al
   14003852b:	rex add DWORD PTR [rax],eax
   14003852e:	add    BYTE PTR [rax],al
   140038530:	sbb    al,0x88
   140038532:	add    eax,DWORD PTR [rax+0x1]
   140038535:	add    BYTE PTR [rax],al
   140038537:	add    BYTE PTR [rax],ah
   140038539:	mov    BYTE PTR [rbx],al
   14003853b:	rex add DWORD PTR [rax],eax
   14003853e:	add    BYTE PTR [rax],al
   140038540:	and    al,0x88
   140038542:	add    eax,DWORD PTR [rax+0x1]
   140038545:	add    BYTE PTR [rax],al
   140038547:	add    BYTE PTR [rax],ch
   140038549:	mov    BYTE PTR [rbx],al
   14003854b:	rex add DWORD PTR [rax],eax
   14003854e:	add    BYTE PTR [rax],al
   140038550:	sub    al,0x88
   140038552:	add    eax,DWORD PTR [rax+0x1]
   140038555:	add    BYTE PTR [rax],al
   140038557:	add    BYTE PTR [rax],dh
   140038559:	mov    BYTE PTR [rbx],al
   14003855b:	rex add DWORD PTR [rax],eax
   14003855e:	add    BYTE PTR [rax],al
   140038560:	xor    al,0x88
   140038562:	add    eax,DWORD PTR [rax+0x1]
   140038565:	add    BYTE PTR [rax],al
   140038567:	add    BYTE PTR [rax],bh
   140038569:	mov    BYTE PTR [rbx],al
   14003856b:	rex add DWORD PTR [rax],eax
   14003856e:	add    BYTE PTR [rax],al
   140038570:	cmp    al,0x88
   140038572:	add    eax,DWORD PTR [rax+0x1]
   140038575:	add    BYTE PTR [rax],al
   140038577:	add    BYTE PTR [rax-0x78],al
   14003857a:	add    eax,DWORD PTR [rax+0x1]
   14003857d:	add    BYTE PTR [rax],al
   14003857f:	add    BYTE PTR [rax+rcx*4+0x3],al
   140038583:	rex add DWORD PTR [rax],eax
   140038586:	add    BYTE PTR [rax],al
   140038588:	rex.W mov BYTE PTR [rbx],al
   14003858b:	rex add DWORD PTR [rax],eax
   14003858e:	add    BYTE PTR [rax],al
   140038590:	pop    rax
   140038591:	mov    BYTE PTR [rbx],al
   140038593:	rex add DWORD PTR [rax],eax
   140038596:	add    BYTE PTR [rax],al
   140038598:	push   0x1400388
   14003859d:	add    BYTE PTR [rax],al
   14003859f:	add    BYTE PTR [rax-0x78],dh
   1400385a2:	add    eax,DWORD PTR [rax+0x1]
   1400385a5:	add    BYTE PTR [rax],al
   1400385a7:	add    BYTE PTR [rax+0x1400388],al
   1400385ad:	add    BYTE PTR [rax],al
   1400385af:	add    BYTE PTR [rax+0x1400388],bl
   1400385b5:	add    BYTE PTR [rax],al
   1400385b7:	add    BYTE PTR [rax+0x1400388],ch
   1400385bd:	add    BYTE PTR [rax],al
   1400385bf:	add    al,al
   1400385c1:	mov    BYTE PTR [rbx],al
   1400385c3:	rex add DWORD PTR [rax],eax
   1400385c6:	add    BYTE PTR [rax],al
   1400385c8:	loopne 0x140038552
   1400385ca:	add    eax,DWORD PTR [rax+0x1]
   1400385cd:	add    BYTE PTR [rax],al
   1400385cf:	add    BYTE PTR [rax],al
   1400385d1:	mov    DWORD PTR [rbx],eax
   1400385d3:	rex add DWORD PTR [rax],eax
   1400385d6:	add    BYTE PTR [rax],al
   1400385d8:	and    BYTE PTR [rcx+0x14003],cl
   1400385de:	add    BYTE PTR [rax],al
   1400385e0:	rex mov DWORD PTR [rbx],eax
   1400385e3:	rex add DWORD PTR [rax],eax
   1400385e6:	add    BYTE PTR [rax],al
   1400385e8:	(bad)  
   1400385e9:	mov    DWORD PTR [rbx],eax
   1400385eb:	rex add DWORD PTR [rax],eax
   1400385ee:	add    BYTE PTR [rax],al
   1400385f0:	mov    BYTE PTR [rcx+0x14003],cl
   1400385f6:	add    BYTE PTR [rax],al
   1400385f8:	test   al,0x89
   1400385fa:	add    eax,DWORD PTR [rax+0x1]
   1400385fd:	add    BYTE PTR [rax],al
   1400385ff:	add    al,dl
   140038601:	mov    DWORD PTR [rbx],eax
   140038603:	rex add DWORD PTR [rax],eax
   140038606:	add    BYTE PTR [rax],al
   140038608:	lock mov DWORD PTR [rbx],eax
   14003860b:	rex add DWORD PTR [rax],eax
   14003860e:	add    BYTE PTR [rax],al
   140038610:	sbb    BYTE PTR [rdx+0x14003],cl
   140038616:	add    BYTE PTR [rax],al
   140038618:	cmp    BYTE PTR [rdx+0x14003],cl
   14003861e:	add    BYTE PTR [rax],al
   140038620:	rex.W mov al,BYTE PTR [rbx]
   140038623:	rex add DWORD PTR [rax],eax
   140038626:	add    BYTE PTR [rax],al
   140038628:	rex.WR mov r8b,BYTE PTR [rbx]
   14003862b:	rex add DWORD PTR [rax],eax
   14003862e:	add    BYTE PTR [rax],al
   140038630:	pop    rax
   140038631:	mov    al,BYTE PTR [rbx]
   140038633:	rex add DWORD PTR [rax],eax
   140038636:	add    BYTE PTR [rax],al
   140038638:	push   0x140038a
   14003863d:	add    BYTE PTR [rax],al
   14003863f:	add    BYTE PTR [rdx+rcx*4+0x14003],cl
   140038646:	add    BYTE PTR [rax],al
   140038648:	cwde   
   140038649:	mov    al,BYTE PTR [rbx]
   14003864b:	rex add DWORD PTR [rax],eax
   14003864e:	add    BYTE PTR [rax],al
   140038650:	test   al,0x8a
   140038652:	add    eax,DWORD PTR [rax+0x1]
   140038655:	add    BYTE PTR [rax],al
   140038657:	add    BYTE PTR [rax+0x140038a],bh
   14003865d:	add    BYTE PTR [rax],al
   14003865f:	add    al,bl
   140038661:	mov    al,BYTE PTR [rbx]
   140038663:	rex add DWORD PTR [rax],eax
   140038666:	add    BYTE PTR [rax],al
   140038668:	clc    
   140038669:	mov    al,BYTE PTR [rbx]
   14003866b:	rex add DWORD PTR [rax],eax
   14003866e:	add    BYTE PTR [rax],al
   140038670:	and    BYTE PTR [rbx+0x14003],cl
   140038676:	add    BYTE PTR [rax],al
   140038678:	mov    rax,QWORD PTR [rbx]
   14003867b:	rex add DWORD PTR [rax],eax
   14003867e:	add    BYTE PTR [rax],al
   140038680:	jo     0x14003860d
   140038682:	add    eax,DWORD PTR [rax+0x1]
   140038685:	add    BYTE PTR [rax],al
   140038687:	add    BYTE PTR [rax+0x140038b],ah
   14003868d:	add    BYTE PTR [rax],al
   14003868f:	add    al,al
   140038691:	mov    eax,DWORD PTR [rbx]
   140038693:	rex add DWORD PTR [rax],eax
   140038696:	add    BYTE PTR [rax],al
   140038698:	call   0x141438a28
   14003869d:	add    BYTE PTR [rax],al
   14003869f:	add    BYTE PTR [rax],dl
   1400386a1:	mov    WORD PTR [rbx],es
   1400386a3:	rex add DWORD PTR [rax],eax
   1400386a6:	add    BYTE PTR [rax],al
   1400386a8:	rex mov WORD PTR [rbx],es
   1400386ab:	rex add DWORD PTR [rax],eax
   1400386ae:	add    BYTE PTR [rax],al
   1400386b0:	jo     0x14003863e
   1400386b2:	add    eax,DWORD PTR [rax+0x1]
   1400386b5:	add    BYTE PTR [rax],al
   1400386b7:	add    BYTE PTR [rax+0x140038c],dl
   1400386bd:	add    BYTE PTR [rax],al
   1400386bf:	add    BYTE PTR [rax+0x1400327],ah
   1400386c5:	add    BYTE PTR [rax],al
   1400386c7:	add    BYTE PTR [rax+0x140038c],ah
   1400386cd:	add    BYTE PTR [rax],al
   1400386cf:	add    BYTE PTR [rax+0x140038c],bh
   1400386d5:	add    BYTE PTR [rax],al
   1400386d7:	add    al,bl
   1400386d9:	mov    WORD PTR [rbx],es
   1400386db:	rex add DWORD PTR [rax],eax
   1400386de:	add    BYTE PTR [rax],al
   1400386e0:	lock mov WORD PTR [rbx],es
   1400386e3:	rex add DWORD PTR [rax],eax
   1400386e6:	add    BYTE PTR [rax],al
   1400386e8:	adc    BYTE PTR [rbp+0x14003],cl
   1400386ee:	add    BYTE PTR [rax],al
   1400386f0:	pop    rdi
   1400386f1:	pop    rdi
   1400386f2:	(bad)  
   1400386f4:	jae    0x14003875b
   1400386f6:	sub    BYTE PTR fs:[rax],al
   1400386f9:	add    BYTE PTR [rax],al
   1400386fb:	add    BYTE PTR [rax],al
   1400386fd:	add    BYTE PTR [rax],al
   1400386ff:	add    BYTE PTR [rdi+0x5f],bl
   140038702:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   140038706:	ins    BYTE PTR es:[rdi],dx
   140038707:	add    BYTE PTR [rdi+0x5f],bl
   14003870a:	jo     0x14003876d
   14003870c:	jae    0x140038771
   14003870e:	(bad)  
   14003870f:	ins    BYTE PTR es:[rdi],dx
	...
   140038718:	pop    rdi
   140038719:	pop    rdi
   14003871a:	jae    0x140038790
   14003871c:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   140038720:	ins    BYTE PTR es:[rdi],dx
   140038721:	add    BYTE PTR [rax],al
   140038723:	add    BYTE PTR [rax],al
   140038725:	add    BYTE PTR [rax],al
   140038727:	add    BYTE PTR [rdi+0x5f],bl
   14003872a:	je     0x140038794
   14003872c:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   140038733:	add    BYTE PTR [rax],al
   140038735:	add    BYTE PTR [rax],al
   140038737:	add    BYTE PTR [rdi+0x5f],bl
   14003873a:	data16 (bad) 
   14003873c:	jae    0x1400387b2
   14003873e:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038741:	ins    BYTE PTR es:[rdi],dx
   140038742:	add    BYTE PTR [rax],al
   140038744:	add    BYTE PTR [rax],al
   140038746:	add    BYTE PTR [rax],al
   140038748:	pop    rdi
   140038749:	pop    rdi
   14003874a:	jbe    0x1400387b1
   14003874c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038750:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038753:	ins    BYTE PTR es:[rdi],dx
   140038754:	add    BYTE PTR [rax],al
   140038756:	add    BYTE PTR [rax],al
   140038758:	pop    rdi
   140038759:	pop    rdi
   14003875a:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   14003875e:	(bad)  
   14003875f:	ins    BYTE PTR es:[rdi],dx
   140038760:	ins    BYTE PTR es:[rdi],dx
   140038761:	add    BYTE PTR [rax],al
   140038763:	add    BYTE PTR [rdi+0x5f],bl
   140038766:	gs (bad) 
   140038768:	(bad)  
   140038769:	imul   eax,DWORD PTR [rax],0x0
   14003876f:	add    BYTE PTR [rdi+0x5f],bl
   140038772:	jo     0x1400387e8
   140038774:	jb     0x1400387ac
   140038776:	xor    al,0x0
   140038778:	pop    rdi
   140038779:	pop    rdi
   14003877a:	jb     0x1400387e1
   14003877c:	jae    0x1400387f2
   14003877e:	jb     0x1400387e9
   140038780:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140038784:	add    BYTE PTR [rax],al
   140038786:	add    BYTE PTR [rax],al
   140038788:	pop    rdi
   140038789:	pop    rdi
   14003878a:	jne    0x1400387fa
   14003878c:	(bad)  
   14003878d:	ins    BYTE PTR es:[rdi],dx
   14003878e:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   140038795:	add    BYTE PTR [rax],al
   140038797:	add    BYTE PTR [rdx+0x65],dh
   14003879a:	jae    0x140038810
   14003879c:	jb     0x140038807
   14003879e:	movsxd esi,DWORD PTR [rax+rbp*1+0x0]
   1400387a2:	add    BYTE PTR [rax],al
   1400387a4:	and    BYTE PTR [rsi+0x65],ch
   1400387a7:	ja     0x1400387a9
   1400387a9:	add    BYTE PTR [rax],al
   1400387ab:	add    BYTE PTR [rax],al
   1400387ad:	add    BYTE PTR [rax],al
   1400387af:	add    BYTE PTR [rax],ah
   1400387b1:	fs gs ins BYTE PTR es:[rdi],dx
   1400387b4:	gs je  0x14003881c
   1400387b7:	add    BYTE PTR [rsi],bh
   1400387b9:	add    BYTE PTR ds:[rax],al
   1400387bc:	cmp    al,0x3c
   1400387be:	add    BYTE PTR [rax],al
   1400387c0:	and    DWORD PTR [rax],eax
   1400387c2:	add    BYTE PTR [rax],al
   1400387c4:	cmp    eax,0x2100003d
   1400387c9:	cmp    eax,0x5d5b0000
   1400387ce:	add    BYTE PTR [rax],al
   1400387d0:	outs   dx,DWORD PTR ds:[rsi]
   1400387d1:	jo     0x140038838
   1400387d3:	jb     0x140038836
   1400387d5:	je     0x140038846
   1400387d7:	jb     0x1400387d9
   1400387d9:	add    BYTE PTR [rax],al
   1400387db:	add    BYTE PTR [rip+0x2b00003e],ch        # 0x16b03881f
   1400387e1:	sub    eax,DWORD PTR [rax]
   1400387e3:	add    BYTE PTR [rip+0x2d00002d],ch        # 0x16d038816
   1400387e9:	add    BYTE PTR [rax],al
   1400387eb:	add    BYTE PTR [rip+0x2f002a3e],ch        # 0x16f03b22f
   1400387f1:	add    BYTE PTR [rax],al
   1400387f3:	add    BYTE PTR [rip+0x3c000000],ah        # 0x17c0387f9
   1400387f9:	add    BYTE PTR [rax],al
   1400387fb:	add    BYTE PTR [rdi*1+0x3e0000],bh
   140038802:	add    BYTE PTR [rax],al
   140038804:	ds cmp eax,0x29280000
   14003880a:	add    BYTE PTR [rax],al
   14003880c:	jle    0x14003880e
   14003880e:	add    BYTE PTR [rax],al
   140038810:	pop    rsi
   140038811:	add    BYTE PTR [rax],al
   140038813:	add    BYTE PTR [rax+rax*1+0x0],bh
   140038817:	add    BYTE PTR [rsi],ah
   140038819:	add    BYTE PTR es:[rax],al
   14003881c:	jl     0x14003889a
   14003881e:	add    BYTE PTR [rax],al
   140038820:	sub    bh,BYTE PTR [rip+0x3d2b0000]        # 0x17d2e8826
   140038826:	add    BYTE PTR [rax],al
   140038828:	sub    eax,0x2f00003d
   14003882d:	cmp    eax,0x3d250000
   140038832:	add    BYTE PTR [rax],al
   140038834:	ds ds cmp eax,0x3d3c3c00
   14003883b:	add    BYTE PTR [rsi],ah
   14003883d:	cmp    eax,0x3d7c0000
   140038842:	add    BYTE PTR [rax],al
   140038844:	pop    rsi
   140038845:	cmp    eax,0x76600000
   14003884a:	data16 je 0x1400388ae
   14003884d:	(bad)  
   14003884e:	ins    BYTE PTR es:[rdi],dx
   14003884f:	gs (bad) 
   140038851:	add    BYTE PTR [rax],al
   140038853:	add    BYTE PTR [rax],al
   140038855:	add    BYTE PTR [rax],al
   140038857:	add    BYTE PTR [rax+0x76],ah
   14003885a:	(bad)  
   14003885b:	je     0x1400388be
   14003885d:	(bad)  
   14003885e:	ins    BYTE PTR es:[rdi],dx
   14003885f:	gs (bad) 
   140038861:	add    BYTE PTR [rax],al
   140038863:	add    BYTE PTR [rax],al
   140038865:	add    BYTE PTR [rax],al
   140038867:	add    BYTE PTR [rax+0x76],ah
   14003886a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003886d:	ins    BYTE PTR es:[rdi],dx
   14003886e:	(bad)  
   14003886f:	add    BYTE PTR [rax+0x74],ah
   140038872:	jns    0x1400388e4
   140038874:	outs   dx,DWORD PTR gs:[rsi]
   140038876:	data16 (bad) 
	...
   140038880:	(bad)  
   140038881:	ins    BYTE PTR es:[rdi],dx
   140038882:	outs   dx,DWORD PTR ds:[rsi]
   140038883:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038886:	and    BYTE PTR [rbx+0x74],dh
   140038889:	(bad)  
   14003888a:	je     0x1400388f5
   14003888c:	movsxd esp,DWORD PTR [rax]
   14003888e:	addr32 jne 0x1400388f2
   140038891:	jb     0x1400388f7
   140038893:	(bad)  
   140038894:	add    BYTE PTR [rax],al
   140038896:	add    BYTE PTR [rax],al
   140038898:	(bad)  
   140038899:	jae    0x14003890f
   14003889b:	jb     0x140038906
   14003889d:	outs   dx,BYTE PTR ds:[rsi]
   14003889e:	addr32 (bad) 
	...
   1400388a8:	(bad)  
   1400388a9:	jbe    0x14003890d
   1400388ab:	(bad)  
   1400388ac:	jae    0x140038913
   1400388ae:	and    BYTE PTR [rbp+riz*2+0x73],ah
   1400388b2:	je     0x140038926
   1400388b4:	jne    0x140038919
   1400388b6:	je     0x140038927
   1400388b8:	jb     0x1400388e1
   1400388ba:	add    BYTE PTR [rax],al
   1400388bc:	add    BYTE PTR [rax],al
   1400388be:	add    BYTE PTR [rax],al
   1400388c0:	(bad)  
   1400388c1:	jbe    0x140038928
   1400388c3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400388c7:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   1400388cb:	gs je  0x140038937
   1400388ce:	outs   dx,BYTE PTR ds:[rsi]
   1400388cf:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   1400388d4:	je     0x140038948
   1400388d6:	jne    0x14003893b
   1400388d8:	je     0x140038949
   1400388da:	jb     0x140038903
   1400388dc:	add    BYTE PTR [rax],al
   1400388de:	add    BYTE PTR [rax],al
   1400388e0:	(bad)  
   1400388e1:	fs gs data16 (bad) 
   1400388e5:	jne    0x140038953
   1400388e7:	je     0x140038909
   1400388e9:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400388ec:	jae    0x140038962
   1400388ee:	jb     0x140038965
   1400388f0:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400388f4:	and    BYTE PTR [rbx+0x6c],ah
   1400388f7:	outs   dx,DWORD PTR ds:[rsi]
   1400388f8:	jae    0x14003896f
   1400388fa:	jb     0x140038961
   1400388fc:	(bad)  
   1400388fd:	add    BYTE PTR [rax],al
   1400388ff:	add    BYTE PTR [rax+0x73],ah
   140038902:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038905:	(bad)  
   140038906:	jb     0x140038928
   140038908:	fs gs ins BYTE PTR es:[rdi],dx
   14003890b:	gs je  0x140038977
   14003890e:	outs   dx,BYTE PTR ds:[rsi]
   14003890f:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   140038914:	je     0x140038988
   140038916:	jne    0x14003897b
   140038918:	je     0x140038989
   14003891a:	jb     0x140038943
   14003891c:	add    BYTE PTR [rax],al
   14003891e:	add    BYTE PTR [rax],al
   140038920:	(bad)  
   140038921:	jbe    0x140038988
   140038923:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038927:	and    BYTE PTR [rbx+0x6f],ah
   14003892a:	outs   dx,BYTE PTR ds:[rsi]
   14003892b:	jae    0x1400389a1
   14003892d:	jb     0x1400389a4
   14003892f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038933:	and    BYTE PTR [rcx+0x74],ch
   140038936:	gs jb  0x14003899a
   140038939:	je     0x1400389aa
   14003893b:	jb     0x140038964
   14003893d:	add    BYTE PTR [rax],al
   14003893f:	add    BYTE PTR [rax+0x76],ah
   140038942:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140038947:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14003894b:	je     0x1400389bf
   14003894d:	jne    0x1400389b2
   14003894f:	je     0x1400389c0
   140038951:	jb     0x140038973
   140038953:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14003895b:	(bad)  
   14003895c:	add    BYTE PTR [rax],al
   14003895e:	add    BYTE PTR [rax],al
   140038960:	(bad)  
   140038961:	jbe    0x1400389c8
   140038963:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038967:	and    BYTE PTR [rsi+0x62],dh
   14003896a:	(bad)  
   14003896b:	jae    0x1400389d2
   14003896d:	and    BYTE PTR [rbx+0x6f],ah
   140038970:	outs   dx,BYTE PTR ds:[rsi]
   140038971:	jae    0x1400389e7
   140038973:	jb     0x1400389ea
   140038975:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038979:	and    BYTE PTR [rcx+0x74],ch
   14003897c:	gs jb  0x1400389e0
   14003897f:	je     0x1400389f0
   140038981:	jb     0x1400389aa
   140038983:	add    BYTE PTR [rax],al
   140038985:	add    BYTE PTR [rax],al
   140038987:	add    BYTE PTR [rax+0x76],ah
   14003898a:	imul   esi,DWORD PTR [rdx+0x74],0x206c6175
   140038991:	imul   esi,DWORD PTR fs:[rbx+0x70],0x6563616c
   140038999:	ins    DWORD PTR es:[rdi],dx
   14003899a:	outs   dx,BYTE PTR gs:[rsi]
   14003899c:	je     0x1400389be
   14003899e:	ins    DWORD PTR es:[rdi],dx
   14003899f:	(bad)  
   1400389a0:	jo     0x1400389c9
   1400389a2:	add    BYTE PTR [rax],al
   1400389a4:	add    BYTE PTR [rax],al
   1400389a6:	add    BYTE PTR [rax],al
   1400389a8:	(bad)  
   1400389a9:	gs push 0x63657620
   1400389af:	je     0x140038a20
   1400389b1:	jb     0x1400389d3
   1400389b3:	movsxd ebp,DWORD PTR [rdi+0x6e]
   1400389b6:	jae    0x140038a2c
   1400389b8:	jb     0x140038a2f
   1400389ba:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400389be:	and    BYTE PTR [rcx+0x74],ch
   1400389c1:	gs jb  0x140038a25
   1400389c4:	je     0x140038a35
   1400389c6:	jb     0x1400389ef
	...
   1400389d0:	(bad)  
   1400389d1:	gs push 0x63657620
   1400389d7:	je     0x140038a48
   1400389d9:	jb     0x1400389fb
   1400389db:	fs gs jae 0x140038a53
   1400389df:	jb     0x140038a56
   1400389e1:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400389e5:	and    BYTE PTR [rcx+0x74],ch
   1400389e8:	gs jb  0x140038a4c
   1400389eb:	je     0x140038a5c
   1400389ed:	jb     0x140038a16
   1400389ef:	add    BYTE PTR [rax+0x65],ah
   1400389f2:	push   0x63657620
   1400389f7:	je     0x140038a68
   1400389f9:	jb     0x140038a1b
   1400389fb:	jbe    0x140038a5f
   1400389fd:	(bad)  
   1400389fe:	jae    0x140038a65
   140038a00:	and    BYTE PTR [rbx+0x6f],ah
   140038a03:	outs   dx,BYTE PTR ds:[rsi]
   140038a04:	jae    0x140038a7a
   140038a06:	jb     0x140038a7d
   140038a08:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038a0c:	and    BYTE PTR [rcx+0x74],ch
   140038a0f:	gs jb  0x140038a73
   140038a12:	je     0x140038a83
   140038a14:	jb     0x140038a3d
   140038a16:	add    BYTE PTR [rax],al
   140038a18:	(bad)  
   140038a19:	movsxd ebp,DWORD PTR [rdi+0x70]
   140038a1c:	jns    0x140038a3e
   140038a1e:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140038a21:	jae    0x140038a97
   140038a23:	jb     0x140038a9a
   140038a25:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038a29:	and    BYTE PTR [rbx+0x6c],ah
   140038a2c:	outs   dx,DWORD PTR ds:[rsi]
   140038a2d:	jae    0x140038aa4
   140038a2f:	jb     0x140038a96
   140038a31:	(bad)  
   140038a32:	add    BYTE PTR [rax],al
   140038a34:	add    BYTE PTR [rax],al
   140038a36:	add    BYTE PTR [rax],al
   140038a38:	(bad)  
   140038a39:	jne    0x140038a9f
   140038a3b:	je     0x140038a5d
   140038a3d:	jb     0x140038aa4
   140038a3f:	je     0x140038ab6
   140038a41:	jb     0x140038ab1
   140038a43:	imul   ebp,DWORD PTR [rsi+0x67],0x45600027
   140038a4a:	rex.W add BYTE PTR [rax+0x52],spl
   140038a4e:	push   rsp
   140038a4f:	push   rsp
   140038a50:	rex.WB add BYTE PTR [r8],al
   140038a53:	add    BYTE PTR [rax],al
   140038a55:	add    BYTE PTR [rax],al
   140038a57:	add    BYTE PTR [rax+0x6c],ah
   140038a5a:	outs   dx,DWORD PTR ds:[rsi]
   140038a5b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038a5e:	and    BYTE PTR [rsi+0x66],dh
   140038a61:	je     0x140038ac4
   140038a63:	(bad)  
   140038a64:	ins    BYTE PTR es:[rdi],dx
   140038a65:	gs (bad) 
   140038a67:	add    BYTE PTR [rax+0x6c],ah
   140038a6a:	outs   dx,DWORD PTR ds:[rsi]
   140038a6b:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038a6e:	and    BYTE PTR [rsi+0x66],dh
   140038a71:	je     0x140038ad4
   140038a73:	(bad)  
   140038a74:	ins    BYTE PTR es:[rdi],dx
   140038a75:	and    BYTE PTR gs:[rbx+0x6f],ah
   140038a79:	outs   dx,BYTE PTR ds:[rsi]
   140038a7a:	jae    0x140038af0
   140038a7c:	jb     0x140038af3
   140038a7e:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038a82:	and    BYTE PTR [rbx+0x6c],ah
   140038a85:	outs   dx,DWORD PTR ds:[rsi]
   140038a86:	jae    0x140038afd
   140038a88:	jb     0x140038aef
   140038a8a:	(bad)  
   140038a8b:	add    BYTE PTR [rax],ah
   140038a8d:	outs   dx,BYTE PTR ds:[rsi]
   140038a8e:	gs ja  0x140038aec
   140038a91:	pop    rbp
   140038a92:	add    BYTE PTR [rax],al
   140038a94:	add    BYTE PTR [rax],al
   140038a96:	add    BYTE PTR [rax],al
   140038a98:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   140038a9c:	gs je  0x140038b04
   140038a9f:	pop    rbx
   140038aa0:	pop    rbp
   140038aa1:	add    BYTE PTR [rax],al
   140038aa3:	add    BYTE PTR [rax],al
   140038aa5:	add    BYTE PTR [rax],al
   140038aa7:	add    BYTE PTR [rax+0x6f],ah
   140038aaa:	ins    DWORD PTR es:[rdi],dx
   140038aab:	outs   dx,BYTE PTR ds:[rsi]
   140038aac:	imul   esp,DWORD PTR [rax],0x6c6c6163
   140038ab2:	jae    0x140038b1d
   140038ab4:	addr32 (bad) 
   140038ab6:	add    BYTE PTR [rax],al
   140038ab8:	(bad)  
   140038ab9:	jo     0x140038b27
   140038abb:	(bad)  
   140038abc:	movsxd esp,DWORD PTR [rbp+0x6d]
   140038abf:	outs   dx,BYTE PTR gs:[rsi]
   140038ac1:	je     0x140038ae3
   140038ac3:	fs gs ins BYTE PTR es:[rdi],dx
   140038ac6:	gs je  0x140038b2e
   140038ac9:	and    BYTE PTR [rbx+0x6c],ah
   140038acc:	outs   dx,DWORD PTR ds:[rsi]
   140038acd:	jae    0x140038b44
   140038acf:	jb     0x140038b36
   140038ad1:	(bad)  
   140038ad2:	add    BYTE PTR [rax],al
   140038ad4:	add    BYTE PTR [rax],al
   140038ad6:	add    BYTE PTR [rax],al
   140038ad8:	(bad)  
   140038ad9:	jo     0x140038b47
   140038adb:	(bad)  
   140038adc:	movsxd esp,DWORD PTR [rbp+0x6d]
   140038adf:	outs   dx,BYTE PTR gs:[rsi]
   140038ae1:	je     0x140038b03
   140038ae3:	fs gs ins BYTE PTR es:[rdi],dx
   140038ae6:	gs je  0x140038b4e
   140038ae9:	pop    rbx
   140038aea:	pop    rbp
   140038aeb:	and    BYTE PTR [rbx+0x6c],ah
   140038aee:	outs   dx,DWORD PTR ds:[rsi]
   140038aef:	jae    0x140038b66
   140038af1:	jb     0x140038b58
   140038af3:	(bad)  
   140038af4:	add    BYTE PTR [rax],al
   140038af6:	add    BYTE PTR [rax],al
   140038af8:	(bad)  
   140038af9:	ins    DWORD PTR es:[rdi],dx
   140038afa:	(bad)  
   140038afb:	outs   dx,BYTE PTR ds:[rsi]
   140038afc:	(bad)  
   140038afd:	gs and BYTE PTR fs:[esi+0x65],dh
   140038b03:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038b07:	and    BYTE PTR [rbx+0x6f],ah
   140038b0a:	outs   dx,BYTE PTR ds:[rsi]
   140038b0b:	jae    0x140038b81
   140038b0d:	jb     0x140038b84
   140038b0f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038b13:	and    BYTE PTR [rcx+0x74],ch
   140038b16:	gs jb  0x140038b7a
   140038b19:	je     0x140038b8a
   140038b1b:	jb     0x140038b44
   140038b1d:	add    BYTE PTR [rax],al
   140038b1f:	add    BYTE PTR [rax+0x6d],ah
   140038b22:	(bad)  
   140038b23:	outs   dx,BYTE PTR ds:[rsi]
   140038b24:	(bad)  
   140038b25:	gs and BYTE PTR fs:[esi+0x65],dh
   140038b2b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038b2f:	and    BYTE PTR [rbp+riz*2+0x73],ah
   140038b33:	je     0x140038ba7
   140038b35:	jne    0x140038b9a
   140038b37:	je     0x140038ba8
   140038b39:	jb     0x140038b5b
   140038b3b:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   140038b43:	(bad)  
   140038b44:	add    BYTE PTR [rax],al
   140038b46:	add    BYTE PTR [rax],al
   140038b48:	(bad)  
   140038b49:	gs push 0x63657620
   140038b4f:	je     0x140038bc0
   140038b51:	jb     0x140038b73
   140038b53:	movsxd ebp,DWORD PTR [rdi+0x70]
   140038b56:	jns    0x140038b78
   140038b58:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140038b5b:	jae    0x140038bd1
   140038b5d:	jb     0x140038bd4
   140038b5f:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038b63:	and    BYTE PTR [rcx+0x74],ch
   140038b66:	gs jb  0x140038bca
   140038b69:	je     0x140038bda
   140038b6b:	jb     0x140038b94
   140038b6d:	add    BYTE PTR [rax],al
   140038b6f:	add    BYTE PTR [rax+0x65],ah
   140038b72:	push   0x63657620
   140038b77:	je     0x140038be8
   140038b79:	jb     0x140038b9b
   140038b7b:	jbe    0x140038bdf
   140038b7d:	(bad)  
   140038b7e:	jae    0x140038be5
   140038b80:	and    BYTE PTR [rbx+0x6f],ah
   140038b83:	jo     0x140038bfe
   140038b85:	and    BYTE PTR [rbx+0x6f],ah
   140038b88:	outs   dx,BYTE PTR ds:[rsi]
   140038b89:	jae    0x140038bff
   140038b8b:	jb     0x140038c02
   140038b8d:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038b91:	and    BYTE PTR [rcx+0x74],ch
   140038b94:	gs jb  0x140038bf8
   140038b97:	je     0x140038c08
   140038b99:	jb     0x140038bc2
   140038b9b:	add    BYTE PTR [rax],al
   140038b9d:	add    BYTE PTR [rax],al
   140038b9f:	add    BYTE PTR [rax+0x64],ah
   140038ba2:	jns    0x140038c12
   140038ba4:	(bad)  
   140038ba5:	ins    DWORD PTR es:[rdi],dx
   140038ba6:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   140038bad:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   140038bb4:	and    BYTE PTR [rsi+0x6f],ah
   140038bb7:	jb     0x140038bd9
   140038bb9:	(bad)  
   140038bba:	add    BYTE PTR [rax],al
   140038bbc:	add    BYTE PTR [rax],al
   140038bbe:	add    BYTE PTR [rax],al
   140038bc0:	(bad)  
   140038bc1:	fs jns 0x140038c32
   140038bc4:	(bad)  
   140038bc5:	ins    DWORD PTR es:[rdi],dx
   140038bc6:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   140038bcd:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   140038bd5:	jne    0x140038c3a
   140038bd7:	je     0x140038c48
   140038bd9:	jb     0x140038bfb
   140038bdb:	outs   dx,WORD PTR ds:[rsi]
   140038bdd:	jb     0x140038bff
   140038bdf:	(bad)  
	...
   140038be8:	(bad)  
   140038be9:	jbe    0x140038c50
   140038beb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038bef:	and    BYTE PTR [rbx+0x6f],ah
   140038bf2:	jo     0x140038c6d
   140038bf4:	and    BYTE PTR [rbx+0x6f],ah
   140038bf7:	outs   dx,BYTE PTR ds:[rsi]
   140038bf8:	jae    0x140038c6e
   140038bfa:	jb     0x140038c71
   140038bfc:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038c00:	and    BYTE PTR [rcx+0x74],ch
   140038c03:	gs jb  0x140038c67
   140038c06:	je     0x140038c77
   140038c08:	jb     0x140038c31
   140038c0a:	add    BYTE PTR [rax],al
   140038c0c:	add    BYTE PTR [rax],al
   140038c0e:	add    BYTE PTR [rax],al
   140038c10:	(bad)  
   140038c11:	jbe    0x140038c78
   140038c13:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038c17:	and    BYTE PTR [rsi+0x62],dh
   140038c1a:	(bad)  
   140038c1b:	jae    0x140038c82
   140038c1d:	and    BYTE PTR [rbx+0x6f],ah
   140038c20:	jo     0x140038c9b
   140038c22:	and    BYTE PTR [rbx+0x6f],ah
   140038c25:	outs   dx,BYTE PTR ds:[rsi]
   140038c26:	jae    0x140038c9c
   140038c28:	jb     0x140038c9f
   140038c2a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038c2e:	and    BYTE PTR [rcx+0x74],ch
   140038c31:	gs jb  0x140038c95
   140038c34:	je     0x140038ca5
   140038c36:	jb     0x140038c5f
	...
   140038c40:	(bad)  
   140038c41:	ins    DWORD PTR es:[rdi],dx
   140038c42:	(bad)  
   140038c43:	outs   dx,BYTE PTR ds:[rsi]
   140038c44:	(bad)  
   140038c45:	gs and BYTE PTR fs:[esi+0x65],dh
   140038c4b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038c4f:	and    BYTE PTR [rbx+0x6f],ah
   140038c52:	jo     0x140038ccd
   140038c54:	and    BYTE PTR [rbx+0x6f],ah
   140038c57:	outs   dx,BYTE PTR ds:[rsi]
   140038c58:	jae    0x140038cce
   140038c5a:	jb     0x140038cd1
   140038c5c:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140038c60:	and    BYTE PTR [rcx+0x74],ch
   140038c63:	gs jb  0x140038cc7
   140038c66:	je     0x140038cd7
   140038c68:	jb     0x140038c91
   140038c6a:	add    BYTE PTR [rax],al
   140038c6c:	add    BYTE PTR [rax],al
   140038c6e:	add    BYTE PTR [rax],al
   140038c70:	(bad)  
   140038c71:	ins    BYTE PTR es:[rdi],dx
   140038c72:	outs   dx,DWORD PTR ds:[rsi]
   140038c73:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038c76:	and    BYTE PTR [rbx+0x74],dh
   140038c79:	(bad)  
   140038c7a:	je     0x140038ce5
   140038c7c:	movsxd esp,DWORD PTR [rax]
   140038c7e:	je     0x140038ce8
   140038c80:	jb     0x140038ce7
   140038c82:	(bad)  
   140038c83:	and    BYTE PTR fs:[rdi+0x75],ah
   140038c87:	(bad)  
   140038c88:	jb     0x140038cee
   140038c8a:	(bad)  
   140038c8b:	add    BYTE PTR [rax],al
   140038c8d:	add    BYTE PTR [rax],al
   140038c8f:	add    BYTE PTR [rdi+0x70],ch
   140038c92:	gs jb  0x140038cf6
   140038c95:	je     0x140038d06
   140038c97:	jb     0x140038cb9
   140038c99:	and    ah,BYTE PTR [rdx]
   140038c9b:	and    BYTE PTR [rax],al
   140038c9d:	add    BYTE PTR [rax],al
   140038c9f:	add    BYTE PTR [rax],ah
   140038ca1:	push   rsp
   140038ca2:	jns    0x140038d14
   140038ca4:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   140038ca9:	movsxd esi,DWORD PTR [rdx+0x69]
   140038cac:	jo     0x140038d22
   140038cae:	outs   dx,DWORD PTR ds:[rsi]
   140038caf:	jb     0x140038cd8
   140038cb1:	add    BYTE PTR [rax],al
   140038cb3:	add    BYTE PTR [rax],al
   140038cb5:	add    BYTE PTR [rax],al
   140038cb7:	add    BYTE PTR [rax],ah
   140038cb9:	rex.X (bad) 
   140038cbb:	jae    0x140038d22
   140038cbd:	and    BYTE PTR [rbx+0x6c],al
   140038cc0:	(bad)  
   140038cc1:	jae    0x140038d36
   140038cc3:	and    BYTE PTR [rbp+riz*2+0x73],al
   140038cc7:	movsxd esi,DWORD PTR [rdx+0x69]
   140038cca:	jo     0x140038d40
   140038ccc:	outs   dx,DWORD PTR ds:[rsi]
   140038ccd:	jb     0x140038cef
   140038ccf:	(bad)  
   140038cd0:	je     0x140038cf2
   140038cd2:	sub    BYTE PTR [rax],al
   140038cd4:	add    BYTE PTR [rax],al
   140038cd6:	add    BYTE PTR [rax],al
   140038cd8:	and    BYTE PTR [rdx+0x61],al
   140038cdb:	jae    0x140038d42
   140038cdd:	and    BYTE PTR [rbx+0x6c],al
   140038ce0:	(bad)  
   140038ce1:	jae    0x140038d56
   140038ce3:	and    BYTE PTR [rcx+0x72],al
   140038ce6:	jb     0x140038d49
   140038ce8:	jns    0x140038d11
   140038cea:	add    BYTE PTR [rax],al
   140038cec:	add    BYTE PTR [rax],al
   140038cee:	add    BYTE PTR [rax],al
   140038cf0:	and    BYTE PTR [rbx+0x6c],al
   140038cf3:	(bad)  
   140038cf4:	jae    0x140038d69
   140038cf6:	and    BYTE PTR [rax+0x69],cl
   140038cf9:	gs jb  0x140038d5d
   140038cfc:	jb     0x140038d61
   140038cfe:	push   0x65442079
   140038d03:	jae    0x140038d68
   140038d05:	jb     0x140038d70
   140038d07:	jo     0x140038d7d
   140038d09:	outs   dx,DWORD PTR ds:[rsi]
   140038d0a:	jb     0x140038d33
   140038d0c:	add    BYTE PTR [rax],al
   140038d0e:	add    BYTE PTR [rax],al
   140038d10:	and    BYTE PTR [rbx+0x6f],al
   140038d13:	ins    DWORD PTR es:[rdi],dx
   140038d14:	jo     0x140038d82
   140038d16:	gs je  0x140038d7e
   140038d19:	and    BYTE PTR [rdi+0x62],cl
   140038d1c:	push   0x65
   140038d1e:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   140038d22:	outs   dx,DWORD PTR ds:[rsi]
   140038d23:	movsxd esp,DWORD PTR [rcx+0x74]
   140038d26:	outs   dx,DWORD PTR ds:[rsi]
   140038d27:	jb     0x140038d50
   140038d29:	add    BYTE PTR [rax],al
   140038d2b:	add    BYTE PTR [rax],al
   140038d2d:	add    BYTE PTR [rax],al
   140038d2f:	add    BYTE PTR [rip+0xbc00000],al        # 0x14bc38d35
	...
   140038d3d:	add    BYTE PTR [rax],al
   140038d3f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c38d45
	...
   140038d4d:	add    BYTE PTR [rax],al
   140038d4f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   140038d5d:	add    BYTE PTR [rax],al
   140038d5f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   140038d6d:	add    BYTE PTR [rax],al
   140038d6f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   140038d7d:	add    BYTE PTR [rax],al
   140038d7f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   140038d8d:	add    BYTE PTR [rax],al
   140038d8f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   140038d9d:	add    BYTE PTR [rax],al
   140038d9f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   140038dad:	add    BYTE PTR [rax],al
   140038daf:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   140038dbd:	add    BYTE PTR [rax],al
   140038dbf:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   140038dcd:	add    BYTE PTR [rax],al
   140038dcf:	add    BYTE PTR [rdx+rax*1+0x8c000],dh
	...
   140038dde:	add    BYTE PTR [rax],al
   140038de0:	mov    ch,0x2
   140038de2:	add    al,al
   140038de4:	or     BYTE PTR [rax],al
	...
   140038dee:	add    BYTE PTR [rax],al
   140038df0:	or     al,0x0
   140038df2:	add    BYTE PTR [rax],al
   140038df4:	add    BYTE PTR [rax],al
   140038df6:	add    BYTE PTR [rax],al
   140038df8:	add    eax,DWORD PTR [rax]
   140038dfa:	add    BYTE PTR [rax],al
   140038dfc:	add    BYTE PTR [rax],al
   140038dfe:	add    BYTE PTR [rax],al
   140038e00:	or     DWORD PTR [rax],eax
   140038e02:	add    BYTE PTR [rax],al
   140038e04:	add    BYTE PTR [rax],al
   140038e06:	add    BYTE PTR [rax],al
   140038e08:	ins    DWORD PTR es:[rdi],dx
   140038e09:	add    BYTE PTR [rbx+0x0],dh
   140038e0c:	movsxd eax,DWORD PTR [rax]
   140038e0e:	outs   dx,DWORD PTR ds:[rsi]
   140038e0f:	add    BYTE PTR [rdx+0x0],dh
   140038e12:	add    BYTE PTR gs:[rbp+0x0],ah
   140038e16:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   140038e1b:	add    BYTE PTR [rax+rax*1+0x0],ch
   140038e1f:	add    BYTE PTR [rbx+0x6f],al
   140038e22:	jb     0x140038e69
   140038e24:	js     0x140038e8f
   140038e26:	je     0x140038e78
   140038e28:	jb     0x140038e99
   140038e2a:	movsxd esp,DWORD PTR [rbp+0x73]
   140038e2d:	jae    0x140038e2f
   140038e2f:	add    BYTE PTR [rcx+rbx*4+0x2],cl
   140038e33:	rex add DWORD PTR [rax],eax
	...
   140038e3e:	add    BYTE PTR [rax],al
   140038e40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038e41:	cdq    
   140038e42:	add    al,BYTE PTR [rax+0x1]
	...
   140038e4d:	add    BYTE PTR [rax],al
   140038e4f:	add    BYTE PTR [rdx+rbp*4+0x14002],al
   140038e56:	add    BYTE PTR [rax],al
   140038e58:	rex.R stos DWORD PTR es:[rdi],eax
   140038e5a:	add    al,BYTE PTR [rax+0x1]
   140038e5d:	add    BYTE PTR [rax],al
   140038e5f:	add    BYTE PTR [rax+0x1400299],dl
   140038e65:	add    BYTE PTR [rax],al
   140038e67:	add    BYTE PTR [rax+0x1400299],dl
   140038e6d:	add    BYTE PTR [rax],al
   140038e6f:	add    al,ah
   140038e71:	scas   al,BYTE PTR es:[rdi]
   140038e72:	add    al,BYTE PTR [rax+0x1]
   140038e75:	add    BYTE PTR [rax],al
   140038e77:	add    BYTE PTR [rdi+rbp*4+0x2],al
   140038e7b:	rex add DWORD PTR [rax],eax
   140038e7e:	add    BYTE PTR [rax],al
   140038e80:	rex.R rol DWORD PTR [rdx],cl
   140038e83:	rex add DWORD PTR [rax],eax
   140038e86:	add    BYTE PTR [rax],al
   140038e88:	(bad)  
   140038e89:	rol    DWORD PTR [rdx],cl
   140038e8b:	rex add DWORD PTR [rax],eax
	...
   140038e96:	add    BYTE PTR [rax],al
   140038e98:	clc    
   140038e99:	cdq    
   140038e9a:	add    al,BYTE PTR [rax+0x1]
   140038e9d:	add    BYTE PTR [rax],al
   140038e9f:	add    BYTE PTR [rbx+riz*4+0x2],bh
   140038ea3:	rex add DWORD PTR [rax],eax
   140038ea6:	add    BYTE PTR [rax],al
   140038ea8:	mov    eax,0x14002a3
   140038ead:	add    BYTE PTR [rax],al
   140038eaf:	add    BYTE PTR [rsi+rbp*4+0x2],ah
   140038eb3:	rex add DWORD PTR [rax],eax
   140038eb6:	add    BYTE PTR [rax],al
   140038eb8:	movabs al,ds:0x64000000014002ae
   140038ec1:	pushf  
   140038ec2:	add    al,BYTE PTR [rax+0x1]
   140038ec5:	add    BYTE PTR [rax],al
   140038ec7:	add    BYTE PTR [rax+0x1400299],dl
   140038ecd:	add    BYTE PTR [rax],al
   140038ecf:	add    BYTE PTR [rax-0x36],al
   140038ed2:	add    al,BYTE PTR [rax+0x1]
	...
   140038ee5:	add    BYTE PTR [rax],al
   140038ee7:	add    BYTE PTR [rax+0x1400299],dl
	...
   140038ef9:	(bad)  
   140038efa:	add    al,BYTE PTR [rax+0x1]
   140038efd:	add    BYTE PTR [rax],al
   140038eff:	add    BYTE PTR [rax+0x1400299],dl
   140038f05:	add    BYTE PTR [rax],al
   140038f07:	add    BYTE PTR [rcx+rbx*4+0x14002],dl
   140038f0e:	add    BYTE PTR [rax],al
   140038f10:	(bad)  
   140038f11:	cdq    
   140038f12:	add    al,BYTE PTR [rax+0x1]
   140038f15:	add    BYTE PTR [rax],al
   140038f17:	add    BYTE PTR [rax+0x1400299],dl
   140038f1d:	add    BYTE PTR [rax],al
   140038f1f:	add    bh,bh
   140038f21:	(bad)  
   140038f22:	(bad)  
   140038f23:	(bad)  
   140038f24:	(bad)  
   140038f25:	(bad)  
   140038f26:	(bad)  
   140038f27:	rex.XB (bad) 
   140038f29:	(bad)  
   140038f2a:	(bad)  
   140038f2b:	(bad)  
   140038f2c:	(bad)  
   140038f2d:	(bad)  
   140038f2e:	(bad)  
   140038f2f:	ret    
   140038f30:	add    DWORD PTR [rax],eax
   140038f32:	add    BYTE PTR [rax],al
   140038f34:	(bad)  
   140038f35:	add    BYTE PTR [rax],al
   140038f37:	add    BYTE PTR [rdx],al
   140038f39:	add    BYTE PTR [rax],al
   140038f3b:	add    BYTE PTR [rdx],al
   140038f3d:	add    BYTE PTR [rax],al
   140038f3f:	add    BYTE PTR [rbx],al
   140038f41:	add    BYTE PTR [rax],al
   140038f43:	add    BYTE PTR [rdx],al
   140038f45:	add    BYTE PTR [rax],al
   140038f47:	add    BYTE PTR [rax+rax*1],al
   140038f4a:	add    BYTE PTR [rax],al
   140038f4c:	sbb    BYTE PTR [rax],al
   140038f4e:	add    BYTE PTR [rax],al
   140038f50:	add    eax,0xd000000
   140038f55:	add    BYTE PTR [rax],al
   140038f57:	add    BYTE PTR [rsi],al
   140038f59:	add    BYTE PTR [rax],al
   140038f5b:	add    BYTE PTR [rcx],cl
   140038f5d:	add    BYTE PTR [rax],al
   140038f5f:	add    BYTE PTR [rdi],al
   140038f61:	add    BYTE PTR [rax],al
   140038f63:	add    BYTE PTR [rax+rax*1],cl
   140038f66:	add    BYTE PTR [rax],al
   140038f68:	or     BYTE PTR [rax],al
   140038f6a:	add    BYTE PTR [rax],al
   140038f6c:	or     al,0x0
   140038f6e:	add    BYTE PTR [rax],al
   140038f70:	or     DWORD PTR [rax],eax
   140038f72:	add    BYTE PTR [rax],al
   140038f74:	or     al,0x0
   140038f76:	add    BYTE PTR [rax],al
   140038f78:	or     al,BYTE PTR [rax]
   140038f7a:	add    BYTE PTR [rax],al
   140038f7c:	(bad)  
   140038f7d:	add    BYTE PTR [rax],al
   140038f7f:	add    BYTE PTR [rbx],cl
   140038f81:	add    BYTE PTR [rax],al
   140038f83:	add    BYTE PTR [rax],cl
   140038f85:	add    BYTE PTR [rax],al
   140038f87:	add    BYTE PTR [rax+rax*1],cl
   140038f8a:	add    BYTE PTR [rax],al
   140038f8c:	(bad)  
   140038f8d:	add    BYTE PTR [rax],al
   140038f8f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156038f95
   140038f95:	add    BYTE PTR [rax],al
   140038f97:	add    BYTE PTR [rdi],cl
   140038f99:	add    BYTE PTR [rax],al
   140038f9b:	add    BYTE PTR [rdx],al
   140038f9d:	add    BYTE PTR [rax],al
   140038f9f:	add    BYTE PTR [rax],dl
   140038fa1:	add    BYTE PTR [rax],al
   140038fa3:	add    BYTE PTR [rip+0x11000000],cl        # 0x151038fa9
   140038fa9:	add    BYTE PTR [rax],al
   140038fab:	add    BYTE PTR [rdx],dl
   140038fad:	add    BYTE PTR [rax],al
   140038faf:	add    BYTE PTR [rdx],dl
   140038fb1:	add    BYTE PTR [rax],al
   140038fb3:	add    BYTE PTR [rdx],al
   140038fb5:	add    BYTE PTR [rax],al
   140038fb7:	add    BYTE PTR [rcx],ah
   140038fb9:	add    BYTE PTR [rax],al
   140038fbb:	add    BYTE PTR [rip+0x35000000],cl        # 0x175038fc1
   140038fc1:	add    BYTE PTR [rax],al
   140038fc3:	add    BYTE PTR [rdx],al
   140038fc5:	add    BYTE PTR [rax],al
   140038fc7:	add    BYTE PTR [rcx+0x0],al
   140038fca:	add    BYTE PTR [rax],al
   140038fcc:	or     eax,0x43000000
   140038fd1:	add    BYTE PTR [rax],al
   140038fd3:	add    BYTE PTR [rdx],al
   140038fd5:	add    BYTE PTR [rax],al
   140038fd7:	add    BYTE PTR [rax+0x0],dl
   140038fda:	add    BYTE PTR [rax],al
   140038fdc:	adc    DWORD PTR [rax],eax
   140038fde:	add    BYTE PTR [rax],al
   140038fe0:	push   rdx
   140038fe1:	add    BYTE PTR [rax],al
   140038fe3:	add    BYTE PTR [rip+0x53000000],cl        # 0x193038fe9
   140038fe9:	add    BYTE PTR [rax],al
   140038feb:	add    BYTE PTR [rip+0x57000000],cl        # 0x197038ff1
   140038ff1:	add    BYTE PTR [rax],al
   140038ff3:	add    BYTE PTR [rsi],dl
   140038ff5:	add    BYTE PTR [rax],al
   140038ff7:	add    BYTE PTR [rcx+0x0],bl
   140038ffa:	add    BYTE PTR [rax],al
   140038ffc:	or     eax,DWORD PTR [rax]
   140038ffe:	add    BYTE PTR [rax],al
   140039000:	ins    BYTE PTR es:[rdi],dx
   140039001:	add    BYTE PTR [rax],al
   140039003:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad039009
   140039009:	add    BYTE PTR [rax],al
   14003900b:	add    BYTE PTR [rax],ah
   14003900d:	add    BYTE PTR [rax],al
   14003900f:	add    BYTE PTR [rax+0x0],dh
   140039012:	add    BYTE PTR [rax],al
   140039014:	sbb    al,0x0
   140039016:	add    BYTE PTR [rax],al
   140039018:	jb     0x14003901a
   14003901a:	add    BYTE PTR [rax],al
   14003901c:	or     DWORD PTR [rax],eax
   14003901e:	add    BYTE PTR [rax],al
   140039020:	(bad)  
   140039021:	add    BYTE PTR [rax],al
   140039023:	add    BYTE PTR [rsi],dl
   140039025:	add    BYTE PTR [rax],al
   140039027:	add    BYTE PTR [rax+0xa000000],al
   14003902d:	add    BYTE PTR [rax],al
   14003902f:	add    BYTE PTR [rcx+0xa000000],al
   140039035:	add    BYTE PTR [rax],al
   140039037:	add    BYTE PTR [rdx+0x9000000],al
   14003903d:	add    BYTE PTR [rax],al
   14003903f:	add    BYTE PTR [rbx+0x16000000],al
   140039045:	add    BYTE PTR [rax],al
   140039047:	add    BYTE PTR [rax+rax*1+0xd0000],al
   14003904e:	add    BYTE PTR [rax],al
   140039050:	xchg   ecx,eax
   140039051:	add    BYTE PTR [rax],al
   140039053:	add    BYTE PTR [rcx],ch
   140039055:	add    BYTE PTR [rax],al
   140039057:	add    BYTE PTR [rsi+0xd000000],bl
   14003905d:	add    BYTE PTR [rax],al
   14003905f:	add    BYTE PTR [rcx+0x2000000],ah
   140039065:	add    BYTE PTR [rax],al
   140039067:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   14003906e:	add    BYTE PTR [rax],al
   140039070:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140039071:	add    BYTE PTR [rax],al
   140039073:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7039079
   140039079:	add    BYTE PTR [rax],al
   14003907b:	add    BYTE PTR [rcx],dl
   14003907d:	add    BYTE PTR [rax],al
   14003907f:	add    dh,cl
   140039081:	add    BYTE PTR [rax],al
   140039083:	add    BYTE PTR [rdx],al
   140039085:	add    BYTE PTR [rax],al
   140039087:	add    bh,dl
   140039089:	add    BYTE PTR [rax],al
   14003908b:	add    BYTE PTR [rbx],cl
   14003908d:	add    BYTE PTR [rax],al
   14003908f:	add    BYTE PTR [rax],bl
   140039091:	(bad)  
   140039092:	add    BYTE PTR [rax],al
   140039094:	or     al,0x0
	...
   14003909e:	add    BYTE PTR [rax],al
   1400390a0:	rex xchg ecx,eax
   1400390a2:	add    eax,DWORD PTR [rax+0x1]
   1400390a5:	add    BYTE PTR [rax],al
   1400390a7:	add    BYTE PTR [rax+0x1400391],dl
   1400390ad:	add    BYTE PTR [rax],al
   1400390af:	add    BYTE PTR [rax+0x1400340],al
   1400390b5:	add    BYTE PTR [rax],al
   1400390b7:	add    al,dl
   1400390b9:	xchg   ecx,eax
   1400390ba:	add    eax,DWORD PTR [rax+0x1]
   1400390bd:	add    BYTE PTR [rax],al
   1400390bf:	add    BYTE PTR [rax],dl
   1400390c1:	xchg   edx,eax
   1400390c2:	add    eax,DWORD PTR [rax+0x1]
   1400390c5:	add    BYTE PTR [rax],al
   1400390c7:	add    BYTE PTR [rax-0x6e],ah
   1400390ca:	add    eax,DWORD PTR [rax+0x1]
   1400390cd:	add    BYTE PTR [rax],al
   1400390cf:	add    al,al
   1400390d1:	xchg   edx,eax
   1400390d2:	add    eax,DWORD PTR [rax+0x1]
   1400390d5:	add    BYTE PTR [rax],al
   1400390d7:	add    BYTE PTR [rax],dl
   1400390d9:	xchg   ebx,eax
   1400390da:	add    eax,DWORD PTR [rax+0x1]
   1400390dd:	add    BYTE PTR [rax],al
   1400390df:	add    al,al
   1400390e1:	rex add eax,DWORD PTR [rax+0x1]
   1400390e5:	add    BYTE PTR [rax],al
   1400390e7:	add    BYTE PTR [rax-0x6d],dl
   1400390ea:	add    eax,DWORD PTR [rax+0x1]
   1400390ed:	add    BYTE PTR [rax],al
   1400390ef:	add    BYTE PTR [rax+0x1400393],dl
   1400390f5:	add    BYTE PTR [rax],al
   1400390f7:	add    al,dl
   1400390f9:	xchg   ebx,eax
   1400390fa:	add    eax,DWORD PTR [rax+0x1]
   1400390fd:	add    BYTE PTR [rax],al
   1400390ff:	add    BYTE PTR [rax],dl
   140039101:	xchg   esp,eax
   140039102:	add    eax,DWORD PTR [rax+0x1]
   140039105:	add    BYTE PTR [rax],al
   140039107:	add    BYTE PTR [rax-0x6c],ah
   14003910a:	add    eax,DWORD PTR [rax+0x1]
   14003910d:	add    BYTE PTR [rax],al
   14003910f:	add    al,al
   140039111:	xchg   esp,eax
   140039112:	add    eax,DWORD PTR [rax+0x1]
   140039115:	add    BYTE PTR [rax],al
   140039117:	add    BYTE PTR [rax],ah
   140039119:	xchg   ebp,eax
   14003911a:	add    eax,DWORD PTR [rax+0x1]
   14003911d:	add    BYTE PTR [rax],al
   14003911f:	add    BYTE PTR [rax-0x6b],dh
   140039122:	add    eax,DWORD PTR [rax+0x1]
   140039125:	add    BYTE PTR [rax],al
   140039127:	add    BYTE PTR [rax+0x40],ch
   14003912a:	add    eax,DWORD PTR [rax+0x1]
   14003912d:	add    BYTE PTR [rax],al
   14003912f:	add    BYTE PTR [rax],al
   140039131:	add    eax,DWORD PTR [r8+0x1]
   140039135:	add    BYTE PTR [rax],al
   140039137:	add    al,al
   140039139:	xchg   ebp,eax
   14003913a:	add    eax,DWORD PTR [rax+0x1]
   14003913d:	add    BYTE PTR [rax],al
   14003913f:	add    BYTE PTR [rcx+0x0],ah
   140039142:	jo     0x140039144
   140039144:	imul   eax,DWORD PTR [rax],0x6d002d
   14003914a:	jae    0x14003914c
   14003914c:	sub    eax,0x69007700
   140039151:	add    BYTE PTR [rsi+0x0],ch
   140039154:	sub    eax,0x70006100
   140039159:	add    BYTE PTR [rax+0x0],dh
   14003915c:	ins    DWORD PTR es:[rdi],dx
   14003915d:	add    BYTE PTR [rdi+0x0],ch
   140039160:	add    BYTE PTR fs:[rbp+0x0],ah
   140039164:	ins    BYTE PTR es:[rdi],dx
   140039165:	add    BYTE PTR [rip+0x75007200],ch        # 0x1b504036b
   14003916b:	add    BYTE PTR [rsi+0x0],ch
   14003916e:	je     0x140039170
   140039170:	imul   eax,DWORD PTR [rax],0x65006d
   140039176:	sub    eax,0x31006c00
   14003917b:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c281
   140039181:	add    BYTE PTR [rcx],dh
	...
   14003918f:	add    BYTE PTR [rcx+0x0],ah
   140039192:	jo     0x140039194
   140039194:	imul   eax,DWORD PTR [rax],0x6d002d
   14003919a:	jae    0x14003919c
   14003919c:	sub    eax,0x69007700
   1400391a1:	add    BYTE PTR [rsi+0x0],ch
   1400391a4:	sub    eax,0x6f006300
   1400391a9:	add    BYTE PTR [rdx+0x0],dh
   1400391ac:	add    BYTE PTR gs:[rip+0x61006400],ch        # 0x1a103f5b3
   1400391b3:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400391b7:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400391bb:	add    BYTE PTR [rbp+0x0],ch
   1400391be:	add    BYTE PTR gs:[rip+0x31006c00],ch        # 0x17103fdc5
   1400391c5:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c2cb
   1400391cb:	add    BYTE PTR [rcx],dh
   1400391cd:	add    BYTE PTR [rax],al
   1400391cf:	add    BYTE PTR [rcx+0x0],ah
   1400391d2:	jo     0x1400391d4
   1400391d4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400391da:	jae    0x1400391dc
   1400391dc:	sub    eax,0x69007700
   1400391e1:	add    BYTE PTR [rsi+0x0],ch
   1400391e4:	sub    eax,0x6f006300
   1400391e9:	add    BYTE PTR [rdx+0x0],dh
   1400391ec:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a903f7f3
   1400391f3:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400391f7:	add    BYTE PTR [rip+0x32006c00],ch        # 0x17203fdfd
   1400391fd:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c303
   140039203:	add    BYTE PTR [rcx],dh
	...
   14003920d:	add    BYTE PTR [rax],al
   14003920f:	add    BYTE PTR [rcx+0x0],ah
   140039212:	jo     0x140039214
   140039214:	imul   eax,DWORD PTR [rax],0x6d002d
   14003921a:	jae    0x14003921c
   14003921c:	sub    eax,0x69007700
   140039221:	add    BYTE PTR [rsi+0x0],ch
   140039224:	sub    eax,0x6f006300
   140039229:	add    BYTE PTR [rdx+0x0],dh
   14003922c:	add    BYTE PTR gs:[rip+0x6f006c00],ch        # 0x1af03fe33
   140039233:	add    BYTE PTR [rbx+0x0],ah
   140039236:	(bad)  
   140039237:	add    BYTE PTR [rax+rax*1+0x69],ch
   14003923b:	add    BYTE PTR [rdx+0x0],bh
   14003923e:	(bad)  
   14003923f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140039243:	add    BYTE PTR [rdi+0x0],ch
   140039246:	outs   dx,BYTE PTR ds:[rsi]
   140039247:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17103fe4d
   14003924d:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d03c453
   140039253:	add    BYTE PTR [rcx],dh
	...
   14003925d:	add    BYTE PTR [rax],al
   14003925f:	add    BYTE PTR [rcx+0x0],ah
   140039262:	jo     0x140039264
   140039264:	imul   eax,DWORD PTR [rax],0x6d002d
   14003926a:	jae    0x14003926c
   14003926c:	sub    eax,0x69007700
   140039271:	add    BYTE PTR [rsi+0x0],ch
   140039274:	sub    eax,0x6f006300
   140039279:	add    BYTE PTR [rdx+0x0],dh
   14003927c:	add    BYTE PTR gs:[rip+0x6f006c00],ch        # 0x1af03fe83
   140039283:	add    BYTE PTR [rbx+0x0],ah
   140039286:	(bad)  
   140039287:	add    BYTE PTR [rax+rax*1+0x69],ch
   14003928b:	add    BYTE PTR [rdx+0x0],bh
   14003928e:	(bad)  
   14003928f:	add    BYTE PTR [rax+rax*1+0x69],dh
   140039293:	add    BYTE PTR [rdi+0x0],ch
   140039296:	outs   dx,BYTE PTR ds:[rsi]
   140039297:	add    BYTE PTR [rip+0x62006f00],ch        # 0x1a204019d
   14003929d:	add    BYTE PTR [rbx+0x0],dh
   1400392a0:	outs   dx,DWORD PTR ds:[rsi]
   1400392a1:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400392a5:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400392a9:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17103feaf
   1400392af:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d03c4b5
   1400392b5:	add    BYTE PTR [rax],dh
	...
   1400392bf:	add    BYTE PTR [rcx+0x0],ah
   1400392c2:	jo     0x1400392c4
   1400392c4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400392ca:	jae    0x1400392cc
   1400392cc:	sub    eax,0x69007700
   1400392d1:	add    BYTE PTR [rsi+0x0],ch
   1400392d4:	sub    eax,0x6f006300
   1400392d9:	add    BYTE PTR [rdx+0x0],dh
   1400392dc:	add    BYTE PTR gs:[rip+0x72007000],ch        # 0x1b20402e3
   1400392e3:	add    BYTE PTR [rdi+0x0],ch
   1400392e6:	movsxd eax,DWORD PTR [rax]
   1400392e8:	add    BYTE PTR gs:[rbx+0x0],dh
   1400392ec:	jae    0x1400392ee
   1400392ee:	je     0x1400392f0
   1400392f0:	push   0x65007200
   1400392f5:	add    BYTE PTR [rcx+0x0],ah
   1400392f8:	add    BYTE PTR fs:[rbx+0x0],dh
   1400392fc:	sub    eax,0x31006c00
   140039301:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c407
   140039307:	add    BYTE PTR [rdx],dh
   140039309:	add    BYTE PTR [rax],al
   14003930b:	add    BYTE PTR [rax],al
   14003930d:	add    BYTE PTR [rax],al
   14003930f:	add    BYTE PTR [rcx+0x0],ah
   140039312:	jo     0x140039314
   140039314:	imul   eax,DWORD PTR [rax],0x6d002d
   14003931a:	jae    0x14003931c
   14003931c:	sub    eax,0x69007700
   140039321:	add    BYTE PTR [rsi+0x0],ch
   140039324:	sub    eax,0x6f006300
   140039329:	add    BYTE PTR [rdx+0x0],dh
   14003932c:	add    BYTE PTR gs:[rip+0x74007300],ch        # 0x1b4040633
   140039333:	add    BYTE PTR [rdx+0x0],dh
   140039336:	imul   eax,DWORD PTR [rax],0x67006e
   14003933c:	sub    eax,0x31006c00
   140039341:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c447
   140039347:	add    BYTE PTR [rax],dh
   140039349:	add    BYTE PTR [rax],al
   14003934b:	add    BYTE PTR [rax],al
   14003934d:	add    BYTE PTR [rax],al
   14003934f:	add    BYTE PTR [rcx+0x0],ah
   140039352:	jo     0x140039354
   140039354:	imul   eax,DWORD PTR [rax],0x6d002d
   14003935a:	jae    0x14003935c
   14003935c:	sub    eax,0x69007700
   140039361:	add    BYTE PTR [rsi+0x0],ch
   140039364:	sub    eax,0x6f006300
   140039369:	add    BYTE PTR [rdx+0x0],dh
   14003936c:	add    BYTE PTR gs:[rip+0x79007300],ch        # 0x1b9040673
   140039373:	add    BYTE PTR [rbx+0x0],dh
   140039376:	imul   eax,DWORD PTR [rax],0x66006e
   14003937c:	outs   dx,DWORD PTR ds:[rsi]
   14003937d:	add    BYTE PTR [rip+0x31006c00],ch        # 0x17103ff83
   140039383:	add    BYTE PTR [rip+0x2d003200],ch        # 0x16d03c589
   140039389:	add    BYTE PTR [rcx],dh
   14003938b:	add    BYTE PTR [rax],al
   14003938d:	add    BYTE PTR [rax],al
   14003938f:	add    BYTE PTR [rcx+0x0],ah
   140039392:	jo     0x140039394
   140039394:	imul   eax,DWORD PTR [rax],0x6d002d
   14003939a:	jae    0x14003939c
   14003939c:	sub    eax,0x69007700
   1400393a1:	add    BYTE PTR [rsi+0x0],ch
   1400393a4:	sub    eax,0x6f006300
   1400393a9:	add    BYTE PTR [rdx+0x0],dh
   1400393ac:	add    BYTE PTR gs:[rip+0x69007700],ch        # 0x1a9040ab3
   1400393b3:	add    BYTE PTR [rsi+0x0],ch
   1400393b6:	jb     0x1400393b8
   1400393b8:	je     0x1400393ba
   1400393ba:	sub    eax,0x31006c00
   1400393bf:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c4c5
   1400393c5:	add    BYTE PTR [rax],dh
	...
   1400393cf:	add    BYTE PTR [rcx+0x0],ah
   1400393d2:	jo     0x1400393d4
   1400393d4:	imul   eax,DWORD PTR [rax],0x6d002d
   1400393da:	jae    0x1400393dc
   1400393dc:	sub    eax,0x69007700
   1400393e1:	add    BYTE PTR [rsi+0x0],ch
   1400393e4:	sub    eax,0x6f006300
   1400393e9:	add    BYTE PTR [rdx+0x0],dh
   1400393ec:	add    BYTE PTR gs:[rip+0x73007800],ch        # 0x1b3040bf3
   1400393f3:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400393f7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400393fb:	add    BYTE PTR [rip+0x32006c00],ch        # 0x172040001
   140039401:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c507
   140039407:	add    BYTE PTR [rax],dh
   140039409:	add    BYTE PTR [rax],al
   14003940b:	add    BYTE PTR [rax],al
   14003940d:	add    BYTE PTR [rax],al
   14003940f:	add    BYTE PTR [rcx+0x0],ah
   140039412:	jo     0x140039414
   140039414:	imul   eax,DWORD PTR [rax],0x6d002d
   14003941a:	jae    0x14003941c
   14003941c:	sub    eax,0x69007700
   140039421:	add    BYTE PTR [rsi+0x0],ch
   140039424:	sub    eax,0x74007200
   140039429:	add    BYTE PTR [rbx+0x0],ah
   14003942c:	outs   dx,DWORD PTR ds:[rsi]
   14003942d:	add    BYTE PTR [rdx+0x0],dh
   140039430:	add    BYTE PTR gs:[rip+0x74006e00],ch        # 0x1b4040237
   140039437:	add    BYTE PTR [rbp+0x0],dh
   14003943a:	jae    0x14003943c
   14003943c:	add    BYTE PTR gs:[rdx+0x0],dh
   140039440:	sub    eax,0x69007700
   140039445:	add    BYTE PTR [rsi+0x0],ch
   140039448:	add    BYTE PTR fs:[rdi+0x0],ch
   14003944c:	ja     0x14003944e
   14003944e:	sub    eax,0x31006c00
   140039453:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c559
   140039459:	add    BYTE PTR [rax],dh
   14003945b:	add    BYTE PTR [rax],al
   14003945d:	add    BYTE PTR [rax],al
   14003945f:	add    BYTE PTR [rcx+0x0],ah
   140039462:	jo     0x140039464
   140039464:	imul   eax,DWORD PTR [rax],0x6d002d
   14003946a:	jae    0x14003946c
   14003946c:	sub    eax,0x69007700
   140039471:	add    BYTE PTR [rsi+0x0],ch
   140039474:	sub    eax,0x65007300
   140039479:	add    BYTE PTR [rbx+0x0],ah
   14003947c:	jne    0x14003947e
   14003947e:	jb     0x140039480
   140039480:	imul   eax,DWORD PTR [rax],0x790074
   140039486:	sub    eax,0x79007300
   14003948b:	add    BYTE PTR [rbx+0x0],dh
   14003948e:	je     0x140039490
   140039490:	add    BYTE PTR gs:[rbp+0x0],ch
   140039494:	data16 add BYTE PTR [rbp+0x0],dh
   140039498:	outs   dx,BYTE PTR ds:[rsi]
   140039499:	add    BYTE PTR [rbx+0x0],ah
   14003949c:	je     0x14003949e
   14003949e:	imul   eax,DWORD PTR [rax],0x6e006f
   1400394a4:	jae    0x1400394a6
   1400394a6:	sub    eax,0x31006c00
   1400394ab:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c5b1
   1400394b1:	add    BYTE PTR [rax],dh
	...
   1400394bf:	add    BYTE PTR [rbp+0x0],ah
   1400394c2:	js     0x1400394c4
   1400394c4:	je     0x1400394c6
   1400394c6:	sub    eax,0x73006d00
   1400394cb:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9040bd1
   1400394d1:	add    BYTE PTR [rsi+0x0],ch
   1400394d4:	sub    eax,0x65006b00
   1400394d9:	add    BYTE PTR [rdx+0x0],dh
   1400394dc:	outs   dx,BYTE PTR ds:[rsi]
   1400394dd:	add    BYTE PTR [rbp+0x0],ah
   1400394e0:	ins    BYTE PTR es:[rdi],dx
   1400394e1:	add    BYTE PTR [rbx],dh
   1400394e3:	add    BYTE PTR [rdx],dh
   1400394e5:	add    BYTE PTR [rip+0x61007000],ch        # 0x1a10404eb
   1400394eb:	add    BYTE PTR [rbx+0x0],ah
   1400394ee:	imul   eax,DWORD PTR [rax],0x61
   1400394f1:	add    BYTE PTR [rdi+0x0],ah
   1400394f4:	add    BYTE PTR gs:[rip+0x75006300],ch        # 0x1b503f7fb
   1400394fb:	add    BYTE PTR [rdx+0x0],dh
   1400394fe:	jb     0x140039500
   140039500:	add    BYTE PTR gs:[rsi+0x0],ch
   140039504:	je     0x140039506
   140039506:	sub    eax,0x31006c00
   14003950b:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c611
   140039511:	add    BYTE PTR [rax],dh
	...
   14003951f:	add    BYTE PTR [rbp+0x0],ah
   140039522:	js     0x140039524
   140039524:	je     0x140039526
   140039526:	sub    eax,0x73006d00
   14003952b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9040c31
   140039531:	add    BYTE PTR [rsi+0x0],ch
   140039534:	sub    eax,0x74006e00
   140039539:	add    BYTE PTR [rbp+0x0],dh
   14003953c:	jae    0x14003953e
   14003953e:	add    BYTE PTR gs:[rdx+0x0],dh
   140039542:	sub    eax,0x69006400
   140039547:	add    BYTE PTR [rcx+0x0],ah
   14003954a:	ins    BYTE PTR es:[rdi],dx
   14003954b:	add    BYTE PTR [rdi+0x0],ch
   14003954e:	add    BYTE PTR [edx+0x0],ah
   140039552:	outs   dx,DWORD PTR ds:[rsi]
   140039553:	add    BYTE PTR [rax+0x0],bh
   140039556:	sub    eax,0x31006c00
   14003955b:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c661
   140039561:	add    BYTE PTR [rax],dh
	...
   14003956f:	add    BYTE PTR [rbp+0x0],ah
   140039572:	js     0x140039574
   140039574:	je     0x140039576
   140039576:	sub    eax,0x73006d00
   14003957b:	add    BYTE PTR [rip+0x69007700],ch        # 0x1a9040c81
   140039581:	add    BYTE PTR [rsi+0x0],ch
   140039584:	sub    eax,0x74006e00
   140039589:	add    BYTE PTR [rbp+0x0],dh
   14003958c:	jae    0x14003958e
   14003958e:	add    BYTE PTR gs:[rdx+0x0],dh
   140039592:	sub    eax,0x69007700
   140039597:	add    BYTE PTR [rsi+0x0],ch
   14003959a:	add    BYTE PTR fs:[rdi+0x0],ch
   14003959e:	ja     0x1400395a0
   1400395a0:	jae    0x1400395a2
   1400395a2:	je     0x1400395a4
   1400395a4:	(bad)  
   1400395a5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400395a9:	add    BYTE PTR [rdi+0x0],ch
   1400395ac:	outs   dx,BYTE PTR ds:[rsi]
   1400395ad:	add    BYTE PTR [rip+0x31006c00],ch        # 0x1710401b3
   1400395b3:	add    BYTE PTR [rip+0x2d003100],ch        # 0x16d03c6b9
   1400395b9:	add    BYTE PTR [rax],dh
   1400395bb:	add    BYTE PTR [rax],al
   1400395bd:	add    BYTE PTR [rax],al
   1400395bf:	add    BYTE PTR [rbp+0x0],dh
   1400395c2:	jae    0x1400395c4
   1400395c4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400395c8:	xor    eax,DWORD PTR [rax]
   1400395ca:	xor    al,BYTE PTR [rax]
   1400395cc:	add    BYTE PTR [rax],al
   1400395ce:	add    BYTE PTR [rax],al
   1400395d0:	(bad)  
   1400395d1:	add    BYTE PTR [rax],al
   1400395d3:	add    BYTE PTR [rdx],dl
   1400395d5:	add    BYTE PTR [rax],al
   1400395d7:	add    BYTE PTR [rbx+0x6f],al
   1400395da:	ins    DWORD PTR es:[rdi],dx
   1400395db:	jo     0x14003963e
   1400395dd:	jb     0x140039644
   1400395df:	push   rbx
   1400395e0:	je     0x140039654
   1400395e2:	imul   ebp,DWORD PTR [rsi+0x67],0x2007845
   1400395e9:	add    BYTE PTR [rax],al
   1400395eb:	add    BYTE PTR [rdx],dl
   1400395ed:	add    BYTE PTR [rax],al
   1400395ef:	add    BYTE PTR [rsi+0x6c],al
   1400395f2:	jae    0x140039635
   1400395f4:	ins    BYTE PTR es:[rdi],dx
   1400395f5:	ins    BYTE PTR es:[rdi],dx
   1400395f6:	outs   dx,DWORD PTR ds:[rsi]
   1400395f7:	movsxd eax,DWORD PTR [rax]
   1400395f9:	add    BYTE PTR [rax],al
   1400395fb:	add    BYTE PTR [rax],al
   1400395fd:	add    BYTE PTR [rax],al
   1400395ff:	add    BYTE PTR [rdx],al
   140039601:	add    BYTE PTR [rax],al
   140039603:	add    BYTE PTR [rdx],dl
   140039605:	add    BYTE PTR [rax],al
   140039607:	add    BYTE PTR [rsi+0x6c],al
   14003960a:	jae    0x140039652
   14003960c:	jb     0x140039673
   14003960e:	add    BYTE PTR gs:[rdx],al
   140039611:	add    BYTE PTR [rax],al
   140039613:	add    BYTE PTR [rdx],dl
   140039615:	add    BYTE PTR [rax],al
   140039617:	add    BYTE PTR [rsi+0x6c],al
   14003961a:	jae    0x140039663
   14003961c:	gs je  0x140039675
   14003961f:	(bad)  
   140039620:	ins    BYTE PTR es:[rdi],dx
   140039621:	jne    0x140039688
   140039623:	add    BYTE PTR [rax],al
   140039625:	add    BYTE PTR [rax],al
   140039627:	add    BYTE PTR [rdx],al
   140039629:	add    BYTE PTR [rax],al
   14003962b:	add    BYTE PTR [rdx],dl
   14003962d:	add    BYTE PTR [rax],al
   14003962f:	add    BYTE PTR [rsi+0x6c],al
   140039632:	jae    0x140039687
   140039634:	gs je  0x14003968d
   140039637:	(bad)  
   140039638:	ins    BYTE PTR es:[rdi],dx
   140039639:	jne    0x1400396a0
	...
   140039643:	add    BYTE PTR [rsi],cl
   140039645:	add    BYTE PTR [rax],al
   140039647:	add    BYTE PTR [rdi+0x65],al
   14003964a:	je     0x14003968f
   14003964c:	jne    0x1400396c0
   14003964e:	jb     0x1400396b5
   140039650:	outs   dx,BYTE PTR ds:[rsi]
   140039651:	je     0x1400396a3
   140039653:	(bad)  
   140039654:	movsxd ebp,DWORD PTR [rbx+0x61]
   140039657:	addr32 gs rex.WB
   14003965a:	add    BYTE PTR fs:[rax],al
   14003965d:	add    BYTE PTR [rax],al
   14003965f:	add    BYTE PTR [rax],cl
   140039661:	add    BYTE PTR [rax],al
   140039663:	add    BYTE PTR [rdx],dl
   140039665:	add    BYTE PTR [rax],al
   140039667:	add    BYTE PTR [rax+rax*1],al
   14003966a:	add    BYTE PTR [rax],al
   14003966c:	adc    al,BYTE PTR [rax]
   14003966e:	add    BYTE PTR [rax],al
   140039670:	rex.WR
   140039671:	rex.XB
   140039672:	rex.WRB (bad) 
   140039674:	jo     0x1400396c9
   140039676:	je     0x1400396ea
   140039678:	imul   ebp,DWORD PTR [rsi+0x67],0x7845
   14003967f:	add    BYTE PTR [rax+rax*1],al
   140039682:	add    BYTE PTR [rax],al
   140039684:	adc    al,BYTE PTR [rax]
   140039686:	add    BYTE PTR [rax],al
   140039688:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14003968a:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003968d:	gs rex.WRX (bad) 
   140039690:	ins    DWORD PTR es:[rdi],dx
   140039691:	gs push rsp
   140039693:	outs   dx,DWORD PTR ds:[rsi]
   140039694:	rex.WR
   140039695:	rex.XB
   140039696:	rex.WB
   140039697:	add    BYTE PTR [rax],r8b
   14003969a:	add    BYTE PTR [rax],al
   14003969c:	add    BYTE PTR [rax],al
   14003969e:	add    BYTE PTR [rax],al
   1400396a0:	(bad)  
   1400396a1:	cdq    
   1400396a2:	add    eax,DWORD PTR [rax+0x1]
   1400396a5:	add    BYTE PTR [rax],al
   1400396a7:	add    BYTE PTR [rcx+rbx*4+0x3],ah
   1400396ab:	rex add DWORD PTR [rax],eax
   1400396ae:	add    BYTE PTR [rax],al
   1400396b0:	push   0x1400399
   1400396b5:	add    BYTE PTR [rax],al
   1400396b7:	add    BYTE PTR [rcx+rbx*4+0x3],ch
   1400396bb:	rex add DWORD PTR [rax],eax
   1400396be:	add    BYTE PTR [rax],al
   1400396c0:	jo     0x14003965b
   1400396c2:	add    eax,DWORD PTR [rax+0x1]
   1400396c5:	add    BYTE PTR [rax],al
   1400396c7:	add    BYTE PTR [rcx+rbx*4+0x3],dh
   1400396cb:	rex add DWORD PTR [rax],eax
   1400396ce:	add    BYTE PTR [rax],al
   1400396d0:	js     0x14003966b
   1400396d2:	add    eax,DWORD PTR [rax+0x1]
   1400396d5:	add    BYTE PTR [rax],al
   1400396d7:	add    BYTE PTR [rcx+rbx*4+0x3],bh
   1400396db:	rex add DWORD PTR [rax],eax
   1400396de:	add    BYTE PTR [rax],al
   1400396e0:	test   BYTE PTR [rcx+0x14003],bl
   1400396e6:	add    BYTE PTR [rax],al
   1400396e8:	nop
   1400396e9:	cdq    
   1400396ea:	add    eax,DWORD PTR [rax+0x1]
   1400396ed:	add    BYTE PTR [rax],al
   1400396ef:	add    BYTE PTR [rax+0x1400399],bl
   1400396f5:	add    BYTE PTR [rax],al
   1400396f7:	add    BYTE PTR [rax+0x1400399],ch
   1400396fd:	add    BYTE PTR [rax],al
   1400396ff:	add    BYTE PTR [rcx+rbx*4+0x14003],dh
   140039706:	add    BYTE PTR [rax],al
   140039708:	rcr    BYTE PTR [rcx+0x14003],0x0
   14003970f:	add    ah,cl
   140039711:	cdq    
   140039712:	add    eax,DWORD PTR [rax+0x1]
   140039715:	add    BYTE PTR [rax],al
   140039717:	add    al,dl
   140039719:	cdq    
   14003971a:	add    eax,DWORD PTR [rax+0x1]
   14003971d:	add    BYTE PTR [rax],al
   14003971f:	add    ah,dl
   140039721:	cdq    
   140039722:	add    eax,DWORD PTR [rax+0x1]
   140039725:	add    BYTE PTR [rax],al
   140039727:	add    al,bl
   140039729:	cdq    
   14003972a:	add    eax,DWORD PTR [rax+0x1]
   14003972d:	add    BYTE PTR [rax],al
   14003972f:	add    ah,bl
   140039731:	cdq    
   140039732:	add    eax,DWORD PTR [rax+0x1]
   140039735:	add    BYTE PTR [rax],al
   140039737:	add    al,ah
   140039739:	cdq    
   14003973a:	add    eax,DWORD PTR [rax+0x1]
   14003973d:	add    BYTE PTR [rax],al
   14003973f:	add    ah,ah
   140039741:	cdq    
   140039742:	add    eax,DWORD PTR [rax+0x1]
   140039745:	add    BYTE PTR [rax],al
   140039747:	add    al,ch
   140039749:	cdq    
   14003974a:	add    eax,DWORD PTR [rax+0x1]
   14003974d:	add    BYTE PTR [rax],al
   14003974f:	add    ah,ch
   140039751:	cdq    
   140039752:	add    eax,DWORD PTR [rax+0x1]
   140039755:	add    BYTE PTR [rax],al
   140039757:	add    al,dh
   140039759:	cdq    
   14003975a:	add    eax,DWORD PTR [rax+0x1]
   14003975d:	add    BYTE PTR [rax],al
   14003975f:	add    ah,dh
   140039761:	cdq    
   140039762:	add    eax,DWORD PTR [rax+0x1]
   140039765:	add    BYTE PTR [rax],al
   140039767:	add    al,bh
   140039769:	cdq    
   14003976a:	add    eax,DWORD PTR [rax+0x1]
   14003976d:	add    BYTE PTR [rax],al
   14003976f:	add    BYTE PTR [rax],al
   140039771:	(bad)  
   140039772:	add    eax,DWORD PTR [rax+0x1]
   140039775:	add    BYTE PTR [rax],al
   140039777:	add    BYTE PTR [rax],cl
   140039779:	(bad)  
   14003977a:	add    eax,DWORD PTR [rax+0x1]
   14003977d:	add    BYTE PTR [rax],al
   14003977f:	add    BYTE PTR [rdx+rbx*4],dl
   140039782:	add    eax,DWORD PTR [rax+0x1]
   140039785:	add    BYTE PTR [rax],al
   140039787:	add    BYTE PTR [rdx+rbx*4],bl
   14003978a:	add    eax,DWORD PTR [rax+0x1]
   14003978d:	add    BYTE PTR [rax],al
   14003978f:	add    ah,bl
   140039791:	cdq    
   140039792:	add    eax,DWORD PTR [rax+0x1]
   140039795:	add    BYTE PTR [rax],al
   140039797:	add    BYTE PTR [rdx+rbx*4],ah
   14003979a:	add    eax,DWORD PTR [rax+0x1]
   14003979d:	add    BYTE PTR [rax],al
   14003979f:	add    BYTE PTR [rdx+rbx*4],ch
   1400397a2:	add    eax,DWORD PTR [rax+0x1]
   1400397a5:	add    BYTE PTR [rax],al
   1400397a7:	add    BYTE PTR [rdx+rbx*4],dh
   1400397aa:	add    eax,DWORD PTR [rax+0x1]
   1400397ad:	add    BYTE PTR [rax],al
   1400397af:	add    BYTE PTR [rax-0x66],al
   1400397b2:	add    eax,DWORD PTR [rax+0x1]
   1400397b5:	add    BYTE PTR [rax],al
   1400397b7:	add    BYTE PTR [rax-0x66],dl
   1400397ba:	add    eax,DWORD PTR [rax+0x1]
   1400397bd:	add    BYTE PTR [rax],al
   1400397bf:	add    BYTE PTR [rax-0x66],bl
   1400397c2:	add    eax,DWORD PTR [rax+0x1]
   1400397c5:	add    BYTE PTR [rax],al
   1400397c7:	add    BYTE PTR [rax-0x66],ch
   1400397ca:	add    eax,DWORD PTR [rax+0x1]
   1400397cd:	add    BYTE PTR [rax],al
   1400397cf:	add    BYTE PTR [rax+rax*4+0x14003],bl
   1400397d6:	add    BYTE PTR [rax],al
   1400397d8:	movabs al,ds:0x7800000001400380
   1400397e1:	(bad)  
   1400397e2:	add    eax,DWORD PTR [rax+0x1]
   1400397e5:	add    BYTE PTR [rax],al
   1400397e7:	add    BYTE PTR [rax+0x140039a],cl
   1400397ed:	add    BYTE PTR [rax],al
   1400397ef:	add    BYTE PTR [rax+0x140039a],ah
   1400397f5:	add    BYTE PTR [rax],al
   1400397f7:	add    BYTE PTR [rcx],al
   1400397f9:	add    BYTE PTR [rax],al
   1400397fb:	add    BYTE PTR [rax],al
   1400397fd:	add    BYTE PTR [rax],al
   1400397ff:	add    BYTE PTR [rax+0x140039a],dh
   140039805:	add    BYTE PTR [rax],al
   140039807:	add    BYTE PTR [rax+0x140039a],bh
   14003980d:	add    BYTE PTR [rax],al
   14003980f:	add    al,al
   140039811:	(bad)  
   140039812:	add    eax,DWORD PTR [rax+0x1]
   140039815:	add    BYTE PTR [rax],al
   140039817:	add    al,cl
   140039819:	(bad)  
   14003981a:	add    eax,DWORD PTR [rax+0x1]
   14003981d:	add    BYTE PTR [rax],al
   14003981f:	add    al,dl
   140039821:	(bad)  
   140039822:	add    eax,DWORD PTR [rax+0x1]
   140039825:	add    BYTE PTR [rax],al
   140039827:	add    al,bl
   140039829:	(bad)  
   14003982a:	add    eax,DWORD PTR [rax+0x1]
   14003982d:	add    BYTE PTR [rax],al
   14003982f:	add    al,ah
   140039831:	(bad)  
   140039832:	add    eax,DWORD PTR [rax+0x1]
   140039835:	add    BYTE PTR [rax],al
   140039837:	add    al,ch
   140039839:	(bad)  
   14003983a:	add    eax,DWORD PTR [rax+0x1]
   14003983d:	add    BYTE PTR [rax],al
   14003983f:	add    al,bh
   140039841:	(bad)  
   140039842:	add    eax,DWORD PTR [rax+0x1]
   140039845:	add    BYTE PTR [rax],al
   140039847:	add    BYTE PTR [rax],cl
   140039849:	fwait
   14003984a:	add    eax,DWORD PTR [rax+0x1]
   14003984d:	add    BYTE PTR [rax],al
   14003984f:	add    BYTE PTR [rax],bl
   140039851:	fwait
   140039852:	add    eax,DWORD PTR [rax+0x1]
   140039855:	add    BYTE PTR [rax],al
   140039857:	add    BYTE PTR [rax],dh
   140039859:	fwait
   14003985a:	add    eax,DWORD PTR [rax+0x1]
   14003985d:	add    BYTE PTR [rax],al
   14003985f:	add    BYTE PTR [rax-0x65],cl
   140039862:	add    eax,DWORD PTR [rax+0x1]
   140039865:	add    BYTE PTR [rax],al
   140039867:	add    BYTE PTR [rax-0x65],bl
   14003986a:	add    eax,DWORD PTR [rax+0x1]
   14003986d:	add    BYTE PTR [rax],al
   14003986f:	add    BYTE PTR [rax-0x65],dh
   140039872:	add    eax,DWORD PTR [rax+0x1]
   140039875:	add    BYTE PTR [rax],al
   140039877:	add    BYTE PTR [rax-0x65],bh
   14003987a:	add    eax,DWORD PTR [rax+0x1]
   14003987d:	add    BYTE PTR [rax],al
   14003987f:	add    BYTE PTR [rax+0x140039b],al
   140039885:	add    BYTE PTR [rax],al
   140039887:	add    BYTE PTR [rax+0x140039b],cl
   14003988d:	add    BYTE PTR [rax],al
   14003988f:	add    BYTE PTR [rax+0x140039b],dl
   140039895:	add    BYTE PTR [rax],al
   140039897:	add    BYTE PTR [rax+0x140039b],bl
   14003989d:	add    BYTE PTR [rax],al
   14003989f:	add    BYTE PTR [rax+0x140039b],ah
   1400398a5:	add    BYTE PTR [rax],al
   1400398a7:	add    BYTE PTR [rax+0x140039b],ch
   1400398ad:	add    BYTE PTR [rax],al
   1400398af:	add    BYTE PTR [rax+0x140039b],dh
   1400398b5:	add    BYTE PTR [rax],al
   1400398b7:	add    BYTE PTR [rax+0x140039b],bh
   1400398bd:	add    BYTE PTR [rax],al
   1400398bf:	add    al,al
   1400398c1:	fwait
   1400398c2:	add    eax,DWORD PTR [rax+0x1]
   1400398c5:	add    BYTE PTR [rax],al
   1400398c7:	add    al,cl
   1400398c9:	fwait
   1400398ca:	add    eax,DWORD PTR [rax+0x1]
   1400398cd:	add    BYTE PTR [rax],al
   1400398cf:	add    al,dl
   1400398d1:	fwait
   1400398d2:	add    eax,DWORD PTR [rax+0x1]
   1400398d5:	add    BYTE PTR [rax],al
   1400398d7:	add    al,ah
   1400398d9:	fwait
   1400398da:	add    eax,DWORD PTR [rax+0x1]
   1400398dd:	add    BYTE PTR [rax],al
   1400398df:	add    al,bh
   1400398e1:	fwait
   1400398e2:	add    eax,DWORD PTR [rax+0x1]
   1400398e5:	add    BYTE PTR [rax],al
   1400398e7:	add    BYTE PTR [rax],cl
   1400398e9:	pushf  
   1400398ea:	add    eax,DWORD PTR [rax+0x1]
   1400398ed:	add    BYTE PTR [rax],al
   1400398ef:	add    BYTE PTR [rax+0x140039b],dl
   1400398f5:	add    BYTE PTR [rax],al
   1400398f7:	add    BYTE PTR [rax],bl
   1400398f9:	pushf  
   1400398fa:	add    eax,DWORD PTR [rax+0x1]
   1400398fd:	add    BYTE PTR [rax],al
   1400398ff:	add    BYTE PTR [rax],ch
   140039901:	pushf  
   140039902:	add    eax,DWORD PTR [rax+0x1]
   140039905:	add    BYTE PTR [rax],al
   140039907:	add    BYTE PTR [rax],bh
   140039909:	pushf  
   14003990a:	add    eax,DWORD PTR [rax+0x1]
   14003990d:	add    BYTE PTR [rax],al
   14003990f:	add    BYTE PTR [rax-0x64],cl
   140039912:	add    eax,DWORD PTR [rax+0x1]
   140039915:	add    BYTE PTR [rax],al
   140039917:	add    BYTE PTR [rax-0x64],ah
   14003991a:	add    eax,DWORD PTR [rax+0x1]
   14003991d:	add    BYTE PTR [rax],al
   14003991f:	add    BYTE PTR [rax-0x64],dh
   140039922:	add    eax,DWORD PTR [rax+0x1]
   140039925:	add    BYTE PTR [rax],al
   140039927:	add    BYTE PTR [rax+0x140039c],cl
   14003992d:	add    BYTE PTR [rax],al
   14003992f:	add    BYTE PTR [rsp+rbx*4+0x14003],bl
   140039936:	add    BYTE PTR [rax],al
   140039938:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140039939:	pushf  
   14003993a:	add    eax,DWORD PTR [rax+0x1]
   14003993d:	add    BYTE PTR [rax],al
   14003993f:	add    BYTE PTR [rax+0x140039c],dh
   140039945:	add    BYTE PTR [rax],al
   140039947:	add    al,cl
   140039949:	pushf  
   14003994a:	add    eax,DWORD PTR [rax+0x1]
   14003994d:	add    BYTE PTR [rax],al
   14003994f:	add    al,dh
   140039951:	pushf  
   140039952:	add    eax,DWORD PTR [rax+0x1]
   140039955:	add    BYTE PTR [rax],al
   140039957:	add    BYTE PTR [rax],cl
   140039959:	popf   
   14003995a:	add    eax,DWORD PTR [rax+0x1]
   14003995d:	add    BYTE PTR [rax],al
   14003995f:	add    BYTE PTR [rbx+0x75],dl
   140039962:	outs   dx,BYTE PTR ds:[rsi]
   140039963:	add    BYTE PTR [rbp+0x6f],cl
   140039966:	outs   dx,BYTE PTR ds:[rsi]
   140039967:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   14003996b:	add    BYTE PTR [rdi+0x65],dl
   14003996e:	add    BYTE PTR fs:[rax+rbp*2+0x75],dl
   140039973:	add    BYTE PTR [rsi+0x72],al
   140039976:	imul   eax,DWORD PTR [rax],0x746153
   14003997c:	push   rbx
   14003997d:	jne    0x1400399ed
   14003997f:	fs (bad) 
   140039981:	jns    0x140039983
   140039983:	add    BYTE PTR [rbp+0x6f],cl
   140039986:	outs   dx,BYTE PTR ds:[rsi]
   140039987:	fs (bad) 
   140039989:	jns    0x14003998b
   14003998b:	add    BYTE PTR [rax],al
   14003998d:	add    BYTE PTR [rax],al
   14003998f:	add    BYTE PTR [rbp+rsi*2+0x65],dl
   140039993:	jae    0x1400399f9
   140039995:	(bad)  
   140039996:	jns    0x140039998
   140039998:	push   rdi
   140039999:	gs outs dx,BYTE PTR fs:[rsi]
   14003999c:	gs jae 0x140039a03
   14003999f:	(bad)  
   1400399a0:	jns    0x1400399a2
   1400399a2:	add    BYTE PTR [rax],al
   1400399a4:	add    BYTE PTR [rax],al
   1400399a6:	add    BYTE PTR [rax],al
   1400399a8:	push   rsp
   1400399a9:	push   0x64737275
   1400399ae:	(bad)  
   1400399af:	jns    0x1400399b1
   1400399b1:	add    BYTE PTR [rax],al
   1400399b3:	add    BYTE PTR [rsi+0x72],al
   1400399b6:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   1400399be:	add    BYTE PTR [rax],al
   1400399c0:	push   rbx
   1400399c1:	(bad)  
   1400399c2:	je     0x140039a39
   1400399c4:	jb     0x140039a2a
   1400399c6:	(bad)  
   1400399c7:	jns    0x1400399c9
   1400399c9:	add    BYTE PTR [rax],al
   1400399cb:	add    BYTE PTR [rdx+0x61],cl
   1400399ce:	outs   dx,BYTE PTR ds:[rsi]
   1400399cf:	add    BYTE PTR [rsi+0x65],al
   1400399d2:	(bad)  
   1400399d3:	add    BYTE PTR [rbp+0x61],cl
   1400399d6:	jb     0x1400399d8
   1400399d8:	rex.B jo 0x140039a4d
   1400399db:	add    BYTE PTR [rbp+0x61],cl
   1400399de:	jns    0x1400399e0
   1400399e0:	rex.WX jne 0x140039a51
   1400399e3:	add    BYTE PTR [rdx+0x75],cl
   1400399e6:	ins    BYTE PTR es:[rdi],dx
   1400399e7:	add    BYTE PTR [rcx+0x75],al
   1400399ea:	add    BYTE PTR [ebx+0x65],dl
   1400399ee:	jo     0x1400399f0
   1400399f0:	movsxd r14,DWORD PTR [r8+r8*1+0x4e]
   1400399f5:	outs   dx,DWORD PTR ds:[rsi]
   1400399f6:	jbe    0x1400399f8
   1400399f8:	rex.R
   1400399f9:	movsxd eax,DWORD PTR gs:[rax]
   1400399fc:	add    BYTE PTR [rax],al
   1400399fe:	add    BYTE PTR [rax],al
   140039a00:	rex.WX (bad) 
   140039a02:	outs   dx,BYTE PTR ds:[rsi]
   140039a03:	jne    0x140039a66
   140039a05:	jb     0x140039a80
   140039a07:	add    BYTE PTR [rsi+0x65],al
   140039a0a:	(bad)
   140039a0f:	jns    0x140039a11
   140039a11:	add    BYTE PTR [rax],al
   140039a13:	add    BYTE PTR [rbp+0x61],cl
   140039a16:	jb     0x140039a7b
   140039a18:	push   0x41000000
   140039a1d:	jo     0x140039a91
   140039a1f:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x6e754a00
   140039a27:	add    BYTE PTR gs:[rax],al
   140039a2a:	add    BYTE PTR [rax],al
   140039a2c:	rex.WX jne 0x140039a9b
   140039a2f:	jns    0x140039a31
   140039a31:	add    BYTE PTR [rax],al
   140039a33:	add    BYTE PTR [rcx+0x75],al
   140039a36:	addr32 jne 0x140039aac
   140039a39:	je     0x140039a3b
   140039a3b:	add    BYTE PTR [rax],al
   140039a3d:	add    BYTE PTR [rax],al
   140039a3f:	add    BYTE PTR [rbx+0x65],dl
   140039a42:	jo     0x140039ab8
   140039a44:	gs ins DWORD PTR es:[rdi],dx
   140039a46:	(bad)  
   140039a47:	gs jb  0x140039a4a
   140039a4a:	add    BYTE PTR [rax],al
   140039a4c:	add    BYTE PTR [rax],al
   140039a4e:	add    BYTE PTR [rax],al
   140039a50:	movsxd r14,DWORD PTR [r15+r13*2+0x62]
   140039a55:	gs jb  0x140039a58
   140039a58:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140039a5a:	jbe    0x140039ac1
   140039a5c:	ins    DWORD PTR es:[rdi],dx
   140039a5d:	(bad)  
   140039a5e:	gs jb  0x140039a61
   140039a61:	add    BYTE PTR [rax],al
   140039a63:	add    BYTE PTR [rax],al
   140039a65:	add    BYTE PTR [rax],al
   140039a67:	add    BYTE PTR [rbp+riz*2+0x63],al
   140039a6b:	gs ins DWORD PTR es:[rdi],dx
   140039a6d:	(bad)  
   140039a6e:	gs jb  0x140039a71
   140039a71:	add    BYTE PTR [rax],al
   140039a73:	add    BYTE PTR [rax],al
   140039a75:	add    BYTE PTR [rax],al
   140039a77:	add    BYTE PTR [rbp+0x4d],cl
   140039a7a:	(bad)  
   140039a7b:	fs fs (bad) 
   140039a7e:	jns    0x140039af9
	...
   140039a88:	fs fs fs fs sub al,0x20
   140039a8e:	rex.WRB
   140039a8f:	rex.WRB
   140039a90:	rex.WRB
   140039a91:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   140039a96:	and    BYTE PTR [rcx+0x79],bh
   140039a99:	jns    0x140039b14
   140039a9b:	add    BYTE PTR [rax],al
   140039a9d:	add    BYTE PTR [rax],al
   140039a9f:	add    BYTE PTR [rax+0x48],cl
   140039aa2:	cmp    ch,BYTE PTR [rbp+0x6d]
   140039aa5:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   140039ab0:	push   rbx
   140039ab1:	add    BYTE PTR [rbp+0x0],dh
   140039ab4:	outs   dx,BYTE PTR ds:[rsi]
   140039ab5:	add    BYTE PTR [rax],al
   140039ab7:	add    BYTE PTR [rbp+0x0],cl
   140039aba:	outs   dx,DWORD PTR ds:[rsi]
   140039abb:	add    BYTE PTR [rsi+0x0],ch
   140039abe:	add    BYTE PTR [rax],al
   140039ac0:	push   rsp
   140039ac1:	add    BYTE PTR [rbp+0x0],dh
   140039ac4:	add    BYTE PTR gs:[rax],al
   140039ac7:	add    BYTE PTR [rdi+0x0],dl
   140039aca:	add    BYTE PTR gs:[rax+rax*1+0x0],ah
   140039acf:	add    BYTE PTR [rax+rax*1+0x68],dl
   140039ad3:	add    BYTE PTR [rbp+0x0],dh
   140039ad6:	add    BYTE PTR [rax],al
   140039ad8:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140039adc:	imul   eax,DWORD PTR [rax],0x530000
   140039ae2:	(bad)  
   140039ae3:	add    BYTE PTR [rax+rax*1+0x0],dh
   140039ae7:	add    BYTE PTR [rbx+0x0],dl
   140039aea:	jne    0x140039aec
   140039aec:	outs   dx,BYTE PTR ds:[rsi]
   140039aed:	add    BYTE PTR [rax+rax*1+0x61],ah
   140039af1:	add    BYTE PTR [rcx+0x0],bh
   140039af4:	add    BYTE PTR [rax],al
   140039af6:	add    BYTE PTR [rax],al
   140039af8:	rex.WRB add BYTE PTR [r15+0x0],r13b
   140039afc:	outs   dx,BYTE PTR ds:[rsi]
   140039afd:	add    BYTE PTR [rax+rax*1+0x61],ah
   140039b01:	add    BYTE PTR [rcx+0x0],bh
   140039b04:	add    BYTE PTR [rax],al
   140039b06:	add    BYTE PTR [rax],al
   140039b08:	push   rsp
   140039b09:	add    BYTE PTR [rbp+0x0],dh
   140039b0c:	add    BYTE PTR gs:[rbx+0x0],dh
   140039b10:	add    BYTE PTR fs:[rcx+0x0],ah
   140039b14:	jns    0x140039b16
   140039b16:	add    BYTE PTR [rax],al
   140039b18:	push   rdi
   140039b19:	add    BYTE PTR [rbp+0x0],ah
   140039b1c:	add    BYTE PTR fs:[rsi+0x0],ch
   140039b20:	add    BYTE PTR gs:[rbx+0x0],dh
   140039b24:	add    BYTE PTR fs:[rcx+0x0],ah
   140039b28:	jns    0x140039b2a
   140039b2a:	add    BYTE PTR [rax],al
   140039b2c:	add    BYTE PTR [rax],al
   140039b2e:	add    BYTE PTR [rax],al
   140039b30:	push   rsp
   140039b31:	add    BYTE PTR [rax+0x0],ch
   140039b34:	jne    0x140039b36
   140039b36:	jb     0x140039b38
   140039b38:	jae    0x140039b3a
   140039b3a:	add    BYTE PTR fs:[rcx+0x0],ah
   140039b3e:	jns    0x140039b40
	...
   140039b48:	rex.RX add BYTE PTR [rdx+0x0],r14b
   140039b4c:	imul   eax,DWORD PTR [rax],0x610064
   140039b52:	jns    0x140039b54
   140039b54:	add    BYTE PTR [rax],al
   140039b56:	add    BYTE PTR [rax],al
   140039b58:	push   rbx
   140039b59:	add    BYTE PTR [rcx+0x0],ah
   140039b5c:	je     0x140039b5e
   140039b5e:	jne    0x140039b60
   140039b60:	jb     0x140039b62
   140039b62:	add    BYTE PTR fs:[rcx+0x0],ah
   140039b66:	jns    0x140039b68
	...
   140039b70:	rex.WX add BYTE PTR [rcx+0x0],spl
   140039b74:	outs   dx,BYTE PTR ds:[rsi]
   140039b75:	add    BYTE PTR [rax],al
   140039b77:	add    BYTE PTR [rsi+0x0],al
   140039b7a:	add    BYTE PTR gs:[rdx+0x0],ah
   140039b7e:	add    BYTE PTR [rax],al
   140039b80:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140039b84:	jb     0x140039b86
   140039b86:	add    BYTE PTR [rax],al
   140039b88:	add    BYTE PTR [r8+0x0],sil
   140039b8c:	jb     0x140039b8e
   140039b8e:	add    BYTE PTR [rax],al
   140039b90:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140039b94:	jns    0x140039b96
   140039b96:	add    BYTE PTR [rax],al
   140039b98:	rex.WX add BYTE PTR [rbp+0x0],sil
   140039b9c:	outs   dx,BYTE PTR ds:[rsi]
   140039b9d:	add    BYTE PTR [rax],al
   140039b9f:	add    BYTE PTR [rdx+0x0],cl
   140039ba2:	jne    0x140039ba4
   140039ba4:	ins    BYTE PTR es:[rdi],dx
   140039ba5:	add    BYTE PTR [rax],al
   140039ba7:	add    BYTE PTR [rcx+0x0],al
   140039baa:	jne    0x140039bac
   140039bac:	add    BYTE PTR [eax],al
   140039baf:	add    BYTE PTR [rbx+0x0],dl
   140039bb2:	add    BYTE PTR gs:[rax+0x0],dh
   140039bb6:	add    BYTE PTR [rax],al
   140039bb8:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   140039bbc:	je     0x140039bbe
   140039bbe:	add    BYTE PTR [rax],al
   140039bc0:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140039bc4:	jbe    0x140039bc6
   140039bc6:	add    BYTE PTR [rax],al
   140039bc8:	add    BYTE PTR [rbp+0x0],r12b
   140039bcc:	movsxd eax,DWORD PTR [rax]
   140039bce:	add    BYTE PTR [rax],al
   140039bd0:	rex.WX add BYTE PTR [rcx+0x0],spl
   140039bd4:	outs   dx,BYTE PTR ds:[rsi]
   140039bd5:	add    BYTE PTR [rbp+0x0],dh
   140039bd8:	(bad)  
   140039bd9:	add    BYTE PTR [rdx+0x0],dh
   140039bdc:	jns    0x140039bde
   140039bde:	add    BYTE PTR [rax],al
   140039be0:	rex.RX add BYTE PTR [rbp+0x0],r12b
   140039be4:	(bad)  
   140039be5:	add    BYTE PTR [rdx+0x0],dh
   140039be8:	jne    0x140039bea
   140039bea:	(bad)  
   140039beb:	add    BYTE PTR [rdx+0x0],dh
   140039bee:	jns    0x140039bf0
	...
   140039bf8:	rex.WRB add BYTE PTR [r9+0x0],r12b
   140039bfc:	jb     0x140039bfe
   140039bfe:	movsxd eax,DWORD PTR [rax]
   140039c00:	push   0x0
   140039c05:	add    BYTE PTR [rax],al
   140039c07:	add    BYTE PTR [rcx+0x0],al
   140039c0a:	jo     0x140039c0c
   140039c0c:	jb     0x140039c0e
   140039c0e:	imul   eax,DWORD PTR [rax],0x6c
   140039c14:	add    BYTE PTR [rax],al
   140039c16:	add    BYTE PTR [rax],al
   140039c18:	rex.WX add BYTE PTR [rbp+0x0],sil
   140039c1c:	outs   dx,BYTE PTR ds:[rsi]
   140039c1d:	add    BYTE PTR [rbp+0x0],ah
	...
   140039c28:	rex.WX add BYTE PTR [rbp+0x0],sil
   140039c2c:	ins    BYTE PTR es:[rdi],dx
   140039c2d:	add    BYTE PTR [rcx+0x0],bh
	...
   140039c38:	add    BYTE PTR [r13+0x0],sil
   140039c3c:	add    BYTE PTR [ebp+0x0],dh
   140039c40:	jae    0x140039c42
   140039c42:	je     0x140039c44
   140039c44:	add    BYTE PTR [rax],al
   140039c46:	add    BYTE PTR [rax],al
   140039c48:	push   rbx
   140039c49:	add    BYTE PTR [rbp+0x0],ah
   140039c4c:	jo     0x140039c4e
   140039c4e:	je     0x140039c50
   140039c50:	add    BYTE PTR gs:[rbp+0x0],ch
   140039c54:	(bad)  
   140039c55:	add    BYTE PTR [rbp+0x0],ah
   140039c58:	jb     0x140039c5a
   140039c5a:	add    BYTE PTR [rax],al
   140039c5c:	add    BYTE PTR [rax],al
   140039c5e:	add    BYTE PTR [rax],al
   140039c60:	rex.WRXB add BYTE PTR [r11+0x0],r12b
   140039c64:	je     0x140039c66
   140039c66:	outs   dx,DWORD PTR ds:[rsi]
   140039c67:	add    BYTE PTR [rdx+0x0],ah
   140039c6a:	add    BYTE PTR gs:[rdx+0x0],dh
   140039c6e:	add    BYTE PTR [rax],al
   140039c70:	rex.WRX add BYTE PTR [rdi+0x0],r13b
   140039c74:	jbe    0x140039c76
   140039c76:	add    BYTE PTR gs:[rbp+0x0],ch
   140039c7a:	(bad)  
   140039c7b:	add    BYTE PTR [rbp+0x0],ah
   140039c7e:	jb     0x140039c80
	...
   140039c88:	add    BYTE PTR [rbp+0x0],r12b
   140039c8c:	movsxd eax,DWORD PTR [rax]
   140039c8e:	add    BYTE PTR gs:[rbp+0x0],ch
   140039c92:	(bad)  
   140039c93:	add    BYTE PTR [rbp+0x0],ah
   140039c96:	jb     0x140039c98
   140039c98:	add    BYTE PTR [rax],al
   140039c9a:	add    BYTE PTR [rax],al
   140039c9c:	add    BYTE PTR [r13+0x0],cl
   140039ca0:	add    BYTE PTR [rax],al
   140039ca2:	add    BYTE PTR [rax],al
   140039ca4:	push   rax
   140039ca5:	add    BYTE PTR [rbp+0x0],cl
	...
   140039cb0:	rex.WRB add BYTE PTR [r13+0x0],r9b
   140039cb4:	(bad)  
   140039cb5:	add    BYTE PTR [rax+rax*1+0x64],ah
   140039cb9:	add    BYTE PTR [rdi],ch
   140039cbb:	add    BYTE PTR [rcx+0x0],bh
   140039cbe:	jns    0x140039cc0
	...
   140039cc8:	add    BYTE PTR fs:[rax+rax*1+0x64],ah
   140039ccd:	add    BYTE PTR [rax+rax*1+0x2c],ah
   140039cd1:	add    BYTE PTR [rax],ah
   140039cd3:	add    BYTE PTR [rbp+0x0],cl
   140039cd6:	rex.WRB add BYTE PTR [r13+0x0],r9b
   140039cda:	rex.WRB add BYTE PTR [r8],r12b
   140039cdd:	add    BYTE PTR [rax+rax*1+0x64],ah
   140039ce1:	add    BYTE PTR [rax+rax*1],ch
   140039ce4:	and    BYTE PTR [rax],al
   140039ce6:	jns    0x140039ce8
   140039ce8:	jns    0x140039cea
   140039cea:	jns    0x140039cec
   140039cec:	jns    0x140039cee
   140039cee:	add    BYTE PTR [rax],al
   140039cf0:	rex.W add BYTE PTR [rax+0x0],cl
   140039cf4:	cmp    al,BYTE PTR [rax]
   140039cf6:	ins    DWORD PTR es:[rdi],dx
   140039cf7:	add    BYTE PTR [rbp+0x0],ch
   140039cfa:	cmp    al,BYTE PTR [rax]
   140039cfc:	jae    0x140039cfe
   140039cfe:	jae    0x140039d00
	...
   140039d08:	add    BYTE PTR gs:[rsi+0x0],ch
   140039d0c:	sub    eax,0x53005500
   140039d11:	add    BYTE PTR [rax],al
   140039d13:	add    BYTE PTR [rax],al
   140039d15:	add    BYTE PTR [rax],al
   140039d17:	add    BYTE PTR [rax],bh
   140039d19:	popf   
   140039d1a:	add    eax,DWORD PTR [rax+0x1]
   140039d1d:	add    BYTE PTR [rax],al
   140039d1f:	add    BYTE PTR [rax-0x63],cl
   140039d22:	add    eax,DWORD PTR [rax+0x1]
   140039d25:	add    BYTE PTR [rax],al
   140039d27:	add    BYTE PTR [rax-0x63],bl
   140039d2a:	add    eax,DWORD PTR [rax+0x1]
   140039d2d:	add    BYTE PTR [rax],al
   140039d2f:	add    BYTE PTR [rax-0x63],ch
   140039d32:	add    eax,DWORD PTR [rax+0x1]
   140039d35:	add    BYTE PTR [rax],al
   140039d37:	add    BYTE PTR [rdx+0x0],ch
   140039d3a:	(bad)  
   140039d3b:	add    BYTE PTR [rip+0x50004a00],ch        # 0x19003e741
   140039d41:	add    BYTE PTR [rax],al
   140039d43:	add    BYTE PTR [rax],al
   140039d45:	add    BYTE PTR [rax],al
   140039d47:	add    BYTE PTR [rdx+0x0],bh
   140039d4a:	push   0x43002d00
   140039d4f:	add    BYTE PTR [rsi+0x0],cl
   140039d52:	add    BYTE PTR [rax],al
   140039d54:	add    BYTE PTR [rax],al
   140039d56:	add    BYTE PTR [rax],al
   140039d58:	imul   eax,DWORD PTR [rax],0x6f
   140039d5b:	add    BYTE PTR [rip+0x52004b00],ch        # 0x19203e861
   140039d61:	add    BYTE PTR [rax],al
   140039d63:	add    BYTE PTR [rax],al
   140039d65:	add    BYTE PTR [rax],al
   140039d67:	add    BYTE PTR [rdx+0x0],bh
   140039d6a:	push   0x54002d00
   140039d6f:	add    BYTE PTR [rdi+0x0],dl
	...
   140039e7e:	add    BYTE PTR [rax],al
   140039e80:	and    BYTE PTR [rax],al
   140039e82:	and    BYTE PTR [rax],al
   140039e84:	and    BYTE PTR [rax],al
   140039e86:	and    BYTE PTR [rax],al
   140039e88:	and    BYTE PTR [rax],al
   140039e8a:	and    BYTE PTR [rax],al
   140039e8c:	and    BYTE PTR [rax],al
   140039e8e:	and    BYTE PTR [rax],al
   140039e90:	and    BYTE PTR [rax],al
   140039e92:	sub    BYTE PTR [rax],al
   140039e94:	sub    BYTE PTR [rax],al
   140039e96:	sub    BYTE PTR [rax],al
   140039e98:	sub    BYTE PTR [rax],al
   140039e9a:	sub    BYTE PTR [rax],al
   140039e9c:	and    BYTE PTR [rax],al
   140039e9e:	and    BYTE PTR [rax],al
   140039ea0:	and    BYTE PTR [rax],al
   140039ea2:	and    BYTE PTR [rax],al
   140039ea4:	and    BYTE PTR [rax],al
   140039ea6:	and    BYTE PTR [rax],al
   140039ea8:	and    BYTE PTR [rax],al
   140039eaa:	and    BYTE PTR [rax],al
   140039eac:	and    BYTE PTR [rax],al
   140039eae:	and    BYTE PTR [rax],al
   140039eb0:	and    BYTE PTR [rax],al
   140039eb2:	and    BYTE PTR [rax],al
   140039eb4:	and    BYTE PTR [rax],al
   140039eb6:	and    BYTE PTR [rax],al
   140039eb8:	and    BYTE PTR [rax],al
   140039eba:	and    BYTE PTR [rax],al
   140039ebc:	and    BYTE PTR [rax],al
   140039ebe:	and    BYTE PTR [rax],al
   140039ec0:	rex.W add BYTE PTR [rax],dl
   140039ec3:	add    BYTE PTR [rax],dl
   140039ec5:	add    BYTE PTR [rax],dl
   140039ec7:	add    BYTE PTR [rax],dl
   140039ec9:	add    BYTE PTR [rax],dl
   140039ecb:	add    BYTE PTR [rax],dl
   140039ecd:	add    BYTE PTR [rax],dl
   140039ecf:	add    BYTE PTR [rax],dl
   140039ed1:	add    BYTE PTR [rax],dl
   140039ed3:	add    BYTE PTR [rax],dl
   140039ed5:	add    BYTE PTR [rax],dl
   140039ed7:	add    BYTE PTR [rax],dl
   140039ed9:	add    BYTE PTR [rax],dl
   140039edb:	add    BYTE PTR [rax],dl
   140039edd:	add    BYTE PTR [rax],dl
   140039edf:	add    BYTE PTR [rax+rax*1+0x840084],al
   140039ee6:	test   BYTE PTR [rax],al
   140039ee8:	test   BYTE PTR [rax],al
   140039eea:	test   BYTE PTR [rax],al
   140039eec:	test   BYTE PTR [rax],al
   140039eee:	test   BYTE PTR [rax],al
   140039ef0:	test   BYTE PTR [rax],al
   140039ef2:	test   BYTE PTR [rax],al
   140039ef4:	adc    BYTE PTR [rax],al
   140039ef6:	adc    BYTE PTR [rax],al
   140039ef8:	adc    BYTE PTR [rax],al
   140039efa:	adc    BYTE PTR [rax],al
   140039efc:	adc    BYTE PTR [rax],al
   140039efe:	adc    BYTE PTR [rax],al
   140039f00:	adc    BYTE PTR [rax],al
   140039f02:	add    DWORD PTR [rax],0x810081
   140039f08:	add    DWORD PTR [rax],0x810081
   140039f0e:	add    DWORD PTR [rax],eax
   140039f10:	add    DWORD PTR [rax],eax
   140039f12:	add    DWORD PTR [rax],eax
   140039f14:	add    DWORD PTR [rax],eax
   140039f16:	add    DWORD PTR [rax],eax
   140039f18:	add    DWORD PTR [rax],eax
   140039f1a:	add    DWORD PTR [rax],eax
   140039f1c:	add    DWORD PTR [rax],eax
   140039f1e:	add    DWORD PTR [rax],eax
   140039f20:	add    DWORD PTR [rax],eax
   140039f22:	add    DWORD PTR [rax],eax
   140039f24:	add    DWORD PTR [rax],eax
   140039f26:	add    DWORD PTR [rax],eax
   140039f28:	add    DWORD PTR [rax],eax
   140039f2a:	add    DWORD PTR [rax],eax
   140039f2c:	add    DWORD PTR [rax],eax
   140039f2e:	add    DWORD PTR [rax],eax
   140039f30:	add    DWORD PTR [rax],eax
   140039f32:	add    DWORD PTR [rax],eax
   140039f34:	add    DWORD PTR [rax],eax
   140039f36:	adc    BYTE PTR [rax],al
   140039f38:	adc    BYTE PTR [rax],al
   140039f3a:	adc    BYTE PTR [rax],al
   140039f3c:	adc    BYTE PTR [rax],al
   140039f3e:	adc    BYTE PTR [rax],al
   140039f40:	adc    BYTE PTR [rax],al
   140039f42:	(bad)  
   140039f43:	add    BYTE PTR [rdx-0x7dff7e00],al
   140039f49:	add    BYTE PTR [rdx+0x2008200],al
   140039f4f:	add    BYTE PTR [rdx],al
   140039f51:	add    BYTE PTR [rdx],al
   140039f53:	add    BYTE PTR [rdx],al
   140039f55:	add    BYTE PTR [rdx],al
   140039f57:	add    BYTE PTR [rdx],al
   140039f59:	add    BYTE PTR [rdx],al
   140039f5b:	add    BYTE PTR [rdx],al
   140039f5d:	add    BYTE PTR [rdx],al
   140039f5f:	add    BYTE PTR [rdx],al
   140039f61:	add    BYTE PTR [rdx],al
   140039f63:	add    BYTE PTR [rdx],al
   140039f65:	add    BYTE PTR [rdx],al
   140039f67:	add    BYTE PTR [rdx],al
   140039f69:	add    BYTE PTR [rdx],al
   140039f6b:	add    BYTE PTR [rdx],al
   140039f6d:	add    BYTE PTR [rdx],al
   140039f6f:	add    BYTE PTR [rdx],al
   140039f71:	add    BYTE PTR [rdx],al
   140039f73:	add    BYTE PTR [rdx],al
   140039f75:	add    BYTE PTR [rax],dl
   140039f77:	add    BYTE PTR [rax],dl
   140039f79:	add    BYTE PTR [rax],dl
   140039f7b:	add    BYTE PTR [rax],dl
   140039f7d:	add    BYTE PTR [rax],ah
	...
   14003a07f:	add    BYTE PTR [rax-0x7b7c7d7f],al
   14003a085:	test   DWORD PTR [rsi-0x75767779],eax
   14003a08b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14003a092:	xchg   edx,eax
   14003a093:	xchg   ebx,eax
   14003a094:	xchg   esp,eax
   14003a095:	xchg   ebp,eax
   14003a096:	xchg   esi,eax
   14003a097:	xchg   edi,eax
   14003a098:	cwde   
   14003a099:	cdq    
   14003a09a:	(bad)  
   14003a09b:	fwait
   14003a09c:	pushf  
   14003a09d:	popf   
   14003a09e:	sahf   
   14003a09f:	lahf   
   14003a0a0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003a0a9:	test   eax,0xadacabaa
   14003a0ae:	scas   al,BYTE PTR es:[rdi]
   14003a0af:	scas   eax,DWORD PTR es:[rdi]
   14003a0b0:	mov    al,0xb1
   14003a0b2:	mov    dl,0xb3
   14003a0b4:	mov    ah,0xb5
   14003a0b6:	mov    dh,0xb7
   14003a0b8:	mov    eax,0xbcbbbab9
   14003a0bd:	mov    ebp,0xc1c0bfbe
   14003a0c2:	ret    0xc4c3
   14003a0c5:	(bad)
   14003a0c8:	enter  0xcac9,0xcb
   14003a0cc:	int3   
   14003a0cd:	int    0xce
   14003a0cf:	iret   
   14003a0d0:	rcl    cl,1
   14003a0d2:	rcl    bl,cl
   14003a0d4:	(bad)  
   14003a0d5:	(bad)  
   14003a0d6:	(bad)  
   14003a0d7:	xlat   BYTE PTR ds:[rbx]
   14003a0d8:	fcomp  st(1)
   14003a0da:	fcmovu st,st(3)
   14003a0dc:	(bad)  
   14003a0de:	(bad)  
   14003a0e0:	loopne 0x14003a0c3
   14003a0e2:	loop   0x14003a0c7
   14003a0e4:	in     al,0xe5
   14003a0e6:	out    0xe7,al
   14003a0e8:	call   0x12cef8bd6
   14003a0ed:	in     eax,dx
   14003a0ee:	out    dx,al
   14003a0ef:	out    dx,eax
   14003a0f0:	lock icebp 
   14003a0f2:	repnz repz hlt 
   14003a0f5:	cmc    
   14003a0f6:	div    bh
   14003a0f8:	clc    
   14003a0f9:	stc    
   14003a0fa:	cli    
   14003a0fb:	sti    
   14003a0fc:	cld    
   14003a0fd:	std    
   14003a0fe:	(bad)  
   14003a0ff:	inc    DWORD PTR [rax]
   14003a101:	add    DWORD PTR [rdx],eax
   14003a103:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003a10a:	or     cl,BYTE PTR [rbx]
   14003a10c:	or     al,0xd
   14003a10e:	(bad)  
   14003a10f:	movups xmm2,XMMWORD PTR [rcx]
   14003a112:	adc    dl,BYTE PTR [rbx]
   14003a114:	adc    al,0x15
   14003a116:	(bad)  
   14003a117:	(bad)  
   14003a118:	sbb    BYTE PTR [rcx],bl
   14003a11a:	sbb    bl,BYTE PTR [rbx]
   14003a11c:	sbb    al,0x1d
   14003a11e:	(bad)  
   14003a11f:	(bad)  
   14003a120:	and    BYTE PTR [rcx],ah
   14003a122:	and    ah,BYTE PTR [rbx]
   14003a124:	and    al,0x25
   14003a126:	es (bad) 
   14003a128:	sub    BYTE PTR [rcx],ch
   14003a12a:	sub    ch,BYTE PTR [rbx]
   14003a12c:	sub    al,0x2d
   14003a12e:	cs (bad) 
   14003a130:	xor    BYTE PTR [rcx],dh
   14003a132:	xor    dh,BYTE PTR [rbx]
   14003a134:	xor    al,0x35
   14003a136:	ss (bad) 
   14003a138:	cmp    BYTE PTR [rcx],bh
   14003a13a:	cmp    bh,BYTE PTR [rbx]
   14003a13c:	cmp    al,0x3d
   14003a13e:	ds (bad) 
   14003a140:	rex (bad) 
   14003a142:	(bad)
   14003a147:	addr32 push 0x6c6b6a69
   14003a14d:	ins    DWORD PTR es:[rdi],dx
   14003a14e:	outs   dx,BYTE PTR ds:[rsi]
   14003a14f:	outs   dx,DWORD PTR ds:[rsi]
   14003a150:	jo     0x14003a1c3
   14003a152:	jb     0x14003a1c7
   14003a154:	je     0x14003a1cb
   14003a156:	jbe    0x14003a1cf
   14003a158:	js     0x14003a1d3
   14003a15a:	jp     0x14003a1b7
   14003a15c:	pop    rsp
   14003a15d:	pop    rbp
   14003a15e:	pop    rsi
   14003a15f:	pop    rdi
   14003a160:	(bad)  
   14003a161:	(bad)  
   14003a162:	(bad)
   14003a167:	addr32 push 0x6c6b6a69
   14003a16d:	ins    DWORD PTR es:[rdi],dx
   14003a16e:	outs   dx,BYTE PTR ds:[rsi]
   14003a16f:	outs   dx,DWORD PTR ds:[rsi]
   14003a170:	jo     0x14003a1e3
   14003a172:	jb     0x14003a1e7
   14003a174:	je     0x14003a1eb
   14003a176:	jbe    0x14003a1ef
   14003a178:	js     0x14003a1f3
   14003a17a:	jp     0x14003a1f7
   14003a17c:	jl     0x14003a1fb
   14003a17e:	jle    0x14003a1ff
   14003a180:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14003a187:	xchg   DWORD PTR [rax-0x73747577],ecx
   14003a18d:	lea    ecx,[rsi-0x6d6e6f71]
   14003a193:	xchg   ebx,eax
   14003a194:	xchg   esp,eax
   14003a195:	xchg   ebp,eax
   14003a196:	xchg   esi,eax
   14003a197:	xchg   edi,eax
   14003a198:	cwde   
   14003a199:	cdq    
   14003a19a:	(bad)  
   14003a19b:	fwait
   14003a19c:	pushf  
   14003a19d:	popf   
   14003a19e:	sahf   
   14003a19f:	lahf   
   14003a1a0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003a1a9:	test   eax,0xadacabaa
   14003a1ae:	scas   al,BYTE PTR es:[rdi]
   14003a1af:	scas   eax,DWORD PTR es:[rdi]
   14003a1b0:	mov    al,0xb1
   14003a1b2:	mov    dl,0xb3
   14003a1b4:	mov    ah,0xb5
   14003a1b6:	mov    dh,0xb7
   14003a1b8:	mov    eax,0xbcbbbab9
   14003a1bd:	mov    ebp,0xc1c0bfbe
   14003a1c2:	ret    0xc4c3
   14003a1c5:	(bad)
   14003a1c8:	enter  0xcac9,0xcb
   14003a1cc:	int3   
   14003a1cd:	int    0xce
   14003a1cf:	iret   
   14003a1d0:	rcl    cl,1
   14003a1d2:	rcl    bl,cl
   14003a1d4:	(bad)  
   14003a1d5:	(bad)  
   14003a1d6:	(bad)  
   14003a1d7:	xlat   BYTE PTR ds:[rbx]
   14003a1d8:	fcomp  st(1)
   14003a1da:	fcmovu st,st(3)
   14003a1dc:	(bad)  
   14003a1de:	(bad)  
   14003a1e0:	loopne 0x14003a1c3
   14003a1e2:	loop   0x14003a1c7
   14003a1e4:	in     al,0xe5
   14003a1e6:	out    0xe7,al
   14003a1e8:	call   0x12cef8cd6
   14003a1ed:	in     eax,dx
   14003a1ee:	out    dx,al
   14003a1ef:	out    dx,eax
   14003a1f0:	lock icebp 
   14003a1f2:	repnz repz hlt 
   14003a1f5:	cmc    
   14003a1f6:	div    bh
   14003a1f8:	clc    
   14003a1f9:	stc    
   14003a1fa:	cli    
   14003a1fb:	sti    
   14003a1fc:	cld    
   14003a1fd:	std    
   14003a1fe:	(bad)  
   14003a1ff:	inc    DWORD PTR [rax-0x7b7c7d7f]
   14003a205:	test   DWORD PTR [rsi-0x75767779],eax
   14003a20b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14003a212:	xchg   edx,eax
   14003a213:	xchg   ebx,eax
   14003a214:	xchg   esp,eax
   14003a215:	xchg   ebp,eax
   14003a216:	xchg   esi,eax
   14003a217:	xchg   edi,eax
   14003a218:	cwde   
   14003a219:	cdq    
   14003a21a:	(bad)  
   14003a21b:	fwait
   14003a21c:	pushf  
   14003a21d:	popf   
   14003a21e:	sahf   
   14003a21f:	lahf   
   14003a220:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003a229:	test   eax,0xadacabaa
   14003a22e:	scas   al,BYTE PTR es:[rdi]
   14003a22f:	scas   eax,DWORD PTR es:[rdi]
   14003a230:	mov    al,0xb1
   14003a232:	mov    dl,0xb3
   14003a234:	mov    ah,0xb5
   14003a236:	mov    dh,0xb7
   14003a238:	mov    eax,0xbcbbbab9
   14003a23d:	mov    ebp,0xc1c0bfbe
   14003a242:	ret    0xc4c3
   14003a245:	(bad)
   14003a248:	enter  0xcac9,0xcb
   14003a24c:	int3   
   14003a24d:	int    0xce
   14003a24f:	iret   
   14003a250:	rcl    cl,1
   14003a252:	rcl    bl,cl
   14003a254:	(bad)  
   14003a255:	(bad)  
   14003a256:	(bad)  
   14003a257:	xlat   BYTE PTR ds:[rbx]
   14003a258:	fcomp  st(1)
   14003a25a:	fcmovu st,st(3)
   14003a25c:	(bad)  
   14003a25e:	(bad)  
   14003a260:	loopne 0x14003a243
   14003a262:	loop   0x14003a247
   14003a264:	in     al,0xe5
   14003a266:	out    0xe7,al
   14003a268:	call   0x12cef8d56
   14003a26d:	in     eax,dx
   14003a26e:	out    dx,al
   14003a26f:	out    dx,eax
   14003a270:	lock icebp 
   14003a272:	repnz repz hlt 
   14003a275:	cmc    
   14003a276:	div    bh
   14003a278:	clc    
   14003a279:	stc    
   14003a27a:	cli    
   14003a27b:	sti    
   14003a27c:	cld    
   14003a27d:	std    
   14003a27e:	(bad)  
   14003a27f:	inc    DWORD PTR [rax]
   14003a281:	add    DWORD PTR [rdx],eax
   14003a283:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003a28a:	or     cl,BYTE PTR [rbx]
   14003a28c:	or     al,0xd
   14003a28e:	(bad)  
   14003a28f:	movups xmm2,XMMWORD PTR [rcx]
   14003a292:	adc    dl,BYTE PTR [rbx]
   14003a294:	adc    al,0x15
   14003a296:	(bad)  
   14003a297:	(bad)  
   14003a298:	sbb    BYTE PTR [rcx],bl
   14003a29a:	sbb    bl,BYTE PTR [rbx]
   14003a29c:	sbb    al,0x1d
   14003a29e:	(bad)  
   14003a29f:	(bad)  
   14003a2a0:	and    BYTE PTR [rcx],ah
   14003a2a2:	and    ah,BYTE PTR [rbx]
   14003a2a4:	and    al,0x25
   14003a2a6:	es (bad) 
   14003a2a8:	sub    BYTE PTR [rcx],ch
   14003a2aa:	sub    ch,BYTE PTR [rbx]
   14003a2ac:	sub    al,0x2d
   14003a2ae:	cs (bad) 
   14003a2b0:	xor    BYTE PTR [rcx],dh
   14003a2b2:	xor    dh,BYTE PTR [rbx]
   14003a2b4:	xor    al,0x35
   14003a2b6:	ss (bad) 
   14003a2b8:	cmp    BYTE PTR [rcx],bh
   14003a2ba:	cmp    bh,BYTE PTR [rbx]
   14003a2bc:	cmp    al,0x3d
   14003a2be:	ds (bad) 
   14003a2c0:	rex
   14003a2c1:	rex.B
   14003a2c2:	rex.X
   14003a2c3:	rex.XB
   14003a2c4:	rex.R
   14003a2c5:	rex.RB
   14003a2c6:	rex.RX
   14003a2c7:	rex.RXB
   14003a2c8:	rex.W
   14003a2c9:	rex.WB
   14003a2ca:	rex.WX
   14003a2cb:	rex.WXB
   14003a2cc:	rex.WR
   14003a2cd:	rex.WRB
   14003a2ce:	rex.WRX
   14003a2cf:	rex.WRXB push r8
   14003a2d1:	push   rcx
   14003a2d2:	push   rdx
   14003a2d3:	push   rbx
   14003a2d4:	push   rsp
   14003a2d5:	push   rbp
   14003a2d6:	push   rsi
   14003a2d7:	push   rdi
   14003a2d8:	pop    rax
   14003a2d9:	pop    rcx
   14003a2da:	pop    rdx
   14003a2db:	pop    rbx
   14003a2dc:	pop    rsp
   14003a2dd:	pop    rbp
   14003a2de:	pop    rsi
   14003a2df:	pop    rdi
   14003a2e0:	(bad)  
   14003a2e1:	rex.B
   14003a2e2:	rex.X
   14003a2e3:	rex.XB
   14003a2e4:	rex.R
   14003a2e5:	rex.RB
   14003a2e6:	rex.RX
   14003a2e7:	rex.RXB
   14003a2e8:	rex.W
   14003a2e9:	rex.WB
   14003a2ea:	rex.WX
   14003a2eb:	rex.WXB
   14003a2ec:	rex.WR
   14003a2ed:	rex.WRB
   14003a2ee:	rex.WRX
   14003a2ef:	rex.WRXB push r8
   14003a2f1:	push   rcx
   14003a2f2:	push   rdx
   14003a2f3:	push   rbx
   14003a2f4:	push   rsp
   14003a2f5:	push   rbp
   14003a2f6:	push   rsi
   14003a2f7:	push   rdi
   14003a2f8:	pop    rax
   14003a2f9:	pop    rcx
   14003a2fa:	pop    rdx
   14003a2fb:	jnp    0x14003a379
   14003a2fd:	jge    0x14003a37d
   14003a2ff:	jg     0x14003a281
   14003a301:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14003a30b:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14003a312:	xchg   edx,eax
   14003a313:	xchg   ebx,eax
   14003a314:	xchg   esp,eax
   14003a315:	xchg   ebp,eax
   14003a316:	xchg   esi,eax
   14003a317:	xchg   edi,eax
   14003a318:	cwde   
   14003a319:	cdq    
   14003a31a:	(bad)  
   14003a31b:	fwait
   14003a31c:	pushf  
   14003a31d:	popf   
   14003a31e:	sahf   
   14003a31f:	lahf   
   14003a320:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003a329:	test   eax,0xadacabaa
   14003a32e:	scas   al,BYTE PTR es:[rdi]
   14003a32f:	scas   eax,DWORD PTR es:[rdi]
   14003a330:	mov    al,0xb1
   14003a332:	mov    dl,0xb3
   14003a334:	mov    ah,0xb5
   14003a336:	mov    dh,0xb7
   14003a338:	mov    eax,0xbcbbbab9
   14003a33d:	mov    ebp,0xc1c0bfbe
   14003a342:	ret    0xc4c3
   14003a345:	(bad)
   14003a348:	enter  0xcac9,0xcb
   14003a34c:	int3   
   14003a34d:	int    0xce
   14003a34f:	iret   
   14003a350:	rcl    cl,1
   14003a352:	rcl    bl,cl
   14003a354:	(bad)  
   14003a355:	(bad)  
   14003a356:	(bad)  
   14003a357:	xlat   BYTE PTR ds:[rbx]
   14003a358:	fcomp  st(1)
   14003a35a:	fcmovu st,st(3)
   14003a35c:	(bad)  
   14003a35e:	(bad)  
   14003a360:	loopne 0x14003a343
   14003a362:	loop   0x14003a347
   14003a364:	in     al,0xe5
   14003a366:	out    0xe7,al
   14003a368:	call   0x12cef8e56
   14003a36d:	in     eax,dx
   14003a36e:	out    dx,al
   14003a36f:	out    dx,eax
   14003a370:	lock icebp 
   14003a372:	repnz repz hlt 
   14003a375:	cmc    
   14003a376:	div    bh
   14003a378:	clc    
   14003a379:	stc    
   14003a37a:	cli    
   14003a37b:	sti    
   14003a37c:	cld    
   14003a37d:	std    
   14003a37e:	(bad)  
   14003a37f:	push   QWORD PTR [rbp+0x0]
   14003a382:	imul   eax,DWORD PTR [rax],0x0
	...
   14003a38d:	add    BYTE PTR [rax],al
   14003a38f:	add    BYTE PTR [rcx],al
   14003a391:	add    BYTE PTR [rax],al
   14003a393:	add    BYTE PTR [rax],al
   14003a395:	add    BYTE PTR [rax],al
   14003a397:	add    al,dl
   14003a399:	mov    cl,0x3
   14003a39b:	rex add DWORD PTR [rax],eax
   14003a39e:	add    BYTE PTR [rax],al
   14003a3a0:	add    al,BYTE PTR [rax]
   14003a3a2:	add    BYTE PTR [rax],al
   14003a3a4:	add    BYTE PTR [rax],al
   14003a3a6:	add    BYTE PTR [rax],al
   14003a3a8:	fdiv   DWORD PTR [rcx+0x14003]
   14003a3ae:	add    BYTE PTR [rax],al
   14003a3b0:	add    eax,DWORD PTR [rax]
   14003a3b2:	add    BYTE PTR [rax],al
   14003a3b4:	add    BYTE PTR [rax],al
   14003a3b6:	add    BYTE PTR [rax],al
   14003a3b8:	loopne 0x14003a36b
   14003a3ba:	add    eax,DWORD PTR [rax+0x1]
   14003a3bd:	add    BYTE PTR [rax],al
   14003a3bf:	add    BYTE PTR [rax+rax*1],al
   14003a3c2:	add    BYTE PTR [rax],al
   14003a3c4:	add    BYTE PTR [rax],al
   14003a3c6:	add    BYTE PTR [rax],al
   14003a3c8:	call   0x14143a77e
   14003a3cd:	add    BYTE PTR [rax],al
   14003a3cf:	add    BYTE PTR [rip+0x0],al        # 0x14003a3d5
   14003a3d5:	add    BYTE PTR [rax],al
   14003a3d7:	add    al,bh
   14003a3d9:	mov    cl,0x3
   14003a3db:	rex add DWORD PTR [rax],eax
   14003a3de:	add    BYTE PTR [rax],al
   14003a3e0:	(bad)  
	...
   14003a3e9:	mov    dl,0x3
   14003a3eb:	rex add DWORD PTR [rax],eax
   14003a3ee:	add    BYTE PTR [rax],al
   14003a3f0:	(bad)  
   14003a3f1:	add    BYTE PTR [rax],al
   14003a3f3:	add    BYTE PTR [rax],al
   14003a3f5:	add    BYTE PTR [rax],al
   14003a3f7:	add    BYTE PTR [rax],cl
   14003a3f9:	mov    dl,0x3
   14003a3fb:	rex add DWORD PTR [rax],eax
   14003a3fe:	add    BYTE PTR [rax],al
   14003a400:	or     BYTE PTR [rax],al
   14003a402:	add    BYTE PTR [rax],al
   14003a404:	add    BYTE PTR [rax],al
   14003a406:	add    BYTE PTR [rax],al
   14003a408:	adc    BYTE PTR [rdx+0x14003],dh
   14003a40e:	add    BYTE PTR [rax],al
   14003a410:	or     DWORD PTR [rax],eax
   14003a412:	add    BYTE PTR [rax],al
   14003a414:	add    BYTE PTR [rax],al
   14003a416:	add    BYTE PTR [rax],al
   14003a418:	sbb    BYTE PTR [rdx+0x14003],dh
   14003a41e:	add    BYTE PTR [rax],al
   14003a420:	or     al,BYTE PTR [rax]
   14003a422:	add    BYTE PTR [rax],al
   14003a424:	add    BYTE PTR [rax],al
   14003a426:	add    BYTE PTR [rax],al
   14003a428:	and    BYTE PTR [rdx+0x14003],dh
   14003a42e:	add    BYTE PTR [rax],al
   14003a430:	or     eax,DWORD PTR [rax]
   14003a432:	add    BYTE PTR [rax],al
   14003a434:	add    BYTE PTR [rax],al
   14003a436:	add    BYTE PTR [rax],al
   14003a438:	sub    BYTE PTR [rdx+0x14003],dh
   14003a43e:	add    BYTE PTR [rax],al
   14003a440:	or     al,0x0
   14003a442:	add    BYTE PTR [rax],al
   14003a444:	add    BYTE PTR [rax],al
   14003a446:	add    BYTE PTR [rax],al
   14003a448:	xor    BYTE PTR [rdx+0x14003],dh
   14003a44e:	add    BYTE PTR [rax],al
   14003a450:	or     eax,0x0
   14003a455:	add    BYTE PTR [rax],al
   14003a457:	add    BYTE PTR [rax],bh
   14003a459:	mov    dl,0x3
   14003a45b:	rex add DWORD PTR [rax],eax
   14003a45e:	add    BYTE PTR [rax],al
   14003a460:	(bad)  
   14003a461:	add    BYTE PTR [rax],al
   14003a463:	add    BYTE PTR [rax],al
   14003a465:	add    BYTE PTR [rax],al
   14003a467:	add    BYTE PTR [rax-0x4e],al
   14003a46a:	add    eax,DWORD PTR [rax+0x1]
   14003a46d:	add    BYTE PTR [rax],al
   14003a46f:	add    BYTE PTR [rdi],cl
   14003a471:	add    BYTE PTR [rax],al
   14003a473:	add    BYTE PTR [rax],al
   14003a475:	add    BYTE PTR [rax],al
   14003a477:	add    BYTE PTR [rax-0x4e],cl
   14003a47a:	add    eax,DWORD PTR [rax+0x1]
   14003a47d:	add    BYTE PTR [rax],al
   14003a47f:	add    BYTE PTR [rax],dl
   14003a481:	add    BYTE PTR [rax],al
   14003a483:	add    BYTE PTR [rax],al
   14003a485:	add    BYTE PTR [rax],al
   14003a487:	add    BYTE PTR [rax-0x4e],dl
   14003a48a:	add    eax,DWORD PTR [rax+0x1]
   14003a48d:	add    BYTE PTR [rax],al
   14003a48f:	add    BYTE PTR [rcx],dl
   14003a491:	add    BYTE PTR [rax],al
   14003a493:	add    BYTE PTR [rax],al
   14003a495:	add    BYTE PTR [rax],al
   14003a497:	add    BYTE PTR [rax-0x4e],bl
   14003a49a:	add    eax,DWORD PTR [rax+0x1]
   14003a49d:	add    BYTE PTR [rax],al
   14003a49f:	add    BYTE PTR [rdx],dl
   14003a4a1:	add    BYTE PTR [rax],al
   14003a4a3:	add    BYTE PTR [rax],al
   14003a4a5:	add    BYTE PTR [rax],al
   14003a4a7:	add    BYTE PTR [rax-0x4e],ah
   14003a4aa:	add    eax,DWORD PTR [rax+0x1]
   14003a4ad:	add    BYTE PTR [rax],al
   14003a4af:	add    BYTE PTR [rbx],dl
   14003a4b1:	add    BYTE PTR [rax],al
   14003a4b3:	add    BYTE PTR [rax],al
   14003a4b5:	add    BYTE PTR [rax],al
   14003a4b7:	add    BYTE PTR [rax-0x4e],ch
   14003a4ba:	add    eax,DWORD PTR [rax+0x1]
   14003a4bd:	add    BYTE PTR [rax],al
   14003a4bf:	add    BYTE PTR [rax+rax*1],dl
   14003a4c2:	add    BYTE PTR [rax],al
   14003a4c4:	add    BYTE PTR [rax],al
   14003a4c6:	add    BYTE PTR [rax],al
   14003a4c8:	jo     0x14003a47c
   14003a4ca:	add    eax,DWORD PTR [rax+0x1]
   14003a4cd:	add    BYTE PTR [rax],al
   14003a4cf:	add    BYTE PTR [rip+0x0],dl        # 0x14003a4d5
   14003a4d5:	add    BYTE PTR [rax],al
   14003a4d7:	add    BYTE PTR [rax-0x4e],bh
   14003a4da:	add    eax,DWORD PTR [rax+0x1]
   14003a4dd:	add    BYTE PTR [rax],al
   14003a4df:	add    BYTE PTR [rsi],dl
   14003a4e1:	add    BYTE PTR [rax],al
   14003a4e3:	add    BYTE PTR [rax],al
   14003a4e5:	add    BYTE PTR [rax],al
   14003a4e7:	add    BYTE PTR [rax+0x14003b2],al
   14003a4ed:	add    BYTE PTR [rax],al
   14003a4ef:	add    BYTE PTR [rax],bl
   14003a4f1:	add    BYTE PTR [rax],al
   14003a4f3:	add    BYTE PTR [rax],al
   14003a4f5:	add    BYTE PTR [rax],al
   14003a4f7:	add    BYTE PTR [rax+0x14003b2],cl
   14003a4fd:	add    BYTE PTR [rax],al
   14003a4ff:	add    BYTE PTR [rcx],bl
   14003a501:	add    BYTE PTR [rax],al
   14003a503:	add    BYTE PTR [rax],al
   14003a505:	add    BYTE PTR [rax],al
   14003a507:	add    BYTE PTR [rax+0x14003b2],dl
   14003a50d:	add    BYTE PTR [rax],al
   14003a50f:	add    BYTE PTR [rdx],bl
   14003a511:	add    BYTE PTR [rax],al
   14003a513:	add    BYTE PTR [rax],al
   14003a515:	add    BYTE PTR [rax],al
   14003a517:	add    BYTE PTR [rax+0x14003b2],bl
   14003a51d:	add    BYTE PTR [rax],al
   14003a51f:	add    BYTE PTR [rbx],bl
   14003a521:	add    BYTE PTR [rax],al
   14003a523:	add    BYTE PTR [rax],al
   14003a525:	add    BYTE PTR [rax],al
   14003a527:	add    BYTE PTR [rax+0x14003b2],ah
   14003a52d:	add    BYTE PTR [rax],al
   14003a52f:	add    BYTE PTR [rax+rax*1],bl
   14003a532:	add    BYTE PTR [rax],al
   14003a534:	add    BYTE PTR [rax],al
   14003a536:	add    BYTE PTR [rax],al
   14003a538:	test   al,0xb2
   14003a53a:	add    eax,DWORD PTR [rax+0x1]
   14003a53d:	add    BYTE PTR [rax],al
   14003a53f:	add    BYTE PTR [rip+0x0],bl        # 0x14003a545
   14003a545:	add    BYTE PTR [rax],al
   14003a547:	add    BYTE PTR [rax+0x14003b2],dh
   14003a54d:	add    BYTE PTR [rax],al
   14003a54f:	add    BYTE PTR [rsi],bl
   14003a551:	add    BYTE PTR [rax],al
   14003a553:	add    BYTE PTR [rax],al
   14003a555:	add    BYTE PTR [rax],al
   14003a557:	add    BYTE PTR [rax+0x14003b2],bh
   14003a55d:	add    BYTE PTR [rax],al
   14003a55f:	add    BYTE PTR [rdi],bl
   14003a561:	add    BYTE PTR [rax],al
   14003a563:	add    BYTE PTR [rax],al
   14003a565:	add    BYTE PTR [rax],al
   14003a567:	add    al,al
   14003a569:	mov    dl,0x3
   14003a56b:	rex add DWORD PTR [rax],eax
   14003a56e:	add    BYTE PTR [rax],al
   14003a570:	and    BYTE PTR [rax],al
   14003a572:	add    BYTE PTR [rax],al
   14003a574:	add    BYTE PTR [rax],al
   14003a576:	add    BYTE PTR [rax],al
   14003a578:	enter  0x3b2,0x40
   14003a57c:	add    DWORD PTR [rax],eax
   14003a57e:	add    BYTE PTR [rax],al
   14003a580:	and    DWORD PTR [rax],eax
   14003a582:	add    BYTE PTR [rax],al
   14003a584:	add    BYTE PTR [rax],al
   14003a586:	add    BYTE PTR [rax],al
   14003a588:	shl    BYTE PTR [rdx+0x14003],1
   14003a58e:	add    BYTE PTR [rax],al
   14003a590:	and    al,BYTE PTR [rax]
   14003a592:	add    BYTE PTR [rax],al
   14003a594:	add    BYTE PTR [rax],al
   14003a596:	add    BYTE PTR [rax],al
   14003a598:	and    BYTE PTR [rbx+0x14003],0x0
   14003a59f:	add    BYTE PTR [rbx],ah
   14003a5a1:	add    BYTE PTR [rax],al
   14003a5a3:	add    BYTE PTR [rax],al
   14003a5a5:	add    BYTE PTR [rax],al
   14003a5a7:	add    al,bl
   14003a5a9:	mov    dl,0x3
   14003a5ab:	rex add DWORD PTR [rax],eax
   14003a5ae:	add    BYTE PTR [rax],al
   14003a5b0:	and    al,0x0
   14003a5b2:	add    BYTE PTR [rax],al
   14003a5b4:	add    BYTE PTR [rax],al
   14003a5b6:	add    BYTE PTR [rax],al
   14003a5b8:	loopne 0x14003a56c
   14003a5ba:	add    eax,DWORD PTR [rax+0x1]
   14003a5bd:	add    BYTE PTR [rax],al
   14003a5bf:	add    BYTE PTR [rip+0x0],ah        # 0x14003a5c5
   14003a5c5:	add    BYTE PTR [rax],al
   14003a5c7:	add    al,ch
   14003a5c9:	mov    dl,0x3
   14003a5cb:	rex add DWORD PTR [rax],eax
   14003a5ce:	add    BYTE PTR [rax],al
   14003a5d0:	add    BYTE PTR es:[rax],al
   14003a5d3:	add    BYTE PTR [rax],al
   14003a5d5:	add    BYTE PTR [rax],al
   14003a5d7:	add    al,dh
   14003a5d9:	mov    dl,0x3
   14003a5db:	rex add DWORD PTR [rax],eax
   14003a5de:	add    BYTE PTR [rax],al
   14003a5e0:	(bad)  
   14003a5e1:	add    BYTE PTR [rax],al
   14003a5e3:	add    BYTE PTR [rax],al
   14003a5e5:	add    BYTE PTR [rax],al
   14003a5e7:	add    al,bh
   14003a5e9:	mov    dl,0x3
   14003a5eb:	rex add DWORD PTR [rax],eax
   14003a5ee:	add    BYTE PTR [rax],al
   14003a5f0:	sub    DWORD PTR [rax],eax
   14003a5f2:	add    BYTE PTR [rax],al
   14003a5f4:	add    BYTE PTR [rax],al
   14003a5f6:	add    BYTE PTR [rax],al
   14003a5f8:	add    BYTE PTR [rbx+0x14003],dh
   14003a5fe:	add    BYTE PTR [rax],al
   14003a600:	sub    al,BYTE PTR [rax]
   14003a602:	add    BYTE PTR [rax],al
   14003a604:	add    BYTE PTR [rax],al
   14003a606:	add    BYTE PTR [rax],al
   14003a608:	or     BYTE PTR [rbx+0x14003],dh
   14003a60e:	add    BYTE PTR [rax],al
   14003a610:	sub    eax,DWORD PTR [rax]
   14003a612:	add    BYTE PTR [rax],al
   14003a614:	add    BYTE PTR [rax],al
   14003a616:	add    BYTE PTR [rax],al
   14003a618:	adc    BYTE PTR [rbx+0x14003],dh
   14003a61e:	add    BYTE PTR [rax],al
   14003a620:	sub    al,0x0
   14003a622:	add    BYTE PTR [rax],al
   14003a624:	add    BYTE PTR [rax],al
   14003a626:	add    BYTE PTR [rax],al
   14003a628:	sbb    BYTE PTR [rbx+0x14003],dh
   14003a62e:	add    BYTE PTR [rax],al
   14003a630:	sub    eax,0x0
   14003a635:	add    BYTE PTR [rax],al
   14003a637:	add    BYTE PTR [rax],ah
   14003a639:	mov    bl,0x3
   14003a63b:	rex add DWORD PTR [rax],eax
   14003a63e:	add    BYTE PTR [rax],al
   14003a640:	(bad)  
   14003a641:	add    BYTE PTR [rax],al
   14003a643:	add    BYTE PTR [rax],al
   14003a645:	add    BYTE PTR [rax],al
   14003a647:	add    BYTE PTR [rax],ch
   14003a649:	mov    bl,0x3
   14003a64b:	rex add DWORD PTR [rax],eax
   14003a64e:	add    BYTE PTR [rax],al
   14003a650:	add    BYTE PTR ss:[rax],al
   14003a653:	add    BYTE PTR [rax],al
   14003a655:	add    BYTE PTR [rax],al
   14003a657:	add    BYTE PTR [rax],dh
   14003a659:	mov    bl,0x3
   14003a65b:	rex add DWORD PTR [rax],eax
   14003a65e:	add    BYTE PTR [rax],al
   14003a660:	(bad)  
   14003a661:	add    BYTE PTR [rax],al
   14003a663:	add    BYTE PTR [rax],al
   14003a665:	add    BYTE PTR [rax],al
   14003a667:	add    BYTE PTR [rax],bh
   14003a669:	mov    bl,0x3
   14003a66b:	rex add DWORD PTR [rax],eax
   14003a66e:	add    BYTE PTR [rax],al
   14003a670:	cmp    BYTE PTR [rax],al
   14003a672:	add    BYTE PTR [rax],al
   14003a674:	add    BYTE PTR [rax],al
   14003a676:	add    BYTE PTR [rax],al
   14003a678:	mov    bl,0x3
   14003a67b:	rex add DWORD PTR [rax],eax
   14003a67e:	add    BYTE PTR [rax],al
   14003a680:	cmp    DWORD PTR [rax],eax
   14003a682:	add    BYTE PTR [rax],al
   14003a684:	add    BYTE PTR [rax],al
   14003a686:	add    BYTE PTR [rax],al
   14003a688:	rex.W mov bl,0x3
   14003a68b:	rex add DWORD PTR [rax],eax
   14003a68e:	add    BYTE PTR [rax],al
   14003a690:	add    BYTE PTR ds:[rax],al
   14003a693:	add    BYTE PTR [rax],al
   14003a695:	add    BYTE PTR [rax],al
   14003a697:	add    BYTE PTR [rax-0x4d],dl
   14003a69a:	add    eax,DWORD PTR [rax+0x1]
   14003a69d:	add    BYTE PTR [rax],al
   14003a69f:	add    BYTE PTR [rdi],bh
   14003a6a1:	add    BYTE PTR [rax],al
   14003a6a3:	add    BYTE PTR [rax],al
   14003a6a5:	add    BYTE PTR [rax],al
   14003a6a7:	add    BYTE PTR [rax-0x4d],bl
   14003a6aa:	add    eax,DWORD PTR [rax+0x1]
   14003a6ad:	add    BYTE PTR [rax],al
   14003a6af:	add    BYTE PTR [rax+0x0],al
   14003a6b2:	add    BYTE PTR [rax],al
   14003a6b4:	add    BYTE PTR [rax],al
   14003a6b6:	add    BYTE PTR [rax],al
   14003a6b8:	(bad)  
   14003a6b9:	mov    bl,0x3
   14003a6bb:	rex add DWORD PTR [rax],eax
   14003a6be:	add    BYTE PTR [rax],al
   14003a6c0:	add    BYTE PTR [r8],al
   14003a6c3:	add    BYTE PTR [rax],al
   14003a6c5:	add    BYTE PTR [rax],al
   14003a6c7:	add    BYTE PTR [rax-0x4d],ch
   14003a6ca:	add    eax,DWORD PTR [rax+0x1]
   14003a6cd:	add    BYTE PTR [rax],al
   14003a6cf:	add    BYTE PTR [rbx+0x0],al
   14003a6d2:	add    BYTE PTR [rax],al
   14003a6d4:	add    BYTE PTR [rax],al
   14003a6d6:	add    BYTE PTR [rax],al
   14003a6d8:	jo     0x14003a68d
   14003a6da:	add    eax,DWORD PTR [rax+0x1]
   14003a6dd:	add    BYTE PTR [rax],al
   14003a6df:	add    BYTE PTR [rax+rax*1+0x0],al
   14003a6e3:	add    BYTE PTR [rax],al
   14003a6e5:	add    BYTE PTR [rax],al
   14003a6e7:	add    BYTE PTR [rax-0x4d],bh
   14003a6ea:	add    eax,DWORD PTR [rax+0x1]
   14003a6ed:	add    BYTE PTR [rax],al
   14003a6ef:	add    BYTE PTR [rsi+0x0],al
   14003a6f2:	add    BYTE PTR [rax],al
   14003a6f4:	add    BYTE PTR [rax],al
   14003a6f6:	add    BYTE PTR [rax],al
   14003a6f8:	xor    BYTE PTR [rbx+0x14003],0x0
   14003a6ff:	add    BYTE PTR [rdi+0x0],al
   14003a702:	add    BYTE PTR [rax],al
   14003a704:	add    BYTE PTR [rax],al
   14003a706:	add    BYTE PTR [rax],al
   14003a708:	mov    BYTE PTR [rbx+0x14003],dh
   14003a70e:	add    BYTE PTR [rax],al
   14003a710:	rex.WB add BYTE PTR [r8],al
   14003a713:	add    BYTE PTR [rax],al
   14003a715:	add    BYTE PTR [rax],al
   14003a717:	add    BYTE PTR [rax+0x14003b3],dl
   14003a71d:	add    BYTE PTR [rax],al
   14003a71f:	add    BYTE PTR [rdx+0x0],cl
   14003a722:	add    BYTE PTR [rax],al
   14003a724:	add    BYTE PTR [rax],al
   14003a726:	add    BYTE PTR [rax],al
   14003a728:	cwde   
   14003a729:	mov    bl,0x3
   14003a72b:	rex add DWORD PTR [rax],eax
   14003a72e:	add    BYTE PTR [rax],al
   14003a730:	rex.WXB add BYTE PTR [r8],al
   14003a733:	add    BYTE PTR [rax],al
   14003a735:	add    BYTE PTR [rax],al
   14003a737:	add    BYTE PTR [rax+0x14003b3],ah
   14003a73d:	add    BYTE PTR [rax],al
   14003a73f:	add    BYTE PTR [rsi+0x0],cl
   14003a742:	add    BYTE PTR [rax],al
   14003a744:	add    BYTE PTR [rax],al
   14003a746:	add    BYTE PTR [rax],al
   14003a748:	test   al,0xb3
   14003a74a:	add    eax,DWORD PTR [rax+0x1]
   14003a74d:	add    BYTE PTR [rax],al
   14003a74f:	add    BYTE PTR [rdi+0x0],cl
   14003a752:	add    BYTE PTR [rax],al
   14003a754:	add    BYTE PTR [rax],al
   14003a756:	add    BYTE PTR [rax],al
   14003a758:	mov    al,0xb3
   14003a75a:	add    eax,DWORD PTR [rax+0x1]
   14003a75d:	add    BYTE PTR [rax],al
   14003a75f:	add    BYTE PTR [rax+0x0],dl
   14003a762:	add    BYTE PTR [rax],al
   14003a764:	add    BYTE PTR [rax],al
   14003a766:	add    BYTE PTR [rax],al
   14003a768:	mov    eax,0x14003b3
   14003a76d:	add    BYTE PTR [rax],al
   14003a76f:	add    BYTE PTR [rsi+0x0],dl
   14003a772:	add    BYTE PTR [rax],al
   14003a774:	add    BYTE PTR [rax],al
   14003a776:	add    BYTE PTR [rax],al
   14003a778:	shl    BYTE PTR [rbx+0x14003],0x0
   14003a77f:	add    BYTE PTR [rdi+0x0],dl
   14003a782:	add    BYTE PTR [rax],al
   14003a784:	add    BYTE PTR [rax],al
   14003a786:	add    BYTE PTR [rax],al
   14003a788:	enter  0x3b3,0x40
   14003a78c:	add    DWORD PTR [rax],eax
   14003a78e:	add    BYTE PTR [rax],al
   14003a790:	pop    rdx
   14003a791:	add    BYTE PTR [rax],al
   14003a793:	add    BYTE PTR [rax],al
   14003a795:	add    BYTE PTR [rax],al
   14003a797:	add    al,dl
   14003a799:	mov    bl,0x3
   14003a79b:	rex add DWORD PTR [rax],eax
   14003a79e:	add    BYTE PTR [rax],al
   14003a7a0:	add    BYTE PTR gs:[rax],al
   14003a7a3:	add    BYTE PTR [rax],al
   14003a7a5:	add    BYTE PTR [rax],al
   14003a7a7:	add    al,bl
   14003a7a9:	mov    bl,0x3
   14003a7ab:	rex add DWORD PTR [rax],eax
   14003a7ae:	add    BYTE PTR [rax],al
   14003a7b0:	jg     0x14003a7b2
   14003a7b2:	add    BYTE PTR [rax],al
   14003a7b4:	add    BYTE PTR [rax],al
   14003a7b6:	add    BYTE PTR [rax],al
   14003a7b8:	mov    esp,0x140037b
   14003a7bd:	add    BYTE PTR [rax],al
   14003a7bf:	add    BYTE PTR [rcx],al
   14003a7c1:	add    al,0x0
   14003a7c3:	add    BYTE PTR [rax],al
   14003a7c5:	add    BYTE PTR [rax],al
   14003a7c7:	add    al,ah
   14003a7c9:	mov    bl,0x3
   14003a7cb:	rex add DWORD PTR [rax],eax
   14003a7ce:	add    BYTE PTR [rax],al
   14003a7d0:	add    al,BYTE PTR [rax+rax*1]
   14003a7d3:	add    BYTE PTR [rax],al
   14003a7d5:	add    BYTE PTR [rax],al
   14003a7d7:	add    al,dh
   14003a7d9:	mov    bl,0x3
   14003a7db:	rex add DWORD PTR [rax],eax
   14003a7de:	add    BYTE PTR [rax],al
   14003a7e0:	add    eax,DWORD PTR [rax+rax*1]
   14003a7e3:	add    BYTE PTR [rax],al
   14003a7e5:	add    BYTE PTR [rax],al
   14003a7e7:	add    BYTE PTR [rax],al
   14003a7e9:	mov    ah,0x3
   14003a7eb:	rex add DWORD PTR [rax],eax
   14003a7ee:	add    BYTE PTR [rax],al
   14003a7f0:	add    al,0x4
   14003a7f2:	add    BYTE PTR [rax],al
   14003a7f4:	add    BYTE PTR [rax],al
   14003a7f6:	add    BYTE PTR [rax],al
   14003a7f8:	push   0x140039d
   14003a7fd:	add    BYTE PTR [rax],al
   14003a7ff:	add    BYTE PTR [rip+0x4],al        # 0x14003a809
   14003a805:	add    BYTE PTR [rax],al
   14003a807:	add    BYTE PTR [rax],dl
   14003a809:	mov    ah,0x3
   14003a80b:	rex add DWORD PTR [rax],eax
   14003a80e:	add    BYTE PTR [rax],al
   14003a810:	(bad)  
   14003a811:	add    al,0x0
   14003a813:	add    BYTE PTR [rax],al
   14003a815:	add    BYTE PTR [rax],al
   14003a817:	add    BYTE PTR [rax],ah
   14003a819:	mov    ah,0x3
   14003a81b:	rex add DWORD PTR [rax],eax
   14003a81e:	add    BYTE PTR [rax],al
   14003a820:	(bad)  
   14003a821:	add    al,0x0
   14003a823:	add    BYTE PTR [rax],al
   14003a825:	add    BYTE PTR [rax],al
   14003a827:	add    BYTE PTR [rax],dh
   14003a829:	mov    ah,0x3
   14003a82b:	rex add DWORD PTR [rax],eax
   14003a82e:	add    BYTE PTR [rax],al
   14003a830:	or     BYTE PTR [rax+rax*1],al
   14003a833:	add    BYTE PTR [rax],al
   14003a835:	add    BYTE PTR [rax],al
   14003a837:	add    BYTE PTR [rax-0x4c],al
   14003a83a:	add    eax,DWORD PTR [rax+0x1]
   14003a83d:	add    BYTE PTR [rax],al
   14003a83f:	add    BYTE PTR [rcx],cl
   14003a841:	add    al,0x0
   14003a843:	add    BYTE PTR [rax],al
   14003a845:	add    BYTE PTR [rax],al
   14003a847:	add    BYTE PTR [rax],cl
   14003a849:	popf   
   14003a84a:	add    eax,DWORD PTR [rax+0x1]
   14003a84d:	add    BYTE PTR [rax],al
   14003a84f:	add    BYTE PTR [rbx],cl
   14003a851:	add    al,0x0
   14003a853:	add    BYTE PTR [rax],al
   14003a855:	add    BYTE PTR [rax],al
   14003a857:	add    BYTE PTR [rax-0x4c],dl
   14003a85a:	add    eax,DWORD PTR [rax+0x1]
   14003a85d:	add    BYTE PTR [rax],al
   14003a85f:	add    BYTE PTR [rsp+rax*1],cl
   14003a862:	add    BYTE PTR [rax],al
   14003a864:	add    BYTE PTR [rax],al
   14003a866:	add    BYTE PTR [rax],al
   14003a868:	(bad)  
   14003a869:	mov    ah,0x3
   14003a86b:	rex add DWORD PTR [rax],eax
   14003a86e:	add    BYTE PTR [rax],al
   14003a870:	or     eax,0x4
   14003a875:	add    BYTE PTR [rax],al
   14003a877:	add    BYTE PTR [rax-0x4c],dh
   14003a87a:	add    eax,DWORD PTR [rax+0x1]
   14003a87d:	add    BYTE PTR [rax],al
   14003a87f:	add    BYTE PTR [rsi],cl
   14003a881:	add    al,0x0
   14003a883:	add    BYTE PTR [rax],al
   14003a885:	add    BYTE PTR [rax],al
   14003a887:	add    BYTE PTR [rax+0x14003b4],al
   14003a88d:	add    BYTE PTR [rax],al
   14003a88f:	add    BYTE PTR [rdi],cl
   14003a891:	add    al,0x0
   14003a893:	add    BYTE PTR [rax],al
   14003a895:	add    BYTE PTR [rax],al
   14003a897:	add    BYTE PTR [rax+0x14003b4],dl
   14003a89d:	add    BYTE PTR [rax],al
   14003a89f:	add    BYTE PTR [rax],dl
   14003a8a1:	add    al,0x0
   14003a8a3:	add    BYTE PTR [rax],al
   14003a8a5:	add    BYTE PTR [rax],al
   14003a8a7:	add    BYTE PTR [rax+0x14003b4],ah
   14003a8ad:	add    BYTE PTR [rax],al
   14003a8af:	add    BYTE PTR [rcx],dl
   14003a8b1:	add    al,0x0
   14003a8b3:	add    BYTE PTR [rax],al
   14003a8b5:	add    BYTE PTR [rax],al
   14003a8b7:	add    BYTE PTR [rax],bh
   14003a8b9:	popf   
   14003a8ba:	add    eax,DWORD PTR [rax+0x1]
   14003a8bd:	add    BYTE PTR [rax],al
   14003a8bf:	add    BYTE PTR [rdx],dl
   14003a8c1:	add    al,0x0
   14003a8c3:	add    BYTE PTR [rax],al
   14003a8c5:	add    BYTE PTR [rax],al
   14003a8c7:	add    BYTE PTR [rax-0x63],bl
   14003a8ca:	add    eax,DWORD PTR [rax+0x1]
   14003a8cd:	add    BYTE PTR [rax],al
   14003a8cf:	add    BYTE PTR [rbx],dl
   14003a8d1:	add    al,0x0
   14003a8d3:	add    BYTE PTR [rax],al
   14003a8d5:	add    BYTE PTR [rax],al
   14003a8d7:	add    BYTE PTR [rax+0x14003b4],dh
   14003a8dd:	add    BYTE PTR [rax],al
   14003a8df:	add    BYTE PTR [rsp+rax*1],dl
   14003a8e2:	add    BYTE PTR [rax],al
   14003a8e4:	add    BYTE PTR [rax],al
   14003a8e6:	add    BYTE PTR [rax],al
   14003a8e8:	shl    BYTE PTR [rbx+rax*1+0x140],0x0
   14003a8f0:	adc    eax,0x4
   14003a8f5:	add    BYTE PTR [rax],al
   14003a8f7:	add    al,dl
   14003a8f9:	mov    ah,0x3
   14003a8fb:	rex add DWORD PTR [rax],eax
   14003a8fe:	add    BYTE PTR [rax],al
   14003a900:	(bad)  
   14003a901:	add    al,0x0
   14003a903:	add    BYTE PTR [rax],al
   14003a905:	add    BYTE PTR [rax],al
   14003a907:	add    al,ah
   14003a909:	mov    ah,0x3
   14003a90b:	rex add DWORD PTR [rax],eax
   14003a90e:	add    BYTE PTR [rax],al
   14003a910:	sbb    BYTE PTR [rax+rax*1],al
   14003a913:	add    BYTE PTR [rax],al
   14003a915:	add    BYTE PTR [rax],al
   14003a917:	add    al,dh
   14003a919:	mov    ah,0x3
   14003a91b:	rex add DWORD PTR [rax],eax
   14003a91e:	add    BYTE PTR [rax],al
   14003a920:	sbb    DWORD PTR [rax+rax*1],eax
   14003a923:	add    BYTE PTR [rax],al
   14003a925:	add    BYTE PTR [rax],al
   14003a927:	add    BYTE PTR [rax],al
   14003a929:	mov    ch,0x3
   14003a92b:	rex add DWORD PTR [rax],eax
   14003a92e:	add    BYTE PTR [rax],al
   14003a930:	sbb    al,BYTE PTR [rax+rax*1]
   14003a933:	add    BYTE PTR [rax],al
   14003a935:	add    BYTE PTR [rax],al
   14003a937:	add    BYTE PTR [rax],dl
   14003a939:	mov    ch,0x3
   14003a93b:	rex add DWORD PTR [rax],eax
   14003a93e:	add    BYTE PTR [rax],al
   14003a940:	sbb    eax,DWORD PTR [rax+rax*1]
   14003a943:	add    BYTE PTR [rax],al
   14003a945:	add    BYTE PTR [rax],al
   14003a947:	add    BYTE PTR [rax],ah
   14003a949:	mov    ch,0x3
   14003a94b:	rex add DWORD PTR [rax],eax
   14003a94e:	add    BYTE PTR [rax],al
   14003a950:	sbb    al,0x4
   14003a952:	add    BYTE PTR [rax],al
   14003a954:	add    BYTE PTR [rax],al
   14003a956:	add    BYTE PTR [rax],al
   14003a958:	xor    BYTE PTR [rbp+0x14003],dh
   14003a95e:	add    BYTE PTR [rax],al
   14003a960:	sbb    eax,0x4
   14003a965:	add    BYTE PTR [rax],al
   14003a967:	add    BYTE PTR [rax-0x4b],al
   14003a96a:	add    eax,DWORD PTR [rax+0x1]
   14003a96d:	add    BYTE PTR [rax],al
   14003a96f:	add    BYTE PTR [rsi],bl
   14003a971:	add    al,0x0
   14003a973:	add    BYTE PTR [rax],al
   14003a975:	add    BYTE PTR [rax],al
   14003a977:	add    BYTE PTR [rax-0x4b],dl
   14003a97a:	add    eax,DWORD PTR [rax+0x1]
   14003a97d:	add    BYTE PTR [rax],al
   14003a97f:	add    BYTE PTR [rdi],bl
   14003a981:	add    al,0x0
   14003a983:	add    BYTE PTR [rax],al
   14003a985:	add    BYTE PTR [rax],al
   14003a987:	add    BYTE PTR [rax-0x4b],ah
   14003a98a:	add    eax,DWORD PTR [rax+0x1]
   14003a98d:	add    BYTE PTR [rax],al
   14003a98f:	add    BYTE PTR [rax],ah
   14003a991:	add    al,0x0
   14003a993:	add    BYTE PTR [rax],al
   14003a995:	add    BYTE PTR [rax],al
   14003a997:	add    BYTE PTR [rax-0x4b],dh
   14003a99a:	add    eax,DWORD PTR [rax+0x1]
   14003a99d:	add    BYTE PTR [rax],al
   14003a99f:	add    BYTE PTR [rcx],ah
   14003a9a1:	add    al,0x0
   14003a9a3:	add    BYTE PTR [rax],al
   14003a9a5:	add    BYTE PTR [rax],al
   14003a9a7:	add    BYTE PTR [rax+0x14003b5],al
   14003a9ad:	add    BYTE PTR [rax],al
   14003a9af:	add    BYTE PTR [rdx],ah
   14003a9b1:	add    al,0x0
   14003a9b3:	add    BYTE PTR [rax],al
   14003a9b5:	add    BYTE PTR [rax],al
   14003a9b7:	add    BYTE PTR [rax+0x14003b5],dl
   14003a9bd:	add    BYTE PTR [rax],al
   14003a9bf:	add    BYTE PTR [rbx],ah
   14003a9c1:	add    al,0x0
   14003a9c3:	add    BYTE PTR [rax],al
   14003a9c5:	add    BYTE PTR [rax],al
   14003a9c7:	add    BYTE PTR [rax+0x14003b5],ah
   14003a9cd:	add    BYTE PTR [rax],al
   14003a9cf:	add    BYTE PTR [rsp+rax*1],ah
   14003a9d2:	add    BYTE PTR [rax],al
   14003a9d4:	add    BYTE PTR [rax],al
   14003a9d6:	add    BYTE PTR [rax],al
   14003a9d8:	mov    al,0xb5
   14003a9da:	add    eax,DWORD PTR [rax+0x1]
   14003a9dd:	add    BYTE PTR [rax],al
   14003a9df:	add    BYTE PTR [rip+0x4],ah        # 0x14003a9e9
   14003a9e5:	add    BYTE PTR [rax],al
   14003a9e7:	add    al,al
   14003a9e9:	mov    ch,0x3
   14003a9eb:	rex add DWORD PTR [rax],eax
   14003a9ee:	add    BYTE PTR [rax],al
   14003a9f0:	es add al,0x0
   14003a9f3:	add    BYTE PTR [rax],al
   14003a9f5:	add    BYTE PTR [rax],al
   14003a9f7:	add    al,dl
   14003a9f9:	mov    ch,0x3
   14003a9fb:	rex add DWORD PTR [rax],eax
   14003a9fe:	add    BYTE PTR [rax],al
   14003aa00:	(bad)  
   14003aa01:	add    al,0x0
   14003aa03:	add    BYTE PTR [rax],al
   14003aa05:	add    BYTE PTR [rax],al
   14003aa07:	add    al,ah
   14003aa09:	mov    ch,0x3
   14003aa0b:	rex add DWORD PTR [rax],eax
   14003aa0e:	add    BYTE PTR [rax],al
   14003aa10:	sub    DWORD PTR [rax+rax*1],eax
   14003aa13:	add    BYTE PTR [rax],al
   14003aa15:	add    BYTE PTR [rax],al
   14003aa17:	add    al,dh
   14003aa19:	mov    ch,0x3
   14003aa1b:	rex add DWORD PTR [rax],eax
   14003aa1e:	add    BYTE PTR [rax],al
   14003aa20:	sub    al,BYTE PTR [rax+rax*1]
   14003aa23:	add    BYTE PTR [rax],al
   14003aa25:	add    BYTE PTR [rax],al
   14003aa27:	add    BYTE PTR [rax],al
   14003aa29:	mov    dh,0x3
   14003aa2b:	rex add DWORD PTR [rax],eax
   14003aa2e:	add    BYTE PTR [rax],al
   14003aa30:	sub    eax,DWORD PTR [rax+rax*1]
   14003aa33:	add    BYTE PTR [rax],al
   14003aa35:	add    BYTE PTR [rax],al
   14003aa37:	add    BYTE PTR [rax],dl
   14003aa39:	mov    dh,0x3
   14003aa3b:	rex add DWORD PTR [rax],eax
   14003aa3e:	add    BYTE PTR [rax],al
   14003aa40:	sub    al,0x4
   14003aa42:	add    BYTE PTR [rax],al
   14003aa44:	add    BYTE PTR [rax],al
   14003aa46:	add    BYTE PTR [rax],al
   14003aa48:	and    BYTE PTR [rsi+0x14003],dh
   14003aa4e:	add    BYTE PTR [rax],al
   14003aa50:	sub    eax,0x4
   14003aa55:	add    BYTE PTR [rax],al
   14003aa57:	add    BYTE PTR [rax],bh
   14003aa59:	mov    dh,0x3
   14003aa5b:	rex add DWORD PTR [rax],eax
   14003aa5e:	add    BYTE PTR [rax],al
   14003aa60:	(bad)  
   14003aa61:	add    al,0x0
   14003aa63:	add    BYTE PTR [rax],al
   14003aa65:	add    BYTE PTR [rax],al
   14003aa67:	add    BYTE PTR [rax-0x4a],cl
   14003aa6a:	add    eax,DWORD PTR [rax+0x1]
   14003aa6d:	add    BYTE PTR [rax],al
   14003aa6f:	add    BYTE PTR [rdx],dh
   14003aa71:	add    al,0x0
   14003aa73:	add    BYTE PTR [rax],al
   14003aa75:	add    BYTE PTR [rax],al
   14003aa77:	add    BYTE PTR [rax-0x4a],bl
   14003aa7a:	add    eax,DWORD PTR [rax+0x1]
   14003aa7d:	add    BYTE PTR [rax],al
   14003aa7f:	add    BYTE PTR [rsp+rax*1],dh
   14003aa82:	add    BYTE PTR [rax],al
   14003aa84:	add    BYTE PTR [rax],al
   14003aa86:	add    BYTE PTR [rax],al
   14003aa88:	push   0x14003b6
   14003aa8d:	add    BYTE PTR [rax],al
   14003aa8f:	add    BYTE PTR [rip+0x4],dh        # 0x14003aa99
   14003aa95:	add    BYTE PTR [rax],al
   14003aa97:	add    BYTE PTR [rax-0x4a],bh
   14003aa9a:	add    eax,DWORD PTR [rax+0x1]
   14003aa9d:	add    BYTE PTR [rax],al
   14003aa9f:	add    BYTE PTR [rsi],dh
   14003aaa1:	add    al,0x0
   14003aaa3:	add    BYTE PTR [rax],al
   14003aaa5:	add    BYTE PTR [rax],al
   14003aaa7:	add    BYTE PTR [rax+0x14003b6],cl
   14003aaad:	add    BYTE PTR [rax],al
   14003aaaf:	add    BYTE PTR [rdi],dh
   14003aab1:	add    al,0x0
   14003aab3:	add    BYTE PTR [rax],al
   14003aab5:	add    BYTE PTR [rax],al
   14003aab7:	add    BYTE PTR [rax+0x14003b6],bl
   14003aabd:	add    BYTE PTR [rax],al
   14003aabf:	add    BYTE PTR [rax],bh
   14003aac1:	add    al,0x0
   14003aac3:	add    BYTE PTR [rax],al
   14003aac5:	add    BYTE PTR [rax],al
   14003aac7:	add    BYTE PTR [rax+0x14003b6],ch
   14003aacd:	add    BYTE PTR [rax],al
   14003aacf:	add    BYTE PTR [rcx],bh
   14003aad1:	add    al,0x0
   14003aad3:	add    BYTE PTR [rax],al
   14003aad5:	add    BYTE PTR [rax],al
   14003aad7:	add    BYTE PTR [rax+0x14003b6],bh
   14003aadd:	add    BYTE PTR [rax],al
   14003aadf:	add    BYTE PTR [rdx],bh
   14003aae1:	add    al,0x0
   14003aae3:	add    BYTE PTR [rax],al
   14003aae5:	add    BYTE PTR [rax],al
   14003aae7:	add    al,cl
   14003aae9:	mov    dh,0x3
   14003aaeb:	rex add DWORD PTR [rax],eax
   14003aaee:	add    BYTE PTR [rax],al
   14003aaf0:	cmp    eax,DWORD PTR [rax+rax*1]
   14003aaf3:	add    BYTE PTR [rax],al
   14003aaf5:	add    BYTE PTR [rax],al
   14003aaf7:	add    al,bl
   14003aaf9:	mov    dh,0x3
   14003aafb:	rex add DWORD PTR [rax],eax
   14003aafe:	add    BYTE PTR [rax],al
   14003ab00:	ds add al,0x0
   14003ab03:	add    BYTE PTR [rax],al
   14003ab05:	add    BYTE PTR [rax],al
   14003ab07:	add    al,ch
   14003ab09:	mov    dh,0x3
   14003ab0b:	rex add DWORD PTR [rax],eax
   14003ab0e:	add    BYTE PTR [rax],al
   14003ab10:	(bad)  
   14003ab11:	add    al,0x0
   14003ab13:	add    BYTE PTR [rax],al
   14003ab15:	add    BYTE PTR [rax],al
   14003ab17:	add    al,bh
   14003ab19:	mov    dh,0x3
   14003ab1b:	rex add DWORD PTR [rax],eax
   14003ab1e:	add    BYTE PTR [rax],al
   14003ab20:	add    al,0x0
   14003ab23:	add    BYTE PTR [rax],al
   14003ab25:	add    BYTE PTR [rax],al
   14003ab27:	add    BYTE PTR [rax],cl
   14003ab29:	mov    bh,0x3
   14003ab2b:	rex add DWORD PTR [rax],eax
   14003ab2e:	add    BYTE PTR [rax],al
   14003ab30:	rex.B add al,0x0
   14003ab33:	add    BYTE PTR [rax],al
   14003ab35:	add    BYTE PTR [rax],al
   14003ab37:	add    BYTE PTR [rax],bl
   14003ab39:	mov    bh,0x3
   14003ab3b:	rex add DWORD PTR [rax],eax
   14003ab3e:	add    BYTE PTR [rax],al
   14003ab40:	rex.XB add al,0x0
   14003ab43:	add    BYTE PTR [rax],al
   14003ab45:	add    BYTE PTR [rax],al
   14003ab47:	add    BYTE PTR [rax],ch
   14003ab49:	mov    bh,0x3
   14003ab4b:	rex add DWORD PTR [rax],eax
   14003ab4e:	add    BYTE PTR [rax],al
   14003ab50:	rex.R add al,0x0
   14003ab53:	add    BYTE PTR [rax],al
   14003ab55:	add    BYTE PTR [rax],al
   14003ab57:	add    BYTE PTR [rax-0x49],al
   14003ab5a:	add    eax,DWORD PTR [rax+0x1]
   14003ab5d:	add    BYTE PTR [rax],al
   14003ab5f:	add    BYTE PTR [rbp+0x4],al
   14003ab62:	add    BYTE PTR [rax],al
   14003ab64:	add    BYTE PTR [rax],al
   14003ab66:	add    BYTE PTR [rax],al
   14003ab68:	push   rax
   14003ab69:	mov    bh,0x3
   14003ab6b:	rex add DWORD PTR [rax],eax
   14003ab6e:	add    BYTE PTR [rax],al
   14003ab70:	rex.RX add al,0x0
   14003ab73:	add    BYTE PTR [rax],al
   14003ab75:	add    BYTE PTR [rax],al
   14003ab77:	add    BYTE PTR [rax-0x49],ah
   14003ab7a:	add    eax,DWORD PTR [rax+0x1]
   14003ab7d:	add    BYTE PTR [rax],al
   14003ab7f:	add    BYTE PTR [rdi+0x4],al
   14003ab82:	add    BYTE PTR [rax],al
   14003ab84:	add    BYTE PTR [rax],al
   14003ab86:	add    BYTE PTR [rax],al
   14003ab88:	jo     0x14003ab41
   14003ab8a:	add    eax,DWORD PTR [rax+0x1]
   14003ab8d:	add    BYTE PTR [rax],al
   14003ab8f:	add    BYTE PTR [rcx+0x4],cl
   14003ab92:	add    BYTE PTR [rax],al
   14003ab94:	add    BYTE PTR [rax],al
   14003ab96:	add    BYTE PTR [rax],al
   14003ab98:	xor    BYTE PTR [rdi+0x14003],0x0
   14003ab9f:	add    BYTE PTR [rdx+0x4],cl
   14003aba2:	add    BYTE PTR [rax],al
   14003aba4:	add    BYTE PTR [rax],al
   14003aba6:	add    BYTE PTR [rax],al
   14003aba8:	nop
   14003aba9:	mov    bh,0x3
   14003abab:	rex add DWORD PTR [rax],eax
   14003abae:	add    BYTE PTR [rax],al
   14003abb0:	rex.WXB add al,0x0
   14003abb3:	add    BYTE PTR [rax],al
   14003abb5:	add    BYTE PTR [rax],al
   14003abb7:	add    BYTE PTR [rax+0x14003b7],ah
   14003abbd:	add    BYTE PTR [rax],al
   14003abbf:	add    BYTE PTR [rsp+rax*1+0x0],cl
   14003abc3:	add    BYTE PTR [rax],al
   14003abc5:	add    BYTE PTR [rax],al
   14003abc7:	add    BYTE PTR [rax+0x14003b7],dh
   14003abcd:	add    BYTE PTR [rax],al
   14003abcf:	add    BYTE PTR [rsi+0x4],cl
   14003abd2:	add    BYTE PTR [rax],al
   14003abd4:	add    BYTE PTR [rax],al
   14003abd6:	add    BYTE PTR [rax],al
   14003abd8:	shl    BYTE PTR [rdi+0x14003],0x0
   14003abdf:	add    BYTE PTR [rdi+0x4],cl
   14003abe2:	add    BYTE PTR [rax],al
   14003abe4:	add    BYTE PTR [rax],al
   14003abe6:	add    BYTE PTR [rax],al
   14003abe8:	shl    BYTE PTR [rdi+0x14003],1
   14003abee:	add    BYTE PTR [rax],al
   14003abf0:	push   rax
   14003abf1:	add    al,0x0
   14003abf3:	add    BYTE PTR [rax],al
   14003abf5:	add    BYTE PTR [rax],al
   14003abf7:	add    al,ah
   14003abf9:	mov    bh,0x3
   14003abfb:	rex add DWORD PTR [rax],eax
   14003abfe:	add    BYTE PTR [rax],al
   14003ac00:	push   rdx
   14003ac01:	add    al,0x0
   14003ac03:	add    BYTE PTR [rax],al
   14003ac05:	add    BYTE PTR [rax],al
   14003ac07:	add    al,dh
   14003ac09:	mov    bh,0x3
   14003ac0b:	rex add DWORD PTR [rax],eax
   14003ac0e:	add    BYTE PTR [rax],al
   14003ac10:	push   rsi
   14003ac11:	add    al,0x0
   14003ac13:	add    BYTE PTR [rax],al
   14003ac15:	add    BYTE PTR [rax],al
   14003ac17:	add    BYTE PTR [rax],al
   14003ac19:	mov    eax,0x14003
   14003ac1e:	add    BYTE PTR [rax],al
   14003ac20:	push   rdi
   14003ac21:	add    al,0x0
   14003ac23:	add    BYTE PTR [rax],al
   14003ac25:	add    BYTE PTR [rax],al
   14003ac27:	add    BYTE PTR [rax],dl
   14003ac29:	mov    eax,0x14003
   14003ac2e:	add    BYTE PTR [rax],al
   14003ac30:	pop    rdx
   14003ac31:	add    al,0x0
   14003ac33:	add    BYTE PTR [rax],al
   14003ac35:	add    BYTE PTR [rax],al
   14003ac37:	add    BYTE PTR [rax],ah
   14003ac39:	mov    eax,0x14003
   14003ac3e:	add    BYTE PTR [rax],al
   14003ac40:	gs add al,0x0
   14003ac43:	add    BYTE PTR [rax],al
   14003ac45:	add    BYTE PTR [rax],al
   14003ac47:	add    BYTE PTR [rax],dh
   14003ac49:	mov    eax,0x14003
   14003ac4e:	add    BYTE PTR [rax],al
   14003ac50:	imul   eax,DWORD PTR [rax+rax*1],0x0
   14003ac54:	add    BYTE PTR [rax],al
   14003ac56:	add    BYTE PTR [rax],al
   14003ac58:	rex mov eax,0x14003
   14003ac5e:	add    BYTE PTR [rax],al
   14003ac60:	ins    BYTE PTR es:[rdi],dx
   14003ac61:	add    al,0x0
   14003ac63:	add    BYTE PTR [rax],al
   14003ac65:	add    BYTE PTR [rax],al
   14003ac67:	add    BYTE PTR [rax-0x48],dl
   14003ac6a:	add    eax,DWORD PTR [rax+0x1]
   14003ac6d:	add    BYTE PTR [rax],al
   14003ac6f:	add    BYTE PTR [rcx+0x4],al
   14003ac75:	add    BYTE PTR [rax],al
   14003ac77:	add    BYTE PTR [rax-0x48],ah
   14003ac7a:	add    eax,DWORD PTR [rax+0x1]
   14003ac7d:	add    BYTE PTR [rax],al
   14003ac7f:	add    BYTE PTR [rcx],al
   14003ac81:	or     BYTE PTR [rax],al
   14003ac83:	add    BYTE PTR [rax],al
   14003ac85:	add    BYTE PTR [rax],al
   14003ac87:	add    BYTE PTR [rax-0x48],dh
   14003ac8a:	add    eax,DWORD PTR [rax+0x1]
   14003ac8d:	add    BYTE PTR [rax],al
   14003ac8f:	add    BYTE PTR [rax+rcx*1],al
   14003ac92:	add    BYTE PTR [rax],al
   14003ac94:	add    BYTE PTR [rax],al
   14003ac96:	add    BYTE PTR [rax],al
   14003ac98:	rex.W popf 
   14003ac9a:	add    eax,DWORD PTR [rax+0x1]
   14003ac9d:	add    BYTE PTR [rax],al
   14003ac9f:	add    BYTE PTR [rdi],al
   14003aca1:	or     BYTE PTR [rax],al
   14003aca3:	add    BYTE PTR [rax],al
   14003aca5:	add    BYTE PTR [rax],al
   14003aca7:	add    BYTE PTR [rax+0x14003b8],al
   14003acad:	add    BYTE PTR [rax],al
   14003acaf:	add    BYTE PTR [rcx],cl
   14003acb1:	or     BYTE PTR [rax],al
   14003acb3:	add    BYTE PTR [rax],al
   14003acb5:	add    BYTE PTR [rax],al
   14003acb7:	add    BYTE PTR [rax+0x14003b8],dl
   14003acbd:	add    BYTE PTR [rax],al
   14003acbf:	add    BYTE PTR [rdx],cl
   14003acc1:	or     BYTE PTR [rax],al
   14003acc3:	add    BYTE PTR [rax],al
   14003acc5:	add    BYTE PTR [rax],al
   14003acc7:	add    BYTE PTR [rax+0x14003b8],ah
   14003accd:	add    BYTE PTR [rax],al
   14003accf:	add    BYTE PTR [rax+rcx*1],cl
   14003acd2:	add    BYTE PTR [rax],al
   14003acd4:	add    BYTE PTR [rax],al
   14003acd6:	add    BYTE PTR [rax],al
   14003acd8:	mov    al,0xb8
   14003acda:	add    eax,DWORD PTR [rax+0x1]
   14003acdd:	add    BYTE PTR [rax],al
   14003acdf:	add    BYTE PTR [rax],dl
   14003ace1:	or     BYTE PTR [rax],al
   14003ace3:	add    BYTE PTR [rax],al
   14003ace5:	add    BYTE PTR [rax],al
   14003ace7:	add    al,al
   14003ace9:	mov    eax,0x14003
   14003acee:	add    BYTE PTR [rax],al
   14003acf0:	adc    ecx,DWORD PTR [rax]
   14003acf2:	add    BYTE PTR [rax],al
   14003acf4:	add    BYTE PTR [rax],al
   14003acf6:	add    BYTE PTR [rax],al
   14003acf8:	sar    BYTE PTR [rax+0x14003],1
   14003acfe:	add    BYTE PTR [rax],al
   14003ad00:	adc    al,0x8
   14003ad02:	add    BYTE PTR [rax],al
   14003ad04:	add    BYTE PTR [rax],al
   14003ad06:	add    BYTE PTR [rax],al
   14003ad08:	loopne 0x14003acc2
   14003ad0a:	add    eax,DWORD PTR [rax+0x1]
   14003ad0d:	add    BYTE PTR [rax],al
   14003ad0f:	add    BYTE PTR [rsi],dl
   14003ad11:	or     BYTE PTR [rax],al
   14003ad13:	add    BYTE PTR [rax],al
   14003ad15:	add    BYTE PTR [rax],al
   14003ad17:	add    al,dh
   14003ad19:	mov    eax,0x14003
   14003ad1e:	add    BYTE PTR [rax],al
   14003ad20:	sbb    cl,BYTE PTR [rax]
   14003ad22:	add    BYTE PTR [rax],al
   14003ad24:	add    BYTE PTR [rax],al
   14003ad26:	add    BYTE PTR [rax],al
   14003ad28:	add    BYTE PTR [rcx+0x14003],bh
   14003ad2e:	add    BYTE PTR [rax],al
   14003ad30:	sbb    eax,0x8
   14003ad35:	add    BYTE PTR [rax],al
   14003ad37:	add    BYTE PTR [rax],bl
   14003ad39:	mov    ecx,0x14003
   14003ad3e:	add    BYTE PTR [rax],al
   14003ad40:	sub    al,0x8
   14003ad42:	add    BYTE PTR [rax],al
   14003ad44:	add    BYTE PTR [rax],al
   14003ad46:	add    BYTE PTR [rax],al
   14003ad48:	sub    BYTE PTR [rcx+0x14003],bh
   14003ad4e:	add    BYTE PTR [rax],al
   14003ad50:	cmp    ecx,DWORD PTR [rax]
   14003ad52:	add    BYTE PTR [rax],al
   14003ad54:	add    BYTE PTR [rax],al
   14003ad56:	add    BYTE PTR [rax],al
   14003ad58:	rex mov ecx,0x14003
   14003ad5e:	add    BYTE PTR [rax],al
   14003ad60:	or     BYTE PTR ds:[rax],al
   14003ad63:	add    BYTE PTR [rax],al
   14003ad65:	add    BYTE PTR [rax],al
   14003ad67:	add    BYTE PTR [rax-0x47],dl
   14003ad6a:	add    eax,DWORD PTR [rax+0x1]
   14003ad6d:	add    BYTE PTR [rax],al
   14003ad6f:	add    BYTE PTR [rbx+0x8],al
   14003ad72:	add    BYTE PTR [rax],al
   14003ad74:	add    BYTE PTR [rax],al
   14003ad76:	add    BYTE PTR [rax],al
   14003ad78:	(bad)  
   14003ad79:	mov    ecx,0x14003
   14003ad7e:	add    BYTE PTR [rax],al
   14003ad80:	imul   ecx,DWORD PTR [rax],0x0
   14003ad83:	add    BYTE PTR [rax],al
   14003ad85:	add    BYTE PTR [rax],al
   14003ad87:	add    BYTE PTR [rax-0x47],bh
   14003ad8a:	add    eax,DWORD PTR [rax+0x1]
   14003ad8d:	add    BYTE PTR [rax],al
   14003ad8f:	add    BYTE PTR [rcx],al
   14003ad91:	or     al,0x0
   14003ad93:	add    BYTE PTR [rax],al
   14003ad95:	add    BYTE PTR [rax],al
   14003ad97:	add    BYTE PTR [rax+0x14003b9],cl
   14003ad9d:	add    BYTE PTR [rax],al
   14003ad9f:	add    BYTE PTR [rsp+rcx*1],al
   14003ada2:	add    BYTE PTR [rax],al
   14003ada4:	add    BYTE PTR [rax],al
   14003ada6:	add    BYTE PTR [rax],al
   14003ada8:	cwde   
   14003ada9:	mov    ecx,0x14003
   14003adae:	add    BYTE PTR [rax],al
   14003adb0:	(bad)  
   14003adb1:	or     al,0x0
   14003adb3:	add    BYTE PTR [rax],al
   14003adb5:	add    BYTE PTR [rax],al
   14003adb7:	add    BYTE PTR [rax+0x14003b9],ch
   14003adbd:	add    BYTE PTR [rax],al
   14003adbf:	add    BYTE PTR [rcx],cl
   14003adc1:	or     al,0x0
   14003adc3:	add    BYTE PTR [rax],al
   14003adc5:	add    BYTE PTR [rax],al
   14003adc7:	add    BYTE PTR [rax+0x14003b9],bh
   14003adcd:	add    BYTE PTR [rax],al
   14003adcf:	add    BYTE PTR [rdx],cl
   14003add1:	or     al,0x0
   14003add3:	add    BYTE PTR [rax],al
   14003add5:	add    BYTE PTR [rax],al
   14003add7:	add    al,cl
   14003add9:	mov    ecx,0x14003
   14003adde:	add    BYTE PTR [rax],al
   14003ade0:	or     al,0xc
   14003ade2:	add    BYTE PTR [rax],al
   14003ade4:	add    BYTE PTR [rax],al
   14003ade6:	add    BYTE PTR [rax],al
   14003ade8:	fdivr  DWORD PTR [rcx+0x14003]
   14003adee:	add    BYTE PTR [rax],al
   14003adf0:	sbb    cl,BYTE PTR [rax+rax*1]
   14003adf3:	add    BYTE PTR [rax],al
   14003adf5:	add    BYTE PTR [rax],al
   14003adf7:	add    al,ch
   14003adf9:	mov    ecx,0x14003
   14003adfe:	add    BYTE PTR [rax],al
   14003ae00:	cmp    ecx,DWORD PTR [rax+rax*1]
   14003ae03:	add    BYTE PTR [rax],al
   14003ae05:	add    BYTE PTR [rax],al
   14003ae07:	add    BYTE PTR [rax],al
   14003ae09:	mov    edx,0x14003
   14003ae0e:	add    BYTE PTR [rax],al
   14003ae10:	imul   ecx,DWORD PTR [rax+rax*1],0x0
   14003ae14:	add    BYTE PTR [rax],al
   14003ae16:	add    BYTE PTR [rax],al
   14003ae18:	adc    BYTE PTR [rdx+0x14003],bh
   14003ae1e:	add    BYTE PTR [rax],al
   14003ae20:	add    DWORD PTR [rax],edx
   14003ae22:	add    BYTE PTR [rax],al
   14003ae24:	add    BYTE PTR [rax],al
   14003ae26:	add    BYTE PTR [rax],al
   14003ae28:	and    BYTE PTR [rdx+0x14003],bh
   14003ae2e:	add    BYTE PTR [rax],al
   14003ae30:	add    al,0x10
   14003ae32:	add    BYTE PTR [rax],al
   14003ae34:	add    BYTE PTR [rax],al
   14003ae36:	add    BYTE PTR [rax],al
   14003ae38:	xor    BYTE PTR [rdx+0x14003],bh
   14003ae3e:	add    BYTE PTR [rax],al
   14003ae40:	(bad)  
   14003ae41:	adc    BYTE PTR [rax],al
   14003ae43:	add    BYTE PTR [rax],al
   14003ae45:	add    BYTE PTR [rax],al
   14003ae47:	add    BYTE PTR [rax-0x46],al
   14003ae4a:	add    eax,DWORD PTR [rax+0x1]
   14003ae4d:	add    BYTE PTR [rax],al
   14003ae4f:	add    BYTE PTR [rcx],cl
   14003ae51:	adc    BYTE PTR [rax],al
   14003ae53:	add    BYTE PTR [rax],al
   14003ae55:	add    BYTE PTR [rax],al
   14003ae57:	add    BYTE PTR [rax-0x46],dl
   14003ae5a:	add    eax,DWORD PTR [rax+0x1]
   14003ae5d:	add    BYTE PTR [rax],al
   14003ae5f:	add    BYTE PTR [rdx],cl
   14003ae61:	adc    BYTE PTR [rax],al
   14003ae63:	add    BYTE PTR [rax],al
   14003ae65:	add    BYTE PTR [rax],al
   14003ae67:	add    BYTE PTR [rax-0x46],ah
   14003ae6a:	add    eax,DWORD PTR [rax+0x1]
   14003ae6d:	add    BYTE PTR [rax],al
   14003ae6f:	add    BYTE PTR [rax+rdx*1],cl
   14003ae72:	add    BYTE PTR [rax],al
   14003ae74:	add    BYTE PTR [rax],al
   14003ae76:	add    BYTE PTR [rax],al
   14003ae78:	jo     0x14003ae34
   14003ae7a:	add    eax,DWORD PTR [rax+0x1]
   14003ae7d:	add    BYTE PTR [rax],al
   14003ae7f:	add    BYTE PTR [rdx],bl
   14003ae81:	adc    BYTE PTR [rax],al
   14003ae83:	add    BYTE PTR [rax],al
   14003ae85:	add    BYTE PTR [rax],al
   14003ae87:	add    BYTE PTR [rax+0x14003ba],al
   14003ae8d:	add    BYTE PTR [rax],al
   14003ae8f:	add    BYTE PTR [rbx],bh
   14003ae91:	adc    BYTE PTR [rax],al
   14003ae93:	add    BYTE PTR [rax],al
   14003ae95:	add    BYTE PTR [rax],al
   14003ae97:	add    BYTE PTR [rax+0x14003ba],dl
   14003ae9d:	add    BYTE PTR [rax],al
   14003ae9f:	add    BYTE PTR [rcx],al
   14003aea1:	adc    al,0x0
   14003aea3:	add    BYTE PTR [rax],al
   14003aea5:	add    BYTE PTR [rax],al
   14003aea7:	add    BYTE PTR [rax+0x14003ba],ah
   14003aead:	add    BYTE PTR [rax],al
   14003aeaf:	add    BYTE PTR [rsp+rdx*1],al
   14003aeb2:	add    BYTE PTR [rax],al
   14003aeb4:	add    BYTE PTR [rax],al
   14003aeb6:	add    BYTE PTR [rax],al
   14003aeb8:	mov    al,0xba
   14003aeba:	add    eax,DWORD PTR [rax+0x1]
   14003aebd:	add    BYTE PTR [rax],al
   14003aebf:	add    BYTE PTR [rdi],al
   14003aec1:	adc    al,0x0
   14003aec3:	add    BYTE PTR [rax],al
   14003aec5:	add    BYTE PTR [rax],al
   14003aec7:	add    al,al
   14003aec9:	mov    edx,0x14003
   14003aece:	add    BYTE PTR [rax],al
   14003aed0:	or     DWORD PTR [rax+rax*1],edx
   14003aed3:	add    BYTE PTR [rax],al
   14003aed5:	add    BYTE PTR [rax],al
   14003aed7:	add    al,dl
   14003aed9:	mov    edx,0x14003
   14003aede:	add    BYTE PTR [rax],al
   14003aee0:	or     dl,BYTE PTR [rax+rax*1]
   14003aee3:	add    BYTE PTR [rax],al
   14003aee5:	add    BYTE PTR [rax],al
   14003aee7:	add    al,ah
   14003aee9:	mov    edx,0x14003
   14003aeee:	add    BYTE PTR [rax],al
   14003aef0:	or     al,0x14
   14003aef2:	add    BYTE PTR [rax],al
   14003aef4:	add    BYTE PTR [rax],al
   14003aef6:	add    BYTE PTR [rax],al
   14003aef8:	lock mov edx,0x14003
   14003aefe:	add    BYTE PTR [rax],al
   14003af00:	sbb    dl,BYTE PTR [rax+rax*1]
   14003af03:	add    BYTE PTR [rax],al
   14003af05:	add    BYTE PTR [rax],al
   14003af07:	add    BYTE PTR [rax],al
   14003af09:	mov    ebx,0x14003
   14003af0e:	add    BYTE PTR [rax],al
   14003af10:	cmp    edx,DWORD PTR [rax+rax*1]
   14003af13:	add    BYTE PTR [rax],al
   14003af15:	add    BYTE PTR [rax],al
   14003af17:	add    BYTE PTR [rax],bl
   14003af19:	mov    ebx,0x14003
   14003af1e:	add    BYTE PTR [rax],al
   14003af20:	add    DWORD PTR [rax],ebx
   14003af22:	add    BYTE PTR [rax],al
   14003af24:	add    BYTE PTR [rax],al
   14003af26:	add    BYTE PTR [rax],al
   14003af28:	sub    BYTE PTR [rbx+0x14003],bh
   14003af2e:	add    BYTE PTR [rax],al
   14003af30:	or     DWORD PTR [rax],ebx
   14003af32:	add    BYTE PTR [rax],al
   14003af34:	add    BYTE PTR [rax],al
   14003af36:	add    BYTE PTR [rax],al
   14003af38:	cmp    BYTE PTR [rbx+0x14003],bh
   14003af3e:	add    BYTE PTR [rax],al
   14003af40:	or     bl,BYTE PTR [rax]
   14003af42:	add    BYTE PTR [rax],al
   14003af44:	add    BYTE PTR [rax],al
   14003af46:	add    BYTE PTR [rax],al
   14003af48:	movabs rbx,0x180c000000014003
   14003af52:	add    BYTE PTR [rax],al
   14003af54:	add    BYTE PTR [rax],al
   14003af56:	add    BYTE PTR [rax],al
   14003af58:	pop    rax
   14003af59:	mov    ebx,0x14003
   14003af5e:	add    BYTE PTR [rax],al
   14003af60:	sbb    bl,BYTE PTR [rax]
   14003af62:	add    BYTE PTR [rax],al
   14003af64:	add    BYTE PTR [rax],al
   14003af66:	add    BYTE PTR [rax],al
   14003af68:	push   0x14003bb
   14003af6d:	add    BYTE PTR [rax],al
   14003af6f:	add    BYTE PTR [rbx],bh
   14003af71:	sbb    BYTE PTR [rax],al
   14003af73:	add    BYTE PTR [rax],al
   14003af75:	add    BYTE PTR [rax],al
   14003af77:	add    BYTE PTR [rax+0x14003bb],al
   14003af7d:	add    BYTE PTR [rax],al
   14003af7f:	add    BYTE PTR [rcx],al
   14003af81:	sbb    al,0x0
   14003af83:	add    BYTE PTR [rax],al
   14003af85:	add    BYTE PTR [rax],al
   14003af87:	add    BYTE PTR [rax+0x14003bb],dl
   14003af8d:	add    BYTE PTR [rax],al
   14003af8f:	add    BYTE PTR [rcx],cl
   14003af91:	sbb    al,0x0
   14003af93:	add    BYTE PTR [rax],al
   14003af95:	add    BYTE PTR [rax],al
   14003af97:	add    BYTE PTR [rax+0x14003bb],ah
   14003af9d:	add    BYTE PTR [rax],al
   14003af9f:	add    BYTE PTR [rdx],cl
   14003afa1:	sbb    al,0x0
   14003afa3:	add    BYTE PTR [rax],al
   14003afa5:	add    BYTE PTR [rax],al
   14003afa7:	add    BYTE PTR [rax+0x14003bb],dh
   14003afad:	add    BYTE PTR [rax],al
   14003afaf:	add    BYTE PTR [rdx],bl
   14003afb1:	sbb    al,0x0
   14003afb3:	add    BYTE PTR [rax],al
   14003afb5:	add    BYTE PTR [rax],al
   14003afb7:	add    al,al
   14003afb9:	mov    ebx,0x14003
   14003afbe:	add    BYTE PTR [rax],al
   14003afc0:	cmp    ebx,DWORD PTR [rax+rax*1]
   14003afc3:	add    BYTE PTR [rax],al
   14003afc5:	add    BYTE PTR [rax],al
   14003afc7:	add    al,bl
   14003afc9:	mov    ebx,0x14003
   14003afce:	add    BYTE PTR [rax],al
   14003afd0:	add    DWORD PTR [rax],esp
   14003afd2:	add    BYTE PTR [rax],al
   14003afd4:	add    BYTE PTR [rax],al
   14003afd6:	add    BYTE PTR [rax],al
   14003afd8:	call   0x14143b398
   14003afdd:	add    BYTE PTR [rax],al
   14003afdf:	add    BYTE PTR [rcx],cl
   14003afe1:	and    BYTE PTR [rax],al
   14003afe3:	add    BYTE PTR [rax],al
   14003afe5:	add    BYTE PTR [rax],al
   14003afe7:	add    al,bh
   14003afe9:	mov    ebx,0x14003
   14003afee:	add    BYTE PTR [rax],al
   14003aff0:	or     ah,BYTE PTR [rax]
   14003aff2:	add    BYTE PTR [rax],al
   14003aff4:	add    BYTE PTR [rax],al
   14003aff6:	add    BYTE PTR [rax],al
   14003aff8:	or     BYTE PTR [rbx+rax*1+0x140],bh
   14003afff:	add    BYTE PTR [rbx],bh
   14003b001:	and    BYTE PTR [rax],al
   14003b003:	add    BYTE PTR [rax],al
   14003b005:	add    BYTE PTR [rax],al
   14003b007:	add    BYTE PTR [rax],bl
   14003b009:	mov    esp,0x14003
   14003b00e:	add    BYTE PTR [rax],al
   14003b010:	add    DWORD PTR [rax+rax*1],esp
   14003b013:	add    BYTE PTR [rax],al
   14003b015:	add    BYTE PTR [rax],al
   14003b017:	add    BYTE PTR [rax],ch
   14003b019:	mov    esp,0x14003
   14003b01e:	add    BYTE PTR [rax],al
   14003b020:	or     DWORD PTR [rax+rax*1],esp
   14003b023:	add    BYTE PTR [rax],al
   14003b025:	add    BYTE PTR [rax],al
   14003b027:	add    BYTE PTR [rax],bh
   14003b029:	mov    esp,0x14003
   14003b02e:	add    BYTE PTR [rax],al
   14003b030:	or     ah,BYTE PTR [rax+rax*1]
   14003b033:	add    BYTE PTR [rax],al
   14003b035:	add    BYTE PTR [rax],al
   14003b037:	add    BYTE PTR [rax-0x44],cl
   14003b03a:	add    eax,DWORD PTR [rax+0x1]
   14003b03d:	add    BYTE PTR [rax],al
   14003b03f:	add    BYTE PTR [rbx],bh
   14003b041:	and    al,0x0
   14003b043:	add    BYTE PTR [rax],al
   14003b045:	add    BYTE PTR [rax],al
   14003b047:	add    BYTE PTR [rax-0x44],bl
   14003b04a:	add    eax,DWORD PTR [rax+0x1]
   14003b04d:	add    BYTE PTR [rax],al
   14003b04f:	add    BYTE PTR [rcx],al
   14003b051:	sub    BYTE PTR [rax],al
   14003b053:	add    BYTE PTR [rax],al
   14003b055:	add    BYTE PTR [rax],al
   14003b057:	add    BYTE PTR [rax-0x44],ch
   14003b05a:	add    eax,DWORD PTR [rax+0x1]
   14003b05d:	add    BYTE PTR [rax],al
   14003b05f:	add    BYTE PTR [rcx],cl
   14003b061:	sub    BYTE PTR [rax],al
   14003b063:	add    BYTE PTR [rax],al
   14003b065:	add    BYTE PTR [rax],al
   14003b067:	add    BYTE PTR [rax-0x44],bh
   14003b06a:	add    eax,DWORD PTR [rax+0x1]
   14003b06d:	add    BYTE PTR [rax],al
   14003b06f:	add    BYTE PTR [rdx],cl
   14003b071:	sub    BYTE PTR [rax],al
   14003b073:	add    BYTE PTR [rax],al
   14003b075:	add    BYTE PTR [rax],al
   14003b077:	add    BYTE PTR [rax+0x14003bc],cl
   14003b07d:	add    BYTE PTR [rax],al
   14003b07f:	add    BYTE PTR [rcx],al
   14003b081:	sub    al,0x0
   14003b083:	add    BYTE PTR [rax],al
   14003b085:	add    BYTE PTR [rax],al
   14003b087:	add    BYTE PTR [rax+0x14003bc],bl
   14003b08d:	add    BYTE PTR [rax],al
   14003b08f:	add    BYTE PTR [rcx],cl
   14003b091:	sub    al,0x0
   14003b093:	add    BYTE PTR [rax],al
   14003b095:	add    BYTE PTR [rax],al
   14003b097:	add    BYTE PTR [rax+0x14003bc],ch
   14003b09d:	add    BYTE PTR [rax],al
   14003b09f:	add    BYTE PTR [rdx],cl
   14003b0a1:	sub    al,0x0
   14003b0a3:	add    BYTE PTR [rax],al
   14003b0a5:	add    BYTE PTR [rax],al
   14003b0a7:	add    BYTE PTR [rax+0x14003bc],bh
   14003b0ad:	add    BYTE PTR [rax],al
   14003b0af:	add    BYTE PTR [rcx],al
   14003b0b1:	xor    BYTE PTR [rax],al
   14003b0b3:	add    BYTE PTR [rax],al
   14003b0b5:	add    BYTE PTR [rax],al
   14003b0b7:	add    al,cl
   14003b0b9:	mov    esp,0x14003
   14003b0be:	add    BYTE PTR [rax],al
   14003b0c0:	or     DWORD PTR [rax],esi
   14003b0c2:	add    BYTE PTR [rax],al
   14003b0c4:	add    BYTE PTR [rax],al
   14003b0c6:	add    BYTE PTR [rax],al
   14003b0c8:	fdivr  DWORD PTR [rbx+rax*1+0x140]
   14003b0cf:	add    BYTE PTR [rdx],cl
   14003b0d1:	xor    BYTE PTR [rax],al
   14003b0d3:	add    BYTE PTR [rax],al
   14003b0d5:	add    BYTE PTR [rax],al
   14003b0d7:	add    al,ch
   14003b0d9:	mov    esp,0x14003
   14003b0de:	add    BYTE PTR [rax],al
   14003b0e0:	add    DWORD PTR [rax+rax*1],esi
   14003b0e3:	add    BYTE PTR [rax],al
   14003b0e5:	add    BYTE PTR [rax],al
   14003b0e7:	add    al,bh
   14003b0e9:	mov    esp,0x14003
   14003b0ee:	add    BYTE PTR [rax],al
   14003b0f0:	or     DWORD PTR [rax+rax*1],esi
   14003b0f3:	add    BYTE PTR [rax],al
   14003b0f5:	add    BYTE PTR [rax],al
   14003b0f7:	add    BYTE PTR [rax],cl
   14003b0f9:	mov    ebp,0x14003
   14003b0fe:	add    BYTE PTR [rax],al
   14003b100:	or     dh,BYTE PTR [rax+rax*1]
   14003b103:	add    BYTE PTR [rax],al
   14003b105:	add    BYTE PTR [rax],al
   14003b107:	add    BYTE PTR [rax],bl
   14003b109:	mov    ebp,0x14003
   14003b10e:	add    BYTE PTR [rax],al
   14003b110:	add    DWORD PTR [rax],edi
   14003b112:	add    BYTE PTR [rax],al
   14003b114:	add    BYTE PTR [rax],al
   14003b116:	add    BYTE PTR [rax],al
   14003b118:	sub    BYTE PTR [rbp+0x14003],bh
   14003b11e:	add    BYTE PTR [rax],al
   14003b120:	or     bh,BYTE PTR [rax]
   14003b122:	add    BYTE PTR [rax],al
   14003b124:	add    BYTE PTR [rax],al
   14003b126:	add    BYTE PTR [rax],al
   14003b128:	cmp    BYTE PTR [rbp+0x14003],bh
   14003b12e:	add    BYTE PTR [rax],al
   14003b130:	add    DWORD PTR [rax+rax*1],edi
   14003b133:	add    BYTE PTR [rax],al
   14003b135:	add    BYTE PTR [rax],al
   14003b137:	add    BYTE PTR [rax-0x43],cl
   14003b13a:	add    eax,DWORD PTR [rax+0x1]
   14003b13d:	add    BYTE PTR [rax],al
   14003b13f:	add    BYTE PTR [rdx],cl
   14003b141:	cmp    al,0x0
   14003b143:	add    BYTE PTR [rax],al
   14003b145:	add    BYTE PTR [rax],al
   14003b147:	add    BYTE PTR [rax-0x43],bl
   14003b14a:	add    eax,DWORD PTR [rax+0x1]
   14003b14d:	add    BYTE PTR [rax],al
   14003b14f:	add    BYTE PTR [rcx],al
   14003b151:	add    BYTE PTR [rax],al
   14003b154:	add    BYTE PTR [rax],al
   14003b156:	add    BYTE PTR [rax],al
   14003b158:	push   0x14003bd
   14003b15d:	add    BYTE PTR [rax],al
   14003b15f:	add    BYTE PTR [rdx],cl
   14003b161:	add    BYTE PTR [rax],al
   14003b164:	add    BYTE PTR [rax],al
   14003b166:	add    BYTE PTR [rax],al
   14003b168:	js     0x14003b127
   14003b16a:	add    eax,DWORD PTR [rax+0x1]
   14003b16d:	add    BYTE PTR [rax],al
   14003b16f:	add    BYTE PTR [rdx],cl
   14003b171:	add    BYTE PTR [rax],r8b
   14003b174:	add    BYTE PTR [rax],al
   14003b176:	add    BYTE PTR [rax],al
   14003b178:	mov    BYTE PTR [rbp+0x14003],bh
   14003b17e:	add    BYTE PTR [rax],al
   14003b180:	or     cl,BYTE PTR [rax+0x0]
   14003b183:	add    BYTE PTR [rax],al
   14003b185:	add    BYTE PTR [rax],al
   14003b187:	add    BYTE PTR [rax+0x14003bd],bl
   14003b18d:	add    BYTE PTR [rax],al
   14003b18f:	add    BYTE PTR [rdx],cl
   14003b191:	rex.WR add BYTE PTR [rax],r8b
   14003b194:	add    BYTE PTR [rax],al
   14003b196:	add    BYTE PTR [rax],al
   14003b198:	test   al,0xbd
   14003b19a:	add    eax,DWORD PTR [rax+0x1]
   14003b19d:	add    BYTE PTR [rax],al
   14003b19f:	add    BYTE PTR [rdx],cl
   14003b1a1:	push   rax
   14003b1a2:	add    BYTE PTR [rax],al
   14003b1a4:	add    BYTE PTR [rax],al
   14003b1a6:	add    BYTE PTR [rax],al
   14003b1a8:	mov    eax,0x14003bd
   14003b1ad:	add    BYTE PTR [rax],al
   14003b1af:	add    BYTE PTR [rsp+rdi*2],al
   14003b1b2:	add    BYTE PTR [rax],al
   14003b1b4:	add    BYTE PTR [rax],al
   14003b1b6:	add    BYTE PTR [rax],al
   14003b1b8:	enter  0x3bd,0x40
   14003b1bc:	add    DWORD PTR [rax],eax
   14003b1be:	add    BYTE PTR [rax],al
   14003b1c0:	sbb    bh,BYTE PTR [rax+rax*1+0x0]
   14003b1c4:	add    BYTE PTR [rax],al
   14003b1c6:	add    BYTE PTR [rax],al
   14003b1c8:	fdivr  DWORD PTR [rbp+0x14003]
   14003b1ce:	add    BYTE PTR [rax],al
   14003b1d0:	(bad)  
   14003b1d1:	add    BYTE PTR [rdx+0x0],dh
   14003b1d4:	add    BYTE PTR [rax],al
   14003b1d6:	add    BYTE PTR [rax],al
   14003b1d8:	(bad)  
   14003b1d9:	add    BYTE PTR [rdi+0x0],ah
   14003b1dc:	add    BYTE PTR [rax],al
   14003b1de:	add    BYTE PTR [rax],al
   14003b1e0:	movsxd eax,DWORD PTR [rax]
   14003b1e2:	(bad)  
   14003b1e3:	add    BYTE PTR [rax],al
   14003b1e5:	add    BYTE PTR [rax],al
   14003b1e7:	add    BYTE PTR [rdx+0x0],bh
   14003b1ea:	push   0x43002d00
   14003b1ef:	add    BYTE PTR [rax+0x0],cl
   14003b1f2:	push   rbx
   14003b1f3:	add    BYTE PTR [rax],al
   14003b1f5:	add    BYTE PTR [rax],al
   14003b1f7:	add    BYTE PTR [rbx+0x0],ah
   14003b1fa:	jae    0x14003b1fc
   14003b1fc:	add    BYTE PTR [rax],al
   14003b1fe:	add    BYTE PTR [rax],al
   14003b200:	add    BYTE PTR fs:[rcx+0x0],ah
   14003b204:	add    BYTE PTR [rax],al
   14003b206:	add    BYTE PTR [rax],al
   14003b208:	add    BYTE PTR fs:[rbp+0x0],ah
   14003b20c:	add    BYTE PTR [rax],al
   14003b20e:	add    BYTE PTR [rax],al
   14003b210:	add    BYTE PTR gs:[rax+rax*1+0x0],ch
   14003b215:	add    BYTE PTR [rax],al
   14003b217:	add    BYTE PTR [rbp+0x0],ah
   14003b21a:	outs   dx,BYTE PTR ds:[rsi]
   14003b21b:	add    BYTE PTR [rax],al
   14003b21d:	add    BYTE PTR [rax],al
   14003b21f:	add    BYTE PTR [rbp+0x0],ah
   14003b222:	jae    0x14003b224
   14003b224:	add    BYTE PTR [rax],al
   14003b226:	add    BYTE PTR [rax],al
   14003b228:	data16 add BYTE PTR [rcx+0x0],ch
   14003b22c:	add    BYTE PTR [rax],al
   14003b22e:	add    BYTE PTR [rax],al
   14003b230:	data16 add BYTE PTR [rdx+0x0],dh
   14003b234:	add    BYTE PTR [rax],al
   14003b236:	add    BYTE PTR [rax],al
   14003b238:	push   0x6500
   14003b23d:	add    BYTE PTR [rax],al
   14003b23f:	add    BYTE PTR [rax+0x0],ch
   14003b242:	jne    0x14003b244
   14003b244:	add    BYTE PTR [rax],al
   14003b246:	add    BYTE PTR [rax],al
   14003b248:	imul   eax,DWORD PTR [rax],0x73
   14003b24e:	add    BYTE PTR [rax],al
   14003b250:	imul   eax,DWORD PTR [rax],0x74
   14003b256:	add    BYTE PTR [rax],al
   14003b258:	push   0x0
   14003b25a:	(bad)  
   14003b25b:	add    BYTE PTR [rax],al
   14003b25d:	add    BYTE PTR [rax],al
   14003b25f:	add    BYTE PTR [rbx+0x0],ch
   14003b262:	outs   dx,DWORD PTR ds:[rsi]
   14003b263:	add    BYTE PTR [rax],al
   14003b265:	add    BYTE PTR [rax],al
   14003b267:	add    BYTE PTR [rsi+0x0],ch
   14003b26a:	ins    BYTE PTR es:[rdi],dx
   14003b26b:	add    BYTE PTR [rax],al
   14003b26d:	add    BYTE PTR [rax],al
   14003b26f:	add    BYTE PTR [rsi+0x0],ch
   14003b272:	outs   dx,DWORD PTR ds:[rsi]
   14003b273:	add    BYTE PTR [rax],al
   14003b275:	add    BYTE PTR [rax],al
   14003b277:	add    BYTE PTR [rax+0x0],dh
   14003b27a:	ins    BYTE PTR es:[rdi],dx
   14003b27b:	add    BYTE PTR [rax],al
   14003b27d:	add    BYTE PTR [rax],al
   14003b27f:	add    BYTE PTR [rax+0x0],dh
   14003b282:	je     0x14003b284
   14003b284:	add    BYTE PTR [rax],al
   14003b286:	add    BYTE PTR [rax],al
   14003b288:	jb     0x14003b28a
   14003b28a:	outs   dx,DWORD PTR ds:[rsi]
   14003b28b:	add    BYTE PTR [rax],al
   14003b28d:	add    BYTE PTR [rax],al
   14003b28f:	add    BYTE PTR [rdx+0x0],dh
   14003b292:	jne    0x14003b294
   14003b294:	add    BYTE PTR [rax],al
   14003b296:	add    BYTE PTR [rax],al
   14003b298:	push   0x7200
   14003b29d:	add    BYTE PTR [rax],al
   14003b29f:	add    BYTE PTR [rbx+0x0],dh
   14003b2a2:	imul   eax,DWORD PTR [rax],0x0
   14003b2a5:	add    BYTE PTR [rax],al
   14003b2a7:	add    BYTE PTR [rbx+0x0],dh
   14003b2aa:	jno    0x14003b2ac
   14003b2ac:	add    BYTE PTR [rax],al
   14003b2ae:	add    BYTE PTR [rax],al
   14003b2b0:	jae    0x14003b2b2
   14003b2b2:	jbe    0x14003b2b4
   14003b2b4:	add    BYTE PTR [rax],al
   14003b2b6:	add    BYTE PTR [rax],al
   14003b2b8:	je     0x14003b2ba
   14003b2ba:	push   0x0
   14003b2bf:	add    BYTE PTR [rax+rax*1+0x72],dh
   14003b2c3:	add    BYTE PTR [rax],al
   14003b2c5:	add    BYTE PTR [rax],al
   14003b2c7:	add    BYTE PTR [rbp+0x0],dh
   14003b2ca:	jb     0x14003b2cc
   14003b2cc:	add    BYTE PTR [rax],al
   14003b2ce:	add    BYTE PTR [rax],al
   14003b2d0:	imul   eax,DWORD PTR [rax],0x64
   14003b2d6:	add    BYTE PTR [rax],al
   14003b2d8:	(bad)  
   14003b2d9:	add    BYTE PTR [rbp+0x0],ah
   14003b2dc:	add    BYTE PTR [rax],al
   14003b2de:	add    BYTE PTR [rax],al
   14003b2e0:	jae    0x14003b2e2
   14003b2e2:	ins    BYTE PTR es:[rdi],dx
   14003b2e3:	add    BYTE PTR [rax],al
   14003b2e5:	add    BYTE PTR [rax],al
   14003b2e7:	add    BYTE PTR [rbp+0x0],ah
   14003b2ea:	je     0x14003b2ec
   14003b2ec:	add    BYTE PTR [rax],al
   14003b2ee:	add    BYTE PTR [rax],al
   14003b2f0:	ins    BYTE PTR es:[rdi],dx
   14003b2f1:	add    BYTE PTR [rsi+0x0],dh
   14003b2f4:	add    BYTE PTR [rax],al
   14003b2f6:	add    BYTE PTR [rax],al
   14003b2f8:	ins    BYTE PTR es:[rdi],dx
   14003b2f9:	add    BYTE PTR [rax+rax*1+0x0],dh
   14003b2fd:	add    BYTE PTR [rax],al
   14003b2ff:	add    BYTE PTR [rsi+0x0],ah
   14003b302:	(bad)  
   14003b303:	add    BYTE PTR [rax],al
   14003b305:	add    BYTE PTR [rax],al
   14003b307:	add    BYTE PTR [rsi+0x0],dh
   14003b30a:	imul   eax,DWORD PTR [rax],0x0
   14003b310:	push   0x7900
   14003b315:	add    BYTE PTR [rax],al
   14003b317:	add    BYTE PTR [rcx+0x0],ah
   14003b31a:	jp     0x14003b31c
   14003b31c:	add    BYTE PTR [rax],al
   14003b31e:	add    BYTE PTR [rax],al
   14003b320:	add    BYTE PTR gs:[rbp+0x0],dh
   14003b324:	add    BYTE PTR [rax],al
   14003b326:	add    BYTE PTR [rax],al
   14003b328:	ins    DWORD PTR es:[rdi],dx
   14003b329:	add    BYTE PTR [rbx+0x0],ch
   14003b32c:	add    BYTE PTR [rax],al
   14003b32e:	add    BYTE PTR [rax],al
   14003b330:	(bad)  
   14003b331:	add    BYTE PTR [rsi+0x0],ah
   14003b334:	add    BYTE PTR [rax],al
   14003b336:	add    BYTE PTR [rax],al
   14003b338:	imul   eax,DWORD PTR [rax],0x61
   14003b33b:	add    BYTE PTR [rax],al
   14003b33d:	add    BYTE PTR [rax],al
   14003b33f:	add    BYTE PTR [rsi+0x0],ah
   14003b342:	outs   dx,DWORD PTR ds:[rsi]
   14003b343:	add    BYTE PTR [rax],al
   14003b345:	add    BYTE PTR [rax],al
   14003b347:	add    BYTE PTR [rax+0x0],ch
   14003b34a:	imul   eax,DWORD PTR [rax],0x0
   14003b350:	ins    DWORD PTR es:[rdi],dx
   14003b351:	add    BYTE PTR [rbx+0x0],dh
   14003b354:	add    BYTE PTR [rax],al
   14003b356:	add    BYTE PTR [rax],al
   14003b358:	imul   eax,DWORD PTR [rax],0x6b
   14003b35b:	add    BYTE PTR [rax],al
   14003b35d:	add    BYTE PTR [rax],al
   14003b35f:	add    BYTE PTR [rbx+0x0],ch
   14003b362:	jns    0x14003b364
   14003b364:	add    BYTE PTR [rax],al
   14003b366:	add    BYTE PTR [rax],al
   14003b368:	jae    0x14003b36a
   14003b36a:	ja     0x14003b36c
   14003b36c:	add    BYTE PTR [rax],al
   14003b36e:	add    BYTE PTR [rax],al
   14003b370:	jne    0x14003b372
   14003b372:	jp     0x14003b374
   14003b374:	add    BYTE PTR [rax],al
   14003b376:	add    BYTE PTR [rax],al
   14003b378:	je     0x14003b37a
   14003b37a:	je     0x14003b37c
   14003b37c:	add    BYTE PTR [rax],al
   14003b37e:	add    BYTE PTR [rax],al
   14003b380:	jo     0x14003b382
   14003b382:	(bad)  
   14003b383:	add    BYTE PTR [rax],al
   14003b385:	add    BYTE PTR [rax],al
   14003b387:	add    BYTE PTR [rdi+0x0],ah
   14003b38a:	jne    0x14003b38c
   14003b38c:	add    BYTE PTR [rax],al
   14003b38e:	add    BYTE PTR [rax],al
   14003b390:	je     0x14003b392
   14003b392:	(bad)  
   14003b393:	add    BYTE PTR [rax],al
   14003b395:	add    BYTE PTR [rax],al
   14003b397:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003b39b:	add    BYTE PTR [rax],al
   14003b39d:	add    BYTE PTR [rax],al
   14003b39f:	add    BYTE PTR [rbx+0x0],ch
   14003b3a2:	outs   dx,BYTE PTR ds:[rsi]
   14003b3a3:	add    BYTE PTR [rax],al
   14003b3a5:	add    BYTE PTR [rax],al
   14003b3a7:	add    BYTE PTR [rbp+0x0],ch
   14003b3aa:	jb     0x14003b3ac
   14003b3ac:	add    BYTE PTR [rax],al
   14003b3ae:	add    BYTE PTR [rax],al
   14003b3b0:	jae    0x14003b3b2
   14003b3b2:	(bad)  
   14003b3b3:	add    BYTE PTR [rax],al
   14003b3b5:	add    BYTE PTR [rax],al
   14003b3b7:	add    BYTE PTR [rbp+0x0],ch
   14003b3ba:	outs   dx,BYTE PTR ds:[rsi]
   14003b3bb:	add    BYTE PTR [rax],al
   14003b3bd:	add    BYTE PTR [rax],al
   14003b3bf:	add    BYTE PTR [rdi+0x0],ah
   14003b3c2:	ins    BYTE PTR es:[rdi],dx
   14003b3c3:	add    BYTE PTR [rax],al
   14003b3c5:	add    BYTE PTR [rax],al
   14003b3c7:	add    BYTE PTR [rbx+0x0],ch
   14003b3ca:	outs   dx,DWORD PTR ds:[rsi]
   14003b3cb:	add    BYTE PTR [rbx+0x0],ch
   14003b3ce:	add    BYTE PTR [rax],al
   14003b3d0:	jae    0x14003b3d2
   14003b3d2:	jns    0x14003b3d4
   14003b3d4:	jb     0x14003b3d6
   14003b3d6:	add    BYTE PTR [rax],al
   14003b3d8:	add    BYTE PTR fs:[rcx+0x0],ch
   14003b3dc:	jbe    0x14003b3de
   14003b3de:	add    BYTE PTR [rax],al
   14003b3e0:	(bad)  
   14003b3e1:	add    BYTE PTR [rdx+0x0],dh
   14003b3e4:	sub    eax,0x41005300
   14003b3e9:	add    BYTE PTR [rax],al
   14003b3eb:	add    BYTE PTR [rax],al
   14003b3ed:	add    BYTE PTR [rax],al
   14003b3ef:	add    BYTE PTR [rdx+0x0],ah
   14003b3f2:	add    BYTE PTR [eip+0x47004200],ch        # 0x18703f5f9
   14003b3f9:	add    BYTE PTR [rax],al
   14003b3fb:	add    BYTE PTR [rax],al
   14003b3fd:	add    BYTE PTR [rax],al
   14003b3ff:	add    BYTE PTR [rbx+0x0],ah
   14003b402:	(bad)  
   14003b403:	add    BYTE PTR [rip+0x53004500],ch        # 0x19303f909
   14003b409:	add    BYTE PTR [rax],al
   14003b40b:	add    BYTE PTR [rax],al
   14003b40d:	add    BYTE PTR [rax],al
   14003b40f:	add    BYTE PTR [rbx+0x0],ah
   14003b412:	jae    0x14003b414
   14003b414:	sub    eax,0x5a004300
   14003b419:	add    BYTE PTR [rax],al
   14003b41b:	add    BYTE PTR [rax],al
   14003b41d:	add    BYTE PTR [rax],al
   14003b41f:	add    BYTE PTR [rax+rax*1+0x61],ah
   14003b423:	add    BYTE PTR [rip+0x4b004400],ch        # 0x18b03f829
   14003b429:	add    BYTE PTR [rax],al
   14003b42b:	add    BYTE PTR [rax],al
   14003b42d:	add    BYTE PTR [rax],al
   14003b42f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003b433:	add    BYTE PTR [rip+0x45004400],ch        # 0x18503f839
   14003b439:	add    BYTE PTR [rax],al
   14003b43b:	add    BYTE PTR [rax],al
   14003b43d:	add    BYTE PTR [rax],al
   14003b43f:	add    BYTE PTR [rbp+0x0],ah
   14003b442:	ins    BYTE PTR es:[rdi],dx
   14003b443:	add    BYTE PTR [rip+0x52004700],ch        # 0x19203fb49
   14003b449:	add    BYTE PTR [rax],al
   14003b44b:	add    BYTE PTR [rax],al
   14003b44d:	add    BYTE PTR [rax],al
   14003b44f:	add    BYTE PTR [rsi+0x0],ah
   14003b452:	imul   eax,DWORD PTR [rax],0x46002d
   14003b458:	rex.WB add BYTE PTR [r8],al
   14003b45b:	add    BYTE PTR [rax],al
   14003b45d:	add    BYTE PTR [rax],al
   14003b45f:	add    BYTE PTR [rsi+0x0],ah
   14003b462:	jb     0x14003b464
   14003b464:	sub    eax,0x52004600
   14003b469:	add    BYTE PTR [rax],al
   14003b46b:	add    BYTE PTR [rax],al
   14003b46d:	add    BYTE PTR [rax],al
   14003b46f:	add    BYTE PTR [rax+0x0],ch
   14003b472:	add    BYTE PTR gs:[rip+0x4c004900],ch        # 0x18c03fd79
   14003b479:	add    BYTE PTR [rax],al
   14003b47b:	add    BYTE PTR [rax],al
   14003b47d:	add    BYTE PTR [rax],al
   14003b47f:	add    BYTE PTR [rax+0x0],ch
   14003b482:	jne    0x14003b484
   14003b484:	sub    eax,0x55004800
   14003b489:	add    BYTE PTR [rax],al
   14003b48b:	add    BYTE PTR [rax],al
   14003b48d:	add    BYTE PTR [rax],al
   14003b48f:	add    BYTE PTR [rcx+0x0],ch
   14003b492:	jae    0x14003b494
   14003b494:	sub    eax,0x53004900
   14003b499:	add    BYTE PTR [rax],al
   14003b49b:	add    BYTE PTR [rax],al
   14003b49d:	add    BYTE PTR [rax],al
   14003b49f:	add    BYTE PTR [rcx+0x0],ch
   14003b4a2:	je     0x14003b4a4
   14003b4a4:	sub    eax,0x54004900
   14003b4a9:	add    BYTE PTR [rax],al
   14003b4ab:	add    BYTE PTR [rax],al
   14003b4ad:	add    BYTE PTR [rax],al
   14003b4af:	add    BYTE PTR [rsi+0x0],ch
   14003b4b2:	ins    BYTE PTR es:[rdi],dx
   14003b4b3:	add    BYTE PTR [rip+0x4c004e00],ch        # 0x18c0402b9
   14003b4b9:	add    BYTE PTR [rax],al
   14003b4bb:	add    BYTE PTR [rax],al
   14003b4bd:	add    BYTE PTR [rax],al
   14003b4bf:	add    BYTE PTR [rsi+0x0],ch
   14003b4c2:	(bad)  
   14003b4c3:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f0402c9
   14003b4c9:	add    BYTE PTR [rax],al
   14003b4cb:	add    BYTE PTR [rax],al
   14003b4cd:	add    BYTE PTR [rax],al
   14003b4cf:	add    BYTE PTR [rax+0x0],dh
   14003b4d2:	ins    BYTE PTR es:[rdi],dx
   14003b4d3:	add    BYTE PTR [rip+0x4c005000],ch        # 0x18c0404d9
   14003b4d9:	add    BYTE PTR [rax],al
   14003b4db:	add    BYTE PTR [rax],al
   14003b4dd:	add    BYTE PTR [rax],al
   14003b4df:	add    BYTE PTR [rax+0x0],dh
   14003b4e2:	je     0x14003b4e4
   14003b4e4:	sub    eax,0x52004200
   14003b4e9:	add    BYTE PTR [rax],al
   14003b4eb:	add    BYTE PTR [rax],al
   14003b4ed:	add    BYTE PTR [rax],al
   14003b4ef:	add    BYTE PTR [rdx+0x0],dh
   14003b4f2:	outs   dx,DWORD PTR ds:[rsi]
   14003b4f3:	add    BYTE PTR [rip+0x4f005200],ch        # 0x18f0406f9
   14003b4f9:	add    BYTE PTR [rax],al
   14003b4fb:	add    BYTE PTR [rax],al
   14003b4fd:	add    BYTE PTR [rax],al
   14003b4ff:	add    BYTE PTR [rdx+0x0],dh
   14003b502:	jne    0x14003b504
   14003b504:	sub    eax,0x55005200
   14003b509:	add    BYTE PTR [rax],al
   14003b50b:	add    BYTE PTR [rax],al
   14003b50d:	add    BYTE PTR [rax],al
   14003b50f:	add    BYTE PTR [rax+0x0],ch
   14003b512:	jb     0x14003b514
   14003b514:	sub    eax,0x52004800
   14003b519:	add    BYTE PTR [rax],al
   14003b51b:	add    BYTE PTR [rax],al
   14003b51d:	add    BYTE PTR [rax],al
   14003b51f:	add    BYTE PTR [rbx+0x0],dh
   14003b522:	imul   eax,DWORD PTR [rax],0x2d
   14003b525:	add    BYTE PTR [rbx+0x0],dl
   14003b528:	rex.WXB add BYTE PTR [r8],al
   14003b52b:	add    BYTE PTR [rax],al
   14003b52d:	add    BYTE PTR [rax],al
   14003b52f:	add    BYTE PTR [rbx+0x0],dh
   14003b532:	jno    0x14003b534
   14003b534:	sub    eax,0x4c004100
   14003b539:	add    BYTE PTR [rax],al
   14003b53b:	add    BYTE PTR [rax],al
   14003b53d:	add    BYTE PTR [rax],al
   14003b53f:	add    BYTE PTR [rbx+0x0],dh
   14003b542:	jbe    0x14003b544
   14003b544:	sub    eax,0x45005300
   14003b549:	add    BYTE PTR [rax],al
   14003b54b:	add    BYTE PTR [rax],al
   14003b54d:	add    BYTE PTR [rax],al
   14003b54f:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003b553:	add    BYTE PTR [rip+0x48005400],ch        # 0x188040959
   14003b559:	add    BYTE PTR [rax],al
   14003b55b:	add    BYTE PTR [rax],al
   14003b55d:	add    BYTE PTR [rax],al
   14003b55f:	add    BYTE PTR [rax+rax*1+0x72],dh
   14003b563:	add    BYTE PTR [rip+0x52005400],ch        # 0x192040969
   14003b569:	add    BYTE PTR [rax],al
   14003b56b:	add    BYTE PTR [rax],al
   14003b56d:	add    BYTE PTR [rax],al
   14003b56f:	add    BYTE PTR [rbp+0x0],dh
   14003b572:	jb     0x14003b574
   14003b574:	sub    eax,0x4b005000
   14003b579:	add    BYTE PTR [rax],al
   14003b57b:	add    BYTE PTR [rax],al
   14003b57d:	add    BYTE PTR [rax],al
   14003b57f:	add    BYTE PTR [rcx+0x0],ch
   14003b582:	add    BYTE PTR fs:[rip+0x44004900],ch        # 0x18403fe89
   14003b589:	add    BYTE PTR [rax],al
   14003b58b:	add    BYTE PTR [rax],al
   14003b58d:	add    BYTE PTR [rax],al
   14003b58f:	add    BYTE PTR [rbp+0x0],dh
   14003b592:	imul   eax,DWORD PTR [rax],0x2d
   14003b595:	add    BYTE PTR [rbp+0x0],dl
   14003b598:	add    BYTE PTR [r8],al
   14003b59b:	add    BYTE PTR [rax],al
   14003b59d:	add    BYTE PTR [rax],al
   14003b59f:	add    BYTE PTR [rdx+0x0],ah
   14003b5a2:	add    BYTE PTR gs:[rip+0x59004200],ch        # 0x19903f7a9
   14003b5a9:	add    BYTE PTR [rax],al
   14003b5ab:	add    BYTE PTR [rax],al
   14003b5ad:	add    BYTE PTR [rax],al
   14003b5af:	add    BYTE PTR [rbx+0x0],dh
   14003b5b2:	ins    BYTE PTR es:[rdi],dx
   14003b5b3:	add    BYTE PTR [rip+0x49005300],ch        # 0x1890408b9
   14003b5b9:	add    BYTE PTR [rax],al
   14003b5bb:	add    BYTE PTR [rax],al
   14003b5bd:	add    BYTE PTR [rax],al
   14003b5bf:	add    BYTE PTR [rbp+0x0],ah
   14003b5c2:	je     0x14003b5c4
   14003b5c4:	sub    eax,0x45004500
   14003b5c9:	add    BYTE PTR [rax],al
   14003b5cb:	add    BYTE PTR [rax],al
   14003b5cd:	add    BYTE PTR [rax],al
   14003b5cf:	add    BYTE PTR [rax+rax*1+0x76],ch
   14003b5d3:	add    BYTE PTR [rip+0x56004c00],ch        # 0x1960401d9
   14003b5d9:	add    BYTE PTR [rax],al
   14003b5db:	add    BYTE PTR [rax],al
   14003b5dd:	add    BYTE PTR [rax],al
   14003b5df:	add    BYTE PTR [rax+rax*1+0x74],ch
   14003b5e3:	add    BYTE PTR [rip+0x54004c00],ch        # 0x1940401e9
   14003b5e9:	add    BYTE PTR [rax],al
   14003b5eb:	add    BYTE PTR [rax],al
   14003b5ed:	add    BYTE PTR [rax],al
   14003b5ef:	add    BYTE PTR [rsi+0x0],ah
   14003b5f2:	(bad)  
   14003b5f3:	add    BYTE PTR [rip+0x52004900],ch        # 0x19203fef9
   14003b5f9:	add    BYTE PTR [rax],al
   14003b5fb:	add    BYTE PTR [rax],al
   14003b5fd:	add    BYTE PTR [rax],al
   14003b5ff:	add    BYTE PTR [rsi+0x0],dh
   14003b602:	imul   eax,DWORD PTR [rax],0x56002d
   14003b608:	rex.WRX add BYTE PTR [rax],r8b
   14003b60b:	add    BYTE PTR [rax],al
   14003b60d:	add    BYTE PTR [rax],al
   14003b60f:	add    BYTE PTR [rax+0x0],ch
   14003b612:	jns    0x14003b614
   14003b614:	sub    eax,0x4d004100
   14003b619:	add    BYTE PTR [rax],al
   14003b61b:	add    BYTE PTR [rax],al
   14003b61d:	add    BYTE PTR [rax],al
   14003b61f:	add    BYTE PTR [rcx+0x0],ah
   14003b622:	jp     0x14003b624
   14003b624:	sub    eax,0x5a004100
   14003b629:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a104022f
   14003b62f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003b633:	add    BYTE PTR [rax],al
   14003b635:	add    BYTE PTR [rax],al
   14003b637:	add    BYTE PTR [rbp+0x0],ah
   14003b63a:	jne    0x14003b63c
   14003b63c:	sub    eax,0x53004500
   14003b641:	add    BYTE PTR [rax],al
   14003b643:	add    BYTE PTR [rax],al
   14003b645:	add    BYTE PTR [rax],al
   14003b647:	add    BYTE PTR [rbp+0x0],ch
   14003b64a:	imul   eax,DWORD PTR [rax],0x2d
   14003b64d:	add    BYTE PTR [rbp+0x0],cl
   14003b650:	rex.WXB add BYTE PTR [r8],al
   14003b653:	add    BYTE PTR [rax],al
   14003b655:	add    BYTE PTR [rax],al
   14003b657:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003b65b:	add    BYTE PTR [rip+0x41005a00],ch        # 0x181041061
   14003b661:	add    BYTE PTR [rax],al
   14003b663:	add    BYTE PTR [rax],al
   14003b665:	add    BYTE PTR [rax],al
   14003b667:	add    BYTE PTR [rax+0x0],bh
   14003b66a:	push   0x5a002d00
   14003b66f:	add    BYTE PTR [rcx+0x0],al
   14003b672:	add    BYTE PTR [rax],al
   14003b674:	add    BYTE PTR [rax],al
   14003b676:	add    BYTE PTR [rax],al
   14003b678:	jp     0x14003b67a
   14003b67a:	jne    0x14003b67c
   14003b67c:	sub    eax,0x41005a00
   14003b681:	add    BYTE PTR [rax],al
   14003b683:	add    BYTE PTR [rax],al
   14003b685:	add    BYTE PTR [rax],al
   14003b687:	add    BYTE PTR [rcx+0x0],ah
   14003b68a:	data16 add BYTE PTR [rip+0x41005a00],ch        # 0x181041091
   14003b691:	add    BYTE PTR [rax],al
   14003b693:	add    BYTE PTR [rax],al
   14003b695:	add    BYTE PTR [rax],al
   14003b697:	add    BYTE PTR [rbx+0x0],ch
   14003b69a:	(bad)  
   14003b69b:	add    BYTE PTR [rip+0x45004700],ch        # 0x18503fda1
   14003b6a1:	add    BYTE PTR [rax],al
   14003b6a3:	add    BYTE PTR [rax],al
   14003b6a5:	add    BYTE PTR [rax],al
   14003b6a7:	add    BYTE PTR [rsi+0x0],ah
   14003b6aa:	outs   dx,DWORD PTR ds:[rsi]
   14003b6ab:	add    BYTE PTR [rip+0x4f004600],ch        # 0x18f03fcb1
   14003b6b1:	add    BYTE PTR [rax],al
   14003b6b3:	add    BYTE PTR [rax],al
   14003b6b5:	add    BYTE PTR [rax],al
   14003b6b7:	add    BYTE PTR [rax+0x0],ch
   14003b6ba:	imul   eax,DWORD PTR [rax],0x49002d
   14003b6c0:	rex.WRX add BYTE PTR [rax],r8b
   14003b6c3:	add    BYTE PTR [rax],al
   14003b6c5:	add    BYTE PTR [rax],al
   14003b6c7:	add    BYTE PTR [rbp+0x0],ch
   14003b6ca:	je     0x14003b6cc
   14003b6cc:	sub    eax,0x54004d00
   14003b6d1:	add    BYTE PTR [rax],al
   14003b6d3:	add    BYTE PTR [rax],al
   14003b6d5:	add    BYTE PTR [rax],al
   14003b6d7:	add    BYTE PTR [rbx+0x0],dh
   14003b6da:	add    BYTE PTR gs:[rip+0x4f004e00],ch        # 0x18f0404e1
   14003b6e1:	add    BYTE PTR [rax],al
   14003b6e3:	add    BYTE PTR [rax],al
   14003b6e5:	add    BYTE PTR [rax],al
   14003b6e7:	add    BYTE PTR [rbp+0x0],ch
   14003b6ea:	jae    0x14003b6ec
   14003b6ec:	sub    eax,0x59004d00
   14003b6f1:	add    BYTE PTR [rax],al
   14003b6f3:	add    BYTE PTR [rax],al
   14003b6f5:	add    BYTE PTR [rax],al
   14003b6f7:	add    BYTE PTR [rbx+0x0],ch
   14003b6fa:	imul   eax,DWORD PTR [rax],0x2d
   14003b6fd:	add    BYTE PTR [rbx+0x0],cl
   14003b700:	pop    rdx
   14003b701:	add    BYTE PTR [rax],al
   14003b703:	add    BYTE PTR [rax],al
   14003b705:	add    BYTE PTR [rax],al
   14003b707:	add    BYTE PTR [rbx+0x0],ch
   14003b70a:	jns    0x14003b70c
   14003b70c:	sub    eax,0x47004b00
   14003b711:	add    BYTE PTR [rax],al
   14003b713:	add    BYTE PTR [rax],al
   14003b715:	add    BYTE PTR [rax],al
   14003b717:	add    BYTE PTR [rbx+0x0],dh
   14003b71a:	ja     0x14003b71c
   14003b71c:	sub    eax,0x45004b00
   14003b721:	add    BYTE PTR [rax],al
   14003b723:	add    BYTE PTR [rax],al
   14003b725:	add    BYTE PTR [rax],al
   14003b727:	add    BYTE PTR [rbp+0x0],dh
   14003b72a:	jp     0x14003b72c
   14003b72c:	sub    eax,0x5a005500
   14003b731:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1040337
   14003b737:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003b73b:	add    BYTE PTR [rax],al
   14003b73d:	add    BYTE PTR [rax],al
   14003b73f:	add    BYTE PTR [rax+rax*1+0x74],dh
   14003b743:	add    BYTE PTR [rip+0x55005200],ch        # 0x195040949
   14003b749:	add    BYTE PTR [rax],al
   14003b74b:	add    BYTE PTR [rax],al
   14003b74d:	add    BYTE PTR [rax],al
   14003b74f:	add    BYTE PTR [rdx+0x0],ah
   14003b752:	outs   dx,BYTE PTR ds:[rsi]
   14003b753:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e040059
   14003b759:	add    BYTE PTR [rax],al
   14003b75b:	add    BYTE PTR [rax],al
   14003b75d:	add    BYTE PTR [rax],al
   14003b75f:	add    BYTE PTR [rax+0x0],dh
   14003b762:	(bad)  
   14003b763:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e040069
   14003b769:	add    BYTE PTR [rax],al
   14003b76b:	add    BYTE PTR [rax],al
   14003b76d:	add    BYTE PTR [rax],al
   14003b76f:	add    BYTE PTR [rdi+0x0],ah
   14003b772:	jne    0x14003b774
   14003b774:	sub    eax,0x4e004900
   14003b779:	add    BYTE PTR [rax],al
   14003b77b:	add    BYTE PTR [rax],al
   14003b77d:	add    BYTE PTR [rax],al
   14003b77f:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003b783:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e040089
   14003b789:	add    BYTE PTR [rax],al
   14003b78b:	add    BYTE PTR [rax],al
   14003b78d:	add    BYTE PTR [rax],al
   14003b78f:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003b793:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e040099
   14003b799:	add    BYTE PTR [rax],al
   14003b79b:	add    BYTE PTR [rax],al
   14003b79d:	add    BYTE PTR [rax],al
   14003b79f:	add    BYTE PTR [rbx+0x0],ch
   14003b7a2:	outs   dx,BYTE PTR ds:[rsi]
   14003b7a3:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0400a9
   14003b7a9:	add    BYTE PTR [rax],al
   14003b7ab:	add    BYTE PTR [rax],al
   14003b7ad:	add    BYTE PTR [rax],al
   14003b7af:	add    BYTE PTR [rbp+0x0],ch
   14003b7b2:	ins    BYTE PTR es:[rdi],dx
   14003b7b3:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0400b9
   14003b7b9:	add    BYTE PTR [rax],al
   14003b7bb:	add    BYTE PTR [rax],al
   14003b7bd:	add    BYTE PTR [rax],al
   14003b7bf:	add    BYTE PTR [rbp+0x0],ch
   14003b7c2:	jb     0x14003b7c4
   14003b7c4:	sub    eax,0x4e004900
   14003b7c9:	add    BYTE PTR [rax],al
   14003b7cb:	add    BYTE PTR [rax],al
   14003b7cd:	add    BYTE PTR [rax],al
   14003b7cf:	add    BYTE PTR [rbx+0x0],dh
   14003b7d2:	(bad)  
   14003b7d3:	add    BYTE PTR [rip+0x4e004900],ch        # 0x18e0400d9
   14003b7d9:	add    BYTE PTR [rax],al
   14003b7db:	add    BYTE PTR [rax],al
   14003b7dd:	add    BYTE PTR [rax],al
   14003b7df:	add    BYTE PTR [rbp+0x0],ch
   14003b7e2:	outs   dx,BYTE PTR ds:[rsi]
   14003b7e3:	add    BYTE PTR [rip+0x4e004d00],ch        # 0x18e0404e9
   14003b7e9:	add    BYTE PTR [rax],al
   14003b7eb:	add    BYTE PTR [rax],al
   14003b7ed:	add    BYTE PTR [rax],al
   14003b7ef:	add    BYTE PTR [rbx+0x0],ah
   14003b7f2:	jns    0x14003b7f4
   14003b7f4:	sub    eax,0x42004700
   14003b7f9:	add    BYTE PTR [rax],al
   14003b7fb:	add    BYTE PTR [rax],al
   14003b7fd:	add    BYTE PTR [rax],al
   14003b7ff:	add    BYTE PTR [rdi+0x0],ah
   14003b802:	ins    BYTE PTR es:[rdi],dx
   14003b803:	add    BYTE PTR [rip+0x53004500],ch        # 0x19303fd09
   14003b809:	add    BYTE PTR [rax],al
   14003b80b:	add    BYTE PTR [rax],al
   14003b80d:	add    BYTE PTR [rax],al
   14003b80f:	add    BYTE PTR [rbx+0x0],ch
   14003b812:	outs   dx,DWORD PTR ds:[rsi]
   14003b813:	add    BYTE PTR [rbx+0x0],ch
   14003b816:	sub    eax,0x4e004900
   14003b81b:	add    BYTE PTR [rax],al
   14003b81d:	add    BYTE PTR [rax],al
   14003b81f:	add    BYTE PTR [rbx+0x0],dh
   14003b822:	jns    0x14003b824
   14003b824:	jb     0x14003b826
   14003b826:	sub    eax,0x59005300
   14003b82b:	add    BYTE PTR [rax],al
   14003b82d:	add    BYTE PTR [rax],al
   14003b82f:	add    BYTE PTR [rax+rax*1+0x69],ah
   14003b833:	add    BYTE PTR [rsi+0x0],dh
   14003b836:	sub    eax,0x56004d00
   14003b83b:	add    BYTE PTR [rax],al
   14003b83d:	add    BYTE PTR [rax],al
   14003b83f:	add    BYTE PTR [rcx+0x0],dh
   14003b842:	jne    0x14003b844
   14003b844:	jp     0x14003b846
   14003b846:	sub    eax,0x4f004200
   14003b84b:	add    BYTE PTR [rax],al
   14003b84d:	add    BYTE PTR [rax],al
   14003b84f:	add    BYTE PTR [rsi+0x0],ch
   14003b852:	jae    0x14003b854
   14003b854:	sub    eax,0x41005a00
   14003b859:	add    BYTE PTR [rax],al
   14003b85b:	add    BYTE PTR [rax],al
   14003b85d:	add    BYTE PTR [rax],al
   14003b85f:	add    BYTE PTR [rbp+0x0],ch
   14003b862:	imul   eax,DWORD PTR [rax],0x4e002d
   14003b868:	pop    rdx
   14003b869:	add    BYTE PTR [rax],al
   14003b86b:	add    BYTE PTR [rax],al
   14003b86d:	add    BYTE PTR [rax],al
   14003b86f:	add    BYTE PTR [rcx+0x0],ah
   14003b872:	jb     0x14003b874
   14003b874:	sub    eax,0x51004900
   14003b879:	add    BYTE PTR [rax],al
   14003b87b:	add    BYTE PTR [rax],al
   14003b87d:	add    BYTE PTR [rax],al
   14003b87f:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003b883:	add    BYTE PTR [rip+0x48004300],ch        # 0x18803fb89
   14003b889:	add    BYTE PTR [rax],al
   14003b88b:	add    BYTE PTR [rax],al
   14003b88d:	add    BYTE PTR [rax],al
   14003b88f:	add    BYTE PTR [rbp+0x0],ah
   14003b892:	outs   dx,BYTE PTR ds:[rsi]
   14003b893:	add    BYTE PTR [rip+0x42004700],ch        # 0x18203ff99
   14003b899:	add    BYTE PTR [rax],al
   14003b89b:	add    BYTE PTR [rax],al
   14003b89d:	add    BYTE PTR [rax],al
   14003b89f:	add    BYTE PTR [rbp+0x0],ah
   14003b8a2:	jae    0x14003b8a4
   14003b8a4:	sub    eax,0x58004d00
   14003b8a9:	add    BYTE PTR [rax],al
   14003b8ab:	add    BYTE PTR [rax],al
   14003b8ad:	add    BYTE PTR [rax],al
   14003b8af:	add    BYTE PTR [rsi+0x0],ah
   14003b8b2:	jb     0x14003b8b4
   14003b8b4:	sub    eax,0x45004200
   14003b8b9:	add    BYTE PTR [rax],al
   14003b8bb:	add    BYTE PTR [rax],al
   14003b8bd:	add    BYTE PTR [rax],al
   14003b8bf:	add    BYTE PTR [rcx+0x0],ch
   14003b8c2:	je     0x14003b8c4
   14003b8c4:	sub    eax,0x48004300
   14003b8c9:	add    BYTE PTR [rax],al
   14003b8cb:	add    BYTE PTR [rax],al
   14003b8cd:	add    BYTE PTR [rax],al
   14003b8cf:	add    BYTE PTR [rsi+0x0],ch
   14003b8d2:	ins    BYTE PTR es:[rdi],dx
   14003b8d3:	add    BYTE PTR [rip+0x45004200],ch        # 0x18503fad9
   14003b8d9:	add    BYTE PTR [rax],al
   14003b8db:	add    BYTE PTR [rax],al
   14003b8dd:	add    BYTE PTR [rax],al
   14003b8df:	add    BYTE PTR [rsi+0x0],ch
   14003b8e2:	outs   dx,BYTE PTR ds:[rsi]
   14003b8e3:	add    BYTE PTR [rip+0x4f004e00],ch        # 0x18f0406e9
   14003b8e9:	add    BYTE PTR [rax],al
   14003b8eb:	add    BYTE PTR [rax],al
   14003b8ed:	add    BYTE PTR [rax],al
   14003b8ef:	add    BYTE PTR [rax+0x0],dh
   14003b8f2:	je     0x14003b8f4
   14003b8f4:	sub    eax,0x54005000
   14003b8f9:	add    BYTE PTR [rax],al
   14003b8fb:	add    BYTE PTR [rax],al
   14003b8fd:	add    BYTE PTR [rax],al
   14003b8ff:	add    BYTE PTR [rbx+0x0],dh
   14003b902:	jb     0x14003b904
   14003b904:	sub    eax,0x50005300
   14003b909:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a104050f
   14003b90f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003b913:	add    BYTE PTR [rax],al
   14003b915:	add    BYTE PTR [rax],al
   14003b917:	add    BYTE PTR [rbx+0x0],dh
   14003b91a:	jbe    0x14003b91c
   14003b91c:	sub    eax,0x49004600
   14003b921:	add    BYTE PTR [rax],al
   14003b923:	add    BYTE PTR [rax],al
   14003b925:	add    BYTE PTR [rax],al
   14003b927:	add    BYTE PTR [rcx+0x0],ah
   14003b92a:	jp     0x14003b92c
   14003b92c:	sub    eax,0x5a004100
   14003b931:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b903fc37
   14003b937:	add    BYTE PTR [rdx+0x0],dh
   14003b93a:	ins    BYTE PTR es:[rdi],dx
   14003b93b:	add    BYTE PTR [rax],al
   14003b93d:	add    BYTE PTR [rax],al
   14003b93f:	add    BYTE PTR [rbx+0x0],dh
   14003b942:	add    BYTE PTR gs:[rip+0x45005300],ch        # 0x185040c49
   14003b949:	add    BYTE PTR [rax],al
   14003b94b:	add    BYTE PTR [rax],al
   14003b94d:	add    BYTE PTR [rax],al
   14003b94f:	add    BYTE PTR [rbp+0x0],ch
   14003b952:	jae    0x14003b954
   14003b954:	sub    eax,0x4e004200
   14003b959:	add    BYTE PTR [rax],al
   14003b95b:	add    BYTE PTR [rax],al
   14003b95d:	add    BYTE PTR [rax],al
   14003b95f:	add    BYTE PTR [rbp+0x0],dh
   14003b962:	jp     0x14003b964
   14003b964:	sub    eax,0x5a005500
   14003b969:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b903fc6f
   14003b96f:	add    BYTE PTR [rdx+0x0],dh
   14003b972:	ins    BYTE PTR es:[rdi],dx
   14003b973:	add    BYTE PTR [rax],al
   14003b975:	add    BYTE PTR [rax],al
   14003b977:	add    BYTE PTR [rcx+0x0],dh
   14003b97a:	jne    0x14003b97c
   14003b97c:	jp     0x14003b97e
   14003b97e:	sub    eax,0x43004500
   14003b983:	add    BYTE PTR [rax],al
   14003b985:	add    BYTE PTR [rax],al
   14003b987:	add    BYTE PTR [rcx+0x0],ah
   14003b98a:	jb     0x14003b98c
   14003b98c:	sub    eax,0x47004500
   14003b991:	add    BYTE PTR [rax],al
   14003b993:	add    BYTE PTR [rax],al
   14003b995:	add    BYTE PTR [rax],al
   14003b997:	add    BYTE PTR [rdx+0x0],bh
   14003b99a:	push   0x48002d00
   14003b99f:	add    BYTE PTR [rbx+0x0],cl
   14003b9a2:	add    BYTE PTR [rax],al
   14003b9a4:	add    BYTE PTR [rax],al
   14003b9a6:	add    BYTE PTR [rax],al
   14003b9a8:	add    BYTE PTR fs:[rbp+0x0],ah
   14003b9ac:	sub    eax,0x54004100
   14003b9b1:	add    BYTE PTR [rax],al
   14003b9b3:	add    BYTE PTR [rax],al
   14003b9b5:	add    BYTE PTR [rax],al
   14003b9b7:	add    BYTE PTR [rbp+0x0],ah
   14003b9ba:	outs   dx,BYTE PTR ds:[rsi]
   14003b9bb:	add    BYTE PTR [rip+0x55004100],ch        # 0x19503fac1
   14003b9c1:	add    BYTE PTR [rax],al
   14003b9c3:	add    BYTE PTR [rax],al
   14003b9c5:	add    BYTE PTR [rax],al
   14003b9c7:	add    BYTE PTR [rbp+0x0],ah
   14003b9ca:	jae    0x14003b9cc
   14003b9cc:	sub    eax,0x53004500
   14003b9d1:	add    BYTE PTR [rax],al
   14003b9d3:	add    BYTE PTR [rax],al
   14003b9d5:	add    BYTE PTR [rax],al
   14003b9d7:	add    BYTE PTR [rsi+0x0],ah
   14003b9da:	jb     0x14003b9dc
   14003b9dc:	sub    eax,0x41004300
   14003b9e1:	add    BYTE PTR [rax],al
   14003b9e3:	add    BYTE PTR [rax],al
   14003b9e5:	add    BYTE PTR [rax],al
   14003b9e7:	add    BYTE PTR [rbx+0x0],dh
   14003b9ea:	jb     0x14003b9ec
   14003b9ec:	sub    eax,0x50005300
   14003b9f1:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b903fcf7
   14003b9f7:	add    BYTE PTR [rdx+0x0],dh
   14003b9fa:	ins    BYTE PTR es:[rdi],dx
   14003b9fb:	add    BYTE PTR [rax],al
   14003b9fd:	add    BYTE PTR [rax],al
   14003b9ff:	add    BYTE PTR [rbx+0x0],dh
   14003ba02:	add    BYTE PTR gs:[rip+0x49004600],ch        # 0x189040009
   14003ba09:	add    BYTE PTR [rax],al
   14003ba0b:	add    BYTE PTR [rax],al
   14003ba0d:	add    BYTE PTR [rax],al
   14003ba0f:	add    BYTE PTR [rcx+0x0],dh
   14003ba12:	jne    0x14003ba14
   14003ba14:	jp     0x14003ba16
   14003ba16:	sub    eax,0x45005000
   14003ba1b:	add    BYTE PTR [rax],al
   14003ba1d:	add    BYTE PTR [rax],al
   14003ba1f:	add    BYTE PTR [rcx+0x0],ah
   14003ba22:	jb     0x14003ba24
   14003ba24:	sub    eax,0x59004c00
   14003ba29:	add    BYTE PTR [rax],al
   14003ba2b:	add    BYTE PTR [rax],al
   14003ba2d:	add    BYTE PTR [rax],al
   14003ba2f:	add    BYTE PTR [rdx+0x0],bh
   14003ba32:	push   0x53002d00
   14003ba37:	add    BYTE PTR [rdi+0x0],al
   14003ba3a:	add    BYTE PTR [rax],al
   14003ba3c:	add    BYTE PTR [rax],al
   14003ba3e:	add    BYTE PTR [rax],al
   14003ba40:	add    BYTE PTR fs:[rbp+0x0],ah
   14003ba44:	sub    eax,0x55004c00
   14003ba49:	add    BYTE PTR [rax],al
   14003ba4b:	add    BYTE PTR [rax],al
   14003ba4d:	add    BYTE PTR [rax],al
   14003ba4f:	add    BYTE PTR [rbp+0x0],ah
   14003ba52:	outs   dx,BYTE PTR ds:[rsi]
   14003ba53:	add    BYTE PTR [rip+0x41004300],ch        # 0x18103fd59
   14003ba59:	add    BYTE PTR [rax],al
   14003ba5b:	add    BYTE PTR [rax],al
   14003ba5d:	add    BYTE PTR [rax],al
   14003ba5f:	add    BYTE PTR [rbp+0x0],ah
   14003ba62:	jae    0x14003ba64
   14003ba64:	sub    eax,0x54004700
   14003ba69:	add    BYTE PTR [rax],al
   14003ba6b:	add    BYTE PTR [rax],al
   14003ba6d:	add    BYTE PTR [rax],al
   14003ba6f:	add    BYTE PTR [rsi+0x0],ah
   14003ba72:	jb     0x14003ba74
   14003ba74:	sub    eax,0x48004300
   14003ba79:	add    BYTE PTR [rax],al
   14003ba7b:	add    BYTE PTR [rax],al
   14003ba7d:	add    BYTE PTR [rax],al
   14003ba7f:	add    BYTE PTR [rax+0x0],ch
   14003ba82:	jb     0x14003ba84
   14003ba84:	sub    eax,0x41004200
   14003ba89:	add    BYTE PTR [rax],al
   14003ba8b:	add    BYTE PTR [rax],al
   14003ba8d:	add    BYTE PTR [rax],al
   14003ba8f:	add    BYTE PTR [rbx+0x0],dh
   14003ba92:	ins    DWORD PTR es:[rdi],dx
   14003ba93:	add    BYTE PTR [rdx+0x0],ch
   14003ba96:	sub    eax,0x4f004e00
   14003ba9b:	add    BYTE PTR [rax],al
   14003ba9d:	add    BYTE PTR [rax],al
   14003ba9f:	add    BYTE PTR [rcx+0x0],ah
   14003baa2:	jb     0x14003baa4
   14003baa4:	sub    eax,0x5a004400
   14003baa9:	add    BYTE PTR [rax],al
   14003baab:	add    BYTE PTR [rax],al
   14003baad:	add    BYTE PTR [rax],al
   14003baaf:	add    BYTE PTR [rdx+0x0],bh
   14003bab2:	push   0x4d002d00
   14003bab7:	add    BYTE PTR [rdi+0x0],cl
   14003baba:	add    BYTE PTR [rax],al
   14003babc:	add    BYTE PTR [rax],al
   14003babe:	add    BYTE PTR [rax],al
   14003bac0:	add    BYTE PTR fs:[rbp+0x0],ah
   14003bac4:	sub    eax,0x49004c00
   14003bac9:	add    BYTE PTR [rax],al
   14003bacb:	add    BYTE PTR [rax],al
   14003bacd:	add    BYTE PTR [rax],al
   14003bacf:	add    BYTE PTR [rbp+0x0],ah
   14003bad2:	outs   dx,BYTE PTR ds:[rsi]
   14003bad3:	add    BYTE PTR [rip+0x5a004e00],ch        # 0x19a0408d9
   14003bad9:	add    BYTE PTR [rax],al
   14003badb:	add    BYTE PTR [rax],al
   14003badd:	add    BYTE PTR [rax],al
   14003badf:	add    BYTE PTR [rbp+0x0],ah
   14003bae2:	jae    0x14003bae4
   14003bae4:	sub    eax,0x52004300
   14003bae9:	add    BYTE PTR [rax],al
   14003baeb:	add    BYTE PTR [rax],al
   14003baed:	add    BYTE PTR [rax],al
   14003baef:	add    BYTE PTR [rsi+0x0],ah
   14003baf2:	jb     0x14003baf4
   14003baf4:	sub    eax,0x55004c00
   14003baf9:	add    BYTE PTR [rax],al
   14003bafb:	add    BYTE PTR [rax],al
   14003bafd:	add    BYTE PTR [rax],al
   14003baff:	add    BYTE PTR [rdx+0x0],ah
   14003bb02:	jae    0x14003bb04
   14003bb04:	sub    eax,0x41004200
   14003bb09:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a104070f
   14003bb0f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003bb13:	add    BYTE PTR [rax],al
   14003bb15:	add    BYTE PTR [rax],al
   14003bb17:	add    BYTE PTR [rbx+0x0],dh
   14003bb1a:	ins    DWORD PTR es:[rdi],dx
   14003bb1b:	add    BYTE PTR [rdx+0x0],ch
   14003bb1e:	sub    eax,0x45005300
   14003bb23:	add    BYTE PTR [rax],al
   14003bb25:	add    BYTE PTR [rax],al
   14003bb27:	add    BYTE PTR [rcx+0x0],ah
   14003bb2a:	jb     0x14003bb2c
   14003bb2c:	sub    eax,0x41004d00
   14003bb31:	add    BYTE PTR [rax],al
   14003bb33:	add    BYTE PTR [rax],al
   14003bb35:	add    BYTE PTR [rax],al
   14003bb37:	add    BYTE PTR [rbp+0x0],ah
   14003bb3a:	outs   dx,BYTE PTR ds:[rsi]
   14003bb3b:	add    BYTE PTR [rip+0x45004900],ch        # 0x185040441
   14003bb41:	add    BYTE PTR [rax],al
   14003bb43:	add    BYTE PTR [rax],al
   14003bb45:	add    BYTE PTR [rax],al
   14003bb47:	add    BYTE PTR [rbp+0x0],ah
   14003bb4a:	jae    0x14003bb4c
   14003bb4c:	sub    eax,0x41005000
   14003bb51:	add    BYTE PTR [rax],al
   14003bb53:	add    BYTE PTR [rax],al
   14003bb55:	add    BYTE PTR [rax],al
   14003bb57:	add    BYTE PTR [rsi+0x0],ah
   14003bb5a:	jb     0x14003bb5c
   14003bb5c:	sub    eax,0x43004d00
   14003bb61:	add    BYTE PTR [rax],al
   14003bb63:	add    BYTE PTR [rax],al
   14003bb65:	add    BYTE PTR [rax],al
   14003bb67:	add    BYTE PTR [rbx+0x0],dh
   14003bb6a:	jb     0x14003bb6c
   14003bb6c:	sub    eax,0x41004200
   14003bb71:	add    BYTE PTR [rip+0x61004c00],ch        # 0x1a1040777
   14003bb77:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003bb7b:	add    BYTE PTR [rax],al
   14003bb7d:	add    BYTE PTR [rax],al
   14003bb7f:	add    BYTE PTR [rbx+0x0],dh
   14003bb82:	ins    DWORD PTR es:[rdi],dx
   14003bb83:	add    BYTE PTR [rcx+0x0],ah
   14003bb86:	sub    eax,0x4f004e00
   14003bb8b:	add    BYTE PTR [rax],al
   14003bb8d:	add    BYTE PTR [rax],al
   14003bb8f:	add    BYTE PTR [rcx+0x0],ah
   14003bb92:	jb     0x14003bb94
   14003bb94:	sub    eax,0x4e005400
   14003bb99:	add    BYTE PTR [rax],al
   14003bb9b:	add    BYTE PTR [rax],al
   14003bb9d:	add    BYTE PTR [rax],al
   14003bb9f:	add    BYTE PTR [rbp+0x0],ah
   14003bba2:	outs   dx,BYTE PTR ds:[rsi]
   14003bba3:	add    BYTE PTR [rip+0x41005a00],ch        # 0x1810415a9
   14003bba9:	add    BYTE PTR [rax],al
   14003bbab:	add    BYTE PTR [rax],al
   14003bbad:	add    BYTE PTR [rax],al
   14003bbaf:	add    BYTE PTR [rbp+0x0],ah
   14003bbb2:	jae    0x14003bbb4
   14003bbb4:	sub    eax,0x4f004400
   14003bbb9:	add    BYTE PTR [rax],al
   14003bbbb:	add    BYTE PTR [rax],al
   14003bbbd:	add    BYTE PTR [rax],al
   14003bbbf:	add    BYTE PTR [rbx+0x0],dh
   14003bbc2:	jb     0x14003bbc4
   14003bbc4:	sub    eax,0x41004200
   14003bbc9:	add    BYTE PTR [rip+0x79004300],ch        # 0x1b903fecf
   14003bbcf:	add    BYTE PTR [rdx+0x0],dh
   14003bbd2:	ins    BYTE PTR es:[rdi],dx
   14003bbd3:	add    BYTE PTR [rax],al
   14003bbd5:	add    BYTE PTR [rax],al
   14003bbd7:	add    BYTE PTR [rbx+0x0],dh
   14003bbda:	ins    DWORD PTR es:[rdi],dx
   14003bbdb:	add    BYTE PTR [rcx+0x0],ah
   14003bbde:	sub    eax,0x45005300
   14003bbe3:	add    BYTE PTR [rax],al
   14003bbe5:	add    BYTE PTR [rax],al
   14003bbe7:	add    BYTE PTR [rcx+0x0],ah
   14003bbea:	jb     0x14003bbec
   14003bbec:	sub    eax,0x4d004f00
   14003bbf1:	add    BYTE PTR [rax],al
   14003bbf3:	add    BYTE PTR [rax],al
   14003bbf5:	add    BYTE PTR [rax],al
   14003bbf7:	add    BYTE PTR [rbp+0x0],ah
   14003bbfa:	outs   dx,BYTE PTR ds:[rsi]
   14003bbfb:	add    BYTE PTR [rip+0x4d004a00],ch        # 0x18d040601
   14003bc01:	add    BYTE PTR [rax],al
   14003bc03:	add    BYTE PTR [rax],al
   14003bc05:	add    BYTE PTR [rax],al
   14003bc07:	add    BYTE PTR [rbp+0x0],ah
   14003bc0a:	jae    0x14003bc0c
   14003bc0c:	sub    eax,0x45005600
   14003bc11:	add    BYTE PTR [rax],al
   14003bc13:	add    BYTE PTR [rax],al
   14003bc15:	add    BYTE PTR [rax],al
   14003bc17:	add    BYTE PTR [rbx+0x0],dh
   14003bc1a:	ins    DWORD PTR es:[rdi],dx
   14003bc1b:	add    BYTE PTR [rbx+0x0],dh
   14003bc1e:	sub    eax,0x49004600
   14003bc23:	add    BYTE PTR [rax],al
   14003bc25:	add    BYTE PTR [rax],al
   14003bc27:	add    BYTE PTR [rcx+0x0],ah
   14003bc2a:	jb     0x14003bc2c
   14003bc2c:	sub    eax,0x45005900
   14003bc31:	add    BYTE PTR [rax],al
   14003bc33:	add    BYTE PTR [rax],al
   14003bc35:	add    BYTE PTR [rax],al
   14003bc37:	add    BYTE PTR [rbp+0x0],ah
   14003bc3a:	outs   dx,BYTE PTR ds:[rsi]
   14003bc3b:	add    BYTE PTR [rip+0x42004300],ch        # 0x18203ff41
   14003bc41:	add    BYTE PTR [rax],al
   14003bc43:	add    BYTE PTR [rax],al
   14003bc45:	add    BYTE PTR [rax],al
   14003bc47:	add    BYTE PTR [rbp+0x0],ah
   14003bc4a:	jae    0x14003bc4c
   14003bc4c:	sub    eax,0x4f004300
   14003bc51:	add    BYTE PTR [rax],al
   14003bc53:	add    BYTE PTR [rax],al
   14003bc55:	add    BYTE PTR [rax],al
   14003bc57:	add    BYTE PTR [rbx+0x0],dh
   14003bc5a:	ins    DWORD PTR es:[rdi],dx
   14003bc5b:	add    BYTE PTR [rsi+0x0],ch
   14003bc5e:	sub    eax,0x49004600
   14003bc63:	add    BYTE PTR [rax],al
   14003bc65:	add    BYTE PTR [rax],al
   14003bc67:	add    BYTE PTR [rcx+0x0],ah
   14003bc6a:	jb     0x14003bc6c
   14003bc6c:	sub    eax,0x59005300
   14003bc71:	add    BYTE PTR [rax],al
   14003bc73:	add    BYTE PTR [rax],al
   14003bc75:	add    BYTE PTR [rax],al
   14003bc77:	add    BYTE PTR [rbp+0x0],ah
   14003bc7a:	outs   dx,BYTE PTR ds:[rsi]
   14003bc7b:	add    BYTE PTR [rip+0x5a004200],ch        # 0x19a03fe81
   14003bc81:	add    BYTE PTR [rax],al
   14003bc83:	add    BYTE PTR [rax],al
   14003bc85:	add    BYTE PTR [rax],al
   14003bc87:	add    BYTE PTR [rbp+0x0],ah
   14003bc8a:	jae    0x14003bc8c
   14003bc8c:	sub    eax,0x45005000
   14003bc91:	add    BYTE PTR [rax],al
   14003bc93:	add    BYTE PTR [rax],al
   14003bc95:	add    BYTE PTR [rax],al
   14003bc97:	add    BYTE PTR [rcx+0x0],ah
   14003bc9a:	jb     0x14003bc9c
   14003bc9c:	sub    eax,0x4f004a00
   14003bca1:	add    BYTE PTR [rax],al
   14003bca3:	add    BYTE PTR [rax],al
   14003bca5:	add    BYTE PTR [rax],al
   14003bca7:	add    BYTE PTR [rbp+0x0],ah
   14003bcaa:	outs   dx,BYTE PTR ds:[rsi]
   14003bcab:	add    BYTE PTR [rip+0x54005400],ch        # 0x1940410b1
   14003bcb1:	add    BYTE PTR [rax],al
   14003bcb3:	add    BYTE PTR [rax],al
   14003bcb5:	add    BYTE PTR [rax],al
   14003bcb7:	add    BYTE PTR [rbp+0x0],ah
   14003bcba:	jae    0x14003bcbc
   14003bcbc:	sub    eax,0x52004100
   14003bcc1:	add    BYTE PTR [rax],al
   14003bcc3:	add    BYTE PTR [rax],al
   14003bcc5:	add    BYTE PTR [rax],al
   14003bcc7:	add    BYTE PTR [rcx+0x0],ah
   14003bcca:	jb     0x14003bccc
   14003bccc:	sub    eax,0x42004c00
   14003bcd1:	add    BYTE PTR [rax],al
   14003bcd3:	add    BYTE PTR [rax],al
   14003bcd5:	add    BYTE PTR [rax],al
   14003bcd7:	add    BYTE PTR [rbp+0x0],ah
   14003bcda:	outs   dx,BYTE PTR ds:[rsi]
   14003bcdb:	add    BYTE PTR [rip+0x57005a00],ch        # 0x1970416e1
   14003bce1:	add    BYTE PTR [rax],al
   14003bce3:	add    BYTE PTR [rax],al
   14003bce5:	add    BYTE PTR [rax],al
   14003bce7:	add    BYTE PTR [rbp+0x0],ah
   14003bcea:	jae    0x14003bcec
   14003bcec:	sub    eax,0x43004500
   14003bcf1:	add    BYTE PTR [rax],al
   14003bcf3:	add    BYTE PTR [rax],al
   14003bcf5:	add    BYTE PTR [rax],al
   14003bcf7:	add    BYTE PTR [rcx+0x0],ah
   14003bcfa:	jb     0x14003bcfc
   14003bcfc:	sub    eax,0x57004b00
   14003bd01:	add    BYTE PTR [rax],al
   14003bd03:	add    BYTE PTR [rax],al
   14003bd05:	add    BYTE PTR [rax],al
   14003bd07:	add    BYTE PTR [rbp+0x0],ah
   14003bd0a:	outs   dx,BYTE PTR ds:[rsi]
   14003bd0b:	add    BYTE PTR [rip+0x48005000],ch        # 0x188040d11
   14003bd11:	add    BYTE PTR [rax],al
   14003bd13:	add    BYTE PTR [rax],al
   14003bd15:	add    BYTE PTR [rax],al
   14003bd17:	add    BYTE PTR [rbp+0x0],ah
   14003bd1a:	jae    0x14003bd1c
   14003bd1c:	sub    eax,0x4c004300
   14003bd21:	add    BYTE PTR [rax],al
   14003bd23:	add    BYTE PTR [rax],al
   14003bd25:	add    BYTE PTR [rax],al
   14003bd27:	add    BYTE PTR [rcx+0x0],ah
   14003bd2a:	jb     0x14003bd2c
   14003bd2c:	sub    eax,0x45004100
   14003bd31:	add    BYTE PTR [rax],al
   14003bd33:	add    BYTE PTR [rax],al
   14003bd35:	add    BYTE PTR [rax],al
   14003bd37:	add    BYTE PTR [rbp+0x0],ah
   14003bd3a:	jae    0x14003bd3c
   14003bd3c:	sub    eax,0x59005500
   14003bd41:	add    BYTE PTR [rax],al
   14003bd43:	add    BYTE PTR [rax],al
   14003bd45:	add    BYTE PTR [rax],al
   14003bd47:	add    BYTE PTR [rcx+0x0],ah
   14003bd4a:	jb     0x14003bd4c
   14003bd4c:	sub    eax,0x48004200
   14003bd51:	add    BYTE PTR [rax],al
   14003bd53:	add    BYTE PTR [rax],al
   14003bd55:	add    BYTE PTR [rax],al
   14003bd57:	add    BYTE PTR [rbp+0x0],ah
   14003bd5a:	jae    0x14003bd5c
   14003bd5c:	sub    eax,0x59005000
   14003bd61:	add    BYTE PTR [rax],al
   14003bd63:	add    BYTE PTR [rax],al
   14003bd65:	add    BYTE PTR [rax],al
   14003bd67:	add    BYTE PTR [rcx+0x0],ah
   14003bd6a:	jb     0x14003bd6c
   14003bd6c:	sub    eax,0x41005100
   14003bd71:	add    BYTE PTR [rax],al
   14003bd73:	add    BYTE PTR [rax],al
   14003bd75:	add    BYTE PTR [rax],al
   14003bd77:	add    BYTE PTR [rbp+0x0],ah
   14003bd7a:	jae    0x14003bd7c
   14003bd7c:	sub    eax,0x4f004200
   14003bd81:	add    BYTE PTR [rax],al
   14003bd83:	add    BYTE PTR [rax],al
   14003bd85:	add    BYTE PTR [rax],al
   14003bd87:	add    BYTE PTR [rbp+0x0],ah
   14003bd8a:	jae    0x14003bd8c
   14003bd8c:	sub    eax,0x56005300
   14003bd91:	add    BYTE PTR [rax],al
   14003bd93:	add    BYTE PTR [rax],al
   14003bd95:	add    BYTE PTR [rax],al
   14003bd97:	add    BYTE PTR [rbp+0x0],ah
   14003bd9a:	jae    0x14003bd9c
   14003bd9c:	sub    eax,0x4e004800
   14003bda1:	add    BYTE PTR [rax],al
   14003bda3:	add    BYTE PTR [rax],al
   14003bda5:	add    BYTE PTR [rax],al
   14003bda7:	add    BYTE PTR [rbp+0x0],ah
   14003bdaa:	jae    0x14003bdac
   14003bdac:	sub    eax,0x49004e00
   14003bdb1:	add    BYTE PTR [rax],al
   14003bdb3:	add    BYTE PTR [rax],al
   14003bdb5:	add    BYTE PTR [rax],al
   14003bdb7:	add    BYTE PTR [rbp+0x0],ah
   14003bdba:	jae    0x14003bdbc
   14003bdbc:	sub    eax,0x52005000
   14003bdc1:	add    BYTE PTR [rax],al
   14003bdc3:	add    BYTE PTR [rax],al
   14003bdc5:	add    BYTE PTR [rax],al
   14003bdc7:	add    BYTE PTR [rdx+0x0],bh
   14003bdca:	push   0x43002d00
   14003bdcf:	add    BYTE PTR [rax+0x0],cl
   14003bdd2:	push   rsp
   14003bdd3:	add    BYTE PTR [rax],al
   14003bdd5:	add    BYTE PTR [rax],al
   14003bdd7:	add    BYTE PTR [rbx+0x0],dh
   14003bdda:	jb     0x14003bddc
   14003bddc:	add    BYTE PTR [rax],al
   14003bdde:	add    BYTE PTR [rax],al
   14003bde0:	mov    esp,0x140037b
   14003bde5:	add    BYTE PTR [rax],al
   14003bde7:	add    BYTE PTR [rdx+0x0],al
   14003bdea:	add    BYTE PTR [rax],al
   14003bdec:	add    BYTE PTR [rax],al
   14003bdee:	add    BYTE PTR [rax],al
   14003bdf0:	xor    BYTE PTR [rbx+0x14003],dh
   14003bdf6:	add    BYTE PTR [rax],al
   14003bdf8:	sub    al,0x0
   14003bdfa:	add    BYTE PTR [rax],al
   14003bdfc:	add    BYTE PTR [rax],al
   14003bdfe:	add    BYTE PTR [rax],al
   14003be00:	and    ah,cl
   14003be02:	add    eax,DWORD PTR [rax+0x1]
   14003be05:	add    BYTE PTR [rax],al
   14003be07:	add    BYTE PTR [rcx+0x0],dh
   14003be0a:	add    BYTE PTR [rax],al
   14003be0c:	add    BYTE PTR [rax],al
   14003be0e:	add    BYTE PTR [rax],al
   14003be10:	shl    BYTE PTR [rcx+0x14003],1
	...
   14003be1e:	add    BYTE PTR [rax],al
   14003be20:	xor    ah,cl
   14003be22:	add    eax,DWORD PTR [rax+0x1]
   14003be25:	add    BYTE PTR [rax],al
   14003be27:	add    al,bl
   14003be29:	add    BYTE PTR [rax],al
   14003be2b:	add    BYTE PTR [rax],al
   14003be2d:	add    BYTE PTR [rax],al
   14003be2f:	add    BYTE PTR [rax-0x34],al
   14003be32:	add    eax,DWORD PTR [rax+0x1]
   14003be35:	add    BYTE PTR [rax],al
   14003be37:	add    dl,bl
   14003be39:	add    BYTE PTR [rax],al
   14003be3b:	add    BYTE PTR [rax],al
   14003be3d:	add    BYTE PTR [rax],al
   14003be3f:	add    BYTE PTR [rax-0x34],dl
   14003be42:	add    eax,DWORD PTR [rax+0x1]
   14003be45:	add    BYTE PTR [rax],al
   14003be47:	add    BYTE PTR [rcx+0x0],dh
   14003be4d:	add    BYTE PTR [rax],al
   14003be4f:	add    BYTE PTR [rax-0x34],ah
   14003be52:	add    eax,DWORD PTR [rax+0x1]
   14003be55:	add    BYTE PTR [rax],al
   14003be57:	add    BYTE PTR [rax+0x0],ah
   14003be5d:	add    BYTE PTR [rax],al
   14003be5f:	add    BYTE PTR [rax-0x34],dh
   14003be62:	add    eax,DWORD PTR [rax+0x1]
   14003be65:	add    BYTE PTR [rax],al
   14003be67:	add    BYTE PTR [rdi+0x0],cl
   14003be6d:	add    BYTE PTR [rax],al
   14003be6f:	add    BYTE PTR [rax+0x14003cc],al
   14003be75:	add    BYTE PTR [rax],al
   14003be77:	add    bh,cl
   14003be79:	add    BYTE PTR [rax],al
   14003be7b:	add    BYTE PTR [rax],al
   14003be7d:	add    BYTE PTR [rax],al
   14003be7f:	add    BYTE PTR [rax+0x14003cc],dl
   14003be85:	add    BYTE PTR [rax],al
   14003be87:	add    ch,dl
   14003be89:	add    BYTE PTR [rax],al
   14003be8b:	add    BYTE PTR [rax],al
   14003be8d:	add    BYTE PTR [rax],al
   14003be8f:	add    BYTE PTR [rax+0x14003cc],ah
   14003be95:	add    BYTE PTR [rax],al
   14003be97:	add    dl,dl
   14003be99:	add    BYTE PTR [rax],al
   14003be9b:	add    BYTE PTR [rax],al
   14003be9d:	add    BYTE PTR [rax],al
   14003be9f:	add    BYTE PTR [rax+0x14003cc],dh
   14003bea5:	add    BYTE PTR [rax],al
   14003bea7:	add    BYTE PTR [rcx+0x0],ch
   14003bead:	add    BYTE PTR [rax],al
   14003beaf:	add    al,al
   14003beb1:	int3   
   14003beb2:	add    eax,DWORD PTR [rax+0x1]
   14003beb5:	add    BYTE PTR [rax],al
   14003beb7:	add    BYTE PTR [rcx+0x0],bh
   14003bebd:	add    BYTE PTR [rax],al
   14003bebf:	add    al,dl
   14003bec1:	int3   
   14003bec2:	add    eax,DWORD PTR [rax+0x1]
   14003bec5:	add    BYTE PTR [rax],al
   14003bec7:	add    ah,al
   14003bec9:	add    BYTE PTR [rax],al
   14003becb:	add    BYTE PTR [rax],al
   14003becd:	add    BYTE PTR [rax],al
   14003becf:	add    al,ah
   14003bed1:	int3   
   14003bed2:	add    eax,DWORD PTR [rax+0x1]
   14003bed5:	add    BYTE PTR [rax],al
   14003bed7:	add    ah,bl
   14003bed9:	add    BYTE PTR [rax],al
   14003bedb:	add    BYTE PTR [rax],al
   14003bedd:	add    BYTE PTR [rax],al
   14003bedf:	add    al,dh
   14003bee1:	int3   
   14003bee2:	add    eax,DWORD PTR [rax+0x1]
   14003bee5:	add    BYTE PTR [rax],al
   14003bee7:	add    BYTE PTR [rbx+0x0],al
   14003beea:	add    BYTE PTR [rax],al
   14003beec:	add    BYTE PTR [rax],al
   14003beee:	add    BYTE PTR [rax],al
   14003bef0:	add    ch,cl
   14003bef2:	add    eax,DWORD PTR [rax+0x1]
   14003bef5:	add    BYTE PTR [rax],al
   14003bef7:	add    ah,cl
   14003bef9:	add    BYTE PTR [rax],al
   14003befb:	add    BYTE PTR [rax],al
   14003befd:	add    BYTE PTR [rax],al
   14003beff:	add    BYTE PTR [rax],dl
   14003bf01:	int    0x3
   14003bf03:	rex add DWORD PTR [rax],eax
   14003bf06:	add    BYTE PTR [rax],al
   14003bf08:	mov    edi,0x0
   14003bf0d:	add    BYTE PTR [rax],al
   14003bf0f:	add    BYTE PTR [rax],ah
   14003bf11:	int    0x3
   14003bf13:	rex add DWORD PTR [rax],eax
   14003bf16:	add    BYTE PTR [rax],al
   14003bf18:	enter  0x0,0x0
   14003bf1c:	add    BYTE PTR [rax],al
   14003bf1e:	add    BYTE PTR [rax],al
   14003bf20:	sbb    BYTE PTR [rbx+0x14003],dh
   14003bf26:	add    BYTE PTR [rax],al
   14003bf28:	sub    DWORD PTR [rax],eax
   14003bf2a:	add    BYTE PTR [rax],al
   14003bf2c:	add    BYTE PTR [rax],al
   14003bf2e:	add    BYTE PTR [rax],al
   14003bf30:	xor    ch,cl
   14003bf32:	add    eax,DWORD PTR [rax+0x1]
   14003bf35:	add    BYTE PTR [rax],al
   14003bf37:	add    BYTE PTR [rbx+0x0],bl
   14003bf3d:	add    BYTE PTR [rax],al
   14003bf3f:	add    BYTE PTR [rax-0x33],cl
   14003bf42:	add    eax,DWORD PTR [rax+0x1]
   14003bf45:	add    BYTE PTR [rax],al
   14003bf47:	add    BYTE PTR [rbx+0x0],ch
   14003bf4a:	add    BYTE PTR [rax],al
   14003bf4c:	add    BYTE PTR [rax],al
   14003bf4e:	add    BYTE PTR [rax],al
   14003bf50:	fdiv   DWORD PTR [rdx+0x14003]
   14003bf56:	add    BYTE PTR [rax],al
   14003bf58:	and    DWORD PTR [rax],eax
   14003bf5a:	add    BYTE PTR [rax],al
   14003bf5c:	add    BYTE PTR [rax],al
   14003bf5e:	add    BYTE PTR [rax],al
   14003bf60:	(bad)  
   14003bf61:	int    0x3
   14003bf63:	rex add DWORD PTR [rax],eax
   14003bf66:	add    BYTE PTR [rax],al
   14003bf68:	movsxd eax,DWORD PTR [rax]
   14003bf6a:	add    BYTE PTR [rax],al
   14003bf6c:	add    BYTE PTR [rax],al
   14003bf6e:	add    BYTE PTR [rax],al
   14003bf70:	fdiv   DWORD PTR [rcx+0x14003]
   14003bf76:	add    BYTE PTR [rax],al
   14003bf78:	add    DWORD PTR [rax],eax
   14003bf7a:	add    BYTE PTR [rax],al
   14003bf7c:	add    BYTE PTR [rax],al
   14003bf7e:	add    BYTE PTR [rax],al
   14003bf80:	jo     0x14003bf4f
   14003bf82:	add    eax,DWORD PTR [rax+0x1]
   14003bf85:	add    BYTE PTR [rax],al
   14003bf87:	add    BYTE PTR [rax+rax*1+0x0],al
   14003bf8b:	add    BYTE PTR [rax],al
   14003bf8d:	add    BYTE PTR [rax],al
   14003bf8f:	add    BYTE PTR [rax+0x14003cd],al
   14003bf95:	add    BYTE PTR [rax],al
   14003bf97:	add    BYTE PTR [rbp+0x0],bh
   14003bf9a:	add    BYTE PTR [rax],al
   14003bf9c:	add    BYTE PTR [rax],al
   14003bf9e:	add    BYTE PTR [rax],al
   14003bfa0:	nop
   14003bfa1:	int    0x3
   14003bfa3:	rex add DWORD PTR [rax],eax
   14003bfa6:	add    BYTE PTR [rax],al
   14003bfa8:	mov    bh,0x0
   14003bfaa:	add    BYTE PTR [rax],al
   14003bfac:	add    BYTE PTR [rax],al
   14003bfae:	add    BYTE PTR [rax],al
   14003bfb0:	loopne 0x14003bf63
   14003bfb2:	add    eax,DWORD PTR [rax+0x1]
   14003bfb5:	add    BYTE PTR [rax],al
   14003bfb7:	add    BYTE PTR [rdx],al
   14003bfb9:	add    BYTE PTR [rax],al
   14003bfbb:	add    BYTE PTR [rax],al
   14003bfbd:	add    BYTE PTR [rax],al
   14003bfbf:	add    BYTE PTR [rax+0x14003cd],ch
   14003bfc5:	add    BYTE PTR [rax],al
   14003bfc7:	add    BYTE PTR [rbp+0x0],al
   14003bfca:	add    BYTE PTR [rax],al
   14003bfcc:	add    BYTE PTR [rax],al
   14003bfce:	add    BYTE PTR [rax],al
   14003bfd0:	clc    
   14003bfd1:	mov    cl,0x3
   14003bfd3:	rex add DWORD PTR [rax],eax
   14003bfd6:	add    BYTE PTR [rax],al
   14003bfd8:	add    al,0x0
   14003bfda:	add    BYTE PTR [rax],al
   14003bfdc:	add    BYTE PTR [rax],al
   14003bfde:	add    BYTE PTR [rax],al
   14003bfe0:	mov    eax,0x14003cd
   14003bfe5:	add    BYTE PTR [rax],al
   14003bfe7:	add    BYTE PTR [rdi+0x0],al
   14003bfea:	add    BYTE PTR [rax],al
   14003bfec:	add    BYTE PTR [rax],al
   14003bfee:	add    BYTE PTR [rax],al
   14003bff0:	enter  0x3cd,0x40
   14003bff4:	add    DWORD PTR [rax],eax
   14003bff6:	add    BYTE PTR [rax],al
   14003bff8:	xchg   DWORD PTR [rax],eax
   14003bffa:	add    BYTE PTR [rax],al
   14003bffc:	add    BYTE PTR [rax],al
   14003bffe:	add    BYTE PTR [rax],al
   14003c000:	add    BYTE PTR [rdx+0x14003],dh
   14003c006:	add    BYTE PTR [rax],al
   14003c008:	add    eax,0x0
   14003c00d:	add    BYTE PTR [rax],al
   14003c00f:	add    al,bl
   14003c011:	int    0x3
   14003c013:	rex add DWORD PTR [rax],eax
   14003c016:	add    BYTE PTR [rax],al
   14003c018:	rex.W add BYTE PTR [rax],al
   14003c01b:	add    BYTE PTR [rax],al
   14003c01d:	add    BYTE PTR [rax],al
   14003c01f:	add    BYTE PTR [rax],cl
   14003c021:	mov    dl,0x3
   14003c023:	rex add DWORD PTR [rax],eax
   14003c026:	add    BYTE PTR [rax],al
   14003c028:	(bad)  
   14003c029:	add    BYTE PTR [rax],al
   14003c02b:	add    BYTE PTR [rax],al
   14003c02d:	add    BYTE PTR [rax],al
   14003c02f:	add    al,ch
   14003c031:	int    0x3
   14003c033:	rex add DWORD PTR [rax],eax
   14003c036:	add    BYTE PTR [rax],al
   14003c038:	movabs ds:0xf800000000000000,al
   14003c041:	int    0x3
   14003c043:	rex add DWORD PTR [rax],eax
   14003c046:	add    BYTE PTR [rax],al
   14003c048:	xchg   ecx,eax
   14003c049:	add    BYTE PTR [rax],al
   14003c04b:	add    BYTE PTR [rax],al
   14003c04d:	add    BYTE PTR [rax],al
   14003c04f:	add    BYTE PTR [rax],cl
   14003c051:	(bad)  
   14003c052:	add    eax,DWORD PTR [rax+0x1]
   14003c055:	add    BYTE PTR [rax],al
   14003c057:	add    BYTE PTR [rcx+0x0],cl
   14003c05a:	add    BYTE PTR [rax],al
   14003c05c:	add    BYTE PTR [rax],al
   14003c05e:	add    BYTE PTR [rax],al
   14003c060:	sbb    dh,cl
   14003c062:	add    eax,DWORD PTR [rax+0x1]
   14003c065:	add    BYTE PTR [rax],al
   14003c067:	add    BYTE PTR [rbx+0x0],dh
   14003c06d:	add    BYTE PTR [rax],al
   14003c06f:	add    BYTE PTR [rax],ch
   14003c071:	(bad)  
   14003c072:	add    eax,DWORD PTR [rax+0x1]
   14003c075:	add    BYTE PTR [rax],al
   14003c077:	add    BYTE PTR [rbx+0x0],ch
   14003c07d:	add    BYTE PTR [rax],al
   14003c07f:	add    al,bl
   14003c081:	mov    bl,0x3
   14003c083:	rex add DWORD PTR [rax],eax
   14003c086:	add    BYTE PTR [rax],al
   14003c088:	add    BYTE PTR [r8],al
   14003c08b:	add    BYTE PTR [rax],al
   14003c08d:	add    BYTE PTR [rax],al
   14003c08f:	add    BYTE PTR [rax],bh
   14003c091:	(bad)  
   14003c092:	add    eax,DWORD PTR [rax+0x1]
   14003c095:	add    BYTE PTR [rax],al
   14003c097:	add    BYTE PTR [rbx+0x0],cl
   14003c09d:	add    BYTE PTR [rax],al
   14003c09f:	add    BYTE PTR [rax],dl
   14003c0a1:	mov    dl,0x3
   14003c0a3:	rex add DWORD PTR [rax],eax
   14003c0a6:	add    BYTE PTR [rax],al
   14003c0a8:	(bad)  
   14003c0a9:	add    BYTE PTR [rax],al
   14003c0ab:	add    BYTE PTR [rax],al
   14003c0ad:	add    BYTE PTR [rax],al
   14003c0af:	add    BYTE PTR [rax-0x32],cl
   14003c0b2:	add    eax,DWORD PTR [rax+0x1]
   14003c0b5:	add    BYTE PTR [rax],al
   14003c0b7:	add    BYTE PTR [rdx+0x0],cl
   14003c0ba:	add    BYTE PTR [rax],al
   14003c0bc:	add    BYTE PTR [rax],al
   14003c0be:	add    BYTE PTR [rax],al
   14003c0c0:	sbb    BYTE PTR [rdx+0x14003],dh
   14003c0c6:	add    BYTE PTR [rax],al
   14003c0c8:	or     BYTE PTR [rax],al
   14003c0ca:	add    BYTE PTR [rax],al
   14003c0cc:	add    BYTE PTR [rax],al
   14003c0ce:	add    BYTE PTR [rax],al
   14003c0d0:	pop    rax
   14003c0d1:	(bad)  
   14003c0d2:	add    eax,DWORD PTR [rax+0x1]
   14003c0d5:	add    BYTE PTR [rax],al
   14003c0d7:	add    BYTE PTR [rbx+0x0],ah
   14003c0dd:	add    BYTE PTR [rax],al
   14003c0df:	add    BYTE PTR [rax-0x32],ch
   14003c0e2:	add    eax,DWORD PTR [rax+0x1]
   14003c0e5:	add    BYTE PTR [rax],al
   14003c0e7:	add    ch,cl
   14003c0e9:	add    BYTE PTR [rax],al
   14003c0eb:	add    BYTE PTR [rax],al
   14003c0ed:	add    BYTE PTR [rax],al
   14003c0ef:	add    BYTE PTR [rax-0x32],bh
   14003c0f2:	add    eax,DWORD PTR [rax+0x1]
   14003c0f5:	add    BYTE PTR [rax],al
   14003c0f7:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003c0fe:	add    BYTE PTR [rax],al
   14003c100:	mov    dh,cl
   14003c102:	add    eax,DWORD PTR [rax+0x1]
   14003c105:	add    BYTE PTR [rax],al
   14003c107:	add    cl,cl
   14003c109:	add    BYTE PTR [rax],al
   14003c10b:	add    BYTE PTR [rax],al
   14003c10d:	add    BYTE PTR [rax],al
   14003c10f:	add    BYTE PTR [rax+0x14003ce],bl
   14003c115:	add    BYTE PTR [rax],al
   14003c117:	add    BYTE PTR [rdx+0x0],dl
   14003c11d:	add    BYTE PTR [rax],al
   14003c11f:	add    BYTE PTR [rax+0x14003ce],ch
   14003c125:	add    BYTE PTR [rax],al
   14003c127:	add    BYTE PTR [rdx+0x0],bh
   14003c12d:	add    BYTE PTR [rax],al
   14003c12f:	add    BYTE PTR [rax+0x14003ce],bh
   14003c135:	add    BYTE PTR [rax],al
   14003c137:	add    ch,al
   14003c139:	add    BYTE PTR [rax],al
   14003c13b:	add    BYTE PTR [rax],al
   14003c13d:	add    BYTE PTR [rax],al
   14003c13f:	add    al,cl
   14003c141:	(bad)  
   14003c142:	add    eax,DWORD PTR [rax+0x1]
   14003c145:	add    BYTE PTR [rax],al
   14003c147:	add    BYTE PTR [rax+rax*1+0x0],dh
   14003c14e:	add    BYTE PTR [rax],al
   14003c150:	fmul   st,st(6)
   14003c152:	add    eax,DWORD PTR [rax+0x1]
   14003c155:	add    BYTE PTR [rax],al
   14003c157:	add    dh,dl
   14003c159:	add    BYTE PTR [rax],al
   14003c15b:	add    BYTE PTR [rax],al
   14003c15d:	add    BYTE PTR [rax],al
   14003c15f:	add    al,ch
   14003c161:	(bad)  
   14003c162:	add    eax,DWORD PTR [rax+0x1]
   14003c165:	add    BYTE PTR [rax],al
   14003c167:	add    al,dl
   14003c169:	add    BYTE PTR [rax],al
   14003c16b:	add    BYTE PTR [rax],al
   14003c16d:	add    BYTE PTR [rax],al
   14003c16f:	add    al,bh
   14003c171:	(bad)  
   14003c172:	add    eax,DWORD PTR [rax+0x1]
   14003c175:	add    BYTE PTR [rax],al
   14003c177:	add    BYTE PTR [rbx+0x0],cl
   14003c17a:	add    BYTE PTR [rax],al
   14003c17c:	add    BYTE PTR [rax],al
   14003c17e:	add    BYTE PTR [rax],al
   14003c180:	or     bh,cl
   14003c182:	add    eax,DWORD PTR [rax+0x1]
   14003c185:	add    BYTE PTR [rax],al
   14003c187:	add    al,al
   14003c189:	add    BYTE PTR [rax],al
   14003c18b:	add    BYTE PTR [rax],al
   14003c18d:	add    BYTE PTR [rax],al
   14003c18f:	add    BYTE PTR [rax],bl
   14003c191:	iret   
   14003c192:	add    eax,DWORD PTR [rax+0x1]
   14003c195:	add    BYTE PTR [rax],al
   14003c197:	add    bl,dl
   14003c199:	add    BYTE PTR [rax],al
   14003c19b:	add    BYTE PTR [rax],al
   14003c19d:	add    BYTE PTR [rax],al
   14003c19f:	add    BYTE PTR [rax],ah
   14003c1a1:	mov    dl,0x3
   14003c1a3:	rex add DWORD PTR [rax],eax
   14003c1a6:	add    BYTE PTR [rax],al
   14003c1a8:	or     DWORD PTR [rax],eax
   14003c1aa:	add    BYTE PTR [rax],al
   14003c1ac:	add    BYTE PTR [rax],al
   14003c1ae:	add    BYTE PTR [rax],al
   14003c1b0:	sub    bh,cl
   14003c1b2:	add    eax,DWORD PTR [rax+0x1]
   14003c1b5:	add    BYTE PTR [rax],al
   14003c1b7:	add    cl,dl
   14003c1b9:	add    BYTE PTR [rax],al
   14003c1bb:	add    BYTE PTR [rax],al
   14003c1bd:	add    BYTE PTR [rax],al
   14003c1bf:	add    BYTE PTR [rax],bh
   14003c1c1:	iret   
   14003c1c2:	add    eax,DWORD PTR [rax+0x1]
   14003c1c5:	add    BYTE PTR [rax],al
   14003c1c7:	add    ch,bl
   14003c1c9:	add    BYTE PTR [rax],al
   14003c1cb:	add    BYTE PTR [rax],al
   14003c1cd:	add    BYTE PTR [rax],al
   14003c1cf:	add    BYTE PTR [rax-0x31],cl
   14003c1d2:	add    eax,DWORD PTR [rax+0x1]
   14003c1d5:	add    BYTE PTR [rax],al
   14003c1d7:	add    bh,dl
   14003c1d9:	add    BYTE PTR [rax],al
   14003c1db:	add    BYTE PTR [rax],al
   14003c1dd:	add    BYTE PTR [rax],al
   14003c1df:	add    BYTE PTR [rax-0x31],bl
   14003c1e2:	add    eax,DWORD PTR [rax+0x1]
   14003c1e5:	add    BYTE PTR [rax],al
   14003c1e7:	add    dl,cl
   14003c1e9:	add    BYTE PTR [rax],al
   14003c1eb:	add    BYTE PTR [rax],al
   14003c1ed:	add    BYTE PTR [rax],al
   14003c1ef:	add    BYTE PTR [rax-0x31],ch
   14003c1f2:	add    eax,DWORD PTR [rax+0x1]
   14003c1f5:	add    BYTE PTR [rax],al
   14003c1f7:	add    BYTE PTR [rbp+0x0],dh
   14003c1fd:	add    BYTE PTR [rax],al
   14003c1ff:	add    BYTE PTR [rax-0x31],bh
   14003c202:	add    eax,DWORD PTR [rax+0x1]
   14003c205:	add    BYTE PTR [rax],al
   14003c207:	add    cl,al
   14003c209:	add    BYTE PTR [rax],al
   14003c20b:	add    BYTE PTR [rax],al
   14003c20d:	add    BYTE PTR [rax],al
   14003c20f:	add    BYTE PTR [rax+0x14003cf],cl
   14003c215:	add    BYTE PTR [rax],al
   14003c217:	add    ah,dl
   14003c219:	add    BYTE PTR [rax],al
   14003c21b:	add    BYTE PTR [rax],al
   14003c21d:	add    BYTE PTR [rax],al
   14003c21f:	add    BYTE PTR [rax+0x14003cf],bl
   14003c225:	add    BYTE PTR [rax],al
   14003c227:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003c22e:	add    BYTE PTR [rax],al
   14003c230:	test   al,0xcf
   14003c232:	add    eax,DWORD PTR [rax+0x1]
   14003c235:	add    BYTE PTR [rax],al
   14003c237:	add    BYTE PTR [rbp+0x0],ch
   14003c23d:	add    BYTE PTR [rax],al
   14003c23f:	add    BYTE PTR [rax+0x14003cf],bh
   14003c245:	add    BYTE PTR [rax],al
   14003c247:	add    bh,bl
   14003c249:	add    BYTE PTR [rax],al
   14003c24b:	add    BYTE PTR [rax],al
   14003c24d:	add    BYTE PTR [rax],al
   14003c24f:	add    al,cl
   14003c251:	iret   
   14003c252:	add    eax,DWORD PTR [rax+0x1]
   14003c255:	add    BYTE PTR [rax],al
   14003c257:	add    BYTE PTR [rbx+0x0],dl
   14003c25d:	add    BYTE PTR [rax],al
   14003c25f:	add    al,bl
   14003c261:	iret   
   14003c262:	add    eax,DWORD PTR [rax+0x1]
   14003c265:	add    BYTE PTR [rax],al
   14003c267:	add    al,ah
   14003c269:	add    BYTE PTR [rax],al
   14003c26b:	add    BYTE PTR [rax],al
   14003c26d:	add    BYTE PTR [rax],al
   14003c26f:	add    al,ch
   14003c271:	iret   
   14003c272:	add    eax,DWORD PTR [rax+0x1]
   14003c275:	add    BYTE PTR [rax],al
   14003c277:	add    BYTE PTR [rbx+0x0],bh
   14003c27d:	add    BYTE PTR [rax],al
   14003c27f:	add    al,bh
   14003c281:	iret   
   14003c282:	add    eax,DWORD PTR [rax+0x1]
   14003c285:	add    BYTE PTR [rax],al
   14003c287:	add    dh,cl
   14003c289:	add    BYTE PTR [rax],al
   14003c28b:	add    BYTE PTR [rax],al
   14003c28d:	add    BYTE PTR [rax],al
   14003c28f:	add    BYTE PTR [rax],cl
   14003c291:	rol    BYTE PTR [rbx],1
   14003c293:	rex add DWORD PTR [rax],eax
   14003c296:	add    BYTE PTR [rax],al
   14003c298:	loope  0x14003c29a
   14003c29a:	add    BYTE PTR [rax],al
   14003c29c:	add    BYTE PTR [rax],al
   14003c29e:	add    BYTE PTR [rax],al
   14003c2a0:	sbb    al,dl
   14003c2a2:	add    eax,DWORD PTR [rax+0x1]
   14003c2a5:	add    BYTE PTR [rax],al
   14003c2a7:	add    bl,bl
   14003c2a9:	add    BYTE PTR [rax],al
   14003c2ab:	add    BYTE PTR [rax],al
   14003c2ad:	add    BYTE PTR [rax],al
   14003c2af:	add    BYTE PTR [rax],ch
   14003c2b1:	rol    BYTE PTR [rbx],1
   14003c2b3:	rex add DWORD PTR [rax],eax
   14003c2b6:	add    BYTE PTR [rax],al
   14003c2b8:	fiadd  WORD PTR [rax]
   14003c2ba:	add    BYTE PTR [rax],al
   14003c2bc:	add    BYTE PTR [rax],al
   14003c2be:	add    BYTE PTR [rax],al
   14003c2c0:	cmp    al,dl
   14003c2c2:	add    eax,DWORD PTR [rax+0x1]
   14003c2c5:	add    BYTE PTR [rax],al
   14003c2c7:	add    cl,bl
   14003c2c9:	add    BYTE PTR [rax],al
   14003c2cb:	add    BYTE PTR [rax],al
   14003c2cd:	add    BYTE PTR [rax],al
   14003c2cf:	add    BYTE PTR [rax-0x30],cl
   14003c2d2:	add    eax,DWORD PTR [rax+0x1]
   14003c2d5:	add    BYTE PTR [rax],al
   14003c2d7:	add    dh,al
   14003c2d9:	add    BYTE PTR [rax],al
   14003c2db:	add    BYTE PTR [rax],al
   14003c2dd:	add    BYTE PTR [rax],al
   14003c2df:	add    al,ch
   14003c2e1:	mov    dl,0x3
   14003c2e3:	rex add DWORD PTR [rax],eax
   14003c2e6:	add    BYTE PTR [rax],al
   14003c2e8:	and    eax,DWORD PTR [rax]
   14003c2ea:	add    BYTE PTR [rax],al
   14003c2ec:	add    BYTE PTR [rax],al
   14003c2ee:	add    BYTE PTR [rax],al
   14003c2f0:	pop    rax
   14003c2f1:	rol    BYTE PTR [rbx],1
   14003c2f3:	rex add DWORD PTR [rax],eax
   14003c2f6:	add    BYTE PTR [rax],al
   14003c2f8:	add    BYTE PTR gs:[rax],al
   14003c2fb:	add    BYTE PTR [rax],al
   14003c2fd:	add    BYTE PTR [rax],al
   14003c2ff:	add    BYTE PTR [rax],ah
   14003c301:	mov    bl,0x3
   14003c303:	rex add DWORD PTR [rax],eax
   14003c306:	add    BYTE PTR [rax],al
   14003c308:	sub    al,BYTE PTR [rax]
   14003c30a:	add    BYTE PTR [rax],al
   14003c30c:	add    BYTE PTR [rax],al
   14003c30e:	add    BYTE PTR [rax],al
   14003c310:	push   0x14003d0
   14003c315:	add    BYTE PTR [rax],al
   14003c317:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003c31b:	add    BYTE PTR [rax],al
   14003c31d:	add    BYTE PTR [rax],al
   14003c31f:	add    BYTE PTR [rax],al
   14003c321:	mov    bl,0x3
   14003c323:	rex add DWORD PTR [rax],eax
   14003c326:	add    BYTE PTR [rax],al
   14003c328:	add    BYTE PTR es:[rax],al
   14003c32b:	add    BYTE PTR [rax],al
   14003c32d:	add    BYTE PTR [rax],al
   14003c32f:	add    BYTE PTR [rax-0x30],bh
   14003c332:	add    eax,DWORD PTR [rax+0x1]
   14003c335:	add    BYTE PTR [rax],al
   14003c337:	add    BYTE PTR [rax+0x0],ch
   14003c33a:	add    BYTE PTR [rax],al
   14003c33c:	add    BYTE PTR [rax],al
   14003c33e:	add    BYTE PTR [rax],al
   14003c340:	sub    BYTE PTR [rdx+0x14003],dh
   14003c346:	add    BYTE PTR [rax],al
   14003c348:	or     al,BYTE PTR [rax]
   14003c34a:	add    BYTE PTR [rax],al
   14003c34c:	add    BYTE PTR [rax],al
   14003c34e:	add    BYTE PTR [rax],al
   14003c350:	mov    al,dl
   14003c352:	add    eax,DWORD PTR [rax+0x1]
   14003c355:	add    BYTE PTR [rax],al
   14003c357:	add    BYTE PTR [rax+rax*1+0x0],cl
   14003c35b:	add    BYTE PTR [rax],al
   14003c35d:	add    BYTE PTR [rax],al
   14003c35f:	add    BYTE PTR [rax-0x4d],al
   14003c362:	add    eax,DWORD PTR [rax+0x1]
   14003c365:	add    BYTE PTR [rax],al
   14003c367:	add    BYTE PTR [rsi],ch
   14003c369:	add    BYTE PTR [rax],al
   14003c36b:	add    BYTE PTR [rax],al
   14003c36d:	add    BYTE PTR [rax],al
   14003c36f:	add    BYTE PTR [rax+0x14003d0],bl
   14003c375:	add    BYTE PTR [rax],al
   14003c377:	add    BYTE PTR [rbx+0x0],dh
   14003c37a:	add    BYTE PTR [rax],al
   14003c37c:	add    BYTE PTR [rax],al
   14003c37e:	add    BYTE PTR [rax],al
   14003c380:	xor    BYTE PTR [rdx+0x14003],dh
   14003c386:	add    BYTE PTR [rax],al
   14003c388:	or     eax,DWORD PTR [rax]
   14003c38a:	add    BYTE PTR [rax],al
   14003c38c:	add    BYTE PTR [rax],al
   14003c38e:	add    BYTE PTR [rax],al
   14003c390:	test   al,0xd0
   14003c392:	add    eax,DWORD PTR [rax+0x1]
   14003c395:	add    BYTE PTR [rax],al
   14003c397:	add    BYTE PTR [rax+rax*1+0x0],dl
   14003c39e:	add    BYTE PTR [rax],al
   14003c3a0:	mov    eax,0x14003d0
   14003c3a5:	add    BYTE PTR [rax],al
   14003c3a7:	add    BYTE PTR [rbp+0x0],ah
   14003c3ad:	add    BYTE PTR [rax],al
   14003c3af:	add    al,cl
   14003c3b1:	rol    BYTE PTR [rbx],1
   14003c3b3:	rex add DWORD PTR [rax],eax
   14003c3b6:	add    BYTE PTR [rax],al
   14003c3b8:	scas   al,BYTE PTR es:[rdi]
   14003c3b9:	add    BYTE PTR [rax],al
   14003c3bb:	add    BYTE PTR [rax],al
   14003c3bd:	add    BYTE PTR [rax],al
   14003c3bf:	add    al,bl
   14003c3c1:	rol    BYTE PTR [rbx],1
   14003c3c3:	rex add DWORD PTR [rax],eax
   14003c3c6:	add    BYTE PTR [rax],al
   14003c3c8:	rex.WRB add BYTE PTR [r8],r8b
   14003c3cb:	add    BYTE PTR [rax],al
   14003c3cd:	add    BYTE PTR [rax],al
   14003c3cf:	add    al,ch
   14003c3d1:	rol    BYTE PTR [rbx],1
   14003c3d3:	rex add DWORD PTR [rax],eax
   14003c3d6:	add    BYTE PTR [rax],al
   14003c3d8:	mov    dh,0x0
   14003c3da:	add    BYTE PTR [rax],al
   14003c3dc:	add    BYTE PTR [rax],al
   14003c3de:	add    BYTE PTR [rax],al
   14003c3e0:	clc    
   14003c3e1:	rol    BYTE PTR [rbx],1
   14003c3e3:	rex add DWORD PTR [rax],eax
   14003c3e6:	add    BYTE PTR [rax],al
   14003c3e8:	mov    esp,0x0
   14003c3ed:	add    BYTE PTR [rax],al
   14003c3ef:	add    al,al
   14003c3f1:	mov    bl,0x3
   14003c3f3:	rex add DWORD PTR [rax],eax
   14003c3f6:	add    BYTE PTR [rax],al
   14003c3f8:	add    BYTE PTR ds:[rax],al
   14003c3fb:	add    BYTE PTR [rax],al
   14003c3fd:	add    BYTE PTR [rax],al
   14003c3ff:	add    BYTE PTR [rax],cl
   14003c401:	rol    DWORD PTR [rbx],1
   14003c403:	rex add DWORD PTR [rax],eax
   14003c406:	add    BYTE PTR [rax],al
   14003c408:	mov    BYTE PTR [rax],al
   14003c40a:	add    BYTE PTR [rax],al
   14003c40c:	add    BYTE PTR [rax],al
   14003c40e:	add    BYTE PTR [rax],al
   14003c410:	mov    BYTE PTR [rbx+0x14003],dh
   14003c416:	add    BYTE PTR [rax],al
   14003c418:	(bad)  
   14003c419:	add    BYTE PTR [rax],al
   14003c41b:	add    BYTE PTR [rax],al
   14003c41d:	add    BYTE PTR [rax],al
   14003c41f:	add    BYTE PTR [rax],bl
   14003c421:	rol    DWORD PTR [rbx],1
   14003c423:	rex add DWORD PTR [rax],eax
   14003c426:	add    BYTE PTR [rax],al
   14003c428:	jg     0x14003c42a
   14003c42a:	add    BYTE PTR [rax],al
   14003c42c:	add    BYTE PTR [rax],al
   14003c42e:	add    BYTE PTR [rax],al
   14003c430:	cmp    BYTE PTR [rdx+0x14003],dh
   14003c436:	add    BYTE PTR [rax],al
   14003c438:	or     al,0x0
   14003c43a:	add    BYTE PTR [rax],al
   14003c43c:	add    BYTE PTR [rax],al
   14003c43e:	add    BYTE PTR [rax],al
   14003c440:	sub    cl,dl
   14003c442:	add    eax,DWORD PTR [rax+0x1]
   14003c445:	add    BYTE PTR [rax],al
   14003c447:	add    BYTE PTR [rsi+0x0],cl
   14003c44a:	add    BYTE PTR [rax],al
   14003c44c:	add    BYTE PTR [rax],al
   14003c44e:	add    BYTE PTR [rax],al
   14003c450:	rex.W mov bl,0x3
   14003c453:	rex add DWORD PTR [rax],eax
   14003c456:	add    BYTE PTR [rax],al
   14003c458:	(bad)  
   14003c459:	add    BYTE PTR [rax],al
   14003c45b:	add    BYTE PTR [rax],al
   14003c45d:	add    BYTE PTR [rax],al
   14003c45f:	add    BYTE PTR [rax],bh
   14003c461:	rol    DWORD PTR [rbx],1
   14003c463:	rex add DWORD PTR [rax],eax
   14003c466:	add    BYTE PTR [rax],al
   14003c468:	je     0x14003c46a
   14003c46a:	add    BYTE PTR [rax],al
   14003c46c:	add    BYTE PTR [rax],al
   14003c46e:	add    BYTE PTR [rax],al
   14003c470:	cwde   
   14003c471:	mov    dl,0x3
   14003c473:	rex add DWORD PTR [rax],eax
   14003c476:	add    BYTE PTR [rax],al
   14003c478:	sbb    BYTE PTR [rax],al
   14003c47a:	add    BYTE PTR [rax],al
   14003c47c:	add    BYTE PTR [rax],al
   14003c47e:	add    BYTE PTR [rax],al
   14003c480:	rol    QWORD PTR [rbx],1
   14003c483:	rex add DWORD PTR [rax],eax
   14003c486:	add    BYTE PTR [rax],al
   14003c488:	scas   eax,DWORD PTR es:[rdi]
   14003c489:	add    BYTE PTR [rax],al
   14003c48b:	add    BYTE PTR [rax],al
   14003c48d:	add    BYTE PTR [rax],al
   14003c48f:	add    BYTE PTR [rax-0x2f],bl
   14003c492:	add    eax,DWORD PTR [rax+0x1]
   14003c495:	add    BYTE PTR [rax],al
   14003c497:	add    BYTE PTR [rdx+0x0],bl
   14003c49a:	add    BYTE PTR [rax],al
   14003c49c:	add    BYTE PTR [rax],al
   14003c49e:	add    BYTE PTR [rax],al
   14003c4a0:	mov    dl,0x3
   14003c4a3:	rex add DWORD PTR [rax],eax
   14003c4a6:	add    BYTE PTR [rax],al
   14003c4a8:	or     eax,0x0
   14003c4ad:	add    BYTE PTR [rax],al
   14003c4af:	add    BYTE PTR [rax-0x2f],ch
   14003c4b2:	add    eax,DWORD PTR [rax+0x1]
   14003c4b5:	add    BYTE PTR [rax],al
   14003c4b7:	add    BYTE PTR [rdi+0x0],cl
   14003c4ba:	add    BYTE PTR [rax],al
   14003c4bc:	add    BYTE PTR [rax],al
   14003c4be:	add    BYTE PTR [rax],al
   14003c4c0:	adc    BYTE PTR [rbx+0x14003],dh
   14003c4c6:	add    BYTE PTR [rax],al
   14003c4c8:	sub    BYTE PTR [rax],al
   14003c4ca:	add    BYTE PTR [rax],al
   14003c4cc:	add    BYTE PTR [rax],al
   14003c4ce:	add    BYTE PTR [rax],al
   14003c4d0:	js     0x14003c4a3
   14003c4d2:	add    eax,DWORD PTR [rax+0x1]
   14003c4d5:	add    BYTE PTR [rax],al
   14003c4d7:	add    BYTE PTR [rdx+0x0],ch
   14003c4da:	add    BYTE PTR [rax],al
   14003c4dc:	add    BYTE PTR [rax],al
   14003c4de:	add    BYTE PTR [rax],al
   14003c4e0:	shl    BYTE PTR [rdx+0x14003],1
   14003c4e6:	add    BYTE PTR [rax],al
   14003c4e8:	(bad)  
   14003c4e9:	add    BYTE PTR [rax],al
   14003c4eb:	add    BYTE PTR [rax],al
   14003c4ed:	add    BYTE PTR [rax],al
   14003c4ef:	add    BYTE PTR [rax+0x14003d1],cl
   14003c4f5:	add    BYTE PTR [rax],al
   14003c4f7:	add    BYTE PTR [rcx+0x0],ah
   14003c4fa:	add    BYTE PTR [rax],al
   14003c4fc:	add    BYTE PTR [rax],al
   14003c4fe:	add    BYTE PTR [rax],al
   14003c500:	rex.W mov dl,0x3
   14003c503:	rex add DWORD PTR [rax],eax
   14003c506:	add    BYTE PTR [rax],al
   14003c508:	(bad)  
   14003c509:	add    BYTE PTR [rax],al
   14003c50b:	add    BYTE PTR [rax],al
   14003c50d:	add    BYTE PTR [rax],al
   14003c50f:	add    BYTE PTR [rax+0x14003d1],bl
   14003c515:	add    BYTE PTR [rax],al
   14003c517:	add    BYTE PTR [rax+0x0],dl
   14003c51a:	add    BYTE PTR [rax],al
   14003c51c:	add    BYTE PTR [rax],al
   14003c51e:	add    BYTE PTR [rax],al
   14003c520:	push   rax
   14003c521:	mov    dl,0x3
   14003c523:	rex add DWORD PTR [rax],eax
   14003c526:	add    BYTE PTR [rax],al
   14003c528:	sldt   WORD PTR [rax]
   14003c52b:	add    BYTE PTR [rax],al
   14003c52d:	add    BYTE PTR [rax],al
   14003c52f:	add    BYTE PTR [rax+0x14003d1],ch
   14003c535:	add    BYTE PTR [rax],al
   14003c537:	add    BYTE PTR [rbp+0x0],dl
   14003c53d:	add    BYTE PTR [rax],al
   14003c53f:	add    BYTE PTR [rax+0x14003d1],bh
   14003c545:	add    BYTE PTR [rax],al
   14003c547:	add    BYTE PTR [rcx+0x0],dl
   14003c54a:	add    BYTE PTR [rax],al
   14003c54c:	add    BYTE PTR [rax],al
   14003c54e:	add    BYTE PTR [rax],al
   14003c550:	pop    rax
   14003c551:	mov    dl,0x3
   14003c553:	rex add DWORD PTR [rax],eax
   14003c556:	add    BYTE PTR [rax],al
   14003c558:	adc    BYTE PTR [rax],al
   14003c55a:	add    BYTE PTR [rax],al
   14003c55c:	add    BYTE PTR [rax],al
   14003c55e:	add    BYTE PTR [rax],al
   14003c560:	enter  0x3d1,0x40
   14003c564:	add    DWORD PTR [rax],eax
   14003c566:	add    BYTE PTR [rax],al
   14003c568:	push   rdx
   14003c569:	add    BYTE PTR [rax],al
   14003c56b:	add    BYTE PTR [rax],al
   14003c56d:	add    BYTE PTR [rax],al
   14003c56f:	add    BYTE PTR [rax],bh
   14003c571:	mov    bl,0x3
   14003c573:	rex add DWORD PTR [rax],eax
   14003c576:	add    BYTE PTR [rax],al
   14003c578:	sub    eax,0x0
   14003c57d:	add    BYTE PTR [rax],al
   14003c57f:	add    al,bl
   14003c581:	rol    DWORD PTR [rbx],1
   14003c583:	rex add DWORD PTR [rax],eax
   14003c586:	add    BYTE PTR [rax],al
   14003c588:	jb     0x14003c58a
   14003c58a:	add    BYTE PTR [rax],al
   14003c58c:	add    BYTE PTR [rax],al
   14003c58e:	add    BYTE PTR [rax],al
   14003c590:	pop    rax
   14003c591:	mov    bl,0x3
   14003c593:	rex add DWORD PTR [rax],eax
   14003c596:	add    BYTE PTR [rax],al
   14003c598:	xor    DWORD PTR [rax],eax
   14003c59a:	add    BYTE PTR [rax],al
   14003c59c:	add    BYTE PTR [rax],al
   14003c59e:	add    BYTE PTR [rax],al
   14003c5a0:	call   0x14143c976
   14003c5a5:	add    BYTE PTR [rax],al
   14003c5a7:	add    BYTE PTR [rax+0x0],bh
   14003c5aa:	add    BYTE PTR [rax],al
   14003c5ac:	add    BYTE PTR [rax],al
   14003c5ae:	add    BYTE PTR [rax],al
   14003c5b0:	movabs al,ds:0x3a000000014003b3
   14003c5b9:	add    BYTE PTR [rax],al
   14003c5bb:	add    BYTE PTR [rax],al
   14003c5bd:	add    BYTE PTR [rax],al
   14003c5bf:	add    al,bh
   14003c5c1:	rol    DWORD PTR [rbx],1
   14003c5c3:	rex add DWORD PTR [rax],eax
   14003c5c6:	add    BYTE PTR [rax],al
   14003c5c8:	(bad)  
   14003c5c9:	add    BYTE PTR [rax],al
   14003c5cb:	add    BYTE PTR [rax],al
   14003c5cd:	add    BYTE PTR [rax],al
   14003c5cf:	add    BYTE PTR [rax-0x4e],ah
   14003c5d2:	add    eax,DWORD PTR [rax+0x1]
   14003c5d5:	add    BYTE PTR [rax],al
   14003c5d7:	add    BYTE PTR [rcx],dl
   14003c5d9:	add    BYTE PTR [rax],al
   14003c5db:	add    BYTE PTR [rax],al
   14003c5dd:	add    BYTE PTR [rax],al
   14003c5df:	add    al,cl
   14003c5e1:	mov    bl,0x3
   14003c5e3:	rex add DWORD PTR [rax],eax
   14003c5e6:	add    BYTE PTR [rax],al
   14003c5e8:	(bad)  
   14003c5e9:	add    BYTE PTR [rax],al
   14003c5eb:	add    BYTE PTR [rax],al
   14003c5ed:	add    BYTE PTR [rax],al
   14003c5ef:	add    BYTE PTR [rax],cl
   14003c5f1:	rol    BYTE PTR [rbx],cl
   14003c5f3:	rex add DWORD PTR [rax],eax
   14003c5f6:	add    BYTE PTR [rax],al
   14003c5f8:	mov    DWORD PTR [rax],eax
   14003c5fa:	add    BYTE PTR [rax],al
   14003c5fc:	add    BYTE PTR [rax],al
   14003c5fe:	add    BYTE PTR [rax],al
   14003c600:	sbb    dl,dl
   14003c602:	add    eax,DWORD PTR [rax+0x1]
   14003c605:	add    BYTE PTR [rax],al
   14003c607:	add    BYTE PTR [rbx+0x0],dl
   14003c60a:	add    BYTE PTR [rax],al
   14003c60c:	add    BYTE PTR [rax],al
   14003c60e:	add    BYTE PTR [rax],al
   14003c610:	(bad)  
   14003c611:	mov    bl,0x3
   14003c613:	rex add DWORD PTR [rax],eax
   14003c616:	add    BYTE PTR [rax],al
   14003c618:	xor    al,BYTE PTR [rax]
   14003c61a:	add    BYTE PTR [rax],al
   14003c61c:	add    BYTE PTR [rax],al
   14003c61e:	add    BYTE PTR [rax],al
   14003c620:	sub    dl,dl
   14003c622:	add    eax,DWORD PTR [rax+0x1]
   14003c625:	add    BYTE PTR [rax],al
   14003c627:	add    BYTE PTR [rcx+0x0],bh
   14003c62a:	add    BYTE PTR [rax],al
   14003c62c:	add    BYTE PTR [rax],al
   14003c62e:	add    BYTE PTR [rax],al
   14003c630:	clc    
   14003c631:	mov    dl,0x3
   14003c633:	rex add DWORD PTR [rax],eax
   14003c636:	add    BYTE PTR [rax],al
   14003c638:	and    eax,0x0
   14003c63d:	add    BYTE PTR [rax],al
   14003c63f:	add    BYTE PTR [rax],bh
   14003c641:	rol    BYTE PTR [rbx],cl
   14003c643:	rex add DWORD PTR [rax],eax
   14003c646:	add    BYTE PTR [rax],al
   14003c648:	add    BYTE PTR [eax],al
   14003c64b:	add    BYTE PTR [rax],al
   14003c64d:	add    BYTE PTR [rax],al
   14003c64f:	add    al,dh
   14003c651:	mov    dl,0x3
   14003c653:	rex add DWORD PTR [rax],eax
   14003c656:	add    BYTE PTR [rax],al
   14003c658:	and    al,0x0
   14003c65a:	add    BYTE PTR [rax],al
   14003c65c:	add    BYTE PTR [rax],al
   14003c65e:	add    BYTE PTR [rax],al
   14003c660:	rex.W rol BYTE PTR [rbx],cl
   14003c663:	rex add DWORD PTR [rax],eax
   14003c666:	add    BYTE PTR [rax],al
   14003c668:	data16 add BYTE PTR [rax],al
   14003c66b:	add    BYTE PTR [rax],al
   14003c66d:	add    BYTE PTR [rax],al
   14003c66f:	add    BYTE PTR [rax-0x2e],bl
   14003c672:	add    eax,DWORD PTR [rax+0x1]
   14003c675:	add    BYTE PTR [rax],al
   14003c677:	add    BYTE PTR [rsi+0x0],cl
   14003c67d:	add    BYTE PTR [rax],al
   14003c67f:	add    BYTE PTR [rax],ch
   14003c681:	mov    bl,0x3
   14003c683:	rex add DWORD PTR [rax],eax
   14003c686:	add    BYTE PTR [rax],al
   14003c688:	sub    eax,DWORD PTR [rax]
   14003c68a:	add    BYTE PTR [rax],al
   14003c68c:	add    BYTE PTR [rax],al
   14003c68e:	add    BYTE PTR [rax],al
   14003c690:	push   0x14003d2
   14003c695:	add    BYTE PTR [rax],al
   14003c697:	add    BYTE PTR [rbp+0x0],ch
   14003c69a:	add    BYTE PTR [rax],al
   14003c69c:	add    BYTE PTR [rax],al
   14003c69e:	add    BYTE PTR [rax],al
   14003c6a0:	js     0x14003c674
   14003c6a2:	add    eax,DWORD PTR [rax+0x1]
   14003c6a5:	add    BYTE PTR [rax],al
   14003c6a7:	add    BYTE PTR [rbx+0x0],al
   14003c6ad:	add    BYTE PTR [rax],al
   14003c6af:	add    BYTE PTR [rax+0x14003b3],bh
   14003c6b5:	add    BYTE PTR [rax],al
   14003c6b7:	add    BYTE PTR [rip+0x0],bh        # 0x14003c6bd
   14003c6bd:	add    BYTE PTR [rax],al
   14003c6bf:	add    BYTE PTR [rax+0x14003d2],cl
   14003c6c5:	add    BYTE PTR [rax],al
   14003c6c7:	add    BYTE PTR [rsi+0x0],al
   14003c6cd:	add    BYTE PTR [rax],al
   14003c6cf:	add    BYTE PTR [rax+0x14003b3],ch
   14003c6d5:	add    BYTE PTR [rax],al
   14003c6d7:	add    BYTE PTR [rbx],bh
   14003c6d9:	add    BYTE PTR [rax],al
   14003c6db:	add    BYTE PTR [rax],al
   14003c6dd:	add    BYTE PTR [rax],al
   14003c6df:	add    BYTE PTR [rax+0x14003d2],bl
   14003c6e5:	add    BYTE PTR [rax],al
   14003c6e7:	add    BYTE PTR [rax+rax*1+0x0],al
   14003c6ee:	add    BYTE PTR [rax],al
   14003c6f0:	push   rax
   14003c6f1:	mov    bl,0x3
   14003c6f3:	rex add DWORD PTR [rax],eax
   14003c6f6:	add    BYTE PTR [rax],al
   14003c6f8:	xor    BYTE PTR [rax],al
   14003c6fa:	add    BYTE PTR [rax],al
   14003c6fc:	add    BYTE PTR [rax],al
   14003c6fe:	add    BYTE PTR [rax],al
   14003c700:	test   al,0xd2
   14003c702:	add    eax,DWORD PTR [rax+0x1]
   14003c705:	add    BYTE PTR [rax],al
   14003c707:	add    BYTE PTR [rbp+0x0],bl
   14003c70d:	add    BYTE PTR [rax],al
   14003c70f:	add    BYTE PTR [rax+0x14003d2],bh
   14003c715:	add    BYTE PTR [rax],al
   14003c717:	add    BYTE PTR [rdi+0x0],dh
   14003c71a:	add    BYTE PTR [rax],al
   14003c71c:	add    BYTE PTR [rax],al
   14003c71e:	add    BYTE PTR [rax],al
   14003c720:	enter  0x3d2,0x40
   14003c724:	add    DWORD PTR [rax],eax
   14003c726:	add    BYTE PTR [rax],al
   14003c728:	jne    0x14003c72a
   14003c72a:	add    BYTE PTR [rax],al
   14003c72c:	add    BYTE PTR [rax],al
   14003c72e:	add    BYTE PTR [rax],al
   14003c730:	fcom   st(2)
   14003c732:	add    eax,DWORD PTR [rax+0x1]
   14003c735:	add    BYTE PTR [rax],al
   14003c737:	add    BYTE PTR [rbp+0x0],dl
   14003c73a:	add    BYTE PTR [rax],al
   14003c73c:	add    BYTE PTR [rax],al
   14003c73e:	add    BYTE PTR [rax],al
   14003c740:	push   0x14003b2
   14003c745:	add    BYTE PTR [rax],al
   14003c747:	add    BYTE PTR [rdx],dl
   14003c749:	add    BYTE PTR [rax],al
   14003c74b:	add    BYTE PTR [rax],al
   14003c74d:	add    BYTE PTR [rax],al
   14003c74f:	add    al,ch
   14003c751:	rol    BYTE PTR [rbx],cl
   14003c753:	rex add DWORD PTR [rax],eax
   14003c756:	add    BYTE PTR [rax],al
   14003c758:	xchg   esi,eax
   14003c759:	add    BYTE PTR [rax],al
   14003c75b:	add    BYTE PTR [rax],al
   14003c75d:	add    BYTE PTR [rax],al
   14003c75f:	add    al,bh
   14003c761:	rol    BYTE PTR [rbx],cl
   14003c763:	rex add DWORD PTR [rax],eax
   14003c766:	add    BYTE PTR [rax],al
   14003c768:	push   rsp
   14003c769:	add    BYTE PTR [rax],al
   14003c76b:	add    BYTE PTR [rax],al
   14003c76d:	add    BYTE PTR [rax],al
   14003c76f:	add    BYTE PTR [rax],cl
   14003c771:	rol    DWORD PTR [rbx],cl
   14003c773:	rex add DWORD PTR [rax],eax
   14003c776:	add    BYTE PTR [rax],al
   14003c778:	xchg   edi,eax
   14003c779:	add    BYTE PTR [rax],al
   14003c77b:	add    BYTE PTR [rax],al
   14003c77d:	add    BYTE PTR [rax],al
   14003c77f:	add    BYTE PTR [rax-0x4e],dh
   14003c782:	add    eax,DWORD PTR [rax+0x1]
   14003c785:	add    BYTE PTR [rax],al
   14003c787:	add    BYTE PTR [rbx],dl
   14003c789:	add    BYTE PTR [rax],al
   14003c78b:	add    BYTE PTR [rax],al
   14003c78d:	add    BYTE PTR [rax],al
   14003c78f:	add    BYTE PTR [rax],bl
   14003c791:	rol    DWORD PTR [rbx],cl
   14003c793:	rex add DWORD PTR [rax],eax
   14003c796:	add    BYTE PTR [rax],al
   14003c798:	lea    eax,[rax]
   14003c79a:	add    BYTE PTR [rax],al
   14003c79c:	add    BYTE PTR [rax],al
   14003c79e:	add    BYTE PTR [rax],al
   14003c7a0:	xor    BYTE PTR [rbx+0x14003],0x0
   14003c7a7:	add    BYTE PTR [rsi],dh
   14003c7a9:	add    BYTE PTR [rax],al
   14003c7ab:	add    BYTE PTR [rax],al
   14003c7ad:	add    BYTE PTR [rax],al
   14003c7af:	add    BYTE PTR [rax],ch
   14003c7b1:	rol    DWORD PTR [rbx],cl
   14003c7b3:	rex add DWORD PTR [rax],eax
   14003c7b6:	add    BYTE PTR [rax],al
   14003c7b8:	jle    0x14003c7ba
   14003c7ba:	add    BYTE PTR [rax],al
   14003c7bc:	add    BYTE PTR [rax],al
   14003c7be:	add    BYTE PTR [rax],al
   14003c7c0:	js     0x14003c774
   14003c7c2:	add    eax,DWORD PTR [rax+0x1]
   14003c7c5:	add    BYTE PTR [rax],al
   14003c7c7:	add    BYTE PTR [rax+rax*1],dl
   14003c7ca:	add    BYTE PTR [rax],al
   14003c7cc:	add    BYTE PTR [rax],al
   14003c7ce:	add    BYTE PTR [rax],al
   14003c7d0:	cmp    bl,dl
   14003c7d2:	add    eax,DWORD PTR [rax+0x1]
   14003c7d5:	add    BYTE PTR [rax],al
   14003c7d7:	add    BYTE PTR [rsi+0x0],dl
   14003c7da:	add    BYTE PTR [rax],al
   14003c7dc:	add    BYTE PTR [rax],al
   14003c7de:	add    BYTE PTR [rax],al
   14003c7e0:	xor    BYTE PTR [rdx+0x14003],0x0
   14003c7e7:	add    BYTE PTR [rip+0x0],dl        # 0x14003c7ed
   14003c7ed:	add    BYTE PTR [rax],al
   14003c7ef:	add    BYTE PTR [rax-0x2d],cl
   14003c7f2:	add    eax,DWORD PTR [rax+0x1]
   14003c7f5:	add    BYTE PTR [rax],al
   14003c7f7:	add    BYTE PTR [rdi+0x0],dl
   14003c7fa:	add    BYTE PTR [rax],al
   14003c7fc:	add    BYTE PTR [rax],al
   14003c7fe:	add    BYTE PTR [rax],al
   14003c800:	pop    rax
   14003c801:	rol    DWORD PTR [rbx],cl
   14003c803:	rex add DWORD PTR [rax],eax
   14003c806:	add    BYTE PTR [rax],al
   14003c808:	cwde   
   14003c809:	add    BYTE PTR [rax],al
   14003c80b:	add    BYTE PTR [rax],al
   14003c80d:	add    BYTE PTR [rax],al
   14003c80f:	add    BYTE PTR [rax-0x2d],ch
   14003c812:	add    eax,DWORD PTR [rax+0x1]
   14003c815:	add    BYTE PTR [rax],al
   14003c817:	add    BYTE PTR [rax+rax*1+0x0],cl
   14003c81e:	add    BYTE PTR [rax],al
   14003c820:	js     0x14003c7f5
   14003c822:	add    eax,DWORD PTR [rax+0x1]
   14003c825:	add    BYTE PTR [rax],al
   14003c827:	add    BYTE PTR [rdi+0x0],bl
   14003c82d:	add    BYTE PTR [rax],al
   14003c82f:	add    BYTE PTR [rax+0x14003d3],cl
   14003c835:	add    BYTE PTR [rax],al
   14003c837:	add    BYTE PTR [rax+0x0],ch
   14003c83d:	add    BYTE PTR [rax],al
   14003c83f:	add    BYTE PTR [rax+0x14003b2],cl
   14003c845:	add    BYTE PTR [rax],al
   14003c847:	add    BYTE PTR [rsi],dl
   14003c849:	add    BYTE PTR [rax],al
   14003c84b:	add    BYTE PTR [rax],al
   14003c84d:	add    BYTE PTR [rax],al
   14003c84f:	add    BYTE PTR [rax+0x14003d3],bl
   14003c855:	add    BYTE PTR [rax],al
   14003c857:	add    BYTE PTR [rax+0x0],bl
   14003c85a:	add    BYTE PTR [rax],al
   14003c85c:	add    BYTE PTR [rax],al
   14003c85e:	add    BYTE PTR [rax],al
   14003c860:	nop
   14003c861:	mov    dl,0x3
   14003c863:	rex add DWORD PTR [rax],eax
   14003c866:	add    BYTE PTR [rax],al
   14003c868:	(bad)  
   14003c869:	add    BYTE PTR [rax],al
   14003c86b:	add    BYTE PTR [rax],al
   14003c86d:	add    BYTE PTR [rax],al
   14003c86f:	add    BYTE PTR [rax+0x14003d3],ch
   14003c875:	add    BYTE PTR [rax],al
   14003c877:	add    BYTE PTR [rcx+0x0],bl
   14003c87a:	add    BYTE PTR [rax],al
   14003c87c:	add    BYTE PTR [rax],al
   14003c87e:	add    BYTE PTR [rax],al
   14003c880:	mov    al,0xb3
   14003c882:	add    eax,DWORD PTR [rax+0x1]
   14003c885:	add    BYTE PTR [rax],al
   14003c887:	add    BYTE PTR [rax+rax*1],bh
   14003c88a:	add    BYTE PTR [rax],al
   14003c88c:	add    BYTE PTR [rax],al
   14003c88e:	add    BYTE PTR [rax],al
   14003c890:	mov    eax,0x14003d3
   14003c895:	add    BYTE PTR [rax],al
   14003c897:	add    BYTE PTR [rbp+0x0],al
   14003c89d:	add    BYTE PTR [rax],al
   14003c89f:	add    al,cl
   14003c8a1:	rol    DWORD PTR [rbx],cl
   14003c8a3:	rex add DWORD PTR [rax],eax
   14003c8a6:	add    BYTE PTR [rax],al
   14003c8a8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c8a9:	add    BYTE PTR [rax],al
   14003c8ab:	add    BYTE PTR [rax],al
   14003c8ad:	add    BYTE PTR [rax],al
   14003c8af:	add    al,bl
   14003c8b1:	rol    DWORD PTR [rbx],cl
   14003c8b3:	rex add DWORD PTR [rax],eax
   14003c8b6:	add    BYTE PTR [rax],al
   14003c8b8:	jbe    0x14003c8ba
   14003c8ba:	add    BYTE PTR [rax],al
   14003c8bc:	add    BYTE PTR [rax],al
   14003c8be:	add    BYTE PTR [rax],al
   14003c8c0:	call   0x14143cc98
   14003c8c5:	add    BYTE PTR [rax],al
   14003c8c7:	add    BYTE PTR [rax+rax*1+0x0],bl
   14003c8ce:	add    BYTE PTR [rax],al
   14003c8d0:	movabs al,ds:0x19000000014003b2
   14003c8d9:	add    BYTE PTR [rax],al
   14003c8db:	add    BYTE PTR [rax],al
   14003c8dd:	add    BYTE PTR [rax],al
   14003c8df:	add    al,bh
   14003c8e1:	rol    DWORD PTR [rbx],cl
   14003c8e3:	rex add DWORD PTR [rax],eax
   14003c8e6:	add    BYTE PTR [rax],al
   14003c8e8:	pop    rbx
   14003c8e9:	add    BYTE PTR [rax],al
   14003c8eb:	add    BYTE PTR [rax],al
   14003c8ed:	add    BYTE PTR [rax],al
   14003c8ef:	add    al,ah
   14003c8f1:	mov    dl,0x3
   14003c8f3:	rex add DWORD PTR [rax],eax
   14003c8f6:	add    BYTE PTR [rax],al
   14003c8f8:	and    al,BYTE PTR [rax]
   14003c8fa:	add    BYTE PTR [rax],al
   14003c8fc:	add    BYTE PTR [rax],al
   14003c8fe:	add    BYTE PTR [rax],al
   14003c900:	or     ah,dl
   14003c902:	add    eax,DWORD PTR [rax+0x1]
   14003c905:	add    BYTE PTR [rax],al
   14003c907:	add    BYTE PTR [rax+rax*1+0x0],ah
   14003c90b:	add    BYTE PTR [rax],al
   14003c90d:	add    BYTE PTR [rax],al
   14003c90f:	add    BYTE PTR [rax],bl
   14003c911:	(bad)  
   14003c912:	add    eax,DWORD PTR [rax+0x1]
   14003c915:	add    BYTE PTR [rax],al
   14003c917:	add    BYTE PTR [rsi+0x0],bh
   14003c91d:	add    BYTE PTR [rax],al
   14003c91f:	add    BYTE PTR [rax],ch
   14003c921:	(bad)  
   14003c922:	add    eax,DWORD PTR [rax+0x1]
   14003c925:	add    BYTE PTR [rax],al
   14003c927:	add    bl,al
   14003c929:	add    BYTE PTR [rax],al
   14003c92b:	add    BYTE PTR [rax],al
   14003c92d:	add    BYTE PTR [rax],al
   14003c92f:	add    BYTE PTR [rax],bh
   14003c931:	(bad)  
   14003c932:	add    eax,DWORD PTR [rax+0x1]
   14003c935:	add    BYTE PTR [rax],al
   14003c937:	add    BYTE PTR [rax+0x0],dh
   14003c93d:	add    BYTE PTR [rax],al
   14003c93f:	add    BYTE PTR [rax-0x2c],cl
   14003c942:	add    eax,DWORD PTR [rax+0x1]
   14003c945:	add    BYTE PTR [rax],al
   14003c947:	add    BYTE PTR [rax+0x0],bh
   14003c94d:	add    BYTE PTR [rax],al
   14003c94f:	add    BYTE PTR [rax-0x2c],bl
   14003c952:	add    eax,DWORD PTR [rax+0x1]
   14003c955:	add    BYTE PTR [rax],al
   14003c957:	add    bl,cl
   14003c959:	add    BYTE PTR [rax],al
   14003c95b:	add    BYTE PTR [rax],al
   14003c95d:	add    BYTE PTR [rax],al
   14003c95f:	add    BYTE PTR [rax-0x2c],ch
   14003c962:	add    eax,DWORD PTR [rax+0x1]
   14003c965:	add    BYTE PTR [rax],al
   14003c967:	add    bh,al
   14003c969:	add    BYTE PTR [rax],al
   14003c96b:	add    BYTE PTR [rax],al
   14003c96d:	add    BYTE PTR [rax],al
   14003c96f:	add    BYTE PTR [rax+0x14003b2],ch
   14003c975:	add    BYTE PTR [rax],al
   14003c977:	add    BYTE PTR [rdx],bl
   14003c979:	add    BYTE PTR [rax],al
   14003c97b:	add    BYTE PTR [rax],al
   14003c97d:	add    BYTE PTR [rax],al
   14003c97f:	add    BYTE PTR [rax-0x2c],bh
   14003c982:	add    eax,DWORD PTR [rax+0x1]
   14003c985:	add    BYTE PTR [rax],al
   14003c987:	add    BYTE PTR [rax+rax*1+0x0],bl
   14003c98b:	add    BYTE PTR [rax],al
   14003c98d:	add    BYTE PTR [rax],al
   14003c98f:	add    al,bl
   14003c991:	mov    ebp,0x14003
   14003c996:	add    BYTE PTR [rax],al
   14003c998:	jrcxz  0x14003c99a
   14003c99a:	add    BYTE PTR [rax],al
   14003c99c:	add    BYTE PTR [rax],al
   14003c99e:	add    BYTE PTR [rax],al
   14003c9a0:	mov    ah,dl
   14003c9a2:	add    eax,DWORD PTR [rax+0x1]
   14003c9a5:	add    BYTE PTR [rax],al
   14003c9a7:	add    dl,al
   14003c9a9:	add    BYTE PTR [rax],al
   14003c9ab:	add    BYTE PTR [rax],al
   14003c9ad:	add    BYTE PTR [rax],al
   14003c9af:	add    BYTE PTR [rax+0x14003d4],ah
   14003c9b5:	add    BYTE PTR [rax],al
   14003c9b7:	add    BYTE PTR [rbp+0x0],bh
   14003c9bd:	add    BYTE PTR [rax],al
   14003c9bf:	add    BYTE PTR [rax+0x14003d4],bh
   14003c9c5:	add    BYTE PTR [rax],al
   14003c9c7:	add    BYTE PTR [rsi+0x0],ah
   14003c9cd:	add    BYTE PTR [rax],al
   14003c9cf:	add    al,dl
   14003c9d1:	(bad)  
   14003c9d2:	add    eax,DWORD PTR [rax+0x1]
   14003c9d5:	add    BYTE PTR [rax],al
   14003c9d7:	add    BYTE PTR [rcx+0x0],bl
   14003c9dd:	add    BYTE PTR [rax],al
   14003c9df:	add    BYTE PTR [rax+0x14003b2],dh
   14003c9e5:	add    BYTE PTR [rax],al
   14003c9e7:	add    BYTE PTR [rbx],bl
   14003c9e9:	add    BYTE PTR [rax],al
   14003c9eb:	add    BYTE PTR [rax],al
   14003c9ed:	add    BYTE PTR [rax],al
   14003c9ef:	add    al,ch
   14003c9f1:	(bad)  
   14003c9f2:	add    eax,DWORD PTR [rax+0x1]
   14003c9f5:	add    BYTE PTR [rax],al
   14003c9f7:	add    BYTE PTR [rdx+0x0],bl
   14003c9fd:	add    BYTE PTR [rax],al
   14003c9ff:	add    al,bh
   14003ca01:	(bad)  
   14003ca02:	add    eax,DWORD PTR [rax+0x1]
   14003ca05:	add    BYTE PTR [rax],al
   14003ca07:	add    BYTE PTR [rbp+0x0],bl
   14003ca0a:	add    BYTE PTR [rax],al
   14003ca0c:	add    BYTE PTR [rax],al
   14003ca0e:	add    BYTE PTR [rax],al
   14003ca10:	push   0x14003b3
   14003ca15:	add    BYTE PTR [rax],al
   14003ca17:	add    BYTE PTR [rbx],dh
   14003ca19:	add    BYTE PTR [rax],al
   14003ca1b:	add    BYTE PTR [rax],al
   14003ca1d:	add    BYTE PTR [rax],al
   14003ca1f:	add    BYTE PTR [rax],cl
   14003ca21:	(bad)  
   14003ca22:	add    eax,DWORD PTR [rax+0x1]
   14003ca25:	add    BYTE PTR [rax],al
   14003ca27:	add    BYTE PTR [rdx+0x0],bh
   14003ca2a:	add    BYTE PTR [rax],al
   14003ca2c:	add    BYTE PTR [rax],al
   14003ca2e:	add    BYTE PTR [rax],al
   14003ca30:	shl    BYTE PTR [rbx+0x14003],1
   14003ca36:	add    BYTE PTR [rax],al
   14003ca38:	add    BYTE PTR [rax],al
   14003ca3b:	add    BYTE PTR [rax],al
   14003ca3d:	add    BYTE PTR [rax],al
   14003ca3f:	add    BYTE PTR [rax],bl
   14003ca41:	(bad)  
   14003ca42:	add    eax,DWORD PTR [rax+0x1]
   14003ca45:	add    BYTE PTR [rax],al
   14003ca47:	add    BYTE PTR [rdx+0x0],cl
   14003ca4d:	add    BYTE PTR [rax],al
   14003ca4f:	add    BYTE PTR [rax+0x14003b3],dl
   14003ca55:	add    BYTE PTR [rax],al
   14003ca57:	add    BYTE PTR [rax],bh
   14003ca59:	add    BYTE PTR [rax],al
   14003ca5b:	add    BYTE PTR [rax],al
   14003ca5d:	add    BYTE PTR [rax],al
   14003ca5f:	add    BYTE PTR [rax],ch
   14003ca61:	(bad)  
   14003ca62:	add    eax,DWORD PTR [rax+0x1]
   14003ca65:	add    BYTE PTR [rax],al
   14003ca67:	add    BYTE PTR [rax+0x0],al
   14003ca6d:	add    BYTE PTR [rax],al
   14003ca6f:	add    BYTE PTR [rax+0x14003b3],bl
   14003ca75:	add    BYTE PTR [rax],al
   14003ca77:	add    BYTE PTR [rcx],bh
   14003ca79:	add    BYTE PTR [rax],al
   14003ca7b:	add    BYTE PTR [rax],al
   14003ca7d:	add    BYTE PTR [rax],al
   14003ca7f:	add    BYTE PTR [rax],bh
   14003ca81:	(bad)  
   14003ca82:	add    eax,DWORD PTR [rax+0x1]
   14003ca85:	add    BYTE PTR [rax],al
   14003ca87:	add    BYTE PTR [rcx+0x0],al
   14003ca8d:	add    BYTE PTR [rax],al
   14003ca8f:	add    BYTE PTR [rax+0x14003b2],bh
   14003ca95:	add    BYTE PTR [rax],al
   14003ca97:	add    BYTE PTR [rax+rax*1],bl
   14003ca9a:	add    BYTE PTR [rax],al
   14003ca9c:	add    BYTE PTR [rax],al
   14003ca9e:	add    BYTE PTR [rax],al
   14003caa0:	rex.W (bad) 
   14003caa2:	add    eax,DWORD PTR [rax+0x1]
   14003caa5:	add    BYTE PTR [rax],al
   14003caa7:	add    BYTE PTR [rsi+0x0],bl
   14003caaa:	add    BYTE PTR [rax],al
   14003caac:	add    BYTE PTR [rax],al
   14003caae:	add    BYTE PTR [rax],al
   14003cab0:	pop    rax
   14003cab1:	(bad)  
   14003cab2:	add    eax,DWORD PTR [rax+0x1]
   14003cab5:	add    BYTE PTR [rax],al
   14003cab7:	add    BYTE PTR [rsi+0x0],ch
   14003caba:	add    BYTE PTR [rax],al
   14003cabc:	add    BYTE PTR [rax],al
   14003cabe:	add    BYTE PTR [rax],al
   14003cac0:	shl    BYTE PTR [rdx+0x14003],0x0
   14003cac7:	add    BYTE PTR [rip+0x0],bl        # 0x14003cacd
   14003cacd:	add    BYTE PTR [rax],al
   14003cacf:	add    BYTE PTR [rax-0x2b],ch
   14003cad2:	add    eax,DWORD PTR [rax+0x1]
   14003cad5:	add    BYTE PTR [rax],al
   14003cad7:	add    BYTE PTR [rdi+0x0],bl
   14003cada:	add    BYTE PTR [rax],al
   14003cadc:	add    BYTE PTR [rax],al
   14003cade:	add    BYTE PTR [rax],al
   14003cae0:	js     0x14003ca95
   14003cae2:	add    eax,DWORD PTR [rax+0x1]
   14003cae5:	add    BYTE PTR [rax],al
   14003cae7:	add    BYTE PTR [rip+0x0],dh        # 0x14003caed
   14003caed:	add    BYTE PTR [rax],al
   14003caef:	add    BYTE PTR [rax-0x2b],bh
   14003caf2:	add    eax,DWORD PTR [rax+0x1]
   14003caf5:	add    BYTE PTR [rax],al
   14003caf7:	add    BYTE PTR [rax+rax*1+0x0],bh
   14003cafb:	add    BYTE PTR [rax],al
   14003cafd:	add    BYTE PTR [rax],al
   14003caff:	add    BYTE PTR [rax+0x14003a3],al
   14003cb05:	add    BYTE PTR [rax],al
   14003cb07:	add    BYTE PTR [rax],ah
   14003cb09:	add    BYTE PTR [rax],al
   14003cb0b:	add    BYTE PTR [rax],al
   14003cb0d:	add    BYTE PTR [rax],al
   14003cb0f:	add    BYTE PTR [rax+0x14003d5],cl
   14003cb15:	add    BYTE PTR [rax],al
   14003cb17:	add    BYTE PTR [rdx+0x0],ah
   14003cb1a:	add    BYTE PTR [rax],al
   14003cb1c:	add    BYTE PTR [rax],al
   14003cb1e:	add    BYTE PTR [rax],al
   14003cb20:	enter  0x3b2,0x40
   14003cb24:	add    DWORD PTR [rax],eax
   14003cb26:	add    BYTE PTR [rax],al
   14003cb28:	(bad)  
   14003cb29:	add    BYTE PTR [rax],al
   14003cb2b:	add    BYTE PTR [rax],al
   14003cb2d:	add    BYTE PTR [rax],al
   14003cb2f:	add    BYTE PTR [rax+0x14003d5],bl
   14003cb35:	add    BYTE PTR [rax],al
   14003cb37:	add    BYTE PTR [rax+0x0],ah
   14003cb3a:	add    BYTE PTR [rax],al
   14003cb3c:	add    BYTE PTR [rax],al
   14003cb3e:	add    BYTE PTR [rax],al
   14003cb40:	jo     0x14003caf5
   14003cb42:	add    eax,DWORD PTR [rax+0x1]
   14003cb45:	add    BYTE PTR [rax],al
   14003cb47:	add    BYTE PTR [rax+rax*1],dh
   14003cb4a:	add    BYTE PTR [rax],al
   14003cb4c:	add    BYTE PTR [rax],al
   14003cb4e:	add    BYTE PTR [rax],al
   14003cb50:	test   al,0xd5
   14003cb52:	add    eax,DWORD PTR [rax+0x1]
   14003cb55:	add    BYTE PTR [rax],al
   14003cb57:	add    BYTE PTR [rsi+0x0],bl
   14003cb5d:	add    BYTE PTR [rax],al
   14003cb5f:	add    al,al
   14003cb61:	(bad)  
   14003cb62:	add    eax,DWORD PTR [rax+0x1]
   14003cb65:	add    BYTE PTR [rax],al
   14003cb67:	add    BYTE PTR [rbx+0x0],bh
   14003cb6a:	add    BYTE PTR [rax],al
   14003cb6c:	add    BYTE PTR [rax],al
   14003cb6e:	add    BYTE PTR [rax],al
   14003cb70:	or     BYTE PTR [rbx+0x14003],dh
   14003cb76:	add    BYTE PTR [rax],al
   14003cb78:	(bad)  
   14003cb79:	add    BYTE PTR [rax],al
   14003cb7b:	add    BYTE PTR [rax],al
   14003cb7d:	add    BYTE PTR [rax],al
   14003cb7f:	add    al,bl
   14003cb81:	(bad)  
   14003cb82:	add    eax,DWORD PTR [rax+0x1]
   14003cb85:	add    BYTE PTR [rax],al
   14003cb87:	add    BYTE PTR [rcx+0x0],ch
   14003cb8a:	add    BYTE PTR [rax],al
   14003cb8c:	add    BYTE PTR [rax],al
   14003cb8e:	add    BYTE PTR [rax],al
   14003cb90:	call   0x14143cf6a
   14003cb95:	add    BYTE PTR [rax],al
   14003cb97:	add    BYTE PTR [rdi+0x0],ch
   14003cb9a:	add    BYTE PTR [rax],al
   14003cb9c:	add    BYTE PTR [rax],al
   14003cb9e:	add    BYTE PTR [rax],al
   14003cba0:	clc    
   14003cba1:	(bad)  
   14003cba2:	add    eax,DWORD PTR [rax+0x1]
   14003cba5:	add    BYTE PTR [rax],al
   14003cba7:	add    BYTE PTR [rbx],al
   14003cba9:	add    BYTE PTR [rax],al
   14003cbab:	add    BYTE PTR [rax],al
   14003cbad:	add    BYTE PTR [rax],al
   14003cbaf:	add    BYTE PTR [rax],cl
   14003cbb1:	(bad)  
   14003cbb2:	add    eax,DWORD PTR [rax+0x1]
   14003cbb5:	add    BYTE PTR [rax],al
   14003cbb7:	add    dl,ah
   14003cbb9:	add    BYTE PTR [rax],al
   14003cbbb:	add    BYTE PTR [rax],al
   14003cbbd:	add    BYTE PTR [rax],al
   14003cbbf:	add    BYTE PTR [rax],bl
   14003cbc1:	(bad)  
   14003cbc2:	add    eax,DWORD PTR [rax+0x1]
   14003cbc5:	add    BYTE PTR [rax],al
   14003cbc7:	add    BYTE PTR [rax+0x0],dl
   14003cbcd:	add    BYTE PTR [rax],al
   14003cbcf:	add    BYTE PTR [rax],ch
   14003cbd1:	(bad)  
   14003cbd2:	add    eax,DWORD PTR [rax+0x1]
   14003cbd5:	add    BYTE PTR [rax],al
   14003cbd7:	add    BYTE PTR [rcx+0x0],ah
   14003cbdd:	add    BYTE PTR [rax],al
   14003cbdf:	add    BYTE PTR [rax],bh
   14003cbe1:	(bad)  
   14003cbe2:	add    eax,DWORD PTR [rax+0x1]
   14003cbe5:	add    BYTE PTR [rax],al
   14003cbe7:	add    BYTE PTR [rdx+0x0],dh
   14003cbed:	add    BYTE PTR [rax],al
   14003cbef:	add    BYTE PTR [rax-0x2a],cl
   14003cbf2:	add    eax,DWORD PTR [rax+0x1]
   14003cbf5:	add    BYTE PTR [rax],al
   14003cbf7:	add    BYTE PTR [rdx+0x0],ch
   14003cbfd:	add    BYTE PTR [rax],al
   14003cbff:	add    BYTE PTR [rax-0x2a],bl
   14003cc02:	add    eax,DWORD PTR [rax+0x1]
   14003cc05:	add    BYTE PTR [rax],al
   14003cc07:	add    BYTE PTR [rsi+0x0],al
   14003cc0a:	add    BYTE PTR [rax],al
   14003cc0c:	add    BYTE PTR [rax],al
   14003cc0e:	add    BYTE PTR [rax],al
   14003cc10:	push   0x14003d6
   14003cc15:	add    BYTE PTR [rax],al
   14003cc17:	add    BYTE PTR [rax+0x0],dh
   14003cc1a:	add    BYTE PTR [rax],al
   14003cc1c:	add    BYTE PTR [rax],al
   14003cc1e:	add    BYTE PTR [rax],al
   14003cc20:	(bad)  
   14003cc21:	add    BYTE PTR [rsi+0x0],ah
   14003cc24:	sub    eax,0x61007a00
   14003cc29:	add    BYTE PTR [rax],al
   14003cc2b:	add    BYTE PTR [rax],al
   14003cc2d:	add    BYTE PTR [rax],al
   14003cc2f:	add    BYTE PTR [rcx+0x0],ah
   14003cc32:	jb     0x14003cc34
   14003cc34:	sub    eax,0x65006100
   14003cc39:	add    BYTE PTR [rax],al
   14003cc3b:	add    BYTE PTR [rax],al
   14003cc3d:	add    BYTE PTR [rax],al
   14003cc3f:	add    BYTE PTR [rcx+0x0],ah
   14003cc42:	jb     0x14003cc44
   14003cc44:	sub    eax,0x68006200
   14003cc49:	add    BYTE PTR [rax],al
   14003cc4b:	add    BYTE PTR [rax],al
   14003cc4d:	add    BYTE PTR [rax],al
   14003cc4f:	add    BYTE PTR [rcx+0x0],ah
   14003cc52:	jb     0x14003cc54
   14003cc54:	sub    eax,0x7a006400
   14003cc59:	add    BYTE PTR [rax],al
   14003cc5b:	add    BYTE PTR [rax],al
   14003cc5d:	add    BYTE PTR [rax],al
   14003cc5f:	add    BYTE PTR [rcx+0x0],ah
   14003cc62:	jb     0x14003cc64
   14003cc64:	sub    eax,0x67006500
   14003cc69:	add    BYTE PTR [rax],al
   14003cc6b:	add    BYTE PTR [rax],al
   14003cc6d:	add    BYTE PTR [rax],al
   14003cc6f:	add    BYTE PTR [rcx+0x0],ah
   14003cc72:	jb     0x14003cc74
   14003cc74:	sub    eax,0x71006900
   14003cc79:	add    BYTE PTR [rax],al
   14003cc7b:	add    BYTE PTR [rax],al
   14003cc7d:	add    BYTE PTR [rax],al
   14003cc7f:	add    BYTE PTR [rcx+0x0],ah
   14003cc82:	jb     0x14003cc84
   14003cc84:	sub    eax,0x6f006a00
   14003cc89:	add    BYTE PTR [rax],al
   14003cc8b:	add    BYTE PTR [rax],al
   14003cc8d:	add    BYTE PTR [rax],al
   14003cc8f:	add    BYTE PTR [rcx+0x0],ah
   14003cc92:	jb     0x14003cc94
   14003cc94:	sub    eax,0x77006b00
   14003cc99:	add    BYTE PTR [rax],al
   14003cc9b:	add    BYTE PTR [rax],al
   14003cc9d:	add    BYTE PTR [rax],al
   14003cc9f:	add    BYTE PTR [rcx+0x0],ah
   14003cca2:	jb     0x14003cca4
   14003cca4:	sub    eax,0x62006c00
   14003cca9:	add    BYTE PTR [rax],al
   14003ccab:	add    BYTE PTR [rax],al
   14003ccad:	add    BYTE PTR [rax],al
   14003ccaf:	add    BYTE PTR [rcx+0x0],ah
   14003ccb2:	jb     0x14003ccb4
   14003ccb4:	sub    eax,0x79006c00
   14003ccb9:	add    BYTE PTR [rax],al
   14003ccbb:	add    BYTE PTR [rax],al
   14003ccbd:	add    BYTE PTR [rax],al
   14003ccbf:	add    BYTE PTR [rcx+0x0],ah
   14003ccc2:	jb     0x14003ccc4
   14003ccc4:	sub    eax,0x61006d00
   14003ccc9:	add    BYTE PTR [rax],al
   14003cccb:	add    BYTE PTR [rax],al
   14003cccd:	add    BYTE PTR [rax],al
   14003cccf:	add    BYTE PTR [rcx+0x0],ah
   14003ccd2:	jb     0x14003ccd4
   14003ccd4:	sub    eax,0x6d006f00
   14003ccd9:	add    BYTE PTR [rax],al
   14003ccdb:	add    BYTE PTR [rax],al
   14003ccdd:	add    BYTE PTR [rax],al
   14003ccdf:	add    BYTE PTR [rcx+0x0],ah
   14003cce2:	jb     0x14003cce4
   14003cce4:	sub    eax,0x61007100
   14003cce9:	add    BYTE PTR [rax],al
   14003cceb:	add    BYTE PTR [rax],al
   14003cced:	add    BYTE PTR [rax],al
   14003ccef:	add    BYTE PTR [rcx+0x0],ah
   14003ccf2:	jb     0x14003ccf4
   14003ccf4:	sub    eax,0x61007300
   14003ccf9:	add    BYTE PTR [rax],al
   14003ccfb:	add    BYTE PTR [rax],al
   14003ccfd:	add    BYTE PTR [rax],al
   14003ccff:	add    BYTE PTR [rcx+0x0],ah
   14003cd02:	jb     0x14003cd04
   14003cd04:	sub    eax,0x79007300
   14003cd09:	add    BYTE PTR [rax],al
   14003cd0b:	add    BYTE PTR [rax],al
   14003cd0d:	add    BYTE PTR [rax],al
   14003cd0f:	add    BYTE PTR [rcx+0x0],ah
   14003cd12:	jb     0x14003cd14
   14003cd14:	sub    eax,0x6e007400
   14003cd19:	add    BYTE PTR [rax],al
   14003cd1b:	add    BYTE PTR [rax],al
   14003cd1d:	add    BYTE PTR [rax],al
   14003cd1f:	add    BYTE PTR [rcx+0x0],ah
   14003cd22:	jb     0x14003cd24
   14003cd24:	sub    eax,0x65007900
   14003cd29:	add    BYTE PTR [rax],al
   14003cd2b:	add    BYTE PTR [rax],al
   14003cd2d:	add    BYTE PTR [rax],al
   14003cd2f:	add    BYTE PTR [rcx+0x0],ah
   14003cd32:	jp     0x14003cd34
   14003cd34:	sub    eax,0x7a006100
   14003cd39:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b904303f
   14003cd3f:	add    BYTE PTR [rdx+0x0],dh
   14003cd42:	ins    BYTE PTR es:[rdi],dx
   14003cd43:	add    BYTE PTR [rax],al
   14003cd45:	add    BYTE PTR [rax],al
   14003cd47:	add    BYTE PTR [rcx+0x0],ah
   14003cd4a:	jp     0x14003cd4c
   14003cd4c:	sub    eax,0x7a006100
   14003cd51:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a1043957
   14003cd57:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003cd5b:	add    BYTE PTR [rax],al
   14003cd5d:	add    BYTE PTR [rax],al
   14003cd5f:	add    BYTE PTR [rdx+0x0],ah
   14003cd62:	add    BYTE PTR gs:[rip+0x79006200],ch        # 0x1b9042f69
   14003cd69:	add    BYTE PTR [rax],al
   14003cd6b:	add    BYTE PTR [rax],al
   14003cd6d:	add    BYTE PTR [rax],al
   14003cd6f:	add    BYTE PTR [rdx+0x0],ah
   14003cd72:	add    BYTE PTR [eip+0x67006200],ch        # 0x1a7042f79
   14003cd79:	add    BYTE PTR [rax],al
   14003cd7b:	add    BYTE PTR [rax],al
   14003cd7d:	add    BYTE PTR [rax],al
   14003cd7f:	add    BYTE PTR [rdx+0x0],ah
   14003cd82:	outs   dx,BYTE PTR ds:[rsi]
   14003cd83:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae043689
   14003cd89:	add    BYTE PTR [rax],al
   14003cd8b:	add    BYTE PTR [rax],al
   14003cd8d:	add    BYTE PTR [rax],al
   14003cd8f:	add    BYTE PTR [rdx+0x0],ah
   14003cd92:	jae    0x14003cd94
   14003cd94:	sub    eax,0x61006200
   14003cd99:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a104399f
   14003cd9f:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003cda3:	add    BYTE PTR [rax],al
   14003cda5:	add    BYTE PTR [rax],al
   14003cda7:	add    BYTE PTR [rbx+0x0],ah
   14003cdaa:	(bad)  
   14003cdab:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b30432b1
   14003cdb1:	add    BYTE PTR [rax],al
   14003cdb3:	add    BYTE PTR [rax],al
   14003cdb5:	add    BYTE PTR [rax],al
   14003cdb7:	add    BYTE PTR [rbx+0x0],ah
   14003cdba:	jae    0x14003cdbc
   14003cdbc:	sub    eax,0x7a006300
   14003cdc1:	add    BYTE PTR [rax],al
   14003cdc3:	add    BYTE PTR [rax],al
   14003cdc5:	add    BYTE PTR [rax],al
   14003cdc7:	add    BYTE PTR [rbx+0x0],ah
   14003cdca:	jns    0x14003cdcc
   14003cdcc:	sub    eax,0x62006700
   14003cdd1:	add    BYTE PTR [rax],al
   14003cdd3:	add    BYTE PTR [rax],al
   14003cdd5:	add    BYTE PTR [rax],al
   14003cdd7:	add    BYTE PTR [rax+rax*1+0x61],ah
   14003cddb:	add    BYTE PTR [rip+0x6b006400],ch        # 0x1ab0431e1
   14003cde1:	add    BYTE PTR [rax],al
   14003cde3:	add    BYTE PTR [rax],al
   14003cde5:	add    BYTE PTR [rax],al
   14003cde7:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003cdeb:	add    BYTE PTR [rip+0x74006100],ch        # 0x1b4042ef1
   14003cdf1:	add    BYTE PTR [rax],al
   14003cdf3:	add    BYTE PTR [rax],al
   14003cdf5:	add    BYTE PTR [rax],al
   14003cdf7:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003cdfb:	add    BYTE PTR [rip+0x68006300],ch        # 0x1a8043101
   14003ce01:	add    BYTE PTR [rax],al
   14003ce03:	add    BYTE PTR [rax],al
   14003ce05:	add    BYTE PTR [rax],al
   14003ce07:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003ce0b:	add    BYTE PTR [rip+0x65006400],ch        # 0x1a5043211
   14003ce11:	add    BYTE PTR [rax],al
   14003ce13:	add    BYTE PTR [rax],al
   14003ce15:	add    BYTE PTR [rax],al
   14003ce17:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003ce1b:	add    BYTE PTR [rip+0x69006c00],ch        # 0x1a9043a21
   14003ce21:	add    BYTE PTR [rax],al
   14003ce23:	add    BYTE PTR [rax],al
   14003ce25:	add    BYTE PTR [rax],al
   14003ce27:	add    BYTE PTR [rax+rax*1+0x65],ah
   14003ce2b:	add    BYTE PTR [rip+0x75006c00],ch        # 0x1b5043a31
   14003ce31:	add    BYTE PTR [rax],al
   14003ce33:	add    BYTE PTR [rax],al
   14003ce35:	add    BYTE PTR [rax],al
   14003ce37:	add    BYTE PTR [rax+rax*1+0x69],ah
   14003ce3b:	add    BYTE PTR [rsi+0x0],dh
   14003ce3e:	sub    eax,0x76006d00
   14003ce43:	add    BYTE PTR [rax],al
   14003ce45:	add    BYTE PTR [rax],al
   14003ce47:	add    BYTE PTR [rbp+0x0],ah
   14003ce4a:	ins    BYTE PTR es:[rdi],dx
   14003ce4b:	add    BYTE PTR [rip+0x72006700],ch        # 0x1b2043551
   14003ce51:	add    BYTE PTR [rax],al
   14003ce53:	add    BYTE PTR [rax],al
   14003ce55:	add    BYTE PTR [rax],al
   14003ce57:	add    BYTE PTR [rbp+0x0],ah
   14003ce5a:	outs   dx,BYTE PTR ds:[rsi]
   14003ce5b:	add    BYTE PTR [rip+0x75006100],ch        # 0x1b5042f61
   14003ce61:	add    BYTE PTR [rax],al
   14003ce63:	add    BYTE PTR [rax],al
   14003ce65:	add    BYTE PTR [rax],al
   14003ce67:	add    BYTE PTR [rbp+0x0],ah
   14003ce6a:	outs   dx,BYTE PTR ds:[rsi]
   14003ce6b:	add    BYTE PTR [rip+0x7a006200],ch        # 0x1ba043071
   14003ce71:	add    BYTE PTR [rax],al
   14003ce73:	add    BYTE PTR [rax],al
   14003ce75:	add    BYTE PTR [rax],al
   14003ce77:	add    BYTE PTR [rbp+0x0],ah
   14003ce7a:	outs   dx,BYTE PTR ds:[rsi]
   14003ce7b:	add    BYTE PTR [rip+0x61006300],ch        # 0x1a1043181
   14003ce81:	add    BYTE PTR [rax],al
   14003ce83:	add    BYTE PTR [rax],al
   14003ce85:	add    BYTE PTR [rax],al
   14003ce87:	add    BYTE PTR [rbp+0x0],ah
   14003ce8a:	outs   dx,BYTE PTR ds:[rsi]
   14003ce8b:	add    BYTE PTR [rip+0x62006300],ch        # 0x1a2043191
   14003ce91:	add    BYTE PTR [rax],al
   14003ce93:	add    BYTE PTR [rax],al
   14003ce95:	add    BYTE PTR [rax],al
   14003ce97:	add    BYTE PTR [rbp+0x0],ah
   14003ce9a:	outs   dx,BYTE PTR ds:[rsi]
   14003ce9b:	add    BYTE PTR [rip+0x62006700],ch        # 0x1a20435a1
   14003cea1:	add    BYTE PTR [rax],al
   14003cea3:	add    BYTE PTR [rax],al
   14003cea5:	add    BYTE PTR [rax],al
   14003cea7:	add    BYTE PTR [rbp+0x0],ah
   14003ceaa:	outs   dx,BYTE PTR ds:[rsi]
   14003ceab:	add    BYTE PTR [rip+0x65006900],ch        # 0x1a50437b1
   14003ceb1:	add    BYTE PTR [rax],al
   14003ceb3:	add    BYTE PTR [rax],al
   14003ceb5:	add    BYTE PTR [rax],al
   14003ceb7:	add    BYTE PTR [rbp+0x0],ah
   14003ceba:	outs   dx,BYTE PTR ds:[rsi]
   14003cebb:	add    BYTE PTR [rip+0x6d006a00],ch        # 0x1ad0438c1
   14003cec1:	add    BYTE PTR [rax],al
   14003cec3:	add    BYTE PTR [rax],al
   14003cec5:	add    BYTE PTR [rax],al
   14003cec7:	add    BYTE PTR [rbp+0x0],ah
   14003ceca:	outs   dx,BYTE PTR ds:[rsi]
   14003cecb:	add    BYTE PTR [rip+0x7a006e00],ch        # 0x1ba043cd1
   14003ced1:	add    BYTE PTR [rax],al
   14003ced3:	add    BYTE PTR [rax],al
   14003ced5:	add    BYTE PTR [rax],al
   14003ced7:	add    BYTE PTR [rbp+0x0],ah
   14003ceda:	outs   dx,BYTE PTR ds:[rsi]
   14003cedb:	add    BYTE PTR [rip+0x68007000],ch        # 0x1a8043ee1
   14003cee1:	add    BYTE PTR [rax],al
   14003cee3:	add    BYTE PTR [rax],al
   14003cee5:	add    BYTE PTR [rax],al
   14003cee7:	add    BYTE PTR [rbp+0x0],ah
   14003ceea:	outs   dx,BYTE PTR ds:[rsi]
   14003ceeb:	add    BYTE PTR [rip+0x74007400],ch        # 0x1b40442f1
   14003cef1:	add    BYTE PTR [rax],al
   14003cef3:	add    BYTE PTR [rax],al
   14003cef5:	add    BYTE PTR [rax],al
   14003cef7:	add    BYTE PTR [rbp+0x0],ah
   14003cefa:	outs   dx,BYTE PTR ds:[rsi]
   14003cefb:	add    BYTE PTR [rip+0x73007500],ch        # 0x1b3044401
   14003cf01:	add    BYTE PTR [rax],al
   14003cf03:	add    BYTE PTR [rax],al
   14003cf05:	add    BYTE PTR [rax],al
   14003cf07:	add    BYTE PTR [rbp+0x0],ah
   14003cf0a:	outs   dx,BYTE PTR ds:[rsi]
   14003cf0b:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a1044911
   14003cf11:	add    BYTE PTR [rax],al
   14003cf13:	add    BYTE PTR [rax],al
   14003cf15:	add    BYTE PTR [rax],al
   14003cf17:	add    BYTE PTR [rbp+0x0],ah
   14003cf1a:	outs   dx,BYTE PTR ds:[rsi]
   14003cf1b:	add    BYTE PTR [rip+0x77007a00],ch        # 0x1b7044921
   14003cf21:	add    BYTE PTR [rax],al
   14003cf23:	add    BYTE PTR [rax],al
   14003cf25:	add    BYTE PTR [rax],al
   14003cf27:	add    BYTE PTR [rbp+0x0],ah
   14003cf2a:	jae    0x14003cf2c
   14003cf2c:	sub    eax,0x72006100
   14003cf31:	add    BYTE PTR [rax],al
   14003cf33:	add    BYTE PTR [rax],al
   14003cf35:	add    BYTE PTR [rax],al
   14003cf37:	add    BYTE PTR [rbp+0x0],ah
   14003cf3a:	jae    0x14003cf3c
   14003cf3c:	sub    eax,0x6f006200
   14003cf41:	add    BYTE PTR [rax],al
   14003cf43:	add    BYTE PTR [rax],al
   14003cf45:	add    BYTE PTR [rax],al
   14003cf47:	add    BYTE PTR [rbp+0x0],ah
   14003cf4a:	jae    0x14003cf4c
   14003cf4c:	sub    eax,0x6c006300
   14003cf51:	add    BYTE PTR [rax],al
   14003cf53:	add    BYTE PTR [rax],al
   14003cf55:	add    BYTE PTR [rax],al
   14003cf57:	add    BYTE PTR [rbp+0x0],ah
   14003cf5a:	jae    0x14003cf5c
   14003cf5c:	sub    eax,0x6f006300
   14003cf61:	add    BYTE PTR [rax],al
   14003cf63:	add    BYTE PTR [rax],al
   14003cf65:	add    BYTE PTR [rax],al
   14003cf67:	add    BYTE PTR [rbp+0x0],ah
   14003cf6a:	jae    0x14003cf6c
   14003cf6c:	sub    eax,0x72006300
   14003cf71:	add    BYTE PTR [rax],al
   14003cf73:	add    BYTE PTR [rax],al
   14003cf75:	add    BYTE PTR [rax],al
   14003cf77:	add    BYTE PTR [rbp+0x0],ah
   14003cf7a:	jae    0x14003cf7c
   14003cf7c:	sub    eax,0x6f006400
   14003cf81:	add    BYTE PTR [rax],al
   14003cf83:	add    BYTE PTR [rax],al
   14003cf85:	add    BYTE PTR [rax],al
   14003cf87:	add    BYTE PTR [rbp+0x0],ah
   14003cf8a:	jae    0x14003cf8c
   14003cf8c:	sub    eax,0x63006500
   14003cf91:	add    BYTE PTR [rax],al
   14003cf93:	add    BYTE PTR [rax],al
   14003cf95:	add    BYTE PTR [rax],al
   14003cf97:	add    BYTE PTR [rbp+0x0],ah
   14003cf9a:	jae    0x14003cf9c
   14003cf9c:	sub    eax,0x73006500
   14003cfa1:	add    BYTE PTR [rax],al
   14003cfa3:	add    BYTE PTR [rax],al
   14003cfa5:	add    BYTE PTR [rax],al
   14003cfa7:	add    BYTE PTR [rbp+0x0],ah
   14003cfaa:	jae    0x14003cfac
   14003cfac:	sub    eax,0x74006700
   14003cfb1:	add    BYTE PTR [rax],al
   14003cfb3:	add    BYTE PTR [rax],al
   14003cfb5:	add    BYTE PTR [rax],al
   14003cfb7:	add    BYTE PTR [rbp+0x0],ah
   14003cfba:	jae    0x14003cfbc
   14003cfbc:	sub    eax,0x6e006800
   14003cfc1:	add    BYTE PTR [rax],al
   14003cfc3:	add    BYTE PTR [rax],al
   14003cfc5:	add    BYTE PTR [rax],al
   14003cfc7:	add    BYTE PTR [rbp+0x0],ah
   14003cfca:	jae    0x14003cfcc
   14003cfcc:	sub    eax,0x78006d00
   14003cfd1:	add    BYTE PTR [rax],al
   14003cfd3:	add    BYTE PTR [rax],al
   14003cfd5:	add    BYTE PTR [rax],al
   14003cfd7:	add    BYTE PTR [rbp+0x0],ah
   14003cfda:	jae    0x14003cfdc
   14003cfdc:	sub    eax,0x69006e00
   14003cfe1:	add    BYTE PTR [rax],al
   14003cfe3:	add    BYTE PTR [rax],al
   14003cfe5:	add    BYTE PTR [rax],al
   14003cfe7:	add    BYTE PTR [rbp+0x0],ah
   14003cfea:	jae    0x14003cfec
   14003cfec:	sub    eax,0x61007000
   14003cff1:	add    BYTE PTR [rax],al
   14003cff3:	add    BYTE PTR [rax],al
   14003cff5:	add    BYTE PTR [rax],al
   14003cff7:	add    BYTE PTR [rbp+0x0],ah
   14003cffa:	jae    0x14003cffc
   14003cffc:	sub    eax,0x65007000
   14003d001:	add    BYTE PTR [rax],al
   14003d003:	add    BYTE PTR [rax],al
   14003d005:	add    BYTE PTR [rax],al
   14003d007:	add    BYTE PTR [rbp+0x0],ah
   14003d00a:	jae    0x14003d00c
   14003d00c:	sub    eax,0x72007000
   14003d011:	add    BYTE PTR [rax],al
   14003d013:	add    BYTE PTR [rax],al
   14003d015:	add    BYTE PTR [rax],al
   14003d017:	add    BYTE PTR [rbp+0x0],ah
   14003d01a:	jae    0x14003d01c
   14003d01c:	sub    eax,0x79007000
   14003d021:	add    BYTE PTR [rax],al
   14003d023:	add    BYTE PTR [rax],al
   14003d025:	add    BYTE PTR [rax],al
   14003d027:	add    BYTE PTR [rbp+0x0],ah
   14003d02a:	jae    0x14003d02c
   14003d02c:	sub    eax,0x76007300
   14003d031:	add    BYTE PTR [rax],al
   14003d033:	add    BYTE PTR [rax],al
   14003d035:	add    BYTE PTR [rax],al
   14003d037:	add    BYTE PTR [rbp+0x0],ah
   14003d03a:	jae    0x14003d03c
   14003d03c:	sub    eax,0x79007500
   14003d041:	add    BYTE PTR [rax],al
   14003d043:	add    BYTE PTR [rax],al
   14003d045:	add    BYTE PTR [rax],al
   14003d047:	add    BYTE PTR [rbp+0x0],ah
   14003d04a:	jae    0x14003d04c
   14003d04c:	sub    eax,0x65007600
   14003d051:	add    BYTE PTR [rax],al
   14003d053:	add    BYTE PTR [rax],al
   14003d055:	add    BYTE PTR [rax],al
   14003d057:	add    BYTE PTR [rbp+0x0],ah
   14003d05a:	je     0x14003d05c
   14003d05c:	sub    eax,0x65006500
   14003d061:	add    BYTE PTR [rax],al
   14003d063:	add    BYTE PTR [rax],al
   14003d065:	add    BYTE PTR [rax],al
   14003d067:	add    BYTE PTR [rbp+0x0],ah
   14003d06a:	jne    0x14003d06c
   14003d06c:	sub    eax,0x73006500
   14003d071:	add    BYTE PTR [rax],al
   14003d073:	add    BYTE PTR [rax],al
   14003d075:	add    BYTE PTR [rax],al
   14003d077:	add    BYTE PTR [rsi+0x0],ah
   14003d07a:	(bad)  
   14003d07b:	add    BYTE PTR [rip+0x72006900],ch        # 0x1b2043981
   14003d081:	add    BYTE PTR [rax],al
   14003d083:	add    BYTE PTR [rax],al
   14003d085:	add    BYTE PTR [rax],al
   14003d087:	add    BYTE PTR [rsi+0x0],ah
   14003d08a:	imul   eax,DWORD PTR [rax],0x66002d
   14003d090:	imul   eax,DWORD PTR [rax],0x0
   14003d096:	add    BYTE PTR [rax],al
   14003d098:	data16 add BYTE PTR [rdi+0x0],ch
   14003d09c:	sub    eax,0x6f006600
   14003d0a1:	add    BYTE PTR [rax],al
   14003d0a3:	add    BYTE PTR [rax],al
   14003d0a5:	add    BYTE PTR [rax],al
   14003d0a7:	add    BYTE PTR [rsi+0x0],ah
   14003d0aa:	jb     0x14003d0ac
   14003d0ac:	sub    eax,0x65006200
   14003d0b1:	add    BYTE PTR [rax],al
   14003d0b3:	add    BYTE PTR [rax],al
   14003d0b5:	add    BYTE PTR [rax],al
   14003d0b7:	add    BYTE PTR [rsi+0x0],ah
   14003d0ba:	jb     0x14003d0bc
   14003d0bc:	sub    eax,0x61006300
   14003d0c1:	add    BYTE PTR [rax],al
   14003d0c3:	add    BYTE PTR [rax],al
   14003d0c5:	add    BYTE PTR [rax],al
   14003d0c7:	add    BYTE PTR [rsi+0x0],ah
   14003d0ca:	jb     0x14003d0cc
   14003d0cc:	sub    eax,0x68006300
   14003d0d1:	add    BYTE PTR [rax],al
   14003d0d3:	add    BYTE PTR [rax],al
   14003d0d5:	add    BYTE PTR [rax],al
   14003d0d7:	add    BYTE PTR [rsi+0x0],ah
   14003d0da:	jb     0x14003d0dc
   14003d0dc:	sub    eax,0x72006600
   14003d0e1:	add    BYTE PTR [rax],al
   14003d0e3:	add    BYTE PTR [rax],al
   14003d0e5:	add    BYTE PTR [rax],al
   14003d0e7:	add    BYTE PTR [rsi+0x0],ah
   14003d0ea:	jb     0x14003d0ec
   14003d0ec:	sub    eax,0x75006c00
   14003d0f1:	add    BYTE PTR [rax],al
   14003d0f3:	add    BYTE PTR [rax],al
   14003d0f5:	add    BYTE PTR [rax],al
   14003d0f7:	add    BYTE PTR [rsi+0x0],ah
   14003d0fa:	jb     0x14003d0fc
   14003d0fc:	sub    eax,0x63006d00
   14003d101:	add    BYTE PTR [rax],al
   14003d103:	add    BYTE PTR [rax],al
   14003d105:	add    BYTE PTR [rax],al
   14003d107:	add    BYTE PTR [rdi+0x0],ah
   14003d10a:	ins    BYTE PTR es:[rdi],dx
   14003d10b:	add    BYTE PTR [rip+0x73006500],ch        # 0x1b3043611
   14003d111:	add    BYTE PTR [rax],al
   14003d113:	add    BYTE PTR [rax],al
   14003d115:	add    BYTE PTR [rax],al
   14003d117:	add    BYTE PTR [rdi+0x0],ah
   14003d11a:	jne    0x14003d11c
   14003d11c:	sub    eax,0x6e006900
   14003d121:	add    BYTE PTR [rax],al
   14003d123:	add    BYTE PTR [rax],al
   14003d125:	add    BYTE PTR [rax],al
   14003d127:	add    BYTE PTR [rax+0x0],ch
   14003d12a:	add    BYTE PTR gs:[rip+0x6c006900],ch        # 0x1ac043a31
   14003d131:	add    BYTE PTR [rax],al
   14003d133:	add    BYTE PTR [rax],al
   14003d135:	add    BYTE PTR [rax],al
   14003d137:	add    BYTE PTR [rax+0x0],ch
   14003d13a:	imul   eax,DWORD PTR [rax],0x69002d
   14003d140:	outs   dx,BYTE PTR ds:[rsi]
   14003d141:	add    BYTE PTR [rax],al
   14003d143:	add    BYTE PTR [rax],al
   14003d145:	add    BYTE PTR [rax],al
   14003d147:	add    BYTE PTR [rax+0x0],ch
   14003d14a:	jb     0x14003d14c
   14003d14c:	sub    eax,0x61006200
   14003d151:	add    BYTE PTR [rax],al
   14003d153:	add    BYTE PTR [rax],al
   14003d155:	add    BYTE PTR [rax],al
   14003d157:	add    BYTE PTR [rax+0x0],ch
   14003d15a:	jb     0x14003d15c
   14003d15c:	sub    eax,0x72006800
   14003d161:	add    BYTE PTR [rax],al
   14003d163:	add    BYTE PTR [rax],al
   14003d165:	add    BYTE PTR [rax],al
   14003d167:	add    BYTE PTR [rax+0x0],ch
   14003d16a:	jne    0x14003d16c
   14003d16c:	sub    eax,0x75006800
   14003d171:	add    BYTE PTR [rax],al
   14003d173:	add    BYTE PTR [rax],al
   14003d175:	add    BYTE PTR [rax],al
   14003d177:	add    BYTE PTR [rax+0x0],ch
   14003d17a:	jns    0x14003d17c
   14003d17c:	sub    eax,0x6d006100
   14003d181:	add    BYTE PTR [rax],al
   14003d183:	add    BYTE PTR [rax],al
   14003d185:	add    BYTE PTR [rax],al
   14003d187:	add    BYTE PTR [rcx+0x0],ch
   14003d18a:	add    BYTE PTR fs:[rip+0x64006900],ch        # 0x1a4043a91
   14003d191:	add    BYTE PTR [rax],al
   14003d193:	add    BYTE PTR [rax],al
   14003d195:	add    BYTE PTR [rax],al
   14003d197:	add    BYTE PTR [rcx+0x0],ch
   14003d19a:	jae    0x14003d19c
   14003d19c:	sub    eax,0x73006900
   14003d1a1:	add    BYTE PTR [rax],al
   14003d1a3:	add    BYTE PTR [rax],al
   14003d1a5:	add    BYTE PTR [rax],al
   14003d1a7:	add    BYTE PTR [rcx+0x0],ch
   14003d1aa:	je     0x14003d1ac
   14003d1ac:	sub    eax,0x68006300
   14003d1b1:	add    BYTE PTR [rax],al
   14003d1b3:	add    BYTE PTR [rax],al
   14003d1b5:	add    BYTE PTR [rax],al
   14003d1b7:	add    BYTE PTR [rcx+0x0],ch
   14003d1ba:	je     0x14003d1bc
   14003d1bc:	sub    eax,0x74006900
   14003d1c1:	add    BYTE PTR [rax],al
   14003d1c3:	add    BYTE PTR [rax],al
   14003d1c5:	add    BYTE PTR [rax],al
   14003d1c7:	add    BYTE PTR [rdx+0x0],ch
   14003d1ca:	(bad)  
   14003d1cb:	add    BYTE PTR [rip+0x70006a00],ch        # 0x1b0043bd1
   14003d1d1:	add    BYTE PTR [rax],al
   14003d1d3:	add    BYTE PTR [rax],al
   14003d1d5:	add    BYTE PTR [rax],al
   14003d1d7:	add    BYTE PTR [rbx+0x0],ch
   14003d1da:	(bad)  
   14003d1db:	add    BYTE PTR [rip+0x65006700],ch        # 0x1a50438e1
   14003d1e1:	add    BYTE PTR [rax],al
   14003d1e3:	add    BYTE PTR [rax],al
   14003d1e5:	add    BYTE PTR [rax],al
   14003d1e7:	add    BYTE PTR [rbx+0x0],ch
   14003d1ea:	imul   eax,DWORD PTR [rax],0x2d
   14003d1ed:	add    BYTE PTR [rbx+0x0],ch
   14003d1f0:	jp     0x14003d1f2
   14003d1f2:	add    BYTE PTR [rax],al
   14003d1f4:	add    BYTE PTR [rax],al
   14003d1f6:	add    BYTE PTR [rax],al
   14003d1f8:	imul   eax,DWORD PTR [rax],0x6e
   14003d1fb:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae043b01
   14003d201:	add    BYTE PTR [rax],al
   14003d203:	add    BYTE PTR [rax],al
   14003d205:	add    BYTE PTR [rax],al
   14003d207:	add    BYTE PTR [rbx+0x0],ch
   14003d20a:	outs   dx,DWORD PTR ds:[rsi]
   14003d20b:	add    BYTE PTR [rbx+0x0],ch
   14003d20e:	sub    eax,0x6e006900
   14003d213:	add    BYTE PTR [rax],al
   14003d215:	add    BYTE PTR [rax],al
   14003d217:	add    BYTE PTR [rbx+0x0],ch
   14003d21a:	outs   dx,DWORD PTR ds:[rsi]
   14003d21b:	add    BYTE PTR [rip+0x72006b00],ch        # 0x1b2043d21
   14003d221:	add    BYTE PTR [rax],al
   14003d223:	add    BYTE PTR [rax],al
   14003d225:	add    BYTE PTR [rax],al
   14003d227:	add    BYTE PTR [rbx+0x0],ch
   14003d22a:	jns    0x14003d22c
   14003d22c:	sub    eax,0x67006b00
   14003d231:	add    BYTE PTR [rax],al
   14003d233:	add    BYTE PTR [rax],al
   14003d235:	add    BYTE PTR [rax],al
   14003d237:	add    BYTE PTR [rax+rax*1+0x74],ch
   14003d23b:	add    BYTE PTR [rip+0x74006c00],ch        # 0x1b4043e41
   14003d241:	add    BYTE PTR [rax],al
   14003d243:	add    BYTE PTR [rax],al
   14003d245:	add    BYTE PTR [rax],al
   14003d247:	add    BYTE PTR [rax+rax*1+0x76],ch
   14003d24b:	add    BYTE PTR [rip+0x76006c00],ch        # 0x1b6043e51
   14003d251:	add    BYTE PTR [rax],al
   14003d253:	add    BYTE PTR [rax],al
   14003d255:	add    BYTE PTR [rax],al
   14003d257:	add    BYTE PTR [rbp+0x0],ch
   14003d25a:	imul   eax,DWORD PTR [rax],0x6e002d
   14003d260:	jp     0x14003d262
   14003d262:	add    BYTE PTR [rax],al
   14003d264:	add    BYTE PTR [rax],al
   14003d266:	add    BYTE PTR [rax],al
   14003d268:	ins    DWORD PTR es:[rdi],dx
   14003d269:	add    BYTE PTR [rbx+0x0],ch
   14003d26c:	sub    eax,0x6b006d00
   14003d271:	add    BYTE PTR [rax],al
   14003d273:	add    BYTE PTR [rax],al
   14003d275:	add    BYTE PTR [rax],al
   14003d277:	add    BYTE PTR [rbp+0x0],ch
   14003d27a:	ins    BYTE PTR es:[rdi],dx
   14003d27b:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae043b81
   14003d281:	add    BYTE PTR [rax],al
   14003d283:	add    BYTE PTR [rax],al
   14003d285:	add    BYTE PTR [rax],al
   14003d287:	add    BYTE PTR [rbp+0x0],ch
   14003d28a:	outs   dx,BYTE PTR ds:[rsi]
   14003d28b:	add    BYTE PTR [rip+0x6e006d00],ch        # 0x1ae043f91
   14003d291:	add    BYTE PTR [rax],al
   14003d293:	add    BYTE PTR [rax],al
   14003d295:	add    BYTE PTR [rax],al
   14003d297:	add    BYTE PTR [rbp+0x0],ch
   14003d29a:	jb     0x14003d29c
   14003d29c:	sub    eax,0x6e006900
   14003d2a1:	add    BYTE PTR [rax],al
   14003d2a3:	add    BYTE PTR [rax],al
   14003d2a5:	add    BYTE PTR [rax],al
   14003d2a7:	add    BYTE PTR [rbp+0x0],ch
   14003d2aa:	jae    0x14003d2ac
   14003d2ac:	sub    eax,0x6e006200
   14003d2b1:	add    BYTE PTR [rax],al
   14003d2b3:	add    BYTE PTR [rax],al
   14003d2b5:	add    BYTE PTR [rax],al
   14003d2b7:	add    BYTE PTR [rbp+0x0],ch
   14003d2ba:	jae    0x14003d2bc
   14003d2bc:	sub    eax,0x79006d00
   14003d2c1:	add    BYTE PTR [rax],al
   14003d2c3:	add    BYTE PTR [rax],al
   14003d2c5:	add    BYTE PTR [rax],al
   14003d2c7:	add    BYTE PTR [rbp+0x0],ch
   14003d2ca:	je     0x14003d2cc
   14003d2cc:	sub    eax,0x74006d00
   14003d2d1:	add    BYTE PTR [rax],al
   14003d2d3:	add    BYTE PTR [rax],al
   14003d2d5:	add    BYTE PTR [rax],al
   14003d2d7:	add    BYTE PTR [rsi+0x0],ch
   14003d2da:	(bad)  
   14003d2db:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af0440e1
   14003d2e1:	add    BYTE PTR [rax],al
   14003d2e3:	add    BYTE PTR [rax],al
   14003d2e5:	add    BYTE PTR [rax],al
   14003d2e7:	add    BYTE PTR [rsi+0x0],ch
   14003d2ea:	ins    BYTE PTR es:[rdi],dx
   14003d2eb:	add    BYTE PTR [rip+0x65006200],ch        # 0x1a50434f1
   14003d2f1:	add    BYTE PTR [rax],al
   14003d2f3:	add    BYTE PTR [rax],al
   14003d2f5:	add    BYTE PTR [rax],al
   14003d2f7:	add    BYTE PTR [rsi+0x0],ch
   14003d2fa:	ins    BYTE PTR es:[rdi],dx
   14003d2fb:	add    BYTE PTR [rip+0x6c006e00],ch        # 0x1ac044101
   14003d301:	add    BYTE PTR [rax],al
   14003d303:	add    BYTE PTR [rax],al
   14003d305:	add    BYTE PTR [rax],al
   14003d307:	add    BYTE PTR [rsi+0x0],ch
   14003d30a:	outs   dx,BYTE PTR ds:[rsi]
   14003d30b:	add    BYTE PTR [rip+0x6f006e00],ch        # 0x1af044111
   14003d311:	add    BYTE PTR [rax],al
   14003d313:	add    BYTE PTR [rax],al
   14003d315:	add    BYTE PTR [rax],al
   14003d317:	add    BYTE PTR [rsi+0x0],ch
   14003d31a:	jae    0x14003d31c
   14003d31c:	sub    eax,0x61007a00
   14003d321:	add    BYTE PTR [rax],al
   14003d323:	add    BYTE PTR [rax],al
   14003d325:	add    BYTE PTR [rax],al
   14003d327:	add    BYTE PTR [rax+0x0],dh
   14003d32a:	(bad)  
   14003d32b:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae043c31
   14003d331:	add    BYTE PTR [rax],al
   14003d333:	add    BYTE PTR [rax],al
   14003d335:	add    BYTE PTR [rax],al
   14003d337:	add    BYTE PTR [rax+0x0],dh
   14003d33a:	ins    BYTE PTR es:[rdi],dx
   14003d33b:	add    BYTE PTR [rip+0x6c007000],ch        # 0x1ac044341
   14003d341:	add    BYTE PTR [rax],al
   14003d343:	add    BYTE PTR [rax],al
   14003d345:	add    BYTE PTR [rax],al
   14003d347:	add    BYTE PTR [rax+0x0],dh
   14003d34a:	je     0x14003d34c
   14003d34c:	sub    eax,0x72006200
   14003d351:	add    BYTE PTR [rax],al
   14003d353:	add    BYTE PTR [rax],al
   14003d355:	add    BYTE PTR [rax],al
   14003d357:	add    BYTE PTR [rax+0x0],dh
   14003d35a:	je     0x14003d35c
   14003d35c:	sub    eax,0x74007000
   14003d361:	add    BYTE PTR [rax],al
   14003d363:	add    BYTE PTR [rax],al
   14003d365:	add    BYTE PTR [rax],al
   14003d367:	add    BYTE PTR [rcx+0x0],dh
   14003d36a:	jne    0x14003d36c
   14003d36c:	jp     0x14003d36e
   14003d36e:	sub    eax,0x6f006200
   14003d373:	add    BYTE PTR [rax],al
   14003d375:	add    BYTE PTR [rax],al
   14003d377:	add    BYTE PTR [rcx+0x0],dh
   14003d37a:	jne    0x14003d37c
   14003d37c:	jp     0x14003d37e
   14003d37e:	sub    eax,0x63006500
   14003d383:	add    BYTE PTR [rax],al
   14003d385:	add    BYTE PTR [rax],al
   14003d387:	add    BYTE PTR [rcx+0x0],dh
   14003d38a:	jne    0x14003d38c
   14003d38c:	jp     0x14003d38e
   14003d38e:	sub    eax,0x65007000
   14003d393:	add    BYTE PTR [rax],al
   14003d395:	add    BYTE PTR [rax],al
   14003d397:	add    BYTE PTR [rdx+0x0],dh
   14003d39a:	outs   dx,DWORD PTR ds:[rsi]
   14003d39b:	add    BYTE PTR [rip+0x6f007200],ch        # 0x1af0445a1
   14003d3a1:	add    BYTE PTR [rax],al
   14003d3a3:	add    BYTE PTR [rax],al
   14003d3a5:	add    BYTE PTR [rax],al
   14003d3a7:	add    BYTE PTR [rdx+0x0],dh
   14003d3aa:	jne    0x14003d3ac
   14003d3ac:	sub    eax,0x75007200
   14003d3b1:	add    BYTE PTR [rax],al
   14003d3b3:	add    BYTE PTR [rax],al
   14003d3b5:	add    BYTE PTR [rax],al
   14003d3b7:	add    BYTE PTR [rbx+0x0],dh
   14003d3ba:	(bad)  
   14003d3bb:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae043cc1
   14003d3c1:	add    BYTE PTR [rax],al
   14003d3c3:	add    BYTE PTR [rax],al
   14003d3c5:	add    BYTE PTR [rax],al
   14003d3c7:	add    BYTE PTR [rbx+0x0],dh
   14003d3ca:	add    BYTE PTR gs:[rip+0x69006600],ch        # 0x1a90439d1
   14003d3d1:	add    BYTE PTR [rax],al
   14003d3d3:	add    BYTE PTR [rax],al
   14003d3d5:	add    BYTE PTR [rax],al
   14003d3d7:	add    BYTE PTR [rbx+0x0],dh
   14003d3da:	add    BYTE PTR gs:[rip+0x6f006e00],ch        # 0x1af0441e1
   14003d3e1:	add    BYTE PTR [rax],al
   14003d3e3:	add    BYTE PTR [rax],al
   14003d3e5:	add    BYTE PTR [rax],al
   14003d3e7:	add    BYTE PTR [rbx+0x0],dh
   14003d3ea:	add    BYTE PTR gs:[rip+0x65007300],ch        # 0x1a50446f1
   14003d3f1:	add    BYTE PTR [rax],al
   14003d3f3:	add    BYTE PTR [rax],al
   14003d3f5:	add    BYTE PTR [rax],al
   14003d3f7:	add    BYTE PTR [rbx+0x0],dh
   14003d3fa:	imul   eax,DWORD PTR [rax],0x2d
   14003d3fd:	add    BYTE PTR [rbx+0x0],dh
   14003d400:	imul   eax,DWORD PTR [rax],0x0
   14003d403:	add    BYTE PTR [rax],al
   14003d405:	add    BYTE PTR [rax],al
   14003d407:	add    BYTE PTR [rbx+0x0],dh
   14003d40a:	ins    BYTE PTR es:[rdi],dx
   14003d40b:	add    BYTE PTR [rip+0x69007300],ch        # 0x1a9044711
   14003d411:	add    BYTE PTR [rax],al
   14003d413:	add    BYTE PTR [rax],al
   14003d415:	add    BYTE PTR [rax],al
   14003d417:	add    BYTE PTR [rbx+0x0],dh
   14003d41a:	ins    DWORD PTR es:[rdi],dx
   14003d41b:	add    BYTE PTR [rcx+0x0],ah
   14003d41e:	sub    eax,0x6f006e00
   14003d423:	add    BYTE PTR [rax],al
   14003d425:	add    BYTE PTR [rax],al
   14003d427:	add    BYTE PTR [rbx+0x0],dh
   14003d42a:	ins    DWORD PTR es:[rdi],dx
   14003d42b:	add    BYTE PTR [rcx+0x0],ah
   14003d42e:	sub    eax,0x65007300
   14003d433:	add    BYTE PTR [rax],al
   14003d435:	add    BYTE PTR [rax],al
   14003d437:	add    BYTE PTR [rbx+0x0],dh
   14003d43a:	ins    DWORD PTR es:[rdi],dx
   14003d43b:	add    BYTE PTR [rdx+0x0],ch
   14003d43e:	sub    eax,0x6f006e00
   14003d443:	add    BYTE PTR [rax],al
   14003d445:	add    BYTE PTR [rax],al
   14003d447:	add    BYTE PTR [rbx+0x0],dh
   14003d44a:	ins    DWORD PTR es:[rdi],dx
   14003d44b:	add    BYTE PTR [rdx+0x0],ch
   14003d44e:	sub    eax,0x65007300
   14003d453:	add    BYTE PTR [rax],al
   14003d455:	add    BYTE PTR [rax],al
   14003d457:	add    BYTE PTR [rbx+0x0],dh
   14003d45a:	ins    DWORD PTR es:[rdi],dx
   14003d45b:	add    BYTE PTR [rsi+0x0],ch
   14003d45e:	sub    eax,0x69006600
   14003d463:	add    BYTE PTR [rax],al
   14003d465:	add    BYTE PTR [rax],al
   14003d467:	add    BYTE PTR [rbx+0x0],dh
   14003d46a:	ins    DWORD PTR es:[rdi],dx
   14003d46b:	add    BYTE PTR [rbx+0x0],dh
   14003d46e:	sub    eax,0x69006600
   14003d473:	add    BYTE PTR [rax],al
   14003d475:	add    BYTE PTR [rax],al
   14003d477:	add    BYTE PTR [rbx+0x0],dh
   14003d47a:	jno    0x14003d47c
   14003d47c:	sub    eax,0x6c006100
   14003d481:	add    BYTE PTR [rax],al
   14003d483:	add    BYTE PTR [rax],al
   14003d485:	add    BYTE PTR [rax],al
   14003d487:	add    BYTE PTR [rbx+0x0],dh
   14003d48a:	jb     0x14003d48c
   14003d48c:	sub    eax,0x61006200
   14003d491:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b9043797
   14003d497:	add    BYTE PTR [rdx+0x0],dh
   14003d49a:	ins    BYTE PTR es:[rdi],dx
   14003d49b:	add    BYTE PTR [rax],al
   14003d49d:	add    BYTE PTR [rax],al
   14003d49f:	add    BYTE PTR [rbx+0x0],dh
   14003d4a2:	jb     0x14003d4a4
   14003d4a4:	sub    eax,0x61006200
   14003d4a9:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a10440af
   14003d4af:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003d4b3:	add    BYTE PTR [rax],al
   14003d4b5:	add    BYTE PTR [rax],al
   14003d4b7:	add    BYTE PTR [rbx+0x0],dh
   14003d4ba:	jb     0x14003d4bc
   14003d4bc:	sub    eax,0x70007300
   14003d4c1:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b90437c7
   14003d4c7:	add    BYTE PTR [rdx+0x0],dh
   14003d4ca:	ins    BYTE PTR es:[rdi],dx
   14003d4cb:	add    BYTE PTR [rax],al
   14003d4cd:	add    BYTE PTR [rax],al
   14003d4cf:	add    BYTE PTR [rbx+0x0],dh
   14003d4d2:	jb     0x14003d4d4
   14003d4d4:	sub    eax,0x70007300
   14003d4d9:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a10440df
   14003d4df:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003d4e3:	add    BYTE PTR [rax],al
   14003d4e5:	add    BYTE PTR [rax],al
   14003d4e7:	add    BYTE PTR [rbx+0x0],dh
   14003d4ea:	jbe    0x14003d4ec
   14003d4ec:	sub    eax,0x69006600
   14003d4f1:	add    BYTE PTR [rax],al
   14003d4f3:	add    BYTE PTR [rax],al
   14003d4f5:	add    BYTE PTR [rax],al
   14003d4f7:	add    BYTE PTR [rbx+0x0],dh
   14003d4fa:	jbe    0x14003d4fc
   14003d4fc:	sub    eax,0x65007300
   14003d501:	add    BYTE PTR [rax],al
   14003d503:	add    BYTE PTR [rax],al
   14003d505:	add    BYTE PTR [rax],al
   14003d507:	add    BYTE PTR [rbx+0x0],dh
   14003d50a:	ja     0x14003d50c
   14003d50c:	sub    eax,0x65006b00
   14003d511:	add    BYTE PTR [rax],al
   14003d513:	add    BYTE PTR [rax],al
   14003d515:	add    BYTE PTR [rax],al
   14003d517:	add    BYTE PTR [rbx+0x0],dh
   14003d51a:	jns    0x14003d51c
   14003d51c:	jb     0x14003d51e
   14003d51e:	sub    eax,0x79007300
   14003d523:	add    BYTE PTR [rax],al
   14003d525:	add    BYTE PTR [rax],al
   14003d527:	add    BYTE PTR [rax+rax*1+0x61],dh
   14003d52b:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae043e31
   14003d531:	add    BYTE PTR [rax],al
   14003d533:	add    BYTE PTR [rax],al
   14003d535:	add    BYTE PTR [rax],al
   14003d537:	add    BYTE PTR [rax+rax*1+0x65],dh
   14003d53b:	add    BYTE PTR [rip+0x6e006900],ch        # 0x1ae043e41
   14003d541:	add    BYTE PTR [rax],al
   14003d543:	add    BYTE PTR [rax],al
   14003d545:	add    BYTE PTR [rax],al
   14003d547:	add    BYTE PTR [rax+rax*1+0x68],dh
   14003d54b:	add    BYTE PTR [rip+0x68007400],ch        # 0x1a8044951
   14003d551:	add    BYTE PTR [rax],al
   14003d553:	add    BYTE PTR [rax],al
   14003d555:	add    BYTE PTR [rax],al
   14003d557:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003d55b:	add    BYTE PTR [rip+0x61007a00],ch        # 0x1a1044f61
   14003d561:	add    BYTE PTR [rax],al
   14003d563:	add    BYTE PTR [rax],al
   14003d565:	add    BYTE PTR [rax],al
   14003d567:	add    BYTE PTR [rax+rax*1+0x72],dh
   14003d56b:	add    BYTE PTR [rip+0x72007400],ch        # 0x1b2044971
   14003d571:	add    BYTE PTR [rax],al
   14003d573:	add    BYTE PTR [rax],al
   14003d575:	add    BYTE PTR [rax],al
   14003d577:	add    BYTE PTR [rax+rax*1+0x74],dh
   14003d57b:	add    BYTE PTR [rip+0x75007200],ch        # 0x1b5044781
   14003d581:	add    BYTE PTR [rax],al
   14003d583:	add    BYTE PTR [rax],al
   14003d585:	add    BYTE PTR [rax],al
   14003d587:	add    BYTE PTR [rbp+0x0],dh
   14003d58a:	imul   eax,DWORD PTR [rax],0x2d
   14003d58d:	add    BYTE PTR [rbp+0x0],dh
   14003d590:	(bad)  
   14003d591:	add    BYTE PTR [rax],al
   14003d593:	add    BYTE PTR [rax],al
   14003d595:	add    BYTE PTR [rax],al
   14003d597:	add    BYTE PTR [rbp+0x0],dh
   14003d59a:	jb     0x14003d59c
   14003d59c:	sub    eax,0x6b007000
   14003d5a1:	add    BYTE PTR [rax],al
   14003d5a3:	add    BYTE PTR [rax],al
   14003d5a5:	add    BYTE PTR [rax],al
   14003d5a7:	add    BYTE PTR [rbp+0x0],dh
   14003d5aa:	jp     0x14003d5ac
   14003d5ac:	sub    eax,0x7a007500
   14003d5b1:	add    BYTE PTR [rip+0x79006300],ch        # 0x1b90438b7
   14003d5b7:	add    BYTE PTR [rdx+0x0],dh
   14003d5ba:	ins    BYTE PTR es:[rdi],dx
   14003d5bb:	add    BYTE PTR [rax],al
   14003d5bd:	add    BYTE PTR [rax],al
   14003d5bf:	add    BYTE PTR [rbp+0x0],dh
   14003d5c2:	jp     0x14003d5c4
   14003d5c4:	sub    eax,0x7a007500
   14003d5c9:	add    BYTE PTR [rip+0x61006c00],ch        # 0x1a10441cf
   14003d5cf:	add    BYTE PTR [rax+rax*1+0x6e],dh
   14003d5d3:	add    BYTE PTR [rax],al
   14003d5d5:	add    BYTE PTR [rax],al
   14003d5d7:	add    BYTE PTR [rsi+0x0],dh
   14003d5da:	imul   eax,DWORD PTR [rax],0x76002d
   14003d5e0:	outs   dx,BYTE PTR ds:[rsi]
   14003d5e1:	add    BYTE PTR [rax],al
   14003d5e3:	add    BYTE PTR [rax],al
   14003d5e5:	add    BYTE PTR [rax],al
   14003d5e7:	add    BYTE PTR [rax+0x0],bh
   14003d5ea:	push   0x7a002d00
   14003d5ef:	add    BYTE PTR [rcx+0x0],ah
   14003d5f2:	add    BYTE PTR [rax],al
   14003d5f4:	add    BYTE PTR [rax],al
   14003d5f6:	add    BYTE PTR [rax],al
   14003d5f8:	jp     0x14003d5fa
   14003d5fa:	push   0x63002d00
   14003d5ff:	add    BYTE PTR [rax+0x0],ch
   14003d602:	jae    0x14003d604
   14003d604:	add    BYTE PTR [rax],al
   14003d606:	add    BYTE PTR [rax],al
   14003d608:	jp     0x14003d60a
   14003d60a:	push   0x63002d00
   14003d60f:	add    BYTE PTR [rax+0x0],ch
   14003d612:	je     0x14003d614
   14003d614:	add    BYTE PTR [rax],al
   14003d616:	add    BYTE PTR [rax],al
   14003d618:	jp     0x14003d61a
   14003d61a:	push   0x63002d00
   14003d61f:	add    BYTE PTR [rsi+0x0],ch
   14003d622:	add    BYTE PTR [rax],al
   14003d624:	add    BYTE PTR [rax],al
   14003d626:	add    BYTE PTR [rax],al
   14003d628:	jp     0x14003d62a
   14003d62a:	push   0x68002d00
   14003d62f:	add    BYTE PTR [rbx+0x0],ch
   14003d632:	add    BYTE PTR [rax],al
   14003d634:	add    BYTE PTR [rax],al
   14003d636:	add    BYTE PTR [rax],al
   14003d638:	jp     0x14003d63a
   14003d63a:	push   0x6d002d00
   14003d63f:	add    BYTE PTR [rdi+0x0],ch
   14003d642:	add    BYTE PTR [rax],al
   14003d644:	add    BYTE PTR [rax],al
   14003d646:	add    BYTE PTR [rax],al
   14003d648:	jp     0x14003d64a
   14003d64a:	push   0x73002d00
   14003d64f:	add    BYTE PTR [rdi+0x0],ah
   14003d652:	add    BYTE PTR [rax],al
   14003d654:	add    BYTE PTR [rax],al
   14003d656:	add    BYTE PTR [rax],al
   14003d658:	jp     0x14003d65a
   14003d65a:	push   0x74002d00
   14003d65f:	add    BYTE PTR [rdi+0x0],dh
   14003d662:	add    BYTE PTR [rax],al
   14003d664:	add    BYTE PTR [rax],al
   14003d666:	add    BYTE PTR [rax],al
   14003d668:	jp     0x14003d66a
   14003d66a:	jne    0x14003d66c
   14003d66c:	sub    eax,0x61007a00
   14003d671:	add    BYTE PTR [rax],al
   14003d673:	add    BYTE PTR [rax],al
   14003d675:	add    BYTE PTR [rax],al
   14003d677:	add    BYTE PTR [rbx+0x0],al
   14003d67a:	rex.WRXB add BYTE PTR [r14+0x0],r9b
   14003d67e:	rex.WRXB add BYTE PTR [r13+0x0],r10b
   14003d682:	push   rsp
   14003d683:	add    BYTE PTR [rax+rax*1],ah
	...
   14003d696:	lock inc DWORD PTR [rax]
	...
   14003d6a5:	add    al,dh
   14003d6a7:	jg     0x14003d6a9
	...
   14003d6b5:	add    al,bh
   14003d6b7:	inc    DWORD PTR [rax]
	...
   14003d6c5:	add    BYTE PTR [rax],cl
	...
   14003d6cf:	add    bh,bh
   14003d6d1:	add    eax,DWORD PTR [rax]
	...
   14003d6df:	add    BYTE PTR [rcx],al
	...
   14003d6ed:	add    BYTE PTR [rax],al
   14003d6ef:	add    bh,bh
   14003d6f1:	(bad)  
   14003d6f2:	(bad)  
   14003d6f3:	(bad)  
   14003d6f4:	(bad)  
   14003d6f5:	dec    DWORD PTR [rdi]
	...
   14003d703:	add    BYTE PTR [rax],al
   14003d705:	lock sldt WORD PTR [rax]
	...
   14003d715:	or     BYTE PTR [rax],al
	...
   14003d71f:	add    BYTE PTR [rsi],cl
   14003d721:	in     eax,0x26
   14003d723:	adc    eax,0x3fdbcb7b
	...
   14003d734:	js     0x14003d701
   14003d736:	fstp   TBYTE PTR [rdi]
	...
   14003d740:	xor    eax,0x37287195
   14003d745:	test   eax,0x3ea8
	...
   14003d752:	add    BYTE PTR [rax+0x13],dl
   14003d755:	rex.R sar DWORD PTR [rdi],cl
	...
   14003d760:	and    eax,0x3fde623e
   14003d765:	out    dx,eax
   14003d766:	add    edi,DWORD PTR [rsi]
	...
   14003d774:	add    BYTE PTR [rax],al
   14003d776:	add    BYTE PTR [rax+0x0],al
	...
   14003d785:	add    al,dh
   14003d787:	(bad)  
	...
   14003d794:	add    BYTE PTR [rax],al
   14003d796:	loopne 0x14003d7d7
	...
   14003d7a0:	add    BYTE PTR [rcx],al
	...
   14003d7b6:	(bad)  
   14003d7b7:	(bad)  
	...
   14003d7c4:	add    BYTE PTR [rax],al
   14003d7c6:	loopne 0x14003d807
	...
   14003d7d0:	push   rbp
   14003d7d1:	push   rbp
   14003d7d2:	push   rbp
   14003d7d3:	push   rbp
   14003d7d4:	push   rbp
   14003d7d5:	push   rbp
   14003d7d6:	(bad)  
   14003d7d7:	(bad)  
	...
   14003d7e4:	add    BYTE PTR [rax],al
   14003d7e6:	sar    BYTE PTR [rdi],1
	...
   14003d7f0:	(bad)  
   14003d7f1:	cdq    
   14003d7f2:	cdq    
   14003d7f3:	cdq    
   14003d7f4:	cdq    
   14003d7f5:	cdq    
   14003d7f6:	leave  
   14003d7f7:	(bad)  
	...
   14003d800:	push   rbp
   14003d801:	push   rbp
   14003d802:	push   rbp
   14003d803:	push   rbp
   14003d804:	push   rbp
   14003d805:	push   rbp
   14003d806:	(bad)
	...
   14003d815:	clc    
   14003d816:	pop    rax
	...
   14003d820:	std    
   14003d821:	(bad)  
	...
   14003d836:	mov    al,0x3f
	...
   14003d844:	add    BYTE PTR [rax],al
   14003d846:	out    dx,al
   14003d847:	(bad)  
	...
   14003d854:	add    BYTE PTR [rax],al
   14003d856:	icebp  
   14003d857:	(bad)  
	...
   14003d864:	add    BYTE PTR [rax],al
   14003d866:	adc    BYTE PTR [rax],al
	...
   14003d870:	(bad)  
   14003d871:	(bad)  
   14003d872:	(bad)  
   14003d873:	(bad)  
   14003d874:	(bad)  
   14003d875:	(bad)  
   14003d876:	(bad)  
   14003d877:	jg     0x14003d879
   14003d879:	add    BYTE PTR [rax],al
   14003d87b:	add    BYTE PTR [rax],al
   14003d87d:	add    BYTE PTR [rax],al
   14003d87f:	add    dh,ah
   14003d881:	push   rsp
   14003d882:	push   rbp
   14003d883:	push   rbp
   14003d884:	push   rbp
   14003d885:	push   rbp
   14003d886:	mov    ch,0x3f
	...
   14003d890:	(bad)  
   14003d891:	(bad)  
   14003d892:	mov    edx,0x89999999
   14003d897:	(bad)  
	...
   14003d8a0:	lahf   
   14003d8a1:	push   rcx
   14003d8a2:	icebp  
   14003d8a3:	(bad)  
   14003d8a4:	and    ecx,DWORD PTR [rcx+0x62]
   14003d8a7:	(bad)  
	...
   14003d8b0:	lock call FWORD PTR [rbp-0x38]
   14003d8b4:	xor    al,0x80
   14003d8b6:	cmp    al,0x3f
	...
   14003d8c4:	(bad)  
   14003d8c5:	(bad)  
   14003d8c6:	(bad)  
   14003d8c7:	inc    DWORD PTR [rax]
   14003d8c9:	add    BYTE PTR [rax],al
   14003d8cb:	add    BYTE PTR [rax],al
   14003d8cd:	add    BYTE PTR [rax],al
   14003d8cf:	add    BYTE PTR [rcx],al
   14003d8d1:	add    BYTE PTR [rax],al
   14003d8d3:	add    BYTE PTR [rdx],al
   14003d8d5:	add    BYTE PTR [rax],al
   14003d8d7:	add    BYTE PTR [rbx],al
	...
   14003d8e9:	add    BYTE PTR [rax],al
   14003d8eb:	nop
   14003d8ec:	sahf   
   14003d8ed:	mov    ebp,0x3f5b
   14003d8f2:	add    BYTE PTR [rax-0x2c],dh
   14003d8f5:	scas   eax,DWORD PTR es:[rdi]
   14003d8f6:	imul   edi,DWORD PTR [rdi],0x0
   14003d8f9:	add    BYTE PTR [rax],al
   14003d8fb:	(bad)  
   14003d8fc:	xchg   ebp,eax
   14003d8fd:	mov    ecx,0x3f74
   14003d902:	add    BYTE PTR [rax+0x3f7b9476],ah
   14003d908:	add    BYTE PTR [rax],al
   14003d90a:	add    BYTE PTR [rax+0x3f81344d],ah
   14003d910:	add    BYTE PTR [rax],al
   14003d912:	add    BYTE PTR [rax+0x8],dl
   14003d915:	fwait
   14003d916:	test   BYTE PTR [rdi],bh
   14003d918:	add    BYTE PTR [rax],al
   14003d91a:	add    al,al
   14003d91c:	jno    0x14003d91c
   14003d91e:	xchg   DWORD PTR [rdi],edi
   14003d920:	add    BYTE PTR [rax],al
   14003d922:	add    BYTE PTR [rax+0x3f8b5e90],al
   14003d928:	add    BYTE PTR [rax],al
   14003d92a:	add    al,dh
   14003d92c:	push   0xffffffffffffffbb
   14003d92e:	mov    ?,WORD PTR [rdi]
   14003d930:	add    BYTE PTR [rax],al
   14003d932:	add    BYTE PTR [rax+0x3f910a83],ah
   14003d938:	add    BYTE PTR [rax],al
   14003d93a:	add    al,ah
   14003d93c:	mov    ch,0xb5
   14003d93e:	xchg   edx,eax
   14003d93f:	(bad)  
   14003d940:	add    BYTE PTR [rax],al
   14003d942:	add    BYTE PTR [rax+0x4f],dl
   14003d945:	pop    rdi
   14003d946:	xchg   esp,eax
   14003d947:	(bad)  
   14003d948:	add    BYTE PTR [rax],al
   14003d94a:	add    BYTE PTR [rax],al
   14003d94c:	push   rbx
   14003d94d:	(bad)  
   14003d94e:	xchg   esi,eax
   14003d94f:	(bad)  
   14003d950:	add    BYTE PTR [rax],al
   14003d952:	add    al,dl
   14003d954:	ret    
   14003d955:	lods   eax,DWORD PTR ds:[rsi]
   14003d956:	xchg   edi,eax
   14003d957:	(bad)  
   14003d958:	add    BYTE PTR [rax],al
   14003d95a:	add    al,dh
   14003d95c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003d95d:	push   rdx
   14003d95e:	cdq    
   14003d95f:	(bad)  
   14003d960:	add    BYTE PTR [rax],al
   14003d962:	add    BYTE PTR [rax],ah
   14003d964:	stc    
   14003d965:	cmc    
   14003d966:	(bad)  
   14003d967:	(bad)  
   14003d968:	add    BYTE PTR [rax],al
   14003d96a:	add    BYTE PTR [rax-0x3d],dh
   14003d96d:	xchg   edi,eax
   14003d96e:	pushf  
   14003d96f:	(bad)  
   14003d970:	add    BYTE PTR [rax],al
   14003d972:	add    BYTE PTR [rax+0x3f9e3806],ah
   14003d978:	add    BYTE PTR [rax],al
   14003d97a:	add    BYTE PTR [rax+0x3f9fd6c5],dh
   14003d980:	add    BYTE PTR [rax],al
   14003d982:	add    BYTE PTR [rax+0x3fa0ba01],ah
   14003d988:	add    BYTE PTR [rax],al
   14003d98a:	add    BYTE PTR [rax],ah
   14003d98c:	loope  0x14003d915
   14003d98e:	movabs eax,ds:0xa25502c00000003f
   14003d997:	(bad)  
   14003d998:	add    BYTE PTR [rax],al
   14003d99a:	add    al,al
   14003d99c:	and    DWORD PTR [ebx+0x3f],esp
   14003d9a3:	nop
   14003d9a4:	adc    ebp,ebp
   14003d9a6:	movabs ds:0xa4b801800000003f,eax
   14003d9af:	(bad)  
   14003d9b0:	add    BYTE PTR [rax],al
   14003d9b2:	add    al,ah
   14003d9b4:	cmp    BYTE PTR [rdx+0x3fa5],al
   14003d9ba:	add    BYTE PTR [rax],dl
   14003d9bc:	mov    ecx,0x3fa64b
   14003d9c1:	add    BYTE PTR [rax],al
   14003d9c3:	rex adc DWORD PTR [rdi+riz*4],0x3f
   14003d9c8:	add    BYTE PTR [rax],al
   14003d9ca:	add    al,al
   14003d9cc:	cwde   
   14003d9cd:	fsub   QWORD PTR [rdi+0x3f]
   14003d9d3:	sar    dl,1
   14003d9d5:	movabs ds:0x6aaac00000003fa8,eax
   14003d9de:	test   eax,0x3f
   14003d9e3:	shr    BYTE PTR [rcx+0x3faa30],1
   14003d9e9:	add    BYTE PTR [rax],al
   14003d9eb:	and    cl,bh
   14003d9ed:	cmc    
   14003d9ee:	stos   BYTE PTR es:[rdi],al
   14003d9ef:	(bad)  
   14003d9f0:	add    BYTE PTR [rax],al
   14003d9f2:	add    BYTE PTR [rax],al
   14003d9f4:	(bad)  
   14003d9f5:	mov    edx,0x3fab
   14003d9fa:	add    BYTE PTR [rax+0x3fac7e8d],dl
   14003da00:	add    BYTE PTR [rax],al
   14003da02:	add    BYTE PTR [rax],dl
   14003da04:	(bad)  
   14003da05:	rex.B lods eax,DWORD PTR ds:[rsi]
   14003da07:	(bad)  
   14003da08:	add    BYTE PTR [rax],al
   14003da0a:	add    BYTE PTR [rax+0x3fae0471],ah
   14003da10:	add    BYTE PTR [rax],al
   14003da12:	add    BYTE PTR [rax+0x64],dh
   14003da15:	(bad)  
   14003da16:	scas   al,BYTE PTR es:[rdi]
   14003da17:	(bad)  
   14003da18:	add    BYTE PTR [rax],al
   14003da1a:	add    BYTE PTR [rax+0x3faf87ae],dh
   14003da20:	add    BYTE PTR [rax],al
   14003da22:	add    al,al
   14003da24:	sub    BYTE PTR [rax+rsi*4],ah
   14003da27:	(bad)  
   14003da28:	add    BYTE PTR [rax],al
   14003da2a:	add    al,dh
   14003da2c:	test   BYTE PTR es:[rax+0x3f],dh
   14003da33:	nop
   14003da34:	shl    bl,cl
   14003da36:	mov    al,0x3f
   14003da38:	add    BYTE PTR [rax],al
   14003da3a:	add    BYTE PTR [rax],dh
   14003da3c:	sub    al,0x43
   14003da3e:	mov    cl,0x3f
   14003da40:	add    BYTE PTR [rax],al
   14003da42:	add    BYTE PTR [rax+0x34],al
   14003da45:	movabs ds:0xeb600000003fb1,al
   14003da4e:	mov    dl,0x3f
   14003da50:	add    BYTE PTR [rax],al
   14003da52:	add    BYTE PTR [rax],dl
   14003da54:	push   rdx
   14003da55:	pop    rdi
   14003da56:	mov    dl,0x3f
   14003da58:	add    BYTE PTR [rax],al
   14003da5a:	add    al,ah
   14003da5c:	push   0x3fb2bd
   14003da61:	add    BYTE PTR [rax],al
   14003da63:	push   rax
   14003da64:	xor    BYTE PTR [rbx],bl
   14003da66:	mov    bl,0x3f
   14003da68:	add    BYTE PTR [rax],al
   14003da6a:	add    al,ah
   14003da6c:	test   al,0x78
   14003da6e:	mov    bl,0x3f
   14003da70:	add    BYTE PTR [rax],al
   14003da72:	add    BYTE PTR [rax],dh
   14003da74:	rcl    ebp,cl
   14003da76:	mov    bl,0x3f
   14003da78:	add    BYTE PTR [rax],al
   14003da7a:	add    BYTE PTR [rax+0x3fb432af],ah
   14003da80:	add    BYTE PTR [rax],al
   14003da82:	add    al,dl
   14003da84:	ds (bad) 
   14003da86:	mov    ah,0x3f
   14003da88:	add    BYTE PTR [rax],al
   14003da8a:	add    BYTE PTR [rax],ah
   14003da8c:	sub    ebx,0x3fb4
   14003da92:	add    BYTE PTR [rax],dh
   14003da94:	ja     0x14003dadd
   14003da96:	mov    ch,0x3f
   14003da98:	add    BYTE PTR [rax],al
   14003da9a:	add    BYTE PTR [rax+0x21],ah
   14003da9d:	movabs ds:0xfe80400000003fb5,eax
   14003daa6:	mov    ch,0x3f
   14003daa8:	add    BYTE PTR [rax],al
   14003daaa:	add    BYTE PTR [rax-0x6c],al
   14003daad:	pop    rcx
   14003daae:	mov    dh,0x3f
   14003dab0:	add    BYTE PTR [rax],al
   14003dab2:	add    al,dh
   14003dab4:	pop    rbp
   14003dab5:	mov    ah,0xb6
   14003dab7:	(bad)  
   14003dab8:	add    BYTE PTR [rax],al
   14003daba:	add    BYTE PTR [rax+0x3fb70edd],dh
   14003dac0:	add    BYTE PTR [rax],al
   14003dac2:	add    BYTE PTR [rax],al
   14003dac4:	adc    al,0x69
   14003dac6:	mov    bh,0x3f
   14003dac8:	add    BYTE PTR [rax],al
   14003daca:	add    BYTE PTR [rax+0x1],ah
   14003dacd:	ret    
   14003dace:	mov    bh,0x3f
   14003dad0:	add    BYTE PTR [rax],al
   14003dad2:	add    BYTE PTR [rax],dh
   14003dad4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003dad5:	sbb    al,0xb8
   14003dad7:	(bad)  
   14003dad8:	add    BYTE PTR [rax],al
   14003dada:	add    BYTE PTR [rax],al
   14003dadc:	add    esi,DWORD PTR [rsi-0x48]
   14003dadf:	(bad)  
   14003dae0:	add    BYTE PTR [rax],al
   14003dae2:	add    BYTE PTR [rax],dh
   14003dae4:	sbb    bh,cl
   14003dae6:	mov    eax,0x3f
   14003daeb:	out    0x27,al
   14003daee:	mov    ecx,0x3f
   14003daf3:	nop
   14003daf4:	ins    DWORD PTR es:[rdi],dx
   14003daf5:	cmp    BYTE PTR [rcx+0x3f],0xa0
   14003dafc:	scas   al,BYTE PTR es:[rdi]
   14003dafd:	fdivr  DWORD PTR [rcx+0x3f]
   14003db03:	shr    BYTE PTR [rcx+0x3fba30],1
   14003db09:	add    BYTE PTR [rax],al
   14003db0b:	movabs al,ds:0x700000003fba885f
   14003db14:	rcr    bh,1
   14003db16:	mov    edx,0x3f
   14003db1b:	mov    al,0xfc
   14003db1d:	ss mov ebx,0x3f
   14003db23:	shl    ah,1
   14003db25:	lea    edi,[rbx+0x3f]
   14003db2b:	xor    BYTE PTR [rcx+0x3fbbe4],cl
   14003db31:	add    BYTE PTR [rax],al
   14003db33:	rex (bad) 
   14003db35:	cmp    bh,BYTE PTR [rdi+rdi*1+0x70000000]
   14003db3c:	or     BYTE PTR [rcx+0x3fbc],dl
   14003db42:	add    BYTE PTR [rax],dl
   14003db44:	in     al,0xe6
   14003db46:	mov    esp,0x3f
   14003db4b:	movabs al,ds:0x800000003fbd3c7d
   14003db54:	(bad)  
   14003db55:	xchg   ecx,eax
   14003db56:	mov    ebp,0x3f
   14003db5b:	add    ah,ch
   14003db5d:	out    0xbd,al
   14003db5f:	(bad)  
   14003db60:	add    BYTE PTR [rax],al
   14003db62:	add    BYTE PTR [rax+0x3fbe3bc1],ah
   14003db68:	add    BYTE PTR [rax],al
   14003db6a:	add    BYTE PTR [rax+0x3fbe9056],dh
   14003db70:	add    BYTE PTR [rax],al
   14003db72:	add    BYTE PTR [rax+0x3fbee4ab],ah
   14003db78:	add    BYTE PTR [rax],al
   14003db7a:	add    al,al
   14003db7c:	sar    BYTE PTR [rax],0xbf
   14003db7f:	(bad)  
   14003db80:	add    BYTE PTR [rax],al
   14003db82:	add    BYTE PTR [rax+0x3fbf8c96],al
   14003db88:	add    BYTE PTR [rax],al
   14003db8a:	add    BYTE PTR [rax],dh
   14003db8c:	sub    eax,0x3fbfe0
   14003db91:	add    BYTE PTR [rax],al
   14003db93:	movabs al,ds:0x700000003fc019c2
   14003db9c:	rex.WRXB
   14003db9d:	rex.XB sar BYTE PTR [r15],0x0
   14003dba1:	add    BYTE PTR [rax],al
   14003dba3:	(bad)  
   14003dba4:	mov    ebp,0x3fc06c
   14003dba9:	add    BYTE PTR [rax],al
   14003dbab:	or     BYTE PTR [rsi+rdx*4],0xc0
   14003dbaf:	(bad)  
   14003dbb0:	add    BYTE PTR [rax],al
   14003dbb2:	add    BYTE PTR [rax],al
   14003dbb4:	cmp    eax,0x3fc0bf
   14003dbb9:	add    BYTE PTR [rax],al
   14003dbbb:	adc    BYTE PTR [rdi-0x18],cl
   14003dbbe:	sar    BYTE PTR [rdi],0x0
   14003dbc1:	add    BYTE PTR [rax],al
   14003dbc3:	lock rex.X adc ecx,eax
   14003dbc7:	(bad)  
   14003dbc8:	add    BYTE PTR [rax],al
   14003dbca:	add    BYTE PTR [rax+0x3fc13a18],ah
   14003dbd0:	add    BYTE PTR [rax],al
   14003dbd2:	add    BYTE PTR [rax+0x3fc162d0],al
   14003dbd8:	add    BYTE PTR [rax],al
   14003dbda:	add    BYTE PTR [rax+0x3fc18b6a],dl
   14003dbe0:	add    BYTE PTR [rax],al
   14003dbe2:	add    BYTE PTR [rax],dl
   14003dbe4:	out    0xb3,eax
   14003dbe6:	sar    DWORD PTR [rdi],0x0
   14003dbe9:	add    BYTE PTR [rax],al
   14003dbeb:	xor    BYTE PTR [rsi-0x24],al
   14003dbee:	sar    DWORD PTR [rdi],0x0
   14003dbf1:	add    BYTE PTR [rax],al
   14003dbf3:	adc    BYTE PTR [rax+0x3fc204],cl
   14003dbf9:	add    BYTE PTR [rax],al
   14003dbfb:	loopne 0x14003dba9
   14003dbfd:	sub    al,0xc2
   14003dbff:	(bad)  
   14003dc00:	add    BYTE PTR [rax],al
   14003dc02:	add    al,dl
   14003dc04:	mov    ah,0x54
   14003dc06:	ret    0x3f
   14003dc09:	add    BYTE PTR [rax],al
   14003dc0b:	lock lahf 
   14003dc0d:	jl     0x14003dbd1
   14003dc0f:	(bad)  
   14003dc10:	add    BYTE PTR [rax],al
   14003dc12:	add    BYTE PTR [rax+0x3fc2a46e],al
   14003dc18:	add    BYTE PTR [rax],al
   14003dc1a:	add    BYTE PTR [rax+0x3fc2cc20],dh
   14003dc20:	add    BYTE PTR [rax],al
   14003dc22:	add    BYTE PTR [rax+0x3fc2f3b6],dl
   14003dc28:	add    BYTE PTR [rax],al
   14003dc2a:	add    BYTE PTR [rax+0x30],dl
   14003dc2d:	sbb    eax,ebx
   14003dc2f:	(bad)  
   14003dc30:	add    BYTE PTR [rax],al
   14003dc32:	add    BYTE PTR [rax],ah
   14003dc34:	mov    es,WORD PTR [rdx-0x3d]
   14003dc37:	(bad)  
   14003dc38:	add    BYTE PTR [rax],al
   14003dc3a:	add    BYTE PTR [rax],ah
   14003dc3c:	shr    BYTE PTR [rcx-0x3d],1
   14003dc3f:	(bad)  
   14003dc40:	add    BYTE PTR [rax],al
   14003dc42:	add    BYTE PTR [rax+0x3fc390f6],al
   14003dc48:	add    BYTE PTR [rax],al
   14003dc4a:	add    BYTE PTR [rax+0x1],ah
   14003dc4d:	mov    eax,0x3fc3
   14003dc52:	add    al,ah
   14003dc54:	lock faddp st(3),st
   14003dc57:	(bad)  
   14003dc58:	add    BYTE PTR [rax],al
   14003dc5a:	add    BYTE PTR [rax],dh
   14003dc5c:	(bad)
   14003dc5f:	(bad)  
   14003dc60:	add    BYTE PTR [rax],al
   14003dc62:	add    BYTE PTR [rax+0x7e],dh
   14003dc65:	sub    al,0xc4
   14003dc67:	(bad)  
   14003dc68:	add    BYTE PTR [rax],al
   14003dc6a:	add    al,dl
   14003dc6c:	sbb    al,0x53
   14003dc6e:	(bad)  
   14003dc6f:	(bad)  
   14003dc70:	add    BYTE PTR [rax],al
   14003dc72:	add    BYTE PTR [rax-0x60],dh
   14003dc75:	jns    0x14003dc3b
   14003dc77:	(bad)  
   14003dc78:	add    BYTE PTR [rax],al
   14003dc7a:	add    BYTE PTR [rax+0x9],dh
   14003dc7d:	movabs al,ds:0xc658000000003fc4
   14003dc86:	(bad)  
   14003dc87:	(bad)  
   14003dc88:	add    BYTE PTR [rax],al
   14003dc8a:	add    BYTE PTR [rax],dh
   14003dc8c:	mov    esp,gs
   14003dc8e:	(bad)  
   14003dc8f:	(bad)  
   14003dc90:	add    BYTE PTR [rax],al
   14003dc92:	add    BYTE PTR [rax-0x5a],al
   14003dc95:	adc    al,ch
   14003dc97:	(bad)  
   14003dc98:	add    BYTE PTR [rax],al
   14003dc9a:	add    BYTE PTR [rax],dh
   14003dc9c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003dc9d:	cmp    ch,al
   14003dc9f:	(bad)  
   14003dca0:	add    BYTE PTR [rax],al
   14003dca2:	add    BYTE PTR [rax-0x74],dl
   14003dca5:	pop    rsi
   14003dca6:	(bad)
   14003dca9:	add    BYTE PTR [rax],al
   14003dcab:	nop
   14003dcac:	pop    rax
   14003dcad:	test   ch,al
   14003dcaf:	(bad)  
   14003dcb0:	add    BYTE PTR [rax],al
   14003dcb2:	add    BYTE PTR [rax+0xb],al
   14003dcb5:	stos   BYTE PTR es:[rdi],al
   14003dcb6:	(bad)
   14003dcb9:	add    BYTE PTR [rax],al
   14003dcbb:	jo     0x14003dc61
   14003dcbd:	iret   
   14003dcbe:	(bad)
   14003dcc1:	add    BYTE PTR [rax],al
   14003dcc3:	and    al,0xf5
   14003dcc6:	(bad)
   14003dcc9:	add    BYTE PTR [rax],al
   14003dccb:	ror    BYTE PTR [rdx+0x3fc61a],1
   14003dcd1:	add    BYTE PTR [rax],al
   14003dcd3:	push   rax
   14003dcd4:	fdivr  DWORD PTR [rdi]
   14003dcd6:	(bad)  
   14003dcd7:	(bad)  
   14003dcd8:	add    BYTE PTR [rax],al
   14003dcda:	add    al,dl
   14003dcdc:	or     al,0x65
   14003dcde:	(bad)  
   14003dcdf:	(bad)  
   14003dce0:	add    BYTE PTR [rax],al
   14003dce2:	add    BYTE PTR [rax+0x3fc68a28],al
   14003dce8:	add    BYTE PTR [rax],al
   14003dcea:	add    BYTE PTR [rax+0x3fc6af2b],al
   14003dcf0:	add    BYTE PTR [rax],al
   14003dcf2:	add    al,ah
   14003dcf4:	adc    eax,0x3fc6d4
   14003dcf9:	add    BYTE PTR [rax],al
   14003dcfb:	shl    bh,1
   14003dcfd:	clc    
   14003dcfe:	(bad)  
   14003dcff:	(bad)  
   14003dd00:	add    BYTE PTR [rax],al
   14003dd02:	add    BYTE PTR [rax-0x5f],dh
   14003dd05:	sbb    eax,0x3fc7
   14003dd0a:	add    al,ah
   14003dd0c:	rex.X
   14003dd0d:	rex.X (bad) 
   14003dd0f:	(bad)  
   14003dd10:	add    BYTE PTR [rax],al
   14003dd12:	add    BYTE PTR [rax-0x34],al
   14003dd15:	data16 (bad) 
   14003dd17:	(bad)  
   14003dd18:	add    BYTE PTR [rax],al
   14003dd1a:	add    BYTE PTR [rax+0x3fc78b3d],ah
   14003dd20:	add    BYTE PTR [rax],al
   14003dd22:	add    BYTE PTR [rax],dh
   14003dd24:	xchg   edi,eax
   14003dd25:	scas   eax,DWORD PTR es:[rdi]
   14003dd26:	(bad)  
   14003dd27:	(bad)  
   14003dd28:	add    BYTE PTR [rax],al
   14003dd2a:	add    BYTE PTR [rax],dl
   14003dd2c:	(bad)  
   14003dd2e:	(bad)  
   14003dd2f:	(bad)  
   14003dd30:	add    BYTE PTR [rax],al
   14003dd32:	add    BYTE PTR [rax+0x3],dl
   14003dd35:	clc    
   14003dd36:	(bad)  
   14003dd37:	(bad)  
   14003dd38:	add    BYTE PTR [rax],al
   14003dd3a:	add    BYTE PTR [rax],ah
   14003dd3c:	(bad)  
   14003dd3d:	sbb    al,0xc8
   14003dd3f:	(bad)  
   14003dd40:	add    BYTE PTR [rax],al
   14003dd42:	add    BYTE PTR [rax+0x3fc84011],dl
   14003dd48:	add    BYTE PTR [rax],al
   14003dd4a:	add    al,al
   14003dd4c:	cmc    
   14003dd4d:	movsxd ecx,eax
   14003dd4f:	(bad)  
   14003dd50:	add    BYTE PTR [rax],al
   14003dd52:	add    al,ah
   14003dd54:	ret    0xc887
   14003dd57:	(bad)  
   14003dd58:	add    BYTE PTR [rax],al
   14003dd5a:	add    BYTE PTR [rax],al
   14003dd5c:	jns    0x14003dd09
   14003dd5e:	enter  0x3f,0x0
   14003dd62:	add    BYTE PTR [rax],dh
   14003dd64:	sbb    bh,cl
   14003dd66:	enter  0x3f,0x0
   14003dd6a:	add    BYTE PTR [rax+0x3fc8f2a0],ah
   14003dd70:	add    BYTE PTR [rax],al
   14003dd72:	add    BYTE PTR [rax+0x12],dh
   14003dd75:	(bad)  
   14003dd76:	leave  
   14003dd77:	(bad)  
   14003dd78:	add    BYTE PTR [rax],al
   14003dd7a:	add    BYTE PTR [rax+0x3fc9396d],dh
   14003dd80:	add    BYTE PTR [rax],al
   14003dd82:	add    BYTE PTR [rax+0x3fc95cb2],al
   14003dd88:	add    BYTE PTR [rax],al
   14003dd8a:	add    BYTE PTR [rax],al
   14003dd8c:	loope  0x14003de0d
   14003dd8e:	leave  
   14003dd8f:	(bad)  
   14003dd90:	add    BYTE PTR [rax],al
   14003dd92:	add    BYTE PTR [rax-0x7],dl
   14003dd95:	movabs ds:0xc5fb700000003fc9,al
   14003dd9e:	leave  
   14003dd9f:	(bad)  
   14003dda0:	add    BYTE PTR [rax],al
   14003dda2:	add    BYTE PTR [rax+0x3fc9e8e7],dh
   14003dda8:	add    BYTE PTR [rax],al
   14003ddaa:	add    al,dh
   14003ddac:	mov    ebp,0x3fca0b
   14003ddb1:	add    BYTE PTR [rax],al
   14003ddb3:	cmp    BYTE PTR [rsi+0x2e],0xca
   14003ddb7:	(bad)  
   14003ddb8:	add    BYTE PTR [rax],al
   14003ddba:	add    BYTE PTR [rax+0x29],ah
   14003ddbd:	push   rcx
   14003ddbe:	retf   0x3f
   14003ddc1:	add    BYTE PTR [rax],al
   14003ddc3:	movabs al,ds:0x700000003fca73be
   14003ddcc:	ds xchg esi,eax
   14003ddce:	retf   0x3f
   14003ddd1:	add    BYTE PTR [rax],al
   14003ddd3:	lock test al,0xb8
   14003ddd6:	retf   0x3f
   14003ddd9:	add    BYTE PTR [rax],al
   14003dddb:	and    dh,bh
   14003dddd:	fcmove st,st(2)
   14003dddf:	(bad)  
   14003dde0:	add    BYTE PTR [rax],al
   14003dde2:	add    BYTE PTR [rax],dh
   14003dde4:	ds std 
   14003dde6:	retf   0x3f
   14003dde9:	add    BYTE PTR [rax],al
   14003ddeb:	xor    BYTE PTR [rcx+0x1f],ch
   14003ddee:	retf   
   14003ddef:	(bad)  
   14003ddf0:	add    BYTE PTR [rax],al
   14003ddf2:	add    BYTE PTR [rax+0x7f],al
   14003ddf5:	rex.B retf 
   14003ddf7:	(bad)  
   14003ddf8:	add    BYTE PTR [rax],al
   14003ddfa:	add    BYTE PTR [rax-0x80],dh
   14003ddfd:	movsxd ecx,ebx
   14003ddff:	(bad)  
   14003de00:	add    BYTE PTR [rax],al
   14003de02:	add    al,dh
   14003de04:	ins    BYTE PTR es:[rdi],dx
   14003de05:	test   ebx,ecx
   14003de07:	(bad)  
   14003de08:	add    BYTE PTR [rax],al
   14003de0a:	add    BYTE PTR [rax+0x3fcba744],dh
   14003de10:	add    BYTE PTR [rax],al
   14003de12:	add    al,dh
   14003de14:	(bad)  
   14003de15:	leave  
   14003de16:	retf   
   14003de17:	(bad)  
   14003de18:	add    BYTE PTR [rax],al
   14003de1a:	add    al,al
   14003de1c:	mov    dh,0xea
   14003de1e:	retf   
   14003de1f:	(bad)  
   14003de20:	add    BYTE PTR [rax],al
   14003de22:	add    BYTE PTR [rax],dh
   14003de24:	push   rcx
   14003de25:	or     al,0xcc
   14003de27:	(bad)  
   14003de28:	add    BYTE PTR [rax],al
   14003de2a:	add    BYTE PTR [rax-0x29],dl
   14003de2d:	sub    eax,0x3fcc
   14003de32:	add    BYTE PTR [rax+0x49],dl
   14003de35:	rex.WRXB int3 
   14003de37:	(bad)  
   14003de38:	add    BYTE PTR [rax],al
   14003de3a:	add    BYTE PTR [rax-0x59],al
   14003de3d:	jo     0x14003de0b
   14003de3f:	(bad)  
   14003de40:	add    BYTE PTR [rax],al
   14003de42:	add    BYTE PTR [rax],dh
   14003de44:	icebp  
   14003de45:	xchg   ecx,eax
   14003de46:	int3   
   14003de47:	(bad)  
   14003de48:	add    BYTE PTR [rax],al
   14003de4a:	add    BYTE PTR [rax+0x27],al
   14003de4d:	mov    bl,0xcc
   14003de4f:	(bad)  
   14003de50:	add    BYTE PTR [rax],al
   14003de52:	add    BYTE PTR [rax+0x3fccd449],al
   14003de58:	add    BYTE PTR [rax],al
   14003de5a:	add    BYTE PTR [rax],dl
   14003de5c:	pop    rax
   14003de5d:	cmc    
   14003de5e:	int3   
   14003de5f:	(bad)  
   14003de60:	add    BYTE PTR [rax],al
   14003de62:	add    BYTE PTR [rax],al
   14003de64:	push   rbx
   14003de65:	(bad)  
   14003de66:	int    0x3f
   14003de68:	add    BYTE PTR [rax],al
   14003de6a:	add    BYTE PTR [rax+0x3a],ah
   14003de6d:	(bad)  
   14003de6e:	int    0x3f
   14003de70:	add    BYTE PTR [rax],al
   14003de72:	add    BYTE PTR [rax+0xe],ah
   14003de75:	pop    rax
   14003de76:	int    0x3f
   14003de78:	add    BYTE PTR [rax],al
   14003de7a:	add    BYTE PTR [rax],al
   14003de7c:	iret   
   14003de7d:	js     0x14003de4c
   14003de7f:	(bad)  
   14003de80:	add    BYTE PTR [rax],al
   14003de82:	add    BYTE PTR [rax+0x7c],dh
   14003de85:	cdq    
   14003de86:	int    0x3f
   14003de88:	add    BYTE PTR [rax],al
   14003de8a:	add    BYTE PTR [rax+0x3fcdba16],ah
   14003de90:	add    BYTE PTR [rax],al
   14003de92:	add    al,dl
   14003de94:	popf   
   14003de95:	fcmove st,st(5)
   14003de97:	(bad)  
   14003de98:	add    BYTE PTR [rax],al
   14003de9a:	add    al,dh
   14003de9c:	adc    ebx,edi
   14003de9e:	int    0x3f
   14003dea0:	add    BYTE PTR [rax],al
   14003dea2:	add    BYTE PTR [rax],dh
   14003dea4:	jae    0x14003dec1
   14003dea6:	(bad)  
   14003dea7:	(bad)  
   14003dea8:	add    BYTE PTR [rax],al
   14003deaa:	add    BYTE PTR [rax+0x3fce3bc1],ah
   14003deb0:	add    BYTE PTR [rax],al
   14003deb2:	add    BYTE PTR [rax-0x3],dl
   14003deb5:	pop    rbx
   14003deb6:	(bad)  
   14003deb7:	(bad)  
   14003deb8:	add    BYTE PTR [rax],al
   14003deba:	add    BYTE PTR [rax+0x26],ah
   14003debd:	jl     0x14003de8d
   14003debf:	(bad)  
   14003dec0:	add    BYTE PTR [rax],al
   14003dec2:	add    al,ah
   14003dec4:	cmp    al,0x9c
   14003dec6:	(bad)  
   14003dec7:	(bad)  
   14003dec8:	add    BYTE PTR [rax],al
   14003deca:	add    al,ah
   14003decc:	rex mov esp,0x3fce
   14003ded2:	add    BYTE PTR [rax+0x3fcedc32],al
   14003ded8:	add    BYTE PTR [rax],al
   14003deda:	add    al,dl
   14003dedc:	adc    esp,edi
   14003dede:	(bad)  
   14003dedf:	(bad)  
   14003dee0:	add    BYTE PTR [rax],al
   14003dee2:	add    al,ah
   14003dee4:	ficomp WORD PTR [rbx]
   14003dee6:	iret   
   14003dee7:	(bad)  
   14003dee8:	add    BYTE PTR [rax],al
   14003deea:	add    al,dl
   14003deec:	cdq    
   14003deed:	cmp    ecx,edi
   14003deef:	(bad)  
   14003def0:	add    BYTE PTR [rax],al
   14003def2:	add    BYTE PTR [rax+0x3fcf5b42],ah
   14003def8:	add    BYTE PTR [rax],al
   14003defa:	add    BYTE PTR [rax+0x3fcf7ad9],al
   14003df00:	add    BYTE PTR [rax],al
   14003df02:	add    BYTE PTR [rax+0x5e],dh
   14003df05:	(bad)  
   14003df06:	iret   
   14003df07:	(bad)  
   14003df08:	add    BYTE PTR [rax],al
   14003df0a:	add    BYTE PTR [rax+0x3fcfb9d1],dl
   14003df10:	add    BYTE PTR [rax],al
   14003df12:	add    al,dh
   14003df14:	xor    bl,cl
   14003df16:	iret   
   14003df17:	(bad)  
   14003df18:	add    BYTE PTR [rax],al
   14003df1a:	add    BYTE PTR [rax+0x3fcff882],ah
   14003df20:	add    BYTE PTR [rax],al
   14003df22:	add    BYTE PTR [rax-0x20],dl
   14003df25:	or     edx,eax
   14003df27:	(bad)  
   14003df28:	add    BYTE PTR [rax],al
   14003df2a:	add    BYTE PTR [rax+0x3fd01b76],ah
   14003df30:	add    BYTE PTR [rax],al
   14003df32:	add    BYTE PTR [rax],dh
   14003df34:	add    al,0x2b
   14003df36:	sar    BYTE PTR [rdi],1
   14003df38:	add    BYTE PTR [rax],al
   14003df3a:	add    BYTE PTR [rax],dl
   14003df3c:	mov    DWORD PTR [rdx],edi
   14003df3e:	sar    BYTE PTR [rdi],1
   14003df40:	add    BYTE PTR [rax],al
   14003df42:	add    BYTE PTR [rax+0x5],al
   14003df45:	rex.WX sar BYTE PTR [rdi],1
   14003df48:	add    BYTE PTR [rax],al
   14003df4a:	add    al,ah
   14003df4c:	js     0x14003dfa7
   14003df4e:	sar    BYTE PTR [rdi],1
   14003df50:	add    BYTE PTR [rax],al
   14003df52:	add    al,dh
   14003df54:	jrcxz  0x14003dfbe
   14003df56:	sar    BYTE PTR [rdi],1
   14003df58:	add    BYTE PTR [rax],al
   14003df5a:	add    BYTE PTR [rax+0x46],dh
   14003df5d:	js     0x14003df2f
   14003df5f:	(bad)  
   14003df60:	add    BYTE PTR [rax],al
   14003df62:	add    BYTE PTR [rax+0x3fd087a0],al
   14003df68:	add    BYTE PTR [rax],al
   14003df6a:	add    BYTE PTR [rax],dl
   14003df6c:	repnz xchg esi,eax
   14003df6e:	sar    BYTE PTR [rdi],1
   14003df70:	add    BYTE PTR [rax],al
   14003df72:	add    BYTE PTR [rax],dh
   14003df74:	cmp    esp,DWORD PTR [rsi+0x3fd0]
   14003df7a:	add    al,dh
   14003df7c:	jnp    0x14003df33
   14003df7e:	sar    BYTE PTR [rdi],1
   14003df80:	add    BYTE PTR [rax],al
   14003df82:	add    BYTE PTR [rax-0x4c],dl
   14003df85:	(bad)  
   14003df86:	sar    BYTE PTR [rdi],1
   14003df88:	add    BYTE PTR [rax],al
   14003df8a:	add    BYTE PTR [rax-0x1c],ah
   14003df8d:	rcl    eax,cl
   14003df8f:	(bad)  
   14003df90:	add    BYTE PTR [rax],al
   14003df92:	add    BYTE PTR [rax],dh
   14003df94:	or     al,0xe3
   14003df96:	sar    BYTE PTR [rdi],1
   14003df98:	add    BYTE PTR [rax],al
   14003df9a:	add    al,al
   14003df9c:	sub    esi,edx
   14003df9e:	sar    BYTE PTR [rdi],1
   14003dfa0:	add    BYTE PTR [rax],al
   14003dfa2:	add    BYTE PTR [rax],dl
   14003dfa4:	rex.XB add r9d,edx
   14003dfa7:	(bad)  
   14003dfa8:	add    BYTE PTR [rax],al
   14003dfaa:	add    BYTE PTR [rax+0x52],al
   14003dfad:	adc    cl,dl
   14003dfaf:	(bad)  
   14003dfb0:	add    BYTE PTR [rax],al
   14003dfb2:	add    BYTE PTR [rax+0x59],al
   14003dfb5:	(bad)  
   14003dfb6:	sar    DWORD PTR [rdi],1
   14003dfb8:	add    BYTE PTR [rax],al
   14003dfba:	add    BYTE PTR [rax],dh
   14003dfbc:	pop    rax
   14003dfbd:	sar    DWORD PTR cs:[rdi],1
   14003dfc0:	add    BYTE PTR [rax],al
   14003dfc2:	add    BYTE PTR [rax],al
   14003dfc4:	rex.WRXB cmp rax,0x3fd1
   14003dfca:	add    al,dl
   14003dfcc:	cmp    eax,0x3fd14c
   14003dfd1:	add    BYTE PTR [rax],al
   14003dfd3:	movabs al,ds:0x700000003fd15b24
   14003dfdc:	add    ebp,DWORD PTR [rdx-0x2f]
   14003dfdf:	(bad)  
   14003dfe0:	add    BYTE PTR [rax],al
   14003dfe2:	add    BYTE PTR [rax-0x26],dl
   14003dfe5:	js     0x14003dfb8
   14003dfe7:	(bad)  
   14003dfe8:	add    BYTE PTR [rax],al
   14003dfea:	add    BYTE PTR [rax-0x57],al
   14003dfed:	xchg   ecx,edx
   14003dfef:	(bad)  
   14003dff0:	add    BYTE PTR [rax],al
   14003dff2:	add    BYTE PTR [rax+0x70],ah
   14003dff5:	xchg   esi,eax
   14003dff6:	sar    DWORD PTR [rdi],1
   14003dff8:	add    BYTE PTR [rax],al
   14003dffa:	add    BYTE PTR [rax+0x3fd1a52f],ah
   14003e000:	add    BYTE PTR [rax],al
   14003e002:	add    BYTE PTR [rax],dl
   14003e004:	out    0xb3,eax
   14003e006:	sar    DWORD PTR [rdi],1
   14003e008:	add    BYTE PTR [rax],al
   14003e00a:	add    al,al
   14003e00c:	xchg   esi,eax
   14003e00d:	ret    0x3fd1
   14003e010:	add    BYTE PTR [rax],al
   14003e012:	add    BYTE PTR [rax+0x3fd1d13e],dh
   14003e018:	add    BYTE PTR [rax],al
   14003e01a:	add    al,dh
   14003e01c:	(bad)  
   14003e01e:	sar    DWORD PTR [rdi],1
   14003e020:	add    BYTE PTR [rax],al
   14003e022:	add    BYTE PTR [rax+0x77],dh
   14003e025:	out    dx,al
   14003e026:	sar    DWORD PTR [rdi],1
   14003e028:	add    BYTE PTR [rax],al
   14003e02a:	add    BYTE PTR [rax+0x8],ah
   14003e02d:	std    
   14003e02e:	sar    DWORD PTR [rdi],1
   14003e030:	add    BYTE PTR [rax],al
   14003e032:	add    BYTE PTR [rax+0x3fd20b91],ah
   14003e038:	add    BYTE PTR [rax],al
   14003e03a:	add    BYTE PTR [rax+0x13],dl
   14003e03d:	sbb    dl,dl
   14003e03f:	(bad)  
   14003e040:	add    BYTE PTR [rax],al
   14003e042:	add    BYTE PTR [rax-0x73],dh
   14003e045:	sub    dl,dl
   14003e047:	(bad)  
   14003e048:	add    BYTE PTR [rax],al
   14003e04a:	add    BYTE PTR [rax],dl
   14003e04c:	add    BYTE PTR [rdi],dh
   14003e04e:	sar    BYTE PTR [rdi],cl
   14003e050:	add    BYTE PTR [rax],al
   14003e052:	add    BYTE PTR [rax],dh
   14003e054:	imul   eax,DWORD PTR [rbp-0x2e],0x3f
   14003e058:	add    BYTE PTR [rax],al
   14003e05a:	add    al,dl
   14003e05c:	(bad)  
   14003e05d:	push   rbx
   14003e05e:	sar    BYTE PTR [rdi],cl
   14003e060:	add    BYTE PTR [rax],al
   14003e062:	add    BYTE PTR [rax],al
   14003e064:	sub    esp,DWORD PTR [rdx-0x2e]
   14003e067:	(bad)  
   14003e068:	add    BYTE PTR [rax],al
   14003e06a:	add    al,dl
   14003e06c:	jg     0x14003e0de
   14003e06e:	sar    BYTE PTR [rdi],cl
   14003e070:	add    BYTE PTR [rax],al
   14003e072:	add    BYTE PTR [rax-0x33],al
   14003e075:	jle    0x14003e049
   14003e077:	(bad)  
   14003e078:	add    BYTE PTR [rax],al
   14003e07a:	add    BYTE PTR [rax+0x13],ah
   14003e07d:	(bad)  
   14003e07e:	sar    BYTE PTR [rdi],cl
   14003e080:	add    BYTE PTR [rax],al
   14003e082:	add    BYTE PTR [rax],ah
   14003e084:	push   rdx
   14003e085:	fwait
   14003e086:	sar    BYTE PTR [rdi],cl
   14003e088:	add    BYTE PTR [rax],al
   14003e08a:	add    BYTE PTR [rax+0x3fd2a989],ah
   14003e090:	add    BYTE PTR [rax],al
   14003e092:	add    al,ah
   14003e094:	mov    ecx,0x3fd2b7
   14003e099:	add    BYTE PTR [rax],al
   14003e09b:	loopne 0x14003e07f
   14003e09d:	(bad)
   14003e0a0:	add    BYTE PTR [rax],al
   14003e0a2:	add    BYTE PTR [rax+0x3fd2d404],dh
   14003e0a8:	add    BYTE PTR [rax],al
   14003e0aa:	add    BYTE PTR [rax+0x1f],dl
   14003e0ad:	loop   0x14003e081
   14003e0af:	(bad)  
   14003e0b0:	add    BYTE PTR [rax],al
   14003e0b2:	add    al,al
   14003e0b4:	xor    dh,al
   14003e0b6:	sar    BYTE PTR [rdi],cl
   14003e0b8:	add    BYTE PTR [rax],al
   14003e0ba:	add    BYTE PTR [rax],ah
   14003e0bc:	(bad)  
   14003e0bd:	(bad)  
   14003e0be:	sar    BYTE PTR [rdi],cl
   14003e0c0:	add    BYTE PTR [rax],al
   14003e0c2:	add    BYTE PTR [rax+0x44],dh
   14003e0c5:	or     al,0xd3
   14003e0c7:	(bad)  
   14003e0c8:	add    BYTE PTR [rax],al
   14003e0ca:	add    BYTE PTR [rax+0x3fd31a42],dh
   14003e0d0:	add    BYTE PTR [rax],al
   14003e0d2:	add    al,ah
   14003e0d4:	cmp    DWORD PTR [rax],ebp
   14003e0d6:	sar    DWORD PTR [rdi],cl
   14003e0d8:	add    BYTE PTR [rax],al
   14003e0da:	add    BYTE PTR [rax],dl
   14003e0dc:	sub    dh,BYTE PTR [rsi]
   14003e0de:	sar    DWORD PTR [rdi],cl
   14003e0e0:	add    BYTE PTR [rax],al
   14003e0e2:	add    BYTE PTR [rax+0x13],dl
   14003e0e5:	rex.R sar DWORD PTR [rdi],cl
	...
   14003e0f8:	(bad)  
   14003e0f9:	and    BYTE PTR [rdx-0x4df543de],dh
   14003e0ff:	cmp    eax,0x332e0dd4
   14003e104:	imul   ecx,DWORD PTR [rdi],0xd2573db1
   14003e10a:	jle    0x14003e0f4
   14003e10c:	or     eax,0x693dce95
   14003e111:	ins    DWORD PTR es:[rdi],dx
   14003e112:	(bad)  
   14003e113:	cmp    eax,DWORD PTR [rbx+rsi*8-0x2d]
   14003e117:	cmp    eax,0xa5363e57
   14003e11c:	(bad)  
   14003e11d:	pop    rdx
   14003e11e:	hlt    
   14003e11f:	cmp    eax,0x3ce1bf0b
   14003e124:	push   0x113dc443
   14003e129:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e12a:	(bad)  
   14003e12b:	(bad)  
   14003e12c:	int    0x89
   14003e12e:	stc    
   14003e12f:	cmp    eax,0x201f2e9f
   14003e134:	outs   dx,DWORD PTR ds:[rsi]
   14003e135:	(bad)  
   14003e136:	std    
   14003e137:	cmp    eax,0xb8dabdcd
   14003e13c:	mov    ecx,DWORD PTR [rdi-0x17]
   14003e13f:	cmp    eax,0xef423015
   14003e144:	fmul   DWORD PTR [rax+0x79ad3e00]
   14003e14a:	sub    esp,DWORD PTR [rsi+0x3e080413]
   14003e150:	(bad)  
   14003e151:	shr    esi,cl
   14003e153:	rcl    BYTE PTR [rdi],0x97
   14003e156:	add    eax,0xd449023e
   14003e15b:	lods   eax,DWORD PTR ds:[rsi]
   14003e15c:	ja     0x14003e1a8
   14003e15e:	lods   eax,DWORD PTR ds:[rsi]
   14003e15f:	cmp    eax,0xf037300e
   14003e164:	(bad)  
   14003e165:	jbe    0x14003e175
   14003e167:	ds ret 
   14003e169:	test   BYTE PTR [rsi],0x47
   14003e16c:	xlat   BYTE PTR ds:[rbx]
   14003e16d:	(bad)
   14003e172:	rex.WRB (bad) 
   14003e174:	int3   
   14003e175:	add    DWORD PTR [rsi],eax
   14003e177:	ds mov edi,0xe051f6e5
   14003e17d:	repz (bad) 
   14003e17f:	cmp    eax,0x1e1af3eb
   14003e184:	or     edi,DWORD PTR [rdx+0x9]
   14003e187:	mov    DWORD PTR ds:[rdx],0xa38970c0
   14003e18e:	sar    BYTE PTR [rip+0x57c751],0x0        # 0x1405ba8e6
   14003e195:	adc    BYTE PTR cs:[rsi],bh
   14003e198:	(bad)  
   14003e199:	outs   dx,BYTE PTR ds:[rsi]
   14003e19a:	int    0xee
   14003e19c:	add    BYTE PTR [rbx+0x15],bl
   14003e19f:	ds scas eax,DWORD PTR es:[rdi]
   14003e1a1:	mov    ch,0x3
   14003e1a3:	jo     0x14003e1ce
   14003e1a5:	xchg   bh,bl
   14003e1a7:	cmp    eax,0xb336a36d
   14003e1ac:	mov    ecx,0x4f3e1057
   14003e1b1:	(bad)  
   14003e1b2:	(bad)  
   14003e1b3:	rex.WX enter 0x134b,0x3e
   14003e1b8:	lods   eax,DWORD PTR ds:[rsi]
   14003e1b9:	mov    esp,0x43da9ea1
   14003e1be:	(bad)  
   14003e1bf:	ds sub ch,dl
   14003e1c2:	div    DWORD PTR [rdi+riz*4-0x10c1e29a]
   14003e1c9:	cld    
   14003e1ca:	idiv   DWORD PTR [rax]
   14003e1cc:	loopne 0x14003e180
   14003e1ce:	idiv   BYTE PTR [rip+0xffffffffc670f088]        # 0x10674d25c
   14003e1d4:	push   rsp
   14003e1d5:	jmp    0x10ab71fcd
   14003e1da:	cmp    cl,BYTE PTR [rcx]
   14003e1dc:	or     DWORD PTR [rdx+0x4],esi
   14003e1df:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e1e1:	pop    rbp
   14003e1e2:	(bad)  
   14003e1e3:	out    0x8f,eax
   14003e1e5:	jo     0x14003e204
   14003e1e7:	ds out 0xb9,eax
   14003e1ea:	jno    0x14003e263
   14003e1ec:	sahf   
   14003e1ed:	fistp  WORD PTR [rdi]
   14003e1ef:	ds (bad) 
   14003e1f1:	(bad)  
   14003e1f2:	or     ah,BYTE PTR [rdi+0x3e0827bf]
   14003e1f8:	adc    al,0xbc
   14003e1fa:	rex.WRB (bad) 
   14003e1fc:	int3   
   14003e1fd:	add    DWORD PTR [rsi],edx
   14003e1ff:	ds pop rbx
   14003e201:	pop    rsi
   14003e202:	push   0x10
   14003e204:	div    BYTE PTR [rdi]
   14003e206:	(bad)  
   14003e207:	ds rex.WXB (bad) 
   14003e20a:	jl     0x14003e1fd
   14003e20c:	adc    ebp,DWORD PTR [rdx+0x12]
   14003e20f:	cmp    ah,BYTE PTR ds:[rdx-0x80]
   14003e213:	(bad)  
   14003e214:	mov    dl,0x3e
   14003e216:	or     DWORD PTR [rsi],edi
   14003e218:	ficom  WORD PTR [rbp+rdx*1+0x1430d1e9]
   14003e21f:	xor    DWORD PTR ds:[rax+0x6b10108f],esp
   14003e226:	sbb    eax,0xbaf2413e
   14003e22b:	or     ebx,DWORD PTR [rdi+rax*4-0x43d4c1ea]
   14003e232:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e233:	pop    rsi
   14003e234:	add    DWORD PTR [rax],ecx
   14003e236:	(bad)  
   14003e237:	cmp    eax,0xcdc6676c
   14003e23c:	cmp    eax,0x2c3e29b6
   14003e241:	stos   DWORD PTR es:[rdi],eax
   14003e242:	(bad)  
   14003e243:	mov    esp,0x3e2b022c
   14003e248:	rex.R
   14003e249:	fnstsw WORD PTR gs:[rbp-0x30]
   14003e24d:	(bad)  
   14003e24e:	stc    
   14003e24f:	cmp    eax,0x5703379e
   14003e254:	(bad)  
   14003e255:	rex adc eax,0x7a1b603e
   14003e25b:	xchg   esp,eax
   14003e25c:	mov    edx,ecx
   14003e25e:	or     al,0x3e
   14003e260:	jle    0x14003e20b
   14003e262:	jl     0x14003e28b
   14003e264:	lods   eax,DWORD PTR gs:[rsi]
   14003e266:	(bad)  
   14003e267:	ds test eax,0x4dc59f5f
   14003e26d:	mov    BYTE PTR [rcx],dl
   14003e26f:	ds (bad) 
   14003e271:	rol    BYTE PTR [rsi],1
   14003e273:	(bad)  
   14003e274:	(bad)  
   14003e275:	adc    DWORD PTR [rdi],edx
   14003e277:	ds clc 
   14003e279:	or     BYTE PTR [rcx],dh
   14003e27b:	cmp    al,0x2e
   14003e27d:	or     DWORD PTR [rdi],ebp
   14003e27f:	ds cmp ah,cl
   14003e282:	sub    esp,ebx
   14003e284:	(bad)
   14003e287:	ds (bad) 
   14003e289:	rex.WRXB jae 0x14003e289
   14003e28c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e28d:	mov    ebx,0x84833e26
   14003e292:	loopne 0x14003e249
   14003e294:	(bad)  
   14003e295:	hlt    
   14003e296:	std    
   14003e297:	cmp    eax,0xc74d0b95
   14003e29c:	fwait
   14003e29d:	(bad)  
   14003e29e:	and    edi,DWORD PTR [rsi]
   14003e2a0:	adc    ecx,DWORD PTR [rcx+rdi*2]
   14003e2a3:	call   0x1ae41dc1c
   14003e2a9:	pop    rax
   14003e2aa:	(bad)  
   14003e2ab:	or     BYTE PTR [rsp+rcx*8+0x4a983e1e],bh
   14003e2b2:	push   rdx
   14003e2b3:	stc    
   14003e2b4:	jmp    0xf84203ce
   14003e2b9:	xor    DWORD PTR [rcx],esi
   14003e2bb:	pop    rcx
   14003e2bc:	rex (bad) 
   14003e2be:	(bad)  
   14003e2bf:	ds xor eax,0x8b256438
   14003e2c5:	iret   
   14003e2c6:	sbb    edi,DWORD PTR [rsi]
   14003e2c8:	sub    ch,0x8b
   14003e2cb:	sbb    eax,0x3e1f5fa8
   14003e2d0:	in     al,0xd9
   14003e2d2:	sub    ecx,edi
   14003e2d4:	rex.WRB
   14003e2d5:	rex.WX and al,0x3e
   14003e2d8:	xchg   esp,eax
   14003e2d9:	or     al,0x22
   14003e2db:	fsub   DWORD PTR [rax]
   14003e2dd:	cwde   
   14003e2de:	adc    bh,BYTE PTR [rsi]
   14003e2e0:	or     ebx,esp
   14003e2e2:	add    al,0x93
   14003e2e4:	or     rbp,QWORD PTR [rdx]
   14003e2e7:	ds (bad) 
   14003e2e9:	cmps   BYTE PTR gs:[rsi],BYTE PTR es:[rdi]
   14003e2eb:	stos   DWORD PTR es:[rdi],eax
   14003e2ec:	push   rsi
   14003e2ed:	rex.WRB (bad) 
   14003e2ef:	movsxd edx,DWORD PTR ds:[rcx+0x36]
   14003e2f3:	sbb    DWORD PTR [rax+0x363e210c],edx
   14003e2f9:	(bad)  
   14003e2fa:	pop    rcx
   14003e2fb:	(bad)  
   14003e2fc:	js     0x14003e30d
   14003e2fe:	clc    
   14003e2ff:	cmp    eax,0x25c81cca
   14003e304:	mov    BYTE PTR [rdx+0x10],dl
   14003e307:	ds push 0x74
   14003e30a:	ins    DWORD PTR es:[rdi],dx
   14003e30b:	jge    0x14003e360
   14003e30d:	xchg   ebp,eax
   14003e30e:	loopne 0x14003e34d
   14003e310:	(bad)  
   14003e311:	(bad)  
   14003e312:	or     ah,BYTE PTR [rdi+0x3e1827bf]
   14003e318:	cmp    al,0x93
   14003e31a:	rex.RB in al,dx
   14003e31c:	test   al,0xb0
   14003e31e:	(bad)  
   14003e31f:	ds test eax,0xf81bf5db
   14003e325:	pop    rdx
   14003e326:	adc    BYTE PTR [rsi],bh
   14003e328:	adc    eax,0xfa2655d5
   14003e32d:	loop   0x14003e346
   14003e32f:	ds mov edi,0xecbfaee4
   14003e335:	pop    rcx
   14003e336:	or     eax,0x683fa33e
   14003e33b:	fisubr DWORD PTR [rdi]
   14003e33d:	mov    ebx,DWORD PTR [rip+0x3a37373e]        # 0x17a3b1a81
   14003e343:	std    
   14003e344:	fnstsw WORD PTR [rax+0x12043e24]
   14003e34a:	scas   al,BYTE PTR es:[rdi]
   14003e34b:	(bad)  
   14003e34c:	jle    0x14003e2d0
   14003e34e:	adc    edi,DWORD PTR [rsi]
   14003e350:	lahf   
   14003e351:	psubsw mm1,QWORD PTR [rcx+0x7b]
   14003e355:	mov    WORD PTR [rsi+rdi*1],gs
   14003e358:	sbb    eax,0xf0159759
   14003e35d:	(bad)  
   14003e35e:	sub    DWORD PTR [rsi],edi
   14003e360:	ss jnp 0x14003e394
   14003e363:	outs   dx,BYTE PTR ds:[rsi]
   14003e364:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e365:	stos   BYTE PTR es:[rdi],al
   14003e366:	sbb    DWORD PTR [rsi],edi
   14003e368:	push   rbp
   14003e369:	(bad)  
   14003e36a:	jb     0x14003e375
   14003e36c:	push   rsi
   14003e36d:	jb     0x14003e39d
   14003e36f:	ds push rsp
   14003e371:	lods   al,BYTE PTR ds:[rsi]
   14003e372:	jp     0x14003e370
   14003e374:	xor    ebx,DWORD PTR [rsi+riz*1]
   14003e377:	ds push rdx
   14003e379:	movabs ds:0x27303e29662bcf61,al
   14003e382:	(bad)  
   14003e383:	adc    eax,ecx
   14003e385:	rex.XB sbb BYTE PTR [r14],dil
   14003e388:	ss retf 
   14003e38a:	pop    rdx
   14003e38b:	or     edi,DWORD PTR [rbx-0x5bc1df9c]
   14003e391:	add    DWORD PTR [rdi],esp
   14003e393:	test   BYTE PTR [rsp+rsi*1],cl
   14003e396:	or     bh,BYTE PTR [rsi]
   14003e398:	(bad)  
   14003e399:	jns    0x14003e32a
   14003e39b:	mov    ch,0x55
   14003e39d:	mov    ds,WORD PTR [rdx]
   14003e39f:	ds (bad) 
   14003e3a1:	popf   
   14003e3a2:	pop    rsi
   14003e3a3:	pushf  
   14003e3a4:	and    DWORD PTR [rip+0xfffffffffd6a3de9],ebp        # 0x13d6e2193
   14003e3aa:	jg     0x14003e3b9
   14003e3ac:	out    0x63,al
   14003e3ae:	(bad)  
   14003e3af:	ds adc al,0x63
   14003e3b2:	push   rcx
   14003e3b3:	(bad)  [rsi]
   14003e3b5:	fwait
   14003e3b6:	cs ds or al,0x35
   14003e3ba:	(bad)  
   14003e3bb:	sbb    DWORD PTR [rax-0x7ec1d6dd],edx
   14003e3c1:	pop    rsi
   14003e3c2:	js     0x14003e3fc
   14003e3c4:	mov    BYTE PTR [rdi+0x32],ch
   14003e3c7:	ds scas eax,DWORD PTR es:[rdi]
   14003e3c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e3ca:	stos   DWORD PTR es:[rdi],eax
   14003e3cb:	rex.WR push 0x5b
   14003e3ce:	cmp    edi,DWORD PTR [rsi]
   14003e3d0:	sbb    al,0x76
   14003e3d2:	mov    ds,esp
   14003e3d4:	push   0x22
   14003e3d6:	lock cmp eax,0x313a1aed
   14003e3dc:	xlat   BYTE PTR ds:[rbx]
   14003e3dd:	rex.WX cmp al,0x3e
   14003e3e0:	(bad)  
   14003e3e1:	lea    esi,[rbx+0x7c]
   14003e3e4:	call   0x15841f94d
   14003e3e9:	data16 mov dh,cl
   14003e3ec:	in     al,dx
   14003e3ed:	(bad)  
   14003e3ee:	xor    edi,DWORD PTR [rsi]
   14003e3f0:	data16 jbe 0x14003e46a
   14003e3f3:	cmc    
   14003e3f4:	sahf   
   14003e3f5:	xchg   edx,eax
   14003e3f6:	cmp    eax,0x8da0b83e
   14003e3fb:	lock cmp ecx,DWORD PTR [rax+0x39]
   14003e3ff:	ds es pop rax
   14003e402:	stos   BYTE PTR es:[rdi],al
   14003e403:	out    dx,al
   14003e404:	(bad)  
   14003e405:	fnstsw WORD PTR [rbx]
   14003e407:	ds mov edx,0xdd590237
   14003e40d:	(bad)  
   14003e40e:	cmp    DWORD PTR [rsi],edi
   14003e410:	(bad)  
   14003e411:	retf   0xe0eb
   14003e414:	jmp    0xec41ff0c
   14003e419:	or     eax,0xce538227
   14003e41e:	xor    eax,0x2ab9ba3e
   14003e423:	push   rbx
   14003e424:	je     0x14003e475
   14003e426:	cmp    DWORD PTR [rsi],edi
   14003e428:	push   rsp
   14003e429:	xchg   BYTE PTR [rax+0x7342795],cl
   14003e42f:	ds lock rex.WXB jrcxz 0x14003e43f
   14003e434:	add    BYTE PTR [rdx+0xc],bl
   14003e437:	ds (bad) 
   14003e439:	rol    BYTE PTR [rsi],1
   14003e43b:	(bad)  
   14003e43c:	(bad)  
   14003e43d:	adc    DWORD PTR [rdi],esp
   14003e43f:	ds clc 
   14003e441:	mov    ebp,gs
   14003e443:	mov    ah,0x25
   14003e445:	add    BYTE PTR [rip+0xfffffffff2d2a03e],ah        # 0x132d68489
   14003e44b:	(bad)  
   14003e44c:	mov    edx,ecx
   14003e44e:	cs ds push rsp
   14003e451:	jne    0x14003e45d
   14003e453:	or     al,0x2e
   14003e455:	sub    BYTE PTR [rcx],ah
   14003e457:	ds retf 0x59a7
   14003e45b:	xor    esi,ebx
   14003e45d:	jo     0x14003e46c
   14003e45f:	ds and eax,0x7e13a840
   14003e465:	jg     0x14003e492
   14003e467:	ds (bad) 
   14003e469:	mov    DWORD PTR [rcx],esp
   14003e46b:	ret    
   14003e46c:	outs   dx,BYTE PTR ds:[rsi]
   14003e46d:	xor    BYTE PTR [rbx],dh
   14003e46f:	ds push rax
   14003e471:	jne    0x14003e3fe
   14003e473:	add    edi,eax
   14003e475:	(bad)  
   14003e476:	(bad)  
   14003e477:	ds fs sbb eax,0xb0358cd7
   14003e47e:	ds ds je 0x14003e416
   14003e482:	test   DWORD PTR [rdx],esp
   14003e484:	enter  0x3a76,0x3e
   14003e488:	jrcxz  0x14003e410
   14003e48a:	ficom  WORD PTR [rdx-0x3a]
   14003e48d:	(bad)  
   14003e48e:	cmp    eax,0x8658af3e
   14003e493:	loopne 0x14003e461
   14003e495:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e496:	(bad)  
   14003e497:	ds sahf 
   14003e499:	or     al,al
   14003e49b:	shl    BYTE PTR [rdx-0x2ec1c47c],cl
   14003e4a1:	pop    rbx
   14003e4a2:	ret    0xb0f2
   14003e4a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e4a6:	and    BYTE PTR [rsi],bh
   14003e4a8:	cdq    
   14003e4a9:	neg    BYTE PTR [rbx+0x22]
   14003e4ac:	(bad)  
   14003e4ad:	(bad)  
   14003e4ae:	cmp    eax,0x9bf0373e
   14003e4b3:	test   DWORD PTR [rdi],ecx
   14003e4b5:	mov    cl,0x8
   14003e4b7:	ds loope 0x14003e485
   14003e4ba:	nop
   14003e4bb:	mov    ch,0x23
   14003e4bd:	mov    BYTE PTR [rsi],bh
   14003e4bf:	not    BYTE PTR ds:[rsi+0x1311f31e]
   14003e4c6:	ss ds (bad) 
   14003e4c9:	cpuid  
   14003e4cb:	pop    rsp
   14003e4cc:	xchg   DWORD PTR [rdi],ebx
   14003e4ce:	cs movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e4d1:	mov    ecx,0x95724939
   14003e4d6:	sub    al,0x3e
   14003e4d8:	loop   0x14003e532
   14003e4da:	ds jp  0x14003e472
   14003e4dd:	add    eax,0x3343e38
   14003e4e2:	lahf   
   14003e4e3:	(bad)  
   14003e4e4:	es icebp 
   14003e4e6:	(bad)  
   14003e4e7:	or     DWORD PTR ds:[rsi-0x72],edx
   14003e4eb:	pop    rcx
   14003e4ec:	cmc    
   14003e4ed:	push   rbx
   14003e4ee:	cmp    DWORD PTR [rsi],edi
   14003e4f0:	rex.W (bad) 
   14003e4f2:	push   rsi
   14003e4f3:	clc    
   14003e4f4:	outs   dx,DWORD PTR ds:[rsi]
   14003e4f5:	shl    DWORD PTR [rsi],0x3e
   14003e4f8:	hlt    
   14003e4f9:	(bad)  
   14003e4fa:	repnz mov cr1,rbx
   14003e4fe:	and    al,0x3e
   14003e500:	movabs ds:0x563e35e120d53d53,al
   14003e509:	repnz mov DWORD PTR [rcx+0x7f],esp
   14003e50d:	push   rdx
   14003e50e:	cmp    bh,BYTE PTR [rsi]
   14003e510:	setl   ah
   14003e513:	(bad)  
   14003e514:	cld    
   14003e515:	push   rsi
   14003e516:	cmp    BYTE PTR [rsi],bh
   14003e518:	fcmovbe st,st(7)
   14003e51a:	sub    BYTE PTR [rdx+0x3e300c2e],al
   14003e520:	loopne 0x14003e501
   14003e522:	rex.R xchg esp,eax
   14003e524:	rcl    BYTE PTR [rbx],1
   14003e526:	icebp  
   14003e527:	cmp    eax,0xeea59a6
   14003e52c:	movsxd edx,DWORD PTR [rax]
   14003e52e:	and    eax,0x32d7113e
   14003e533:	vmread QWORD PTR [rsi],rbp
   14003e536:	es ds iret 
   14003e539:	clc    
   14003e53a:	adc    BYTE PTR [rdx],bl
   14003e53c:	fnstcw WORD PTR [rsi]
   14003e53e:	in     eax,dx
   14003e53f:	cmp    eax,0x7e4bcd85
   14003e544:	rex.WX
   14003e545:	and    edi,DWORD PTR gs:[rsi]
   14003e548:	and    DWORD PTR [rbp+0x5b784980],ebp
   14003e54e:	add    eax,0xb16e643e
   14003e553:	(bad)  
   14003e554:	sub    eax,0xc3e212f
   14003e559:	cmc    
   14003e55a:	cmp    ecx,ebx
   14003e55c:	lods   eax,DWORD PTR ds:[rsi]
   14003e55d:	(bad)  
   14003e55e:	(bad)  
   14003e55f:	ds cld 
   14003e561:	xor    BYTE PTR [rcx+0x62],0x84
   14003e565:	(bad)  
   14003e566:	sub    BYTE PTR [rsi],bh
   14003e568:	(bad)  
   14003e569:	rex.WB loope 0x14003e533
   14003e56c:	(bad)  
   14003e56e:	(bad)  
   14003e56f:	cmp    eax,0x19365163
   14003e574:	nop
   14003e575:	or     al,0x31
   14003e577:	mov    BYTE PTR ds:[rsi-0x5f],dh
   14003e57b:	sub    ecx,DWORD PTR [rbp+0x3c]
   14003e57e:	(bad)  
   14003e57f:	cmp    DWORD PTR ds:[rip+0xffffffffe8a5e0e9],0x21af3e2a        # 0x128a9c673
   14003e58a:	(bad)  
   14003e58b:	lock (bad) 
   14003e58d:	mov    al,0x2a
   14003e58f:	ds pop bx
   14003e592:	fnsave [rbx+rcx*4+0x1e]
   14003e596:	xor    BYTE PTR [rsi],bh
   14003e598:	xchg   esp,eax
   14003e599:	push   rsp
   14003e59a:	mov    ebx,0x2d206fec
   14003e59f:	ds add ah,cl
   14003e5a2:	rex.WRXB jb 0x14003e530
   14003e5a5:	mov    ah,0xf0
   14003e5a7:	cmp    eax,0xb61e229
   14003e5ac:	(bad)  
   14003e5ad:	cmp    DWORD PTR [rdi],0x3e
   14003e5b0:	scas   eax,DWORD PTR es:[rdi]
   14003e5b1:	mov    esp,0x1a97c407
   14003e5b6:	clc    
   14003e5b7:	cmp    eax,0x1ccbb7aa
   14003e5bc:	ins    BYTE PTR es:[rdi],dx
   14003e5bd:	sub    BYTE PTR [rsi],bh
   14003e5bf:	ds xchg ebx,eax
   14003e5c1:	or     ah,BYTE PTR [rdx]
   14003e5c3:	or     rsp,QWORD PTR [r11+0x28]
   14003e5c7:	ds pop rsp
   14003e5c9:	sub    al,0xa2
   14003e5cb:	rcl    DWORD PTR [rip+0x463dff0b],0x9        # 0x18641e4dd
   14003e5d2:	sbb    al,0xe7
   14003e5d4:	rex.RB push r12
   14003e5d6:	xor    eax,0x66d853e
   14003e5db:	clc    
   14003e5dc:	xor    dh,ah
   14003e5de:	cmp    edi,DWORD PTR [rsi]
   14003e5e0:	cmp    DWORD PTR [rcx+rbx*8-0x10],ebp
   14003e5e4:	fistp  WORD PTR [rcx-0x4f7ec1db]
   14003e5ea:	(bad)  
   14003e5eb:	mov    cl,0x85
   14003e5ed:	int3   
   14003e5ee:	ss ds enter 0x1ea8,0x0
   14003e5f4:	ins    DWORD PTR es:[rdi],dx
   14003e5f5:	rex.RXB xor al,0x3e
   14003e5f8:	(bad)  
   14003e5f9:	rcl    DWORD PTR [rsi],cl
   14003e5fb:	sahf   
   14003e5fc:	mov    BYTE PTR [rdi],bh
   14003e5fe:	(bad)  
   14003e5ff:	xchg   DWORD PTR ds:[rdx],ebp
   14003e602:	jns    0x14003e611
   14003e604:	adc    BYTE PTR [rdi+0x33],dl
   14003e607:	test   BYTE PTR ds:[rcx],0x61
   14003e60b:	scas   al,BYTE PTR es:[rdi]
   14003e60c:	jns    0x14003e5df
   14003e60e:	cmp    edi,DWORD PTR [rsi]
   14003e610:	loop   0x14003e608
   14003e612:	ret    
   14003e613:	push   rsi
   14003e614:	adc    BYTE PTR [rbx+0x8fb3e0c],ah
   14003e61a:	pushf  
   14003e61b:	(bad)  
   14003e61c:	jo     0x14003e646
   14003e61e:	cmp    eax,0xd2673f3e
   14003e623:	cmp    BYTE PTR [rax],0xba
   14003e626:	cmp    bh,BYTE PTR [rsi]
   14003e628:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e629:	jge    0x14003e654
   14003e62b:	retf   
   14003e62c:	xor    esi,DWORD PTR [rsi]
   14003e62e:	sub    al,0x3e
   14003e630:	add    ch,dl
   14003e632:	out    dx,eax
   14003e633:	cdq    
   14003e634:	cmp    BYTE PTR [rcx+riz*1+0x2008e63e],al
   14003e63b:	popf   
   14003e63c:	leave  
   14003e63d:	int3   
   14003e63e:	cmp    edi,DWORD PTR [rsi]
   14003e640:	push   rax
   14003e641:	sar    DWORD PTR [rbp+0x38000544],cl
   14003e647:	ds loope 0x14003e6b4
   14003e64a:	(bad)  
   14003e64b:	es ret 0x2b91
   14003e64f:	fild   QWORD PTR ds:[rbx]
   14003e652:	mov    dh,0x26
   14003e654:	fistp  QWORD PTR [rdx+0x2a]
   14003e657:	ds leave 
   14003e659:	outs   dx,BYTE PTR ds:[rsi]
   14003e65a:	(bad)  
   14003e65b:	enter  0x764f,0x18
   14003e65f:	ds lock push 0x4f3de50f
   14003e666:	(bad)  
   14003e667:	ds jrcxz 0x14003e5ff
   14003e66a:	jns    0x14003e6e1
   14003e66c:	retf   0xf760
   14003e66f:	cmp    eax,0xd3805147
   14003e674:	jle    0x14003e6dc
   14003e676:	cld    
   14003e677:	cmp    eax,0x196adf6f
   14003e67c:	div    BYTE PTR [rbx]
   14003e67e:	(bad)  
   14003e67f:	imul   eax,DWORD PTR ds:[rbx-0x48ef0cc2],0x2f
   14003e687:	adc    edx,DWORD PTR ds:[rax]
   14003e68a:	fs mov edx,0x3e39886e
   14003e690:	sbb    cl,BYTE PTR [rdi+rbp*4-0x4ac9730]
   14003e697:	cmp    eax,0x1b8d2971
   14003e69c:	imul   ecx,DWORD PTR [rbp+rsi*1+0x6d08fb3e],0xfe946522
   14003e6a7:	cmp    eax,0x63f0097
   14003e6ac:	jle    0x14003e706
   14003e6ae:	xor    edi,DWORD PTR [rsi]
   14003e6b0:	sbb    BYTE PTR [rdi+0x18e70212],bl
   14003e6b6:	ss ds push rsp
   14003e6b9:	lods   al,BYTE PTR ds:[rsi]
   14003e6ba:	jp     0x14003e6b8
   14003e6bc:	xor    ebx,DWORD PTR [rsi+rsi*1]
   14003e6bf:	ds rex.WX (bad) 
   14003e6c2:	or     BYTE PTR [rsi+riz*4+0x213e3f07],al
   14003e6c9:	push   rsp
   14003e6ca:	xchg   esp,eax
   14003e6cb:	in     al,0xbf
   14003e6cd:	xor    al,0x3c
   14003e6cf:	or     esi,DWORD PTR ds:[rax]
   14003e6d2:	rex.B (bad) 
   14003e6d4:	lock mov cl,0x38
   14003e6d7:	movsxd ebx,DWORD PTR ds:[rbx]
   14003e6da:	(bad)  
   14003e6db:	test   BYTE PTR [rdx+0x43],al
   14003e6de:	(bad)  
   14003e6df:	ds ss je 0x14003e71c
   14003e6e3:	pop    rsi
   14003e6e4:	or     DWORD PTR [rbx+0x3a],esp
   14003e6e7:	ficomp WORD PTR ds:[rcx]
   14003e6ea:	mov    ecx,0x34428656
   14003e6ef:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003e6f1:	fnstenv [rdx+0x36ca9201]
   14003e6f7:	ds sbb al,0x93
   14003e6fa:	sub    bh,BYTE PTR [rdx]
   14003e6fc:	(bad)  
   14003e6fd:	cmp    BYTE PTR [rdi],ah
   14003e6ff:	xor    BYTE PTR ds:[rdx+0x11880e17],dl
   14003e706:	cmp    al,0x3e
   14003e708:	(bad)  
   14003e709:	push   rdx
   14003e70a:	ins    DWORD PTR es:[rdi],dx
   14003e70b:	(bad)  
   14003e70c:	fdivr  QWORD PTR [rip+0xffffffffe9173e31]        # 0x1291b2543
   14003e712:	and    cl,BYTE PTR [rcx+0x3e33eed5]
   14003e718:	push   rax
   14003e719:	(bad)  [rbx-0x7c]
   14003e71c:	xchg   edx,eax
   14003e71d:	pop    rcx
   14003e71e:	sub    DWORD PTR [rsi],edi
   14003e720:	mov    esp,DWORD PTR [rdi]
   14003e722:	cs pop rdi
   14003e724:	rex.WRB fisttp DWORD PTR [rip+0x635c43e]        # 0x14639ab69
   14003e72b:	sub    dh,cl
   14003e72d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e72e:	icebp  
   14003e72f:	cmp    eax,0x882c3c34
   14003e734:	lock rex.X
   14003e736:	rex.RX
   14003e737:	ds pop rsi
   14003e739:	rex.RXB mul BYTE PTR [r15+0x3e2aee9b]
   14003e740:	in     al,0x60
   14003e742:	rex.WX cmp QWORD PTR [rdi+0x4b],0x26
   14003e747:	ds cs jns 0x14003e78e
   14003e74b:	loop   0x14003e78f
   14003e74d:	or     eax,0x4f013e29
   14003e752:	adc    ecx,DWORD PTR [rax]
   14003e754:	and    BYTE PTR [rdi],ah
   14003e756:	rex.WR
   14003e757:	ds pop rbx
   14003e759:	iret   
   14003e75a:	(bad)  
   14003e75b:	(bad)  
   14003e75c:	cs js  0x14003e7a9
   14003e75f:	ds rex.W
   14003e761:	data16 fidivr DWORD PTR [rcx+0x5c]
   14003e765:	push   rax
   14003e766:	rex.R
   14003e767:	ds and ebp,ecx
   14003e76a:	rex.WRB (bad) 
   14003e76c:	(bad)  
   14003e76d:	test   eax,0xd5bc3e4c
   14003e772:	jl     0x14003e7d6
   14003e774:	cmp    eax,0x133e297d
   14003e779:	stos   BYTE PTR es:[rdi],al
   14003e77a:	mov    esp,0x20b15cf9
   14003e77f:	fnsave ds:[rsi-0x31]
   14003e783:	movsxd esp,DWORD PTR [rax]
   14003e785:	pop    rbx
   14003e786:	xor    DWORD PTR [rsi],edi
   14003e788:	rex.W (bad) 
   14003e78a:	stos   BYTE PTR es:[rdi],al
   14003e78b:	repz out 0x83,al
   14003e78e:	sub    DWORD PTR [rsi],edi
   14003e790:	xchg   esp,eax
   14003e791:	jmp    0x18c68dc95
   14003e796:	(bad)  
   14003e797:	ds cvtps2pd xmm5,xmm0
   14003e79b:	jl     0x14003e757
   14003e79d:	mov    esi,0xa6b83e46
   14003e7a2:	rex.WRX std 
   14003e7a4:	imul   ebx,DWORD PTR [rbx+rdi*1+0x5fa4ab3e],0x2b6aa583
   14003e7af:	ds shr ebp,1
   14003e7b2:	vmwrite rax,rbx
   14003e7b5:	int3   
   14003e7b6:	rex.XB
   14003e7b7:	ds loopne 0x14003e809
   14003e7ba:	rex (bad) 
   14003e7bc:	rex.WR shr BYTE PTR [rcx],0x3e
   14003e7c0:	popf   
   14003e7c1:	fdiv   DWORD PTR [rbp+0x7a]
   14003e7c4:	rex.WXB jae 0x14003e807
   14003e7c7:	adc    dl,BYTE PTR ds:[rsi]
   14003e7ca:	loopne 0x14003e790
   14003e7cc:	add    al,0x44
   14003e7ce:	sbb    edi,DWORD PTR [rsi]
   14003e7d0:	xchg   esp,eax
   14003e7d1:	rex.W (bad) 
   14003e7d3:	ret    0xc565
   14003e7d6:	rex
   14003e7d7:	ds int 0x35
   14003e7da:	fld    DWORD PTR [rcx+0x14]
   14003e7dd:	(bad)  
   14003e7de:	xor    edi,DWORD PTR [rsi]
   14003e7e0:	rex.WRX cmp r13,QWORD PTR [rbx+0x55]
   14003e7e4:	xchg   edx,eax
   14003e7e5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003e7e6:	jb     0x14003e825
   14003e7e8:	rex.XB fadd QWORD PTR [r9+0x3]
   14003e7ec:	or     edx,edi
   14003e7ee:	and    BYTE PTR [rsi],bh
   14003e7f0:	hlt    
   14003e7f1:	(bad)  
   14003e7f3:	or     DWORD PTR [rax-0x71],esi
   14003e7f6:	cs mov r8b,BYTE PTR ds:[r11+rcx*4]
   14003e7fc:	neg    BYTE PTR [rbx]
   14003e7fe:	rex.WXB
   14003e7ff:	ds push rsi
   14003e801:	test   eax,0xee52dffa
   14003e806:	ds ds mov ebp,0x900e465
   14003e80d:	imul   eax,DWORD PTR [rbp+0x3e],0x66
   14003e811:	jbe    0x14003e88a
   14003e813:	cmc    
   14003e814:	sahf   
   14003e815:	xchg   edx,eax
   14003e816:	rex.WRB
   14003e817:	ds (bad) 
   14003e819:	loop   0x14003e852
   14003e81b:	xchg   BYTE PTR [rdx-0xfc1b792],ah
   14003e821:	movabs ds:0xec743e4665aff10c,al
   14003e82a:	scas   rax,QWORD PTR es:[rdi]
   14003e82c:	std    
   14003e82d:	adc    DWORD PTR [rdi],ebp
   14003e82f:	ds (bad) 
   14003e831:	shl    DWORD PTR [rsi+rax*4+0x3e4cbe1b],1
   14003e838:	gs jbe 0x14003e7e3
   14003e83b:	(bad)  
   14003e83c:	pop    rbx
   14003e83d:	mov    al,0x25
   14003e83f:	ds sbb eax,0xc20a1a4a
   14003e845:	(bad)  
   14003e846:	rex.B
   14003e847:	ds lahf 
   14003e849:	fwait
   14003e84a:	or     bl,BYTE PTR [rdi-0x33]
   14003e84e:	rex.B
   14003e84f:	ds jo  0x14003e8a2
   14003e852:	es enter 0x3656,0x45
   14003e857:	ds (bad) 
   14003e859:	and    ch,BYTE PTR [rax]
   14003e85b:	xor    eax,0x3e377ed8
   14003e860:	sar    BYTE PTR [rcx+0x17bc3040],cl
   14003e866:	and    al,0x3e
   14003e868:	repnz out dx,eax
   14003e86a:	jns    0x14003e8e7
   14003e86c:	out    dx,eax
   14003e86d:	mov    es,WORD PTR [rax+0x3e]
   14003e870:	jmp    0x1af3dc4cc
   14003e875:	(bad)  
   14003e876:	rex.WRB
   14003e877:	ds push rdi
   14003e879:	hlt    
   14003e87a:	or     al,0xa7
   14003e87c:	xchg   ebx,eax
   14003e87d:	add    al,0x4c
   14003e87f:	ds or  al,0xa6
   14003e882:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e883:	(bad)  
   14003e884:	(bad)  
   14003e885:	or     DWORD PTR [rdx+0x3e],0xffffffba
   14003e889:	push   rdi
   14003e88a:	(bad)
   14003e88d:	(bad)  
   14003e88e:	xor    BYTE PTR [rsi],bh
   14003e890:	or     bh,BYTE PTR [rbp-0x3693ed18]
   14003e896:	rex.R
   14003e897:	ds adc eax,0x1993e323
   14003e89d:	sub    al,0x3d
   14003e89f:	ds rex.X (bad) 
   14003e8a2:	pop    rdi
   14003e8a3:	adc    esp,DWORD PTR [rcx]
   14003e8a5:	(bad)  
   14003e8a6:	and    bh,BYTE PTR [rsi]
   14003e8a8:	jge    0x14003e91e
   14003e8aa:	fimul  DWORD PTR [rbp+0x3e]
   14003e8ad:	(bad)  
   14003e8ae:	(bad)  
   14003e8af:	sub    esp,DWORD PTR ds:[rdi-0x76096bf]
   14003e8b6:	cld    
   14003e8b7:	cmp    eax,0x2f10831
   14003e8bc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003e8bd:	and    QWORD PTR [r14],rdi
   14003e8c0:	(bad)  [rbp-0x7f]
   14003e8c3:	jl     0x14003e910
   14003e8c5:	lods   eax,DWORD PTR ds:[rsi]
   14003e8c6:	rex.WRX
   14003e8c7:	ds or  ah,bh
   14003e8ca:	movsxd edi,esi
   14003e8cc:	xor    BYTE PTR [rcx+0x4e],ch
   14003e8cf:	ds (bad) 
   14003e8d1:	out    dx,al
   14003e8d2:	fnstcw WORD PTR [rsi+0x3e41e106]
   14003e8d8:	xchg   edx,eax
   14003e8d9:	sbb    al,0xf1
   14003e8db:	(bad)  
   14003e8dc:	sub    ebp,DWORD PTR [rax+0x2d]
   14003e8df:	ds jl  0x14003e886
   14003e8e2:	fisttp DWORD PTR [rax+0x3e3a07f1]
   14003e8e8:	div    BYTE PTR [rdx-0x3f]
   14003e8eb:	sub    eax,0x3e40f934
   14003e8f0:	and    eax,0x3fde623e
   14003e8f5:	out    dx,eax
   14003e8f6:	add    edi,DWORD PTR [rsi]
	...
   14003e904:	add    BYTE PTR [rax],al
   14003e906:	add    BYTE PTR [rax+0x20],al
   14003e909:	loopne 0x14003e92a
   14003e90b:	loopne 0x14003e92c
   14003e90d:	loopne 0x14003e90e
   14003e90f:	(bad)  
   14003e910:	lock (bad) 
   14003e912:	cld    
   14003e913:	add    DWORD PTR [rdi-0x40],edi
   14003e916:	(bad)  
   14003e917:	(bad)  
   14003e918:	adc    bh,dl
   14003e91a:	add    DWORD PTR [rdx+0x3fffa11c],ebp
   14003e920:	and    al,bh
   14003e922:	sbb    DWORD PTR [rdi],0x3fff81f8
   14003e928:	mov    ch,0xdb
   14003e92a:	movabs al,ds:0x4a42713fff6310ac
   14003e933:	sahf   
   14003e934:	gs rex.R (bad) 
   14003e937:	(bad)  
   14003e938:	mov    ch,0xa
   14003e93a:	and    eax,DWORD PTR [rsi+rsi*8+0x25]
   14003e93e:	(bad)  
   14003e93f:	(bad)  
   14003e940:	or     BYTE PTR [rdi],bl
   14003e942:	jl     0x14003e934
   14003e944:	rol    DWORD PTR [rdi],0xff
   14003e947:	(bad)  
   14003e948:	add    cl,BYTE PTR [rsi-0x163807bb]
   14003e94e:	(bad)  
   14003e94f:	(bad)  
   14003e950:	shr    ah,0x1
   14003e953:	mov    bl,0x7
   14003e955:	int3   
   14003e956:	(bad)  
   14003e957:	(bad)  
   14003e958:	jmp    0x14003e95b
   14003e95a:	mov    edx,0xfeae807a
   14003e95f:	(bad)  
   14003e960:	addr32 mov bh,0xf0
   14003e963:	stos   DWORD PTR es:[rdi],eax
   14003e964:	xor    DWORD PTR [rcx+0x50e43ffe],edx
   14003e96a:	xchg   edi,eax
   14003e96b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003e96c:	sbb    dh,BYTE PTR [rsi+rdi*8+0x3f]
   14003e970:	je     0x14003e957
   14003e972:	add    ecx,ecx
   14003e974:	cmp    dl,BYTE PTR [rdi-0x2]
   14003e977:	(bad)  
   14003e978:	jae    0x14003e994
   14003e97a:	fdivr  QWORD PTR [rcx-0x6f]
   14003e97d:	cmp    bh,dh
   14003e97f:	(bad)  
   14003e980:	(bad)  
   14003e981:	(bad)  
   14003e982:	(bad)  
   14003e983:	(bad)  
   14003e984:	(bad)  
   14003e985:	(bad)  
   14003e986:	(bad)  
   14003e987:	(bad)  
   14003e988:	(bad)  
   14003e989:	loopne 0x14003e98c
   14003e98b:	(bad)  
   14003e98c:	loopne 0x14003e98f
   14003e98e:	(bad)  
   14003e98f:	(bad)  
   14003e990:	mov    al,BYTE PTR [rsi-0x1a291c08]
   14003e996:	std    
   14003e997:	(bad)  
   14003e998:	retf   0xa01d
   14003e99b:	fadd   QWORD PTR [rcx]
   14003e99d:	retf   0x3ffd
   14003e9a0:	fild   DWORD PTR [rcx-0x519f8947]
   14003e9a6:	std    
   14003e9a7:	(bad)  
   14003e9a8:	mov    bh,BYTE PTR [rdi+0x1e]
   14003e9ab:	and    esi,edx
   14003e9ad:	xchg   edx,eax
   14003e9ae:	std    
   14003e9af:	(bad)  
   14003e9b0:	xor    al,0x2c
   14003e9b2:	mov    eax,0xfd77b654
   14003e9b7:	(bad)  
   14003e9b8:	mov    dl,0x72
   14003e9ba:	jne    0x14003e93c
   14003e9bc:	lods   al,BYTE PTR ds:[rsi]
   14003e9bd:	pop    rsp
   14003e9be:	std    
   14003e9bf:	(bad)  
   14003e9c0:	sbb    eax,0xd41d41d4
   14003e9c5:	rex.B std 
   14003e9c7:	(bad)  
   14003e9c8:	sbb    bl,BYTE PTR [rbx-0x4]
   14003e9cb:	movabs ds:0x8f6ec0743ffd272c,eax
   14003e9d4:	mov    ch,0xc
   14003e9d6:	std    
   14003e9d7:	(bad)  
   14003e9d8:	(bad)  
   14003e9d9:	mov    edi,0xf26e5c44
   14003e9de:	cld    
   14003e9df:	(bad)  
   14003e9e0:	or     ebx,DWORD PTR [rbx-0x27a976fd]
   14003e9e6:	cld    
   14003e9e7:	(bad)  
   14003e9e8:	out    0xcb,eax
   14003e9ea:	add    DWORD PTR [rsi+0x3ffcbe6d],edx
   14003e9f0:	xchg   ecx,eax
   14003e9f1:	loope  0x14003ea51
   14003e9f3:	add    eax,0x3ffca4b3
   14003e9f8:	rex.X mov dil,bl
   14003e9fb:	pop    rdx
   14003e9fc:	es mov edi,esp
   14003e9ff:	(bad)  
   14003ea00:	sbb    al,0xc7
   14003ea02:	jno    0x14003ea20
   14003ea04:	(bad)  
   14003ea05:	jno    0x14003ea03
   14003ea07:	(bad)  
   14003ea08:	xchg   BYTE PTR [rcx+0xd],cl
   14003ea0b:	rcl    DWORD PTR [rax+rbx*2-0x70fc004],1
   14003ea12:	ret    
   14003ea13:	add    DWORD PTR [rdi+0x1c3ffc3f],ecx
   14003ea19:	movabs al,ds:0xc0e03ffc26b5392e
   14003ea22:	add    DWORD PTR [rbx],0x3ffc0e07
   14003ea28:	mov    ecx,DWORD PTR [rbp-0xa7c117a]
   14003ea2e:	sti    
   14003ea2f:	(bad)  
   14003ea30:	test   DWORD PTR [rsi],0xdd2b8994
   14003ea36:	sti    
   14003ea37:	(bad)  
   14003ea38:	jnp    0x14003ea78
   14003ea3a:	mov    BYTE PTR [rbp-0x3],ah
   14003ea3d:	(bad)  
   14003ea3e:	sti    
   14003ea3f:	(bad)  
   14003ea40:	sar    BYTE PTR [rdx-0x5306eb3f],1
   14003ea46:	sti    
   14003ea47:	(bad)  
   14003ea48:	and    edi,edi
   14003ea4a:	sbb    BYTE PTR [rbx],ch
   14003ea4c:	(bad)  
   14003ea4d:	xchg   ebp,eax
   14003ea4e:	sti    
   14003ea4f:	(bad)  
   14003ea50:	mov    esi,DWORD PTR [rbx]
   14003ea52:	fidivr DWORD PTR [rip+0x3ffb7d6c]        # 0x17fff67c4
   14003ea58:	add    eax,0xe2e3beee
   14003ea5d:	gs sti 
   14003ea5f:	(bad)  
   14003ea60:	rex.WRXB sbb r13,r8
   14003ea63:	mov    ah,0x81
   14003ea65:	rex.WRX sti 
   14003ea67:	(bad)  
   14003ea68:	(bad)  
   14003ea69:	(bad)  
   14003ea6a:	fmul   DWORD PTR [rdx+0x48]
   14003ea6d:	(bad)  
   14003ea6e:	sti    
   14003ea6f:	(bad)  
   14003ea70:	fld    DWORD PTR [rax+0x2036406c]
   14003ea76:	sti    
   14003ea77:	(bad)  
   14003ea78:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003ea79:	and    bl,cl
   14003ea7b:	xor    DWORD PTR [rbx+0x9],ecx
   14003ea7e:	sti    
   14003ea7f:	(bad)  
   14003ea80:	sub    BYTE PTR [rdi-0xd79435f],ch
   14003ea86:	cli    
   14003ea87:	(bad)  
   14003ea88:	pop    rsi
   14003ea89:	nop
   14003ea8a:	xchg   esp,eax
   14003ea8b:	jg     0x14003ea75
   14003ea8d:	(bad)  
   14003ea8f:	(bad)  
   14003ea90:	sbb    esi,DWORD PTR [rax-0x3b]
   14003ea93:	sbb    dh,BYTE PTR [rax-0x3b]
   14003ea96:	cli    
   14003ea97:	(bad)  
   14003ea98:	std    
   14003ea99:	jmp    0x14003ea22
   14003ea9b:	(bad)  
   14003ea9c:	sbb    eax,0xbe3ffaaf
   14003eaa1:	movsxd ebp,DWORD PTR [rdx+0x60]
   14003eaa4:	out    dx,eax
   14003eaa5:	cwde   
   14003eaa6:	cli    
   14003eaa7:	(bad)  
   14003eaa8:	pop    rcx
   14003eaa9:	loope  0x14003eadb
   14003eaab:	push   rcx
   14003eaac:	out    0x82,al
   14003eaae:	cli    
   14003eaaf:	(bad)  
   14003eab0:	ins    DWORD PTR es:[rdi],dx
   14003eab1:	sbb    dl,al
   14003eab3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003eab4:	add    DWORD PTR [rbp-0x6],ebp
   14003eab7:	(bad)  
   14003eab8:	rex.WX mov bpl,BYTE PTR [rax+0x7]
   14003eabc:	push   r15
   14003eabe:	cli    
   14003eabf:	(bad)  
   14003eac0:	sbb    ah,BYTE PTR [rcx+rax*2-0x5be5be6]
   14003eac7:	(bad)  
   14003eac8:	movabs al,ds:0x23ffa2c2a87c51c
   14003ead1:	rex.WXB jp 0x14003eacd
   14003ead4:	rcl    DWORD PTR [rsi],cl
   14003ead6:	cli    
   14003ead7:	(bad)  
   14003ead8:	sbb    ah,BYTE PTR [rax+0x1a01a01]
   14003eade:	cli    
   14003eadf:	(bad)  
   14003eae0:	fnstenv [rbx]
   14003eae2:	adc    BYTE PTR [rbp+0x3ff9ec8e],dl
   14003eae8:	sub    eax,0x9f176b68
   14003eaed:	xlat   BYTE PTR ds:[rbx]
   14003eaee:	stc    
   14003eaef:	(bad)  
   14003eaf0:	add    ah,BYTE PTR [rcx-0x3d2eb11c]
   14003eaf6:	stc    
   14003eaf7:	(bad)  
   14003eaf8:	ficom  DWORD PTR [rax]
   14003eafa:	push   rbp
   14003eafb:	(bad)  
   14003eafc:	and    al,0xae
   14003eafe:	stc    
   14003eaff:	(bad)  
   14003eb00:	(bad)  
   14003eb01:	cdq    
   14003eb02:	cdq    
   14003eb03:	cdq    
   14003eb04:	cdq    
   14003eb05:	cdq    
   14003eb06:	stc    
   14003eb07:	(bad)  
   14003eb08:	inc    eax
   14003eb0a:	mov    cs,WORD PTR [rip+0x3ff9852f]        # 0x17ffd703f
   14003eb10:	jb     0x14003eaca
   14003eb12:	or     al,0xf8
   14003eb14:	in     al,0x70
   14003eb16:	stc    
   14003eb17:	(bad)  
   14003eb18:	scas   al,BYTE PTR es:[rdi]
   14003eb19:	ja     0x14003eafe
   14003eb1b:	or     edi,DWORD PTR [rbx-0x1fc006a4]
   14003eb21:	jmp    0x188b4e7fc
   14003eb26:	stc    
   14003eb27:	(bad)  
   14003eb28:	out    0x2c,al
   14003eb2a:	fwait
   14003eb2b:	jg     0x14003eaf3
   14003eb2d:	xor    al,0xf9
   14003eb2f:	(bad)  
   14003eb30:	sub    edx,esp
   14003eb32:	ror    BYTE PTR [rcx-0x5],1
   14003eb35:	and    cl,bh
   14003eb37:	(bad)  
   14003eb38:	(bad)  
   14003eb39:	nop
   14003eb3a:	add    DWORD PTR [rdx],edx
   14003eb3c:	rex.WRXB or rax,0x18fa3ff9
   14003eb42:	pushf  
   14003eb43:	pop    rcx
   14003eb45:	stc    
   14003eb46:	clc    
   14003eb47:	(bad)  
   14003eb48:	(bad)  
   14003eb49:	(bad)  
   14003eb4a:	icebp  
   14003eb4b:	jp     0x14003eb9f
   14003eb4d:	out    0xf8,al
   14003eb4f:	(bad)  
   14003eb50:	rcr    DWORD PTR [rax],cl
   14003eb52:	xor    BYTE PTR [rbp+0x3ff8d301],cl
   14003eb58:	cmp    bh,bh
   14003eb5a:	(bad)  
   14003eb5b:	or     dh,0xbf
   14003eb5e:	clc    
   14003eb5f:	(bad)  
   14003eb60:	stos   BYTE PTR es:[rdi],al
   14003eb61:	repz imul ecx,DWORD PTR [rdi],0xffffffb9
   14003eb65:	lods   al,BYTE PTR ds:[rsi]
   14003eb66:	clc    
   14003eb67:	(bad)  
   14003eb68:	pushf  
   14003eb69:	mov    DWORD PTR [rcx],eax
   14003eb6b:	test   al,0x99
   14003eb6e:	clc    
   14003eb6f:	(bad)  
   14003eb70:	rex.WX mov al,0xab
   14003eb73:	lock in eax,0x86
   14003eb76:	clc    
   14003eb77:	(bad)  
   14003eb78:	mov    ecx,0x27bcc092
   14003eb7d:	je     0x14003eb77
   14003eb7f:	(bad)  
   14003eb80:	sbb    BYTE PTR [rsi+0x61861861],al
   14003eb86:	clc    
   14003eb87:	(bad)  
   14003eb88:	adc    al,0x6
   14003eb8a:	js     0x14003eb4e
   14003eb8c:	add    BYTE PTR [rdi-0x8],cl
   14003eb8f:	(bad)  
   14003eb90:	fnstsw WORD PTR [rsi+0x3c977ab2]
   14003eb96:	clc    
   14003eb97:	(bad)  
   14003eb98:	movabs al,ds:0x183ff82a4a0182a4
   14003eba1:	sbb    BYTE PTR [rax],bl
   14003eba3:	sbb    BYTE PTR [rax],bl
   14003eba5:	sbb    al,bh
   14003eba7:	(bad)  
   14003eba8:	(bad)  
   14003eba9:	sbb    BYTE PTR [rax-0x80],ah
   14003ebac:	add    DWORD PTR [rsi],eax
   14003ebae:	clc    
   14003ebaf:	(bad)  
   14003ebb0:	rex jg 0x14003ebb4
   14003ebb3:	std    
   14003ebb4:	add    eax,0x1d3ff7f4
   14003ebb9:	rex.WRXB pop r10
   14003ebbb:	push   rcx
   14003ebbc:	and    eax,0xf43ff7e2
   14003ebc1:	add    eax,0xd05f417d
   14003ebc6:	idiv   DWORD PTR [rdi]
   14003ebc8:	jl     0x14003ebcb
   14003ebca:	cs xchg edx,eax
   14003ebcc:	mov    bl,0xbe
   14003ebce:	idiv   DWORD PTR [rdi]
   14003ebd0:	ret    
   14003ebd1:	in     al,dx
   14003ebd2:	loopne 0x14003ebdc
   14003ebd4:	and    ch,BYTE PTR [rbp+0x398b3ff7]
   14003ebda:	mov    dh,0x6b
   14003ebdc:	stos   BYTE PTR es:[rdi],al
   14003ebdd:	fwait
   14003ebde:	idiv   DWORD PTR [rdi]
   14003ebe0:	enter  0x78a4,0x81
   14003ebe4:	rex.WR mov r14b,dil
   14003ebe7:	(bad)  
   14003ebe8:	or     eax,0x8119ac6
   14003ebed:	jns    0x14003ebe6
   14003ebef:	(bad)  
   14003ebf0:	mov    cl,0xa9
   14003ebf2:	xor    al,0xe4
   14003ebf4:	fsub   QWORD PTR [rdi-0x9]
   14003ebf7:	(bad)  
   14003ebf8:	ins    DWORD PTR es:[rdi],dx
   14003ebf9:	jne    0x14003ebfc
   14003ebfb:	ret    0x56ca
   14003ebfe:	idiv   DWORD PTR [rdi]
   14003ec00:	rex.RX (bad) 
   14003ec02:	pop    rbp
   14003ec03:	je     0x14003ebd6
   14003ec05:	rex.RB idiv DWORD PTR [r15]
   14003ec08:	(bad)  
   14003ec09:	inc    BYTE PTR [rcx-0x3b]
   14003ec0c:	lock xor al,0xf7
   14003ec0f:	(bad)  
   14003ec10:	mov    esp,0x287f46de
   14003ec15:	and    al,0xf7
   14003ec17:	(bad)  
   14003ec18:	or     DWORD PTR [rsp+rbx*4+0x6d],edi
   14003ec1c:	js     0x14003ec31
   14003ec1e:	idiv   DWORD PTR [rdi]
   14003ec20:	jo     0x14003eba3
   14003ec22:	or     ebx,DWORD PTR [rax+riz*8+0x2]
   14003ec26:	idiv   DWORD PTR [rdi]
   14003ec28:	(bad)  
   14003ec29:	(bad)  
   14003ec2a:	repnz (bad) 
   14003ec2c:	(bad)  
   14003ec2d:	repnz idiv BYTE PTR [rdi]
   14003ec30:	(bad)  
   14003ec31:	(bad)  
   14003ec32:	rex.XB imul esi,r15d,0xffffffe1
   14003ec36:	idiv   BYTE PTR [rdi]
   14003ec38:	(bad)  
   14003ec39:	enter  0x2681,0xa6
   14003ec3d:	shl    esi,1
   14003ec3f:	(bad)  
   14003ec40:	(bad)  
   14003ec41:	ins    BYTE PTR es:[rdi],dx
   14003ec42:	rcl    DWORD PTR [rsi],0x6c
   14003ec45:	shl    esi,0x3f
   14003ec48:	cmp    eax,0x490aa31a
   14003ec4d:	mov    cl,0xf6
   14003ec4f:	(bad)  
   14003ec50:	nop
   14003ec51:	jb     0x14003eca6
   14003ec53:	sar    DWORD PTR [rcx+riz*4],1
   14003ec56:	idiv   BYTE PTR [rdi]
   14003ec58:	rcl    al,0x88
   14003ec5b:	cmp    al,BYTE PTR [rdi-0x6f]
   14003ec5e:	idiv   BYTE PTR [rdi]
   14003ec60:	(bad)  
   14003ec61:	push   0xffffffff81681681
   14003ec66:	idiv   BYTE PTR [rdi]
   14003ec68:	sbb    ah,BYTE PTR [rdi+0x1]
   14003ec6b:	ss lahf 
   14003ec6d:	jno    0x14003ec65
   14003ec6f:	(bad)  
   14003ec70:	stc    
   14003ec71:	and    dl,BYTE PTR [rcx+0x6a]
   14003ec74:	in     al,dx
   14003ec75:	(bad)  
   14003ec76:	idiv   BYTE PTR [rdi]
   14003ec78:	movabs ds:0x643ff6524f853b4a,eax
   14003ec81:	and    DWORD PTR [rbx],ecx
   14003ec83:	pop    rcx
   14003ec84:	enter  0xf642,0x3f
   14003ec88:	faddp  st(0),st
   14003ec8a:	mov    bh,BYTE PTR [rax+0x3ff63356]
   14003ec90:	(bad)
   14003ec96:	idiv   BYTE PTR [rdi]
   14003ec98:	xchg   esp,eax
   14003ec99:	scas   al,BYTE PTR es:[rdi]
   14003ec9a:	xor    DWORD PTR [rax-0x4d],ebp
   14003ec9d:	adc    al,0xf6
   14003ec9f:	(bad)  
   14003eca0:	(bad)  
   14003eca1:	(bad)  
   14003eca2:	pop    rax
   14003eca3:	(bad)  
   14003eca4:	add    DWORD PTR [rip+0x2dfc3ff6],0xf6643429        # 0x16e002ca4
   14003ecae:	cmc    
   14003ecaf:	(bad)  
   14003ecb0:	out    0x15,eax
   14003ecb2:	sar    BYTE PTR [rax+0x3ff5e75b],1
   14003ecb8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003ecb9:	loop   0x14003eca7
   14003ecbb:	ret    
   14003ecbc:	addr32 fdiv st,st(5)
   14003ecbf:	(bad)  
   14003ecc0:	push   rdi
   14003ecc1:	adc    BYTE PTR [rbx-0xa3677d5],dl
   14003ecc7:	(bad)  
   14003ecc8:	xchg   ecx,eax
   14003ecc9:	cli    
   14003ecca:	rex.RXB (bad) 
   14003eccc:	mov    esp,0xc03ff5ba
   14003ecd1:	pop    rdx
   14003ecd2:	add    DWORD PTR [rbx+0x5],ebp
   14003ecd5:	lods   al,BYTE PTR ds:[rsi]
   14003ecd6:	cmc    
   14003ecd7:	(bad)  
   14003ecd8:	stos   BYTE PTR es:[rdi],al
   14003ecd9:	int3   
   14003ecda:	and    esi,ecx
   14003ecdc:	(bad)  
   14003ecdd:	popf   
   14003ecde:	cmc    
   14003ecdf:	(bad)  
   14003ece0:	in     eax,dx
   14003ece1:	pop    rax
   14003ece2:	xor    DWORD PTR [rax],0x3ff58ed2
   14003ece8:	(bad)  
   14003ece9:	add    eax,0x80560158
   14003ecee:	cmc    
   14003ecef:	(bad)  
   14003ecf0:	cmp    ch,BYTE PTR [rbx+0x50]
   14003ecf3:	cmp    al,0xed
   14003ecf5:	jno    0x14003ecec
   14003ecf7:	(bad)  
   14003ecf8:	loop   0x14003ed4c
   14003ecfa:	jl     0x14003ecb6
   14003ecfc:	xchg   edi,eax
   14003ecfd:	movsxd esi,ebp
   14003ecff:	(bad)  
   14003ed00:	push   rbp
   14003ed01:	push   rbp
   14003ed02:	push   rbp
   14003ed03:	push   rbp
   14003ed04:	push   rbp
   14003ed05:	push   rbp
   14003ed06:	cmc    
   14003ed07:	(bad)  
   14003ed08:	inc    BYTE PTR [rdx+0x4725e6bb]
   14003ed0e:	cmc    
   14003ed0f:	(bad)  
   14003ed10:	jmp    0x14003ed21
   14003ed12:	hlt    
   14003ed13:	or     QWORD PTR [rcx],rdi
   14003ed16:	cmc    
   14003ed17:	(bad)  
   14003ed18:	rex.WXB add rax,0x2aff56a8
   14003ed1e:	cmc    
   14003ed1f:	(bad)  
   14003ed20:	adc    eax,0x7eae2f8
   14003ed25:	sbb    eax,0xc4c53ff5
   14003ed2a:	adc    ecx,esp
   14003ed2c:	and    cl,BYTE PTR [rdi]
   14003ed2e:	cmc    
   14003ed2f:	(bad)  
   14003ed30:	adc    eax,0x50150150
   14003ed35:	add    ebp,esi
   14003ed37:	(bad)  
   14003ed38:	rex.WR frstor [rdx-0x71]
   14003ed3d:	repz hlt 
   14003ed3f:	(bad)  
   14003ed40:	cmp    DWORD PTR [rip+0xffffffffe5e0a72f],eax        # 0x125e49475
   14003ed46:	hlt    
   14003ed47:	(bad)  
   14003ed48:	rex.WR sub al,0xdc
   14003ed4b:	mov    esi,0x3ff4d843
   14003ed50:	outs   dx,BYTE PTR ds:[rsi]
   14003ed51:	scas   eax,DWORD PTR es:[rdi]
   14003ed52:	and    eax,0xf4cab887
   14003ed57:	(bad)  
   14003ed58:	loope  0x14003ece9
   14003ed5a:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003ed5b:	fnstsw WORD PTR [rsi]
   14003ed5d:	mov    ebp,0xbf5b3ff4
   14003ed62:	push   rdx
   14003ed63:	movabs al,ds:0xad76014a3ff4afd6
   14003ed6c:	jg     0x14003ed10
   14003ed6e:	hlt    
   14003ed6f:	(bad)  
   14003ed70:	shl    BYTE PTR [edx-0xb6ac61d],1
   14003ed77:	(bad)  
   14003ed78:	or     BYTE PTR [rax+0x1],0x22
   14003ed7c:	add    eax,0x7b3ff488
   14003ed81:	adc    al,0xae
   14003ed83:	rex.RXB loope 0x14003ee00
   14003ed86:	hlt    
   14003ed87:	(bad)  
   14003ed88:	data16 (bad) 
   14003ed8a:	pop    rcx
   14003ed8b:	xor    al,0xce
   14003ed8d:	ins    DWORD PTR es:[rdi],dx
   14003ed8e:	hlt    
   14003ed8f:	(bad)  
   14003ed90:	(bad)  
   14003ed91:	iret   
   14003ed92:	cmc    
   14003ed93:	(bad)  
   14003ed94:	retf   
   14003ed95:	(bad)  
   14003ed96:	hlt    
   14003ed97:	(bad)  
   14003ed98:	retf   0xc776
   14003ed9b:	loop   0x14003ed76
   14003ed9d:	push   rbx
   14003ed9e:	hlt    
   14003ed9f:	(bad)  
   14003eda0:	sti    
   14003eda1:	fldenv [rdx+0x65]
   14003eda4:	clc    
   14003eda5:	rex.RX hlt 
   14003eda7:	(bad)  
   14003eda8:	rex.WRB out dx,al
   14003edaa:	stos   DWORD PTR es:[rdi],eax
   14003edab:	xor    BYTE PTR [rdi],ah
   14003edad:	cmp    dh,ah
   14003edaf:	(bad)  
   14003edb0:	xchg   DWORD PTR [rdi],ebx
   14003edb2:	(bad)  
   14003edb3:	and    eax,0x3ff42d66
   14003edb8:	push   rcx
   14003edb9:	pop    rcx
   14003edba:	pop    rsi
   14003edbb:	es mov ch,0x20
   14003edbe:	hlt    
   14003edbf:	(bad)  
   14003edc0:	adc    al,0x14
   14003edc2:	adc    al,0x14
   14003edc4:	adc    al,0x14
   14003edc6:	hlt    
   14003edc7:	(bad)  
   14003edc8:	data16 gs (bad) 
   14003edcb:	rol    DWORD PTR [rdx-0x4c00bf9],1
   14003edd1:	adc    esi,DWORD PTR [rax-0xc04fec1]
   14003edd7:	(bad)  
   14003edd8:	(bad)  
   14003edd9:	scas   eax,DWORD PTR es:[rdi]
   14003edda:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003eddb:	rex.X (bad) 
   14003eddd:	out    dx,al
   14003edde:	repz (bad) 
   14003ede0:	add    ch,BYTE PTR [rcx-0x1dd3431c]
   14003ede6:	repz (bad) 
   14003ede8:	(bad)  
   14003ede9:	jne    0x14003ed95
   14003edeb:	xchg   ecx,eax
   14003edec:	(bad)  
   14003edee:	repz (bad) 
   14003edf0:	out    0xab,eax
   14003edf2:	jnp    0x14003ed98
   14003edf4:	xchg   ebp,eax
   14003edf5:	leave  
   14003edf6:	repz (bad) 
   14003edf8:	push   rbp
   14003edf9:	sub    DWORD PTR [rbx],esp
   14003edfb:	fldenv [rax-0x43]
   14003edfe:	repz (bad) 
   14003ee00:	adc    al,0x3b
   14003ee02:	mov    cl,0x13
   14003ee04:	cmp    esi,DWORD PTR [rcx-0x37ddc00d]
   14003ee0a:	jp     0x14003ee44
   14003ee0c:	and    al,0xa5
   14003ee0e:	repz (bad) 
   14003ee10:	movsxd edi,DWORD PTR [rdi+0x18]
   14003ee13:	sub    al,0x1c
   14003ee15:	cdq    
   14003ee16:	repz (bad) 
   14003ee18:	mov    cs,WORD PTR [rax]
   14003ee1a:	shl    WORD PTR [rdx],cl
   14003ee1d:	(bad)  
   14003ee1e:	repz (bad) 
   14003ee20:	adc    al,0x38
   14003ee22:	adc    DWORD PTR [rbx],0x3ff38138
   14003ee28:	out    dx,al
   14003ee29:	rex.RB leave 
   14003ee2b:	rcr    DWORD PTR [rbx+0x75],1
   14003ee2e:	repz (bad) 
   14003ee30:	rex.W (bad) 
   14003ee32:	fdivrp st(3),st
   14003ee34:	lea    ebp,[rcx-0xd]
   14003ee37:	(bad)  
   14003ee38:	clc    
   14003ee39:	sub    bl,BYTE PTR [rdi-0xca231a1]
   14003ee3f:	(bad)  
   14003ee40:	sar    DWORD PTR [rax+0x2b],0xfb
   14003ee44:	sbb    al,0x52
   14003ee46:	repz (bad) 
   14003ee48:	rex.RX adc r12d,eax
   14003ee4b:	lods   al,BYTE PTR ds:[rsi]
   14003ee4c:	jns    0x14003ee94
   14003ee4e:	repz (bad) 
   14003ee50:	mov    dl,0xbc
   14003ee52:	push   rdi
   14003ee53:	pop    rbx
   14003ee54:	in     al,0x3a
   14003ee56:	repz (bad) 
   14003ee58:	cli    
   14003ee59:	sbb    eax,0x2f5ced6a
   14003ee5e:	repz (bad) 
   14003ee60:	mov    edi,0xe34a2b10
   14003ee65:	and    esi,ebx
   14003ee67:	(bad)  
   14003ee68:	mov    dh,0xeb
   14003ee6a:	jmp    0x1331c65c7
   14003ee6f:	(bad)  
   14003ee70:	nop
   14003ee71:	shl    DWORD PTR [rax],1
   14003ee73:	add    DWORD PTR [rcx],ebx
   14003ee75:	or     eax,0x2603ff3
   14003ee7a:	(bad)  
   14003ee7b:	sub    cl,al
   14003ee7d:	add    ebx,esi
   14003ee7f:	(bad)  
   14003ee80:	push   0xffffffff84bda12f
   14003ee85:	div    dl
   14003ee87:	(bad)  
   14003ee88:	rex.WXB sar r14,1
   14003ee8b:	movabs eax,ds:0xc04b80973ff2eb4e
   14003ee94:	and    eax,0xa03ff2e0
   14003ee99:	push   rax
   14003ee9a:	sub    eax,0xf2d50a01
   14003ee9f:	(bad)  
   14003eea0:	movabs al,ds:0x113ff2c9fb4d812c
   14003eea9:	(bad)  
   14003eeaa:	pop    rdx
   14003eeab:	mov    ?,ecx
   14003eead:	mov    esi,0x2b403ff2
   14003eeb2:	add    DWORD PTR [rbp+0x3ff2b404],ebp
   14003eeb8:	add    eax,0x1c92f3c1
   14003eebd:	test   eax,0x129e3ff2
   14003eec2:	in     al,0x29
   14003eec4:	rex.B sahf 
   14003eec6:	repnz (bad) 
   14003eec8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003eec9:	add    al,0xb8
   14003eecb:	pop    rbx
   14003eecc:	jb     0x14003ee61
   14003eece:	repnz (bad) 
   14003eed0:	adc    esi,DWORD PTR [rax-0x774fed78]
   14003eed6:	repnz (bad) 
   14003eed8:	rex.WRB (bad) 
   14003eeda:	movabs eax,ds:0x8127353ff27dfa38
   14003eee3:	mov    eax,0x3ff27350
   14003eee8:	(bad)  
   14003eee9:	add    esi,edx
   14003eeeb:	jl     0x14003eea0
   14003eeed:	push   0xffffffff92f13ff2
   14003eef2:	xor    BYTE PTR [rax+0x22],0x5e
   14003eef6:	repnz (bad) 
   14003eef8:	mov    dl,0x77
   14003eefa:	xchg   ecx,eax
   14003eefb:	jle    0x14003ee9a
   14003eefd:	push   rbx
   14003eefe:	repnz (bad) 
   14003ef00:	xchg   edx,eax
   14003ef01:	and    al,0x49
   14003ef03:	xchg   edx,eax
   14003ef04:	and    al,0x49
   14003ef06:	repnz (bad) 
   14003ef08:	pop    rbx
   14003ef09:	(bad)  
   14003ef0a:	(bad)  
   14003ef0b:	xchg   edi,eax
   14003ef0c:	mov    bh,0x3e
   14003ef0e:	repnz (bad) 
   14003ef10:	fistp  QWORD PTR [rdx+rbx*4-0xdcba988]
   14003ef17:	(bad)  
   14003ef18:	sub    dl,BYTE PTR [rdx]
   14003ef1a:	movabs al,ds:0x21fb783ff22a0122
   14003ef23:	xor    DWORD PTR [rdi-0x19c00de1],0x79804855
   14003ef2d:	adc    eax,0xc0d93ff2
   14003ef32:	addr32 or al,0x47
   14003ef35:	or     esi,edx
   14003ef37:	(bad)  
   14003ef38:	adc    ah,BYTE PTR [rax]
   14003ef3a:	add    DWORD PTR [rdx],edx
   14003ef3c:	and    BYTE PTR [rcx],al
   14003ef3e:	repnz (bad) 
   14003ef40:	jo     0x14003ef61
   14003ef42:	sar    DWORD PTR [rbp+0x4],0xf7
   14003ef46:	icebp  
   14003ef47:	(bad)  
   14003ef48:	rex.WR movabs rax,0xb8743ff1ecf43c7f
   14003ef52:	(bad)  
   14003ef53:	cmp    ebp,edi
   14003ef55:	loop   0x14003ef48
   14003ef57:	(bad)  
   14003ef58:	mov    ebp,0xf5672e4a
   14003ef5d:	fdiv   st,st(1)
   14003ef5f:	(bad)  
   14003ef60:	sbb    eax,0x6ada281
   14003ef65:	iret   
   14003ef66:	icebp  
   14003ef67:	(bad)  
   14003ef68:	pop    rcx
   14003ef69:	loopne 0x14003ef87
   14003ef6b:	cld    
   14003ef6c:	and    al,ch
   14003ef6e:	icebp  
   14003ef6f:	(bad)  
   14003ef70:	sub    ebp,ebp
   14003ef72:	rex.RX
   14003ef73:	rex
   14003ef74:	rex.WX movabs rbx,0xb17c67f2bae33ff1
   14003ef7e:	icebp  
   14003ef7f:	(bad)  
   14003ef80:	xchg   esi,eax
   14003ef81:	jnp    0x14003ef9d
   14003ef83:	(bad)  
   14003ef84:	mov    ecx,0x9e3ff1a7
   14003ef89:	adc    eax,esp
   14003ef8b:	sbb    DWORD PTR [rcx],eax
   14003ef8d:	sahf   
   14003ef8e:	icebp  
   14003ef8f:	(bad)  
   14003ef90:	pushf  
   14003ef91:	movabs ds:0x2bdb3ff19453808c,al
   14003ef9a:	nop
   14003ef9b:	xor    DWORD PTR [rax+0x123ff18a],0x18
   14003efa2:	adc    DWORD PTR [rcx],0x3ff18118
   14003efa8:	test   dh,dl
   14003efaa:	sbb    ebx,DWORD PTR [rcx]
   14003efac:	mov    dh,BYTE PTR [rdi-0xf]
   14003efaf:	(bad)  
   14003efb0:	jns    0x14003f025
   14003efb2:	rex.X mov DWORD PTR [rsi],eax
   14003efb5:	outs   dx,BYTE PTR ds:[rsi]
   14003efb6:	icebp  
   14003efb7:	(bad)  
   14003efb8:	add    DWORD PTR [rdx],esi
   14003efba:	cld    
   14003efbb:	push   rax
   14003efbc:	lea    esp,[rcx+rsi*8+0x3f]
   14003efc0:	or     eax,0x1e5f7527
   14003efc5:	pop    rbx
   14003efc6:	icebp  
   14003efc7:	(bad)  
   14003efc8:	leave  
   14003efc9:	(bad)  
   14003efca:	std    
   14003efcb:	movabs ds:0xe0acd3b3ff151b9,eax
   14003efd4:	pop    rdi
   14003efd5:	rex.W icebp 
   14003efd7:	(bad)  
   14003efd8:	and    al,0x47
   14003efda:	xor    al,0x8d
   14003efdc:	(bad)  
   14003efdd:	(bad)  
   14003efde:	icebp  
   14003efdf:	(bad)  
   14003efe0:	adc    eax,ecx
   14003efe2:	xor    eax,0xf135c811
   14003efe7:	(bad)  
   14003efe8:	lods   al,BYTE PTR ds:[rsi]
   14003efe9:	shr    ch,0x89
   14003efec:	mov    ebp,DWORD PTR [rcx+rsi*8]
   14003efef:	(bad)  
   14003eff0:	xor    esi,DWORD PTR [rax]
   14003eff2:	pop    rbp
   14003eff3:	out    0x58,eax
   14003eff5:	and    esi,ecx
   14003eff7:	(bad)  
   14003eff8:	cmps   QWORD PTR es:[rsi],QWORD PTR es:[rdi]
   14003effb:	sbb    DWORD PTR [rax],esi
   14003effd:	sbb    dh,cl
   14003efff:	(bad)  
   14003f000:	adc    DWORD PTR [rcx],edx
   14003f002:	adc    DWORD PTR [rcx],edx
   14003f004:	adc    DWORD PTR [rcx],edx
   14003f006:	icebp  
   14003f007:	(bad)  
   14003f008:	adc    BYTE PTR [rax],0x1
   14003f00b:	mov    esi,0x3ff107fb
   14003f010:	adc    eax,esi
   14003f012:	(bad)  
   14003f013:	adc    al,dh
   14003f015:	(bad)  
   14003f016:	lock (bad) 
   14003f018:	movabs ds:0x903ff0f5edfab325,al
   14003f021:	pushf  
   14003f022:	out    0x6b,al
   14003f024:	cmc    
   14003f025:	in     al,dx
   14003f026:	lock (bad) 
   14003f028:	adc    DWORD PTR [rax-0x7e],esp
   14003f02b:	push   rbp
   14003f02c:	(bad)  
   14003f02d:	in     al,0xf0
   14003f02f:	(bad)  
   14003f030:	xchg   esi,eax
   14003f031:	(bad)
   14003f036:	lock (bad) 
   14003f038:	cmp    bl,BYTE PTR [rsi-0x2dbba9cb]
   14003f03e:	lock (bad) 
   14003f040:	cmp    ebx,edx
   14003f042:	mov    esp,0xf0c9714f
   14003f047:	(bad)  
   14003f048:	jno    0x14003f08b
   14003f04a:	mov    eax,DWORD PTR [rsi+0x3ff0c0a7]
   14003f050:	enter  0x259d,0xec
   14003f054:	out    0xb7,al
   14003f056:	lock (bad) 
   14003f058:	mov    ch,0xec
   14003f05a:	cs jb  0x14003f08c
   14003f05d:	scas   eax,DWORD PTR es:[rdi]
   14003f05e:	lock (bad) 
   14003f060:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003f061:	adc    BYTE PTR [rax+0xa],ch
   14003f064:	and    DWORD PTR [rsi-0x7c9fc010],0x9ddba6af
   14003f06e:	lock (bad) 
   14003f070:	push   rsp
   14003f071:	or     DWORD PTR [rcx],eax
   14003f073:	cmp    DWORD PTR [rdi],edi
   14003f075:	xchg   ebp,eax
   14003f076:	lock (bad) 
   14003f078:	loop   0x14003f0df
   14003f07a:	jne    0x14003f02f
   14003f07c:	stos   DWORD PTR es:[rdi],eax
   14003f07d:	mov    eax,?
   14003f07f:	(bad)  
   14003f080:	test   BYTE PTR [rax],dl
   14003f082:	rex.X or BYTE PTR [rcx],spl
   14003f085:	test   al,dh
   14003f087:	(bad)  
   14003f088:	loop   0x14003f074
   14003f08a:	mov    eax,0xf07b9f29
   14003f08f:	(bad)  
   14003f090:	(bad)  
   14003f091:	test   DWORD PTR [rdi+0xa],0x3ff07326
   14003f098:	sti    
   14003f099:	adc    bh,BYTE PTR [rcx-0x64]
   14003f09c:	mov    ch,0x6a
   14003f09e:	lock (bad) 
   14003f0a0:	cld    
   14003f0a1:	test   eax,0x624dd2f1
   14003f0a6:	lock (bad) 
   14003f0a8:	xchg   BYTE PTR [rbp+0x72],dh
   14003f0ab:	movabs al,ds:0xf7d734043ff059ee
   14003f0b4:	xchg   edi,eax
   14003f0b5:	push   rcx
   14003f0b6:	lock (bad) 
   14003f0b8:	(bad)
   14003f0bb:	int3   
   14003f0bc:	rex.WB
   14003f0bd:	rex.WB
   14003f0be:	lock (bad) 
   14003f0c0:	adc    BYTE PTR [rcx+rax*2],al
   14003f0c3:	adc    BYTE PTR [rcx+rax*2],al
   14003f0c6:	lock (bad) 
   14003f0c8:	cld    
   14003f0c9:	rex.RXB (bad) 
   14003f0cb:	mov    bh,0xc6
   14003f0cd:	cmp    al,dh
   14003f0cf:	(bad)  
   14003f0d0:	sbb    bl,BYTE PTR [rsi+0x1f]
   14003f0d3:	mov    ch,0x91
   14003f0d5:	xor    al,dh
   14003f0d7:	(bad)  
   14003f0d8:	jmp    0x1a5006806
   14003f0dd:	sub    al,dh
   14003f0df:	(bad)  
   14003f0e0:	or     BYTE PTR [rdx+rax*1],al
   14003f0e3:	add    DWORD PTR [rax+0x20],0x7a373ff0
   14003f0ea:	push   rcx
   14003f0eb:	ss and al,0x18
   14003f0ee:	lock (bad) 
   14003f0f0:	adc    BYTE PTR [rax],dl
   14003f0f2:	adc    BYTE PTR [rax],dl
   14003f0f4:	adc    BYTE PTR [rax],dl
   14003f0f6:	lock (bad) 
   14003f0f8:	add    BYTE PTR [rax],0x1
   14003f0fb:	add    al,BYTE PTR [rax+rcx*1]
   14003f0fe:	lock (bad) 
   14003f100:	add    BYTE PTR [rax],al
   14003f102:	add    BYTE PTR [rax],al
   14003f104:	add    BYTE PTR [rax],al
   14003f106:	lock (bad) 
	...
   14003f110:	ins    BYTE PTR es:[rdi],dx
   14003f111:	outs   dx,DWORD PTR ds:[rsi]
   14003f112:	xor    DWORD PTR [eax],esi
   14003f115:	add    BYTE PTR [rax],al
   14003f117:	add    BYTE PTR [rax-0x71],dl
   14003f11a:	add    al,0x40
   14003f11c:	add    DWORD PTR [rax],eax
   14003f11e:	add    BYTE PTR [rax],al
   14003f120:	lock pop QWORD PTR [rax+rax*2]
   14003f124:	add    DWORD PTR [rax],eax
	...
   14003f132:	add    BYTE PTR [rax],al
   14003f134:	sti    
   14003f135:	movabs eax,ds:0x200000000595e
   14003f13e:	add    BYTE PTR [rax],al
   14003f140:	jbe    0x14003f142
   14003f142:	add    BYTE PTR [rax],al
   14003f144:	lods   al,BYTE PTR ds:[rsi]
   14003f145:	add    BYTE PTR [rax+rax*1],al
   14003f148:	lods   al,BYTE PTR ds:[rsi]
   14003f149:	out    0x3,al
   14003f14b:	add    BYTE PTR [rax],al
   14003f14d:	add    BYTE PTR [rax],al
   14003f14f:	add    bl,bh
   14003f151:	movabs eax,ds:0xc00000000595e
   14003f15a:	add    BYTE PTR [rax],al
   14003f15c:	adc    al,0x0
   14003f15e:	add    BYTE PTR [rax],al
   14003f160:	and    al,0x1
   14003f162:	add    al,0x0
   14003f164:	and    al,0xe7
   14003f166:	add    eax,DWORD PTR [rax]
   14003f168:	add    BYTE PTR [rax],al
   14003f16a:	add    BYTE PTR [rax],al
   14003f16c:	sti    
   14003f16d:	movabs eax,ds:0xd00000000595e
   14003f176:	add    BYTE PTR [rax],al
   14003f178:	push   rsp
   14003f179:	add    eax,DWORD PTR [rax]
   14003f17b:	add    BYTE PTR [rax],bh
   14003f17d:	add    DWORD PTR [rax+rax*1],eax
   14003f180:	cmp    bh,ah
   14003f182:	add    eax,DWORD PTR [rax]
	...
   14003f190:	xchg   esp,eax
	...
   14003f1e5:	add    BYTE PTR [rax],al
   14003f1e7:	add    al,ch
   14003f1e9:	(bad)  
   14003f1ea:	add    al,0x40
   14003f1ec:	add    DWORD PTR [rax],eax
	...
   14003f1fe:	add    BYTE PTR [rax],al
   14003f200:	loopne 0x14003f227
   14003f202:	add    eax,DWORD PTR [rax+0x1]
   14003f205:	add    BYTE PTR [rax],al
   14003f207:	add    al,ch
   14003f209:	and    eax,0x14003
	...
   14003f21e:	add    BYTE PTR [rax],al
   14003f220:	add    BYTE PTR [rcx],al
   14003f222:	add    BYTE PTR [rax],al
   14003f224:	add    BYTE PTR [rax],al
   14003f226:	add    BYTE PTR [rax],al
   14003f228:	add    DWORD PTR [rax],eax
	...
   14003f232:	add    BYTE PTR [rax],al
   14003f234:	shr    BYTE PTR [rdx+0x4],0x0
   14003f238:	push   rax
   14003f239:	repnz add eax,DWORD PTR [rax]
   14003f23c:	sub    dl,dh
   14003f23e:	add    eax,DWORD PTR [rax]
	...
   14003f258:	add    al,BYTE PTR [rax]
   14003f25a:	add    BYTE PTR [rax],al
   14003f25c:	push   0x3f2
   14003f261:	add    BYTE PTR [rax],al
   14003f263:	add    BYTE PTR [rax],al
   14003f265:	add    BYTE PTR [rax],al
   14003f267:	add    BYTE PTR [rax-0x57fffc0e],al
   14003f26d:	repnz add eax,DWORD PTR [rax]
	...
   14003f280:	shr    BYTE PTR [rdx+0x4],0x0
   14003f284:	add    DWORD PTR [rax],eax
   14003f286:	add    BYTE PTR [rax],al
   14003f288:	add    BYTE PTR [rax],al
   14003f28a:	add    BYTE PTR [rax],al
   14003f28c:	(bad)  
   14003f28d:	(bad)  
   14003f28e:	(bad)  
   14003f28f:	inc    DWORD PTR [rax]
   14003f291:	add    BYTE PTR [rax],al
   14003f293:	add    BYTE PTR [rax+0x0],al
   14003f296:	add    BYTE PTR [rax],al
   14003f298:	push   rax
   14003f299:	repnz add eax,DWORD PTR [rax]
	...
   14003f2a8:	call   0x14003f717
   14003f2ad:	add    BYTE PTR [rax],al
   14003f2af:	add    BYTE PTR [rax],al
   14003f2b1:	add    BYTE PTR [rax],al
   14003f2b3:	add    bh,bh
   14003f2b5:	(bad)  
   14003f2b6:	(bad)  
   14003f2b7:	inc    DWORD PTR [rax]
   14003f2b9:	add    BYTE PTR [rax],al
   14003f2bb:	add    BYTE PTR [rax+0x0],al
   14003f2be:	add    BYTE PTR [rax],al
   14003f2c0:	shl    dl,1
   14003f2c2:	add    eax,DWORD PTR [rax]
	...
   14003f2d8:	add    DWORD PTR [rax],eax
   14003f2da:	add    BYTE PTR [rax],al
   14003f2dc:	call   0x14003f6d3
   14003f2e1:	add    BYTE PTR [rax],al
   14003f2e3:	add    BYTE PTR [rax],al
   14003f2e5:	add    BYTE PTR [rax],al
   14003f2e7:	add    BYTE PTR [rax+0x3f2],ch
	...
   14003f2f5:	add    BYTE PTR [rax],al
   14003f2f7:	add    BYTE PTR [rcx],al
	...
   14003f301:	add    BYTE PTR [rax],al
   14003f303:	add    BYTE PTR [rax],dl
   14003f305:	imul   eax,DWORD PTR [rax+rax*1],0x20
   14003f309:	repz add eax,DWORD PTR [rax]
   14003f30c:	clc    
   14003f30d:	repnz add eax,DWORD PTR [rax]
	...
   14003f328:	(bad)  
   14003f329:	add    BYTE PTR [rax],al
   14003f32b:	add    BYTE PTR [rax],bh
   14003f32d:	repz add eax,DWORD PTR [rax]
	...
   14003f338:	jo     0x14003f32d
   14003f33a:	add    eax,DWORD PTR [rax]
   14003f33c:	cwde   
   14003f33d:	repz add eax,DWORD PTR [rax]
   14003f340:	or     ah,dh
   14003f342:	add    eax,DWORD PTR [rax]
   14003f344:	jo     0x14003f33a
   14003f346:	add    eax,DWORD PTR [rax]
   14003f348:	xor    dl,0x3
   14003f34b:	add    BYTE PTR [rax+0x3f2],ch
	...
   14003f36d:	add    BYTE PTR [rax],al
   14003f36f:	add    BYTE PTR [rax],dl
   14003f371:	imul   eax,DWORD PTR [rax+rax*1],0x5
   14003f375:	add    BYTE PTR [rax],al
   14003f377:	add    BYTE PTR [rax],al
   14003f379:	add    BYTE PTR [rax],al
   14003f37b:	add    bh,bh
   14003f37d:	(bad)  
   14003f37e:	(bad)  
   14003f37f:	inc    DWORD PTR [rax]
   14003f381:	add    BYTE PTR [rax],al
   14003f383:	add    BYTE PTR [rax+0x0],al
   14003f386:	add    BYTE PTR [rax],al
   14003f388:	and    bl,dh
   14003f38a:	add    eax,DWORD PTR [rax]
	...
   14003f398:	cmp    BYTE PTR [rbx+0x4],ch
   14003f39b:	add    BYTE PTR [rax+rax*1],al
   14003f39e:	add    BYTE PTR [rax],al
   14003f3a0:	add    BYTE PTR [rax],al
   14003f3a2:	add    BYTE PTR [rax],al
   14003f3a4:	(bad)  
   14003f3a5:	(bad)  
   14003f3a6:	(bad)  
   14003f3a7:	inc    DWORD PTR [rax]
   14003f3a9:	add    BYTE PTR [rax],al
   14003f3ab:	add    BYTE PTR [rax+0x0],al
   14003f3ae:	add    BYTE PTR [rax],al
   14003f3b0:	shl    bl,0x3
	...
   14003f3c7:	add    BYTE PTR [rip+0xffffffffd8000000],al        # 0x11803f3cd
   14003f3cd:	repz add eax,DWORD PTR [rax]
	...
   14003f3d8:	cwde   
   14003f3d9:	repz add eax,DWORD PTR [rax]
   14003f3dc:	or     ah,dh
   14003f3de:	add    eax,DWORD PTR [rax]
   14003f3e0:	jo     0x14003f3d6
   14003f3e2:	add    eax,DWORD PTR [rax]
   14003f3e4:	xor    dl,0x3
   14003f3e7:	add    BYTE PTR [rax+0x3f2],ch
	...
   14003f405:	add    BYTE PTR [rax],al
   14003f407:	add    BYTE PTR [rax+0x6b],bh
   14003f40a:	add    al,0x0
   14003f40c:	add    eax,DWORD PTR [rax]
   14003f40e:	add    BYTE PTR [rax],al
   14003f410:	add    BYTE PTR [rax],al
   14003f412:	add    BYTE PTR [rax],al
   14003f414:	(bad)  
   14003f415:	(bad)  
   14003f416:	(bad)  
   14003f417:	inc    DWORD PTR [rax]
   14003f419:	add    BYTE PTR [rax],al
   14003f41b:	add    BYTE PTR [rax+0x0],al
   14003f41e:	add    BYTE PTR [rax],al
   14003f420:	xor    ah,dh
   14003f422:	add    eax,DWORD PTR [rax]
	...
   14003f438:	add    al,0x0
   14003f43a:	add    BYTE PTR [rax],al
   14003f43c:	rex.W hlt 
   14003f43e:	add    eax,DWORD PTR [rax]
	...
   14003f448:	or     ah,dh
   14003f44a:	add    eax,DWORD PTR [rax]
   14003f44c:	jo     0x14003f442
   14003f44e:	add    eax,DWORD PTR [rax]
   14003f450:	xor    dl,0x3
   14003f453:	add    BYTE PTR [rax+0x3f2],ch
	...
   14003f46d:	add    BYTE PTR [rax],al
   14003f46f:	add    BYTE PTR [rax+0x200046b],dh
   14003f475:	add    BYTE PTR [rax],al
   14003f477:	add    BYTE PTR [rax],al
   14003f479:	add    BYTE PTR [rax],al
   14003f47b:	add    bh,bh
   14003f47d:	(bad)  
   14003f47e:	(bad)  
   14003f47f:	inc    DWORD PTR [rax]
   14003f481:	add    BYTE PTR [rax],al
   14003f483:	add    BYTE PTR [rax+0x0],al
   14003f486:	add    BYTE PTR [rax],al
   14003f488:	cwde   
   14003f489:	hlt    
   14003f48a:	add    eax,DWORD PTR [rax]
	...
   14003f4a0:	add    eax,DWORD PTR [rax]
   14003f4a2:	add    BYTE PTR [rax],al
   14003f4a4:	mov    al,0xf4
   14003f4a6:	add    eax,DWORD PTR [rax]
	...
   14003f4b0:	jo     0x14003f4a6
   14003f4b2:	add    eax,DWORD PTR [rax]
   14003f4b4:	xor    dl,0x3
   14003f4b7:	add    BYTE PTR [rax+0x3f2],ch
	...
   14003f4d5:	add    BYTE PTR [rax],al
   14003f4d7:	add    BYTE PTR [rdx],al
   14003f4d9:	add    BYTE PTR [rax],al
   14003f4db:	add    al,ch
   14003f4dd:	hlt    
   14003f4de:	add    eax,DWORD PTR [rax]
	...
   14003f4e8:	add    ch,dh
   14003f4ea:	add    eax,DWORD PTR [rax]
   14003f4ec:	sub    ch,dh
   14003f4ee:	add    eax,DWORD PTR [rax]
	...
   14003f500:	call   0x14103f970
   14003f505:	add    BYTE PTR [rax],al
   14003f507:	add    BYTE PTR [rax],al
   14003f509:	add    BYTE PTR [rax],al
   14003f50b:	add    bh,bh
   14003f50d:	(bad)  
   14003f50e:	(bad)  
   14003f50f:	inc    DWORD PTR [rax]
   14003f511:	add    BYTE PTR [rax],al
   14003f513:	add    BYTE PTR [rax+0x0],al
   14003f516:	add    BYTE PTR [rax],al
   14003f518:	shl    ah,1
   14003f51a:	add    eax,DWORD PTR [rax]
	...
   14003f528:	sbb    BYTE PTR [rsp+rax*1+0x0],ch
	...
   14003f534:	(bad)  
   14003f535:	(bad)  
   14003f536:	(bad)  
   14003f537:	inc    DWORD PTR [rax]
   14003f539:	add    BYTE PTR [rax],al
   14003f53b:	add    BYTE PTR [rax+0x0],al
   14003f53e:	add    BYTE PTR [rax],al
   14003f540:	push   rax
   14003f541:	cmc    
   14003f542:	add    eax,DWORD PTR [rax]
	...
   14003f558:	add    DWORD PTR [rax],eax
   14003f55a:	add    BYTE PTR [rax],al
   14003f55c:	push   0x3f5
   14003f561:	add    BYTE PTR [rax],al
   14003f563:	add    BYTE PTR [rax],al
   14003f565:	add    BYTE PTR [rax],al
   14003f567:	add    BYTE PTR [rax],ch
   14003f569:	cmc    
   14003f56a:	add    eax,DWORD PTR [rax]
	...
   14003f578:	add    DWORD PTR [rax],eax
	...
   14003f582:	add    BYTE PTR [rax],al
   14003f584:	rex ins BYTE PTR es:[rdi],dx
   14003f586:	add    al,0x0
   14003f588:	movabs al,ds:0x3f5780003f5
	...
   14003f5a5:	add    BYTE PTR [rax],al
   14003f5a7:	add    BYTE PTR [rcx],al
   14003f5a9:	add    BYTE PTR [rax],al
   14003f5ab:	add    BYTE PTR [rax+0x3f5],bh
   14003f5b1:	add    BYTE PTR [rax],al
   14003f5b3:	add    BYTE PTR [rax],al
   14003f5b5:	add    BYTE PTR [rax],al
   14003f5b7:	add    al,cl
   14003f5b9:	cmc    
   14003f5ba:	add    eax,DWORD PTR [rax]
	...
   14003f5c8:	rex ins BYTE PTR es:[rdi],dx
   14003f5ca:	add    al,0x0
	...
   14003f5d4:	(bad)  
   14003f5d5:	(bad)  
   14003f5d6:	(bad)  
   14003f5d7:	inc    DWORD PTR [rax]
   14003f5d9:	add    BYTE PTR [rax],al
   14003f5db:	add    BYTE PTR [rax+0x0],al
   14003f5de:	add    BYTE PTR [rax],al
   14003f5e0:	movabs al,ds:0x3f5
   14003f5e9:	add    BYTE PTR [rax],al
   14003f5eb:	add    BYTE PTR [rax],al
   14003f5ed:	add    BYTE PTR [rax],al
   14003f5ef:	add    BYTE PTR [rcx],al
	...
   14003f5f9:	add    BYTE PTR [rax],al
   14003f5fb:	add    BYTE PTR [rax+0x6c],dh
   14003f5fe:	add    al,0x0
   14003f600:	sbb    dh,dh
   14003f602:	add    eax,DWORD PTR [rax]
   14003f604:	lock cmc 
   14003f606:	add    eax,DWORD PTR [rax]
	...
   14003f620:	add    eax,DWORD PTR [rax]
   14003f622:	add    BYTE PTR [rax],al
   14003f624:	xor    dh,dh
   14003f626:	add    eax,DWORD PTR [rax]
	...
   14003f630:	push   rax
   14003f631:	test   BYTE PTR [rbx],0x0
   14003f634:	add    ch,dh
   14003f636:	add    eax,DWORD PTR [rax]
   14003f638:	sub    ch,dh
   14003f63a:	add    eax,DWORD PTR [rax]
	...
   14003f650:	jo     0x14003f6be
   14003f652:	add    al,0x0
   14003f654:	add    al,BYTE PTR [rax]
   14003f656:	add    BYTE PTR [rax],al
   14003f658:	add    BYTE PTR [rax],al
   14003f65a:	add    BYTE PTR [rax],al
   14003f65c:	(bad)  
   14003f65d:	(bad)  
   14003f65e:	(bad)  
   14003f65f:	inc    DWORD PTR [rax]
   14003f661:	add    BYTE PTR [rax],al
   14003f663:	add    BYTE PTR [rax+0x0],al
   14003f666:	add    BYTE PTR [rax],al
   14003f668:	sbb    dh,dh
   14003f66a:	add    eax,DWORD PTR [rax]
	...
   14003f678:	add    DWORD PTR [rax],eax
	...
   14003f682:	add    BYTE PTR [rax],al
   14003f684:	movabs al,ds:0x780003f6a000046c
   14003f68d:	test   BYTE PTR [rbx],0x0
	...
   14003f6a8:	(bad)  
   14003f6a9:	add    BYTE PTR [rax],al
   14003f6ab:	add    BYTE PTR [rax+0x3f6],bh
   14003f6b1:	add    BYTE PTR [rax],al
   14003f6b3:	add    BYTE PTR [rax],al
   14003f6b5:	add    BYTE PTR [rax],al
   14003f6b7:	add    al,bh
   14003f6b9:	test   BYTE PTR [rbx],0x0
   14003f6bc:	jo     0x14003f6b1
   14003f6be:	add    eax,DWORD PTR [rax]
   14003f6c0:	cwde   
   14003f6c1:	repz add eax,DWORD PTR [rax]
   14003f6c4:	or     ah,dh
   14003f6c6:	add    eax,DWORD PTR [rax]
   14003f6c8:	jo     0x14003f6be
   14003f6ca:	add    eax,DWORD PTR [rax]
   14003f6cc:	xor    dl,0x3
   14003f6cf:	add    BYTE PTR [rax+0x3f2],ch
	...
   14003f6f5:	add    BYTE PTR [rax],al
   14003f6f7:	add    BYTE PTR [rax+0x600046c],ah
   14003f6fd:	add    BYTE PTR [rax],al
   14003f6ff:	add    BYTE PTR [rax],al
   14003f701:	add    BYTE PTR [rax],al
   14003f703:	add    bh,bh
   14003f705:	(bad)  
   14003f706:	(bad)  
   14003f707:	inc    DWORD PTR [rax]
   14003f709:	add    BYTE PTR [rax],al
   14003f70b:	add    BYTE PTR [rax+0x0],al
   14003f70e:	add    BYTE PTR [rax],al
   14003f710:	movabs al,ds:0x3f6
	...
   14003f725:	add    BYTE PTR [rax],al
   14003f727:	add    BYTE PTR [rcx],al
   14003f729:	add    BYTE PTR [rax],al
   14003f72b:	add    BYTE PTR [rax],bh
   14003f72d:	test   DWORD PTR [rbx],0x0
   14003f733:	add    BYTE PTR [rax],al
   14003f735:	add    BYTE PTR [rax],al
   14003f737:	add    BYTE PTR [rax-0x9],cl
   14003f73a:	add    eax,DWORD PTR [rax]
	...
   14003f748:	enter  0x46c,0x0
	...
   14003f754:	(bad)  
   14003f755:	(bad)  
   14003f756:	(bad)  
   14003f757:	inc    DWORD PTR [rax]
   14003f759:	add    BYTE PTR [rax],al
   14003f75b:	add    BYTE PTR [rax+0x0],al
   14003f75e:	add    BYTE PTR [rax],al
   14003f760:	and    bh,dh
   14003f762:	add    eax,DWORD PTR [rax]
	...
   14003f778:	add    al,BYTE PTR [rax]
   14003f77a:	add    BYTE PTR [rax],al
   14003f77c:	mov    bh,dh
   14003f77e:	add    eax,DWORD PTR [rax]
	...
   14003f788:	movabs al,ds:0x3f7480003f7
	...
   14003f79d:	add    BYTE PTR [rax],al
   14003f79f:	add    al,dh
   14003f7a1:	ins    BYTE PTR es:[rdi],dx
   14003f7a2:	add    al,0x0
   14003f7a4:	add    DWORD PTR [rax],eax
   14003f7a6:	add    BYTE PTR [rax],al
   14003f7a8:	add    BYTE PTR [rax],al
   14003f7aa:	add    BYTE PTR [rax],al
   14003f7ac:	(bad)  
   14003f7ad:	(bad)  
   14003f7ae:	(bad)  
   14003f7af:	inc    DWORD PTR [rax]
   14003f7b1:	add    BYTE PTR [rax],al
   14003f7b3:	add    BYTE PTR [rax+0x0],al
   14003f7b6:	add    BYTE PTR [rax],al
   14003f7b8:	jo     0x14003f7b1
   14003f7ba:	add    eax,DWORD PTR [rax]
	...
   14003f7c8:	add    DWORD PTR [rax],eax
	...
   14003f7d2:	add    BYTE PTR [rax],al
   14003f7d4:	and    BYTE PTR [rbp+0x4],ch
   14003f7d7:	add    al,dh
   14003f7d9:	test   DWORD PTR [rbx],0x3f7c800
	...
   14003f7f7:	add    BYTE PTR [rbx],al
   14003f7f9:	add    BYTE PTR [rax],al
   14003f7fb:	add    BYTE PTR [rax],cl
   14003f7fd:	clc    
   14003f7fe:	add    eax,DWORD PTR [rax]
	...
   14003f808:	sub    al,bh
   14003f80a:	add    eax,DWORD PTR [rax]
   14003f80c:	movabs al,ds:0x3f7480003f7
	...
   14003f825:	add    BYTE PTR [rax],al
   14003f827:	add    BYTE PTR [rax],ah
   14003f829:	ins    DWORD PTR es:[rdi],dx
   14003f82a:	add    al,0x0
   14003f82c:	add    al,BYTE PTR [rax]
   14003f82e:	add    BYTE PTR [rax],al
   14003f830:	add    BYTE PTR [rax],al
   14003f832:	add    BYTE PTR [rax],al
   14003f834:	(bad)  
   14003f835:	(bad)  
   14003f836:	(bad)  
   14003f837:	inc    DWORD PTR [rax]
   14003f839:	add    BYTE PTR [rax],al
   14003f83b:	add    BYTE PTR [rax+0x0],al
   14003f83e:	add    BYTE PTR [rax],al
   14003f840:	lock test DWORD PTR [rbx],0x0
	...
   14003f84f:	add    BYTE PTR [rcx],al
	...
   14003f859:	add    BYTE PTR [rax],al
   14003f85b:	add    BYTE PTR [rax+0x6d],dl
   14003f85e:	add    al,0x0
   14003f860:	js     0x14003f85a
   14003f862:	add    eax,DWORD PTR [rax]
   14003f864:	push   rax
   14003f865:	clc    
   14003f866:	add    eax,DWORD PTR [rax]
	...
   14003f880:	add    al,BYTE PTR [rax]
   14003f882:	add    BYTE PTR [rax],al
   14003f884:	nop
   14003f885:	clc    
   14003f886:	add    eax,DWORD PTR [rax]
	...
   14003f890:	test   al,0xf8
   14003f892:	add    eax,DWORD PTR [rax]
   14003f894:	test   QWORD PTR [rbx],0x0
	...
   14003f8a7:	add    BYTE PTR [rax+0x6d],dl
   14003f8aa:	add    al,0x0
   14003f8ac:	add    DWORD PTR [rax],eax
   14003f8ae:	add    BYTE PTR [rax],al
   14003f8b0:	add    BYTE PTR [rax],al
   14003f8b2:	add    BYTE PTR [rax],al
   14003f8b4:	(bad)  
   14003f8b5:	(bad)  
   14003f8b6:	(bad)  
   14003f8b7:	inc    DWORD PTR [rax]
   14003f8b9:	add    BYTE PTR [rax],al
   14003f8bb:	add    BYTE PTR [rax+0x0],al
   14003f8be:	add    BYTE PTR [rax],al
   14003f8c0:	js     0x14003f8ba
   14003f8c2:	add    eax,DWORD PTR [rax]
	...
   14003f8d0:	add    DWORD PTR [rax],eax
	...
   14003f8da:	add    BYTE PTR [rax],al
   14003f8dc:	sbb    BYTE PTR [rsp+rax*1+0x0],ch
   14003f8e0:	push   rax
   14003f8e1:	cmc    
   14003f8e2:	add    eax,DWORD PTR [rax]
   14003f8e4:	sar    al,1
   14003f8e6:	add    eax,DWORD PTR [rax]
	...
   14003f8f8:	add    DWORD PTR [rax],eax
	...
   14003f902:	add    BYTE PTR [rax],al
   14003f904:	mov    BYTE PTR [rbp+0x4],ch
   14003f907:	add    BYTE PTR [rax],ah
   14003f909:	stc    
   14003f90a:	add    eax,DWORD PTR [rax]
   14003f90c:	clc    
   14003f90d:	clc    
   14003f90e:	add    eax,DWORD PTR [rax]
	...
   14003f928:	add    DWORD PTR [rax],eax
   14003f92a:	add    BYTE PTR [rax],al
   14003f92c:	cmp    cl,bh
   14003f92e:	add    eax,DWORD PTR [rax]
	...
   14003f938:	rex.W stc 
   14003f93a:	add    eax,DWORD PTR [rax]
	...
   14003f948:	mov    BYTE PTR [rbp+0x4],ch
	...
   14003f953:	add    bh,bh
   14003f955:	(bad)  
   14003f956:	(bad)  
   14003f957:	inc    DWORD PTR [rax]
   14003f959:	add    BYTE PTR [rax],al
   14003f95b:	add    BYTE PTR [rax+0x0],al
   14003f95e:	add    BYTE PTR [rax],al
   14003f960:	and    cl,bh
   14003f962:	add    eax,DWORD PTR [rax]
	...
   14003f978:	add    DWORD PTR [rax],eax
   14003f97a:	add    BYTE PTR [rax],al
   14003f97c:	mov    cl,bh
   14003f97e:	add    eax,DWORD PTR [rax]
	...
   14003f988:	cwde   
   14003f989:	stc    
   14003f98a:	add    eax,DWORD PTR [rax]
	...
   14003f998:	mov    eax,0x46d
   14003f99d:	add    BYTE PTR [rax],al
   14003f99f:	add    BYTE PTR [rax],al
   14003f9a1:	add    BYTE PTR [rax],al
   14003f9a3:	add    bh,bh
   14003f9a5:	(bad)  
   14003f9a6:	(bad)  
   14003f9a7:	inc    DWORD PTR [rax]
   14003f9a9:	add    BYTE PTR [rax],al
   14003f9ab:	add    BYTE PTR [rax+0x0],al
   14003f9ae:	add    BYTE PTR [rax],al
   14003f9b0:	jo     0x14003f9ab
   14003f9b2:	add    eax,DWORD PTR [rax]
	...
   14003f9c0:	add    DWORD PTR [rax],eax
	...
   14003f9ca:	add    BYTE PTR [rax],al
   14003f9cc:	call   0x12803fe3e
   14003f9d1:	stc    
   14003f9d2:	add    eax,DWORD PTR [rax]
   14003f9d4:	sar    cl,0x3
	...
   14003f9ef:	add    BYTE PTR [rdx],al
   14003f9f1:	add    BYTE PTR [rax],al
   14003f9f3:	add    BYTE PTR [rax],al
   14003f9f5:	cli    
   14003f9f6:	add    eax,DWORD PTR [rax]
	...
   14003fa00:	sbb    dl,bh
   14003fa02:	add    eax,DWORD PTR [rax]
   14003fa04:	cwde   
   14003fa05:	stc    
   14003fa06:	add    eax,DWORD PTR [rax]
	...
   14003fa18:	call   0x14103fe8a
   14003fa1d:	add    BYTE PTR [rax],al
   14003fa1f:	add    BYTE PTR [rax],al
   14003fa21:	add    BYTE PTR [rax],al
   14003fa23:	add    bh,bh
   14003fa25:	(bad)  
   14003fa26:	(bad)  
   14003fa27:	inc    DWORD PTR [rax]
   14003fa29:	add    BYTE PTR [rax],al
   14003fa2b:	add    BYTE PTR [rax+0x0],al
   14003fa2e:	add    BYTE PTR [rax],al
   14003fa30:	call   0x14003fe2e
	...
   14003fa45:	add    BYTE PTR [rax],al
   14003fa47:	add    BYTE PTR [rcx],al
   14003fa49:	add    BYTE PTR [rax],al
   14003fa4b:	add    BYTE PTR [rax-0x6],bl
   14003fa4e:	add    eax,DWORD PTR [rax]
	...
   14003fa58:	push   0x3fa
	...
   14003fa65:	add    BYTE PTR [rax],al
   14003fa67:	add    BYTE PTR [rax],dl
   14003fa69:	outs   dx,BYTE PTR ds:[rsi]
   14003fa6a:	add    al,0x0
	...
   14003fa74:	(bad)  
   14003fa75:	(bad)  
   14003fa76:	(bad)  
   14003fa77:	inc    DWORD PTR [rax]
   14003fa79:	add    BYTE PTR [rax],al
   14003fa7b:	add    BYTE PTR [rax+0x0],al
   14003fa7e:	add    BYTE PTR [rax],al
   14003fa80:	rex cli 
   14003fa82:	add    eax,DWORD PTR [rax]
	...
   14003fa90:	add    DWORD PTR [rax],eax
	...
   14003fa9a:	add    BYTE PTR [rax],al
   14003fa9c:	xor    BYTE PTR [rsi+0x4],ch
   14003fa9f:	add    BYTE PTR [rax-0x6ffffc06],bh
   14003faa5:	cli    
   14003faa6:	add    eax,DWORD PTR [rax]
	...
   14003fac0:	add    DWORD PTR [rax],eax
   14003fac2:	add    BYTE PTR [rax],al
   14003fac4:	sar    dl,1
   14003fac6:	add    eax,DWORD PTR [rax]
	...
   14003fad0:	loopne 0x14003facc
   14003fad2:	add    eax,DWORD PTR [rax]
	...
   14003fae0:	xor    BYTE PTR [rsi+0x4],ch
	...
   14003faeb:	add    bh,bh
   14003faed:	(bad)  
   14003faee:	(bad)  
   14003faef:	inc    DWORD PTR [rax]
   14003faf1:	add    BYTE PTR [rax],al
   14003faf3:	add    BYTE PTR [rax+0x0],al
   14003faf6:	add    BYTE PTR [rax],al
   14003faf8:	mov    eax,0x3fa
	...
   14003fb05:	add    BYTE PTR [rax],al
   14003fb07:	add    BYTE PTR [rcx],al
	...
   14003fb11:	add    BYTE PTR [rax],al
   14003fb13:	add    BYTE PTR [rax+0x6e],bl
   14003fb16:	add    al,0x0
   14003fb18:	xor    bl,bh
   14003fb1a:	add    eax,DWORD PTR [rax]
   14003fb1c:	or     bl,bh
   14003fb1e:	add    eax,DWORD PTR [rax]
	...
   14003fb34:	add    DWORD PTR [rax],eax
   14003fb36:	add    BYTE PTR [rax],al
   14003fb38:	add    eax,DWORD PTR [rax]
   14003fb3a:	add    BYTE PTR [rax],al
   14003fb3c:	rex.W sti 
   14003fb3e:	add    eax,DWORD PTR [rax]
	...
   14003fb48:	push   0xffffffffe00003fb
   14003fb4d:	cli    
   14003fb4e:	add    eax,DWORD PTR [rax]
   14003fb50:	nop
   14003fb51:	sti    
   14003fb52:	add    eax,DWORD PTR [rax]
	...
   14003fb68:	pop    rax
   14003fb69:	outs   dx,BYTE PTR ds:[rsi]
   14003fb6a:	add    al,0x0
   14003fb6c:	add    al,BYTE PTR [rax]
   14003fb6e:	add    BYTE PTR [rax],al
   14003fb70:	add    BYTE PTR [rax],al
   14003fb72:	add    BYTE PTR [rax],al
   14003fb74:	(bad)  
   14003fb75:	(bad)  
   14003fb76:	(bad)  
   14003fb77:	inc    DWORD PTR [rax]
   14003fb79:	add    BYTE PTR [rax],al
   14003fb7b:	add    BYTE PTR [rax+0x0],al
   14003fb7e:	add    BYTE PTR [rax],al
   14003fb80:	xor    bl,bh
   14003fb82:	add    eax,DWORD PTR [rax]
	...
   14003fb90:	adc    BYTE PTR [rsi+0x4],ch
   14003fb93:	add    BYTE PTR [rax],al
   14003fb95:	add    BYTE PTR [rax],al
   14003fb97:	add    BYTE PTR [rax],dh
   14003fb99:	add    BYTE PTR [rax],al
   14003fb9b:	add    bh,bh
   14003fb9d:	(bad)  
   14003fb9e:	(bad)  
   14003fb9f:	inc    DWORD PTR [rax]
   14003fba1:	add    BYTE PTR [rax],al
   14003fba3:	add    BYTE PTR [rax+0x0],al
   14003fba6:	add    BYTE PTR [rax],al
   14003fba8:	rex cli 
   14003fbaa:	add    eax,DWORD PTR [rax]
	...
   14003fbb8:	add    DWORD PTR [rax],eax
   14003fbba:	add    BYTE PTR [rax],al
   14003fbbc:	xor    BYTE PTR [rax],al
   14003fbbe:	add    BYTE PTR [rax],al
   14003fbc0:	add    BYTE PTR [rax],al
   14003fbc2:	add    BYTE PTR [rax],al
   14003fbc4:	pop    rax
   14003fbc5:	outs   dx,BYTE PTR ds:[rsi]
   14003fbc6:	add    al,0x0
   14003fbc8:	xor    bl,bh
   14003fbca:	add    eax,DWORD PTR [rax]
   14003fbcc:	mov    eax,0x3fb
	...
   14003fbdd:	add    BYTE PTR [rax],al
   14003fbdf:	add    BYTE PTR [rcx],al
	...
   14003fbe9:	add    BYTE PTR [rax],al
   14003fbeb:	add    BYTE PTR [rax+0x6e],bh
   14003fbee:	add    al,0x0
   14003fbf0:	or     ah,bh
   14003fbf2:	add    eax,DWORD PTR [rax]
   14003fbf4:	loopne 0x14003fbf1
   14003fbf6:	add    eax,DWORD PTR [rax]
	...
   14003fc0c:	add    DWORD PTR [rax],eax
   14003fc0e:	add    BYTE PTR [rax],al
   14003fc10:	add    al,0x0
   14003fc12:	add    BYTE PTR [rax],al
   14003fc14:	and    ah,bh
   14003fc16:	add    eax,DWORD PTR [rax]
	...
   14003fc20:	rex.W cld 
   14003fc22:	add    eax,DWORD PTR [rax]
   14003fc24:	push   0xffffffffe00003fb
   14003fc29:	cli    
   14003fc2a:	add    eax,DWORD PTR [rax]
   14003fc2c:	nop
   14003fc2d:	sti    
   14003fc2e:	add    eax,DWORD PTR [rax]
	...
   14003fc48:	js     0x14003fcb8
   14003fc4a:	add    al,0x0
   14003fc4c:	add    eax,DWORD PTR [rax]
   14003fc4e:	add    BYTE PTR [rax],al
   14003fc50:	add    BYTE PTR [rax],al
   14003fc52:	add    BYTE PTR [rax],al
   14003fc54:	(bad)  
   14003fc55:	(bad)  
   14003fc56:	(bad)  
   14003fc57:	inc    DWORD PTR [rax]
   14003fc59:	add    BYTE PTR [rax],al
   14003fc5b:	add    BYTE PTR [rax+0x0],al
   14003fc5e:	add    BYTE PTR [rax],al
   14003fc60:	or     ah,bh
   14003fc62:	add    eax,DWORD PTR [rax]
	...
   14003fc70:	add    DWORD PTR [rax],eax
   14003fc72:	add    BYTE PTR [rax],al
   14003fc74:	xor    BYTE PTR [rax],al
   14003fc76:	add    BYTE PTR [rax],al
   14003fc78:	add    BYTE PTR [rax],al
   14003fc7a:	add    BYTE PTR [rax],al
   14003fc7c:	js     0x14003fcec
   14003fc7e:	add    al,0x0
   14003fc80:	or     ah,bh
   14003fc82:	add    eax,DWORD PTR [rax]
   14003fc84:	jo     0x14003fc82
   14003fc86:	add    eax,DWORD PTR [rax]
	...
   14003fca0:	add    DWORD PTR [rax],eax
   14003fca2:	add    BYTE PTR [rax],al
   14003fca4:	mov    al,0xfc
   14003fca6:	add    eax,DWORD PTR [rax]
	...
   14003fcb0:	sar    ah,0x3
	...
   14003fcbf:	add    BYTE PTR [rax+0x46e],ah
   14003fcc5:	add    BYTE PTR [rax],al
   14003fcc7:	add    BYTE PTR [rax],al
   14003fcc9:	add    BYTE PTR [rax],al
   14003fccb:	add    bh,bh
   14003fccd:	(bad)  
   14003fcce:	(bad)  
   14003fccf:	inc    DWORD PTR [rax]
   14003fcd1:	add    BYTE PTR [rax],al
   14003fcd3:	add    BYTE PTR [rax+0x0],al
   14003fcd6:	add    BYTE PTR [rax],al
   14003fcd8:	cwde   
   14003fcd9:	cld    
   14003fcda:	add    eax,DWORD PTR [rax]
	...
   14003fce8:	add    DWORD PTR [rax],eax
	...
   14003fcf2:	add    BYTE PTR [rax],al
   14003fcf4:	shr    BYTE PTR [rsi+0x4],1
   14003fcf7:	add    BYTE PTR [rax],dl
   14003fcf9:	std    
   14003fcfa:	add    eax,DWORD PTR [rax]
   14003fcfc:	call   0x1400400fd
	...
   14003fd15:	add    BYTE PTR [rax],al
   14003fd17:	add    BYTE PTR [rdx],al
   14003fd19:	add    BYTE PTR [rax],al
   14003fd1b:	add    BYTE PTR [rax],ch
   14003fd1d:	std    
   14003fd1e:	add    eax,DWORD PTR [rax]
	...
   14003fd28:	rex std 
   14003fd2a:	add    eax,DWORD PTR [rax]
   14003fd2c:	sar    ah,0x3
	...
   14003fd3f:	add    al,dl
   14003fd41:	outs   dx,BYTE PTR ds:[rsi]
   14003fd42:	add    al,0x0
   14003fd44:	add    DWORD PTR [rax],eax
   14003fd46:	add    BYTE PTR [rax],al
   14003fd48:	add    BYTE PTR [rax],al
   14003fd4a:	add    BYTE PTR [rax],al
   14003fd4c:	(bad)  
   14003fd4d:	(bad)  
   14003fd4e:	(bad)  
   14003fd4f:	inc    DWORD PTR [rax]
   14003fd51:	add    BYTE PTR [rax],al
   14003fd53:	add    BYTE PTR [rax+0x0],al
   14003fd56:	add    BYTE PTR [rax],al
   14003fd58:	adc    ch,bh
   14003fd5a:	add    eax,DWORD PTR [rax]
	...
   14003fd68:	add    DWORD PTR [rax],eax
	...
   14003fd72:	add    BYTE PTR [rax],al
   14003fd74:	or     BYTE PTR [rdi+0x4],ch
   14003fd77:	add    BYTE PTR [rax+0x680003fd],dl
   14003fd7d:	std    
   14003fd7e:	add    eax,DWORD PTR [rax]
	...
   14003fd98:	add    DWORD PTR [rax],eax
   14003fd9a:	add    BYTE PTR [rax],al
   14003fd9c:	test   al,0xfd
   14003fd9e:	add    eax,DWORD PTR [rax]
	...
   14003fda8:	mov    eax,0x3fd
	...
   14003fdb5:	add    BYTE PTR [rax],al
   14003fdb7:	add    BYTE PTR [rax],cl
   14003fdb9:	outs   dx,DWORD PTR ds:[rsi]
   14003fdba:	add    al,0x0
	...
   14003fdc4:	(bad)  
   14003fdc5:	(bad)  
   14003fdc6:	(bad)  
   14003fdc7:	inc    DWORD PTR [rax]
   14003fdc9:	add    BYTE PTR [rax],al
   14003fdcb:	add    BYTE PTR [rax+0x0],al
   14003fdce:	add    BYTE PTR [rax],al
   14003fdd0:	nop
   14003fdd1:	std    
   14003fdd2:	add    eax,DWORD PTR [rax]
	...
   14003fde0:	add    DWORD PTR [rax],eax
	...
   14003fdea:	add    BYTE PTR [rax],al
   14003fdec:	cmp    BYTE PTR [rdi+0x4],ch
   14003fdef:	add    BYTE PTR [rax],cl
   14003fdf1:	inc    BYTE PTR [rbx]
   14003fdf3:	add    al,ah
   14003fdf5:	std    
   14003fdf6:	add    eax,DWORD PTR [rax]
	...
   14003fe10:	add    al,BYTE PTR [rax]
   14003fe12:	add    BYTE PTR [rax],al
   14003fe14:	and    dh,bh
   14003fe16:	add    eax,DWORD PTR [rax]
	...
   14003fe20:	cmp    dh,bh
   14003fe22:	add    eax,DWORD PTR [rax]
   14003fe24:	mov    eax,0x3fd
	...
   14003fe35:	add    BYTE PTR [rax],al
   14003fe37:	add    BYTE PTR [rax],bh
   14003fe39:	outs   dx,DWORD PTR ds:[rsi]
   14003fe3a:	add    al,0x0
   14003fe3c:	add    DWORD PTR [rax],eax
   14003fe3e:	add    BYTE PTR [rax],al
   14003fe40:	add    BYTE PTR [rax],al
   14003fe42:	add    BYTE PTR [rax],al
   14003fe44:	(bad)  
   14003fe45:	(bad)  
   14003fe46:	(bad)  
   14003fe47:	inc    DWORD PTR [rax]
   14003fe49:	add    BYTE PTR [rax],al
   14003fe4b:	add    BYTE PTR [rax+0x0],al
   14003fe4e:	add    BYTE PTR [rax],al
   14003fe50:	or     dh,bh
   14003fe52:	add    eax,DWORD PTR [rax]
	...
   14003fe60:	add    DWORD PTR [rax],eax
	...
   14003fe6a:	add    BYTE PTR [rax],al
   14003fe6c:	push   0xffffffff8800046f
   14003fe71:	inc    BYTE PTR [rbx]
   14003fe73:	add    BYTE PTR [rax-0x2],ah
   14003fe76:	add    eax,DWORD PTR [rax]
	...
   14003fe90:	add    al,BYTE PTR [rax]
   14003fe92:	add    BYTE PTR [rax],al
   14003fe94:	movabs al,ds:0x3fe
   14003fe9d:	add    BYTE PTR [rax],al
   14003fe9f:	add    BYTE PTR [rax+0x480003fe],bh
   14003fea5:	stc    
   14003fea6:	add    eax,DWORD PTR [rax]
	...
   14003feb8:	push   0x100046f
   14003febd:	add    BYTE PTR [rax],al
   14003febf:	add    BYTE PTR [rax],al
   14003fec1:	add    BYTE PTR [rax],al
   14003fec3:	add    bh,bh
   14003fec5:	(bad)  
   14003fec6:	(bad)  
   14003fec7:	inc    DWORD PTR [rax]
   14003fec9:	add    BYTE PTR [rax],al
   14003fecb:	add    BYTE PTR [rax+0x0],al
   14003fece:	add    BYTE PTR [rax],al
   14003fed0:	mov    dh,bh
   14003fed2:	add    eax,DWORD PTR [rax]
	...
   14003fee8:	add    al,BYTE PTR [rax]
   14003feea:	add    BYTE PTR [rax],al
   14003feec:	clc    
   14003feed:	inc    BYTE PTR [rbx]
	...
   14003fef7:	add    BYTE PTR [rax],dl
   14003fef9:	inc    DWORD PTR [rbx]
   14003fefb:	add    BYTE PTR [rax-0x9],cl
   14003fefe:	add    eax,DWORD PTR [rax]
	...
   14003ff10:	cwde   
   14003ff11:	outs   dx,DWORD PTR ds:[rsi]
   14003ff12:	add    al,0x0
   14003ff14:	add    DWORD PTR [rax],eax
   14003ff16:	add    BYTE PTR [rax],al
   14003ff18:	add    BYTE PTR [rax],al
   14003ff1a:	add    BYTE PTR [rax],al
   14003ff1c:	(bad)  
   14003ff1d:	(bad)  
   14003ff1e:	(bad)  
   14003ff1f:	inc    DWORD PTR [rax]
   14003ff21:	add    BYTE PTR [rax],al
   14003ff23:	add    BYTE PTR [rax+0x0],al
   14003ff26:	add    BYTE PTR [rax],al
   14003ff28:	loopne 0x14003ff28
   14003ff2a:	add    eax,DWORD PTR [rax]
	...
   14003ff38:	add    DWORD PTR [rax],eax
	...
   14003ff42:	add    BYTE PTR [rax],al
   14003ff44:	enter  0x46f,0x0
   14003ff48:	(bad)  
   14003ff49:	inc    DWORD PTR [rbx]
   14003ff4b:	add    BYTE PTR [rax],bh
   14003ff4d:	inc    DWORD PTR [rbx]
	...
   14003ff67:	add    BYTE PTR [rbx],al
   14003ff69:	add    BYTE PTR [rax],al
   14003ff6b:	add    BYTE PTR [rax-0x1],bh
   14003ff6e:	add    eax,DWORD PTR [rax]
	...
   14003ff78:	cwde   
   14003ff79:	inc    DWORD PTR [rbx]
   14003ff7b:	add    BYTE PTR [rax],dl
   14003ff7d:	inc    DWORD PTR [rbx]
   14003ff7f:	add    BYTE PTR [rax-0x9],cl
   14003ff82:	add    eax,DWORD PTR [rax]
	...
   14003ff98:	enter  0x46f,0x0
   14003ff9c:	add    al,BYTE PTR [rax]
   14003ff9e:	add    BYTE PTR [rax],al
   14003ffa0:	add    BYTE PTR [rax],al
   14003ffa2:	add    BYTE PTR [rax],al
   14003ffa4:	(bad)  
   14003ffa5:	(bad)  
   14003ffa6:	(bad)  
   14003ffa7:	inc    DWORD PTR [rax]
   14003ffa9:	add    BYTE PTR [rax],al
   14003ffab:	add    BYTE PTR [rax+0x0],al
   14003ffae:	add    BYTE PTR [rax],al
   14003ffb0:	(bad)  
   14003ffb1:	inc    DWORD PTR [rbx]
	...
   14003ffbf:	add    BYTE PTR [rcx],al
	...
   14003ffc9:	add    BYTE PTR [rax],al
   14003ffcb:	add    al,bh
   14003ffcd:	outs   dx,DWORD PTR ds:[rsi]
   14003ffce:	add    al,0x0
   14003ffd0:	call   0x1000403d4
   14003ffd5:	inc    DWORD PTR [rbx]
	...
   14003ffef:	add    BYTE PTR [rcx],al
   14003fff1:	add    BYTE PTR [rax],al
   14003fff3:	add    BYTE PTR [rax],al
   14003fff5:	add    BYTE PTR [rax+rax*1],al
	...
   140040000:	adc    BYTE PTR [rax],al
   140040002:	add    al,0x0
	...
   140040010:	clc    
   140040011:	outs   dx,DWORD PTR ds:[rsi]
   140040012:	add    al,0x0
	...
   14004001c:	(bad)  
   14004001d:	(bad)  
   14004001e:	(bad)  
   14004001f:	inc    DWORD PTR [rax]
   140040021:	add    BYTE PTR [rax],al
   140040023:	add    BYTE PTR [rax+0x0],al
   140040026:	add    BYTE PTR [rax],al
   140040028:	call   0x14004042c
	...
   140040035:	add    BYTE PTR [rax],al
   140040037:	add    BYTE PTR [rcx],al
	...
   140040041:	add    BYTE PTR [rax],al
   140040043:	add    BYTE PTR [rax],bl
   140040045:	jo     0x14004004b
   140040047:	add    BYTE PTR [rax+0x0],ah
   14004004a:	add    al,0x0
   14004004c:	cmp    BYTE PTR [rax],al
   14004004e:	add    al,0x0
	...
   140040068:	add    DWORD PTR [rax],eax
   14004006a:	add    BYTE PTR [rax],al
   14004006c:	js     0x14004006e
   14004006e:	add    al,0x0
	...
   140040078:	mov    BYTE PTR [rax],al
   14004007a:	add    al,0x0
	...
   140040088:	sbb    BYTE PTR [rax+0x4],dh
	...
   140040093:	add    bh,bh
   140040095:	(bad)  
   140040096:	(bad)  
   140040097:	inc    DWORD PTR [rax]
   140040099:	add    BYTE PTR [rax],al
   14004009b:	add    BYTE PTR [rax+0x0],al
   14004009e:	add    BYTE PTR [rax],al
   1400400a0:	(bad)  
   1400400a1:	add    BYTE PTR [rax+rax*1],al
	...
   1400400ac:	push   rdx
   1400400ad:	push   rbx
   1400400ae:	rex.R push rbx
   1400400b0:	cmp    ebx,DWORD PTR [rbx+0x62]
   1400400b3:	adc    ch,BYTE PTR [rdi+rax*8]
   1400400b6:	add    al,0x42
   1400400b8:	xchg   ebp,eax
   1400400b9:	ret    
   1400400ba:	icebp  
   1400400bb:	sbb    BYTE PTR [rbp+0x29],ah
   1400400be:	movsxd ebx,DWORD PTR [rbp+0x14]
   1400400c4:	movsxd edi,DWORD PTR [rdx]
   1400400c6:	pop    rsp
   1400400c7:	(bad)  
   1400400c8:	jne    0x140040133
   1400400ca:	ins    BYTE PTR es:[rdi],dx
   1400400cb:	fs jae 0x14004013a
   1400400ce:	(bad)  
   1400400cf:	jbe    0x140040136
   1400400d1:	pop    rsp
   1400400d2:	jae    0x140040143
   1400400d4:	jne    0x140040148
   1400400d6:	movsxd esp,DWORD PTR [rbp+0x32]
   1400400d9:	pop    rdi
   1400400da:	outs   dx,DWORD PTR fs:[rsi]
   1400400dc:	je     0x14004013f
   1400400de:	pop    rdi
   1400400df:	jb     0x140040146
   1400400e1:	ins    BYTE PTR es:[rdi],dx
   1400400e2:	pop    rdi
   1400400e3:	ja     0x14004014e
   1400400e5:	outs   dx,BYTE PTR ds:[rsi]
   1400400e6:	ss xor al,0x5c
   1400400e9:	(bad)  
   1400400ea:	jne    0x140040155
   1400400ec:	ins    BYTE PTR es:[rdi],dx
   1400400ed:	fs pop rsp
   1400400ef:	jae    0x140040163
   1400400f1:	movsxd ebx,DWORD PTR [rbp+rsi*2+0x74]
   1400400f5:	imul   ebp,DWORD PTR [rbx+rsi*2+0x5c],0x66637076
   1400400fd:	pop    rdi
   1400400fe:	je     0x14004016f
   140040100:	pop    rdi
   140040101:	imul   esi,DWORD PTR [rsi+0x33],0x5c
   140040105:	push   rdx
   140040106:	gs je  0x14004016a
   140040109:	imul   ebp,DWORD PTR [rsp+rbx*2+0x77],0x34366e69
   140040111:	pop    rsp
   140040112:	jbe    0x140040184
   140040114:	movsxd esp,DWORD PTR [rsi+0x5f]
   140040117:	je     0x140040188
   140040119:	pop    rdi
   14004011a:	imul   esi,DWORD PTR [rsi+0x33],0x2e
   14004011e:	jo     0x140040184
   140040120:	(bad)  
   140040121:	add    BYTE PTR [rax],al
   140040123:	add    BYTE PTR [rax],al
   140040125:	add    BYTE PTR [rax],al
   140040127:	add    dh,bl
   140040129:	add    BYTE PTR [rax],al
   14004012b:	add    BYTE PTR [rbx+0x0],ch
   140040131:	add    BYTE PTR [rax],al
   140040133:	add    BYTE PTR [rbx+0x0],ch
   140040139:	add    BYTE PTR [rax],al
   14004013b:	add    BYTE PTR [rax],al
   14004013d:	adc    BYTE PTR [rax],al
   14004013f:	add    BYTE PTR [rax+0x5],dh
   140040142:	add    BYTE PTR [rax],al
   140040144:	cs je  0x1400401ac
   140040147:	js     0x1400401bd
   140040149:	and    al,0x64
   14004014b:	imul   eax,DWORD PTR [rax],0x70000000
   140040151:	adc    eax,0xf7900000
   140040156:	add    al,BYTE PTR [rax]
   140040158:	cs je  0x1400401c0
   14004015b:	js     0x1400401d1
   14004015d:	and    al,0x6d
   14004015f:	outs   dx,BYTE PTR ds:[rsi]
   140040160:	add    BYTE PTR [rax],al
   140040162:	add    BYTE PTR [rax],al
   140040164:	add    BYTE PTR [rip+0x200003],cl        # 0x14024016d
   14004016a:	add    BYTE PTR [rax],al
   14004016c:	cs je  0x1400401d4
   14004016f:	js     0x1400401e5
   140040171:	and    al,0x6d
   140040173:	outs   dx,BYTE PTR ds:[rsi]
   140040174:	and    al,0x30
   140040176:	xor    BYTE PTR [rax],al
   140040178:	and    BYTE PTR [rip+0x2300003],cl        # 0x142340181
   14004017e:	add    BYTE PTR [rax],al
   140040180:	cs je  0x1400401e8
   140040183:	js     0x1400401f9
   140040185:	and    al,0x78
   140040187:	add    BYTE PTR [rax+0xf],dl
   14004018a:	add    eax,DWORD PTR [rax]
   14004018c:	add    al,BYTE PTR [rdx]
   14004018e:	add    BYTE PTR [rax],al
   140040190:	cs je  0x1400401f8
   140040193:	js     0x140040209
   140040195:	and    al,0x79
   140040197:	add    BYTE PTR fs:[rax],al
   14004019a:	add    BYTE PTR [rax],al
   14004019c:	add    BYTE PTR [rax],ah
   14004019e:	add    eax,DWORD PTR [rax]
   1400401a0:	loopne 0x1400401a7
   1400401a2:	add    BYTE PTR [rax],al
   1400401a4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x352461
   1400401ad:	add    BYTE PTR [rax],al
   1400401af:	add    al,ah
   1400401b1:	and    eax,0x100003
   1400401b6:	add    BYTE PTR [rax],al
   1400401b8:	xor    BYTE PTR cs:[rax],dh
   1400401bb:	movsxd esp,DWORD PTR [rsi+0x67]
   1400401be:	add    BYTE PTR [rax],al
   1400401c0:	lock and eax,0x80003
   1400401c6:	add    BYTE PTR [rax],al
   1400401c8:	cs rex.XB push r10
   1400401cb:	push   rsp
   1400401cc:	and    al,0x58
   1400401ce:	rex.XB
   1400401cf:	add    BYTE PTR [r8],al
   1400401d2:	add    BYTE PTR [rax],al
   1400401d4:	clc    
   1400401d5:	and    eax,0x80003
   1400401da:	add    BYTE PTR [rax],al
   1400401dc:	cs rex.XB push r10
   1400401df:	push   rsp
   1400401e0:	and    al,0x58
   1400401e2:	rex.XB
   1400401e3:	rex.B
   1400401e4:	add    BYTE PTR [r8],al
   1400401e7:	add    BYTE PTR [rax],al
   1400401e9:	add    eax,DWORD PTR es:[rax]
   1400401ec:	or     BYTE PTR [rax],al
   1400401ee:	add    BYTE PTR [rax],al
   1400401f0:	cs rex.XB push r10
   1400401f3:	push   rsp
   1400401f4:	and    al,0x58
   1400401f6:	rex.XB
   1400401f7:	rex.XB add BYTE PTR [r8],al
   1400401fa:	add    BYTE PTR [rax],al
   1400401fc:	or     BYTE PTR [rsi],ah
   1400401fe:	add    eax,DWORD PTR [rax]
   140040200:	clc    
   140040201:	add    BYTE PTR [rax],al
   140040203:	add    BYTE PTR [rsi],ch
   140040205:	rex.XB push r10
   140040207:	push   rsp
   140040208:	and    al,0x58
   14004020a:	rex.XB push r13
   14004020c:	add    BYTE PTR [rax],al
   14004020e:	add    BYTE PTR [rax],al
   140040210:	add    BYTE PTR [rdi],ah
   140040212:	add    eax,DWORD PTR [rax]
   140040214:	or     BYTE PTR [rax],al
   140040216:	add    BYTE PTR [rax],al
   140040218:	cs rex.XB push r10
   14004021b:	push   rsp
   14004021c:	and    al,0x58
   14004021e:	rex.XB pop r10
   140040220:	add    BYTE PTR [rax],al
   140040222:	add    BYTE PTR [rax],al
   140040224:	or     BYTE PTR [rdi],ah
   140040226:	add    eax,DWORD PTR [rax]
   140040228:	or     BYTE PTR [rax],al
   14004022a:	add    BYTE PTR [rax],al
   14004022c:	cs rex.XB push r10
   14004022f:	push   rsp
   140040230:	and    al,0x58
   140040232:	rex.WB
   140040233:	add    BYTE PTR [r8],al
   140040236:	add    BYTE PTR [rax],al
   140040238:	adc    BYTE PTR [rdi],ah
   14004023a:	add    eax,DWORD PTR [rax]
   14004023c:	or     BYTE PTR [rax],al
   14004023e:	add    BYTE PTR [rax],al
   140040240:	cs rex.XB push r10
   140040243:	push   rsp
   140040244:	and    al,0x58
   140040246:	rex.WB
   140040247:	rex.B
   140040248:	add    BYTE PTR [r8],al
   14004024b:	add    BYTE PTR [rax],bl
   14004024d:	(bad)  
   14004024e:	add    eax,DWORD PTR [rax]
   140040250:	or     BYTE PTR [rax],al
   140040252:	add    BYTE PTR [rax],al
   140040254:	cs rex.XB push r10
   140040257:	push   rsp
   140040258:	and    al,0x58
   14004025a:	rex.WB
   14004025b:	rex.B
   14004025c:	rex.XB add BYTE PTR [r8],al
   14004025f:	add    BYTE PTR [rax],ah
   140040261:	(bad)  
   140040262:	add    eax,DWORD PTR [rax]
   140040264:	sbb    BYTE PTR [rax],al
   140040266:	add    BYTE PTR [rax],al
   140040268:	cs rex.XB push r10
   14004026b:	push   rsp
   14004026c:	and    al,0x58
   14004026e:	rex.WB
   14004026f:	rex.XB add BYTE PTR [r8],al
   140040272:	add    BYTE PTR [rax],al
   140040274:	cmp    BYTE PTR [rdi],ah
   140040276:	add    eax,DWORD PTR [rax]
   140040278:	or     BYTE PTR [rax],al
   14004027a:	add    BYTE PTR [rax],al
   14004027c:	cs rex.XB push r10
   14004027f:	push   rsp
   140040280:	and    al,0x58
   140040282:	rex.WB pop r10
   140040284:	add    BYTE PTR [rax],al
   140040286:	add    BYTE PTR [rax],al
   140040288:	rex (bad) 
   14004028a:	add    eax,DWORD PTR [rax]
   14004028c:	or     BYTE PTR [rax],al
   14004028e:	add    BYTE PTR [rax],al
   140040290:	cs rex.XB push r10
   140040293:	push   rsp
   140040294:	and    al,0x58
   140040296:	push   rax
   140040297:	add    BYTE PTR [r8],al
   14004029a:	add    BYTE PTR [rax],al
   14004029c:	rex.W (bad) 
   14004029e:	add    eax,DWORD PTR [rax]
   1400402a0:	adc    BYTE PTR [rax],al
   1400402a2:	add    BYTE PTR [rax],al
   1400402a4:	cs rex.XB push r10
   1400402a7:	push   rsp
   1400402a8:	and    al,0x58
   1400402aa:	push   rax
   1400402ab:	pop    rax
   1400402ac:	add    BYTE PTR [rax],al
   1400402ae:	add    BYTE PTR [rax],al
   1400402b0:	pop    rax
   1400402b1:	(bad)  
   1400402b2:	add    eax,DWORD PTR [rax]
   1400402b4:	or     BYTE PTR [rax],al
   1400402b6:	add    BYTE PTR [rax],al
   1400402b8:	cs rex.XB push r10
   1400402bb:	push   rsp
   1400402bc:	and    al,0x58
   1400402be:	push   rax
   1400402bf:	pop    rax
   1400402c0:	add    BYTE PTR [r8],al
   1400402c3:	add    BYTE PTR [rax+0x27],ah
   1400402c6:	add    eax,DWORD PTR [rax]
   1400402c8:	or     BYTE PTR [rax],al
   1400402ca:	add    BYTE PTR [rax],al
   1400402cc:	cs rex.XB push r10
   1400402cf:	push   rsp
   1400402d0:	and    al,0x58
   1400402d2:	push   rax
   1400402d3:	pop    rdx
   1400402d4:	add    BYTE PTR [rax],al
   1400402d6:	add    BYTE PTR [rax],al
   1400402d8:	push   0x8000327
   1400402dd:	add    BYTE PTR [rax],al
   1400402df:	add    BYTE PTR [rsi],ch
   1400402e1:	rex.XB push r10
   1400402e3:	push   rsp
   1400402e4:	and    al,0x58
   1400402e6:	push   rsp
   1400402e7:	add    BYTE PTR [r8],al
   1400402ea:	add    BYTE PTR [rax],al
   1400402ec:	jo     0x140040315
   1400402ee:	add    eax,DWORD PTR [rax]
   1400402f0:	adc    BYTE PTR [rax],al
   1400402f2:	add    BYTE PTR [rax],al
   1400402f4:	cs rex.XB push r10
   1400402f7:	push   rsp
   1400402f8:	and    al,0x58
   1400402fa:	push   rsp
   1400402fb:	pop    rdx
   1400402fc:	add    BYTE PTR [rax],al
   1400402fe:	add    BYTE PTR [rax],al
   140040300:	and    BYTE PTR [rdi],0x3
   140040303:	add    BYTE PTR [rax+0x2e0000ca],ch
   140040309:	jb     0x14004036f
   14004030b:	(bad)  
   14004030c:	je     0x14004036f
   14004030e:	add    BYTE PTR [rax],al
   140040310:	sub    dl,dh
   140040312:	add    eax,DWORD PTR [rax]
   140040314:	test   BYTE PTR [rsi],cl
   140040316:	add    BYTE PTR [rax],al
   140040318:	cs jb  0x14004037f
   14004031b:	(bad)  
   14004031c:	je     0x14004037f
   14004031e:	and    al,0x72
   140040320:	add    BYTE PTR [rax],al
   140040322:	add    BYTE PTR [rax],al
   140040324:	lods   al,BYTE PTR ds:[rsi]
   140040325:	add    BYTE PTR [rax+rax*1],al
   140040328:	in     al,0x3
   14004032a:	add    BYTE PTR [rax],al
   14004032c:	cs jb  0x140040393
   14004032f:	(bad)  
   140040330:	je     0x140040393
   140040332:	and    al,0x7a
   140040334:	jp     0x1400403b0
   140040336:	fs (bad) 
   140040338:	add    BYTE PTR [eax],al
   14004033b:	add    BYTE PTR [rax+0x8000404],dl
   140040341:	add    BYTE PTR [rax],al
   140040343:	add    BYTE PTR [rsi],ch
   140040345:	jb     0x1400403bb
   140040347:	movsxd esp,DWORD PTR [rcx+rcx*2]
   14004034a:	rex.B
   14004034b:	add    BYTE PTR [r8],al
   14004034e:	add    BYTE PTR [rax],al
   140040350:	cwde   
   140040351:	add    al,0x4
   140040353:	add    BYTE PTR [rax],cl
   140040355:	add    BYTE PTR [rax],al
   140040357:	add    BYTE PTR [rsi],ch
   140040359:	jb     0x1400403cf
   14004035b:	movsxd esp,DWORD PTR [rcx+rcx*2]
   14004035e:	pop    rdx
   14004035f:	pop    rdx
   140040360:	add    BYTE PTR [rax],al
   140040362:	add    BYTE PTR [rax],al
   140040364:	movabs al,ds:0x2e00000008000404
   14004036d:	jb     0x1400403e3
   14004036f:	movsxd esp,DWORD PTR [rsp+rdx*2]
   140040372:	rex.B
   140040373:	add    BYTE PTR [r8],al
   140040376:	add    BYTE PTR [rax],al
   140040378:	test   al,0x4
   14004037a:	add    al,0x0
   14004037c:	or     BYTE PTR [rax],al
   14004037e:	add    BYTE PTR [rax],al
   140040380:	cs jb  0x1400403f7
   140040383:	movsxd esp,DWORD PTR [rsp+rdx*2]
   140040386:	pop    rdx
   140040387:	pop    rdx
   140040388:	add    BYTE PTR [rax],al
   14004038a:	add    BYTE PTR [rax],al
   14004038c:	mov    al,0x4
   14004038e:	add    al,0x0
   140040390:	mov    al,0x3d
   140040392:	add    BYTE PTR [rax],al
   140040394:	cs js  0x1400403fb
   140040397:	(bad)  
   140040398:	je     0x1400403fb
   14004039a:	add    BYTE PTR [rax],al
   14004039c:	(bad)  
   14004039d:	rex.X add al,0x0
   1400403a0:	rol    BYTE PTR [rax],0x0
   1400403a3:	add    BYTE PTR [rsi],ch
   1400403a5:	gs fs (bad) 
   1400403a8:	je     0x14004040b
   1400403aa:	add    BYTE PTR [rax],al
   1400403ac:	and    BYTE PTR [rbx+0x4],al
   1400403af:	add    BYTE PTR [rax+rax*1],bh
   1400403b2:	add    BYTE PTR [rax],al
   1400403b4:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x322461
   1400403bd:	add    BYTE PTR [rax],al
   1400403bf:	add    BYTE PTR [rbx+rax*2+0x4],bl
   1400403c3:	add    BYTE PTR [rax+rax*1],dl
   1400403c6:	add    BYTE PTR [rax],al
   1400403c8:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x332461
   1400403d1:	add    BYTE PTR [rax],al
   1400403d3:	add    BYTE PTR [rax+0x43],dh
   1400403d6:	add    al,0x0
   1400403d8:	loopne 0x1400403df
   1400403da:	add    BYTE PTR [rax],al
   1400403dc:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x342461
   1400403e5:	add    BYTE PTR [rax],al
   1400403e7:	add    BYTE PTR [rax+0x49],dl
   1400403ea:	add    al,0x0
   1400403ec:	lock sldt WORD PTR [rax]
   1400403f0:	imul   esp,DWORD PTR cs:[rcx+riz*2+0x74],0x362461
   1400403f9:	add    BYTE PTR [rax],al
   1400403fb:	add    BYTE PTR [rax],al
   1400403fd:	(bad)  
   1400403fe:	add    al,0x0
   140040400:	ror    BYTE PTR [rdx],0x0
   140040403:	add    BYTE PTR [rsi],ch
   140040405:	fs (bad) 
   140040407:	je     0x14004046a
   140040409:	add    BYTE PTR [rax],al
   14004040b:	add    al,al
   14004040d:	push   0x4
   14004040f:	add    BYTE PTR [rax+0x2e000005],al
   140040415:	fs (bad) 
   140040417:	je     0x14004047a
   140040419:	and    al,0x72
   14004041b:	add    BYTE PTR [rax+0x70],al
   14004041e:	add    al,0x0
   140040420:	movabs al,ds:0x7373622e000024
   140040429:	add    BYTE PTR [rax],al
   14004042b:	add    BYTE PTR [rax],al
   14004042d:	movabs al,ds:0x702e00003c9c0004
   140040436:	fs (bad) 
   140040438:	je     0x14004049b
   14004043a:	add    BYTE PTR [rax],al
   14004043c:	add    al,ah
   14004043e:	add    al,0x0
   140040440:	add    BYTE PTR [rax],0x0
   140040443:	add    BYTE PTR [rsi],ch
   140040445:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x78
   14004044d:	add    BYTE PTR [rax],al
   14004044f:	add    BYTE PTR [rax+0x240004e0],al
   140040455:	add    BYTE PTR [rax],al
   140040457:	add    BYTE PTR [rsi],ch
   140040459:	imul   sp,WORD PTR [ebx+esi*2+0x24],0x79
   140040461:	add    BYTE PTR [rax],al
   140040463:	add    BYTE PTR [rax],al
   140040465:	lock add al,0x0
   140040468:	(bad)  
   140040469:	add    BYTE PTR [rax],al
   14004046b:	add    BYTE PTR [rsi],ch
   14004046d:	jb     0x1400404e2
   14004046f:	jb     0x1400404d4
   140040471:	and    al,0x30
   140040473:	xor    DWORD PTR [rax],eax
   140040475:	add    BYTE PTR [rax],al
   140040477:	add    BYTE PTR [rax-0x10],ah
   14004047a:	add    al,0x0
   14004047c:	cmp    BYTE PTR [rbx],al
   14004047e:	add    BYTE PTR [rax],al
   140040480:	cs jb  0x1400404f6
   140040483:	jb     0x1400404e8
   140040485:	and    al,0x30
   140040487:	xor    al,BYTE PTR [rax]
	...
   1400404ad:	add    BYTE PTR [rax],al
   1400404af:	add    BYTE PTR [rcx],al
   1400404b1:	(bad)  
   1400404b2:	or     DWORD PTR [rax],eax
   1400404b4:	(bad)  
   1400404b5:	mov    al,BYTE PTR fs:[rax]
   1400404b8:	(bad)  
   1400404b9:	push   rsp
   1400404ba:	mov    DWORD PTR [rax],eax
   1400404bc:	(bad)  
   1400404bd:	xor    al,0x88
   1400404bf:	add    BYTE PTR [rdi],dl
   1400404c1:	add    DWORD PTR [rsi+0x701000],eax
   1400404c7:	add    BYTE PTR [rcx],al
   1400404c9:	sbb    al,BYTE PTR [rdi]
   1400404cb:	add    BYTE PTR [rdx],bl
   1400404cd:	je     0x1400404b9
   1400404cf:	add    BYTE PTR [rdx],bl
   1400404d1:	fs jmp 0x126051ed7
   1400404d7:	add    BYTE PTR [rbx],cl
   1400404d9:	push   rax
   1400404da:	add    BYTE PTR [rax],al
   1400404dc:	and    DWORD PTR [rax],ecx
   1400404de:	add    al,BYTE PTR [rax]
   1400404e0:	or     BYTE PTR [rax+rbp*8],dh
   1400404e3:	add    BYTE PTR [rax-0x55ffff97],ah
   1400404e9:	push   0x0
   1400404eb:	add    al,cl
   1400404ed:	add    al,0x4
   1400404ef:	add    BYTE PTR [rcx],ah
   1400404f1:	add    BYTE PTR [rax],al
   1400404f3:	add    BYTE PTR [rax-0x55ffff97],ah
   1400404f9:	push   0x0
   1400404fb:	add    al,cl
   1400404fd:	add    al,0x4
   1400404ff:	add    BYTE PTR [rcx],al
   140040501:	or     DWORD PTR [rcx],eax
   140040503:	add    BYTE PTR [rcx],cl
   140040505:	rex.X add BYTE PTR [rax],al
   140040508:	add    DWORD PTR [rdi+rax*1],edi
   14004050b:	add    BYTE PTR [rsp+riz*8],bh
   14004050e:	or     eax,DWORD PTR [rcx]
   140040510:	sub    eax,0x9010a74
   140040515:	add    DWORD PTR [rsi],eax
   140040517:	add    DWORD PTR [rdx],eax
   140040519:	xor    BYTE PTR [rax],al
   14004051b:	add    BYTE PTR [rcx],ah
   14004051d:	adc    eax,DWORD PTR [rax+rax*1]
   140040520:	adc    esp,DWORD PTR [rcx+rcx*1+0x1]
   140040524:	or     BYTE PTR [rax+rcx*1+0x1],dl
   140040528:	adc    BYTE PTR [rbx],dh
   14004052a:	add    BYTE PTR [rax],al
   14004052c:	mov    dh,0x33
   14004052e:	add    BYTE PTR [rax],al
   140040530:	or     BYTE PTR [rip+0x210004],al        # 0x14025053a
   140040536:	add    al,0x0
   140040538:	add    BYTE PTR [rcx+rcx*1+0x1],ah
   14004053c:	add    BYTE PTR [rax+rcx*1+0x1],dl
   140040540:	adc    BYTE PTR [rbx],dh
   140040542:	add    BYTE PTR [rax],al
   140040544:	mov    dh,0x33
   140040546:	add    BYTE PTR [rax],al
   140040548:	or     BYTE PTR [rip+0x210004],al        # 0x140250552
   14004054e:	add    al,BYTE PTR [rax]
   140040550:	add    BYTE PTR [rax+rcx*1+0x1],dl
   140040554:	adc    BYTE PTR [rbx],dh
   140040556:	add    BYTE PTR [rax],al
   140040558:	mov    dh,0x33
   14004055a:	add    BYTE PTR [rax],al
   14004055c:	or     BYTE PTR [rip+0x210004],al        # 0x140250566
   140040562:	add    BYTE PTR [rax],al
   140040564:	adc    BYTE PTR [rbx],dh
   140040566:	add    BYTE PTR [rax],al
   140040568:	mov    dh,0x33
   14004056a:	add    BYTE PTR [rax],al
   14004056c:	or     BYTE PTR [rip+0x1f010004],al        # 0x15f050576
   140040572:	or     DWORD PTR [rax],eax
   140040574:	(bad)  
   140040575:	je     0x1400405c7
   140040577:	add    DWORD PTR [rdi],ebx
   140040579:	rex.WRXB add QWORD PTR fs:[r15],r11
   14004057d:	xor    al,0x4e
   14004057f:	add    DWORD PTR [rdi],ebx
   140040581:	add    DWORD PTR [rcx+rax*1+0x10],ecx
   140040585:	push   rax
   140040586:	add    BYTE PTR [rax],al
   140040588:	add    DWORD PTR [rdx],ecx
   14004058a:	add    al,0x0
   14004058c:	or     dh,BYTE PTR [rsi+rax*1]
   14004058f:	add    BYTE PTR [rdx],cl
   140040591:	xor    al,BYTE PTR [rsi]
   140040593:	jo     0x140040596
   140040595:	or     eax,0x340d0005
   14004059a:	sub    BYTE PTR [rax],al
   14004059c:	or     eax,0x6002601
   1400405a1:	jo     0x1400405a3
   1400405a3:	add    BYTE PTR [rcx],al
   1400405a5:	or     al,BYTE PTR [rdx]
   1400405a7:	add    BYTE PTR [rdx],cl
   1400405a9:	xor    al,BYTE PTR [rsi]
   1400405ab:	xor    BYTE PTR [rcx],al
   1400405ad:	sbb    cl,BYTE PTR [rdx]
   1400405af:	add    BYTE PTR [rdx],bl
   1400405b1:	je     0x1400405c0
   1400405b3:	add    BYTE PTR [rdx],bl
   1400405b5:	fs or  al,0x0
   1400405b8:	sbb    dl,BYTE PTR [rbx+rcx*1+0x0]
   1400405bc:	sbb    dh,BYTE PTR [rdx+rcx*1]
   1400405bf:	add    BYTE PTR [rdx],bl
   1400405c1:	jb     0x1400405d9
   1400405c3:	loopne 0x1400405e6
   1400405c5:	add    eax,0x74050002
   1400405ca:	(bad)  
   1400405cb:	add    BYTE PTR [rax+0x19],dl
   1400405ce:	add    BYTE PTR [rax],al
   1400405d0:	jb     0x1400405eb
   1400405d2:	add    BYTE PTR [rax],al
   1400405d4:	sub    BYTE PTR [rip+0x5210004],dl        # 0x1452505de
   1400405da:	add    al,BYTE PTR [rax]
   1400405dc:	add    eax,0x72000664
   1400405e1:	sbb    DWORD PTR [rax],eax
   1400405e3:	add    BYTE PTR [rcx+rbx*1+0x5c40000],al
   1400405ea:	add    al,0x0
   1400405ec:	and    DWORD PTR [rax],eax
   1400405ee:	add    BYTE PTR [rax],al
   1400405f0:	jb     0x14004060b
   1400405f2:	add    BYTE PTR [rax],al
   1400405f4:	test   BYTE PTR [rcx],bl
   1400405f6:	add    BYTE PTR [rax],al
   1400405f8:	(bad)  
   1400405f9:	add    eax,0x210004
   1400405fe:	add    BYTE PTR [rax],al
   140040600:	push   rax
   140040601:	sbb    DWORD PTR [rax],eax
   140040603:	add    BYTE PTR [rdx+0x19],dh
   140040606:	add    BYTE PTR [rax],al
   140040608:	sub    BYTE PTR [rip+0xa010004],dl        # 0x14a050612
   14004060e:	add    al,0x0
   140040610:	or     dh,BYTE PTR [rcx+rcx*1]
   140040613:	add    BYTE PTR [rdx],cl
   140040615:	push   rdx
   140040616:	(bad)  
   140040617:	jo     0x14004063a
   140040619:	add    eax,0x64050002
   14004061e:	or     BYTE PTR [rax],al
   140040620:	and    BYTE PTR [rsi],bh
   140040622:	add    BYTE PTR [rax],al
   140040624:	(bad)  
   140040625:	add    BYTE PTR ds:[rax],al
   140040628:	or     al,0x6
   14004062a:	add    al,0x0
   14004062c:	and    DWORD PTR [rax],eax
   14004062e:	add    BYTE PTR [rax],al
   140040630:	and    BYTE PTR [rsi],bh
   140040632:	add    BYTE PTR [rax],al
   140040634:	(bad)  
   140040635:	add    BYTE PTR ds:[rax],al
   140040638:	or     al,0x6
   14004063a:	add    al,0x0
   14004063c:	add    DWORD PTR [rcx+rax*1],eax
   14004063f:	add    BYTE PTR [rdx+rax*8],al
   140040642:	add    BYTE PTR [rax],al
   140040644:	add    DWORD PTR [rdi],ebx
   140040646:	or     al,0x35
   140040648:	(bad)  
   140040649:	xor    al,0x82
   14004064b:	add    BYTE PTR [rax],bl
   14004064d:	xor    edx,DWORD PTR [rbx]
   14004064f:	add    DWORD PTR [rdx+0x0],edi
   140040652:	or     al,0xf0
   140040654:	or     ah,al
   140040656:	or     al,dl
   140040658:	(bad)  
   140040659:	rol    BYTE PTR [rax+rsi*2],0x3
   14004065d:	(bad)  
   14004065e:	add    dl,BYTE PTR [rax+0x1]
   140040661:	sbb    BYTE PTR [rip+0x12011800],al        # 0x152051e67
   140040667:	add    BYTE PTR [rax+rsi*2],cl
   14004066a:	or     esi,DWORD PTR [rax]
   14004066c:	or     dl,BYTE PTR [rax+0x0]
   14004066f:	add    BYTE PTR [rcx],ah
   140040671:	sbb    eax,DWORD PTR [rax+rax*1]
   140040674:	sbb    esp,esp
   140040676:	adc    BYTE PTR [rax],al
   140040678:	or     BYTE PTR [rcx+rdx*1+0x0],ah
   14004067c:	push   rax
   14004067d:	data16 add BYTE PTR [rax],al
   140040680:	add    BYTE PTR ds:[eax],al
   140040684:	(bad)  
   140040685:	(bad)  
   140040686:	add    al,0x0
   140040688:	and    DWORD PTR [rax],eax
   14004068a:	add    BYTE PTR [rax],al
   14004068c:	push   rax
   14004068d:	data16 add BYTE PTR [rax],al
   140040690:	add    BYTE PTR ds:[eax],al
   140040694:	(bad)  
   140040695:	(bad)  
   140040696:	add    al,0x0
   140040698:	add    DWORD PTR [rax],ecx
   14004069a:	add    al,0x0
   14004069c:	or     BYTE PTR [rdx+0x4],dh
   14004069f:	jo     0x1400406a4
   1400406a1:	push   rax
   1400406a2:	add    dh,BYTE PTR [rax]
   1400406a4:	and    DWORD PTR [rcx],ebx
   1400406a6:	or     al,BYTE PTR [rax]
   1400406a8:	sbb    esp,esi
   1400406aa:	add    al,0x0
   1400406ac:	adc    al,0xe4
   1400406ae:	add    eax,0x6d40f00
   1400406b3:	add    BYTE PTR [rdx],cl
   1400406b5:	(bad)  
   1400406b6:	(bad)  
   1400406b7:	add    BYTE PTR [rip+0xffffffff80000d64],al        # 0xc0041421
   1400406bd:	xor    BYTE PTR [rax],al
   1400406bf:	add    BYTE PTR [rdi-0x67ffffd0],bl
   1400406c5:	(bad)  
   1400406c6:	add    al,0x0
   1400406c8:	and    DWORD PTR [rax],eax
   1400406ca:	add    BYTE PTR [rax],al
   1400406cc:	xor    BYTE PTR [rax],0x0
   1400406cf:	add    BYTE PTR [rdi-0x67ffffd0],bl
   1400406d5:	(bad)  
   1400406d6:	add    al,0x0
   1400406d8:	add    DWORD PTR [rcx],ebx
   1400406da:	or     al,BYTE PTR [rax]
   1400406dc:	sbb    DWORD PTR [rsi+rcx*1],esi
   1400406df:	add    BYTE PTR [rcx],bl
   1400406e1:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e41ad7
   1400406e7:	ror    BYTE PTR [rdi],1
   1400406e9:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b641360
   1400406f0:	and    DWORD PTR [rax],ecx
   1400406f2:	add    al,BYTE PTR [rax]
   1400406f4:	or     BYTE PTR [rsi+rcx*4+0x0],ah
   1400406f8:	push   rax
   1400406f9:	and    BYTE PTR [rax],al
   1400406fb:	add    BYTE PTR [rsi+0x14000020],ch
   140040701:	(bad)  
   140040702:	add    al,0x0
   140040704:	and    DWORD PTR [rax],eax
   140040706:	add    BYTE PTR [rax],al
   140040708:	push   rax
   140040709:	and    BYTE PTR [rax],al
   14004070b:	add    BYTE PTR [rsi+0x14000020],ch
   140040711:	(bad)  
   140040712:	add    al,0x0
   140040714:	add    DWORD PTR [rip+0x340d0005],ecx        # 0x17411071f
   14004071a:	pop    QWORD PTR [rax]
   14004071c:	or     eax,0x6008c01
   140040721:	jo     0x140040723
   140040723:	add    BYTE PTR [rcx],ah
   140040725:	or     BYTE PTR [rdx],al
   140040727:	add    BYTE PTR [rax],cl
   140040729:	mov    es,WORD PTR fs:[rax]
   14004072c:	xor    BYTE PTR [rdi],bl
   14004072e:	add    BYTE PTR [rax],al
   140040730:	mov    ds,WORD PTR [rdi]
   140040732:	add    BYTE PTR [rax],al
   140040734:	adc    al,0x7
   140040736:	add    al,0x0
   140040738:	and    DWORD PTR [rax],eax
   14004073a:	add    BYTE PTR [rax],al
   14004073c:	xor    BYTE PTR [rdi],bl
   14004073e:	add    BYTE PTR [rax],al
   140040740:	mov    ds,WORD PTR [rdi]
   140040742:	add    BYTE PTR [rax],al
   140040744:	adc    al,0x7
   140040746:	add    al,0x0
   140040748:	add    DWORD PTR [rsi],ebx
   14004074a:	add    eax,0xd8011e00
   14004074f:	add    BYTE PTR [rax],dl
   140040751:	ror    BYTE PTR [rsi],0x30
   140040754:	or     eax,0x21000050
   140040759:	add    al,0x2
   14004075b:	add    BYTE PTR [rsp+rsi*2],al
   14004075e:	xlat   BYTE PTR ds:[rbx]
   14004075f:	add    BYTE PTR [rax],dl
   140040761:	(bad)  
   140040762:	add    BYTE PTR [rax],al
   140040764:	cs (bad) 
   140040766:	add    BYTE PTR [rax],al
   140040768:	rex.W (bad) 
   14004076a:	add    al,0x0
   14004076c:	and    DWORD PTR [rdx+rax*1],eax
   14004076f:	add    BYTE PTR [rsp+rsi*8],al
   140040772:	(bad)  
   140040773:	add    BYTE PTR [rsi],ch
   140040775:	(bad)  
   140040776:	add    BYTE PTR [rax],al
   140040778:	xor    eax,0x58000027
   14004077d:	(bad)  
   14004077e:	add    al,0x0
   140040780:	and    DWORD PTR [rsi],esp
   140040782:	(bad)  
   140040783:	add    BYTE PTR [rsi],ah
   140040785:	in     al,0xd5
   140040787:	add    BYTE PTR [rdi],dl
   140040789:	(bad)  
   14004078a:	(bad)  
   14004078b:	add    BYTE PTR [rax],cl
   14004078d:	fadd   QWORD PTR fs:[rax]
   140040790:	xor    eax,0xa8000027
   140040795:	(bad)  
   140040796:	add    BYTE PTR [rax],al
   140040798:	ins    BYTE PTR es:[rdi],dx
   140040799:	(bad)  
   14004079a:	add    al,0x0
   14004079c:	and    DWORD PTR [rax],eax
   14004079e:	add    BYTE PTR [rax],al
   1400407a0:	xor    eax,0xa8000027
   1400407a5:	(bad)  
   1400407a6:	add    BYTE PTR [rax],al
   1400407a8:	ins    BYTE PTR es:[rdi],dx
   1400407a9:	(bad)  
   1400407aa:	add    al,0x0
   1400407ac:	and    DWORD PTR [rax],eax
   1400407ae:	add    BYTE PTR [rax],al
   1400407b0:	cs (bad) 
   1400407b2:	add    BYTE PTR [rax],al
   1400407b4:	xor    eax,0x58000027
   1400407b9:	(bad)  
   1400407ba:	add    al,0x0
   1400407bc:	and    DWORD PTR [rax],eax
   1400407be:	add    BYTE PTR [rax],al
   1400407c0:	adc    BYTE PTR [rdi],ah
   1400407c2:	add    BYTE PTR [rax],al
   1400407c4:	cs (bad) 
   1400407c6:	add    BYTE PTR [rax],al
   1400407c8:	rex.W (bad) 
   1400407ca:	add    al,0x0
   1400407cc:	add    DWORD PTR [rdi],ecx
   1400407ce:	(bad)  
   1400407cf:	add    BYTE PTR [rdi],cl
   1400407d1:	or     DWORD PTR fs:[rax],eax
   1400407d4:	sysenter 
   1400407d6:	or     BYTE PTR [rax],al
   1400407d8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400407db:	jo     0x1400407de
   1400407dd:	or     BYTE PTR [rax+rax*1],al
   1400407e0:	or     BYTE PTR [rdx],dh
   1400407e2:	add    al,0x70
   1400407e4:	add    esp,DWORD PTR [rax+0x2]
   1400407e7:	xor    BYTE PTR [rcx],ah
   1400407e9:	add    eax,0x54050002
   1400407ee:	or     al,BYTE PTR [rax]
   1400407f0:	xor    BYTE PTR [rax+rax*1],ch
   1400407f3:	add    BYTE PTR [rdx-0x23ffffd4],dl
   1400407f9:	(bad)  
   1400407fa:	add    al,0x0
   1400407fc:	and    DWORD PTR [rax],eax
   1400407fe:	add    BYTE PTR [rax],al
   140040800:	xor    BYTE PTR [rax+rax*1],ch
   140040803:	add    BYTE PTR [rdx-0x23ffffd4],dl
   140040809:	(bad)  
   14004080a:	add    al,0x0
   14004080c:	add    DWORD PTR [rcx],ecx
   14004080e:	add    eax,DWORD PTR [rax]
   140040810:	or     DWORD PTR [rcx],eax
   140040812:	rex.WR add BYTE PTR [rdx],r8b
   140040815:	xor    BYTE PTR [rax],al
   140040817:	add    BYTE PTR [rcx],ah
   140040819:	(bad)  
   14004081a:	(bad)  
   14004081b:	add    BYTE PTR [rsi],bl
   14004081d:	je     0x140040870
   14004081f:	add    BYTE PTR [rax],dl
   140040821:	rex.WRXB add BYTE PTR fs:[r8],r9b
   140040825:	push   rsp
   140040826:	rex.WRX add al,r8b
   140040829:	cmp    DWORD PTR [rax],eax
   14004082b:	add    BYTE PTR [rdx],dl
   14004082d:	cmp    al,BYTE PTR [rax]
   14004082f:	add    BYTE PTR [rax+rcx*1],cl
   140040832:	add    al,0x0
   140040834:	and    DWORD PTR [rax],eax
   140040836:	(bad)  
   140040837:	add    BYTE PTR [rax],al
   140040839:	je     0x14004088c
   14004083b:	add    BYTE PTR [rax],al
   14004083d:	rex.WRXB add BYTE PTR fs:[r8],r8b
   140040841:	push   rsp
   140040842:	rex.WRX add al,r8b
   140040845:	cmp    DWORD PTR [rax],eax
   140040847:	add    BYTE PTR [rdx],dl
   140040849:	cmp    al,BYTE PTR [rax]
   14004084b:	add    BYTE PTR [rax+rcx*1],cl
   14004084e:	add    al,0x0
   140040850:	add    DWORD PTR [rdx],edx
   140040852:	(bad)  
   140040853:	add    BYTE PTR [rdx],dl
   140040855:	fs stos DWORD PTR es:[rdi],eax
   140040857:	add    BYTE PTR [rdx],dl
   140040859:	xor    al,0xaa
   14004085b:	add    BYTE PTR [rdx],dl
   14004085d:	add    DWORD PTR [rax+0x700b00],ebp
   140040863:	add    BYTE PTR [rcx],al
   140040865:	sbb    BYTE PTR [rsi],al
   140040867:	add    BYTE PTR [rax],bl
   140040869:	or     BYTE PTR fs:[rax],al
   14004086c:	sbb    BYTE PTR [rdi+rax*1],dh
   14004086f:	add    BYTE PTR [rax],bl
   140040871:	xor    dl,BYTE PTR [rax+rsi*2]
   140040874:	and    DWORD PTR [rip+0x54050002],eax        # 0x19409087c
   14004087a:	(bad)  
   14004087b:	add    BYTE PTR [rax-0x16ffffdf],dl
   140040881:	and    DWORD PTR [rax],eax
   140040883:	add    BYTE PTR [rax+rcx*1+0x4],ah
   140040887:	add    BYTE PTR [rcx],ah
   140040889:	add    BYTE PTR [rax],al
   14004088b:	add    BYTE PTR [rax-0x16ffffdf],dl
   140040891:	and    DWORD PTR [rax],eax
   140040893:	add    BYTE PTR [rax+rcx*1+0x4],ah
   140040897:	add    BYTE PTR [rcx],al
   140040899:	(bad)  
   14004089a:	add    al,BYTE PTR [rax]
   14004089c:	(bad)  
   14004089d:	xor    al,BYTE PTR [rdx]
   14004089f:	xor    BYTE PTR [rcx],al
   1400408a1:	adc    al,0x5
   1400408a3:	add    BYTE PTR [rcx+rax*1],dl
   1400408a6:	enter  0x501,0xd0
   1400408aa:	add    esi,DWORD PTR [rax]
   1400408ac:	add    dl,BYTE PTR [rax+0x0]
   1400408af:	add    BYTE PTR [rcx],ah
   1400408b1:	adc    BYTE PTR [rax+rax*1],al
   1400408b4:	adc    BYTE PTR [rsi+rax*8+0x1],dh
   1400408b8:	or     BYTE PTR [rdi+rax*8+0x1],ah
   1400408bc:	nop
   1400408bd:	push   rbx
   1400408be:	add    BYTE PTR [rax],al
   1400408c0:	mov    ds,WORD PTR [rax+0x0]
   1400408c3:	add    BYTE PTR [rax+0x21000408],ah
   1400408c9:	sbb    BYTE PTR [rsi],al
   1400408cb:	add    BYTE PTR [rax],bl
   1400408cd:	hlt    
   1400408ce:	ret    
   1400408cf:	add    DWORD PTR [rax],edx
   1400408d1:	in     al,0xc4
   1400408d3:	add    DWORD PTR [rax],ecx
   1400408d5:	(bad)  
   1400408d6:	(bad)
   1400408d9:	pop    rax
   1400408da:	add    BYTE PTR [rax],al
   1400408dc:	sahf   
   1400408dd:	pop    rax
   1400408de:	add    BYTE PTR [rax],al
   1400408e0:	mov    al,0x8
   1400408e2:	add    al,0x0
   1400408e4:	and    DWORD PTR [rax],eax
   1400408e6:	add    al,0x0
   1400408e8:	add    ah,dh
   1400408ea:	ret    
   1400408eb:	add    DWORD PTR [rax],eax
   1400408ed:	in     al,0xc4
   1400408ef:	add    DWORD PTR [rsi-0x61ffffa8],ecx
   1400408f5:	pop    rax
   1400408f6:	add    BYTE PTR [rax],al
   1400408f8:	mov    al,0x8
   1400408fa:	add    al,0x0
   1400408fc:	and    DWORD PTR [rax],eax
   1400408fe:	add    BYTE PTR [rax],al
   140040900:	nop
   140040901:	push   rbx
   140040902:	add    BYTE PTR [rax],al
   140040904:	mov    ds,WORD PTR [rax+0x0]
   140040907:	add    BYTE PTR [rax+0x1000408],ah
   14004090d:	clts   
   14004090f:	add    BYTE PTR [rdi],cl
   140040911:	or     DWORD PTR fs:[rax],eax
   140040914:	sysenter 
   140040916:	or     BYTE PTR [rax],al
   140040918:	rdmsr  
   14004091a:	or     esi,DWORD PTR [rax+0x21]
   14004091d:	add    eax,0x54050002
   140040922:	(bad)  
   140040923:	add    BYTE PTR [rax],al
   140040925:	(bad)  
   140040926:	add    BYTE PTR [rax],al
   140040928:	ins    DWORD PTR es:[rdi],dx
   140040929:	(bad)  
   14004092a:	add    BYTE PTR [rax],al
   14004092c:	or     al,0x9
   14004092e:	add    al,0x0
   140040930:	and    DWORD PTR [rax],eax
   140040932:	add    BYTE PTR [rax],al
   140040934:	add    BYTE PTR [rdi],dh
   140040936:	add    BYTE PTR [rax],al
   140040938:	ins    DWORD PTR es:[rdi],dx
   140040939:	(bad)  
   14004093a:	add    BYTE PTR [rax],al
   14004093c:	or     al,0x9
   14004093e:	add    al,0x0
   140040940:	add    DWORD PTR [rdi+0xe],eax
   140040943:	xor    eax,0x91c447
   140040948:	(bad)  
   140040949:	je     0x1400408db
   14004094b:	add    BYTE PTR [rip+0x23008f64],ch        # 0x1630498b5
   140040951:	xor    al,0x8e
   140040953:	add    BYTE PTR [rdx],dl
   140040955:	xor    ecx,DWORD PTR [rip+0x6008a01]        # 0x14604935c
   14004095b:	lock add al,0xe0
   14004095e:	add    dl,BYTE PTR [rax+0x1]
   140040961:	sub    al,0xd
   140040963:	add    BYTE PTR [rsp+rsi*2],ch
   140040966:	in     eax,0x0
   140040968:	sub    al,0x64
   14004096a:	jrcxz  0x14004096c
   14004096c:	sub    al,0x34
   14004096e:	loop   0x140040970
   140040970:	sub    al,0x1
   140040972:	fadd   QWORD PTR [rax]
   140040974:	sbb    eax,0x19e01bf0
   140040979:	rcl    BYTE PTR [rdi],1
   14004097b:	rcl    BYTE PTR [rip+0x21000050],0x5        # 0x1610409d2
   140040982:	add    al,BYTE PTR [rax]
   140040984:	add    eax,0xc0000634
   140040989:	cmp    BYTE PTR [rax],al
   14004098b:	add    cl,ah
   14004098d:	cmp    BYTE PTR [rax],al
   14004098f:	add    BYTE PTR [rbx+rcx*1+0x210004],ah
   140040996:	add    BYTE PTR [rax],al
   140040998:	sar    BYTE PTR [rax],0x0
   14004099b:	add    cl,ah
   14004099d:	cmp    BYTE PTR [rax],al
   14004099f:	add    BYTE PTR [rbx+rcx*1+0x10210004],ah
   1400409a6:	add    al,0x0
   1400409a8:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   1400409ac:	add    eax,0xe0000634
   1400409b1:	xor    DWORD PTR [rax],eax
   1400409b3:	add    BYTE PTR [rcx],al
   1400409b5:	xor    al,BYTE PTR [rax]
   1400409b7:	add    ah,ch
   1400409b9:	xor    al,BYTE PTR [rax+rax*1]
   1400409bc:	and    DWORD PTR [rax],eax
   1400409be:	add    al,0x0
   1400409c0:	add    BYTE PTR [rdi+rax*1+0x0],ah
   1400409c4:	add    BYTE PTR [rsi+rax*1],dh
   1400409c7:	add    al,ah
   1400409c9:	xor    DWORD PTR [rax],eax
   1400409cb:	add    BYTE PTR [rcx],al
   1400409cd:	xor    al,BYTE PTR [rax]
   1400409cf:	add    ah,ch
   1400409d1:	xor    al,BYTE PTR [rax+rax*1]
   1400409d4:	and    DWORD PTR [rax],eax
   1400409d6:	add    BYTE PTR [rax],al
   1400409d8:	loopne 0x140040a0b
   1400409da:	add    BYTE PTR [rax],al
   1400409dc:	add    DWORD PTR [rdx],esi
   1400409de:	add    BYTE PTR [rax],al
   1400409e0:	in     al,dx
   1400409e1:	xor    al,BYTE PTR [rax+rax*1]
   1400409e4:	add    DWORD PTR [rsi],edx
   1400409e6:	add    al,0x0
   1400409e8:	(bad)  
   1400409e9:	jb     0x1400409fd
   1400409eb:	jo     0x1400409fe
   1400409ed:	(bad)  
   1400409ee:	adc    BYTE PTR [rax],dh
   1400409f0:	add    DWORD PTR [rcx],edx
   1400409f2:	(bad)  
   1400409f3:	add    BYTE PTR [rcx],dl
   1400409f5:	push   rsp
   1400409f6:	push   rax
   1400409f7:	add    BYTE PTR [rcx],dl
   1400409f9:	add    DWORD PTR [rdx+0x0],ecx
   1400409fc:	or     dh,al
   1400409fe:	or     al,ah
   140040a00:	(bad)  
   140040a01:	(bad)  
   140040a02:	add    BYTE PTR [rax],al
   140040a04:	and    DWORD PTR [rax],ebx
   140040a06:	add    al,0x0
   140040a08:	sbb    BYTE PTR [rdi+rcx*2+0x0],dh
   140040a0c:	or     BYTE PTR [rsi+rcx*2],dh
   140040a0f:	add    BYTE PTR [rax-0x13ffffc5],dh
   140040a15:	cmp    eax,DWORD PTR [rax]
   140040a17:	add    al,dh
   140040a19:	or     DWORD PTR [rax+rax*1],eax
   140040a1c:	and    DWORD PTR [rax],eax
   140040a1e:	add    al,BYTE PTR [rax]
   140040a20:	add    BYTE PTR [rdi+rcx*2+0x0],dh
   140040a24:	mov    al,0x3b
   140040a26:	add    BYTE PTR [rax],al
   140040a28:	in     al,dx
   140040a29:	cmp    eax,DWORD PTR [rax]
   140040a2b:	add    al,dh
   140040a2d:	or     DWORD PTR [rax+rax*1],eax
   140040a30:	and    DWORD PTR [rax],eax
   140040a32:	add    BYTE PTR [rax],al
   140040a34:	mov    al,0x3b
   140040a36:	add    BYTE PTR [rax],al
   140040a38:	in     al,dx
   140040a39:	cmp    eax,DWORD PTR [rax]
   140040a3b:	add    al,dh
   140040a3d:	or     DWORD PTR [rax+rax*1],eax
   140040a40:	add    DWORD PTR [rdx],ecx
   140040a42:	add    eax,DWORD PTR [rax]
   140040a44:	or     ah,dl
   140040a46:	(bad)  
   140040a47:	loopne 0x140040a4d
   140040a49:	(bad)  
   140040a4a:	add    BYTE PTR [rax],al
   140040a4c:	and    DWORD PTR [rdx+rax*1],eax
   140040a4f:	add    BYTE PTR [rsp+rsi*1],al
   140040a52:	adc    al,BYTE PTR [rax]
   140040a54:	lock rex.RX add BYTE PTR [rax],r8b
   140040a58:	cli    
   140040a59:	rex.RX add BYTE PTR [rax],r8b
   140040a5c:	or     al,BYTE PTR [rax+rax*1]
   140040a60:	and    DWORD PTR [rsi],ebx
   140040a62:	or     al,BYTE PTR [rax]
   140040a64:	(bad)  
   140040a65:	hlt    
   140040a66:	or     al,BYTE PTR [rax]
   140040a68:	(bad)  
   140040a69:	(bad)  
   140040a6a:	or     eax,DWORD PTR [rax]
   140040a6c:	adc    ah,al
   140040a6e:	or     al,0x0
   140040a70:	or     dh,BYTE PTR [rbp+rcx*1+0x0]
   140040a74:	add    al,0x54
   140040a76:	(bad)  
   140040a77:	add    dl,bh
   140040a79:	rex.RX add BYTE PTR [rax],r8b
   140040a7c:	add    DWORD PTR [rdi+0x0],eax
   140040a7f:	add    BYTE PTR [rdx+rcx*1+0x4],cl
   140040a83:	add    BYTE PTR [rcx],ah
   140040a85:	add    BYTE PTR [rdx],al
   140040a87:	add    BYTE PTR [rax],al
   140040a89:	je     0x140040a98
   140040a8b:	add    dl,bh
   140040a8d:	rex.RX add BYTE PTR [rax],r8b
   140040a90:	add    DWORD PTR [rdi+0x0],eax
   140040a93:	add    BYTE PTR [rdx+rcx*1+0x4],cl
   140040a97:	add    BYTE PTR [rcx],ah
   140040a99:	add    BYTE PTR [rax],al
   140040a9b:	add    dl,bh
   140040a9d:	rex.RX add BYTE PTR [rax],r8b
   140040aa0:	add    DWORD PTR [rdi+0x0],eax
   140040aa3:	add    BYTE PTR [rdx+rcx*1+0x4],cl
   140040aa7:	add    BYTE PTR [rcx],ah
   140040aa9:	add    BYTE PTR [rax],al
   140040aab:	add    al,dh
   140040aad:	rex.RX add BYTE PTR [rax],r8b
   140040ab0:	cli    
   140040ab1:	rex.RX add BYTE PTR [rax],r8b
   140040ab4:	or     al,BYTE PTR [rax+rax*1]
   140040ab8:	or     DWORD PTR [rdx],ecx
   140040aba:	add    al,0x0
   140040abc:	or     dh,BYTE PTR [rax+rdx*1]
   140040abf:	add    BYTE PTR [rdx],cl
   140040ac1:	rol    BYTE PTR [rsi],cl
   140040ac3:	jo     0x140040a61
   140040ac5:	jne    0x140040ac9
   140040ac7:	add    BYTE PTR [rcx],al
   140040ac9:	add    BYTE PTR [rax],al
   140040acb:	add    BYTE PTR [rbp+0x6c],ch
   140040ace:	add    BYTE PTR [rax],al
   140040ad0:	xchg   esp,eax
   140040ad1:	ins    BYTE PTR es:[rdi],dx
   140040ad2:	add    BYTE PTR [rax],al
   140040ad4:	and    BYTE PTR [rip+0x6c940003],cl        # 0x1ac980add
   140040ada:	add    BYTE PTR [rax],al
   140040adc:	add    DWORD PTR [rsi],eax
   140040ade:	add    al,BYTE PTR [rax]
   140040ae0:	(bad)  
   140040ae1:	push   rdx
   140040ae2:	add    dl,BYTE PTR [rax+0x1]
   140040ae5:	xchg   esi,eax
   140040ae6:	(bad)  
   140040ae7:	add    BYTE PTR [rsi+0xd002864],dl
   140040aed:	xor    al,0x29
   140040aef:	add    BYTE PTR [rip+0x6002601],cl        # 0x1460430f6
   140040af5:	jo     0x140040af7
   140040af7:	add    BYTE PTR [rcx],al
   140040af9:	xor    eax,0xc426000d
   140040afe:	lar    esp,WORD PTR [rsi]
   140040b01:	je     0x140040b11
   140040b03:	add    ah,BYTE PTR [rsi]
   140040b05:	fs or  eax,0xc342602
   140040b0b:	add    ah,BYTE PTR [rsi]
   140040b0d:	add    DWORD PTR [rax],ecx
   140040b0f:	add    bl,BYTE PTR [rcx]
   140040b11:	lock (bad) 
   140040b13:	loopne 0x140040b2a
   140040b15:	push   rax
   140040b16:	add    BYTE PTR [rax],al
   140040b18:	add    DWORD PTR [rcx],ecx
   140040b1a:	add    DWORD PTR [rax],eax
   140040b1c:	or     edx,eax
   140040b1e:	add    BYTE PTR [rax],al
   140040b20:	add    DWORD PTR [rax],ebx
   140040b22:	add    DWORD PTR [rax],eax
   140040b24:	sbb    BYTE PTR [rdx+0x0],al
   140040b27:	add    BYTE PTR [rcx],ah
   140040b29:	sbb    eax,0x741d0006
   140040b2e:	add    al,0x0
   140040b30:	adc    DWORD PTR [rdi+rax*1+0x0],esp
   140040b34:	add    eax,0x70000634
   140040b39:	jnp    0x140040b3b
   140040b3b:	add    BYTE PTR [rax+0x7b],bh
   140040b3e:	add    BYTE PTR [rax],al
   140040b40:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   140040b44:	and    DWORD PTR [rax],eax
   140040b46:	add    BYTE PTR [rax],al
   140040b48:	jo     0x140040bc5
   140040b4a:	add    BYTE PTR [rax],al
   140040b4c:	js     0x140040bc9
   140040b4e:	add    BYTE PTR [rax],al
   140040b50:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   140040b54:	add    DWORD PTR [rsp+rcx*1],ebx
   140040b57:	add    BYTE PTR [rsp+riz*2],bl
   140040b5a:	(bad)  
   140040b5b:	add    BYTE PTR [rsp+rdx*2],bl
   140040b5e:	or     eax,0xc341c00
   140040b63:	add    BYTE PTR [rdx+rdx*2],bl
   140040b66:	sbb    al,dh
   140040b68:	(bad)  
   140040b69:	loopne 0x140040b7f
   140040b6b:	rcl    BYTE PTR [rdx],1
   140040b6d:	rcl    BYTE PTR [rax],0x70
   140040b70:	add    DWORD PTR [rdi],ecx
   140040b72:	(bad)  
   140040b73:	add    BYTE PTR [rdi],cl
   140040b75:	push   rsp
   140040b76:	or     al,BYTE PTR [rax]
   140040b78:	sysenter 
   140040b7a:	or     DWORD PTR [rax],eax
   140040b7c:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140040b7f:	jo     0x140040ba2
   140040b81:	add    eax,0x64050002
   140040b86:	or     BYTE PTR [rax],al
   140040b88:	add    BYTE PTR [rbp+0x0],bh
   140040b8b:	add    BYTE PTR [rip+0x7000007d],ah        # 0x1b0040c0e
   140040b91:	or     eax,DWORD PTR [rax+rax*1]
   140040b94:	and    DWORD PTR [rax],eax
   140040b96:	add    BYTE PTR [rax],al
   140040b98:	add    BYTE PTR [rbp+0x0],bh
   140040b9b:	add    BYTE PTR [rip+0x7000007d],ah        # 0x1b0040c1e
   140040ba1:	or     eax,DWORD PTR [rax+rax*1]
   140040ba4:	add    DWORD PTR [rax],edx
   140040ba6:	(bad)  
   140040ba7:	add    BYTE PTR [rax],dl
   140040ba9:	je     0x140040bb3
   140040bab:	add    BYTE PTR [rax],dl
   140040bad:	fs (bad) 
   140040baf:	add    BYTE PTR [rax],dl
   140040bb1:	xor    cl,BYTE PTR [rax+riz*8]
   140040bb4:	and    DWORD PTR [rip+0x34050002],eax        # 0x174090bbc
   140040bba:	(bad)  
   140040bbb:	add    BYTE PTR [rax],dl
   140040bbd:	pushf  
   140040bbe:	add    BYTE PTR [rax],al
   140040bc0:	xor    DWORD PTR [rax+rax*1+0x40ba400],ebx
   140040bc7:	add    BYTE PTR [rcx],ah
   140040bc9:	add    BYTE PTR [rax],al
   140040bcb:	add    BYTE PTR [rax],dl
   140040bcd:	pushf  
   140040bce:	add    BYTE PTR [rax],al
   140040bd0:	xor    DWORD PTR [rax+rax*1+0x40ba400],ebx
   140040bd7:	add    BYTE PTR [rcx],ah
   140040bd9:	adc    BYTE PTR [rax+rax*1],al
   140040bdc:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140040be0:	add    eax,0x634
   140040be5:	xchg   esi,eax
   140040be6:	add    BYTE PTR [rax],al
   140040be8:	and    DWORD PTR [rsi+0x32ec0000],edx
   140040bee:	add    al,0x0
   140040bf0:	and    DWORD PTR [rax],eax
   140040bf2:	add    al,0x0
   140040bf4:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140040bf8:	add    BYTE PTR [rsi+rax*1],dh
   140040bfb:	add    BYTE PTR [rax],al
   140040bfd:	xchg   esi,eax
   140040bfe:	add    BYTE PTR [rax],al
   140040c00:	and    DWORD PTR [rsi+0x32ec0000],edx
   140040c06:	add    al,0x0
   140040c08:	and    DWORD PTR [rax],eax
   140040c0a:	add    BYTE PTR [rax],al
   140040c0c:	add    BYTE PTR [rsi-0x69df0000],dl
   140040c12:	add    BYTE PTR [rax],al
   140040c14:	in     al,dx
   140040c15:	xor    al,BYTE PTR [rax+rax*1]
   140040c18:	add    DWORD PTR [rbx],ebx
   140040c1a:	or     eax,DWORD PTR [rax]
   140040c1c:	sbb    esp,DWORD PTR [rdx+rcx*2+0x0]
   140040c20:	sbb    edx,DWORD PTR [rcx+rcx*2+0x0]
   140040c24:	sbb    esi,DWORD PTR [rax+rcx*2]
   140040c27:	add    BYTE PTR [rbx],bl
   140040c29:	add    DWORD PTR [rax+rax*1+0x14],eax
   140040c2d:	lock adc ah,al
   140040c30:	adc    BYTE PTR [rax+0x0],dh
   140040c33:	add    BYTE PTR [rcx],al
   140040c35:	or     al,BYTE PTR [rax+rax*1]
   140040c38:	or     dh,BYTE PTR [rcx+rcx*1]
   140040c3b:	add    BYTE PTR [rdx],cl
   140040c3d:	xor    al,BYTE PTR [rsi]
   140040c3f:	push   rax
   140040c40:	and    DWORD PTR [rbp+0x4],edx
   140040c43:	add    BYTE PTR [rbp+0x64],dl
   140040c46:	(bad)  
   140040c47:	add    BYTE PTR [rip+0xffffffff80000774],al        # 0xc00413c1
   140040c4d:	add    BYTE PTR [rax],0x0
   140040c50:	xchg   ecx,eax
   140040c51:	add    BYTE PTR [rax],0x0
   140040c54:	xor    al,0xc
   140040c56:	add    al,0x0
   140040c58:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124090c60
   140040c5e:	or     BYTE PTR [rax],al
   140040c60:	xchg   ecx,eax
   140040c61:	add    BYTE PTR [rax],0x0
   140040c64:	jmp    0x140040be6
   140040c66:	add    BYTE PTR [rax],al
   140040c68:	or     al,0x4
   140040c6b:	add    BYTE PTR [rcx],ah
   140040c6d:	add    BYTE PTR [rax],al
   140040c6f:	add    BYTE PTR [rcx-0x14ffff80],dl
   140040c75:	add    BYTE PTR [rax],0x0
   140040c78:	or     al,0x4
   140040c7b:	add    BYTE PTR [rcx],ah
   140040c7d:	add    BYTE PTR [rax],al
   140040c7f:	add    BYTE PTR [rax-0x6effff80],al
   140040c85:	add    BYTE PTR [rax],0x0
   140040c88:	xor    al,0xc
   140040c8a:	add    al,0x0
   140040c8c:	add    DWORD PTR [rcx+rcx*1],ebx
   140040c8f:	add    BYTE PTR [rsp+rsi*2],bl
   140040c92:	sbb    eax,DWORD PTR [rax]
   140040c94:	sbb    al,0x64
   140040c96:	sbb    al,BYTE PTR [rax]
   140040c98:	sbb    al,0x34
   140040c9a:	sbb    BYTE PTR [rax],al
   140040c9c:	sbb    al,0x1
   140040c9e:	(bad)  
   140040c9f:	add    BYTE PTR [rax],dl
   140040ca1:	push   rax
   140040ca2:	add    BYTE PTR [rax],al
   140040ca4:	add    DWORD PTR [rip+0x641d0009],ebx        # 0x1a4210cb3
   140040caa:	pop    rbx
   140040cab:	add    BYTE PTR [rip+0x1d005a34],bl        # 0x15d0466e5
   140040cb1:	add    DWORD PTR [rax+rax*1+0xe],edx
   140040cb5:	loopne 0x140040cc3
   140040cb7:	jo     0x140040cc4
   140040cb9:	push   rax
   140040cba:	add    BYTE PTR [rax],al
   140040cbc:	and    DWORD PTR [rax],ecx
   140040cbe:	add    al,BYTE PTR [rax]
   140040cc0:	or     ah,dh
   140040cc2:	pop    rax
   140040cc3:	add    BYTE PTR [rax-0x46ffff77],al
   140040cc9:	mov    DWORD PTR [rax],eax
   140040ccb:	add    BYTE PTR [rsp+rcx*1+0x210004],ah
   140040cd2:	add    BYTE PTR [rax],al
   140040cd4:	or     BYTE PTR [rcx-0x76470000],0x0
   140040cdb:	add    BYTE PTR [rsp+rcx*1+0x1a010004],ah
   140040ce2:	or     DWORD PTR [rax],eax
   140040ce4:	sbb    ah,BYTE PTR [rbx+rbx*1+0x0]
   140040ce8:	sbb    dh,BYTE PTR [rdx+rbx*1]
   140040ceb:	add    BYTE PTR [rdx],bl
   140040ced:	add    DWORD PTR [rax+rax*1],edx
   140040cf0:	(bad)  
   140040cf1:	lock or al,0x70
   140040cf4:	or     edx,DWORD PTR [rax+0x0]
   140040cf7:	add    BYTE PTR [rcx],ah
   140040cf9:	or     BYTE PTR [rdx],al
   140040cfb:	add    BYTE PTR [rax],cl
   140040cfd:	in     al,0x18
   140040cff:	add    BYTE PTR [rax-0x39ffff7c],dl
   140040d05:	test   BYTE PTR [rax],al
   140040d07:	add    al,ah
   140040d09:	or     al,0x4
   140040d0b:	add    BYTE PTR [rcx],ah
   140040d0d:	add    BYTE PTR [rax],al
   140040d0f:	add    BYTE PTR [rax-0x39ffff7c],dl
   140040d15:	test   BYTE PTR [rax],al
   140040d17:	add    al,ah
   140040d19:	or     al,0x4
   140040d1b:	add    BYTE PTR [rcx],ah
   140040d1d:	add    eax,0xe4050002
   140040d22:	(bad)  
   140040d23:	add    al,al
   140040d25:	mov    dl,0x0
   140040d27:	add    BYTE PTR [rdx],ah
   140040d29:	mov    bl,0x0
   140040d2b:	add    BYTE PTR [rax+0x27],dh
   140040d2e:	add    al,0x0
   140040d30:	and    DWORD PTR [rax],eax
   140040d32:	add    BYTE PTR [rax],al
   140040d34:	shl    BYTE PTR [rdx-0x4cde0000],0x0
   140040d3b:	add    BYTE PTR [rax+0x27],dh
   140040d3e:	add    al,0x0
   140040d40:	add    DWORD PTR [rcx],ebx
   140040d42:	(bad)  
   140040d43:	add    BYTE PTR [rcx],bl
   140040d45:	add    DWORD PTR [rbp+0x0],ebx
   140040d48:	or     ah,al
   140040d4a:	or     al,dl
   140040d4c:	(bad)  
   140040d4d:	xor    BYTE PTR [rip+0xe412150],al        # 0x14e452ea3
   140040d53:	add    BYTE PTR [rcx-0x78],al
   140040d56:	sub    al,BYTE PTR [rax]
   140040d58:	cmp    BYTE PTR [rax+0x2b],bh
   140040d5b:	add    BYTE PTR [rax],dh
   140040d5d:	push   0xfffffffff422002c
   140040d62:	pop    rdx
   140040d63:	add    BYTE PTR [rdx],bl
   140040d65:	(bad)  
   140040d66:	pop    rbx
   140040d67:	add    BYTE PTR [rax],dl
   140040d69:	je     0x140040dc7
   140040d6b:	add    BYTE PTR [rax],cl
   140040d6d:	fs add BYTE PTR fs:[rax-0x74],al
   140040d72:	add    BYTE PTR [rax],al
   140040d74:	or     al,0x8d
   140040d76:	add    BYTE PTR [rax],al
   140040d78:	rex or eax,0x210004
   140040d7e:	(bad)  
   140040d7f:	add    BYTE PTR [rax],al
   140040d81:	mov    BYTE PTR [rdx],ch
   140040d83:	add    BYTE PTR [rax],al
   140040d85:	js     0x140040db2
   140040d87:	add    BYTE PTR [rax],al
   140040d89:	push   0xfffffffff400002c
   140040d8e:	pop    rdx
   140040d8f:	add    BYTE PTR [rax],al
   140040d91:	(bad)  
   140040d92:	pop    rbx
   140040d93:	add    BYTE PTR [rax],al
   140040d95:	je     0x140040df3
   140040d97:	add    BYTE PTR [rax],al
   140040d99:	fs add BYTE PTR fs:[rax-0x74],al
   140040d9e:	add    BYTE PTR [rax],al
   140040da0:	or     al,0x8d
   140040da2:	add    BYTE PTR [rax],al
   140040da4:	rex or eax,0x64010004
   140040daa:	or     eax,DWORD PTR [rax]
   140040dac:	fs in  al,0x4
   140040daf:	add    BYTE PTR [rbp+0x74],bl
   140040db2:	or     eax,DWORD PTR [rax]
   140040db4:	pop    rax
   140040db5:	or     al,BYTE PTR fs:[rax]
   140040db8:	push   rcx
   140040db9:	xor    al,0x9
   140040dbb:	add    BYTE PTR [rax],cl
   140040dbd:	rex.X add al,0xf0
   140040dc0:	add    dl,BYTE PTR [rax+0x0]
   140040dc3:	add    BYTE PTR [rcx],al
   140040dc5:	xor    DWORD PTR [rax+rax*1],eax
   140040dc8:	xor    DWORD PTR [rsi+rax*1+0x0],esi
   140040dcc:	(bad)  
   140040dcd:	xor    al,BYTE PTR [rdx]
   140040dcf:	xor    BYTE PTR [rcx],ah
   140040dd1:	add    eax,0x34050002
   140040dd6:	(bad)  
   140040dd7:	add    BYTE PTR [rax],al
   140040dd9:	mov    cl,0x0
   140040ddb:	add    BYTE PTR [rax],bl
   140040ddd:	mov    cl,0x0
   140040ddf:	add    BYTE PTR [rdx+rsi*1],dl
   140040de2:	add    al,0x0
   140040de4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4090dec
   140040dea:	(bad)  
   140040deb:	add    BYTE PTR [rax],bl
   140040ded:	mov    cl,0x0
   140040def:	add    BYTE PTR [rcx],ch
   140040df1:	mov    cl,0x0
   140040df3:	add    al,dl
   140040df5:	or     eax,0x210004
   140040dfa:	add    BYTE PTR [rax],al
   140040dfc:	sbb    BYTE PTR [rcx-0x4ed70000],dh
   140040e02:	add    BYTE PTR [rax],al
   140040e04:	ror    BYTE PTR [rip+0x210004],1        # 0x140250e0e
   140040e0a:	add    BYTE PTR [rax],al
   140040e0c:	add    BYTE PTR [rcx-0x4ee80000],dh
   140040e12:	add    BYTE PTR [rax],al
   140040e14:	adc    al,0x32
   140040e16:	add    al,0x0
   140040e18:	add    DWORD PTR [rdx],ecx
   140040e1a:	add    al,0x0
   140040e1c:	or     dl,BYTE PTR [rcx+rcx*1+0x0]
   140040e20:	or     dh,BYTE PTR [rdx]
   140040e22:	(bad)  
   140040e23:	(bad)  
   140040e24:	and    DWORD PTR [rdi],ecx
   140040e26:	(bad)  
   140040e27:	add    BYTE PTR [rdi],cl
   140040e29:	in     al,0x8
   140040e2b:	add    BYTE PTR [rdx],cl
   140040e2d:	je     0x140040e36
   140040e2f:	add    BYTE PTR [rip+0x40000634],al        # 0x180041469
   140040e35:	mov    ah,0x0
   140040e37:	add    BYTE PTR [rax-0x4c],ah
   140040e3a:	add    BYTE PTR [rax],al
   140040e3c:	sbb    BYTE PTR [rsi],cl
   140040e3e:	add    al,0x0
   140040e40:	and    DWORD PTR [rax],eax
   140040e42:	add    BYTE PTR [rax],al
   140040e44:	mov    spl,0x0
   140040e47:	add    BYTE PTR [rax-0x4c],ah
   140040e4a:	add    BYTE PTR [rax],al
   140040e4c:	sbb    BYTE PTR [rsi],cl
   140040e4e:	add    al,0x0
   140040e50:	add    DWORD PTR [rip+0x125000a],esp        # 0x141290e60
   140040e56:	movsxd eax,DWORD PTR [rax]
   140040e58:	(bad)  
   140040e59:	lock adc al,0xe0
   140040e5c:	adc    dl,al
   140040e5e:	adc    al,al
   140040e60:	(bad)  
   140040e61:	jo     0x140040e70
   140040e63:	(bad)  
   140040e64:	or     al,0x30
   140040e66:	or     edx,DWORD PTR [rax+0x1]
   140040e69:	adc    al,0xa
   140040e6b:	add    BYTE PTR [rsp+rsi*1],dl
   140040e6e:	adc    BYTE PTR [rax],al
   140040e70:	adc    al,0x72
   140040e72:	adc    al,dh
   140040e74:	(bad)  
   140040e75:	loopne 0x140040e83
   140040e77:	ror    BYTE PTR [rdx],1
   140040e79:	ror    BYTE PTR [rax],0x70
   140040e7c:	(bad)  
   140040e7d:	(bad)  
   140040e7e:	(bad)  
   140040e7f:	push   rax
   140040e80:	add    DWORD PTR [rdx+rcx*1],edx
   140040e83:	add    BYTE PTR [rsp+rsi*1],dl
   140040e86:	(bad)  
   140040e87:	add    BYTE PTR [rdx+rdx*2],dl
   140040e8a:	adc    al,dh
   140040e8c:	(bad)  
   140040e8d:	loopne 0x140040e9b
   140040e8f:	ror    BYTE PTR [rdx],1
   140040e91:	ror    BYTE PTR [rax],0x70
   140040e94:	(bad)  
   140040e95:	(bad)  
   140040e96:	(bad)  
   140040e97:	push   rax
   140040e98:	add    DWORD PTR [rsi+0x9],edi
   140040e9b:	add    BYTE PTR [rsi-0x1c],bh
   140040e9e:	or     al,0x0
   140040ea0:	adc    dl,al
   140040ea2:	or     eax,esi
   140040ea4:	(bad)  
   140040ea5:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x14364131c
   140040eac:	add    dl,BYTE PTR [rax+0x0]
   140040eaf:	add    BYTE PTR [rcx],al
   140040eb1:	and    al,0xb
   140040eb3:	add    BYTE PTR [rsp+rsi*1],ah
   140040eb6:	mov    cl,0x0
   140040eb8:	and    al,0x1
   140040eba:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140040ebb:	add    BYTE PTR [rip+0x11e013f0],dl        # 0x151e422b1
   140040ec1:	ror    BYTE PTR [rdi],1
   140040ec3:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b641b3a
   140040eca:	add    BYTE PTR [rax],al
   140040ecc:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4090ed4
   140040ed2:	(bad)  
   140040ed3:	add    BYTE PTR [rax-0x2effff49],al
   140040ed9:	mov    bh,0x0
   140040edb:	add    BYTE PTR [rax],bl
   140040edd:	cmp    al,0x4
   140040edf:	add    BYTE PTR [rcx],ah
   140040ee1:	add    BYTE PTR [rax],al
   140040ee3:	add    BYTE PTR [rax-0x2effff49],al
   140040ee9:	mov    bh,0x0
   140040eeb:	add    BYTE PTR [rax],bl
   140040eed:	cmp    al,0x4
   140040eef:	add    BYTE PTR [rcx],al
   140040ef1:	(bad)  
   140040ef2:	(bad)  
   140040ef3:	add    BYTE PTR [rsi],cl
   140040ef5:	xor    al,0xb
   140040ef7:	add    BYTE PTR [rsi],cl
   140040ef9:	xor    cl,BYTE PTR [rdx]
   140040efb:	lock or al,ah
   140040efe:	(bad)  
   140040eff:	push   rax
   140040f00:	and    DWORD PTR [rsp+rax*1],ecx
   140040f03:	add    BYTE PTR [rsp+rsi*2],cl
   140040f06:	or     al,BYTE PTR [rax]
   140040f08:	add    eax,0xf0000964
   140040f0d:	mov    cl,0x0
   140040f0f:	add    BYTE PTR [rbx],bl
   140040f11:	mov    dl,0x0
   140040f13:	add    al,dh
   140040f15:	(bad)  
   140040f16:	add    al,0x0
   140040f18:	and    DWORD PTR [rax],eax
   140040f1a:	add    BYTE PTR [rax],al
   140040f1c:	lock mov cl,0x0
   140040f1f:	add    BYTE PTR [rbx],bl
   140040f21:	mov    dl,0x0
   140040f23:	add    al,dh
   140040f25:	(bad)  
   140040f26:	add    al,0x0
   140040f28:	and    DWORD PTR [rax],edx
   140040f2a:	add    al,0x0
   140040f2c:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140040f30:	add    eax,0x40000634
   140040f35:	(bad)  
   140040f36:	add    BYTE PTR [rax],al
   140040f38:	(bad)  
   140040f39:	(bad)  
   140040f3a:	add    BYTE PTR [rax],al
   140040f3c:	in     al,dx
   140040f3d:	xor    al,BYTE PTR [rax+rax*1]
   140040f40:	and    DWORD PTR [rax],eax
   140040f42:	add    al,0x0
   140040f44:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140040f48:	add    BYTE PTR [rsi+rax*1],dh
   140040f4b:	add    BYTE PTR [rax-0x66],al
   140040f4e:	add    BYTE PTR [rax],al
   140040f50:	(bad)  
   140040f51:	(bad)  
   140040f52:	add    BYTE PTR [rax],al
   140040f54:	in     al,dx
   140040f55:	xor    al,BYTE PTR [rax+rax*1]
   140040f58:	and    DWORD PTR [rax],eax
   140040f5a:	add    BYTE PTR [rax],al
   140040f5c:	rex (bad) 
   140040f5e:	add    BYTE PTR [rax],al
   140040f60:	(bad)  
   140040f61:	(bad)  
   140040f62:	add    BYTE PTR [rax],al
   140040f64:	in     al,dx
   140040f65:	xor    al,BYTE PTR [rax+rax*1]
   140040f68:	and    DWORD PTR [rax],edx
   140040f6a:	add    al,0x0
   140040f6c:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140040f70:	add    eax,0x10000634
   140040f75:	cwde   
   140040f76:	add    BYTE PTR [rax],al
   140040f78:	xor    DWORD PTR [rax+0x32ec0000],ebx
   140040f7e:	add    al,0x0
   140040f80:	and    DWORD PTR [rax],eax
   140040f82:	add    al,0x0
   140040f84:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140040f88:	add    BYTE PTR [rsi+rax*1],dh
   140040f8b:	add    BYTE PTR [rax],dl
   140040f8d:	cwde   
   140040f8e:	add    BYTE PTR [rax],al
   140040f90:	xor    DWORD PTR [rax+0x32ec0000],ebx
   140040f96:	add    al,0x0
   140040f98:	and    DWORD PTR [rax],eax
   140040f9a:	add    BYTE PTR [rax],al
   140040f9c:	adc    BYTE PTR [rax-0x67cf0000],bl
   140040fa2:	add    BYTE PTR [rax],al
   140040fa4:	in     al,dx
   140040fa5:	xor    al,BYTE PTR [rax+rax*1]
   140040fa8:	and    DWORD PTR [rax],edx
   140040faa:	add    al,0x0
   140040fac:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140040fb0:	add    eax,0x634
   140040fb5:	xchg   edi,eax
   140040fb6:	add    BYTE PTR [rax],al
   140040fb8:	and    DWORD PTR [rdi+0x32ec0000],edx
   140040fbe:	add    al,0x0
   140040fc0:	and    DWORD PTR [rax],eax
   140040fc2:	add    al,0x0
   140040fc4:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140040fc8:	add    BYTE PTR [rsi+rax*1],dh
   140040fcb:	add    BYTE PTR [rax],al
   140040fcd:	xchg   edi,eax
   140040fce:	add    BYTE PTR [rax],al
   140040fd0:	and    DWORD PTR [rdi+0x32ec0000],edx
   140040fd6:	add    al,0x0
   140040fd8:	and    DWORD PTR [rax],eax
   140040fda:	add    BYTE PTR [rax],al
   140040fdc:	add    BYTE PTR [rdi-0x68df0000],dl
   140040fe2:	add    BYTE PTR [rax],al
   140040fe4:	in     al,dx
   140040fe5:	xor    al,BYTE PTR [rax+rax*1]
   140040fe8:	and    DWORD PTR [rip+0x34050002],eax        # 0x174090ff0
   140040fee:	(bad)  
   140040fef:	add    BYTE PTR [rax-0x4affff64],dl
   140040ff5:	pushf  
   140040ff6:	add    BYTE PTR [rax],al
   140040ff8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040ff9:	or     eax,DWORD PTR [rax+rax*1]
   140040ffc:	and    DWORD PTR [rax],eax
   140040ffe:	add    BYTE PTR [rax],al
   140041000:	nop
   140041001:	pushf  
   140041002:	add    BYTE PTR [rax],al
   140041004:	mov    ch,0x9c
   140041006:	add    BYTE PTR [rax],al
   140041008:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041009:	or     eax,DWORD PTR [rax+rax*1]
   14004100c:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4091014
   140041012:	(bad)  
   140041013:	add    BYTE PTR [rax-0x4f],dh
   140041016:	add    BYTE PTR [rax],al
   140041018:	xchg   DWORD PTR [rcx+0x3c180000],esi
   14004101e:	add    al,0x0
   140041020:	and    DWORD PTR [rax],eax
   140041022:	add    BYTE PTR [rax],al
   140041024:	jo     0x140040fd7
   140041026:	add    BYTE PTR [rax],al
   140041028:	xchg   DWORD PTR [rcx+0x3c180000],esi
   14004102e:	add    al,0x0
   140041030:	and    DWORD PTR [rax],edx
   140041032:	add    al,0x0
   140041034:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140041038:	add    eax,0x30000634
   14004103d:	cdq    
   14004103e:	add    BYTE PTR [rax],al
   140041040:	push   rcx
   140041041:	cdq    
   140041042:	add    BYTE PTR [rax],al
   140041044:	in     al,dx
   140041045:	xor    al,BYTE PTR [rax+rax*1]
   140041048:	and    DWORD PTR [rax],eax
   14004104a:	add    al,0x0
   14004104c:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140041050:	add    BYTE PTR [rsi+rax*1],dh
   140041053:	add    BYTE PTR [rax],dh
   140041055:	cdq    
   140041056:	add    BYTE PTR [rax],al
   140041058:	push   rcx
   140041059:	cdq    
   14004105a:	add    BYTE PTR [rax],al
   14004105c:	in     al,dx
   14004105d:	xor    al,BYTE PTR [rax+rax*1]
   140041060:	and    DWORD PTR [rax],eax
   140041062:	add    BYTE PTR [rax],al
   140041064:	xor    BYTE PTR [rcx-0x66af0000],bl
   14004106a:	add    BYTE PTR [rax],al
   14004106c:	in     al,dx
   14004106d:	xor    al,BYTE PTR [rax+rax*1]
   140041070:	add    DWORD PTR [rcx],ecx
   140041072:	add    eax,DWORD PTR [rax]
   140041074:	or     DWORD PTR [rcx],eax
   140041076:	push   rax
   140041077:	add    BYTE PTR [rdx],al
   140041079:	xor    BYTE PTR [rax],al
   14004107b:	add    BYTE PTR [rcx],ah
   14004107d:	add    eax,0x64050002
   140041082:	(bad)  
   140041083:	add    BYTE PTR [rax-0x47],dl
   140041086:	add    BYTE PTR [rax],al
   140041088:	mov    eax,0x180000ba
   14004108d:	cmp    al,0x4
   14004108f:	add    BYTE PTR [rcx],ah
   140041091:	add    BYTE PTR [rdx],al
   140041093:	add    BYTE PTR [rax],al
   140041095:	fs (bad) 
   140041097:	add    BYTE PTR [rax-0x47],dl
   14004109a:	add    BYTE PTR [rax],al
   14004109c:	mov    eax,0x180000ba
   1400410a1:	cmp    al,0x4
   1400410a3:	add    BYTE PTR [rcx],al
   1400410a5:	loop   0x1400410b5
   1400410a7:	add    dl,ah
   1400410a9:	hlt    
   1400410aa:	or     al,BYTE PTR [rax]
   1400410ac:	ffree  st(4)
   1400410ae:	or     eax,DWORD PTR [rax]
   1400410b0:	fdiv   DWORD PTR [rcx+rdx*1+0x0]
   1400410b4:	shl    BYTE PTR [rax+rdx*1+0x0],1
   1400410b8:	enter  0xf54,0x0
   1400410bc:	ret    
   1400410bd:	xor    al,0xe
   1400410bf:	add    BYTE PTR [rsi],al
   1400410c1:	mov    dl,0x2
   1400410c3:	loopne 0x1400410c6
   1400410c5:	and    cl,BYTE PTR [rbx]
   1400410c7:	xor    eax,0xbe422
   1400410cc:	(bad)  
   1400410cd:	je     0x1400410d9
   1400410cf:	add    BYTE PTR [rdx],bl
   1400410d1:	or     DWORD PTR fs:[rax],eax
   1400410d4:	(bad)  
   1400410d5:	xor    al,0x8
   1400410d7:	add    BYTE PTR [rbx],cl
   1400410d9:	xor    eax,DWORD PTR [rsi]
   1400410db:	push   rdx
   1400410dc:	add    dl,BYTE PTR [rax+0x0]
   1400410df:	add    BYTE PTR [rcx],ah
   1400410e1:	adc    BYTE PTR [rax+rax*1],al
   1400410e4:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   1400410e8:	add    eax,0xd0000634
   1400410ed:	lock add BYTE PTR [rax],al
   1400410f0:	icebp  
   1400410f1:	lock add BYTE PTR [rax],al
   1400410f4:	in     al,dx
   1400410f5:	xor    al,BYTE PTR [rax+rax*1]
   1400410f8:	and    DWORD PTR [rax],eax
   1400410fa:	add    al,0x0
   1400410fc:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140041100:	add    BYTE PTR [rsi+rax*1],dh
   140041103:	add    al,dl
   140041105:	lock add BYTE PTR [rax],al
   140041108:	icebp  
   140041109:	lock add BYTE PTR [rax],al
   14004110c:	in     al,dx
   14004110d:	xor    al,BYTE PTR [rax+rax*1]
   140041110:	and    DWORD PTR [rax],eax
   140041112:	add    BYTE PTR [rax],al
   140041114:	shl    al,1
   140041116:	add    BYTE PTR [rax],al
   140041118:	icebp  
   140041119:	lock add BYTE PTR [rax],al
   14004111c:	in     al,dx
   14004111d:	xor    al,BYTE PTR [rax+rax*1]
   140041120:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4091128
   140041126:	(bad)  
   140041127:	add    BYTE PTR [rax-0xcffff26],al
   14004112d:	fiadd  DWORD PTR [rax]
   14004112f:	add    BYTE PTR [rax],bl
   140041131:	cmp    al,0x4
   140041133:	add    BYTE PTR [rcx],ah
   140041135:	add    BYTE PTR [rax],al
   140041137:	add    BYTE PTR [rax-0xcffff26],al
   14004113d:	fiadd  DWORD PTR [rax]
   14004113f:	add    BYTE PTR [rax],bl
   140041141:	cmp    al,0x4
   140041143:	add    BYTE PTR [rcx],al
   140041145:	(bad)  
   140041146:	add    al,BYTE PTR [rax]
   140041148:	(bad)  
   140041149:	push   rdx
   14004114a:	add    dh,BYTE PTR [rax]
   14004114c:	and    DWORD PTR [rbx],ebx
   14004114e:	or     al,BYTE PTR [rax]
   140041150:	sbb    edx,DWORD PTR [rax+rcx*1+0x0]
   140041154:	(bad)  
   140041155:	hlt    
   140041156:	add    al,0x0
   140041158:	adc    esp,esp
   14004115a:	add    eax,0xa740c00
   14004115f:	add    BYTE PTR [rip+0x20000964],al        # 0x160041ac9
   140041165:	int3   
   140041166:	add    BYTE PTR [rax],al
   140041168:	xor    ecx,esp
   14004116a:	add    BYTE PTR [rax],al
   14004116c:	adc    DWORD PTR [rax+rax*1],r8d
   140041170:	and    DWORD PTR [rax],eax
   140041172:	add    BYTE PTR [rax],al
   140041174:	and    ah,cl
   140041176:	add    BYTE PTR [rax],al
   140041178:	xor    ecx,esp
   14004117a:	add    BYTE PTR [rax],al
   14004117c:	adc    DWORD PTR [rax+rax*1],r8d
   140041180:	and    DWORD PTR [rip+0x54050002],eax        # 0x194091188
   140041186:	(bad)  
   140041187:	add    BYTE PTR [rax],dh
   140041189:	fadd   DWORD PTR [rax]
   14004118b:	add    BYTE PTR [rax+0x700000d9],bh
   140041191:	(bad)  
   140041192:	add    al,0x0
   140041194:	and    DWORD PTR [rax],eax
   140041196:	add    BYTE PTR [rax],al
   140041198:	xor    al,bl
   14004119a:	add    BYTE PTR [rax],al
   14004119c:	mov    eax,0x700000d9
   1400411a1:	(bad)  
   1400411a2:	add    al,0x0
   1400411a4:	add    DWORD PTR [rsp+rax*1],ecx
   1400411a7:	add    BYTE PTR [rdx+rsi*1],cl
   1400411aa:	or     BYTE PTR [rax+0x7],dh
   1400411ad:	(bad)  
   1400411ae:	(bad)  
   1400411af:	push   rax
   1400411b0:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740911b8
   1400411b6:	or     DWORD PTR [rax],eax
   1400411b8:	xor    ah,bh
   1400411ba:	add    BYTE PTR [rax],al
   1400411bc:	lock cld 
   1400411be:	add    BYTE PTR [rax],al
   1400411c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400411c1:	adc    DWORD PTR [rax+rax*1],eax
   1400411c4:	and    DWORD PTR [rax],eax
   1400411c6:	add    al,BYTE PTR [rax]
   1400411c8:	add    BYTE PTR [rcx+rcx*1],dh
   1400411cb:	add    BYTE PTR [rax],dh
   1400411cd:	cld    
   1400411ce:	add    BYTE PTR [rax],al
   1400411d0:	lock cld 
   1400411d2:	add    BYTE PTR [rax],al
   1400411d4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400411d5:	adc    DWORD PTR [rax+rax*1],eax
   1400411d8:	and    DWORD PTR [rax],eax
   1400411da:	add    BYTE PTR [rax],al
   1400411dc:	xor    ah,bh
   1400411de:	add    BYTE PTR [rax],al
   1400411e0:	lock cld 
   1400411e2:	add    BYTE PTR [rax],al
   1400411e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400411e5:	adc    DWORD PTR [rax+rax*1],eax
   1400411e8:	add    DWORD PTR [rsi],eax
   1400411ea:	add    al,BYTE PTR [rax]
   1400411ec:	(bad)  
   1400411ed:	push   rdx
   1400411ee:	add    dh,BYTE PTR [rax+0x21]
   1400411f1:	add    eax,0x34050002
   1400411f6:	or     DWORD PTR [rax],eax
   1400411f8:	mov    al,0xdd
   1400411fa:	add    BYTE PTR [rax],al
   1400411fc:	add    ebx,esi
   1400411fe:	add    BYTE PTR [rax],al
   140041200:	call   0x161041616
   140041205:	or     BYTE PTR [rax+rax*1],al
   140041208:	or     BYTE PTR [rax+0x2],ch
   14004120b:	add    BYTE PTR [rax],al
   14004120d:	xor    al,0x9
   14004120f:	add    BYTE PTR [rax+0x30000dd],dh
   140041215:	fiadd  WORD PTR [rax]
   140041217:	add    al,ch
   140041219:	adc    DWORD PTR [rax+rax*1],eax
   14004121c:	and    DWORD PTR [rax],eax
   14004121e:	add    al,BYTE PTR [rax]
   140041220:	add    BYTE PTR [rcx+rcx*1],dh
   140041223:	add    BYTE PTR [rax+0x30000dd],dh
   140041229:	fiadd  WORD PTR [rax]
   14004122b:	add    al,ch
   14004122d:	adc    DWORD PTR [rax+rax*1],eax
   140041230:	and    DWORD PTR [rax],eax
   140041232:	add    BYTE PTR [rax],al
   140041234:	mov    al,0xdd
   140041236:	add    BYTE PTR [rax],al
   140041238:	add    ebx,esi
   14004123a:	add    BYTE PTR [rax],al
   14004123c:	call   0x141041652
   140041241:	or     al,BYTE PTR [rax+rax*1]
   140041244:	or     dh,BYTE PTR [rsi+rcx*1]
   140041247:	add    BYTE PTR [rdx],cl
   140041249:	xchg   edx,eax
   14004124a:	(bad)  
   14004124b:	jo     0x14004126e
   14004124d:	adc    al,0x4
   14004124f:	add    BYTE PTR [rsp+riz*2],dl
   140041252:	or     eax,0xc540500
   140041257:	add    BYTE PTR [rax+0x3],dl
   14004125a:	add    DWORD PTR [rax],eax
   14004125c:	mov    edx,0x40000103
   140041261:	adc    al,BYTE PTR [rax+rax*1]
   140041264:	and    DWORD PTR [rax],eax
   140041266:	add    BYTE PTR [rax],al
   140041268:	push   rax
   140041269:	add    eax,DWORD PTR [rcx]
   14004126b:	add    BYTE PTR [rdx+0x40000103],bh
   140041271:	adc    al,BYTE PTR [rax+rax*1]
   140041274:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a809127c
   14004127a:	add    al,0x0
   14004127c:	ins    DWORD PTR es:[rdi],dx
   14004127d:	add    al,0x1
   14004127f:	add    dh,dh
   140041281:	add    al,0x1
   140041283:	add    BYTE PTR [rdx+rdx*1+0x4],ah
   140041287:	add    BYTE PTR [rcx],ah
   140041289:	add    BYTE PTR [rax],al
   14004128b:	add    BYTE PTR [rbp+0x4],ch
   14004128e:	add    DWORD PTR [rax],eax
   140041290:	test   BYTE PTR [rcx+rax*1],0x0
   140041294:	adc    al,BYTE PTR fs:[rax+rax*1]
   140041298:	add    DWORD PTR [rdx],ecx
   14004129a:	add    al,0x0
   14004129c:	or     dh,BYTE PTR [rax+rcx*1]
   14004129f:	add    BYTE PTR [rdx],cl
   1400412a1:	push   rdx
   1400412a2:	(bad)  
   1400412a3:	jo     0x1400412c6
   1400412a5:	add    eax,0x34050002
   1400412aa:	(bad)  
   1400412ab:	add    BYTE PTR [rax-0x5afffeeb],dl
   1400412b1:	adc    eax,0x32ec0001
   1400412b6:	add    al,0x0
   1400412b8:	and    DWORD PTR [rax],eax
   1400412ba:	add    al,BYTE PTR [rax]
   1400412bc:	add    BYTE PTR [rsi+rax*1],dh
   1400412bf:	add    BYTE PTR [rax-0x5afffeeb],dl
   1400412c5:	adc    eax,0x32ec0001
   1400412ca:	add    al,0x0
   1400412cc:	and    DWORD PTR [rax],eax
   1400412ce:	add    BYTE PTR [rax],al
   1400412d0:	nop
   1400412d1:	adc    eax,0x15a50001
   1400412d6:	add    DWORD PTR [rax],eax
   1400412d8:	in     al,dx
   1400412d9:	xor    al,BYTE PTR [rax+rax*1]
   1400412dc:	add    DWORD PTR [rcx],ebx
   1400412de:	or     BYTE PTR [rax],al
   1400412e0:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   1400412e4:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   1400412e8:	sbb    DWORD PTR [rsi+rax*1],esi
   1400412eb:	add    BYTE PTR [rcx],bl
   1400412ed:	xor    dl,BYTE PTR [rip+0x8170170]        # 0x1481b1463
   1400412f3:	add    BYTE PTR [rdi],dl
   1400412f5:	push   rsp
   1400412f6:	or     DWORD PTR [rax],eax
   1400412f8:	(bad)  
   1400412f9:	xor    al,0x8
   1400412fb:	add    BYTE PTR [rdi],dl
   1400412fd:	xor    dl,BYTE PTR [rbx]
   1400412ff:	loopne 0x140041312
   140041301:	jo     0x140041313
   140041303:	(bad)  
   140041304:	add    DWORD PTR [rip+0x64150006],edx        # 0x1a4191310
   14004130a:	or     DWORD PTR [rax],eax
   14004130c:	adc    eax,0x15000734
   140041311:	xor    dl,BYTE PTR [rcx]
   140041313:	loopne 0x140041336
   140041315:	add    eax,0x74050002
   14004131a:	(bad)  
   14004131b:	add    BYTE PTR [rax+0x10],al
   14004131e:	add    DWORD PTR [rax],eax
   140041320:	cdq    
   140041321:	adc    BYTE PTR [rcx],al
   140041323:	add    BYTE PTR [rbx+rdx*1],al
   140041326:	add    al,0x0
   140041328:	and    DWORD PTR [rax],eax
   14004132a:	add    al,BYTE PTR [rax]
   14004132c:	add    BYTE PTR [rsi+rax*1+0x0],dh
   140041330:	adc    BYTE PTR [rcx],al
   140041333:	add    BYTE PTR [rcx+0x4000110],bl
   140041339:	adc    eax,DWORD PTR [rax+rax*1]
   14004133c:	add    DWORD PTR [rsi+0x6],edx
   14004133f:	add    BYTE PTR [rsi+0x74],dl
   140041342:	(bad)  
   140041343:	add    BYTE PTR [rdx],cl
   140041345:	xor    al,0x7
   140041347:	add    BYTE PTR [rdx],cl
   140041349:	xor    al,BYTE PTR [rsi]
   14004134b:	(bad)  
   14004134c:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4091354
   140041352:	(bad)  
   140041353:	add    al,ah
   140041355:	stc    
   140041356:	add    BYTE PTR [rax],al
   140041358:	sbb    bh,dl
   14004135a:	add    BYTE PTR [rax],al
   14004135c:	cwde   
   14004135d:	or     BYTE PTR [rax+rax*1],al
   140041360:	and    DWORD PTR [rax],eax
   140041362:	add    BYTE PTR [rax],al
   140041364:	loopne 0x14004135f
   140041366:	add    BYTE PTR [rax],al
   140041368:	sbb    bh,dl
   14004136a:	add    BYTE PTR [rax],al
   14004136c:	cwde   
   14004136d:	or     BYTE PTR [rax+rax*1],al
   140041370:	add    DWORD PTR [rcx],ebx
   140041372:	or     BYTE PTR [rax],al
   140041374:	sbb    DWORD PTR [rbx+rcx*1+0x0],esp
   140041378:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   14004137c:	sbb    DWORD PTR [rax+rcx*1],esi
   14004137f:	add    BYTE PTR [rcx],bl
   140041381:	push   rdx
   140041382:	adc    eax,0x40a2170
   140041387:	add    BYTE PTR [rdx],cl
   140041389:	je     0x140041392
   14004138b:	add    BYTE PTR [rip+0xffffffffc0000664],al        # 0x1000419f5
   140041391:	(bad)  
   140041392:	add    BYTE PTR [rax],al
   140041394:	and    bh,cl
   140041396:	add    BYTE PTR [rax],al
   140041398:	cwde   
   140041399:	or     BYTE PTR [rax+rax*1],al
   14004139c:	and    DWORD PTR [rax],eax
   14004139e:	add    al,BYTE PTR [rax]
   1400413a0:	add    BYTE PTR [rdi+rax*1+0x0],dh
   1400413a4:	ror    dh,0x0
   1400413a7:	add    BYTE PTR [rax],ah
   1400413a9:	iret   
   1400413aa:	add    BYTE PTR [rax],al
   1400413ac:	cwde   
   1400413ad:	or     BYTE PTR [rax+rax*1],al
   1400413b0:	and    DWORD PTR [rax],eax
   1400413b2:	add    BYTE PTR [rax],al
   1400413b4:	ror    dh,0x0
   1400413b7:	add    BYTE PTR [rax],ah
   1400413b9:	iret   
   1400413ba:	add    BYTE PTR [rax],al
   1400413bc:	cwde   
   1400413bd:	or     BYTE PTR [rax+rax*1],al
   1400413c0:	add    DWORD PTR [rax+rcx*1],edx
   1400413c3:	add    BYTE PTR [rsp+riz*2],dl
   1400413c6:	or     DWORD PTR [rax],eax
   1400413c8:	adc    al,0x54
   1400413ca:	or     BYTE PTR [rax],al
   1400413cc:	adc    al,0x34
   1400413ce:	(bad)  
   1400413cf:	add    BYTE PTR [rdx+rsi*1],dl
   1400413d2:	adc    BYTE PTR [rax+0x21],dh
   1400413d5:	add    eax,0xe4050002
   1400413da:	(bad)  
   1400413db:	add    BYTE PTR [rax-0x46ffff19],dl
   1400413e1:	out    0x0,eax
   1400413e3:	add    al,al
   1400413e5:	adc    eax,DWORD PTR [rax+rax*1]
   1400413e8:	and    DWORD PTR [rax],eax
   1400413ea:	add    BYTE PTR [rax],al
   1400413ec:	nop
   1400413ed:	out    0x0,eax
   1400413ef:	add    BYTE PTR [rcx-0x3fffff19],bh
   1400413f5:	adc    eax,DWORD PTR [rax+rax*1]
   1400413f8:	add    DWORD PTR [rbx+0xd],esi
   1400413fb:	add    BYTE PTR [rbx-0x2c],dh
   1400413fe:	add    al,0x0
   140041400:	imul   eax,esp,0xd
   140041403:	add    BYTE PTR [rsi+0x54],ah
   140041406:	or     al,0x0
   140041408:	(bad)  
   140041409:	xor    al,0xa
   14004140b:	add    BYTE PTR [rbx],cl
   14004140d:	rex.X (bad) 
   14004140f:	lock add eax,0x27003e0
   140041415:	(bad)  
   140041416:	add    BYTE PTR [rax],al
   140041418:	add    DWORD PTR [rdi],ecx
   14004141a:	add    al,0x0
   14004141c:	andps  xmm1,XMMWORD PTR [rax]
   14004141f:	add    BYTE PTR [rdi],cl
   140041421:	xor    cl,BYTE PTR [rbx]
   140041423:	(bad)  
   140041424:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b409142c
   14004142a:	(bad)  
   14004142b:	add    BYTE PTR [rax-0x40ffff1a],dh
   140041431:	out    0x0,al
   140041433:	add    BYTE PTR [rax],bl
   140041435:	adc    al,0x4
   140041437:	add    BYTE PTR [rcx],ah
   140041439:	add    eax,0x34050002
   14004143e:	(bad)  
   14004143f:	add    BYTE PTR [rdi-0x2dffff1a],bh
   140041445:	out    0x0,al
   140041447:	add    BYTE PTR [rsp+rdx*1],ah
   14004144a:	add    al,0x0
   14004144c:	and    DWORD PTR [rax],eax
   14004144e:	add    BYTE PTR [rax],al
   140041450:	mov    edi,0xd20000e6
   140041455:	out    0x0,al
   140041457:	add    BYTE PTR [rsp+rdx*1],ah
   14004145a:	add    al,0x0
   14004145c:	and    DWORD PTR [rax],eax
   14004145e:	add    BYTE PTR [rax],al
   140041460:	mov    al,0xe6
   140041462:	add    BYTE PTR [rax],al
   140041464:	mov    edi,0x180000e6
   140041469:	adc    al,0x4
   14004146b:	add    BYTE PTR [rcx],al
   14004146d:	(bad)  
   14004146e:	add    eax,0xa820e00
   140041473:	ror    BYTE PTR [rax],0x70
   140041476:	(bad)  
   140041477:	(bad)  
   140041478:	(bad)  
   140041479:	push   rax
   14004147a:	add    BYTE PTR [rax],al
   14004147c:	and    DWORD PTR [rdi],edx
   14004147e:	or     BYTE PTR [rax],al
   140041480:	(bad)  
   140041481:	hlt    
   140041482:	or     BYTE PTR [rax],al
   140041484:	adc    ah,ah
   140041486:	adc    DWORD PTR [rax],eax
   140041488:	or     dl,ah
   14004148a:	sldt   WORD PTR [rip+0xffffffffe0000e34]        # 0x1200422c5
   140041491:	rol    DWORD PTR [rax],1
   140041493:	add    BYTE PTR [rdx+rdx*8],cl
   140041496:	add    BYTE PTR [rax],al
   140041498:	ins    BYTE PTR es:[rdi],dx
   140041499:	adc    al,0x4
   14004149b:	add    BYTE PTR [rcx],ah
   14004149d:	add    BYTE PTR [rax+rax*1],al
   1400414a0:	add    ah,dh
   1400414a2:	or     BYTE PTR [rax],al
   1400414a4:	add    ah,dl
   1400414a6:	verr   ax
   1400414a9:	rol    DWORD PTR [rax],1
   1400414ab:	add    BYTE PTR [rdx+rdx*8],cl
   1400414ae:	add    BYTE PTR [rax],al
   1400414b0:	ins    BYTE PTR es:[rdi],dx
   1400414b1:	adc    al,0x4
   1400414b3:	add    BYTE PTR [rcx],al
   1400414b5:	xor    al,0x9
   1400414b7:	add    BYTE PTR [rsp+rsi*8],dh
   1400414ba:	(bad)  
   1400414bb:	add    BYTE PTR [rdi],ch
   1400414bd:	(bad)  
   1400414be:	(bad)  
   1400414bf:	add    BYTE PTR [rbx],cl
   1400414c1:	(bad)  
   1400414c2:	(bad)  
   1400414c3:	loopne 0x1400414ca
   1400414c5:	rol    BYTE PTR [rbx],1
   1400414c7:	jo     0x1400414cb
   1400414c9:	(bad)  
   1400414ca:	add    BYTE PTR [rax],al
   1400414cc:	and    DWORD PTR [rsp+rax*1],edx
   1400414cf:	add    BYTE PTR [rsp+rdx*2],dl
   1400414d2:	or     eax,0xc340500
   1400414d7:	add    BYTE PTR [rax+0x1f0000d3],dh
   1400414dd:	(bad)  
   1400414de:	add    BYTE PTR [rax],al
   1400414e0:	mov    ah,0x14
   1400414e2:	add    al,0x0
   1400414e4:	and    DWORD PTR [rax],eax
   1400414e6:	add    BYTE PTR [rax],al
   1400414e8:	mov    al,0xd3
   1400414ea:	add    BYTE PTR [rax],al
   1400414ec:	(bad)  
   1400414ed:	(bad)  
   1400414ee:	add    BYTE PTR [rax],al
   1400414f0:	mov    ah,0x14
   1400414f2:	add    al,0x0
   1400414f4:	add    DWORD PTR [rdi],esi
   1400414f6:	or     BYTE PTR [rax],al
   1400414f8:	(bad)  
   1400414f9:	je     0x140041502
   1400414fb:	add    BYTE PTR [rdx],dh
   1400414fd:	fs (bad) 
   1400414ff:	add    BYTE PTR [rdx],cl
   140041501:	xor    al,0x8
   140041503:	add    BYTE PTR [rdx],cl
   140041505:	xor    al,BYTE PTR [rsi]
   140041507:	push   rax
   140041508:	add    DWORD PTR [rax],ebx
   14004150a:	or     al,BYTE PTR [rax]
   14004150c:	sbb    BYTE PTR [rsi+rcx*1+0x0],ah
   140041510:	sbb    BYTE PTR [rbp+rcx*1+0x0],dl
   140041514:	sbb    BYTE PTR [rsp+rcx*1],dh
   140041517:	add    BYTE PTR [rax],bl
   140041519:	jb     0x14004152f
   14004151b:	lock adc ah,al
   14004151e:	adc    BYTE PTR [rax+0x1],dh
   140041521:	(bad)  
   140041522:	add    al,BYTE PTR [rax]
   140041524:	(bad)  
   140041525:	xchg   edx,eax
   140041526:	add    dh,BYTE PTR [rax]
   140041528:	add    DWORD PTR [rdx],ecx
   14004152a:	add    al,0x0
   14004152c:	or     dh,BYTE PTR [rax+rcx*1]
   14004152f:	add    BYTE PTR [rdx],cl
   140041531:	xor    al,BYTE PTR [rsi]
   140041533:	push   rax
   140041534:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b409153c
   14004153a:	(bad)  
   14004153b:	add    al,dl
   14004153d:	(bad)  
   14004153e:	add    DWORD PTR [rax],eax
   140041540:	fimul  DWORD PTR [rsi]
   140041542:	add    DWORD PTR [rax],eax
   140041544:	sub    BYTE PTR [rip+0x5210004],dl        # 0x14525154e
   14004154a:	add    al,BYTE PTR [rax]
   14004154c:	add    eax,0xda000664
   140041551:	(bad)  
   140041552:	add    DWORD PTR [rax],eax
   140041554:	sub    DWORD PTR [rdi],ecx
   140041556:	add    DWORD PTR [rax],eax
   140041558:	xor    al,0x15
   14004155a:	add    al,0x0
   14004155c:	and    DWORD PTR [rax],eax
   14004155e:	add    BYTE PTR [rax],al
   140041560:	fimul  DWORD PTR [rsi]
   140041562:	add    DWORD PTR [rax],eax
   140041564:	sub    DWORD PTR [rdi],ecx
   140041566:	add    DWORD PTR [rax],eax
   140041568:	xor    al,0x15
   14004156a:	add    al,0x0
   14004156c:	and    DWORD PTR [rax],eax
   14004156e:	add    BYTE PTR [rax],al
   140041570:	ror    BYTE PTR [rsi],1
   140041572:	add    DWORD PTR [rax],eax
   140041574:	fimul  DWORD PTR [rsi]
   140041576:	add    DWORD PTR [rax],eax
   140041578:	sub    BYTE PTR [rip+0xa010004],dl        # 0x14a051582
   14004157e:	add    al,0x0
   140041580:	or     dh,BYTE PTR [rsp+rcx*1]
   140041583:	add    BYTE PTR [rdx],cl
   140041585:	xchg   edx,eax
   140041586:	(bad)  
   140041587:	jo     0x1400415aa
   140041589:	(bad)  
   14004158a:	or     BYTE PTR [rax],al
   14004158c:	(bad)  
   14004158d:	in     al,0x0
   14004158f:	add    BYTE PTR [rdx],dl
   140041591:	je     0x140041597
   140041593:	add    BYTE PTR [rdx],cl
   140041595:	add    eax,DWORD PTR fs:[rax]
   140041598:	add    eax,0x234
   14004159d:	loopne 0x14004159f
   14004159f:	add    BYTE PTR [rdx],dl
   1400415a1:	loopne 0x1400415a3
   1400415a3:	add    BYTE PTR [rax],al
   1400415a5:	sub    eax,DWORD PTR [rax+rax*1]
   1400415a8:	and    DWORD PTR [rax],eax
   1400415aa:	add    BYTE PTR [rax],al
   1400415ac:	add    al,ah
   1400415ae:	add    BYTE PTR [rax],al
   1400415b0:	adc    ah,al
   1400415b2:	add    BYTE PTR [rax],al
   1400415b4:	add    BYTE PTR [rbx],ch
   1400415b6:	add    al,0x0
   1400415b8:	and    DWORD PTR [rdx+rax*1],eax
   1400415bb:	add    BYTE PTR [rsp+rsi*1],al
   1400415be:	add    BYTE PTR [rax],al
   1400415c0:	adc    BYTE PTR [rcx],0x1
   1400415c3:	add    ch,dl
   1400415c5:	adc    DWORD PTR [rcx],eax
   1400415c7:	add    BYTE PTR [rax],al
   1400415c9:	sub    eax,DWORD PTR [rax+rax*1]
   1400415cc:	and    DWORD PTR [rax],eax
   1400415ce:	add    BYTE PTR [rax],al
   1400415d0:	adc    BYTE PTR [rcx],0x1
   1400415d3:	add    ch,dl
   1400415d5:	adc    DWORD PTR [rcx],eax
   1400415d7:	add    BYTE PTR [rax],al
   1400415d9:	sub    eax,DWORD PTR [rax+rax*1]
   1400415dc:	and    DWORD PTR [rdx+rax*1],eax
   1400415df:	add    BYTE PTR [rsp+rsi*1],al
   1400415e2:	add    BYTE PTR [rax],al
   1400415e4:	mov    al,0x12
   1400415e6:	add    DWORD PTR [rax],eax
   1400415e8:	add    al,0x13
   1400415ea:	add    DWORD PTR [rax],eax
   1400415ec:	add    BYTE PTR [rbx],ch
   1400415ee:	add    al,0x0
   1400415f0:	and    DWORD PTR [rax],eax
   1400415f2:	add    BYTE PTR [rax],al
   1400415f4:	mov    al,0x12
   1400415f6:	add    DWORD PTR [rax],eax
   1400415f8:	add    al,0x13
   1400415fa:	add    DWORD PTR [rax],eax
   1400415fc:	add    BYTE PTR [rbx],ch
   1400415fe:	add    al,0x0
   140041600:	add    DWORD PTR [rdx],ecx
   140041602:	add    al,0x0
   140041604:	or     ah,BYTE PTR [rax+rcx*1+0x0]
   140041608:	or     dh,BYTE PTR [rdx]
   14004160a:	(bad)  
   14004160b:	jo     0x14004162e
   14004160d:	or     al,0x4
   14004160f:	add    BYTE PTR [rsp+rsi*1],cl
   140041612:	(bad)  
   140041613:	add    BYTE PTR [rip+0x754],al        # 0x140041d6d
   140041619:	cmc    
   14004161a:	add    BYTE PTR [rax],al
   14004161c:	sbb    dh,ch
   14004161e:	add    BYTE PTR [rax],al
   140041620:	add    BYTE PTR [rsi],dl
   140041622:	add    al,0x0
   140041624:	and    DWORD PTR [rax],eax
   140041626:	add    BYTE PTR [rax],al
   140041628:	add    ch,dh
   14004162a:	add    BYTE PTR [rax],al
   14004162c:	sbb    dh,ch
   14004162e:	add    BYTE PTR [rax],al
   140041630:	add    BYTE PTR [rsi],dl
   140041632:	add    al,0x0
   140041634:	add    DWORD PTR [rdi],ecx
   140041636:	add    al,0x0
   140041638:	sysenter 
   14004163a:	or     BYTE PTR [rax],al
   14004163c:	rdmsr  
   14004163e:	or     esi,DWORD PTR [rax+0x21]
   140041641:	add    eax,0x64050002
   140041646:	(bad)  
   140041647:	add    al,ah
   140041649:	icebp  
   14004164a:	add    BYTE PTR [rax],al
   14004164c:	or     dl,dh
   14004164e:	add    BYTE PTR [rax],al
   140041650:	xor    al,0x16
   140041652:	add    al,0x0
   140041654:	and    DWORD PTR [rax],eax
   140041656:	add    BYTE PTR [rax],al
   140041658:	loopne 0x14004164b
   14004165a:	add    BYTE PTR [rax],al
   14004165c:	or     dl,dh
   14004165e:	add    BYTE PTR [rax],al
   140041660:	xor    al,0x16
   140041662:	add    al,0x0
   140041664:	add    DWORD PTR [rax*1+0x8420c00],ecx
   14004166b:	lock (bad) 
   14004166d:	loopne 0x140041673
   14004166f:	rol    BYTE PTR [rdx],1
   140041671:	push   rax
   140041672:	add    BYTE PTR [rax],al
   140041674:	and    DWORD PTR [rcx],ebx
   140041676:	(bad)  
   140041677:	add    BYTE PTR [rcx],bl
   140041679:	je     0x14004167f
   14004167b:	add    BYTE PTR [rcx],dl
   14004167d:	or     eax,DWORD PTR fs:[rax]
   140041680:	add    eax,0xa0000a34
   140041685:	retf   0x0
   140041688:	std    
   140041689:	retf   0x0
   14004168c:	fs (bad) 
   14004168e:	add    al,0x0
   140041690:	and    DWORD PTR [rax],eax
   140041692:	add    BYTE PTR [rax],al
   140041694:	movabs al,ds:0x640000cafd0000ca
   14004169d:	(bad)  
   14004169e:	add    al,0x0
   1400416a0:	add    DWORD PTR [rcx],esp
   1400416a2:	or     esp,DWORD PTR [rip+0xb7421]        # 0x1400f8ac9
   1400416a8:	sbb    ah,BYTE PTR [rcx+rcx*1+0x0]
   1400416ac:	adc    esi,DWORD PTR [rax+rcx*1]
   1400416af:	add    BYTE PTR [rdi],cl
   1400416b1:	and    ecx,DWORD PTR [rdx]
   1400416b3:	xor    al,BYTE PTR [rsi]
   1400416b5:	lock add al,0xe0
   1400416b8:	add    dl,BYTE PTR [rax+0x0]
   1400416bb:	add    BYTE PTR [rcx],ah
   1400416bd:	add    eax,0x64050002
   1400416c2:	(bad)  
   1400416c3:	add    BYTE PTR [rax-0x25],al
   1400416c6:	add    BYTE PTR [rax],al
   1400416c8:	mov    ebx,0x180000db
   1400416cd:	cmp    al,0x4
   1400416cf:	add    BYTE PTR [rcx],ah
   1400416d1:	add    BYTE PTR [rax],al
   1400416d3:	add    BYTE PTR [rax-0x25],al
   1400416d6:	add    BYTE PTR [rax],al
   1400416d8:	mov    ebx,0x180000db
   1400416dd:	cmp    al,0x4
   1400416df:	add    BYTE PTR [rcx],ah
   1400416e1:	add    eax,0xe4050002
   1400416e6:	(bad)  
   1400416e7:	add    al,ah
   1400416e9:	in     eax,0x0
   1400416eb:	add    BYTE PTR [rdx],dh
   1400416ed:	out    0x0,al
   1400416ef:	add    al,al
   1400416f1:	adc    eax,DWORD PTR [rax+rax*1]
   1400416f4:	and    DWORD PTR [rax],eax
   1400416f6:	add    BYTE PTR [rax],al
   1400416f8:	loopne 0x1400416df
   1400416fa:	add    BYTE PTR [rax],al
   1400416fc:	xor    ah,dh
   1400416fe:	add    BYTE PTR [rax],al
   140041700:	rcl    BYTE PTR [rbx],0x4
   140041703:	add    BYTE PTR [rcx],al
   140041705:	adc    al,BYTE PTR [rsi]
   140041707:	add    BYTE PTR [rdx],dl
   140041709:	xor    al,0xb
   14004170b:	add    BYTE PTR [rdx],dl
   14004170d:	xor    cl,BYTE PTR [rsi]
   14004170f:	lock or al,0x60
   140041712:	or     edx,DWORD PTR [rax+0x21]
   140041715:	or     al,BYTE PTR [rax+rax*1]
   140041718:	or     ah,ah
   14004171a:	or     DWORD PTR [rax],eax
   14004171c:	add    eax,0xa0000874
   140041721:	jrcxz  0x140041723
   140041723:	add    al,ch
   140041725:	jrcxz  0x140041727
   140041727:	add    BYTE PTR [rdi+rdx*1],al
   14004172a:	add    al,0x0
   14004172c:	and    DWORD PTR [rax],eax
   14004172e:	add    BYTE PTR [rax],al
   140041730:	movabs al,ds:0x40000e3e80000e3
   140041739:	(bad)  
   14004173a:	add    al,0x0
   14004173c:	and    DWORD PTR [rax],eax
   14004173e:	add    al,0x0
   140041740:	add    ah,ah
   140041742:	or     DWORD PTR [rax],eax
   140041744:	add    BYTE PTR [rax+rcx*1+0x0],dh
   140041748:	movabs al,ds:0x40000e3e80000e3
   140041751:	(bad)  
   140041752:	add    al,0x0
   140041754:	and    DWORD PTR [rax],eax
   140041756:	add    al,BYTE PTR [rax]
   140041758:	add    ah,ah
   14004175a:	or     DWORD PTR [rax],eax
   14004175c:	movabs al,ds:0x40000e3e80000e3
   140041765:	(bad)  
   140041766:	add    al,0x0
   140041768:	add    DWORD PTR [rbx],edx
   14004176a:	or     BYTE PTR [rax],al
   14004176c:	adc    edx,DWORD PTR [rbx+rcx*1+0x0]
   140041770:	adc    esi,DWORD PTR [rdx+rcx*1]
   140041773:	add    BYTE PTR [rbx],dl
   140041775:	xor    cl,BYTE PTR [rdi]
   140041777:	lock or eax,0x21600bc0
   14004177d:	or     al,BYTE PTR [rax+rax*1]
   140041780:	or     ah,ah
   140041782:	or     DWORD PTR [rax],eax
   140041784:	add    eax,0xb0000874
   140041789:	(bad)  
   14004178a:	add    BYTE PTR [rax],al
   14004178c:	xlat   BYTE PTR ds:[rbx]
   14004178d:	(bad)  
   14004178e:	add    BYTE PTR [rax],al
   140041790:	push   0x21000417
   140041795:	add    BYTE PTR [rax],al
   140041797:	add    BYTE PTR [rax-0x28ffff2b],dh
   14004179d:	(bad)  
   14004179e:	add    BYTE PTR [rax],al
   1400417a0:	push   0x1000417
   1400417a5:	(bad)  
   1400417a6:	or     al,BYTE PTR [rax]
   1400417a8:	(bad)  
   1400417a9:	push   rsp
   1400417aa:	or     al,0x0
   1400417ac:	(bad)  
   1400417ad:	xor    al,0xb
   1400417af:	add    BYTE PTR [rsi],dl
   1400417b1:	xor    dl,BYTE PTR [rdx]
   1400417b3:	lock adc al,ah
   1400417b6:	(bad)  
   1400417b7:	ror    BYTE PTR [rax+rsi*2],1
   1400417ba:	or     esp,DWORD PTR [rax+0x21]
   1400417bd:	add    eax,0xc4050002
   1400417c2:	or     al,BYTE PTR [rax]
   1400417c4:	adc    dh,0x0
   1400417c7:	add    BYTE PTR [rax-0x29],al
   1400417ca:	add    BYTE PTR [rax],al
   1400417cc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400417cd:	(bad)  
   1400417ce:	add    al,0x0
   1400417d0:	and    DWORD PTR [rax],eax
   1400417d2:	add    BYTE PTR [rax],al
   1400417d4:	adc    dh,0x0
   1400417d7:	add    BYTE PTR [rax-0x29],al
   1400417da:	add    BYTE PTR [rax],al
   1400417dc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400417dd:	(bad)  
   1400417de:	add    al,0x0
   1400417e0:	add    DWORD PTR [rax],edx
   1400417e2:	(bad)  
   1400417e3:	add    BYTE PTR [rax],dl
   1400417e5:	je     0x1400417f0
   1400417e7:	add    BYTE PTR [rax],dl
   1400417e9:	or     BYTE PTR fs:[rax],al
   1400417ec:	adc    BYTE PTR [rdx],dh
   1400417ee:	or     al,0xe0
   1400417f0:	and    DWORD PTR [rdx],ecx
   1400417f2:	add    al,0x0
   1400417f4:	or     dl,BYTE PTR [rdi+rax*1+0x0]
   1400417f8:	add    eax,0x50000634
   1400417fd:	sti    
   1400417fe:	add    BYTE PTR [rax],al
   140041800:	jle    0x1400417fd
   140041802:	add    BYTE PTR [rax],al
   140041804:	loopne 0x14004181d
   140041806:	add    al,0x0
   140041808:	and    DWORD PTR [rax],eax
   14004180a:	add    al,0x0
   14004180c:	add    BYTE PTR [rdi+rax*1+0x0],dl
   140041810:	add    BYTE PTR [rsi+rax*1],dh
   140041813:	add    BYTE PTR [rax-0x5],dl
   140041816:	add    BYTE PTR [rax],al
   140041818:	jle    0x140041815
   14004181a:	add    BYTE PTR [rax],al
   14004181c:	loopne 0x140041835
   14004181e:	add    al,0x0
   140041820:	and    DWORD PTR [rax],eax
   140041822:	add    BYTE PTR [rax],al
   140041824:	push   rax
   140041825:	sti    
   140041826:	add    BYTE PTR [rax],al
   140041828:	jle    0x140041825
   14004182a:	add    BYTE PTR [rax],al
   14004182c:	loopne 0x140041845
   14004182e:	add    al,0x0
   140041830:	add    DWORD PTR [rdi+0x8],esp
   140041833:	add    BYTE PTR [rdi+0x54],ah
   140041836:	(bad)  
   140041837:	add    BYTE PTR [rdi],cl
   140041839:	or     BYTE PTR fs:[rax],al
   14004183c:	sysenter 
   14004183e:	(bad)  
   14004183f:	add    BYTE PTR [rdi],cl
   140041841:	xor    cl,BYTE PTR [rbx]
   140041843:	jo     0x140041866
   140041845:	add    eax,0x34050002
   14004184a:	(bad)  
   14004184b:	add    BYTE PTR [rax-0xc],dl
   14004184e:	add    BYTE PTR [rax],al
   140041850:	jno    0x140041846
   140041852:	add    BYTE PTR [rax],al
   140041854:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041855:	or     eax,DWORD PTR [rax+rax*1]
   140041858:	and    DWORD PTR [rax],eax
   14004185a:	add    BYTE PTR [rax],al
   14004185c:	push   rax
   14004185d:	hlt    
   14004185e:	add    BYTE PTR [rax],al
   140041860:	jno    0x140041856
   140041862:	add    BYTE PTR [rax],al
   140041864:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041865:	or     eax,DWORD PTR [rax+rax*1]
   140041868:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4091870
   14004186e:	(bad)  
   14004186f:	add    BYTE PTR [rax],dl
   140041871:	fadd   QWORD PTR [rax]
   140041873:	add    BYTE PTR [rbx+0x180000dc],cl
   140041879:	cmp    al,0x4
   14004187b:	add    BYTE PTR [rcx],ah
   14004187d:	add    BYTE PTR [rax],al
   14004187f:	add    BYTE PTR [rax],dl
   140041881:	fadd   QWORD PTR [rax]
   140041883:	add    BYTE PTR [rbx+0x180000dc],cl
   140041889:	cmp    al,0x4
   14004188b:	add    BYTE PTR [rcx],ah
   14004188d:	add    eax,0x64050002
   140041892:	(bad)  
   140041893:	add    BYTE PTR [rax+0x8],al
   140041896:	add    DWORD PTR [rax],eax
   140041898:	data16 or BYTE PTR [rcx],al
   14004189b:	add    BYTE PTR [rbx+rbx*1],ch
   14004189e:	add    al,0x0
   1400418a0:	and    DWORD PTR [rax],eax
   1400418a2:	add    BYTE PTR [rax],al
   1400418a4:	or     BYTE PTR [rcx],al
   1400418a7:	add    BYTE PTR [rsi+0x8],ah
   1400418aa:	add    DWORD PTR [rax],eax
   1400418ac:	sub    al,0x1b
   1400418ae:	add    al,0x0
   1400418b0:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740918b8
   1400418b6:	(bad)  
   1400418b7:	add    al,al
   1400418b9:	repz add BYTE PTR [rax],al
   1400418bc:	loope  0x1400418b1
   1400418be:	add    BYTE PTR [rax],al
   1400418c0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400418c1:	or     eax,DWORD PTR [rax+rax*1]
   1400418c4:	and    DWORD PTR [rax],eax
   1400418c6:	add    BYTE PTR [rax],al
   1400418c8:	shl    bl,0x0
   1400418cb:	add    cl,ah
   1400418cd:	repz add BYTE PTR [rax],al
   1400418d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400418d1:	or     eax,DWORD PTR [rax+rax*1]
   1400418d4:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a40918dc
   1400418da:	(bad)  
   1400418db:	add    BYTE PTR [rax],ah
   1400418dd:	(bad)  
   1400418de:	add    DWORD PTR [rax],eax
   1400418e0:	rex.RX (bad) 
   1400418e2:	add    DWORD PTR [rax],eax
   1400418e4:	sub    al,0x1b
   1400418e6:	add    al,0x0
   1400418e8:	and    DWORD PTR [rax],eax
   1400418ea:	add    BYTE PTR [rax],al
   1400418ec:	and    BYTE PTR [rdi],al
   1400418ee:	add    DWORD PTR [rax],eax
   1400418f0:	rex.RX (bad) 
   1400418f2:	add    DWORD PTR [rax],eax
   1400418f4:	sub    al,0x1b
   1400418f6:	add    al,0x0
   1400418f8:	and    DWORD PTR [rip+0x34050002],eax        # 0x174091900
   1400418fe:	(bad)  
   1400418ff:	add    BYTE PTR [rax-0xd],al
   140041902:	add    BYTE PTR [rax],al
   140041904:	(bad)  
   140041905:	repz add BYTE PTR [rax],al
   140041908:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041909:	or     eax,DWORD PTR [rax+rax*1]
   14004190c:	and    DWORD PTR [rax],eax
   14004190e:	add    BYTE PTR [rax],al
   140041910:	rex
   140041911:	repz add BYTE PTR [rax],al
   140041914:	(bad)  
   140041915:	repz add BYTE PTR [rax],al
   140041918:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041919:	or     eax,DWORD PTR [rax+rax*1]
   14004191c:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4091924
   140041922:	(bad)  
   140041923:	add    BYTE PTR [rax],dl
   140041925:	(bad)  
   140041926:	add    DWORD PTR [rax],eax
   140041928:	ss (bad) 
   14004192a:	add    DWORD PTR [rax],eax
   14004192c:	sub    al,0x1b
   14004192e:	add    al,0x0
   140041930:	and    DWORD PTR [rax],eax
   140041932:	add    BYTE PTR [rax],al
   140041934:	adc    BYTE PTR [rsi],al
   140041936:	add    DWORD PTR [rax],eax
   140041938:	ss (bad) 
   14004193a:	add    DWORD PTR [rax],eax
   14004193c:	sub    al,0x1b
   14004193e:	add    al,0x0
   140041940:	add    DWORD PTR [rip+0x741d000a],ebx        # 0x1b4211950
   140041946:	adc    eax,0x14641d00
   14004194b:	add    BYTE PTR [rip+0x1d001354],bl        # 0x15d042ca5
   140041951:	xor    al,0x12
   140041953:	add    BYTE PTR [rip+0x1e016f2],bl        # 0x141e4304b
   140041959:	sbb    DWORD PTR [rdi],eax
   14004195b:	add    BYTE PTR [rcx],bl
   14004195d:	xor    al,0x4e
   14004195f:	add    BYTE PTR [rcx],bl
   140041961:	add    DWORD PTR [rdx+0x0],ecx
   140041964:	adc    dh,BYTE PTR [rax+0x11]
   140041967:	(bad)  
   140041968:	adc    BYTE PTR [rax+0x0],dl
   14004196b:	add    BYTE PTR [rcx],ah
   14004196d:	adc    BYTE PTR [rax+rax*1],al
   140041970:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140041974:	add    eax,0x20000634
   140041979:	xor    al,0x1
   14004197b:	add    BYTE PTR [rcx+0x34],al
   14004197e:	add    DWORD PTR [rax],eax
   140041980:	in     al,dx
   140041981:	xor    al,BYTE PTR [rax+rax*1]
   140041984:	and    DWORD PTR [rax],eax
   140041986:	add    al,0x0
   140041988:	add    BYTE PTR [rdi+rax*1+0x0],ah
   14004198c:	add    BYTE PTR [rsi+rax*1],dh
   14004198f:	add    BYTE PTR [rax],ah
   140041991:	xor    al,0x1
   140041993:	add    BYTE PTR [rcx+0x34],al
   140041996:	add    DWORD PTR [rax],eax
   140041998:	in     al,dx
   140041999:	xor    al,BYTE PTR [rax+rax*1]
   14004199c:	and    DWORD PTR [rax],eax
   14004199e:	add    BYTE PTR [rax],al
   1400419a0:	and    BYTE PTR [rcx+rax*1],dh
   1400419a3:	add    BYTE PTR [rcx+0x34],al
   1400419a6:	add    DWORD PTR [rax],eax
   1400419a8:	in     al,dx
   1400419a9:	xor    al,BYTE PTR [rax+rax*1]
   1400419ac:	add    DWORD PTR [rdi],ecx
   1400419ae:	(bad)  
   1400419af:	add    BYTE PTR [rdi],cl
   1400419b1:	je     0x1400419b6
   1400419b3:	add    BYTE PTR [rdx],cl
   1400419b5:	add    al,BYTE PTR fs:[rax]
   1400419b8:	add    eax,0x1000134
   1400419bd:	(bad)  
   1400419be:	(bad)  
   1400419bf:	add    BYTE PTR [rsi],cl
   1400419c1:	xor    al,0xb
   1400419c3:	add    BYTE PTR [rsi],cl
   1400419c5:	xor    cl,BYTE PTR [rdx]
   1400419c7:	lock or al,al
   1400419ca:	(bad)  
   1400419cb:	push   rax
   1400419cc:	and    DWORD PTR [rcx],edx
   1400419ce:	(bad)  
   1400419cf:	add    BYTE PTR [rcx],dl
   1400419d1:	je     0x1400419dc
   1400419d3:	add    BYTE PTR [rsp+riz*8],cl
   1400419d6:	or     al,BYTE PTR [rax]
   1400419d8:	add    eax,0xe0000864
   1400419dd:	(bad)  
   1400419de:	add    DWORD PTR [rax],eax
   1400419e0:	or     eax,0xbc000130
   1400419e5:	sbb    DWORD PTR [rax+rax*1],eax
   1400419e8:	and    DWORD PTR [rax],eax
   1400419ea:	add    BYTE PTR [rax],al
   1400419ec:	loopne 0x140041a1d
   1400419ee:	add    DWORD PTR [rax],eax
   1400419f0:	or     eax,0xbc000130
   1400419f5:	sbb    DWORD PTR [rax+rax*1],eax
   1400419f8:	add    DWORD PTR [rdx],edx
   1400419fa:	add    eax,DWORD PTR [rax]
   1400419fc:	adc    al,BYTE PTR [rcx]
   1400419fe:	push   rsp
   1400419ff:	add    BYTE PTR [rax+rdx*2],al
   140041a02:	add    BYTE PTR [rax],al
   140041a04:	and    DWORD PTR [rsi+0x8],edx
   140041a07:	add    BYTE PTR [rsi+0x74],dl
   140041a0a:	pop    rax
   140041a0b:	add    BYTE PTR [rbx],dl
   140041a0d:	(bad)  
   140041a0e:	pop    rcx
   140041a0f:	add    BYTE PTR [rbx],cl
   140041a11:	fs push rdi
   140041a13:	add    BYTE PTR [rsp+rsi*1],al
   140041a16:	push   rsi
   140041a17:	add    BYTE PTR [rax+0x39],dh
   140041a1a:	add    DWORD PTR [rax],eax
   140041a1c:	(bad)  
   140041a1d:	cmp    DWORD PTR [rcx],eax
   140041a1f:	add    al,bh
   140041a21:	sbb    DWORD PTR [rax+rax*1],eax
   140041a24:	and    DWORD PTR [rax],edx
   140041a26:	add    al,0x0
   140041a28:	adc    ah,dh
   140041a2a:	push   rdx
   140041a2b:	add    BYTE PTR [rax],cl
   140041a2d:	in     al,0x53
   140041a2f:	add    BYTE PTR [rdx-0x5fffec7],al
   140041a35:	cmp    al,BYTE PTR [rcx]
   140041a37:	add    BYTE PTR [rdx+rbx*1],al
   140041a3a:	add    al,0x0
   140041a3c:	and    DWORD PTR [rax],eax
   140041a3e:	add    BYTE PTR [rax],al
   140041a40:	(bad)  
   140041a41:	cmp    DWORD PTR [rcx],eax
   140041a43:	add    dl,bh
   140041a45:	cmp    al,BYTE PTR [rcx]
   140041a47:	add    BYTE PTR [rdx+rbx*1],al
   140041a4a:	add    al,0x0
   140041a4c:	and    DWORD PTR [rax],eax
   140041a4e:	add    BYTE PTR [rax],al
   140041a50:	jo     0x140041a8b
   140041a52:	add    DWORD PTR [rax],eax
   140041a54:	(bad)  
   140041a55:	cmp    DWORD PTR [rcx],eax
   140041a57:	add    al,bh
   140041a59:	sbb    DWORD PTR [rax+rax*1],eax
   140041a5c:	add    DWORD PTR [rsi],edx
   140041a5e:	(bad)  
   140041a5f:	add    BYTE PTR [rsi],dl
   140041a61:	add    DWORD PTR [rax+rax*1+0x7005e007],edx
   140041a68:	add    al,0x60
   140041a6a:	add    esi,DWORD PTR [rax]
   140041a6c:	add    dl,BYTE PTR [rax+0x0]
   140041a6f:	add    BYTE PTR [rcx],al
   140041a71:	(bad)  
   140041a72:	add    eax,DWORD PTR [rax]
   140041a74:	(bad)  
   140041a75:	add    DWORD PTR [rdx],ebp
   140041a77:	add    BYTE PTR [rdx],al
   140041a79:	push   rax
   140041a7a:	add    BYTE PTR [rax],al
   140041a7c:	and    DWORD PTR [rax],ecx
   140041a7e:	add    al,BYTE PTR [rax]
   140041a80:	or     BYTE PTR [rcx+rbp*1+0x0],ah
   140041a84:	mov    al,0x40
   140041a86:	add    DWORD PTR [rax],eax
   140041a88:	mov    esi,0x70000140
   140041a8d:	sbb    al,BYTE PTR [rax+rax*1]
   140041a90:	and    DWORD PTR [rax],edx
   140041a92:	add    al,0x0
   140041a94:	adc    BYTE PTR [rax+rbp*1+0x0],dh
   140041a98:	or     BYTE PTR [rsp+rbp*1],dh
   140041a9b:	add    BYTE PTR [rsi-0x14fffec0],bh
   140041aa1:	rex add DWORD PTR [rax],eax
   140041aa4:	jl     0x140041ac0
   140041aa6:	add    al,0x0
   140041aa8:	and    DWORD PTR [rax],eax
   140041aaa:	add    BYTE PTR [rax],al
   140041aac:	mov    esi,0xeb000140
   140041ab1:	rex add DWORD PTR [rax],eax
   140041ab4:	jl     0x140041ad0
   140041ab6:	add    al,0x0
   140041ab8:	and    DWORD PTR [rax],eax
   140041aba:	add    BYTE PTR [rax],al
   140041abc:	mov    al,0x40
   140041abe:	add    DWORD PTR [rax],eax
   140041ac0:	mov    esi,0x70000140
   140041ac5:	sbb    al,BYTE PTR [rax+rax*1]
   140041ac8:	add    DWORD PTR [rsp+rax*1],ecx
   140041acb:	add    BYTE PTR [rsp+rsi*1],cl
   140041ace:	(bad)  
   140041acf:	add    BYTE PTR [rdx+rsi*4],cl
   140041ad2:	or     BYTE PTR [rax+0x21],dh
   140041ad5:	or     eax,DWORD PTR [rax+rax*1]
   140041ad8:	or     esp,DWORD PTR [rax+riz*1+0x0]
   140041adc:	add    al,0x34
   140041ade:	(bad)  
   140041adf:	add    BYTE PTR [rax-0x6efffecb],al
   140041ae5:	xor    eax,0x1bdc0001
   140041aea:	add    al,0x0
   140041aec:	and    DWORD PTR [rax],edx
   140041aee:	add    al,0x0
   140041af0:	adc    BYTE PTR [rsp+rbx*1+0x0],dh
   140041af4:	or     BYTE PTR [rdi+rbx*1+0x0],dl
   140041af8:	xchg   ecx,eax
   140041af9:	xor    eax,0x35fc0001
   140041afe:	add    DWORD PTR [rax],eax
   140041b00:	(bad)  
   140041b01:	sbb    al,BYTE PTR [rax+rax*1]
   140041b04:	and    DWORD PTR [rax],eax
   140041b06:	add    BYTE PTR [rax],al
   140041b08:	xchg   ecx,eax
   140041b09:	xor    eax,0x35fc0001
   140041b0e:	add    DWORD PTR [rax],eax
   140041b10:	(bad)  
   140041b11:	sbb    al,BYTE PTR [rax+rax*1]
   140041b14:	and    DWORD PTR [rax],eax
   140041b16:	add    BYTE PTR [rax],al
   140041b18:	xor    BYTE PTR [rip+0x35910001],0x1        # 0x175951b20
   140041b1f:	add    ah,bl
   140041b21:	sbb    eax,DWORD PTR [rax+rax*1]
   140041b24:	add    DWORD PTR [rdi],eax
   140041b26:	add    DWORD PTR [rax],eax
   140041b28:	(bad)  
   140041b29:	loop   0x140041b2b
   140041b2b:	add    BYTE PTR [rcx],al
   140041b2d:	clts   
   140041b2f:	add    BYTE PTR [rdi],cl
   140041b31:	push   rsp
   140041b32:	or     BYTE PTR [rax],al
   140041b34:	sysenter 
   140041b36:	(bad)  
   140041b37:	add    BYTE PTR [rdi],cl
   140041b39:	xor    cl,BYTE PTR [rbx]
   140041b3b:	jo     0x140041b5e
   140041b3d:	add    eax,0x64050002
   140041b42:	(bad)  
   140041b43:	add    BYTE PTR [rax-0x59fffec4],al
   140041b49:	cmp    al,0x1
   140041b4b:	add    BYTE PTR [rbx+rbx*1],ch
   140041b4e:	add    al,0x0
   140041b50:	and    DWORD PTR [rax],eax
   140041b52:	add    BYTE PTR [rax],al
   140041b54:	cmp    BYTE PTR [rcx+rax*1],0x0
   140041b58:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140041b59:	cmp    al,0x1
   140041b5b:	add    BYTE PTR [rbx+rbx*1],ch
   140041b5e:	add    al,0x0
   140041b60:	add    DWORD PTR [rip+0xffffffffc425000d],esp        # 0x104291b73
   140041b66:	xor    eax,DWORD PTR [rax]
   140041b68:	and    eax,0x25003274
   140041b6d:	xor    DWORD PTR fs:[rax],eax
   140041b70:	and    eax,0x25003034
   140041b75:	add    DWORD PTR [rax+rax*1],ebp
   140041b78:	sbb    eax,esi
   140041b7a:	(bad)  
   140041b7b:	loopne 0x140041b92
   140041b7d:	push   rax
   140041b7e:	add    BYTE PTR [rax],al
   140041b80:	add    DWORD PTR [rdx],edx
   140041b82:	add    al,BYTE PTR [rax]
   140041b84:	adc    al,BYTE PTR [rcx]
   140041b86:	adc    DWORD PTR [rax],eax
   140041b88:	add    DWORD PTR [rip+0x741d000b],ebx        # 0x1b4211b99
   140041b8e:	and    DWORD PTR [rax],eax
   140041b90:	sbb    eax,0x1d002064
   140041b95:	push   rsp
   140041b96:	(bad)  
   140041b97:	add    BYTE PTR [rip+0x1d001e34],bl        # 0x15d0439d1
   140041b9d:	add    DWORD PTR [rax+rax*1],ebx
   140041ba0:	(bad)  
   140041ba1:	loopne 0x140041ba3
   140041ba3:	add    BYTE PTR [rcx],al
   140041ba5:	adc    eax,0x74150008
   140041baa:	or     DWORD PTR [rax],eax
   140041bac:	adc    eax,0x15000864
   140041bb1:	xor    al,0x7
   140041bb3:	add    BYTE PTR [rip+0x21e01132],dl        # 0x161e42ceb
   140041bb9:	add    eax,0x54050002
   140041bbe:	(bad)  
   140041bbf:	add    BYTE PTR [rax+0x20],ah
   140041bc2:	add    DWORD PTR [rax],eax
   140041bc4:	mov    edx,0xa4000120
   140041bc9:	sbb    eax,DWORD PTR [rax+rax*1]
   140041bcc:	and    DWORD PTR [rax],eax
   140041bce:	add    BYTE PTR [rax],al
   140041bd0:	(bad)  
   140041bd1:	and    BYTE PTR [rcx],al
   140041bd3:	add    BYTE PTR [rdx-0x5bfffee0],bh
   140041bd9:	sbb    eax,DWORD PTR [rax+rax*1]
   140041bdc:	add    DWORD PTR [rdx],ecx
   140041bde:	add    al,BYTE PTR [rax]
   140041be0:	or     al,BYTE PTR [rcx]
   140041be2:	sbb    eax,0x4112100
   140041be7:	add    BYTE PTR [rcx],dl
   140041be9:	je     0x140041c07
   140041beb:	add    BYTE PTR [rsp+riz*2],al
   140041bee:	and    BYTE PTR [rax],al
   140041bf0:	add    BYTE PTR [rdx+0x1],0x0
   140041bf4:	mov    al,BYTE PTR [rdx+0x1]
   140041bf7:	add    ah,bl
   140041bf9:	sbb    eax,DWORD PTR [rax+rax*1]
   140041bfc:	and    DWORD PTR [rax],edx
   140041bfe:	add    al,0x0
   140041c00:	adc    BYTE PTR [rdi+rbx*1+0x0],dl
   140041c04:	or     BYTE PTR [rsi+rbx*1],dh
   140041c07:	add    BYTE PTR [rdx-0x4bfffebe],cl
   140041c0d:	rex.X add DWORD PTR [rax],eax
   140041c10:	in     al,0x1b
   140041c12:	add    al,0x0
   140041c14:	and    DWORD PTR [rax],eax
   140041c16:	add    BYTE PTR [rax],al
   140041c18:	mov    al,BYTE PTR [rdx+0x1]
   140041c1b:	add    BYTE PTR [rdx+rax*2+0x1be40001],dh
   140041c22:	add    al,0x0
   140041c24:	and    DWORD PTR [rax],eax
   140041c26:	add    BYTE PTR [rax],al
   140041c28:	add    BYTE PTR [rdx+0x1],0x0
   140041c2c:	mov    al,BYTE PTR [rdx+0x1]
   140041c2f:	add    ah,bl
   140041c31:	sbb    eax,DWORD PTR [rax+rax*1]
   140041c34:	add    DWORD PTR [rax],esp
   140041c36:	or     eax,DWORD PTR [rax]
   140041c38:	and    BYTE PTR [rdx+riz*1+0x0],dh
   140041c3c:	and    BYTE PTR [rcx+riz*1+0x0],ah
   140041c40:	and    BYTE PTR [rax+riz*1],dh
   140041c43:	add    BYTE PTR [rax],ah
   140041c45:	add    DWORD PTR [rax+rax*1],ebx
   140041c48:	adc    al,0xf0
   140041c4a:	adc    ah,al
   140041c4c:	adc    BYTE PTR [rax+0x0],dl
   140041c4f:	add    BYTE PTR [rcx],ah
   140041c51:	add    eax,0xe4050002
   140041c56:	(bad)  
   140041c57:	add    BYTE PTR [rax],al
   140041c59:	add    DWORD PTR es:[rax],eax
   140041c5c:	ins    BYTE PTR es:[rdi],dx
   140041c5d:	add    DWORD PTR es:[rax],eax
   140041c60:	rcl    BYTE PTR [rbx],0x4
   140041c63:	add    BYTE PTR [rcx],ah
   140041c65:	add    BYTE PTR [rax],al
   140041c67:	add    BYTE PTR [rax],al
   140041c69:	add    DWORD PTR es:[rax],eax
   140041c6c:	ins    BYTE PTR es:[rdi],dx
   140041c6d:	add    DWORD PTR es:[rax],eax
   140041c70:	rcl    BYTE PTR [rbx],0x4
   140041c73:	add    BYTE PTR [rcx],ah
   140041c75:	add    eax,0x34050002
   140041c7a:	add    al,0x0
   140041c7c:	push   rax
   140041c7d:	sub    BYTE PTR [rcx],al
   140041c7f:	add    BYTE PTR [rdi+0x28],ah
   140041c82:	add    DWORD PTR [rax],eax
   140041c84:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   140041c88:	and    DWORD PTR [rax],eax
   140041c8a:	add    BYTE PTR [rax],al
   140041c8c:	push   rax
   140041c8d:	sub    BYTE PTR [rcx],al
   140041c8f:	add    BYTE PTR [rdi+0x28],ah
   140041c92:	add    DWORD PTR [rax],eax
   140041c94:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   140041c98:	and    DWORD PTR [rip+0x34050002],eax        # 0x174091ca0
   140041c9e:	add    al,0x0
   140041ca0:	adc    BYTE PTR [rcx],ch
   140041ca2:	add    DWORD PTR [rax],eax
   140041ca4:	(bad)  
   140041ca5:	sub    DWORD PTR [rcx],eax
   140041ca7:	add    BYTE PTR [rax+rbp*1+0x4],cl
   140041cab:	add    BYTE PTR [rcx],ah
   140041cad:	add    BYTE PTR [rax],al
   140041caf:	add    BYTE PTR [rax],dl
   140041cb1:	sub    DWORD PTR [rcx],eax
   140041cb3:	add    BYTE PTR [rdi],ah
   140041cb5:	sub    DWORD PTR [rcx],eax
   140041cb7:	add    BYTE PTR [rax+rbp*1+0x4],cl
   140041cbb:	add    BYTE PTR [rcx],ah
   140041cbd:	add    eax,0x34050002
   140041cc2:	add    al,0x0
   140041cc4:	mov    al,0x28
   140041cc6:	add    DWORD PTR [rax],eax
   140041cc8:	(bad)  
   140041cc9:	sub    BYTE PTR [rcx],al
   140041ccb:	add    BYTE PTR [rax+rbp*1+0x4],cl
   140041ccf:	add    BYTE PTR [rcx],ah
   140041cd1:	add    BYTE PTR [rax],al
   140041cd3:	add    BYTE PTR [rax-0x38fffed8],dh
   140041cd9:	sub    BYTE PTR [rcx],al
   140041cdb:	add    BYTE PTR [rax+rbp*1+0x4],cl
   140041cdf:	add    BYTE PTR [rcx],al
   140041ce1:	or     al,BYTE PTR [rax+rax*1]
   140041ce4:	or     dh,BYTE PTR [rdi+rax*1]
   140041ce7:	add    BYTE PTR [rdx],cl
   140041ce9:	xor    al,BYTE PTR [rsi]
   140041ceb:	(bad)  
   140041cec:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4091cf4
   140041cf2:	(bad)  
   140041cf3:	add    BYTE PTR [rax-0x3bfffebc],dh
   140041cf9:	add    DWORD PTR [rax],r8d
   140041cfc:	loopne 0x140041d1a
   140041cfe:	add    al,0x0
   140041d00:	and    DWORD PTR [rax],eax
   140041d02:	add    BYTE PTR [rax],al
   140041d04:	mov    al,0x44
   140041d06:	add    DWORD PTR [rax],eax
   140041d08:	(bad)  
   140041d09:	add    DWORD PTR [rax],r8d
   140041d0c:	loopne 0x140041d2a
   140041d0e:	add    al,0x0
   140041d10:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4091d18
   140041d16:	(bad)  
   140041d17:	add    BYTE PTR [rax+0x57],dh
   140041d1a:	add    DWORD PTR [rax],eax
   140041d1c:	test   BYTE PTR [rdi+0x1],dl
   140041d1f:	add    al,ah
   140041d21:	sbb    al,0x4
   140041d23:	add    BYTE PTR [rcx],ah
   140041d25:	add    BYTE PTR [rax],al
   140041d27:	add    BYTE PTR [rax+0x57],dh
   140041d2a:	add    DWORD PTR [rax],eax
   140041d2c:	test   BYTE PTR [rdi+0x1],dl
   140041d2f:	add    al,ah
   140041d31:	sbb    al,0x4
   140041d33:	add    BYTE PTR [rcx],ah
   140041d35:	add    eax,0x64050002
   140041d3a:	(bad)  
   140041d3b:	add    BYTE PTR [rax+0x48],dh
   140041d3e:	add    DWORD PTR [rax],eax
   140041d40:	cdq    
   140041d41:	add    QWORD PTR [rax],rax
   140041d44:	sub    al,0x1b
   140041d46:	add    al,0x0
   140041d48:	and    DWORD PTR [rax],eax
   140041d4a:	add    BYTE PTR [rax],al
   140041d4c:	jo     0x140041d96
   140041d4e:	add    DWORD PTR [rax],eax
   140041d50:	cdq    
   140041d51:	add    QWORD PTR [rax],rax
   140041d54:	sub    al,0x1b
   140041d56:	add    al,0x0
   140041d58:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4091d60
   140041d5e:	(bad)  
   140041d5f:	add    BYTE PTR [rax],al
   140041d61:	push   rdi
   140041d62:	add    DWORD PTR [rax],eax
   140041d64:	(bad)  
   140041d65:	push   rdi
   140041d66:	add    DWORD PTR [rax],eax
   140041d68:	loopne 0x140041d86
   140041d6a:	add    al,0x0
   140041d6c:	and    DWORD PTR [rax],eax
   140041d6e:	add    BYTE PTR [rax],al
   140041d70:	add    BYTE PTR [rdi+0x1],dl
   140041d73:	add    BYTE PTR [rdi],dl
   140041d75:	push   rdi
   140041d76:	add    DWORD PTR [rax],eax
   140041d78:	loopne 0x140041d96
   140041d7a:	add    al,0x0
   140041d7c:	add    DWORD PTR [rip+0x340d0005],ecx        # 0x174111d87
   140041d82:	sbb    al,0x0
   140041d84:	or     eax,0x6001a01
   140041d89:	jo     0x140041d8b
   140041d8b:	add    BYTE PTR [rcx],al
   140041d8d:	adc    al,0x7
   140041d8f:	add    BYTE PTR [rsp+rsi*1],dl
   140041d92:	xor    al,BYTE PTR [rax]
   140041d94:	adc    al,0x1
   140041d96:	sub    al,0x0
   140041d98:	or     BYTE PTR [rax+0x7],dh
   140041d9b:	(bad)  
   140041d9c:	(bad)  
   140041d9d:	push   rax
   140041d9e:	add    BYTE PTR [rax],al
   140041da0:	and    DWORD PTR [rax],ecx
   140041da2:	add    al,BYTE PTR [rax]
   140041da4:	or     ah,ah
   140041da6:	xor    DWORD PTR [rax],eax
   140041da8:	lock push rdx
   140041daa:	add    DWORD PTR [rax],eax
   140041dac:	cmp    dl,BYTE PTR [rbx+0x1]
   140041daf:	add    BYTE PTR [rbp+rbx*1+0x210004],cl
   140041db6:	add    BYTE PTR [rax],al
   140041db8:	lock push rdx
   140041dba:	add    DWORD PTR [rax],eax
   140041dbc:	cmp    dl,BYTE PTR [rbx+0x1]
   140041dbf:	add    BYTE PTR [rbp+rbx*1+0x210004],cl
   140041dc6:	add    al,BYTE PTR [rax]
   140041dc8:	add    ah,ah
   140041dca:	xor    DWORD PTR [rax],eax
   140041dcc:	lock push rdx
   140041dce:	add    DWORD PTR [rax],eax
   140041dd0:	cmp    dl,BYTE PTR [rbx+0x1]
   140041dd3:	add    BYTE PTR [rbp+rbx*1+0x12010004],cl
   140041dda:	(bad)  
   140041ddb:	add    BYTE PTR [rdx],dl
   140041ddd:	fs (bad) 
   140041ddf:	add    BYTE PTR [rdx],dl
   140041de1:	xor    al,0x2e
   140041de3:	add    BYTE PTR [rdx],dl
   140041de5:	add    DWORD PTR [rax+rax*1],ebp
   140041de8:	or     esi,DWORD PTR [rax+0x0]
   140041deb:	add    BYTE PTR [rcx],al
   140041ded:	adc    eax,DWORD PTR [rdi]
   140041def:	add    BYTE PTR [rbx],dl
   140041df1:	sub    eax,DWORD PTR fs:[rax]
   140041df4:	adc    esi,DWORD PTR [rdx+rbp*1]
   140041df7:	add    BYTE PTR [rbx],dl
   140041df9:	add    DWORD PTR [rsi],esp
   140041dfb:	add    BYTE PTR [rax+riz*8],cl
   140041dfe:	add    BYTE PTR [rax],al
   140041e00:	and    DWORD PTR [rip+0x74150004],edx        # 0x1b4191e0a
   140041e06:	sub    DWORD PTR [rax],eax
   140041e08:	or     BYTE PTR [rax+rbp*1+0x0],dl
   140041e0c:	nop
   140041e0d:	add    QWORD PTR [r8],rax
   140041e10:	(bad)  
   140041e11:	add    QWORD PTR [r8],rax
   140041e14:	in     al,dx
   140041e15:	sbb    eax,0x210004
   140041e1a:	add    BYTE PTR [rax],al
   140041e1c:	nop
   140041e1d:	add    QWORD PTR [r8],rax
   140041e20:	(bad)  
   140041e21:	add    QWORD PTR [r8],rax
   140041e24:	in     al,dx
   140041e25:	sbb    eax,0x210004
   140041e2a:	add    al,0x0
   140041e2c:	add    BYTE PTR [rcx+rbp*1+0x0],dh
   140041e30:	add    BYTE PTR [rax+rbp*1+0x0],dl
   140041e34:	nop
   140041e35:	add    QWORD PTR [r8],rax
   140041e38:	(bad)  
   140041e39:	add    QWORD PTR [r8],rax
   140041e3c:	in     al,dx
   140041e3d:	sbb    eax,0x19010004
   140041e42:	(bad)  
   140041e43:	add    BYTE PTR [rcx],bl
   140041e45:	fs xchg esp,eax
   140041e47:	add    BYTE PTR [rcx],bl
   140041e49:	add    DWORD PTR [rsi+0x8f00a00],ecx
   140041e4f:	loopne 0x140041e57
   140041e51:	push   rax
   140041e52:	add    BYTE PTR [rax],al
   140041e54:	and    DWORD PTR [rax],ecx
   140041e56:	add    al,BYTE PTR [rax]
   140041e58:	or     BYTE PTR [rdx+rdx*4],dh
   140041e5b:	add    al,dh
   140041e5d:	rex.WX add QWORD PTR [rax],rax
   140041e60:	imul   ecx,DWORD PTR [rbx+0x1],0x41e4000
   140041e67:	add    BYTE PTR [rcx],ah
   140041e69:	or     BYTE PTR [rdx],al
   140041e6b:	add    BYTE PTR [rax],cl
   140041e6d:	je     0x140041e02
   140041e6f:	add    BYTE PTR [rcx+0x4b],ch
   140041e72:	add    DWORD PTR [rax],eax
   140041e74:	jnp    0x140041ec1
   140041e76:	add    DWORD PTR [rax],eax
   140041e78:	push   rsp
   140041e79:	(bad)  
   140041e7a:	add    al,0x0
   140041e7c:	and    DWORD PTR [rax],eax
   140041e7e:	add    BYTE PTR [rax],al
   140041e80:	imul   ecx,DWORD PTR [rbx+0x1],0x14b7b00
   140041e87:	add    BYTE PTR [rsi+rbx*1+0x4],dl
   140041e8b:	add    BYTE PTR [rcx],ah
   140041e8d:	add    BYTE PTR [rax],al
   140041e8f:	add    al,dh
   140041e91:	rex.WX add QWORD PTR [rax],rax
   140041e94:	imul   ecx,DWORD PTR [rbx+0x1],0x41e4000
   140041e9b:	add    BYTE PTR [rcx],ah
   140041e9d:	add    BYTE PTR [rax+rax*1],al
   140041ea0:	add    BYTE PTR [rbx+rdx*4+0x0],dh
   140041ea4:	add    BYTE PTR [rdx+rdx*4],dh
   140041ea7:	add    al,dh
   140041ea9:	rex.WX add QWORD PTR [rax],rax
   140041eac:	imul   ecx,DWORD PTR [rbx+0x1],0x41e4000
   140041eb3:	add    BYTE PTR [rcx],al
   140041eb5:	or     eax,0x340d0005
   140041eba:	(bad)  
   140041ebb:	add    BYTE PTR [rip+0x6002c01],cl        # 0x146044ac2
   140041ec1:	jo     0x140041ec3
   140041ec3:	add    BYTE PTR [rcx],al
   140041ec5:	adc    al,BYTE PTR [rdi]
   140041ec7:	add    BYTE PTR [rdx],dl
   140041ec9:	xor    al,BYTE PTR fs:[rax]
   140041ecc:	adc    dl,BYTE PTR [rcx+rsi*1+0x0]
   140041ed0:	adc    al,BYTE PTR [rcx]
   140041ed2:	add    BYTE PTR cs:[rbx],cl
   140041ed5:	jo     0x140041ed7
   140041ed7:	add    BYTE PTR [rcx],ah
   140041ed9:	or     BYTE PTR [rdx],al
   140041edb:	add    BYTE PTR [rax],cl
   140041edd:	xor    al,0x30
   140041edf:	add    al,dl
   140041ee1:	push   rdi
   140041ee2:	add    DWORD PTR [rax],eax
   140041ee4:	or     ebx,DWORD PTR [rax+0x1]
   140041ee7:	add    ah,al
   140041ee9:	(bad)  
   140041eea:	add    al,0x0
   140041eec:	and    DWORD PTR [rax],eax
   140041eee:	add    BYTE PTR [rax],al
   140041ef0:	rcl    BYTE PTR [rdi+0x1],1
   140041ef3:	add    BYTE PTR [rbx],cl
   140041ef5:	pop    rax
   140041ef6:	add    DWORD PTR [rax],eax
   140041ef8:	(bad)  
   140041ef9:	(bad)  
   140041efa:	add    al,0x0
   140041efc:	add    DWORD PTR [rbx],edx
   140041efe:	add    al,0x0
   140041f00:	adc    eax,DWORD PTR [rcx]
   140041f02:	outs   dx,DWORD PTR ds:[rsi]
   140041f03:	add    BYTE PTR [rip+0x21500430],al        # 0x161542339
   140041f09:	sbb    cl,BYTE PTR [rax]
   140041f0b:	add    BYTE PTR [rdx],bl
   140041f0d:	hlt    
   140041f0e:	outs   dx,BYTE PTR ds:[rsi]
   140041f0f:	add    BYTE PTR [rbx],dl
   140041f11:	in     al,0x75
   140041f13:	add    BYTE PTR [rsp+rax*8],cl
   140041f16:	je     0x140041f18
   140041f18:	add    al,0x64
   140041f1a:	jb     0x140041f1c
   140041f1c:	(bad)  
   140041f1d:	add    DWORD PTR [r8],r8d
   140041f20:	jae    0x140041f67
   140041f22:	add    DWORD PTR [rax],eax
   140041f24:	cld    
   140041f25:	(bad)  
   140041f26:	add    al,0x0
   140041f28:	and    DWORD PTR [rax],ecx
   140041f2a:	add    al,BYTE PTR [rax]
   140041f2c:	or     BYTE PTR [rbx+rsi*2+0x0],dh
   140041f30:	jae    0x140041f77
   140041f32:	add    DWORD PTR [rax],eax
   140041f34:	(bad)  
   140041f35:	add    DWORD PTR [r8],r8d
   140041f38:	or     BYTE PTR [rdi],bl
   140041f3a:	add    al,0x0
   140041f3c:	and    DWORD PTR [rax],eax
   140041f3e:	add    BYTE PTR [rax],al
   140041f40:	jae    0x140041f87
   140041f42:	add    DWORD PTR [rax],eax
   140041f44:	(bad)  
   140041f45:	add    DWORD PTR [r8],r8d
   140041f48:	or     BYTE PTR [rdi],bl
   140041f4a:	add    al,0x0
   140041f4c:	and    DWORD PTR [rax],eax
   140041f4e:	add    BYTE PTR [rax],al
   140041f50:	(bad)  
   140041f51:	add    DWORD PTR [r8],r8d
   140041f54:	jae    0x140041f9b
   140041f56:	add    DWORD PTR [rax],eax
   140041f58:	cld    
   140041f59:	(bad)  
   140041f5a:	add    al,0x0
   140041f5c:	and    DWORD PTR [rax],eax
   140041f5e:	(bad)  
   140041f5f:	add    BYTE PTR [rax],al
   140041f61:	hlt    
   140041f62:	outs   dx,BYTE PTR ds:[rsi]
   140041f63:	add    BYTE PTR [rax],al
   140041f65:	in     al,0x75
   140041f67:	add    BYTE PTR [rax],al
   140041f69:	(bad)  
   140041f6a:	je     0x140041f6c
   140041f6c:	(bad)  
   140041f6d:	add    DWORD PTR [r8],r8d
   140041f70:	jae    0x140041fb7
   140041f72:	add    DWORD PTR [rax],eax
   140041f74:	cld    
   140041f75:	(bad)  
   140041f76:	add    al,0x0
   140041f78:	add    DWORD PTR [rdx],ebx
   140041f7a:	(bad)  
   140041f7b:	add    BYTE PTR [rdx],bl
   140041f7d:	add    DWORD PTR [rdx+0x9c00b00],ebx
   140041f83:	jo     0x140041f8d
   140041f85:	(bad)  
   140041f86:	(bad)  
   140041f87:	xor    BYTE PTR [rsi],al
   140041f89:	push   rax
   140041f8a:	add    BYTE PTR [rax],al
   140041f8c:	and    DWORD PTR [rdi],edx
   140041f8e:	add    al,0x0
   140041f90:	(bad)  
   140041f91:	in     al,0xa2
   140041f93:	add    BYTE PTR [rax],cl
   140041f95:	(bad)  
   140041f96:	movabs eax,ds:0x1620e000160a000
   140041f9f:	add    BYTE PTR [rax+0x1f],bh
   140041fa2:	add    al,0x0
   140041fa4:	and    DWORD PTR [rax],eax
   140041fa6:	add    al,0x0
   140041fa8:	add    ah,ah
   140041faa:	movabs ds:0x160a000a1d40000,al
   140041fb3:	add    BYTE PTR [rsi],cl
   140041fb5:	(bad)  
   140041fb7:	add    BYTE PTR [rax+0x1f],bh
   140041fba:	add    al,0x0
   140041fbc:	and    DWORD PTR [rax],ecx
   140041fbe:	add    al,BYTE PTR [rax]
   140041fc0:	or     ah,dh
   140041fc2:	movabs ds:0x162ed0001626c00,eax
   140041fcb:	add    BYTE PTR [rdi+rbx*1+0x210004],ah
   140041fd2:	add    BYTE PTR [rax],al
   140041fd4:	ins    BYTE PTR es:[rdi],dx
   140041fd5:	(bad)  
   140041fd7:	add    ch,ch
   140041fd9:	(bad)  
   140041fdb:	add    BYTE PTR [rdi+rbx*1+0x210004],ah
   140041fe2:	add    BYTE PTR [rax],al
   140041fe4:	movabs al,ds:0x780001620e000160
   140041fed:	(bad)  
   140041fee:	add    al,0x0
   140041ff0:	and    DWORD PTR [rip+0x34050002],eax        # 0x174091ff8
   140041ff6:	or     BYTE PTR [rax],al
   140041ff8:	(bad)  
   140041ff9:	pop    rdi
   140041ffa:	add    DWORD PTR [rax],eax
   140041ffc:	(bad)  
   140041ffd:	(bad)  
   140041ffe:	add    DWORD PTR [rax],eax
   140042000:	in     al,dx
   140042001:	xor    al,BYTE PTR [rax+rax*1]
   140042004:	and    DWORD PTR [rax],eax
   140042006:	add    BYTE PTR [rax],al
   140042008:	(bad)  
   140042009:	pop    rdi
   14004200a:	add    DWORD PTR [rax],eax
   14004200c:	(bad)  
   14004200d:	(bad)  
   14004200e:	add    DWORD PTR [rax],eax
   140042010:	in     al,dx
   140042011:	xor    al,BYTE PTR [rax+rax*1]
   140042014:	and    DWORD PTR [rip+0x34050002],eax        # 0x17409201c
   14004201a:	or     BYTE PTR [rax],al
   14004201c:	add    BYTE PTR [rcx+rax*1+0x0],bl
   140042020:	out    dx,al
   140042021:	pop    rsp
   140042022:	add    DWORD PTR [rax],eax
   140042024:	in     al,dx
   140042025:	xor    al,BYTE PTR [rax+rax*1]
   140042028:	and    DWORD PTR [rax],eax
   14004202a:	add    BYTE PTR [rax],al
   14004202c:	add    BYTE PTR [rcx+rax*1+0x0],bl
   140042030:	out    dx,al
   140042031:	pop    rsp
   140042032:	add    DWORD PTR [rax],eax
   140042034:	in     al,dx
   140042035:	xor    al,BYTE PTR [rax+rax*1]
   140042038:	and    DWORD PTR [rip+0x34050002],eax        # 0x174092040
   14004203e:	or     BYTE PTR [rax],al
   140042040:	xor    BYTE PTR [rbx+0x1],bl
   140042043:	add    dh,al
   140042045:	pop    rbx
   140042046:	add    DWORD PTR [rax],eax
   140042048:	in     al,dx
   140042049:	xor    al,BYTE PTR [rax+rax*1]
   14004204c:	and    DWORD PTR [rax],eax
   14004204e:	add    BYTE PTR [rax],al
   140042050:	xor    BYTE PTR [rbx+0x1],bl
   140042053:	add    dh,al
   140042055:	pop    rbx
   140042056:	add    DWORD PTR [rax],eax
   140042058:	in     al,dx
   140042059:	xor    al,BYTE PTR [rax+rax*1]
   14004205c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174092064
   140042062:	or     BYTE PTR [rax],al
   140042064:	rex pop rsi
   140042066:	add    DWORD PTR [rax],eax
   140042068:	cs pop rdi
   14004206a:	add    DWORD PTR [rax],eax
   14004206c:	in     al,dx
   14004206d:	xor    al,BYTE PTR [rax+rax*1]
   140042070:	and    DWORD PTR [rax],eax
   140042072:	add    BYTE PTR [rax],al
   140042074:	rex pop rsi
   140042076:	add    DWORD PTR [rax],eax
   140042078:	cs pop rdi
   14004207a:	add    DWORD PTR [rax],eax
   14004207c:	in     al,dx
   14004207d:	xor    al,BYTE PTR [rax+rax*1]
   140042080:	and    DWORD PTR [rip+0x34050002],eax        # 0x174092088
   140042086:	or     BYTE PTR [rax],al
   140042088:	jo     0x1400420e7
   14004208a:	add    DWORD PTR [rax],eax
   14004208c:	(bad)  
   14004208d:	pop    rsi
   14004208e:	add    DWORD PTR [rax],eax
   140042090:	in     al,dx
   140042091:	xor    al,BYTE PTR [rax+rax*1]
   140042094:	and    DWORD PTR [rax],eax
   140042096:	add    BYTE PTR [rax],al
   140042098:	jo     0x1400420f7
   14004209a:	add    DWORD PTR [rax],eax
   14004209c:	(bad)  
   14004209d:	pop    rsi
   14004209e:	add    DWORD PTR [rax],eax
   1400420a0:	in     al,dx
   1400420a1:	xor    al,BYTE PTR [rax+rax*1]
   1400420a4:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740920ac
   1400420aa:	or     BYTE PTR [rax],al
   1400420ac:	push   rax
   1400420ad:	pop    rdx
   1400420ae:	add    DWORD PTR [rax],eax
   1400420b0:	add    BYTE PTR [rbx+0x1],bl
   1400420b3:	add    ah,ch
   1400420b5:	xor    al,BYTE PTR [rax+rax*1]
   1400420b8:	and    DWORD PTR [rax],eax
   1400420ba:	add    BYTE PTR [rax],al
   1400420bc:	push   rax
   1400420bd:	pop    rdx
   1400420be:	add    DWORD PTR [rax],eax
   1400420c0:	add    BYTE PTR [rbx+0x1],bl
   1400420c3:	add    ah,ch
   1400420c5:	xor    al,BYTE PTR [rax+rax*1]
   1400420c8:	and    DWORD PTR [rip+0xffffffffe40d0004],ecx        # 0x1241120d2
   1400420ce:	(bad)  
   1400420cf:	add    BYTE PTR [rip+0x10000654],al        # 0x150042729
   1400420d5:	outs   dx,BYTE PTR ds:[rsi]
   1400420d6:	add    DWORD PTR [rax],eax
   1400420d8:	cmp    al,0x6e
   1400420da:	add    DWORD PTR [rax],eax
   1400420dc:	or     al,0x9
   1400420de:	add    al,0x0
   1400420e0:	and    DWORD PTR [rax],eax
   1400420e2:	add    BYTE PTR [rax],al
   1400420e4:	adc    BYTE PTR [rsi+0x1],ch
   1400420e7:	add    BYTE PTR [rsi+rbp*2],bh
   1400420ea:	add    DWORD PTR [rax],eax
   1400420ec:	or     al,0x9
   1400420ee:	add    al,0x0
   1400420f0:	add    DWORD PTR [rsi+0x8],edx
   1400420f3:	add    BYTE PTR [rsi+0x74],dl
   1400420f6:	(bad)  
   1400420f7:	add    BYTE PTR [rdi],cl
   1400420f9:	push   rsp
   1400420fa:	or     BYTE PTR [rax],al
   1400420fc:	sysenter 
   1400420fe:	(bad)  
   1400420ff:	add    BYTE PTR [rdi],cl
   140042101:	xor    cl,BYTE PTR [rbx]
   140042103:	(bad)  
   140042104:	add    DWORD PTR [rdi],eax
   140042106:	add    eax,DWORD PTR [rax]
   140042108:	(bad)  
   140042109:	(bad)  
   14004210b:	push   rax
   14004210c:	add    dh,BYTE PTR [rax]
   14004210e:	add    BYTE PTR [rax],al
   140042110:	and    DWORD PTR [rdx],ecx
   140042112:	add    al,0x0
   140042114:	or     dh,BYTE PTR [rsi+rax*1+0x0]
   140042118:	add    eax,0xa0000a64
   14004211d:	push   0x68c20001
   140042122:	add    DWORD PTR [rax],eax
   140042124:	add    al,0x21
   140042126:	add    al,0x0
   140042128:	and    DWORD PTR [rax],eax
   14004212a:	add    al,0x0
   14004212c:	add    BYTE PTR [rsi+rax*1+0x0],dh
   140042130:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   140042134:	movabs al,ds:0x4000168c2000168
   14004213d:	and    DWORD PTR [rax+rax*1],eax
   140042140:	and    DWORD PTR [rax],eax
   140042142:	add    BYTE PTR [rax],al
   140042144:	movabs al,ds:0x4000168c2000168
   14004214d:	and    DWORD PTR [rax+rax*1],eax
   140042150:	add    DWORD PTR [rbx],edx
   140042152:	add    al,0x0
   140042154:	adc    eax,DWORD PTR [rcx]
   140042156:	xchg   ecx,eax
   140042157:	add    DWORD PTR [rip+0x21500430],eax        # 0x16154258d
   14004215d:	add    al,0x2
   14004215f:	add    BYTE PTR [rsp+riz*2],al
   140042162:	xchg   esp,eax
   140042163:	add    eax,esp
   140042165:	add    DWORD PTR fs:[rax],eax
   140042168:	repz add DWORD PTR fs:[rax],eax
   14004216c:	push   rax
   14004216d:	and    DWORD PTR [rax+rax*1],eax
   140042170:	and    DWORD PTR [rsi],edx
   140042172:	or     BYTE PTR [rax],al
   140042174:	(bad)  
   140042175:	hlt    
   140042176:	mov    es,WORD PTR [rcx]
   140042178:	paddq  mm2,QWORD PTR [rax-0x693bf7ff]
   14004217f:	add    DWORD PTR [rsp+rsi*2],eax
   140042182:	xchg   ebp,eax
   140042183:	add    ebx,esi
   140042185:	add    DWORD PTR fs:[rax],eax
   140042188:	(bad)  
   140042189:	add    DWORD PTR fs:[rax],eax
   14004218c:	pop    rsp
   14004218d:	and    DWORD PTR [rax+rax*1],eax
   140042190:	and    DWORD PTR [rax],ecx
   140042192:	add    al,BYTE PTR [rax]
   140042194:	or     ah,ah
   140042196:	pop    QWORD PTR [rcx]
   140042198:	(bad)  
   140042199:	add    DWORD PTR fs:[rax],eax
   14004219c:	fisub  WORD PTR [rbp+0x1]
   14004219f:	add    BYTE PTR [rax+0x21],dh
   1400421a2:	add    al,0x0
   1400421a4:	and    DWORD PTR [rax],eax
   1400421a6:	add    BYTE PTR [rax],al
   1400421a8:	(bad)  
   1400421a9:	add    DWORD PTR fs:[rax],eax
   1400421ac:	fisub  WORD PTR [rbp+0x1]
   1400421af:	add    BYTE PTR [rax+0x21],dh
   1400421b2:	add    al,0x0
   1400421b4:	and    DWORD PTR [rax],eax
   1400421b6:	(bad)  
   1400421b7:	add    BYTE PTR [rax],al
   1400421b9:	hlt    
   1400421ba:	mov    es,WORD PTR [rcx]
   1400421bc:	add    ah,dl
   1400421be:	nop
   1400421bf:	add    DWORD PTR [rax],eax
   1400421c1:	(bad)  
   1400421c2:	xchg   esi,eax
   1400421c3:	add    ebx,esi
   1400421c5:	add    DWORD PTR fs:[rax],eax
   1400421c8:	(bad)  
   1400421c9:	add    DWORD PTR fs:[rax],eax
   1400421cc:	pop    rsp
   1400421cd:	and    DWORD PTR [rax+rax*1],eax
   1400421d0:	and    DWORD PTR [rax],eax
   1400421d2:	add    BYTE PTR [rax],al
   1400421d4:	repz add DWORD PTR fs:[rax],eax
   1400421d8:	(bad)  
   1400421d9:	add    DWORD PTR fs:[rax],eax
   1400421dc:	pop    rsp
   1400421dd:	and    DWORD PTR [rax+rax*1],eax
   1400421e0:	and    DWORD PTR [rax],eax
   1400421e2:	add    BYTE PTR [rax],al
   1400421e4:	loopne 0x14004224a
   1400421e6:	add    DWORD PTR [rax],eax
   1400421e8:	repz add DWORD PTR fs:[rax],eax
   1400421ec:	push   rax
   1400421ed:	and    DWORD PTR [rax+rax*1],eax
   1400421f0:	and    DWORD PTR [rax],eax
   1400421f2:	or     BYTE PTR [rax],al
   1400421f4:	add    ah,dh
   1400421f6:	mov    es,WORD PTR [rcx]
   1400421f8:	add    ah,dl
   1400421fa:	nop
   1400421fb:	add    DWORD PTR [rax],eax
   1400421fd:	(bad)  
   1400421fe:	xchg   esi,eax
   1400421ff:	add    DWORD PTR [rax],eax
   140042201:	fs xchg esp,eax
   140042203:	add    eax,esp
   140042205:	add    DWORD PTR fs:[rax],eax
   140042208:	repz add DWORD PTR fs:[rax],eax
   14004220c:	push   rax
   14004220d:	and    DWORD PTR [rax+rax*1],eax
   140042210:	add    DWORD PTR [rdi],edx
   140042212:	or     DWORD PTR [rax],eax
   140042214:	(bad)  
   140042215:	fs ins BYTE PTR es:[rdi],dx
   140042217:	add    BYTE PTR [rdi],dl
   140042219:	push   rsp
   14004221a:	imul   eax,DWORD PTR [rax],0x17
   14004221d:	xor    al,0x6a
   14004221f:	add    BYTE PTR [rdi],dl
   140042221:	add    DWORD PTR [rax+0x0],ebp
   140042224:	adc    BYTE PTR [rax+0x0],dh
   140042227:	add    BYTE PTR [rcx],al
   140042229:	or     eax,DWORD PTR fs:[rax]
   14004222c:	fs hlt 
   14004222e:	add    al,0x0
   140042230:	pop    rdi
   140042231:	je     0x14004223d
   140042233:	add    BYTE PTR [rdx+0x64],bl
   140042236:	or     DWORD PTR [rax],eax
   140042238:	push   rcx
   140042239:	push   rsp
   14004223a:	or     BYTE PTR [rax],al
   14004223c:	or     BYTE PTR [rdx+0x4],al
   14004223f:	loopne 0x140042243
   140042241:	xor    BYTE PTR [rax],al
   140042243:	add    BYTE PTR [rcx],al
   140042245:	or     eax,0x340d0005
   14004224a:	(bad)  
   14004224b:	add    BYTE PTR [rip+0x6001c01],cl        # 0x146043e52
   140042251:	jo     0x140042253
   140042253:	add    BYTE PTR [rcx],al
   140042255:	and    al,0xb
   140042257:	add    BYTE PTR [rsp+riz*8],ah
   14004225a:	cmp    eax,DWORD PTR [rax]
   14004225c:	and    al,0x74
   14004225e:	cmp    al,BYTE PTR [rax]
   140042260:	and    al,0x64
   140042262:	cmp    DWORD PTR [rax],eax
   140042264:	and    al,0x34
   140042266:	cmp    BYTE PTR [rax],al
   140042268:	and    al,0x1
   14004226a:	add    BYTE PTR ss:[rip+0x1000050],dl        # 0x1410422c1
   140042271:	or     al,BYTE PTR [rax+rax*1]
   140042274:	or     dh,BYTE PTR [rax+rdx*1]
   140042277:	add    BYTE PTR [rdx],cl
   140042279:	rol    BYTE PTR [rsi],cl
   14004227b:	jo     0x14004227e
   14004227d:	adc    BYTE PTR [rdi],al
   14004227f:	add    BYTE PTR [rax],dl
   140042281:	xor    al,0x2c
   140042283:	add    BYTE PTR [rax],dl
   140042285:	add    DWORD PTR [rsi],esp
   140042287:	add    BYTE PTR [rcx],cl
   140042289:	lock (bad) 
   14004228b:	jo     0x140042293
   14004228d:	push   rax
   14004228e:	add    BYTE PTR [rax],al
   140042290:	and    DWORD PTR [rip+0xffffffffe4150004],edx        # 0x12419229a
   140042296:	sub    eax,DWORD PTR [rax]
   140042298:	or     BYTE PTR [rdx+rbp*1+0x0],ah
   14004229c:	movabs al,ds:0x7c000173f8000173
   1400422a5:	and    al,BYTE PTR [rax+rax*1]
   1400422a8:	and    DWORD PTR [rax],eax
   1400422aa:	add    BYTE PTR [rax],al
   1400422ac:	movabs al,ds:0x7c000173f8000173
   1400422b5:	and    al,BYTE PTR [rax+rax*1]
   1400422b8:	and    DWORD PTR [rax],eax
   1400422ba:	add    al,0x0
   1400422bc:	add    ah,ah
   1400422be:	sub    eax,DWORD PTR [rax]
   1400422c0:	add    BYTE PTR [rdx+rbp*1+0x0],ah
   1400422c4:	movabs al,ds:0x7c000173f8000173
   1400422cd:	and    al,BYTE PTR [rax+rax*1]
   1400422d0:	add    DWORD PTR [rdi],ecx
   1400422d2:	(bad)  
   1400422d3:	add    BYTE PTR [rdi],cl
   1400422d5:	fs or  eax,0xc340f00
   1400422db:	add    BYTE PTR [rdi],cl
   1400422dd:	xchg   edx,eax
   1400422de:	or     esi,DWORD PTR [rax+0x1]
   1400422e1:	(bad)  
   1400422e2:	or     DWORD PTR [rax],eax
   1400422e4:	(bad)  
   1400422e5:	xor    al,BYTE PTR fs:[rax]
   1400422e8:	(bad)  
   1400422e9:	push   rsp
   1400422ea:	xor    DWORD PTR [rax],eax
   1400422ec:	(bad)  
   1400422ed:	xor    al,0x30
   1400422ef:	add    BYTE PTR [rdi],dl
   1400422f1:	add    DWORD PTR [rsi],ebp
   1400422f3:	add    BYTE PTR [rax],dl
   1400422f5:	jo     0x1400422f7
   1400422f7:	add    BYTE PTR [rcx],ah
   1400422f9:	add    eax,0x74050002
   1400422fe:	(bad)  
   1400422ff:	add    BYTE PTR [rax+0x7e],ah
   140042302:	add    DWORD PTR [rax],eax
   140042304:	ja     0x140042384
   140042306:	add    DWORD PTR [rax],eax
   140042308:	loopne 0x140042326
   14004230a:	add    al,0x0
   14004230c:	and    DWORD PTR [rax],eax
   14004230e:	add    BYTE PTR [rax],al
   140042310:	(bad)  
   140042311:	jle    0x140042314
   140042313:	add    BYTE PTR [rdi+0x7e],dh
   140042316:	add    DWORD PTR [rax],eax
   140042318:	loopne 0x140042336
   14004231a:	add    al,0x0
   14004231c:	add    DWORD PTR [rdi],ebx
   14004231e:	or     eax,0x2e641f00
   140042323:	add    BYTE PTR [rdi],bl
   140042325:	push   rsp
   140042326:	sub    eax,0x2c341f00
   14004232b:	add    BYTE PTR [rdi],bl
   14004232d:	add    DWORD PTR [rsi],esp
   14004232f:	add    BYTE PTR [rax],bl
   140042331:	lock (bad) 
   140042333:	loopne 0x140042349
   140042335:	rcl    BYTE PTR [rdx],1
   140042337:	rcl    BYTE PTR [rax],0x70
   14004233a:	add    BYTE PTR [rax],al
   14004233c:	add    DWORD PTR [rcx+rax*1],eax
   14004233f:	add    BYTE PTR [rdx+riz*2],al
   140042342:	add    BYTE PTR [rax],al
   140042344:	add    DWORD PTR [rcx],ebx
   140042346:	or     al,BYTE PTR [rax]
   140042348:	sbb    DWORD PTR [rsp+rdx*1+0x0],esp
   14004234c:	sbb    DWORD PTR [rbx+rdx*1],esi
   14004234f:	add    BYTE PTR [rcx],bl
   140042351:	mov    dl,0x12
   140042353:	lock adc al,ah
   140042356:	(bad)  
   140042357:	ror    BYTE PTR [rax+rsi*2],0xb
   14004235b:	push   rax
   14004235c:	add    DWORD PTR [rax],esp
   14004235e:	or     eax,DWORD PTR [rax]
   140042360:	and    BYTE PTR [rbp+rbx*1+0x0],dh
   140042364:	and    BYTE PTR [rsp+rbx*1+0x0],ah
   140042368:	and    BYTE PTR [rbx+rbx*1],dh
   14004236b:	add    BYTE PTR [rax],ah
   14004236d:	add    DWORD PTR [rsi],edx
   14004236f:	add    BYTE PTR [rax+rsi*8],dl
   140042372:	adc    ah,al
   140042374:	adc    BYTE PTR [rax+0x0],dl
   140042377:	add    BYTE PTR [rcx],al
   140042379:	adc    al,0x2
   14004237b:	add    BYTE PTR [rdx+rdx*2],dl
   14004237e:	adc    BYTE PTR [rax+0x21],dl
   140042381:	clts   
   140042383:	add    BYTE PTR [rdi],cl
   140042385:	je     0x14004238b
   140042387:	add    BYTE PTR [rdx],cl
   140042389:	fs add eax,0x8340500
   14004238f:	add    BYTE PTR [rax-0x13fffe7c],dh
   140042395:	test   BYTE PTR [rcx],al
   140042397:	add    BYTE PTR [rax+0x23],bh
   14004239a:	add    al,0x0
   14004239c:	and    DWORD PTR [rax],eax
   14004239e:	(bad)  
   14004239f:	add    BYTE PTR [rax],al
   1400423a1:	je     0x1400423a7
   1400423a3:	add    BYTE PTR [rax],al
   1400423a5:	fs add eax,0x8340000
   1400423ab:	add    BYTE PTR [rax-0x13fffe7c],dh
   1400423b1:	test   BYTE PTR [rcx],al
   1400423b3:	add    BYTE PTR [rax+0x23],bh
   1400423b6:	add    al,0x0
   1400423b8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40923c0
   1400423be:	(bad)  
   1400423bf:	add    al,al
   1400423c1:	test   DWORD PTR [rcx],eax
   1400423c3:	add    dh,al
   1400423c5:	test   DWORD PTR [rcx],eax
   1400423c7:	add    BYTE PTR [rax+0x21000408],bl
   1400423cd:	add    eax,0x64050002
   1400423d2:	(bad)  
   1400423d3:	add    dh,al
   1400423d5:	test   DWORD PTR [rcx],eax
   1400423d7:	add    ah,dl
   1400423d9:	test   DWORD PTR [rcx],eax
   1400423db:	add    BYTE PTR [rax+0x21000423],bh
   1400423e1:	add    BYTE PTR [rax],al
   1400423e3:	add    dh,al
   1400423e5:	test   DWORD PTR [rcx],eax
   1400423e7:	add    ah,dl
   1400423e9:	test   DWORD PTR [rcx],eax
   1400423eb:	add    BYTE PTR [rax+0x21000423],bh
   1400423f1:	add    BYTE PTR [rax],al
   1400423f3:	add    al,al
   1400423f5:	test   DWORD PTR [rcx],eax
   1400423f7:	add    dh,al
   1400423f9:	test   DWORD PTR [rcx],eax
   1400423fb:	add    BYTE PTR [rax+0x1000408],bl
   140042401:	(bad)  
   140042402:	add    eax,DWORD PTR [rax]
   140042404:	(bad)  
   140042405:	add    DWORD PTR [rdx],ebx
   140042407:	add    BYTE PTR [rdx],al
   140042409:	push   rax
   14004240a:	add    BYTE PTR [rax],al
   14004240c:	add    DWORD PTR [rsi],eax
   14004240e:	add    al,BYTE PTR [rax]
   140042410:	(bad)  
   140042411:	xchg   edx,eax
   140042412:	add    ah,al
   140042414:	and    DWORD PTR [rip+0x640d0004],ecx        # 0x1a411241e
   14004241a:	(bad)  
   14004241b:	add    BYTE PTR [rip+0x50000c34],al        # 0x190043055
   140042421:	mov    es,WORD PTR [rcx]
   140042423:	add    BYTE PTR [rax+0xc00018e],dl
   140042429:	and    al,0x4
   14004242b:	add    BYTE PTR [rcx],ah
   14004242d:	add    eax,0x74050002
   140042432:	lldt   WORD PTR [rax-0x60fffe72]
   140042439:	mov    es,WORD PTR [rcx]
   14004243b:	add    BYTE PTR [rsp],dl
   14004243e:	add    al,0x0
   140042440:	and    DWORD PTR [rip+0xfffffffff4050002],eax        # 0x134092448
   140042446:	or     BYTE PTR [rax],al
   140042448:	lahf   
   140042449:	mov    es,WORD PTR [rcx]
   14004244b:	add    BYTE PTR [rsi+0x2c00018e],ah
   140042451:	and    al,0x4
   140042453:	add    BYTE PTR [rcx],ah
   140042455:	add    eax,0x54050002
   14004245a:	or     eax,0x18ea600
   14004245f:	add    bl,cl
   140042461:	mov    es,WORD PTR [rcx]
   140042463:	add    BYTE PTR [rax+0x24],al
   140042466:	add    al,0x0
   140042468:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x104092470
   14004246e:	or     DWORD PTR [rax],eax
   140042470:	retf   
   140042471:	mov    es,WORD PTR [rcx]
   140042473:	add    al,dl
   140042475:	mov    es,WORD PTR [rcx]
   140042477:	add    BYTE PTR [rsp+0x4],dl
   14004247b:	add    BYTE PTR [rcx],ah
   14004247d:	add    BYTE PTR [rax],al
   14004247f:	add    bl,cl
   140042481:	mov    es,WORD PTR [rcx]
   140042483:	add    al,dl
   140042485:	mov    es,WORD PTR [rcx]
   140042487:	add    BYTE PTR [rsp+0x4],dl
   14004248b:	add    BYTE PTR [rcx],ah
   14004248d:	add    BYTE PTR [rax],al
   14004248f:	add    BYTE PTR [rsi-0x34fffe72],ah
   140042495:	mov    es,WORD PTR [rcx]
   140042497:	add    BYTE PTR [rax+0x24],al
   14004249a:	add    al,0x0
   14004249c:	and    DWORD PTR [rax],eax
   14004249e:	add    BYTE PTR [rax],al
   1400424a0:	lahf   
   1400424a1:	mov    es,WORD PTR [rcx]
   1400424a3:	add    BYTE PTR [rsi+0x2c00018e],ah
   1400424a9:	and    al,0x4
   1400424ab:	add    BYTE PTR [rcx],ah
   1400424ad:	add    BYTE PTR [rax],al
   1400424af:	add    BYTE PTR [rax-0x60fffe72],dl
   1400424b5:	mov    es,WORD PTR [rcx]
   1400424b7:	add    BYTE PTR [rsp],dl
   1400424ba:	add    al,0x0
   1400424bc:	and    DWORD PTR [rax],eax
   1400424be:	add    al,BYTE PTR [rax]
   1400424c0:	add    BYTE PTR [rsi+rcx*1+0x0],ah
   1400424c4:	push   rax
   1400424c5:	mov    es,WORD PTR [rcx]
   1400424c7:	add    BYTE PTR [rax+0xc00018e],dl
   1400424cd:	and    al,0x4
   1400424cf:	add    BYTE PTR [rcx],ah
   1400424d1:	add    BYTE PTR [rax],al
   1400424d3:	add    BYTE PTR [rax-0x72],dl
   1400424d6:	add    DWORD PTR [rax],eax
   1400424d8:	nop
   1400424d9:	mov    es,WORD PTR [rcx]
   1400424db:	add    BYTE PTR [rsp],cl
   1400424de:	add    al,0x0
   1400424e0:	add    DWORD PTR [rsi],ecx
   1400424e2:	add    eax,DWORD PTR [rax]
   1400424e4:	(bad)  
   1400424e5:	add    DWORD PTR [rsi],edx
   1400424e7:	add    BYTE PTR [rdx],al
   1400424e9:	push   rax
   1400424ea:	add    BYTE PTR [rax],al
   1400424ec:	and    DWORD PTR [rax],ecx
   1400424ee:	add    al,BYTE PTR [rax]
   1400424f0:	or     BYTE PTR [rax+rbx*1],dh
   1400424f3:	add    BYTE PTR [rax-0x11fffe70],al
   1400424f9:	nop
   1400424fa:	add    DWORD PTR [rax],eax
   1400424fc:	loopne 0x140042522
   1400424fe:	add    al,0x0
   140042500:	and    DWORD PTR [rax],eax
   140042502:	add    BYTE PTR [rax],al
   140042504:	adc    BYTE PTR [rax-0x6f11ffff],0x1
   14004250b:	add    al,ah
   14004250d:	and    al,0x4
   14004250f:	add    BYTE PTR [rcx],al
   140042511:	or     al,BYTE PTR [rax+rax*1]
   140042514:	or     al,BYTE PTR [rcx]
   140042516:	adc    DWORD PTR [rax],eax
   140042518:	add    esi,DWORD PTR [rax+0x2]
   14004251b:	xor    BYTE PTR [rcx],ah
   14004251d:	or     BYTE PTR [rdx],al
   14004251f:	add    BYTE PTR [rax],cl
   140042521:	push   rsp
   140042522:	adc    al,0x0
   140042524:	adc    BYTE PTR [rbp-0x69c6ffff],dl
   14004252a:	add    DWORD PTR [rax],eax
   14004252c:	adc    BYTE PTR [rip+0x8210004],ah        # 0x148252536
   140042532:	add    al,BYTE PTR [rax]
   140042534:	or     BYTE PTR [rbp+rdx*1+0x0],ah
   140042538:	cmp    DWORD PTR [rsi-0x6992ffff],edx
   14004253e:	add    DWORD PTR [rax],eax
   140042540:	sbb    al,0x25
   140042542:	add    al,0x0
   140042544:	and    DWORD PTR [rax],eax
   140042546:	add    al,BYTE PTR [rax]
   140042548:	add    BYTE PTR [rbp+rdx*1+0x0],ah
   14004254c:	cmp    DWORD PTR [rsi-0x6992ffff],edx
   140042552:	add    DWORD PTR [rax],eax
   140042554:	sbb    al,0x25
   140042556:	add    al,0x0
   140042558:	and    DWORD PTR [rip+0xfffffffff4250006],esp        # 0x134292564
   14004255e:	adc    BYTE PTR [rax],al
   140042560:	(bad)  
   140042561:	in     al,0x17
   140042563:	add    BYTE PTR [rax],cl
   140042565:	(bad)  
   140042566:	(bad)  
   140042567:	add    dh,ah
   140042569:	xchg   esi,eax
   14004256a:	add    DWORD PTR [rax],eax
   14004256c:	jmp    0x140042504
   14004256e:	add    DWORD PTR [rax],eax
   140042570:	rex.R and eax,0x210004
   140042576:	add    BYTE PTR [rax],al
   140042578:	cmp    DWORD PTR [rsi-0x6992ffff],edx
   14004257e:	add    DWORD PTR [rax],eax
   140042580:	sbb    al,0x25
   140042582:	add    al,0x0
   140042584:	and    DWORD PTR [rax],ecx
   140042586:	add    al,BYTE PTR [rax]
   140042588:	or     BYTE PTR [rax+rbx*1+0x0],ah
   14004258c:	loopne 0x140042525
   14004258e:	add    DWORD PTR [rax],eax
   140042590:	not    BYTE PTR [rdi+0x26800001]
   140042596:	add    al,0x0
   140042598:	and    DWORD PTR [rdi],ebx
   14004259a:	(bad)  
   14004259b:	add    BYTE PTR [rdi],bl
   14004259d:	je     0x1400425b2
   14004259f:	add    BYTE PTR [rdi],dl
   1400425a1:	xor    al,0x17
   1400425a3:	add    BYTE PTR [rax],cl
   1400425a5:	in     al,0x12
   1400425a7:	add    dh,dh
   1400425a9:	xchg   edi,eax
   1400425aa:	add    DWORD PTR [rax],eax
   1400425ac:	(bad)  
   1400425ad:	cwde   
   1400425ae:	add    DWORD PTR [rax],eax
   1400425b0:	test   BYTE PTR [rip+0x210004],ah        # 0x1402525ba
   1400425b6:	add    BYTE PTR [rax],al
   1400425b8:	not    BYTE PTR [rdi-0x67e9ffff]
   1400425be:	add    DWORD PTR [rax],eax
   1400425c0:	test   BYTE PTR [rip+0x210004],ah        # 0x1402525ca
   1400425c6:	add    BYTE PTR [rax],al
   1400425c8:	loopne 0x140042561
   1400425ca:	add    DWORD PTR [rax],eax
   1400425cc:	not    BYTE PTR [rdi+0x26800001]
   1400425d2:	add    al,0x0
   1400425d4:	and    DWORD PTR [rax],eax
   1400425d6:	or     BYTE PTR [rax],al
   1400425d8:	add    ah,ah
   1400425da:	adc    al,BYTE PTR [rax]
   1400425dc:	add    BYTE PTR [rbx+rdx*1+0x0],dh
   1400425e0:	add    BYTE PTR [rax+rbx*1+0x0],ah
   1400425e4:	add    BYTE PTR [rdi+rdx*1],dh
   1400425e7:	add    al,ah
   1400425e9:	xchg   edi,eax
   1400425ea:	add    DWORD PTR [rax],eax
   1400425ec:	not    BYTE PTR [rdi+0x26800001]
   1400425f2:	add    al,0x0
   1400425f4:	add    DWORD PTR [rdi],eax
   1400425f6:	add    eax,DWORD PTR [rax]
   1400425f8:	(bad)  
   1400425f9:	rex.X add esp,DWORD PTR [rax+0x2]
   1400425fd:	xor    BYTE PTR [rax],al
   1400425ff:	add    BYTE PTR [rcx],ah
   140042601:	add    eax,0xe4050002
   140042606:	or     eax,DWORD PTR [rax]
   140042608:	nop
   140042609:	(bad)  
   14004260a:	add    DWORD PTR [rax],eax
   14004260c:	(bad)  
   14004260d:	(bad)  
   14004260e:	add    DWORD PTR [rax],eax
   140042610:	hlt    
   140042611:	and    eax,0x8210004
   140042616:	add    al,0x0
   140042618:	or     BYTE PTR [rax+rcx*1+0x0],dl
   14004261c:	add    ah,ah
   14004261e:	or     eax,DWORD PTR [rax]
   140042620:	nop
   140042621:	(bad)  
   140042622:	add    DWORD PTR [rax],eax
   140042624:	(bad)  
   140042625:	(bad)  
   140042626:	add    DWORD PTR [rax],eax
   140042628:	hlt    
   140042629:	and    eax,0x14210004
   14004262e:	or     BYTE PTR [rax],al
   140042630:	adc    al,0xf4
   140042632:	add    al,0x0
   140042634:	add    eax,0xac4
   140042639:	in     al,0xb
   14004263b:	add    BYTE PTR [rax],al
   14004263d:	push   rsp
   14004263e:	or     BYTE PTR [rax],al
   140042640:	nop
   140042641:	(bad)  
   140042642:	add    DWORD PTR [rax],eax
   140042644:	(bad)  
   140042645:	(bad)  
   140042646:	add    DWORD PTR [rax],eax
   140042648:	hlt    
   140042649:	and    eax,0x5210004
   14004264e:	add    al,BYTE PTR [rax]
   140042650:	add    eax,0x3f000974
   140042655:	fwait
   140042656:	add    DWORD PTR [rax],eax
   140042658:	mov    DWORD PTR [rbx+0x262c0001],ebx
   14004265e:	add    al,0x0
   140042660:	and    DWORD PTR [rax],eax
   140042662:	add    BYTE PTR [rax],al
   140042664:	(bad)  
   140042665:	fwait
   140042666:	add    DWORD PTR [rax],eax
   140042668:	mov    DWORD PTR [rbx+0x262c0001],ebx
   14004266e:	add    al,0x0
   140042670:	and    DWORD PTR [rax],eax
   140042672:	add    BYTE PTR [rax],al
   140042674:	nop
   140042675:	(bad)  
   140042676:	add    DWORD PTR [rax],eax
   140042678:	(bad)  
   140042679:	(bad)  
   14004267a:	add    DWORD PTR [rax],eax
   14004267c:	hlt    
   14004267d:	and    eax,0xe010004
   140042682:	add    eax,DWORD PTR [rax]
   140042684:	(bad)  
   140042685:	add    DWORD PTR [rax+rax*1],edx
   140042688:	add    dl,BYTE PTR [rax+0x0]
   14004268b:	add    BYTE PTR [rcx],ah
   14004268d:	adc    BYTE PTR [rax+rax*1],al
   140042690:	adc    BYTE PTR [rdi+rdx*1+0x0],dh
   140042694:	or     BYTE PTR [rsi+rdx*1],dh
   140042697:	add    BYTE PTR [rax],al
   140042699:	pushf  
   14004269a:	add    DWORD PTR [rax],eax
   14004269c:	movsxd ebx,DWORD PTR [rcx+rax*1+0x4268000]
   1400426a3:	add    BYTE PTR [rcx],ah
   1400426a5:	add    BYTE PTR [rax],al
   1400426a7:	add    BYTE PTR [rax],al
   1400426a9:	pushf  
   1400426aa:	add    DWORD PTR [rax],eax
   1400426ac:	movsxd ebx,DWORD PTR [rcx+rax*1+0x4268000]
   1400426b3:	add    BYTE PTR [rcx],ah
   1400426b5:	adc    al,BYTE PTR [rax+rax*1]
   1400426b8:	adc    dh,BYTE PTR [rsp+rcx*1+0x0]
   1400426bc:	add    eax,0xb0000f34
   1400426c1:	lahf   
   1400426c2:	add    DWORD PTR [rax],eax
   1400426c4:	(bad)  
   1400426c5:	lahf   
   1400426c6:	add    DWORD PTR [rax],eax
   1400426c8:	cmp    al,0x6
   1400426ca:	add    al,0x0
   1400426cc:	and    DWORD PTR [rax],eax
   1400426ce:	add    BYTE PTR [rax],al
   1400426d0:	mov    al,0x9f
   1400426d2:	add    DWORD PTR [rax],eax
   1400426d4:	(bad)  
   1400426d5:	lahf   
   1400426d6:	add    DWORD PTR [rax],eax
   1400426d8:	cmp    al,0x6
   1400426da:	add    al,0x0
   1400426dc:	add    DWORD PTR [rip+0x34050002],eax        # 0x1740926e4
   1400426e2:	add    DWORD PTR [rax],eax
   1400426e4:	add    DWORD PTR [rdx],esp
   1400426e6:	(bad)  
   1400426e7:	xor    eax,0xe3422
   1400426ec:	sbb    esi,DWORD PTR [rbx]
   1400426ee:	(bad)  
   1400426ef:	xchg   edx,eax
   1400426f0:	adc    dh,BYTE PTR [rax+0x11]
   1400426f3:	(bad)  
   1400426f4:	adc    BYTE PTR [rax+0x0],dl
   1400426f7:	add    BYTE PTR [rcx],ah
   1400426f9:	add    eax,0x64050002
   1400426fe:	(bad)  
   1400426ff:	add    BYTE PTR [rax],ah
   140042701:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042702:	add    DWORD PTR [rax],eax
   140042704:	fwait
   140042705:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042706:	add    DWORD PTR [rax],eax
   140042708:	sbb    BYTE PTR [rsp+rax*1],bh
   14004270b:	add    BYTE PTR [rcx],ah
   14004270d:	add    BYTE PTR [rax],al
   14004270f:	add    BYTE PTR [rax],ah
   140042711:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042712:	add    DWORD PTR [rax],eax
   140042714:	fwait
   140042715:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140042716:	add    DWORD PTR [rax],eax
   140042718:	sbb    BYTE PTR [rsp+rax*1],bh
   14004271b:	add    BYTE PTR [rcx],al
   14004271d:	or     eax,0x340d0006
   140042722:	or     al,BYTE PTR [rax]
   140042724:	or     eax,0x7f00932
   140042729:	jo     0x140042731
   14004272b:	push   rax
   14004272c:	and    DWORD PTR [rdx],ecx
   14004272e:	add    al,0x0
   140042730:	or     ah,ah
   140042732:	or     DWORD PTR [rax],eax
   140042734:	add    eax,0x50000864
   140042739:	lods   eax,DWORD PTR ds:[rsi]
   14004273a:	add    DWORD PTR [rax],eax
   14004273c:	sub    DWORD PTR [rbp+0x271c0001],0x4
   140042743:	add    BYTE PTR [rcx],ah
   140042745:	add    BYTE PTR [rax],al
   140042747:	add    BYTE PTR [rax-0x53],dl
   14004274a:	add    DWORD PTR [rax],eax
   14004274c:	sub    DWORD PTR [rbp+0x271c0001],0x4
   140042753:	add    BYTE PTR [rcx],al
   140042755:	and    DWORD PTR [rbx],ecx
   140042757:	add    BYTE PTR [rcx],ah
   140042759:	adc    BYTE PTR fs:[rdx],al
   14004275c:	and    DWORD PTR [rdi+rcx*1+0x2],edx
   140042760:	and    DWORD PTR [rsi+rcx*1],esi
   140042763:	add    ah,BYTE PTR [rcx]
   140042765:	add    DWORD PTR [rdx],ecx
   140042767:	add    dl,BYTE PTR [rax+rsi*8]
   14004276a:	adc    ah,al
   14004276c:	adc    BYTE PTR [rax+0x0],dh
   14004276f:	add    BYTE PTR [rcx],al
   140042771:	clts   
   140042773:	add    BYTE PTR [rdi],cl
   140042775:	or     BYTE PTR fs:[rax],al
   140042778:	sysenter 
   14004277a:	(bad)  
   14004277b:	add    BYTE PTR [rdi],cl
   14004277d:	xor    cl,BYTE PTR [rbx]
   14004277f:	jo     0x1400427a2
   140042781:	add    eax,0x54050002
   140042786:	(bad)  
   140042787:	add    BYTE PTR [rax],dh
   140042789:	mov    ch,0x1
   14004278b:	add    bl,al
   14004278d:	mov    ch,0x1
   14004278f:	add    BYTE PTR [rax+0x27],dh
   140042792:	add    al,0x0
   140042794:	and    DWORD PTR [rax],eax
   140042796:	add    BYTE PTR [rax],al
   140042798:	xor    BYTE PTR [rbp-0x4a3cffff],dh
   14004279e:	add    DWORD PTR [rax],eax
   1400427a0:	jo     0x1400427c9
   1400427a2:	add    al,0x0
   1400427a4:	add    DWORD PTR [rsi+0xa],eax
   1400427a7:	add    BYTE PTR [rsi-0x3c],al
   1400427aa:	add    eax,0x6744100
   1400427af:	add    BYTE PTR [rsp+rsi*1],bh
   1400427b2:	or     al,0x0
   1400427b4:	(bad)  
   1400427b5:	jb     0x1400427c1
   1400427b7:	lock or al,dl
   1400427ba:	(bad)  
   1400427bb:	(bad)  
   1400427bc:	and    DWORD PTR [rdx],ecx
   1400427be:	add    al,0x0
   1400427c0:	or     ah,ah
   1400427c2:	add    al,0x0
   1400427c4:	add    eax,0xf0000754
   1400427c9:	mov    cl,0x1
   1400427cb:	add    BYTE PTR [rdx-0x4e],ch
   1400427ce:	add    DWORD PTR [rax],eax
   1400427d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400427d1:	(bad)  
   1400427d2:	add    al,0x0
   1400427d4:	and    DWORD PTR [rax],eax
   1400427d6:	add    BYTE PTR [rax],al
   1400427d8:	lock mov cl,0x1
   1400427db:	add    BYTE PTR [rdx-0x4e],ch
   1400427de:	add    DWORD PTR [rax],eax
   1400427e0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400427e1:	(bad)  
   1400427e2:	add    al,0x0
   1400427e4:	add    DWORD PTR [rbx],edx
   1400427e6:	or     BYTE PTR [rax],al
   1400427e8:	adc    edx,DWORD PTR [rdx+rcx*1+0x0]
   1400427ec:	adc    esi,DWORD PTR [rcx+rcx*1]
   1400427ef:	add    BYTE PTR [rbx],dl
   1400427f1:	xor    cl,BYTE PTR [rdi]
   1400427f3:	lock or eax,0x21600be0
   1400427f9:	add    eax,0x74050002
   1400427fe:	or     BYTE PTR [rax],al
   140042800:	xor    BYTE PTR [rcx-0x4e87ffff],dh
   140042806:	add    DWORD PTR [rax],eax
   140042808:	in     al,0x27
   14004280a:	add    al,0x0
   14004280c:	and    DWORD PTR [rax],eax
   14004280e:	add    BYTE PTR [rax],al
   140042810:	xor    BYTE PTR [rcx-0x4e87ffff],dh
   140042816:	add    DWORD PTR [rax],eax
   140042818:	in     al,0x27
   14004281a:	add    al,0x0
   14004281c:	add    DWORD PTR [rcx],ecx
   14004281e:	add    eax,DWORD PTR [rax]
   140042820:	or     DWORD PTR [rcx],eax
   140042822:	add    BYTE PTR [rdx],r8b
   140042825:	xor    BYTE PTR [rax],al
   140042827:	add    BYTE PTR [rcx],ah
   140042829:	add    eax,0x74050002
   14004282e:	(bad)  
   14004282f:	add    BYTE PTR [rax-0x46],dl
   140042832:	add    DWORD PTR [rax],eax
   140042834:	mov    ah,0xba
   140042836:	add    DWORD PTR [rax],eax
   140042838:	cwde   
   140042839:	or     BYTE PTR [rax+rax*1],al
   14004283c:	and    DWORD PTR [rax],eax
   14004283e:	add    BYTE PTR [rax],al
   140042840:	push   rax
   140042841:	mov    edx,0xbab40001
   140042846:	add    DWORD PTR [rax],eax
   140042848:	cwde   
   140042849:	or     BYTE PTR [rax+rax*1],al
   14004284c:	add    DWORD PTR [rcx+rax*1],eax
   14004284f:	add    BYTE PTR [rdx+rax*2],al
   140042852:	add    BYTE PTR [rax],al
   140042854:	add    DWORD PTR [rax+0x8],esi
   140042857:	add    BYTE PTR [rax+0x78],dh
   14004285a:	add    al,0x0
   14004285c:	(bad)  
   14004285d:	str    WORD PTR fs:[rdx]
   140042861:	xor    al,0x11
   140042863:	add    BYTE PTR [rdx],cl
   140042865:	mov    dl,0x6
   140042867:	jo     0x14004288a
   140042869:	add    eax,0x68050002
   14004286e:	add    eax,0x1c3f000
   140042873:	add    BYTE PTR [rdi-0x3c],bh
   140042876:	add    DWORD PTR [rax],eax
   140042878:	push   rsp
   140042879:	sub    BYTE PTR [rax+rax*1],al
   14004287c:	and    DWORD PTR [rax],eax
   14004287e:	add    BYTE PTR [rax],al
   140042880:	lock ret 
   140042882:	add    DWORD PTR [rax],eax
   140042884:	jg     0x14004284a
   140042886:	add    DWORD PTR [rax],eax
   140042888:	push   rsp
   140042889:	sub    BYTE PTR [rax+rax*1],al
   14004288c:	add    DWORD PTR [rbx],ecx
   14004288e:	add    al,BYTE PTR [rax]
   140042890:	or     edx,DWORD PTR [rdx+0x5213007]
   140042896:	add    al,BYTE PTR [rax]
   140042898:	add    eax,0x10000468
   14004289d:	ret    0x1
   1400428a0:	jp     0x140042864
   1400428a2:	add    DWORD PTR [rax],eax
   1400428a4:	mov    WORD PTR [rax],gs
   1400428a6:	add    al,0x0
   1400428a8:	and    DWORD PTR [rax],eax
   1400428aa:	add    BYTE PTR [rax],al
   1400428ac:	adc    dl,al
   1400428ae:	add    DWORD PTR [rax],eax
   1400428b0:	jp     0x140042874
   1400428b2:	add    DWORD PTR [rax],eax
   1400428b4:	mov    WORD PTR [rax],gs
   1400428b6:	add    al,0x0
   1400428b8:	and    DWORD PTR [rip+0x68050002],eax        # 0x1a80928c0
   1400428be:	add    al,0x0
   1400428c0:	lock ret 0x1
   1400428c4:	jo     0x140042889
   1400428c6:	add    DWORD PTR [rax],eax
   1400428c8:	jl     0x1400428df
   1400428ca:	add    al,0x0
   1400428cc:	and    DWORD PTR [rax],eax
   1400428ce:	add    BYTE PTR [rax],al
   1400428d0:	lock ret 0x1
   1400428d4:	jo     0x140042899
   1400428d6:	add    DWORD PTR [rax],eax
   1400428d8:	jl     0x1400428ef
   1400428da:	add    al,0x0
   1400428dc:	add    DWORD PTR [rcx],ebp
   1400428de:	or     eax,0x2682925
   1400428e3:	add    BYTE PTR [rsi],bl
   1400428e5:	je     0x1400428f3
   1400428e7:	add    BYTE PTR [rdi],dl
   1400428e9:	or     eax,DWORD PTR fs:[rax]
   1400428ec:	adc    esi,DWORD PTR [rdx+rcx*1]
   1400428ef:	add    BYTE PTR [rdi],cl
   1400428f1:	and    ecx,DWORD PTR [rdx]
   1400428f3:	push   rdx
   1400428f4:	(bad)  
   1400428f5:	lock add al,0xe0
   1400428f8:	add    dl,BYTE PTR [rax+0x0]
   1400428fb:	add    BYTE PTR [rcx],ah
   1400428fd:	add    eax,0x54050002
   140042902:	(bad)  
   140042903:	add    al,ah
   140042905:	mov    ebx,0xbbfd0001
   14004290a:	add    DWORD PTR [rax],eax
   14004290c:	cwde   
   14004290d:	or     BYTE PTR [rax+rax*1],al
   140042910:	and    DWORD PTR [rdx],esp
   140042912:	add    al,0x0
   140042914:	and    ah,ah
   140042916:	or     DWORD PTR [rax],eax
   140042918:	add    eax,0xfd000764
   14004291d:	mov    ebx,0xbc0e0001
   140042922:	add    DWORD PTR [rax],eax
   140042924:	cld    
   140042925:	sub    BYTE PTR [rax+rax*1],al
   140042928:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4092930
   14004292e:	or     BYTE PTR [rax],al
   140042930:	(bad)  
   140042931:	mov    esp,0xbc440001
   140042936:	add    DWORD PTR [rax],eax
   140042938:	adc    BYTE PTR [rcx],ch
   14004293a:	add    al,0x0
   14004293c:	and    DWORD PTR [rax],eax
   14004293e:	add    BYTE PTR [rax],al
   140042940:	(bad)  
   140042941:	mov    esp,0xbc440001
   140042946:	add    DWORD PTR [rax],eax
   140042948:	adc    BYTE PTR [rcx],ch
   14004294a:	add    al,0x0
   14004294c:	and    DWORD PTR [rax],eax
   14004294e:	add    al,BYTE PTR [rax]
   140042950:	add    ah,ah
   140042952:	or     DWORD PTR [rax],eax
   140042954:	std    
   140042955:	mov    ebx,0xbc0e0001
   14004295a:	add    DWORD PTR [rax],eax
   14004295c:	cld    
   14004295d:	sub    BYTE PTR [rax+rax*1],al
   140042960:	and    DWORD PTR [rax],eax
   140042962:	add    BYTE PTR [rax],al
   140042964:	loopne 0x140042921
   140042966:	add    DWORD PTR [rax],eax
   140042968:	std    
   140042969:	mov    ebx,0x8980001
   14004296e:	add    al,0x0
   140042970:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4092978
   140042976:	(bad)  
   140042977:	add    BYTE PTR [rax-0x42fffe40],ah
   14004297d:	rol    BYTE PTR [rcx],0x0
   140042980:	cwde   
   140042981:	or     BYTE PTR [rax+rax*1],al
   140042984:	and    DWORD PTR [rax],eax
   140042986:	add    BYTE PTR [rax],al
   140042988:	movabs al,ds:0x980001c0bd0001c0
   140042991:	or     BYTE PTR [rax+rax*1],al
   140042994:	and    DWORD PTR [rip+0x54050002],eax        # 0x19409299c
   14004299a:	(bad)  
   14004299b:	add    al,dh
   14004299d:	mov    esi,0xbf5d0001
   1400429a2:	add    DWORD PTR [rax],eax
   1400429a4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400429a5:	sbb    eax,DWORD PTR [rax+rax*1]
   1400429a8:	and    DWORD PTR [rax],eax
   1400429aa:	add    BYTE PTR [rax],al
   1400429ac:	lock mov esi,0xbf5d0001
   1400429b2:	add    DWORD PTR [rax],eax
   1400429b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400429b5:	sbb    eax,DWORD PTR [rax+rax*1]
   1400429b8:	add    DWORD PTR [rcx+rax*1],eax
   1400429bb:	add    BYTE PTR [rdx+riz*4],al
   1400429be:	add    BYTE PTR [rax],al
   1400429c0:	and    DWORD PTR [rip+0x54050002],eax        # 0x1940929c8
   1400429c6:	or     eax,0x1c65000
   1400429cb:	add    BYTE PTR [rcx-0x3a],dh
   1400429ce:	add    DWORD PTR [rax],eax
   1400429d0:	mov    eax,0x21000429
   1400429d5:	adc    al,0x8
   1400429d7:	add    BYTE PTR [rsp+riz*8],dl
   1400429da:	or     al,BYTE PTR [rax]
   1400429dc:	pcmpeqb mm1,QWORD PTR [rdi]
   1400429df:	add    BYTE PTR [rdx],cl
   1400429e1:	fs (bad) 
   1400429e3:	add    BYTE PTR [rip+0x71000c34],al        # 0x1b104361d
   1400429e9:	mov    BYTE PTR [rcx],0x0
   1400429ec:	(bad)  
   1400429ed:	mov    BYTE PTR [rcx],0x0
   1400429f0:	shr    BYTE PTR [rcx],0x4
   1400429f3:	add    BYTE PTR [rcx],ah
   1400429f5:	add    BYTE PTR [rax],al
   1400429f7:	add    BYTE PTR [rcx-0x3a],dh
   1400429fa:	add    DWORD PTR [rax],eax
   1400429fc:	(bad)  
   1400429fd:	mov    BYTE PTR [rcx],0x0
   140042a00:	shr    BYTE PTR [rcx],0x4
   140042a03:	add    BYTE PTR [rcx],ah
   140042a05:	add    BYTE PTR [rax],al
   140042a07:	add    BYTE PTR [rax-0x3a],dl
   140042a0a:	add    DWORD PTR [rax],eax
   140042a0c:	jno    0x1400429d4
   140042a0e:	add    DWORD PTR [rax],eax
   140042a10:	mov    eax,0x1000429
   140042a15:	rex.X (bad) 
   140042a17:	add    BYTE PTR [rdx+0x34],al
   140042a1a:	adc    BYTE PTR [rax],al
   140042a1c:	or     dh,BYTE PTR [rdx-0x3ffb0ffa]
   140042a22:	add    ah,BYTE PTR [rax+0x21]
   140042a25:	sbb    BYTE PTR [rax],cl
   140042a27:	add    BYTE PTR [rax],bl
   140042a29:	in     al,0x8
   140042a2b:	add    BYTE PTR [rbx],dl
   140042a2d:	(bad)  
   140042a2e:	or     DWORD PTR [rax],eax
   140042a30:	(bad)  
   140042a31:	je     0x140042a3d
   140042a33:	add    BYTE PTR [rip+0xffffffff80000b54],al        # 0xc004358d
   140042a39:	leave  
   140042a3a:	add    DWORD PTR [rax],eax
   140042a3c:	or     dl,cl
   140042a3e:	add    DWORD PTR [rax],eax
   140042a40:	adc    al,0x2a
   140042a42:	add    al,0x0
   140042a44:	and    DWORD PTR [rax],eax
   140042a46:	add    BYTE PTR [rax],al
   140042a48:	or     cl,0x1
   140042a4b:	add    BYTE PTR [rax],cl
   140042a4d:	retf   0x1
   140042a50:	adc    al,0x2a
   140042a52:	add    al,0x0
   140042a54:	add    DWORD PTR [rax+rcx*1],edx
   140042a57:	add    BYTE PTR [rsp+riz*2],dl
   140042a5a:	(bad)  
   140042a5b:	add    BYTE PTR [rsp+rdx*2],dl
   140042a5e:	or     eax,0xc341400
   140042a63:	add    BYTE PTR [rdx+rdx*4],dl
   140042a66:	adc    BYTE PTR [rax+0x21],dh
   140042a69:	add    eax,0xe4050002
   140042a6e:	(bad)  
   140042a6f:	add    BYTE PTR [rax],ah
   140042a71:	int3   
   140042a72:	add    DWORD PTR [rax],eax
   140042a74:	rex.WR int3 
   140042a76:	add    DWORD PTR [rax],eax
   140042a78:	rcl    BYTE PTR [rbx],0x4
   140042a7b:	add    BYTE PTR [rcx],ah
   140042a7d:	add    BYTE PTR [rax],al
   140042a7f:	add    BYTE PTR [rax],ah
   140042a81:	int3   
   140042a82:	add    DWORD PTR [rax],eax
   140042a84:	rex.WR int3 
   140042a86:	add    DWORD PTR [rax],eax
   140042a88:	rcl    BYTE PTR [rbx],0x4
   140042a8b:	add    BYTE PTR [rcx],al
   140042a8d:	add    al,BYTE PTR [rcx]
   140042a8f:	add    BYTE PTR [rdx],al
   140042a91:	xor    BYTE PTR [rax],al
   140042a93:	add    BYTE PTR [rcx],ah
   140042a95:	add    eax,0x74050002
   140042a9a:	add    al,BYTE PTR [rax]
   140042a9c:	xor    bh,dl
   140042a9e:	add    DWORD PTR [rax],eax
   140042aa0:	rex.WRB xlat BYTE PTR ds:[rbx]
   140042aa2:	add    DWORD PTR [rax],eax
   140042aa4:	mov    WORD PTR [rdx],gs
   140042aa6:	add    al,0x0
   140042aa8:	and    DWORD PTR [rax],eax
   140042aaa:	add    BYTE PTR [rax],al
   140042aac:	xor    bh,dl
   140042aae:	add    DWORD PTR [rax],eax
   140042ab0:	rex.WRB xlat BYTE PTR ds:[rbx]
   140042ab2:	add    DWORD PTR [rax],eax
   140042ab4:	mov    WORD PTR [rdx],gs
   140042ab6:	add    al,0x0
   140042ab8:	and    DWORD PTR [rdx+rax*1],eax
   140042abb:	add    BYTE PTR [rsp+rsi*2],al
   140042abe:	add    BYTE PTR [rax],al
   140042ac0:	movabs al,ds:0x1d8a40001d8
   140042ac9:	sub    eax,DWORD PTR [rax+rax*1]
   140042acc:	and    DWORD PTR [rip+0x34050002],eax        # 0x174092ad4
   140042ad2:	add    al,BYTE PTR [rax]
   140042ad4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140042ad5:	fadd   DWORD PTR [rcx]
   140042ad7:	add    BYTE PTR [rax],cl
   140042ad9:	fld    DWORD PTR [rcx]
   140042adb:	add    BYTE PTR [rax+0x2100042a],bh
   140042ae1:	add    BYTE PTR [rax],al
   140042ae3:	add    BYTE PTR [rax+rbx*8-0x26f7ffff],ah
   140042aea:	add    DWORD PTR [rax],eax
   140042aec:	mov    eax,0x2100042a
   140042af1:	add    BYTE PTR [rax],al
   140042af3:	add    BYTE PTR [rax-0x5bfffe28],ah
   140042af9:	fadd   DWORD PTR [rcx]
   140042afb:	add    BYTE PTR [rax],al
   140042afd:	sub    eax,DWORD PTR [rax+rax*1]
   140042b00:	add    DWORD PTR [rcx+rax*1],eax
   140042b03:	add    BYTE PTR [rdx+rax*1],al
   140042b06:	add    BYTE PTR [rax],al
   140042b08:	and    DWORD PTR [rdx+rax*1],eax
   140042b0b:	add    BYTE PTR [rsp+rsi*2],al
   140042b0e:	add    BYTE PTR [rax],al
   140042b10:	add    dl,bl
   140042b12:	add    DWORD PTR [rax],eax
   140042b14:	add    al,0xda
   140042b16:	add    DWORD PTR [rax],eax
   140042b18:	add    BYTE PTR [rbx],ch
   140042b1a:	add    al,0x0
   140042b1c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174092b24
   140042b22:	add    al,BYTE PTR [rax]
   140042b24:	add    al,0xda
   140042b26:	add    DWORD PTR [rax],eax
   140042b28:	fiadd  DWORD PTR [ecx]
   140042b2b:	add    BYTE PTR [rax],cl
   140042b2d:	sub    eax,DWORD PTR [rax+rax*1]
   140042b30:	and    DWORD PTR [rax],eax
   140042b32:	add    BYTE PTR [rax],al
   140042b34:	add    al,0xda
   140042b36:	add    DWORD PTR [rax],eax
   140042b38:	fiadd  DWORD PTR [ecx]
   140042b3b:	add    BYTE PTR [rax],cl
   140042b3d:	sub    eax,DWORD PTR [rax+rax*1]
   140042b40:	and    DWORD PTR [rax],eax
   140042b42:	add    BYTE PTR [rax],al
   140042b44:	add    dl,bl
   140042b46:	add    DWORD PTR [rax],eax
   140042b48:	add    al,0xda
   140042b4a:	add    DWORD PTR [rax],eax
   140042b4c:	add    BYTE PTR [rbx],ch
   140042b4e:	add    al,0x0
   140042b50:	add    DWORD PTR [rcx],ecx
   140042b52:	add    al,0x0
   140042b54:	or     DWORD PTR [rdx],esi
   140042b56:	add    eax,0x27003e0
   140042b5b:	(bad)  
   140042b5c:	and    DWORD PTR [rdi],edx
   140042b5e:	(bad)  
   140042b5f:	add    BYTE PTR [rdi],dl
   140042b61:	xor    al,0x8
   140042b63:	add    BYTE PTR [rdi],cl
   140042b65:	hlt    
   140042b66:	or     al,BYTE PTR [rax]
   140042b68:	add    eax,0xe0000954
   140042b6d:	rol    BYTE PTR [rcx],cl
   140042b6f:	add    bh,bh
   140042b71:	rol    BYTE PTR [rcx],cl
   140042b73:	add    BYTE PTR [rax+0x2b],dl
   140042b76:	add    al,0x0
   140042b78:	and    DWORD PTR [rax],eax
   140042b7a:	add    BYTE PTR [rax],al
   140042b7c:	loopne 0x140042b50
   140042b7e:	add    DWORD PTR [rax],eax
   140042b80:	call   rdx
   140042b82:	add    DWORD PTR [rax],eax
   140042b84:	push   rax
   140042b85:	sub    eax,DWORD PTR [rax+rax*1]
   140042b88:	add    DWORD PTR [rdi],edx
   140042b8a:	or     al,BYTE PTR [rax]
   140042b8c:	(bad)  
   140042b8d:	push   rsp
   140042b8e:	or     al,0x0
   140042b90:	(bad)  
   140042b91:	xor    al,0xb
   140042b93:	add    BYTE PTR [rdi],dl
   140042b95:	xor    dl,BYTE PTR [rbx]
   140042b97:	lock adc eax,esp
   140042b9a:	(bad)  
   140042b9c:	or     eax,0x21700bc0
   140042ba1:	add    eax,0x64050002
   140042ba6:	or     al,BYTE PTR [rax]
   140042ba8:	mov    al,0xce
   140042baa:	add    DWORD PTR [rax],eax
   140042bac:	dec    esi
   140042bae:	add    DWORD PTR [rax],eax
   140042bb0:	mov    BYTE PTR [rbx],ch
   140042bb2:	add    al,0x0
   140042bb4:	and    DWORD PTR [rax],eax
   140042bb6:	add    BYTE PTR [rax],al
   140042bb8:	mov    al,0xce
   140042bba:	add    DWORD PTR [rax],eax
   140042bbc:	dec    esi
   140042bbe:	add    DWORD PTR [rax],eax
   140042bc0:	mov    BYTE PTR [rbx],ch
   140042bc2:	add    al,0x0
   140042bc4:	and    DWORD PTR [rax],edx
   140042bc6:	add    al,0x0
   140042bc8:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140042bcc:	add    eax,0x10000634
   140042bd1:	rol    DWORD PTR [rcx],1
   140042bd3:	add    BYTE PTR [rcx],dh
   140042bd5:	rol    DWORD PTR [rcx],1
   140042bd7:	add    ah,ch
   140042bd9:	xor    al,BYTE PTR [rax+rax*1]
   140042bdc:	and    DWORD PTR [rax],eax
   140042bde:	add    al,0x0
   140042be0:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140042be4:	add    BYTE PTR [rsi+rax*1],dh
   140042be7:	add    BYTE PTR [rax],dl
   140042be9:	rol    DWORD PTR [rcx],1
   140042beb:	add    BYTE PTR [rcx],dh
   140042bed:	rol    DWORD PTR [rcx],1
   140042bef:	add    ah,ch
   140042bf1:	xor    al,BYTE PTR [rax+rax*1]
   140042bf4:	and    DWORD PTR [rax],eax
   140042bf6:	add    BYTE PTR [rax],al
   140042bf8:	adc    cl,dl
   140042bfa:	add    DWORD PTR [rax],eax
   140042bfc:	xor    ecx,edx
   140042bfe:	add    DWORD PTR [rax],eax
   140042c00:	in     al,dx
   140042c01:	xor    al,BYTE PTR [rax+rax*1]
   140042c04:	add    DWORD PTR [rdi],edx
   140042c06:	or     DWORD PTR [rax],eax
   140042c08:	(bad)  
   140042c09:	or     BYTE PTR fs:[rcx],al
   140042c0c:	(bad)  
   140042c0d:	push   rsp
   140042c0e:	(bad)  
   140042c0f:	add    DWORD PTR [rdi],edx
   140042c11:	xor    al,0x6
   140042c13:	add    DWORD PTR [rdi],edx
   140042c15:	add    DWORD PTR [rcx+rax*1],eax
   140042c18:	adc    BYTE PTR [rax+0x0],dh
   140042c1b:	add    BYTE PTR [rcx],al
   140042c1d:	or     eax,DWORD PTR [rax+rax*1]
   140042c20:	or     ebp,DWORD PTR [rax+0x2]
   140042c23:	add    BYTE PTR [rsi],al
   140042c25:	push   rdx
   140042c26:	add    dh,BYTE PTR [rax]
   140042c28:	add    DWORD PTR [rdi],ecx
   140042c2a:	(bad)  
   140042c2b:	add    BYTE PTR [rdi],cl
   140042c2d:	or     eax,DWORD PTR fs:[rax]
   140042c30:	sysenter 
   140042c32:	or     DWORD PTR [rax],eax
   140042c34:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140042c37:	jo     0x140042c3a
   140042c39:	syscall 
   140042c3b:	add    BYTE PTR [rdi],cl
   140042c3d:	movabs ds:0x30066007c009d00b,al
   140042c46:	add    BYTE PTR [rax],al
   140042c48:	and    DWORD PTR [rip+0xffffffffe4050002],eax        # 0x124092c50
   140042c4e:	or     DWORD PTR [rax],eax
   140042c50:	shl    dl,0x1
   140042c53:	add    BYTE PTR [rdi],al
   140042c55:	repz add DWORD PTR [rax],eax
   140042c58:	cmp    BYTE PTR [rsp+rax*1],ch
   140042c5b:	add    BYTE PTR [rcx],ah
   140042c5d:	sub    BYTE PTR [rax],cl
   140042c5f:	add    BYTE PTR [rax],ch
   140042c61:	hlt    
   140042c62:	or     BYTE PTR [rax],al
   140042c64:	sbb    BYTE PTR [rdx+rcx*1+0x0],dh
   140042c68:	or     BYTE PTR [rdx+rdx*1+0x0],dl
   140042c6c:	add    ah,ah
   140042c6e:	or     DWORD PTR [rax],eax
   140042c70:	shl    dl,0x1
   140042c73:	add    BYTE PTR [rdi],al
   140042c75:	repz add DWORD PTR [rax],eax
   140042c78:	cmp    BYTE PTR [rsp+rax*1],ch
   140042c7b:	add    BYTE PTR [rcx],al
   140042c7d:	adc    DWORD PTR [rsi],eax
   140042c7f:	add    BYTE PTR [rcx],dl
   140042c81:	push   rsp
   140042c82:	(bad)  
   140042c83:	add    BYTE PTR [rcx],dl
   140042c85:	repnz or dh,al
   140042c88:	or     al,ah
   140042c8a:	(bad)  
   140042c8b:	(bad)  
   140042c8c:	and    DWORD PTR [rax],ecx
   140042c8e:	add    al,BYTE PTR [rax]
   140042c90:	or     BYTE PTR [rsp+rdx*1],dh
   140042c93:	add    BYTE PTR [rax-0x15],al
   140042c96:	add    DWORD PTR [rax],eax
   140042c98:	imul   ebp,ebx,0x2c7c0001
   140042c9e:	add    al,0x0
   140042ca0:	and    DWORD PTR [rax],ecx
   140042ca2:	add    al,BYTE PTR [rax]
   140042ca4:	or     BYTE PTR [rbp+rdx*1+0x0],dh
   140042ca8:	imul   ebp,ebx,0xebcb0001
   140042cae:	add    DWORD PTR [rax],eax
   140042cb0:	mov    WORD PTR [rsp+rax*1],gs
   140042cb3:	add    BYTE PTR [rcx],ah
   140042cb5:	add    BYTE PTR [rax],al
   140042cb7:	add    BYTE PTR [rcx-0x15],ch
   140042cba:	add    DWORD PTR [rax],eax
   140042cbc:	retf   
   140042cbd:	jmp    0x140042cc0
   140042cbf:	add    BYTE PTR [rsp+rbp*1+0x210004],cl
   140042cc6:	add    BYTE PTR [rax],al
   140042cc8:	rex jmp 0x140042ccc
   140042ccb:	add    BYTE PTR [rcx-0x15],ch
   140042cce:	add    DWORD PTR [rax],eax
   140042cd0:	jl     0x140042cfe
   140042cd2:	add    al,0x0
   140042cd4:	add    DWORD PTR [rbx],ebp
   140042cd6:	or     al,BYTE PTR [rax]
   140042cd8:	sub    eax,DWORD PTR [rcx]
   140042cda:	cmp    eax,0x14f01610
   140042cdf:	loopne 0x140042cf3
   140042ce1:	rcl    BYTE PTR [rax],1
   140042ce3:	ror    BYTE PTR [rsi],0x70
   140042ce6:	or     eax,0xb300c60
   140042ceb:	push   rax
   140042cec:	add    DWORD PTR [rax],edx
   140042cee:	add    eax,DWORD PTR [rax]
   140042cf0:	adc    BYTE PTR [rdx+0x300b700c],ah
   140042cf6:	add    BYTE PTR [rax],al
   140042cf8:	and    DWORD PTR [rdx],ecx
   140042cfa:	add    al,0x0
   140042cfc:	or     ah,BYTE PTR [rdx+rcx*1+0x0]
   140042d00:	add    eax,0xd0000f54
   140042d05:	fiadd  WORD PTR [rcx]
   140042d07:	add    BYTE PTR [rax],cl
   140042d09:	fild   WORD PTR [rcx]
   140042d0b:	add    ah,ch
   140042d0d:	sub    al,0x4
   140042d0f:	add    BYTE PTR [rcx],ah
   140042d11:	add    BYTE PTR [rdx],al
   140042d13:	add    BYTE PTR [rax],al
   140042d15:	or     al,BYTE PTR fs:[rax]
   140042d18:	rcr    dh,1
   140042d1a:	add    DWORD PTR [rax],eax
   140042d1c:	or     bh,bl
   140042d1e:	add    DWORD PTR [rax],eax
   140042d20:	in     al,dx
   140042d21:	sub    al,0x4
   140042d23:	add    BYTE PTR [rcx],ah
   140042d25:	add    BYTE PTR [rax],al
   140042d27:	add    al,dl
   140042d29:	fiadd  WORD PTR [rcx]
   140042d2b:	add    BYTE PTR [rax],cl
   140042d2d:	fild   WORD PTR [rcx]
   140042d2f:	add    ah,ch
   140042d31:	sub    al,0x4
   140042d33:	add    BYTE PTR [rcx],al
   140042d35:	or     DWORD PTR [rdx],eax
   140042d37:	add    BYTE PTR [rcx],cl
   140042d39:	xor    al,BYTE PTR [rip+0x6180130]        # 0x1461c2e6f
   140042d3f:	add    BYTE PTR [rax],bl
   140042d41:	push   rsp
   140042d42:	or     BYTE PTR [rax],al
   140042d44:	sbb    BYTE PTR [rdi+rax*1],dh
   140042d47:	add    BYTE PTR [rax],bl
   140042d49:	xor    dl,BYTE PTR [rax+rsi*2]
   140042d4c:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4092d54
   140042d52:	(bad)  
   140042d53:	add    BYTE PTR [rax+0x5],al
   140042d56:	add    al,BYTE PTR [rax]
   140042d58:	jl     0x140042d5f
   140042d5a:	add    al,BYTE PTR [rax]
   140042d5c:	cmp    al,0x2d
   140042d5e:	add    al,0x0
   140042d60:	and    DWORD PTR [rax],eax
   140042d62:	add    BYTE PTR [rax],al
   140042d64:	rex add eax,0x57c0002
   140042d6a:	add    al,BYTE PTR [rax]
   140042d6c:	cmp    al,0x2d
   140042d6e:	add    al,0x0
   140042d70:	add    DWORD PTR [rax],edx
   140042d72:	(bad)  
   140042d73:	add    BYTE PTR [rax],dl
   140042d75:	push   rsp
   140042d76:	or     DWORD PTR [rax],eax
   140042d78:	adc    BYTE PTR [rax+rcx*1],dh
   140042d7b:	add    BYTE PTR [rax],dl
   140042d7d:	xor    cl,BYTE PTR [rax+riz*8]
   140042d80:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4092d88
   140042d86:	(bad)  
   140042d87:	add    BYTE PTR [rax],dh
   140042d89:	fld    QWORD PTR [rcx]
   140042d8b:	add    BYTE PTR [rcx-0x23],bl
   140042d8e:	add    DWORD PTR [rax],eax
   140042d90:	jo     0x140042dbf
   140042d92:	add    al,0x0
   140042d94:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4092d9c
   140042d9a:	(bad)  
   140042d9b:	add    BYTE PTR [rcx-0x23],bl
   140042d9e:	add    DWORD PTR [rax],eax
   140042da0:	data16 fld QWORD PTR [rcx]
   140042da3:	add    BYTE PTR [rax+0x2100042d],al
   140042da9:	add    BYTE PTR [rax],al
   140042dab:	add    BYTE PTR [rcx-0x23],bl
   140042dae:	add    DWORD PTR [rax],eax
   140042db0:	data16 fld QWORD PTR [rcx]
   140042db3:	add    BYTE PTR [rax+0x2100042d],al
   140042db9:	add    BYTE PTR [rax],al
   140042dbb:	add    BYTE PTR [rax],dh
   140042dbd:	fld    QWORD PTR [rcx]
   140042dbf:	add    BYTE PTR [rcx-0x23],bl
   140042dc2:	add    DWORD PTR [rax],eax
   140042dc4:	jo     0x140042df3
   140042dc6:	add    al,0x0
   140042dc8:	add    DWORD PTR [rdx],ecx
   140042dca:	add    al,0x0
   140042dcc:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140042dd0:	or     dh,BYTE PTR [rdx]
   140042dd2:	(bad)  
   140042dd3:	jo     0x140042df6
   140042dd5:	add    eax,0x34050002
   140042dda:	(bad)  
   140042ddb:	add    BYTE PTR [rax],ah
   140042ddd:	add    al,0x2
   140042ddf:	add    BYTE PTR [rdi],ch
   140042de1:	add    al,0x2
   140042de3:	add    al,cl
   140042de5:	sub    eax,0x210004
   140042dea:	add    BYTE PTR [rax],al
   140042dec:	and    BYTE PTR [rdx+rax*1],al
   140042def:	add    BYTE PTR [rdi],ch
   140042df1:	add    al,0x2
   140042df3:	add    al,cl
   140042df5:	sub    eax,0x23010004
   140042dfa:	add    eax,0x12012300
   140042dff:	add    BYTE PTR [rdi],dl
   140042e01:	jo     0x140042e19
   140042e03:	xor    BYTE PTR [rip+0x21000050],dl        # 0x161042e59
   140042e09:	ja     0x140042e0f
   140042e0b:	add    BYTE PTR [rdi+0x68],dh
   140042e0e:	(bad)  
   140042e0f:	add    BYTE PTR [rax],cl
   140042e11:	adc    DWORD PTR fs:[rax],eax
   140042e14:	jo     0x140042e12
   140042e16:	add    DWORD PTR [rax],eax
   140042e18:	(bad)  
   140042e19:	std    
   140042e1a:	add    DWORD PTR [rax],eax
   140042e1c:	clc    
   140042e1d:	sub    eax,0x210004
   140042e22:	add    al,0x0
   140042e24:	add    BYTE PTR [rax+0x7],ch
   140042e27:	add    BYTE PTR [rax],al
   140042e29:	adc    DWORD PTR fs:[rax],eax
   140042e2c:	jo     0x140042e2a
   140042e2e:	add    DWORD PTR [rax],eax
   140042e30:	(bad)  
   140042e31:	std    
   140042e32:	add    DWORD PTR [rax],eax
   140042e34:	clc    
   140042e35:	sub    eax,0x1b010004
   140042e3a:	(bad)  
   140042e3b:	add    BYTE PTR [rbx],bl
   140042e3d:	push   rsp
   140042e3e:	rex.WR add BYTE PTR [rbx],r11b
   140042e41:	xor    al,0x4b
   140042e43:	add    BYTE PTR [rbx],bl
   140042e45:	add    DWORD PTR [rax+0x0],ecx
   140042e48:	adc    al,0x60
   140042e4a:	add    BYTE PTR [rax],al
   140042e4c:	and    DWORD PTR [rax],ecx
   140042e4e:	add    al,BYTE PTR [rax]
   140042e50:	or     BYTE PTR [rdx+rcx*2+0x0],dh
   140042e54:	push   rax
   140042e55:	test   DWORD PTR [rcx],0x1f7c500
   140042e5b:	add    BYTE PTR [rax],bh
   140042e5d:	cs add al,0x0
   140042e60:	and    DWORD PTR [rax],eax
   140042e62:	add    BYTE PTR [rax],al
   140042e64:	push   rax
   140042e65:	test   DWORD PTR [rcx],0x1f7c500
   140042e6b:	add    BYTE PTR [rax],bh
   140042e6d:	cs add al,0x0
   140042e70:	add    DWORD PTR [rsi],ecx
   140042e72:	(bad)  
   140042e73:	add    BYTE PTR [rsi],cl
   140042e75:	jb     0x140042e81
   140042e77:	lock or al,ah
   140042e7a:	(bad)  
   140042e7b:	rol    BYTE PTR [rax+rax*8],1
   140042e7e:	add    dl,BYTE PTR [rax+0x21]
   140042e81:	clts   
   140042e83:	add    BYTE PTR [rdi],cl
   140042e85:	je     0x140042e8d
   140042e87:	add    BYTE PTR [rdx],cl
   140042e89:	fs (bad) 
   140042e8b:	add    BYTE PTR [rip+0xffffffffd0000e34],al        # 0x110043cc5
   140042e91:	hlt    
   140042e92:	add    DWORD PTR [rax],eax
   140042e94:	div    ah
   140042e96:	add    DWORD PTR [rax],eax
   140042e98:	jo     0x140042ec8
   140042e9a:	add    al,0x0
   140042e9c:	and    DWORD PTR [rax],eax
   140042e9e:	add    BYTE PTR [rax],al
   140042ea0:	shl    ah,1
   140042ea2:	add    DWORD PTR [rax],eax
   140042ea4:	div    ah
   140042ea6:	add    DWORD PTR [rax],eax
   140042ea8:	jo     0x140042ed8
   140042eaa:	add    al,0x0
   140042eac:	add    DWORD PTR [rsi],eax
   140042eae:	add    al,BYTE PTR [rax]
   140042eb0:	(bad)  
   140042eb1:	jb     0x140042eb5
   140042eb3:	push   rax
   140042eb4:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4092ebc
   140042eba:	(bad)  
   140042ebb:	add    BYTE PTR [rax],al
   140042ebd:	add    al,BYTE PTR [rdx]
   140042ebf:	add    BYTE PTR [rcx],ah
   140042ec1:	add    al,BYTE PTR [rdx]
   140042ec3:	add    BYTE PTR [rsi+rbp*1+0xa210004],ch
   140042eca:	add    al,0x0
   140042ecc:	or     dh,BYTE PTR [rsi+rax*1+0x0]
   140042ed0:	add    eax,0x21000a34
   140042ed5:	add    al,BYTE PTR [rdx]
   140042ed7:	add    BYTE PTR [rdx],dh
   140042ed9:	add    al,BYTE PTR [rdx]
   140042edb:	add    BYTE PTR [rsi+rbp*1+0x210004],dh
   140042ee2:	add    BYTE PTR [rax],al
   140042ee4:	and    DWORD PTR [rdx],eax
   140042ee6:	add    al,BYTE PTR [rax]
   140042ee8:	xor    al,BYTE PTR [rdx]
   140042eea:	add    al,BYTE PTR [rax]
   140042eec:	mov    ah,0x2e
   140042eee:	add    al,0x0
   140042ef0:	and    DWORD PTR [rax],eax
   140042ef2:	add    BYTE PTR [rax],al
   140042ef4:	add    BYTE PTR [rdx],al
   140042ef6:	add    al,BYTE PTR [rax]
   140042ef8:	and    DWORD PTR [rdx],eax
   140042efa:	add    al,BYTE PTR [rax]
   140042efc:	lods   al,BYTE PTR ds:[rsi]
   140042efd:	cs add al,0x0
   140042f00:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4092f08
   140042f06:	(bad)  
   140042f07:	add    BYTE PTR [rax-0x7],al
   140042f0a:	add    DWORD PTR [rax],eax
   140042f0c:	jl     0x140042f07
   140042f0e:	add    DWORD PTR [rax],eax
   140042f10:	loopne 0x140042f2e
   140042f12:	add    al,0x0
   140042f14:	and    DWORD PTR [rax],eax
   140042f16:	add    BYTE PTR [rax],al
   140042f18:	rex stc 
   140042f1a:	add    DWORD PTR [rax],eax
   140042f1c:	jl     0x140042f17
   140042f1e:	add    DWORD PTR [rax],eax
   140042f20:	loopne 0x140042f3e
   140042f22:	add    al,0x0
   140042f24:	add    DWORD PTR [rip+0x340d0005],ecx        # 0x174112f2f
   140042f2a:	sub    DWORD PTR [rax],eax
   140042f2c:	or     eax,0x6002601
   140042f31:	jo     0x140042f33
   140042f33:	add    BYTE PTR [rcx],ah
   140042f35:	or     BYTE PTR [rdx],al
   140042f37:	add    BYTE PTR [rax],cl
   140042f39:	sub    BYTE PTR fs:[rax],al
   140042f3c:	xor    BYTE PTR [rsi],al
   140042f3e:	add    al,BYTE PTR [rax]
   140042f40:	jnp    0x140042f48
   140042f42:	add    al,BYTE PTR [rax]
   140042f44:	and    al,0x2f
   140042f46:	add    al,0x0
   140042f48:	and    DWORD PTR [rax],eax
   140042f4a:	add    BYTE PTR [rax],al
   140042f4c:	xor    BYTE PTR [rsi],al
   140042f4e:	add    al,BYTE PTR [rax]
   140042f50:	jnp    0x140042f58
   140042f52:	add    al,BYTE PTR [rax]
   140042f54:	and    al,0x2f
   140042f56:	add    al,0x0
   140042f58:	add    DWORD PTR [rcx],ecx
   140042f5a:	add    al,0x0
   140042f5c:	or     DWORD PTR [rdx+0x5],edx
   140042f5f:	lock add esi,DWORD PTR [rax+0x2]
   140042f63:	xor    BYTE PTR [rcx],ah
   140042f65:	add    eax,0xc4050002
   140042f6a:	or     al,0x0
   140042f6c:	add    dl,bh
   140042f6e:	add    DWORD PTR [rax],eax
   140042f70:	stos   DWORD PTR es:[rdi],eax
   140042f71:	cli    
   140042f72:	add    DWORD PTR [rax],eax
   140042f74:	pop    rax
   140042f75:	(bad)  
   140042f76:	add    al,0x0
   140042f78:	and    DWORD PTR [rax],eax
   140042f7a:	add    al,BYTE PTR [rax]
   140042f7c:	add    ah,al
   140042f7e:	or     al,0x0
   140042f80:	add    dl,bh
   140042f82:	add    DWORD PTR [rax],eax
   140042f84:	stos   DWORD PTR es:[rdi],eax
   140042f85:	cli    
   140042f86:	add    DWORD PTR [rax],eax
   140042f88:	pop    rax
   140042f89:	(bad)  
   140042f8a:	add    al,0x0
   140042f8c:	and    DWORD PTR [rip+0xffffffffe40d0004],ecx        # 0x124112f96
   140042f92:	add    al,0x0
   140042f94:	add    eax,0xd4000a54
   140042f99:	cli    
   140042f9a:	add    DWORD PTR [rax],eax
   140042f9c:	cmp    al,0xfb
   140042f9e:	add    DWORD PTR [rax],eax
   140042fa0:	js     0x140042fd1
   140042fa2:	add    al,0x0
   140042fa4:	and    DWORD PTR [rsp+rax*1],ecx
   140042fa7:	add    BYTE PTR [rsp+rdx*8],cl
   140042faa:	add    eax,0xb640500
   140042faf:	add    BYTE PTR [rbx+rdi*8],bh
   140042fb2:	add    DWORD PTR [rax],eax
   140042fb4:	(bad)  
   140042fb5:	sti    
   140042fb6:	add    DWORD PTR [rax],eax
   140042fb8:	mov    WORD PTR [rdi],gs
   140042fba:	add    al,0x0
   140042fbc:	and    DWORD PTR [rax],eax
   140042fbe:	add    BYTE PTR [rax],al
   140042fc0:	cmp    al,0xfb
   140042fc2:	add    DWORD PTR [rax],eax
   140042fc4:	(bad)  
   140042fc5:	sti    
   140042fc6:	add    DWORD PTR [rax],eax
   140042fc8:	mov    WORD PTR [rdi],gs
   140042fca:	add    al,0x0
   140042fcc:	and    DWORD PTR [rax],eax
   140042fce:	add    BYTE PTR [rax],al
   140042fd0:	(bad)  
   140042fd1:	cli    
   140042fd2:	add    DWORD PTR [rax],eax
   140042fd4:	cmp    al,0xfb
   140042fd6:	add    DWORD PTR [rax],eax
   140042fd8:	js     0x140043009
   140042fda:	add    al,0x0
   140042fdc:	add    DWORD PTR [rax+rcx*1],edx
   140042fdf:	add    BYTE PTR [rsp+rsi*2],dl
   140042fe2:	add    al,0x0
   140042fe4:	pcmpgtb mm0,QWORD PTR [rbx]
   140042fe7:	add    BYTE PTR [rdx],cl
   140042fe9:	push   rsp
   140042fea:	add    al,BYTE PTR [rax]
   140042fec:	add    eax,0x21000134
   140042ff1:	rex.WX or BYTE PTR [rax],al
   140042ff4:	rex.WX je 0x140042ffb
   140042ff7:	add    BYTE PTR [rsp+rdx*2],dh
   140042ffa:	(bad)  
   140042ffb:	add    BYTE PTR [rip+0x5000864],dl        # 0x145043865
   140043001:	xor    al,0x6
   140043003:	add    BYTE PTR [rax-0x5afffdef],dl
   140043009:	adc    DWORD PTR [rdx],eax
   14004300b:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004300f:	add    BYTE PTR [rcx],ah
   140043011:	add    BYTE PTR [rax+rax*1],al
   140043014:	add    BYTE PTR [rax+rcx*1+0x0],ah
   140043018:	add    BYTE PTR [rsi+rax*1],dh
   14004301b:	add    BYTE PTR [rax-0x5afffdef],dl
   140043021:	adc    DWORD PTR [rdx],eax
   140043023:	add    BYTE PTR [rax+rbp*1+0x4],cl
   140043027:	add    BYTE PTR [rcx],ah
   140043029:	add    BYTE PTR [rax],al
   14004302b:	add    BYTE PTR [rax-0x5afffdef],dl
   140043031:	adc    DWORD PTR [rdx],eax
   140043033:	add    BYTE PTR [rax+rbp*1+0x4],cl
   140043037:	add    BYTE PTR [rcx],al
   140043039:	adc    al,0x8
   14004303b:	add    BYTE PTR [rsp+riz*2],dl
   14004303e:	or     BYTE PTR [rax],al
   140043040:	adc    al,0x54
   140043042:	(bad)  
   140043043:	add    BYTE PTR [rsp+rsi*1],dl
   140043046:	(bad)  
   140043047:	add    BYTE PTR [rdx+rsi*1],dl
   14004304a:	adc    BYTE PTR [rax+0x1],dh
   14004304d:	sbb    cl,BYTE PTR [rdx]
   14004304f:	add    BYTE PTR [rdx],bl
   140043051:	je     0x14004305c
   140043053:	add    BYTE PTR [rdx],bl
   140043055:	or     BYTE PTR fs:[rax],al
   140043058:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   14004305c:	sbb    dh,BYTE PTR [rsi+rax*1]
   14004305f:	add    BYTE PTR [rdx],bl
   140043061:	xor    dl,BYTE PTR [rsi]
   140043063:	loopne 0x140043066
   140043065:	cmp    BYTE PTR [rax],cl
   140043067:	add    BYTE PTR [rax],bh
   140043069:	push   rsp
   14004306a:	(bad)  
   14004306b:	add    BYTE PTR [rax],dl
   14004306d:	or     DWORD PTR fs:[rax],eax
   140043070:	adc    BYTE PTR [rax+rcx*1],dh
   140043073:	add    BYTE PTR [rax],dl
   140043075:	xor    cl,BYTE PTR [rax+riz*8]
   140043078:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4093080
   14004307e:	(bad)  
   14004307f:	add    al,ah
   140043081:	adc    eax,0x169d0002
   140043086:	add    al,BYTE PTR [rax]
   140043088:	xor    BYTE PTR fs:[rax+rax*1],al
   14004308c:	and    DWORD PTR [rax],eax
   14004308e:	add    BYTE PTR [rax],al
   140043090:	loopne 0x1400430a7
   140043092:	add    al,BYTE PTR [rax]
   140043094:	popf   
   140043095:	(bad)  
   140043096:	add    al,BYTE PTR [rax]
   140043098:	xor    BYTE PTR fs:[rax+rax*1],al
   14004309c:	add    DWORD PTR [rdi],ecx
   14004309e:	(bad)  
   14004309f:	add    BYTE PTR [rdi],cl
   1400430a1:	fs (bad) 
   1400430a3:	add    BYTE PTR [rdi],cl
   1400430a5:	xor    al,0x6
   1400430a7:	add    BYTE PTR [rdi],cl
   1400430a9:	xor    cl,BYTE PTR [rbx]
   1400430ab:	jo     0x1400430ae
   1400430ad:	or     eax,DWORD PTR [rip+0x7420b00]        # 0x147463bb3
   1400430b3:	lock add eax,0x25003d0
   1400430b9:	xor    BYTE PTR [rax],al
   1400430bb:	add    BYTE PTR [rcx],ah
   1400430bd:	add    eax,0xe4050002
   1400430c2:	add    al,0x0
   1400430c4:	adc    BYTE PTR [rdx+rax*1],dl
   1400430c7:	add    BYTE PTR [rcx-0x53fffdec],al
   1400430cd:	xor    BYTE PTR [rax+rax*1],al
   1400430d0:	and    DWORD PTR [rdx],edx
   1400430d2:	(bad)  
   1400430d3:	add    BYTE PTR [rdx],dl
   1400430d5:	(bad)  
   1400430d6:	or     al,0x0
   1400430d8:	or     eax,0x5000b74
   1400430dd:	or     al,BYTE PTR fs:[rax]
   1400430e0:	adc    DWORD PTR [rdx+rax*1],0x214bb00
   1400430e7:	add    BYTE PTR [rax+rsi*1+0x210004],bh
   1400430ee:	add    BYTE PTR [rax],al
   1400430f0:	adc    DWORD PTR [rdx+rax*1],0x214bb00
   1400430f7:	add    BYTE PTR [rax+rsi*1+0x210004],bh
   1400430fe:	add    BYTE PTR [rax],al
   140043100:	adc    BYTE PTR [rdx+rax*1],dl
   140043103:	add    BYTE PTR [rcx-0x53fffdec],al
   140043109:	xor    BYTE PTR [rax+rax*1],al
   14004310c:	add    DWORD PTR [rax+rcx*1],ebp
   14004310f:	add    BYTE PTR [rsp+rsi*2],ch
   140043112:	or     BYTE PTR [rax],al
   140043114:	and    DWORD PTR [rdi+rax*1+0x0],esp
   140043118:	sbb    al,0x54
   14004311a:	(bad)  
   14004311b:	add    BYTE PTR [rsi],al
   14004311d:	xor    al,BYTE PTR [rdx]
   14004311f:	xor    BYTE PTR [rcx],ah
   140043121:	add    eax,0x74050002
   140043126:	(bad)  
   140043127:	add    BYTE PTR [rax+0xe],dh
   14004312a:	add    al,BYTE PTR [rax]
   14004312c:	out    dx,al
   14004312d:	(bad)  
   14004312e:	add    al,BYTE PTR [rax]
   140043130:	cwde   
   140043131:	or     BYTE PTR [rax+rax*1],al
   140043134:	and    DWORD PTR [rax],eax
   140043136:	add    BYTE PTR [rax],al
   140043138:	jo     0x140043148
   14004313a:	add    al,BYTE PTR [rax]
   14004313c:	out    dx,al
   14004313d:	(bad)  
   14004313e:	add    al,BYTE PTR [rax]
   140043140:	cwde   
   140043141:	or     BYTE PTR [rax+rax*1],al
   140043144:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a409314c
   14004314a:	(bad)  
   14004314b:	add    al,ah
   14004314d:	sbb    al,0x2
   14004314f:	add    BYTE PTR [rsi+0x1d],cl
   140043152:	add    al,BYTE PTR [rax]
   140043154:	sbb    BYTE PTR [rsp+rax*1],bh
   140043157:	add    BYTE PTR [rcx],ah
   140043159:	add    BYTE PTR [rax],al
   14004315b:	add    al,ah
   14004315d:	sbb    al,0x2
   14004315f:	add    BYTE PTR [rsi+0x1d],cl
   140043162:	add    al,BYTE PTR [rax]
   140043164:	sbb    BYTE PTR [rsp+rax*1],bh
   140043167:	add    BYTE PTR [rcx],al
   140043169:	sbb    BYTE PTR [rsi],al
   14004316b:	add    BYTE PTR [rax],bl
   14004316d:	fs (bad) 
   14004316f:	add    BYTE PTR [rax],bl
   140043171:	xor    al,0x6
   140043173:	add    BYTE PTR [rax],bl
   140043175:	xor    dl,BYTE PTR [rax+rsi*2]
   140043178:	add    DWORD PTR [rcx],ecx
   14004317a:	add    al,0x0
   14004317c:	or     DWORD PTR [rdx],esi
   14004317e:	add    eax,0x26003f0
   140043183:	xor    BYTE PTR [rcx],ah
   140043185:	or     al,BYTE PTR [rax+rax*1]
   140043188:	or     al,ah
   14004318a:	or     al,BYTE PTR [rax]
   14004318c:	add    eax,0x30000974
   140043191:	sbb    eax,DWORD PTR [rdx]
   140043193:	add    BYTE PTR [rdx+0x1b],bl
   140043196:	add    al,BYTE PTR [rax]
   140043198:	js     0x1400431cb
   14004319a:	add    al,0x0
   14004319c:	and    DWORD PTR [rdx],ecx
   14004319e:	add    al,0x0
   1400431a0:	or     ah,ah
   1400431a2:	or     eax,DWORD PTR [rax]
   1400431a4:	add    eax,0x5a000854
   1400431a9:	sbb    eax,DWORD PTR [rdx]
   1400431ab:	add    BYTE PTR [rdi-0x7bfffde5],dh
   1400431b1:	xor    DWORD PTR [rax+rax*1],eax
   1400431b4:	and    DWORD PTR [rax],eax
   1400431b6:	add    BYTE PTR [rax],al
   1400431b8:	pop    rdx
   1400431b9:	sbb    eax,DWORD PTR [rdx]
   1400431bb:	add    BYTE PTR [rdi-0x7bfffde5],dh
   1400431c1:	xor    DWORD PTR [rax+rax*1],eax
   1400431c4:	and    DWORD PTR [rax],eax
   1400431c6:	add    BYTE PTR [rax],al
   1400431c8:	xor    BYTE PTR [rbx],bl
   1400431ca:	add    al,BYTE PTR [rax]
   1400431cc:	pop    rdx
   1400431cd:	sbb    eax,DWORD PTR [rdx]
   1400431cf:	add    BYTE PTR [rax+0x31],bh
   1400431d2:	add    al,0x0
   1400431d4:	add    DWORD PTR [rdi],ecx
   1400431d6:	add    eax,DWORD PTR [rax]
   1400431d8:	sidt   [rdx]
   1400431db:	add    al,0x2
   1400431dd:	xor    BYTE PTR [rax],al
   1400431df:	add    BYTE PTR [rcx],al
   1400431e1:	clts   
   1400431e3:	add    BYTE PTR [rdi],cl
   1400431e5:	or     BYTE PTR fs:[rax],al
   1400431e8:	sysenter 
   1400431ea:	(bad)  
   1400431eb:	add    BYTE PTR [rdi],cl
   1400431ed:	xor    cl,BYTE PTR [rbx]
   1400431ef:	jo     0x140043212
   1400431f1:	add    eax,0x74050002
   1400431f6:	(bad)  
   1400431f7:	add    BYTE PTR [rax+0x19],al
   1400431fa:	add    al,BYTE PTR [rax]
   1400431fc:	movsxd ebx,DWORD PTR [rcx]
   1400431fe:	add    al,BYTE PTR [rax]
   140043200:	loopne 0x14004321e
   140043202:	add    al,0x0
   140043204:	and    DWORD PTR [rax],eax
   140043206:	add    BYTE PTR [rax],al
   140043208:	rex sbb DWORD PTR [rdx],eax
   14004320b:	add    BYTE PTR [rbx+0x19],ah
   14004320e:	add    al,BYTE PTR [rax]
   140043210:	loopne 0x14004322e
   140043212:	add    al,0x0
   140043214:	add    DWORD PTR [rsi],eax
   140043216:	add    al,BYTE PTR [rax]
   140043218:	(bad)  
   140043219:	xor    al,BYTE PTR [rdx]
   14004321b:	(bad)  
   14004321c:	and    DWORD PTR [rdx],ecx
   14004321e:	add    al,0x0
   140043220:	or     dh,BYTE PTR [rdi+rax*1+0x0]
   140043224:	add    eax,0xa0000634
   140043229:	or     al,0x2
   14004322b:	add    dl,cl
   14004322d:	or     al,0x2
   14004322f:	add    BYTE PTR [rdx+rsi*1],dl
   140043232:	add    al,0x0
   140043234:	and    DWORD PTR [rax],eax
   140043236:	add    BYTE PTR [rax],al
   140043238:	movabs al,ds:0x1400020cca00020c
   140043241:	xor    al,BYTE PTR [rax+rax*1]
   140043244:	add    DWORD PTR [rdi],ecx
   140043246:	(bad)  
   140043247:	add    BYTE PTR [rdi],cl
   140043249:	or     eax,DWORD PTR fs:[rax]
   14004324c:	sysenter 
   14004324e:	or     al,BYTE PTR [rax]
   140043250:	(bad)  
   140043252:	or     esi,DWORD PTR [rax+0x1]
   140043255:	sbb    eax,0x341d0003
   14004325a:	or     BYTE PTR [rax],al
   14004325c:	add    al,0x82
   14004325e:	add    BYTE PTR [rax],al
   140043260:	add    DWORD PTR [rax],edx
   140043262:	(bad)  
   140043263:	add    BYTE PTR [rax],dl
   140043265:	xchg   edx,eax
   140043266:	or     al,0xf0
   140043268:	or     dl,al
   14004326a:	or     BYTE PTR [rax+0x7],dh
   14004326d:	(bad)  
   14004326e:	(bad)  
   14004326f:	xor    BYTE PTR [rcx],ah
   140043271:	adc    al,BYTE PTR [rsi]
   140043273:	add    BYTE PTR [rdx],dl
   140043275:	in     al,0x8
   140043277:	add    BYTE PTR [rip+0x80009c4],cl        # 0x148043c41
   14004327d:	push   rsp
   14004327e:	adc    BYTE PTR [rax],al
   140043280:	rex and DWORD PTR [rdx],eax
   140043283:	add    ch,al
   140043285:	and    DWORD PTR [rdx],eax
   140043287:	add    BYTE PTR [rax+0x32],ah
   14004328a:	add    al,0x0
   14004328c:	and    DWORD PTR [rax],eax
   14004328e:	(bad)  
   14004328f:	add    BYTE PTR [rax],al
   140043291:	in     al,0x8
   140043293:	add    BYTE PTR [rax],al
   140043295:	(bad)  
   140043296:	or     DWORD PTR [rax],eax
   140043298:	add    BYTE PTR [rax+rdx*1+0x0],dl
   14004329c:	rex and DWORD PTR [rdx],eax
   14004329f:	add    ch,al
   1400432a1:	and    DWORD PTR [rdx],eax
   1400432a3:	add    BYTE PTR [rax+0x32],ah
   1400432a6:	add    al,0x0
   1400432a8:	and    DWORD PTR [rax],eax
   1400432aa:	add    BYTE PTR [rax],al
   1400432ac:	rex and DWORD PTR [rdx],eax
   1400432af:	add    ch,al
   1400432b1:	and    DWORD PTR [rdx],eax
   1400432b3:	add    BYTE PTR [rax+0x32],ah
   1400432b6:	add    al,0x0
   1400432b8:	add    DWORD PTR [rbx+rcx*1],esp
   1400432bb:	and    eax,0x26824
   1400432c0:	(bad)  
   1400432c1:	je     0x1400432cd
   1400432c3:	add    BYTE PTR [rdi],dl
   1400432c5:	or     DWORD PTR fs:[rax],eax
   1400432c8:	sysenter 
   1400432ca:	or     BYTE PTR [rax],al
   1400432cc:	or     esp,DWORD PTR [rbx]
   1400432ce:	(bad)  
   1400432cf:	push   rdx
   1400432d0:	add    dl,BYTE PTR [rax+0x0]
   1400432d3:	add    BYTE PTR [rcx],al
   1400432d5:	(bad)  
   1400432d6:	or     al,BYTE PTR [rax]
   1400432d8:	(bad)  
   1400432d9:	xor    al,0xc
   1400432db:	add    BYTE PTR [rsi],bl
   1400432dd:	xor    bl,BYTE PTR [rdx]
   1400432df:	lock sbb al,ah
   1400432e2:	(bad)  
   1400432e3:	rcl    BYTE PTR [rax+rax*8],1
   1400432e6:	adc    dh,BYTE PTR [rax+0x11]
   1400432e9:	(bad)  
   1400432ea:	adc    BYTE PTR [rax+0x1],dl
   1400432ed:	(bad)  
   1400432ee:	add    al,BYTE PTR [rax]
   1400432f0:	(bad)  
   1400432f1:	xor    al,BYTE PTR [rdx]
   1400432f3:	jo     0x140043316
   1400432f5:	add    eax,0x34050002
   1400432fa:	(bad)  
   1400432fb:	add    al,al
   1400432fd:	sub    eax,0x2de70002
   140043302:	add    al,BYTE PTR [rax]
   140043304:	in     al,dx
   140043305:	xor    al,BYTE PTR [rax+rax*1]
   140043308:	and    DWORD PTR [rax],eax
   14004330a:	add    BYTE PTR [rax],al
   14004330c:	shr    BYTE PTR [rip+0x2de70002],0x2        # 0x16deb3315
   140043313:	add    ah,ch
   140043315:	xor    al,BYTE PTR [rax+rax*1]
   140043318:	and    DWORD PTR [rip+0x34050002],eax        # 0x174093320
   14004331e:	add    al,0x0
   140043320:	adc    BYTE PTR [rip+0x352e0002],dh        # 0x175323328
   140043326:	add    al,BYTE PTR [rax]
   140043328:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004332c:	and    DWORD PTR [rax],eax
   14004332e:	add    al,BYTE PTR [rax]
   140043330:	add    BYTE PTR [rsp+rax*1],dh
   140043333:	add    BYTE PTR [rax],dl
   140043335:	xor    eax,0x352e0002
   14004333a:	add    al,BYTE PTR [rax]
   14004333c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   140043340:	and    DWORD PTR [rax],eax
   140043342:	add    BYTE PTR [rax],al
   140043344:	adc    BYTE PTR [rip+0x352e0002],dh        # 0x17532334c
   14004334a:	add    al,BYTE PTR [rax]
   14004334c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   140043350:	add    DWORD PTR [rdi],ecx
   140043352:	or     BYTE PTR [rax],al
   140043354:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140043357:	lock or eax,esp
   14004335a:	(bad)  
   14004335b:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436437d2
   140043362:	add    dh,BYTE PTR [rax]
   140043364:	add    DWORD PTR [rsi],edx
   140043366:	(bad)  
   140043367:	add    BYTE PTR [rsi],dl
   140043369:	rex.X adc sil,al
   14004336c:	adc    al,ah
   14004336e:	(bad)  
   14004336f:	jo     0x14004337e
   140043371:	(bad)  
   140043372:	or     al,0x50
   140043374:	or     esi,DWORD PTR [rax]
   140043376:	add    BYTE PTR [rax],al
   140043378:	and    DWORD PTR [rip+0xffffffffd4050002],eax        # 0x114093380
   14004337e:	add    al,0x0
   140043380:	lock (bad) 
   140043382:	add    al,BYTE PTR [rax]
   140043384:	(bad)  
   140043385:	cmp    DWORD PTR [rdx],eax
   140043387:	add    BYTE PTR [rbx+rsi*1+0x4],ah
   14004338b:	add    BYTE PTR [rcx],ah
   14004338d:	add    eax,0xc4050002
   140043392:	or     eax,0x2399a00
   140043397:	add    ch,ch
   140043399:	cmp    DWORD PTR [rdx],eax
   14004339b:	add    BYTE PTR [rax+0x33],bh
   14004339e:	add    al,0x0
   1400433a0:	and    DWORD PTR [rax],eax
   1400433a2:	add    BYTE PTR [rax],al
   1400433a4:	(bad)  
   1400433a5:	cmp    DWORD PTR [rdx],eax
   1400433a7:	add    ch,ch
   1400433a9:	cmp    DWORD PTR [rdx],eax
   1400433ab:	add    BYTE PTR [rax+0x33],bh
   1400433ae:	add    al,0x0
   1400433b0:	and    DWORD PTR [rax],eax
   1400433b2:	add    al,BYTE PTR [rax]
   1400433b4:	add    ah,al
   1400433b6:	or     eax,0x2399a00
   1400433bb:	add    ch,ch
   1400433bd:	cmp    DWORD PTR [rdx],eax
   1400433bf:	add    BYTE PTR [rax+0x33],bh
   1400433c2:	add    al,0x0
   1400433c4:	and    DWORD PTR [rax],eax
   1400433c6:	add    al,0x0
   1400433c8:	add    ah,dl
   1400433ca:	add    al,0x0
   1400433cc:	add    ah,al
   1400433ce:	or     eax,0x237f000
   1400433d3:	add    BYTE PTR [rdx+0x64000239],bl
   1400433d9:	xor    eax,DWORD PTR [rax+rax*1]
   1400433dc:	and    DWORD PTR [rax],eax
   1400433de:	add    al,BYTE PTR [rax]
   1400433e0:	add    ah,dl
   1400433e2:	add    al,0x0
   1400433e4:	lock (bad) 
   1400433e6:	add    al,BYTE PTR [rax]
   1400433e8:	(bad)  
   1400433e9:	cmp    DWORD PTR [rdx],eax
   1400433eb:	add    BYTE PTR [rbx+rsi*1+0x4],ah
   1400433ef:	add    BYTE PTR [rcx],ah
   1400433f1:	add    BYTE PTR [rax],al
   1400433f3:	add    al,dh
   1400433f5:	(bad)  
   1400433f6:	add    al,BYTE PTR [rax]
   1400433f8:	(bad)  
   1400433f9:	cmp    DWORD PTR [rdx],eax
   1400433fb:	add    BYTE PTR [rbx+rsi*1+0x4],ah
   1400433ff:	add    BYTE PTR [rcx],al
   140043401:	or     al,BYTE PTR [rax+rax*1]
   140043404:	or     dl,BYTE PTR [rax+rcx*1+0x0]
   140043408:	or     dh,BYTE PTR [rdx]
   14004340a:	(bad)  
   14004340b:	(bad)  
   14004340c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174093414
   140043412:	(bad)  
   140043413:	add    BYTE PTR [rax],dl
   140043415:	(bad)  
   140043416:	add    al,BYTE PTR [rax]
   140043418:	and    BYTE PTR [rdi],bh
   14004341a:	add    al,BYTE PTR [rax]
   14004341c:	add    BYTE PTR [rsp+rax*1],dh
   14004341f:	add    BYTE PTR [rcx],ah
   140043421:	add    eax,0x74050002
   140043426:	(bad)  
   140043427:	add    BYTE PTR [rax],ah
   140043429:	(bad)  
   14004342a:	add    al,BYTE PTR [rax]
   14004342c:	(bad)  
   14004342d:	(bad)  
   14004342e:	add    al,BYTE PTR [rax]
   140043430:	or     al,0x34
   140043432:	add    al,0x0
   140043434:	and    DWORD PTR [rax],eax
   140043436:	add    BYTE PTR [rax],al
   140043438:	and    BYTE PTR [rdi],bh
   14004343a:	add    al,BYTE PTR [rax]
   14004343c:	(bad)  
   14004343d:	(bad)  
   14004343e:	add    al,BYTE PTR [rax]
   140043440:	or     al,0x34
   140043442:	add    al,0x0
   140043444:	and    DWORD PTR [rax],eax
   140043446:	add    BYTE PTR [rax],al
   140043448:	adc    BYTE PTR [rdi],bh
   14004344a:	add    al,BYTE PTR [rax]
   14004344c:	and    BYTE PTR [rdi],bh
   14004344e:	add    al,BYTE PTR [rax]
   140043450:	add    BYTE PTR [rsp+rax*1],dh
   140043453:	add    BYTE PTR [rcx],ah
   140043455:	add    eax,0x64050002
   14004345a:	(bad)  
   14004345b:	add    BYTE PTR [rax+0x31],dl
   14004345e:	add    al,BYTE PTR [rax]
   140043460:	shl    BYTE PTR [rcx],cl
   140043462:	add    al,BYTE PTR [rax]
   140043464:	sbb    BYTE PTR [rsp+rax*1],bh
   140043467:	add    BYTE PTR [rcx],ah
   140043469:	add    BYTE PTR [rax],al
   14004346b:	add    BYTE PTR [rax+0x31],dl
   14004346e:	add    al,BYTE PTR [rax]
   140043470:	shl    BYTE PTR [rcx],cl
   140043472:	add    al,BYTE PTR [rax]
   140043474:	sbb    BYTE PTR [rsp+rax*1],bh
   140043477:	add    BYTE PTR [rcx],ah
   140043479:	adc    BYTE PTR [rax+rax*1],al
   14004347c:	adc    BYTE PTR [rdi+rax*1+0x0],ah
   140043480:	add    eax,0x60000634
   140043485:	xor    al,BYTE PTR [rdx]
   140043487:	add    BYTE PTR [rcx-0x13fffdce],al
   14004348d:	xor    al,BYTE PTR [rax+rax*1]
   140043490:	and    DWORD PTR [rax],eax
   140043492:	add    al,0x0
   140043494:	add    BYTE PTR [rdi+rax*1+0x0],ah
   140043498:	add    BYTE PTR [rsi+rax*1],dh
   14004349b:	add    BYTE PTR [rax+0x32],ah
   14004349e:	add    al,BYTE PTR [rax]
   1400434a0:	xor    DWORD PTR [rdx],0x32ec0002
   1400434a6:	add    al,0x0
   1400434a8:	and    DWORD PTR [rax],eax
   1400434aa:	add    BYTE PTR [rax],al
   1400434ac:	(bad)  
   1400434ad:	xor    al,BYTE PTR [rdx]
   1400434af:	add    BYTE PTR [rcx-0x13fffdce],al
   1400434b5:	xor    al,BYTE PTR [rax+rax*1]
   1400434b8:	add    DWORD PTR [rbx],edx
   1400434ba:	or     BYTE PTR [rax],al
   1400434bc:	adc    esi,DWORD PTR [rsi+rcx*1]
   1400434bf:	add    BYTE PTR [rbx],dl
   1400434c1:	push   rdx
   1400434c2:	or     al,0xf0
   1400434c4:	or     ah,al
   1400434c6:	or     BYTE PTR [rax+0x7],dh
   1400434c9:	(bad)  
   1400434ca:	(bad)  
   1400434cb:	push   rax
   1400434cc:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x1040934d4
   1400434d2:	or     eax,0x2416000
   1400434d7:	add    cl,ch
   1400434d9:	add    al,BYTE PTR [r8]
   1400434dc:	mov    eax,0x21000434
   1400434e1:	add    BYTE PTR [rax],al
   1400434e3:	add    BYTE PTR [rax+0x41],ah
   1400434e6:	add    al,BYTE PTR [rax]
   1400434e8:	jmp    0xf804372e
   1400434ed:	xor    al,0x4
   1400434ef:	add    BYTE PTR [rcx],al
   1400434f1:	sbb    al,0xc
   1400434f3:	add    BYTE PTR [rsp+riz*2],bl
   1400434f6:	or     al,0x0
   1400434f8:	sbb    al,0x54
   1400434fa:	or     eax,DWORD PTR [rax]
   1400434fc:	sbb    al,0x34
   1400434fe:	or     al,BYTE PTR [rax]
   140043500:	sbb    al,0x32
   140043502:	sbb    al,dh
   140043504:	(bad)  
   140043505:	loopne 0x14004351b
   140043507:	rcl    BYTE PTR [rdx],1
   140043509:	rcl    BYTE PTR [rax],0x70
   14004350c:	add    DWORD PTR [rax],ecx
   14004350e:	add    eax,DWORD PTR [rax]
   140043510:	or     BYTE PTR [rdx+0x4],al
   140043513:	rol    BYTE PTR [rdx],0x70
   140043516:	add    BYTE PTR [rax],al
   140043518:	and    DWORD PTR [rip+0xfffffffff4050002],eax        # 0x134093520
   14004351e:	add    al,0x0
   140043520:	lock rex.XB add al,BYTE PTR [r8]
   140043524:	sbb    al,BYTE PTR [rdx+rax*1+0x0]
   140043528:	or     al,0x35
   14004352a:	add    al,0x0
   14004352c:	and    DWORD PTR [rax],eax
   14004352e:	add    al,BYTE PTR [rax]
   140043530:	add    ah,dh
   140043532:	add    al,0x0
   140043534:	lock rex.XB add al,BYTE PTR [r8]
   140043538:	sbb    al,BYTE PTR [rdx+rax*1+0x0]
   14004353c:	or     al,0x35
   14004353e:	add    al,0x0
   140043540:	and    DWORD PTR [rdx+rcx*1],esi
   140043543:	add    BYTE PTR [rsp+riz*8],dh
   140043546:	or     eax,DWORD PTR [rax]
   140043548:	sub    al,0x64
   14004354a:	or     al,BYTE PTR [rax]
   14004354c:	sbb    al,0x54
   14004354e:	or     DWORD PTR [rax],eax
   140043550:	adc    dh,BYTE PTR [rax+rcx*1]
   140043553:	add    BYTE PTR [rax],al
   140043555:	hlt    
   140043556:	add    al,0x0
   140043558:	lock rex.XB add al,BYTE PTR [r8]
   14004355c:	sbb    al,BYTE PTR [rdx+rax*1+0x0]
   140043560:	or     al,0x35
   140043562:	add    al,0x0
   140043564:	and    DWORD PTR [rax],eax
   140043566:	or     al,BYTE PTR [rax]
   140043568:	add    ah,dh
   14004356a:	add    al,0x0
   14004356c:	add    ah,ah
   14004356e:	or     eax,DWORD PTR [rax]
   140043570:	add    BYTE PTR [rdx+rcx*1+0x0],ah
   140043574:	add    BYTE PTR [rcx+rcx*1+0x0],dl
   140043578:	add    BYTE PTR [rax+rcx*1],dh
   14004357b:	add    al,dh
   14004357d:	rex.XB add al,BYTE PTR [r8]
   140043580:	sbb    al,BYTE PTR [rdx+rax*1+0x0]
   140043584:	or     al,0x35
   140043586:	add    al,0x0
   140043588:	add    DWORD PTR [rdi],ecx
   14004358a:	add    al,0x0
   14004358c:	sysenter 
   14004358e:	(bad)  
   14004358f:	add    BYTE PTR [rdi],cl
   140043591:	xor    cl,BYTE PTR [rbx]
   140043593:	jo     0x140043596
   140043595:	adc    eax,DWORD PTR [rdi]
   140043597:	add    BYTE PTR [rbx],dl
   140043599:	imul   eax,DWORD PTR fs:[rax],0x13
   14004359d:	xor    al,0x6a
   14004359f:	add    BYTE PTR [rbx],dl
   1400435a1:	add    DWORD PTR [rsi+0x0],esp
   1400435a4:	or     al,0xe0
   1400435a6:	add    BYTE PTR [rax],al
   1400435a8:	and    DWORD PTR [rax],ecx
   1400435aa:	add    al,BYTE PTR [rax]
   1400435ac:	or     BYTE PTR [rcx+rbp*2+0x0],dh
   1400435b0:	loopne 0x1400435f9
   1400435b2:	add    al,BYTE PTR [rax]
   1400435b4:	or     ecx,DWORD PTR [rax+0x2]
   1400435b7:	add    BYTE PTR [rbp+rsi*1+0x8210004],dl
   1400435be:	add    al,BYTE PTR [rax]
   1400435c0:	or     BYTE PTR [rax+rbp*2+0x0],dl
   1400435c4:	or     ecx,DWORD PTR [rax+0x2]
   1400435c7:	add    bh,ah
   1400435c9:	rex.W add al,BYTE PTR [rax]
   1400435cc:	test   al,0x35
   1400435ce:	add    al,0x0
   1400435d0:	and    DWORD PTR [rax],eax
   1400435d2:	add    BYTE PTR [rax],al
   1400435d4:	or     ecx,DWORD PTR [rax+0x2]
   1400435d7:	add    bh,ah
   1400435d9:	rex.W add al,BYTE PTR [rax]
   1400435dc:	test   al,0x35
   1400435de:	add    al,0x0
   1400435e0:	and    DWORD PTR [rax],eax
   1400435e2:	add    BYTE PTR [rax],al
   1400435e4:	loopne 0x14004362d
   1400435e6:	add    al,BYTE PTR [rax]
   1400435e8:	or     ecx,DWORD PTR [rax+0x2]
   1400435eb:	add    BYTE PTR [rbp+rsi*1+0x30010004],dl
   1400435f2:	or     BYTE PTR [rax],al
   1400435f4:	xor    BYTE PTR [rsi+rax*1],dh
   1400435f7:	add    BYTE PTR [rcx],ch
   1400435f9:	push   rsp
   1400435fa:	(bad)  
   1400435fb:	add    BYTE PTR [rdx],cl
   1400435fd:	or     BYTE PTR fs:[rax],al
   140043600:	or     dh,BYTE PTR [rdx]
   140043602:	(bad)  
   140043603:	jo     0x140043606
   140043605:	push   rax
   140043606:	or     al,0x0
   140043608:	push   rax
   140043609:	xor    al,0x2a
   14004360b:	add    BYTE PTR [rbp-0xc],al
   14004360e:	add    BYTE PTR es:[rip+0x2d002d64],bh        # 0x16d046379
   140043615:	push   rsp
   140043616:	sub    eax,DWORD PTR [rax]
   140043618:	or     eax,DWORD PTR [rcx]
   14004361a:	(bad)  
   14004361b:	add    BYTE PTR [rax+riz*8],al
   14004361e:	add    dh,BYTE PTR [rax+0x21]
   140043621:	add    eax,0x74050002
   140043626:	(bad)  
   140043627:	add    BYTE PTR [rax+0x4e],al
   14004362a:	add    al,BYTE PTR [rax]
   14004362c:	rex.WRX add r8b,BYTE PTR gs:[rax]
   140043630:	loopne 0x14004364e
   140043632:	add    al,0x0
   140043634:	and    DWORD PTR [rax],eax
   140043636:	add    al,BYTE PTR [rax]
   140043638:	add    BYTE PTR [rsi+rax*1+0x0],dh
   14004363c:	rex
   14004363d:	rex.WRX add r8b,BYTE PTR [rax]
   140043640:	rex.WRX add r8b,BYTE PTR gs:[rax]
   140043644:	loopne 0x140043662
   140043646:	add    al,0x0
   140043648:	add    DWORD PTR [rbx+rcx*1],esp
   14004364b:	add    BYTE PTR [rsp+riz*8],ah
   14004364e:	jmp    0x140043650
   140043650:	and    al,0x74
   140043652:	(bad)  
   140043653:	add    BYTE PTR [rsp+riz*2],ah
   140043656:	jmp    0x128385a5b
   14004365b:	add    BYTE PTR [rcx+rax*1],ah
   14004365e:	out    0x0,al
   140043660:	adc    eax,0x1000050
   140043665:	or     al,0x2
   140043667:	add    BYTE PTR [rdx+rdx*8],cl
   14004366a:	or     BYTE PTR [rax+0x21],ah
   14004366d:	add    al,0x2
   14004366f:	add    BYTE PTR [rsp+rsi*1],al
   140043672:	adc    DWORD PTR [rax],eax
   140043674:	mov    al,0x55
   140043676:	add    al,BYTE PTR [rax]
   140043678:	mov    esp,0x64000255
   14004367d:	ss add al,0x0
   140043680:	and    DWORD PTR [rdx+rax*1],eax
   140043683:	add    BYTE PTR [rsp+rsi*2],al
   140043686:	adc    eax,DWORD PTR [rax]
   140043688:	mov    esp,0xc0000255
   14004368d:	push   rbp
   14004368e:	add    al,BYTE PTR [rax]
   140043690:	ins    BYTE PTR es:[rdi],dx
   140043691:	ss add al,0x0
   140043694:	and    DWORD PTR [rax],esi
   140043696:	or     al,BYTE PTR [rax]
   140043698:	xor    ah,dh
   14004369a:	or     al,BYTE PTR [rax]
   14004369c:	sub    esp,eax
   14004369e:	or     eax,0x12542100
   1400436a3:	add    BYTE PTR [rbx],cl
   1400436a5:	in     al,0xb
   1400436a7:	add    BYTE PTR [rsp+rdx*8],al
   1400436aa:	or     al,0x0
   1400436ac:	rcl    BYTE PTR [rbp+0x2],0x0
   1400436b0:	(bad)  
   1400436b1:	push   rbp
   1400436b2:	add    al,BYTE PTR [rax]
   1400436b4:	xor    BYTE PTR [rsi],0x4
   1400436b7:	add    BYTE PTR [rcx],ah
   1400436b9:	add    BYTE PTR [rdx],al
   1400436bb:	add    BYTE PTR [rax],al
   1400436bd:	push   rsp
   1400436be:	adc    al,BYTE PTR [rax]
   1400436c0:	rcl    BYTE PTR [rbp+0x2],0x0
   1400436c4:	(bad)  
   1400436c5:	push   rbp
   1400436c6:	add    al,BYTE PTR [rax]
   1400436c8:	xor    BYTE PTR [rsi],0x4
   1400436cb:	add    BYTE PTR [rcx],ah
   1400436cd:	add    BYTE PTR [rdx],al
   1400436cf:	add    BYTE PTR [rax],al
   1400436d1:	push   rsp
   1400436d2:	adc    al,BYTE PTR [rax]
   1400436d4:	mov    esp,0xc0000255
   1400436d9:	push   rbp
   1400436da:	add    al,BYTE PTR [rax]
   1400436dc:	ins    BYTE PTR es:[rdi],dx
   1400436dd:	ss add al,0x0
   1400436e0:	and    DWORD PTR [rax],eax
   1400436e2:	add    al,BYTE PTR [rax]
   1400436e4:	add    BYTE PTR [rdx+rdx*1+0x0],dl
   1400436e8:	mov    al,0x55
   1400436ea:	add    al,BYTE PTR [rax]
   1400436ec:	mov    esp,0x64000255
   1400436f1:	ss add al,0x0
   1400436f4:	and    DWORD PTR [rax],eax
   1400436f6:	(bad)  
   1400436f7:	add    BYTE PTR [rax],al
   1400436f9:	hlt    
   1400436fa:	or     al,BYTE PTR [rax]
   1400436fc:	add    ah,ah
   1400436fe:	or     eax,DWORD PTR [rax]
   140043700:	add    ah,dl
   140043702:	or     al,0x0
   140043704:	add    ah,al
   140043706:	or     eax,0x13740000
   14004370b:	add    BYTE PTR [rax],al
   14004370d:	push   rsp
   14004370e:	adc    al,BYTE PTR [rax]
   140043710:	add    BYTE PTR [rcx+rdx*1],dh
   140043713:	add    BYTE PTR [rax-0x43fffdab],dh
   140043719:	push   rbp
   14004371a:	add    al,BYTE PTR [rax]
   14004371c:	fs ss add al,0x0
   140043720:	add    DWORD PTR [rsi],ebp
   140043722:	or     esi,DWORD PTR [rip+0xc742e]        # 0x14010ab56
   140043728:	sbb    eax,0x13000b64
   14004372d:	xor    al,0xa
   14004372f:	add    BYTE PTR [rdi],cl
   140043731:	xor    ecx,DWORD PTR [rdx]
   140043733:	push   rdx
   140043734:	(bad)  
   140043735:	lock add al,0xe0
   140043738:	add    dl,BYTE PTR [rax+0x0]
   14004373b:	add    BYTE PTR [rcx],al
   14004373d:	(bad)  
   14004373e:	or     DWORD PTR [rax],eax
   140043740:	(bad)  
   140043741:	rex.WR add BYTE PTR fs:[rdi],r10b
   140043745:	push   rsp
   140043746:	rex.WXB add BYTE PTR [r15],dl
   140043749:	xor    al,0x4a
   14004374b:	add    BYTE PTR [rdi],dl
   14004374d:	add    DWORD PTR [rax+0x0],ecx
   140043750:	adc    BYTE PTR [rax+0x0],dh
   140043753:	add    BYTE PTR [rcx],al
   140043755:	(bad)  
   140043756:	(bad)  
   140043757:	add    BYTE PTR [rdi],ah
   140043759:	add    ecx,ecx
   14004375b:	add    BYTE PTR [rax],bl
   14004375d:	jo     0x140043776
   14004375f:	(bad)  
   140043760:	(bad)  
   140043761:	xor    BYTE PTR [rip+0xa180150],dl        # 0x14a1c38b7
   140043767:	add    BYTE PTR [rax],bl
   140043769:	or     al,BYTE PTR fs:[rax]
   14004376c:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   140043770:	sbb    BYTE PTR [rax+rcx*1],dh
   140043773:	add    BYTE PTR [rax],bl
   140043775:	xor    dl,BYTE PTR [rax+rsi*8]
   140043778:	adc    ah,al
   14004377a:	adc    BYTE PTR [rax+0x1],dh
   14004377d:	(bad)  
   14004377e:	add    eax,0x24010e00
   140043783:	add    BYTE PTR [rdi],al
   140043785:	loopne 0x14004378c
   140043787:	(bad)  
   140043788:	add    al,0x50
   14004378a:	add    BYTE PTR [rax],al
   14004378c:	and    DWORD PTR [rbx],edx
   14004378e:	(bad)  
   14004378f:	add    BYTE PTR [rbx],dl
   140043791:	hlt    
   140043792:	sub    al,BYTE PTR [rax]
   140043794:	or     al,0x74
   140043796:	sub    DWORD PTR [rax],eax
   140043798:	add    al,0x34
   14004379a:	sub    BYTE PTR [rax],al
   14004379c:	(bad)  
   14004379d:	pop    rsp
   14004379e:	add    al,BYTE PTR [rax]
   1400437a0:	xchg   ebp,eax
   1400437a1:	pop    rsp
   1400437a2:	add    al,BYTE PTR [rax]
   1400437a4:	jl     0x1400437dd
   1400437a6:	add    al,0x0
   1400437a8:	and    DWORD PTR [rax],eax
   1400437aa:	add    BYTE PTR [rax],al
   1400437ac:	(bad)  
   1400437ad:	pop    rsp
   1400437ae:	add    al,BYTE PTR [rax]
   1400437b0:	xchg   ebp,eax
   1400437b1:	pop    rsp
   1400437b2:	add    al,BYTE PTR [rax]
   1400437b4:	jl     0x1400437ed
   1400437b6:	add    al,0x0
   1400437b8:	add    DWORD PTR [rdi],ecx
   1400437ba:	add    al,0x0
   1400437bc:	pcmpgtb mm0,QWORD PTR [rdi]
   1400437bf:	add    BYTE PTR [rdi],cl
   1400437c1:	xor    cl,BYTE PTR [rbx]
   1400437c3:	jo     0x1400437e6
   1400437c5:	add    eax,0x34050002
   1400437ca:	(bad)  
   1400437cb:	add    al,ah
   1400437cd:	pop    rbp
   1400437ce:	add    al,BYTE PTR [rax]
   1400437d0:	std    
   1400437d1:	pop    rbp
   1400437d2:	add    al,BYTE PTR [rax]
   1400437d4:	mov    eax,0x21000437
   1400437d9:	add    BYTE PTR [rax],al
   1400437db:	add    al,ah
   1400437dd:	pop    rbp
   1400437de:	add    al,BYTE PTR [rax]
   1400437e0:	std    
   1400437e1:	pop    rbp
   1400437e2:	add    al,BYTE PTR [rax]
   1400437e4:	mov    eax,0x21000437
   1400437e9:	or     al,0x4
   1400437eb:	add    BYTE PTR [rsp+rsi*2],cl
   1400437ee:	(bad)  
   1400437ef:	add    BYTE PTR [rip+0x70000634],al        # 0x1b0043e29
   1400437f5:	pop    rbx
   1400437f6:	add    al,BYTE PTR [rax]
   1400437f8:	test   DWORD PTR [rbx+0x2],ebx
   1400437fb:	add    BYTE PTR [rax],al
   1400437fd:	xor    al,0x4
   1400437ff:	add    BYTE PTR [rcx],ah
   140043801:	add    BYTE PTR [rax],al
   140043803:	add    BYTE PTR [rax+0x5b],dh
   140043806:	add    al,BYTE PTR [rax]
   140043808:	test   DWORD PTR [rbx+0x2],ebx
   14004380b:	add    BYTE PTR [rax],al
   14004380d:	xor    al,0x4
   14004380f:	add    BYTE PTR [rcx],al
   140043811:	(bad)  
   140043812:	add    al,BYTE PTR [rax]
   140043814:	(bad)  
   140043815:	add    DWORD PTR [rcx],edx
   140043817:	add    BYTE PTR [rcx],al
   140043819:	adc    eax,DWORD PTR [rcx]
   14004381b:	add    BYTE PTR [rbx],dl
   14004381d:	rex.X add BYTE PTR [rax],al
   140043820:	add    DWORD PTR [rdx],edx
   140043822:	(bad)  
   140043823:	add    BYTE PTR [rdx],dl
   140043825:	rex.WXB add BYTE PTR fs:[r10],dl
   140043829:	xor    al,0x4a
   14004382b:	add    BYTE PTR [rdx],dl
   14004382d:	add    DWORD PTR [rax+0x0],ecx
   140043830:	or     esi,DWORD PTR [rax+0x0]
   140043833:	add    BYTE PTR [rcx],ah
   140043835:	add    eax,0x74050002
   14004383a:	(bad)  
   14004383b:	add    BYTE PTR [rax],al
   14004383d:	(bad)  
   14004383f:	add    BYTE PTR [rdx],dl
   140043841:	(bad)  
   140043843:	add    BYTE PTR [rax+0x21000408],bl
   140043849:	add    BYTE PTR [rax],al
   14004384b:	add    BYTE PTR [rax],al
   14004384d:	(bad)  
   14004384f:	add    BYTE PTR [rdx],dl
   140043851:	(bad)  
   140043853:	add    BYTE PTR [rax+0x1000408],bl
   140043859:	add    al,0x1
   14004385b:	add    BYTE PTR [rdx+rdx*1],al
   14004385e:	add    BYTE PTR [rax],al
   140043860:	or     DWORD PTR [rcx+rax*1],eax
   140043863:	add    BYTE PTR [rdx+riz*1],al
   140043866:	add    BYTE PTR [rax],al
   140043868:	pushf  
   140043869:	jne    0x14004386d
   14004386b:	add    BYTE PTR [rcx],al
   14004386d:	add    BYTE PTR [rax],al
   14004386f:	add    BYTE PTR [rbx+0x26000265],bl
   140043875:	data16 add al,BYTE PTR [rax]
   140043878:	push   rdi
   140043879:	or     eax,0x66260003
   14004387e:	add    al,BYTE PTR [rax]
   140043880:	add    DWORD PTR [rdx],eax
   140043882:	add    DWORD PTR [rax],eax
   140043884:	add    dl,BYTE PTR [rax+0x0]
   140043887:	add    BYTE PTR [rcx],al
   140043889:	or     eax,0x340d0004
   14004388e:	or     al,BYTE PTR [rax]
   140043890:	or     eax,0x9500672
   140043895:	clts   
   140043897:	add    BYTE PTR [rdi],cl
   140043899:	or     DWORD PTR fs:[rax],eax
   14004389c:	sysenter 
   14004389e:	or     BYTE PTR [rax],al
   1400438a0:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400438a3:	jo     0x140043841
   1400438a5:	jne    0x1400438a9
   1400438a7:	add    BYTE PTR [rcx],al
   1400438a9:	add    BYTE PTR [rax],al
   1400438ab:	add    BYTE PTR [rax],al
   1400438ad:	push   0x69160002
   1400438b2:	add    al,BYTE PTR [rax]
   1400438b4:	outs   dx,DWORD PTR ds:[rsi]
   1400438b5:	or     eax,0x69160003
   1400438ba:	add    al,BYTE PTR [rax]
   1400438bc:	add    DWORD PTR [rdx],edx
   1400438be:	(bad)  
   1400438bf:	add    BYTE PTR [rdx],dl
   1400438c1:	je     0x1400438cb
   1400438c3:	add    BYTE PTR [rdx],dl
   1400438c5:	xor    al,0x7
   1400438c7:	add    BYTE PTR [rdx],dl
   1400438c9:	xor    cl,BYTE PTR [rbx]
   1400438cb:	push   rax
   1400438cc:	add    DWORD PTR [rip+0x34150005],edx        # 0x1741938d7
   1400438d2:	mov    edx,0xb8011500
   1400438d7:	add    BYTE PTR [rsi],al
   1400438d9:	push   rax
   1400438da:	add    BYTE PTR [rax],al
   1400438dc:	add    DWORD PTR [rip+0x340d0004],ecx        # 0x1741138e6
   1400438e2:	or     DWORD PTR [rax],eax
   1400438e4:	or     eax,0x1500632
   1400438e9:	add    BYTE PTR [rax],al
   1400438eb:	add    BYTE PTR [rax],al
   1400438ed:	add    BYTE PTR [rax],al
   1400438ef:	add    BYTE PTR [rcx],al
   1400438f1:	add    BYTE PTR [rax],al
   1400438f3:	add    BYTE PTR [rcx],al
   1400438f5:	clts   
   1400438f7:	add    BYTE PTR [rdi],cl
   1400438f9:	push   rsp
   1400438fa:	add    eax,0x4340f00
   1400438ff:	add    BYTE PTR [rdi],cl
   140043901:	adc    cl,BYTE PTR [rbx]
   140043903:	(bad)  
   140043904:	add    DWORD PTR [rsp+rcx*1],ebx
   140043907:	add    BYTE PTR [rsp+riz*2],bl
   14004390a:	adc    BYTE PTR [rax],al
   14004390c:	sbb    al,0x54
   14004390e:	ltr    WORD PTR [rsp+rsi*1]
   140043912:	(bad)  
   140043913:	add    BYTE PTR [rdx+rsi*2],bl
   140043916:	sbb    al,dh
   140043918:	(bad)  
   140043919:	loopne 0x14004392f
   14004391b:	rcl    BYTE PTR [rdx],1
   14004391d:	rcl    BYTE PTR [rax],0x70
   140043920:	add    DWORD PTR [rax],eax
   140043922:	add    BYTE PTR [rax],al
   140043924:	add    BYTE PTR [rax],al
   140043926:	add    BYTE PTR [rax],al
   140043928:	add    DWORD PTR [rax],eax
   14004392a:	add    BYTE PTR [rax],al
   14004392c:	add    DWORD PTR [rcx+rax*1],eax
   14004392f:	add    BYTE PTR [rdx+riz*1],al
   140043932:	add    BYTE PTR [rax],al
   140043934:	add    BYTE PTR [rax],al
   140043936:	add    BYTE PTR [rax],al
   140043938:	add    DWORD PTR [rdi],eax
   14004393a:	add    al,BYTE PTR [rax]
   14004393c:	(bad)  
   14004393d:	add    DWORD PTR [rbx+0x100],ebx
   140043943:	add    BYTE PTR [rcx],al
   140043945:	add    BYTE PTR [rax],al
   140043947:	add    BYTE PTR [rcx],al
   140043949:	add    BYTE PTR [rax],al
   14004394b:	add    BYTE PTR [rcx],cl
   14004394d:	sbb    DWORD PTR [rdx],ecx
   14004394f:	add    BYTE PTR [rcx],bl
   140043951:	je     0x14004395e
   140043953:	add    BYTE PTR [rcx],bl
   140043955:	or     al,BYTE PTR fs:[rax]
   140043958:	sbb    DWORD PTR [rcx+rcx*1],esi
   14004395b:	add    BYTE PTR [rcx],bl
   14004395d:	xor    dl,BYTE PTR [rip+0x11e013f0]        # 0x151e44d53
   140043963:	rcr    BYTE PTR [rbp+rsi*2+0x10002],0x0
   14004396b:	add    BYTE PTR [rdx-0x3cfffd82],bh
   140043971:	jle    0x140043975
   140043973:	add    ah,bh
   140043975:	(bad)  
   140043976:	add    eax,DWORD PTR [rax]
   140043978:	ret    
   140043979:	jle    0x14004397d
   14004397b:	add    BYTE PTR [rcx],bl
   14004397d:	or     DWORD PTR cs:[rax],eax
   140043980:	sbb    eax,0x1d00c464
   140043985:	xor    al,0xc3
   140043987:	add    BYTE PTR [rip+0xe00be01],bl        # 0x14e04f78e
   14004398d:	loopne 0x14004399b
   14004398f:	jo     0x14004399c
   140043991:	push   rax
   140043992:	add    BYTE PTR [rax],al
   140043994:	movabs al,ds:0x1000005e0000309
   14004399d:	sbb    DWORD PTR [rdx],ecx
   14004399f:	add    BYTE PTR [rcx],bl
   1400439a1:	je     0x1400439ae
   1400439a3:	add    BYTE PTR [rcx],bl
   1400439a5:	or     al,BYTE PTR fs:[rax]
   1400439a8:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   1400439ac:	sbb    DWORD PTR [rax+rcx*1],esi
   1400439af:	add    BYTE PTR [rcx],bl
   1400439b1:	push   rdx
   1400439b2:	adc    eax,0xe0
   1400439b7:	add    BYTE PTR [rcx],al
   1400439b9:	add    BYTE PTR [rax],al
   1400439bb:	add    BYTE PTR [rax],al
   1400439bd:	add    BYTE PTR [rax],al
   1400439bf:	add    BYTE PTR [rcx],al
   1400439c1:	add    BYTE PTR [rax],al
   1400439c3:	add    BYTE PTR [rcx],al
   1400439c5:	lar    eax,WORD PTR [rax]
   1400439c8:	(bad)  
   1400439c9:	xor    al,BYTE PTR [rdx]
   1400439cb:	push   rax
   1400439cc:	adc    DWORD PTR [rax+rcx*1],edx
   1400439cf:	add    BYTE PTR [rsp+riz*2],dl
   1400439d2:	(bad)  
   1400439d3:	add    BYTE PTR [rsp+rsi*1],dl
   1400439d6:	or     al,0x0
   1400439d8:	adc    al,0x72
   1400439da:	adc    al,dh
   1400439dc:	(bad)  
   1400439dd:	loopne 0x1400439eb
   1400439df:	jo     0x14004397d
   1400439e1:	jne    0x1400439e5
   1400439e3:	add    BYTE PTR [rdx],al
   1400439e5:	add    BYTE PTR [rax],al
   1400439e7:	add    BYTE PTR [rdx-0x78],ch
   1400439ea:	add    al,BYTE PTR [rax]
   1400439ec:	mov    al,0x88
   1400439ee:	add    al,BYTE PTR [rax]
   1400439f0:	lea    ecx,[rip+0x3]        # 0x1400439f9
   1400439f6:	add    BYTE PTR [rax],al
   1400439f8:	sub    eax,0xbe000288
   1400439fd:	mov    BYTE PTR [rdx],al
   1400439ff:	add    BYTE PTR [rdi+0x30d],ah
   140043a05:	add    BYTE PTR [rax],al
   140043a07:	add    BYTE PTR [rcx],bl
   140043a09:	sbb    DWORD PTR [rdx],ecx
   140043a0b:	add    BYTE PTR [rcx],bl
   140043a0d:	in     al,0x9
   140043a0f:	add    BYTE PTR [rcx],bl
   140043a11:	je     0x140043a1b
   140043a13:	add    BYTE PTR [rcx],bl
   140043a15:	fs (bad) 
   140043a17:	add    BYTE PTR [rcx],bl
   140043a19:	xor    al,0x6
   140043a1b:	add    BYTE PTR [rcx],bl
   140043a1d:	xor    dl,BYTE PTR [rip+0x2759cf0]        # 0x14279d713
   140043a23:	add    BYTE PTR [rdx],al
   140043a25:	add    BYTE PTR [rax],al
   140043a27:	add    BYTE PTR [rbx+0x900028b],ch
   140043a2d:	mov    WORD PTR [rdx],es
   140043a2f:	add    al,al
   140043a31:	or     eax,0x8c480003
   140043a36:	add    al,BYTE PTR [rax]
   140043a38:	(bad)  
   140043a39:	mov    eax,DWORD PTR [rdx]
   140043a3b:	add    BYTE PTR [rsi-0x74],cl
   140043a3e:	add    al,BYTE PTR [rax]
   140043a40:	fisttp DWORD PTR [rip+0x3]        # 0x140043a49
   140043a46:	add    BYTE PTR [rax],al
   140043a48:	add    DWORD PTR [rbx],edx
   140043a4a:	or     BYTE PTR [rax],al
   140043a4c:	adc    esi,DWORD PTR [rsp+rcx*1]
   140043a4f:	add    BYTE PTR [rbx],dl
   140043a51:	push   rdx
   140043a52:	or     al,0xf0
   140043a54:	or     ah,al
   140043a56:	or     BYTE PTR [rax+0x7],dh
   140043a59:	(bad)  
   140043a5a:	(bad)  
   140043a5b:	push   rax
   140043a5c:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4213a6e
   140043a62:	or     eax,DWORD PTR [rax]
   140043a64:	sbb    eax,0x1d000a64
   140043a69:	push   rsp
   140043a6a:	or     DWORD PTR [rax],eax
   140043a6c:	sbb    eax,0x1d000834
   140043a71:	xor    bl,BYTE PTR [rcx]
   140043a73:	lock (bad) 
   140043a75:	loopne 0x140043a8c
   140043a77:	rol    BYTE PTR [rcx],0x18
   140043a7a:	or     al,BYTE PTR [rax]
   140043a7c:	sbb    BYTE PTR [rsp+rcx*1+0x0],ah
   140043a80:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140043a84:	sbb    BYTE PTR [rdx+rcx*1],dh
   140043a87:	add    BYTE PTR [rax],bl
   140043a89:	push   rdx
   140043a8a:	adc    al,0xf0
   140043a8c:	adc    ah,al
   140043a8e:	adc    BYTE PTR [rax+0x1],dh
   140043a91:	clts   
   140043a93:	add    BYTE PTR [rdi],cl
   140043a95:	push   rsp
   140043a96:	or     eax,DWORD PTR [rax]
   140043a98:	sysenter 
   140043a9a:	or     al,BYTE PTR [rax]
   140043a9c:	(bad)  
   140043a9e:	or     esp,DWORD PTR [rax+0x1]
   140043aa1:	adc    al,BYTE PTR [rdx]
   140043aa3:	add    BYTE PTR [rdx],dl
   140043aa5:	jb     0x140043ab2
   140043aa7:	push   rax
   140043aa8:	add    DWORD PTR [rbx],ecx
   140043aaa:	add    DWORD PTR [rax],eax
   140043aac:	or     esp,DWORD PTR [rdx+0x0]
   140043aaf:	add    BYTE PTR [rcx],dl
   140043ab1:	(bad)  
   140043ab3:	add    BYTE PTR [rdi],cl
   140043ab5:	xor    al,0x6
   140043ab7:	add    BYTE PTR [rdi],cl
   140043ab9:	xor    cl,BYTE PTR [rbx]
   140043abb:	jo     0x140043a59
   140043abd:	jne    0x140043ac1
   140043abf:	add    BYTE PTR [rcx],al
   140043ac1:	add    BYTE PTR [rax],al
   140043ac3:	add    ch,bl
   140043ac5:	xchg   esp,eax
   140043ac6:	add    al,BYTE PTR [rax]
   140043ac8:	out    0x94,eax
   140043aca:	add    al,BYTE PTR [rax]
   140043acc:	sub    cl,BYTE PTR [rsi]
   140043ace:	add    eax,DWORD PTR [rax]
   140043ad0:	add    BYTE PTR [rax],al
   140043ad2:	add    BYTE PTR [rax],al
   140043ad4:	adc    DWORD PTR [rdx+rcx*1],ebx
   140043ad7:	add    BYTE PTR [rsp+riz*2],bl
   140043ada:	ltr    WORD PTR [rsp+rsi*1]
   140043ade:	(bad)  
   140043adf:	add    BYTE PTR [rdx+rsi*2],bl
   140043ae2:	sbb    al,dh
   140043ae4:	(bad)  
   140043ae5:	loopne 0x140043afb
   140043ae7:	rcl    BYTE PTR [rdx],1
   140043ae9:	rcl    BYTE PTR [rax],0x70
   140043aec:	pushf  
   140043aed:	jne    0x140043af1
   140043aef:	add    BYTE PTR [rcx],al
   140043af1:	add    BYTE PTR [rax],al
   140043af3:	add    BYTE PTR [rsi],ah
   140043af5:	xchg   ebp,eax
   140043af6:	add    al,BYTE PTR [rax]
   140043af8:	jp     0x140043a90
   140043afa:	add    al,BYTE PTR [rax]
   140043afc:	hlt    
   140043afd:	or     eax,0x3
   140043b02:	add    BYTE PTR [rax],al
   140043b04:	add    DWORD PTR [rcx],ebx
   140043b06:	or     al,BYTE PTR [rax]
   140043b08:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   140043b0c:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140043b10:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140043b14:	sbb    DWORD PTR [rsi+rax*1],esi
   140043b17:	add    BYTE PTR [rcx],bl
   140043b19:	xor    dl,BYTE PTR [rip+0x20611e0]        # 0x1420a4cff
   140043b1f:	add    BYTE PTR [rsi],al
   140043b21:	xor    al,BYTE PTR [rdx]
   140043b23:	jo     0x140043ac1
   140043b25:	jne    0x140043b29
   140043b27:	add    BYTE PTR [rcx],al
   140043b29:	add    BYTE PTR [rax],al
   140043b2b:	add    cl,cl
   140043b2d:	pushf  
   140043b2e:	add    al,BYTE PTR [rax]
   140043b30:	fistp  WORD PTR [rdx+rax*1+0x30e1100]
   140043b37:	add    BYTE PTR [rax],al
   140043b39:	add    BYTE PTR [rax],al
   140043b3b:	add    BYTE PTR [rcx],cl
   140043b3d:	(bad)  
   140043b3e:	add    al,BYTE PTR [rax]
   140043b40:	(bad)  
   140043b41:	xor    al,BYTE PTR [rdx]
   140043b43:	xor    BYTE PTR [rbp+rsi*2+0x10002],bl
   140043b4a:	add    BYTE PTR [rax],al
   140043b4c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140043b4d:	popf   
   140043b4e:	add    al,BYTE PTR [rax]
   140043b50:	mov    cl,0x9d
   140043b52:	add    al,BYTE PTR [rax]
   140043b54:	add    DWORD PTR [rax],eax
   140043b56:	add    BYTE PTR [rax],al
   140043b58:	mov    cl,0x9d
   140043b5a:	add    al,BYTE PTR [rax]
   140043b5c:	add    BYTE PTR [rax],al
   140043b5e:	add    BYTE PTR [rax],al
   140043b60:	add    DWORD PTR [rcx+rax*1],eax
   140043b63:	add    BYTE PTR [rdx+rax*1],al
   140043b66:	add    BYTE PTR [rax],al
   140043b68:	add    DWORD PTR [rcx],ecx
   140043b6a:	add    al,BYTE PTR [rax]
   140043b6c:	or     DWORD PTR [rdx+0x9015002],edx
   140043b72:	add    al,BYTE PTR [rax]
   140043b74:	or     DWORD PTR [rdx+0x2],esi
   140043b77:	push   rax
   140043b78:	adc    DWORD PTR [rdi],ecx
   140043b7a:	add    al,0x0
   140043b7c:	sysenter 
   140043b7e:	(bad)  
   140043b7f:	add    BYTE PTR [rdi],cl
   140043b81:	xor    cl,BYTE PTR [rbx]
   140043b83:	jo     0x140043b21
   140043b85:	jne    0x140043b89
   140043b87:	add    BYTE PTR [rcx],al
   140043b89:	add    BYTE PTR [rax],al
   140043b8b:	add    BYTE PTR [rbp-0x5afffd61],dl
   140043b91:	lahf   
   140043b92:	add    al,BYTE PTR [rax]
   140043b94:	sub    cl,BYTE PTR [rsi]
   140043b96:	add    eax,DWORD PTR [rax]
   140043b98:	add    BYTE PTR [rax],al
   140043b9a:	add    BYTE PTR [rax],al
   140043b9c:	adc    DWORD PTR [rdi],ecx
   140043b9e:	add    al,0x0
   140043ba0:	sysenter 
   140043ba2:	(bad)  
   140043ba3:	add    BYTE PTR [rdi],cl
   140043ba5:	xor    cl,BYTE PTR [rbx]
   140043ba7:	jo     0x140043b45
   140043ba9:	jne    0x140043bad
   140043bab:	add    BYTE PTR [rcx],al
   140043bad:	add    BYTE PTR [rax],al
   140043baf:	add    BYTE PTR [rbp-0x61],cl
   140043bb2:	add    al,BYTE PTR [rax]
   140043bb4:	movsxd ebx,DWORD PTR [rdi+0xe2a0002]
   140043bba:	add    eax,DWORD PTR [rax]
   140043bbc:	add    BYTE PTR [rax],al
   140043bbe:	add    BYTE PTR [rax],al
   140043bc0:	adc    DWORD PTR [rdi],ecx
   140043bc2:	add    al,0x0
   140043bc4:	sysenter 
   140043bc6:	(bad)  
   140043bc7:	add    BYTE PTR [rdi],cl
   140043bc9:	xor    cl,BYTE PTR [rbx]
   140043bcb:	jo     0x140043b69
   140043bcd:	jne    0x140043bd1
   140043bcf:	add    BYTE PTR [rcx],al
   140043bd1:	add    BYTE PTR [rax],al
   140043bd3:	add    ch,ch
   140043bd5:	sahf   
   140043bd6:	add    al,BYTE PTR [rax]
   140043bd8:	sbb    eax,0x2a00029f
   140043bdd:	(bad)  
   140043bde:	add    eax,DWORD PTR [rax]
   140043be0:	add    BYTE PTR [rax],al
   140043be2:	add    BYTE PTR [rax],al
   140043be4:	adc    DWORD PTR [rdi],ecx
   140043be6:	add    al,0x0
   140043be8:	sysenter 
   140043bea:	(bad)  
   140043beb:	add    BYTE PTR [rdi],cl
   140043bed:	xor    cl,BYTE PTR [rbx]
   140043bef:	jo     0x140043b8d
   140043bf1:	jne    0x140043bf5
   140043bf3:	add    BYTE PTR [rcx],al
   140043bf5:	add    BYTE PTR [rax],al
   140043bf7:	add    ch,dl
   140043bf9:	lahf   
   140043bfa:	add    al,BYTE PTR [rax]
   140043bfc:	jrcxz  0x140043b9d
   140043bfe:	add    al,BYTE PTR [rax]
   140043c00:	sub    cl,BYTE PTR [rsi]
   140043c02:	add    eax,DWORD PTR [rax]
   140043c04:	add    BYTE PTR [rax],al
   140043c06:	add    BYTE PTR [rax],al
   140043c08:	add    DWORD PTR [rsi],eax
   140043c0a:	add    al,BYTE PTR [rax]
   140043c0c:	(bad)  
   140043c0d:	xor    al,BYTE PTR [rdx]
   140043c0f:	push   rax
   140043c10:	add    DWORD PTR [rip+0x74050002],eax        # 0x1b4093c18
   140043c16:	add    DWORD PTR [rax],eax
   140043c18:	add    DWORD PTR [rdx],ecx
   140043c1a:	add    al,0x0
   140043c1c:	or     dh,BYTE PTR [rdi+rax*1]
   140043c1f:	add    BYTE PTR [rdx],cl
   140043c21:	xor    al,BYTE PTR [rsi]
   140043c23:	jo     0x140043c36
   140043c25:	or     al,BYTE PTR [rax+rax*1]
   140043c28:	or     dh,BYTE PTR [rax+rcx*1]
   140043c2b:	add    BYTE PTR [rdx],cl
   140043c2d:	push   rdx
   140043c2e:	(bad)  
   140043c2f:	jo     0x140043bcd
   140043c31:	jne    0x140043c35
   140043c33:	add    BYTE PTR [rcx],al
   140043c35:	add    BYTE PTR [rax],al
   140043c37:	add    BYTE PTR [rdx+0x210002ab],ah
   140043c3d:	lods   al,BYTE PTR ds:[rsi]
   140043c3e:	add    al,BYTE PTR [rax]
   140043c40:	rex.R (bad) 
   140043c42:	add    eax,DWORD PTR [rax]
   140043c44:	add    BYTE PTR [rax],al
   140043c46:	add    BYTE PTR [rax],al
   140043c48:	adc    DWORD PTR [rsi],eax
   140043c4a:	add    al,BYTE PTR [rax]
   140043c4c:	(bad)  
   140043c4d:	xor    al,BYTE PTR [rdx]
   140043c4f:	xor    BYTE PTR [rbp+rsi*2+0x10002],bl
   140043c56:	add    BYTE PTR [rax],al
   140043c58:	jbe    0x140043c08
   140043c5a:	add    al,BYTE PTR [rax]
   140043c5c:	lea    ebp,[rsi+0xe5d0002]
   140043c62:	add    eax,DWORD PTR [rax]
   140043c64:	add    BYTE PTR [rax],al
   140043c66:	add    BYTE PTR [rax],al
   140043c68:	add    DWORD PTR [rbx+rcx*1],ebx
   140043c6b:	add    BYTE PTR [rsp+rsi*2],bl
   140043c6e:	(bad)  
   140043c6f:	add    BYTE PTR [rsp+riz*2],bl
   140043c72:	(bad)  
   140043c73:	add    BYTE PTR [rsp+rdx*2],bl
   140043c76:	adc    eax,0x14341c00
   140043c7b:	add    BYTE PTR [rcx+rax*1],bl
   140043c7e:	adc    al,BYTE PTR [rax]
   140043c80:	adc    eax,0x110000e0
   140043c85:	(bad)  
   140043c87:	add    BYTE PTR [rdi],cl
   140043c89:	xor    al,0x6
   140043c8b:	add    BYTE PTR [rdi],cl
   140043c8d:	xor    cl,BYTE PTR [rbx]
   140043c8f:	jo     0x140043c2d
   140043c91:	jne    0x140043c95
   140043c93:	add    BYTE PTR [rcx],al
   140043c95:	add    BYTE PTR [rax],al
   140043c97:	add    BYTE PTR [rbp+0x100002af],dh
   140043c9d:	mov    al,0x2
   140043c9f:	add    BYTE PTR [rsi+0xe],dh
   140043ca2:	add    eax,DWORD PTR [rax]
   140043ca4:	add    BYTE PTR [rax],al
   140043ca6:	add    BYTE PTR [rax],al
   140043ca8:	adc    DWORD PTR [rbx],ebx
   140043caa:	or     al,BYTE PTR [rax]
   140043cac:	sbb    esp,DWORD PTR [rsp+rcx*1+0x0]
   140043cb0:	sbb    esi,DWORD PTR [rbx+rcx*1]
   140043cb3:	add    BYTE PTR [rbx],bl
   140043cb5:	xor    dl,BYTE PTR [rdi]
   140043cb7:	lock adc eax,0x11d013e0
   140043cbd:	ror    BYTE PTR [rdi],0x70
   140043cc0:	pushf  
   140043cc1:	jne    0x140043cc5
   140043cc3:	add    BYTE PTR [rcx],al
   140043cc5:	add    BYTE PTR [rax],al
   140043cc7:	add    dh,dl
   140043cc9:	mov    dh,0x2
   140043ccb:	add    BYTE PTR [rsi],al
   140043ccd:	mov    bh,0x2
   140043ccf:	add    BYTE PTR [rax+0x30e],dl
   140043cd5:	add    BYTE PTR [rax],al
   140043cd7:	add    BYTE PTR [rcx],al
   140043cd9:	(bad)  
   140043cda:	or     al,BYTE PTR [rax]
   140043cdc:	(bad)  
   140043cdd:	xor    al,0x17
   140043cdf:	add    BYTE PTR [rdi],dl
   140043ce1:	mov    dl,0x10
   140043ce3:	lock (bad) 
   140043ce5:	loopne 0x140043cf3
   140043ce7:	ror    BYTE PTR [rdx],1
   140043ce9:	ror    BYTE PTR [rax],0x70
   140043cec:	(bad)  
   140043ced:	(bad)  
   140043cee:	(bad)  
   140043cef:	push   rax
   140043cf0:	sbb    DWORD PTR [rax],ebp
   140043cf2:	or     al,BYTE PTR [rax]
   140043cf4:	sbb    dh,BYTE PTR [rax+rbx*1]
   140043cf7:	add    BYTE PTR [rdx],bl
   140043cf9:	repnz adc al,dh
   140043cfc:	(bad)  
   140043cfd:	loopne 0x140043d0b
   140043cff:	ror    BYTE PTR [rdx],1
   140043d01:	ror    BYTE PTR [rax],0x70
   140043d04:	(bad)  
   140043d05:	(bad)  
   140043d06:	(bad)  
   140043d07:	push   rax
   140043d08:	movabs al,ds:0x1900000070000309
   140043d11:	sub    eax,0x541b0009
   140043d16:	nop
   140043d17:	add    bl,BYTE PTR [rbx]
   140043d19:	xor    al,0x8e
   140043d1b:	add    bl,BYTE PTR [rbx]
   140043d1d:	add    DWORD PTR [rdx+0xce00e02],ecx
   140043d23:	jo     0x140043d30
   140043d25:	(bad)  
   140043d26:	add    BYTE PTR [rax],al
   140043d28:	movabs al,ds:0x1900001440000309
   140043d31:	xor    DWORD PTR [rbx],ecx
   140043d33:	add    BYTE PTR [rdi],bl
   140043d35:	push   rsp
   140043d36:	xchg   esi,eax
   140043d37:	add    bl,BYTE PTR [rdi]
   140043d39:	xor    al,0x94
   140043d3b:	add    bl,BYTE PTR [rdi]
   140043d3d:	add    DWORD PTR [rsi+0x10f01202],ecx
   140043d43:	loopne 0x140043d53
   140043d45:	ror    BYTE PTR [rax+rsi*2],0xb
   140043d49:	(bad)  
   140043d4a:	add    BYTE PTR [rax],al
   140043d4c:	movabs al,ds:0x100001460000309
   140043d55:	adc    al,BYTE PTR [rsi]
   140043d57:	add    BYTE PTR [rdx],dl
   140043d59:	adc    eax,DWORD PTR fs:[rax]
   140043d5c:	adc    dh,BYTE PTR [rcx+rdx*1]
   140043d5f:	add    BYTE PTR [rdx],dl
   140043d61:	ror    BYTE PTR [rbx],cl
   140043d63:	push   rax
   140043d64:	add    DWORD PTR [rcx],ebx
   140043d66:	or     al,BYTE PTR [rax]
   140043d68:	sbb    DWORD PTR [rdi+rcx*1+0x0],esi
   140043d6c:	sbb    DWORD PTR [rsi+rcx*1+0x0],esp
   140043d70:	sbb    DWORD PTR [rbp+rcx*1+0x0],edx
   140043d74:	sbb    DWORD PTR [rsp+rcx*1],esi
   140043d77:	add    BYTE PTR [rcx],bl
   140043d79:	xchg   edx,eax
   140043d7a:	adc    eax,0xa1c01e0
   140043d7f:	add    BYTE PTR [rsp+rsi*1],bl
   140043d82:	adc    al,0x0
   140043d84:	sbb    al,0xb2
   140043d86:	adc    eax,0x11e013f0
   140043d8b:	ror    BYTE PTR [rdi],1
   140043d8d:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b644a04
   140043d94:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4213da6
   140043d9a:	or     eax,0xc641d00
   140043d9f:	add    BYTE PTR [rip+0x1d000b54],bl        # 0x15d0448f9
   140043da5:	xor    al,0xa
   140043da7:	add    BYTE PTR [rip+0x17f01952],bl        # 0x157f456ff
   140043dad:	loopne 0x140043dc4
   140043daf:	rcr    BYTE PTR [rcx],0x25
   140043db2:	or     DWORD PTR [rax],eax
   140043db4:	adc    esi,DWORD PTR [rcx+rdi*1]
   140043db7:	add    BYTE PTR [rbx],dl
   140043db9:	add    DWORD PTR [rax],esi
   140043dbb:	add    BYTE PTR [rax+rsi*8],cl
   140043dbe:	or     ah,al
   140043dc0:	or     BYTE PTR [rax+0x7],dh
   140043dc3:	(bad)  
   140043dc4:	(bad)  
   140043dc5:	push   rax
   140043dc6:	add    BYTE PTR [rax],al
   140043dc8:	movabs al,ds:0x1100000170000309
   140043dd1:	or     al,BYTE PTR [rax+rax*1]
   140043dd4:	or     dh,BYTE PTR [rdi+rax*1]
   140043dd7:	add    BYTE PTR [rdx],cl
   140043dd9:	xor    al,BYTE PTR [rsi]
   140043ddb:	jo     0x140043d79
   140043ddd:	jne    0x140043de1
   140043ddf:	add    BYTE PTR [rcx],al
   140043de1:	add    BYTE PTR [rax],al
   140043de3:	add    BYTE PTR [rsi+0x40002ca],ah
   140043de9:	retf   
   140043dea:	add    al,BYTE PTR [rax]
   140043dec:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140043ded:	(bad)  
   140043dee:	add    eax,DWORD PTR [rax]
   140043df0:	add    BYTE PTR [rax],al
   140043df2:	add    BYTE PTR [rax],al
   140043df4:	sbb    DWORD PTR [rip+0x5416000a],esp        # 0x1941a3e04
   140043dfa:	adc    DWORD PTR [rax],eax
   140043dfc:	(bad)  
   140043dfd:	xor    al,0x10
   140043dff:	add    BYTE PTR [rsi],dl
   140043e01:	jb     0x140043e15
   140043e03:	lock adc al,ah
   140043e06:	(bad)  
   140043e07:	ror    BYTE PTR [rax+rsi*2],0xb
   140043e0b:	(bad)  
   140043e0c:	movabs al,ds:0x1900000038000309
   140043e15:	sub    eax,DWORD PTR [rdi]
   140043e17:	add    BYTE PTR [rdx],bl
   140043e19:	je     0x140043e0f
   140043e1b:	add    BYTE PTR [rdx],bl
   140043e1d:	xor    al,0xf3
   140043e1f:	add    BYTE PTR [rdx],bl
   140043e21:	add    eax,esi
   140043e23:	add    BYTE PTR [rbx],cl
   140043e25:	push   rax
   140043e26:	add    BYTE PTR [rax],al
   140043e28:	movabs al,ds:0x100000770000309
   140043e31:	clts   
   140043e33:	add    BYTE PTR [rdi],cl
   140043e35:	xor    al,0xc
   140043e37:	add    BYTE PTR [rdi],cl
   140043e39:	jb     0x140043e43
   140043e3b:	jo     0x140043e44
   140043e3d:	(bad)  
   140043e3e:	(bad)  
   140043e3f:	push   rax
   140043e40:	adc    DWORD PTR [rdi],ecx
   140043e42:	add    al,0x0
   140043e44:	sysenter 
   140043e46:	(bad)  
   140043e47:	add    BYTE PTR [rdi],cl
   140043e49:	xor    cl,BYTE PTR [rbx]
   140043e4b:	jo     0x140043de9
   140043e4d:	jne    0x140043e51
   140043e4f:	add    BYTE PTR [rcx],al
   140043e51:	add    BYTE PTR [rax],al
   140043e53:	add    BYTE PTR [rcx-0x3d],ah
   140043e56:	add    al,BYTE PTR [rax]
   140043e58:	push   0xffffffffffffffc3
   140043e5a:	add    al,BYTE PTR [rax]
   140043e5c:	sub    cl,BYTE PTR [rsi]
   140043e5e:	add    eax,DWORD PTR [rax]
   140043e60:	add    BYTE PTR [rax],al
   140043e62:	add    BYTE PTR [rax],al
   140043e64:	add    DWORD PTR [rcx],ebx
   140043e66:	or     al,BYTE PTR [rax]
   140043e68:	sbb    DWORD PTR [rbp+rcx*1+0x0],esi
   140043e6c:	sbb    DWORD PTR [rsp+rcx*1+0x0],esp
   140043e70:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140043e74:	sbb    DWORD PTR [rdx+rcx*1],esi
   140043e77:	add    BYTE PTR [rcx],bl
   140043e79:	jb     0x140043e90
   140043e7b:	loopne 0x140043e7e
   140043e7d:	sbb    BYTE PTR [rdx],cl
   140043e7f:	add    BYTE PTR [rax],bl
   140043e81:	xor    al,0x10
   140043e83:	add    BYTE PTR [rax],bl
   140043e85:	push   rdx
   140043e86:	adc    al,0xf0
   140043e88:	adc    ah,al
   140043e8a:	adc    al,dl
   140043e8c:	(bad)  
   140043e8d:	ror    BYTE PTR [rax+rsi*2],0xb
   140043e91:	(bad)  
   140043e92:	or     dl,BYTE PTR [rax+0x1]
   140043e95:	adc    eax,0x74150008
   140043e9a:	or     al,BYTE PTR [rax]
   140043e9c:	adc    eax,0x15000964
   140043ea1:	xor    al,0x8
   140043ea3:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e44ffb
   140043ea9:	(bad)  
   140043eaa:	add    DWORD PTR [rax],eax
   140043eac:	(bad)  
   140043ead:	rex.X add BYTE PTR [rax],al
   140043eb0:	adc    DWORD PTR [rax],edx
   140043eb2:	(bad)  
   140043eb3:	add    BYTE PTR [rax],dl
   140043eb5:	(bad)  
   140043eb6:	or     al,0xf0
   140043eb8:	or     dl,al
   140043eba:	or     al,al
   140043ebc:	(bad)  
   140043ebd:	jo     0x140043ec4
   140043ebf:	(bad)  
   140043ec0:	add    al,0x30
   140043ec2:	add    BYTE PTR [rax],al
   140043ec4:	pushf  
   140043ec5:	jne    0x140043ec9
   140043ec7:	add    BYTE PTR [rcx],al
   140043ec9:	add    BYTE PTR [rax],al
   140043ecb:	add    BYTE PTR [rbx],al
   140043ecd:	(bad)  
   140043ece:	add    al,BYTE PTR [rax]
   140043ed0:	std    
   140043ed1:	(bad)  
   140043ed2:	add    al,BYTE PTR [rax]
   140043ed4:	ror    BYTE PTR [rsi],0x3
   140043ed7:	add    BYTE PTR [rax],al
   140043ed9:	add    BYTE PTR [rax],al
   140043edb:	add    BYTE PTR [rcx],dl
   140043edd:	(bad)  
   140043edf:	add    BYTE PTR [rdi],cl
   140043ee1:	xor    al,0x6
   140043ee3:	add    BYTE PTR [rdi],cl
   140043ee5:	xor    cl,BYTE PTR [rbx]
   140043ee7:	jo     0x140043e85
   140043ee9:	jne    0x140043eed
   140043eeb:	add    BYTE PTR [rcx],al
   140043eed:	add    BYTE PTR [rax],al
   140043eef:	add    BYTE PTR [rdx-0x2c],dh
   140043ef2:	add    al,BYTE PTR [rax]
   140043ef4:	mov    ah,dl
   140043ef6:	add    al,BYTE PTR [rax]
   140043ef8:	sub    cl,BYTE PTR [rsi]
   140043efa:	add    eax,DWORD PTR [rax]
   140043efc:	add    BYTE PTR [rax],al
   140043efe:	add    BYTE PTR [rax],al
   140043f00:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b4193f0e
   140043f06:	or     BYTE PTR [rax],al
   140043f08:	adc    eax,0x15000764
   140043f0d:	xor    al,0x6
   140043f0f:	add    BYTE PTR [rip+0x1e01132],dl        # 0x141e45047
   140043f15:	adc    al,0x6
   140043f17:	add    BYTE PTR [rsp+riz*2],dl
   140043f1a:	(bad)  
   140043f1b:	add    BYTE PTR [rsp+rsi*1],dl
   140043f1e:	(bad)  
   140043f1f:	add    BYTE PTR [rdx+rsi*1],dl
   140043f22:	adc    BYTE PTR [rax+0x11],dh
   140043f25:	adc    eax,0x74150008
   140043f2a:	or     al,BYTE PTR [rax]
   140043f2c:	adc    eax,0x15000964
   140043f31:	xor    al,0x8
   140043f33:	add    BYTE PTR [rip+0xffffffff9cf01152],dl        # 0xdcf4508b
   140043f39:	jne    0x140043f3d
   140043f3b:	add    BYTE PTR [rcx],al
   140043f3d:	add    BYTE PTR [rax],al
   140043f3f:	add    BYTE PTR [rax+rbx*8-0x26f6fffe],bh
   140043f46:	add    al,BYTE PTR [rax]
   140043f48:	pop    rbp
   140043f49:	(bad)  
   140043f4a:	add    eax,DWORD PTR [rax]
   140043f4c:	add    BYTE PTR [rax],al
   140043f4e:	add    BYTE PTR [rax],al
   140043f50:	add    DWORD PTR [rsi],ecx
   140043f52:	add    al,BYTE PTR [rax]
   140043f54:	(bad)  
   140043f55:	xor    cl,BYTE PTR [rdx]
   140043f57:	xor    BYTE PTR [rcx],al
   140043f59:	sbb    BYTE PTR [rsi],al
   140043f5b:	add    BYTE PTR [rax],bl
   140043f5d:	push   rsp
   140043f5e:	(bad)  
   140043f5f:	add    BYTE PTR [rax],bl
   140043f61:	xor    al,0x6
   140043f63:	add    BYTE PTR [rax],bl
   140043f65:	xor    dl,BYTE PTR [rax+riz*2]
   140043f68:	sbb    DWORD PTR [rip+0x741f350d],ebp        # 0x1b423747b
   140043f6e:	adc    al,0x0
   140043f70:	sbb    esp,DWORD PTR [rbx+rdx*1+0x0]
   140043f74:	(bad)  
   140043f75:	xor    al,0x12
   140043f77:	add    BYTE PTR [rbx],dl
   140043f79:	xor    ecx,DWORD PTR [rsi]
   140043f7b:	mov    dl,0xa
   140043f7d:	lock or al,ah
   140043f80:	(bad)  
   140043f81:	rol    BYTE PTR [rax+rax*8],1
   140043f84:	add    dl,BYTE PTR [rax+0x0]
   140043f87:	add    BYTE PTR [rax+0x50000309],ah
   140043f8d:	add    BYTE PTR [rax],al
   140043f8f:	add    BYTE PTR [rcx],dl
   140043f91:	or     al,BYTE PTR [rax+rax*1]
   140043f94:	or     dh,BYTE PTR [rsi+rax*1]
   140043f97:	add    BYTE PTR [rdx],cl
   140043f99:	xor    al,BYTE PTR [rsi]
   140043f9b:	jo     0x140043f39
   140043f9d:	jne    0x140043fa1
   140043f9f:	add    BYTE PTR [rcx],al
   140043fa1:	add    BYTE PTR [rax],al
   140043fa3:	add    bh,cl
   140043fa5:	loop   0x140043fa9
   140043fa7:	add    ch,ah
   140043fa9:	loop   0x140043fad
   140043fab:	add    BYTE PTR [rcx],dl
   140043fad:	(bad)  
   140043fae:	add    eax,DWORD PTR [rax]
   140043fb0:	add    BYTE PTR [rax],al
   140043fb2:	add    BYTE PTR [rax],al
   140043fb4:	sbb    DWORD PTR [rax],ebp
   140043fb6:	or     BYTE PTR [rax],al
   140043fb8:	sbb    ah,ah
   140043fba:	adc    eax,0x14741a00
   140043fbf:	add    BYTE PTR [rdx],bl
   140043fc1:	adc    eax,DWORD PTR fs:[rax]
   140043fc4:	sbb    dh,dl
   140043fc6:	adc    BYTE PTR [rax-0x60],dl
   140043fc9:	or     DWORD PTR [rbx],eax
   140043fcb:	add    BYTE PTR [rax+0x0],dh
   140043fce:	add    BYTE PTR [rax],al
   140043fd0:	add    DWORD PTR [rip+0x74150009],edx        # 0x1b4193fdf
   140043fd6:	add    eax,0x4641500
   140043fdb:	add    BYTE PTR [rip+0x15000354],dl        # 0x155044335
   140043fe1:	xor    al,0x2
   140043fe3:	add    BYTE PTR [rip+0x110000e0],dl        # 0x1510440c9
   140043fe9:	(bad)  
   140043feb:	add    BYTE PTR [rdi],cl
   140043fed:	xor    al,0x7
   140043fef:	add    BYTE PTR [rdi],cl
   140043ff1:	xor    cl,BYTE PTR [rbx]
   140043ff3:	jo     0x140043f91
   140043ff5:	jne    0x140043ff9
   140043ff7:	add    BYTE PTR [rcx],al
   140043ff9:	add    BYTE PTR [rax],al
   140043ffb:	add    BYTE PTR [rdx-0x1a],cl
   140043ffe:	add    al,BYTE PTR [rax]
   140044000:	push   rsp
   140044001:	out    0x2,al
   140044003:	add    ah,ah
   140044005:	(bad)  
   140044006:	add    eax,DWORD PTR [rax]
   140044008:	add    BYTE PTR [rax],al
   14004400a:	add    BYTE PTR [rax],al
   14004400c:	add    DWORD PTR [rsi],eax
   14004400e:	add    al,BYTE PTR [rax]
   140044010:	(bad)  
   140044011:	jb     0x140044015
   140044013:	xor    BYTE PTR [rcx],al
   140044015:	clts   
   140044017:	add    BYTE PTR [rdi],cl
   140044019:	adc    DWORD PTR fs:[rax],eax
   14004401c:	sysenter 
   14004401e:	adc    BYTE PTR [rax],al
   140044020:	psrld  mm1,QWORD PTR [rbx]
   140044023:	jo     0x14004403e
   140044025:	sub    eax,0x741f550d
   14004402a:	adc    al,0x0
   14004402c:	sbb    esp,DWORD PTR [rbx+rdx*1+0x0]
   140044030:	(bad)  
   140044031:	xor    al,0x12
   140044033:	add    BYTE PTR [rbx],dl
   140044035:	push   rbx
   140044036:	(bad)  
   140044037:	mov    dl,0xa
   140044039:	lock or al,ah
   14004403c:	(bad)  
   14004403d:	rol    BYTE PTR [rax+rax*8],1
   140044040:	add    dl,BYTE PTR [rax+0x0]
   140044043:	add    BYTE PTR [rax+0x58000309],ah
   140044049:	add    BYTE PTR [rax],al
   14004404b:	add    BYTE PTR [rcx],bl
   14004404d:	(bad)  
   14004404e:	add    eax,0x88010d00
   140044053:	add    BYTE PTR [rsi],al
   140044055:	loopne 0x14004405b
   140044057:	rol    BYTE PTR [rdx],0x50
   14004405a:	add    BYTE PTR [rax],al
   14004405c:	movabs al,ds:0x2100000400000309
   140044065:	sub    BYTE PTR [rdx],cl
   140044067:	add    BYTE PTR [rax],ch
   140044069:	hlt    
   14004406a:	add    DWORD PTR [rax],0x20
   14004406d:	(bad)  
   14004406e:	test   BYTE PTR [rax],al
   140044070:	sbb    BYTE PTR [rbp+rax*4+0x0],dh
   140044074:	adc    BYTE PTR [rsi+rax*4+0x0],ah
   140044078:	or     BYTE PTR [rdi+rax*4],dh
   14004407b:	add    al,dl
   14004407d:	in     al,dx
   14004407e:	add    al,BYTE PTR [rax]
   140044080:	sub    ebp,ebp
   140044082:	add    al,BYTE PTR [rax]
   140044084:	rex.WR
   140044085:	add    al,0x0
   140044088:	and    DWORD PTR [rax],eax
   14004408a:	add    BYTE PTR [rax],al
   14004408c:	shr    ah,1
   14004408e:	add    al,BYTE PTR [rax]
   140044090:	sub    ebp,ebp
   140044092:	add    al,BYTE PTR [rax]
   140044094:	rex.WR
   140044095:	add    al,0x0
   140044098:	add    DWORD PTR [rdi],edx
   14004409a:	(bad)  
   14004409b:	add    BYTE PTR [rdi],dl
   14004409d:	push   rsp
   14004409e:	or     eax,DWORD PTR [rax]
   1400440a0:	(bad)  
   1400440a1:	xor    dl,BYTE PTR [rbx]
   1400440a3:	lock adc eax,esp
   1400440a6:	pshufw mm4,QWORD PTR [rcx],0x15
   1400440aa:	(bad)  
   1400440ab:	add    BYTE PTR [rip+0xd000ac4],dl        # 0x14d044b75
   1400440b1:	or     DWORD PTR fs:[rax],eax
   1400440b4:	add    eax,0x834
   1400440b9:	in     al,dx
   1400440ba:	add    al,BYTE PTR [rax]
   1400440bc:	(bad)  
   1400440bd:	in     al,dx
   1400440be:	add    al,BYTE PTR [rax]
   1400440c0:	cwde   
   1400440c1:	add    al,0x0
   1400440c4:	and    DWORD PTR [rax],eax
   1400440c6:	add    BYTE PTR [rax],al
   1400440c8:	add    ah,ch
   1400440ca:	add    al,BYTE PTR [rax]
   1400440cc:	(bad)  
   1400440cd:	in     al,dx
   1400440ce:	add    al,BYTE PTR [rax]
   1400440d0:	cwde   
   1400440d1:	add    al,0x0
   1400440d4:	sbb    DWORD PTR [rbx],edx
   1400440d6:	add    DWORD PTR [rax],eax
   1400440d8:	add    al,0xa2
   1400440da:	add    BYTE PTR [rax],al
   1400440dc:	movabs al,ds:0x100000040000309
   1400440e5:	or     al,BYTE PTR [rax+rax*1]
   1400440e8:	or     dh,BYTE PTR [rdx+rcx*1]
   1400440eb:	add    BYTE PTR [rdx],cl
   1400440ed:	jb     0x1400440f5
   1400440ef:	jo     0x1400440f2
   1400440f1:	adc    al,0x8
   1400440f3:	add    BYTE PTR [rsp+riz*2],dl
   1400440f6:	adc    BYTE PTR [rax],al
   1400440f8:	adc    al,0x54
   1400440fa:	lldt   WORD PTR [rsp+rsi*1]
   1400440fe:	(bad)  
   1400440ff:	add    BYTE PTR [rdx+rsi*4],dl
   140044102:	adc    BYTE PTR [rax+0x1],dh
   140044105:	or     BYTE PTR [rcx],al
   140044107:	add    BYTE PTR [rax],cl
   140044109:	(bad)  
   14004410a:	add    BYTE PTR [rax],al
   14004410c:	adc    DWORD PTR [rdi],ecx
   14004410e:	add    al,0x0
   140044110:	sysenter 
   140044112:	(bad)  
   140044113:	add    BYTE PTR [rdi],cl
   140044115:	xor    cl,BYTE PTR [rbx]
   140044117:	jo     0x1400440b5
   140044119:	jne    0x14004411d
   14004411b:	add    BYTE PTR [rcx],al
   14004411d:	add    BYTE PTR [rax],al
   14004411f:	add    BYTE PTR [rbp-0xd],ah
   140044122:	add    al,BYTE PTR [rax]
   140044124:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140044125:	repz add al,BYTE PTR [rax]
   140044128:	jbe    0x140044138
   14004412a:	add    eax,DWORD PTR [rax]
   14004412c:	add    BYTE PTR [rax],al
   14004412e:	add    BYTE PTR [rax],al
   140044130:	add    DWORD PTR [rcx+rax*1],eax
   140044133:	add    BYTE PTR [rdx+rax*4],al
   140044136:	add    BYTE PTR [rax],al
   140044138:	add    DWORD PTR [rdx],ecx
   14004413a:	add    eax,DWORD PTR [rax]
   14004413c:	or     ch,BYTE PTR [rax+0x2]
   14004413f:	add    BYTE PTR [rdx+riz*4],al
   140044142:	add    BYTE PTR [rax],al
   140044144:	add    DWORD PTR [rax+rcx*1],edx
   140044147:	add    BYTE PTR [rsp+riz*2],dl
   14004414a:	or     al,0x0
   14004414c:	adc    al,0x54
   14004414e:	or     eax,DWORD PTR [rax]
   140044150:	adc    al,0x34
   140044152:	or     al,BYTE PTR [rax]
   140044154:	adc    al,0x72
   140044156:	adc    BYTE PTR [rax+0x1],dh
   140044159:	clts   
   14004415b:	add    BYTE PTR [rdi],cl
   14004415d:	str    WORD PTR fs:[rdi]
   140044161:	xor    al,0xe
   140044163:	add    BYTE PTR [rdi],cl
   140044165:	mov    dl,0xb
   140044167:	jo     0x140044182
   140044169:	(bad)  
   14004416a:	or     edx,DWORD PTR [rbp+0x19]
   14004416d:	push   rbx
   14004416e:	adc    al,0x1
   140044170:	adc    DWORD PTR [rax],eax
   140044172:	or     eax,0x9e00bf0
   140044177:	rol    BYTE PTR [rdi],1
   140044179:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x1436445f0
   140044180:	add    dl,BYTE PTR [rax+0x0]
   140044183:	add    BYTE PTR [rax+0x78000309],ah
   140044189:	add    BYTE PTR [rax],al
   14004418b:	add    BYTE PTR [rcx],al
   14004418d:	or     BYTE PTR [rdx],al
   14004418f:	add    BYTE PTR [rax],cl
   140044191:	xchg   edx,eax
   140044192:	add    al,0x30
   140044194:	sbb    DWORD PTR [rsi],esp
   140044196:	or     DWORD PTR [rax],eax
   140044198:	sbb    BYTE PTR [rax+0xe],ch
   14004419b:	add    BYTE PTR [rcx+rax*1],dl
   14004419e:	(bad)  
   14004419f:	add    BYTE PTR [rcx],cl
   1400441a1:	loopne 0x1400441aa
   1400441a3:	jo     0x1400441ab
   1400441a5:	(bad)  
   1400441a6:	add    eax,0x500430
   1400441ab:	add    BYTE PTR [rax-0x2ffffcf7],ah
   1400441b1:	add    BYTE PTR [rax],al
   1400441b3:	add    BYTE PTR [rcx],al
   1400441b5:	(bad)  
   1400441b6:	add    al,BYTE PTR [rax]
   1400441b8:	(bad)  
   1400441b9:	adc    al,BYTE PTR [rdx]
   1400441bb:	xor    BYTE PTR [rcx],al
   1400441bd:	or     eax,DWORD PTR [rbx]
   1400441bf:	add    BYTE PTR [rbx],cl
   1400441c1:	push   0xffffffffc2070005
   1400441c6:	add    BYTE PTR [rax],al
   1400441c8:	add    DWORD PTR [rbx],ebx
   1400441ca:	or     BYTE PTR [rax],al
   1400441cc:	sbb    esi,DWORD PTR [rcx+rcx*1+0x0]
   1400441d0:	sbb    esp,DWORD PTR [rax+rcx*1+0x0]
   1400441d4:	sbb    esi,DWORD PTR [rdi+rax*1]
   1400441d7:	add    BYTE PTR [rbx],bl
   1400441d9:	xor    dl,BYTE PTR [rax+rdx*2]
   1400441dc:	or     DWORD PTR [rdi],ecx
   1400441de:	(bad)  
   1400441df:	add    BYTE PTR [rdi],cl
   1400441e1:	or     DWORD PTR fs:[rax],eax
   1400441e4:	sysenter 
   1400441e6:	or     BYTE PTR [rax],al
   1400441e8:	rdmsr  
   1400441ea:	or     esi,DWORD PTR [rax-0x64]
   1400441ed:	jne    0x1400441f1
   1400441ef:	add    BYTE PTR [rcx],al
   1400441f1:	add    BYTE PTR [rax],al
   1400441f3:	add    BYTE PTR [rdx+0x8],bl
   1400441f6:	add    eax,DWORD PTR [rax]
   1400441f8:	(bad)  
   1400441f9:	or     BYTE PTR [rbx],al
   1400441fb:	add    ah,bh
   1400441fd:	(bad)  
   1400441fe:	add    eax,DWORD PTR [rax]
   140044200:	(bad)  
   140044201:	or     BYTE PTR [rbx],al
   140044203:	add    BYTE PTR [rcx],cl
   140044205:	or     al,BYTE PTR [rax+rax*1]
   140044208:	or     dh,BYTE PTR [rsi+rax*1]
   14004420b:	add    BYTE PTR [rdx],cl
   14004420d:	xor    al,BYTE PTR [rsi]
   14004420f:	jo     0x1400441ad
   140044211:	jne    0x140044215
   140044213:	add    BYTE PTR [rcx],al
   140044215:	add    BYTE PTR [rax],al
   140044217:	add    BYTE PTR [rip+0x60000309],ch        # 0x1a0044526
   14004421d:	or     DWORD PTR [rbx],eax
   14004421f:	add    BYTE PTR [rax],dh
   140044221:	lsl    eax,WORD PTR [rax]
   140044224:	(bad)  
   140044225:	or     DWORD PTR [rbx],eax
   140044227:	add    BYTE PTR [rcx],al
   140044229:	add    BYTE PTR [rax],al
   14004422b:	add    BYTE PTR [rcx],al
   14004422d:	or     BYTE PTR [rcx],al
   14004422f:	add    BYTE PTR [rax],cl
   140044231:	rex.X add BYTE PTR [rax],al
   140044234:	add    DWORD PTR [rcx],ecx
   140044236:	add    DWORD PTR [rax],eax
   140044238:	or     DWORD PTR [rdx+0x0],esp
   14004423b:	add    BYTE PTR [rcx],al
   14004423d:	or     al,BYTE PTR [rax+rax*1]
   140044240:	or     dh,BYTE PTR [rcx*1+0x6720a00]
   140044247:	jo     0x14004424a
   140044249:	or     BYTE PTR [rax+rax*1],al
   14004424c:	or     BYTE PTR [rdx+0x4],dh
   14004424f:	jo     0x140044254
   140044251:	(bad)  
   140044252:	add    dh,BYTE PTR [rax]
	...
   140044264:	sti    
   140044265:	movabs eax,ds:0x42b000000000595e
   14004426e:	add    al,0x0
   140044270:	add    DWORD PTR [rax],eax
   140044272:	add    BYTE PTR [rax],al
   140044274:	add    al,0x0
   140044276:	add    BYTE PTR [rax],al
   140044278:	add    al,0x0
   14004427a:	add    BYTE PTR [rax],al
   14004427c:	mov    BYTE PTR [rdx+0x4],al
   14004427f:	add    BYTE PTR [rax-0x57fffbbe],bl
   140044285:	rex.X add al,0x0
   140044288:	nop
   140044289:	jae    0x14004428b
   14004428b:	add    BYTE PTR [rax+0x62],ah
   14004428e:	add    al,BYTE PTR [rax]
   140044290:	jo     0x1400442f4
   140044292:	add    al,BYTE PTR [rax]
   140044294:	push   rax
   140044295:	movsxd eax,DWORD PTR [rdx]
   140044297:	add    al,al
   140044299:	rex.X add al,0x0
   14004429c:	fiadd  DWORD PTR [rdx+0x4]
   14004429f:	add    bl,dh
   1400442a1:	rex.X add al,0x0
   1400442a4:	or     BYTE PTR [rbx+0x4],al
   1400442a7:	add    BYTE PTR [rax],al
   1400442a9:	add    BYTE PTR [rcx],al
   1400442ab:	add    BYTE PTR [rdx],al
   1400442ad:	add    BYTE PTR [rbx],al
   1400442af:	add    BYTE PTR [rsi+0x70],dh
   1400442b2:	movsxd esp,DWORD PTR [rsi+0x5f]
   1400442b5:	je     0x140044326
   1400442b7:	pop    rdi
   1400442b8:	imul   esi,DWORD PTR [rsi+0x33],0x2e
   1400442bc:	gs js  0x140044324
   1400442bf:	add    BYTE PTR [rdx+0x69],al
   1400442c2:	outs   dx,BYTE PTR ds:[rsi]
   1400442c3:	(bad)  
   1400442c4:	jb     0x14004433f
   1400442c6:	push   rax
   1400442c7:	jb     0x140044338
   1400442c9:	jo     0x140044330
   1400442cb:	jb     0x140044341
   1400442cd:	imul   esp,DWORD PTR [rbp+0x73],0x7465475f
   1400442d4:	push   rsi
   1400442d5:	(bad)  
   1400442d6:	ins    BYTE PTR es:[rdi],dx
   1400442d7:	jne    0x14004433e
   1400442d9:	add    BYTE PTR [rdi+0x65],al
   1400442dc:	je     0x140044330
   1400442de:	gs jae 0x140044350
   1400442e1:	jne    0x140044355
   1400442e3:	movsxd esp,DWORD PTR [rbp+0x4d]
   1400442e6:	(bad)  
   1400442e7:	outs   dx,BYTE PTR ds:[rsi]
   1400442e8:	imul   esp,DWORD PTR [rsi+0x65],0x6f437473
   1400442ef:	jne    0x14004435f
   1400442f1:	je     0x1400442f3
   1400442f3:	rex.RXB
   1400442f4:	gs je  0x140044349
   1400442f7:	gs jae 0x140044369
   1400442fa:	jne    0x14004436e
   1400442fc:	movsxd esp,DWORD PTR [rbp+0x4d]
   1400442ff:	(bad)  
   140044300:	outs   dx,BYTE PTR ds:[rsi]
   140044301:	imul   esp,DWORD PTR [rsi+0x65],0x737473
   140044308:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004430a:	jae    0x140044380
   14004430c:	(bad)  
   14004430d:	ins    BYTE PTR es:[rdi],dx
   14004430e:	ins    BYTE PTR es:[rdi],dx
   14004430f:	push   rbx
   140044310:	movsxd ebp,DWORD PTR [rax+0x65]
   140044313:	ins    DWORD PTR es:[rdi],dx
   140044314:	(bad)  
   140044315:	rex.X imul ebp,DWORD PTR [rsi+0x64],0x73676e69
   14004431d:	add    BYTE PTR [rax],al
   14004431f:	add    BYTE PTR [rax+0x445],cl
   140044325:	add    BYTE PTR [rax],al
   140044327:	add    BYTE PTR [rax],al
   140044329:	add    BYTE PTR [rax],al
   14004432b:	add    BYTE PTR [rdx+rdx*2+0x4],dl
   14004432f:	add    BYTE PTR [rax],bl
   140044331:	and    al,BYTE PTR [rbx]
   140044333:	add    BYTE PTR [rax],dh
   140044335:	rex.WB add al,0x0
	...
   140044340:	fcom   DWORD PTR [rdx+0x4]
   140044343:	add    al,al
   140044345:	and    eax,0x43700003
   14004434a:	add    al,0x0
	...
   140044354:	push   0x455
   140044359:	and    BYTE PTR [rbx],al
	...
   14004436f:	add    BYTE PTR [rbx+rdx*2+0x4],ah
   140044376:	add    BYTE PTR [rax],al
   140044378:	(bad)  
   140044379:	pop    rcx
   14004437a:	add    al,0x0
   14004437c:	add    BYTE PTR [rax],al
   14004437e:	add    BYTE PTR [rax],al
   140044380:	or     bl,BYTE PTR [rcx+0x4]
   140044383:	add    BYTE PTR [rax],al
   140044385:	add    BYTE PTR [rax],al
   140044387:	add    al,bh
   140044389:	pop    rax
   14004438a:	add    al,0x0
   14004438c:	add    BYTE PTR [rax],al
   14004438e:	add    BYTE PTR [rax],al
   140044390:	call   0x1400447ed
   140044395:	add    BYTE PTR [rax],al
   140044397:	add    dh,dl
   140044399:	pop    rax
   14004439a:	add    al,0x0
   14004439c:	add    BYTE PTR [rax],al
   14004439e:	add    BYTE PTR [rax],al
   1400443a0:	mov    esp,0x458
   1400443a5:	add    BYTE PTR [rax],al
   1400443a7:	add    BYTE PTR [rdx+0x458],ah
   1400443ad:	add    BYTE PTR [rax],al
   1400443af:	add    BYTE PTR [rax+0x458],cl
   1400443b5:	add    BYTE PTR [rax],al
   1400443b7:	add    BYTE PTR [rax+rbx*2+0x4],bh
   1400443bb:	add    BYTE PTR [rax],al
   1400443bd:	add    BYTE PTR [rax],al
   1400443bf:	add    BYTE PTR [rax+0x58],dh
   1400443c2:	add    al,0x0
   1400443c4:	add    BYTE PTR [rax],al
   1400443c6:	add    BYTE PTR [rax],al
   1400443c8:	pop    rsi
   1400443c9:	pop    rax
   1400443ca:	add    al,0x0
   1400443cc:	add    BYTE PTR [rax],al
   1400443ce:	add    BYTE PTR [rax],al
   1400443d0:	rex.WRX pop rax
   1400443d2:	add    al,0x0
   1400443d4:	add    BYTE PTR [rax],al
   1400443d6:	add    BYTE PTR [rax],al
   1400443d8:	cmp    bl,BYTE PTR [rax+0x4]
   1400443db:	add    BYTE PTR [rax],al
   1400443dd:	add    BYTE PTR [rax],al
   1400443df:	add    BYTE PTR [rax],ch
   1400443e1:	pop    rax
   1400443e2:	add    al,0x0
   1400443e4:	add    BYTE PTR [rax],al
   1400443e6:	add    BYTE PTR [rax],al
   1400443e8:	sbb    BYTE PTR [rax+0x4],bl
   1400443eb:	add    BYTE PTR [rax],al
   1400443ed:	add    BYTE PTR [rax],al
   1400443ef:	add    BYTE PTR [rdx],cl
   1400443f1:	pop    rax
   1400443f2:	add    al,0x0
   1400443f4:	add    BYTE PTR [rax],al
   1400443f6:	add    BYTE PTR [rax],al
   1400443f8:	cli    
   1400443f9:	push   rdi
   1400443fa:	add    al,0x0
   1400443fc:	add    BYTE PTR [rax],al
   1400443fe:	add    BYTE PTR [rax],al
   140044400:	call   0x14004485c
   140044405:	add    BYTE PTR [rax],al
   140044407:	add    dh,bl
   140044409:	push   rdi
   14004440a:	add    al,0x0
   14004440c:	add    BYTE PTR [rax],al
   14004440e:	add    BYTE PTR [rax],al
   140044410:	int3   
   140044411:	push   rdi
   140044412:	add    al,0x0
   140044414:	add    BYTE PTR [rax],al
   140044416:	add    BYTE PTR [rax],al
   140044418:	mov    edx,0x457
   14004441d:	add    BYTE PTR [rax],al
   14004441f:	add    BYTE PTR [rdx+0x457],ch
   140044425:	add    BYTE PTR [rax],al
   140044427:	add    BYTE PTR [rdi+rdx*2+0x4],dl
   14004442e:	add    BYTE PTR [rax],al
   140044430:	jle    0x140044489
   140044432:	add    al,0x0
   140044434:	add    BYTE PTR [rax],al
   140044436:	add    BYTE PTR [rax],al
   140044438:	push   0x457
   14004443d:	add    BYTE PTR [rax],al
   14004443f:	add    BYTE PTR [rdx+0x57],dl
   140044442:	add    al,0x0
   140044444:	add    BYTE PTR [rax],al
   140044446:	add    BYTE PTR [rax],al
   140044448:	rex.R push rdi
   14004444a:	add    al,0x0
   14004444c:	add    BYTE PTR [rax],al
   14004444e:	add    BYTE PTR [rax],al
   140044450:	xor    BYTE PTR [rdi+0x4],dl
   140044453:	add    BYTE PTR [rax],al
   140044455:	add    BYTE PTR [rax],al
   140044457:	add    BYTE PTR [rax],bl
   140044459:	push   rdi
   14004445a:	add    al,0x0
   14004445c:	add    BYTE PTR [rax],al
   14004445e:	add    BYTE PTR [rax],al
   140044460:	add    BYTE PTR [rdi+0x4],dl
   140044463:	add    BYTE PTR [rax],al
   140044465:	add    BYTE PTR [rax],al
   140044467:	add    al,ch
   140044469:	push   rsi
   14004446a:	add    al,0x0
   14004446c:	add    BYTE PTR [rax],al
   14004446e:	add    BYTE PTR [rax],al
   140044470:	ficom  DWORD PTR [rsi+0x4]
   140044473:	add    BYTE PTR [rax],al
   140044475:	add    BYTE PTR [rax],al
   140044477:	add    BYTE PTR [rdx+0x55],dl
   14004447a:	add    al,0x0
   14004447c:	add    BYTE PTR [rax],al
   14004447e:	add    BYTE PTR [rax],al
   140044480:	cmp    BYTE PTR [rbp+0x4],dl
   140044483:	add    BYTE PTR [rax],al
   140044485:	add    BYTE PTR [rax],al
   140044487:	add    BYTE PTR [rdx],ah
   140044489:	push   rbp
   14004448a:	add    al,0x0
   14004448c:	add    BYTE PTR [rax],al
   14004448e:	add    BYTE PTR [rax],al
   140044490:	or     BYTE PTR [rbp+0x4],dl
   140044493:	add    BYTE PTR [rax],al
   140044495:	add    BYTE PTR [rax],al
   140044497:	add    ah,dh
   140044499:	push   rsp
   14004449a:	add    al,0x0
   14004449c:	add    BYTE PTR [rax],al
   14004449e:	add    BYTE PTR [rax],al
   1400444a0:	fcom   DWORD PTR [rsp+rax*1+0x0]
   1400444a4:	add    BYTE PTR [rax],al
   1400444a6:	add    BYTE PTR [rax],al
   1400444a8:	(bad)  
   1400444a9:	push   rsp
   1400444aa:	add    al,0x0
   1400444ac:	add    BYTE PTR [rax],al
   1400444ae:	add    BYTE PTR [rax],al
   1400444b0:	test   al,0x54
   1400444b2:	add    al,0x0
   1400444b4:	add    BYTE PTR [rax],al
   1400444b6:	add    BYTE PTR [rax],al
   1400444b8:	mov    WORD PTR [rsp+rax*1+0x0],ss
   1400444bc:	add    BYTE PTR [rax],al
   1400444be:	add    BYTE PTR [rax],al
   1400444c0:	js     0x140044516
   1400444c2:	add    al,0x0
   1400444c4:	add    BYTE PTR [rax],al
   1400444c6:	add    BYTE PTR [rax],al
   1400444c8:	fs push rsp
   1400444ca:	add    al,0x0
   1400444cc:	add    BYTE PTR [rax],al
   1400444ce:	add    BYTE PTR [rax],al
   1400444d0:	rex.WX push rsp
   1400444d2:	add    al,0x0
   1400444d4:	add    BYTE PTR [rax],al
   1400444d6:	add    BYTE PTR [rax],al
   1400444d8:	ss push rsp
   1400444da:	add    al,0x0
   1400444dc:	add    BYTE PTR [rax],al
   1400444de:	add    BYTE PTR [rax],al
   1400444e0:	and    dl,BYTE PTR [rsp+rax*1+0x0]
   1400444e4:	add    BYTE PTR [rax],al
   1400444e6:	add    BYTE PTR [rax],al
   1400444e8:	(bad)  
   1400444e9:	push   rsp
   1400444ea:	add    al,0x0
   1400444ec:	add    BYTE PTR [rax],al
   1400444ee:	add    BYTE PTR [rax],al
   1400444f0:	cli    
   1400444f1:	push   rbx
   1400444f2:	add    al,0x0
   1400444f4:	add    BYTE PTR [rax],al
   1400444f6:	add    BYTE PTR [rax],al
   1400444f8:	(bad)  
   1400444f9:	push   rbx
   1400444fa:	add    al,0x0
   1400444fc:	add    BYTE PTR [rax],al
   1400444fe:	add    BYTE PTR [rax],al
   140044500:	fcom   QWORD PTR [rbx+0x4]
   140044503:	add    BYTE PTR [rax],al
   140044505:	add    BYTE PTR [rax],al
   140044507:	add    al,dl
   140044509:	push   rbx
   14004450a:	add    al,0x0
   14004450c:	add    BYTE PTR [rax],al
   14004450e:	add    BYTE PTR [rax],al
   140044510:	(bad)  
   140044511:	push   rbx
   140044512:	add    al,0x0
   140044514:	add    BYTE PTR [rax],al
   140044516:	add    BYTE PTR [rax],al
   140044518:	mov    al,0x53
   14004451a:	add    al,0x0
   14004451c:	add    BYTE PTR [rax],al
   14004451e:	add    BYTE PTR [rax],al
   140044520:	cs pop rcx
   140044522:	add    al,0x0
   140044524:	add    BYTE PTR [rax],al
   140044526:	add    BYTE PTR [rax],al
   140044528:	xchg   esi,eax
   140044529:	push   rbx
   14004452a:	add    al,0x0
   14004452c:	add    BYTE PTR [rax],al
   14004452e:	add    BYTE PTR [rax],al
   140044530:	adc    BYTE PTR [rbx+0x4],0x0
   140044534:	add    BYTE PTR [rax],al
   140044536:	add    BYTE PTR [rax],al
   140044538:	outs   dx,BYTE PTR ds:[rsi]
   140044539:	push   rbx
   14004453a:	add    al,0x0
   14004453c:	add    BYTE PTR [rax],al
   14004453e:	add    BYTE PTR [rax],al
   140044540:	pop    rsp
   140044541:	push   rbx
   140044542:	add    al,0x0
   140044544:	add    BYTE PTR [rax],al
   140044546:	add    BYTE PTR [rax],al
   140044548:	rex.WRX push rbx
   14004454a:	add    al,0x0
   14004454c:	add    BYTE PTR [rax],al
   14004454e:	add    BYTE PTR [rax],al
   140044550:	rex.R push rbx
   140044552:	add    al,0x0
   140044554:	add    BYTE PTR [rax],al
   140044556:	add    BYTE PTR [rax],al
   140044558:	ss push rbx
   14004455a:	add    al,0x0
   14004455c:	add    BYTE PTR [rax],al
   14004455e:	add    BYTE PTR [rax],al
   140044560:	sub    BYTE PTR [rbx+0x4],dl
   140044563:	add    BYTE PTR [rax],al
   140044565:	add    BYTE PTR [rax],al
   140044567:	add    BYTE PTR [rbx+rdx*2],bl
   14004456a:	add    al,0x0
   14004456c:	add    BYTE PTR [rax],al
   14004456e:	add    BYTE PTR [rax],al
   140044570:	hlt    
   140044571:	push   rdx
   140044572:	add    al,0x0
   140044574:	add    BYTE PTR [rax],al
   140044576:	add    BYTE PTR [rax],al
   140044578:	in     al,0x52
   14004457a:	add    al,0x0
	...
   140044588:	es push rdx
   14004458a:	add    al,0x0
   14004458c:	add    BYTE PTR [rax],al
   14004458e:	add    BYTE PTR [rax],al
   140044590:	xor    al,0x52
   140044592:	add    al,0x0
   140044594:	add    BYTE PTR [rax],al
   140044596:	add    BYTE PTR [rax],al
   140044598:	rex push rdx
   14004459a:	add    al,0x0
   14004459c:	add    BYTE PTR [rax],al
   14004459e:	add    BYTE PTR [rax],al
   1400445a0:	ins    BYTE PTR es:[rdi],dx
   1400445a1:	rex.WB add al,0x0
   1400445a4:	add    BYTE PTR [rax],al
   1400445a6:	add    BYTE PTR [rax],al
   1400445a8:	jle    0x1400445f3
   1400445aa:	add    al,0x0
   1400445ac:	add    BYTE PTR [rax],al
   1400445ae:	add    BYTE PTR [rax],al
   1400445b0:	mov    WORD PTR [rcx+0x4],cs
   1400445b3:	add    BYTE PTR [rax],al
   1400445b5:	add    BYTE PTR [rax],al
   1400445b7:	add    BYTE PTR [rdx+0x449],ch
   1400445bd:	add    BYTE PTR [rax],al
   1400445bf:	add    BYTE PTR [rsi+0x449],bh
   1400445c5:	add    BYTE PTR [rax],al
   1400445c7:	add    dh,bl
   1400445c9:	rex.WB add al,0x0
   1400445cc:	add    BYTE PTR [rax],al
   1400445ce:	add    BYTE PTR [rax],al
   1400445d0:	sbb    BYTE PTR [rdx+0x4],dl
   1400445d3:	add    BYTE PTR [rax],al
   1400445d5:	add    BYTE PTR [rax],al
   1400445d7:	add    BYTE PTR [rdx],al
   1400445d9:	push   rdx
   1400445da:	add    al,0x0
   1400445dc:	add    BYTE PTR [rax],al
   1400445de:	add    BYTE PTR [rax],al
   1400445e0:	repnz push rcx
   1400445e2:	add    al,0x0
   1400445e4:	add    BYTE PTR [rax],al
   1400445e6:	add    BYTE PTR [rax],al
   1400445e8:	ficom  WORD PTR [rcx+0x4]
   1400445eb:	add    BYTE PTR [rax],al
   1400445ed:	add    BYTE PTR [rax],al
   1400445ef:	add    ah,dl
   1400445f1:	push   rcx
   1400445f2:	add    al,0x0
   1400445f4:	add    BYTE PTR [rax],al
   1400445f6:	add    BYTE PTR [rax],al
   1400445f8:	enter  0x451,0x0
   1400445fc:	add    BYTE PTR [rax],al
   1400445fe:	add    BYTE PTR [rax],al
   140044600:	mov    esp,0x451
   140044605:	add    BYTE PTR [rax],al
   140044607:	add    BYTE PTR [rdx+0x451],dh
   14004460d:	add    BYTE PTR [rax],al
   14004460f:	add    BYTE PTR [rsi+0x451],ah
   140044615:	add    BYTE PTR [rax],al
   140044617:	add    BYTE PTR [rcx+rdx*2+0x4],dl
   14004461e:	add    BYTE PTR [rax],al
   140044620:	test   BYTE PTR [rcx+0x4],dl
   140044623:	add    BYTE PTR [rax],al
   140044625:	add    BYTE PTR [rax],al
   140044627:	add    BYTE PTR [rcx+rdx*2+0x4],dh
   14004462b:	add    BYTE PTR [rax],al
   14004462d:	add    BYTE PTR [rax],al
   14004462f:	add    BYTE PTR [rsi+0x51],bl
   140044632:	add    al,0x0
   140044634:	add    BYTE PTR [rax],al
   140044636:	add    BYTE PTR [rax],al
   140044638:	cmp    dl,BYTE PTR [rcx+0x4]
   14004463b:	add    BYTE PTR [rax],al
   14004463d:	add    BYTE PTR [rax],al
   14004463f:	add    BYTE PTR [rax],bl
   140044641:	push   rcx
   140044642:	add    al,0x0
   140044644:	add    BYTE PTR [rax],al
   140044646:	add    BYTE PTR [rax],al
   140044648:	clc    
   140044649:	push   rax
   14004464a:	add    al,0x0
   14004464c:	add    BYTE PTR [rax],al
   14004464e:	add    BYTE PTR [rax],al
   140044650:	(bad)  
   140044651:	push   rax
   140044652:	add    al,0x0
   140044654:	add    BYTE PTR [rax],al
   140044656:	add    BYTE PTR [rax],al
   140044658:	lods   al,BYTE PTR ds:[rsi]
   140044659:	push   rax
   14004465a:	add    al,0x0
   14004465c:	add    BYTE PTR [rax],al
   14004465e:	add    BYTE PTR [rax],al
   140044660:	test   BYTE PTR [rax+0x4],dl
   140044663:	add    BYTE PTR [rax],al
   140044665:	add    BYTE PTR [rax],al
   140044667:	add    BYTE PTR [rax+0x50],ah
   14004466a:	add    al,0x0
   14004466c:	add    BYTE PTR [rax],al
   14004466e:	add    BYTE PTR [rax],al
   140044670:	rex.R push rax
   140044672:	add    al,0x0
   140044674:	add    BYTE PTR [rax],al
   140044676:	add    BYTE PTR [rax],al
   140044678:	sub    al,0x50
   14004467a:	add    al,0x0
   14004467c:	add    BYTE PTR [rax],al
   14004467e:	add    BYTE PTR [rax],al
   140044680:	or     al,0x50
   140044682:	add    al,0x0
   140044684:	add    BYTE PTR [rax],al
   140044686:	add    BYTE PTR [rax],al
   140044688:	test   BYTE PTR [rdi+0x4],0x0
   14004468c:	add    BYTE PTR [rax],al
   14004468e:	add    BYTE PTR [rax],al
   140044690:	loop   0x1400446e1
   140044692:	add    al,0x0
   140044694:	add    BYTE PTR [rax],al
   140044696:	add    BYTE PTR [rax],al
   140044698:	int3   
   140044699:	rex.WRXB add al,0x0
   14004469c:	add    BYTE PTR [rax],al
   14004469e:	add    BYTE PTR [rax],al
   1400446a0:	stos   BYTE PTR es:[rdi],al
   1400446a1:	rex.WRXB add al,0x0
   1400446a4:	add    BYTE PTR [rax],al
   1400446a6:	add    BYTE PTR [rax],al
   1400446a8:	xchg   esi,eax
   1400446a9:	rex.WRXB add al,0x0
   1400446ac:	add    BYTE PTR [rax],al
   1400446ae:	add    BYTE PTR [rax],al
   1400446b0:	or     BYTE PTR [rdi+0x4],0x0
   1400446b4:	add    BYTE PTR [rax],al
   1400446b6:	add    BYTE PTR [rax],al
   1400446b8:	outs   dx,BYTE PTR ds:[rsi]
   1400446b9:	rex.WRXB add al,0x0
   1400446bc:	add    BYTE PTR [rax],al
   1400446be:	add    BYTE PTR [rax],al
   1400446c0:	rex.WR
   1400446c1:	rex.WRXB add al,0x0
   1400446c4:	add    BYTE PTR [rax],al
   1400446c6:	add    BYTE PTR [rax],al
   1400446c8:	ds rex.WRXB add al,0x0
   1400446cc:	add    BYTE PTR [rax],al
   1400446ce:	add    BYTE PTR [rax],al
   1400446d0:	and    al,0x4f
   1400446d2:	add    al,0x0
   1400446d4:	add    BYTE PTR [rax],al
   1400446d6:	add    BYTE PTR [rax],al
   1400446d8:	(bad)  
   1400446d9:	rex.WRXB add al,0x0
   1400446dc:	add    BYTE PTR [rax],al
   1400446de:	add    BYTE PTR [rax],al
   1400446e0:	cli    
   1400446e1:	rex.WRX add al,0x0
   1400446e4:	add    BYTE PTR [rax],al
   1400446e6:	add    BYTE PTR [rax],al
   1400446e8:	call   0x140044b3b
   1400446ed:	add    BYTE PTR [rax],al
   1400446ef:	add    dh,dl
   1400446f1:	rex.WRX add al,0x0
   1400446f4:	add    BYTE PTR [rax],al
   1400446f6:	add    BYTE PTR [rax],al
   1400446f8:	enter  0x44e,0x0
   1400446fc:	add    BYTE PTR [rax],al
   1400446fe:	add    BYTE PTR [rax],al
   140044700:	mov    edx,0x44e
   140044705:	add    BYTE PTR [rax],al
   140044707:	add    BYTE PTR [rdx+0x44e],bl
   14004470d:	add    BYTE PTR [rax],al
   14004470f:	add    BYTE PTR [rdx+0x4e],ah
   140044712:	add    al,0x0
   140044714:	add    BYTE PTR [rax],al
   140044716:	add    BYTE PTR [rax],al
   140044718:	ds rex.WRX add al,0x0
   14004471c:	add    BYTE PTR [rax],al
   14004471e:	add    BYTE PTR [rax],al
   140044720:	xor    al,0x4e
   140044722:	add    al,0x0
   140044724:	add    BYTE PTR [rax],al
   140044726:	add    BYTE PTR [rax],al
   140044728:	cs rex.WRX add al,0x0
   14004472c:	add    BYTE PTR [rax],al
   14004472e:	add    BYTE PTR [rax],al
   140044730:	sbb    BYTE PTR [rsi+0x4],cl
   140044733:	add    BYTE PTR [rax],al
   140044735:	add    BYTE PTR [rax],al
   140044737:	add    ah,bh
   140044739:	rex.WRB add al,0x0
   14004473c:	add    BYTE PTR [rax],al
   14004473e:	add    BYTE PTR [rax],al
   140044740:	out    dx,al
   140044741:	rex.WRB add al,0x0
   140044744:	add    BYTE PTR [rax],al
   140044746:	add    BYTE PTR [rax],al
   140044748:	jbe    0x14004479f
   14004474a:	add    al,0x0
   14004474c:	add    BYTE PTR [rax],al
   14004474e:	add    BYTE PTR [rax],al
   140044750:	mov    BYTE PTR [rbp+0x4],dl
   140044753:	add    BYTE PTR [rax],al
   140044755:	add    BYTE PTR [rax],al
   140044757:	add    BYTE PTR [rdx+0x455],ah
   14004475d:	add    BYTE PTR [rax],al
   14004475f:	add    BYTE PTR [rax+0x455],bh
   140044765:	add    BYTE PTR [rax],al
   140044767:	add    dl,al
   140044769:	push   rbp
   14004476a:	add    al,0x0
   14004476c:	add    BYTE PTR [rax],al
   14004476e:	add    BYTE PTR [rax],al
   140044770:	(bad)  
   140044771:	push   rbp
   140044772:	add    al,0x0
   140044774:	add    BYTE PTR [rax],al
   140044776:	add    BYTE PTR [rax],al
   140044778:	loop   0x1400447cf
   14004477a:	add    al,0x0
   14004477c:	add    BYTE PTR [rax],al
   14004477e:	add    BYTE PTR [rax],al
   140044780:	lock push rbp
   140044782:	add    al,0x0
   140044784:	add    BYTE PTR [rax],al
   140044786:	add    BYTE PTR [rax],al
   140044788:	(bad)  
   140044789:	push   rbp
   14004478a:	add    al,0x0
   14004478c:	add    BYTE PTR [rax],al
   14004478e:	add    BYTE PTR [rax],al
   140044790:	(bad)  
   140044791:	push   rsi
   140044792:	add    al,0x0
   140044794:	add    BYTE PTR [rax],al
   140044796:	add    BYTE PTR [rax],al
   140044798:	and    al,0x56
   14004479a:	add    al,0x0
   14004479c:	add    BYTE PTR [rax],al
   14004479e:	add    BYTE PTR [rax],al
   1400447a0:	xor    al,0x56
   1400447a2:	add    al,0x0
   1400447a4:	add    BYTE PTR [rax],al
   1400447a6:	add    BYTE PTR [rax],al
   1400447a8:	rex.WX push rsi
   1400447aa:	add    al,0x0
   1400447ac:	add    BYTE PTR [rax],al
   1400447ae:	add    BYTE PTR [rax],al
   1400447b0:	pop    rsp
   1400447b1:	push   rsi
   1400447b2:	add    al,0x0
   1400447b4:	add    BYTE PTR [rax],al
   1400447b6:	add    BYTE PTR [rax],al
   1400447b8:	outs   dx,BYTE PTR ds:[rsi]
   1400447b9:	push   rsi
   1400447ba:	add    al,0x0
   1400447bc:	add    BYTE PTR [rax],al
   1400447be:	add    BYTE PTR [rax],al
   1400447c0:	(bad)  
   1400447c1:	push   rsi
   1400447c2:	add    al,0x0
   1400447c4:	add    BYTE PTR [rax],al
   1400447c6:	add    BYTE PTR [rax],al
   1400447c8:	xchg   esp,eax
   1400447c9:	push   rsi
   1400447ca:	add    al,0x0
   1400447cc:	add    BYTE PTR [rax],al
   1400447ce:	add    BYTE PTR [rax],al
   1400447d0:	stos   BYTE PTR es:[rdi],al
   1400447d1:	push   rsi
   1400447d2:	add    al,0x0
   1400447d4:	add    BYTE PTR [rax],al
   1400447d6:	add    BYTE PTR [rax],al
   1400447d8:	mov    esi,0x456
   1400447dd:	add    BYTE PTR [rax],al
   1400447df:	add    ah,al
   1400447e1:	rex.WRB add al,0x0
   1400447e4:	add    BYTE PTR [rax],al
   1400447e6:	add    BYTE PTR [rax],al
   1400447e8:	lods   al,BYTE PTR ds:[rsi]
   1400447e9:	rex.WRB add al,0x0
   1400447ec:	add    BYTE PTR [rax],al
   1400447ee:	add    BYTE PTR [rax],al
   1400447f0:	mov    cs,WORD PTR [rbp+0x4]
   1400447f3:	add    BYTE PTR [rax],al
   1400447f5:	add    BYTE PTR [rax],al
   1400447f7:	add    BYTE PTR [rbp+rcx*2+0x4],ah
   1400447fb:	add    BYTE PTR [rax],al
   1400447fd:	add    BYTE PTR [rax],al
   1400447ff:	add    BYTE PTR [rcx*2+0x4],dh
   140044806:	add    BYTE PTR [rax],al
   140044808:	(bad)  
   140044809:	rex.WR add al,0x0
   14004480c:	add    BYTE PTR [rax],al
   14004480e:	add    BYTE PTR [rax],al
   140044810:	ror    BYTE PTR [rsp+rax*1+0x0],0x0
   140044815:	add    BYTE PTR [rax],al
   140044817:	add    BYTE PTR [rsi+0x44c],bl
   14004481d:	add    BYTE PTR [rax],al
   14004481f:	add    BYTE PTR [rsi+0x4c],dh
   140044822:	add    al,0x0
   140044824:	add    BYTE PTR [rax],al
   140044826:	add    BYTE PTR [rax],al
   140044828:	push   0x44c
   14004482d:	add    BYTE PTR [rax],al
   14004482f:	add    BYTE PTR [rsp+rcx*2+0x4],cl
   140044833:	add    BYTE PTR [rax],al
   140044835:	add    BYTE PTR [rax],al
   140044837:	add    BYTE PTR [rsi],dh
   140044839:	rex.WR add al,0x0
   14004483c:	add    BYTE PTR [rax],al
   14004483e:	add    BYTE PTR [rax],al
   140044840:	es rex.WR add al,0x0
   140044844:	add    BYTE PTR [rax],al
   140044846:	add    BYTE PTR [rax],al
   140044848:	adc    cl,BYTE PTR [rsp+rax*1+0x0]
   14004484c:	add    BYTE PTR [rax],al
   14004484e:	add    BYTE PTR [rax],al
   140044850:	dec    BYTE PTR [rbx+0x4]
   140044853:	add    BYTE PTR [rax],al
   140044855:	add    BYTE PTR [rax],al
   140044857:	add    al,ch
   140044859:	rex.WXB add al,0x0
   14004485c:	add    BYTE PTR [rax],al
   14004485e:	add    BYTE PTR [rax],al
   140044860:	(bad)  
   140044861:	rex.WXB add al,0x0
   140044864:	add    BYTE PTR [rax],al
   140044866:	add    BYTE PTR [rax],al
   140044868:	mov    eax,0x44b
   14004486d:	add    BYTE PTR [rax],al
   14004486f:	add    BYTE PTR [rdx+0x44b],ah
   140044875:	add    BYTE PTR [rax],al
   140044877:	add    BYTE PTR [rdx+0x44b],cl
   14004487d:	add    BYTE PTR [rax],al
   14004487f:	add    BYTE PTR [rax+0x4b],bh
   140044882:	add    al,0x0
   140044884:	add    BYTE PTR [rax],al
   140044886:	add    BYTE PTR [rax],al
   140044888:	data16 rex.WXB add al,0x0
   14004488c:	add    BYTE PTR [rax],al
   14004488e:	add    BYTE PTR [rax],al
   140044890:	push   rdx
   140044891:	rex.WXB add al,0x0
   140044894:	add    BYTE PTR [rax],al
   140044896:	add    BYTE PTR [rax],al
   140044898:	cmp    cl,BYTE PTR [rbx+0x4]
   14004489b:	add    BYTE PTR [rax],al
   14004489d:	add    BYTE PTR [rax],al
   14004489f:	add    BYTE PTR [rbx+rcx*2],ch
   1400448a2:	add    al,0x0
   1400448a4:	add    BYTE PTR [rax],al
   1400448a6:	add    BYTE PTR [rax],al
   1400448a8:	and    BYTE PTR [rbx+0x4],cl
   1400448ab:	add    BYTE PTR [rax],al
   1400448ad:	add    BYTE PTR [rax],al
   1400448af:	add    BYTE PTR [rsi],cl
   1400448b1:	rex.WXB add al,0x0
   1400448b4:	add    BYTE PTR [rax],al
   1400448b6:	add    BYTE PTR [rax],al
   1400448b8:	add    BYTE PTR [rbx+0x4],cl
   1400448bb:	add    BYTE PTR [rax],al
   1400448bd:	add    BYTE PTR [rax],al
   1400448bf:	add    dl,dh
   1400448c1:	rex.WX add al,0x0
   1400448c4:	add    BYTE PTR [rax],al
   1400448c6:	add    BYTE PTR [rax],al
   1400448c8:	in     al,0x4a
   1400448ca:	add    al,0x0
   1400448cc:	add    BYTE PTR [rax],al
   1400448ce:	add    BYTE PTR [rax],al
   1400448d0:	ror    BYTE PTR [rdx+0x4],cl
   1400448d3:	add    BYTE PTR [rax],al
   1400448d5:	add    BYTE PTR [rax],al
   1400448d7:	add    BYTE PTR [rax+0x44a],dh
   1400448dd:	add    BYTE PTR [rax],al
   1400448df:	add    BYTE PTR [rdx+0x44a],ah
   1400448e5:	add    BYTE PTR [rax],al
   1400448e7:	add    BYTE PTR [rax+0x44a],cl
   1400448ed:	add    BYTE PTR [rax],al
   1400448ef:	add    BYTE PTR [rdx+rcx*2+0x4],ch
   1400448f3:	add    BYTE PTR [rax],al
   1400448f5:	add    BYTE PTR [rax],al
   1400448f7:	add    BYTE PTR [rax+0x4a],al
   1400448fa:	add    al,0x0
   1400448fc:	add    BYTE PTR [rax],al
   1400448fe:	add    BYTE PTR [rax],al
   140044900:	sub    al,0x4a
   140044902:	add    al,0x0
   140044904:	add    BYTE PTR [rax],al
   140044906:	add    BYTE PTR [rax],al
   140044908:	adc    cl,BYTE PTR [rdx+0x4]
   14004490b:	add    BYTE PTR [rax],al
   14004490d:	add    BYTE PTR [rax],al
   14004490f:	add    dh,bh
   140044911:	rex.WB add al,0x0
   140044914:	add    BYTE PTR [rax],al
   140044916:	add    BYTE PTR [rax],al
   140044918:	in     al,dx
   140044919:	rex.WB add al,0x0
   14004491c:	add    BYTE PTR [rax],al
   14004491e:	add    BYTE PTR [rax],al
   140044920:	push   rax
   140044921:	rex.WB add al,0x0
	...
   140044930:	ret    0x452
   140044933:	add    BYTE PTR [rax],al
   140044935:	add    BYTE PTR [rax],al
   140044937:	add    BYTE PTR [rax+0x452],ch
   14004493d:	add    BYTE PTR [rax],al
   14004493f:	add    BYTE PTR [rsi+0x52],bl
   140044942:	add    al,0x0
	...
   140044950:	fadd   DWORD PTR [rdx]
   140044952:	push   rax
   140044953:	ins    BYTE PTR es:[rdi],dx
   140044954:	(bad)  
   140044955:	je     0x1400449b6
   140044957:	rex.WB jae 0x1400449a3
   14004495a:	outs   dx,BYTE PTR ds:[rsi]
   14004495b:	rex.R
   14004495c:	gs (bad) 
   14004495e:	jne    0x1400449c7
   140044960:	push   rbx
   140044961:	gs jae 0x1400449d7
   140044964:	imul   ebp,DWORD PTR [rdi+0x6e],0x776152
   14004496b:	add    bl,ch
   14004496d:	add    dl,BYTE PTR [rax+0x6c]
   140044970:	(bad)  
   140044971:	je     0x1400449d2
   140044973:	rex.WRB
   140044974:	gs jae 0x1400449ea
   140044977:	(bad)  
   140044978:	rex.X outs dx,DWORD PTR gs:[esi]
   14004497c:	js     0x14004497e
   14004497e:	scas   al,BYTE PTR es:[rdi]
   14004497f:	add    dl,BYTE PTR [rax+0x6c]
   140044982:	(bad)  
   140044983:	je     0x1400449e4
   140044985:	rex.RXB
   140044986:	gs je  0x1400449ce
   140044989:	outs   dx,BYTE PTR ds:[rsi]
   14004498a:	jbe    0x14004498c
   14004498c:	sub    al,0x3
   14004498e:	push   rax
   14004498f:	ins    BYTE PTR es:[rdi],dx
   140044990:	(bad)  
   140044991:	je     0x1400449f2
   140044993:	push   rsp
   140044994:	jb     0x1400449f7
   140044996:	outs   dx,BYTE PTR ds:[rsi]
   140044997:	jae    0x140044a05
   140044999:	(bad)  
   14004499a:	je     0x140044a01
   14004499c:	push   rbx
   14004499d:	jns    0x140044a0c
   14004499f:	(bad)  
   1400449a0:	outs   dx,DWORD PTR ds:[rsi]
   1400449a1:	ins    BYTE PTR es:[rdi],dx
   1400449a2:	imul   esp,DWORD PTR [rbx+0x4c],0x736b6e69
   1400449a9:	add    BYTE PTR [rdx+0x616c5002],bl
   1400449af:	je     0x140044a10
   1400449b1:	rex.RB js 0x140044a1d
   1400449b4:	je     0x140044a06
   1400449b6:	jb     0x140044a27
   1400449b8:	movsxd esp,DWORD PTR [rbp+0x73]
   1400449bb:	jae    0x1400449bd
   1400449bd:	add    BYTE PTR [rbx+0x616c5002],al
   1400449c3:	je     0x140044a24
   1400449c5:	rex.B je 0x140044a3c
   1400449c8:	(bad)  
   1400449c9:	movsxd ebp,DWORD PTR [rax+0x44]
   1400449cc:	gs (bad) 
   1400449ce:	jne    0x140044a37
   1400449d0:	addr32 gs jb 0x140044a28
   1400449d4:	outs   dx,DWORD PTR ds:[rsi]
   1400449d5:	push   rax
   1400449d6:	jb     0x140044a47
   1400449d8:	movsxd esp,DWORD PTR [rbp+0x73]
   1400449db:	jae    0x1400449dd
   1400449dd:	add    BYTE PTR [rdi],bh
   1400449df:	add    edx,DWORD PTR [rax+0x6c]
   1400449e2:	(bad)  
   1400449e3:	je     0x140044a44
   1400449e5:	addr32 gs je 0x140044a60
   1400449e9:	add    BYTE PTR fs:[rax],al
   1400449ec:	pushf  
   1400449ed:	add    dl,BYTE PTR [rax+0x6c]
   1400449f0:	(bad)  
   1400449f1:	je     0x140044a52
   1400449f3:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x74736978
   1400449fc:	jae    0x1400449fe
   1400449fe:	(bad)  
   1400449ff:	add    dl,BYTE PTR [rax+0x6c]
   140044a02:	(bad)  
   140044a03:	je     0x140044a64
   140044a05:	rex.WB jae 0x140044a4c
   140044a08:	imul   esi,DWORD PTR [rdx+0x65],0x726f7463
   140044a0f:	jns    0x140044a11
   140044a11:	add    BYTE PTR [rsi+0x616c5002],dl
   140044a17:	je     0x140044a78
   140044a19:	imul   r14d,DWORD PTR [rbx+0x61],0x49656c62
   140044a21:	rex.WRXB
   140044a22:	rex.X jne 0x140044a8b
   140044a25:	data16 gs jb 0x140044a92
   140044a29:	outs   dx,BYTE PTR ds:[rsi]
   140044a2a:	addr32 add dl,bl
   140044a2d:	add    dl,BYTE PTR [rax+0x6c]
   140044a30:	(bad)  
   140044a31:	je     0x140044a92
   140044a33:	rex.WB jae 0x140044a7f
   140044a36:	outs   dx,BYTE PTR ds:[rsi]
   140044a37:	push   rsp
   140044a38:	gs jae 0x140044aaf
   140044a3b:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140044a3d:	fs add BYTE PTR gs:[rip+0x616c5003],bl        # 0x1a1709a48
   140044a45:	je     0x140044aa6
   140044a47:	push   rbx
   140044a48:	push   0x646c756f
   140044a4d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140044a4f:	ins    BYTE PTR es:[rdi],dx
   140044a50:	ins    BYTE PTR es:[rdi],dx
   140044a51:	movsxd esi,DWORD PTR gs:[rbp+rcx*2+0x69]
   140044a56:	outs   dx,BYTE PTR ds:[rsi]
   140044a57:	imul   eax,DWORD PTR [rbp+rsi*2+0x6d],0x6f467370
   140044a5f:	jb     0x140044aa7
   140044a61:	(bad)  
   140044a62:	je     0x140044ac5
   140044a64:	ins    BYTE PTR es:[rdi],dx
   140044a65:	rex.RB jb 0x140044ada
   140044a68:	outs   dx,DWORD PTR ds:[rsi]
   140044a69:	jb     0x140044ade
   140044a6b:	add    dh,cl
   140044a6d:	add    dl,BYTE PTR [rax+0x6c]
   140044a70:	(bad)  
   140044a71:	je     0x140044ad2
   140044a73:	rex.WB
   140044a74:	outs   dx,BYTE PTR ds:[esi]
   140044a76:	outs   dx,DWORD PTR ds:[rsi]
   140044a77:	jb     0x140044ade
   140044a79:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140044a7b:	outs   dx,BYTE PTR ds:[rsi]
   140044a7c:	je     0x140044ae3
   140044a7e:	outs   dx,BYTE PTR ds:[rsi]
   140044a7f:	je     0x140044ac2
   140044a81:	jae    0x140044af6
   140044a83:	gs jb  0x140044afa
   140044a86:	jae    0x140044a88
   140044a88:	mov    bl,0x2
   140044a8a:	push   rax
   140044a8b:	ins    BYTE PTR es:[rdi],dx
   140044a8c:	(bad)  
   140044a8d:	je     0x140044aee
   140044a8f:	rex.RXB
   140044a90:	gs je  0x140044ae0
   140044a93:	outs   dx,DWORD PTR ds:[rsi]
   140044a94:	fs jne 0x140044b03
   140044a97:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x6e],0x656d61
   140044aa1:	add    BYTE PTR [rsp+rax*1],bh
   140044aa4:	push   rsi
   140044aa5:	pop    rdi
   140044aa6:	jae    0x140044b16
   140044aa8:	jo     0x140044b1c
   140044aaa:	imul   ebp,DWORD PTR [rsi+0x74],0xe0000066
   140044ab1:	add    DWORD PTR [rdi],edi
   140044ab3:	push   rsi
   140044ab4:	pop    rdi
   140044ab5:	jae    0x140044b2b
   140044ab7:	jb     0x140044b22
   140044ab9:	jae    0x140044b2f
   140044abb:	jb     0x140044b1c
   140044abd:	data16 (bad) 
   140044abf:	jae    0x140044b35
   140044ac1:	rex
   140044ac2:	rex pop rcx
   140044ac4:	push   r8
   140044ac6:	rex.RB
   140044ac7:	rex.X
   140044ac8:	rex.R push rax
   140044aca:	rex.RB
   140044acb:	rex.X
   140044acc:	xor    BYTE PTR [rax+0x5a],r8b
   140044ad0:	add    BYTE PTR [rax],al
   140044ad2:	rex.X add al,0x56
   140044ad5:	pop    rdi
   140044ad6:	jae    0x140044b4c
   140044ad8:	jb     0x140044b43
   140044ada:	movsxd ebp,DWORD PTR [rbp+0x70]
   140044add:	pop    rdi
   140044ade:	data16 (bad) 
   140044ae0:	jae    0x140044b56
   140044ae2:	add    BYTE PTR [rax],al
   140044ae4:	xchg   edi,eax
   140044ae5:	add    al,0x5f
   140044ae7:	push   rsi
   140044ae8:	pop    rdi
   140044ae9:	jae    0x140044b5f
   140044aeb:	jb     0x140044b5b
   140044aed:	movsxd esi,DWORD PTR [rax+0x79]
   140044af0:	add    BYTE PTR [rax],al
   140044af2:	xchg   esi,eax
   140044af3:	add    al,0x5f
   140044af5:	push   rsi
   140044af6:	pop    rdi
   140044af7:	jae    0x140044b6d
   140044af9:	jb     0x140044b69
   140044afb:	movsxd esp,DWORD PTR [rcx+0x74]
   140044afe:	add    BYTE PTR [rax],al
   140044b00:	addr32 add al,0x56
   140044b03:	pop    rdi
   140044b04:	jbe    0x140044b79
   140044b06:	outs   dx,BYTE PTR ds:[rsi]
   140044b07:	jo     0x140044b7b
   140044b09:	imul   ebp,DWORD PTR [rsi+0x74],0x4680066
   140044b10:	push   rsi
   140044b11:	pop    rdi
   140044b12:	jbe    0x140044b87
   140044b14:	outs   dx,BYTE PTR ds:[rsi]
   140044b15:	jo     0x140044b89
   140044b17:	imul   ebp,DWORD PTR [rsi+0x74],0x74655266
   140044b1e:	add    BYTE PTR [rax],al
   140044b20:	ds add al,0x56
   140044b23:	pop    rdi
   140044b24:	jae    0x140044b99
   140044b26:	movsxd esp,DWORD PTR [rcx+0x6e]
   140044b29:	data16 add BYTE PTR [rax],al
   140044b2c:	pop    QWORD PTR [rdi+rbx*2]
   140044b2f:	push   rsi
   140044b30:	pop    rdi
   140044b31:	push   rbx
   140044b32:	je     0x140044ba6
   140044b34:	push   rbx
   140044b35:	jne    0x140044b99
   140044b37:	jae    0x140044bad
   140044b39:	add    ah,cl
   140044b3b:	add    edx,DWORD PTR [rsi+0x5f]
   140044b3e:	push   rbx
   140044b3f:	je     0x140044bb3
   140044b41:	imul   esi,DWORD PTR [rax+0x54],0x6c696172
   140044b48:	imul   ebp,DWORD PTR [rsi+0x67],0x73616c53
   140044b4f:	push   0x4930000
   140044b54:	pop    rdi
   140044b55:	push   rsi
   140044b56:	pop    rdi
   140044b57:	push   rbx
   140044b58:	je     0x140044bcc
   140044b5a:	imul   esi,DWORD PTR [rax+0x45],0x6e657478
   140044b61:	jae    0x140044bcc
   140044b63:	outs   dx,DWORD PTR ds:[rsi]
   140044b64:	outs   dx,BYTE PTR ds:[rsi]
   140044b65:	add    al,cl
   140044b67:	add    edx,DWORD PTR [rsi+0x5f]
   140044b6a:	push   rbx
   140044b6b:	je     0x140044bdf
   140044b6d:	imul   esi,DWORD PTR [rax+0x46],0x6e656c69
   140044b74:	(bad)  
   140044b75:	ins    DWORD PTR es:[rdi],dx
   140044b76:	add    BYTE PTR gs:[rsp+rax*1+0x535f565f],dl
   140044b7e:	je     0x140044bf2
   140044b80:	imul   esi,DWORD PTR [rax+0x4c],0x44747361
   140044b87:	imul   esi,DWORD PTR [rdx+0x0],0x5f5603e2
   140044b8e:	push   rbp
   140044b8f:	outs   dx,BYTE PTR ds:[rsi]
   140044b90:	jno    0x140044c07
   140044b92:	(bad)  
   140044b93:	ins    BYTE PTR es:[rdi],dx
   140044b94:	imul   esp,DWORD PTR [rsi+0x69],0x69466465
   140044b9b:	ins    BYTE PTR es:[rdi],dx
   140044b9c:	gs rex.WRX (bad) 
   140044b9f:	ins    DWORD PTR es:[rdi],dx
   140044ba0:	add    BYTE PTR gs:[rdx+0x5f565f04],al
   140044ba7:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140044ba9:	ins    DWORD PTR es:[rdi],dx
   140044baa:	jo     0x140044c1b
   140044bac:	jae    0x140044c13
   140044bae:	imul   r13d,DWORD PTR [rbp+r12*2+0x4e],0x656d61
   140044bb7:	add    BYTE PTR [rdi+0x475f5603],ch
   140044bbd:	gs je  0x140044c06
   140044bc0:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x6e657478
   140044bc8:	jae    0x140044c33
   140044bca:	outs   dx,DWORD PTR ds:[rsi]
   140044bcb:	outs   dx,BYTE PTR ds:[rsi]
   140044bcc:	add    BYTE PTR [rax],al
   140044bce:	mov    al,0x3
   140044bd0:	push   rsi
   140044bd1:	pop    rdi
   140044bd2:	rex.RXB
   140044bd3:	gs je  0x140044c1c
   140044bd6:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x6e657478
   140044bde:	jae    0x140044c49
   140044be0:	outs   dx,DWORD PTR ds:[rsi]
   140044be1:	outs   dx,BYTE PTR ds:[rsi]
   140044be2:	push   rbx
   140044be3:	(bad)  
   140044be4:	data16 add BYTE PTR gs:[rax],al
   140044be8:	rol    DWORD PTR [rbx],0x56
   140044beb:	pop    rdi
   140044bec:	push   rdx
   140044bed:	gs ins DWORD PTR es:[rdi],dx
   140044bef:	outs   dx,DWORD PTR ds:[rsi]
   140044bf0:	jbe    0x140044c57
   140044bf2:	rex.R outs dx,DWORD PTR ds:[rsi]
   140044bf4:	je     0x140044c49
   140044bf6:	ins    BYTE PTR es:[rdi],dx
   140044bf7:	(bad)  
   140044bf8:	jae    0x140044c62
   140044bfa:	gs jae 0x140044bfd
   140044bfd:	add    BYTE PTR [rdi+0x5f565f04],al
   140044c03:	rex.RX imul r15d,DWORD PTR [rax+0x75],0x74615070
   140044c0b:	push   0x656d614e
   140044c10:	add    BYTE PTR [rax],al
   140044c12:	mov    dh,0x3
   140044c14:	push   rsi
   140044c15:	pop    rdi
   140044c16:	rex.WB jae 0x140044c5a
   140044c19:	(bad)
   140044c1e:	je     0x140044c85
   140044c20:	push   rax
   140044c21:	(bad)  
   140044c22:	je     0x140044c8c
   140044c24:	add    BYTE PTR [rax],al
   140044c26:	stos   DWORD PTR es:[rdi],eax
   140044c27:	add    edx,DWORD PTR [rsi+0x5f]
   140044c2a:	rex.RX imul r15d,DWORD PTR [rax+0x53],0x6873616c
   140044c32:	gs jae 0x140044c35
   140044c35:	add    BYTE PTR [rcx+0x465f5603],ch
   140044c3b:	imul   edi,DWORD PTR [rax+0x44],0x6c62756f
   140044c42:	gs push rbx
   140044c44:	ins    BYTE PTR es:[rdi],dx
   140044c45:	(bad)  
   140044c46:	jae    0x140044cb0
   140044c48:	gs jae 0x140044c4b
   140044c4b:	add    al,bh
   140044c4d:	add    DWORD PTR [rbx+0x4d],eax
   140044c50:	gs ins DWORD PTR es:[rdi],dx
   140044c52:	rex.B ins BYTE PTR es:[rdi],dx
   140044c54:	ins    BYTE PTR es:[rdi],dx
   140044c55:	outs   dx,DWORD PTR ds:[rsi]
   140044c56:	movsxd edx,DWORD PTR [rbx+0x79]
   140044c59:	jae    0x140044ccf
   140044c5b:	gs ins DWORD PTR es:[rdi],dx
   140044c5d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140044c5f:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140044c67:	add    BYTE PTR [rax],al
   140044c69:	add    al,BYTE PTR [rbx+0x6f]
   140044c6c:	ins    DWORD PTR es:[rdi],dx
   140044c6d:	ins    DWORD PTR es:[rdi],dx
   140044c6e:	(bad)  
   140044c6f:	outs   dx,BYTE PTR ds:[rsi]
   140044c70:	imul   r13,QWORD PTR fs:[rsi+0x65],0x4c026100
   140044c79:	outs   dx,DWORD PTR ds:[rsi]
   140044c7a:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140044c83:	gs ins DWORD PTR es:[rdi],dx
   140044c85:	pop    rdi
   140044c86:	push   rdx
   140044c87:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f4c7265
   140044c90:	addr32 imul ebp,DWORD PTR [esi+0x67],0x6e616843
   140044c99:	outs   dx,BYTE PTR ds:[rsi]
   140044c9a:	gs ins BYTE PTR es:[rdi],dx
   140044c9c:	add    BYTE PTR [rax],al
   140044c9e:	pop    rcx
   140044c9f:	add    cl,BYTE PTR [rdi+rbp*2+0x67]
   140044ca3:	imul   ebp,DWORD PTR [esi+0x67],0x74737953
   140044cab:	gs ins DWORD PTR es:[rdi],dx
   140044cad:	pop    rdi
   140044cae:	rex.WB jae 0x140044cf4
   140044cb1:	push   0x656e6e61
   140044cb6:	ins    BYTE PTR es:[rdi],dx
   140044cb7:	rex.RB outs dx,BYTE PTR ds:[rsi]
   140044cb9:	(bad)  
   140044cba:	(bad)  
   140044cbb:	ins    BYTE PTR es:[rdi],dx
   140044cbc:	gs add BYTE PTR fs:[rax],al
   140044cc0:	pop    rdx
   140044cc1:	add    cl,BYTE PTR [rdi+rbp*2+0x67]
   140044cc5:	imul   ebp,DWORD PTR [esi+0x67],0x74737953
   140044ccd:	gs ins DWORD PTR es:[rdi],dx
   140044ccf:	pop    rdi
   140044cd0:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044cd2:	add    BYTE PTR [ebx],ah
   140044cd5:	add    DWORD PTR [rdi],edi
   140044cd7:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044cd9:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140044ce2:	gs ins DWORD PTR es:[rdi],dx
   140044ce4:	pop    rdi
   140044ce5:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044ce7:	addr32 rex
   140044ce9:	rex pop rcx
   140044ceb:	rex.B (bad) 
   140044ced:	push   r15
   140044cef:	xor    al,0x4c
   140044cf1:	outs   dx,DWORD PTR ds:[rsi]
   140044cf2:	addr32 imul ebp,DWORD PTR [esi+0x67],0x70736552
   140044cfb:	outs   dx,DWORD PTR ds:[rsi]
   140044cfc:	outs   dx,BYTE PTR ds:[rsi]
   140044cfd:	jae    0x140044d64
   140044cff:	pop    rdi
   140044d00:	je     0x140044d42
   140044d02:	rex
   140044d03:	rex.W push rdi
   140044d05:	xor    al,0x4c
   140044d07:	outs   dx,DWORD PTR ds:[rsi]
   140044d08:	addr32 imul ebp,DWORD PTR [esi+0x67],0x65766553
   140044d11:	jb     0x140044d7c
   140044d13:	je     0x140044d8e
   140044d15:	pop    rdi
   140044d16:	je     0x140044d58
   140044d18:	rex
   140044d19:	rex.B
   140044d1a:	rex.RB
   140044d1b:	rex.X push rbp
   140044d1d:	rex.WR
   140044d1e:	gs (bad) 
   140044d20:	rex.XB outs dx,WORD PTR ds:[rsi]
   140044d23:	fs rex.WB outs dx,BYTE PTR gs:[rsi]
   140044d27:	outs   dx,WORD PTR ds:[rsi]
   140044d29:	pop    rdi
   140044d2a:	je     0x140044d6c
   140044d2c:	rex push rax
   140044d2e:	rex.RB
   140044d2f:	rex.X
   140044d30:	rex.R pop rdx
   140044d32:	pop    rdx
   140044d33:	add    BYTE PTR [rax+0x2],ah
   140044d36:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044d38:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140044d41:	gs ins DWORD PTR es:[rdi],dx
   140044d43:	pop    rdi
   140044d44:	push   rdx
   140044d45:	imul   esi,DWORD PTR gs:[ebx+0x74],0x61427265
   140044d4e:	movsxd ebp,DWORD PTR [rbx+0x64]
   140044d51:	outs   dx,DWORD PTR ds:[rsi]
   140044d52:	outs   dx,DWORD PTR ds:[rsi]
   140044d53:	jb     0x140044da1
   140044d55:	outs   dx,DWORD PTR ds:[rsi]
   140044d56:	addr32 imul ebp,DWORD PTR [esi+0x67],0x7473694c
   140044d5f:	outs   dx,BYTE PTR gs:[rsi]
   140044d61:	gs jb  0x140044d64
   140044d64:	movsxd eax,DWORD PTR [rdx]
   140044d66:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044d68:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140044d71:	gs ins DWORD PTR es:[rdi],dx
   140044d73:	pop    rdi
   140044d74:	push   rdx
   140044d75:	gs jae 0x140044ddd
   140044d78:	je     0x140044dbc
   140044d7a:	(bad)  
   140044d7b:	movsxd ebp,DWORD PTR [rbx+0x64]
   140044d7e:	outs   dx,DWORD PTR ds:[rsi]
   140044d7f:	outs   dx,DWORD PTR ds:[rsi]
   140044d80:	jb     0x140044dce
   140044d82:	outs   dx,DWORD PTR ds:[rsi]
   140044d83:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74617453
   140044d8c:	add    BYTE PTR gs:[rdx+rax*1],ch
   140044d90:	rex.RXB
   140044d91:	gs je  0x140044dd8
   140044d94:	gs data16 (bad) 
   140044d97:	jne    0x140044e05
   140044d99:	je     0x140044de8
   140044d9b:	imul   ebp,DWORD PTR [rsi+0x69],0x706d7544
   140044da2:	push   rsp
   140044da3:	jns    0x140044e15
   140044da5:	gs rex.RX ins BYTE PTR es:[rdi],dx
   140044da8:	(bad)  
   140044da9:	addr32 jae 0x140044dac
   140044dac:	add    r9b,BYTE PTR [rcx+0x6e]
   140044db0:	jbe    0x140044e21
   140044db2:	imul   esp,DWORD PTR [rbp+0x4d],0x69
   140044db6:	outs   dx,BYTE PTR ds:[rsi]
   140044db7:	imul   eax,DWORD PTR [rbp+rsi*2+0x6d],0x6e614870
   140044dbf:	fs ins BYTE PTR es:[rdi],dx
   140044dc1:	gs jb  0x140044dc4
   140044dc4:	xchg   ebx,eax
   140044dc5:	add    edx,DWORD PTR [rcx+rbp*2+0x65]
   140044dc9:	jb     0x140044dfb
   140044dcb:	rex.RXB
   140044dcc:	outs   dx,BYTE PTR gs:[rsi]
   140044dce:	gs jb  0x140044e3a
   140044dd1:	movsxd ecx,DWORD PTR [rbp+0x69]
   140044dd4:	outs   dx,BYTE PTR ds:[rsi]
   140044dd5:	imul   eax,DWORD PTR [rbp+rsi*2+0x6d],0x6e614870
   140044ddd:	fs ins BYTE PTR es:[rdi],dx
   140044ddf:	gs jb  0x140044e41
   140044de2:	push   rbx
   140044de3:	gs je  0x140044e35
   140044de6:	jo     0x140044e5c
   140044de8:	imul   ebp,DWORD PTR [rdi+0x6e],0x79000073
   140044def:	add    cl,BYTE PTR [rbp+0x69]
   140044df2:	outs   dx,BYTE PTR ds:[rsi]
   140044df3:	imul   esp,DWORD PTR [rbp+rsi*2+0x6d],0x676f4c70
   140044dfb:	add    BYTE PTR [rdi+0x2],dh
   140044dfe:	imul   r13,QWORD PTR [r14+0x69],0x706d7544
   140044e06:	rex.RB js 0x140044e6c
   140044e09:	gs jo  0x140044e80
   140044e0c:	imul   ebp,DWORD PTR [rdi+0x6e],0x646e6148
   140044e13:	ins    BYTE PTR es:[rdi],dx
   140044e14:	gs jb  0x140044e17
   140044e17:	add    BYTE PTR [rbx+0x3],dl
   140044e1a:	push   rbx
   140044e1b:	gs je  0x140044e5f
   140044e1e:	jae    0x140044e93
   140044e20:	gs jb  0x140044e97
   140044e23:	imul   ebp,DWORD PTR [rdi+0x6e],0x6d6f7250
   140044e2a:	jo     0x140044ea0
   140044e2c:	add    BYTE PTR [rax],al
   140044e2e:	jle    0x140044e32
   140044e30:	rex.WRB jae 0x140044e9a
   140044e33:	add    BYTE PTR [rdx+0x4],dh
   140044e36:	push   rdi
   140044e37:	(bad)  
   140044e38:	jb     0x140044ea8
   140044e3a:	imul   ebp,DWORD PTR [rsi+0x67],0x44020600
   140044e41:	movsxd ebp,DWORD PTR gs:[rcx+riz*2+0x72]
   140044e46:	gs rex.XB jne 0x140044ebc
   140044e4a:	jb     0x140044eb1
   140044e4c:	outs   dx,BYTE PTR ds:[rsi]
   140044e4d:	je     0x140044ea3
   140044e4f:	push   0x64616572
   140044e54:	rex.WB jae 0x140044ea4
   140044e57:	(bad)  
   140044e58:	imul   ebp,DWORD PTR [rsi+0x54],0x61657268
   140044e5f:	add    BYTE PTR fs:[rax],al
   140044e62:	sbb    al,BYTE PTR [rax]
   140044e64:	(bad)  
   140044e65:	(bad)  
   140044e66:	xor    BYTE PTR [rbx+0x54],al
   140044e69:	push   0x64616572
   140044e6e:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044e70:	movsxd esp,DWORD PTR [rcx+0x6c]
   140044e73:	push   rbx
   140044e74:	movsxd ebp,DWORD PTR [rdi+0x70]
   140044e77:	gs rex
   140044e79:	rex push rcx
   140044e7b:	rex.RB
   140044e7c:	rex.B
   140044e7d:	rex.B
   140044e7e:	rex push rax
   140044e80:	rex.RB
   140044e81:	push   r13
   140044e83:	push   rsp
   140044e84:	push   0x64616572
   140044e89:	rex.W (bad) 
   140044e8b:	outs   dx,BYTE PTR ds:[rsi]
   140044e8c:	fs ins BYTE PTR es:[rdi],dx
   140044e8e:	gs pop rdi
   140044e90:	je     0x140044ef1
   140044e92:	pop    rdi
   140044e93:	rex
   140044e94:	rex pop rdi
   140044e96:	rex.WRX
   140044e97:	rex pop rdx
   140044e99:	add    BYTE PTR [rsi],bh
   140044e9b:	add    BYTE PTR [rdi],bh
   140044e9d:	(bad)  
   140044e9e:	xor    DWORD PTR [rbx+0x54],eax
   140044ea1:	push   0x64616572
   140044ea6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044ea8:	movsxd esp,DWORD PTR [rcx+0x6c]
   140044eab:	push   rbx
   140044eac:	movsxd ebp,DWORD PTR [rdi+0x70]
   140044eaf:	gs rex
   140044eb1:	rex push rcx
   140044eb3:	rex.RB
   140044eb4:	rex.B
   140044eb5:	rex.B
   140044eb6:	rex pop rax
   140044eb8:	pop    rdx
   140044eb9:	add    BYTE PTR [rbx+0x705f6704],dh
   140044ebf:	rex.WRB
   140044ec0:	gs ins DWORD PTR es:[rdi],dx
   140044ec2:	rex.B ins BYTE PTR es:[rdi],dx
   140044ec4:	ins    BYTE PTR es:[rdi],dx
   140044ec5:	outs   dx,DWORD PTR ds:[rsi]
   140044ec6:	movsxd eax,DWORD PTR [rax]
   140044ec8:	rex.W add cl,BYTE PTR [rdi+rcx*2+0x47]
   140044ecd:	pop    rdi
   140044ece:	rex.RXB
   140044ecf:	rex.RB
   140044ed0:	rex.WRX
   140044ed1:	rex.RB push r10
   140044ed3:	rex.B
   140044ed4:	rex.WR add BYTE PTR [rax+0x616c5002],r10b
   140044edb:	je     0x140044f3c
   140044edd:	rex.R
   140044ede:	gs (bad) 
   140044ee0:	jne    0x140044f49
   140044ee2:	push   rax
   140044ee3:	jb     0x140044f4e
   140044ee5:	outs   dx,BYTE PTR ds:[rsi]
   140044ee6:	je     0x140044ee8
   140044ee8:	and    eax,0x72614502
   140044eed:	ins    BYTE PTR es:[rdi],dx
   140044eee:	jns    0x140044f39
   140044ef0:	outs   dx,BYTE PTR ds:[rsi]
   140044ef1:	imul   esi,DWORD PTR [rdi+rbx*2+0x54],0x30726569
   140044ef9:	add    BYTE PTR [rcx+0x616c5002],dl
   140044eff:	je     0x140044f60
   140044f01:	rex.R
   140044f02:	gs (bad) 
   140044f04:	jne    0x140044f6d
   140044f06:	push   rbx
   140044f07:	je     0x140044f7b
   140044f09:	imul   ebp,DWORD PTR [rsi+0x67],0x2f80000
   140044f10:	push   rax
   140044f11:	ins    BYTE PTR es:[rdi],dx
   140044f12:	(bad)  
   140044f13:	je     0x140044f74
   140044f15:	push   rdx
   140044f16:	gs ins BYTE PTR es:[rdi],dx
   140044f18:	(bad)  
   140044f19:	je     0x140044f84
   140044f1b:	jbe    0x140044f82
   140044f1d:	push   rsp
   140044f1e:	imul   esp,DWORD PTR [rbx+0x6b],0x23000073
   140044f25:	add    edx,DWORD PTR [rax+0x6c]
   140044f28:	(bad)  
   140044f29:	je     0x140044f8a
   140044f2b:	push   rsp
   140044f2c:	imul   esp,DWORD PTR [rbx+0x6b],0x66666944
   140044f33:	imul   r13,QWORD PTR [r12+rbp*2+0x69],0x46636553
   140044f3c:	add    BYTE PTR [rax],al
   140044f3e:	repz add dl,BYTE PTR [rax+0x6c]
   140044f42:	(bad)  
   140044f43:	je     0x140044fa4
   140044f45:	push   rax
   140044f46:	jb     0x140044fb1
   140044f48:	outs   dx,BYTE PTR ds:[rsi]
   140044f49:	je     0x140044fb1
   140044f4b:	add    ah,bl
   140044f4d:	add    dl,BYTE PTR [rax+0x6c]
   140044f50:	(bad)  
   140044f51:	je     0x140044fb2
   140044f53:	rex.WB jae 0x140044fa8
   140044f56:	jne    0x140044fc6
   140044f58:	outs   dx,BYTE PTR ds:[rsi]
   140044f59:	imul   ebp,DWORD PTR [rsi+0x67],0x75436e4f
   140044f60:	jae    0x140044fd6
   140044f62:	outs   dx,DWORD PTR ds:[rsi]
   140044f63:	ins    DWORD PTR es:[rdi],dx
   140044f64:	gs jb  0x140044fb4
   140044f67:	(bad)  
   140044f68:	movsxd ebp,DWORD PTR [rax+0x69]
   140044f6b:	outs   dx,BYTE PTR ds:[rsi]
   140044f6c:	gs add ch,ah
   140044f6f:	add    dl,BYTE PTR [rax+0x6c]
   140044f72:	(bad)  
   140044f73:	je     0x140044fd4
   140044f75:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044f77:	(bad)  
   140044f78:	rex.WRB outs dx,DWORD PTR fs:[rsi]
   140044f7b:	fs jne 0x140044fea
   140044f7e:	gs add dh,ah
   140044f81:	add    dl,BYTE PTR [rax+0x6c]
   140044f84:	(bad)  
   140044f85:	je     0x140044fe6
   140044f87:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140044f89:	(bad)  
   140044f8a:	rex.WRB outs dx,DWORD PTR fs:[rsi]
   140044f8d:	fs jne 0x140044ffc
   140044f90:	gs push rdx
   140044f92:	(bad)  
   140044f93:	ja     0x140044f95
   140044f95:	add    BYTE PTR [rcx],dh
   140044f97:	add    edx,DWORD PTR [rax+0x6c]
   140044f9a:	(bad)  
   140044f9b:	je     0x140044ffc
   140044f9d:	push   rbp
   140044f9e:	outs   dx,BYTE PTR ds:[rsi]
   140044f9f:	ins    BYTE PTR es:[rdi],dx
   140044fa0:	outs   dx,DWORD PTR ds:[rsi]
   140044fa1:	(bad)  
   140044fa2:	rex.WRB outs dx,DWORD PTR fs:[rsi]
   140044fa5:	fs jne 0x140045014
   140044fa8:	add    BYTE PTR gs:[rdx+rax*1+0x74616c50],dh
   140044fb0:	pop    rdi
   140044fb1:	rex.RXB
   140044fb2:	gs je  0x140045002
   140044fb5:	outs   dx,DWORD PTR ds:[rsi]
   140044fb6:	fs jne 0x140045025
   140044fb9:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140044fbc:	je     0x140045023
   140044fbe:	jb     0x140045026
   140044fc0:	(bad)  
   140044fc1:	movsxd esp,DWORD PTR [rbp+0x46]
   140044fc4:	(bad)  
   140044fc5:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140044fc9:	jns    0x140044fcb
   140044fcb:	add    bh,cl
   140044fcd:	add    dl,BYTE PTR [rax+0x6c]
   140044fd0:	(bad)  
   140044fd1:	je     0x140045032
   140044fd3:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140044fd5:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140044fdd:	rex.XB
   140044fde:	rex.WRXB
   140044fdf:	rex.WRB add BYTE PTR [r8],r8b
   140044fe2:	(bad)  
   140044fe3:	add    edx,DWORD PTR [rax+0x6c]
   140044fe6:	(bad)  
   140044fe7:	je     0x140045048
   140044fe9:	push   rbx
   140044fea:	push   0x6f647475
   140044fef:	ja     0x14004505f
   140044ff1:	rex.XB
   140044ff2:	rex.WRXB
   140044ff3:	rex.WRB add BYTE PTR [r8],r8b
   140044ff6:	add    DWORD PTR [rdi+rbx*2],0x56
   140044ffa:	pop    rdi
   140044ffb:	rex.R
   140044ffc:	gs data16 (bad) 
   140044fff:	jne    0x14004506d
   140045001:	je     0x140045048
   140045003:	js     0x140045079
   140045005:	outs   dx,BYTE PTR gs:[rsi]
   140045007:	jae    0x140045072
   140045009:	outs   dx,DWORD PTR ds:[rsi]
   14004500a:	outs   dx,BYTE PTR ds:[rsi]
   14004500b:	add    BYTE PTR [rdx+0x2],al
   14004500e:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140045010:	imul   esi,DWORD PTR [rdi+rdx*2+0x69],0x4332336e
   140045018:	outs   dx,DWORD PTR ds:[rsi]
   140045019:	outs   dx,BYTE PTR ds:[rsi]
   14004501a:	jae    0x14004508b
   14004501c:	ins    BYTE PTR es:[rdi],dx
   14004501d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140045020:	ins    BYTE PTR es:[rdi],dx
   140045021:	outs   dx,DWORD PTR ds:[rsi]
   140045022:	jb     0x140045067
   140045024:	outs   dx,DWORD PTR ds:[rsi]
   140045025:	outs   dx,BYTE PTR ds:[rsi]
   140045026:	je     0x14004508d
   140045028:	js     0x14004509e
   14004502a:	add    BYTE PTR [rax],al
   14004502c:	pop    rax
   14004502d:	add    edx,DWORD PTR [rbx+0x65]
   140045030:	je     0x140045089
   140045032:	imul   ebp,DWORD PTR [rsi+0x33],0x6e6f4332
   140045039:	jae    0x1400450aa
   14004503b:	ins    BYTE PTR es:[rdi],dx
   14004503c:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14004503f:	ins    BYTE PTR es:[rdi],dx
   140045040:	outs   dx,DWORD PTR ds:[rsi]
   140045041:	jb     0x140045043
   140045043:	add    BYTE PTR [rbx+rax*1+0x52],cl
   140045047:	gs jae 0x1400450be
   14004504a:	outs   dx,DWORD PTR ds:[rsi]
   14004504b:	jb     0x1400450b2
   14004504d:	push   rdi
   14004504e:	imul   ebp,DWORD PTR [rsi+0x33],0x6e6f4332
   140045055:	jae    0x1400450c6
   140045057:	ins    BYTE PTR es:[rdi],dx
   140045058:	rex.XB outs dx,DWORD PTR gs:[rsi]
   14004505b:	ins    BYTE PTR es:[rdi],dx
   14004505c:	outs   dx,DWORD PTR ds:[rsi]
   14004505d:	jb     0x14004505f
   14004505f:	add    BYTE PTR [rcx],bh
   140045061:	add    al,BYTE PTR [rdi+0x65]
   140045064:	je     0x1400450bd
   140045066:	imul   ebp,DWORD PTR [rsi+0x33],0x6e6f4332
   14004506d:	jae    0x1400450de
   14004506f:	ins    BYTE PTR es:[rdi],dx
   140045070:	gs rex.XB jne 0x1400450e6
   140045074:	jae    0x1400450e5
   140045076:	jb     0x1400450bb
   140045078:	outs   dx,DWORD PTR ds:[rsi]
   140045079:	ins    BYTE PTR es:[rdi],dx
   14004507a:	jne    0x1400450e9
   14004507c:	outs   dx,BYTE PTR ds:[rsi]
   14004507d:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004507f:	fs gs js 0x140045083
   140045083:	add    BYTE PTR [rdx+0x2],ah
   140045086:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140045088:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140045091:	gs ins DWORD PTR es:[rdi],dx
   140045093:	pop    rdi
   140045094:	push   rdx
   140045095:	imul   esi,DWORD PTR gs:[ebx+0x74],0x6f4c7265
   14004509e:	addr32 imul ebp,DWORD PTR [esi+0x67],0x7473694c
   1400450a7:	outs   dx,BYTE PTR gs:[rsi]
   1400450a9:	gs jb  0x1400450ac
   1400450ac:	add    cl,BYTE PTR fs:[rdi+rbp*2+0x67]
   1400450b1:	imul   ebp,DWORD PTR [esi+0x67],0x74737953
   1400450b9:	gs ins DWORD PTR es:[rdi],dx
   1400450bb:	pop    rdi
   1400450bc:	push   rdx
   1400450bd:	gs jae 0x140045125
   1400450c0:	je     0x140045105
   1400450c2:	jne    0x140045136
   1400450c4:	jb     0x14004512b
   1400450c6:	outs   dx,BYTE PTR ds:[rsi]
   1400450c7:	je     0x140045115
   1400450c9:	outs   dx,DWORD PTR ds:[rsi]
   1400450ca:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74617453
   1400450d3:	add    BYTE PTR gs:[rax],al
   1400450d6:	pop    rdi
   1400450d7:	add    cl,BYTE PTR [rdi+rbp*2+0x67]
   1400450db:	imul   ebp,DWORD PTR [esi+0x67],0x74737953
   1400450e3:	gs ins DWORD PTR es:[rdi],dx
   1400450e5:	pop    rdi
   1400450e6:	push   rax
   1400450e7:	jne    0x14004515c
   1400450e9:	push   0x67676f4c
   1400450ee:	imul   ebp,DWORD PTR [rsi+0x67],0x74617453
   1400450f5:	add    BYTE PTR gs:[rax],al
   1400450f8:	pop    rsi
   1400450f9:	add    cl,BYTE PTR [rdi+rbp*2+0x67]
   1400450fd:	imul   ebp,DWORD PTR [esi+0x67],0x74737953
   140045105:	gs ins DWORD PTR es:[rdi],dx
   140045107:	pop    rdi
   140045108:	push   rax
   140045109:	outs   dx,DWORD PTR ds:[rsi]
   14004510a:	jo     0x140045158
   14004510c:	outs   dx,DWORD PTR ds:[rsi]
   14004510d:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74617453
   140045116:	add    BYTE PTR gs:[rdx+rax*1+0x4c],cl
   14004511b:	outs   dx,DWORD PTR ds:[rsi]
   14004511c:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   140045125:	gs ins DWORD PTR es:[rdi],dx
   140045127:	pop    rdi
   140045128:	rex.XB jne 0x14004519d
   14004512b:	jb     0x140045192
   14004512d:	outs   dx,BYTE PTR ds:[rsi]
   14004512e:	je     0x140045183
   140045130:	je     0x140045193
   140045132:	je     0x140045199
   140045134:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140045136:	fs gs js 0x14004513a
   14004513a:	add    cl,BYTE PTR [edi+ebp*2+0x67]
   14004513f:	imul   ebp,DWORD PTR [esi+0x67],0x74737953
   140045147:	gs ins DWORD PTR es:[rdi],dx
   140045149:	pop    rdi
   14004514a:	push   rbx
   14004514b:	gs je  0x140045191
   14004514e:	push   0x656e6e61
   140045153:	ins    BYTE PTR es:[rdi],dx
   140045154:	push   rsi
   140045155:	gs jb  0x1400451ba
   140045158:	outs   dx,DWORD PTR ds:[rsi]
   140045159:	jae    0x1400451c4
   14004515b:	je     0x1400451d6
   14004515d:	add    cl,bh
   14004515f:	add    DWORD PTR [rbx+0x4f],eax
   140045162:	rex.WRB pop r15
   140045164:	push   rsp
   140045165:	imul   ebp,DWORD PTR [rbp+0x65],0x6d617473
   14004516c:	jo     0x1400451d3
   14004516e:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140045171:	add    BYTE PTR [eax],al
   140045174:	call   0x1a170a17b
   140045179:	je     0x1400451da
   14004517b:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004517d:	(bad)  
   14004517e:	fs push rbx
   140045180:	rex.R
   140045181:	rex.WR add BYTE PTR [rax],r8b
   140045184:	mov    BYTE PTR [rdx],al
   140045186:	push   rax
   140045187:	ins    BYTE PTR es:[rdi],dx
   140045188:	(bad)  
   140045189:	je     0x1400451ea
   14004518b:	rex.XB push 0x536b6365
   140045191:	rex.R
   140045192:	rex.WR add BYTE PTR [rbx],r14b
   140045195:	add    edx,DWORD PTR [rax+0x6c]
   140045198:	(bad)  
   140045199:	je     0x1400451fa
   14004519b:	push   rbp
   14004519c:	outs   dx,BYTE PTR ds:[rsi]
   14004519d:	ins    BYTE PTR es:[rdi],dx
   14004519e:	outs   dx,DWORD PTR ds:[rsi]
   14004519f:	(bad)  
   1400451a0:	fs push rbx
   1400451a2:	rex.R
   1400451a3:	rex.WR add BYTE PTR [rax],r8b
   1400451a6:	xor    eax,DWORD PTR [rsi+rdx*2]
   1400451a9:	pop    rdi
   1400451aa:	jno    0x14004521f
   1400451ac:	outs   dx,DWORD PTR ds:[rsi]
   1400451ad:	jb     0x140045223
   1400451af:	pop    rdi
   1400451b0:	jae    0x1400451b2
   1400451b2:	out    dx,al
   1400451b3:	add    edx,DWORD PTR [rsi+0x5f]
   1400451b6:	(bad)  
   1400451b7:	je     0x140045228
   1400451b9:	imul   eax,DWORD PTR [rax],0x5603ef00
   1400451bf:	pop    rdi
   1400451c0:	(bad)  
   1400451c1:	je     0x140045232
   1400451c3:	imul   esi,DWORD PTR [rsi],0xf0000034
   1400451c9:	add    edx,DWORD PTR [rsi+0x5f]
   1400451cc:	(bad)  
   1400451cd:	je     0x14004523e
   1400451cf:	jne    0x14004523a
   1400451d1:	ss xor al,0x0
   1400451d4:	in     al,dx
   1400451d5:	add    edx,DWORD PTR [rsi+0x5f]
   1400451d8:	(bad)  
   1400451d9:	je     0x14004524a
   1400451db:	add    BYTE PTR fs:[rax],al
   1400451de:	(bad)  
   1400451df:	add    edx,DWORD PTR [rax+0x6c]
   1400451e2:	(bad)  
   1400451e3:	je     0x140045244
   1400451e5:	push   rbp
   1400451e6:	push   rbp
   1400451e7:	rex.WB
   1400451e8:	rex.R push rsp
   1400451ea:	outs   dx,DWORD PTR ds:[rsi]
   1400451eb:	push   rbx
   1400451ec:	je     0x140045260
   1400451ee:	imul   ebp,DWORD PTR [rsi+0x67],0x5603d800
   1400451f5:	pop    rdi
   1400451f6:	push   rbp
   1400451f7:	push   rsp
   1400451f8:	rex.RX xor DWORD PTR [rsi],r14d
   1400451fb:	push   rsp
   1400451fc:	outs   dx,DWORD PTR ds:[rsi]
   1400451fd:	push   rbp
   1400451fe:	push   rsp
   1400451ff:	rex.RX cmp BYTE PTR [rax],r8b
   140045202:	add    edx,DWORD PTR cs:[rax+0x6c]
   140045206:	(bad)  
   140045207:	je     0x140045268
   140045209:	push   rbp
   14004520a:	push   rbp
   14004520b:	rex.WB
   14004520c:	rex.R
   14004520d:	rex.RX jb 0x14004527f
   140045210:	ins    DWORD PTR es:[rdi],dx
   140045211:	push   rbx
   140045212:	je     0x140045286
   140045214:	imul   ebp,DWORD PTR [rsi+0x67],0x56044800
   14004521b:	pop    rdi
   14004521c:	jae    0x140045292
   14004521e:	jb     0x140045294
   140045220:	outs   dx,DWORD PTR ds:[rsi]
   140045221:	imul   esi,DWORD PTR [rsi],0x4a000034
   140045227:	add    al,0x56
   140045229:	pop    rdi
   14004522a:	jae    0x1400452a0
   14004522c:	jb     0x1400452a2
   14004522e:	outs   dx,DWORD PTR ds:[rsi]
   14004522f:	jne    0x14004529a
   140045231:	ss xor al,0x0
   140045234:	rex.RXB add al,0x56
   140045237:	pop    rdi
   140045238:	jae    0x1400452ae
   14004523a:	jb     0x1400452b0
   14004523c:	outs   dx,DWORD PTR ds:[rsi]
   14004523d:	add    BYTE PTR fs:[rax],al
   140045240:	sub    al,BYTE PTR [rdx]
   140045242:	rex.RXB
   140045243:	gs je  0x140045289
   140045246:	push   rax
   140045247:	push   rbp
   140045248:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004524a:	outs   dx,WORD PTR ds:[rsi]
   14004524c:	jb     0x1400452bb
   14004524e:	(bad)  
   14004524f:	je     0x1400452ba
   140045251:	outs   dx,DWORD PTR ds:[rsi]
   140045252:	outs   dx,BYTE PTR ds:[rsi]
   140045253:	add    BYTE PTR [rcx+rbp*2+0x65],dh
   140045257:	jb     0x140045289
   140045259:	cs fs ins BYTE PTR es:[rdi],dx
   14004525c:	ins    BYTE PTR es:[rdi],dx
   14004525d:	add    BYTE PTR [rbx],dl
   14004525f:	add    BYTE PTR [rdi],bh
   140045261:	push   rsi
   140045262:	pop    rdi
   140045263:	push   rbx
   140045264:	jo     0x1400452d2
   140045266:	imul   esi,DWORD PTR [rbx+rdx*2+0x74],0x676e6972
   14004526e:	rex
   14004526f:	rex pop rcx
   140045271:	pop    r8
   140045273:	push   rax
   140045274:	rex.RB
   140045275:	rex.X
   140045276:	xor    BYTE PTR [rcx+0x45],r8b
   14004527a:	push   r14
   14004527c:	(bad)  
   14004527d:	and    al,0x43
   14004527f:	push   rbp
   140045280:	je     0x1400452ee
   140045282:	push   rsi
   140045283:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   140045288:	rex push rax
   14004528a:	rex.RB
   14004528b:	rex.B
   14004528c:	rex.R push rsi
   14004528e:	(bad)  
   14004528f:	and    al,0x43
   140045291:	push   rbp
   140045292:	je     0x140045300
   140045294:	rex.WRB
   140045295:	gs ins DWORD PTR es:[rdi],dx
   140045297:	outs   dx,DWORD PTR ds:[rsi]
   140045298:	jb     0x140045313
   14004529a:	rex push rax
   14004529c:	rex.RB
   14004529d:	rex.B
   14004529e:	rex.R
   14004529f:	rex.W
   1400452a0:	rex
   1400452a1:	rex
   1400452a2:	rex
   1400452a3:	rex
   1400452a4:	rex pop rdx
   1400452a6:	add    BYTE PTR [rax],al
   1400452a8:	xor    eax,0x71655200
   1400452ad:	jne    0x140045318
   1400452af:	jb     0x140045316
   1400452b1:	rex.WXB
   1400452b2:	gs jns 0x14004530b
   1400452b5:	(bad)  
   1400452b6:	ins    BYTE PTR es:[rdi],dx
   1400452b7:	jne    0x14004531e
   1400452b9:	jae    0x14004530e
   1400452bb:	jns    0x140045330
   1400452bd:	je     0x140045324
   1400452bf:	ins    DWORD PTR es:[rdi],dx
   1400452c0:	add    BYTE PTR [rax],al
   1400452c2:	xor    al,0x0
   1400452c4:	push   rdx
   1400452c5:	imul   esi,DWORD PTR gs:[ebx+0x74],0x74537265
   1400452ce:	jb     0x140045339
   1400452d0:	outs   dx,BYTE PTR ds:[rsi]
   1400452d1:	addr32 push rsp
   1400452d3:	outs   dx,DWORD PTR ds:[rsi]
   1400452d4:	imul   esp,DWORD PTR [rbp+0x6e],0x0
   1400452d8:	jbe    0x14004534d
   1400452da:	je     0x140045340
   1400452dc:	ins    BYTE PTR es:[rdi],dx
   1400452dd:	imul   esp,DWORD PTR [rdx+0x2e],0x6c6c64
   1400452e4:	push   rsi
   1400452e5:	add    al,BYTE PTR [rdi+0x65]
   1400452e8:	je     0x140045336
   1400452ea:	(bad)  
   1400452eb:	jae    0x140045361
   1400452ed:	rex.RB jb 0x140045362
   1400452f0:	outs   dx,DWORD PTR ds:[rsi]
   1400452f1:	jb     0x1400452f3
   1400452f3:	add    BYTE PTR [rcx+0x3],dl
   1400452f6:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400452f8:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140045300:	rex.XB jb 0x14004536c
   140045303:	je     0x14004536e
   140045305:	movsxd esp,DWORD PTR [rcx+0x6c]
   140045308:	push   rbx
   140045309:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004530e:	outs   dx,BYTE PTR ds:[rsi]
   14004530f:	rex.B outs dx,BYTE PTR ds:[rsi]
   140045311:	fs push rbx
   140045313:	jo     0x14004537e
   140045315:	outs   dx,BYTE PTR ds:[rsi]
   140045316:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140045318:	jne    0x140045388
   14004531a:	je     0x14004531c
   14004531c:	(bad)  
   14004531d:	add    eax,0x41736c54
   140045322:	ins    BYTE PTR es:[rdi],dx
   140045323:	ins    BYTE PTR es:[rdi],dx
   140045324:	outs   dx,DWORD PTR ds:[rsi]
   140045325:	movsxd eax,DWORD PTR [rax]
   140045327:	add    BYTE PTR [rbp+rax*1+0x47736c54],al
   14004532e:	gs je  0x140045387
   140045331:	(bad)  
   140045332:	ins    BYTE PTR es:[rdi],dx
   140045333:	jne    0x14004539a
   140045335:	add    BYTE PTR [rbp+0x736c5405],al
   14004533b:	push   rbx
   14004533c:	gs je  0x140045395
   14004533f:	(bad)  
   140045340:	ins    BYTE PTR es:[rdi],dx
   140045341:	jne    0x1400453a8
   140045343:	add    BYTE PTR [rbx+0x736c5405],al
   140045349:	rex.RX jb 0x1400453b1
   14004534c:	add    BYTE PTR gs:[rcx+rax*1+0x65657246],ah
   140045354:	imul   r12,QWORD PTR [rdx+0x72],0x797261
   14004535c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004535d:	add    al,BYTE PTR [rdi+0x65]
   140045360:	je     0x1400453b2
   140045362:	jb     0x1400453d3
   140045364:	movsxd eax,DWORD PTR [rcx+0x64]
   140045367:	fs jb  0x1400453cf
   14004536a:	jae    0x1400453df
   14004536c:	add    BYTE PTR [rax],al
   14004536e:	stos   BYTE PTR es:[rdi],al
   14004536f:	add    ecx,DWORD PTR [rdi+rbp*2+0x61]
   140045373:	imul   r12,QWORD PTR fs:[rdx+0x72],0x45797261
   14004537c:	js     0x1400453d5
   14004537e:	add    BYTE PTR [rax],al
   140045380:	adc    al,0x2
   140045382:	rex.RXB
   140045383:	gs je  0x1400453c9
   140045386:	jne    0x1400453fa
   140045388:	jb     0x1400453ef
   14004538a:	outs   dx,BYTE PTR ds:[rsi]
   14004538b:	je     0x1400453e1
   14004538d:	push   0x64616572
   140045392:	rex.WB
   140045393:	add    BYTE PTR fs:[rax],al
   140045396:	ret    0x4300
   140045399:	jb     0x140045400
   14004539b:	(bad)  
   14004539c:	je     0x140045403
   14004539e:	imul   r13d,DWORD PTR [rbp+r12*2+0x57],0x46016e00
   1400453a7:	imul   ebp,DWORD PTR [rsi+0x64],0x736f6c43
   1400453ae:	add    BYTE PTR gs:[rax+0x756c4601],bl
   1400453b5:	jae    0x14004541f
   1400453b7:	imul   r13d,DWORD PTR [rbp+r12*2+0x42],0x65666675
   1400453c0:	jb     0x140045435
   1400453c2:	add    BYTE PTR [rax],al
   1400453c4:	push   rsp
   1400453c5:	add    al,0x52
   1400453c7:	gs (bad) 
   1400453c9:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x5705f100
   1400453d3:	jb     0x14004543e
   1400453d5:	je     0x14004543c
   1400453d7:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x6c43007f
   1400453e0:	outs   dx,DWORD PTR ds:[rsi]
   1400453e1:	jae    0x140045448
   1400453e3:	rex.W (bad) 
   1400453e5:	outs   dx,BYTE PTR ds:[rsi]
   1400453e6:	fs ins BYTE PTR es:[rdi],dx
   1400453e8:	add    BYTE PTR gs:[rcx],bl
   1400453eb:	add    eax,0x4c746553
   1400453f0:	(bad)  
   1400453f1:	jae    0x140045467
   1400453f3:	rex.RB jb 0x140045468
   1400453f6:	outs   dx,DWORD PTR ds:[rsi]
   1400453f7:	jb     0x1400453f9
   1400453f9:	add    BYTE PTR [rdi],cl
   1400453fb:	add    al,BYTE PTR [rdi+0x65]
   1400453fe:	je     0x140045443
   140045400:	jne    0x140045474
   140045402:	jb     0x140045469
   140045404:	outs   dx,BYTE PTR ds:[rsi]
   140045405:	je     0x140045457
   140045407:	jb     0x140045478
   140045409:	movsxd esp,DWORD PTR [rbp+0x73]
   14004540c:	jae    0x14004540e
   14004540e:	(bad)  
   14004540f:	add    al,BYTE PTR [rdi+0x65]
   140045412:	je     0x140045460
   140045414:	outs   dx,DWORD PTR ds:[rsi]
   140045415:	outs   dx,BYTE PTR ds:[rsi]
   140045416:	addr32 push rax
   140045418:	(bad)  
   140045419:	je     0x140045483
   14004541b:	rex.WRX (bad) 
   14004541d:	ins    DWORD PTR es:[rdi],dx
   14004541e:	add    BYTE PTR gs:[r8],al
   140045422:	rol    DWORD PTR [rdx],0x47
   140045425:	gs je  0x14004547b
   140045428:	push   0x5074726f
   14004542d:	(bad)  
   14004542e:	je     0x140045498
   140045430:	rex.WRX (bad) 
   140045432:	ins    DWORD PTR es:[rdi],dx
   140045433:	add    BYTE PTR gs:[r14+0x6c745204],bpl
   14004543b:	rex.XB (bad) 
   14004543d:	jo     0x1400454b3
   14004543f:	jne    0x1400454b3
   140045441:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140045444:	outs   dx,BYTE PTR ds:[rsi]
   140045445:	je     0x1400454ac
   140045447:	js     0x1400454bd
   140045449:	add    BYTE PTR [rbp+0x6c745204],dh
   14004544f:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140045451:	outs   dx,DWORD PTR ds:[rsi]
   140045452:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140045456:	jne    0x1400454c6
   140045458:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004545c:	outs   dx,BYTE PTR ds:[rsi]
   14004545d:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004545f:	je     0x1400454d3
   140045461:	jns    0x140045463
   140045463:	add    BYTE PTR [rsp+rax*1+0x566c7452],bh
   14004546a:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140045471:	outs   dx,BYTE PTR ds:[rsi]
   140045472:	ja     0x1400454dd
   140045474:	outs   dx,BYTE PTR ds:[rsi]
   140045475:	add    BYTE PTR fs:[rax],al
   140045478:	push   0x3
   14004547a:	rex.WB jae 0x1400454c1
   14004547d:	gs (bad) 
   14004547f:	jne    0x1400454e8
   140045481:	addr32 gs jb 0x1400454d5
   140045485:	jb     0x1400454ec
   140045487:	jae    0x1400454ee
   140045489:	outs   dx,BYTE PTR ds:[rsi]
   14004548a:	je     0x14004548c
   14004548c:	xchg   edx,eax
   14004548d:	add    eax,0x61686e55
   140045492:	outs   dx,BYTE PTR ds:[rsi]
   140045493:	fs ins BYTE PTR es:[rdi],dx
   140045495:	gs fs rex.RB js 0x1400454fd
   14004549a:	gs jo  0x140045511
   14004549d:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400454a4:	gs jb  0x1400454a7
   1400454a7:	add    BYTE PTR [rdx+0x5],dl
   1400454aa:	push   rbx
   1400454ab:	gs je  0x140045503
   1400454ae:	outs   dx,BYTE PTR ds:[rsi]
   1400454af:	push   0x6c646e61
   1400454b4:	gs fs rex.RB js 0x14004551c
   1400454b9:	gs jo  0x140045530
   1400454bc:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   1400454c3:	gs jb  0x1400454c6
   1400454c6:	(bad)
   1400454c9:	gs je  0x14004551f
   1400454cc:	je     0x14004552f
   1400454ce:	jb     0x140045544
   1400454d0:	jne    0x140045542
   1400454d2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400454d4:	outs   dx,WORD PTR ds:[rsi]
   1400454d6:	push   rdi
   1400454d7:	add    BYTE PTR [rax+0x3],dh
   1400454da:	rex.WB jae 0x14004552d
   1400454dd:	jb     0x14004554e
   1400454df:	movsxd esp,DWORD PTR [rbp+0x73]
   1400454e2:	jae    0x140045553
   1400454e4:	jb     0x14004552c
   1400454e6:	gs (bad) 
   1400454e8:	je     0x14004555f
   1400454ea:	jb     0x140045551
   1400454ec:	push   rax
   1400454ed:	jb     0x140045554
   1400454ef:	jae    0x140045556
   1400454f1:	outs   dx,BYTE PTR ds:[rsi]
   1400454f2:	je     0x1400454f4
   1400454f4:	ins    DWORD PTR es:[rdi],dx
   1400454f5:	add    al,BYTE PTR [rdi+0x65]
   1400454f8:	je     0x140045547
   1400454fa:	outs   dx,DWORD PTR ds:[rsi]
   1400454fb:	fs jne 0x14004556a
   1400454fe:	gs rex.W (bad) 
   140045501:	outs   dx,BYTE PTR ds:[rsi]
   140045502:	fs ins BYTE PTR es:[rdi],dx
   140045504:	gs push rdi
   140045506:	add    BYTE PTR [rax],al
   140045508:	xor    BYTE PTR [rcx+rdx*2],al
   14004550b:	jne    0x140045572
   14004550d:	jb     0x140045588
   14004550f:	push   rax
   140045510:	gs jb  0x140045579
   140045513:	outs   dx,DWORD PTR ds:[rsi]
   140045514:	jb     0x140045583
   140045516:	(bad)  
   140045517:	outs   dx,BYTE PTR ds:[rsi]
   140045518:	movsxd esp,DWORD PTR [rbp+0x43]
   14004551b:	outs   dx,DWORD PTR ds:[rsi]
   14004551c:	jne    0x14004558c
   14004551e:	je     0x140045585
   140045520:	jb     0x140045522
   140045522:	adc    BYTE PTR [rdx],al
   140045524:	rex.RXB
   140045525:	gs je  0x14004556b
   140045528:	jne    0x14004559c
   14004552a:	jb     0x140045591
   14004552c:	outs   dx,BYTE PTR ds:[rsi]
   14004552d:	je     0x14004557f
   14004552f:	jb     0x1400455a0
   140045531:	movsxd esp,DWORD PTR [rbp+0x73]
   140045534:	jae    0x14004557f
   140045536:	fs add ch,bl
   140045539:	add    al,BYTE PTR [rdi+0x65]
   14004553c:	je     0x140045591
   14004553e:	jns    0x1400455b3
   140045540:	je     0x1400455a7
   140045542:	ins    DWORD PTR es:[rdi],dx
   140045543:	push   rsp
   140045544:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   14004554b:	ins    BYTE PTR es:[rdi],dx
   14004554c:	gs push rsp
   14004554e:	imul   ebp,DWORD PTR [rbp+0x65],0x49035400
   140045555:	outs   dx,BYTE PTR ds:[rsi]
   140045556:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   14004555e:	push   rbx
   14004555f:	imul   r14,QWORD PTR [rbx+0x74],0x64616548
   140045567:	add    BYTE PTR [rbx+0x45],cl
   14004556a:	push   rdx
   14004556b:	rex.WRX
   14004556c:	rex.RB
   14004556d:	xor    r14,QWORD PTR [rdx]
   140045570:	cs fs ins BYTE PTR es:[rdi],dx
   140045573:	ins    BYTE PTR es:[rdi],dx
   140045574:	add    BYTE PTR [rax],al
   140045576:	imul   eax,DWORD PTR [rsi+rdx*2],0x6e73765f
   14004557d:	jo     0x1400455f1
   14004557f:	imul   ebp,DWORD PTR [rsi+0x74],0x7a695366
   140045586:	add    BYTE PTR gs:[rsp+rax*1+0x455f565f],al
   14004558e:	js     0x140045604
   140045590:	jb     0x1400455f3
   140045592:	movsxd esi,DWORD PTR [rsi+rax*2+0x69]
   140045596:	ins    BYTE PTR es:[rdi],dx
   140045597:	gs rex.RB js 0x14004560f
   14004559b:	outs   dx,BYTE PTR gs:[rsi]
   14004559d:	jae    0x140045608
   14004559f:	outs   dx,DWORD PTR ds:[rsi]
   1400455a0:	outs   dx,BYTE PTR ds:[rsi]
   1400455a1:	add    BYTE PTR [rcx+0x5f565f04],cl
   1400455a7:	rex.WRB (bad) 
   1400455a9:	imul   esp,DWORD PTR [rbp+0x41],0x62
   1400455ad:	jae    0x14004561e
   1400455af:	ins    BYTE PTR es:[rdi],dx
   1400455b0:	jne    0x140045626
   1400455b2:	gs push rax
   1400455b4:	(bad)  
   1400455b5:	je     0x14004561f
   1400455b7:	add    ch,ch
   1400455b9:	add    edx,DWORD PTR [rsi+0x5f]
   1400455bc:	(bad)  
   1400455bd:	je     0x14004562e
   1400455bf:	data16 add BYTE PTR [rax],al
   1400455c2:	rex.RXB add r9b,BYTE PTR [r11+0x65]
   1400455c6:	jns    0x14004561e
   1400455c8:	(bad)  
   1400455c9:	ins    BYTE PTR es:[rdi],dx
   1400455ca:	jne    0x140045631
   1400455cc:	jae    0x140045621
   1400455ce:	jns    0x140045643
   1400455d0:	je     0x140045637
   1400455d2:	ins    DWORD PTR es:[rdi],dx
   1400455d3:	add    BYTE PTR [rsi+0x475f5603],ch
   1400455d9:	gs je  0x140045621
   1400455dc:	jb     0x140045650
   1400455de:	outs   dx,BYTE PTR ds:[rsi]
   1400455df:	outs   dx,DWORD PTR ds:[rsi]
   1400455e0:	add    BYTE PTR [rax],al
   1400455e2:	ret    0x5603
   1400455e5:	pop    rdi
   1400455e6:	push   rbx
   1400455e7:	gs je  0x14004562f
   1400455ea:	jb     0x14004565e
   1400455ec:	outs   dx,BYTE PTR ds:[rsi]
   1400455ed:	outs   dx,DWORD PTR ds:[rsi]
   1400455ee:	add    BYTE PTR [rax],al
   1400455f0:	outs   dx,DWORD PTR ds:[rsi]
   1400455f1:	add    al,0x56
   1400455f3:	pop    rdi
   1400455f4:	ja     0x140045659
   1400455f6:	jae    0x14004566c
   1400455f8:	outs   dx,DWORD PTR ds:[rsi]
   1400455f9:	imul   esi,DWORD PTR [rsi],0xe0000034
   1400455ff:	add    edx,DWORD PTR [rsi+0x5f]
   140045602:	push   rbp
   140045603:	push   rsp
   140045604:	cmp    BYTE PTR [rdi+r13*2+0x55],r10b
   140045609:	push   rsp
   14004560a:	rex.RX xor DWORD PTR [rsi],r14d
   14004560d:	add    BYTE PTR [rcx+0x65443f00],bl
   140045613:	jbe    0x140045662
   140045615:	jae    0x14004567e
   140045617:	rex
   140045618:	rex pop rcx
   14004561a:	pop    r8
   14004561c:	push   rax
   14004561d:	rex.RB
   14004561e:	rex.X
   14004561f:	rex.R pop rdx
   140045621:	pop    rdx
   140045622:	add    BYTE PTR [rax],al
   140045624:	sahf   
   140045625:	add    dl,BYTE PTR [rax+0x6c]
   140045628:	(bad)  
   140045629:	je     0x14004568a
   14004562b:	imul   r13d,DWORD PTR [rbp+r12*2+0x53],0x657a69
   140045634:	mov    esi,0x505f5603
   140045639:	(bad)  
   14004563a:	je     0x1400456a4
   14004563c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004563e:	outs   dx,BYTE PTR ds:[rsi]
   14004563f:	je     0x1400456a2
   140045641:	imul   ebp,DWORD PTR [rsi+0x73],0x68746150
   140045648:	add    BYTE PTR [rax],al
   14004564a:	mov    ebx,0x616c5002
   14004564f:	je     0x1400456b0
   140045651:	rex.RXB
   140045652:	gs je  0x1400456a4
   140045655:	push   rbx
   140045656:	push   rsp
   140045657:	jns    0x1400456c9
   140045659:	add    BYTE PTR gs:[rax],al
   14004565c:	(bad)  
   14004565d:	add    dl,BYTE PTR [rax+0x6c]
   140045660:	(bad)  
   140045661:	je     0x1400456c2
   140045663:	rex.WB jae 0x1400456ae
   140045666:	imul   esp,DWORD PTR [rdi+0x68],0x495044
   14004566d:	add    BYTE PTR [rax+0x5f565f04],bl
   140045673:	jae    0x1400456e9
   140045675:	jb     0x1400456e5
   140045677:	imul   esp,DWORD PTR [rbx+0x6d],0x61665f70
   14004567e:	jae    0x1400456f4
   140045680:	add    BYTE PTR [rax],al
   140045682:	mov    BYTE PTR [rdi+rbx*2],al
   140045685:	push   rsi
   140045686:	pop    rdi
   140045687:	rex.RXB
   140045688:	gs je  0x1400456d1
   14004568b:	imul   esi,DWORD PTR [rdx+0x73],0x72694474
   140045692:	add    BYTE PTR [rax],al
   140045694:	mov    al,BYTE PTR [rdi+rbx*2]
   140045697:	push   rsi
   140045698:	pop    rdi
   140045699:	rex.WRB (bad) 
   14004569b:	imul   esp,DWORD PTR [rbp+0x52],0x65
   14004569f:	ins    BYTE PTR es:[rdi],dx
   1400456a0:	(bad)  
   1400456a1:	je     0x14004570c
   1400456a3:	jbe    0x14004570a
   1400456a5:	push   rax
   1400456a6:	(bad)  
   1400456a7:	je     0x140045711
   1400456a9:	add    BYTE PTR [rax+0x616c5002],dh
   1400456af:	je     0x140045710
   1400456b1:	rex.RXB
   1400456b2:	gs je  0x140045701
   1400456b5:	outs   dx,DWORD PTR ds:[rsi]
   1400456b6:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400456b9:	push   rsp
   1400456ba:	imul   ebp,DWORD PTR [rbp+0x65],0x4c025000
   1400456c1:	outs   dx,DWORD PTR ds:[rsi]
   1400456c2:	addr32 imul ebp,DWORD PTR [esi+0x67],0x74737953
   1400456cb:	gs ins DWORD PTR es:[rdi],dx
   1400456cd:	pop    rdi
   1400456ce:	rex.RXB
   1400456cf:	gs je  0x140045715
   1400456d2:	push   0x656e6e61
   1400456d7:	ins    BYTE PTR es:[rdi],dx
   1400456d8:	add    BYTE PTR [rax],al
   1400456da:	mov    ebx,0x6c745204
   1400456df:	push   rbp
   1400456e0:	outs   dx,BYTE PTR ds:[rsi]
   1400456e1:	ja     0x14004574c
   1400456e3:	outs   dx,BYTE PTR ds:[rsi]
   1400456e4:	fs rex.RB js 0x1400456e8
   1400456e8:	sub    DWORD PTR [rcx],eax
   1400456ea:	rex.RB outs dx,BYTE PTR ds:[rsi]
   1400456ec:	je     0x140045753
   1400456ee:	jb     0x140045733
   1400456f0:	jb     0x14004575b
   1400456f2:	je     0x14004575d
   1400456f4:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400456f7:	push   rbx
   1400456f8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   1400456fd:	outs   dx,BYTE PTR ds:[rsi]
   1400456fe:	add    BYTE PTR [rax],al
   140045700:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140045701:	add    ecx,DWORD PTR [rbp+riz*2+0x61]
   140045705:	jbe    0x14004576c
   140045707:	rex.XB jb 0x140045773
   14004570a:	je     0x140045775
   14004570c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004570f:	push   rbx
   140045710:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140045715:	outs   dx,BYTE PTR ds:[rsi]
   140045716:	add    BYTE PTR [rax],al
   140045718:	(bad)  
   140045719:	add    DWORD PTR [rbp+riz*2+0x6c],eax
   14004571d:	gs je  0x140045785
   140045720:	rex.XB jb 0x14004578c
   140045723:	je     0x14004578e
   140045725:	movsxd esp,DWORD PTR [rcx+0x6c]
   140045728:	push   rbx
   140045729:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   14004572e:	outs   dx,BYTE PTR ds:[rsi]
   14004572f:	add    BYTE PTR [rax+0x5],dh
   140045732:	push   rsp
   140045733:	gs jb  0x1400457a3
   140045736:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   14004573d:	outs   dx,DWORD PTR ds:[rsi]
   14004573e:	movsxd esp,DWORD PTR [rbp+0x73]
   140045741:	jae    0x140045743
   140045743:	add    BYTE PTR [rdi+0x1],dl
   140045746:	rex.RB js 0x1400457b2
   140045749:	je     0x14004579b
   14004574b:	jb     0x1400457bc
   14004574d:	movsxd esp,DWORD PTR [rbp+0x73]
   140045750:	jae    0x140045752
   140045752:	ins    BYTE PTR es:[rdi],dx
   140045753:	add    al,BYTE PTR [rdi+0x65]
   140045756:	je     0x1400457a5
   140045758:	outs   dx,DWORD PTR ds:[rsi]
   140045759:	fs jne 0x1400457c8
   14004575c:	gs rex.W (bad) 
   14004575f:	outs   dx,BYTE PTR ds:[rsi]
   140045760:	fs ins BYTE PTR es:[rdi],dx
   140045762:	gs rex.RB js 0x1400457bd
   140045766:	add    BYTE PTR [rax],al
   140045768:	push   0x74654702
   14004576d:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004576f:	fs jne 0x1400457de
   140045772:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   14004577c:	add    BYTE PTR [rax],al
   14004577e:	(bad)  
   14004577f:	add    ecx,DWORD PTR [rbp+0x75]
   140045782:	ins    BYTE PTR es:[rdi],dx
   140045783:	je     0x1400457ee
   140045785:	rex.X jns 0x1400457fc
   140045788:	gs push rsp
   14004578a:	outs   dx,DWORD PTR ds:[rsi]
   14004578b:	push   rdi
   14004578c:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140045794:	fld    QWORD PTR [rip+0x65646957]        # 0x1a568c0f1
   14004579a:	rex.XB push 0x6f547261
   1400457a0:	rex.WRB jne 0x14004580f
   1400457a3:	je     0x14004580e
   1400457a5:	rex.X jns 0x14004581c
   1400457a8:	gs add bh,al
   1400457ab:	add    al,BYTE PTR [rdi+0x65]
   1400457ae:	je     0x140045803
   1400457b0:	je     0x140045816
   1400457b2:	rex.W (bad) 
   1400457b4:	outs   dx,BYTE PTR ds:[rsi]
   1400457b5:	fs ins BYTE PTR es:[rdi],dx
   1400457b7:	add    BYTE PTR gs:[rax],al
   1400457ba:	(bad)  
   1400457bb:	add    DWORD PTR [rdi+0x65],eax
   1400457be:	je     0x140045803
   1400457c0:	outs   dx,DWORD PTR ds:[rsi]
   1400457c1:	ins    DWORD PTR es:[rdi],dx
   1400457c2:	ins    DWORD PTR es:[rdi],dx
   1400457c3:	(bad)  
   1400457c4:	outs   dx,BYTE PTR ds:[rsi]
   1400457c5:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1cf0041
   1400457ce:	rex.RXB
   1400457cf:	gs je  0x140045815
   1400457d2:	outs   dx,DWORD PTR ds:[rsi]
   1400457d3:	ins    DWORD PTR es:[rdi],dx
   1400457d4:	ins    DWORD PTR es:[rdi],dx
   1400457d5:	(bad)  
   1400457d6:	outs   dx,BYTE PTR ds:[rsi]
   1400457d7:	imul   r13,QWORD PTR fs:[rsi+0x65],0x1aa0057
   1400457e0:	rex.RXB
   1400457e1:	gs je  0x140045825
   1400457e4:	rex.XB push r8
   1400457e6:	add    BYTE PTR [rax],al
   1400457e8:	xchg   ebx,eax
   1400457e9:	add    BYTE PTR [rbx+0x6f],al
   1400457ec:	ins    DWORD PTR es:[rdi],dx
   1400457ed:	jo     0x140045850
   1400457ef:	jb     0x140045856
   1400457f1:	push   rbx
   1400457f2:	je     0x140045866
   1400457f4:	imul   ebp,DWORD PTR [rsi+0x67],0x99000057
   1400457fb:	add    ecx,DWORD PTR [rbx+rax*2+0x4d]
   1400457ff:	(bad)  
   140045800:	jo     0x140045855
   140045802:	je     0x140045876
   140045804:	imul   ebp,DWORD PTR [rsi+0x67],0x45000057
   14004580b:	add    al,BYTE PTR [rdi+0x65]
   14004580e:	je     0x140045856
   140045810:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140045818:	loop   0x14004581b
   14004581a:	rex.RXB
   14004581b:	gs je  0x140045861
   14004581e:	outs   dx,DWORD PTR ds:[rsi]
   14004581f:	outs   dx,BYTE PTR ds:[rsi]
   140045820:	jae    0x140045891
   140045822:	ins    BYTE PTR es:[rdi],dx
   140045823:	gs rex.XB push r8
   140045826:	add    BYTE PTR [rax],al
   140045828:	hlt    
   140045829:	add    DWORD PTR [rdi+0x65],eax
   14004582c:	je     0x140045871
   14004582e:	outs   dx,DWORD PTR ds:[rsi]
   14004582f:	outs   dx,BYTE PTR ds:[rsi]
   140045830:	jae    0x1400458a1
   140045832:	ins    BYTE PTR es:[rdi],dx
   140045833:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140045836:	fs add BYTE PTR gs:[rax],al
   14004583a:	jae    0x14004583d
   14004583c:	rex.RX imul r13d,DWORD PTR [rsi+0x64],0x73726946
   140045844:	je     0x14004588c
   140045846:	imul   ebp,DWORD PTR [rbp+riz*2+0x45],0x4178
   14004584e:	add    DWORD PTR [rcx],0x46
   140045851:	imul   ebp,DWORD PTR [rsi+0x64],0x7478654e
   140045858:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x49037500
   140045861:	jae    0x1400458b9
   140045863:	(bad)  
   140045864:	ins    BYTE PTR es:[rdi],dx
   140045865:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   14004586d:	add    BYTE PTR gs:[ebp+0x74654702],cl
   140045875:	rex.WRXB
   140045876:	rex.RB
   140045877:	rex.WRB
   140045878:	rex.XB push r8
   14004587a:	add    BYTE PTR [rax],al
   14004587c:	mov    ecx,0x74654701
   140045881:	rex.XB push r8
   140045883:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140045885:	outs   dx,WORD PTR ds:[rsi]
   140045887:	add    BYTE PTR [rsi],ch
   140045889:	add    al,BYTE PTR [rdi+0x65]
   14004588c:	je     0x1400458d3
   14004588e:	outs   dx,BYTE PTR ds:[rsi]
   14004588f:	jbe    0x1400458fa
   140045891:	jb     0x140045902
   140045893:	outs   dx,BYTE PTR ds:[rsi]
   140045894:	ins    DWORD PTR es:[rdi],dx
   140045895:	outs   dx,BYTE PTR gs:[rsi]
   140045897:	je     0x1400458ec
   140045899:	je     0x14004590d
   14004589b:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   1400458a2:	movabs ds:0x766e456565724601,eax
   1400458ab:	imul   esi,DWORD PTR [rdx+0x6f],0x6e656d6e
   1400458b2:	je     0x140045907
   1400458b4:	je     0x140045928
   1400458b6:	imul   ebp,DWORD PTR [rsi+0x67],0xfc005773
   1400458bd:	add    al,0x53
   1400458bf:	gs je  0x140045907
   1400458c2:	outs   dx,BYTE PTR ds:[rsi]
   1400458c3:	jbe    0x14004592e
   1400458c5:	jb     0x140045936
   1400458c7:	outs   dx,BYTE PTR ds:[rsi]
   1400458c8:	ins    DWORD PTR es:[rdi],dx
   1400458c9:	outs   dx,BYTE PTR gs:[rsi]
   1400458cb:	je     0x140045923
   1400458cd:	(bad)  
   1400458ce:	jb     0x140045939
   1400458d0:	(bad)  
   1400458d1:	(bad)  
   1400458d2:	ins    BYTE PTR es:[rdi],dx
   1400458d3:	add    BYTE PTR gs:[r9+0x74654702],bpl
   1400458db:	push   rax
   1400458dc:	jb     0x14004594d
   1400458de:	movsxd esp,DWORD PTR [rbp+0x73]
   1400458e1:	jae    0x14004592b
   1400458e3:	gs (bad) 
   1400458e5:	jo     0x1400458e7
   1400458e7:	add    BYTE PTR [rax],dh
   1400458e9:	add    eax,0x53746553
   1400458ee:	je     0x140045954
   1400458f0:	rex.W (bad) 
   1400458f2:	outs   dx,BYTE PTR ds:[rsi]
   1400458f3:	fs ins BYTE PTR es:[rdi],dx
   1400458f5:	add    BYTE PTR gs:[rax],al
   1400458f8:	int3   
   1400458f9:	add    al,BYTE PTR [rdi+0x65]
   1400458fc:	je     0x140045951
   1400458fe:	je     0x140045972
   140045900:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   140045907:	push   rdi
   140045908:	add    BYTE PTR [rax],al
   14004590a:	or     al,0x5
   14004590c:	push   rbx
   14004590d:	gs je  0x140045956
   140045910:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140045918:	gs jb  0x140045960
   14004591b:	js     0x14004591d
   14004591d:	add    al,dh
   14004591f:	add    eax,0x74697257
   140045924:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140045927:	outs   dx,BYTE PTR ds:[rsi]
   140045928:	jae    0x140045999
   14004592a:	ins    BYTE PTR es:[rdi],dx
   14004592b:	gs push rdi
   14004592d:	add    BYTE PTR [rsp+rax*1+0x52],al
   140045931:	(bad)  
   140045932:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140045939:	jo     0x1400459af
   14004593b:	.byte 0x69
   14004593c:	outs   dx,DWORD PTR ds:[rsi]
   14004593d:	outs   dx,BYTE PTR ds:[rsi]
	...

Disassembly of section .data:

0000000140046000 <.data>:
   140046000:	push   0x140033a
   140046005:	add    BYTE PTR [rax],al
   140046007:	add    BYTE PTR [rax+0x140033d],bh
   14004600d:	add    BYTE PTR [rax],al
   14004600f:	add    BYTE PTR [rax+0x140033d],ch
   140046015:	add    BYTE PTR [rax],al
   140046017:	add    al,dl
   140046019:	cmp    eax,0x14003
   14004601e:	add    BYTE PTR [rax],al
   140046020:	sar    BYTE PTR [rip+0x14003],0x0        # 0x14005a02a
   140046027:	add    al,ch
   140046029:	cmp    eax,0x14003
   14004602e:	add    BYTE PTR [rax],al
   140046030:	fdivr  DWORD PTR [rip+0x14003]        # 0x14005a039
   140046036:	add    BYTE PTR [rax],al
   140046038:	or     BYTE PTR [rsi],bh
   14004603a:	add    eax,DWORD PTR [rax+0x1]
   14004603d:	add    BYTE PTR [rax],al
   14004603f:	add    al,bh
   140046041:	cmp    eax,0x14003
   140046046:	add    BYTE PTR [rax],al
   140046048:	and    BYTE PTR [rsi],bh
   14004604a:	add    eax,DWORD PTR [rax+0x1]
   14004604d:	add    BYTE PTR [rax],al
   14004604f:	add    BYTE PTR [rax],dl
   140046051:	add    eax,DWORD PTR ds:[rax+0x1]
   140046055:	add    BYTE PTR [rax],al
   140046057:	add    BYTE PTR [rax+0x3e],al
   14004605a:	add    eax,DWORD PTR [rax+0x1]
   14004605d:	add    BYTE PTR [rax],al
   14004605f:	add    BYTE PTR [rax],dh
   140046061:	add    eax,DWORD PTR ds:[rax+0x1]
   140046065:	add    BYTE PTR [rax],al
   140046067:	add    BYTE PTR [rax+0x3e],ah
   14004606a:	add    eax,DWORD PTR [rax+0x1]
   14004606d:	add    BYTE PTR [rax],al
   14004606f:	add    BYTE PTR [rax+0x3e],dl
   140046072:	add    eax,DWORD PTR [rax+0x1]
   140046075:	add    BYTE PTR [rax],al
   140046077:	add    BYTE PTR [rax+0x140033e],al
   14004607d:	add    BYTE PTR [rax],al
   14004607f:	add    BYTE PTR [rax+0x3e],dh
   140046082:	add    eax,DWORD PTR [rax+0x1]
   140046085:	add    BYTE PTR [rax],al
   140046087:	add    BYTE PTR [rax+0x140033e],ah
   14004608d:	add    BYTE PTR [rax],al
   14004608f:	add    BYTE PTR [rax+0x140033e],dl
   140046095:	add    BYTE PTR [rax],al
   140046097:	add    BYTE PTR [rax+0x43],cl
   14004609a:	add    eax,DWORD PTR [rax+0x1]
   14004609d:	add    BYTE PTR [rax],al
   14004609f:	add    BYTE PTR [rax],bl
   1400460a1:	rex.XB add eax,DWORD PTR [r8+0x1]
	...
   1400460bd:	(bad)  
   1400460be:	(bad)  
   1400460bf:	inc    DWORD PTR [rcx]
   1400460c1:	add    DWORD PTR [rax],eax
   1400460c3:	add    BYTE PTR [rax],al
   1400460c5:	add    BYTE PTR [rax],al
   1400460c7:	add    BYTE PTR [rax+0x6d],bl
   1400460ca:	add    eax,DWORD PTR [rax+0x1]
	...
   1400460e5:	add    BYTE PTR [rax],al
   1400460e7:	add    BYTE PTR [rcx],al
   1400460e9:	add    BYTE PTR [rax],al
   1400460eb:	add    BYTE PTR [rax],al
   1400460ed:	add    BYTE PTR [rax],al
   1400460ef:	add    BYTE PTR [rax+rbp*2+0x3],cl
   1400460f3:	rex add DWORD PTR [rax],eax
   1400460f6:	add    BYTE PTR [rax],al
   1400460f8:	clc    
   1400460f9:	jo     0x1400460fe
   1400460fb:	rex add DWORD PTR [rax],eax
   1400460fe:	add    BYTE PTR [rax],al
   140046100:	call   0x141446475
   140046105:	add    BYTE PTR [rax],al
   140046107:	add    BYTE PTR [rax],bl
   140046109:	jno    0x14004610e
   14004610b:	rex add DWORD PTR [rax],eax
   14004610e:	add    BYTE PTR [rax],al
   140046110:	or     BYTE PTR [rcx+0x3],dh
   140046113:	rex add DWORD PTR [rax],eax
   140046116:	add    BYTE PTR [rax],al
   140046118:	cmp    BYTE PTR [rcx+0x3],dh
   14004611b:	rex add DWORD PTR [rax],eax
   14004611e:	add    BYTE PTR [rax],al
   140046120:	sub    BYTE PTR [rcx+0x3],dh
   140046123:	rex add DWORD PTR [rax],eax
   140046126:	add    BYTE PTR [rax],al
   140046128:	pop    rax
   140046129:	jno    0x14004612e
   14004612b:	rex add DWORD PTR [rax],eax
   14004612e:	add    BYTE PTR [rax],al
   140046130:	rex.W jno 0x140046136
   140046133:	rex add DWORD PTR [rax],eax
   140046136:	add    BYTE PTR [rax],al
   140046138:	js     0x1400461ab
   14004613a:	add    eax,DWORD PTR [rax+0x1]
   14004613d:	add    BYTE PTR [rax],al
   14004613f:	add    BYTE PTR [rax+0x71],ch
   140046142:	add    eax,DWORD PTR [rax+0x1]
   140046145:	add    BYTE PTR [rax],al
   140046147:	add    BYTE PTR [rax+0x1400371],bl
   14004614d:	add    BYTE PTR [rax],al
   14004614f:	add    BYTE PTR [rax+0x1400371],cl
   140046155:	add    BYTE PTR [rax],al
   140046157:	add    BYTE PTR [rax+0x1400371],bh
   14004615d:	add    BYTE PTR [rax],al
   14004615f:	add    BYTE PTR [rax+0x1400371],ch
   140046165:	add    BYTE PTR [rax],al
   140046167:	add    al,bl
   140046169:	jno    0x14004616e
   14004616b:	rex add DWORD PTR [rax],eax
   14004616e:	add    BYTE PTR [rax],al
   140046170:	enter  0x371,0x40
   140046174:	add    DWORD PTR [rax],eax
   140046176:	add    BYTE PTR [rax],al
   140046178:	clc    
   140046179:	jno    0x14004617e
   14004617b:	rex add DWORD PTR [rax],eax
   14004617e:	add    BYTE PTR [rax],al
   140046180:	call   0x1414464f6
   140046185:	add    BYTE PTR [rax],al
   140046187:	add    BYTE PTR [rax+rax*1],dl
	...
   14004619e:	cmp    BYTE PTR [rdi],0xff
   1400461a1:	(bad)  
   1400461a2:	(bad)  
   1400461a3:	inc    DWORD PTR [rax]
   1400461a5:	add    BYTE PTR [rax],al
   1400461a7:	add    BYTE PTR [rax+0x1400376],dh
   1400461ad:	add    BYTE PTR [rax],al
   1400461af:	add    BYTE PTR [rax+0x1400327],ah
   1400461b5:	add    BYTE PTR [rax],al
   1400461b7:	add    BYTE PTR [rax+0x1400327],ah
   1400461bd:	add    BYTE PTR [rax],al
   1400461bf:	add    BYTE PTR [rcx],al
   1400461c1:	add    BYTE PTR [rax],al
   1400461c3:	add    BYTE PTR [rax],al
   1400461c5:	add    BYTE PTR [rax],al
   1400461c7:	add    al,al
   1400461c9:	jnp    0x1400461ce
   1400461cb:	rex add DWORD PTR [rax],eax
   1400461ce:	add    BYTE PTR [rax],al
   1400461d0:	(bad)  
   1400461d1:	(bad)  
   1400461d2:	(bad)  
   1400461d3:	inc    DWORD PTR [rax]
	...
   1400461dd:	add    BYTE PTR [rax],al
   1400461df:	add    bh,bh
   1400461e1:	(bad)  
   1400461e2:	(bad)  
   1400461e3:	inc    DWORD PTR [rax]
   1400461e5:	add    BYTE PTR [rax],al
   1400461e7:	add    BYTE PTR [rdx],dh
   1400461e9:	movabs ds:0x5dcd00002b992ddf,al
   1400461f2:	and    dl,dl
   1400461f4:	data16 (bad) 
   1400461f6:	(bad)  
   1400461f7:	push   QWORD PTR [rbp-0x68]
   1400461fa:	add    BYTE PTR [rax],al
   1400461fc:	add    BYTE PTR [rax],al
   1400461fe:	add    BYTE PTR [rax],al
   140046200:	add    DWORD PTR [rax],eax
   140046202:	add    BYTE PTR [rax],al
   140046204:	add    al,BYTE PTR [rax]
   140046206:	add    BYTE PTR [rax],al
   140046208:	(bad)  
   140046209:	and    BYTE PTR [rax],al
   14004620b:	add    BYTE PTR [rax],al
   14004620d:	add    BYTE PTR [rax],al
   14004620f:	add    BYTE PTR [rcx],al
	...
   14004621d:	add    BYTE PTR [rax],al
   14004621f:	add    bh,bh
   140046221:	(bad)  
   140046222:	(bad)  
   140046223:	inc    DWORD PTR [rcx]
	...
   140046241:	add    BYTE PTR [rax],al
   140046243:	add    BYTE PTR [rcx],al
   140046245:	and    BYTE PTR [rax],al
	...
   14004629b:	add    BYTE PTR [rdx],al
   14004629d:	and    BYTE PTR [rax],al
   14004629f:	add    BYTE PTR [rcx],al
	...
   1400462f1:	add    BYTE PTR [rax],al
   1400462f3:	add    BYTE PTR [rdx],al
   1400462f5:	and    BYTE PTR [rax],al
   1400462f7:	add    BYTE PTR [rdx],al
	...
   140046335:	add    BYTE PTR [rax],al
   140046337:	add    BYTE PTR [rdx],al
   140046339:	add    BYTE PTR [rax],al
   14004633b:	add    BYTE PTR [rax],al
   14004633d:	add    BYTE PTR [rax],al
   14004633f:	add    bh,bh
   140046341:	(bad)  
   140046342:	(bad)  
   140046343:	dec    DWORD PTR [rax+rax*1]
   140046346:	add    BYTE PTR [rax],al
   140046348:	or     BYTE PTR [rax],al
   14004634a:	add    BYTE PTR [rax],al
   14004634c:	add    BYTE PTR [rax],al
   14004634e:	add    BYTE PTR [rax],al
   140046350:	sbb    BYTE PTR [rsi+0x14003],0x0
   140046357:	add    BYTE PTR [rcx],al
   140046359:	add    BYTE PTR [rax],al
   14004635b:	add    BYTE PTR [rax],al
   14004635d:	add    BYTE PTR [rax],al
   14004635f:	add    BYTE PTR [rcx],al
	...
   140046369:	add    BYTE PTR [rax],al
   14004636b:	add    BYTE PTR [rcx],al
	...
   140046395:	add    BYTE PTR [rax],al
   140046397:	add    BYTE PTR [rax+0x1400464],bh
	...
   1400463b5:	add    BYTE PTR [rax],al
   1400463b7:	add    BYTE PTR [rax+0x1400464],bh
	...
   1400463d5:	add    BYTE PTR [rax],al
   1400463d7:	add    BYTE PTR [rax+0x1400464],bh
	...
   1400463f5:	add    BYTE PTR [rax],al
   1400463f7:	add    BYTE PTR [rax+0x1400464],bh
	...
   140046415:	add    BYTE PTR [rax],al
   140046417:	add    BYTE PTR [rax+0x1400464],bh
	...
   140046449:	push   0x4
   14004644b:	rex add DWORD PTR [rax],eax
	...
   14004645e:	add    BYTE PTR [rax],al
   140046460:	add    BYTE PTR [rcx+0x14003],ah
   140046466:	add    BYTE PTR [rax],al
   140046468:	and    BYTE PTR [rdx+0x14003],0x0
   14004646f:	add    BYTE PTR [rax+0x1400396],ah
	...
   1400464a5:	add    BYTE PTR [rax],al
   1400464a7:	add    BYTE PTR [rax+0x63],dl
   1400464aa:	add    al,0x40
   1400464ac:	add    DWORD PTR [rax],eax
   1400464ae:	add    BYTE PTR [rax],al
   1400464b0:	shl    BYTE PTR [rsp+rax*1+0x40],0x1
   1400464b5:	add    BYTE PTR [rax],al
   1400464b7:	add    BYTE PTR [rbx+0x0],al
	...
   14004651a:	adc    BYTE PTR [rax],dl
   14004651c:	adc    BYTE PTR [rax],dl
   14004651e:	adc    BYTE PTR [rax],dl
   140046520:	adc    BYTE PTR [rax],dl
   140046522:	adc    BYTE PTR [rax],dl
   140046524:	adc    BYTE PTR [rax],dl
   140046526:	adc    BYTE PTR [rax],dl
   140046528:	adc    BYTE PTR [rax],dl
   14004652a:	adc    BYTE PTR [rax],dl
   14004652c:	adc    BYTE PTR [rax],dl
   14004652e:	adc    BYTE PTR [rax],dl
   140046530:	adc    BYTE PTR [rax],dl
   140046532:	adc    BYTE PTR [rax],dl
   140046534:	add    BYTE PTR [rax],al
   140046536:	add    BYTE PTR [rax],al
   140046538:	add    BYTE PTR [rax],al
   14004653a:	and    BYTE PTR [rax],ah
   14004653c:	and    BYTE PTR [rax],ah
   14004653e:	and    BYTE PTR [rax],ah
   140046540:	and    BYTE PTR [rax],ah
   140046542:	and    BYTE PTR [rax],ah
   140046544:	and    BYTE PTR [rax],ah
   140046546:	and    BYTE PTR [rax],ah
   140046548:	and    BYTE PTR [rax],ah
   14004654a:	and    BYTE PTR [rax],ah
   14004654c:	and    BYTE PTR [rax],ah
   14004654e:	and    BYTE PTR [rax],ah
   140046550:	and    BYTE PTR [rax],ah
   140046552:	and    BYTE PTR [rax],ah
	...
   140046618:	add    BYTE PTR [rax],al
   14004661a:	(bad)  
   14004661b:	(bad)
   140046620:	addr32 push 0x6c6b6a69
   140046626:	ins    DWORD PTR es:[rdi],dx
   140046627:	outs   dx,BYTE PTR ds:[rsi]
   140046628:	outs   dx,DWORD PTR ds:[rsi]
   140046629:	jo     0x14004669c
   14004662b:	jb     0x1400466a0
   14004662d:	je     0x1400466a4
   14004662f:	jbe    0x1400466a8
   140046631:	js     0x1400466ac
   140046633:	jp     0x140046635
   140046635:	add    BYTE PTR [rax],al
   140046637:	add    BYTE PTR [rax],al
   140046639:	add    BYTE PTR [rcx+0x42],al
   14004663c:	rex.XB
   14004663d:	rex.R
   14004663e:	rex.RB
   14004663f:	rex.RX
   140046640:	rex.RXB
   140046641:	rex.W
   140046642:	rex.WB
   140046643:	rex.WX
   140046644:	rex.WXB
   140046645:	rex.WR
   140046646:	rex.WRB
   140046647:	rex.WRX
   140046648:	rex.WRXB push r8
   14004664a:	push   rcx
   14004664b:	push   rdx
   14004664c:	push   rbx
   14004664d:	push   rsp
   14004664e:	push   rbp
   14004664f:	push   rsi
   140046650:	push   rdi
   140046651:	pop    rax
   140046652:	pop    rcx
   140046653:	pop    rdx
	...
   1400466e8:	shl    BYTE PTR [rsp+rax*1+0x40],0x1
   1400466ed:	add    BYTE PTR [rax],al
   1400466ef:	add    BYTE PTR [rcx],al
   1400466f1:	add    al,BYTE PTR [rax+rcx*1]
	...
   140046700:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140046701:	add    eax,DWORD PTR [rax]
   140046703:	add    BYTE PTR [rax-0x7e],ah
   140046706:	jns    0x14004668a
   140046708:	and    DWORD PTR [rax],eax
   14004670a:	add    BYTE PTR [rax],al
   14004670c:	add    BYTE PTR [rax],al
   14004670e:	add    BYTE PTR [rax],al
   140046710:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046711:	fild   WORD PTR [rax]
   140046713:	add    BYTE PTR [rax],al
   140046715:	add    BYTE PTR [rax],al
   140046717:	add    BYTE PTR [rcx+0xa5],ah
   14004671d:	add    BYTE PTR [rax],al
   14004671f:	add    BYTE PTR [rcx+0xfce09f],al
   140046725:	add    BYTE PTR [rax],al
   140046727:	add    BYTE PTR [rax+0x7e],al
   14004672a:	cmp    ah,0x0
   14004672d:	add    BYTE PTR [rax],al
   14004672f:	add    BYTE PTR [rax-0x3efffffd],ch
   140046735:	movabs ds:0x20a3da,eax
	...
   14004674e:	add    BYTE PTR [rax],al
   140046750:	cmp    esi,0x0
   140046756:	add    BYTE PTR [rax],al
   140046758:	rex inc BYTE PTR [rax]
   14004675b:	add    BYTE PTR [rax],al
   14004675d:	add    BYTE PTR [rax],al
   14004675f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140046765:	movabs ds:0x20a3da,eax
	...
   14004677e:	add    BYTE PTR [rax],al
   140046780:	cmp    esi,0x0
   140046786:	add    BYTE PTR [rax],al
   140046788:	inc    BYTE PTR [r8]
   14004678b:	add    BYTE PTR [rax],al
   14004678d:	add    BYTE PTR [rax],al
   14004678f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140046795:	movabs ds:0xa2e8a2e5001aa2e4,al
   14004679e:	pop    rbx
	...
   1400467af:	add    BYTE PTR [rcx+0xfe],al
   1400467b5:	add    BYTE PTR [rax],al
   1400467b7:	add    BYTE PTR [rax+0x7e],al
   1400467ba:	movabs eax,ds:0x55100000000fe
   1400467c3:	add    BYTE PTR [rcx-0x26],dl
   1400467c6:	pop    rsi
   1400467c7:	fisub  DWORD PTR [rax]
   1400467c9:	add    BYTE PTR [rdi-0x26],bl
   1400467cc:	push   0xffffffffffffffda
   1400467ce:	xor    al,BYTE PTR [rax]
	...
   1400467e0:	adc    ebx,0xf9e0ded8
   1400467e6:	add    BYTE PTR [rax],al
   1400467e8:	xor    DWORD PTR [rsi-0x7f],edi
   1400467eb:	inc    BYTE PTR [rax]
	...
   140046831:	add    BYTE PTR [rax],dl
   140046833:	adc    BYTE PTR [rax],dl
   140046835:	adc    BYTE PTR [rax],dl
   140046837:	adc    BYTE PTR [rax],dl
   140046839:	adc    BYTE PTR [rax],dl
   14004683b:	adc    BYTE PTR [rax],dl
   14004683d:	adc    BYTE PTR [rax],dl
   14004683f:	adc    BYTE PTR [rax],dl
   140046841:	adc    BYTE PTR [rax],dl
   140046843:	adc    BYTE PTR [rax],dl
   140046845:	adc    BYTE PTR [rax],dl
   140046847:	adc    BYTE PTR [rax],dl
   140046849:	adc    BYTE PTR [rax],dl
   14004684b:	adc    BYTE PTR [rax],al
   14004684d:	add    BYTE PTR [rax],al
   14004684f:	add    BYTE PTR [rax],al
   140046851:	add    BYTE PTR [rax],ah
   140046853:	and    BYTE PTR [rax],ah
   140046855:	and    BYTE PTR [rax],ah
   140046857:	and    BYTE PTR [rax],ah
   140046859:	and    BYTE PTR [rax],ah
   14004685b:	and    BYTE PTR [rax],ah
   14004685d:	and    BYTE PTR [rax],ah
   14004685f:	and    BYTE PTR [rax],ah
   140046861:	and    BYTE PTR [rax],ah
   140046863:	and    BYTE PTR [rax],ah
   140046865:	and    BYTE PTR [rax],ah
   140046867:	and    BYTE PTR [rax],ah
   140046869:	and    BYTE PTR [rax],ah
   14004686b:	and    BYTE PTR [rax],al
	...
   140046941:	(bad)  
   140046942:	(bad)
   140046947:	addr32 push 0x6c6b6a69
   14004694d:	ins    DWORD PTR es:[rdi],dx
   14004694e:	outs   dx,BYTE PTR ds:[rsi]
   14004694f:	outs   dx,DWORD PTR ds:[rsi]
   140046950:	jo     0x1400469c3
   140046952:	jb     0x1400469c7
   140046954:	je     0x1400469cb
   140046956:	jbe    0x1400469cf
   140046958:	js     0x1400469d3
   14004695a:	jp     0x14004695c
   14004695c:	add    BYTE PTR [rax],al
   14004695e:	add    BYTE PTR [rax],al
   140046960:	add    BYTE PTR [rcx+0x42],al
   140046963:	rex.XB
   140046964:	rex.R
   140046965:	rex.RB
   140046966:	rex.RX
   140046967:	rex.RXB
   140046968:	rex.W
   140046969:	rex.WB
   14004696a:	rex.WX
   14004696b:	rex.WXB
   14004696c:	rex.WR
   14004696d:	rex.WRB
   14004696e:	rex.WRX
   14004696f:	rex.WRXB push r8
   140046971:	push   rcx
   140046972:	push   rdx
   140046973:	push   rbx
   140046974:	push   rsp
   140046975:	push   rbp
   140046976:	push   rsi
   140046977:	push   rdi
   140046978:	pop    rax
   140046979:	pop    rcx
   14004697a:	pop    rdx
	...
   1400469ff:	add    BYTE PTR [rax+0x140046a],bl
   140046a05:	add    BYTE PTR [rax],al
   140046a07:	add    BYTE PTR [rdi+rcx*4],dh
   140046a0a:	add    al,0x40
   140046a0c:	add    DWORD PTR [rax],eax
   140046a0e:	add    BYTE PTR [rax],al
   140046a10:	xor    al,0x8f
   140046a12:	add    al,0x40
   140046a14:	add    DWORD PTR [rax],eax
   140046a16:	add    BYTE PTR [rax],al
   140046a18:	xor    al,0x8f
   140046a1a:	add    al,0x40
   140046a1c:	add    DWORD PTR [rax],eax
   140046a1e:	add    BYTE PTR [rax],al
   140046a20:	xor    al,0x8f
   140046a22:	add    al,0x40
   140046a24:	add    DWORD PTR [rax],eax
   140046a26:	add    BYTE PTR [rax],al
   140046a28:	xor    al,0x8f
   140046a2a:	add    al,0x40
   140046a2c:	add    DWORD PTR [rax],eax
   140046a2e:	add    BYTE PTR [rax],al
   140046a30:	xor    al,0x8f
   140046a32:	add    al,0x40
   140046a34:	add    DWORD PTR [rax],eax
   140046a36:	add    BYTE PTR [rax],al
   140046a38:	xor    al,0x8f
   140046a3a:	add    al,0x40
   140046a3c:	add    DWORD PTR [rax],eax
   140046a3e:	add    BYTE PTR [rax],al
   140046a40:	xor    al,0x8f
   140046a42:	add    al,0x40
   140046a44:	add    DWORD PTR [rax],eax
   140046a46:	add    BYTE PTR [rax],al
   140046a48:	xor    al,0x8f
   140046a4a:	add    al,0x40
   140046a4c:	add    DWORD PTR [rax],eax
   140046a4e:	add    BYTE PTR [rax],al
   140046a50:	jg     0x140046ad1
   140046a52:	jg     0x140046ad3
   140046a54:	jg     0x140046ad5
   140046a56:	jg     0x140046ad7
   140046a58:	pushf  
   140046a59:	push   0x4
   140046a5b:	rex add DWORD PTR [rax],eax
   140046a5e:	add    BYTE PTR [rax],al
   140046a60:	cmp    BYTE PTR [rdi+0x14004],cl
   140046a66:	add    BYTE PTR [rax],al
   140046a68:	cmp    BYTE PTR [rdi+0x14004],cl
   140046a6e:	add    BYTE PTR [rax],al
   140046a70:	cmp    BYTE PTR [rdi+0x14004],cl
   140046a76:	add    BYTE PTR [rax],al
   140046a78:	cmp    BYTE PTR [rdi+0x14004],cl
   140046a7e:	add    BYTE PTR [rax],al
   140046a80:	cmp    BYTE PTR [rdi+0x14004],cl
   140046a86:	add    BYTE PTR [rax],al
   140046a88:	cmp    BYTE PTR [rdi+0x14004],cl
   140046a8e:	add    BYTE PTR [rax],al
   140046a90:	cmp    BYTE PTR [rdi+0x14004],cl
   140046a96:	add    BYTE PTR [rax],al
   140046a98:	add    BYTE PTR cs:[rax],al
   140046a9b:	add    BYTE PTR [rsi],ch
   140046a9d:	add    BYTE PTR [rax],al
   140046a9f:	add    dh,bh
   140046aa1:	(bad)  
   140046aa2:	(bad)  
   140046aa3:	inc    DWORD PTR [rax]
   140046aa5:	add    BYTE PTR [rax],al
   140046aa7:	add    dh,bh
   140046aa9:	(bad)  
   140046aaa:	(bad)  
   140046aab:	(bad)  
   140046aac:	(bad)  
   140046aad:	(bad)  
   140046aae:	(bad)  
   140046aaf:	inc    DWORD PTR [rcx]
	...
   140046abd:	add    BYTE PTR [rax],al
   140046abf:	add    al,al
   140046ac1:	add    DWORD PTR [rbx],0x40
   140046ac4:	add    DWORD PTR [rax],eax
	...
   140046ace:	add    BYTE PTR [rax],al
   140046ad0:	cs (bad) 
   140046ad2:	push   r14
   140046ad4:	rex.WB
   140046ad5:	rex.B jo 0x140046b48
   140046ad8:	ins    BYTE PTR es:[rdi],dx
   140046ad9:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140046ae0:	rex
   140046ae1:	add    BYTE PTR [rax],al
   140046ae4:	add    BYTE PTR [rax],al
   140046ae6:	add    BYTE PTR [rax],al
   140046ae8:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046af7:	add    BYTE PTR [rsi],ch
   140046af9:	(bad)  
   140046afa:	push   r14
   140046afc:	rex.WB
   140046afd:	rex.B jo 0x140046b70
   140046b00:	push   rbx
   140046b01:	jns    0x140046b76
   140046b03:	je     0x140046b6a
   140046b05:	ins    DWORD PTR es:[rdi],dx
   140046b06:	rex
   140046b07:	add    BYTE PTR [rax],al
   140046b0a:	add    BYTE PTR [rax],al
   140046b0c:	add    BYTE PTR [rax],al
   140046b0e:	add    BYTE PTR [rax],al
   140046b10:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046b1f:	add    BYTE PTR [rsi],ch
   140046b21:	(bad)  
   140046b22:	push   r14
   140046b24:	rex.XB push r12
   140046b26:	imul   esp,DWORD PTR [rbp+0x72],0x70704131
   140046b2d:	ins    BYTE PTR es:[rdi],dx
   140046b2e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140046b35:	rex
   140046b36:	add    al,al
   140046b39:	add    DWORD PTR [rbx],0x40
   140046b3c:	add    DWORD PTR [rax],eax
	...
   140046b46:	add    BYTE PTR [rax],al
   140046b48:	cs (bad) 
   140046b4a:	push   r14
   140046b4c:	(bad)  
   140046b4d:	and    al,0x43
   140046b4f:	push   rsp
   140046b50:	imul   esp,DWORD PTR [rbp+0x72],0x70704131
   140046b57:	push   rbx
   140046b58:	jns    0x140046bcd
   140046b5a:	je     0x140046bc1
   140046b5c:	ins    DWORD PTR es:[rdi],dx
   140046b5d:	rex push rsi
   140046b5f:	rex.WB
   140046b60:	rex.B jo 0x140046bd3
   140046b63:	ins    BYTE PTR es:[rdi],dx
   140046b64:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140046b6b:	rex
   140046b6c:	and    al,0x30
   140046b6f:	rex.B
   140046b70:	rex
   140046b71:	rex
   140046b72:	add    BYTE PTR [rax],al
   140046b75:	add    BYTE PTR [rax],al
   140046b77:	add    al,al
   140046b79:	add    DWORD PTR [rbx],0x40
   140046b7c:	add    DWORD PTR [rax],eax
	...
   140046b86:	add    BYTE PTR [rax],al
   140046b88:	cs (bad) 
   140046b8a:	push   r14
   140046b8c:	(bad)  
   140046b8d:	and    al,0x43
   140046b8f:	push   rsp
   140046b90:	imul   esp,DWORD PTR [rbp+0x72],0x70704130
   140046b97:	push   rbx
   140046b98:	jns    0x140046c0d
   140046b9a:	je     0x140046c01
   140046b9c:	ins    DWORD PTR es:[rdi],dx
   140046b9d:	rex push rsi
   140046b9f:	rex.WB
   140046ba0:	rex.B jo 0x140046c13
   140046ba3:	ins    BYTE PTR es:[rdi],dx
   140046ba4:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140046bab:	rex
   140046bac:	rex
   140046bad:	rex
   140046bae:	add    al,al
   140046bb1:	add    DWORD PTR [rbx],0x40
   140046bb4:	add    DWORD PTR [rax],eax
	...
   140046bbe:	add    BYTE PTR [rax],al
   140046bc0:	cs (bad) 
   140046bc2:	push   r14
   140046bc4:	(bad)  
   140046bc5:	and    al,0x43
   140046bc7:	rex.X (bad) 
   140046bc9:	jae    0x140046c30
   140046bcb:	rex.B jo 0x140046c3e
   140046bce:	push   rbx
   140046bcf:	jns    0x140046c44
   140046bd1:	je     0x140046c38
   140046bd3:	ins    DWORD PTR es:[rdi],dx
   140046bd4:	rex push rsi
   140046bd6:	rex.WB
   140046bd7:	rex.B jo 0x140046c4a
   140046bda:	ins    BYTE PTR es:[rdi],dx
   140046bdb:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140046be2:	rex
   140046be3:	rex
   140046be4:	rex
   140046be5:	add    BYTE PTR [rax],al
   140046be8:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046bf7:	add    BYTE PTR [rsi],ch
   140046bf9:	(bad)  
   140046bfa:	push   r14
   140046bfc:	rex.XB push r12
   140046bfe:	imul   esp,DWORD PTR [rbp+0x72],0x70704131
   140046c05:	push   rbx
   140046c06:	jns    0x140046c7b
   140046c08:	je     0x140046c6f
   140046c0a:	ins    DWORD PTR es:[rdi],dx
   140046c0b:	imul   r12d,DWORD PTR [rbx+0x74],0x4040
   140046c13:	add    BYTE PTR [rax],al
   140046c15:	add    BYTE PTR [rax],al
   140046c17:	add    al,al
   140046c19:	add    DWORD PTR [rbx],0x40
   140046c1c:	add    DWORD PTR [rax],eax
	...
   140046c26:	add    BYTE PTR [rax],al
   140046c28:	cs (bad) 
   140046c2a:	push   r14
   140046c2c:	rex.XB
   140046c2d:	rex.B jo 0x140046ca0
   140046c30:	push   rbx
   140046c31:	jns    0x140046ca6
   140046c33:	je     0x140046c9a
   140046c35:	ins    DWORD PTR es:[rdi],dx
   140046c36:	imul   r12d,DWORD PTR [rbx+0x74],0x4040
   140046c3e:	add    BYTE PTR [rax],al
   140046c40:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046c4f:	add    BYTE PTR [rsi],ch
   140046c51:	(bad)  
   140046c52:	push   r14
   140046c54:	(bad)  
   140046c55:	and    al,0x43
   140046c57:	rex.RX ins DWORD PTR es:[rdi],dx
   140046c59:	je     0x140046cae
   140046c5b:	je     0x140046ccf
   140046c5d:	rex.WRX
   140046c5e:	and    al,0x30
   140046c61:	rex.X
   140046c62:	rex.B
   140046c63:	rex.B
   140046c64:	and    al,0x30
   140046c67:	rex.B
   140046c68:	rex
   140046c69:	rex
   140046c6a:	add    BYTE PTR [rax],al
   140046c6d:	add    BYTE PTR [rax],al
   140046c6f:	add    al,al
   140046c71:	add    DWORD PTR [rbx],0x40
   140046c74:	add    DWORD PTR [rax],eax
	...
   140046c7e:	add    BYTE PTR [rax],al
   140046c80:	cs (bad) 
   140046c82:	push   r14
   140046c84:	rex.XB push r12
   140046c86:	imul   esp,DWORD PTR [rbp+0x72],0x70704132
   140046c8d:	push   rbx
   140046c8e:	jns    0x140046d03
   140046c90:	je     0x140046cf7
   140046c92:	ins    DWORD PTR es:[rdi],dx
   140046c93:	imul   r12d,DWORD PTR [rbx+0x74],0x4040
   140046c9b:	add    BYTE PTR [rax],al
   140046c9d:	add    BYTE PTR [rax],al
   140046c9f:	add    al,al
   140046ca1:	add    DWORD PTR [rbx],0x40
   140046ca4:	add    DWORD PTR [rax],eax
	...
   140046cae:	add    BYTE PTR [rax],al
   140046cb0:	cs (bad) 
   140046cb2:	push   r14
   140046cb4:	rex.XB push r12
   140046cb6:	imul   esp,DWORD PTR [rbp+0x72],0x70704132
   140046cbd:	ins    BYTE PTR es:[rdi],dx
   140046cbe:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140046cc5:	rex
   140046cc6:	add    al,al
   140046cc9:	add    DWORD PTR [rbx],0x40
   140046ccc:	add    DWORD PTR [rax],eax
	...
   140046cd6:	add    BYTE PTR [rax],al
   140046cd8:	cs (bad) 
   140046cda:	push   r14
   140046cdc:	rex.WB
   140046cdd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140046cdf:	addr32 imul ebp,DWORD PTR [esi+0x67],0x7473694c
   140046ce8:	outs   dx,BYTE PTR gs:[rsi]
   140046cea:	gs jb  0x140046d2d
   140046ced:	add    BYTE PTR [rax],al
   140046cf0:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046cff:	add    BYTE PTR [rsi],ch
   140046d01:	(bad)  
   140046d02:	push   r14
   140046d04:	rex.XB push r11
   140046d06:	imul   ebp,DWORD PTR [rbp+0x70],0x6f4c656c
   140046d0d:	addr32 imul ebp,DWORD PTR [esi+0x67],0x7473694c
   140046d16:	outs   dx,BYTE PTR gs:[rsi]
   140046d18:	gs jb  0x140046d5b
   140046d1b:	add    BYTE PTR [rax],al
   140046d1e:	add    BYTE PTR [rax],al
   140046d20:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046d2f:	add    BYTE PTR [rsi],ch
   140046d31:	(bad)  
   140046d32:	push   r14
   140046d34:	rex.XB
   140046d35:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046d37:	ins    BYTE PTR es:[rdi],dx
   140046d38:	outs   dx,DWORD PTR ds:[rsi]
   140046d39:	jb     0x140046da4
   140046d3b:	jp     0x140046da2
   140046d3d:	rex.WR outs dx,DWORD PTR fs:[rsi]
   140046d40:	addr32 imul ebp,DWORD PTR [esi+0x67],0x7473694c
   140046d49:	outs   dx,BYTE PTR gs:[rsi]
   140046d4b:	gs jb  0x140046d8e
   140046d4e:	add    al,al
   140046d51:	add    DWORD PTR [rbx],0x40
   140046d54:	add    DWORD PTR [rax],eax
	...
   140046d5e:	add    BYTE PTR [rax],al
   140046d60:	cs (bad) 
   140046d62:	push   r14
   140046d64:	rex.XB push r11
   140046d66:	imul   ebp,DWORD PTR [rbp+0x70],0x6957656c
   140046d6d:	outs   dx,BYTE PTR ds:[rsi]
   140046d6e:	outs   dx,DWORD PTR fs:[rsi]
   140046d70:	ja     0x140046de5
   140046d72:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140046d74:	addr32 imul ebp,DWORD PTR [esi+0x67],0x7473694c
   140046d7d:	outs   dx,BYTE PTR gs:[rsi]
   140046d7f:	gs jb  0x140046dc2
   140046d82:	add    BYTE PTR [rax],al
   140046d85:	add    BYTE PTR [rax],al
   140046d87:	add    al,al
   140046d89:	add    DWORD PTR [rbx],0x40
   140046d8c:	add    DWORD PTR [rax],eax
	...
   140046d96:	add    BYTE PTR [rax],al
   140046d98:	cs (bad) 
   140046d9a:	push   r14
   140046d9c:	rex.XB push r8
   140046d9e:	outs   dx,DWORD PTR ds:[rsi]
   140046d9f:	jae    0x140046e15
   140046da1:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046da3:	outs   dx,BYTE PTR ds:[rsi]
   140046da4:	outs   dx,BYTE PTR ds:[rsi]
   140046da5:	movsxd esi,DWORD PTR gs:[rbx+rax*2+0x61]
   140046daa:	ins    BYTE PTR es:[rdi],dx
   140046dab:	ins    BYTE PTR es:[rdi],dx
   140046dac:	(bad)  
   140046dae:	movsxd ebp,DWORD PTR [rbx+0x40]
   140046db1:	add    BYTE PTR [rax],al
   140046db4:	add    BYTE PTR [rax],al
   140046db6:	add    BYTE PTR [rax],al
   140046db8:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046dc7:	add    BYTE PTR [rsi],ch
   140046dc9:	(bad)  
   140046dca:	push   r14
   140046dcc:	rex.WB
   140046dcd:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046dcf:	outs   dx,BYTE PTR ds:[rsi]
   140046dd0:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046dd2:	ins    DWORD PTR es:[rdi],dx
   140046dd3:	ins    DWORD PTR es:[rdi],dx
   140046dd4:	(bad)  
   140046dd5:	outs   dx,BYTE PTR ds:[rsi]
   140046dd6:	fs rex.X (bad) 
   140046dd9:	jae    0x140046e40
   140046ddb:	movsxd esp,DWORD PTR [r11+0x65]
   140046ddf:	jae    0x140046e54
   140046de1:	outs   dx,DWORD PTR ds:[rsi]
   140046de2:	jb     0x140046e24
   140046de4:	add    BYTE PTR [rax],al
   140046de7:	add    al,al
   140046de9:	add    DWORD PTR [rbx],0x40
   140046dec:	add    DWORD PTR [rax],eax
	...
   140046df6:	add    BYTE PTR [rax],al
   140046df8:	cs (bad) 
   140046dfa:	push   r14
   140046dfc:	rex.XB
   140046dfd:	rex.R
   140046dfe:	gs data16 (bad) 
   140046e01:	jne    0x140046e6f
   140046e03:	je     0x140046e46
   140046e05:	movsxd esp,DWORD PTR [rbx+0x65]
   140046e08:	jae    0x140046e7d
   140046e0a:	outs   dx,DWORD PTR ds:[rsi]
   140046e0b:	jb     0x140046e4d
   140046e0d:	add    BYTE PTR [rax],al
   140046e10:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046e1f:	add    BYTE PTR [rsi],ch
   140046e21:	(bad)  
   140046e22:	push   r14
   140046e24:	rex.WB
   140046e25:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046e27:	outs   dx,BYTE PTR ds:[rsi]
   140046e28:	push   rsi
   140046e29:	(bad)  
   140046e2a:	jb     0x140046e6c
   140046e2c:	add    BYTE PTR [rax],al
   140046e2f:	add    al,al
   140046e31:	add    DWORD PTR [rbx],0x40
   140046e34:	add    DWORD PTR [rax],eax
	...
   140046e3e:	add    BYTE PTR [rax],al
   140046e40:	cs (bad) 
   140046e42:	push   r14
   140046e44:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046e46:	outs   dx,BYTE PTR ds:[rsi]
   140046e47:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046e49:	ins    DWORD PTR es:[rdi],dx
   140046e4a:	ins    DWORD PTR es:[rdi],dx
   140046e4b:	(bad)  
   140046e4c:	outs   dx,BYTE PTR ds:[rsi]
   140046e4d:	fs rex.X (bad) 
   140046e50:	jae    0x140046eb7
   140046e52:	rex
   140046e53:	add    BYTE PTR [rax],al
   140046e56:	add    BYTE PTR [rax],al
   140046e58:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046e67:	add    BYTE PTR [rsi],ch
   140046e69:	(bad)  
   140046e6a:	push   r14
   140046e6c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140046e6e:	outs   dx,BYTE PTR ds:[rsi]
   140046e6f:	push   rsi
   140046e70:	(bad)  
   140046e71:	jb     0x140046eb3
   140046e73:	add    BYTE PTR [rax],al
   140046e76:	add    BYTE PTR [rax],al
   140046e78:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046e87:	add    BYTE PTR [rsi],ch
   140046e89:	(bad)  
   140046e8a:	push   r14
   140046e8c:	rex.XB
   140046e8d:	rex.RB ins DWORD PTR es:[rdi],dx
   140046e8f:	jo     0x140046f05
   140046e91:	jns    0x140046ed6
   140046e93:	outs   dx,DWORD PTR ds:[rsi]
   140046e94:	outs   dx,BYTE PTR ds:[rsi]
   140046e95:	push   rsi
   140046e96:	(bad)  
   140046e97:	jb     0x140046ed9
   140046e99:	add    BYTE PTR [rax],al
   140046e9c:	add    BYTE PTR [rax],al
   140046e9e:	add    BYTE PTR [rax],al
   140046ea0:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046eaf:	add    BYTE PTR [rsi],ch
   140046eb1:	(bad)  
   140046eb2:	push   r14
   140046eb4:	rex.WB
   140046eb5:	rex.WXB
   140046eb6:	gs jns 0x140046f0f
   140046eb9:	(bad)  
   140046eba:	ins    BYTE PTR es:[rdi],dx
   140046ebb:	jne    0x140046f22
   140046ebd:	jae    0x140046f04
   140046ebf:	jb     0x140046f33
   140046ec1:	outs   dx,DWORD PTR ds:[rsi]
   140046ec2:	jb     0x140046f17
   140046ec4:	jo     0x140046f2b
   140046ec6:	ja     0x140046f08
   140046ec8:	add    BYTE PTR [rax],al
   140046ecb:	add    BYTE PTR [rax],al
   140046ecd:	add    BYTE PTR [rax],al
   140046ecf:	add    al,al
   140046ed1:	add    DWORD PTR [rbx],0x40
   140046ed4:	add    DWORD PTR [rax],eax
	...
   140046ede:	add    BYTE PTR [rax],al
   140046ee0:	cs (bad) 
   140046ee2:	push   r14
   140046ee4:	rex.XB
   140046ee5:	rex.R
   140046ee6:	gs data16 (bad) 
   140046ee9:	jne    0x140046f57
   140046eeb:	je     0x140046f38
   140046eed:	gs jns 0x140046f46
   140046ef0:	(bad)  
   140046ef1:	ins    BYTE PTR es:[rdi],dx
   140046ef2:	jne    0x140046f59
   140046ef4:	jae    0x140046f3b
   140046ef6:	jb     0x140046f6a
   140046ef8:	outs   dx,DWORD PTR ds:[rsi]
   140046ef9:	jb     0x140046f4e
   140046efb:	jo     0x140046f62
   140046efd:	ja     0x140046f3f
   140046eff:	add    BYTE PTR [rax],al
   140046f02:	add    BYTE PTR [rax],al
   140046f04:	add    BYTE PTR [rax],al
   140046f06:	add    BYTE PTR [rax],al
   140046f08:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046f17:	add    BYTE PTR [rsi],ch
   140046f19:	(bad)  
   140046f1a:	push   r14
   140046f1c:	rex.XB push r13
   140046f1e:	je     0x140046f8c
   140046f20:	rex.XB push 0x6f437261
   140046f26:	outs   dx,BYTE PTR ds:[rsi]
   140046f27:	jbe    0x140046f8e
   140046f29:	jb     0x140046f9e
   140046f2b:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   140046f32:	add    BYTE PTR [rax],al
   140046f34:	add    BYTE PTR [rax],al
   140046f36:	add    BYTE PTR [rax],al
   140046f38:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046f47:	add    BYTE PTR [rsi],ch
   140046f49:	(bad)  
   140046f4a:	push   r14
   140046f4c:	rex.XB push r13
   140046f4e:	je     0x140046fbc
   140046f50:	rex.XB push r11
   140046f52:	je     0x140046fc6
   140046f54:	imul   ebp,DWORD PTR [rsi+0x67],0x766e6f43
   140046f5b:	gs jb  0x140046fd1
   140046f5e:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   140046f65:	add    BYTE PTR [rax],al
   140046f67:	add    al,al
   140046f69:	add    DWORD PTR [rbx],0x40
   140046f6c:	add    DWORD PTR [rax],eax
	...
   140046f76:	add    BYTE PTR [rax],al
   140046f78:	cs (bad) 
   140046f7a:	push   r14
   140046f7c:	rex.XB push r11
   140046f7e:	movsxd ebp,DWORD PTR [rax+0x65]
   140046f81:	ins    DWORD PTR es:[rdi],dx
   140046f82:	(bad)  
   140046f83:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140046f85:	jae    0x140046ffb
   140046f87:	(bad)  
   140046f88:	ins    BYTE PTR es:[rdi],dx
   140046f89:	ins    BYTE PTR es:[rdi],dx
   140046f8a:	rex.XB (bad) 
   140046f8c:	ins    BYTE PTR es:[rdi],dx
   140046f8d:	ins    BYTE PTR es:[rdi],dx
   140046f8e:	(bad)  
   140046f90:	movsxd ebp,DWORD PTR [rbx+0x40]
   140046f93:	add    BYTE PTR [rax],al
   140046f96:	add    BYTE PTR [rax],al
   140046f98:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046fa7:	add    BYTE PTR [rsi],ch
   140046fa9:	(bad)  
   140046faa:	push   r14
   140046fac:	rex.WB
   140046fad:	imul   r13d,DWORD PTR [rbp+r12*2+0x4c],0x6967676f
   140046fb6:	outs   dx,BYTE PTR ds:[rsi]
   140046fb7:	imul   r14,QWORD PTR [ebx+0x74],0x72656e65
   140046fc0:	rex
   140046fc1:	add    BYTE PTR [rax],al
   140046fc4:	add    BYTE PTR [rax],al
   140046fc6:	add    BYTE PTR [rax],al
   140046fc8:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140046fd7:	add    BYTE PTR [rsi],ch
   140046fd9:	(bad)  
   140046fda:	push   r14
   140046fdc:	rex.XB
   140046fdd:	imul   r13d,DWORD PTR [rbp+r12*2+0x4c],0x6967676f
   140046fe6:	outs   dx,BYTE PTR ds:[rsi]
   140046fe7:	imul   r14,QWORD PTR [ebx+0x74],0x72656e65
   140046ff0:	rex
   140046ff1:	add    BYTE PTR [rax],al
   140046ff4:	add    BYTE PTR [rax],al
   140046ff6:	add    BYTE PTR [rax],al
   140046ff8:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140047007:	add    BYTE PTR [rsi],ch
   140047009:	(bad)  
   14004700a:	push   r14
   14004700c:	rex.XB push r8
   14004700e:	xor    al,0x46
   140047010:	imul   ebp,DWORD PTR [rbp+riz*2+0x40],0x40
   140047018:	rol    BYTE PTR [rbx+0x14003],0x0
	...
   140047027:	add    BYTE PTR [rsi],ch
   140047029:	(bad)  
   14004702a:	push   r14
   14004702c:	je     0x1400470a7
   14004702e:	jo     0x140047095
   140047030:	pop    rdi
   140047031:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
	...

Disassembly of section .pdata:

000000014004a000 <.pdata>:
   14004a000:	add    BYTE PTR [rax],dl
   14004a002:	add    BYTE PTR [rax],al
   14004a004:	xor    DWORD PTR [rax],edx
   14004a006:	add    BYTE PTR [rax],al
   14004a008:	cmp    al,0x23
   14004a00a:	add    al,0x0
   14004a00c:	adc    BYTE PTR [rax],al
   14004a00f:	add    BYTE PTR [rcx+0x10],bh
   14004a012:	add    BYTE PTR [rax],al
   14004a014:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004a018:	adc    BYTE PTR [rax],0x0
   14004a01b:	add    BYTE PTR [rcx+0x3c000010],dh
   14004a021:	and    eax,DWORD PTR [rax+rax*1]
   14004a024:	rcl    BYTE PTR [rax],0x0
   14004a027:	add    cl,dh
   14004a029:	adc    BYTE PTR [rax],al
   14004a02b:	add    BYTE PTR [rbx+riz*1],bh
   14004a02e:	add    al,0x0
   14004a030:	add    BYTE PTR [rcx],dl
   14004a032:	add    BYTE PTR [rax],al
   14004a034:	xor    DWORD PTR [rcx],edx
   14004a036:	add    BYTE PTR [rax],al
   14004a038:	cmp    al,0x23
   14004a03a:	add    al,0x0
   14004a03c:	xor    BYTE PTR [rax+rax*1],dl
   14004a03f:	add    BYTE PTR [rsi+0x14],cl
   14004a042:	add    BYTE PTR [rax],al
   14004a044:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004a048:	(bad)  
   14004a049:	adc    al,0x0
   14004a04b:	add    BYTE PTR [rax+0x4c000014],al
   14004a051:	sub    BYTE PTR [rax+rax*1],al
   14004a054:	adc    BYTE PTR [rax+rax*1],0x0
   14004a058:	movabs al,ds:0xa00004284c000014
   14004a061:	adc    al,0x0
   14004a063:	add    al,al
   14004a065:	adc    al,0x0
   14004a067:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004a06b:	add    al,al
   14004a06d:	adc    al,0x0
   14004a06f:	add    bh,dh
   14004a071:	adc    al,0x0
   14004a073:	add    BYTE PTR [rbx+riz*1],bh
   14004a076:	add    al,0x0
   14004a078:	add    BYTE PTR [rip+0x15370000],dl        # 0x1553ba07e
   14004a07e:	add    BYTE PTR [rax],al
   14004a080:	cmp    al,0x23
   14004a082:	add    al,0x0
   14004a084:	rex adc eax,0x15680000
   14004a08a:	add    BYTE PTR [rax],al
   14004a08c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004a090:	jo     0x14004a0a7
   14004a092:	add    BYTE PTR [rax],al
   14004a094:	fwait
   14004a095:	adc    eax,0x38180000
   14004a09a:	add    al,0x0
   14004a09c:	movabs al,ds:0x18000015cb000015
   14004a0a5:	cmp    BYTE PTR [rax+rax*1],al
   14004a0a8:	rcl    BYTE PTR [rip+0x15fb0000],1        # 0x155ffa0ae
   14004a0ae:	add    BYTE PTR [rax],al
   14004a0b0:	sbb    BYTE PTR [rax],bh
   14004a0b2:	add    al,0x0
   14004a0b4:	add    BYTE PTR [rsi],dl
   14004a0b6:	add    BYTE PTR [rax],al
   14004a0b8:	cdq    
   14004a0b9:	(bad)  
   14004a0ba:	add    BYTE PTR [rax],al
   14004a0bc:	in     al,0x9
   14004a0be:	add    al,0x0
   14004a0c0:	movabs al,ds:0xac00001949000016
   14004a0c9:	add    eax,0x19500004
   14004a0ce:	add    BYTE PTR [rax],al
   14004a0d0:	jb     0x14004a0eb
   14004a0d2:	add    BYTE PTR [rax],al
   14004a0d4:	sub    BYTE PTR [rip+0x19720004],dl        # 0x15976a0de
   14004a0da:	add    BYTE PTR [rax],al
   14004a0dc:	test   BYTE PTR [rcx],bl
   14004a0de:	add    BYTE PTR [rax],al
   14004a0e0:	(bad)  
   14004a0e1:	add    eax,0x19840004
   14004a0e6:	add    BYTE PTR [rax],al
   14004a0e8:	fistp  DWORD PTR [rcx]
   14004a0ea:	add    BYTE PTR [rax],al
   14004a0ec:	fadd   DWORD PTR [rip+0x19db0004]        # 0x159dfa0f6
   14004a0f2:	add    BYTE PTR [rax],al
   14004a0f4:	loopne 0x14004a10f
   14004a0f6:	add    BYTE PTR [rax],al
   14004a0f8:	in     al,dx
   14004a0f9:	add    eax,0x19e00004
   14004a0fe:	add    BYTE PTR [rax],al
   14004a100:	pop    rbx
   14004a101:	sbb    eax,DWORD PTR [rax]
   14004a103:	add    ah,bh
   14004a105:	add    eax,0x1b600004
   14004a10a:	add    BYTE PTR [rax],al
   14004a10c:	mov    ebx,DWORD PTR [rbx]
   14004a10e:	add    BYTE PTR [rax],al
   14004a110:	cwde   
   14004a111:	or     BYTE PTR [rax+rax*1],al
   14004a114:	nop
   14004a115:	sbb    eax,DWORD PTR [rax]
   14004a117:	add    ah,al
   14004a119:	sbb    eax,DWORD PTR [rax]
   14004a11b:	add    BYTE PTR [rax-0x2ffffbfb],cl
   14004a121:	sbb    eax,DWORD PTR [rax]
   14004a123:	add    bl,bh
   14004a125:	sbb    eax,DWORD PTR [rax]
   14004a127:	add    BYTE PTR [rax+0x408],bl
   14004a12d:	sbb    al,0x0
   14004a12f:	add    BYTE PTR [rbx],ch
   14004a131:	sbb    al,0x0
   14004a133:	add    BYTE PTR [rax+0x60000408],bl
   14004a139:	sbb    al,0x0
   14004a13b:	add    BYTE PTR [rcx-0x67ffffe4],cl
   14004a141:	or     BYTE PTR [rax+rax*1],al
   14004a144:	mov    al,0x1c
   14004a146:	add    BYTE PTR [rax],al
   14004a148:	es sbb eax,0x11440000
   14004a14e:	add    al,0x0
   14004a150:	xor    BYTE PTR [rip+0x1d4f0000],bl        # 0x15d53a156
   14004a156:	add    BYTE PTR [rax],al
   14004a158:	add    BYTE PTR [rip+0x1d500004],al        # 0x15d54a162
   14004a15e:	add    BYTE PTR [rax],al
   14004a160:	mov    ebx,DWORD PTR [rip+0x5a40000]        # 0x145a8a166
   14004a166:	add    al,0x0
   14004a168:	nop
   14004a169:	sbb    eax,0x1dc90000
   14004a16e:	add    BYTE PTR [rax],al
   14004a170:	cwde   
   14004a171:	or     BYTE PTR [rax+rax*1],al
   14004a174:	loopne 0x14004a193
   14004a176:	add    BYTE PTR [rax],al
   14004a178:	or     BYTE PTR [rsi],bl
   14004a17a:	add    BYTE PTR [rax],al
   14004a17c:	cwde   
   14004a17d:	or     BYTE PTR [rax+rax*1],al
   14004a180:	and    BYTE PTR [rsi],bl
   14004a182:	add    BYTE PTR [rax],al
   14004a184:	mov    edi,0xcc00001e
   14004a189:	(bad)  
   14004a18a:	add    al,0x0
   14004a18c:	rcr    BYTE PTR [rsi],1
   14004a18e:	add    BYTE PTR [rax],al
   14004a190:	sbb    DWORD PTR [rdi],ebx
   14004a192:	add    BYTE PTR [rax],al
   14004a194:	xchg   esp,eax
   14004a195:	add    eax,0x1f300004
   14004a19a:	add    BYTE PTR [rax],al
   14004a19c:	mov    ds,WORD PTR [rdi]
   14004a19e:	add    BYTE PTR [rax],al
   14004a1a0:	adc    al,0x7
   14004a1a2:	add    al,0x0
   14004a1a4:	mov    ds,WORD PTR [rdi]
   14004a1a6:	add    BYTE PTR [rax],al
   14004a1a8:	sbb    BYTE PTR [rax],ah
   14004a1aa:	add    BYTE PTR [rax],al
   14004a1ac:	and    al,0x7
   14004a1ae:	add    al,0x0
   14004a1b0:	sbb    BYTE PTR [rax],ah
   14004a1b2:	add    BYTE PTR [rax],al
   14004a1b4:	and    BYTE PTR [rax],al
   14004a1b7:	add    BYTE PTR [rax],bh
   14004a1b9:	(bad)  
   14004a1ba:	add    al,0x0
   14004a1bc:	push   rax
   14004a1bd:	and    BYTE PTR [rax],al
   14004a1bf:	add    BYTE PTR [rsi+0x14000020],ch
   14004a1c5:	(bad)  
   14004a1c6:	add    al,0x0
   14004a1c8:	scas   al,BYTE PTR es:[rdi]
   14004a1c9:	and    BYTE PTR [rax],al
   14004a1cb:	add    BYTE PTR [rax],bh
   14004a1cd:	and    DWORD PTR [rax],eax
   14004a1cf:	add    al,dh
   14004a1d1:	(bad)  
   14004a1d2:	add    al,0x0
   14004a1d4:	cmp    BYTE PTR [rcx],ah
   14004a1d6:	add    BYTE PTR [rax],al
   14004a1d8:	(bad)  
   14004a1d9:	and    DWORD PTR [rax],eax
   14004a1db:	add    BYTE PTR [rdi+rax*1],al
   14004a1de:	add    al,0x0
   14004a1e0:	nop
   14004a1e1:	and    DWORD PTR [rax],eax
   14004a1e3:	add    cl,ch
   14004a1e5:	and    DWORD PTR [rax],eax
   14004a1e7:	add    BYTE PTR [rax+rcx*1+0x4],ah
   14004a1eb:	add    cl,ch
   14004a1ed:	and    DWORD PTR [rax],eax
   14004a1ef:	add    BYTE PTR [rdx+riz*1],bl
   14004a1f2:	add    BYTE PTR [rax],al
   14004a1f4:	je     0x14004a1fe
   14004a1f6:	add    al,0x0
   14004a1f8:	sbb    al,0x22
   14004a1fa:	add    BYTE PTR [rax],al
   14004a1fc:	and    al,BYTE PTR [r8]
   14004a1ff:	add    BYTE PTR [rax+0x60000408],cl
   14004a205:	and    al,BYTE PTR [rax]
   14004a207:	add    BYTE PTR [rbx],cl
   14004a209:	(bad)  
   14004a20a:	add    BYTE PTR [rax],al
   14004a20c:	(bad)  
   14004a20d:	or     DWORD PTR [rax+rax*1],eax
   14004a210:	adc    BYTE PTR [rdi],ah
   14004a212:	add    BYTE PTR [rax],al
   14004a214:	cs (bad) 
   14004a216:	add    BYTE PTR [rax],al
   14004a218:	rex.W (bad) 
   14004a21a:	add    al,0x0
   14004a21c:	cs (bad) 
   14004a21e:	add    BYTE PTR [rax],al
   14004a220:	xor    eax,0x58000027
   14004a225:	(bad)  
   14004a226:	add    al,0x0
   14004a228:	xor    eax,0xa8000027
   14004a22d:	(bad)  
   14004a22e:	add    BYTE PTR [rax],al
   14004a230:	ins    BYTE PTR es:[rdi],dx
   14004a231:	(bad)  
   14004a232:	add    al,0x0
   14004a234:	test   al,0x27
   14004a236:	add    BYTE PTR [rax],al
   14004a238:	ins    BYTE PTR es:[rdi],dx
   14004a239:	sub    eax,DWORD PTR [rax]
   14004a23b:	add    BYTE PTR [rax+0x6c000407],al
   14004a241:	sub    eax,DWORD PTR [rax]
   14004a243:	add    BYTE PTR [rbx-0x63ffffd5],al
   14004a249:	(bad)  
   14004a24a:	add    al,0x0
   14004a24c:	sub    DWORD PTR [rbx],0x0
   14004a24f:	add    BYTE PTR [rdi-0x53ffffd5],dh
   14004a255:	(bad)  
   14004a256:	add    al,0x0
   14004a258:	mov    bh,0x2b
   14004a25a:	add    BYTE PTR [rax],al
   14004a25c:	fsubr  DWORD PTR [rbx]
   14004a25e:	add    BYTE PTR [rax],al
   14004a260:	mov    esp,0x10000407
   14004a265:	sub    al,0x0
   14004a267:	add    BYTE PTR [rsp+rbp*1],ch
   14004a26a:	add    BYTE PTR [rax],al
   14004a26c:	cwde   
   14004a26d:	or     BYTE PTR [rax+rax*1],al
   14004a270:	xor    BYTE PTR [rax+rax*1],ch
   14004a273:	add    BYTE PTR [rdx-0x23ffffd4],dl
   14004a279:	(bad)  
   14004a27a:	add    al,0x0
   14004a27c:	xchg   edx,eax
   14004a27d:	sub    al,0x0
   14004a27f:	add    dl,cl
   14004a281:	sub    al,0x0
   14004a283:	add    al,ch
   14004a285:	(bad)  
   14004a286:	add    al,0x0
   14004a288:	retf   0x2c
   14004a28b:	add    BYTE PTR [rip+0xfffffffffc00002d],ch        # 0x13c04a2be
   14004a291:	(bad)  
   14004a292:	add    al,0x0
   14004a294:	mov    al,0x2d
   14004a296:	add    BYTE PTR [rax],al
   14004a298:	jae    0x14004a2c8
   14004a29a:	add    BYTE PTR [rax],al
   14004a29c:	push   rax
   14004a29d:	or     BYTE PTR [rax+rax*1],al
   14004a2a0:	sub    BYTE PTR [rsi],0x0
   14004a2a3:	add    BYTE PTR [rbx-0x67ffffd2],bl
   14004a2a9:	or     BYTE PTR [rax+rax*1],al
   14004a2ac:	shr    BYTE PTR [rsi],1
   14004a2ae:	add    BYTE PTR [rax],al
   14004a2b0:	(bad)  
   14004a2b1:	(bad)  
   14004a2b2:	add    BYTE PTR [rax],al
   14004a2b4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a2b5:	add    eax,0x2fa00004
   14004a2ba:	add    BYTE PTR [rax],al
   14004a2bc:	je     0x14004a2ee
   14004a2be:	add    BYTE PTR [rax],al
   14004a2c0:	fadd   DWORD PTR [rsi]
   14004a2c2:	add    al,0x0
   14004a2c4:	xor    BYTE PTR [rax],0x0
   14004a2c7:	add    BYTE PTR [rdi-0x67ffffd0],bl
   14004a2cd:	(bad)  
   14004a2ce:	add    al,0x0
   14004a2d0:	lahf   
   14004a2d1:	xor    BYTE PTR [rax],al
   14004a2d3:	add    BYTE PTR [rdx-0x5bffffcf],cl
   14004a2d9:	(bad)  
   14004a2da:	add    al,0x0
   14004a2dc:	mov    dh,BYTE PTR [rcx]
   14004a2de:	add    BYTE PTR [rax],al
   14004a2e0:	xchg   edx,eax
   14004a2e1:	xor    DWORD PTR [rax],eax
   14004a2e3:	add    al,cl
   14004a2e5:	(bad)  
   14004a2e6:	add    al,0x0
   14004a2e8:	loopne 0x14004a31b
   14004a2ea:	add    BYTE PTR [rax],al
   14004a2ec:	add    DWORD PTR [rdx],esi
   14004a2ee:	add    BYTE PTR [rax],al
   14004a2f0:	in     al,dx
   14004a2f1:	xor    al,BYTE PTR [rax+rax*1]
   14004a2f4:	add    DWORD PTR [rdx],esi
   14004a2f6:	add    BYTE PTR [rax],al
   14004a2f8:	jl     0x14004a32c
   14004a2fa:	add    BYTE PTR [rax],al
   14004a2fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a2fd:	or     DWORD PTR [rax+rax*1],eax
   14004a300:	jl     0x14004a334
   14004a302:	add    BYTE PTR [rax],al
   14004a304:	pushf  
   14004a305:	xor    al,BYTE PTR [rax]
   14004a307:	add    BYTE PTR [rcx+rcx*1+0x329c0004],bh
   14004a30e:	add    BYTE PTR [rax],al
   14004a310:	fdiv   DWORD PTR [rdx]
   14004a312:	add    BYTE PTR [rax],al
   14004a314:	mov    esp,0xd8000409
   14004a319:	xor    al,BYTE PTR [rax]
   14004a31b:	add    dh,bl
   14004a31d:	xor    al,BYTE PTR [rax]
   14004a31f:	add    ah,dl
   14004a321:	or     DWORD PTR [rax+rax*1],eax
   14004a324:	loopne 0x14004a358
   14004a326:	add    BYTE PTR [rax],al
   14004a328:	adc    BYTE PTR [rbx],dh
   14004a32a:	add    BYTE PTR [rax],al
   14004a32c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004a330:	adc    BYTE PTR [rbx],dh
   14004a332:	add    BYTE PTR [rax],al
   14004a334:	mov    dh,0x33
   14004a336:	add    BYTE PTR [rax],al
   14004a338:	or     BYTE PTR [rip+0x33b60004],al        # 0x173baa342
   14004a33e:	add    BYTE PTR [rax],al
   14004a340:	ss xor al,0x0
   14004a343:	add    BYTE PTR [rax*1+0x34360004],bl
   14004a34a:	add    BYTE PTR [rax],al
   14004a34c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a34d:	xor    al,0x0
   14004a34f:	add    BYTE PTR [rax+0x5],ah
   14004a352:	add    al,0x0
   14004a354:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a355:	xor    al,0x0
   14004a357:	add    BYTE PTR [rbx+0x35],bl
   14004a35a:	add    BYTE PTR [rax],al
   14004a35c:	xor    al,0x5
   14004a35e:	add    al,0x0
   14004a360:	pop    rbx
   14004a361:	xor    eax,0x36050000
   14004a366:	add    BYTE PTR [rax],al
   14004a368:	rex.WR add rax,0x36050004
   14004a36e:	add    BYTE PTR [rax],al
   14004a370:	jo     0x14004a3a8
   14004a372:	add    BYTE PTR [rax],al
   14004a374:	(bad)  
   14004a375:	add    eax,0x36700004
   14004a37a:	add    BYTE PTR [rax],al
   14004a37c:	stc    
   14004a37d:	add    BYTE PTR ss:[rax],al
   14004a380:	cwde   
   14004a381:	or     BYTE PTR [rax+rax*1],al
   14004a384:	add    BYTE PTR [rdi],dh
   14004a386:	add    BYTE PTR [rax],al
   14004a388:	ins    DWORD PTR es:[rdi],dx
   14004a389:	(bad)  
   14004a38a:	add    BYTE PTR [rax],al
   14004a38c:	or     al,0x9
   14004a38e:	add    al,0x0
   14004a390:	ins    DWORD PTR es:[rdi],dx
   14004a391:	(bad)  
   14004a392:	add    BYTE PTR [rax],al
   14004a394:	je     0x14004a3ce
   14004a396:	add    BYTE PTR [rax],al
   14004a398:	sbb    al,0x9
   14004a39a:	add    al,0x0
   14004a39c:	je     0x14004a3d6
   14004a39e:	add    BYTE PTR [rax],al
   14004a3a0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a3a1:	cmp    BYTE PTR [rax],al
   14004a3a3:	add    BYTE PTR [rax],dh
   14004a3a5:	or     DWORD PTR [rax+rax*1],eax
   14004a3a8:	sar    BYTE PTR [rax],0x0
   14004a3ab:	add    cl,ah
   14004a3ad:	cmp    BYTE PTR [rax],al
   14004a3af:	add    BYTE PTR [rbx+rcx*1+0x38e10004],ah
   14004a3b6:	add    BYTE PTR [rax],al
   14004a3b8:	cmp    DWORD PTR cs:[rax],eax
   14004a3bb:	add    BYTE PTR [rax+0x2e000409],al
   14004a3c1:	cmp    DWORD PTR [rax],eax
   14004a3c3:	add    BYTE PTR [rcx+0x39],al
   14004a3c6:	add    BYTE PTR [rax],al
   14004a3c8:	xchg   esp,eax
   14004a3c9:	or     DWORD PTR [rax+rax*1],eax
   14004a3cc:	(bad)  
   14004a3cd:	cmp    DWORD PTR [rax],eax
   14004a3cf:	add    BYTE PTR [rdx+0x4c000039],ch
   14004a3d5:	sub    BYTE PTR [rax+rax*1],al
   14004a3d8:	sar    BYTE PTR [rcx],0x0
   14004a3db:	add    BYTE PTR [rdx],dl
   14004a3dd:	cmp    al,BYTE PTR [rax]
   14004a3df:	add    BYTE PTR [rax+rcx*1],cl
   14004a3e2:	add    al,0x0
   14004a3e4:	adc    bh,BYTE PTR [rdx]
   14004a3e6:	add    BYTE PTR [rax],al
   14004a3e8:	(bad)  
   14004a3e9:	cmp    eax,DWORD PTR [rax]
   14004a3eb:	add    BYTE PTR [rax],bl
   14004a3ed:	or     BYTE PTR [rax+rax*1],al
   14004a3f0:	(bad)  
   14004a3f1:	cmp    eax,DWORD PTR [rax]
   14004a3f3:	add    BYTE PTR [rdx],dl
   14004a3f5:	cmp    eax,DWORD PTR [rax]
   14004a3f7:	add    BYTE PTR [rax+rcx*1],dh
   14004a3fa:	add    al,0x0
   14004a3fc:	jo     0x14004a439
   14004a3fe:	add    BYTE PTR [rax],al
   14004a400:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a401:	cmp    eax,DWORD PTR [rax]
   14004a403:	add    BYTE PTR [rax-0x4ffffbf8],bl
   14004a409:	cmp    eax,DWORD PTR [rax]
   14004a40b:	add    ah,ch
   14004a40d:	cmp    eax,DWORD PTR [rax]
   14004a40f:	add    al,dh
   14004a411:	or     DWORD PTR [rax+rax*1],eax
   14004a414:	in     al,dx
   14004a415:	cmp    eax,DWORD PTR [rax]
   14004a417:	add    BYTE PTR [rsp+rdi*1+0x0],dh
   14004a41b:	add    BYTE PTR [rdx+rcx*1],al
   14004a41e:	add    al,0x0
   14004a420:	je     0x14004a45e
   14004a422:	add    BYTE PTR [rax],al
   14004a424:	add    bh,BYTE PTR [rip+0xa1c0000]        # 0x14a20a42a
   14004a42a:	add    al,0x0
   14004a42c:	add    bh,BYTE PTR [rip+0x3d170000]        # 0x17d1ba432
   14004a432:	add    BYTE PTR [rax],al
   14004a434:	xor    BYTE PTR [rdx],cl
   14004a436:	add    al,0x0
   14004a438:	and    BYTE PTR [rip+0x3e120000],bh        # 0x17e16a43e
   14004a43e:	add    BYTE PTR [rax],al
   14004a440:	pushf  
   14004a441:	xor    BYTE PTR [rax+rax*1],al
   14004a444:	and    BYTE PTR [rsi],bh
   14004a446:	add    BYTE PTR [rax],al
   14004a448:	(bad)  
   14004a449:	add    BYTE PTR ds:[rax],al
   14004a44c:	or     al,0x6
   14004a44e:	add    al,0x0
   14004a450:	(bad)  
   14004a451:	add    BYTE PTR ds:[rax],al
   14004a454:	enter  0x3e,0x0
   14004a458:	sbb    BYTE PTR [rsi],al
   14004a45a:	add    al,0x0
   14004a45c:	enter  0x3e,0x0
   14004a460:	(bad)  
   14004a461:	add    BYTE PTR ds:[rax],al
   14004a464:	sub    al,0x6
   14004a466:	add    al,0x0
   14004a468:	lock add BYTE PTR ds:[rax],al
   14004a46c:	js     0x14004a4b3
   14004a46e:	add    BYTE PTR [rax],al
   14004a470:	rex.R (bad) 
   14004a472:	add    al,0x0
   14004a474:	nop
   14004a475:	add    BYTE PTR [r8],r8b
   14004a478:	icebp  
   14004a479:	add    BYTE PTR [r8],r8b
   14004a47c:	cwde   
   14004a47d:	or     BYTE PTR [rax+rax*1],al
   14004a480:	add    BYTE PTR [rsi+0x0],al
   14004a483:	add    bh,ch
   14004a485:	rex.RX add BYTE PTR [rax],r8b
   14004a488:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004a48c:	lock rex.RX add BYTE PTR [rax],r8b
   14004a490:	cli    
   14004a491:	rex.RX add BYTE PTR [rax],r8b
   14004a494:	or     al,BYTE PTR [rax+rax*1]
   14004a498:	cli    
   14004a499:	rex.RX add BYTE PTR [rax],r8b
   14004a49c:	add    DWORD PTR [rdi+0x0],eax
   14004a49f:	add    BYTE PTR [rdx+rcx*1+0x4],cl
   14004a4a3:	add    BYTE PTR [rcx],al
   14004a4a5:	rex.RXB add BYTE PTR [r8],r8b
   14004a4a8:	fisttp QWORD PTR [rcx+0x0]
   14004a4ab:	add    BYTE PTR [rax+0xa],ah
   14004a4ae:	add    al,0x0
   14004a4b0:	fisttp QWORD PTR [rcx+0x0]
   14004a4b3:	add    BYTE PTR [rdx],cl
   14004a4b5:	rex.WX add BYTE PTR [rax],al
   14004a4b8:	test   BYTE PTR [rdx],cl
   14004a4ba:	add    al,0x0
   14004a4bc:	or     cl,BYTE PTR [rdx+0x0]
   14004a4bf:	add    BYTE PTR [rcx],dh
   14004a4c1:	rex.WX add BYTE PTR [rax],al
   14004a4c4:	cwde   
   14004a4c5:	or     al,BYTE PTR [rax+rax*1]
   14004a4c8:	xor    DWORD PTR [rdx+0x0],ecx
   14004a4cb:	add    BYTE PTR [rsi+0x4a],dl
   14004a4ce:	add    BYTE PTR [rax],al
   14004a4d0:	test   al,0xa
   14004a4d2:	add    al,0x0
   14004a4d4:	(bad)  
   14004a4d5:	rex.WX add BYTE PTR [rax],al
   14004a4d8:	ror    BYTE PTR [rdx+0x0],cl
   14004a4db:	add    BYTE PTR [rax+0x405],cl
   14004a4e1:	rex.WXB add BYTE PTR [r8],al
   14004a4e4:	xor    ecx,DWORD PTR [rbx+0x0]
   14004a4e7:	add    BYTE PTR [rbp+rax*1+0x4b400004],ah
   14004a4ee:	add    BYTE PTR [rax],al
   14004a4f0:	(bad)  
   14004a4f1:	rex.WRB add BYTE PTR [r8],r8b
   14004a4f4:	rex or DWORD PTR [rax+rax*1],eax
   14004a4f8:	rex
   14004a4f9:	rex.WRB add BYTE PTR [r8],r8b
   14004a4fc:	or     BYTE PTR [rsi+0x0],cl
   14004a4ff:	add    BYTE PTR [rsi+rax*1],bh
   14004a502:	add    al,0x0
   14004a504:	and    BYTE PTR [rsi+0x0],cl
   14004a507:	add    BYTE PTR [rcx],bh
   14004a509:	rex.WRXB add BYTE PTR [r8],r8b
   14004a50c:	mov    al,0x4
   14004a50e:	add    al,0x0
   14004a510:	(bad)  
   14004a511:	rex.WRXB add BYTE PTR [r8],r8b
   14004a514:	jno    0x14004a569
   14004a516:	add    BYTE PTR [rax],al
   14004a518:	jo     0x14004a51f
   14004a51a:	add    al,0x0
   14004a51c:	nop
   14004a51d:	push   rbx
   14004a51e:	add    BYTE PTR [rax],al
   14004a520:	mov    ds,WORD PTR [rax+0x0]
   14004a523:	add    BYTE PTR [rax-0x71fffbf8],ah
   14004a529:	pop    rax
   14004a52a:	add    BYTE PTR [rax],al
   14004a52c:	sahf   
   14004a52d:	pop    rax
   14004a52e:	add    BYTE PTR [rax],al
   14004a530:	mov    al,0x8
   14004a532:	add    al,0x0
   14004a534:	sahf   
   14004a535:	pop    rax
   14004a536:	add    BYTE PTR [rax],al
   14004a538:	in     al,0x62
   14004a53a:	add    BYTE PTR [rax],al
   14004a53c:	enter  0x408,0x0
   14004a540:	in     al,0x62
   14004a542:	add    BYTE PTR [rax],al
   14004a544:	mov    cl,0x65
   14004a546:	add    BYTE PTR [rax],al
   14004a548:	in     al,0x8
   14004a54a:	add    al,0x0
   14004a54c:	mov    cl,0x65
   14004a54e:	add    BYTE PTR [rax],al
   14004a550:	xor    DWORD PTR [rsi+0x0],esp
   14004a553:	add    ah,bh
   14004a555:	or     BYTE PTR [rax+rax*1],al
   14004a558:	push   rax
   14004a559:	data16 add BYTE PTR [rax],al
   14004a55c:	add    BYTE PTR ds:[eax],al
   14004a560:	(bad)  
   14004a561:	(bad)  
   14004a562:	add    al,0x0
   14004a564:	add    BYTE PTR ds:[eax],al
   14004a568:	jge    0x14004a5d3
   14004a56a:	add    BYTE PTR [rax],al
   14004a56c:	jo     0x14004a574
   14004a56e:	add    al,0x0
   14004a570:	jge    0x14004a5db
   14004a572:	add    BYTE PTR [rax],al
   14004a574:	mov    BYTE PTR [rcx+0x0],ch
   14004a577:	add    BYTE PTR [rax-0x5ffffbfa],cl
   14004a57d:	imul   eax,DWORD PTR [rax],0x6aaa00
   14004a583:	add    al,cl
   14004a585:	add    al,0x4
   14004a587:	add    BYTE PTR [rdx+0x3200006a],ch
   14004a58d:	imul   eax,DWORD PTR [rax],0x0
   14004a590:	fadd   QWORD PTR [rsp+rax*1]
   14004a593:	add    BYTE PTR [rdx],dh
   14004a595:	imul   eax,DWORD PTR [rax],0x0
   14004a598:	pushf  
   14004a599:	imul   eax,DWORD PTR [rax],0x0
   14004a59c:	lock add al,0x4
   14004a59f:	add    BYTE PTR [rax-0x3cffff95],ah
   14004a5a5:	ins    BYTE PTR es:[rdi],dx
   14004a5a6:	add    BYTE PTR [rax],al
   14004a5a8:	mov    eax,0xd000040a
   14004a5ad:	ins    BYTE PTR es:[rdi],dx
   14004a5ae:	add    BYTE PTR [rax],al
   14004a5b0:	pop    rax
   14004a5b1:	ins    DWORD PTR es:[rdi],dx
   14004a5b2:	add    BYTE PTR [rax],al
   14004a5b4:	pushf  
   14004a5b5:	xor    BYTE PTR [rax+rax*1],al
   14004a5b8:	(bad)  
   14004a5b9:	ins    DWORD PTR es:[rdi],dx
   14004a5ba:	add    BYTE PTR [rax],al
   14004a5bc:	je     0x14004a62c
   14004a5be:	add    BYTE PTR [rax],al
   14004a5c0:	in     al,0xa
   14004a5c2:	add    al,0x0
   14004a5c4:	sub    BYTE PTR [rsi+0x0],0x0
   14004a5c8:	mov    BYTE PTR [rbx+0x0],dh
   14004a5cb:	add    al,bh
   14004a5cd:	or     al,BYTE PTR [rax+rax*1]
   14004a5d0:	nop
   14004a5d1:	jae    0x14004a5d3
   14004a5d3:	add    al,cl
   14004a5d5:	je     0x14004a5d7
   14004a5d7:	add    BYTE PTR [rax+0x405],cl
   14004a5dd:	jne    0x14004a5df
   14004a5df:	add    dh,dl
   14004a5e1:	jne    0x14004a5e3
   14004a5e3:	add    BYTE PTR [rax-0x1ffffbfb],cl
   14004a5e9:	jne    0x14004a5eb
   14004a5eb:	add    BYTE PTR [rsi+rsi*2+0x0],dl
   14004a5ef:	add    BYTE PTR [rax+0x60000408],bl
   14004a5f5:	jbe    0x14004a5f7
   14004a5f7:	add    BYTE PTR [rsi+rsi*2+0x5880000],ah
   14004a5fe:	add    al,0x0
   14004a600:	mov    al,0x76
   14004a602:	add    BYTE PTR [rax],al
   14004a604:	fnstenv [rsi+0x0]
   14004a607:	add    BYTE PTR [rax],ah
   14004a609:	or     eax,DWORD PTR [rax+rax*1]
   14004a60c:	loopne 0x14004a684
   14004a60e:	add    BYTE PTR [rax],al
   14004a610:	cmc    
   14004a611:	jbe    0x14004a613
   14004a613:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004a617:	add    BYTE PTR [rax],al
   14004a619:	ja     0x14004a61b
   14004a61b:	add    BYTE PTR [rdi+0x77],bh
   14004a61e:	add    BYTE PTR [rax],al
   14004a620:	sbb    BYTE PTR [rbx],cl
   14004a622:	add    al,0x0
   14004a624:	xor    BYTE PTR [rdi+0x0],0x0
   14004a628:	lock js 0x14004a62b
   14004a62b:	add    BYTE PTR [rbx+rcx*1+0x4],dl
   14004a62f:	add    al,dh
   14004a631:	js     0x14004a633
   14004a633:	add    BYTE PTR [rbp+0x7a],dh
   14004a636:	add    BYTE PTR [rax],al
   14004a638:	cwde   
   14004a639:	adc    al,BYTE PTR [rax+rax*1]
   14004a63c:	mov    al,0x7a
   14004a63e:	add    BYTE PTR [rax],al
   14004a640:	sbb    edi,DWORD PTR [rbx+0x0]
   14004a643:	add    BYTE PTR [rax+rsi*1+0x7b700004],bl
   14004a64a:	add    BYTE PTR [rax],al
   14004a64c:	js     0x14004a6c9
   14004a64e:	add    BYTE PTR [rax],al
   14004a650:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004a654:	js     0x14004a6d1
   14004a656:	add    BYTE PTR [rax],al
   14004a658:	(bad)  
   14004a659:	jnp    0x14004a65b
   14004a65b:	add    BYTE PTR [rax],ch
   14004a65d:	or     eax,DWORD PTR [rax+rax*1]
   14004a660:	(bad)  
   14004a661:	jnp    0x14004a663
   14004a663:	add    bl,cl
   14004a665:	jnp    0x14004a667
   14004a667:	add    BYTE PTR [rbx+rcx*1+0x4],al
   14004a66b:	add    BYTE PTR [rax],ah
   14004a66d:	jl     0x14004a66f
   14004a66f:	add    BYTE PTR [rdx+0x7c],ah
   14004a672:	add    BYTE PTR [rax],al
   14004a674:	mov    BYTE PTR [rip+0x7c800004],al        # 0x1bc84a67e
   14004a67a:	add    BYTE PTR [rax],al
   14004a67c:	icebp  
   14004a67d:	jl     0x14004a67f
   14004a67f:	add    BYTE PTR [rax+rsi*1+0x7d000004],bl
   14004a686:	add    BYTE PTR [rax],al
   14004a688:	and    eax,0x7000007d
   14004a68d:	or     eax,DWORD PTR [rax+rax*1]
   14004a690:	and    eax,0xd100007d
   14004a695:	jge    0x14004a697
   14004a697:	add    BYTE PTR [rax-0x2efffbf5],al
   14004a69d:	jge    0x14004a69f
   14004a69f:	add    BYTE PTR [rax],al
   14004a6a1:	jle    0x14004a6a3
   14004a6a3:	add    BYTE PTR [rbx+rcx*1+0x7e000004],dl
   14004a6aa:	add    BYTE PTR [rax],al
   14004a6ac:	pop    rdi
   14004a6ad:	jle    0x14004a6af
   14004a6af:	add    BYTE PTR [rax+0x60000405],cl
   14004a6b5:	jle    0x14004a6b7
   14004a6b7:	add    BYTE PTR [rbp-0x80],dh
   14004a6ba:	add    BYTE PTR [rax],al
   14004a6bc:	sbb    BYTE PTR [rsp+rax*1],cl
   14004a6bf:	add    BYTE PTR [rax-0x6effff80],al
   14004a6c5:	add    BYTE PTR [rax],0x0
   14004a6c8:	xor    al,0xc
   14004a6ca:	add    al,0x0
   14004a6cc:	xchg   ecx,eax
   14004a6cd:	add    BYTE PTR [rax],0x0
   14004a6d0:	jmp    0x14004a652
   14004a6d2:	add    BYTE PTR [rax],al
   14004a6d4:	or     al,0x4
   14004a6d7:	add    bl,ch
   14004a6d9:	add    BYTE PTR [rax],0x0
   14004a6dc:	pop    rax
   14004a6dd:	add    DWORD PTR [rax],0x40c5800
   14004a6e3:	add    BYTE PTR [rax-0x7f],bl
   14004a6e6:	add    BYTE PTR [rax],al
   14004a6e8:	stc    
   14004a6e9:	(bad)  
   14004a6ea:	add    BYTE PTR [rax],al
   14004a6ec:	ins    BYTE PTR es:[rdi],dx
   14004a6ed:	or     al,0x4
   14004a6ef:	add    cl,bh
   14004a6f1:	(bad)  
   14004a6f2:	add    BYTE PTR [rax],al
   14004a6f4:	rex.WR test BYTE PTR [rax],r8b
   14004a6f7:	add    BYTE PTR [rsp+rcx*1+0x4],bh
   14004a6fb:	add    BYTE PTR [rax-0x7c],dl
   14004a6fe:	add    BYTE PTR [rax],al
   14004a700:	test   BYTE PTR [rax+rax*1+0x4058800],al
   14004a707:	add    BYTE PTR [rax-0x39ffff7c],dl
   14004a70d:	test   BYTE PTR [rax],al
   14004a70f:	add    al,ah
   14004a711:	or     al,0x4
   14004a713:	add    dh,al
   14004a715:	test   BYTE PTR [rax],al
   14004a717:	add    dl,bh
   14004a719:	xchg   BYTE PTR [rax],al
   14004a71b:	add    al,bh
   14004a71d:	or     al,0x4
   14004a71f:	add    dl,bh
   14004a721:	xchg   BYTE PTR [rax],al
   14004a723:	add    BYTE PTR [rdx],dl
   14004a725:	xchg   DWORD PTR [rax],eax
   14004a727:	add    BYTE PTR [rcx*1-0x78dffffc],cl
   14004a72e:	add    BYTE PTR [rax],al
   14004a730:	jp     0x14004a6bb
   14004a732:	add    BYTE PTR [rax],al
   14004a734:	mov    WORD PTR [rsp+rax*1],cs
   14004a737:	add    BYTE PTR [rax-0x46ffff77],al
   14004a73d:	mov    DWORD PTR [rax],eax
   14004a73f:	add    BYTE PTR [rsp+rcx*1-0x7646fffc],ah
   14004a746:	add    BYTE PTR [rax],al
   14004a748:	and    eax,0xbc00008c
   14004a74d:	or     al,0x4
   14004a74f:	add    BYTE PTR [rip+0x3d00008c],ah        # 0x17d04a7e1
   14004a755:	mov    WORD PTR [rax],es
   14004a757:	add    al,dl
   14004a759:	or     al,0x4
   14004a75b:	add    BYTE PTR [rax-0x74],al
   14004a75e:	add    BYTE PTR [rax],al
   14004a760:	or     al,0x8d
   14004a762:	add    BYTE PTR [rax],al
   14004a764:	rex or eax,0x8d0c0004
   14004a76a:	add    BYTE PTR [rax],al
   14004a76c:	cmp    DWORD PTR [rdi+0xd500000],ecx
   14004a772:	add    al,0x0
   14004a774:	cmp    DWORD PTR [rdi-0x70100000],ecx
   14004a77a:	add    BYTE PTR [rax],al
   14004a77c:	jl     0x14004a78b
   14004a77e:	add    al,0x0
   14004a780:	lock pop QWORD PTR [rax]
   14004a783:	add    BYTE PTR [rip+0xffffffff98000090],bl        # 0xd804a819
   14004a789:	or     BYTE PTR [rax+rax*1],al
   14004a78c:	and    BYTE PTR [rax-0x6e040000],dl
   14004a792:	add    BYTE PTR [rax],al
   14004a794:	push   0x40e
   14004a799:	xchg   edx,eax
   14004a79a:	add    BYTE PTR [rax],al
   14004a79c:	xor    dl,BYTE PTR [rdx+0x8980000]
   14004a7a2:	add    al,0x0
   14004a7a4:	rex xchg edx,eax
   14004a7a6:	add    BYTE PTR [rax],al
   14004a7a8:	not    BYTE PTR [rax+rax*1+0x40e9800]
   14004a7af:	add    BYTE PTR [rax],al
   14004a7b1:	xchg   ebp,eax
   14004a7b2:	add    BYTE PTR [rax],al
   14004a7b4:	fst    DWORD PTR [rbp+0xda80000]
   14004a7ba:	add    al,0x0
   14004a7bc:	add    BYTE PTR [rsi-0x69df0000],dl
   14004a7c2:	add    BYTE PTR [rax],al
   14004a7c4:	in     al,dx
   14004a7c5:	xor    al,BYTE PTR [rax+rax*1]
   14004a7c8:	and    DWORD PTR [rsi-0x69650000],edx
   14004a7ce:	add    BYTE PTR [rax],al
   14004a7d0:	fmul   DWORD PTR [rbx]
   14004a7d2:	add    al,0x0
   14004a7d4:	fwait
   14004a7d5:	xchg   esi,eax
   14004a7d6:	add    BYTE PTR [rax],al
   14004a7d8:	mov    edx,0xf0000096
   14004a7dd:	or     eax,DWORD PTR [rax+rax*1]
   14004a7e0:	mov    edx,0xf4000096
   14004a7e5:	xchg   esi,eax
   14004a7e6:	add    BYTE PTR [rax],al
   14004a7e8:	lock or eax,DWORD PTR [rax+rax*1]
   14004a7ec:	hlt    
   14004a7ed:	xchg   esi,eax
   14004a7ee:	add    BYTE PTR [rax],al
   14004a7f0:	cli    
   14004a7f1:	xchg   esi,eax
   14004a7f2:	add    BYTE PTR [rax],al
   14004a7f4:	or     BYTE PTR [rsp+rax*1],cl
   14004a7f7:	add    BYTE PTR [rax],al
   14004a7f9:	xchg   edi,eax
   14004a7fa:	add    BYTE PTR [rax],al
   14004a7fc:	and    DWORD PTR [rdi+0x32ec0000],edx
   14004a802:	add    al,0x0
   14004a804:	and    DWORD PTR [rdi-0x68630000],edx
   14004a80a:	add    BYTE PTR [rax],al
   14004a80c:	test   al,0xf
   14004a80e:	add    al,0x0
   14004a810:	popf   
   14004a811:	xchg   edi,eax
   14004a812:	add    BYTE PTR [rax],al
   14004a814:	mov    esi,0xc0000097
   14004a819:	(bad)  
   14004a81b:	add    BYTE PTR [rsi-0x4ffff69],bh
   14004a821:	xchg   edi,eax
   14004a822:	add    BYTE PTR [rax],al
   14004a824:	ror    BYTE PTR [rdi],0x4
   14004a827:	add    bl,bh
   14004a829:	xchg   edi,eax
   14004a82a:	add    BYTE PTR [rax],al
   14004a82c:	add    DWORD PTR [rax+0xfd80000],ebx
   14004a832:	add    al,0x0
   14004a834:	adc    BYTE PTR [rax-0x67cf0000],bl
   14004a83a:	add    BYTE PTR [rax],al
   14004a83c:	in     al,dx
   14004a83d:	xor    al,BYTE PTR [rax+rax*1]
   14004a840:	xor    DWORD PTR [rax-0x674f0000],ebx
   14004a846:	add    BYTE PTR [rax],al
   14004a848:	push   0xffffffffb100040f
   14004a84d:	cwde   
   14004a84e:	add    BYTE PTR [rax],al
   14004a850:	(bad)  
   14004a851:	cwde   
   14004a852:	add    BYTE PTR [rax],al
   14004a854:	or     BYTE PTR [rdi],0x4
   14004a857:	add    dh,dl
   14004a859:	cwde   
   14004a85a:	add    BYTE PTR [rax],al
   14004a85c:	sbb    ebx,DWORD PTR [rcx+0xf800000]
   14004a862:	add    al,0x0
   14004a864:	sbb    ebx,DWORD PTR [rcx-0x66df0000]
   14004a86a:	add    BYTE PTR [rax],al
   14004a86c:	cwde   
   14004a86d:	(bad)  
   14004a86f:	add    BYTE PTR [rax],dh
   14004a871:	cdq    
   14004a872:	add    BYTE PTR [rax],al
   14004a874:	push   rcx
   14004a875:	cdq    
   14004a876:	add    BYTE PTR [rax],al
   14004a878:	in     al,dx
   14004a879:	xor    al,BYTE PTR [rax+rax*1]
   14004a87c:	push   rcx
   14004a87d:	cdq    
   14004a87e:	add    BYTE PTR [rax],al
   14004a880:	int    0x99
   14004a882:	add    BYTE PTR [rax],al
   14004a884:	xor    BYTE PTR [rax],dl
   14004a886:	add    al,0x0
   14004a888:	int    0x99
   14004a88a:	add    BYTE PTR [rax],al
   14004a88c:	out    dx,al
   14004a88d:	cdq    
   14004a88e:	add    BYTE PTR [rax],al
   14004a890:	rex.W adc BYTE PTR [rax+rax*1],al
   14004a894:	out    dx,al
   14004a895:	cdq    
   14004a896:	add    BYTE PTR [rax],al
   14004a898:	sub    ebx,DWORD PTR [rdx+0x10480000]
   14004a89e:	add    al,0x0
   14004a8a0:	sub    ebx,DWORD PTR [rdx-0x65cf0000]
   14004a8a6:	add    BYTE PTR [rax],al
   14004a8a8:	(bad)  
   14004a8a9:	adc    BYTE PTR [rax+rax*1],al
   14004a8ac:	rex (bad) 
   14004a8ae:	add    BYTE PTR [rax],al
   14004a8b0:	(bad)  
   14004a8b1:	(bad)  
   14004a8b2:	add    BYTE PTR [rax],al
   14004a8b4:	in     al,dx
   14004a8b5:	xor    al,BYTE PTR [rax+rax*1]
   14004a8b8:	(bad)  
   14004a8b9:	(bad)  
   14004a8ba:	add    BYTE PTR [rax],al
   14004a8bc:	loope  0x14004a858
   14004a8be:	add    BYTE PTR [rax],al
   14004a8c0:	sub    BYTE PTR [rdi],cl
   14004a8c2:	add    al,0x0
   14004a8c4:	loope  0x14004a860
   14004a8c6:	add    BYTE PTR [rax],al
   14004a8c8:	(bad)  
   14004a8c9:	fwait
   14004a8ca:	add    BYTE PTR [rax],al
   14004a8cc:	rex (bad) 
   14004a8cf:	add    BYTE PTR [rsi],al
   14004a8d1:	fwait
   14004a8d2:	add    BYTE PTR [rax],al
   14004a8d4:	rex.WXB
   14004a8d5:	fwait
   14004a8d6:	add    BYTE PTR [rax],al
   14004a8d8:	rex (bad) 
   14004a8db:	add    BYTE PTR [rbx-0x65],cl
   14004a8de:	add    BYTE PTR [rax],al
   14004a8e0:	push   rcx
   14004a8e1:	fwait
   14004a8e2:	add    BYTE PTR [rax],al
   14004a8e4:	pop    rax
   14004a8e5:	(bad)  
   14004a8e7:	add    BYTE PTR [rax-0x65],ah
   14004a8ea:	add    BYTE PTR [rax],al
   14004a8ec:	add    DWORD PTR [rax+rax*1+0x40dc400],ebx
   14004a8f3:	add    BYTE PTR [rax],dl
   14004a8f5:	pushf  
   14004a8f6:	add    BYTE PTR [rax],al
   14004a8f8:	xor    DWORD PTR [rax+rax*1+0x40ba400],ebx
   14004a8ff:	add    BYTE PTR [rcx],dh
   14004a901:	pushf  
   14004a902:	add    BYTE PTR [rax],al
   14004a904:	jge    0x14004a8a2
   14004a906:	add    BYTE PTR [rax],al
   14004a908:	mov    ah,0xb
   14004a90a:	add    al,0x0
   14004a90c:	jge    0x14004a8aa
   14004a90e:	add    BYTE PTR [rax],al
   14004a910:	nop
   14004a911:	pushf  
   14004a912:	add    BYTE PTR [rax],al
   14004a914:	enter  0x40b,0x0
   14004a918:	nop
   14004a919:	pushf  
   14004a91a:	add    BYTE PTR [rax],al
   14004a91c:	mov    ch,0x9c
   14004a91e:	add    BYTE PTR [rax],al
   14004a920:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a921:	or     eax,DWORD PTR [rax+rax*1]
   14004a924:	mov    ch,0x9c
   14004a926:	add    BYTE PTR [rax],al
   14004a928:	cmp    bl,BYTE PTR [rbp+0xfe80000]
   14004a92e:	add    al,0x0
   14004a930:	cmp    bl,BYTE PTR [rbp-0x62b20000]
   14004a936:	add    BYTE PTR [rax],al
   14004a938:	cld    
   14004a939:	(bad)  
   14004a93b:	add    BYTE PTR [rax-0x63],dl
   14004a93e:	add    BYTE PTR [rax],al
   14004a940:	js     0x14004a8df
   14004a942:	add    BYTE PTR [rax],al
   14004a944:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004a948:	sbb    BYTE PTR [rbp-0x5e9c0000],0x0
   14004a94f:	add    BYTE PTR [rax+0x7000040e],dh
   14004a955:	movabs eax,ds:0xe500000b0fe0000
   14004a95e:	add    al,0x0
   14004a960:	add    BYTE PTR [rcx-0x4ee80000],dh
   14004a966:	add    BYTE PTR [rax],al
   14004a968:	adc    al,0x32
   14004a96a:	add    al,0x0
   14004a96c:	sbb    BYTE PTR [rcx-0x4ed70000],dh
   14004a972:	add    BYTE PTR [rax],al
   14004a974:	ror    BYTE PTR [rip+0xffffffffb1290004],1        # 0xf12da97e
   14004a97a:	add    BYTE PTR [rax],al
   14004a97c:	pop    rsi
   14004a97d:	mov    cl,0x0
   14004a97f:	add    ah,ah
   14004a981:	or     eax,0xb15e0004
   14004a986:	add    BYTE PTR [rax],al
   14004a988:	movsxd esi,DWORD PTR [rcx+0xdf80000]
   14004a98e:	add    al,0x0
   14004a990:	movsxd esi,DWORD PTR [rcx-0x4e970000]
   14004a996:	add    BYTE PTR [rax],al
   14004a998:	or     BYTE PTR [rsi],cl
   14004a99a:	add    al,0x0
   14004a99c:	jo     0x14004a94f
   14004a99e:	add    BYTE PTR [rax],al
   14004a9a0:	xchg   DWORD PTR [rcx+0x3c180000],esi
   14004a9a6:	add    al,0x0
   14004a9a8:	xchg   DWORD PTR [rcx-0x4e520000],esi
   14004a9ae:	add    BYTE PTR [rax],al
   14004a9b0:	or     al,0x10
   14004a9b2:	add    al,0x0
   14004a9b4:	scas   al,BYTE PTR es:[rdi]
   14004a9b5:	mov    cl,0x0
   14004a9b7:	add    dh,ah
   14004a9b9:	mov    cl,0x0
   14004a9bb:	add    BYTE PTR [rax],ah
   14004a9bd:	adc    BYTE PTR [rax+rax*1],al
   14004a9c0:	lock mov cl,0x0
   14004a9c3:	add    BYTE PTR [rbx],bl
   14004a9c5:	mov    dl,0x0
   14004a9c7:	add    al,dh
   14004a9c9:	(bad)  
   14004a9ca:	add    al,0x0
   14004a9cc:	sbb    esi,DWORD PTR [rdx-0x4d5c0000]
   14004a9d2:	add    BYTE PTR [rax],al
   14004a9d4:	add    BYTE PTR [rdi],cl
   14004a9d6:	add    al,0x0
   14004a9d8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004a9d9:	mov    dl,0x0
   14004a9db:	add    BYTE PTR [rbx+0x180000b2],dh
   14004a9e1:	(bad)  
   14004a9e3:	add    al,al
   14004a9e5:	mov    dl,0x0
   14004a9e7:	add    BYTE PTR [rdx],ah
   14004a9e9:	mov    bl,0x0
   14004a9eb:	add    BYTE PTR [rax+0x27],dh
   14004a9ee:	add    al,0x0
   14004a9f0:	and    dh,BYTE PTR [rbx-0x4c2d0000]
   14004a9f6:	add    BYTE PTR [rax],al
   14004a9f8:	sbb    al,0xd
   14004a9fa:	add    al,0x0
   14004a9fc:	shl    DWORD PTR [rbx-0x4c1d0000],cl
   14004aa02:	add    BYTE PTR [rax],al
   14004aa04:	xor    BYTE PTR [rip+0xffffffffb3f00004],cl        # 0xf3f4aa0e
   14004aa0a:	add    BYTE PTR [rax],al
   14004aa0c:	(bad)  
   14004aa0d:	mov    ah,0x0
   14004aa0f:	add    BYTE PTR [rax+0x40000408],bl
   14004aa15:	mov    ah,0x0
   14004aa17:	add    BYTE PTR [rax-0x4c],ah
   14004aa1a:	add    BYTE PTR [rax],al
   14004aa1c:	sbb    BYTE PTR [rsi],cl
   14004aa1e:	add    al,0x0
   14004aa20:	(bad)  
   14004aa21:	mov    ah,0x0
   14004aa23:	add    BYTE PTR [rsi],dh
   14004aa25:	mov    ch,0x0
   14004aa27:	add    BYTE PTR [rsi+rcx*1],ah
   14004aa2a:	add    al,0x0
   14004aa2c:	ss mov ch,0x0
   14004aa2f:	add    BYTE PTR [rcx-0x4b],al
   14004aa32:	add    BYTE PTR [rax],al
   14004aa34:	rex (bad) 
   14004aa36:	add    al,0x0
   14004aa38:	push   rax
   14004aa39:	mov    ch,0x0
   14004aa3b:	add    BYTE PTR [rbx-0x49],dh
   14004aa3e:	add    BYTE PTR [rax],al
   14004aa40:	or     BYTE PTR [rsi],0x4
   14004aa43:	add    BYTE PTR [rax-0x2effff49],al
   14004aa49:	mov    bh,0x0
   14004aa4b:	add    BYTE PTR [rax],bl
   14004aa4d:	cmp    al,0x4
   14004aa4f:	add    cl,dl
   14004aa51:	mov    bh,0x0
   14004aa53:	add    BYTE PTR [rcx-0x48],cl
   14004aa56:	add    BYTE PTR [rax],al
   14004aa58:	int3   
   14004aa59:	(bad)  
   14004aa5a:	add    al,0x0
   14004aa5c:	movabs r8,0xee00000b8540000
   14004aa66:	add    al,0x0
   14004aa68:	(bad)  
   14004aa69:	mov    eax,0xb9490000
   14004aa6e:	add    BYTE PTR [rax],al
   14004aa70:	jo     0x14004aa82
   14004aa72:	add    al,0x0
   14004aa74:	push   rax
   14004aa75:	mov    ecx,0xbab80000
   14004aa7a:	add    BYTE PTR [rax],al
   14004aa7c:	sbb    BYTE PTR [rsp+rax*1],bh
   14004aa7f:	add    BYTE PTR [rax+0x2c0000ba],bh
   14004aa85:	mov    ebx,0x107c0000
   14004aa8a:	add    al,0x0
   14004aa8c:	sub    al,0xbb
   14004aa8e:	add    BYTE PTR [rax],al
   14004aa90:	rex.XB mov r11d,0x10900000
   14004aa96:	add    al,0x0
   14004aa98:	rex.XB mov r11d,0xbb5a0000
   14004aa9e:	add    BYTE PTR [rax],al
   14004aaa0:	nop
   14004aaa1:	adc    BYTE PTR [rax+rax*1],al
   14004aaa4:	movabs al,ds:0xc40000bcaf0000bb
   14004aaad:	adc    BYTE PTR [rax+rax*1],al
   14004aab0:	lock mov esp,0xbf430000
   14004aab6:	add    BYTE PTR [rax],al
   14004aab8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004aab9:	adc    BYTE PTR [rax+rax*1],al
   14004aabc:	nop
   14004aabd:	mov    edi,0xc07c0000
   14004aac2:	add    BYTE PTR [rax],al
   14004aac4:	fs (bad) 
   14004aac6:	add    al,0x0
   14004aac8:	add    al,0x0
   14004aacb:	add    BYTE PTR [rcx],ch
   14004aacd:	rol    DWORD PTR [rax],0x0
   14004aad0:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004aad4:	loopne 0x14004aa97
   14004aad6:	add    BYTE PTR [rax],al
   14004aad8:	mov    es,edx
   14004aada:	add    BYTE PTR [rax],al
   14004aadc:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004aae0:	nop
   14004aae1:	ret    0x0
   14004aae4:	jp     0x14004aaa9
   14004aae6:	add    BYTE PTR [rax],al
   14004aae8:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004aaec:	add    bl,0x0
   14004aaef:	add    ch,ch
   14004aaf1:	ret    
   14004aaf2:	add    BYTE PTR [rax],al
   14004aaf4:	cwde   
   14004aaf5:	or     BYTE PTR [rax+rax*1],al
   14004aaf8:	lock ret 
   14004aafa:	add    BYTE PTR [rax],al
   14004aafc:	fcmovnb st,st(4)
   14004aafe:	add    BYTE PTR [rax],al
   14004ab00:	and    BYTE PTR [rip+0xffffffffc4e00004],dl        # 0x104e4ab0a
   14004ab06:	add    BYTE PTR [rax],al
   14004ab08:	xor    al,ch
   14004ab0a:	add    BYTE PTR [rax],al
   14004ab0c:	cwde   
   14004ab0d:	or     BYTE PTR [rax+rax*1],al
   14004ab10:	(bad)
   14004ab14:	fld    st(5)
   14004ab16:	add    BYTE PTR [rax],al
   14004ab18:	pushf  
   14004ab19:	xor    BYTE PTR [rax+rax*1],al
   14004ab1c:	loopne 0x14004aae3
   14004ab1e:	add    BYTE PTR [rax],al
   14004ab20:	lock mov BYTE PTR [rax],0x0
   14004ab24:	pushf  
   14004ab25:	xor    BYTE PTR [rax+rax*1],al
   14004ab28:	adc    bh,al
   14004ab2a:	add    BYTE PTR [rax],al
   14004ab2c:	mov    edx,0x9c0000c7
   14004ab31:	xor    BYTE PTR [rax+rax*1],al
   14004ab34:	rol    bh,0x0
   14004ab37:	add    BYTE PTR [rcx-0x38],al
   14004ab3a:	add    BYTE PTR [rax],al
   14004ab3c:	mov    BYTE PTR [rip+0xffffffffc8500004],al        # 0x10854ab46
   14004ab42:	add    BYTE PTR [rax],al
   14004ab44:	jno    0x14004ab0e
   14004ab46:	add    BYTE PTR [rax],al
   14004ab48:	cwde   
   14004ab49:	or     BYTE PTR [rax+rax*1],al
   14004ab4c:	or     al,0x0
   14004ab4f:	add    BYTE PTR [rcx-0x63ffff37],dh
   14004ab55:	xor    BYTE PTR [rax+rax*1],al
   14004ab58:	ror    cl,1
   14004ab5a:	add    BYTE PTR [rax],al
   14004ab5c:	xchg   edx,eax
   14004ab5d:	retf   0x0
   14004ab60:	pushf  
   14004ab61:	xor    BYTE PTR [rax+rax*1],al
   14004ab64:	movabs al,ds:0x640000cafd0000ca
   14004ab6d:	(bad)  
   14004ab6e:	add    al,0x0
   14004ab70:	std    
   14004ab71:	retf   0x0
   14004ab74:	dec    ebx
   14004ab76:	add    BYTE PTR [rax],al
   14004ab78:	je     0x14004ab90
   14004ab7a:	add    al,0x0
   14004ab7c:	dec    ebx
   14004ab7e:	add    BYTE PTR [rax],al
   14004ab80:	adc    eax,0x900000cc
   14004ab85:	(bad)  
   14004ab86:	add    al,0x0
   14004ab88:	and    ah,cl
   14004ab8a:	add    BYTE PTR [rax],al
   14004ab8c:	xor    ecx,esp
   14004ab8e:	add    BYTE PTR [rax],al
   14004ab90:	adc    DWORD PTR [rax+rax*1],r8d
   14004ab94:	xor    ecx,esp
   14004ab96:	add    BYTE PTR [rax],al
   14004ab98:	cs (bad) 
   14004ab9a:	add    BYTE PTR [rax],al
   14004ab9c:	adc    QWORD PTR [rax+rax*1],r8
   14004aba0:	cs (bad) 
   14004aba2:	add    BYTE PTR [rax],al
   14004aba4:	xor    al,0xce
   14004aba6:	add    BYTE PTR [rax],al
   14004aba8:	jo     0x14004abbb
   14004abaa:	add    al,0x0
   14004abac:	rex (bad) 
   14004abae:	add    BYTE PTR [rax],al
   14004abb0:	mov    dl,0xce
   14004abb2:	add    BYTE PTR [rax],al
   14004abb4:	hlt    
   14004abb5:	adc    al,0x4
   14004abb7:	add    al,al
   14004abb9:	(bad)  
   14004abba:	add    BYTE PTR [rax],al
   14004abbc:	and    bh,cl
   14004abbe:	add    BYTE PTR [rax],al
   14004abc0:	cwde   
   14004abc1:	or     BYTE PTR [rax+rax*1],al
   14004abc4:	and    bh,cl
   14004abc6:	add    BYTE PTR [rax],al
   14004abc8:	fwait
   14004abc9:	iret   
   14004abca:	add    BYTE PTR [rax],al
   14004abcc:	test   BYTE PTR [rbx],dl
   14004abce:	add    al,0x0
   14004abd0:	fwait
   14004abd1:	iret   
   14004abd2:	add    BYTE PTR [rax],al
   14004abd4:	mov    dl,0xcf
   14004abd6:	add    BYTE PTR [rax],al
   14004abd8:	pushf  
   14004abd9:	adc    eax,DWORD PTR [rax+rax*1]
   14004abdc:	mov    dl,0xcf
   14004abde:	add    BYTE PTR [rax],al
   14004abe0:	mov    eax,0xb00000cf
   14004abe5:	adc    eax,DWORD PTR [rax+rax*1]
   14004abe8:	ror    bh,0x0
   14004abeb:	add    BYTE PTR [rdi-0x67ffff30],al
   14004abf1:	or     BYTE PTR [rax+rax*1],al
   14004abf4:	add    cl,dl
   14004abf6:	add    BYTE PTR [rax],al
   14004abf8:	(bad)  
   14004abfa:	add    BYTE PTR [rax],al
   14004abfc:	mov    BYTE PTR [rip+0xffffffffd1e00004],al        # 0x111e4ac06
   14004ac02:	add    BYTE PTR [rax],al
   14004ac04:	or     al,0xd2
   14004ac06:	add    BYTE PTR [rax],al
   14004ac08:	ins    BYTE PTR es:[rdi],dx
   14004ac09:	adc    al,0x4
   14004ac0b:	add    BYTE PTR [rdx+rdx*8],cl
   14004ac0e:	add    BYTE PTR [rax],al
   14004ac10:	rex.X rol DWORD PTR [rax],cl
   14004ac13:	add    BYTE PTR [rsp+rdx*1+0x4],bh
   14004ac17:	add    BYTE PTR [rdx-0x2d],al
   14004ac1a:	add    BYTE PTR [rax],al
   14004ac1c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ac1d:	rol    DWORD PTR [rax],cl
   14004ac1f:	add    BYTE PTR [rsp+rdx*1-0x2c4ffffc],bl
   14004ac26:	add    BYTE PTR [rax],al
   14004ac28:	(bad)  
   14004ac29:	(bad)  
   14004ac2a:	add    BYTE PTR [rax],al
   14004ac2c:	mov    ah,0x14
   14004ac2e:	add    al,0x0
   14004ac30:	(bad)  
   14004ac31:	(bad)  
   14004ac32:	add    BYTE PTR [rax],al
   14004ac34:	(bad)  
   14004ac35:	(bad)  
   14004ac36:	add    BYTE PTR [rax],al
   14004ac38:	int3   
   14004ac39:	adc    al,0x4
   14004ac3b:	add    BYTE PTR [rdi],dl
   14004ac3d:	(bad)  
   14004ac3e:	add    BYTE PTR [rax],al
   14004ac40:	jne    0x14004ac17
   14004ac42:	add    BYTE PTR [rax],al
   14004ac44:	in     al,0x14
   14004ac46:	add    al,0x0
   14004ac48:	adc    ch,0x0
   14004ac4b:	add    BYTE PTR [rdx-0x67ffff2b],ah
   14004ac51:	or     BYTE PTR [rax+rax*1],al
   14004ac54:	mov    al,0xd5
   14004ac56:	add    BYTE PTR [rax],al
   14004ac58:	xlat   BYTE PTR ds:[rbx]
   14004ac59:	(bad)  
   14004ac5a:	add    BYTE PTR [rax],al
   14004ac5c:	push   0xffffffffd7000417
   14004ac61:	(bad)  
   14004ac62:	add    BYTE PTR [rax],al
   14004ac64:	rex.WRX (bad) 
   14004ac66:	add    BYTE PTR [rax],al
   14004ac68:	jl     0x14004ac81
   14004ac6a:	add    al,0x0
   14004ac6c:	rex.WRX (bad) 
   14004ac6e:	add    BYTE PTR [rax],al
   14004ac70:	ja     0x14004ac48
   14004ac72:	add    BYTE PTR [rax],al
   14004ac74:	xchg   esp,eax
   14004ac75:	(bad)  
   14004ac76:	add    al,0x0
   14004ac78:	adc    dh,0x0
   14004ac7b:	add    BYTE PTR [rax-0x29],al
   14004ac7e:	add    BYTE PTR [rax],al
   14004ac80:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ac81:	(bad)  
   14004ac82:	add    al,0x0
   14004ac84:	rex xlat BYTE PTR ds:[rbx]
   14004ac86:	add    BYTE PTR [rax],al
   14004ac88:	or     bl,al
   14004ac8a:	add    BYTE PTR [rax],al
   14004ac8c:	mov    esp,0xa000417
   14004ac91:	fadd   DWORD PTR [rax]
   14004ac93:	add    BYTE PTR [rcx],ah
   14004ac95:	fadd   DWORD PTR [rax]
   14004ac97:	add    al,dl
   14004ac99:	(bad)  
   14004ac9a:	add    al,0x0
   14004ac9c:	xor    al,bl
   14004ac9e:	add    BYTE PTR [rax],al
   14004aca0:	mov    eax,0x700000d9
   14004aca5:	(bad)  
   14004aca6:	add    al,0x0
   14004aca8:	mov    eax,0x140000d9
   14004acad:	fiadd  DWORD PTR [rax]
   14004acaf:	add    BYTE PTR [rax+0x14000411],al
   14004acb5:	fiadd  DWORD PTR [rax]
   14004acb7:	add    BYTE PTR [rax-0x6bffff26],al
   14004acbd:	adc    DWORD PTR [rax+rax*1],eax
   14004acc0:	sbb    dl,0x0
   14004acc3:	add    bl,dh
   14004acc5:	fiadd  DWORD PTR [rax]
   14004acc7:	add    BYTE PTR [rax],bl
   14004acc9:	cmp    al,0x4
   14004accb:	add    bl,dh
   14004accd:	fiadd  DWORD PTR [rax]
   14004accf:	add    BYTE PTR [rip+0x200000db],ch        # 0x16004adb0
   14004acd5:	adc    DWORD PTR [rax+rax*1],eax
   14004acd8:	sub    eax,0x380000db
   14004acdd:	fild   DWORD PTR [rax]
   14004acdf:	add    BYTE PTR [rcx+rdx*1],dh
   14004ace2:	add    al,0x0
   14004ace4:	rex fild DWORD PTR [rax]
   14004ace7:	add    BYTE PTR [rbx+0x180000db],bh
   14004aced:	cmp    al,0x4
   14004acef:	add    BYTE PTR [rbx-0x2ffff25],bh
   14004acf5:	fild   DWORD PTR [rax]
   14004acf7:	add    BYTE PTR [rsi+rdx*1-0x2402fffc],bh
   14004acfe:	add    BYTE PTR [rax],al
   14004ad00:	or     ah,bl
   14004ad02:	add    BYTE PTR [rax],al
   14004ad04:	rcl    BYTE PTR [rsi],1
   14004ad06:	add    al,0x0
   14004ad08:	adc    ah,bl
   14004ad0a:	add    BYTE PTR [rax],al
   14004ad0c:	mov    ebx,esp
   14004ad0e:	add    BYTE PTR [rax],al
   14004ad10:	sbb    BYTE PTR [rsp+rax*1],bh
   14004ad13:	add    BYTE PTR [rbx-0x32ffff24],cl
   14004ad19:	fadd   QWORD PTR [rax]
   14004ad1b:	add    BYTE PTR [rax+0x18],ch
   14004ad1e:	add    al,0x0
   14004ad20:	int    0xdc
   14004ad22:	add    BYTE PTR [rax],al
   14004ad24:	fcomp  st(4)
   14004ad26:	add    BYTE PTR [rax],al
   14004ad28:	jl     0x14004ad42
   14004ad2a:	add    al,0x0
   14004ad2c:	loopne 0x14004ad0a
   14004ad2e:	add    BYTE PTR [rax],al
   14004ad30:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004ad31:	fld    QWORD PTR [rax]
   14004ad33:	add    BYTE PTR [rax-0x4ffffbfb],cl
   14004ad39:	fld    QWORD PTR [rax]
   14004ad3b:	add    BYTE PTR [rbx],al
   14004ad3d:	fiadd  WORD PTR [rax]
   14004ad3f:	add    al,ch
   14004ad41:	adc    DWORD PTR [rax+rax*1],eax
   14004ad44:	add    ebx,esi
   14004ad46:	add    BYTE PTR [rax],al
   14004ad48:	sub    dh,bl
   14004ad4a:	add    BYTE PTR [rax],al
   14004ad4c:	lock adc DWORD PTR [rax+rax*1],eax
   14004ad50:	sub    dh,bl
   14004ad52:	add    BYTE PTR [rax],al
   14004ad54:	rex.WRB fiadd WORD PTR [r8]
   14004ad57:	add    BYTE PTR [rdx+rdx*1],bl
   14004ad5a:	add    al,0x0
   14004ad5c:	rex.WRB fiadd WORD PTR [r8]
   14004ad5f:	add    BYTE PTR [rcx-0x22],dh
   14004ad62:	add    BYTE PTR [rax],al
   14004ad64:	sbb    al,0x12
   14004ad66:	add    al,0x0
   14004ad68:	jno    0x14004ad48
   14004ad6a:	add    BYTE PTR [rax],al
   14004ad6c:	xchg   ebp,eax
   14004ad6d:	fiadd  WORD PTR [rax]
   14004ad6f:	add    BYTE PTR [rdx+rdx*1],bl
   14004ad72:	add    al,0x0
   14004ad74:	xchg   ebp,eax
   14004ad75:	fiadd  WORD PTR [rax]
   14004ad77:	add    ah,al
   14004ad79:	fiadd  WORD PTR [rax]
   14004ad7b:	add    BYTE PTR [rdx+rdx*1],al
   14004ad7e:	add    al,0x0
   14004ad80:	(bad)  
   14004ad81:	fiadd  WORD PTR [rax]
   14004ad83:	add    BYTE PTR [rdi+rbx*8],cl
   14004ad86:	add    BYTE PTR [rax],al
   14004ad88:	sbb    al,0x12
   14004ad8a:	add    al,0x0
   14004ad8c:	or     al,0xdf
   14004ad8e:	add    BYTE PTR [rax],al
   14004ad90:	sub    edi,ebx
   14004ad92:	add    BYTE PTR [rax],al
   14004ad94:	sbb    al,0x12
   14004ad96:	add    al,0x0
   14004ad98:	sub    edi,ebx
   14004ad9a:	add    BYTE PTR [rax],al
   14004ad9c:	cmp    eax,0x1c0000df
   14004ada1:	adc    al,BYTE PTR [rax+rax*1]
   14004ada4:	cmp    eax,0x4c0000df
   14004ada9:	fild   WORD PTR [rax]
   14004adab:	add    BYTE PTR [rdx+rdx*1],bl
   14004adae:	add    al,0x0
   14004adb0:	rex.WR fild WORD PTR [rax]
   14004adb3:	add    BYTE PTR [rax-0x21],bh
   14004adb6:	add    BYTE PTR [rax],al
   14004adb8:	xor    BYTE PTR [rdx],dl
   14004adba:	add    al,0x0
   14004adbc:	sbb    bh,0x0
   14004adbf:	add    dl,dh
   14004adc1:	fild   WORD PTR [rax]
   14004adc3:	add    BYTE PTR [rax+0x412],bl
   14004adc9:	loopne 0x14004adcb
   14004adcb:	add    BYTE PTR [rdx],dl
   14004adcd:	loopne 0x14004adcf
   14004adcf:	add    BYTE PTR [rax],al
   14004add1:	sub    eax,DWORD PTR [rax+rax*1]
   14004add4:	adc    ah,al
   14004add6:	add    BYTE PTR [rax],al
   14004add8:	(bad)  
   14004adda:	add    BYTE PTR [rax],al
   14004addc:	mov    BYTE PTR [rip+0xffffffffe0da0004],dl        # 0x120deade6
   14004ade2:	add    BYTE PTR [rax],al
   14004ade4:	loop   0x14004adc6
   14004ade6:	add    BYTE PTR [rax],al
   14004ade8:	test   al,0x15
   14004adea:	add    al,0x0
   14004adec:	lock loopne 0x14004adef
   14004adef:	add    dl,ah
   14004adf1:	loope  0x14004adf3
   14004adf3:	add    BYTE PTR [rax-0xffffbea],ah
   14004adf9:	loope  0x14004adfb
   14004adfb:	add    BYTE PTR [rbp-0x1e],ah
   14004adfe:	add    BYTE PTR [rax],al
   14004ae00:	adc    al,0x3f
   14004ae02:	add    al,0x0
   14004ae04:	jo     0x14004ade8
   14004ae06:	add    BYTE PTR [rax],al
   14004ae08:	xchg   esi,eax
   14004ae09:	jrcxz  0x14004ae0b
   14004ae0b:	add    BYTE PTR [rax+0x13],dh
   14004ae0e:	add    al,0x0
   14004ae10:	movabs al,ds:0x40000e3e80000e3
   14004ae19:	(bad)  
   14004ae1a:	add    al,0x0
   14004ae1c:	call   0x19a04af04
   14004ae21:	in     al,0x0
   14004ae23:	add    BYTE PTR [rdi+rdx*1],dl
   14004ae26:	add    al,0x0
   14004ae28:	pop    rdx
   14004ae29:	in     al,0x0
   14004ae2b:	add    BYTE PTR [rbx-0x1c],ch
   14004ae2e:	add    BYTE PTR [rax],al
   14004ae30:	sub    al,0x17
   14004ae32:	add    al,0x0
   14004ae34:	imul   esp,esp,0x0
   14004ae37:	add    BYTE PTR [rdx-0x1b],ch
   14004ae3a:	add    BYTE PTR [rax],al
   14004ae3c:	cmp    al,0x17
   14004ae3e:	add    al,0x0
   14004ae40:	push   0xffffffffffffffe5
   14004ae42:	add    BYTE PTR [rax],al
   14004ae44:	(bad)  
   14004ae45:	in     eax,0x0
   14004ae47:	add    BYTE PTR [rdi+rdx*1+0x4],dl
   14004ae4b:	add    al,ah
   14004ae4d:	in     eax,0x0
   14004ae4f:	add    BYTE PTR [rdx],dh
   14004ae51:	out    0x0,al
   14004ae53:	add    al,al
   14004ae55:	adc    eax,DWORD PTR [rax+rax*1]
   14004ae58:	xor    ah,dh
   14004ae5a:	add    BYTE PTR [rax],al
   14004ae5c:	xchg   ecx,eax
   14004ae5d:	out    0x0,al
   14004ae5f:	add    al,ah
   14004ae61:	(bad)  
   14004ae62:	add    al,0x0
   14004ae64:	xchg   ecx,eax
   14004ae65:	out    0x0,al
   14004ae67:	add    BYTE PTR [rsi-0xbffff1a],ah
   14004ae6d:	(bad)  
   14004ae6e:	add    al,0x0
   14004ae70:	mov    al,0xe6
   14004ae72:	add    BYTE PTR [rax],al
   14004ae74:	mov    edi,0x180000e6
   14004ae79:	adc    al,0x4
   14004ae7b:	add    BYTE PTR [rdi-0x2dffff1a],bh
   14004ae81:	out    0x0,al
   14004ae83:	add    BYTE PTR [rsp+rdx*1],ah
   14004ae86:	add    al,0x0
   14004ae88:	shl    dh,cl
   14004ae8a:	add    BYTE PTR [rax],al
   14004ae8c:	cli    
   14004ae8d:	out    0x0,al
   14004ae8f:	add    BYTE PTR [rax],bh
   14004ae91:	adc    al,0x4
   14004ae93:	add    dl,bh
   14004ae95:	out    0x0,al
   14004ae97:	add    BYTE PTR [rdi+riz*8],bl
   14004ae9a:	add    BYTE PTR [rax],al
   14004ae9c:	rex.WR adc al,0x4
   14004ae9f:	add    BYTE PTR [rdi+riz*8],bl
   14004aea2:	add    BYTE PTR [rax],al
   14004aea4:	sbb    eax,0x5c0000e7
   14004aea9:	adc    al,0x4
   14004aeab:	add    BYTE PTR [rax],ah
   14004aead:	out    0x0,eax
   14004aeaf:	add    BYTE PTR [rcx-0x67ffff19],al
   14004aeb5:	or     BYTE PTR [rax+rax*1],al
   14004aeb8:	nop
   14004aeb9:	out    0x0,eax
   14004aebb:	add    BYTE PTR [rcx-0x3fffff19],bh
   14004aec1:	adc    eax,DWORD PTR [rax+rax*1]
   14004aec4:	mov    ecx,0x7b0000e7
   14004aec9:	call   0x153d8aece
   14004aece:	add    al,0x0
   14004aed0:	jnp    0x14004aeba
   14004aed2:	add    BYTE PTR [rax],al
   14004aed4:	je     0x14004aebf
   14004aed6:	add    BYTE PTR [rax],al
   14004aed8:	call   0x19004b2f0
   14004aedd:	jmp    0x14004aedf
   14004aedf:	add    BYTE PTR [rdx+0x4c0000eb],dl
   14004aee5:	sub    BYTE PTR [rax+rax*1],al
   14004aee8:	in     al,dx
   14004aeea:	add    BYTE PTR [rax],al
   14004aeec:	shr    esp,cl
   14004aeee:	add    BYTE PTR [rax],al
   14004aef0:	fcom   QWORD PTR [rdx]
   14004aef2:	add    al,0x0
   14004aef4:	xor    ch,ch
   14004aef6:	add    BYTE PTR [rax],al
   14004aef8:	mov    bl,0xed
   14004aefa:	add    BYTE PTR [rax],al
   14004aefc:	mov    BYTE PTR [rip+0xffffffffedc00004],al        # 0x12dc4af06
   14004af02:	add    BYTE PTR [rax],al
   14004af04:	imul   ebp,esi,0x304c0000
   14004af0a:	add    al,0x0
   14004af0c:	jo     0x14004aefc
   14004af0e:	add    BYTE PTR [rax],al
   14004af10:	rex.RXB out dx,eax
   14004af12:	add    BYTE PTR [rax],al
   14004af14:	lock adc al,BYTE PTR [rax+rax*1]
   14004af18:	shl    al,1
   14004af1a:	add    BYTE PTR [rax],al
   14004af1c:	icebp  
   14004af1d:	lock add BYTE PTR [rax],al
   14004af20:	in     al,dx
   14004af21:	xor    al,BYTE PTR [rax+rax*1]
   14004af24:	icebp  
   14004af25:	lock add BYTE PTR [rax],al
   14004af28:	push   0xffffffffe00000f1
   14004af2d:	adc    BYTE PTR [rax+rax*1],al
   14004af30:	push   0xffffffff840000f1
   14004af35:	icebp  
   14004af36:	add    BYTE PTR [rax],al
   14004af38:	clc    
   14004af39:	adc    BYTE PTR [rax+rax*1],al
   14004af3c:	test   cl,dh
   14004af3e:	add    BYTE PTR [rax],al
   14004af40:	mov    eax,0xf80000f1
   14004af45:	adc    BYTE PTR [rax+rax*1],al
   14004af48:	mov    eax,0xbe0000f1
   14004af4d:	icebp  
   14004af4e:	add    BYTE PTR [rax],al
   14004af50:	adc    BYTE PTR [rcx],dl
   14004af52:	add    al,0x0
   14004af54:	loopne 0x14004af47
   14004af56:	add    BYTE PTR [rax],al
   14004af58:	or     dl,dh
   14004af5a:	add    BYTE PTR [rax],al
   14004af5c:	xor    al,0x16
   14004af5e:	add    al,0x0
   14004af60:	or     dl,dh
   14004af62:	add    BYTE PTR [rax],al
   14004af64:	jle    0x14004af58
   14004af66:	add    BYTE PTR [rax],al
   14004af68:	rex (bad) 
   14004af6a:	add    al,0x0
   14004af6c:	jle    0x14004af60
   14004af6e:	add    BYTE PTR [rax],al
   14004af70:	cdq    
   14004af71:	repnz add BYTE PTR [rax],al
   14004af74:	push   rsp
   14004af75:	(bad)  
   14004af76:	add    al,0x0
   14004af78:	movabs al,ds:0x380000f33b0000f2
   14004af81:	xor    BYTE PTR [rax+rax*1],al
   14004af84:	rex
   14004af85:	repz add BYTE PTR [rax],al
   14004af88:	(bad)  
   14004af89:	repz add BYTE PTR [rax],al
   14004af8c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004af8d:	or     eax,DWORD PTR [rax+rax*1]
   14004af90:	(bad)  
   14004af91:	repz add BYTE PTR [rax],al
   14004af94:	test   eax,0xf80000f3
   14004af99:	sbb    BYTE PTR [rax+rax*1],al
   14004af9c:	test   eax,0xbc0000f3
   14004afa1:	repz add BYTE PTR [rax],al
   14004afa4:	or     al,0x19
   14004afa6:	add    al,0x0
   14004afa8:	shl    bl,0x0
   14004afab:	add    cl,ah
   14004afad:	repz add BYTE PTR [rax],al
   14004afb0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004afb1:	or     eax,DWORD PTR [rax+rax*1]
   14004afb4:	loope  0x14004afa9
   14004afb6:	add    BYTE PTR [rax],al
   14004afb8:	cs hlt 
   14004afba:	add    BYTE PTR [rax],al
   14004afbc:	mov    al,0x18
   14004afbe:	add    al,0x0
   14004afc0:	cs hlt 
   14004afc2:	add    BYTE PTR [rax],al
   14004afc4:	rex.B hlt 
   14004afc6:	add    BYTE PTR [rax],al
   14004afc8:	(bad)  
   14004afc9:	sbb    BYTE PTR [rax+rax*1],al
   14004afcc:	push   rax
   14004afcd:	hlt    
   14004afce:	add    BYTE PTR [rax],al
   14004afd0:	jno    0x14004afc6
   14004afd2:	add    BYTE PTR [rax],al
   14004afd4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004afd5:	or     eax,DWORD PTR [rax+rax*1]
   14004afd8:	jno    0x14004afce
   14004afda:	add    BYTE PTR [rax],al
   14004afdc:	(bad)
   14004afdf:	add    BYTE PTR [rax+rbx*1+0x4],al
   14004afe3:	add    ch,al
   14004afe5:	hlt    
   14004afe6:	add    BYTE PTR [rax],al
   14004afe8:	cli    
   14004afe9:	hlt    
   14004afea:	add    BYTE PTR [rax],al
   14004afec:	pop    rax
   14004afed:	sbb    BYTE PTR [rax+rax*1],al
   14004aff0:	add    ch,dh
   14004aff2:	add    BYTE PTR [rax],al
   14004aff4:	sbb    dh,ch
   14004aff6:	add    BYTE PTR [rax],al
   14004aff8:	add    BYTE PTR [rsi],dl
   14004affa:	add    al,0x0
   14004affc:	sbb    dh,ch
   14004affe:	add    BYTE PTR [rax],al
   14004b000:	sbb    al,0xf7
   14004b002:	add    BYTE PTR [rax],al
   14004b004:	or     al,0x16
   14004b006:	add    al,0x0
   14004b008:	sbb    al,0xf7
   14004b00a:	add    BYTE PTR [rax],al
   14004b00c:	cmp    al,0xf7
   14004b00e:	add    BYTE PTR [rax],al
   14004b010:	and    al,0x16
   14004b012:	add    al,0x0
   14004b014:	rex test DWORD PTR [rax],0xf7ab00
   14004b01b:	add    BYTE PTR [rax+rsi*1-0x84ffffc],bl
   14004b022:	add    BYTE PTR [rax],al
   14004b024:	or     eax,0x880000f8
   14004b029:	add    eax,0xf8100004
   14004b02e:	add    BYTE PTR [rax],al
   14004b030:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b031:	clc    
   14004b032:	add    BYTE PTR [rax],al
   14004b034:	fsub   QWORD PTR [rsi]
   14004b036:	add    al,0x0
   14004b038:	mov    al,0xf8
   14004b03a:	add    BYTE PTR [rax],al
   14004b03c:	(bad)  
   14004b03d:	stc    
   14004b03e:	add    BYTE PTR [rax],al
   14004b040:	jo     0x14004b055
   14004b042:	add    al,0x0
   14004b044:	loopne 0x14004b03f
   14004b046:	add    BYTE PTR [rax],al
   14004b048:	sbb    bh,dl
   14004b04a:	add    BYTE PTR [rax],al
   14004b04c:	cwde   
   14004b04d:	or     BYTE PTR [rax+rax*1],al
   14004b050:	sbb    bh,dl
   14004b052:	add    BYTE PTR [rax],al
   14004b054:	pop    rbx
   14004b055:	cli    
   14004b056:	add    BYTE PTR [rax],al
   14004b058:	adc    r8,QWORD PTR [rax+rax*1]
   14004b05c:	pop    rbx
   14004b05d:	cli    
   14004b05e:	add    BYTE PTR [rax],al
   14004b060:	xchg   esp,eax
   14004b061:	cli    
   14004b062:	add    BYTE PTR [rax],al
   14004b064:	(bad)  
   14004b065:	adc    eax,DWORD PTR [rax+rax*1]
   14004b068:	movabs al,ds:0x3c0000fb490000fa
   14004b071:	adc    eax,DWORD PTR [rax+rax*1]
   14004b074:	push   rax
   14004b075:	sti    
   14004b076:	add    BYTE PTR [rax],al
   14004b078:	jle    0x14004b075
   14004b07a:	add    BYTE PTR [rax],al
   14004b07c:	loopne 0x14004b095
   14004b07e:	add    al,0x0
   14004b080:	jle    0x14004b07d
   14004b082:	add    BYTE PTR [rax],al
   14004b084:	loop   0x14004b081
   14004b086:	add    BYTE PTR [rax],al
   14004b088:	lock (bad) 
   14004b08a:	add    al,0x0
   14004b08c:	loop   0x14004b089
   14004b08e:	add    BYTE PTR [rax],al
   14004b090:	sbb    bh,ah
   14004b092:	add    BYTE PTR [rax],al
   14004b094:	or     BYTE PTR [rax],bl
   14004b096:	add    al,0x0
   14004b098:	sbb    bh,ah
   14004b09a:	add    BYTE PTR [rax],al
   14004b09c:	sub    eax,0x200000fc
   14004b0a1:	sbb    BYTE PTR [rax+rax*1],al
   14004b0a4:	xor    ah,bh
   14004b0a6:	add    BYTE PTR [rax],al
   14004b0a8:	lock cld 
   14004b0aa:	add    BYTE PTR [rax],al
   14004b0ac:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b0ad:	adc    DWORD PTR [rax+rax*1],eax
   14004b0b0:	lock cld 
   14004b0b2:	add    BYTE PTR [rax],al
   14004b0b4:	sub    edi,ebp
   14004b0b6:	add    BYTE PTR [rax],al
   14004b0b8:	mov    al,0x11
   14004b0ba:	add    al,0x0
   14004b0bc:	sub    edi,ebp
   14004b0be:	add    BYTE PTR [rax],al
   14004b0c0:	rex.XB std 
   14004b0c2:	add    BYTE PTR [rax],al
   14004b0c4:	(bad)  
   14004b0c5:	adc    DWORD PTR [rax+rax*1],eax
   14004b0c8:	rex.XB std 
   14004b0ca:	add    BYTE PTR [rax],al
   14004b0cc:	ins    BYTE PTR es:[rdi],dx
   14004b0cd:	std    
   14004b0ce:	add    BYTE PTR [rax],al
   14004b0d0:	(bad)  
   14004b0d1:	adc    DWORD PTR [rax+rax*1],eax
   14004b0d4:	ins    BYTE PTR es:[rdi],dx
   14004b0d5:	std    
   14004b0d6:	add    BYTE PTR [rax],al
   14004b0d8:	(bad)  
   14004b0d9:	std    
   14004b0da:	add    BYTE PTR [rax],al
   14004b0dc:	(bad)  
   14004b0dd:	adc    DWORD PTR [rax+rax*1],eax
   14004b0e0:	(bad)  
   14004b0e1:	std    
   14004b0e2:	add    BYTE PTR [rax],al
   14004b0e4:	(bad)  
   14004b0e5:	inc    BYTE PTR [rax]
   14004b0e7:	add    ah,al
   14004b0e9:	adc    DWORD PTR [rax+rax*1],eax
   14004b0ec:	(bad)  
   14004b0ed:	inc    BYTE PTR [rax]
   14004b0ef:	add    BYTE PTR [rbx-0x3bffff02],dl
   14004b0f5:	adc    DWORD PTR [rax+rax*1],eax
   14004b0f8:	xchg   ebx,eax
   14004b0f9:	inc    BYTE PTR [rax]
   14004b0fb:	add    cl,al
   14004b0fd:	inc    BYTE PTR [rax]
   14004b0ff:	add    ah,al
   14004b101:	adc    DWORD PTR [rax+rax*1],eax
   14004b104:	sar    esi,0x0
   14004b107:	add    al,dl
   14004b109:	inc    BYTE PTR [rax]
   14004b10b:	add    ah,al
   14004b10d:	adc    DWORD PTR [rax+rax*1],eax
   14004b110:	sar    dh,1
   14004b112:	add    BYTE PTR [rax],al
   14004b114:	hlt    
   14004b115:	inc    BYTE PTR [rax]
   14004b117:	add    al,bl
   14004b119:	adc    DWORD PTR [rax+rax*1],eax
   14004b11c:	and    bh,bh
   14004b11e:	add    BYTE PTR [rax],al
   14004b120:	xor    al,0x0
   14004b122:	add    DWORD PTR [rax],eax
   14004b124:	or     BYTE PTR [rip+0x400004],dl        # 0x14044b12e
   14004b12a:	add    DWORD PTR [rax],eax
   14004b12c:	xchg   edi,eax
   14004b12d:	add    DWORD PTR [rcx],eax
   14004b12f:	add    BYTE PTR [rax+rsi*1+0x1a00004],bl
   14004b136:	add    DWORD PTR [rax],eax
   14004b138:	add    r8d,DWORD PTR [rcx]
   14004b13b:	add    BYTE PTR [rbp+rdx*1+0x4],bh
   14004b13f:	add    BYTE PTR [rax+0x3],dl
   14004b142:	add    DWORD PTR [rax],eax
   14004b144:	mov    edx,0x40000103
   14004b149:	adc    al,BYTE PTR [rax+rax*1]
   14004b14c:	mov    edx,0x6d000103
   14004b151:	add    al,0x1
   14004b153:	add    BYTE PTR [rdx+rdx*1+0x4],cl
   14004b157:	add    BYTE PTR [rbp+0x4],ch
   14004b15a:	add    DWORD PTR [rax],eax
   14004b15c:	test   BYTE PTR [rcx+rax*1],0x0
   14004b160:	adc    al,BYTE PTR fs:[rax+rax*1]
   14004b164:	test   BYTE PTR [rcx+rax*1],0x0
   14004b168:	and    eax,DWORD PTR [rip+0x12740001]        # 0x15278b16f
   14004b16e:	add    al,0x0
   14004b170:	and    eax,DWORD PTR [rip+0x6050001]        # 0x14609b177
   14004b176:	add    DWORD PTR [rax],eax
   14004b178:	mov    BYTE PTR [rdx],dl
   14004b17a:	add    al,0x0
   14004b17c:	adc    BYTE PTR [rsi],al
   14004b17e:	add    DWORD PTR [rax],eax
   14004b180:	ss (bad) 
   14004b182:	add    DWORD PTR [rax],eax
   14004b184:	sub    al,0x1b
   14004b186:	add    al,0x0
   14004b188:	ss (bad) 
   14004b18a:	add    DWORD PTR [rax],eax
   14004b18c:	mov    al,BYTE PTR [rsi]
   14004b18e:	add    DWORD PTR [rax],eax
   14004b190:	sbb    al,0x19
   14004b192:	add    al,0x0
   14004b194:	mov    al,BYTE PTR [rsi]
   14004b196:	add    DWORD PTR [rax],eax
   14004b198:	and    BYTE PTR [rdi],al
   14004b19a:	add    DWORD PTR [rax],eax
   14004b19c:	xor    BYTE PTR [rcx],bl
   14004b19e:	add    al,0x0
   14004b1a0:	and    BYTE PTR [rdi],al
   14004b1a2:	add    DWORD PTR [rax],eax
   14004b1a4:	rex.RX (bad) 
   14004b1a6:	add    DWORD PTR [rax],eax
   14004b1a8:	sub    al,0x1b
   14004b1aa:	add    al,0x0
   14004b1ac:	rex.RX (bad) 
   14004b1ae:	add    DWORD PTR [rax],eax
   14004b1b0:	sahf   
   14004b1b1:	(bad)  
   14004b1b2:	add    DWORD PTR [rax],eax
   14004b1b4:	(bad)  
   14004b1b5:	sbb    BYTE PTR [rax+rax*1],al
   14004b1b8:	sahf   
   14004b1b9:	(bad)  
   14004b1ba:	add    DWORD PTR [rax],eax
   14004b1bc:	cmp    BYTE PTR [rax],cl
   14004b1be:	add    DWORD PTR [rax],eax
   14004b1c0:	call   0x18004b5dd
   14004b1c5:	or     BYTE PTR [rcx],al
   14004b1c7:	add    BYTE PTR [rsi+0x8],ah
   14004b1ca:	add    DWORD PTR [rax],eax
   14004b1cc:	sub    al,0x1b
   14004b1ce:	add    al,0x0
   14004b1d0:	data16 or BYTE PTR [rcx],al
   14004b1d3:	add    BYTE PTR [rsi-0x73fffef8],bh
   14004b1d9:	sbb    BYTE PTR [rax+rax*1],al
   14004b1dc:	mov    esi,0x58000108
   14004b1e1:	or     DWORD PTR [rcx],eax
   14004b1e3:	add    BYTE PTR [rax+0x60000418],ah
   14004b1e9:	or     DWORD PTR [rcx],eax
   14004b1eb:	add    BYTE PTR [rbp+0xb],dl
   14004b1ee:	add    DWORD PTR [rax],eax
   14004b1f0:	clc    
   14004b1f1:	adc    eax,DWORD PTR [rax+rax*1]
   14004b1f4:	(bad)  
   14004b1f5:	or     eax,DWORD PTR [rcx]
   14004b1f7:	add    BYTE PTR [rdx+0x3800010c],bl
   14004b1fd:	xor    BYTE PTR [rax+rax*1],al
   14004b200:	movabs al,ds:0x3000010e1900010c
   14004b209:	sbb    BYTE PTR [rax+rax*1],al
   14004b20c:	ror    BYTE PTR [rsi],1
   14004b20e:	add    DWORD PTR [rax],eax
   14004b210:	fimul  DWORD PTR [rsi]
   14004b212:	add    DWORD PTR [rax],eax
   14004b214:	sub    BYTE PTR [rip+0xeda0004],dl        # 0x14edeb21e
   14004b21a:	add    DWORD PTR [rax],eax
   14004b21c:	sub    DWORD PTR [rdi],ecx
   14004b21e:	add    DWORD PTR [rax],eax
   14004b220:	xor    al,0x15
   14004b222:	add    al,0x0
   14004b224:	sub    DWORD PTR [rdi],ecx
   14004b226:	add    DWORD PTR [rax],eax
   14004b228:	pop    rcx
   14004b229:	sgdt   [rax]
   14004b22c:	adc    rax,0xf590004
   14004b232:	add    DWORD PTR [rax],eax
   14004b234:	push   0xf
   14004b236:	add    DWORD PTR [rax],eax
   14004b238:	pop    rsp
   14004b239:	adc    eax,0xf6a0004
   14004b23e:	add    DWORD PTR [rax],eax
   14004b240:	xchg   ebp,eax
   14004b241:	sgdt   [rax]
   14004b244:	ins    BYTE PTR es:[rdi],dx
   14004b245:	adc    eax,0xfa00004
   14004b24a:	add    DWORD PTR [rax],eax
   14004b24c:	cmc    
   14004b24d:	sgdt   [rax]
   14004b250:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004b254:	adc    BYTE PTR [rcx],al
   14004b257:	add    BYTE PTR [rcx+0x4000110],bl
   14004b25d:	adc    eax,DWORD PTR [rax+rax*1]
   14004b260:	cdq    
   14004b261:	adc    BYTE PTR [rcx],al
   14004b263:	add    BYTE PTR [rdx+0x11],cl
   14004b266:	add    DWORD PTR [rax],eax
   14004b268:	adc    al,0x13
   14004b26a:	add    al,0x0
   14004b26c:	rex.WX adc QWORD PTR [rcx],rax
   14004b26f:	add    BYTE PTR [rcx+0x11],ah
   14004b272:	add    DWORD PTR [rax],eax
   14004b274:	sub    BYTE PTR [rbx],dl
   14004b276:	add    al,0x0
   14004b278:	adc    BYTE PTR [rcx],0x1
   14004b27b:	add    ch,dl
   14004b27d:	adc    DWORD PTR [rcx],eax
   14004b27f:	add    BYTE PTR [rax],al
   14004b281:	sub    eax,DWORD PTR [rax+rax*1]
   14004b284:	(bad)  
   14004b285:	adc    DWORD PTR [rcx],eax
   14004b287:	add    BYTE PTR [rip+0xffffffffb8000112],dl        # 0xf804b39f
   14004b28d:	adc    eax,0x12150004
   14004b292:	add    DWORD PTR [rax],eax
   14004b294:	movabs eax,ds:0xb0000415cc000112
   14004b29d:	adc    al,BYTE PTR [rcx]
   14004b29f:	add    BYTE PTR [rbx+rdx*1],al
   14004b2a2:	add    DWORD PTR [rax],eax
   14004b2a4:	add    BYTE PTR [rbx],ch
   14004b2a6:	add    al,0x0
   14004b2a8:	add    al,0x13
   14004b2aa:	add    DWORD PTR [rax],eax
   14004b2ac:	adc    r8d,DWORD PTR [r9]
   14004b2af:	add    ah,bl
   14004b2b1:	adc    eax,0x13450004
   14004b2b6:	add    DWORD PTR [rax],eax
   14004b2b8:	rcl    DWORD PTR [rbx],cl
   14004b2ba:	add    DWORD PTR [rax],eax
   14004b2bc:	lock adc eax,0x14000004
   14004b2c2:	add    DWORD PTR [rax],eax
   14004b2c4:	push   0x14
   14004b2c6:	add    DWORD PTR [rax],eax
   14004b2c8:	mov    BYTE PTR [rip+0x14700004],al        # 0x15474b2d2
   14004b2ce:	add    DWORD PTR [rax],eax
   14004b2d0:	xchg   esi,eax
   14004b2d1:	adc    al,0x1
   14004b2d3:	add    BYTE PTR [rax-0x5ffffbfb],cl
   14004b2d9:	adc    al,0x1
   14004b2db:	add    al,cl
   14004b2dd:	adc    al,0x1
   14004b2df:	add    BYTE PTR [rsp+rbp*1],bl
   14004b2e2:	add    al,0x0
   14004b2e4:	xor    BYTE PTR [rip+0x15560001],dl        # 0x1555ab2eb
   14004b2ea:	add    DWORD PTR [rax],eax
   14004b2ec:	mov    BYTE PTR [rip+0x15600004],al        # 0x15564b2f6
   14004b2f2:	add    DWORD PTR [rax],eax
   14004b2f4:	xchg   BYTE PTR [rip+0x5880001],dl        # 0x1458cb2fb
   14004b2fa:	add    al,0x0
   14004b2fc:	nop
   14004b2fd:	adc    eax,0x15a50001
   14004b302:	add    DWORD PTR [rax],eax
   14004b304:	in     al,dx
   14004b305:	xor    al,BYTE PTR [rax+rax*1]
   14004b308:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004b309:	adc    eax,0x15d30001
   14004b30e:	add    DWORD PTR [rax],eax
   14004b310:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b311:	adc    al,BYTE PTR [rax+rax*1]
   14004b314:	rcl    DWORD PTR [rip+0x15f60001],cl        # 0x155fab31b
   14004b31a:	add    DWORD PTR [rax],eax
   14004b31c:	mov    eax,0xf6000412
   14004b321:	adc    eax,0x160b0001
   14004b326:	add    DWORD PTR [rax],eax
   14004b328:	int3   
   14004b329:	adc    al,BYTE PTR [rax+rax*1]
   14004b32c:	adc    BYTE PTR [rsi],dl
   14004b32e:	add    DWORD PTR [rax],eax
   14004b330:	rex.R (bad) 
   14004b332:	add    DWORD PTR [rax],eax
   14004b334:	mov    BYTE PTR [rip+0x16500004],al        # 0x15654b33e
   14004b33a:	add    DWORD PTR [rax],eax
   14004b33c:	adc    DWORD PTR [rsi],0x5880001
   14004b342:	add    al,0x0
   14004b344:	nop
   14004b345:	(bad)  
   14004b346:	add    DWORD PTR [rax],eax
   14004b348:	mov    cl,0x16
   14004b34a:	add    DWORD PTR [rax],eax
   14004b34c:	cwde   
   14004b34d:	or     BYTE PTR [rax+rax*1],al
   14004b350:	rcl    BYTE PTR [rsi],0x1
   14004b353:	add    BYTE PTR [rbp-0x63fffee9],al
   14004b359:	xor    BYTE PTR [rax+rax*1],al
   14004b35c:	nop
   14004b35d:	(bad)  
   14004b35e:	add    DWORD PTR [rax],eax
   14004b360:	rcl    DWORD PTR [rdi],1
   14004b362:	add    DWORD PTR [rax],eax
   14004b364:	pushf  
   14004b365:	xor    BYTE PTR [rax+rax*1],al
   14004b368:	add    BYTE PTR [rax],bl
   14004b36a:	add    DWORD PTR [rax],eax
   14004b36c:	sbb    BYTE PTR es:[rcx],al
   14004b36f:	add    BYTE PTR [rax+0x30000405],cl
   14004b375:	sbb    BYTE PTR [rcx],al
   14004b377:	add    BYTE PTR [rsi+0x18],dl
   14004b37a:	add    DWORD PTR [rax],eax
   14004b37c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004b380:	(bad)  
   14004b381:	sbb    BYTE PTR [rcx],al
   14004b383:	add    BYTE PTR [rcx+rbx*1+0x1],bh
   14004b387:	add    BYTE PTR [rax+0x19],al
   14004b38a:	add    al,0x0
   14004b38c:	sbb    BYTE PTR [rcx],0x1
   14004b38f:	add    BYTE PTR [rax+riz*1],bl
   14004b392:	add    DWORD PTR [rax],eax
   14004b394:	pop    rax
   14004b395:	sbb    DWORD PTR [rax+rax*1],eax
   14004b398:	and    BYTE PTR [rax],ah
   14004b39a:	add    DWORD PTR [rax],eax
   14004b39c:	pop    rax
   14004b39d:	and    BYTE PTR [rcx],al
   14004b39f:	add    BYTE PTR [rax+0x60000408],bl
   14004b3a5:	and    BYTE PTR [rcx],al
   14004b3a7:	add    BYTE PTR [rdx-0x5bfffee0],bh
   14004b3ad:	sbb    eax,DWORD PTR [rax+rax*1]
   14004b3b0:	mov    edx,0x16000120
   14004b3b5:	and    eax,DWORD PTR [rcx]
   14004b3b7:	add    BYTE PTR [rax+0x1600041b],bh
   14004b3bd:	and    eax,DWORD PTR [rcx]
   14004b3bf:	add    BYTE PTR [rbx+riz*1+0x1bcc0001],ah
   14004b3c6:	add    al,0x0
   14004b3c8:	mov    al,0x23
   14004b3ca:	add    DWORD PTR [rax],eax
   14004b3cc:	add    BYTE PTR [rsi],ah
   14004b3ce:	add    DWORD PTR [rax],eax
   14004b3d0:	cmp    BYTE PTR [rax],dh
   14004b3d2:	add    al,0x0
   14004b3d4:	add    BYTE PTR [rsi],ah
   14004b3d6:	add    DWORD PTR [rax],eax
   14004b3d8:	ins    BYTE PTR es:[rdi],dx
   14004b3d9:	add    DWORD PTR es:[rax],eax
   14004b3dc:	rcl    BYTE PTR [rbx],0x4
   14004b3df:	add    BYTE PTR [rsi+riz*1+0x1],ch
   14004b3e3:	add    al,al
   14004b3e5:	(bad)  
   14004b3e6:	add    DWORD PTR [rax],eax
   14004b3e8:	push   rax
   14004b3e9:	sbb    al,0x4
   14004b3eb:	add    al,al
   14004b3ed:	(bad)  
   14004b3ee:	add    DWORD PTR [rax],eax
   14004b3f0:	push   rax
   14004b3f1:	sub    BYTE PTR [rcx],al
   14004b3f3:	add    BYTE PTR [rsp+rbx*1+0x4],ah
   14004b3f7:	add    BYTE PTR [rax+0x28],dl
   14004b3fa:	add    DWORD PTR [rax],eax
   14004b3fc:	sub    BYTE PTR [ecx],al
   14004b3ff:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004b403:	add    BYTE PTR [rdi+0x28],ah
   14004b406:	add    DWORD PTR [rax],eax
   14004b408:	pushf  
   14004b409:	sub    BYTE PTR [rcx],al
   14004b40b:	add    BYTE PTR [rsp+rbx*1+0x4],dh
   14004b40f:	add    BYTE PTR [rax+rbp*1+0x28a10001],bl
   14004b416:	add    DWORD PTR [rax],eax
   14004b418:	mov    BYTE PTR [rsp+rax*1],bl
   14004b41b:	add    BYTE PTR [rax-0x38fffed8],dh
   14004b421:	sub    BYTE PTR [rcx],al
   14004b423:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004b427:	add    bh,al
   14004b429:	sub    BYTE PTR [rcx],al
   14004b42b:	add    ah,bh
   14004b42d:	sub    BYTE PTR [rcx],al
   14004b42f:	add    BYTE PTR [rsp+rbx*1+0x28fc0004],bh
   14004b436:	add    DWORD PTR [rax],eax
   14004b438:	add    DWORD PTR [rcx],ebp
   14004b43a:	add    DWORD PTR [rax],eax
   14004b43c:	rcr    BYTE PTR [rsp+rax*1],1
   14004b43f:	add    BYTE PTR [rax],dl
   14004b441:	sub    DWORD PTR [rcx],eax
   14004b443:	add    BYTE PTR [rdi],ah
   14004b445:	sub    DWORD PTR [rcx],eax
   14004b447:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004b44b:	add    BYTE PTR [rdi],ah
   14004b44d:	sub    DWORD PTR [rcx],eax
   14004b44f:	add    BYTE PTR [rcx+rbp*1+0x1],bl
   14004b453:	add    BYTE PTR [rax+0x5c00041c],bl
   14004b459:	sub    DWORD PTR [rcx],eax
   14004b45b:	add    BYTE PTR [rcx+0x29],ah
   14004b45e:	add    DWORD PTR [rax],eax
   14004b460:	lods   al,BYTE PTR ds:[rsi]
   14004b461:	sbb    al,0x4
   14004b463:	add    BYTE PTR [rax+0x29],dh
   14004b466:	add    DWORD PTR [rax],eax
   14004b468:	pop    rbx
   14004b469:	sub    eax,DWORD PTR [rcx]
   14004b46b:	add    BYTE PTR [rax+0x6000041b],cl
   14004b471:	sub    eax,DWORD PTR [rcx]
   14004b473:	add    BYTE PTR [rbp*1+0x1c340001],al
   14004b47a:	add    al,0x0
   14004b47c:	adc    BYTE PTR [rip+0x2d850001],ch        # 0x16d89b483
   14004b482:	add    DWORD PTR [rax],eax
   14004b484:	cmp    BYTE PTR [rax],dh
   14004b486:	add    al,0x0
   14004b488:	nop
   14004b489:	sub    eax,0x2e050001
   14004b48e:	add    DWORD PTR [rax],eax
   14004b490:	cmp    BYTE PTR [rax],dh
   14004b492:	add    al,0x0
   14004b494:	adc    BYTE PTR [rsi],ch
   14004b496:	add    DWORD PTR [rax],eax
   14004b498:	retf   
   14004b499:	add    DWORD PTR cs:[rax],eax
   14004b49c:	or     BYTE PTR [rip+0x2ed00004],dl        # 0x16ed4b4a6
   14004b4a2:	add    DWORD PTR [rax],eax
   14004b4a4:	rex.R (bad) 
   14004b4a6:	add    DWORD PTR [rax],eax
   14004b4a8:	cmp    BYTE PTR [rax],dh
   14004b4aa:	add    al,0x0
   14004b4ac:	push   rax
   14004b4ad:	(bad)  
   14004b4ae:	add    DWORD PTR [rax],eax
   14004b4b0:	shr    DWORD PTR [rdi],1
   14004b4b2:	add    DWORD PTR [rax],eax
   14004b4b4:	sbb    BYTE PTR [rbx],0x4
   14004b4b7:	add    al,ah
   14004b4b9:	(bad)  
   14004b4ba:	add    DWORD PTR [rax],eax
   14004b4bc:	or     eax,0xbc000130
   14004b4c1:	sbb    DWORD PTR [rax+rax*1],eax
   14004b4c4:	or     eax,0x90000130
   14004b4c9:	xor    BYTE PTR [rcx],al
   14004b4cb:	add    ah,cl
   14004b4cd:	sbb    DWORD PTR [rax+rax*1],eax
   14004b4d0:	nop
   14004b4d1:	xor    BYTE PTR [rcx],al
   14004b4d3:	add    BYTE PTR [rbx-0x17fffed0],ah
   14004b4d9:	sbb    DWORD PTR [rax+rax*1],eax
   14004b4dc:	mov    al,0x30
   14004b4de:	add    DWORD PTR [rax],eax
   14004b4e0:	xor    esi,DWORD PTR [rbx]
   14004b4e2:	add    DWORD PTR [rax],eax
   14004b4e4:	(bad)  
   14004b4e5:	sbb    eax,DWORD PTR [rax+rax*1]
   14004b4e8:	rex xor eax,DWORD PTR [rcx]
   14004b4eb:	add    BYTE PTR [rcx],bl
   14004b4ed:	xor    al,0x1
   14004b4ef:	add    BYTE PTR [rcx+rbx*1+0x34200004],ch
   14004b4f6:	add    DWORD PTR [rax],eax
   14004b4f8:	rex.B xor al,0x1
   14004b4fb:	add    ah,ch
   14004b4fd:	xor    al,BYTE PTR [rax+rax*1]
   14004b500:	rex.B xor al,0x1
   14004b503:	add    BYTE PTR [rsp+rsi*1+0x196c0001],bh
   14004b50a:	add    al,0x0
   14004b50c:	mov    esp,0xdc000134
   14004b511:	xor    al,0x1
   14004b513:	add    BYTE PTR [rcx+rbx*1+0x34dc0004],al
   14004b51a:	add    DWORD PTR [rax],eax
   14004b51c:	sbb    BYTE PTR [rip+0x19840001],dh        # 0x15988b523
   14004b522:	add    al,0x0
   14004b524:	sbb    BYTE PTR [rip+0x351e0001],dh        # 0x17522b52b
   14004b52a:	add    DWORD PTR [rax],eax
   14004b52c:	pushf  
   14004b52d:	sbb    DWORD PTR [rax+rax*1],eax
   14004b530:	and    BYTE PTR [rip+0x357e0001],dh        # 0x17582b537
   14004b536:	add    DWORD PTR [rax],eax
   14004b538:	pushf  
   14004b539:	xor    BYTE PTR [rax+rax*1],al
   14004b53c:	xor    BYTE PTR [rip+0x35910001],0x1        # 0x17595b544
   14004b543:	add    ah,bl
   14004b545:	sbb    eax,DWORD PTR [rax+rax*1]
   14004b548:	xchg   ecx,eax
   14004b549:	xor    eax,0x35fc0001
   14004b54e:	add    DWORD PTR [rax],eax
   14004b550:	(bad)  
   14004b551:	sbb    al,BYTE PTR [rax+rax*1]
   14004b554:	cld    
   14004b555:	xor    eax,0x36d60001
   14004b55a:	add    DWORD PTR [rax],eax
   14004b55c:	in     al,dx
   14004b55d:	sbb    al,BYTE PTR [rax+rax*1]
   14004b560:	(bad)  
   14004b561:	add    DWORD PTR ss:[rax],eax
   14004b564:	cli    
   14004b565:	add    DWORD PTR ss:[rax],eax
   14004b568:	add    al,0x1b
   14004b56a:	add    al,0x0
   14004b56c:	cli    
   14004b56d:	add    DWORD PTR ss:[rax],eax
   14004b570:	ins    DWORD PTR es:[rdi],dx
   14004b571:	(bad)  
   14004b572:	add    DWORD PTR [rax],eax
   14004b574:	adc    al,0x1b
   14004b576:	add    al,0x0
   14004b578:	jo     0x14004b5b1
   14004b57a:	add    DWORD PTR [rax],eax
   14004b57c:	(bad)  
   14004b57d:	cmp    BYTE PTR [rcx],al
   14004b57f:	add    al,cl
   14004b581:	sbb    al,BYTE PTR [rax+rax*1]
   14004b584:	adc    BYTE PTR [rax],bh
   14004b586:	add    DWORD PTR [rax],eax
   14004b588:	out    0x38,eax
   14004b58a:	add    DWORD PTR [rax],eax
   14004b58c:	lods   al,BYTE PTR ds:[rsi]
   14004b58d:	sbb    DWORD PTR [rax+rax*1],eax
   14004b590:	lock cmp BYTE PTR [rcx],al
   14004b593:	add    BYTE PTR [rdx+0x39],ah
   14004b596:	add    DWORD PTR [rax],eax
   14004b598:	and    al,0x1b
   14004b59a:	add    al,0x0
   14004b59c:	jo     0x14004b5d7
   14004b59e:	add    DWORD PTR [rax],eax
   14004b5a0:	(bad)  
   14004b5a1:	cmp    DWORD PTR [rcx],eax
   14004b5a3:	add    al,bh
   14004b5a5:	sbb    DWORD PTR [rax+rax*1],eax
   14004b5a8:	(bad)  
   14004b5a9:	cmp    DWORD PTR [rcx],eax
   14004b5ab:	add    dl,bh
   14004b5ad:	cmp    al,BYTE PTR [rcx]
   14004b5af:	add    BYTE PTR [rdx+rbx*1],al
   14004b5b2:	add    al,0x0
   14004b5b4:	cli    
   14004b5b5:	cmp    al,BYTE PTR [rcx]
   14004b5b7:	add    bh,bl
   14004b5b9:	cmp    eax,DWORD PTR [rcx]
   14004b5bb:	add    BYTE PTR [rdx+rbx*1],ah
   14004b5be:	add    al,0x0
   14004b5c0:	fistp  QWORD PTR [rbx]
   14004b5c2:	add    DWORD PTR [rax],eax
   14004b5c4:	(bad)  
   14004b5c5:	cmp    al,0x1
   14004b5c7:	add    BYTE PTR [rdx+rbx*1],bh
   14004b5ca:	add    al,0x0
   14004b5cc:	(bad)  
   14004b5cd:	cmp    al,0x1
   14004b5cf:	add    BYTE PTR [rdx+0x3c],bh
   14004b5d2:	add    DWORD PTR [rax],eax
   14004b5d4:	rex.WR sbb r8b,BYTE PTR [rax+rax*1]
   14004b5d8:	cmp    BYTE PTR [rcx+rax*1],0x0
   14004b5dc:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b5dd:	cmp    al,0x1
   14004b5df:	add    BYTE PTR [rbx+rbx*1],ch
   14004b5e2:	add    al,0x0
   14004b5e4:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004b5e5:	cmp    al,0x1
   14004b5e7:	add    dh,bh
   14004b5e9:	cmp    al,0x1
   14004b5eb:	add    BYTE PTR [rbx+rbx*1],bh
   14004b5ee:	add    al,0x0
   14004b5f0:	(bad)  
   14004b5f1:	cmp    al,0x1
   14004b5f3:	add    BYTE PTR [rax+0x5000013d],bl
   14004b5f9:	sbb    eax,DWORD PTR [rax+rax*1]
   14004b5fc:	movabs al,ds:0x5c000140ac00013d
   14004b605:	sbb    al,BYTE PTR [rax+rax*1]
   14004b608:	mov    al,0x40
   14004b60a:	add    DWORD PTR [rax],eax
   14004b60c:	mov    esi,0x70000140
   14004b611:	sbb    al,BYTE PTR [rax+rax*1]
   14004b614:	mov    esi,0xeb000140
   14004b619:	rex add DWORD PTR [rax],eax
   14004b61c:	jl     0x14004b638
   14004b61e:	add    al,0x0
   14004b620:	jmp    0x14004b662
   14004b622:	add    DWORD PTR [rax],eax
   14004b624:	cli    
   14004b625:	add    DWORD PTR [r8],eax
   14004b628:	nop
   14004b629:	sbb    al,BYTE PTR [rax+rax*1]
   14004b62c:	cli    
   14004b62d:	add    DWORD PTR [r8],eax
   14004b630:	adc    al,0x42
   14004b632:	add    DWORD PTR [rax],eax
   14004b634:	test   al,0x1a
   14004b636:	add    al,0x0
   14004b638:	adc    al,0x42
   14004b63a:	add    DWORD PTR [rax],eax
   14004b63c:	add    BYTE PTR [rdx+0x1],0x0
   14004b640:	mov    eax,0x8000041a
   14004b645:	rex.X add DWORD PTR [rax],eax
   14004b648:	mov    al,BYTE PTR [rdx+0x1]
   14004b64b:	add    ah,bl
   14004b64d:	sbb    eax,DWORD PTR [rax+rax*1]
   14004b650:	mov    al,BYTE PTR [rdx+0x1]
   14004b653:	add    BYTE PTR [rdx+rax*2+0x1be40001],dh
   14004b65a:	add    al,0x0
   14004b65c:	mov    ah,0x42
   14004b65e:	add    DWORD PTR [rax],eax
   14004b660:	and    al,0x43
   14004b662:	add    DWORD PTR [rax],eax
   14004b664:	cld    
   14004b665:	sbb    eax,DWORD PTR [rax+rax*1]
   14004b668:	and    al,0x43
   14004b66a:	add    DWORD PTR [rax],eax
   14004b66c:	rex.W
   14004b66d:	rex.XB add DWORD PTR [r8],eax
   14004b670:	adc    al,0x1c
   14004b672:	add    al,0x0
   14004b674:	rex.W
   14004b675:	rex.XB add DWORD PTR [r8],eax
   14004b678:	mov    ebx,0x24000143
   14004b67d:	sbb    al,0x4
   14004b67f:	add    al,al
   14004b681:	rex.XB add DWORD PTR [r8],eax
   14004b684:	sub    eax,DWORD PTR [rcx+rax*1+0x0]
   14004b688:	fsub   QWORD PTR [rsi]
   14004b68a:	add    al,0x0
   14004b68c:	xor    BYTE PTR [rcx+rax*1+0x0],al
   14004b690:	movabs eax,ds:0xb000040588000144
   14004b699:	add    DWORD PTR [rax],r8d
   14004b69c:	(bad)  
   14004b69d:	add    DWORD PTR [rax],r8d
   14004b6a0:	loopne 0x14004b6be
   14004b6a2:	add    al,0x0
   14004b6a4:	(bad)  
   14004b6a5:	add    DWORD PTR [rax],r8d
   14004b6a8:	out    dx,al
   14004b6a9:	add    DWORD PTR [rax],r8d
   14004b6ac:	in     al,dx
   14004b6ad:	sbb    al,0x4
   14004b6af:	add    dh,ch
   14004b6b1:	add    DWORD PTR [rax],r8d
   14004b6b4:	cmp    al,BYTE PTR [rbp+0x1]
   14004b6b7:	add    BYTE PTR [rax],al
   14004b6b9:	sbb    eax,0x45400004
   14004b6be:	add    DWORD PTR [rax],eax
   14004b6c0:	push   rdi
   14004b6c1:	add    DWORD PTR [r8],r8d
   14004b6c4:	cmp    al,0x23
   14004b6c6:	add    al,0x0
   14004b6c8:	(bad)  
   14004b6c9:	add    DWORD PTR [r8],r8d
   14004b6cc:	jae    0x14004b713
   14004b6ce:	add    DWORD PTR [rax],eax
   14004b6d0:	cld    
   14004b6d1:	(bad)  
   14004b6d2:	add    al,0x0
   14004b6d4:	jae    0x14004b71b
   14004b6d6:	add    DWORD PTR [rax],eax
   14004b6d8:	(bad)  
   14004b6d9:	add    DWORD PTR [r8],r8d
   14004b6dc:	or     BYTE PTR [rdi],bl
   14004b6de:	add    al,0x0
   14004b6e0:	(bad)  
   14004b6e1:	add    DWORD PTR [r8],r8d
   14004b6e4:	rex.W
   14004b6e5:	rex.RX add DWORD PTR [rax],r8d
   14004b6e8:	sub    BYTE PTR [rdi],bl
   14004b6ea:	add    al,0x0
   14004b6ec:	rex.W
   14004b6ed:	rex.RX add DWORD PTR [rax],r8d
   14004b6f0:	(bad)
   14004b6f3:	add    BYTE PTR [rdi+rbx*1],bh
   14004b6f6:	add    al,0x0
   14004b6f8:	(bad)
   14004b6fb:	add    BYTE PTR [rdx],cl
   14004b6fd:	rex.RXB add DWORD PTR [r8],r8d
   14004b700:	pop    rsp
   14004b701:	(bad)  
   14004b702:	add    al,0x0
   14004b704:	or     al,BYTE PTR [rdi+0x1]
   14004b707:	add    BYTE PTR [rcx+0x4c000147],al
   14004b70d:	(bad)  
   14004b70e:	add    al,0x0
   14004b710:	add    DWORD PTR [rdi+0x1],0x147e200
   14004b717:	add    BYTE PTR [rdi+rbx*1+0x4],bl
   14004b71b:	add    al,dh
   14004b71d:	rex.RXB add DWORD PTR [r8],r8d
   14004b720:	push   0x3c000148
   14004b725:	and    eax,DWORD PTR [rax+rax*1]
   14004b728:	jo     0x14004b772
   14004b72a:	add    DWORD PTR [rax],eax
   14004b72c:	cdq    
   14004b72d:	add    QWORD PTR [rax],rax
   14004b730:	sub    al,0x1b
   14004b732:	add    al,0x0
   14004b734:	cdq    
   14004b735:	add    QWORD PTR [rax],rax
   14004b738:	repnz add QWORD PTR [rax],rax
   14004b73c:	xor    al,0x1d
   14004b73e:	add    al,0x0
   14004b740:	repnz add QWORD PTR [rax],rax
   14004b744:	mov    cs,WORD PTR [rcx+0x1]
   14004b747:	add    BYTE PTR [rax+0x1d],cl
   14004b74a:	add    al,0x0
   14004b74c:	nop
   14004b74d:	add    QWORD PTR [r8],rax
   14004b750:	(bad)  
   14004b751:	add    QWORD PTR [r8],rax
   14004b754:	in     al,dx
   14004b755:	sbb    eax,0x49d60004
   14004b75a:	add    DWORD PTR [rax],eax
   14004b75c:	xchg   ebx,eax
   14004b75d:	rex.WX add QWORD PTR [rax],rax
   14004b760:	add    BYTE PTR [rsi],bl
   14004b762:	add    al,0x0
   14004b764:	xchg   ebx,eax
   14004b765:	rex.WX add QWORD PTR [rax],rax
   14004b768:	test   eax,0x1800014a
   14004b76d:	(bad)  
   14004b76e:	add    al,0x0
   14004b770:	test   eax,0xe400014a
   14004b775:	rex.WX add QWORD PTR [rax],rax
   14004b778:	sub    BYTE PTR [rsi],bl
   14004b77a:	add    al,0x0
   14004b77c:	lock rex.WX add QWORD PTR [rax],rax
   14004b780:	imul   ecx,DWORD PTR [rbx+0x1],0x41e4000
   14004b787:	add    BYTE PTR [rcx+0x4b],ch
   14004b78a:	add    DWORD PTR [rax],eax
   14004b78c:	jnp    0x14004b7d9
   14004b78e:	add    DWORD PTR [rax],eax
   14004b790:	push   rsp
   14004b791:	(bad)  
   14004b792:	add    al,0x0
   14004b794:	jnp    0x14004b7e1
   14004b796:	add    DWORD PTR [rax],eax
   14004b798:	cli    
   14004b799:	add    QWORD PTR [rax],r8
   14004b79c:	push   0xfffffffffa00041e
   14004b7a1:	add    QWORD PTR [rax],r8
   14004b7a4:	and    BYTE PTR [rbp+0x1],cl
   14004b7a7:	add    BYTE PTR [rsi+rbx*1+0x4],bh
   14004b7ab:	add    BYTE PTR [rax],ah
   14004b7ad:	add    QWORD PTR [r8],r8
   14004b7b0:	xor    eax,0x8c00014d
   14004b7b5:	(bad)  
   14004b7b6:	add    al,0x0
   14004b7b8:	xor    eax,0x5e00014d
   14004b7bd:	add    QWORD PTR [r8],r8
   14004b7c0:	pushf  
   14004b7c1:	(bad)  
   14004b7c2:	add    al,0x0
   14004b7c4:	(bad)  
   14004b7c5:	add    QWORD PTR [r8],r8
   14004b7c8:	rcl    BYTE PTR [rax+0x1],cl
   14004b7cb:	add    BYTE PTR [rbp+rbx*1+0x4],bh
   14004b7cf:	add    al,ah
   14004b7d1:	push   rax
   14004b7d2:	add    DWORD PTR [rax],eax
   14004b7d4:	out    0x52,eax
   14004b7d6:	add    DWORD PTR [rax],eax
   14004b7d8:	mov    ah,0x1e
   14004b7da:	add    al,0x0
   14004b7dc:	lock push rdx
   14004b7de:	add    DWORD PTR [rax],eax
   14004b7e0:	cmp    dl,BYTE PTR [rbx+0x1]
   14004b7e3:	add    BYTE PTR [rbp+rbx*1+0x533a0004],cl
   14004b7ea:	add    DWORD PTR [rax],eax
   14004b7ec:	imul   edx,DWORD PTR [rcx+rax*1+0x0],0xffffffa0
   14004b7f1:	sbb    eax,0x546b0004
   14004b7f6:	add    DWORD PTR [rax],eax
   14004b7f8:	jle    0x14004b84e
   14004b7fa:	add    DWORD PTR [rax],eax
   14004b7fc:	mov    ah,0x1d
   14004b7fe:	add    al,0x0
   14004b800:	jle    0x14004b856
   14004b802:	add    DWORD PTR [rax],eax
   14004b804:	(bad)  
   14004b805:	push   rbp
   14004b806:	add    DWORD PTR [rax],eax
   14004b808:	(bad)  
   14004b809:	sbb    eax,0x55400004
   14004b80e:	add    DWORD PTR [rax],eax
   14004b810:	cld    
   14004b811:	push   rsi
   14004b812:	add    DWORD PTR [rax],eax
   14004b814:	fcomp  DWORD PTR [rip+0x57000004]        # 0x19704b81e
   14004b81a:	add    DWORD PTR [rax],eax
   14004b81c:	(bad)  
   14004b81d:	push   rdi
   14004b81e:	add    DWORD PTR [rax],eax
   14004b820:	loopne 0x14004b83e
   14004b822:	add    al,0x0
   14004b824:	(bad)  
   14004b825:	push   rdi
   14004b826:	add    DWORD PTR [rax],eax
   14004b828:	push   rbp
   14004b829:	push   rdi
   14004b82a:	add    DWORD PTR [rax],eax
   14004b82c:	pop    rax
   14004b82d:	sbb    eax,0x57550004
   14004b832:	add    DWORD PTR [rax],eax
   14004b834:	push   di
   14004b836:	add    DWORD PTR [rax],eax
   14004b838:	ins    BYTE PTR es:[rdi],dx
   14004b839:	sbb    eax,0x57700004
   14004b83e:	add    DWORD PTR [rax],eax
   14004b840:	test   BYTE PTR [rdi+0x1],dl
   14004b843:	add    al,ah
   14004b845:	sbb    al,0x4
   14004b847:	add    BYTE PTR [rdi+rdx*2+0x57bf0001],al
   14004b84e:	add    DWORD PTR [rax],eax
   14004b850:	adc    BYTE PTR [rip+0x57bf0004],bl        # 0x197c3b85a
   14004b856:	add    DWORD PTR [rax],eax
   14004b858:	rcl    BYTE PTR [rdi+0x1],1
   14004b85b:	add    BYTE PTR [rbx*1+0x57d00004],ah
   14004b862:	add    DWORD PTR [rax],eax
   14004b864:	or     ebx,DWORD PTR [rax+0x1]
   14004b867:	add    ah,al
   14004b869:	(bad)  
   14004b86a:	add    al,0x0
   14004b86c:	or     ebx,DWORD PTR [rax+0x1]
   14004b86f:	add    BYTE PTR [rdx+0x58],cl
   14004b872:	add    DWORD PTR [rax],eax
   14004b874:	fcomp  DWORD PTR [rsi]
   14004b876:	add    al,0x0
   14004b878:	rex.WX pop rax
   14004b87a:	add    DWORD PTR [rax],eax
   14004b87c:	mov    ah,0x58
   14004b87e:	add    DWORD PTR [rax],eax
   14004b880:	in     al,dx
   14004b881:	(bad)  
   14004b882:	add    al,0x0
   14004b884:	rcr    BYTE PTR [rax+0x1],0x0
   14004b888:	sti    
   14004b889:	pop    rax
   14004b88a:	add    DWORD PTR [rax],eax
   14004b88c:	cwde   
   14004b88d:	or     BYTE PTR [rax+rax*1],al
   14004b890:	add    BYTE PTR [rcx+0x1],bl
   14004b893:	add    BYTE PTR [rbp+0x3c000159],dh
   14004b899:	and    eax,DWORD PTR [rax+rax*1]
   14004b89c:	rcr    BYTE PTR [rcx+0x1],0x0
   14004b8a0:	adc    bl,BYTE PTR [rdx+0x1]
   14004b8a3:	add    BYTE PTR [rax+rsi*1+0x5a500004],bl
   14004b8aa:	add    DWORD PTR [rax],eax
   14004b8ac:	add    BYTE PTR [rbx+0x1],bl
   14004b8af:	add    ah,ch
   14004b8b1:	xor    al,BYTE PTR [rax+rax*1]
   14004b8b4:	add    BYTE PTR [rbx+0x1],bl
   14004b8b7:	add    BYTE PTR [rsi],ah
   14004b8b9:	pop    rbx
   14004b8ba:	add    DWORD PTR [rax],eax
   14004b8bc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004b8bd:	and    BYTE PTR [rax+rax*1],al
   14004b8c0:	es pop rbx
   14004b8c2:	add    DWORD PTR [rax],eax
   14004b8c4:	(bad)  
   14004b8c5:	pop    rbx
   14004b8c6:	add    DWORD PTR [rax],eax
   14004b8c8:	mov    eax,0x30000420
   14004b8cd:	pop    rbx
   14004b8ce:	add    DWORD PTR [rax],eax
   14004b8d0:	(bad)  
   14004b8d1:	pop    rbx
   14004b8d2:	add    DWORD PTR [rax],eax
   14004b8d4:	in     al,dx
   14004b8d5:	xor    al,BYTE PTR [rax+rax*1]
   14004b8d8:	(bad)  
   14004b8d9:	pop    rbx
   14004b8da:	add    DWORD PTR [rax],eax
   14004b8dc:	in     al,dx
   14004b8dd:	pop    rbx
   14004b8de:	add    DWORD PTR [rax],eax
   14004b8e0:	cmp    BYTE PTR [rax],ah
   14004b8e2:	add    al,0x0
   14004b8e4:	in     al,dx
   14004b8e5:	pop    rbx
   14004b8e6:	add    DWORD PTR [rax],eax
   14004b8e8:	cmc    
   14004b8e9:	pop    rbx
   14004b8ea:	add    DWORD PTR [rax],eax
   14004b8ec:	rex.WR and BYTE PTR [rax+rax*1],r8b
   14004b8f0:	add    BYTE PTR [rcx+rax*1+0x0],bl
   14004b8f4:	out    dx,al
   14004b8f5:	pop    rsp
   14004b8f6:	add    DWORD PTR [rax],eax
   14004b8f8:	in     al,dx
   14004b8f9:	xor    al,BYTE PTR [rax+rax*1]
   14004b8fc:	out    dx,al
   14004b8fd:	pop    rsp
   14004b8fe:	add    DWORD PTR [rax],eax
   14004b900:	adc    al,0x5d
   14004b902:	add    DWORD PTR [rax],eax
   14004b904:	adc    al,0x20
   14004b906:	add    al,0x0
   14004b908:	adc    al,0x5d
   14004b90a:	add    DWORD PTR [rax],eax
   14004b90c:	sbb    eax,0x2800015d
   14004b911:	and    BYTE PTR [rax+rax*1],al
   14004b914:	and    BYTE PTR [rbp+0x1],bl
   14004b917:	add    BYTE PTR [rbp+0x5d],ch
   14004b91a:	add    DWORD PTR [rax],eax
   14004b91c:	cwde   
   14004b91d:	or     BYTE PTR [rax+rax*1],al
   14004b920:	jo     0x14004b97f
   14004b922:	add    DWORD PTR [rax],eax
   14004b924:	(bad)  
   14004b925:	pop    rsi
   14004b926:	add    DWORD PTR [rax],eax
   14004b928:	in     al,dx
   14004b929:	xor    al,BYTE PTR [rax+rax*1]
   14004b92c:	(bad)  
   14004b92d:	pop    rsi
   14004b92e:	add    DWORD PTR [rax],eax
   14004b930:	sub    al,0x5e
   14004b932:	add    DWORD PTR [rax],eax
   14004b934:	and    BYTE PTR [rax],0x4
   14004b937:	add    BYTE PTR [rsi+rbx*2],ch
   14004b93a:	add    DWORD PTR [rax],eax
   14004b93c:	xor    eax,0x9400015e
   14004b941:	and    BYTE PTR [rax+rax*1],al
   14004b944:	rex pop rsi
   14004b946:	add    DWORD PTR [rax],eax
   14004b948:	cs pop rdi
   14004b94a:	add    DWORD PTR [rax],eax
   14004b94c:	in     al,dx
   14004b94d:	xor    al,BYTE PTR [rax+rax*1]
   14004b950:	cs pop rdi
   14004b952:	add    DWORD PTR [rax],eax
   14004b954:	push   rsp
   14004b955:	pop    rdi
   14004b956:	add    DWORD PTR [rax],eax
   14004b958:	pop    rsp
   14004b959:	and    BYTE PTR [rax+rax*1],al
   14004b95c:	push   rsp
   14004b95d:	pop    rdi
   14004b95e:	add    DWORD PTR [rax],eax
   14004b960:	pop    rbp
   14004b961:	pop    rdi
   14004b962:	add    DWORD PTR [rax],eax
   14004b964:	jo     0x14004b986
   14004b966:	add    al,0x0
   14004b968:	(bad)  
   14004b969:	pop    rdi
   14004b96a:	add    DWORD PTR [rax],eax
   14004b96c:	(bad)  
   14004b96d:	(bad)  
   14004b96e:	add    DWORD PTR [rax],eax
   14004b970:	in     al,dx
   14004b971:	xor    al,BYTE PTR [rax+rax*1]
   14004b974:	(bad)  
   14004b975:	(bad)  
   14004b976:	add    DWORD PTR [rax],eax
   14004b978:	mov    BYTE PTR [rax+0x1],ah
   14004b97b:	add    al,dh
   14004b97d:	(bad)  
   14004b97e:	add    al,0x0
   14004b980:	mov    BYTE PTR [rax+0x1],ah
   14004b983:	add    BYTE PTR [rcx+0x4000160],dl
   14004b989:	and    BYTE PTR [rax+rax*1],al
   14004b98c:	movabs al,ds:0x780001620e000160
   14004b995:	(bad)  
   14004b996:	add    al,0x0
   14004b998:	(bad)  
   14004b999:	(bad)  
   14004b99b:	add    BYTE PTR [rdx+riz*2+0x1],ch
   14004b99f:	add    BYTE PTR [rdi+rbx*1+0x626c0004],cl
   14004b9a6:	add    DWORD PTR [rax],eax
   14004b9a8:	in     eax,dx
   14004b9a9:	(bad)  
   14004b9ab:	add    BYTE PTR [rdi+rbx*1+0x62ed0004],ah
   14004b9b2:	add    DWORD PTR [rax],eax
   14004b9b4:	stos   BYTE PTR es:[rdi],al
   14004b9b5:	movsxd eax,DWORD PTR [rcx]
   14004b9b7:	add    BYTE PTR [rdi+rbx*1+0x63aa0004],bh
   14004b9be:	add    DWORD PTR [rax],eax
   14004b9c0:	ja     0x14004ba26
   14004b9c2:	add    DWORD PTR [rax],eax
   14004b9c4:	rcr    BYTE PTR [rdi],1
   14004b9c6:	add    al,0x0
   14004b9c8:	ja     0x14004ba2e
   14004b9ca:	add    DWORD PTR [rax],eax
   14004b9cc:	fsub   QWORD PTR [rcx+rax*1+0x0]
   14004b9d0:	loopne 0x14004b9f1
   14004b9d2:	add    al,0x0
   14004b9d4:	loopne 0x14004ba3a
   14004b9d6:	add    DWORD PTR [rax],eax
   14004b9d8:	repz add DWORD PTR fs:[rax],eax
   14004b9dc:	push   rax
   14004b9dd:	and    DWORD PTR [rax+rax*1],eax
   14004b9e0:	repz add DWORD PTR fs:[rax],eax
   14004b9e4:	(bad)  
   14004b9e5:	add    DWORD PTR fs:[rax],eax
   14004b9e8:	pop    rsp
   14004b9e9:	and    DWORD PTR [rax+rax*1],eax
   14004b9ec:	(bad)  
   14004b9ed:	add    DWORD PTR fs:[rax],eax
   14004b9f0:	fisub  WORD PTR [rbp+0x1]
   14004b9f3:	add    BYTE PTR [rax+0x21],dh
   14004b9f6:	add    al,0x0
   14004b9f8:	fisub  WORD PTR [rbp+0x1]
   14004b9fb:	add    BYTE PTR [rcx-0x6ffffe9a],ch
   14004ba01:	and    DWORD PTR [rax+rax*1],eax
   14004ba04:	test   eax,0xdd000166
   14004ba09:	add    WORD PTR [rax],ax
   14004ba0c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004ba0d:	and    DWORD PTR [rax+rax*1],eax
   14004ba10:	frstor [rsi+0x1]
   14004ba13:	add    BYTE PTR [rdi+riz*2],dh
   14004ba16:	add    DWORD PTR [rax],eax
   14004ba18:	mov    ah,0x21
   14004ba1a:	add    al,0x0
   14004ba1c:	xor    al,0x67
   14004ba1e:	add    DWORD PTR [rax],eax
   14004ba20:	(bad)  
   14004ba21:	add    DWORD PTR [eax],eax
   14004ba24:	shl    BYTE PTR [rcx],1
   14004ba26:	add    al,0x0
   14004ba28:	(bad)  
   14004ba29:	add    DWORD PTR [eax],eax
   14004ba2c:	rex.WR push 0x21e00001
   14004ba32:	add    al,0x0
   14004ba34:	rex.WR push 0x68930001
   14004ba3a:	add    DWORD PTR [rax],eax
   14004ba3c:	lock and DWORD PTR [rax+rax*1],eax
   14004ba40:	movabs al,ds:0x4000168c2000168
   14004ba49:	and    DWORD PTR [rax+rax*1],eax
   14004ba4c:	ret    0x168
   14004ba4f:	add    BYTE PTR [rip+0x10000169],al        # 0x15004bbbe
   14004ba55:	and    DWORD PTR [rax+rax*1],eax
   14004ba58:	add    eax,0x56000169
   14004ba5d:	imul   eax,DWORD PTR [rcx],0x4212800
   14004ba63:	add    BYTE PTR [rsi+0x69],dl
   14004ba66:	add    DWORD PTR [rax],eax
   14004ba68:	mov    BYTE PTR [rcx+0x1],ch
   14004ba6b:	add    BYTE PTR [rax],ch
   14004ba6d:	and    DWORD PTR [rax+rax*1],eax
   14004ba70:	mov    BYTE PTR [rcx+0x1],ch
   14004ba73:	add    BYTE PTR [rsi+0x28000169],bh
   14004ba79:	and    DWORD PTR [rax+rax*1],eax
   14004ba7c:	mov    esi,0xf4000169
   14004ba81:	imul   eax,DWORD PTR [rcx],0x4212800
   14004ba87:	add    ah,dh
   14004ba89:	imul   eax,DWORD PTR [rcx],0x16a4400
   14004ba8f:	add    BYTE PTR [rax],ch
   14004ba91:	and    DWORD PTR [rax+rax*1],eax
   14004ba94:	rex.R push 0x1
   14004ba97:	add    BYTE PTR [rcx+0x6a],ch
   14004ba9a:	add    DWORD PTR [rax],eax
   14004ba9c:	sub    BYTE PTR [rcx],ah
   14004ba9e:	add    al,0x0
   14004baa0:	imul   ebp,DWORD PTR [rdx+0x1],0x16a9b00
   14004baa7:	add    BYTE PTR [rax],ch
   14004baa9:	and    DWORD PTR [rax+rax*1],eax
   14004baac:	fwait
   14004baad:	push   0x1
   14004baaf:	add    al,al
   14004bab1:	push   0x1
   14004bab3:	add    BYTE PTR [rax],ch
   14004bab5:	and    DWORD PTR [rax+rax*1],eax
   14004bab8:	shr    BYTE PTR [rdx+0x1],0x0
   14004babc:	xor    ebp,DWORD PTR [rbx+0x1]
   14004babf:	add    BYTE PTR [rax],ch
   14004bac1:	and    DWORD PTR [rax+rax*1],eax
   14004bac4:	xor    ebp,DWORD PTR [rbx+0x1]
   14004bac7:	add    BYTE PTR [rbx+0x6b],cl
   14004baca:	add    DWORD PTR [rax],eax
   14004bacc:	sub    BYTE PTR [rcx],ah
   14004bace:	add    al,0x0
   14004bad0:	rex.WXB imul rax,QWORD PTR [r9],0x0
   14004bad4:	rex.WRB ins BYTE PTR es:[rdi],dx
   14004bad6:	add    DWORD PTR [rax],eax
   14004bad8:	sub    BYTE PTR [rcx],ah
   14004bada:	add    al,0x0
   14004badc:	rex.WRB ins BYTE PTR es:[rdi],dx
   14004bade:	add    DWORD PTR [rax],eax
   14004bae0:	mov    dl,0x6c
   14004bae2:	add    DWORD PTR [rax],eax
   14004bae4:	sub    BYTE PTR [rcx],ah
   14004bae6:	add    al,0x0
   14004bae8:	mov    dl,0x6c
   14004baea:	add    DWORD PTR [rax],eax
   14004baec:	fsubr  QWORD PTR [rcx+rax*1+0x0]
   14004baf0:	sub    BYTE PTR [rcx],ah
   14004baf2:	add    al,0x0
   14004baf4:	fsubr  QWORD PTR [rcx+rax*1+0x0]
   14004baf8:	add    BYTE PTR [rbp+0x1],ch
   14004bafb:	add    BYTE PTR [rax+0x21],al
   14004bafe:	add    al,0x0
   14004bb00:	and    BYTE PTR [rbp+0x1],ch
   14004bb03:	add    BYTE PTR [rcx],cl
   14004bb05:	outs   dx,BYTE PTR ds:[rsi]
   14004bb06:	add    DWORD PTR [rax],eax
   14004bb08:	lock and BYTE PTR [rax+rax*1],al
   14004bb0c:	adc    BYTE PTR [rsi+0x1],ch
   14004bb0f:	add    BYTE PTR [rsi+rbp*2],bh
   14004bb12:	add    DWORD PTR [rax],eax
   14004bb14:	or     al,0x9
   14004bb16:	add    al,0x0
   14004bb18:	cmp    al,0x6e
   14004bb1a:	add    DWORD PTR [rax],eax
   14004bb1c:	mov    ebx,0xc800016e
   14004bb21:	and    BYTE PTR [rax+rax*1],al
   14004bb24:	mov    ebx,0xd200016e
   14004bb29:	outs   dx,BYTE PTR ds:[rsi]
   14004bb2a:	add    DWORD PTR [rax],eax
   14004bb2c:	loopne 0x14004bb4e
   14004bb2e:	add    al,0x0
   14004bb30:	loopne 0x14004bba0
   14004bb32:	add    DWORD PTR [rax],eax
   14004bb34:	push   rcx
   14004bb35:	outs   dx,DWORD PTR ds:[rsi]
   14004bb36:	add    DWORD PTR [rax],eax
   14004bb38:	mov    BYTE PTR [rip+0x6f600004],al        # 0x1af64bb42
   14004bb3e:	add    DWORD PTR [rax],eax
   14004bb40:	xlat   BYTE PTR ds:[rbx]
   14004bb41:	jo     0x14004bb44
   14004bb43:	add    BYTE PTR [rax+0x22],dh
   14004bb46:	add    al,0x0
   14004bb48:	loopne 0x14004bbba
   14004bb4a:	add    DWORD PTR [rax],eax
   14004bb4c:	sbb    al,0x72
   14004bb4e:	add    DWORD PTR [rax],eax
   14004bb50:	adc    BYTE PTR [rdx],ah
   14004bb52:	add    al,0x0
   14004bb54:	and    BYTE PTR [rdx+0x1],dh
   14004bb57:	add    BYTE PTR [rsi+0x28000173],dl
   14004bb5d:	and    al,BYTE PTR [rax+rax*1]
   14004bb60:	movabs al,ds:0x7c000173f8000173
   14004bb69:	and    al,BYTE PTR [rax+rax*1]
   14004bb6c:	clc    
   14004bb6d:	jae    0x14004bb70
   14004bb6f:	add    bh,cl
   14004bb71:	je     0x14004bb74
   14004bb73:	add    BYTE PTR [rax-0x30fffbde],dl
   14004bb79:	je     0x14004bb7c
   14004bb7b:	add    bl,ah
   14004bb7d:	je     0x14004bb80
   14004bb7f:	add    BYTE PTR [rax-0x1cfffbde],ch
   14004bb85:	je     0x14004bb88
   14004bb87:	add    ah,ch
   14004bb89:	je     0x14004bb8c
   14004bb8b:	add    BYTE PTR [rax-0x13fffbde],bh
   14004bb91:	je     0x14004bb94
   14004bb93:	add    bh,bh
   14004bb95:	je     0x14004bb98
   14004bb97:	add    BYTE PTR [rax+0x422],ch
   14004bb9d:	jne    0x14004bba0
   14004bb9f:	add    BYTE PTR [rdx+0x77],ch
   14004bba2:	add    DWORD PTR [rax],eax
   14004bba4:	and    r8b,BYTE PTR [rax+rax*1]
   14004bba8:	jo     0x14004bc21
   14004bbaa:	add    DWORD PTR [rax],eax
   14004bbac:	outs   dx,BYTE PTR ds:[rsi]
   14004bbad:	jns    0x14004bbb0
   14004bbaf:	add    BYTE PTR [rsi+rbx*1+0x79700004],dh
   14004bbb6:	add    DWORD PTR [rax],eax
   14004bbb8:	jrcxz  0x14004bc35
   14004bbba:	add    DWORD PTR [rax],eax
   14004bbbc:	push   rsp
   14004bbbd:	and    al,BYTE PTR [rax+rax*1]
   14004bbc0:	lock jnp 0x14004bbc4
   14004bbc3:	add    ah,ah
   14004bbc5:	jl     0x14004bbc8
   14004bbc7:	add    al,dl
   14004bbc9:	and    al,BYTE PTR [rax+rax*1]
   14004bbcc:	lock jl 0x14004bbd0
   14004bbcf:	add    BYTE PTR [rdi+0x7e],dl
   14004bbd2:	add    DWORD PTR [rax],eax
   14004bbd4:	pushf  
   14004bbd5:	xor    BYTE PTR [rax+rax*1],al
   14004bbd8:	(bad)  
   14004bbd9:	jle    0x14004bbdc
   14004bbdb:	add    BYTE PTR [rdi+0x7e],dh
   14004bbde:	add    DWORD PTR [rax],eax
   14004bbe0:	loopne 0x14004bbfe
   14004bbe2:	add    al,0x0
   14004bbe4:	ja     0x14004bc64
   14004bbe6:	add    DWORD PTR [rax],eax
   14004bbe8:	ret    0x17e
   14004bbeb:	add    al,bh
   14004bbed:	and    al,BYTE PTR [rax+rax*1]
   14004bbf0:	ret    0x17e
   14004bbf3:	add    bl,dl
   14004bbf5:	jle    0x14004bbf8
   14004bbf7:	add    BYTE PTR [rbx+riz*1],cl
   14004bbfa:	add    al,0x0
   14004bbfc:	loopne 0x14004bc7c
   14004bbfe:	add    DWORD PTR [rax],eax
   14004bc00:	sar    DWORD PTR [rdi+0x1],1
   14004bc03:	add    al,ah
   14004bc05:	and    al,BYTE PTR [rax+rax*1]
   14004bc08:	loopne 0x14004bc89
   14004bc0a:	add    DWORD PTR [rax],eax
   14004bc0c:	xor    al,BYTE PTR [rax+0x5880001]
   14004bc12:	add    al,0x0
   14004bc14:	rex add BYTE PTR [rcx],0x0
   14004bc18:	cdq    
   14004bc19:	add    DWORD PTR [rcx],0x4231c00
   14004bc1f:	add    BYTE PTR [rax+0xe000181],ah
   14004bc25:	(bad)  
   14004bc26:	add    DWORD PTR [rax],eax
   14004bc28:	mov    BYTE PTR [rip+0xffffffff82100004],al        # 0xc214bc32
   14004bc2e:	add    DWORD PTR [rax],eax
   14004bc30:	jne    0x14004bbb6
   14004bc32:	add    DWORD PTR [rax],eax
   14004bc34:	pop    rsp
   14004bc35:	and    eax,DWORD PTR [rax+rax*1]
   14004bc38:	add    BYTE PTR [rcx+rax*1+0x184a300],0x0
   14004bc40:	cmp    al,0x23
   14004bc42:	add    al,0x0
   14004bc44:	mov    al,0x84
   14004bc46:	add    DWORD PTR [rax],eax
   14004bc48:	in     al,dx
   14004bc49:	test   BYTE PTR [rcx],al
   14004bc4b:	add    BYTE PTR [rax+0x23],bh
   14004bc4e:	add    al,0x0
   14004bc50:	in     al,dx
   14004bc51:	test   BYTE PTR [rcx],al
   14004bc53:	add    BYTE PTR [rbx-0x7ffffe7b],al
   14004bc59:	and    eax,DWORD PTR [rax+rax*1]
   14004bc5c:	add    DWORD PTR [rbp-0x7a47ffff],0x1
   14004bc63:	add    BYTE PTR [rbx+riz*1-0x7a3ffffc],bl
   14004bc6a:	add    DWORD PTR [rax],eax
   14004bc6c:	mov    BYTE PTR [rbp+0x8980001],0x4
   14004bc73:	add    dh,al
   14004bc75:	test   DWORD PTR [rcx],eax
   14004bc77:	add    ah,dl
   14004bc79:	test   DWORD PTR [rcx],eax
   14004bc7b:	add    BYTE PTR [rax-0x2bfffbdd],bh
   14004bc81:	test   DWORD PTR [rcx],eax
   14004bc83:	add    BYTE PTR [rcx],al
   14004bc85:	xchg   BYTE PTR [rcx],al
   14004bc87:	add    ah,cl
   14004bc89:	and    eax,DWORD PTR [rax+rax*1]
   14004bc8c:	add    DWORD PTR [rsi-0x79eaffff],eax
   14004bc92:	add    DWORD PTR [rax],eax
   14004bc94:	loopne 0x14004bcb9
   14004bc96:	add    al,0x0
   14004bc98:	adc    eax,0x43000186
   14004bc9d:	xchg   BYTE PTR [rcx],al
   14004bc9f:	add    al,dh
   14004bca1:	and    eax,DWORD PTR [rax+rax*1]
   14004bca4:	push   rax
   14004bca5:	xchg   BYTE PTR [rcx],al
   14004bca7:	add    BYTE PTR [rip+0x4400018b],cl        # 0x18404be38
   14004bcad:	and    eax,DWORD PTR [rax+rax*1]
   14004bcb0:	adc    BYTE PTR [rbx-0x744effff],cl
   14004bcb6:	add    DWORD PTR [rax],eax
   14004bcb8:	cmp    BYTE PTR [rax],dh
   14004bcba:	add    al,0x0
   14004bcbc:	ror    BYTE PTR [rbx-0x7228ffff],0x1
   14004bcc3:	add    BYTE PTR [rax],al
   14004bcc5:	and    al,0x4
   14004bcc7:	add    al,ah
   14004bcc9:	lea    eax,[rcx]
   14004bccb:	add    BYTE PTR [rbx-0x72],al
   14004bcce:	add    DWORD PTR [rax],eax
   14004bcd0:	mov    BYTE PTR [rip+0xffffffff8e500004],al        # 0xce54bcda
   14004bcd6:	add    DWORD PTR [rax],eax
   14004bcd8:	nop
   14004bcd9:	mov    es,WORD PTR [rcx]
   14004bcdb:	add    BYTE PTR [rsp],cl
   14004bcde:	add    al,0x0
   14004bce0:	nop
   14004bce1:	mov    es,WORD PTR [rcx]
   14004bce3:	add    BYTE PTR [rdi+0x1400018e],bl
   14004bce9:	and    al,0x4
   14004bceb:	add    BYTE PTR [rdi-0x59fffe72],bl
   14004bcf1:	mov    es,WORD PTR [rcx]
   14004bcf3:	add    BYTE PTR [rsp],ch
   14004bcf6:	add    al,0x0
   14004bcf8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004bcf9:	mov    es,WORD PTR [rcx]
   14004bcfb:	add    bl,cl
   14004bcfd:	mov    es,WORD PTR [rcx]
   14004bcff:	add    BYTE PTR [rax+0x24],al
   14004bd02:	add    al,0x0
   14004bd04:	retf   
   14004bd05:	mov    es,WORD PTR [rcx]
   14004bd07:	add    al,dl
   14004bd09:	mov    es,WORD PTR [rcx]
   14004bd0b:	add    BYTE PTR [rsp+0x4],dl
   14004bd0f:	add    al,dl
   14004bd11:	mov    es,WORD PTR [rcx]
   14004bd13:	add    BYTE PTR [rax+0x6800018f],al
   14004bd19:	and    al,0x4
   14004bd1b:	add    BYTE PTR [rax-0xefffe71],al
   14004bd21:	pop    QWORD PTR [rcx]
   14004bd23:	add    BYTE PTR [rsp+0x4],bh
   14004bd27:	add    cl,dh
   14004bd29:	pop    QWORD PTR [rcx]
   14004bd2b:	add    bl,bh
   14004bd2d:	pop    QWORD PTR [rcx]
   14004bd2f:	add    BYTE PTR [rsp-0x7004fffc],cl
   14004bd36:	add    DWORD PTR [rax],eax
   14004bd38:	(bad)  
   14004bd39:	nop
   14004bd3a:	add    DWORD PTR [rax],eax
   14004bd3c:	pushf  
   14004bd3d:	and    al,0x4
   14004bd3f:	add    BYTE PTR [rdi],ah
   14004bd41:	nop
   14004bd42:	add    DWORD PTR [rax],eax
   14004bd44:	rex.WX xchg rax,rax
   14004bd46:	add    DWORD PTR [rax],eax
   14004bd48:	lods   al,BYTE PTR ds:[rsi]
   14004bd49:	and    al,0x4
   14004bd4b:	add    BYTE PTR [rdx-0x70],cl
   14004bd4e:	add    DWORD PTR [rax],eax
   14004bd50:	push   0xffffffffbc000190
   14004bd55:	and    al,0x4
   14004bd57:	add    BYTE PTR [rax-0x70],ch
   14004bd5a:	add    DWORD PTR [rax],eax
   14004bd5c:	je     0x14004bcee
   14004bd5e:	add    DWORD PTR [rax],eax
   14004bd60:	shl    BYTE PTR [rsp+rax*1],1
   14004bd63:	add    BYTE PTR [rax-0x11fffe70],al
   14004bd69:	nop
   14004bd6a:	add    DWORD PTR [rax],eax
   14004bd6c:	loopne 0x14004bd92
   14004bd6e:	add    al,0x0
   14004bd70:	out    dx,al
   14004bd71:	nop
   14004bd72:	add    DWORD PTR [rax],eax
   14004bd74:	out    dx,eax
   14004bd75:	xchg   ecx,eax
   14004bd76:	add    DWORD PTR [rax],eax
   14004bd78:	in     al,dx
   14004bd79:	and    al,0x4
   14004bd7b:	add    bh,ch
   14004bd7d:	xchg   ecx,eax
   14004bd7e:	add    DWORD PTR [rax],eax
   14004bd80:	jno    0x14004bd14
   14004bd82:	add    DWORD PTR [rax],eax
   14004bd84:	add    BYTE PTR [rip+0xffffffff92800004],ah        # 0xd284bd8e
   14004bd8a:	add    DWORD PTR [rax],eax
   14004bd8c:	loope  0x14004bd21
   14004bd8e:	add    DWORD PTR [rax],eax
   14004bd90:	adc    BYTE PTR [rax],bh
   14004bd92:	add    al,0x0
   14004bd94:	lock xchg ebx,eax
   14004bd96:	add    DWORD PTR [rax],eax
   14004bd98:	adc    BYTE PTR [rbp+0x38100001],dl
   14004bd9e:	add    al,0x0
   14004bda0:	adc    BYTE PTR [rbp-0x69c6ffff],dl
   14004bda6:	add    DWORD PTR [rax],eax
   14004bda8:	adc    BYTE PTR [rip+0xffffffff96390004],ah        # 0xd63dbdb2
   14004bdae:	add    DWORD PTR [rax],eax
   14004bdb0:	ins    DWORD PTR es:[rdi],dx
   14004bdb1:	xchg   esi,eax
   14004bdb2:	add    DWORD PTR [rax],eax
   14004bdb4:	sbb    al,0x25
   14004bdb6:	add    al,0x0
   14004bdb8:	ins    DWORD PTR es:[rdi],dx
   14004bdb9:	xchg   esi,eax
   14004bdba:	add    DWORD PTR [rax],eax
   14004bdbc:	out    0x96,al
   14004bdbe:	add    DWORD PTR [rax],eax
   14004bdc0:	xor    BYTE PTR [rip+0xffffffff96e60004],ah        # 0xd6eabdca
   14004bdc6:	add    DWORD PTR [rax],eax
   14004bdc8:	jmp    0x14004bd60
   14004bdca:	add    DWORD PTR [rax],eax
   14004bdcc:	rex.R and eax,0x96eb0004
   14004bdd2:	add    DWORD PTR [rax],eax
   14004bdd4:	mov    ebp,0x58000197
   14004bdd9:	and    eax,0x97bd0004
   14004bdde:	add    DWORD PTR [rax],eax
   14004bde0:	(bad)  
   14004bde1:	xchg   edi,eax
   14004bde2:	add    DWORD PTR [rax],eax
   14004bde4:	je     0x14004be0b
   14004bde6:	add    al,0x0
   14004bde8:	loopne 0x14004bd81
   14004bdea:	add    DWORD PTR [rax],eax
   14004bdec:	not    BYTE PTR [rdi+0x26800001]
   14004bdf2:	add    al,0x0
   14004bdf4:	not    BYTE PTR [rdi-0x67e9ffff]
   14004bdfa:	add    DWORD PTR [rax],eax
   14004bdfc:	test   BYTE PTR [rip+0xffffffff98160004],ah        # 0xd81abe06
   14004be02:	add    DWORD PTR [rax],eax
   14004be04:	xchg   ebx,eax
   14004be05:	cdq    
   14004be06:	add    DWORD PTR [rax],eax
   14004be08:	cwde   
   14004be09:	and    eax,0x99930004
   14004be0e:	add    DWORD PTR [rax],eax
   14004be10:	test   al,0x99
   14004be12:	add    DWORD PTR [rax],eax
   14004be14:	mov    ah,0x25
   14004be16:	add    al,0x0
   14004be18:	test   al,0x99
   14004be1a:	add    DWORD PTR [rax],eax
   14004be1c:	sbb    DWORD PTR [rdx+0x25c40001],ebx
   14004be22:	add    al,0x0
   14004be24:	sbb    DWORD PTR [rdx-0x6571ffff],ebx
   14004be2a:	add    DWORD PTR [rax],eax
   14004be2c:	(bad)  
   14004be2d:	and    eax,0x9a900004
   14004be32:	add    DWORD PTR [rax],eax
   14004be34:	(bad)  
   14004be35:	(bad)  
   14004be36:	add    DWORD PTR [rax],eax
   14004be38:	hlt    
   14004be39:	and    eax,0x9ad60004
   14004be3e:	add    DWORD PTR [rax],eax
   14004be40:	add    DWORD PTR [rbx+0x26000001],ebx
   14004be46:	add    al,0x0
   14004be48:	add    DWORD PTR [rbx-0x64c0ffff],ebx
   14004be4e:	add    DWORD PTR [rax],eax
   14004be50:	adc    al,0x26
   14004be52:	add    al,0x0
   14004be54:	(bad)  
   14004be55:	fwait
   14004be56:	add    DWORD PTR [rax],eax
   14004be58:	mov    DWORD PTR [rbx+0x262c0001],ebx
   14004be5e:	add    al,0x0
   14004be60:	mov    DWORD PTR [rbx-0x6443ffff],ebx
   14004be66:	add    DWORD PTR [rax],eax
   14004be68:	rex.WR
   14004be69:	es add al,0x0
   14004be6c:	mov    esp,0xed00019b
   14004be71:	fwait
   14004be72:	add    DWORD PTR [rax],eax
   14004be74:	(bad)  
   14004be75:	es add al,0x0
   14004be78:	in     eax,dx
   14004be79:	fwait
   14004be7a:	add    DWORD PTR [rax],eax
   14004be7c:	stc    
   14004be7d:	fwait
   14004be7e:	add    DWORD PTR [rax],eax
   14004be80:	jo     0x14004bea8
   14004be82:	add    al,0x0
   14004be84:	add    BYTE PTR [rcx+rax*1+0x19c6300],bl
   14004be8b:	add    BYTE PTR [rax+0x63000426],al
   14004be91:	pushf  
   14004be92:	add    DWORD PTR [rax],eax
   14004be94:	gs popf 
   14004be96:	add    DWORD PTR [rax],eax
   14004be98:	mov    WORD PTR [rsi],fs
   14004be9a:	add    al,0x0
   14004be9c:	gs popf 
   14004be9e:	add    DWORD PTR [rax],eax
   14004bea0:	out    0x9d,eax
   14004bea2:	add    DWORD PTR [rax],eax
   14004bea4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004bea5:	es add al,0x0
   14004bea8:	lock popf 
   14004beaa:	add    DWORD PTR [rax],eax
   14004beac:	push   rbx
   14004bead:	sahf   
   14004beae:	add    DWORD PTR [rax],eax
   14004beb0:	mov    BYTE PTR [rip+0xffffffff9e600004],al        # 0xde64beba
   14004beb6:	add    DWORD PTR [rax],eax
   14004beb8:	ret    
   14004beb9:	sahf   
   14004beba:	add    DWORD PTR [rax],eax
   14004bebc:	mov    BYTE PTR [rip+0xffffffff9ed00004],al        # 0xded4bec6
   14004bec2:	add    DWORD PTR [rax],eax
   14004bec4:	xor    ebx,DWORD PTR [rdi+0x5880001]
   14004beca:	add    al,0x0
   14004becc:	rex lahf 
   14004bece:	add    DWORD PTR [rax],eax
   14004bed0:	movabs ds:0xb00004058800019f,eax
   14004bed9:	lahf   
   14004beda:	add    DWORD PTR [rax],eax
   14004bedc:	(bad)  
   14004bedd:	lahf   
   14004bede:	add    DWORD PTR [rax],eax
   14004bee0:	cmp    al,0x6
   14004bee2:	add    al,0x0
   14004bee4:	(bad)  
   14004bee5:	lahf   
   14004bee6:	add    DWORD PTR [rax],eax
   14004bee8:	call   0xf404c08d
   14004beed:	es add al,0x0
   14004bef0:	call   0xca04c095
   14004bef5:	movabs eax,ds:0xa1a0000426cc0001
   14004befe:	add    DWORD PTR [rax],eax
   14004bf00:	outs   dx,DWORD PTR ds:[rsi]
   14004bf01:	movabs ds:0xa2700004309c0001,al
   14004bf0a:	add    DWORD PTR [rax],eax
   14004bf0c:	(bad)  
   14004bf0d:	movabs ds:0xa2e0000426dc0001,al
   14004bf16:	add    DWORD PTR [rax],eax
   14004bf18:	and    DWORD PTR [rbx+0x309c0001],esp
   14004bf1e:	add    al,0x0
   14004bf20:	xor    BYTE PTR [rbx-0x5c57ffff],ah
   14004bf26:	add    DWORD PTR [rax],eax
   14004bf28:	pushf  
   14004bf29:	xor    BYTE PTR [rax+rax*1],al
   14004bf2c:	mov    al,0xa3
   14004bf2e:	add    DWORD PTR [rax],eax
   14004bf30:	xor    esp,DWORD PTR [rcx+rax*1+0x4089800]
   14004bf37:	add    BYTE PTR [rax],ah
   14004bf39:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004bf3a:	add    DWORD PTR [rax],eax
   14004bf3c:	fwait
   14004bf3d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004bf3e:	add    DWORD PTR [rax],eax
   14004bf40:	sbb    BYTE PTR [rsp+rax*1],bh
   14004bf43:	add    BYTE PTR [rbx-0x22fffe5b],bl
   14004bf49:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004bf4a:	add    DWORD PTR [rax],eax
   14004bf4c:	clc    
   14004bf4d:	es add al,0x0
   14004bf50:	frstor [rbp-0x5a17ffff]
   14004bf56:	add    DWORD PTR [rax],eax
   14004bf58:	or     al,0x27
   14004bf5a:	add    al,0x0
   14004bf5c:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004bf5e:	add    DWORD PTR [rax],eax
   14004bf60:	(bad)
   14004bf63:	add    BYTE PTR [rax+0x10000405],cl
   14004bf69:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004bf6a:	add    DWORD PTR [rax],eax
   14004bf6c:	mov    ebx,0x880001a7
   14004bf71:	add    eax,0xa7e00004
   14004bf76:	add    DWORD PTR [rax],eax
   14004bf78:	outs   dx,DWORD PTR ds:[rsi]
   14004bf79:	test   al,0x1
   14004bf7b:	add    BYTE PTR [rax+0x70000412],bl
   14004bf81:	test   al,0x1
   14004bf83:	add    BYTE PTR [rdx+rbp*4],ah
   14004bf86:	add    DWORD PTR [rax],eax
   14004bf88:	in     al,0x26
   14004bf8a:	add    al,0x0
   14004bf8c:	nop
   14004bf8d:	stos   BYTE PTR es:[rdi],al
   14004bf8e:	add    DWORD PTR [rax],eax
   14004bf90:	shr    BYTE PTR [rdx+0x8980001],cl
   14004bf96:	add    al,0x0
   14004bf98:	loopne 0x14004bf44
   14004bf9a:	add    DWORD PTR [rax],eax
   14004bf9c:	(bad)  
   14004bf9d:	stos   DWORD PTR es:[rdi],eax
   14004bf9e:	add    DWORD PTR [rax],eax
   14004bfa0:	cwde   
   14004bfa1:	or     BYTE PTR [rax+rax*1],al
   14004bfa4:	jo     0x14004bf51
   14004bfa6:	add    DWORD PTR [rax],eax
   14004bfa8:	add    DWORD PTR [rcx+rax*1+0x4303800],ebp
   14004bfaf:	add    BYTE PTR [rax],dl
   14004bfb1:	lods   al,BYTE PTR ds:[rsi]
   14004bfb2:	add    DWORD PTR [rax],eax
   14004bfb4:	shr    DWORD PTR [rcx+rax*1+0x4304c00],1
   14004bfbb:	add    al,ah
   14004bfbd:	lods   al,BYTE PTR ds:[rsi]
   14004bfbe:	add    DWORD PTR [rax],eax
   14004bfc0:	xor    ebp,DWORD PTR [rbp+0x5880001]
   14004bfc6:	add    al,0x0
   14004bfc8:	push   rax
   14004bfc9:	lods   eax,DWORD PTR ds:[rsi]
   14004bfca:	add    DWORD PTR [rax],eax
   14004bfcc:	sub    DWORD PTR [rbp+0x271c0001],0x4
   14004bfd3:	add    BYTE PTR [rbx+0x370001ad],al
   14004bfd9:	scas   al,BYTE PTR es:[rdi]
   14004bfda:	add    DWORD PTR [rax],eax
   14004bfdc:	sub    al,0x27
   14004bfde:	add    al,0x0
   14004bfe0:	(bad)  
   14004bfe1:	scas   al,BYTE PTR es:[rdi]
   14004bfe2:	add    DWORD PTR [rax],eax
   14004bfe4:	rex.RB scas al,BYTE PTR es:[rdi]
   14004bfe6:	add    DWORD PTR [rax],eax
   14004bfe8:	rex.R (bad) 
   14004bfea:	add    al,0x0
   14004bfec:	push   rax
   14004bfed:	scas   al,BYTE PTR es:[rdi]
   14004bfee:	add    DWORD PTR [rax],eax
   14004bff0:	jb     0x14004bfa0
   14004bff2:	add    DWORD PTR [rax],eax
   14004bff4:	sbb    BYTE PTR [rax],bh
   14004bff6:	add    al,0x0
   14004bff8:	sub    BYTE PTR [rsi-0x4fddffff],0x1
   14004bfff:	add    BYTE PTR [rdi+riz*1+0x4],dl
   14004c003:	add    BYTE PTR [rax-0x50],ah
   14004c006:	add    DWORD PTR [rax],eax
   14004c008:	(bad)
   14004c00b:	add    BYTE PTR [rax+rbp*1],bl
   14004c00e:	add    al,0x0
   14004c010:	xor    BYTE PTR [rcx-0x4e87ffff],dh
   14004c016:	add    DWORD PTR [rax],eax
   14004c018:	in     al,0x27
   14004c01a:	add    al,0x0
   14004c01c:	js     0x14004bfcf
   14004c01e:	add    DWORD PTR [rax],eax
   14004c020:	shl    BYTE PTR [rcx+0x27f80001],1
   14004c026:	add    al,0x0
   14004c028:	shl    BYTE PTR [rcx-0x4e18ffff],1
   14004c02e:	add    DWORD PTR [rax],eax
   14004c030:	or     al,0x28
   14004c032:	add    al,0x0
   14004c034:	lock mov cl,0x1
   14004c037:	add    BYTE PTR [rdx-0x4e],ch
   14004c03a:	add    DWORD PTR [rax],eax
   14004c03c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c03d:	(bad)  
   14004c03e:	add    al,0x0
   14004c040:	push   0xffffffffffffffb2
   14004c042:	add    DWORD PTR [rax],eax
   14004c044:	jbe    0x14004bff9
   14004c046:	add    DWORD PTR [rax],eax
   14004c048:	mov    esp,0x76000427
   14004c04d:	mov    bl,0x1
   14004c04f:	add    BYTE PTR [rbp-0x2bfffe4d],dl
   14004c055:	(bad)  
   14004c056:	add    al,0x0
   14004c058:	shl    BYTE PTR [rbx-0x4bb5ffff],1
   14004c05e:	add    DWORD PTR [rax],eax
   14004c060:	pushf  
   14004c061:	xor    BYTE PTR [rax+rax*1],al
   14004c064:	push   rax
   14004c065:	mov    ah,0x1
   14004c067:	add    BYTE PTR [rbx],ah
   14004c069:	mov    ch,0x1
   14004c06b:	add    BYTE PTR [rax+rsi*1-0x4acffffc],bl
   14004c072:	add    DWORD PTR [rax],eax
   14004c074:	ret    
   14004c075:	mov    ch,0x1
   14004c077:	add    BYTE PTR [rax+0x27],dh
   14004c07a:	add    al,0x0
   14004c07c:	ret    
   14004c07d:	mov    ch,0x1
   14004c07f:	add    BYTE PTR [rcx],ah
   14004c081:	mov    dh,0x1
   14004c083:	add    BYTE PTR [rax+0x21000427],al
   14004c089:	mov    dh,0x1
   14004c08b:	add    BYTE PTR [rcx],bh
   14004c08d:	mov    dh,0x1
   14004c08f:	add    BYTE PTR [rdi+riz*1-0x49bffffc],dl
   14004c096:	add    DWORD PTR [rax],eax
   14004c098:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c099:	mov    dh,0x1
   14004c09b:	add    BYTE PTR [rax+rbp*1],bl
   14004c09e:	add    al,0x0
   14004c0a0:	mov    al,0xb6
   14004c0a2:	add    DWORD PTR [rax],eax
   14004c0a4:	enter  0x1b6,0x0
   14004c0a8:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004c0ac:	shl    BYTE PTR [rsi-0x47dfffff],1
   14004c0b2:	add    DWORD PTR [rax],eax
   14004c0b4:	jo     0x14004c0dd
   14004c0b6:	add    al,0x0
   14004c0b8:	and    BYTE PTR [rax-0x4760ffff],bh
   14004c0be:	add    DWORD PTR [rax],eax
   14004c0c0:	mov    BYTE PTR [rip+0xffffffffb8a00004],al        # 0xf8a4c0ca
   14004c0c6:	add    DWORD PTR [rax],eax
   14004c0c8:	retf   
   14004c0c9:	mov    eax,0x8980001
   14004c0ce:	add    al,0x0
   14004c0d0:	add    BYTE PTR [rcx-0x45ebffff],bh
   14004c0d6:	add    DWORD PTR [rax],eax
   14004c0d8:	fsubr  QWORD PTR [rax]
   14004c0da:	add    al,0x0
   14004c0dc:	push   rax
   14004c0dd:	mov    edx,0xbab40001
   14004c0e2:	add    DWORD PTR [rax],eax
   14004c0e4:	cwde   
   14004c0e5:	or     BYTE PTR [rax+rax*1],al
   14004c0e8:	mov    ah,0xba
   14004c0ea:	add    DWORD PTR [rax],eax
   14004c0ec:	(bad)  
   14004c0ed:	mov    edx,0x28280001
   14004c0f2:	add    al,0x0
   14004c0f4:	(bad)  
   14004c0f5:	mov    edx,0xbb1b0001
   14004c0fa:	add    DWORD PTR [rax],eax
   14004c0fc:	cmp    al,0x28
   14004c0fe:	add    al,0x0
   14004c100:	and    BYTE PTR [rbx-0x448effff],bh
   14004c106:	add    DWORD PTR [rax],eax
   14004c108:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004c10c:	loopne 0x14004c0c9
   14004c10e:	add    DWORD PTR [rax],eax
   14004c110:	std    
   14004c111:	mov    ebx,0x8980001
   14004c116:	add    al,0x0
   14004c118:	std    
   14004c119:	mov    ebx,0xbc0e0001
   14004c11e:	add    DWORD PTR [rax],eax
   14004c120:	cld    
   14004c121:	sub    BYTE PTR [rax+rax*1],al
   14004c124:	(bad)  
   14004c125:	mov    esp,0xbc440001
   14004c12a:	add    DWORD PTR [rax],eax
   14004c12c:	adc    BYTE PTR [rcx],ch
   14004c12e:	add    al,0x0
   14004c130:	rex.R mov esp,0xbc780001
   14004c136:	add    DWORD PTR [rax],eax
   14004c138:	sub    BYTE PTR [rcx],ch
   14004c13a:	add    al,0x0
   14004c13c:	js     0x14004c0fa
   14004c13e:	add    DWORD PTR [rax],eax
   14004c140:	nop
   14004c141:	mov    esp,0x293c0001
   14004c146:	add    al,0x0
   14004c148:	nop
   14004c149:	mov    esp,0xbd4a0001
   14004c14e:	add    DWORD PTR [rax],eax
   14004c150:	sub    QWORD PTR [rax+rax*1],r8
   14004c154:	rex.WX movabs rbp,0x29600001bd850001
   14004c15e:	add    al,0x0
   14004c160:	sar    BYTE PTR [rbp-0x41f5ffff],0x1
   14004c167:	add    BYTE PTR [rax-0xffffbf8],bl
   14004c16d:	mov    esi,0xbf5d0001
   14004c172:	add    DWORD PTR [rax],eax
   14004c174:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c175:	sbb    eax,DWORD PTR [rax+rax*1]
   14004c178:	pop    rbp
   14004c179:	mov    edi,0xc0460001
   14004c17e:	add    DWORD PTR [rax],eax
   14004c180:	xchg   esp,eax
   14004c181:	sub    DWORD PTR [rax+rax*1],eax
   14004c184:	rex.RX rol BYTE PTR [rcx],0x0
   14004c188:	xchg   esp,eax
   14004c189:	rol    BYTE PTR [rcx],0x0
   14004c18c:	test   al,0x29
   14004c18e:	add    al,0x0
   14004c190:	movabs al,ds:0x980001c0bd0001c0
   14004c199:	or     BYTE PTR [rax+rax*1],al
   14004c19c:	mov    ebp,0xc0001c0
   14004c1a1:	rol    DWORD PTR [rcx],0x0
   14004c1a4:	jo     0x14004c1cf
   14004c1a6:	add    al,0x0
   14004c1a8:	or     al,0xc1
   14004c1aa:	add    DWORD PTR [rax],eax
   14004c1ac:	adc    al,cl
   14004c1ae:	add    DWORD PTR [rax],eax
   14004c1b0:	test   BYTE PTR [rcx],ch
   14004c1b2:	add    al,0x0
   14004c1b4:	and    cl,al
   14004c1b6:	add    DWORD PTR [rax],eax
   14004c1b8:	mov    ecx,0x400c0001
   14004c1be:	add    al,0x0
   14004c1c0:	rol    cl,1
   14004c1c2:	add    DWORD PTR [rax],eax
   14004c1c4:	add    eax,edx
   14004c1c6:	add    DWORD PTR [rax],eax
   14004c1c8:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004c1cc:	adc    dl,al
   14004c1ce:	add    DWORD PTR [rax],eax
   14004c1d0:	jp     0x14004c194
   14004c1d2:	add    DWORD PTR [rax],eax
   14004c1d4:	mov    WORD PTR [rax],gs
   14004c1d6:	add    al,0x0
   14004c1d8:	jp     0x14004c19c
   14004c1da:	add    DWORD PTR [rax],eax
   14004c1dc:	faddp  st(2),st
   14004c1de:	add    DWORD PTR [rax],eax
   14004c1e0:	xchg   esp,eax
   14004c1e1:	sub    BYTE PTR [rax+rax*1],al
   14004c1e4:	faddp  st(2),st
   14004c1e6:	add    DWORD PTR [rax],eax
   14004c1e8:	in     al,0xc2
   14004c1ea:	add    DWORD PTR [rax],eax
   14004c1ec:	test   al,0x28
   14004c1ee:	add    al,0x0
   14004c1f0:	lock ret 0x1
   14004c1f4:	jo     0x14004c1b9
   14004c1f6:	add    DWORD PTR [rax],eax
   14004c1f8:	jl     0x14004c20f
   14004c1fa:	add    al,0x0
   14004c1fc:	jo     0x14004c1c1
   14004c1fe:	add    DWORD PTR [rax],eax
   14004c200:	fld    st(3)
   14004c202:	add    DWORD PTR [rax],eax
   14004c204:	mov    eax,0xd9000428
   14004c209:	ret    
   14004c20a:	add    DWORD PTR [rax],eax
   14004c20c:	in     al,0xc3
   14004c20e:	add    DWORD PTR [rax],eax
   14004c210:	int3   
   14004c211:	sub    BYTE PTR [rax+rax*1],al
   14004c214:	lock ret 
   14004c216:	add    DWORD PTR [rax],eax
   14004c218:	jg     0x14004c1de
   14004c21a:	add    DWORD PTR [rax],eax
   14004c21c:	push   rsp
   14004c21d:	sub    BYTE PTR [rax+rax*1],al
   14004c220:	jg     0x14004c1e6
   14004c222:	add    DWORD PTR [rax],eax
   14004c224:	(bad)
   14004c228:	push   0x36000428
   14004c22d:	(bad)
   14004c230:	push   0xffffffffffffffc5
   14004c232:	add    DWORD PTR [rax],eax
   14004c234:	jl     0x14004c25e
   14004c236:	add    al,0x0
   14004c238:	adc    dh,al
   14004c23a:	add    DWORD PTR [rax],eax
   14004c23c:	mov    BYTE PTR es:[rcx],0x0
   14004c240:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004c244:	xor    dh,al
   14004c246:	add    DWORD PTR [rax],eax
   14004c248:	rex.WRX mov BYTE PTR [rcx],0x0
   14004c24c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004c250:	push   rax
   14004c251:	mov    BYTE PTR [rcx],0x0
   14004c254:	jno    0x14004c21c
   14004c256:	add    DWORD PTR [rax],eax
   14004c258:	mov    eax,0x71000429
   14004c25d:	mov    BYTE PTR [rcx],0x0
   14004c260:	(bad)  
   14004c261:	mov    BYTE PTR [rcx],0x0
   14004c264:	shr    BYTE PTR [rcx],0x4
   14004c267:	add    BYTE PTR [rbp-0x2ffffe3a],cl
   14004c26d:	mov    DWORD PTR [rcx],0x429d400
   14004c273:	add    al,dl
   14004c275:	mov    DWORD PTR [rcx],0x1c7d500
   14004c27b:	add    ah,dh
   14004c27d:	sub    DWORD PTR [rax+rax*1],eax
   14004c280:	(bad)  
   14004c281:	mov    DWORD PTR [rcx],0x1c7da00
   14004c287:	add    BYTE PTR [rdx+rbp*1],al
   14004c28a:	add    al,0x0
   14004c28c:	loopne 0x14004c255
   14004c28e:	add    DWORD PTR [rax],eax
   14004c290:	repnz mov DWORD PTR [rcx],0x4284c00
   14004c297:	add    BYTE PTR [rax],dl
   14004c299:	enter  0x1,0x80
   14004c29d:	enter  0x1,0x88
   14004c2a1:	add    eax,0xc8800004
   14004c2a6:	add    DWORD PTR [rax],eax
   14004c2a8:	mov    edx,0x880001c8
   14004c2ad:	add    eax,0xc8c00004
   14004c2b2:	add    DWORD PTR [rax],eax
   14004c2b4:	rex.W leave 
   14004c2b6:	add    DWORD PTR [rax],eax
   14004c2b8:	pushf  
   14004c2b9:	xor    BYTE PTR [rax+rax*1],al
   14004c2bc:	push   rax
   14004c2bd:	leave  
   14004c2be:	add    DWORD PTR [rax],eax
   14004c2c0:	je     0x14004c28b
   14004c2c2:	add    DWORD PTR [rax],eax
   14004c2c4:	cwde   
   14004c2c5:	or     BYTE PTR [rax+rax*1],al
   14004c2c8:	or     cl,0x1
   14004c2cb:	add    BYTE PTR [rax],cl
   14004c2cd:	retf   0x1
   14004c2d0:	adc    al,0x2a
   14004c2d2:	add    al,0x0
   14004c2d4:	or     dl,cl
   14004c2d6:	add    DWORD PTR [rax],eax
   14004c2d8:	ja     0x14004c2a5
   14004c2da:	add    DWORD PTR [rax],eax
   14004c2dc:	and    al,0x2a
   14004c2de:	add    al,0x0
   14004c2e0:	ja     0x14004c2ad
   14004c2e2:	add    DWORD PTR [rax],eax
   14004c2e4:	and    ah,cl
   14004c2e6:	add    DWORD PTR [rax],eax
   14004c2e8:	sub    r8b,BYTE PTR [rax+rax*1]
   14004c2ec:	and    ah,cl
   14004c2ee:	add    DWORD PTR [rax],eax
   14004c2f0:	rex.WR int3 
   14004c2f2:	add    DWORD PTR [rax],eax
   14004c2f4:	rcl    BYTE PTR [rbx],0x4
   14004c2f7:	add    BYTE PTR [rsp+rcx*8+0x1],cl
   14004c2fb:	add    BYTE PTR [rsi+rcx*8],cl
   14004c2fe:	add    DWORD PTR [rax],eax
   14004c300:	push   0xc00042a
   14004c305:	(bad)  
   14004c306:	add    DWORD PTR [rax],eax
   14004c308:	es (bad) 
   14004c30a:	add    DWORD PTR [rax],eax
   14004c30c:	jl     0x14004c338
   14004c30e:	add    al,0x0
   14004c310:	xor    dh,cl
   14004c312:	add    DWORD PTR [rax],eax
   14004c314:	movabs ds:0xb0000405880001ce,eax
   14004c31d:	(bad)  
   14004c31e:	add    DWORD PTR [rax],eax
   14004c320:	dec    esi
   14004c322:	add    DWORD PTR [rax],eax
   14004c324:	mov    BYTE PTR [rbx],ch
   14004c326:	add    al,0x0
   14004c328:	dec    esi
   14004c32a:	add    DWORD PTR [rax],eax
   14004c32c:	clc    
   14004c32d:	rol    BYTE PTR [rcx],1
   14004c32f:	add    BYTE PTR [rax-0x7fffbd5],ah
   14004c335:	rol    BYTE PTR [rcx],1
   14004c337:	add    BYTE PTR [rax],dl
   14004c339:	rol    DWORD PTR [rcx],1
   14004c33b:	add    BYTE PTR [rbx+rbp*1-0x2eeffffc],dh
   14004c342:	add    DWORD PTR [rax],eax
   14004c344:	xor    ecx,edx
   14004c346:	add    DWORD PTR [rax],eax
   14004c348:	in     al,dx
   14004c349:	xor    al,BYTE PTR [rax+rax*1]
   14004c34c:	xor    ecx,edx
   14004c34e:	add    DWORD PTR [rax],eax
   14004c350:	(bad)
   14004c353:	add    ah,al
   14004c355:	sub    eax,DWORD PTR [rax+rax*1]
   14004c358:	(bad)
   14004c35b:	add    dl,ch
   14004c35d:	rol    DWORD PTR [rcx],1
   14004c35f:	add    ah,bl
   14004c361:	sub    eax,DWORD PTR [rax+rax*1]
   14004c364:	(bad)  
   14004c365:	rol    DWORD PTR [rcx],1
   14004c367:	add    BYTE PTR [rdi],ch
   14004c369:	rol    BYTE PTR [rcx],cl
   14004c36b:	add    ah,bl
   14004c36d:	sub    eax,DWORD PTR [rax+rax*1]
   14004c370:	(bad)  
   14004c371:	rol    BYTE PTR [rcx],cl
   14004c373:	add    BYTE PTR [rip+0xfffffffff40001d2],dh        # 0x13404c54b
   14004c379:	sub    eax,DWORD PTR [rax+rax*1]
   14004c37c:	rol    BYTE PTR [rcx],cl
   14004c37f:	add    cl,bl
   14004c381:	rol    BYTE PTR [rcx],cl
   14004c383:	add    BYTE PTR [rax],bh
   14004c385:	xor    BYTE PTR [rax+rax*1],al
   14004c388:	loopne 0x14004c35c
   14004c38a:	add    DWORD PTR [rax],eax
   14004c38c:	call   rdx
   14004c38e:	add    DWORD PTR [rax],eax
   14004c390:	push   rax
   14004c391:	sub    eax,DWORD PTR [rax+rax*1]
   14004c394:	call   rdx
   14004c396:	add    DWORD PTR [rax],eax
   14004c398:	cmp    ch,dl
   14004c39a:	add    DWORD PTR [rax],eax
   14004c39c:	pop    rsp
   14004c39d:	sub    eax,DWORD PTR [rax+rax*1]
   14004c3a0:	cmp    ch,dl
   14004c3a2:	add    DWORD PTR [rax],eax
   14004c3a4:	push   rbx
   14004c3a5:	(bad)  
   14004c3a6:	add    DWORD PTR [rax],eax
   14004c3a8:	js     0x14004c3d5
   14004c3aa:	add    al,0x0
   14004c3ac:	(bad)  
   14004c3ad:	(bad)  
   14004c3ae:	add    DWORD PTR [rax],eax
   14004c3b0:	and    al,0xd7
   14004c3b2:	add    DWORD PTR [rax],eax
   14004c3b4:	push   rsp
   14004c3b5:	sub    al,BYTE PTR [rax+rax*1]
   14004c3b8:	xor    bh,dl
   14004c3ba:	add    DWORD PTR [rax],eax
   14004c3bc:	rex.WRB xlat BYTE PTR ds:[rbx]
   14004c3be:	add    DWORD PTR [rax],eax
   14004c3c0:	mov    WORD PTR [rdx],gs
   14004c3c2:	add    al,0x0
   14004c3c4:	rex.WRB xlat BYTE PTR ds:[rbx]
   14004c3c6:	add    DWORD PTR [rax],eax
   14004c3c8:	repnz xlat BYTE PTR ds:[rbx]
   14004c3ca:	add    DWORD PTR [rax],eax
   14004c3cc:	xchg   esp,eax
   14004c3cd:	sub    al,BYTE PTR [rax+rax*1]
   14004c3d0:	repnz xlat BYTE PTR ds:[rbx]
   14004c3d2:	add    DWORD PTR [rax],eax
   14004c3d4:	hlt    
   14004c3d5:	xlat   BYTE PTR ds:[rbx]
   14004c3d6:	add    DWORD PTR [rax],eax
   14004c3d8:	test   al,0x2a
   14004c3da:	add    al,0x0
   14004c3dc:	add    al,bl
   14004c3de:	add    DWORD PTR [rax],eax
   14004c3e0:	fadd   DWORD PTR [rcx]
   14004c3e3:	add    BYTE PTR [rax],bh
   14004c3e5:	xor    BYTE PTR [rax+rax*1],al
   14004c3e8:	movabs al,ds:0x1d8a40001d8
   14004c3f1:	sub    eax,DWORD PTR [rax+rax*1]
   14004c3f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c3f5:	fadd   DWORD PTR [rcx]
   14004c3f7:	add    BYTE PTR [rax],cl
   14004c3f9:	fld    DWORD PTR [rcx]
   14004c3fb:	add    BYTE PTR [rax+0x800042a],bh
   14004c401:	fld    DWORD PTR [rcx]
   14004c403:	add    BYTE PTR [rcx-0x27],dl
   14004c406:	add    DWORD PTR [rax],eax
   14004c408:	int3   
   14004c409:	sub    al,BYTE PTR [rax+rax*1]
   14004c40c:	push   rcx
   14004c40d:	fld    DWORD PTR [rcx]
   14004c40f:	add    dl,ch
   14004c411:	fld    DWORD PTR [rcx]
   14004c413:	add    al,ah
   14004c415:	sub    al,BYTE PTR [rax+rax*1]
   14004c418:	(bad)  
   14004c419:	fld    DWORD PTR [rcx]
   14004c41b:	add    cl,bh
   14004c41d:	fld    DWORD PTR [rcx]
   14004c41f:	add    al,dh
   14004c421:	sub    al,BYTE PTR [rax+rax*1]
   14004c424:	add    dl,bl
   14004c426:	add    DWORD PTR [rax],eax
   14004c428:	add    al,0xda
   14004c42a:	add    DWORD PTR [rax],eax
   14004c42c:	add    BYTE PTR [rbx],ch
   14004c42e:	add    al,0x0
   14004c430:	add    al,0xda
   14004c432:	add    DWORD PTR [rax],eax
   14004c434:	fiadd  DWORD PTR [ecx]
   14004c437:	add    BYTE PTR [rax],cl
   14004c439:	sub    eax,DWORD PTR [rax+rax*1]
   14004c43c:	fiadd  DWORD PTR [ecx]
   14004c43f:	add    BYTE PTR [rcx+0x1c0001da],dh
   14004c445:	sub    eax,DWORD PTR [rax+rax*1]
   14004c448:	mov    cl,0xda
   14004c44a:	add    DWORD PTR [rax],eax
   14004c44c:	rex.WR fild DWORD PTR [rcx]
   14004c44f:	add    BYTE PTR [rax],dh
   14004c451:	sub    eax,DWORD PTR [rax+rax*1]
   14004c454:	rex.WR fild DWORD PTR [rcx]
   14004c457:	add    BYTE PTR [rbx-0x25],bl
   14004c45a:	add    DWORD PTR [rax],eax
   14004c45c:	rex sub eax,DWORD PTR [rax+rax*1]
   14004c460:	mov    al,0xdb
   14004c462:	add    DWORD PTR [rax],eax
   14004c464:	rex.W fadd QWORD PTR [rcx]
   14004c467:	add    BYTE PTR [rax],ch
   14004c469:	sub    al,0x4
   14004c46b:	add    BYTE PTR [rax-0x24],dl
   14004c46e:	add    DWORD PTR [rax],eax
   14004c470:	imul   ebx,esp,0x1
   14004c473:	add    BYTE PTR [rax+0x70000408],bl
   14004c479:	fadd   QWORD PTR [rcx]
   14004c47b:	add    BYTE PTR [rdi+0x4c0001dc],al
   14004c481:	sub    BYTE PTR [rax+rax*1],al
   14004c484:	nop
   14004c485:	fadd   QWORD PTR [rcx]
   14004c487:	add    BYTE PTR [rcx-0x67fffe24],dh
   14004c48d:	or     BYTE PTR [rax+rax*1],al
   14004c490:	rcr    ah,0x1
   14004c493:	add    BYTE PTR [rbx*8+0x5880001],ah
   14004c49a:	add    al,0x0
   14004c49c:	xor    ch,bl
   14004c49e:	add    DWORD PTR [rax],eax
   14004c4a0:	pop    rcx
   14004c4a1:	fld    QWORD PTR [rcx]
   14004c4a3:	add    BYTE PTR [rax+0x2d],dh
   14004c4a6:	add    al,0x0
   14004c4a8:	pop    rcx
   14004c4a9:	fld    QWORD PTR [rcx]
   14004c4ab:	add    BYTE PTR [rsi-0x23],ah
   14004c4ae:	add    DWORD PTR [rax],eax
   14004c4b0:	sub    BYTE PTR [rip+0xffffffffdd660004],0x1        # 0x11d6ac4bb
   14004c4b7:	add    ah,al
   14004c4b9:	fld    QWORD PTR [rcx]
   14004c4bb:	add    BYTE PTR [rbp+rbp*1-0x223bfffc],dl
   14004c4c2:	add    DWORD PTR [rax],eax
   14004c4c4:	leave  
   14004c4c5:	fld    QWORD PTR [rcx]
   14004c4c7:	add    BYTE PTR [rax-0x36fffbd3],ch
   14004c4cd:	fld    QWORD PTR [rcx]
   14004c4cf:	add    dl,bl
   14004c4d1:	fld    QWORD PTR [rcx]
   14004c4d3:	add    BYTE PTR [rax-0x1ffffbd3],bh
   14004c4d9:	fld    QWORD PTR [rcx]
   14004c4db:	add    BYTE PTR [rbx-0x22],bh
   14004c4de:	add    DWORD PTR [rax],eax
   14004c4e0:	pushf  
   14004c4e1:	xor    BYTE PTR [rax+rax*1],al
   14004c4e4:	sbb    dh,0x1
   14004c4e7:	add    dh,al
   14004c4e9:	fiadd  WORD PTR [rcx]
   14004c4eb:	add    BYTE PTR [rax+rax*2],cl
   14004c4ee:	add    al,0x0
   14004c4f0:	rcr    dh,1
   14004c4f2:	add    DWORD PTR [rax],eax
   14004c4f4:	or     bh,bl
   14004c4f6:	add    DWORD PTR [rax],eax
   14004c4f8:	in     al,dx
   14004c4f9:	sub    al,0x4
   14004c4fb:	add    BYTE PTR [rax],cl
   14004c4fd:	fild   WORD PTR [rcx]
   14004c4ff:	add    bh,cl
   14004c501:	loopne 0x14004c504
   14004c503:	add    al,bh
   14004c505:	sub    al,0x4
   14004c507:	add    bh,cl
   14004c509:	loopne 0x14004c50c
   14004c50b:	add    BYTE PTR [rip+0x100001e1],dl        # 0x15004c6f2
   14004c511:	sub    eax,0xe1150004
   14004c516:	add    DWORD PTR [rax],eax
   14004c518:	(bad)  
   14004c519:	loope  0x14004c51c
   14004c51b:	add    BYTE PTR [rbp*1-0x1edffffc],ah
   14004c522:	add    DWORD PTR [rax],eax
   14004c524:	test   eax,0x340001e1
   14004c529:	sub    eax,0xe1c00004
   14004c52e:	add    DWORD PTR [rax],eax
   14004c530:	cld    
   14004c531:	loope  0x14004c534
   14004c533:	add    BYTE PTR [rax+0x40000408],bl
   14004c539:	loop   0x14004c53c
   14004c53b:	add    BYTE PTR [rbx-0x1e],ch
   14004c53e:	add    DWORD PTR [rax],eax
   14004c540:	cwde   
   14004c541:	or     BYTE PTR [rax+rax*1],al
   14004c544:	jo     0x14004c528
   14004c546:	add    DWORD PTR [rax],eax
   14004c548:	test   eax,0x980001e2
   14004c54d:	or     BYTE PTR [rax+rax*1],al
   14004c550:	mov    al,0xe2
   14004c552:	add    DWORD PTR [rax],eax
   14004c554:	sub    esp,ebx
   14004c556:	add    DWORD PTR [rax],eax
   14004c558:	sbb    BYTE PTR [rsp+rax*1],bh
   14004c55b:	add    BYTE PTR [rax-0x1d],ah
   14004c55e:	add    DWORD PTR [rax],eax
   14004c560:	test   al,0xe3
   14004c562:	add    DWORD PTR [rax],eax
   14004c564:	mov    BYTE PTR [rip+0xffffffffe3b00004],al        # 0x123b4c56e
   14004c56a:	add    DWORD PTR [rax],eax
   14004c56c:	rex.RB in al,0x1
   14004c56f:	add    BYTE PTR [rax-0x3ffffbf8],bl
   14004c575:	in     eax,0x1
   14004c577:	add    BYTE PTR [rdi+riz*8+0x1],ch
   14004c57b:	add    BYTE PTR [rsp+rbp*1],al
   14004c57e:	add    al,0x0
   14004c580:	nop
   14004c581:	out    0x1,eax
   14004c583:	add    ah,dl
   14004c585:	out    0x1,eax
   14004c587:	add    BYTE PTR [rbp*1-0x181ffffc],dh
   14004c58e:	add    DWORD PTR [rax],eax
   14004c590:	adc    ebp,eax
   14004c592:	add    DWORD PTR [rax],eax
   14004c594:	sbb    al,0x2c
   14004c596:	add    al,0x0
   14004c598:	and    al,ch
   14004c59a:	add    DWORD PTR [rax],eax
   14004c59c:	rex.WRXB call 0x1458cc5a3
   14004c5a2:	add    al,0x0
   14004c5a4:	push   rax
   14004c5a5:	call   0x12885c5ab
   14004c5aa:	add    DWORD PTR [rax],eax
   14004c5ac:	mov    BYTE PTR [rip+0xffffffffe8900004],al        # 0x12894c5b6
   14004c5b2:	add    DWORD PTR [rax],eax
   14004c5b4:	xchg   esi,eax
   14004c5b5:	jmp    0x17050c5bb
   14004c5ba:	add    al,0x0
   14004c5bc:	movabs al,ds:0x880001e9ea0001e9
   14004c5c5:	add    eax,0xe9f00004
   14004c5ca:	add    DWORD PTR [rax],eax
   14004c5cc:	and    edx,ebp
   14004c5ce:	add    DWORD PTR [rax],eax
   14004c5d0:	mov    BYTE PTR [rip+0xffffffffea300004],al        # 0x12a34c5da
   14004c5d6:	add    DWORD PTR [rax],eax
   14004c5d8:	xor    ebp,ebx
   14004c5da:	add    DWORD PTR [rax],eax
   14004c5dc:	rex.WR xor BYTE PTR [rax+rax*1],r8b
   14004c5e0:	rex jmp 0x14004c5e4
   14004c5e3:	add    BYTE PTR [rcx-0x15],ch
   14004c5e6:	add    DWORD PTR [rax],eax
   14004c5e8:	jl     0x14004c616
   14004c5ea:	add    al,0x0
   14004c5ec:	imul   ebp,ebx,0xebcb0001
   14004c5f2:	add    DWORD PTR [rax],eax
   14004c5f4:	mov    WORD PTR [rsp+rax*1],gs
   14004c5f7:	add    bl,cl
   14004c5f9:	jmp    0x14004c5fc
   14004c5fb:	add    BYTE PTR [rcx],ch
   14004c5fd:	in     al,dx
   14004c5fe:	add    DWORD PTR [rax],eax
   14004c600:	movabs al,ds:0x960001ec2900042c
   14004c609:	in     al,dx
   14004c60a:	add    DWORD PTR [rax],eax
   14004c60c:	mov    ah,0x2c
   14004c60e:	add    al,0x0
   14004c610:	xchg   esi,eax
   14004c611:	in     al,dx
   14004c612:	add    DWORD PTR [rax],eax
   14004c614:	stos   DWORD PTR es:[rdi],eax
   14004c615:	in     al,dx
   14004c616:	add    DWORD PTR [rax],eax
   14004c618:	(bad)  
   14004c619:	sub    al,0x4
   14004c61b:	add    BYTE PTR [rax-0x45fffe14],dh
   14004c621:	repnz add DWORD PTR [rax],eax
   14004c624:	(bad)  
   14004c625:	sub    al,0x4
   14004c627:	add    al,al
   14004c629:	repnz add DWORD PTR [rax],eax
   14004c62c:	(bad)  
   14004c62d:	repz add DWORD PTR [rax],eax
   14004c630:	cmp    BYTE PTR [rsp+rax*1],ch
   14004c633:	add    BYTE PTR [rdi],al
   14004c635:	repz add DWORD PTR [rax],eax
   14004c638:	(bad)  
   14004c639:	repz add DWORD PTR [rax],eax
   14004c63c:	rex.W sub al,0x4
   14004c63f:	add    BYTE PTR [rdi],bh
   14004c641:	repz add DWORD PTR [rax],eax
   14004c644:	rex.WRX hlt 
   14004c646:	add    DWORD PTR [rax],eax
   14004c648:	pop    rsp
   14004c649:	sub    al,0x4
   14004c64b:	add    BYTE PTR [rax-0xc],dl
   14004c64e:	add    DWORD PTR [rax],eax
   14004c650:	ret    0x1f4
   14004c653:	add    BYTE PTR [rax-0x2ffffbfb],cl
   14004c659:	hlt    
   14004c65a:	add    DWORD PTR [rax],eax
   14004c65c:	div    ah
   14004c65e:	add    DWORD PTR [rax],eax
   14004c660:	jo     0x14004c690
   14004c662:	add    al,0x0
   14004c664:	div    ah
   14004c666:	add    DWORD PTR [rax],eax
   14004c668:	cmp    bh,dh
   14004c66a:	add    DWORD PTR [rax],eax
   14004c66c:	sub    BYTE PTR [rsi],0x4
   14004c66f:	add    BYTE PTR [rax],bh
   14004c671:	test   DWORD PTR [rcx],0x1f74600
   14004c677:	add    BYTE PTR [rsi+rbp*1-0x8affffc],bl
   14004c67e:	add    DWORD PTR [rax],eax
   14004c680:	(bad)
   14004c683:	add    BYTE PTR [rax],bh
   14004c685:	cs add al,0x0
   14004c688:	(bad)
   14004c68b:	add    BYTE PTR [rdx],bh
   14004c68d:	stc    
   14004c68e:	add    DWORD PTR [rax],eax
   14004c690:	rex.WR
   14004c691:	cs add al,0x0
   14004c694:	cmp    bh,cl
   14004c696:	add    DWORD PTR [rax],eax
   14004c698:	cmp    edi,ecx
   14004c69a:	add    DWORD PTR [rax],eax
   14004c69c:	(bad)  
   14004c69d:	cs add al,0x0
   14004c6a0:	rex stc 
   14004c6a2:	add    DWORD PTR [rax],eax
   14004c6a4:	jl     0x14004c69f
   14004c6a6:	add    DWORD PTR [rax],eax
   14004c6a8:	loopne 0x14004c6c6
   14004c6aa:	add    al,0x0
   14004c6ac:	jl     0x14004c6a7
   14004c6ae:	add    DWORD PTR [rax],eax
   14004c6b0:	leave  
   14004c6b1:	stc    
   14004c6b2:	add    DWORD PTR [rax],eax
   14004c6b4:	add    BYTE PTR [rdi],ch
   14004c6b6:	add    al,0x0
   14004c6b8:	leave  
   14004c6b9:	stc    
   14004c6ba:	add    DWORD PTR [rax],eax
   14004c6bc:	add    dl,bh
   14004c6be:	add    DWORD PTR [rax],eax
   14004c6c0:	adc    al,0x2f
   14004c6c2:	add    al,0x0
   14004c6c4:	add    dl,bh
   14004c6c6:	add    DWORD PTR [rax],eax
   14004c6c8:	stos   DWORD PTR es:[rdi],eax
   14004c6c9:	cli    
   14004c6ca:	add    DWORD PTR [rax],eax
   14004c6cc:	pop    rax
   14004c6cd:	(bad)  
   14004c6ce:	add    al,0x0
   14004c6d0:	stos   DWORD PTR es:[rdi],eax
   14004c6d1:	cli    
   14004c6d2:	add    DWORD PTR [rax],eax
   14004c6d4:	(bad)  
   14004c6d5:	cli    
   14004c6d6:	add    DWORD PTR [rax],eax
   14004c6d8:	fs (bad) 
   14004c6da:	add    al,0x0
   14004c6dc:	(bad)  
   14004c6dd:	cli    
   14004c6de:	add    DWORD PTR [rax],eax
   14004c6e0:	cmp    al,0xfb
   14004c6e2:	add    DWORD PTR [rax],eax
   14004c6e4:	js     0x14004c715
   14004c6e6:	add    al,0x0
   14004c6e8:	cmp    al,0xfb
   14004c6ea:	add    DWORD PTR [rax],eax
   14004c6ec:	(bad)  
   14004c6ed:	sti    
   14004c6ee:	add    DWORD PTR [rax],eax
   14004c6f0:	mov    WORD PTR [rdi],gs
   14004c6f2:	add    al,0x0
   14004c6f4:	(bad)  
   14004c6f5:	sti    
   14004c6f6:	add    DWORD PTR [rax],eax
   14004c6f8:	xor    edi,esp
   14004c6fa:	add    DWORD PTR [rax],eax
   14004c6fc:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c6fd:	(bad)  
   14004c6fe:	add    al,0x0
   14004c700:	xor    edi,esp
   14004c702:	add    DWORD PTR [rax],eax
   14004c704:	rex.RXB cld 
   14004c706:	add    DWORD PTR [rax],eax
   14004c708:	mov    esp,0x4700042f
   14004c70d:	cld    
   14004c70e:	add    DWORD PTR [rax],eax
   14004c710:	outs   dx,DWORD PTR ds:[rsi]
   14004c711:	cld    
   14004c712:	add    DWORD PTR [rax],eax
   14004c714:	int3   
   14004c715:	(bad)  
   14004c716:	add    al,0x0
   14004c718:	jo     0x14004c716
   14004c71a:	add    DWORD PTR [rax],eax
   14004c71c:	(bad)  
   14004c71d:	std    
   14004c71e:	add    DWORD PTR [rax],eax
   14004c720:	clc    
   14004c721:	sub    eax,0xfd2f0004
   14004c726:	add    DWORD PTR [rax],eax
   14004c728:	fadd   QWORD PTR [rcx]
   14004c72a:	add    al,BYTE PTR [rax]
   14004c72c:	or     BYTE PTR [rsi],ch
   14004c72e:	add    al,0x0
   14004c730:	fadd   QWORD PTR [rcx]
   14004c732:	add    al,BYTE PTR [rax]
   14004c734:	add    BYTE PTR [rdx],al
   14004c736:	add    al,BYTE PTR [rax]
   14004c738:	and    BYTE PTR [rsi],ch
   14004c73a:	add    al,0x0
   14004c73c:	add    BYTE PTR [rdx],al
   14004c73e:	add    al,BYTE PTR [rax]
   14004c740:	and    DWORD PTR [rdx],eax
   14004c742:	add    al,BYTE PTR [rax]
   14004c744:	lods   al,BYTE PTR ds:[rsi]
   14004c745:	cs add al,0x0
   14004c748:	and    DWORD PTR [rdx],eax
   14004c74a:	add    al,BYTE PTR [rax]
   14004c74c:	xor    al,BYTE PTR [rdx]
   14004c74e:	add    al,BYTE PTR [rax]
   14004c750:	mov    ah,0x2e
   14004c752:	add    al,0x0
   14004c754:	xor    al,BYTE PTR [rdx]
   14004c756:	add    al,BYTE PTR [rax]
   14004c758:	(bad)  
   14004c759:	add    al,0x2
   14004c75b:	add    al,cl
   14004c75d:	cs add al,0x0
   14004c760:	(bad)  
   14004c761:	add    al,0x2
   14004c763:	add    BYTE PTR [rsp+rax*1],cl
   14004c766:	add    al,BYTE PTR [rax]
   14004c768:	loopne 0x14004c798
   14004c76a:	add    al,0x0
   14004c76c:	or     al,0x4
   14004c76e:	add    al,BYTE PTR [rax]
   14004c770:	adc    al,BYTE PTR [rdx+rax*1]
   14004c773:	add    al,dh
   14004c775:	cs add al,0x0
   14004c778:	and    BYTE PTR [rdx+rax*1],al
   14004c77b:	add    BYTE PTR [rdi],ch
   14004c77d:	add    al,0x2
   14004c77f:	add    al,cl
   14004c781:	sub    eax,0x42f0004
   14004c786:	add    al,BYTE PTR [rax]
   14004c788:	mov    ah,0x4
   14004c78a:	add    al,BYTE PTR [rax]
   14004c78c:	(bad)  
   14004c78d:	sub    eax,0x4b40004
   14004c792:	add    al,BYTE PTR [rax]
   14004c794:	xor    al,0x5
   14004c796:	add    al,BYTE PTR [rax]
   14004c798:	call   0x18004cbca
   14004c79d:	add    eax,0x57c0002
   14004c7a2:	add    al,BYTE PTR [rax]
   14004c7a4:	cmp    al,0x2d
   14004c7a6:	add    al,0x0
   14004c7a8:	jl     0x14004c7af
   14004c7aa:	add    al,BYTE PTR [rax]
   14004c7ac:	hlt    
   14004c7ad:	add    eax,0x2d4c0002
   14004c7b2:	add    al,0x0
   14004c7b4:	hlt    
   14004c7b5:	add    eax,0x6270002
   14004c7ba:	add    al,BYTE PTR [rax]
   14004c7bc:	(bad)  
   14004c7bd:	sub    eax,0x6300004
   14004c7c2:	add    al,BYTE PTR [rax]
   14004c7c4:	jnp    0x14004c7cc
   14004c7c6:	add    al,BYTE PTR [rax]
   14004c7c8:	and    al,0x2f
   14004c7ca:	add    al,0x0
   14004c7cc:	jnp    0x14004c7d4
   14004c7ce:	add    al,BYTE PTR [rax]
   14004c7d0:	or     al,0x7
   14004c7d2:	add    al,BYTE PTR [rax]
   14004c7d4:	xor    al,0x2f
   14004c7d6:	add    al,0x0
   14004c7d8:	or     al,0x7
   14004c7da:	add    al,BYTE PTR [rax]
   14004c7dc:	cmp    BYTE PTR [rdi],al
   14004c7de:	add    al,BYTE PTR [rax]
   14004c7e0:	rex.W (bad) 
   14004c7e2:	add    al,0x0
   14004c7e4:	rex (bad) 
   14004c7e6:	add    al,BYTE PTR [rax]
   14004c7e8:	add    BYTE PTR [rdi],0x2
   14004c7eb:	add    BYTE PTR [rax-0x6ffffbfb],cl
   14004c7f1:	(bad)  
   14004c7f2:	add    al,BYTE PTR [rax]
   14004c7f4:	ret    
   14004c7f5:	(bad)  
   14004c7f6:	add    al,BYTE PTR [rax]
   14004c7f8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004c7f9:	add    eax,0x7d00004
   14004c7fe:	add    al,BYTE PTR [rax]
   14004c800:	rex.XB or BYTE PTR [r10],al
   14004c803:	add    BYTE PTR [rax+0x50000405],cl
   14004c809:	or     BYTE PTR [rdx],al
   14004c80b:	add    BYTE PTR [rsi],bh
   14004c80d:	or     DWORD PTR [rdx],eax
   14004c80f:	add    BYTE PTR [rax],bh
   14004c811:	xor    BYTE PTR [rax+rax*1],al
   14004c814:	rex or DWORD PTR [rdx],eax
   14004c817:	add    bh,bl
   14004c819:	or     DWORD PTR [rdx],eax
   14004c81b:	add    BYTE PTR [rax-0x1ffffbf8],bl
   14004c821:	or     DWORD PTR [rdx],eax
   14004c823:	add    BYTE PTR [rsi+0xa],cl
   14004c826:	add    al,BYTE PTR [rax]
   14004c828:	cwde   
   14004c829:	or     BYTE PTR [rax+rax*1],al
   14004c82c:	push   rax
   14004c82d:	or     al,BYTE PTR [rdx]
   14004c82f:	add    dl,dh
   14004c831:	or     al,BYTE PTR [rdx]
   14004c833:	add    BYTE PTR [rax+rsi*1+0x4],cl
   14004c837:	add    BYTE PTR [rax],al
   14004c839:	or     eax,DWORD PTR [rdx]
   14004c83b:	add    BYTE PTR [rsi+0xb],ch
   14004c83e:	add    al,BYTE PTR [rax]
   14004c840:	mov    BYTE PTR [rip+0xb700004],al        # 0x14b74c84a
   14004c846:	add    al,BYTE PTR [rax]
   14004c848:	retf   
   14004c849:	or     eax,DWORD PTR [rdx]
   14004c84b:	add    BYTE PTR [rax-0x2ffffbf8],bl
   14004c851:	or     eax,DWORD PTR [rdx]
   14004c853:	add    BYTE PTR [rdx+0xc],al
   14004c856:	add    al,BYTE PTR [rax]
   14004c858:	cwde   
   14004c859:	or     BYTE PTR [rax+rax*1],al
   14004c85c:	push   rax
   14004c85d:	or     al,0x2
   14004c85f:	add    BYTE PTR [rsi-0x67fffdf4],dl
   14004c865:	or     BYTE PTR [rax+rax*1],al
   14004c868:	movabs al,ds:0x1400020cca00020c
   14004c871:	xor    al,BYTE PTR [rax+rax*1]
   14004c874:	retf   0x20c
   14004c877:	add    BYTE PTR [rcx*1+0x321c0002],al
   14004c87e:	add    al,0x0
   14004c880:	add    al,0xd
   14004c882:	add    al,BYTE PTR [rax]
   14004c884:	adc    DWORD PTR [rip+0x32340002],ecx        # 0x17238c88c
   14004c88a:	add    al,0x0
   14004c88c:	and    BYTE PTR [rip+0xe6e0002],cl        # 0x14e72c894
   14004c892:	add    al,BYTE PTR [rax]
   14004c894:	mov    BYTE PTR [rip+0xe700004],al        # 0x14e74c89e
   14004c89a:	add    al,BYTE PTR [rax]
   14004c89c:	out    dx,al
   14004c89d:	(bad)  
   14004c89e:	add    al,BYTE PTR [rax]
   14004c8a0:	cwde   
   14004c8a1:	or     BYTE PTR [rax+rax*1],al
   14004c8a4:	out    dx,al
   14004c8a5:	(bad)  
   14004c8a6:	add    al,BYTE PTR [rax]
   14004c8a8:	(bad)  
   14004c8a9:	lar    eax,WORD PTR [rax]
   14004c8ac:	and    BYTE PTR [rcx],dh
   14004c8ae:	add    al,0x0
   14004c8b0:	(bad)  
   14004c8b1:	lar    eax,WORD PTR [rax]
   14004c8b4:	(bad)  
   14004c8b5:	lar    eax,WORD PTR [rax]
   14004c8b8:	xor    al,0x31
   14004c8ba:	add    al,0x0
   14004c8bc:	rex lar eax,WORD PTR [rax]
   14004c8c0:	mov    ebx,0x9800020f
   14004c8c5:	or     BYTE PTR [rax+rax*1],al
   14004c8c8:	ror    BYTE PTR [rdi],0x2
   14004c8cb:	add    BYTE PTR [rbx],al
   14004c8cd:	adc    BYTE PTR [rdx],al
   14004c8cf:	add    BYTE PTR [rax+0x30000405],cl
   14004c8d5:	adc    BYTE PTR [rdx],al
   14004c8d7:	add    dl,bl
   14004c8d9:	adc    BYTE PTR [rdx],al
   14004c8db:	add    ah,bl
   14004c8dd:	(bad)  
   14004c8de:	add    al,0x0
   14004c8e0:	loopne 0x14004c8f2
   14004c8e2:	add    al,BYTE PTR [rax]
   14004c8e4:	mov    edx,DWORD PTR [rcx]
   14004c8e6:	add    al,BYTE PTR [rax]
   14004c8e8:	pushf  
   14004c8e9:	xor    BYTE PTR [rax+rax*1],al
   14004c8ec:	nop
   14004c8ed:	adc    DWORD PTR [rdx],eax
   14004c8ef:	add    BYTE PTR [rbp+0x4c000211],ah
   14004c8f5:	sub    BYTE PTR [rax+rax*1],al
   14004c8f8:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004c8f9:	adc    DWORD PTR [rdx],eax
   14004c8fb:	add    ch,bl
   14004c8fd:	adc    al,BYTE PTR [rdx]
   14004c8ff:	add    al,dh
   14004c901:	(bad)  
   14004c902:	add    al,0x0
   14004c904:	fst    QWORD PTR [rdx]
   14004c906:	add    al,BYTE PTR [rax]
   14004c908:	not    BYTE PTR [rdx]
   14004c90a:	add    al,BYTE PTR [rax]
   14004c90c:	adc    BYTE PTR [rax],dh
   14004c90e:	add    al,0x0
   14004c910:	not    BYTE PTR [rdx]
   14004c912:	add    al,BYTE PTR [rax]
   14004c914:	add    dl,BYTE PTR [rbx]
   14004c916:	add    al,BYTE PTR [rax]
   14004c918:	sub    BYTE PTR [rax],dh
   14004c91a:	add    al,0x0
   14004c91c:	adc    BYTE PTR [rbx],dl
   14004c91e:	add    al,BYTE PTR [rax]
   14004c920:	unpcklps xmm0,XMMWORD PTR [rdx]
   14004c923:	add    al,ah
   14004c925:	xor    DWORD PTR [rax+rax*1],eax
   14004c928:	adc    BYTE PTR [rdx+rax*1],dl
   14004c92b:	add    BYTE PTR [rcx-0x53fffdec],al
   14004c931:	xor    BYTE PTR [rax+rax*1],al
   14004c934:	adc    DWORD PTR [rdx+rax*1],0x214bb00
   14004c93b:	add    BYTE PTR [rax+rsi*1+0x14bb0004],bh
   14004c942:	add    al,BYTE PTR [rax]
   14004c944:	movabs al,ds:0xa0000430d0000215
   14004c94d:	adc    eax,0x15c20002
   14004c952:	add    al,BYTE PTR [rax]
   14004c954:	in     al,dx
   14004c955:	xor    BYTE PTR [rax+rax*1],al
   14004c958:	ret    0x215
   14004c95b:	add    bh,dl
   14004c95d:	adc    eax,0x30fc0002
   14004c962:	add    al,0x0
   14004c964:	loopne 0x14004c97b
   14004c966:	add    al,BYTE PTR [rax]
   14004c968:	popf   
   14004c969:	(bad)  
   14004c96a:	add    al,BYTE PTR [rax]
   14004c96c:	xor    BYTE PTR fs:[rax+rax*1],al
   14004c970:	popf   
   14004c971:	(bad)  
   14004c972:	add    al,BYTE PTR [rax]
   14004c974:	(bad)  
   14004c975:	(bad)  
   14004c976:	add    al,BYTE PTR [rax]
   14004c978:	js     0x14004c9aa
   14004c97a:	add    al,0x0
   14004c97c:	(bad)  
   14004c97d:	(bad)  
   14004c97e:	add    al,BYTE PTR [rax]
   14004c980:	sub    al,0x17
   14004c982:	add    al,BYTE PTR [rax]
   14004c984:	mov    WORD PTR [rax],?
   14004c986:	add    al,0x0
   14004c988:	xor    BYTE PTR [rdi],dl
   14004c98a:	add    al,BYTE PTR [rax]
   14004c98c:	jae    0x14004c9a5
   14004c98e:	add    al,BYTE PTR [rax]
   14004c990:	mov    BYTE PTR [rip+0x17800004],al        # 0x15784c99a
   14004c996:	add    al,BYTE PTR [rax]
   14004c998:	fstp   QWORD PTR [rax]
   14004c99a:	add    al,BYTE PTR [rax]
   14004c99c:	or     al,0x31
   14004c99e:	add    al,0x0
   14004c9a0:	loopne 0x14004c9ba
   14004c9a2:	add    al,BYTE PTR [rax]
   14004c9a4:	sbb    DWORD PTR ds:[rdx],eax
   14004c9a7:	add    BYTE PTR [rax],bh
   14004c9a9:	xor    BYTE PTR [rax+rax*1],al
   14004c9ac:	rex sbb DWORD PTR [rdx],eax
   14004c9af:	add    BYTE PTR [rbx+0x19],ah
   14004c9b2:	add    al,BYTE PTR [rax]
   14004c9b4:	loopne 0x14004c9d2
   14004c9b6:	add    al,0x0
   14004c9b8:	movsxd ebx,DWORD PTR [rcx]
   14004c9ba:	add    al,BYTE PTR [rax]
   14004c9bc:	cmc    
   14004c9bd:	sbb    DWORD PTR [rdx],eax
   14004c9bf:	add    al,dh
   14004c9c1:	xor    DWORD PTR [rax+rax*1],eax
   14004c9c4:	cmc    
   14004c9c5:	sbb    DWORD PTR [rdx],eax
   14004c9c7:	add    BYTE PTR [rdx],al
   14004c9c9:	sbb    al,BYTE PTR [rdx]
   14004c9cb:	add    BYTE PTR [rdx+rsi*1],al
   14004c9ce:	add    al,0x0
   14004c9d0:	adc    BYTE PTR [rdx],bl
   14004c9d2:	add    al,BYTE PTR [rax]
   14004c9d4:	xor    bl,BYTE PTR [rdx]
   14004c9d6:	add    al,BYTE PTR [rax]
   14004c9d8:	sbb    BYTE PTR [rax],bh
   14004c9da:	add    al,0x0
   14004c9dc:	sbb    al,BYTE PTR [rdx]
   14004c9df:	add    BYTE PTR [rcx],ch
   14004c9e1:	sbb    eax,DWORD PTR [rdx]
   14004c9e3:	add    BYTE PTR [rax+0x31],ch
   14004c9e6:	add    al,0x0
   14004c9e8:	xor    BYTE PTR [rbx],bl
   14004c9ea:	add    al,BYTE PTR [rax]
   14004c9ec:	pop    rdx
   14004c9ed:	sbb    eax,DWORD PTR [rdx]
   14004c9ef:	add    BYTE PTR [rax+0x31],bh
   14004c9f2:	add    al,0x0
   14004c9f4:	pop    rdx
   14004c9f5:	sbb    eax,DWORD PTR [rdx]
   14004c9f7:	add    BYTE PTR [rdi-0x7bfffde5],dh
   14004c9fd:	xor    DWORD PTR [rax+rax*1],eax
   14004ca00:	mov    bh,0x1b
   14004ca02:	add    al,BYTE PTR [rax]
   14004ca04:	adc    eax,0x9c00021c
   14004ca09:	xor    DWORD PTR [rax+rax*1],eax
   14004ca0c:	adc    eax,0x2500021c
   14004ca11:	sbb    al,0x2
   14004ca13:	add    BYTE PTR [rcx+rsi*1+0x1c250004],dh
   14004ca1a:	add    al,BYTE PTR [rax]
   14004ca1c:	jo     0x14004ca3a
   14004ca1e:	add    al,BYTE PTR [rax]
   14004ca20:	(bad)  
   14004ca21:	xor    DWORD PTR [rax+rax*1],eax
   14004ca24:	jo     0x14004ca42
   14004ca26:	add    al,BYTE PTR [rax]
   14004ca28:	xlat   BYTE PTR ds:[rbx]
   14004ca29:	sbb    al,0x2
   14004ca2b:	add    BYTE PTR [rax-0x1ffffbfb],cl
   14004ca31:	sbb    al,0x2
   14004ca33:	add    BYTE PTR [rsi+0x1d],cl
   14004ca36:	add    al,BYTE PTR [rax]
   14004ca38:	sbb    BYTE PTR [rsp+rax*1],bh
   14004ca3b:	add    BYTE PTR [rsi+0x1d],cl
   14004ca3e:	add    al,BYTE PTR [rax]
   14004ca40:	rcr    BYTE PTR [rip+0x31440002],1        # 0x17148ca48
   14004ca46:	add    al,0x0
   14004ca48:	rcr    BYTE PTR [rip+0x1dfa0002],1        # 0x15dfeca50
   14004ca4e:	add    al,BYTE PTR [rax]
   14004ca50:	pop    rax
   14004ca51:	xor    DWORD PTR [rax+rax*1],eax
   14004ca54:	add    BYTE PTR [rsi],bl
   14004ca56:	add    al,BYTE PTR [rax]
   14004ca58:	fistp  DWORD PTR [rsi]
   14004ca5a:	add    al,BYTE PTR [rax]
   14004ca5c:	mov    BYTE PTR [rip+0x1f400004],al        # 0x15f44ca66
   14004ca62:	add    al,BYTE PTR [rax]
   14004ca64:	mov    bl,BYTE PTR [rdi]
   14004ca66:	add    al,BYTE PTR [rax]
   14004ca68:	mov    BYTE PTR [rip+0x1f900004],al        # 0x15f94ca72
   14004ca6e:	add    al,BYTE PTR [rax]
   14004ca70:	jle    0x14004ca92
   14004ca72:	add    al,BYTE PTR [rax]
   14004ca74:	(bad)  
   14004ca75:	xor    DWORD PTR [rax+rax*1],eax
   14004ca78:	and    BYTE PTR [rax],0x2
   14004ca7b:	add    BYTE PTR [rcx],bh
   14004ca7d:	and    DWORD PTR [rdx],eax
   14004ca7f:	add    BYTE PTR [rax],dh
   14004ca81:	rex.B add al,0x0
   14004ca84:	rex and DWORD PTR [rdx],eax
   14004ca87:	add    ch,al
   14004ca89:	and    DWORD PTR [rdx],eax
   14004ca8b:	add    BYTE PTR [rax+0x32],ah
   14004ca8e:	add    al,0x0
   14004ca90:	(bad)
   14004ca93:	add    cl,dh
   14004ca95:	and    al,BYTE PTR [rdx]
   14004ca97:	add    BYTE PTR [rax+0x32],dh
   14004ca9a:	add    al,0x0
   14004ca9c:	icebp  
   14004ca9d:	and    al,BYTE PTR [rdx]
   14004ca9f:	add    BYTE PTR [rsp],ch
   14004caa2:	add    al,BYTE PTR [rax]
   14004caa4:	mov    WORD PTR [rdx],?
   14004caa6:	add    al,0x0
   14004caa8:	sub    al,0x24
   14004caaa:	add    al,BYTE PTR [rax]
   14004caac:	cmp    eax,0xa8000224
   14004cab1:	xor    al,BYTE PTR [rax+rax*1]
   14004cab4:	and    al,0x2
   14004cab7:	add    BYTE PTR [rax+0x24],ah
   14004caba:	add    al,BYTE PTR [rax]
   14004cabc:	cmp    al,0x23
   14004cabe:	add    al,0x0
   14004cac0:	(bad)  
   14004cac1:	and    al,0x2
   14004cac3:	add    BYTE PTR [rbx],al
   14004cac5:	and    eax,0x400c0002
   14004caca:	add    al,0x0
   14004cacc:	adc    BYTE PTR [rip+0x25bd0002],ah        # 0x165c1cad4
   14004cad2:	add    al,BYTE PTR [rax]
   14004cad4:	xor    r8b,BYTE PTR [rax+rax*1]
   14004cad8:	shl    BYTE PTR [rip+0x266f0002],0x2        # 0x16673cae1
   14004cadf:	add    BYTE PTR [rax-0x6ffffbf8],bl
   14004cae5:	(bad)  
   14004cae6:	add    al,BYTE PTR [rax]
   14004cae8:	(bad)  
   14004cae9:	sub    DWORD PTR [rdx],eax
   14004caeb:	add    BYTE PTR [rax-0x1ffffbce],bh
   14004caf1:	sub    DWORD PTR [rdx],eax
   14004caf3:	add    BYTE PTR [rax],dl
   14004caf5:	sub    al,BYTE PTR [rdx]
   14004caf7:	add    BYTE PTR [rbp+rax*1+0x2a100004],ah
   14004cafe:	add    al,BYTE PTR [rax]
   14004cb00:	xor    al,0x2a
   14004cb02:	add    al,BYTE PTR [rax]
   14004cb04:	cwde   
   14004cb05:	or     BYTE PTR [rax+rax*1],al
   14004cb08:	sub    al,BYTE PTR [rdx]
   14004cb0b:	add    BYTE PTR [rcx],al
   14004cb0d:	sub    al,0x2
   14004cb0f:	add    ah,dl
   14004cb11:	xor    al,BYTE PTR [rax+rax*1]
   14004cb14:	xor    BYTE PTR [rdx+rax*1],ch
   14004cb17:	add    BYTE PTR [rsi],bh
   14004cb19:	sub    eax,0x304c0002
   14004cb1e:	add    al,0x0
   14004cb20:	(bad)  
   14004cb21:	sub    eax,0x2da60002
   14004cb26:	add    al,BYTE PTR [rax]
   14004cb28:	mov    BYTE PTR [rip+0x2dc00004],al        # 0x16dc4cb32
   14004cb2e:	add    al,BYTE PTR [rax]
   14004cb30:	out    0x2d,eax
   14004cb32:	add    al,BYTE PTR [rax]
   14004cb34:	in     al,dx
   14004cb35:	xor    al,BYTE PTR [rax+rax*1]
   14004cb38:	out    0x2d,eax
   14004cb3a:	add    al,BYTE PTR [rax]
   14004cb3c:	cmp    DWORD PTR [rsi],ebp
   14004cb3e:	add    al,BYTE PTR [rax]
   14004cb40:	hlt    
   14004cb41:	xor    al,BYTE PTR [rax+rax*1]
   14004cb44:	cmp    DWORD PTR [rsi],ebp
   14004cb46:	add    al,BYTE PTR [rax]
   14004cb48:	rex.WRB
   14004cb49:	add    al,BYTE PTR cs:[rax]
   14004cb4c:	or     BYTE PTR [rbx],dh
   14004cb4e:	add    al,0x0
   14004cb50:	sub    BYTE PTR [rsi],0x2
   14004cb53:	add    BYTE PTR [rcx],dl
   14004cb55:	(bad)  
   14004cb56:	add    al,BYTE PTR [rax]
   14004cb58:	mov    BYTE PTR [rip+0x2f200004],al        # 0x16f24cb62
   14004cb5e:	add    al,BYTE PTR [rax]
   14004cb60:	mov    cl,0x2f
   14004cb62:	add    al,BYTE PTR [rax]
   14004cb64:	cmp    BYTE PTR [rax],dh
   14004cb66:	add    al,0x0
   14004cb68:	shr    BYTE PTR [rdi],0x2
   14004cb6b:	add    BYTE PTR [rcx+0x30],dl
   14004cb6e:	add    al,BYTE PTR [rax]
   14004cb70:	mov    BYTE PTR [rip+0x30600004],al        # 0x17064cb7a
   14004cb76:	add    al,BYTE PTR [rax]
   14004cb78:	xor    DWORD PTR [r10],r8d
   14004cb7b:	add    al,dh
   14004cb7d:	xor    al,0x4
   14004cb7f:	add    BYTE PTR [rax+0x31],dl
   14004cb82:	add    al,BYTE PTR [rax]
   14004cb84:	shl    BYTE PTR [rcx],cl
   14004cb86:	add    al,BYTE PTR [rax]
   14004cb88:	sbb    BYTE PTR [rsp+rax*1],bh
   14004cb8b:	add    dl,dl
   14004cb8d:	xor    DWORD PTR [rdx],eax
   14004cb8f:	add    BYTE PTR [rdx],bl
   14004cb91:	xor    al,BYTE PTR [rdx]
   14004cb93:	add    BYTE PTR [rsp+rsi*1+0x4],dl
   14004cb97:	add    BYTE PTR [rdx],bl
   14004cb99:	xor    al,BYTE PTR [rdx]
   14004cb9b:	add    BYTE PTR [rip+0x68000232],ah        # 0x1a804cdd3
   14004cba1:	xor    al,0x4
   14004cba3:	add    BYTE PTR [rax+0x32],ah
   14004cba6:	add    al,BYTE PTR [rax]
   14004cba8:	xor    DWORD PTR [rdx],0x32ec0002
   14004cbae:	add    al,0x0
   14004cbb0:	xor    DWORD PTR [rdx],0x32fc0002
   14004cbb6:	add    al,BYTE PTR [rax]
   14004cbb8:	js     0x14004cbee
   14004cbba:	add    al,0x0
   14004cbbc:	cld    
   14004cbbd:	xor    al,BYTE PTR [rdx]
   14004cbbf:	add    BYTE PTR [rbx+rsi*1],bl
   14004cbc2:	add    al,BYTE PTR [rax]
   14004cbc4:	nop
   14004cbc5:	xor    al,0x4
   14004cbc7:	add    BYTE PTR [rbx+rsi*1],bl
   14004cbca:	add    al,BYTE PTR [rax]
   14004cbcc:	pop    rax
   14004cbcd:	xor    eax,DWORD PTR [rdx]
   14004cbcf:	add    BYTE PTR [rax+0x58000434],dl
   14004cbd5:	xor    eax,DWORD PTR [rdx]
   14004cbd7:	add    BYTE PTR [rsi+0x33],bl
   14004cbda:	add    al,BYTE PTR [rax]
   14004cbdc:	test   al,0x34
   14004cbde:	add    al,0x0
   14004cbe0:	(bad)  
   14004cbe1:	xor    eax,DWORD PTR [rdx]
   14004cbe3:	add    BYTE PTR [rsp+rsi*1+0x2],al
   14004cbe7:	add    ah,bl
   14004cbe9:	es add al,0x0
   14004cbec:	adc    BYTE PTR [rip+0x352e0002],dh        # 0x17532cbf4
   14004cbf2:	add    al,BYTE PTR [rax]
   14004cbf4:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004cbf8:	cs xor eax,0x358d0002
   14004cbfe:	add    al,BYTE PTR [rax]
   14004cc00:	sbb    BYTE PTR [rbx],dh
   14004cc02:	add    al,0x0
   14004cc04:	lea    esi,[rip+0x35990002]        # 0x1759dcc0c
   14004cc0a:	add    al,BYTE PTR [rax]
   14004cc0c:	sub    al,0x33
   14004cc0e:	add    al,0x0
   14004cc10:	cdq    
   14004cc11:	xor    eax,0x35a00002
   14004cc16:	add    al,BYTE PTR [rax]
   14004cc18:	rex xor eax,DWORD PTR [rax+rax*1]
   14004cc1c:	xor    BYTE PTR [rsi],0x2
   14004cc1f:	add    ah,bl
   14004cc21:	add    al,BYTE PTR ss:[rax]
   14004cc24:	cmp    BYTE PTR [rax],dh
   14004cc26:	add    al,0x0
   14004cc28:	loopne 0x14004cc60
   14004cc2a:	add    al,BYTE PTR [rax]
   14004cc2c:	jp     0x14004cc65
   14004cc2e:	add    al,BYTE PTR [rax]
   14004cc30:	mov    BYTE PTR [rip+0x37800004],al        # 0x17784cc3a
   14004cc36:	add    al,BYTE PTR [rax]
   14004cc38:	lock (bad) 
   14004cc3a:	add    al,BYTE PTR [rax]
   14004cc3c:	pushf  
   14004cc3d:	xor    BYTE PTR [rax+rax*1],al
   14004cc40:	lock (bad) 
   14004cc42:	add    al,BYTE PTR [rax]
   14004cc44:	(bad)  
   14004cc45:	cmp    DWORD PTR [rdx],eax
   14004cc47:	add    BYTE PTR [rbx+rsi*1+0x4],ah
   14004cc4b:	add    BYTE PTR [rdx-0x12fffdc7],bl
   14004cc51:	cmp    DWORD PTR [rdx],eax
   14004cc53:	add    BYTE PTR [rax+0x33],bh
   14004cc56:	add    al,0x0
   14004cc58:	in     eax,dx
   14004cc59:	cmp    DWORD PTR [rdx],eax
   14004cc5b:	add    BYTE PTR [rax+0x3a],bl
   14004cc5e:	add    al,BYTE PTR [rax]
   14004cc60:	mov    WORD PTR [rbx],?
   14004cc62:	add    al,0x0
   14004cc64:	pop    rax
   14004cc65:	cmp    al,BYTE PTR [rdx]
   14004cc67:	add    BYTE PTR [rdi],dh
   14004cc69:	cmp    eax,DWORD PTR [rdx]
   14004cc6b:	add    BYTE PTR [rax+0x37000433],ah
   14004cc71:	cmp    eax,DWORD PTR [rdx]
   14004cc73:	add    BYTE PTR [rdx+0x3c],al
   14004cc76:	add    al,BYTE PTR [rax]
   14004cc78:	mov    al,0x33
   14004cc7a:	add    al,0x0
   14004cc7c:	rex.X cmp al,0x2
   14004cc7f:	add    BYTE PTR [rsi+0x3c],dl
   14004cc82:	add    al,BYTE PTR [rax]
   14004cc84:	movabs al,ds:0x6400023c56000433
   14004cc8d:	cmp    al,0x2
   14004cc8f:	add    ah,al
   14004cc91:	xor    eax,DWORD PTR [rax+rax*1]
   14004cc94:	fs cmp al,0x2
   14004cc97:	add    BYTE PTR [rbp+rdi*1+0x2],bh
   14004cc9b:	add    ah,bl
   14004cc9d:	xor    eax,DWORD PTR [rax+rax*1]
   14004cca0:	jl     0x14004ccdf
   14004cca2:	add    al,BYTE PTR [rax]
   14004cca4:	mov    edi,DWORD PTR [rip+0x33f00002]        # 0x173f4ccac
   14004ccaa:	add    al,0x0
   14004ccac:	nop
   14004ccad:	cmp    eax,0x3f010002
   14004ccb2:	add    al,BYTE PTR [rax]
   14004ccb4:	push   rax
   14004ccb5:	xor    eax,DWORD PTR [rax+rax*1]
   14004ccb8:	adc    BYTE PTR [rdi],bh
   14004ccba:	add    al,BYTE PTR [rax]
   14004ccbc:	and    BYTE PTR [rdi],bh
   14004ccbe:	add    al,BYTE PTR [rax]
   14004ccc0:	add    BYTE PTR [rsp+rax*1],dh
   14004ccc3:	add    BYTE PTR [rax],ah
   14004ccc5:	(bad)  
   14004ccc6:	add    al,BYTE PTR [rax]
   14004ccc8:	(bad)  
   14004ccc9:	(bad)  
   14004ccca:	add    al,BYTE PTR [rax]
   14004cccc:	or     al,0x34
   14004ccce:	add    al,0x0
   14004ccd0:	(bad)  
   14004ccd1:	(bad)  
   14004ccd2:	add    al,BYTE PTR [rax]
   14004ccd4:	ins    DWORD PTR es:[rdi],dx
   14004ccd5:	(bad)  
   14004ccd6:	add    al,BYTE PTR [rax]
   14004ccd8:	and    BYTE PTR [rsp+rax*1],dh
   14004ccdb:	add    BYTE PTR [rbp+0x3f],ch
   14004ccde:	add    al,BYTE PTR [rax]
   14004cce0:	jp     0x14004cd21
   14004cce2:	add    al,BYTE PTR [rax]
   14004cce4:	xor    al,0x34
   14004cce6:	add    al,0x0
   14004cce8:	jp     0x14004cd29
   14004ccea:	add    al,BYTE PTR [rax]
   14004ccec:	lods   eax,DWORD PTR ds:[rsi]
   14004cced:	(bad)  
   14004ccee:	add    al,BYTE PTR [rax]
   14004ccf0:	rex.R xor al,0x4
   14004ccf3:	add    BYTE PTR [rax+0x2900023f],dh
   14004ccf9:	add    al,BYTE PTR [rax]
   14004ccfc:	cwde   
   14004ccfd:	or     BYTE PTR [rax+rax*1],al
   14004cd00:	rex
   14004cd01:	add    al,BYTE PTR [rax]
   14004cd04:	test   al,0x40
   14004cd06:	add    al,BYTE PTR [rax]
   14004cd08:	cwde   
   14004cd09:	or     BYTE PTR [rax+rax*1],al
   14004cd0c:	mov    al,0x40
   14004cd0e:	add    al,BYTE PTR [rax]
   14004cd10:	(bad)  
   14004cd11:	add    al,BYTE PTR [r8]
   14004cd14:	pushf  
   14004cd15:	xor    BYTE PTR [rax+rax*1],al
   14004cd18:	(bad)  
   14004cd19:	add    al,BYTE PTR [r8]
   14004cd1c:	jmp    0xf804cf62
   14004cd21:	xor    al,0x4
   14004cd23:	add    cl,ch
   14004cd25:	add    al,BYTE PTR [r8]
   14004cd28:	(bad)  
   14004cd29:	rex.XB add al,BYTE PTR [r8]
   14004cd2c:	int3   
   14004cd2d:	xor    al,0x4
   14004cd2f:	add    BYTE PTR [rax+0x43],ah
   14004cd32:	add    al,BYTE PTR [rax]
   14004cd34:	out    dx,al
   14004cd35:	rex.XB add al,BYTE PTR [r8]
   14004cd38:	loopne 0x14004cd6e
   14004cd3a:	add    al,0x0
   14004cd3c:	lock rex.XB add al,BYTE PTR [r8]
   14004cd40:	sbb    al,BYTE PTR [rdx+rax*1+0x0]
   14004cd44:	or     al,0x35
   14004cd46:	add    al,0x0
   14004cd48:	sbb    al,BYTE PTR [rdx+rax*1+0x0]
   14004cd4c:	imul   eax,DWORD PTR [rdx+rax*1+0x0],0x18
   14004cd51:	xor    eax,0x446b0004
   14004cd56:	add    al,BYTE PTR [rax]
   14004cd58:	jg     0x14004cd9e
   14004cd5a:	add    al,BYTE PTR [rax]
   14004cd5c:	sub    al,0x35
   14004cd5e:	add    al,0x0
   14004cd60:	jg     0x14004cda6
   14004cd62:	add    al,BYTE PTR [rax]
   14004cd64:	leave  
   14004cd65:	add    r8b,BYTE PTR [r8]
   14004cd68:	rex xor eax,0x45c90004
   14004cd6e:	add    al,BYTE PTR [rax]
   14004cd70:	int    0x45
   14004cd72:	add    al,BYTE PTR [rax]
   14004cd74:	fs xor eax,0x45d00004
   14004cd7a:	add    al,BYTE PTR [rax]
   14004cd7c:	(bad)  
   14004cd7d:	rex.RX add r8b,BYTE PTR [rax]
   14004cd80:	mov    BYTE PTR [rip+0x46300004],dh        # 0x18634cd8a
   14004cd86:	add    al,BYTE PTR [rax]
   14004cd88:	outs   dx,DWORD PTR ds:[rsi]
   14004cd89:	rex.RX add r8b,BYTE PTR [rax]
   14004cd8c:	cwde   
   14004cd8d:	or     BYTE PTR [rax+rax*1],al
   14004cd90:	nop
   14004cd91:	rex.RX add r8b,BYTE PTR [rax]
   14004cd94:	fild   DWORD PTR [rdi+0x2]
   14004cd97:	add    BYTE PTR [rax-0x1ffffbf8],bl
   14004cd9d:	rex.RXB add r8b,BYTE PTR [r8]
   14004cda0:	or     ecx,DWORD PTR [rax+0x2]
   14004cda3:	add    BYTE PTR [rbp+rsi*1+0x480b0004],dl
   14004cdaa:	add    al,BYTE PTR [rax]
   14004cdac:	out    0x48,eax
   14004cdae:	add    al,BYTE PTR [rax]
   14004cdb0:	test   al,0x35
   14004cdb2:	add    al,0x0
   14004cdb4:	out    0x48,eax
   14004cdb6:	add    al,BYTE PTR [rax]
   14004cdb8:	lea    ecx,[rcx+0x2]
   14004cdbb:	add    BYTE PTR [rbp+rsi*1+0x498d0004],bh
   14004cdc2:	add    al,BYTE PTR [rax]
   14004cdc4:	xchg   ebp,eax
   14004cdc5:	rex.WB add al,BYTE PTR [r8]
   14004cdc8:	shl    BYTE PTR [rip+0x49950004],1        # 0x18999cdd2
   14004cdce:	add    al,BYTE PTR [rax]
   14004cdd0:	stos   DWORD PTR es:[rdi],eax
   14004cdd1:	rex.WB add al,BYTE PTR [r8]
   14004cdd4:	loopne 0x14004ce0b
   14004cdd6:	add    al,0x0
   14004cdd8:	mov    al,0x49
   14004cdda:	add    al,BYTE PTR [rax]
   14004cddc:	sti    
   14004cddd:	rex.WB add al,BYTE PTR [r8]
   14004cde0:	mov    BYTE PTR [rip+0x4ac00004],al        # 0x18ac4cdea
   14004cde6:	add    al,BYTE PTR [rax]
   14004cde8:	(bad)  
   14004cde9:	rex.WR add r8b,BYTE PTR [rax]
   14004cdec:	add    al,0x36
   14004cdee:	add    al,0x0
   14004cdf0:	and    BYTE PTR [rdx+rax*1+0x0],cl
   14004cdf4:	js     0x14004ce43
   14004cdf6:	add    al,BYTE PTR [rax]
   14004cdf8:	xchg   esp,eax
   14004cdf9:	add    eax,0x4d800004
   14004cdfe:	add    al,BYTE PTR [rax]
   14004ce00:	cmp    eax,0xf000024e
   14004ce05:	xor    eax,0x4e400004
   14004ce0a:	add    al,BYTE PTR [rax]
   14004ce0c:	rex.WRX add r8b,BYTE PTR gs:[rax]
   14004ce10:	loopne 0x14004ce2e
   14004ce12:	add    al,0x0
   14004ce14:	rex.WRX add r8b,BYTE PTR gs:[rax]
   14004ce18:	ror    BYTE PTR [rsi+0x2],cl
   14004ce1b:	add    BYTE PTR [rax],ah
   14004ce1d:	ss add al,0x0
   14004ce20:	ror    BYTE PTR [rsi+0x2],cl
   14004ce23:	add    bh,bl
   14004ce25:	rex.WRX add r8b,BYTE PTR [rax]
   14004ce28:	xor    al,0x36
   14004ce2a:	add    al,0x0
   14004ce2c:	loopne 0x14004ce7c
   14004ce2e:	add    al,BYTE PTR [rax]
   14004ce30:	adc    ecx,DWORD PTR [rdi+0x2]
   14004ce33:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004ce37:	add    BYTE PTR [rax],ah
   14004ce39:	rex.WRXB add r8b,BYTE PTR [r8]
   14004ce3c:	pop    rsp
   14004ce3d:	rex.WRXB add r8b,BYTE PTR [r8]
   14004ce40:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004ce44:	(bad)  
   14004ce45:	rex.WRXB add r8b,BYTE PTR [r8]
   14004ce48:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004ce49:	rex.WRXB add r8b,BYTE PTR [r8]
   14004ce4c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004ce50:	mov    al,0x4f
   14004ce52:	add    al,BYTE PTR [rax]
   14004ce54:	ror    BYTE PTR [rdi+0x2],1
   14004ce57:	add    BYTE PTR [rbx+riz*1],bh
   14004ce5a:	add    al,0x0
   14004ce5c:	ror    BYTE PTR [rdi+0x2],1
   14004ce5f:	add    BYTE PTR [rdx+0x54000252],al
   14004ce65:	(bad)  
   14004ce66:	add    al,0x0
   14004ce68:	nop
   14004ce69:	push   rdx
   14004ce6a:	add    al,BYTE PTR [rax]
   14004ce6c:	outs   dx,BYTE PTR ds:[rsi]
   14004ce6d:	push   rbx
   14004ce6e:	add    al,BYTE PTR [rax]
   14004ce70:	cmp    al,0x37
   14004ce72:	add    al,0x0
   14004ce74:	jo     0x14004cec9
   14004ce76:	add    al,BYTE PTR [rax]
   14004ce78:	(bad)  
   14004ce79:	push   rsp
   14004ce7a:	add    al,BYTE PTR [rax]
   14004ce7c:	fs (bad) 
   14004ce7e:	add    al,0x0
   14004ce80:	adc    BYTE PTR [rdx+rax*1+0x0],dl
   14004ce84:	lods   al,BYTE PTR ds:[rsi]
   14004ce85:	push   rbp
   14004ce86:	add    al,BYTE PTR [rax]
   14004ce88:	and    BYTE PTR [rdi],dh
   14004ce8a:	add    al,0x0
   14004ce8c:	mov    al,0x55
   14004ce8e:	add    al,BYTE PTR [rax]
   14004ce90:	mov    esp,0x64000255
   14004ce95:	ss add al,0x0
   14004ce98:	mov    esp,0xc0000255
   14004ce9d:	push   rbp
   14004ce9e:	add    al,BYTE PTR [rax]
   14004cea0:	ins    BYTE PTR es:[rdi],dx
   14004cea1:	ss add al,0x0
   14004cea4:	rcl    BYTE PTR [rbp+0x2],0x0
   14004cea8:	(bad)  
   14004cea9:	push   rbp
   14004ceaa:	add    al,BYTE PTR [rax]
   14004ceac:	xor    BYTE PTR [rsi],0x4
   14004ceaf:	add    ah,al
   14004ceb1:	push   rbp
   14004ceb2:	add    al,BYTE PTR [rax]
   14004ceb4:	lea    edx,[rsi+0x2]
   14004ceb7:	add    BYTE PTR [rsi+rsi*1+0x568d0004],dl
   14004cebe:	add    al,BYTE PTR [rax]
   14004cec0:	mov    ebp,0xb8000256
   14004cec5:	ss add al,0x0
   14004cec8:	mov    ebp,0xe3000256
   14004cecd:	push   rsi
   14004cece:	add    al,BYTE PTR [rax]
   14004ced0:	int3   
   14004ced1:	ss add al,0x0
   14004ced4:	jrcxz  0x14004cf2c
   14004ced6:	add    al,BYTE PTR [rax]
   14004ced8:	(bad)  
   14004ced9:	push   rdi
   14004ceda:	add    al,BYTE PTR [rax]
   14004cedc:	loopne 0x14004cf14
   14004cede:	add    al,0x0
   14004cee0:	(bad)  
   14004cee1:	push   rdi
   14004cee2:	add    al,BYTE PTR [rax]
   14004cee4:	ds push rdi
   14004cee6:	add    al,BYTE PTR [rax]
   14004cee8:	hlt    
   14004cee9:	ss add al,0x0
   14004ceec:	rex push rdi
   14004ceee:	add    al,BYTE PTR [rax]
   14004cef0:	movabs al,ds:0xa000043648000259
   14004cef9:	pop    rcx
   14004cefa:	add    al,BYTE PTR [rax]
   14004cefc:	retf   
   14004cefd:	pop    rcx
   14004cefe:	add    al,BYTE PTR [rax]
   14004cf00:	sbb    BYTE PTR [rax],bh
   14004cf02:	add    al,0x0
   14004cf04:	rcr    BYTE PTR [rcx+0x2],1
   14004cf07:	add    BYTE PTR [rdx+0x5a],ah
   14004cf0a:	add    al,BYTE PTR [rax]
   14004cf0c:	adc    BYTE PTR [rsp+rax*1],bh
   14004cf0f:	add    BYTE PTR [rax+0x5a],dh
   14004cf12:	add    al,BYTE PTR [rax]
   14004cf14:	retf   0x25a
   14004cf17:	add    BYTE PTR [rax+rsi*1+0x5ad00004],bl
   14004cf1e:	add    al,BYTE PTR [rax]
   14004cf20:	in     al,dx
   14004cf21:	pop    rdx
   14004cf22:	add    al,BYTE PTR [rax]
   14004cf24:	adc    BYTE PTR [rsp+rax*1],bh
   14004cf27:	add    BYTE PTR [rax],al
   14004cf29:	pop    rbx
   14004cf2a:	add    al,BYTE PTR [rax]
   14004cf2c:	gs pop rbx
   14004cf2e:	add    al,BYTE PTR [rax]
   14004cf30:	mov    BYTE PTR [rip+0x5b700004],al        # 0x19b74cf3a
   14004cf36:	add    al,BYTE PTR [rax]
   14004cf38:	test   DWORD PTR [rbx+0x2],ebx
   14004cf3b:	add    BYTE PTR [rax],al
   14004cf3d:	xor    al,0x4
   14004cf3f:	add    BYTE PTR [rbp-0x1ffffda5],al
   14004cf45:	pop    rbx
   14004cf46:	add    al,BYTE PTR [rax]
   14004cf48:	call   0x12004d384
   14004cf4d:	pop    rbx
   14004cf4e:	add    al,BYTE PTR [rax]
   14004cf50:	jmp    0x14004cfad
   14004cf52:	add    al,BYTE PTR [rax]
   14004cf54:	add    BYTE PTR [rax],bh
   14004cf56:	add    al,0x0
   14004cf58:	lock pop rbx
   14004cf5a:	add    al,BYTE PTR [rax]
   14004cf5c:	(bad)  
   14004cf5d:	pop    rsp
   14004cf5e:	add    al,BYTE PTR [rax]
   14004cf60:	adc    BYTE PTR [rax],bh
   14004cf62:	add    al,0x0
   14004cf64:	(bad)  
   14004cf65:	pop    rsp
   14004cf66:	add    al,BYTE PTR [rax]
   14004cf68:	xchg   ebp,eax
   14004cf69:	pop    rsp
   14004cf6a:	add    al,BYTE PTR [rax]
   14004cf6c:	jl     0x14004cfa5
   14004cf6e:	add    al,0x0
   14004cf70:	xchg   ebp,eax
   14004cf71:	pop    rsp
   14004cf72:	add    al,BYTE PTR [rax]
   14004cf74:	rcr    DWORD PTR [rbp+0x2],1
   14004cf77:	add    BYTE PTR [rdi+rsi*1+0x5dd10004],cl
   14004cf7e:	add    al,BYTE PTR [rax]
   14004cf80:	fstp   QWORD PTR [rbp+0x2]
   14004cf83:	add    BYTE PTR [rax-0x1ffffbc9],ch
   14004cf89:	pop    rbp
   14004cf8a:	add    al,BYTE PTR [rax]
   14004cf8c:	std    
   14004cf8d:	pop    rbp
   14004cf8e:	add    al,BYTE PTR [rax]
   14004cf90:	mov    eax,0xfd000437
   14004cf95:	pop    rbp
   14004cf96:	add    al,BYTE PTR [rax]
   14004cf98:	rex.WXB pop r14
   14004cf9a:	add    al,BYTE PTR [rax]
   14004cf9c:	(bad)  
   14004cf9d:	(bad)  
   14004cf9e:	add    al,0x0
   14004cfa0:	rex.WXB pop r14
   14004cfa2:	add    al,BYTE PTR [rax]
   14004cfa4:	rex.WR pop rsi
   14004cfa6:	add    al,BYTE PTR [rax]
   14004cfa8:	fdiv   DWORD PTR [rdi]
   14004cfaa:	add    al,0x0
   14004cfac:	loopne 0x14004d00c
   14004cfae:	add    al,BYTE PTR [rax]
   14004cfb0:	movabs al,ds:0xa00004382000025f
   14004cfb9:	pop    rdi
   14004cfba:	add    al,BYTE PTR [rax]
   14004cfbc:	jmp    0xc804d220
   14004cfc1:	add    eax,0x5ff00004
   14004cfc6:	add    al,BYTE PTR [rax]
   14004cfc8:	xor    DWORD PTR [rax+0x2],esp
   14004cfcb:	add    BYTE PTR [rax+0x40000408],bl
   14004cfd1:	(bad)  
   14004cfd2:	add    al,BYTE PTR [rax]
   14004cfd4:	and    DWORD PTR [rax+0x2],0x4089800
   14004cfdb:	add    BYTE PTR [rax-0x2dfffda0],dl
   14004cfe1:	(bad)  
   14004cfe2:	add    al,BYTE PTR [rax]
   14004cfe4:	cwde   
   14004cfe5:	or     BYTE PTR [rax+rax*1],al
   14004cfe8:	loopne 0x14004d04a
   14004cfea:	add    al,BYTE PTR [rax]
   14004cfec:	and    BYTE PTR [rcx+0x2],ah
   14004cfef:	add    BYTE PTR [rax+0x20000408],bl
   14004cff5:	(bad)  
   14004cff6:	add    al,BYTE PTR [rax]
   14004cff8:	push   rsi
   14004cff9:	(bad)  
   14004cffa:	add    al,BYTE PTR [rax]
   14004cffc:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d000:	(bad)  
   14004d001:	(bad)  
   14004d002:	add    al,BYTE PTR [rax]
   14004d004:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d005:	(bad)  
   14004d006:	add    al,BYTE PTR [rax]
   14004d008:	cwde   
   14004d009:	or     BYTE PTR [rax+rax*1],al
   14004d00c:	mov    al,0x61
   14004d00e:	add    al,BYTE PTR [rax]
   14004d010:	cmc    
   14004d011:	(bad)  
   14004d012:	add    al,BYTE PTR [rax]
   14004d014:	cwde   
   14004d015:	or     BYTE PTR [rax+rax*1],al
   14004d018:	add    BYTE PTR [rdx+0x2],ah
   14004d01b:	add    BYTE PTR [rdx],dl
   14004d01d:	(bad)  
   14004d01f:	add    BYTE PTR [rax+0x12000408],bl
   14004d025:	(bad)  
   14004d027:	add    BYTE PTR [rbx+0x62],cl
   14004d02a:	add    al,BYTE PTR [rax]
   14004d02c:	xor    al,0x38
   14004d02e:	add    al,0x0
   14004d030:	rex.WXB (bad) 
   14004d033:	add    BYTE PTR [rcx+0x62],dl
   14004d036:	add    al,BYTE PTR [rax]
   14004d038:	rex.W cmp BYTE PTR [rax+rax*1],al
   14004d03c:	mov    al,0x62
   14004d03e:	add    al,BYTE PTR [rax]
   14004d040:	fisub  DWORD PTR [rdx+0x2]
   14004d043:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d047:	add    al,ah
   14004d049:	(bad)  
   14004d04b:	add    BYTE PTR [rbp+0x63],al
   14004d04e:	add    al,BYTE PTR [rax]
   14004d050:	pushf  
   14004d051:	xor    BYTE PTR [rax+rax*1],al
   14004d054:	push   rax
   14004d055:	movsxd eax,DWORD PTR [rdx]
   14004d057:	add    BYTE PTR [rbx-0x67fffd9d],bl
   14004d05d:	or     BYTE PTR [rax+rax*1],al
   14004d060:	shl    BYTE PTR [rbx+0x2],0x0
   14004d064:	adc    DWORD PTR [rdx+rax*1+0x0],esp
   14004d068:	pop    rax
   14004d069:	cmp    BYTE PTR [rax+rax*1],al
   14004d06c:	adc    al,0x64
   14004d06e:	add    al,BYTE PTR [rax]
   14004d070:	(bad)  
   14004d071:	add    al,BYTE PTR fs:[rax]
   14004d074:	cwde   
   14004d075:	or     BYTE PTR [rax+rax*1],al
   14004d078:	rex
   14004d079:	add    al,BYTE PTR fs:[rax]
   14004d07c:	jns    0x14004d0e2
   14004d07e:	add    al,BYTE PTR [rax]
   14004d080:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d084:	jl     0x14004d0ea
   14004d086:	add    al,BYTE PTR [rax]
   14004d088:	(bad)
   14004d08b:	add    BYTE PTR [rax-0x37fffbf8],bl
   14004d091:	add    al,BYTE PTR fs:[rax]
   14004d094:	xchg   ecx,eax
   14004d095:	add    al,BYTE PTR gs:[rax]
   14004d098:	mov    BYTE PTR [rax],bh
   14004d09a:	add    al,0x0
   14004d09c:	xchg   esp,eax
   14004d09d:	add    al,BYTE PTR gs:[rax]
   14004d0a0:	sub    eax,0x60000266
   14004d0a5:	cmp    BYTE PTR [rax+rax*1],al
   14004d0a8:	xor    BYTE PTR [rsi+0x2],ah
   14004d0ab:	add    BYTE PTR [rsi+riz*2+0x2],dl
   14004d0af:	add    BYTE PTR [rax+0x54000408],bl
   14004d0b5:	data16 add al,BYTE PTR [rax]
   14004d0b8:	jg     0x14004d120
   14004d0ba:	add    al,BYTE PTR [rax]
   14004d0bc:	cwde   
   14004d0bd:	or     BYTE PTR [rax+rax*1],al
   14004d0c0:	and    BYTE PTR [rsi+0x2],0x0
   14004d0c4:	iret   
   14004d0c5:	data16 add al,BYTE PTR [rax]
   14004d0c8:	cwde   
   14004d0c9:	or     BYTE PTR [rax+rax*1],al
   14004d0cc:	shl    BYTE PTR [rsi+0x2],1
   14004d0cf:	add    bh,ah
   14004d0d1:	data16 add al,BYTE PTR [rax]
   14004d0d4:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d0d8:	call   0xe304d343
   14004d0dd:	add    al,BYTE PTR [eax]
   14004d0e0:	cwde   
   14004d0e1:	or     BYTE PTR [rax+rax*1],al
   14004d0e4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d0e5:	add    al,BYTE PTR [eax]
   14004d0e8:	mov    ah,0x67
   14004d0ea:	add    al,BYTE PTR [rax]
   14004d0ec:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d0f0:	mov    ah,0x67
   14004d0f2:	add    al,BYTE PTR [rax]
   14004d0f4:	int    0x67
   14004d0f6:	add    al,BYTE PTR [rax]
   14004d0f8:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d0fc:	shl    BYTE PTR [rdi+0x2],1
   14004d0ff:	add    BYTE PTR [rdi+0x69],al
   14004d102:	add    al,BYTE PTR [rax]
   14004d104:	xchg   esp,eax
   14004d105:	cmp    BYTE PTR [rax+rax*1],al
   14004d108:	imul   rax,QWORD PTR [rdx],0x2695a00
   14004d10f:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d113:	add    BYTE PTR [rcx+rbp*2+0x2],bl
   14004d117:	add    BYTE PTR [rdx],ah
   14004d119:	imul   eax,DWORD PTR [rdx],0x0
   14004d11c:	mov    esp,0x4c000438
   14004d121:	imul   eax,DWORD PTR [rdx],0x0
   14004d124:	xchg   ecx,eax
   14004d125:	ins    BYTE PTR es:[rdi],dx
   14004d126:	add    al,BYTE PTR [rax]
   14004d128:	int3   
   14004d129:	cmp    BYTE PTR [rax+rax*1],al
   14004d12c:	xchg   esp,eax
   14004d12d:	ins    BYTE PTR es:[rdi],dx
   14004d12e:	add    al,BYTE PTR [rax]
   14004d130:	call   0x18c04d3a1
   14004d135:	sub    BYTE PTR [rax+rax*1],al
   14004d138:	clc    
   14004d139:	ins    BYTE PTR es:[rdi],dx
   14004d13a:	add    al,BYTE PTR [rax]
   14004d13c:	xor    BYTE PTR [rbp+0x2],ch
   14004d13f:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d143:	add    BYTE PTR [rax],bh
   14004d145:	ins    DWORD PTR es:[rdi],dx
   14004d146:	add    al,BYTE PTR [rax]
   14004d148:	in     al,0x6d
   14004d14a:	add    al,BYTE PTR [rax]
   14004d14c:	fdivr  QWORD PTR [rax]
   14004d14e:	add    al,0x0
   14004d150:	add    al,0x6e
   14004d152:	add    al,BYTE PTR [rax]
   14004d154:	(bad)  
   14004d155:	outs   dx,BYTE PTR ds:[rsi]
   14004d156:	add    al,BYTE PTR [rax]
   14004d158:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d15c:	cmp    al,0x6e
   14004d15e:	add    al,BYTE PTR [rax]
   14004d160:	xchg   BYTE PTR [rsi+0x2],ch
   14004d163:	add    BYTE PTR [rax+rsi*1+0x6e880004],bl
   14004d16a:	add    al,BYTE PTR [rax]
   14004d16c:	shr    BYTE PTR [rsi+0x2],cl
   14004d16f:	add    BYTE PTR [rax+rsi*1+0x6ee80004],bl
   14004d176:	add    al,BYTE PTR [rax]
   14004d178:	and    ch,BYTE PTR [rdi+0x2]
   14004d17b:	add    BYTE PTR [rax+0x70000408],bl
   14004d181:	outs   dx,DWORD PTR ds:[rsi]
   14004d182:	add    al,BYTE PTR [rax]
   14004d184:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d185:	jae    0x14004d189
   14004d187:	add    al,dh
   14004d189:	cmp    BYTE PTR [rax+rax*1],al
   14004d18c:	test   al,0x73
   14004d18e:	add    al,BYTE PTR [rax]
   14004d190:	cdq    
   14004d191:	jne    0x14004d195
   14004d193:	add    ah,dh
   14004d195:	cmp    BYTE PTR [rax+rax*1],al
   14004d198:	pushf  
   14004d199:	jne    0x14004d19d
   14004d19b:	add    BYTE PTR [rdi+0x4000277],dl
   14004d1a1:	cmp    DWORD PTR [rax+rax*1],eax
   14004d1a4:	mov    al,0x77
   14004d1a6:	add    al,BYTE PTR [rax]
   14004d1a8:	push   rax
   14004d1a9:	jns    0x14004d1ad
   14004d1ab:	add    BYTE PTR [rax],ah
   14004d1ad:	cmp    DWORD PTR [rax+rax*1],eax
   14004d1b0:	(bad)  
   14004d1b1:	jns    0x14004d1b5
   14004d1b3:	add    BYTE PTR [rdi],ah
   14004d1b5:	jp     0x14004d1b9
   14004d1b7:	add    BYTE PTR [rax],ch
   14004d1b9:	cmp    DWORD PTR [rax+rax*1],eax
   14004d1bc:	sub    BYTE PTR [rdx+0x2],bh
   14004d1bf:	add    BYTE PTR [rdx+0x2c00027a],dh
   14004d1c5:	cmp    DWORD PTR [rax+rax*1],eax
   14004d1c8:	mov    ah,0x7a
   14004d1ca:	add    al,BYTE PTR [rax]
   14004d1cc:	out    0x7a,al
   14004d1ce:	add    al,BYTE PTR [rax]
   14004d1d0:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d1d4:	call   0x14804d453
   14004d1d9:	jnp    0x14004d1dd
   14004d1db:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d1df:	add    BYTE PTR [rax+0x7b],al
   14004d1e2:	add    al,BYTE PTR [rax]
   14004d1e4:	fs jnp 0x14004d1e9
   14004d1e7:	add    BYTE PTR [rax],bh
   14004d1e9:	cmp    DWORD PTR [rax+rax*1],eax
   14004d1ec:	jo     0x14004d269
   14004d1ee:	add    al,BYTE PTR [rax]
   14004d1f0:	mov    BYTE PTR [rbx+0x2],bh
   14004d1f3:	add    BYTE PTR [rax+0x39],al
   14004d1f6:	add    al,0x0
   14004d1f8:	nop
   14004d1f9:	jnp    0x14004d1fd
   14004d1fb:	add    BYTE PTR [rcx+0x4400027b],dl
   14004d201:	cmp    DWORD PTR [rax+rax*1],eax
   14004d204:	movabs al,ds:0x4800027ba100027b
   14004d20d:	cmp    DWORD PTR [rax+rax*1],eax
   14004d210:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d211:	jnp    0x14004d215
   14004d213:	add    bl,al
   14004d215:	jnp    0x14004d219
   14004d217:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d21b:	add    ah,al
   14004d21d:	jnp    0x14004d221
   14004d21f:	add    BYTE PTR [rbx],al
   14004d221:	jl     0x14004d225
   14004d223:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d227:	add    BYTE PTR [rsp+rdi*2],al
   14004d22a:	add    al,BYTE PTR [rax]
   14004d22c:	es jl  0x14004d231
   14004d22f:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d233:	add    BYTE PTR [rax],ch
   14004d235:	jl     0x14004d239
   14004d237:	add    BYTE PTR [rsi+0x7c],ch
   14004d23a:	add    al,BYTE PTR [rax]
   14004d23c:	cwde   
   14004d23d:	or     BYTE PTR [rax+rax*1],al
   14004d240:	jo     0x14004d2be
   14004d242:	add    al,BYTE PTR [rax]
   14004d244:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d245:	jl     0x14004d249
   14004d247:	add    BYTE PTR [rax-0x57fffbf8],bl
   14004d24d:	jl     0x14004d251
   14004d24f:	add    dl,bh
   14004d251:	jl     0x14004d255
   14004d253:	add    BYTE PTR [rax+0x8000408],bl
   14004d259:	jge    0x14004d25d
   14004d25b:	add    BYTE PTR [rsi+0x4c00027f],bl
   14004d261:	cmp    DWORD PTR [rax+rax*1],eax
   14004d264:	movabs al,ds:0x7c000280fb00027f
   14004d26d:	cmp    DWORD PTR [rax+rax*1],eax
   14004d270:	add    al,0x81
   14004d272:	add    al,BYTE PTR [rax]
   14004d274:	stos   DWORD PTR es:[rdi],eax
   14004d275:	add    DWORD PTR [rdx],0x4399c00
   14004d27b:	add    BYTE PTR [rcx+rax*4-0x7e35fffe],ch
   14004d282:	add    al,BYTE PTR [rax]
   14004d284:	cmp    al,0x23
   14004d286:	add    al,0x0
   14004d288:	int3   
   14004d289:	add    DWORD PTR [rdx],0x2821200
   14004d28f:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d293:	add    BYTE PTR [rax-0x7e],ah
   14004d296:	add    al,BYTE PTR [rax]
   14004d298:	mov    DWORD PTR [rdx+0x39b80002],0x82e00004
   14004d2a2:	add    al,BYTE PTR [rax]
   14004d2a4:	rex.X test BYTE PTR [rdx],al
   14004d2a7:	add    al,al
   14004d2a9:	cmp    DWORD PTR [rax+rax*1],eax
   14004d2ac:	test   BYTE PTR [rdx],r8b
   14004d2af:	add    BYTE PTR [rbp-0x3bfffd7b],bl
   14004d2b5:	cmp    DWORD PTR [rax+rax*1],eax
   14004d2b8:	movabs al,ds:0x4000286bf000285
   14004d2c1:	cmp    eax,DWORD PTR [rax+rax*1]
   14004d2c4:	rol    BYTE PTR [rsi-0x78e4fffe],0x2
   14004d2cb:	add    BYTE PTR [rax+0x34000408],bl
   14004d2d1:	xchg   DWORD PTR [rdx],eax
   14004d2d3:	add    BYTE PTR [rbx-0x63fffd79],ch
   14004d2d9:	xor    BYTE PTR [rax+rax*1],al
   14004d2dc:	lods   al,BYTE PTR ds:[rsi]
   14004d2dd:	xchg   DWORD PTR [rdx],eax
   14004d2df:	add    bh,dh
   14004d2e1:	xchg   DWORD PTR [rdx],eax
   14004d2e3:	add    BYTE PTR [rax+0x4000408],bl
   14004d2e9:	mov    BYTE PTR [rdx],al
   14004d2eb:	add    al,ch
   14004d2ed:	mov    BYTE PTR [rdx],al
   14004d2ef:	add    ah,cl
   14004d2f1:	cmp    DWORD PTR [rax+rax*1],eax
   14004d2f4:	call   0x1b804d581
   14004d2f9:	mov    DWORD PTR [rdx],eax
   14004d2fb:	add    BYTE PTR [rax+0x78000405],cl
   14004d301:	mov    DWORD PTR [rdx],eax
   14004d303:	add    BYTE PTR [rip+0x3800028b],al        # 0x17804d594
   14004d309:	xor    BYTE PTR [rax+rax*1],al
   14004d30c:	adc    al,0x8b
   14004d30e:	add    al,BYTE PTR [rax]
   14004d310:	or     BYTE PTR [rdx+rax*1+0x43a0800],0x0
   14004d318:	or     BYTE PTR [rdx+rax*1+0x28cc900],0x0
   14004d320:	cwde   
   14004d321:	or     BYTE PTR [rax+rax*1],al
   14004d324:	int3   
   14004d325:	mov    WORD PTR [rdx],es
   14004d327:	add    BYTE PTR [rax],bh
   14004d329:	lea    eax,[rdx]
   14004d32b:	add    BYTE PTR [rax+0x6c000405],cl
   14004d331:	lea    eax,[rdx]
   14004d333:	add    BYTE PTR [rax+0x4c00028d],dh
   14004d339:	sub    BYTE PTR [rax+rax*1],al
   14004d33c:	mov    esp,0x7800028d
   14004d341:	pop    QWORD PTR [rdx]
   14004d343:	add    BYTE PTR [rdx+rdi*1+0x4],bl
   14004d347:	add    BYTE PTR [rax-0x71],bh
   14004d34a:	add    al,BYTE PTR [rax]
   14004d34c:	(bad)  [rdi+0x8980002]
   14004d352:	add    al,0x0
   14004d354:	fmul   QWORD PTR [rdi-0x6eadfffe]
   14004d35a:	add    al,BYTE PTR [rax]
   14004d35c:	rex.W cmp al,BYTE PTR [rax+rax*1]
   14004d360:	push   rsp
   14004d361:	xchg   ecx,eax
   14004d362:	add    al,BYTE PTR [rax]
   14004d364:	cdq    
   14004d365:	xchg   ecx,eax
   14004d366:	add    al,BYTE PTR [rax]
   14004d368:	cwde   
   14004d369:	or     BYTE PTR [rax+rax*1],al
   14004d36c:	pushf  
   14004d36d:	xchg   ecx,eax
   14004d36e:	add    al,BYTE PTR [rax]
   14004d370:	or     BYTE PTR [rdx+0x5880002],dl
   14004d376:	add    al,0x0
   14004d378:	or     BYTE PTR [rdx-0x6cfefffe],dl
   14004d37e:	add    al,BYTE PTR [rax]
   14004d380:	js     0x14004d3bc
   14004d382:	add    al,0x0
   14004d384:	add    al,0x93
   14004d386:	add    al,BYTE PTR [rax]
   14004d388:	rex.RB xchg r11d,eax
   14004d38a:	add    al,BYTE PTR [rax]
   14004d38c:	mov    BYTE PTR [rip+0xffffffff93480004],dh        # 0xd34cd396
   14004d392:	add    al,BYTE PTR [rax]
   14004d394:	sbb    edx,DWORD PTR [rdx+rax*1+0x43a9000]
   14004d39b:	add    BYTE PTR [rsp+rdx*4],bl
   14004d39e:	add    al,BYTE PTR [rax]
   14004d3a0:	ss xchg esp,eax
   14004d3a2:	add    al,BYTE PTR [rax]
   14004d3a4:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d3a8:	cmp    BYTE PTR [rdx+rax*1+0x2945200],dl
   14004d3af:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d3b3:	add    BYTE PTR [rsp+rdx*4+0x2],bl
   14004d3b7:	add    BYTE PTR [rsp+rdx*4+0x284c0002],dl
   14004d3be:	add    al,0x0
   14004d3c0:	xchg   esp,eax
   14004d3c1:	xchg   esp,eax
   14004d3c2:	add    al,BYTE PTR [rax]
   14004d3c4:	mov    ch,0x94
   14004d3c6:	add    al,BYTE PTR [rax]
   14004d3c8:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d3cc:	rcl    BYTE PTR [rdx+rax*1+0x294fb00],0x0
   14004d3d4:	mov    al,0x3a
   14004d3d6:	add    al,0x0
   14004d3d8:	cld    
   14004d3d9:	xchg   esp,eax
   14004d3da:	add    al,BYTE PTR [rax]
   14004d3dc:	fwait
   14004d3dd:	xchg   esi,eax
   14004d3de:	add    al,BYTE PTR [rax]
   14004d3e0:	(bad)  
   14004d3e1:	cmp    al,BYTE PTR [rax+rax*1]
   14004d3e4:	pushf  
   14004d3e5:	xchg   esi,eax
   14004d3e6:	add    al,BYTE PTR [rax]
   14004d3e8:	jbe    0x14004d382
   14004d3ea:	add    al,BYTE PTR [rax]
   14004d3ec:	pop    rsp
   14004d3ed:	cmp    al,BYTE PTR [rax+rax*1]
   14004d3f0:	mov    BYTE PTR [rax-0x673dfffe],bl
   14004d3f6:	add    al,BYTE PTR [rax]
   14004d3f8:	test   al,0x3a
   14004d3fa:	add    al,0x0
   14004d3fc:	add    al,0x99
   14004d3fe:	add    al,BYTE PTR [rax]
   14004d400:	rex.WR cqo 
   14004d402:	add    al,BYTE PTR [rax]
   14004d404:	movabs al,ds:0x830002996000043a
   14004d40d:	cdq    
   14004d40e:	add    al,BYTE PTR [rax]
   14004d410:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d414:	xchg   esp,eax
   14004d415:	cdq    
   14004d416:	add    al,BYTE PTR [rax]
   14004d418:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d419:	cdq    
   14004d41a:	add    al,BYTE PTR [rax]
   14004d41c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d420:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d421:	cdq    
   14004d422:	add    al,BYTE PTR [rax]
   14004d424:	cmc    
   14004d425:	cdq    
   14004d426:	add    al,BYTE PTR [rax]
   14004d428:	cwde   
   14004d429:	or     BYTE PTR [rax+rax*1],al
   14004d42c:	add    BYTE PTR [rdx-0x6571fffe],bl
   14004d432:	add    al,BYTE PTR [rax]
   14004d434:	cwde   
   14004d435:	or     BYTE PTR [rax+rax*1],al
   14004d438:	lock (bad) 
   14004d43a:	add    al,BYTE PTR [rax]
   14004d43c:	xor    eax,0x8800029b
   14004d441:	add    eax,0x9b600004
   14004d446:	add    al,BYTE PTR [rax]
   14004d448:	(bad)  
   14004d449:	fwait
   14004d44a:	add    al,BYTE PTR [rax]
   14004d44c:	add    al,0x3b
   14004d44e:	add    al,0x0
   14004d450:	fcomp  DWORD PTR [rbx-0x63dbfffe]
   14004d456:	add    al,BYTE PTR [rax]
   14004d458:	pushf  
   14004d459:	xor    BYTE PTR [rax+rax*1],al
   14004d45c:	and    al,0x9c
   14004d45e:	add    al,BYTE PTR [rax]
   14004d460:	(bad)  
   14004d461:	pushf  
   14004d462:	add    al,BYTE PTR [rax]
   14004d464:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d468:	fs pushf 
   14004d46a:	add    al,BYTE PTR [rax]
   14004d46c:	mov    DWORD PTR [rdx+rax*1+0x4284c00],ebx
   14004d473:	add    BYTE PTR [rax-0x10fffd64],ch
   14004d479:	pushf  
   14004d47a:	add    al,BYTE PTR [rax]
   14004d47c:	sbb    al,0x3b
   14004d47e:	add    al,0x0
   14004d480:	lock pushf 
   14004d482:	add    al,BYTE PTR [rax]
   14004d484:	pop    rcx
   14004d485:	popf   
   14004d486:	add    al,BYTE PTR [rax]
   14004d488:	cwde   
   14004d489:	or     BYTE PTR [rax+rax*1],al
   14004d48c:	pop    rsp
   14004d48d:	popf   
   14004d48e:	add    al,BYTE PTR [rax]
   14004d490:	xchg   DWORD PTR [rbp+0x284c0002],ebx
   14004d496:	add    al,0x0
   14004d498:	nop
   14004d499:	popf   
   14004d49a:	add    al,BYTE PTR [rax]
   14004d49c:	mov    bh,0x9d
   14004d49e:	add    al,BYTE PTR [rax]
   14004d4a0:	cmp    al,0x3b
   14004d4a2:	add    al,0x0
   14004d4a4:	mov    eax,0xd00029d
   14004d4a9:	sahf   
   14004d4aa:	add    al,BYTE PTR [rax]
   14004d4ac:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d4b0:	adc    BYTE PTR [rsi-0x6190fffe],bl
   14004d4b6:	add    al,BYTE PTR [rax]
   14004d4b8:	cwde   
   14004d4b9:	or     BYTE PTR [rax+rax*1],al
   14004d4bc:	sbb    BYTE PTR [rsi-0x616ffffe],0x2
   14004d4c3:	add    BYTE PTR [rax+0x3b],ah
   14004d4c6:	add    al,0x0
   14004d4c8:	rcr    BYTE PTR [rsi-0x60d0fffe],1
   14004d4ce:	add    al,BYTE PTR [rax]
   14004d4d0:	sar    BYTE PTR [rbx],0x4
   14004d4d3:	add    BYTE PTR [rax],dh
   14004d4d5:	lahf   
   14004d4d6:	add    al,BYTE PTR [rax]
   14004d4d8:	jne    0x14004d479
   14004d4da:	add    al,BYTE PTR [rax]
   14004d4dc:	pushf  
   14004d4dd:	cmp    eax,DWORD PTR [rax+rax*1]
   14004d4e0:	js     0x14004d481
   14004d4e2:	add    al,BYTE PTR [rax]
   14004d4e4:	mov    bh,0x9f
   14004d4e6:	add    al,BYTE PTR [rax]
   14004d4e8:	js     0x14004d525
   14004d4ea:	add    al,0x0
   14004d4ec:	mov    eax,0xf500029f
   14004d4f1:	lahf   
   14004d4f2:	add    al,BYTE PTR [rax]
   14004d4f4:	in     al,0x3b
   14004d4f6:	add    al,0x0
   14004d4f8:	clc    
   14004d4f9:	lahf   
   14004d4fa:	add    al,BYTE PTR [rax]
   14004d4fc:	(bad)
   14004d4ff:	add    BYTE PTR [rax+0x3b],ch
   14004d502:	add    al,0x0
   14004d504:	enter  0x2a0,0x0
   14004d508:	call   0xe404d7ad
   14004d50d:	add    eax,0xa0e80004
   14004d512:	add    al,BYTE PTR [rax]
   14004d514:	frstor [rcx+0x3b700002]
   14004d51a:	add    al,0x0
   14004d51c:	loopne 0x14004d4bf
   14004d51e:	add    al,BYTE PTR [rax]
   14004d520:	rex.RXB movabs ds:0xa248000405880002,al
   14004d52a:	add    al,BYTE PTR [rax]
   14004d52c:	fsub   QWORD PTR [rdx+0x5880002]
   14004d532:	add    al,0x0
   14004d534:	fsub   QWORD PTR [rdx-0x5c84fffe]
   14004d53a:	add    al,BYTE PTR [rax]
   14004d53c:	pushf  
   14004d53d:	xor    BYTE PTR [rax+rax*1],al
   14004d540:	jl     0x14004d4e5
   14004d542:	add    al,BYTE PTR [rax]
   14004d544:	mov    ch,0xa3
   14004d546:	add    al,BYTE PTR [rax]
   14004d548:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d54c:	mov    eax,0xda0002a3
   14004d551:	movabs ds:0xa4240004284c0002,eax
   14004d55a:	add    al,BYTE PTR [rax]
   14004d55c:	jb     0x14004d502
   14004d55e:	add    al,BYTE PTR [rax]
   14004d560:	mov    BYTE PTR [rip+0xffffffffa4740004],al        # 0xe478d56a
   14004d566:	add    al,BYTE PTR [rax]
   14004d568:	xchg   esp,eax
   14004d569:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d56a:	add    al,BYTE PTR [rax]
   14004d56c:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d570:	xchg   esp,eax
   14004d571:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d572:	add    al,BYTE PTR [rax]
   14004d574:	mov    ah,0xa4
   14004d576:	add    al,BYTE PTR [rax]
   14004d578:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d57c:	mov    ah,0xa4
   14004d57e:	add    al,BYTE PTR [rax]
   14004d580:	push   rsp
   14004d581:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004d582:	add    al,BYTE PTR [rax]
   14004d584:	lock xor al,0x4
   14004d587:	add    BYTE PTR [rsi+riz*4+0x2],dl
   14004d58b:	add    BYTE PTR [rbx-0x59],al
   14004d58e:	add    al,BYTE PTR [rax]
   14004d590:	fs cmp eax,0xa7440004
   14004d596:	add    al,BYTE PTR [rax]
   14004d598:	cdq    
   14004d599:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d59a:	add    al,BYTE PTR [rax]
   14004d59c:	mov    BYTE PTR [rip+0xffffffffa79c0004],al        # 0xe7a0d5a6
   14004d5a2:	add    al,BYTE PTR [rax]
   14004d5a4:	icebp  
   14004d5a5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004d5a6:	add    al,BYTE PTR [rax]
   14004d5a8:	mov    BYTE PTR [rip+0xffffffffa7f40004],al        # 0xe7f8d5b2
   14004d5ae:	add    al,BYTE PTR [rax]
   14004d5b0:	rex.WB test al,0x2
   14004d5b3:	add    BYTE PTR [rax+0x4c000405],cl
   14004d5b9:	test   al,0x2
   14004d5bb:	add    BYTE PTR [rax+rbp*4+0x309c0002],dh
   14004d5c2:	add    al,0x0
   14004d5c4:	mov    ah,0xa8
   14004d5c6:	add    al,BYTE PTR [rax]
   14004d5c8:	sub    al,0xa9
   14004d5ca:	add    al,BYTE PTR [rax]
   14004d5cc:	cmp    BYTE PTR [rax],dh
   14004d5ce:	add    al,0x0
   14004d5d0:	sub    al,0xa9
   14004d5d2:	add    al,BYTE PTR [rax]
   14004d5d4:	sbb    ebp,DWORD PTR [rdx+0x3d640002]
   14004d5da:	add    al,0x0
   14004d5dc:	sbb    al,0xaa
   14004d5de:	add    al,BYTE PTR [rax]
   14004d5e0:	sub    DWORD PTR [rdx+0x309c0002],0xaa840004
   14004d5ea:	add    al,BYTE PTR [rax]
   14004d5ec:	mov    ebx,0x100002aa
   14004d5f1:	cmp    al,0x4
   14004d5f3:	add    BYTE PTR [rdx+rbp*4-0x54befffe],bh
   14004d5fa:	add    al,BYTE PTR [rax]
   14004d5fc:	sbb    BYTE PTR [rsp+rax*1],bh
   14004d5ff:	add    BYTE PTR [rbx+rbp*4+0x2],al
   14004d603:	add    BYTE PTR [rbp-0x67fffd55],al
   14004d609:	or     BYTE PTR [rax+rax*1],al
   14004d60c:	mov    BYTE PTR [rbx-0x53c5fffe],ch
   14004d612:	add    al,BYTE PTR [rax]
   14004d614:	and    al,0x3c
   14004d616:	add    al,0x0
   14004d618:	cmp    al,0xac
   14004d61a:	add    al,BYTE PTR [rax]
   14004d61c:	jl     0x14004d5ca
   14004d61e:	add    al,BYTE PTR [rax]
   14004d620:	cwde   
   14004d621:	or     BYTE PTR [rax+rax*1],al
   14004d624:	jl     0x14004d5d2
   14004d626:	add    al,BYTE PTR [rax]
   14004d628:	lods   eax,DWORD PTR ds:[esi]
   14004d62a:	add    al,BYTE PTR [rax]
   14004d62c:	push   0x6800043c
   14004d631:	lods   eax,DWORD PTR ds:[rsi]
   14004d632:	add    al,BYTE PTR [rax]
   14004d634:	movsxd ebp,DWORD PTR [rsi+0x3f000002]
   14004d63a:	add    al,0x0
   14004d63c:	fs scas al,BYTE PTR es:[rdi]
   14004d63e:	add    al,BYTE PTR [rax]
   14004d640:	lahf   
   14004d641:	scas   al,BYTE PTR es:[rdi]
   14004d642:	add    al,BYTE PTR [rax]
   14004d644:	rex.W cmp al,0x4
   14004d647:	add    BYTE PTR [rax-0x1ffffd52],ah
   14004d64d:	scas   al,BYTE PTR es:[rdi]
   14004d64e:	add    al,BYTE PTR [rax]
   14004d650:	mov    BYTE PTR [rip+0xffffffffaee00004],al        # 0xeee4d65a
   14004d656:	add    al,BYTE PTR [rax]
   14004d658:	sub    BYTE PTR [rdi+0x8980002],ch
   14004d65e:	add    al,0x0
   14004d660:	rex.R scas eax,DWORD PTR es:[rdi]
   14004d662:	add    al,BYTE PTR [rax]
   14004d664:	jnp    0x14004d615
   14004d666:	add    al,BYTE PTR [rax]
   14004d668:	cwde   
   14004d669:	or     BYTE PTR [rax+rax*1],al
   14004d66c:	cwde   
   14004d66d:	scas   eax,DWORD PTR es:[rdi]
   14004d66e:	add    al,BYTE PTR [rax]
   14004d670:	and    al,0xb0
   14004d672:	add    al,BYTE PTR [rax]
   14004d674:	test   BYTE PTR [rsp+rax*1],bh
   14004d677:	add    BYTE PTR [rax+rsi*4],ah
   14004d67a:	add    al,BYTE PTR [rax]
   14004d67c:	mov    ch,0xb0
   14004d67e:	add    al,BYTE PTR [rax]
   14004d680:	add    al,0x41
   14004d682:	add    al,0x0
   14004d684:	mov    eax,0xc00002b0
   14004d689:	mov    dl,0x2
   14004d68b:	add    al,dh
   14004d68d:	cmp    al,0x4
   14004d68f:	add    al,al
   14004d691:	mov    dl,0x2
   14004d693:	add    ch,al
   14004d695:	mov    bl,0x2
   14004d697:	add    BYTE PTR [rax],dl
   14004d699:	cmp    eax,0xb3c80004
   14004d69e:	add    al,BYTE PTR [rax]
   14004d6a0:	in     al,0xb4
   14004d6a2:	add    al,BYTE PTR [rax]
   14004d6a4:	adc    BYTE PTR [rip+0xffffffffb4e40004],bh        # 0xf4e8d6ae
   14004d6aa:	add    al,BYTE PTR [rax]
   14004d6ac:	push   rsi
   14004d6ad:	mov    dh,0x2
   14004d6af:	add    BYTE PTR [rax],dh
   14004d6b1:	cmp    eax,0xb6580004
   14004d6b6:	add    al,BYTE PTR [rax]
   14004d6b8:	rex.R mov dil,0x2
   14004d6bb:	add    BYTE PTR [rax+0x4400043c],ch
   14004d6c1:	mov    bh,0x2
   14004d6c3:	add    BYTE PTR [rip+0xffffffffd80002ba],ah        # 0x11804d983
   14004d6c9:	cmp    al,0x4
   14004d6cb:	add    BYTE PTR [rax],ch
   14004d6cd:	mov    edx,0xba4e0002
   14004d6d2:	add    al,BYTE PTR [rax]
   14004d6d4:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d6d8:	push   rax
   14004d6d9:	mov    edx,0xba9d0002
   14004d6de:	add    al,BYTE PTR [rax]
   14004d6e0:	mov    BYTE PTR [rip+0xffffffffbaa00004],al        # 0xfaa4d6ea
   14004d6e6:	add    al,BYTE PTR [rax]
   14004d6e8:	fidivr WORD PTR [rbx+0x3d540002]
   14004d6ee:	add    al,0x0
   14004d6f0:	loopne 0x14004d6ad
   14004d6f2:	add    al,BYTE PTR [rax]
   14004d6f4:	sub    BYTE PTR [rbp+0x3d640002],bh
   14004d6fa:	add    al,0x0
   14004d6fc:	xor    BYTE PTR [rbp-0x429efffe],bh
   14004d702:	add    al,BYTE PTR [rax]
   14004d704:	cwde   
   14004d705:	or     BYTE PTR [rax+rax*1],al
   14004d708:	fs mov ebp,0xbd950002
   14004d70e:	add    al,BYTE PTR [rax]
   14004d710:	cwde   
   14004d711:	or     BYTE PTR [rax+rax*1],al
   14004d714:	lods   al,BYTE PTR ds:[rsi]
   14004d715:	mov    ebp,0xbfb50002
   14004d71a:	add    al,BYTE PTR [rax]
   14004d71c:	jl     0x14004d75b
   14004d71e:	add    al,0x0
   14004d720:	mov    eax,0xc80002bf
   14004d725:	rol    BYTE PTR [rdx],0x0
   14004d728:	xchg   esp,eax
   14004d729:	cmp    eax,0xc0c80004
   14004d72e:	add    al,BYTE PTR [rax]
   14004d730:	je     0x14004d6f4
   14004d732:	add    al,BYTE PTR [rax]
   14004d734:	mov    al,0x3d
   14004d736:	add    al,0x0
   14004d738:	je     0x14004d6fc
   14004d73a:	add    al,BYTE PTR [rax]
   14004d73c:	cmp    eax,ebx
   14004d73e:	add    al,BYTE PTR [rax]
   14004d740:	cmp    BYTE PTR [rax],dh
   14004d742:	add    al,0x0
   14004d744:	rex.R ret 
   14004d746:	add    al,BYTE PTR [rax]
   14004d748:	jl     0x14004d70d
   14004d74a:	add    al,BYTE PTR [rax]
   14004d74c:	rex
   14004d74d:	ds add al,0x0
   14004d750:	jl     0x14004d715
   14004d752:	add    al,BYTE PTR [rax]
   14004d754:	xchg   ebx,eax
   14004d755:	(bad)
   14004d758:	pushf  
   14004d759:	xor    BYTE PTR [rax+rax*1],al
   14004d75c:	xchg   esp,eax
   14004d75d:	(bad)
   14004d760:	adc    esi,eax
   14004d762:	add    al,BYTE PTR [rax]
   14004d764:	or     al,0x40
   14004d766:	add    al,0x0
   14004d768:	adc    al,0xc6
   14004d76a:	add    al,BYTE PTR [rax]
   14004d76c:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d76d:	mov    BYTE PTR [rdx],0x0
   14004d770:	cmp    BYTE PTR [rax],dh
   14004d772:	add    al,0x0
   14004d774:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d775:	mov    BYTE PTR [rdx],0x0
   14004d778:	xchg   al,cl
   14004d77a:	add    al,BYTE PTR [rax]
   14004d77c:	adc    al,0x3e
   14004d77e:	add    al,0x0
   14004d780:	mov    al,cl
   14004d782:	add    al,BYTE PTR [rax]
   14004d784:	cmp    eax,0x300002ca
   14004d789:	ds add al,0x0
   14004d78c:	rex retf 0x2
   14004d790:	addr32 retf 0x2
   14004d794:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d798:	push   0x270002ca
   14004d79d:	retf   
   14004d79e:	add    al,BYTE PTR [rax]
   14004d7a0:	sar    BYTE PTR [rip+0xffffffffcb280004],1        # 0x10b2cd7aa
   14004d7a6:	add    al,BYTE PTR [rax]
   14004d7a8:	iret   
   14004d7a9:	int    0x2
   14004d7ab:	add    ah,dh
   14004d7ad:	cmp    eax,0xcdd00004
   14004d7b2:	add    al,BYTE PTR [rax]
   14004d7b4:	rex.RB (bad) 
   14004d7b6:	add    al,BYTE PTR [rax]
   14004d7b8:	xor    r8b,BYTE PTR [rax+rax*1]
   14004d7bc:	pop    rsp
   14004d7bd:	(bad)  
   14004d7be:	add    al,BYTE PTR [rax]
   14004d7c0:	pop    rdi
   14004d7c1:	iret   
   14004d7c2:	add    al,BYTE PTR [rax]
   14004d7c4:	fs ds add al,0x0
   14004d7c8:	(bad)  
   14004d7c9:	iret   
   14004d7ca:	add    al,BYTE PTR [rax]
   14004d7cc:	rex.WRB rol BYTE PTR [r10],cl
   14004d7cf:	add    BYTE PTR [rsi+rdi*1+0x4],bh
   14004d7d3:	add    BYTE PTR [rax-0x2e],dl
   14004d7d6:	add    al,BYTE PTR [rax]
   14004d7d8:	cmp    dl,bl
   14004d7da:	add    al,BYTE PTR [rax]
   14004d7dc:	xchg   esp,eax
   14004d7dd:	ds add al,0x0
   14004d7e0:	rex.R rol DWORD PTR [rdx],cl
   14004d7e3:	add    BYTE PTR [rax-0x2d],ah
   14004d7e6:	add    al,BYTE PTR [rax]
   14004d7e8:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d7ec:	ins    BYTE PTR es:[rdi],dx
   14004d7ed:	rol    DWORD PTR [rdx],cl
   14004d7ef:	add    BYTE PTR [rax],al
   14004d7f1:	(bad)  
   14004d7f2:	add    al,BYTE PTR [rax]
   14004d7f4:	cmp    BYTE PTR [rax],dh
   14004d7f6:	add    al,0x0
   14004d7f8:	add    ah,dl
   14004d7fa:	add    al,BYTE PTR [rax]
   14004d7fc:	rex.WRXB (bad) 
   14004d7fe:	add    al,BYTE PTR [rax]
   14004d800:	pushf  
   14004d801:	xor    BYTE PTR [rax+rax*1],al
   14004d804:	pop    rax
   14004d805:	(bad)  
   14004d806:	add    al,BYTE PTR [rax]
   14004d808:	popf   
   14004d809:	(bad)  
   14004d80a:	add    al,BYTE PTR [rax]
   14004d80c:	fdivr  QWORD PTR [rsi]
   14004d80e:	add    al,0x0
   14004d810:	movabs al,ds:0xa80002d4ce0002d4
   14004d819:	ds add al,0x0
   14004d81c:	lock (bad) 
   14004d81e:	add    al,BYTE PTR [rax]
   14004d820:	mov    edi,edx
   14004d822:	add    al,BYTE PTR [rax]
   14004d824:	mov    al,0x3e
   14004d826:	add    al,0x0
   14004d828:	mov    edi,ss
   14004d82a:	add    al,BYTE PTR [rax]
   14004d82c:	and    eax,ebx
   14004d82e:	add    al,BYTE PTR [rax]
   14004d830:	cmp    BYTE PTR [rax],dh
   14004d832:	add    al,0x0
   14004d834:	and    al,0xd8
   14004d836:	add    al,BYTE PTR [rax]
   14004d838:	je     0x14004d812
   14004d83a:	add    al,BYTE PTR [rax]
   14004d83c:	adc    al,0x3f
   14004d83e:	add    al,0x0
   14004d840:	je     0x14004d81a
   14004d842:	add    al,BYTE PTR [rax]
   14004d844:	sub    ebx,ecx
   14004d846:	add    al,BYTE PTR [rax]
   14004d848:	and    al,0x3f
   14004d84a:	add    al,0x0
   14004d84c:	je     0x14004d827
   14004d84e:	add    al,BYTE PTR [rax]
   14004d850:	fiadd  DWORD PTR cs:[rdx]
   14004d853:	add    BYTE PTR [rax],al
   14004d855:	(bad)  
   14004d856:	add    al,0x0
   14004d858:	xor    dl,bl
   14004d85a:	add    al,BYTE PTR [rax]
   14004d85c:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004d85d:	fiadd  DWORD PTR [rdx]
   14004d85f:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d863:	add    BYTE PTR [rax-0x4dfffd26],ch
   14004d869:	fild   DWORD PTR [rdx]
   14004d86b:	add    BYTE PTR [rax+0x3f],dl
   14004d86e:	add    al,0x0
   14004d870:	mov    ah,0xdb
   14004d872:	add    al,BYTE PTR [rax]
   14004d874:	and    ah,bl
   14004d876:	add    al,BYTE PTR [rax]
   14004d878:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14004d879:	add    eax,0xdc200004
   14004d87e:	add    al,BYTE PTR [rax]
   14004d880:	jbe    0x14004d85e
   14004d882:	add    al,BYTE PTR [rax]
   14004d884:	pushf  
   14004d885:	xor    BYTE PTR [rax+rax*1],al
   14004d888:	js     0x14004d866
   14004d88a:	add    al,BYTE PTR [rax]
   14004d88c:	sbb    ch,0x2
   14004d88f:	add    BYTE PTR [rax+0x3f],bl
   14004d892:	add    al,0x0
   14004d894:	sbb    ch,0x2
   14004d897:	add    BYTE PTR [rdi+0x4c0002dd],ch
   14004d89d:	sub    BYTE PTR [rax+rax*1],al
   14004d8a0:	mov    al,0xdd
   14004d8a2:	add    al,BYTE PTR [rax]
   14004d8a4:	(bad)  
   14004d8a5:	fild   WORD PTR [rdx]
   14004d8a7:	add    BYTE PTR [rax+0x3f],ch
   14004d8aa:	add    al,0x0
   14004d8ac:	lock fild WORD PTR [rdx]
   14004d8af:	add    BYTE PTR [rsi-0x1f],ah
   14004d8b2:	add    al,BYTE PTR [rax]
   14004d8b4:	cmp    BYTE PTR [rax],dh
   14004d8b6:	add    al,0x0
   14004d8b8:	nop
   14004d8b9:	loope  0x14004d8bd
   14004d8bb:	add    dh,al
   14004d8bd:	loope  0x14004d8c1
   14004d8bf:	add    BYTE PTR [rbp+rax*1-0x1e0ffffc],ah
   14004d8c6:	add    al,BYTE PTR [rax]
   14004d8c8:	cwde   
   14004d8c9:	loop   0x14004d8cd
   14004d8cb:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d8cf:	add    BYTE PTR [rax+0x80002e2],bl
   14004d8d5:	jrcxz  0x14004d8d9
   14004d8d7:	add    BYTE PTR [rax+0x800043f],dl
   14004d8dd:	jrcxz  0x14004d8e1
   14004d8df:	add    BYTE PTR [rax-0x1d],dh
   14004d8e2:	add    al,BYTE PTR [rax]
   14004d8e4:	mov    BYTE PTR [rip+0xffffffffe3700004],al        # 0x12374d8ee
   14004d8ea:	add    al,BYTE PTR [rax]
   14004d8ec:	jg     0x14004d8d2
   14004d8ee:	add    al,BYTE PTR [rax]
   14004d8f0:	mov    ah,0x3f
   14004d8f2:	add    al,0x0
   14004d8f4:	and    ah,0x2
   14004d8f7:	add    BYTE PTR [rdi-0x1b],al
   14004d8fa:	add    al,BYTE PTR [rax]
   14004d8fc:	sar    BYTE PTR [rdi],1
   14004d8fe:	add    al,0x0
   14004d900:	rex.W in eax,0x2
   14004d903:	add    BYTE PTR [rdx-0x1b],bh
   14004d906:	add    al,BYTE PTR [rax]
   14004d908:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d90c:	jl     0x14004d8f3
   14004d90e:	add    al,BYTE PTR [rax]
   14004d910:	jmp    rbp
   14004d912:	add    al,BYTE PTR [rax]
   14004d914:	mov    BYTE PTR [rip+0xffffffffe6000004],al        # 0x12604d91e
   14004d91a:	add    al,BYTE PTR [rax]
   14004d91c:	imul   esp,esi,0x3fe80002
   14004d922:	add    al,0x0
   14004d924:	ins    BYTE PTR es:[rdi],dx
   14004d925:	out    0x2,al
   14004d927:	add    bl,cl
   14004d929:	out    0x2,al
   14004d92b:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004d92f:	add    ah,cl
   14004d931:	out    0x2,al
   14004d933:	add    BYTE PTR [rbp-0x19],ah
   14004d936:	add    al,BYTE PTR [rax]
   14004d938:	pushf  
   14004d939:	xor    BYTE PTR [rax+rax*1],al
   14004d93c:	jo     0x14004d925
   14004d93e:	add    al,BYTE PTR [rax]
   14004d940:	leave  
   14004d941:	out    0x2,eax
   14004d943:	add    BYTE PTR [rdx+rax*2],dh
   14004d946:	add    al,0x0
   14004d948:	int3   
   14004d949:	out    0x2,eax
   14004d94b:	add    BYTE PTR [rbx],cl
   14004d94d:	call   0x18010d954
   14004d952:	add    al,0x0
   14004d954:	or     al,0xe8
   14004d956:	add    al,BYTE PTR [rax]
   14004d958:	addr32 jmp 0x14004d95d
   14004d95b:	add    BYTE PTR [rax+rax*2],ah
   14004d95e:	add    al,0x0
   14004d960:	push   0xfffffffffe0002eb
   14004d965:	jmp    0x14004d969
   14004d967:	add    BYTE PTR [rax+rax*2],dl
   14004d96a:	add    al,0x0
   14004d96c:	add    ah,ch
   14004d96e:	add    al,BYTE PTR [rax]
   14004d970:	(bad)  
   14004d971:	in     al,dx
   14004d972:	add    al,BYTE PTR [rax]
   14004d974:	cwde   
   14004d975:	add    al,0x0
   14004d978:	(bad)  
   14004d979:	in     al,dx
   14004d97a:	add    al,BYTE PTR [rax]
   14004d97c:	retf   
   14004d97d:	in     al,dx
   14004d97e:	add    al,BYTE PTR [rax]
   14004d980:	test   al,0x40
   14004d982:	add    al,0x0
   14004d984:	retf   
   14004d985:	in     al,dx
   14004d986:	add    al,BYTE PTR [rax]
   14004d988:	int3   
   14004d989:	in     al,dx
   14004d98a:	add    al,BYTE PTR [rax]
   14004d98c:	(bad)  
   14004d98d:	add    al,0x0
   14004d990:	shr    ah,1
   14004d992:	add    al,BYTE PTR [rax]
   14004d994:	sub    ebp,ebp
   14004d996:	add    al,BYTE PTR [rax]
   14004d998:	rex.WR
   14004d999:	add    al,0x0
   14004d99c:	sub    ebp,ebp
   14004d99e:	add    al,BYTE PTR [rax]
   14004d9a0:	out    0xef,eax
   14004d9a2:	add    al,BYTE PTR [rax]
   14004d9a4:	fs add al,0x0
   14004d9a8:	out    0xef,eax
   14004d9aa:	add    al,BYTE PTR [rax]
   14004d9ac:	add    al,0xf0
   14004d9ae:	add    al,BYTE PTR [rax]
   14004d9b0:	mov    BYTE PTR [rax+0x4],al
   14004d9b3:	add    BYTE PTR [rax+rsi*8],al
   14004d9b6:	add    al,BYTE PTR [rax]
   14004d9b8:	(bad)  
   14004d9b9:	lock add al,BYTE PTR [rax]
   14004d9bc:	mov    BYTE PTR [rip+0xfffffffff0d80004],al        # 0x130dcd9c6
   14004d9c2:	add    al,BYTE PTR [rax]
   14004d9c4:	jbe    0x14004d9b7
   14004d9c6:	add    al,BYTE PTR [rax]
   14004d9c8:	(bad)  
   14004d9c9:	add    al,0x0
   14004d9cc:	xor    cl,0x2
   14004d9cf:	add    BYTE PTR [rsi],dl
   14004d9d1:	repnz add al,BYTE PTR [rax]
   14004d9d4:	in     al,0x40
   14004d9d6:	add    al,0x0
   14004d9d8:	sbb    dl,dh
   14004d9da:	add    al,BYTE PTR [rax]
   14004d9dc:	(bad)  
   14004d9dd:	repnz add al,BYTE PTR [rax]
   14004d9e0:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004d9e4:	rex.W
   14004d9e5:	repnz add al,BYTE PTR [rax]
   14004d9e8:	rex.W
   14004d9e9:	repz add al,BYTE PTR [rax]
   14004d9ec:	lock add al,0x0
   14004d9f0:	rex.W
   14004d9f1:	repz add al,BYTE PTR [rax]
   14004d9f4:	mov    ecx,0xc0002f3
   14004d9f9:	rex.B add al,0x0
   14004d9fc:	mov    esp,0x5d0002f3
   14004da01:	hlt    
   14004da02:	add    al,BYTE PTR [rax]
   14004da04:	add    al,0x41
   14004da06:	add    al,0x0
   14004da08:	(bad)  
   14004da09:	hlt    
   14004da0a:	add    al,BYTE PTR [rax]
   14004da0c:	sbb    dh,ch
   14004da0e:	add    al,BYTE PTR [rax]
   14004da10:	mov    BYTE PTR [rip+0xfffffffff5600004],al        # 0x13564da1a
   14004da16:	add    al,BYTE PTR [rax]
   14004da18:	fwait
   14004da19:	cmc    
   14004da1a:	add    al,BYTE PTR [rax]
   14004da1c:	xor    BYTE PTR [rcx+0x4],al
   14004da1f:	add    BYTE PTR [rbp+rsi*8-0xa43fffe],bl
   14004da26:	add    al,BYTE PTR [rax]
   14004da28:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004da2c:	loopne 0x14004da23
   14004da2e:	add    al,BYTE PTR [rax]
   14004da30:	mov    edi,ebx
   14004da32:	add    al,BYTE PTR [rax]
   14004da34:	cmp    BYTE PTR [rcx+0x4],al
   14004da37:	add    ah,dl
   14004da39:	sti    
   14004da3a:	add    al,BYTE PTR [rax]
   14004da3c:	and    al,0xfc
   14004da3e:	add    al,BYTE PTR [rax]
   14004da40:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004da44:	and    al,0xfc
   14004da46:	add    al,BYTE PTR [rax]
   14004da48:	(bad)  
   14004da49:	cld    
   14004da4a:	add    al,BYTE PTR [rax]
   14004da4c:	rex.R
   14004da4d:	rex.B add al,0x0
   14004da50:	add    ch,bh
   14004da52:	add    al,BYTE PTR [rax]
   14004da54:	xchg   edx,eax
   14004da55:	add    BYTE PTR [rbx],al
   14004da57:	add    BYTE PTR [rax+0x41],ch
   14004da5a:	add    al,0x0
   14004da5c:	xchg   esp,eax
   14004da5d:	add    BYTE PTR [rbx],al
   14004da5f:	add    BYTE PTR [rip+0x58000301],bl        # 0x19804dd66
   14004da65:	rex.B add al,0x0
   14004da68:	and    BYTE PTR [rcx],al
   14004da6a:	add    eax,DWORD PTR [rax]
   14004da6c:	test   DWORD PTR [rcx],eax
   14004da6e:	add    eax,DWORD PTR [rax]
   14004da70:	mov    WORD PTR [rcx+0x4],es
   14004da73:	add    BYTE PTR [rax+0x41000301],cl
   14004da79:	add    al,BYTE PTR [rbx]
   14004da7b:	add    BYTE PTR [rax+rsi*1+0x2440004],bl
   14004da82:	add    eax,DWORD PTR [rax]
   14004da84:	imul   eax,DWORD PTR [rbx],0x3
   14004da87:	add    BYTE PTR [rcx+rax*2+0x3700004],dl
   14004da8e:	add    eax,DWORD PTR [rax]
   14004da90:	loopne 0x14004da95
   14004da92:	add    eax,DWORD PTR [rax]
   14004da94:	mov    ah,0x41
   14004da96:	add    al,0x0
   14004da98:	loopne 0x14004da9d
   14004da9a:	add    eax,DWORD PTR [rax]
   14004da9c:	add    BYTE PTR [rbx+rax*1],al
   14004da9f:	add    BYTE PTR [rbx+riz*1],bh
   14004daa2:	add    al,0x0
   14004daa4:	add    BYTE PTR [rbx+rax*1],al
   14004daa7:	add    BYTE PTR [rsi-0x43fffcfc],dl
   14004daad:	rex.B add al,0x0
   14004dab0:	cwde   
   14004dab1:	add    al,0x3
   14004dab3:	add    BYTE PTR [rdi+0x30000304],bh
   14004dab9:	rex.B add al,0x0
   14004dabc:	rol    BYTE PTR [rbx+rax*1],0x0
   14004dac0:	mov    BYTE PTR [rdi],0x3
   14004dac3:	add    al,cl
   14004dac5:	rex.B add al,0x0
   14004dac8:	enter  0x307,0x0
   14004dacc:	test   BYTE PTR [rdi],0x3
   14004dacf:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004dad3:	add    al,bh
   14004dad5:	(bad)  
   14004dad6:	add    eax,DWORD PTR [rax]
   14004dad8:	adc    eax,0x98000308
   14004dadd:	or     BYTE PTR [rax+rax*1],al
   14004dae0:	sbb    BYTE PTR [rax],cl
   14004dae2:	add    eax,DWORD PTR [rax]
   14004dae4:	xchg   esp,eax
   14004dae5:	or     BYTE PTR [rbx],al
   14004dae7:	add    ah,bl
   14004dae9:	rex.B add al,0x0
   14004daec:	xchg   esp,eax
   14004daed:	or     BYTE PTR [rbx],al
   14004daef:	add    BYTE PTR [rbx-0x67fffcf8],dh
   14004daf5:	or     BYTE PTR [rax+rax*1],al
   14004daf8:	mov    ah,0x8
   14004dafa:	add    eax,DWORD PTR [rax]
   14004dafc:	(bad)
   14004daff:	add    BYTE PTR [rax+rbp*1+0x4],cl
   14004db03:	add    BYTE PTR [rax],ah
   14004db05:	or     DWORD PTR [rbx],eax
   14004db07:	add    BYTE PTR [rbp+0x9],ch
   14004db0a:	add    eax,DWORD PTR [rax]
   14004db0c:	add    al,0x42
   14004db0e:	add    al,0x0
   14004db10:	movabs al,ds:0x4c000309bd000309
   14004db19:	sub    BYTE PTR [rax+rax*1],al
   14004db1c:	ror    BYTE PTR [rcx],0x3
   14004db1f:	add    BYTE PTR [rcx],bl
   14004db21:	or     al,BYTE PTR [rbx]
   14004db23:	add    BYTE PTR [rdx+rbp*1+0xa300004],cl
   14004db2a:	add    eax,DWORD PTR [rax]
   14004db2c:	push   rcx
   14004db2d:	or     al,BYTE PTR [rbx]
   14004db2f:	add    BYTE PTR [rax],ch
   14004db31:	rex.X add al,0x0
   14004db34:	push   rsp
   14004db35:	or     al,BYTE PTR [rbx]
   14004db37:	add    BYTE PTR [rax-0x67fffcf6],cl
   14004db3d:	or     BYTE PTR [rax+rax*1],al
   14004db40:	mov    BYTE PTR [rdx],cl
   14004db42:	add    eax,DWORD PTR [rax]
   14004db44:	pop    rcx
   14004db45:	or     eax,DWORD PTR [rbx]
   14004db47:	add    BYTE PTR [rdx+rax*2],dh
   14004db4a:	add    al,0x0
   14004db4c:	pop    rsp
   14004db4d:	or     eax,DWORD PTR [rbx]
   14004db4f:	add    BYTE PTR [rdi+0xb],ch
   14004db52:	add    eax,DWORD PTR [rax]
   14004db54:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004db58:	jo     0x14004db65
   14004db5a:	add    eax,DWORD PTR [rax]
   14004db5c:	or     ecx,DWORD PTR [rbx+rax*1]
   14004db5f:	add    BYTE PTR [rdx+rax*2],ch
   14004db62:	add    al,0x0
   14004db64:	or     al,0xc
   14004db66:	add    eax,DWORD PTR [rax]
   14004db68:	jns    0x14004db76
   14004db6a:	add    eax,DWORD PTR [rax]
   14004db6c:	cmp    al,0x42
   14004db6e:	add    al,0x0
   14004db70:	jl     0x14004db7e
   14004db72:	add    eax,DWORD PTR [rax]
   14004db74:	in     eax,dx
   14004db75:	or     al,0x3
   14004db77:	add    BYTE PTR [rax+0x42],cl
   14004db7a:	add    al,0x0
   14004db7c:	adc    BYTE PTR [rip+0xd120003],cl        # 0x14d16db85
   14004db82:	add    eax,DWORD PTR [rax]
   14004db84:	call   0x16004dfc1
   14004db89:	or     eax,0xd570003
   14004db8e:	add    eax,DWORD PTR [rax]
   14004db90:	fmul   QWORD PTR [rdx]
   14004db92:	add    al,0x0
   14004db94:	push   rdi
   14004db95:	or     eax,0xd6f0003
   14004db9a:	add    eax,DWORD PTR [rax]
   14004db9c:	cmp    BYTE PTR [rax],0x4
   14004db9f:	add    BYTE PTR [rdi+0xd],ch
   14004dba2:	add    eax,DWORD PTR [rax]
   14004dba4:	lea    ecx,[rip+0x3c080003]        # 0x17c0cdbad
   14004dbaa:	add    al,0x0
   14004dbac:	lea    ecx,[rip+0xda70003]        # 0x14dabdbb5
   14004dbb2:	add    eax,DWORD PTR [rax]
   14004dbb4:	or     BYTE PTR [rsp+rax*1],bh
   14004dbb7:	add    BYTE PTR [rdi-0x3ffffcf3],ah
   14004dbbd:	or     eax,0x3c080003
   14004dbc2:	add    al,0x0
   14004dbc4:	ror    BYTE PTR [rip+0xddb0003],0x3        # 0x14ddfdbce
   14004dbcb:	add    BYTE PTR [rax],cl
   14004dbcd:	cmp    al,0x4
   14004dbcf:	add    bl,bl
   14004dbd1:	or     eax,0xdf40003
   14004dbd6:	add    eax,DWORD PTR [rax]
   14004dbd8:	or     BYTE PTR [rsp+rax*1],bh
   14004dbdb:	add    ah,dh
   14004dbdd:	or     eax,0xe110003
   14004dbe2:	add    eax,DWORD PTR [rax]
   14004dbe4:	or     BYTE PTR [rsp+rax*1],bh
   14004dbe7:	add    BYTE PTR [rcx],dl
   14004dbe9:	(bad)  
   14004dbea:	add    eax,DWORD PTR [rax]
   14004dbec:	sub    cl,BYTE PTR [rsi]
   14004dbee:	add    eax,DWORD PTR [rax]
   14004dbf0:	or     BYTE PTR [rsp+rax*1],bh
   14004dbf3:	add    BYTE PTR [rdx],ch
   14004dbf5:	(bad)  
   14004dbf6:	add    eax,DWORD PTR [rax]
   14004dbf8:	rex.R (bad) 
   14004dbfa:	add    eax,DWORD PTR [rax]
   14004dbfc:	or     BYTE PTR [rsp+rax*1],bh
   14004dbff:	add    BYTE PTR [rsi+rcx*1+0x3],al
   14004dc03:	add    BYTE PTR [rbp+0xe],bl
   14004dc06:	add    eax,DWORD PTR [rax]
   14004dc08:	or     BYTE PTR [rsp+rax*1],bh
   14004dc0b:	add    BYTE PTR [rbp+0xe],bl
   14004dc0e:	add    eax,DWORD PTR [rax]
   14004dc10:	jbe    0x14004dc20
   14004dc12:	add    eax,DWORD PTR [rax]
   14004dc14:	or     BYTE PTR [rsp+rax*1],bh
   14004dc17:	add    BYTE PTR [rsi+0xe],dh
   14004dc1a:	add    eax,DWORD PTR [rax]
   14004dc1c:	nop
   14004dc1d:	(bad)  
   14004dc1e:	add    eax,DWORD PTR [rax]
   14004dc20:	or     BYTE PTR [rsp+rax*1],bh
   14004dc23:	add    BYTE PTR [rax-0x58fffcf2],dl
   14004dc29:	(bad)  
   14004dc2a:	add    eax,DWORD PTR [rax]
   14004dc2c:	or     BYTE PTR [rsp+rax*1],bh
   14004dc2f:	add    BYTE PTR [rdi-0x3ffffcf2],ah
   14004dc35:	(bad)  
   14004dc36:	add    eax,DWORD PTR [rax]
   14004dc38:	or     BYTE PTR [rsp+rax*1],bh
   14004dc3b:	add    al,al
   14004dc3d:	(bad)  
   14004dc3e:	add    eax,DWORD PTR [rax]
   14004dc40:	in     al,0xe
   14004dc42:	add    eax,DWORD PTR [rax]
   14004dc44:	or     BYTE PTR [rsp+rax*1],bh
   14004dc47:	add    ah,ah
   14004dc49:	(bad)  
   14004dc4a:	add    eax,DWORD PTR [rax]
   14004dc4c:	cld    
   14004dc4d:	(bad)  
   14004dc4e:	add    eax,DWORD PTR [rax]
   14004dc50:	or     BYTE PTR [rsp+rax*1],bh
   14004dc53:	add    ah,bh
   14004dc55:	(bad)  
   14004dc56:	add    eax,DWORD PTR [rax]
   14004dc58:	sub    BYTE PTR [rdi],cl
   14004dc5a:	add    eax,DWORD PTR [rax]
   14004dc5c:	or     BYTE PTR [rsp+rax*1],bh
   14004dc5f:	add    BYTE PTR [rax],dh
   14004dc61:	lsl    eax,WORD PTR [rax]
   14004dc64:	push   rax
   14004dc65:	lsl    eax,WORD PTR [rax]
   14004dc68:	or     BYTE PTR [rsp+rax*1],bh
   14004dc6b:	add    BYTE PTR [rax-0x2ffffcf1],dh
   14004dc71:	lsl    eax,WORD PTR [rax]
   14004dc74:	rex.WR sub BYTE PTR [rax+rax*1],r8b
   14004dc78:	ror    BYTE PTR [rdi],1
   14004dc7a:	add    eax,DWORD PTR [rax]
   14004dc7c:	push   0x4c000310
   14004dc81:	sub    BYTE PTR [rax+rax*1],al
   14004dc84:	jo     0x14004dc96
   14004dc86:	add    eax,DWORD PTR [rax]
   14004dc88:	mov    ecx,0x98000310
   14004dc8d:	or     BYTE PTR [rax+rax*1],al
   14004dc90:	rcl    BYTE PTR [rax],1
   14004dc92:	add    eax,DWORD PTR [rax]
   14004dc94:	push   rdx
   14004dc95:	adc    DWORD PTR [rbx],eax
   14004dc97:	add    BYTE PTR [rdx+rsi*1+0x4],dl
	...

Disassembly of section .gfids:

000000014004e000 <.gfids>:
   14004e000:	nop
   14004e001:	cdq    
   14004e002:	add    al,BYTE PTR [rax]
   14004e004:	(bad)  
   14004e005:	cdq    
   14004e006:	add    al,BYTE PTR [rax]
   14004e008:	xchg   esp,eax
   14004e009:	cdq    
   14004e00a:	add    al,BYTE PTR [rax]
   14004e00c:	nop
   14004e00d:	cdq    
   14004e00e:	add    al,BYTE PTR [rax]
   14004e010:	add    BYTE PTR [rdx-0x666ffffe],bl
   14004e016:	add    al,BYTE PTR [rax]
   14004e018:	rex retf 0x2
   14004e01c:	nop
   14004e01d:	cdq    
   14004e01e:	add    al,BYTE PTR [rax]
   14004e020:	fs pushf 
   14004e022:	add    al,BYTE PTR [rax]
   14004e024:	movabs al,ds:0xb80002ae640002ae
   14004e02d:	movabs ds:0x99f80002a37c0002,eax
   14004e036:	add    al,BYTE PTR [rax]
   14004e038:	(bad)  
   14004e039:	rol    DWORD PTR [rdx],cl
   14004e03b:	add    BYTE PTR [rbx+rdx*8+0x2],al
   14004e03f:	add    BYTE PTR [rdi+rbp*4+0x2],al
   14004e043:	add    al,ah
   14004e045:	scas   al,BYTE PTR es:[rdi]
   14004e046:	add    al,BYTE PTR [rax]
   14004e048:	nop
   14004e049:	cdq    
   14004e04a:	add    al,BYTE PTR [rax]
   14004e04c:	nop
   14004e04d:	cdq    
   14004e04e:	add    al,BYTE PTR [rax]
   14004e050:	rex.R stos DWORD PTR es:[rdi],eax
   14004e052:	add    al,BYTE PTR [rax]
   14004e054:	test   BYTE PTR [rdx-0x665bfffe],ch
   14004e05a:	add    al,BYTE PTR [rax]
   14004e05c:	rex.WR cqo 
   14004e05e:	add    al,BYTE PTR [rax]
   14004e060:	enter  0x2a0,0x0
   14004e064:	movabs al,ds:0x98000286c0000285
   14004e06d:	mov    ebp,0x9ca80002
   14004e072:	add    al,BYTE PTR [rax]
   14004e074:	sbb    dl,dh
   14004e076:	add    al,BYTE PTR [rax]
   14004e078:	pushf  
   14004e079:	cmc    
   14004e07a:	add    al,BYTE PTR [rax]
   14004e07c:	jo     0x14004e081
   14004e07e:	add    eax,DWORD PTR [rax]
   14004e080:	adc    eax,DWORD PTR [rax]
   14004e082:	add    BYTE PTR [rax],al
   14004e084:	or     al,BYTE PTR [rax]
   14004e086:	add    BYTE PTR [rax],al
   14004e088:	or     eax,0x10000000
   14004e08d:	add    BYTE PTR [rax],al
   14004e08f:	add    BYTE PTR [rbp+0x0],al
   14004e092:	add    BYTE PTR [rax],al
   14004e094:	jb     0x14004e096
   14004e096:	add    BYTE PTR [rax],al
   14004e098:	(bad)  
   14004e099:	add    BYTE PTR [rax],al
   14004e09b:	add    BYTE PTR [rbx],cl
   14004e09d:	add    BYTE PTR [rax],al
   14004e09f:	add    BYTE PTR [rcx+0x0],bl
	...

Disassembly of section .rsrc:

000000014004f000 <.rsrc>:
	...
   14004f00c:	add    BYTE PTR [rax],al
   14004f00e:	add    DWORD PTR [rax],eax
   14004f010:	sbb    BYTE PTR [rax],al
   14004f012:	add    BYTE PTR [rax],al
   14004f014:	sbb    BYTE PTR [rax],al
   14004f016:	add    BYTE PTR [rax+0x0],al
	...
   14004f024:	add    BYTE PTR [rax],al
   14004f026:	add    DWORD PTR [rax],eax
   14004f028:	add    DWORD PTR [rax],eax
   14004f02a:	add    BYTE PTR [rax],al
   14004f02c:	xor    BYTE PTR [rax],al
   14004f02e:	add    BYTE PTR [rax+0x0],al
	...
   14004f03c:	add    BYTE PTR [rax],al
   14004f03e:	add    DWORD PTR [rax],eax
   14004f040:	or     DWORD PTR [rax+rax*1],eax
   14004f043:	add    BYTE PTR [rax+0x0],cl
   14004f046:	add    BYTE PTR [rax],al
   14004f048:	(bad)  
   14004f049:	lock add al,0x0
   14004f04c:	add    eax,DWORD PTR ss:[rax]
	...
   14004f05f:	add    bh,ch
   14004f061:	mov    ebx,0x783f3cbf
   14004f066:	ins    DWORD PTR es:[rdi],dx
   14004f067:	ins    BYTE PTR es:[rdi],dx
   14004f068:	and    BYTE PTR [rsi+0x65],dh
   14004f06b:	jb     0x14004f0e0
   14004f06d:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14004f074:	xor    BYTE PTR [rdx],ah
   14004f076:	and    BYTE PTR [rbp+0x6e],ah
   14004f079:	movsxd ebp,DWORD PTR [rdi+0x64]
   14004f07c:	imul   ebp,DWORD PTR [rsi+0x67],0x5455223d
   14004f083:	rex.RX sub eax,0x73202238
   14004f089:	je     0x14004f0ec
   14004f08b:	outs   dx,BYTE PTR ds:[rsi]
   14004f08c:	fs (bad) 
   14004f08e:	ins    BYTE PTR es:[rdi],dx
   14004f08f:	outs   dx,DWORD PTR ds:[rsi]
   14004f090:	outs   dx,BYTE PTR ds:[rsi]
   14004f091:	gs cmp eax,0x73657922
   14004f097:	and    bh,BYTE PTR [rdi]
   14004f099:	ds or  eax,0x73613c0a
   14004f09f:	jae    0x14004f106
   14004f0a1:	ins    DWORD PTR es:[rdi],dx
   14004f0a2:	(bad)  
   14004f0a3:	ins    BYTE PTR es:[rdi],dx
   14004f0a4:	jns    0x14004f0c6
   14004f0a6:	js     0x14004f115
   14004f0a8:	ins    BYTE PTR es:[rdi],dx
   14004f0a9:	outs   dx,BYTE PTR ds:[rsi]
   14004f0aa:	jae    0x14004f0e9
   14004f0ac:	and    dh,BYTE PTR [rbp+0x72]
   14004f0af:	outs   dx,BYTE PTR ds:[rsi]
   14004f0b0:	cmp    dh,BYTE PTR [rbx+0x63]
   14004f0b3:	push   0x73616d65
   14004f0b8:	sub    eax,0x7263696d
   14004f0bd:	outs   dx,DWORD PTR ds:[rsi]
   14004f0be:	jae    0x14004f12f
   14004f0c0:	data16 je 0x14004f0f0
   14004f0c3:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004f0c6:	cmp    ah,BYTE PTR [rcx+0x73]
   14004f0c9:	ins    DWORD PTR es:[rdi],dx
   14004f0ca:	cs jbe 0x14004f0fe
   14004f0cd:	and    ah,BYTE PTR [rax]
   14004f0cf:	ins    DWORD PTR es:[rdi],dx
   14004f0d0:	(bad)  
   14004f0d1:	outs   dx,BYTE PTR ds:[rsi]
   14004f0d2:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   14004f0d9:	jb     0x14004f14e
   14004f0db:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   14004f0e2:	xor    BYTE PTR [rdx],ah
   14004f0e4:	ds cmp al,0x74
   14004f0e7:	jb     0x14004f15e
   14004f0e9:	jae    0x14004f15f
   14004f0eb:	rex.WB outs dx,BYTE PTR ds:[rsi]
   14004f0ed:	outs   dx,WORD PTR ds:[rsi]
   14004f0ef:	and    BYTE PTR [rax+0x6d],bh
   14004f0f2:	ins    BYTE PTR es:[rdi],dx
   14004f0f3:	outs   dx,BYTE PTR ds:[rsi]
   14004f0f4:	jae    0x14004f133
   14004f0f6:	and    dh,BYTE PTR [rbp+0x72]
   14004f0f9:	outs   dx,BYTE PTR ds:[rsi]
   14004f0fa:	cmp    dh,BYTE PTR [rbx+0x63]
   14004f0fd:	push   0x73616d65
   14004f102:	sub    eax,0x7263696d
   14004f107:	outs   dx,DWORD PTR ds:[rsi]
   14004f108:	jae    0x14004f179
   14004f10a:	data16 je 0x14004f13a
   14004f10d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004f110:	cmp    ah,BYTE PTR [rcx+0x73]
   14004f113:	ins    DWORD PTR es:[rdi],dx
   14004f114:	cs jbe 0x14004f14a
   14004f117:	and    bh,BYTE PTR [rsi]
   14004f119:	cmp    al,0x73
   14004f11b:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   14004f11f:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x7165723c
   14004f127:	jne    0x14004f18e
   14004f129:	jae    0x14004f19f
   14004f12b:	gs fs push rax
   14004f12e:	jb     0x14004f199
   14004f130:	jbe    0x14004f19b
   14004f132:	ins    BYTE PTR es:[rdi],dx
   14004f133:	gs addr32 gs jae 0x14004f176
   14004f138:	cmp    al,0x72
   14004f13a:	gs jno 0x14004f1b2
   14004f13d:	gs jae 0x14004f1b4
   14004f140:	gs fs rex.RB js 0x14004f1aa
   14004f145:	movsxd esi,DWORD PTR [rbp+0x74]
   14004f148:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14004f14f:	ins    BYTE PTR es:[rdi],dx
   14004f150:	and    BYTE PTR [rbp+riz*2+0x76],ch
   14004f154:	gs ins BYTE PTR es:[rdi],dx
   14004f156:	cmp    eax,0x49736122
   14004f15b:	outs   dx,BYTE PTR ds:[rsi]
   14004f15c:	jbe    0x14004f1cd
   14004f15e:	imul   esp,DWORD PTR [rbp+0x72],0x22
   14004f162:	and    BYTE PTR [rbp+0x69],dh
   14004f165:	movsxd esp,DWORD PTR [r11+0x65]
   14004f169:	jae    0x14004f1de
   14004f16b:	cmp    eax,0x6c616622
   14004f170:	jae    0x14004f1d7
   14004f172:	and    bh,BYTE PTR [rsi]
   14004f174:	cmp    al,0x2f
   14004f176:	jb     0x14004f1dd
   14004f178:	jno    0x14004f1ef
   14004f17a:	gs jae 0x14004f1f1
   14004f17d:	gs fs rex.RB js 0x14004f1e7
   14004f182:	movsxd esi,DWORD PTR [rbp+0x74]
   14004f185:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   14004f18c:	ins    BYTE PTR es:[rdi],dx
   14004f18d:	ds cmp al,0x2f
   14004f190:	jb     0x14004f1f7
   14004f192:	jno    0x14004f209
   14004f194:	gs jae 0x14004f20b
   14004f197:	gs fs push rax
   14004f19a:	jb     0x14004f205
   14004f19c:	jbe    0x14004f207
   14004f19e:	ins    BYTE PTR es:[rdi],dx
   14004f19f:	gs addr32 gs jae 0x14004f1e2
   14004f1a4:	cmp    al,0x2f
   14004f1a6:	jae    0x14004f20d
   14004f1a8:	movsxd esi,DWORD PTR [rbp+0x72]
   14004f1ab:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x72742f3c
   14004f1b3:	jne    0x14004f228
   14004f1b5:	je     0x14004f200
   14004f1b7:	outs   dx,BYTE PTR ds:[rsi]
   14004f1b8:	outs   dx,WORD PTR ds:[rsi]
   14004f1ba:	ds cmp al,0x63
   14004f1bd:	outs   dx,DWORD PTR ds:[rsi]
   14004f1be:	ins    DWORD PTR es:[rdi],dx
   14004f1bf:	jo     0x14004f222
   14004f1c1:	je     0x14004f22c
   14004f1c3:	(bad)  
   14004f1c4:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x6d782079
   14004f1cc:	ins    BYTE PTR es:[rdi],dx
   14004f1cd:	outs   dx,BYTE PTR ds:[rsi]
   14004f1ce:	jae    0x14004f20d
   14004f1d0:	and    dh,BYTE PTR [rbp+0x72]
   14004f1d3:	outs   dx,BYTE PTR ds:[rsi]
   14004f1d4:	cmp    dh,BYTE PTR [rbx+0x63]
   14004f1d7:	push   0x73616d65
   14004f1dc:	sub    eax,0x7263696d
   14004f1e1:	outs   dx,DWORD PTR ds:[rsi]
   14004f1e2:	jae    0x14004f253
   14004f1e4:	data16 je 0x14004f214
   14004f1e7:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004f1ea:	cmp    ah,BYTE PTR [rbx+0x6f]
   14004f1ed:	ins    DWORD PTR es:[rdi],dx
   14004f1ee:	jo     0x14004f251
   14004f1f0:	je     0x14004f25b
   14004f1f2:	(bad)  
   14004f1f3:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x31762e79
   14004f1fb:	and    bh,BYTE PTR [rsi]
   14004f1fd:	cmp    al,0x61
   14004f1ff:	jo     0x14004f271
   14004f201:	ins    BYTE PTR es:[rdi],dx
   14004f202:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004f209:	ds cmp al,0x73
   14004f20c:	jne    0x14004f27e
   14004f20e:	jo     0x14004f27f
   14004f210:	jb     0x14004f286
   14004f212:	gs fs rex.WRXB push r11
   14004f216:	and    BYTE PTR [rcx+0x64],cl
   14004f219:	cmp    eax,0x32657b22
   14004f21e:	xor    BYTE PTR [rcx],dh
   14004f220:	xor    DWORD PTR [rsi*1+0x35312d37],esi
   14004f227:	xor    al,0x36
   14004f229:	sub    eax,0x35633334
   14004f22e:	sub    eax,0x65663561
   14004f233:	sub    eax,0x64383030
   14004f238:	gs gs xor esp,DWORD PTR gs:[rbx+rsi*1+0x66]
   14004f23f:	xor    BYTE PTR [rbp+0x22],bh
   14004f242:	ds cmp al,0x2f
   14004f245:	jae    0x14004f2bc
   14004f247:	jo     0x14004f2b9
   14004f249:	outs   dx,DWORD PTR ds:[rsi]
   14004f24a:	jb     0x14004f2c0
   14004f24c:	gs fs rex.WRXB push r11
   14004f250:	ds cmp al,0x73
   14004f253:	jne    0x14004f2c5
   14004f255:	jo     0x14004f2c6
   14004f257:	jb     0x14004f2cd
   14004f259:	gs fs rex.WRXB push r11
   14004f25d:	and    BYTE PTR [rcx+0x64],cl
   14004f260:	cmp    eax,0x35337b22
   14004f265:	xor    DWORD PTR [rbx],esi
   14004f267:	cmp    BYTE PTR [rdx+0x39],ah
   14004f26a:	(bad)  
   14004f26b:	sub    eax,0x36396435
   14004f270:	sub    eax,0x64626634
   14004f275:	sub    eax,0x64326538
   14004f27a:	sub    eax,0x34343261
   14004f27f:	xor    BYTE PTR [rdx],dh
   14004f281:	xor    dh,BYTE PTR [rip+0x61333966]        # 0x1a1382bed
   14004f287:	jge    0x14004f2ab
   14004f289:	ds cmp al,0x2f
   14004f28c:	jae    0x14004f303
   14004f28e:	jo     0x14004f300
   14004f290:	outs   dx,DWORD PTR ds:[rsi]
   14004f291:	jb     0x14004f307
   14004f293:	gs fs rex.WRXB push r11
   14004f297:	ds cmp al,0x73
   14004f29a:	jne    0x14004f30c
   14004f29c:	jo     0x14004f30d
   14004f29e:	jb     0x14004f314
   14004f2a0:	gs fs rex.WRXB push r11
   14004f2a4:	and    BYTE PTR [rcx+0x64],cl
   14004f2a7:	cmp    eax,0x61347b22
   14004f2ac:	xor    ah,BYTE PTR [rsi+0x32]
   14004f2af:	cmp    BYTE PTR [rbp+0x33],ah
   14004f2b2:	sub    eax,0x39623335
   14004f2b7:	sub    eax,0x31343434
   14004f2bc:	sub    eax,0x63396162
   14004f2c1:	sub    eax,0x64393664
   14004f2c6:	xor    al,0x61
   14004f2c8:	xor    al,0x61
   14004f2ca:	ss xor edi,DWORD PTR gs:[rax]
   14004f2ce:	jge    0x14004f2f2
   14004f2d0:	ds cmp al,0x2f
   14004f2d3:	jae    0x14004f34a
   14004f2d5:	jo     0x14004f347
   14004f2d7:	outs   dx,DWORD PTR ds:[rsi]
   14004f2d8:	jb     0x14004f34e
   14004f2da:	gs fs rex.WRXB push r11
   14004f2de:	ds cmp al,0x73
   14004f2e1:	jne    0x14004f353
   14004f2e3:	jo     0x14004f354
   14004f2e5:	jb     0x14004f35b
   14004f2e7:	gs fs rex.WRXB push r11
   14004f2eb:	and    BYTE PTR [rcx+0x64],cl
   14004f2ee:	cmp    eax,0x66317b22
   14004f2f3:	ss (bad) 
   14004f2f5:	movsxd esi,DWORD PTR ss:[rdi]
   14004f2f8:	ss sub eax,0x31653038
   14004f2fe:	sub    eax,0x39333234
   14004f303:	sub    eax,0x62623539
   14004f308:	sub    eax,0x30643338
   14004f30d:	data16 ss xor BYTE PTR fs:[rcx+riz*2+0x37],ah
   14004f314:	cmp    BYTE PTR [rbp+0x22],bh
   14004f317:	ds cmp al,0x2f
   14004f31a:	jae    0x14004f391
   14004f31c:	jo     0x14004f38e
   14004f31e:	outs   dx,DWORD PTR ds:[rsi]
   14004f31f:	jb     0x14004f395
   14004f321:	gs fs rex.WRXB push r11
   14004f325:	ds cmp al,0x73
   14004f328:	jne    0x14004f39a
   14004f32a:	jo     0x14004f39b
   14004f32c:	jb     0x14004f3a2
   14004f32e:	gs fs rex.WRXB push r11
   14004f332:	and    BYTE PTR [rcx+0x64],cl
   14004f335:	cmp    eax,0x65387b22
   14004f33a:	xor    BYTE PTR [rsi+0x37],ah
   14004f33d:	(bad)  
   14004f33e:	xor    DWORD PTR [rdx],esi
   14004f340:	sub    eax,0x33626662
   14004f345:	sub    eax,0x38656634
   14004f34a:	sub    eax,0x35613962
   14004f34f:	sub    eax,0x64663834
   14004f354:	xor    eax,0x35316130
   14004f359:	(bad)  
   14004f35a:	cmp    DWORD PTR [rcx+0x7d],esp
   14004f35d:	and    bh,BYTE PTR [rsi]
   14004f35f:	cmp    al,0x2f
   14004f361:	jae    0x14004f3d8
   14004f363:	jo     0x14004f3d5
   14004f365:	outs   dx,DWORD PTR ds:[rsi]
   14004f366:	jb     0x14004f3dc
   14004f368:	gs fs rex.WRXB push r11
   14004f36c:	ds cmp al,0x2f
   14004f36f:	(bad)  
   14004f370:	jo     0x14004f3e2
   14004f372:	ins    BYTE PTR es:[rdi],dx
   14004f373:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14004f37a:	ds cmp al,0x2f
   14004f37d:	movsxd ebp,DWORD PTR [rdi+0x6d]
   14004f380:	jo     0x14004f3e3
   14004f382:	je     0x14004f3ed
   14004f384:	(bad)  
   14004f385:	imul   ebp,DWORD PTR [rcx+rbp*2+0x74],0x2f3c3e79
   14004f38d:	(bad)  
   14004f38e:	jae    0x14004f403
   14004f390:	gs ins DWORD PTR es:[rdi],dx
   14004f392:	(bad)  
   14004f393:	ins    BYTE PTR es:[rdi],dx
   14004f394:	jns    0x14004f3d4
	...

Disassembly of section .reloc:

0000000140050000 <.reloc>:
   140050000:	add    BYTE PTR [rax],ah
   140050002:	add    eax,DWORD PTR [rax]
   140050004:	test   BYTE PTR [rcx],al
   140050006:	add    BYTE PTR [rax],al
   140050008:	loopne 0x14004ffaf
   14005000a:	call   0x140aaf8b4
   14005000f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050010:	or     BYTE PTR [rsi-0x59e759f0],ah
   140050016:	and    BYTE PTR [rsi-0x59cf59d8],ah
   14005001c:	cmp    BYTE PTR [rsi-0x59b759c0],ah
   140050022:	push   rax
   140050023:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050024:	pop    rax
   140050025:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050026:	(bad)  
   140050027:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050028:	push   0x78a670a6
   14005002d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005002e:	and    BYTE PTR [rsi-0x596f5978],0x98
   140050035:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050036:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14005003f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050040:	enter  0xd0a6,0xa6
   140050044:	fsub   DWORD PTR [rsi-0x59175920]
   14005004a:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005004c:	clc    
   14005004d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005004e:	adc    BYTE PTR [rdi-0x58df58e8],ah
   140050054:	sub    BYTE PTR [rdi-0x58b758d0],ah
   14005005a:	push   rax
   14005005b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005005c:	pop    rax
   14005005d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005005e:	enter  0xd0a7,0xa7
   140050062:	fsub   DWORD PTR [rdi-0x58175820]
   140050068:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005006a:	clc    
   14005006b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005006c:	add    BYTE PTR [rax-0x57ef57f8],ch
   140050072:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140050078:	xor    BYTE PTR [rax-0x57bf57c8],ch
   14005007e:	rex.W test al,0x50
   140050081:	test   al,0x58
   140050083:	test   al,0x60
   140050085:	test   al,0x68
   140050087:	test   al,0x70
   140050089:	test   al,0x78
   14005008b:	test   al,0x80
   14005008d:	test   al,0x88
   14005008f:	test   al,0x90
   140050091:	test   al,0x98
   140050093:	test   al,0xa0
   140050095:	test   al,0xa8
   140050097:	test   al,0xb0
   140050099:	test   al,0xb8
   14005009b:	test   al,0xc0
   14005009d:	test   al,0xc8
   14005009f:	test   al,0xd0
   1400500a1:	test   al,0xd8
   1400500a3:	test   al,0xe0
   1400500a5:	test   al,0xe8
   1400500a7:	test   al,0xf0
   1400500a9:	test   al,0xf8
   1400500ab:	test   al,0x0
   1400500ad:	test   eax,0xa910a908
   1400500b2:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400500b8:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   1400500be:	test   rax,0xffffffffa958a950
   1400500c4:	(bad)  
   1400500c5:	test   eax,0xa970a968
   1400500ca:	js     0x140050075
   1400500cc:	sub    BYTE PTR [rcx-0x55ff5608],0x8
   1400500d3:	stos   BYTE PTR es:[rdi],al
   1400500d4:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400500da:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400500e0:	stos   BYTE PTR es:[rdi],al
   1400500e2:	rex.W stos BYTE PTR es:[rdi],al
   1400500e4:	push   rax
   1400500e5:	stos   BYTE PTR es:[rdi],al
   1400500e6:	pop    rax
   1400500e7:	stos   BYTE PTR es:[rdi],al
   1400500e8:	(bad)  
   1400500e9:	stos   BYTE PTR es:[rdi],al
   1400500ea:	push   0x78aa70aa
   1400500ef:	stos   BYTE PTR es:[rdi],al
   1400500f0:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400500f7:	stos   BYTE PTR es:[rdi],al
   1400500f8:	movabs al,ds:0xc0aab8aab0aaa8aa
   140050101:	stos   BYTE PTR es:[rdi],al
   140050102:	enter  0xd0aa,0xaa
   140050106:	fsubr  DWORD PTR [rdx-0x55175520]
   14005010c:	lock stos BYTE PTR es:[rdi],al
   14005010e:	clc    
   14005010f:	stos   BYTE PTR es:[rdi],al
   140050110:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140050116:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14005011c:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   140050122:	stos   QWORD PTR es:[rdi],rax
   140050124:	push   rax
   140050125:	stos   DWORD PTR es:[rdi],eax
   140050126:	pop    rax
   140050127:	stos   DWORD PTR es:[rdi],eax
   140050128:	(bad)  
   140050129:	stos   DWORD PTR es:[rdi],eax
   14005012a:	push   0x78ab70ab
   14005012f:	stos   DWORD PTR es:[rdi],eax
   140050130:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140050137:	stos   DWORD PTR es:[rdi],eax
   140050138:	movabs al,ds:0xf0aee8abb0aba8ab
   140050141:	scas   al,BYTE PTR es:[rdi]
   140050142:	clc    
   140050143:	scas   al,BYTE PTR es:[rdi]
   140050144:	add    BYTE PTR [rdi-0x50ef50f8],ch
   14005014a:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   140050150:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   140050156:	scas   rax,QWORD PTR es:[rdi]
   140050158:	push   rax
   140050159:	scas   eax,DWORD PTR es:[rdi]
   14005015a:	pop    rax
   14005015b:	scas   eax,DWORD PTR es:[rdi]
   14005015c:	(bad)  
   14005015d:	scas   eax,DWORD PTR es:[rdi]
   14005015e:	push   0x78af70af
   140050163:	scas   eax,DWORD PTR es:[rdi]
   140050164:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14005016b:	scas   eax,DWORD PTR es:[rdi]
   14005016c:	movabs al,ds:0xc0afb8afb0afa8af
   140050175:	scas   eax,DWORD PTR es:[rdi]
   140050176:	enter  0xd0af,0xaf
   14005017a:	fsubr  DWORD PTR [rdi-0x50175020]
   140050180:	lock scas eax,DWORD PTR es:[rdi]
   140050182:	clc    
   140050183:	scas   eax,DWORD PTR es:[rdi]
   140050184:	add    BYTE PTR [rax],dh
   140050186:	add    eax,DWORD PTR [rax]
   140050188:	add    BYTE PTR [rax],r8b
   14005018b:	add    BYTE PTR [rax],al
   14005018d:	movabs al,ds:0xa020a018a010a008
   140050196:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   14005019c:	movabs al,ds:0xa060a058a050a048
   1400501a6:	push   0x78a070a0
   1400501ab:	movabs al,ds:0xa098a090a088a080
   1400501b4:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   1400501bd:	movabs al,ds:0xa2d8a0d8a0d0a0c8
   1400501c6:	loopne 0x14005016a
   1400501c8:	add    BYTE PTR [rax+0x3],al
   1400501cb:	add    BYTE PTR [rax+0x48000000],bh
   1400501d1:	movabs al,ds:0xa310a060a058a050
   1400501da:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   1400501e0:	xor    BYTE PTR [rbx-0x5cb75cc0],ah
   1400501e6:	push   rax
   1400501e7:	movabs ds:0xa3b0a3a8a360a358,eax
   1400501f0:	mov    eax,0xc8a3c0a3
   1400501f5:	movabs ds:0xac58ac50a3d8a3d0,eax
   1400501fe:	(bad)  
   1400501ff:	lods   al,BYTE PTR ds:[rsi]
   140050200:	push   0x78ac70ac
   140050205:	lods   al,BYTE PTR ds:[rsi]
   140050206:	sub    BYTE PTR [rax+rcx*4+0x8ac90ac],0xad
   14005020e:	adc    BYTE PTR [rbp-0x52df52e8],ch
   140050214:	sub    BYTE PTR [rbp-0x519f52d0],ch
   14005021a:	push   0x78ae70ae
   14005021f:	scas   al,BYTE PTR es:[rdi]
   140050220:	sub    BYTE PTR [rsi-0x516f5178],0x98
   140050227:	scas   al,BYTE PTR es:[rdi]
   140050228:	movabs al,ds:0xc0aeb8aeb0aea8ae
   140050231:	scas   al,BYTE PTR es:[rdi]
   140050232:	enter  0xd0ae,0xae
   140050236:	fsubr  DWORD PTR [rsi-0x51175120]
   14005023c:	lock scas al,BYTE PTR es:[rdi]
   14005023e:	clc    
   14005023f:	scas   al,BYTE PTR es:[rdi]
   140050240:	add    BYTE PTR [rdi-0x50ef50f8],ch
   140050246:	sbb    BYTE PTR [rdi-0x50d750e0],ch
   14005024c:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   140050252:	scas   rax,QWORD PTR es:[rdi]
   140050254:	push   rax
   140050255:	scas   eax,DWORD PTR es:[rdi]
   140050256:	pop    rax
   140050257:	scas   eax,DWORD PTR es:[rdi]
   140050258:	(bad)  
   140050259:	scas   eax,DWORD PTR es:[rdi]
   14005025a:	push   0x78af70af
   14005025f:	scas   eax,DWORD PTR es:[rdi]
   140050260:	sub    BYTE PTR [rdi-0x506f5078],0x98
   140050267:	scas   eax,DWORD PTR es:[rdi]
   140050268:	movabs al,ds:0xc0afb8afb0afa8af
   140050271:	scas   eax,DWORD PTR es:[rdi]
   140050272:	enter  0xd0af,0xaf
   140050276:	fsubr  DWORD PTR [rdi-0x50175020]
   14005027c:	lock scas eax,DWORD PTR es:[rdi]
   14005027e:	clc    
   14005027f:	scas   eax,DWORD PTR es:[rdi]
   140050280:	add    BYTE PTR [rax+0x3],dl
   140050283:	add    ah,al
   140050285:	add    DWORD PTR [rax],eax
   140050287:	add    BYTE PTR [rax],al
   140050289:	movabs al,ds:0xa020a018a010a008
   140050292:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140050298:	movabs al,ds:0xa060a058a050a048
   1400502a2:	push   0x78a070a0
   1400502a7:	movabs al,ds:0xa098a090a088a080
   1400502b0:	movabs al,ds:0xc0a0b8a0b0a0a8a0
   1400502b9:	movabs al,ds:0xa0e0a0d8a0d0a0c8
   1400502c2:	call   0x138a5f367
   1400502c7:	movabs al,ds:0xa118a110a108a100
   1400502d0:	and    BYTE PTR [rcx-0x5ecf5ed8],ah
   1400502d6:	cmp    BYTE PTR [rcx-0x5eb75ec0],ah
   1400502dc:	push   rax
   1400502dd:	movabs eax,ds:0xa170a168a160a158
   1400502e6:	js     0x140050289
   1400502e8:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400502ef:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   1400502f8:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   1400502ff:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   140050308:	add    BYTE PTR [rdx-0x5def5df8],ah
   14005030e:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140050314:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14005031a:	rex.W movabs ds:0xa268a260a258a250,al
   140050324:	jo     0x1400502c8
   140050326:	js     0x1400502ca
   140050328:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   14005032f:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   140050338:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   14005033f:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   140050348:	add    BYTE PTR [rbx-0x5cef5cf8],ah
   14005034e:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   140050354:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14005035a:	movabs ds:0xa368a360a358a350,rax
   140050364:	jo     0x140050309
   140050366:	js     0x14005030b
   140050368:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14005036f:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   140050378:	shl    BYTE PTR [rbx-0x5c2f5c38],0xd8
   14005037f:	movabs ds:0xa3f8a3f0a3e8a3e0,eax
   140050388:	add    BYTE PTR [rax+rcx*1+0x18a410a4],ah
   14005038f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050390:	and    BYTE PTR [rax+rbp*1+0x38a430a4],ah
   140050397:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050398:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005039a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005039c:	push   rax
   14005039d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005039e:	pop    rax
   14005039f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400503a0:	(bad)  
   1400503a1:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400503a2:	push   0x78a470a4
   1400503a7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400503a8:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   1400503b0:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   1400503b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400503ba:	enter  0xd0a4,0xa4
   1400503be:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   1400503c5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400503c6:	clc    
   1400503c7:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400503c8:	add    BYTE PTR [rbp-0x5aef5af8],ah
   1400503ce:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   1400503d4:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   1400503da:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400503dc:	push   rax
   1400503dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400503de:	pop    rax
   1400503df:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400503e0:	(bad)  
   1400503e1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400503e2:	push   0x78a570a5
   1400503e7:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400503e8:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   1400503ef:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400503f0:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400503f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400503fa:	enter  0xd0a5,0xa5
   1400503fe:	fsub   DWORD PTR [rbp-0x5a175a20]
   140050404:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050406:	clc    
   140050407:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050408:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14005040e:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   140050414:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   14005041a:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005041c:	push   rax
   14005041d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005041e:	pop    rax
   14005041f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050420:	(bad)  
   140050421:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050422:	push   0x78a670a6
   140050427:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050428:	and    BYTE PTR [rsi-0x596f5978],0x98
   14005042f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050430:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   140050439:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005043a:	enter  0xd0a6,0xa6
   14005043e:	fsub   DWORD PTR [rsi-0x59175920]
   140050444:	add    BYTE PTR [rax+0x3],ah
   140050447:	add    BYTE PTR [rax+rax*1],cl
   14005044a:	add    BYTE PTR [rax],al
   14005044c:	push   rax
   14005044d:	movabs ds:0xd800037000a358,eax
   140050456:	add    BYTE PTR [rax],al
   140050458:	test   al,0xa6
   14005045a:	mov    al,0xa6
   14005045c:	mov    eax,0xc8a6c0a6
   140050461:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050462:	shl    BYTE PTR [rsi-0x591f5928],1
   140050468:	call   0x138abf513
   14005046d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005046e:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140050474:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   14005047a:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140050480:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140050482:	push   rax
   140050483:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050484:	pop    rax
   140050485:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050486:	(bad)  
   140050487:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050488:	push   0x78a770a7
   14005048d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005048e:	and    BYTE PTR [rdi-0x586f5878],0x98
   140050495:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050496:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   14005049f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400504a0:	enter  0xd0a7,0xa7
   1400504a4:	fsub   DWORD PTR [rdi-0x58175820]
   1400504aa:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400504ac:	clc    
   1400504ad:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400504ae:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400504b4:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400504ba:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400504c0:	rex.W test al,0x50
   1400504c3:	test   al,0x58
   1400504c5:	test   al,0x60
   1400504c7:	test   al,0x68
   1400504c9:	test   al,0x70
   1400504cb:	test   al,0x78
   1400504cd:	test   al,0x80
   1400504cf:	test   al,0x88
   1400504d1:	test   al,0x90
   1400504d3:	test   al,0x98
   1400504d5:	test   al,0xa0
   1400504d7:	test   al,0xa8
   1400504d9:	test   al,0xb0
   1400504db:	test   al,0xb8
   1400504dd:	test   al,0xc0
   1400504df:	test   al,0xc8
   1400504e1:	test   al,0xd0
   1400504e3:	test   al,0xd8
   1400504e5:	test   al,0xe0
   1400504e7:	test   al,0xe8
   1400504e9:	test   al,0xf0
   1400504eb:	test   al,0xf8
   1400504ed:	test   al,0x0
   1400504ef:	test   eax,0xa910a908
   1400504f4:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   1400504fa:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140050500:	enter  0xd0ab,0xab
   140050504:	fsubr  DWORD PTR [rbx-0x51a75420]
   14005050a:	push   0xffffffff88ae78ae
   14005050f:	scas   al,BYTE PTR es:[rdi]
   140050510:	cwde   
   140050511:	scas   al,BYTE PTR es:[rdi]
   140050512:	test   al,0xae
   140050514:	mov    eax,0xd8aec8ae
   140050519:	scas   al,BYTE PTR es:[rdi]
   14005051a:	call   0x168b3fdcd
   14005051f:	scas   eax,DWORD PTR es:[rdi]
   140050520:	xor    BYTE PTR [rdi-0x50bf50c8],ch
   140050526:	add    BYTE PTR [rax],al
   140050528:	add    BYTE PTR [rax+0x1300003],al
   14005052e:	add    BYTE PTR [rax],al
   140050530:	shl    BYTE PTR [rdx-0x5d175d28],1
   140050536:	lock movabs ds:0xa310a308a300a2f8,al
   140050540:	sbb    BYTE PTR [rbx-0x5cd75ce0],ah
   140050546:	xor    BYTE PTR [rbx-0x5cbf5cc8],ah
   14005054c:	js     0x1400504f1
   14005054e:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   140050555:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   14005055e:	shl    BYTE PTR [rbx-0x5c275c30],0xe0
   140050565:	movabs ds:0xa400a3f8a3f0a3e8,eax
   14005056e:	or     BYTE PTR [rax+rdx*1+0x20a418a4],ah
   140050575:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050576:	sub    BYTE PTR [rax+rsi*1+0x40a438a4],ah
   14005057d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005057e:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050580:	push   rax
   140050581:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050582:	pop    rax
   140050583:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050584:	(bad)  
   140050585:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050586:	push   0x78a470a4
   14005058b:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005058c:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   140050594:	movabs al,ds:0xc0a4b8a4b0a4a8a4
   14005059d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005059e:	enter  0xd0a4,0xa4
   1400505a2:	fsub   DWORD PTR [rax+riz*8-0xf5b175c]
   1400505a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400505aa:	clc    
   1400505ab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400505ac:	add    BYTE PTR [rbp-0x5aef5af8],ah
   1400505b2:	sbb    BYTE PTR [rbp-0x5ad75ae0],ah
   1400505b8:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   1400505be:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   1400505c0:	push   rax
   1400505c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505c2:	pop    rax
   1400505c3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505c4:	(bad)  
   1400505c5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505c6:	push   0x78a570a5
   1400505cb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505cc:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   1400505d3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505d4:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400505dd:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505de:	enter  0xd0a5,0xa5
   1400505e2:	fsub   DWORD PTR [rbp-0x5a175a20]
   1400505e8:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505ea:	clc    
   1400505eb:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400505ec:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400505f2:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   1400505f8:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400505fe:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050600:	push   rax
   140050601:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050602:	pop    rax
   140050603:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050604:	(bad)  
   140050605:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050606:	push   0x78a670a6
   14005060b:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005060c:	and    BYTE PTR [rsi-0x596f5978],0x98
   140050613:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050614:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   14005061d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005061e:	enter  0xd0a6,0xa6
   140050622:	fsub   DWORD PTR [rsi-0x59175920]
   140050628:	xor    BYTE PTR [rsi-0x51af51c0],ch
   14005062e:	pop    rax
   14005062f:	scas   al,BYTE PTR es:[rdi]
   140050630:	(bad)  
   140050631:	scas   al,BYTE PTR es:[rdi]
   140050632:	push   0x78ae70ae
   140050637:	scas   al,BYTE PTR es:[rdi]
   140050638:	sub    BYTE PTR [rsi-0x51675178],0xa0
   14005063f:	scas   al,BYTE PTR es:[rdi]
   140050640:	test   al,0xae
   140050642:	mov    al,0xae
   140050644:	mov    eax,0xc8aec0ae
   140050649:	scas   al,BYTE PTR es:[rdi]
   14005064a:	shr    BYTE PTR [rsi-0x51075118],1
   140050650:	add    BYTE PTR [rdi-0x50ef50f8],ch
   140050656:	sbb    BYTE PTR [rdi+0x39000],ch
   14005065c:	call   0xe0050661
   140050661:	movabs al,ds:0xa0c0a0b8a0b0a0a8
   14005066a:	enter  0xd0a0,0xa0
   14005066e:	fsub   DWORD PTR [rax-0x5f175f20]
   140050674:	lock movabs al,ds:0xa110a108a100a0f8
   14005067e:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   140050684:	xor    BYTE PTR [rcx-0x595f5ec8],ah
   14005068a:	test   al,0xa6
   14005068c:	mov    al,0xa6
   14005068e:	mov    eax,0xc8a6c0a6
   140050693:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050694:	shl    BYTE PTR [rsi-0x591f5928],1
   14005069a:	call   0x138abf745
   14005069f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400506a0:	add    BYTE PTR [rdi-0x58ef58f8],ah
   1400506a6:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   1400506ac:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   1400506b2:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400506b4:	push   rax
   1400506b5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506b6:	pop    rax
   1400506b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506b8:	(bad)  
   1400506b9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506ba:	push   0x78a770a7
   1400506bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506c0:	and    BYTE PTR [rdi-0x586f5878],0x98
   1400506c7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506c8:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   1400506d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506d2:	enter  0xd0a7,0xa7
   1400506d6:	fsub   DWORD PTR [rdi-0x58175820]
   1400506dc:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400506de:	add    BYTE PTR [rax-0x57ef57f8],ch
   1400506e4:	sbb    BYTE PTR [rax-0x57d757e0],ch
   1400506ea:	xor    BYTE PTR [rax-0x57bf57c8],ch
   1400506f0:	rex.W test al,0x50
   1400506f3:	test   al,0x58
   1400506f5:	test   al,0x60
   1400506f7:	test   al,0x68
   1400506f9:	test   al,0x70
   1400506fb:	test   al,0x78
   1400506fd:	test   al,0x80
   1400506ff:	test   al,0x88
   140050701:	test   al,0x90
   140050703:	test   al,0x98
   140050705:	test   al,0xa0
   140050707:	test   al,0xa8
   140050709:	test   al,0xb0
   14005070b:	test   al,0xb8
   14005070d:	test   al,0xc0
   14005070f:	test   al,0xc8
   140050711:	test   al,0xd0
   140050713:	test   al,0xd8
   140050715:	test   al,0xe0
   140050717:	test   al,0xe8
   140050719:	test   al,0xf0
   14005071b:	test   al,0xf8
   14005071d:	test   al,0x0
   14005071f:	test   eax,0xa910a908
   140050724:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14005072a:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140050730:	test   rax,0xffffffffa958a950
   140050736:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   14005073c:	xor    BYTE PTR [rbp-0x60000000],ch
   140050742:	add    eax,DWORD PTR [rax]
   140050744:	cwde   
   140050745:	add    DWORD PTR [rax],eax
   140050747:	add    BYTE PTR [rax-0x475c575d],bl
   14005074d:	movabs ds:0xa3f8a3e8a3d8a3c8,eax
   140050756:	or     BYTE PTR [rax+rbx*1+0x38a428a4],ah
   14005075d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005075e:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050760:	pop    rax
   140050761:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050762:	push   0xffffffff88a478a4
   140050767:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050768:	cwde   
   140050769:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005076a:	test   al,0xa4
   14005076c:	mov    eax,0xd8a4c8a4
   140050771:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050772:	call   0x148aa001b
   140050777:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050778:	sbb    BYTE PTR [rbp-0x5ac75ad8],ah
   14005077e:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140050780:	pop    rax
   140050781:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050782:	push   0xffffffff88a578a5
   140050787:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050788:	cwde   
   140050789:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005078a:	test   al,0xa5
   14005078c:	mov    eax,0xd8a5c8a5
   140050791:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050792:	call   0x148ab003c
   140050797:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050798:	sbb    BYTE PTR [rsi-0x59c759d8],ah
   14005079e:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400507a0:	pop    rax
   1400507a1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400507a2:	push   0xffffffff88a678a6
   1400507a7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400507a8:	cwde   
   1400507a9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400507aa:	test   al,0xa6
   1400507ac:	mov    eax,0xd8a6c8a6
   1400507b1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400507b2:	call   0x148ac005d
   1400507b7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400507b8:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   1400507be:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400507c0:	pop    rax
   1400507c1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400507c2:	push   0xffffffff88a778a7
   1400507c7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400507c8:	cwde   
   1400507c9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400507ca:	test   al,0xa7
   1400507cc:	mov    eax,0xd8a7c8a7
   1400507d1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400507d2:	call   0x148ad007e
   1400507d7:	test   al,0x18
   1400507d9:	test   al,0x28
   1400507db:	test   al,0x38
   1400507dd:	test   al,0x48
   1400507df:	test   al,0x58
   1400507e1:	test   al,0x68
   1400507e3:	test   al,0x78
   1400507e5:	test   al,0x88
   1400507e7:	test   al,0x98
   1400507e9:	test   al,0xa8
   1400507eb:	test   al,0xb8
   1400507ed:	test   al,0xc8
   1400507ef:	test   al,0xd8
   1400507f1:	test   al,0xe8
   1400507f3:	test   al,0xf8
   1400507f5:	test   al,0x8
   1400507f7:	test   eax,0xa928a918
   1400507fc:	cmp    BYTE PTR [rcx-0x56a756b8],ch
   140050802:	push   0xffffffff88a978a9
   140050807:	test   eax,0xa9a8a998
   14005080c:	mov    eax,0xd8a9c8a9
   140050811:	test   eax,0xa9f8a9e8
   140050816:	or     BYTE PTR [rdx-0x55d755e8],ch
   14005081c:	cmp    BYTE PTR [rdx-0x55a755b8],ch
   140050822:	push   0xffffffff88aa78aa
   140050827:	stos   BYTE PTR es:[rdi],al
   140050828:	cwde   
   140050829:	stos   BYTE PTR es:[rdi],al
   14005082a:	test   al,0xaa
   14005082c:	mov    eax,0xd8aac8aa
   140050831:	stos   BYTE PTR es:[rdi],al
   140050832:	call   0x148b000e1
   140050837:	stos   DWORD PTR es:[rdi],eax
   140050838:	sbb    BYTE PTR [rbx-0x54c754d8],ch
   14005083e:	stos   QWORD PTR es:[rdi],rax
   140050840:	pop    rax
   140050841:	stos   DWORD PTR es:[rdi],eax
   140050842:	push   0xffffffff88ab78ab
   140050847:	stos   DWORD PTR es:[rdi],eax
   140050848:	cwde   
   140050849:	stos   DWORD PTR es:[rdi],eax
   14005084a:	test   al,0xab
   14005084c:	mov    eax,0xd8abc8ab
   140050851:	stos   DWORD PTR es:[rdi],eax
   140050852:	call   0x148b10102
   140050857:	lods   al,BYTE PTR ds:[rsi]
   140050858:	sbb    BYTE PTR [rax+rbp*1+0x48ac38ac],ch
   14005085f:	lods   al,BYTE PTR ds:[rsi]
   140050860:	pop    rax
   140050861:	lods   al,BYTE PTR ds:[rsi]
   140050862:	push   0xffffffff88ac78ac
   140050867:	lods   al,BYTE PTR ds:[rsi]
   140050868:	cwde   
   140050869:	lods   al,BYTE PTR ds:[rsi]
   14005086a:	test   al,0xac
   14005086c:	mov    eax,0xd8acc8ac
   140050871:	lods   al,BYTE PTR ds:[rsi]
   140050872:	call   0x148b20123
   140050877:	lods   eax,DWORD PTR ds:[rsi]
   140050878:	sbb    BYTE PTR [rbp-0x52c752d8],ch
   14005087e:	lods   rax,QWORD PTR ds:[rsi]
   140050880:	pop    rax
   140050881:	lods   eax,DWORD PTR ds:[rsi]
   140050882:	push   0xffffffff88ad78ad
   140050887:	lods   eax,DWORD PTR ds:[rsi]
   140050888:	cwde   
   140050889:	lods   eax,DWORD PTR ds:[rsi]
   14005088a:	test   al,0xad
   14005088c:	mov    eax,0xd8adc8ad
   140050891:	lods   eax,DWORD PTR ds:[rsi]
   140050892:	call   0x148b30144
   140050897:	scas   al,BYTE PTR es:[rdi]
   140050898:	sbb    BYTE PTR [rsi-0x51c751d8],ch
   14005089e:	rex.W scas al,BYTE PTR es:[rdi]
   1400508a0:	pop    rax
   1400508a1:	scas   al,BYTE PTR es:[rdi]
   1400508a2:	push   0xffffffff88ae78ae
   1400508a7:	scas   al,BYTE PTR es:[rdi]
   1400508a8:	cwde   
   1400508a9:	scas   al,BYTE PTR es:[rdi]
   1400508aa:	test   al,0xae
   1400508ac:	mov    eax,0xd8aec8ae
   1400508b1:	scas   al,BYTE PTR es:[rdi]
   1400508b2:	call   0x148b40165
   1400508b7:	scas   eax,DWORD PTR es:[rdi]
   1400508b8:	sbb    BYTE PTR [rdi-0x50c750d8],ch
   1400508be:	scas   rax,QWORD PTR es:[rdi]
   1400508c0:	pop    rax
   1400508c1:	scas   eax,DWORD PTR es:[rdi]
   1400508c2:	push   0xffffffff88af78af
   1400508c7:	scas   eax,DWORD PTR es:[rdi]
   1400508c8:	cwde   
   1400508c9:	scas   eax,DWORD PTR es:[rdi]
   1400508ca:	test   al,0xaf
   1400508cc:	mov    eax,0xd8afc8af
   1400508d1:	scas   eax,DWORD PTR es:[rdi]
   1400508d2:	call   0x140b50186
   1400508d7:	add    BYTE PTR [rax],al
   1400508d9:	mov    al,0x3
   1400508db:	add    BYTE PTR [rax+0x8000000],cl
   1400508e1:	movabs al,ds:0xa048a038a028a018
   1400508ea:	pop    rax
   1400508eb:	movabs al,ds:0xa098a088a078a068
   1400508f4:	test   al,0xa0
   1400508f6:	mov    eax,0xd8a0c8a0
   1400508fb:	movabs al,ds:0xa118a108a0f8a0e8
   140050904:	sub    BYTE PTR [rcx-0x5eb75ec8],ah
   14005090a:	pop    rax
   14005090b:	movabs eax,ds:0xa198a188a178a168
   140050914:	test   al,0xa1
   140050916:	mov    eax,0xe0a1c8a1
   14005091b:	lods   eax,DWORD PTR ds:[rsi]
   14005091c:	lock lods eax,DWORD PTR ds:[rsi]
   14005091e:	add    BYTE PTR [rsi-0x51df51f0],ch
   140050924:	xor    BYTE PTR [rsi-0x51af51c0],ch
   14005092a:	(bad)  
   14005092b:	scas   al,BYTE PTR es:[rdi]
   14005092c:	jo     0x1400508dc
   14005092e:	sub    BYTE PTR [rsi-0x515f5170],0xb0
   140050935:	scas   al,BYTE PTR es:[rdi]
   140050936:	shr    BYTE PTR [rsi-0x511f5130],0xf0
   14005093d:	scas   al,BYTE PTR es:[rdi]
   14005093e:	add    BYTE PTR [rdi-0x50df50f0],ch
   140050944:	xor    BYTE PTR [rdi-0x50af50c0],ch
   14005094a:	(bad)  
   14005094b:	scas   eax,DWORD PTR es:[rdi]
   14005094c:	jo     0x1400508fd
   14005094e:	sub    BYTE PTR [rdi-0x505f5070],0xb0
   140050955:	scas   eax,DWORD PTR es:[rdi]
   140050956:	shr    BYTE PTR [rdi-0x501f5030],0xf0
   14005095d:	scas   eax,DWORD PTR es:[rdi]
   14005095e:	add    BYTE PTR [rax],al
   140050960:	add    al,al
   140050962:	add    eax,DWORD PTR [rax]
   140050964:	mov    WORD PTR [rcx],es
   140050966:	add    BYTE PTR [rax],al
   140050968:	add    BYTE PTR [rax-0x5fdf5ff0],ah
   14005096e:	xor    BYTE PTR [rax-0x5faf5fc0],ah
   140050974:	(bad)  
   140050975:	movabs al,ds:0xa0a0a090a080a070
   14005097e:	mov    al,0xa0
   140050980:	shl    BYTE PTR [rax-0x5f1f5f30],0xf0
   140050987:	movabs al,ds:0xa130a120a110a100
   140050990:	rex movabs eax,ds:0xa180a170a160a150
   14005099a:	nop
   14005099b:	movabs eax,ds:0xa1d0a1c0a1b0a1a0
   1400509a4:	loopne 0x140050947
   1400509a6:	lock movabs eax,ds:0xa230a220a210a200
   1400509b0:	movabs ds:0xa280a270a260a250,al
   1400509ba:	nop
   1400509bb:	movabs ds:0xa2d0a2c0a2b0a2a0,al
   1400509c4:	loopne 0x140050968
   1400509c6:	lock movabs ds:0xa330a320a310a300,al
   1400509d0:	rex movabs ds:0xa380a370a360a350,eax
   1400509da:	nop
   1400509db:	movabs ds:0xa3d0a3c0a3b0a3a0,eax
   1400509e4:	loopne 0x140050989
   1400509e6:	lock movabs ds:0xa430a420a410a400,eax
   1400509f0:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400509f2:	push   rax
   1400509f3:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400509f4:	(bad)  
   1400509f5:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400509f6:	jo     0x14005099c
   1400509f8:	and    BYTE PTR [rax+rdx*4-0x4f5b5f5c],0xa4
   140050a00:	shl    BYTE PTR [rax+rdx*8-0xf5b1f5c],0xa4
   140050a08:	add    BYTE PTR [rbp-0x5adf5af0],ah
   140050a0e:	xor    BYTE PTR [rbp-0x5aaf5ac0],ah
   140050a14:	(bad)  
   140050a15:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050a16:	jo     0x1400509bd
   140050a18:	and    BYTE PTR [rbp-0x5a5f5a70],0xb0
   140050a1f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050a20:	shl    BYTE PTR [rbp-0x5a1f5a30],0xf0
   140050a27:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140050a28:	add    BYTE PTR [rsi-0x59df59f0],ah
   140050a2e:	xor    BYTE PTR [rsi-0x59af59c0],ah
   140050a34:	(bad)  
   140050a35:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050a36:	jo     0x1400509de
   140050a38:	and    BYTE PTR [rsi-0x595f5970],0xb0
   140050a3f:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050a40:	shl    BYTE PTR [rsi-0x591f5930],0xf0
   140050a47:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140050a48:	add    BYTE PTR [rdi-0x58df58f0],ah
   140050a4e:	xor    BYTE PTR [rdi-0x58af58c0],ah
   140050a54:	(bad)  
   140050a55:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050a56:	jo     0x1400509ff
   140050a58:	and    BYTE PTR [rdi-0x585f5870],0xb0
   140050a5f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050a60:	shl    BYTE PTR [rdi-0x581f5830],0xf0
   140050a67:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140050a68:	add    BYTE PTR [rax-0x57df57f0],ch
   140050a6e:	xor    BYTE PTR [rax-0x57af57c0],ch
   140050a74:	(bad)  
   140050a75:	test   al,0x70
   140050a77:	test   al,0x80
   140050a79:	test   al,0x90
   140050a7b:	test   al,0xa0
   140050a7d:	test   al,0xb0
   140050a7f:	test   al,0xc0
   140050a81:	test   al,0xd0
   140050a83:	test   al,0xe0
   140050a85:	test   al,0xf0
   140050a87:	test   al,0x0
   140050a89:	test   eax,0xa920a910
   140050a8e:	xor    BYTE PTR [rcx-0x56af56c0],ch
   140050a94:	(bad)  
   140050a95:	test   eax,0xa980a970
   140050a9a:	nop
   140050a9b:	test   eax,0xa9b0a9a0
   140050aa0:	shr    BYTE PTR [rcx-0x561f5630],0xf0
   140050aa7:	test   eax,0xaa10aa00
   140050aac:	and    BYTE PTR [rdx-0x55bf55d0],ch
   140050ab2:	push   rax
   140050ab3:	stos   BYTE PTR es:[rdi],al
   140050ab4:	(bad)  
   140050ab5:	stos   BYTE PTR es:[rdi],al
   140050ab6:	jo     0x140050a62
   140050ab8:	sub    BYTE PTR [rdx-0x555f5570],0xb0
   140050abf:	stos   BYTE PTR es:[rdi],al
   140050ac0:	shr    BYTE PTR [rdx-0x551f5530],0xf0
   140050ac7:	stos   BYTE PTR es:[rdi],al
   140050ac8:	add    BYTE PTR [rbx-0x54df54f0],ch
   140050ace:	xor    BYTE PTR [rbx-0x54af54c0],ch
   140050ad4:	(bad)  
   140050ad5:	stos   DWORD PTR es:[rdi],eax
   140050ad6:	jo     0x140050a83
   140050ad8:	sub    BYTE PTR [rbx-0x545f5470],0xb0
   140050adf:	stos   DWORD PTR es:[rdi],eax
   140050ae0:	shr    BYTE PTR [rbx-0x541f5430],0xf0
   140050ae7:	stos   DWORD PTR es:[rdi],eax
   140050ae8:	add    BYTE PTR [rax+rdx*1+0x3f000ac],ch
   140050aef:	add    BYTE PTR [rax+rax*1],dl
   140050af2:	add    BYTE PTR [rax],al
   140050af4:	sbb    BYTE PTR [rcx-0x5e175ee0],ah
   140050afa:	add    BYTE PTR [rdx+0xa208],ah
   140050b00:	add    BYTE PTR [rax+0x4],ah
   140050b03:	add    ah,bl
   140050b05:	add    BYTE PTR [rax],al
   140050b07:	add    BYTE PTR [rax],al
   140050b09:	movabs al,ds:0xa020a018a010a008
   140050b12:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   140050b18:	movabs al,ds:0xa060a058a050a048
   140050b22:	push   0x78a070a0
   140050b27:	movabs al,ds:0xa098a090a088a080
   140050b30:	movabs al,ds:0xa0f8a0f0a0c8a0
   140050b39:	movabs eax,ds:0xa120a118a110a108
   140050b42:	sub    BYTE PTR [rcx-0x5ec75ed0],ah
   140050b48:	rex movabs eax,ds:0xa160a158a150a148
   140050b52:	push   0x78a170a1
   140050b57:	movabs eax,ds:0xa1b8a1b0a1a8a180
   140050b60:	enter  0x50a1,0xa3
   140050b64:	cwde   
   140050b65:	movabs ds:0xa418a3f8a3d8a3b8,eax
   140050b6e:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050b70:	(bad)  
   140050b71:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050b72:	push   0xffffffffa8a470a4
   140050b77:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140050b78:	mov    al,0xa4
   140050b7a:	call   0x148af0c25
   140050b7f:	stos   BYTE PTR es:[rdi],al
   140050b80:	adc    BYTE PTR [rdx-0x55df55e8],ch
   140050b86:	sub    BYTE PTR [rdx-0x55c755d0],ch
   140050b8c:	stos   BYTE PTR es:[rdi],al
   140050b8e:	rex.W stos BYTE PTR es:[rdi],al
   140050b90:	pop    rax
   140050b91:	stos   BYTE PTR es:[rdi],al
   140050b92:	(bad)  
   140050b93:	stos   BYTE PTR es:[rdi],al
   140050b94:	push   0x78aa70aa
   140050b99:	stos   BYTE PTR es:[rdi],al
   140050b9a:	sub    BYTE PTR [rdx-0x556f5578],0xc0
   140050ba1:	stos   BYTE PTR es:[rdi],al
   140050ba2:	call   0x178b01c51
   140050ba7:	stos   DWORD PTR es:[rdi],eax
   140050ba8:	js     0x140050b55
   140050baa:	mov    al,0xab
   140050bac:	call   0x180b1245c
   140050bb1:	lods   al,BYTE PTR ds:[rsi]
   140050bb2:	jo     0x140050b60
   140050bb4:	movabs al,ds:0x50ad20acf0acc8ac
   140050bbd:	lods   eax,DWORD PTR ds:[rsi]
   140050bbe:	mov    BYTE PTR [rbp-0x52175248],ch
   140050bc4:	adc    BYTE PTR [rsi-0x51a751d0],ch
   140050bca:	js     0x140050b7a
   140050bcc:	movabs al,ds:0x68af38af08aed0ae
   140050bd5:	scas   eax,DWORD PTR es:[rdi]
   140050bd6:	cwde   
   140050bd7:	scas   eax,DWORD PTR es:[rdi]
   140050bd8:	enter  0xf8af,0xaf
   140050bdc:	add    BYTE PTR [rax+0x4],dh
   140050bdf:	add    BYTE PTR [rax+rax*1],cl
   140050be2:	add    BYTE PTR [rax],al
   140050be4:	.byte 0x18
   140050be5:	.byte 0xa0
	...
