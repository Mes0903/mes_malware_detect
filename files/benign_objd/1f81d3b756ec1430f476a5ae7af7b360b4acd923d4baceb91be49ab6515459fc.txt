
1f81d3b756ec1430f476a5ae7af7b360b4acd923d4baceb91be49ab6515459fc.exe:     file format pei-x86-64


Disassembly of section .text:

0000000140001000 <.text>:
   140001000:	mov    QWORD PTR [rsp+0x8],rdi
   140001005:	mov    rdi,rcx
   140001008:	xor    eax,eax
   14000100a:	or     rcx,0xffffffffffffffff
   14000100e:	repnz scas al,BYTE PTR es:[rdi]
   140001010:	mov    rdi,QWORD PTR [rsp+0x8]
   140001015:	not    rcx
   140001018:	lea    rax,[rcx-0x1]
   14000101c:	ret    
   14000101d:	int3   
   14000101e:	int3   
   14000101f:	int3   
   140001020:	mov    rax,QWORD PTR [rcx]
   140001023:	test   rax,rax
   140001026:	je     0x14000102c
   140001028:	mov    rax,QWORD PTR [rax]
   14000102b:	ret    
   14000102c:	xor    eax,eax
   14000102e:	ret    
   14000102f:	int3   
   140001030:	xor    eax,eax
   140001032:	cmp    QWORD PTR [rcx],rax
   140001035:	setne  al
   140001038:	ret    
   140001039:	int3   
   14000103a:	int3   
   14000103b:	int3   
   14000103c:	int3   
   14000103d:	int3   
   14000103e:	int3   
   14000103f:	int3   
   140001040:	lea    rax,[rip+0x3b0b9]        # 0x14003c100
   140001047:	mov    QWORD PTR [rcx],rax
   14000104a:	jmp    0x140014718
   14000104f:	int3   
   140001050:	mov    QWORD PTR [rsp+0x8],rbx
   140001055:	push   rdi
   140001056:	sub    rsp,0x20
   14000105a:	lea    rax,[rip+0x3b09f]        # 0x14003c100
   140001061:	mov    ebx,edx
   140001063:	mov    rdi,rcx
   140001066:	mov    QWORD PTR [rcx],rax
   140001069:	call   0x140014718
   14000106e:	test   bl,0x1
   140001071:	je     0x14000107b
   140001073:	mov    rcx,rdi
   140001076:	call   0x1400062d4
   14000107b:	mov    rax,rdi
   14000107e:	mov    rbx,QWORD PTR [rsp+0x30]
   140001083:	add    rsp,0x20
   140001087:	pop    rdi
   140001088:	ret    
   140001089:	int3   
   14000108a:	int3   
   14000108b:	int3   
   14000108c:	int3   
   14000108d:	int3   
   14000108e:	int3   
   14000108f:	int3   
   140001090:	ret    0x0
   140001093:	int3   
   140001094:	int3   
   140001095:	int3   
   140001096:	int3   
   140001097:	int3   
   140001098:	int3   
   140001099:	int3   
   14000109a:	int3   
   14000109b:	int3   
   14000109c:	int3   
   14000109d:	int3   
   14000109e:	int3   
   14000109f:	int3   
   1400010a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400010a5:	push   rdi
   1400010a6:	sub    rsp,0x30
   1400010aa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400010b3:	mov    QWORD PTR [rsp+0x48],rbx
   1400010b8:	mov    rbx,rdx
   1400010bb:	mov    rdi,rcx
   1400010be:	call   0x14001460c
   1400010c3:	nop
   1400010c4:	lea    rax,[rip+0x3c5bd]        # 0x14003d688
   1400010cb:	mov    QWORD PTR [rdi],rax
   1400010ce:	lea    rcx,[rdi+0x18]
   1400010d2:	mov    QWORD PTR [rcx+0x20],0xf
   1400010da:	mov    QWORD PTR [rcx+0x18],0x0
   1400010e2:	mov    BYTE PTR [rcx+0x8],0x0
   1400010e6:	or     r9,0xffffffffffffffff
   1400010ea:	xor    r8d,r8d
   1400010ed:	mov    rdx,rbx
   1400010f0:	call   0x140002630
   1400010f5:	nop
   1400010f6:	mov    rax,rdi
   1400010f9:	mov    rbx,QWORD PTR [rsp+0x48]
   1400010fe:	add    rsp,0x30
   140001102:	pop    rdi
   140001103:	ret    
   140001104:	int3   
   140001105:	int3   
   140001106:	int3   
   140001107:	int3   
   140001108:	int3   
   140001109:	int3   
   14000110a:	int3   
   14000110b:	int3   
   14000110c:	int3   
   14000110d:	int3   
   14000110e:	int3   
   14000110f:	int3   
   140001110:	cmp    QWORD PTR [rcx+0x38],0x10
   140001115:	jb     0x14000111c
   140001117:	mov    rax,QWORD PTR [rcx+0x20]
   14000111b:	ret    
   14000111c:	lea    rax,[rcx+0x20]
   140001120:	ret    
   140001121:	int3   
   140001122:	int3   
   140001123:	int3   
   140001124:	int3   
   140001125:	int3   
   140001126:	int3   
   140001127:	int3   
   140001128:	int3   
   140001129:	int3   
   14000112a:	int3   
   14000112b:	int3   
   14000112c:	int3   
   14000112d:	int3   
   14000112e:	int3   
   14000112f:	int3   
   140001130:	mov    QWORD PTR [rsp+0x8],rbx
   140001135:	push   rdi
   140001136:	sub    rsp,0x20
   14000113a:	lea    rax,[rip+0x3c547]        # 0x14003d688
   140001141:	mov    edi,edx
   140001143:	mov    rbx,rcx
   140001146:	mov    QWORD PTR [rcx],rax
   140001149:	cmp    QWORD PTR [rcx+0x38],0x10
   14000114e:	jb     0x140001159
   140001150:	mov    rcx,QWORD PTR [rcx+0x20]
   140001154:	call   0x1400062d4
   140001159:	mov    QWORD PTR [rbx+0x38],0xf
   140001161:	mov    QWORD PTR [rbx+0x30],0x0
   140001169:	mov    rcx,rbx
   14000116c:	mov    BYTE PTR [rbx+0x20],0x0
   140001170:	call   0x140014718
   140001175:	test   dil,0x1
   140001179:	je     0x140001183
   14000117b:	mov    rcx,rbx
   14000117e:	call   0x1400062d4
   140001183:	mov    rax,rbx
   140001186:	mov    rbx,QWORD PTR [rsp+0x30]
   14000118b:	add    rsp,0x20
   14000118f:	pop    rdi
   140001190:	ret    
   140001191:	int3   
   140001192:	int3   
   140001193:	int3   
   140001194:	int3   
   140001195:	int3   
   140001196:	int3   
   140001197:	int3   
   140001198:	int3   
   140001199:	int3   
   14000119a:	int3   
   14000119b:	int3   
   14000119c:	int3   
   14000119d:	int3   
   14000119e:	int3   
   14000119f:	int3   
   1400011a0:	rex push rbx
   1400011a2:	sub    rsp,0x20
   1400011a6:	lea    rax,[rip+0x3c4db]        # 0x14003d688
   1400011ad:	mov    rbx,rcx
   1400011b0:	mov    QWORD PTR [rcx],rax
   1400011b3:	cmp    QWORD PTR [rcx+0x38],0x10
   1400011b8:	jb     0x1400011c3
   1400011ba:	mov    rcx,QWORD PTR [rcx+0x20]
   1400011be:	call   0x1400062d4
   1400011c3:	mov    QWORD PTR [rbx+0x38],0xf
   1400011cb:	mov    QWORD PTR [rbx+0x30],0x0
   1400011d3:	mov    rcx,rbx
   1400011d6:	mov    BYTE PTR [rbx+0x20],0x0
   1400011da:	add    rsp,0x20
   1400011de:	pop    rbx
   1400011df:	jmp    0x140014718
   1400011e4:	int3   
   1400011e5:	int3   
   1400011e6:	int3   
   1400011e7:	int3   
   1400011e8:	int3   
   1400011e9:	int3   
   1400011ea:	int3   
   1400011eb:	int3   
   1400011ec:	int3   
   1400011ed:	int3   
   1400011ee:	int3   
   1400011ef:	int3   
   1400011f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400011f5:	push   rdi
   1400011f6:	sub    rsp,0x30
   1400011fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140001203:	mov    QWORD PTR [rsp+0x48],rbx
   140001208:	mov    rbx,rdx
   14000120b:	mov    rdi,rcx
   14000120e:	call   0x140014698
   140001213:	nop
   140001214:	lea    rax,[rip+0x3c46d]        # 0x14003d688
   14000121b:	mov    QWORD PTR [rdi],rax
   14000121e:	lea    rdx,[rbx+0x18]
   140001222:	lea    rcx,[rdi+0x18]
   140001226:	mov    QWORD PTR [rcx+0x20],0xf
   14000122e:	mov    QWORD PTR [rcx+0x18],0x0
   140001236:	mov    BYTE PTR [rcx+0x8],0x0
   14000123a:	or     r9,0xffffffffffffffff
   14000123e:	xor    r8d,r8d
   140001241:	call   0x140002630
   140001246:	nop
   140001247:	mov    rax,rdi
   14000124a:	mov    rbx,QWORD PTR [rsp+0x48]
   14000124f:	add    rsp,0x30
   140001253:	pop    rdi
   140001254:	ret    
   140001255:	int3   
   140001256:	int3   
   140001257:	int3   
   140001258:	int3   
   140001259:	int3   
   14000125a:	int3   
   14000125b:	int3   
   14000125c:	int3   
   14000125d:	int3   
   14000125e:	int3   
   14000125f:	int3   
   140001260:	rex push rbx
   140001262:	sub    rsp,0x20
   140001266:	cmp    QWORD PTR [rcx+0x20],0x10
   14000126b:	mov    rbx,rcx
   14000126e:	jb     0x140001279
   140001270:	mov    rcx,QWORD PTR [rcx+0x8]
   140001274:	call   0x1400062d4
   140001279:	mov    QWORD PTR [rbx+0x20],0xf
   140001281:	mov    QWORD PTR [rbx+0x18],0x0
   140001289:	mov    BYTE PTR [rbx+0x8],0x0
   14000128d:	add    rsp,0x20
   140001291:	pop    rbx
   140001292:	ret    
   140001293:	int3   
   140001294:	int3   
   140001295:	int3   
   140001296:	int3   
   140001297:	int3   
   140001298:	int3   
   140001299:	int3   
   14000129a:	int3   
   14000129b:	int3   
   14000129c:	int3   
   14000129d:	int3   
   14000129e:	int3   
   14000129f:	int3   
   1400012a0:	mov    r11,rsp
   1400012a3:	push   rdi
   1400012a4:	sub    rsp,0x2c0
   1400012ab:	mov    QWORD PTR [rsp+0xd8],0xfffffffffffffffe
   1400012b7:	mov    QWORD PTR [r11+0x8],rbx
   1400012bb:	mov    QWORD PTR [r11+0x18],rbp
   1400012bf:	mov    QWORD PTR [r11+0x20],rsi
   1400012c3:	mov    rax,QWORD PTR [rip+0x47af6]        # 0x140048dc0
   1400012ca:	xor    rax,rsp
   1400012cd:	mov    QWORD PTR [rsp+0x2b0],rax
   1400012d5:	mov    rsi,rdx
   1400012d8:	mov    ebx,ecx
   1400012da:	mov    QWORD PTR [r11-0x138],0xf
   1400012e5:	xor    ebp,ebp
   1400012e7:	mov    QWORD PTR [r11-0x140],rbp
   1400012ee:	mov    BYTE PTR [rsp+0x178],bpl
   1400012f6:	xor    r8d,r8d
   1400012f9:	lea    rdx,[rip+0x3c49f]        # 0x14003d79f
   140001300:	lea    rcx,[r11-0x158]
   140001307:	call   0x140002a30
   14000130c:	nop
   14000130d:	mov    QWORD PTR [rsp+0x40],0xf
   140001316:	mov    QWORD PTR [rsp+0x38],rbp
   14000131b:	mov    BYTE PTR [rsp+0x28],bpl
   140001320:	lea    r8d,[rbp+0x1a]
   140001324:	lea    rdx,[rip+0x3c475]        # 0x14003d7a0
   14000132b:	lea    rcx,[rsp+0x20]
   140001330:	call   0x140002a30
   140001335:	lea    rdx,[rsp+0x20]
   14000133a:	lea    rcx,[rsp+0xe0]
   140001342:	call   0x140031560
   140001347:	nop
   140001348:	mov    r8d,0x104
   14000134e:	lea    rdx,[rsp+0x1a0]
   140001356:	xor    ecx,ecx
   140001358:	call   QWORD PTR [rip+0x35182]        # 0x1400364e0
   14000135e:	mov    QWORD PTR [rsp+0x70],0xf
   140001367:	mov    QWORD PTR [rsp+0x68],rbp
   14000136c:	mov    BYTE PTR [rsp+0x58],bpl
   140001371:	xor    eax,eax
   140001373:	or     rcx,0xffffffffffffffff
   140001377:	lea    rdi,[rsp+0x1a0]
   14000137f:	repnz scas al,BYTE PTR es:[rdi]
   140001381:	not    rcx
   140001384:	lea    r8,[rcx-0x1]
   140001388:	lea    rdx,[rsp+0x1a0]
   140001390:	lea    rcx,[rsp+0x50]
   140001395:	call   0x140002a30
   14000139a:	lea    rdx,[rsp+0x50]
   14000139f:	lea    rcx,[rsp+0xe0]
   1400013a7:	call   0x140031b20
   1400013ac:	cmp    ebx,0x2
   1400013af:	jne    0x140001971
   1400013b5:	lea    rdx,[rip+0x3c404]        # 0x14003d7c0
   1400013bc:	mov    rcx,QWORD PTR [rsi+0x8]
   1400013c0:	call   QWORD PTR [rip+0x35112]        # 0x1400364d8
   1400013c6:	test   eax,eax
   1400013c8:	je     0x14000158d
   1400013ce:	lea    rdx,[rip+0x3c3f3]        # 0x14003d7c8
   1400013d5:	mov    rcx,QWORD PTR [rsi+0x8]
   1400013d9:	call   QWORD PTR [rip+0x350f9]        # 0x1400364d8
   1400013df:	test   eax,eax
   1400013e1:	je     0x14000158d
   1400013e7:	lea    rdx,[rip+0x3c44a]        # 0x14003d838
   1400013ee:	mov    rcx,QWORD PTR [rsi+0x8]
   1400013f2:	call   QWORD PTR [rip+0x350e0]        # 0x1400364d8
   1400013f8:	test   eax,eax
   1400013fa:	je     0x140001415
   1400013fc:	lea    rdx,[rip+0x3c43d]        # 0x14003d840
   140001403:	mov    rcx,QWORD PTR [rsi+0x8]
   140001407:	call   QWORD PTR [rip+0x350cb]        # 0x1400364d8
   14000140d:	test   eax,eax
   14000140f:	jne    0x140001dbe
   140001415:	lea    rax,[rsp+0xa8]
   14000141d:	mov    QWORD PTR [rsp+0xd0],rax
   140001425:	mov    QWORD PTR [rsp+0xc8],0xf
   140001431:	mov    QWORD PTR [rsp+0xc0],rbp
   140001439:	mov    BYTE PTR [rsp+0xb0],0x0
   140001441:	xor    r8d,r8d
   140001444:	lea    rdx,[rip+0x3c354]        # 0x14003d79f
   14000144b:	lea    rcx,[rsp+0xa8]
   140001453:	call   0x140002a30
   140001458:	nop
   140001459:	mov    QWORD PTR [rsp+0x70],0xf
   140001462:	mov    QWORD PTR [rsp+0x68],rbp
   140001467:	mov    BYTE PTR [rsp+0x58],0x0
   14000146c:	mov    r8d,0xd
   140001472:	lea    rdx,[rip+0x3c377]        # 0x14003d7f0
   140001479:	lea    rcx,[rsp+0x50]
   14000147e:	call   0x140002a30
   140001483:	nop
   140001484:	lea    r8,[rsp+0xa8]
   14000148c:	lea    rdx,[rsp+0x50]
   140001491:	lea    rcx,[rsp+0x110]
   140001499:	call   0x140003a50
   14000149e:	nop
   14000149f:	lea    rcx,[rsp+0x110]
   1400014a7:	call   0x140004040
   1400014ac:	lea    rcx,[rsp+0x110]
   1400014b4:	call   0x1400041e0
   1400014b9:	mov    edx,0x40000002
   1400014be:	mov    r8d,0x1
   1400014c4:	lea    rcx,[rsp+0xe0]
   1400014cc:	call   0x140031a80
   1400014d1:	nop
   1400014d2:	cmp    QWORD PTR [rsp+0x158],0x10
   1400014db:	jb     0x1400014ea
   1400014dd:	mov    rcx,QWORD PTR [rsp+0x140]
   1400014e5:	call   0x1400062d4
   1400014ea:	mov    QWORD PTR [rsp+0x158],0xf
   1400014f6:	mov    QWORD PTR [rsp+0x150],rbp
   1400014fe:	mov    BYTE PTR [rsp+0x140],0x0
   140001506:	cmp    QWORD PTR [rsp+0x130],0x10
   14000150f:	jb     0x14000151e
   140001511:	mov    rcx,QWORD PTR [rsp+0x118]
   140001519:	call   0x1400062d4
   14000151e:	mov    QWORD PTR [rsp+0x130],0xf
   14000152a:	mov    QWORD PTR [rsp+0x128],rbp
   140001532:	mov    BYTE PTR [rsp+0x118],0x0
   14000153a:	cmp    QWORD PTR [rsp+0x100],0x10
   140001543:	jb     0x140001552
   140001545:	mov    rcx,QWORD PTR [rsp+0xe8]
   14000154d:	call   0x1400062d4
   140001552:	mov    QWORD PTR [rsp+0x100],0xf
   14000155e:	mov    QWORD PTR [rsp+0xf8],rbp
   140001566:	mov    BYTE PTR [rsp+0xe8],0x0
   14000156e:	cmp    QWORD PTR [rsp+0x190],0x10
   140001577:	jb     0x140001586
   140001579:	mov    rcx,QWORD PTR [rsp+0x178]
   140001581:	call   0x1400062d4
   140001586:	xor    eax,eax
   140001588:	jmp    0x140001e0c
   14000158d:	lea    rax,[rsp+0xa8]
   140001595:	mov    QWORD PTR [rsp+0xd0],rax
   14000159d:	mov    QWORD PTR [rsp+0xc8],0xf
   1400015a9:	mov    QWORD PTR [rsp+0xc0],rbp
   1400015b1:	mov    BYTE PTR [rsp+0xb0],0x0
   1400015b9:	mov    r8d,0x15
   1400015bf:	lea    rdx,[rip+0x3c212]        # 0x14003d7d8
   1400015c6:	lea    rcx,[rsp+0xa8]
   1400015ce:	call   0x140002a30
   1400015d3:	nop
   1400015d4:	mov    QWORD PTR [rsp+0x70],0xf
   1400015dd:	mov    QWORD PTR [rsp+0x68],rbp
   1400015e2:	mov    BYTE PTR [rsp+0x58],0x0
   1400015e7:	mov    r8d,0xd
   1400015ed:	lea    rdx,[rip+0x3c1fc]        # 0x14003d7f0
   1400015f4:	lea    rcx,[rsp+0x50]
   1400015f9:	call   0x140002a30
   1400015fe:	nop
   1400015ff:	lea    r8,[rsp+0xa8]
   140001607:	lea    rdx,[rsp+0x50]
   14000160c:	lea    rcx,[rsp+0x110]
   140001614:	call   0x140003a50
   140001619:	nop
   14000161a:	lea    rdx,[rsp+0x170]
   140001622:	lea    rcx,[rsp+0x110]
   14000162a:	call   0x140004730
   14000162f:	test   al,al
   140001631:	jne    0x1400017de
   140001637:	mov    ecx,0x8
   14000163c:	call   0x140006290
   140001641:	test   rax,rax
   140001644:	je     0x140001650
   140001646:	lea    rcx,[rsp+0x78]
   14000164b:	mov    QWORD PTR [rax],rcx
   14000164e:	jmp    0x140001653
   140001650:	mov    rax,rbp
   140001653:	mov    QWORD PTR [rsp+0x78],rax
   140001658:	mov    QWORD PTR [rsp+0x90],rbp
   140001660:	mov    QWORD PTR [rsp+0x98],rbp
   140001668:	mov    QWORD PTR [rsp+0xa0],rbp
   140001670:	lea    rdx,[rsp+0x170]
   140001678:	lea    rcx,[rsp+0x78]
   14000167d:	call   0x140002530
   140001682:	lea    rdx,[rsp+0x78]
   140001687:	lea    rcx,[rsp+0x20]
   14000168c:	call   0x140002450
   140001691:	xor    r9d,r9d
   140001694:	mov    r8,rax
   140001697:	mov    edx,0xc0000006
   14000169c:	lea    rcx,[rsp+0xe0]
   1400016a4:	call   0x1400315b0
   1400016a9:	nop
   1400016aa:	mov    rcx,QWORD PTR [rsp+0x90]
   1400016b2:	test   rcx,rcx
   1400016b5:	je     0x140001700
   1400016b7:	mov    rbx,QWORD PTR [rsp+0x98]
   1400016bf:	cmp    rcx,rbx
   1400016c2:	je     0x1400016fb
   1400016c4:	lea    rdi,[rcx+0x20]
   1400016c8:	cmp    QWORD PTR [rdi],0x10
   1400016cc:	jb     0x1400016d7
   1400016ce:	mov    rcx,QWORD PTR [rdi-0x18]
   1400016d2:	call   0x1400062d4
   1400016d7:	mov    QWORD PTR [rdi],0xf
   1400016de:	mov    QWORD PTR [rdi-0x8],rbp
   1400016e2:	mov    BYTE PTR [rdi-0x18],0x0
   1400016e6:	add    rdi,0x28
   1400016ea:	lea    rax,[rdi-0x20]
   1400016ee:	cmp    rax,rbx
   1400016f1:	jne    0x1400016c8
   1400016f3:	mov    rcx,QWORD PTR [rsp+0x90]
   1400016fb:	call   0x1400062d4
   140001700:	mov    QWORD PTR [rsp+0x90],rbp
   140001708:	mov    QWORD PTR [rsp+0x98],rbp
   140001710:	mov    QWORD PTR [rsp+0xa0],rbp
   140001718:	mov    rcx,QWORD PTR [rsp+0x78]
   14000171d:	call   0x1400062d4
   140001722:	nop
   140001723:	cmp    QWORD PTR [rsp+0x158],0x10
   14000172c:	jb     0x14000173b
   14000172e:	mov    rcx,QWORD PTR [rsp+0x140]
   140001736:	call   0x1400062d4
   14000173b:	mov    QWORD PTR [rsp+0x158],0xf
   140001747:	mov    QWORD PTR [rsp+0x150],rbp
   14000174f:	mov    BYTE PTR [rsp+0x140],0x0
   140001757:	cmp    QWORD PTR [rsp+0x130],0x10
   140001760:	jb     0x14000176f
   140001762:	mov    rcx,QWORD PTR [rsp+0x118]
   14000176a:	call   0x1400062d4
   14000176f:	mov    QWORD PTR [rsp+0x130],0xf
   14000177b:	mov    QWORD PTR [rsp+0x128],rbp
   140001783:	mov    BYTE PTR [rsp+0x118],0x0
   14000178b:	cmp    QWORD PTR [rsp+0x100],0x10
   140001794:	jb     0x1400017a3
   140001796:	mov    rcx,QWORD PTR [rsp+0xe8]
   14000179e:	call   0x1400062d4
   1400017a3:	mov    QWORD PTR [rsp+0x100],0xf
   1400017af:	mov    QWORD PTR [rsp+0xf8],rbp
   1400017b7:	mov    BYTE PTR [rsp+0xe8],0x0
   1400017bf:	cmp    QWORD PTR [rsp+0x190],0x10
   1400017c8:	jb     0x1400017d7
   1400017ca:	mov    rcx,QWORD PTR [rsp+0x178]
   1400017d2:	call   0x1400062d4
   1400017d7:	xor    eax,eax
   1400017d9:	jmp    0x140001e0c
   1400017de:	lea    rdx,[rsp+0x178]
   1400017e6:	cmp    QWORD PTR [rsp+0x190],0x10
   1400017ef:	cmovae rdx,QWORD PTR [rsp+0x178]
   1400017f8:	mov    QWORD PTR [rsp+0x40],0xf
   140001801:	mov    QWORD PTR [rsp+0x38],rbp
   140001806:	mov    BYTE PTR [rsp+0x28],0x0
   14000180b:	xor    eax,eax
   14000180d:	or     rcx,0xffffffffffffffff
   140001811:	mov    rdi,rdx
   140001814:	repnz scas al,BYTE PTR es:[rdi]
   140001816:	not    rcx
   140001819:	lea    r8,[rcx-0x1]
   14000181d:	lea    rcx,[rsp+0x20]
   140001822:	call   0x140002a30
   140001827:	lea    rdx,[rsp+0x20]
   14000182c:	lea    rcx,[rsp+0x110]
   140001834:	call   0x140003bc0
   140001839:	test   al,al
   14000183b:	je     0x1400018a0
   14000183d:	mov    QWORD PTR [rsp+0x40],0xf
   140001846:	mov    QWORD PTR [rsp+0x38],rbp
   14000184b:	mov    BYTE PTR [rsp+0x28],0x0
   140001850:	mov    r8d,0x37
   140001856:	lea    rdx,[rip+0x3bfa3]        # 0x14003d800
   14000185d:	lea    rcx,[rsp+0x20]
   140001862:	call   0x140002a30
   140001867:	lea    rdx,[rsp+0x20]
   14000186c:	lea    rcx,[rsp+0x110]
   140001874:	call   0x140004370
   140001879:	lea    rcx,[rsp+0x110]
   140001881:	call   0x140003eb0
   140001886:	mov    edx,0x40000001
   14000188b:	mov    r8d,0x1
   140001891:	lea    rcx,[rsp+0xe0]
   140001899:	call   0x140031a80
   14000189e:	jmp    0x1400018b6
   1400018a0:	xor    r8d,r8d
   1400018a3:	mov    edx,0xc0000007
   1400018a8:	lea    rcx,[rsp+0xe0]
   1400018b0:	call   0x140031a80
   1400018b5:	nop
   1400018b6:	cmp    QWORD PTR [rsp+0x158],0x10
   1400018bf:	jb     0x1400018ce
   1400018c1:	mov    rcx,QWORD PTR [rsp+0x140]
   1400018c9:	call   0x1400062d4
   1400018ce:	mov    QWORD PTR [rsp+0x158],0xf
   1400018da:	mov    QWORD PTR [rsp+0x150],rbp
   1400018e2:	mov    BYTE PTR [rsp+0x140],0x0
   1400018ea:	cmp    QWORD PTR [rsp+0x130],0x10
   1400018f3:	jb     0x140001902
   1400018f5:	mov    rcx,QWORD PTR [rsp+0x118]
   1400018fd:	call   0x1400062d4
   140001902:	mov    QWORD PTR [rsp+0x130],0xf
   14000190e:	mov    QWORD PTR [rsp+0x128],rbp
   140001916:	mov    BYTE PTR [rsp+0x118],0x0
   14000191e:	cmp    QWORD PTR [rsp+0x100],0x10
   140001927:	jb     0x140001936
   140001929:	mov    rcx,QWORD PTR [rsp+0xe8]
   140001931:	call   0x1400062d4
   140001936:	mov    QWORD PTR [rsp+0x100],0xf
   140001942:	mov    QWORD PTR [rsp+0xf8],rbp
   14000194a:	mov    BYTE PTR [rsp+0xe8],0x0
   140001952:	cmp    QWORD PTR [rsp+0x190],0x10
   14000195b:	jb     0x14000196a
   14000195d:	mov    rcx,QWORD PTR [rsp+0x178]
   140001965:	call   0x1400062d4
   14000196a:	xor    eax,eax
   14000196c:	jmp    0x140001e0c
   140001971:	lea    rax,[rsp+0x50]
   140001976:	mov    QWORD PTR [rsp+0xd0],rax
   14000197e:	mov    QWORD PTR [rsp+0x70],0xf
   140001987:	mov    QWORD PTR [rsp+0x68],rbp
   14000198c:	mov    BYTE PTR [rsp+0x58],0x0
   140001991:	mov    r8d,0x15
   140001997:	lea    rdx,[rip+0x3be3a]        # 0x14003d7d8
   14000199e:	lea    rcx,[rsp+0x50]
   1400019a3:	call   0x140002a30
   1400019a8:	nop
   1400019a9:	mov    QWORD PTR [rsp+0x98],0xf
   1400019b5:	mov    QWORD PTR [rsp+0x90],rbp
   1400019bd:	mov    BYTE PTR [rsp+0x80],0x0
   1400019c5:	mov    r8d,0xd
   1400019cb:	lea    rdi,[rip+0x3be1e]        # 0x14003d7f0
   1400019d2:	mov    rdx,rdi
   1400019d5:	lea    rcx,[rsp+0x78]
   1400019da:	call   0x140002a30
   1400019df:	nop
   1400019e0:	lea    r8,[rsp+0x50]
   1400019e5:	lea    rdx,[rsp+0x78]
   1400019ea:	lea    rcx,[rsp+0x110]
   1400019f2:	call   0x140003a50
   1400019f7:	nop
   1400019f8:	lea    rdx,[rsp+0x170]
   140001a00:	lea    rcx,[rsp+0x110]
   140001a08:	call   0x140004730
   140001a0d:	test   al,al
   140001a0f:	jne    0x140001ba1
   140001a15:	mov    ecx,0x8
   140001a1a:	call   0x140006290
   140001a1f:	test   rax,rax
   140001a22:	je     0x140001a2e
   140001a24:	lea    rcx,[rsp+0x20]
   140001a29:	mov    QWORD PTR [rax],rcx
   140001a2c:	jmp    0x140001a31
   140001a2e:	mov    rax,rbp
   140001a31:	mov    QWORD PTR [rsp+0x20],rax
   140001a36:	mov    QWORD PTR [rsp+0x38],rbp
   140001a3b:	mov    QWORD PTR [rsp+0x40],rbp
   140001a40:	mov    QWORD PTR [rsp+0x48],rbp
   140001a45:	lea    rdx,[rsp+0x170]
   140001a4d:	lea    rcx,[rsp+0x20]
   140001a52:	call   0x140002530
   140001a57:	lea    rdx,[rsp+0x20]
   140001a5c:	lea    rcx,[rsp+0x78]
   140001a61:	call   0x140002450
   140001a66:	xor    r9d,r9d
   140001a69:	mov    r8,rax
   140001a6c:	mov    edx,0xc0000006
   140001a71:	lea    rcx,[rsp+0xe0]
   140001a79:	call   0x1400315b0
   140001a7e:	nop
   140001a7f:	mov    rcx,QWORD PTR [rsp+0x38]
   140001a84:	test   rcx,rcx
   140001a87:	je     0x140001acc
   140001a89:	mov    rbx,QWORD PTR [rsp+0x40]
   140001a8e:	cmp    rcx,rbx
   140001a91:	je     0x140001ac7
   140001a93:	lea    rdi,[rcx+0x20]
   140001a97:	cmp    QWORD PTR [rdi],0x10
   140001a9b:	jb     0x140001aa6
   140001a9d:	mov    rcx,QWORD PTR [rdi-0x18]
   140001aa1:	call   0x1400062d4
   140001aa6:	mov    QWORD PTR [rdi],0xf
   140001aad:	mov    QWORD PTR [rdi-0x8],rbp
   140001ab1:	mov    BYTE PTR [rdi-0x18],0x0
   140001ab5:	add    rdi,0x28
   140001ab9:	lea    rax,[rdi-0x20]
   140001abd:	cmp    rax,rbx
   140001ac0:	jne    0x140001a97
   140001ac2:	mov    rcx,QWORD PTR [rsp+0x38]
   140001ac7:	call   0x1400062d4
   140001acc:	mov    QWORD PTR [rsp+0x38],rbp
   140001ad1:	mov    QWORD PTR [rsp+0x40],rbp
   140001ad6:	mov    QWORD PTR [rsp+0x48],rbp
   140001adb:	mov    rcx,QWORD PTR [rsp+0x20]
   140001ae0:	call   0x1400062d4
   140001ae5:	nop
   140001ae6:	cmp    QWORD PTR [rsp+0x158],0x10
   140001aef:	jb     0x140001afe
   140001af1:	mov    rcx,QWORD PTR [rsp+0x140]
   140001af9:	call   0x1400062d4
   140001afe:	mov    QWORD PTR [rsp+0x158],0xf
   140001b0a:	mov    QWORD PTR [rsp+0x150],rbp
   140001b12:	mov    BYTE PTR [rsp+0x140],0x0
   140001b1a:	cmp    QWORD PTR [rsp+0x130],0x10
   140001b23:	jb     0x140001b32
   140001b25:	mov    rcx,QWORD PTR [rsp+0x118]
   140001b2d:	call   0x1400062d4
   140001b32:	mov    QWORD PTR [rsp+0x130],0xf
   140001b3e:	mov    QWORD PTR [rsp+0x128],rbp
   140001b46:	mov    BYTE PTR [rsp+0x118],0x0
   140001b4e:	cmp    QWORD PTR [rsp+0x100],0x10
   140001b57:	jb     0x140001b66
   140001b59:	mov    rcx,QWORD PTR [rsp+0xe8]
   140001b61:	call   0x1400062d4
   140001b66:	mov    QWORD PTR [rsp+0x100],0xf
   140001b72:	mov    QWORD PTR [rsp+0xf8],rbp
   140001b7a:	mov    BYTE PTR [rsp+0xe8],0x0
   140001b82:	cmp    QWORD PTR [rsp+0x190],0x10
   140001b8b:	jb     0x140001b9a
   140001b8d:	mov    rcx,QWORD PTR [rsp+0x178]
   140001b95:	call   0x1400062d4
   140001b9a:	xor    eax,eax
   140001b9c:	jmp    0x140001e0c
   140001ba1:	mov    QWORD PTR [rsp+0x40],0xf
   140001baa:	mov    QWORD PTR [rsp+0x38],rbp
   140001baf:	mov    BYTE PTR [rsp+0x28],0x0
   140001bb4:	or     r9,0xffffffffffffffff
   140001bb8:	xor    r8d,r8d
   140001bbb:	lea    rdx,[rsp+0x170]
   140001bc3:	lea    rcx,[rsp+0x20]
   140001bc8:	call   0x140002630
   140001bcd:	lea    rdx,[rsp+0x20]
   140001bd2:	lea    rcx,[rsp+0x110]
   140001bda:	call   0x140004a30
   140001bdf:	test   al,al
   140001be1:	jne    0x140001d7a
   140001be7:	mov    ecx,0x8
   140001bec:	call   0x140006290
   140001bf1:	test   rax,rax
   140001bf4:	je     0x140001c00
   140001bf6:	lea    rcx,[rsp+0x20]
   140001bfb:	mov    QWORD PTR [rax],rcx
   140001bfe:	jmp    0x140001c03
   140001c00:	mov    rax,rbp
   140001c03:	mov    QWORD PTR [rsp+0x20],rax
   140001c08:	mov    QWORD PTR [rsp+0x38],rbp
   140001c0d:	mov    QWORD PTR [rsp+0x40],rbp
   140001c12:	mov    QWORD PTR [rsp+0x48],rbp
   140001c17:	lea    rdx,[rsp+0x170]
   140001c1f:	lea    rcx,[rsp+0x20]
   140001c24:	call   0x140002530
   140001c29:	lea    rdx,[rsp+0x20]
   140001c2e:	lea    rcx,[rsp+0x78]
   140001c33:	call   0x140002450
   140001c38:	xor    r9d,r9d
   140001c3b:	mov    r8,rax
   140001c3e:	mov    edx,0xc0000010
   140001c43:	lea    rcx,[rsp+0xe0]
   140001c4b:	call   0x1400315b0
   140001c50:	nop
   140001c51:	mov    rcx,QWORD PTR [rsp+0x38]
   140001c56:	test   rcx,rcx
   140001c59:	je     0x140001ca5
   140001c5b:	mov    rbx,QWORD PTR [rsp+0x40]
   140001c60:	cmp    rcx,rbx
   140001c63:	je     0x140001ca0
   140001c65:	lea    rdi,[rcx+0x20]
   140001c69:	nop    DWORD PTR [rax+0x0]
   140001c70:	cmp    QWORD PTR [rdi],0x10
   140001c74:	jb     0x140001c7f
   140001c76:	mov    rcx,QWORD PTR [rdi-0x18]
   140001c7a:	call   0x1400062d4
   140001c7f:	mov    QWORD PTR [rdi],0xf
   140001c86:	mov    QWORD PTR [rdi-0x8],rbp
   140001c8a:	mov    BYTE PTR [rdi-0x18],0x0
   140001c8e:	add    rdi,0x28
   140001c92:	lea    rax,[rdi-0x20]
   140001c96:	cmp    rax,rbx
   140001c99:	jne    0x140001c70
   140001c9b:	mov    rcx,QWORD PTR [rsp+0x38]
   140001ca0:	call   0x1400062d4
   140001ca5:	mov    QWORD PTR [rsp+0x38],rbp
   140001caa:	mov    QWORD PTR [rsp+0x40],rbp
   140001caf:	mov    QWORD PTR [rsp+0x48],rbp
   140001cb4:	mov    rcx,QWORD PTR [rsp+0x20]
   140001cb9:	call   0x1400062d4
   140001cbe:	nop
   140001cbf:	cmp    QWORD PTR [rsp+0x158],0x10
   140001cc8:	jb     0x140001cd7
   140001cca:	mov    rcx,QWORD PTR [rsp+0x140]
   140001cd2:	call   0x1400062d4
   140001cd7:	mov    QWORD PTR [rsp+0x158],0xf
   140001ce3:	mov    QWORD PTR [rsp+0x150],rbp
   140001ceb:	mov    BYTE PTR [rsp+0x140],0x0
   140001cf3:	cmp    QWORD PTR [rsp+0x130],0x10
   140001cfc:	jb     0x140001d0b
   140001cfe:	mov    rcx,QWORD PTR [rsp+0x118]
   140001d06:	call   0x1400062d4
   140001d0b:	mov    QWORD PTR [rsp+0x130],0xf
   140001d17:	mov    QWORD PTR [rsp+0x128],rbp
   140001d1f:	mov    BYTE PTR [rsp+0x118],0x0
   140001d27:	cmp    QWORD PTR [rsp+0x100],0x10
   140001d30:	jb     0x140001d3f
   140001d32:	mov    rcx,QWORD PTR [rsp+0xe8]
   140001d3a:	call   0x1400062d4
   140001d3f:	mov    QWORD PTR [rsp+0x100],0xf
   140001d4b:	mov    QWORD PTR [rsp+0xf8],rbp
   140001d53:	mov    BYTE PTR [rsp+0xe8],0x0
   140001d5b:	cmp    QWORD PTR [rsp+0x190],0x10
   140001d64:	jb     0x140001d73
   140001d66:	mov    rcx,QWORD PTR [rsp+0x178]
   140001d6e:	call   0x1400062d4
   140001d73:	xor    eax,eax
   140001d75:	jmp    0x140001e0c
   140001d7a:	mov    QWORD PTR [rsp+0xa8],rdi
   140001d82:	lea    rax,[rip+0xb7]        # 0x140001e40
   140001d89:	mov    QWORD PTR [rsp+0xb0],rax
   140001d91:	mov    QWORD PTR [rsp+0xb8],rbp
   140001d99:	mov    QWORD PTR [rsp+0xc0],rbp
   140001da1:	lea    rcx,[rsp+0xa8]
   140001da9:	call   QWORD PTR [rip+0x342d9]        # 0x140036088
   140001daf:	nop
   140001db0:	lea    rcx,[rsp+0x110]
   140001db8:	call   0x140003b60
   140001dbd:	nop
   140001dbe:	cmp    QWORD PTR [rsp+0x100],0x10
   140001dc7:	jb     0x140001dd6
   140001dc9:	mov    rcx,QWORD PTR [rsp+0xe8]
   140001dd1:	call   0x1400062d4
   140001dd6:	mov    QWORD PTR [rsp+0x100],0xf
   140001de2:	mov    QWORD PTR [rsp+0xf8],rbp
   140001dea:	mov    BYTE PTR [rsp+0xe8],0x0
   140001df2:	cmp    QWORD PTR [rsp+0x190],0x10
   140001dfb:	jb     0x140001e0a
   140001dfd:	mov    rcx,QWORD PTR [rsp+0x178]
   140001e05:	call   0x1400062d4
   140001e0a:	xor    eax,eax
   140001e0c:	mov    rcx,QWORD PTR [rsp+0x2b0]
   140001e14:	xor    rcx,rsp
   140001e17:	call   0x1400144f0
   140001e1c:	lea    r11,[rsp+0x2c0]
   140001e24:	mov    rbx,QWORD PTR [r11+0x10]
   140001e28:	mov    rbp,QWORD PTR [r11+0x20]
   140001e2c:	mov    rsi,QWORD PTR [r11+0x28]
   140001e30:	mov    rsp,r11
   140001e33:	pop    rdi
   140001e34:	ret    
   140001e35:	int3   
   140001e36:	int3   
   140001e37:	int3   
   140001e38:	int3   
   140001e39:	int3   
   140001e3a:	int3   
   140001e3b:	int3   
   140001e3c:	int3   
   140001e3d:	int3   
   140001e3e:	int3   
   140001e3f:	int3   
   140001e40:	mov    r11,rsp
   140001e43:	push   rdi
   140001e44:	sub    rsp,0x90
   140001e4b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140001e54:	mov    QWORD PTR [r11+0x8],rbx
   140001e58:	mov    QWORD PTR [r11+0x10],rsi
   140001e5c:	mov    rax,QWORD PTR [rip+0x46f5d]        # 0x140048dc0
   140001e63:	xor    rax,rsp
   140001e66:	mov    QWORD PTR [rsp+0x80],rax
   140001e6e:	mov    rbx,rdx
   140001e71:	mov    edi,ecx
   140001e73:	mov    QWORD PTR [r11-0x58],0xf
   140001e7b:	xor    esi,esi
   140001e7d:	mov    QWORD PTR [r11-0x60],rsi
   140001e81:	mov    BYTE PTR [rsp+0x28],sil
   140001e86:	lea    r8d,[rsi+0x1a]
   140001e8a:	lea    rdx,[rip+0x3b90f]        # 0x14003d7a0
   140001e91:	lea    rcx,[r11-0x78]
   140001e95:	call   0x140002a30
   140001e9a:	lea    rdx,[rsp+0x20]
   140001e9f:	lea    rcx,[rsp+0x50]
   140001ea4:	call   0x140031560
   140001ea9:	nop
   140001eaa:	lea    rdx,[rip+0x2bf]        # 0x140002170
   140001eb1:	lea    rcx,[rip+0x3b938]        # 0x14003d7f0
   140001eb8:	call   QWORD PTR [rip+0x341c2]        # 0x140036080
   140001ebe:	mov    rcx,rax
   140001ec1:	mov    QWORD PTR [rip+0x4d6f8],rax        # 0x14004f5c0
   140001ec8:	test   rax,rax
   140001ecb:	jne    0x140001ef4
   140001ecd:	xor    r8d,r8d
   140001ed0:	mov    edx,0xc0000005
   140001ed5:	lea    rcx,[rsp+0x50]
   140001eda:	call   0x140031a80
   140001edf:	nop
   140001ee0:	cmp    QWORD PTR [rsp+0x70],0x10
   140001ee6:	jb     0x140001f62
   140001ee8:	mov    rcx,QWORD PTR [rsp+0x58]
   140001eed:	call   0x1400062d4
   140001ef2:	jmp    0x140001f62
   140001ef4:	mov    DWORD PTR [rip+0x4d6ca],0x10        # 0x14004f5c8
   140001efe:	mov    DWORD PTR [rip+0x4d6d4],esi        # 0x14004f5d8
   140001f04:	mov    DWORD PTR [rip+0x4d6be],0x2        # 0x14004f5cc
   140001f0e:	mov    DWORD PTR [rip+0x4d6c0],esi        # 0x14004f5d4
   140001f14:	mov    DWORD PTR [rip+0x4d6c2],0xbb8        # 0x14004f5e0
   140001f1e:	mov    DWORD PTR [rip+0x4d6ac],esi        # 0x14004f5d0
   140001f24:	mov    eax,DWORD PTR [rip+0x48bde]        # 0x14004ab08
   140001f2a:	mov    DWORD PTR [rip+0x4d6ac],eax        # 0x14004f5dc
   140001f30:	inc    eax
   140001f32:	mov    DWORD PTR [rip+0x48bd0],eax        # 0x14004ab08
   140001f38:	lea    rdx,[rip+0x4d689]        # 0x14004f5c8
   140001f3f:	call   QWORD PTR [rip+0x34133]        # 0x140036078
   140001f45:	mov    rdx,rbx
   140001f48:	mov    ecx,edi
   140001f4a:	call   0x140001f90
   140001f4f:	nop
   140001f50:	cmp    QWORD PTR [rsp+0x70],0x10
   140001f56:	jb     0x140001f62
   140001f58:	mov    rcx,QWORD PTR [rsp+0x58]
   140001f5d:	call   0x1400062d4
   140001f62:	mov    rcx,QWORD PTR [rsp+0x80]
   140001f6a:	xor    rcx,rsp
   140001f6d:	call   0x1400144f0
   140001f72:	lea    r11,[rsp+0x90]
   140001f7a:	mov    rbx,QWORD PTR [r11+0x10]
   140001f7e:	mov    rsi,QWORD PTR [r11+0x18]
   140001f82:	mov    rsp,r11
   140001f85:	pop    rdi
   140001f86:	ret    
   140001f87:	int3   
   140001f88:	int3   
   140001f89:	int3   
   140001f8a:	int3   
   140001f8b:	int3   
   140001f8c:	int3   
   140001f8d:	int3   
   140001f8e:	int3   
   140001f8f:	int3   
   140001f90:	rex push rbx
   140001f92:	sub    rsp,0xa0
   140001f99:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   140001fa2:	mov    rax,QWORD PTR [rip+0x46e17]        # 0x140048dc0
   140001fa9:	xor    rax,rsp
   140001fac:	mov    QWORD PTR [rsp+0x98],rax
   140001fb4:	mov    QWORD PTR [rsp+0x60],0xf
   140001fbd:	xor    ebx,ebx
   140001fbf:	mov    QWORD PTR [rsp+0x58],rbx
   140001fc4:	mov    BYTE PTR [rsp+0x48],bl
   140001fc8:	lea    r8d,[rbx+0x1a]
   140001fcc:	lea    rdx,[rip+0x3b7cd]        # 0x14003d7a0
   140001fd3:	lea    rcx,[rsp+0x40]
   140001fd8:	call   0x140002a30
   140001fdd:	lea    rdx,[rsp+0x40]
   140001fe2:	lea    rcx,[rsp+0x68]
   140001fe7:	call   0x140031560
   140001fec:	nop
   140001fed:	xor    r9d,r9d
   140001ff0:	xor    r8d,r8d
   140001ff3:	lea    edx,[rbx+0x1]
   140001ff6:	xor    ecx,ecx
   140001ff8:	call   QWORD PTR [rip+0x344d2]        # 0x1400364d0
   140001ffe:	mov    QWORD PTR [rip+0x4d5e3],rax        # 0x14004f5e8
   140002005:	test   rax,rax
   140002008:	jne    0x140002075
   14000200a:	xor    r8d,r8d
   14000200d:	mov    edx,0xc0000024
   140002012:	lea    rcx,[rsp+0x68]
   140002017:	call   0x140031a80
   14000201c:	mov    DWORD PTR [rip+0x4d5a6],0x1        # 0x14004f5cc
   140002026:	mov    DWORD PTR [rip+0x4d5a8],ebx        # 0x14004f5d4
   14000202c:	mov    DWORD PTR [rip+0x4d5ae],ebx        # 0x14004f5e0
   140002032:	mov    DWORD PTR [rip+0x4d594],0x5        # 0x14004f5d0
   14000203c:	mov    DWORD PTR [rip+0x4d59a],ebx        # 0x14004f5dc
   140002042:	lea    rdx,[rip+0x4d57f]        # 0x14004f5c8
   140002049:	mov    rcx,QWORD PTR [rip+0x4d570]        # 0x14004f5c0
   140002050:	call   QWORD PTR [rip+0x34022]        # 0x140036078
   140002056:	nop
   140002057:	cmp    QWORD PTR [rsp+0x88],0x10
   140002060:	jb     0x14000214a
   140002066:	mov    rcx,QWORD PTR [rsp+0x70]
   14000206b:	call   0x1400062d4
   140002070:	jmp    0x14000214a
   140002075:	mov    DWORD PTR [rip+0x4d54d],0x4        # 0x14004f5cc
   14000207f:	mov    DWORD PTR [rip+0x4d54f],ebx        # 0x14004f5d4
   140002085:	mov    DWORD PTR [rip+0x4d555],ebx        # 0x14004f5e0
   14000208b:	mov    DWORD PTR [rip+0x4d53b],0x5        # 0x14004f5d0
   140002095:	mov    DWORD PTR [rip+0x4d541],ebx        # 0x14004f5dc
   14000209b:	lea    rdx,[rip+0x4d526]        # 0x14004f5c8
   1400020a2:	mov    rcx,QWORD PTR [rip+0x4d517]        # 0x14004f5c0
   1400020a9:	call   QWORD PTR [rip+0x33fc9]        # 0x140036078
   1400020af:	mov    DWORD PTR [rsp+0x30],ebx
   1400020b3:	lea    rax,[rsp+0x30]
   1400020b8:	mov    QWORD PTR [rsp+0x28],rax
   1400020bd:	mov    DWORD PTR [rsp+0x20],ebx
   1400020c1:	xor    r9d,r9d
   1400020c4:	lea    r8,[rip+0x3ef5]        # 0x140005fc0
   1400020cb:	xor    edx,edx
   1400020cd:	xor    ecx,ecx
   1400020cf:	call   QWORD PTR [rip+0x343f3]        # 0x1400364c8
   1400020d5:	or     edx,0xffffffff
   1400020d8:	mov    rcx,QWORD PTR [rip+0x4d509]        # 0x14004f5e8
   1400020df:	call   QWORD PTR [rip+0x343db]        # 0x1400364c0
   1400020e5:	mov    edx,0x40000004
   1400020ea:	mov    r8d,0x1
   1400020f0:	lea    rcx,[rsp+0x68]
   1400020f5:	call   0x140031a80
   1400020fa:	mov    DWORD PTR [rip+0x4d4c8],0x1        # 0x14004f5cc
   140002104:	mov    DWORD PTR [rip+0x4d4ca],ebx        # 0x14004f5d4
   14000210a:	mov    DWORD PTR [rip+0x4d4d0],ebx        # 0x14004f5e0
   140002110:	mov    DWORD PTR [rip+0x4d4b6],0x5        # 0x14004f5d0
   14000211a:	mov    DWORD PTR [rip+0x4d4bc],ebx        # 0x14004f5dc
   140002120:	lea    rdx,[rip+0x4d4a1]        # 0x14004f5c8
   140002127:	mov    rcx,QWORD PTR [rip+0x4d492]        # 0x14004f5c0
   14000212e:	call   QWORD PTR [rip+0x33f44]        # 0x140036078
   140002134:	nop
   140002135:	cmp    QWORD PTR [rsp+0x88],0x10
   14000213e:	jb     0x14000214a
   140002140:	mov    rcx,QWORD PTR [rsp+0x70]
   140002145:	call   0x1400062d4
   14000214a:	mov    rcx,QWORD PTR [rsp+0x98]
   140002152:	xor    rcx,rsp
   140002155:	call   0x1400144f0
   14000215a:	add    rsp,0xa0
   140002161:	pop    rbx
   140002162:	ret    
   140002163:	int3   
   140002164:	int3   
   140002165:	int3   
   140002166:	int3   
   140002167:	int3   
   140002168:	int3   
   140002169:	int3   
   14000216a:	int3   
   14000216b:	int3   
   14000216c:	int3   
   14000216d:	int3   
   14000216e:	int3   
   14000216f:	int3   
   140002170:	mov    r11,rsp
   140002173:	push   rdi
   140002174:	sub    rsp,0x90
   14000217b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140002184:	mov    QWORD PTR [r11+0x8],rbx
   140002188:	mov    rax,QWORD PTR [rip+0x46c31]        # 0x140048dc0
   14000218f:	xor    rax,rsp
   140002192:	mov    QWORD PTR [rsp+0x80],rax
   14000219a:	mov    ebx,ecx
   14000219c:	mov    QWORD PTR [r11-0x58],0xf
   1400021a4:	xor    edi,edi
   1400021a6:	mov    QWORD PTR [r11-0x60],rdi
   1400021aa:	mov    BYTE PTR [rsp+0x28],dil
   1400021af:	lea    r8d,[rdi+0x1a]
   1400021b3:	lea    rdx,[rip+0x3b5e6]        # 0x14003d7a0
   1400021ba:	lea    rcx,[r11-0x78]
   1400021be:	call   0x140002a30
   1400021c3:	lea    rdx,[rsp+0x20]
   1400021c8:	lea    rcx,[rsp+0x50]
   1400021cd:	call   0x140031560
   1400021d2:	nop
   1400021d3:	sub    ebx,0x1
   1400021d6:	je     0x14000220d
   1400021d8:	cmp    ebx,0x4
   1400021db:	je     0x1400021f8
   1400021dd:	cmp    QWORD PTR [rsp+0x70],0x10
   1400021e3:	jb     0x1400022f5
   1400021e9:	mov    rcx,QWORD PTR [rsp+0x58]
   1400021ee:	call   0x1400062d4
   1400021f3:	jmp    0x1400022f5
   1400021f8:	mov    edx,0xc0000015
   1400021fd:	mov    r8d,0x1
   140002203:	lea    rcx,[rsp+0x50]
   140002208:	call   0x140031a80
   14000220d:	mov    edx,0xc0000016
   140002212:	mov    r8d,0x1
   140002218:	lea    rcx,[rsp+0x50]
   14000221d:	call   0x140031a80
   140002222:	mov    DWORD PTR [rip+0x4d3a0],0x3        # 0x14004f5cc
   14000222c:	mov    DWORD PTR [rip+0x4d3a2],edi        # 0x14004f5d4
   140002232:	mov    DWORD PTR [rip+0x4d3a8],edi        # 0x14004f5e0
   140002238:	mov    DWORD PTR [rip+0x4d38e],0x5        # 0x14004f5d0
   140002242:	mov    eax,DWORD PTR [rip+0x488c0]        # 0x14004ab08
   140002248:	mov    DWORD PTR [rip+0x4d38e],eax        # 0x14004f5dc
   14000224e:	inc    eax
   140002250:	mov    DWORD PTR [rip+0x488b2],eax        # 0x14004ab08
   140002256:	lea    rdx,[rip+0x4d36b]        # 0x14004f5c8
   14000225d:	mov    rcx,QWORD PTR [rip+0x4d35c]        # 0x14004f5c0
   140002264:	call   QWORD PTR [rip+0x33e0e]        # 0x140036078
   14000226a:	xor    ecx,ecx
   14000226c:	call   QWORD PTR [rip+0x342de]        # 0x140036550
   140002272:	mov    rcx,QWORD PTR [rip+0x4d36f]        # 0x14004f5e8
   140002279:	call   QWORD PTR [rip+0x34239]        # 0x1400364b8
   14000227f:	mov    DWORD PTR [rip+0x4d34f],edi        # 0x14004f5d4
   140002285:	mov    DWORD PTR [rip+0x4d355],edi        # 0x14004f5e0
   14000228b:	mov    eax,DWORD PTR [rip+0x4d33b]        # 0x14004f5cc
   140002291:	cmp    eax,0x2
   140002294:	jne    0x14000229e
   140002296:	mov    DWORD PTR [rip+0x4d334],edi        # 0x14004f5d0
   14000229c:	jmp    0x1400022b2
   14000229e:	mov    DWORD PTR [rip+0x4d328],0x5        # 0x14004f5d0
   1400022a8:	cmp    eax,0x4
   1400022ab:	je     0x1400022c8
   1400022ad:	cmp    eax,0x1
   1400022b0:	je     0x1400022c8
   1400022b2:	mov    eax,DWORD PTR [rip+0x48850]        # 0x14004ab08
   1400022b8:	mov    DWORD PTR [rip+0x4d31e],eax        # 0x14004f5dc
   1400022be:	inc    eax
   1400022c0:	mov    DWORD PTR [rip+0x48842],eax        # 0x14004ab08
   1400022c6:	jmp    0x1400022ce
   1400022c8:	mov    DWORD PTR [rip+0x4d30e],edi        # 0x14004f5dc
   1400022ce:	lea    rdx,[rip+0x4d2f3]        # 0x14004f5c8
   1400022d5:	mov    rcx,QWORD PTR [rip+0x4d2e4]        # 0x14004f5c0
   1400022dc:	call   QWORD PTR [rip+0x33d96]        # 0x140036078
   1400022e2:	nop
   1400022e3:	cmp    QWORD PTR [rsp+0x70],0x10
   1400022e9:	jb     0x1400022f5
   1400022eb:	mov    rcx,QWORD PTR [rsp+0x58]
   1400022f0:	call   0x1400062d4
   1400022f5:	mov    rcx,QWORD PTR [rsp+0x80]
   1400022fd:	xor    rcx,rsp
   140002300:	call   0x1400144f0
   140002305:	mov    rbx,QWORD PTR [rsp+0xa0]
   14000230d:	add    rsp,0x90
   140002314:	pop    rdi
   140002315:	ret    
   140002316:	int3   
   140002317:	int3   
   140002318:	int3   
   140002319:	int3   
   14000231a:	int3   
   14000231b:	int3   
   14000231c:	int3   
   14000231d:	int3   
   14000231e:	int3   
   14000231f:	int3   
   140002320:	mov    QWORD PTR [rcx+0x20],0xf
   140002328:	mov    QWORD PTR [rcx+0x18],0x0
   140002330:	mov    rax,rcx
   140002333:	mov    BYTE PTR [rcx+0x8],0x0
   140002337:	ret    
   140002338:	int3   
   140002339:	int3   
   14000233a:	int3   
   14000233b:	int3   
   14000233c:	int3   
   14000233d:	int3   
   14000233e:	int3   
   14000233f:	int3   
   140002340:	mov    QWORD PTR [rsp+0x8],rbx
   140002345:	push   rdi
   140002346:	sub    rsp,0x20
   14000234a:	mov    QWORD PTR [rcx+0x20],0xf
   140002352:	mov    QWORD PTR [rcx+0x18],0x0
   14000235a:	mov    rbx,rcx
   14000235d:	mov    BYTE PTR [rcx+0x8],0x0
   140002361:	or     rcx,0xffffffffffffffff
   140002365:	xor    eax,eax
   140002367:	mov    rdi,rdx
   14000236a:	repnz scas al,BYTE PTR es:[rdi]
   14000236c:	not    rcx
   14000236f:	lea    r8,[rcx-0x1]
   140002373:	mov    rcx,rbx
   140002376:	call   0x140002a30
   14000237b:	mov    rax,rbx
   14000237e:	mov    rbx,QWORD PTR [rsp+0x30]
   140002383:	add    rsp,0x20
   140002387:	pop    rdi
   140002388:	ret    
   140002389:	int3   
   14000238a:	int3   
   14000238b:	int3   
   14000238c:	int3   
   14000238d:	int3   
   14000238e:	int3   
   14000238f:	int3   
   140002390:	rex push rbx
   140002392:	sub    rsp,0x20
   140002396:	mov    QWORD PTR [rcx+0x20],0xf
   14000239e:	mov    QWORD PTR [rcx+0x18],0x0
   1400023a6:	or     r9,0xffffffffffffffff
   1400023aa:	xor    r8d,r8d
   1400023ad:	mov    rbx,rcx
   1400023b0:	mov    BYTE PTR [rcx+0x8],0x0
   1400023b4:	call   0x140002630
   1400023b9:	mov    rax,rbx
   1400023bc:	add    rsp,0x20
   1400023c0:	pop    rbx
   1400023c1:	ret    
   1400023c2:	int3   
   1400023c3:	int3   
   1400023c4:	int3   
   1400023c5:	int3   
   1400023c6:	int3   
   1400023c7:	int3   
   1400023c8:	int3   
   1400023c9:	int3   
   1400023ca:	int3   
   1400023cb:	int3   
   1400023cc:	int3   
   1400023cd:	int3   
   1400023ce:	int3   
   1400023cf:	int3   
   1400023d0:	cmp    QWORD PTR [rcx+0x20],0x10
   1400023d5:	jb     0x1400023dc
   1400023d7:	mov    rax,QWORD PTR [rcx+0x8]
   1400023db:	ret    
   1400023dc:	lea    rax,[rcx+0x8]
   1400023e0:	ret    
   1400023e1:	int3   
   1400023e2:	int3   
   1400023e3:	int3   
   1400023e4:	int3   
   1400023e5:	int3   
   1400023e6:	int3   
   1400023e7:	int3   
   1400023e8:	int3   
   1400023e9:	int3   
   1400023ea:	int3   
   1400023eb:	int3   
   1400023ec:	int3   
   1400023ed:	int3   
   1400023ee:	int3   
   1400023ef:	int3   
   1400023f0:	mov    rax,QWORD PTR [rcx+0x18]
   1400023f4:	ret    
   1400023f5:	int3   
   1400023f6:	int3   
   1400023f7:	int3   
   1400023f8:	int3   
   1400023f9:	int3   
   1400023fa:	int3   
   1400023fb:	int3   
   1400023fc:	int3   
   1400023fd:	int3   
   1400023fe:	int3   
   1400023ff:	int3   
   140002400:	rex push rbx
   140002402:	sub    rsp,0x30
   140002406:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000240f:	mov    rbx,rcx
   140002412:	mov    ecx,0x8
   140002417:	call   0x140006290
   14000241c:	xor    ecx,ecx
   14000241e:	test   rax,rax
   140002421:	je     0x140002428
   140002423:	mov    QWORD PTR [rax],rbx
   140002426:	jmp    0x14000242b
   140002428:	mov    rax,rcx
   14000242b:	mov    QWORD PTR [rbx],rax
   14000242e:	mov    QWORD PTR [rbx+0x18],rcx
   140002432:	mov    QWORD PTR [rbx+0x20],rcx
   140002436:	mov    QWORD PTR [rbx+0x28],rcx
   14000243a:	mov    rax,rbx
   14000243d:	add    rsp,0x30
   140002441:	pop    rbx
   140002442:	ret    
   140002443:	int3   
   140002444:	int3   
   140002445:	int3   
   140002446:	int3   
   140002447:	int3   
   140002448:	int3   
   140002449:	int3   
   14000244a:	int3   
   14000244b:	int3   
   14000244c:	int3   
   14000244d:	int3   
   14000244e:	int3   
   14000244f:	int3   
   140002450:	mov    QWORD PTR [rsp+0x8],rcx
   140002455:	push   rsi
   140002456:	push   rdi
   140002457:	push   r12
   140002459:	sub    rsp,0x40
   14000245d:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140002466:	mov    QWORD PTR [rsp+0x68],rbx
   14000246b:	mov    rdi,rdx
   14000246e:	mov    rbx,rcx
   140002471:	mov    ecx,0x8
   140002476:	call   0x140006290
   14000247b:	test   rax,rax
   14000247e:	je     0x140002485
   140002480:	mov    QWORD PTR [rax],rbx
   140002483:	jmp    0x140002487
   140002485:	xor    eax,eax
   140002487:	mov    QWORD PTR [rbx],rax
   14000248a:	mov    rcx,QWORD PTR [rdi+0x20]
   14000248e:	sub    rcx,QWORD PTR [rdi+0x18]
   140002492:	movabs rax,0x6666666666666667
   14000249c:	imul   rcx
   14000249f:	sar    rdx,0x4
   1400024a3:	mov    rax,rdx
   1400024a6:	shr    rax,0x3f
   1400024aa:	add    rdx,rax
   1400024ad:	mov    rcx,rbx
   1400024b0:	call   0x1400028e0
   1400024b5:	test   al,al
   1400024b7:	je     0x1400024fd
   1400024b9:	mov    rsi,QWORD PTR [rdi+0x20]
   1400024bd:	cmp    QWORD PTR [rdi+0x18],rsi
   1400024c1:	jbe    0x1400024c8
   1400024c3:	call   0x140014a30
   1400024c8:	mov    r12,QWORD PTR [rdi+0x18]
   1400024cc:	cmp    r12,QWORD PTR [rdi+0x20]
   1400024d0:	jbe    0x1400024d7
   1400024d2:	call   0x140014a30
   1400024d7:	xor    eax,eax
   1400024d9:	lea    r9,[rbx+0x10]
   1400024dd:	mov    BYTE PTR [rsp+0x28],al
   1400024e1:	movzx  eax,BYTE PTR [rsp+0x70]
   1400024e6:	mov    BYTE PTR [rsp+0x20],al
   1400024ea:	mov    r8,QWORD PTR [rbx+0x18]
   1400024ee:	mov    rdx,rsi
   1400024f1:	mov    rcx,r12
   1400024f4:	call   0x1400037e0
   1400024f9:	mov    QWORD PTR [rbx+0x20],rax
   1400024fd:	mov    rax,rbx
   140002500:	mov    rbx,QWORD PTR [rsp+0x68]
   140002505:	add    rsp,0x40
   140002509:	pop    r12
   14000250b:	pop    rdi
   14000250c:	pop    rsi
   14000250d:	ret    
   14000250e:	int3   
   14000250f:	int3   
   140002510:	rex push rbx
   140002512:	sub    rsp,0x20
   140002516:	mov    rbx,rcx
   140002519:	call   0x1400029a0
   14000251e:	mov    rcx,QWORD PTR [rbx]
   140002521:	add    rsp,0x20
   140002525:	pop    rbx
   140002526:	jmp    0x1400062d4
   14000252b:	int3   
   14000252c:	int3   
   14000252d:	int3   
   14000252e:	int3   
   14000252f:	int3   
   140002530:	mov    QWORD PTR [rsp+0x10],rbx
   140002535:	mov    QWORD PTR [rsp+0x18],rsi
   14000253a:	push   rdi
   14000253b:	sub    rsp,0x50
   14000253f:	mov    r8,QWORD PTR [rcx+0x18]
   140002543:	mov    rsi,rdx
   140002546:	mov    rbx,rcx
   140002549:	movabs r10,0x6666666666666667
   140002553:	test   r8,r8
   140002556:	jne    0x14000255d
   140002558:	xor    r9d,r9d
   14000255b:	jmp    0x14000257b
   14000255d:	mov    rcx,QWORD PTR [rcx+0x28]
   140002561:	mov    rax,r10
   140002564:	sub    rcx,r8
   140002567:	imul   rcx
   14000256a:	mov    r9,rdx
   14000256d:	sar    r9,0x4
   140002571:	mov    rcx,r9
   140002574:	shr    rcx,0x3f
   140002578:	add    r9,rcx
   14000257b:	mov    rdi,QWORD PTR [rbx+0x20]
   14000257f:	mov    rax,r10
   140002582:	mov    rcx,rdi
   140002585:	sub    rcx,r8
   140002588:	imul   rcx
   14000258b:	sar    rdx,0x4
   14000258f:	mov    rax,rdx
   140002592:	shr    rax,0x3f
   140002596:	add    rdx,rax
   140002599:	cmp    rdx,r9
   14000259c:	jae    0x1400025d9
   14000259e:	xor    eax,eax
   1400025a0:	lea    r9,[rbx+0x10]
   1400025a4:	mov    r8,rsi
   1400025a7:	mov    BYTE PTR [rsp+0x28],al
   1400025ab:	movzx  eax,BYTE PTR [rsp+0x60]
   1400025b0:	mov    edx,0x1
   1400025b5:	mov    rcx,rdi
   1400025b8:	mov    BYTE PTR [rsp+0x20],al
   1400025bc:	call   0x140003700
   1400025c1:	lea    r11,[rdi+0x28]
   1400025c5:	mov    QWORD PTR [rbx+0x20],r11
   1400025c9:	mov    rbx,QWORD PTR [rsp+0x68]
   1400025ce:	mov    rsi,QWORD PTR [rsp+0x70]
   1400025d3:	add    rsp,0x50
   1400025d7:	pop    rdi
   1400025d8:	ret    
   1400025d9:	cmp    r8,rdi
   1400025dc:	jbe    0x1400025e3
   1400025de:	call   0x140014a30
   1400025e3:	mov    rax,QWORD PTR [rbx]
   1400025e6:	mov    QWORD PTR [rsp+0x38],rdi
   1400025eb:	lea    r8,[rsp+0x30]
   1400025f0:	mov    QWORD PTR [rsp+0x30],rax
   1400025f5:	lea    rdx,[rsp+0x40]
   1400025fa:	mov    r9,rsi
   1400025fd:	movaps xmm0,XMMWORD PTR [rsp+0x30]
   140002602:	mov    rcx,rbx
   140002605:	movdqa XMMWORD PTR [rsp+0x30],xmm0
   14000260b:	call   0x140002780
   140002610:	mov    rbx,QWORD PTR [rsp+0x68]
   140002615:	mov    rsi,QWORD PTR [rsp+0x70]
   14000261a:	add    rsp,0x50
   14000261e:	pop    rdi
   14000261f:	ret    
   140002620:	mov    rcx,QWORD PTR [rcx]
   140002623:	jmp    0x1400062d4
   140002628:	int3   
   140002629:	int3   
   14000262a:	int3   
   14000262b:	int3   
   14000262c:	int3   
   14000262d:	int3   
   14000262e:	int3   
   14000262f:	int3   
   140002630:	mov    QWORD PTR [rsp+0x8],rbx
   140002635:	mov    QWORD PTR [rsp+0x10],rbp
   14000263a:	mov    QWORD PTR [rsp+0x18],rsi
   14000263f:	mov    QWORD PTR [rsp+0x20],rdi
   140002644:	push   r12
   140002646:	sub    rsp,0x20
   14000264a:	mov    r12,r9
   14000264d:	mov    rbp,r8
   140002650:	mov    rsi,rdx
   140002653:	mov    rbx,rcx
   140002656:	cmp    QWORD PTR [rdx+0x18],r8
   14000265a:	jae    0x140002661
   14000265c:	call   0x14003203c
   140002661:	mov    rdi,QWORD PTR [rsi+0x18]
   140002665:	sub    rdi,rbp
   140002668:	cmp    r12,rdi
   14000266b:	cmovb  rdi,r12
   14000266f:	cmp    rbx,rsi
   140002672:	jne    0x140002696
   140002674:	lea    rdx,[rdi+rbp*1]
   140002678:	or     r8,0xffffffffffffffff
   14000267c:	mov    rcx,rbx
   14000267f:	call   0x140002b80
   140002684:	mov    r8,rbp
   140002687:	xor    edx,edx
   140002689:	mov    rcx,rbx
   14000268c:	call   0x140002b80
   140002691:	jmp    0x140002724
   140002696:	cmp    rdi,0xfffffffffffffffe
   14000269a:	jbe    0x1400026a1
   14000269c:	call   0x140031fd4
   1400026a1:	mov    rax,QWORD PTR [rbx+0x20]
   1400026a5:	cmp    rax,rdi
   1400026a8:	jae    0x1400026cb
   1400026aa:	mov    r8,QWORD PTR [rbx+0x18]
   1400026ae:	mov    rdx,rdi
   1400026b1:	mov    rcx,rbx
   1400026b4:	call   0x140003460
   1400026b9:	test   rdi,rdi
   1400026bc:	je     0x140002724
   1400026be:	cmp    QWORD PTR [rsi+0x20],0x10
   1400026c3:	jb     0x1400026ec
   1400026c5:	mov    rax,QWORD PTR [rsi+0x8]
   1400026c9:	jmp    0x1400026f0
   1400026cb:	test   rdi,rdi
   1400026ce:	jne    0x1400026be
   1400026d0:	mov    QWORD PTR [rbx+0x18],rdi
   1400026d4:	cmp    rax,0x10
   1400026d8:	jb     0x1400026e3
   1400026da:	mov    rax,QWORD PTR [rbx+0x8]
   1400026de:	mov    BYTE PTR [rax],dil
   1400026e1:	jmp    0x140002724
   1400026e3:	lea    rax,[rbx+0x8]
   1400026e7:	mov    BYTE PTR [rax],0x0
   1400026ea:	jmp    0x140002724
   1400026ec:	lea    rax,[rsi+0x8]
   1400026f0:	mov    rdx,QWORD PTR [rbx+0x20]
   1400026f4:	lea    rsi,[rbx+0x8]
   1400026f8:	cmp    rdx,0x10
   1400026fc:	jb     0x140002703
   1400026fe:	mov    rcx,QWORD PTR [rsi]
   140002701:	jmp    0x140002706
   140002703:	mov    rcx,rsi
   140002706:	lea    r8,[rax+rbp*1]
   14000270a:	mov    r9,rdi
   14000270d:	call   0x140014510
   140002712:	cmp    QWORD PTR [rbx+0x20],0x10
   140002717:	mov    QWORD PTR [rbx+0x18],rdi
   14000271b:	jb     0x140002720
   14000271d:	mov    rsi,QWORD PTR [rsi]
   140002720:	mov    BYTE PTR [rsi+rdi*1],0x0
   140002724:	mov    rbp,QWORD PTR [rsp+0x38]
   140002729:	mov    rsi,QWORD PTR [rsp+0x40]
   14000272e:	mov    rdi,QWORD PTR [rsp+0x48]
   140002733:	mov    rax,rbx
   140002736:	mov    rbx,QWORD PTR [rsp+0x30]
   14000273b:	add    rsp,0x20
   14000273f:	pop    r12
   140002741:	ret    
   140002742:	int3   
   140002743:	int3   
   140002744:	int3   
   140002745:	int3   
   140002746:	int3   
   140002747:	int3   
   140002748:	int3   
   140002749:	int3   
   14000274a:	int3   
   14000274b:	int3   
   14000274c:	int3   
   14000274d:	int3   
   14000274e:	int3   
   14000274f:	int3   
   140002750:	mov    rdx,QWORD PTR [rcx+0x20]
   140002754:	movabs rax,0x6666666666666667
   14000275e:	sub    rdx,QWORD PTR [rcx+0x18]
   140002762:	imul   rdx
   140002765:	sar    rdx,0x4
   140002769:	mov    rax,rdx
   14000276c:	shr    rax,0x3f
   140002770:	add    rax,rdx
   140002773:	ret    
   140002774:	int3   
   140002775:	int3   
   140002776:	int3   
   140002777:	int3   
   140002778:	int3   
   140002779:	int3   
   14000277a:	int3   
   14000277b:	int3   
   14000277c:	int3   
   14000277d:	int3   
   14000277e:	int3   
   14000277f:	int3   
   140002780:	mov    QWORD PTR [rsp+0x8],rbx
   140002785:	mov    QWORD PTR [rsp+0x10],rbp
   14000278a:	mov    QWORD PTR [rsp+0x18],rsi
   14000278f:	mov    QWORD PTR [rsp+0x20],rdi
   140002794:	push   r12
   140002796:	push   r13
   140002798:	push   r14
   14000279a:	sub    rsp,0x30
   14000279e:	mov    r12,rdx
   1400027a1:	mov    rbx,rcx
   1400027a4:	mov    rcx,QWORD PTR [rcx+0x20]
   1400027a8:	mov    rdi,QWORD PTR [rbx+0x18]
   1400027ac:	movabs r14,0x6666666666666667
   1400027b6:	mov    r10,rcx
   1400027b9:	sub    r10,rdi
   1400027bc:	mov    rax,r14
   1400027bf:	xor    esi,esi
   1400027c1:	mov    r13,r9
   1400027c4:	mov    rbp,r8
   1400027c7:	imul   r10
   1400027ca:	sar    rdx,0x4
   1400027ce:	mov    rax,rdx
   1400027d1:	shr    rax,0x3f
   1400027d5:	add    rdx,rax
   1400027d8:	jne    0x1400027df
   1400027da:	mov    rdi,rsi
   1400027dd:	jmp    0x14000281a
   1400027df:	cmp    rdi,rcx
   1400027e2:	jbe    0x1400027e9
   1400027e4:	call   0x140014a30
   1400027e9:	mov    rcx,QWORD PTR [rbp+0x0]
   1400027ed:	test   rcx,rcx
   1400027f0:	je     0x1400027f7
   1400027f2:	cmp    rcx,QWORD PTR [rbx]
   1400027f5:	je     0x1400027fc
   1400027f7:	call   0x140014a30
   1400027fc:	mov    rcx,QWORD PTR [rbp+0x8]
   140002800:	mov    rax,r14
   140002803:	sub    rcx,rdi
   140002806:	imul   rcx
   140002809:	mov    rdi,rdx
   14000280c:	sar    rdi,0x4
   140002810:	mov    rax,rdi
   140002813:	shr    rax,0x3f
   140002817:	add    rdi,rax
   14000281a:	mov    rax,QWORD PTR [rbp+0x0]
   14000281e:	lea    rcx,[rsp+0x20]
   140002823:	lea    rdx,[rsp+0x20]
   140002828:	mov    QWORD PTR [rcx],rax
   14000282b:	mov    rax,QWORD PTR [rbp+0x8]
   14000282f:	mov    r9,r13
   140002832:	mov    QWORD PTR [rcx+0x8],rax
   140002836:	mov    rcx,rbx
   140002839:	mov    r8d,0x1
   14000283f:	call   0x140002de0
   140002844:	mov    rbp,QWORD PTR [rbx+0x18]
   140002848:	cmp    rbp,QWORD PTR [rbx+0x20]
   14000284c:	jbe    0x140002853
   14000284e:	call   0x140014a30
   140002853:	mov    rbx,QWORD PTR [rbx]
   140002856:	mov    QWORD PTR [rsp+0x28],rbp
   14000285b:	mov    QWORD PTR [rsp+0x20],rbx
   140002860:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140002865:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   14000286b:	test   rbx,rbx
   14000286e:	jne    0x14000287a
   140002870:	call   0x140014a30
   140002875:	mov    r11,rsi
   140002878:	jmp    0x14000287d
   14000287a:	mov    r11,QWORD PTR [rbx]
   14000287d:	lea    rax,[rdi+rdi*4]
   140002881:	lea    rdi,[rbp+rax*8+0x0]
   140002886:	cmp    rdi,QWORD PTR [r11+0x20]
   14000288a:	ja     0x14000289a
   14000288c:	test   rbx,rbx
   14000288f:	je     0x140002894
   140002891:	mov    rsi,QWORD PTR [rbx]
   140002894:	cmp    rdi,QWORD PTR [rsi+0x18]
   140002898:	jae    0x14000289f
   14000289a:	call   0x140014a30
   14000289f:	mov    rbx,QWORD PTR [rsp+0x50]
   1400028a4:	mov    rbp,QWORD PTR [rsp+0x58]
   1400028a9:	mov    rsi,QWORD PTR [rsp+0x60]
   1400028ae:	mov    QWORD PTR [rsp+0x28],rdi
   1400028b3:	mov    rdi,QWORD PTR [rsp+0x68]
   1400028b8:	lea    rcx,[rsp+0x20]
   1400028bd:	mov    rax,QWORD PTR [rcx]
   1400028c0:	mov    QWORD PTR [r12],rax
   1400028c4:	mov    rax,QWORD PTR [rcx+0x8]
   1400028c8:	mov    QWORD PTR [r12+0x8],rax
   1400028cd:	mov    rax,r12
   1400028d0:	add    rsp,0x30
   1400028d4:	pop    r14
   1400028d6:	pop    r13
   1400028d8:	pop    r12
   1400028da:	ret    
   1400028db:	int3   
   1400028dc:	int3   
   1400028dd:	int3   
   1400028de:	int3   
   1400028df:	int3   
   1400028e0:	mov    QWORD PTR [rsp+0x10],rbx
   1400028e5:	push   rdi
   1400028e6:	sub    rsp,0x40
   1400028ea:	xor    r8d,r8d
   1400028ed:	mov    rbx,rdx
   1400028f0:	mov    rdi,rcx
   1400028f3:	mov    QWORD PTR [rcx+0x18],r8
   1400028f7:	mov    QWORD PTR [rcx+0x20],r8
   1400028fb:	mov    QWORD PTR [rcx+0x28],r8
   1400028ff:	test   rdx,rdx
   140002902:	jne    0x140002911
   140002904:	xor    al,al
   140002906:	mov    rbx,QWORD PTR [rsp+0x58]
   14000290b:	add    rsp,0x40
   14000290f:	pop    rdi
   140002910:	ret    
   140002911:	movabs rax,0x666666666666666
   14000291b:	cmp    rdx,rax
   14000291e:	jbe    0x140002926
   140002920:	call   0x140003230
   140002925:	int3   
   140002926:	mov    rcx,rdx
   140002929:	test   rdx,rdx
   14000292c:	jne    0x14000295f
   14000292e:	mov    rcx,r8
   140002931:	lea    rcx,[rcx+rcx*4]
   140002935:	shl    rcx,0x3
   140002939:	call   0x140006290
   14000293e:	lea    rcx,[rbx+rbx*4]
   140002942:	mov    rbx,QWORD PTR [rsp+0x58]
   140002947:	mov    QWORD PTR [rdi+0x18],rax
   14000294b:	mov    QWORD PTR [rdi+0x20],rax
   14000294f:	lea    rax,[rax+rcx*8]
   140002953:	mov    QWORD PTR [rdi+0x28],rax
   140002957:	mov    al,0x1
   140002959:	add    rsp,0x40
   14000295d:	pop    rdi
   14000295e:	ret    
   14000295f:	xor    edx,edx
   140002961:	or     rax,0xffffffffffffffff
   140002965:	div    rbx
   140002968:	cmp    rax,0x28
   14000296c:	jae    0x140002931
   14000296e:	lea    rdx,[rsp+0x50]
   140002973:	lea    rcx,[rsp+0x20]
   140002978:	mov    QWORD PTR [rsp+0x50],r8
   14000297d:	call   0x140014624
   140002982:	lea    r11,[rip+0x39777]        # 0x14003c100
   140002989:	lea    rdx,[rip+0x43890]        # 0x140046220
   140002990:	lea    rcx,[rsp+0x20]
   140002995:	mov    QWORD PTR [rsp+0x20],r11
   14000299a:	call   0x1400158a0
   14000299f:	int3   
   1400029a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400029a5:	mov    QWORD PTR [rsp+0x18],rbp
   1400029aa:	push   rdi
   1400029ab:	sub    rsp,0x20
   1400029af:	mov    rbx,QWORD PTR [rcx+0x18]
   1400029b3:	xor    ebp,ebp
   1400029b5:	mov    rdi,rcx
   1400029b8:	test   rbx,rbx
   1400029bb:	je     0x140002a07
   1400029bd:	mov    QWORD PTR [rsp+0x30],rsi
   1400029c2:	mov    rsi,QWORD PTR [rcx+0x20]
   1400029c6:	cmp    rbx,rsi
   1400029c9:	je     0x1400029f9
   1400029cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400029d0:	cmp    QWORD PTR [rbx+0x20],0x10
   1400029d5:	jb     0x1400029e0
   1400029d7:	mov    rcx,QWORD PTR [rbx+0x8]
   1400029db:	call   0x1400062d4
   1400029e0:	mov    QWORD PTR [rbx+0x20],0xf
   1400029e8:	mov    QWORD PTR [rbx+0x18],rbp
   1400029ec:	mov    BYTE PTR [rbx+0x8],bpl
   1400029f0:	add    rbx,0x28
   1400029f4:	cmp    rbx,rsi
   1400029f7:	jne    0x1400029d0
   1400029f9:	mov    rcx,QWORD PTR [rdi+0x18]
   1400029fd:	call   0x1400062d4
   140002a02:	mov    rsi,QWORD PTR [rsp+0x30]
   140002a07:	mov    rbx,QWORD PTR [rsp+0x38]
   140002a0c:	mov    QWORD PTR [rdi+0x18],rbp
   140002a10:	mov    QWORD PTR [rdi+0x20],rbp
   140002a14:	mov    QWORD PTR [rdi+0x28],rbp
   140002a18:	mov    rbp,QWORD PTR [rsp+0x40]
   140002a1d:	add    rsp,0x20
   140002a21:	pop    rdi
   140002a22:	ret    
   140002a23:	int3   
   140002a24:	int3   
   140002a25:	int3   
   140002a26:	int3   
   140002a27:	int3   
   140002a28:	int3   
   140002a29:	int3   
   140002a2a:	int3   
   140002a2b:	int3   
   140002a2c:	int3   
   140002a2d:	int3   
   140002a2e:	int3   
   140002a2f:	int3   
   140002a30:	mov    QWORD PTR [rsp+0x10],rbx
   140002a35:	mov    QWORD PTR [rsp+0x18],rbp
   140002a3a:	push   rsi
   140002a3b:	sub    rsp,0x20
   140002a3f:	mov    rsi,r8
   140002a42:	mov    rbp,rdx
   140002a45:	mov    rbx,rcx
   140002a48:	test   rdx,rdx
   140002a4b:	je     0x140002ab0
   140002a4d:	mov    r8,QWORD PTR [rcx+0x20]
   140002a51:	cmp    r8,0x10
   140002a55:	jb     0x140002a61
   140002a57:	mov    rax,QWORD PTR [rcx+0x8]
   140002a5b:	lea    r9,[rcx+0x8]
   140002a5f:	jmp    0x140002a68
   140002a61:	lea    r9,[rcx+0x8]
   140002a65:	mov    rax,r9
   140002a68:	cmp    rdx,rax
   140002a6b:	jb     0x140002ab0
   140002a6d:	cmp    r8,0x10
   140002a71:	jb     0x140002a78
   140002a73:	mov    rcx,QWORD PTR [r9]
   140002a76:	jmp    0x140002a7b
   140002a78:	mov    rcx,r9
   140002a7b:	add    rcx,QWORD PTR [rbx+0x18]
   140002a7f:	cmp    rcx,rdx
   140002a82:	jbe    0x140002ab0
   140002a84:	cmp    r8,0x10
   140002a88:	jb     0x140002a8d
   140002a8a:	mov    r9,QWORD PTR [r9]
   140002a8d:	sub    rbp,r9
   140002a90:	mov    rdx,rbx
   140002a93:	mov    rcx,rbx
   140002a96:	mov    r8,rbp
   140002a99:	mov    r9,rsi
   140002a9c:	mov    rbx,QWORD PTR [rsp+0x38]
   140002aa1:	mov    rbp,QWORD PTR [rsp+0x40]
   140002aa6:	add    rsp,0x20
   140002aaa:	pop    rsi
   140002aab:	jmp    0x140002630
   140002ab0:	cmp    rsi,0xfffffffffffffffe
   140002ab4:	jbe    0x140002abb
   140002ab6:	call   0x140031fd4
   140002abb:	mov    rax,QWORD PTR [rbx+0x20]
   140002abf:	cmp    rax,rsi
   140002ac2:	jae    0x140002af5
   140002ac4:	mov    r8,QWORD PTR [rbx+0x18]
   140002ac8:	mov    rdx,rsi
   140002acb:	mov    rcx,rbx
   140002ace:	call   0x140003460
   140002ad3:	test   rsi,rsi
   140002ad6:	je     0x140002b61
   140002adc:	mov    rdx,QWORD PTR [rbx+0x20]
   140002ae0:	mov    QWORD PTR [rsp+0x30],rdi
   140002ae5:	cmp    rdx,0x10
   140002ae9:	jb     0x140002b38
   140002aeb:	mov    rcx,QWORD PTR [rbx+0x8]
   140002aef:	lea    rdi,[rbx+0x8]
   140002af3:	jmp    0x140002b3f
   140002af5:	test   rsi,rsi
   140002af8:	jne    0x140002ad3
   140002afa:	mov    QWORD PTR [rbx+0x18],rsi
   140002afe:	cmp    rax,0x10
   140002b02:	jb     0x140002b1e
   140002b04:	mov    rax,QWORD PTR [rbx+0x8]
   140002b08:	mov    BYTE PTR [rax],sil
   140002b0b:	mov    rax,rbx
   140002b0e:	mov    rbx,QWORD PTR [rsp+0x38]
   140002b13:	mov    rbp,QWORD PTR [rsp+0x40]
   140002b18:	add    rsp,0x20
   140002b1c:	pop    rsi
   140002b1d:	ret    
   140002b1e:	lea    rax,[rbx+0x8]
   140002b22:	mov    BYTE PTR [rax],0x0
   140002b25:	mov    rax,rbx
   140002b28:	mov    rbx,QWORD PTR [rsp+0x38]
   140002b2d:	mov    rbp,QWORD PTR [rsp+0x40]
   140002b32:	add    rsp,0x20
   140002b36:	pop    rsi
   140002b37:	ret    
   140002b38:	lea    rdi,[rbx+0x8]
   140002b3c:	mov    rcx,rdi
   140002b3f:	mov    r9,rsi
   140002b42:	mov    r8,rbp
   140002b45:	call   0x140014510
   140002b4a:	cmp    QWORD PTR [rbx+0x20],0x10
   140002b4f:	mov    QWORD PTR [rbx+0x18],rsi
   140002b53:	jb     0x140002b58
   140002b55:	mov    rdi,QWORD PTR [rdi]
   140002b58:	mov    BYTE PTR [rdi+rsi*1],0x0
   140002b5c:	mov    rdi,QWORD PTR [rsp+0x30]
   140002b61:	mov    rbp,QWORD PTR [rsp+0x40]
   140002b66:	mov    rax,rbx
   140002b69:	mov    rbx,QWORD PTR [rsp+0x38]
   140002b6e:	add    rsp,0x20
   140002b72:	pop    rsi
   140002b73:	ret    
   140002b74:	int3   
   140002b75:	int3   
   140002b76:	int3   
   140002b77:	int3   
   140002b78:	int3   
   140002b79:	int3   
   140002b7a:	int3   
   140002b7b:	int3   
   140002b7c:	int3   
   140002b7d:	int3   
   140002b7e:	int3   
   140002b7f:	int3   
   140002b80:	mov    QWORD PTR [rsp+0x10],rbp
   140002b85:	mov    QWORD PTR [rsp+0x18],rsi
   140002b8a:	push   rdi
   140002b8b:	sub    rsp,0x20
   140002b8f:	mov    rsi,r8
   140002b92:	mov    rbp,rdx
   140002b95:	mov    rdi,rcx
   140002b98:	cmp    QWORD PTR [rcx+0x18],rdx
   140002b9c:	jae    0x140002ba3
   140002b9e:	call   0x14003203c
   140002ba3:	mov    r9,QWORD PTR [rdi+0x18]
   140002ba7:	sub    r9,rbp
   140002baa:	cmp    r9,rsi
   140002bad:	cmovb  rsi,r9
   140002bb1:	test   rsi,rsi
   140002bb4:	je     0x140002c19
   140002bb6:	mov    rdx,QWORD PTR [rdi+0x20]
   140002bba:	mov    QWORD PTR [rsp+0x30],rbx
   140002bbf:	cmp    rdx,0x10
   140002bc3:	jb     0x140002bcf
   140002bc5:	mov    rcx,QWORD PTR [rdi+0x8]
   140002bc9:	lea    rbx,[rdi+0x8]
   140002bcd:	jmp    0x140002bd6
   140002bcf:	lea    rbx,[rdi+0x8]
   140002bd3:	mov    rcx,rbx
   140002bd6:	cmp    rdx,0x10
   140002bda:	jb     0x140002be1
   140002bdc:	mov    rax,QWORD PTR [rbx]
   140002bdf:	jmp    0x140002be4
   140002be1:	mov    rax,rbx
   140002be4:	lea    r8,[rcx+rbp*1]
   140002be8:	lea    rcx,[rax+rbp*1]
   140002bec:	sub    r9,rsi
   140002bef:	add    r8,rsi
   140002bf2:	sub    rdx,rbp
   140002bf5:	call   0x1400145a8
   140002bfa:	mov    r11,QWORD PTR [rdi+0x18]
   140002bfe:	sub    r11,rsi
   140002c01:	cmp    QWORD PTR [rdi+0x20],0x10
   140002c06:	mov    QWORD PTR [rdi+0x18],r11
   140002c0a:	jb     0x140002c0f
   140002c0c:	mov    rbx,QWORD PTR [rbx]
   140002c0f:	mov    BYTE PTR [rbx+r11*1],0x0
   140002c14:	mov    rbx,QWORD PTR [rsp+0x30]
   140002c19:	mov    rbp,QWORD PTR [rsp+0x38]
   140002c1e:	mov    rsi,QWORD PTR [rsp+0x40]
   140002c23:	mov    rax,rdi
   140002c26:	add    rsp,0x20
   140002c2a:	pop    rdi
   140002c2b:	ret    
   140002c2c:	int3   
   140002c2d:	int3   
   140002c2e:	int3   
   140002c2f:	int3   
   140002c30:	cmp    QWORD PTR [rcx+0x20],0x10
   140002c35:	mov    QWORD PTR [rcx+0x18],rdx
   140002c39:	jb     0x140002c44
   140002c3b:	mov    rax,QWORD PTR [rcx+0x8]
   140002c3f:	mov    BYTE PTR [rax+rdx*1],0x0
   140002c43:	ret    
   140002c44:	mov    BYTE PTR [rcx+rdx*1+0x8],0x0
   140002c49:	ret    
   140002c4a:	int3   
   140002c4b:	int3   
   140002c4c:	int3   
   140002c4d:	int3   
   140002c4e:	int3   
   140002c4f:	int3   
   140002c50:	mov    QWORD PTR [rsp+0x10],rbx
   140002c55:	mov    QWORD PTR [rsp+0x18],rbp
   140002c5a:	mov    QWORD PTR [rsp+0x20],rsi
   140002c5f:	push   rdi
   140002c60:	sub    rsp,0x20
   140002c64:	movzx  esi,r8b
   140002c68:	mov    rdi,rdx
   140002c6b:	mov    rbx,rcx
   140002c6e:	cmp    rdx,0xfffffffffffffffe
   140002c72:	jbe    0x140002c79
   140002c74:	call   0x140031fd4
   140002c79:	mov    rax,QWORD PTR [rbx+0x20]
   140002c7d:	xor    ebp,ebp
   140002c7f:	cmp    rax,rdi
   140002c82:	jae    0x140002c95
   140002c84:	mov    r8,QWORD PTR [rbx+0x18]
   140002c88:	mov    rdx,rdi
   140002c8b:	mov    rcx,rbx
   140002c8e:	call   0x140003460
   140002c93:	jmp    0x140002d0e
   140002c95:	test   sil,sil
   140002c98:	je     0x140002cf2
   140002c9a:	cmp    rdi,0x10
   140002c9e:	jae    0x140002cf2
   140002ca0:	mov    rsi,QWORD PTR [rbx+0x18]
   140002ca4:	cmp    rdi,rsi
   140002ca7:	cmovb  rsi,rdi
   140002cab:	cmp    rax,0x10
   140002caf:	jb     0x140002cdf
   140002cb1:	lea    rcx,[rbx+0x8]
   140002cb5:	mov    QWORD PTR [rsp+0x30],r12
   140002cba:	mov    r12,QWORD PTR [rcx]
   140002cbd:	test   rsi,rsi
   140002cc0:	je     0x140002cd2
   140002cc2:	mov    r9,rsi
   140002cc5:	mov    r8,r12
   140002cc8:	mov    edx,0x10
   140002ccd:	call   0x140014510
   140002cd2:	mov    rcx,r12
   140002cd5:	call   0x1400062d4
   140002cda:	mov    r12,QWORD PTR [rsp+0x30]
   140002cdf:	mov    QWORD PTR [rbx+0x20],0xf
   140002ce7:	mov    QWORD PTR [rbx+0x18],rsi
   140002ceb:	mov    BYTE PTR [rbx+rsi*1+0x8],bpl
   140002cf0:	jmp    0x140002d0e
   140002cf2:	test   rdi,rdi
   140002cf5:	jne    0x140002d0e
   140002cf7:	mov    QWORD PTR [rbx+0x18],rbp
   140002cfb:	cmp    rax,0x10
   140002cff:	jb     0x140002d07
   140002d01:	mov    rbx,QWORD PTR [rbx+0x8]
   140002d05:	jmp    0x140002d0b
   140002d07:	add    rbx,0x8
   140002d0b:	mov    BYTE PTR [rbx],bpl
   140002d0e:	mov    rbx,QWORD PTR [rsp+0x38]
   140002d13:	mov    rbp,QWORD PTR [rsp+0x40]
   140002d18:	mov    rsi,QWORD PTR [rsp+0x48]
   140002d1d:	test   rdi,rdi
   140002d20:	setne  al
   140002d23:	add    rsp,0x20
   140002d27:	pop    rdi
   140002d28:	ret    
   140002d29:	int3   
   140002d2a:	int3   
   140002d2b:	int3   
   140002d2c:	int3   
   140002d2d:	int3   
   140002d2e:	int3   
   140002d2f:	int3   
   140002d30:	mov    QWORD PTR [rsp+0x8],rbx
   140002d35:	mov    QWORD PTR [rsp+0x10],rsi
   140002d3a:	push   rdi
   140002d3b:	sub    rsp,0x20
   140002d3f:	mov    rsi,QWORD PTR [rcx+0x18]
   140002d43:	mov    rbx,rdx
   140002d46:	mov    rdi,rcx
   140002d49:	mov    QWORD PTR [rdx],0x0
   140002d50:	cmp    rsi,QWORD PTR [rcx+0x20]
   140002d54:	jbe    0x140002d5b
   140002d56:	call   0x140014a30
   140002d5b:	mov    rax,QWORD PTR [rdi]
   140002d5e:	mov    QWORD PTR [rbx+0x8],rsi
   140002d62:	mov    rsi,QWORD PTR [rsp+0x38]
   140002d67:	mov    QWORD PTR [rbx],rax
   140002d6a:	mov    rax,rbx
   140002d6d:	mov    rbx,QWORD PTR [rsp+0x30]
   140002d72:	add    rsp,0x20
   140002d76:	pop    rdi
   140002d77:	ret    
   140002d78:	int3   
   140002d79:	int3   
   140002d7a:	int3   
   140002d7b:	int3   
   140002d7c:	int3   
   140002d7d:	int3   
   140002d7e:	int3   
   140002d7f:	int3   
   140002d80:	cmp    rdx,r8
   140002d83:	je     0x140002dda
   140002d85:	push   rdi
   140002d86:	sub    rsp,0x20
   140002d8a:	mov    QWORD PTR [rsp+0x30],rbx
   140002d8f:	mov    QWORD PTR [rsp+0x38],rsi
   140002d94:	mov    rdi,r8
   140002d97:	xor    esi,esi
   140002d99:	lea    rbx,[rdx+0x20]
   140002d9d:	nop    DWORD PTR [rax]
   140002da0:	cmp    QWORD PTR [rbx],0x10
   140002da4:	jb     0x140002daf
   140002da6:	mov    rcx,QWORD PTR [rbx-0x18]
   140002daa:	call   0x1400062d4
   140002daf:	mov    QWORD PTR [rbx],0xf
   140002db6:	mov    QWORD PTR [rbx-0x8],rsi
   140002dba:	mov    BYTE PTR [rbx-0x18],sil
   140002dbe:	add    rbx,0x28
   140002dc2:	lea    rax,[rbx-0x20]
   140002dc6:	cmp    rax,rdi
   140002dc9:	jne    0x140002da0
   140002dcb:	mov    rsi,QWORD PTR [rsp+0x38]
   140002dd0:	mov    rbx,QWORD PTR [rsp+0x30]
   140002dd5:	add    rsp,0x20
   140002dd9:	pop    rdi
   140002dda:	repz ret 
   140002ddc:	int3   
   140002ddd:	int3   
   140002dde:	int3   
   140002ddf:	int3   
   140002de0:	rex push rbx
   140002de2:	push   rsi
   140002de3:	push   rdi
   140002de4:	push   r12
   140002de6:	push   r13
   140002de8:	push   r14
   140002dea:	push   r15
   140002dec:	sub    rsp,0xa0
   140002df3:	mov    QWORD PTR [rsp+0x60],0xfffffffffffffffe
   140002dfc:	mov    rax,QWORD PTR [rip+0x45fbd]        # 0x140048dc0
   140002e03:	xor    rax,rsp
   140002e06:	mov    QWORD PTR [rsp+0x90],rax
   140002e0e:	mov    r10,r9
   140002e11:	mov    QWORD PTR [rsp+0x58],r9
   140002e16:	mov    rsi,r8
   140002e19:	mov    r13,rdx
   140002e1c:	mov    r12,rcx
   140002e1f:	mov    QWORD PTR [rsp+0x40],rcx
   140002e24:	mov    QWORD PTR [rsp+0x38],rdx
   140002e29:	mov    QWORD PTR [rsp+0x50],r8
   140002e2e:	mov    r9,QWORD PTR [rcx+0x18]
   140002e32:	test   r9,r9
   140002e35:	jne    0x140002e49
   140002e37:	xor    r15d,r15d
   140002e3a:	mov    rbx,r15
   140002e3d:	movabs r14,0x6666666666666667
   140002e47:	jmp    0x140002e74
   140002e49:	mov    rcx,QWORD PTR [rcx+0x28]
   140002e4d:	sub    rcx,r9
   140002e50:	movabs r14,0x6666666666666667
   140002e5a:	mov    rax,r14
   140002e5d:	imul   rcx
   140002e60:	mov    rbx,rdx
   140002e63:	sar    rbx,0x4
   140002e67:	mov    rax,rbx
   140002e6a:	shr    rax,0x3f
   140002e6e:	add    rbx,rax
   140002e71:	xor    r15d,r15d
   140002e74:	test   r8,r8
   140002e77:	je     0x140003202
   140002e7d:	mov    r8,QWORD PTR [r12+0x20]
   140002e82:	mov    rcx,r8
   140002e85:	sub    rcx,r9
   140002e88:	mov    rax,r14
   140002e8b:	imul   rcx
   140002e8e:	sar    rdx,0x4
   140002e92:	mov    rax,rdx
   140002e95:	shr    rax,0x3f
   140002e99:	add    rdx,rax
   140002e9c:	movabs rcx,0x666666666666666
   140002ea6:	mov    rax,rcx
   140002ea9:	sub    rax,rdx
   140002eac:	cmp    rax,rsi
   140002eaf:	jae    0x140002eb7
   140002eb1:	call   0x140003230
   140002eb6:	int3   
   140002eb7:	lea    r9,[rdx+rsi*1]
   140002ebb:	cmp    rbx,r9
   140002ebe:	jae    0x140003018
   140002ec4:	mov    rax,rbx
   140002ec7:	shr    rax,1
   140002eca:	sub    rcx,rax
   140002ecd:	cmp    rcx,rbx
   140002ed0:	jae    0x140002ed7
   140002ed2:	mov    rbx,r15
   140002ed5:	jmp    0x140002eda
   140002ed7:	add    rbx,rax
   140002eda:	cmp    rbx,r9
   140002edd:	cmovb  rbx,r9
   140002ee1:	mov    rdx,rbx
   140002ee4:	lea    rcx,[r12+0x10]
   140002ee9:	call   0x1400032e0
   140002eee:	mov    rdi,rax
   140002ef1:	mov    QWORD PTR [rsp+0x38],rax
   140002ef6:	mov    rcx,QWORD PTR [r13+0x8]
   140002efa:	sub    rcx,QWORD PTR [r12+0x18]
   140002eff:	mov    rax,r14
   140002f02:	imul   rcx
   140002f05:	mov    rcx,rdx
   140002f08:	sar    rcx,0x4
   140002f0c:	mov    rax,rcx
   140002f0f:	shr    rax,0x3f
   140002f13:	add    rcx,rax
   140002f16:	mov    QWORD PTR [rsp+0x48],rcx
   140002f1b:	mov    DWORD PTR [rsp+0x34],r15d
   140002f20:	lea    rax,[rcx+rcx*4]
   140002f24:	lea    rcx,[rdi+rax*8]
   140002f28:	xor    eax,eax
   140002f2a:	mov    BYTE PTR [rsp+0x28],al
   140002f2e:	movzx  eax,BYTE PTR [rsp+0x30]
   140002f33:	mov    BYTE PTR [rsp+0x20],al
   140002f37:	lea    r9,[r12+0x10]
   140002f3c:	mov    r8,QWORD PTR [rsp+0x58]
   140002f41:	mov    rdx,rsi
   140002f44:	call   0x140003700
   140002f49:	mov    DWORD PTR [rsp+0x34],0x1
   140002f51:	xor    eax,eax
   140002f53:	mov    BYTE PTR [rsp+0x28],al
   140002f57:	movzx  eax,BYTE PTR [rsp+0x30]
   140002f5c:	mov    BYTE PTR [rsp+0x20],al
   140002f60:	lea    r9,[r12+0x10]
   140002f65:	mov    r8,rdi
   140002f68:	mov    rdx,QWORD PTR [r13+0x8]
   140002f6c:	mov    rcx,QWORD PTR [r12+0x18]
   140002f71:	call   0x140003870
   140002f76:	mov    DWORD PTR [rsp+0x34],0x2
   140002f7e:	mov    rax,QWORD PTR [rsp+0x48]
   140002f83:	add    rax,rsi
   140002f86:	lea    r8,[rax+rax*4]
   140002f8a:	lea    r8,[rdi+r8*8]
   140002f8e:	xor    eax,eax
   140002f90:	mov    BYTE PTR [rsp+0x28],al
   140002f94:	movzx  eax,BYTE PTR [rsp+0x30]
   140002f99:	mov    BYTE PTR [rsp+0x20],al
   140002f9d:	lea    r9,[r12+0x10]
   140002fa2:	mov    rdx,QWORD PTR [r12+0x20]
   140002fa7:	mov    rcx,QWORD PTR [r13+0x8]
   140002fab:	call   0x140003870
   140002fb0:	nop
   140002fb1:	mov    r9,QWORD PTR [r12+0x18]
   140002fb6:	mov    rcx,QWORD PTR [r12+0x20]
   140002fbb:	sub    rcx,r9
   140002fbe:	mov    rax,r14
   140002fc1:	imul   rcx
   140002fc4:	sar    rdx,0x4
   140002fc8:	mov    rax,rdx
   140002fcb:	shr    rax,0x3f
   140002fcf:	add    rdx,rax
   140002fd2:	add    rsi,rdx
   140002fd5:	test   r9,r9
   140002fd8:	je     0x140002ff4
   140002fda:	mov    r8,QWORD PTR [r12+0x20]
   140002fdf:	mov    rdx,r9
   140002fe2:	mov    rcx,r12
   140002fe5:	call   0x140002d80
   140002fea:	mov    rcx,QWORD PTR [r12+0x18]
   140002fef:	call   0x1400062d4
   140002ff4:	lea    rax,[rbx+rbx*4]
   140002ff8:	lea    rcx,[rdi+rax*8]
   140002ffc:	mov    QWORD PTR [r12+0x28],rcx
   140003001:	lea    rax,[rsi+rsi*4]
   140003005:	lea    rcx,[rdi+rax*8]
   140003009:	mov    QWORD PTR [r12+0x20],rcx
   14000300e:	mov    QWORD PTR [r12+0x18],rdi
   140003013:	jmp    0x140003202
   140003018:	sub    r8,QWORD PTR [r13+0x8]
   14000301c:	mov    rax,r14
   14000301f:	imul   r8
   140003022:	sar    rdx,0x4
   140003026:	mov    rax,rdx
   140003029:	shr    rax,0x3f
   14000302d:	add    rdx,rax
   140003030:	cmp    rdx,rsi
   140003033:	jae    0x14000313b
   140003039:	mov    QWORD PTR [rsp+0x88],0xf
   140003045:	mov    QWORD PTR [rsp+0x80],r15
   14000304d:	mov    BYTE PTR [rsp+0x70],0x0
   140003052:	or     r9,0xffffffffffffffff
   140003056:	xor    r8d,r8d
   140003059:	mov    rdx,r10
   14000305c:	lea    rcx,[rsp+0x68]
   140003061:	call   0x140002630
   140003066:	nop
   140003067:	lea    rax,[rsi+rsi*4]
   14000306b:	lea    rbx,[rax*8+0x0]
   140003073:	mov    rcx,QWORD PTR [r13+0x8]
   140003077:	lea    r8,[rcx+rbx*1]
   14000307b:	xor    eax,eax
   14000307d:	mov    BYTE PTR [rsp+0x28],al
   140003081:	movzx  eax,BYTE PTR [rsp+0x30]
   140003086:	mov    BYTE PTR [rsp+0x20],al
   14000308a:	lea    r9,[r12+0x10]
   14000308f:	mov    rdx,QWORD PTR [r12+0x20]
   140003094:	call   0x140003870
   140003099:	nop
   14000309a:	mov    r10,QWORD PTR [r12+0x20]
   14000309f:	mov    rcx,r10
   1400030a2:	sub    rcx,QWORD PTR [r13+0x8]
   1400030a6:	mov    rax,r14
   1400030a9:	imul   rcx
   1400030ac:	sar    rdx,0x4
   1400030b0:	mov    rax,rdx
   1400030b3:	shr    rax,0x3f
   1400030b7:	add    rdx,rax
   1400030ba:	sub    rsi,rdx
   1400030bd:	xor    eax,eax
   1400030bf:	mov    BYTE PTR [rsp+0x28],al
   1400030c3:	movzx  eax,BYTE PTR [rsp+0x30]
   1400030c8:	mov    BYTE PTR [rsp+0x20],al
   1400030cc:	lea    r9,[r12+0x10]
   1400030d1:	lea    r8,[rsp+0x68]
   1400030d6:	mov    rdx,rsi
   1400030d9:	mov    rcx,r10
   1400030dc:	call   0x140003700
   1400030e1:	nop
   1400030e2:	add    QWORD PTR [r12+0x20],rbx
   1400030e7:	mov    rdi,QWORD PTR [r12+0x20]
   1400030ec:	sub    rdi,rbx
   1400030ef:	mov    rbx,QWORD PTR [r13+0x8]
   1400030f3:	cmp    rbx,rdi
   1400030f6:	je     0x14000311d
   1400030f8:	nop    DWORD PTR [rax+rax*1+0x0]
   140003100:	or     r9,0xffffffffffffffff
   140003104:	xor    r8d,r8d
   140003107:	lea    rdx,[rsp+0x68]
   14000310c:	mov    rcx,rbx
   14000310f:	call   0x140002630
   140003114:	add    rbx,0x28
   140003118:	cmp    rbx,rdi
   14000311b:	jne    0x140003100
   14000311d:	cmp    QWORD PTR [rsp+0x88],0x10
   140003126:	jb     0x140003202
   14000312c:	mov    rcx,QWORD PTR [rsp+0x70]
   140003131:	call   0x1400062d4
   140003136:	jmp    0x140003202
   14000313b:	mov    QWORD PTR [rsp+0x88],0xf
   140003147:	mov    QWORD PTR [rsp+0x80],r15
   14000314f:	mov    BYTE PTR [rsp+0x70],0x0
   140003154:	or     r9,0xffffffffffffffff
   140003158:	xor    r8d,r8d
   14000315b:	mov    rdx,r10
   14000315e:	lea    rcx,[rsp+0x68]
   140003163:	call   0x140002630
   140003168:	nop
   140003169:	mov    rdi,QWORD PTR [r12+0x20]
   14000316e:	lea    rax,[rsi+rsi*4]
   140003172:	lea    rsi,[rax*8+0x0]
   14000317a:	mov    rbx,rdi
   14000317d:	sub    rbx,rsi
   140003180:	xor    eax,eax
   140003182:	lea    r9,[r12+0x10]
   140003187:	mov    BYTE PTR [rsp+0x28],al
   14000318b:	movzx  eax,BYTE PTR [rsp+0x30]
   140003190:	mov    BYTE PTR [rsp+0x20],al
   140003194:	mov    r8,rdi
   140003197:	mov    rdx,rdi
   14000319a:	mov    rcx,rbx
   14000319d:	call   0x140003870
   1400031a2:	mov    QWORD PTR [r12+0x20],rax
   1400031a7:	mov    r8,rdi
   1400031aa:	mov    rdx,rbx
   1400031ad:	mov    rcx,QWORD PTR [r13+0x8]
   1400031b1:	call   0x140003660
   1400031b6:	mov    rbx,QWORD PTR [r13+0x8]
   1400031ba:	lea    rdi,[rbx+rsi*1]
   1400031be:	cmp    rbx,rdi
   1400031c1:	je     0x1400031ed
   1400031c3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400031d0:	or     r9,0xffffffffffffffff
   1400031d4:	xor    r8d,r8d
   1400031d7:	lea    rdx,[rsp+0x68]
   1400031dc:	mov    rcx,rbx
   1400031df:	call   0x140002630
   1400031e4:	add    rbx,0x28
   1400031e8:	cmp    rbx,rdi
   1400031eb:	jne    0x1400031d0
   1400031ed:	cmp    QWORD PTR [rsp+0x88],0x10
   1400031f6:	jb     0x140003202
   1400031f8:	mov    rcx,QWORD PTR [rsp+0x70]
   1400031fd:	call   0x1400062d4
   140003202:	mov    rcx,QWORD PTR [rsp+0x90]
   14000320a:	xor    rcx,rsp
   14000320d:	call   0x1400144f0
   140003212:	add    rsp,0xa0
   140003219:	pop    r15
   14000321b:	pop    r14
   14000321d:	pop    r13
   14000321f:	pop    r12
   140003221:	pop    rdi
   140003222:	pop    rsi
   140003223:	pop    rbx
   140003224:	ret    
   140003225:	int3   
   140003226:	int3   
   140003227:	int3   
   140003228:	int3   
   140003229:	int3   
   14000322a:	int3   
   14000322b:	int3   
   14000322c:	int3   
   14000322d:	int3   
   14000322e:	int3   
   14000322f:	int3   
   140003230:	sub    rsp,0x98
   140003237:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003240:	mov    QWORD PTR [rsp+0x48],0xf
   140003249:	mov    QWORD PTR [rsp+0x40],0x0
   140003252:	mov    BYTE PTR [rsp+0x30],0x0
   140003257:	mov    r8d,0x12
   14000325d:	lea    rdx,[rip+0x3a5e4]        # 0x14003d848
   140003264:	lea    rcx,[rsp+0x28]
   140003269:	call   0x140002a30
   14000326e:	nop
   14000326f:	lea    rcx,[rsp+0x50]
   140003274:	call   0x14001460c
   140003279:	nop
   14000327a:	lea    rax,[rip+0x3a407]        # 0x14003d688
   140003281:	mov    QWORD PTR [rsp+0x50],rax
   140003286:	mov    QWORD PTR [rsp+0x88],0xf
   140003292:	mov    QWORD PTR [rsp+0x80],0x0
   14000329e:	mov    BYTE PTR [rsp+0x70],0x0
   1400032a3:	or     r9,0xffffffffffffffff
   1400032a7:	xor    r8d,r8d
   1400032aa:	lea    rdx,[rsp+0x28]
   1400032af:	lea    rcx,[rsp+0x68]
   1400032b4:	call   0x140002630
   1400032b9:	nop
   1400032ba:	lea    rax,[rip+0x3a3df]        # 0x14003d6a0
   1400032c1:	mov    QWORD PTR [rsp+0x50],rax
   1400032c6:	lea    rdx,[rip+0x42ef3]        # 0x1400461c0
   1400032cd:	lea    rcx,[rsp+0x50]
   1400032d2:	call   0x1400158a0
   1400032d7:	int3   
   1400032d8:	int3   
   1400032d9:	int3   
   1400032da:	int3   
   1400032db:	int3   
   1400032dc:	int3   
   1400032dd:	int3   
   1400032de:	int3   
   1400032df:	int3   
   1400032e0:	sub    rsp,0x48
   1400032e4:	mov    r8,rdx
   1400032e7:	test   rdx,rdx
   1400032ea:	jne    0x1400032fe
   1400032ec:	lea    rcx,[r8+r8*4]
   1400032f0:	shl    rcx,0x3
   1400032f4:	call   0x140006290
   1400032f9:	add    rsp,0x48
   1400032fd:	ret    
   1400032fe:	xor    edx,edx
   140003300:	or     rax,0xffffffffffffffff
   140003304:	div    r8
   140003307:	cmp    rax,0x28
   14000330b:	jae    0x1400032ec
   14000330d:	xor    r8d,r8d
   140003310:	lea    rdx,[rsp+0x58]
   140003315:	lea    rcx,[rsp+0x20]
   14000331a:	mov    QWORD PTR [rsp+0x58],r8
   14000331f:	call   0x140014624
   140003324:	lea    r11,[rip+0x38dd5]        # 0x14003c100
   14000332b:	lea    rdx,[rip+0x42eee]        # 0x140046220
   140003332:	lea    rcx,[rsp+0x20]
   140003337:	mov    QWORD PTR [rsp+0x20],r11
   14000333c:	call   0x1400158a0
   140003341:	int3   
   140003342:	int3   
   140003343:	int3   
   140003344:	int3   
   140003345:	int3   
   140003346:	int3   
   140003347:	int3   
   140003348:	int3   
   140003349:	int3   
   14000334a:	int3   
   14000334b:	int3   
   14000334c:	int3   
   14000334d:	int3   
   14000334e:	int3   
   14000334f:	int3   
   140003350:	mov    QWORD PTR [rsp+0x8],rbx
   140003355:	mov    QWORD PTR [rsp+0x10],rbp
   14000335a:	mov    QWORD PTR [rsp+0x18],rsi
   14000335f:	push   rdi
   140003360:	sub    rsp,0x30
   140003364:	mov    rax,QWORD PTR [rcx]
   140003367:	mov    rbp,rdx
   14000336a:	lea    rdx,[rsp+0x20]
   14000336f:	mov    QWORD PTR [rdx],rax
   140003372:	mov    rax,QWORD PTR [rcx+0x8]
   140003376:	xor    edi,edi
   140003378:	mov    QWORD PTR [rdx+0x8],rax
   14000337c:	mov    rbx,QWORD PTR [rsp+0x20]
   140003381:	mov    rsi,r8
   140003384:	test   rbx,rbx
   140003387:	jne    0x140003393
   140003389:	call   0x140014a30
   14000338e:	mov    r11,rdi
   140003391:	jmp    0x140003396
   140003393:	mov    r11,QWORD PTR [rbx]
   140003396:	mov    rax,QWORD PTR [rsp+0x28]
   14000339b:	lea    rcx,[rsi+rsi*4]
   14000339f:	lea    rsi,[rax+rcx*8]
   1400033a3:	cmp    rsi,QWORD PTR [r11+0x20]
   1400033a7:	ja     0x1400033b7
   1400033a9:	test   rbx,rbx
   1400033ac:	je     0x1400033b1
   1400033ae:	mov    rdi,QWORD PTR [rbx]
   1400033b1:	cmp    rsi,QWORD PTR [rdi+0x18]
   1400033b5:	jae    0x1400033bc
   1400033b7:	call   0x140014a30
   1400033bc:	mov    rbx,QWORD PTR [rsp+0x40]
   1400033c1:	mov    QWORD PTR [rsp+0x28],rsi
   1400033c6:	mov    rsi,QWORD PTR [rsp+0x50]
   1400033cb:	lea    rcx,[rsp+0x20]
   1400033d0:	mov    rax,QWORD PTR [rcx]
   1400033d3:	mov    QWORD PTR [rbp+0x0],rax
   1400033d7:	mov    rax,QWORD PTR [rcx+0x8]
   1400033db:	mov    QWORD PTR [rbp+0x8],rax
   1400033df:	mov    rax,rbp
   1400033e2:	mov    rbp,QWORD PTR [rsp+0x48]
   1400033e7:	add    rsp,0x30
   1400033eb:	pop    rdi
   1400033ec:	ret    
   1400033ed:	int3   
   1400033ee:	int3   
   1400033ef:	int3   
   1400033f0:	mov    QWORD PTR [rsp+0x8],rcx
   1400033f5:	push   rdi
   1400033f6:	sub    rsp,0x30
   1400033fa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140003403:	mov    QWORD PTR [rsp+0x48],rbx
   140003408:	mov    rbx,rdx
   14000340b:	mov    rdi,rcx
   14000340e:	call   0x140014698
   140003413:	nop
   140003414:	lea    rax,[rip+0x3a26d]        # 0x14003d688
   14000341b:	mov    QWORD PTR [rdi],rax
   14000341e:	lea    rdx,[rbx+0x18]
   140003422:	lea    rcx,[rdi+0x18]
   140003426:	mov    QWORD PTR [rcx+0x20],0xf
   14000342e:	mov    QWORD PTR [rcx+0x18],0x0
   140003436:	mov    BYTE PTR [rcx+0x8],0x0
   14000343a:	or     r9,0xffffffffffffffff
   14000343e:	xor    r8d,r8d
   140003441:	call   0x140002630
   140003446:	nop
   140003447:	lea    rax,[rip+0x3a252]        # 0x14003d6a0
   14000344e:	mov    QWORD PTR [rdi],rax
   140003451:	mov    rax,rdi
   140003454:	mov    rbx,QWORD PTR [rsp+0x48]
   140003459:	add    rsp,0x30
   14000345d:	pop    rdi
   14000345e:	ret    
   14000345f:	int3   
   140003460:	mov    QWORD PTR [rsp+0x18],r8
   140003465:	mov    QWORD PTR [rsp+0x10],rdx
   14000346a:	mov    QWORD PTR [rsp+0x8],rcx
   14000346f:	push   rbx
   140003470:	push   rsi
   140003471:	push   rdi
   140003472:	push   r12
   140003474:	sub    rsp,0x58
   140003478:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003481:	mov    rsi,r8
   140003484:	mov    rbx,rcx
   140003487:	mov    rdi,rdx
   14000348a:	or     rdi,0xf
   14000348e:	cmp    rdi,0xfffffffffffffffe
   140003492:	jbe    0x140003499
   140003494:	mov    rdi,rdx
   140003497:	jmp    0x1400034cb
   140003499:	mov    r8,QWORD PTR [rcx+0x20]
   14000349d:	mov    rcx,r8
   1400034a0:	shr    rcx,1
   1400034a3:	movabs rax,0xaaaaaaaaaaaaaaab
   1400034ad:	mul    rdi
   1400034b0:	shr    rdx,1
   1400034b3:	cmp    rdx,rcx
   1400034b6:	jae    0x1400034cb
   1400034b8:	mov    rax,0xfffffffffffffffe
   1400034bf:	sub    rax,rcx
   1400034c2:	cmp    r8,rax
   1400034c5:	ja     0x1400034cb
   1400034c7:	lea    rdi,[rcx+r8*1]
   1400034cb:	lea    rcx,[rdi+0x1]
   1400034cf:	test   rcx,rcx
   1400034d2:	je     0x14000351c
   1400034d4:	xor    edx,edx
   1400034d6:	or     rax,0xffffffffffffffff
   1400034da:	div    rcx
   1400034dd:	cmp    rax,0x1
   1400034e1:	jae    0x14000351c
   1400034e3:	xor    ecx,ecx
   1400034e5:	mov    QWORD PTR [rsp+0x98],rcx
   1400034ed:	lea    rdx,[rsp+0x98]
   1400034f5:	lea    rcx,[rsp+0x30]
   1400034fa:	call   0x140014624
   1400034ff:	lea    rax,[rip+0x38bfa]        # 0x14003c100
   140003506:	mov    QWORD PTR [rsp+0x30],rax
   14000350b:	lea    rdx,[rip+0x42d0e]        # 0x140046220
   140003512:	lea    rcx,[rsp+0x30]
   140003517:	call   0x1400158a0
   14000351c:	call   0x140006290
   140003521:	mov    r12,rax
   140003524:	jmp    0x140003543
   140003526:	mov    rbx,QWORD PTR [rsp+0x80]
   14000352e:	mov    rsi,QWORD PTR [rsp+0x90]
   140003536:	mov    rdi,QWORD PTR [rsp+0x88]
   14000353e:	mov    r12,QWORD PTR [rsp+0x20]
   140003543:	test   rsi,rsi
   140003546:	je     0x140003568
   140003548:	cmp    QWORD PTR [rbx+0x20],0x10
   14000354d:	jb     0x140003555
   14000354f:	mov    r8,QWORD PTR [rbx+0x8]
   140003553:	jmp    0x140003559
   140003555:	lea    r8,[rbx+0x8]
   140003559:	lea    rdx,[rdi+0x1]
   14000355d:	mov    r9,rsi
   140003560:	mov    rcx,r12
   140003563:	call   0x140014510
   140003568:	cmp    QWORD PTR [rbx+0x20],0x10
   14000356d:	jb     0x140003578
   14000356f:	mov    rcx,QWORD PTR [rbx+0x8]
   140003573:	call   0x1400062d4
   140003578:	lea    rax,[rbx+0x8]
   14000357c:	mov    BYTE PTR [rax],0x0
   14000357f:	mov    QWORD PTR [rax],r12
   140003582:	mov    QWORD PTR [rbx+0x20],rdi
   140003586:	mov    QWORD PTR [rbx+0x18],rsi
   14000358a:	cmp    rdi,0x10
   14000358e:	cmovae rax,r12
   140003592:	mov    BYTE PTR [rax+rsi*1],0x0
   140003596:	add    rsp,0x58
   14000359a:	pop    r12
   14000359c:	pop    rdi
   14000359d:	pop    rsi
   14000359e:	pop    rbx
   14000359f:	ret    
   1400035a0:	test   rdx,rdx
   1400035a3:	je     0x1400035d9
   1400035a5:	mov    rax,QWORD PTR [rcx+0x20]
   1400035a9:	lea    r8,[rcx+0x8]
   1400035ad:	cmp    rax,0x10
   1400035b1:	jb     0x1400035b8
   1400035b3:	mov    r9,QWORD PTR [r8]
   1400035b6:	jmp    0x1400035bb
   1400035b8:	mov    r9,r8
   1400035bb:	cmp    rdx,r9
   1400035be:	jb     0x1400035d9
   1400035c0:	cmp    rax,0x10
   1400035c4:	jb     0x1400035c9
   1400035c6:	mov    r8,QWORD PTR [r8]
   1400035c9:	mov    rax,QWORD PTR [rcx+0x18]
   1400035cd:	lea    rcx,[r8+rax*1]
   1400035d1:	cmp    rcx,rdx
   1400035d4:	jbe    0x1400035d9
   1400035d6:	mov    al,0x1
   1400035d8:	ret    
   1400035d9:	xor    al,al
   1400035db:	ret    
   1400035dc:	int3   
   1400035dd:	int3   
   1400035de:	int3   
   1400035df:	int3   
   1400035e0:	sub    rsp,0x48
   1400035e4:	mov    r8,rdx
   1400035e7:	test   rdx,rdx
   1400035ea:	jne    0x1400035f9
   1400035ec:	mov    rcx,r8
   1400035ef:	call   0x140006290
   1400035f4:	add    rsp,0x48
   1400035f8:	ret    
   1400035f9:	xor    edx,edx
   1400035fb:	or     rax,0xffffffffffffffff
   1400035ff:	div    r8
   140003602:	cmp    rax,0x1
   140003606:	jae    0x1400035ec
   140003608:	xor    r8d,r8d
   14000360b:	lea    rdx,[rsp+0x58]
   140003610:	lea    rcx,[rsp+0x20]
   140003615:	mov    QWORD PTR [rsp+0x58],r8
   14000361a:	call   0x140014624
   14000361f:	lea    r11,[rip+0x38ada]        # 0x14003c100
   140003626:	lea    rdx,[rip+0x42bf3]        # 0x140046220
   14000362d:	lea    rcx,[rsp+0x20]
   140003632:	mov    QWORD PTR [rsp+0x20],r11
   140003637:	call   0x1400158a0
   14000363c:	int3   
   14000363d:	int3   
   14000363e:	int3   
   14000363f:	int3   
   140003640:	rex push rbx
   140003642:	sub    rsp,0x20
   140003646:	mov    rbx,rcx
   140003649:	call   0x140014510
   14000364e:	mov    rax,rbx
   140003651:	add    rsp,0x20
   140003655:	pop    rbx
   140003656:	ret    
   140003657:	int3   
   140003658:	int3   
   140003659:	int3   
   14000365a:	int3   
   14000365b:	int3   
   14000365c:	int3   
   14000365d:	int3   
   14000365e:	int3   
   14000365f:	int3   
   140003660:	mov    QWORD PTR [rsp+0x10],rbx
   140003665:	mov    QWORD PTR [rsp+0x18],rsi
   14000366a:	push   rdi
   14000366b:	sub    rsp,0x30
   14000366f:	movzx  r9d,BYTE PTR [rsp+0x40]
   140003675:	xor    eax,eax
   140003677:	mov    rsi,r8
   14000367a:	mov    BYTE PTR [rsp+0x28],al
   14000367e:	movzx  eax,BYTE PTR [rsp+0x40]
   140003683:	mov    rdi,rdx
   140003686:	mov    BYTE PTR [rsp+0x20],al
   14000368a:	mov    rbx,rcx
   14000368d:	call   0x1400039b0
   140003692:	sub    rdi,rbx
   140003695:	mov    rbx,QWORD PTR [rsp+0x48]
   14000369a:	movabs rax,0x6666666666666667
   1400036a4:	imul   rdi
   1400036a7:	sar    rdx,0x4
   1400036ab:	mov    rax,rdx
   1400036ae:	shr    rax,0x3f
   1400036b2:	add    rdx,rax
   1400036b5:	lea    rax,[rdx+rdx*4]
   1400036b9:	shl    rax,0x3
   1400036bd:	sub    rsi,rax
   1400036c0:	mov    rax,rsi
   1400036c3:	mov    rsi,QWORD PTR [rsp+0x50]
   1400036c8:	add    rsp,0x30
   1400036cc:	pop    rdi
   1400036cd:	ret    
   1400036ce:	int3   
   1400036cf:	int3   
   1400036d0:	rex push rbx
   1400036d2:	sub    rsp,0x20
   1400036d6:	mov    rbx,rcx
   1400036d9:	call   0x140014698
   1400036de:	lea    r11,[rip+0x38a1b]        # 0x14003c100
   1400036e5:	mov    QWORD PTR [rbx],r11
   1400036e8:	mov    rax,rbx
   1400036eb:	add    rsp,0x20
   1400036ef:	pop    rbx
   1400036f0:	ret    
   1400036f1:	int3   
   1400036f2:	int3   
   1400036f3:	int3   
   1400036f4:	int3   
   1400036f5:	int3   
   1400036f6:	int3   
   1400036f7:	int3   
   1400036f8:	int3   
   1400036f9:	int3   
   1400036fa:	int3   
   1400036fb:	int3   
   1400036fc:	int3   
   1400036fd:	int3   
   1400036fe:	int3   
   1400036ff:	int3   
   140003700:	mov    QWORD PTR [rsp+0x20],r9
   140003705:	mov    QWORD PTR [rsp+0x8],rcx
   14000370a:	push   rsi
   14000370b:	push   rdi
   14000370c:	push   r12
   14000370e:	sub    rsp,0x40
   140003712:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000371b:	mov    QWORD PTR [rsp+0x70],rbx
   140003720:	mov    rsi,r8
   140003723:	mov    rdi,rdx
   140003726:	mov    rbx,rcx
   140003729:	mov    QWORD PTR [rsp+0x68],rcx
   14000372e:	xor    r12d,r12d
   140003731:	test   rdi,rdi
   140003734:	je     0x140003776
   140003736:	mov    QWORD PTR [rsp+0x28],rbx
   14000373b:	mov    QWORD PTR [rsp+0x30],rbx
   140003740:	test   rbx,rbx
   140003743:	je     0x140003768
   140003745:	mov    QWORD PTR [rbx+0x20],0xf
   14000374d:	mov    QWORD PTR [rbx+0x18],r12
   140003751:	mov    BYTE PTR [rbx+0x8],0x0
   140003755:	or     r9,0xffffffffffffffff
   140003759:	xor    r8d,r8d
   14000375c:	mov    rdx,rsi
   14000375f:	mov    rcx,rbx
   140003762:	call   0x140002630
   140003767:	nop
   140003768:	dec    rdi
   14000376b:	add    rbx,0x28
   14000376f:	mov    QWORD PTR [rsp+0x60],rbx
   140003774:	jmp    0x140003731
   140003776:	mov    rbx,QWORD PTR [rsp+0x70]
   14000377b:	add    rsp,0x40
   14000377f:	pop    r12
   140003781:	pop    rdi
   140003782:	pop    rsi
   140003783:	ret    
   140003784:	int3   
   140003785:	int3   
   140003786:	int3   
   140003787:	int3   
   140003788:	int3   
   140003789:	int3   
   14000378a:	int3   
   14000378b:	int3   
   14000378c:	int3   
   14000378d:	int3   
   14000378e:	int3   
   14000378f:	int3   
   140003790:	or     r9,0xffffffffffffffff
   140003794:	xor    r8d,r8d
   140003797:	jmp    0x140002630
   14000379c:	int3   
   14000379d:	int3   
   14000379e:	int3   
   14000379f:	int3   
   1400037a0:	rex push rbx
   1400037a2:	sub    rsp,0x20
   1400037a6:	cmp    QWORD PTR [rdx+0x20],0x10
   1400037ab:	mov    rbx,rdx
   1400037ae:	jb     0x1400037b9
   1400037b0:	mov    rcx,QWORD PTR [rdx+0x8]
   1400037b4:	call   0x1400062d4
   1400037b9:	mov    QWORD PTR [rbx+0x20],0xf
   1400037c1:	mov    QWORD PTR [rbx+0x18],0x0
   1400037c9:	mov    BYTE PTR [rbx+0x8],0x0
   1400037cd:	add    rsp,0x20
   1400037d1:	pop    rbx
   1400037d2:	ret    
   1400037d3:	int3   
   1400037d4:	int3   
   1400037d5:	int3   
   1400037d6:	int3   
   1400037d7:	int3   
   1400037d8:	int3   
   1400037d9:	int3   
   1400037da:	int3   
   1400037db:	int3   
   1400037dc:	int3   
   1400037dd:	int3   
   1400037de:	int3   
   1400037df:	int3   
   1400037e0:	mov    QWORD PTR [rsp+0x20],r9
   1400037e5:	mov    QWORD PTR [rsp+0x18],r8
   1400037ea:	push   rbx
   1400037eb:	push   rsi
   1400037ec:	push   rdi
   1400037ed:	push   r12
   1400037ef:	sub    rsp,0x38
   1400037f3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400037fc:	mov    rbx,r8
   1400037ff:	mov    rsi,rdx
   140003802:	mov    rdi,rcx
   140003805:	mov    QWORD PTR [rsp+0x60],rbx
   14000380a:	xor    r12d,r12d
   14000380d:	nop    DWORD PTR [rax]
   140003810:	cmp    rdi,rsi
   140003813:	je     0x140003856
   140003815:	mov    QWORD PTR [rsp+0x68],rbx
   14000381a:	mov    QWORD PTR [rsp+0x28],rbx
   14000381f:	test   rbx,rbx
   140003822:	je     0x140003847
   140003824:	mov    QWORD PTR [rbx+0x20],0xf
   14000382c:	mov    QWORD PTR [rbx+0x18],r12
   140003830:	mov    BYTE PTR [rbx+0x8],0x0
   140003834:	or     r9,0xffffffffffffffff
   140003838:	xor    r8d,r8d
   14000383b:	mov    rdx,rdi
   14000383e:	mov    rcx,rbx
   140003841:	call   0x140002630
   140003846:	nop
   140003847:	add    rbx,0x28
   14000384b:	mov    QWORD PTR [rsp+0x70],rbx
   140003850:	add    rdi,0x28
   140003854:	jmp    0x140003810
   140003856:	mov    rax,rbx
   140003859:	add    rsp,0x38
   14000385d:	pop    r12
   14000385f:	pop    rdi
   140003860:	pop    rsi
   140003861:	pop    rbx
   140003862:	ret    
   140003863:	int3   
   140003864:	int3   
   140003865:	int3   
   140003866:	int3   
   140003867:	int3   
   140003868:	int3   
   140003869:	int3   
   14000386a:	int3   
   14000386b:	int3   
   14000386c:	int3   
   14000386d:	int3   
   14000386e:	int3   
   14000386f:	int3   
   140003870:	mov    r11,rsp
   140003873:	mov    QWORD PTR [r11+0x20],r9
   140003877:	push   rsi
   140003878:	push   rdi
   140003879:	push   r12
   14000387b:	sub    rsp,0x90
   140003882:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000388b:	mov    QWORD PTR [r11+0x10],rbx
   14000388f:	mov    rax,QWORD PTR [rip+0x4552a]        # 0x140048dc0
   140003896:	xor    rax,rsp
   140003899:	mov    QWORD PTR [rsp+0x80],rax
   1400038a1:	mov    rbx,r8
   1400038a4:	mov    rsi,rdx
   1400038a7:	mov    rdi,rcx
   1400038aa:	mov    QWORD PTR [rsp+0x20],rbx
   1400038af:	mov    QWORD PTR [rsp+0x28],rbx
   1400038b4:	mov    QWORD PTR [r11-0x40],0xf
   1400038bc:	xor    r12d,r12d
   1400038bf:	mov    QWORD PTR [r11-0x48],r12
   1400038c3:	mov    BYTE PTR [r11-0x58],r12b
   1400038c7:	cmp    rdi,rsi
   1400038ca:	je     0x140003973
   1400038d0:	mov    QWORD PTR [rsp+0x30],rbx
   1400038d5:	mov    QWORD PTR [rsp+0x38],rbx
   1400038da:	test   rbx,rbx
   1400038dd:	je     0x140003904
   1400038df:	mov    QWORD PTR [rbx+0x20],0xf
   1400038e7:	mov    QWORD PTR [rbx+0x18],r12
   1400038eb:	mov    BYTE PTR [rbx+0x8],0x0
   1400038ef:	or     r9,0xffffffffffffffff
   1400038f3:	xor    r8d,r8d
   1400038f6:	lea    rdx,[rsp+0x48]
   1400038fb:	mov    rcx,rbx
   1400038fe:	call   0x140002630
   140003903:	nop
   140003904:	cmp    rbx,rdi
   140003907:	je     0x140003961
   140003909:	lea    rcx,[rsp+0x70]
   14000390e:	mov    rax,QWORD PTR [rbx+0x8]
   140003912:	mov    QWORD PTR [rcx],rax
   140003915:	mov    rax,QWORD PTR [rbx+0x10]
   140003919:	mov    QWORD PTR [rcx+0x8],rax
   14000391d:	mov    rax,QWORD PTR [rdi+0x8]
   140003921:	mov    QWORD PTR [rbx+0x8],rax
   140003925:	mov    rax,QWORD PTR [rdi+0x10]
   140003929:	mov    QWORD PTR [rbx+0x10],rax
   14000392d:	lea    rcx,[rsp+0x70]
   140003932:	mov    rax,QWORD PTR [rcx]
   140003935:	mov    QWORD PTR [rdi+0x8],rax
   140003939:	mov    rax,QWORD PTR [rcx+0x8]
   14000393d:	mov    QWORD PTR [rdi+0x10],rax
   140003941:	mov    rcx,QWORD PTR [rbx+0x18]
   140003945:	mov    rax,QWORD PTR [rdi+0x18]
   140003949:	mov    QWORD PTR [rbx+0x18],rax
   14000394d:	mov    QWORD PTR [rdi+0x18],rcx
   140003951:	mov    rcx,QWORD PTR [rbx+0x20]
   140003955:	mov    rax,QWORD PTR [rdi+0x20]
   140003959:	mov    QWORD PTR [rbx+0x20],rax
   14000395d:	mov    QWORD PTR [rdi+0x20],rcx
   140003961:	add    rbx,0x28
   140003965:	mov    QWORD PTR [rsp+0x20],rbx
   14000396a:	add    rdi,0x28
   14000396e:	jmp    0x1400038c7
   140003973:	cmp    QWORD PTR [rsp+0x68],0x10
   140003979:	jb     0x140003985
   14000397b:	mov    rcx,QWORD PTR [rsp+0x50]
   140003980:	call   0x1400062d4
   140003985:	mov    rax,rbx
   140003988:	mov    rcx,QWORD PTR [rsp+0x80]
   140003990:	xor    rcx,rsp
   140003993:	call   0x1400144f0
   140003998:	mov    rbx,QWORD PTR [rsp+0xb8]
   1400039a0:	add    rsp,0x90
   1400039a7:	pop    r12
   1400039a9:	pop    rdi
   1400039aa:	pop    rsi
   1400039ab:	ret    
   1400039ac:	int3   
   1400039ad:	int3   
   1400039ae:	int3   
   1400039af:	int3   
   1400039b0:	sub    rsp,0x28
   1400039b4:	mov    rax,QWORD PTR [rip+0x45405]        # 0x140048dc0
   1400039bb:	xor    rax,rsp
   1400039be:	mov    QWORD PTR [rsp+0x10],rax
   1400039c3:	mov    r9,r8
   1400039c6:	mov    r10,rcx
   1400039c9:	mov    r8,rdx
   1400039cc:	cmp    rcx,rdx
   1400039cf:	je     0x140003a39
   1400039d1:	sub    r8,0x28
   1400039d5:	sub    r9,0x28
   1400039d9:	cmp    r9,r8
   1400039dc:	je     0x140003a34
   1400039de:	mov    rax,QWORD PTR [r9+0x8]
   1400039e2:	lea    rcx,[rsp]
   1400039e6:	mov    QWORD PTR [rcx],rax
   1400039e9:	mov    rax,QWORD PTR [r9+0x10]
   1400039ed:	mov    QWORD PTR [rcx+0x8],rax
   1400039f1:	mov    rax,QWORD PTR [r8+0x8]
   1400039f5:	lea    rcx,[rsp]
   1400039f9:	mov    QWORD PTR [r9+0x8],rax
   1400039fd:	mov    rax,QWORD PTR [r8+0x10]
   140003a01:	mov    QWORD PTR [r9+0x10],rax
   140003a05:	mov    rax,QWORD PTR [rcx]
   140003a08:	mov    QWORD PTR [r8+0x8],rax
   140003a0c:	mov    rax,QWORD PTR [rcx+0x8]
   140003a10:	mov    rcx,QWORD PTR [r8+0x18]
   140003a14:	mov    QWORD PTR [r8+0x10],rax
   140003a18:	mov    rdx,QWORD PTR [r9+0x18]
   140003a1c:	mov    QWORD PTR [r9+0x18],rcx
   140003a20:	mov    rcx,QWORD PTR [r8+0x20]
   140003a24:	mov    QWORD PTR [r8+0x18],rdx
   140003a28:	mov    rdx,QWORD PTR [r9+0x20]
   140003a2c:	mov    QWORD PTR [r9+0x20],rcx
   140003a30:	mov    QWORD PTR [r8+0x20],rdx
   140003a34:	cmp    r8,r10
   140003a37:	jne    0x1400039d1
   140003a39:	mov    rax,r9
   140003a3c:	mov    rcx,QWORD PTR [rsp+0x10]
   140003a41:	xor    rcx,rsp
   140003a44:	call   0x1400144f0
   140003a49:	add    rsp,0x28
   140003a4d:	ret    
   140003a4e:	int3   
   140003a4f:	int3   
   140003a50:	rex push rbx
   140003a52:	push   rbp
   140003a53:	push   rsi
   140003a54:	push   rdi
   140003a55:	push   r12
   140003a57:	sub    rsp,0x50
   140003a5b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140003a64:	mov    rax,QWORD PTR [rip+0x45355]        # 0x140048dc0
   140003a6b:	xor    rax,rsp
   140003a6e:	mov    QWORD PTR [rsp+0x40],rax
   140003a73:	mov    rbx,r8
   140003a76:	mov    rdi,rdx
   140003a79:	mov    rsi,rcx
   140003a7c:	mov    QWORD PTR [rsp+0x20],rcx
   140003a81:	mov    QWORD PTR [rsp+0x30],rdx
   140003a86:	mov    QWORD PTR [rsp+0x38],rbx
   140003a8b:	mov    QWORD PTR [rcx+0x20],0xf
   140003a93:	xor    r12d,r12d
   140003a96:	mov    QWORD PTR [rcx+0x18],r12
   140003a9a:	mov    BYTE PTR [rcx+0x8],r12b
   140003a9e:	mov    QWORD PTR [rcx+0x48],0xf
   140003aa6:	mov    QWORD PTR [rcx+0x40],r12
   140003aaa:	mov    BYTE PTR [rcx+0x30],r12b
   140003aae:	mov    DWORD PTR [rcx+0x50],r12d
   140003ab2:	mov    BYTE PTR [rcx+0x54],r12b
   140003ab6:	cmp    QWORD PTR [rdx+0x18],r12
   140003aba:	je     0x140003afa
   140003abc:	or     r9,0xffffffffffffffff
   140003ac0:	xor    r8d,r8d
   140003ac3:	call   0x140002630
   140003ac8:	cmp    QWORD PTR [rbx+0x18],r12
   140003acc:	jne    0x140003ae3
   140003ace:	or     r9,0xffffffffffffffff
   140003ad2:	xor    r8d,r8d
   140003ad5:	mov    rdx,rdi
   140003ad8:	lea    rcx,[rsi+0x28]
   140003adc:	call   0x140002630
   140003ae1:	jmp    0x140003af6
   140003ae3:	or     r9,0xffffffffffffffff
   140003ae7:	xor    r8d,r8d
   140003aea:	mov    rdx,rbx
   140003aed:	lea    rcx,[rsi+0x28]
   140003af1:	call   0x140002630
   140003af6:	mov    BYTE PTR [rsi+0x54],0x1
   140003afa:	cmp    QWORD PTR [rdi+0x20],0x10
   140003aff:	jb     0x140003b0a
   140003b01:	mov    rcx,QWORD PTR [rdi+0x8]
   140003b05:	call   0x1400062d4
   140003b0a:	mov    QWORD PTR [rdi+0x20],0xf
   140003b12:	mov    QWORD PTR [rdi+0x18],r12
   140003b16:	mov    BYTE PTR [rdi+0x8],0x0
   140003b1a:	cmp    QWORD PTR [rbx+0x20],0x10
   140003b1f:	jb     0x140003b2a
   140003b21:	mov    rcx,QWORD PTR [rbx+0x8]
   140003b25:	call   0x1400062d4
   140003b2a:	mov    QWORD PTR [rbx+0x20],0xf
   140003b32:	mov    QWORD PTR [rbx+0x18],r12
   140003b36:	mov    BYTE PTR [rbx+0x8],0x0
   140003b3a:	mov    rax,rsi
   140003b3d:	mov    rcx,QWORD PTR [rsp+0x40]
   140003b42:	xor    rcx,rsp
   140003b45:	call   0x1400144f0
   140003b4a:	add    rsp,0x50
   140003b4e:	pop    r12
   140003b50:	pop    rdi
   140003b51:	pop    rsi
   140003b52:	pop    rbp
   140003b53:	pop    rbx
   140003b54:	ret    
   140003b55:	int3   
   140003b56:	int3   
   140003b57:	int3   
   140003b58:	int3   
   140003b59:	int3   
   140003b5a:	int3   
   140003b5b:	int3   
   140003b5c:	int3   
   140003b5d:	int3   
   140003b5e:	int3   
   140003b5f:	int3   
   140003b60:	rex push rbx
   140003b62:	sub    rsp,0x20
   140003b66:	cmp    QWORD PTR [rcx+0x48],0x10
   140003b6b:	mov    rbx,rcx
   140003b6e:	jb     0x140003b79
   140003b70:	mov    rcx,QWORD PTR [rcx+0x30]
   140003b74:	call   0x1400062d4
   140003b79:	mov    QWORD PTR [rbx+0x48],0xf
   140003b81:	mov    QWORD PTR [rbx+0x40],0x0
   140003b89:	mov    BYTE PTR [rbx+0x30],0x0
   140003b8d:	cmp    QWORD PTR [rbx+0x20],0x10
   140003b92:	jb     0x140003b9d
   140003b94:	mov    rcx,QWORD PTR [rbx+0x8]
   140003b98:	call   0x1400062d4
   140003b9d:	mov    QWORD PTR [rbx+0x20],0xf
   140003ba5:	mov    QWORD PTR [rbx+0x18],0x0
   140003bad:	mov    BYTE PTR [rbx+0x8],0x0
   140003bb1:	add    rsp,0x20
   140003bb5:	pop    rbx
   140003bb6:	ret    
   140003bb7:	int3   
   140003bb8:	int3   
   140003bb9:	int3   
   140003bba:	int3   
   140003bbb:	int3   
   140003bbc:	int3   
   140003bbd:	int3   
   140003bbe:	int3   
   140003bbf:	int3   
   140003bc0:	mov    r11,rsp
   140003bc3:	push   rsi
   140003bc4:	push   rdi
   140003bc5:	push   r12
   140003bc7:	sub    rsp,0x230
   140003bce:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   140003bda:	mov    QWORD PTR [r11+0x18],rbx
   140003bde:	mov    QWORD PTR [r11+0x20],rbp
   140003be2:	mov    rax,QWORD PTR [rip+0x451d7]        # 0x140048dc0
   140003be9:	xor    rax,rsp
   140003bec:	mov    QWORD PTR [rsp+0x220],rax
   140003bf4:	mov    rbx,rdx
   140003bf7:	mov    rbp,rcx
   140003bfa:	mov    QWORD PTR [r11-0x178],rdx
   140003c01:	cmp    BYTE PTR [rcx+0x54],0x0
   140003c05:	jne    0x140003c30
   140003c07:	cmp    QWORD PTR [rdx+0x20],0x10
   140003c0c:	jb     0x140003c17
   140003c0e:	mov    rcx,QWORD PTR [rdx+0x8]
   140003c12:	call   0x1400062d4
   140003c17:	mov    QWORD PTR [rbx+0x20],0xf
   140003c1f:	xor    edi,edi
   140003c21:	mov    QWORD PTR [rbx+0x18],rdi
   140003c25:	mov    BYTE PTR [rbx+0x8],dil
   140003c29:	xor    al,al
   140003c2b:	jmp    0x140003e7e
   140003c30:	cmp    QWORD PTR [rdx+0x18],0x0
   140003c35:	jne    0x140003c60
   140003c37:	cmp    QWORD PTR [rdx+0x20],0x10
   140003c3c:	jb     0x140003c47
   140003c3e:	mov    rcx,QWORD PTR [rdx+0x8]
   140003c42:	call   0x1400062d4
   140003c47:	mov    QWORD PTR [rbx+0x20],0xf
   140003c4f:	xor    edi,edi
   140003c51:	mov    QWORD PTR [rbx+0x18],rdi
   140003c55:	mov    BYTE PTR [rbx+0x8],dil
   140003c59:	xor    al,al
   140003c5b:	jmp    0x140003e7e
   140003c60:	mov    QWORD PTR [rsp+0x90],0xf
   140003c6c:	xor    edi,edi
   140003c6e:	mov    QWORD PTR [rsp+0x88],rdi
   140003c76:	mov    BYTE PTR [rsp+0x78],dil
   140003c7b:	lea    r8d,[rdi+0x1a]
   140003c7f:	lea    rdx,[rip+0x39b1a]        # 0x14003d7a0
   140003c86:	lea    rcx,[rsp+0x70]
   140003c8b:	call   0x140002a30
   140003c90:	lea    rdx,[rsp+0x70]
   140003c95:	lea    rcx,[rsp+0xa0]
   140003c9d:	call   0x140031560
   140003ca2:	nop
   140003ca3:	cmp    QWORD PTR [rbx+0x20],0x10
   140003ca8:	jb     0x140003cb3
   140003caa:	lea    rsi,[rbx+0x8]
   140003cae:	mov    rcx,QWORD PTR [rsi]
   140003cb1:	jmp    0x140003cba
   140003cb3:	lea    rsi,[rbx+0x8]
   140003cb7:	mov    rcx,rsi
   140003cba:	lea    rdx,[rsp+0xe0]
   140003cc2:	call   QWORD PTR [rip+0x327e8]        # 0x1400364b0
   140003cc8:	cmp    rax,0xffffffffffffffff
   140003ccc:	jne    0x140003d27
   140003cce:	cmp    QWORD PTR [rsp+0xc0],0x10
   140003cd7:	jb     0x140003ce6
   140003cd9:	mov    rcx,QWORD PTR [rsp+0xa8]
   140003ce1:	call   0x1400062d4
   140003ce6:	mov    QWORD PTR [rsp+0xc0],0xf
   140003cf2:	mov    QWORD PTR [rsp+0xb8],rdi
   140003cfa:	mov    BYTE PTR [rsp+0xa8],0x0
   140003d02:	cmp    QWORD PTR [rbx+0x20],0x10
   140003d07:	jb     0x140003d11
   140003d09:	mov    rcx,QWORD PTR [rsi]
   140003d0c:	call   0x1400062d4
   140003d11:	mov    QWORD PTR [rbx+0x20],0xf
   140003d19:	mov    QWORD PTR [rbx+0x18],rdi
   140003d1d:	mov    BYTE PTR [rsi],0x0
   140003d20:	xor    al,al
   140003d22:	jmp    0x140003e7e
   140003d27:	xor    edx,edx
   140003d29:	xor    ecx,ecx
   140003d2b:	lea    r8d,[rdx+0x2]
   140003d2f:	call   QWORD PTR [rip+0x3233b]        # 0x140036070
   140003d35:	mov    r12,rax
   140003d38:	test   rax,rax
   140003d3b:	jne    0x140003d96
   140003d3d:	xor    r8d,r8d
   140003d40:	mov    edx,0xc0000019
   140003d45:	lea    rcx,[rsp+0xa0]
   140003d4d:	call   0x140031a80
   140003d52:	nop
   140003d53:	cmp    QWORD PTR [rsp+0xc0],0x10
   140003d5c:	jb     0x140003d6b
   140003d5e:	mov    rcx,QWORD PTR [rsp+0xa8]
   140003d66:	call   0x1400062d4
   140003d6b:	mov    QWORD PTR [rsp+0xc0],0xf
   140003d77:	mov    QWORD PTR [rsp+0xb8],rdi
   140003d7f:	mov    BYTE PTR [rsp+0xa8],0x0
   140003d87:	mov    rcx,rbx
   140003d8a:	call   0x140001260
   140003d8f:	xor    al,al
   140003d91:	jmp    0x140003e7e
   140003d96:	cmp    QWORD PTR [rbx+0x20],0x10
   140003d9b:	jb     0x140003da0
   140003d9d:	mov    rsi,QWORD PTR [rsi]
   140003da0:	cmp    QWORD PTR [rbp+0x48],0x10
   140003da5:	jb     0x140003dad
   140003da7:	mov    r8,QWORD PTR [rbp+0x30]
   140003dab:	jmp    0x140003db1
   140003dad:	lea    r8,[rbp+0x30]
   140003db1:	cmp    QWORD PTR [rbp+0x20],0x10
   140003db6:	jb     0x140003dbe
   140003db8:	mov    rdx,QWORD PTR [rbp+0x8]
   140003dbc:	jmp    0x140003dc2
   140003dbe:	lea    rdx,[rbp+0x8]
   140003dc2:	mov    QWORD PTR [rsp+0x60],rdi
   140003dc7:	mov    QWORD PTR [rsp+0x58],rdi
   140003dcc:	mov    QWORD PTR [rsp+0x50],rdi
   140003dd1:	mov    QWORD PTR [rsp+0x48],rdi
   140003dd6:	mov    QWORD PTR [rsp+0x40],rdi
   140003ddb:	mov    QWORD PTR [rsp+0x38],rsi
   140003de0:	mov    DWORD PTR [rsp+0x30],0x1
   140003de8:	mov    DWORD PTR [rsp+0x28],0x2
   140003df0:	mov    DWORD PTR [rsp+0x20],0x10
   140003df8:	mov    r9d,0xf01ff
   140003dfe:	mov    rcx,rax
   140003e01:	call   QWORD PTR [rip+0x32249]        # 0x140036050
   140003e07:	mov    rbp,rax
   140003e0a:	test   rax,rax
   140003e0d:	je     0x140003e14
   140003e0f:	mov    sil,0x1
   140003e12:	jmp    0x140003e2c
   140003e14:	xor    r8d,r8d
   140003e17:	mov    edx,0xc0000023
   140003e1c:	lea    rcx,[rsp+0xa0]
   140003e24:	call   0x140031a80
   140003e29:	xor    sil,sil
   140003e2c:	mov    rcx,rbp
   140003e2f:	call   QWORD PTR [rip+0x3222b]        # 0x140036060
   140003e35:	mov    rcx,r12
   140003e38:	call   QWORD PTR [rip+0x32222]        # 0x140036060
   140003e3e:	nop
   140003e3f:	cmp    QWORD PTR [rsp+0xc0],0x10
   140003e48:	jb     0x140003e57
   140003e4a:	mov    rcx,QWORD PTR [rsp+0xa8]
   140003e52:	call   0x1400062d4
   140003e57:	mov    QWORD PTR [rsp+0xc0],0xf
   140003e63:	mov    QWORD PTR [rsp+0xb8],rdi
   140003e6b:	mov    BYTE PTR [rsp+0xa8],0x0
   140003e73:	mov    rcx,rbx
   140003e76:	call   0x140001260
   140003e7b:	mov    al,sil
   140003e7e:	mov    rcx,QWORD PTR [rsp+0x220]
   140003e86:	xor    rcx,rsp
   140003e89:	call   0x1400144f0
   140003e8e:	lea    r11,[rsp+0x230]
   140003e96:	mov    rbx,QWORD PTR [r11+0x30]
   140003e9a:	mov    rbp,QWORD PTR [r11+0x38]
   140003e9e:	mov    rsp,r11
   140003ea1:	pop    r12
   140003ea3:	pop    rdi
   140003ea4:	pop    rsi
   140003ea5:	ret    
   140003ea6:	int3   
   140003ea7:	int3   
   140003ea8:	int3   
   140003ea9:	int3   
   140003eaa:	int3   
   140003eab:	int3   
   140003eac:	int3   
   140003ead:	int3   
   140003eae:	int3   
   140003eaf:	int3   
   140003eb0:	mov    rax,rsp
   140003eb3:	push   rdi
   140003eb4:	sub    rsp,0x90
   140003ebb:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140003ec4:	mov    QWORD PTR [rax+0x10],rbx
   140003ec8:	mov    QWORD PTR [rax+0x18],rsi
   140003ecc:	mov    rax,QWORD PTR [rip+0x44eed]        # 0x140048dc0
   140003ed3:	xor    rax,rsp
   140003ed6:	mov    QWORD PTR [rsp+0x80],rax
   140003ede:	mov    rbx,rcx
   140003ee1:	cmp    BYTE PTR [rcx+0x54],0x0
   140003ee5:	jne    0x140003eee
   140003ee7:	xor    al,al
   140003ee9:	jmp    0x14000401a
   140003eee:	mov    QWORD PTR [rsp+0x40],0xf
   140003ef7:	mov    QWORD PTR [rsp+0x38],0x0
   140003f00:	mov    BYTE PTR [rsp+0x28],0x0
   140003f05:	mov    r8d,0x1a
   140003f0b:	lea    rdx,[rip+0x3988e]        # 0x14003d7a0
   140003f12:	lea    rcx,[rsp+0x20]
   140003f17:	call   0x140002a30
   140003f1c:	lea    rdx,[rsp+0x20]
   140003f21:	lea    rcx,[rsp+0x50]
   140003f26:	call   0x140031560
   140003f2b:	nop
   140003f2c:	xor    edx,edx
   140003f2e:	xor    ecx,ecx
   140003f30:	lea    r8d,[rdx+0x1]
   140003f34:	call   QWORD PTR [rip+0x32136]        # 0x140036070
   140003f3a:	mov    rsi,rax
   140003f3d:	test   rax,rax
   140003f40:	jne    0x140003f6e
   140003f42:	xor    r8d,r8d
   140003f45:	mov    edx,0xc0000019
   140003f4a:	lea    rcx,[rsp+0x50]
   140003f4f:	call   0x140031a80
   140003f54:	nop
   140003f55:	cmp    QWORD PTR [rsp+0x70],0x10
   140003f5b:	jb     0x140003f67
   140003f5d:	mov    rcx,QWORD PTR [rsp+0x58]
   140003f62:	call   0x1400062d4
   140003f67:	xor    al,al
   140003f69:	jmp    0x14000401a
   140003f6e:	cmp    QWORD PTR [rbx+0x20],0x10
   140003f73:	jb     0x140003f7b
   140003f75:	mov    rdx,QWORD PTR [rbx+0x8]
   140003f79:	jmp    0x140003f7f
   140003f7b:	lea    rdx,[rbx+0x8]
   140003f7f:	mov    r8d,0x20000000
   140003f85:	mov    rcx,rax
   140003f88:	call   QWORD PTR [rip+0x320da]        # 0x140036068
   140003f8e:	mov    rbx,rax
   140003f91:	test   rax,rax
   140003f94:	jne    0x140003fc8
   140003f96:	xor    r8d,r8d
   140003f99:	mov    edx,0xc0000020
   140003f9e:	lea    rcx,[rsp+0x50]
   140003fa3:	call   0x140031a80
   140003fa8:	mov    rcx,rsi
   140003fab:	call   QWORD PTR [rip+0x320af]        # 0x140036060
   140003fb1:	nop
   140003fb2:	cmp    QWORD PTR [rsp+0x70],0x10
   140003fb8:	jb     0x140003fc4
   140003fba:	mov    rcx,QWORD PTR [rsp+0x58]
   140003fbf:	call   0x1400062d4
   140003fc4:	xor    al,al
   140003fc6:	jmp    0x14000401a
   140003fc8:	mov    dil,0x1
   140003fcb:	xor    r8d,r8d
   140003fce:	xor    edx,edx
   140003fd0:	mov    rcx,rax
   140003fd3:	call   QWORD PTR [rip+0x3206f]        # 0x140036048
   140003fd9:	test   eax,eax
   140003fdb:	jne    0x140003ff2
   140003fdd:	xor    r8d,r8d
   140003fe0:	mov    edx,0xc0000024
   140003fe5:	lea    rcx,[rsp+0x50]
   140003fea:	call   0x140031a80
   140003fef:	xor    dil,dil
   140003ff2:	mov    rcx,rbx
   140003ff5:	call   QWORD PTR [rip+0x32065]        # 0x140036060
   140003ffb:	mov    rcx,rsi
   140003ffe:	call   QWORD PTR [rip+0x3205c]        # 0x140036060
   140004004:	nop
   140004005:	cmp    QWORD PTR [rsp+0x70],0x10
   14000400b:	jb     0x140004017
   14000400d:	mov    rcx,QWORD PTR [rsp+0x58]
   140004012:	call   0x1400062d4
   140004017:	mov    al,dil
   14000401a:	mov    rcx,QWORD PTR [rsp+0x80]
   140004022:	xor    rcx,rsp
   140004025:	call   0x1400144f0
   14000402a:	lea    r11,[rsp+0x90]
   140004032:	mov    rbx,QWORD PTR [r11+0x18]
   140004036:	mov    rsi,QWORD PTR [r11+0x20]
   14000403a:	mov    rsp,r11
   14000403d:	pop    rdi
   14000403e:	ret    
   14000403f:	int3   
   140004040:	mov    rax,rsp
   140004043:	push   rdi
   140004044:	sub    rsp,0xb0
   14000404b:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   140004054:	mov    QWORD PTR [rax+0x10],rbx
   140004058:	mov    QWORD PTR [rax+0x18],rsi
   14000405c:	mov    rax,QWORD PTR [rip+0x44d5d]        # 0x140048dc0
   140004063:	xor    rax,rsp
   140004066:	mov    QWORD PTR [rsp+0xa0],rax
   14000406e:	mov    rbx,rcx
   140004071:	cmp    BYTE PTR [rcx+0x54],0x0
   140004075:	jne    0x14000407e
   140004077:	xor    al,al
   140004079:	jmp    0x1400041b5
   14000407e:	mov    QWORD PTR [rsp+0x40],0xf
   140004087:	mov    QWORD PTR [rsp+0x38],0x0
   140004090:	mov    BYTE PTR [rsp+0x28],0x0
   140004095:	mov    r8d,0x1a
   14000409b:	lea    rdx,[rip+0x396fe]        # 0x14003d7a0
   1400040a2:	lea    rcx,[rsp+0x20]
   1400040a7:	call   0x140002a30
   1400040ac:	lea    rdx,[rsp+0x20]
   1400040b1:	lea    rcx,[rsp+0x70]
   1400040b6:	call   0x140031560
   1400040bb:	nop
   1400040bc:	xor    edx,edx
   1400040be:	xor    ecx,ecx
   1400040c0:	lea    r8d,[rdx+0x1]
   1400040c4:	call   QWORD PTR [rip+0x31fa6]        # 0x140036070
   1400040ca:	mov    rsi,rax
   1400040cd:	test   rax,rax
   1400040d0:	jne    0x140004101
   1400040d2:	xor    r8d,r8d
   1400040d5:	mov    edx,0xc0000019
   1400040da:	lea    rcx,[rsp+0x70]
   1400040df:	call   0x140031a80
   1400040e4:	nop
   1400040e5:	cmp    QWORD PTR [rsp+0x90],0x10
   1400040ee:	jb     0x1400040fa
   1400040f0:	mov    rcx,QWORD PTR [rsp+0x78]
   1400040f5:	call   0x1400062d4
   1400040fa:	xor    al,al
   1400040fc:	jmp    0x1400041b5
   140004101:	cmp    QWORD PTR [rbx+0x20],0x10
   140004106:	jb     0x14000410e
   140004108:	mov    rdx,QWORD PTR [rbx+0x8]
   14000410c:	jmp    0x140004112
   14000410e:	lea    rdx,[rbx+0x8]
   140004112:	mov    r8d,0x20000000
   140004118:	mov    rcx,rax
   14000411b:	call   QWORD PTR [rip+0x31f47]        # 0x140036068
   140004121:	mov    rdi,rax
   140004124:	test   rax,rax
   140004127:	jne    0x14000415e
   140004129:	xor    r8d,r8d
   14000412c:	mov    edx,0xc0000020
   140004131:	lea    rcx,[rsp+0x70]
   140004136:	call   0x140031a80
   14000413b:	mov    rcx,rsi
   14000413e:	call   QWORD PTR [rip+0x31f1c]        # 0x140036060
   140004144:	nop
   140004145:	cmp    QWORD PTR [rsp+0x90],0x10
   14000414e:	jb     0x14000415a
   140004150:	mov    rcx,QWORD PTR [rsp+0x78]
   140004155:	call   0x1400062d4
   14000415a:	xor    al,al
   14000415c:	jmp    0x1400041b5
   14000415e:	mov    bl,0x1
   140004160:	lea    r8,[rsp+0x50]
   140004165:	mov    edx,0x1
   14000416a:	mov    rcx,rax
   14000416d:	call   QWORD PTR [rip+0x31ee5]        # 0x140036058
   140004173:	test   eax,eax
   140004175:	je     0x14000418b
   140004177:	xor    r8d,r8d
   14000417a:	mov    edx,0xc0000009
   14000417f:	lea    rcx,[rsp+0x70]
   140004184:	call   0x140031a80
   140004189:	xor    bl,bl
   14000418b:	mov    rcx,rdi
   14000418e:	call   QWORD PTR [rip+0x31ecc]        # 0x140036060
   140004194:	mov    rcx,rsi
   140004197:	call   QWORD PTR [rip+0x31ec3]        # 0x140036060
   14000419d:	nop
   14000419e:	cmp    QWORD PTR [rsp+0x90],0x10
   1400041a7:	jb     0x1400041b3
   1400041a9:	mov    rcx,QWORD PTR [rsp+0x78]
   1400041ae:	call   0x1400062d4
   1400041b3:	mov    al,bl
   1400041b5:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400041bd:	xor    rcx,rsp
   1400041c0:	call   0x1400144f0
   1400041c5:	lea    r11,[rsp+0xb0]
   1400041cd:	mov    rbx,QWORD PTR [r11+0x18]
   1400041d1:	mov    rsi,QWORD PTR [r11+0x20]
   1400041d5:	mov    rsp,r11
   1400041d8:	pop    rdi
   1400041d9:	ret    
   1400041da:	int3   
   1400041db:	int3   
   1400041dc:	int3   
   1400041dd:	int3   
   1400041de:	int3   
   1400041df:	int3   
   1400041e0:	mov    rax,rsp
   1400041e3:	push   rdi
   1400041e4:	sub    rsp,0x90
   1400041eb:	mov    QWORD PTR [rsp+0x48],0xfffffffffffffffe
   1400041f4:	mov    QWORD PTR [rax+0x10],rbx
   1400041f8:	mov    QWORD PTR [rax+0x18],rsi
   1400041fc:	mov    rax,QWORD PTR [rip+0x44bbd]        # 0x140048dc0
   140004203:	xor    rax,rsp
   140004206:	mov    QWORD PTR [rsp+0x80],rax
   14000420e:	mov    rbx,rcx
   140004211:	cmp    BYTE PTR [rcx+0x54],0x0
   140004215:	jne    0x14000421e
   140004217:	xor    al,al
   140004219:	jmp    0x140004345
   14000421e:	mov    QWORD PTR [rsp+0x40],0xf
   140004227:	mov    QWORD PTR [rsp+0x38],0x0
   140004230:	mov    BYTE PTR [rsp+0x28],0x0
   140004235:	mov    r8d,0x1a
   14000423b:	lea    rdx,[rip+0x3955e]        # 0x14003d7a0
   140004242:	lea    rcx,[rsp+0x20]
   140004247:	call   0x140002a30
   14000424c:	lea    rdx,[rsp+0x20]
   140004251:	lea    rcx,[rsp+0x50]
   140004256:	call   0x140031560
   14000425b:	nop
   14000425c:	xor    edx,edx
   14000425e:	xor    ecx,ecx
   140004260:	lea    r8d,[rdx+0x1]
   140004264:	call   QWORD PTR [rip+0x31e06]        # 0x140036070
   14000426a:	mov    rsi,rax
   14000426d:	test   rax,rax
   140004270:	jne    0x14000429e
   140004272:	xor    r8d,r8d
   140004275:	mov    edx,0xc0000019
   14000427a:	lea    rcx,[rsp+0x50]
   14000427f:	call   0x140031a80
   140004284:	nop
   140004285:	cmp    QWORD PTR [rsp+0x70],0x10
   14000428b:	jb     0x140004297
   14000428d:	mov    rcx,QWORD PTR [rsp+0x58]
   140004292:	call   0x1400062d4
   140004297:	xor    al,al
   140004299:	jmp    0x140004345
   14000429e:	cmp    QWORD PTR [rbx+0x20],0x10
   1400042a3:	jb     0x1400042ab
   1400042a5:	mov    rdx,QWORD PTR [rbx+0x8]
   1400042a9:	jmp    0x1400042af
   1400042ab:	lea    rdx,[rbx+0x8]
   1400042af:	mov    r8d,0xf003f
   1400042b5:	mov    rcx,rax
   1400042b8:	call   QWORD PTR [rip+0x31daa]        # 0x140036068
   1400042be:	mov    rbx,rax
   1400042c1:	test   rax,rax
   1400042c4:	jne    0x1400042f8
   1400042c6:	xor    r8d,r8d
   1400042c9:	mov    edx,0xc0000020
   1400042ce:	lea    rcx,[rsp+0x50]
   1400042d3:	call   0x140031a80
   1400042d8:	mov    rcx,rsi
   1400042db:	call   QWORD PTR [rip+0x31d7f]        # 0x140036060
   1400042e1:	nop
   1400042e2:	cmp    QWORD PTR [rsp+0x70],0x10
   1400042e8:	jb     0x1400042f4
   1400042ea:	mov    rcx,QWORD PTR [rsp+0x58]
   1400042ef:	call   0x1400062d4
   1400042f4:	xor    al,al
   1400042f6:	jmp    0x140004345
   1400042f8:	mov    dil,0x1
   1400042fb:	mov    rcx,rax
   1400042fe:	call   QWORD PTR [rip+0x31d3c]        # 0x140036040
   140004304:	test   eax,eax
   140004306:	je     0x14000431d
   140004308:	xor    r8d,r8d
   14000430b:	mov    edx,0xc0000025
   140004310:	lea    rcx,[rsp+0x50]
   140004315:	call   0x140031a80
   14000431a:	xor    dil,dil
   14000431d:	mov    rcx,rbx
   140004320:	call   QWORD PTR [rip+0x31d3a]        # 0x140036060
   140004326:	mov    rcx,rsi
   140004329:	call   QWORD PTR [rip+0x31d31]        # 0x140036060
   14000432f:	nop
   140004330:	cmp    QWORD PTR [rsp+0x70],0x10
   140004336:	jb     0x140004342
   140004338:	mov    rcx,QWORD PTR [rsp+0x58]
   14000433d:	call   0x1400062d4
   140004342:	mov    al,dil
   140004345:	mov    rcx,QWORD PTR [rsp+0x80]
   14000434d:	xor    rcx,rsp
   140004350:	call   0x1400144f0
   140004355:	lea    r11,[rsp+0x90]
   14000435d:	mov    rbx,QWORD PTR [r11+0x18]
   140004361:	mov    rsi,QWORD PTR [r11+0x20]
   140004365:	mov    rsp,r11
   140004368:	pop    rdi
   140004369:	ret    
   14000436a:	int3   
   14000436b:	int3   
   14000436c:	int3   
   14000436d:	int3   
   14000436e:	int3   
   14000436f:	int3   
   140004370:	mov    r11,rsp
   140004373:	push   rsi
   140004374:	push   rdi
   140004375:	push   r12
   140004377:	push   r13
   140004379:	push   r14
   14000437b:	sub    rsp,0xa0
   140004382:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000438b:	mov    QWORD PTR [r11+0x18],rbx
   14000438f:	mov    QWORD PTR [r11+0x20],rbp
   140004393:	mov    rax,QWORD PTR [rip+0x44a26]        # 0x140048dc0
   14000439a:	xor    rax,rsp
   14000439d:	mov    QWORD PTR [rsp+0x98],rax
   1400043a5:	mov    rbx,rdx
   1400043a8:	mov    rsi,rcx
   1400043ab:	mov    QWORD PTR [r11-0x38],rdx
   1400043af:	cmp    BYTE PTR [rcx+0x54],0x0
   1400043b3:	jne    0x1400043de
   1400043b5:	cmp    QWORD PTR [rdx+0x20],0x10
   1400043ba:	jb     0x1400043c5
   1400043bc:	mov    rcx,QWORD PTR [rdx+0x8]
   1400043c0:	call   0x1400062d4
   1400043c5:	mov    QWORD PTR [rbx+0x20],0xf
   1400043cd:	xor    edi,edi
   1400043cf:	mov    QWORD PTR [rbx+0x18],rdi
   1400043d3:	mov    BYTE PTR [rbx+0x8],dil
   1400043d7:	xor    al,al
   1400043d9:	jmp    0x1400046f6
   1400043de:	lea    rdx,[rsp+0x20]
   1400043e3:	lea    rcx,[rsp+0x24]
   1400043e8:	call   0x140004eb0
   1400043ed:	test   al,al
   1400043ef:	je     0x1400046d2
   1400043f5:	mov    eax,DWORD PTR [rsp+0x24]
   1400043f9:	cmp    eax,0x4
   1400043fc:	je     0x1400046d2
   140004402:	cmp    eax,0x6
   140004405:	je     0x1400046d2
   14000440b:	cmp    eax,0x7
   14000440e:	je     0x1400046d2
   140004414:	cmp    eax,0x8
   140004417:	je     0x1400046d2
   14000441d:	cmp    eax,0x9
   140004420:	je     0x1400046d2
   140004426:	cmp    eax,0x3
   140004429:	jne    0x140004436
   14000442b:	cmp    DWORD PTR [rsp+0x20],0x2
   140004430:	jne    0x1400046d2
   140004436:	cmp    QWORD PTR [rbx+0x18],0x0
   14000443b:	jne    0x140004466
   14000443d:	cmp    QWORD PTR [rbx+0x20],0x10
   140004442:	jb     0x14000444d
   140004444:	mov    rcx,QWORD PTR [rbx+0x8]
   140004448:	call   0x1400062d4
   14000444d:	mov    QWORD PTR [rbx+0x20],0xf
   140004455:	xor    edi,edi
   140004457:	mov    QWORD PTR [rbx+0x18],rdi
   14000445b:	mov    BYTE PTR [rbx+0x8],dil
   14000445f:	mov    al,0x1
   140004461:	jmp    0x1400046f6
   140004466:	lea    rcx,[rip+0x39413]        # 0x14003d880
   14000446d:	call   QWORD PTR [rip+0x3202d]        # 0x1400364a0
   140004473:	mov    rcx,rax
   140004476:	lea    rdx,[rip+0x393eb]        # 0x14003d868
   14000447d:	call   QWORD PTR [rip+0x32025]        # 0x1400364a8
   140004483:	mov    r14,rax
   140004486:	test   rax,rax
   140004489:	jne    0x14000449a
   14000448b:	mov    rcx,rbx
   14000448e:	call   0x140001260
   140004493:	xor    al,al
   140004495:	jmp    0x1400046f6
   14000449a:	mov    QWORD PTR [rsp+0x58],0xf
   1400044a3:	xor    edi,edi
   1400044a5:	mov    QWORD PTR [rsp+0x50],rdi
   1400044aa:	mov    BYTE PTR [rsp+0x40],dil
   1400044af:	lea    r8d,[rdi+0x1a]
   1400044b3:	lea    rdx,[rip+0x392e6]        # 0x14003d7a0
   1400044ba:	lea    rcx,[rsp+0x38]
   1400044bf:	call   0x140002a30
   1400044c4:	lea    rdx,[rsp+0x38]
   1400044c9:	lea    rcx,[rsp+0x60]
   1400044ce:	call   0x140031560
   1400044d3:	nop
   1400044d4:	xor    edx,edx
   1400044d6:	xor    ecx,ecx
   1400044d8:	mov    r8d,0xf003f
   1400044de:	call   QWORD PTR [rip+0x31b8c]        # 0x140036070
   1400044e4:	mov    rbp,rax
   1400044e7:	test   rax,rax
   1400044ea:	jne    0x140004539
   1400044ec:	xor    r8d,r8d
   1400044ef:	mov    edx,0xc0000019
   1400044f4:	lea    rcx,[rsp+0x60]
   1400044f9:	call   0x140031a80
   1400044fe:	nop
   1400044ff:	cmp    QWORD PTR [rsp+0x80],0x10
   140004508:	jb     0x140004514
   14000450a:	mov    rcx,QWORD PTR [rsp+0x68]
   14000450f:	call   0x1400062d4
   140004514:	mov    QWORD PTR [rsp+0x80],0xf
   140004520:	mov    QWORD PTR [rsp+0x78],rdi
   140004525:	mov    BYTE PTR [rsp+0x68],0x0
   14000452a:	mov    rcx,rbx
   14000452d:	call   0x140001260
   140004532:	xor    al,al
   140004534:	jmp    0x1400046f6
   140004539:	mov    rcx,rax
   14000453c:	call   QWORD PTR [rip+0x31af6]        # 0x140036038
   140004542:	mov    r13,rax
   140004545:	test   rax,rax
   140004548:	jne    0x1400045a0
   14000454a:	xor    r8d,r8d
   14000454d:	mov    edx,0xc0000026
   140004552:	lea    rcx,[rsp+0x60]
   140004557:	call   0x140031a80
   14000455c:	mov    rcx,rbp
   14000455f:	call   QWORD PTR [rip+0x31afb]        # 0x140036060
   140004565:	nop
   140004566:	cmp    QWORD PTR [rsp+0x80],0x10
   14000456f:	jb     0x14000457b
   140004571:	mov    rcx,QWORD PTR [rsp+0x68]
   140004576:	call   0x1400062d4
   14000457b:	mov    QWORD PTR [rsp+0x80],0xf
   140004587:	mov    QWORD PTR [rsp+0x78],rdi
   14000458c:	mov    BYTE PTR [rsp+0x68],0x0
   140004591:	mov    rcx,rbx
   140004594:	call   0x140001260
   140004599:	xor    al,al
   14000459b:	jmp    0x1400046f6
   1400045a0:	cmp    QWORD PTR [rsi+0x20],0x10
   1400045a5:	jb     0x1400045ad
   1400045a7:	mov    rdx,QWORD PTR [rsi+0x8]
   1400045ab:	jmp    0x1400045b1
   1400045ad:	lea    rdx,[rsi+0x8]
   1400045b1:	mov    r8d,0x2
   1400045b7:	mov    rcx,rbp
   1400045ba:	call   QWORD PTR [rip+0x31aa8]        # 0x140036068
   1400045c0:	mov    r12,rax
   1400045c3:	test   rax,rax
   1400045c6:	jne    0x14000461e
   1400045c8:	xor    r8d,r8d
   1400045cb:	mov    edx,0xc0000020
   1400045d0:	lea    rcx,[rsp+0x60]
   1400045d5:	call   0x140031a80
   1400045da:	mov    rcx,rbp
   1400045dd:	call   QWORD PTR [rip+0x31a7d]        # 0x140036060
   1400045e3:	nop
   1400045e4:	cmp    QWORD PTR [rsp+0x80],0x10
   1400045ed:	jb     0x1400045f9
   1400045ef:	mov    rcx,QWORD PTR [rsp+0x68]
   1400045f4:	call   0x1400062d4
   1400045f9:	mov    QWORD PTR [rsp+0x80],0xf
   140004605:	mov    QWORD PTR [rsp+0x78],rdi
   14000460a:	mov    BYTE PTR [rsp+0x68],0x0
   14000460f:	mov    rcx,rbx
   140004612:	call   0x140001260
   140004617:	xor    al,al
   140004619:	jmp    0x1400046f6
   14000461e:	mov    sil,0x1
   140004621:	cmp    QWORD PTR [rbx+0x20],0x10
   140004626:	jb     0x140004633
   140004628:	mov    rax,QWORD PTR [rbx+0x8]
   14000462c:	mov    QWORD PTR [rsp+0x28],rax
   140004631:	jmp    0x14000463c
   140004633:	lea    rax,[rbx+0x8]
   140004637:	mov    QWORD PTR [rsp+0x28],rax
   14000463c:	lea    r8,[rsp+0x28]
   140004641:	mov    edx,0x1
   140004646:	mov    rcx,r12
   140004649:	call   r14
   14000464c:	test   eax,eax
   14000464e:	jne    0x140004665
   140004650:	xor    r8d,r8d
   140004653:	mov    edx,0xc0000028
   140004658:	lea    rcx,[rsp+0x60]
   14000465d:	call   0x140031a80
   140004662:	xor    sil,sil
   140004665:	mov    rcx,r13
   140004668:	call   QWORD PTR [rip+0x319c2]        # 0x140036030
   14000466e:	test   eax,eax
   140004670:	jne    0x140004687
   140004672:	xor    r8d,r8d
   140004675:	mov    edx,0xc0000027
   14000467a:	lea    rcx,[rsp+0x60]
   14000467f:	call   0x140031a80
   140004684:	xor    sil,sil
   140004687:	mov    rcx,r12
   14000468a:	call   QWORD PTR [rip+0x319d0]        # 0x140036060
   140004690:	mov    rcx,rbp
   140004693:	call   QWORD PTR [rip+0x319c7]        # 0x140036060
   140004699:	nop
   14000469a:	cmp    QWORD PTR [rsp+0x80],0x10
   1400046a3:	jb     0x1400046af
   1400046a5:	mov    rcx,QWORD PTR [rsp+0x68]
   1400046aa:	call   0x1400062d4
   1400046af:	mov    QWORD PTR [rsp+0x80],0xf
   1400046bb:	mov    QWORD PTR [rsp+0x78],rdi
   1400046c0:	mov    BYTE PTR [rsp+0x68],0x0
   1400046c5:	mov    rcx,rbx
   1400046c8:	call   0x140001260
   1400046cd:	mov    al,sil
   1400046d0:	jmp    0x1400046f6
   1400046d2:	cmp    QWORD PTR [rbx+0x20],0x10
   1400046d7:	jb     0x1400046e2
   1400046d9:	mov    rcx,QWORD PTR [rbx+0x8]
   1400046dd:	call   0x1400062d4
   1400046e2:	mov    QWORD PTR [rbx+0x20],0xf
   1400046ea:	xor    edi,edi
   1400046ec:	mov    QWORD PTR [rbx+0x18],rdi
   1400046f0:	mov    BYTE PTR [rbx+0x8],dil
   1400046f4:	xor    al,al
   1400046f6:	mov    rcx,QWORD PTR [rsp+0x98]
   1400046fe:	xor    rcx,rsp
   140004701:	call   0x1400144f0
   140004706:	lea    r11,[rsp+0xa0]
   14000470e:	mov    rbx,QWORD PTR [r11+0x40]
   140004712:	mov    rbp,QWORD PTR [r11+0x48]
   140004716:	mov    rsp,r11
   140004719:	pop    r14
   14000471b:	pop    r13
   14000471d:	pop    r12
   14000471f:	pop    rdi
   140004720:	pop    rsi
   140004721:	ret    
   140004722:	int3   
   140004723:	int3   
   140004724:	int3   
   140004725:	int3   
   140004726:	int3   
   140004727:	int3   
   140004728:	int3   
   140004729:	int3   
   14000472a:	int3   
   14000472b:	int3   
   14000472c:	int3   
   14000472d:	int3   
   14000472e:	int3   
   14000472f:	int3   
   140004730:	mov    rax,rsp
   140004733:	push   rdi
   140004734:	sub    rsp,0x180
   14000473b:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140004744:	mov    QWORD PTR [rax+0x8],rbx
   140004748:	mov    QWORD PTR [rax+0x18],rbp
   14000474c:	mov    QWORD PTR [rax+0x20],rsi
   140004750:	mov    rax,QWORD PTR [rip+0x44669]        # 0x140048dc0
   140004757:	xor    rax,rsp
   14000475a:	mov    QWORD PTR [rsp+0x170],rax
   140004762:	mov    rbp,rdx
   140004765:	mov    QWORD PTR [rsp+0x50],0xf
   14000476e:	mov    QWORD PTR [rsp+0x48],0x0
   140004777:	mov    BYTE PTR [rsp+0x38],0x0
   14000477c:	mov    r8d,0x10
   140004782:	lea    rdx,[rip+0x39107]        # 0x14003d890
   140004789:	lea    rcx,[rsp+0x30]
   14000478e:	call   0x140002a30
   140004793:	nop
   140004794:	mov    rcx,QWORD PTR [rsp+0x38]
   140004799:	mov    rdx,QWORD PTR [rsp+0x50]
   14000479e:	cmp    rdx,0x10
   1400047a2:	jb     0x1400047ae
   1400047a4:	mov    rdi,rcx
   1400047a7:	test   rcx,rcx
   1400047aa:	je     0x1400047df
   1400047ac:	jmp    0x1400047b3
   1400047ae:	lea    rdi,[rsp+0x38]
   1400047b3:	lea    rax,[rsp+0x38]
   1400047b8:	cmp    rdx,0x10
   1400047bc:	cmovae rax,rcx
   1400047c0:	cmp    rax,rdi
   1400047c3:	ja     0x1400047df
   1400047c5:	lea    rax,[rsp+0x38]
   1400047ca:	cmp    rdx,0x10
   1400047ce:	cmovae rax,rcx
   1400047d2:	mov    r8,QWORD PTR [rsp+0x48]
   1400047d7:	add    rax,r8
   1400047da:	cmp    rdi,rax
   1400047dd:	jbe    0x1400047f3
   1400047df:	call   0x140014a30
   1400047e4:	mov    rdx,QWORD PTR [rsp+0x50]
   1400047e9:	mov    r8,QWORD PTR [rsp+0x48]
   1400047ee:	mov    rcx,QWORD PTR [rsp+0x38]
   1400047f3:	lea    rsi,[rsp+0x38]
   1400047f8:	cmp    rdx,0x10
   1400047fc:	cmovae rsi,rcx
   140004800:	add    rsi,r8
   140004803:	je     0x14000482c
   140004805:	lea    rax,[rsp+0x38]
   14000480a:	cmp    rdx,0x10
   14000480e:	cmovae rax,rcx
   140004812:	cmp    rax,rsi
   140004815:	ja     0x14000482c
   140004817:	lea    rax,[rsp+0x38]
   14000481c:	cmp    rdx,0x10
   140004820:	cmovae rax,rcx
   140004824:	add    rax,r8
   140004827:	cmp    rsi,rax
   14000482a:	jbe    0x140004840
   14000482c:	call   0x140014a30
   140004831:	mov    rdx,QWORD PTR [rsp+0x50]
   140004836:	mov    r8,QWORD PTR [rsp+0x48]
   14000483b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004840:	cmp    rdx,0x10
   140004844:	jb     0x140004850
   140004846:	mov    rbx,rcx
   140004849:	test   rcx,rcx
   14000484c:	je     0x14000487c
   14000484e:	jmp    0x140004855
   140004850:	lea    rbx,[rsp+0x38]
   140004855:	lea    rax,[rsp+0x38]
   14000485a:	cmp    rdx,0x10
   14000485e:	cmovae rax,rcx
   140004862:	cmp    rax,rbx
   140004865:	ja     0x14000487c
   140004867:	lea    rax,[rsp+0x38]
   14000486c:	cmp    rdx,0x10
   140004870:	cmovae rax,rcx
   140004874:	add    rax,r8
   140004877:	cmp    rbx,rax
   14000487a:	jbe    0x140004890
   14000487c:	call   0x140014a30
   140004881:	mov    rdx,QWORD PTR [rsp+0x50]
   140004886:	mov    r8,QWORD PTR [rsp+0x48]
   14000488b:	mov    rcx,QWORD PTR [rsp+0x38]
   140004890:	mov    r9,rsi
   140004893:	sub    r9,rbx
   140004896:	lea    rax,[rsp+0x30]
   14000489b:	cmp    rax,0xfffffffffffffffc
   14000489f:	je     0x1400048d1
   1400048a1:	lea    rax,[rsp+0x38]
   1400048a6:	cmp    rdx,0x10
   1400048aa:	cmovae rax,rcx
   1400048ae:	lea    r10,[rdi+r9*1]
   1400048b2:	add    rax,r8
   1400048b5:	cmp    r10,rax
   1400048b8:	ja     0x1400048cc
   1400048ba:	lea    rax,[rsp+0x38]
   1400048bf:	cmp    rdx,0x10
   1400048c3:	cmovae rax,rcx
   1400048c7:	cmp    r10,rax
   1400048ca:	jae    0x1400048d1
   1400048cc:	call   0x140014a30
   1400048d1:	cmp    rbx,rsi
   1400048d4:	je     0x1400048f3
   1400048d6:	sub    rdi,rbx
   1400048d9:	nop    DWORD PTR [rax+0x0]
   1400048e0:	movsx  ecx,BYTE PTR [rbx]
   1400048e3:	call   0x140014c88
   1400048e8:	mov    BYTE PTR [rbx+rdi*1],al
   1400048eb:	inc    rbx
   1400048ee:	cmp    rbx,rsi
   1400048f1:	jne    0x1400048e0
   1400048f3:	mov    rcx,rbp
   1400048f6:	call   0x1400050c0
   1400048fb:	xor    ecx,ecx
   1400048fd:	call   QWORD PTR [rip+0x31b9d]        # 0x1400364a0
   140004903:	mov    rbx,rax
   140004906:	test   rax,rax
   140004909:	jne    0x140004924
   14000490b:	cmp    QWORD PTR [rsp+0x50],0x10
   140004911:	jb     0x14000491d
   140004913:	mov    rcx,QWORD PTR [rsp+0x38]
   140004918:	call   0x1400062d4
   14000491d:	xor    al,al
   14000491f:	jmp    0x140004a07
   140004924:	mov    BYTE PTR [rsp+0x60],0x0
   140004929:	xor    edx,edx
   14000492b:	mov    r8d,0x104
   140004931:	lea    rcx,[rsp+0x61]
   140004936:	call   0x140015b00
   14000493b:	mov    r8d,0x104
   140004941:	lea    rdx,[rsp+0x60]
   140004946:	mov    rcx,rbx
   140004949:	call   QWORD PTR [rip+0x31b91]        # 0x1400364e0
   14000494f:	mov    ebx,eax
   140004951:	test   eax,eax
   140004953:	jne    0x14000496e
   140004955:	cmp    QWORD PTR [rsp+0x50],0x10
   14000495b:	jb     0x140004967
   14000495d:	mov    rcx,QWORD PTR [rsp+0x38]
   140004962:	call   0x1400062d4
   140004967:	xor    al,al
   140004969:	jmp    0x140004a07
   14000496e:	lea    edx,[rbx+0x1]
   140004971:	lea    rcx,[rsp+0x60]
   140004976:	call   0x140014f08
   14000497b:	mov    r8,rbx
   14000497e:	lea    rdx,[rsp+0x60]
   140004983:	mov    rcx,rbp
   140004986:	call   0x140002a30
   14000498b:	mov    BYTE PTR [rsp+0x20],0x5c
   140004990:	mov    r9d,0x1
   140004996:	or     r8,0xffffffffffffffff
   14000499a:	lea    rdx,[rsp+0x20]
   14000499f:	mov    rcx,rbp
   1400049a2:	call   0x140005460
   1400049a7:	mov    rbx,rax
   1400049aa:	lea    rdx,[rsp+0x38]
   1400049af:	cmp    QWORD PTR [rsp+0x50],0x10
   1400049b5:	cmovae rdx,QWORD PTR [rsp+0x38]
   1400049bb:	mov    r9,QWORD PTR [rsp+0x48]
   1400049c0:	xor    r8d,r8d
   1400049c3:	mov    rcx,rbp
   1400049c6:	call   0x140005360
   1400049cb:	lea    rcx,[rbx+0x1]
   1400049cf:	cmp    rcx,rax
   1400049d2:	jne    0x1400049ea
   1400049d4:	cmp    QWORD PTR [rsp+0x50],0x10
   1400049da:	jb     0x1400049e6
   1400049dc:	mov    rcx,QWORD PTR [rsp+0x38]
   1400049e1:	call   0x1400062d4
   1400049e6:	mov    al,0x1
   1400049e8:	jmp    0x140004a07
   1400049ea:	mov    rcx,rbp
   1400049ed:	call   0x1400050c0
   1400049f2:	nop
   1400049f3:	cmp    QWORD PTR [rsp+0x50],0x10
   1400049f9:	jb     0x140004a05
   1400049fb:	mov    rcx,QWORD PTR [rsp+0x38]
   140004a00:	call   0x1400062d4
   140004a05:	xor    al,al
   140004a07:	mov    rcx,QWORD PTR [rsp+0x170]
   140004a0f:	xor    rcx,rsp
   140004a12:	call   0x1400144f0
   140004a17:	lea    r11,[rsp+0x180]
   140004a1f:	mov    rbx,QWORD PTR [r11+0x10]
   140004a23:	mov    rbp,QWORD PTR [r11+0x20]
   140004a27:	mov    rsi,QWORD PTR [r11+0x28]
   140004a2b:	mov    rsp,r11
   140004a2e:	pop    rdi
   140004a2f:	ret    
   140004a30:	mov    r11,rsp
   140004a33:	push   rbp
   140004a34:	push   rsi
   140004a35:	push   rdi
   140004a36:	push   r12
   140004a38:	push   r13
   140004a3a:	sub    rsp,0xc0
   140004a41:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   140004a4a:	mov    QWORD PTR [r11+0x18],rbx
   140004a4e:	mov    rax,QWORD PTR [rip+0x4436b]        # 0x140048dc0
   140004a55:	xor    rax,rsp
   140004a58:	mov    QWORD PTR [rsp+0xb8],rax
   140004a60:	mov    rbx,rdx
   140004a63:	mov    rdi,rcx
   140004a66:	mov    QWORD PTR [r11-0x38],rdx
   140004a6a:	cmp    BYTE PTR [rcx+0x54],0x0
   140004a6e:	jne    0x140004a99
   140004a70:	cmp    QWORD PTR [rdx+0x20],0x10
   140004a75:	jb     0x140004a80
   140004a77:	mov    rcx,QWORD PTR [rdx+0x8]
   140004a7b:	call   0x1400062d4
   140004a80:	mov    QWORD PTR [rbx+0x20],0xf
   140004a88:	xor    esi,esi
   140004a8a:	mov    QWORD PTR [rbx+0x18],rsi
   140004a8e:	mov    BYTE PTR [rbx+0x8],sil
   140004a92:	xor    al,al
   140004a94:	jmp    0x140004e80
   140004a99:	mov    QWORD PTR [rsp+0x48],0xf
   140004aa2:	xor    esi,esi
   140004aa4:	mov    QWORD PTR [rsp+0x40],rsi
   140004aa9:	mov    BYTE PTR [rsp+0x30],sil
   140004aae:	lea    r8d,[rsi+0x1a]
   140004ab2:	lea    rdx,[rip+0x38ce7]        # 0x14003d7a0
   140004ab9:	lea    rcx,[rsp+0x28]
   140004abe:	call   0x140002a30
   140004ac3:	lea    rdx,[rsp+0x28]
   140004ac8:	lea    rcx,[rsp+0x58]
   140004acd:	call   0x140031560
   140004ad2:	nop
   140004ad3:	xor    edx,edx
   140004ad5:	xor    ecx,ecx
   140004ad7:	lea    r8d,[rsi+0x1]
   140004adb:	call   QWORD PTR [rip+0x3158f]        # 0x140036070
   140004ae1:	mov    r12,rax
   140004ae4:	test   rax,rax
   140004ae7:	jne    0x140004b48
   140004ae9:	xor    r8d,r8d
   140004aec:	mov    edx,0xc0000019
   140004af1:	lea    rcx,[rsp+0x58]
   140004af6:	call   0x140031a80
   140004afb:	nop
   140004afc:	cmp    QWORD PTR [rsp+0x78],0x10
   140004b02:	jb     0x140004b0e
   140004b04:	mov    rcx,QWORD PTR [rsp+0x60]
   140004b09:	call   0x1400062d4
   140004b0e:	mov    QWORD PTR [rsp+0x78],0xf
   140004b17:	mov    QWORD PTR [rsp+0x70],rsi
   140004b1c:	mov    BYTE PTR [rsp+0x60],0x0
   140004b21:	cmp    QWORD PTR [rbx+0x20],0x10
   140004b26:	jb     0x140004b31
   140004b28:	mov    rcx,QWORD PTR [rbx+0x8]
   140004b2c:	call   0x1400062d4
   140004b31:	mov    QWORD PTR [rbx+0x20],0xf
   140004b39:	mov    QWORD PTR [rbx+0x18],rsi
   140004b3d:	mov    BYTE PTR [rbx+0x8],0x0
   140004b41:	xor    al,al
   140004b43:	jmp    0x140004e80
   140004b48:	cmp    QWORD PTR [rdi+0x20],0x10
   140004b4d:	jb     0x140004b55
   140004b4f:	mov    rdx,QWORD PTR [rdi+0x8]
   140004b53:	jmp    0x140004b59
   140004b55:	lea    rdx,[rdi+0x8]
   140004b59:	mov    r8d,0x1
   140004b5f:	mov    rcx,rax
   140004b62:	call   QWORD PTR [rip+0x31500]        # 0x140036068
   140004b68:	mov    r13,rax
   140004b6b:	test   rax,rax
   140004b6e:	jne    0x140004bd8
   140004b70:	xor    r8d,r8d
   140004b73:	mov    edx,0xc0000020
   140004b78:	lea    rcx,[rsp+0x58]
   140004b7d:	call   0x140031a80
   140004b82:	mov    rcx,r12
   140004b85:	call   QWORD PTR [rip+0x314d5]        # 0x140036060
   140004b8b:	nop
   140004b8c:	cmp    QWORD PTR [rsp+0x78],0x10
   140004b92:	jb     0x140004b9e
   140004b94:	mov    rcx,QWORD PTR [rsp+0x60]
   140004b99:	call   0x1400062d4
   140004b9e:	mov    QWORD PTR [rsp+0x78],0xf
   140004ba7:	mov    QWORD PTR [rsp+0x70],rsi
   140004bac:	mov    BYTE PTR [rsp+0x60],0x0
   140004bb1:	cmp    QWORD PTR [rbx+0x20],0x10
   140004bb6:	jb     0x140004bc1
   140004bb8:	mov    rcx,QWORD PTR [rbx+0x8]
   140004bbc:	call   0x1400062d4
   140004bc1:	mov    QWORD PTR [rbx+0x20],0xf
   140004bc9:	mov    QWORD PTR [rbx+0x18],rsi
   140004bcd:	mov    BYTE PTR [rbx+0x8],0x0
   140004bd1:	xor    al,al
   140004bd3:	jmp    0x140004e80
   140004bd8:	mov    edx,0x1000
   140004bdd:	mov    ecx,0x40
   140004be2:	call   QWORD PTR [rip+0x318b0]        # 0x140036498
   140004be8:	mov    rbp,rax
   140004beb:	test   rax,rax
   140004bee:	jne    0x140004c49
   140004bf0:	xor    r8d,r8d
   140004bf3:	mov    edx,0xc0000030
   140004bf8:	lea    rcx,[rsp+0x58]
   140004bfd:	call   0x140031a80
   140004c02:	mov    rcx,r13
   140004c05:	call   QWORD PTR [rip+0x31455]        # 0x140036060
   140004c0b:	mov    rcx,r12
   140004c0e:	call   QWORD PTR [rip+0x3144c]        # 0x140036060
   140004c14:	nop
   140004c15:	cmp    QWORD PTR [rsp+0x78],0x10
   140004c1b:	jb     0x140004c27
   140004c1d:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c22:	call   0x1400062d4
   140004c27:	mov    QWORD PTR [rsp+0x78],0xf
   140004c30:	mov    QWORD PTR [rsp+0x70],rsi
   140004c35:	mov    BYTE PTR [rsp+0x60],0x0
   140004c3a:	mov    rcx,rbx
   140004c3d:	call   0x140001260
   140004c42:	xor    al,al
   140004c44:	jmp    0x140004e80
   140004c49:	lea    r9,[rsp+0x20]
   140004c4e:	mov    r8d,0x1000
   140004c54:	mov    rdx,rax
   140004c57:	mov    rcx,r13
   140004c5a:	call   QWORD PTR [rip+0x313c8]        # 0x140036028
   140004c60:	test   eax,eax
   140004c62:	jne    0x140004cc6
   140004c64:	xor    r8d,r8d
   140004c67:	mov    edx,0xc0000029
   140004c6c:	lea    rcx,[rsp+0x58]
   140004c71:	call   0x140031a80
   140004c76:	mov    rcx,rbp
   140004c79:	call   QWORD PTR [rip+0x31811]        # 0x140036490
   140004c7f:	mov    rcx,r13
   140004c82:	call   QWORD PTR [rip+0x313d8]        # 0x140036060
   140004c88:	mov    rcx,r12
   140004c8b:	call   QWORD PTR [rip+0x313cf]        # 0x140036060
   140004c91:	nop
   140004c92:	cmp    QWORD PTR [rsp+0x78],0x10
   140004c98:	jb     0x140004ca4
   140004c9a:	mov    rcx,QWORD PTR [rsp+0x60]
   140004c9f:	call   0x1400062d4
   140004ca4:	mov    QWORD PTR [rsp+0x78],0xf
   140004cad:	mov    QWORD PTR [rsp+0x70],rsi
   140004cb2:	mov    BYTE PTR [rsp+0x60],0x0
   140004cb7:	mov    rcx,rbx
   140004cba:	call   0x140001260
   140004cbf:	xor    al,al
   140004cc1:	jmp    0x140004e80
   140004cc6:	mov    r8,QWORD PTR [rbp+0x10]
   140004cca:	xor    eax,eax
   140004ccc:	or     rcx,0xffffffffffffffff
   140004cd0:	mov    rdi,r8
   140004cd3:	repnz scas al,BYTE PTR es:[rdi]
   140004cd5:	not    rcx
   140004cd8:	mov    rdx,rcx
   140004cdb:	mov    rcx,r8
   140004cde:	call   0x140014f08
   140004ce3:	mov    QWORD PTR [rsp+0xa8],0xf
   140004cef:	mov    QWORD PTR [rsp+0xa0],rsi
   140004cf7:	mov    BYTE PTR [rsp+0x90],0x0
   140004cff:	mov    rdx,QWORD PTR [rbp+0x10]
   140004d03:	cmp    BYTE PTR [rdx],0x22
   140004d06:	jne    0x140004d2c
   140004d08:	xor    eax,eax
   140004d0a:	or     rcx,0xffffffffffffffff
   140004d0e:	mov    rdi,rdx
   140004d11:	repnz scas al,BYTE PTR es:[rdi]
   140004d13:	not    rcx
   140004d16:	inc    rdx
   140004d19:	lea    r8,[rcx-0x3]
   140004d1d:	lea    rcx,[rsp+0x88]
   140004d25:	call   0x140002a30
   140004d2a:	jmp    0x140004d4b
   140004d2c:	xor    eax,eax
   140004d2e:	or     rcx,0xffffffffffffffff
   140004d32:	mov    rdi,rdx
   140004d35:	repnz scas al,BYTE PTR es:[rdi]
   140004d37:	not    rcx
   140004d3a:	lea    r8,[rcx-0x1]
   140004d3e:	lea    rcx,[rsp+0x88]
   140004d46:	call   0x140002a30
   140004d4b:	mov    rcx,rbp
   140004d4e:	call   QWORD PTR [rip+0x3173c]        # 0x140036490
   140004d54:	mov    rcx,r13
   140004d57:	call   QWORD PTR [rip+0x31303]        # 0x140036060
   140004d5d:	mov    rcx,r12
   140004d60:	call   QWORD PTR [rip+0x312fa]        # 0x140036060
   140004d66:	mov    rdi,QWORD PTR [rbx+0x18]
   140004d6a:	cmp    QWORD PTR [rbx+0x20],0x10
   140004d6f:	jb     0x140004d77
   140004d71:	mov    rdx,QWORD PTR [rbx+0x8]
   140004d75:	jmp    0x140004d7b
   140004d77:	lea    rdx,[rbx+0x8]
   140004d7b:	lea    rcx,[rsp+0x90]
   140004d83:	mov    r12,QWORD PTR [rsp+0x90]
   140004d8b:	mov    rbp,QWORD PTR [rsp+0xa8]
   140004d93:	cmp    rbp,0x10
   140004d97:	cmovae rcx,r12
   140004d9b:	mov    r8,rdi
   140004d9e:	mov    r13,QWORD PTR [rsp+0xa0]
   140004da6:	cmp    r13,rdi
   140004da9:	cmovb  r8,r13
   140004dad:	call   0x140016410
   140004db2:	movsxd rcx,eax
   140004db5:	test   eax,eax
   140004db7:	jne    0x140004dc8
   140004db9:	cmp    r13,rdi
   140004dbc:	jb     0x140004e27
   140004dbe:	mov    eax,esi
   140004dc0:	cmp    r13,rdi
   140004dc3:	setne  al
   140004dc6:	mov    ecx,eax
   140004dc8:	test   ecx,ecx
   140004dca:	jne    0x140004e27
   140004dcc:	cmp    rbp,0x10
   140004dd0:	jb     0x140004dda
   140004dd2:	mov    rcx,r12
   140004dd5:	call   0x1400062d4
   140004dda:	mov    QWORD PTR [rsp+0xa8],0xf
   140004de6:	mov    QWORD PTR [rsp+0xa0],rsi
   140004dee:	mov    BYTE PTR [rsp+0x90],0x0
   140004df6:	cmp    QWORD PTR [rsp+0x78],0x10
   140004dfc:	jb     0x140004e08
   140004dfe:	mov    rcx,QWORD PTR [rsp+0x60]
   140004e03:	call   0x1400062d4
   140004e08:	mov    QWORD PTR [rsp+0x78],0xf
   140004e11:	mov    QWORD PTR [rsp+0x70],rsi
   140004e16:	mov    BYTE PTR [rsp+0x60],0x0
   140004e1b:	mov    rcx,rbx
   140004e1e:	call   0x140001260
   140004e23:	mov    al,0x1
   140004e25:	jmp    0x140004e80
   140004e27:	cmp    rbp,0x10
   140004e2b:	jb     0x140004e35
   140004e2d:	mov    rcx,r12
   140004e30:	call   0x1400062d4
   140004e35:	mov    QWORD PTR [rsp+0xa8],0xf
   140004e41:	mov    QWORD PTR [rsp+0xa0],rsi
   140004e49:	mov    BYTE PTR [rsp+0x90],0x0
   140004e51:	cmp    QWORD PTR [rsp+0x78],0x10
   140004e57:	jb     0x140004e63
   140004e59:	mov    rcx,QWORD PTR [rsp+0x60]
   140004e5e:	call   0x1400062d4
   140004e63:	mov    QWORD PTR [rsp+0x78],0xf
   140004e6c:	mov    QWORD PTR [rsp+0x70],rsi
   140004e71:	mov    BYTE PTR [rsp+0x60],0x0
   140004e76:	mov    rcx,rbx
   140004e79:	call   0x140001260
   140004e7e:	xor    al,al
   140004e80:	mov    rcx,QWORD PTR [rsp+0xb8]
   140004e88:	xor    rcx,rsp
   140004e8b:	call   0x1400144f0
   140004e90:	mov    rbx,QWORD PTR [rsp+0x100]
   140004e98:	add    rsp,0xc0
   140004e9f:	pop    r13
   140004ea1:	pop    r12
   140004ea3:	pop    rdi
   140004ea4:	pop    rsi
   140004ea5:	pop    rbp
   140004ea6:	ret    
   140004ea7:	int3   
   140004ea8:	int3   
   140004ea9:	int3   
   140004eaa:	int3   
   140004eab:	int3   
   140004eac:	int3   
   140004ead:	int3   
   140004eae:	int3   
   140004eaf:	int3   
   140004eb0:	mov    QWORD PTR [rsp+0x18],rbx
   140004eb5:	mov    QWORD PTR [rsp+0x20],rsi
   140004eba:	push   rdi
   140004ebb:	sub    rsp,0x100
   140004ec2:	mov    rax,QWORD PTR [rip+0x43ef7]        # 0x140048dc0
   140004ec9:	xor    rax,rsp
   140004ecc:	mov    QWORD PTR [rsp+0xf0],rax
   140004ed4:	xor    eax,eax
   140004ed6:	mov    DWORD PTR [rcx],0xa
   140004edc:	mov    rbx,rcx
   140004edf:	mov    rdi,rdx
   140004ee2:	mov    DWORD PTR [rdx],0x5
   140004ee8:	lea    rcx,[rsp+0x50]
   140004eed:	xor    edx,edx
   140004eef:	mov    r8d,0x9c
   140004ef5:	mov    QWORD PTR [rsp+0x20],rax
   140004efa:	mov    QWORD PTR [rsp+0x28],rax
   140004eff:	mov    QWORD PTR [rsp+0x30],rax
   140004f04:	mov    QWORD PTR [rsp+0x38],rax
   140004f09:	mov    QWORD PTR [rsp+0x40],rax
   140004f0e:	mov    QWORD PTR [rsp+0x48],rax
   140004f13:	call   0x140015b00
   140004f18:	lea    rcx,[rsp+0x50]
   140004f1d:	mov    DWORD PTR [rsp+0x50],0x9c
   140004f25:	call   QWORD PTR [rip+0x3155d]        # 0x140036488
   140004f2b:	mov    esi,eax
   140004f2d:	test   eax,eax
   140004f2f:	jne    0x140004f4c
   140004f31:	lea    rcx,[rsp+0x50]
   140004f36:	mov    DWORD PTR [rsp+0x50],0x94
   140004f3e:	call   QWORD PTR [rip+0x31544]        # 0x140036488
   140004f44:	test   eax,eax
   140004f46:	je     0x140005092
   140004f4c:	lea    rcx,[rsp+0x20]
   140004f51:	call   QWORD PTR [rip+0x31529]        # 0x140036480
   140004f57:	mov    r11d,DWORD PTR [rsp+0x60]
   140004f5c:	test   r11d,r11d
   140004f5f:	je     0x14000508a
   140004f65:	sub    r11d,0x1
   140004f69:	je     0x140005033
   140004f6f:	cmp    r11d,0x1
   140004f73:	jne    0x140005090
   140004f79:	mov    ecx,DWORD PTR [rsp+0x54]
   140004f7d:	mov    r8,QWORD PTR [rsp+0x20]
   140004f82:	movzx  edx,BYTE PTR [rsp+0xea]
   140004f8a:	cmp    ecx,0x6
   140004f8d:	jne    0x140004fa2
   140004f8f:	cmp    DWORD PTR [rsp+0x58],0x0
   140004f94:	jne    0x140004fee
   140004f96:	xor    eax,eax
   140004f98:	cmp    dl,r11b
   140004f9b:	setne  al
   140004f9e:	mov    DWORD PTR [rbx],eax
   140004fa0:	jmp    0x140004fee
   140004fa2:	cmp    ecx,0x5
   140004fa5:	jne    0x140004fe3
   140004fa7:	mov    eax,DWORD PTR [rsp+0x58]
   140004fab:	cmp    eax,0x2
   140004fae:	jne    0x140004fca
   140004fb0:	cmp    dl,0x1
   140004fb3:	jne    0x140004fc2
   140004fb5:	cmp    r8w,0x9
   140004fba:	jne    0x140004fc2
   140004fbc:	mov    DWORD PTR [rbx],ecx
   140004fbe:	mov    DWORD PTR [rdi],eax
   140004fc0:	jmp    0x140004fee
   140004fc2:	mov    DWORD PTR [rbx],0x2
   140004fc8:	jmp    0x140004fee
   140004fca:	cmp    eax,0x1
   140004fcd:	jne    0x140004fd7
   140004fcf:	mov    DWORD PTR [rbx],0x5
   140004fd5:	jmp    0x140004fee
   140004fd7:	test   eax,eax
   140004fd9:	jne    0x140004fee
   140004fdb:	mov    DWORD PTR [rbx],0x3
   140004fe1:	jmp    0x140004fee
   140004fe3:	cmp    ecx,0x4
   140004fe6:	ja     0x140004fee
   140004fe8:	mov    DWORD PTR [rbx],0x4
   140004fee:	test   esi,esi
   140004ff0:	je     0x140005090
   140004ff6:	cmp    dl,0x1
   140004ff9:	jne    0x140005090
   140004fff:	cmp    r8w,0x9
   140005004:	je     0x140005090
   14000500a:	cmp    ecx,0x4
   14000500d:	jne    0x140005017
   14000500f:	mov    DWORD PTR [rdi],0x0
   140005015:	jmp    0x140005090
   140005017:	movzx  eax,WORD PTR [rsp+0xe8]
   14000501f:	mov    ecx,0x200
   140005024:	and    ax,cx
   140005027:	neg    ax
   14000502a:	sbb    eax,eax
   14000502c:	add    eax,0x2
   14000502f:	mov    DWORD PTR [rdi],eax
   140005031:	jmp    0x140005090
   140005033:	cmp    DWORD PTR [rsp+0x54],0x4
   140005038:	jne    0x140005090
   14000503a:	mov    eax,DWORD PTR [rsp+0x58]
   14000503e:	test   eax,eax
   140005040:	jne    0x14000505d
   140005042:	movzx  eax,BYTE PTR [rsp+0x65]
   140005047:	mov    DWORD PTR [rbx],0x7
   14000504d:	cmp    al,0x43
   14000504f:	je     0x140005055
   140005051:	cmp    al,0x42
   140005053:	jne    0x140005090
   140005055:	mov    DWORD PTR [rdi],0x4
   14000505b:	jmp    0x140005090
   14000505d:	cmp    eax,0xa
   140005060:	jne    0x14000507d
   140005062:	movzx  eax,BYTE PTR [rsp+0x65]
   140005067:	mov    DWORD PTR [rbx],0x6
   14000506d:	cmp    al,0x41
   14000506f:	je     0x140005075
   140005071:	cmp    al,0x42
   140005073:	jne    0x140005090
   140005075:	mov    DWORD PTR [rdi],0x3
   14000507b:	jmp    0x140005090
   14000507d:	cmp    eax,0x5a
   140005080:	jne    0x140005090
   140005082:	mov    DWORD PTR [rbx],0x8
   140005088:	jmp    0x140005090
   14000508a:	mov    DWORD PTR [rbx],0x9
   140005090:	mov    al,0x1
   140005092:	mov    rcx,QWORD PTR [rsp+0xf0]
   14000509a:	xor    rcx,rsp
   14000509d:	call   0x1400144f0
   1400050a2:	lea    r11,[rsp+0x100]
   1400050aa:	mov    rbx,QWORD PTR [r11+0x20]
   1400050ae:	mov    rsi,QWORD PTR [r11+0x28]
   1400050b2:	mov    rsp,r11
   1400050b5:	pop    rdi
   1400050b6:	ret    
   1400050b7:	int3   
   1400050b8:	int3   
   1400050b9:	int3   
   1400050ba:	int3   
   1400050bb:	int3   
   1400050bc:	int3   
   1400050bd:	int3   
   1400050be:	int3   
   1400050bf:	int3   
   1400050c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400050c5:	mov    QWORD PTR [rsp+0x10],rsi
   1400050ca:	push   rdi
   1400050cb:	sub    rsp,0x50
   1400050cf:	mov    rdi,rcx
   1400050d2:	mov    rcx,QWORD PTR [rcx+0x20]
   1400050d6:	lea    rbx,[rdi+0x8]
   1400050da:	cmp    rcx,0x10
   1400050de:	jb     0x1400050e5
   1400050e0:	mov    rax,QWORD PTR [rbx]
   1400050e3:	jmp    0x1400050e8
   1400050e5:	mov    rax,rbx
   1400050e8:	mov    rdx,QWORD PTR [rdi+0x18]
   1400050ec:	lea    rsi,[rdx+rax*1]
   1400050f0:	test   rsi,rsi
   1400050f3:	je     0x14000511e
   1400050f5:	cmp    rcx,0x10
   1400050f9:	jb     0x140005100
   1400050fb:	mov    rax,QWORD PTR [rbx]
   1400050fe:	jmp    0x140005103
   140005100:	mov    rax,rbx
   140005103:	cmp    rax,rsi
   140005106:	ja     0x14000511e
   140005108:	cmp    rcx,0x10
   14000510c:	jb     0x140005113
   14000510e:	mov    rax,QWORD PTR [rbx]
   140005111:	jmp    0x140005116
   140005113:	mov    rax,rbx
   140005116:	add    rax,rdx
   140005119:	cmp    rsi,rax
   14000511c:	jbe    0x140005123
   14000511e:	call   0x140014a30
   140005123:	mov    rax,QWORD PTR [rdi+0x20]
   140005127:	mov    QWORD PTR [rsp+0x20],rdi
   14000512c:	mov    QWORD PTR [rsp+0x28],rsi
   140005131:	cmp    rax,0x10
   140005135:	jb     0x14000513c
   140005137:	mov    rsi,QWORD PTR [rbx]
   14000513a:	jmp    0x14000513f
   14000513c:	mov    rsi,rbx
   14000513f:	test   rsi,rsi
   140005142:	je     0x14000516d
   140005144:	cmp    rax,0x10
   140005148:	jb     0x14000514f
   14000514a:	mov    rcx,QWORD PTR [rbx]
   14000514d:	jmp    0x140005152
   14000514f:	mov    rcx,rbx
   140005152:	cmp    rcx,rsi
   140005155:	ja     0x14000516d
   140005157:	cmp    rax,0x10
   14000515b:	jb     0x140005160
   14000515d:	mov    rbx,QWORD PTR [rbx]
   140005160:	mov    rax,QWORD PTR [rdi+0x18]
   140005164:	lea    rcx,[rbx+rax*1]
   140005168:	cmp    rsi,rcx
   14000516b:	jbe    0x140005172
   14000516d:	call   0x140014a30
   140005172:	movaps xmm0,XMMWORD PTR [rsp+0x20]
   140005177:	mov    QWORD PTR [rsp+0x30],rdi
   14000517c:	mov    QWORD PTR [rsp+0x38],rsi
   140005181:	movaps xmm1,XMMWORD PTR [rsp+0x30]
   140005186:	lea    r9,[rsp+0x20]
   14000518b:	lea    r8,[rsp+0x30]
   140005190:	movdqa XMMWORD PTR [rsp+0x20],xmm0
   140005196:	movdqa XMMWORD PTR [rsp+0x30],xmm1
   14000519c:	lea    rdx,[rsp+0x40]
   1400051a1:	mov    rcx,rdi
   1400051a4:	call   0x1400051d0
   1400051a9:	mov    rbx,QWORD PTR [rsp+0x60]
   1400051ae:	mov    rsi,QWORD PTR [rsp+0x68]
   1400051b3:	add    rsp,0x50
   1400051b7:	pop    rdi
   1400051b8:	ret    
   1400051b9:	int3   
   1400051ba:	int3   
   1400051bb:	int3   
   1400051bc:	int3   
   1400051bd:	int3   
   1400051be:	int3   
   1400051bf:	int3   
   1400051c0:	xor    eax,eax
   1400051c2:	cmp    QWORD PTR [rcx+0x18],rax
   1400051c6:	sete   al
   1400051c9:	ret    
   1400051ca:	int3   
   1400051cb:	int3   
   1400051cc:	int3   
   1400051cd:	int3   
   1400051ce:	int3   
   1400051cf:	int3   
   1400051d0:	mov    QWORD PTR [rsp+0x20],rbx
   1400051d5:	push   rsi
   1400051d6:	push   rdi
   1400051d7:	push   r12
   1400051d9:	sub    rsp,0x40
   1400051dd:	mov    rax,QWORD PTR [rcx+0x20]
   1400051e1:	mov    QWORD PTR [rsp+0x60],rbp
   1400051e6:	mov    QWORD PTR [rsp+0x68],r13
   1400051eb:	mov    QWORD PTR [rsp+0x70],r14
   1400051f0:	mov    r13,r8
   1400051f3:	mov    r12,rdx
   1400051f6:	mov    rdi,rcx
   1400051f9:	mov    r14,r9
   1400051fc:	cmp    rax,0x10
   140005200:	jb     0x14000520c
   140005202:	mov    rsi,QWORD PTR [rcx+0x8]
   140005206:	lea    rbx,[rcx+0x8]
   14000520a:	jmp    0x140005213
   14000520c:	lea    rbx,[rcx+0x8]
   140005210:	mov    rsi,rbx
   140005213:	test   rsi,rsi
   140005216:	je     0x140005242
   140005218:	cmp    rax,0x10
   14000521c:	jb     0x140005223
   14000521e:	mov    rcx,QWORD PTR [rbx]
   140005221:	jmp    0x140005226
   140005223:	mov    rcx,rbx
   140005226:	cmp    rcx,rsi
   140005229:	ja     0x140005242
   14000522b:	cmp    rax,0x10
   14000522f:	jb     0x140005236
   140005231:	mov    rcx,QWORD PTR [rbx]
   140005234:	jmp    0x140005239
   140005236:	mov    rcx,rbx
   140005239:	add    rcx,QWORD PTR [rdi+0x18]
   14000523d:	cmp    rsi,rcx
   140005240:	jbe    0x140005247
   140005242:	call   0x140014a30
   140005247:	mov    rax,QWORD PTR [r13+0x0]
   14000524b:	lea    rcx,[rsp+0x20]
   140005250:	mov    QWORD PTR [rcx],rax
   140005253:	mov    rax,QWORD PTR [r13+0x8]
   140005257:	mov    QWORD PTR [rcx+0x8],rax
   14000525b:	mov    rbp,QWORD PTR [rsp+0x28]
   140005260:	test   rbp,rbp
   140005263:	je     0x140005282
   140005265:	mov    rax,QWORD PTR [rsp+0x20]
   14000526a:	cmp    rax,0xfffffffffffffffc
   14000526e:	je     0x14000527f
   140005270:	test   rax,rax
   140005273:	je     0x14000527a
   140005275:	cmp    rax,rdi
   140005278:	je     0x14000527f
   14000527a:	call   0x140014a30
   14000527f:	sub    rbp,rsi
   140005282:	mov    rax,QWORD PTR [r13+0x0]
   140005286:	lea    rcx,[rsp+0x30]
   14000528b:	mov    QWORD PTR [rcx],rax
   14000528e:	mov    rax,QWORD PTR [r13+0x8]
   140005292:	mov    r13,QWORD PTR [rsp+0x68]
   140005297:	mov    QWORD PTR [rcx+0x8],rax
   14000529b:	mov    rax,QWORD PTR [r14]
   14000529e:	lea    rcx,[rsp+0x20]
   1400052a3:	mov    QWORD PTR [rcx],rax
   1400052a6:	mov    rax,QWORD PTR [r14+0x8]
   1400052aa:	mov    r14,QWORD PTR [rsp+0x70]
   1400052af:	mov    QWORD PTR [rcx+0x8],rax
   1400052b3:	mov    rsi,QWORD PTR [rsp+0x28]
   1400052b8:	test   rsi,rsi
   1400052bb:	je     0x1400052de
   1400052bd:	mov    rax,QWORD PTR [rsp+0x20]
   1400052c2:	cmp    rax,0xfffffffffffffffc
   1400052c6:	je     0x1400052d9
   1400052c8:	test   rax,rax
   1400052cb:	je     0x1400052d4
   1400052cd:	cmp    rax,QWORD PTR [rsp+0x30]
   1400052d2:	je     0x1400052d9
   1400052d4:	call   0x140014a30
   1400052d9:	sub    rsi,QWORD PTR [rsp+0x38]
   1400052de:	mov    r8,rsi
   1400052e1:	mov    rdx,rbp
   1400052e4:	mov    rcx,rdi
   1400052e7:	call   0x140002b80
   1400052ec:	mov    r11,QWORD PTR [rdi+0x20]
   1400052f0:	cmp    r11,0x10
   1400052f4:	jb     0x1400052fb
   1400052f6:	mov    rax,QWORD PTR [rbx]
   1400052f9:	jmp    0x1400052fe
   1400052fb:	mov    rax,rbx
   1400052fe:	lea    rsi,[rax+rbp*1]
   140005302:	mov    rbp,QWORD PTR [rsp+0x60]
   140005307:	mov    QWORD PTR [r12],0x0
   14000530f:	test   rsi,rsi
   140005312:	je     0x14000533d
   140005314:	cmp    r11,0x10
   140005318:	jb     0x14000531f
   14000531a:	mov    rax,QWORD PTR [rbx]
   14000531d:	jmp    0x140005322
   14000531f:	mov    rax,rbx
   140005322:	cmp    rax,rsi
   140005325:	ja     0x14000533d
   140005327:	cmp    r11,0x10
   14000532b:	jb     0x140005330
   14000532d:	mov    rbx,QWORD PTR [rbx]
   140005330:	mov    rax,QWORD PTR [rdi+0x18]
   140005334:	lea    rcx,[rbx+rax*1]
   140005338:	cmp    rsi,rcx
   14000533b:	jbe    0x140005342
   14000533d:	call   0x140014a30
   140005342:	mov    rbx,QWORD PTR [rsp+0x78]
   140005347:	mov    QWORD PTR [r12],rdi
   14000534b:	mov    QWORD PTR [r12+0x8],rsi
   140005350:	mov    rax,r12
   140005353:	add    rsp,0x40
   140005357:	pop    r12
   140005359:	pop    rdi
   14000535a:	pop    rsi
   14000535b:	ret    
   14000535c:	int3   
   14000535d:	int3   
   14000535e:	int3   
   14000535f:	int3   
   140005360:	rex push rbp
   140005362:	push   r12
   140005364:	push   r13
   140005366:	sub    rsp,0x20
   14000536a:	mov    r12,r9
   14000536d:	mov    r13,rdx
   140005370:	mov    rbp,rcx
   140005373:	test   r9,r9
   140005376:	jne    0x14000538b
   140005378:	cmp    r8,QWORD PTR [rcx+0x18]
   14000537c:	ja     0x14000538b
   14000537e:	mov    rax,r8
   140005381:	add    rsp,0x20
   140005385:	pop    r13
   140005387:	pop    r12
   140005389:	pop    rbp
   14000538a:	ret    
   14000538b:	mov    QWORD PTR [rsp+0x40],rbx
   140005390:	mov    rbx,QWORD PTR [rcx+0x18]
   140005394:	mov    QWORD PTR [rsp+0x48],rsi
   140005399:	mov    QWORD PTR [rsp+0x50],rdi
   14000539e:	mov    QWORD PTR [rsp+0x58],r14
   1400053a3:	cmp    r8,rbx
   1400053a6:	jae    0x140005426
   1400053a8:	sub    rbx,r8
   1400053ab:	cmp    r9,rbx
   1400053ae:	ja     0x140005426
   1400053b0:	mov    eax,0x1
   1400053b5:	sub    rax,r9
   1400053b8:	add    rbx,rax
   1400053bb:	cmp    QWORD PTR [rcx+0x20],0x10
   1400053c0:	jb     0x1400053cc
   1400053c2:	mov    rax,QWORD PTR [rcx+0x8]
   1400053c6:	lea    rsi,[rcx+0x8]
   1400053ca:	jmp    0x1400053d3
   1400053cc:	lea    rsi,[rcx+0x8]
   1400053d0:	mov    rax,rsi
   1400053d3:	movsx  edx,BYTE PTR [rdx]
   1400053d6:	lea    r14,[rax+r8*1]
   1400053da:	mov    r8,rbx
   1400053dd:	mov    rcx,r14
   1400053e0:	call   0x140014a50
   1400053e5:	mov    rdi,rax
   1400053e8:	test   rax,rax
   1400053eb:	je     0x140005426
   1400053ed:	nop    DWORD PTR [rax]
   1400053f0:	mov    r8,r12
   1400053f3:	mov    rdx,r13
   1400053f6:	mov    rcx,rdi
   1400053f9:	call   0x140016410
   1400053fe:	test   eax,eax
   140005400:	je     0x140005448
   140005402:	movsx  edx,BYTE PTR [r13+0x0]
   140005407:	sub    r14,rdi
   14000540a:	lea    rbx,[rbx+r14*1-0x1]
   14000540f:	lea    r14,[rdi+0x1]
   140005413:	mov    rcx,r14
   140005416:	mov    r8,rbx
   140005419:	call   0x140014a50
   14000541e:	mov    rdi,rax
   140005421:	test   rax,rax
   140005424:	jne    0x1400053f0
   140005426:	or     rax,0xffffffffffffffff
   14000542a:	mov    rdi,QWORD PTR [rsp+0x50]
   14000542f:	mov    rsi,QWORD PTR [rsp+0x48]
   140005434:	mov    rbx,QWORD PTR [rsp+0x40]
   140005439:	mov    r14,QWORD PTR [rsp+0x58]
   14000543e:	add    rsp,0x20
   140005442:	pop    r13
   140005444:	pop    r12
   140005446:	pop    rbp
   140005447:	ret    
   140005448:	cmp    QWORD PTR [rbp+0x20],0x10
   14000544d:	jb     0x140005452
   14000544f:	mov    rsi,QWORD PTR [rsi]
   140005452:	sub    rdi,rsi
   140005455:	mov    rax,rdi
   140005458:	jmp    0x14000542a
   14000545a:	int3   
   14000545b:	int3   
   14000545c:	int3   
   14000545d:	int3   
   14000545e:	int3   
   14000545f:	int3   
   140005460:	mov    QWORD PTR [rsp+0x8],rbx
   140005465:	mov    QWORD PTR [rsp+0x10],rbp
   14000546a:	mov    QWORD PTR [rsp+0x18],rsi
   14000546f:	mov    QWORD PTR [rsp+0x20],rdi
   140005474:	push   r12
   140005476:	push   r13
   140005478:	push   r14
   14000547a:	sub    rsp,0x20
   14000547e:	mov    r8,QWORD PTR [rcx+0x18]
   140005482:	or     r14,0xffffffffffffffff
   140005486:	mov    r12,rdx
   140005489:	mov    rsi,rcx
   14000548c:	cmp    r8,0x1
   140005490:	jb     0x1400054f0
   140005492:	mov    r13,QWORD PTR [rcx+0x20]
   140005496:	dec    r8
   140005499:	lea    rdi,[rcx+0x8]
   14000549d:	cmp    r8,r14
   1400054a0:	cmova  r8,r14
   1400054a4:	cmp    r13,0x10
   1400054a8:	jb     0x1400054af
   1400054aa:	mov    rax,QWORD PTR [rdi]
   1400054ad:	jmp    0x1400054b2
   1400054af:	mov    rax,rdi
   1400054b2:	movzx  ebp,BYTE PTR [rdx]
   1400054b5:	lea    rbx,[rax+r8*1]
   1400054b9:	nop    DWORD PTR [rax+0x0]
   1400054c0:	cmp    BYTE PTR [rbx],bpl
   1400054c3:	jne    0x1400054cd
   1400054c5:	mov    al,BYTE PTR [rbx]
   1400054c7:	cmp    al,BYTE PTR [r12]
   1400054cb:	je     0x1400054df
   1400054cd:	mov    rcx,rsi
   1400054d0:	call   0x1400023d0
   1400054d5:	cmp    rbx,rax
   1400054d8:	je     0x1400054f0
   1400054da:	dec    rbx
   1400054dd:	jmp    0x1400054c0
   1400054df:	cmp    r13,0x10
   1400054e3:	jb     0x1400054e8
   1400054e5:	mov    rdi,QWORD PTR [rdi]
   1400054e8:	sub    rbx,rdi
   1400054eb:	mov    rax,rbx
   1400054ee:	jmp    0x1400054f3
   1400054f0:	mov    rax,r14
   1400054f3:	mov    rbx,QWORD PTR [rsp+0x40]
   1400054f8:	mov    rbp,QWORD PTR [rsp+0x48]
   1400054fd:	mov    rsi,QWORD PTR [rsp+0x50]
   140005502:	mov    rdi,QWORD PTR [rsp+0x58]
   140005507:	add    rsp,0x20
   14000550b:	pop    r14
   14000550d:	pop    r13
   14000550f:	pop    r12
   140005511:	ret    
   140005512:	int3   
   140005513:	int3   
   140005514:	int3   
   140005515:	int3   
   140005516:	int3   
   140005517:	int3   
   140005518:	int3   
   140005519:	int3   
   14000551a:	int3   
   14000551b:	int3   
   14000551c:	int3   
   14000551d:	int3   
   14000551e:	int3   
   14000551f:	int3   
   140005520:	rex push rbx
   140005522:	sub    rsp,0x20
   140005526:	lea    rax,[rip+0x36a2b]        # 0x14003bf58
   14000552d:	mov    rbx,rcx
   140005530:	mov    QWORD PTR [rcx],rax
   140005533:	cmp    QWORD PTR [rcx+0x50],0x10
   140005538:	jb     0x140005543
   14000553a:	mov    rcx,QWORD PTR [rcx+0x38]
   14000553e:	call   0x1400062d4
   140005543:	mov    QWORD PTR [rbx+0x50],0xf
   14000554b:	mov    QWORD PTR [rbx+0x48],0x0
   140005553:	mov    BYTE PTR [rbx+0x38],0x0
   140005557:	cmp    QWORD PTR [rbx+0x28],0x10
   14000555c:	jb     0x140005567
   14000555e:	mov    rcx,QWORD PTR [rbx+0x10]
   140005562:	call   0x1400062d4
   140005567:	mov    QWORD PTR [rbx+0x28],0xf
   14000556f:	mov    QWORD PTR [rbx+0x20],0x0
   140005577:	mov    BYTE PTR [rbx+0x10],0x0
   14000557b:	add    rsp,0x20
   14000557f:	pop    rbx
   140005580:	ret    
   140005581:	int3   
   140005582:	int3   
   140005583:	int3   
   140005584:	int3   
   140005585:	int3   
   140005586:	int3   
   140005587:	int3   
   140005588:	int3   
   140005589:	int3   
   14000558a:	int3   
   14000558b:	int3   
   14000558c:	int3   
   14000558d:	int3   
   14000558e:	int3   
   14000558f:	int3   
   140005590:	mov    QWORD PTR [rsp+0x8],rbx
   140005595:	push   rdi
   140005596:	sub    rsp,0x20
   14000559a:	lea    rax,[rip+0x369b7]        # 0x14003bf58
   1400055a1:	mov    edi,edx
   1400055a3:	mov    rbx,rcx
   1400055a6:	mov    QWORD PTR [rcx],rax
   1400055a9:	cmp    QWORD PTR [rcx+0x50],0x10
   1400055ae:	jb     0x1400055b9
   1400055b0:	mov    rcx,QWORD PTR [rcx+0x38]
   1400055b4:	call   0x1400062d4
   1400055b9:	mov    QWORD PTR [rbx+0x50],0xf
   1400055c1:	mov    QWORD PTR [rbx+0x48],0x0
   1400055c9:	mov    BYTE PTR [rbx+0x38],0x0
   1400055cd:	cmp    QWORD PTR [rbx+0x28],0x10
   1400055d2:	jb     0x1400055dd
   1400055d4:	mov    rcx,QWORD PTR [rbx+0x10]
   1400055d8:	call   0x1400062d4
   1400055dd:	mov    QWORD PTR [rbx+0x28],0xf
   1400055e5:	mov    QWORD PTR [rbx+0x20],0x0
   1400055ed:	mov    BYTE PTR [rbx+0x10],0x0
   1400055f1:	test   dil,0x1
   1400055f5:	je     0x1400055ff
   1400055f7:	mov    rcx,rbx
   1400055fa:	call   0x1400062d4
   1400055ff:	mov    rax,rbx
   140005602:	mov    rbx,QWORD PTR [rsp+0x30]
   140005607:	add    rsp,0x20
   14000560b:	pop    rdi
   14000560c:	ret    
   14000560d:	int3   
   14000560e:	int3   
   14000560f:	int3   
   140005610:	mov    QWORD PTR [rsp+0x8],rcx
   140005615:	push   rdi
   140005616:	sub    rsp,0x30
   14000561a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005623:	mov    QWORD PTR [rsp+0x48],rbx
   140005628:	mov    rbx,rcx
   14000562b:	lea    rax,[rip+0x3690e]        # 0x14003bf40
   140005632:	mov    QWORD PTR [rcx],rax
   140005635:	add    rcx,0xe8
   14000563c:	call   0x140031360
   140005641:	nop
   140005642:	lea    rcx,[rbx+0xd0]
   140005649:	call   0x140031360
   14000564e:	nop
   14000564f:	cmp    QWORD PTR [rbx+0xc8],0x10
   140005657:	jb     0x140005665
   140005659:	mov    rcx,QWORD PTR [rbx+0xb0]
   140005660:	call   0x1400062d4
   140005665:	mov    QWORD PTR [rbx+0xc8],0xf
   140005670:	xor    edi,edi
   140005672:	mov    QWORD PTR [rbx+0xc0],rdi
   140005679:	mov    BYTE PTR [rbx+0xb0],dil
   140005680:	cmp    QWORD PTR [rbx+0xa0],0x10
   140005688:	jb     0x140005696
   14000568a:	mov    rcx,QWORD PTR [rbx+0x88]
   140005691:	call   0x1400062d4
   140005696:	mov    QWORD PTR [rbx+0xa0],0xf
   1400056a1:	mov    QWORD PTR [rbx+0x98],rdi
   1400056a8:	mov    BYTE PTR [rbx+0x88],0x0
   1400056af:	cmp    QWORD PTR [rbx+0x78],0x10
   1400056b4:	jb     0x1400056bf
   1400056b6:	mov    rcx,QWORD PTR [rbx+0x60]
   1400056ba:	call   0x1400062d4
   1400056bf:	mov    QWORD PTR [rbx+0x78],0xf
   1400056c7:	mov    QWORD PTR [rbx+0x70],rdi
   1400056cb:	mov    BYTE PTR [rbx+0x60],0x0
   1400056cf:	lea    rax,[rip+0x36882]        # 0x14003bf58
   1400056d6:	mov    QWORD PTR [rbx],rax
   1400056d9:	cmp    QWORD PTR [rbx+0x50],0x10
   1400056de:	jb     0x1400056e9
   1400056e0:	mov    rcx,QWORD PTR [rbx+0x38]
   1400056e4:	call   0x1400062d4
   1400056e9:	mov    QWORD PTR [rbx+0x50],0xf
   1400056f1:	mov    QWORD PTR [rbx+0x48],rdi
   1400056f5:	mov    BYTE PTR [rbx+0x38],0x0
   1400056f9:	cmp    QWORD PTR [rbx+0x28],0x10
   1400056fe:	jb     0x140005709
   140005700:	mov    rcx,QWORD PTR [rbx+0x10]
   140005704:	call   0x1400062d4
   140005709:	mov    QWORD PTR [rbx+0x28],0xf
   140005711:	mov    QWORD PTR [rbx+0x20],rdi
   140005715:	mov    BYTE PTR [rbx+0x10],0x0
   140005719:	mov    rbx,QWORD PTR [rsp+0x48]
   14000571e:	add    rsp,0x30
   140005722:	pop    rdi
   140005723:	ret    
   140005724:	int3   
   140005725:	int3   
   140005726:	int3   
   140005727:	int3   
   140005728:	int3   
   140005729:	int3   
   14000572a:	int3   
   14000572b:	int3   
   14000572c:	int3   
   14000572d:	int3   
   14000572e:	int3   
   14000572f:	int3   
   140005730:	rex push rbx
   140005732:	sub    rsp,0x20
   140005736:	mov    rbx,rdx
   140005739:	xor    eax,eax
   14000573b:	lea    rdx,[rcx+0x58]
   14000573f:	mov    QWORD PTR [rbx+0x20],0xf
   140005747:	mov    QWORD PTR [rbx+0x18],rax
   14000574b:	or     r9,0xffffffffffffffff
   14000574f:	mov    rcx,rbx
   140005752:	xor    r8d,r8d
   140005755:	mov    BYTE PTR [rbx+0x8],al
   140005758:	mov    DWORD PTR [rsp+0x30],eax
   14000575c:	call   0x140002630
   140005761:	mov    rax,rbx
   140005764:	add    rsp,0x20
   140005768:	pop    rbx
   140005769:	ret    
   14000576a:	int3   
   14000576b:	int3   
   14000576c:	int3   
   14000576d:	int3   
   14000576e:	int3   
   14000576f:	int3   
   140005770:	rex push rbx
   140005772:	sub    rsp,0x20
   140005776:	mov    rbx,rdx
   140005779:	xor    eax,eax
   14000577b:	lea    rdx,[rcx+0xa8]
   140005782:	mov    QWORD PTR [rbx+0x20],0xf
   14000578a:	mov    QWORD PTR [rbx+0x18],rax
   14000578e:	or     r9,0xffffffffffffffff
   140005792:	mov    rcx,rbx
   140005795:	xor    r8d,r8d
   140005798:	mov    BYTE PTR [rbx+0x8],al
   14000579b:	mov    DWORD PTR [rsp+0x30],eax
   14000579f:	call   0x140002630
   1400057a4:	mov    rax,rbx
   1400057a7:	add    rsp,0x20
   1400057ab:	pop    rbx
   1400057ac:	ret    
   1400057ad:	int3   
   1400057ae:	int3   
   1400057af:	int3   
   1400057b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400057b5:	push   rdi
   1400057b6:	sub    rsp,0x20
   1400057ba:	mov    ebx,edx
   1400057bc:	mov    rdi,rcx
   1400057bf:	call   0x140005610
   1400057c4:	test   bl,0x1
   1400057c7:	je     0x1400057d1
   1400057c9:	mov    rcx,rdi
   1400057cc:	call   0x1400062d4
   1400057d1:	mov    rax,rdi
   1400057d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400057d9:	add    rsp,0x20
   1400057dd:	pop    rdi
   1400057de:	ret    
   1400057df:	int3   
   1400057e0:	rex push rbx
   1400057e2:	sub    rsp,0x20
   1400057e6:	lea    rax,[rip+0x36a13]        # 0x14003c200
   1400057ed:	mov    rbx,rcx
   1400057f0:	mov    QWORD PTR [rcx],rax
   1400057f3:	cmp    QWORD PTR [rcx+0x78],0x10
   1400057f8:	jb     0x140005803
   1400057fa:	mov    rcx,QWORD PTR [rcx+0x60]
   1400057fe:	call   0x1400062d4
   140005803:	mov    QWORD PTR [rbx+0x78],0xf
   14000580b:	mov    QWORD PTR [rbx+0x70],0x0
   140005813:	mov    BYTE PTR [rbx+0x60],0x0
   140005817:	lea    rax,[rip+0x3673a]        # 0x14003bf58
   14000581e:	mov    QWORD PTR [rbx],rax
   140005821:	cmp    QWORD PTR [rbx+0x50],0x10
   140005826:	jb     0x140005831
   140005828:	mov    rcx,QWORD PTR [rbx+0x38]
   14000582c:	call   0x1400062d4
   140005831:	mov    QWORD PTR [rbx+0x50],0xf
   140005839:	mov    QWORD PTR [rbx+0x48],0x0
   140005841:	mov    BYTE PTR [rbx+0x38],0x0
   140005845:	cmp    QWORD PTR [rbx+0x28],0x10
   14000584a:	jb     0x140005855
   14000584c:	mov    rcx,QWORD PTR [rbx+0x10]
   140005850:	call   0x1400062d4
   140005855:	mov    QWORD PTR [rbx+0x28],0xf
   14000585d:	mov    QWORD PTR [rbx+0x20],0x0
   140005865:	mov    BYTE PTR [rbx+0x10],0x0
   140005869:	add    rsp,0x20
   14000586d:	pop    rbx
   14000586e:	ret    
   14000586f:	int3   
   140005870:	mov    QWORD PTR [rsp+0x8],rbx
   140005875:	push   rdi
   140005876:	sub    rsp,0x20
   14000587a:	mov    ebx,edx
   14000587c:	mov    rdi,rcx
   14000587f:	call   0x1400057e0
   140005884:	test   bl,0x1
   140005887:	je     0x140005891
   140005889:	mov    rcx,rdi
   14000588c:	call   0x1400062d4
   140005891:	mov    rax,rdi
   140005894:	mov    rbx,QWORD PTR [rsp+0x30]
   140005899:	add    rsp,0x20
   14000589d:	pop    rdi
   14000589e:	ret    
   14000589f:	int3   
   1400058a0:	rex push rbx
   1400058a2:	push   rsi
   1400058a3:	push   rdi
   1400058a4:	push   r12
   1400058a6:	push   r13
   1400058a8:	push   r14
   1400058aa:	push   r15
   1400058ac:	mov    eax,0x1330
   1400058b1:	call   0x1400329e0
   1400058b6:	sub    rsp,rax
   1400058b9:	mov    QWORD PTR [rsp+0xb8],0xfffffffffffffffe
   1400058c5:	mov    rax,QWORD PTR [rip+0x434f4]        # 0x140048dc0
   1400058cc:	xor    rax,rsp
   1400058cf:	mov    QWORD PTR [rsp+0x1320],rax
   1400058d7:	mov    r14,r9
   1400058da:	mov    r13,r8
   1400058dd:	mov    QWORD PTR [rsp+0x70],r8
   1400058e2:	mov    QWORD PTR [rsp+0x80],r9
   1400058ea:	mov    QWORD PTR [rsp+0x180],0xf
   1400058f6:	xor    edi,edi
   1400058f8:	mov    QWORD PTR [rsp+0x178],rdi
   140005900:	mov    BYTE PTR [rsp+0x168],dil
   140005908:	movsxd r8,edx
   14000590b:	mov    rdx,rcx
   14000590e:	lea    rcx,[rsp+0x160]
   140005916:	call   0x140002a30
   14000591b:	nop
   14000591c:	lea    rcx,[rsp+0x220]
   140005924:	call   0x140028c50
   140005929:	nop
   14000592a:	lea    ecx,[rdi+0x8]
   14000592d:	call   0x140006290
   140005932:	test   rax,rax
   140005935:	je     0x140005941
   140005937:	lea    rcx,[rsp+0x38]
   14000593c:	mov    QWORD PTR [rax],rcx
   14000593f:	jmp    0x140005944
   140005941:	mov    rax,rdi
   140005944:	mov    QWORD PTR [rsp+0x38],rax
   140005949:	mov    QWORD PTR [rsp+0x50],rdi
   14000594e:	mov    QWORD PTR [rsp+0x58],rdi
   140005953:	mov    QWORD PTR [rsp+0x60],rdi
   140005958:	mov    QWORD PTR [rsp+0x108],0xf
   140005964:	mov    QWORD PTR [rsp+0x100],rdi
   14000596c:	mov    BYTE PTR [rsp+0xf0],0x0
   140005974:	or     r9,0xffffffffffffffff
   140005978:	xor    r8d,r8d
   14000597b:	lea    rdx,[rsp+0x160]
   140005983:	lea    rcx,[rsp+0xe8]
   14000598b:	call   0x140002630
   140005990:	lea    rdx,[rsp+0xe8]
   140005998:	lea    rcx,[rsp+0x220]
   1400059a0:	call   0x140029130
   1400059a5:	mov    r15d,eax
   1400059a8:	test   eax,eax
   1400059aa:	je     0x140005c3d
   1400059b0:	lea    rcx,[rsp+0x38]
   1400059b5:	call   0x140006110
   1400059ba:	mov    QWORD PTR [rsp+0xe0],0xf
   1400059c6:	mov    QWORD PTR [rsp+0xd8],rdi
   1400059ce:	mov    BYTE PTR [rsp+0xc8],0x0
   1400059d6:	mov    r8d,0x18
   1400059dc:	lea    rdx,[rip+0x3806d]        # 0x14003da50
   1400059e3:	lea    rcx,[rsp+0xc0]
   1400059eb:	call   0x140002a30
   1400059f0:	nop
   1400059f1:	mov    rbx,QWORD PTR [rsp+0x50]
   1400059f6:	test   rbx,rbx
   1400059f9:	jne    0x140005a0a
   1400059fb:	mov    r8,rdi
   1400059fe:	movabs r12,0x6666666666666667
   140005a08:	jmp    0x140005a33
   140005a0a:	mov    rcx,QWORD PTR [rsp+0x60]
   140005a0f:	sub    rcx,rbx
   140005a12:	movabs r12,0x6666666666666667
   140005a1c:	mov    rax,r12
   140005a1f:	imul   rcx
   140005a22:	mov    r8,rdx
   140005a25:	sar    r8,0x4
   140005a29:	mov    rax,r8
   140005a2c:	shr    rax,0x3f
   140005a30:	add    r8,rax
   140005a33:	mov    rsi,QWORD PTR [rsp+0x58]
   140005a38:	mov    rcx,rsi
   140005a3b:	sub    rcx,rbx
   140005a3e:	mov    rax,r12
   140005a41:	imul   rcx
   140005a44:	sar    rdx,0x4
   140005a48:	mov    rax,rdx
   140005a4b:	shr    rax,0x3f
   140005a4f:	add    rdx,rax
   140005a52:	cmp    rdx,r8
   140005a55:	jae    0x140005a8e
   140005a57:	xor    eax,eax
   140005a59:	mov    BYTE PTR [rsp+0x28],al
   140005a5d:	movzx  eax,BYTE PTR [rsp+0x30]
   140005a62:	mov    BYTE PTR [rsp+0x20],al
   140005a66:	lea    r9,[rsp+0x48]
   140005a6b:	lea    r8,[rsp+0xc0]
   140005a73:	mov    edx,0x1
   140005a78:	mov    rcx,rsi
   140005a7b:	call   0x140003700
   140005a80:	lea    r11,[rsi+0x28]
   140005a84:	mov    QWORD PTR [rsp+0x58],r11
   140005a89:	jmp    0x140005b8d
   140005a8e:	mov    r13,rsi
   140005a91:	cmp    rbx,rsi
   140005a94:	jbe    0x140005aa5
   140005a96:	call   0x140014a30
   140005a9b:	mov    rsi,QWORD PTR [rsp+0x58]
   140005aa0:	mov    rbx,QWORD PTR [rsp+0x50]
   140005aa5:	mov    r8,QWORD PTR [rsp+0x38]
   140005aaa:	mov    r14,r8
   140005aad:	mov    QWORD PTR [rsp+0x70],r8
   140005ab2:	mov    QWORD PTR [rsp+0x78],r13
   140005ab7:	mov    rcx,rsi
   140005aba:	sub    rcx,rbx
   140005abd:	mov    rax,r12
   140005ac0:	imul   rcx
   140005ac3:	sar    rdx,0x4
   140005ac7:	mov    rax,rdx
   140005aca:	shr    rax,0x3f
   140005ace:	add    rdx,rax
   140005ad1:	jne    0x140005ad8
   140005ad3:	mov    rsi,rdi
   140005ad6:	jmp    0x140005b10
   140005ad8:	cmp    rbx,rsi
   140005adb:	jbe    0x140005ae7
   140005add:	call   0x140014a30
   140005ae2:	mov    r8,QWORD PTR [rsp+0x38]
   140005ae7:	test   r14,r14
   140005aea:	je     0x140005af1
   140005aec:	cmp    r14,r8
   140005aef:	je     0x140005af6
   140005af1:	call   0x140014a30
   140005af6:	sub    r13,rbx
   140005af9:	mov    rax,r12
   140005afc:	imul   r13
   140005aff:	mov    rsi,rdx
   140005b02:	sar    rsi,0x4
   140005b06:	mov    rax,rsi
   140005b09:	shr    rax,0x3f
   140005b0d:	add    rsi,rax
   140005b10:	movaps xmm0,XMMWORD PTR [rsp+0x70]
   140005b15:	movdqa XMMWORD PTR [rsp+0x70],xmm0
   140005b1b:	lea    r9,[rsp+0xc0]
   140005b23:	mov    r8d,0x1
   140005b29:	lea    rdx,[rsp+0x70]
   140005b2e:	lea    rcx,[rsp+0x38]
   140005b33:	call   0x140002de0
   140005b38:	mov    rbx,QWORD PTR [rsp+0x50]
   140005b3d:	cmp    rbx,QWORD PTR [rsp+0x58]
   140005b42:	jbe    0x140005b49
   140005b44:	call   0x140014a30
   140005b49:	mov    r12,QWORD PTR [rsp+0x38]
   140005b4e:	test   r12,r12
   140005b51:	jne    0x140005b5d
   140005b53:	call   0x140014a30
   140005b58:	mov    r11,rdi
   140005b5b:	jmp    0x140005b65
   140005b5d:	mov    rax,QWORD PTR [rsp+0x38]
   140005b62:	mov    r11,QWORD PTR [rax]
   140005b65:	lea    rax,[rsi+rsi*4]
   140005b69:	lea    rcx,[rbx+rax*8]
   140005b6d:	cmp    rcx,QWORD PTR [r11+0x20]
   140005b71:	ja     0x140005b87
   140005b73:	test   r12,r12
   140005b76:	je     0x140005b7e
   140005b78:	mov    rax,QWORD PTR [r12]
   140005b7c:	jmp    0x140005b81
   140005b7e:	mov    rax,rdi
   140005b81:	cmp    rcx,QWORD PTR [rax+0x18]
   140005b85:	jae    0x140005b8d
   140005b87:	call   0x140014a30
   140005b8c:	nop
   140005b8d:	cmp    QWORD PTR [rsp+0xe0],0x10
   140005b96:	jb     0x140005ba6
   140005b98:	mov    rcx,QWORD PTR [rsp+0xc8]
   140005ba0:	call   0x1400062d4
   140005ba5:	nop
   140005ba6:	mov    rbx,QWORD PTR [rsp+0x50]
   140005bab:	test   rbx,rbx
   140005bae:	je     0x140005bf5
   140005bb0:	mov    rsi,QWORD PTR [rsp+0x58]
   140005bb5:	cmp    rbx,rsi
   140005bb8:	je     0x140005beb
   140005bba:	add    rbx,0x20
   140005bbe:	xchg   ax,ax
   140005bc0:	cmp    QWORD PTR [rbx],0x10
   140005bc4:	jb     0x140005bcf
   140005bc6:	mov    rcx,QWORD PTR [rbx-0x18]
   140005bca:	call   0x1400062d4
   140005bcf:	mov    QWORD PTR [rbx],0xf
   140005bd6:	mov    QWORD PTR [rbx-0x8],rdi
   140005bda:	mov    BYTE PTR [rbx-0x18],0x0
   140005bde:	add    rbx,0x28
   140005be2:	lea    rax,[rbx-0x20]
   140005be6:	cmp    rax,rsi
   140005be9:	jne    0x140005bc0
   140005beb:	mov    rcx,QWORD PTR [rsp+0x50]
   140005bf0:	call   0x1400062d4
   140005bf5:	mov    QWORD PTR [rsp+0x50],rdi
   140005bfa:	mov    QWORD PTR [rsp+0x58],rdi
   140005bff:	mov    QWORD PTR [rsp+0x60],rdi
   140005c04:	mov    rcx,QWORD PTR [rsp+0x38]
   140005c09:	call   0x1400062d4
   140005c0e:	nop
   140005c0f:	lea    rcx,[rsp+0x220]
   140005c17:	call   0x140005610
   140005c1c:	nop
   140005c1d:	cmp    QWORD PTR [rsp+0x180],0x10
   140005c26:	jb     0x140005c35
   140005c28:	mov    rcx,QWORD PTR [rsp+0x168]
   140005c30:	call   0x1400062d4
   140005c35:	mov    eax,r15d
   140005c38:	jmp    0x140005f98
   140005c3d:	lea    rdx,[rsp+0x138]
   140005c45:	lea    rcx,[rsp+0x220]
   140005c4d:	call   0x140005770
   140005c52:	nop
   140005c53:	lea    rdx,[rsp+0x110]
   140005c5b:	lea    rcx,[rsp+0x220]
   140005c63:	call   0x140005730
   140005c68:	nop
   140005c69:	lea    rcx,[rsp+0x118]
   140005c71:	cmp    QWORD PTR [rsp+0x130],0x10
   140005c7a:	cmovae rcx,QWORD PTR [rsp+0x118]
   140005c83:	call   QWORD PTR [rip+0x307ef]        # 0x140036478
   140005c89:	mov    rsi,rax
   140005c8c:	mov    QWORD PTR [rsp+0x88],rax
   140005c94:	test   rax,rax
   140005c97:	je     0x140005e7f
   140005c9d:	lea    rdx,[rip+0x37dcc]        # 0x14003da70
   140005ca4:	mov    rcx,rax
   140005ca7:	call   QWORD PTR [rip+0x307fb]        # 0x1400364a8
   140005cad:	test   rax,rax
   140005cb0:	je     0x140005e74
   140005cb6:	mov    DWORD PTR [rsp+0x34],edi
   140005cba:	lea    rcx,[rsp+0x140]
   140005cc2:	cmp    QWORD PTR [rsp+0x158],0x10
   140005ccb:	cmovae rcx,QWORD PTR [rsp+0x140]
   140005cd4:	lea    r8,[rsp+0x34]
   140005cd9:	lea    rdx,[rsp+0x320]
   140005ce1:	call   rax
   140005ce3:	nop
   140005ce4:	jmp    0x140005d02
   140005ce6:	xor    edi,edi
   140005ce8:	mov    r15d,DWORD PTR [rsp+0x68]
   140005ced:	mov    rsi,QWORD PTR [rsp+0x88]
   140005cf5:	mov    r14,QWORD PTR [rsp+0x80]
   140005cfd:	mov    r13,QWORD PTR [rsp+0x70]
   140005d02:	movsxd rax,DWORD PTR [rsp+0x34]
   140005d07:	test   eax,eax
   140005d09:	jle    0x140005e6e
   140005d0f:	mov    r8,rax
   140005d12:	mov    QWORD PTR [rsp+0x108],0xf
   140005d1e:	mov    QWORD PTR [rsp+0x100],rdi
   140005d26:	mov    BYTE PTR [rsp+0xf0],0x0
   140005d2e:	lea    rdx,[rsp+0x320]
   140005d36:	lea    rcx,[rsp+0xe8]
   140005d3e:	call   0x140002a30
   140005d43:	nop
   140005d44:	lea    rcx,[rsp+0x190]
   140005d4c:	call   0x140029900
   140005d51:	nop
   140005d52:	mov    QWORD PTR [rsp+0xb0],0xf
   140005d5e:	mov    QWORD PTR [rsp+0xa8],rdi
   140005d66:	mov    BYTE PTR [rsp+0x98],0x0
   140005d6e:	or     r9,0xffffffffffffffff
   140005d72:	xor    r8d,r8d
   140005d75:	lea    rdx,[rsp+0xe8]
   140005d7d:	lea    rcx,[rsp+0x90]
   140005d85:	call   0x140002630
   140005d8a:	lea    r11,[rsp+0x90]
   140005d92:	mov    QWORD PTR [rsp+0x70],r11
   140005d97:	or     r9,0xffffffffffffffff
   140005d9b:	xor    r8d,r8d
   140005d9e:	lea    rdx,[rsp+0x90]
   140005da6:	lea    rcx,[rsp+0x1e8]
   140005dae:	call   0x140002630
   140005db3:	nop
   140005db4:	cmp    QWORD PTR [rsp+0xb0],0x10
   140005dbd:	jb     0x140005dcc
   140005dbf:	mov    rcx,QWORD PTR [rsp+0x98]
   140005dc7:	call   0x1400062d4
   140005dcc:	lea    rdx,[rsp+0xc0]
   140005dd4:	lea    rcx,[rsp+0x190]
   140005ddc:	call   0x140029970
   140005de1:	lea    rdx,[rsp+0xc8]
   140005de9:	mov    r12,QWORD PTR [rsp+0xc8]
   140005df1:	mov    rbx,QWORD PTR [rsp+0xe0]
   140005df9:	cmp    rbx,0x10
   140005dfd:	cmovae rdx,r12
   140005e01:	mov    r8,QWORD PTR [rsp+0xd8]
   140005e09:	mov    rcx,r13
   140005e0c:	call   0x1400160c0
   140005e11:	mov    r11d,DWORD PTR [rsp+0xd8]
   140005e19:	mov    DWORD PTR [r14],r11d
   140005e1c:	cmp    rbx,0x10
   140005e20:	jb     0x140005e2a
   140005e22:	mov    rcx,r12
   140005e25:	call   0x1400062d4
   140005e2a:	mov    QWORD PTR [rsp+0xe0],0xf
   140005e36:	mov    QWORD PTR [rsp+0xd8],rdi
   140005e3e:	mov    BYTE PTR [rsp+0xc8],0x0
   140005e46:	lea    rcx,[rsp+0x190]
   140005e4e:	call   0x1400057e0
   140005e53:	nop
   140005e54:	cmp    QWORD PTR [rsp+0x108],0x10
   140005e5d:	jb     0x140005e74
   140005e5f:	mov    rcx,QWORD PTR [rsp+0xf0]
   140005e67:	call   0x1400062d4
   140005e6c:	jmp    0x140005e74
   140005e6e:	mov    r15d,0x2
   140005e74:	mov    rcx,rsi
   140005e77:	call   QWORD PTR [rip+0x305f3]        # 0x140036470
   140005e7d:	jmp    0x140005e9c
   140005e7f:	lea    rcx,[rsp+0x38]
   140005e84:	call   0x140006110
   140005e89:	lea    rdx,[rsp+0x110]
   140005e91:	lea    rcx,[rsp+0x38]
   140005e96:	call   0x140002530
   140005e9b:	nop
   140005e9c:	cmp    QWORD PTR [rsp+0x130],0x10
   140005ea5:	jb     0x140005eb4
   140005ea7:	mov    rcx,QWORD PTR [rsp+0x118]
   140005eaf:	call   0x1400062d4
   140005eb4:	mov    QWORD PTR [rsp+0x130],0xf
   140005ec0:	mov    QWORD PTR [rsp+0x128],rdi
   140005ec8:	mov    BYTE PTR [rsp+0x118],0x0
   140005ed0:	cmp    QWORD PTR [rsp+0x158],0x10
   140005ed9:	jb     0x140005ee8
   140005edb:	mov    rcx,QWORD PTR [rsp+0x140]
   140005ee3:	call   0x1400062d4
   140005ee8:	mov    QWORD PTR [rsp+0x158],0xf
   140005ef4:	mov    QWORD PTR [rsp+0x150],rdi
   140005efc:	mov    BYTE PTR [rsp+0x140],0x0
   140005f04:	mov    rcx,QWORD PTR [rsp+0x50]
   140005f09:	test   rcx,rcx
   140005f0c:	je     0x140005f55
   140005f0e:	mov    rsi,QWORD PTR [rsp+0x58]
   140005f13:	cmp    rcx,rsi
   140005f16:	je     0x140005f50
   140005f18:	lea    rbx,[rcx+0x20]
   140005f1c:	nop    DWORD PTR [rax+0x0]
   140005f20:	cmp    QWORD PTR [rbx],0x10
   140005f24:	jb     0x140005f2f
   140005f26:	mov    rcx,QWORD PTR [rbx-0x18]
   140005f2a:	call   0x1400062d4
   140005f2f:	mov    QWORD PTR [rbx],0xf
   140005f36:	mov    QWORD PTR [rbx-0x8],rdi
   140005f3a:	mov    BYTE PTR [rbx-0x18],0x0
   140005f3e:	add    rbx,0x28
   140005f42:	lea    rax,[rbx-0x20]
   140005f46:	cmp    rax,rsi
   140005f49:	jne    0x140005f20
   140005f4b:	mov    rcx,QWORD PTR [rsp+0x50]
   140005f50:	call   0x1400062d4
   140005f55:	mov    QWORD PTR [rsp+0x50],rdi
   140005f5a:	mov    QWORD PTR [rsp+0x58],rdi
   140005f5f:	mov    QWORD PTR [rsp+0x60],rdi
   140005f64:	mov    rcx,QWORD PTR [rsp+0x38]
   140005f69:	call   0x1400062d4
   140005f6e:	nop
   140005f6f:	lea    rcx,[rsp+0x220]
   140005f77:	call   0x140005610
   140005f7c:	nop
   140005f7d:	cmp    QWORD PTR [rsp+0x180],0x10
   140005f86:	jb     0x140005f95
   140005f88:	mov    rcx,QWORD PTR [rsp+0x168]
   140005f90:	call   0x1400062d4
   140005f95:	mov    eax,r15d
   140005f98:	mov    rcx,QWORD PTR [rsp+0x1320]
   140005fa0:	xor    rcx,rsp
   140005fa3:	call   0x1400144f0
   140005fa8:	add    rsp,0x1330
   140005faf:	pop    r15
   140005fb1:	pop    r14
   140005fb3:	pop    r13
   140005fb5:	pop    r12
   140005fb7:	pop    rdi
   140005fb8:	pop    rsi
   140005fb9:	pop    rbx
   140005fba:	ret    
   140005fbb:	int3   
   140005fbc:	int3   
   140005fbd:	int3   
   140005fbe:	int3   
   140005fbf:	int3   
   140005fc0:	rex push rbx
   140005fc2:	sub    rsp,0x60
   140005fc6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140005fcf:	mov    rax,QWORD PTR [rip+0x42dea]        # 0x140048dc0
   140005fd6:	xor    rax,rsp
   140005fd9:	mov    QWORD PTR [rsp+0x50],rax
   140005fde:	mov    QWORD PTR [rsp+0x48],0xf
   140005fe7:	mov    QWORD PTR [rsp+0x40],0x0
   140005ff0:	mov    BYTE PTR [rsp+0x30],0x0
   140005ff5:	mov    r8d,0xd
   140005ffb:	lea    rdx,[rip+0x377ee]        # 0x14003d7f0
   140006002:	lea    rcx,[rsp+0x28]
   140006007:	call   0x140002a30
   14000600c:	lea    r8,[rsp+0x30]
   140006011:	cmp    QWORD PTR [rsp+0x48],0x10
   140006017:	cmovae r8,QWORD PTR [rsp+0x30]
   14000601d:	xor    r9d,r9d
   140006020:	lea    edx,[r9+0xa]
   140006024:	lea    rcx,[rip+0x37a5d]        # 0x14003da88
   14000602b:	call   QWORD PTR [rip+0x3050f]        # 0x140036540
   140006031:	mov    ebx,eax
   140006033:	test   eax,eax
   140006035:	je     0x14000604d
   140006037:	cmp    QWORD PTR [rsp+0x48],0x10
   14000603d:	jb     0x140006049
   14000603f:	mov    rcx,QWORD PTR [rsp+0x30]
   140006044:	call   0x1400062d4
   140006049:	mov    eax,ebx
   14000604b:	jmp    0x1400060a3
   14000604d:	xor    r8d,r8d
   140006050:	xor    edx,edx
   140006052:	lea    rcx,[rip+0x37997]        # 0x14003d9f0
   140006059:	call   QWORD PTR [rip+0x304d9]        # 0x140036538
   14000605f:	mov    ebx,eax
   140006061:	test   eax,eax
   140006063:	je     0x14000607b
   140006065:	cmp    QWORD PTR [rsp+0x48],0x10
   14000606b:	jb     0x140006077
   14000606d:	mov    rcx,QWORD PTR [rsp+0x30]
   140006072:	call   0x1400062d4
   140006077:	mov    eax,ebx
   140006079:	jmp    0x1400060a3
   14000607b:	xor    r8d,r8d
   14000607e:	mov    edx,0x4d2
   140006083:	lea    ecx,[r8+0x1]
   140006087:	call   QWORD PTR [rip+0x304a3]        # 0x140036530
   14000608d:	mov    ebx,eax
   14000608f:	cmp    QWORD PTR [rsp+0x48],0x10
   140006095:	jb     0x1400060a1
   140006097:	mov    rcx,QWORD PTR [rsp+0x30]
   14000609c:	call   0x1400062d4
   1400060a1:	mov    eax,ebx
   1400060a3:	mov    rcx,QWORD PTR [rsp+0x50]
   1400060a8:	xor    rcx,rsp
   1400060ab:	call   0x1400144f0
   1400060b0:	add    rsp,0x60
   1400060b4:	pop    rbx
   1400060b5:	ret    
   1400060b6:	int3   
   1400060b7:	int3   
   1400060b8:	int3   
   1400060b9:	int3   
   1400060ba:	int3   
   1400060bb:	int3   
   1400060bc:	int3   
   1400060bd:	int3   
   1400060be:	int3   
   1400060bf:	int3   
   1400060c0:	jmp    0x140014f50
   1400060c5:	int3   
   1400060c6:	int3   
   1400060c7:	int3   
   1400060c8:	int3   
   1400060c9:	int3   
   1400060ca:	int3   
   1400060cb:	int3   
   1400060cc:	int3   
   1400060cd:	int3   
   1400060ce:	int3   
   1400060cf:	int3   
   1400060d0:	jmp    0x140014f10
   1400060d5:	int3   
   1400060d6:	int3   
   1400060d7:	int3   
   1400060d8:	int3   
   1400060d9:	int3   
   1400060da:	int3   
   1400060db:	int3   
   1400060dc:	int3   
   1400060dd:	int3   
   1400060de:	int3   
   1400060df:	int3   
   1400060e0:	rex push rdi
   1400060e2:	sub    rsp,0x20
   1400060e6:	mov    r9,rcx
   1400060e9:	or     rcx,0xffffffffffffffff
   1400060ed:	xor    eax,eax
   1400060ef:	mov    rdi,rdx
   1400060f2:	repnz scas al,BYTE PTR es:[rdi]
   1400060f4:	not    rcx
   1400060f7:	lea    r8,[rcx-0x1]
   1400060fb:	mov    rcx,r9
   1400060fe:	add    rsp,0x20
   140006102:	pop    rdi
   140006103:	jmp    0x140002a30
   140006108:	int3   
   140006109:	int3   
   14000610a:	int3   
   14000610b:	int3   
   14000610c:	int3   
   14000610d:	int3   
   14000610e:	int3   
   14000610f:	int3   
   140006110:	mov    QWORD PTR [rsp+0x10],rbx
   140006115:	mov    QWORD PTR [rsp+0x18],rbp
   14000611a:	mov    QWORD PTR [rsp+0x20],rsi
   14000611f:	push   rdi
   140006120:	sub    rsp,0x20
   140006124:	mov    rsi,QWORD PTR [rcx+0x20]
   140006128:	mov    rdi,rcx
   14000612b:	cmp    QWORD PTR [rcx+0x18],rsi
   14000612f:	jbe    0x140006136
   140006131:	call   0x140014a30
   140006136:	mov    rbx,QWORD PTR [rdi+0x18]
   14000613a:	cmp    rbx,QWORD PTR [rdi+0x20]
   14000613e:	jbe    0x140006145
   140006140:	call   0x140014a30
   140006145:	cmp    QWORD PTR [rdi+0x18],rbx
   140006149:	ja     0x140006151
   14000614b:	cmp    rbx,QWORD PTR [rdi+0x20]
   14000614f:	jbe    0x140006156
   140006151:	call   0x140014a30
   140006156:	mov    rbp,QWORD PTR [rdi]
   140006159:	cmp    QWORD PTR [rdi+0x18],rsi
   14000615d:	ja     0x140006165
   14000615f:	cmp    rsi,QWORD PTR [rdi+0x20]
   140006163:	jbe    0x14000616a
   140006165:	call   0x140014a30
   14000616a:	test   rbp,rbp
   14000616d:	je     0x140006174
   14000616f:	cmp    rbp,QWORD PTR [rdi]
   140006172:	je     0x140006179
   140006174:	call   0x140014a30
   140006179:	cmp    rbx,rsi
   14000617c:	je     0x1400061d9
   14000617e:	mov    rdx,QWORD PTR [rdi+0x20]
   140006182:	mov    r8,rbx
   140006185:	mov    rcx,rsi
   140006188:	call   0x1400061f0
   14000618d:	mov    rsi,QWORD PTR [rdi+0x20]
   140006191:	mov    rbp,rax
   140006194:	cmp    rax,rsi
   140006197:	je     0x1400061d5
   140006199:	mov    QWORD PTR [rsp+0x30],r12
   14000619e:	lea    rbx,[rax+0x20]
   1400061a2:	xor    r12d,r12d
   1400061a5:	cmp    QWORD PTR [rbx],0x10
   1400061a9:	jb     0x1400061b4
   1400061ab:	mov    rcx,QWORD PTR [rbx-0x18]
   1400061af:	call   0x1400062d4
   1400061b4:	mov    QWORD PTR [rbx],0xf
   1400061bb:	mov    QWORD PTR [rbx-0x8],r12
   1400061bf:	mov    BYTE PTR [rbx-0x18],r12b
   1400061c3:	add    rbx,0x28
   1400061c7:	lea    rax,[rbx-0x20]
   1400061cb:	cmp    rax,rsi
   1400061ce:	jne    0x1400061a5
   1400061d0:	mov    r12,QWORD PTR [rsp+0x30]
   1400061d5:	mov    QWORD PTR [rdi+0x20],rbp
   1400061d9:	mov    rbx,QWORD PTR [rsp+0x38]
   1400061de:	mov    rbp,QWORD PTR [rsp+0x40]
   1400061e3:	mov    rsi,QWORD PTR [rsp+0x48]
   1400061e8:	add    rsp,0x20
   1400061ec:	pop    rdi
   1400061ed:	ret    
   1400061ee:	int3   
   1400061ef:	int3   
   1400061f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400061f5:	mov    QWORD PTR [rsp+0x10],rbp
   1400061fa:	mov    QWORD PTR [rsp+0x18],rsi
   1400061ff:	push   rdi
   140006200:	sub    rsp,0x20
   140006204:	mov    r9,rdx
   140006207:	mov    rsi,rdx
   14000620a:	movabs rax,0x6666666666666667
   140006214:	sub    r9,rcx
   140006217:	mov    rdi,r8
   14000621a:	mov    rbx,rcx
   14000621d:	imul   r9
   140006220:	sar    rdx,0x4
   140006224:	mov    rax,rdx
   140006227:	shr    rax,0x3f
   14000622b:	add    rdx,rax
   14000622e:	lea    rax,[rdx+rdx*4]
   140006232:	lea    rbp,[r8+rax*8]
   140006236:	cmp    rcx,rsi
   140006239:	je     0x14000625c
   14000623b:	sub    rdi,rcx
   14000623e:	xchg   ax,ax
   140006240:	lea    rcx,[rdi+rbx*1]
   140006244:	or     r9,0xffffffffffffffff
   140006248:	xor    r8d,r8d
   14000624b:	mov    rdx,rbx
   14000624e:	call   0x140002630
   140006253:	add    rbx,0x28
   140006257:	cmp    rbx,rsi
   14000625a:	jne    0x140006240
   14000625c:	mov    rbx,QWORD PTR [rsp+0x30]
   140006261:	mov    rsi,QWORD PTR [rsp+0x40]
   140006266:	mov    rax,rbp
   140006269:	mov    rbp,QWORD PTR [rsp+0x38]
   14000626e:	add    rsp,0x20
   140006272:	pop    rdi
   140006273:	ret    
   140006274:	sub    rsp,0x28
   140006278:	call   0x1400064d8
   14000627d:	int3   
   14000627e:	int3   
   14000627f:	int3   
   140006280:	mov    rax,QWORD PTR [rip+0x41d79]        # 0x140048000
   140006287:	mov    QWORD PTR [rip+0x41d72],rcx        # 0x140048000
   14000628e:	ret    
   14000628f:	int3   
   140006290:	mov    QWORD PTR [rsp+0x8],rbx
   140006295:	push   rdi
   140006296:	sub    rsp,0x20
   14000629a:	mov    rdi,rcx
   14000629d:	jmp    0x1400062b7
   14000629f:	mov    rax,QWORD PTR [rip+0x41d5a]        # 0x140048000
   1400062a6:	test   rax,rax
   1400062a9:	je     0x1400062c4
   1400062ab:	mov    rcx,rdi
   1400062ae:	call   rax
   1400062b0:	test   eax,eax
   1400062b2:	je     0x1400062c4
   1400062b4:	mov    rcx,rdi
   1400062b7:	call   0x140014f50
   1400062bc:	mov    rbx,rax
   1400062bf:	test   rax,rax
   1400062c2:	je     0x14000629f
   1400062c4:	mov    rax,rbx
   1400062c7:	mov    rbx,QWORD PTR [rsp+0x30]
   1400062cc:	add    rsp,0x20
   1400062d0:	pop    rdi
   1400062d1:	ret    
   1400062d2:	int3   
   1400062d3:	int3   
   1400062d4:	jmp    0x140014f10
   1400062d9:	int3   
   1400062da:	int3   
   1400062db:	int3   
   1400062dc:	jmp    0x140006290
   1400062e1:	int3   
   1400062e2:	int3   
   1400062e3:	int3   
   1400062e4:	lea    rax,[rip+0x306f5]        # 0x1400369e0
   1400062eb:	ret    
   1400062ec:	sub    rsp,0x38
   1400062f0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400062f9:	xor    eax,eax
   1400062fb:	test   rcx,rcx
   1400062fe:	setne  al
   140006301:	test   eax,eax
   140006303:	jne    0x14000630b
   140006305:	call   0x140006520
   14000630a:	int3   
   14000630b:	cmp    QWORD PTR [rcx+0x10],0x0
   140006310:	jne    0x140006316
   140006312:	xor    eax,eax
   140006314:	jmp    0x14000632b
   140006316:	and    QWORD PTR [rsp+0x40],0x0
   14000631c:	call   QWORD PTR [rcx+0x10]
   14000631f:	mov    QWORD PTR [rsp+0x40],rax
   140006324:	jmp    0x14000632b
   140006326:	mov    rax,QWORD PTR [rsp+0x40]
   14000632b:	add    rsp,0x38
   14000632f:	ret    
   140006330:	sub    rsp,0x28
   140006334:	test   rcx,rcx
   140006337:	jne    0x14000633f
   140006339:	call   0x140006520
   14000633e:	int3   
   14000633f:	test   rdx,rdx
   140006342:	jne    0x14000634a
   140006344:	call   0x140006520
   140006349:	int3   
   14000634a:	cmp    rcx,rdx
   14000634d:	je     0x14000635c
   14000634f:	mov    rcx,QWORD PTR [rcx+0x18]
   140006353:	test   rcx,rcx
   140006356:	jne    0x14000634a
   140006358:	xor    eax,eax
   14000635a:	jmp    0x140006361
   14000635c:	mov    eax,0x1
   140006361:	add    rsp,0x28
   140006365:	ret    
   140006366:	int3   
   140006367:	int3   
   140006368:	rex push rbx
   14000636a:	sub    rsp,0x20
   14000636e:	mov    rbx,rdx
   140006371:	test   rcx,rcx
   140006374:	jne    0x14000637c
   140006376:	call   0x140006520
   14000637b:	int3   
   14000637c:	mov    rax,QWORD PTR [rcx]
   14000637f:	call   QWORD PTR [rax]
   140006381:	test   rax,rax
   140006384:	jne    0x14000638c
   140006386:	call   0x140006520
   14000638b:	int3   
   14000638c:	mov    rdx,rbx
   14000638f:	mov    rcx,rax
   140006392:	add    rsp,0x20
   140006396:	pop    rbx
   140006397:	jmp    0x140006330
   14000639c:	mov    QWORD PTR [rsp+0x8],rbx
   1400063a1:	push   rdi
   1400063a2:	sub    rsp,0x20
   1400063a6:	mov    rdi,rcx
   1400063a9:	call   0x140007df0
   1400063ae:	xor    ecx,ecx
   1400063b0:	mov    rbx,rax
   1400063b3:	call   0x140006d04
   1400063b8:	lea    rcx,[rbx+0x30]
   1400063bc:	mov    rdx,rdi
   1400063bf:	call   0x140006794
   1400063c4:	xor    ecx,ecx
   1400063c6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400063cb:	add    rsp,0x20
   1400063cf:	pop    rdi
   1400063d0:	jmp    0x140006d98
   1400063d5:	int3   
   1400063d6:	int3   
   1400063d7:	int3   
   1400063d8:	sub    rsp,0x28
   1400063dc:	cmp    DWORD PTR [rcx+0x8],0x0
   1400063e0:	jle    0x1400063ed
   1400063e2:	mov    rax,QWORD PTR [rcx]
   1400063e5:	mov    edx,0x1
   1400063ea:	call   QWORD PTR [rax+0x8]
   1400063ed:	add    rsp,0x28
   1400063f1:	ret    
   1400063f2:	int3   
   1400063f3:	int3   
   1400063f4:	mov    rax,QWORD PTR [rcx]
   1400063f7:	rex.W jmp QWORD PTR [rax+0x20]
   1400063fb:	int3   
   1400063fc:	mov    QWORD PTR [rsp+0x20],rbx
   140006401:	push   rdi
   140006402:	sub    rsp,0x240
   140006409:	mov    rax,QWORD PTR [rip+0x429b0]        # 0x140048dc0
   140006410:	xor    rax,rsp
   140006413:	mov    QWORD PTR [rsp+0x230],rax
   14000641b:	mov    rax,QWORD PTR [rcx]
   14000641e:	mov    edi,edx
   140006420:	mov    ebx,r8d
   140006423:	lea    r9,[rsp+0x20]
   140006428:	lea    rdx,[rsp+0x30]
   14000642d:	mov    r8d,0x200
   140006433:	call   QWORD PTR [rax+0x18]
   140006436:	mov    r8d,DWORD PTR [rsp+0x20]
   14000643b:	mov    edx,edi
   14000643d:	test   eax,eax
   14000643f:	je     0x14000644d
   140006441:	lea    rcx,[rsp+0x30]
   140006446:	call   0x140008274
   14000644b:	jmp    0x14000645e
   14000644d:	mov    eax,0xf020
   140006452:	test   ebx,ebx
   140006454:	cmove  ebx,eax
   140006457:	mov    ecx,ebx
   140006459:	call   0x1400082c4
   14000645e:	mov    rcx,QWORD PTR [rsp+0x230]
   140006466:	xor    rcx,rsp
   140006469:	call   0x1400144f0
   14000646e:	mov    rbx,QWORD PTR [rsp+0x268]
   140006476:	add    rsp,0x240
   14000647d:	pop    rdi
   14000647e:	ret    
   14000647f:	int3   
   140006480:	lea    rax,[rip+0x30651]        # 0x140036ad8
   140006487:	ret    
   140006488:	lea    rax,[rip+0x30679]        # 0x140036b08
   14000648f:	ret    
   140006490:	lea    rax,[rip+0x306a1]        # 0x140036b38
   140006497:	ret    
   140006498:	lea    rax,[rip+0x306c9]        # 0x140036b68
   14000649f:	ret    
   1400064a0:	rex push rbx
   1400064a2:	sub    rsp,0x20
   1400064a6:	mov    rbx,rcx
   1400064a9:	mov    DWORD PTR [rcx+0x14],0x1
   1400064b0:	lea    rdx,[rcx+0x1c]
   1400064b4:	mov    ecx,DWORD PTR [rcx+0x9c]
   1400064ba:	mov    r8d,0x80
   1400064c0:	call   0x140008384
   1400064c5:	xor    edx,edx
   1400064c7:	cmp    eax,edx
   1400064c9:	setne  dl
   1400064cc:	mov    DWORD PTR [rbx+0x18],edx
   1400064cf:	add    rsp,0x20
   1400064d3:	pop    rbx
   1400064d4:	ret    
   1400064d5:	int3   
   1400064d6:	int3   
   1400064d7:	int3   
   1400064d8:	sub    rsp,0x28
   1400064dc:	lea    rax,[rip+0x41d2d]        # 0x140048210
   1400064e3:	lea    rdx,[rip+0x3f79e]        # 0x140045c88
   1400064ea:	lea    rcx,[rsp+0x30]
   1400064ef:	mov    QWORD PTR [rsp+0x30],rax
   1400064f4:	call   0x1400158a0
   1400064f9:	int3   
   1400064fa:	int3   
   1400064fb:	int3   
   1400064fc:	sub    rsp,0x28
   140006500:	lea    rax,[rip+0x41da9]        # 0x1400482b0
   140006507:	lea    rdx,[rip+0x3f892]        # 0x140045da0
   14000650e:	lea    rcx,[rsp+0x30]
   140006513:	mov    QWORD PTR [rsp+0x30],rax
   140006518:	call   0x1400158a0
   14000651d:	int3   
   14000651e:	int3   
   14000651f:	int3   
   140006520:	sub    rsp,0x28
   140006524:	lea    rax,[rip+0x41e25]        # 0x140048350
   14000652b:	lea    rdx,[rip+0x3f8e6]        # 0x140045e18
   140006532:	lea    rcx,[rsp+0x30]
   140006537:	mov    QWORD PTR [rsp+0x30],rax
   14000653c:	call   0x1400158a0
   140006541:	int3   
   140006542:	int3   
   140006543:	int3   
   140006544:	sub    rsp,0x38
   140006548:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006551:	mov    ecx,0x180
   140006556:	call   0x140006648
   14000655b:	mov    rcx,rax
   14000655e:	mov    QWORD PTR [rsp+0x40],rax
   140006563:	xor    eax,eax
   140006565:	cmp    rcx,rax
   140006568:	je     0x140006570
   14000656a:	call   0x140006f80
   14000656f:	nop
   140006570:	add    rsp,0x38
   140006574:	ret    
   140006575:	int3   
   140006576:	int3   
   140006577:	int3   
   140006578:	mov    DWORD PTR [rcx+0x8],0x1
   14000657f:	mov    rax,rcx
   140006582:	ret    
   140006583:	int3   
   140006584:	mov    DWORD PTR [rcx+0x8],edx
   140006587:	mov    rax,rcx
   14000658a:	ret    
   14000658b:	int3   
   14000658c:	mov    QWORD PTR [rsp+0x8],rbx
   140006591:	mov    QWORD PTR [rsp+0x10],rsi
   140006596:	push   rdi
   140006597:	sub    rsp,0x20
   14000659b:	mov    esi,r8d
   14000659e:	mov    rdi,rdx
   1400065a1:	mov    rbx,rcx
   1400065a4:	test   rdx,rdx
   1400065a7:	je     0x14000660d
   1400065a9:	test   r8d,r8d
   1400065ac:	je     0x14000660d
   1400065ae:	test   r9,r9
   1400065b1:	je     0x1400065b7
   1400065b3:	and    DWORD PTR [r9],0x0
   1400065b7:	cmp    DWORD PTR [rcx+0x14],0x0
   1400065bb:	jne    0x1400065c2
   1400065bd:	call   0x1400064a0
   1400065c2:	cmp    DWORD PTR [rbx+0x18],0x0
   1400065c6:	je     0x140006605
   1400065c8:	lea    r8,[rbx+0x1c]
   1400065cc:	mov    rdx,rsi
   1400065cf:	or     r9,0xffffffffffffffff
   1400065d3:	mov    rcx,rdi
   1400065d6:	call   0x140015934
   1400065db:	test   eax,eax
   1400065dd:	je     0x140006608
   1400065df:	cmp    eax,0xc
   1400065e2:	je     0x1400065ff
   1400065e4:	cmp    eax,0x16
   1400065e7:	je     0x1400065f9
   1400065e9:	cmp    eax,0x22
   1400065ec:	je     0x1400065f9
   1400065ee:	cmp    eax,0x50
   1400065f1:	je     0x140006608
   1400065f3:	call   0x140006520
   1400065f8:	int3   
   1400065f9:	call   0x140006520
   1400065fe:	int3   
   1400065ff:	call   0x1400064d8
   140006604:	int3   
   140006605:	mov    BYTE PTR [rdi],0x0
   140006608:	mov    eax,DWORD PTR [rbx+0x18]
   14000660b:	jmp    0x14000660f
   14000660d:	xor    eax,eax
   14000660f:	mov    rbx,QWORD PTR [rsp+0x30]
   140006614:	mov    rsi,QWORD PTR [rsp+0x38]
   140006619:	add    rsp,0x20
   14000661d:	pop    rdi
   14000661e:	ret    
   14000661f:	int3   
   140006620:	rex push rbx
   140006622:	sub    rsp,0x20
   140006626:	lea    rax,[rip+0x3059b]        # 0x140036bc8
   14000662d:	mov    rbx,rcx
   140006630:	mov    QWORD PTR [rcx],rax
   140006633:	test   dl,0x1
   140006636:	je     0x14000663d
   140006638:	call   0x1400062d4
   14000663d:	mov    rax,rbx
   140006640:	add    rsp,0x20
   140006644:	pop    rbx
   140006645:	ret    
   140006646:	int3   
   140006647:	int3   
   140006648:	sub    rsp,0x28
   14000664c:	mov    rdx,rcx
   14000664f:	mov    ecx,0x40
   140006654:	call   QWORD PTR [rip+0x2fe3e]        # 0x140036498
   14000665a:	test   rax,rax
   14000665d:	jne    0x140006665
   14000665f:	call   0x1400064d8
   140006664:	int3   
   140006665:	add    rsp,0x28
   140006669:	ret    
   14000666a:	int3   
   14000666b:	int3   
   14000666c:	sub    rsp,0x28
   140006670:	test   rcx,rcx
   140006673:	je     0x14000667b
   140006675:	call   QWORD PTR [rip+0x2fe15]        # 0x140036490
   14000667b:	add    rsp,0x28
   14000667f:	ret    
   140006680:	mov    QWORD PTR [rsp+0x8],rbx
   140006685:	mov    QWORD PTR [rsp+0x10],rsi
   14000668a:	push   rdi
   14000668b:	sub    rsp,0x20
   14000668f:	mov    rsi,rcx
   140006692:	add    rcx,0x28
   140006696:	movsxd rbx,edx
   140006699:	call   QWORD PTR [rip+0x2fda9]        # 0x140036448
   14000669f:	test   ebx,ebx
   1400066a1:	jle    0x1400066d1
   1400066a3:	cmp    ebx,DWORD PTR [rsi+0xc]
   1400066a6:	jge    0x1400066d1
   1400066a8:	mov    ecx,DWORD PTR [rsi]
   1400066aa:	call   QWORD PTR [rip+0x2fda0]        # 0x140036450
   1400066b0:	test   rax,rax
   1400066b3:	je     0x1400066d1
   1400066b5:	cmp    ebx,DWORD PTR [rax+0x10]
   1400066b8:	jge    0x1400066d1
   1400066ba:	mov    rax,QWORD PTR [rax+0x18]
   1400066be:	lea    rcx,[rsi+0x28]
   1400066c2:	mov    rbx,QWORD PTR [rax+rbx*8]
   1400066c6:	call   QWORD PTR [rip+0x2fd8c]        # 0x140036458
   1400066cc:	mov    rax,rbx
   1400066cf:	jmp    0x1400066dd
   1400066d1:	lea    rcx,[rsi+0x28]
   1400066d5:	call   QWORD PTR [rip+0x2fd7d]        # 0x140036458
   1400066db:	xor    eax,eax
   1400066dd:	mov    rbx,QWORD PTR [rsp+0x30]
   1400066e2:	mov    rsi,QWORD PTR [rsp+0x38]
   1400066e7:	add    rsp,0x20
   1400066eb:	pop    rdi
   1400066ec:	ret    
   1400066ed:	int3   
   1400066ee:	int3   
   1400066ef:	int3   
   1400066f0:	rex push rdi
   1400066f2:	sub    rsp,0x30
   1400066f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400066ff:	mov    QWORD PTR [rsp+0x40],rbx
   140006704:	mov    rdi,rdx
   140006707:	mov    rbx,rcx
   14000670a:	mov    rax,QWORD PTR [rcx]
   14000670d:	test   rax,rax
   140006710:	jne    0x140006732
   140006712:	lea    ecx,[rax+0x10]
   140006715:	call   0x140006d04
   14000671a:	nop
   14000671b:	mov    rax,QWORD PTR [rbx]
   14000671e:	test   rax,rax
   140006721:	jne    0x140006728
   140006723:	call   rdi
   140006725:	mov    QWORD PTR [rbx],rax
   140006728:	mov    ecx,0x10
   14000672d:	call   0x140006d98
   140006732:	mov    rax,QWORD PTR [rbx]
   140006735:	mov    rbx,QWORD PTR [rsp+0x40]
   14000673a:	add    rsp,0x30
   14000673e:	pop    rdi
   14000673f:	ret    
   140006740:	sub    rsp,0x28
   140006744:	mov    rax,QWORD PTR [rcx]
   140006747:	test   rax,rax
   14000674a:	je     0x140006777
   14000674c:	mov    rax,QWORD PTR [rcx]
   14000674f:	mov    QWORD PTR [rsp+0x30],rax
   140006754:	mov    rax,QWORD PTR [rsp+0x30]
   140006759:	mov    QWORD PTR [rsp+0x30],rax
   14000675e:	mov    rax,QWORD PTR [rsp+0x30]
   140006763:	test   rax,rax
   140006766:	je     0x140006777
   140006768:	mov    rcx,QWORD PTR [rsp+0x30]
   14000676d:	mov    edx,0x1
   140006772:	mov    rax,QWORD PTR [rcx]
   140006775:	call   QWORD PTR [rax]
   140006777:	add    rsp,0x28
   14000677b:	ret    
   14000677c:	sub    rsp,0x28
   140006780:	cmp    ecx,0x8007000e
   140006786:	jne    0x14000678e
   140006788:	call   0x1400064d8
   14000678d:	int3   
   14000678e:	call   0x14000845c
   140006793:	int3   
   140006794:	sub    rsp,0x28
   140006798:	mov    r8,rcx
   14000679b:	test   rdx,rdx
   14000679e:	jne    0x1400067a6
   1400067a0:	call   0x140006520
   1400067a5:	int3   
   1400067a6:	mov    rax,QWORD PTR [r8]
   1400067a9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400067ad:	mov    QWORD PTR [rdx+rcx*1],rax
   1400067b1:	mov    QWORD PTR [r8],rdx
   1400067b4:	add    rsp,0x28
   1400067b8:	ret    
   1400067b9:	int3   
   1400067ba:	int3   
   1400067bb:	int3   
   1400067bc:	rex push rbx
   1400067be:	sub    rsp,0x20
   1400067c2:	xor    eax,eax
   1400067c4:	mov    rbx,rcx
   1400067c7:	mov    QWORD PTR [rcx+0x18],rax
   1400067cb:	mov    QWORD PTR [rcx+0x20],0x8
   1400067d3:	mov    DWORD PTR [rcx+0x4],eax
   1400067d6:	mov    DWORD PTR [rcx+0x8],0x1
   1400067dd:	mov    DWORD PTR [rcx+0xc],eax
   1400067e0:	mov    QWORD PTR [rcx+0x10],rax
   1400067e4:	call   QWORD PTR [rip+0x2fc4e]        # 0x140036438
   1400067ea:	mov    DWORD PTR [rbx],eax
   1400067ec:	cmp    eax,0xffffffff
   1400067ef:	jne    0x1400067f7
   1400067f1:	call   0x1400064d8
   1400067f6:	int3   
   1400067f7:	lea    rcx,[rbx+0x28]
   1400067fb:	call   QWORD PTR [rip+0x2fc3f]        # 0x140036440
   140006801:	mov    rax,rbx
   140006804:	add    rsp,0x20
   140006808:	pop    rbx
   140006809:	ret    
   14000680a:	int3   
   14000680b:	int3   
   14000680c:	mov    rax,rsp
   14000680f:	mov    QWORD PTR [rax+0x8],rbx
   140006813:	mov    QWORD PTR [rax+0x10],rbp
   140006817:	mov    QWORD PTR [rax+0x18],rsi
   14000681b:	mov    QWORD PTR [rax+0x20],rdi
   14000681f:	push   r12
   140006821:	sub    rsp,0x20
   140006825:	mov    rdi,rcx
   140006828:	add    rcx,0x28
   14000682c:	call   QWORD PTR [rip+0x2fc16]        # 0x140036448
   140006832:	movsxd rcx,DWORD PTR [rdi+0x4]
   140006836:	movsxd rsi,DWORD PTR [rdi+0x8]
   14000683a:	cmp    esi,ecx
   14000683c:	jge    0x140006852
   14000683e:	mov    rax,QWORD PTR [rdi+0x10]
   140006842:	mov    rdx,rsi
   140006845:	add    rdx,rdx
   140006848:	test   BYTE PTR [rax+rdx*8],0x1
   14000684c:	je     0x14000695a
   140006852:	mov    esi,0x1
   140006857:	mov    rdx,rsi
   14000685a:	cmp    rdx,rcx
   14000685d:	jge    0x14000687a
   14000685f:	mov    rax,QWORD PTR [rdi+0x10]
   140006863:	add    rax,0x10
   140006867:	test   BYTE PTR [rax],0x1
   14000686a:	je     0x14000687a
   14000686c:	inc    rdx
   14000686f:	inc    esi
   140006871:	add    rax,0x10
   140006875:	cmp    rdx,rcx
   140006878:	jl     0x140006867
   14000687a:	cmp    esi,ecx
   14000687c:	jl     0x14000695a
   140006882:	lea    r12d,[rcx+0x20]
   140006886:	mov    rcx,QWORD PTR [rdi+0x10]
   14000688a:	test   rcx,rcx
   14000688d:	jne    0x1400068ba
   14000688f:	mov    eax,r12d
   140006892:	mov    ecx,0xffffffff
   140006897:	shl    rax,0x4
   14000689b:	cmp    rax,rcx
   14000689e:	jbe    0x1400068ab
   1400068a0:	mov    ecx,0x80070057
   1400068a5:	call   0x14000677c
   1400068aa:	int3   
   1400068ab:	mov    edx,eax
   1400068ad:	mov    ecx,0x2
   1400068b2:	call   QWORD PTR [rip+0x2fb58]        # 0x140036410
   1400068b8:	jmp    0x1400068fa
   1400068ba:	call   QWORD PTR [rip+0x2fb58]        # 0x140036418
   1400068c0:	mov    rcx,rax
   1400068c3:	mov    rbx,rax
   1400068c6:	call   QWORD PTR [rip+0x2fb54]        # 0x140036420
   1400068cc:	mov    r11d,r12d
   1400068cf:	mov    ecx,0xffffffff
   1400068d4:	shl    r11,0x4
   1400068d8:	cmp    r11,rcx
   1400068db:	jbe    0x1400068e8
   1400068dd:	mov    ecx,0x80070057
   1400068e2:	call   0x14000677c
   1400068e7:	int3   
   1400068e8:	mov    edx,r11d
   1400068eb:	mov    r8d,0x2002
   1400068f1:	mov    rcx,rbx
   1400068f4:	call   QWORD PTR [rip+0x2fb2e]        # 0x140036428
   1400068fa:	test   rax,rax
   1400068fd:	jne    0x140006927
   1400068ff:	mov    rcx,QWORD PTR [rdi+0x10]
   140006903:	test   rcx,rcx
   140006906:	je     0x140006917
   140006908:	call   QWORD PTR [rip+0x2fb0a]        # 0x140036418
   14000690e:	mov    rcx,rax
   140006911:	call   QWORD PTR [rip+0x2fb19]        # 0x140036430
   140006917:	lea    rcx,[rdi+0x28]
   14000691b:	call   QWORD PTR [rip+0x2fb37]        # 0x140036458
   140006921:	call   0x1400064d8
   140006926:	int3   
   140006927:	mov    rcx,rax
   14000692a:	call   QWORD PTR [rip+0x2fb00]        # 0x140036430
   140006930:	movsxd rcx,DWORD PTR [rdi+0x4]
   140006934:	xor    edx,edx
   140006936:	mov    rbx,rax
   140006939:	mov    eax,r12d
   14000693c:	shl    rcx,0x4
   140006940:	sub    eax,DWORD PTR [rdi+0x4]
   140006943:	add    rcx,rbx
   140006946:	movsxd r8,eax
   140006949:	shl    r8,0x4
   14000694d:	call   0x140015b00
   140006952:	mov    DWORD PTR [rdi+0x4],r12d
   140006956:	mov    QWORD PTR [rdi+0x10],rbx
   14000695a:	cmp    esi,DWORD PTR [rdi+0xc]
   14000695d:	jl     0x140006965
   14000695f:	lea    ecx,[rsi+0x1]
   140006962:	mov    DWORD PTR [rdi+0xc],ecx
   140006965:	mov    rcx,QWORD PTR [rdi+0x10]
   140006969:	movsxd rdx,esi
   14000696c:	add    rdx,rdx
   14000696f:	or     DWORD PTR [rcx+rdx*8],0x1
   140006973:	lea    ecx,[rsi+0x1]
   140006976:	mov    DWORD PTR [rdi+0x8],ecx
   140006979:	lea    rcx,[rdi+0x28]
   14000697d:	call   QWORD PTR [rip+0x2fad5]        # 0x140036458
   140006983:	mov    rbx,QWORD PTR [rsp+0x30]
   140006988:	mov    rbp,QWORD PTR [rsp+0x38]
   14000698d:	mov    rdi,QWORD PTR [rsp+0x48]
   140006992:	mov    eax,esi
   140006994:	mov    rsi,QWORD PTR [rsp+0x40]
   140006999:	add    rsp,0x20
   14000699d:	pop    r12
   14000699f:	ret    
   1400069a0:	mov    rax,rsp
   1400069a3:	mov    QWORD PTR [rax+0x8],rbx
   1400069a7:	mov    QWORD PTR [rax+0x10],rbp
   1400069ab:	mov    QWORD PTR [rax+0x18],rsi
   1400069af:	mov    QWORD PTR [rax+0x20],rdi
   1400069b3:	push   r12
   1400069b5:	sub    rsp,0x20
   1400069b9:	mov    rsi,rcx
   1400069bc:	add    rcx,0x28
   1400069c0:	movsxd rdi,edx
   1400069c3:	call   QWORD PTR [rip+0x2fa7f]        # 0x140036448
   1400069c9:	test   edi,edi
   1400069cb:	jle    0x140006a14
   1400069cd:	cmp    edi,DWORD PTR [rsi+0xc]
   1400069d0:	jge    0x140006a14
   1400069d2:	mov    rbx,QWORD PTR [rsi+0x18]
   1400069d6:	jmp    0x140006a01
   1400069d8:	cmp    edi,DWORD PTR [rbx+0x10]
   1400069db:	jge    0x1400069fd
   1400069dd:	mov    rax,QWORD PTR [rbx+0x18]
   1400069e1:	mov    rcx,QWORD PTR [rax+rdi*8]
   1400069e5:	test   rcx,rcx
   1400069e8:	je     0x1400069f4
   1400069ea:	mov    rax,QWORD PTR [rcx]
   1400069ed:	mov    edx,0x1
   1400069f2:	call   QWORD PTR [rax]
   1400069f4:	mov    rax,QWORD PTR [rbx+0x18]
   1400069f8:	and    QWORD PTR [rax+rdi*8],0x0
   1400069fd:	mov    rbx,QWORD PTR [rbx+0x8]
   140006a01:	test   rbx,rbx
   140006a04:	jne    0x1400069d8
   140006a06:	mov    rax,QWORD PTR [rsi+0x10]
   140006a0a:	mov    rdx,rdi
   140006a0d:	add    rdx,rdx
   140006a10:	and    DWORD PTR [rax+rdx*8],0xfffffffe
   140006a14:	lea    rcx,[rsi+0x28]
   140006a18:	mov    rbx,QWORD PTR [rsp+0x30]
   140006a1d:	mov    rbp,QWORD PTR [rsp+0x38]
   140006a22:	mov    rsi,QWORD PTR [rsp+0x40]
   140006a27:	mov    rdi,QWORD PTR [rsp+0x48]
   140006a2c:	add    rsp,0x20
   140006a30:	pop    r12
   140006a32:	rex.W jmp QWORD PTR [rip+0x2fa1f]        # 0x140036458
   140006a39:	int3   
   140006a3a:	int3   
   140006a3b:	int3   
   140006a3c:	mov    QWORD PTR [rsp+0x8],rcx
   140006a41:	push   rdi
   140006a42:	push   r12
   140006a44:	push   r13
   140006a46:	sub    rsp,0x30
   140006a4a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006a53:	mov    QWORD PTR [rsp+0x58],rbx
   140006a58:	mov    QWORD PTR [rsp+0x60],rsi
   140006a5d:	mov    r13,r8
   140006a60:	movsxd rsi,edx
   140006a63:	mov    rdi,rcx
   140006a66:	add    rcx,0x28
   140006a6a:	call   QWORD PTR [rip+0x2f9d8]        # 0x140036448
   140006a70:	test   esi,esi
   140006a72:	jle    0x140006ba7
   140006a78:	cmp    esi,DWORD PTR [rdi+0xc]
   140006a7b:	jge    0x140006ba7
   140006a81:	mov    ecx,DWORD PTR [rdi]
   140006a83:	call   QWORD PTR [rip+0x2f9c7]        # 0x140036450
   140006a89:	mov    rbx,rax
   140006a8c:	test   rax,rax
   140006a8f:	je     0x140006aa5
   140006a91:	cmp    esi,DWORD PTR [rax+0x10]
   140006a94:	jl     0x140006b89
   140006a9a:	test   r13,r13
   140006a9d:	je     0x140006b89
   140006aa3:	jmp    0x140006ade
   140006aa5:	mov    ecx,0x20
   140006aaa:	call   0x140006648
   140006aaf:	mov    rbx,rax
   140006ab2:	test   rax,rax
   140006ab5:	je     0x140006ac3
   140006ab7:	lea    rax,[rip+0x30212]        # 0x140036cd0
   140006abe:	mov    QWORD PTR [rbx],rax
   140006ac1:	jmp    0x140006ac5
   140006ac3:	xor    ebx,ebx
   140006ac5:	and    DWORD PTR [rbx+0x10],0x0
   140006ac9:	and    QWORD PTR [rbx+0x18],0x0
   140006ace:	mov    rcx,QWORD PTR [rdi+0x20]
   140006ad2:	mov    rax,QWORD PTR [rdi+0x18]
   140006ad6:	mov    QWORD PTR [rbx+rcx*1],rax
   140006ada:	mov    QWORD PTR [rdi+0x18],rbx
   140006ade:	cmp    QWORD PTR [rbx+0x18],0x0
   140006ae3:	jne    0x140006b10
   140006ae5:	mov    eax,DWORD PTR [rdi+0xc]
   140006ae8:	shl    rax,0x3
   140006aec:	mov    ecx,0xffffffff
   140006af1:	cmp    rax,rcx
   140006af4:	jbe    0x140006b01
   140006af6:	mov    ecx,0x80070057
   140006afb:	call   0x14000677c
   140006b00:	int3   
   140006b01:	mov    edx,eax
   140006b03:	xor    ecx,ecx
   140006b05:	call   QWORD PTR [rip+0x2f98d]        # 0x140036498
   140006b0b:	mov    r11,rax
   140006b0e:	jmp    0x140006b41
   140006b10:	mov    eax,DWORD PTR [rdi+0xc]
   140006b13:	shl    rax,0x3
   140006b17:	mov    ecx,0xffffffff
   140006b1c:	cmp    rax,rcx
   140006b1f:	jbe    0x140006b2c
   140006b21:	mov    ecx,0x80070057
   140006b26:	call   0x14000677c
   140006b2b:	int3   
   140006b2c:	mov    edx,eax
   140006b2e:	mov    r8d,0x2
   140006b34:	mov    rcx,QWORD PTR [rbx+0x18]
   140006b38:	call   QWORD PTR [rip+0x2f8c2]        # 0x140036400
   140006b3e:	mov    r11,rax
   140006b41:	test   r11,r11
   140006b44:	jne    0x140006b56
   140006b46:	lea    rcx,[rdi+0x28]
   140006b4a:	call   QWORD PTR [rip+0x2f908]        # 0x140036458
   140006b50:	call   0x1400064d8
   140006b55:	int3   
   140006b56:	mov    QWORD PTR [rbx+0x18],r11
   140006b5a:	mov    eax,DWORD PTR [rdi+0xc]
   140006b5d:	sub    eax,DWORD PTR [rbx+0x10]
   140006b60:	movsxd r8,eax
   140006b63:	shl    r8,0x3
   140006b67:	movsxd rax,DWORD PTR [rbx+0x10]
   140006b6b:	lea    rcx,[r11+rax*8]
   140006b6f:	xor    edx,edx
   140006b71:	call   0x140015b00
   140006b76:	mov    r11d,DWORD PTR [rdi+0xc]
   140006b7a:	mov    DWORD PTR [rbx+0x10],r11d
   140006b7e:	mov    rdx,rbx
   140006b81:	mov    ecx,DWORD PTR [rdi]
   140006b83:	call   QWORD PTR [rip+0x2f87f]        # 0x140036408
   140006b89:	mov    rcx,QWORD PTR [rbx+0x18]
   140006b8d:	test   rcx,rcx
   140006b90:	je     0x140006b9b
   140006b92:	cmp    esi,DWORD PTR [rbx+0x10]
   140006b95:	jge    0x140006b9b
   140006b97:	mov    QWORD PTR [rcx+rsi*8],r13
   140006b9b:	lea    rcx,[rdi+0x28]
   140006b9f:	call   QWORD PTR [rip+0x2f8b3]        # 0x140036458
   140006ba5:	jmp    0x140006bb1
   140006ba7:	lea    rcx,[rdi+0x28]
   140006bab:	call   QWORD PTR [rip+0x2f8a7]        # 0x140036458
   140006bb1:	mov    rbx,QWORD PTR [rsp+0x58]
   140006bb6:	mov    rsi,QWORD PTR [rsp+0x60]
   140006bbb:	add    rsp,0x30
   140006bbf:	pop    r13
   140006bc1:	pop    r12
   140006bc3:	pop    rdi
   140006bc4:	ret    
   140006bc5:	int3   
   140006bc6:	int3   
   140006bc7:	int3   
   140006bc8:	rex push rbx
   140006bca:	sub    rsp,0x20
   140006bce:	mov    rbx,rcx
   140006bd1:	test   dl,0x1
   140006bd4:	je     0x140006be1
   140006bd6:	test   rcx,rcx
   140006bd9:	je     0x140006be1
   140006bdb:	call   QWORD PTR [rip+0x2f8af]        # 0x140036490
   140006be1:	mov    rax,rbx
   140006be4:	add    rsp,0x20
   140006be8:	pop    rbx
   140006be9:	ret    
   140006bea:	int3   
   140006beb:	int3   
   140006bec:	rex push rdi
   140006bee:	sub    rsp,0x30
   140006bf2:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140006bfb:	mov    QWORD PTR [rsp+0x40],rbx
   140006c00:	mov    QWORD PTR [rsp+0x50],rsi
   140006c05:	mov    rsi,rdx
   140006c08:	mov    rdi,rcx
   140006c0b:	xor    eax,eax
   140006c0d:	test   rdx,rdx
   140006c10:	setne  al
   140006c13:	test   eax,eax
   140006c15:	jne    0x140006c1d
   140006c17:	call   0x140006520
   140006c1c:	int3   
   140006c1d:	cmp    DWORD PTR [rcx],0x0
   140006c20:	jne    0x140006c66
   140006c22:	mov    rax,QWORD PTR [rip+0x43fc7]        # 0x14004abf0
   140006c29:	test   rax,rax
   140006c2c:	jne    0x140006c52
   140006c2e:	lea    rcx,[rip+0x43fcb]        # 0x14004ac00
   140006c35:	mov    QWORD PTR [rsp+0x48],rcx
   140006c3a:	call   0x1400067bc
   140006c3f:	nop
   140006c40:	mov    QWORD PTR [rip+0x43fa9],rax        # 0x14004abf0
   140006c47:	test   rax,rax
   140006c4a:	jne    0x140006c52
   140006c4c:	call   0x140006520
   140006c51:	int3   
   140006c52:	mov    rcx,rax
   140006c55:	call   0x14000680c
   140006c5a:	mov    DWORD PTR [rdi],eax
   140006c5c:	test   eax,eax
   140006c5e:	jne    0x140006c66
   140006c60:	call   0x140006520
   140006c65:	int3   
   140006c66:	mov    edx,DWORD PTR [rdi]
   140006c68:	mov    rcx,QWORD PTR [rip+0x43f81]        # 0x14004abf0
   140006c6f:	call   0x140006680
   140006c74:	mov    rbx,rax
   140006c77:	test   rax,rax
   140006c7a:	jne    0x140006c92
   140006c7c:	call   rsi
   140006c7e:	mov    rbx,rax
   140006c81:	mov    r8,rax
   140006c84:	mov    edx,DWORD PTR [rdi]
   140006c86:	mov    rcx,QWORD PTR [rip+0x43f63]        # 0x14004abf0
   140006c8d:	call   0x140006a3c
   140006c92:	mov    rax,rbx
   140006c95:	mov    rbx,QWORD PTR [rsp+0x40]
   140006c9a:	mov    rsi,QWORD PTR [rsp+0x50]
   140006c9f:	add    rsp,0x30
   140006ca3:	pop    rdi
   140006ca4:	ret    
   140006ca5:	int3   
   140006ca6:	int3   
   140006ca7:	int3   
   140006ca8:	rex push rbx
   140006caa:	sub    rsp,0x20
   140006cae:	mov    edx,DWORD PTR [rcx]
   140006cb0:	mov    rbx,rcx
   140006cb3:	test   edx,edx
   140006cb5:	je     0x140006cc8
   140006cb7:	mov    rcx,QWORD PTR [rip+0x43f32]        # 0x14004abf0
   140006cbe:	test   rcx,rcx
   140006cc1:	je     0x140006cc8
   140006cc3:	call   0x1400069a0
   140006cc8:	and    DWORD PTR [rbx],0x0
   140006ccb:	add    rsp,0x20
   140006ccf:	pop    rbx
   140006cd0:	ret    
   140006cd1:	int3   
   140006cd2:	int3   
   140006cd3:	int3   
   140006cd4:	sub    rsp,0x28
   140006cd8:	mov    eax,DWORD PTR [rip+0x43f72]        # 0x14004ac50
   140006cde:	test   eax,eax
   140006ce0:	jne    0x140006cff
   140006ce2:	lea    rcx,[rip+0x4421f]        # 0x14004af08
   140006ce9:	mov    DWORD PTR [rip+0x43f5d],0x1        # 0x14004ac50
   140006cf3:	call   QWORD PTR [rip+0x2f747]        # 0x140036440
   140006cf9:	mov    eax,DWORD PTR [rip+0x43f51]        # 0x14004ac50
   140006cff:	add    rsp,0x28
   140006d03:	ret    
   140006d04:	mov    QWORD PTR [rsp+0x8],rbx
   140006d09:	push   rsi
   140006d0a:	sub    rsp,0x20
   140006d0e:	movsxd rbx,ecx
   140006d11:	cmp    ebx,0x11
   140006d14:	jb     0x140006d1c
   140006d16:	call   0x140006520
   140006d1b:	int3   
   140006d1c:	cmp    DWORD PTR [rip+0x43f2d],0x0        # 0x14004ac50
   140006d23:	jne    0x140006d2a
   140006d25:	call   0x140006cd4
   140006d2a:	lea    rsi,[rip+0xffffffffffff92cf]        # 0x140000000
   140006d31:	cmp    DWORD PTR [rsi+rbx*4+0x4af30],0x0
   140006d39:	jne    0x140006d78
   140006d3b:	lea    rcx,[rip+0x441c6]        # 0x14004af08
   140006d42:	call   QWORD PTR [rip+0x2f700]        # 0x140036448
   140006d48:	cmp    DWORD PTR [rsi+rbx*4+0x4af30],0x0
   140006d50:	jne    0x140006d6b
   140006d52:	lea    rax,[rbx+rbx*4]
   140006d56:	lea    rcx,[rsi+rax*8+0x4ac60]
   140006d5e:	call   QWORD PTR [rip+0x2f6dc]        # 0x140036440
   140006d64:	inc    DWORD PTR [rsi+rbx*4+0x4af30]
   140006d6b:	lea    rcx,[rip+0x44196]        # 0x14004af08
   140006d72:	call   QWORD PTR [rip+0x2f6e0]        # 0x140036458
   140006d78:	lea    rax,[rbx+rbx*4]
   140006d7c:	lea    rcx,[rsi+rax*8+0x4ac60]
   140006d84:	mov    rbx,QWORD PTR [rsp+0x30]
   140006d89:	add    rsp,0x20
   140006d8d:	pop    rsi
   140006d8e:	rex.W jmp QWORD PTR [rip+0x2f6b3]        # 0x140036448
   140006d95:	int3   
   140006d96:	int3   
   140006d97:	int3   
   140006d98:	sub    rsp,0x28
   140006d9c:	cmp    ecx,0x11
   140006d9f:	jb     0x140006da7
   140006da1:	call   0x140006520
   140006da6:	int3   
   140006da7:	movsxd rax,ecx
   140006daa:	lea    rcx,[rax+rax*4]
   140006dae:	lea    rax,[rip+0x43eab]        # 0x14004ac60
   140006db5:	lea    rcx,[rax+rcx*8]
   140006db9:	add    rsp,0x28
   140006dbd:	rex.W jmp QWORD PTR [rip+0x2f694]        # 0x140036458
   140006dc4:	jmp    0x140006ca8
   140006dc9:	int3   
   140006dca:	int3   
   140006dcb:	int3   
   140006dcc:	sub    rsp,0x28
   140006dd0:	mov    r8,QWORD PTR [rip+0x441b9]        # 0x14004af90
   140006dd7:	xor    eax,eax
   140006dd9:	cmp    r8,rax
   140006ddc:	je     0x140006de1
   140006dde:	call   r8
   140006de1:	add    rsp,0x28
   140006de5:	ret    
   140006de6:	int3   
   140006de7:	int3   
   140006de8:	rex push rbx
   140006dea:	sub    rsp,0x20
   140006dee:	xor    ebx,ebx
   140006df0:	cmp    rdx,rbx
   140006df3:	jne    0x140006dfb
   140006df5:	call   0x140006520
   140006dfa:	int3   
   140006dfb:	mov    rax,QWORD PTR [rip+0x44186]        # 0x14004af88
   140006e02:	cmp    rax,rbx
   140006e05:	je     0x140006e10
   140006e07:	call   rax
   140006e09:	cmp    eax,ebx
   140006e0b:	setne  bl
   140006e0e:	jmp    0x140006e15
   140006e10:	mov    ebx,0x2
   140006e15:	mov    eax,ebx
   140006e17:	add    rsp,0x20
   140006e1b:	pop    rbx
   140006e1c:	ret    
   140006e1d:	int3   
   140006e1e:	int3   
   140006e1f:	int3   
   140006e20:	mov    QWORD PTR [rsp+0x8],rbx
   140006e25:	mov    QWORD PTR [rsp+0x10],rbp
   140006e2a:	mov    QWORD PTR [rsp+0x18],rsi
   140006e2f:	push   rdi
   140006e30:	sub    rsp,0x20
   140006e34:	mov    edi,r8d
   140006e37:	mov    rsi,rdx
   140006e3a:	mov    rbp,rcx
   140006e3d:	call   QWORD PTR [rip+0x2f595]        # 0x1400363d8
   140006e43:	test   rax,rax
   140006e46:	jne    0x140006e4c
   140006e48:	xor    eax,eax
   140006e4a:	jmp    0x140006e97
   140006e4c:	mov    rcx,rax
   140006e4f:	call   QWORD PTR [rip+0x2f58b]        # 0x1400363e0
   140006e55:	mov    rbx,rax
   140006e58:	test   rax,rax
   140006e5b:	je     0x140006e48
   140006e5d:	mov    rdx,rsi
   140006e60:	mov    rcx,rbp
   140006e63:	call   QWORD PTR [rip+0x2f57f]        # 0x1400363e8
   140006e69:	mov    r11d,eax
   140006e6c:	add    r11,rbx
   140006e6f:	and    edi,0xf
   140006e72:	jbe    0x140006e86
   140006e74:	cmp    rbx,r11
   140006e77:	jae    0x140006e48
   140006e79:	add    edi,0xffffffff
   140006e7c:	movzx  eax,WORD PTR [rbx]
   140006e7f:	lea    rbx,[rbx+rax*2+0x2]
   140006e84:	jne    0x140006e74
   140006e86:	cmp    rbx,r11
   140006e89:	jae    0x140006e48
   140006e8b:	movzx  eax,WORD PTR [rbx]
   140006e8e:	neg    ax
   140006e91:	sbb    rax,rax
   140006e94:	and    rax,rbx
   140006e97:	mov    rbx,QWORD PTR [rsp+0x30]
   140006e9c:	mov    rbp,QWORD PTR [rsp+0x38]
   140006ea1:	mov    rsi,QWORD PTR [rsp+0x40]
   140006ea6:	add    rsp,0x20
   140006eaa:	pop    rdi
   140006eab:	ret    
   140006eac:	sub    rsp,0x28
   140006eb0:	mov    ecx,0x8007000e
   140006eb5:	call   0x14000677c
   140006eba:	int3   
   140006ebb:	int3   
   140006ebc:	mov    QWORD PTR [rsp+0x8],rbx
   140006ec1:	push   rdi
   140006ec2:	sub    rsp,0x20
   140006ec6:	mov    rbx,rcx
   140006ec9:	mov    rcx,QWORD PTR [rcx]
   140006ecc:	mov    rax,QWORD PTR [rcx]
   140006ecf:	call   QWORD PTR [rax+0x20]
   140006ed2:	cmp    DWORD PTR [rbx+0x10],0x0
   140006ed6:	mov    rcx,rax
   140006ed9:	jl     0x140006eea
   140006edb:	cmp    rax,QWORD PTR [rbx]
   140006ede:	jne    0x140006eea
   140006ee0:	mov    rdi,rbx
   140006ee3:	lock add DWORD PTR [rbx+0x10],0x1
   140006ee8:	jmp    0x140006f24
   140006eea:	mov    rax,QWORD PTR [rax]
   140006eed:	mov    edx,DWORD PTR [rbx+0x8]
   140006ef0:	mov    r8d,0x1
   140006ef6:	call   QWORD PTR [rax]
   140006ef8:	mov    rdi,rax
   140006efb:	test   rax,rax
   140006efe:	jne    0x140006f06
   140006f00:	call   0x140006eac
   140006f05:	int3   
   140006f06:	mov    eax,DWORD PTR [rbx+0x8]
   140006f09:	lea    r8,[rbx+0x18]
   140006f0d:	lea    rcx,[rdi+0x18]
   140006f11:	mov    DWORD PTR [rdi+0x8],eax
   140006f14:	mov    eax,DWORD PTR [rbx+0x8]
   140006f17:	inc    eax
   140006f19:	movsxd rdx,eax
   140006f1c:	mov    r9,rdx
   140006f1f:	call   0x140014510
   140006f24:	mov    rax,rdi
   140006f27:	mov    rbx,QWORD PTR [rsp+0x30]
   140006f2c:	add    rsp,0x20
   140006f30:	pop    rdi
   140006f31:	ret    
   140006f32:	int3   
   140006f33:	int3   
   140006f34:	rex push rbx
   140006f36:	sub    rsp,0x20
   140006f3a:	mov    r8d,edx
   140006f3d:	mov    rdx,QWORD PTR [rcx]
   140006f40:	mov    rbx,rcx
   140006f43:	sub    rdx,0x18
   140006f47:	cmp    DWORD PTR [rdx+0xc],r8d
   140006f4b:	mov    rcx,QWORD PTR [rdx]
   140006f4e:	jge    0x140006f79
   140006f50:	test   r8d,r8d
   140006f53:	jle    0x140006f79
   140006f55:	mov    rax,QWORD PTR [rcx]
   140006f58:	mov    r9d,0x1
   140006f5e:	call   QWORD PTR [rax+0x10]
   140006f61:	test   rax,rax
   140006f64:	jne    0x140006f6c
   140006f66:	call   0x140006eac
   140006f6b:	int3   
   140006f6c:	add    rax,0x18
   140006f70:	mov    QWORD PTR [rbx],rax
   140006f73:	add    rsp,0x20
   140006f77:	pop    rbx
   140006f78:	ret    
   140006f79:	call   0x140006eac
   140006f7e:	int3   
   140006f7f:	int3   
   140006f80:	lea    rax,[rip+0x2fda9]        # 0x140036d30
   140006f87:	mov    QWORD PTR [rcx],rax
   140006f8a:	xor    eax,eax
   140006f8c:	mov    DWORD PTR [rcx+0x60],eax
   140006f8f:	mov    DWORD PTR [rcx+0x90],eax
   140006f95:	mov    DWORD PTR [rsp+0x8],eax
   140006f99:	mov    DWORD PTR [rsp+0xc],eax
   140006f9d:	mov    rax,QWORD PTR [rsp+0x8]
   140006fa2:	mov    QWORD PTR [rcx+0x88],rax
   140006fa9:	mov    rax,rcx
   140006fac:	ret    
   140006fad:	int3   
   140006fae:	int3   
   140006faf:	int3   
   140006fb0:	rex push rbx
   140006fb2:	sub    rsp,0x20
   140006fb6:	lea    rax,[rip+0x2fd73]        # 0x140036d30
   140006fbd:	mov    rbx,rcx
   140006fc0:	mov    QWORD PTR [rcx],rax
   140006fc3:	mov    rcx,QWORD PTR [rcx+0x50]
   140006fc7:	test   rcx,rcx
   140006fca:	je     0x140006fd2
   140006fcc:	call   QWORD PTR [rip+0x2f666]        # 0x140036638
   140006fd2:	mov    rcx,QWORD PTR [rbx+0x48]
   140006fd6:	test   rcx,rcx
   140006fd9:	je     0x140006fe1
   140006fdb:	call   QWORD PTR [rip+0x2f657]        # 0x140036638
   140006fe1:	mov    rcx,QWORD PTR [rbx+0x18]
   140006fe5:	test   rcx,rcx
   140006fe8:	je     0x140006fef
   140006fea:	call   0x140014f10
   140006fef:	add    rsp,0x20
   140006ff3:	pop    rbx
   140006ff4:	ret    
   140006ff5:	int3   
   140006ff6:	int3   
   140006ff7:	int3   
   140006ff8:	mov    QWORD PTR [rsp+0x8],rbx
   140006ffd:	push   rdi
   140006ffe:	sub    rsp,0x20
   140007002:	lea    rax,[rip+0x2fd37]        # 0x140036d40
   140007009:	mov    rbx,rcx
   14000700c:	mov    QWORD PTR [rcx],rax
   14000700f:	mov    rcx,QWORD PTR [rcx+0x78]
   140007013:	test   rcx,rcx
   140007016:	je     0x140007021
   140007018:	mov    rax,QWORD PTR [rcx]
   14000701b:	call   QWORD PTR [rax+0x288]
   140007021:	mov    rcx,QWORD PTR [rbx+0x90]
   140007028:	call   0x1400062d4
   14000702d:	mov    rcx,QWORD PTR [rbx+0x28]
   140007031:	mov    edi,0x1
   140007036:	test   rcx,rcx
   140007039:	je     0x140007042
   14000703b:	mov    rax,QWORD PTR [rcx]
   14000703e:	mov    edx,edi
   140007040:	call   QWORD PTR [rax]
   140007042:	mov    rcx,QWORD PTR [rbx+0x30]
   140007046:	test   rcx,rcx
   140007049:	je     0x140007052
   14000704b:	mov    rax,QWORD PTR [rcx]
   14000704e:	mov    edx,edi
   140007050:	call   QWORD PTR [rax]
   140007052:	mov    rcx,QWORD PTR [rbx+0x38]
   140007056:	test   rcx,rcx
   140007059:	je     0x140007062
   14000705b:	mov    rax,QWORD PTR [rcx]
   14000705e:	mov    edx,edi
   140007060:	call   QWORD PTR [rax]
   140007062:	mov    rcx,QWORD PTR [rbx+0x40]
   140007066:	test   rcx,rcx
   140007069:	je     0x140007072
   14000706b:	mov    rax,QWORD PTR [rcx]
   14000706e:	mov    edx,edi
   140007070:	call   QWORD PTR [rax]
   140007072:	mov    rcx,QWORD PTR [rbx+0x48]
   140007076:	test   rcx,rcx
   140007079:	je     0x140007082
   14000707b:	mov    rax,QWORD PTR [rcx]
   14000707e:	mov    edx,edi
   140007080:	call   QWORD PTR [rax]
   140007082:	mov    rax,QWORD PTR [rbx+0x70]
   140007086:	test   rax,rax
   140007089:	je     0x1400070ae
   14000708b:	cmp    QWORD PTR [rax+0x18],0x0
   140007090:	je     0x1400070ae
   140007092:	mov    rcx,QWORD PTR [rbx+0x70]
   140007096:	call   0x140008be4
   14000709b:	mov    rcx,rax
   14000709e:	call   0x1400062d4
   1400070a3:	mov    r11,QWORD PTR [rbx+0x70]
   1400070a7:	cmp    QWORD PTR [r11+0x18],0x0
   1400070ac:	jne    0x140007092
   1400070ae:	mov    rcx,QWORD PTR [rbx+0x60]
   1400070b2:	test   rcx,rcx
   1400070b5:	je     0x1400070bf
   1400070b7:	mov    rax,QWORD PTR [rcx]
   1400070ba:	mov    edx,edi
   1400070bc:	call   QWORD PTR [rax+0x8]
   1400070bf:	mov    rcx,QWORD PTR [rbx+0x68]
   1400070c3:	test   rcx,rcx
   1400070c6:	je     0x1400070d0
   1400070c8:	mov    rax,QWORD PTR [rcx]
   1400070cb:	mov    edx,edi
   1400070cd:	call   QWORD PTR [rax+0x8]
   1400070d0:	mov    rcx,QWORD PTR [rbx+0x70]
   1400070d4:	test   rcx,rcx
   1400070d7:	je     0x1400070e1
   1400070d9:	mov    rax,QWORD PTR [rcx]
   1400070dc:	mov    edx,edi
   1400070de:	call   QWORD PTR [rax+0x8]
   1400070e1:	mov    rbx,QWORD PTR [rsp+0x30]
   1400070e6:	add    rsp,0x20
   1400070ea:	pop    rdi
   1400070eb:	ret    
   1400070ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400070f1:	push   rdi
   1400070f2:	sub    rsp,0x20
   1400070f6:	mov    rax,QWORD PTR [rcx]
   1400070f9:	mov    rbx,rcx
   1400070fc:	xor    ecx,ecx
   1400070fe:	lea    rdx,[rax-0x18]
   140007102:	mov    rdi,QWORD PTR [rdx]
   140007105:	cmp    DWORD PTR [rdx+0x8],ecx
   140007108:	je     0x140007150
   14000710a:	cmp    DWORD PTR [rdx+0x10],ecx
   14000710d:	jge    0x140007129
   14000710f:	cmp    DWORD PTR [rax-0xc],ecx
   140007112:	jge    0x14000711f
   140007114:	mov    ecx,0x80070057
   140007119:	call   0x14000677c
   14000711e:	int3   
   14000711f:	mov    DWORD PTR [rax-0x10],ecx
   140007122:	mov    rax,QWORD PTR [rbx]
   140007125:	mov    BYTE PTR [rax],cl
   140007127:	jmp    0x140007150
   140007129:	or     eax,0xffffffff
   14000712c:	lock xadd DWORD PTR [rdx+0x10],eax
   140007131:	dec    eax
   140007133:	cmp    eax,ecx
   140007135:	jg     0x140007140
   140007137:	mov    rcx,QWORD PTR [rdx]
   14000713a:	mov    rax,QWORD PTR [rcx]
   14000713d:	call   QWORD PTR [rax+0x8]
   140007140:	mov    rax,QWORD PTR [rdi]
   140007143:	mov    rcx,rdi
   140007146:	call   QWORD PTR [rax+0x18]
   140007149:	add    rax,0x18
   14000714d:	mov    QWORD PTR [rbx],rax
   140007150:	mov    rbx,QWORD PTR [rsp+0x30]
   140007155:	add    rsp,0x20
   140007159:	pop    rdi
   14000715a:	ret    
   14000715b:	int3   
   14000715c:	sub    rsp,0x28
   140007160:	mov    rdx,QWORD PTR [rcx]
   140007163:	sub    rdx,0x18
   140007167:	or     eax,0xffffffff
   14000716a:	lock xadd DWORD PTR [rdx+0x10],eax
   14000716f:	dec    eax
   140007171:	test   eax,eax
   140007173:	jg     0x14000717e
   140007175:	mov    rcx,QWORD PTR [rdx]
   140007178:	mov    rax,QWORD PTR [rcx]
   14000717b:	call   QWORD PTR [rax+0x8]
   14000717e:	add    rsp,0x28
   140007182:	ret    
   140007183:	int3   
   140007184:	mov    rax,rsp
   140007187:	mov    QWORD PTR [rax+0x8],rbx
   14000718b:	mov    QWORD PTR [rax+0x10],rbp
   14000718f:	mov    QWORD PTR [rax+0x18],rsi
   140007193:	mov    QWORD PTR [rax+0x20],rdi
   140007197:	push   r12
   140007199:	sub    rsp,0x20
   14000719d:	mov    rbx,QWORD PTR [rcx]
   1400071a0:	mov    rsi,rcx
   1400071a3:	mov    edi,edx
   1400071a5:	mov    rcx,QWORD PTR [rbx-0x18]
   1400071a9:	mov    ebp,DWORD PTR [rbx-0x10]
   1400071ac:	mov    rax,QWORD PTR [rcx]
   1400071af:	call   QWORD PTR [rax+0x20]
   1400071b2:	mov    r8d,0x1
   1400071b8:	mov    edx,edi
   1400071ba:	mov    r9,QWORD PTR [rax]
   1400071bd:	mov    rcx,rax
   1400071c0:	call   QWORD PTR [r9]
   1400071c3:	mov    r12,rax
   1400071c6:	test   rax,rax
   1400071c9:	jne    0x1400071d1
   1400071cb:	call   0x140006eac
   1400071d0:	int3   
   1400071d1:	cmp    ebp,edi
   1400071d3:	mov    r8,rbx
   1400071d6:	cmovl  edi,ebp
   1400071d9:	inc    edi
   1400071db:	movsxd rdx,edi
   1400071de:	lea    rdi,[rax+0x18]
   1400071e2:	mov    rcx,rdi
   1400071e5:	mov    r9,rdx
   1400071e8:	call   0x140014510
   1400071ed:	mov    DWORD PTR [r12+0x8],ebp
   1400071f2:	or     eax,0xffffffff
   1400071f5:	lock xadd DWORD PTR [rbx-0x8],eax
   1400071fa:	dec    eax
   1400071fc:	test   eax,eax
   1400071fe:	jg     0x14000720e
   140007200:	mov    rcx,QWORD PTR [rbx-0x18]
   140007204:	lea    rdx,[rbx-0x18]
   140007208:	mov    rax,QWORD PTR [rcx]
   14000720b:	call   QWORD PTR [rax+0x8]
   14000720e:	mov    rbx,QWORD PTR [rsp+0x30]
   140007213:	mov    rbp,QWORD PTR [rsp+0x38]
   140007218:	mov    QWORD PTR [rsi],rdi
   14000721b:	mov    rsi,QWORD PTR [rsp+0x40]
   140007220:	mov    rdi,QWORD PTR [rsp+0x48]
   140007225:	add    rsp,0x20
   140007229:	pop    r12
   14000722b:	ret    
   14000722c:	sub    rsp,0x28
   140007230:	mov    eax,edx
   140007232:	mov    rdx,QWORD PTR [rcx]
   140007235:	cmp    DWORD PTR [rdx-0x10],eax
   140007238:	cmovg  eax,DWORD PTR [rdx-0x10]
   14000723c:	cmp    DWORD PTR [rdx-0x8],0x1
   140007240:	jle    0x14000724b
   140007242:	mov    edx,eax
   140007244:	call   0x140007184
   140007249:	jmp    0x14000726e
   14000724b:	mov    edx,DWORD PTR [rdx-0xc]
   14000724e:	cmp    edx,eax
   140007250:	jge    0x14000726e
   140007252:	mov    r8d,0x400
   140007258:	cmp    edx,r8d
   14000725b:	jle    0x140007262
   14000725d:	add    edx,r8d
   140007260:	jmp    0x140007264
   140007262:	add    edx,edx
   140007264:	cmp    edx,eax
   140007266:	cmovl  edx,eax
   140007269:	call   0x140006f34
   14000726e:	add    rsp,0x28
   140007272:	ret    
   140007273:	int3   
   140007274:	mov    QWORD PTR [rsp+0x8],rbx
   140007279:	push   rdi
   14000727a:	sub    rsp,0x20
   14000727e:	mov    ebx,edx
   140007280:	mov    rdi,rcx
   140007283:	call   0x140006fb0
   140007288:	test   bl,0x1
   14000728b:	je     0x140007295
   14000728d:	mov    rcx,rdi
   140007290:	call   0x14000666c
   140007295:	mov    rax,rdi
   140007298:	mov    rbx,QWORD PTR [rsp+0x30]
   14000729d:	add    rsp,0x20
   1400072a1:	pop    rdi
   1400072a2:	ret    
   1400072a3:	int3   
   1400072a4:	mov    QWORD PTR [rsp+0x8],rbx
   1400072a9:	push   rdi
   1400072aa:	sub    rsp,0x20
   1400072ae:	mov    ebx,edx
   1400072b0:	mov    rdi,rcx
   1400072b3:	call   0x140006ff8
   1400072b8:	test   bl,0x1
   1400072bb:	je     0x1400072c5
   1400072bd:	mov    rcx,rdi
   1400072c0:	call   0x14000666c
   1400072c5:	mov    rax,rdi
   1400072c8:	mov    rbx,QWORD PTR [rsp+0x30]
   1400072cd:	add    rsp,0x20
   1400072d1:	pop    rdi
   1400072d2:	ret    
   1400072d3:	int3   
   1400072d4:	sub    rsp,0x28
   1400072d8:	mov    ecx,0xa8
   1400072dd:	call   0x140006648
   1400072e2:	xor    edx,edx
   1400072e4:	cmp    rax,rdx
   1400072e7:	je     0x140007325
   1400072e9:	lea    rcx,[rip+0x2fa50]        # 0x140036d40
   1400072f0:	mov    QWORD PTR [rax],rcx
   1400072f3:	mov    QWORD PTR [rax+0x10],rdx
   1400072f7:	or     rcx,0xffffffffffffffff
   1400072fb:	mov    QWORD PTR [rax+0x88],rcx
   140007302:	mov    QWORD PTR [rax+0x98],rcx
   140007309:	lea    rcx,[rip+0xffffffffffffef64]        # 0x140006274
   140007310:	mov    QWORD PTR [rax+0x90],rdx
   140007317:	mov    QWORD PTR [rax+0x18],0xc8
   14000731f:	mov    QWORD PTR [rax+0x50],rcx
   140007323:	jmp    0x140007328
   140007325:	mov    rax,rdx
   140007328:	add    rsp,0x28
   14000732c:	ret    
   14000732d:	int3   
   14000732e:	int3   
   14000732f:	int3   
   140007330:	sub    rsp,0x28
   140007334:	lea    rdx,[rip+0xfffffffffffff209]        # 0x140006544
   14000733b:	lea    rcx,[rip+0x43c5e]        # 0x14004afa0
   140007342:	call   0x140006bec
   140007347:	test   rax,rax
   14000734a:	jne    0x140007352
   14000734c:	call   0x140006520
   140007351:	int3   
   140007352:	add    rsp,0x28
   140007356:	ret    
   140007357:	int3   
   140007358:	mov    QWORD PTR [rsp+0x8],rcx
   14000735d:	push   rbx
   14000735e:	sub    rsp,0x30
   140007362:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000736b:	mov    rbx,rcx
   14000736e:	lea    rax,[rip+0x2fa03]        # 0x140036d78
   140007375:	mov    QWORD PTR [rcx],rax
   140007378:	mov    rcx,QWORD PTR [rcx+0xb8]
   14000737f:	test   rcx,rcx
   140007382:	je     0x1400073a8
   140007384:	mov    rax,QWORD PTR [rcx]
   140007387:	lea    rdx,[rbx+0x80]
   14000738e:	call   QWORD PTR [rax+0x18]
   140007391:	mov    rcx,QWORD PTR [rbx+0xb8]
   140007398:	test   rcx,rcx
   14000739b:	je     0x1400073a8
   14000739d:	mov    rax,QWORD PTR [rcx]
   1400073a0:	mov    edx,0x1
   1400073a5:	call   QWORD PTR [rax+0x8]
   1400073a8:	mov    rax,QWORD PTR [rbx+0xc8]
   1400073af:	mov    rcx,QWORD PTR [rax]
   1400073b2:	test   rcx,rcx
   1400073b5:	je     0x1400073c1
   1400073b7:	mov    rax,QWORD PTR [rcx]
   1400073ba:	mov    edx,0x1
   1400073bf:	call   QWORD PTR [rax]
   1400073c1:	mov    rax,QWORD PTR [rbx+0xc8]
   1400073c8:	mov    rcx,QWORD PTR [rax+0x8]
   1400073cc:	test   rcx,rcx
   1400073cf:	je     0x1400073db
   1400073d1:	mov    rax,QWORD PTR [rcx]
   1400073d4:	mov    edx,0x1
   1400073d9:	call   QWORD PTR [rax]
   1400073db:	mov    rcx,QWORD PTR [rbx+0xc8]
   1400073e2:	call   0x1400062d4
   1400073e7:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400073ee:	test   rcx,rcx
   1400073f1:	je     0x14000740f
   1400073f3:	cmp    rcx,0xffffffffffffffff
   1400073f7:	je     0x14000740f
   1400073f9:	mov    rax,QWORD PTR [rip+0x43b80]        # 0x14004af80
   140007400:	test   rax,rax
   140007403:	je     0x140007407
   140007405:	call   rax
   140007407:	or     QWORD PTR [rbx+0xd8],0xffffffffffffffff
   14000740f:	lea    rcx,[rbx+0xc0]
   140007416:	call   0x140006ca8
   14000741b:	nop
   14000741c:	mov    rdx,QWORD PTR [rbx+0x58]
   140007420:	sub    rdx,0x18
   140007424:	or     eax,0xffffffff
   140007427:	lock xadd DWORD PTR [rdx+0x10],eax
   14000742c:	dec    eax
   14000742e:	test   eax,eax
   140007430:	jg     0x14000743b
   140007432:	mov    rcx,QWORD PTR [rdx]
   140007435:	mov    rax,QWORD PTR [rcx]
   140007438:	call   QWORD PTR [rax+0x8]
   14000743b:	add    rsp,0x30
   14000743f:	pop    rbx
   140007440:	ret    
   140007441:	int3   
   140007442:	int3   
   140007443:	int3   
   140007444:	mov    rax,rsp
   140007447:	mov    QWORD PTR [rax+0x8],rbx
   14000744b:	mov    QWORD PTR [rax+0x10],rbp
   14000744f:	mov    QWORD PTR [rax+0x18],rsi
   140007453:	mov    QWORD PTR [rax+0x20],rdi
   140007457:	push   r13
   140007459:	sub    rsp,0x40
   14000745d:	mov    eax,r8d
   140007460:	mov    rsi,rdx
   140007463:	mov    r13d,0x1
   140007469:	shr    eax,0x4
   14000746c:	mov    ebx,r8d
   14000746f:	mov    rdi,rcx
   140007472:	add    ax,r13w
   140007476:	lea    r8d,[r13+0x5]
   14000747a:	mov    rcx,rsi
   14000747d:	movzx  edx,ax
   140007480:	call   QWORD PTR [rip+0x2ef4a]        # 0x1400363d0
   140007486:	test   rax,rax
   140007489:	je     0x140007543
   14000748f:	mov    r8d,ebx
   140007492:	mov    rdx,rax
   140007495:	mov    rcx,rsi
   140007498:	call   0x140006e20
   14000749d:	mov    rsi,rax
   1400074a0:	test   rax,rax
   1400074a3:	je     0x140007543
   1400074a9:	and    QWORD PTR [rsp+0x38],0x0
   1400074af:	and    QWORD PTR [rsp+0x30],0x0
   1400074b5:	movzx  r9d,WORD PTR [rax]
   1400074b9:	and    DWORD PTR [rsp+0x28],0x0
   1400074be:	and    QWORD PTR [rsp+0x20],0x0
   1400074c4:	xor    edx,edx
   1400074c6:	lea    ecx,[rdx+0x3]
   1400074c9:	lea    r8,[rax+0x2]
   1400074cd:	call   QWORD PTR [rip+0x2eef5]        # 0x1400363c8
   1400074d3:	mov    ecx,r13d
   1400074d6:	movsxd rbx,eax
   1400074d9:	mov    rax,QWORD PTR [rdi]
   1400074dc:	sub    ecx,DWORD PTR [rax-0x8]
   1400074df:	mov    eax,DWORD PTR [rax-0xc]
   1400074e2:	sub    eax,ebx
   1400074e4:	or     ecx,eax
   1400074e6:	jge    0x1400074f2
   1400074e8:	mov    edx,ebx
   1400074ea:	mov    rcx,rdi
   1400074ed:	call   0x14000722c
   1400074f2:	and    QWORD PTR [rsp+0x38],0x0
   1400074f8:	mov    rax,QWORD PTR [rdi]
   1400074fb:	and    QWORD PTR [rsp+0x30],0x0
   140007501:	movzx  r9d,WORD PTR [rsi]
   140007505:	xor    edx,edx
   140007507:	lea    r8,[rsi+0x2]
   14000750b:	lea    ecx,[rdx+0x3]
   14000750e:	mov    DWORD PTR [rsp+0x28],ebx
   140007512:	mov    QWORD PTR [rsp+0x20],rax
   140007517:	call   QWORD PTR [rip+0x2eeab]        # 0x1400363c8
   14000751d:	test   ebx,ebx
   14000751f:	js     0x140007538
   140007521:	mov    rcx,QWORD PTR [rdi]
   140007524:	cmp    ebx,DWORD PTR [rcx-0xc]
   140007527:	jg     0x140007538
   140007529:	mov    DWORD PTR [rcx-0x10],ebx
   14000752c:	mov    rcx,QWORD PTR [rdi]
   14000752f:	mov    eax,r13d
   140007532:	mov    BYTE PTR [rbx+rcx*1],0x0
   140007536:	jmp    0x140007545
   140007538:	mov    ecx,0x80070057
   14000753d:	call   0x14000677c
   140007542:	int3   
   140007543:	xor    eax,eax
   140007545:	mov    rbx,QWORD PTR [rsp+0x50]
   14000754a:	mov    rbp,QWORD PTR [rsp+0x58]
   14000754f:	mov    rsi,QWORD PTR [rsp+0x60]
   140007554:	mov    rdi,QWORD PTR [rsp+0x68]
   140007559:	add    rsp,0x40
   14000755d:	pop    r13
   14000755f:	ret    
   140007560:	mov    rax,rsp
   140007563:	mov    QWORD PTR [rax+0x8],rbx
   140007567:	mov    QWORD PTR [rax+0x10],rbp
   14000756b:	mov    QWORD PTR [rax+0x18],rsi
   14000756f:	mov    QWORD PTR [rax+0x20],rdi
   140007573:	push   r12
   140007575:	sub    rsp,0x20
   140007579:	movsxd rbx,r8d
   14000757c:	mov    rsi,rdx
   14000757f:	mov    rdi,rcx
   140007582:	test   r8d,r8d
   140007585:	jne    0x1400075a7
   140007587:	call   0x1400070ec
   14000758c:	mov    rbx,QWORD PTR [rsp+0x30]
   140007591:	mov    rbp,QWORD PTR [rsp+0x38]
   140007596:	mov    rsi,QWORD PTR [rsp+0x40]
   14000759b:	mov    rdi,QWORD PTR [rsp+0x48]
   1400075a0:	add    rsp,0x20
   1400075a4:	pop    r12
   1400075a6:	ret    
   1400075a7:	test   rdx,rdx
   1400075aa:	jne    0x1400075b7
   1400075ac:	mov    ecx,0x80070057
   1400075b1:	call   0x14000677c
   1400075b6:	int3   
   1400075b7:	mov    rax,QWORD PTR [rcx]
   1400075ba:	mov    r12,rdx
   1400075bd:	mov    ecx,0x1
   1400075c2:	sub    ecx,DWORD PTR [rax-0x8]
   1400075c5:	mov    ebp,DWORD PTR [rax-0x10]
   1400075c8:	sub    r12,rax
   1400075cb:	mov    eax,DWORD PTR [rax-0xc]
   1400075ce:	sub    eax,ebx
   1400075d0:	or     ecx,eax
   1400075d2:	jge    0x1400075de
   1400075d4:	mov    edx,ebx
   1400075d6:	mov    rcx,rdi
   1400075d9:	call   0x14000722c
   1400075de:	mov    rcx,QWORD PTR [rdi]
   1400075e1:	cmp    r12,rbp
   1400075e4:	mov    r9,rbx
   1400075e7:	movsxd rdx,DWORD PTR [rcx-0xc]
   1400075eb:	mov    rbp,rbx
   1400075ee:	ja     0x1400075fb
   1400075f0:	lea    r8,[rcx+r12*1]
   1400075f4:	call   0x1400145a8
   1400075f9:	jmp    0x140007603
   1400075fb:	mov    r8,rsi
   1400075fe:	call   0x140014510
   140007603:	test   ebx,ebx
   140007605:	js     0x14000761e
   140007607:	mov    rax,QWORD PTR [rdi]
   14000760a:	cmp    ebx,DWORD PTR [rax-0xc]
   14000760d:	jg     0x14000761e
   14000760f:	mov    DWORD PTR [rax-0x10],ebx
   140007612:	mov    rax,QWORD PTR [rdi]
   140007615:	mov    BYTE PTR [rax+rbp*1],0x0
   140007619:	jmp    0x14000758c
   14000761e:	mov    ecx,0x80070057
   140007623:	call   0x14000677c
   140007628:	int3   
   140007629:	int3   
   14000762a:	int3   
   14000762b:	int3   
   14000762c:	mov    QWORD PTR [rsp+0x8],rbx
   140007631:	push   rdi
   140007632:	sub    rsp,0x20
   140007636:	mov    ebx,edx
   140007638:	mov    rdi,rcx
   14000763b:	call   0x140007358
   140007640:	test   bl,0x1
   140007643:	je     0x14000764d
   140007645:	mov    rcx,rdi
   140007648:	call   0x14000666c
   14000764d:	mov    rax,rdi
   140007650:	mov    rbx,QWORD PTR [rsp+0x30]
   140007655:	add    rsp,0x20
   140007659:	pop    rdi
   14000765a:	ret    
   14000765b:	int3   
   14000765c:	mov    QWORD PTR [rsp+0x8],rcx
   140007661:	push   rdi
   140007662:	sub    rsp,0x30
   140007666:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000766f:	mov    QWORD PTR [rsp+0x48],rbx
   140007674:	mov    rbx,rdx
   140007677:	mov    rdi,rcx
   14000767a:	call   0x140008ae0
   14000767f:	mov    rcx,rax
   140007682:	xor    r8d,r8d
   140007685:	test   rax,rax
   140007688:	setne  r8b
   14000768c:	test   r8d,r8d
   14000768f:	jne    0x14000769c
   140007691:	mov    ecx,0x80004005
   140007696:	call   0x14000677c
   14000769b:	int3   
   14000769c:	mov    rax,QWORD PTR [rax]
   14000769f:	call   QWORD PTR [rax+0x18]
   1400076a2:	add    rax,0x18
   1400076a6:	mov    QWORD PTR [rdi],rax
   1400076a9:	test   rbx,rbx
   1400076ac:	je     0x1400076e0
   1400076ae:	test   rbx,0xffffffffffff0000
   1400076b5:	jne    0x1400076d6
   1400076b7:	movzx  ebx,bx
   1400076ba:	mov    ecx,ebx
   1400076bc:	call   0x140008440
   1400076c1:	test   rax,rax
   1400076c4:	je     0x1400076f1
   1400076c6:	mov    r8d,ebx
   1400076c9:	mov    rdx,rax
   1400076cc:	mov    rcx,rdi
   1400076cf:	call   0x140007444
   1400076d4:	jmp    0x1400076f1
   1400076d6:	mov    rcx,rbx
   1400076d9:	call   0x140015c00
   1400076de:	jmp    0x1400076e2
   1400076e0:	xor    eax,eax
   1400076e2:	mov    r8d,eax
   1400076e5:	mov    rdx,rbx
   1400076e8:	mov    rcx,rdi
   1400076eb:	call   0x140007560
   1400076f0:	nop
   1400076f1:	mov    rax,rdi
   1400076f4:	mov    rbx,QWORD PTR [rsp+0x48]
   1400076f9:	add    rsp,0x30
   1400076fd:	pop    rdi
   1400076fe:	ret    
   1400076ff:	int3   
   140007700:	rex push rdi
   140007702:	sub    rsp,0x30
   140007706:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000770f:	mov    QWORD PTR [rsp+0x48],rbx
   140007714:	mov    rbx,rcx
   140007717:	lea    rdx,[rip+0x2f6d2]        # 0x140036df0
   14000771e:	lea    rcx,[rsp+0x40]
   140007723:	call   0x14000765c
   140007728:	nop
   140007729:	lea    rax,[rip+0x2f658]        # 0x140036d88
   140007730:	mov    QWORD PTR [rbx],rax
   140007733:	mov    rcx,QWORD PTR [rsp+0x40]
   140007738:	add    rcx,0xffffffffffffffe8
   14000773c:	call   0x140006ebc
   140007741:	add    rax,0x18
   140007745:	mov    QWORD PTR [rbx+0x18],rax
   140007749:	xor    edi,edi
   14000774b:	mov    QWORD PTR [rbx+0x8],rdi
   14000774f:	mov    BYTE PTR [rbx+0x10],dil
   140007753:	mov    rdx,QWORD PTR [rsp+0x40]
   140007758:	add    rdx,0xffffffffffffffe8
   14000775c:	or     eax,0xffffffff
   14000775f:	lock xadd DWORD PTR [rdx+0x10],eax
   140007764:	dec    eax
   140007766:	cmp    eax,edi
   140007768:	jg     0x140007773
   14000776a:	mov    rcx,QWORD PTR [rdx]
   14000776d:	mov    rax,QWORD PTR [rcx]
   140007770:	call   QWORD PTR [rax+0x8]
   140007773:	lea    rax,[rip+0x2f66e]        # 0x140036de8
   14000777a:	mov    QWORD PTR [rbx],rax
   14000777d:	mov    QWORD PTR [rbx+0x20],rdi
   140007781:	mov    QWORD PTR [rbx+0x28],rdi
   140007785:	mov    QWORD PTR [rbx+0x30],rdi
   140007789:	mov    QWORD PTR [rbx+0x38],rdi
   14000778d:	mov    QWORD PTR [rbx+0x40],rdi
   140007791:	mov    QWORD PTR [rbx+0x48],rdi
   140007795:	mov    QWORD PTR [rbx+0x50],rdi
   140007799:	mov    QWORD PTR [rbx+0x58],rdi
   14000779d:	mov    QWORD PTR [rbx+0x60],rdi
   1400077a1:	mov    QWORD PTR [rbx+0x68],rdi
   1400077a5:	mov    QWORD PTR [rbx+0x70],rdi
   1400077a9:	mov    QWORD PTR [rbx+0x78],rdi
   1400077ad:	mov    QWORD PTR [rbx+0x80],rdi
   1400077b4:	mov    QWORD PTR [rbx+0x88],rdi
   1400077bb:	mov    QWORD PTR [rbx+0x90],rdi
   1400077c2:	mov    QWORD PTR [rbx+0x98],rdi
   1400077c9:	mov    QWORD PTR [rbx+0xa0],rdi
   1400077d0:	mov    QWORD PTR [rbx+0xa8],rdi
   1400077d7:	mov    QWORD PTR [rbx+0xb0],rdi
   1400077de:	mov    QWORD PTR [rbx+0xb8],rdi
   1400077e5:	mov    QWORD PTR [rbx+0xc0],rdi
   1400077ec:	mov    QWORD PTR [rbx+0xc8],rdi
   1400077f3:	mov    QWORD PTR [rbx+0xd0],rdi
   1400077fa:	mov    QWORD PTR [rbx+0xd8],rdi
   140007801:	mov    QWORD PTR [rbx+0xe0],rdi
   140007808:	mov    QWORD PTR [rbx+0xe8],rdi
   14000780f:	mov    QWORD PTR [rbx+0xf0],rdi
   140007816:	mov    QWORD PTR [rbx+0xf8],rdi
   14000781d:	mov    QWORD PTR [rbx+0x100],rdi
   140007824:	mov    QWORD PTR [rbx+0x108],rdi
   14000782b:	mov    QWORD PTR [rbx+0x110],rdi
   140007832:	mov    QWORD PTR [rbx+0x118],rdi
   140007839:	mov    QWORD PTR [rbx+0x120],rdi
   140007840:	mov    QWORD PTR [rbx+0x128],rdi
   140007847:	mov    QWORD PTR [rbx+0x130],rdi
   14000784e:	mov    QWORD PTR [rbx+0x138],rdi
   140007855:	mov    QWORD PTR [rbx+0x140],rdi
   14000785c:	mov    QWORD PTR [rbx+0x148],rdi
   140007863:	mov    QWORD PTR [rbx+0x150],rdi
   14000786a:	mov    QWORD PTR [rbx+0x158],rdi
   140007871:	mov    QWORD PTR [rbx+0x160],rdi
   140007878:	mov    QWORD PTR [rbx+0x168],rdi
   14000787f:	mov    QWORD PTR [rbx+0x170],rdi
   140007886:	mov    QWORD PTR [rbx+0x178],rdi
   14000788d:	mov    QWORD PTR [rbx+0x180],rdi
   140007894:	mov    QWORD PTR [rbx+0x188],rdi
   14000789b:	mov    QWORD PTR [rbx+0x190],rdi
   1400078a2:	mov    QWORD PTR [rbx+0x198],rdi
   1400078a9:	mov    QWORD PTR [rbx+0x1a0],rdi
   1400078b0:	mov    QWORD PTR [rbx+0x1a8],rdi
   1400078b7:	mov    QWORD PTR [rbx+0x1b0],rdi
   1400078be:	mov    QWORD PTR [rbx+0x1b8],rdi
   1400078c5:	mov    QWORD PTR [rbx+0x1c0],rdi
   1400078cc:	mov    QWORD PTR [rbx+0x1c8],rdi
   1400078d3:	mov    QWORD PTR [rbx+0x1d0],rdi
   1400078da:	mov    QWORD PTR [rbx+0x1d8],rdi
   1400078e1:	mov    QWORD PTR [rbx+0x1e0],rdi
   1400078e8:	mov    QWORD PTR [rbx+0x1e8],rdi
   1400078ef:	mov    QWORD PTR [rbx+0x1f0],rdi
   1400078f6:	mov    QWORD PTR [rbx+0x1f8],rdi
   1400078fd:	mov    QWORD PTR [rbx+0x200],rdi
   140007904:	mov    QWORD PTR [rbx+0x208],rdi
   14000790b:	mov    QWORD PTR [rbx+0x210],rdi
   140007912:	mov    QWORD PTR [rbx+0x218],rdi
   140007919:	mov    QWORD PTR [rbx+0x220],rdi
   140007920:	mov    QWORD PTR [rbx+0x228],rdi
   140007927:	mov    QWORD PTR [rbx+0x230],rdi
   14000792e:	mov    QWORD PTR [rbx+0x238],rdi
   140007935:	mov    QWORD PTR [rbx+0x240],rdi
   14000793c:	mov    QWORD PTR [rbx+0x248],rdi
   140007943:	mov    QWORD PTR [rbx+0x250],rdi
   14000794a:	mov    QWORD PTR [rbx+0x258],rdi
   140007951:	mov    QWORD PTR [rbx+0x260],rdi
   140007958:	mov    QWORD PTR [rbx+0x268],rdi
   14000795f:	mov    QWORD PTR [rbx+0x270],rdi
   140007966:	mov    QWORD PTR [rbx+0x278],rdi
   14000796d:	mov    QWORD PTR [rbx+0x280],rdi
   140007974:	mov    QWORD PTR [rbx+0x288],rdi
   14000797b:	mov    QWORD PTR [rbx+0x290],rdi
   140007982:	mov    QWORD PTR [rbx+0x298],rdi
   140007989:	mov    QWORD PTR [rbx+0x2a0],rdi
   140007990:	mov    QWORD PTR [rbx+0x2a8],rdi
   140007997:	mov    QWORD PTR [rbx+0x2b0],rdi
   14000799e:	mov    QWORD PTR [rbx+0x2b8],rdi
   1400079a5:	mov    QWORD PTR [rbx+0x2c0],rdi
   1400079ac:	mov    QWORD PTR [rbx+0x2c8],rdi
   1400079b3:	mov    QWORD PTR [rbx+0x2d0],rdi
   1400079ba:	mov    QWORD PTR [rbx+0x2d8],rdi
   1400079c1:	mov    QWORD PTR [rbx+0x2e0],rdi
   1400079c8:	mov    QWORD PTR [rbx+0x2e8],rdi
   1400079cf:	mov    QWORD PTR [rbx+0x2f0],rdi
   1400079d6:	mov    QWORD PTR [rbx+0x2f8],rdi
   1400079dd:	mov    QWORD PTR [rbx+0x300],rdi
   1400079e4:	mov    QWORD PTR [rbx+0x308],rdi
   1400079eb:	mov    rax,rbx
   1400079ee:	mov    rbx,QWORD PTR [rsp+0x48]
   1400079f3:	add    rsp,0x30
   1400079f7:	pop    rdi
   1400079f8:	ret    
   1400079f9:	int3   
   1400079fa:	int3   
   1400079fb:	int3   
   1400079fc:	rex push rdi
   1400079fe:	sub    rsp,0x30
   140007a02:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007a0b:	mov    QWORD PTR [rsp+0x48],rbx
   140007a10:	mov    rbx,rcx
   140007a13:	lea    rdx,[rip+0x2f41e]        # 0x140036e38
   140007a1a:	lea    rcx,[rsp+0x40]
   140007a1f:	call   0x14000765c
   140007a24:	nop
   140007a25:	lea    rax,[rip+0x2f35c]        # 0x140036d88
   140007a2c:	mov    QWORD PTR [rbx],rax
   140007a2f:	mov    rcx,QWORD PTR [rsp+0x40]
   140007a34:	add    rcx,0xffffffffffffffe8
   140007a38:	call   0x140006ebc
   140007a3d:	add    rax,0x18
   140007a41:	mov    QWORD PTR [rbx+0x18],rax
   140007a45:	xor    edi,edi
   140007a47:	mov    QWORD PTR [rbx+0x8],rdi
   140007a4b:	mov    BYTE PTR [rbx+0x10],dil
   140007a4f:	mov    rdx,QWORD PTR [rsp+0x40]
   140007a54:	add    rdx,0xffffffffffffffe8
   140007a58:	or     eax,0xffffffff
   140007a5b:	lock xadd DWORD PTR [rdx+0x10],eax
   140007a60:	dec    eax
   140007a62:	cmp    eax,edi
   140007a64:	jg     0x140007a6f
   140007a66:	mov    rcx,QWORD PTR [rdx]
   140007a69:	mov    rax,QWORD PTR [rcx]
   140007a6c:	call   QWORD PTR [rax+0x8]
   140007a6f:	lea    rax,[rip+0x2f3ba]        # 0x140036e30
   140007a76:	mov    QWORD PTR [rbx],rax
   140007a79:	mov    QWORD PTR [rbx+0x20],rdi
   140007a7d:	mov    QWORD PTR [rbx+0x28],rdi
   140007a81:	mov    QWORD PTR [rbx+0x30],rdi
   140007a85:	mov    QWORD PTR [rbx+0x38],rdi
   140007a89:	mov    QWORD PTR [rbx+0x40],rdi
   140007a8d:	mov    QWORD PTR [rbx+0x48],rdi
   140007a91:	mov    QWORD PTR [rbx+0x50],rdi
   140007a95:	mov    QWORD PTR [rbx+0x58],rdi
   140007a99:	mov    QWORD PTR [rbx+0x60],rdi
   140007a9d:	mov    QWORD PTR [rbx+0x68],rdi
   140007aa1:	mov    QWORD PTR [rbx+0x70],rdi
   140007aa5:	mov    QWORD PTR [rbx+0x78],rdi
   140007aa9:	mov    QWORD PTR [rbx+0x80],rdi
   140007ab0:	mov    QWORD PTR [rbx+0x88],rdi
   140007ab7:	mov    QWORD PTR [rbx+0x90],rdi
   140007abe:	mov    QWORD PTR [rbx+0x98],rdi
   140007ac5:	mov    QWORD PTR [rbx+0xa0],rdi
   140007acc:	mov    QWORD PTR [rbx+0xa8],rdi
   140007ad3:	mov    QWORD PTR [rbx+0xb0],rdi
   140007ada:	mov    QWORD PTR [rbx+0xb8],rdi
   140007ae1:	mov    QWORD PTR [rbx+0xc0],rdi
   140007ae8:	mov    rax,rbx
   140007aeb:	mov    rbx,QWORD PTR [rsp+0x48]
   140007af0:	add    rsp,0x30
   140007af4:	pop    rdi
   140007af5:	ret    
   140007af6:	int3   
   140007af7:	int3   
   140007af8:	mov    QWORD PTR [rsp+0x8],rbx
   140007afd:	push   rdi
   140007afe:	sub    rsp,0x20
   140007b02:	cmp    BYTE PTR [rcx+0x10],0x0
   140007b06:	lea    rax,[rip+0x2f27b]        # 0x140036d88
   140007b0d:	mov    edi,edx
   140007b0f:	mov    QWORD PTR [rcx],rax
   140007b12:	mov    rbx,rcx
   140007b15:	je     0x140007b21
   140007b17:	mov    rcx,QWORD PTR [rcx+0x8]
   140007b1b:	call   QWORD PTR [rip+0x2e94f]        # 0x140036470
   140007b21:	mov    rdx,QWORD PTR [rbx+0x18]
   140007b25:	sub    rdx,0x18
   140007b29:	or     eax,0xffffffff
   140007b2c:	lock xadd DWORD PTR [rdx+0x10],eax
   140007b31:	dec    eax
   140007b33:	test   eax,eax
   140007b35:	jg     0x140007b40
   140007b37:	mov    rcx,QWORD PTR [rdx]
   140007b3a:	mov    rax,QWORD PTR [rcx]
   140007b3d:	call   QWORD PTR [rax+0x8]
   140007b40:	test   dil,0x1
   140007b44:	je     0x140007b4e
   140007b46:	mov    rcx,rbx
   140007b49:	call   0x14000666c
   140007b4e:	mov    rax,rbx
   140007b51:	mov    rbx,QWORD PTR [rsp+0x30]
   140007b56:	add    rsp,0x20
   140007b5a:	pop    rdi
   140007b5b:	ret    
   140007b5c:	rex push rbx
   140007b5e:	sub    rsp,0x30
   140007b62:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007b6b:	mov    rbx,rcx
   140007b6e:	lea    rdx,[rip+0x2f30b]        # 0x140036e80
   140007b75:	lea    rcx,[rsp+0x40]
   140007b7a:	call   0x14000765c
   140007b7f:	nop
   140007b80:	lea    rax,[rip+0x2f201]        # 0x140036d88
   140007b87:	mov    QWORD PTR [rbx],rax
   140007b8a:	mov    rcx,QWORD PTR [rsp+0x40]
   140007b8f:	add    rcx,0xffffffffffffffe8
   140007b93:	call   0x140006ebc
   140007b98:	add    rax,0x18
   140007b9c:	mov    QWORD PTR [rbx+0x18],rax
   140007ba0:	and    QWORD PTR [rbx+0x8],0x0
   140007ba5:	mov    BYTE PTR [rbx+0x10],0x0
   140007ba9:	mov    rdx,QWORD PTR [rsp+0x40]
   140007bae:	add    rdx,0xffffffffffffffe8
   140007bb2:	or     eax,0xffffffff
   140007bb5:	lock xadd DWORD PTR [rdx+0x10],eax
   140007bba:	dec    eax
   140007bbc:	test   eax,eax
   140007bbe:	jg     0x140007bc9
   140007bc0:	mov    rcx,QWORD PTR [rdx]
   140007bc3:	mov    rax,QWORD PTR [rcx]
   140007bc6:	call   QWORD PTR [rax+0x8]
   140007bc9:	lea    rax,[rip+0x2f2a8]        # 0x140036e78
   140007bd0:	mov    QWORD PTR [rbx],rax
   140007bd3:	and    QWORD PTR [rbx+0x20],0x0
   140007bd8:	mov    rax,rbx
   140007bdb:	add    rsp,0x30
   140007bdf:	pop    rbx
   140007be0:	ret    
   140007be1:	int3   
   140007be2:	int3   
   140007be3:	int3   
   140007be4:	mov    QWORD PTR [rsp+0x8],rcx
   140007be9:	push   r12
   140007beb:	sub    rsp,0x30
   140007bef:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007bf8:	mov    QWORD PTR [rsp+0x48],rsi
   140007bfd:	mov    QWORD PTR [rsp+0x58],rdi
   140007c02:	mov    r12d,edx
   140007c05:	mov    rdi,rcx
   140007c08:	lea    rax,[rip+0x2f169]        # 0x140036d78
   140007c0f:	mov    QWORD PTR [rcx],rax
   140007c12:	and    QWORD PTR [rcx+0x30],0x0
   140007c17:	and    QWORD PTR [rcx+0x38],0x0
   140007c1c:	and    QWORD PTR [rcx+0x40],0x0
   140007c21:	and    QWORD PTR [rcx+0x48],0x0
   140007c26:	call   0x140008ae0
   140007c2b:	mov    r11,rax
   140007c2e:	xor    ecx,ecx
   140007c30:	test   rax,rax
   140007c33:	setne  cl
   140007c36:	test   ecx,ecx
   140007c38:	jne    0x140007c45
   140007c3a:	mov    ecx,0x80004005
   140007c3f:	call   0x14000677c
   140007c44:	int3   
   140007c45:	mov    rax,QWORD PTR [rax]
   140007c48:	mov    rcx,r11
   140007c4b:	call   QWORD PTR [rax+0x18]
   140007c4e:	add    rax,0x18
   140007c52:	mov    QWORD PTR [rdi+0x58],rax
   140007c56:	and    QWORD PTR [rdi+0x70],0x0
   140007c5b:	and    QWORD PTR [rdi+0x78],0x0
   140007c60:	or     DWORD PTR [rdi+0x88],0xffffffff
   140007c67:	and    QWORD PTR [rdi+0x90],0x0
   140007c6f:	and    QWORD PTR [rdi+0xa8],0x0
   140007c77:	and    DWORD PTR [rdi+0xb0],0x0
   140007c7e:	mov    QWORD PTR [rdi+0x48],0x40
   140007c86:	mov    QWORD PTR [rdi+0x38],0x20
   140007c8e:	and    DWORD PTR [rdi+0x2c],0x0
   140007c92:	mov    BYTE PTR [rdi+0x28],r12b
   140007c96:	mov    rax,QWORD PTR [rdi+0x58]
   140007c9a:	mov    r8d,0x1
   140007ca0:	sub    r8d,DWORD PTR [rax-0x8]
   140007ca4:	mov    eax,DWORD PTR [rax-0xc]
   140007ca7:	mov    edx,0x1000
   140007cac:	sub    eax,edx
   140007cae:	or     eax,r8d
   140007cb1:	jge    0x140007cbd
   140007cb3:	lea    rcx,[rdi+0x58]
   140007cb7:	call   0x14000722c
   140007cbc:	nop
   140007cbd:	jmp    0x140007cc4
   140007cbf:	mov    rdi,QWORD PTR [rsp+0x40]
   140007cc4:	mov    DWORD PTR [rdi+0x54],0x1
   140007ccb:	mov    QWORD PTR [rdi+0x78],0x20
   140007cd3:	mov    ecx,0x18
   140007cd8:	call   0x140006290
   140007cdd:	mov    QWORD PTR [rdi+0xc8],rax
   140007ce4:	mov    ecx,0x310
   140007ce9:	call   0x140006648
   140007cee:	mov    QWORD PTR [rsp+0x50],rax
   140007cf3:	test   rax,rax
   140007cf6:	je     0x140007d05
   140007cf8:	mov    rcx,rax
   140007cfb:	call   0x140007700
   140007d00:	mov    r11,rax
   140007d03:	jmp    0x140007d08
   140007d05:	xor    r11d,r11d
   140007d08:	mov    rax,QWORD PTR [rdi+0xc8]
   140007d0f:	mov    QWORD PTR [rax],r11
   140007d12:	mov    ecx,0xc8
   140007d17:	call   0x140006648
   140007d1c:	mov    QWORD PTR [rsp+0x50],rax
   140007d21:	test   rax,rax
   140007d24:	je     0x140007d33
   140007d26:	mov    rcx,rax
   140007d29:	call   0x1400079fc
   140007d2e:	mov    r11,rax
   140007d31:	jmp    0x140007d36
   140007d33:	xor    r11d,r11d
   140007d36:	mov    rax,QWORD PTR [rdi+0xc8]
   140007d3d:	mov    QWORD PTR [rax+0x8],r11
   140007d41:	mov    ecx,0x28
   140007d46:	call   0x140006648
   140007d4b:	mov    QWORD PTR [rsp+0x50],rax
   140007d50:	test   rax,rax
   140007d53:	je     0x140007d62
   140007d55:	mov    rcx,rax
   140007d58:	call   0x140007b5c
   140007d5d:	mov    r11,rax
   140007d60:	jmp    0x140007d65
   140007d62:	xor    r11d,r11d
   140007d65:	mov    rax,QWORD PTR [rdi+0xc8]
   140007d6c:	mov    QWORD PTR [rax+0x10],r11
   140007d70:	mov    DWORD PTR [rdi+0xd0],0x1
   140007d7a:	and    QWORD PTR [rdi+0xd8],0x0
   140007d82:	and    DWORD PTR [rdi+0xe0],0x0
   140007d89:	and    DWORD PTR [rdi+0xe4],0x0
   140007d90:	mov    rax,rdi
   140007d93:	mov    rsi,QWORD PTR [rsp+0x48]
   140007d98:	mov    rdi,QWORD PTR [rsp+0x58]
   140007d9d:	add    rsp,0x30
   140007da1:	pop    r12
   140007da3:	ret    
   140007da4:	rex push rbx
   140007da6:	sub    rsp,0x30
   140007daa:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140007db3:	mov    ecx,0xe8
   140007db8:	call   0x140006648
   140007dbd:	mov    rbx,rax
   140007dc0:	mov    QWORD PTR [rsp+0x40],rax
   140007dc5:	test   rax,rax
   140007dc8:	je     0x140007de3
   140007dca:	mov    edx,0x1
   140007dcf:	mov    rcx,rax
   140007dd2:	call   0x140007be4
   140007dd7:	lea    r11,[rip+0x2f0e2]        # 0x140036ec0
   140007dde:	mov    QWORD PTR [rbx],r11
   140007de1:	jmp    0x140007de5
   140007de3:	xor    ebx,ebx
   140007de5:	mov    rax,rbx
   140007de8:	add    rsp,0x30
   140007dec:	pop    rbx
   140007ded:	ret    
   140007dee:	int3   
   140007def:	int3   
   140007df0:	sub    rsp,0x28
   140007df4:	lea    rdx,[rip+0xffffffffffffe749]        # 0x140006544
   140007dfb:	lea    rcx,[rip+0x4319e]        # 0x14004afa0
   140007e02:	call   0x140006bec
   140007e07:	test   rax,rax
   140007e0a:	jne    0x140007e12
   140007e0c:	call   0x140006520
   140007e11:	int3   
   140007e12:	mov    rax,QWORD PTR [rax+0x8]
   140007e16:	test   rax,rax
   140007e19:	jne    0x140007e39
   140007e1b:	lea    rdx,[rip+0xffffffffffffff82]        # 0x140007da4
   140007e22:	lea    rcx,[rip+0x4316f]        # 0x14004af98
   140007e29:	call   0x1400066f0
   140007e2e:	test   rax,rax
   140007e31:	jne    0x140007e39
   140007e33:	call   0x140006520
   140007e38:	int3   
   140007e39:	add    rsp,0x28
   140007e3d:	ret    
   140007e3e:	int3   
   140007e3f:	int3   
   140007e40:	sub    rsp,0x28
   140007e44:	call   0x140007df0
   140007e49:	lea    rdx,[rip+0xfffffffffffff484]        # 0x1400072d4
   140007e50:	lea    rcx,[rax+0xc0]
   140007e57:	call   0x140006bec
   140007e5c:	test   rax,rax
   140007e5f:	jne    0x140007e67
   140007e61:	call   0x140006520
   140007e66:	int3   
   140007e67:	add    rsp,0x28
   140007e6b:	ret    
   140007e6c:	mov    QWORD PTR [rsp+0x8],rbx
   140007e71:	push   rdi
   140007e72:	sub    rsp,0x20
   140007e76:	mov    rdi,rdx
   140007e79:	mov    rbx,rcx
   140007e7c:	call   0x140007df0
   140007e81:	xor    r8d,r8d
   140007e84:	cmp    DWORD PTR [rax+0xd0],r8d
   140007e8b:	je     0x140007eae
   140007e8d:	mov    rcx,QWORD PTR [rdi+0xd8]
   140007e94:	cmp    rcx,0xffffffffffffffff
   140007e98:	je     0x140007eae
   140007e9a:	mov    rax,QWORD PTR [rip+0x430e7]        # 0x14004af88
   140007ea1:	cmp    rax,r8
   140007ea4:	je     0x140007eae
   140007ea6:	mov    rdx,rbx
   140007ea9:	call   rax
   140007eab:	mov    r8d,eax
   140007eae:	mov    DWORD PTR [rbx+0x8],r8d
   140007eb2:	mov    rax,rbx
   140007eb5:	mov    rbx,QWORD PTR [rsp+0x30]
   140007eba:	add    rsp,0x20
   140007ebe:	pop    rdi
   140007ebf:	ret    
   140007ec0:	mov    rax,rsp
   140007ec3:	mov    QWORD PTR [rax+0x8],rbx
   140007ec7:	mov    QWORD PTR [rax+0x10],rsi
   140007ecb:	mov    QWORD PTR [rax+0x18],rdi
   140007ecf:	mov    QWORD PTR [rax+0x20],r12
   140007ed3:	push   r13
   140007ed5:	sub    rsp,0x30
   140007ed9:	mov    edi,r9d
   140007edc:	mov    rsi,r8
   140007edf:	mov    r12,rdx
   140007ee2:	mov    r13,rcx
   140007ee5:	and    QWORD PTR [rax-0x10],0x0
   140007eea:	call   0x140007df0
   140007eef:	lea    rdx,[rsp+0x28]
   140007ef4:	mov    rcx,QWORD PTR [rax+0xd8]
   140007efb:	call   0x140006de8
   140007f00:	mov    ebx,eax
   140007f02:	mov    DWORD PTR [rsp+0x24],eax
   140007f06:	and    DWORD PTR [rsp+0x20],0x0
   140007f0b:	test   eax,eax
   140007f0d:	je     0x140007f5d
   140007f0f:	mov    r9d,edi
   140007f12:	mov    r8,rsi
   140007f15:	mov    rdx,r12
   140007f18:	mov    rcx,r13
   140007f1b:	call   QWORD PTR [rip+0x2e71f]        # 0x140036640
   140007f21:	mov    esi,eax
   140007f23:	mov    DWORD PTR [rsp+0x20],eax
   140007f27:	cmp    ebx,0x2
   140007f2a:	je     0x140007f5b
   140007f2c:	xor    ebx,ebx
   140007f2e:	test   eax,eax
   140007f30:	sete   bl
   140007f33:	test   ebx,ebx
   140007f35:	je     0x140007f41
   140007f37:	call   QWORD PTR [rip+0x2e523]        # 0x140036460
   140007f3d:	mov    edi,eax
   140007f3f:	jmp    0x140007f43
   140007f41:	xor    edi,edi
   140007f43:	mov    rdx,QWORD PTR [rsp+0x28]
   140007f48:	xor    ecx,ecx
   140007f4a:	call   0x140006dcc
   140007f4f:	test   ebx,ebx
   140007f51:	je     0x140007f5b
   140007f53:	mov    ecx,edi
   140007f55:	call   QWORD PTR [rip+0x2e50d]        # 0x140036468
   140007f5b:	mov    eax,esi
   140007f5d:	mov    rbx,QWORD PTR [rsp+0x40]
   140007f62:	mov    rsi,QWORD PTR [rsp+0x48]
   140007f67:	mov    rdi,QWORD PTR [rsp+0x50]
   140007f6c:	mov    r12,QWORD PTR [rsp+0x58]
   140007f71:	add    rsp,0x30
   140007f75:	pop    r13
   140007f77:	ret    
   140007f78:	mov    QWORD PTR [rsp+0x8],rbx
   140007f7d:	push   rdi
   140007f7e:	sub    rsp,0x20
   140007f82:	mov    edi,ecx
   140007f84:	call   0x140008c30
   140007f89:	test   rax,rax
   140007f8c:	je     0x140007f9f
   140007f8e:	mov    rdx,QWORD PTR [rax]
   140007f91:	mov    rcx,rax
   140007f94:	call   QWORD PTR [rdx+0xe8]
   140007f9a:	mov    rbx,rax
   140007f9d:	jmp    0x140007fa1
   140007f9f:	xor    ebx,ebx
   140007fa1:	test   rbx,rbx
   140007fa4:	je     0x140007fd2
   140007fa6:	mov    rax,QWORD PTR [rbx]
   140007fa9:	mov    rcx,rbx
   140007fac:	call   QWORD PTR [rax+0x250]
   140007fb2:	test   eax,eax
   140007fb4:	je     0x140007fd2
   140007fb6:	cmp    QWORD PTR [rbx+0xe0],0x0
   140007fbe:	je     0x140007fd2
   140007fc0:	mov    rcx,QWORD PTR [rbx+0xe0]
   140007fc7:	mov    edx,edi
   140007fc9:	mov    rax,QWORD PTR [rcx]
   140007fcc:	call   QWORD PTR [rax+0xc8]
   140007fd2:	mov    rbx,QWORD PTR [rsp+0x30]
   140007fd7:	add    rsp,0x20
   140007fdb:	pop    rdi
   140007fdc:	ret    
   140007fdd:	int3   
   140007fde:	int3   
   140007fdf:	int3   
   140007fe0:	mov    QWORD PTR [rsp+0x8],rbx
   140007fe5:	mov    QWORD PTR [rsp+0x10],rbp
   140007fea:	mov    QWORD PTR [rsp+0x18],rsi
   140007fef:	push   rdi
   140007ff0:	sub    rsp,0x20
   140007ff4:	mov    rsi,rdx
   140007ff7:	mov    rbp,rcx
   140007ffa:	mov    rbx,rcx
   140007ffd:	test   rcx,rcx
   140008000:	jne    0x140008045
   140008002:	call   0x140007330
   140008007:	mov    rbx,QWORD PTR [rax+0x158]
   14000800e:	test   rbx,rbx
   140008011:	je     0x140008019
   140008013:	mov    rbx,QWORD PTR [rbx+0x40]
   140008017:	jmp    0x140008040
   140008019:	call   0x140008c30
   14000801e:	test   rax,rax
   140008021:	je     0x140008031
   140008023:	mov    rdx,QWORD PTR [rax]
   140008026:	mov    rcx,rax
   140008029:	call   QWORD PTR [rdx+0xe8]
   14000802f:	jmp    0x140008033
   140008031:	xor    eax,eax
   140008033:	test   rax,rax
   140008036:	jne    0x14000803c
   140008038:	xor    ebx,ebx
   14000803a:	jmp    0x14000806a
   14000803c:	mov    rbx,QWORD PTR [rax+0x40]
   140008040:	test   rbx,rbx
   140008043:	je     0x14000806a
   140008045:	mov    edx,0xfffffff0
   14000804a:	mov    rcx,rbx
   14000804d:	call   QWORD PTR [rip+0x2e6b5]        # 0x140036708
   140008053:	bt     eax,0x1e
   140008057:	jae    0x14000806a
   140008059:	mov    rcx,rbx
   14000805c:	call   QWORD PTR [rip+0x2e69e]        # 0x140036700
   140008062:	mov    rbx,rax
   140008065:	test   rax,rax
   140008068:	jne    0x140008045
   14000806a:	mov    rdi,rbx
   14000806d:	mov    rax,rbx
   140008070:	test   rbx,rbx
   140008073:	je     0x140008086
   140008075:	mov    rcx,rax
   140008078:	mov    rdi,rax
   14000807b:	call   QWORD PTR [rip+0x2e67f]        # 0x140036700
   140008081:	test   rax,rax
   140008084:	jne    0x140008075
   140008086:	test   rbp,rbp
   140008089:	jne    0x14000809c
   14000808b:	test   rbx,rbx
   14000808e:	je     0x14000809c
   140008090:	mov    rcx,rbx
   140008093:	call   QWORD PTR [rip+0x2e65f]        # 0x1400366f8
   140008099:	mov    rbx,rax
   14000809c:	test   rsi,rsi
   14000809f:	je     0x1400080cc
   1400080a1:	test   rdi,rdi
   1400080a4:	je     0x1400080c8
   1400080a6:	mov    rcx,rdi
   1400080a9:	call   QWORD PTR [rip+0x2e5a1]        # 0x140036650
   1400080af:	test   eax,eax
   1400080b1:	je     0x1400080c8
   1400080b3:	cmp    rdi,rbx
   1400080b6:	je     0x1400080c8
   1400080b8:	xor    edx,edx
   1400080ba:	mov    rcx,rdi
   1400080bd:	mov    QWORD PTR [rsi],rdi
   1400080c0:	call   QWORD PTR [rip+0x2e582]        # 0x140036648
   1400080c6:	jmp    0x1400080cc
   1400080c8:	and    QWORD PTR [rsi],0x0
   1400080cc:	mov    rbp,QWORD PTR [rsp+0x38]
   1400080d1:	mov    rsi,QWORD PTR [rsp+0x40]
   1400080d6:	mov    rax,rbx
   1400080d9:	mov    rbx,QWORD PTR [rsp+0x30]
   1400080de:	add    rsp,0x20
   1400080e2:	pop    rdi
   1400080e3:	ret    
   1400080e4:	rex push rbx
   1400080e6:	push   rbp
   1400080e7:	push   rsi
   1400080e8:	push   rdi
   1400080e9:	push   r12
   1400080eb:	push   r13
   1400080ed:	push   r15
   1400080ef:	sub    rsp,0x150
   1400080f6:	mov    rax,QWORD PTR [rip+0x40cc3]        # 0x140048dc0
   1400080fd:	xor    rax,rsp
   140008100:	mov    QWORD PTR [rsp+0x140],rax
   140008108:	mov    rsi,rcx
   14000810b:	xor    ecx,ecx
   14000810d:	mov    r13d,r9d
   140008110:	mov    edi,r8d
   140008113:	mov    r15,rdx
   140008116:	call   0x140007f78
   14000811b:	lea    rdx,[rsp+0x28]
   140008120:	xor    ecx,ecx
   140008122:	call   0x140007fe0
   140008127:	mov    r12,rax
   14000812a:	cmp    rax,QWORD PTR [rsp+0x28]
   14000812f:	je     0x14000813f
   140008131:	mov    edx,0x1
   140008136:	mov    rcx,rax
   140008139:	call   QWORD PTR [rip+0x2e509]        # 0x140036648
   14000813f:	xor    ebp,ebp
   140008141:	lea    rdx,[rsp+0x20]
   140008146:	mov    rcx,r12
   140008149:	mov    rbx,rbp
   14000814c:	mov    DWORD PTR [rsp+0x20],ebp
   140008150:	call   QWORD PTR [rip+0x2e5c2]        # 0x140036718
   140008156:	cmp    r12,rbp
   140008159:	je     0x140008185
   14000815b:	call   QWORD PTR [rip+0x2e25f]        # 0x1400363c0
   140008161:	cmp    DWORD PTR [rsp+0x20],eax
   140008165:	jne    0x140008185
   140008167:	xor    r9d,r9d
   14000816a:	xor    r8d,r8d
   14000816d:	mov    edx,0x376
   140008172:	mov    rcx,r12
   140008175:	call   QWORD PTR [rip+0x2e595]        # 0x140036710
   14000817b:	cmp    rax,rbp
   14000817e:	je     0x140008185
   140008180:	mov    rbx,rax
   140008183:	jmp    0x140008191
   140008185:	cmp    rsi,rbp
   140008188:	je     0x140008191
   14000818a:	lea    rbx,[rsi+0xf0]
   140008191:	xor    ecx,ecx
   140008193:	cmp    rbx,rcx
   140008196:	je     0x1400081a8
   140008198:	mov    ebp,DWORD PTR [rbx]
   14000819a:	cmp    r13d,ecx
   14000819d:	je     0x1400081a8
   14000819f:	lea    eax,[r13+0x30000]
   1400081a6:	mov    DWORD PTR [rbx],eax
   1400081a8:	test   dil,0xf0
   1400081ac:	jne    0x1400081c8
   1400081ae:	mov    eax,edi
   1400081b0:	and    eax,0xf
   1400081b3:	cmp    eax,0x1
   1400081b6:	jbe    0x1400081c5
   1400081b8:	add    eax,0xfffffffd
   1400081bb:	cmp    eax,0x1
   1400081be:	ja     0x1400081c8
   1400081c0:	or     edi,0x20
   1400081c3:	jmp    0x1400081c8
   1400081c5:	or     edi,0x30
   1400081c8:	mov    BYTE PTR [rsp+0x30],cl
   1400081cc:	cmp    rsi,rcx
   1400081cf:	je     0x1400081dd
   1400081d1:	mov    rsi,QWORD PTR [rsi+0xa0]
   1400081d8:	xor    r13d,r13d
   1400081db:	jmp    0x140008212
   1400081dd:	mov    r13d,0x104
   1400081e3:	lea    rdx,[rsp+0x30]
   1400081e8:	lea    rsi,[rsp+0x30]
   1400081ed:	mov    r8d,r13d
   1400081f0:	call   QWORD PTR [rip+0x2e2ea]        # 0x1400364e0
   1400081f6:	movzx  ecx,BYTE PTR [rsp+0x133]
   1400081fe:	cmp    eax,r13d
   140008201:	mov    r13d,0x0
   140008207:	cmove  ecx,r13d
   14000820b:	mov    BYTE PTR [rsp+0x133],cl
   140008212:	mov    r9d,edi
   140008215:	mov    r8,rsi
   140008218:	mov    rdx,r15
   14000821b:	mov    rcx,r12
   14000821e:	call   0x140007ec0
   140008223:	mov    edi,eax
   140008225:	cmp    rbx,r13
   140008228:	je     0x14000822c
   14000822a:	mov    DWORD PTR [rbx],ebp
   14000822c:	cmp    QWORD PTR [rsp+0x28],r13
   140008231:	je     0x140008243
   140008233:	mov    rcx,QWORD PTR [rsp+0x28]
   140008238:	mov    edx,0x1
   14000823d:	call   QWORD PTR [rip+0x2e405]        # 0x140036648
   140008243:	mov    ecx,0x1
   140008248:	call   0x140007f78
   14000824d:	mov    eax,edi
   14000824f:	mov    rcx,QWORD PTR [rsp+0x140]
   140008257:	xor    rcx,rsp
   14000825a:	call   0x1400144f0
   14000825f:	add    rsp,0x150
   140008266:	pop    r15
   140008268:	pop    r13
   14000826a:	pop    r12
   14000826c:	pop    rdi
   14000826d:	pop    rsi
   14000826e:	pop    rbp
   14000826f:	pop    rbx
   140008270:	ret    
   140008271:	int3   
   140008272:	int3   
   140008273:	int3   
   140008274:	mov    QWORD PTR [rsp+0x8],rbx
   140008279:	mov    QWORD PTR [rsp+0x10],rsi
   14000827e:	push   rdi
   14000827f:	sub    rsp,0x20
   140008283:	mov    ebx,r8d
   140008286:	mov    edi,edx
   140008288:	mov    rsi,rcx
   14000828b:	call   0x140007df0
   140008290:	mov    r9d,ebx
   140008293:	mov    r8d,edi
   140008296:	mov    rcx,QWORD PTR [rax+0x8]
   14000829a:	mov    rdx,rsi
   14000829d:	test   rcx,rcx
   1400082a0:	je     0x1400082ad
   1400082a2:	mov    rax,QWORD PTR [rcx]
   1400082a5:	call   QWORD PTR [rax+0x130]
   1400082ab:	jmp    0x1400082b4
   1400082ad:	xor    ecx,ecx
   1400082af:	call   0x1400080e4
   1400082b4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400082b9:	mov    rsi,QWORD PTR [rsp+0x38]
   1400082be:	add    rsp,0x20
   1400082c2:	pop    rdi
   1400082c3:	ret    
   1400082c4:	rex push rdi
   1400082c6:	sub    rsp,0x30
   1400082ca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400082d3:	mov    QWORD PTR [rsp+0x40],rbx
   1400082d8:	mov    QWORD PTR [rsp+0x48],rbp
   1400082dd:	mov    QWORD PTR [rsp+0x50],rsi
   1400082e2:	mov    esi,r8d
   1400082e5:	mov    ebp,edx
   1400082e7:	mov    edi,ecx
   1400082e9:	call   0x140008ae0
   1400082ee:	mov    rcx,rax
   1400082f1:	xor    r8d,r8d
   1400082f4:	test   rax,rax
   1400082f7:	setne  r8b
   1400082fb:	test   r8d,r8d
   1400082fe:	jne    0x14000830b
   140008300:	mov    ecx,0x80004005
   140008305:	call   0x14000677c
   14000830a:	int3   
   14000830b:	mov    rax,QWORD PTR [rax]
   14000830e:	call   QWORD PTR [rax+0x18]
   140008311:	lea    rbx,[rax+0x18]
   140008315:	mov    QWORD PTR [rsp+0x58],rbx
   14000831a:	mov    ecx,edi
   14000831c:	call   0x140008440
   140008321:	test   rax,rax
   140008324:	je     0x14000833b
   140008326:	mov    r8d,edi
   140008329:	mov    rdx,rax
   14000832c:	lea    rcx,[rsp+0x58]
   140008331:	call   0x140007444
   140008336:	mov    rbx,QWORD PTR [rsp+0x58]
   14000833b:	cmp    esi,0xffffffff
   14000833e:	cmove  esi,edi
   140008341:	mov    r8d,esi
   140008344:	mov    edx,ebp
   140008346:	mov    rcx,rbx
   140008349:	call   0x140008274
   14000834e:	mov    edi,eax
   140008350:	lea    rdx,[rbx-0x18]
   140008354:	or     ecx,0xffffffff
   140008357:	lock xadd DWORD PTR [rdx+0x10],ecx
   14000835c:	dec    ecx
   14000835e:	test   ecx,ecx
   140008360:	jg     0x14000836c
   140008362:	mov    rcx,QWORD PTR [rdx]
   140008365:	mov    r8,QWORD PTR [rcx]
   140008368:	call   QWORD PTR [r8+0x8]
   14000836c:	mov    eax,edi
   14000836e:	mov    rbx,QWORD PTR [rsp+0x40]
   140008373:	mov    rbp,QWORD PTR [rsp+0x48]
   140008378:	mov    rsi,QWORD PTR [rsp+0x50]
   14000837d:	add    rsp,0x30
   140008381:	pop    rdi
   140008382:	ret    
   140008383:	int3   
   140008384:	mov    QWORD PTR [rsp+0x8],rbx
   140008389:	mov    QWORD PTR [rsp+0x10],rbp
   14000838e:	mov    QWORD PTR [rsp+0x18],rsi
   140008393:	push   rdi
   140008394:	sub    rsp,0x40
   140008398:	mov    edi,r8d
   14000839b:	mov    rbx,rdx
   14000839e:	mov    esi,ecx
   1400083a0:	test   rdx,rdx
   1400083a3:	je     0x14000843a
   1400083a9:	test   r8d,r8d
   1400083ac:	je     0x14000843a
   1400083b2:	call   0x140007df0
   1400083b7:	mov    r8d,0x6
   1400083bd:	mov    rbp,QWORD PTR [rax+0x18]
   1400083c1:	mov    eax,esi
   1400083c3:	shr    eax,0x4
   1400083c6:	mov    rcx,rbp
   1400083c9:	inc    ax
   1400083cc:	movzx  edx,ax
   1400083cf:	call   QWORD PTR [rip+0x2dffb]        # 0x1400363d0
   1400083d5:	test   rax,rax
   1400083d8:	je     0x140008433
   1400083da:	mov    r8d,esi
   1400083dd:	mov    rdx,rax
   1400083e0:	mov    rcx,rbp
   1400083e3:	call   0x140006e20
   1400083e8:	test   rax,rax
   1400083eb:	je     0x140008433
   1400083ed:	and    QWORD PTR [rsp+0x38],0x0
   1400083f3:	and    QWORD PTR [rsp+0x30],0x0
   1400083f9:	movzx  r9d,WORD PTR [rax]
   1400083fd:	lea    ecx,[rdi-0x1]
   140008400:	lea    r8,[rax+0x2]
   140008404:	xor    edx,edx
   140008406:	mov    DWORD PTR [rsp+0x28],ecx
   14000840a:	xor    ecx,ecx
   14000840c:	mov    QWORD PTR [rsp+0x20],rbx
   140008411:	call   QWORD PTR [rip+0x2dfb1]        # 0x1400363c8
   140008417:	movsxd rcx,eax
   14000841a:	mov    BYTE PTR [rcx+rbx*1],0x0
   14000841e:	mov    rbx,QWORD PTR [rsp+0x50]
   140008423:	mov    rbp,QWORD PTR [rsp+0x58]
   140008428:	mov    rsi,QWORD PTR [rsp+0x60]
   14000842d:	add    rsp,0x40
   140008431:	pop    rdi
   140008432:	ret    
   140008433:	mov    BYTE PTR [rbx],0x0
   140008436:	xor    eax,eax
   140008438:	jmp    0x14000841e
   14000843a:	call   0x140006520
   14000843f:	int3   
   140008440:	sub    rsp,0x28
   140008444:	call   0x140007df0
   140008449:	mov    rax,QWORD PTR [rax+0x18]
   14000844d:	add    rsp,0x28
   140008451:	ret    
   140008452:	int3   
   140008453:	int3   
   140008454:	lea    rax,[rip+0x2eacd]        # 0x140036f28
   14000845b:	ret    
   14000845c:	rex push rdi
   14000845e:	sub    rsp,0x30
   140008462:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000846b:	mov    QWORD PTR [rsp+0x40],rbx
   140008470:	mov    edi,ecx
   140008472:	mov    ecx,0x18
   140008477:	call   0x140006290
   14000847c:	mov    rbx,rax
   14000847f:	mov    QWORD PTR [rsp+0x48],rax
   140008484:	test   rax,rax
   140008487:	je     0x1400084a1
   140008489:	mov    rcx,rax
   14000848c:	call   0x140006578
   140008491:	lea    r11,[rip+0x2eac8]        # 0x140036f60
   140008498:	mov    QWORD PTR [rbx],r11
   14000849b:	and    DWORD PTR [rbx+0x10],0x0
   14000849f:	jmp    0x1400084a3
   1400084a1:	xor    ebx,ebx
   1400084a3:	mov    DWORD PTR [rbx+0x10],edi
   1400084a6:	mov    QWORD PTR [rsp+0x48],rbx
   1400084ab:	lea    rdx,[rip+0x3d9de]        # 0x140045e90
   1400084b2:	lea    rcx,[rsp+0x48]
   1400084b7:	call   0x1400158a0
   1400084bc:	int3   
   1400084bd:	int3   
   1400084be:	int3   
   1400084bf:	int3   
   1400084c0:	mov    QWORD PTR [rsp+0x10],rbx
   1400084c5:	push   rdi
   1400084c6:	sub    rsp,0x40
   1400084ca:	mov    edi,r8d
   1400084cd:	mov    rbx,rdx
   1400084d0:	test   r9,r9
   1400084d3:	je     0x1400084d9
   1400084d5:	and    DWORD PTR [r9],0x0
   1400084d9:	mov    r8d,DWORD PTR [rcx+0x10]
   1400084dd:	and    QWORD PTR [rsp+0x30],0x0
   1400084e3:	and    DWORD PTR [rsp+0x28],0x0
   1400084e8:	lea    rax,[rsp+0x50]
   1400084ed:	mov    r9d,0x800
   1400084f3:	xor    edx,edx
   1400084f5:	mov    ecx,0x1100
   1400084fa:	mov    QWORD PTR [rsp+0x20],rax
   1400084ff:	call   QWORD PTR [rip+0x2dea3]        # 0x1400363a8
   140008505:	test   eax,eax
   140008507:	jne    0x14000850d
   140008509:	mov    BYTE PTR [rbx],al
   14000850b:	jmp    0x14000855b
   14000850d:	mov    r8,QWORD PTR [rsp+0x50]
   140008512:	mov    rdx,rdi
   140008515:	or     r9,0xffffffffffffffff
   140008519:	mov    rcx,rbx
   14000851c:	call   0x140015934
   140008521:	test   eax,eax
   140008523:	je     0x14000854b
   140008525:	cmp    eax,0xc
   140008528:	je     0x140008545
   14000852a:	cmp    eax,0x16
   14000852d:	je     0x14000853f
   14000852f:	cmp    eax,0x22
   140008532:	je     0x14000853f
   140008534:	cmp    eax,0x50
   140008537:	je     0x14000854b
   140008539:	call   0x140006520
   14000853e:	int3   
   14000853f:	call   0x140006520
   140008544:	int3   
   140008545:	call   0x1400064d8
   14000854a:	int3   
   14000854b:	mov    rcx,QWORD PTR [rsp+0x50]
   140008550:	call   QWORD PTR [rip+0x2df3a]        # 0x140036490
   140008556:	mov    eax,0x1
   14000855b:	mov    rbx,QWORD PTR [rsp+0x58]
   140008560:	add    rsp,0x40
   140008564:	pop    rdi
   140008565:	ret    
   140008566:	int3   
   140008567:	int3   
   140008568:	rex push rbx
   14000856a:	sub    rsp,0x20
   14000856e:	lea    rax,[rip+0x2e9eb]        # 0x140036f60
   140008575:	mov    rbx,rcx
   140008578:	mov    QWORD PTR [rcx],rax
   14000857b:	test   dl,0x1
   14000857e:	je     0x140008585
   140008580:	call   0x1400062d4
   140008585:	mov    rax,rbx
   140008588:	add    rsp,0x20
   14000858c:	pop    rbx
   14000858d:	ret    
   14000858e:	int3   
   14000858f:	int3   
   140008590:	mov    QWORD PTR [rsp+0x8],rbx
   140008595:	mov    QWORD PTR [rsp+0x10],rbp
   14000859a:	mov    QWORD PTR [rsp+0x18],rsi
   14000859f:	push   rdi
   1400085a0:	sub    rsp,0x20
   1400085a4:	mov    rax,QWORD PTR [rcx]
   1400085a7:	mov    r8d,0x1
   1400085ad:	mov    bpl,dl
   1400085b0:	mov    esi,DWORD PTR [rax-0x10]
   1400085b3:	sub    r8d,DWORD PTR [rax-0x8]
   1400085b7:	mov    eax,DWORD PTR [rax-0xc]
   1400085ba:	lea    ebx,[rsi+0x1]
   1400085bd:	mov    rdi,rcx
   1400085c0:	sub    eax,ebx
   1400085c2:	or     r8d,eax
   1400085c5:	jge    0x1400085ce
   1400085c7:	mov    edx,ebx
   1400085c9:	call   0x14000722c
   1400085ce:	mov    rax,QWORD PTR [rdi]
   1400085d1:	mov    BYTE PTR [rsi+rax*1],bpl
   1400085d5:	test   ebx,ebx
   1400085d7:	js     0x140008603
   1400085d9:	mov    rax,QWORD PTR [rdi]
   1400085dc:	cmp    ebx,DWORD PTR [rax-0xc]
   1400085df:	jg     0x140008603
   1400085e1:	mov    rbp,QWORD PTR [rsp+0x38]
   1400085e6:	mov    rsi,QWORD PTR [rsp+0x40]
   1400085eb:	mov    DWORD PTR [rax-0x10],ebx
   1400085ee:	mov    rax,QWORD PTR [rdi]
   1400085f1:	movsxd rcx,ebx
   1400085f4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400085f9:	mov    BYTE PTR [rcx+rax*1],0x0
   1400085fd:	add    rsp,0x20
   140008601:	pop    rdi
   140008602:	ret    
   140008603:	mov    ecx,0x80070057
   140008608:	call   0x14000677c
   14000860d:	int3   
   14000860e:	int3   
   14000860f:	int3   
   140008610:	mov    QWORD PTR [rsp+0x8],rbx
   140008615:	mov    QWORD PTR [rsp+0x10],rbp
   14000861a:	mov    QWORD PTR [rsp+0x18],rsi
   14000861f:	push   rdi
   140008620:	push   r12
   140008622:	push   r13
   140008624:	sub    rsp,0x20
   140008628:	mov    rax,QWORD PTR [rcx]
   14000862b:	mov    r13,rdx
   14000862e:	mov    rbp,rdx
   140008631:	mov    r12d,DWORD PTR [rax-0x10]
   140008635:	sub    r13,rax
   140008638:	mov    rdi,rcx
   14000863b:	test   r8d,r8d
   14000863e:	jns    0x14000864b
   140008640:	mov    ecx,0x80070057
   140008645:	call   0x14000677c
   14000864a:	int3   
   14000864b:	test   rdx,rdx
   14000864e:	jne    0x140008654
   140008650:	xor    esi,esi
   140008652:	jmp    0x140008662
   140008654:	movsxd rdx,r8d
   140008657:	mov    rcx,rbp
   14000865a:	call   0x140015e4c
   14000865f:	mov    rsi,rax
   140008662:	mov    ecx,0x7fffffff
   140008667:	sub    ecx,esi
   140008669:	cmp    ecx,r12d
   14000866c:	jge    0x140008679
   14000866e:	mov    ecx,0x80070057
   140008673:	call   0x14000677c
   140008678:	int3   
   140008679:	mov    rax,QWORD PTR [rdi]
   14000867c:	mov    ecx,0x1
   140008681:	lea    ebx,[r12+rsi*1]
   140008685:	sub    ecx,DWORD PTR [rax-0x8]
   140008688:	mov    eax,DWORD PTR [rax-0xc]
   14000868b:	sub    eax,ebx
   14000868d:	or     ecx,eax
   14000868f:	jge    0x14000869b
   140008691:	mov    edx,ebx
   140008693:	mov    rcx,rdi
   140008696:	call   0x14000722c
   14000869b:	mov    rax,QWORD PTR [rdi]
   14000869e:	mov    rcx,r12
   1400086a1:	cmp    r13,r12
   1400086a4:	ja     0x1400086aa
   1400086a6:	lea    rbp,[rax+r13*1]
   1400086aa:	movsxd rdx,esi
   1400086ad:	add    rcx,rax
   1400086b0:	mov    r8,rbp
   1400086b3:	mov    r9,rdx
   1400086b6:	call   0x140014510
   1400086bb:	test   ebx,ebx
   1400086bd:	js     0x1400086ed
   1400086bf:	mov    rax,QWORD PTR [rdi]
   1400086c2:	cmp    ebx,DWORD PTR [rax-0xc]
   1400086c5:	jg     0x1400086ed
   1400086c7:	mov    rbp,QWORD PTR [rsp+0x48]
   1400086cc:	mov    rsi,QWORD PTR [rsp+0x50]
   1400086d1:	mov    DWORD PTR [rax-0x10],ebx
   1400086d4:	mov    rax,QWORD PTR [rdi]
   1400086d7:	movsxd rcx,ebx
   1400086da:	mov    rbx,QWORD PTR [rsp+0x40]
   1400086df:	mov    BYTE PTR [rcx+rax*1],0x0
   1400086e3:	add    rsp,0x20
   1400086e7:	pop    r13
   1400086e9:	pop    r12
   1400086eb:	pop    rdi
   1400086ec:	ret    
   1400086ed:	mov    ecx,0x80070057
   1400086f2:	call   0x14000677c
   1400086f7:	int3   
   1400086f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400086fd:	mov    QWORD PTR [rsp+0x10],rsi
   140008702:	push   rdi
   140008703:	sub    rsp,0x20
   140008707:	test   edx,edx
   140008709:	mov    rdi,rcx
   14000870c:	mov    rcx,QWORD PTR [rcx+0x8]
   140008710:	mov    esi,edx
   140008712:	mov    eax,0x11
   140008717:	mov    ebx,r8d
   14000871a:	cmove  esi,eax
   14000871d:	test   rcx,rcx
   140008720:	je     0x14000872c
   140008722:	call   0x1400062d4
   140008727:	and    QWORD PTR [rdi+0x8],0x0
   14000872c:	test   ebx,ebx
   14000872e:	je     0x140008762
   140008730:	mov    rcx,0xffffffffffffffff
   140008737:	mov    ebx,esi
   140008739:	mov    eax,0x8
   14000873e:	mul    rbx
   140008741:	cmovo  rax,rcx
   140008745:	mov    rcx,rax
   140008748:	call   0x140006290
   14000874d:	mov    r8d,esi
   140008750:	xor    edx,edx
   140008752:	mov    rcx,rax
   140008755:	shl    r8,0x3
   140008759:	mov    QWORD PTR [rdi+0x8],rax
   14000875d:	call   0x140015b00
   140008762:	mov    rbx,QWORD PTR [rsp+0x30]
   140008767:	mov    DWORD PTR [rdi+0x10],esi
   14000876a:	mov    rsi,QWORD PTR [rsp+0x38]
   14000876f:	add    rsp,0x20
   140008773:	pop    rdi
   140008774:	ret    
   140008775:	int3   
   140008776:	int3   
   140008777:	int3   
   140008778:	rex push rbx
   14000877a:	sub    rsp,0x20
   14000877e:	mov    rbx,rcx
   140008781:	mov    rcx,QWORD PTR [rcx+0x8]
   140008785:	test   rcx,rcx
   140008788:	je     0x140008794
   14000878a:	call   0x1400062d4
   14000878f:	and    QWORD PTR [rbx+0x8],0x0
   140008794:	mov    rcx,QWORD PTR [rbx+0x28]
   140008798:	and    QWORD PTR [rbx+0x18],0x0
   14000879d:	and    QWORD PTR [rbx+0x20],0x0
   1400087a2:	call   0x14000920c
   1400087a7:	and    QWORD PTR [rbx+0x28],0x0
   1400087ac:	add    rsp,0x20
   1400087b0:	pop    rbx
   1400087b1:	ret    
   1400087b2:	int3   
   1400087b3:	int3   
   1400087b4:	mov    rax,rdx
   1400087b7:	mov    r10,rdx
   1400087ba:	xor    edx,edx
   1400087bc:	shr    rax,0x4
   1400087c0:	mov    DWORD PTR [r9],eax
   1400087c3:	div    DWORD PTR [rcx+0x10]
   1400087c6:	mov    DWORD PTR [r8],edx
   1400087c9:	mov    r8,QWORD PTR [rcx+0x8]
   1400087cd:	test   r8,r8
   1400087d0:	je     0x1400087e6
   1400087d2:	mov    rax,QWORD PTR [r8+rdx*8]
   1400087d6:	jmp    0x1400087e1
   1400087d8:	cmp    QWORD PTR [rax+0x8],r10
   1400087dc:	je     0x1400087e8
   1400087de:	mov    rax,QWORD PTR [rax]
   1400087e1:	test   rax,rax
   1400087e4:	jne    0x1400087d8
   1400087e6:	xor    eax,eax
   1400087e8:	ret    
   1400087e9:	int3   
   1400087ea:	int3   
   1400087eb:	int3   
   1400087ec:	sub    rsp,0x28
   1400087f0:	mov    r9,rdx
   1400087f3:	test   rcx,rcx
   1400087f6:	jne    0x1400087fe
   1400087f8:	call   0x140006520
   1400087fd:	int3   
   1400087fe:	mov    r8,QWORD PTR [rcx+0x8]
   140008802:	test   r8,r8
   140008805:	je     0x140008827
   140008807:	mov    rax,rdx
   14000880a:	xor    edx,edx
   14000880c:	shr    rax,0x4
   140008810:	div    DWORD PTR [rcx+0x10]
   140008813:	mov    rax,QWORD PTR [r8+rdx*8]
   140008817:	jmp    0x140008822
   140008819:	cmp    QWORD PTR [rax+0x8],r9
   14000881d:	je     0x14000882e
   14000881f:	mov    rax,QWORD PTR [rax]
   140008822:	test   rax,rax
   140008825:	jne    0x140008819
   140008827:	xor    eax,eax
   140008829:	add    rsp,0x28
   14000882d:	ret    
   14000882e:	mov    rax,QWORD PTR [rax+0x10]
   140008832:	jmp    0x140008829
   140008834:	sub    rsp,0x38
   140008838:	mov    r11,r8
   14000883b:	lea    r9,[rsp+0x58]
   140008840:	lea    r8,[rsp+0x20]
   140008845:	call   0x1400087b4
   14000884a:	test   rax,rax
   14000884d:	je     0x14000885b
   14000884f:	mov    rax,QWORD PTR [rax+0x10]
   140008853:	mov    QWORD PTR [r11],rax
   140008856:	mov    eax,0x1
   14000885b:	add    rsp,0x38
   14000885f:	ret    
   140008860:	sub    rsp,0x28
   140008864:	mov    r9,QWORD PTR [rcx+0x8]
   140008868:	mov    r10,rdx
   14000886b:	mov    r8,rcx
   14000886e:	test   r9,r9
   140008871:	je     0x140008899
   140008873:	mov    rax,rdx
   140008876:	xor    edx,edx
   140008878:	shr    rax,0x4
   14000887c:	div    DWORD PTR [rcx+0x10]
   14000887f:	lea    rdx,[r9+rdx*8]
   140008883:	mov    rcx,QWORD PTR [rdx]
   140008886:	jmp    0x140008894
   140008888:	cmp    QWORD PTR [rcx+0x8],r10
   14000888c:	je     0x1400088a0
   14000888e:	mov    rdx,rcx
   140008891:	mov    rcx,QWORD PTR [rcx]
   140008894:	test   rcx,rcx
   140008897:	jne    0x140008888
   140008899:	xor    eax,eax
   14000889b:	add    rsp,0x28
   14000889f:	ret    
   1400088a0:	mov    rax,QWORD PTR [rcx]
   1400088a3:	mov    QWORD PTR [rdx],rax
   1400088a6:	mov    rax,QWORD PTR [r8+0x20]
   1400088aa:	mov    QWORD PTR [rcx],rax
   1400088ad:	add    QWORD PTR [r8+0x18],0xffffffffffffffff
   1400088b2:	mov    QWORD PTR [r8+0x20],rcx
   1400088b6:	jne    0x1400088c0
   1400088b8:	mov    rcx,r8
   1400088bb:	call   0x140008778
   1400088c0:	mov    eax,0x1
   1400088c5:	jmp    0x14000889b
   1400088c7:	int3   
   1400088c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400088cd:	mov    QWORD PTR [rsp+0x10],rsi
   1400088d2:	push   rdi
   1400088d3:	sub    rsp,0x20
   1400088d7:	mov    r10,QWORD PTR [rdx]
   1400088da:	mov    rdi,r9
   1400088dd:	mov    rsi,r8
   1400088e0:	mov    rbx,rdx
   1400088e3:	mov    r11,rcx
   1400088e6:	test   r10,r10
   1400088e9:	je     0x140008968
   1400088eb:	cmp    r10,0xffffffffffffffff
   1400088ef:	jne    0x140008919
   1400088f1:	xor    r9d,r9d
   1400088f4:	cmp    DWORD PTR [rcx+0x10],r9d
   1400088f8:	jbe    0x140008919
   1400088fa:	mov    rax,QWORD PTR [rcx+0x8]
   1400088fe:	mov    r10,QWORD PTR [rax]
   140008901:	test   r10,r10
   140008904:	jne    0x140008919
   140008906:	inc    r9d
   140008909:	add    rax,0x8
   14000890d:	cmp    r9d,DWORD PTR [rcx+0x10]
   140008911:	jb     0x1400088fe
   140008913:	call   0x140006520
   140008918:	int3   
   140008919:	mov    rcx,QWORD PTR [r10]
   14000891c:	test   rcx,rcx
   14000891f:	jne    0x140008957
   140008921:	mov    r9d,DWORD PTR [r11+0x10]
   140008925:	mov    rax,QWORD PTR [r10+0x8]
   140008929:	xor    edx,edx
   14000892b:	shr    rax,0x4
   14000892f:	div    r9d
   140008932:	inc    edx
   140008934:	movsxd r8,edx
   140008937:	cmp    edx,r9d
   14000893a:	jae    0x140008957
   14000893c:	mov    rax,QWORD PTR [r11+0x8]
   140008940:	lea    r8,[rax+r8*8]
   140008944:	mov    rcx,QWORD PTR [r8]
   140008947:	test   rcx,rcx
   14000894a:	jne    0x140008957
   14000894c:	inc    edx
   14000894e:	add    r8,0x8
   140008952:	cmp    edx,r9d
   140008955:	jb     0x140008944
   140008957:	mov    QWORD PTR [rbx],rcx
   14000895a:	mov    rax,QWORD PTR [r10+0x8]
   14000895e:	mov    QWORD PTR [rsi],rax
   140008961:	mov    rax,QWORD PTR [r10+0x10]
   140008965:	mov    QWORD PTR [rdi],rax
   140008968:	mov    rbx,QWORD PTR [rsp+0x30]
   14000896d:	mov    rsi,QWORD PTR [rsp+0x38]
   140008972:	add    rsp,0x20
   140008976:	pop    rdi
   140008977:	ret    
   140008978:	lea    rax,[rip+0x2e651]        # 0x140036fd0
   14000897f:	ret    
   140008980:	xor    r8d,r8d
   140008983:	lea    rax,[rip+0x2e67e]        # 0x140037008
   14000898a:	mov    DWORD PTR [rcx+0x10],0x11
   140008991:	mov    QWORD PTR [rcx],rax
   140008994:	mov    eax,0xa
   140008999:	cmp    rdx,r8
   14000899c:	cmovle rdx,rax
   1400089a0:	mov    QWORD PTR [rcx+0x8],r8
   1400089a4:	mov    QWORD PTR [rcx+0x18],r8
   1400089a8:	mov    QWORD PTR [rcx+0x20],r8
   1400089ac:	mov    QWORD PTR [rcx+0x28],r8
   1400089b0:	mov    rax,rcx
   1400089b3:	mov    QWORD PTR [rcx+0x30],rdx
   1400089b7:	ret    
   1400089b8:	lea    rax,[rip+0x2e649]        # 0x140037008
   1400089bf:	mov    QWORD PTR [rcx],rax
   1400089c2:	jmp    0x140008778
   1400089c7:	int3   
   1400089c8:	rex push rbx
   1400089ca:	sub    rsp,0x20
   1400089ce:	cmp    QWORD PTR [rcx+0x20],0x0
   1400089d3:	mov    rbx,rcx
   1400089d6:	jne    0x140008a12
   1400089d8:	mov    rdx,QWORD PTR [rbx+0x30]
   1400089dc:	add    rcx,0x28
   1400089e0:	mov    r8d,0x18
   1400089e6:	call   0x1400091d4
   1400089eb:	mov    rdx,QWORD PTR [rbx+0x30]
   1400089ef:	lea    rcx,[rdx+rdx*2]
   1400089f3:	dec    rdx
   1400089f6:	lea    r8,[rax+rcx*8-0x10]
   1400089fb:	js     0x140008a12
   1400089fd:	mov    rax,QWORD PTR [rbx+0x20]
   140008a01:	mov    QWORD PTR [r8],rax
   140008a04:	mov    QWORD PTR [rbx+0x20],r8
   140008a08:	sub    r8,0x18
   140008a0c:	sub    rdx,0x1
   140008a10:	jns    0x1400089fd
   140008a12:	mov    rax,QWORD PTR [rbx+0x20]
   140008a16:	mov    rcx,QWORD PTR [rax]
   140008a19:	inc    QWORD PTR [rbx+0x18]
   140008a1d:	mov    QWORD PTR [rbx+0x20],rcx
   140008a21:	and    QWORD PTR [rax+0x8],0x0
   140008a26:	and    QWORD PTR [rax+0x10],0x0
   140008a2b:	add    rsp,0x20
   140008a2f:	pop    rbx
   140008a30:	ret    
   140008a31:	int3   
   140008a32:	int3   
   140008a33:	int3   
   140008a34:	mov    QWORD PTR [rsp+0x8],rbx
   140008a39:	push   rdi
   140008a3a:	sub    rsp,0x20
   140008a3e:	lea    r9,[rsp+0x48]
   140008a43:	lea    r8,[rsp+0x40]
   140008a48:	mov    rdi,rdx
   140008a4b:	mov    rbx,rcx
   140008a4e:	call   0x1400087b4
   140008a53:	mov    r9,rax
   140008a56:	test   rax,rax
   140008a59:	jne    0x140008a93
   140008a5b:	cmp    QWORD PTR [rcx+0x8],rax
   140008a5f:	jne    0x140008a6d
   140008a61:	mov    edx,DWORD PTR [rcx+0x10]
   140008a64:	lea    r8d,[rax+0x1]
   140008a68:	call   0x1400086f8
   140008a6d:	mov    rcx,rbx
   140008a70:	call   0x1400089c8
   140008a75:	mov    edx,DWORD PTR [rsp+0x40]
   140008a79:	mov    QWORD PTR [rax+0x8],rdi
   140008a7d:	mov    r9,rax
   140008a80:	mov    rax,QWORD PTR [rbx+0x8]
   140008a84:	mov    rcx,QWORD PTR [rax+rdx*8]
   140008a88:	mov    QWORD PTR [r9],rcx
   140008a8b:	mov    rax,QWORD PTR [rbx+0x8]
   140008a8f:	mov    QWORD PTR [rax+rdx*8],r9
   140008a93:	lea    rax,[r9+0x10]
   140008a97:	mov    rbx,QWORD PTR [rsp+0x30]
   140008a9c:	add    rsp,0x20
   140008aa0:	pop    rdi
   140008aa1:	ret    
   140008aa2:	int3   
   140008aa3:	int3   
   140008aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140008aa9:	push   rdi
   140008aaa:	sub    rsp,0x20
   140008aae:	lea    rax,[rip+0x2e553]        # 0x140037008
   140008ab5:	mov    ebx,edx
   140008ab7:	mov    rdi,rcx
   140008aba:	mov    QWORD PTR [rcx],rax
   140008abd:	call   0x140008778
   140008ac2:	test   bl,0x1
   140008ac5:	je     0x140008acf
   140008ac7:	mov    rcx,rdi
   140008aca:	call   0x1400062d4
   140008acf:	mov    rax,rdi
   140008ad2:	mov    rbx,QWORD PTR [rsp+0x30]
   140008ad7:	add    rsp,0x20
   140008adb:	pop    rdi
   140008adc:	ret    
   140008add:	int3   
   140008ade:	int3   
   140008adf:	int3   
   140008ae0:	lea    rax,[rip+0x3fb79]        # 0x140048660
   140008ae7:	ret    
   140008ae8:	mov    QWORD PTR [rsp+0x8],rbx
   140008aed:	push   rdi
   140008aee:	sub    rsp,0x20
   140008af2:	mov    ebx,edx
   140008af4:	mov    rdi,rcx
   140008af7:	test   edx,edx
   140008af9:	jns    0x140008aff
   140008afb:	xor    eax,eax
   140008afd:	jmp    0x140008b28
   140008aff:	lea    eax,[rdx+0x1]
   140008b02:	imul   eax,r8d
   140008b06:	movsxd rcx,eax
   140008b09:	add    rcx,0x18
   140008b0d:	call   0x140014f50
   140008b12:	test   rax,rax
   140008b15:	je     0x140008afb
   140008b17:	and    DWORD PTR [rax+0x8],0x0
   140008b1b:	mov    QWORD PTR [rax],rdi
   140008b1e:	mov    DWORD PTR [rax+0x10],0x1
   140008b25:	mov    DWORD PTR [rax+0xc],ebx
   140008b28:	mov    rbx,QWORD PTR [rsp+0x30]
   140008b2d:	add    rsp,0x20
   140008b31:	pop    rdi
   140008b32:	ret    
   140008b33:	int3   
   140008b34:	mov    rcx,rdx
   140008b37:	jmp    0x140014f10
   140008b3c:	rex push rbx
   140008b3e:	sub    rsp,0x20
   140008b42:	mov    ebx,r8d
   140008b45:	mov    r8,rdx
   140008b48:	test   ebx,ebx
   140008b4a:	jns    0x140008b50
   140008b4c:	xor    eax,eax
   140008b4e:	jmp    0x140008b6e
   140008b50:	lea    eax,[rbx+0x1]
   140008b53:	mov    rcx,r8
   140008b56:	imul   eax,r9d
   140008b5a:	movsxd rdx,eax
   140008b5d:	add    rdx,0x18
   140008b61:	call   0x140015fd0
   140008b66:	test   rax,rax
   140008b69:	je     0x140008b4c
   140008b6b:	mov    DWORD PTR [rax+0xc],ebx
   140008b6e:	add    rsp,0x20
   140008b72:	pop    rbx
   140008b73:	ret    
   140008b74:	mov    rax,rcx
   140008b77:	ret    
   140008b78:	lock add DWORD PTR [rcx+0x18],0x1
   140008b7d:	lea    rax,[rcx+0x8]
   140008b81:	ret    
   140008b82:	int3   
   140008b83:	int3   
   140008b84:	rex push rbx
   140008b86:	sub    rsp,0x20
   140008b8a:	and    QWORD PTR [rcx+0x18],0x0
   140008b8f:	and    QWORD PTR [rcx+0x20],0x0
   140008b94:	and    QWORD PTR [rcx+0x10],0x0
   140008b99:	and    QWORD PTR [rcx+0x8],0x0
   140008b9e:	mov    rbx,rcx
   140008ba1:	mov    rcx,QWORD PTR [rcx+0x28]
   140008ba5:	call   0x14000920c
   140008baa:	and    QWORD PTR [rbx+0x28],0x0
   140008baf:	add    rsp,0x20
   140008bb3:	pop    rbx
   140008bb4:	ret    
   140008bb5:	int3   
   140008bb6:	int3   
   140008bb7:	int3   
   140008bb8:	sub    rsp,0x28
   140008bbc:	test   rdx,rdx
   140008bbf:	jne    0x140008bc7
   140008bc1:	call   0x140006520
   140008bc6:	int3   
   140008bc7:	mov    rax,QWORD PTR [rcx+0x20]
   140008bcb:	mov    QWORD PTR [rdx],rax
   140008bce:	add    QWORD PTR [rcx+0x18],0xffffffffffffffff
   140008bd3:	mov    QWORD PTR [rcx+0x20],rdx
   140008bd7:	jne    0x140008bde
   140008bd9:	call   0x140008b84
   140008bde:	add    rsp,0x28
   140008be2:	ret    
   140008be3:	int3   
   140008be4:	rex push rbx
   140008be6:	sub    rsp,0x20
   140008bea:	test   rcx,rcx
   140008bed:	jne    0x140008bf5
   140008bef:	call   0x140006520
   140008bf4:	int3   
   140008bf5:	mov    rdx,QWORD PTR [rcx+0x8]
   140008bf9:	test   rdx,rdx
   140008bfc:	jne    0x140008c04
   140008bfe:	call   0x140006520
   140008c03:	int3   
   140008c04:	mov    rax,QWORD PTR [rdx]
   140008c07:	mov    rbx,QWORD PTR [rdx+0x10]
   140008c0b:	mov    QWORD PTR [rcx+0x8],rax
   140008c0f:	test   rax,rax
   140008c12:	je     0x140008c1b
   140008c14:	and    QWORD PTR [rax+0x8],0x0
   140008c19:	jmp    0x140008c20
   140008c1b:	and    QWORD PTR [rcx+0x10],0x0
   140008c20:	call   0x140008bb8
   140008c25:	mov    rax,rbx
   140008c28:	add    rsp,0x20
   140008c2c:	pop    rbx
   140008c2d:	ret    
   140008c2e:	int3   
   140008c2f:	int3   
   140008c30:	sub    rsp,0x28
   140008c34:	call   0x140007e40
   140008c39:	mov    rax,QWORD PTR [rax+0x8]
   140008c3d:	add    rsp,0x28
   140008c41:	ret    
   140008c42:	int3   
   140008c43:	int3   
   140008c44:	sub    rsp,0x28
   140008c48:	cmp    DWORD PTR [rdx+0x8],0x1
   140008c4c:	mov    rax,rdx
   140008c4f:	jne    0x140008c57
   140008c51:	or     rax,0xffffffffffffffff
   140008c55:	jmp    0x140008c6a
   140008c57:	cmp    DWORD PTR [rdx+0x8],0xf
   140008c5b:	jne    0x140008c68
   140008c5d:	mov    rcx,QWORD PTR [rax]
   140008c60:	xor    edx,edx
   140008c62:	call   QWORD PTR [rip+0x2db78]        # 0x1400367e0
   140008c68:	xor    eax,eax
   140008c6a:	add    rsp,0x28
   140008c6e:	ret    
   140008c6f:	int3   
   140008c70:	mov    QWORD PTR [rsp+0x8],rbx
   140008c75:	push   rdi
   140008c76:	sub    rsp,0x20
   140008c7a:	mov    rbx,rdx
   140008c7d:	mov    rdi,rcx
   140008c80:	call   0x140007e40
   140008c85:	mov    rcx,QWORD PTR [rax+0x8]
   140008c89:	test   rcx,rcx
   140008c8c:	je     0x140008c9f
   140008c8e:	mov    rax,QWORD PTR [rcx]
   140008c91:	mov    r8,rbx
   140008c94:	mov    rdx,rdi
   140008c97:	call   QWORD PTR [rax+0xd8]
   140008c9d:	jmp    0x140008caa
   140008c9f:	mov    rdx,rbx
   140008ca2:	mov    rcx,rdi
   140008ca5:	call   0x140008c44
   140008caa:	mov    rbx,QWORD PTR [rsp+0x30]
   140008caf:	add    rsp,0x20
   140008cb3:	pop    rdi
   140008cb4:	ret    
   140008cb5:	int3   
   140008cb6:	int3   
   140008cb7:	int3   
   140008cb8:	mov    QWORD PTR [rsp+0x8],rbx
   140008cbd:	push   rdi
   140008cbe:	sub    rsp,0x20
   140008cc2:	mov    rax,QWORD PTR [rcx]
   140008cc5:	mov    rbx,rdx
   140008cc8:	mov    rdi,rcx
   140008ccb:	call   QWORD PTR [rax+0x88]
   140008cd1:	test   rax,rax
   140008cd4:	jne    0x140008d7e
   140008cda:	mov    rax,QWORD PTR [rdi]
   140008cdd:	mov    rcx,rdi
   140008ce0:	call   QWORD PTR [rax+0x70]
   140008ce3:	mov    r8d,DWORD PTR [rbx]
   140008ce6:	mov    r11,rax
   140008ce9:	cmp    DWORD PTR [rip+0x349c0],r8d        # 0x14003d6b0
   140008cf0:	jne    0x140008d39
   140008cf2:	mov    ecx,DWORD PTR [rip+0x349bc]        # 0x14003d6b4
   140008cf8:	cmp    DWORD PTR [rbx+0x4],ecx
   140008cfb:	jne    0x140008d39
   140008cfd:	mov    ecx,DWORD PTR [rip+0x349b5]        # 0x14003d6b8
   140008d03:	cmp    DWORD PTR [rbx+0x8],ecx
   140008d06:	jne    0x140008d39
   140008d08:	mov    ecx,DWORD PTR [rip+0x349ae]        # 0x14003d6bc
   140008d0e:	cmp    DWORD PTR [rbx+0xc],ecx
   140008d11:	jne    0x140008d39
   140008d13:	mov    rcx,QWORD PTR [r11+0x8]
   140008d17:	jmp    0x140008d29
   140008d19:	mov    rax,QWORD PTR [rcx+0x8]
   140008d1d:	add    rax,rdi
   140008d20:	cmp    DWORD PTR [rax],0x0
   140008d23:	jne    0x140008d7e
   140008d25:	add    rcx,0x10
   140008d29:	cmp    QWORD PTR [rcx],0x0
   140008d2d:	jne    0x140008d19
   140008d2f:	mov    r11,QWORD PTR [r11]
   140008d32:	test   r11,r11
   140008d35:	je     0x140008d7c
   140008d37:	jmp    0x140008d13
   140008d39:	mov    rdx,QWORD PTR [r11+0x8]
   140008d3d:	jmp    0x140008d6c
   140008d3f:	cmp    DWORD PTR [rcx],r8d
   140008d42:	jne    0x140008d68
   140008d44:	mov    eax,DWORD PTR [rbx+0x4]
   140008d47:	cmp    DWORD PTR [rcx+0x4],eax
   140008d4a:	jne    0x140008d68
   140008d4c:	mov    eax,DWORD PTR [rbx+0x8]
   140008d4f:	cmp    DWORD PTR [rcx+0x8],eax
   140008d52:	jne    0x140008d68
   140008d54:	mov    eax,DWORD PTR [rbx+0xc]
   140008d57:	cmp    DWORD PTR [rcx+0xc],eax
   140008d5a:	jne    0x140008d68
   140008d5c:	mov    rax,QWORD PTR [rdx+0x8]
   140008d60:	add    rax,rdi
   140008d63:	cmp    DWORD PTR [rax],0x0
   140008d66:	jne    0x140008d7e
   140008d68:	add    rdx,0x10
   140008d6c:	mov    rcx,QWORD PTR [rdx]
   140008d6f:	test   rcx,rcx
   140008d72:	jne    0x140008d3f
   140008d74:	mov    r11,QWORD PTR [r11]
   140008d77:	test   r11,r11
   140008d7a:	jne    0x140008d39
   140008d7c:	xor    eax,eax
   140008d7e:	mov    rbx,QWORD PTR [rsp+0x30]
   140008d83:	add    rsp,0x20
   140008d87:	pop    rdi
   140008d88:	ret    
   140008d89:	int3   
   140008d8a:	int3   
   140008d8b:	int3   
   140008d8c:	mov    QWORD PTR [rsp+0x10],rbx
   140008d91:	mov    QWORD PTR [rsp+0x18],rbp
   140008d96:	mov    QWORD PTR [rsp+0x20],rsi
   140008d9b:	push   rdi
   140008d9c:	sub    rsp,0x20
   140008da0:	mov    rax,QWORD PTR [rcx]
   140008da3:	mov    rbp,rdx
   140008da6:	mov    rsi,rcx
   140008da9:	call   QWORD PTR [rax+0x70]
   140008dac:	mov    rdi,rax
   140008daf:	mov    r8,QWORD PTR [rdi+0x8]
   140008db3:	jmp    0x140008db9
   140008db5:	add    r8,0x10
   140008db9:	cmp    QWORD PTR [r8],0x0
   140008dbd:	jne    0x140008db5
   140008dbf:	lea    rbx,[r8+0x8]
   140008dc3:	jmp    0x140008df6
   140008dc5:	mov    rax,QWORD PTR [rbx]
   140008dc8:	mov    rcx,QWORD PTR [rsi+rax*1]
   140008dcc:	test   rcx,rcx
   140008dcf:	je     0x140008df2
   140008dd1:	mov    rax,QWORD PTR [rcx]
   140008dd4:	and    QWORD PTR [rsp+0x30],0x0
   140008dda:	lea    r8,[rsp+0x30]
   140008ddf:	mov    rdx,rbp
   140008de2:	call   QWORD PTR [rax]
   140008de4:	test   eax,eax
   140008de6:	jne    0x140008df2
   140008de8:	mov    rax,QWORD PTR [rsp+0x30]
   140008ded:	test   rax,rax
   140008df0:	jne    0x140008e06
   140008df2:	add    rbx,0x10
   140008df6:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   140008dfa:	jne    0x140008dc5
   140008dfc:	mov    rdi,QWORD PTR [rdi]
   140008dff:	test   rdi,rdi
   140008e02:	jne    0x140008daf
   140008e04:	xor    eax,eax
   140008e06:	mov    rbx,QWORD PTR [rsp+0x38]
   140008e0b:	mov    rbp,QWORD PTR [rsp+0x40]
   140008e10:	mov    rsi,QWORD PTR [rsp+0x48]
   140008e15:	add    rsp,0x20
   140008e19:	pop    rdi
   140008e1a:	ret    
   140008e1b:	int3   
   140008e1c:	sub    rsp,0x28
   140008e20:	cmp    DWORD PTR [rcx+0x8],0x0
   140008e24:	je     0x140008e30
   140008e26:	mov    rdx,QWORD PTR [rcx]
   140008e29:	xor    ecx,ecx
   140008e2b:	call   0x140006dcc
   140008e30:	add    rsp,0x28
   140008e34:	ret    
   140008e35:	int3   
   140008e36:	int3   
   140008e37:	int3   
   140008e38:	sub    rsp,0x28
   140008e3c:	cmp    QWORD PTR [rcx+0x10],0x0
   140008e41:	je     0x140008e4f
   140008e43:	mov    rcx,QWORD PTR [rcx+0x10]
   140008e47:	mov    rax,QWORD PTR [rcx]
   140008e4a:	call   QWORD PTR [rax+0x8]
   140008e4d:	jmp    0x140008e5b
   140008e4f:	mov    eax,0x1
   140008e54:	lock xadd DWORD PTR [rcx+0x8],eax
   140008e59:	inc    eax
   140008e5b:	add    rsp,0x28
   140008e5f:	ret    
   140008e60:	rex push rdi
   140008e62:	sub    rsp,0x40
   140008e66:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140008e6f:	mov    QWORD PTR [rsp+0x50],rbx
   140008e74:	mov    rbx,rcx
   140008e77:	cmp    DWORD PTR [rcx+0x8],0x0
   140008e7b:	jne    0x140008e81
   140008e7d:	xor    eax,eax
   140008e7f:	jmp    0x140008ebb
   140008e81:	or     edi,0xffffffff
   140008e84:	lock xadd DWORD PTR [rcx+0x8],edi
   140008e89:	add    edi,0xffffffff
   140008e8c:	jne    0x140008eb9
   140008e8e:	mov    rdx,QWORD PTR [rcx+0x38]
   140008e92:	lea    rcx,[rsp+0x28]
   140008e97:	call   0x140007e6c
   140008e9c:	nop
   140008e9d:	mov    rdx,QWORD PTR [rbx]
   140008ea0:	mov    rcx,rbx
   140008ea3:	call   QWORD PTR [rdx+0x20]
   140008ea6:	nop
   140008ea7:	cmp    DWORD PTR [rsp+0x30],edi
   140008eab:	je     0x140008eb9
   140008ead:	mov    rdx,QWORD PTR [rsp+0x28]
   140008eb2:	xor    ecx,ecx
   140008eb4:	call   0x140006dcc
   140008eb9:	mov    eax,edi
   140008ebb:	mov    rbx,QWORD PTR [rsp+0x50]
   140008ec0:	add    rsp,0x40
   140008ec4:	pop    rdi
   140008ec5:	ret    
   140008ec6:	int3   
   140008ec7:	int3   
   140008ec8:	sub    rsp,0x28
   140008ecc:	cmp    QWORD PTR [rcx+0x10],0x0
   140008ed1:	je     0x140008edf
   140008ed3:	mov    rcx,QWORD PTR [rcx+0x10]
   140008ed7:	mov    rax,QWORD PTR [rcx]
   140008eda:	call   QWORD PTR [rax+0x10]
   140008edd:	jmp    0x140008ee4
   140008edf:	call   0x140008e60
   140008ee4:	add    rsp,0x28
   140008ee8:	ret    
   140008ee9:	int3   
   140008eea:	int3   
   140008eeb:	int3   
   140008eec:	mov    QWORD PTR [rsp+0x8],rbx
   140008ef1:	mov    QWORD PTR [rsp+0x10],rsi
   140008ef6:	push   rdi
   140008ef7:	sub    rsp,0x20
   140008efb:	mov    rdi,r8
   140008efe:	mov    rsi,rdx
   140008f01:	mov    rbx,rcx
   140008f04:	call   0x140008cb8
   140008f09:	mov    rcx,rbx
   140008f0c:	mov    QWORD PTR [rdi],rax
   140008f0f:	test   rax,rax
   140008f12:	je     0x140008f1d
   140008f14:	call   0x140008e38
   140008f19:	xor    eax,eax
   140008f1b:	jmp    0x140008f34
   140008f1d:	mov    rdx,rsi
   140008f20:	call   0x140008d8c
   140008f25:	mov    QWORD PTR [rdi],rax
   140008f28:	neg    rax
   140008f2b:	sbb    eax,eax
   140008f2d:	not    eax
   140008f2f:	and    eax,0x80004002
   140008f34:	mov    rbx,QWORD PTR [rsp+0x30]
   140008f39:	mov    rsi,QWORD PTR [rsp+0x38]
   140008f3e:	add    rsp,0x20
   140008f42:	pop    rdi
   140008f43:	ret    
   140008f44:	sub    rsp,0x28
   140008f48:	cmp    QWORD PTR [rcx+0x10],0x0
   140008f4d:	je     0x140008f5a
   140008f4f:	mov    rcx,QWORD PTR [rcx+0x10]
   140008f53:	mov    rax,QWORD PTR [rcx]
   140008f56:	call   QWORD PTR [rax]
   140008f58:	jmp    0x140008f5f
   140008f5a:	call   0x140008eec
   140008f5f:	add    rsp,0x28
   140008f63:	ret    
   140008f64:	rex push rbx
   140008f66:	sub    rsp,0x20
   140008f6a:	mov    rbx,rcx
   140008f6d:	mov    ecx,0xf
   140008f72:	call   QWORD PTR [rip+0x2d830]        # 0x1400367a8
   140008f78:	mov    ecx,0x10
   140008f7d:	mov    DWORD PTR [rbx+0x30],eax
   140008f80:	call   QWORD PTR [rip+0x2d822]        # 0x1400367a8
   140008f86:	mov    ecx,0x14
   140008f8b:	mov    DWORD PTR [rbx+0x34],eax
   140008f8e:	call   QWORD PTR [rip+0x2d814]        # 0x1400367a8
   140008f94:	mov    ecx,0x12
   140008f99:	mov    DWORD PTR [rbx+0x38],eax
   140008f9c:	call   QWORD PTR [rip+0x2d806]        # 0x1400367a8
   140008fa2:	mov    ecx,0x6
   140008fa7:	mov    DWORD PTR [rbx+0x3c],eax
   140008faa:	call   QWORD PTR [rip+0x2d7f8]        # 0x1400367a8
   140008fb0:	mov    ecx,0xf
   140008fb5:	mov    DWORD PTR [rbx+0x40],eax
   140008fb8:	call   QWORD PTR [rip+0x2d7f2]        # 0x1400367b0
   140008fbe:	mov    ecx,0x6
   140008fc3:	mov    QWORD PTR [rbx+0x28],rax
   140008fc7:	call   QWORD PTR [rip+0x2d7e3]        # 0x1400367b0
   140008fcd:	mov    QWORD PTR [rbx+0x20],rax
   140008fd1:	add    rsp,0x20
   140008fd5:	pop    rbx
   140008fd6:	ret    
   140008fd7:	int3   
   140008fd8:	mov    QWORD PTR [rsp+0x8],rbx
   140008fdd:	push   rdi
   140008fde:	sub    rsp,0x20
   140008fe2:	mov    rdi,rcx
   140008fe5:	mov    ecx,0xb
   140008fea:	call   QWORD PTR [rip+0x2d7a0]        # 0x140036790
   140008ff0:	mov    ecx,0xc
   140008ff5:	mov    DWORD PTR [rdi+0x8],eax
   140008ff8:	call   QWORD PTR [rip+0x2d792]        # 0x140036790
   140008ffe:	mov    ecx,0x2
   140009003:	mov    DWORD PTR [rdi+0xc],eax
   140009006:	call   QWORD PTR [rip+0x2d784]        # 0x140036790
   14000900c:	mov    ecx,0x3
   140009011:	inc    eax
   140009013:	mov    DWORD PTR [rip+0x41f97],eax        # 0x14004afb0
   140009019:	call   QWORD PTR [rip+0x2d771]        # 0x140036790
   14000901f:	xor    ecx,ecx
   140009021:	inc    eax
   140009023:	mov    DWORD PTR [rip+0x41f8b],eax        # 0x14004afb4
   140009029:	call   QWORD PTR [rip+0x2d769]        # 0x140036798
   14000902f:	mov    edx,0x58
   140009034:	mov    rcx,rax
   140009037:	mov    rbx,rax
   14000903a:	call   QWORD PTR [rip+0x2d098]        # 0x1400360d8
   140009040:	mov    edx,0x5a
   140009045:	mov    rcx,rbx
   140009048:	mov    DWORD PTR [rdi+0x18],eax
   14000904b:	call   QWORD PTR [rip+0x2d087]        # 0x1400360d8
   140009051:	mov    rdx,rbx
   140009054:	xor    ecx,ecx
   140009056:	mov    DWORD PTR [rdi+0x1c],eax
   140009059:	mov    rbx,QWORD PTR [rsp+0x30]
   14000905e:	add    rsp,0x20
   140009062:	pop    rdi
   140009063:	rex.W jmp QWORD PTR [rip+0x2d736]        # 0x1400367a0
   14000906a:	int3   
   14000906b:	int3   
   14000906c:	rex push rbx
   14000906e:	sub    rsp,0x20
   140009072:	mov    rbx,rcx
   140009075:	call   0x140008fd8
   14000907a:	and    QWORD PTR [rbx+0x28],0x0
   14000907f:	mov    rcx,rbx
   140009082:	call   0x140008f64
   140009087:	mov    edx,0x7f02
   14000908c:	xor    ecx,ecx
   14000908e:	call   QWORD PTR [rip+0x2d6f4]        # 0x140036788
   140009094:	mov    edx,0x7f00
   140009099:	xor    ecx,ecx
   14000909b:	mov    QWORD PTR [rbx+0x48],rax
   14000909f:	call   QWORD PTR [rip+0x2d6e3]        # 0x140036788
   1400090a5:	and    QWORD PTR [rbx+0x70],0x0
   1400090aa:	and    QWORD PTR [rbx+0x58],0x0
   1400090af:	mov    QWORD PTR [rbx+0x50],rax
   1400090b3:	mov    eax,0x2
   1400090b8:	mov    DWORD PTR [rbx+0x10],eax
   1400090bb:	mov    DWORD PTR [rbx+0x14],eax
   1400090be:	mov    rax,rbx
   1400090c1:	add    rsp,0x20
   1400090c5:	pop    rbx
   1400090c6:	ret    
   1400090c7:	int3   
   1400090c8:	mov    QWORD PTR [rsp+0x8],rbx
   1400090cd:	mov    QWORD PTR [rsp+0x10],rbp
   1400090d2:	mov    QWORD PTR [rsp+0x18],rsi
   1400090d7:	push   rdi
   1400090d8:	sub    rsp,0x20
   1400090dc:	mov    rbp,r8
   1400090df:	mov    rsi,rdx
   1400090e2:	mov    rdi,rcx
   1400090e5:	test   rdx,rdx
   1400090e8:	jne    0x1400090f5
   1400090ea:	mov    ecx,0x80070057
   1400090ef:	call   0x14000677c
   1400090f4:	int3   
   1400090f5:	mov    rdx,r8
   1400090f8:	mov    rcx,rsi
   1400090fb:	call   0x1400166f8
   140009100:	mov    rcx,QWORD PTR [rdi]
   140009103:	mov    edx,0x1
   140009108:	sub    edx,DWORD PTR [rcx-0x8]
   14000910b:	mov    ecx,DWORD PTR [rcx-0xc]
   14000910e:	movsxd rbx,eax
   140009111:	sub    ecx,ebx
   140009113:	or     edx,ecx
   140009115:	jge    0x140009121
   140009117:	mov    edx,ebx
   140009119:	mov    rcx,rdi
   14000911c:	call   0x14000722c
   140009121:	mov    rcx,QWORD PTR [rdi]
   140009124:	lea    eax,[rbx+0x1]
   140009127:	mov    r9,rbp
   14000912a:	movsxd rdx,eax
   14000912d:	mov    r8,rsi
   140009130:	call   0x14001687c
   140009135:	test   ebx,ebx
   140009137:	js     0x140009160
   140009139:	mov    rax,QWORD PTR [rdi]
   14000913c:	cmp    ebx,DWORD PTR [rax-0xc]
   14000913f:	jg     0x140009160
   140009141:	mov    rbp,QWORD PTR [rsp+0x38]
   140009146:	mov    rsi,QWORD PTR [rsp+0x40]
   14000914b:	mov    DWORD PTR [rax-0x10],ebx
   14000914e:	mov    rax,QWORD PTR [rdi]
   140009151:	mov    BYTE PTR [rbx+rax*1],0x0
   140009155:	mov    rbx,QWORD PTR [rsp+0x30]
   14000915a:	add    rsp,0x20
   14000915e:	pop    rdi
   14000915f:	ret    
   140009160:	mov    ecx,0x80070057
   140009165:	call   0x14000677c
   14000916a:	int3   
   14000916b:	int3   
   14000916c:	mov    rax,rsp
   14000916f:	mov    QWORD PTR [rax+0x10],rdx
   140009173:	mov    QWORD PTR [rax+0x18],r8
   140009177:	mov    QWORD PTR [rax+0x20],r9
   14000917b:	sub    rsp,0x28
   14000917f:	lea    r8,[rax+0x18]
   140009183:	call   0x1400090c8
   140009188:	add    rsp,0x28
   14000918c:	ret    
   14000918d:	int3   
   14000918e:	int3   
   14000918f:	int3   
   140009190:	sub    rsp,0x268
   140009197:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   1400091a0:	mov    rax,QWORD PTR [rip+0x3fc19]        # 0x140048dc0
   1400091a7:	xor    rax,rsp
   1400091aa:	mov    QWORD PTR [rsp+0x250],rax
   1400091b2:	add    rcx,0x70
   1400091b6:	call   0x140011a34
   1400091bb:	nop
   1400091bc:	mov    rcx,QWORD PTR [rsp+0x250]
   1400091c4:	xor    rcx,rsp
   1400091c7:	call   0x1400144f0
   1400091cc:	add    rsp,0x268
   1400091d3:	ret    
   1400091d4:	rex push rbx
   1400091d6:	sub    rsp,0x20
   1400091da:	mov    rbx,rcx
   1400091dd:	test   rdx,rdx
   1400091e0:	je     0x140009203
   1400091e2:	test   r8,r8
   1400091e5:	je     0x140009203
   1400091e7:	imul   rdx,r8
   1400091eb:	lea    rcx,[rdx+0x8]
   1400091ef:	call   0x140006290
   1400091f4:	mov    rcx,QWORD PTR [rbx]
   1400091f7:	mov    QWORD PTR [rax],rcx
   1400091fa:	mov    QWORD PTR [rbx],rax
   1400091fd:	add    rsp,0x20
   140009201:	pop    rbx
   140009202:	ret    
   140009203:	call   0x140006520
   140009208:	int3   
   140009209:	int3   
   14000920a:	int3   
   14000920b:	int3   
   14000920c:	test   rcx,rcx
   14000920f:	je     0x14000922b
   140009211:	push   rbx
   140009212:	sub    rsp,0x20
   140009216:	mov    rbx,QWORD PTR [rcx]
   140009219:	call   0x1400062d4
   14000921e:	mov    rcx,rbx
   140009221:	test   rbx,rbx
   140009224:	jne    0x140009216
   140009226:	add    rsp,0x20
   14000922a:	pop    rbx
   14000922b:	ret    
   14000922c:	xor    eax,eax
   14000922e:	cmp    rcx,rax
   140009231:	setne  al
   140009234:	ret    
   140009235:	int3   
   140009236:	int3   
   140009237:	int3   
   140009238:	mov    QWORD PTR [rsp+0x8],rbx
   14000923d:	mov    QWORD PTR [rsp+0x10],rbp
   140009242:	mov    QWORD PTR [rsp+0x18],rsi
   140009247:	push   rdi
   140009248:	push   r12
   14000924a:	push   r13
   14000924c:	push   r14
   14000924e:	push   r15
   140009250:	sub    rsp,0x30
   140009254:	mov    ebp,r8d
   140009257:	mov    r13,rdx
   14000925a:	mov    rdi,rcx
   14000925d:	test   r8d,r8d
   140009260:	jne    0x140009269
   140009262:	xor    eax,eax
   140009264:	jmp    0x1400093f4
   140009269:	test   rdx,rdx
   14000926c:	je     0x140009262
   14000926e:	test   BYTE PTR [rcx+0x20],0x1
   140009272:	jne    0x140009283
   140009274:	mov    rdx,QWORD PTR [rcx+0x18]
   140009278:	mov    ecx,0x4
   14000927d:	call   0x140009e7c
   140009282:	int3   
   140009283:	mov    r8,QWORD PTR [rcx+0x38]
   140009287:	lea    r15,[rcx+0x40]
   14000928b:	mov    rdx,rbp
   14000928e:	mov    r12d,DWORD PTR [r15]
   140009291:	sub    r12d,DWORD PTR [rcx+0x38]
   140009295:	mov    rcx,r13
   140009298:	cmp    ebp,r12d
   14000929b:	cmovb  r12d,ebp
   14000929f:	mov    r9d,r12d
   1400092a2:	mov    ebx,r12d
   1400092a5:	call   0x140014510
   1400092aa:	test   eax,eax
   1400092ac:	je     0x1400092d4
   1400092ae:	cmp    eax,0xc
   1400092b1:	je     0x1400092ce
   1400092b3:	cmp    eax,0x16
   1400092b6:	je     0x1400092c8
   1400092b8:	cmp    eax,0x22
   1400092bb:	je     0x1400092c8
   1400092bd:	cmp    eax,0x50
   1400092c0:	je     0x1400092d4
   1400092c2:	call   0x140006520
   1400092c7:	int3   
   1400092c8:	call   0x140006520
   1400092cd:	int3   
   1400092ce:	call   0x1400064d8
   1400092d3:	int3   
   1400092d4:	add    QWORD PTR [rdi+0x38],rbx
   1400092d8:	mov    esi,ebp
   1400092da:	add    r13,rbx
   1400092dd:	sub    esi,r12d
   1400092e0:	je     0x1400093f0
   1400092e6:	xor    edx,edx
   1400092e8:	mov    eax,esi
   1400092ea:	mov    r12d,esi
   1400092ed:	div    DWORD PTR [rdi+0x28]
   1400092f0:	sub    r12d,edx
   1400092f3:	xor    ebx,ebx
   1400092f5:	mov    r14d,r12d
   1400092f8:	mov    rcx,QWORD PTR [rdi+0x30]
   1400092fc:	mov    r8d,r14d
   1400092ff:	mov    rdx,r13
   140009302:	mov    rax,QWORD PTR [rcx]
   140009305:	call   QWORD PTR [rax+0x68]
   140009308:	mov    ecx,eax
   14000930a:	add    ebx,eax
   14000930c:	sub    r14d,eax
   14000930f:	add    r13,rcx
   140009312:	test   eax,eax
   140009314:	je     0x14000931b
   140009316:	test   r14d,r14d
   140009319:	jne    0x1400092f8
   14000931b:	sub    esi,ebx
   14000931d:	je     0x1400093f0
   140009323:	cmp    ebx,r12d
   140009326:	jne    0x1400093f0
   14000932c:	cmp    DWORD PTR [rdi+0xc],0x0
   140009330:	jne    0x140009381
   140009332:	cmp    DWORD PTR [rdi+0x10],0x0
   140009336:	jne    0x140009342
   140009338:	mov    ebx,DWORD PTR [rdi+0x28]
   14000933b:	cmp    esi,ebx
   14000933d:	cmova  ebx,esi
   140009340:	jmp    0x140009344
   140009342:	mov    ebx,esi
   140009344:	mov    r14,QWORD PTR [rdi+0x48]
   140009348:	xor    r12d,r12d
   14000934b:	mov    rcx,QWORD PTR [rdi+0x30]
   14000934f:	mov    r8d,ebx
   140009352:	mov    rdx,r14
   140009355:	mov    rax,QWORD PTR [rcx]
   140009358:	call   QWORD PTR [rax+0x68]
   14000935b:	mov    ecx,eax
   14000935d:	add    r12d,eax
   140009360:	sub    ebx,eax
   140009362:	add    r14,rcx
   140009365:	test   eax,eax
   140009367:	je     0x140009372
   140009369:	test   ebx,ebx
   14000936b:	je     0x140009372
   14000936d:	cmp    r12d,esi
   140009370:	jb     0x14000934b
   140009372:	mov    r8,QWORD PTR [rdi+0x48]
   140009376:	mov    eax,r12d
   140009379:	add    rax,r8
   14000937c:	mov    QWORD PTR [r15],rax
   14000937f:	jmp    0x1400093a1
   140009381:	mov    rcx,QWORD PTR [rdi+0x30]
   140009385:	mov    r8d,DWORD PTR [rdi+0x28]
   140009389:	lea    r9,[rdi+0x48]
   14000938d:	mov    rax,QWORD PTR [rcx]
   140009390:	xor    edx,edx
   140009392:	mov    QWORD PTR [rsp+0x20],r15
   140009397:	call   QWORD PTR [rax+0xa0]
   14000939d:	mov    r8,QWORD PTR [rdi+0x48]
   1400093a1:	mov    ebx,DWORD PTR [r15]
   1400093a4:	mov    edx,esi
   1400093a6:	mov    rcx,r13
   1400093a9:	sub    ebx,r8d
   1400093ac:	mov    QWORD PTR [rdi+0x38],r8
   1400093b0:	cmp    esi,ebx
   1400093b2:	cmovb  ebx,esi
   1400093b5:	mov    r9d,ebx
   1400093b8:	mov    r12d,ebx
   1400093bb:	call   0x140014510
   1400093c0:	test   eax,eax
   1400093c2:	je     0x1400093ea
   1400093c4:	cmp    eax,0xc
   1400093c7:	je     0x1400093e4
   1400093c9:	cmp    eax,0x16
   1400093cc:	je     0x1400093de
   1400093ce:	cmp    eax,0x22
   1400093d1:	je     0x1400093de
   1400093d3:	cmp    eax,0x50
   1400093d6:	je     0x1400093ea
   1400093d8:	call   0x140006520
   1400093dd:	int3   
   1400093de:	call   0x140006520
   1400093e3:	int3   
   1400093e4:	call   0x1400064d8
   1400093e9:	int3   
   1400093ea:	add    QWORD PTR [rdi+0x38],r12
   1400093ee:	sub    esi,ebx
   1400093f0:	sub    ebp,esi
   1400093f2:	mov    eax,ebp
   1400093f4:	mov    rbx,QWORD PTR [rsp+0x60]
   1400093f9:	mov    rbp,QWORD PTR [rsp+0x68]
   1400093fe:	mov    rsi,QWORD PTR [rsp+0x70]
   140009403:	add    rsp,0x30
   140009407:	pop    r15
   140009409:	pop    r14
   14000940b:	pop    r13
   14000940d:	pop    r12
   14000940f:	pop    rdi
   140009410:	ret    
   140009411:	int3   
   140009412:	int3   
   140009413:	int3   
   140009414:	mov    QWORD PTR [rsp+0x8],rbx
   140009419:	push   rdi
   14000941a:	sub    rsp,0x30
   14000941e:	test   BYTE PTR [rcx+0x20],0x1
   140009422:	mov    rbx,rcx
   140009425:	je     0x14000944e
   140009427:	mov    rax,QWORD PTR [rcx+0x38]
   14000942b:	cmp    QWORD PTR [rcx+0x40],rax
   14000942f:	je     0x140009448
   140009431:	mov    rcx,QWORD PTR [rcx+0x30]
   140009435:	sub    eax,DWORD PTR [rbx+0x40]
   140009438:	mov    r8d,0x1
   14000943e:	mov    r9,QWORD PTR [rcx]
   140009441:	movsxd rdx,eax
   140009444:	call   QWORD PTR [r9+0x50]
   140009448:	mov    rax,QWORD PTR [rbx+0x40]
   14000944c:	jmp    0x1400094c4
   14000944e:	cmp    DWORD PTR [rcx+0xc],0x0
   140009452:	lea    rdi,[rcx+0x48]
   140009456:	jne    0x140009474
   140009458:	mov    rdx,QWORD PTR [rdi]
   14000945b:	cmp    QWORD PTR [rcx+0x38],rdx
   14000945f:	je     0x1400094c1
   140009461:	mov    rcx,QWORD PTR [rcx+0x30]
   140009465:	mov    r8d,DWORD PTR [rbx+0x38]
   140009469:	mov    rax,QWORD PTR [rcx]
   14000946c:	sub    r8d,edx
   14000946f:	call   QWORD PTR [rax+0x70]
   140009472:	jmp    0x1400094c1
   140009474:	mov    rax,QWORD PTR [rdi]
   140009477:	cmp    QWORD PTR [rcx+0x38],rax
   14000947b:	je     0x14000949e
   14000947d:	mov    rcx,QWORD PTR [rcx+0x30]
   140009481:	mov    r8d,DWORD PTR [rbx+0x38]
   140009485:	and    QWORD PTR [rsp+0x20],0x0
   14000948b:	mov    rax,QWORD PTR [rcx]
   14000948e:	sub    r8d,DWORD PTR [rdi]
   140009491:	xor    r9d,r9d
   140009494:	lea    edx,[r9+0x2]
   140009498:	call   QWORD PTR [rax+0xa0]
   14000949e:	mov    rcx,QWORD PTR [rbx+0x30]
   1400094a2:	mov    r8d,DWORD PTR [rbx+0x28]
   1400094a6:	lea    rax,[rbx+0x40]
   1400094aa:	mov    r10,QWORD PTR [rcx]
   1400094ad:	mov    r9,rdi
   1400094b0:	mov    edx,0x1
   1400094b5:	mov    QWORD PTR [rsp+0x20],rax
   1400094ba:	call   QWORD PTR [r10+0xa0]
   1400094c1:	mov    rax,QWORD PTR [rdi]
   1400094c4:	mov    QWORD PTR [rbx+0x38],rax
   1400094c8:	mov    rbx,QWORD PTR [rsp+0x40]
   1400094cd:	add    rsp,0x30
   1400094d1:	pop    rdi
   1400094d2:	ret    
   1400094d3:	int3   
   1400094d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400094d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400094de:	mov    QWORD PTR [rsp+0x18],rsi
   1400094e3:	push   rdi
   1400094e4:	push   r12
   1400094e6:	push   r13
   1400094e8:	sub    rsp,0x30
   1400094ec:	mov    r8d,0x1
   1400094f2:	mov    esi,edx
   1400094f4:	mov    rdi,rcx
   1400094f7:	test   BYTE PTR [rcx+0x20],r8b
   1400094fb:	jne    0x14000950b
   1400094fd:	mov    rdx,QWORD PTR [rcx+0x18]
   140009501:	lea    ecx,[r8+0x3]
   140009505:	call   0x140009e7c
   14000950a:	int3   
   14000950b:	lea    rbp,[rcx+0x40]
   14000950f:	mov    ebx,DWORD PTR [rbp+0x0]
   140009512:	sub    ebx,DWORD PTR [rcx+0x38]
   140009515:	cmp    DWORD PTR [rcx+0xc],0x0
   140009519:	lea    r13d,[rbx+rdx*1]
   14000951d:	jne    0x1400095cb
   140009523:	mov    r8,QWORD PTR [rcx+0x38]
   140009527:	mov    rcx,QWORD PTR [rcx+0x48]
   14000952b:	cmp    r8,rcx
   14000952e:	jbe    0x140009602
   140009534:	test   ebx,ebx
   140009536:	jle    0x140009581
   140009538:	mov    rdx,QWORD PTR [rbp+0x0]
   14000953c:	mov    r9d,ebx
   14000953f:	sub    rdx,rcx
   140009542:	call   0x1400145a8
   140009547:	test   eax,eax
   140009549:	je     0x140009571
   14000954b:	cmp    eax,0xc
   14000954e:	je     0x14000956b
   140009550:	cmp    eax,0x16
   140009553:	je     0x140009565
   140009555:	cmp    eax,0x22
   140009558:	je     0x140009565
   14000955a:	cmp    eax,0x50
   14000955d:	je     0x140009571
   14000955f:	call   0x140006520
   140009564:	int3   
   140009565:	call   0x140006520
   14000956a:	int3   
   14000956b:	call   0x1400064d8
   140009570:	int3   
   140009571:	mov    rcx,QWORD PTR [rdi+0x48]
   140009575:	mov    QWORD PTR [rdi+0x38],rcx
   140009579:	lea    rax,[rbx+rcx*1]
   14000957d:	mov    QWORD PTR [rbp+0x0],rax
   140009581:	cmp    DWORD PTR [rdi+0x10],0x0
   140009585:	jne    0x14000958a
   140009587:	mov    esi,DWORD PTR [rdi+0x28]
   14000958a:	mov    r12d,ebx
   14000958d:	sub    esi,ebx
   14000958f:	add    r12,rcx
   140009592:	mov    rcx,QWORD PTR [rdi+0x30]
   140009596:	mov    r8d,esi
   140009599:	mov    rdx,r12
   14000959c:	mov    rax,QWORD PTR [rcx]
   14000959f:	call   QWORD PTR [rax+0x68]
   1400095a2:	mov    ecx,eax
   1400095a4:	add    ebx,eax
   1400095a6:	sub    esi,eax
   1400095a8:	add    r12,rcx
   1400095ab:	test   eax,eax
   1400095ad:	je     0x1400095b8
   1400095af:	test   esi,esi
   1400095b1:	je     0x1400095b8
   1400095b3:	cmp    ebx,r13d
   1400095b6:	jb     0x140009592
   1400095b8:	mov    rcx,QWORD PTR [rdi+0x48]
   1400095bc:	mov    eax,ebx
   1400095be:	add    rax,rcx
   1400095c1:	mov    QWORD PTR [rdi+0x38],rcx
   1400095c5:	mov    QWORD PTR [rbp+0x0],rax
   1400095c9:	jmp    0x140009602
   1400095cb:	test   ebx,ebx
   1400095cd:	je     0x1400095de
   1400095cf:	mov    rcx,QWORD PTR [rcx+0x30]
   1400095d3:	neg    ebx
   1400095d5:	mov    rax,QWORD PTR [rcx]
   1400095d8:	movsxd rdx,ebx
   1400095db:	call   QWORD PTR [rax+0x50]
   1400095de:	mov    rcx,QWORD PTR [rdi+0x30]
   1400095e2:	mov    r8d,DWORD PTR [rdi+0x28]
   1400095e6:	lea    r9,[rdi+0x48]
   1400095ea:	mov    rax,QWORD PTR [rcx]
   1400095ed:	xor    edx,edx
   1400095ef:	mov    QWORD PTR [rsp+0x20],rbp
   1400095f4:	call   QWORD PTR [rax+0xa0]
   1400095fa:	mov    r11,QWORD PTR [rdi+0x48]
   1400095fe:	mov    QWORD PTR [rdi+0x38],r11
   140009602:	mov    eax,DWORD PTR [rbp+0x0]
   140009605:	sub    eax,DWORD PTR [rdi+0x38]
   140009608:	cmp    eax,r13d
   14000960b:	jae    0x140009618
   14000960d:	xor    edx,edx
   14000960f:	lea    ecx,[rdx+0x3]
   140009612:	call   0x140009e7c
   140009617:	int3   
   140009618:	mov    rbx,QWORD PTR [rsp+0x50]
   14000961d:	mov    rbp,QWORD PTR [rsp+0x58]
   140009622:	mov    rsi,QWORD PTR [rsp+0x60]
   140009627:	add    rsp,0x30
   14000962b:	pop    r13
   14000962d:	pop    r12
   14000962f:	pop    rdi
   140009630:	ret    
   140009631:	int3   
   140009632:	int3   
   140009633:	int3   
   140009634:	mov    QWORD PTR [rsp+0x8],rbx
   140009639:	push   rdi
   14000963a:	sub    rsp,0x20
   14000963e:	mov    rdi,rcx
   140009641:	test   rcx,rcx
   140009644:	jne    0x14000964c
   140009646:	call   0x140006520
   14000964b:	int3   
   14000964c:	call   0x140007df0
   140009651:	xor    ecx,ecx
   140009653:	mov    rbx,rax
   140009656:	call   0x140006d04
   14000965b:	mov    rbx,QWORD PTR [rbx+0x30]
   14000965f:	jmp    0x140009675
   140009661:	mov    rdx,QWORD PTR [rbx]
   140009664:	mov    rcx,rdi
   140009667:	call   QWORD PTR [rip+0x2cd0b]        # 0x140036378
   14000966d:	test   eax,eax
   14000966f:	je     0x14000968e
   140009671:	mov    rbx,QWORD PTR [rbx+0x20]
   140009675:	test   rbx,rbx
   140009678:	jne    0x140009661
   14000967a:	xor    ecx,ecx
   14000967c:	call   0x140006d98
   140009681:	xor    eax,eax
   140009683:	mov    rbx,QWORD PTR [rsp+0x30]
   140009688:	add    rsp,0x20
   14000968c:	pop    rdi
   14000968d:	ret    
   14000968e:	xor    ecx,ecx
   140009690:	call   0x140006d98
   140009695:	mov    rax,rbx
   140009698:	jmp    0x140009683
   14000969a:	int3   
   14000969b:	int3   
   14000969c:	mov    QWORD PTR [rsp+0x18],rbx
   1400096a1:	mov    QWORD PTR [rsp+0x20],rsi
   1400096a6:	push   rdi
   1400096a7:	sub    rsp,0x70
   1400096ab:	mov    rax,QWORD PTR [rip+0x3f70e]        # 0x140048dc0
   1400096b2:	xor    rax,rsp
   1400096b5:	mov    QWORD PTR [rsp+0x60],rax
   1400096ba:	mov    rbx,rdx
   1400096bd:	mov    rdi,rcx
   1400096c0:	test   rdx,rdx
   1400096c3:	je     0x14000977f
   1400096c9:	test   BYTE PTR [rcx+0x20],0x1
   1400096cd:	jne    0x1400096de
   1400096cf:	mov    rdx,QWORD PTR [rcx+0x18]
   1400096d3:	mov    ecx,0x4
   1400096d8:	call   0x140009e7c
   1400096dd:	int3   
   1400096de:	mov    rax,QWORD PTR [rcx+0x38]
   1400096e2:	add    rax,0x2
   1400096e6:	cmp    rax,QWORD PTR [rcx+0x40]
   1400096ea:	jbe    0x1400096fa
   1400096ec:	mov    edx,DWORD PTR [rcx+0x38]
   1400096ef:	sub    edx,DWORD PTR [rcx+0x40]
   1400096f2:	add    edx,0x2
   1400096f5:	call   0x1400094d4
   1400096fa:	mov    rax,QWORD PTR [rdi+0x38]
   1400096fe:	movzx  ecx,WORD PTR [rax]
   140009701:	add    rax,0x2
   140009705:	mov    QWORD PTR [rdi+0x38],rax
   140009709:	mov    DWORD PTR [rbx],ecx
   14000970b:	test   BYTE PTR [rdi+0x20],0x1
   14000970f:	jne    0x140009720
   140009711:	mov    rdx,QWORD PTR [rdi+0x18]
   140009715:	mov    ecx,0x4
   14000971a:	call   0x140009e7c
   14000971f:	int3   
   140009720:	mov    rax,QWORD PTR [rdi+0x38]
   140009724:	add    rax,0x2
   140009728:	cmp    rax,QWORD PTR [rdi+0x40]
   14000972c:	jbe    0x14000973f
   14000972e:	mov    edx,DWORD PTR [rdi+0x38]
   140009731:	mov    rcx,rdi
   140009734:	sub    edx,DWORD PTR [rdi+0x40]
   140009737:	add    edx,0x2
   14000973a:	call   0x1400094d4
   14000973f:	mov    rax,QWORD PTR [rdi+0x38]
   140009743:	movzx  esi,WORD PTR [rax]
   140009746:	add    rax,0x2
   14000974a:	mov    QWORD PTR [rdi+0x38],rax
   14000974e:	cmp    si,0x40
   140009752:	jae    0x14000977f
   140009754:	movzx  ebx,si
   140009757:	lea    rdx,[rsp+0x20]
   14000975c:	mov    rcx,rdi
   14000975f:	mov    r8d,ebx
   140009762:	call   0x140009238
   140009767:	cmp    eax,ebx
   140009769:	jne    0x14000977f
   14000976b:	movzx  eax,si
   14000976e:	lea    rcx,[rsp+0x20]
   140009773:	mov    BYTE PTR [rsp+rax*1+0x20],0x0
   140009778:	call   0x140009634
   14000977d:	jmp    0x140009781
   14000977f:	xor    eax,eax
   140009781:	mov    rcx,QWORD PTR [rsp+0x60]
   140009786:	xor    rcx,rsp
   140009789:	call   0x1400144f0
   14000978e:	lea    r11,[rsp+0x70]
   140009793:	mov    rbx,QWORD PTR [r11+0x20]
   140009797:	mov    rsi,QWORD PTR [r11+0x28]
   14000979b:	mov    rsp,r11
   14000979e:	pop    rdi
   14000979f:	ret    
   1400097a0:	test   r8d,r8d
   1400097a3:	je     0x140009919
   1400097a9:	mov    QWORD PTR [rsp+0x8],rbx
   1400097ae:	mov    QWORD PTR [rsp+0x10],rbp
   1400097b3:	mov    QWORD PTR [rsp+0x18],rsi
   1400097b8:	push   rdi
   1400097b9:	push   r12
   1400097bb:	push   r13
   1400097bd:	sub    rsp,0x30
   1400097c1:	mov    esi,r8d
   1400097c4:	mov    rbp,rdx
   1400097c7:	mov    rdi,rcx
   1400097ca:	test   rdx,rdx
   1400097cd:	je     0x140009901
   1400097d3:	mov    eax,DWORD PTR [rcx+0x20]
   1400097d6:	not    eax
   1400097d8:	test   al,0x1
   1400097da:	jne    0x1400097eb
   1400097dc:	mov    rdx,QWORD PTR [rcx+0x18]
   1400097e0:	mov    ecx,0x2
   1400097e5:	call   0x140009e7c
   1400097ea:	int3   
   1400097eb:	lea    r13,[rcx+0x40]
   1400097ef:	mov    r12d,DWORD PTR [r13+0x0]
   1400097f3:	mov    rdx,QWORD PTR [r13+0x0]
   1400097f7:	sub    r12d,DWORD PTR [rcx+0x38]
   1400097fb:	mov    rcx,QWORD PTR [rcx+0x38]
   1400097ff:	cmp    r8d,r12d
   140009802:	cmovb  r12d,r8d
   140009806:	sub    rdx,rcx
   140009809:	mov    r8,rbp
   14000980c:	mov    r9d,r12d
   14000980f:	mov    ebx,r12d
   140009812:	call   0x140014510
   140009817:	test   eax,eax
   140009819:	je     0x140009841
   14000981b:	cmp    eax,0xc
   14000981e:	je     0x14000983b
   140009820:	cmp    eax,0x16
   140009823:	je     0x140009835
   140009825:	cmp    eax,0x22
   140009828:	je     0x140009835
   14000982a:	cmp    eax,0x50
   14000982d:	je     0x140009841
   14000982f:	call   0x140006520
   140009834:	int3   
   140009835:	call   0x140006520
   14000983a:	int3   
   14000983b:	call   0x1400064d8
   140009840:	int3   
   140009841:	add    QWORD PTR [rdi+0x38],rbx
   140009845:	add    rbp,rbx
   140009848:	sub    esi,r12d
   14000984b:	je     0x140009901
   140009851:	mov    rcx,rdi
   140009854:	call   0x140009414
   140009859:	mov    rcx,QWORD PTR [rdi+0x30]
   14000985d:	xor    edx,edx
   14000985f:	mov    eax,esi
   140009861:	mov    ebx,esi
   140009863:	div    DWORD PTR [rdi+0x28]
   140009866:	mov    rax,QWORD PTR [rcx]
   140009869:	sub    ebx,edx
   14000986b:	mov    rdx,rbp
   14000986e:	mov    r8d,ebx
   140009871:	call   QWORD PTR [rax+0x70]
   140009874:	mov    r11d,ebx
   140009877:	sub    esi,ebx
   140009879:	add    rbp,r11
   14000987c:	cmp    DWORD PTR [rdi+0xc],0x0
   140009880:	je     0x1400098a9
   140009882:	mov    rcx,QWORD PTR [rdi+0x30]
   140009886:	mov    r8d,DWORD PTR [rdi+0x28]
   14000988a:	lea    r9,[rdi+0x48]
   14000988e:	mov    rax,QWORD PTR [rcx]
   140009891:	mov    edx,0x1
   140009896:	mov    QWORD PTR [rsp+0x20],r13
   14000989b:	call   QWORD PTR [rax+0xa0]
   1400098a1:	mov    r11,QWORD PTR [rdi+0x48]
   1400098a5:	mov    QWORD PTR [rdi+0x38],r11
   1400098a9:	cmp    esi,DWORD PTR [rdi+0x28]
   1400098ac:	jb     0x1400098b4
   1400098ae:	call   0x140006520
   1400098b3:	int3   
   1400098b4:	mov    rcx,QWORD PTR [rdi+0x38]
   1400098b8:	cmp    rcx,QWORD PTR [rdi+0x48]
   1400098bc:	je     0x1400098c4
   1400098be:	call   0x140006520
   1400098c3:	int3   
   1400098c4:	mov    r9d,esi
   1400098c7:	mov    r8,rbp
   1400098ca:	mov    edx,esi
   1400098cc:	mov    ebx,esi
   1400098ce:	call   0x140014510
   1400098d3:	test   eax,eax
   1400098d5:	je     0x1400098fd
   1400098d7:	cmp    eax,0xc
   1400098da:	je     0x1400098f7
   1400098dc:	cmp    eax,0x16
   1400098df:	je     0x1400098f1
   1400098e1:	cmp    eax,0x22
   1400098e4:	je     0x1400098f1
   1400098e6:	cmp    eax,0x50
   1400098e9:	je     0x1400098fd
   1400098eb:	call   0x140006520
   1400098f0:	int3   
   1400098f1:	call   0x140006520
   1400098f6:	int3   
   1400098f7:	call   0x1400064d8
   1400098fc:	int3   
   1400098fd:	add    QWORD PTR [rdi+0x38],rbx
   140009901:	mov    rbx,QWORD PTR [rsp+0x50]
   140009906:	mov    rbp,QWORD PTR [rsp+0x58]
   14000990b:	mov    rsi,QWORD PTR [rsp+0x60]
   140009910:	add    rsp,0x30
   140009914:	pop    r13
   140009916:	pop    r12
   140009918:	pop    rdi
   140009919:	ret    
   14000991a:	int3   
   14000991b:	int3   
   14000991c:	mov    QWORD PTR [rsp+0x8],rbx
   140009921:	mov    QWORD PTR [rsp+0x10],rbp
   140009926:	push   rdi
   140009927:	sub    rsp,0x20
   14000992b:	mov    eax,DWORD PTR [rcx+0x20]
   14000992e:	mov    ebp,0xffff
   140009933:	mov    rdi,rdx
   140009936:	not    eax
   140009938:	mov    rbx,rcx
   14000993b:	cmp    rdx,rbp
   14000993e:	jae    0x140009977
   140009940:	test   al,0x1
   140009942:	jne    0x140009953
   140009944:	mov    rdx,QWORD PTR [rcx+0x18]
   140009948:	mov    ecx,0x2
   14000994d:	call   0x140009e7c
   140009952:	int3   
   140009953:	mov    rax,QWORD PTR [rcx+0x38]
   140009957:	add    rax,0x2
   14000995b:	cmp    rax,QWORD PTR [rcx+0x40]
   14000995f:	jbe    0x140009966
   140009961:	call   0x140009414
   140009966:	mov    rax,QWORD PTR [rbx+0x38]
   14000996a:	mov    WORD PTR [rax],di
   14000996d:	add    QWORD PTR [rbx+0x38],0x2
   140009972:	jmp    0x140009a58
   140009977:	test   al,0x1
   140009979:	jne    0x14000998a
   14000997b:	mov    rdx,QWORD PTR [rcx+0x18]
   14000997f:	mov    ecx,0x2
   140009984:	call   0x140009e7c
   140009989:	int3   
   14000998a:	mov    rax,QWORD PTR [rcx+0x38]
   14000998e:	add    rax,0x2
   140009992:	cmp    rax,QWORD PTR [rcx+0x40]
   140009996:	jbe    0x14000999d
   140009998:	call   0x140009414
   14000999d:	mov    rax,QWORD PTR [rbx+0x38]
   1400099a1:	mov    WORD PTR [rax],bp
   1400099a4:	add    QWORD PTR [rbx+0x38],0x2
   1400099a9:	mov    eax,DWORD PTR [rbx+0x20]
   1400099ac:	mov    rcx,QWORD PTR [rbx+0x38]
   1400099b0:	mov    ebp,0xffffffff
   1400099b5:	not    eax
   1400099b7:	cmp    rdi,rbp
   1400099ba:	jae    0x1400099ee
   1400099bc:	test   al,0x1
   1400099be:	jne    0x1400099cf
   1400099c0:	mov    rdx,QWORD PTR [rbx+0x18]
   1400099c4:	mov    ecx,0x2
   1400099c9:	call   0x140009e7c
   1400099ce:	int3   
   1400099cf:	lea    rax,[rcx+0x4]
   1400099d3:	cmp    rax,QWORD PTR [rbx+0x40]
   1400099d7:	jbe    0x1400099e1
   1400099d9:	mov    rcx,rbx
   1400099dc:	call   0x140009414
   1400099e1:	mov    rax,QWORD PTR [rbx+0x38]
   1400099e5:	mov    DWORD PTR [rax],edi
   1400099e7:	add    QWORD PTR [rbx+0x38],0x4
   1400099ec:	jmp    0x140009a58
   1400099ee:	test   al,0x1
   1400099f0:	jne    0x140009a01
   1400099f2:	mov    rdx,QWORD PTR [rbx+0x18]
   1400099f6:	mov    ecx,0x2
   1400099fb:	call   0x140009e7c
   140009a00:	int3   
   140009a01:	lea    rax,[rcx+0x4]
   140009a05:	cmp    rax,QWORD PTR [rbx+0x40]
   140009a09:	jbe    0x140009a13
   140009a0b:	mov    rcx,rbx
   140009a0e:	call   0x140009414
   140009a13:	mov    rax,QWORD PTR [rbx+0x38]
   140009a17:	mov    DWORD PTR [rax],ebp
   140009a19:	add    QWORD PTR [rbx+0x38],0x4
   140009a1e:	mov    eax,DWORD PTR [rbx+0x20]
   140009a21:	mov    rcx,QWORD PTR [rbx+0x38]
   140009a25:	not    eax
   140009a27:	test   al,0x1
   140009a29:	jne    0x140009a3a
   140009a2b:	mov    rdx,QWORD PTR [rbx+0x18]
   140009a2f:	mov    ecx,0x2
   140009a34:	call   0x140009e7c
   140009a39:	int3   
   140009a3a:	lea    rax,[rcx+0x8]
   140009a3e:	cmp    rax,QWORD PTR [rbx+0x40]
   140009a42:	jbe    0x140009a4c
   140009a44:	mov    rcx,rbx
   140009a47:	call   0x140009414
   140009a4c:	mov    rax,QWORD PTR [rbx+0x38]
   140009a50:	mov    QWORD PTR [rax],rdi
   140009a53:	add    QWORD PTR [rbx+0x38],0x8
   140009a58:	mov    rbx,QWORD PTR [rsp+0x30]
   140009a5d:	mov    rbp,QWORD PTR [rsp+0x38]
   140009a62:	add    rsp,0x20
   140009a66:	pop    rdi
   140009a67:	ret    
   140009a68:	rex push rbx
   140009a6a:	sub    rsp,0x20
   140009a6e:	test   BYTE PTR [rcx+0x20],0x1
   140009a72:	mov    rbx,rcx
   140009a75:	jne    0x140009a86
   140009a77:	mov    rdx,QWORD PTR [rcx+0x18]
   140009a7b:	mov    ecx,0x4
   140009a80:	call   0x140009e7c
   140009a85:	int3   
   140009a86:	mov    rax,QWORD PTR [rcx+0x38]
   140009a8a:	add    rax,0x2
   140009a8e:	cmp    rax,QWORD PTR [rcx+0x40]
   140009a92:	jbe    0x140009aa2
   140009a94:	mov    edx,DWORD PTR [rcx+0x38]
   140009a97:	sub    edx,DWORD PTR [rcx+0x40]
   140009a9a:	add    edx,0x2
   140009a9d:	call   0x1400094d4
   140009aa2:	mov    rax,QWORD PTR [rbx+0x38]
   140009aa6:	mov    edx,0xffff
   140009aab:	movzx  ecx,WORD PTR [rax]
   140009aae:	add    rax,0x2
   140009ab2:	mov    QWORD PTR [rbx+0x38],rax
   140009ab6:	cmp    cx,dx
   140009ab9:	je     0x140009ac3
   140009abb:	movzx  eax,cx
   140009abe:	jmp    0x140009b4a
   140009ac3:	test   BYTE PTR [rbx+0x20],0x1
   140009ac7:	jne    0x140009ad8
   140009ac9:	mov    rdx,QWORD PTR [rbx+0x18]
   140009acd:	mov    ecx,0x4
   140009ad2:	call   0x140009e7c
   140009ad7:	int3   
   140009ad8:	add    rax,0x4
   140009adc:	cmp    rax,QWORD PTR [rbx+0x40]
   140009ae0:	jbe    0x140009af3
   140009ae2:	mov    edx,DWORD PTR [rbx+0x38]
   140009ae5:	mov    rcx,rbx
   140009ae8:	sub    edx,DWORD PTR [rbx+0x40]
   140009aeb:	add    edx,0x4
   140009aee:	call   0x1400094d4
   140009af3:	mov    rax,QWORD PTR [rbx+0x38]
   140009af7:	mov    ecx,DWORD PTR [rax]
   140009af9:	add    rax,0x4
   140009afd:	mov    QWORD PTR [rbx+0x38],rax
   140009b01:	cmp    ecx,0xffffffff
   140009b04:	je     0x140009b0b
   140009b06:	mov    rax,rcx
   140009b09:	jmp    0x140009b4a
   140009b0b:	test   BYTE PTR [rbx+0x20],0x1
   140009b0f:	jne    0x140009b20
   140009b11:	mov    rdx,QWORD PTR [rbx+0x18]
   140009b15:	mov    ecx,0x4
   140009b1a:	call   0x140009e7c
   140009b1f:	int3   
   140009b20:	add    rax,0x8
   140009b24:	cmp    rax,QWORD PTR [rbx+0x40]
   140009b28:	jbe    0x140009b3b
   140009b2a:	mov    edx,DWORD PTR [rbx+0x38]
   140009b2d:	mov    rcx,rbx
   140009b30:	sub    edx,DWORD PTR [rbx+0x40]
   140009b33:	add    edx,0x8
   140009b36:	call   0x1400094d4
   140009b3b:	mov    rcx,QWORD PTR [rbx+0x38]
   140009b3f:	mov    rax,QWORD PTR [rcx]
   140009b42:	add    rcx,0x8
   140009b46:	mov    QWORD PTR [rbx+0x38],rcx
   140009b4a:	add    rsp,0x20
   140009b4e:	pop    rbx
   140009b4f:	ret    
   140009b50:	mov    QWORD PTR [rsp+0x8],rbx
   140009b55:	mov    QWORD PTR [rsp+0x10],rbp
   140009b5a:	mov    QWORD PTR [rsp+0x18],rsi
   140009b5f:	push   rdi
   140009b60:	sub    rsp,0x20
   140009b64:	mov    rsi,rcx
   140009b67:	mov    rcx,QWORD PTR [rcx]
   140009b6a:	mov    rbx,rdx
   140009b6d:	call   QWORD PTR [rip+0x2c845]        # 0x1400363b8
   140009b73:	mov    r8d,DWORD PTR [rbx+0x20]
   140009b77:	movzx  ebp,WORD PTR [rsi+0xc]
   140009b7b:	not    r8d
   140009b7e:	mov    edi,eax
   140009b80:	test   r8b,0x1
   140009b84:	jne    0x140009b95
   140009b86:	mov    rdx,QWORD PTR [rbx+0x18]
   140009b8a:	mov    ecx,0x2
   140009b8f:	call   0x140009e7c
   140009b94:	int3   
   140009b95:	mov    rax,QWORD PTR [rbx+0x38]
   140009b99:	add    rax,0x2
   140009b9d:	cmp    rax,QWORD PTR [rbx+0x40]
   140009ba1:	jbe    0x140009bab
   140009ba3:	mov    rcx,rbx
   140009ba6:	call   0x140009414
   140009bab:	mov    rax,QWORD PTR [rbx+0x38]
   140009baf:	mov    WORD PTR [rax],bp
   140009bb2:	add    QWORD PTR [rbx+0x38],0x2
   140009bb7:	mov    eax,DWORD PTR [rbx+0x20]
   140009bba:	mov    rcx,QWORD PTR [rbx+0x38]
   140009bbe:	not    eax
   140009bc0:	test   al,0x1
   140009bc2:	jne    0x140009bd3
   140009bc4:	mov    rdx,QWORD PTR [rbx+0x18]
   140009bc8:	mov    ecx,0x2
   140009bcd:	call   0x140009e7c
   140009bd2:	int3   
   140009bd3:	lea    rax,[rcx+0x2]
   140009bd7:	cmp    rax,QWORD PTR [rbx+0x40]
   140009bdb:	jbe    0x140009be5
   140009bdd:	mov    rcx,rbx
   140009be0:	call   0x140009414
   140009be5:	mov    rax,QWORD PTR [rbx+0x38]
   140009be9:	movzx  r8d,di
   140009bed:	mov    rcx,rbx
   140009bf0:	mov    WORD PTR [rax],di
   140009bf3:	add    QWORD PTR [rbx+0x38],0x2
   140009bf8:	mov    rdx,QWORD PTR [rsi]
   140009bfb:	mov    rbx,QWORD PTR [rsp+0x30]
   140009c00:	mov    rbp,QWORD PTR [rsp+0x38]
   140009c05:	mov    rsi,QWORD PTR [rsp+0x40]
   140009c0a:	add    rsp,0x20
   140009c0e:	pop    rdi
   140009c0f:	jmp    0x1400097a0
   140009c14:	lea    rax,[rip+0x2d51d]        # 0x140037138
   140009c1b:	ret    
   140009c1c:	push   r12
   140009c1e:	sub    rsp,0x40
   140009c22:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140009c2b:	mov    QWORD PTR [rsp+0x50],rbx
   140009c30:	mov    QWORD PTR [rsp+0x60],rsi
   140009c35:	mov    QWORD PTR [rsp+0x68],rdi
   140009c3a:	mov    r12d,r8d
   140009c3d:	mov    rsi,rdx
   140009c40:	mov    rdi,rcx
   140009c43:	test   rdx,rdx
   140009c46:	jne    0x140009c4f
   140009c48:	xor    eax,eax
   140009c4a:	jmp    0x140009d6c
   140009c4f:	test   r9,r9
   140009c52:	je     0x140009c5f
   140009c54:	mov    eax,DWORD PTR [rcx+0x10]
   140009c57:	add    eax,0xf1b0
   140009c5c:	mov    DWORD PTR [r9],eax
   140009c5f:	call   0x140008ae0
   140009c64:	mov    r11,rax
   140009c67:	xor    ecx,ecx
   140009c69:	test   rax,rax
   140009c6c:	setne  cl
   140009c6f:	test   ecx,ecx
   140009c71:	jne    0x140009c7e
   140009c73:	mov    ecx,0x80004005
   140009c78:	call   0x14000677c
   140009c7d:	int3   
   140009c7e:	mov    rax,QWORD PTR [rax]
   140009c81:	mov    rcx,r11
   140009c84:	call   QWORD PTR [rax+0x18]
   140009c87:	add    rax,0x18
   140009c8b:	mov    QWORD PTR [rsp+0x58],rax
   140009c90:	mov    rcx,QWORD PTR [rdi+0x18]
   140009c94:	sub    rcx,0x18
   140009c98:	call   0x140006ebc
   140009c9d:	lea    rbx,[rax+0x18]
   140009ca1:	mov    QWORD PTR [rsp+0x20],rbx
   140009ca6:	cmp    DWORD PTR [rbx-0x10],0x0
   140009caa:	jne    0x140009cd3
   140009cac:	mov    ecx,0xf006
   140009cb1:	call   0x140008440
   140009cb6:	test   rax,rax
   140009cb9:	je     0x140009cd3
   140009cbb:	mov    r8d,0xf006
   140009cc1:	mov    rdx,rax
   140009cc4:	lea    rcx,[rsp+0x20]
   140009cc9:	call   0x140007444
   140009cce:	mov    rbx,QWORD PTR [rsp+0x20]
   140009cd3:	mov    edx,DWORD PTR [rdi+0x10]
   140009cd6:	add    edx,0xf1b0
   140009cdc:	mov    r8,rbx
   140009cdf:	lea    rcx,[rsp+0x58]
   140009ce4:	call   0x140012170
   140009ce9:	mov    rdx,r12
   140009cec:	or     rdi,0xffffffffffffffff
   140009cf0:	mov    r9,rdi
   140009cf3:	mov    r8,QWORD PTR [rsp+0x58]
   140009cf8:	mov    rcx,rsi
   140009cfb:	call   0x140015934
   140009d00:	test   eax,eax
   140009d02:	je     0x140009d28
   140009d04:	cmp    eax,0xc
   140009d07:	je     0x140009d22
   140009d09:	cmp    eax,0x16
   140009d0c:	je     0x140009d1d
   140009d0e:	cmp    eax,0x22
   140009d11:	je     0x140009d1d
   140009d13:	cmp    eax,0x50
   140009d16:	je     0x140009d28
   140009d18:	call   0x140006520
   140009d1d:	call   0x140006520
   140009d22:	call   0x1400064d8
   140009d27:	nop
   140009d28:	lea    rdx,[rbx-0x18]
   140009d2c:	mov    eax,edi
   140009d2e:	lock xadd DWORD PTR [rdx+0x10],eax
   140009d33:	add    eax,edi
   140009d35:	test   eax,eax
   140009d37:	jg     0x140009d43
   140009d39:	mov    rcx,QWORD PTR [rdx]
   140009d3c:	mov    rax,QWORD PTR [rcx]
   140009d3f:	call   QWORD PTR [rax+0x8]
   140009d42:	nop
   140009d43:	mov    rdx,QWORD PTR [rsp+0x58]
   140009d48:	add    rdx,0xffffffffffffffe8
   140009d4c:	mov    eax,edi
   140009d4e:	lock xadd DWORD PTR [rdx+0x10],eax
   140009d53:	add    eax,edi
   140009d55:	test   eax,eax
   140009d57:	jg     0x140009d63
   140009d59:	mov    rcx,QWORD PTR [rdx]
   140009d5c:	mov    rax,QWORD PTR [rcx]
   140009d5f:	call   QWORD PTR [rax+0x8]
   140009d62:	nop
   140009d63:	mov    eax,0x1
   140009d68:	jmp    0x140009d6c
   140009d6a:	xor    eax,eax
   140009d6c:	mov    rbx,QWORD PTR [rsp+0x50]
   140009d71:	mov    rsi,QWORD PTR [rsp+0x60]
   140009d76:	mov    rdi,QWORD PTR [rsp+0x68]
   140009d7b:	add    rsp,0x40
   140009d7f:	pop    r12
   140009d81:	ret    
   140009d82:	int3   
   140009d83:	int3   
   140009d84:	mov    QWORD PTR [rsp+0x8],rcx
   140009d89:	push   rsi
   140009d8a:	push   rdi
   140009d8b:	push   r12
   140009d8d:	sub    rsp,0x30
   140009d91:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009d9a:	mov    QWORD PTR [rsp+0x58],rbx
   140009d9f:	mov    QWORD PTR [rsp+0x60],rbp
   140009da4:	mov    rdi,r8
   140009da7:	mov    r12d,edx
   140009daa:	mov    rsi,rcx
   140009dad:	call   0x140006578
   140009db2:	lea    r11,[rip+0x2d407]        # 0x1400371c0
   140009db9:	mov    QWORD PTR [rsi],r11
   140009dbc:	call   0x140008ae0
   140009dc1:	mov    rcx,rax
   140009dc4:	xor    ebx,ebx
   140009dc6:	mov    r9d,ebx
   140009dc9:	cmp    rax,rbx
   140009dcc:	setne  r9b
   140009dd0:	cmp    r9d,ebx
   140009dd3:	jne    0x140009de0
   140009dd5:	mov    ecx,0x80004005
   140009dda:	call   0x14000677c
   140009ddf:	int3   
   140009de0:	mov    rax,QWORD PTR [rax]
   140009de3:	call   QWORD PTR [rax+0x18]
   140009de6:	add    rax,0x18
   140009dea:	mov    QWORD PTR [rsi+0x18],rax
   140009dee:	mov    DWORD PTR [rsi+0x10],r12d
   140009df2:	cmp    rdi,rbx
   140009df5:	je     0x140009e01
   140009df7:	mov    rcx,rdi
   140009dfa:	call   0x140015c00
   140009dff:	mov    ebx,eax
   140009e01:	mov    r8d,ebx
   140009e04:	mov    rdx,rdi
   140009e07:	lea    rcx,[rsi+0x18]
   140009e0b:	call   0x140007560
   140009e10:	nop
   140009e11:	mov    rax,rsi
   140009e14:	mov    rbx,QWORD PTR [rsp+0x58]
   140009e19:	mov    rbp,QWORD PTR [rsp+0x60]
   140009e1e:	add    rsp,0x30
   140009e22:	pop    r12
   140009e24:	pop    rdi
   140009e25:	pop    rsi
   140009e26:	ret    
   140009e27:	int3   
   140009e28:	mov    QWORD PTR [rsp+0x8],rbx
   140009e2d:	push   rdi
   140009e2e:	sub    rsp,0x20
   140009e32:	mov    edi,edx
   140009e34:	mov    rdx,QWORD PTR [rcx+0x18]
   140009e38:	lea    rax,[rip+0x2d381]        # 0x1400371c0
   140009e3f:	sub    rdx,0x18
   140009e43:	mov    QWORD PTR [rcx],rax
   140009e46:	or     eax,0xffffffff
   140009e49:	mov    rbx,rcx
   140009e4c:	lock xadd DWORD PTR [rdx+0x10],eax
   140009e51:	dec    eax
   140009e53:	test   eax,eax
   140009e55:	jg     0x140009e60
   140009e57:	mov    rcx,QWORD PTR [rdx]
   140009e5a:	mov    rax,QWORD PTR [rcx]
   140009e5d:	call   QWORD PTR [rax+0x8]
   140009e60:	test   dil,0x1
   140009e64:	je     0x140009e6e
   140009e66:	mov    rcx,rbx
   140009e69:	call   0x1400062d4
   140009e6e:	mov    rax,rbx
   140009e71:	mov    rbx,QWORD PTR [rsp+0x30]
   140009e76:	add    rsp,0x20
   140009e7a:	pop    rdi
   140009e7b:	ret    
   140009e7c:	rex push rdi
   140009e7e:	sub    rsp,0x30
   140009e82:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140009e8b:	mov    QWORD PTR [rsp+0x40],rbx
   140009e90:	mov    rbx,rdx
   140009e93:	mov    edi,ecx
   140009e95:	mov    ecx,0x20
   140009e9a:	call   0x140006290
   140009e9f:	mov    rcx,rax
   140009ea2:	mov    QWORD PTR [rsp+0x58],rax
   140009ea7:	xor    eax,eax
   140009ea9:	cmp    rcx,rax
   140009eac:	je     0x140009eb9
   140009eae:	mov    r8,rbx
   140009eb1:	mov    edx,edi
   140009eb3:	call   0x140009d84
   140009eb8:	nop
   140009eb9:	mov    QWORD PTR [rsp+0x50],rax
   140009ebe:	lea    rdx,[rip+0x3c03b]        # 0x140045f00
   140009ec5:	lea    rcx,[rsp+0x50]
   140009eca:	call   0x1400158a0
   140009ecf:	int3   
   140009ed0:	mov    QWORD PTR [rsp+0x8],rbx
   140009ed5:	push   rdi
   140009ed6:	sub    rsp,0x20
   140009eda:	mov    r10,r9
   140009edd:	test   rcx,rcx
   140009ee0:	jne    0x140009ee8
   140009ee2:	call   0x140006520
   140009ee7:	int3   
   140009ee8:	mov    rax,QWORD PTR [rsp+0x60]
   140009eed:	mov    ebx,0x1
   140009ef2:	test   rax,rax
   140009ef5:	je     0x140009f03
   140009ef7:	mov    QWORD PTR [rax],rcx
   140009efa:	mov    QWORD PTR [rax+0x8],r9
   140009efe:	jmp    0x14000a045
   140009f03:	mov    rax,QWORD PTR [rsp+0x58]
   140009f08:	cmp    rax,0x3f
   140009f0c:	ja     0x140009fb8
   140009f12:	je     0x140009f99
   140009f18:	sub    rax,0x39
   140009f1c:	je     0x140009f91
   140009f1e:	sub    rax,rbx
   140009f21:	je     0x140009f89
   140009f23:	sub    rax,rbx
   140009f26:	je     0x140009f81
   140009f28:	sub    rax,rbx
   140009f2b:	je     0x140009f79
   140009f2d:	sub    rax,rbx
   140009f30:	je     0x140009f5a
   140009f32:	cmp    rax,rbx
   140009f35:	jne    0x140009fd2
   140009f3b:	mov    rdx,QWORD PTR [rsp+0x50]
   140009f40:	test   rdx,rdx
   140009f43:	jne    0x140009f4b
   140009f45:	call   0x140006520
   140009f4a:	int3   
   140009f4b:	mov    r8,QWORD PTR [rdx]
   140009f4e:	mov    rdx,QWORD PTR [rdx+0x8]
   140009f52:	call   r10
   140009f55:	jmp    0x14000a043
   140009f5a:	mov    rdx,QWORD PTR [rsp+0x50]
   140009f5f:	test   rdx,rdx
   140009f62:	jne    0x140009f6a
   140009f64:	call   0x140006520
   140009f69:	int3   
   140009f6a:	mov    r8,QWORD PTR [rdx]
   140009f6d:	mov    rdx,QWORD PTR [rdx+0x8]
   140009f71:	call   r10
   140009f74:	jmp    0x14000a045
   140009f79:	call   r10
   140009f7c:	jmp    0x14000a043
   140009f81:	call   r10
   140009f84:	jmp    0x14000a045
   140009f89:	call   r10
   140009f8c:	jmp    0x14000a043
   140009f91:	call   r10
   140009f94:	jmp    0x14000a045
   140009f99:	mov    r8,QWORD PTR [rsp+0x50]
   140009f9e:	test   r8,r8
   140009fa1:	jne    0x140009fa9
   140009fa3:	call   0x140006520
   140009fa8:	int3   
   140009fa9:	mov    r9,QWORD PTR [r8]
   140009fac:	mov    r8,QWORD PTR [r8+0x8]
   140009fb0:	call   r10
   140009fb3:	jmp    0x14000a045
   140009fb8:	sub    rax,0x40
   140009fbc:	je     0x14000a029
   140009fbe:	sub    rax,rbx
   140009fc1:	je     0x14000a011
   140009fc3:	sub    rax,rbx
   140009fc6:	je     0x140009fea
   140009fc8:	sub    rax,rbx
   140009fcb:	je     0x140009fe0
   140009fcd:	cmp    rax,rbx
   140009fd0:	je     0x140009fd6
   140009fd2:	xor    eax,eax
   140009fd4:	jmp    0x14000a047
   140009fd6:	mov    rdx,QWORD PTR [rsp+0x50]
   140009fdb:	call   r10
   140009fde:	jmp    0x14000a043
   140009fe0:	mov    rdx,QWORD PTR [rsp+0x50]
   140009fe5:	call   r10
   140009fe8:	jmp    0x14000a045
   140009fea:	mov    rdi,QWORD PTR [rsp+0x50]
   140009fef:	test   rdi,rdi
   140009ff2:	jne    0x140009ffa
   140009ff4:	call   0x140006520
   140009ff9:	int3   
   140009ffa:	mov    r8d,edx
   140009ffd:	mov    rdx,rdi
   14000a000:	call   r10
   14000a003:	xor    eax,eax
   14000a005:	cmp    DWORD PTR [rdi+0x2c],eax
   14000a008:	sete   al
   14000a00b:	and    DWORD PTR [rdi+0x2c],0x0
   14000a00f:	jmp    0x14000a043
   14000a011:	mov    rdi,QWORD PTR [rsp+0x50]
   14000a016:	test   rdi,rdi
   14000a019:	jne    0x14000a021
   14000a01b:	call   0x140006520
   14000a020:	int3   
   14000a021:	mov    rdx,rdi
   14000a024:	call   r10
   14000a027:	jmp    0x14000a003
   14000a029:	mov    r8,QWORD PTR [rsp+0x50]
   14000a02e:	test   r8,r8
   14000a031:	jne    0x14000a039
   14000a033:	call   0x140006520
   14000a038:	int3   
   14000a039:	mov    r9,QWORD PTR [r8]
   14000a03c:	mov    r8,QWORD PTR [r8+0x8]
   14000a040:	call   r10
   14000a043:	mov    ebx,eax
   14000a045:	mov    eax,ebx
   14000a047:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a04c:	add    rsp,0x20
   14000a050:	pop    rdi
   14000a051:	ret    
   14000a052:	int3   
   14000a053:	int3   
   14000a054:	mov    QWORD PTR [rsp+0x8],rbx
   14000a059:	mov    QWORD PTR [rsp+0x10],rbp
   14000a05e:	mov    QWORD PTR [rsp+0x18],rsi
   14000a063:	push   rdi
   14000a064:	push   r12
   14000a066:	push   r13
   14000a068:	sub    rsp,0x40
   14000a06c:	mov    r12,r9
   14000a06f:	mov    ebx,r8d
   14000a072:	mov    r13d,edx
   14000a075:	mov    rsi,rcx
   14000a078:	cmp    r8d,0xfffffffe
   14000a07c:	jne    0x14000a0bb
   14000a07e:	call   0x140007df0
   14000a083:	cmp    QWORD PTR [rax+0x68],0x0
   14000a088:	jne    0x14000a090
   14000a08a:	call   0x140006520
   14000a08f:	int3   
   14000a090:	call   0x140007df0
   14000a095:	mov    r9,r12
   14000a098:	mov    r8d,r13d
   14000a09b:	mov    rcx,QWORD PTR [rax+0x68]
   14000a09f:	mov    rax,QWORD PTR [rsp+0x80]
   14000a0a7:	mov    rdx,rsi
   14000a0aa:	mov    r10,QWORD PTR [rcx]
   14000a0ad:	mov    QWORD PTR [rsp+0x20],rax
   14000a0b2:	call   QWORD PTR [r10+0x8]
   14000a0b6:	jmp    0x14000a18e
   14000a0bb:	cmp    ebx,0xfffffffd
   14000a0be:	jne    0x14000a146
   14000a0c4:	xor    edi,edi
   14000a0c6:	test   r9,r9
   14000a0c9:	jne    0x14000a0d1
   14000a0cb:	call   0x140006520
   14000a0d0:	int3   
   14000a0d1:	mov    rax,QWORD PTR [rcx]
   14000a0d4:	mov    rbp,QWORD PTR [r9+0x50]
   14000a0d8:	call   QWORD PTR [rax+0x58]
   14000a0db:	mov    rsi,rax
   14000a0de:	test   rax,rax
   14000a0e1:	je     0x14000a142
   14000a0e3:	test   edi,edi
   14000a0e5:	jne    0x14000a142
   14000a0e7:	mov    rbx,QWORD PTR [rsi+0x8]
   14000a0eb:	jmp    0x14000a133
   14000a0ed:	cmp    DWORD PTR [rbx+0xc],0x0
   14000a0f1:	je     0x14000a13a
   14000a0f3:	test   edi,edi
   14000a0f5:	jne    0x14000a13a
   14000a0f7:	cmp    r13d,ecx
   14000a0fa:	jne    0x14000a12f
   14000a0fc:	test   rbp,rbp
   14000a0ff:	jne    0x14000a108
   14000a101:	cmp    QWORD PTR [rbx],rbp
   14000a104:	je     0x14000a122
   14000a106:	jmp    0x14000a12f
   14000a108:	mov    rdx,QWORD PTR [rbx]
   14000a10b:	test   rdx,rdx
   14000a10e:	je     0x14000a12f
   14000a110:	mov    r8d,0x10
   14000a116:	mov    rcx,rbp
   14000a119:	call   0x140016410
   14000a11e:	test   eax,eax
   14000a120:	jne    0x14000a12f
   14000a122:	mov    eax,DWORD PTR [rbx+0xc]
   14000a125:	mov    edi,0x1
   14000a12a:	mov    DWORD PTR [r12+0x8],eax
   14000a12f:	add    rbx,0x10
   14000a133:	mov    ecx,DWORD PTR [rbx+0x8]
   14000a136:	test   ecx,ecx
   14000a138:	jne    0x14000a0ed
   14000a13a:	mov    rsi,QWORD PTR [rsi]
   14000a13d:	test   rsi,rsi
   14000a140:	jne    0x14000a0e3
   14000a142:	mov    eax,edi
   14000a144:	jmp    0x14000a18e
   14000a146:	cmp    ebx,0xffffffff
   14000a149:	je     0x14000a15b
   14000a14b:	mov    eax,ebx
   14000a14d:	movzx  ebx,bx
   14000a150:	shr    rax,0x10
   14000a154:	movzx  ebp,ax
   14000a157:	test   ebp,ebp
   14000a159:	jne    0x14000a160
   14000a15b:	mov    ebp,0x111
   14000a160:	mov    rax,QWORD PTR [rcx]
   14000a163:	call   QWORD PTR [rax+0x50]
   14000a166:	jmp    0x14000a183
   14000a168:	mov    rcx,QWORD PTR [rdi+0x8]
   14000a16c:	mov    r9d,r13d
   14000a16f:	mov    r8d,ebx
   14000a172:	mov    edx,ebp
   14000a174:	call   0x14000b8d0
   14000a179:	mov    r9,rax
   14000a17c:	test   rax,rax
   14000a17f:	jne    0x14000a1a7
   14000a181:	call   QWORD PTR [rdi]
   14000a183:	cmp    QWORD PTR [rax],0x0
   14000a187:	mov    rdi,rax
   14000a18a:	jne    0x14000a168
   14000a18c:	xor    eax,eax
   14000a18e:	mov    rbx,QWORD PTR [rsp+0x60]
   14000a193:	mov    rbp,QWORD PTR [rsp+0x68]
   14000a198:	mov    rsi,QWORD PTR [rsp+0x70]
   14000a19d:	add    rsp,0x40
   14000a1a1:	pop    r13
   14000a1a3:	pop    r12
   14000a1a5:	pop    rdi
   14000a1a6:	ret    
   14000a1a7:	mov    rax,QWORD PTR [rsp+0x80]
   14000a1af:	mov    r8d,ebx
   14000a1b2:	mov    edx,r13d
   14000a1b5:	mov    QWORD PTR [rsp+0x30],rax
   14000a1ba:	mov    rax,QWORD PTR [r9+0x10]
   14000a1be:	mov    r9,QWORD PTR [r9+0x18]
   14000a1c2:	mov    QWORD PTR [rsp+0x28],rax
   14000a1c7:	mov    rcx,rsi
   14000a1ca:	mov    QWORD PTR [rsp+0x20],r12
   14000a1cf:	call   0x140009ed0
   14000a1d4:	jmp    0x14000a18e
   14000a1d6:	int3   
   14000a1d7:	int3   
   14000a1d8:	mov    eax,0x80029c4a
   14000a1dd:	ret    
   14000a1de:	int3   
   14000a1df:	int3   
   14000a1e0:	lea    rax,[rip+0x2d1b1]        # 0x140037398
   14000a1e7:	ret    
   14000a1e8:	lea    rax,[rip+0x2d081]        # 0x140037270
   14000a1ef:	ret    
   14000a1f0:	lea    rax,[rip+0x2d0e1]        # 0x1400372d8
   14000a1f7:	ret    
   14000a1f8:	lea    rax,[rip+0x2d131]        # 0x140037330
   14000a1ff:	ret    
   14000a200:	lea    rax,[rip+0x2d149]        # 0x140037350
   14000a207:	ret    
   14000a208:	lea    rax,[rip+0x2d1c1]        # 0x1400373d0
   14000a20f:	mov    QWORD PTR [rcx],rax
   14000a212:	xor    eax,eax
   14000a214:	mov    DWORD PTR [rcx+0x30],eax
   14000a217:	mov    DWORD PTR [rcx+0xc],eax
   14000a21a:	mov    DWORD PTR [rcx+0x8],eax
   14000a21d:	mov    QWORD PTR [rcx+0x38],rax
   14000a221:	mov    QWORD PTR [rcx+0x18],rax
   14000a225:	mov    QWORD PTR [rcx+0x10],rax
   14000a229:	mov    QWORD PTR [rcx+0x20],rax
   14000a22d:	mov    DWORD PTR [rcx+0x2c],eax
   14000a230:	mov    DWORD PTR [rcx+0x28],eax
   14000a233:	mov    rax,rcx
   14000a236:	ret    
   14000a237:	int3   
   14000a238:	rex push rbx
   14000a23a:	sub    rsp,0x20
   14000a23e:	mov    rbx,rcx
   14000a241:	call   0x140007df0
   14000a246:	mov    ecx,0x1
   14000a24b:	mov    QWORD PTR [rbx+0x38],rax
   14000a24f:	xor    eax,eax
   14000a251:	mov    DWORD PTR [rbx+0x8],ecx
   14000a254:	mov    QWORD PTR [rbx+0x10],rax
   14000a258:	mov    QWORD PTR [rbx+0x18],rax
   14000a25c:	mov    QWORD PTR [rbx+0x20],rax
   14000a260:	mov    QWORD PTR [rbx+0x30],rax
   14000a264:	mov    DWORD PTR [rbx+0x28],ecx
   14000a267:	mov    rax,rbx
   14000a26a:	add    rsp,0x20
   14000a26e:	pop    rbx
   14000a26f:	ret    
   14000a270:	rex push rbx
   14000a272:	sub    rsp,0x20
   14000a276:	mov    rbx,rcx
   14000a279:	add    rcx,0x20
   14000a27d:	mov    rax,QWORD PTR [rcx]
   14000a280:	test   rax,rax
   14000a283:	je     0x14000a288
   14000a285:	call   QWORD PTR [rax+0x38]
   14000a288:	and    QWORD PTR [rbx+0x38],0x0
   14000a28d:	add    rsp,0x20
   14000a291:	pop    rbx
   14000a292:	ret    
   14000a293:	int3   
   14000a294:	sub    rsp,0x28
   14000a298:	call   0x140007df0
   14000a29d:	mov    edx,0x1
   14000a2a2:	mov    rcx,QWORD PTR [rax+0x8]
   14000a2a6:	mov    rax,QWORD PTR [rcx]
   14000a2a9:	add    rsp,0x28
   14000a2ad:	rex.W jmp QWORD PTR [rax+0x138]
   14000a2b4:	sub    rsp,0x28
   14000a2b8:	call   0x140007df0
   14000a2bd:	or     edx,0xffffffff
   14000a2c0:	mov    rcx,QWORD PTR [rax+0x8]
   14000a2c4:	mov    rax,QWORD PTR [rcx]
   14000a2c7:	add    rsp,0x28
   14000a2cb:	rex.W jmp QWORD PTR [rax+0x138]
   14000a2d2:	int3   
   14000a2d3:	int3   
   14000a2d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000a2d9:	mov    QWORD PTR [rsp+0x10],rsi
   14000a2de:	push   rdi
   14000a2df:	sub    rsp,0x20
   14000a2e3:	mov    rbx,rcx
   14000a2e6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a2ea:	mov    edi,edx
   14000a2ec:	test   rcx,rcx
   14000a2ef:	je     0x14000a327
   14000a2f1:	cmp    QWORD PTR [rbx+0x18],0x0
   14000a2f6:	jne    0x14000a380
   14000a2fc:	mov    edx,DWORD PTR [rbx+0xc]
   14000a2ff:	cmp    edx,DWORD PTR [rbx+0x30]
   14000a302:	jb     0x14000a30a
   14000a304:	call   0x140006520
   14000a309:	int3   
   14000a30a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a30e:	neg    edi
   14000a310:	sbb    r8d,r8d
   14000a313:	not    r8d
   14000a316:	and    r8d,0x3
   14000a31a:	bts    r8d,0xa
   14000a31f:	call   QWORD PTR [rip+0x2c44b]        # 0x140036770
   14000a325:	jmp    0x14000a379
   14000a327:	cmp    QWORD PTR [rbx+0x20],0x0
   14000a32c:	jne    0x14000a334
   14000a32e:	call   0x140006520
   14000a333:	int3   
   14000a334:	test   edx,edx
   14000a336:	jne    0x14000a36e
   14000a338:	mov    rsi,QWORD PTR [rbx+0x20]
   14000a33c:	call   QWORD PTR [rip+0x2c41e]        # 0x140036760
   14000a342:	cmp    rax,QWORD PTR [rsi+0x40]
   14000a346:	jne    0x14000a36e
   14000a348:	mov    rcx,QWORD PTR [rsi+0x40]
   14000a34c:	call   QWORD PTR [rip+0x2c3ae]        # 0x140036700
   14000a352:	mov    rcx,rax
   14000a355:	call   0x14000db1c
   14000a35a:	xor    r9d,r9d
   14000a35d:	xor    r8d,r8d
   14000a360:	mov    rcx,QWORD PTR [rax+0x40]
   14000a364:	lea    edx,[r9+0x28]
   14000a368:	call   QWORD PTR [rip+0x2c3a2]        # 0x140036710
   14000a36e:	mov    rcx,QWORD PTR [rbx+0x20]
   14000a372:	mov    edx,edi
   14000a374:	call   0x140011860
   14000a379:	mov    DWORD PTR [rbx+0x28],0x1
   14000a380:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a385:	mov    rsi,QWORD PTR [rsp+0x38]
   14000a38a:	add    rsp,0x20
   14000a38e:	pop    rdi
   14000a38f:	ret    
   14000a390:	mov    QWORD PTR [rsp+0x8],rbx
   14000a395:	push   rdi
   14000a396:	sub    rsp,0x20
   14000a39a:	mov    rbx,rcx
   14000a39d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a3a1:	movsxd rdi,edx
   14000a3a4:	test   rcx,rcx
   14000a3a7:	je     0x14000a3d8
   14000a3a9:	cmp    QWORD PTR [rbx+0x18],0x0
   14000a3ae:	jne    0x14000a41c
   14000a3b0:	mov    edx,DWORD PTR [rbx+0xc]
   14000a3b3:	cmp    edx,DWORD PTR [rbx+0x30]
   14000a3b6:	jb     0x14000a3be
   14000a3b8:	call   0x140006520
   14000a3bd:	int3   
   14000a3be:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a3c2:	neg    edi
   14000a3c4:	sbb    r8d,r8d
   14000a3c7:	and    r8d,0x8
   14000a3cb:	bts    r8d,0xa
   14000a3d0:	call   QWORD PTR [rip+0x2c3a2]        # 0x140036778
   14000a3d6:	jmp    0x14000a41c
   14000a3d8:	mov    rcx,QWORD PTR [rbx+0x20]
   14000a3dc:	test   rcx,rcx
   14000a3df:	jne    0x14000a3e7
   14000a3e1:	call   0x140006520
   14000a3e6:	int3   
   14000a3e7:	mov    rcx,QWORD PTR [rcx+0x40]
   14000a3eb:	xor    r9d,r9d
   14000a3ee:	xor    r8d,r8d
   14000a3f1:	mov    edx,0x87
   14000a3f6:	call   QWORD PTR [rip+0x2c314]        # 0x140036710
   14000a3fc:	bt     rax,0xd
   14000a401:	jae    0x14000a41c
   14000a403:	mov    rcx,QWORD PTR [rbx+0x20]
   14000a407:	mov    r8,rdi
   14000a40a:	xor    r9d,r9d
   14000a40d:	mov    rcx,QWORD PTR [rcx+0x40]
   14000a411:	mov    edx,0xf1
   14000a416:	call   QWORD PTR [rip+0x2c2f4]        # 0x140036710
   14000a41c:	mov    rbx,QWORD PTR [rsp+0x30]
   14000a421:	add    rsp,0x20
   14000a425:	pop    rdi
   14000a426:	ret    
   14000a427:	int3   
   14000a428:	mov    QWORD PTR [rsp+0x8],rbx
   14000a42d:	push   rdi
   14000a42e:	sub    rsp,0x30
   14000a432:	mov    rdi,rdx
   14000a435:	mov    rbx,rcx
   14000a438:	test   rdx,rdx
   14000a43b:	jne    0x14000a443
   14000a43d:	call   0x140006520
   14000a442:	int3   
   14000a443:	mov    rcx,QWORD PTR [rcx+0x10]
   14000a447:	test   rcx,rcx
   14000a44a:	je     0x14000a499
   14000a44c:	cmp    QWORD PTR [rbx+0x18],0x0
   14000a451:	jne    0x14000a4b1
   14000a453:	mov    edx,DWORD PTR [rbx+0xc]
   14000a456:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a45a:	mov    r8d,0x400
   14000a460:	call   QWORD PTR [rip+0x2c2d2]        # 0x140036738
   14000a466:	mov    edx,DWORD PTR [rbx+0xc]
   14000a469:	and    eax,0xfffff6fb
   14000a46e:	cmp    edx,DWORD PTR [rbx+0x30]
   14000a471:	jb     0x14000a479
   14000a473:	call   0x140006520
   14000a478:	int3   
   14000a479:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a47d:	mov    r9d,DWORD PTR [rbx+0x8]
   14000a481:	bts    eax,0xa
   14000a485:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a489:	mov    r8d,eax
   14000a48c:	mov    QWORD PTR [rsp+0x20],rdi
   14000a491:	call   QWORD PTR [rip+0x2c2d1]        # 0x140036768
   14000a497:	jmp    0x14000a4b1
   14000a499:	mov    rcx,QWORD PTR [rbx+0x20]
   14000a49d:	test   rcx,rcx
   14000a4a0:	jne    0x14000a4a8
   14000a4a2:	call   0x140006520
   14000a4a7:	int3   
   14000a4a8:	mov    rcx,QWORD PTR [rcx+0x40]
   14000a4ac:	call   0x140011970
   14000a4b1:	mov    rbx,QWORD PTR [rsp+0x40]
   14000a4b6:	add    rsp,0x30
   14000a4ba:	pop    rdi
   14000a4bb:	ret    
   14000a4bc:	mov    rax,rsp
   14000a4bf:	mov    QWORD PTR [rax+0x8],rbx
   14000a4c3:	mov    QWORD PTR [rax+0x10],rbp
   14000a4c7:	mov    QWORD PTR [rax+0x18],rsi
   14000a4cb:	mov    QWORD PTR [rax+0x20],rdi
   14000a4cf:	push   r12
   14000a4d1:	sub    rsp,0xc0
   14000a4d8:	mov    rax,QWORD PTR [rip+0x3e8e1]        # 0x140048dc0
   14000a4df:	xor    rax,rsp
   14000a4e2:	mov    QWORD PTR [rsp+0xb0],rax
   14000a4ea:	call   QWORD PTR [rip+0x2c260]        # 0x140036750
   14000a4f0:	movsx  ebp,ax
   14000a4f3:	shr    eax,0x10
   14000a4f6:	cmp    ebp,0x4
   14000a4f9:	movsx  esi,ax
   14000a4fc:	jle    0x14000a609
   14000a502:	mov    edi,0x5
   14000a507:	cmp    esi,edi
   14000a509:	jle    0x14000a609
   14000a50f:	lea    r8d,[rdi+0x1b]
   14000a513:	lea    rcx,[rsp+0x30]
   14000a518:	cmp    ebp,r8d
   14000a51b:	cmovg  ebp,r8d
   14000a51f:	lea    eax,[rbp-0x4]
   14000a522:	lea    ebx,[rbp+0xf]
   14000a525:	cdq    
   14000a526:	sar    ebx,0x4
   14000a529:	sub    eax,edx
   14000a52b:	mov    r12d,ebx
   14000a52e:	mov    edx,0xff
   14000a533:	sar    eax,1
   14000a535:	shl    r12d,0x4
   14000a539:	add    r12d,eax
   14000a53c:	lea    eax,[rdi+0x7]
   14000a53f:	sub    r12d,ebp
   14000a542:	cmp    r12d,eax
   14000a545:	cmovg  r12d,eax
   14000a549:	cmp    esi,r8d
   14000a54c:	cmovg  esi,r8d
   14000a550:	lea    r8d,[rdi+0x7b]
   14000a554:	call   0x140015b00
   14000a559:	movsxd r11,ebx
   14000a55c:	lea    eax,[rsi-0x6]
   14000a55f:	sar    eax,1
   14000a561:	lea    r10,[rip+0x2cdf8]        # 0x140037360
   14000a568:	movsxd rcx,eax
   14000a56b:	imul   rcx,r11
   14000a56f:	add    r11,r11
   14000a572:	lea    rdx,[rsp+rcx*2+0x30]
   14000a577:	movzx  r9d,BYTE PTR [r10]
   14000a57b:	mov    ecx,r12d
   14000a57e:	inc    r10
   14000a581:	shl    r9w,cl
   14000a585:	not    r9w
   14000a589:	movzx  eax,r9w
   14000a58d:	mov    BYTE PTR [rdx+0x1],r9b
   14000a591:	shr    ax,0x8
   14000a595:	mov    BYTE PTR [rdx],al
   14000a597:	add    rdx,r11
   14000a59a:	sub    rdi,0x1
   14000a59e:	jne    0x14000a577
   14000a5a0:	lea    r9d,[rdi+0x1]
   14000a5a4:	lea    rax,[rsp+0x30]
   14000a5a9:	mov    edx,esi
   14000a5ab:	mov    r8d,r9d
   14000a5ae:	mov    ecx,ebp
   14000a5b0:	mov    QWORD PTR [rsp+0x20],rax
   14000a5b5:	call   QWORD PTR [rip+0x2bb15]        # 0x1400360d0
   14000a5bb:	mov    QWORD PTR [rip+0x40a5e],rax        # 0x14004b020
   14000a5c2:	test   rax,rax
   14000a5c5:	jne    0x14000a5db
   14000a5c7:	mov    edx,0x7fe3
   14000a5cc:	xor    ecx,ecx
   14000a5ce:	call   QWORD PTR [rip+0x2c184]        # 0x140036758
   14000a5d4:	mov    QWORD PTR [rip+0x40a45],rax        # 0x14004b020
   14000a5db:	mov    rcx,QWORD PTR [rsp+0xb0]
   14000a5e3:	xor    rcx,rsp
   14000a5e6:	call   0x1400144f0
   14000a5eb:	lea    r11,[rsp+0xc0]
   14000a5f3:	mov    rbx,QWORD PTR [r11+0x10]
   14000a5f7:	mov    rbp,QWORD PTR [r11+0x18]
   14000a5fb:	mov    rsi,QWORD PTR [r11+0x20]
   14000a5ff:	mov    rdi,QWORD PTR [r11+0x28]
   14000a603:	mov    rsp,r11
   14000a606:	pop    r12
   14000a608:	ret    
   14000a609:	call   0x140006520
   14000a60e:	int3   
   14000a60f:	int3   
   14000a610:	rex push rbx
   14000a612:	sub    rsp,0x30
   14000a616:	mov    r8,QWORD PTR [rcx]
   14000a619:	mov    eax,edx
   14000a61b:	xor    edx,edx
   14000a61d:	test   eax,eax
   14000a61f:	mov    rbx,rcx
   14000a622:	setne  dl
   14000a625:	call   QWORD PTR [r8+0x8]
   14000a629:	cmp    QWORD PTR [rbx+0x10],0x0
   14000a62e:	je     0x14000a681
   14000a630:	cmp    QWORD PTR [rbx+0x18],0x0
   14000a635:	jne    0x14000a681
   14000a637:	mov    eax,DWORD PTR [rbx+0x30]
   14000a63a:	cmp    DWORD PTR [rbx+0xc],eax
   14000a63d:	jb     0x14000a645
   14000a63f:	call   0x140006520
   14000a644:	int3   
   14000a645:	mov    rax,QWORD PTR [rip+0x409d4]        # 0x14004b020
   14000a64c:	test   rax,rax
   14000a64f:	jne    0x14000a662
   14000a651:	call   0x14000a4bc
   14000a656:	mov    rax,QWORD PTR [rip+0x409c3]        # 0x14004b020
   14000a65d:	test   rax,rax
   14000a660:	je     0x14000a681
   14000a662:	mov    rcx,QWORD PTR [rbx+0x10]
   14000a666:	mov    edx,DWORD PTR [rbx+0xc]
   14000a669:	xor    r9d,r9d
   14000a66c:	mov    rcx,QWORD PTR [rcx+0x8]
   14000a670:	mov    r8d,0x400
   14000a676:	mov    QWORD PTR [rsp+0x20],rax
   14000a67b:	call   QWORD PTR [rip+0x2c0c7]        # 0x140036748
   14000a681:	add    rsp,0x30
   14000a685:	pop    rbx
   14000a686:	ret    
   14000a687:	int3   
   14000a688:	mov    QWORD PTR [rsp+0x8],rcx
   14000a68d:	push   rsi
   14000a68e:	push   rdi
   14000a68f:	push   r12
   14000a691:	sub    rsp,0x30
   14000a695:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a69e:	mov    QWORD PTR [rsp+0x58],rbx
   14000a6a3:	mov    QWORD PTR [rsp+0x60],rbp
   14000a6a8:	mov    rdi,r9
   14000a6ab:	mov    rsi,r8
   14000a6ae:	mov    rbp,rdx
   14000a6b1:	mov    rbx,rcx
   14000a6b4:	lea    rax,[rip+0x2cd65]        # 0x140037420
   14000a6bb:	mov    QWORD PTR [rcx],rax
   14000a6be:	add    rcx,0x8
   14000a6c2:	mov    r8d,0x40
   14000a6c8:	mov    edx,DWORD PTR [rdx+0x8]
   14000a6cb:	call   0x140012190
   14000a6d0:	nop
   14000a6d1:	lea    rcx,[rbx+0x30]
   14000a6d5:	mov    edx,0xa
   14000a6da:	call   0x140008980
   14000a6df:	nop
   14000a6e0:	mov    edx,0x4
   14000a6e5:	lea    rcx,[rbx+0x68]
   14000a6e9:	call   0x140008980
   14000a6ee:	nop
   14000a6ef:	xor    eax,eax
   14000a6f1:	test   rsi,rsi
   14000a6f4:	setne  al
   14000a6f7:	test   eax,eax
   14000a6f9:	jne    0x14000a701
   14000a6fb:	call   0x140006520
   14000a700:	int3   
   14000a701:	xor    eax,eax
   14000a703:	test   rdi,rdi
   14000a706:	setne  al
   14000a709:	test   eax,eax
   14000a70b:	jne    0x14000a713
   14000a70d:	call   0x140006520
   14000a712:	int3   
   14000a713:	xor    r8d,r8d
   14000a716:	lea    edx,[r8+0x7]
   14000a71a:	lea    rcx,[rbx+0x68]
   14000a71e:	call   0x1400086f8
   14000a723:	mov    QWORD PTR [rbx+0xa0],rbp
   14000a72a:	mov    QWORD PTR [rbx+0x20],rsi
   14000a72e:	mov    QWORD PTR [rbx+0x28],rdi
   14000a732:	mov    rax,QWORD PTR [rsp+0x70]
   14000a737:	mov    QWORD PTR [rbx+0xa8],rax
   14000a73e:	mov    eax,DWORD PTR [rsp+0x78]
   14000a742:	mov    DWORD PTR [rbx+0xb0],eax
   14000a748:	mov    rax,rbx
   14000a74b:	mov    rbx,QWORD PTR [rsp+0x58]
   14000a750:	mov    rbp,QWORD PTR [rsp+0x60]
   14000a755:	add    rsp,0x30
   14000a759:	pop    r12
   14000a75b:	pop    rdi
   14000a75c:	pop    rsi
   14000a75d:	ret    
   14000a75e:	int3   
   14000a75f:	int3   
   14000a760:	rex push rdi
   14000a762:	push   r12
   14000a764:	push   r13
   14000a766:	sub    rsp,0x30
   14000a76a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a773:	mov    QWORD PTR [rsp+0x50],rbx
   14000a778:	mov    QWORD PTR [rsp+0x60],rsi
   14000a77d:	mov    rbx,rdx
   14000a780:	mov    rsi,rcx
   14000a783:	test   rdx,rdx
   14000a786:	jne    0x14000a78f
   14000a788:	xor    eax,eax
   14000a78a:	jmp    0x14000a830
   14000a78f:	add    rcx,0x30
   14000a793:	call   0x1400087ec
   14000a798:	test   rax,rax
   14000a79b:	jne    0x14000a830
   14000a7a1:	mov    rdx,rbx
   14000a7a4:	lea    rcx,[rsi+0x68]
   14000a7a8:	call   0x1400087ec
   14000a7ad:	test   rax,rax
   14000a7b0:	je     0x14000a7cd
   14000a7b2:	mov    rcx,QWORD PTR [rsi+0xa8]
   14000a7b9:	mov    QWORD PTR [rax+rcx*1],rbx
   14000a7bd:	cmp    DWORD PTR [rsi+0xb0],0x2
   14000a7c4:	jne    0x14000a830
   14000a7c6:	mov    QWORD PTR [rax+rcx*1+0x8],rbx
   14000a7cb:	jmp    0x14000a830
   14000a7cd:	lea    rcx,[rip+0x72d0]        # 0x140011aa4
   14000a7d4:	call   0x140006280
   14000a7d9:	mov    r12,rax
   14000a7dc:	mov    QWORD PTR [rsp+0x58],rax
   14000a7e1:	lea    rcx,[rsi+0x8]
   14000a7e5:	call   0x1400121e8
   14000a7ea:	mov    rdi,rax
   14000a7ed:	test   rax,rax
   14000a7f0:	jne    0x14000a7f7
   14000a7f2:	call   0x1400064d8
   14000a7f7:	mov    rcx,rax
   14000a7fa:	call   QWORD PTR [rsi+0x20]
   14000a7fd:	mov    rdx,rbx
   14000a800:	lea    rcx,[rsi+0x68]
   14000a804:	call   0x140008a34
   14000a809:	mov    QWORD PTR [rax],rdi
   14000a80c:	mov    rcx,r12
   14000a80f:	call   0x140006280
   14000a814:	mov    r11,QWORD PTR [rsi+0xa8]
   14000a81b:	mov    QWORD PTR [rdi+r11*1],rbx
   14000a81f:	cmp    DWORD PTR [rsi+0xb0],0x2
   14000a826:	jne    0x14000a82d
   14000a828:	mov    QWORD PTR [rdi+r11*1+0x8],rbx
   14000a82d:	mov    rax,rdi
   14000a830:	mov    rbx,QWORD PTR [rsp+0x50]
   14000a835:	mov    rsi,QWORD PTR [rsp+0x60]
   14000a83a:	add    rsp,0x30
   14000a83e:	pop    r13
   14000a840:	pop    r12
   14000a842:	pop    rdi
   14000a843:	ret    
   14000a844:	test   rcx,rcx
   14000a847:	je     0x14000a8d2
   14000a84d:	mov    QWORD PTR [rsp+0x20],rbx
   14000a852:	push   rdi
   14000a853:	sub    rsp,0x20
   14000a857:	mov    rax,QWORD PTR [rcx+0x80]
   14000a85e:	mov    rbx,rcx
   14000a861:	neg    rax
   14000a864:	sbb    rdx,rdx
   14000a867:	mov    QWORD PTR [rsp+0x38],rdx
   14000a86c:	je     0x14000a8b6
   14000a86e:	lea    r9,[rsp+0x30]
   14000a873:	lea    r8,[rsp+0x40]
   14000a878:	lea    rdx,[rsp+0x38]
   14000a87d:	lea    rcx,[rbx+0x68]
   14000a881:	call   0x1400088c8
   14000a886:	mov    r11,QWORD PTR [rbx+0xa8]
   14000a88d:	mov    rax,QWORD PTR [rsp+0x30]
   14000a892:	and    QWORD PTR [rax+r11*1],0x0
   14000a897:	cmp    DWORD PTR [rbx+0xb0],0x2
   14000a89e:	jne    0x14000a8a6
   14000a8a0:	and    QWORD PTR [rax+r11*1+0x8],0x0
   14000a8a6:	mov    rcx,QWORD PTR [rsp+0x30]
   14000a8ab:	call   QWORD PTR [rbx+0x28]
   14000a8ae:	cmp    QWORD PTR [rsp+0x38],0x0
   14000a8b4:	jne    0x14000a86e
   14000a8b6:	lea    rcx,[rbx+0x68]
   14000a8ba:	call   0x140008778
   14000a8bf:	lea    rcx,[rbx+0x8]
   14000a8c3:	call   0x1400121bc
   14000a8c8:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a8cd:	add    rsp,0x20
   14000a8d1:	pop    rdi
   14000a8d2:	ret    
   14000a8d3:	int3   
   14000a8d4:	mov    QWORD PTR [rsp+0x8],rcx
   14000a8d9:	push   rdi
   14000a8da:	sub    rsp,0x30
   14000a8de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000a8e7:	mov    QWORD PTR [rsp+0x48],rbx
   14000a8ec:	mov    ebx,edx
   14000a8ee:	mov    rdi,rcx
   14000a8f1:	lea    rax,[rip+0x2cb28]        # 0x140037420
   14000a8f8:	mov    QWORD PTR [rcx],rax
   14000a8fb:	call   0x14000a844
   14000a900:	nop
   14000a901:	lea    rcx,[rdi+0x68]
   14000a905:	call   0x1400089b8
   14000a90a:	nop
   14000a90b:	lea    rcx,[rdi+0x30]
   14000a90f:	call   0x1400089b8
   14000a914:	nop
   14000a915:	lea    rcx,[rdi+0x8]
   14000a919:	call   0x1400121e0
   14000a91e:	test   bl,0x1
   14000a921:	je     0x14000a92b
   14000a923:	mov    rcx,rdi
   14000a926:	call   0x1400062d4
   14000a92b:	mov    rax,rdi
   14000a92e:	mov    rbx,QWORD PTR [rsp+0x48]
   14000a933:	add    rsp,0x30
   14000a937:	pop    rdi
   14000a938:	ret    
   14000a939:	int3   
   14000a93a:	int3   
   14000a93b:	int3   
   14000a93c:	sub    rsp,0xd8
   14000a943:	mov    rax,QWORD PTR [rip+0x3e476]        # 0x140048dc0
   14000a94a:	xor    rax,rsp
   14000a94d:	mov    QWORD PTR [rsp+0xc0],rax
   14000a955:	lea    rcx,[rsp+0x24]
   14000a95a:	xor    edx,edx
   14000a95c:	mov    r8d,0x90
   14000a962:	call   0x140015b00
   14000a967:	lea    rcx,[rsp+0x20]
   14000a96c:	mov    DWORD PTR [rsp+0x20],0x94
   14000a974:	call   QWORD PTR [rip+0x2bb0e]        # 0x140036488
   14000a97a:	xor    eax,eax
   14000a97c:	cmp    DWORD PTR [rsp+0x30],0x2
   14000a981:	sete   al
   14000a984:	mov    rcx,QWORD PTR [rsp+0xc0]
   14000a98c:	xor    rcx,rsp
   14000a98f:	call   0x1400144f0
   14000a994:	add    rsp,0xd8
   14000a99b:	ret    
   14000a99c:	mov    QWORD PTR [rsp+0x8],rbx
   14000a9a1:	push   rdi
   14000a9a2:	sub    rsp,0x20
   14000a9a6:	xor    ebx,ebx
   14000a9a8:	cmp    DWORD PTR [rip+0x436ca],ebx        # 0x14004e078
   14000a9ae:	je     0x14000a9bf
   14000a9b0:	cmp    QWORD PTR [rip+0x436a9],rbx        # 0x14004e060
   14000a9b7:	setne  bl
   14000a9ba:	jmp    0x14000aaf1
   14000a9bf:	call   0x14000a93c
   14000a9c4:	lea    rcx,[rip+0x2cc19]        # 0x1400375e4
   14000a9cb:	mov    DWORD PTR [rip+0x436ab],eax        # 0x14004e07c
   14000a9d1:	call   QWORD PTR [rip+0x2bac9]        # 0x1400364a0
   14000a9d7:	mov    rdi,rax
   14000a9da:	cmp    rax,rbx
   14000a9dd:	je     0x14000aab6
   14000a9e3:	lea    rdx,[rip+0x2cbe6]        # 0x1400375d0
   14000a9ea:	mov    rcx,rax
   14000a9ed:	call   QWORD PTR [rip+0x2bab5]        # 0x1400364a8
   14000a9f3:	mov    QWORD PTR [rip+0x43646],rax        # 0x14004e040
   14000a9fa:	cmp    rax,rbx
   14000a9fd:	je     0x14000aab6
   14000aa03:	lea    rdx,[rip+0x2cbae]        # 0x1400375b8
   14000aa0a:	mov    rcx,rdi
   14000aa0d:	call   QWORD PTR [rip+0x2ba95]        # 0x1400364a8
   14000aa13:	mov    QWORD PTR [rip+0x4362e],rax        # 0x14004e048
   14000aa1a:	cmp    rax,rbx
   14000aa1d:	je     0x14000aab6
   14000aa23:	lea    rdx,[rip+0x2cb7e]        # 0x1400375a8
   14000aa2a:	mov    rcx,rdi
   14000aa2d:	call   QWORD PTR [rip+0x2ba75]        # 0x1400364a8
   14000aa33:	mov    QWORD PTR [rip+0x43616],rax        # 0x14004e050
   14000aa3a:	cmp    rax,rbx
   14000aa3d:	je     0x14000aab6
   14000aa3f:	lea    rdx,[rip+0x2cb4a]        # 0x140037590
   14000aa46:	mov    rcx,rdi
   14000aa49:	call   QWORD PTR [rip+0x2ba59]        # 0x1400364a8
   14000aa4f:	mov    QWORD PTR [rip+0x43602],rax        # 0x14004e058
   14000aa56:	cmp    rax,rbx
   14000aa59:	je     0x14000aab6
   14000aa5b:	lea    rdx,[rip+0x2cb16]        # 0x140037578
   14000aa62:	mov    rcx,rdi
   14000aa65:	call   QWORD PTR [rip+0x2ba3d]        # 0x1400364a8
   14000aa6b:	mov    QWORD PTR [rip+0x435f6],rax        # 0x14004e068
   14000aa72:	cmp    rax,rbx
   14000aa75:	je     0x14000aab6
   14000aa77:	lea    rdx,[rip+0x2caea]        # 0x140037568
   14000aa7e:	mov    rcx,rdi
   14000aa81:	call   QWORD PTR [rip+0x2ba21]        # 0x1400364a8
   14000aa87:	mov    QWORD PTR [rip+0x435d2],rax        # 0x14004e060
   14000aa8e:	cmp    rax,rbx
   14000aa91:	je     0x14000aab6
   14000aa93:	lea    rdx,[rip+0x2cab6]        # 0x140037550
   14000aa9a:	mov    rcx,rdi
   14000aa9d:	call   QWORD PTR [rip+0x2ba05]        # 0x1400364a8
   14000aaa3:	mov    QWORD PTR [rip+0x435c6],rax        # 0x14004e070
   14000aaaa:	cmp    rax,rbx
   14000aaad:	je     0x14000aab6
   14000aaaf:	mov    ebx,0x1
   14000aab4:	jmp    0x14000aae7
   14000aab6:	mov    QWORD PTR [rip+0x43583],rbx        # 0x14004e040
   14000aabd:	mov    QWORD PTR [rip+0x43584],rbx        # 0x14004e048
   14000aac4:	mov    QWORD PTR [rip+0x43585],rbx        # 0x14004e050
   14000aacb:	mov    QWORD PTR [rip+0x43586],rbx        # 0x14004e058
   14000aad2:	mov    QWORD PTR [rip+0x43587],rbx        # 0x14004e060
   14000aad9:	mov    QWORD PTR [rip+0x43588],rbx        # 0x14004e068
   14000aae0:	mov    QWORD PTR [rip+0x43589],rbx        # 0x14004e070
   14000aae7:	mov    DWORD PTR [rip+0x43587],0x1        # 0x14004e078
   14000aaf1:	mov    eax,ebx
   14000aaf3:	mov    rbx,QWORD PTR [rsp+0x30]
   14000aaf8:	add    rsp,0x20
   14000aafc:	pop    rdi
   14000aafd:	ret    
   14000aafe:	int3   
   14000aaff:	int3   
   14000ab00:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab05:	push   rdi
   14000ab06:	sub    rsp,0x20
   14000ab0a:	mov    edi,edx
   14000ab0c:	mov    rbx,rcx
   14000ab0f:	call   0x14000a99c
   14000ab14:	test   eax,eax
   14000ab16:	je     0x14000ab25
   14000ab18:	mov    edx,edi
   14000ab1a:	mov    rcx,rbx
   14000ab1d:	call   QWORD PTR [rip+0x4352d]        # 0x14004e050
   14000ab23:	jmp    0x14000ab61
   14000ab25:	test   dil,0x3
   14000ab29:	jne    0x14000ab57
   14000ab2b:	cmp    DWORD PTR [rbx+0x8],0x0
   14000ab2f:	jle    0x14000ab53
   14000ab31:	cmp    DWORD PTR [rbx+0xc],0x0
   14000ab35:	jle    0x14000ab53
   14000ab37:	xor    ecx,ecx
   14000ab39:	call   QWORD PTR [rip+0x2bc51]        # 0x140036790
   14000ab3f:	cmp    DWORD PTR [rbx],eax
   14000ab41:	jge    0x14000ab53
   14000ab43:	mov    ecx,0x1
   14000ab48:	call   QWORD PTR [rip+0x2bc42]        # 0x140036790
   14000ab4e:	cmp    DWORD PTR [rbx+0x4],eax
   14000ab51:	jl     0x14000ab57
   14000ab53:	xor    eax,eax
   14000ab55:	jmp    0x14000ab61
   14000ab57:	movabs rax,0x12340042
   14000ab61:	mov    rbx,QWORD PTR [rsp+0x30]
   14000ab66:	add    rsp,0x20
   14000ab6a:	pop    rdi
   14000ab6b:	ret    
   14000ab6c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ab71:	push   rdi
   14000ab72:	sub    rsp,0x50
   14000ab76:	mov    ebx,edx
   14000ab78:	mov    rdi,rcx
   14000ab7b:	call   0x14000a99c
   14000ab80:	test   eax,eax
   14000ab82:	je     0x14000ab91
   14000ab84:	mov    edx,ebx
   14000ab86:	mov    rcx,rdi
   14000ab89:	call   QWORD PTR [rip+0x434b9]        # 0x14004e048
   14000ab8f:	jmp    0x14000abde
   14000ab91:	test   bl,0x3
   14000ab94:	je     0x14000aba2
   14000ab96:	movabs rax,0x12340042
   14000aba0:	jmp    0x14000abde
   14000aba2:	mov    rcx,rdi
   14000aba5:	call   QWORD PTR [rip+0x2bb2d]        # 0x1400366d8
   14000abab:	mov    rcx,rdi
   14000abae:	test   eax,eax
   14000abb0:	je     0x14000abbf
   14000abb2:	lea    rdx,[rsp+0x20]
   14000abb7:	call   QWORD PTR [rip+0x2bb23]        # 0x1400366e0
   14000abbd:	jmp    0x14000abca
   14000abbf:	lea    rdx,[rsp+0x3c]
   14000abc4:	call   QWORD PTR [rip+0x2bb1e]        # 0x1400366e8
   14000abca:	test   eax,eax
   14000abcc:	je     0x14000abdc
   14000abce:	lea    rcx,[rsp+0x3c]
   14000abd3:	mov    edx,ebx
   14000abd5:	call   0x14000ab00
   14000abda:	jmp    0x14000abde
   14000abdc:	xor    eax,eax
   14000abde:	mov    rbx,QWORD PTR [rsp+0x60]
   14000abe3:	add    rsp,0x50
   14000abe7:	pop    rdi
   14000abe8:	ret    
   14000abe9:	int3   
   14000abea:	int3   
   14000abeb:	int3   
   14000abec:	mov    QWORD PTR [rsp+0x8],rbx
   14000abf1:	push   rdi
   14000abf2:	sub    rsp,0x30
   14000abf6:	mov    rbx,rdx
   14000abf9:	mov    rdi,rcx
   14000abfc:	call   0x14000a99c
   14000ac01:	test   eax,eax
   14000ac03:	je     0x14000ac13
   14000ac05:	mov    rdx,rbx
   14000ac08:	mov    rcx,rdi
   14000ac0b:	call   QWORD PTR [rip+0x4344f]        # 0x14004e060
   14000ac11:	jmp    0x14000ac90
   14000ac13:	cmp    rdi,0x12340042
   14000ac1a:	jne    0x14000ac8e
   14000ac1c:	test   rbx,rbx
   14000ac1f:	je     0x14000ac8e
   14000ac21:	cmp    DWORD PTR [rbx],0x28
   14000ac24:	jb     0x14000ac8e
   14000ac26:	xor    edx,edx
   14000ac28:	lea    r8,[rsp+0x20]
   14000ac2d:	xor    r9d,r9d
   14000ac30:	lea    ecx,[rdx+0x30]
   14000ac33:	call   QWORD PTR [rip+0x2ba97]        # 0x1400366d0
   14000ac39:	test   eax,eax
   14000ac3b:	je     0x14000ac8e
   14000ac3d:	and    DWORD PTR [rbx+0x4],0x0
   14000ac41:	and    DWORD PTR [rbx+0x8],0x0
   14000ac45:	xor    ecx,ecx
   14000ac47:	call   QWORD PTR [rip+0x2bb43]        # 0x140036790
   14000ac4d:	mov    edi,0x1
   14000ac52:	mov    ecx,edi
   14000ac54:	mov    DWORD PTR [rbx+0xc],eax
   14000ac57:	call   QWORD PTR [rip+0x2bb33]        # 0x140036790
   14000ac5d:	cmp    DWORD PTR [rbx],0x48
   14000ac60:	mov    DWORD PTR [rbx+0x24],edi
   14000ac63:	movdqu xmm0,XMMWORD PTR [rsp+0x20]
   14000ac69:	movdqu XMMWORD PTR [rbx+0x14],xmm0
   14000ac6e:	mov    DWORD PTR [rbx+0x10],eax
   14000ac71:	jb     0x14000ac8a
   14000ac73:	lea    rcx,[rbx+0x28]
   14000ac77:	lea    r9d,[rdi+0x1e]
   14000ac7b:	lea    r8,[rip+0x2c336]        # 0x140036fb8
   14000ac82:	lea    edx,[rdi+0x1f]
   14000ac85:	call   0x140016c08
   14000ac8a:	mov    eax,edi
   14000ac8c:	jmp    0x14000ac90
   14000ac8e:	xor    eax,eax
   14000ac90:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ac95:	add    rsp,0x30
   14000ac99:	pop    rdi
   14000ac9a:	ret    
   14000ac9b:	int3   
   14000ac9c:	mov    rax,rsp
   14000ac9f:	mov    QWORD PTR [rax+0x10],rbx
   14000aca3:	mov    QWORD PTR [rax+0x18],rbp
   14000aca7:	mov    QWORD PTR [rax+0x20],rsi
   14000acab:	push   rdi
   14000acac:	push   r12
   14000acae:	push   r13
   14000acb0:	push   r14
   14000acb2:	push   r15
   14000acb4:	sub    rsp,0xd0
   14000acbb:	xor    r15d,r15d
   14000acbe:	mov    r12d,edx
   14000acc1:	mov    rbp,rcx
   14000acc4:	mov    WORD PTR [rax-0x48],r15w
   14000acc9:	cmp    rcx,r15
   14000accc:	jne    0x14000acd8
   14000acce:	mov    eax,0x80070057
   14000acd3:	jmp    0x14000b549
   14000acd8:	mov    rdi,QWORD PTR [rsp+0x128]
   14000ace0:	cmp    rdi,r15
   14000ace3:	jne    0x14000acef
   14000ace5:	mov    eax,0x80020008
   14000acea:	jmp    0x14000b549
   14000acef:	mov    r8d,DWORD PTR [rdi+0x10]
   14000acf3:	cmp    r8d,0x5
   14000acf7:	jbe    0x14000ad03
   14000acf9:	mov    eax,0x8002000e
   14000acfe:	jmp    0x14000b549
   14000ad03:	mov    r9d,r15d
   14000ad06:	mov    r14d,0x1
   14000ad0c:	cmp    DWORD PTR [rdi+0x14],r15d
   14000ad10:	jbe    0x14000ad3e
   14000ad12:	mov    r10,QWORD PTR [rdi+0x8]
   14000ad16:	cmp    DWORD PTR [r10],r8d
   14000ad19:	jae    0x14000acf9
   14000ad1b:	mov    eax,r9d
   14000ad1e:	add    r9d,r14d
   14000ad21:	lea    rcx,[rax+rax*2]
   14000ad25:	mov    rax,QWORD PTR [rdi]
   14000ad28:	lea    rdx,[rax+rcx*8]
   14000ad2c:	movsxd rax,DWORD PTR [r10]
   14000ad2f:	add    r10,0x4
   14000ad33:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   14000ad38:	cmp    r9d,DWORD PTR [rdi+0x14]
   14000ad3c:	jb     0x14000ad16
   14000ad3e:	cmp    r9d,r8d
   14000ad41:	jae    0x14000ad6b
   14000ad43:	mov    eax,r9d
   14000ad46:	lea    rcx,[rax+rax*2]
   14000ad4a:	mov    rax,QWORD PTR [rdi]
   14000ad4d:	lea    rdx,[rax+rcx*8]
   14000ad51:	mov    eax,r8d
   14000ad54:	sub    eax,r9d
   14000ad57:	add    r9d,r14d
   14000ad5a:	sub    eax,r14d
   14000ad5d:	mov    QWORD PTR [rsp+rax*8+0x50],rdx
   14000ad62:	add    rdx,0x18
   14000ad66:	cmp    r9d,r8d
   14000ad69:	jb     0x14000ad51
   14000ad6b:	mov    rax,QWORD PTR [rsp+0x140]
   14000ad73:	lea    r13,[rsp+0x100]
   14000ad7b:	lea    rsi,[rsp+0xb0]
   14000ad83:	cmp    rax,r15
   14000ad86:	lea    rcx,[rsp+0x78]
   14000ad8b:	mov    ebx,0x80020003
   14000ad90:	cmovne r13,rax
   14000ad94:	mov    rax,QWORD PTR [rsp+0x130]
   14000ad9c:	cmp    rax,r15
   14000ad9f:	cmovne rsi,rax
   14000ada3:	call   QWORD PTR [rip+0x2b777]        # 0x140036520
   14000ada9:	lea    r11d,[r12+0x139a]
   14000adb1:	cmp    r11d,0x12
   14000adb5:	ja     0x14000b53c
   14000adbb:	lea    rdx,[rip+0xffffffffffff523e]        # 0x140000000
   14000adc2:	movsxd rax,r11d
   14000adc5:	mov    ecx,DWORD PTR [rdx+rax*4+0xb56c]
   14000adcc:	movzx  eax,WORD PTR [rsp+0x120]
   14000add4:	add    rcx,rdx
   14000add7:	jmp    rcx
   14000add9:	cmp    DWORD PTR [rdi+0x10],r14d
   14000addd:	jne    0x14000b4bc
   14000ade3:	mov    rcx,QWORD PTR [rsp+0x50]
   14000ade8:	lea    rdx,[rsp+0x30]
   14000aded:	mov    rax,QWORD PTR [rcx]
   14000adf0:	mov    QWORD PTR [rdx],rax
   14000adf3:	mov    rax,QWORD PTR [rcx+0x8]
   14000adf7:	mov    QWORD PTR [rdx+0x8],rax
   14000adfb:	mov    rax,QWORD PTR [rcx+0x10]
   14000adff:	mov    rcx,rbp
   14000ae02:	mov    QWORD PTR [rdx+0x10],rax
   14000ae06:	mov    rax,QWORD PTR [rbp+0x0]
   14000ae0a:	lea    rdx,[rsp+0x30]
   14000ae0f:	call   QWORD PTR [rax+0xc8]
   14000ae15:	jmp    0x14000b4af
   14000ae1a:	cmp    DWORD PTR [rdi+0x10],0x2
   14000ae1e:	jne    0x14000b4bc
   14000ae24:	mov    rax,QWORD PTR [rsp+0x50]
   14000ae29:	mov    r12d,0x3
   14000ae2f:	cmp    WORD PTR [rax],r12w
   14000ae33:	je     0x14000ae59
   14000ae35:	lea    rcx,[rsp+0x78]
   14000ae3a:	mov    r9d,r12d
   14000ae3d:	xor    r8d,r8d
   14000ae40:	mov    rdx,rax
   14000ae43:	call   QWORD PTR [rip+0x2b6cf]        # 0x140036518
   14000ae49:	cmp    eax,r15d
   14000ae4c:	mov    ebx,eax
   14000ae4e:	jl     0x14000b123
   14000ae54:	lea    rax,[rsp+0x78]
   14000ae59:	mov    rcx,QWORD PTR [rsp+0x58]
   14000ae5e:	mov    edi,DWORD PTR [rax+0x8]
   14000ae61:	cmp    WORD PTR [rcx],r12w
   14000ae65:	je     0x14000ae8b
   14000ae67:	mov    rdx,rcx
   14000ae6a:	lea    rcx,[rsp+0x78]
   14000ae6f:	mov    r9d,r12d
   14000ae72:	xor    r8d,r8d
   14000ae75:	call   QWORD PTR [rip+0x2b69d]        # 0x140036518
   14000ae7b:	cmp    eax,r15d
   14000ae7e:	mov    ebx,eax
   14000ae80:	jl     0x14000b468
   14000ae86:	lea    rcx,[rsp+0x78]
   14000ae8b:	mov    r8d,DWORD PTR [rcx+0x8]
   14000ae8f:	mov    rax,QWORD PTR [rbp+0x0]
   14000ae93:	mov    r9,rsi
   14000ae96:	mov    edx,edi
   14000ae98:	mov    rcx,rbp
   14000ae9b:	call   QWORD PTR [rax+0xc0]
   14000aea1:	jmp    0x14000b4af
   14000aea6:	cmp    DWORD PTR [rdi+0x10],0x2
   14000aeaa:	jne    0x14000b4bc
   14000aeb0:	mov    rdx,QWORD PTR [rsp+0x50]
   14000aeb5:	mov    r12d,0x3
   14000aebb:	cmp    WORD PTR [rdx],r12w
   14000aebf:	je     0x14000aee2
   14000aec1:	lea    rcx,[rsp+0x78]
   14000aec6:	mov    r9d,r12d
   14000aec9:	xor    r8d,r8d
   14000aecc:	call   QWORD PTR [rip+0x2b646]        # 0x140036518
   14000aed2:	cmp    eax,r15d
   14000aed5:	mov    ebx,eax
   14000aed7:	jl     0x14000b123
   14000aedd:	lea    rdx,[rsp+0x78]
   14000aee2:	mov    rcx,QWORD PTR [rsp+0x58]
   14000aee7:	mov    edx,DWORD PTR [rdx+0x8]
   14000aeea:	lea    r8,[rsp+0x30]
   14000aeef:	mov    rax,QWORD PTR [rcx]
   14000aef2:	mov    r9,rsi
   14000aef5:	mov    QWORD PTR [r8],rax
   14000aef8:	mov    rax,QWORD PTR [rcx+0x8]
   14000aefc:	mov    QWORD PTR [r8+0x8],rax
   14000af00:	mov    rax,QWORD PTR [rcx+0x10]
   14000af04:	mov    rcx,rbp
   14000af07:	mov    QWORD PTR [r8+0x10],rax
   14000af0b:	mov    rax,QWORD PTR [rbp+0x0]
   14000af0f:	lea    r8,[rsp+0x30]
   14000af14:	call   QWORD PTR [rax+0xb8]
   14000af1a:	jmp    0x14000b4af
   14000af1f:	cmp    DWORD PTR [rdi+0x10],0x5
   14000af23:	jne    0x14000b4bc
   14000af29:	mov    rbx,QWORD PTR [rsp+0x50]
   14000af2e:	mov    rdx,QWORD PTR [rsp+0x90]
   14000af36:	mov    edi,0x8
   14000af3b:	lea    r12d,[rdi-0x5]
   14000af3f:	mov    r14d,0x4000
   14000af45:	test   WORD PTR [rbx],r14w
   14000af49:	je     0x14000af76
   14000af4b:	test   BYTE PTR [rbx],0xf
   14000af4e:	je     0x14000af76
   14000af50:	test   BYTE PTR [rbx],0xc
   14000af53:	je     0x14000af70
   14000af55:	mov    rcx,QWORD PTR [rbx+0x8]
   14000af59:	call   QWORD PTR [rip+0x2b5b1]        # 0x140036510
   14000af5f:	mov    r11,QWORD PTR [rbx+0x8]
   14000af63:	mov    WORD PTR [r11],r12w
   14000af67:	mov    rdx,QWORD PTR [rbx+0x8]
   14000af6b:	add    rdx,rdi
   14000af6e:	jmp    0x14000af45
   14000af70:	mov    rdx,QWORD PTR [rbx+0x8]
   14000af74:	jmp    0x14000af45
   14000af76:	mov    rcx,QWORD PTR [rsp+0x70]
   14000af7b:	mov    r9,QWORD PTR [rsp+0xa0]
   14000af83:	mov    DWORD PTR [r13+0x0],r15d
   14000af87:	mov    rax,QWORD PTR [rcx]
   14000af8a:	mov    r10,QWORD PTR [rbp+0x0]
   14000af8e:	lea    r8,[rsp+0x30]
   14000af93:	mov    QWORD PTR [r8],rax
   14000af96:	mov    rax,QWORD PTR [rcx+0x8]
   14000af9a:	mov    QWORD PTR [r8+0x8],rax
   14000af9e:	mov    rax,QWORD PTR [rcx+0x10]
   14000afa2:	mov    rcx,rbp
   14000afa5:	mov    QWORD PTR [r8+0x10],rax
   14000afa9:	mov    r8,QWORD PTR [rsp+0x98]
   14000afb1:	lea    rax,[rsp+0x30]
   14000afb6:	mov    QWORD PTR [rsp+0x28],rax
   14000afbb:	mov    rax,QWORD PTR [rsp+0xa8]
   14000afc3:	mov    QWORD PTR [rsp+0x20],rax
   14000afc8:	call   QWORD PTR [r10+0xb0]
   14000afcf:	jmp    0x14000b4af
   14000afd4:	cmp    DWORD PTR [rdi+0x10],0x2
   14000afd8:	jne    0x14000b4bc
   14000afde:	mov    rdx,QWORD PTR [rsp+0x50]
   14000afe3:	mov    r12d,0x3
   14000afe9:	cmp    WORD PTR [rdx],r12w
   14000afed:	je     0x14000b010
   14000afef:	lea    rcx,[rsp+0x78]
   14000aff4:	mov    r9d,r12d
   14000aff7:	xor    r8d,r8d
   14000affa:	call   QWORD PTR [rip+0x2b518]        # 0x140036518
   14000b000:	cmp    eax,r15d
   14000b003:	mov    ebx,eax
   14000b005:	jl     0x14000b123
   14000b00b:	lea    rdx,[rsp+0x78]
   14000b010:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b015:	mov    edx,DWORD PTR [rdx+0x8]
   14000b018:	lea    r8,[rsp+0x30]
   14000b01d:	mov    rax,QWORD PTR [rcx]
   14000b020:	mov    QWORD PTR [r8],rax
   14000b023:	mov    rax,QWORD PTR [rcx+0x8]
   14000b027:	mov    QWORD PTR [r8+0x8],rax
   14000b02b:	mov    rax,QWORD PTR [rcx+0x10]
   14000b02f:	mov    rcx,rbp
   14000b032:	mov    QWORD PTR [r8+0x10],rax
   14000b036:	mov    rax,QWORD PTR [rbp+0x0]
   14000b03a:	lea    r8,[rsp+0x30]
   14000b03f:	call   QWORD PTR [rax+0xa8]
   14000b045:	jmp    0x14000b4af
   14000b04a:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b04e:	jne    0x14000b4bc
   14000b054:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b059:	lea    rdx,[rsp+0x30]
   14000b05e:	lea    r8,[rsi+0x8]
   14000b062:	mov    rax,QWORD PTR [rcx]
   14000b065:	mov    QWORD PTR [rdx],rax
   14000b068:	mov    rax,QWORD PTR [rcx+0x8]
   14000b06c:	mov    QWORD PTR [rdx+0x8],rax
   14000b070:	mov    rax,QWORD PTR [rcx+0x10]
   14000b074:	mov    rcx,rbp
   14000b077:	mov    QWORD PTR [rdx+0x10],rax
   14000b07b:	mov    rax,QWORD PTR [rbp+0x0]
   14000b07f:	lea    rdx,[rsp+0x30]
   14000b084:	call   QWORD PTR [rax+0xa0]
   14000b08a:	jmp    0x14000b3f0
   14000b08f:	mov    rax,QWORD PTR [rbp+0x0]
   14000b093:	mov    rdx,rsi
   14000b096:	mov    rcx,rbp
   14000b099:	call   QWORD PTR [rax+0x98]
   14000b09f:	jmp    0x14000b4af
   14000b0a4:	mov    rax,QWORD PTR [rbp+0x0]
   14000b0a8:	mov    rdx,rsi
   14000b0ab:	mov    rcx,rbp
   14000b0ae:	call   QWORD PTR [rax+0x90]
   14000b0b4:	jmp    0x14000b4af
   14000b0b9:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b0bd:	jne    0x14000b4bc
   14000b0c3:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b0c8:	lea    rdx,[rsp+0x30]
   14000b0cd:	lea    r8,[rsi+0x8]
   14000b0d1:	mov    rax,QWORD PTR [rcx]
   14000b0d4:	mov    QWORD PTR [rdx],rax
   14000b0d7:	mov    rax,QWORD PTR [rcx+0x8]
   14000b0db:	mov    QWORD PTR [rdx+0x8],rax
   14000b0df:	mov    rax,QWORD PTR [rcx+0x10]
   14000b0e3:	mov    rcx,rbp
   14000b0e6:	mov    QWORD PTR [rdx+0x10],rax
   14000b0ea:	mov    rax,QWORD PTR [rbp+0x0]
   14000b0ee:	lea    rdx,[rsp+0x30]
   14000b0f3:	call   QWORD PTR [rax+0x88]
   14000b0f9:	jmp    0x14000b3f0
   14000b0fe:	cmp    DWORD PTR [rdi+0x10],0x2
   14000b102:	jne    0x14000b4bc
   14000b108:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b10d:	mov    r14d,0x4000
   14000b113:	test   WORD PTR [rbx],r14w
   14000b117:	je     0x14000b12c
   14000b119:	test   BYTE PTR [rbx],0xc
   14000b11c:	jne    0x14000b12c
   14000b11e:	mov    ebx,0x80020005
   14000b123:	mov    DWORD PTR [r13+0x0],r15d
   14000b127:	jmp    0x14000b53c
   14000b12c:	mov    eax,0x400c
   14000b131:	cmp    WORD PTR [rbx],ax
   14000b134:	jne    0x14000b156
   14000b136:	mov    rcx,QWORD PTR [rbx+0x8]
   14000b13a:	call   QWORD PTR [rip+0x2b3d0]        # 0x140036510
   14000b140:	mov    r11,QWORD PTR [rbx+0x8]
   14000b144:	mov    edi,0x8
   14000b149:	mov    WORD PTR [r11],di
   14000b14d:	mov    rdx,QWORD PTR [rbx+0x8]
   14000b151:	add    rdx,rdi
   14000b154:	jmp    0x14000b17b
   14000b156:	mov    eax,0x4008
   14000b15b:	cmp    WORD PTR [rbx],ax
   14000b15e:	jne    0x14000b166
   14000b160:	mov    rdx,QWORD PTR [rbx+0x8]
   14000b164:	jmp    0x14000b17b
   14000b166:	mov    rcx,rbx
   14000b169:	call   QWORD PTR [rip+0x2b3a1]        # 0x140036510
   14000b16f:	mov    edi,0x8
   14000b174:	lea    rdx,[rbx+0x8]
   14000b178:	mov    WORD PTR [rbx],di
   14000b17b:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b180:	lea    r8,[rsp+0x30]
   14000b185:	lea    r9,[rsi+0x8]
   14000b189:	mov    rax,QWORD PTR [rcx]
   14000b18c:	mov    QWORD PTR [r8],rax
   14000b18f:	mov    rax,QWORD PTR [rcx+0x8]
   14000b193:	mov    QWORD PTR [r8+0x8],rax
   14000b197:	mov    rax,QWORD PTR [rcx+0x10]
   14000b19b:	mov    rcx,rbp
   14000b19e:	mov    QWORD PTR [r8+0x10],rax
   14000b1a2:	mov    rax,QWORD PTR [rbp+0x0]
   14000b1a6:	lea    r8,[rsp+0x30]
   14000b1ab:	call   QWORD PTR [rax+0x80]
   14000b1b1:	jmp    0x14000b50c
   14000b1b6:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b1ba:	jne    0x14000b4bc
   14000b1c0:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b1c5:	lea    rdx,[rsp+0x30]
   14000b1ca:	lea    r8,[rsi+0x8]
   14000b1ce:	mov    rax,QWORD PTR [rcx]
   14000b1d1:	mov    QWORD PTR [rdx],rax
   14000b1d4:	mov    rax,QWORD PTR [rcx+0x8]
   14000b1d8:	mov    QWORD PTR [rdx+0x8],rax
   14000b1dc:	mov    rax,QWORD PTR [rcx+0x10]
   14000b1e0:	mov    rcx,rbp
   14000b1e3:	mov    QWORD PTR [rdx+0x10],rax
   14000b1e7:	mov    rax,QWORD PTR [rbp+0x0]
   14000b1eb:	lea    rdx,[rsp+0x30]
   14000b1f0:	call   QWORD PTR [rax+0x78]
   14000b1f3:	jmp    0x14000b3f0
   14000b1f8:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b1fc:	jne    0x14000b4bc
   14000b202:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b207:	lea    rdx,[rsp+0x30]
   14000b20c:	mov    r8,rsi
   14000b20f:	mov    rax,QWORD PTR [rcx]
   14000b212:	mov    QWORD PTR [rdx],rax
   14000b215:	mov    rax,QWORD PTR [rcx+0x8]
   14000b219:	mov    QWORD PTR [rdx+0x8],rax
   14000b21d:	mov    rax,QWORD PTR [rcx+0x10]
   14000b221:	mov    rcx,rbp
   14000b224:	mov    QWORD PTR [rdx+0x10],rax
   14000b228:	mov    rax,QWORD PTR [rbp+0x0]
   14000b22c:	lea    rdx,[rsp+0x30]
   14000b231:	call   QWORD PTR [rax+0x70]
   14000b234:	jmp    0x14000b4af
   14000b239:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b23d:	jne    0x14000b4bc
   14000b243:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b248:	lea    rdx,[rsp+0x30]
   14000b24d:	mov    r8,rsi
   14000b250:	mov    rax,QWORD PTR [rcx]
   14000b253:	mov    QWORD PTR [rdx],rax
   14000b256:	mov    rax,QWORD PTR [rcx+0x8]
   14000b25a:	mov    QWORD PTR [rdx+0x8],rax
   14000b25e:	mov    rax,QWORD PTR [rcx+0x10]
   14000b262:	mov    rcx,rbp
   14000b265:	mov    QWORD PTR [rdx+0x10],rax
   14000b269:	mov    rax,QWORD PTR [rbp+0x0]
   14000b26d:	lea    rdx,[rsp+0x30]
   14000b272:	call   QWORD PTR [rax+0x68]
   14000b275:	jmp    0x14000b4af
   14000b27a:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b27e:	jne    0x14000b4bc
   14000b284:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b289:	lea    rdx,[rsp+0x30]
   14000b28e:	lea    r8,[rsi+0x8]
   14000b292:	mov    rax,QWORD PTR [rcx]
   14000b295:	mov    QWORD PTR [rdx],rax
   14000b298:	mov    rax,QWORD PTR [rcx+0x8]
   14000b29c:	mov    QWORD PTR [rdx+0x8],rax
   14000b2a0:	mov    rax,QWORD PTR [rcx+0x10]
   14000b2a4:	mov    rcx,rbp
   14000b2a7:	mov    QWORD PTR [rdx+0x10],rax
   14000b2ab:	mov    rax,QWORD PTR [rbp+0x0]
   14000b2af:	lea    rdx,[rsp+0x30]
   14000b2b4:	call   QWORD PTR [rax+0x60]
   14000b2b7:	jmp    0x14000b3f0
   14000b2bc:	test   al,0x2
   14000b2be:	je     0x14000b302
   14000b2c0:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b2c4:	jne    0x14000b4bc
   14000b2ca:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b2cf:	lea    rdx,[rsp+0x30]
   14000b2d4:	lea    r8,[rsi+0x8]
   14000b2d8:	mov    rax,QWORD PTR [rcx]
   14000b2db:	mov    QWORD PTR [rdx],rax
   14000b2de:	mov    rax,QWORD PTR [rcx+0x8]
   14000b2e2:	mov    QWORD PTR [rdx+0x8],rax
   14000b2e6:	mov    rax,QWORD PTR [rcx+0x10]
   14000b2ea:	mov    rcx,rbp
   14000b2ed:	mov    QWORD PTR [rdx+0x10],rax
   14000b2f1:	mov    rax,QWORD PTR [rbp+0x0]
   14000b2f5:	lea    rdx,[rsp+0x30]
   14000b2fa:	call   QWORD PTR [rax+0x58]
   14000b2fd:	jmp    0x14000b3f0
   14000b302:	test   al,0x4
   14000b304:	je     0x14000b3a9
   14000b30a:	cmp    DWORD PTR [rdi+0x10],0x2
   14000b30e:	jne    0x14000b4bc
   14000b314:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b319:	lea    rdx,[rsp+0x30]
   14000b31e:	mov    edi,0x8
   14000b323:	mov    rax,QWORD PTR [rcx]
   14000b326:	mov    QWORD PTR [rdx],rax
   14000b329:	mov    rax,QWORD PTR [rcx+0x8]
   14000b32d:	mov    QWORD PTR [rdx+0x8],rax
   14000b331:	mov    rax,QWORD PTR [rcx+0x10]
   14000b335:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b33a:	mov    QWORD PTR [rdx+0x10],rax
   14000b33e:	cmp    WORD PTR [rcx],di
   14000b341:	je     0x14000b368
   14000b343:	mov    rdx,rcx
   14000b346:	lea    r9d,[rdi-0x5]
   14000b34a:	lea    rcx,[rsp+0x78]
   14000b34f:	xor    r8d,r8d
   14000b352:	call   QWORD PTR [rip+0x2b1c0]        # 0x140036518
   14000b358:	cmp    eax,r15d
   14000b35b:	mov    ebx,eax
   14000b35d:	jl     0x14000b468
   14000b363:	lea    rcx,[rsp+0x78]
   14000b368:	lea    rdx,[rsp+0x30]
   14000b36d:	lea    r8,[rsp+0x90]
   14000b375:	mov    rax,QWORD PTR [rdx]
   14000b378:	mov    QWORD PTR [r8],rax
   14000b37b:	mov    rax,QWORD PTR [rdx+0x8]
   14000b37f:	mov    QWORD PTR [r8+0x8],rax
   14000b383:	mov    rax,QWORD PTR [rdx+0x10]
   14000b387:	lea    rdx,[rsp+0x90]
   14000b38f:	mov    QWORD PTR [r8+0x10],rax
   14000b393:	mov    r8,QWORD PTR [rcx+0x8]
   14000b397:	mov    rax,QWORD PTR [rbp+0x0]
   14000b39b:	mov    rcx,rbp
   14000b39e:	call   QWORD PTR [rax+0xd8]
   14000b3a4:	jmp    0x14000b4af
   14000b3a9:	test   al,0x2
   14000b3ab:	je     0x14000b408
   14000b3ad:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b3b1:	jne    0x14000b4bc
   14000b3b7:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b3bc:	lea    rdx,[rsp+0x90]
   14000b3c4:	lea    r8,[rsi+0x8]
   14000b3c8:	mov    rax,QWORD PTR [rcx]
   14000b3cb:	mov    QWORD PTR [rdx],rax
   14000b3ce:	mov    rax,QWORD PTR [rcx+0x8]
   14000b3d2:	mov    QWORD PTR [rdx+0x8],rax
   14000b3d6:	mov    rax,QWORD PTR [rcx+0x10]
   14000b3da:	mov    rcx,rbp
   14000b3dd:	mov    QWORD PTR [rdx+0x10],rax
   14000b3e1:	mov    rax,QWORD PTR [rbp+0x0]
   14000b3e5:	lea    rdx,[rsp+0x90]
   14000b3ed:	call   QWORD PTR [rax+0x50]
   14000b3f0:	cmp    eax,r15d
   14000b3f3:	mov    ebx,eax
   14000b3f5:	jl     0x14000b53c
   14000b3fb:	mov    edi,0x8
   14000b400:	mov    WORD PTR [rsi],di
   14000b403:	jmp    0x14000b53c
   14000b408:	test   al,0x4
   14000b40a:	je     0x14000b4b6
   14000b410:	cmp    DWORD PTR [rdi+0x10],0x2
   14000b414:	jne    0x14000b4bc
   14000b41a:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b41f:	lea    rdx,[rsp+0x90]
   14000b427:	mov    edi,0x8
   14000b42c:	mov    rax,QWORD PTR [rcx]
   14000b42f:	mov    QWORD PTR [rdx],rax
   14000b432:	mov    rax,QWORD PTR [rcx+0x8]
   14000b436:	mov    QWORD PTR [rdx+0x8],rax
   14000b43a:	mov    rax,QWORD PTR [rcx+0x10]
   14000b43e:	mov    rcx,QWORD PTR [rsp+0x58]
   14000b443:	mov    QWORD PTR [rdx+0x10],rax
   14000b447:	cmp    WORD PTR [rcx],di
   14000b44a:	je     0x14000b476
   14000b44c:	mov    rdx,rcx
   14000b44f:	lea    r9d,[rdi-0x5]
   14000b453:	lea    rcx,[rsp+0x78]
   14000b458:	xor    r8d,r8d
   14000b45b:	call   QWORD PTR [rip+0x2b0b7]        # 0x140036518
   14000b461:	cmp    eax,r15d
   14000b464:	mov    ebx,eax
   14000b466:	jge    0x14000b471
   14000b468:	mov    DWORD PTR [r13+0x0],r14d
   14000b46c:	jmp    0x14000b53c
   14000b471:	lea    rcx,[rsp+0x78]
   14000b476:	lea    rdx,[rsp+0x90]
   14000b47e:	lea    r8,[rsp+0x30]
   14000b483:	mov    rax,QWORD PTR [rdx]
   14000b486:	mov    QWORD PTR [r8],rax
   14000b489:	mov    rax,QWORD PTR [rdx+0x8]
   14000b48d:	mov    QWORD PTR [r8+0x8],rax
   14000b491:	mov    rax,QWORD PTR [rdx+0x10]
   14000b495:	lea    rdx,[rsp+0x30]
   14000b49a:	mov    QWORD PTR [r8+0x10],rax
   14000b49e:	mov    r8,QWORD PTR [rcx+0x8]
   14000b4a2:	mov    rax,QWORD PTR [rbp+0x0]
   14000b4a6:	mov    rcx,rbp
   14000b4a9:	call   QWORD PTR [rax+0xd0]
   14000b4af:	mov    ebx,eax
   14000b4b1:	jmp    0x14000b53c
   14000b4b6:	cmp    DWORD PTR [rdi+0x10],r14d
   14000b4ba:	je     0x14000b4c3
   14000b4bc:	mov    ebx,0x8002000e
   14000b4c1:	jmp    0x14000b53c
   14000b4c3:	mov    rcx,QWORD PTR [rsp+0x50]
   14000b4c8:	lea    rdx,[rsp+0x90]
   14000b4d0:	lea    r8,[rsi+0x8]
   14000b4d4:	mov    rax,QWORD PTR [rcx]
   14000b4d7:	mov    QWORD PTR [rdx],rax
   14000b4da:	mov    rax,QWORD PTR [rcx+0x8]
   14000b4de:	mov    QWORD PTR [rdx+0x8],rax
   14000b4e2:	mov    rax,QWORD PTR [rcx+0x10]
   14000b4e6:	mov    rcx,rbp
   14000b4e9:	mov    QWORD PTR [rdx+0x10],rax
   14000b4ed:	mov    rax,QWORD PTR [rbp+0x0]
   14000b4f1:	lea    rdx,[rsp+0x90]
   14000b4f9:	call   QWORD PTR [rax+0x48]
   14000b4fc:	jmp    0x14000b52d
   14000b4fe:	mov    rax,QWORD PTR [rbp+0x0]
   14000b502:	lea    rdx,[rsi+0x8]
   14000b506:	mov    rcx,rbp
   14000b509:	call   QWORD PTR [rax+0x40]
   14000b50c:	cmp    eax,r15d
   14000b50f:	mov    ebx,eax
   14000b511:	jl     0x14000b53c
   14000b513:	mov    r12d,0x3
   14000b519:	mov    WORD PTR [rsi],r12w
   14000b51d:	jmp    0x14000b53c
   14000b51f:	mov    rax,QWORD PTR [rbp+0x0]
   14000b523:	lea    rdx,[rsi+0x8]
   14000b527:	mov    rcx,rbp
   14000b52a:	call   QWORD PTR [rax+0x38]
   14000b52d:	cmp    eax,r15d
   14000b530:	mov    ebx,eax
   14000b532:	jl     0x14000b53c
   14000b534:	mov    eax,0x9
   14000b539:	mov    WORD PTR [rsi],ax
   14000b53c:	lea    rcx,[rsp+0x78]
   14000b541:	call   QWORD PTR [rip+0x2afc9]        # 0x140036510
   14000b547:	mov    eax,ebx
   14000b549:	lea    r11,[rsp+0xd0]
   14000b551:	mov    rbx,QWORD PTR [r11+0x38]
   14000b555:	mov    rbp,QWORD PTR [r11+0x40]
   14000b559:	mov    rsi,QWORD PTR [r11+0x48]
   14000b55d:	mov    rsp,r11
   14000b560:	pop    r15
   14000b562:	pop    r14
   14000b564:	pop    r13
   14000b566:	pop    r12
   14000b568:	pop    rdi
   14000b569:	ret    
   14000b56a:	xchg   ax,ax
   14000b56c:	fldcw  WORD PTR [rbp-0x51e60000]
   14000b572:	add    BYTE PTR [rax],al
   14000b574:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14000b575:	scas   al,BYTE PTR es:[rdi]
   14000b576:	add    BYTE PTR [rax],al
   14000b578:	(bad)  
   14000b579:	scas   eax,DWORD PTR es:[rdi]
   14000b57a:	add    BYTE PTR [rax],al
   14000b57c:	(bad)  
   14000b57d:	scas   eax,DWORD PTR es:[rdi]
   14000b57e:	add    BYTE PTR [rax],al
   14000b580:	rex.WX mov al,0x0
   14000b583:	add    BYTE PTR [rdi-0x5bffff50],cl
   14000b589:	mov    al,0x0
   14000b58b:	add    BYTE PTR [rcx-0x1ffff50],bh
   14000b591:	mov    al,0x0
   14000b593:	add    BYTE PTR [rsi-0x7ffff4f],dh
   14000b599:	mov    cl,0x0
   14000b59b:	add    BYTE PTR [rcx],bh
   14000b59d:	mov    dl,0x0
   14000b59f:	add    BYTE PTR [rdx-0x4e],bh
   14000b5a2:	add    BYTE PTR [rax],al
   14000b5a4:	mov    esp,0xa90000b2
   14000b5a9:	mov    bl,0x0
   14000b5ab:	add    BYTE PTR [rsi-0x1ffff4c],dh
   14000b5b1:	mov    ah,0x0
   14000b5b3:	add    BYTE PTR [rdi],bl
   14000b5b5:	mov    ch,0x0
   14000b5b7:	add    BYTE PTR [rax-0x77],cl
   14000b5ba:	pop    rsp
   14000b5bb:	and    al,0x8
   14000b5bd:	mov    QWORD PTR [rsp+0x10],rbp
   14000b5c2:	mov    QWORD PTR [rsp+0x18],rsi
   14000b5c7:	push   rdi
   14000b5c8:	push   r12
   14000b5ca:	push   r13
   14000b5cc:	push   r14
   14000b5ce:	push   r15
   14000b5d0:	sub    rsp,0x20
   14000b5d4:	xor    ebx,ebx
   14000b5d6:	mov    r12d,r8d
   14000b5d9:	mov    rsi,rdx
   14000b5dc:	test   r8d,r8d
   14000b5df:	je     0x14000b638
   14000b5e1:	mov    rdi,QWORD PTR [rsp+0x70]
   14000b5e6:	xor    r14b,r14b
   14000b5e9:	lea    rbp,[rip+0x3d230]        # 0x140048820
   14000b5f0:	lea    r13,[rip+0x3d189]        # 0x140048780
   14000b5f7:	mov    r15d,0x13
   14000b5fd:	mov    rdx,QWORD PTR [r13+0x0]
   14000b601:	mov    rcx,QWORD PTR [rsi]
   14000b604:	call   QWORD PTR [rip+0x2ad66]        # 0x140036370
   14000b60a:	test   eax,eax
   14000b60c:	jne    0x14000b616
   14000b60e:	mov    eax,DWORD PTR [rbp+0x0]
   14000b611:	mov    r14b,0x1
   14000b614:	mov    DWORD PTR [rdi],eax
   14000b616:	add    r13,0x8
   14000b61a:	add    rbp,0x4
   14000b61e:	sub    r15,0x1
   14000b622:	jne    0x14000b5fd
   14000b624:	test   r14b,r14b
   14000b627:	je     0x14000b657
   14000b629:	inc    ebx
   14000b62b:	add    rsi,0x8
   14000b62f:	add    rdi,0x4
   14000b633:	cmp    ebx,r12d
   14000b636:	jb     0x14000b5e6
   14000b638:	xor    eax,eax
   14000b63a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000b63f:	mov    rbp,QWORD PTR [rsp+0x58]
   14000b644:	mov    rsi,QWORD PTR [rsp+0x60]
   14000b649:	add    rsp,0x20
   14000b64d:	pop    r15
   14000b64f:	pop    r14
   14000b651:	pop    r13
   14000b653:	pop    r12
   14000b655:	pop    rdi
   14000b656:	ret    
   14000b657:	mov    eax,0x80020006
   14000b65c:	jmp    0x14000b63a
   14000b65e:	int3   
   14000b65f:	int3   
   14000b660:	mov    QWORD PTR [rsp+0x8],rbx
   14000b665:	push   rdi
   14000b666:	sub    rsp,0x20
   14000b66a:	mov    rbx,rdx
   14000b66d:	mov    rdi,rcx
   14000b670:	call   0x14000a238
   14000b675:	lea    rax,[rip+0x2c17c]        # 0x1400377f8
   14000b67c:	lea    r11,[rip+0x2c295]        # 0x140037918
   14000b683:	mov    QWORD PTR [rdi],r11
   14000b686:	mov    QWORD PTR [rdi+0x60],rax
   14000b68a:	lea    rax,[rip+0x2c24f]        # 0x1400378e0
   14000b691:	mov    QWORD PTR [rdi+0x68],rax
   14000b695:	xor    eax,eax
   14000b697:	mov    QWORD PTR [rdi+0x40],rbx
   14000b69b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b6a0:	mov    BYTE PTR [rdi+0x48],al
   14000b6a3:	mov    QWORD PTR [rdi+0x58],rax
   14000b6a7:	mov    QWORD PTR [rdi+0x70],rax
   14000b6ab:	mov    DWORD PTR [rdi+0x78],eax
   14000b6ae:	mov    QWORD PTR [rdi+0x80],rax
   14000b6b5:	mov    DWORD PTR [rdi+0x88],eax
   14000b6bb:	mov    QWORD PTR [rdi+0x90],rax
   14000b6c2:	mov    QWORD PTR [rdi+0x98],rax
   14000b6c9:	mov    QWORD PTR [rdi+0xa0],rax
   14000b6d0:	mov    rax,rdi
   14000b6d3:	add    rsp,0x20
   14000b6d7:	pop    rdi
   14000b6d8:	ret    
   14000b6d9:	int3   
   14000b6da:	int3   
   14000b6db:	int3   
   14000b6dc:	sub    rsp,0x28
   14000b6e0:	mov    rcx,QWORD PTR [rcx+0x40]
   14000b6e4:	call   QWORD PTR [rip+0x2afd6]        # 0x1400366c0
   14000b6ea:	mov    rcx,rax
   14000b6ed:	add    rsp,0x28
   14000b6f1:	jmp    0x140012334
   14000b6f6:	int3   
   14000b6f7:	int3   
   14000b6f8:	sub    rsp,0x28
   14000b6fc:	cmp    QWORD PTR [rcx+0x40],0x0
   14000b701:	mov    rax,QWORD PTR [rcx]
   14000b704:	je     0x14000b70e
   14000b706:	call   QWORD PTR [rax+0xc0]
   14000b70c:	jmp    0x14000b714
   14000b70e:	call   QWORD PTR [rax+0x238]
   14000b714:	add    rsp,0x28
   14000b718:	ret    
   14000b719:	int3   
   14000b71a:	int3   
   14000b71b:	int3   
   14000b71c:	mov    rax,rsp
   14000b71f:	mov    QWORD PTR [rax+0x8],rbx
   14000b723:	mov    QWORD PTR [rax+0x10],rbp
   14000b727:	mov    QWORD PTR [rax+0x18],rsi
   14000b72b:	push   rdi
   14000b72c:	sub    rsp,0x30
   14000b730:	mov    rbx,rcx
   14000b733:	mov    rcx,QWORD PTR [rcx+0x80]
   14000b73a:	mov    rdi,r9
   14000b73d:	mov    rsi,r8
   14000b740:	mov    ebp,edx
   14000b742:	test   rcx,rcx
   14000b745:	je     0x14000b753
   14000b747:	mov    QWORD PTR [rax-0x18],r9
   14000b74b:	mov    r9,r8
   14000b74e:	mov    r8d,edx
   14000b751:	jmp    0x14000b786
   14000b753:	mov    rax,QWORD PTR [rbx]
   14000b756:	mov    rcx,rbx
   14000b759:	call   QWORD PTR [rax+0x1f0]
   14000b75f:	mov    rcx,QWORD PTR [rax]
   14000b762:	test   rcx,rcx
   14000b765:	jne    0x14000b77b
   14000b767:	mov    rcx,QWORD PTR [rbx+0x40]
   14000b76b:	mov    r9,rdi
   14000b76e:	mov    r8,rsi
   14000b771:	mov    edx,ebp
   14000b773:	call   QWORD PTR [rip+0x2af37]        # 0x1400366b0
   14000b779:	jmp    0x14000b790
   14000b77b:	mov    QWORD PTR [rsp+0x20],rdi
   14000b780:	mov    r9,rsi
   14000b783:	mov    r8d,ebp
   14000b786:	mov    rdx,QWORD PTR [rbx+0x40]
   14000b78a:	call   QWORD PTR [rip+0x2af28]        # 0x1400366b8
   14000b790:	mov    rbx,QWORD PTR [rsp+0x40]
   14000b795:	mov    rbp,QWORD PTR [rsp+0x48]
   14000b79a:	mov    rsi,QWORD PTR [rsp+0x50]
   14000b79f:	add    rsp,0x30
   14000b7a3:	pop    rdi
   14000b7a4:	ret    
   14000b7a5:	int3   
   14000b7a6:	int3   
   14000b7a7:	int3   
   14000b7a8:	lea    rax,[rcx+0x80]
   14000b7af:	ret    
   14000b7b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b7b5:	push   rdi
   14000b7b6:	sub    rsp,0x20
   14000b7ba:	mov    rbx,rdx
   14000b7bd:	mov    rdi,rcx
   14000b7c0:	call   0x140007df0
   14000b7c5:	mov    r8,QWORD PTR [rax+0x60]
   14000b7c9:	test   r8,r8
   14000b7cc:	je     0x14000b7d7
   14000b7ce:	mov    rdx,rdi
   14000b7d1:	mov    rcx,rbx
   14000b7d4:	call   r8
   14000b7d7:	xor    eax,eax
   14000b7d9:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b7de:	add    rsp,0x20
   14000b7e2:	pop    rdi
   14000b7e3:	ret    
   14000b7e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000b7e9:	mov    QWORD PTR [rsp+0x10],rbp
   14000b7ee:	mov    QWORD PTR [rsp+0x18],rsi
   14000b7f3:	push   rdi
   14000b7f4:	sub    rsp,0x20
   14000b7f8:	mov    rbp,rcx
   14000b7fb:	mov    rcx,QWORD PTR [rcx+0x40]
   14000b7ff:	mov    rbx,r8
   14000b802:	call   0x140011b08
   14000b807:	mov    rsi,rax
   14000b80a:	test   rax,rax
   14000b80d:	je     0x14000b860
   14000b80f:	mov    rcx,rax
   14000b812:	call   QWORD PTR [rip+0x2ae88]        # 0x1400366a0
   14000b818:	mov    edi,eax
   14000b81a:	test   rbx,rbx
   14000b81d:	je     0x14000b85b
   14000b81f:	cmp    DWORD PTR [rbx],0x40
   14000b822:	jb     0x14000b85b
   14000b824:	mov    rcx,QWORD PTR [rbp+0x40]
   14000b828:	or     DWORD PTR [rbx+0x4],0x1
   14000b82c:	or     QWORD PTR [rbx+0x30],0xffffffffffffffff
   14000b831:	mov    QWORD PTR [rbx+0x8],rcx
   14000b835:	xor    r9d,r9d
   14000b838:	xor    r8d,r8d
   14000b83b:	mov    edx,0x87
   14000b840:	mov    rcx,rsi
   14000b843:	mov    QWORD PTR [rbx+0x10],rsi
   14000b847:	call   QWORD PTR [rip+0x2aec3]        # 0x140036710
   14000b84d:	bt     rax,0xd
   14000b852:	jb     0x14000b85b
   14000b854:	or     DWORD PTR [rbx+0x4],0x80000002
   14000b85b:	mov    rax,rdi
   14000b85e:	jmp    0x14000b864
   14000b860:	or     rax,0xffffffffffffffff
   14000b864:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b869:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b86e:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b873:	add    rsp,0x20
   14000b877:	pop    rdi
   14000b878:	ret    
   14000b879:	int3   
   14000b87a:	int3   
   14000b87b:	int3   
   14000b87c:	sub    rsp,0x28
   14000b880:	lea    rax,[rip+0x2c311]        # 0x140037b98
   14000b887:	mov    QWORD PTR [rcx],rax
   14000b88a:	mov    rcx,QWORD PTR [rcx+0x8]
   14000b88e:	test   rcx,rcx
   14000b891:	je     0x14000b899
   14000b893:	call   QWORD PTR [rip+0x2abd7]        # 0x140036470
   14000b899:	add    rsp,0x28
   14000b89d:	ret    
   14000b89e:	int3   
   14000b89f:	int3   
   14000b8a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000b8a5:	push   rdi
   14000b8a6:	sub    rsp,0x20
   14000b8aa:	mov    ebx,edx
   14000b8ac:	mov    rdi,rcx
   14000b8af:	call   0x14000b87c
   14000b8b4:	test   bl,0x1
   14000b8b7:	je     0x14000b8c1
   14000b8b9:	mov    rcx,rdi
   14000b8bc:	call   0x14000666c
   14000b8c1:	mov    rax,rdi
   14000b8c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b8c9:	add    rsp,0x20
   14000b8cd:	pop    rdi
   14000b8ce:	ret    
   14000b8cf:	int3   
   14000b8d0:	xchg   ax,ax
   14000b8d2:	cmp    QWORD PTR [rcx+0x10],0x0
   14000b8d7:	je     0x14000b8f9
   14000b8d9:	cmp    DWORD PTR [rcx],edx
   14000b8db:	jne    0x14000b8ef
   14000b8dd:	cmp    DWORD PTR [rcx+0x4],r8d
   14000b8e1:	jne    0x14000b8ef
   14000b8e3:	cmp    r9d,DWORD PTR [rcx+0x8]
   14000b8e7:	jb     0x14000b8ef
   14000b8e9:	cmp    r9d,DWORD PTR [rcx+0xc]
   14000b8ed:	jbe    0x14000b8f5
   14000b8ef:	add    rcx,0x20
   14000b8f3:	jmp    0x14000b8d2
   14000b8f5:	mov    rax,rcx
   14000b8f8:	ret    
   14000b8f9:	xor    eax,eax
   14000b8fb:	ret    
   14000b8fc:	mov    r11,rsp
   14000b8ff:	mov    QWORD PTR [r11+0x10],rbx
   14000b903:	mov    QWORD PTR [r11+0x18],rbp
   14000b907:	mov    QWORD PTR [r11+0x20],rsi
   14000b90b:	push   rdi
   14000b90c:	sub    rsp,0x30
   14000b910:	mov    rax,QWORD PTR [rcx]
   14000b913:	and    QWORD PTR [r11+0x8],0x0
   14000b918:	mov    rbx,rcx
   14000b91b:	lea    rcx,[r11+0x8]
   14000b91f:	mov    rdi,r9
   14000b922:	mov    rsi,r8
   14000b925:	mov    QWORD PTR [r11-0x18],rcx
   14000b929:	mov    rcx,rbx
   14000b92c:	mov    ebp,edx
   14000b92e:	call   QWORD PTR [rax+0x228]
   14000b934:	test   eax,eax
   14000b936:	jne    0x14000b94e
   14000b938:	mov    rax,QWORD PTR [rbx]
   14000b93b:	mov    r9,rdi
   14000b93e:	mov    r8,rsi
   14000b941:	mov    edx,ebp
   14000b943:	mov    rcx,rbx
   14000b946:	call   QWORD PTR [rax+0x230]
   14000b94c:	jmp    0x14000b953
   14000b94e:	mov    rax,QWORD PTR [rsp+0x40]
   14000b953:	mov    rbx,QWORD PTR [rsp+0x48]
   14000b958:	mov    rbp,QWORD PTR [rsp+0x50]
   14000b95d:	mov    rsi,QWORD PTR [rsp+0x58]
   14000b962:	add    rsp,0x30
   14000b966:	pop    rdi
   14000b967:	ret    
   14000b968:	rex push rbx
   14000b96a:	sub    rsp,0x20
   14000b96e:	mov    rbx,rcx
   14000b971:	call   0x14000a208
   14000b976:	lea    r11,[rip+0x2c22b]        # 0x140037ba8
   14000b97d:	mov    DWORD PTR [rbx+0x40],0x1
   14000b984:	mov    rax,rbx
   14000b987:	mov    QWORD PTR [rbx],r11
   14000b98a:	add    rsp,0x20
   14000b98e:	pop    rbx
   14000b98f:	ret    
   14000b990:	mov    DWORD PTR [rcx+0x40],edx
   14000b993:	mov    DWORD PTR [rcx+0x28],0x1
   14000b99a:	ret    
   14000b99b:	int3   
   14000b99c:	ret    0x0
   14000b99f:	int3   
   14000b9a0:	jmp    0x1400062d4
   14000b9a5:	int3   
   14000b9a6:	int3   
   14000b9a7:	int3   
   14000b9a8:	mov    QWORD PTR [rsp+0x8],rbx
   14000b9ad:	mov    QWORD PTR [rsp+0x10],rbp
   14000b9b2:	mov    QWORD PTR [rsp+0x18],rsi
   14000b9b7:	push   rdi
   14000b9b8:	sub    rsp,0x20
   14000b9bc:	mov    ebx,r8d
   14000b9bf:	mov    rbp,rdx
   14000b9c2:	mov    rsi,rcx
   14000b9c5:	call   0x1400117fc
   14000b9ca:	mov    edi,eax
   14000b9cc:	test   ebx,ebx
   14000b9ce:	jne    0x14000b9d4
   14000b9d0:	btr    edi,0x9
   14000b9d4:	mov    rcx,rsi
   14000b9d7:	call   0x1400117c8
   14000b9dc:	mov    r9d,edi
   14000b9df:	xor    r8d,r8d
   14000b9e2:	mov    edx,eax
   14000b9e4:	mov    rcx,rbp
   14000b9e7:	mov    rbx,QWORD PTR [rsp+0x30]
   14000b9ec:	mov    rbp,QWORD PTR [rsp+0x38]
   14000b9f1:	mov    rsi,QWORD PTR [rsp+0x40]
   14000b9f6:	add    rsp,0x20
   14000b9fa:	pop    rdi
   14000b9fb:	rex.W jmp QWORD PTR [rip+0x2ac8e]        # 0x140036690
   14000ba02:	int3   
   14000ba03:	int3   
   14000ba04:	lea    rax,[rip+0x2bb05]        # 0x140037510
   14000ba0b:	ret    
   14000ba0c:	rex push rbx
   14000ba0e:	sub    rsp,0x30
   14000ba12:	mov    rax,QWORD PTR [rsp+0x68]
   14000ba17:	mov    r10d,r9d
   14000ba1a:	mov    r9d,DWORD PTR [rsp+0x60]
   14000ba1f:	mov    r11,r8
   14000ba22:	mov    rcx,rdx
   14000ba25:	mov    r8d,r10d
   14000ba28:	mov    rdx,r11
   14000ba2b:	mov    QWORD PTR [rsp+0x20],rax
   14000ba30:	call   0x14000b5b8
   14000ba35:	add    rsp,0x30
   14000ba39:	pop    rbx
   14000ba3a:	ret    
   14000ba3b:	int3   
   14000ba3c:	test   rdx,rdx
   14000ba3f:	jne    0x14000ba47
   14000ba41:	mov    eax,0x80004003
   14000ba46:	ret    
   14000ba47:	mov    DWORD PTR [rdx],0x1
   14000ba4d:	xor    eax,eax
   14000ba4f:	ret    
   14000ba50:	mov    eax,0x80004001
   14000ba55:	ret    
   14000ba56:	int3   
   14000ba57:	int3   
   14000ba58:	test   rdx,rdx
   14000ba5b:	jne    0x14000ba63
   14000ba5d:	mov    eax,0x80004003
   14000ba62:	ret    
   14000ba63:	and    QWORD PTR [rdx],0x0
   14000ba67:	mov    eax,0x80004001
   14000ba6c:	ret    
   14000ba6d:	int3   
   14000ba6e:	int3   
   14000ba6f:	int3   
   14000ba70:	sub    rsp,0x28
   14000ba74:	lea    r9,[rcx+0x50]
   14000ba78:	cmp    QWORD PTR [r9],0x0
   14000ba7c:	jne    0x14000ba97
   14000ba7e:	mov    rcx,QWORD PTR [rcx+0x40]
   14000ba82:	lea    r8,[rip+0x2c13f]        # 0x140037bc8
   14000ba89:	mov    edx,0xfffffffc
   14000ba8e:	call   0x14003276e
   14000ba93:	test   eax,eax
   14000ba95:	js     0x14000ba99
   14000ba97:	xor    eax,eax
   14000ba99:	add    rsp,0x28
   14000ba9d:	ret    
   14000ba9e:	int3   
   14000ba9f:	int3   
   14000baa0:	mov    rcx,QWORD PTR [rcx+0x50]
   14000baa4:	mov    rax,QWORD PTR [rcx]
   14000baa7:	rex.W jmp QWORD PTR [rax+0x38]
   14000baab:	int3   
   14000baac:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bab0:	mov    rax,QWORD PTR [rcx]
   14000bab3:	rex.W jmp QWORD PTR [rax+0x40]
   14000bab7:	int3   
   14000bab8:	sub    rsp,0x48
   14000babc:	mov    rax,QWORD PTR [rdx]
   14000babf:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bac3:	lea    r9,[rsp+0x20]
   14000bac8:	mov    QWORD PTR [r9],rax
   14000bacb:	mov    rax,QWORD PTR [rdx+0x8]
   14000bacf:	mov    QWORD PTR [r9+0x8],rax
   14000bad3:	mov    rax,QWORD PTR [rdx+0x10]
   14000bad7:	lea    rdx,[rsp+0x20]
   14000badc:	mov    QWORD PTR [r9+0x10],rax
   14000bae0:	mov    rax,QWORD PTR [rcx]
   14000bae3:	call   QWORD PTR [rax+0x48]
   14000bae6:	add    rsp,0x48
   14000baea:	ret    
   14000baeb:	int3   
   14000baec:	sub    rsp,0x48
   14000baf0:	mov    rax,QWORD PTR [rdx]
   14000baf3:	mov    rcx,QWORD PTR [rcx+0x50]
   14000baf7:	lea    r9,[rsp+0x20]
   14000bafc:	mov    QWORD PTR [r9],rax
   14000baff:	mov    rax,QWORD PTR [rdx+0x8]
   14000bb03:	mov    QWORD PTR [r9+0x8],rax
   14000bb07:	mov    rax,QWORD PTR [rdx+0x10]
   14000bb0b:	lea    rdx,[rsp+0x20]
   14000bb10:	mov    QWORD PTR [r9+0x10],rax
   14000bb14:	mov    rax,QWORD PTR [rcx]
   14000bb17:	call   QWORD PTR [rax+0x50]
   14000bb1a:	add    rsp,0x48
   14000bb1e:	ret    
   14000bb1f:	int3   
   14000bb20:	sub    rsp,0x48
   14000bb24:	mov    rax,QWORD PTR [rdx]
   14000bb27:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bb2b:	lea    r9,[rsp+0x20]
   14000bb30:	mov    QWORD PTR [r9],rax
   14000bb33:	mov    rax,QWORD PTR [rdx+0x8]
   14000bb37:	mov    QWORD PTR [r9+0x8],rax
   14000bb3b:	mov    rax,QWORD PTR [rdx+0x10]
   14000bb3f:	lea    rdx,[rsp+0x20]
   14000bb44:	mov    QWORD PTR [r9+0x10],rax
   14000bb48:	mov    rax,QWORD PTR [rcx]
   14000bb4b:	call   QWORD PTR [rax+0x58]
   14000bb4e:	add    rsp,0x48
   14000bb52:	ret    
   14000bb53:	int3   
   14000bb54:	sub    rsp,0x48
   14000bb58:	mov    rax,QWORD PTR [rdx]
   14000bb5b:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bb5f:	lea    r9,[rsp+0x20]
   14000bb64:	mov    QWORD PTR [r9],rax
   14000bb67:	mov    rax,QWORD PTR [rdx+0x8]
   14000bb6b:	mov    QWORD PTR [r9+0x8],rax
   14000bb6f:	mov    rax,QWORD PTR [rdx+0x10]
   14000bb73:	lea    rdx,[rsp+0x20]
   14000bb78:	mov    QWORD PTR [r9+0x10],rax
   14000bb7c:	mov    rax,QWORD PTR [rcx]
   14000bb7f:	call   QWORD PTR [rax+0x60]
   14000bb82:	add    rsp,0x48
   14000bb86:	ret    
   14000bb87:	int3   
   14000bb88:	sub    rsp,0x48
   14000bb8c:	mov    rax,QWORD PTR [rdx]
   14000bb8f:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bb93:	lea    r9,[rsp+0x20]
   14000bb98:	mov    QWORD PTR [r9],rax
   14000bb9b:	mov    rax,QWORD PTR [rdx+0x8]
   14000bb9f:	mov    QWORD PTR [r9+0x8],rax
   14000bba3:	mov    rax,QWORD PTR [rdx+0x10]
   14000bba7:	lea    rdx,[rsp+0x20]
   14000bbac:	mov    QWORD PTR [r9+0x10],rax
   14000bbb0:	mov    rax,QWORD PTR [rcx]
   14000bbb3:	call   QWORD PTR [rax+0x68]
   14000bbb6:	add    rsp,0x48
   14000bbba:	ret    
   14000bbbb:	int3   
   14000bbbc:	sub    rsp,0x48
   14000bbc0:	mov    rax,QWORD PTR [rdx]
   14000bbc3:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bbc7:	lea    r9,[rsp+0x20]
   14000bbcc:	mov    QWORD PTR [r9],rax
   14000bbcf:	mov    rax,QWORD PTR [rdx+0x8]
   14000bbd3:	mov    QWORD PTR [r9+0x8],rax
   14000bbd7:	mov    rax,QWORD PTR [rdx+0x10]
   14000bbdb:	lea    rdx,[rsp+0x20]
   14000bbe0:	mov    QWORD PTR [r9+0x10],rax
   14000bbe4:	mov    rax,QWORD PTR [rcx]
   14000bbe7:	call   QWORD PTR [rax+0x70]
   14000bbea:	add    rsp,0x48
   14000bbee:	ret    
   14000bbef:	int3   
   14000bbf0:	sub    rsp,0x48
   14000bbf4:	mov    rax,QWORD PTR [rdx]
   14000bbf7:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bbfb:	lea    r9,[rsp+0x20]
   14000bc00:	mov    QWORD PTR [r9],rax
   14000bc03:	mov    rax,QWORD PTR [rdx+0x8]
   14000bc07:	mov    QWORD PTR [r9+0x8],rax
   14000bc0b:	mov    rax,QWORD PTR [rdx+0x10]
   14000bc0f:	lea    rdx,[rsp+0x20]
   14000bc14:	mov    QWORD PTR [r9+0x10],rax
   14000bc18:	mov    rax,QWORD PTR [rcx]
   14000bc1b:	call   QWORD PTR [rax+0x78]
   14000bc1e:	add    rsp,0x48
   14000bc22:	ret    
   14000bc23:	int3   
   14000bc24:	sub    rsp,0x48
   14000bc28:	mov    rax,QWORD PTR [r8]
   14000bc2b:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bc2f:	lea    r10,[rsp+0x20]
   14000bc34:	mov    QWORD PTR [r10],rax
   14000bc37:	mov    rax,QWORD PTR [r8+0x8]
   14000bc3b:	mov    QWORD PTR [r10+0x8],rax
   14000bc3f:	mov    rax,QWORD PTR [r8+0x10]
   14000bc43:	lea    r8,[rsp+0x20]
   14000bc48:	mov    QWORD PTR [r10+0x10],rax
   14000bc4c:	mov    rax,QWORD PTR [rcx]
   14000bc4f:	call   QWORD PTR [rax+0x80]
   14000bc55:	add    rsp,0x48
   14000bc59:	ret    
   14000bc5a:	int3   
   14000bc5b:	int3   
   14000bc5c:	sub    rsp,0x48
   14000bc60:	mov    rax,QWORD PTR [rdx]
   14000bc63:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bc67:	lea    r9,[rsp+0x20]
   14000bc6c:	mov    QWORD PTR [r9],rax
   14000bc6f:	mov    rax,QWORD PTR [rdx+0x8]
   14000bc73:	mov    QWORD PTR [r9+0x8],rax
   14000bc77:	mov    rax,QWORD PTR [rdx+0x10]
   14000bc7b:	lea    rdx,[rsp+0x20]
   14000bc80:	mov    QWORD PTR [r9+0x10],rax
   14000bc84:	mov    rax,QWORD PTR [rcx]
   14000bc87:	call   QWORD PTR [rax+0x88]
   14000bc8d:	add    rsp,0x48
   14000bc91:	ret    
   14000bc92:	int3   
   14000bc93:	int3   
   14000bc94:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bc98:	mov    rax,QWORD PTR [rcx]
   14000bc9b:	rex.W jmp QWORD PTR [rax+0x90]
   14000bca2:	int3   
   14000bca3:	int3   
   14000bca4:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bca8:	mov    rax,QWORD PTR [rcx]
   14000bcab:	rex.W jmp QWORD PTR [rax+0x98]
   14000bcb2:	int3   
   14000bcb3:	int3   
   14000bcb4:	sub    rsp,0x48
   14000bcb8:	mov    rax,QWORD PTR [rdx]
   14000bcbb:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bcbf:	lea    r9,[rsp+0x20]
   14000bcc4:	mov    QWORD PTR [r9],rax
   14000bcc7:	mov    rax,QWORD PTR [rdx+0x8]
   14000bccb:	mov    QWORD PTR [r9+0x8],rax
   14000bccf:	mov    rax,QWORD PTR [rdx+0x10]
   14000bcd3:	lea    rdx,[rsp+0x20]
   14000bcd8:	mov    QWORD PTR [r9+0x10],rax
   14000bcdc:	mov    rax,QWORD PTR [rcx]
   14000bcdf:	call   QWORD PTR [rax+0xa0]
   14000bce5:	add    rsp,0x48
   14000bce9:	ret    
   14000bcea:	int3   
   14000bceb:	int3   
   14000bcec:	sub    rsp,0x48
   14000bcf0:	mov    rax,QWORD PTR [r8]
   14000bcf3:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bcf7:	lea    r9,[rsp+0x20]
   14000bcfc:	mov    QWORD PTR [r9],rax
   14000bcff:	mov    rax,QWORD PTR [r8+0x8]
   14000bd03:	mov    QWORD PTR [r9+0x8],rax
   14000bd07:	mov    rax,QWORD PTR [r8+0x10]
   14000bd0b:	lea    r8,[rsp+0x20]
   14000bd10:	mov    QWORD PTR [r9+0x10],rax
   14000bd14:	mov    rax,QWORD PTR [rcx]
   14000bd17:	call   QWORD PTR [rax+0xa8]
   14000bd1d:	add    rsp,0x48
   14000bd21:	ret    
   14000bd22:	int3   
   14000bd23:	int3   
   14000bd24:	sub    rsp,0x58
   14000bd28:	mov    r10,QWORD PTR [rsp+0x88]
   14000bd30:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bd34:	lea    r11,[rsp+0x30]
   14000bd39:	mov    rax,QWORD PTR [r10]
   14000bd3c:	mov    QWORD PTR [r11],rax
   14000bd3f:	mov    rax,QWORD PTR [r10+0x8]
   14000bd43:	mov    QWORD PTR [r11+0x8],rax
   14000bd47:	mov    rax,QWORD PTR [r10+0x10]
   14000bd4b:	mov    r10,QWORD PTR [rcx]
   14000bd4e:	mov    QWORD PTR [r11+0x10],rax
   14000bd52:	lea    rax,[rsp+0x30]
   14000bd57:	mov    QWORD PTR [rsp+0x28],rax
   14000bd5c:	mov    rax,QWORD PTR [rsp+0x80]
   14000bd64:	mov    QWORD PTR [rsp+0x20],rax
   14000bd69:	call   QWORD PTR [r10+0xb0]
   14000bd70:	add    rsp,0x58
   14000bd74:	ret    
   14000bd75:	int3   
   14000bd76:	int3   
   14000bd77:	int3   
   14000bd78:	sub    rsp,0x48
   14000bd7c:	mov    rax,QWORD PTR [r8]
   14000bd7f:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bd83:	lea    r10,[rsp+0x20]
   14000bd88:	mov    QWORD PTR [r10],rax
   14000bd8b:	mov    rax,QWORD PTR [r8+0x8]
   14000bd8f:	mov    QWORD PTR [r10+0x8],rax
   14000bd93:	mov    rax,QWORD PTR [r8+0x10]
   14000bd97:	lea    r8,[rsp+0x20]
   14000bd9c:	mov    QWORD PTR [r10+0x10],rax
   14000bda0:	mov    rax,QWORD PTR [rcx]
   14000bda3:	call   QWORD PTR [rax+0xb8]
   14000bda9:	add    rsp,0x48
   14000bdad:	ret    
   14000bdae:	int3   
   14000bdaf:	int3   
   14000bdb0:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bdb4:	mov    rax,QWORD PTR [rcx]
   14000bdb7:	rex.W jmp QWORD PTR [rax+0xc0]
   14000bdbe:	int3   
   14000bdbf:	int3   
   14000bdc0:	sub    rsp,0x48
   14000bdc4:	mov    rax,QWORD PTR [rdx]
   14000bdc7:	mov    rcx,QWORD PTR [rcx+0x50]
   14000bdcb:	lea    r8,[rsp+0x20]
   14000bdd0:	mov    QWORD PTR [r8],rax
   14000bdd3:	mov    rax,QWORD PTR [rdx+0x8]
   14000bdd7:	mov    QWORD PTR [r8+0x8],rax
   14000bddb:	mov    rax,QWORD PTR [rdx+0x10]
   14000bddf:	lea    rdx,[rsp+0x20]
   14000bde4:	mov    QWORD PTR [r8+0x10],rax
   14000bde8:	mov    rax,QWORD PTR [rcx]
   14000bdeb:	call   QWORD PTR [rax+0xc8]
   14000bdf1:	add    rsp,0x48
   14000bdf5:	ret    
   14000bdf6:	int3   
   14000bdf7:	int3   
   14000bdf8:	sub    rsp,0x48
   14000bdfc:	mov    rax,QWORD PTR [rdx]
   14000bdff:	mov    rcx,QWORD PTR [rcx+0x50]
   14000be03:	lea    r9,[rsp+0x20]
   14000be08:	mov    QWORD PTR [r9],rax
   14000be0b:	mov    rax,QWORD PTR [rdx+0x8]
   14000be0f:	mov    QWORD PTR [r9+0x8],rax
   14000be13:	mov    rax,QWORD PTR [rdx+0x10]
   14000be17:	lea    rdx,[rsp+0x20]
   14000be1c:	mov    QWORD PTR [r9+0x10],rax
   14000be20:	mov    rax,QWORD PTR [rcx]
   14000be23:	call   QWORD PTR [rax+0xd0]
   14000be29:	add    rsp,0x48
   14000be2d:	ret    
   14000be2e:	int3   
   14000be2f:	int3   
   14000be30:	mov    QWORD PTR [rcx+0x58],rdx
   14000be34:	xor    eax,eax
   14000be36:	ret    
   14000be37:	int3   
   14000be38:	mov    eax,0x1
   14000be3d:	ret    
   14000be3e:	int3   
   14000be3f:	int3   
   14000be40:	mov    eax,DWORD PTR [rcx+0x78]
   14000be43:	and    eax,0x10
   14000be46:	ret    
   14000be47:	int3   
   14000be48:	sub    rsp,0x28
   14000be4c:	test   rdx,rdx
   14000be4f:	jne    0x14000be57
   14000be51:	call   0x140006520
   14000be56:	int3   
   14000be57:	and    QWORD PTR [rdx],0x0
   14000be5b:	mov    eax,0x1
   14000be60:	add    rsp,0x28
   14000be64:	ret    
   14000be65:	int3   
   14000be66:	int3   
   14000be67:	int3   
   14000be68:	sub    rsp,0x28
   14000be6c:	test   r8,r8
   14000be6f:	jne    0x14000be77
   14000be71:	call   0x140006520
   14000be76:	int3   
   14000be77:	and    QWORD PTR [r8],0x0
   14000be7b:	mov    eax,0x1
   14000be80:	add    rsp,0x28
   14000be84:	ret    
   14000be85:	int3   
   14000be86:	int3   
   14000be87:	int3   
   14000be88:	lea    rax,[rip+0x2b691]        # 0x140037520
   14000be8f:	ret    
   14000be90:	mov    QWORD PTR [rsp+0x8],rbx
   14000be95:	push   rsi
   14000be96:	push   rdi
   14000be97:	push   r12
   14000be99:	sub    rsp,0x30
   14000be9d:	mov    rsi,rcx
   14000bea0:	xor    ebx,ebx
   14000bea2:	mov    QWORD PTR [rsp+0x60],rbx
   14000bea7:	call   0x140007df0
   14000beac:	lea    rdx,[rsp+0x60]
   14000beb1:	mov    rcx,QWORD PTR [rax+0xd8]
   14000beb8:	call   0x140006de8
   14000bebd:	mov    edi,eax
   14000bebf:	mov    DWORD PTR [rsp+0x58],eax
   14000bec3:	mov    WORD PTR [rsp+0x20],bx
   14000bec8:	cmp    eax,ebx
   14000beca:	jne    0x14000bed1
   14000becc:	mov    ax,bx
   14000becf:	jmp    0x14000bf1e
   14000bed1:	mov    rcx,rsi
   14000bed4:	call   QWORD PTR [rip+0x2a7ae]        # 0x140036688
   14000beda:	movzx  esi,ax
   14000bedd:	mov    WORD PTR [rsp+0x20],ax
   14000bee2:	cmp    edi,0x2
   14000bee5:	je     0x14000bf1b
   14000bee7:	mov    edi,ebx
   14000bee9:	cmp    si,bx
   14000beec:	sete   dil
   14000bef0:	cmp    edi,ebx
   14000bef2:	je     0x14000beff
   14000bef4:	call   QWORD PTR [rip+0x2a566]        # 0x140036460
   14000befa:	mov    r12d,eax
   14000befd:	jmp    0x14000bf02
   14000beff:	mov    r12d,ebx
   14000bf02:	mov    rdx,QWORD PTR [rsp+0x60]
   14000bf07:	xor    ecx,ecx
   14000bf09:	call   0x140006dcc
   14000bf0e:	cmp    edi,ebx
   14000bf10:	je     0x14000bf1b
   14000bf12:	mov    ecx,r12d
   14000bf15:	call   QWORD PTR [rip+0x2a54d]        # 0x140036468
   14000bf1b:	mov    ax,si
   14000bf1e:	mov    rbx,QWORD PTR [rsp+0x50]
   14000bf23:	add    rsp,0x30
   14000bf27:	pop    r12
   14000bf29:	pop    rdi
   14000bf2a:	pop    rsi
   14000bf2b:	ret    
   14000bf2c:	mov    rax,rsp
   14000bf2f:	mov    QWORD PTR [rax+0x8],rbx
   14000bf33:	mov    QWORD PTR [rax+0x10],rsi
   14000bf37:	mov    QWORD PTR [rax+0x18],rdi
   14000bf3b:	push   r12
   14000bf3d:	sub    rsp,0x30
   14000bf41:	mov    rdi,r8
   14000bf44:	mov    rsi,rdx
   14000bf47:	mov    r12,rcx
   14000bf4a:	and    QWORD PTR [rax-0x10],0x0
   14000bf4f:	call   0x140007df0
   14000bf54:	lea    rdx,[rsp+0x28]
   14000bf59:	mov    rcx,QWORD PTR [rax+0xd8]
   14000bf60:	call   0x140006de8
   14000bf65:	mov    ebx,eax
   14000bf67:	mov    DWORD PTR [rsp+0x58],eax
   14000bf6b:	and    DWORD PTR [rsp+0x20],0x0
   14000bf70:	test   eax,eax
   14000bf72:	je     0x14000bfbf
   14000bf74:	mov    r8,rdi
   14000bf77:	mov    rdx,rsi
   14000bf7a:	mov    rcx,r12
   14000bf7d:	call   QWORD PTR [rip+0x2a6fd]        # 0x140036680
   14000bf83:	mov    esi,eax
   14000bf85:	mov    DWORD PTR [rsp+0x20],eax
   14000bf89:	cmp    ebx,0x2
   14000bf8c:	je     0x14000bfbd
   14000bf8e:	xor    ebx,ebx
   14000bf90:	test   eax,eax
   14000bf92:	sete   bl
   14000bf95:	test   ebx,ebx
   14000bf97:	je     0x14000bfa3
   14000bf99:	call   QWORD PTR [rip+0x2a4c1]        # 0x140036460
   14000bf9f:	mov    edi,eax
   14000bfa1:	jmp    0x14000bfa5
   14000bfa3:	xor    edi,edi
   14000bfa5:	mov    rdx,QWORD PTR [rsp+0x28]
   14000bfaa:	xor    ecx,ecx
   14000bfac:	call   0x140006dcc
   14000bfb1:	test   ebx,ebx
   14000bfb3:	je     0x14000bfbd
   14000bfb5:	mov    ecx,edi
   14000bfb7:	call   QWORD PTR [rip+0x2a4ab]        # 0x140036468
   14000bfbd:	mov    eax,esi
   14000bfbf:	mov    rbx,QWORD PTR [rsp+0x40]
   14000bfc4:	mov    rsi,QWORD PTR [rsp+0x48]
   14000bfc9:	mov    rdi,QWORD PTR [rsp+0x50]
   14000bfce:	add    rsp,0x30
   14000bfd2:	pop    r12
   14000bfd4:	ret    
   14000bfd5:	int3   
   14000bfd6:	int3   
   14000bfd7:	int3   
   14000bfd8:	mov    rax,rsp
   14000bfdb:	mov    QWORD PTR [rax+0x8],rbx
   14000bfdf:	mov    QWORD PTR [rax+0x10],rsi
   14000bfe3:	mov    QWORD PTR [rax+0x18],rdi
   14000bfe7:	push   r12
   14000bfe9:	sub    rsp,0x30
   14000bfed:	mov    rdi,r8
   14000bff0:	mov    rsi,rdx
   14000bff3:	mov    r12,rcx
   14000bff6:	and    QWORD PTR [rax-0x10],0x0
   14000bffb:	call   0x140007df0
   14000c000:	lea    rdx,[rsp+0x28]
   14000c005:	mov    rcx,QWORD PTR [rax+0xd8]
   14000c00c:	call   0x140006de8
   14000c011:	mov    ebx,eax
   14000c013:	mov    DWORD PTR [rsp+0x58],eax
   14000c017:	and    DWORD PTR [rsp+0x20],0x0
   14000c01c:	test   eax,eax
   14000c01e:	je     0x14000c06b
   14000c020:	mov    r8,rdi
   14000c023:	mov    rdx,rsi
   14000c026:	mov    rcx,r12
   14000c029:	call   QWORD PTR [rip+0x2a649]        # 0x140036678
   14000c02f:	mov    esi,eax
   14000c031:	mov    DWORD PTR [rsp+0x20],eax
   14000c035:	cmp    ebx,0x2
   14000c038:	je     0x14000c069
   14000c03a:	xor    ebx,ebx
   14000c03c:	test   eax,eax
   14000c03e:	sete   bl
   14000c041:	test   ebx,ebx
   14000c043:	je     0x14000c04f
   14000c045:	call   QWORD PTR [rip+0x2a415]        # 0x140036460
   14000c04b:	mov    edi,eax
   14000c04d:	jmp    0x14000c051
   14000c04f:	xor    edi,edi
   14000c051:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c056:	xor    ecx,ecx
   14000c058:	call   0x140006dcc
   14000c05d:	test   ebx,ebx
   14000c05f:	je     0x14000c069
   14000c061:	mov    ecx,edi
   14000c063:	call   QWORD PTR [rip+0x2a3ff]        # 0x140036468
   14000c069:	mov    eax,esi
   14000c06b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c070:	mov    rsi,QWORD PTR [rsp+0x48]
   14000c075:	mov    rdi,QWORD PTR [rsp+0x50]
   14000c07a:	add    rsp,0x30
   14000c07e:	pop    r12
   14000c080:	ret    
   14000c081:	int3   
   14000c082:	int3   
   14000c083:	int3   
   14000c084:	mov    rax,rsp
   14000c087:	mov    QWORD PTR [rax+0x8],rbx
   14000c08b:	mov    QWORD PTR [rax+0x10],rsi
   14000c08f:	mov    QWORD PTR [rax+0x18],rdi
   14000c093:	mov    QWORD PTR [rax+0x20],r12
   14000c097:	push   r13
   14000c099:	sub    rsp,0x80
   14000c0a0:	mov    edi,r9d
   14000c0a3:	mov    rsi,r8
   14000c0a6:	mov    r12,rdx
   14000c0a9:	mov    r13d,ecx
   14000c0ac:	and    QWORD PTR [rax-0x20],0x0
   14000c0b1:	call   0x140007df0
   14000c0b6:	lea    rdx,[rsp+0x68]
   14000c0bb:	mov    rcx,QWORD PTR [rax+0xd8]
   14000c0c2:	call   0x140006de8
   14000c0c7:	mov    ebx,eax
   14000c0c9:	mov    DWORD PTR [rsp+0x60],eax
   14000c0cd:	and    QWORD PTR [rsp+0x70],0x0
   14000c0d3:	test   eax,eax
   14000c0d5:	jne    0x14000c0de
   14000c0d7:	xor    eax,eax
   14000c0d9:	jmp    0x14000c190
   14000c0de:	mov    rax,QWORD PTR [rsp+0xe8]
   14000c0e6:	mov    QWORD PTR [rsp+0x58],rax
   14000c0eb:	mov    rax,QWORD PTR [rsp+0xe0]
   14000c0f3:	mov    QWORD PTR [rsp+0x50],rax
   14000c0f8:	mov    rax,QWORD PTR [rsp+0xd8]
   14000c100:	mov    QWORD PTR [rsp+0x48],rax
   14000c105:	mov    rax,QWORD PTR [rsp+0xd0]
   14000c10d:	mov    QWORD PTR [rsp+0x40],rax
   14000c112:	mov    eax,DWORD PTR [rsp+0xc8]
   14000c119:	mov    DWORD PTR [rsp+0x38],eax
   14000c11d:	mov    eax,DWORD PTR [rsp+0xc0]
   14000c124:	mov    DWORD PTR [rsp+0x30],eax
   14000c128:	mov    eax,DWORD PTR [rsp+0xb8]
   14000c12f:	mov    DWORD PTR [rsp+0x28],eax
   14000c133:	mov    eax,DWORD PTR [rsp+0xb0]
   14000c13a:	mov    DWORD PTR [rsp+0x20],eax
   14000c13e:	mov    r9d,edi
   14000c141:	mov    r8,rsi
   14000c144:	mov    rdx,r12
   14000c147:	mov    ecx,r13d
   14000c14a:	call   QWORD PTR [rip+0x2a520]        # 0x140036670
   14000c150:	mov    rsi,rax
   14000c153:	mov    QWORD PTR [rsp+0x70],rax
   14000c158:	cmp    ebx,0x2
   14000c15b:	je     0x14000c18d
   14000c15d:	xor    ebx,ebx
   14000c15f:	test   rax,rax
   14000c162:	sete   bl
   14000c165:	test   ebx,ebx
   14000c167:	je     0x14000c173
   14000c169:	call   QWORD PTR [rip+0x2a2f1]        # 0x140036460
   14000c16f:	mov    edi,eax
   14000c171:	jmp    0x14000c175
   14000c173:	xor    edi,edi
   14000c175:	mov    rdx,QWORD PTR [rsp+0x68]
   14000c17a:	xor    ecx,ecx
   14000c17c:	call   0x140006dcc
   14000c181:	test   ebx,ebx
   14000c183:	je     0x14000c18d
   14000c185:	mov    ecx,edi
   14000c187:	call   QWORD PTR [rip+0x2a2db]        # 0x140036468
   14000c18d:	mov    rax,rsi
   14000c190:	lea    r11,[rsp+0x80]
   14000c198:	mov    rbx,QWORD PTR [r11+0x10]
   14000c19c:	mov    rsi,QWORD PTR [r11+0x18]
   14000c1a0:	mov    rdi,QWORD PTR [r11+0x20]
   14000c1a4:	mov    r12,QWORD PTR [r11+0x28]
   14000c1a8:	mov    rsp,r11
   14000c1ab:	pop    r13
   14000c1ad:	ret    
   14000c1ae:	int3   
   14000c1af:	int3   
   14000c1b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c1b5:	mov    QWORD PTR [rsp+0x20],rsi
   14000c1ba:	push   rdi
   14000c1bb:	sub    rsp,0x30
   14000c1bf:	mov    rdi,rcx
   14000c1c2:	and    QWORD PTR [rsp+0x50],0x0
   14000c1c8:	call   0x140007df0
   14000c1cd:	lea    rdx,[rsp+0x50]
   14000c1d2:	mov    rcx,QWORD PTR [rax+0xd8]
   14000c1d9:	call   0x140006de8
   14000c1de:	mov    ebx,eax
   14000c1e0:	mov    DWORD PTR [rsp+0x48],eax
   14000c1e4:	and    QWORD PTR [rsp+0x20],0x0
   14000c1ea:	test   eax,eax
   14000c1ec:	jne    0x14000c1f2
   14000c1ee:	xor    eax,eax
   14000c1f0:	jmp    0x14000c23b
   14000c1f2:	mov    rcx,rdi
   14000c1f5:	call   QWORD PTR [rip+0x2a27d]        # 0x140036478
   14000c1fb:	mov    rdi,rax
   14000c1fe:	mov    QWORD PTR [rsp+0x20],rax
   14000c203:	cmp    ebx,0x2
   14000c206:	je     0x14000c238
   14000c208:	xor    ebx,ebx
   14000c20a:	test   rax,rax
   14000c20d:	sete   bl
   14000c210:	test   ebx,ebx
   14000c212:	je     0x14000c21e
   14000c214:	call   QWORD PTR [rip+0x2a246]        # 0x140036460
   14000c21a:	mov    esi,eax
   14000c21c:	jmp    0x14000c220
   14000c21e:	xor    esi,esi
   14000c220:	mov    rdx,QWORD PTR [rsp+0x50]
   14000c225:	xor    ecx,ecx
   14000c227:	call   0x140006dcc
   14000c22c:	test   ebx,ebx
   14000c22e:	je     0x14000c238
   14000c230:	mov    ecx,esi
   14000c232:	call   QWORD PTR [rip+0x2a230]        # 0x140036468
   14000c238:	mov    rax,rdi
   14000c23b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000c240:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c245:	add    rsp,0x30
   14000c249:	pop    rdi
   14000c24a:	ret    
   14000c24b:	int3   
   14000c24c:	mov    rcx,QWORD PTR [rcx+0x40]
   14000c250:	xor    edx,edx
   14000c252:	rex.W jmp QWORD PTR [rip+0x2a3ef]        # 0x140036648
   14000c259:	int3   
   14000c25a:	int3   
   14000c25b:	int3   
   14000c25c:	mov    rcx,QWORD PTR [rcx+0x40]
   14000c260:	mov    edx,0x1
   14000c265:	rex.W jmp QWORD PTR [rip+0x2a3dc]        # 0x140036648
   14000c26c:	rex push rbx
   14000c26e:	sub    rsp,0x20
   14000c272:	mov    rbx,rcx
   14000c275:	call   0x14000a238
   14000c27a:	lea    rax,[rip+0x2b577]        # 0x1400377f8
   14000c281:	lea    r11,[rip+0x2b690]        # 0x140037918
   14000c288:	mov    QWORD PTR [rbx],r11
   14000c28b:	mov    QWORD PTR [rbx+0x60],rax
   14000c28f:	lea    rax,[rip+0x2b64a]        # 0x1400378e0
   14000c296:	mov    QWORD PTR [rbx+0x68],rax
   14000c29a:	xor    eax,eax
   14000c29c:	mov    QWORD PTR [rbx+0x40],rax
   14000c2a0:	mov    BYTE PTR [rbx+0x48],al
   14000c2a3:	mov    QWORD PTR [rbx+0x58],rax
   14000c2a7:	mov    QWORD PTR [rbx+0x50],rax
   14000c2ab:	mov    QWORD PTR [rbx+0x70],rax
   14000c2af:	mov    DWORD PTR [rbx+0x78],eax
   14000c2b2:	mov    QWORD PTR [rbx+0x80],rax
   14000c2b9:	mov    DWORD PTR [rbx+0x88],eax
   14000c2bf:	mov    QWORD PTR [rbx+0x90],rax
   14000c2c6:	mov    QWORD PTR [rbx+0x98],rax
   14000c2cd:	mov    QWORD PTR [rbx+0xa0],rax
   14000c2d4:	mov    rax,rbx
   14000c2d7:	add    rsp,0x20
   14000c2db:	pop    rbx
   14000c2dc:	ret    
   14000c2dd:	int3   
   14000c2de:	int3   
   14000c2df:	int3   
   14000c2e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c2e5:	push   rdi
   14000c2e6:	sub    rsp,0x20
   14000c2ea:	mov    rbx,rcx
   14000c2ed:	mov    rcx,QWORD PTR [rcx+0x40]
   14000c2f1:	mov    rdi,r8
   14000c2f4:	call   QWORD PTR [rip+0x2a3ee]        # 0x1400366e8
   14000c2fa:	mov    rcx,rbx
   14000c2fd:	call   0x1400117c8
   14000c302:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c307:	mov    DWORD PTR [rdi],eax
   14000c309:	add    rsp,0x20
   14000c30d:	pop    rdi
   14000c30e:	ret    
   14000c30f:	int3   
   14000c310:	mov    rax,rdx
   14000c313:	xor    edx,edx
   14000c315:	cmp    rax,rdx
   14000c318:	je     0x14000c31e
   14000c31a:	mov    rdx,QWORD PTR [rax+0x8]
   14000c31e:	mov    rcx,QWORD PTR [rcx+0x40]
   14000c322:	rex.W jmp QWORD PTR [rip+0x2a307]        # 0x140036630
   14000c329:	int3   
   14000c32a:	int3   
   14000c32b:	int3   
   14000c32c:	mov    rax,rsp
   14000c32f:	mov    QWORD PTR [rax+0x8],rbx
   14000c333:	mov    QWORD PTR [rax+0x10],rbp
   14000c337:	mov    QWORD PTR [rax+0x18],rsi
   14000c33b:	mov    QWORD PTR [rax+0x20],rdi
   14000c33f:	push   r12
   14000c341:	sub    rsp,0x60
   14000c345:	mov    rax,QWORD PTR [rsp+0xa0]
   14000c34d:	xor    ebx,ebx
   14000c34f:	mov    rsi,r9
   14000c352:	mov    rbp,r8
   14000c355:	mov    r12d,edx
   14000c358:	mov    rdi,rcx
   14000c35b:	cmp    rax,rbx
   14000c35e:	je     0x14000c364
   14000c360:	mov    rbx,QWORD PTR [rax+0x40]
   14000c364:	mov    rax,QWORD PTR [rsp+0x98]
   14000c36c:	mov    r11,QWORD PTR [rcx]
   14000c36f:	mov    ecx,DWORD PTR [rsp+0xa8]
   14000c376:	mov    r9d,DWORD PTR [rax+0x4]
   14000c37a:	mov    r10d,DWORD PTR [rax]
   14000c37d:	mov    r8d,DWORD PTR [rax+0xc]
   14000c381:	mov    edx,DWORD PTR [rax+0x8]
   14000c384:	mov    rax,QWORD PTR [rsp+0xb0]
   14000c38c:	sub    r8d,r9d
   14000c38f:	mov    QWORD PTR [rsp+0x58],rax
   14000c394:	mov    eax,DWORD PTR [rsp+0x90]
   14000c39b:	mov    QWORD PTR [rsp+0x50],rcx
   14000c3a0:	mov    QWORD PTR [rsp+0x48],rbx
   14000c3a5:	mov    DWORD PTR [rsp+0x40],r8d
   14000c3aa:	sub    edx,r10d
   14000c3ad:	mov    DWORD PTR [rsp+0x38],edx
   14000c3b1:	mov    DWORD PTR [rsp+0x30],r9d
   14000c3b6:	mov    DWORD PTR [rsp+0x28],r10d
   14000c3bb:	mov    r9,rsi
   14000c3be:	mov    r8,rbp
   14000c3c1:	mov    edx,r12d
   14000c3c4:	mov    rcx,rdi
   14000c3c7:	mov    DWORD PTR [rsp+0x20],eax
   14000c3cb:	call   QWORD PTR [r11+0xb8]
   14000c3d2:	lea    r11,[rsp+0x60]
   14000c3d7:	mov    rbx,QWORD PTR [r11+0x10]
   14000c3db:	mov    rbp,QWORD PTR [r11+0x18]
   14000c3df:	mov    rsi,QWORD PTR [r11+0x20]
   14000c3e3:	mov    rdi,QWORD PTR [r11+0x28]
   14000c3e7:	mov    rsp,r11
   14000c3ea:	pop    r12
   14000c3ec:	ret    
   14000c3ed:	int3   
   14000c3ee:	int3   
   14000c3ef:	int3   
   14000c3f0:	mov    rax,rsp
   14000c3f3:	mov    QWORD PTR [rax+0x8],rbx
   14000c3f7:	mov    QWORD PTR [rax+0x10],rbp
   14000c3fb:	mov    QWORD PTR [rax+0x18],rsi
   14000c3ff:	mov    QWORD PTR [rax+0x20],rdi
   14000c403:	push   r12
   14000c405:	sub    rsp,0x60
   14000c409:	mov    rax,QWORD PTR [rsp+0x98]
   14000c411:	xor    ebx,ebx
   14000c413:	mov    edi,r9d
   14000c416:	mov    rbp,r8
   14000c419:	mov    r12,rdx
   14000c41c:	mov    rsi,rcx
   14000c41f:	cmp    rax,rbx
   14000c422:	je     0x14000c428
   14000c424:	mov    rbx,QWORD PTR [rax+0x40]
   14000c428:	mov    rax,QWORD PTR [rsp+0x90]
   14000c430:	mov    r11,QWORD PTR [rcx]
   14000c433:	mov    ecx,DWORD PTR [rsp+0xa0]
   14000c43a:	mov    r9d,DWORD PTR [rax+0x4]
   14000c43e:	mov    r10d,DWORD PTR [rax]
   14000c441:	mov    r8d,DWORD PTR [rax+0xc]
   14000c445:	mov    edx,DWORD PTR [rax+0x8]
   14000c448:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c450:	sub    r8d,r9d
   14000c453:	mov    QWORD PTR [rsp+0x58],rax
   14000c458:	mov    QWORD PTR [rsp+0x50],rcx
   14000c45d:	mov    QWORD PTR [rsp+0x48],rbx
   14000c462:	mov    DWORD PTR [rsp+0x40],r8d
   14000c467:	sub    edx,r10d
   14000c46a:	bts    edi,0x1e
   14000c46e:	mov    DWORD PTR [rsp+0x38],edx
   14000c472:	mov    DWORD PTR [rsp+0x30],r9d
   14000c477:	mov    DWORD PTR [rsp+0x28],r10d
   14000c47c:	mov    r9,rbp
   14000c47f:	mov    r8,r12
   14000c482:	xor    edx,edx
   14000c484:	mov    rcx,rsi
   14000c487:	mov    DWORD PTR [rsp+0x20],edi
   14000c48b:	call   QWORD PTR [r11+0xb8]
   14000c492:	lea    r11,[rsp+0x60]
   14000c497:	mov    rbx,QWORD PTR [r11+0x10]
   14000c49b:	mov    rbp,QWORD PTR [r11+0x18]
   14000c49f:	mov    rsi,QWORD PTR [r11+0x20]
   14000c4a3:	mov    rdi,QWORD PTR [r11+0x28]
   14000c4a7:	mov    rsp,r11
   14000c4aa:	pop    r12
   14000c4ac:	ret    
   14000c4ad:	int3   
   14000c4ae:	int3   
   14000c4af:	int3   
   14000c4b0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c4b5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c4ba:	push   rdi
   14000c4bb:	sub    rsp,0x20
   14000c4bf:	mov    edi,ecx
   14000c4c1:	call   0x140007e40
   14000c4c6:	xor    esi,esi
   14000c4c8:	mov    rbx,rax
   14000c4cb:	mov    rax,QWORD PTR [rax+0x78]
   14000c4cf:	cmp    rax,rsi
   14000c4d2:	je     0x14000c4ee
   14000c4d4:	mov    rcx,QWORD PTR [rax+0x40]
   14000c4d8:	cmp    rcx,rsi
   14000c4db:	je     0x14000c4ee
   14000c4dd:	xor    r9d,r9d
   14000c4e0:	xor    r8d,r8d
   14000c4e3:	mov    edx,0x401
   14000c4e8:	call   QWORD PTR [rip+0x2a222]        # 0x140036710
   14000c4ee:	mov    rbx,QWORD PTR [rbx+0xa0]
   14000c4f5:	cmp    edi,esi
   14000c4f7:	je     0x14000c51e
   14000c4f9:	cmp    rbx,rsi
   14000c4fc:	je     0x14000c51e
   14000c4fe:	mov    ecx,0x1
   14000c503:	call   QWORD PTR [rip+0x2a2c7]        # 0x1400367d0
   14000c509:	cmp    ax,si
   14000c50c:	jl     0x14000c51e
   14000c50e:	mov    rax,QWORD PTR [rbx]
   14000c511:	or     rdx,0xffffffffffffffff
   14000c515:	mov    rcx,rbx
   14000c518:	call   QWORD PTR [rax+0x2f8]
   14000c51e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c523:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c528:	add    rsp,0x20
   14000c52c:	pop    rdi
   14000c52d:	ret    
   14000c52e:	int3   
   14000c52f:	int3   
   14000c530:	mov    QWORD PTR [rsp+0x8],rbx
   14000c535:	mov    QWORD PTR [rsp+0x10],rbp
   14000c53a:	mov    QWORD PTR [rsp+0x18],rsi
   14000c53f:	push   rdi
   14000c540:	sub    rsp,0x20
   14000c544:	mov    esi,edx
   14000c546:	mov    rbx,rcx
   14000c549:	test   rcx,rcx
   14000c54c:	jne    0x14000c554
   14000c54e:	call   0x140006520
   14000c553:	int3   
   14000c554:	mov    rcx,QWORD PTR [rcx+0x8]
   14000c558:	call   QWORD PTR [rip+0x2a1ca]        # 0x140036728
   14000c55e:	xor    edi,edi
   14000c560:	mov    ebp,eax
   14000c562:	test   eax,eax
   14000c564:	jle    0x14000c5ac
   14000c566:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c56a:	mov    edx,edi
   14000c56c:	call   QWORD PTR [rip+0x2a1ae]        # 0x140036720
   14000c572:	mov    rcx,rax
   14000c575:	call   0x140012334
   14000c57a:	test   rax,rax
   14000c57d:	je     0x14000c596
   14000c57f:	cmp    QWORD PTR [rax+0x8],rsi
   14000c583:	je     0x14000c5c3
   14000c585:	mov    edx,esi
   14000c587:	mov    rcx,rax
   14000c58a:	call   0x14000c530
   14000c58f:	test   rax,rax
   14000c592:	jne    0x14000c5ae
   14000c594:	jmp    0x14000c5a6
   14000c596:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c59a:	mov    edx,edi
   14000c59c:	call   QWORD PTR [rip+0x2a18e]        # 0x140036730
   14000c5a2:	cmp    eax,esi
   14000c5a4:	je     0x14000c5c3
   14000c5a6:	inc    edi
   14000c5a8:	cmp    edi,ebp
   14000c5aa:	jl     0x14000c566
   14000c5ac:	xor    eax,eax
   14000c5ae:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c5b3:	mov    rbp,QWORD PTR [rsp+0x38]
   14000c5b8:	mov    rsi,QWORD PTR [rsp+0x40]
   14000c5bd:	add    rsp,0x20
   14000c5c1:	pop    rdi
   14000c5c2:	ret    
   14000c5c3:	mov    rcx,QWORD PTR [rbx+0x8]
   14000c5c7:	call   0x140012358
   14000c5cc:	jmp    0x14000c5ae
   14000c5ce:	int3   
   14000c5cf:	int3   
   14000c5d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000c5d5:	mov    QWORD PTR [rsp+0x10],rsi
   14000c5da:	push   rdi
   14000c5db:	sub    rsp,0x20
   14000c5df:	mov    ebx,r8d
   14000c5e2:	mov    rsi,rdx
   14000c5e5:	mov    rdi,rcx
   14000c5e8:	call   0x140007df0
   14000c5ed:	mov    r8d,0x1
   14000c5f3:	mov    r9,QWORD PTR [rax+0x8]
   14000c5f7:	cmp    DWORD PTR [r9+0xd8],r8d
   14000c5fe:	jne    0x14000c62f
   14000c600:	cmp    ebx,r8d
   14000c603:	jne    0x14000c60d
   14000c605:	mov    r8d,0xf
   14000c60b:	jmp    0x14000c61e
   14000c60d:	cmp    ebx,0x3
   14000c610:	je     0x14000c61e
   14000c612:	xor    eax,eax
   14000c614:	mov    r8d,ebx
   14000c617:	cmp    ebx,0xb
   14000c61a:	cmove  r8d,eax
   14000c61e:	mov    rax,QWORD PTR [rdi]
   14000c621:	mov    rdx,rsi
   14000c624:	mov    rcx,rdi
   14000c627:	call   QWORD PTR [rax+0x100]
   14000c62d:	jmp    0x14000c641
   14000c62f:	mov    rax,QWORD PTR [rdi]
   14000c632:	mov    r8d,ebx
   14000c635:	mov    rdx,rsi
   14000c638:	mov    rcx,rdi
   14000c63b:	call   QWORD PTR [rax+0xf8]
   14000c641:	mov    rbx,QWORD PTR [rsp+0x30]
   14000c646:	mov    rsi,QWORD PTR [rsp+0x38]
   14000c64b:	add    rsp,0x20
   14000c64f:	pop    rdi
   14000c650:	ret    
   14000c651:	int3   
   14000c652:	int3   
   14000c653:	int3   
   14000c654:	rex push rbx
   14000c656:	sub    rsp,0x20
   14000c65a:	xor    ebx,ebx
   14000c65c:	cmp    dx,bx
   14000c65f:	jne    0x14000c681
   14000c661:	call   0x140007e40
   14000c666:	mov    rcx,QWORD PTR [rax+0x90]
   14000c66d:	cmp    rcx,rbx
   14000c670:	je     0x14000c681
   14000c672:	bt     DWORD PTR [rcx+0x4],0x1e
   14000c677:	jb     0x14000c681
   14000c679:	lea    ecx,[rbx+0x1]
   14000c67c:	call   0x14000c4b0
   14000c681:	xor    eax,eax
   14000c683:	add    rsp,0x20
   14000c687:	pop    rbx
   14000c688:	ret    
   14000c689:	int3   
   14000c68a:	int3   
   14000c68b:	int3   
   14000c68c:	rex push rbx
   14000c68e:	sub    rsp,0x40
   14000c692:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c69b:	lea    rbx,[rcx-0x60]
   14000c69f:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c6a3:	lea    rcx,[rsp+0x28]
   14000c6a8:	call   0x140007e6c
   14000c6ad:	nop
   14000c6ae:	mov    rcx,rbx
   14000c6b1:	call   0x140008e38
   14000c6b6:	mov    ebx,eax
   14000c6b8:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c6bd:	je     0x14000c6cb
   14000c6bf:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c6c4:	xor    ecx,ecx
   14000c6c6:	call   0x140006dcc
   14000c6cb:	mov    eax,ebx
   14000c6cd:	add    rsp,0x40
   14000c6d1:	pop    rbx
   14000c6d2:	ret    
   14000c6d3:	int3   
   14000c6d4:	rex push rbx
   14000c6d6:	sub    rsp,0x40
   14000c6da:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c6e3:	lea    rbx,[rcx-0x60]
   14000c6e7:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c6eb:	lea    rcx,[rsp+0x28]
   14000c6f0:	call   0x140007e6c
   14000c6f5:	nop
   14000c6f6:	mov    rcx,rbx
   14000c6f9:	call   0x140008ec8
   14000c6fe:	mov    ebx,eax
   14000c700:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c705:	je     0x14000c713
   14000c707:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c70c:	xor    ecx,ecx
   14000c70e:	call   0x140006dcc
   14000c713:	mov    eax,ebx
   14000c715:	add    rsp,0x40
   14000c719:	pop    rbx
   14000c71a:	ret    
   14000c71b:	int3   
   14000c71c:	rex push rdi
   14000c71e:	sub    rsp,0x40
   14000c722:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c72b:	mov    QWORD PTR [rsp+0x50],rbx
   14000c730:	mov    QWORD PTR [rsp+0x58],rsi
   14000c735:	mov    rdi,r8
   14000c738:	mov    rsi,rdx
   14000c73b:	lea    rbx,[rcx-0x60]
   14000c73f:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c743:	lea    rcx,[rsp+0x28]
   14000c748:	call   0x140007e6c
   14000c74d:	nop
   14000c74e:	mov    r8,rdi
   14000c751:	mov    rdx,rsi
   14000c754:	mov    rcx,rbx
   14000c757:	call   0x140008f44
   14000c75c:	mov    ebx,eax
   14000c75e:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c763:	je     0x14000c771
   14000c765:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c76a:	xor    ecx,ecx
   14000c76c:	call   0x140006dcc
   14000c771:	mov    eax,ebx
   14000c773:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c778:	mov    rsi,QWORD PTR [rsp+0x58]
   14000c77d:	add    rsp,0x40
   14000c781:	pop    rdi
   14000c782:	ret    
   14000c783:	int3   
   14000c784:	mov    rax,rsp
   14000c787:	push   rdi
   14000c788:	sub    rsp,0x70
   14000c78c:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14000c795:	mov    QWORD PTR [rax+0x8],rbx
   14000c799:	mov    QWORD PTR [rax+0x10],rbp
   14000c79d:	mov    QWORD PTR [rax+0x18],rsi
   14000c7a1:	mov    ebx,r9d
   14000c7a4:	mov    rdi,r8
   14000c7a7:	mov    esi,edx
   14000c7a9:	mov    rbp,rcx
   14000c7ac:	mov    rdx,QWORD PTR [rcx-0x28]
   14000c7b0:	lea    rcx,[rax-0x20]
   14000c7b4:	call   0x140007e6c
   14000c7b9:	nop
   14000c7ba:	mov    rax,QWORD PTR [rsp+0xc0]
   14000c7c2:	mov    QWORD PTR [rsp+0x40],rax
   14000c7c7:	mov    rax,QWORD PTR [rsp+0xb8]
   14000c7cf:	mov    QWORD PTR [rsp+0x38],rax
   14000c7d4:	mov    rax,QWORD PTR [rsp+0xb0]
   14000c7dc:	mov    QWORD PTR [rsp+0x30],rax
   14000c7e1:	mov    rax,QWORD PTR [rsp+0xa8]
   14000c7e9:	mov    QWORD PTR [rsp+0x28],rax
   14000c7ee:	movzx  eax,WORD PTR [rsp+0xa0]
   14000c7f6:	mov    WORD PTR [rsp+0x20],ax
   14000c7fb:	mov    r9d,ebx
   14000c7fe:	mov    r8,rdi
   14000c801:	mov    edx,esi
   14000c803:	mov    rcx,rbp
   14000c806:	call   0x14000ac9c
   14000c80b:	mov    ebx,eax
   14000c80d:	cmp    DWORD PTR [rsp+0x60],0x0
   14000c812:	je     0x14000c820
   14000c814:	mov    rdx,QWORD PTR [rsp+0x58]
   14000c819:	xor    ecx,ecx
   14000c81b:	call   0x140006dcc
   14000c820:	mov    eax,ebx
   14000c822:	lea    r11,[rsp+0x70]
   14000c827:	mov    rbx,QWORD PTR [r11+0x10]
   14000c82b:	mov    rbp,QWORD PTR [r11+0x18]
   14000c82f:	mov    rsi,QWORD PTR [r11+0x20]
   14000c833:	mov    rsp,r11
   14000c836:	pop    rdi
   14000c837:	ret    
   14000c838:	rex push rdi
   14000c83a:	sub    rsp,0x40
   14000c83e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c847:	mov    QWORD PTR [rsp+0x50],rbx
   14000c84c:	mov    rdi,rdx
   14000c84f:	lea    rbx,[rcx-0x60]
   14000c853:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c857:	lea    rcx,[rsp+0x28]
   14000c85c:	call   0x140007e6c
   14000c861:	nop
   14000c862:	mov    rax,QWORD PTR [rbx]
   14000c865:	mov    rdx,rdi
   14000c868:	mov    rcx,rbx
   14000c86b:	call   QWORD PTR [rax+0x128]
   14000c871:	mov    ebx,eax
   14000c873:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c878:	je     0x14000c886
   14000c87a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c87f:	xor    ecx,ecx
   14000c881:	call   0x140006dcc
   14000c886:	mov    eax,ebx
   14000c888:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c88d:	add    rsp,0x40
   14000c891:	pop    rdi
   14000c892:	ret    
   14000c893:	int3   
   14000c894:	rex push rdi
   14000c896:	sub    rsp,0x40
   14000c89a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c8a3:	mov    QWORD PTR [rsp+0x50],rbx
   14000c8a8:	mov    rdi,rdx
   14000c8ab:	lea    rbx,[rcx-0x60]
   14000c8af:	mov    rdx,QWORD PTR [rbx+0x38]
   14000c8b3:	lea    rcx,[rsp+0x28]
   14000c8b8:	call   0x140007e6c
   14000c8bd:	nop
   14000c8be:	mov    rax,QWORD PTR [rbx]
   14000c8c1:	mov    rdx,rdi
   14000c8c4:	mov    rcx,rbx
   14000c8c7:	call   QWORD PTR [rax+0x130]
   14000c8cd:	mov    ebx,eax
   14000c8cf:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c8d4:	je     0x14000c8e2
   14000c8d6:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c8db:	xor    ecx,ecx
   14000c8dd:	call   0x140006dcc
   14000c8e2:	mov    eax,ebx
   14000c8e4:	mov    rbx,QWORD PTR [rsp+0x50]
   14000c8e9:	add    rsp,0x40
   14000c8ed:	pop    rdi
   14000c8ee:	ret    
   14000c8ef:	int3   
   14000c8f0:	rex push rdi
   14000c8f2:	sub    rsp,0x60
   14000c8f6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c8ff:	mov    QWORD PTR [rsp+0x70],rbx
   14000c904:	mov    QWORD PTR [rsp+0x78],rsi
   14000c909:	mov    rsi,r8
   14000c90c:	mov    rbx,rdx
   14000c90f:	lea    rdi,[rcx-0x60]
   14000c913:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c917:	lea    rcx,[rsp+0x28]
   14000c91c:	call   0x140007e6c
   14000c921:	nop
   14000c922:	lea    rcx,[rsp+0x40]
   14000c927:	mov    rax,QWORD PTR [rbx]
   14000c92a:	mov    QWORD PTR [rcx],rax
   14000c92d:	mov    rax,QWORD PTR [rbx+0x8]
   14000c931:	mov    QWORD PTR [rcx+0x8],rax
   14000c935:	mov    rax,QWORD PTR [rbx+0x10]
   14000c939:	mov    QWORD PTR [rcx+0x10],rax
   14000c93d:	mov    rax,QWORD PTR [rdi]
   14000c940:	mov    r8,rsi
   14000c943:	lea    rdx,[rsp+0x40]
   14000c948:	mov    rcx,rdi
   14000c94b:	call   QWORD PTR [rax+0x138]
   14000c951:	mov    ebx,eax
   14000c953:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c958:	je     0x14000c966
   14000c95a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c95f:	xor    ecx,ecx
   14000c961:	call   0x140006dcc
   14000c966:	mov    eax,ebx
   14000c968:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c96d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c972:	add    rsp,0x60
   14000c976:	pop    rdi
   14000c977:	ret    
   14000c978:	rex push rdi
   14000c97a:	sub    rsp,0x60
   14000c97e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000c987:	mov    QWORD PTR [rsp+0x70],rbx
   14000c98c:	mov    QWORD PTR [rsp+0x78],rsi
   14000c991:	mov    rsi,r8
   14000c994:	mov    rbx,rdx
   14000c997:	lea    rdi,[rcx-0x60]
   14000c99b:	mov    rdx,QWORD PTR [rdi+0x38]
   14000c99f:	lea    rcx,[rsp+0x28]
   14000c9a4:	call   0x140007e6c
   14000c9a9:	nop
   14000c9aa:	lea    rcx,[rsp+0x40]
   14000c9af:	mov    rax,QWORD PTR [rbx]
   14000c9b2:	mov    QWORD PTR [rcx],rax
   14000c9b5:	mov    rax,QWORD PTR [rbx+0x8]
   14000c9b9:	mov    QWORD PTR [rcx+0x8],rax
   14000c9bd:	mov    rax,QWORD PTR [rbx+0x10]
   14000c9c1:	mov    QWORD PTR [rcx+0x10],rax
   14000c9c5:	mov    rax,QWORD PTR [rdi]
   14000c9c8:	mov    r8,rsi
   14000c9cb:	lea    rdx,[rsp+0x40]
   14000c9d0:	mov    rcx,rdi
   14000c9d3:	call   QWORD PTR [rax+0x140]
   14000c9d9:	mov    ebx,eax
   14000c9db:	cmp    DWORD PTR [rsp+0x30],0x0
   14000c9e0:	je     0x14000c9ee
   14000c9e2:	mov    rdx,QWORD PTR [rsp+0x28]
   14000c9e7:	xor    ecx,ecx
   14000c9e9:	call   0x140006dcc
   14000c9ee:	mov    eax,ebx
   14000c9f0:	mov    rbx,QWORD PTR [rsp+0x70]
   14000c9f5:	mov    rsi,QWORD PTR [rsp+0x78]
   14000c9fa:	add    rsp,0x60
   14000c9fe:	pop    rdi
   14000c9ff:	ret    
   14000ca00:	rex push rdi
   14000ca02:	sub    rsp,0x60
   14000ca06:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ca0f:	mov    QWORD PTR [rsp+0x70],rbx
   14000ca14:	mov    QWORD PTR [rsp+0x78],rsi
   14000ca19:	mov    rsi,r8
   14000ca1c:	mov    rbx,rdx
   14000ca1f:	lea    rdi,[rcx-0x60]
   14000ca23:	mov    rdx,QWORD PTR [rdi+0x38]
   14000ca27:	lea    rcx,[rsp+0x28]
   14000ca2c:	call   0x140007e6c
   14000ca31:	nop
   14000ca32:	lea    rcx,[rsp+0x40]
   14000ca37:	mov    rax,QWORD PTR [rbx]
   14000ca3a:	mov    QWORD PTR [rcx],rax
   14000ca3d:	mov    rax,QWORD PTR [rbx+0x8]
   14000ca41:	mov    QWORD PTR [rcx+0x8],rax
   14000ca45:	mov    rax,QWORD PTR [rbx+0x10]
   14000ca49:	mov    QWORD PTR [rcx+0x10],rax
   14000ca4d:	mov    rax,QWORD PTR [rdi]
   14000ca50:	mov    r8,rsi
   14000ca53:	lea    rdx,[rsp+0x40]
   14000ca58:	mov    rcx,rdi
   14000ca5b:	call   QWORD PTR [rax+0x148]
   14000ca61:	mov    ebx,eax
   14000ca63:	cmp    DWORD PTR [rsp+0x30],0x0
   14000ca68:	je     0x14000ca76
   14000ca6a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ca6f:	xor    ecx,ecx
   14000ca71:	call   0x140006dcc
   14000ca76:	mov    eax,ebx
   14000ca78:	mov    rbx,QWORD PTR [rsp+0x70]
   14000ca7d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000ca82:	add    rsp,0x60
   14000ca86:	pop    rdi
   14000ca87:	ret    
   14000ca88:	rex push rdi
   14000ca8a:	sub    rsp,0x60
   14000ca8e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ca97:	mov    QWORD PTR [rsp+0x70],rbx
   14000ca9c:	mov    QWORD PTR [rsp+0x78],rsi
   14000caa1:	mov    rsi,r8
   14000caa4:	mov    rbx,rdx
   14000caa7:	lea    rdi,[rcx-0x60]
   14000caab:	mov    rdx,QWORD PTR [rdi+0x38]
   14000caaf:	lea    rcx,[rsp+0x28]
   14000cab4:	call   0x140007e6c
   14000cab9:	nop
   14000caba:	lea    rcx,[rsp+0x40]
   14000cabf:	mov    rax,QWORD PTR [rbx]
   14000cac2:	mov    QWORD PTR [rcx],rax
   14000cac5:	mov    rax,QWORD PTR [rbx+0x8]
   14000cac9:	mov    QWORD PTR [rcx+0x8],rax
   14000cacd:	mov    rax,QWORD PTR [rbx+0x10]
   14000cad1:	mov    QWORD PTR [rcx+0x10],rax
   14000cad5:	mov    rax,QWORD PTR [rdi]
   14000cad8:	mov    r8,rsi
   14000cadb:	lea    rdx,[rsp+0x40]
   14000cae0:	mov    rcx,rdi
   14000cae3:	call   QWORD PTR [rax+0x150]
   14000cae9:	mov    ebx,eax
   14000caeb:	cmp    DWORD PTR [rsp+0x30],0x0
   14000caf0:	je     0x14000cafe
   14000caf2:	mov    rdx,QWORD PTR [rsp+0x28]
   14000caf7:	xor    ecx,ecx
   14000caf9:	call   0x140006dcc
   14000cafe:	mov    eax,ebx
   14000cb00:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cb05:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cb0a:	add    rsp,0x60
   14000cb0e:	pop    rdi
   14000cb0f:	ret    
   14000cb10:	rex push rdi
   14000cb12:	sub    rsp,0x60
   14000cb16:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cb1f:	mov    QWORD PTR [rsp+0x70],rbx
   14000cb24:	mov    QWORD PTR [rsp+0x78],rsi
   14000cb29:	mov    rsi,r8
   14000cb2c:	mov    rbx,rdx
   14000cb2f:	lea    rdi,[rcx-0x60]
   14000cb33:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cb37:	lea    rcx,[rsp+0x28]
   14000cb3c:	call   0x140007e6c
   14000cb41:	nop
   14000cb42:	lea    rcx,[rsp+0x40]
   14000cb47:	mov    rax,QWORD PTR [rbx]
   14000cb4a:	mov    QWORD PTR [rcx],rax
   14000cb4d:	mov    rax,QWORD PTR [rbx+0x8]
   14000cb51:	mov    QWORD PTR [rcx+0x8],rax
   14000cb55:	mov    rax,QWORD PTR [rbx+0x10]
   14000cb59:	mov    QWORD PTR [rcx+0x10],rax
   14000cb5d:	mov    rax,QWORD PTR [rdi]
   14000cb60:	mov    r8,rsi
   14000cb63:	lea    rdx,[rsp+0x40]
   14000cb68:	mov    rcx,rdi
   14000cb6b:	call   QWORD PTR [rax+0x158]
   14000cb71:	mov    ebx,eax
   14000cb73:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cb78:	je     0x14000cb86
   14000cb7a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cb7f:	xor    ecx,ecx
   14000cb81:	call   0x140006dcc
   14000cb86:	mov    eax,ebx
   14000cb88:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cb8d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cb92:	add    rsp,0x60
   14000cb96:	pop    rdi
   14000cb97:	ret    
   14000cb98:	rex push rdi
   14000cb9a:	sub    rsp,0x60
   14000cb9e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cba7:	mov    QWORD PTR [rsp+0x70],rbx
   14000cbac:	mov    QWORD PTR [rsp+0x78],rsi
   14000cbb1:	mov    rsi,r8
   14000cbb4:	mov    rbx,rdx
   14000cbb7:	lea    rdi,[rcx-0x60]
   14000cbbb:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cbbf:	lea    rcx,[rsp+0x28]
   14000cbc4:	call   0x140007e6c
   14000cbc9:	nop
   14000cbca:	lea    rcx,[rsp+0x40]
   14000cbcf:	mov    rax,QWORD PTR [rbx]
   14000cbd2:	mov    QWORD PTR [rcx],rax
   14000cbd5:	mov    rax,QWORD PTR [rbx+0x8]
   14000cbd9:	mov    QWORD PTR [rcx+0x8],rax
   14000cbdd:	mov    rax,QWORD PTR [rbx+0x10]
   14000cbe1:	mov    QWORD PTR [rcx+0x10],rax
   14000cbe5:	mov    rax,QWORD PTR [rdi]
   14000cbe8:	mov    r8,rsi
   14000cbeb:	lea    rdx,[rsp+0x40]
   14000cbf0:	mov    rcx,rdi
   14000cbf3:	call   QWORD PTR [rax+0x160]
   14000cbf9:	mov    ebx,eax
   14000cbfb:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cc00:	je     0x14000cc0e
   14000cc02:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cc07:	xor    ecx,ecx
   14000cc09:	call   0x140006dcc
   14000cc0e:	mov    eax,ebx
   14000cc10:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cc15:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cc1a:	add    rsp,0x60
   14000cc1e:	pop    rdi
   14000cc1f:	ret    
   14000cc20:	rex push rdi
   14000cc22:	sub    rsp,0x60
   14000cc26:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cc2f:	mov    QWORD PTR [rsp+0x70],rbx
   14000cc34:	mov    QWORD PTR [rsp+0x78],rsi
   14000cc39:	mov    rsi,r8
   14000cc3c:	mov    rbx,rdx
   14000cc3f:	lea    rdi,[rcx-0x60]
   14000cc43:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cc47:	lea    rcx,[rsp+0x28]
   14000cc4c:	call   0x140007e6c
   14000cc51:	nop
   14000cc52:	lea    rcx,[rsp+0x40]
   14000cc57:	mov    rax,QWORD PTR [rbx]
   14000cc5a:	mov    QWORD PTR [rcx],rax
   14000cc5d:	mov    rax,QWORD PTR [rbx+0x8]
   14000cc61:	mov    QWORD PTR [rcx+0x8],rax
   14000cc65:	mov    rax,QWORD PTR [rbx+0x10]
   14000cc69:	mov    QWORD PTR [rcx+0x10],rax
   14000cc6d:	mov    rax,QWORD PTR [rdi]
   14000cc70:	mov    r8,rsi
   14000cc73:	lea    rdx,[rsp+0x40]
   14000cc78:	mov    rcx,rdi
   14000cc7b:	call   QWORD PTR [rax+0x168]
   14000cc81:	mov    ebx,eax
   14000cc83:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cc88:	je     0x14000cc96
   14000cc8a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cc8f:	xor    ecx,ecx
   14000cc91:	call   0x140006dcc
   14000cc96:	mov    eax,ebx
   14000cc98:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cc9d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cca2:	add    rsp,0x60
   14000cca6:	pop    rdi
   14000cca7:	ret    
   14000cca8:	mov    rax,rsp
   14000ccab:	push   rdi
   14000ccac:	sub    rsp,0x60
   14000ccb0:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ccb9:	mov    QWORD PTR [rax+0x8],rbx
   14000ccbd:	mov    QWORD PTR [rax+0x10],rbp
   14000ccc1:	mov    QWORD PTR [rax+0x18],rsi
   14000ccc5:	mov    rsi,r9
   14000ccc8:	mov    rbx,r8
   14000cccb:	mov    rbp,rdx
   14000ccce:	lea    rdi,[rcx-0x60]
   14000ccd2:	mov    rdx,QWORD PTR [rdi+0x38]
   14000ccd6:	lea    rcx,[rax-0x40]
   14000ccda:	call   0x140007e6c
   14000ccdf:	nop
   14000cce0:	lea    rcx,[rsp+0x40]
   14000cce5:	mov    rax,QWORD PTR [rbx]
   14000cce8:	mov    QWORD PTR [rcx],rax
   14000cceb:	mov    rax,QWORD PTR [rbx+0x8]
   14000ccef:	mov    QWORD PTR [rcx+0x8],rax
   14000ccf3:	mov    rax,QWORD PTR [rbx+0x10]
   14000ccf7:	mov    QWORD PTR [rcx+0x10],rax
   14000ccfb:	mov    rax,QWORD PTR [rdi]
   14000ccfe:	mov    r9,rsi
   14000cd01:	lea    r8,[rsp+0x40]
   14000cd06:	mov    rdx,rbp
   14000cd09:	mov    rcx,rdi
   14000cd0c:	call   QWORD PTR [rax+0x170]
   14000cd12:	mov    ebx,eax
   14000cd14:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cd19:	je     0x14000cd27
   14000cd1b:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cd20:	xor    ecx,ecx
   14000cd22:	call   0x140006dcc
   14000cd27:	mov    eax,ebx
   14000cd29:	lea    r11,[rsp+0x60]
   14000cd2e:	mov    rbx,QWORD PTR [r11+0x10]
   14000cd32:	mov    rbp,QWORD PTR [r11+0x18]
   14000cd36:	mov    rsi,QWORD PTR [r11+0x20]
   14000cd3a:	mov    rsp,r11
   14000cd3d:	pop    rdi
   14000cd3e:	ret    
   14000cd3f:	int3   
   14000cd40:	rex push rdi
   14000cd42:	sub    rsp,0x60
   14000cd46:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cd4f:	mov    QWORD PTR [rsp+0x70],rbx
   14000cd54:	mov    QWORD PTR [rsp+0x78],rsi
   14000cd59:	mov    rsi,r8
   14000cd5c:	mov    rbx,rdx
   14000cd5f:	lea    rdi,[rcx-0x60]
   14000cd63:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cd67:	lea    rcx,[rsp+0x28]
   14000cd6c:	call   0x140007e6c
   14000cd71:	nop
   14000cd72:	lea    rcx,[rsp+0x40]
   14000cd77:	mov    rax,QWORD PTR [rbx]
   14000cd7a:	mov    QWORD PTR [rcx],rax
   14000cd7d:	mov    rax,QWORD PTR [rbx+0x8]
   14000cd81:	mov    QWORD PTR [rcx+0x8],rax
   14000cd85:	mov    rax,QWORD PTR [rbx+0x10]
   14000cd89:	mov    QWORD PTR [rcx+0x10],rax
   14000cd8d:	mov    rax,QWORD PTR [rdi]
   14000cd90:	mov    r8,rsi
   14000cd93:	lea    rdx,[rsp+0x40]
   14000cd98:	mov    rcx,rdi
   14000cd9b:	call   QWORD PTR [rax+0x178]
   14000cda1:	mov    ebx,eax
   14000cda3:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cda8:	je     0x14000cdb6
   14000cdaa:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cdaf:	xor    ecx,ecx
   14000cdb1:	call   0x140006dcc
   14000cdb6:	mov    eax,ebx
   14000cdb8:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cdbd:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cdc2:	add    rsp,0x60
   14000cdc6:	pop    rdi
   14000cdc7:	ret    
   14000cdc8:	rex push rdi
   14000cdca:	sub    rsp,0x40
   14000cdce:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cdd7:	mov    QWORD PTR [rsp+0x50],rbx
   14000cddc:	mov    rdi,rdx
   14000cddf:	lea    rbx,[rcx-0x60]
   14000cde3:	mov    rdx,QWORD PTR [rbx+0x38]
   14000cde7:	lea    rcx,[rsp+0x28]
   14000cdec:	call   0x140007e6c
   14000cdf1:	nop
   14000cdf2:	mov    rax,QWORD PTR [rbx]
   14000cdf5:	mov    rdx,rdi
   14000cdf8:	mov    rcx,rbx
   14000cdfb:	call   QWORD PTR [rax+0x180]
   14000ce01:	mov    ebx,eax
   14000ce03:	cmp    DWORD PTR [rsp+0x30],0x0
   14000ce08:	je     0x14000ce16
   14000ce0a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ce0f:	xor    ecx,ecx
   14000ce11:	call   0x140006dcc
   14000ce16:	mov    eax,ebx
   14000ce18:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ce1d:	add    rsp,0x40
   14000ce21:	pop    rdi
   14000ce22:	ret    
   14000ce23:	int3   
   14000ce24:	rex push rdi
   14000ce26:	sub    rsp,0x40
   14000ce2a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ce33:	mov    QWORD PTR [rsp+0x50],rbx
   14000ce38:	mov    rdi,rdx
   14000ce3b:	lea    rbx,[rcx-0x60]
   14000ce3f:	mov    rdx,QWORD PTR [rbx+0x38]
   14000ce43:	lea    rcx,[rsp+0x28]
   14000ce48:	call   0x140007e6c
   14000ce4d:	nop
   14000ce4e:	mov    rax,QWORD PTR [rbx]
   14000ce51:	mov    rdx,rdi
   14000ce54:	mov    rcx,rbx
   14000ce57:	call   QWORD PTR [rax+0x188]
   14000ce5d:	mov    ebx,eax
   14000ce5f:	cmp    DWORD PTR [rsp+0x30],0x0
   14000ce64:	je     0x14000ce72
   14000ce66:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ce6b:	xor    ecx,ecx
   14000ce6d:	call   0x140006dcc
   14000ce72:	mov    eax,ebx
   14000ce74:	mov    rbx,QWORD PTR [rsp+0x50]
   14000ce79:	add    rsp,0x40
   14000ce7d:	pop    rdi
   14000ce7e:	ret    
   14000ce7f:	int3   
   14000ce80:	rex push rdi
   14000ce82:	sub    rsp,0x60
   14000ce86:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000ce8f:	mov    QWORD PTR [rsp+0x70],rbx
   14000ce94:	mov    QWORD PTR [rsp+0x78],rsi
   14000ce99:	mov    rsi,r8
   14000ce9c:	mov    rbx,rdx
   14000ce9f:	lea    rdi,[rcx-0x60]
   14000cea3:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cea7:	lea    rcx,[rsp+0x28]
   14000ceac:	call   0x140007e6c
   14000ceb1:	nop
   14000ceb2:	lea    rcx,[rsp+0x40]
   14000ceb7:	mov    rax,QWORD PTR [rbx]
   14000ceba:	mov    QWORD PTR [rcx],rax
   14000cebd:	mov    rax,QWORD PTR [rbx+0x8]
   14000cec1:	mov    QWORD PTR [rcx+0x8],rax
   14000cec5:	mov    rax,QWORD PTR [rbx+0x10]
   14000cec9:	mov    QWORD PTR [rcx+0x10],rax
   14000cecd:	mov    rax,QWORD PTR [rdi]
   14000ced0:	mov    r8,rsi
   14000ced3:	lea    rdx,[rsp+0x40]
   14000ced8:	mov    rcx,rdi
   14000cedb:	call   QWORD PTR [rax+0x190]
   14000cee1:	mov    ebx,eax
   14000cee3:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cee8:	je     0x14000cef6
   14000ceea:	mov    rdx,QWORD PTR [rsp+0x28]
   14000ceef:	xor    ecx,ecx
   14000cef1:	call   0x140006dcc
   14000cef6:	mov    eax,ebx
   14000cef8:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cefd:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cf02:	add    rsp,0x60
   14000cf06:	pop    rdi
   14000cf07:	ret    
   14000cf08:	rex push rdi
   14000cf0a:	sub    rsp,0x60
   14000cf0e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000cf17:	mov    QWORD PTR [rsp+0x70],rbx
   14000cf1c:	mov    QWORD PTR [rsp+0x78],rsi
   14000cf21:	mov    rbx,r8
   14000cf24:	mov    esi,edx
   14000cf26:	lea    rdi,[rcx-0x60]
   14000cf2a:	mov    rdx,QWORD PTR [rdi+0x38]
   14000cf2e:	lea    rcx,[rsp+0x28]
   14000cf33:	call   0x140007e6c
   14000cf38:	nop
   14000cf39:	lea    rcx,[rsp+0x40]
   14000cf3e:	mov    rax,QWORD PTR [rbx]
   14000cf41:	mov    QWORD PTR [rcx],rax
   14000cf44:	mov    rax,QWORD PTR [rbx+0x8]
   14000cf48:	mov    QWORD PTR [rcx+0x8],rax
   14000cf4c:	mov    rax,QWORD PTR [rbx+0x10]
   14000cf50:	mov    QWORD PTR [rcx+0x10],rax
   14000cf54:	mov    rax,QWORD PTR [rdi]
   14000cf57:	lea    r8,[rsp+0x40]
   14000cf5c:	mov    edx,esi
   14000cf5e:	mov    rcx,rdi
   14000cf61:	call   QWORD PTR [rax+0x198]
   14000cf67:	mov    ebx,eax
   14000cf69:	cmp    DWORD PTR [rsp+0x30],0x0
   14000cf6e:	je     0x14000cf7c
   14000cf70:	mov    rdx,QWORD PTR [rsp+0x28]
   14000cf75:	xor    ecx,ecx
   14000cf77:	call   0x140006dcc
   14000cf7c:	mov    eax,ebx
   14000cf7e:	mov    rbx,QWORD PTR [rsp+0x70]
   14000cf83:	mov    rsi,QWORD PTR [rsp+0x78]
   14000cf88:	add    rsp,0x60
   14000cf8c:	pop    rdi
   14000cf8d:	ret    
   14000cf8e:	int3   
   14000cf8f:	int3   
   14000cf90:	mov    rax,rsp
   14000cf93:	push   rdi
   14000cf94:	sub    rsp,0x70
   14000cf98:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000cfa1:	mov    QWORD PTR [rax+0x8],rbx
   14000cfa5:	mov    QWORD PTR [rax+0x10],rbp
   14000cfa9:	mov    QWORD PTR [rax+0x18],rsi
   14000cfad:	mov    rdi,r9
   14000cfb0:	mov    rsi,r8
   14000cfb3:	mov    rbp,rdx
   14000cfb6:	lea    rbx,[rcx-0x60]
   14000cfba:	mov    rdx,QWORD PTR [rbx+0x38]
   14000cfbe:	lea    rcx,[rax-0x40]
   14000cfc2:	call   0x140007e6c
   14000cfc7:	nop
   14000cfc8:	lea    rcx,[rsp+0x50]
   14000cfcd:	mov    r10,QWORD PTR [rsp+0xa8]
   14000cfd5:	mov    rax,QWORD PTR [r10]
   14000cfd8:	mov    QWORD PTR [rcx],rax
   14000cfdb:	mov    rax,QWORD PTR [r10+0x8]
   14000cfdf:	mov    QWORD PTR [rcx+0x8],rax
   14000cfe3:	mov    rax,QWORD PTR [r10+0x10]
   14000cfe7:	mov    QWORD PTR [rcx+0x10],rax
   14000cfeb:	mov    r10,QWORD PTR [rbx]
   14000cfee:	lea    rax,[rsp+0x50]
   14000cff3:	mov    QWORD PTR [rsp+0x28],rax
   14000cff8:	mov    rax,QWORD PTR [rsp+0xa0]
   14000d000:	mov    QWORD PTR [rsp+0x20],rax
   14000d005:	mov    r9,rdi
   14000d008:	mov    r8,rsi
   14000d00b:	mov    rdx,rbp
   14000d00e:	mov    rcx,rbx
   14000d011:	call   QWORD PTR [r10+0x1a0]
   14000d018:	mov    ebx,eax
   14000d01a:	cmp    DWORD PTR [rsp+0x40],0x0
   14000d01f:	je     0x14000d02d
   14000d021:	mov    rdx,QWORD PTR [rsp+0x38]
   14000d026:	xor    ecx,ecx
   14000d028:	call   0x140006dcc
   14000d02d:	mov    eax,ebx
   14000d02f:	lea    r11,[rsp+0x70]
   14000d034:	mov    rbx,QWORD PTR [r11+0x10]
   14000d038:	mov    rbp,QWORD PTR [r11+0x18]
   14000d03c:	mov    rsi,QWORD PTR [r11+0x20]
   14000d040:	mov    rsp,r11
   14000d043:	pop    rdi
   14000d044:	ret    
   14000d045:	int3   
   14000d046:	int3   
   14000d047:	int3   
   14000d048:	mov    rax,rsp
   14000d04b:	push   rdi
   14000d04c:	sub    rsp,0x60
   14000d050:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d059:	mov    QWORD PTR [rax+0x8],rbx
   14000d05d:	mov    QWORD PTR [rax+0x10],rbp
   14000d061:	mov    QWORD PTR [rax+0x18],rsi
   14000d065:	mov    rsi,r9
   14000d068:	mov    rbx,r8
   14000d06b:	mov    ebp,edx
   14000d06d:	lea    rdi,[rcx-0x60]
   14000d071:	mov    rdx,QWORD PTR [rdi+0x38]
   14000d075:	lea    rcx,[rax-0x40]
   14000d079:	call   0x140007e6c
   14000d07e:	nop
   14000d07f:	lea    rcx,[rsp+0x40]
   14000d084:	mov    rax,QWORD PTR [rbx]
   14000d087:	mov    QWORD PTR [rcx],rax
   14000d08a:	mov    rax,QWORD PTR [rbx+0x8]
   14000d08e:	mov    QWORD PTR [rcx+0x8],rax
   14000d092:	mov    rax,QWORD PTR [rbx+0x10]
   14000d096:	mov    QWORD PTR [rcx+0x10],rax
   14000d09a:	mov    rax,QWORD PTR [rdi]
   14000d09d:	mov    r9,rsi
   14000d0a0:	lea    r8,[rsp+0x40]
   14000d0a5:	mov    edx,ebp
   14000d0a7:	mov    rcx,rdi
   14000d0aa:	call   QWORD PTR [rax+0x1a8]
   14000d0b0:	mov    ebx,eax
   14000d0b2:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d0b7:	je     0x14000d0c5
   14000d0b9:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d0be:	xor    ecx,ecx
   14000d0c0:	call   0x140006dcc
   14000d0c5:	mov    eax,ebx
   14000d0c7:	lea    r11,[rsp+0x60]
   14000d0cc:	mov    rbx,QWORD PTR [r11+0x10]
   14000d0d0:	mov    rbp,QWORD PTR [r11+0x18]
   14000d0d4:	mov    rsi,QWORD PTR [r11+0x20]
   14000d0d8:	mov    rsp,r11
   14000d0db:	pop    rdi
   14000d0dc:	ret    
   14000d0dd:	int3   
   14000d0de:	int3   
   14000d0df:	int3   
   14000d0e0:	mov    rax,rsp
   14000d0e3:	push   rdi
   14000d0e4:	sub    rsp,0x40
   14000d0e8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d0f1:	mov    QWORD PTR [rax+0x8],rbx
   14000d0f5:	mov    QWORD PTR [rax+0x10],rbp
   14000d0f9:	mov    QWORD PTR [rax+0x18],rsi
   14000d0fd:	mov    rdi,r9
   14000d100:	mov    esi,r8d
   14000d103:	mov    ebp,edx
   14000d105:	lea    rbx,[rcx-0x60]
   14000d109:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d10d:	lea    rcx,[rax-0x20]
   14000d111:	call   0x140007e6c
   14000d116:	nop
   14000d117:	mov    rax,QWORD PTR [rbx]
   14000d11a:	mov    r9,rdi
   14000d11d:	mov    r8d,esi
   14000d120:	mov    edx,ebp
   14000d122:	mov    rcx,rbx
   14000d125:	call   QWORD PTR [rax+0x1b0]
   14000d12b:	mov    ebx,eax
   14000d12d:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d132:	je     0x14000d140
   14000d134:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d139:	xor    ecx,ecx
   14000d13b:	call   0x140006dcc
   14000d140:	mov    eax,ebx
   14000d142:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d147:	mov    rbp,QWORD PTR [rsp+0x58]
   14000d14c:	mov    rsi,QWORD PTR [rsp+0x60]
   14000d151:	add    rsp,0x40
   14000d155:	pop    rdi
   14000d156:	ret    
   14000d157:	int3   
   14000d158:	rex push rdi
   14000d15a:	sub    rsp,0x60
   14000d15e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d167:	mov    QWORD PTR [rsp+0x70],rbx
   14000d16c:	mov    rbx,rdx
   14000d16f:	lea    rdi,[rcx-0x60]
   14000d173:	mov    rdx,QWORD PTR [rdi+0x38]
   14000d177:	lea    rcx,[rsp+0x28]
   14000d17c:	call   0x140007e6c
   14000d181:	nop
   14000d182:	lea    rcx,[rsp+0x40]
   14000d187:	mov    rax,QWORD PTR [rbx]
   14000d18a:	mov    QWORD PTR [rcx],rax
   14000d18d:	mov    rax,QWORD PTR [rbx+0x8]
   14000d191:	mov    QWORD PTR [rcx+0x8],rax
   14000d195:	mov    rax,QWORD PTR [rbx+0x10]
   14000d199:	mov    QWORD PTR [rcx+0x10],rax
   14000d19d:	mov    rax,QWORD PTR [rdi]
   14000d1a0:	lea    rdx,[rsp+0x40]
   14000d1a5:	mov    rcx,rdi
   14000d1a8:	call   QWORD PTR [rax+0x1b8]
   14000d1ae:	mov    ebx,eax
   14000d1b0:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d1b5:	je     0x14000d1c3
   14000d1b7:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d1bc:	xor    ecx,ecx
   14000d1be:	call   0x140006dcc
   14000d1c3:	mov    eax,ebx
   14000d1c5:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d1ca:	add    rsp,0x60
   14000d1ce:	pop    rdi
   14000d1cf:	ret    
   14000d1d0:	rex push rdi
   14000d1d2:	sub    rsp,0x60
   14000d1d6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d1df:	mov    QWORD PTR [rsp+0x70],rbx
   14000d1e4:	mov    QWORD PTR [rsp+0x78],rsi
   14000d1e9:	mov    rsi,r8
   14000d1ec:	mov    rbx,rdx
   14000d1ef:	lea    rdi,[rcx-0x60]
   14000d1f3:	mov    rdx,QWORD PTR [rdi+0x38]
   14000d1f7:	lea    rcx,[rsp+0x28]
   14000d1fc:	call   0x140007e6c
   14000d201:	nop
   14000d202:	lea    rcx,[rsp+0x40]
   14000d207:	mov    rax,QWORD PTR [rbx]
   14000d20a:	mov    QWORD PTR [rcx],rax
   14000d20d:	mov    rax,QWORD PTR [rbx+0x8]
   14000d211:	mov    QWORD PTR [rcx+0x8],rax
   14000d215:	mov    rax,QWORD PTR [rbx+0x10]
   14000d219:	mov    QWORD PTR [rcx+0x10],rax
   14000d21d:	mov    rax,QWORD PTR [rdi]
   14000d220:	mov    r8,rsi
   14000d223:	lea    rdx,[rsp+0x40]
   14000d228:	mov    rcx,rdi
   14000d22b:	call   QWORD PTR [rax+0x1c0]
   14000d231:	mov    ebx,eax
   14000d233:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d238:	je     0x14000d246
   14000d23a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d23f:	xor    ecx,ecx
   14000d241:	call   0x140006dcc
   14000d246:	mov    eax,ebx
   14000d248:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d24d:	mov    rsi,QWORD PTR [rsp+0x78]
   14000d252:	add    rsp,0x60
   14000d256:	pop    rdi
   14000d257:	ret    
   14000d258:	rex push rdi
   14000d25a:	sub    rsp,0x60
   14000d25e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d267:	mov    QWORD PTR [rsp+0x70],rbx
   14000d26c:	mov    QWORD PTR [rsp+0x78],rsi
   14000d271:	mov    rsi,r8
   14000d274:	mov    rbx,rdx
   14000d277:	lea    rdi,[rcx-0x60]
   14000d27b:	mov    rdx,QWORD PTR [rdi+0x38]
   14000d27f:	lea    rcx,[rsp+0x28]
   14000d284:	call   0x140007e6c
   14000d289:	nop
   14000d28a:	lea    rcx,[rsp+0x40]
   14000d28f:	mov    rax,QWORD PTR [rbx]
   14000d292:	mov    QWORD PTR [rcx],rax
   14000d295:	mov    rax,QWORD PTR [rbx+0x8]
   14000d299:	mov    QWORD PTR [rcx+0x8],rax
   14000d29d:	mov    rax,QWORD PTR [rbx+0x10]
   14000d2a1:	mov    QWORD PTR [rcx+0x10],rax
   14000d2a5:	mov    rax,QWORD PTR [rdi]
   14000d2a8:	mov    r8,rsi
   14000d2ab:	lea    rdx,[rsp+0x40]
   14000d2b0:	mov    rcx,rdi
   14000d2b3:	call   QWORD PTR [rax+0x1c8]
   14000d2b9:	mov    ebx,eax
   14000d2bb:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d2c0:	je     0x14000d2ce
   14000d2c2:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d2c7:	xor    ecx,ecx
   14000d2c9:	call   0x140006dcc
   14000d2ce:	mov    eax,ebx
   14000d2d0:	mov    rbx,QWORD PTR [rsp+0x70]
   14000d2d5:	mov    rsi,QWORD PTR [rsp+0x78]
   14000d2da:	add    rsp,0x60
   14000d2de:	pop    rdi
   14000d2df:	ret    
   14000d2e0:	rex push rbx
   14000d2e2:	sub    rsp,0x40
   14000d2e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d2ef:	lea    rbx,[rcx-0x68]
   14000d2f3:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d2f7:	lea    rcx,[rsp+0x28]
   14000d2fc:	call   0x140007e6c
   14000d301:	nop
   14000d302:	mov    rcx,rbx
   14000d305:	call   0x140008e38
   14000d30a:	mov    ebx,eax
   14000d30c:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d311:	je     0x14000d31f
   14000d313:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d318:	xor    ecx,ecx
   14000d31a:	call   0x140006dcc
   14000d31f:	mov    eax,ebx
   14000d321:	add    rsp,0x40
   14000d325:	pop    rbx
   14000d326:	ret    
   14000d327:	int3   
   14000d328:	rex push rbx
   14000d32a:	sub    rsp,0x40
   14000d32e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d337:	lea    rbx,[rcx-0x68]
   14000d33b:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d33f:	lea    rcx,[rsp+0x28]
   14000d344:	call   0x140007e6c
   14000d349:	nop
   14000d34a:	mov    rcx,rbx
   14000d34d:	call   0x140008ec8
   14000d352:	mov    ebx,eax
   14000d354:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d359:	je     0x14000d367
   14000d35b:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d360:	xor    ecx,ecx
   14000d362:	call   0x140006dcc
   14000d367:	mov    eax,ebx
   14000d369:	add    rsp,0x40
   14000d36d:	pop    rbx
   14000d36e:	ret    
   14000d36f:	int3   
   14000d370:	rex push rdi
   14000d372:	sub    rsp,0x40
   14000d376:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d37f:	mov    QWORD PTR [rsp+0x50],rbx
   14000d384:	mov    QWORD PTR [rsp+0x58],rsi
   14000d389:	mov    rdi,r8
   14000d38c:	mov    rsi,rdx
   14000d38f:	lea    rbx,[rcx-0x68]
   14000d393:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d397:	lea    rcx,[rsp+0x28]
   14000d39c:	call   0x140007e6c
   14000d3a1:	nop
   14000d3a2:	mov    r8,rdi
   14000d3a5:	mov    rdx,rsi
   14000d3a8:	mov    rcx,rbx
   14000d3ab:	call   0x140008f44
   14000d3b0:	mov    ebx,eax
   14000d3b2:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d3b7:	je     0x14000d3c5
   14000d3b9:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d3be:	xor    ecx,ecx
   14000d3c0:	call   0x140006dcc
   14000d3c5:	mov    eax,ebx
   14000d3c7:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d3cc:	mov    rsi,QWORD PTR [rsp+0x58]
   14000d3d1:	add    rsp,0x40
   14000d3d5:	pop    rdi
   14000d3d6:	ret    
   14000d3d7:	int3   
   14000d3d8:	rex push rdi
   14000d3da:	sub    rsp,0x40
   14000d3de:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d3e7:	mov    QWORD PTR [rsp+0x50],rbx
   14000d3ec:	mov    rdi,rdx
   14000d3ef:	lea    rbx,[rcx-0x68]
   14000d3f3:	mov    rdx,QWORD PTR [rbx+0x38]
   14000d3f7:	lea    rcx,[rsp+0x28]
   14000d3fc:	call   0x140007e6c
   14000d401:	nop
   14000d402:	mov    rax,QWORD PTR [rbx]
   14000d405:	mov    rdx,rdi
   14000d408:	mov    rcx,rbx
   14000d40b:	call   QWORD PTR [rax+0x1d0]
   14000d411:	mov    ebx,eax
   14000d413:	cmp    DWORD PTR [rsp+0x30],0x0
   14000d418:	je     0x14000d426
   14000d41a:	mov    rdx,QWORD PTR [rsp+0x28]
   14000d41f:	xor    ecx,ecx
   14000d421:	call   0x140006dcc
   14000d426:	mov    eax,ebx
   14000d428:	mov    rbx,QWORD PTR [rsp+0x50]
   14000d42d:	add    rsp,0x40
   14000d431:	pop    rdi
   14000d432:	ret    
   14000d433:	int3   
   14000d434:	mov    QWORD PTR [rsp+0x8],rbx
   14000d439:	push   rdi
   14000d43a:	sub    rsp,0x30
   14000d43e:	mov    rbx,rdx
   14000d441:	mov    rdi,rcx
   14000d444:	test   rdx,rdx
   14000d447:	jne    0x14000d450
   14000d449:	mov    eax,0x80004003
   14000d44e:	jmp    0x14000d47a
   14000d450:	mov    rdx,QWORD PTR [rcx-0x30]
   14000d454:	lea    rcx,[rsp+0x20]
   14000d459:	call   0x140007e6c
   14000d45e:	cmp    DWORD PTR [rsp+0x28],0x0
   14000d463:	mov    r11,QWORD PTR [rdi-0x28]
   14000d467:	mov    QWORD PTR [rbx],r11
   14000d46a:	je     0x14000d478
   14000d46c:	mov    rdx,QWORD PTR [rsp+0x20]
   14000d471:	xor    ecx,ecx
   14000d473:	call   0x140006dcc
   14000d478:	xor    eax,eax
   14000d47a:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d47f:	add    rsp,0x30
   14000d483:	pop    rdi
   14000d484:	ret    
   14000d485:	int3   
   14000d486:	int3   
   14000d487:	int3   
   14000d488:	sub    rsp,0x28
   14000d48c:	mov    rcx,QWORD PTR [rcx]
   14000d48f:	test   rcx,rcx
   14000d492:	je     0x14000d49a
   14000d494:	mov    rax,QWORD PTR [rcx]
   14000d497:	call   QWORD PTR [rax+0x10]
   14000d49a:	add    rsp,0x28
   14000d49e:	ret    
   14000d49f:	int3   
   14000d4a0:	mov    QWORD PTR [rsp+0x8],rbx
   14000d4a5:	mov    QWORD PTR [rsp+0x10],rbp
   14000d4aa:	mov    QWORD PTR [rsp+0x18],rsi
   14000d4af:	push   rdi
   14000d4b0:	sub    rsp,0xa0
   14000d4b7:	mov    rdi,rdx
   14000d4ba:	mov    rsi,rcx
   14000d4bd:	call   0x1400117c8
   14000d4c2:	xor    ebx,ebx
   14000d4c4:	mov    ebp,eax
   14000d4c6:	cmp    rdi,rbx
   14000d4c9:	je     0x14000d4d1
   14000d4cb:	mov    rdi,QWORD PTR [rdi+0x40]
   14000d4cf:	jmp    0x14000d511
   14000d4d1:	bt     eax,0x1e
   14000d4d5:	mov    rcx,QWORD PTR [rsi+0x40]
   14000d4d9:	jae    0x14000d4e3
   14000d4db:	call   QWORD PTR [rip+0x2921f]        # 0x140036700
   14000d4e1:	jmp    0x14000d4ee
   14000d4e3:	mov    edx,0x4
   14000d4e8:	call   QWORD PTR [rip+0x29252]        # 0x140036740
   14000d4ee:	mov    rdi,rax
   14000d4f1:	cmp    rax,rbx
   14000d4f4:	je     0x14000d511
   14000d4f6:	xor    r9d,r9d
   14000d4f9:	xor    r8d,r8d
   14000d4fc:	mov    edx,0x36b
   14000d501:	mov    rcx,rax
   14000d504:	call   QWORD PTR [rip+0x29206]        # 0x140036710
   14000d50a:	cmp    rax,rbx
   14000d50d:	cmovne rdi,rax
   14000d511:	mov    rcx,QWORD PTR [rsi+0x40]
   14000d515:	lea    rdx,[rsp+0x50]
   14000d51a:	call   QWORD PTR [rip+0x291c8]        # 0x1400366e8
   14000d520:	bt     ebp,0x1e
   14000d524:	jb     0x14000d5e9
   14000d52a:	cmp    rdi,rbx
   14000d52d:	je     0x14000d54c
   14000d52f:	mov    edx,0xfffffff0
   14000d534:	mov    rcx,rdi
   14000d537:	call   QWORD PTR [rip+0x291cb]        # 0x140036708
   14000d53d:	bt     eax,0x1c
   14000d541:	jae    0x14000d549
   14000d543:	bt     eax,0x1d
   14000d547:	jae    0x14000d54c
   14000d549:	mov    rdi,rbx
   14000d54c:	mov    DWORD PTR [rsp+0x70],0x28
   14000d554:	cmp    rdi,rbx
   14000d557:	jne    0x14000d5ac
   14000d559:	call   0x140008c30
   14000d55e:	cmp    rax,rbx
   14000d561:	je     0x14000d571
   14000d563:	mov    rdx,QWORD PTR [rax]
   14000d566:	mov    rcx,rax
   14000d569:	call   QWORD PTR [rdx+0xe8]
   14000d56f:	jmp    0x14000d574
   14000d571:	mov    rax,rbx
   14000d574:	cmp    rax,rbx
   14000d577:	je     0x14000d57d
   14000d579:	mov    rbx,QWORD PTR [rax+0x40]
   14000d57d:	mov    edx,0x1
   14000d582:	mov    rcx,rbx
   14000d585:	call   0x14000ab6c
   14000d58a:	lea    rdx,[rsp+0x70]
   14000d58f:	mov    rcx,rax
   14000d592:	call   0x14000abec
   14000d597:	lea    rdx,[rsp+0x84]
   14000d59f:	lea    rcx,[rsp+0x60]
   14000d5a4:	call   QWORD PTR [rip+0x290ee]        # 0x140036698
   14000d5aa:	jmp    0x14000d5d4
   14000d5ac:	lea    rdx,[rsp+0x60]
   14000d5b1:	mov    rcx,rdi
   14000d5b4:	call   QWORD PTR [rip+0x2912e]        # 0x1400366e8
   14000d5ba:	mov    edx,0x2
   14000d5bf:	mov    rcx,rdi
   14000d5c2:	call   0x14000ab6c
   14000d5c7:	lea    rdx,[rsp+0x70]
   14000d5cc:	mov    rcx,rax
   14000d5cf:	call   0x14000abec
   14000d5d4:	lea    rdx,[rsp+0x84]
   14000d5dc:	lea    rcx,[rsp+0x40]
   14000d5e1:	call   QWORD PTR [rip+0x290b1]        # 0x140036698
   14000d5e7:	jmp    0x14000d629
   14000d5e9:	mov    rcx,QWORD PTR [rsi+0x40]
   14000d5ed:	call   QWORD PTR [rip+0x2910d]        # 0x140036700
   14000d5f3:	lea    rdx,[rsp+0x40]
   14000d5f8:	mov    rcx,rax
   14000d5fb:	mov    rbx,rax
   14000d5fe:	call   QWORD PTR [rip+0x2905c]        # 0x140036660
   14000d604:	lea    rdx,[rsp+0x60]
   14000d609:	mov    rcx,rdi
   14000d60c:	call   QWORD PTR [rip+0x2904e]        # 0x140036660
   14000d612:	lea    r8,[rsp+0x60]
   14000d617:	mov    r9d,0x2
   14000d61d:	mov    rdx,rbx
   14000d620:	mov    rcx,rdi
   14000d623:	call   QWORD PTR [rip+0x28fff]        # 0x140036628
   14000d629:	mov    ecx,DWORD PTR [rsp+0x60]
   14000d62d:	mov    eax,DWORD PTR [rsp+0x68]
   14000d631:	mov    r8d,DWORD PTR [rsp+0x58]
   14000d636:	sub    r8d,DWORD PTR [rsp+0x50]
   14000d63b:	mov    r11d,DWORD PTR [rsp+0x5c]
   14000d640:	add    eax,ecx
   14000d642:	sub    r11d,DWORD PTR [rsp+0x54]
   14000d647:	mov    ecx,DWORD PTR [rsp+0x64]
   14000d64b:	cdq    
   14000d64c:	sub    eax,edx
   14000d64e:	sar    eax,1
   14000d650:	mov    r10d,eax
   14000d653:	mov    eax,r8d
   14000d656:	cdq    
   14000d657:	sub    eax,edx
   14000d659:	sar    eax,1
   14000d65b:	sub    r10d,eax
   14000d65e:	mov    eax,DWORD PTR [rsp+0x6c]
   14000d662:	add    eax,ecx
   14000d664:	cdq    
   14000d665:	sub    eax,edx
   14000d667:	sar    eax,1
   14000d669:	mov    r9d,eax
   14000d66c:	mov    eax,r11d
   14000d66f:	cdq    
   14000d670:	sub    eax,edx
   14000d672:	sar    eax,1
   14000d674:	sub    r9d,eax
   14000d677:	lea    eax,[r8+r10*1]
   14000d67b:	cmp    eax,DWORD PTR [rsp+0x48]
   14000d67f:	jle    0x14000d690
   14000d681:	mov    r10d,DWORD PTR [rsp+0x50]
   14000d686:	sub    r10d,DWORD PTR [rsp+0x58]
   14000d68b:	add    r10d,DWORD PTR [rsp+0x48]
   14000d690:	cmp    r10d,DWORD PTR [rsp+0x40]
   14000d695:	lea    eax,[r11+r9*1]
   14000d699:	cmovl  r10d,DWORD PTR [rsp+0x40]
   14000d69f:	cmp    eax,DWORD PTR [rsp+0x4c]
   14000d6a3:	jle    0x14000d6b4
   14000d6a5:	mov    r9d,DWORD PTR [rsp+0x54]
   14000d6aa:	sub    r9d,DWORD PTR [rsp+0x5c]
   14000d6af:	add    r9d,DWORD PTR [rsp+0x4c]
   14000d6b4:	cmp    r9d,DWORD PTR [rsp+0x44]
   14000d6b9:	mov    DWORD PTR [rsp+0x30],0x15
   14000d6c1:	mov    r8d,r10d
   14000d6c4:	cmovl  r9d,DWORD PTR [rsp+0x44]
   14000d6ca:	or     eax,0xffffffff
   14000d6cd:	xor    edx,edx
   14000d6cf:	mov    DWORD PTR [rsp+0x28],eax
   14000d6d3:	mov    rcx,rsi
   14000d6d6:	mov    DWORD PTR [rsp+0x20],eax
   14000d6da:	call   0x140011890
   14000d6df:	lea    r11,[rsp+0xa0]
   14000d6e7:	mov    rbx,QWORD PTR [r11+0x10]
   14000d6eb:	mov    rbp,QWORD PTR [r11+0x18]
   14000d6ef:	mov    rsi,QWORD PTR [r11+0x20]
   14000d6f3:	mov    rsp,r11
   14000d6f6:	pop    rdi
   14000d6f7:	ret    
   14000d6f8:	sub    rsp,0x28
   14000d6fc:	mov    eax,DWORD PTR [rcx+0x78]
   14000d6ff:	mov    DWORD PTR [rcx+0x88],edx
   14000d705:	test   al,0x10
   14000d707:	je     0x14000d721
   14000d709:	and    eax,0xffffffef
   14000d70c:	xor    r9d,r9d
   14000d70f:	xor    r8d,r8d
   14000d712:	mov    DWORD PTR [rcx+0x78],eax
   14000d715:	mov    rcx,QWORD PTR [rcx+0x40]
   14000d719:	xor    edx,edx
   14000d71b:	call   QWORD PTR [rip+0x28f47]        # 0x140036668
   14000d721:	add    rsp,0x28
   14000d725:	ret    
   14000d726:	int3   
   14000d727:	int3   
   14000d728:	sub    rsp,0x38
   14000d72c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d735:	mov    ecx,0xa8
   14000d73a:	call   0x140006290
   14000d73f:	mov    rcx,rax
   14000d742:	mov    QWORD PTR [rsp+0x40],rax
   14000d747:	xor    eax,eax
   14000d749:	cmp    rcx,rax
   14000d74c:	je     0x14000d754
   14000d74e:	call   0x14000c26c
   14000d753:	nop
   14000d754:	add    rsp,0x38
   14000d758:	ret    
   14000d759:	int3   
   14000d75a:	int3   
   14000d75b:	int3   
   14000d75c:	mov    QWORD PTR [rsp+0x8],rcx
   14000d761:	sub    rsp,0x38
   14000d765:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000d76e:	mov    QWORD PTR [rsp+0x48],rcx
   14000d773:	test   rcx,rcx
   14000d776:	je     0x14000d77e
   14000d778:	call   0x14000c26c
   14000d77d:	nop
   14000d77e:	add    rsp,0x38
   14000d782:	ret    
   14000d783:	int3   
   14000d784:	mov    QWORD PTR [rsp+0x8],rbx
   14000d789:	push   rdi
   14000d78a:	sub    rsp,0x20
   14000d78e:	cmp    QWORD PTR [rcx+0x20],0x0
   14000d793:	mov    rdi,rdx
   14000d796:	mov    rbx,rcx
   14000d799:	jne    0x14000d7e1
   14000d79b:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d7a0:	jne    0x14000d7cc
   14000d7a2:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d7a6:	call   QWORD PTR [rip+0x28cf4]        # 0x1400364a0
   14000d7ac:	mov    QWORD PTR [rbx+0x8],rax
   14000d7b0:	test   rax,rax
   14000d7b3:	jne    0x14000d7cc
   14000d7b5:	mov    rcx,QWORD PTR [rbx+0x18]
   14000d7b9:	call   QWORD PTR [rip+0x28cb9]        # 0x140036478
   14000d7bf:	test   rax,rax
   14000d7c2:	mov    QWORD PTR [rbx+0x8],rax
   14000d7c6:	setne  al
   14000d7c9:	mov    BYTE PTR [rbx+0x10],al
   14000d7cc:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d7d0:	lea    rdx,[rip+0x2a8e9]        # 0x1400380c0
   14000d7d7:	call   QWORD PTR [rip+0x28ccb]        # 0x1400364a8
   14000d7dd:	mov    QWORD PTR [rbx+0x20],rax
   14000d7e1:	mov    rax,QWORD PTR [rbx+0x20]
   14000d7e5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d7ea:	mov    QWORD PTR [rdi],rax
   14000d7ed:	mov    rax,rdi
   14000d7f0:	add    rsp,0x20
   14000d7f4:	pop    rdi
   14000d7f5:	ret    
   14000d7f6:	int3   
   14000d7f7:	int3   
   14000d7f8:	mov    QWORD PTR [rsp+0x8],rbx
   14000d7fd:	push   rdi
   14000d7fe:	sub    rsp,0x20
   14000d802:	mov    rdi,rcx
   14000d805:	and    QWORD PTR [rsp+0x40],0x0
   14000d80b:	call   0x140007df0
   14000d810:	lea    rdx,[rsp+0x40]
   14000d815:	mov    rcx,QWORD PTR [rax+0xd8]
   14000d81c:	call   0x140006de8
   14000d821:	mov    ebx,eax
   14000d823:	mov    DWORD PTR [rsp+0x38],eax
   14000d827:	test   eax,eax
   14000d829:	je     0x14000d862
   14000d82b:	lea    rdx,[rsp+0x48]
   14000d830:	mov    rcx,rdi
   14000d833:	call   0x14000d784
   14000d838:	mov    r11,QWORD PTR [rdi+0x20]
   14000d83c:	xor    ecx,ecx
   14000d83e:	test   r11,r11
   14000d841:	setne  cl
   14000d844:	test   ecx,ecx
   14000d846:	jne    0x14000d84d
   14000d848:	call   0x140006520
   14000d84d:	call   r11
   14000d850:	nop
   14000d851:	cmp    ebx,0x2
   14000d854:	je     0x14000d862
   14000d856:	mov    rdx,QWORD PTR [rsp+0x40]
   14000d85b:	xor    ecx,ecx
   14000d85d:	call   0x140006dcc
   14000d862:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d867:	add    rsp,0x20
   14000d86b:	pop    rdi
   14000d86c:	ret    
   14000d86d:	int3   
   14000d86e:	int3   
   14000d86f:	int3   
   14000d870:	mov    QWORD PTR [rsp+0x8],rbx
   14000d875:	push   rdi
   14000d876:	sub    rsp,0x20
   14000d87a:	cmp    QWORD PTR [rcx+0x28],0x0
   14000d87f:	mov    rdi,rdx
   14000d882:	mov    rbx,rcx
   14000d885:	jne    0x14000d8cd
   14000d887:	cmp    QWORD PTR [rcx+0x8],0x0
   14000d88c:	jne    0x14000d8b8
   14000d88e:	mov    rcx,QWORD PTR [rcx+0x18]
   14000d892:	call   QWORD PTR [rip+0x28c08]        # 0x1400364a0
   14000d898:	mov    QWORD PTR [rbx+0x8],rax
   14000d89c:	test   rax,rax
   14000d89f:	jne    0x14000d8b8
   14000d8a1:	mov    rcx,QWORD PTR [rbx+0x18]
   14000d8a5:	call   QWORD PTR [rip+0x28bcd]        # 0x140036478
   14000d8ab:	test   rax,rax
   14000d8ae:	mov    QWORD PTR [rbx+0x8],rax
   14000d8b2:	setne  al
   14000d8b5:	mov    BYTE PTR [rbx+0x10],al
   14000d8b8:	mov    rcx,QWORD PTR [rbx+0x8]
   14000d8bc:	lea    rdx,[rip+0x2a815]        # 0x1400380d8
   14000d8c3:	call   QWORD PTR [rip+0x28bdf]        # 0x1400364a8
   14000d8c9:	mov    QWORD PTR [rbx+0x28],rax
   14000d8cd:	mov    rax,QWORD PTR [rbx+0x28]
   14000d8d1:	mov    rbx,QWORD PTR [rsp+0x30]
   14000d8d6:	mov    QWORD PTR [rdi],rax
   14000d8d9:	mov    rax,rdi
   14000d8dc:	add    rsp,0x20
   14000d8e0:	pop    rdi
   14000d8e1:	ret    
   14000d8e2:	int3   
   14000d8e3:	int3   
   14000d8e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000d8e9:	mov    QWORD PTR [rsp+0x10],rsi
   14000d8ee:	push   rdi
   14000d8ef:	sub    rsp,0x30
   14000d8f3:	mov    rsi,rdx
   14000d8f6:	mov    rdi,rcx
   14000d8f9:	and    QWORD PTR [rsp+0x58],0x0
   14000d8ff:	call   0x140007df0
   14000d904:	lea    rdx,[rsp+0x58]
   14000d909:	mov    rcx,QWORD PTR [rax+0xd8]
   14000d910:	call   0x140006de8
   14000d915:	mov    ebx,eax
   14000d917:	mov    DWORD PTR [rsp+0x50],eax
   14000d91b:	and    DWORD PTR [rsp+0x20],0x0
   14000d920:	test   eax,eax
   14000d922:	je     0x14000d988
   14000d924:	lea    rdx,[rsp+0x28]
   14000d929:	mov    rcx,rdi
   14000d92c:	call   0x14000d870
   14000d931:	mov    r11,QWORD PTR [rdi+0x28]
   14000d935:	xor    eax,eax
   14000d937:	test   r11,r11
   14000d93a:	setne  al
   14000d93d:	test   eax,eax
   14000d93f:	jne    0x14000d946
   14000d941:	call   0x140006520
   14000d946:	mov    rcx,rsi
   14000d949:	call   r11
   14000d94c:	mov    esi,eax
   14000d94e:	mov    DWORD PTR [rsp+0x20],eax
   14000d952:	cmp    ebx,0x2
   14000d955:	je     0x14000d986
   14000d957:	xor    ebx,ebx
   14000d959:	test   eax,eax
   14000d95b:	sete   bl
   14000d95e:	test   ebx,ebx
   14000d960:	je     0x14000d96c
   14000d962:	call   QWORD PTR [rip+0x28af8]        # 0x140036460
   14000d968:	mov    edi,eax
   14000d96a:	jmp    0x14000d96e
   14000d96c:	xor    edi,edi
   14000d96e:	mov    rdx,QWORD PTR [rsp+0x58]
   14000d973:	xor    ecx,ecx
   14000d975:	call   0x140006dcc
   14000d97a:	test   ebx,ebx
   14000d97c:	je     0x14000d986
   14000d97e:	mov    ecx,edi
   14000d980:	call   QWORD PTR [rip+0x28ae2]        # 0x140036468
   14000d986:	mov    eax,esi
   14000d988:	mov    rbx,QWORD PTR [rsp+0x40]
   14000d98d:	mov    rsi,QWORD PTR [rsp+0x48]
   14000d992:	add    rsp,0x30
   14000d996:	pop    rdi
   14000d997:	ret    
   14000d998:	rex push rbx
   14000d99a:	sub    rsp,0x20
   14000d99e:	cmp    DWORD PTR [rcx],0x7fffffff
   14000d9a4:	mov    rbx,rcx
   14000d9a7:	je     0x14000d9b6
   14000d9a9:	mov    ecx,DWORD PTR [rcx]
   14000d9ab:	call   0x140006d98
   14000d9b0:	mov    DWORD PTR [rbx],0x7fffffff
   14000d9b6:	add    rsp,0x20
   14000d9ba:	pop    rbx
   14000d9bb:	ret    
   14000d9bc:	rex push rbx
   14000d9be:	sub    rsp,0x20
   14000d9c2:	lea    rdx,[rip+0xffffffffffff8b7b]        # 0x140006544
   14000d9c9:	lea    rcx,[rip+0x3d5d0]        # 0x14004afa0
   14000d9d0:	call   0x140006bec
   14000d9d5:	mov    rbx,rax
   14000d9d8:	test   rax,rax
   14000d9db:	jne    0x14000d9e3
   14000d9dd:	call   0x140006520
   14000d9e2:	int3   
   14000d9e3:	call   QWORD PTR [rip+0x28c2f]        # 0x140036618
   14000d9e9:	mov    DWORD PTR [rbx+0xb8],eax
   14000d9ef:	call   QWORD PTR [rip+0x28c2b]        # 0x140036620
   14000d9f5:	mov    r11d,eax
   14000d9f8:	cwde   
   14000d9f9:	mov    DWORD PTR [rsp+0x30],eax
   14000d9fd:	shr    r11,0x10
   14000da01:	movsx  eax,r11w
   14000da05:	mov    DWORD PTR [rsp+0x34],eax
   14000da09:	mov    rax,QWORD PTR [rsp+0x30]
   14000da0e:	mov    QWORD PTR [rbx+0xbc],rax
   14000da15:	lea    rax,[rbx+0x98]
   14000da1c:	add    rsp,0x20
   14000da20:	pop    rbx
   14000da21:	ret    
   14000da22:	int3   
   14000da23:	int3   
   14000da24:	rex push rbx
   14000da26:	sub    rsp,0x20
   14000da2a:	mov    rbx,rcx
   14000da2d:	lea    rdx,[rip+0xffffffffffff8b10]        # 0x140006544
   14000da34:	lea    rcx,[rip+0x3d565]        # 0x14004afa0
   14000da3b:	call   0x140006bec
   14000da40:	mov    r11,rax
   14000da43:	test   rax,rax
   14000da46:	jne    0x14000da4e
   14000da48:	call   0x140006520
   14000da4d:	int3   
   14000da4e:	mov    rax,QWORD PTR [rbx]
   14000da51:	mov    r9,QWORD PTR [r11+0xb0]
   14000da58:	mov    r8,QWORD PTR [r11+0xa8]
   14000da5f:	mov    edx,DWORD PTR [r11+0xa0]
   14000da66:	mov    rcx,rbx
   14000da69:	add    rsp,0x20
   14000da6d:	pop    rbx
   14000da6e:	rex.W jmp QWORD PTR [rax+0x230]
   14000da75:	int3   
   14000da76:	int3   
   14000da77:	int3   
   14000da78:	rex push rdi
   14000da7a:	sub    rsp,0x40
   14000da7e:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000da87:	mov    QWORD PTR [rsp+0x50],rbx
   14000da8c:	mov    QWORD PTR [rsp+0x60],rsi
   14000da91:	mov    esi,ecx
   14000da93:	call   0x140007e40
   14000da98:	mov    rdi,rax
   14000da9b:	xor    ebx,ebx
   14000da9d:	cmp    QWORD PTR [rax+0x28],rbx
   14000daa1:	jne    0x14000db07
   14000daa3:	cmp    esi,ebx
   14000daa5:	je     0x14000db07
   14000daa7:	lea    rcx,[rip+0x3ff6]        # 0x140011aa4
   14000daae:	call   0x140006280
   14000dab3:	mov    rsi,rax
   14000dab6:	mov    ecx,0xb8
   14000dabb:	call   0x140006290
   14000dac0:	mov    QWORD PTR [rsp+0x58],rax
   14000dac5:	cmp    rax,rbx
   14000dac8:	je     0x14000dafb
   14000daca:	mov    DWORD PTR [rsp+0x28],0x1
   14000dad2:	mov    QWORD PTR [rsp+0x20],0x40
   14000dadb:	lea    r9,[rip+0x4b6a]        # 0x14001264c
   14000dae2:	lea    r8,[rip+0xfffffffffffffc73]        # 0x14000d75c
   14000dae9:	lea    rdx,[rip+0x29a30]        # 0x140037520
   14000daf0:	mov    rcx,rax
   14000daf3:	call   0x14000a688
   14000daf8:	mov    rbx,rax
   14000dafb:	mov    QWORD PTR [rdi+0x28],rbx
   14000daff:	mov    rcx,rsi
   14000db02:	call   0x140006280
   14000db07:	mov    rax,QWORD PTR [rdi+0x28]
   14000db0b:	mov    rbx,QWORD PTR [rsp+0x50]
   14000db10:	mov    rsi,QWORD PTR [rsp+0x60]
   14000db15:	add    rsp,0x40
   14000db19:	pop    rdi
   14000db1a:	ret    
   14000db1b:	int3   
   14000db1c:	mov    QWORD PTR [rsp+0x8],rbx
   14000db21:	push   rdi
   14000db22:	sub    rsp,0x20
   14000db26:	mov    rbx,rcx
   14000db29:	mov    ecx,0x1
   14000db2e:	call   0x14000da78
   14000db33:	mov    rdx,rbx
   14000db36:	mov    rcx,rax
   14000db39:	mov    rdi,rax
   14000db3c:	call   0x14000a760
   14000db41:	mov    rdx,rdi
   14000db44:	mov    rcx,rax
   14000db47:	mov    rbx,rax
   14000db4a:	call   0x140011908
   14000db4f:	mov    rax,rbx
   14000db52:	mov    rbx,QWORD PTR [rsp+0x30]
   14000db57:	add    rsp,0x20
   14000db5b:	pop    rdi
   14000db5c:	ret    
   14000db5d:	int3   
   14000db5e:	int3   
   14000db5f:	int3   
   14000db60:	rex push rbx
   14000db62:	sub    rsp,0x20
   14000db66:	mov    rbx,rcx
   14000db69:	call   0x140007e40
   14000db6e:	mov    rcx,QWORD PTR [rax+0x28]
   14000db72:	xor    eax,eax
   14000db74:	cmp    rcx,rax
   14000db77:	je     0x14000db85
   14000db79:	add    rcx,0x30
   14000db7d:	mov    rdx,rbx
   14000db80:	call   0x1400087ec
   14000db85:	add    rsp,0x20
   14000db89:	pop    rbx
   14000db8a:	ret    
   14000db8b:	int3   
   14000db8c:	mov    QWORD PTR [rsp+0x8],rbx
   14000db91:	mov    QWORD PTR [rsp+0x10],rsi
   14000db96:	push   rdi
   14000db97:	sub    rsp,0x20
   14000db9b:	mov    rdi,rdx
   14000db9e:	mov    rsi,rcx
   14000dba1:	test   rdx,rdx
   14000dba4:	jne    0x14000dbaa
   14000dba6:	xor    eax,eax
   14000dba8:	jmp    0x14000dbda
   14000dbaa:	mov    ecx,0x1
   14000dbaf:	call   0x14000da78
   14000dbb4:	mov    rdx,rdi
   14000dbb7:	mov    QWORD PTR [rsi+0x40],rdi
   14000dbbb:	lea    rcx,[rax+0x30]
   14000dbbf:	mov    rbx,rax
   14000dbc2:	call   0x140008a34
   14000dbc7:	mov    rdx,rbx
   14000dbca:	mov    rcx,rsi
   14000dbcd:	mov    QWORD PTR [rax],rsi
   14000dbd0:	call   0x140011908
   14000dbd5:	mov    eax,0x1
   14000dbda:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dbdf:	mov    rsi,QWORD PTR [rsp+0x38]
   14000dbe4:	add    rsp,0x20
   14000dbe8:	pop    rdi
   14000dbe9:	ret    
   14000dbea:	int3   
   14000dbeb:	int3   
   14000dbec:	mov    QWORD PTR [rsp+0x8],rbx
   14000dbf1:	push   rdi
   14000dbf2:	sub    rsp,0x20
   14000dbf6:	mov    rdi,QWORD PTR [rcx+0x40]
   14000dbfa:	mov    rbx,rcx
   14000dbfd:	test   rdi,rdi
   14000dc00:	je     0x14000dc22
   14000dc02:	call   0x140007e40
   14000dc07:	mov    rcx,QWORD PTR [rax+0x28]
   14000dc0b:	test   rcx,rcx
   14000dc0e:	je     0x14000dc1d
   14000dc10:	mov    rdx,QWORD PTR [rbx+0x40]
   14000dc14:	add    rcx,0x30
   14000dc18:	call   0x140008860
   14000dc1d:	and    QWORD PTR [rbx+0x40],0x0
   14000dc22:	and    QWORD PTR [rbx+0xa0],0x0
   14000dc2a:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dc2f:	mov    rax,rdi
   14000dc32:	add    rsp,0x20
   14000dc36:	pop    rdi
   14000dc37:	ret    
   14000dc38:	rex push rbx
   14000dc3a:	sub    rsp,0x20
   14000dc3e:	lea    rdx,[rip+0xffffffffffff88ff]        # 0x140006544
   14000dc45:	lea    rcx,[rip+0x3d354]        # 0x14004afa0
   14000dc4c:	call   0x140006bec
   14000dc51:	mov    rbx,rax
   14000dc54:	test   rax,rax
   14000dc57:	jne    0x14000dc5f
   14000dc59:	call   0x140006520
   14000dc5e:	int3   
   14000dc5f:	call   0x140007df0
   14000dc64:	cmp    BYTE PTR [rax+0x28],0x0
   14000dc68:	je     0x14000dc7e
   14000dc6a:	mov    rcx,QWORD PTR [rbx+0x48]
   14000dc6e:	test   rcx,rcx
   14000dc71:	je     0x14000dc7e
   14000dc73:	call   QWORD PTR [rip+0x289bf]        # 0x140036638
   14000dc79:	and    QWORD PTR [rbx+0x48],0x0
   14000dc7e:	cmp    QWORD PTR [rbx+0x28],0x0
   14000dc83:	je     0x14000dc8e
   14000dc85:	and    QWORD PTR [rbx+0x28],0x0
   14000dc8a:	xor    eax,eax
   14000dc8c:	jmp    0x14000dc93
   14000dc8e:	mov    eax,0x1
   14000dc93:	add    rsp,0x20
   14000dc97:	pop    rbx
   14000dc98:	ret    
   14000dc99:	int3   
   14000dc9a:	int3   
   14000dc9b:	int3   
   14000dc9c:	rex push rbx
   14000dc9e:	sub    rsp,0x20
   14000dca2:	mov    rbx,rcx
   14000dca5:	mov    rcx,QWORD PTR [rcx+0x98]
   14000dcac:	test   rcx,rcx
   14000dcaf:	je     0x14000dcbc
   14000dcb1:	mov    rax,QWORD PTR [rcx]
   14000dcb4:	mov    edx,0x1
   14000dcb9:	call   QWORD PTR [rax+0x8]
   14000dcbc:	mov    rcx,QWORD PTR [rbx+0x58]
   14000dcc0:	and    QWORD PTR [rbx+0x98],0x0
   14000dcc8:	test   rcx,rcx
   14000dccb:	je     0x14000dcd8
   14000dccd:	mov    rax,QWORD PTR [rcx]
   14000dcd0:	xor    r8d,r8d
   14000dcd3:	xor    edx,edx
   14000dcd5:	call   QWORD PTR [rax+0x18]
   14000dcd8:	mov    rcx,QWORD PTR [rbx+0x50]
   14000dcdc:	test   rcx,rcx
   14000dcdf:	je     0x14000dce7
   14000dce1:	mov    rax,QWORD PTR [rcx]
   14000dce4:	call   QWORD PTR [rax+0x10]
   14000dce7:	mov    rcx,rbx
   14000dcea:	add    rsp,0x20
   14000dcee:	pop    rbx
   14000dcef:	jmp    0x14000da24
   14000dcf4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dcf9:	push   rdi
   14000dcfa:	sub    rsp,0x70
   14000dcfe:	mov    rdi,rcx
   14000dd01:	call   0x140008c30
   14000dd06:	mov    rbx,rax
   14000dd09:	test   rax,rax
   14000dd0c:	je     0x14000dd4a
   14000dd0e:	cmp    QWORD PTR [rax+0x40],rdi
   14000dd12:	jne    0x14000dd3f
   14000dd14:	call   0x140007df0
   14000dd19:	cmp    BYTE PTR [rax+0x28],0x0
   14000dd1d:	jne    0x14000dd3a
   14000dd1f:	call   0x140007df0
   14000dd24:	cmp    rbx,QWORD PTR [rax+0x8]
   14000dd28:	jne    0x14000dd33
   14000dd2a:	call   0x140012fe4
   14000dd2f:	test   eax,eax
   14000dd31:	je     0x14000dd3a
   14000dd33:	xor    ecx,ecx
   14000dd35:	call   0x140012ec0
   14000dd3a:	and    QWORD PTR [rbx+0x40],0x0
   14000dd3f:	cmp    QWORD PTR [rbx+0x48],rdi
   14000dd43:	jne    0x14000dd4a
   14000dd45:	and    QWORD PTR [rbx+0x48],0x0
   14000dd4a:	mov    rcx,QWORD PTR [rdi+0x90]
   14000dd51:	test   rcx,rcx
   14000dd54:	je     0x14000dd67
   14000dd56:	mov    rax,QWORD PTR [rcx]
   14000dd59:	call   QWORD PTR [rax+0xa0]
   14000dd5f:	and    QWORD PTR [rdi+0x90],0x0
   14000dd67:	mov    rcx,QWORD PTR [rdi+0x98]
   14000dd6e:	test   rcx,rcx
   14000dd71:	je     0x14000dd7e
   14000dd73:	mov    rax,QWORD PTR [rcx]
   14000dd76:	mov    edx,0x1
   14000dd7b:	call   QWORD PTR [rax+0x8]
   14000dd7e:	and    QWORD PTR [rdi+0x98],0x0
   14000dd86:	test   BYTE PTR [rdi+0x78],0x1
   14000dd8a:	je     0x14000dde6
   14000dd8c:	call   0x140007e40
   14000dd91:	mov    rbx,QWORD PTR [rax+0x78]
   14000dd95:	test   rbx,rbx
   14000dd98:	je     0x14000dde6
   14000dd9a:	cmp    QWORD PTR [rbx+0x40],0x0
   14000dd9f:	je     0x14000dde6
   14000dda1:	xor    edx,edx
   14000dda3:	lea    rcx,[rsp+0x20]
   14000dda8:	lea    r8d,[rdx+0x48]
   14000ddac:	call   0x140015b00
   14000ddb1:	mov    rax,QWORD PTR [rdi+0x40]
   14000ddb5:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ddb9:	lea    r9,[rsp+0x20]
   14000ddbe:	xor    r8d,r8d
   14000ddc1:	mov    edx,0x405
   14000ddc6:	mov    QWORD PTR [rsp+0x28],rax
   14000ddcb:	mov    QWORD PTR [rsp+0x30],rax
   14000ddd0:	mov    DWORD PTR [rsp+0x20],0x40
   14000ddd8:	mov    DWORD PTR [rsp+0x24],0x1
   14000dde0:	call   QWORD PTR [rip+0x2892a]        # 0x140036710
   14000dde6:	mov    rcx,QWORD PTR [rdi+0x40]
   14000ddea:	mov    edx,0xfffffffc
   14000ddef:	call   QWORD PTR [rip+0x28813]        # 0x140036608
   14000ddf5:	mov    rcx,rdi
   14000ddf8:	mov    rbx,rax
   14000ddfb:	call   0x14000da24
   14000de00:	mov    rcx,QWORD PTR [rdi+0x40]
   14000de04:	mov    edx,0xfffffffc
   14000de09:	call   QWORD PTR [rip+0x287f9]        # 0x140036608
   14000de0f:	cmp    rax,rbx
   14000de12:	jne    0x14000de37
   14000de14:	mov    rax,QWORD PTR [rdi]
   14000de17:	mov    rcx,rdi
   14000de1a:	call   QWORD PTR [rax+0x1f0]
   14000de20:	mov    r8,QWORD PTR [rax]
   14000de23:	test   r8,r8
   14000de26:	je     0x14000de37
   14000de28:	mov    rcx,QWORD PTR [rdi+0x40]
   14000de2c:	mov    edx,0xfffffffc
   14000de31:	call   QWORD PTR [rip+0x287d9]        # 0x140036610
   14000de37:	mov    rcx,rdi
   14000de3a:	call   0x14000dbec
   14000de3f:	mov    r11,QWORD PTR [rdi]
   14000de42:	mov    rcx,rdi
   14000de45:	mov    rbx,QWORD PTR [rsp+0x80]
   14000de4d:	add    rsp,0x70
   14000de51:	pop    rdi
   14000de52:	rex.WB jmp QWORD PTR [r11+0x238]
   14000de59:	int3   
   14000de5a:	int3   
   14000de5b:	int3   
   14000de5c:	mov    QWORD PTR [rsp+0x8],rbx
   14000de61:	push   rdi
   14000de62:	sub    rsp,0x20
   14000de66:	xor    ebx,ebx
   14000de68:	mov    rdi,rcx
   14000de6b:	cmp    QWORD PTR [rcx+0x40],rbx
   14000de6f:	jne    0x14000de84
   14000de71:	cmp    QWORD PTR [rcx+0xa0],rbx
   14000de78:	jne    0x14000de7e
   14000de7a:	xor    eax,eax
   14000de7c:	jmp    0x14000dedc
   14000de7e:	cmp    QWORD PTR [rcx+0x40],rbx
   14000de82:	je     0x14000dea5
   14000de84:	call   0x140007e40
   14000de89:	mov    rcx,QWORD PTR [rax+0x28]
   14000de8d:	cmp    rcx,rbx
   14000de90:	jne    0x14000de98
   14000de92:	call   0x140006520
   14000de97:	int3   
   14000de98:	mov    rdx,QWORD PTR [rdi+0x40]
   14000de9c:	add    rcx,0x30
   14000dea0:	call   0x1400087ec
   14000dea5:	mov    rcx,QWORD PTR [rdi+0x40]
   14000dea9:	cmp    rcx,rbx
   14000deac:	jne    0x14000deb7
   14000deae:	cmp    QWORD PTR [rdi+0xa0],rbx
   14000deb5:	je     0x14000deda
   14000deb7:	cmp    QWORD PTR [rdi+0xa0],rbx
   14000debe:	jne    0x14000dec8
   14000dec0:	call   QWORD PTR [rip+0x2873a]        # 0x140036600
   14000dec6:	jmp    0x14000ded8
   14000dec8:	mov    rcx,QWORD PTR [rdi+0xa0]
   14000decf:	mov    rax,QWORD PTR [rcx]
   14000ded2:	call   QWORD PTR [rax+0xb0]
   14000ded8:	mov    ebx,eax
   14000deda:	mov    eax,ebx
   14000dedc:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dee1:	add    rsp,0x20
   14000dee5:	pop    rdi
   14000dee6:	ret    
   14000dee7:	int3   
   14000dee8:	rex push rbx
   14000deea:	sub    rsp,0x40
   14000deee:	mov    rbx,rcx
   14000def1:	mov    QWORD PTR [rsp+0x28],rdx
   14000def6:	lea    rdx,[rip+0xffffffffffff8647]        # 0x140006544
   14000defd:	lea    rcx,[rip+0x3d09c]        # 0x14004afa0
   14000df04:	mov    QWORD PTR [rsp+0x20],r8
   14000df09:	call   0x140006bec
   14000df0e:	test   rax,rax
   14000df11:	jne    0x14000df19
   14000df13:	call   0x140006520
   14000df18:	int3   
   14000df19:	mov    eax,DWORD PTR [rax+0xa0]
   14000df1f:	xor    r8d,r8d
   14000df22:	lea    r9,[rsp+0x20]
   14000df27:	sub    eax,0x132
   14000df2c:	lea    edx,[r8+0x19]
   14000df30:	mov    rcx,rbx
   14000df33:	mov    DWORD PTR [rsp+0x30],eax
   14000df37:	mov    rax,QWORD PTR [rbx]
   14000df3a:	call   QWORD PTR [rax+0x220]
   14000df40:	add    rsp,0x40
   14000df44:	pop    rbx
   14000df45:	ret    
   14000df46:	int3   
   14000df47:	int3   
   14000df48:	mov    QWORD PTR [rsp+0x8],rbx
   14000df4d:	mov    QWORD PTR [rsp+0x10],rbp
   14000df52:	mov    QWORD PTR [rsp+0x18],rsi
   14000df57:	push   rdi
   14000df58:	sub    rsp,0x20
   14000df5c:	mov    edi,r8d
   14000df5f:	mov    ebp,edx
   14000df61:	mov    rsi,rcx
   14000df64:	call   QWORD PTR [rip+0x28686]        # 0x1400365f0
   14000df6a:	mov    rbx,rax
   14000df6d:	test   rax,rax
   14000df70:	je     0x14000dfaa
   14000df72:	mov    rcx,rax
   14000df75:	call   QWORD PTR [rip+0x2867d]        # 0x1400365f8
   14000df7b:	test   rax,rax
   14000df7e:	je     0x14000df92
   14000df80:	mov    r8d,edi
   14000df83:	mov    edx,ebp
   14000df85:	mov    rcx,rbx
   14000df88:	call   0x14000df48
   14000df8d:	test   rax,rax
   14000df90:	jne    0x14000dfdd
   14000df92:	mov    rcx,rbx
   14000df95:	test   edi,edi
   14000df97:	jne    0x14000dfa0
   14000df99:	call   0x14000db1c
   14000df9e:	jmp    0x14000dfdd
   14000dfa0:	call   0x14000db60
   14000dfa5:	test   rax,rax
   14000dfa8:	jne    0x14000dfdd
   14000dfaa:	mov    rcx,rsi
   14000dfad:	call   QWORD PTR [rip+0x28645]        # 0x1400365f8
   14000dfb3:	jmp    0x14000dfd3
   14000dfb5:	mov    r8d,edi
   14000dfb8:	mov    edx,ebp
   14000dfba:	mov    rcx,rbx
   14000dfbd:	call   0x14000df48
   14000dfc2:	test   rax,rax
   14000dfc5:	jne    0x14000dfdd
   14000dfc7:	lea    edx,[rax+0x2]
   14000dfca:	mov    rcx,rbx
   14000dfcd:	call   QWORD PTR [rip+0x2876d]        # 0x140036740
   14000dfd3:	mov    rbx,rax
   14000dfd6:	test   rax,rax
   14000dfd9:	jne    0x14000dfb5
   14000dfdb:	xor    eax,eax
   14000dfdd:	mov    rbx,QWORD PTR [rsp+0x30]
   14000dfe2:	mov    rbp,QWORD PTR [rsp+0x38]
   14000dfe7:	mov    rsi,QWORD PTR [rsp+0x40]
   14000dfec:	add    rsp,0x20
   14000dff0:	pop    rdi
   14000dff1:	ret    
   14000dff2:	int3   
   14000dff3:	int3   
   14000dff4:	mov    QWORD PTR [rsp+0x8],rbx
   14000dff9:	push   rdi
   14000dffa:	sub    rsp,0x30
   14000dffe:	mov    rdi,rdx
   14000e001:	mov    rbx,rcx
   14000e004:	lea    rdx,[rip+0xffffffffffff8539]        # 0x140006544
   14000e00b:	lea    rcx,[rip+0x3cf8e]        # 0x14004afa0
   14000e012:	call   0x140006bec
   14000e017:	mov    r11,rax
   14000e01a:	test   rax,rax
   14000e01d:	jne    0x14000e025
   14000e01f:	call   0x140006520
   14000e024:	int3   
   14000e025:	mov    rax,QWORD PTR [rbx]
   14000e028:	mov    r9,QWORD PTR [r11+0xb0]
   14000e02f:	mov    r8,QWORD PTR [r11+0xa8]
   14000e036:	mov    edx,DWORD PTR [r11+0xa0]
   14000e03d:	mov    rcx,rbx
   14000e040:	mov    QWORD PTR [rsp+0x20],rdi
   14000e045:	call   QWORD PTR [rax+0x240]
   14000e04b:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e050:	add    rsp,0x30
   14000e054:	pop    rdi
   14000e055:	ret    
   14000e056:	int3   
   14000e057:	int3   
   14000e058:	rex push rbx
   14000e05a:	sub    rsp,0x20
   14000e05e:	cmp    QWORD PTR [rcx+0x98],0x0
   14000e066:	mov    rbx,rcx
   14000e069:	je     0x14000e07f
   14000e06b:	mov    rcx,QWORD PTR [rcx+0x98]
   14000e072:	mov    rax,QWORD PTR [rcx]
   14000e075:	call   QWORD PTR [rax+0x120]
   14000e07b:	test   eax,eax
   14000e07d:	jne    0x14000e087
   14000e07f:	mov    rcx,rbx
   14000e082:	call   0x14000da24
   14000e087:	add    rsp,0x20
   14000e08b:	pop    rbx
   14000e08c:	ret    
   14000e08d:	int3   
   14000e08e:	int3   
   14000e08f:	int3   
   14000e090:	mov    QWORD PTR [rsp+0x8],rbx
   14000e095:	mov    QWORD PTR [rsp+0x10],rsi
   14000e09a:	push   rdi
   14000e09b:	sub    rsp,0x20
   14000e09f:	mov    rsi,rcx
   14000e0a2:	call   0x1400117c8
   14000e0a7:	xor    ebx,ebx
   14000e0a9:	bt     eax,0x1e
   14000e0ad:	jb     0x14000e121
   14000e0af:	call   0x140008c30
   14000e0b4:	cmp    rax,rbx
   14000e0b7:	je     0x14000e0ca
   14000e0b9:	mov    rdx,QWORD PTR [rax]
   14000e0bc:	mov    rcx,rax
   14000e0bf:	call   QWORD PTR [rdx+0xe8]
   14000e0c5:	mov    rdi,rax
   14000e0c8:	jmp    0x14000e0cd
   14000e0ca:	mov    rdi,rbx
   14000e0cd:	cmp    rdi,rbx
   14000e0d0:	je     0x14000e121
   14000e0d2:	mov    ecx,0x10
   14000e0d7:	call   QWORD PTR [rip+0x286f3]        # 0x1400367d0
   14000e0dd:	cmp    ax,bx
   14000e0e0:	jl     0x14000e121
   14000e0e2:	mov    ecx,0x11
   14000e0e7:	call   QWORD PTR [rip+0x286e3]        # 0x1400367d0
   14000e0ed:	cmp    ax,bx
   14000e0f0:	jl     0x14000e121
   14000e0f2:	mov    ecx,0x12
   14000e0f7:	call   QWORD PTR [rip+0x286d3]        # 0x1400367d0
   14000e0fd:	cmp    ax,bx
   14000e100:	jl     0x14000e121
   14000e102:	mov    rcx,QWORD PTR [rdi+0x40]
   14000e106:	xor    r9d,r9d
   14000e109:	mov    edx,0x111
   14000e10e:	mov    r8d,0xe146
   14000e114:	call   QWORD PTR [rip+0x285f6]        # 0x140036710
   14000e11a:	mov    eax,0x1
   14000e11f:	jmp    0x14000e131
   14000e121:	mov    rcx,rsi
   14000e124:	call   0x14000da24
   14000e129:	cmp    rax,rbx
   14000e12c:	setne  bl
   14000e12f:	mov    eax,ebx
   14000e131:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e136:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e13b:	add    rsp,0x20
   14000e13f:	pop    rdi
   14000e140:	ret    
   14000e141:	int3   
   14000e142:	int3   
   14000e143:	int3   
   14000e144:	rex push rbx
   14000e146:	sub    rsp,0x20
   14000e14a:	cmp    BYTE PTR [rcx+0x48],0x0
   14000e14e:	mov    rbx,rcx
   14000e151:	jne    0x14000e15a
   14000e153:	call   0x14000da24
   14000e158:	jmp    0x14000e17c
   14000e15a:	mov    rax,QWORD PTR [rcx]
   14000e15d:	and    QWORD PTR [rsp+0x30],0x0
   14000e163:	lea    r9,[rsp+0x30]
   14000e168:	call   QWORD PTR [rax+0x1d8]
   14000e16e:	test   eax,eax
   14000e170:	jns    0x14000e177
   14000e172:	mov    rcx,rbx
   14000e175:	jmp    0x14000e153
   14000e177:	mov    rax,QWORD PTR [rsp+0x30]
   14000e17c:	add    rsp,0x20
   14000e180:	pop    rbx
   14000e181:	ret    
   14000e182:	int3   
   14000e183:	int3   
   14000e184:	rex push rbx
   14000e186:	sub    rsp,0x20
   14000e18a:	mov    rbx,rcx
   14000e18d:	test   r9,r9
   14000e190:	je     0x14000e1a0
   14000e192:	xor    edx,edx
   14000e194:	mov    rcx,r9
   14000e197:	call   0x14000dff4
   14000e19c:	test   eax,eax
   14000e19e:	jne    0x14000e1a8
   14000e1a0:	mov    rcx,rbx
   14000e1a3:	call   0x14000da24
   14000e1a8:	add    rsp,0x20
   14000e1ac:	pop    rbx
   14000e1ad:	ret    
   14000e1ae:	int3   
   14000e1af:	int3   
   14000e1b0:	rex push rbx
   14000e1b2:	sub    rsp,0x60
   14000e1b6:	mov    rbx,rcx
   14000e1b9:	jmp    0x14000e1c6
   14000e1bb:	lea    rcx,[rsp+0x30]
   14000e1c0:	call   QWORD PTR [rip+0x28602]        # 0x1400367c8
   14000e1c6:	mov    r9d,0x121
   14000e1cc:	lea    rcx,[rsp+0x30]
   14000e1d1:	xor    edx,edx
   14000e1d3:	mov    r8d,r9d
   14000e1d6:	mov    DWORD PTR [rsp+0x20],0x1
   14000e1de:	call   QWORD PTR [rip+0x285f4]        # 0x1400367d8
   14000e1e4:	test   eax,eax
   14000e1e6:	jne    0x14000e1bb
   14000e1e8:	mov    rcx,rbx
   14000e1eb:	add    rsp,0x60
   14000e1ef:	pop    rbx
   14000e1f0:	jmp    0x14000da24
   14000e1f5:	int3   
   14000e1f6:	int3   
   14000e1f7:	int3   
   14000e1f8:	rex push rbx
   14000e1fa:	sub    rsp,0x30
   14000e1fe:	mov    rbx,rcx
   14000e201:	lea    rdx,[rsp+0x20]
   14000e206:	mov    rcx,r8
   14000e209:	call   0x14000dff4
   14000e20e:	test   eax,eax
   14000e210:	je     0x14000e219
   14000e212:	mov    rax,QWORD PTR [rsp+0x20]
   14000e217:	jmp    0x14000e221
   14000e219:	mov    rcx,rbx
   14000e21c:	call   0x14000da24
   14000e221:	add    rsp,0x30
   14000e225:	pop    rbx
   14000e226:	ret    
   14000e227:	int3   
   14000e228:	mov    QWORD PTR [rsp+0x8],rbx
   14000e22d:	mov    QWORD PTR [rsp+0x10],rsi
   14000e232:	push   rdi
   14000e233:	sub    rsp,0x20
   14000e237:	mov    edi,edx
   14000e239:	mov    rsi,rcx
   14000e23c:	xor    ebx,ebx
   14000e23e:	call   0x140007df0
   14000e243:	lea    rdx,[rsp+0x40]
   14000e248:	mov    rcx,QWORD PTR [rax+0xc8]
   14000e24f:	mov    rcx,QWORD PTR [rcx]
   14000e252:	call   0x14000d870
   14000e257:	cmp    QWORD PTR [rax],rbx
   14000e25a:	je     0x14000e27b
   14000e25c:	call   0x140007df0
   14000e261:	mov    rdx,rsi
   14000e264:	mov    rcx,QWORD PTR [rax+0xc8]
   14000e26b:	mov    rcx,QWORD PTR [rcx]
   14000e26e:	call   0x14000d8e4
   14000e273:	cmp    eax,ebx
   14000e275:	je     0x14000e29e
   14000e277:	mov    ebx,edi
   14000e279:	jmp    0x14000e29e
   14000e27b:	mov    eax,edi
   14000e27d:	mov    esi,0x3fc0
   14000e282:	and    eax,esi
   14000e284:	cmp    eax,edi
   14000e286:	jne    0x14000e29e
   14000e288:	call   0x140007df0
   14000e28d:	mov    rcx,QWORD PTR [rax+0xc8]
   14000e294:	mov    rcx,QWORD PTR [rcx]
   14000e297:	call   0x14000d7f8
   14000e29c:	mov    ebx,esi
   14000e29e:	mov    rsi,QWORD PTR [rsp+0x38]
   14000e2a3:	mov    eax,ebx
   14000e2a5:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e2aa:	add    rsp,0x20
   14000e2ae:	pop    rdi
   14000e2af:	ret    
   14000e2b0:	sub    rsp,0x28
   14000e2b4:	mov    ecx,0x18
   14000e2b9:	call   0x140006648
   14000e2be:	test   rax,rax
   14000e2c1:	je     0x14000e2cf
   14000e2c3:	lea    rcx,[rip+0x298ce]        # 0x140037b98
   14000e2ca:	mov    QWORD PTR [rax],rcx
   14000e2cd:	jmp    0x14000e2d1
   14000e2cf:	xor    eax,eax
   14000e2d1:	add    rsp,0x28
   14000e2d5:	ret    
   14000e2d6:	int3   
   14000e2d7:	int3   
   14000e2d8:	bt     r8d,0x1c
   14000e2dd:	jb     0x14000e36d
   14000e2e3:	mov    QWORD PTR [rsp+0x8],rbx
   14000e2e8:	push   rdi
   14000e2e9:	sub    rsp,0x30
   14000e2ed:	mov    rdi,rdx
   14000e2f0:	mov    rbx,rcx
   14000e2f3:	call   0x1400117c8
   14000e2f8:	test   eax,0x50000000
   14000e2fd:	jne    0x14000e363
   14000e2ff:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e303:	lea    rdx,[rsp+0x20]
   14000e308:	call   QWORD PTR [rip+0x283da]        # 0x1400366e8
   14000e30e:	mov    r11d,DWORD PTR [rsp+0x20]
   14000e313:	cmp    DWORD PTR [rdi],r11d
   14000e316:	jne    0x14000e363
   14000e318:	mov    eax,DWORD PTR [rsp+0x24]
   14000e31c:	cmp    DWORD PTR [rdi+0x4],eax
   14000e31f:	jne    0x14000e363
   14000e321:	mov    rcx,QWORD PTR [rbx+0x40]
   14000e325:	mov    edx,0x4
   14000e32a:	call   QWORD PTR [rip+0x28410]        # 0x140036740
   14000e330:	mov    rcx,rax
   14000e333:	call   0x14000db1c
   14000e338:	test   rax,rax
   14000e33b:	je     0x14000e349
   14000e33d:	mov    rcx,rax
   14000e340:	call   0x140011830
   14000e345:	test   eax,eax
   14000e347:	jne    0x14000e363
   14000e349:	mov    rax,QWORD PTR [rbx]
   14000e34c:	mov    rcx,rbx
   14000e34f:	call   QWORD PTR [rax+0x248]
   14000e355:	test   eax,eax
   14000e357:	je     0x14000e363
   14000e359:	xor    edx,edx
   14000e35b:	mov    rcx,rbx
   14000e35e:	call   0x14000d4a0
   14000e363:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e368:	add    rsp,0x30
   14000e36c:	pop    rdi
   14000e36d:	ret    
   14000e36e:	int3   
   14000e36f:	int3   
   14000e370:	mov    rax,rsp
   14000e373:	push   r13
   14000e375:	push   r14
   14000e377:	push   r15
   14000e379:	sub    rsp,0x80
   14000e380:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14000e389:	mov    QWORD PTR [rax+0x8],rbx
   14000e38d:	mov    QWORD PTR [rax+0x10],rsi
   14000e391:	mov    QWORD PTR [rax+0x18],rdi
   14000e395:	mov    QWORD PTR [rax+0x20],r12
   14000e399:	mov    r15,r9
   14000e39c:	mov    r12d,r8d
   14000e39f:	mov    r14,rdx
   14000e3a2:	mov    r13,rcx
   14000e3a5:	lea    rdx,[rip+0xffffffffffff8198]        # 0x140006544
   14000e3ac:	lea    rcx,[rip+0x3cbed]        # 0x14004afa0
   14000e3b3:	call   0x140006bec
   14000e3b8:	mov    rsi,rax
   14000e3bb:	mov    QWORD PTR [rsp+0x28],rax
   14000e3c0:	xor    edi,edi
   14000e3c2:	mov    r10d,edi
   14000e3c5:	cmp    rax,rdi
   14000e3c8:	setne  r10b
   14000e3cc:	cmp    r10d,edi
   14000e3cf:	jne    0x14000e3d7
   14000e3d1:	call   0x140006520
   14000e3d6:	int3   
   14000e3d7:	lea    rcx,[rsp+0x50]
   14000e3dc:	lea    rdx,[rax+0x98]
   14000e3e3:	mov    r8d,0x30
   14000e3e9:	call   0x1400160c0
   14000e3ee:	mov    QWORD PTR [rsi+0x98],r14
   14000e3f5:	mov    DWORD PTR [rsi+0xa0],r12d
   14000e3fc:	mov    QWORD PTR [rsi+0xa8],r15
   14000e403:	mov    rbx,QWORD PTR [rsp+0xc0]
   14000e40b:	mov    QWORD PTR [rsi+0xb0],rbx
   14000e412:	cmp    r12d,0x2
   14000e416:	jne    0x14000e433
   14000e418:	cmp    QWORD PTR [r13+0x98],rdi
   14000e41f:	je     0x14000e433
   14000e421:	mov    rcx,QWORD PTR [r13+0x98]
   14000e428:	mov    rax,QWORD PTR [rcx]
   14000e42b:	xor    edx,edx
   14000e42d:	call   QWORD PTR [rax+0xc0]
   14000e433:	mov    DWORD PTR [rsp+0x20],edi
   14000e437:	mov    r14d,0x110
   14000e43d:	cmp    r12d,r14d
   14000e440:	jne    0x14000e458
   14000e442:	lea    r8,[rsp+0x20]
   14000e447:	lea    rdx,[rsp+0x38]
   14000e44c:	mov    rcx,r13
   14000e44f:	call   0x14000c2e0
   14000e454:	mov    edi,DWORD PTR [rsp+0x20]
   14000e458:	mov    rax,QWORD PTR [r13+0x0]
   14000e45c:	mov    r9,rbx
   14000e45f:	mov    r8,r15
   14000e462:	mov    edx,r12d
   14000e465:	mov    rcx,r13
   14000e468:	call   QWORD PTR [rax+0x220]
   14000e46e:	mov    rbx,rax
   14000e471:	cmp    r12d,r14d
   14000e474:	jne    0x14000e487
   14000e476:	mov    r8d,edi
   14000e479:	lea    rdx,[rsp+0x38]
   14000e47e:	mov    rcx,r13
   14000e481:	call   0x14000e2d8
   14000e486:	nop
   14000e487:	jmp    0x14000e493
   14000e489:	mov    rbx,QWORD PTR [rsp+0x20]
   14000e48e:	mov    rsi,QWORD PTR [rsp+0x28]
   14000e493:	lea    rcx,[rsi+0x98]
   14000e49a:	lea    rdx,[rsp+0x50]
   14000e49f:	mov    r8d,0x30
   14000e4a5:	call   0x1400160c0
   14000e4aa:	mov    rax,rbx
   14000e4ad:	lea    r11,[rsp+0x80]
   14000e4b5:	mov    rbx,QWORD PTR [r11+0x20]
   14000e4b9:	mov    rsi,QWORD PTR [r11+0x28]
   14000e4bd:	mov    rdi,QWORD PTR [r11+0x30]
   14000e4c1:	mov    r12,QWORD PTR [r11+0x38]
   14000e4c5:	mov    rsp,r11
   14000e4c8:	pop    r15
   14000e4ca:	pop    r14
   14000e4cc:	pop    r13
   14000e4ce:	ret    
   14000e4cf:	int3   
   14000e4d0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e4d5:	mov    QWORD PTR [rsp+0x10],rbp
   14000e4da:	mov    QWORD PTR [rsp+0x18],rsi
   14000e4df:	push   rdi
   14000e4e0:	sub    rsp,0x30
   14000e4e4:	mov    rsi,r9
   14000e4e7:	mov    rbp,r8
   14000e4ea:	mov    edi,edx
   14000e4ec:	mov    rbx,rcx
   14000e4ef:	cmp    edx,0x360
   14000e4f5:	jne    0x14000e503
   14000e4f7:	movabs rax,0x1
   14000e501:	jmp    0x14000e53c
   14000e503:	call   0x14000db60
   14000e508:	test   rax,rax
   14000e50b:	je     0x14000e52b
   14000e50d:	cmp    QWORD PTR [rax+0x40],rbx
   14000e511:	jne    0x14000e52b
   14000e513:	mov    r9,rbp
   14000e516:	mov    r8d,edi
   14000e519:	mov    rdx,rbx
   14000e51c:	mov    rcx,rax
   14000e51f:	mov    QWORD PTR [rsp+0x20],rsi
   14000e524:	call   0x14000e370
   14000e529:	jmp    0x14000e53c
   14000e52b:	mov    r9,rsi
   14000e52e:	mov    r8,rbp
   14000e531:	mov    edx,edi
   14000e533:	mov    rcx,rbx
   14000e536:	call   QWORD PTR [rip+0x28174]        # 0x1400366b0
   14000e53c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000e541:	mov    rbp,QWORD PTR [rsp+0x48]
   14000e546:	mov    rsi,QWORD PTR [rsp+0x50]
   14000e54b:	add    rsp,0x30
   14000e54f:	pop    rdi
   14000e550:	ret    
   14000e551:	int3   
   14000e552:	int3   
   14000e553:	int3   
   14000e554:	mov    QWORD PTR [rsp+0x8],rcx
   14000e559:	push   rbx
   14000e55a:	sub    rsp,0x30
   14000e55e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e567:	mov    rbx,rcx
   14000e56a:	lea    rax,[rip+0x293a7]        # 0x140037918
   14000e571:	mov    QWORD PTR [rcx],rax
   14000e574:	cmp    QWORD PTR [rcx+0x40],0x0
   14000e579:	je     0x14000e5b0
   14000e57b:	lea    rax,[rip+0x3fb0e]        # 0x14004e090
   14000e582:	cmp    rcx,rax
   14000e585:	je     0x14000e5b0
   14000e587:	lea    rax,[rip+0x3fbb2]        # 0x14004e140
   14000e58e:	cmp    rcx,rax
   14000e591:	je     0x14000e5b0
   14000e593:	lea    rax,[rip+0x3fc56]        # 0x14004e1f0
   14000e59a:	cmp    rcx,rax
   14000e59d:	je     0x14000e5b0
   14000e59f:	lea    rax,[rip+0x3fcfa]        # 0x14004e2a0
   14000e5a6:	cmp    rcx,rax
   14000e5a9:	je     0x14000e5b0
   14000e5ab:	call   0x14000de5c
   14000e5b0:	mov    rcx,QWORD PTR [rbx+0x98]
   14000e5b7:	test   rcx,rcx
   14000e5ba:	je     0x14000e5c7
   14000e5bc:	mov    rax,QWORD PTR [rcx]
   14000e5bf:	mov    edx,0x1
   14000e5c4:	call   QWORD PTR [rax+0x8]
   14000e5c7:	mov    rax,QWORD PTR [rbx+0xa0]
   14000e5ce:	test   rax,rax
   14000e5d1:	je     0x14000e5de
   14000e5d3:	cmp    QWORD PTR [rax+0x50],rbx
   14000e5d7:	jne    0x14000e5de
   14000e5d9:	and    QWORD PTR [rax+0x50],0x0
   14000e5de:	mov    rcx,rbx
   14000e5e1:	add    rsp,0x30
   14000e5e5:	pop    rbx
   14000e5e6:	jmp    0x14000a270
   14000e5eb:	int3   
   14000e5ec:	rex push rbx
   14000e5ee:	sub    rsp,0x20
   14000e5f2:	mov    rbx,rcx
   14000e5f5:	test   r8,r8
   14000e5f8:	je     0x14000e611
   14000e5fa:	lea    rdx,[rsp+0x40]
   14000e5ff:	mov    rcx,r8
   14000e602:	call   0x14000dff4
   14000e607:	test   eax,eax
   14000e609:	je     0x14000e611
   14000e60b:	mov    eax,DWORD PTR [rsp+0x40]
   14000e60f:	jmp    0x14000e619
   14000e611:	mov    rcx,rbx
   14000e614:	call   0x14000da24
   14000e619:	add    rsp,0x20
   14000e61d:	pop    rbx
   14000e61e:	ret    
   14000e61f:	int3   
   14000e620:	mov    QWORD PTR [rsp+0x8],rbx
   14000e625:	push   rdi
   14000e626:	sub    rsp,0x20
   14000e62a:	mov    rdi,r8
   14000e62d:	mov    r8d,0x1
   14000e633:	mov    rbx,rcx
   14000e636:	cmp    DWORD PTR [rdi],r8d
   14000e639:	jne    0x14000e6ad
   14000e63b:	lea    rdx,[rip+0xffffffffffff7f02]        # 0x140006544
   14000e642:	lea    rcx,[rip+0x3c957]        # 0x14004afa0
   14000e649:	call   0x140006bec
   14000e64e:	mov    rcx,rax
   14000e651:	test   rax,rax
   14000e654:	jne    0x14000e65c
   14000e656:	call   0x140006520
   14000e65b:	int3   
   14000e65c:	mov    rax,QWORD PTR [rbx+0x40]
   14000e660:	cmp    QWORD PTR [rcx+0xc8],rax
   14000e667:	jne    0x14000e677
   14000e669:	mov    rcx,QWORD PTR [rcx+0xd0]
   14000e670:	call   0x140012334
   14000e675:	jmp    0x14000e683
   14000e677:	mov    rax,QWORD PTR [rbx]
   14000e67a:	mov    rcx,rbx
   14000e67d:	call   QWORD PTR [rax+0xd8]
   14000e683:	test   rax,rax
   14000e686:	jne    0x14000e68e
   14000e688:	call   0x140006520
   14000e68d:	int3   
   14000e68e:	mov    edx,DWORD PTR [rdi+0x8]
   14000e691:	mov    rcx,rax
   14000e694:	call   0x14000c530
   14000e699:	test   rax,rax
   14000e69c:	je     0x14000e6cc
   14000e69e:	mov    r8,QWORD PTR [rax]
   14000e6a1:	mov    rdx,rdi
   14000e6a4:	mov    rcx,rax
   14000e6a7:	call   QWORD PTR [r8+0x20]
   14000e6ab:	jmp    0x14000e6cc
   14000e6ad:	mov    edx,DWORD PTR [rdi+0x4]
   14000e6b0:	mov    rcx,QWORD PTR [rcx+0x40]
   14000e6b4:	call   0x14000df48
   14000e6b9:	test   rax,rax
   14000e6bc:	je     0x14000e6cc
   14000e6be:	xor    edx,edx
   14000e6c0:	mov    rcx,rax
   14000e6c3:	call   0x14000dff4
   14000e6c8:	test   eax,eax
   14000e6ca:	jne    0x14000e6d4
   14000e6cc:	mov    rcx,rbx
   14000e6cf:	call   0x14000da24
   14000e6d4:	mov    rbx,QWORD PTR [rsp+0x30]
   14000e6d9:	add    rsp,0x20
   14000e6dd:	pop    rdi
   14000e6de:	ret    
   14000e6df:	int3   
   14000e6e0:	mov    QWORD PTR [rsp+0x8],rbx
   14000e6e5:	mov    QWORD PTR [rsp+0x18],r8
   14000e6ea:	mov    DWORD PTR [rsp+0x10],edx
   14000e6ee:	push   rbp
   14000e6ef:	push   rsi
   14000e6f0:	push   rdi
   14000e6f1:	sub    rsp,0x30
   14000e6f5:	mov    rbp,r9
   14000e6f8:	call   QWORD PTR [rip+0x27efa]        # 0x1400365f8
   14000e6fe:	mov    rbx,rax
   14000e701:	test   rax,rax
   14000e704:	je     0x14000e79a
   14000e70a:	mov    edi,DWORD PTR [rsp+0x78]
   14000e70e:	mov    esi,DWORD PTR [rsp+0x70]
   14000e712:	mov    rcx,rbx
   14000e715:	test   edi,edi
   14000e717:	je     0x14000e740
   14000e719:	call   0x14000db60
   14000e71e:	test   rax,rax
   14000e721:	je     0x14000e752
   14000e723:	mov    r9,QWORD PTR [rsp+0x60]
   14000e728:	mov    r8d,DWORD PTR [rsp+0x58]
   14000e72d:	mov    rdx,QWORD PTR [rax+0x40]
   14000e731:	mov    rcx,rax
   14000e734:	mov    QWORD PTR [rsp+0x20],rbp
   14000e739:	call   0x14000e370
   14000e73e:	jmp    0x14000e752
   14000e740:	mov    r8,QWORD PTR [rsp+0x60]
   14000e745:	mov    edx,DWORD PTR [rsp+0x58]
   14000e749:	mov    r9,rbp
   14000e74c:	call   QWORD PTR [rip+0x27fbe]        # 0x140036710
   14000e752:	test   esi,esi
   14000e754:	je     0x14000e780
   14000e756:	mov    rcx,rbx
   14000e759:	call   QWORD PTR [rip+0x27e99]        # 0x1400365f8
   14000e75f:	test   rax,rax
   14000e762:	je     0x14000e780
   14000e764:	mov    r8,QWORD PTR [rsp+0x60]
   14000e769:	mov    edx,DWORD PTR [rsp+0x58]
   14000e76d:	mov    r9,rbp
   14000e770:	mov    rcx,rbx
   14000e773:	mov    DWORD PTR [rsp+0x28],edi
   14000e777:	mov    DWORD PTR [rsp+0x20],esi
   14000e77b:	call   0x14000e6e0
   14000e780:	mov    edx,0x2
   14000e785:	mov    rcx,rbx
   14000e788:	call   QWORD PTR [rip+0x27fb2]        # 0x140036740
   14000e78e:	mov    rbx,rax
   14000e791:	test   rax,rax
   14000e794:	jne    0x14000e712
   14000e79a:	mov    rbx,QWORD PTR [rsp+0x50]
   14000e79f:	add    rsp,0x30
   14000e7a3:	pop    rdi
   14000e7a4:	pop    rsi
   14000e7a5:	pop    rbp
   14000e7a6:	ret    
   14000e7a7:	int3   
   14000e7a8:	mov    rax,rsp
   14000e7ab:	push   rdi
   14000e7ac:	sub    rsp,0xe0
   14000e7b3:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14000e7bc:	mov    QWORD PTR [rax+0x8],rbx
   14000e7c0:	mov    QWORD PTR [rax+0x10],rbp
   14000e7c4:	mov    QWORD PTR [rax+0x18],rsi
   14000e7c8:	mov    rbp,rdx
   14000e7cb:	mov    rdi,rcx
   14000e7ce:	call   0x140007e40
   14000e7d3:	mov    rcx,QWORD PTR [rax+0x28]
   14000e7d7:	xor    ebx,ebx
   14000e7d9:	cmp    rcx,rbx
   14000e7dc:	jne    0x14000e7e5
   14000e7de:	xor    eax,eax
   14000e7e0:	jmp    0x14000e880
   14000e7e5:	lea    rsi,[rcx+0x30]
   14000e7e9:	mov    rdx,rdi
   14000e7ec:	mov    rcx,rsi
   14000e7ef:	call   0x1400087ec
   14000e7f4:	cmp    rax,rbx
   14000e7f7:	jne    0x14000e875
   14000e7f9:	mov    rcx,rdi
   14000e7fc:	call   QWORD PTR [rip+0x27efe]        # 0x140036700
   14000e802:	mov    rdx,rax
   14000e805:	mov    rcx,rsi
   14000e808:	call   0x1400087ec
   14000e80d:	cmp    rax,rbx
   14000e810:	je     0x14000e871
   14000e812:	mov    rcx,QWORD PTR [rax+0x98]
   14000e819:	cmp    rcx,rbx
   14000e81c:	je     0x14000e871
   14000e81e:	add    rcx,0x48
   14000e822:	mov    rdx,rdi
   14000e825:	call   0x1400087ec
   14000e82a:	mov    rsi,rax
   14000e82d:	cmp    rax,rbx
   14000e830:	je     0x14000e871
   14000e832:	mov    rdx,rdi
   14000e835:	lea    rcx,[rsp+0x30]
   14000e83a:	call   0x14000b660
   14000e83f:	nop
   14000e840:	mov    QWORD PTR [rsp+0xd0],rsi
   14000e848:	mov    rdx,rbp
   14000e84b:	lea    rcx,[rsp+0x30]
   14000e850:	call   0x14000dff4
   14000e855:	movsxd rcx,eax
   14000e858:	mov    QWORD PTR [rsp+0x70],rbx
   14000e85d:	cmp    rcx,rbx
   14000e860:	setne  bl
   14000e863:	lea    rcx,[rsp+0x30]
   14000e868:	call   0x14000e554
   14000e86d:	mov    eax,ebx
   14000e86f:	jmp    0x14000e880
   14000e871:	xor    eax,eax
   14000e873:	jmp    0x14000e880
   14000e875:	mov    rdx,rbp
   14000e878:	mov    rcx,rax
   14000e87b:	call   0x14000dff4
   14000e880:	lea    r11,[rsp+0xe0]
   14000e888:	mov    rbx,QWORD PTR [r11+0x10]
   14000e88c:	mov    rbp,QWORD PTR [r11+0x18]
   14000e890:	mov    rsi,QWORD PTR [r11+0x20]
   14000e894:	mov    rsp,r11
   14000e897:	pop    rdi
   14000e898:	ret    
   14000e899:	int3   
   14000e89a:	int3   
   14000e89b:	int3   
   14000e89c:	rex push rbx
   14000e89e:	sub    rsp,0x20
   14000e8a2:	mov    rbx,rcx
   14000e8a5:	cmp    dx,0x1
   14000e8a9:	je     0x14000e8b1
   14000e8ab:	cmp    dx,0x2
   14000e8af:	jne    0x14000e8bf
   14000e8b1:	xor    edx,edx
   14000e8b3:	mov    rcx,r8
   14000e8b6:	call   0x14000e7a8
   14000e8bb:	test   eax,eax
   14000e8bd:	jne    0x14000e8c7
   14000e8bf:	mov    rcx,rbx
   14000e8c2:	call   0x14000da24
   14000e8c7:	add    rsp,0x20
   14000e8cb:	pop    rbx
   14000e8cc:	ret    
   14000e8cd:	int3   
   14000e8ce:	int3   
   14000e8cf:	int3   
   14000e8d0:	rex push rbx
   14000e8d2:	sub    rsp,0x20
   14000e8d6:	mov    rbx,rcx
   14000e8d9:	mov    rcx,QWORD PTR [r8+0x8]
   14000e8dd:	lea    rdx,[rsp+0x40]
   14000e8e2:	call   0x14000e7a8
   14000e8e7:	test   eax,eax
   14000e8e9:	je     0x14000e8f2
   14000e8eb:	movsxd rax,DWORD PTR [rsp+0x40]
   14000e8f0:	jmp    0x14000e8fc
   14000e8f2:	mov    rcx,rbx
   14000e8f5:	call   0x14000da24
   14000e8fa:	cdqe   
   14000e8fc:	add    rsp,0x20
   14000e900:	pop    rbx
   14000e901:	ret    
   14000e902:	int3   
   14000e903:	int3   
   14000e904:	sub    rsp,0x28
   14000e908:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e90d:	jne    0x14000e916
   14000e90f:	mov    eax,0x80010108
   14000e914:	jmp    0x14000e92c
   14000e916:	test   rdx,rdx
   14000e919:	jne    0x14000e922
   14000e91b:	mov    eax,0x80004003
   14000e920:	jmp    0x14000e92c
   14000e922:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e926:	mov    rax,QWORD PTR [rcx]
   14000e929:	call   QWORD PTR [rax+0x38]
   14000e92c:	add    rsp,0x28
   14000e930:	ret    
   14000e931:	int3   
   14000e932:	int3   
   14000e933:	int3   
   14000e934:	sub    rsp,0x28
   14000e938:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e93d:	jne    0x14000e946
   14000e93f:	mov    eax,0x80010108
   14000e944:	jmp    0x14000e95c
   14000e946:	test   rdx,rdx
   14000e949:	jne    0x14000e952
   14000e94b:	mov    eax,0x80004003
   14000e950:	jmp    0x14000e95c
   14000e952:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e956:	mov    rax,QWORD PTR [rcx]
   14000e959:	call   QWORD PTR [rax+0x40]
   14000e95c:	add    rsp,0x28
   14000e960:	ret    
   14000e961:	int3   
   14000e962:	int3   
   14000e963:	int3   
   14000e964:	sub    rsp,0x48
   14000e968:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e96d:	jne    0x14000e976
   14000e96f:	mov    eax,0x80010108
   14000e974:	jmp    0x14000e9ac
   14000e976:	test   r8,r8
   14000e979:	jne    0x14000e982
   14000e97b:	mov    eax,0x80004003
   14000e980:	jmp    0x14000e9ac
   14000e982:	mov    rax,QWORD PTR [rdx]
   14000e985:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e989:	lea    r9,[rsp+0x20]
   14000e98e:	mov    QWORD PTR [r9],rax
   14000e991:	mov    rax,QWORD PTR [rdx+0x8]
   14000e995:	mov    QWORD PTR [r9+0x8],rax
   14000e999:	mov    rax,QWORD PTR [rdx+0x10]
   14000e99d:	lea    rdx,[rsp+0x20]
   14000e9a2:	mov    QWORD PTR [r9+0x10],rax
   14000e9a6:	mov    rax,QWORD PTR [rcx]
   14000e9a9:	call   QWORD PTR [rax+0x48]
   14000e9ac:	add    rsp,0x48
   14000e9b0:	ret    
   14000e9b1:	int3   
   14000e9b2:	int3   
   14000e9b3:	int3   
   14000e9b4:	sub    rsp,0x48
   14000e9b8:	cmp    QWORD PTR [rcx+0x10],0x0
   14000e9bd:	jne    0x14000e9c6
   14000e9bf:	mov    eax,0x80010108
   14000e9c4:	jmp    0x14000e9fc
   14000e9c6:	test   r8,r8
   14000e9c9:	jne    0x14000e9d2
   14000e9cb:	mov    eax,0x80004003
   14000e9d0:	jmp    0x14000e9fc
   14000e9d2:	mov    rax,QWORD PTR [rdx]
   14000e9d5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000e9d9:	lea    r9,[rsp+0x20]
   14000e9de:	mov    QWORD PTR [r9],rax
   14000e9e1:	mov    rax,QWORD PTR [rdx+0x8]
   14000e9e5:	mov    QWORD PTR [r9+0x8],rax
   14000e9e9:	mov    rax,QWORD PTR [rdx+0x10]
   14000e9ed:	lea    rdx,[rsp+0x20]
   14000e9f2:	mov    QWORD PTR [r9+0x10],rax
   14000e9f6:	mov    rax,QWORD PTR [rcx]
   14000e9f9:	call   QWORD PTR [rax+0x50]
   14000e9fc:	add    rsp,0x48
   14000ea00:	ret    
   14000ea01:	int3   
   14000ea02:	int3   
   14000ea03:	int3   
   14000ea04:	sub    rsp,0x48
   14000ea08:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ea0d:	jne    0x14000ea16
   14000ea0f:	mov    eax,0x80010108
   14000ea14:	jmp    0x14000ea4c
   14000ea16:	test   r8,r8
   14000ea19:	jne    0x14000ea22
   14000ea1b:	mov    eax,0x80004003
   14000ea20:	jmp    0x14000ea4c
   14000ea22:	mov    rax,QWORD PTR [rdx]
   14000ea25:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ea29:	lea    r9,[rsp+0x20]
   14000ea2e:	mov    QWORD PTR [r9],rax
   14000ea31:	mov    rax,QWORD PTR [rdx+0x8]
   14000ea35:	mov    QWORD PTR [r9+0x8],rax
   14000ea39:	mov    rax,QWORD PTR [rdx+0x10]
   14000ea3d:	lea    rdx,[rsp+0x20]
   14000ea42:	mov    QWORD PTR [r9+0x10],rax
   14000ea46:	mov    rax,QWORD PTR [rcx]
   14000ea49:	call   QWORD PTR [rax+0x58]
   14000ea4c:	add    rsp,0x48
   14000ea50:	ret    
   14000ea51:	int3   
   14000ea52:	int3   
   14000ea53:	int3   
   14000ea54:	sub    rsp,0x48
   14000ea58:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ea5d:	jne    0x14000ea66
   14000ea5f:	mov    eax,0x80010108
   14000ea64:	jmp    0x14000ea9c
   14000ea66:	test   r8,r8
   14000ea69:	jne    0x14000ea72
   14000ea6b:	mov    eax,0x80004003
   14000ea70:	jmp    0x14000ea9c
   14000ea72:	mov    rax,QWORD PTR [rdx]
   14000ea75:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ea79:	lea    r9,[rsp+0x20]
   14000ea7e:	mov    QWORD PTR [r9],rax
   14000ea81:	mov    rax,QWORD PTR [rdx+0x8]
   14000ea85:	mov    QWORD PTR [r9+0x8],rax
   14000ea89:	mov    rax,QWORD PTR [rdx+0x10]
   14000ea8d:	lea    rdx,[rsp+0x20]
   14000ea92:	mov    QWORD PTR [r9+0x10],rax
   14000ea96:	mov    rax,QWORD PTR [rcx]
   14000ea99:	call   QWORD PTR [rax+0x60]
   14000ea9c:	add    rsp,0x48
   14000eaa0:	ret    
   14000eaa1:	int3   
   14000eaa2:	int3   
   14000eaa3:	int3   
   14000eaa4:	sub    rsp,0x48
   14000eaa8:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eaad:	jne    0x14000eab6
   14000eaaf:	mov    eax,0x80010108
   14000eab4:	jmp    0x14000eaec
   14000eab6:	test   r8,r8
   14000eab9:	jne    0x14000eac2
   14000eabb:	mov    eax,0x80004003
   14000eac0:	jmp    0x14000eaec
   14000eac2:	mov    rax,QWORD PTR [rdx]
   14000eac5:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eac9:	lea    r9,[rsp+0x20]
   14000eace:	mov    QWORD PTR [r9],rax
   14000ead1:	mov    rax,QWORD PTR [rdx+0x8]
   14000ead5:	mov    QWORD PTR [r9+0x8],rax
   14000ead9:	mov    rax,QWORD PTR [rdx+0x10]
   14000eadd:	lea    rdx,[rsp+0x20]
   14000eae2:	mov    QWORD PTR [r9+0x10],rax
   14000eae6:	mov    rax,QWORD PTR [rcx]
   14000eae9:	call   QWORD PTR [rax+0x68]
   14000eaec:	add    rsp,0x48
   14000eaf0:	ret    
   14000eaf1:	int3   
   14000eaf2:	int3   
   14000eaf3:	int3   
   14000eaf4:	sub    rsp,0x48
   14000eaf8:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eafd:	jne    0x14000eb06
   14000eaff:	mov    eax,0x80010108
   14000eb04:	jmp    0x14000eb3c
   14000eb06:	test   r8,r8
   14000eb09:	jne    0x14000eb12
   14000eb0b:	mov    eax,0x80004003
   14000eb10:	jmp    0x14000eb3c
   14000eb12:	mov    rax,QWORD PTR [rdx]
   14000eb15:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eb19:	lea    r9,[rsp+0x20]
   14000eb1e:	mov    QWORD PTR [r9],rax
   14000eb21:	mov    rax,QWORD PTR [rdx+0x8]
   14000eb25:	mov    QWORD PTR [r9+0x8],rax
   14000eb29:	mov    rax,QWORD PTR [rdx+0x10]
   14000eb2d:	lea    rdx,[rsp+0x20]
   14000eb32:	mov    QWORD PTR [r9+0x10],rax
   14000eb36:	mov    rax,QWORD PTR [rcx]
   14000eb39:	call   QWORD PTR [rax+0x70]
   14000eb3c:	add    rsp,0x48
   14000eb40:	ret    
   14000eb41:	int3   
   14000eb42:	int3   
   14000eb43:	int3   
   14000eb44:	sub    rsp,0x48
   14000eb48:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eb4d:	jne    0x14000eb56
   14000eb4f:	mov    eax,0x80010108
   14000eb54:	jmp    0x14000eb8c
   14000eb56:	test   r8,r8
   14000eb59:	jne    0x14000eb62
   14000eb5b:	mov    eax,0x80004003
   14000eb60:	jmp    0x14000eb8c
   14000eb62:	mov    rax,QWORD PTR [rdx]
   14000eb65:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eb69:	lea    r9,[rsp+0x20]
   14000eb6e:	mov    QWORD PTR [r9],rax
   14000eb71:	mov    rax,QWORD PTR [rdx+0x8]
   14000eb75:	mov    QWORD PTR [r9+0x8],rax
   14000eb79:	mov    rax,QWORD PTR [rdx+0x10]
   14000eb7d:	lea    rdx,[rsp+0x20]
   14000eb82:	mov    QWORD PTR [r9+0x10],rax
   14000eb86:	mov    rax,QWORD PTR [rcx]
   14000eb89:	call   QWORD PTR [rax+0x78]
   14000eb8c:	add    rsp,0x48
   14000eb90:	ret    
   14000eb91:	int3   
   14000eb92:	int3   
   14000eb93:	int3   
   14000eb94:	sub    rsp,0x48
   14000eb98:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eb9d:	jne    0x14000eba6
   14000eb9f:	mov    eax,0x80010108
   14000eba4:	jmp    0x14000ebe4
   14000eba6:	test   rdx,rdx
   14000eba9:	jne    0x14000ebb2
   14000ebab:	mov    eax,0x80004003
   14000ebb0:	jmp    0x14000ebe4
   14000ebb2:	test   r9,r9
   14000ebb5:	je     0x14000ebab
   14000ebb7:	mov    rax,QWORD PTR [r8]
   14000ebba:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ebbe:	lea    r10,[rsp+0x20]
   14000ebc3:	mov    QWORD PTR [r10],rax
   14000ebc6:	mov    rax,QWORD PTR [r8+0x8]
   14000ebca:	mov    QWORD PTR [r10+0x8],rax
   14000ebce:	mov    rax,QWORD PTR [r8+0x10]
   14000ebd2:	lea    r8,[rsp+0x20]
   14000ebd7:	mov    QWORD PTR [r10+0x10],rax
   14000ebdb:	mov    rax,QWORD PTR [rcx]
   14000ebde:	call   QWORD PTR [rax+0x80]
   14000ebe4:	add    rsp,0x48
   14000ebe8:	ret    
   14000ebe9:	int3   
   14000ebea:	int3   
   14000ebeb:	int3   
   14000ebec:	sub    rsp,0x48
   14000ebf0:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ebf5:	jne    0x14000ebfe
   14000ebf7:	mov    eax,0x80010108
   14000ebfc:	jmp    0x14000ec37
   14000ebfe:	test   r8,r8
   14000ec01:	jne    0x14000ec0a
   14000ec03:	mov    eax,0x80004003
   14000ec08:	jmp    0x14000ec37
   14000ec0a:	mov    rax,QWORD PTR [rdx]
   14000ec0d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec11:	lea    r9,[rsp+0x20]
   14000ec16:	mov    QWORD PTR [r9],rax
   14000ec19:	mov    rax,QWORD PTR [rdx+0x8]
   14000ec1d:	mov    QWORD PTR [r9+0x8],rax
   14000ec21:	mov    rax,QWORD PTR [rdx+0x10]
   14000ec25:	lea    rdx,[rsp+0x20]
   14000ec2a:	mov    QWORD PTR [r9+0x10],rax
   14000ec2e:	mov    rax,QWORD PTR [rcx]
   14000ec31:	call   QWORD PTR [rax+0x88]
   14000ec37:	add    rsp,0x48
   14000ec3b:	ret    
   14000ec3c:	sub    rsp,0x28
   14000ec40:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ec45:	jne    0x14000ec4e
   14000ec47:	mov    eax,0x80010108
   14000ec4c:	jmp    0x14000ec67
   14000ec4e:	test   rdx,rdx
   14000ec51:	jne    0x14000ec5a
   14000ec53:	mov    eax,0x80004003
   14000ec58:	jmp    0x14000ec67
   14000ec5a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec5e:	mov    rax,QWORD PTR [rcx]
   14000ec61:	call   QWORD PTR [rax+0x90]
   14000ec67:	add    rsp,0x28
   14000ec6b:	ret    
   14000ec6c:	sub    rsp,0x28
   14000ec70:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ec75:	jne    0x14000ec7e
   14000ec77:	mov    eax,0x80010108
   14000ec7c:	jmp    0x14000ec97
   14000ec7e:	test   rdx,rdx
   14000ec81:	jne    0x14000ec8a
   14000ec83:	mov    eax,0x80004003
   14000ec88:	jmp    0x14000ec97
   14000ec8a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ec8e:	mov    rax,QWORD PTR [rcx]
   14000ec91:	call   QWORD PTR [rax+0x98]
   14000ec97:	add    rsp,0x28
   14000ec9b:	ret    
   14000ec9c:	sub    rsp,0x48
   14000eca0:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eca5:	jne    0x14000ecae
   14000eca7:	mov    eax,0x80010108
   14000ecac:	jmp    0x14000ece7
   14000ecae:	test   r8,r8
   14000ecb1:	jne    0x14000ecba
   14000ecb3:	mov    eax,0x80004003
   14000ecb8:	jmp    0x14000ece7
   14000ecba:	mov    rax,QWORD PTR [rdx]
   14000ecbd:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ecc1:	lea    r9,[rsp+0x20]
   14000ecc6:	mov    QWORD PTR [r9],rax
   14000ecc9:	mov    rax,QWORD PTR [rdx+0x8]
   14000eccd:	mov    QWORD PTR [r9+0x8],rax
   14000ecd1:	mov    rax,QWORD PTR [rdx+0x10]
   14000ecd5:	lea    rdx,[rsp+0x20]
   14000ecda:	mov    QWORD PTR [r9+0x10],rax
   14000ecde:	mov    rax,QWORD PTR [rcx]
   14000ece1:	call   QWORD PTR [rax+0xa0]
   14000ece7:	add    rsp,0x48
   14000eceb:	ret    
   14000ecec:	sub    rsp,0x48
   14000ecf0:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ecf5:	jne    0x14000ecfe
   14000ecf7:	mov    eax,0x80010108
   14000ecfc:	jmp    0x14000ed2b
   14000ecfe:	mov    rax,QWORD PTR [r8]
   14000ed01:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ed05:	lea    r9,[rsp+0x20]
   14000ed0a:	mov    QWORD PTR [r9],rax
   14000ed0d:	mov    rax,QWORD PTR [r8+0x8]
   14000ed11:	mov    QWORD PTR [r9+0x8],rax
   14000ed15:	mov    rax,QWORD PTR [r8+0x10]
   14000ed19:	lea    r8,[rsp+0x20]
   14000ed1e:	mov    QWORD PTR [r9+0x10],rax
   14000ed22:	mov    rax,QWORD PTR [rcx]
   14000ed25:	call   QWORD PTR [rax+0xa8]
   14000ed2b:	add    rsp,0x48
   14000ed2f:	ret    
   14000ed30:	rex push rbx
   14000ed32:	sub    rsp,0x50
   14000ed36:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ed3b:	mov    r10,rdx
   14000ed3e:	mov    r11,rcx
   14000ed41:	jne    0x14000ed4a
   14000ed43:	mov    eax,0x80010108
   14000ed48:	jmp    0x14000edaf
   14000ed4a:	test   rdx,rdx
   14000ed4d:	jne    0x14000ed56
   14000ed4f:	mov    eax,0x80004003
   14000ed54:	jmp    0x14000edaf
   14000ed56:	test   r8,r8
   14000ed59:	je     0x14000ed4f
   14000ed5b:	test   r9,r9
   14000ed5e:	je     0x14000ed4f
   14000ed60:	mov    rdx,QWORD PTR [rsp+0x80]
   14000ed68:	test   rdx,rdx
   14000ed6b:	je     0x14000ed4f
   14000ed6d:	mov    rcx,QWORD PTR [rsp+0x88]
   14000ed75:	lea    rbx,[rsp+0x30]
   14000ed7a:	mov    rax,QWORD PTR [rcx]
   14000ed7d:	mov    QWORD PTR [rbx],rax
   14000ed80:	mov    rax,QWORD PTR [rcx+0x8]
   14000ed84:	mov    QWORD PTR [rbx+0x8],rax
   14000ed88:	mov    rax,QWORD PTR [rcx+0x10]
   14000ed8c:	mov    rcx,QWORD PTR [r11+0x10]
   14000ed90:	lea    r11,[rsp+0x30]
   14000ed95:	mov    QWORD PTR [rbx+0x10],rax
   14000ed99:	mov    rax,QWORD PTR [rcx]
   14000ed9c:	mov    QWORD PTR [rsp+0x28],r11
   14000eda1:	mov    QWORD PTR [rsp+0x20],rdx
   14000eda6:	mov    rdx,r10
   14000eda9:	call   QWORD PTR [rax+0xb0]
   14000edaf:	add    rsp,0x50
   14000edb3:	pop    rbx
   14000edb4:	ret    
   14000edb5:	int3   
   14000edb6:	int3   
   14000edb7:	int3   
   14000edb8:	sub    rsp,0x48
   14000edbc:	cmp    QWORD PTR [rcx+0x10],0x0
   14000edc1:	jne    0x14000edca
   14000edc3:	mov    eax,0x80010108
   14000edc8:	jmp    0x14000ee03
   14000edca:	test   r9,r9
   14000edcd:	jne    0x14000edd6
   14000edcf:	mov    eax,0x80004003
   14000edd4:	jmp    0x14000ee03
   14000edd6:	mov    rax,QWORD PTR [r8]
   14000edd9:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eddd:	lea    r10,[rsp+0x20]
   14000ede2:	mov    QWORD PTR [r10],rax
   14000ede5:	mov    rax,QWORD PTR [r8+0x8]
   14000ede9:	mov    QWORD PTR [r10+0x8],rax
   14000eded:	mov    rax,QWORD PTR [r8+0x10]
   14000edf1:	lea    r8,[rsp+0x20]
   14000edf6:	mov    QWORD PTR [r10+0x10],rax
   14000edfa:	mov    rax,QWORD PTR [rcx]
   14000edfd:	call   QWORD PTR [rax+0xb8]
   14000ee03:	add    rsp,0x48
   14000ee07:	ret    
   14000ee08:	sub    rsp,0x28
   14000ee0c:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ee11:	jne    0x14000ee1a
   14000ee13:	mov    eax,0x80010108
   14000ee18:	jmp    0x14000ee33
   14000ee1a:	test   r9,r9
   14000ee1d:	jne    0x14000ee26
   14000ee1f:	mov    eax,0x80004003
   14000ee24:	jmp    0x14000ee33
   14000ee26:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ee2a:	mov    rax,QWORD PTR [rcx]
   14000ee2d:	call   QWORD PTR [rax+0xc0]
   14000ee33:	add    rsp,0x28
   14000ee37:	ret    
   14000ee38:	sub    rsp,0x48
   14000ee3c:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ee41:	jne    0x14000ee4a
   14000ee43:	mov    eax,0x80010108
   14000ee48:	jmp    0x14000ee77
   14000ee4a:	mov    rax,QWORD PTR [rdx]
   14000ee4d:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ee51:	lea    r8,[rsp+0x20]
   14000ee56:	mov    QWORD PTR [r8],rax
   14000ee59:	mov    rax,QWORD PTR [rdx+0x8]
   14000ee5d:	mov    QWORD PTR [r8+0x8],rax
   14000ee61:	mov    rax,QWORD PTR [rdx+0x10]
   14000ee65:	lea    rdx,[rsp+0x20]
   14000ee6a:	mov    QWORD PTR [r8+0x10],rax
   14000ee6e:	mov    rax,QWORD PTR [rcx]
   14000ee71:	call   QWORD PTR [rax+0xc8]
   14000ee77:	add    rsp,0x48
   14000ee7b:	ret    
   14000ee7c:	mov    rax,QWORD PTR [rcx+0x10]
   14000ee80:	neg    rax
   14000ee83:	sbb    eax,eax
   14000ee85:	and    eax,0xffff3ef9
   14000ee8a:	add    eax,0x80010108
   14000ee8f:	ret    
   14000ee90:	mov    QWORD PTR [rcx+0x8],rdx
   14000ee94:	mov    QWORD PTR [rcx+0x10],r8
   14000ee98:	xor    eax,eax
   14000ee9a:	ret    
   14000ee9b:	int3   
   14000ee9c:	sub    rsp,0x58
   14000eea0:	cmp    QWORD PTR [rcx+0x10],0x0
   14000eea5:	jne    0x14000eeae
   14000eea7:	mov    eax,0x80010108
   14000eeac:	jmp    0x14000eefa
   14000eeae:	mov    rax,QWORD PTR [rsp+0xa0]
   14000eeb6:	mov    rcx,QWORD PTR [rcx+0x10]
   14000eeba:	mov    r10,QWORD PTR [rcx]
   14000eebd:	mov    QWORD PTR [rsp+0x40],rax
   14000eec2:	mov    rax,QWORD PTR [rsp+0x98]
   14000eeca:	mov    QWORD PTR [rsp+0x38],rax
   14000eecf:	mov    rax,QWORD PTR [rsp+0x90]
   14000eed7:	mov    QWORD PTR [rsp+0x30],rax
   14000eedc:	mov    rax,QWORD PTR [rsp+0x88]
   14000eee4:	mov    QWORD PTR [rsp+0x28],rax
   14000eee9:	movzx  eax,WORD PTR [rsp+0x80]
   14000eef1:	mov    WORD PTR [rsp+0x20],ax
   14000eef6:	call   QWORD PTR [r10+0x30]
   14000eefa:	add    rsp,0x58
   14000eefe:	ret    
   14000eeff:	int3   
   14000ef00:	sub    rsp,0x38
   14000ef04:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ef09:	jne    0x14000ef12
   14000ef0b:	mov    eax,0x80010108
   14000ef10:	jmp    0x14000ef2f
   14000ef12:	mov    rax,QWORD PTR [rsp+0x68]
   14000ef17:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef1b:	mov    r10,QWORD PTR [rcx]
   14000ef1e:	mov    QWORD PTR [rsp+0x28],rax
   14000ef23:	mov    eax,DWORD PTR [rsp+0x60]
   14000ef27:	mov    DWORD PTR [rsp+0x20],eax
   14000ef2b:	call   QWORD PTR [r10+0x28]
   14000ef2f:	add    rsp,0x38
   14000ef33:	ret    
   14000ef34:	sub    rsp,0x28
   14000ef38:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ef3d:	jne    0x14000ef46
   14000ef3f:	mov    eax,0x80010108
   14000ef44:	jmp    0x14000ef50
   14000ef46:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef4a:	mov    rax,QWORD PTR [rcx]
   14000ef4d:	call   QWORD PTR [rax+0x18]
   14000ef50:	add    rsp,0x28
   14000ef54:	ret    
   14000ef55:	int3   
   14000ef56:	int3   
   14000ef57:	int3   
   14000ef58:	sub    rsp,0x28
   14000ef5c:	cmp    QWORD PTR [rcx+0x10],0x0
   14000ef61:	jne    0x14000ef6a
   14000ef63:	mov    eax,0x80010108
   14000ef68:	jmp    0x14000ef74
   14000ef6a:	mov    rcx,QWORD PTR [rcx+0x10]
   14000ef6e:	mov    rax,QWORD PTR [rcx]
   14000ef71:	call   QWORD PTR [rax+0x20]
   14000ef74:	add    rsp,0x28
   14000ef78:	ret    
   14000ef79:	int3   
   14000ef7a:	int3   
   14000ef7b:	int3   
   14000ef7c:	mov    QWORD PTR [rsp+0x8],rbx
   14000ef81:	push   rdi
   14000ef82:	sub    rsp,0x20
   14000ef86:	mov    ebx,edx
   14000ef88:	mov    rdi,rcx
   14000ef8b:	call   0x14000e554
   14000ef90:	test   bl,0x1
   14000ef93:	je     0x14000ef9d
   14000ef95:	mov    rcx,rdi
   14000ef98:	call   0x1400062d4
   14000ef9d:	mov    rax,rdi
   14000efa0:	mov    rbx,QWORD PTR [rsp+0x30]
   14000efa5:	add    rsp,0x20
   14000efa9:	pop    rdi
   14000efaa:	ret    
   14000efab:	int3   
   14000efac:	mov    QWORD PTR [rsp+0x8],rbx
   14000efb1:	push   rdi
   14000efb2:	sub    rsp,0x20
   14000efb6:	cmp    DWORD PTR [r8],0x1
   14000efba:	mov    rbx,r8
   14000efbd:	mov    rdi,rcx
   14000efc0:	jne    0x14000efdf
   14000efc2:	mov    rcx,QWORD PTR [r8+0x18]
   14000efc6:	call   0x140012358
   14000efcb:	test   rax,rax
   14000efce:	je     0x14000efdf
   14000efd0:	mov    r9,QWORD PTR [rax]
   14000efd3:	mov    rdx,rbx
   14000efd6:	mov    rcx,rax
   14000efd9:	call   QWORD PTR [r9+0x18]
   14000efdd:	jmp    0x14000eff6
   14000efdf:	mov    rcx,QWORD PTR [rbx+0x18]
   14000efe3:	xor    edx,edx
   14000efe5:	call   0x14000e7a8
   14000efea:	test   eax,eax
   14000efec:	jne    0x14000eff6
   14000efee:	mov    rcx,rdi
   14000eff1:	call   0x14000da24
   14000eff6:	mov    rbx,QWORD PTR [rsp+0x30]
   14000effb:	add    rsp,0x20
   14000efff:	pop    rdi
   14000f000:	ret    
   14000f001:	int3   
   14000f002:	int3   
   14000f003:	int3   
   14000f004:	rex push rbx
   14000f006:	sub    rsp,0x20
   14000f00a:	mov    rbx,rcx
   14000f00d:	mov    rcx,QWORD PTR [r8+0x8]
   14000f011:	lea    rdx,[rsp+0x40]
   14000f016:	call   0x14000e7a8
   14000f01b:	test   eax,eax
   14000f01d:	je     0x14000f025
   14000f01f:	mov    eax,DWORD PTR [rsp+0x40]
   14000f023:	jmp    0x14000f02d
   14000f025:	mov    rcx,rbx
   14000f028:	call   0x14000da24
   14000f02d:	add    rsp,0x20
   14000f031:	pop    rbx
   14000f032:	ret    
   14000f033:	int3   
   14000f034:	rex push rbx
   14000f036:	sub    rsp,0x20
   14000f03a:	mov    rbx,rcx
   14000f03d:	mov    rcx,QWORD PTR [r8+0x10]
   14000f041:	xor    edx,edx
   14000f043:	call   0x14000e7a8
   14000f048:	test   eax,eax
   14000f04a:	jne    0x14000f054
   14000f04c:	mov    rcx,rbx
   14000f04f:	call   0x14000da24
   14000f054:	add    rsp,0x20
   14000f058:	pop    rbx
   14000f059:	ret    
   14000f05a:	int3   
   14000f05b:	int3   
   14000f05c:	mov    rax,rsp
   14000f05f:	mov    QWORD PTR [rax+0x8],rbx
   14000f063:	mov    QWORD PTR [rax+0x10],rbp
   14000f067:	mov    QWORD PTR [rax+0x18],rsi
   14000f06b:	mov    QWORD PTR [rax+0x20],rdi
   14000f06f:	push   r12
   14000f071:	sub    rsp,0x20
   14000f075:	mov    r12,rcx
   14000f078:	mov    ecx,0xc
   14000f07d:	mov    rdi,r9
   14000f080:	mov    esi,r8d
   14000f083:	mov    rbp,rdx
   14000f086:	call   0x140006d04
   14000f08b:	lea    rdx,[rip+0xfffffffffffff21e]        # 0x14000e2b0
   14000f092:	lea    rcx,[rip+0x3f2b7]        # 0x14004e350
   14000f099:	call   0x1400066f0
   14000f09e:	mov    rbx,rax
   14000f0a1:	test   rax,rax
   14000f0a4:	jne    0x14000f0ac
   14000f0a6:	call   0x140006520
   14000f0ab:	int3   
   14000f0ac:	cmp    QWORD PTR [rax+0x10],0x0
   14000f0b1:	jne    0x14000f0f6
   14000f0b3:	lea    rcx,[rip+0x290e6]        # 0x1400381a0
   14000f0ba:	call   0x14000c1b0
   14000f0bf:	mov    QWORD PTR [rbx+0x8],rax
   14000f0c3:	test   rax,rax
   14000f0c6:	jne    0x14000f0cc
   14000f0c8:	xor    eax,eax
   14000f0ca:	jmp    0x14000f10f
   14000f0cc:	lea    rdx,[rip+0x290bd]        # 0x140038190
   14000f0d3:	mov    rcx,rax
   14000f0d6:	call   QWORD PTR [rip+0x273cc]        # 0x1400364a8
   14000f0dc:	mov    QWORD PTR [rbx+0x10],rax
   14000f0e0:	test   rax,rax
   14000f0e3:	jne    0x14000f0f6
   14000f0e5:	mov    rcx,QWORD PTR [rbx+0x8]
   14000f0e9:	call   QWORD PTR [rip+0x27381]        # 0x140036470
   14000f0ef:	and    QWORD PTR [rbx+0x8],0x0
   14000f0f4:	jmp    0x14000f0c8
   14000f0f6:	mov    ecx,0xc
   14000f0fb:	call   0x140006d98
   14000f100:	mov    r9,rdi
   14000f103:	mov    r8d,esi
   14000f106:	mov    rdx,rbp
   14000f109:	mov    rcx,r12
   14000f10c:	call   QWORD PTR [rbx+0x10]
   14000f10f:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f114:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f119:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f11e:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f123:	add    rsp,0x20
   14000f127:	pop    r12
   14000f129:	ret    
   14000f12a:	int3   
   14000f12b:	int3   
   14000f12c:	mov    QWORD PTR [rsp+0x8],rbx
   14000f131:	mov    QWORD PTR [rsp+0x10],rbp
   14000f136:	mov    QWORD PTR [rsp+0x18],rsi
   14000f13b:	push   rdi
   14000f13c:	sub    rsp,0x80
   14000f143:	movzx  ebx,dx
   14000f146:	shr    rdx,0x10
   14000f14a:	mov    rbp,r8
   14000f14d:	mov    rdi,rcx
   14000f150:	movzx  esi,dx
   14000f153:	test   r8,r8
   14000f156:	jne    0x14000f19d
   14000f158:	test   ebx,ebx
   14000f15a:	jne    0x14000f163
   14000f15c:	xor    eax,eax
   14000f15e:	jmp    0x14000f1f8
   14000f163:	lea    rcx,[rsp+0x30]
   14000f168:	call   0x14000b968
   14000f16d:	mov    rax,QWORD PTR [rdi]
   14000f170:	and    QWORD PTR [rsp+0x20],0x0
   14000f176:	lea    r9,[rsp+0x30]
   14000f17b:	or     r8d,0xffffffff
   14000f17f:	mov    edx,ebx
   14000f181:	mov    rcx,rdi
   14000f184:	mov    DWORD PTR [rsp+0x38],ebx
   14000f188:	call   QWORD PTR [rax+0x18]
   14000f18b:	cmp    DWORD PTR [rsp+0x70],0x0
   14000f190:	jne    0x14000f199
   14000f192:	mov    eax,0x1
   14000f197:	jmp    0x14000f1f8
   14000f199:	xor    esi,esi
   14000f19b:	jmp    0x14000f1e1
   14000f19d:	lea    rdx,[rip+0xffffffffffff73a0]        # 0x140006544
   14000f1a4:	lea    rcx,[rip+0x3bdf5]        # 0x14004afa0
   14000f1ab:	call   0x140006bec
   14000f1b0:	mov    r11,rax
   14000f1b3:	test   rax,rax
   14000f1b6:	jne    0x14000f1be
   14000f1b8:	call   0x140006520
   14000f1bd:	int3   
   14000f1be:	mov    rax,QWORD PTR [rdi+0x40]
   14000f1c2:	cmp    QWORD PTR [r11+0x138],rax
   14000f1c9:	je     0x14000f192
   14000f1cb:	xor    edx,edx
   14000f1cd:	mov    rcx,rbp
   14000f1d0:	call   0x14000e7a8
   14000f1d5:	test   eax,eax
   14000f1d7:	jne    0x14000f192
   14000f1d9:	test   ebx,ebx
   14000f1db:	je     0x14000f15c
   14000f1e1:	mov    rax,QWORD PTR [rdi]
   14000f1e4:	and    QWORD PTR [rsp+0x20],0x0
   14000f1ea:	xor    r9d,r9d
   14000f1ed:	mov    r8d,esi
   14000f1f0:	mov    edx,ebx
   14000f1f2:	mov    rcx,rdi
   14000f1f5:	call   QWORD PTR [rax+0x18]
   14000f1f8:	lea    r11,[rsp+0x80]
   14000f200:	mov    rbx,QWORD PTR [r11+0x10]
   14000f204:	mov    rbp,QWORD PTR [r11+0x18]
   14000f208:	mov    rsi,QWORD PTR [r11+0x20]
   14000f20c:	mov    rsp,r11
   14000f20f:	pop    rdi
   14000f210:	ret    
   14000f211:	int3   
   14000f212:	int3   
   14000f213:	int3   
   14000f214:	mov    QWORD PTR [rsp+0x8],rbx
   14000f219:	mov    QWORD PTR [rsp+0x10],rbp
   14000f21e:	mov    QWORD PTR [rsp+0x18],rsi
   14000f223:	push   rdi
   14000f224:	push   r12
   14000f226:	push   r13
   14000f228:	sub    rsp,0x40
   14000f22c:	mov    rsi,QWORD PTR [r8]
   14000f22f:	mov    rbx,rcx
   14000f232:	mov    rdi,r9
   14000f235:	mov    rcx,rsi
   14000f238:	mov    rbp,r8
   14000f23b:	call   QWORD PTR [rip+0x2745f]        # 0x1400366a0
   14000f241:	mov    r13d,DWORD PTR [rbp+0x10]
   14000f245:	lea    rdx,[rip+0xffffffffffff72f8]        # 0x140006544
   14000f24c:	lea    rcx,[rip+0x3bd4d]        # 0x14004afa0
   14000f253:	mov    r12d,eax
   14000f256:	call   0x140006bec
   14000f25b:	mov    r11,rax
   14000f25e:	test   rax,rax
   14000f261:	jne    0x14000f269
   14000f263:	call   0x140006520
   14000f268:	int3   
   14000f269:	mov    rax,QWORD PTR [rbx+0x40]
   14000f26d:	cmp    QWORD PTR [r11+0x138],rax
   14000f274:	jne    0x14000f27d
   14000f276:	mov    eax,0x1
   14000f27b:	jmp    0x14000f2b8
   14000f27d:	mov    rdx,rdi
   14000f280:	mov    rcx,rsi
   14000f283:	call   0x14000e7a8
   14000f288:	test   eax,eax
   14000f28a:	jne    0x14000f276
   14000f28c:	mov    rax,QWORD PTR [rbx]
   14000f28f:	and    QWORD PTR [rsp+0x20],0x0
   14000f295:	movzx  r8d,r13w
   14000f299:	lea    r9,[rsp+0x30]
   14000f29e:	or     r8d,0x4e0000
   14000f2a5:	mov    edx,r12d
   14000f2a8:	mov    rcx,rbx
   14000f2ab:	mov    QWORD PTR [rsp+0x30],rdi
   14000f2b0:	mov    QWORD PTR [rsp+0x38],rbp
   14000f2b5:	call   QWORD PTR [rax+0x18]
   14000f2b8:	mov    rbx,QWORD PTR [rsp+0x60]
   14000f2bd:	mov    rbp,QWORD PTR [rsp+0x68]
   14000f2c2:	mov    rsi,QWORD PTR [rsp+0x70]
   14000f2c7:	add    rsp,0x40
   14000f2cb:	pop    r13
   14000f2cd:	pop    r12
   14000f2cf:	pop    rdi
   14000f2d0:	ret    
   14000f2d1:	int3   
   14000f2d2:	int3   
   14000f2d3:	int3   
   14000f2d4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f2d9:	push   rdi
   14000f2da:	sub    rsp,0x20
   14000f2de:	mov    rdi,rcx
   14000f2e1:	call   0x14000db60
   14000f2e6:	xor    ebx,ebx
   14000f2e8:	cmp    rax,rbx
   14000f2eb:	je     0x14000f316
   14000f2ed:	mov    rcx,QWORD PTR [rax+0x70]
   14000f2f1:	cmp    rcx,rbx
   14000f2f4:	jne    0x14000f303
   14000f2f6:	mov    rcx,QWORD PTR [rax+0x40]
   14000f2fa:	call   QWORD PTR [rip+0x27400]        # 0x140036700
   14000f300:	mov    rcx,rax
   14000f303:	call   0x14000db1c
   14000f308:	cmp    rax,rbx
   14000f30b:	je     0x14000f311
   14000f30d:	mov    rbx,QWORD PTR [rax+0x40]
   14000f311:	mov    rax,rbx
   14000f314:	jmp    0x14000f340
   14000f316:	mov    edx,0xfffffff0
   14000f31b:	mov    rcx,rdi
   14000f31e:	call   QWORD PTR [rip+0x273e4]        # 0x140036708
   14000f324:	mov    rcx,rdi
   14000f327:	bt     eax,0x1e
   14000f32b:	jae    0x14000f335
   14000f32d:	call   QWORD PTR [rip+0x273cd]        # 0x140036700
   14000f333:	jmp    0x14000f340
   14000f335:	mov    edx,0x4
   14000f33a:	call   QWORD PTR [rip+0x27400]        # 0x140036740
   14000f340:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f345:	add    rsp,0x20
   14000f349:	pop    rdi
   14000f34a:	ret    
   14000f34b:	int3   
   14000f34c:	rex push rbx
   14000f34e:	sub    rsp,0x20
   14000f352:	test   rcx,rcx
   14000f355:	je     0x14000f37f
   14000f357:	mov    rbx,QWORD PTR [rcx+0x40]
   14000f35b:	test   rbx,rbx
   14000f35e:	je     0x14000f37f
   14000f360:	mov    rcx,rbx
   14000f363:	jmp    0x14000f36b
   14000f365:	mov    rbx,rax
   14000f368:	mov    rcx,rax
   14000f36b:	call   0x14000f2d4
   14000f370:	test   rax,rax
   14000f373:	jne    0x14000f365
   14000f375:	mov    rcx,rbx
   14000f378:	call   0x14000db1c
   14000f37d:	jmp    0x14000f381
   14000f37f:	xor    eax,eax
   14000f381:	add    rsp,0x20
   14000f385:	pop    rbx
   14000f386:	ret    
   14000f387:	int3   
   14000f388:	rex push rbx
   14000f38a:	sub    rsp,0x30
   14000f38e:	mov    rbx,rcx
   14000f391:	call   0x140007df0
   14000f396:	mov    rcx,QWORD PTR [rax+0x8]
   14000f39a:	test   rcx,rcx
   14000f39d:	je     0x14000f3b1
   14000f39f:	cmp    QWORD PTR [rcx+0x40],rbx
   14000f3a3:	jne    0x14000f3b1
   14000f3a5:	lea    rcx,[rip+0x3bc04]        # 0x14004afb0
   14000f3ac:	call   0x140008f64
   14000f3b1:	mov    rcx,rbx
   14000f3b4:	call   0x1400117c8
   14000f3b9:	bt     eax,0x1e
   14000f3bd:	jb     0x14000f3de
   14000f3bf:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f3c3:	mov    eax,0x1
   14000f3c8:	xor    r9d,r9d
   14000f3cb:	mov    DWORD PTR [rsp+0x28],eax
   14000f3cf:	lea    edx,[rax+0x14]
   14000f3d2:	xor    r8d,r8d
   14000f3d5:	mov    DWORD PTR [rsp+0x20],eax
   14000f3d9:	call   0x14000e6e0
   14000f3de:	mov    rcx,rbx
   14000f3e1:	add    rsp,0x30
   14000f3e5:	pop    rbx
   14000f3e6:	jmp    0x14000da24
   14000f3eb:	int3   
   14000f3ec:	mov    QWORD PTR [rsp+0x8],rbx
   14000f3f1:	push   rdi
   14000f3f2:	sub    rsp,0x30
   14000f3f6:	mov    rdi,rdx
   14000f3f9:	mov    rbx,rcx
   14000f3fc:	call   0x140007df0
   14000f401:	mov    rcx,QWORD PTR [rax+0x8]
   14000f405:	test   rcx,rcx
   14000f408:	je     0x14000f418
   14000f40a:	cmp    QWORD PTR [rcx+0x40],rbx
   14000f40e:	jne    0x14000f418
   14000f410:	mov    rdx,rdi
   14000f413:	call   0x140012ef4
   14000f418:	mov    rcx,rbx
   14000f41b:	call   0x1400117c8
   14000f420:	bt     eax,0x1e
   14000f424:	jb     0x14000f44c
   14000f426:	call   0x14000d9bc
   14000f42b:	mov    ecx,0x1
   14000f430:	mov    r9,QWORD PTR [rax+0x18]
   14000f434:	mov    r8,QWORD PTR [rax+0x10]
   14000f438:	mov    edx,DWORD PTR [rax+0x8]
   14000f43b:	mov    DWORD PTR [rsp+0x28],ecx
   14000f43f:	mov    DWORD PTR [rsp+0x20],ecx
   14000f443:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f447:	call   0x14000e6e0
   14000f44c:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f451:	add    rsp,0x30
   14000f455:	pop    rdi
   14000f456:	ret    
   14000f457:	int3   
   14000f458:	rex push rbx
   14000f45a:	sub    rsp,0x30
   14000f45e:	mov    rbx,rcx
   14000f461:	call   0x140008c30
   14000f466:	mov    rcx,rax
   14000f469:	xor    eax,eax
   14000f46b:	cmp    rcx,rax
   14000f46e:	je     0x14000f479
   14000f470:	mov    rdx,QWORD PTR [rcx]
   14000f473:	call   QWORD PTR [rdx+0xe8]
   14000f479:	cmp    rax,rbx
   14000f47c:	jne    0x14000f48a
   14000f47e:	lea    rcx,[rip+0x3bb2b]        # 0x14004afb0
   14000f485:	call   0x140008fd8
   14000f48a:	mov    rcx,rbx
   14000f48d:	call   0x1400117c8
   14000f492:	bt     eax,0x1e
   14000f496:	jb     0x14000f4be
   14000f498:	call   0x14000d9bc
   14000f49d:	mov    ecx,0x1
   14000f4a2:	mov    r9,QWORD PTR [rax+0x18]
   14000f4a6:	mov    r8,QWORD PTR [rax+0x10]
   14000f4aa:	mov    edx,DWORD PTR [rax+0x8]
   14000f4ad:	mov    DWORD PTR [rsp+0x28],ecx
   14000f4b1:	mov    DWORD PTR [rsp+0x20],ecx
   14000f4b5:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f4b9:	call   0x14000e6e0
   14000f4be:	mov    rcx,rbx
   14000f4c1:	add    rsp,0x30
   14000f4c5:	pop    rbx
   14000f4c6:	jmp    0x14000da24
   14000f4cb:	int3   
   14000f4cc:	xor    eax,eax
   14000f4ce:	ret    
   14000f4cf:	int3   
   14000f4d0:	mov    rax,rsp
   14000f4d3:	mov    QWORD PTR [rax+0x8],rbx
   14000f4d7:	mov    QWORD PTR [rax+0x10],rbp
   14000f4db:	mov    QWORD PTR [rax+0x18],rsi
   14000f4df:	mov    QWORD PTR [rax+0x20],rdi
   14000f4e3:	push   r12
   14000f4e5:	sub    rsp,0x20
   14000f4e9:	mov    rsi,r9
   14000f4ec:	mov    rdi,r8
   14000f4ef:	mov    rbx,rdx
   14000f4f2:	mov    r12,rcx
   14000f4f5:	test   rcx,rcx
   14000f4f8:	je     0x14000f5ca
   14000f4fe:	test   rdx,rdx
   14000f501:	je     0x14000f5ca
   14000f507:	test   r9,r9
   14000f50a:	jne    0x14000f516
   14000f50c:	mov    eax,0x80004003
   14000f511:	jmp    0x14000f5cf
   14000f516:	and    QWORD PTR [r9],0x0
   14000f51a:	cmp    DWORD PTR [r8],0x0
   14000f51e:	jne    0x14000f553
   14000f520:	cmp    DWORD PTR [r8+0x4],0x0
   14000f525:	jne    0x14000f553
   14000f527:	cmp    DWORD PTR [r8+0x8],0xc0
   14000f52f:	jne    0x14000f553
   14000f531:	cmp    DWORD PTR [r8+0xc],0x46000000
   14000f539:	jne    0x14000f553
   14000f53b:	mov    rax,QWORD PTR [rdx+0x8]
   14000f53f:	lea    rbx,[rcx+rax*1]
   14000f543:	mov    rax,QWORD PTR [rbx]
   14000f546:	mov    rcx,rbx
   14000f549:	call   QWORD PTR [rax+0x8]
   14000f54c:	mov    QWORD PTR [rsi],rbx
   14000f54f:	xor    eax,eax
   14000f551:	jmp    0x14000f5cf
   14000f553:	mov    r10,QWORD PTR [rdx+0x10]
   14000f557:	jmp    0x14000f5b1
   14000f559:	mov    rcx,QWORD PTR [rbx]
   14000f55c:	xor    ebp,ebp
   14000f55e:	test   rcx,rcx
   14000f561:	sete   bpl
   14000f565:	test   ebp,ebp
   14000f567:	jne    0x14000f587
   14000f569:	mov    eax,DWORD PTR [rdi]
   14000f56b:	cmp    DWORD PTR [rcx],eax
   14000f56d:	jne    0x14000f5a9
   14000f56f:	mov    eax,DWORD PTR [rdi+0x4]
   14000f572:	cmp    DWORD PTR [rcx+0x4],eax
   14000f575:	jne    0x14000f5a9
   14000f577:	mov    eax,DWORD PTR [rdi+0x8]
   14000f57a:	cmp    DWORD PTR [rcx+0x8],eax
   14000f57d:	jne    0x14000f5a9
   14000f57f:	mov    eax,DWORD PTR [rdi+0xc]
   14000f582:	cmp    DWORD PTR [rcx+0xc],eax
   14000f585:	jne    0x14000f5a9
   14000f587:	cmp    r10,0x1
   14000f58b:	je     0x14000f5bd
   14000f58d:	mov    r9,QWORD PTR [rbx+0x8]
   14000f591:	mov    r8,rsi
   14000f594:	mov    rdx,rdi
   14000f597:	mov    rcx,r12
   14000f59a:	call   r10
   14000f59d:	test   eax,eax
   14000f59f:	je     0x14000f5cf
   14000f5a1:	test   ebp,ebp
   14000f5a3:	jne    0x14000f5a9
   14000f5a5:	test   eax,eax
   14000f5a7:	js     0x14000f5cf
   14000f5a9:	mov    r10,QWORD PTR [rbx+0x28]
   14000f5ad:	add    rbx,0x18
   14000f5b1:	test   r10,r10
   14000f5b4:	jne    0x14000f559
   14000f5b6:	mov    eax,0x80004002
   14000f5bb:	jmp    0x14000f5cf
   14000f5bd:	mov    rax,QWORD PTR [rbx+0x8]
   14000f5c1:	lea    rbx,[r12+rax*1]
   14000f5c5:	jmp    0x14000f543
   14000f5ca:	mov    eax,0x80070057
   14000f5cf:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f5d4:	mov    rbp,QWORD PTR [rsp+0x38]
   14000f5d9:	mov    rsi,QWORD PTR [rsp+0x40]
   14000f5de:	mov    rdi,QWORD PTR [rsp+0x48]
   14000f5e3:	add    rsp,0x20
   14000f5e7:	pop    r12
   14000f5e9:	ret    
   14000f5ea:	int3   
   14000f5eb:	int3   
   14000f5ec:	inc    DWORD PTR [rcx+0x28]
   14000f5ef:	mov    eax,DWORD PTR [rcx+0x28]
   14000f5f2:	ret    
   14000f5f3:	int3   
   14000f5f4:	rex push rbx
   14000f5f6:	sub    rsp,0x20
   14000f5fa:	add    DWORD PTR [rcx+0x28],0xffffffff
   14000f5fe:	mov    ebx,DWORD PTR [rcx+0x28]
   14000f601:	jne    0x14000f617
   14000f603:	test   rcx,rcx
   14000f606:	je     0x14000f617
   14000f608:	mov    r8,QWORD PTR [rcx]
   14000f60b:	mov    edx,0x1
   14000f610:	call   QWORD PTR [r8+0xe0]
   14000f617:	mov    eax,ebx
   14000f619:	add    rsp,0x20
   14000f61d:	pop    rbx
   14000f61e:	ret    
   14000f61f:	int3   
   14000f620:	mov    r9,r8
   14000f623:	mov    r8,rdx
   14000f626:	lea    rdx,[rip+0x28cd3]        # 0x140038300
   14000f62d:	jmp    0x14000f4d0
   14000f632:	int3   
   14000f633:	int3   
   14000f634:	mov    QWORD PTR [rsp+0x8],rbx
   14000f639:	push   rdi
   14000f63a:	sub    rsp,0x20
   14000f63e:	lea    rax,[rip+0x28bd3]        # 0x140038218
   14000f645:	mov    rbx,rcx
   14000f648:	mov    DWORD PTR [rcx+0x28],0xc0000001
   14000f64f:	mov    QWORD PTR [rcx],rax
   14000f652:	lea    rax,[rip+0x28b8f]        # 0x1400381e8
   14000f659:	mov    edi,edx
   14000f65b:	mov    QWORD PTR [rcx+0x8],rax
   14000f65f:	lea    rax,[rip+0x28b52]        # 0x1400381b8
   14000f666:	mov    QWORD PTR [rcx+0x20],rax
   14000f66a:	mov    rcx,QWORD PTR [rcx+0x18]
   14000f66e:	test   rcx,rcx
   14000f671:	je     0x14000f67b
   14000f673:	mov    rax,QWORD PTR [rcx]
   14000f676:	xor    edx,edx
   14000f678:	call   QWORD PTR [rax+0x18]
   14000f67b:	call   0x140013074
   14000f680:	test   dil,0x1
   14000f684:	je     0x14000f68e
   14000f686:	mov    rcx,rbx
   14000f689:	call   0x1400062d4
   14000f68e:	mov    rax,rbx
   14000f691:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f696:	add    rsp,0x20
   14000f69a:	pop    rdi
   14000f69b:	ret    
   14000f69c:	sub    rcx,0x20
   14000f6a0:	jmp    0x14000f620
   14000f6a5:	int3   
   14000f6a6:	int3   
   14000f6a7:	int3   
   14000f6a8:	sub    rcx,0x8
   14000f6ac:	jmp    0x14000f5ec
   14000f6b1:	int3   
   14000f6b2:	int3   
   14000f6b3:	int3   
   14000f6b4:	sub    rcx,0x8
   14000f6b8:	jmp    0x14000f620
   14000f6bd:	int3   
   14000f6be:	int3   
   14000f6bf:	int3   
   14000f6c0:	sub    rcx,0x20
   14000f6c4:	jmp    0x14000f5f4
   14000f6c9:	int3   
   14000f6ca:	int3   
   14000f6cb:	int3   
   14000f6cc:	sub    rcx,0x8
   14000f6d0:	jmp    0x14000f5f4
   14000f6d5:	int3   
   14000f6d6:	int3   
   14000f6d7:	int3   
   14000f6d8:	sub    rcx,0x20
   14000f6dc:	jmp    0x14000f5ec
   14000f6e1:	int3   
   14000f6e2:	int3   
   14000f6e3:	int3   
   14000f6e4:	mov    QWORD PTR [rsp+0x8],rbx
   14000f6e9:	mov    QWORD PTR [rsp+0x10],rbp
   14000f6ee:	mov    QWORD PTR [rsp+0x18],rsi
   14000f6f3:	push   rdi
   14000f6f4:	sub    rsp,0x30
   14000f6f8:	mov    rbx,r8
   14000f6fb:	mov    rbp,rdx
   14000f6fe:	mov    rsi,rcx
   14000f701:	call   0x1400117c8
   14000f706:	bt     eax,0x1e
   14000f70a:	jb     0x14000f771
   14000f70c:	mov    rcx,rsi
   14000f70f:	call   0x14000f34c
   14000f714:	mov    rdi,rax
   14000f717:	test   rax,rax
   14000f71a:	je     0x14000f771
   14000f71c:	test   rbx,rbx
   14000f71f:	je     0x14000f73c
   14000f721:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f725:	call   QWORD PTR [rip+0x26eb5]        # 0x1400365e0
   14000f72b:	test   eax,eax
   14000f72d:	je     0x14000f73c
   14000f72f:	mov    rcx,rbx
   14000f732:	call   0x14000f34c
   14000f737:	cmp    rdi,rax
   14000f73a:	je     0x14000f771
   14000f73c:	mov    rax,QWORD PTR [rsi+0x40]
   14000f740:	mov    QWORD PTR [rsp+0x20],rax
   14000f745:	test   rbx,rbx
   14000f748:	jne    0x14000f751
   14000f74a:	and    QWORD PTR [rsp+0x28],rbx
   14000f74f:	jmp    0x14000f75a
   14000f751:	mov    rax,QWORD PTR [rbx+0x40]
   14000f755:	mov    QWORD PTR [rsp+0x28],rax
   14000f75a:	mov    rcx,QWORD PTR [rdi+0x40]
   14000f75e:	lea    r9,[rsp+0x20]
   14000f763:	mov    r8,rbp
   14000f766:	mov    edx,0x36e
   14000f76b:	call   QWORD PTR [rip+0x26f9f]        # 0x140036710
   14000f771:	mov    rbx,QWORD PTR [rsp+0x40]
   14000f776:	mov    rbp,QWORD PTR [rsp+0x48]
   14000f77b:	mov    rsi,QWORD PTR [rsp+0x50]
   14000f780:	add    rsp,0x30
   14000f784:	pop    rdi
   14000f785:	ret    
   14000f786:	int3   
   14000f787:	int3   
   14000f788:	rex push rbx
   14000f78a:	sub    rsp,0x20
   14000f78e:	cmp    edx,0xfffffffe
   14000f791:	jne    0x14000f802
   14000f793:	cmp    r8d,0x201
   14000f79a:	je     0x14000f7ae
   14000f79c:	cmp    r8d,0x207
   14000f7a3:	je     0x14000f7ae
   14000f7a5:	cmp    r8d,0x204
   14000f7ac:	jne    0x14000f802
   14000f7ae:	call   0x14000f34c
   14000f7b3:	test   rax,rax
   14000f7b6:	je     0x14000f802
   14000f7b8:	mov    rcx,QWORD PTR [rax+0x40]
   14000f7bc:	call   QWORD PTR [rip+0x26f36]        # 0x1400366f8
   14000f7c2:	mov    rcx,rax
   14000f7c5:	call   0x14000db1c
   14000f7ca:	mov    rbx,rax
   14000f7cd:	test   rax,rax
   14000f7d0:	je     0x14000f802
   14000f7d2:	call   QWORD PTR [rip+0x26e10]        # 0x1400365e8
   14000f7d8:	mov    rcx,rax
   14000f7db:	call   0x14000db1c
   14000f7e0:	cmp    rbx,rax
   14000f7e3:	je     0x14000f802
   14000f7e5:	mov    rcx,rbx
   14000f7e8:	call   0x140011830
   14000f7ed:	test   eax,eax
   14000f7ef:	je     0x14000f802
   14000f7f1:	mov    rcx,QWORD PTR [rbx+0x40]
   14000f7f5:	call   QWORD PTR [rip+0x26e5d]        # 0x140036658
   14000f7fb:	mov    eax,0x1
   14000f800:	jmp    0x14000f804
   14000f802:	xor    eax,eax
   14000f804:	add    rsp,0x20
   14000f808:	pop    rbx
   14000f809:	ret    
   14000f80a:	int3   
   14000f80b:	int3   
   14000f80c:	mov    rax,rsp
   14000f80f:	mov    QWORD PTR [rax+0x20],r9
   14000f813:	mov    QWORD PTR [rax+0x18],r8
   14000f817:	mov    DWORD PTR [rax+0x10],edx
   14000f81a:	mov    QWORD PTR [rax+0x8],rcx
   14000f81e:	push   rbx
   14000f81f:	push   rsi
   14000f820:	push   rdi
   14000f821:	push   r12
   14000f823:	push   r13
   14000f825:	push   r14
   14000f827:	push   r15
   14000f829:	sub    rsp,0x90
   14000f830:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14000f839:	mov    r13,r9
   14000f83c:	mov    r15,r8
   14000f83f:	mov    r14d,edx
   14000f842:	mov    rsi,rcx
   14000f845:	lea    rdx,[rip+0x27cac]        # 0x1400374f8
   14000f84c:	call   QWORD PTR [rip+0x26f96]        # 0x1400367e8
   14000f852:	mov    r12,rax
   14000f855:	mov    QWORD PTR [rsp+0x30],rax
   14000f85a:	xor    ebx,ebx
   14000f85c:	lea    edi,[rbx+0x1]
   14000f85f:	mov    edx,r14d
   14000f862:	sub    edx,0x6
   14000f865:	je     0x14000f938
   14000f86b:	sub    edx,0x1a
   14000f86e:	je     0x14000f90f
   14000f874:	sub    edx,0x62
   14000f877:	je     0x14000f8d6
   14000f879:	cmp    edx,0x8e
   14000f87f:	jne    0x14000f962
   14000f885:	mov    rcx,rsi
   14000f888:	call   0x14000db1c
   14000f88d:	mov    rdi,rax
   14000f890:	lea    r8,[rsp+0x30]
   14000f895:	lea    rdx,[rsp+0x48]
   14000f89a:	mov    rcx,rax
   14000f89d:	call   0x14000c2e0
   14000f8a2:	mov    QWORD PTR [rsp+0x20],r13
   14000f8a7:	mov    r9,r15
   14000f8aa:	mov    r8d,0x110
   14000f8b0:	mov    rdx,rsi
   14000f8b3:	mov    rcx,r12
   14000f8b6:	call   QWORD PTR [rip+0x26dfc]        # 0x1400366b8
   14000f8bc:	mov    rbx,rax
   14000f8bf:	mov    r8d,DWORD PTR [rsp+0x30]
   14000f8c4:	lea    rdx,[rsp+0x48]
   14000f8c9:	mov    rcx,rdi
   14000f8cc:	call   0x14000e2d8
   14000f8d1:	jmp    0x14000f97c
   14000f8d6:	mov    r8,rax
   14000f8d9:	mov    edx,0xfffffffc
   14000f8de:	mov    rcx,rsi
   14000f8e1:	call   QWORD PTR [rip+0x26d29]        # 0x140036610
   14000f8e7:	lea    rdx,[rip+0x27c0a]        # 0x1400374f8
   14000f8ee:	mov    rcx,rsi
   14000f8f1:	call   QWORD PTR [rip+0x26ce1]        # 0x1400365d8
   14000f8f7:	lea    rcx,[rip+0x27bfa]        # 0x1400374f8
   14000f8fe:	call   QWORD PTR [rip+0x26a5c]        # 0x140036360
   14000f904:	movzx  ecx,ax
   14000f907:	call   QWORD PTR [rip+0x26a5b]        # 0x140036368
   14000f90d:	jmp    0x14000f962
   14000f90f:	mov    rcx,rsi
   14000f912:	call   0x14000db1c
   14000f917:	mov    rcx,r13
   14000f91a:	shr    rcx,0x10
   14000f91e:	movzx  r8d,cx
   14000f922:	movsx  edx,r13w
   14000f926:	mov    rcx,rax
   14000f929:	call   0x14000f788
   14000f92e:	mov    edi,ebx
   14000f930:	cmp    eax,ebx
   14000f932:	sete   dil
   14000f936:	jmp    0x14000f95e
   14000f938:	mov    rcx,r13
   14000f93b:	call   0x14000db1c
   14000f940:	mov    r12,rax
   14000f943:	mov    rcx,rsi
   14000f946:	call   0x14000db1c
   14000f94b:	mov    r8,r12
   14000f94e:	mov    rdx,r15
   14000f951:	mov    rcx,rax
   14000f954:	call   0x14000f6e4
   14000f959:	mov    r12,QWORD PTR [rsp+0x30]
   14000f95e:	cmp    edi,ebx
   14000f960:	je     0x14000f97c
   14000f962:	mov    QWORD PTR [rsp+0x20],r13
   14000f967:	mov    r9,r15
   14000f96a:	mov    r8d,r14d
   14000f96d:	mov    rdx,rsi
   14000f970:	mov    rcx,r12
   14000f973:	call   QWORD PTR [rip+0x26d3f]        # 0x1400366b8
   14000f979:	mov    rbx,rax
   14000f97c:	jmp    0x14000f983
   14000f97e:	mov    rbx,QWORD PTR [rsp+0x30]
   14000f983:	mov    rax,rbx
   14000f986:	add    rsp,0x90
   14000f98d:	pop    r15
   14000f98f:	pop    r14
   14000f991:	pop    r13
   14000f993:	pop    r12
   14000f995:	pop    rdi
   14000f996:	pop    rsi
   14000f997:	pop    rbx
   14000f998:	ret    
   14000f999:	int3   
   14000f99a:	int3   
   14000f99b:	int3   
   14000f99c:	rex push rbx
   14000f99e:	push   rbp
   14000f99f:	push   rsi
   14000f9a0:	push   rdi
   14000f9a1:	push   r12
   14000f9a3:	push   r13
   14000f9a5:	push   r14
   14000f9a7:	sub    rsp,0x1c0
   14000f9ae:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   14000f9b7:	mov    rax,QWORD PTR [rip+0x39402]        # 0x140048dc0
   14000f9be:	xor    rax,rsp
   14000f9c1:	mov    QWORD PTR [rsp+0x1b0],rax
   14000f9c9:	mov    r12,r8
   14000f9cc:	mov    rbx,rdx
   14000f9cf:	mov    esi,ecx
   14000f9d1:	lea    rdx,[rip+0xffffffffffff6b6c]        # 0x140006544
   14000f9d8:	lea    rcx,[rip+0x3b5c1]        # 0x14004afa0
   14000f9df:	call   0x140006bec
   14000f9e4:	mov    rdi,rax
   14000f9e7:	xor    r14d,r14d
   14000f9ea:	mov    ecx,r14d
   14000f9ed:	cmp    rax,r14
   14000f9f0:	setne  cl
   14000f9f3:	cmp    ecx,r14d
   14000f9f6:	jne    0x14000f9fe
   14000f9f8:	call   0x140006520
   14000f9fd:	int3   
   14000f9fe:	cmp    esi,0x3
   14000fa01:	je     0x14000fa1a
   14000fa03:	mov    r9,r12
   14000fa06:	mov    r8,rbx
   14000fa09:	mov    edx,esi
   14000fa0b:	mov    rcx,QWORD PTR [rax+0x48]
   14000fa0f:	call   QWORD PTR [rip+0x26dab]        # 0x1400367c0
   14000fa15:	jmp    0x14000fc7c
   14000fa1a:	mov    rsi,QWORD PTR [r12]
   14000fa1e:	mov    rbp,QWORD PTR [rax+0x28]
   14000fa22:	call   0x140007df0
   14000fa27:	movzx  r13d,BYTE PTR [rax+0x28]
   14000fa2c:	cmp    rbp,r14
   14000fa2f:	jne    0x14000fa45
   14000fa31:	bt     DWORD PTR [rsi+0x30],0x1e
   14000fa36:	jb     0x14000fc4e
   14000fa3c:	cmp    r13d,r14d
   14000fa3f:	jne    0x14000fc4e
   14000fa45:	cmp    DWORD PTR [rip+0x3ea88],r14d        # 0x14004e4d4
   14000fa4c:	je     0x14000fac8
   14000fa4e:	mov    edx,0xffffffe6
   14000fa53:	mov    rcx,rbx
   14000fa56:	call   QWORD PTR [rip+0x26b64]        # 0x1400365c0
   14000fa5c:	bt     eax,0x10
   14000fa60:	jb     0x14000fc4e
   14000fa66:	mov    r8,QWORD PTR [rsi+0x40]
   14000fa6a:	cmp    r8,0xffff
   14000fa71:	ja     0x14000fa9b
   14000fa73:	mov    BYTE PTR [rsp+0xa0],r14b
   14000fa7b:	mov    r8d,0x5
   14000fa81:	lea    rdx,[rsp+0xa0]
   14000fa89:	movzx  ecx,WORD PTR [rsi+0x40]
   14000fa8d:	call   QWORD PTR [rip+0x268ed]        # 0x140036380
   14000fa93:	lea    r8,[rsp+0xa0]
   14000fa9b:	or     r9d,0xffffffff
   14000fa9f:	mov    DWORD PTR [rsp+0x28],r9d
   14000faa4:	lea    rax,[rip+0x28945]        # 0x1400383f0
   14000faab:	mov    QWORD PTR [rsp+0x20],rax
   14000fab0:	lea    edx,[r9+0x2]
   14000fab4:	mov    ecx,0x409
   14000fab9:	call   QWORD PTR [rip+0x268d1]        # 0x140036390
   14000fabf:	cmp    eax,0x2
   14000fac2:	je     0x14000fc4e
   14000fac8:	cmp    rbp,r14
   14000facb:	je     0x14000fb46
   14000facd:	mov    rdx,QWORD PTR [rbp+0x38]
   14000fad1:	lea    rcx,[rsp+0x30]
   14000fad6:	call   0x140007e6c
   14000fadb:	nop
   14000fadc:	mov    rdx,rbx
   14000fadf:	mov    rcx,rbp
   14000fae2:	call   0x14000db8c
   14000fae7:	mov    r11,QWORD PTR [rbp+0x0]
   14000faeb:	mov    rcx,rbp
   14000faee:	call   QWORD PTR [r11+0xa0]
   14000faf5:	mov    r11,QWORD PTR [rbp+0x0]
   14000faf9:	mov    rcx,rbp
   14000fafc:	call   QWORD PTR [r11+0x1f0]
   14000fb03:	mov    rsi,rax
   14000fb06:	lea    rbp,[rip+0xffffffffffffe9c3]        # 0x14000e4d0
   14000fb0d:	mov    r8,rbp
   14000fb10:	mov    edx,0xfffffffc
   14000fb15:	mov    rcx,rbx
   14000fb18:	call   QWORD PTR [rip+0x26af2]        # 0x140036610
   14000fb1e:	cmp    rax,rbp
   14000fb21:	je     0x14000fb26
   14000fb23:	mov    QWORD PTR [rsi],rax
   14000fb26:	mov    QWORD PTR [rdi+0x28],r14
   14000fb2a:	cmp    DWORD PTR [rsp+0x38],r14d
   14000fb2f:	je     0x14000fc4e
   14000fb35:	mov    rdx,QWORD PTR [rsp+0x30]
   14000fb3a:	xor    ecx,ecx
   14000fb3c:	call   0x140006dcc
   14000fb41:	jmp    0x14000fc4e
   14000fb46:	cmp    WORD PTR [rip+0x3e7fa],r14w        # 0x14004e348
   14000fb4e:	jne    0x14000fbcb
   14000fb50:	mov    esi,0x50
   14000fb55:	mov    r8,rsi
   14000fb58:	xor    edx,edx
   14000fb5a:	lea    rcx,[rsp+0x50]
   14000fb5f:	call   0x140015b00
   14000fb64:	mov    DWORD PTR [rsp+0x50],esi
   14000fb68:	lea    r8,[rsp+0x50]
   14000fb6d:	lea    rdx,[rip+0x28874]        # 0x1400383e8
   14000fb74:	xor    ecx,ecx
   14000fb76:	call   0x14000bfd8
   14000fb7b:	mov    WORD PTR [rip+0x3e7c6],ax        # 0x14004e348
   14000fb82:	cmp    ax,r14w
   14000fb86:	jne    0x14000fbcb
   14000fb88:	mov    r8d,0x100
   14000fb8e:	lea    rdx,[rsp+0xb0]
   14000fb96:	mov    rcx,rbx
   14000fb99:	call   QWORD PTR [rip+0x26a29]        # 0x1400365c8
   14000fb9f:	cmp    eax,r14d
   14000fba2:	je     0x14000fbe2
   14000fba4:	mov    BYTE PTR [rsp+0x1af],r14b
   14000fbac:	lea    rdx,[rip+0x28835]        # 0x1400383e8
   14000fbb3:	lea    rcx,[rsp+0xb0]
   14000fbbb:	call   0x140016c00
   14000fbc0:	cmp    eax,r14d
   14000fbc3:	je     0x14000fc4e
   14000fbc9:	jmp    0x14000fbe2
   14000fbcb:	mov    edx,0xffffffe0
   14000fbd0:	mov    rcx,rbx
   14000fbd3:	call   QWORD PTR [rip+0x26b17]        # 0x1400366f0
   14000fbd9:	cmp    ax,WORD PTR [rip+0x3e768]        # 0x14004e348
   14000fbe0:	je     0x14000fc4e
   14000fbe2:	mov    edx,0xfffffffc
   14000fbe7:	mov    rcx,rbx
   14000fbea:	call   QWORD PTR [rip+0x26a18]        # 0x140036608
   14000fbf0:	mov    rsi,rax
   14000fbf3:	cmp    rax,r14
   14000fbf6:	je     0x14000fc4e
   14000fbf8:	lea    rbp,[rip+0x278f9]        # 0x1400374f8
   14000fbff:	mov    rdx,rbp
   14000fc02:	mov    rcx,rbx
   14000fc05:	call   QWORD PTR [rip+0x26bdd]        # 0x1400367e8
   14000fc0b:	cmp    rax,r14
   14000fc0e:	jne    0x14000fc4e
   14000fc10:	mov    r8,rsi
   14000fc13:	mov    rdx,rbp
   14000fc16:	mov    rcx,rbx
   14000fc19:	call   QWORD PTR [rip+0x269b1]        # 0x1400365d0
   14000fc1f:	mov    rdx,rbp
   14000fc22:	mov    rcx,rbx
   14000fc25:	call   QWORD PTR [rip+0x26bbd]        # 0x1400367e8
   14000fc2b:	cmp    rax,rsi
   14000fc2e:	jne    0x14000fc4e
   14000fc30:	mov    rcx,rbp
   14000fc33:	call   QWORD PTR [rip+0x2671f]        # 0x140036358
   14000fc39:	lea    r8,[rip+0xfffffffffffffbcc]        # 0x14000f80c
   14000fc40:	mov    edx,0xfffffffc
   14000fc45:	mov    rcx,rbx
   14000fc48:	call   QWORD PTR [rip+0x269c2]        # 0x140036610
   14000fc4e:	mov    r9,r12
   14000fc51:	mov    r8,rbx
   14000fc54:	mov    edx,0x3
   14000fc59:	mov    rcx,QWORD PTR [rdi+0x48]
   14000fc5d:	call   QWORD PTR [rip+0x26b5d]        # 0x1400367c0
   14000fc63:	mov    rbx,rax
   14000fc66:	cmp    r13d,r14d
   14000fc69:	je     0x14000fc79
   14000fc6b:	mov    rcx,QWORD PTR [rdi+0x48]
   14000fc6f:	call   QWORD PTR [rip+0x269c3]        # 0x140036638
   14000fc75:	mov    QWORD PTR [rdi+0x48],r14
   14000fc79:	mov    rax,rbx
   14000fc7c:	mov    rcx,QWORD PTR [rsp+0x1b0]
   14000fc84:	xor    rcx,rsp
   14000fc87:	call   0x1400144f0
   14000fc8c:	add    rsp,0x1c0
   14000fc93:	pop    r14
   14000fc95:	pop    r13
   14000fc97:	pop    r12
   14000fc99:	pop    rdi
   14000fc9a:	pop    rsi
   14000fc9b:	pop    rbp
   14000fc9c:	pop    rbx
   14000fc9d:	ret    
   14000fc9e:	int3   
   14000fc9f:	int3   
   14000fca0:	mov    QWORD PTR [rsp+0x8],rbx
   14000fca5:	push   rdi
   14000fca6:	sub    rsp,0x20
   14000fcaa:	mov    rdi,rcx
   14000fcad:	lea    rdx,[rip+0xffffffffffff6890]        # 0x140006544
   14000fcb4:	lea    rcx,[rip+0x3b2e5]        # 0x14004afa0
   14000fcbb:	call   0x140006bec
   14000fcc0:	mov    rbx,rax
   14000fcc3:	test   rax,rax
   14000fcc6:	jne    0x14000fcce
   14000fcc8:	call   0x140006520
   14000fccd:	int3   
   14000fcce:	cmp    QWORD PTR [rax+0x28],rdi
   14000fcd2:	je     0x14000fd0b
   14000fcd4:	cmp    QWORD PTR [rax+0x48],0x0
   14000fcd9:	jne    0x14000fd07
   14000fcdb:	call   QWORD PTR [rip+0x266b7]        # 0x140036398
   14000fce1:	xor    r8d,r8d
   14000fce4:	lea    rdx,[rip+0xfffffffffffffcb1]        # 0x14000f99c
   14000fceb:	lea    ecx,[r8+0x5]
   14000fcef:	mov    r9d,eax
   14000fcf2:	call   QWORD PTR [rip+0x26ac0]        # 0x1400367b8
   14000fcf8:	mov    QWORD PTR [rbx+0x48],rax
   14000fcfc:	test   rax,rax
   14000fcff:	jne    0x14000fd07
   14000fd01:	call   0x1400064d8
   14000fd06:	int3   
   14000fd07:	mov    QWORD PTR [rbx+0x28],rdi
   14000fd0b:	mov    rbx,QWORD PTR [rsp+0x30]
   14000fd10:	add    rsp,0x20
   14000fd14:	pop    rdi
   14000fd15:	ret    
   14000fd16:	int3   
   14000fd17:	int3   
   14000fd18:	mov    rax,rsp
   14000fd1b:	mov    QWORD PTR [rax+0x8],rbx
   14000fd1f:	mov    QWORD PTR [rax+0x10],rbp
   14000fd23:	mov    QWORD PTR [rax+0x18],rsi
   14000fd27:	mov    QWORD PTR [rax+0x20],rdi
   14000fd2b:	push   r12
   14000fd2d:	sub    rsp,0xb0
   14000fd34:	xor    ebx,ebx
   14000fd36:	mov    rsi,r9
   14000fd39:	mov    rbp,r8
   14000fd3c:	mov    r12d,edx
   14000fd3f:	mov    rdi,rcx
   14000fd42:	cmp    r9,rbx
   14000fd45:	je     0x14000fd5c
   14000fd47:	or     edx,0xffffffff
   14000fd4a:	mov    rcx,r9
   14000fd4d:	call   0x14000922c
   14000fd52:	cmp    eax,ebx
   14000fd54:	jne    0x14000fd5c
   14000fd56:	call   0x140006520
   14000fd5b:	int3   
   14000fd5c:	mov    eax,DWORD PTR [rsp+0xe0]
   14000fd63:	mov    DWORD PTR [rsp+0xa8],r12d
   14000fd6b:	mov    QWORD PTR [rsp+0xa0],rbp
   14000fd73:	mov    DWORD PTR [rsp+0x90],eax
   14000fd7a:	mov    eax,DWORD PTR [rsp+0xe8]
   14000fd81:	mov    QWORD PTR [rsp+0x98],rsi
   14000fd89:	mov    DWORD PTR [rsp+0x8c],eax
   14000fd90:	mov    eax,DWORD PTR [rsp+0xf0]
   14000fd97:	mov    DWORD PTR [rsp+0x88],eax
   14000fd9e:	mov    eax,DWORD PTR [rsp+0xf8]
   14000fda5:	mov    DWORD PTR [rsp+0x84],eax
   14000fdac:	mov    eax,DWORD PTR [rsp+0x100]
   14000fdb3:	mov    DWORD PTR [rsp+0x80],eax
   14000fdba:	mov    rax,QWORD PTR [rsp+0x108]
   14000fdc2:	mov    QWORD PTR [rsp+0x78],rax
   14000fdc7:	mov    rax,QWORD PTR [rsp+0x110]
   14000fdcf:	mov    QWORD PTR [rsp+0x70],rax
   14000fdd4:	call   0x140007df0
   14000fdd9:	lea    rdx,[rsp+0x60]
   14000fdde:	mov    rcx,QWORD PTR [rax+0x10]
   14000fde2:	mov    rax,QWORD PTR [rsp+0x118]
   14000fdea:	mov    QWORD PTR [rsp+0x60],rax
   14000fdef:	mov    rax,QWORD PTR [rdi]
   14000fdf2:	mov    QWORD PTR [rsp+0x68],rcx
   14000fdf7:	mov    rcx,rdi
   14000fdfa:	call   QWORD PTR [rax+0xc8]
   14000fe00:	mov    rcx,rdi
   14000fe03:	cmp    eax,ebx
   14000fe05:	jne    0x14000fe17
   14000fe07:	mov    rax,QWORD PTR [rdi]
   14000fe0a:	call   QWORD PTR [rax+0x238]
   14000fe10:	xor    eax,eax
   14000fe12:	jmp    0x14000feb4
   14000fe17:	call   0x14000fca0
   14000fe1c:	mov    rax,QWORD PTR [rsp+0x68]
   14000fe21:	mov    r11,QWORD PTR [rsp+0x60]
   14000fe26:	mov    r9d,DWORD PTR [rsp+0x90]
   14000fe2e:	mov    r8,QWORD PTR [rsp+0x98]
   14000fe36:	mov    rdx,QWORD PTR [rsp+0xa0]
   14000fe3e:	mov    ecx,DWORD PTR [rsp+0xa8]
   14000fe45:	mov    QWORD PTR [rsp+0x58],r11
   14000fe4a:	mov    QWORD PTR [rsp+0x50],rax
   14000fe4f:	mov    rax,QWORD PTR [rsp+0x70]
   14000fe54:	mov    QWORD PTR [rsp+0x48],rax
   14000fe59:	mov    rax,QWORD PTR [rsp+0x78]
   14000fe5e:	mov    QWORD PTR [rsp+0x40],rax
   14000fe63:	mov    eax,DWORD PTR [rsp+0x80]
   14000fe6a:	mov    DWORD PTR [rsp+0x38],eax
   14000fe6e:	mov    eax,DWORD PTR [rsp+0x84]
   14000fe75:	mov    DWORD PTR [rsp+0x30],eax
   14000fe79:	mov    eax,DWORD PTR [rsp+0x88]
   14000fe80:	mov    DWORD PTR [rsp+0x28],eax
   14000fe84:	mov    eax,DWORD PTR [rsp+0x8c]
   14000fe8b:	mov    DWORD PTR [rsp+0x20],eax
   14000fe8f:	call   0x14000c084
   14000fe94:	mov    rsi,rax
   14000fe97:	call   0x14000dc38
   14000fe9c:	cmp    eax,ebx
   14000fe9e:	jne    0x14000feac
   14000fea0:	mov    rdx,QWORD PTR [rdi]
   14000fea3:	mov    rcx,rdi
   14000fea6:	call   QWORD PTR [rdx+0x238]
   14000feac:	cmp    rsi,rbx
   14000feaf:	setne  bl
   14000feb2:	mov    eax,ebx
   14000feb4:	lea    r11,[rsp+0xb0]
   14000febc:	mov    rbx,QWORD PTR [r11+0x10]
   14000fec0:	mov    rbp,QWORD PTR [r11+0x18]
   14000fec4:	mov    rsi,QWORD PTR [r11+0x20]
   14000fec8:	mov    rdi,QWORD PTR [r11+0x28]
   14000fecc:	mov    rsp,r11
   14000fecf:	pop    r12
   14000fed1:	ret    
   14000fed2:	int3   
   14000fed3:	int3   
   14000fed4:	mov    QWORD PTR [rsp+0x8],rbx
   14000fed9:	push   rdi
   14000feda:	sub    rsp,0x30
   14000fede:	mov    rax,QWORD PTR [rcx]
   14000fee1:	mov    rbx,rcx
   14000fee4:	call   QWORD PTR [rax+0x250]
   14000feea:	test   eax,eax
   14000feec:	je     0x14000fefa
   14000feee:	mov    rax,QWORD PTR [rbx]
   14000fef1:	mov    rcx,rbx
   14000fef4:	call   QWORD PTR [rax+0x310]
   14000fefa:	mov    rcx,QWORD PTR [rbx+0x40]
   14000fefe:	xor    r9d,r9d
   14000ff01:	xor    r8d,r8d
   14000ff04:	lea    edi,[r9+0x1f]
   14000ff08:	mov    edx,edi
   14000ff0a:	call   QWORD PTR [rip+0x26800]        # 0x140036710
   14000ff10:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ff14:	xor    r9d,r9d
   14000ff17:	xor    r8d,r8d
   14000ff1a:	mov    edx,edi
   14000ff1c:	mov    DWORD PTR [rsp+0x28],0x1
   14000ff24:	mov    DWORD PTR [rsp+0x20],0x1
   14000ff2c:	call   0x14000e6e0
   14000ff31:	mov    rcx,rbx
   14000ff34:	call   0x14000f34c
   14000ff39:	mov    rbx,rax
   14000ff3c:	test   rax,rax
   14000ff3f:	jne    0x14000ff47
   14000ff41:	call   0x140006520
   14000ff46:	int3   
   14000ff47:	mov    rcx,QWORD PTR [rax+0x40]
   14000ff4b:	xor    r9d,r9d
   14000ff4e:	xor    r8d,r8d
   14000ff51:	mov    edx,edi
   14000ff53:	call   QWORD PTR [rip+0x267b7]        # 0x140036710
   14000ff59:	mov    rcx,QWORD PTR [rbx+0x40]
   14000ff5d:	xor    r9d,r9d
   14000ff60:	xor    r8d,r8d
   14000ff63:	mov    edx,edi
   14000ff65:	mov    DWORD PTR [rsp+0x28],0x1
   14000ff6d:	mov    DWORD PTR [rsp+0x20],0x1
   14000ff75:	call   0x14000e6e0
   14000ff7a:	call   QWORD PTR [rip+0x26638]        # 0x1400365b8
   14000ff80:	test   rax,rax
   14000ff83:	je     0x14000ff96
   14000ff85:	xor    r9d,r9d
   14000ff88:	xor    r8d,r8d
   14000ff8b:	mov    edx,edi
   14000ff8d:	mov    rcx,rax
   14000ff90:	call   QWORD PTR [rip+0x2677a]        # 0x140036710
   14000ff96:	mov    rbx,QWORD PTR [rsp+0x40]
   14000ff9b:	add    rsp,0x30
   14000ff9f:	pop    rdi
   14000ffa0:	ret    
   14000ffa1:	int3   
   14000ffa2:	int3   
   14000ffa3:	int3   
   14000ffa4:	mov    rax,rsp
   14000ffa7:	push   r12
   14000ffa9:	push   r13
   14000ffab:	push   r15
   14000ffad:	sub    rsp,0x120
   14000ffb4:	mov    QWORD PTR [rsp+0x68],0xfffffffffffffffe
   14000ffbd:	mov    QWORD PTR [rax+0x8],rbx
   14000ffc1:	mov    QWORD PTR [rax+0x10],rbp
   14000ffc5:	mov    QWORD PTR [rax+0x18],rsi
   14000ffc9:	mov    QWORD PTR [rax+0x20],rdi
   14000ffcd:	mov    rsi,r9
   14000ffd0:	mov    r13,r8
   14000ffd3:	mov    ebp,edx
   14000ffd5:	mov    r12,rcx
   14000ffd8:	and    QWORD PTR [rsp+0x30],0x0
   14000ffde:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14000ffe6:	mov    r15d,0x1
   14000ffec:	cmp    edx,0x111
   14000fff2:	jne    0x140010018
   14000fff4:	mov    rax,QWORD PTR [rcx]
   14000fff7:	mov    r8,r9
   14000fffa:	mov    rdx,r13
   14000fffd:	call   QWORD PTR [rax+0x1e0]
   140010003:	test   eax,eax
   140010005:	je     0x140010011
   140010007:	mov    QWORD PTR [rsp+0x30],r15
   14001000c:	jmp    0x140010d37
   140010011:	xor    eax,eax
   140010013:	jmp    0x140010d6a
   140010018:	cmp    edx,0x4e
   14001001b:	jne    0x140010046
   14001001d:	cmp    QWORD PTR [r9],0x0
   140010021:	je     0x14001003f
   140010023:	mov    rax,QWORD PTR [rcx]
   140010026:	lea    r9,[rsp+0x30]
   14001002b:	mov    r8,rsi
   14001002e:	mov    rdx,r13
   140010031:	call   QWORD PTR [rax+0x1e8]
   140010037:	test   eax,eax
   140010039:	jne    0x140010d37
   14001003f:	xor    eax,eax
   140010041:	jmp    0x140010d6a
   140010046:	cmp    edx,0x6
   140010049:	jne    0x140010061
   14001004b:	mov    rcx,r9
   14001004e:	call   0x14000db1c
   140010053:	mov    r8,rax
   140010056:	mov    rdx,r13
   140010059:	mov    rcx,r12
   14001005c:	call   0x14000f6e4
   140010061:	cmp    ebp,0x20
   140010064:	jne    0x14001008a
   140010066:	mov    rax,rsi
   140010069:	shr    rax,0x10
   14001006d:	movzx  r8d,ax
   140010071:	movsx  edx,si
   140010074:	mov    rcx,r12
   140010077:	call   0x14000f788
   14001007c:	test   eax,eax
   14001007e:	je     0x14001008a
   140010080:	mov    QWORD PTR [rsp+0x30],r15
   140010085:	jmp    0x140010d37
   14001008a:	mov    rax,QWORD PTR [r12+0x98]
   140010092:	test   rax,rax
   140010095:	je     0x1400100f6
   140010097:	cmp    DWORD PTR [rax+0xe0],0x0
   14001009e:	jle    0x1400100f6
   1400100a0:	cmp    ebp,0x200
   1400100a6:	jb     0x1400100b0
   1400100a8:	cmp    ebp,0x209
   1400100ae:	jbe    0x1400100cb
   1400100b0:	cmp    ebp,0x100
   1400100b6:	jb     0x1400100c0
   1400100b8:	cmp    ebp,0x10f
   1400100be:	jbe    0x1400100cb
   1400100c0:	lea    eax,[rbp-0x281]
   1400100c6:	cmp    eax,0x10
   1400100c9:	ja     0x1400100f6
   1400100cb:	mov    rcx,QWORD PTR [r12+0x98]
   1400100d3:	mov    rax,QWORD PTR [rcx]
   1400100d6:	lea    rdx,[rsp+0x30]
   1400100db:	mov    QWORD PTR [rsp+0x20],rdx
   1400100e0:	mov    r9,rsi
   1400100e3:	mov    r8,r13
   1400100e6:	mov    edx,ebp
   1400100e8:	call   QWORD PTR [rax+0x128]
   1400100ee:	test   eax,eax
   1400100f0:	jne    0x140010d37
   1400100f6:	mov    rax,QWORD PTR [r12]
   1400100fa:	mov    rcx,r12
   1400100fd:	call   QWORD PTR [rax+0x50]
   140010100:	mov    rdi,rax
   140010103:	mov    ebx,eax
   140010105:	xor    ebx,ebp
   140010107:	and    ebx,0x1ff
   14001010d:	mov    eax,0x7
   140010112:	mov    DWORD PTR [rsp+0x40],eax
   140010116:	mov    ecx,eax
   140010118:	call   0x140006d04
   14001011d:	lea    rbx,[rbx+rbx*2]
   140010121:	lea    rdx,[rip+0x3af18]        # 0x14004b040
   140010128:	cmp    ebp,DWORD PTR [rdx+rbx*8]
   14001012b:	jne    0x140010168
   14001012d:	cmp    rdi,QWORD PTR [rdx+rbx*8+0x10]
   140010132:	jne    0x140010168
   140010134:	mov    rdi,QWORD PTR [rdx+rbx*8+0x8]
   140010139:	mov    ecx,0x7
   14001013e:	call   0x140006d98
   140010143:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001014b:	test   rdi,rdi
   14001014e:	jne    0x140010157
   140010150:	xor    eax,eax
   140010152:	jmp    0x140010d6a
   140010157:	cmp    ebp,0xc000
   14001015d:	jb     0x14001022a
   140010163:	jmp    0x140010d22
   140010168:	mov    DWORD PTR [rdx+rbx*8],ebp
   14001016b:	mov    QWORD PTR [rdx+rbx*8+0x10],rdi
   140010170:	mov    rcx,QWORD PTR [rdi]
   140010173:	xor    eax,eax
   140010175:	cmp    rcx,rax
   140010178:	je     0x140010d58
   14001017e:	cmp    ebp,0xc000
   140010184:	jae    0x1400101b2
   140010186:	mov    rdi,QWORD PTR [rdi+0x8]
   14001018a:	cmp    QWORD PTR [rdi+0x10],rax
   14001018e:	je     0x1400101a8
   140010190:	cmp    DWORD PTR [rdi],ebp
   140010192:	jne    0x14001019e
   140010194:	cmp    DWORD PTR [rdi+0x4],eax
   140010197:	jne    0x14001019e
   140010199:	cmp    DWORD PTR [rdi+0x8],eax
   14001019c:	jbe    0x1400101ab
   14001019e:	add    rdi,0x20
   1400101a2:	cmp    QWORD PTR [rdi+0x10],rax
   1400101a6:	jne    0x140010190
   1400101a8:	mov    rdi,rax
   1400101ab:	cmp    rdi,rax
   1400101ae:	jne    0x14001020c
   1400101b0:	jmp    0x1400101f4
   1400101b2:	mov    rdi,QWORD PTR [rdi+0x8]
   1400101b6:	cmp    QWORD PTR [rdi+0x10],rax
   1400101ba:	je     0x1400101d8
   1400101bc:	cmp    DWORD PTR [rdi],0xc000
   1400101c2:	jne    0x1400101ce
   1400101c4:	cmp    DWORD PTR [rdi+0x4],eax
   1400101c7:	jne    0x1400101ce
   1400101c9:	cmp    DWORD PTR [rdi+0x8],eax
   1400101cc:	jbe    0x1400101db
   1400101ce:	add    rdi,0x20
   1400101d2:	cmp    QWORD PTR [rdi+0x10],rax
   1400101d6:	jne    0x1400101bc
   1400101d8:	mov    rdi,rax
   1400101db:	cmp    rdi,rax
   1400101de:	je     0x1400101f4
   1400101e0:	mov    rax,QWORD PTR [rdi+0x10]
   1400101e4:	cmp    DWORD PTR [rax],ebp
   1400101e6:	je     0x140010d04
   1400101ec:	add    rdi,0x20
   1400101f0:	xor    eax,eax
   1400101f2:	jmp    0x1400101b6
   1400101f4:	call   rcx
   1400101f6:	mov    rdi,rax
   1400101f9:	mov    rcx,QWORD PTR [rax]
   1400101fc:	xor    eax,eax
   1400101fe:	cmp    rcx,rax
   140010201:	je     0x140010d51
   140010207:	jmp    0x14001017e
   14001020c:	lea    rax,[rip+0x3ae2d]        # 0x14004b040
   140010213:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   140010218:	mov    ecx,0x7
   14001021d:	call   0x140006d98
   140010222:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   14001022a:	mov    rbx,QWORD PTR [rdi+0x18]
   14001022e:	mov    rax,QWORD PTR [rdi+0x10]
   140010232:	cmp    rax,0x24
   140010236:	ja     0x1400107c1
   14001023c:	cmp    rax,0x24
   140010240:	je     0x1400107ac
   140010246:	cmp    rax,0x12
   14001024a:	ja     0x14001059a
   140010250:	cmp    rax,0x12
   140010254:	je     0x14001058a
   14001025a:	cmp    rax,0x9
   14001025e:	ja     0x140010462
   140010264:	cmp    rax,0x9
   140010268:	je     0x140010426
   14001026e:	sub    rax,r15
   140010271:	je     0x140010409
   140010277:	sub    rax,r15
   14001027a:	je     0x1400103f4
   140010280:	sub    rax,r15
   140010283:	je     0x1400103df
   140010289:	sub    rax,r15
   14001028c:	je     0x1400103ca
   140010292:	sub    rax,r15
   140010295:	je     0x14001039a
   14001029b:	sub    rax,r15
   14001029e:	je     0x14001037a
   1400102a4:	sub    rax,r15
   1400102a7:	je     0x140010365
   1400102ad:	cmp    rax,r15
   1400102b0:	jne    0x140010d37
   1400102b6:	lea    rcx,[rsp+0x48]
   1400102bb:	call   0x140012658
   1400102c0:	nop
   1400102c1:	mov    rax,QWORD PTR [rsi+0x8]
   1400102c5:	mov    QWORD PTR [rsp+0x50],rax
   1400102ca:	lea    rcx,[rsp+0x70]
   1400102cf:	call   0x14000c26c
   1400102d4:	nop
   1400102d5:	mov    rcx,QWORD PTR [rsi]
   1400102d8:	mov    QWORD PTR [rsp+0xb0],rcx
   1400102e0:	mov    edi,DWORD PTR [rsi+0x10]
   1400102e3:	call   0x14000db60
   1400102e8:	test   rax,rax
   1400102eb:	jne    0x140010327
   1400102ed:	mov    rcx,QWORD PTR [r12+0x98]
   1400102f5:	test   rcx,rcx
   1400102f8:	je     0x140010322
   1400102fa:	add    rcx,0x48
   1400102fe:	mov    rdx,QWORD PTR [rsp+0xb0]
   140010306:	call   0x1400087ec
   14001030b:	mov    rcx,QWORD PTR [rsp+0x110]
   140010313:	test   rax,rax
   140010316:	cmovne rcx,rax
   14001031a:	mov    QWORD PTR [rsp+0x110],rcx
   140010322:	lea    rax,[rsp+0x70]
   140010327:	mov    r9d,edi
   14001032a:	mov    r8,rax
   14001032d:	lea    rdx,[rsp+0x48]
   140010332:	mov    rcx,r12
   140010335:	call   rbx
   140010337:	and    QWORD PTR [rsp+0x50],0x0
   14001033d:	and    QWORD PTR [rsp+0xb0],0x0
   140010346:	mov    QWORD PTR [rsp+0x30],rax
   14001034b:	lea    rcx,[rsp+0x70]
   140010350:	call   0x14000e554
   140010355:	nop
   140010356:	lea    rcx,[rsp+0x48]
   14001035b:	call   0x140012c78
   140010360:	jmp    0x140010d37
   140010365:	mov    rdx,rsi
   140010368:	mov    rcx,r12
   14001036b:	call   rbx
   14001036d:	movsxd rcx,eax
   140010370:	mov    QWORD PTR [rsp+0x30],rcx
   140010375:	jmp    0x140010d37
   14001037a:	mov    rcx,r13
   14001037d:	call   0x14000db1c
   140010382:	mov    rdx,rax
   140010385:	mov    r8,rsi
   140010388:	mov    rcx,r12
   14001038b:	call   rbx
   14001038d:	movsxd rcx,eax
   140010390:	mov    QWORD PTR [rsp+0x30],rcx
   140010395:	jmp    0x140010d37
   14001039a:	mov    rax,rsi
   14001039d:	shr    rax,0x10
   1400103a1:	movzx  edi,ax
   1400103a4:	movzx  esi,si
   1400103a7:	mov    rcx,r13
   1400103aa:	call   0x14000db1c
   1400103af:	mov    rdx,rax
   1400103b2:	mov    r9d,edi
   1400103b5:	mov    r8d,esi
   1400103b8:	mov    rcx,r12
   1400103bb:	call   rbx
   1400103bd:	movsxd rcx,eax
   1400103c0:	mov    QWORD PTR [rsp+0x30],rcx
   1400103c5:	jmp    0x140010d37
   1400103ca:	mov    rdx,r13
   1400103cd:	mov    rcx,r12
   1400103d0:	call   rbx
   1400103d2:	movsxd rcx,eax
   1400103d5:	mov    QWORD PTR [rsp+0x30],rcx
   1400103da:	jmp    0x140010d37
   1400103df:	mov    edx,r13d
   1400103e2:	mov    rcx,r12
   1400103e5:	call   rbx
   1400103e7:	movsxd rcx,eax
   1400103ea:	mov    QWORD PTR [rsp+0x30],rcx
   1400103ef:	jmp    0x140010d37
   1400103f4:	mov    edx,r13d
   1400103f7:	mov    rcx,r12
   1400103fa:	call   rbx
   1400103fc:	movsxd rcx,eax
   1400103ff:	mov    QWORD PTR [rsp+0x30],rcx
   140010404:	jmp    0x140010d37
   140010409:	mov    rcx,r13
   14001040c:	call   0x140012c04
   140010411:	mov    rdx,rax
   140010414:	mov    rcx,r12
   140010417:	call   rbx
   140010419:	movsxd rcx,eax
   14001041c:	mov    QWORD PTR [rsp+0x30],rcx
   140010421:	jmp    0x140010d37
   140010426:	lea    rcx,[rsp+0x48]
   14001042b:	call   0x140012658
   140010430:	nop
   140010431:	mov    rax,QWORD PTR [rsi+0x8]
   140010435:	mov    QWORD PTR [rsp+0x50],rax
   14001043a:	mov    r8d,DWORD PTR [rsi+0x10]
   14001043e:	lea    rdx,[rsp+0x48]
   140010443:	mov    rcx,r12
   140010446:	call   rbx
   140010448:	and    QWORD PTR [rsp+0x50],0x0
   14001044e:	mov    QWORD PTR [rsp+0x30],rax
   140010453:	lea    rcx,[rsp+0x48]
   140010458:	call   0x140012c78
   14001045d:	jmp    0x140010d37
   140010462:	sub    rax,0xa
   140010466:	je     0x14001055c
   14001046c:	sub    rax,r15
   14001046f:	je     0x14001053b
   140010475:	sub    rax,r15
   140010478:	je     0x14001050b
   14001047e:	sub    rax,r15
   140010481:	je     0x1400104f6
   140010483:	sub    rax,r15
   140010486:	je     0x1400104e1
   140010488:	sub    rax,r15
   14001048b:	je     0x1400104b8
   14001048d:	sub    rax,r15
   140010490:	je     0x1400104a8
   140010492:	cmp    rax,r15
   140010495:	jne    0x140010d37
   14001049b:	mov    rdx,r13
   14001049e:	mov    rcx,r12
   1400104a1:	call   rbx
   1400104a3:	jmp    0x140010d37
   1400104a8:	mov    r8,rsi
   1400104ab:	mov    edx,r13d
   1400104ae:	mov    rcx,r12
   1400104b1:	call   rbx
   1400104b3:	jmp    0x140010d37
   1400104b8:	mov    rcx,rsi
   1400104bb:	call   0x140012334
   1400104c0:	mov    r9,rax
   1400104c3:	mov    rax,r13
   1400104c6:	shr    rax,0x10
   1400104ca:	movzx  r8d,ax
   1400104ce:	movzx  edx,r13w
   1400104d2:	mov    rcx,r12
   1400104d5:	call   rbx
   1400104d7:	mov    QWORD PTR [rsp+0x30],rax
   1400104dc:	jmp    0x140010d37
   1400104e1:	mov    r8,rsi
   1400104e4:	mov    rdx,r13
   1400104e7:	mov    rcx,r12
   1400104ea:	call   rbx
   1400104ec:	mov    QWORD PTR [rsp+0x30],rax
   1400104f1:	jmp    0x140010d37
   1400104f6:	mov    rdx,rsi
   1400104f9:	mov    rcx,r12
   1400104fc:	call   rbx
   1400104fe:	movsxd rcx,eax
   140010501:	mov    QWORD PTR [rsp+0x30],rcx
   140010506:	jmp    0x140010d37
   14001050b:	mov    rax,rsi
   14001050e:	shr    rax,0x10
   140010512:	movzx  edi,ax
   140010515:	movzx  esi,si
   140010518:	mov    rcx,r13
   14001051b:	call   0x14000db1c
   140010520:	mov    rdx,rax
   140010523:	mov    r9d,edi
   140010526:	mov    r8d,esi
   140010529:	mov    rcx,r12
   14001052c:	call   rbx
   14001052e:	movsxd rcx,eax
   140010531:	mov    QWORD PTR [rsp+0x30],rcx
   140010536:	jmp    0x140010d37
   14001053b:	mov    rax,r13
   14001053e:	shr    rax,0x10
   140010542:	movzx  r8d,ax
   140010546:	movzx  edx,r13w
   14001054a:	mov    rcx,r12
   14001054d:	call   rbx
   14001054f:	movsxd rcx,eax
   140010552:	mov    QWORD PTR [rsp+0x30],rcx
   140010557:	jmp    0x140010d37
   14001055c:	mov    rax,r13
   14001055f:	shr    rax,0x10
   140010563:	movzx  edi,ax
   140010566:	mov    rcx,rsi
   140010569:	call   0x14000db1c
   14001056e:	mov    r8,rax
   140010571:	movzx  edx,r13w
   140010575:	mov    r9d,edi
   140010578:	mov    rcx,r12
   14001057b:	call   rbx
   14001057d:	movsxd rcx,eax
   140010580:	mov    QWORD PTR [rsp+0x30],rcx
   140010585:	jmp    0x140010d37
   14001058a:	mov    r8,rsi
   14001058d:	mov    rdx,r13
   140010590:	mov    rcx,r12
   140010593:	call   rbx
   140010595:	jmp    0x140010d37
   14001059a:	cmp    rax,0x1b
   14001059e:	ja     0x1400106a8
   1400105a4:	cmp    rax,0x1b
   1400105a8:	je     0x140010693
   1400105ae:	sub    rax,0x13
   1400105b2:	je     0x140010689
   1400105b8:	sub    rax,r15
   1400105bb:	je     0x14001067c
   1400105c1:	sub    rax,r15
   1400105c4:	je     0x14001066c
   1400105ca:	sub    rax,r15
   1400105cd:	je     0x140010653
   1400105d3:	sub    rax,r15
   1400105d6:	je     0x14001063b
   1400105d8:	sub    rax,r15
   1400105db:	je     0x14001061f
   1400105dd:	sub    rax,r15
   1400105e0:	je     0x140010603
   1400105e2:	cmp    rax,r15
   1400105e5:	jne    0x140010d37
   1400105eb:	mov    rcx,rsi
   1400105ee:	call   0x14000db1c
   1400105f3:	mov    r8,rax
   1400105f6:	mov    edx,r13d
   1400105f9:	mov    rcx,r12
   1400105fc:	call   rbx
   1400105fe:	jmp    0x140010d37
   140010603:	mov    rax,rsi
   140010606:	shr    rax,0x10
   14001060a:	movzx  r9d,ax
   14001060e:	movzx  r8d,si
   140010612:	mov    edx,r13d
   140010615:	mov    rcx,r12
   140010618:	call   rbx
   14001061a:	jmp    0x140010d37
   14001061f:	mov    rax,rsi
   140010622:	shr    rax,0x10
   140010626:	movzx  r9d,ax
   14001062a:	movzx  r8d,si
   14001062e:	mov    edx,r13d
   140010631:	mov    rcx,r12
   140010634:	call   rbx
   140010636:	jmp    0x140010d37
   14001063b:	mov    rax,rsi
   14001063e:	shr    rax,0x10
   140010642:	movsx  r8d,ax
   140010646:	movsx  edx,si
   140010649:	mov    rcx,r12
   14001064c:	call   rbx
   14001064e:	jmp    0x140010d37
   140010653:	mov    rax,r13
   140010656:	shr    rax,0x10
   14001065a:	movzx  r8d,ax
   14001065e:	movzx  edx,r13w
   140010662:	mov    rcx,r12
   140010665:	call   rbx
   140010667:	jmp    0x140010d37
   14001066c:	mov    r8d,esi
   14001066f:	mov    edx,r13d
   140010672:	mov    rcx,r12
   140010675:	call   rbx
   140010677:	jmp    0x140010d37
   14001067c:	mov    edx,r13d
   14001067f:	mov    rcx,r12
   140010682:	call   rbx
   140010684:	jmp    0x140010d37
   140010689:	mov    rcx,r12
   14001068c:	call   rbx
   14001068e:	jmp    0x140010d37
   140010693:	mov    edx,r13d
   140010696:	mov    rcx,r12
   140010699:	call   rbx
   14001069b:	movsxd rcx,eax
   14001069e:	mov    QWORD PTR [rsp+0x30],rcx
   1400106a3:	jmp    0x140010d37
   1400106a8:	sub    rax,0x1c
   1400106ac:	je     0x140010797
   1400106b2:	sub    rax,r15
   1400106b5:	je     0x140010785
   1400106bb:	sub    rax,r15
   1400106be:	je     0x140010775
   1400106c4:	sub    rax,r15
   1400106c7:	je     0x140010748
   1400106c9:	sub    rax,r15
   1400106cc:	je     0x140010733
   1400106ce:	sub    rax,r15
   1400106d1:	je     0x14001071e
   1400106d3:	sub    rax,r15
   1400106d6:	je     0x1400106f6
   1400106d8:	cmp    rax,r15
   1400106db:	jne    0x140010d37
   1400106e1:	mov    rcx,r13
   1400106e4:	call   0x14000db1c
   1400106e9:	mov    rdx,rax
   1400106ec:	mov    rcx,r12
   1400106ef:	call   rbx
   1400106f1:	jmp    0x140010d37
   1400106f6:	mov    rax,rsi
   1400106f9:	shr    rax,0x10
   1400106fd:	movsx  edi,ax
   140010700:	movsx  esi,si
   140010703:	mov    rcx,r13
   140010706:	call   0x140012334
   14001070b:	mov    rdx,rax
   14001070e:	mov    r9d,edi
   140010711:	mov    r8d,esi
   140010714:	mov    rcx,r12
   140010717:	call   rbx
   140010719:	jmp    0x140010d37
   14001071e:	mov    rcx,r13
   140010721:	call   0x140012334
   140010726:	mov    rdx,rax
   140010729:	mov    rcx,r12
   14001072c:	call   rbx
   14001072e:	jmp    0x140010d37
   140010733:	mov    rcx,r13
   140010736:	call   0x140012c04
   14001073b:	mov    rdx,rax
   14001073e:	mov    rcx,r12
   140010741:	call   rbx
   140010743:	jmp    0x140010d37
   140010748:	mov    rcx,r13
   14001074b:	call   0x14000db1c
   140010750:	mov    rdi,rax
   140010753:	mov    rcx,rsi
   140010756:	call   0x14000db1c
   14001075b:	mov    r8,rax
   14001075e:	xor    edx,edx
   140010760:	cmp    QWORD PTR [r12+0x40],rsi
   140010765:	sete   dl
   140010768:	mov    r9,rdi
   14001076b:	mov    rcx,r12
   14001076e:	call   rbx
   140010770:	jmp    0x140010d37
   140010775:	mov    r8,rsi
   140010778:	mov    rdx,r13
   14001077b:	mov    rcx,r12
   14001077e:	call   rbx
   140010780:	jmp    0x140010d37
   140010785:	mov    rcx,r12
   140010788:	call   rbx
   14001078a:	movsxd rcx,eax
   14001078d:	mov    QWORD PTR [rsp+0x30],rcx
   140010792:	jmp    0x140010d37
   140010797:	mov    edx,r13d
   14001079a:	mov    rcx,r12
   14001079d:	call   rbx
   14001079f:	mov    r11d,eax
   1400107a2:	mov    QWORD PTR [rsp+0x30],r11
   1400107a7:	jmp    0x140010d37
   1400107ac:	mov    rcx,rsi
   1400107af:	call   0x14000db1c
   1400107b4:	mov    rdx,rax
   1400107b7:	mov    rcx,r12
   1400107ba:	call   rbx
   1400107bc:	jmp    0x140010d37
   1400107c1:	cmp    rax,0x37
   1400107c5:	ja     0x140010a7f
   1400107cb:	cmp    rax,0x37
   1400107cf:	je     0x140010a43
   1400107d5:	cmp    rax,0x2e
   1400107d9:	ja     0x140010945
   1400107df:	cmp    rax,0x2e
   1400107e3:	je     0x140010930
   1400107e9:	cmp    rax,0x25
   1400107ed:	je     0x140010908
   1400107f3:	cmp    rax,0x26
   1400107f7:	je     0x1400108dc
   1400107fd:	cmp    rax,0x27
   140010801:	je     0x1400108c4
   140010807:	cmp    rax,0x28
   14001080b:	je     0x1400108b5
   140010811:	cmp    rax,0x29
   140010815:	je     0x14001088f
   140010817:	cmp    rax,0x29
   14001081b:	jbe    0x140010d37
   140010821:	cmp    rax,0x2b
   140010825:	jbe    0x140010854
   140010827:	cmp    rax,0x2c
   14001082b:	je     0x140010847
   14001082d:	cmp    rax,0x2d
   140010831:	jne    0x140010d37
   140010837:	mov    r8,rsi
   14001083a:	mov    edx,r13d
   14001083d:	mov    rcx,r12
   140010840:	call   rbx
   140010842:	jmp    0x140010d37
   140010847:	mov    rdx,rsi
   14001084a:	mov    rcx,r12
   14001084d:	call   rbx
   14001084f:	jmp    0x140010d37
   140010854:	movsx  edi,r13w
   140010858:	shr    r13,0x10
   14001085c:	movsx  ebp,r13w
   140010860:	cmp    rax,0x2a
   140010864:	jne    0x140010880
   140010866:	mov    rcx,rsi
   140010869:	call   0x14000db1c
   14001086e:	mov    r9,rax
   140010871:	mov    r8d,ebp
   140010874:	mov    edx,edi
   140010876:	mov    rcx,r12
   140010879:	call   rbx
   14001087b:	jmp    0x140010d37
   140010880:	mov    r8d,ebp
   140010883:	mov    edx,edi
   140010885:	mov    rcx,r12
   140010888:	call   rbx
   14001088a:	jmp    0x140010d37
   14001088f:	mov    rax,r13
   140010892:	shr    rax,0x10
   140010896:	movzx  edi,ax
   140010899:	mov    rcx,rsi
   14001089c:	call   0x14000db1c
   1400108a1:	mov    r8,rax
   1400108a4:	movzx  edx,r13w
   1400108a8:	mov    r9d,edi
   1400108ab:	mov    rcx,r12
   1400108ae:	call   rbx
   1400108b0:	jmp    0x140010d37
   1400108b5:	mov    rcx,r12
   1400108b8:	call   rbx
   1400108ba:	mov    QWORD PTR [rsp+0x30],rax
   1400108bf:	jmp    0x140010d37
   1400108c4:	mov    rcx,r13
   1400108c7:	call   0x14000db1c
   1400108cc:	mov    rdx,rax
   1400108cf:	mov    r8,rsi
   1400108d2:	mov    rcx,r12
   1400108d5:	call   rbx
   1400108d7:	jmp    0x140010d37
   1400108dc:	movsx  eax,si
   1400108df:	mov    DWORD PTR [rsp+0x38],eax
   1400108e3:	shr    rsi,0x10
   1400108e7:	movsx  eax,si
   1400108ea:	mov    DWORD PTR [rsp+0x3c],eax
   1400108ee:	mov    rcx,r13
   1400108f1:	call   0x14000db1c
   1400108f6:	mov    rdx,rax
   1400108f9:	mov    r8,QWORD PTR [rsp+0x38]
   1400108fe:	mov    rcx,r12
   140010901:	call   rbx
   140010903:	jmp    0x140010d37
   140010908:	mov    rax,rsi
   14001090b:	shr    rax,0x10
   14001090f:	movzx  edi,ax
   140010912:	movzx  esi,si
   140010915:	mov    rcx,r13
   140010918:	call   0x14000db1c
   14001091d:	mov    rdx,rax
   140010920:	mov    r9d,edi
   140010923:	mov    r8d,esi
   140010926:	mov    rcx,r12
   140010929:	call   rbx
   14001092b:	jmp    0x140010d37
   140010930:	mov    r8,rsi
   140010933:	mov    edx,r13d
   140010936:	mov    rcx,r12
   140010939:	call   rbx
   14001093b:	mov    QWORD PTR [rsp+0x30],r15
   140010940:	jmp    0x140010d37
   140010945:	sub    rax,0x2f
   140010949:	je     0x140010a2b
   14001094f:	sub    rax,r15
   140010952:	je     0x140010a02
   140010958:	sub    rax,r15
   14001095b:	je     0x1400109f0
   140010961:	sub    rax,r15
   140010964:	je     0x1400109e0
   140010966:	sub    rax,r15
   140010969:	je     0x1400109d3
   14001096b:	sub    rax,r15
   14001096e:	je     0x1400109b7
   140010970:	sub    rax,r15
   140010973:	je     0x140010993
   140010975:	cmp    rax,r15
   140010978:	jne    0x140010d37
   14001097e:	mov    r8,rsi
   140010981:	mov    edx,r13d
   140010984:	mov    rcx,r12
   140010987:	call   rbx
   140010989:	mov    QWORD PTR [rsp+0x30],r15
   14001098e:	jmp    0x140010d37
   140010993:	movsx  eax,si
   140010996:	mov    DWORD PTR [rsp+0x38],eax
   14001099a:	shr    rsi,0x10
   14001099e:	movsx  eax,si
   1400109a1:	mov    DWORD PTR [rsp+0x3c],eax
   1400109a5:	mov    r8,QWORD PTR [rsp+0x38]
   1400109aa:	mov    edx,r13d
   1400109ad:	mov    rcx,r12
   1400109b0:	call   rbx
   1400109b2:	jmp    0x140010d37
   1400109b7:	mov    rax,r13
   1400109ba:	shr    rax,0x10
   1400109be:	movzx  r8d,ax
   1400109c2:	movzx  edx,r13w
   1400109c6:	mov    r9,rsi
   1400109c9:	mov    rcx,r12
   1400109cc:	call   rbx
   1400109ce:	jmp    0x140010d37
   1400109d3:	mov    rdx,rsi
   1400109d6:	mov    rcx,r12
   1400109d9:	call   rbx
   1400109db:	jmp    0x140010d37
   1400109e0:	mov    r8,rsi
   1400109e3:	mov    edx,r13d
   1400109e6:	mov    rcx,r12
   1400109e9:	call   rbx
   1400109eb:	jmp    0x140010d37
   1400109f0:	mov    rcx,r12
   1400109f3:	call   rbx
   1400109f5:	mov    r11d,eax
   1400109f8:	mov    QWORD PTR [rsp+0x30],r11
   1400109fd:	jmp    0x140010d37
   140010a02:	movsx  eax,si
   140010a05:	mov    DWORD PTR [rsp+0x38],eax
   140010a09:	shr    rsi,0x10
   140010a0d:	movsx  eax,si
   140010a10:	mov    DWORD PTR [rsp+0x3c],eax
   140010a14:	mov    rdx,QWORD PTR [rsp+0x38]
   140010a19:	mov    rcx,r12
   140010a1c:	call   rbx
   140010a1e:	mov    r11d,eax
   140010a21:	mov    QWORD PTR [rsp+0x30],r11
   140010a26:	jmp    0x140010d37
   140010a2b:	mov    r8,rsi
   140010a2e:	mov    edx,r13d
   140010a31:	mov    rcx,r12
   140010a34:	call   rbx
   140010a36:	movsxd rcx,eax
   140010a39:	mov    QWORD PTR [rsp+0x30],rcx
   140010a3e:	jmp    0x140010d37
   140010a43:	movsx  eax,si
   140010a46:	mov    DWORD PTR [rsp+0x38],eax
   140010a4a:	shr    rsi,0x10
   140010a4e:	movsx  eax,si
   140010a51:	mov    DWORD PTR [rsp+0x3c],eax
   140010a55:	mov    r8,r13
   140010a58:	shr    r8,0x10
   140010a5c:	movzx  edx,r13w
   140010a60:	mov    r9,QWORD PTR [rsp+0x38]
   140010a65:	mov    rcx,r12
   140010a68:	call   rbx
   140010a6a:	cdqe   
   140010a6c:	mov    QWORD PTR [rsp+0x30],rax
   140010a71:	test   rax,rax
   140010a74:	jne    0x140010d37
   140010a7a:	jmp    0x140010d6a
   140010a7f:	cmp    rax,0x4c
   140010a83:	ja     0x140010bce
   140010a89:	cmp    rax,0x4c
   140010a8d:	je     0x140010bbe
   140010a93:	sub    rax,0x38
   140010a97:	je     0x140010b92
   140010a9d:	sub    rax,0xd
   140010aa1:	je     0x140010b78
   140010aa7:	sub    rax,r15
   140010aaa:	je     0x140010b52
   140010ab0:	sub    rax,r15
   140010ab3:	je     0x140010b32
   140010ab5:	sub    rax,r15
   140010ab8:	je     0x140010b1a
   140010aba:	sub    rax,r15
   140010abd:	je     0x140010afa
   140010abf:	sub    rax,r15
   140010ac2:	je     0x140010ae5
   140010ac4:	cmp    rax,r15
   140010ac7:	jne    0x140010d37
   140010acd:	mov    rcx,r13
   140010ad0:	call   0x140012334
   140010ad5:	mov    rdx,rax
   140010ad8:	mov    r8d,esi
   140010adb:	mov    rcx,r12
   140010ade:	call   rbx
   140010ae0:	jmp    0x140010d37
   140010ae5:	mov    rdx,rsi
   140010ae8:	mov    rcx,r12
   140010aeb:	call   rbx
   140010aed:	mov    r11d,eax
   140010af0:	mov    QWORD PTR [rsp+0x30],r11
   140010af5:	jmp    0x140010d37
   140010afa:	mov    rcx,rsi
   140010afd:	call   0x140012334
   140010b02:	mov    r8,rax
   140010b05:	mov    edx,r13d
   140010b08:	mov    rcx,r12
   140010b0b:	call   rbx
   140010b0d:	mov    r11d,eax
   140010b10:	mov    QWORD PTR [rsp+0x30],r11
   140010b15:	jmp    0x140010d37
   140010b1a:	mov    rcx,rsi
   140010b1d:	call   0x140012334
   140010b22:	mov    r8,rax
   140010b25:	mov    edx,r13d
   140010b28:	mov    rcx,r12
   140010b2b:	call   rbx
   140010b2d:	jmp    0x140010d37
   140010b32:	mov    rcx,r13
   140010b35:	call   0x14000db1c
   140010b3a:	mov    rdx,rax
   140010b3d:	mov    r8d,esi
   140010b40:	mov    rcx,r12
   140010b43:	call   rbx
   140010b45:	mov    r11d,eax
   140010b48:	mov    QWORD PTR [rsp+0x30],r11
   140010b4d:	jmp    0x140010d37
   140010b52:	movsx  eax,si
   140010b55:	mov    DWORD PTR [rsp+0x38],eax
   140010b59:	shr    rsi,0x10
   140010b5d:	movsx  eax,si
   140010b60:	mov    DWORD PTR [rsp+0x3c],eax
   140010b64:	mov    rdx,QWORD PTR [rsp+0x38]
   140010b69:	mov    rcx,r12
   140010b6c:	call   rbx
   140010b6e:	mov    QWORD PTR [rsp+0x30],rax
   140010b73:	jmp    0x140010d37
   140010b78:	mov    rcx,r12
   140010b7b:	call   rbx
   140010b7d:	mov    QWORD PTR [rsp+0x30],rax
   140010b82:	test   rax,rax
   140010b85:	je     0x140010d37
   140010b8b:	xor    eax,eax
   140010b8d:	jmp    0x140010d6a
   140010b92:	movsx  eax,si
   140010b95:	mov    DWORD PTR [rsp+0x38],eax
   140010b99:	shr    rsi,0x10
   140010b9d:	movsx  eax,si
   140010ba0:	mov    DWORD PTR [rsp+0x3c],eax
   140010ba4:	mov    r8,r13
   140010ba7:	shr    r8,0x10
   140010bab:	movzx  edx,r13w
   140010baf:	mov    r9,QWORD PTR [rsp+0x38]
   140010bb4:	mov    rcx,r12
   140010bb7:	call   rbx
   140010bb9:	jmp    0x140010d37
   140010bbe:	mov    r8,rsi
   140010bc1:	mov    edx,r13d
   140010bc4:	mov    rcx,r12
   140010bc7:	call   rbx
   140010bc9:	jmp    0x140010d37
   140010bce:	sub    rax,0x4d
   140010bd2:	je     0x140010ccb
   140010bd8:	sub    rax,r15
   140010bdb:	je     0x140010cbd
   140010be1:	sub    rax,r15
   140010be4:	je     0x140010ca8
   140010bea:	sub    rax,r15
   140010bed:	je     0x140010c73
   140010bf3:	sub    rax,r15
   140010bf6:	je     0x140010c3e
   140010bf8:	sub    rax,r15
   140010bfb:	je     0x140010c29
   140010bfd:	sub    rax,r15
   140010c00:	je     0x140010c19
   140010c02:	cmp    rax,r15
   140010c05:	jne    0x140010d37
   140010c0b:	movzx  edx,r13w
   140010c0f:	mov    rcx,r12
   140010c12:	call   rbx
   140010c14:	jmp    0x140010d37
   140010c19:	mov    r8,rsi
   140010c1c:	mov    edx,r13d
   140010c1f:	mov    rcx,r12
   140010c22:	call   rbx
   140010c24:	jmp    0x140010d37
   140010c29:	mov    r8d,esi
   140010c2c:	mov    dl,r13b
   140010c2f:	mov    rcx,r12
   140010c32:	call   rbx
   140010c34:	mov    QWORD PTR [rsp+0x30],r15
   140010c39:	jmp    0x140010d37
   140010c3e:	movsx  eax,si
   140010c41:	mov    DWORD PTR [rsp+0x38],eax
   140010c45:	shr    rsi,0x10
   140010c49:	movsx  eax,si
   140010c4c:	mov    DWORD PTR [rsp+0x3c],eax
   140010c50:	mov    rax,r13
   140010c53:	shr    rax,0x10
   140010c57:	movzx  r8d,ax
   140010c5b:	mov    r9,QWORD PTR [rsp+0x38]
   140010c60:	movzx  edx,r13w
   140010c64:	mov    rcx,r12
   140010c67:	call   rbx
   140010c69:	mov    QWORD PTR [rsp+0x30],r15
   140010c6e:	jmp    0x140010d37
   140010c73:	movsx  eax,si
   140010c76:	mov    DWORD PTR [rsp+0x38],eax
   140010c7a:	shr    rsi,0x10
   140010c7e:	movsx  eax,si
   140010c81:	mov    DWORD PTR [rsp+0x3c],eax
   140010c85:	mov    rax,r13
   140010c88:	shr    rax,0x10
   140010c8c:	movzx  r8d,ax
   140010c90:	movzx  edx,r13w
   140010c94:	mov    r9,QWORD PTR [rsp+0x38]
   140010c99:	mov    rcx,r12
   140010c9c:	call   rbx
   140010c9e:	mov    QWORD PTR [rsp+0x30],r15
   140010ca3:	jmp    0x140010d37
   140010ca8:	mov    r8d,esi
   140010cab:	mov    edx,r13d
   140010cae:	mov    rcx,r12
   140010cb1:	call   rbx
   140010cb3:	mov    r11d,eax
   140010cb6:	mov    QWORD PTR [rsp+0x30],r11
   140010cbb:	jmp    0x140010d37
   140010cbd:	movzx  edx,r13b
   140010cc1:	mov    r8,rsi
   140010cc4:	mov    rcx,r12
   140010cc7:	call   rbx
   140010cc9:	jmp    0x140010d37
   140010ccb:	mov    rbp,rsi
   140010cce:	shr    rbp,0x10
   140010cd2:	movzx  edi,si
   140010cd5:	mov    esi,ebp
   140010cd7:	and    esi,0xf000
   140010cdd:	and    ebp,0xfff
   140010ce3:	mov    rcx,r13
   140010ce6:	call   0x14000db1c
   140010ceb:	mov    rdx,rax
   140010cee:	mov    DWORD PTR [rsp+0x20],edi
   140010cf2:	mov    r9d,esi
   140010cf5:	mov    r8d,ebp
   140010cf8:	mov    rcx,r12
   140010cfb:	call   rbx
   140010cfd:	mov    QWORD PTR [rsp+0x30],r15
   140010d02:	jmp    0x140010d37
   140010d04:	lea    rax,[rip+0x3a335]        # 0x14004b040
   140010d0b:	mov    QWORD PTR [rax+rbx*8+0x8],rdi
   140010d10:	mov    ecx,0x7
   140010d15:	call   0x140006d98
   140010d1a:	mov    DWORD PTR [rsp+0x40],0x7fffffff
   140010d22:	mov    r9,QWORD PTR [rdi+0x18]
   140010d26:	mov    r8,rsi
   140010d29:	mov    rdx,r13
   140010d2c:	mov    rcx,r12
   140010d2f:	call   r9
   140010d32:	mov    QWORD PTR [rsp+0x30],rax
   140010d37:	mov    rdx,QWORD PTR [rsp+0x160]
   140010d3f:	test   rdx,rdx
   140010d42:	je     0x140010d4c
   140010d44:	mov    rcx,QWORD PTR [rsp+0x30]
   140010d49:	mov    QWORD PTR [rdx],rcx
   140010d4c:	mov    eax,r15d
   140010d4f:	jmp    0x140010d6a
   140010d51:	lea    rdx,[rip+0x3a2e8]        # 0x14004b040
   140010d58:	mov    QWORD PTR [rdx+rbx*8+0x8],rax
   140010d5d:	mov    ecx,0x7
   140010d62:	call   0x140006d98
   140010d67:	nop
   140010d68:	xor    eax,eax
   140010d6a:	lea    r11,[rsp+0x120]
   140010d72:	mov    rbx,QWORD PTR [r11+0x20]
   140010d76:	mov    rbp,QWORD PTR [r11+0x28]
   140010d7a:	mov    rsi,QWORD PTR [r11+0x30]
   140010d7e:	mov    rdi,QWORD PTR [r11+0x38]
   140010d82:	mov    rsp,r11
   140010d85:	pop    r15
   140010d87:	pop    r13
   140010d89:	pop    r12
   140010d8b:	ret    
   140010d8c:	rex push rbx
   140010d8e:	sub    rsp,0x50
   140010d92:	cmp    edx,0x2b
   140010d95:	jb     0x140010dda
   140010d97:	cmp    edx,0x2f
   140010d9a:	jbe    0x140010e96
   140010da0:	cmp    edx,0x39
   140010da3:	je     0x140010e96
   140010da9:	cmp    edx,0x4e
   140010dac:	je     0x140010e64
   140010db2:	cmp    edx,0x111
   140010db8:	je     0x140010e2a
   140010dba:	cmp    edx,0x113
   140010dc0:	jbe    0x140010dda
   140010dc2:	cmp    edx,0x115
   140010dc8:	jbe    0x140010e96
   140010dce:	cmp    edx,0x210
   140010dd4:	je     0x140010e96
   140010dda:	lea    eax,[rdx-0x132]
   140010de0:	cmp    eax,0x6
   140010de3:	ja     0x140010eb0
   140010de9:	mov    rbx,QWORD PTR [rsp+0x80]
   140010df1:	lea    eax,[rdx-0x132]
   140010df7:	mov    QWORD PTR [rsp+0x38],r8
   140010dfc:	lea    r9,[rsp+0x30]
   140010e01:	xor    r8d,r8d
   140010e04:	mov    edx,0xbc19
   140010e09:	mov    QWORD PTR [rsp+0x20],rbx
   140010e0e:	mov    DWORD PTR [rsp+0x40],eax
   140010e12:	call   0x14000ffa4
   140010e17:	mov    rcx,QWORD PTR [rbx]
   140010e1a:	mov    r11d,eax
   140010e1d:	neg    rcx
   140010e20:	sbb    eax,eax
   140010e22:	and    eax,r11d
   140010e25:	jmp    0x140010eb2
   140010e2a:	and    QWORD PTR [rsp+0x20],0x0
   140010e30:	shr    r8,0x10
   140010e34:	xor    r9d,r9d
   140010e37:	movzx  r8d,r8w
   140010e3b:	xor    edx,edx
   140010e3d:	or     r8d,0xbd110000
   140010e44:	call   0x14000a054
   140010e49:	test   eax,eax
   140010e4b:	je     0x140010eb0
   140010e4d:	mov    rcx,QWORD PTR [rsp+0x80]
   140010e55:	mov    eax,0x1
   140010e5a:	test   rcx,rcx
   140010e5d:	je     0x140010eb2
   140010e5f:	mov    QWORD PTR [rcx],rax
   140010e62:	jmp    0x140010eb2
   140010e64:	movzx  r8d,WORD PTR [r9+0x10]
   140010e69:	mov    rax,QWORD PTR [rsp+0x80]
   140010e71:	and    QWORD PTR [rsp+0x20],0x0
   140010e77:	mov    QWORD PTR [rsp+0x38],r9
   140010e7c:	lea    r9,[rsp+0x30]
   140010e81:	or     r8d,0xbc4e0000
   140010e88:	xor    edx,edx
   140010e8a:	mov    QWORD PTR [rsp+0x30],rax
   140010e8f:	call   0x14000a054
   140010e94:	jmp    0x140010eb2
   140010e96:	mov    rax,QWORD PTR [rsp+0x80]
   140010e9e:	add    edx,0xbc00
   140010ea4:	mov    QWORD PTR [rsp+0x20],rax
   140010ea9:	call   0x14000ffa4
   140010eae:	jmp    0x140010eb2
   140010eb0:	xor    eax,eax
   140010eb2:	add    rsp,0x50
   140010eb6:	pop    rbx
   140010eb7:	ret    
   140010eb8:	rex push rbx
   140010eba:	sub    rsp,0x20
   140010ebe:	and    DWORD PTR [rip+0x3a16b],0x0        # 0x14004b030
   140010ec5:	cmp    QWORD PTR [rcx+0x98],0x0
   140010ecd:	mov    rbx,rcx
   140010ed0:	je     0x140010ee7
   140010ed2:	mov    rcx,QWORD PTR [rcx+0x98]
   140010ed9:	mov    edx,0xfffffd3f
   140010ede:	mov    rax,QWORD PTR [rcx]
   140010ee1:	call   QWORD PTR [rax+0xa0]
   140010ee7:	xor    r8d,r8d
   140010eea:	xor    edx,edx
   140010eec:	mov    rcx,rbx
   140010eef:	add    rsp,0x20
   140010ef3:	pop    rbx
   140010ef4:	jmp    0x14000f458
   140010ef9:	int3   
   140010efa:	int3   
   140010efb:	int3   
   140010efc:	mov    QWORD PTR [rsp+0x8],rcx
   140010f01:	push   rbx
   140010f02:	push   rsi
   140010f03:	push   rdi
   140010f04:	push   r12
   140010f06:	sub    rsp,0x38
   140010f0a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140010f13:	mov    rsi,rcx
   140010f16:	xor    ebx,ebx
   140010f18:	cmp    rcx,rbx
   140010f1b:	jne    0x140010f27
   140010f1d:	mov    eax,0x80004003
   140010f22:	jmp    0x140010fab
   140010f27:	mov    QWORD PTR [rcx],rbx
   140010f2a:	mov    r12d,0x8007000e
   140010f30:	mov    DWORD PTR [rsp+0x68],r12d
   140010f35:	mov    QWORD PTR [rsp+0x70],rbx
   140010f3a:	mov    ecx,0x30
   140010f3f:	call   0x140006290
   140010f44:	mov    rdi,rax
   140010f47:	mov    QWORD PTR [rsp+0x78],rax
   140010f4c:	cmp    rax,rbx
   140010f4f:	je     0x140010f83
   140010f51:	mov    DWORD PTR [rax+0x28],ebx
   140010f54:	mov    QWORD PTR [rax+0x10],rbx
   140010f58:	mov    QWORD PTR [rax+0x18],rbx
   140010f5c:	lea    rax,[rip+0x272b5]        # 0x140038218
   140010f63:	mov    QWORD PTR [rdi],rax
   140010f66:	lea    rax,[rip+0x2727b]        # 0x1400381e8
   140010f6d:	mov    QWORD PTR [rdi+0x8],rax
   140010f71:	lea    rax,[rip+0x27240]        # 0x1400381b8
   140010f78:	mov    QWORD PTR [rdi+0x20],rax
   140010f7c:	call   0x140012ffc
   140010f81:	jmp    0x140010f86
   140010f83:	mov    rdi,rbx
   140010f86:	mov    QWORD PTR [rsp+0x70],rdi
   140010f8b:	jmp    0x140010f9e
   140010f8d:	xor    ebx,ebx
   140010f8f:	mov    rsi,QWORD PTR [rsp+0x60]
   140010f94:	mov    r12d,DWORD PTR [rsp+0x68]
   140010f99:	mov    rdi,QWORD PTR [rsp+0x70]
   140010f9e:	cmp    rdi,rbx
   140010fa1:	cmovne r12d,ebx
   140010fa5:	mov    QWORD PTR [rsi],rdi
   140010fa8:	mov    eax,r12d
   140010fab:	add    rsp,0x38
   140010faf:	pop    r12
   140010fb1:	pop    rdi
   140010fb2:	pop    rsi
   140010fb3:	pop    rbx
   140010fb4:	ret    
   140010fb5:	int3   
   140010fb6:	int3   
   140010fb7:	int3   
   140010fb8:	sub    rsp,0x268
   140010fbf:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140010fc8:	mov    rax,QWORD PTR [rip+0x37df1]        # 0x140048dc0
   140010fcf:	xor    rax,rsp
   140010fd2:	mov    QWORD PTR [rsp+0x250],rax
   140010fda:	call   0x140007df0
   140010fdf:	mov    rcx,QWORD PTR [rax+0x8]
   140010fe3:	call   0x14000a2b4
   140010fe8:	nop
   140010fe9:	mov    rcx,QWORD PTR [rsp+0x250]
   140010ff1:	xor    rcx,rsp
   140010ff4:	call   0x1400144f0
   140010ff9:	add    rsp,0x268
   140011000:	ret    
   140011001:	int3   
   140011002:	int3   
   140011003:	int3   
   140011004:	rex push rdi
   140011006:	sub    rsp,0x30
   14001100a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140011013:	mov    QWORD PTR [rsp+0x40],rbx
   140011018:	mov    QWORD PTR [rsp+0x48],rbp
   14001101d:	mov    QWORD PTR [rsp+0x50],rsi
   140011022:	mov    edi,r8d
   140011025:	mov    rsi,rdx
   140011028:	mov    rbx,rcx
   14001102b:	call   0x140007df0
   140011030:	mov    rbp,QWORD PTR [rax+0x8]
   140011034:	call   0x140007df0
   140011039:	mov    rcx,QWORD PTR [rax+0x8]
   14001103d:	call   0x14000a294
   140011042:	nop
   140011043:	mov    rcx,rbx
   140011046:	call   0x14000fed4
   14001104b:	mov    rcx,rbx
   14001104e:	call   0x14000f34c
   140011053:	test   rax,rax
   140011056:	jne    0x14001105e
   140011058:	call   0x140006520
   14001105d:	int3   
   14001105e:	mov    r9,rsi
   140011061:	mov    r8d,edi
   140011064:	mov    rdx,QWORD PTR [rbp+0xc8]
   14001106b:	mov    rcx,QWORD PTR [rax+0x40]
   14001106f:	call   QWORD PTR [rip+0x2553b]        # 0x1400365b0
   140011075:	test   eax,eax
   140011077:	jne    0x14001108a
   140011079:	or     r8d,0xffffffff
   14001107d:	xor    edx,edx
   14001107f:	mov    ecx,0xf107
   140011084:	call   0x1400082c4
   140011089:	nop
   14001108a:	lea    rcx,[rsp+0x58]
   14001108f:	mov    rbx,QWORD PTR [rsp+0x40]
   140011094:	mov    rbp,QWORD PTR [rsp+0x48]
   140011099:	mov    rsi,QWORD PTR [rsp+0x50]
   14001109e:	add    rsp,0x30
   1400110a2:	pop    rdi
   1400110a3:	jmp    0x140010fb8
   1400110a8:	rex push rdi
   1400110aa:	sub    rsp,0x30
   1400110ae:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400110b7:	mov    QWORD PTR [rsp+0x40],rbx
   1400110bc:	mov    QWORD PTR [rsp+0x48],rbp
   1400110c1:	mov    QWORD PTR [rsp+0x50],rsi
   1400110c6:	mov    edi,r8d
   1400110c9:	mov    rsi,rdx
   1400110cc:	mov    rbx,rcx
   1400110cf:	call   0x140007df0
   1400110d4:	mov    rbp,QWORD PTR [rax+0x8]
   1400110d8:	call   0x140007df0
   1400110dd:	mov    rcx,QWORD PTR [rax+0x8]
   1400110e1:	call   0x14000a294
   1400110e6:	nop
   1400110e7:	mov    rcx,rbx
   1400110ea:	call   0x14000fed4
   1400110ef:	mov    rcx,rbx
   1400110f2:	call   0x14000f34c
   1400110f7:	test   rax,rax
   1400110fa:	jne    0x140011102
   1400110fc:	call   0x140006520
   140011101:	int3   
   140011102:	mov    r9,rsi
   140011105:	mov    r8d,edi
   140011108:	mov    rdx,QWORD PTR [rbp+0xc8]
   14001110f:	mov    rcx,QWORD PTR [rax+0x40]
   140011113:	call   0x14000f05c
   140011118:	test   rax,rax
   14001111b:	jne    0x14001112e
   14001111d:	or     r8d,0xffffffff
   140011121:	xor    edx,edx
   140011123:	mov    ecx,0xf107
   140011128:	call   0x1400082c4
   14001112d:	nop
   14001112e:	lea    rcx,[rsp+0x58]
   140011133:	mov    rbx,QWORD PTR [rsp+0x40]
   140011138:	mov    rbp,QWORD PTR [rsp+0x48]
   14001113d:	mov    rsi,QWORD PTR [rsp+0x50]
   140011142:	add    rsp,0x30
   140011146:	pop    rdi
   140011147:	jmp    0x140010fb8
   14001114c:	rex push rbx
   14001114e:	sub    rsp,0x30
   140011152:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001115a:	mov    ebx,edx
   14001115c:	je     0x140011195
   14001115e:	mov    rcx,QWORD PTR [rcx+0x40]
   140011162:	add    edx,0x2000
   140011168:	call   QWORD PTR [rip+0x255a2]        # 0x140036710
   14001116e:	lea    ecx,[rbx-0x132]
   140011174:	mov    r11,rax
   140011177:	cmp    ecx,0x6
   14001117a:	ja     0x140011181
   14001117c:	test   rax,rax
   14001117f:	je     0x1400111a4
   140011181:	mov    rax,QWORD PTR [rsp+0x60]
   140011186:	test   rax,rax
   140011189:	je     0x14001118e
   14001118b:	mov    QWORD PTR [rax],r11
   14001118e:	mov    eax,0x1
   140011193:	jmp    0x1400111a4
   140011195:	mov    rax,QWORD PTR [rsp+0x60]
   14001119a:	mov    QWORD PTR [rsp+0x20],rax
   14001119f:	call   0x140010d8c
   1400111a4:	add    rsp,0x30
   1400111a8:	pop    rbx
   1400111a9:	ret    
   1400111aa:	int3   
   1400111ab:	int3   
   1400111ac:	rex push rdi
   1400111ae:	sub    rsp,0x30
   1400111b2:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   1400111bb:	mov    QWORD PTR [rsp+0x40],rbx
   1400111c0:	mov    QWORD PTR [rsp+0x48],rbp
   1400111c5:	mov    QWORD PTR [rsp+0x58],rsi
   1400111ca:	mov    rsi,r9
   1400111cd:	mov    rbp,rdx
   1400111d0:	mov    rdi,rcx
   1400111d3:	mov    ebx,0x80004005
   1400111d8:	cmp    r8d,0xfffffffc
   1400111dc:	jne    0x140011283
   1400111e2:	mov    rax,QWORD PTR [rcx]
   1400111e5:	call   QWORD PTR [rax+0x120]
   1400111eb:	mov    ebx,eax
   1400111ed:	test   eax,eax
   1400111ef:	js     0x140011283
   1400111f5:	mov    r8,QWORD PTR [rdi+0x58]
   1400111f9:	test   r8,r8
   1400111fc:	jne    0x14001126f
   1400111fe:	lea    rcx,[rsp+0x20]
   140011203:	call   0x140010efc
   140011208:	mov    ebx,eax
   14001120a:	test   eax,eax
   14001120c:	js     0x140011283
   14001120e:	and    QWORD PTR [rsp+0x50],0x0
   140011214:	mov    rcx,QWORD PTR [rsp+0x20]
   140011219:	mov    rax,QWORD PTR [rcx]
   14001121c:	lea    r8,[rsp+0x50]
   140011221:	lea    rdx,[rip+0x269b0]        # 0x140037bd8
   140011228:	call   QWORD PTR [rax]
   14001122a:	test   eax,eax
   14001122c:	js     0x14001125b
   14001122e:	mov    rcx,QWORD PTR [rsp+0x50]
   140011233:	mov    QWORD PTR [rdi+0x58],rcx
   140011237:	mov    rax,QWORD PTR [rcx]
   14001123a:	lea    r8,[rdi+0x68]
   14001123e:	lea    rdx,[rdi+0x60]
   140011242:	call   QWORD PTR [rax+0x18]
   140011245:	mov    r8,QWORD PTR [rdi+0x58]
   140011249:	mov    rdx,rbp
   14001124c:	lea    rcx,[rip+0x26975]        # 0x140037bc8
   140011253:	call   0x140032774
   140011258:	mov    QWORD PTR [rsi],rax
   14001125b:	xor    ebx,ebx
   14001125d:	mov    rcx,QWORD PTR [rsp+0x50]
   140011262:	test   rcx,rcx
   140011265:	je     0x140011283
   140011267:	mov    rax,QWORD PTR [rcx]
   14001126a:	call   QWORD PTR [rax+0x10]
   14001126d:	jmp    0x140011283
   14001126f:	mov    rdx,rbp
   140011272:	lea    rcx,[rip+0x2694f]        # 0x140037bc8
   140011279:	call   0x140032774
   14001127e:	mov    QWORD PTR [rsi],rax
   140011281:	xor    ebx,ebx
   140011283:	mov    eax,ebx
   140011285:	mov    rbx,QWORD PTR [rsp+0x40]
   14001128a:	mov    rbp,QWORD PTR [rsp+0x48]
   14001128f:	mov    rsi,QWORD PTR [rsp+0x58]
   140011294:	add    rsp,0x30
   140011298:	pop    rdi
   140011299:	ret    
   14001129a:	int3   
   14001129b:	int3   
   14001129c:	lea    rax,[rip+0x27255]        # 0x1400384f8
   1400112a3:	ret    
   1400112a4:	mov    rax,rsp
   1400112a7:	push   rdi
   1400112a8:	sub    rsp,0x90
   1400112af:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400112b8:	mov    QWORD PTR [rax+0x8],rbx
   1400112bc:	mov    QWORD PTR [rax+0x10],rsi
   1400112c0:	mov    rdi,rcx
   1400112c3:	lea    r8,[rax-0x68]
   1400112c7:	mov    rdx,QWORD PTR [rcx+0x40]
   1400112cb:	mov    rcx,QWORD PTR [rcx+0x18]
   1400112cf:	call   0x14000bf2c
   1400112d4:	xor    ebx,ebx
   1400112d6:	cmp    eax,ebx
   1400112d8:	je     0x1400112df
   1400112da:	lea    eax,[rbx+0x1]
   1400112dd:	jmp    0x140011349
   1400112df:	mov    rcx,rdi
   1400112e2:	call   0x14000be90
   1400112e7:	cmp    ax,bx
   1400112ea:	jne    0x1400112f0
   1400112ec:	xor    eax,eax
   1400112ee:	jmp    0x140011349
   1400112f0:	call   0x140007df0
   1400112f5:	cmp    BYTE PTR [rax+0x28],bl
   1400112f8:	je     0x140011344
   1400112fa:	mov    ecx,0x1
   1400112ff:	call   0x140006d04
   140011304:	nop
   140011305:	call   0x140007df0
   14001130a:	mov    rdi,QWORD PTR [rdi+0x40]
   14001130e:	lea    rsi,[rax+0x58]
   140011312:	cmp    rdi,rbx
   140011315:	je     0x140011321
   140011317:	mov    rcx,rdi
   14001131a:	call   0x140015c00
   14001131f:	mov    ebx,eax
   140011321:	mov    r8d,ebx
   140011324:	mov    rdx,rdi
   140011327:	mov    rcx,rsi
   14001132a:	call   0x140008610
   14001132f:	mov    dl,0xa
   140011331:	mov    rcx,rsi
   140011334:	call   0x140008590
   140011339:	nop
   14001133a:	mov    ecx,0x1
   14001133f:	call   0x140006d98
   140011344:	mov    eax,0x1
   140011349:	lea    r11,[rsp+0x90]
   140011351:	mov    rbx,QWORD PTR [r11+0x10]
   140011355:	mov    rsi,QWORD PTR [r11+0x18]
   140011359:	mov    rsp,r11
   14001135c:	pop    rdi
   14001135d:	ret    
   14001135e:	int3   
   14001135f:	int3   
   140011360:	mov    QWORD PTR [rsp+0x8],rbx
   140011365:	push   rdi
   140011366:	sub    rsp,0x20
   14001136a:	mov    ebx,r8d
   14001136d:	mov    rdi,rcx
   140011370:	mov    QWORD PTR [rcx+0x40],rdx
   140011374:	call   0x140007df0
   140011379:	movzx  edx,bx
   14001137c:	mov    rcx,QWORD PTR [rax+0x18]
   140011380:	call   QWORD PTR [rip+0x25222]        # 0x1400365a8
   140011386:	mov    QWORD PTR [rdi+0x20],rax
   14001138a:	test   rax,rax
   14001138d:	jne    0x1400113a0
   14001138f:	mov    edx,0x7f00
   140011394:	xor    ecx,ecx
   140011396:	call   QWORD PTR [rip+0x2520c]        # 0x1400365a8
   14001139c:	mov    QWORD PTR [rdi+0x20],rax
   1400113a0:	mov    rcx,rdi
   1400113a3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400113a8:	add    rsp,0x20
   1400113ac:	pop    rdi
   1400113ad:	jmp    0x1400112a4
   1400113b2:	int3   
   1400113b3:	int3   
   1400113b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400113b9:	mov    QWORD PTR [rsp+0x18],rbp
   1400113be:	push   rsi
   1400113bf:	push   rdi
   1400113c0:	push   r12
   1400113c2:	sub    rsp,0x70
   1400113c6:	mov    edi,ecx
   1400113c8:	call   0x140007df0
   1400113cd:	mov    edx,DWORD PTR [rax+0x2c]
   1400113d0:	mov    rbp,rax
   1400113d3:	not    edx
   1400113d5:	and    edi,edx
   1400113d7:	jne    0x1400113e1
   1400113d9:	lea    eax,[rdi+0x1]
   1400113dc:	jmp    0x14001176c
   1400113e1:	xor    r12d,r12d
   1400113e4:	lea    rcx,[rsp+0x20]
   1400113e9:	xor    edx,edx
   1400113eb:	lea    r8d,[r12+0x48]
   1400113f0:	mov    ebx,r12d
   1400113f3:	call   0x140015b00
   1400113f8:	mov    r11,QWORD PTR [rip+0x252b1]        # 0x1400366b0
   1400113ff:	mov    QWORD PTR [rsp+0x28],r11
   140011404:	call   0x140007df0
   140011409:	lea    esi,[r12+0x1]
   14001140e:	mov    rcx,QWORD PTR [rax+0x10]
   140011412:	mov    rax,QWORD PTR [rip+0x39be7]        # 0x14004b000
   140011419:	mov    DWORD PTR [rsp+0x98],0x8
   140011424:	mov    QWORD PTR [rsp+0x48],rax
   140011429:	mov    QWORD PTR [rsp+0x38],rcx
   14001142e:	test   sil,dil
   140011431:	je     0x140011457
   140011433:	lea    rax,[rip+0x26056]        # 0x140037490
   14001143a:	lea    rcx,[rsp+0x20]
   14001143f:	mov    DWORD PTR [rsp+0x20],0xb
   140011447:	mov    QWORD PTR [rsp+0x60],rax
   14001144c:	call   0x1400112a4
   140011451:	cmp    eax,r12d
   140011454:	cmovne ebx,esi
   140011457:	test   dil,0x20
   14001145b:	je     0x140011483
   14001145d:	or     DWORD PTR [rsp+0x20],0x8b
   140011465:	lea    rax,[rip+0x26074]        # 0x1400374e0
   14001146c:	lea    rcx,[rsp+0x20]
   140011471:	mov    QWORD PTR [rsp+0x60],rax
   140011476:	call   0x1400112a4
   14001147b:	cmp    eax,r12d
   14001147e:	je     0x140011483
   140011480:	or     ebx,0x20
   140011483:	test   dil,0x2
   140011487:	je     0x1400114b5
   140011489:	lea    rax,[rip+0x26010]        # 0x1400374a0
   140011490:	lea    rcx,[rsp+0x20]
   140011495:	mov    DWORD PTR [rsp+0x20],r12d
   14001149a:	mov    QWORD PTR [rsp+0x60],rax
   14001149f:	mov    QWORD PTR [rsp+0x50],0x10
   1400114a8:	call   0x1400112a4
   1400114ad:	cmp    eax,r12d
   1400114b0:	je     0x1400114b5
   1400114b2:	or     ebx,0x2
   1400114b5:	test   dil,0x4
   1400114b9:	je     0x1400114e7
   1400114bb:	lea    rdx,[rip+0x25ff6]        # 0x1400374b8
   1400114c2:	lea    rcx,[rsp+0x20]
   1400114c7:	mov    r8d,0x7a01
   1400114cd:	mov    DWORD PTR [rsp+0x20],0x8
   1400114d5:	mov    QWORD PTR [rsp+0x50],r12
   1400114da:	call   0x140011360
   1400114df:	cmp    eax,r12d
   1400114e2:	je     0x1400114e7
   1400114e4:	or     ebx,0x4
   1400114e7:	test   dil,0x8
   1400114eb:	je     0x14001151d
   1400114ed:	lea    rdx,[rip+0x25fd4]        # 0x1400374c8
   1400114f4:	lea    rcx,[rsp+0x20]
   1400114f9:	mov    r8d,0x7a02
   1400114ff:	mov    DWORD PTR [rsp+0x20],0xb
   140011507:	mov    QWORD PTR [rsp+0x50],0x6
   140011510:	call   0x140011360
   140011515:	cmp    eax,r12d
   140011518:	je     0x14001151d
   14001151a:	or     ebx,0x8
   14001151d:	test   dil,0x10
   140011521:	je     0x140011548
   140011523:	lea    rcx,[rsp+0x98]
   14001152b:	mov    edx,0x3fc0
   140011530:	mov    DWORD PTR [rsp+0x9c],0xff
   14001153b:	call   0x14000e228
   140011540:	or     ebx,eax
   140011542:	and    edi,0xffffc03f
   140011548:	test   dil,0x40
   14001154c:	je     0x14001156d
   14001154e:	lea    rcx,[rsp+0x98]
   140011556:	mov    edx,0x40
   14001155b:	mov    DWORD PTR [rsp+0x9c],0x10
   140011566:	call   0x14000e228
   14001156b:	or     ebx,eax
   14001156d:	test   dil,dil
   140011570:	jns    0x140011591
   140011572:	lea    rcx,[rsp+0x98]
   14001157a:	mov    edx,0x80
   14001157f:	mov    DWORD PTR [rsp+0x9c],0x2
   14001158a:	call   0x14000e228
   14001158f:	or     ebx,eax
   140011591:	bt     edi,0x8
   140011595:	jae    0x1400115b6
   140011597:	lea    rcx,[rsp+0x98]
   14001159f:	mov    edx,0x100
   1400115a4:	mov    DWORD PTR [rsp+0x9c],0x8
   1400115af:	call   0x14000e228
   1400115b4:	or     ebx,eax
   1400115b6:	bt     edi,0x9
   1400115ba:	jae    0x1400115db
   1400115bc:	lea    rcx,[rsp+0x98]
   1400115c4:	mov    edx,0x200
   1400115c9:	mov    DWORD PTR [rsp+0x9c],0x20
   1400115d4:	call   0x14000e228
   1400115d9:	or     ebx,eax
   1400115db:	bt     edi,0xa
   1400115df:	jae    0x1400115fc
   1400115e1:	lea    rcx,[rsp+0x98]
   1400115e9:	mov    edx,0x400
   1400115ee:	mov    DWORD PTR [rsp+0x9c],esi
   1400115f5:	call   0x14000e228
   1400115fa:	or     ebx,eax
   1400115fc:	bt     edi,0xb
   140011600:	mov    esi,0x800
   140011605:	jae    0x140011623
   140011607:	lea    rcx,[rsp+0x98]
   14001160f:	mov    edx,esi
   140011611:	mov    DWORD PTR [rsp+0x9c],0x40
   14001161c:	call   0x14000e228
   140011621:	or     ebx,eax
   140011623:	bt     edi,0xc
   140011627:	jae    0x140011648
   140011629:	lea    rcx,[rsp+0x98]
   140011631:	mov    edx,0x1000
   140011636:	mov    DWORD PTR [rsp+0x9c],0x4
   140011641:	call   0x14000e228
   140011646:	or     ebx,eax
   140011648:	bt     edi,0xd
   14001164c:	jae    0x14001166d
   14001164e:	lea    rcx,[rsp+0x98]
   140011656:	mov    edx,0x2000
   14001165b:	mov    DWORD PTR [rsp+0x9c],0x80
   140011666:	call   0x14000e228
   14001166b:	or     ebx,eax
   14001166d:	bt     edi,0xe
   140011671:	jae    0x14001168e
   140011673:	lea    rcx,[rsp+0x98]
   14001167b:	mov    edx,0x4000
   140011680:	mov    DWORD PTR [rsp+0x9c],esi
   140011687:	call   0x14000e228
   14001168c:	or     ebx,eax
   14001168e:	bt     edi,0xf
   140011692:	mov    esi,0x8000
   140011697:	jae    0x1400116b5
   140011699:	lea    rcx,[rsp+0x98]
   1400116a1:	mov    edx,esi
   1400116a3:	mov    DWORD PTR [rsp+0x9c],0x400
   1400116ae:	call   0x14000e228
   1400116b3:	or     ebx,eax
   1400116b5:	bt     edi,0x10
   1400116b9:	jae    0x1400116da
   1400116bb:	lea    rcx,[rsp+0x98]
   1400116c3:	mov    edx,0x10000
   1400116c8:	mov    DWORD PTR [rsp+0x9c],0x200
   1400116d3:	call   0x14000e228
   1400116d8:	or     ebx,eax
   1400116da:	bt     edi,0x11
   1400116de:	jae    0x1400116ff
   1400116e0:	lea    rcx,[rsp+0x98]
   1400116e8:	mov    edx,0x20000
   1400116ed:	mov    DWORD PTR [rsp+0x9c],0x100
   1400116f8:	call   0x14000e228
   1400116fd:	or     ebx,eax
   1400116ff:	bt     edi,0x12
   140011703:	jae    0x140011720
   140011705:	lea    rcx,[rsp+0x98]
   14001170d:	mov    edx,0x40000
   140011712:	mov    DWORD PTR [rsp+0x9c],esi
   140011719:	call   0x14000e228
   14001171e:	or     ebx,eax
   140011720:	bt     edi,0x13
   140011724:	jae    0x140011745
   140011726:	lea    rcx,[rsp+0x98]
   14001172e:	mov    edx,0x80000
   140011733:	mov    DWORD PTR [rsp+0x9c],0x1000
   14001173e:	call   0x14000e228
   140011743:	or     ebx,eax
   140011745:	or     DWORD PTR [rbp+0x2c],ebx
   140011748:	mov    edx,DWORD PTR [rbp+0x2c]
   14001174b:	mov    eax,0x3fc0
   140011750:	mov    ecx,edx
   140011752:	and    ecx,eax
   140011754:	cmp    ecx,eax
   140011756:	jne    0x140011761
   140011758:	or     edx,0x10
   14001175b:	or     ebx,0x10
   14001175e:	mov    DWORD PTR [rbp+0x2c],edx
   140011761:	and    ebx,edi
   140011763:	cmp    ebx,edi
   140011765:	sete   r12b
   140011769:	mov    eax,r12d
   14001176c:	lea    r11,[rsp+0x70]
   140011771:	mov    rbx,QWORD PTR [r11+0x20]
   140011775:	mov    rbp,QWORD PTR [r11+0x30]
   140011779:	mov    rsp,r11
   14001177c:	pop    r12
   14001177e:	pop    rdi
   14001177f:	pop    rsi
   140011780:	ret    
   140011781:	int3   
   140011782:	int3   
   140011783:	int3   
   140011784:	rex push rbx
   140011786:	sub    rsp,0x20
   14001178a:	cmp    QWORD PTR [rdx+0x40],0x0
   14001178f:	mov    rbx,rdx
   140011792:	jne    0x1400117a9
   140011794:	mov    ecx,0x1
   140011799:	call   0x1400113b4
   14001179e:	lea    r11,[rip+0x25ceb]        # 0x140037490
   1400117a5:	mov    QWORD PTR [rbx+0x40],r11
   1400117a9:	mov    eax,0x1
   1400117ae:	add    rsp,0x20
   1400117b2:	pop    rbx
   1400117b3:	ret    
   1400117b4:	mov    rcx,QWORD PTR [rcx+0x98]
   1400117bb:	mov    rax,QWORD PTR [rcx]
   1400117be:	rex.W jmp QWORD PTR [rax+0xb0]
   1400117c5:	int3   
   1400117c6:	int3   
   1400117c7:	int3   
   1400117c8:	sub    rsp,0x28
   1400117cc:	cmp    QWORD PTR [rcx+0xa0],0x0
   1400117d4:	jne    0x1400117e7
   1400117d6:	mov    rcx,QWORD PTR [rcx+0x40]
   1400117da:	mov    edx,0xfffffff0
   1400117df:	call   QWORD PTR [rip+0x24f23]        # 0x140036708
   1400117e5:	jmp    0x1400117f7
   1400117e7:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400117ee:	mov    rax,QWORD PTR [rcx]
   1400117f1:	call   QWORD PTR [rax+0xf0]
   1400117f7:	add    rsp,0x28
   1400117fb:	ret    
   1400117fc:	sub    rsp,0x28
   140011800:	cmp    QWORD PTR [rcx+0xa0],0x0
   140011808:	jne    0x14001181b
   14001180a:	mov    rcx,QWORD PTR [rcx+0x40]
   14001180e:	mov    edx,0xffffffec
   140011813:	call   QWORD PTR [rip+0x24eef]        # 0x140036708
   140011819:	jmp    0x14001182b
   14001181b:	mov    rcx,QWORD PTR [rcx+0xa0]
   140011822:	mov    rax,QWORD PTR [rcx]
   140011825:	call   QWORD PTR [rax+0xf8]
   14001182b:	add    rsp,0x28
   14001182f:	ret    
   140011830:	sub    rsp,0x28
   140011834:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001183c:	jne    0x14001184a
   14001183e:	mov    rcx,QWORD PTR [rcx+0x40]
   140011842:	call   QWORD PTR [rip+0x24e08]        # 0x140036650
   140011848:	jmp    0x14001185a
   14001184a:	mov    rcx,QWORD PTR [rcx+0xa0]
   140011851:	mov    rax,QWORD PTR [rcx]
   140011854:	call   QWORD PTR [rax+0x148]
   14001185a:	add    rsp,0x28
   14001185e:	ret    
   14001185f:	int3   
   140011860:	sub    rsp,0x28
   140011864:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001186c:	jne    0x14001187a
   14001186e:	mov    rcx,QWORD PTR [rcx+0x40]
   140011872:	call   QWORD PTR [rip+0x24dd0]        # 0x140036648
   140011878:	jmp    0x14001188a
   14001187a:	mov    rcx,QWORD PTR [rcx+0xa0]
   140011881:	mov    rax,QWORD PTR [rcx]
   140011884:	call   QWORD PTR [rax+0x150]
   14001188a:	add    rsp,0x28
   14001188e:	ret    
   14001188f:	int3   
   140011890:	sub    rsp,0x48
   140011894:	mov    r11,rdx
   140011897:	xor    edx,edx
   140011899:	cmp    QWORD PTR [rcx+0xa0],rdx
   1400118a0:	jne    0x1400118d2
   1400118a2:	cmp    r11,rdx
   1400118a5:	je     0x1400118ab
   1400118a7:	mov    rdx,QWORD PTR [r11+0x40]
   1400118ab:	mov    eax,DWORD PTR [rsp+0x80]
   1400118b2:	mov    rcx,QWORD PTR [rcx+0x40]
   1400118b6:	mov    DWORD PTR [rsp+0x30],eax
   1400118ba:	mov    eax,DWORD PTR [rsp+0x78]
   1400118be:	mov    DWORD PTR [rsp+0x28],eax
   1400118c2:	mov    eax,DWORD PTR [rsp+0x70]
   1400118c6:	mov    DWORD PTR [rsp+0x20],eax
   1400118ca:	call   QWORD PTR [rip+0x24df8]        # 0x1400366c8
   1400118d0:	jmp    0x140011901
   1400118d2:	mov    eax,DWORD PTR [rsp+0x80]
   1400118d9:	mov    rcx,QWORD PTR [rcx+0xa0]
   1400118e0:	mov    rdx,r11
   1400118e3:	mov    r10,QWORD PTR [rcx]
   1400118e6:	mov    DWORD PTR [rsp+0x30],eax
   1400118ea:	mov    eax,DWORD PTR [rsp+0x78]
   1400118ee:	mov    DWORD PTR [rsp+0x28],eax
   1400118f2:	mov    eax,DWORD PTR [rsp+0x70]
   1400118f6:	mov    DWORD PTR [rsp+0x20],eax
   1400118fa:	call   QWORD PTR [r10+0x138]
   140011901:	add    rsp,0x48
   140011905:	ret    
   140011906:	int3   
   140011907:	int3   
   140011908:	test   rcx,rcx
   14001190b:	je     0x14001196c
   14001190d:	mov    QWORD PTR [rsp+0x8],rbx
   140011912:	push   rdi
   140011913:	sub    rsp,0x20
   140011917:	cmp    QWORD PTR [rcx+0xa0],0x0
   14001191f:	mov    rdi,rdx
   140011922:	mov    rbx,rcx
   140011925:	jne    0x140011962
   140011927:	mov    rcx,QWORD PTR [rcx+0x40]
   14001192b:	call   QWORD PTR [rip+0x24dcf]        # 0x140036700
   140011931:	lea    rcx,[rdi+0x30]
   140011935:	mov    rdx,rax
   140011938:	call   0x1400087ec
   14001193d:	test   rax,rax
   140011940:	je     0x140011962
   140011942:	cmp    QWORD PTR [rax+0x98],0x0
   14001194a:	je     0x140011962
   14001194c:	mov    rcx,QWORD PTR [rax+0x98]
   140011953:	xor    r8d,r8d
   140011956:	mov    rdx,rbx
   140011959:	mov    rax,QWORD PTR [rcx]
   14001195c:	call   QWORD PTR [rax+0x138]
   140011962:	mov    rbx,QWORD PTR [rsp+0x30]
   140011967:	add    rsp,0x20
   14001196b:	pop    rdi
   14001196c:	ret    
   14001196d:	int3   
   14001196e:	int3   
   14001196f:	int3   
   140011970:	mov    QWORD PTR [rsp+0x18],rbx
   140011975:	mov    QWORD PTR [rsp+0x20],rsi
   14001197a:	push   rdi
   14001197b:	sub    rsp,0x130
   140011982:	mov    rax,QWORD PTR [rip+0x37437]        # 0x140048dc0
   140011989:	xor    rax,rsp
   14001198c:	mov    QWORD PTR [rsp+0x120],rax
   140011994:	mov    rbx,rdx
   140011997:	mov    rdi,rcx
   14001199a:	test   rcx,rcx
   14001199d:	jne    0x1400119a5
   14001199f:	call   0x140006520
   1400119a4:	int3   
   1400119a5:	test   rdx,rdx
   1400119a8:	jne    0x1400119b0
   1400119aa:	call   0x140006520
   1400119af:	int3   
   1400119b0:	mov    rcx,rdx
   1400119b3:	call   QWORD PTR [rip+0x249ff]        # 0x1400363b8
   1400119b9:	lea    rcx,[rsp+0x21]
   1400119be:	xor    edx,edx
   1400119c0:	mov    r8d,0xff
   1400119c6:	mov    BYTE PTR [rsp+0x20],0x0
   1400119cb:	mov    esi,eax
   1400119cd:	call   0x140015b00
   1400119d2:	mov    r8d,0x100
   1400119d8:	cmp    esi,r8d
   1400119db:	ja     0x140011a01
   1400119dd:	lea    rdx,[rsp+0x20]
   1400119e2:	mov    rcx,rdi
   1400119e5:	call   QWORD PTR [rip+0x24d95]        # 0x140036780
   1400119eb:	cmp    eax,esi
   1400119ed:	jne    0x140011a01
   1400119ef:	lea    rcx,[rsp+0x20]
   1400119f4:	mov    rdx,rbx
   1400119f7:	call   QWORD PTR [rip+0x2497b]        # 0x140036378
   1400119fd:	test   eax,eax
   1400119ff:	je     0x140011a0d
   140011a01:	mov    rdx,rbx
   140011a04:	mov    rcx,rdi
   140011a07:	call   QWORD PTR [rip+0x24b8b]        # 0x140036598
   140011a0d:	mov    rcx,QWORD PTR [rsp+0x120]
   140011a15:	xor    rcx,rsp
   140011a18:	call   0x1400144f0
   140011a1d:	lea    r11,[rsp+0x130]
   140011a25:	mov    rbx,QWORD PTR [r11+0x20]
   140011a29:	mov    rsi,QWORD PTR [r11+0x28]
   140011a2d:	mov    rsp,r11
   140011a30:	pop    rdi
   140011a31:	ret    
   140011a32:	int3   
   140011a33:	int3   
   140011a34:	rex push rbx
   140011a36:	sub    rsp,0x20
   140011a3a:	mov    rbx,rcx
   140011a3d:	test   rcx,rcx
   140011a40:	jne    0x140011a48
   140011a42:	call   0x140006520
   140011a47:	int3   
   140011a48:	mov    rcx,QWORD PTR [rcx]
   140011a4b:	test   rcx,rcx
   140011a4e:	je     0x140011a5a
   140011a50:	call   QWORD PTR [rip+0x246e2]        # 0x140036138
   140011a56:	and    QWORD PTR [rbx],0x0
   140011a5a:	add    rsp,0x20
   140011a5e:	pop    rbx
   140011a5f:	ret    
   140011a60:	test   rcx,rcx
   140011a63:	je     0x140011aa0
   140011a65:	mov    QWORD PTR [rsp+0x8],rbx
   140011a6a:	push   rdi
   140011a6b:	sub    rsp,0x20
   140011a6f:	mov    rbx,rcx
   140011a72:	call   QWORD PTR [rip+0x248a8]        # 0x140036320
   140011a78:	movzx  edi,al
   140011a7b:	test   al,al
   140011a7d:	je     0x140011a8d
   140011a7f:	mov    rcx,rbx
   140011a82:	call   QWORD PTR [rip+0x24998]        # 0x140036420
   140011a88:	add    edi,0xffffffff
   140011a8b:	jne    0x140011a7f
   140011a8d:	mov    rcx,rbx
   140011a90:	call   QWORD PTR [rip+0x2495a]        # 0x1400363f0
   140011a96:	mov    rbx,QWORD PTR [rsp+0x30]
   140011a9b:	add    rsp,0x20
   140011a9f:	pop    rdi
   140011aa0:	ret    
   140011aa1:	int3   
   140011aa2:	int3   
   140011aa3:	int3   
   140011aa4:	mov    QWORD PTR [rsp+0x8],rbx
   140011aa9:	push   rdi
   140011aaa:	sub    rsp,0x20
   140011aae:	mov    rdi,rcx
   140011ab1:	call   0x140007330
   140011ab6:	mov    rbx,rax
   140011ab9:	test   rax,rax
   140011abc:	je     0x140011b01
   140011abe:	mov    rcx,QWORD PTR [rax+0x18]
   140011ac2:	test   rcx,rcx
   140011ac5:	je     0x140011b01
   140011ac7:	call   0x140016aa0
   140011acc:	lea    rcx,[rdi+0x4]
   140011ad0:	cmp    rax,rcx
   140011ad3:	mov    rcx,QWORD PTR [rbx+0x18]
   140011ad7:	ja     0x140011ae5
   140011ad9:	call   0x140014f10
   140011ade:	and    QWORD PTR [rbx+0x18],0x0
   140011ae3:	jmp    0x140011af1
   140011ae5:	sub    rax,rdi
   140011ae8:	lea    rdx,[rax-0x4]
   140011aec:	call   0x140016ce0
   140011af1:	mov    eax,0x1
   140011af6:	mov    rbx,QWORD PTR [rsp+0x30]
   140011afb:	add    rsp,0x20
   140011aff:	pop    rdi
   140011b00:	ret    
   140011b01:	call   0x1400064d8
   140011b06:	int3   
   140011b07:	int3   
   140011b08:	mov    QWORD PTR [rsp+0x10],rdx
   140011b0d:	push   rbx
   140011b0e:	sub    rsp,0x30
   140011b12:	lea    rdx,[rsp+0x48]
   140011b17:	mov    rbx,rcx
   140011b1a:	call   QWORD PTR [rip+0x24a70]        # 0x140036590
   140011b20:	mov    edx,0x5
   140011b25:	mov    rcx,rbx
   140011b28:	call   QWORD PTR [rip+0x24c12]        # 0x140036740
   140011b2e:	mov    rbx,rax
   140011b31:	test   rax,rax
   140011b34:	je     0x140011b88
   140011b36:	mov    rcx,rax
   140011b39:	call   QWORD PTR [rip+0x24b61]        # 0x1400366a0
   140011b3f:	cmp    eax,0xffff
   140011b44:	je     0x140011b7c
   140011b46:	mov    edx,0xfffffff0
   140011b4b:	mov    rcx,rbx
   140011b4e:	call   QWORD PTR [rip+0x24bb4]        # 0x140036708
   140011b54:	bt     eax,0x1c
   140011b58:	jae    0x140011b7c
   140011b5a:	lea    rdx,[rsp+0x20]
   140011b5f:	mov    rcx,rbx
   140011b62:	call   QWORD PTR [rip+0x24b80]        # 0x1400366e8
   140011b68:	mov    rdx,QWORD PTR [rsp+0x48]
   140011b6d:	lea    rcx,[rsp+0x20]
   140011b72:	call   QWORD PTR [rip+0x24b30]        # 0x1400366a8
   140011b78:	test   eax,eax
   140011b7a:	jne    0x140011b83
   140011b7c:	mov    edx,0x2
   140011b81:	jmp    0x140011b25
   140011b83:	mov    rax,rbx
   140011b86:	jmp    0x140011b8a
   140011b88:	xor    eax,eax
   140011b8a:	add    rsp,0x30
   140011b8e:	pop    rbx
   140011b8f:	ret    
   140011b90:	lea    rax,[rip+0x36fa1]        # 0x140048b38
   140011b97:	ret    
   140011b98:	mov    QWORD PTR [rsp+0x8],rbx
   140011b9d:	mov    QWORD PTR [rsp+0x10],rbp
   140011ba2:	mov    QWORD PTR [rsp+0x18],rsi
   140011ba7:	push   rdi
   140011ba8:	sub    rsp,0x20
   140011bac:	mov    rdi,rdx
   140011baf:	mov    rbx,rcx
   140011bb2:	test   rdx,rdx
   140011bb5:	jns    0x140011bbd
   140011bb7:	call   0x140006520
   140011bbc:	int3   
   140011bbd:	test   r8,r8
   140011bc0:	js     0x140011bc6
   140011bc2:	mov    QWORD PTR [rcx+0x20],r8
   140011bc6:	mov    rcx,QWORD PTR [rcx+0x8]
   140011bca:	test   rdx,rdx
   140011bcd:	jne    0x140011be8
   140011bcf:	call   0x1400062d4
   140011bd4:	and    QWORD PTR [rbx+0x8],0x0
   140011bd9:	and    QWORD PTR [rbx+0x18],0x0
   140011bde:	and    QWORD PTR [rbx+0x10],0x0
   140011be3:	jmp    0x140011d0e
   140011be8:	test   rcx,rcx
   140011beb:	jne    0x140011c1f
   140011bed:	mov    eax,0xffffffff
   140011bf2:	cmp    rdx,rax
   140011bf5:	jbe    0x140011bfd
   140011bf7:	call   0x140006520
   140011bfc:	int3   
   140011bfd:	mov    rcx,rdx
   140011c00:	call   0x140006290
   140011c05:	mov    r8,rdi
   140011c08:	xor    edx,edx
   140011c0a:	mov    rcx,rax
   140011c0d:	mov    QWORD PTR [rbx+0x8],rax
   140011c11:	call   0x140015b00
   140011c16:	mov    QWORD PTR [rbx+0x18],rdi
   140011c1a:	jmp    0x140011d0a
   140011c1f:	mov    r8,QWORD PTR [rbx+0x18]
   140011c23:	cmp    rdx,r8
   140011c26:	jg     0x140011c4a
   140011c28:	mov    rax,QWORD PTR [rbx+0x10]
   140011c2c:	cmp    rdx,rax
   140011c2f:	jle    0x140011d0a
   140011c35:	mov    r8,rdx
   140011c38:	add    rcx,rax
   140011c3b:	xor    edx,edx
   140011c3d:	sub    r8,rax
   140011c40:	call   0x140015b00
   140011c45:	jmp    0x140011d0a
   140011c4a:	mov    rax,QWORD PTR [rbx+0x20]
   140011c4e:	test   rax,rax
   140011c51:	jne    0x140011c84
   140011c53:	mov    rax,QWORD PTR [rbx+0x10]
   140011c57:	cqo    
   140011c59:	and    edx,0x7
   140011c5c:	add    rax,rdx
   140011c5f:	mov    edx,0x4
   140011c64:	sar    rax,0x3
   140011c68:	cmp    rax,rdx
   140011c6b:	mov    rcx,rax
   140011c6e:	jl     0x140011c7a
   140011c70:	mov    eax,0x400
   140011c75:	cmp    rcx,rax
   140011c78:	jg     0x140011c84
   140011c7a:	mov    rax,rcx
   140011c7d:	cmp    rcx,rdx
   140011c80:	cmovl  rax,rdx
   140011c84:	add    rax,r8
   140011c87:	mov    rsi,rdi
   140011c8a:	cmp    rdi,rax
   140011c8d:	cmovl  rsi,rax
   140011c91:	cmp    rsi,r8
   140011c94:	jge    0x140011c9c
   140011c96:	call   0x140006520
   140011c9b:	int3   
   140011c9c:	mov    rcx,rsi
   140011c9f:	call   0x140006290
   140011ca4:	mov    r9,QWORD PTR [rbx+0x10]
   140011ca8:	mov    r8,QWORD PTR [rbx+0x8]
   140011cac:	mov    rcx,rax
   140011caf:	mov    rdx,rsi
   140011cb2:	mov    rbp,rax
   140011cb5:	call   0x140014510
   140011cba:	test   eax,eax
   140011cbc:	je     0x140011ce4
   140011cbe:	cmp    eax,0xc
   140011cc1:	je     0x140011cde
   140011cc3:	cmp    eax,0x16
   140011cc6:	je     0x140011cd8
   140011cc8:	cmp    eax,0x22
   140011ccb:	je     0x140011cd8
   140011ccd:	cmp    eax,0x50
   140011cd0:	je     0x140011ce4
   140011cd2:	call   0x140006520
   140011cd7:	int3   
   140011cd8:	call   0x140006520
   140011cdd:	int3   
   140011cde:	call   0x1400064d8
   140011ce3:	int3   
   140011ce4:	mov    rax,QWORD PTR [rbx+0x10]
   140011ce8:	mov    r8,rdi
   140011ceb:	xor    edx,edx
   140011ced:	lea    rcx,[rax+rbp*1]
   140011cf1:	sub    r8,rax
   140011cf4:	call   0x140015b00
   140011cf9:	mov    rcx,QWORD PTR [rbx+0x8]
   140011cfd:	call   0x1400062d4
   140011d02:	mov    QWORD PTR [rbx+0x8],rbp
   140011d06:	mov    QWORD PTR [rbx+0x18],rsi
   140011d0a:	mov    QWORD PTR [rbx+0x10],rdi
   140011d0e:	mov    rbx,QWORD PTR [rsp+0x30]
   140011d13:	mov    rbp,QWORD PTR [rsp+0x38]
   140011d18:	mov    rsi,QWORD PTR [rsp+0x40]
   140011d1d:	add    rsp,0x20
   140011d21:	pop    rdi
   140011d22:	ret    
   140011d23:	int3   
   140011d24:	mov    QWORD PTR [rsp+0x8],rbx
   140011d29:	mov    QWORD PTR [rsp+0x10],rbp
   140011d2e:	mov    QWORD PTR [rsp+0x18],rsi
   140011d33:	push   r12
   140011d35:	sub    rsp,0x20
   140011d39:	mov    eax,DWORD PTR [rdx+0x20]
   140011d3c:	mov    rsi,rdx
   140011d3f:	mov    rbx,rcx
   140011d42:	not    eax
   140011d44:	test   al,0x1
   140011d46:	je     0x140011d9b
   140011d48:	mov    rdx,QWORD PTR [rcx+0x10]
   140011d4c:	mov    rcx,rsi
   140011d4f:	call   0x14000991c
   140011d54:	mov    rbp,QWORD PTR [rbx+0x10]
   140011d58:	mov    r12,QWORD PTR [rbx+0x8]
   140011d5c:	test   rbp,rbp
   140011d5f:	je     0x140011d85
   140011d61:	mov    ebx,0x7fffffff
   140011d66:	mov    rdx,r12
   140011d69:	mov    rcx,rsi
   140011d6c:	cmp    rbp,rbx
   140011d6f:	cmovb  ebx,ebp
   140011d72:	mov    r8d,ebx
   140011d75:	call   0x1400097a0
   140011d7a:	mov    r11d,ebx
   140011d7d:	add    r12,r11
   140011d80:	sub    rbp,r11
   140011d83:	jne    0x140011d61
   140011d85:	mov    rbx,QWORD PTR [rsp+0x30]
   140011d8a:	mov    rbp,QWORD PTR [rsp+0x38]
   140011d8f:	mov    rsi,QWORD PTR [rsp+0x40]
   140011d94:	add    rsp,0x20
   140011d98:	pop    r12
   140011d9a:	ret    
   140011d9b:	mov    rcx,rdx
   140011d9e:	call   0x140009a68
   140011da3:	or     r8,0xffffffffffffffff
   140011da7:	mov    rcx,rbx
   140011daa:	mov    rdx,rax
   140011dad:	call   0x140011b98
   140011db2:	mov    rbp,QWORD PTR [rbx+0x10]
   140011db6:	mov    rbx,QWORD PTR [rbx+0x8]
   140011dba:	test   rbp,rbp
   140011dbd:	je     0x140011d85
   140011dbf:	mov    r12d,0x7fffffff
   140011dc5:	mov    rdx,rbx
   140011dc8:	mov    rcx,rsi
   140011dcb:	cmp    rbp,r12
   140011dce:	cmovb  r12d,ebp
   140011dd2:	mov    r8d,r12d
   140011dd5:	call   0x140009238
   140011dda:	cmp    eax,r12d
   140011ddd:	jne    0x140011dec
   140011ddf:	mov    eax,r12d
   140011de2:	add    rbx,rax
   140011de5:	sub    rbp,rax
   140011de8:	jne    0x140011dbf
   140011dea:	jmp    0x140011d85
   140011dec:	xor    edx,edx
   140011dee:	lea    ecx,[rdx+0x3]
   140011df1:	call   0x140009e7c
   140011df6:	int3   
   140011df7:	int3   
   140011df8:	sub    rsp,0x28
   140011dfc:	mov    ecx,0x28
   140011e01:	call   0x140006290
   140011e06:	xor    edx,edx
   140011e08:	cmp    rax,rdx
   140011e0b:	je     0x140011e29
   140011e0d:	lea    rcx,[rip+0x270a4]        # 0x140038eb8
   140011e14:	mov    QWORD PTR [rax+0x8],rdx
   140011e18:	mov    QWORD PTR [rax+0x20],rdx
   140011e1c:	mov    QWORD PTR [rax+0x18],rdx
   140011e20:	mov    QWORD PTR [rax+0x10],rdx
   140011e24:	mov    QWORD PTR [rax],rcx
   140011e27:	jmp    0x140011e2c
   140011e29:	mov    rax,rdx
   140011e2c:	add    rsp,0x28
   140011e30:	ret    
   140011e31:	int3   
   140011e32:	int3   
   140011e33:	int3   
   140011e34:	mov    QWORD PTR [rsp+0x8],rbx
   140011e39:	push   rdi
   140011e3a:	sub    rsp,0x20
   140011e3e:	lea    rax,[rip+0x27073]        # 0x140038eb8
   140011e45:	mov    rdi,rcx
   140011e48:	mov    ebx,edx
   140011e4a:	mov    QWORD PTR [rcx],rax
   140011e4d:	mov    rcx,QWORD PTR [rcx+0x8]
   140011e51:	call   0x1400062d4
   140011e56:	test   bl,0x1
   140011e59:	je     0x140011e63
   140011e5b:	mov    rcx,rdi
   140011e5e:	call   0x1400062d4
   140011e63:	mov    rax,rdi
   140011e66:	mov    rbx,QWORD PTR [rsp+0x30]
   140011e6b:	add    rsp,0x20
   140011e6f:	pop    rdi
   140011e70:	ret    
   140011e71:	int3   
   140011e72:	int3   
   140011e73:	int3   
   140011e74:	mov    QWORD PTR [rsp+0x8],rbx
   140011e79:	mov    QWORD PTR [rsp+0x10],rbp
   140011e7e:	mov    QWORD PTR [rsp+0x18],rsi
   140011e83:	push   rdi
   140011e84:	push   r12
   140011e86:	push   r13
   140011e88:	push   r14
   140011e8a:	push   r15
   140011e8c:	sub    rsp,0x20
   140011e90:	xor    r13d,r13d
   140011e93:	mov    r15d,r9d
   140011e96:	mov    r14,r8
   140011e99:	mov    rsi,rdx
   140011e9c:	mov    rbp,rcx
   140011e9f:	cmp    rdx,r13
   140011ea2:	jne    0x140011eaa
   140011ea4:	call   0x140006520
   140011ea9:	int3   
   140011eaa:	cmp    r8,r13
   140011ead:	jne    0x140011eb5
   140011eaf:	call   0x140006520
   140011eb4:	int3   
   140011eb5:	mov    edi,r13d
   140011eb8:	mov    rbx,rdx
   140011ebb:	cmp    BYTE PTR [rdx],r13b
   140011ebe:	je     0x140011f25
   140011ec0:	cmp    BYTE PTR [rbx],0x25
   140011ec3:	jne    0x140011f09
   140011ec5:	mov    al,BYTE PTR [rbx+0x1]
   140011ec8:	cmp    al,0x31
   140011eca:	jl     0x140011ed0
   140011ecc:	cmp    al,0x39
   140011ece:	jle    0x140011ee4
   140011ed0:	cmp    al,0x41
   140011ed2:	jl     0x140011f09
   140011ed4:	cmp    al,0x5a
   140011ed6:	jg     0x140011f09
   140011ed8:	cmp    al,0x39
   140011eda:	jle    0x140011ee4
   140011edc:	movsx  ecx,al
   140011edf:	sub    ecx,0x38
   140011ee2:	jmp    0x140011eea
   140011ee4:	movsx  ecx,al
   140011ee7:	sub    ecx,0x31
   140011eea:	add    rbx,0x2
   140011eee:	cmp    ecx,r15d
   140011ef1:	jge    0x140011f1e
   140011ef3:	movsxd rax,ecx
   140011ef6:	mov    rcx,QWORD PTR [r14+rax*8]
   140011efa:	cmp    rcx,r13
   140011efd:	je     0x140011f20
   140011eff:	call   QWORD PTR [rip+0x244b3]        # 0x1400363b8
   140011f05:	add    edi,eax
   140011f07:	jmp    0x140011f20
   140011f09:	movsx  ecx,BYTE PTR [rbx]
   140011f0c:	call   0x140016e88
   140011f11:	cmp    eax,r13d
   140011f14:	je     0x140011f1b
   140011f16:	inc    edi
   140011f18:	inc    rbx
   140011f1b:	inc    rbx
   140011f1e:	inc    edi
   140011f20:	cmp    BYTE PTR [rbx],r13b
   140011f23:	jne    0x140011ec0
   140011f25:	mov    rax,QWORD PTR [rbp+0x0]
   140011f29:	mov    ecx,0x1
   140011f2e:	sub    ecx,DWORD PTR [rax-0x8]
   140011f31:	mov    eax,DWORD PTR [rax-0xc]
   140011f34:	sub    eax,edi
   140011f36:	or     ecx,eax
   140011f38:	jge    0x140011f44
   140011f3a:	mov    edx,edi
   140011f3c:	mov    rcx,rbp
   140011f3f:	call   0x14000722c
   140011f44:	mov    rbx,QWORD PTR [rbp+0x0]
   140011f48:	cmp    BYTE PTR [rsi],r13b
   140011f4b:	je     0x140012019
   140011f51:	cmp    BYTE PTR [rsi],0x25
   140011f54:	jne    0x140011fdd
   140011f5a:	mov    al,BYTE PTR [rsi+0x1]
   140011f5d:	cmp    al,0x31
   140011f5f:	jl     0x140011f65
   140011f61:	cmp    al,0x39
   140011f63:	jle    0x140011f79
   140011f65:	cmp    al,0x41
   140011f67:	jl     0x140011fdd
   140011f69:	cmp    al,0x5a
   140011f6b:	jg     0x140011fdd
   140011f6d:	cmp    al,0x39
   140011f6f:	jle    0x140011f79
   140011f71:	movsx  ecx,al
   140011f74:	sub    ecx,0x38
   140011f77:	jmp    0x140011f7f
   140011f79:	movsx  ecx,al
   140011f7c:	sub    ecx,0x31
   140011f7f:	add    rsi,0x2
   140011f83:	cmp    ecx,r15d
   140011f86:	jl     0x140011f8d
   140011f88:	mov    BYTE PTR [rbx],0x3f
   140011f8b:	jmp    0x140011ffd
   140011f8d:	movsxd r12,ecx
   140011f90:	mov    rcx,QWORD PTR [r14+r12*8]
   140011f94:	cmp    rcx,r13
   140011f97:	je     0x140011f48
   140011f99:	call   QWORD PTR [rip+0x24419]        # 0x1400363b8
   140011f9f:	mov    r8,QWORD PTR [r14+r12*8]
   140011fa3:	lea    ecx,[rdi+0x1]
   140011fa6:	movsxd rdx,ecx
   140011fa9:	mov    rcx,rbx
   140011fac:	movsxd r13,eax
   140011faf:	call   0x1400164d8
   140011fb4:	test   eax,eax
   140011fb6:	je     0x140011fcc
   140011fb8:	cmp    eax,0xc
   140011fbb:	je     0x140012013
   140011fbd:	cmp    eax,0x16
   140011fc0:	je     0x14001200d
   140011fc2:	cmp    eax,0x22
   140011fc5:	je     0x14001200d
   140011fc7:	cmp    eax,0x50
   140011fca:	jne    0x140012007
   140011fcc:	sub    edi,r13d
   140011fcf:	mov    rax,r13
   140011fd2:	add    rbx,r13
   140011fd5:	xor    r13d,r13d
   140011fd8:	jmp    0x140011f48
   140011fdd:	movsx  ecx,BYTE PTR [rsi]
   140011fe0:	call   0x140016e88
   140011fe5:	cmp    eax,r13d
   140011fe8:	je     0x140011ff6
   140011fea:	mov    al,BYTE PTR [rsi]
   140011fec:	inc    rsi
   140011fef:	mov    BYTE PTR [rbx],al
   140011ff1:	inc    rbx
   140011ff4:	dec    edi
   140011ff6:	mov    al,BYTE PTR [rsi]
   140011ff8:	inc    rsi
   140011ffb:	mov    BYTE PTR [rbx],al
   140011ffd:	inc    rbx
   140012000:	dec    edi
   140012002:	jmp    0x140011f48
   140012007:	call   0x140006520
   14001200c:	int3   
   14001200d:	call   0x140006520
   140012012:	int3   
   140012013:	call   0x1400064d8
   140012018:	int3   
   140012019:	mov    rcx,QWORD PTR [rbp+0x0]
   14001201d:	sub    ebx,ecx
   14001201f:	cmp    ebx,0xffffffff
   140012022:	jne    0x140012039
   140012024:	cmp    rcx,r13
   140012027:	jne    0x14001202e
   140012029:	mov    ebx,r13d
   14001202c:	jmp    0x14001203e
   14001202e:	movsxd rdx,DWORD PTR [rcx-0xc]
   140012032:	call   0x140015e4c
   140012037:	mov    ebx,eax
   140012039:	cmp    ebx,r13d
   14001203c:	jl     0x140012072
   14001203e:	mov    rax,QWORD PTR [rbp+0x0]
   140012042:	cmp    ebx,DWORD PTR [rax-0xc]
   140012045:	jg     0x140012072
   140012047:	mov    rsi,QWORD PTR [rsp+0x60]
   14001204c:	mov    DWORD PTR [rax-0x10],ebx
   14001204f:	mov    rax,QWORD PTR [rbp+0x0]
   140012053:	mov    rbp,QWORD PTR [rsp+0x58]
   140012058:	movsxd rcx,ebx
   14001205b:	mov    rbx,QWORD PTR [rsp+0x50]
   140012060:	mov    BYTE PTR [rcx+rax*1],r13b
   140012064:	add    rsp,0x20
   140012068:	pop    r15
   14001206a:	pop    r14
   14001206c:	pop    r13
   14001206e:	pop    r12
   140012070:	pop    rdi
   140012071:	ret    
   140012072:	mov    ecx,0x80070057
   140012077:	call   0x14000677c
   14001207c:	int3   
   14001207d:	int3   
   14001207e:	int3   
   14001207f:	int3   
   140012080:	mov    rax,rsp
   140012083:	push   r12
   140012085:	sub    rsp,0x30
   140012089:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140012092:	mov    QWORD PTR [rax+0x8],rbx
   140012096:	mov    QWORD PTR [rax+0x10],rbp
   14001209a:	mov    QWORD PTR [rax+0x18],rsi
   14001209e:	mov    QWORD PTR [rax+0x20],rdi
   1400120a2:	mov    esi,r9d
   1400120a5:	mov    rbp,r8
   1400120a8:	mov    edi,edx
   1400120aa:	mov    r12,rcx
   1400120ad:	call   0x140008ae0
   1400120b2:	mov    rcx,rax
   1400120b5:	xor    r10d,r10d
   1400120b8:	test   rax,rax
   1400120bb:	setne  r10b
   1400120bf:	test   r10d,r10d
   1400120c2:	jne    0x1400120cf
   1400120c4:	mov    ecx,0x80004005
   1400120c9:	call   0x14000677c
   1400120ce:	int3   
   1400120cf:	mov    rax,QWORD PTR [rax]
   1400120d2:	call   QWORD PTR [rax+0x18]
   1400120d5:	lea    rbx,[rax+0x18]
   1400120d9:	mov    QWORD PTR [rsp+0x20],rbx
   1400120de:	mov    ecx,edi
   1400120e0:	call   0x140008440
   1400120e5:	test   rax,rax
   1400120e8:	je     0x140012139
   1400120ea:	mov    r8d,edi
   1400120ed:	mov    rdx,rax
   1400120f0:	lea    rcx,[rsp+0x20]
   1400120f5:	call   0x140007444
   1400120fa:	test   eax,eax
   1400120fc:	jne    0x140012105
   1400120fe:	mov    rbx,QWORD PTR [rsp+0x20]
   140012103:	jmp    0x140012139
   140012105:	mov    r9d,esi
   140012108:	mov    r8,rbp
   14001210b:	mov    rbx,QWORD PTR [rsp+0x20]
   140012110:	mov    rdx,rbx
   140012113:	mov    rcx,r12
   140012116:	call   0x140011e74
   14001211b:	nop
   14001211c:	lea    rdx,[rbx-0x18]
   140012120:	or     eax,0xffffffff
   140012123:	lock xadd DWORD PTR [rdx+0x10],eax
   140012128:	dec    eax
   14001212a:	test   eax,eax
   14001212c:	jg     0x140012154
   14001212e:	mov    rcx,QWORD PTR [rdx]
   140012131:	mov    rax,QWORD PTR [rcx]
   140012134:	call   QWORD PTR [rax+0x8]
   140012137:	jmp    0x140012154
   140012139:	lea    rdx,[rbx-0x18]
   14001213d:	or     eax,0xffffffff
   140012140:	lock xadd DWORD PTR [rdx+0x10],eax
   140012145:	dec    eax
   140012147:	test   eax,eax
   140012149:	jg     0x140012154
   14001214b:	mov    rcx,QWORD PTR [rdx]
   14001214e:	mov    rax,QWORD PTR [rcx]
   140012151:	call   QWORD PTR [rax+0x8]
   140012154:	mov    rbx,QWORD PTR [rsp+0x40]
   140012159:	mov    rbp,QWORD PTR [rsp+0x48]
   14001215e:	mov    rsi,QWORD PTR [rsp+0x50]
   140012163:	mov    rdi,QWORD PTR [rsp+0x58]
   140012168:	add    rsp,0x30
   14001216c:	pop    r12
   14001216e:	ret    
   14001216f:	int3   
   140012170:	mov    QWORD PTR [rsp+0x18],r8
   140012175:	sub    rsp,0x28
   140012179:	lea    r8,[rsp+0x40]
   14001217e:	mov    r9d,0x1
   140012184:	call   0x140012080
   140012189:	add    rsp,0x28
   14001218d:	ret    
   14001218e:	int3   
   14001218f:	int3   
   140012190:	mov    eax,0x8
   140012195:	cmp    edx,eax
   140012197:	cmovb  edx,eax
   14001219a:	mov    eax,0x40
   14001219f:	cmp    r8d,0x1
   1400121a3:	cmovbe r8d,eax
   1400121a7:	and    QWORD PTR [rcx+0x10],0x0
   1400121ac:	and    QWORD PTR [rcx+0x8],0x0
   1400121b1:	mov    DWORD PTR [rcx+0x4],r8d
   1400121b5:	mov    DWORD PTR [rcx],edx
   1400121b7:	mov    rax,rcx
   1400121ba:	ret    
   1400121bb:	int3   
   1400121bc:	rex push rbx
   1400121be:	sub    rsp,0x20
   1400121c2:	mov    rbx,rcx
   1400121c5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400121c9:	call   0x14000920c
   1400121ce:	and    QWORD PTR [rbx+0x8],0x0
   1400121d3:	and    QWORD PTR [rbx+0x10],0x0
   1400121d8:	add    rsp,0x20
   1400121dc:	pop    rbx
   1400121dd:	ret    
   1400121de:	int3   
   1400121df:	int3   
   1400121e0:	jmp    0x1400121bc
   1400121e5:	int3   
   1400121e6:	int3   
   1400121e7:	int3   
   1400121e8:	rex push rbx
   1400121ea:	sub    rsp,0x20
   1400121ee:	cmp    QWORD PTR [rcx+0x10],0x0
   1400121f3:	mov    rbx,rcx
   1400121f6:	jne    0x140012230
   1400121f8:	mov    r8d,DWORD PTR [rcx]
   1400121fb:	mov    edx,DWORD PTR [rcx+0x4]
   1400121fe:	add    rcx,0x8
   140012202:	call   0x1400091d4
   140012207:	mov    edx,DWORD PTR [rbx+0x4]
   14001220a:	lea    ecx,[rdx-0x1]
   14001220d:	lea    r11,[rax+0x8]
   140012211:	imul   ecx,DWORD PTR [rbx]
   140012214:	add    r11,rcx
   140012217:	dec    edx
   140012219:	js     0x140012230
   14001221b:	mov    rcx,QWORD PTR [rbx+0x10]
   14001221f:	mov    QWORD PTR [r11],rcx
   140012222:	mov    eax,DWORD PTR [rbx]
   140012224:	mov    QWORD PTR [rbx+0x10],r11
   140012228:	sub    r11,rax
   14001222b:	sub    edx,0x1
   14001222e:	jns    0x14001221b
   140012230:	mov    rax,QWORD PTR [rbx+0x10]
   140012234:	mov    rcx,QWORD PTR [rax]
   140012237:	mov    QWORD PTR [rbx+0x10],rcx
   14001223b:	add    rsp,0x20
   14001223f:	pop    rbx
   140012240:	ret    
   140012241:	int3   
   140012242:	int3   
   140012243:	int3   
   140012244:	lea    rax,[rip+0x26cb5]        # 0x140038f00
   14001224b:	ret    
   14001224c:	sub    rsp,0x28
   140012250:	mov    ecx,0x10
   140012255:	call   0x140006290
   14001225a:	test   rax,rax
   14001225d:	je     0x140012270
   14001225f:	and    QWORD PTR [rax+0x8],0x0
   140012264:	lea    rcx,[rip+0x26ced]        # 0x140038f58
   14001226b:	mov    QWORD PTR [rax],rcx
   14001226e:	jmp    0x140012272
   140012270:	xor    eax,eax
   140012272:	add    rsp,0x28
   140012276:	ret    
   140012277:	int3   
   140012278:	test   rcx,rcx
   14001227b:	je     0x14001228c
   14001227d:	and    QWORD PTR [rcx+0x8],0x0
   140012282:	lea    rax,[rip+0x26ccf]        # 0x140038f58
   140012289:	mov    QWORD PTR [rcx],rax
   14001228c:	ret    
   14001228d:	int3   
   14001228e:	int3   
   14001228f:	int3   
   140012290:	rex push rdi
   140012292:	sub    rsp,0x40
   140012296:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14001229f:	mov    QWORD PTR [rsp+0x50],rbx
   1400122a4:	mov    QWORD PTR [rsp+0x60],rsi
   1400122a9:	mov    esi,ecx
   1400122ab:	call   0x140007e40
   1400122b0:	mov    rdi,rax
   1400122b3:	xor    ebx,ebx
   1400122b5:	cmp    QWORD PTR [rax+0x30],rbx
   1400122b9:	jne    0x14001231f
   1400122bb:	cmp    esi,ebx
   1400122bd:	je     0x14001231f
   1400122bf:	lea    rcx,[rip+0xfffffffffffff7de]        # 0x140011aa4
   1400122c6:	call   0x140006280
   1400122cb:	mov    rsi,rax
   1400122ce:	mov    ecx,0xb8
   1400122d3:	call   0x140006290
   1400122d8:	mov    QWORD PTR [rsp+0x58],rax
   1400122dd:	cmp    rax,rbx
   1400122e0:	je     0x140012313
   1400122e2:	mov    DWORD PTR [rsp+0x28],0x1
   1400122ea:	mov    QWORD PTR [rsp+0x20],0x8
   1400122f3:	lea    r9,[rip+0x352]        # 0x14001264c
   1400122fa:	lea    r8,[rip+0xffffffffffffff77]        # 0x140012278
   140012301:	lea    rdx,[rip+0x26bf8]        # 0x140038f00
   140012308:	mov    rcx,rax
   14001230b:	call   0x14000a688
   140012310:	mov    rbx,rax
   140012313:	mov    QWORD PTR [rdi+0x30],rbx
   140012317:	mov    rcx,rsi
   14001231a:	call   0x140006280
   14001231f:	mov    rax,QWORD PTR [rdi+0x30]
   140012323:	mov    rbx,QWORD PTR [rsp+0x50]
   140012328:	mov    rsi,QWORD PTR [rsp+0x60]
   14001232d:	add    rsp,0x40
   140012331:	pop    rdi
   140012332:	ret    
   140012333:	int3   
   140012334:	rex push rbx
   140012336:	sub    rsp,0x20
   14001233a:	mov    rbx,rcx
   14001233d:	mov    ecx,0x1
   140012342:	call   0x140012290
   140012347:	mov    rdx,rbx
   14001234a:	mov    rcx,rax
   14001234d:	add    rsp,0x20
   140012351:	pop    rbx
   140012352:	jmp    0x14000a760
   140012357:	int3   
   140012358:	rex push rbx
   14001235a:	sub    rsp,0x20
   14001235e:	mov    rbx,rcx
   140012361:	call   0x140007e40
   140012366:	mov    rcx,QWORD PTR [rax+0x30]
   14001236a:	xor    eax,eax
   14001236c:	cmp    rcx,rax
   14001236f:	je     0x14001237d
   140012371:	add    rcx,0x30
   140012375:	mov    rdx,rbx
   140012378:	call   0x1400087ec
   14001237d:	add    rsp,0x20
   140012381:	pop    rbx
   140012382:	ret    
   140012383:	int3   
   140012384:	mov    QWORD PTR [rsp+0x8],rbx
   140012389:	push   rdi
   14001238a:	sub    rsp,0x20
   14001238e:	mov    rdi,QWORD PTR [rcx+0x8]
   140012392:	mov    rbx,rcx
   140012395:	test   rdi,rdi
   140012398:	je     0x1400123b5
   14001239a:	call   0x140007e40
   14001239f:	mov    rcx,QWORD PTR [rax+0x30]
   1400123a3:	test   rcx,rcx
   1400123a6:	je     0x1400123b5
   1400123a8:	mov    rdx,QWORD PTR [rbx+0x8]
   1400123ac:	add    rcx,0x30
   1400123b0:	call   0x140008860
   1400123b5:	and    QWORD PTR [rbx+0x8],0x0
   1400123ba:	mov    rbx,QWORD PTR [rsp+0x30]
   1400123bf:	mov    rax,rdi
   1400123c2:	add    rsp,0x20
   1400123c6:	pop    rdi
   1400123c7:	ret    
   1400123c8:	sub    rsp,0x28
   1400123cc:	cmp    QWORD PTR [rcx+0x8],0x0
   1400123d1:	jne    0x1400123d7
   1400123d3:	xor    eax,eax
   1400123d5:	jmp    0x1400123e5
   1400123d7:	call   0x140012384
   1400123dc:	mov    rcx,rax
   1400123df:	call   QWORD PTR [rip+0x241a3]        # 0x140036588
   1400123e5:	add    rsp,0x28
   1400123e9:	ret    
   1400123ea:	int3   
   1400123eb:	int3   
   1400123ec:	mov    QWORD PTR [rsp+0x8],rbx
   1400123f1:	push   rdi
   1400123f2:	sub    rsp,0x20
   1400123f6:	lea    rax,[rip+0x26b5b]        # 0x140038f58
   1400123fd:	mov    ebx,edx
   1400123ff:	mov    rdi,rcx
   140012402:	mov    QWORD PTR [rcx],rax
   140012405:	call   0x1400123c8
   14001240a:	test   bl,0x1
   14001240d:	je     0x140012417
   14001240f:	mov    rcx,rdi
   140012412:	call   0x1400062d4
   140012417:	mov    rax,rdi
   14001241a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001241f:	add    rsp,0x20
   140012423:	pop    rdi
   140012424:	ret    
   140012425:	int3   
   140012426:	int3   
   140012427:	int3   
   140012428:	sub    rsp,0x268
   14001242f:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140012438:	mov    rax,QWORD PTR [rip+0x36981]        # 0x140048dc0
   14001243f:	xor    rax,rsp
   140012442:	mov    QWORD PTR [rsp+0x250],rax
   14001244a:	lea    rax,[rip+0x26ae7]        # 0x140038f38
   140012451:	mov    QWORD PTR [rcx],rax
   140012454:	call   0x140012dac
   140012459:	nop
   14001245a:	mov    rcx,QWORD PTR [rsp+0x250]
   140012462:	xor    rcx,rsp
   140012465:	call   0x1400144f0
   14001246a:	add    rsp,0x268
   140012471:	ret    
   140012472:	int3   
   140012473:	int3   
   140012474:	mov    QWORD PTR [rsp+0x8],rbx
   140012479:	push   rdi
   14001247a:	sub    rsp,0x20
   14001247e:	mov    ebx,edx
   140012480:	mov    rdi,rcx
   140012483:	call   0x140012428
   140012488:	test   bl,0x1
   14001248b:	je     0x140012495
   14001248d:	mov    rcx,rdi
   140012490:	call   0x1400062d4
   140012495:	mov    rax,rdi
   140012498:	mov    rbx,QWORD PTR [rsp+0x30]
   14001249d:	add    rsp,0x20
   1400124a1:	pop    rdi
   1400124a2:	ret    
   1400124a3:	int3   
   1400124a4:	mov    QWORD PTR [rcx+0x10],rdx
   1400124a8:	ret    
   1400124a9:	int3   
   1400124aa:	int3   
   1400124ab:	int3   
   1400124ac:	mov    QWORD PTR [rcx+0x8],rdx
   1400124b0:	ret    
   1400124b1:	int3   
   1400124b2:	int3   
   1400124b3:	int3   
   1400124b4:	and    QWORD PTR [rcx+0x10],0x0
   1400124b9:	ret    
   1400124ba:	int3   
   1400124bb:	int3   
   1400124bc:	and    QWORD PTR [rcx+0x8],0x0
   1400124c1:	ret    
   1400124c2:	int3   
   1400124c3:	int3   
   1400124c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400124c9:	push   rdi
   1400124ca:	sub    rsp,0x20
   1400124ce:	mov    rdi,rcx
   1400124d1:	mov    rcx,QWORD PTR [rcx+0x10]
   1400124d5:	xor    ebx,ebx
   1400124d7:	test   rcx,rcx
   1400124da:	je     0x1400124e4
   1400124dc:	call   QWORD PTR [rip+0x23c46]        # 0x140036128
   1400124e2:	mov    ebx,eax
   1400124e4:	mov    rcx,QWORD PTR [rdi+0x8]
   1400124e8:	cmp    rcx,QWORD PTR [rdi+0x10]
   1400124ec:	je     0x1400124fc
   1400124ee:	call   QWORD PTR [rip+0x23c34]        # 0x140036128
   1400124f4:	or     ecx,0xffffffff
   1400124f7:	test   eax,eax
   1400124f9:	cmovne ebx,ecx
   1400124fc:	mov    eax,ebx
   1400124fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140012503:	add    rsp,0x20
   140012507:	pop    rdi
   140012508:	ret    
   140012509:	int3   
   14001250a:	int3   
   14001250b:	int3   
   14001250c:	mov    QWORD PTR [rsp+0x8],rbx
   140012511:	push   rdi
   140012512:	sub    rsp,0x20
   140012516:	mov    rbx,rcx
   140012519:	mov    rcx,QWORD PTR [rcx+0x8]
   14001251d:	mov    edi,edx
   14001251f:	mov    eax,0x1
   140012524:	cmp    rcx,QWORD PTR [rbx+0x10]
   140012528:	je     0x140012530
   14001252a:	call   QWORD PTR [rip+0x23bf0]        # 0x140036120
   140012530:	mov    rcx,QWORD PTR [rbx+0x10]
   140012534:	test   rcx,rcx
   140012537:	je     0x140012552
   140012539:	test   eax,eax
   14001253b:	je     0x140012550
   14001253d:	mov    edx,edi
   14001253f:	call   QWORD PTR [rip+0x23bdb]        # 0x140036120
   140012545:	test   eax,eax
   140012547:	je     0x140012550
   140012549:	mov    eax,0x1
   14001254e:	jmp    0x140012552
   140012550:	xor    eax,eax
   140012552:	mov    rbx,QWORD PTR [rsp+0x30]
   140012557:	add    rsp,0x20
   14001255b:	pop    rdi
   14001255c:	ret    
   14001255d:	int3   
   14001255e:	int3   
   14001255f:	int3   
   140012560:	mov    QWORD PTR [rsp+0x8],rbx
   140012565:	push   rdi
   140012566:	sub    rsp,0x20
   14001256a:	mov    rbx,rcx
   14001256d:	mov    rcx,QWORD PTR [rcx+0x8]
   140012571:	or     eax,0xffffffff
   140012574:	mov    edi,edx
   140012576:	cmp    rcx,QWORD PTR [rbx+0x10]
   14001257a:	je     0x140012582
   14001257c:	call   QWORD PTR [rip+0x23bbe]        # 0x140036140
   140012582:	mov    rcx,QWORD PTR [rbx+0x10]
   140012586:	test   rcx,rcx
   140012589:	je     0x140012593
   14001258b:	mov    edx,edi
   14001258d:	call   QWORD PTR [rip+0x23bad]        # 0x140036140
   140012593:	mov    rbx,QWORD PTR [rsp+0x30]
   140012598:	add    rsp,0x20
   14001259c:	pop    rdi
   14001259d:	ret    
   14001259e:	int3   
   14001259f:	int3   
   1400125a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400125a5:	push   rdi
   1400125a6:	sub    rsp,0x20
   1400125aa:	mov    rbx,rcx
   1400125ad:	mov    rcx,QWORD PTR [rcx+0x8]
   1400125b1:	or     eax,0xffffffff
   1400125b4:	mov    edi,edx
   1400125b6:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400125ba:	je     0x1400125c2
   1400125bc:	call   QWORD PTR [rip+0x23b86]        # 0x140036148
   1400125c2:	mov    rcx,QWORD PTR [rbx+0x10]
   1400125c6:	test   rcx,rcx
   1400125c9:	je     0x1400125d3
   1400125cb:	mov    edx,edi
   1400125cd:	call   QWORD PTR [rip+0x23b75]        # 0x140036148
   1400125d3:	mov    rbx,QWORD PTR [rsp+0x30]
   1400125d8:	add    rsp,0x20
   1400125dc:	pop    rdi
   1400125dd:	ret    
   1400125de:	int3   
   1400125df:	int3   
   1400125e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400125e5:	push   rdi
   1400125e6:	sub    rsp,0x20
   1400125ea:	mov    rbx,rcx
   1400125ed:	mov    rcx,QWORD PTR [rcx+0x8]
   1400125f1:	xor    eax,eax
   1400125f3:	mov    edi,edx
   1400125f5:	cmp    rcx,QWORD PTR [rbx+0x10]
   1400125f9:	je     0x140012601
   1400125fb:	call   QWORD PTR [rip+0x23b17]        # 0x140036118
   140012601:	mov    rcx,QWORD PTR [rbx+0x10]
   140012605:	test   rcx,rcx
   140012608:	je     0x140012612
   14001260a:	mov    edx,edi
   14001260c:	call   QWORD PTR [rip+0x23b06]        # 0x140036118
   140012612:	mov    rbx,QWORD PTR [rsp+0x30]
   140012617:	add    rsp,0x20
   14001261b:	pop    rdi
   14001261c:	ret    
   14001261d:	int3   
   14001261e:	int3   
   14001261f:	int3   
   140012620:	mov    rcx,QWORD PTR [rcx+0x8]
   140012624:	rex.W jmp QWORD PTR [rip+0x23a9d]        # 0x1400360c8
   14001262b:	int3   
   14001262c:	lea    rax,[rip+0x26a0d]        # 0x140039040
   140012633:	ret    
   140012634:	lea    rax,[rip+0x26a35]        # 0x140039070
   14001263b:	ret    
   14001263c:	lea    rax,[rip+0x26a5d]        # 0x1400390a0
   140012643:	ret    
   140012644:	lea    rax,[rip+0x26a85]        # 0x1400390d0
   14001264b:	ret    
   14001264c:	mov    rax,QWORD PTR [rcx]
   14001264f:	xor    edx,edx
   140012651:	rex.W jmp QWORD PTR [rax+0x8]
   140012655:	int3   
   140012656:	int3   
   140012657:	int3   
   140012658:	lea    rax,[rip+0x26b19]        # 0x140039178
   14001265f:	mov    QWORD PTR [rcx],rax
   140012662:	xor    eax,eax
   140012664:	mov    QWORD PTR [rcx+0x8],rax
   140012668:	mov    QWORD PTR [rcx+0x10],rax
   14001266c:	mov    DWORD PTR [rcx+0x18],eax
   14001266f:	mov    rax,rcx
   140012672:	ret    
   140012673:	int3   
   140012674:	mov    rcx,QWORD PTR [rcx+0x8]
   140012678:	rex.W jmp QWORD PTR [rip+0x23a91]        # 0x140036110
   14001267f:	int3   
   140012680:	mov    rcx,QWORD PTR [rcx+0x8]
   140012684:	rex.W jmp QWORD PTR [rip+0x23a7d]        # 0x140036108
   14001268b:	int3   
   14001268c:	sub    rsp,0x38
   140012690:	mov    eax,DWORD PTR [rsp+0x60]
   140012694:	mov    rcx,QWORD PTR [rcx+0x8]
   140012698:	mov    DWORD PTR [rsp+0x20],eax
   14001269c:	call   QWORD PTR [rip+0x23a5e]        # 0x140036100
   1400126a2:	add    rsp,0x38
   1400126a6:	ret    
   1400126a7:	int3   
   1400126a8:	sub    rsp,0x48
   1400126ac:	mov    rax,QWORD PTR [rsp+0x88]
   1400126b4:	mov    rcx,QWORD PTR [rcx+0x8]
   1400126b8:	mov    QWORD PTR [rsp+0x38],rax
   1400126bd:	mov    eax,DWORD PTR [rsp+0x80]
   1400126c4:	mov    DWORD PTR [rsp+0x30],eax
   1400126c8:	mov    rax,QWORD PTR [rsp+0x78]
   1400126cd:	mov    QWORD PTR [rsp+0x28],rax
   1400126d2:	mov    rax,QWORD PTR [rsp+0x70]
   1400126d7:	mov    QWORD PTR [rsp+0x20],rax
   1400126dc:	call   QWORD PTR [rip+0x23a4e]        # 0x140036130
   1400126e2:	add    rsp,0x48
   1400126e6:	ret    
   1400126e7:	int3   
   1400126e8:	rex push rbx
   1400126ea:	sub    rsp,0x40
   1400126ee:	mov    eax,DWORD PTR [rsp+0x90]
   1400126f5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400126f9:	mov    r10d,r9d
   1400126fc:	mov    r9,QWORD PTR [rsp+0x70]
   140012701:	mov    DWORD PTR [rsp+0x38],eax
   140012705:	mov    rax,QWORD PTR [rsp+0x88]
   14001270d:	mov    QWORD PTR [rsp+0x30],rax
   140012712:	mov    eax,DWORD PTR [rsp+0x80]
   140012719:	mov    r11d,r8d
   14001271c:	mov    DWORD PTR [rsp+0x28],eax
   140012720:	mov    eax,DWORD PTR [rsp+0x78]
   140012724:	mov    rbx,rdx
   140012727:	mov    r8d,r10d
   14001272a:	mov    edx,r11d
   14001272d:	mov    DWORD PTR [rsp+0x20],eax
   140012731:	call   QWORD PTR [rip+0x23e49]        # 0x140036580
   140012737:	movsx  ecx,ax
   14001273a:	shr    eax,0x10
   14001273d:	cwde   
   14001273e:	mov    DWORD PTR [rbx],ecx
   140012740:	mov    DWORD PTR [rbx+0x4],eax
   140012743:	mov    rax,rbx
   140012746:	add    rsp,0x40
   14001274a:	pop    rbx
   14001274b:	ret    
   14001274c:	sub    rsp,0x38
   140012750:	mov    eax,DWORD PTR [rsp+0x60]
   140012754:	mov    rcx,QWORD PTR [rcx+0x8]
   140012758:	mov    DWORD PTR [rsp+0x20],eax
   14001275c:	call   QWORD PTR [rip+0x23e16]        # 0x140036578
   140012762:	add    rsp,0x38
   140012766:	ret    
   140012767:	int3   
   140012768:	sub    rsp,0x38
   14001276c:	mov    rax,QWORD PTR [rsp+0x68]
   140012771:	mov    rcx,QWORD PTR [rcx+0x8]
   140012775:	mov    QWORD PTR [rsp+0x28],rax
   14001277a:	mov    eax,DWORD PTR [rsp+0x60]
   14001277e:	mov    DWORD PTR [rsp+0x20],eax
   140012782:	call   QWORD PTR [rip+0x23de8]        # 0x140036570
   140012788:	add    rsp,0x38
   14001278c:	ret    
   14001278d:	int3   
   14001278e:	int3   
   14001278f:	int3   
   140012790:	sub    rsp,0x58
   140012794:	mov    rax,rdx
   140012797:	xor    edx,edx
   140012799:	cmp    rax,rdx
   14001279c:	je     0x1400127a2
   14001279e:	mov    rdx,QWORD PTR [rax+0x8]
   1400127a2:	mov    eax,DWORD PTR [rsp+0xa0]
   1400127a9:	mov    rcx,QWORD PTR [rcx+0x8]
   1400127ad:	mov    DWORD PTR [rsp+0x40],eax
   1400127b1:	mov    eax,DWORD PTR [rsp+0x98]
   1400127b8:	mov    DWORD PTR [rsp+0x38],eax
   1400127bc:	mov    eax,DWORD PTR [rsp+0x90]
   1400127c3:	mov    DWORD PTR [rsp+0x30],eax
   1400127c7:	mov    eax,DWORD PTR [rsp+0x88]
   1400127ce:	mov    DWORD PTR [rsp+0x28],eax
   1400127d2:	mov    eax,DWORD PTR [rsp+0x80]
   1400127d9:	mov    DWORD PTR [rsp+0x20],eax
   1400127dd:	call   QWORD PTR [rip+0x23d85]        # 0x140036568
   1400127e3:	add    rsp,0x58
   1400127e7:	ret    
   1400127e8:	sub    rsp,0x38
   1400127ec:	mov    rax,QWORD PTR [rsp+0x60]
   1400127f1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400127f5:	mov    QWORD PTR [rsp+0x20],rax
   1400127fa:	call   QWORD PTR [rip+0x238f8]        # 0x1400360f8
   140012800:	add    rsp,0x38
   140012804:	ret    
   140012805:	int3   
   140012806:	int3   
   140012807:	int3   
   140012808:	mov    QWORD PTR [rsp+0x8],rbx
   14001280d:	mov    QWORD PTR [rsp+0x10],rbp
   140012812:	mov    QWORD PTR [rsp+0x18],rsi
   140012817:	push   rdi
   140012818:	sub    rsp,0x20
   14001281c:	mov    rdi,rcx
   14001281f:	mov    rcx,QWORD PTR [rcx+0x8]
   140012823:	mov    esi,r9d
   140012826:	mov    ebp,r8d
   140012829:	mov    rbx,rdx
   14001282c:	cmp    rcx,QWORD PTR [rdi+0x10]
   140012830:	je     0x140012840
   140012832:	mov    r9,rdx
   140012835:	mov    r8d,esi
   140012838:	mov    edx,ebp
   14001283a:	call   QWORD PTR [rip+0x238a8]        # 0x1400360e8
   140012840:	mov    rcx,QWORD PTR [rdi+0x10]
   140012844:	test   rcx,rcx
   140012847:	je     0x140012857
   140012849:	mov    r9,rbx
   14001284c:	mov    r8d,esi
   14001284f:	mov    edx,ebp
   140012851:	call   QWORD PTR [rip+0x23891]        # 0x1400360e8
   140012857:	mov    rbp,QWORD PTR [rsp+0x38]
   14001285c:	mov    rsi,QWORD PTR [rsp+0x40]
   140012861:	mov    rax,rbx
   140012864:	mov    rbx,QWORD PTR [rsp+0x30]
   140012869:	add    rsp,0x20
   14001286d:	pop    rdi
   14001286e:	ret    
   14001286f:	int3   
   140012870:	mov    QWORD PTR [rsp+0x8],rbx
   140012875:	mov    QWORD PTR [rsp+0x10],rbp
   14001287a:	mov    QWORD PTR [rsp+0x18],rsi
   14001287f:	push   rdi
   140012880:	sub    rsp,0x20
   140012884:	mov    rdi,rcx
   140012887:	mov    rcx,QWORD PTR [rcx+0x8]
   14001288b:	mov    esi,r9d
   14001288e:	mov    ebp,r8d
   140012891:	mov    rbx,rdx
   140012894:	cmp    rcx,QWORD PTR [rdi+0x10]
   140012898:	je     0x1400128a8
   14001289a:	mov    r9,rdx
   14001289d:	mov    r8d,esi
   1400128a0:	mov    edx,ebp
   1400128a2:	call   QWORD PTR [rip+0x23838]        # 0x1400360e0
   1400128a8:	mov    rcx,QWORD PTR [rdi+0x10]
   1400128ac:	test   rcx,rcx
   1400128af:	je     0x1400128bf
   1400128b1:	mov    r9,rbx
   1400128b4:	mov    r8d,esi
   1400128b7:	mov    edx,ebp
   1400128b9:	call   QWORD PTR [rip+0x23821]        # 0x1400360e0
   1400128bf:	mov    rbp,QWORD PTR [rsp+0x38]
   1400128c4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400128c9:	mov    rax,rbx
   1400128cc:	mov    rbx,QWORD PTR [rsp+0x30]
   1400128d1:	add    rsp,0x20
   1400128d5:	pop    rdi
   1400128d6:	ret    
   1400128d7:	int3   
   1400128d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400128dd:	mov    QWORD PTR [rsp+0x10],rbp
   1400128e2:	mov    QWORD PTR [rsp+0x18],rsi
   1400128e7:	push   rdi
   1400128e8:	sub    rsp,0x20
   1400128ec:	mov    rdi,rcx
   1400128ef:	mov    rcx,QWORD PTR [rcx+0x8]
   1400128f3:	mov    esi,r9d
   1400128f6:	mov    ebp,r8d
   1400128f9:	mov    rbx,rdx
   1400128fc:	cmp    rcx,QWORD PTR [rdi+0x10]
   140012900:	je     0x140012910
   140012902:	mov    r9,rdx
   140012905:	mov    r8d,esi
   140012908:	mov    edx,ebp
   14001290a:	call   QWORD PTR [rip+0x23790]        # 0x1400360a0
   140012910:	mov    rcx,QWORD PTR [rdi+0x10]
   140012914:	test   rcx,rcx
   140012917:	je     0x140012927
   140012919:	mov    r9,rbx
   14001291c:	mov    r8d,esi
   14001291f:	mov    edx,ebp
   140012921:	call   QWORD PTR [rip+0x23779]        # 0x1400360a0
   140012927:	mov    rbp,QWORD PTR [rsp+0x38]
   14001292c:	mov    rsi,QWORD PTR [rsp+0x40]
   140012931:	mov    rax,rbx
   140012934:	mov    rbx,QWORD PTR [rsp+0x30]
   140012939:	add    rsp,0x20
   14001293d:	pop    rdi
   14001293e:	ret    
   14001293f:	int3   
   140012940:	mov    rax,rsp
   140012943:	mov    QWORD PTR [rax+0x8],rbx
   140012947:	mov    QWORD PTR [rax+0x10],rbp
   14001294b:	mov    QWORD PTR [rax+0x18],rsi
   14001294f:	mov    QWORD PTR [rax+0x20],rdi
   140012953:	push   r12
   140012955:	sub    rsp,0x30
   140012959:	mov    r12d,DWORD PTR [rsp+0x68]
   14001295e:	mov    rdi,rcx
   140012961:	mov    rcx,QWORD PTR [rcx+0x8]
   140012965:	mov    esi,r9d
   140012968:	mov    ebp,r8d
   14001296b:	mov    rbx,rdx
   14001296e:	cmp    rcx,QWORD PTR [rdi+0x10]
   140012972:	je     0x14001298c
   140012974:	mov    r9d,DWORD PTR [rsp+0x60]
   140012979:	mov    QWORD PTR [rax-0x10],rdx
   14001297d:	mov    r8d,esi
   140012980:	mov    edx,ebp
   140012982:	mov    DWORD PTR [rax-0x18],r12d
   140012986:	call   QWORD PTR [rip+0x237c4]        # 0x140036150
   14001298c:	mov    rcx,QWORD PTR [rdi+0x10]
   140012990:	test   rcx,rcx
   140012993:	je     0x1400129af
   140012995:	mov    r9d,DWORD PTR [rsp+0x60]
   14001299a:	mov    r8d,esi
   14001299d:	mov    edx,ebp
   14001299f:	mov    QWORD PTR [rsp+0x28],rbx
   1400129a4:	mov    DWORD PTR [rsp+0x20],r12d
   1400129a9:	call   QWORD PTR [rip+0x237a1]        # 0x140036150
   1400129af:	mov    rbp,QWORD PTR [rsp+0x48]
   1400129b4:	mov    rsi,QWORD PTR [rsp+0x50]
   1400129b9:	mov    rdi,QWORD PTR [rsp+0x58]
   1400129be:	mov    rax,rbx
   1400129c1:	mov    rbx,QWORD PTR [rsp+0x40]
   1400129c6:	add    rsp,0x30
   1400129ca:	pop    r12
   1400129cc:	ret    
   1400129cd:	int3   
   1400129ce:	int3   
   1400129cf:	int3   
   1400129d0:	mov    QWORD PTR [rsp+0x8],rbx
   1400129d5:	mov    QWORD PTR [rsp+0x10],rbp
   1400129da:	mov    QWORD PTR [rsp+0x18],rsi
   1400129df:	push   rdi
   1400129e0:	sub    rsp,0x20
   1400129e4:	mov    rdi,rcx
   1400129e7:	mov    rcx,QWORD PTR [rcx+0x8]
   1400129eb:	mov    esi,r9d
   1400129ee:	mov    ebp,r8d
   1400129f1:	mov    rbx,rdx
   1400129f4:	cmp    rcx,QWORD PTR [rdi+0x10]
   1400129f8:	je     0x140012a08
   1400129fa:	mov    r9,rdx
   1400129fd:	mov    r8d,esi
   140012a00:	mov    edx,ebp
   140012a02:	call   QWORD PTR [rip+0x236b8]        # 0x1400360c0
   140012a08:	mov    rcx,QWORD PTR [rdi+0x10]
   140012a0c:	test   rcx,rcx
   140012a0f:	je     0x140012a1f
   140012a11:	mov    r9,rbx
   140012a14:	mov    r8d,esi
   140012a17:	mov    edx,ebp
   140012a19:	call   QWORD PTR [rip+0x236a1]        # 0x1400360c0
   140012a1f:	mov    rbp,QWORD PTR [rsp+0x38]
   140012a24:	mov    rsi,QWORD PTR [rsp+0x40]
   140012a29:	mov    rax,rbx
   140012a2c:	mov    rbx,QWORD PTR [rsp+0x30]
   140012a31:	add    rsp,0x20
   140012a35:	pop    rdi
   140012a36:	ret    
   140012a37:	int3   
   140012a38:	mov    rax,rsp
   140012a3b:	mov    QWORD PTR [rax+0x8],rbx
   140012a3f:	mov    QWORD PTR [rax+0x10],rbp
   140012a43:	mov    QWORD PTR [rax+0x18],rsi
   140012a47:	mov    QWORD PTR [rax+0x20],rdi
   140012a4b:	push   r12
   140012a4d:	sub    rsp,0x30
   140012a51:	mov    r12d,DWORD PTR [rsp+0x68]
   140012a56:	mov    rdi,rcx
   140012a59:	mov    rcx,QWORD PTR [rcx+0x8]
   140012a5d:	mov    esi,r9d
   140012a60:	mov    ebp,r8d
   140012a63:	mov    rbx,rdx
   140012a66:	cmp    rcx,QWORD PTR [rdi+0x10]
   140012a6a:	je     0x140012a84
   140012a6c:	mov    r9d,DWORD PTR [rsp+0x60]
   140012a71:	mov    QWORD PTR [rax-0x10],rdx
   140012a75:	mov    r8d,esi
   140012a78:	mov    edx,ebp
   140012a7a:	mov    DWORD PTR [rax-0x18],r12d
   140012a7e:	call   QWORD PTR [rip+0x23634]        # 0x1400360b8
   140012a84:	mov    rcx,QWORD PTR [rdi+0x10]
   140012a88:	test   rcx,rcx
   140012a8b:	je     0x140012aa7
   140012a8d:	mov    r9d,DWORD PTR [rsp+0x60]
   140012a92:	mov    r8d,esi
   140012a95:	mov    edx,ebp
   140012a97:	mov    QWORD PTR [rsp+0x28],rbx
   140012a9c:	mov    DWORD PTR [rsp+0x20],r12d
   140012aa1:	call   QWORD PTR [rip+0x23611]        # 0x1400360b8
   140012aa7:	mov    rbp,QWORD PTR [rsp+0x48]
   140012aac:	mov    rsi,QWORD PTR [rsp+0x50]
   140012ab1:	mov    rdi,QWORD PTR [rsp+0x58]
   140012ab6:	mov    rax,rbx
   140012ab9:	mov    rbx,QWORD PTR [rsp+0x40]
   140012abe:	add    rsp,0x30
   140012ac2:	pop    r12
   140012ac4:	ret    
   140012ac5:	int3   
   140012ac6:	int3   
   140012ac7:	int3   
   140012ac8:	sub    rsp,0x28
   140012acc:	mov    ecx,0x20
   140012ad1:	call   0x140006290
   140012ad6:	xor    edx,edx
   140012ad8:	cmp    rax,rdx
   140012adb:	je     0x140012af4
   140012add:	lea    rcx,[rip+0x26694]        # 0x140039178
   140012ae4:	mov    QWORD PTR [rax+0x8],rdx
   140012ae8:	mov    QWORD PTR [rax+0x10],rdx
   140012aec:	mov    QWORD PTR [rax],rcx
   140012aef:	mov    DWORD PTR [rax+0x18],edx
   140012af2:	jmp    0x140012af7
   140012af4:	mov    rax,rdx
   140012af7:	add    rsp,0x28
   140012afb:	ret    
   140012afc:	sub    rsp,0x28
   140012b00:	mov    ecx,0x10
   140012b05:	call   0x140006290
   140012b0a:	test   rax,rax
   140012b0d:	je     0x140012b20
   140012b0f:	and    QWORD PTR [rax+0x8],0x0
   140012b14:	lea    rcx,[rip+0x2641d]        # 0x140038f38
   140012b1b:	mov    QWORD PTR [rax],rcx
   140012b1e:	jmp    0x140012b22
   140012b20:	xor    eax,eax
   140012b22:	add    rsp,0x28
   140012b26:	ret    
   140012b27:	int3   
   140012b28:	xor    edx,edx
   140012b2a:	cmp    rcx,rdx
   140012b2d:	je     0x140012b44
   140012b2f:	lea    rax,[rip+0x26642]        # 0x140039178
   140012b36:	mov    QWORD PTR [rcx+0x8],rdx
   140012b3a:	mov    QWORD PTR [rcx+0x10],rdx
   140012b3e:	mov    QWORD PTR [rcx],rax
   140012b41:	mov    DWORD PTR [rcx+0x18],edx
   140012b44:	ret    
   140012b45:	int3   
   140012b46:	int3   
   140012b47:	int3   
   140012b48:	test   rcx,rcx
   140012b4b:	je     0x140012b5c
   140012b4d:	and    QWORD PTR [rcx+0x8],0x0
   140012b52:	lea    rax,[rip+0x263df]        # 0x140038f38
   140012b59:	mov    QWORD PTR [rcx],rax
   140012b5c:	ret    
   140012b5d:	int3   
   140012b5e:	int3   
   140012b5f:	int3   
   140012b60:	rex push rdi
   140012b62:	sub    rsp,0x40
   140012b66:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140012b6f:	mov    QWORD PTR [rsp+0x50],rbx
   140012b74:	mov    QWORD PTR [rsp+0x60],rsi
   140012b79:	mov    esi,ecx
   140012b7b:	call   0x140007e40
   140012b80:	mov    rdi,rax
   140012b83:	xor    ebx,ebx
   140012b85:	cmp    QWORD PTR [rax+0x38],rbx
   140012b89:	jne    0x140012bef
   140012b8b:	cmp    esi,ebx
   140012b8d:	je     0x140012bef
   140012b8f:	lea    rcx,[rip+0xffffffffffffef0e]        # 0x140011aa4
   140012b96:	call   0x140006280
   140012b9b:	mov    rsi,rax
   140012b9e:	mov    ecx,0xb8
   140012ba3:	call   0x140006290
   140012ba8:	mov    QWORD PTR [rsp+0x58],rax
   140012bad:	cmp    rax,rbx
   140012bb0:	je     0x140012be3
   140012bb2:	mov    DWORD PTR [rsp+0x28],0x2
   140012bba:	mov    QWORD PTR [rsp+0x20],0x8
   140012bc3:	lea    r9,[rip+0xfffffffffffffa82]        # 0x14001264c
   140012bca:	lea    r8,[rip+0xffffffffffffff57]        # 0x140012b28
   140012bd1:	lea    rdx,[rip+0x264c8]        # 0x1400390a0
   140012bd8:	mov    rcx,rax
   140012bdb:	call   0x14000a688
   140012be0:	mov    rbx,rax
   140012be3:	mov    QWORD PTR [rdi+0x38],rbx
   140012be7:	mov    rcx,rsi
   140012bea:	call   0x140006280
   140012bef:	mov    rax,QWORD PTR [rdi+0x38]
   140012bf3:	mov    rbx,QWORD PTR [rsp+0x50]
   140012bf8:	mov    rsi,QWORD PTR [rsp+0x60]
   140012bfd:	add    rsp,0x40
   140012c01:	pop    rdi
   140012c02:	ret    
   140012c03:	int3   
   140012c04:	rex push rbx
   140012c06:	sub    rsp,0x20
   140012c0a:	mov    rbx,rcx
   140012c0d:	mov    ecx,0x1
   140012c12:	call   0x140012b60
   140012c17:	mov    rdx,rbx
   140012c1a:	mov    rcx,rax
   140012c1d:	add    rsp,0x20
   140012c21:	pop    rbx
   140012c22:	jmp    0x14000a760
   140012c27:	int3   
   140012c28:	mov    QWORD PTR [rsp+0x8],rbx
   140012c2d:	push   rdi
   140012c2e:	sub    rsp,0x20
   140012c32:	mov    rdi,QWORD PTR [rcx+0x8]
   140012c36:	mov    rbx,rcx
   140012c39:	test   rdi,rdi
   140012c3c:	je     0x140012c59
   140012c3e:	call   0x140007e40
   140012c43:	mov    rcx,QWORD PTR [rax+0x38]
   140012c47:	test   rcx,rcx
   140012c4a:	je     0x140012c59
   140012c4c:	mov    rdx,QWORD PTR [rbx+0x8]
   140012c50:	add    rcx,0x30
   140012c54:	call   0x140008860
   140012c59:	mov    rdx,QWORD PTR [rbx]
   140012c5c:	mov    rcx,rbx
   140012c5f:	call   QWORD PTR [rdx+0x28]
   140012c62:	and    QWORD PTR [rbx+0x8],0x0
   140012c67:	mov    rbx,QWORD PTR [rsp+0x30]
   140012c6c:	mov    rax,rdi
   140012c6f:	add    rsp,0x20
   140012c73:	pop    rdi
   140012c74:	ret    
   140012c75:	int3   
   140012c76:	int3   
   140012c77:	int3   
   140012c78:	sub    rsp,0x28
   140012c7c:	cmp    QWORD PTR [rcx+0x8],0x0
   140012c81:	lea    rax,[rip+0x264f0]        # 0x140039178
   140012c88:	mov    QWORD PTR [rcx],rax
   140012c8b:	je     0x140012c9b
   140012c8d:	call   0x140012c28
   140012c92:	mov    rcx,rax
   140012c95:	call   QWORD PTR [rip+0x23415]        # 0x1400360b0
   140012c9b:	add    rsp,0x28
   140012c9f:	ret    
   140012ca0:	rex push rdi
   140012ca2:	sub    rsp,0x40
   140012ca6:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   140012caf:	mov    QWORD PTR [rsp+0x50],rbx
   140012cb4:	mov    QWORD PTR [rsp+0x60],rsi
   140012cb9:	mov    esi,ecx
   140012cbb:	call   0x140007e40
   140012cc0:	mov    rdi,rax
   140012cc3:	xor    ebx,ebx
   140012cc5:	cmp    QWORD PTR [rax+0x40],rbx
   140012cc9:	jne    0x140012d2f
   140012ccb:	cmp    esi,ebx
   140012ccd:	je     0x140012d2f
   140012ccf:	lea    rcx,[rip+0xffffffffffffedce]        # 0x140011aa4
   140012cd6:	call   0x140006280
   140012cdb:	mov    rsi,rax
   140012cde:	mov    ecx,0xb8
   140012ce3:	call   0x140006290
   140012ce8:	mov    QWORD PTR [rsp+0x58],rax
   140012ced:	cmp    rax,rbx
   140012cf0:	je     0x140012d23
   140012cf2:	mov    DWORD PTR [rsp+0x28],0x1
   140012cfa:	mov    QWORD PTR [rsp+0x20],0x8
   140012d03:	lea    r9,[rip+0xfffffffffffff942]        # 0x14001264c
   140012d0a:	lea    r8,[rip+0xfffffffffffffe37]        # 0x140012b48
   140012d11:	lea    rdx,[rip+0x263b8]        # 0x1400390d0
   140012d18:	mov    rcx,rax
   140012d1b:	call   0x14000a688
   140012d20:	mov    rbx,rax
   140012d23:	mov    QWORD PTR [rdi+0x40],rbx
   140012d27:	mov    rcx,rsi
   140012d2a:	call   0x140006280
   140012d2f:	mov    rax,QWORD PTR [rdi+0x40]
   140012d33:	mov    rbx,QWORD PTR [rsp+0x50]
   140012d38:	mov    rsi,QWORD PTR [rsp+0x60]
   140012d3d:	add    rsp,0x40
   140012d41:	pop    rdi
   140012d42:	ret    
   140012d43:	int3   
   140012d44:	rex push rbx
   140012d46:	sub    rsp,0x20
   140012d4a:	mov    rbx,rcx
   140012d4d:	mov    ecx,0x1
   140012d52:	call   0x140012ca0
   140012d57:	mov    rdx,rbx
   140012d5a:	mov    rcx,rax
   140012d5d:	add    rsp,0x20
   140012d61:	pop    rbx
   140012d62:	jmp    0x14000a760
   140012d67:	int3   
   140012d68:	mov    QWORD PTR [rsp+0x8],rbx
   140012d6d:	push   rdi
   140012d6e:	sub    rsp,0x20
   140012d72:	mov    rdi,QWORD PTR [rcx+0x8]
   140012d76:	mov    rbx,rcx
   140012d79:	test   rdi,rdi
   140012d7c:	je     0x140012d99
   140012d7e:	call   0x140007e40
   140012d83:	mov    rcx,QWORD PTR [rax+0x40]
   140012d87:	test   rcx,rcx
   140012d8a:	je     0x140012d99
   140012d8c:	mov    rdx,QWORD PTR [rbx+0x8]
   140012d90:	add    rcx,0x30
   140012d94:	call   0x140008860
   140012d99:	and    QWORD PTR [rbx+0x8],0x0
   140012d9e:	mov    rbx,QWORD PTR [rsp+0x30]
   140012da3:	mov    rax,rdi
   140012da6:	add    rsp,0x20
   140012daa:	pop    rdi
   140012dab:	ret    
   140012dac:	sub    rsp,0x28
   140012db0:	cmp    QWORD PTR [rcx+0x8],0x0
   140012db5:	jne    0x140012dbb
   140012db7:	xor    eax,eax
   140012db9:	jmp    0x140012dc9
   140012dbb:	call   0x140012d68
   140012dc0:	mov    rcx,rax
   140012dc3:	call   QWORD PTR [rip+0x2336f]        # 0x140036138
   140012dc9:	add    rsp,0x28
   140012dcd:	ret    
   140012dce:	int3   
   140012dcf:	int3   
   140012dd0:	mov    QWORD PTR [rsp+0x8],rbx
   140012dd5:	push   rdi
   140012dd6:	sub    rsp,0x20
   140012dda:	mov    ebx,edx
   140012ddc:	mov    rdi,rcx
   140012ddf:	call   0x140012c78
   140012de4:	test   bl,0x1
   140012de7:	je     0x140012df1
   140012de9:	mov    rcx,rdi
   140012dec:	call   0x1400062d4
   140012df1:	mov    rax,rdi
   140012df4:	mov    rbx,QWORD PTR [rsp+0x30]
   140012df9:	add    rsp,0x20
   140012dfd:	pop    rdi
   140012dfe:	ret    
   140012dff:	int3   
   140012e00:	mov    QWORD PTR [rsp+0x8],rbx
   140012e05:	push   rdi
   140012e06:	sub    rsp,0x20
   140012e0a:	mov    rdi,rcx
   140012e0d:	mov    ecx,edx
   140012e0f:	call   QWORD PTR [rip+0x23293]        # 0x1400360a8
   140012e15:	mov    rcx,QWORD PTR [rdi+0x8]
   140012e19:	mov    rbx,rax
   140012e1c:	xor    eax,eax
   140012e1e:	cmp    rcx,QWORD PTR [rdi+0x10]
   140012e22:	je     0x140012e2d
   140012e24:	mov    rdx,rbx
   140012e27:	call   QWORD PTR [rip+0x232c3]        # 0x1400360f0
   140012e2d:	mov    rcx,QWORD PTR [rdi+0x10]
   140012e31:	test   rcx,rcx
   140012e34:	je     0x140012e3f
   140012e36:	mov    rdx,rbx
   140012e39:	call   QWORD PTR [rip+0x232b1]        # 0x1400360f0
   140012e3f:	mov    rcx,rax
   140012e42:	mov    rbx,QWORD PTR [rsp+0x30]
   140012e47:	add    rsp,0x20
   140012e4b:	pop    rdi
   140012e4c:	jmp    0x140012d44
   140012e51:	int3   
   140012e52:	int3   
   140012e53:	int3   
   140012e54:	mov    QWORD PTR [rsp+0x8],rbx
   140012e59:	mov    QWORD PTR [rsp+0x10],rsi
   140012e5e:	push   rdi
   140012e5f:	sub    rsp,0x20
   140012e63:	mov    rsi,rcx
   140012e66:	mov    rcx,QWORD PTR [rcx+0x8]
   140012e6a:	xor    ebx,ebx
   140012e6c:	mov    rdi,rdx
   140012e6f:	mov    rax,rbx
   140012e72:	cmp    rcx,QWORD PTR [rsi+0x10]
   140012e76:	je     0x140012e8c
   140012e78:	cmp    rdx,rbx
   140012e7b:	jne    0x140012e82
   140012e7d:	mov    rdx,rbx
   140012e80:	jmp    0x140012e86
   140012e82:	mov    rdx,QWORD PTR [rdx+0x8]
   140012e86:	call   QWORD PTR [rip+0x23264]        # 0x1400360f0
   140012e8c:	mov    rcx,QWORD PTR [rsi+0x10]
   140012e90:	cmp    rcx,rbx
   140012e93:	je     0x140012ea7
   140012e95:	cmp    rdi,rbx
   140012e98:	je     0x140012e9e
   140012e9a:	mov    rbx,QWORD PTR [rdi+0x8]
   140012e9e:	mov    rdx,rbx
   140012ea1:	call   QWORD PTR [rip+0x23249]        # 0x1400360f0
   140012ea7:	mov    rcx,rax
   140012eaa:	mov    rbx,QWORD PTR [rsp+0x30]
   140012eaf:	mov    rsi,QWORD PTR [rsp+0x38]
   140012eb4:	add    rsp,0x20
   140012eb8:	pop    rdi
   140012eb9:	jmp    0x140012d44
   140012ebe:	int3   
   140012ebf:	int3   
   140012ec0:	rex push rbx
   140012ec2:	sub    rsp,0x20
   140012ec6:	mov    ebx,ecx
   140012ec8:	call   0x140008c30
   140012ecd:	test   rax,rax
   140012ed0:	je     0x140012ee4
   140012ed2:	mov    rax,QWORD PTR [rax+0x78]
   140012ed6:	test   rax,rax
   140012ed9:	je     0x140012ee4
   140012edb:	mov    ecx,0x1
   140012ee0:	mov    edx,ecx
   140012ee2:	call   rax
   140012ee4:	mov    ecx,ebx
   140012ee6:	add    rsp,0x20
   140012eea:	pop    rbx
   140012eeb:	rex.W jmp QWORD PTR [rip+0x2366e]        # 0x140036560
   140012ef2:	int3   
   140012ef3:	int3   
   140012ef4:	mov    QWORD PTR [rsp+0x10],rbx
   140012ef9:	push   rdi
   140012efa:	sub    rsp,0x30
   140012efe:	mov    rbx,rcx
   140012f01:	mov    rcx,QWORD PTR [rcx+0xe8]
   140012f08:	mov    rdi,rdx
   140012f0b:	test   rcx,rcx
   140012f0e:	je     0x140012fd9
   140012f14:	call   QWORD PTR [rip+0x23516]        # 0x140036430
   140012f1a:	mov    rdx,rdi
   140012f1d:	movzx  ecx,WORD PTR [rax+0x2]
   140012f21:	add    rcx,rax
   140012f24:	call   QWORD PTR [rip+0x2344e]        # 0x140036378
   140012f2a:	test   eax,eax
   140012f2c:	jne    0x140012fd9
   140012f32:	lea    rdx,[rsp+0x40]
   140012f37:	xor    r8d,r8d
   140012f3a:	mov    rcx,rdi
   140012f3d:	call   0x140031fcc
   140012f42:	test   eax,eax
   140012f44:	je     0x140012fd9
   140012f4a:	mov    rcx,QWORD PTR [rbx+0xe0]
   140012f51:	test   rcx,rcx
   140012f54:	je     0x140012f5b
   140012f56:	call   0x140011a60
   140012f5b:	mov    rdx,QWORD PTR [rsp+0x40]
   140012f60:	and    DWORD PTR [rsp+0x28],0x0
   140012f65:	and    QWORD PTR [rsp+0x20],0x0
   140012f6b:	xor    r9d,r9d
   140012f6e:	mov    r8,rdi
   140012f71:	xor    ecx,ecx
   140012f73:	call   0x140031fc6
   140012f78:	mov    ecx,0x42
   140012f7d:	movsxd rdx,eax
   140012f80:	call   QWORD PTR [rip+0x2348a]        # 0x140036410
   140012f86:	mov    rcx,rax
   140012f89:	mov    QWORD PTR [rbx+0xe0],rax
   140012f90:	call   QWORD PTR [rip+0x2349a]        # 0x140036430
   140012f96:	mov    rdx,QWORD PTR [rsp+0x40]
   140012f9b:	mov    r8,rdi
   140012f9e:	xor    ecx,ecx
   140012fa0:	mov    r9,rax
   140012fa3:	mov    DWORD PTR [rsp+0x28],0x2
   140012fab:	and    QWORD PTR [rsp+0x20],0x0
   140012fb1:	call   0x140031fc6
   140012fb6:	cmp    eax,0x1
   140012fb9:	je     0x140012fcf
   140012fbb:	mov    rcx,QWORD PTR [rbx+0xe0]
   140012fc2:	call   0x140011a60
   140012fc7:	and    QWORD PTR [rbx+0xe0],0x0
   140012fcf:	mov    rcx,QWORD PTR [rsp+0x40]
   140012fd4:	call   0x140031fc0
   140012fd9:	mov    rbx,QWORD PTR [rsp+0x48]
   140012fde:	add    rsp,0x30
   140012fe2:	pop    rdi
   140012fe3:	ret    
   140012fe4:	sub    rsp,0x28
   140012fe8:	call   0x140007df0
   140012fed:	xor    ecx,ecx
   140012fef:	cmp    DWORD PTR [rax+0x50],ecx
   140012ff2:	sete   cl
   140012ff5:	mov    eax,ecx
   140012ff7:	add    rsp,0x28
   140012ffb:	ret    
   140012ffc:	sub    rsp,0x28
   140013000:	call   0x140007df0
   140013005:	lock add DWORD PTR [rax+0x50],0x1
   14001300a:	add    rsp,0x28
   14001300e:	ret    
   14001300f:	int3   
   140013010:	rex push rbx
   140013012:	sub    rsp,0x20
   140013016:	call   0x140007df0
   14001301b:	cmp    DWORD PTR [rax+0x54],0x0
   14001301f:	jne    0x14001306e
   140013021:	call   0x140007df0
   140013026:	mov    DWORD PTR [rax+0x54],0x1
   14001302d:	call   0x140007df0
   140013032:	mov    rbx,QWORD PTR [rax+0x8]
   140013036:	test   rbx,rbx
   140013039:	je     0x14001305c
   14001303b:	mov    rcx,QWORD PTR [rbx+0x40]
   14001303f:	test   rcx,rcx
   140013042:	je     0x14001305c
   140013044:	call   0x140011830
   140013049:	test   eax,eax
   14001304b:	je     0x14001306e
   14001304d:	mov    rcx,QWORD PTR [rbx+0x40]
   140013051:	mov    rax,QWORD PTR [rcx]
   140013054:	call   QWORD PTR [rax+0xc0]
   14001305a:	jmp    0x14001306e
   14001305c:	call   0x140007df0
   140013061:	cmp    BYTE PTR [rax+0x28],0x0
   140013065:	jne    0x14001306e
   140013067:	xor    ecx,ecx
   140013069:	call   0x140012ec0
   14001306e:	add    rsp,0x20
   140013072:	pop    rbx
   140013073:	ret    
   140013074:	sub    rsp,0x28
   140013078:	call   0x140007df0
   14001307d:	lock add DWORD PTR [rax+0x50],0xffffffff
   140013082:	jne    0x140013089
   140013084:	call   0x140013010
   140013089:	add    rsp,0x28
   14001308d:	ret    
   14001308e:	int3   
   14001308f:	int3   
   140013090:	sub    rsp,0x48
   140013094:	mov    rax,QWORD PTR [rip+0x35d25]        # 0x140048dc0
   14001309b:	xor    rax,rsp
   14001309e:	mov    QWORD PTR [rsp+0x38],rax
   1400130a3:	call   QWORD PTR [rip+0x2325f]        # 0x140036308
   1400130a9:	lea    rdx,[rsp+0x20]
   1400130ae:	mov    ecx,eax
   1400130b0:	call   QWORD PTR [rip+0x2325a]        # 0x140036310
   1400130b6:	xor    eax,eax
   1400130b8:	cmp    DWORD PTR [rsp+0x20],0x1
   1400130bd:	seta   al
   1400130c0:	mov    rcx,QWORD PTR [rsp+0x38]
   1400130c5:	xor    rcx,rsp
   1400130c8:	call   0x1400144f0
   1400130cd:	add    rsp,0x48
   1400130d1:	ret    
   1400130d2:	int3   
   1400130d3:	int3   
   1400130d4:	sub    rsp,0x28
   1400130d8:	cmp    DWORD PTR [rcx+0x50],0x3ffffffe
   1400130df:	jb     0x1400130f0
   1400130e1:	mov    rdx,QWORD PTR [rcx+0x18]
   1400130e5:	mov    ecx,0x5
   1400130ea:	call   0x140009e7c
   1400130ef:	int3   
   1400130f0:	add    rsp,0x28
   1400130f4:	ret    
   1400130f5:	int3   
   1400130f6:	int3   
   1400130f7:	int3   
   1400130f8:	mov    QWORD PTR [rsp+0x8],rbx
   1400130fd:	mov    QWORD PTR [rsp+0x10],rbp
   140013102:	mov    QWORD PTR [rsp+0x18],rsi
   140013107:	push   rdi
   140013108:	push   r12
   14001310a:	push   r13
   14001310c:	sub    rsp,0x20
   140013110:	xor    edi,edi
   140013112:	mov    rbp,rdx
   140013115:	mov    rsi,rcx
   140013118:	cmp    rdx,rdi
   14001311b:	jge    0x140013123
   14001311d:	call   0x140006520
   140013122:	int3   
   140013123:	cmp    r8,rdi
   140013126:	jl     0x14001312c
   140013128:	mov    QWORD PTR [rcx+0x20],r8
   14001312c:	mov    rcx,QWORD PTR [rcx+0x8]
   140013130:	cmp    rdx,rdi
   140013133:	jne    0x140013163
   140013135:	cmp    rcx,rdi
   140013138:	je     0x140013156
   14001313a:	cmp    QWORD PTR [rsi+0x10],rdi
   14001313e:	mov    edx,edi
   140013140:	jle    0x14001314d
   140013142:	inc    edx
   140013144:	movsxd rax,edx
   140013147:	cmp    rax,QWORD PTR [rsi+0x10]
   14001314b:	jl     0x140013142
   14001314d:	call   0x1400062d4
   140013152:	mov    QWORD PTR [rsi+0x8],rdi
   140013156:	mov    QWORD PTR [rsi+0x18],rdi
   14001315a:	mov    QWORD PTR [rsi+0x10],rdi
   14001315e:	jmp    0x14001330b
   140013163:	cmp    rcx,rdi
   140013166:	jne    0x1400131ab
   140013168:	mov    r12,QWORD PTR [rsi+0x20]
   14001316c:	cmp    rdx,r12
   14001316f:	cmovg  r12,rdx
   140013173:	mov    rbx,r12
   140013176:	shl    rbx,0x2
   14001317a:	mov    rcx,rbx
   14001317d:	call   0x140006290
   140013182:	mov    r8,rbx
   140013185:	xor    edx,edx
   140013187:	mov    rcx,rax
   14001318a:	mov    QWORD PTR [rsi+0x8],rax
   14001318e:	call   0x140015b00
   140013193:	cmp    rbp,rdi
   140013196:	jle    0x140013303
   14001319c:	inc    edi
   14001319e:	movsxd rax,edi
   1400131a1:	cmp    rax,rbp
   1400131a4:	jl     0x14001319c
   1400131a6:	jmp    0x140013303
   1400131ab:	mov    r8,QWORD PTR [rsi+0x18]
   1400131af:	cmp    rdx,r8
   1400131b2:	jg     0x140013220
   1400131b4:	mov    rax,QWORD PTR [rsi+0x10]
   1400131b8:	cmp    rax,rdx
   1400131bb:	jge    0x1400131f8
   1400131bd:	mov    r8,rdx
   1400131c0:	lea    rcx,[rcx+rax*4]
   1400131c4:	xor    edx,edx
   1400131c6:	sub    r8,rax
   1400131c9:	shl    r8,0x2
   1400131cd:	call   0x140015b00
   1400131d2:	mov    rax,rbp
   1400131d5:	sub    rax,QWORD PTR [rsi+0x10]
   1400131d9:	cmp    rax,rdi
   1400131dc:	jle    0x140013307
   1400131e2:	mov    rcx,rbp
   1400131e5:	sub    rcx,QWORD PTR [rsi+0x10]
   1400131e9:	inc    edi
   1400131eb:	movsxd rax,edi
   1400131ee:	cmp    rax,rcx
   1400131f1:	jl     0x1400131e9
   1400131f3:	jmp    0x140013307
   1400131f8:	jle    0x140013307
   1400131fe:	sub    rax,rdx
   140013201:	cmp    rax,rdi
   140013204:	jle    0x140013307
   14001320a:	mov    rcx,QWORD PTR [rsi+0x10]
   14001320e:	sub    rcx,rdx
   140013211:	inc    edi
   140013213:	movsxd rax,edi
   140013216:	cmp    rax,rcx
   140013219:	jl     0x140013211
   14001321b:	jmp    0x140013307
   140013220:	mov    rax,QWORD PTR [rsi+0x20]
   140013224:	cmp    rax,rdi
   140013227:	jne    0x140013254
   140013229:	mov    rax,QWORD PTR [rsi+0x10]
   14001322d:	cqo    
   14001322f:	and    edx,0x7
   140013232:	add    rax,rdx
   140013235:	mov    edx,0x400
   14001323a:	sar    rax,0x3
   14001323e:	cmp    rax,rdx
   140013241:	mov    rcx,rax
   140013244:	cmovg  rax,rdx
   140013248:	mov    edx,0x4
   14001324d:	cmp    rcx,rdx
   140013250:	cmovl  rax,rdx
   140013254:	add    rax,r8
   140013257:	mov    r12,rbp
   14001325a:	cmp    rbp,rax
   14001325d:	cmovl  r12,rax
   140013261:	cmp    r12,r8
   140013264:	jge    0x14001326c
   140013266:	call   0x140006520
   14001326b:	int3   
   14001326c:	mov    rbx,r12
   14001326f:	shl    rbx,0x2
   140013273:	mov    rcx,rbx
   140013276:	call   0x140006290
   14001327b:	mov    r9,QWORD PTR [rsi+0x10]
   14001327f:	mov    r8,QWORD PTR [rsi+0x8]
   140013283:	shl    r9,0x2
   140013287:	mov    rdx,rbx
   14001328a:	mov    rcx,rax
   14001328d:	mov    r13,rax
   140013290:	call   0x140014510
   140013295:	cmp    eax,edi
   140013297:	je     0x1400132bf
   140013299:	cmp    eax,0xc
   14001329c:	je     0x1400132b9
   14001329e:	cmp    eax,0x16
   1400132a1:	je     0x1400132b3
   1400132a3:	cmp    eax,0x22
   1400132a6:	je     0x1400132b3
   1400132a8:	cmp    eax,0x50
   1400132ab:	je     0x1400132bf
   1400132ad:	call   0x140006520
   1400132b2:	int3   
   1400132b3:	call   0x140006520
   1400132b8:	int3   
   1400132b9:	call   0x1400064d8
   1400132be:	int3   
   1400132bf:	mov    rax,QWORD PTR [rsi+0x10]
   1400132c3:	mov    r8,rbp
   1400132c6:	xor    edx,edx
   1400132c8:	sub    r8,rax
   1400132cb:	lea    rcx,[r13+rax*4+0x0]
   1400132d0:	shl    r8,0x2
   1400132d4:	call   0x140015b00
   1400132d9:	mov    rax,rbp
   1400132dc:	sub    rax,QWORD PTR [rsi+0x10]
   1400132e0:	cmp    rax,rdi
   1400132e3:	jle    0x1400132f6
   1400132e5:	mov    rcx,rbp
   1400132e8:	sub    rcx,QWORD PTR [rsi+0x10]
   1400132ec:	inc    edi
   1400132ee:	movsxd rax,edi
   1400132f1:	cmp    rax,rcx
   1400132f4:	jl     0x1400132ec
   1400132f6:	mov    rcx,QWORD PTR [rsi+0x8]
   1400132fa:	call   0x1400062d4
   1400132ff:	mov    QWORD PTR [rsi+0x8],r13
   140013303:	mov    QWORD PTR [rsi+0x18],r12
   140013307:	mov    QWORD PTR [rsi+0x10],rbp
   14001330b:	mov    rbx,QWORD PTR [rsp+0x40]
   140013310:	mov    rbp,QWORD PTR [rsp+0x48]
   140013315:	mov    rsi,QWORD PTR [rsp+0x50]
   14001331a:	add    rsp,0x20
   14001331e:	pop    r13
   140013320:	pop    r12
   140013322:	pop    rdi
   140013323:	ret    
   140013324:	mov    rax,rsp
   140013327:	mov    QWORD PTR [rax+0x8],rbx
   14001332b:	mov    QWORD PTR [rax+0x10],rbp
   14001332f:	mov    QWORD PTR [rax+0x18],rsi
   140013333:	mov    QWORD PTR [rax+0x20],rdi
   140013337:	push   r12
   140013339:	sub    rsp,0x20
   14001333d:	mov    rbx,r9
   140013340:	mov    r12,r8
   140013343:	mov    rsi,rdx
   140013346:	mov    rdi,rcx
   140013349:	test   rdx,rdx
   14001334c:	js     0x14001343b
   140013352:	test   rbx,rbx
   140013355:	jle    0x14001343b
   14001335b:	or     r8,0xffffffffffffffff
   14001335f:	cmp    rdx,QWORD PTR [rcx+0x10]
   140013363:	jl     0x140013372
   140013365:	add    rdx,r9
   140013368:	call   0x1400130f8
   14001336d:	jmp    0x140013407
   140013372:	mov    rbp,QWORD PTR [rcx+0x10]
   140013376:	lea    rdx,[r9+rbp*1]
   14001337a:	call   0x1400130f8
   14001337f:	xor    r11d,r11d
   140013382:	test   rbx,rbx
   140013385:	jle    0x140013392
   140013387:	inc    r11d
   14001338a:	movsxd rax,r11d
   14001338d:	cmp    rax,rbx
   140013390:	jl     0x140013387
   140013392:	mov    rcx,QWORD PTR [rdi+0x8]
   140013396:	lea    rax,[rsi+rbx*1]
   14001339a:	sub    rbp,rsi
   14001339d:	lea    r8,[rcx+rsi*4]
   1400133a1:	shl    rbp,0x2
   1400133a5:	lea    rcx,[rcx+rax*4]
   1400133a9:	mov    r9,rbp
   1400133ac:	mov    rdx,rbp
   1400133af:	call   0x1400145a8
   1400133b4:	test   eax,eax
   1400133b6:	je     0x1400133de
   1400133b8:	cmp    eax,0xc
   1400133bb:	je     0x1400133d8
   1400133bd:	cmp    eax,0x16
   1400133c0:	je     0x1400133d2
   1400133c2:	cmp    eax,0x22
   1400133c5:	je     0x1400133d2
   1400133c7:	cmp    eax,0x50
   1400133ca:	je     0x1400133de
   1400133cc:	call   0x140006520
   1400133d1:	int3   
   1400133d2:	call   0x140006520
   1400133d7:	int3   
   1400133d8:	call   0x1400064d8
   1400133dd:	int3   
   1400133de:	mov    rax,QWORD PTR [rdi+0x8]
   1400133e2:	mov    r8,rbx
   1400133e5:	xor    edx,edx
   1400133e7:	lea    rcx,[rax+rsi*4]
   1400133eb:	shl    r8,0x2
   1400133ef:	call   0x140015b00
   1400133f4:	xor    r11d,r11d
   1400133f7:	test   rbx,rbx
   1400133fa:	jle    0x140013407
   1400133fc:	inc    r11d
   1400133ff:	movsxd rax,r11d
   140013402:	cmp    rax,rbx
   140013405:	jl     0x1400133fc
   140013407:	shl    rsi,0x2
   14001340b:	mov    rcx,QWORD PTR [rdi+0x8]
   14001340f:	mov    eax,DWORD PTR [r12]
   140013413:	mov    DWORD PTR [rsi+rcx*1],eax
   140013416:	add    rsi,0x4
   14001341a:	sub    rbx,0x1
   14001341e:	jne    0x14001340b
   140013420:	mov    rbx,QWORD PTR [rsp+0x30]
   140013425:	mov    rbp,QWORD PTR [rsp+0x38]
   14001342a:	mov    rsi,QWORD PTR [rsp+0x40]
   14001342f:	mov    rdi,QWORD PTR [rsp+0x48]
   140013434:	add    rsp,0x20
   140013438:	pop    r12
   14001343a:	ret    
   14001343b:	call   0x140006520
   140013440:	int3   
   140013441:	int3   
   140013442:	int3   
   140013443:	int3   
   140013444:	sub    rsp,0x28
   140013448:	lea    rax,[rip+0x25e79]        # 0x1400392c8
   14001344f:	xor    edx,edx
   140013451:	mov    QWORD PTR [rcx],rax
   140013454:	cmp    QWORD PTR [rcx+0x8],rdx
   140013458:	je     0x140013474
   14001345a:	cmp    QWORD PTR [rcx+0x10],rdx
   14001345e:	jle    0x14001346b
   140013460:	inc    edx
   140013462:	movsxd rax,edx
   140013465:	cmp    rax,QWORD PTR [rcx+0x10]
   140013469:	jl     0x140013460
   14001346b:	mov    rcx,QWORD PTR [rcx+0x8]
   14001346f:	call   0x1400062d4
   140013474:	add    rsp,0x28
   140013478:	ret    
   140013479:	int3   
   14001347a:	int3   
   14001347b:	int3   
   14001347c:	mov    QWORD PTR [rsp+0x8],rbx
   140013481:	push   rdi
   140013482:	sub    rsp,0x20
   140013486:	mov    ebx,edx
   140013488:	mov    rdi,rcx
   14001348b:	call   0x140013444
   140013490:	test   bl,0x1
   140013493:	je     0x14001349d
   140013495:	mov    rcx,rdi
   140013498:	call   0x1400062d4
   14001349d:	mov    rax,rdi
   1400134a0:	mov    rbx,QWORD PTR [rsp+0x30]
   1400134a5:	add    rsp,0x20
   1400134a9:	pop    rdi
   1400134aa:	ret    
   1400134ab:	int3   
   1400134ac:	mov    rax,rsp
   1400134af:	mov    QWORD PTR [rax+0x8],rbx
   1400134b3:	mov    QWORD PTR [rax+0x10],rsi
   1400134b7:	mov    QWORD PTR [rax+0x18],rdi
   1400134bb:	mov    QWORD PTR [rax+0x20],r12
   1400134bf:	push   r13
   1400134c1:	sub    rsp,0x20
   1400134c5:	mov    rdi,r8
   1400134c8:	mov    rsi,rdx
   1400134cb:	mov    r12,rcx
   1400134ce:	test   r8,r8
   1400134d1:	je     0x1400134de
   1400134d3:	test   rdx,rdx
   1400134d6:	jne    0x1400134de
   1400134d8:	call   0x140006520
   1400134dd:	int3   
   1400134de:	mov    eax,DWORD PTR [rcx+0x20]
   1400134e1:	not    eax
   1400134e3:	test   al,0x1
   1400134e5:	je     0x140013530
   1400134e7:	test   r8,r8
   1400134ea:	je     0x140013515
   1400134ec:	mov    ebx,0x1fffffff
   1400134f1:	mov    rdx,rsi
   1400134f4:	mov    rcx,r12
   1400134f7:	cmp    rdi,rbx
   1400134fa:	cmovb  ebx,edi
   1400134fd:	mov    r8d,ebx
   140013500:	shl    r8d,0x2
   140013504:	call   0x1400097a0
   140013509:	mov    r11d,ebx
   14001350c:	lea    rsi,[rsi+rbx*4]
   140013510:	sub    rdi,r11
   140013513:	jne    0x1400134ec
   140013515:	mov    rbx,QWORD PTR [rsp+0x30]
   14001351a:	mov    rsi,QWORD PTR [rsp+0x38]
   14001351f:	mov    rdi,QWORD PTR [rsp+0x40]
   140013524:	mov    r12,QWORD PTR [rsp+0x48]
   140013529:	add    rsp,0x20
   14001352d:	pop    r13
   14001352f:	ret    
   140013530:	test   r8,r8
   140013533:	je     0x140013515
   140013535:	mov    r13d,0x1fffffff
   14001353b:	mov    rdx,rsi
   14001353e:	mov    rcx,r12
   140013541:	cmp    rdi,r13
   140013544:	cmovb  r13d,edi
   140013548:	mov    ebx,r13d
   14001354b:	shl    ebx,0x2
   14001354e:	mov    r8d,ebx
   140013551:	call   0x140009238
   140013556:	cmp    eax,ebx
   140013558:	jne    0x140013568
   14001355a:	mov    eax,r13d
   14001355d:	lea    rsi,[rsi+r13*4]
   140013561:	sub    rdi,rax
   140013564:	jne    0x140013535
   140013566:	jmp    0x140013515
   140013568:	xor    edx,edx
   14001356a:	lea    ecx,[rdx+0x3]
   14001356d:	call   0x140009e7c
   140013572:	int3   
   140013573:	int3   
   140013574:	mov    rax,rsp
   140013577:	mov    QWORD PTR [rax+0x10],rdx
   14001357b:	mov    QWORD PTR [rax+0x8],rcx
   14001357f:	push   rbx
   140013580:	push   rsi
   140013581:	push   rdi
   140013582:	push   r12
   140013584:	sub    rsp,0x48
   140013588:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013591:	mov    rsi,rdx
   140013594:	mov    r12,rcx
   140013597:	mov    rdi,QWORD PTR [rcx+0x60]
   14001359b:	mov    QWORD PTR [rsp+0x20],rdi
   1400135a0:	and    QWORD PTR [rax+0x18],0x0
   1400135a5:	test   rdi,rdi
   1400135a8:	jne    0x1400135d6
   1400135aa:	lea    ecx,[rdi+0x38]
   1400135ad:	call   0x140006290
   1400135b2:	mov    QWORD PTR [rsp+0x88],rax
   1400135ba:	test   rax,rax
   1400135bd:	je     0x1400135cf
   1400135bf:	lea    edx,[rdi+0xa]
   1400135c2:	mov    rcx,rax
   1400135c5:	call   0x140008980
   1400135ca:	mov    rdi,rax
   1400135cd:	jmp    0x1400135d1
   1400135cf:	xor    edi,edi
   1400135d1:	mov    QWORD PTR [rsp+0x20],rdi
   1400135d6:	lea    r8,[rsp+0x80]
   1400135de:	mov    edx,0x1
   1400135e3:	mov    rcx,rdi
   1400135e6:	call   0x140008834
   1400135eb:	test   eax,eax
   1400135ed:	je     0x1400135f9
   1400135ef:	mov    rbx,QWORD PTR [rsp+0x80]
   1400135f7:	jmp    0x140013678
   1400135f9:	mov    ecx,0x28
   1400135fe:	call   0x140006290
   140013603:	mov    rbx,rax
   140013606:	test   rax,rax
   140013609:	je     0x140013633
   14001360b:	lea    rax,[rip+0x25cb6]        # 0x1400392c8
   140013612:	mov    QWORD PTR [rbx],rax
   140013615:	and    QWORD PTR [rbx+0x8],0x0
   14001361a:	and    QWORD PTR [rbx+0x20],0x0
   14001361f:	and    QWORD PTR [rbx+0x18],0x0
   140013624:	and    QWORD PTR [rbx+0x10],0x0
   140013629:	mov    QWORD PTR [rsp+0x88],rbx
   140013631:	jmp    0x14001363d
   140013633:	xor    ebx,ebx
   140013635:	mov    QWORD PTR [rsp+0x88],rbx
   14001363d:	mov    r8d,DWORD PTR [r12+0x68]
   140013642:	mov    edx,0x1
   140013647:	mov    rcx,rbx
   14001364a:	call   0x1400130f8
   14001364f:	mov    edx,0x1
   140013654:	mov    rcx,rdi
   140013657:	call   0x140008a34
   14001365c:	mov    QWORD PTR [rax],rbx
   14001365f:	jmp    0x140013678
   140013661:	mov    r12,QWORD PTR [rsp+0x70]
   140013666:	mov    rsi,QWORD PTR [rsp+0x78]
   14001366b:	mov    rdi,QWORD PTR [rsp+0x20]
   140013670:	mov    rbx,QWORD PTR [rsp+0x80]
   140013678:	mov    QWORD PTR [r12+0x60],rdi
   14001367d:	test   rsi,rsi
   140013680:	je     0x140013685
   140013682:	mov    QWORD PTR [rsi],rbx
   140013685:	add    rsp,0x48
   140013689:	pop    r12
   14001368b:	pop    rdi
   14001368c:	pop    rsi
   14001368d:	pop    rbx
   14001368e:	ret    
   14001368f:	int3   
   140013690:	rex push rbp
   140013692:	push   rsi
   140013693:	push   rdi
   140013694:	sub    rsp,0x30
   140013698:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400136a1:	mov    QWORD PTR [rsp+0x58],rbx
   1400136a6:	mov    rsi,rdx
   1400136a9:	mov    rdi,rcx
   1400136ac:	mov    eax,DWORD PTR [rcx+0x20]
   1400136af:	not    eax
   1400136b1:	mov    ebp,0x1
   1400136b6:	test   bpl,al
   1400136b9:	je     0x140013733
   1400136bb:	xor    ebx,ebx
   1400136bd:	cmp    QWORD PTR [rcx+0x58],rbx
   1400136c1:	jne    0x140013708
   1400136c3:	lea    ecx,[rbp+0x37]
   1400136c6:	call   0x140006290
   1400136cb:	mov    QWORD PTR [rsp+0x50],rax
   1400136d0:	cmp    rax,rbx
   1400136d3:	je     0x1400136e2
   1400136d5:	mov    edx,DWORD PTR [rdi+0x68]
   1400136d8:	mov    rcx,rax
   1400136db:	call   0x140008980
   1400136e0:	jmp    0x1400136e5
   1400136e2:	mov    rax,rbx
   1400136e5:	mov    QWORD PTR [rdi+0x58],rax
   1400136e9:	mov    r8d,ebp
   1400136ec:	mov    edx,DWORD PTR [rdi+0x6c]
   1400136ef:	mov    rcx,rax
   1400136f2:	call   0x1400086f8
   1400136f7:	xor    edx,edx
   1400136f9:	mov    rcx,QWORD PTR [rdi+0x58]
   1400136fd:	call   0x140008a34
   140013702:	mov    QWORD PTR [rax],rbx
   140013705:	mov    DWORD PTR [rdi+0x50],ebp
   140013708:	cmp    rsi,rbx
   14001370b:	je     0x140013811
   140013711:	mov    rcx,rdi
   140013714:	call   0x1400130d4
   140013719:	mov    ebx,DWORD PTR [rdi+0x50]
   14001371c:	mov    rdx,rsi
   14001371f:	mov    rcx,QWORD PTR [rdi+0x58]
   140013723:	call   0x140008a34
   140013728:	mov    QWORD PTR [rax],rbx
   14001372b:	add    DWORD PTR [rdi+0x50],ebp
   14001372e:	jmp    0x140013811
   140013733:	xor    ebx,ebx
   140013735:	cmp    QWORD PTR [rcx+0x58],rbx
   140013739:	jne    0x1400137b1
   14001373b:	lea    ecx,[rbx+0x28]
   14001373e:	call   0x140006290
   140013743:	mov    QWORD PTR [rsp+0x50],rax
   140013748:	cmp    rax,rbx
   14001374b:	je     0x140013757
   14001374d:	mov    rcx,rax
   140013750:	call   0x1400140b0
   140013755:	jmp    0x14001375a
   140013757:	mov    rax,rbx
   14001375a:	mov    QWORD PTR [rdi+0x58],rax
   14001375e:	mov    r8d,DWORD PTR [rdi+0x68]
   140013762:	mov    rdx,rbp
   140013765:	mov    rcx,rax
   140013768:	call   0x140014214
   14001376d:	mov    rax,QWORD PTR [rdi+0x58]
   140013771:	cmp    QWORD PTR [rax+0x10],rbx
   140013775:	jg     0x14001377d
   140013777:	call   0x140006520
   14001377c:	int3   
   14001377d:	mov    rax,QWORD PTR [rax+0x8]
   140013781:	mov    QWORD PTR [rax],rbx
   140013784:	mov    DWORD PTR [rdi+0x50],ebp
   140013787:	mov    QWORD PTR [rsp+0x60],rbx
   14001378c:	lea    rdx,[rsp+0x60]
   140013791:	mov    rcx,rdi
   140013794:	call   0x140013574
   140013799:	mov    DWORD PTR [rsp+0x50],ebx
   14001379d:	mov    r9,rbp
   1400137a0:	lea    r8,[rsp+0x50]
   1400137a5:	xor    edx,edx
   1400137a7:	mov    rcx,QWORD PTR [rsp+0x60]
   1400137ac:	call   0x140013324
   1400137b1:	cmp    rsi,rbx
   1400137b4:	je     0x140013811
   1400137b6:	mov    rcx,rdi
   1400137b9:	call   0x1400130d4
   1400137be:	mov    edx,DWORD PTR [rdi+0x50]
   1400137c1:	mov    r9,rbp
   1400137c4:	mov    r8,rsi
   1400137c7:	mov    rcx,QWORD PTR [rdi+0x58]
   1400137cb:	call   0x1400140d0
   1400137d0:	mov    QWORD PTR [rsp+0x60],rbx
   1400137d5:	lea    r8,[rsp+0x60]
   1400137da:	mov    rdx,rbp
   1400137dd:	mov    rcx,QWORD PTR [rdi+0x60]
   1400137e1:	call   0x140008834
   1400137e6:	mov    rcx,QWORD PTR [rsp+0x60]
   1400137eb:	cmp    rcx,rbx
   1400137ee:	jne    0x1400137f6
   1400137f0:	call   0x140006520
   1400137f5:	int3   
   1400137f6:	mov    DWORD PTR [rsp+0x50],0x2
   1400137fe:	mov    edx,DWORD PTR [rdi+0x50]
   140013801:	mov    r9,rbp
   140013804:	lea    r8,[rsp+0x50]
   140013809:	call   0x140013324
   14001380e:	add    DWORD PTR [rdi+0x50],ebp
   140013811:	mov    rbx,QWORD PTR [rsp+0x58]
   140013816:	add    rsp,0x30
   14001381a:	pop    rdi
   14001381b:	pop    rsi
   14001381c:	pop    rbp
   14001381d:	ret    
   14001381e:	int3   
   14001381f:	int3   
   140013820:	mov    QWORD PTR [rsp+0x8],rbx
   140013825:	mov    QWORD PTR [rsp+0x10],rsi
   14001382a:	mov    QWORD PTR [rsp+0x18],rdi
   14001382f:	push   r12
   140013831:	sub    rsp,0x20
   140013835:	mov    rsi,rdx
   140013838:	mov    rdi,rcx
   14001383b:	test   rdx,rdx
   14001383e:	jne    0x14001384d
   140013840:	mov    rdx,QWORD PTR [rcx+0x18]
   140013844:	lea    ecx,[rsi+0x6]
   140013847:	call   0x140009e7c
   14001384c:	int3   
   14001384d:	mov    eax,DWORD PTR [rcx+0x20]
   140013850:	not    eax
   140013852:	test   al,0x1
   140013854:	jne    0x140013865
   140013856:	mov    rdx,QWORD PTR [rcx+0x18]
   14001385a:	mov    ecx,0x1
   14001385f:	call   0x140009e7c
   140013864:	int3   
   140013865:	mov    r12d,0xffff
   14001386b:	cmp    DWORD PTR [rdx+0xc],r12d
   14001386f:	jne    0x140013877
   140013871:	call   0x1400064fc
   140013876:	int3   
   140013877:	xor    edx,edx
   140013879:	call   0x140013690
   14001387e:	mov    rcx,QWORD PTR [rdi+0x58]
   140013882:	mov    rdx,rsi
   140013885:	call   0x140008a34
   14001388a:	mov    ebx,DWORD PTR [rax]
   14001388c:	mov    eax,DWORD PTR [rdi+0x20]
   14001388f:	not    eax
   140013891:	test   ebx,ebx
   140013893:	je     0x140013958
   140013899:	mov    esi,0x7fff
   14001389e:	cmp    ebx,esi
   1400138a0:	jae    0x1400138e4
   1400138a2:	test   al,0x1
   1400138a4:	jne    0x1400138b5
   1400138a6:	mov    rdx,QWORD PTR [rdi+0x18]
   1400138aa:	mov    ecx,0x2
   1400138af:	call   0x140009e7c
   1400138b4:	int3   
   1400138b5:	mov    rax,QWORD PTR [rdi+0x38]
   1400138b9:	add    rax,0x2
   1400138bd:	cmp    rax,QWORD PTR [rdi+0x40]
   1400138c1:	jbe    0x1400138cb
   1400138c3:	mov    rcx,rdi
   1400138c6:	call   0x140009414
   1400138cb:	mov    eax,0x8000
   1400138d0:	or     bx,ax
   1400138d3:	mov    rax,QWORD PTR [rdi+0x38]
   1400138d7:	mov    WORD PTR [rax],bx
   1400138da:	add    QWORD PTR [rdi+0x38],0x2
   1400138df:	jmp    0x1400139b6
   1400138e4:	test   al,0x1
   1400138e6:	jne    0x1400138f7
   1400138e8:	mov    rdx,QWORD PTR [rdi+0x18]
   1400138ec:	mov    ecx,0x2
   1400138f1:	call   0x140009e7c
   1400138f6:	int3   
   1400138f7:	mov    rax,QWORD PTR [rdi+0x38]
   1400138fb:	add    rax,0x2
   1400138ff:	cmp    rax,QWORD PTR [rdi+0x40]
   140013903:	jbe    0x14001390d
   140013905:	mov    rcx,rdi
   140013908:	call   0x140009414
   14001390d:	mov    rax,QWORD PTR [rdi+0x38]
   140013911:	mov    WORD PTR [rax],si
   140013914:	add    QWORD PTR [rdi+0x38],0x2
   140013919:	mov    eax,DWORD PTR [rdi+0x20]
   14001391c:	mov    rcx,QWORD PTR [rdi+0x38]
   140013920:	not    eax
   140013922:	test   al,0x1
   140013924:	jne    0x140013935
   140013926:	mov    rdx,QWORD PTR [rdi+0x18]
   14001392a:	mov    ecx,0x2
   14001392f:	call   0x140009e7c
   140013934:	int3   
   140013935:	lea    rax,[rcx+0x4]
   140013939:	cmp    rax,QWORD PTR [rdi+0x40]
   14001393d:	jbe    0x140013947
   14001393f:	mov    rcx,rdi
   140013942:	call   0x140009414
   140013947:	mov    rax,QWORD PTR [rdi+0x38]
   14001394b:	bts    ebx,0x1f
   14001394f:	mov    DWORD PTR [rax],ebx
   140013951:	add    QWORD PTR [rdi+0x38],0x4
   140013956:	jmp    0x1400139b6
   140013958:	test   al,0x1
   14001395a:	jne    0x14001396b
   14001395c:	mov    rdx,QWORD PTR [rdi+0x18]
   140013960:	mov    ecx,0x2
   140013965:	call   0x140009e7c
   14001396a:	int3   
   14001396b:	mov    rax,QWORD PTR [rdi+0x38]
   14001396f:	add    rax,0x2
   140013973:	cmp    rax,QWORD PTR [rdi+0x40]
   140013977:	jbe    0x140013981
   140013979:	mov    rcx,rdi
   14001397c:	call   0x140009414
   140013981:	mov    rax,QWORD PTR [rdi+0x38]
   140013985:	mov    rdx,rdi
   140013988:	mov    rcx,rsi
   14001398b:	mov    WORD PTR [rax],r12w
   14001398f:	add    QWORD PTR [rdi+0x38],0x2
   140013994:	call   0x140009b50
   140013999:	mov    rcx,rdi
   14001399c:	call   0x1400130d4
   1400139a1:	mov    rcx,QWORD PTR [rdi+0x58]
   1400139a5:	mov    ebx,DWORD PTR [rdi+0x50]
   1400139a8:	mov    rdx,rsi
   1400139ab:	call   0x140008a34
   1400139b0:	mov    QWORD PTR [rax],rbx
   1400139b3:	inc    DWORD PTR [rdi+0x50]
   1400139b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400139bb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400139c0:	mov    rdi,QWORD PTR [rsp+0x40]
   1400139c5:	add    rsp,0x20
   1400139c9:	pop    r12
   1400139cb:	ret    
   1400139cc:	mov    QWORD PTR [rsp+0x10],rbx
   1400139d1:	mov    QWORD PTR [rsp+0x18],rbp
   1400139d6:	push   rsi
   1400139d7:	push   rdi
   1400139d8:	push   r12
   1400139da:	push   r13
   1400139dc:	push   r14
   1400139de:	sub    rsp,0x30
   1400139e2:	mov    esi,0x1
   1400139e7:	mov    r12,r9
   1400139ea:	mov    r14,r8
   1400139ed:	mov    r13,rdx
   1400139f0:	mov    rdi,rcx
   1400139f3:	test   BYTE PTR [rcx+0x20],sil
   1400139f7:	jne    0x140013a05
   1400139f9:	mov    rdx,QWORD PTR [rcx+0x18]
   1400139fd:	mov    ecx,esi
   1400139ff:	call   0x140009e7c
   140013a04:	int3   
   140013a05:	mov    eax,0xffff
   140013a0a:	test   rdx,rdx
   140013a0d:	je     0x140013a1a
   140013a0f:	cmp    DWORD PTR [rdx+0xc],eax
   140013a12:	jne    0x140013a1a
   140013a14:	call   0x1400064fc
   140013a19:	int3   
   140013a1a:	xor    edx,edx
   140013a1c:	call   0x140013690
   140013a21:	test   BYTE PTR [rdi+0x20],sil
   140013a25:	jne    0x140013a36
   140013a27:	mov    rdx,QWORD PTR [rdi+0x18]
   140013a2b:	mov    ecx,0x4
   140013a30:	call   0x140009e7c
   140013a35:	int3   
   140013a36:	mov    rax,QWORD PTR [rdi+0x38]
   140013a3a:	add    rax,0x2
   140013a3e:	cmp    rax,QWORD PTR [rdi+0x40]
   140013a42:	jbe    0x140013a55
   140013a44:	mov    edx,DWORD PTR [rdi+0x38]
   140013a47:	mov    rcx,rdi
   140013a4a:	sub    edx,DWORD PTR [rdi+0x40]
   140013a4d:	add    edx,0x2
   140013a50:	call   0x1400094d4
   140013a55:	mov    rax,QWORD PTR [rdi+0x38]
   140013a59:	mov    ecx,0x7fff
   140013a5e:	movzx  ebx,WORD PTR [rax]
   140013a61:	add    rax,0x2
   140013a65:	mov    QWORD PTR [rdi+0x38],rax
   140013a69:	cmp    bx,cx
   140013a6c:	jne    0x140013aae
   140013a6e:	test   BYTE PTR [rdi+0x20],sil
   140013a72:	jne    0x140013a83
   140013a74:	mov    rdx,QWORD PTR [rdi+0x18]
   140013a78:	mov    ecx,0x4
   140013a7d:	call   0x140009e7c
   140013a82:	int3   
   140013a83:	add    rax,0x4
   140013a87:	cmp    rax,QWORD PTR [rdi+0x40]
   140013a8b:	jbe    0x140013a9e
   140013a8d:	mov    edx,DWORD PTR [rdi+0x38]
   140013a90:	mov    rcx,rdi
   140013a93:	sub    edx,DWORD PTR [rdi+0x40]
   140013a96:	add    edx,0x4
   140013a99:	call   0x1400094d4
   140013a9e:	mov    rax,QWORD PTR [rdi+0x38]
   140013aa2:	mov    ebp,DWORD PTR [rax]
   140013aa4:	add    rax,0x4
   140013aa8:	mov    QWORD PTR [rdi+0x38],rax
   140013aac:	jmp    0x140013ac2
   140013aae:	movzx  eax,bx
   140013ab1:	mov    ebp,eax
   140013ab3:	shl    ebp,0x10
   140013ab6:	and    ebp,0x80008000
   140013abc:	or     ebp,eax
   140013abe:	btr    ebp,0xf
   140013ac2:	bt     ebp,0x1f
   140013ac6:	jb     0x140013af9
   140013ac8:	test   r12,r12
   140013acb:	jne    0x140013adc
   140013acd:	mov    rdx,QWORD PTR [rdi+0x18]
   140013ad1:	lea    ecx,[r12+0x5]
   140013ad6:	call   0x140009e7c
   140013adb:	int3   
   140013adc:	mov    DWORD PTR [r12],ebp
   140013ae0:	xor    eax,eax
   140013ae2:	mov    rbx,QWORD PTR [rsp+0x68]
   140013ae7:	mov    rbp,QWORD PTR [rsp+0x70]
   140013aec:	add    rsp,0x30
   140013af0:	pop    r14
   140013af2:	pop    r13
   140013af4:	pop    r12
   140013af6:	pop    rdi
   140013af7:	pop    rsi
   140013af8:	ret    
   140013af9:	mov    eax,0xffff
   140013afe:	cmp    bx,ax
   140013b01:	jne    0x140013bcf
   140013b07:	lea    rdx,[rsp+0x60]
   140013b0c:	mov    rcx,rdi
   140013b0f:	call   0x14000969c
   140013b14:	mov    rsi,rax
   140013b17:	test   rax,rax
   140013b1a:	jne    0x140013b29
   140013b1c:	mov    rdx,QWORD PTR [rdi+0x18]
   140013b20:	lea    ecx,[rax+0x6]
   140013b23:	call   0x140009e7c
   140013b28:	int3   
   140013b29:	mov    eax,DWORD PTR [rax+0xc]
   140013b2c:	btr    eax,0x1f
   140013b30:	cmp    eax,DWORD PTR [rsp+0x60]
   140013b34:	je     0x140013b69
   140013b36:	bt     DWORD PTR [rsi+0xc],0x1f
   140013b3b:	jb     0x140013b4c
   140013b3d:	mov    rdx,QWORD PTR [rdi+0x18]
   140013b41:	mov    ecx,0x7
   140013b46:	call   0x140009e7c
   140013b4b:	int3   
   140013b4c:	xor    edx,edx
   140013b4e:	mov    rcx,rdi
   140013b51:	call   0x140013574
   140013b56:	mov    rcx,QWORD PTR [rdi+0x60]
   140013b5a:	mov    ebx,DWORD PTR [rsp+0x60]
   140013b5e:	mov    rdx,rsi
   140013b61:	call   0x140008a34
   140013b66:	mov    QWORD PTR [rax],rbx
   140013b69:	mov    rcx,rdi
   140013b6c:	call   0x1400130d4
   140013b71:	mov    edx,DWORD PTR [rdi+0x50]
   140013b74:	mov    rcx,QWORD PTR [rdi+0x58]
   140013b78:	mov    ebx,0x1
   140013b7d:	mov    r8,rsi
   140013b80:	mov    r9,rbx
   140013b83:	call   0x1400140d0
   140013b88:	mov    rcx,QWORD PTR [rdi+0x60]
   140013b8c:	and    QWORD PTR [rsp+0x28],0x0
   140013b92:	lea    r8,[rsp+0x28]
   140013b97:	mov    rdx,rbx
   140013b9a:	call   0x140008834
   140013b9f:	mov    rcx,QWORD PTR [rsp+0x28]
   140013ba4:	test   rcx,rcx
   140013ba7:	jne    0x140013baf
   140013ba9:	call   0x140006520
   140013bae:	int3   
   140013baf:	mov    edx,DWORD PTR [rdi+0x50]
   140013bb2:	lea    r8,[rsp+0x20]
   140013bb7:	mov    r9,rbx
   140013bba:	mov    DWORD PTR [rsp+0x20],ebx
   140013bbe:	call   0x140013324
   140013bc3:	add    DWORD PTR [rdi+0x50],ebx
   140013bc6:	mov    eax,DWORD PTR [rsp+0x60]
   140013bca:	jmp    0x140013c8e
   140013bcf:	mov    ebx,ebp
   140013bd1:	btr    ebx,0x1f
   140013bd5:	test   ebx,ebx
   140013bd7:	je     0x140013cdd
   140013bdd:	mov    rax,QWORD PTR [rdi+0x58]
   140013be1:	mov    ecx,DWORD PTR [rax+0x10]
   140013be4:	sub    ecx,esi
   140013be6:	cmp    ebx,ecx
   140013be8:	ja     0x140013cdd
   140013bee:	mov    rcx,QWORD PTR [rdi+0x60]
   140013bf2:	and    QWORD PTR [rsp+0x20],0x0
   140013bf8:	lea    r8,[rsp+0x20]
   140013bfd:	mov    rdx,rsi
   140013c00:	call   0x140008834
   140013c05:	mov    rax,QWORD PTR [rsp+0x20]
   140013c0a:	test   rax,rax
   140013c0d:	jne    0x140013c15
   140013c0f:	call   0x140006520
   140013c14:	int3   
   140013c15:	mov    esi,ebx
   140013c17:	test   rsi,rsi
   140013c1a:	js     0x140013cd7
   140013c20:	cmp    rsi,QWORD PTR [rax+0x10]
   140013c24:	jge    0x140013cd7
   140013c2a:	mov    rax,QWORD PTR [rax+0x8]
   140013c2e:	cmp    DWORD PTR [rax+rbx*4],0x2
   140013c32:	jne    0x140013c43
   140013c34:	mov    rdx,QWORD PTR [rdi+0x18]
   140013c38:	mov    ecx,0x5
   140013c3d:	call   0x140009e7c
   140013c42:	int3   
   140013c43:	mov    rax,QWORD PTR [rdi+0x58]
   140013c47:	test   rsi,rsi
   140013c4a:	js     0x140013cd1
   140013c50:	cmp    rsi,QWORD PTR [rax+0x10]
   140013c54:	jge    0x140013cd1
   140013c56:	mov    rax,QWORD PTR [rax+0x8]
   140013c5a:	mov    rcx,QWORD PTR [rdi+0x60]
   140013c5e:	mov    rsi,QWORD PTR [rax+rbx*8]
   140013c62:	and    DWORD PTR [rsp+0x60],0x0
   140013c67:	test   rcx,rcx
   140013c6a:	je     0x140013c83
   140013c6c:	lea    r8,[rsp+0x20]
   140013c71:	mov    rdx,rsi
   140013c74:	call   0x140008834
   140013c79:	test   eax,eax
   140013c7b:	je     0x140013c83
   140013c7d:	mov    eax,DWORD PTR [rsp+0x20]
   140013c81:	jmp    0x140013c8a
   140013c83:	mov    eax,DWORD PTR [rsi+0xc]
   140013c86:	btr    eax,0x1f
   140013c8a:	mov    DWORD PTR [rsp+0x60],eax
   140013c8e:	test   r13,r13
   140013c91:	je     0x140013cb3
   140013c93:	mov    rdx,r13
   140013c96:	mov    rcx,rsi
   140013c99:	call   0x140006330
   140013c9e:	test   eax,eax
   140013ca0:	jne    0x140013caf
   140013ca2:	mov    rdx,QWORD PTR [rdi+0x18]
   140013ca6:	lea    ecx,[rax+0x6]
   140013ca9:	call   0x140009e7c
   140013cae:	int3   
   140013caf:	mov    eax,DWORD PTR [rsp+0x60]
   140013cb3:	test   r14,r14
   140013cb6:	je     0x140013cbd
   140013cb8:	mov    DWORD PTR [r14],eax
   140013cbb:	jmp    0x140013cc0
   140013cbd:	mov    DWORD PTR [rdi+0x14],eax
   140013cc0:	test   r12,r12
   140013cc3:	je     0x140013cc9
   140013cc5:	mov    DWORD PTR [r12],ebp
   140013cc9:	mov    rax,rsi
   140013ccc:	jmp    0x140013ae2
   140013cd1:	call   0x140006520
   140013cd6:	int3   
   140013cd7:	call   0x140006520
   140013cdc:	int3   
   140013cdd:	mov    rdx,QWORD PTR [rdi+0x18]
   140013ce1:	mov    ecx,0x5
   140013ce6:	call   0x140009e7c
   140013ceb:	int3   
   140013cec:	mov    QWORD PTR [rsp+0x8],rbx
   140013cf1:	push   rdi
   140013cf2:	sub    rsp,0x20
   140013cf6:	mov    eax,DWORD PTR [rdx+0x20]
   140013cf9:	mov    rdi,rdx
   140013cfc:	mov    rbx,rcx
   140013cff:	not    eax
   140013d01:	test   al,0x1
   140013d03:	je     0x140013d13
   140013d05:	mov    rdx,QWORD PTR [rcx+0x10]
   140013d09:	mov    rcx,rdi
   140013d0c:	call   0x14000991c
   140013d11:	jmp    0x140013d2a
   140013d13:	mov    rcx,rdx
   140013d16:	call   0x140009a68
   140013d1b:	or     r8,0xffffffffffffffff
   140013d1f:	mov    rcx,rbx
   140013d22:	mov    rdx,rax
   140013d25:	call   0x1400130f8
   140013d2a:	mov    r8,QWORD PTR [rbx+0x10]
   140013d2e:	mov    rdx,QWORD PTR [rbx+0x8]
   140013d32:	mov    rcx,rdi
   140013d35:	mov    rbx,QWORD PTR [rsp+0x30]
   140013d3a:	add    rsp,0x20
   140013d3e:	pop    rdi
   140013d3f:	jmp    0x1400134ac
   140013d44:	mov    QWORD PTR [rsp+0x8],rbx
   140013d49:	mov    QWORD PTR [rsp+0x10],rsi
   140013d4e:	mov    QWORD PTR [rsp+0x18],rdi
   140013d53:	push   r12
   140013d55:	sub    rsp,0x20
   140013d59:	mov    eax,DWORD PTR [rcx+0x20]
   140013d5c:	mov    rsi,rdx
   140013d5f:	mov    rdi,rcx
   140013d62:	not    eax
   140013d64:	test   al,0x1
   140013d66:	jne    0x140013d77
   140013d68:	mov    rdx,QWORD PTR [rcx+0x18]
   140013d6c:	mov    ecx,0x2
   140013d71:	call   0x140009e7c
   140013d76:	int3   
   140013d77:	xor    edx,edx
   140013d79:	call   0x140013690
   140013d7e:	xor    r12d,r12d
   140013d81:	cmp    rsi,r12
   140013d84:	jne    0x140013dc6
   140013d86:	mov    eax,DWORD PTR [rdi+0x20]
   140013d89:	not    eax
   140013d8b:	test   al,0x1
   140013d8d:	jne    0x140013d9e
   140013d8f:	mov    rdx,QWORD PTR [rdi+0x18]
   140013d93:	lea    ecx,[r12+0x2]
   140013d98:	call   0x140009e7c
   140013d9d:	int3   
   140013d9e:	mov    rax,QWORD PTR [rdi+0x38]
   140013da2:	add    rax,0x2
   140013da6:	cmp    rax,QWORD PTR [rdi+0x40]
   140013daa:	jbe    0x140013db4
   140013dac:	mov    rcx,rdi
   140013daf:	call   0x140009414
   140013db4:	mov    rax,QWORD PTR [rdi+0x38]
   140013db8:	mov    WORD PTR [rax],r12w
   140013dbc:	add    QWORD PTR [rdi+0x38],0x2
   140013dc1:	jmp    0x140013ec9
   140013dc6:	mov    rcx,QWORD PTR [rdi+0x58]
   140013dca:	mov    rdx,rsi
   140013dcd:	call   0x140008a34
   140013dd2:	mov    ebx,DWORD PTR [rax]
   140013dd4:	cmp    ebx,r12d
   140013dd7:	je     0x140013e8d
   140013ddd:	mov    eax,DWORD PTR [rdi+0x20]
   140013de0:	mov    esi,0x7fff
   140013de5:	not    eax
   140013de7:	cmp    ebx,esi
   140013de9:	jae    0x140013e1d
   140013deb:	test   al,0x1
   140013ded:	jne    0x140013dfe
   140013def:	mov    rdx,QWORD PTR [rdi+0x18]
   140013df3:	mov    ecx,0x2
   140013df8:	call   0x140009e7c
   140013dfd:	int3   
   140013dfe:	mov    rax,QWORD PTR [rdi+0x38]
   140013e02:	add    rax,0x2
   140013e06:	cmp    rax,QWORD PTR [rdi+0x40]
   140013e0a:	jbe    0x140013e14
   140013e0c:	mov    rcx,rdi
   140013e0f:	call   0x140009414
   140013e14:	mov    rax,QWORD PTR [rdi+0x38]
   140013e18:	mov    WORD PTR [rax],bx
   140013e1b:	jmp    0x140013dbc
   140013e1d:	test   al,0x1
   140013e1f:	jne    0x140013e30
   140013e21:	mov    rdx,QWORD PTR [rdi+0x18]
   140013e25:	mov    ecx,0x2
   140013e2a:	call   0x140009e7c
   140013e2f:	int3   
   140013e30:	mov    rax,QWORD PTR [rdi+0x38]
   140013e34:	add    rax,0x2
   140013e38:	cmp    rax,QWORD PTR [rdi+0x40]
   140013e3c:	jbe    0x140013e46
   140013e3e:	mov    rcx,rdi
   140013e41:	call   0x140009414
   140013e46:	mov    rax,QWORD PTR [rdi+0x38]
   140013e4a:	mov    WORD PTR [rax],si
   140013e4d:	add    QWORD PTR [rdi+0x38],0x2
   140013e52:	mov    eax,DWORD PTR [rdi+0x20]
   140013e55:	mov    rcx,QWORD PTR [rdi+0x38]
   140013e59:	not    eax
   140013e5b:	test   al,0x1
   140013e5d:	jne    0x140013e6e
   140013e5f:	mov    rdx,QWORD PTR [rdi+0x18]
   140013e63:	mov    ecx,0x2
   140013e68:	call   0x140009e7c
   140013e6d:	int3   
   140013e6e:	lea    rax,[rcx+0x4]
   140013e72:	cmp    rax,QWORD PTR [rdi+0x40]
   140013e76:	jbe    0x140013e80
   140013e78:	mov    rcx,rdi
   140013e7b:	call   0x140009414
   140013e80:	mov    rax,QWORD PTR [rdi+0x38]
   140013e84:	mov    DWORD PTR [rax],ebx
   140013e86:	add    QWORD PTR [rdi+0x38],0x4
   140013e8b:	jmp    0x140013ec9
   140013e8d:	mov    rax,QWORD PTR [rsi]
   140013e90:	mov    rcx,rsi
   140013e93:	call   QWORD PTR [rax]
   140013e95:	mov    rcx,rdi
   140013e98:	mov    rdx,rax
   140013e9b:	call   0x140013820
   140013ea0:	mov    rcx,rdi
   140013ea3:	call   0x1400130d4
   140013ea8:	mov    rcx,QWORD PTR [rdi+0x58]
   140013eac:	mov    ebx,DWORD PTR [rdi+0x50]
   140013eaf:	mov    rdx,rsi
   140013eb2:	call   0x140008a34
   140013eb7:	mov    rdx,rdi
   140013eba:	mov    rcx,rsi
   140013ebd:	mov    QWORD PTR [rax],rbx
   140013ec0:	inc    DWORD PTR [rdi+0x50]
   140013ec3:	mov    rax,QWORD PTR [rsi]
   140013ec6:	call   QWORD PTR [rax+0x10]
   140013ec9:	mov    rbx,QWORD PTR [rsp+0x30]
   140013ece:	mov    rsi,QWORD PTR [rsp+0x38]
   140013ed3:	mov    rdi,QWORD PTR [rsp+0x40]
   140013ed8:	add    rsp,0x20
   140013edc:	pop    r12
   140013ede:	ret    
   140013edf:	int3   
   140013ee0:	rex push rsi
   140013ee2:	push   rdi
   140013ee3:	push   r12
   140013ee5:	sub    rsp,0x40
   140013ee9:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140013ef2:	mov    QWORD PTR [rsp+0x68],rbx
   140013ef7:	mov    r12,rdx
   140013efa:	mov    rbx,rcx
   140013efd:	mov    esi,0x1
   140013f02:	test   BYTE PTR [rcx+0x20],sil
   140013f06:	jne    0x140013f15
   140013f08:	mov    rdx,QWORD PTR [rcx+0x18]
   140013f0c:	lea    ecx,[rsi+0x3]
   140013f0f:	call   0x140009e7c
   140013f14:	int3   
   140013f15:	lea    r9,[rsp+0x60]
   140013f1a:	lea    r8,[rsp+0x70]
   140013f1f:	call   0x1400139cc
   140013f24:	and    QWORD PTR [rsp+0x20],0x0
   140013f2a:	test   rax,rax
   140013f2d:	jne    0x140013fff
   140013f33:	mov    rax,QWORD PTR [rbx+0x58]
   140013f37:	mov    ecx,DWORD PTR [rax+0x10]
   140013f3a:	sub    ecx,esi
   140013f3c:	mov    edi,DWORD PTR [rsp+0x60]
   140013f40:	cmp    edi,ecx
   140013f42:	jbe    0x140013f53
   140013f44:	mov    rdx,QWORD PTR [rbx+0x18]
   140013f48:	mov    ecx,0x5
   140013f4d:	call   0x140009e7c
   140013f52:	int3   
   140013f53:	and    QWORD PTR [rsp+0x60],0x0
   140013f59:	lea    r8,[rsp+0x60]
   140013f5e:	mov    rdx,rsi
   140013f61:	mov    rcx,QWORD PTR [rbx+0x60]
   140013f65:	call   0x140008834
   140013f6a:	test   eax,eax
   140013f6c:	je     0x140013fb0
   140013f6e:	mov    rcx,QWORD PTR [rsp+0x60]
   140013f73:	test   rcx,rcx
   140013f76:	jne    0x140013f7e
   140013f78:	call   0x140006520
   140013f7d:	int3   
   140013f7e:	mov    eax,DWORD PTR [rcx+0x10]
   140013f81:	sub    eax,esi
   140013f83:	cmp    edi,eax
   140013f85:	ja     0x140013fb0
   140013f87:	test   rdi,rdi
   140013f8a:	js     0x140013faa
   140013f8c:	cmp    rdi,QWORD PTR [rcx+0x10]
   140013f90:	jge    0x140013faa
   140013f92:	mov    rax,QWORD PTR [rcx+0x8]
   140013f96:	cmp    DWORD PTR [rax+rdi*4],esi
   140013f99:	jne    0x140013fb0
   140013f9b:	mov    rdx,QWORD PTR [rbx+0x18]
   140013f9f:	mov    ecx,0x5
   140013fa4:	call   0x140009e7c
   140013fa9:	int3   
   140013faa:	call   0x140006520
   140013faf:	int3   
   140013fb0:	mov    rax,QWORD PTR [rbx+0x58]
   140013fb4:	test   rdi,rdi
   140013fb7:	js     0x140013ff9
   140013fb9:	cmp    rdi,QWORD PTR [rax+0x10]
   140013fbd:	jge    0x140013ff9
   140013fbf:	mov    rax,QWORD PTR [rax+0x8]
   140013fc3:	mov    rdi,QWORD PTR [rax+rdi*8]
   140013fc7:	test   rdi,rdi
   140013fca:	je     0x140014095
   140013fd0:	test   r12,r12
   140013fd3:	je     0x140014095
   140013fd9:	mov    rdx,r12
   140013fdc:	mov    rcx,rdi
   140013fdf:	call   0x140006368
   140013fe4:	test   eax,eax
   140013fe6:	jne    0x140014095
   140013fec:	mov    rdx,QWORD PTR [rbx+0x18]
   140013ff0:	lea    ecx,[rax+0x6]
   140013ff3:	call   0x140009e7c
   140013ff8:	int3   
   140013ff9:	call   0x140006520
   140013ffe:	nop
   140013fff:	mov    rcx,rax
   140014002:	call   0x1400062ec
   140014007:	mov    rdi,rax
   14001400a:	mov    QWORD PTR [rsp+0x20],rax
   14001400f:	test   rax,rax
   140014012:	jne    0x140014019
   140014014:	call   0x1400064d8
   140014019:	mov    rcx,rbx
   14001401c:	call   0x1400130d4
   140014021:	mov    edx,DWORD PTR [rbx+0x50]
   140014024:	mov    r9,rsi
   140014027:	mov    r8,rdi
   14001402a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001402e:	call   0x1400140d0
   140014033:	and    QWORD PTR [rsp+0x78],0x0
   140014039:	lea    r8,[rsp+0x78]
   14001403e:	mov    rdx,rsi
   140014041:	mov    rcx,QWORD PTR [rbx+0x60]
   140014045:	call   0x140008834
   14001404a:	xor    eax,eax
   14001404c:	mov    rcx,QWORD PTR [rsp+0x78]
   140014051:	test   rcx,rcx
   140014054:	setne  al
   140014057:	test   eax,eax
   140014059:	jne    0x140014060
   14001405b:	call   0x140006520
   140014060:	mov    DWORD PTR [rsp+0x60],0x2
   140014068:	mov    edx,DWORD PTR [rbx+0x50]
   14001406b:	mov    r9,rsi
   14001406e:	lea    r8,[rsp+0x60]
   140014073:	call   0x140013324
   140014078:	add    DWORD PTR [rbx+0x50],esi
   14001407b:	mov    esi,DWORD PTR [rbx+0x14]
   14001407e:	mov    eax,DWORD PTR [rsp+0x70]
   140014082:	mov    DWORD PTR [rbx+0x14],eax
   140014085:	mov    r8,QWORD PTR [rdi]
   140014088:	mov    rdx,rbx
   14001408b:	mov    rcx,rdi
   14001408e:	call   QWORD PTR [r8+0x10]
   140014092:	mov    DWORD PTR [rbx+0x14],esi
   140014095:	mov    rax,rdi
   140014098:	mov    rbx,QWORD PTR [rsp+0x68]
   14001409d:	add    rsp,0x40
   1400140a1:	pop    r12
   1400140a3:	pop    rdi
   1400140a4:	pop    rsi
   1400140a5:	ret    
   1400140a6:	int3   
   1400140a7:	int3   
   1400140a8:	lea    rax,[rip+0x252b9]        # 0x140039368
   1400140af:	ret    
   1400140b0:	lea    rax,[rip+0x252e9]        # 0x1400393a0
   1400140b7:	mov    QWORD PTR [rcx],rax
   1400140ba:	xor    eax,eax
   1400140bc:	mov    QWORD PTR [rcx+0x8],rax
   1400140c0:	mov    QWORD PTR [rcx+0x20],rax
   1400140c4:	mov    QWORD PTR [rcx+0x18],rax
   1400140c8:	mov    QWORD PTR [rcx+0x10],rax
   1400140cc:	mov    rax,rcx
   1400140cf:	ret    
   1400140d0:	mov    rax,rsp
   1400140d3:	mov    QWORD PTR [rax+0x8],rbx
   1400140d7:	mov    QWORD PTR [rax+0x10],rbp
   1400140db:	mov    QWORD PTR [rax+0x18],rsi
   1400140df:	mov    QWORD PTR [rax+0x20],rdi
   1400140e3:	push   r12
   1400140e5:	sub    rsp,0x20
   1400140e9:	mov    rdi,r9
   1400140ec:	mov    r12,r8
   1400140ef:	mov    rsi,rdx
   1400140f2:	mov    rbp,rcx
   1400140f5:	test   rdx,rdx
   1400140f8:	js     0x1400141c6
   1400140fe:	test   r9,r9
   140014101:	jle    0x1400141c6
   140014107:	or     r8,0xffffffffffffffff
   14001410b:	cmp    rdx,QWORD PTR [rcx+0x10]
   14001410f:	jl     0x14001411b
   140014111:	add    rdx,r9
   140014114:	call   0x140014214
   140014119:	jmp    0x140014195
   14001411b:	mov    rbx,QWORD PTR [rcx+0x10]
   14001411f:	lea    rdx,[rbx+r9*1]
   140014123:	call   0x140014214
   140014128:	mov    rcx,QWORD PTR [rbp+0x8]
   14001412c:	mov    rdx,QWORD PTR [rbp+0x10]
   140014130:	sub    rdx,rsi
   140014133:	lea    rax,[rsi+rdi*1]
   140014137:	lea    r8,[rcx+rsi*8]
   14001413b:	sub    rdx,rdi
   14001413e:	sub    rbx,rsi
   140014141:	lea    rcx,[rcx+rax*8]
   140014145:	shl    rbx,0x3
   140014149:	shl    rdx,0x3
   14001414d:	mov    r9,rbx
   140014150:	call   0x1400145a8
   140014155:	test   eax,eax
   140014157:	je     0x14001417f
   140014159:	cmp    eax,0xc
   14001415c:	je     0x140014179
   14001415e:	cmp    eax,0x16
   140014161:	je     0x140014173
   140014163:	cmp    eax,0x22
   140014166:	je     0x140014173
   140014168:	cmp    eax,0x50
   14001416b:	je     0x14001417f
   14001416d:	call   0x140006520
   140014172:	int3   
   140014173:	call   0x140006520
   140014178:	int3   
   140014179:	call   0x1400064d8
   14001417e:	int3   
   14001417f:	mov    rax,QWORD PTR [rbp+0x8]
   140014183:	mov    r8,rdi
   140014186:	xor    edx,edx
   140014188:	lea    rcx,[rax+rsi*8]
   14001418c:	shl    r8,0x3
   140014190:	call   0x140015b00
   140014195:	shl    rsi,0x3
   140014199:	mov    rax,QWORD PTR [rbp+0x8]
   14001419d:	mov    QWORD PTR [rsi+rax*1],r12
   1400141a1:	add    rsi,0x8
   1400141a5:	sub    rdi,0x1
   1400141a9:	jne    0x140014199
   1400141ab:	mov    rbx,QWORD PTR [rsp+0x30]
   1400141b0:	mov    rbp,QWORD PTR [rsp+0x38]
   1400141b5:	mov    rsi,QWORD PTR [rsp+0x40]
   1400141ba:	mov    rdi,QWORD PTR [rsp+0x48]
   1400141bf:	add    rsp,0x20
   1400141c3:	pop    r12
   1400141c5:	ret    
   1400141c6:	call   0x140006520
   1400141cb:	int3   
   1400141cc:	mov    QWORD PTR [rsp+0x8],rbx
   1400141d1:	push   rdi
   1400141d2:	sub    rsp,0x20
   1400141d6:	lea    rax,[rip+0x251c3]        # 0x1400393a0
   1400141dd:	mov    rdi,rcx
   1400141e0:	mov    ebx,edx
   1400141e2:	mov    QWORD PTR [rcx],rax
   1400141e5:	mov    rcx,QWORD PTR [rcx+0x8]
   1400141e9:	call   0x1400062d4
   1400141ee:	test   bl,0x1
   1400141f1:	je     0x1400141fb
   1400141f3:	mov    rcx,rdi
   1400141f6:	call   0x1400062d4
   1400141fb:	mov    rax,rdi
   1400141fe:	mov    rbx,QWORD PTR [rsp+0x30]
   140014203:	add    rsp,0x20
   140014207:	pop    rdi
   140014208:	ret    
   140014209:	int3   
   14001420a:	int3   
   14001420b:	int3   
   14001420c:	lea    rax,[rip+0x34b1d]        # 0x140048d30
   140014213:	ret    
   140014214:	mov    rax,rsp
   140014217:	mov    QWORD PTR [rax+0x8],rbx
   14001421b:	mov    QWORD PTR [rax+0x10],rbp
   14001421f:	mov    QWORD PTR [rax+0x18],rsi
   140014223:	mov    QWORD PTR [rax+0x20],rdi
   140014227:	push   r12
   140014229:	sub    rsp,0x20
   14001422d:	mov    rsi,rdx
   140014230:	mov    rdi,rcx
   140014233:	test   rdx,rdx
   140014236:	jns    0x14001423e
   140014238:	call   0x140006520
   14001423d:	int3   
   14001423e:	test   r8,r8
   140014241:	js     0x140014247
   140014243:	mov    QWORD PTR [rcx+0x20],r8
   140014247:	mov    rcx,QWORD PTR [rcx+0x8]
   14001424b:	test   rdx,rdx
   14001424e:	jne    0x140014269
   140014250:	call   0x1400062d4
   140014255:	and    QWORD PTR [rdi+0x8],0x0
   14001425a:	and    QWORD PTR [rdi+0x18],0x0
   14001425f:	and    QWORD PTR [rdi+0x10],0x0
   140014264:	jmp    0x14001439a
   140014269:	test   rcx,rcx
   14001426c:	jne    0x140014297
   14001426e:	mov    rbx,rdx
   140014271:	shl    rbx,0x3
   140014275:	mov    rcx,rbx
   140014278:	call   0x140006290
   14001427d:	mov    r8,rbx
   140014280:	xor    edx,edx
   140014282:	mov    rcx,rax
   140014285:	mov    QWORD PTR [rdi+0x8],rax
   140014289:	call   0x140015b00
   14001428e:	mov    QWORD PTR [rdi+0x18],rsi
   140014292:	jmp    0x140014396
   140014297:	mov    r8,QWORD PTR [rdi+0x18]
   14001429b:	cmp    rdx,r8
   14001429e:	jg     0x1400142c7
   1400142a0:	mov    rax,QWORD PTR [rdi+0x10]
   1400142a4:	cmp    rdx,rax
   1400142a7:	jle    0x140014396
   1400142ad:	mov    r8,rdx
   1400142b0:	lea    rcx,[rcx+rax*8]
   1400142b4:	xor    edx,edx
   1400142b6:	sub    r8,rax
   1400142b9:	shl    r8,0x3
   1400142bd:	call   0x140015b00
   1400142c2:	jmp    0x140014396
   1400142c7:	mov    rax,QWORD PTR [rdi+0x20]
   1400142cb:	test   rax,rax
   1400142ce:	jne    0x140014301
   1400142d0:	mov    rax,QWORD PTR [rdi+0x10]
   1400142d4:	cqo    
   1400142d6:	and    edx,0x7
   1400142d9:	add    rax,rdx
   1400142dc:	mov    edx,0x4
   1400142e1:	sar    rax,0x3
   1400142e5:	cmp    rax,rdx
   1400142e8:	mov    rcx,rax
   1400142eb:	jl     0x1400142f7
   1400142ed:	mov    eax,0x400
   1400142f2:	cmp    rcx,rax
   1400142f5:	jg     0x140014301
   1400142f7:	mov    rax,rcx
   1400142fa:	cmp    rcx,rdx
   1400142fd:	cmovl  rax,rdx
   140014301:	add    rax,r8
   140014304:	mov    rbp,rsi
   140014307:	cmp    rsi,rax
   14001430a:	cmovl  rbp,rax
   14001430e:	cmp    rbp,r8
   140014311:	jge    0x140014319
   140014313:	call   0x140006520
   140014318:	int3   
   140014319:	mov    rbx,rbp
   14001431c:	shl    rbx,0x3
   140014320:	mov    rcx,rbx
   140014323:	call   0x140006290
   140014328:	mov    r9,QWORD PTR [rdi+0x10]
   14001432c:	mov    r8,QWORD PTR [rdi+0x8]
   140014330:	shl    r9,0x3
   140014334:	mov    rdx,rbx
   140014337:	mov    rcx,rax
   14001433a:	mov    r12,rax
   14001433d:	call   0x140014510
   140014342:	test   eax,eax
   140014344:	je     0x14001436c
   140014346:	cmp    eax,0xc
   140014349:	je     0x140014366
   14001434b:	cmp    eax,0x16
   14001434e:	je     0x140014360
   140014350:	cmp    eax,0x22
   140014353:	je     0x140014360
   140014355:	cmp    eax,0x50
   140014358:	je     0x14001436c
   14001435a:	call   0x140006520
   14001435f:	int3   
   140014360:	call   0x140006520
   140014365:	int3   
   140014366:	call   0x1400064d8
   14001436b:	int3   
   14001436c:	mov    rax,QWORD PTR [rdi+0x10]
   140014370:	mov    r8,rsi
   140014373:	xor    edx,edx
   140014375:	sub    r8,rax
   140014378:	lea    rcx,[r12+rax*8]
   14001437c:	shl    r8,0x3
   140014380:	call   0x140015b00
   140014385:	mov    rcx,QWORD PTR [rdi+0x8]
   140014389:	call   0x1400062d4
   14001438e:	mov    QWORD PTR [rdi+0x8],r12
   140014392:	mov    QWORD PTR [rdi+0x18],rbp
   140014396:	mov    QWORD PTR [rdi+0x10],rsi
   14001439a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001439f:	mov    rbp,QWORD PTR [rsp+0x38]
   1400143a4:	mov    rsi,QWORD PTR [rsp+0x40]
   1400143a9:	mov    rdi,QWORD PTR [rsp+0x48]
   1400143ae:	add    rsp,0x20
   1400143b2:	pop    r12
   1400143b4:	ret    
   1400143b5:	int3   
   1400143b6:	int3   
   1400143b7:	int3   
   1400143b8:	mov    QWORD PTR [rsp+0x8],rbx
   1400143bd:	mov    QWORD PTR [rsp+0x10],rbp
   1400143c2:	mov    QWORD PTR [rsp+0x18],rsi
   1400143c7:	push   rdi
   1400143c8:	sub    rsp,0x20
   1400143cc:	mov    eax,DWORD PTR [rdx+0x20]
   1400143cf:	mov    rbp,rdx
   1400143d2:	mov    rsi,rcx
   1400143d5:	not    eax
   1400143d7:	test   al,0x1
   1400143d9:	je     0x14001440a
   1400143db:	mov    rdx,QWORD PTR [rcx+0x10]
   1400143df:	mov    rcx,rbp
   1400143e2:	call   0x14000991c
   1400143e7:	xor    edi,edi
   1400143e9:	cmp    QWORD PTR [rsi+0x10],rdi
   1400143ed:	jle    0x140014444
   1400143ef:	mov    rdx,QWORD PTR [rsi+0x8]
   1400143f3:	mov    rcx,rbp
   1400143f6:	mov    rdx,QWORD PTR [rdx+rdi*8]
   1400143fa:	call   0x140013d44
   1400143ff:	inc    rdi
   140014402:	cmp    rdi,QWORD PTR [rsi+0x10]
   140014406:	jl     0x1400143ef
   140014408:	jmp    0x140014444
   14001440a:	mov    rcx,rdx
   14001440d:	call   0x140009a68
   140014412:	or     r8,0xffffffffffffffff
   140014416:	mov    rcx,rsi
   140014419:	mov    rdx,rax
   14001441c:	call   0x140014214
   140014421:	xor    edi,edi
   140014423:	cmp    QWORD PTR [rsi+0x10],rdi
   140014427:	jle    0x140014444
   140014429:	mov    rbx,QWORD PTR [rsi+0x8]
   14001442d:	xor    edx,edx
   14001442f:	mov    rcx,rbp
   140014432:	call   0x140013ee0
   140014437:	mov    QWORD PTR [rbx+rdi*8],rax
   14001443b:	inc    rdi
   14001443e:	cmp    rdi,QWORD PTR [rsi+0x10]
   140014442:	jl     0x140014429
   140014444:	mov    rbx,QWORD PTR [rsp+0x30]
   140014449:	mov    rbp,QWORD PTR [rsp+0x38]
   14001444e:	mov    rsi,QWORD PTR [rsp+0x40]
   140014453:	add    rsp,0x20
   140014457:	pop    rdi
   140014458:	ret    
   140014459:	int3   
   14001445a:	int3   
   14001445b:	int3   
   14001445c:	sub    rsp,0x28
   140014460:	mov    ecx,0x28
   140014465:	call   0x140006290
   14001446a:	xor    edx,edx
   14001446c:	cmp    rax,rdx
   14001446f:	je     0x14001448d
   140014471:	lea    rcx,[rip+0x24f58]        # 0x1400393d0
   140014478:	mov    QWORD PTR [rax+0x8],rdx
   14001447c:	mov    QWORD PTR [rax+0x20],rdx
   140014480:	mov    QWORD PTR [rax+0x18],rdx
   140014484:	mov    QWORD PTR [rax+0x10],rdx
   140014488:	mov    QWORD PTR [rax],rcx
   14001448b:	jmp    0x140014490
   14001448d:	mov    rax,rdx
   140014490:	add    rsp,0x28
   140014494:	ret    
   140014495:	int3   
   140014496:	int3   
   140014497:	int3   
   140014498:	mov    QWORD PTR [rsp+0x8],rbx
   14001449d:	push   rdi
   14001449e:	sub    rsp,0x20
   1400144a2:	lea    rax,[rip+0x24f27]        # 0x1400393d0
   1400144a9:	mov    rdi,rcx
   1400144ac:	mov    ebx,edx
   1400144ae:	mov    QWORD PTR [rcx],rax
   1400144b1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400144b5:	call   0x1400062d4
   1400144ba:	test   bl,0x1
   1400144bd:	je     0x1400144c7
   1400144bf:	mov    rcx,rdi
   1400144c2:	call   0x1400062d4
   1400144c7:	mov    rax,rdi
   1400144ca:	mov    rbx,QWORD PTR [rsp+0x30]
   1400144cf:	add    rsp,0x20
   1400144d3:	pop    rdi
   1400144d4:	ret    
   1400144d5:	int3   
   1400144d6:	int3   
   1400144d7:	int3   
   1400144d8:	int3   
   1400144d9:	int3   
   1400144da:	int3   
   1400144db:	int3   
   1400144dc:	int3   
   1400144dd:	int3   
   1400144de:	int3   
   1400144df:	int3   
   1400144e0:	int3   
   1400144e1:	int3   
   1400144e2:	int3   
   1400144e3:	int3   
   1400144e4:	int3   
   1400144e5:	int3   
   1400144e6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400144f0:	cmp    rcx,QWORD PTR [rip+0x348c9]        # 0x140048dc0
   1400144f7:	jne    0x14001450a
   1400144f9:	rol    rcx,0x10
   1400144fd:	test   cx,0xffff
   140014502:	jne    0x140014506
   140014504:	repz ret 
   140014506:	ror    rcx,0x10
   14001450a:	jmp    0x140017310
   14001450f:	int3   
   140014510:	mov    QWORD PTR [rsp+0x8],rbx
   140014515:	mov    QWORD PTR [rsp+0x10],rsi
   14001451a:	push   rdi
   14001451b:	sub    rsp,0x30
   14001451f:	mov    rbx,r9
   140014522:	mov    rsi,r8
   140014525:	mov    rdi,rdx
   140014528:	test   r9,r9
   14001452b:	jne    0x140014531
   14001452d:	xor    eax,eax
   14001452f:	jmp    0x140014597
   140014531:	test   rcx,rcx
   140014534:	jne    0x14001455b
   140014536:	call   0x140015f48
   14001453b:	mov    ebx,0x16
   140014540:	and    QWORD PTR [rsp+0x20],0x0
   140014546:	xor    r9d,r9d
   140014549:	xor    r8d,r8d
   14001454c:	xor    edx,edx
   14001454e:	xor    ecx,ecx
   140014550:	mov    DWORD PTR [rax],ebx
   140014552:	call   0x1400149a8
   140014557:	mov    eax,ebx
   140014559:	jmp    0x140014597
   14001455b:	test   r8,r8
   14001455e:	je     0x140014572
   140014560:	cmp    rdx,rbx
   140014563:	jb     0x140014572
   140014565:	mov    r8,rbx
   140014568:	mov    rdx,rsi
   14001456b:	call   0x1400160c0
   140014570:	jmp    0x14001452d
   140014572:	mov    r8,rdx
   140014575:	xor    edx,edx
   140014577:	call   0x140015b00
   14001457c:	test   rsi,rsi
   14001457f:	je     0x140014536
   140014581:	cmp    rdi,rbx
   140014584:	jae    0x140014592
   140014586:	call   0x140015f48
   14001458b:	mov    ebx,0x22
   140014590:	jmp    0x140014540
   140014592:	mov    eax,0x16
   140014597:	mov    rbx,QWORD PTR [rsp+0x40]
   14001459c:	mov    rsi,QWORD PTR [rsp+0x48]
   1400145a1:	add    rsp,0x30
   1400145a5:	pop    rdi
   1400145a6:	ret    
   1400145a7:	int3   
   1400145a8:	rex push rbx
   1400145aa:	sub    rsp,0x30
   1400145ae:	mov    rax,r8
   1400145b1:	test   r9,r9
   1400145b4:	je     0x140014601
   1400145b6:	test   rcx,rcx
   1400145b9:	jne    0x1400145e0
   1400145bb:	call   0x140015f48
   1400145c0:	mov    ebx,0x16
   1400145c5:	and    QWORD PTR [rsp+0x20],0x0
   1400145cb:	xor    r9d,r9d
   1400145ce:	xor    r8d,r8d
   1400145d1:	xor    edx,edx
   1400145d3:	xor    ecx,ecx
   1400145d5:	mov    DWORD PTR [rax],ebx
   1400145d7:	call   0x1400149a8
   1400145dc:	mov    eax,ebx
   1400145de:	jmp    0x140014603
   1400145e0:	test   rax,rax
   1400145e3:	je     0x1400145bb
   1400145e5:	cmp    rdx,r9
   1400145e8:	jae    0x1400145f6
   1400145ea:	call   0x140015f48
   1400145ef:	mov    ebx,0x22
   1400145f4:	jmp    0x1400145c5
   1400145f6:	mov    r8,r9
   1400145f9:	mov    rdx,rax
   1400145fc:	call   0x1400160c0
   140014601:	xor    eax,eax
   140014603:	add    rsp,0x30
   140014607:	pop    rbx
   140014608:	ret    
   140014609:	int3   
   14001460a:	int3   
   14001460b:	int3   
   14001460c:	and    QWORD PTR [rcx+0x8],0x0
   140014611:	and    DWORD PTR [rcx+0x10],0x0
   140014615:	lea    rax,[rip+0x24dfc]        # 0x140039418
   14001461c:	mov    QWORD PTR [rcx],rax
   14001461f:	mov    rax,rcx
   140014622:	ret    
   140014623:	int3   
   140014624:	mov    QWORD PTR [rsp+0x8],rbx
   140014629:	mov    QWORD PTR [rsp+0x10],rsi
   14001462e:	push   rdi
   14001462f:	sub    rsp,0x20
   140014633:	lea    rax,[rip+0x24dde]        # 0x140039418
   14001463a:	mov    rbx,rcx
   14001463d:	mov    rdi,rdx
   140014640:	mov    QWORD PTR [rcx],rax
   140014643:	mov    rcx,QWORD PTR [rdx]
   140014646:	test   rcx,rcx
   140014649:	je     0x140014676
   14001464b:	call   0x140015c00
   140014650:	mov    rsi,rax
   140014653:	lea    rcx,[rax+0x1]
   140014657:	call   0x140014f50
   14001465c:	mov    QWORD PTR [rbx+0x8],rax
   140014660:	test   rax,rax
   140014663:	je     0x14001467b
   140014665:	mov    r8,QWORD PTR [rdi]
   140014668:	lea    rdx,[rsi+0x1]
   14001466c:	mov    rcx,rax
   14001466f:	call   0x1400164d8
   140014674:	jmp    0x14001467b
   140014676:	and    QWORD PTR [rbx+0x8],0x0
   14001467b:	mov    rsi,QWORD PTR [rsp+0x38]
   140014680:	mov    DWORD PTR [rbx+0x10],0x1
   140014687:	mov    rax,rbx
   14001468a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001468f:	add    rsp,0x20
   140014693:	pop    rdi
   140014694:	ret    
   140014695:	int3   
   140014696:	int3   
   140014697:	int3   
   140014698:	mov    QWORD PTR [rsp+0x8],rbx
   14001469d:	mov    QWORD PTR [rsp+0x10],rsi
   1400146a2:	push   rdi
   1400146a3:	sub    rsp,0x20
   1400146a7:	lea    rax,[rip+0x24d6a]        # 0x140039418
   1400146ae:	mov    rdi,rdx
   1400146b1:	mov    rbx,rcx
   1400146b4:	mov    QWORD PTR [rcx],rax
   1400146b7:	mov    eax,DWORD PTR [rdx+0x10]
   1400146ba:	mov    DWORD PTR [rcx+0x10],eax
   1400146bd:	test   eax,eax
   1400146bf:	je     0x1400146fd
   1400146c1:	mov    rcx,QWORD PTR [rdx+0x8]
   1400146c5:	test   rcx,rcx
   1400146c8:	je     0x1400146f6
   1400146ca:	call   0x140015c00
   1400146cf:	mov    rsi,rax
   1400146d2:	lea    rcx,[rax+0x1]
   1400146d6:	call   0x140014f50
   1400146db:	mov    QWORD PTR [rbx+0x8],rax
   1400146df:	test   rax,rax
   1400146e2:	je     0x140014705
   1400146e4:	mov    r8,QWORD PTR [rdi+0x8]
   1400146e8:	lea    rdx,[rsi+0x1]
   1400146ec:	mov    rcx,rax
   1400146ef:	call   0x1400164d8
   1400146f4:	jmp    0x140014705
   1400146f6:	and    QWORD PTR [rbx+0x8],0x0
   1400146fb:	jmp    0x140014705
   1400146fd:	mov    rax,QWORD PTR [rdx+0x8]
   140014701:	mov    QWORD PTR [rcx+0x8],rax
   140014705:	mov    rsi,QWORD PTR [rsp+0x38]
   14001470a:	mov    rax,rbx
   14001470d:	mov    rbx,QWORD PTR [rsp+0x30]
   140014712:	add    rsp,0x20
   140014716:	pop    rdi
   140014717:	ret    
   140014718:	sub    rsp,0x28
   14001471c:	cmp    DWORD PTR [rcx+0x10],0x0
   140014720:	lea    rax,[rip+0x24cf1]        # 0x140039418
   140014727:	mov    QWORD PTR [rcx],rax
   14001472a:	je     0x140014735
   14001472c:	mov    rcx,QWORD PTR [rcx+0x8]
   140014730:	call   0x140014f10
   140014735:	add    rsp,0x28
   140014739:	ret    
   14001473a:	int3   
   14001473b:	int3   
   14001473c:	mov    rax,QWORD PTR [rcx+0x8]
   140014740:	test   rax,rax
   140014743:	jne    0x14001474c
   140014745:	lea    rax,[rip+0x24cdc]        # 0x140039428
   14001474c:	ret    
   14001474d:	int3   
   14001474e:	int3   
   14001474f:	int3   
   140014750:	mov    QWORD PTR [rsp+0x10],rdx
   140014755:	push   rbx
   140014756:	sub    rsp,0x20
   14001475a:	lea    rdx,[rsp+0x38]
   14001475f:	mov    rbx,rcx
   140014762:	call   0x140014624
   140014767:	lea    r11,[rip+0x24cda]        # 0x140039448
   14001476e:	mov    rax,rbx
   140014771:	mov    QWORD PTR [rbx],r11
   140014774:	add    rsp,0x20
   140014778:	pop    rbx
   140014779:	ret    
   14001477a:	int3   
   14001477b:	int3   
   14001477c:	rex push rbx
   14001477e:	sub    rsp,0x20
   140014782:	mov    rbx,rcx
   140014785:	call   0x140014698
   14001478a:	lea    r11,[rip+0x24cb7]        # 0x140039448
   140014791:	mov    QWORD PTR [rbx],r11
   140014794:	mov    rax,rbx
   140014797:	add    rsp,0x20
   14001479b:	pop    rbx
   14001479c:	ret    
   14001479d:	int3   
   14001479e:	int3   
   14001479f:	int3   
   1400147a0:	lea    rax,[rip+0x24ca1]        # 0x140039448
   1400147a7:	mov    QWORD PTR [rcx],rax
   1400147aa:	jmp    0x140014718
   1400147af:	int3   
   1400147b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400147b5:	push   rdi
   1400147b6:	sub    rsp,0x20
   1400147ba:	mov    ebx,edx
   1400147bc:	mov    rdi,rcx
   1400147bf:	call   0x140014718
   1400147c4:	test   bl,0x1
   1400147c7:	je     0x1400147d1
   1400147c9:	mov    rcx,rdi
   1400147cc:	call   0x1400062d4
   1400147d1:	mov    rax,rdi
   1400147d4:	mov    rbx,QWORD PTR [rsp+0x30]
   1400147d9:	add    rsp,0x20
   1400147dd:	pop    rdi
   1400147de:	ret    
   1400147df:	int3   
   1400147e0:	mov    QWORD PTR [rsp+0x8],rbx
   1400147e5:	push   rdi
   1400147e6:	sub    rsp,0x20
   1400147ea:	lea    rax,[rip+0x24c57]        # 0x140039448
   1400147f1:	mov    ebx,edx
   1400147f3:	mov    rdi,rcx
   1400147f6:	mov    QWORD PTR [rcx],rax
   1400147f9:	call   0x140014718
   1400147fe:	test   bl,0x1
   140014801:	je     0x14001480b
   140014803:	mov    rcx,rdi
   140014806:	call   0x1400062d4
   14001480b:	mov    rax,rdi
   14001480e:	mov    rbx,QWORD PTR [rsp+0x30]
   140014813:	add    rsp,0x20
   140014817:	pop    rdi
   140014818:	ret    
   140014819:	int3   
   14001481a:	int3   
   14001481b:	int3   
   14001481c:	mov    QWORD PTR [rsp+0x8],rbx
   140014821:	push   rdi
   140014822:	sub    rsp,0x20
   140014826:	lea    rax,[rip+0x24c33]        # 0x140039460
   14001482d:	mov    ebx,edx
   14001482f:	mov    rdi,rcx
   140014832:	mov    QWORD PTR [rcx],rax
   140014835:	call   0x14001745c
   14001483a:	test   bl,0x1
   14001483d:	je     0x140014847
   14001483f:	mov    rcx,rdi
   140014842:	call   0x1400062d4
   140014847:	mov    rax,rdi
   14001484a:	mov    rbx,QWORD PTR [rsp+0x30]
   14001484f:	add    rsp,0x20
   140014853:	pop    rdi
   140014854:	ret    
   140014855:	int3   
   140014856:	int3   
   140014857:	int3   
   140014858:	sub    rsp,0x28
   14001485c:	mov    rax,rdx
   14001485f:	lea    rdx,[rcx+0x11]
   140014863:	lea    rcx,[rax+0x11]
   140014867:	call   0x1400174e0
   14001486c:	xor    ecx,ecx
   14001486e:	cmp    eax,ecx
   140014870:	sete   al
   140014873:	add    rsp,0x28
   140014877:	ret    
   140014878:	mov    QWORD PTR [rip+0x39c79],rcx        # 0x14004e4f8
   14001487f:	ret    
   140014880:	rex push rbx
   140014882:	sub    rsp,0x5e0
   140014889:	and    DWORD PTR [rsp+0x70],0x0
   14001488e:	lea    rcx,[rsp+0x74]
   140014893:	xor    edx,edx
   140014895:	mov    r8d,0x94
   14001489b:	call   0x140015b00
   1400148a0:	lea    r11,[rsp+0x70]
   1400148a5:	lea    rax,[rsp+0x110]
   1400148ad:	lea    rcx,[rsp+0x110]
   1400148b5:	mov    QWORD PTR [rsp+0x48],r11
   1400148ba:	mov    QWORD PTR [rsp+0x50],rax
   1400148bf:	call   QWORD PTR [rip+0x21a0b]        # 0x1400362d0
   1400148c5:	mov    rbx,QWORD PTR [rsp+0x208]
   1400148cd:	lea    rdx,[rsp+0x40]
   1400148d2:	mov    rcx,rbx
   1400148d5:	xor    r8d,r8d
   1400148d8:	call   0x140031fae
   1400148dd:	test   rax,rax
   1400148e0:	je     0x14001491d
   1400148e2:	and    QWORD PTR [rsp+0x38],0x0
   1400148e8:	mov    rdx,QWORD PTR [rsp+0x40]
   1400148ed:	lea    rcx,[rsp+0x60]
   1400148f2:	mov    QWORD PTR [rsp+0x30],rcx
   1400148f7:	lea    rcx,[rsp+0x58]
   1400148fc:	mov    r9,rax
   1400148ff:	mov    QWORD PTR [rsp+0x28],rcx
   140014904:	lea    rcx,[rsp+0x110]
   14001490c:	mov    r8,rbx
   14001490f:	mov    QWORD PTR [rsp+0x20],rcx
   140014914:	xor    ecx,ecx
   140014916:	call   0x140031fa8
   14001491b:	jmp    0x14001493d
   14001491d:	mov    rax,QWORD PTR [rsp+0x5e8]
   140014925:	mov    QWORD PTR [rsp+0x208],rax
   14001492d:	lea    rax,[rsp+0x5e8]
   140014935:	mov    QWORD PTR [rsp+0x1a8],rax
   14001493d:	mov    rax,QWORD PTR [rsp+0x5e8]
   140014945:	mov    DWORD PTR [rsp+0x70],0xc0000417
   14001494d:	mov    DWORD PTR [rsp+0x74],0x1
   140014955:	mov    QWORD PTR [rsp+0x80],rax
   14001495d:	call   QWORD PTR [rip+0x21985]        # 0x1400362e8
   140014963:	xor    ecx,ecx
   140014965:	mov    ebx,eax
   140014967:	call   QWORD PTR [rip+0x21983]        # 0x1400362f0
   14001496d:	lea    rcx,[rsp+0x48]
   140014972:	call   QWORD PTR [rip+0x21980]        # 0x1400362f8
   140014978:	test   eax,eax
   14001497a:	jne    0x140014988
   14001497c:	test   ebx,ebx
   14001497e:	jne    0x140014988
   140014980:	lea    ecx,[rax+0x2]
   140014983:	call   0x140017590
   140014988:	call   QWORD PTR [rip+0x219a2]        # 0x140036330
   14001498e:	mov    edx,0xc0000417
   140014993:	mov    rcx,rax
   140014996:	call   QWORD PTR [rip+0x21964]        # 0x140036300
   14001499c:	add    rsp,0x5e0
   1400149a3:	pop    rbx
   1400149a4:	ret    
   1400149a5:	int3   
   1400149a6:	int3   
   1400149a7:	int3   
   1400149a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400149ad:	mov    QWORD PTR [rsp+0x10],rbp
   1400149b2:	mov    QWORD PTR [rsp+0x18],rsi
   1400149b7:	push   rdi
   1400149b8:	sub    rsp,0x30
   1400149bc:	mov    rbp,rcx
   1400149bf:	mov    rcx,QWORD PTR [rip+0x39b32]        # 0x14004e4f8
   1400149c6:	mov    ebx,r9d
   1400149c9:	mov    rdi,r8
   1400149cc:	mov    rsi,rdx
   1400149cf:	call   0x1400175ac
   1400149d4:	test   rax,rax
   1400149d7:	je     0x1400149f3
   1400149d9:	mov    r10,QWORD PTR [rsp+0x60]
   1400149de:	mov    r9d,ebx
   1400149e1:	mov    r8,rdi
   1400149e4:	mov    rdx,rsi
   1400149e7:	mov    rcx,rbp
   1400149ea:	mov    QWORD PTR [rsp+0x20],r10
   1400149ef:	call   rax
   1400149f1:	jmp    0x140014a18
   1400149f3:	mov    ecx,0x2
   1400149f8:	call   0x140017590
   1400149fd:	mov    r11,QWORD PTR [rsp+0x60]
   140014a02:	mov    r9d,ebx
   140014a05:	mov    r8,rdi
   140014a08:	mov    rdx,rsi
   140014a0b:	mov    rcx,rbp
   140014a0e:	mov    QWORD PTR [rsp+0x20],r11
   140014a13:	call   0x140014880
   140014a18:	mov    rbx,QWORD PTR [rsp+0x40]
   140014a1d:	mov    rbp,QWORD PTR [rsp+0x48]
   140014a22:	mov    rsi,QWORD PTR [rsp+0x50]
   140014a27:	add    rsp,0x30
   140014a2b:	pop    rdi
   140014a2c:	ret    
   140014a2d:	int3   
   140014a2e:	int3   
   140014a2f:	int3   
   140014a30:	sub    rsp,0x38
   140014a34:	and    QWORD PTR [rsp+0x20],0x0
   140014a3a:	xor    r9d,r9d
   140014a3d:	xor    r8d,r8d
   140014a40:	xor    edx,edx
   140014a42:	xor    ecx,ecx
   140014a44:	call   0x1400149a8
   140014a49:	add    rsp,0x38
   140014a4d:	ret    
   140014a4e:	int3   
   140014a4f:	int3   
   140014a50:	test   r8,r8
   140014a53:	je     0x140014a62
   140014a55:	cmp    BYTE PTR [rcx],dl
   140014a57:	je     0x140014a62
   140014a59:	inc    rcx
   140014a5c:	sub    r8,0x1
   140014a60:	jne    0x140014a55
   140014a62:	neg    r8
   140014a65:	sbb    rax,rax
   140014a68:	and    rax,rcx
   140014a6b:	ret    
   140014a6c:	rex push rbx
   140014a6e:	sub    rsp,0x20
   140014a72:	mov    rbx,rcx
   140014a75:	mov    BYTE PTR [rcx+0x18],0x0
   140014a79:	test   rdx,rdx
   140014a7c:	jne    0x140014b04
   140014a82:	call   0x140017714
   140014a87:	mov    QWORD PTR [rbx+0x10],rax
   140014a8b:	mov    rdx,QWORD PTR [rax+0xc0]
   140014a92:	mov    QWORD PTR [rbx],rdx
   140014a95:	mov    rcx,QWORD PTR [rax+0xb8]
   140014a9c:	mov    QWORD PTR [rbx+0x8],rcx
   140014aa0:	mov    rcx,QWORD PTR [rip+0x34b79]        # 0x140049620
   140014aa7:	cmp    rdx,rcx
   140014aaa:	je     0x140014ac2
   140014aac:	mov    eax,DWORD PTR [rax+0xc8]
   140014ab2:	test   DWORD PTR [rip+0x349f0],eax        # 0x1400494a8
   140014ab8:	jne    0x140014ac2
   140014aba:	call   0x140018464
   140014abf:	mov    QWORD PTR [rbx],rax
   140014ac2:	mov    rax,QWORD PTR [rip+0x348d7]        # 0x1400493a0
   140014ac9:	cmp    QWORD PTR [rbx+0x8],rax
   140014acd:	je     0x140014aea
   140014acf:	mov    rax,QWORD PTR [rbx+0x10]
   140014ad3:	mov    ecx,DWORD PTR [rax+0xc8]
   140014ad9:	test   DWORD PTR [rip+0x349c9],ecx        # 0x1400494a8
   140014adf:	jne    0x140014aea
   140014ae1:	call   0x140017b6c
   140014ae6:	mov    QWORD PTR [rbx+0x8],rax
   140014aea:	mov    rax,QWORD PTR [rbx+0x10]
   140014aee:	test   BYTE PTR [rax+0xc8],0x2
   140014af5:	jne    0x140014b0c
   140014af7:	or     DWORD PTR [rax+0xc8],0x2
   140014afe:	mov    BYTE PTR [rbx+0x18],0x1
   140014b02:	jmp    0x140014b0c
   140014b04:	movdqu xmm0,XMMWORD PTR [rdx]
   140014b08:	movdqu XMMWORD PTR [rcx],xmm0
   140014b0c:	mov    rax,rbx
   140014b0f:	add    rsp,0x20
   140014b13:	pop    rbx
   140014b14:	ret    
   140014b15:	int3   
   140014b16:	int3   
   140014b17:	int3   
   140014b18:	mov    QWORD PTR [rsp+0x10],rbp
   140014b1d:	push   rdi
   140014b1e:	sub    rsp,0x70
   140014b22:	movsxd rdi,ecx
   140014b25:	lea    rcx,[rsp+0x50]
   140014b2a:	call   0x140014a6c
   140014b2f:	cmp    edi,0x100
   140014b35:	jae    0x140014b99
   140014b37:	mov    rdx,QWORD PTR [rsp+0x50]
   140014b3c:	cmp    DWORD PTR [rdx+0x10c],0x1
   140014b43:	jle    0x140014b5d
   140014b45:	lea    r8,[rsp+0x50]
   140014b4a:	mov    edx,0x1
   140014b4f:	mov    ecx,edi
   140014b51:	call   0x14001991c
   140014b56:	mov    rdx,QWORD PTR [rsp+0x50]
   140014b5b:	jmp    0x140014b6b
   140014b5d:	mov    rax,QWORD PTR [rdx+0x140]
   140014b64:	movzx  eax,WORD PTR [rax+rdi*2]
   140014b68:	and    eax,0x1
   140014b6b:	test   eax,eax
   140014b6d:	je     0x140014b7f
   140014b6f:	mov    rax,QWORD PTR [rdx+0x148]
   140014b76:	movzx  eax,BYTE PTR [rax+rdi*1]
   140014b7a:	jmp    0x140014c67
   140014b7f:	cmp    BYTE PTR [rsp+0x68],0x0
   140014b84:	je     0x140014b92
   140014b86:	mov    rax,QWORD PTR [rsp+0x60]
   140014b8b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140014b92:	mov    eax,edi
   140014b94:	jmp    0x140014c7a
   140014b99:	mov    rax,QWORD PTR [rsp+0x50]
   140014b9e:	cmp    DWORD PTR [rax+0x10c],0x1
   140014ba5:	jle    0x140014bdd
   140014ba7:	mov    ebp,edi
   140014ba9:	lea    rdx,[rsp+0x50]
   140014bae:	sar    ebp,0x8
   140014bb1:	movzx  ecx,bpl
   140014bb5:	call   0x14001988c
   140014bba:	test   eax,eax
   140014bbc:	je     0x140014bdd
   140014bbe:	mov    BYTE PTR [rsp+0x80],bpl
   140014bc6:	mov    BYTE PTR [rsp+0x81],dil
   140014bce:	mov    BYTE PTR [rsp+0x82],0x0
   140014bd6:	mov    edx,0x2
   140014bdb:	jmp    0x140014bfd
   140014bdd:	call   0x140015f48
   140014be2:	mov    edx,0x1
   140014be7:	mov    DWORD PTR [rax],0x2a
   140014bed:	mov    BYTE PTR [rsp+0x80],dil
   140014bf5:	mov    BYTE PTR [rsp+0x81],0x0
   140014bfd:	mov    rcx,QWORD PTR [rsp+0x50]
   140014c02:	mov    DWORD PTR [rsp+0x40],0x1
   140014c0a:	lea    r9,[rsp+0x80]
   140014c12:	mov    eax,DWORD PTR [rcx+0x4]
   140014c15:	mov    r8d,0x100
   140014c1b:	mov    DWORD PTR [rsp+0x38],eax
   140014c1f:	lea    rax,[rsp+0x90]
   140014c27:	mov    DWORD PTR [rsp+0x30],0x3
   140014c2f:	mov    QWORD PTR [rsp+0x28],rax
   140014c34:	mov    DWORD PTR [rsp+0x20],edx
   140014c38:	mov    edx,DWORD PTR [rcx+0x14]
   140014c3b:	lea    rcx,[rsp+0x50]
   140014c40:	call   0x1400197f4
   140014c45:	test   eax,eax
   140014c47:	je     0x140014b7f
   140014c4d:	cmp    eax,0x1
   140014c50:	movzx  eax,BYTE PTR [rsp+0x90]
   140014c58:	je     0x140014c67
   140014c5a:	movzx  ecx,BYTE PTR [rsp+0x91]
   140014c62:	shl    eax,0x8
   140014c65:	or     eax,ecx
   140014c67:	cmp    BYTE PTR [rsp+0x68],0x0
   140014c6c:	je     0x140014c7a
   140014c6e:	mov    rcx,QWORD PTR [rsp+0x60]
   140014c73:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014c7a:	mov    rbp,QWORD PTR [rsp+0x88]
   140014c82:	add    rsp,0x70
   140014c86:	pop    rdi
   140014c87:	ret    
   140014c88:	sub    rsp,0x28
   140014c8c:	cmp    DWORD PTR [rip+0x39e7d],0x0        # 0x14004eb10
   140014c93:	jne    0x140014ca4
   140014c95:	lea    eax,[rcx-0x41]
   140014c98:	cmp    eax,0x19
   140014c9b:	ja     0x140014ca0
   140014c9d:	add    ecx,0x20
   140014ca0:	mov    eax,ecx
   140014ca2:	jmp    0x140014cab
   140014ca4:	xor    edx,edx
   140014ca6:	call   0x140014b18
   140014cab:	add    rsp,0x28
   140014caf:	ret    
   140014cb0:	rex push rbp
   140014cb2:	push   r12
   140014cb4:	push   r13
   140014cb6:	sub    rsp,0x60
   140014cba:	lea    rbp,[rsp+0x50]
   140014cbf:	mov    QWORD PTR [rbp+0x30],rbx
   140014cc3:	mov    QWORD PTR [rbp+0x38],rsi
   140014cc7:	mov    QWORD PTR [rbp+0x40],rdi
   140014ccb:	mov    rax,QWORD PTR [rip+0x340ee]        # 0x140048dc0
   140014cd2:	xor    rax,rbp
   140014cd5:	mov    QWORD PTR [rbp+0x0],rax
   140014cd9:	mov    r12,r8
   140014cdc:	mov    rsi,rdx
   140014cdf:	mov    rbx,rcx
   140014ce2:	test   rcx,rcx
   140014ce5:	jne    0x140014d0d
   140014ce7:	call   0x140015f48
   140014cec:	mov    ebx,0x16
   140014cf1:	and    QWORD PTR [rsp+0x20],0x0
   140014cf7:	xor    r9d,r9d
   140014cfa:	xor    r8d,r8d
   140014cfd:	xor    edx,edx
   140014cff:	xor    ecx,ecx
   140014d01:	mov    DWORD PTR [rax],ebx
   140014d03:	call   0x1400149a8
   140014d08:	jmp    0x140014e97
   140014d0d:	call   0x140015e4c
   140014d12:	cmp    rax,rsi
   140014d15:	jb     0x140014d1c
   140014d17:	mov    BYTE PTR [rbx],0x0
   140014d1a:	jmp    0x140014ce7
   140014d1c:	mov    rax,QWORD PTR [r12]
   140014d20:	mov    edx,DWORD PTR [rax+0x14]
   140014d23:	test   edx,edx
   140014d25:	je     0x140014d87
   140014d27:	mov    eax,DWORD PTR [rax+0x4]
   140014d2a:	mov    DWORD PTR [rsp+0x40],0x1
   140014d32:	mov    r9,rbx
   140014d35:	mov    DWORD PTR [rsp+0x38],eax
   140014d39:	and    DWORD PTR [rsp+0x30],0x0
   140014d3e:	and    QWORD PTR [rsp+0x28],0x0
   140014d44:	or     DWORD PTR [rsp+0x20],0xffffffff
   140014d49:	mov    r8d,0x100
   140014d4f:	mov    rcx,r12
   140014d52:	call   0x1400197f4
   140014d57:	movsxd r13,eax
   140014d5a:	test   eax,eax
   140014d5c:	jne    0x140014d93
   140014d5e:	call   0x140015f48
   140014d63:	mov    ebx,0x2a
   140014d68:	mov    DWORD PTR [rax],ebx
   140014d6a:	call   0x140015f48
   140014d6f:	mov    eax,DWORD PTR [rax]
   140014d71:	jmp    0x140014e99
   140014d76:	mov    al,BYTE PTR [rbx]
   140014d78:	cmp    al,0x41
   140014d7a:	jl     0x140014d84
   140014d7c:	cmp    al,0x5a
   140014d7e:	jg     0x140014d84
   140014d80:	add    al,0x20
   140014d82:	mov    BYTE PTR [rbx],al
   140014d84:	inc    rbx
   140014d87:	cmp    BYTE PTR [rbx],0x0
   140014d8a:	jne    0x140014d76
   140014d8c:	xor    eax,eax
   140014d8e:	jmp    0x140014e99
   140014d93:	mov    rcx,r13
   140014d96:	cmp    rsi,r13
   140014d99:	jae    0x140014dad
   140014d9b:	mov    BYTE PTR [rbx],0x0
   140014d9e:	call   0x140015f48
   140014da3:	mov    ebx,0x22
   140014da8:	jmp    0x140014cf1
   140014dad:	test   eax,eax
   140014daf:	jle    0x140014e17
   140014db1:	xor    edx,edx
   140014db3:	lea    rax,[rdx-0x20]
   140014db7:	div    rcx
   140014dba:	cmp    rax,0x1
   140014dbe:	jb     0x140014e17
   140014dc0:	add    rcx,0x10
   140014dc4:	cmp    rcx,0x400
   140014dcb:	ja     0x140014dfe
   140014dcd:	lea    rax,[rcx+0xf]
   140014dd1:	cmp    rax,rcx
   140014dd4:	ja     0x140014de0
   140014dd6:	movabs rax,0xffffffffffffff0
   140014de0:	and    rax,0xfffffffffffffff0
   140014de4:	call   0x1400329e0
   140014de9:	sub    rsp,rax
   140014dec:	lea    rdi,[rsp+0x50]
   140014df1:	test   rdi,rdi
   140014df4:	je     0x140014e1e
   140014df6:	mov    DWORD PTR [rdi],0xcccc
   140014dfc:	jmp    0x140014e11
   140014dfe:	call   0x140014f50
   140014e03:	mov    rdi,rax
   140014e06:	test   rax,rax
   140014e09:	je     0x140014e19
   140014e0b:	mov    DWORD PTR [rax],0xdddd
   140014e11:	add    rdi,0x10
   140014e15:	jmp    0x140014e19
   140014e17:	xor    edi,edi
   140014e19:	test   rdi,rdi
   140014e1c:	jne    0x140014e2e
   140014e1e:	call   0x140015f48
   140014e23:	mov    DWORD PTR [rax],0xc
   140014e29:	jmp    0x140014d6a
   140014e2e:	mov    rcx,QWORD PTR [r12]
   140014e32:	mov    DWORD PTR [rsp+0x40],0x1
   140014e3a:	mov    r9,rbx
   140014e3d:	mov    eax,DWORD PTR [rcx+0x4]
   140014e40:	mov    edx,DWORD PTR [rcx+0x14]
   140014e43:	mov    r8d,0x100
   140014e49:	mov    DWORD PTR [rsp+0x38],eax
   140014e4d:	mov    DWORD PTR [rsp+0x30],r13d
   140014e52:	mov    rcx,r12
   140014e55:	mov    QWORD PTR [rsp+0x28],rdi
   140014e5a:	or     DWORD PTR [rsp+0x20],0xffffffff
   140014e5f:	call   0x1400197f4
   140014e64:	test   eax,eax
   140014e66:	je     0x140014e7a
   140014e68:	mov    r8,rdi
   140014e6b:	mov    rdx,rsi
   140014e6e:	mov    rcx,rbx
   140014e71:	call   0x1400164d8
   140014e76:	mov    ebx,eax
   140014e78:	jmp    0x140014e86
   140014e7a:	call   0x140015f48
   140014e7f:	mov    ebx,0x2a
   140014e84:	mov    DWORD PTR [rax],ebx
   140014e86:	lea    rcx,[rdi-0x10]
   140014e8a:	cmp    DWORD PTR [rcx],0xdddd
   140014e90:	jne    0x140014e97
   140014e92:	call   0x140014f10
   140014e97:	mov    eax,ebx
   140014e99:	mov    rcx,QWORD PTR [rbp+0x0]
   140014e9d:	xor    rcx,rbp
   140014ea0:	call   0x1400144f0
   140014ea5:	mov    rbx,QWORD PTR [rbp+0x30]
   140014ea9:	mov    rsi,QWORD PTR [rbp+0x38]
   140014ead:	mov    rdi,QWORD PTR [rbp+0x40]
   140014eb1:	lea    rsp,[rbp+0x10]
   140014eb5:	pop    r13
   140014eb7:	pop    r12
   140014eb9:	pop    rbp
   140014eba:	ret    
   140014ebb:	int3   
   140014ebc:	mov    QWORD PTR [rsp+0x8],rbx
   140014ec1:	push   rdi
   140014ec2:	sub    rsp,0x40
   140014ec6:	mov    rdi,rcx
   140014ec9:	mov    rbx,rdx
   140014ecc:	lea    rcx,[rsp+0x20]
   140014ed1:	mov    rdx,r8
   140014ed4:	call   0x140014a6c
   140014ed9:	lea    r8,[rsp+0x20]
   140014ede:	mov    rdx,rbx
   140014ee1:	mov    rcx,rdi
   140014ee4:	call   0x140014cb0
   140014ee9:	cmp    BYTE PTR [rsp+0x38],0x0
   140014eee:	je     0x140014efc
   140014ef0:	mov    rcx,QWORD PTR [rsp+0x30]
   140014ef5:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140014efc:	mov    rbx,QWORD PTR [rsp+0x50]
   140014f01:	add    rsp,0x40
   140014f05:	pop    rdi
   140014f06:	ret    
   140014f07:	int3   
   140014f08:	xor    r8d,r8d
   140014f0b:	jmp    0x140014ebc
   140014f10:	test   rcx,rcx
   140014f13:	je     0x140014f4c
   140014f15:	push   rbx
   140014f16:	sub    rsp,0x20
   140014f1a:	mov    r8,rcx
   140014f1d:	mov    rcx,QWORD PTR [rip+0x39c1c]        # 0x14004eb40
   140014f24:	xor    edx,edx
   140014f26:	call   QWORD PTR [rip+0x2139c]        # 0x1400362c8
   140014f2c:	test   eax,eax
   140014f2e:	jne    0x140014f47
   140014f30:	call   0x140015f48
   140014f35:	mov    rbx,rax
   140014f38:	call   QWORD PTR [rip+0x21522]        # 0x140036460
   140014f3e:	mov    ecx,eax
   140014f40:	call   0x140015f00
   140014f45:	mov    DWORD PTR [rbx],eax
   140014f47:	add    rsp,0x20
   140014f4b:	pop    rbx
   140014f4c:	ret    
   140014f4d:	int3   
   140014f4e:	int3   
   140014f4f:	int3   
   140014f50:	mov    QWORD PTR [rsp+0x8],rbx
   140014f55:	mov    QWORD PTR [rsp+0x10],rsi
   140014f5a:	push   rdi
   140014f5b:	sub    rsp,0x20
   140014f5f:	mov    rbx,rcx
   140014f62:	cmp    rcx,0xffffffffffffffe0
   140014f66:	ja     0x140014fe4
   140014f68:	mov    edi,0x1
   140014f6d:	test   rcx,rcx
   140014f70:	cmovne rdi,rcx
   140014f74:	mov    rcx,QWORD PTR [rip+0x39bc5]        # 0x14004eb40
   140014f7b:	test   rcx,rcx
   140014f7e:	jne    0x140014fa0
   140014f80:	call   0x140019c9c
   140014f85:	mov    ecx,0x1e
   140014f8a:	call   0x140019a74
   140014f8f:	mov    ecx,0xff
   140014f94:	call   0x140016f08
   140014f99:	mov    rcx,QWORD PTR [rip+0x39ba0]        # 0x14004eb40
   140014fa0:	mov    r8,rdi
   140014fa3:	xor    edx,edx
   140014fa5:	call   QWORD PTR [rip+0x21315]        # 0x1400362c0
   140014fab:	mov    rsi,rax
   140014fae:	test   rax,rax
   140014fb1:	jne    0x140014fdf
   140014fb3:	cmp    DWORD PTR [rip+0x39eb7],eax        # 0x14004ee70
   140014fb9:	je     0x140014fc9
   140014fbb:	mov    rcx,rbx
   140014fbe:	call   0x140019ce8
   140014fc3:	test   eax,eax
   140014fc5:	je     0x140014fd4
   140014fc7:	jmp    0x140014f74
   140014fc9:	call   0x140015f48
   140014fce:	mov    DWORD PTR [rax],0xc
   140014fd4:	call   0x140015f48
   140014fd9:	mov    DWORD PTR [rax],0xc
   140014fdf:	mov    rax,rsi
   140014fe2:	jmp    0x140014ff6
   140014fe4:	call   0x140019ce8
   140014fe9:	call   0x140015f48
   140014fee:	mov    DWORD PTR [rax],0xc
   140014ff4:	xor    eax,eax
   140014ff6:	mov    rbx,QWORD PTR [rsp+0x30]
   140014ffb:	mov    rsi,QWORD PTR [rsp+0x38]
   140015000:	add    rsp,0x20
   140015004:	pop    rdi
   140015005:	ret    
   140015006:	int3   
   140015007:	int3   
   140015008:	mov    QWORD PTR [rsp+0x10],rbx
   14001500d:	push   rdi
   14001500e:	sub    rsp,0x30
   140015012:	mov    eax,0x5a4d
   140015017:	cmp    WORD PTR [rip+0xfffffffffffeafe2],ax        # 0x140000000
   14001501e:	jne    0x140015076
   140015020:	movsxd rax,DWORD PTR [rip+0xfffffffffffeb015]        # 0x14000003c
   140015027:	lea    rcx,[rip+0xfffffffffffeafd2]        # 0x140000000
   14001502e:	add    rax,rcx
   140015031:	cmp    DWORD PTR [rax],0x4550
   140015037:	je     0x140015041
   140015039:	xor    ebx,ebx
   14001503b:	mov    DWORD PTR [rsp+0x40],ebx
   14001503f:	jmp    0x14001507c
   140015041:	mov    ecx,0x20b
   140015046:	cmp    WORD PTR [rax+0x18],cx
   14001504a:	je     0x140015054
   14001504c:	xor    ebx,ebx
   14001504e:	mov    DWORD PTR [rsp+0x40],ebx
   140015052:	jmp    0x14001507c
   140015054:	cmp    DWORD PTR [rax+0x84],0xe
   14001505b:	ja     0x140015065
   14001505d:	xor    ebx,ebx
   14001505f:	mov    DWORD PTR [rsp+0x40],ebx
   140015063:	jmp    0x14001507c
   140015065:	xor    ebx,ebx
   140015067:	cmp    DWORD PTR [rax+0xf8],ebx
   14001506d:	setne  bl
   140015070:	mov    DWORD PTR [rsp+0x40],ebx
   140015074:	jmp    0x14001507c
   140015076:	xor    ebx,ebx
   140015078:	mov    DWORD PTR [rsp+0x40],ebx
   14001507c:	mov    edi,0x1
   140015081:	mov    ecx,edi
   140015083:	call   0x140019a28
   140015088:	test   eax,eax
   14001508a:	jne    0x1400150ae
   14001508c:	cmp    DWORD PTR [rip+0x3947d],0x2        # 0x14004e510
   140015093:	je     0x14001509a
   140015095:	call   0x140019c9c
   14001509a:	mov    ecx,0x1c
   14001509f:	call   0x140019a74
   1400150a4:	mov    ecx,0xff
   1400150a9:	call   0x140016f08
   1400150ae:	call   0x140017870
   1400150b3:	test   eax,eax
   1400150b5:	jne    0x1400150d9
   1400150b7:	cmp    DWORD PTR [rip+0x39452],0x2        # 0x14004e510
   1400150be:	je     0x1400150c5
   1400150c0:	call   0x140019c9c
   1400150c5:	mov    ecx,0x10
   1400150ca:	call   0x140019a74
   1400150cf:	mov    ecx,0xff
   1400150d4:	call   0x140016f08
   1400150d9:	call   0x14001a7e4
   1400150de:	nop
   1400150df:	call   0x14001a4f4
   1400150e4:	test   eax,eax
   1400150e6:	jns    0x1400150f2
   1400150e8:	mov    ecx,0x1b
   1400150ed:	call   0x140016e9c
   1400150f2:	call   QWORD PTR [rip+0x211c0]        # 0x1400362b8
   1400150f8:	mov    QWORD PTR [rip+0x3b769],rax        # 0x140050868
   1400150ff:	call   0x14001a340
   140015104:	mov    QWORD PTR [rip+0x393f5],rax        # 0x14004e500
   14001510b:	call   0x14001a248
   140015110:	test   eax,eax
   140015112:	jns    0x14001511e
   140015114:	mov    ecx,0x8
   140015119:	call   0x140016e9c
   14001511e:	call   0x140019f48
   140015123:	test   eax,eax
   140015125:	jns    0x140015131
   140015127:	mov    ecx,0x9
   14001512c:	call   0x140016e9c
   140015131:	mov    ecx,edi
   140015133:	call   0x140016fa8
   140015138:	test   eax,eax
   14001513a:	je     0x140015143
   14001513c:	mov    ecx,eax
   14001513e:	call   0x140016e9c
   140015143:	mov    r8,QWORD PTR [rip+0x393e6]        # 0x14004e530
   14001514a:	mov    QWORD PTR [rip+0x393e7],r8        # 0x14004e538
   140015151:	mov    rdx,QWORD PTR [rip+0x393c8]        # 0x14004e520
   140015158:	mov    ecx,DWORD PTR [rip+0x393be]        # 0x14004e51c
   14001515e:	call   0x1400012a0
   140015163:	mov    edi,eax
   140015165:	mov    DWORD PTR [rsp+0x20],eax
   140015169:	test   ebx,ebx
   14001516b:	jne    0x140015174
   14001516d:	mov    ecx,eax
   14001516f:	call   0x1400171e4
   140015174:	call   0x1400171fc
   140015179:	jmp    0x140015192
   14001517b:	mov    edi,eax
   14001517d:	cmp    DWORD PTR [rsp+0x40],0x0
   140015182:	jne    0x14001518c
   140015184:	mov    ecx,eax
   140015186:	call   0x1400171f0
   14001518b:	int3   
   14001518c:	call   0x14001720c
   140015191:	nop
   140015192:	mov    eax,edi
   140015194:	mov    rbx,QWORD PTR [rsp+0x48]
   140015199:	add    rsp,0x30
   14001519d:	pop    rdi
   14001519e:	ret    
   14001519f:	int3   
   1400151a0:	sub    rsp,0x28
   1400151a4:	call   0x14001a854
   1400151a9:	add    rsp,0x28
   1400151ad:	jmp    0x140015008
   1400151b2:	int3   
   1400151b3:	int3   
   1400151b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400151b9:	mov    QWORD PTR [rsp+0x18],rbp
   1400151be:	mov    QWORD PTR [rsp+0x20],rsi
   1400151c3:	push   rdi
   1400151c4:	push   r12
   1400151c6:	push   r13
   1400151c8:	push   r14
   1400151ca:	push   r15
   1400151cc:	sub    rsp,0x20
   1400151d0:	movsxd rdi,DWORD PTR [r8+0xc]
   1400151d4:	mov    r15,rcx
   1400151d7:	mov    rcx,r8
   1400151da:	mov    rbp,r9
   1400151dd:	mov    r13,r8
   1400151e0:	mov    r14,rdx
   1400151e3:	call   0x14001a994
   1400151e8:	mov    r10,QWORD PTR [r15]
   1400151eb:	mov    QWORD PTR [rbp+0x0],r10
   1400151ef:	mov    r12d,eax
   1400151f2:	test   edi,edi
   1400151f4:	je     0x14001527f
   1400151fa:	lea    rcx,[rdi+rdi*4]
   1400151fe:	lea    rsi,[rcx*4-0x14]
   140015206:	movsxd rbx,DWORD PTR [r13+0x10]
   14001520a:	add    rbx,QWORD PTR [r14+0x8]
   14001520e:	add    rbx,rsi
   140015211:	cmp    r12d,DWORD PTR [rbx+0x4]
   140015215:	jle    0x140015260
   140015217:	cmp    r12d,DWORD PTR [rbx+0x8]
   14001521b:	jg     0x140015260
   14001521d:	mov    rcx,QWORD PTR [r14]
   140015220:	lea    rdx,[rsp+0x50]
   140015225:	xor    r8d,r8d
   140015228:	call   0x140031fae
   14001522d:	movsxd r8,DWORD PTR [rbx+0x10]
   140015231:	mov    r9d,DWORD PTR [rbx+0xc]
   140015235:	add    r8,QWORD PTR [rsp+0x50]
   14001523a:	mov    r10d,DWORD PTR [rax]
   14001523d:	xor    ecx,ecx
   14001523f:	test   r9d,r9d
   140015242:	je     0x14001525b
   140015244:	lea    rdx,[r8+0xc]
   140015248:	movsxd rax,DWORD PTR [rdx]
   14001524b:	cmp    rax,r10
   14001524e:	je     0x14001525b
   140015250:	inc    ecx
   140015252:	add    rdx,0x14
   140015256:	cmp    ecx,r9d
   140015259:	jb     0x140015248
   14001525b:	cmp    ecx,r9d
   14001525e:	jb     0x14001526b
   140015260:	sub    rsi,0x14
   140015264:	add    edi,0xffffffff
   140015267:	je     0x14001527f
   140015269:	jmp    0x140015206
   14001526b:	mov    rax,QWORD PTR [r15]
   14001526e:	lea    rcx,[rcx+rcx*4]
   140015272:	movsxd rcx,DWORD PTR [r8+rcx*4+0x10]
   140015277:	mov    rcx,QWORD PTR [rcx+rax*1]
   14001527b:	mov    QWORD PTR [rbp+0x0],rcx
   14001527f:	mov    rbx,QWORD PTR [rsp+0x58]
   140015284:	mov    rsi,QWORD PTR [rsp+0x68]
   140015289:	mov    rax,rbp
   14001528c:	mov    rbp,QWORD PTR [rsp+0x60]
   140015291:	add    rsp,0x20
   140015295:	pop    r15
   140015297:	pop    r14
   140015299:	pop    r13
   14001529b:	pop    r12
   14001529d:	pop    rdi
   14001529e:	ret    
   14001529f:	int3   
   1400152a0:	sub    rsp,0x28
   1400152a4:	call   0x140017714
   1400152a9:	mov    rax,QWORD PTR [rax+0x128]
   1400152b0:	add    rsp,0x28
   1400152b4:	ret    
   1400152b5:	int3   
   1400152b6:	int3   
   1400152b7:	int3   
   1400152b8:	sub    rsp,0x28
   1400152bc:	call   0x140017714
   1400152c1:	mov    rax,QWORD PTR [rax+0x130]
   1400152c8:	add    rsp,0x28
   1400152cc:	ret    
   1400152cd:	int3   
   1400152ce:	int3   
   1400152cf:	int3   
   1400152d0:	rex push rbx
   1400152d2:	sub    rsp,0x20
   1400152d6:	mov    rbx,rcx
   1400152d9:	call   0x140017714
   1400152de:	mov    QWORD PTR [rax+0x128],rbx
   1400152e5:	add    rsp,0x20
   1400152e9:	pop    rbx
   1400152ea:	ret    
   1400152eb:	int3   
   1400152ec:	rex push rbx
   1400152ee:	sub    rsp,0x20
   1400152f2:	mov    rbx,rcx
   1400152f5:	call   0x140017714
   1400152fa:	mov    QWORD PTR [rax+0x130],rbx
   140015301:	add    rsp,0x20
   140015305:	pop    rbx
   140015306:	ret    
   140015307:	int3   
   140015308:	mov    rax,rsp
   14001530b:	mov    QWORD PTR [rax+0x8],rbx
   14001530f:	mov    QWORD PTR [rax+0x10],rbp
   140015313:	mov    QWORD PTR [rax+0x20],rsi
   140015317:	push   rdi
   140015318:	push   r12
   14001531a:	push   r13
   14001531c:	sub    rsp,0x20
   140015320:	lea    r9,[rax+0x18]
   140015324:	mov    rbp,r8
   140015327:	mov    r12,rdx
   14001532a:	call   0x1400151b4
   14001532f:	mov    rdx,r12
   140015332:	mov    rcx,rbp
   140015335:	mov    r13,rax
   140015338:	call   0x14001a994
   14001533d:	movsxd rdi,DWORD PTR [rbp+0xc]
   140015341:	mov    esi,eax
   140015343:	test   edi,edi
   140015345:	je     0x14001537c
   140015347:	lea    rcx,[rdi+rdi*4]
   14001534b:	lea    rbx,[rcx*4-0x14]
   140015353:	call   0x140017714
   140015358:	movsxd rcx,DWORD PTR [rbp+0x10]
   14001535c:	mov    rdx,QWORD PTR [rax+0x128]
   140015363:	add    rdx,rcx
   140015366:	add    rdx,rbx
   140015369:	cmp    esi,DWORD PTR [rdx+0x4]
   14001536c:	jle    0x140015373
   14001536e:	cmp    esi,DWORD PTR [rdx+0x8]
   140015371:	jle    0x14001537e
   140015373:	sub    rbx,0x14
   140015377:	add    edi,0xffffffff
   14001537a:	jne    0x140015353
   14001537c:	xor    edx,edx
   14001537e:	test   rdx,rdx
   140015381:	jne    0x140015389
   140015383:	or     r9d,0xffffffff
   140015387:	jmp    0x14001538d
   140015389:	mov    r9d,DWORD PTR [rdx+0x4]
   14001538d:	mov    r8,rbp
   140015390:	mov    rdx,r12
   140015393:	mov    rcx,r13
   140015396:	call   0x14001abf4
   14001539b:	mov    rbx,QWORD PTR [rsp+0x40]
   1400153a0:	mov    rbp,QWORD PTR [rsp+0x48]
   1400153a5:	mov    rsi,QWORD PTR [rsp+0x58]
   1400153aa:	add    rsp,0x20
   1400153ae:	pop    r13
   1400153b0:	pop    r12
   1400153b2:	pop    rdi
   1400153b3:	ret    
   1400153b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400153b9:	mov    QWORD PTR [rsp+0x18],rsi
   1400153be:	push   rdi
   1400153bf:	sub    rsp,0x40
   1400153c3:	mov    rbx,r9
   1400153c6:	mov    rdi,r8
   1400153c9:	mov    rsi,rcx
   1400153cc:	mov    QWORD PTR [rsp+0x50],rdx
   1400153d1:	call   0x140017714
   1400153d6:	mov    rdx,QWORD PTR [rbx+0x8]
   1400153da:	mov    QWORD PTR [rax+0x128],rdx
   1400153e1:	call   0x140017714
   1400153e6:	mov    rdx,QWORD PTR [rsi+0x38]
   1400153ea:	mov    QWORD PTR [rax+0x130],rdx
   1400153f1:	call   0x140017714
   1400153f6:	mov    rdx,QWORD PTR [rbx+0x38]
   1400153fa:	mov    r8d,DWORD PTR [rdx]
   1400153fd:	lea    rdx,[rsp+0x50]
   140015402:	mov    r9,rbx
   140015405:	add    r8,QWORD PTR [rax+0x128]
   14001540c:	xor    eax,eax
   14001540e:	mov    rcx,rsi
   140015411:	mov    DWORD PTR [rsp+0x38],eax
   140015415:	mov    QWORD PTR [rsp+0x30],rax
   14001541a:	mov    DWORD PTR [rsp+0x28],eax
   14001541e:	mov    QWORD PTR [rsp+0x20],r8
   140015423:	mov    r8,rdi
   140015426:	call   0x14001bc64
   14001542b:	mov    rbx,QWORD PTR [rsp+0x58]
   140015430:	mov    rsi,QWORD PTR [rsp+0x60]
   140015435:	add    rsp,0x40
   140015439:	pop    rdi
   14001543a:	ret    
   14001543b:	int3   
   14001543c:	mov    QWORD PTR [rsp+0x8],rbx
   140015441:	mov    QWORD PTR [rsp+0x10],rbp
   140015446:	mov    QWORD PTR [rsp+0x18],rsi
   14001544b:	push   rdi
   14001544c:	sub    rsp,0x40
   140015450:	mov    rsi,r9
   140015453:	mov    rbp,r8
   140015456:	mov    rbx,rdx
   140015459:	mov    rdi,rcx
   14001545c:	call   0x140017714
   140015461:	mov    QWORD PTR [rax+0x138],rbx
   140015468:	mov    rbx,QWORD PTR [rdi]
   14001546b:	call   0x140017714
   140015470:	mov    rdx,QWORD PTR [rbx+0x38]
   140015474:	mov    rcx,QWORD PTR [rsp+0x78]
   140015479:	mov    r9,QWORD PTR [rsp+0x70]
   14001547e:	mov    DWORD PTR [rsp+0x38],0x1
   140015486:	mov    QWORD PTR [rax+0x130],rdx
   14001548d:	xor    ebx,ebx
   14001548f:	mov    QWORD PTR [rsp+0x30],rbx
   140015494:	mov    DWORD PTR [rsp+0x28],ebx
   140015498:	mov    QWORD PTR [rsp+0x20],rcx
   14001549d:	mov    rcx,QWORD PTR [rdi]
   1400154a0:	mov    r8,rsi
   1400154a3:	mov    rdx,rbp
   1400154a6:	call   0x14001bc64
   1400154ab:	call   0x140017714
   1400154b0:	mov    rcx,QWORD PTR [rsp+0x80]
   1400154b8:	mov    rbp,QWORD PTR [rsp+0x58]
   1400154bd:	mov    rsi,QWORD PTR [rsp+0x60]
   1400154c2:	mov    QWORD PTR [rax+0x138],rbx
   1400154c9:	lea    eax,[rbx+0x1]
   1400154cc:	mov    rbx,QWORD PTR [rsp+0x50]
   1400154d1:	mov    DWORD PTR [rcx],0x1
   1400154d7:	add    rsp,0x40
   1400154db:	pop    rdi
   1400154dc:	ret    
   1400154dd:	int3   
   1400154de:	int3   
   1400154df:	int3   
   1400154e0:	mov    rax,rsp
   1400154e3:	mov    QWORD PTR [rax+0x20],r9
   1400154e7:	mov    QWORD PTR [rax+0x18],r8
   1400154eb:	mov    QWORD PTR [rax+0x10],rdx
   1400154ef:	mov    QWORD PTR [rax+0x8],rcx
   1400154f3:	push   rbx
   1400154f4:	sub    rsp,0x60
   1400154f8:	mov    rbx,rcx
   1400154fb:	and    DWORD PTR [rax-0x28],0x0
   1400154ff:	mov    QWORD PTR [rax-0x20],rcx
   140015503:	mov    QWORD PTR [rax-0x18],r8
   140015507:	call   0x140017714
   14001550c:	mov    r8,QWORD PTR [rax+0xe0]
   140015513:	lea    rdx,[rsp+0x48]
   140015518:	mov    ecx,DWORD PTR [rbx]
   14001551a:	call   r8
   14001551d:	mov    DWORD PTR [rsp+0x40],0x0
   140015525:	jmp    0x140015527
   140015527:	mov    eax,DWORD PTR [rsp+0x40]
   14001552b:	add    rsp,0x60
   14001552f:	pop    rbx
   140015530:	ret    
   140015531:	int3   
   140015532:	int3   
   140015533:	int3   
   140015534:	mov    QWORD PTR [rsp+0x8],rbx
   140015539:	mov    QWORD PTR [rsp+0x10],rbp
   14001553e:	mov    QWORD PTR [rsp+0x18],rsi
   140015543:	push   rdi
   140015544:	push   r12
   140015546:	push   r13
   140015548:	sub    rsp,0x20
   14001554c:	movsxd rbx,DWORD PTR [rdx+0xc]
   140015550:	mov    r12,QWORD PTR [rsp+0x70]
   140015555:	mov    rsi,rdx
   140015558:	mov    rcx,rsi
   14001555b:	mov    rdx,r12
   14001555e:	mov    r13d,r9d
   140015561:	xor    ebp,ebp
   140015563:	call   0x14001a994
   140015568:	mov    edi,eax
   14001556a:	test   ebx,ebx
   14001556c:	jne    0x140015573
   14001556e:	call   0x14001beb0
   140015573:	mov    r10,QWORD PTR [rsp+0x68]
   140015578:	mov    r8,QWORD PTR [rsp+0x60]
   14001557d:	or     r11d,0xffffffff
   140015581:	mov    DWORD PTR [r10],r11d
   140015584:	mov    edx,ebx
   140015586:	mov    DWORD PTR [r8],r11d
   140015589:	test   ebx,ebx
   14001558b:	je     0x1400155b7
   14001558d:	movsxd rcx,DWORD PTR [rsi+0x10]
   140015591:	lea    rax,[rbx+rbx*4]
   140015595:	lea    rcx,[rcx+rax*4]
   140015599:	mov    rax,QWORD PTR [r12+0x8]
   14001559e:	lea    r9,[rcx+rax*1-0xc]
   1400155a3:	cmp    edi,DWORD PTR [r9-0x4]
   1400155a7:	jle    0x1400155ae
   1400155a9:	cmp    edi,DWORD PTR [r9]
   1400155ac:	jle    0x1400155b7
   1400155ae:	sub    r9,0x14
   1400155b2:	add    edx,r11d
   1400155b5:	jne    0x1400155a3
   1400155b7:	test   edx,edx
   1400155b9:	je     0x1400155cf
   1400155bb:	lea    eax,[rdx-0x1]
   1400155be:	lea    rdx,[rax+rax*4]
   1400155c2:	movsxd rax,DWORD PTR [rsi+0x10]
   1400155c6:	lea    rbp,[rax+rdx*4]
   1400155ca:	add    rbp,QWORD PTR [r12+0x8]
   1400155cf:	xor    edx,edx
   1400155d1:	test   ebx,ebx
   1400155d3:	je     0x140015636
   1400155d5:	xor    r9d,r9d
   1400155d8:	movsxd rcx,DWORD PTR [rsi+0x10]
   1400155dc:	add    rcx,QWORD PTR [r12+0x8]
   1400155e1:	add    rcx,r9
   1400155e4:	test   rbp,rbp
   1400155e7:	je     0x1400155f8
   1400155e9:	mov    eax,DWORD PTR [rbp+0x4]
   1400155ec:	cmp    DWORD PTR [rcx],eax
   1400155ee:	jle    0x140015611
   1400155f0:	mov    eax,DWORD PTR [rbp+0x8]
   1400155f3:	cmp    DWORD PTR [rcx+0x4],eax
   1400155f6:	jg     0x140015611
   1400155f8:	cmp    r13d,DWORD PTR [rcx]
   1400155fb:	jl     0x140015611
   1400155fd:	cmp    r13d,DWORD PTR [rcx+0x4]
   140015601:	jg     0x140015611
   140015603:	cmp    DWORD PTR [r8],r11d
   140015606:	jne    0x14001560b
   140015608:	mov    DWORD PTR [r8],edx
   14001560b:	lea    eax,[rdx+0x1]
   14001560e:	mov    DWORD PTR [r10],eax
   140015611:	inc    edx
   140015613:	add    r9,0x14
   140015617:	cmp    edx,ebx
   140015619:	jb     0x1400155d8
   14001561b:	cmp    DWORD PTR [r8],r11d
   14001561e:	je     0x140015636
   140015620:	mov    eax,DWORD PTR [r8]
   140015623:	lea    rcx,[rax+rax*4]
   140015627:	movsxd rax,DWORD PTR [rsi+0x10]
   14001562b:	lea    rax,[rax+rcx*4]
   14001562f:	add    rax,QWORD PTR [r12+0x8]
   140015634:	jmp    0x140015640
   140015636:	and    DWORD PTR [r8],0x0
   14001563a:	and    DWORD PTR [r10],0x0
   14001563e:	xor    eax,eax
   140015640:	mov    rbx,QWORD PTR [rsp+0x40]
   140015645:	mov    rbp,QWORD PTR [rsp+0x48]
   14001564a:	mov    rsi,QWORD PTR [rsp+0x50]
   14001564f:	add    rsp,0x20
   140015653:	pop    r13
   140015655:	pop    r12
   140015657:	pop    rdi
   140015658:	ret    
   140015659:	int3   
   14001565a:	int3   
   14001565b:	int3   
   14001565c:	rex push rbx
   14001565e:	sub    rsp,0x20
   140015662:	mov    rbx,rcx
   140015665:	mov    QWORD PTR [rcx],rdx
   140015668:	call   0x140017714
   14001566d:	cmp    rbx,QWORD PTR [rax+0x120]
   140015674:	jae    0x140015684
   140015676:	call   0x140017714
   14001567b:	mov    rcx,QWORD PTR [rax+0x120]
   140015682:	jmp    0x140015686
   140015684:	xor    ecx,ecx
   140015686:	mov    QWORD PTR [rbx+0x8],rcx
   14001568a:	call   0x140017714
   14001568f:	mov    QWORD PTR [rax+0x120],rbx
   140015696:	mov    rax,rbx
   140015699:	add    rsp,0x20
   14001569d:	pop    rbx
   14001569e:	ret    
   14001569f:	int3   
   1400156a0:	rex push rbx
   1400156a2:	sub    rsp,0x20
   1400156a6:	mov    rbx,rcx
   1400156a9:	call   0x140017714
   1400156ae:	mov    rdx,QWORD PTR [rax+0x120]
   1400156b5:	jmp    0x1400156c0
   1400156b7:	cmp    QWORD PTR [rdx],rbx
   1400156ba:	je     0x1400156ce
   1400156bc:	mov    rdx,QWORD PTR [rdx+0x8]
   1400156c0:	test   rdx,rdx
   1400156c3:	jne    0x1400156b7
   1400156c5:	lea    eax,[rdx+0x1]
   1400156c8:	add    rsp,0x20
   1400156cc:	pop    rbx
   1400156cd:	ret    
   1400156ce:	xor    eax,eax
   1400156d0:	jmp    0x1400156c8
   1400156d2:	int3   
   1400156d3:	int3   
   1400156d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400156d9:	push   rdi
   1400156da:	sub    rsp,0x20
   1400156de:	mov    rdi,rcx
   1400156e1:	call   0x140017714
   1400156e6:	cmp    rdi,QWORD PTR [rax+0x120]
   1400156ed:	je     0x1400156f4
   1400156ef:	call   0x14001beb0
   1400156f4:	call   0x140017714
   1400156f9:	mov    rbx,QWORD PTR [rax+0x120]
   140015700:	jmp    0x14001570b
   140015702:	cmp    rdi,rbx
   140015705:	je     0x140015720
   140015707:	mov    rbx,QWORD PTR [rbx+0x8]
   14001570b:	test   rbx,rbx
   14001570e:	jne    0x140015702
   140015710:	call   0x14001beb0
   140015715:	mov    rbx,QWORD PTR [rsp+0x30]
   14001571a:	add    rsp,0x20
   14001571e:	pop    rdi
   14001571f:	ret    
   140015720:	call   0x140017714
   140015725:	mov    rcx,QWORD PTR [rbx+0x8]
   140015729:	mov    QWORD PTR [rax+0x120],rcx
   140015730:	jmp    0x140015715
   140015732:	int3   
   140015733:	int3   
   140015734:	mov    QWORD PTR [rsp+0x8],rbx
   140015739:	mov    QWORD PTR [rsp+0x10],rbp
   14001573e:	mov    QWORD PTR [rsp+0x18],rsi
   140015743:	push   rdi
   140015744:	sub    rsp,0x5a0
   14001574b:	mov    rsi,rdx
   14001574e:	mov    rbp,rcx
   140015751:	mov    rdi,r8
   140015754:	lea    rcx,[rsp+0x30]
   140015759:	lea    rdx,[rip+0x23d10]        # 0x140039470
   140015760:	mov    r8d,0x98
   140015766:	mov    rbx,r9
   140015769:	call   0x1400160c0
   14001576e:	mov    rax,QWORD PTR [rsp+0x5d0]
   140015776:	mov    rdx,QWORD PTR [rsp+0x5e8]
   14001577e:	mov    rcx,QWORD PTR [rbp+0x0]
   140015782:	mov    QWORD PTR [rsp+0x60],rax
   140015787:	movsxd rax,DWORD PTR [rsp+0x5d8]
   14001578f:	lea    r11,[rip+0x572e]        # 0x14001aec4
   140015796:	lea    r8,[rsp+0x30]
   14001579b:	mov    QWORD PTR [rsp+0x68],rax
   1400157a0:	mov    rax,QWORD PTR [rsp+0x5e0]
   1400157a8:	xor    r9d,r9d
   1400157ab:	mov    QWORD PTR [rsp+0x78],rax
   1400157b0:	movzx  eax,BYTE PTR [rsp+0x5f0]
   1400157b8:	mov    QWORD PTR [rsp+0x50],r11
   1400157bd:	mov    QWORD PTR [rsp+0x88],rax
   1400157c5:	mov    rax,QWORD PTR [rdx+0x40]
   1400157c9:	mov    rdx,QWORD PTR [rdx]
   1400157cc:	mov    QWORD PTR [rsp+0x28],rax
   1400157d1:	lea    rax,[rsp+0xd0]
   1400157d9:	mov    QWORD PTR [rsp+0x58],rbx
   1400157de:	mov    QWORD PTR [rsp+0x70],rdi
   1400157e3:	mov    QWORD PTR [rsp+0x80],rsi
   1400157eb:	mov    QWORD PTR [rsp+0x90],0x19930520
   1400157f7:	mov    QWORD PTR [rsp+0x20],rax
   1400157fc:	call   0x140031fb4
   140015801:	lea    r11,[rsp+0x5a0]
   140015809:	mov    rbx,QWORD PTR [r11+0x10]
   14001580d:	mov    rbp,QWORD PTR [r11+0x18]
   140015811:	mov    rsi,QWORD PTR [r11+0x20]
   140015815:	mov    rsp,r11
   140015818:	pop    rdi
   140015819:	ret    
   14001581a:	int3   
   14001581b:	int3   
   14001581c:	rex push rbx
   14001581e:	sub    rsp,0x20
   140015822:	mov    r11d,DWORD PTR [r8]
   140015825:	mov    rbx,rdx
   140015828:	mov    r9,rcx
   14001582b:	and    r11d,0xfffffff8
   14001582f:	test   BYTE PTR [r8],0x4
   140015833:	mov    r10,rcx
   140015836:	je     0x14001584b
   140015838:	mov    eax,DWORD PTR [r8+0x8]
   14001583c:	movsxd r10,DWORD PTR [r8+0x4]
   140015840:	neg    eax
   140015842:	add    r10,rcx
   140015845:	movsxd rcx,eax
   140015848:	and    r10,rcx
   14001584b:	movsxd rax,r11d
   14001584e:	mov    rdx,QWORD PTR [rax+r10*1]
   140015852:	mov    rax,QWORD PTR [rbx+0x10]
   140015856:	mov    ecx,DWORD PTR [rax+0x8]
   140015859:	add    rcx,QWORD PTR [rbx+0x8]
   14001585d:	test   BYTE PTR [rcx+0x3],0xf
   140015861:	je     0x14001586f
   140015863:	movzx  eax,BYTE PTR [rcx+0x3]
   140015867:	and    eax,0xfffffff0
   14001586a:	cdqe   
   14001586c:	add    r9,rax
   14001586f:	xor    r9,rdx
   140015872:	mov    rcx,r9
   140015875:	add    rsp,0x20
   140015879:	pop    rbx
   14001587a:	jmp    0x1400144f0
   14001587f:	int3   
   140015880:	sub    rsp,0x28
   140015884:	mov    r8,QWORD PTR [r9+0x38]
   140015888:	mov    rcx,rdx
   14001588b:	mov    rdx,r9
   14001588e:	call   0x14001581c
   140015893:	mov    eax,0x1
   140015898:	add    rsp,0x28
   14001589c:	ret    
   14001589d:	int3   
   14001589e:	int3   
   14001589f:	int3   
   1400158a0:	mov    QWORD PTR [rsp+0x10],rbx
   1400158a5:	push   rdi
   1400158a6:	sub    rsp,0x60
   1400158aa:	mov    rdi,rdx
   1400158ad:	mov    rbx,rcx
   1400158b0:	lea    rcx,[rsp+0x20]
   1400158b5:	lea    rdx,[rip+0x23c54]        # 0x140039510
   1400158bc:	mov    r8d,0x40
   1400158c2:	call   0x1400160c0
   1400158c7:	lea    rdx,[rsp+0x70]
   1400158cc:	mov    rcx,rdi
   1400158cf:	mov    QWORD PTR [rsp+0x48],rbx
   1400158d4:	mov    QWORD PTR [rsp+0x50],rdi
   1400158d9:	call   0x140031fba
   1400158de:	mov    r11,rax
   1400158e1:	mov    QWORD PTR [rsp+0x70],rax
   1400158e6:	mov    QWORD PTR [rsp+0x58],rax
   1400158eb:	test   rdi,rdi
   1400158ee:	je     0x14001590e
   1400158f0:	test   BYTE PTR [rdi],0x8
   1400158f3:	mov    ecx,0x1994000
   1400158f8:	je     0x140015900
   1400158fa:	mov    DWORD PTR [rsp+0x40],ecx
   1400158fe:	jmp    0x14001590e
   140015900:	mov    eax,DWORD PTR [rsp+0x40]
   140015904:	test   r11,r11
   140015907:	cmove  eax,ecx
   14001590a:	mov    DWORD PTR [rsp+0x40],eax
   14001590e:	mov    r8d,DWORD PTR [rsp+0x38]
   140015913:	mov    edx,DWORD PTR [rsp+0x24]
   140015917:	mov    ecx,DWORD PTR [rsp+0x20]
   14001591b:	lea    r9,[rsp+0x40]
   140015920:	call   QWORD PTR [rip+0x208d2]        # 0x1400361f8
   140015926:	mov    rbx,QWORD PTR [rsp+0x78]
   14001592b:	add    rsp,0x60
   14001592f:	pop    rdi
   140015930:	ret    
   140015931:	int3   
   140015932:	int3   
   140015933:	int3   
   140015934:	sub    rsp,0x38
   140015938:	and    QWORD PTR [rsp+0x20],0x0
   14001593e:	call   0x14001bef0
   140015943:	add    rsp,0x38
   140015947:	ret    
   140015948:	sub    rsp,0x28
   14001594c:	mov    rcx,QWORD PTR [rip+0x3964d]        # 0x14004efa0
   140015953:	call   0x1400175ac
   140015958:	test   rax,rax
   14001595b:	je     0x14001595f
   14001595d:	call   rax
   14001595f:	mov    ecx,0x19
   140015964:	call   0x140019a74
   140015969:	mov    edx,0x1
   14001596e:	xor    ecx,ecx
   140015970:	call   0x14001c23c
   140015975:	add    rsp,0x28
   140015979:	jmp    0x14001c198
   14001597e:	int3   
   14001597f:	int3   
   140015980:	rex push rbx
   140015982:	sub    rsp,0x20
   140015986:	mov    edx,0x8
   14001598b:	lea    ecx,[rdx+0x18]
   14001598e:	call   0x14001c490
   140015993:	mov    rcx,rax
   140015996:	mov    rbx,rax
   140015999:	call   0x140017598
   14001599e:	mov    QWORD PTR [rip+0x3aeab],rax        # 0x140050850
   1400159a5:	mov    QWORD PTR [rip+0x3ae9c],rax        # 0x140050848
   1400159ac:	test   rbx,rbx
   1400159af:	jne    0x1400159b6
   1400159b1:	lea    eax,[rbx+0x18]
   1400159b4:	jmp    0x1400159bc
   1400159b6:	and    QWORD PTR [rbx],0x0
   1400159ba:	xor    eax,eax
   1400159bc:	add    rsp,0x20
   1400159c0:	pop    rbx
   1400159c1:	ret    
   1400159c2:	int3   
   1400159c3:	int3   
   1400159c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400159c9:	mov    QWORD PTR [rsp+0x10],rsi
   1400159ce:	mov    QWORD PTR [rsp+0x18],rdi
   1400159d3:	push   r12
   1400159d5:	push   r13
   1400159d7:	push   r14
   1400159d9:	sub    rsp,0x20
   1400159dd:	mov    r14,rcx
   1400159e0:	call   0x140016f20
   1400159e5:	nop
   1400159e6:	mov    rcx,QWORD PTR [rip+0x3ae63]        # 0x140050850
   1400159ed:	call   0x1400175ac
   1400159f2:	mov    r12,rax
   1400159f5:	mov    rcx,QWORD PTR [rip+0x3ae4c]        # 0x140050848
   1400159fc:	call   0x1400175ac
   140015a01:	mov    rbx,rax
   140015a04:	cmp    rax,r12
   140015a07:	jb     0x140015aa5
   140015a0d:	mov    rdi,rax
   140015a10:	sub    rdi,r12
   140015a13:	lea    r13,[rdi+0x8]
   140015a17:	cmp    r13,0x8
   140015a1b:	jb     0x140015aa5
   140015a21:	mov    rcx,r12
   140015a24:	call   0x140016aa0
   140015a29:	mov    rsi,rax
   140015a2c:	cmp    rax,r13
   140015a2f:	jae    0x140015a85
   140015a31:	mov    edx,0x1000
   140015a36:	cmp    rax,rdx
   140015a39:	cmovb  rdx,rax
   140015a3d:	add    rdx,rax
   140015a40:	cmp    rdx,rax
   140015a43:	jb     0x140015a56
   140015a45:	mov    rcx,r12
   140015a48:	call   0x14001c514
   140015a4d:	xor    ebx,ebx
   140015a4f:	cmp    rax,rbx
   140015a52:	jne    0x140015a6e
   140015a54:	jmp    0x140015a58
   140015a56:	xor    ebx,ebx
   140015a58:	lea    rdx,[rsi+0x20]
   140015a5c:	cmp    rdx,rsi
   140015a5f:	jb     0x140015aa7
   140015a61:	mov    rcx,r12
   140015a64:	call   0x14001c514
   140015a69:	cmp    rax,rbx
   140015a6c:	je     0x140015aa7
   140015a6e:	sar    rdi,0x3
   140015a72:	lea    rbx,[rax+rdi*8]
   140015a76:	mov    rcx,rax
   140015a79:	call   0x140017598
   140015a7e:	mov    QWORD PTR [rip+0x3adcb],rax        # 0x140050850
   140015a85:	mov    rcx,r14
   140015a88:	call   0x140017598
   140015a8d:	mov    QWORD PTR [rbx],rax
   140015a90:	lea    rcx,[rbx+0x8]
   140015a94:	call   0x140017598
   140015a99:	mov    QWORD PTR [rip+0x3ada8],rax        # 0x140050848
   140015aa0:	mov    rbx,r14
   140015aa3:	jmp    0x140015aa7
   140015aa5:	xor    ebx,ebx
   140015aa7:	call   0x140016f2c
   140015aac:	mov    rax,rbx
   140015aaf:	mov    rbx,QWORD PTR [rsp+0x40]
   140015ab4:	mov    rsi,QWORD PTR [rsp+0x48]
   140015ab9:	mov    rdi,QWORD PTR [rsp+0x50]
   140015abe:	add    rsp,0x20
   140015ac2:	pop    r14
   140015ac4:	pop    r13
   140015ac6:	pop    r12
   140015ac8:	ret    
   140015ac9:	int3   
   140015aca:	int3   
   140015acb:	int3   
   140015acc:	sub    rsp,0x28
   140015ad0:	call   0x1400159c4
   140015ad5:	neg    rax
   140015ad8:	sbb    eax,eax
   140015ada:	neg    eax
   140015adc:	dec    eax
   140015ade:	add    rsp,0x28
   140015ae2:	ret    
   140015ae3:	int3   
   140015ae4:	int3   
   140015ae5:	int3   
   140015ae6:	int3   
   140015ae7:	int3   
   140015ae8:	int3   
   140015ae9:	int3   
   140015aea:	int3   
   140015aeb:	int3   
   140015aec:	int3   
   140015aed:	int3   
   140015aee:	int3   
   140015aef:	int3   
   140015af0:	int3   
   140015af1:	int3   
   140015af2:	int3   
   140015af3:	int3   
   140015af4:	int3   
   140015af5:	int3   
   140015af6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015b00:	mov    rax,rcx
   140015b03:	cmp    r8,0x8
   140015b07:	jb     0x140015b5c
   140015b09:	movzx  edx,dl
   140015b0c:	movabs r9,0x101010101010101
   140015b16:	imul   rdx,r9
   140015b1a:	cmp    r8,0x40
   140015b1e:	jb     0x140015b3e
   140015b20:	neg    rcx
   140015b23:	and    ecx,0x7
   140015b26:	je     0x140015b2e
   140015b28:	sub    r8,rcx
   140015b2b:	mov    QWORD PTR [rax],rdx
   140015b2e:	add    rcx,rax
   140015b31:	mov    r9,r8
   140015b34:	and    r8,0x3f
   140015b38:	shr    r9,0x6
   140015b3c:	jne    0x140015b77
   140015b3e:	mov    r9,r8
   140015b41:	and    r8,0x7
   140015b45:	shr    r9,0x3
   140015b49:	je     0x140015b5c
   140015b4b:	data16 data16 xchg ax,ax
   140015b4f:	nop
   140015b50:	mov    QWORD PTR [rcx],rdx
   140015b53:	add    rcx,0x8
   140015b57:	dec    r9
   140015b5a:	jne    0x140015b50
   140015b5c:	test   r8,r8
   140015b5f:	je     0x140015b6b
   140015b61:	mov    BYTE PTR [rcx],dl
   140015b63:	inc    rcx
   140015b66:	dec    r8
   140015b69:	jne    0x140015b61
   140015b6b:	ret    
   140015b6c:	nop    DWORD PTR [rax+0x0]
   140015b70:	data16 data16 xchg ax,ax
   140015b74:	data16 xchg ax,ax
   140015b77:	cmp    r9,0x1c00
   140015b7e:	jae    0x140015bb0
   140015b80:	mov    QWORD PTR [rcx],rdx
   140015b83:	mov    QWORD PTR [rcx+0x8],rdx
   140015b87:	mov    QWORD PTR [rcx+0x10],rdx
   140015b8b:	add    rcx,0x40
   140015b8f:	mov    QWORD PTR [rcx-0x28],rdx
   140015b93:	mov    QWORD PTR [rcx-0x20],rdx
   140015b97:	dec    r9
   140015b9a:	mov    QWORD PTR [rcx-0x18],rdx
   140015b9e:	mov    QWORD PTR [rcx-0x10],rdx
   140015ba2:	mov    QWORD PTR [rcx-0x8],rdx
   140015ba6:	jne    0x140015b80
   140015ba8:	jmp    0x140015b3e
   140015baa:	nop    WORD PTR [rax+rax*1+0x0]
   140015bb0:	movnti QWORD PTR [rcx],rdx
   140015bb4:	movnti QWORD PTR [rcx+0x8],rdx
   140015bb9:	movnti QWORD PTR [rcx+0x10],rdx
   140015bbe:	add    rcx,0x40
   140015bc2:	movnti QWORD PTR [rcx-0x28],rdx
   140015bc7:	movnti QWORD PTR [rcx-0x20],rdx
   140015bcc:	dec    r9
   140015bcf:	movnti QWORD PTR [rcx-0x18],rdx
   140015bd4:	movnti QWORD PTR [rcx-0x10],rdx
   140015bd9:	movnti QWORD PTR [rcx-0x8],rdx
   140015bde:	jne    0x140015bb0
   140015be0:	lock or BYTE PTR [rsp],0x0
   140015be5:	jmp    0x140015b3e
   140015bea:	int3   
   140015beb:	int3   
   140015bec:	int3   
   140015bed:	int3   
   140015bee:	int3   
   140015bef:	int3   
   140015bf0:	int3   
   140015bf1:	int3   
   140015bf2:	int3   
   140015bf3:	int3   
   140015bf4:	int3   
   140015bf5:	int3   
   140015bf6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140015c00:	mov    rax,rcx
   140015c03:	neg    rcx
   140015c06:	test   rax,0x7
   140015c0c:	je     0x140015c1d
   140015c0e:	xchg   ax,ax
   140015c10:	mov    dl,BYTE PTR [rax]
   140015c12:	inc    rax
   140015c15:	test   dl,dl
   140015c17:	je     0x140015c78
   140015c19:	test   al,0x7
   140015c1b:	jne    0x140015c10
   140015c1d:	movabs r8,0x7efefefefefefeff
   140015c27:	movabs r11,0x8101010101010100
   140015c31:	mov    rdx,QWORD PTR [rax]
   140015c34:	mov    r9,r8
   140015c37:	add    rax,0x8
   140015c3b:	add    r9,rdx
   140015c3e:	not    rdx
   140015c41:	xor    rdx,r9
   140015c44:	and    rdx,r11
   140015c47:	je     0x140015c31
   140015c49:	mov    rdx,QWORD PTR [rax-0x8]
   140015c4d:	test   dl,dl
   140015c4f:	je     0x140015ca2
   140015c51:	test   dh,dh
   140015c53:	je     0x140015c9c
   140015c55:	shr    rdx,0x10
   140015c59:	test   dl,dl
   140015c5b:	je     0x140015c96
   140015c5d:	test   dh,dh
   140015c5f:	je     0x140015c90
   140015c61:	shr    rdx,0x10
   140015c65:	test   dl,dl
   140015c67:	je     0x140015c8a
   140015c69:	test   dh,dh
   140015c6b:	je     0x140015c84
   140015c6d:	shr    edx,0x10
   140015c70:	test   dl,dl
   140015c72:	je     0x140015c7e
   140015c74:	test   dh,dh
   140015c76:	jne    0x140015c31
   140015c78:	lea    rax,[rcx+rax*1-0x1]
   140015c7d:	ret    
   140015c7e:	lea    rax,[rcx+rax*1-0x2]
   140015c83:	ret    
   140015c84:	lea    rax,[rcx+rax*1-0x3]
   140015c89:	ret    
   140015c8a:	lea    rax,[rcx+rax*1-0x4]
   140015c8f:	ret    
   140015c90:	lea    rax,[rcx+rax*1-0x5]
   140015c95:	ret    
   140015c96:	lea    rax,[rcx+rax*1-0x6]
   140015c9b:	ret    
   140015c9c:	lea    rax,[rcx+rax*1-0x7]
   140015ca1:	ret    
   140015ca2:	lea    rax,[rcx+rax*1-0x8]
   140015ca7:	ret    
   140015ca8:	mov    rax,rsp
   140015cab:	mov    QWORD PTR [rax+0x8],rbx
   140015caf:	mov    QWORD PTR [rax+0x18],rbp
   140015cb3:	mov    QWORD PTR [rax+0x20],rsi
   140015cb7:	mov    QWORD PTR [rax+0x10],rdx
   140015cbb:	push   rdi
   140015cbc:	push   r12
   140015cbe:	push   r13
   140015cc0:	push   r14
   140015cc2:	push   r15
   140015cc4:	sub    rsp,0x40
   140015cc8:	mov    r15,QWORD PTR [r9+0x8]
   140015ccc:	mov    r12,QWORD PTR [r9]
   140015ccf:	mov    rsi,QWORD PTR [r9+0x38]
   140015cd3:	sub    r12,r15
   140015cd6:	test   BYTE PTR [rcx+0x4],0x66
   140015cda:	mov    r14,r9
   140015cdd:	mov    rbp,rdx
   140015ce0:	mov    r13,rcx
   140015ce3:	jne    0x140015dc5
   140015ce9:	xor    edi,edi
   140015ceb:	mov    QWORD PTR [rax-0x38],rcx
   140015cef:	mov    QWORD PTR [rax-0x30],r8
   140015cf3:	cmp    DWORD PTR [rsi],edi
   140015cf5:	jbe    0x140015e26
   140015cfb:	lea    rbx,[rsi+0xc]
   140015cff:	mov    eax,DWORD PTR [rbx-0x8]
   140015d02:	cmp    r12,rax
   140015d05:	jb     0x140015db2
   140015d0b:	mov    eax,DWORD PTR [rbx-0x4]
   140015d0e:	cmp    r12,rax
   140015d11:	jae    0x140015db2
   140015d17:	cmp    DWORD PTR [rbx+0x4],0x0
   140015d1b:	je     0x140015db2
   140015d21:	cmp    DWORD PTR [rbx],0x1
   140015d24:	je     0x140015d3f
   140015d26:	mov    eax,DWORD PTR [rbx]
   140015d28:	lea    rcx,[rsp+0x30]
   140015d2d:	mov    rdx,rbp
   140015d30:	add    rax,r15
   140015d33:	call   rax
   140015d35:	test   eax,eax
   140015d37:	js     0x140015dc1
   140015d3d:	jle    0x140015db2
   140015d3f:	cmp    DWORD PTR [r13+0x0],0xe06d7363
   140015d47:	jne    0x140015d71
   140015d49:	cmp    QWORD PTR [rip+0x2405f],0x0        # 0x140039db0
   140015d51:	je     0x140015d71
   140015d53:	lea    rcx,[rip+0x24056]        # 0x140039db0
   140015d5a:	call   0x14001c730
   140015d5f:	test   eax,eax
   140015d61:	je     0x140015d71
   140015d63:	mov    edx,0x1
   140015d68:	mov    rcx,r13
   140015d6b:	call   QWORD PTR [rip+0x2403f]        # 0x140039db0
   140015d71:	mov    ecx,DWORD PTR [rbx+0x4]
   140015d74:	mov    r8d,0x1
   140015d7a:	mov    rdx,rbp
   140015d7d:	add    rcx,r15
   140015d80:	call   0x14001c670
   140015d85:	mov    rax,QWORD PTR [r14+0x40]
   140015d89:	mov    edx,DWORD PTR [rbx+0x4]
   140015d8c:	movsxd r9,DWORD PTR [r13+0x0]
   140015d90:	mov    QWORD PTR [rsp+0x28],rax
   140015d95:	mov    rax,QWORD PTR [r14+0x28]
   140015d99:	add    rdx,r15
   140015d9c:	mov    r8,r13
   140015d9f:	mov    rcx,rbp
   140015da2:	mov    QWORD PTR [rsp+0x20],rax
   140015da7:	call   QWORD PTR [rip+0x20503]        # 0x1400362b0
   140015dad:	call   0x14001c6a0
   140015db2:	inc    edi
   140015db4:	add    rbx,0x10
   140015db8:	cmp    edi,DWORD PTR [rsi]
   140015dba:	jae    0x140015e26
   140015dbc:	jmp    0x140015cff
   140015dc1:	xor    eax,eax
   140015dc3:	jmp    0x140015e2b
   140015dc5:	mov    rdi,QWORD PTR [r9+0x20]
   140015dc9:	xor    ebp,ebp
   140015dcb:	sub    rdi,r15
   140015dce:	cmp    DWORD PTR [rsi],ebp
   140015dd0:	jbe    0x140015e26
   140015dd2:	lea    rbx,[rsi+0x10]
   140015dd6:	mov    ecx,DWORD PTR [rbx-0xc]
   140015dd9:	cmp    r12,rcx
   140015ddc:	jb     0x140015e1c
   140015dde:	mov    eax,DWORD PTR [rbx-0x8]
   140015de1:	cmp    r12,rax
   140015de4:	jae    0x140015e1c
   140015de6:	cmp    rdi,rcx
   140015de9:	jb     0x140015df7
   140015deb:	cmp    rdi,rax
   140015dee:	jae    0x140015df7
   140015df0:	test   BYTE PTR [r13+0x4],0x20
   140015df5:	jne    0x140015e26
   140015df7:	cmp    DWORD PTR [rbx],0x0
   140015dfa:	je     0x140015e05
   140015dfc:	mov    eax,DWORD PTR [rbx]
   140015dfe:	cmp    rdi,rax
   140015e01:	je     0x140015e26
   140015e03:	jmp    0x140015e1c
   140015e05:	mov    rdx,QWORD PTR [rsp+0x78]
   140015e0a:	add    rax,r15
   140015e0d:	mov    cl,0x1
   140015e0f:	mov    QWORD PTR [r14],rax
   140015e12:	mov    r8d,DWORD PTR [rbx-0x4]
   140015e16:	add    r8,r15
   140015e19:	call   r8
   140015e1c:	inc    ebp
   140015e1e:	add    rbx,0x10
   140015e22:	cmp    ebp,DWORD PTR [rsi]
   140015e24:	jb     0x140015dd6
   140015e26:	mov    eax,0x1
   140015e2b:	lea    r11,[rsp+0x40]
   140015e30:	mov    rbx,QWORD PTR [r11+0x30]
   140015e34:	mov    rbp,QWORD PTR [r11+0x40]
   140015e38:	mov    rsi,QWORD PTR [r11+0x48]
   140015e3c:	mov    rsp,r11
   140015e3f:	pop    r15
   140015e41:	pop    r14
   140015e43:	pop    r13
   140015e45:	pop    r12
   140015e47:	pop    rdi
   140015e48:	ret    
   140015e49:	int3   
   140015e4a:	int3   
   140015e4b:	int3   
   140015e4c:	xor    eax,eax
   140015e4e:	test   rdx,rdx
   140015e51:	je     0x140015e63
   140015e53:	cmp    BYTE PTR [rcx],0x0
   140015e56:	je     0x140015e63
   140015e58:	inc    rax
   140015e5b:	inc    rcx
   140015e5e:	cmp    rax,rdx
   140015e61:	jb     0x140015e53
   140015e63:	repz ret 
   140015e65:	int3   
   140015e66:	int3   
   140015e67:	int3   
   140015e68:	int3   
   140015e69:	int3   
   140015e6a:	int3   
   140015e6b:	int3   
   140015e6c:	int3   
   140015e6d:	int3   
   140015e6e:	int3   
   140015e6f:	int3   
   140015e70:	mov    rax,rsp
   140015e73:	mov    QWORD PTR [rax+0x8],rbx
   140015e77:	mov    QWORD PTR [rax+0x10],rbp
   140015e7b:	mov    QWORD PTR [rax+0x18],rsi
   140015e7f:	mov    QWORD PTR [rax+0x20],rdi
   140015e83:	push   r12
   140015e85:	sub    rsp,0x20
   140015e89:	mov    rbx,QWORD PTR [r9+0x38]
   140015e8d:	mov    rsi,rdx
   140015e90:	mov    r12,r8
   140015e93:	mov    rbp,rcx
   140015e96:	lea    r8,[rbx+0x4]
   140015e9a:	mov    rdx,r9
   140015e9d:	mov    rcx,rsi
   140015ea0:	mov    rdi,r9
   140015ea3:	call   0x14001581c
   140015ea8:	mov    r11d,DWORD PTR [rbx+0x4]
   140015eac:	mov    r10d,DWORD PTR [rbp+0x4]
   140015eb0:	mov    eax,r11d
   140015eb3:	and    r11d,0x2
   140015eb7:	mov    r8d,0x1
   140015ebd:	and    eax,r8d
   140015ec0:	and    r10b,0x66
   140015ec4:	cmove  r11d,eax
   140015ec8:	test   r11d,r11d
   140015ecb:	je     0x140015ee1
   140015ecd:	mov    r9,rdi
   140015ed0:	mov    r8,r12
   140015ed3:	mov    rdx,rsi
   140015ed6:	mov    rcx,rbp
   140015ed9:	call   0x1400153b4
   140015ede:	mov    r8d,eax
   140015ee1:	mov    rbx,QWORD PTR [rsp+0x30]
   140015ee6:	mov    rbp,QWORD PTR [rsp+0x38]
   140015eeb:	mov    rsi,QWORD PTR [rsp+0x40]
   140015ef0:	mov    rdi,QWORD PTR [rsp+0x48]
   140015ef5:	mov    eax,r8d
   140015ef8:	add    rsp,0x20
   140015efc:	pop    r12
   140015efe:	ret    
   140015eff:	int3   
   140015f00:	lea    r9,[rip+0x32ec9]        # 0x140048dd0
   140015f07:	xor    eax,eax
   140015f09:	mov    rdx,r9
   140015f0c:	lea    r8d,[rax+0x8]
   140015f10:	cmp    ecx,DWORD PTR [rdx]
   140015f12:	je     0x140015f3f
   140015f14:	inc    eax
   140015f16:	add    rdx,r8
   140015f19:	cmp    eax,0x2d
   140015f1c:	jb     0x140015f10
   140015f1e:	lea    eax,[rcx-0x13]
   140015f21:	cmp    eax,0x11
   140015f24:	ja     0x140015f2c
   140015f26:	mov    eax,0xd
   140015f2b:	ret    
   140015f2c:	add    ecx,0xffffff44
   140015f32:	mov    eax,0x16
   140015f37:	cmp    ecx,0xe
   140015f3a:	cmovbe eax,r8d
   140015f3e:	ret    
   140015f3f:	cdqe   
   140015f41:	mov    eax,DWORD PTR [r9+rax*8+0x4]
   140015f46:	ret    
   140015f47:	int3   
   140015f48:	sub    rsp,0x28
   140015f4c:	call   0x140017690
   140015f51:	test   rax,rax
   140015f54:	jne    0x140015f5f
   140015f56:	lea    rax,[rip+0x32fdb]        # 0x140048f38
   140015f5d:	jmp    0x140015f63
   140015f5f:	add    rax,0x10
   140015f63:	add    rsp,0x28
   140015f67:	ret    
   140015f68:	sub    rsp,0x28
   140015f6c:	call   0x140017690
   140015f71:	test   rax,rax
   140015f74:	jne    0x140015f7f
   140015f76:	lea    rax,[rip+0x32fbf]        # 0x140048f3c
   140015f7d:	jmp    0x140015f83
   140015f7f:	add    rax,0x14
   140015f83:	add    rsp,0x28
   140015f87:	ret    
   140015f88:	rex push rbx
   140015f8a:	sub    rsp,0x20
   140015f8e:	mov    ebx,ecx
   140015f90:	call   0x140017690
   140015f95:	test   rax,rax
   140015f98:	jne    0x140015fa3
   140015f9a:	lea    rax,[rip+0x32f9b]        # 0x140048f3c
   140015fa1:	jmp    0x140015fa7
   140015fa3:	add    rax,0x14
   140015fa7:	mov    DWORD PTR [rax],ebx
   140015fa9:	call   0x140017690
   140015fae:	lea    r10,[rip+0x32f83]        # 0x140048f38
   140015fb5:	test   rax,rax
   140015fb8:	je     0x140015fbe
   140015fba:	lea    r10,[rax+0x10]
   140015fbe:	mov    ecx,ebx
   140015fc0:	call   0x140015f00
   140015fc5:	mov    DWORD PTR [r10],eax
   140015fc8:	add    rsp,0x20
   140015fcc:	pop    rbx
   140015fcd:	ret    
   140015fce:	int3   
   140015fcf:	int3   
   140015fd0:	mov    QWORD PTR [rsp+0x8],rbx
   140015fd5:	mov    QWORD PTR [rsp+0x10],rsi
   140015fda:	push   rdi
   140015fdb:	sub    rsp,0x20
   140015fdf:	mov    rbx,rdx
   140015fe2:	mov    rdi,rcx
   140015fe5:	test   rcx,rcx
   140015fe8:	jne    0x140015ff4
   140015fea:	mov    rcx,rdx
   140015fed:	call   0x140014f50
   140015ff2:	jmp    0x14001605e
   140015ff4:	test   rdx,rdx
   140015ff7:	jne    0x140016000
   140015ff9:	call   0x140014f10
   140015ffe:	jmp    0x14001605c
   140016000:	cmp    rdx,0xffffffffffffffe0
   140016004:	ja     0x140016049
   140016006:	mov    rcx,QWORD PTR [rip+0x38b33]        # 0x14004eb40
   14001600d:	mov    eax,0x1
   140016012:	test   rbx,rbx
   140016015:	cmove  rbx,rax
   140016019:	mov    r8,rdi
   14001601c:	xor    edx,edx
   14001601e:	mov    r9,rbx
   140016021:	call   QWORD PTR [rip+0x20141]        # 0x140036168
   140016027:	mov    rsi,rax
   14001602a:	test   rax,rax
   14001602d:	jne    0x14001609e
   14001602f:	cmp    DWORD PTR [rip+0x38e3b],eax        # 0x14004ee70
   140016035:	je     0x140016087
   140016037:	mov    rcx,rbx
   14001603a:	call   0x140019ce8
   14001603f:	test   eax,eax
   140016041:	je     0x14001606e
   140016043:	cmp    rbx,0xffffffffffffffe0
   140016047:	jbe    0x140016006
   140016049:	mov    rcx,rbx
   14001604c:	call   0x140019ce8
   140016051:	call   0x140015f48
   140016056:	mov    DWORD PTR [rax],0xc
   14001605c:	xor    eax,eax
   14001605e:	mov    rbx,QWORD PTR [rsp+0x30]
   140016063:	mov    rsi,QWORD PTR [rsp+0x38]
   140016068:	add    rsp,0x20
   14001606c:	pop    rdi
   14001606d:	ret    
   14001606e:	call   0x140015f48
   140016073:	mov    rbx,rax
   140016076:	call   QWORD PTR [rip+0x203e4]        # 0x140036460
   14001607c:	mov    ecx,eax
   14001607e:	call   0x140015f00
   140016083:	mov    DWORD PTR [rbx],eax
   140016085:	jmp    0x14001605c
   140016087:	call   0x140015f48
   14001608c:	mov    rbx,rax
   14001608f:	call   QWORD PTR [rip+0x203cb]        # 0x140036460
   140016095:	mov    ecx,eax
   140016097:	call   0x140015f00
   14001609c:	mov    DWORD PTR [rbx],eax
   14001609e:	mov    rax,rsi
   1400160a1:	jmp    0x14001605e
   1400160a3:	int3   
   1400160a4:	int3   
   1400160a5:	int3   
   1400160a6:	int3   
   1400160a7:	int3   
   1400160a8:	int3   
   1400160a9:	int3   
   1400160aa:	int3   
   1400160ab:	int3   
   1400160ac:	int3   
   1400160ad:	int3   
   1400160ae:	int3   
   1400160af:	int3   
   1400160b0:	int3   
   1400160b1:	int3   
   1400160b2:	int3   
   1400160b3:	int3   
   1400160b4:	int3   
   1400160b5:	int3   
   1400160b6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400160c0:	mov    r11,rcx
   1400160c3:	sub    rdx,rcx
   1400160c6:	jb     0x14001626a
   1400160cc:	cmp    r8,0x8
   1400160d0:	jb     0x140016133
   1400160d2:	test   cl,0x7
   1400160d5:	je     0x14001610d
   1400160d7:	test   cl,0x1
   1400160da:	je     0x1400160e7
   1400160dc:	mov    al,BYTE PTR [rdx+rcx*1]
   1400160df:	dec    r8
   1400160e2:	mov    BYTE PTR [rcx],al
   1400160e4:	inc    rcx
   1400160e7:	test   cl,0x2
   1400160ea:	je     0x1400160fb
   1400160ec:	mov    ax,WORD PTR [rdx+rcx*1]
   1400160f0:	sub    r8,0x2
   1400160f4:	mov    WORD PTR [rcx],ax
   1400160f7:	add    rcx,0x2
   1400160fb:	test   cl,0x4
   1400160fe:	je     0x14001610d
   140016100:	mov    eax,DWORD PTR [rdx+rcx*1]
   140016103:	sub    r8,0x4
   140016107:	mov    DWORD PTR [rcx],eax
   140016109:	add    rcx,0x4
   14001610d:	mov    r9,r8
   140016110:	shr    r9,0x5
   140016114:	jne    0x140016167
   140016116:	mov    r9,r8
   140016119:	shr    r9,0x3
   14001611d:	je     0x140016133
   14001611f:	mov    rax,QWORD PTR [rdx+rcx*1]
   140016123:	mov    QWORD PTR [rcx],rax
   140016126:	add    rcx,0x8
   14001612a:	dec    r9
   14001612d:	jne    0x14001611f
   14001612f:	and    r8,0x7
   140016133:	test   r8,r8
   140016136:	jne    0x140016140
   140016138:	mov    rax,r11
   14001613b:	ret    
   14001613c:	nop    DWORD PTR [rax+0x0]
   140016140:	mov    al,BYTE PTR [rdx+rcx*1]
   140016143:	mov    BYTE PTR [rcx],al
   140016145:	inc    rcx
   140016148:	dec    r8
   14001614b:	jne    0x140016140
   14001614d:	mov    rax,r11
   140016150:	ret    
   140016151:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016160:	data16 data16 xchg ax,ax
   140016164:	data16 xchg ax,ax
   140016167:	cmp    r9,0x2000
   14001616e:	jae    0x1400161b2
   140016170:	mov    rax,QWORD PTR [rdx+rcx*1]
   140016174:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   140016179:	add    rcx,0x20
   14001617d:	mov    QWORD PTR [rcx-0x20],rax
   140016181:	mov    QWORD PTR [rcx-0x18],r10
   140016185:	mov    rax,QWORD PTR [rdx+rcx*1-0x10]
   14001618a:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   14001618f:	dec    r9
   140016192:	mov    QWORD PTR [rcx-0x10],rax
   140016196:	mov    QWORD PTR [rcx-0x8],r10
   14001619a:	jne    0x140016170
   14001619c:	and    r8,0x1f
   1400161a0:	jmp    0x140016116
   1400161a5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400161b0:	xchg   ax,ax
   1400161b2:	cmp    rdx,0x1000
   1400161b9:	jb     0x140016170
   1400161bb:	mov    eax,0x20
   1400161c0:	prefetchnta BYTE PTR [rdx+rcx*1]
   1400161c4:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   1400161c9:	add    rcx,0x80
   1400161d0:	dec    eax
   1400161d2:	jne    0x1400161c0
   1400161d4:	sub    rcx,0x1000
   1400161db:	mov    eax,0x40
   1400161e0:	mov    r9,QWORD PTR [rdx+rcx*1]
   1400161e4:	mov    r10,QWORD PTR [rdx+rcx*1+0x8]
   1400161e9:	movnti QWORD PTR [rcx],r9
   1400161ed:	movnti QWORD PTR [rcx+0x8],r10
   1400161f2:	mov    r9,QWORD PTR [rdx+rcx*1+0x10]
   1400161f7:	mov    r10,QWORD PTR [rdx+rcx*1+0x18]
   1400161fc:	movnti QWORD PTR [rcx+0x10],r9
   140016201:	movnti QWORD PTR [rcx+0x18],r10
   140016206:	mov    r9,QWORD PTR [rdx+rcx*1+0x20]
   14001620b:	mov    r10,QWORD PTR [rdx+rcx*1+0x28]
   140016210:	add    rcx,0x40
   140016214:	movnti QWORD PTR [rcx-0x20],r9
   140016219:	movnti QWORD PTR [rcx-0x18],r10
   14001621e:	mov    r9,QWORD PTR [rdx+rcx*1-0x10]
   140016223:	mov    r10,QWORD PTR [rdx+rcx*1-0x8]
   140016228:	dec    eax
   14001622a:	movnti QWORD PTR [rcx-0x10],r9
   14001622f:	movnti QWORD PTR [rcx-0x8],r10
   140016234:	jne    0x1400161e0
   140016236:	sub    r8,0x1000
   14001623d:	cmp    r8,0x1000
   140016244:	jae    0x1400161bb
   14001624a:	lock or BYTE PTR [rsp],0x0
   14001624f:	jmp    0x14001610d
   140016254:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016260:	data16 data16 xchg ax,ax
   140016264:	data16 data16 xchg ax,ax
   140016268:	xchg   ax,ax
   14001626a:	add    rcx,r8
   14001626d:	cmp    r8,0x8
   140016271:	jb     0x1400162d4
   140016273:	test   cl,0x7
   140016276:	je     0x1400162ae
   140016278:	test   cl,0x1
   14001627b:	je     0x140016288
   14001627d:	dec    rcx
   140016280:	mov    al,BYTE PTR [rdx+rcx*1]
   140016283:	dec    r8
   140016286:	mov    BYTE PTR [rcx],al
   140016288:	test   cl,0x2
   14001628b:	je     0x14001629c
   14001628d:	sub    rcx,0x2
   140016291:	mov    ax,WORD PTR [rdx+rcx*1]
   140016295:	sub    r8,0x2
   140016299:	mov    WORD PTR [rcx],ax
   14001629c:	test   cl,0x4
   14001629f:	je     0x1400162ae
   1400162a1:	sub    rcx,0x4
   1400162a5:	mov    eax,DWORD PTR [rdx+rcx*1]
   1400162a8:	sub    r8,0x4
   1400162ac:	mov    DWORD PTR [rcx],eax
   1400162ae:	mov    r9,r8
   1400162b1:	shr    r9,0x5
   1400162b5:	jne    0x140016307
   1400162b7:	mov    r9,r8
   1400162ba:	shr    r9,0x3
   1400162be:	je     0x1400162d4
   1400162c0:	sub    rcx,0x8
   1400162c4:	mov    rax,QWORD PTR [rdx+rcx*1]
   1400162c8:	dec    r9
   1400162cb:	mov    QWORD PTR [rcx],rax
   1400162ce:	jne    0x1400162c0
   1400162d0:	and    r8,0x7
   1400162d4:	test   r8,r8
   1400162d7:	jne    0x1400162e0
   1400162d9:	mov    rax,r11
   1400162dc:	ret    
   1400162dd:	nop    DWORD PTR [rax]
   1400162e0:	dec    rcx
   1400162e3:	mov    al,BYTE PTR [rdx+rcx*1]
   1400162e6:	dec    r8
   1400162e9:	mov    BYTE PTR [rcx],al
   1400162eb:	jne    0x1400162e0
   1400162ed:	mov    rax,r11
   1400162f0:	ret    
   1400162f1:	data16 data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016300:	data16 data16 xchg ax,ax
   140016304:	data16 xchg ax,ax
   140016307:	cmp    r9,0x2000
   14001630e:	jae    0x140016352
   140016310:	mov    rax,QWORD PTR [rdx+rcx*1-0x8]
   140016315:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14001631a:	sub    rcx,0x20
   14001631e:	mov    QWORD PTR [rcx+0x18],rax
   140016322:	mov    QWORD PTR [rcx+0x10],r10
   140016326:	mov    rax,QWORD PTR [rdx+rcx*1+0x8]
   14001632b:	mov    r10,QWORD PTR [rdx+rcx*1]
   14001632f:	dec    r9
   140016332:	mov    QWORD PTR [rcx+0x8],rax
   140016336:	mov    QWORD PTR [rcx],r10
   140016339:	jne    0x140016310
   14001633b:	and    r8,0x1f
   14001633f:	jmp    0x1400162b7
   140016344:	data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   140016350:	xchg   ax,ax
   140016352:	cmp    rdx,0xfffffffffffff000
   140016359:	ja     0x140016310
   14001635b:	mov    eax,0x20
   140016360:	sub    rcx,0x80
   140016367:	prefetchnta BYTE PTR [rdx+rcx*1]
   14001636b:	prefetchnta BYTE PTR [rdx+rcx*1+0x40]
   140016370:	dec    eax
   140016372:	jne    0x140016360
   140016374:	add    rcx,0x1000
   14001637b:	mov    eax,0x40
   140016380:	mov    r9,QWORD PTR [rdx+rcx*1-0x8]
   140016385:	mov    r10,QWORD PTR [rdx+rcx*1-0x10]
   14001638a:	movnti QWORD PTR [rcx-0x8],r9
   14001638f:	movnti QWORD PTR [rcx-0x10],r10
   140016394:	mov    r9,QWORD PTR [rdx+rcx*1-0x18]
   140016399:	mov    r10,QWORD PTR [rdx+rcx*1-0x20]
   14001639e:	movnti QWORD PTR [rcx-0x18],r9
   1400163a3:	movnti QWORD PTR [rcx-0x20],r10
   1400163a8:	mov    r9,QWORD PTR [rdx+rcx*1-0x28]
   1400163ad:	mov    r10,QWORD PTR [rdx+rcx*1-0x30]
   1400163b2:	sub    rcx,0x40
   1400163b6:	movnti QWORD PTR [rcx+0x18],r9
   1400163bb:	movnti QWORD PTR [rcx+0x10],r10
   1400163c0:	mov    r9,QWORD PTR [rdx+rcx*1+0x8]
   1400163c5:	mov    r10,QWORD PTR [rdx+rcx*1]
   1400163c9:	dec    eax
   1400163cb:	movnti QWORD PTR [rcx+0x8],r9
   1400163d0:	movnti QWORD PTR [rcx],r10
   1400163d4:	jne    0x140016380
   1400163d6:	sub    r8,0x1000
   1400163dd:	cmp    r8,0x1000
   1400163e4:	jae    0x14001635b
   1400163ea:	lock or BYTE PTR [rsp],0x0
   1400163ef:	jmp    0x1400162ae
   1400163f4:	int3   
   1400163f5:	int3   
   1400163f6:	int3   
   1400163f7:	int3   
   1400163f8:	int3   
   1400163f9:	int3   
   1400163fa:	int3   
   1400163fb:	int3   
   1400163fc:	int3   
   1400163fd:	int3   
   1400163fe:	int3   
   1400163ff:	int3   
   140016400:	int3   
   140016401:	int3   
   140016402:	int3   
   140016403:	int3   
   140016404:	int3   
   140016405:	int3   
   140016406:	data16 nop WORD PTR [rax+rax*1+0x0]
   140016410:	sub    rdx,rcx
   140016413:	cmp    r8,0x8
   140016417:	jb     0x14001643b
   140016419:	test   cl,0x7
   14001641c:	je     0x140016432
   14001641e:	xchg   ax,ax
   140016420:	mov    al,BYTE PTR [rcx]
   140016422:	cmp    al,BYTE PTR [rdx+rcx*1]
   140016425:	jne    0x140016453
   140016427:	inc    rcx
   14001642a:	dec    r8
   14001642d:	test   cl,0x7
   140016430:	jne    0x140016420
   140016432:	mov    r9,r8
   140016435:	shr    r9,0x3
   140016439:	jne    0x14001645a
   14001643b:	test   r8,r8
   14001643e:	je     0x14001644f
   140016440:	mov    al,BYTE PTR [rcx]
   140016442:	cmp    al,BYTE PTR [rdx+rcx*1]
   140016445:	jne    0x140016453
   140016447:	inc    rcx
   14001644a:	dec    r8
   14001644d:	jne    0x140016440
   14001644f:	xor    rax,rax
   140016452:	ret    
   140016453:	sbb    eax,eax
   140016455:	sbb    eax,0xffffffff
   140016458:	ret    
   140016459:	nop
   14001645a:	shr    r9,0x2
   14001645e:	je     0x140016497
   140016460:	mov    rax,QWORD PTR [rcx]
   140016463:	cmp    rax,QWORD PTR [rdx+rcx*1]
   140016467:	jne    0x1400164c4
   140016469:	mov    rax,QWORD PTR [rcx+0x8]
   14001646d:	cmp    rax,QWORD PTR [rdx+rcx*1+0x8]
   140016472:	jne    0x1400164c0
   140016474:	mov    rax,QWORD PTR [rcx+0x10]
   140016478:	cmp    rax,QWORD PTR [rdx+rcx*1+0x10]
   14001647d:	jne    0x1400164bc
   14001647f:	mov    rax,QWORD PTR [rcx+0x18]
   140016483:	cmp    rax,QWORD PTR [rdx+rcx*1+0x18]
   140016488:	jne    0x1400164b8
   14001648a:	add    rcx,0x20
   14001648e:	dec    r9
   140016491:	jne    0x140016460
   140016493:	and    r8,0x1f
   140016497:	mov    r9,r8
   14001649a:	shr    r9,0x3
   14001649e:	je     0x14001643b
   1400164a0:	mov    rax,QWORD PTR [rcx]
   1400164a3:	cmp    rax,QWORD PTR [rdx+rcx*1]
   1400164a7:	jne    0x1400164c4
   1400164a9:	add    rcx,0x8
   1400164ad:	dec    r9
   1400164b0:	jne    0x1400164a0
   1400164b2:	and    r8,0x7
   1400164b6:	jmp    0x14001643b
   1400164b8:	add    rcx,0x8
   1400164bc:	add    rcx,0x8
   1400164c0:	add    rcx,0x8
   1400164c4:	mov    rcx,QWORD PTR [rcx+rdx*1]
   1400164c8:	bswap  rax
   1400164cb:	bswap  rcx
   1400164ce:	cmp    rax,rcx
   1400164d1:	sbb    eax,eax
   1400164d3:	sbb    eax,0xffffffff
   1400164d6:	ret    
   1400164d7:	int3   
   1400164d8:	rex push rbx
   1400164da:	sub    rsp,0x30
   1400164de:	test   rcx,rcx
   1400164e1:	je     0x1400164f0
   1400164e3:	test   rdx,rdx
   1400164e6:	je     0x1400164f0
   1400164e8:	test   r8,r8
   1400164eb:	jne    0x140016519
   1400164ed:	mov    BYTE PTR [rcx],r8b
   1400164f0:	call   0x140015f48
   1400164f5:	mov    ebx,0x16
   1400164fa:	and    QWORD PTR [rsp+0x20],0x0
   140016500:	xor    r9d,r9d
   140016503:	xor    r8d,r8d
   140016506:	xor    edx,edx
   140016508:	xor    ecx,ecx
   14001650a:	mov    DWORD PTR [rax],ebx
   14001650c:	call   0x1400149a8
   140016511:	mov    eax,ebx
   140016513:	add    rsp,0x30
   140016517:	pop    rbx
   140016518:	ret    
   140016519:	mov    r9,rcx
   14001651c:	mov    al,BYTE PTR [r8]
   14001651f:	inc    r8
   140016522:	mov    BYTE PTR [r9],al
   140016525:	inc    r9
   140016528:	test   al,al
   14001652a:	je     0x140016532
   14001652c:	sub    rdx,0x1
   140016530:	jne    0x14001651c
   140016532:	test   rdx,rdx
   140016535:	jne    0x140016545
   140016537:	mov    BYTE PTR [rcx],dl
   140016539:	call   0x140015f48
   14001653e:	mov    ebx,0x22
   140016543:	jmp    0x1400164fa
   140016545:	xor    eax,eax
   140016547:	jmp    0x140016513
   140016549:	int3   
   14001654a:	int3   
   14001654b:	int3   
   14001654c:	mov    QWORD PTR [rsp+0x8],rbx
   140016551:	mov    QWORD PTR [rsp+0x10],rsi
   140016556:	push   rdi
   140016557:	sub    rsp,0x30
   14001655b:	mov    esi,r9d
   14001655e:	mov    r11,r8
   140016561:	mov    r10,rdx
   140016564:	mov    edi,ecx
   140016566:	test   rdx,rdx
   140016569:	jne    0x140016593
   14001656b:	call   0x140015f48
   140016570:	mov    ebx,0x16
   140016575:	and    QWORD PTR [rsp+0x20],0x0
   14001657b:	xor    r9d,r9d
   14001657e:	xor    r8d,r8d
   140016581:	xor    edx,edx
   140016583:	xor    ecx,ecx
   140016585:	mov    DWORD PTR [rax],ebx
   140016587:	call   0x1400149a8
   14001658c:	mov    eax,ebx
   14001658e:	jmp    0x14001663d
   140016593:	test   r8,r8
   140016596:	je     0x14001656b
   140016598:	mov    BYTE PTR [rdx],0x0
   14001659b:	mov    edx,DWORD PTR [rsp+0x60]
   14001659f:	mov    eax,edx
   1400165a1:	neg    eax
   1400165a3:	sbb    rcx,rcx
   1400165a6:	neg    rcx
   1400165a9:	inc    rcx
   1400165ac:	cmp    r8,rcx
   1400165af:	ja     0x1400165bd
   1400165b1:	call   0x140015f48
   1400165b6:	mov    ebx,0x22
   1400165bb:	jmp    0x140016575
   1400165bd:	lea    eax,[r9-0x2]
   1400165c1:	mov    ebx,0x22
   1400165c6:	cmp    eax,ebx
   1400165c8:	ja     0x14001656b
   1400165ca:	xor    ecx,ecx
   1400165cc:	mov    r8,r10
   1400165cf:	test   edx,edx
   1400165d1:	je     0x1400165e0
   1400165d3:	mov    BYTE PTR [r10],0x2d
   1400165d7:	lea    r8,[r10+0x1]
   1400165db:	lea    ecx,[rbx-0x21]
   1400165de:	neg    edi
   1400165e0:	mov    r9,r8
   1400165e3:	xor    edx,edx
   1400165e5:	mov    eax,edi
   1400165e7:	div    esi
   1400165e9:	mov    edi,eax
   1400165eb:	cmp    edx,0x9
   1400165ee:	jbe    0x1400165f5
   1400165f0:	add    dl,0x57
   1400165f3:	jmp    0x1400165f8
   1400165f5:	add    dl,0x30
   1400165f8:	mov    BYTE PTR [r8],dl
   1400165fb:	inc    rcx
   1400165fe:	inc    r8
   140016601:	test   eax,eax
   140016603:	je     0x14001660a
   140016605:	cmp    rcx,r11
   140016608:	jb     0x1400165e3
   14001660a:	cmp    rcx,r11
   14001660d:	jb     0x14001661d
   14001660f:	mov    BYTE PTR [r10],0x0
   140016613:	call   0x140015f48
   140016618:	jmp    0x140016575
   14001661d:	mov    BYTE PTR [r8],0x0
   140016621:	dec    r8
   140016624:	mov    al,BYTE PTR [r9]
   140016627:	mov    cl,BYTE PTR [r8]
   14001662a:	mov    BYTE PTR [r8],al
   14001662d:	mov    BYTE PTR [r9],cl
   140016630:	inc    r9
   140016633:	dec    r8
   140016636:	cmp    r9,r8
   140016639:	jb     0x140016624
   14001663b:	xor    eax,eax
   14001663d:	mov    rbx,QWORD PTR [rsp+0x40]
   140016642:	mov    rsi,QWORD PTR [rsp+0x48]
   140016647:	add    rsp,0x30
   14001664b:	pop    rdi
   14001664c:	ret    
   14001664d:	int3   
   14001664e:	int3   
   14001664f:	int3   
   140016650:	sub    rsp,0x38
   140016654:	cmp    r9d,0xa
   140016658:	jne    0x140016668
   14001665a:	test   ecx,ecx
   14001665c:	jns    0x140016668
   14001665e:	mov    DWORD PTR [rsp+0x20],0x1
   140016666:	jmp    0x14001666d
   140016668:	and    DWORD PTR [rsp+0x20],0x0
   14001666d:	call   0x14001654c
   140016672:	add    rsp,0x38
   140016676:	ret    
   140016677:	int3   
   140016678:	mov    r11,rsp
   14001667b:	mov    QWORD PTR [r11+0x18],r8
   14001667f:	mov    QWORD PTR [r11+0x20],r9
   140016683:	sub    rsp,0x38
   140016687:	lea    rax,[r11+0x20]
   14001668b:	xor    r9d,r9d
   14001668e:	mov    QWORD PTR [r11-0x18],rax
   140016692:	call   0x1400167fc
   140016697:	add    rsp,0x38
   14001669b:	ret    
   14001669c:	sub    rsp,0x68
   1400166a0:	mov    rax,rcx
   1400166a3:	test   rdx,rdx
   1400166a6:	jne    0x1400166cd
   1400166a8:	call   0x140015f48
   1400166ad:	and    QWORD PTR [rsp+0x20],0x0
   1400166b3:	xor    r9d,r9d
   1400166b6:	xor    r8d,r8d
   1400166b9:	xor    edx,edx
   1400166bb:	xor    ecx,ecx
   1400166bd:	mov    DWORD PTR [rax],0x16
   1400166c3:	call   0x1400149a8
   1400166c8:	or     eax,0xffffffff
   1400166cb:	jmp    0x1400166f0
   1400166cd:	and    QWORD PTR [rsp+0x40],0x0
   1400166d3:	and    QWORD PTR [rsp+0x30],0x0
   1400166d9:	lea    rcx,[rsp+0x30]
   1400166de:	mov    DWORD PTR [rsp+0x38],0x7fffffff
   1400166e6:	mov    DWORD PTR [rsp+0x48],0x42
   1400166ee:	call   rax
   1400166f0:	add    rsp,0x68
   1400166f4:	ret    
   1400166f5:	int3   
   1400166f6:	int3   
   1400166f7:	int3   
   1400166f8:	mov    r9,rdx
   1400166fb:	mov    rdx,rcx
   1400166fe:	lea    rcx,[rip+0x63cb]        # 0x14001cad0
   140016705:	xor    r8d,r8d
   140016708:	jmp    0x14001669c
   14001670d:	int3   
   14001670e:	int3   
   14001670f:	int3   
   140016710:	mov    QWORD PTR [rsp+0x8],rbx
   140016715:	mov    QWORD PTR [rsp+0x10],rbp
   14001671a:	mov    QWORD PTR [rsp+0x18],rsi
   14001671f:	push   rdi
   140016720:	sub    rsp,0x60
   140016724:	xor    ebx,ebx
   140016726:	mov    r10,r9
   140016729:	mov    rbp,r8
   14001672c:	mov    rsi,rdx
   14001672f:	mov    r11,rcx
   140016732:	cmp    r9,rbx
   140016735:	jne    0x14001675e
   140016737:	call   0x140015f48
   14001673c:	xor    r9d,r9d
   14001673f:	xor    r8d,r8d
   140016742:	xor    edx,edx
   140016744:	xor    ecx,ecx
   140016746:	mov    QWORD PTR [rsp+0x20],rbx
   14001674b:	mov    DWORD PTR [rax],0x16
   140016751:	call   0x1400149a8
   140016756:	or     eax,0xffffffff
   140016759:	jmp    0x1400167e5
   14001675e:	cmp    r8,rbx
   140016761:	je     0x140016768
   140016763:	cmp    rdx,rbx
   140016766:	je     0x140016737
   140016768:	mov    r9,QWORD PTR [rsp+0x98]
   140016770:	mov    ecx,0x7fffffff
   140016775:	mov    eax,r8d
   140016778:	cmp    r8,rcx
   14001677b:	mov    r8,QWORD PTR [rsp+0x90]
   140016783:	mov    QWORD PTR [rsp+0x40],rdx
   140016788:	cmova  eax,ecx
   14001678b:	mov    QWORD PTR [rsp+0x30],rdx
   140016790:	lea    rcx,[rsp+0x30]
   140016795:	mov    rdx,r10
   140016798:	mov    DWORD PTR [rsp+0x48],0x42
   1400167a0:	mov    DWORD PTR [rsp+0x38],eax
   1400167a4:	call   r11
   1400167a7:	mov    edi,eax
   1400167a9:	cmp    rsi,rbx
   1400167ac:	je     0x1400167e5
   1400167ae:	cmp    eax,ebx
   1400167b0:	jl     0x1400167d7
   1400167b2:	sub    DWORD PTR [rsp+0x38],0x1
   1400167b7:	js     0x1400167c2
   1400167b9:	mov    rax,QWORD PTR [rsp+0x30]
   1400167be:	mov    BYTE PTR [rax],bl
   1400167c0:	jmp    0x1400167d3
   1400167c2:	lea    rdx,[rsp+0x30]
   1400167c7:	xor    ecx,ecx
   1400167c9:	call   0x14001c790
   1400167ce:	cmp    eax,0xffffffff
   1400167d1:	je     0x1400167d7
   1400167d3:	mov    eax,edi
   1400167d5:	jmp    0x1400167e5
   1400167d7:	cmp    DWORD PTR [rsp+0x38],ebx
   1400167db:	mov    BYTE PTR [rsi+rbp*1-0x1],bl
   1400167df:	setge  bl
   1400167e2:	lea    eax,[rbx-0x2]
   1400167e5:	lea    r11,[rsp+0x60]
   1400167ea:	mov    rbx,QWORD PTR [r11+0x10]
   1400167ee:	mov    rbp,QWORD PTR [r11+0x18]
   1400167f2:	mov    rsi,QWORD PTR [r11+0x20]
   1400167f6:	mov    rsp,r11
   1400167f9:	pop    rdi
   1400167fa:	ret    
   1400167fb:	int3   
   1400167fc:	rex push rbx
   1400167fe:	sub    rsp,0x30
   140016802:	mov    rbx,rcx
   140016805:	test   r8,r8
   140016808:	je     0x140016851
   14001680a:	test   rcx,rcx
   14001680d:	je     0x140016851
   14001680f:	test   rdx,rdx
   140016812:	je     0x140016851
   140016814:	mov    rax,QWORD PTR [rsp+0x60]
   140016819:	mov    QWORD PTR [rsp+0x28],rax
   14001681e:	mov    QWORD PTR [rsp+0x20],r9
   140016823:	mov    r9,r8
   140016826:	mov    r8,rdx
   140016829:	mov    rdx,rcx
   14001682c:	lea    rcx,[rip+0x6d85]        # 0x14001d5b8
   140016833:	call   0x140016710
   140016838:	test   eax,eax
   14001683a:	jns    0x14001683f
   14001683c:	mov    BYTE PTR [rbx],0x0
   14001683f:	cmp    eax,0xfffffffe
   140016842:	jne    0x140016874
   140016844:	call   0x140015f48
   140016849:	mov    DWORD PTR [rax],0x22
   14001684f:	jmp    0x14001685c
   140016851:	call   0x140015f48
   140016856:	mov    DWORD PTR [rax],0x16
   14001685c:	and    QWORD PTR [rsp+0x20],0x0
   140016862:	xor    r9d,r9d
   140016865:	xor    r8d,r8d
   140016868:	xor    edx,edx
   14001686a:	xor    ecx,ecx
   14001686c:	call   0x1400149a8
   140016871:	or     eax,0xffffffff
   140016874:	add    rsp,0x30
   140016878:	pop    rbx
   140016879:	ret    
   14001687a:	int3   
   14001687b:	int3   
   14001687c:	sub    rsp,0x38
   140016880:	mov    QWORD PTR [rsp+0x20],r9
   140016885:	xor    r9d,r9d
   140016888:	call   0x1400167fc
   14001688d:	add    rsp,0x38
   140016891:	ret    
   140016892:	int3   
   140016893:	int3   
   140016894:	mov    rax,rsp
   140016897:	mov    QWORD PTR [rax+0x8],rbx
   14001689b:	mov    QWORD PTR [rax+0x10],rbp
   14001689f:	mov    QWORD PTR [rax+0x18],rsi
   1400168a3:	mov    QWORD PTR [rax+0x20],rdi
   1400168a7:	push   r12
   1400168a9:	sub    rsp,0x30
   1400168ad:	mov    rbp,r9
   1400168b0:	mov    rsi,r8
   1400168b3:	mov    rbx,rdx
   1400168b6:	mov    rdi,rcx
   1400168b9:	test   r9,r9
   1400168bc:	je     0x1400169b1
   1400168c2:	test   r8,r8
   1400168c5:	jne    0x1400168dc
   1400168c7:	test   rcx,rcx
   1400168ca:	jne    0x1400168e5
   1400168cc:	test   rdx,rdx
   1400168cf:	jne    0x1400169b1
   1400168d5:	xor    eax,eax
   1400168d7:	jmp    0x1400169d4
   1400168dc:	test   rcx,rcx
   1400168df:	je     0x1400169b1
   1400168e5:	test   rdx,rdx
   1400168e8:	je     0x1400169b1
   1400168ee:	cmp    rdx,r8
   1400168f1:	jbe    0x140016943
   1400168f3:	call   0x140015f48
   1400168f8:	lea    r8,[rsi+0x1]
   1400168fc:	lea    rcx,[rip+0x6cb5]        # 0x14001d5b8
   140016903:	mov    ebx,DWORD PTR [rax]
   140016905:	mov    rax,QWORD PTR [rsp+0x68]
   14001690a:	mov    r9,rbp
   14001690d:	mov    QWORD PTR [rsp+0x28],rax
   140016912:	mov    rax,QWORD PTR [rsp+0x60]
   140016917:	mov    rdx,rdi
   14001691a:	mov    QWORD PTR [rsp+0x20],rax
   14001691f:	call   0x140016710
   140016924:	cmp    eax,0xfffffffe
   140016927:	jne    0x140016998
   140016929:	call   0x140015f48
   14001692e:	cmp    DWORD PTR [rax],0x22
   140016931:	jne    0x1400169d1
   140016937:	call   0x140015f48
   14001693c:	mov    DWORD PTR [rax],ebx
   14001693e:	jmp    0x1400169d1
   140016943:	call   0x140015f48
   140016948:	lea    rcx,[rip+0x6c69]        # 0x14001d5b8
   14001694f:	mov    r9,rbp
   140016952:	mov    r12d,DWORD PTR [rax]
   140016955:	mov    rax,QWORD PTR [rsp+0x68]
   14001695a:	mov    r8,rbx
   14001695d:	mov    QWORD PTR [rsp+0x28],rax
   140016962:	mov    rax,QWORD PTR [rsp+0x60]
   140016967:	mov    rdx,rdi
   14001696a:	mov    QWORD PTR [rsp+0x20],rax
   14001696f:	call   0x140016710
   140016974:	mov    BYTE PTR [rdi+rbx*1-0x1],0x0
   140016979:	cmp    eax,0xfffffffe
   14001697c:	jne    0x140016998
   14001697e:	cmp    rsi,0xffffffffffffffff
   140016982:	jne    0x14001699c
   140016984:	call   0x140015f48
   140016989:	cmp    DWORD PTR [rax],0x22
   14001698c:	jne    0x1400169d1
   14001698e:	call   0x140015f48
   140016993:	mov    DWORD PTR [rax],r12d
   140016996:	jmp    0x1400169d1
   140016998:	test   eax,eax
   14001699a:	jns    0x1400169d4
   14001699c:	mov    BYTE PTR [rdi],0x0
   14001699f:	cmp    eax,0xfffffffe
   1400169a2:	jne    0x1400169d1
   1400169a4:	call   0x140015f48
   1400169a9:	mov    DWORD PTR [rax],0x22
   1400169af:	jmp    0x1400169bc
   1400169b1:	call   0x140015f48
   1400169b6:	mov    DWORD PTR [rax],0x16
   1400169bc:	and    QWORD PTR [rsp+0x20],0x0
   1400169c2:	xor    r9d,r9d
   1400169c5:	xor    r8d,r8d
   1400169c8:	xor    edx,edx
   1400169ca:	xor    ecx,ecx
   1400169cc:	call   0x1400149a8
   1400169d1:	or     eax,0xffffffff
   1400169d4:	mov    rbx,QWORD PTR [rsp+0x40]
   1400169d9:	mov    rbp,QWORD PTR [rsp+0x48]
   1400169de:	mov    rsi,QWORD PTR [rsp+0x50]
   1400169e3:	mov    rdi,QWORD PTR [rsp+0x58]
   1400169e8:	add    rsp,0x30
   1400169ec:	pop    r12
   1400169ee:	ret    
   1400169ef:	int3   
   1400169f0:	sub    rsp,0x38
   1400169f4:	mov    rax,QWORD PTR [rsp+0x60]
   1400169f9:	mov    QWORD PTR [rsp+0x28],rax
   1400169fe:	and    QWORD PTR [rsp+0x20],0x0
   140016a04:	call   0x140016894
   140016a09:	add    rsp,0x38
   140016a0d:	ret    
   140016a0e:	int3   
   140016a0f:	int3   
   140016a10:	lea    rax,[rip+0x7831]        # 0x14001e248
   140016a17:	lea    rcx,[rip+0x844a]        # 0x14001ee68
   140016a1e:	mov    QWORD PTR [rip+0x32e53],rax        # 0x140049878
   140016a25:	lea    rax,[rip+0x780c]        # 0x14001e238
   140016a2c:	mov    QWORD PTR [rip+0x32e3d],rcx        # 0x140049870
   140016a33:	mov    QWORD PTR [rip+0x32e46],rax        # 0x140049880
   140016a3a:	lea    rax,[rip+0x77ff]        # 0x14001e240
   140016a41:	mov    QWORD PTR [rip+0x32e50],rcx        # 0x140049898
   140016a48:	mov    QWORD PTR [rip+0x32e39],rax        # 0x140049888
   140016a4f:	lea    rax,[rip+0x7786]        # 0x14001e1dc
   140016a56:	mov    QWORD PTR [rip+0x32e33],rax        # 0x140049890
   140016a5d:	lea    rax,[rip+0x836c]        # 0x14001edd0
   140016a64:	mov    QWORD PTR [rip+0x32e35],rax        # 0x1400498a0
   140016a6b:	lea    rax,[rip+0x7782]        # 0x14001e1f4
   140016a72:	mov    QWORD PTR [rip+0x32e2f],rax        # 0x1400498a8
   140016a79:	lea    rax,[rip+0x76bc]        # 0x14001e13c
   140016a80:	mov    QWORD PTR [rip+0x32e29],rax        # 0x1400498b0
   140016a87:	lea    rax,[rip+0x762e]        # 0x14001e0bc
   140016a8e:	mov    QWORD PTR [rip+0x32e23],rax        # 0x1400498b8
   140016a95:	ret    
   140016a96:	int3   
   140016a97:	int3   
   140016a98:	jmp    0x140016a10
   140016a9d:	int3   
   140016a9e:	int3   
   140016a9f:	int3   
   140016aa0:	sub    rsp,0x38
   140016aa4:	test   rcx,rcx
   140016aa7:	jne    0x140016acf
   140016aa9:	call   0x140015f48
   140016aae:	and    QWORD PTR [rsp+0x20],0x0
   140016ab4:	xor    r9d,r9d
   140016ab7:	xor    r8d,r8d
   140016aba:	xor    edx,edx
   140016abc:	xor    ecx,ecx
   140016abe:	mov    DWORD PTR [rax],0x16
   140016ac4:	call   0x1400149a8
   140016ac9:	or     rax,0xffffffffffffffff
   140016acd:	jmp    0x140016ae1
   140016acf:	mov    r8,rcx
   140016ad2:	mov    rcx,QWORD PTR [rip+0x38067]        # 0x14004eb40
   140016ad9:	xor    edx,edx
   140016adb:	call   QWORD PTR [rip+0x1f68f]        # 0x140036170
   140016ae1:	add    rsp,0x38
   140016ae5:	ret    
   140016ae6:	int3   
   140016ae7:	int3   
   140016ae8:	mov    QWORD PTR [rsp+0x8],rbx
   140016aed:	mov    QWORD PTR [rsp+0x10],rsi
   140016af2:	push   rdi
   140016af3:	sub    rsp,0x50
   140016af7:	mov    rdi,rcx
   140016afa:	mov    rbx,rdx
   140016afd:	lea    rcx,[rsp+0x30]
   140016b02:	mov    rdx,r8
   140016b05:	call   0x140014a6c
   140016b0a:	xor    esi,esi
   140016b0c:	cmp    rdi,rsi
   140016b0f:	jne    0x140016b4d
   140016b11:	call   0x140015f48
   140016b16:	xor    r9d,r9d
   140016b19:	xor    r8d,r8d
   140016b1c:	xor    edx,edx
   140016b1e:	xor    ecx,ecx
   140016b20:	mov    QWORD PTR [rsp+0x20],rsi
   140016b25:	mov    DWORD PTR [rax],0x16
   140016b2b:	call   0x1400149a8
   140016b30:	cmp    BYTE PTR [rsp+0x48],sil
   140016b35:	je     0x140016b43
   140016b37:	mov    rax,QWORD PTR [rsp+0x40]
   140016b3c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016b43:	mov    eax,0x7fffffff
   140016b48:	jmp    0x140016bed
   140016b4d:	cmp    rbx,rsi
   140016b50:	je     0x140016b11
   140016b52:	mov    r8,QWORD PTR [rsp+0x38]
   140016b57:	cmp    DWORD PTR [r8+0x8],esi
   140016b5b:	jne    0x140016b6a
   140016b5d:	mov    rdx,rbx
   140016b60:	mov    rcx,rdi
   140016b63:	call   0x1400174e0
   140016b68:	jmp    0x140016bda
   140016b6a:	movzx  ecx,BYTE PTR [rdi]
   140016b6d:	inc    rdi
   140016b70:	test   BYTE PTR [rcx+r8*1+0x1d],0x4
   140016b76:	je     0x140016b8e
   140016b78:	cmp    BYTE PTR [rdi],sil
   140016b7b:	jne    0x140016b81
   140016b7d:	mov    ecx,esi
   140016b7f:	jmp    0x140016b8e
   140016b81:	movzx  eax,BYTE PTR [rdi]
   140016b84:	shl    cx,0x8
   140016b88:	or     cx,ax
   140016b8b:	inc    rdi
   140016b8e:	movzx  edx,BYTE PTR [rbx]
   140016b91:	inc    rbx
   140016b94:	test   BYTE PTR [rdx+r8*1+0x1d],0x4
   140016b9a:	je     0x140016bb2
   140016b9c:	cmp    BYTE PTR [rbx],sil
   140016b9f:	jne    0x140016ba5
   140016ba1:	mov    edx,esi
   140016ba3:	jmp    0x140016bb2
   140016ba5:	movzx  eax,BYTE PTR [rbx]
   140016ba8:	shl    dx,0x8
   140016bac:	or     dx,ax
   140016baf:	inc    rbx
   140016bb2:	cmp    dx,cx
   140016bb5:	jne    0x140016bd3
   140016bb7:	cmp    cx,si
   140016bba:	jne    0x140016b6a
   140016bbc:	cmp    BYTE PTR [rsp+0x48],sil
   140016bc1:	je     0x140016bcf
   140016bc3:	mov    rax,QWORD PTR [rsp+0x40]
   140016bc8:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140016bcf:	xor    eax,eax
   140016bd1:	jmp    0x140016bed
   140016bd3:	sbb    eax,eax
   140016bd5:	and    eax,0x2
   140016bd8:	dec    eax
   140016bda:	cmp    BYTE PTR [rsp+0x48],sil
   140016bdf:	je     0x140016bed
   140016be1:	mov    rcx,QWORD PTR [rsp+0x40]
   140016be6:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016bed:	mov    rbx,QWORD PTR [rsp+0x60]
   140016bf2:	mov    rsi,QWORD PTR [rsp+0x68]
   140016bf7:	add    rsp,0x50
   140016bfb:	pop    rdi
   140016bfc:	ret    
   140016bfd:	int3   
   140016bfe:	int3   
   140016bff:	int3   
   140016c00:	xor    r8d,r8d
   140016c03:	jmp    0x140016ae8
   140016c08:	rex push rbx
   140016c0a:	sub    rsp,0x30
   140016c0e:	mov    r11,r8
   140016c11:	test   r9,r9
   140016c14:	jne    0x140016c24
   140016c16:	test   rcx,rcx
   140016c19:	jne    0x140016c29
   140016c1b:	test   rdx,rdx
   140016c1e:	jne    0x140016c40
   140016c20:	xor    eax,eax
   140016c22:	jmp    0x140016c63
   140016c24:	test   rcx,rcx
   140016c27:	je     0x140016c40
   140016c29:	test   rdx,rdx
   140016c2c:	je     0x140016c40
   140016c2e:	test   r9,r9
   140016c31:	jne    0x140016c38
   140016c33:	mov    BYTE PTR [rcx],r9b
   140016c36:	jmp    0x140016c20
   140016c38:	test   r8,r8
   140016c3b:	jne    0x140016c69
   140016c3d:	mov    BYTE PTR [rcx],r8b
   140016c40:	call   0x140015f48
   140016c45:	mov    ebx,0x16
   140016c4a:	and    QWORD PTR [rsp+0x20],0x0
   140016c50:	xor    r9d,r9d
   140016c53:	xor    r8d,r8d
   140016c56:	xor    edx,edx
   140016c58:	xor    ecx,ecx
   140016c5a:	mov    DWORD PTR [rax],ebx
   140016c5c:	call   0x1400149a8
   140016c61:	mov    eax,ebx
   140016c63:	add    rsp,0x30
   140016c67:	pop    rbx
   140016c68:	ret    
   140016c69:	mov    r10,rcx
   140016c6c:	mov    r8,rdx
   140016c6f:	cmp    r9,0xffffffffffffffff
   140016c73:	jne    0x140016c8d
   140016c75:	mov    al,BYTE PTR [r11]
   140016c78:	inc    r11
   140016c7b:	mov    BYTE PTR [r10],al
   140016c7e:	inc    r10
   140016c81:	test   al,al
   140016c83:	je     0x140016cb1
   140016c85:	sub    r8,0x1
   140016c89:	jne    0x140016c75
   140016c8b:	jmp    0x140016cb1
   140016c8d:	mov    al,BYTE PTR [r11]
   140016c90:	inc    r11
   140016c93:	mov    BYTE PTR [r10],al
   140016c96:	inc    r10
   140016c99:	test   al,al
   140016c9b:	je     0x140016ca9
   140016c9d:	sub    r8,0x1
   140016ca1:	je     0x140016ca9
   140016ca3:	sub    r9,0x1
   140016ca7:	jne    0x140016c8d
   140016ca9:	test   r9,r9
   140016cac:	jne    0x140016cb1
   140016cae:	mov    BYTE PTR [r10],r9b
   140016cb1:	test   r8,r8
   140016cb4:	jne    0x140016c20
   140016cba:	cmp    r9,0xffffffffffffffff
   140016cbe:	jne    0x140016ccb
   140016cc0:	mov    BYTE PTR [rcx+rdx*1-0x1],r8b
   140016cc5:	lea    eax,[r8+0x50]
   140016cc9:	jmp    0x140016c63
   140016ccb:	mov    BYTE PTR [rcx],0x0
   140016cce:	call   0x140015f48
   140016cd3:	mov    ebx,0x22
   140016cd8:	jmp    0x140016c4a
   140016cdd:	int3   
   140016cde:	int3   
   140016cdf:	int3   
   140016ce0:	mov    QWORD PTR [rsp+0x10],rbx
   140016ce5:	mov    QWORD PTR [rsp+0x18],rbp
   140016cea:	mov    QWORD PTR [rsp+0x20],rsi
   140016cef:	push   rdi
   140016cf0:	sub    rsp,0x30
   140016cf4:	mov    rbx,rdx
   140016cf7:	mov    rdi,rcx
   140016cfa:	test   rcx,rcx
   140016cfd:	jne    0x140016d25
   140016cff:	call   0x140015f48
   140016d04:	and    QWORD PTR [rsp+0x20],rdi
   140016d09:	xor    r9d,r9d
   140016d0c:	xor    r8d,r8d
   140016d0f:	xor    edx,edx
   140016d11:	xor    ecx,ecx
   140016d13:	mov    DWORD PTR [rax],0x16
   140016d19:	call   0x1400149a8
   140016d1e:	xor    eax,eax
   140016d20:	jmp    0x140016dd3
   140016d25:	cmp    rdx,0xffffffffffffffe0
   140016d29:	jbe    0x140016d38
   140016d2b:	call   0x140015f48
   140016d30:	mov    DWORD PTR [rax],0xc
   140016d36:	jmp    0x140016d1e
   140016d38:	test   rdx,rdx
   140016d3b:	mov    eax,0x1
   140016d40:	mov    r8,rcx
   140016d43:	mov    rcx,QWORD PTR [rip+0x37df6]        # 0x14004eb40
   140016d4a:	cmove  rbx,rax
   140016d4e:	xor    edx,edx
   140016d50:	call   QWORD PTR [rip+0x1f41a]        # 0x140036170
   140016d56:	mov    rcx,QWORD PTR [rip+0x37de3]        # 0x14004eb40
   140016d5d:	mov    r9,rbx
   140016d60:	mov    r8,rdi
   140016d63:	mov    edx,0x10
   140016d68:	mov    rbp,rax
   140016d6b:	call   QWORD PTR [rip+0x1f3f7]        # 0x140036168
   140016d71:	mov    rsi,rax
   140016d74:	test   rax,rax
   140016d77:	jne    0x140016dd0
   140016d79:	cmp    rbp,0x4000
   140016d80:	ja     0x140016db9
   140016d82:	cmp    rbx,rbp
   140016d85:	ja     0x140016db9
   140016d87:	mov    rcx,QWORD PTR [rip+0x37db2]        # 0x14004eb40
   140016d8e:	or     DWORD PTR [rsp+0x40],0xffffffff
   140016d93:	and    QWORD PTR [rsp+0x20],rax
   140016d98:	lea    r9d,[rax+0x4]
   140016d9c:	lea    r8,[rsp+0x40]
   140016da1:	xor    edx,edx
   140016da3:	call   QWORD PTR [rip+0x1f3cf]        # 0x140036178
   140016da9:	test   eax,eax
   140016dab:	je     0x140016db9
   140016dad:	cmp    DWORD PTR [rsp+0x40],0x2
   140016db2:	jne    0x140016db9
   140016db4:	mov    rsi,rdi
   140016db7:	jmp    0x140016dd0
   140016db9:	call   0x140015f48
   140016dbe:	mov    rbx,rax
   140016dc1:	call   QWORD PTR [rip+0x1f699]        # 0x140036460
   140016dc7:	mov    ecx,eax
   140016dc9:	call   0x140015f00
   140016dce:	mov    DWORD PTR [rbx],eax
   140016dd0:	mov    rax,rsi
   140016dd3:	mov    rbx,QWORD PTR [rsp+0x48]
   140016dd8:	mov    rbp,QWORD PTR [rsp+0x50]
   140016ddd:	mov    rsi,QWORD PTR [rsp+0x58]
   140016de2:	add    rsp,0x30
   140016de6:	pop    rdi
   140016de7:	ret    
   140016de8:	xor    edx,edx
   140016dea:	lea    r8d,[rdx+0xa]
   140016dee:	jmp    0x14001f148
   140016df3:	int3   
   140016df4:	mov    QWORD PTR [rsp+0x8],rbx
   140016df9:	mov    QWORD PTR [rsp+0x10],rsi
   140016dfe:	push   rdi
   140016dff:	sub    rsp,0x40
   140016e03:	mov    ebx,edx
   140016e05:	mov    rdx,rcx
   140016e08:	lea    rcx,[rsp+0x20]
   140016e0d:	mov    edi,r9d
   140016e10:	mov    esi,r8d
   140016e13:	call   0x140014a6c
   140016e18:	mov    rax,QWORD PTR [rsp+0x28]
   140016e1d:	movzx  r11d,bl
   140016e21:	test   BYTE PTR [r11+rax*1+0x1d],dil
   140016e26:	jne    0x140016e47
   140016e28:	test   esi,esi
   140016e2a:	je     0x140016e41
   140016e2c:	mov    rax,QWORD PTR [rsp+0x20]
   140016e31:	mov    rcx,QWORD PTR [rax+0x140]
   140016e38:	movzx  eax,WORD PTR [rcx+r11*2]
   140016e3d:	and    eax,esi
   140016e3f:	jmp    0x140016e43
   140016e41:	xor    eax,eax
   140016e43:	test   eax,eax
   140016e45:	je     0x140016e4c
   140016e47:	mov    eax,0x1
   140016e4c:	cmp    BYTE PTR [rsp+0x38],0x0
   140016e51:	je     0x140016e5f
   140016e53:	mov    rcx,QWORD PTR [rsp+0x30]
   140016e58:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140016e5f:	mov    rbx,QWORD PTR [rsp+0x50]
   140016e64:	mov    rsi,QWORD PTR [rsp+0x58]
   140016e69:	add    rsp,0x40
   140016e6d:	pop    rdi
   140016e6e:	ret    
   140016e6f:	int3   
   140016e70:	mov    rax,rdx
   140016e73:	mov    edx,ecx
   140016e75:	mov    r9d,0x4
   140016e7b:	mov    rcx,rax
   140016e7e:	xor    r8d,r8d
   140016e81:	jmp    0x140016df4
   140016e86:	int3   
   140016e87:	int3   
   140016e88:	mov    edx,ecx
   140016e8a:	mov    r9d,0x4
   140016e90:	xor    r8d,r8d
   140016e93:	xor    ecx,ecx
   140016e95:	jmp    0x140016df4
   140016e9a:	int3   
   140016e9b:	int3   
   140016e9c:	rex push rbx
   140016e9e:	sub    rsp,0x20
   140016ea2:	mov    ebx,ecx
   140016ea4:	call   0x140019c9c
   140016ea9:	mov    ecx,ebx
   140016eab:	call   0x140019a74
   140016eb0:	mov    rcx,QWORD PTR [rip+0x32091]        # 0x140048f48
   140016eb7:	call   0x1400175ac
   140016ebc:	mov    ecx,0xff
   140016ec1:	add    rsp,0x20
   140016ec5:	pop    rbx
   140016ec6:	rex.W jmp rax
   140016ec9:	int3   
   140016eca:	int3   
   140016ecb:	int3   
   140016ecc:	rex push rbx
   140016ece:	sub    rsp,0x20
   140016ed2:	mov    ebx,ecx
   140016ed4:	lea    rcx,[rip+0x2269d]        # 0x140039578
   140016edb:	call   QWORD PTR [rip+0x1f4a7]        # 0x140036388
   140016ee1:	test   rax,rax
   140016ee4:	je     0x140016eff
   140016ee6:	lea    rdx,[rip+0x2267b]        # 0x140039568
   140016eed:	mov    rcx,rax
   140016ef0:	call   QWORD PTR [rip+0x1f5b2]        # 0x1400364a8
   140016ef6:	test   rax,rax
   140016ef9:	je     0x140016eff
   140016efb:	mov    ecx,ebx
   140016efd:	call   rax
   140016eff:	add    rsp,0x20
   140016f03:	pop    rbx
   140016f04:	ret    
   140016f05:	int3   
   140016f06:	int3   
   140016f07:	int3   
   140016f08:	rex push rbx
   140016f0a:	sub    rsp,0x20
   140016f0e:	mov    ebx,ecx
   140016f10:	call   0x140016ecc
   140016f15:	mov    ecx,ebx
   140016f17:	call   QWORD PTR [rip+0x1f26b]        # 0x140036188
   140016f1d:	int3   
   140016f1e:	int3   
   140016f1f:	int3   
   140016f20:	mov    ecx,0x8
   140016f25:	jmp    0x140020744
   140016f2a:	int3   
   140016f2b:	int3   
   140016f2c:	mov    ecx,0x8
   140016f31:	jmp    0x140020644
   140016f36:	int3   
   140016f37:	int3   
   140016f38:	cmp    rcx,rdx
   140016f3b:	jae    0x140016f6a
   140016f3d:	mov    QWORD PTR [rsp+0x8],rbx
   140016f42:	push   rdi
   140016f43:	sub    rsp,0x20
   140016f47:	mov    rdi,rdx
   140016f4a:	mov    rbx,rcx
   140016f4d:	mov    rax,QWORD PTR [rbx]
   140016f50:	test   rax,rax
   140016f53:	je     0x140016f57
   140016f55:	call   rax
   140016f57:	add    rbx,0x8
   140016f5b:	cmp    rbx,rdi
   140016f5e:	jb     0x140016f4d
   140016f60:	mov    rbx,QWORD PTR [rsp+0x30]
   140016f65:	add    rsp,0x20
   140016f69:	pop    rdi
   140016f6a:	ret    
   140016f6b:	int3   
   140016f6c:	mov    QWORD PTR [rsp+0x8],rbx
   140016f71:	push   rdi
   140016f72:	sub    rsp,0x20
   140016f76:	xor    eax,eax
   140016f78:	mov    rdi,rdx
   140016f7b:	mov    rbx,rcx
   140016f7e:	cmp    rcx,rdx
   140016f81:	jae    0x140016f9a
   140016f83:	test   eax,eax
   140016f85:	jne    0x140016f9a
   140016f87:	mov    rcx,QWORD PTR [rbx]
   140016f8a:	test   rcx,rcx
   140016f8d:	je     0x140016f91
   140016f8f:	call   rcx
   140016f91:	add    rbx,0x8
   140016f95:	cmp    rbx,rdi
   140016f98:	jb     0x140016f83
   140016f9a:	mov    rbx,QWORD PTR [rsp+0x30]
   140016f9f:	add    rsp,0x20
   140016fa3:	pop    rdi
   140016fa4:	ret    
   140016fa5:	int3   
   140016fa6:	int3   
   140016fa7:	int3   
   140016fa8:	mov    QWORD PTR [rsp+0x8],rbx
   140016fad:	push   rdi
   140016fae:	sub    rsp,0x20
   140016fb2:	cmp    QWORD PTR [rip+0x22596],0x0        # 0x140039550
   140016fba:	mov    ebx,ecx
   140016fbc:	je     0x140016fd6
   140016fbe:	lea    rcx,[rip+0x2258b]        # 0x140039550
   140016fc5:	call   0x14001c730
   140016fca:	test   eax,eax
   140016fcc:	je     0x140016fd6
   140016fce:	mov    ecx,ebx
   140016fd0:	call   QWORD PTR [rip+0x2257a]        # 0x140039550
   140016fd6:	call   0x14001ee8c
   140016fdb:	lea    rdx,[rip+0x1f926]        # 0x140036908
   140016fe2:	lea    rcx,[rip+0x1f8f7]        # 0x1400368e0
   140016fe9:	call   0x140016f6c
   140016fee:	test   eax,eax
   140016ff0:	jne    0x14001704c
   140016ff2:	lea    rcx,[rip+0x3823]        # 0x14001a81c
   140016ff9:	call   0x140015acc
   140016ffe:	lea    rbx,[rip+0x1f813]        # 0x140036818
   140017005:	lea    rdi,[rip+0x1f8cc]        # 0x1400368d8
   14001700c:	jmp    0x14001701c
   14001700e:	mov    rax,QWORD PTR [rbx]
   140017011:	test   rax,rax
   140017014:	je     0x140017018
   140017016:	call   rax
   140017018:	add    rbx,0x8
   14001701c:	cmp    rbx,rdi
   14001701f:	jb     0x14001700e
   140017021:	cmp    QWORD PTR [rip+0x39837],0x0        # 0x140050860
   140017029:	je     0x14001704a
   14001702b:	lea    rcx,[rip+0x3982e]        # 0x140050860
   140017032:	call   0x14001c730
   140017037:	test   eax,eax
   140017039:	je     0x14001704a
   14001703b:	xor    r8d,r8d
   14001703e:	xor    ecx,ecx
   140017040:	lea    edx,[r8+0x2]
   140017044:	call   QWORD PTR [rip+0x39816]        # 0x140050860
   14001704a:	xor    eax,eax
   14001704c:	mov    rbx,QWORD PTR [rsp+0x30]
   140017051:	add    rsp,0x20
   140017055:	pop    rdi
   140017056:	ret    
   140017057:	int3   
   140017058:	mov    QWORD PTR [rsp+0x8],rbx
   14001705d:	mov    QWORD PTR [rsp+0x10],rsi
   140017062:	mov    DWORD PTR [rsp+0x18],r8d
   140017067:	push   rdi
   140017068:	push   r12
   14001706a:	push   r13
   14001706c:	push   r14
   14001706e:	push   r15
   140017070:	sub    rsp,0x40
   140017074:	mov    r12d,r8d
   140017077:	mov    ebx,edx
   140017079:	mov    r15d,ecx
   14001707c:	mov    ecx,0x8
   140017081:	call   0x140020744
   140017086:	nop
   140017087:	cmp    DWORD PTR [rip+0x374da],0x1        # 0x14004e568
   14001708e:	je     0x140017190
   140017094:	mov    DWORD PTR [rip+0x374c6],0x1        # 0x14004e564
   14001709e:	mov    BYTE PTR [rip+0x374bb],r12b        # 0x14004e560
   1400170a5:	test   ebx,ebx
   1400170a7:	jne    0x14001717c
   1400170ad:	mov    rcx,QWORD PTR [rip+0x3979c]        # 0x140050850
   1400170b4:	call   0x1400175ac
   1400170b9:	mov    rsi,rax
   1400170bc:	mov    QWORD PTR [rsp+0x30],rax
   1400170c1:	test   rax,rax
   1400170c4:	je     0x140017169
   1400170ca:	mov    rcx,QWORD PTR [rip+0x39777]        # 0x140050848
   1400170d1:	call   0x1400175ac
   1400170d6:	mov    rdi,rax
   1400170d9:	mov    QWORD PTR [rsp+0x20],rax
   1400170de:	mov    r14,rsi
   1400170e1:	mov    QWORD PTR [rsp+0x28],rsi
   1400170e6:	mov    r13,rax
   1400170e9:	mov    QWORD PTR [rsp+0x38],rax
   1400170ee:	sub    rdi,0x8
   1400170f2:	mov    QWORD PTR [rsp+0x20],rdi
   1400170f7:	cmp    rdi,rsi
   1400170fa:	jb     0x140017108
   1400170fc:	call   0x1400175a0
   140017101:	cmp    QWORD PTR [rdi],rax
   140017104:	jne    0x140017108
   140017106:	jmp    0x1400170ee
   140017108:	cmp    rdi,rsi
   14001710b:	jb     0x140017169
   14001710d:	mov    rcx,QWORD PTR [rdi]
   140017110:	call   0x1400175ac
   140017115:	mov    rbx,rax
   140017118:	call   0x1400175a0
   14001711d:	mov    QWORD PTR [rdi],rax
   140017120:	call   rbx
   140017122:	mov    rcx,QWORD PTR [rip+0x39727]        # 0x140050850
   140017129:	call   0x1400175ac
   14001712e:	mov    rbx,rax
   140017131:	mov    rcx,QWORD PTR [rip+0x39710]        # 0x140050848
   140017138:	call   0x1400175ac
   14001713d:	cmp    r14,rbx
   140017140:	jne    0x140017147
   140017142:	cmp    r13,rax
   140017145:	je     0x140017167
   140017147:	mov    r14,rbx
   14001714a:	mov    QWORD PTR [rsp+0x28],rbx
   14001714f:	mov    rsi,rbx
   140017152:	mov    QWORD PTR [rsp+0x30],rbx
   140017157:	mov    r13,rax
   14001715a:	mov    QWORD PTR [rsp+0x38],rax
   14001715f:	mov    rdi,rax
   140017162:	mov    QWORD PTR [rsp+0x20],rax
   140017167:	jmp    0x1400170ee
   140017169:	lea    rdx,[rip+0x1f7b8]        # 0x140036928
   140017170:	lea    rcx,[rip+0x1f799]        # 0x140036910
   140017177:	call   0x140016f38
   14001717c:	lea    rdx,[rip+0x1f7b5]        # 0x140036938
   140017183:	lea    rcx,[rip+0x1f7a6]        # 0x140036930
   14001718a:	call   0x140016f38
   14001718f:	nop
   140017190:	test   r12d,r12d
   140017193:	je     0x14001719f
   140017195:	mov    ecx,0x8
   14001719a:	call   0x140020644
   14001719f:	test   r12d,r12d
   1400171a2:	jne    0x1400171ca
   1400171a4:	mov    DWORD PTR [rip+0x373ba],0x1        # 0x14004e568
   1400171ae:	lea    ecx,[r12+0x8]
   1400171b3:	call   0x140020644
   1400171b8:	mov    ecx,r15d
   1400171bb:	call   0x140016ecc
   1400171c0:	mov    ecx,r15d
   1400171c3:	call   QWORD PTR [rip+0x1efbf]        # 0x140036188
   1400171c9:	int3   
   1400171ca:	mov    rbx,QWORD PTR [rsp+0x70]
   1400171cf:	mov    rsi,QWORD PTR [rsp+0x78]
   1400171d4:	add    rsp,0x40
   1400171d8:	pop    r15
   1400171da:	pop    r14
   1400171dc:	pop    r13
   1400171de:	pop    r12
   1400171e0:	pop    rdi
   1400171e1:	ret    
   1400171e2:	int3   
   1400171e3:	int3   
   1400171e4:	xor    r8d,r8d
   1400171e7:	xor    edx,edx
   1400171e9:	jmp    0x140017058
   1400171ee:	int3   
   1400171ef:	int3   
   1400171f0:	xor    r8d,r8d
   1400171f3:	lea    edx,[r8+0x1]
   1400171f7:	jmp    0x140017058
   1400171fc:	xor    edx,edx
   1400171fe:	xor    ecx,ecx
   140017200:	lea    r8d,[rdx+0x1]
   140017204:	jmp    0x140017058
   140017209:	int3   
   14001720a:	int3   
   14001720b:	int3   
   14001720c:	mov    edx,0x1
   140017211:	xor    ecx,ecx
   140017213:	mov    r8d,edx
   140017216:	jmp    0x140017058
   14001721b:	int3   
   14001721c:	rex push rbx
   14001721e:	sub    rsp,0x20
   140017222:	call   0x1400175a0
   140017227:	mov    rcx,rax
   14001722a:	mov    rbx,rax
   14001722d:	call   0x140019ce0
   140017232:	mov    rcx,rbx
   140017235:	call   0x140020a30
   14001723a:	mov    rcx,rbx
   14001723d:	call   0x140014878
   140017242:	mov    rcx,rbx
   140017245:	call   0x14001c41c
   14001724a:	mov    rcx,rbx
   14001724d:	call   0x140020a28
   140017252:	mov    rcx,rbx
   140017255:	call   0x140020788
   14001725a:	mov    rcx,rbx
   14001725d:	call   0x14000b99c
   140017262:	mov    rcx,rbx
   140017265:	call   0x14001bed4
   14001726a:	lea    rcx,[rip+0xffffffffffffff7f]        # 0x1400171f0
   140017271:	call   0x140017598
   140017276:	mov    QWORD PTR [rip+0x31ccb],rax        # 0x140048f48
   14001727d:	add    rsp,0x20
   140017281:	pop    rbx
   140017282:	ret    
   140017283:	int3   
   140017284:	rex push rbx
   140017286:	sub    rsp,0x30
   14001728a:	mov    r9,rcx
   14001728d:	test   rcx,rcx
   140017290:	je     0x14001729f
   140017292:	test   rdx,rdx
   140017295:	je     0x14001729f
   140017297:	test   r8,r8
   14001729a:	jne    0x1400172c8
   14001729c:	mov    BYTE PTR [rcx],r8b
   14001729f:	call   0x140015f48
   1400172a4:	mov    ebx,0x16
   1400172a9:	and    QWORD PTR [rsp+0x20],0x0
   1400172af:	xor    r9d,r9d
   1400172b2:	xor    r8d,r8d
   1400172b5:	xor    edx,edx
   1400172b7:	xor    ecx,ecx
   1400172b9:	mov    DWORD PTR [rax],ebx
   1400172bb:	call   0x1400149a8
   1400172c0:	mov    eax,ebx
   1400172c2:	add    rsp,0x30
   1400172c6:	pop    rbx
   1400172c7:	ret    
   1400172c8:	cmp    BYTE PTR [rcx],0x0
   1400172cb:	je     0x1400172d6
   1400172cd:	inc    rcx
   1400172d0:	sub    rdx,0x1
   1400172d4:	jne    0x1400172c8
   1400172d6:	test   rdx,rdx
   1400172d9:	jne    0x1400172e0
   1400172db:	mov    BYTE PTR [r9],dl
   1400172de:	jmp    0x14001729f
   1400172e0:	mov    al,BYTE PTR [r8]
   1400172e3:	inc    r8
   1400172e6:	mov    BYTE PTR [rcx],al
   1400172e8:	inc    rcx
   1400172eb:	test   al,al
   1400172ed:	je     0x1400172f5
   1400172ef:	sub    rdx,0x1
   1400172f3:	jne    0x1400172e0
   1400172f5:	test   rdx,rdx
   1400172f8:	jne    0x140017309
   1400172fa:	mov    BYTE PTR [r9],dl
   1400172fd:	call   0x140015f48
   140017302:	mov    ebx,0x22
   140017307:	jmp    0x1400172a9
   140017309:	xor    eax,eax
   14001730b:	jmp    0x1400172c2
   14001730d:	int3   
   14001730e:	int3   
   14001730f:	int3   
   140017310:	mov    QWORD PTR [rsp+0x8],rcx
   140017315:	sub    rsp,0x88
   14001731c:	lea    rcx,[rip+0x372ed]        # 0x14004e610
   140017323:	call   QWORD PTR [rip+0x1efa7]        # 0x1400362d0
   140017329:	mov    r11,QWORD PTR [rip+0x373d8]        # 0x14004e708
   140017330:	mov    QWORD PTR [rsp+0x58],r11
   140017335:	xor    r8d,r8d
   140017338:	lea    rdx,[rsp+0x60]
   14001733d:	mov    rcx,QWORD PTR [rsp+0x58]
   140017342:	call   0x140031fae
   140017347:	mov    QWORD PTR [rsp+0x50],rax
   14001734c:	cmp    QWORD PTR [rsp+0x50],0x0
   140017352:	je     0x140017395
   140017354:	mov    QWORD PTR [rsp+0x38],0x0
   14001735d:	lea    rax,[rsp+0x48]
   140017362:	mov    QWORD PTR [rsp+0x30],rax
   140017367:	lea    rax,[rsp+0x40]
   14001736c:	mov    QWORD PTR [rsp+0x28],rax
   140017371:	lea    rax,[rip+0x37298]        # 0x14004e610
   140017378:	mov    QWORD PTR [rsp+0x20],rax
   14001737d:	mov    r9,QWORD PTR [rsp+0x50]
   140017382:	mov    r8,QWORD PTR [rsp+0x58]
   140017387:	mov    rdx,QWORD PTR [rsp+0x60]
   14001738c:	xor    ecx,ecx
   14001738e:	call   0x140031fa8
   140017393:	jmp    0x1400173b7
   140017395:	mov    rax,QWORD PTR [rsp+0x88]
   14001739d:	mov    QWORD PTR [rip+0x37364],rax        # 0x14004e708
   1400173a4:	lea    rax,[rsp+0x88]
   1400173ac:	add    rax,0x8
   1400173b0:	mov    QWORD PTR [rip+0x372f1],rax        # 0x14004e6a8
   1400173b7:	mov    rax,QWORD PTR [rip+0x3734a]        # 0x14004e708
   1400173be:	mov    QWORD PTR [rip+0x371bb],rax        # 0x14004e580
   1400173c5:	mov    rax,QWORD PTR [rsp+0x90]
   1400173cd:	mov    QWORD PTR [rip+0x372bc],rax        # 0x14004e690
   1400173d4:	mov    DWORD PTR [rip+0x37192],0xc0000409        # 0x14004e570
   1400173de:	mov    DWORD PTR [rip+0x3718c],0x1        # 0x14004e574
   1400173e8:	mov    rax,QWORD PTR [rip+0x319d1]        # 0x140048dc0
   1400173ef:	mov    QWORD PTR [rsp+0x68],rax
   1400173f4:	mov    rax,QWORD PTR [rip+0x319cd]        # 0x140048dc8
   1400173fb:	mov    QWORD PTR [rsp+0x70],rax
   140017400:	call   QWORD PTR [rip+0x1eee2]        # 0x1400362e8
   140017406:	mov    DWORD PTR [rip+0x371fc],eax        # 0x14004e608
   14001740c:	mov    ecx,0x1
   140017411:	call   0x140017590
   140017416:	xor    ecx,ecx
   140017418:	call   QWORD PTR [rip+0x1eed2]        # 0x1400362f0
   14001741e:	lea    rcx,[rip+0x2216b]        # 0x140039590
   140017425:	call   QWORD PTR [rip+0x1eecd]        # 0x1400362f8
   14001742b:	cmp    DWORD PTR [rip+0x371d6],0x0        # 0x14004e608
   140017432:	jne    0x14001743e
   140017434:	mov    ecx,0x1
   140017439:	call   0x140017590
   14001743e:	call   QWORD PTR [rip+0x1eeec]        # 0x140036330
   140017444:	mov    edx,0xc0000409
   140017449:	mov    rcx,rax
   14001744c:	call   QWORD PTR [rip+0x1eeae]        # 0x140036300
   140017452:	add    rsp,0x88
   140017459:	ret    
   14001745a:	int3   
   14001745b:	int3   
   14001745c:	rex push rbx
   14001745e:	sub    rsp,0x30
   140017462:	mov    rbx,rcx
   140017465:	mov    ecx,0xe
   14001746a:	call   0x140020744
   14001746f:	nop
   140017470:	mov    rax,QWORD PTR [rbx+0x8]
   140017474:	test   rax,rax
   140017477:	je     0x1400174bd
   140017479:	mov    rcx,QWORD PTR [rip+0x37668]        # 0x14004eae8
   140017480:	mov    QWORD PTR [rsp+0x20],rcx
   140017485:	lea    rdx,[rip+0x37654]        # 0x14004eae0
   14001748c:	test   rcx,rcx
   14001748f:	je     0x1400174af
   140017491:	cmp    QWORD PTR [rcx],rax
   140017494:	jne    0x1400174a5
   140017496:	mov    rax,QWORD PTR [rcx+0x8]
   14001749a:	mov    QWORD PTR [rdx+0x8],rax
   14001749e:	call   0x140014f10
   1400174a3:	jmp    0x1400174af
   1400174a5:	mov    rdx,rcx
   1400174a8:	mov    QWORD PTR [rsp+0x20],rcx
   1400174ad:	jmp    0x14001748c
   1400174af:	mov    rcx,QWORD PTR [rbx+0x8]
   1400174b3:	call   0x140014f10
   1400174b8:	and    QWORD PTR [rbx+0x8],0x0
   1400174bd:	mov    ecx,0xe
   1400174c2:	call   0x140020644
   1400174c7:	add    rsp,0x30
   1400174cb:	pop    rbx
   1400174cc:	ret    
   1400174cd:	int3   
   1400174ce:	int3   
   1400174cf:	int3   
   1400174d0:	int3   
   1400174d1:	int3   
   1400174d2:	int3   
   1400174d3:	int3   
   1400174d4:	int3   
   1400174d5:	int3   
   1400174d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400174e0:	sub    rdx,rcx
   1400174e3:	mov    r9,rdx
   1400174e6:	test   cl,0x7
   1400174e9:	je     0x140017506
   1400174eb:	mov    al,BYTE PTR [rcx]
   1400174ed:	mov    dl,BYTE PTR [rcx+r9*1]
   1400174f1:	cmp    al,dl
   1400174f3:	jne    0x14001754b
   1400174f5:	inc    rcx
   1400174f8:	test   al,al
   1400174fa:	je     0x140017553
   1400174fc:	test   rcx,0x7
   140017503:	jne    0x1400174eb
   140017505:	nop
   140017506:	movabs r11,0x8101010101010100
   140017510:	lea    rdx,[rcx+r9*1]
   140017514:	and    dx,0xfff
   140017519:	cmp    dx,0xff8
   14001751e:	ja     0x1400174eb
   140017520:	mov    rax,QWORD PTR [rcx]
   140017523:	mov    rdx,QWORD PTR [rcx+r9*1]
   140017527:	cmp    rax,rdx
   14001752a:	jne    0x1400174eb
   14001752c:	movabs r10,0x7efefefefefefeff
   140017536:	add    r10,rdx
   140017539:	xor    rax,0xffffffffffffffff
   14001753d:	add    rcx,0x8
   140017541:	xor    rax,r10
   140017544:	test   r11,rax
   140017547:	je     0x140017510
   140017549:	jmp    0x14001755a
   14001754b:	sbb    rax,rax
   14001754e:	sbb    rax,0xffffffffffffffff
   140017552:	ret    
   140017553:	xor    eax,eax
   140017555:	ret    
   140017556:	data16 data16 xchg ax,ax
   14001755a:	test   dl,dl
   14001755c:	je     0x140017585
   14001755e:	test   dh,dh
   140017560:	je     0x140017585
   140017562:	shr    rdx,0x10
   140017566:	test   dl,dl
   140017568:	je     0x140017585
   14001756a:	test   dh,dh
   14001756c:	je     0x140017585
   14001756e:	shr    rdx,0x10
   140017572:	test   dl,dl
   140017574:	je     0x140017585
   140017576:	test   dh,dh
   140017578:	je     0x140017585
   14001757a:	shr    edx,0x10
   14001757d:	test   dl,dl
   14001757f:	je     0x140017585
   140017581:	test   dh,dh
   140017583:	jne    0x140017510
   140017585:	xor    eax,eax
   140017587:	ret    
   140017588:	sbb    rax,rax
   14001758b:	sbb    rax,0xffffffffffffffff
   14001758f:	ret    
   140017590:	and    DWORD PTR [rip+0x392a9],0x0        # 0x140050840
   140017597:	ret    
   140017598:	rex.W jmp QWORD PTR [rip+0x1ebf1]        # 0x140036190
   14001759f:	int3   
   1400175a0:	xor    ecx,ecx
   1400175a2:	rex.W jmp QWORD PTR [rip+0x1ebe7]        # 0x140036190
   1400175a9:	int3   
   1400175aa:	int3   
   1400175ab:	int3   
   1400175ac:	rex.W jmp QWORD PTR [rip+0x1ebe5]        # 0x140036198
   1400175b3:	int3   
   1400175b4:	sub    rsp,0x28
   1400175b8:	mov    ecx,DWORD PTR [rip+0x319a2]        # 0x140048f60
   1400175be:	cmp    ecx,0xffffffff
   1400175c1:	je     0x1400175d0
   1400175c3:	call   QWORD PTR [rip+0x1ebe7]        # 0x1400361b0
   1400175c9:	or     DWORD PTR [rip+0x31990],0xffffffff        # 0x140048f60
   1400175d0:	add    rsp,0x28
   1400175d4:	jmp    0x1400205c0
   1400175d9:	int3   
   1400175da:	int3   
   1400175db:	int3   
   1400175dc:	mov    QWORD PTR [rsp+0x8],rbx
   1400175e1:	push   rdi
   1400175e2:	sub    rsp,0x20
   1400175e6:	mov    rdi,rdx
   1400175e9:	mov    rbx,rcx
   1400175ec:	lea    rax,[rip+0x2271d]        # 0x140039d10
   1400175f3:	mov    QWORD PTR [rcx+0xa0],rax
   1400175fa:	mov    DWORD PTR [rcx+0x1c],0x1
   140017601:	mov    DWORD PTR [rcx+0xc8],0x1
   14001760b:	mov    BYTE PTR [rcx+0x174],0x43
   140017612:	mov    BYTE PTR [rcx+0x1f7],0x43
   140017619:	lea    rax,[rip+0x31950]        # 0x140048f70
   140017620:	mov    QWORD PTR [rcx+0xb8],rax
   140017627:	mov    ecx,0xd
   14001762c:	call   0x140020744
   140017631:	nop
   140017632:	mov    rax,QWORD PTR [rbx+0xb8]
   140017639:	lock add DWORD PTR [rax],0x1
   14001763d:	mov    ecx,0xd
   140017642:	call   0x140020644
   140017647:	mov    ecx,0xc
   14001764c:	call   0x140020744
   140017651:	nop
   140017652:	mov    QWORD PTR [rbx+0xc0],rdi
   140017659:	test   rdi,rdi
   14001765c:	jne    0x14001766c
   14001765e:	mov    rax,QWORD PTR [rip+0x31fbb]        # 0x140049620
   140017665:	mov    QWORD PTR [rbx+0xc0],rax
   14001766c:	mov    rcx,QWORD PTR [rbx+0xc0]
   140017673:	call   0x1400182cc
   140017678:	nop
   140017679:	mov    ecx,0xc
   14001767e:	call   0x140020644
   140017683:	mov    rbx,QWORD PTR [rsp+0x30]
   140017688:	add    rsp,0x20
   14001768c:	pop    rdi
   14001768d:	ret    
   14001768e:	int3   
   14001768f:	int3   
   140017690:	mov    QWORD PTR [rsp+0x8],rbx
   140017695:	push   rdi
   140017696:	sub    rsp,0x20
   14001769a:	call   QWORD PTR [rip+0x1edc0]        # 0x140036460
   1400176a0:	mov    ecx,DWORD PTR [rip+0x318ba]        # 0x140048f60
   1400176a6:	mov    edi,eax
   1400176a8:	call   QWORD PTR [rip+0x1eaf2]        # 0x1400361a0
   1400176ae:	mov    rbx,rax
   1400176b1:	test   rax,rax
   1400176b4:	jne    0x1400176fe
   1400176b6:	lea    ecx,[rax+0x1]
   1400176b9:	mov    edx,0x2c8
   1400176be:	call   0x14001c490
   1400176c3:	mov    rbx,rax
   1400176c6:	test   rax,rax
   1400176c9:	je     0x1400176fe
   1400176cb:	mov    ecx,DWORD PTR [rip+0x3188f]        # 0x140048f60
   1400176d1:	mov    rdx,rax
   1400176d4:	call   QWORD PTR [rip+0x1eace]        # 0x1400361a8
   1400176da:	mov    rcx,rbx
   1400176dd:	test   eax,eax
   1400176df:	je     0x1400176f7
   1400176e1:	xor    edx,edx
   1400176e3:	call   0x1400175dc
   1400176e8:	call   QWORD PTR [rip+0x1ecaa]        # 0x140036398
   1400176ee:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400176f3:	mov    DWORD PTR [rbx],eax
   1400176f5:	jmp    0x1400176fe
   1400176f7:	call   0x140014f10
   1400176fc:	xor    ebx,ebx
   1400176fe:	mov    ecx,edi
   140017700:	call   QWORD PTR [rip+0x1ed62]        # 0x140036468
   140017706:	mov    rax,rbx
   140017709:	mov    rbx,QWORD PTR [rsp+0x30]
   14001770e:	add    rsp,0x20
   140017712:	pop    rdi
   140017713:	ret    
   140017714:	rex push rbx
   140017716:	sub    rsp,0x20
   14001771a:	call   0x140017690
   14001771f:	mov    rbx,rax
   140017722:	test   rax,rax
   140017725:	jne    0x14001772f
   140017727:	lea    ecx,[rax+0x10]
   14001772a:	call   0x140016e9c
   14001772f:	mov    rax,rbx
   140017732:	add    rsp,0x20
   140017736:	pop    rbx
   140017737:	ret    
   140017738:	test   rcx,rcx
   14001773b:	je     0x14001786c
   140017741:	mov    QWORD PTR [rsp+0x10],rbx
   140017746:	push   rdi
   140017747:	sub    rsp,0x20
   14001774b:	mov    rbx,rcx
   14001774e:	mov    rcx,QWORD PTR [rcx+0x38]
   140017752:	test   rcx,rcx
   140017755:	je     0x14001775c
   140017757:	call   0x140014f10
   14001775c:	mov    rcx,QWORD PTR [rbx+0x48]
   140017760:	test   rcx,rcx
   140017763:	je     0x14001776a
   140017765:	call   0x140014f10
   14001776a:	mov    rcx,QWORD PTR [rbx+0x58]
   14001776e:	test   rcx,rcx
   140017771:	je     0x140017778
   140017773:	call   0x140014f10
   140017778:	mov    rcx,QWORD PTR [rbx+0x68]
   14001777c:	test   rcx,rcx
   14001777f:	je     0x140017786
   140017781:	call   0x140014f10
   140017786:	mov    rcx,QWORD PTR [rbx+0x70]
   14001778a:	test   rcx,rcx
   14001778d:	je     0x140017794
   14001778f:	call   0x140014f10
   140017794:	mov    rcx,QWORD PTR [rbx+0x78]
   140017798:	test   rcx,rcx
   14001779b:	je     0x1400177a2
   14001779d:	call   0x140014f10
   1400177a2:	mov    rcx,QWORD PTR [rbx+0x80]
   1400177a9:	test   rcx,rcx
   1400177ac:	je     0x1400177b3
   1400177ae:	call   0x140014f10
   1400177b3:	mov    rcx,QWORD PTR [rbx+0xa0]
   1400177ba:	lea    rax,[rip+0x2254f]        # 0x140039d10
   1400177c1:	cmp    rcx,rax
   1400177c4:	je     0x1400177cb
   1400177c6:	call   0x140014f10
   1400177cb:	mov    ecx,0xd
   1400177d0:	call   0x140020744
   1400177d5:	nop
   1400177d6:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400177dd:	mov    QWORD PTR [rsp+0x30],rcx
   1400177e2:	test   rcx,rcx
   1400177e5:	je     0x140017804
   1400177e7:	lock add DWORD PTR [rcx],0xffffffff
   1400177eb:	jne    0x140017804
   1400177ed:	lea    rax,[rip+0x3177c]        # 0x140048f70
   1400177f4:	mov    rcx,QWORD PTR [rsp+0x30]
   1400177f9:	cmp    rcx,rax
   1400177fc:	je     0x140017804
   1400177fe:	call   0x140014f10
   140017803:	nop
   140017804:	mov    ecx,0xd
   140017809:	call   0x140020644
   14001780e:	mov    ecx,0xc
   140017813:	call   0x140020744
   140017818:	nop
   140017819:	mov    rdi,QWORD PTR [rbx+0xc0]
   140017820:	test   rdi,rdi
   140017823:	je     0x140017850
   140017825:	mov    rcx,rdi
   140017828:	call   0x140018364
   14001782d:	cmp    rdi,QWORD PTR [rip+0x31dec]        # 0x140049620
   140017834:	je     0x140017850
   140017836:	lea    rax,[rip+0x31c83]        # 0x1400494c0
   14001783d:	cmp    rdi,rax
   140017840:	je     0x140017850
   140017842:	cmp    DWORD PTR [rdi],0x0
   140017845:	jne    0x140017850
   140017847:	mov    rcx,rdi
   14001784a:	call   0x140018150
   14001784f:	nop
   140017850:	mov    ecx,0xc
   140017855:	call   0x140020644
   14001785a:	mov    rcx,rbx
   14001785d:	call   0x140014f10
   140017862:	mov    rbx,QWORD PTR [rsp+0x38]
   140017867:	add    rsp,0x20
   14001786b:	pop    rdi
   14001786c:	ret    
   14001786d:	int3   
   14001786e:	int3   
   14001786f:	int3   
   140017870:	rex push rbx
   140017872:	sub    rsp,0x20
   140017876:	call   0x14001721c
   14001787b:	call   0x140020534
   140017880:	test   eax,eax
   140017882:	je     0x1400178e4
   140017884:	lea    rcx,[rip+0xfffffffffffffead]        # 0x140017738
   14001788b:	call   QWORD PTR [rip+0x1e927]        # 0x1400361b8
   140017891:	mov    DWORD PTR [rip+0x316c9],eax        # 0x140048f60
   140017897:	cmp    eax,0xffffffff
   14001789a:	je     0x1400178e4
   14001789c:	mov    edx,0x2c8
   1400178a1:	mov    ecx,0x1
   1400178a6:	call   0x14001c490
   1400178ab:	mov    rbx,rax
   1400178ae:	test   rax,rax
   1400178b1:	je     0x1400178e4
   1400178b3:	mov    ecx,DWORD PTR [rip+0x316a7]        # 0x140048f60
   1400178b9:	mov    rdx,rax
   1400178bc:	call   QWORD PTR [rip+0x1e8e6]        # 0x1400361a8
   1400178c2:	test   eax,eax
   1400178c4:	je     0x1400178e4
   1400178c6:	xor    edx,edx
   1400178c8:	mov    rcx,rbx
   1400178cb:	call   0x1400175dc
   1400178d0:	call   QWORD PTR [rip+0x1eac2]        # 0x140036398
   1400178d6:	or     QWORD PTR [rbx+0x8],0xffffffffffffffff
   1400178db:	mov    DWORD PTR [rbx],eax
   1400178dd:	mov    eax,0x1
   1400178e2:	jmp    0x1400178eb
   1400178e4:	call   0x1400175b4
   1400178e9:	xor    eax,eax
   1400178eb:	add    rsp,0x20
   1400178ef:	pop    rbx
   1400178f0:	ret    
   1400178f1:	int3   
   1400178f2:	int3   
   1400178f3:	int3   
   1400178f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400178f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400178fe:	mov    QWORD PTR [rsp+0x18],rsi
   140017903:	push   rdi
   140017904:	sub    rsp,0x20
   140017908:	lea    rbx,[rcx+0x1c]
   14001790c:	mov    rbp,rcx
   14001790f:	mov    esi,0x101
   140017914:	mov    rcx,rbx
   140017917:	mov    r8,rsi
   14001791a:	xor    edx,edx
   14001791c:	call   0x140015b00
   140017921:	xor    r11d,r11d
   140017924:	lea    rdi,[rbp+0x10]
   140017928:	lea    ecx,[r11+0x6]
   14001792c:	movzx  eax,r11w
   140017930:	mov    DWORD PTR [rbp+0x4],r11d
   140017934:	mov    DWORD PTR [rbp+0x8],r11d
   140017938:	mov    DWORD PTR [rbp+0xc],r11d
   14001793c:	rep stos WORD PTR es:[rdi],ax
   14001793f:	lea    rdi,[rip+0x3162a]        # 0x140048f70
   140017946:	sub    rdi,rbp
   140017949:	mov    al,BYTE PTR [rdi+rbx*1]
   14001794c:	mov    BYTE PTR [rbx],al
   14001794e:	inc    rbx
   140017951:	sub    rsi,0x1
   140017955:	jne    0x140017949
   140017957:	lea    rcx,[rbp+0x11d]
   14001795e:	mov    edx,0x100
   140017963:	mov    al,BYTE PTR [rcx+rdi*1]
   140017966:	mov    BYTE PTR [rcx],al
   140017968:	inc    rcx
   14001796b:	sub    rdx,0x1
   14001796f:	jne    0x140017963
   140017971:	mov    rbx,QWORD PTR [rsp+0x30]
   140017976:	mov    rbp,QWORD PTR [rsp+0x38]
   14001797b:	mov    rsi,QWORD PTR [rsp+0x40]
   140017980:	add    rsp,0x20
   140017984:	pop    rdi
   140017985:	ret    
   140017986:	int3   
   140017987:	int3   
   140017988:	mov    QWORD PTR [rsp+0x10],rbx
   14001798d:	mov    QWORD PTR [rsp+0x18],rsi
   140017992:	push   rdi
   140017993:	sub    rsp,0x580
   14001799a:	mov    rax,QWORD PTR [rip+0x3141f]        # 0x140048dc0
   1400179a1:	xor    rax,rsp
   1400179a4:	mov    QWORD PTR [rsp+0x570],rax
   1400179ac:	mov    rsi,rcx
   1400179af:	mov    ecx,DWORD PTR [rcx+0x4]
   1400179b2:	lea    rdx,[rsp+0x50]
   1400179b7:	call   QWORD PTR [rip+0x1e953]        # 0x140036310
   1400179bd:	mov    ebx,0x100
   1400179c2:	test   eax,eax
   1400179c4:	je     0x140017b07
   1400179ca:	xor    eax,eax
   1400179cc:	lea    rdx,[rsp+0x70]
   1400179d1:	mov    BYTE PTR [rdx],al
   1400179d3:	inc    eax
   1400179d5:	inc    rdx
   1400179d8:	cmp    eax,ebx
   1400179da:	jb     0x1400179d1
   1400179dc:	mov    al,BYTE PTR [rsp+0x56]
   1400179e0:	mov    BYTE PTR [rsp+0x70],0x20
   1400179e5:	lea    rdi,[rsp+0x56]
   1400179ea:	jmp    0x140017a15
   1400179ec:	movzx  edx,BYTE PTR [rdi+0x1]
   1400179f0:	movzx  r8d,al
   1400179f4:	cmp    r8d,edx
   1400179f7:	ja     0x140017a0f
   1400179f9:	sub    edx,r8d
   1400179fc:	mov    rax,r8
   1400179ff:	lea    rcx,[rsp+r8*1+0x70]
   140017a04:	lea    r8d,[rdx+0x1]
   140017a08:	mov    dl,0x20
   140017a0a:	call   0x140015b00
   140017a0f:	add    rdi,0x2
   140017a13:	mov    al,BYTE PTR [rdi]
   140017a15:	test   al,al
   140017a17:	jne    0x1400179ec
   140017a19:	mov    eax,DWORD PTR [rsi+0xc]
   140017a1c:	and    DWORD PTR [rsp+0x38],0x0
   140017a21:	lea    r8,[rsp+0x70]
   140017a26:	mov    DWORD PTR [rsp+0x30],eax
   140017a2a:	mov    eax,DWORD PTR [rsi+0x4]
   140017a2d:	mov    r9d,ebx
   140017a30:	mov    DWORD PTR [rsp+0x28],eax
   140017a34:	lea    rax,[rsp+0x370]
   140017a3c:	mov    edx,0x1
   140017a41:	xor    ecx,ecx
   140017a43:	mov    QWORD PTR [rsp+0x20],rax
   140017a48:	call   0x140020db4
   140017a4d:	and    DWORD PTR [rsp+0x40],0x0
   140017a52:	mov    eax,DWORD PTR [rsi+0x4]
   140017a55:	mov    edx,DWORD PTR [rsi+0xc]
   140017a58:	mov    DWORD PTR [rsp+0x38],eax
   140017a5c:	lea    rax,[rsp+0x170]
   140017a64:	mov    DWORD PTR [rsp+0x30],ebx
   140017a68:	mov    QWORD PTR [rsp+0x28],rax
   140017a6d:	lea    r9,[rsp+0x70]
   140017a72:	mov    r8d,ebx
   140017a75:	xor    ecx,ecx
   140017a77:	mov    DWORD PTR [rsp+0x20],ebx
   140017a7b:	call   0x1400197f4
   140017a80:	and    DWORD PTR [rsp+0x40],0x0
   140017a85:	mov    eax,DWORD PTR [rsi+0x4]
   140017a88:	mov    edx,DWORD PTR [rsi+0xc]
   140017a8b:	mov    DWORD PTR [rsp+0x38],eax
   140017a8f:	lea    rax,[rsp+0x270]
   140017a97:	mov    DWORD PTR [rsp+0x30],ebx
   140017a9b:	mov    QWORD PTR [rsp+0x28],rax
   140017aa0:	lea    r9,[rsp+0x70]
   140017aa5:	mov    r8d,0x200
   140017aab:	xor    ecx,ecx
   140017aad:	mov    DWORD PTR [rsp+0x20],ebx
   140017ab1:	call   0x1400197f4
   140017ab6:	lea    r11,[rsp+0x370]
   140017abe:	lea    rcx,[rsi+0x1d]
   140017ac2:	xor    edx,edx
   140017ac4:	test   BYTE PTR [r11],0x1
   140017ac8:	je     0x140017ad6
   140017aca:	or     BYTE PTR [rcx],0x10
   140017acd:	mov    al,BYTE PTR [rsp+rdx*1+0x170]
   140017ad4:	jmp    0x140017ae6
   140017ad6:	test   BYTE PTR [r11],0x2
   140017ada:	je     0x140017aee
   140017adc:	or     BYTE PTR [rcx],0x20
   140017adf:	mov    al,BYTE PTR [rsp+rdx*1+0x270]
   140017ae6:	mov    BYTE PTR [rcx+0x100],al
   140017aec:	jmp    0x140017af5
   140017aee:	mov    BYTE PTR [rcx+0x100],0x0
   140017af5:	inc    rcx
   140017af8:	inc    rdx
   140017afb:	add    r11,0x2
   140017aff:	sub    rbx,0x1
   140017b03:	jne    0x140017ac4
   140017b05:	jmp    0x140017b46
   140017b07:	xor    edx,edx
   140017b09:	lea    rcx,[rsi+0x1d]
   140017b0d:	lea    r8d,[rdx-0x61]
   140017b11:	lea    eax,[r8+0x20]
   140017b15:	cmp    eax,0x19
   140017b18:	ja     0x140017b22
   140017b1a:	or     BYTE PTR [rcx],0x10
   140017b1d:	lea    eax,[rdx+0x20]
   140017b20:	jmp    0x140017b2e
   140017b22:	cmp    r8d,0x19
   140017b26:	ja     0x140017b36
   140017b28:	or     BYTE PTR [rcx],0x20
   140017b2b:	lea    eax,[rdx-0x20]
   140017b2e:	mov    BYTE PTR [rcx+0x100],al
   140017b34:	jmp    0x140017b3d
   140017b36:	mov    BYTE PTR [rcx+0x100],0x0
   140017b3d:	inc    edx
   140017b3f:	inc    rcx
   140017b42:	cmp    edx,ebx
   140017b44:	jb     0x140017b0d
   140017b46:	mov    rcx,QWORD PTR [rsp+0x570]
   140017b4e:	xor    rcx,rsp
   140017b51:	call   0x1400144f0
   140017b56:	lea    r11,[rsp+0x580]
   140017b5e:	mov    rbx,QWORD PTR [r11+0x18]
   140017b62:	mov    rsi,QWORD PTR [r11+0x20]
   140017b66:	mov    rsp,r11
   140017b69:	pop    rdi
   140017b6a:	ret    
   140017b6b:	int3   
   140017b6c:	mov    QWORD PTR [rsp+0x10],rbx
   140017b71:	push   rdi
   140017b72:	sub    rsp,0x20
   140017b76:	call   0x140017714
   140017b7b:	mov    rdi,rax
   140017b7e:	mov    ecx,DWORD PTR [rax+0xc8]
   140017b84:	test   DWORD PTR [rip+0x3191e],ecx        # 0x1400494a8
   140017b8a:	je     0x140017b9f
   140017b8c:	cmp    QWORD PTR [rax+0xc0],0x0
   140017b94:	je     0x140017b9f
   140017b96:	mov    rbx,QWORD PTR [rax+0xb8]
   140017b9d:	jmp    0x140017c0d
   140017b9f:	mov    ecx,0xd
   140017ba4:	call   0x140020744
   140017ba9:	nop
   140017baa:	mov    rbx,QWORD PTR [rdi+0xb8]
   140017bb1:	mov    QWORD PTR [rsp+0x30],rbx
   140017bb6:	cmp    rbx,QWORD PTR [rip+0x317e3]        # 0x1400493a0
   140017bbd:	je     0x140017c03
   140017bbf:	test   rbx,rbx
   140017bc2:	je     0x140017be0
   140017bc4:	lock add DWORD PTR [rbx],0xffffffff
   140017bc8:	jne    0x140017be0
   140017bca:	lea    rax,[rip+0x3139f]        # 0x140048f70
   140017bd1:	mov    rcx,QWORD PTR [rsp+0x30]
   140017bd6:	cmp    rcx,rax
   140017bd9:	je     0x140017be0
   140017bdb:	call   0x140014f10
   140017be0:	mov    rax,QWORD PTR [rip+0x317b9]        # 0x1400493a0
   140017be7:	mov    QWORD PTR [rdi+0xb8],rax
   140017bee:	mov    rax,QWORD PTR [rip+0x317ab]        # 0x1400493a0
   140017bf5:	mov    QWORD PTR [rsp+0x30],rax
   140017bfa:	lock add DWORD PTR [rax],0x1
   140017bfe:	mov    rbx,QWORD PTR [rsp+0x30]
   140017c03:	mov    ecx,0xd
   140017c08:	call   0x140020644
   140017c0d:	test   rbx,rbx
   140017c10:	jne    0x140017c1a
   140017c12:	lea    ecx,[rbx+0x20]
   140017c15:	call   0x140016e9c
   140017c1a:	mov    rax,rbx
   140017c1d:	mov    rbx,QWORD PTR [rsp+0x38]
   140017c22:	add    rsp,0x20
   140017c26:	pop    rdi
   140017c27:	ret    
   140017c28:	rex push rbx
   140017c2a:	sub    rsp,0x40
   140017c2e:	mov    ebx,ecx
   140017c30:	lea    rcx,[rsp+0x20]
   140017c35:	xor    edx,edx
   140017c37:	call   0x140014a6c
   140017c3c:	and    DWORD PTR [rip+0x36ead],0x0        # 0x14004eaf0
   140017c43:	cmp    ebx,0xfffffffe
   140017c46:	jne    0x140017c6d
   140017c48:	mov    DWORD PTR [rip+0x36e9e],0x1        # 0x14004eaf0
   140017c52:	call   QWORD PTR [rip+0x1e6b0]        # 0x140036308
   140017c58:	cmp    BYTE PTR [rsp+0x38],0x0
   140017c5d:	je     0x140017cb2
   140017c5f:	mov    rcx,QWORD PTR [rsp+0x30]
   140017c64:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140017c6b:	jmp    0x140017cb2
   140017c6d:	cmp    ebx,0xfffffffd
   140017c70:	jne    0x140017c84
   140017c72:	mov    DWORD PTR [rip+0x36e74],0x1        # 0x14004eaf0
   140017c7c:	call   QWORD PTR [rip+0x1e53e]        # 0x1400361c0
   140017c82:	jmp    0x140017c58
   140017c84:	cmp    ebx,0xfffffffc
   140017c87:	jne    0x140017c9d
   140017c89:	mov    rax,QWORD PTR [rsp+0x20]
   140017c8e:	mov    DWORD PTR [rip+0x36e58],0x1        # 0x14004eaf0
   140017c98:	mov    eax,DWORD PTR [rax+0x4]
   140017c9b:	jmp    0x140017c58
   140017c9d:	cmp    BYTE PTR [rsp+0x38],0x0
   140017ca2:	je     0x140017cb0
   140017ca4:	mov    rax,QWORD PTR [rsp+0x30]
   140017ca9:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140017cb0:	mov    eax,ebx
   140017cb2:	add    rsp,0x40
   140017cb6:	pop    rbx
   140017cb7:	ret    
   140017cb8:	mov    QWORD PTR [rsp+0x18],rbx
   140017cbd:	push   rbp
   140017cbe:	push   rsi
   140017cbf:	push   rdi
   140017cc0:	push   r12
   140017cc2:	push   r13
   140017cc4:	sub    rsp,0x40
   140017cc8:	mov    rax,QWORD PTR [rip+0x310f1]        # 0x140048dc0
   140017ccf:	xor    rax,rsp
   140017cd2:	mov    QWORD PTR [rsp+0x38],rax
   140017cd7:	mov    rsi,rdx
   140017cda:	call   0x140017c28
   140017cdf:	xor    ebx,ebx
   140017ce1:	mov    edi,eax
   140017ce3:	cmp    eax,ebx
   140017ce5:	jne    0x140017cf4
   140017ce7:	mov    rcx,rsi
   140017cea:	call   0x1400178f4
   140017cef:	jmp    0x140017f0c
   140017cf4:	lea    r13,[rip+0x316b5]        # 0x1400493b0
   140017cfb:	mov    ecx,ebx
   140017cfd:	mov    rbp,rbx
   140017d00:	mov    rax,r13
   140017d03:	mov    r12d,0x1
   140017d09:	cmp    DWORD PTR [rax],edi
   140017d0b:	je     0x140017e38
   140017d11:	add    ecx,r12d
   140017d14:	add    rbp,r12
   140017d17:	add    rax,0x30
   140017d1b:	cmp    ecx,0x5
   140017d1e:	jb     0x140017d09
   140017d20:	cmp    edi,0xfde8
   140017d26:	je     0x140017e30
   140017d2c:	cmp    edi,0xfde9
   140017d32:	je     0x140017e30
   140017d38:	movzx  ecx,di
   140017d3b:	call   QWORD PTR [rip+0x1e487]        # 0x1400361c8
   140017d41:	cmp    eax,ebx
   140017d43:	je     0x140017e30
   140017d49:	lea    rdx,[rsp+0x20]
   140017d4e:	mov    ecx,edi
   140017d50:	call   QWORD PTR [rip+0x1e5ba]        # 0x140036310
   140017d56:	cmp    eax,ebx
   140017d58:	je     0x140017e24
   140017d5e:	lea    rcx,[rsi+0x1c]
   140017d62:	xor    edx,edx
   140017d64:	mov    r8d,0x101
   140017d6a:	call   0x140015b00
   140017d6f:	mov    DWORD PTR [rsi+0x4],edi
   140017d72:	mov    DWORD PTR [rsi+0xc],ebx
   140017d75:	cmp    DWORD PTR [rsp+0x20],r12d
   140017d7a:	jbe    0x140017e0d
   140017d80:	lea    rax,[rsp+0x26]
   140017d85:	cmp    BYTE PTR [rsp+0x26],bl
   140017d89:	je     0x140017db8
   140017d8b:	cmp    BYTE PTR [rax+0x1],bl
   140017d8e:	je     0x140017db8
   140017d90:	movzx  edi,BYTE PTR [rax]
   140017d93:	movzx  ecx,BYTE PTR [rax+0x1]
   140017d97:	cmp    edi,ecx
   140017d99:	ja     0x140017db0
   140017d9b:	sub    ecx,edi
   140017d9d:	lea    rdx,[rdi+rsi*1+0x1d]
   140017da2:	add    ecx,r12d
   140017da5:	or     BYTE PTR [rdx],0x4
   140017da8:	add    rdx,r12
   140017dab:	sub    rcx,r12
   140017dae:	jne    0x140017da5
   140017db0:	add    rax,0x2
   140017db4:	cmp    BYTE PTR [rax],bl
   140017db6:	jne    0x140017d8b
   140017db8:	lea    rax,[rsi+0x1e]
   140017dbc:	mov    ecx,0xfe
   140017dc1:	or     BYTE PTR [rax],0x8
   140017dc4:	add    rax,r12
   140017dc7:	sub    rcx,r12
   140017dca:	jne    0x140017dc1
   140017dcc:	mov    ecx,DWORD PTR [rsi+0x4]
   140017dcf:	sub    ecx,0x3a4
   140017dd5:	je     0x140017dff
   140017dd7:	sub    ecx,0x4
   140017dda:	je     0x140017df8
   140017ddc:	sub    ecx,0xd
   140017ddf:	je     0x140017df1
   140017de1:	cmp    ecx,r12d
   140017de4:	je     0x140017dea
   140017de6:	mov    eax,ebx
   140017de8:	jmp    0x140017e04
   140017dea:	mov    eax,0x404
   140017def:	jmp    0x140017e04
   140017df1:	mov    eax,0x412
   140017df6:	jmp    0x140017e04
   140017df8:	mov    eax,0x804
   140017dfd:	jmp    0x140017e04
   140017dff:	mov    eax,0x411
   140017e04:	mov    DWORD PTR [rsi+0xc],eax
   140017e07:	mov    DWORD PTR [rsi+0x8],r12d
   140017e0b:	jmp    0x140017e10
   140017e0d:	mov    DWORD PTR [rsi+0x8],ebx
   140017e10:	lea    rdi,[rsi+0x10]
   140017e14:	movzx  eax,bx
   140017e17:	mov    ecx,0x6
   140017e1c:	rep stos WORD PTR es:[rdi],ax
   140017e1f:	jmp    0x140017f04
   140017e24:	cmp    DWORD PTR [rip+0x36cc6],ebx        # 0x14004eaf0
   140017e2a:	jne    0x140017ce7
   140017e30:	or     eax,0xffffffff
   140017e33:	jmp    0x140017f0e
   140017e38:	lea    rcx,[rsi+0x1c]
   140017e3c:	xor    edx,edx
   140017e3e:	mov    r8d,0x101
   140017e44:	call   0x140015b00
   140017e49:	lea    rbp,[rbp+rbp*2+0x0]
   140017e4e:	lea    r11,[rip+0x31553]        # 0x1400493a8
   140017e55:	add    rbp,rbp
   140017e58:	mov    r10d,0x4
   140017e5e:	lea    r8,[r13+rbp*8+0x10]
   140017e63:	mov    rcx,r8
   140017e66:	cmp    BYTE PTR [r8],bl
   140017e69:	je     0x140017e9c
   140017e6b:	cmp    BYTE PTR [rcx+0x1],bl
   140017e6e:	je     0x140017e9c
   140017e70:	movzx  edx,BYTE PTR [rcx]
   140017e73:	movzx  eax,BYTE PTR [rcx+0x1]
   140017e77:	cmp    edx,eax
   140017e79:	ja     0x140017e94
   140017e7b:	lea    r9,[rdx+rsi*1+0x1d]
   140017e80:	mov    al,BYTE PTR [r11]
   140017e83:	add    edx,r12d
   140017e86:	or     BYTE PTR [r9],al
   140017e89:	movzx  eax,BYTE PTR [rcx+0x1]
   140017e8d:	add    r9,r12
   140017e90:	cmp    edx,eax
   140017e92:	jbe    0x140017e80
   140017e94:	add    rcx,0x2
   140017e98:	cmp    BYTE PTR [rcx],bl
   140017e9a:	jne    0x140017e6b
   140017e9c:	add    r8,0x8
   140017ea0:	add    r11,r12
   140017ea3:	sub    r10,r12
   140017ea6:	jne    0x140017e63
   140017ea8:	mov    DWORD PTR [rsi+0x4],edi
   140017eab:	sub    edi,0x3a4
   140017eb1:	mov    DWORD PTR [rsi+0x8],r12d
   140017eb5:	je     0x140017edb
   140017eb7:	sub    edi,0x4
   140017eba:	je     0x140017ed4
   140017ebc:	sub    edi,0xd
   140017ebf:	je     0x140017ecd
   140017ec1:	cmp    edi,r12d
   140017ec4:	jne    0x140017ee0
   140017ec6:	mov    ebx,0x404
   140017ecb:	jmp    0x140017ee0
   140017ecd:	mov    ebx,0x412
   140017ed2:	jmp    0x140017ee0
   140017ed4:	mov    ebx,0x804
   140017ed9:	jmp    0x140017ee0
   140017edb:	mov    ebx,0x411
   140017ee0:	mov    DWORD PTR [rsi+0xc],ebx
   140017ee3:	lea    rdx,[rsi+0x10]
   140017ee7:	lea    rdi,[r13+rbp*8+0x4]
   140017eec:	mov    ecx,0x6
   140017ef1:	movzx  eax,WORD PTR [rdi]
   140017ef4:	add    rdi,0x2
   140017ef8:	mov    WORD PTR [rdx],ax
   140017efb:	add    rdx,0x2
   140017eff:	sub    rcx,r12
   140017f02:	jne    0x140017ef1
   140017f04:	mov    rcx,rsi
   140017f07:	call   0x140017988
   140017f0c:	xor    eax,eax
   140017f0e:	mov    rcx,QWORD PTR [rsp+0x38]
   140017f13:	xor    rcx,rsp
   140017f16:	call   0x1400144f0
   140017f1b:	mov    rbx,QWORD PTR [rsp+0x80]
   140017f23:	add    rsp,0x40
   140017f27:	pop    r13
   140017f29:	pop    r12
   140017f2b:	pop    rdi
   140017f2c:	pop    rsi
   140017f2d:	pop    rbp
   140017f2e:	ret    
   140017f2f:	int3   
   140017f30:	mov    rax,rsp
   140017f33:	mov    QWORD PTR [rax+0x8],rbx
   140017f37:	mov    QWORD PTR [rax+0x10],rsi
   140017f3b:	mov    QWORD PTR [rax+0x18],rdi
   140017f3f:	mov    QWORD PTR [rax+0x20],r12
   140017f43:	push   r13
   140017f45:	sub    rsp,0x30
   140017f49:	mov    edi,ecx
   140017f4b:	or     r13d,0xffffffff
   140017f4f:	call   0x140017714
   140017f54:	mov    rsi,rax
   140017f57:	call   0x140017b6c
   140017f5c:	mov    rbx,QWORD PTR [rsi+0xb8]
   140017f63:	mov    ecx,edi
   140017f65:	call   0x140017c28
   140017f6a:	mov    r12d,eax
   140017f6d:	cmp    eax,DWORD PTR [rbx+0x4]
   140017f70:	je     0x140018105
   140017f76:	mov    ecx,0x220
   140017f7b:	call   0x14001c424
   140017f80:	mov    rbx,rax
   140017f83:	xor    edi,edi
   140017f85:	cmp    rax,rdi
   140017f88:	je     0x14001810a
   140017f8e:	mov    rdx,QWORD PTR [rsi+0xb8]
   140017f95:	mov    rcx,rax
   140017f98:	mov    r8d,0x220
   140017f9e:	call   0x1400160c0
   140017fa3:	mov    DWORD PTR [rbx],edi
   140017fa5:	mov    rdx,rbx
   140017fa8:	mov    ecx,r12d
   140017fab:	call   0x140017cb8
   140017fb0:	mov    r13d,eax
   140017fb3:	cmp    eax,edi
   140017fb5:	jne    0x1400180df
   140017fbb:	mov    rcx,QWORD PTR [rsi+0xb8]
   140017fc2:	lock add DWORD PTR [rcx],0xffffffff
   140017fc6:	jne    0x140017fe2
   140017fc8:	mov    rcx,QWORD PTR [rsi+0xb8]
   140017fcf:	lea    r12,[rip+0x30f9a]        # 0x140048f70
   140017fd6:	cmp    rcx,r12
   140017fd9:	je     0x140017fe9
   140017fdb:	call   0x140014f10
   140017fe0:	jmp    0x140017fe9
   140017fe2:	lea    r12,[rip+0x30f87]        # 0x140048f70
   140017fe9:	mov    QWORD PTR [rsi+0xb8],rbx
   140017ff0:	lock add DWORD PTR [rbx],0x1
   140017ff4:	test   BYTE PTR [rsi+0xc8],0x2
   140017ffb:	jne    0x14001810a
   140018001:	test   BYTE PTR [rip+0x314a0],0x1        # 0x1400494a8
   140018008:	jne    0x14001810a
   14001800e:	mov    ecx,0xd
   140018013:	call   0x140020744
   140018018:	nop
   140018019:	mov    eax,DWORD PTR [rbx+0x4]
   14001801c:	mov    DWORD PTR [rip+0x36ae2],eax        # 0x14004eb04
   140018022:	mov    eax,DWORD PTR [rbx+0x8]
   140018025:	mov    DWORD PTR [rip+0x36add],eax        # 0x14004eb08
   14001802b:	mov    eax,DWORD PTR [rbx+0xc]
   14001802e:	mov    DWORD PTR [rip+0x36ad8],eax        # 0x14004eb0c
   140018034:	mov    edx,edi
   140018036:	mov    DWORD PTR [rsp+0x20],edx
   14001803a:	lea    r8,[rip+0xfffffffffffe7fbf]        # 0x140000000
   140018041:	cmp    edx,0x5
   140018044:	jge    0x14001805f
   140018046:	movsxd rcx,edx
   140018049:	movzx  eax,WORD PTR [rbx+rcx*2+0x10]
   14001804e:	mov    WORD PTR [r8+rcx*2+0x4eaf8],ax
   140018057:	inc    edx
   140018059:	mov    DWORD PTR [rsp+0x20],edx
   14001805d:	jmp    0x140018041
   14001805f:	mov    edx,edi
   140018061:	mov    DWORD PTR [rsp+0x20],edx
   140018065:	cmp    edx,0x101
   14001806b:	jge    0x140018084
   14001806d:	movsxd rcx,edx
   140018070:	mov    al,BYTE PTR [rcx+rbx*1+0x1c]
   140018074:	mov    BYTE PTR [rcx+r8*1+0x49190],al
   14001807c:	inc    edx
   14001807e:	mov    DWORD PTR [rsp+0x20],edx
   140018082:	jmp    0x140018065
   140018084:	mov    DWORD PTR [rsp+0x20],edi
   140018088:	cmp    edi,0x100
   14001808e:	jge    0x1400180aa
   140018090:	movsxd rcx,edi
   140018093:	mov    al,BYTE PTR [rcx+rbx*1+0x11d]
   14001809a:	mov    BYTE PTR [rcx+r8*1+0x492a0],al
   1400180a2:	inc    edi
   1400180a4:	mov    DWORD PTR [rsp+0x20],edi
   1400180a8:	jmp    0x140018088
   1400180aa:	mov    rax,QWORD PTR [rip+0x312ef]        # 0x1400493a0
   1400180b1:	lock add DWORD PTR [rax],0xffffffff
   1400180b5:	jne    0x1400180c8
   1400180b7:	mov    rcx,QWORD PTR [rip+0x312e2]        # 0x1400493a0
   1400180be:	cmp    rcx,r12
   1400180c1:	je     0x1400180c8
   1400180c3:	call   0x140014f10
   1400180c8:	mov    QWORD PTR [rip+0x312d1],rbx        # 0x1400493a0
   1400180cf:	lock add DWORD PTR [rbx],0x1
   1400180d3:	mov    ecx,0xd
   1400180d8:	call   0x140020644
   1400180dd:	jmp    0x14001810a
   1400180df:	cmp    eax,0xffffffff
   1400180e2:	jne    0x14001810a
   1400180e4:	lea    r12,[rip+0x30e85]        # 0x140048f70
   1400180eb:	cmp    rbx,r12
   1400180ee:	je     0x1400180f8
   1400180f0:	mov    rcx,rbx
   1400180f3:	call   0x140014f10
   1400180f8:	call   0x140015f48
   1400180fd:	mov    DWORD PTR [rax],0x16
   140018103:	jmp    0x14001810a
   140018105:	xor    edi,edi
   140018107:	mov    r13d,edi
   14001810a:	mov    eax,r13d
   14001810d:	mov    rbx,QWORD PTR [rsp+0x40]
   140018112:	mov    rsi,QWORD PTR [rsp+0x48]
   140018117:	mov    rdi,QWORD PTR [rsp+0x50]
   14001811c:	mov    r12,QWORD PTR [rsp+0x58]
   140018121:	add    rsp,0x30
   140018125:	pop    r13
   140018127:	ret    
   140018128:	sub    rsp,0x28
   14001812c:	cmp    DWORD PTR [rip+0x38725],0x0        # 0x140050858
   140018133:	jne    0x140018149
   140018135:	mov    ecx,0xfffffffd
   14001813a:	call   0x140017f30
   14001813f:	mov    DWORD PTR [rip+0x3870f],0x1        # 0x140050858
   140018149:	xor    eax,eax
   14001814b:	add    rsp,0x28
   14001814f:	ret    
   140018150:	mov    QWORD PTR [rsp+0x8],rbx
   140018155:	mov    QWORD PTR [rsp+0x10],rsi
   14001815a:	push   rdi
   14001815b:	sub    rsp,0x20
   14001815f:	mov    rax,QWORD PTR [rcx+0x128]
   140018166:	mov    rbx,rcx
   140018169:	test   rax,rax
   14001816c:	je     0x1400181e7
   14001816e:	lea    rcx,[rip+0x31c4b]        # 0x140049dc0
   140018175:	cmp    rax,rcx
   140018178:	je     0x1400181e7
   14001817a:	mov    rax,QWORD PTR [rbx+0x110]
   140018181:	test   rax,rax
   140018184:	je     0x1400181e7
   140018186:	cmp    DWORD PTR [rax],0x0
   140018189:	jne    0x1400181e7
   14001818b:	mov    rcx,QWORD PTR [rbx+0x120]
   140018192:	test   rcx,rcx
   140018195:	je     0x1400181ad
   140018197:	cmp    DWORD PTR [rcx],0x0
   14001819a:	jne    0x1400181ad
   14001819c:	call   0x140014f10
   1400181a1:	mov    rcx,QWORD PTR [rbx+0x128]
   1400181a8:	call   0x14002198c
   1400181ad:	mov    rcx,QWORD PTR [rbx+0x118]
   1400181b4:	test   rcx,rcx
   1400181b7:	je     0x1400181cf
   1400181b9:	cmp    DWORD PTR [rcx],0x0
   1400181bc:	jne    0x1400181cf
   1400181be:	call   0x140014f10
   1400181c3:	mov    rcx,QWORD PTR [rbx+0x128]
   1400181ca:	call   0x140021738
   1400181cf:	mov    rcx,QWORD PTR [rbx+0x110]
   1400181d6:	call   0x140014f10
   1400181db:	mov    rcx,QWORD PTR [rbx+0x128]
   1400181e2:	call   0x140014f10
   1400181e7:	mov    rax,QWORD PTR [rbx+0x130]
   1400181ee:	test   rax,rax
   1400181f1:	je     0x14001823a
   1400181f3:	cmp    DWORD PTR [rax],0x0
   1400181f6:	jne    0x14001823a
   1400181f8:	mov    rcx,QWORD PTR [rbx+0x138]
   1400181ff:	sub    rcx,0xfe
   140018206:	call   0x140014f10
   14001820b:	mov    rcx,QWORD PTR [rbx+0x148]
   140018212:	mov    edi,0x80
   140018217:	sub    rcx,rdi
   14001821a:	call   0x140014f10
   14001821f:	mov    rcx,QWORD PTR [rbx+0x150]
   140018226:	sub    rcx,rdi
   140018229:	call   0x140014f10
   14001822e:	mov    rcx,QWORD PTR [rbx+0x130]
   140018235:	call   0x140014f10
   14001823a:	mov    rcx,QWORD PTR [rbx+0x158]
   140018241:	lea    rax,[rip+0x319f8]        # 0x140049c40
   140018248:	cmp    rcx,rax
   14001824b:	je     0x140018267
   14001824d:	cmp    DWORD PTR [rcx+0x160],0x0
   140018254:	jne    0x140018267
   140018256:	call   0x1400214b0
   14001825b:	mov    rcx,QWORD PTR [rbx+0x158]
   140018262:	call   0x140014f10
   140018267:	lea    rdi,[rbx+0x58]
   14001826b:	mov    esi,0x6
   140018270:	lea    rax,[rip+0x31239]        # 0x1400494b0
   140018277:	cmp    QWORD PTR [rdi-0x10],rax
   14001827b:	je     0x14001828f
   14001827d:	mov    rcx,QWORD PTR [rdi]
   140018280:	test   rcx,rcx
   140018283:	je     0x14001828f
   140018285:	cmp    DWORD PTR [rcx],0x0
   140018288:	jne    0x14001828f
   14001828a:	call   0x140014f10
   14001828f:	cmp    QWORD PTR [rdi-0x8],0x0
   140018294:	je     0x1400182a9
   140018296:	mov    rcx,QWORD PTR [rdi+0x8]
   14001829a:	test   rcx,rcx
   14001829d:	je     0x1400182a9
   14001829f:	cmp    DWORD PTR [rcx],0x0
   1400182a2:	jne    0x1400182a9
   1400182a4:	call   0x140014f10
   1400182a9:	add    rdi,0x20
   1400182ad:	sub    rsi,0x1
   1400182b1:	jne    0x140018270
   1400182b3:	mov    rcx,rbx
   1400182b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400182bb:	mov    rsi,QWORD PTR [rsp+0x38]
   1400182c0:	add    rsp,0x20
   1400182c4:	pop    rdi
   1400182c5:	jmp    0x140014f10
   1400182ca:	int3   
   1400182cb:	int3   
   1400182cc:	lock add DWORD PTR [rcx],0x1
   1400182d0:	mov    rax,QWORD PTR [rcx+0x110]
   1400182d7:	test   rax,rax
   1400182da:	je     0x1400182e0
   1400182dc:	lock add DWORD PTR [rax],0x1
   1400182e0:	mov    rax,QWORD PTR [rcx+0x120]
   1400182e7:	test   rax,rax
   1400182ea:	je     0x1400182f0
   1400182ec:	lock add DWORD PTR [rax],0x1
   1400182f0:	mov    rax,QWORD PTR [rcx+0x118]
   1400182f7:	test   rax,rax
   1400182fa:	je     0x140018300
   1400182fc:	lock add DWORD PTR [rax],0x1
   140018300:	mov    rax,QWORD PTR [rcx+0x130]
   140018307:	test   rax,rax
   14001830a:	je     0x140018310
   14001830c:	lock add DWORD PTR [rax],0x1
   140018310:	lea    rax,[rcx+0x58]
   140018314:	mov    r8d,0x6
   14001831a:	lea    rdx,[rip+0x3118f]        # 0x1400494b0
   140018321:	cmp    QWORD PTR [rax-0x10],rdx
   140018325:	je     0x140018333
   140018327:	mov    rdx,QWORD PTR [rax]
   14001832a:	test   rdx,rdx
   14001832d:	je     0x140018333
   14001832f:	lock add DWORD PTR [rdx],0x1
   140018333:	cmp    QWORD PTR [rax-0x8],0x0
   140018338:	je     0x140018347
   14001833a:	mov    rdx,QWORD PTR [rax+0x8]
   14001833e:	test   rdx,rdx
   140018341:	je     0x140018347
   140018343:	lock add DWORD PTR [rdx],0x1
   140018347:	add    rax,0x20
   14001834b:	sub    r8,0x1
   14001834f:	jne    0x14001831a
   140018351:	mov    rax,QWORD PTR [rcx+0x158]
   140018358:	lock add DWORD PTR [rax+0x160],0x1
   140018360:	ret    
   140018361:	int3   
   140018362:	int3   
   140018363:	int3   
   140018364:	test   rcx,rcx
   140018367:	je     0x140018405
   14001836d:	or     r9d,0xffffffff
   140018371:	lock add DWORD PTR [rcx],r9d
   140018375:	mov    rax,QWORD PTR [rcx+0x110]
   14001837c:	test   rax,rax
   14001837f:	je     0x140018385
   140018381:	lock add DWORD PTR [rax],r9d
   140018385:	mov    rax,QWORD PTR [rcx+0x120]
   14001838c:	test   rax,rax
   14001838f:	je     0x140018395
   140018391:	lock add DWORD PTR [rax],r9d
   140018395:	mov    rax,QWORD PTR [rcx+0x118]
   14001839c:	test   rax,rax
   14001839f:	je     0x1400183a5
   1400183a1:	lock add DWORD PTR [rax],r9d
   1400183a5:	mov    rax,QWORD PTR [rcx+0x130]
   1400183ac:	test   rax,rax
   1400183af:	je     0x1400183b5
   1400183b1:	lock add DWORD PTR [rax],r9d
   1400183b5:	lea    rax,[rcx+0x58]
   1400183b9:	mov    r8d,0x6
   1400183bf:	lea    rdx,[rip+0x310ea]        # 0x1400494b0
   1400183c6:	cmp    QWORD PTR [rax-0x10],rdx
   1400183ca:	je     0x1400183d8
   1400183cc:	mov    rdx,QWORD PTR [rax]
   1400183cf:	test   rdx,rdx
   1400183d2:	je     0x1400183d8
   1400183d4:	lock add DWORD PTR [rdx],r9d
   1400183d8:	cmp    QWORD PTR [rax-0x8],0x0
   1400183dd:	je     0x1400183ec
   1400183df:	mov    rdx,QWORD PTR [rax+0x8]
   1400183e3:	test   rdx,rdx
   1400183e6:	je     0x1400183ec
   1400183e8:	lock add DWORD PTR [rdx],r9d
   1400183ec:	add    rax,0x20
   1400183f0:	sub    r8,0x1
   1400183f4:	jne    0x1400183bf
   1400183f6:	mov    rax,QWORD PTR [rcx+0x158]
   1400183fd:	lock add DWORD PTR [rax+0x160],r9d
   140018405:	mov    rax,rcx
   140018408:	ret    
   140018409:	int3   
   14001840a:	int3   
   14001840b:	int3   
   14001840c:	rex push rbx
   14001840e:	sub    rsp,0x20
   140018412:	mov    rbx,rdx
   140018415:	test   rdx,rdx
   140018418:	je     0x14001845b
   14001841a:	test   rcx,rcx
   14001841d:	je     0x14001845b
   14001841f:	mov    r10,QWORD PTR [rcx]
   140018422:	cmp    r10,rdx
   140018425:	je     0x140018456
   140018427:	mov    QWORD PTR [rcx],rdx
   14001842a:	mov    rcx,rdx
   14001842d:	call   0x1400182cc
   140018432:	test   r10,r10
   140018435:	je     0x140018456
   140018437:	mov    rcx,r10
   14001843a:	call   0x140018364
   14001843f:	cmp    DWORD PTR [r10],0x0
   140018443:	jne    0x140018456
   140018445:	lea    rax,[rip+0x31074]        # 0x1400494c0
   14001844c:	cmp    r10,rax
   14001844f:	je     0x140018456
   140018451:	call   0x140018150
   140018456:	mov    rax,rbx
   140018459:	jmp    0x14001845d
   14001845b:	xor    eax,eax
   14001845d:	add    rsp,0x20
   140018461:	pop    rbx
   140018462:	ret    
   140018463:	int3   
   140018464:	rex push rbx
   140018466:	sub    rsp,0x20
   14001846a:	call   0x140017714
   14001846f:	mov    rbx,rax
   140018472:	mov    ecx,DWORD PTR [rax+0xc8]
   140018478:	test   DWORD PTR [rip+0x3102a],ecx        # 0x1400494a8
   14001847e:	je     0x140018498
   140018480:	cmp    QWORD PTR [rax+0xc0],0x0
   140018488:	je     0x140018498
   14001848a:	call   0x140017714
   14001848f:	mov    rbx,QWORD PTR [rax+0xc0]
   140018496:	jmp    0x1400184c3
   140018498:	mov    ecx,0xc
   14001849d:	call   0x140020744
   1400184a2:	nop
   1400184a3:	lea    rcx,[rbx+0xc0]
   1400184aa:	mov    rdx,QWORD PTR [rip+0x3116f]        # 0x140049620
   1400184b1:	call   0x14001840c
   1400184b6:	mov    rbx,rax
   1400184b9:	mov    ecx,0xc
   1400184be:	call   0x140020644
   1400184c3:	test   rbx,rbx
   1400184c6:	jne    0x1400184d0
   1400184c8:	lea    ecx,[rbx+0x20]
   1400184cb:	call   0x140016e9c
   1400184d0:	mov    rax,rbx
   1400184d3:	add    rsp,0x20
   1400184d7:	pop    rbx
   1400184d8:	ret    
   1400184d9:	int3   
   1400184da:	int3   
   1400184db:	int3   
   1400184dc:	test   r8d,r8d
   1400184df:	jle    0x14001853f
   1400184e1:	mov    DWORD PTR [rsp+0x18],r8d
   1400184e6:	mov    QWORD PTR [rsp+0x20],r9
   1400184eb:	push   rbx
   1400184ec:	push   rbp
   1400184ed:	push   rsi
   1400184ee:	push   rdi
   1400184ef:	sub    rsp,0x38
   1400184f3:	lea    rdi,[rsp+0x78]
   1400184f8:	xor    ebx,ebx
   1400184fa:	mov    rsi,rdx
   1400184fd:	add    rdi,0xfffffffffffffff8
   140018501:	mov    rbp,rcx
   140018504:	add    rdi,0x8
   140018508:	mov    rdx,rsi
   14001850b:	mov    rcx,rbp
   14001850e:	mov    r8,QWORD PTR [rdi]
   140018511:	call   0x140017284
   140018516:	test   eax,eax
   140018518:	je     0x14001852f
   14001851a:	and    QWORD PTR [rsp+0x20],0x0
   140018520:	xor    r9d,r9d
   140018523:	xor    r8d,r8d
   140018526:	xor    edx,edx
   140018528:	xor    ecx,ecx
   14001852a:	call   0x140014880
   14001852f:	inc    ebx
   140018531:	cmp    ebx,DWORD PTR [rsp+0x70]
   140018535:	jl     0x140018504
   140018537:	add    rsp,0x38
   14001853b:	pop    rdi
   14001853c:	pop    rsi
   14001853d:	pop    rbp
   14001853e:	pop    rbx
   14001853f:	ret    
   140018540:	mov    rax,rsp
   140018543:	mov    QWORD PTR [rax+0x8],rbx
   140018547:	mov    QWORD PTR [rax+0x10],rbp
   14001854b:	mov    QWORD PTR [rax+0x18],rsi
   14001854f:	mov    QWORD PTR [rax+0x20],rdi
   140018553:	push   r12
   140018555:	sub    rsp,0x30
   140018559:	mov    rbx,rdx
   14001855c:	mov    r8d,0x90
   140018562:	xor    edx,edx
   140018564:	mov    rsi,rcx
   140018567:	call   0x140015b00
   14001856c:	cmp    BYTE PTR [rbx],0x0
   14001856f:	jne    0x140018578
   140018571:	xor    eax,eax
   140018573:	jmp    0x14001868a
   140018578:	cmp    BYTE PTR [rbx],0x2e
   14001857b:	jne    0x1400185be
   14001857d:	lea    r8,[rbx+0x1]
   140018581:	cmp    BYTE PTR [r8],0x0
   140018585:	je     0x1400185be
   140018587:	mov    edx,0x10
   14001858c:	lea    rcx,[rsi+0x80]
   140018593:	lea    r9d,[rdx-0x1]
   140018597:	call   0x140016c08
   14001859c:	test   eax,eax
   14001859e:	je     0x1400185b5
   1400185a0:	and    QWORD PTR [rsp+0x20],0x0
   1400185a6:	xor    r9d,r9d
   1400185a9:	xor    r8d,r8d
   1400185ac:	xor    edx,edx
   1400185ae:	xor    ecx,ecx
   1400185b0:	call   0x140014880
   1400185b5:	mov    BYTE PTR [rsi+0x8f],0x0
   1400185bc:	jmp    0x140018571
   1400185be:	xor    ebp,ebp
   1400185c0:	jmp    0x14001866f
   1400185c5:	lea    r12,[rax+rbx*1]
   1400185c9:	mov    dil,BYTE PTR [r12]
   1400185cd:	test   ebp,ebp
   1400185cf:	jne    0x1400185ed
   1400185d1:	cmp    rax,0x40
   1400185d5:	jae    0x140018687
   1400185db:	cmp    dil,0x2e
   1400185df:	je     0x140018687
   1400185e5:	lea    edx,[rbp+0x40]
   1400185e8:	mov    rcx,rsi
   1400185eb:	jmp    0x140018631
   1400185ed:	cmp    ebp,0x1
   1400185f0:	jne    0x14001860f
   1400185f2:	cmp    rax,0x40
   1400185f6:	jae    0x140018687
   1400185fc:	cmp    dil,0x5f
   140018600:	je     0x140018687
   140018606:	lea    rcx,[rsi+0x40]
   14001860a:	lea    edx,[rbp+0x3f]
   14001860d:	jmp    0x140018631
   14001860f:	cmp    ebp,0x2
   140018612:	jne    0x140018687
   140018614:	cmp    rax,0x10
   140018618:	jae    0x140018687
   14001861a:	test   dil,dil
   14001861d:	je     0x140018625
   14001861f:	cmp    dil,0x2c
   140018623:	jne    0x140018687
   140018625:	lea    rcx,[rsi+0x80]
   14001862c:	mov    edx,0x10
   140018631:	mov    r9,rax
   140018634:	mov    r8,rbx
   140018637:	call   0x140016c08
   14001863c:	test   eax,eax
   14001863e:	je     0x140018655
   140018640:	and    QWORD PTR [rsp+0x20],0x0
   140018646:	xor    r9d,r9d
   140018649:	xor    r8d,r8d
   14001864c:	xor    edx,edx
   14001864e:	xor    ecx,ecx
   140018650:	call   0x140014880
   140018655:	cmp    dil,0x2c
   140018659:	je     0x140018571
   14001865f:	test   dil,dil
   140018662:	je     0x140018571
   140018668:	lea    rbx,[r12+0x1]
   14001866d:	inc    ebp
   14001866f:	lea    rdx,[rip+0x2108a]        # 0x140039700
   140018676:	mov    rcx,rbx
   140018679:	call   0x14001c920
   14001867e:	test   rax,rax
   140018681:	jne    0x1400185c5
   140018687:	or     eax,0xffffffff
   14001868a:	mov    rbx,QWORD PTR [rsp+0x40]
   14001868f:	mov    rbp,QWORD PTR [rsp+0x48]
   140018694:	mov    rsi,QWORD PTR [rsp+0x50]
   140018699:	mov    rdi,QWORD PTR [rsp+0x58]
   14001869e:	add    rsp,0x30
   1400186a2:	pop    r12
   1400186a4:	ret    
   1400186a5:	int3   
   1400186a6:	int3   
   1400186a7:	int3   
   1400186a8:	mov    QWORD PTR [rsp+0x8],rbx
   1400186ad:	mov    QWORD PTR [rsp+0x10],rsi
   1400186b2:	push   rdi
   1400186b3:	sub    rsp,0x30
   1400186b7:	mov    rbx,r8
   1400186ba:	mov    rdi,rdx
   1400186bd:	mov    rsi,rcx
   1400186c0:	call   0x1400164d8
   1400186c5:	test   eax,eax
   1400186c7:	je     0x1400186de
   1400186c9:	and    QWORD PTR [rsp+0x20],0x0
   1400186cf:	xor    r9d,r9d
   1400186d2:	xor    r8d,r8d
   1400186d5:	xor    edx,edx
   1400186d7:	xor    ecx,ecx
   1400186d9:	call   0x140014880
   1400186de:	lea    rax,[rbx+0x40]
   1400186e2:	cmp    BYTE PTR [rax],0x0
   1400186e5:	je     0x140018704
   1400186e7:	lea    r9,[rip+0x2101a]        # 0x140039708
   1400186ee:	mov    r8d,0x2
   1400186f4:	mov    rdx,rdi
   1400186f7:	mov    rcx,rsi
   1400186fa:	mov    QWORD PTR [rsp+0x20],rax
   1400186ff:	call   0x1400184dc
   140018704:	lea    rax,[rbx+0x80]
   14001870b:	cmp    BYTE PTR [rax],0x0
   14001870e:	je     0x14001872d
   140018710:	lea    r9,[rip+0x20fed]        # 0x140039704
   140018717:	mov    r8d,0x2
   14001871d:	mov    rdx,rdi
   140018720:	mov    rcx,rsi
   140018723:	mov    QWORD PTR [rsp+0x20],rax
   140018728:	call   0x1400184dc
   14001872d:	mov    rbx,QWORD PTR [rsp+0x40]
   140018732:	mov    rsi,QWORD PTR [rsp+0x48]
   140018737:	add    rsp,0x30
   14001873b:	pop    rdi
   14001873c:	ret    
   14001873d:	int3   
   14001873e:	int3   
   14001873f:	int3   
   140018740:	mov    QWORD PTR [rsp+0x8],rbx
   140018745:	push   rbp
   140018746:	push   rsi
   140018747:	push   rdi
   140018748:	push   r12
   14001874a:	push   r13
   14001874c:	push   r14
   14001874e:	push   r15
   140018750:	sub    rsp,0x30
   140018754:	mov    rbx,rcx
   140018757:	mov    r12d,0x1
   14001875d:	mov    ecx,0x355
   140018762:	mov    edi,r12d
   140018765:	call   0x14001c424
   14001876a:	mov    rsi,rax
   14001876d:	mov    QWORD PTR [rsp+0x80],rax
   140018775:	xor    eax,eax
   140018777:	cmp    rsi,rax
   14001877a:	je     0x140018911
   140018780:	lea    rbp,[rsi+0x4]
   140018784:	lea    r13,[rbx+0x68]
   140018788:	lea    r8d,[r12+0x2]
   14001878d:	mov    BYTE PTR [rbp+0x0],al
   140018790:	mov    DWORD PTR [rsi],r12d
   140018793:	mov    rax,QWORD PTR [r13+0x0]
   140018797:	mov    r9,QWORD PTR [rip+0x20e6a]        # 0x140039608
   14001879e:	mov    QWORD PTR [rsp+0x28],rax
   1400187a3:	lea    rax,[rip+0x20f62]        # 0x14003970c
   1400187aa:	mov    edx,0x351
   1400187af:	mov    rcx,rbp
   1400187b2:	mov    QWORD PTR [rsp+0x20],rax
   1400187b7:	call   0x1400184dc
   1400187bc:	mov    r15,r12
   1400187bf:	lea    r12,[rbx+0x88]
   1400187c6:	lea    r14,[rip+0x20e3b]        # 0x140039608
   1400187cd:	xor    esi,esi
   1400187cf:	lea    r8,[rip+0x20ae6]        # 0x1400392bc
   1400187d6:	mov    edx,0x351
   1400187db:	mov    rcx,rbp
   1400187de:	call   0x140017284
   1400187e3:	cmp    eax,esi
   1400187e5:	je     0x1400187fb
   1400187e7:	xor    r9d,r9d
   1400187ea:	xor    r8d,r8d
   1400187ed:	xor    edx,edx
   1400187ef:	xor    ecx,ecx
   1400187f1:	mov    QWORD PTR [rsp+0x20],rsi
   1400187f6:	call   0x140014880
   1400187fb:	mov    rdx,QWORD PTR [r12]
   1400187ff:	mov    rcx,QWORD PTR [r13+0x0]
   140018803:	call   0x1400174e0
   140018808:	mov    edx,0x351
   14001880d:	mov    r8d,0x3
   140018813:	cmp    eax,esi
   140018815:	mov    rcx,rbp
   140018818:	cmovne edi,esi
   14001881b:	inc    r15
   14001881e:	add    r14,0x18
   140018822:	mov    r9,QWORD PTR [r14]
   140018825:	mov    rax,r15
   140018828:	add    r12,0x20
   14001882c:	shl    rax,0x5
   140018830:	lea    r13,[rax+rbx*1+0x48]
   140018835:	mov    rax,QWORD PTR [r13+0x0]
   140018839:	mov    QWORD PTR [rsp+0x28],rax
   14001883e:	lea    rax,[rip+0x20ec7]        # 0x14003970c
   140018845:	mov    QWORD PTR [rsp+0x20],rax
   14001884a:	call   0x1400184dc
   14001884f:	lea    r11,[rip+0x20e12]        # 0x140039668
   140018856:	cmp    r14,r11
   140018859:	jl     0x1400187cf
   14001885f:	mov    rsi,QWORD PTR [rsp+0x80]
   140018867:	xor    r13d,r13d
   14001886a:	cmp    edi,r13d
   14001886d:	jne    0x1400188b7
   14001886f:	mov    rcx,QWORD PTR [rbx+0x58]
   140018873:	or     edi,0xffffffff
   140018876:	cmp    rcx,r13
   140018879:	je     0x14001888e
   14001887b:	mov    eax,edi
   14001887d:	lock xadd DWORD PTR [rcx],eax
   140018881:	add    eax,edi
   140018883:	jne    0x14001888e
   140018885:	mov    rcx,QWORD PTR [rbx+0x58]
   140018889:	call   0x140014f10
   14001888e:	mov    rdx,QWORD PTR [rbx+0x60]
   140018892:	cmp    rdx,r13
   140018895:	je     0x1400188aa
   140018897:	mov    ecx,edi
   140018899:	lock xadd DWORD PTR [rdx],ecx
   14001889d:	add    ecx,edi
   14001889f:	jne    0x1400188aa
   1400188a1:	mov    rcx,QWORD PTR [rbx+0x60]
   1400188a5:	call   0x140014f10
   1400188aa:	mov    QWORD PTR [rbx+0x58],rsi
   1400188ae:	mov    QWORD PTR [rbx+0x48],rbp
   1400188b2:	mov    rax,rbp
   1400188b5:	jmp    0x140018909
   1400188b7:	mov    rcx,rsi
   1400188ba:	call   0x140014f10
   1400188bf:	mov    rcx,QWORD PTR [rbx+0x58]
   1400188c3:	or     edi,0xffffffff
   1400188c6:	cmp    rcx,r13
   1400188c9:	je     0x1400188de
   1400188cb:	mov    eax,edi
   1400188cd:	lock xadd DWORD PTR [rcx],eax
   1400188d1:	add    eax,edi
   1400188d3:	jne    0x1400188de
   1400188d5:	mov    rcx,QWORD PTR [rbx+0x58]
   1400188d9:	call   0x140014f10
   1400188de:	mov    rdx,QWORD PTR [rbx+0x60]
   1400188e2:	cmp    rdx,r13
   1400188e5:	je     0x1400188fa
   1400188e7:	mov    ecx,edi
   1400188e9:	lock xadd DWORD PTR [rdx],ecx
   1400188ed:	add    ecx,edi
   1400188ef:	jne    0x1400188fa
   1400188f1:	mov    rcx,QWORD PTR [rbx+0x60]
   1400188f5:	call   0x140014f10
   1400188fa:	mov    rax,QWORD PTR [rbx+0x88]
   140018901:	mov    QWORD PTR [rbx+0x58],r13
   140018905:	mov    QWORD PTR [rbx+0x48],r13
   140018909:	mov    QWORD PTR [rbx+0x50],r13
   14001890d:	mov    QWORD PTR [rbx+0x60],r13
   140018911:	mov    rbx,QWORD PTR [rsp+0x70]
   140018916:	add    rsp,0x30
   14001891a:	pop    r15
   14001891c:	pop    r14
   14001891e:	pop    r13
   140018920:	pop    r12
   140018922:	pop    rdi
   140018923:	pop    rsi
   140018924:	pop    rbp
   140018925:	ret    
   140018926:	int3   
   140018927:	int3   
   140018928:	rex push rbx
   14001892a:	push   rbp
   14001892b:	push   rsi
   14001892c:	push   rdi
   14001892d:	push   r12
   14001892f:	push   r13
   140018931:	push   r14
   140018933:	push   r15
   140018935:	sub    rsp,0xf8
   14001893c:	mov    rax,QWORD PTR [rip+0x3047d]        # 0x140048dc0
   140018943:	xor    rax,rsp
   140018946:	mov    QWORD PTR [rsp+0xe0],rax
   14001894e:	mov    rsi,QWORD PTR [rsp+0x160]
   140018956:	mov    rdi,r9
   140018959:	mov    r15,r8
   14001895c:	mov    rbp,rdx
   14001895f:	mov    rbx,rcx
   140018962:	call   0x140017714
   140018967:	lea    rcx,[rax+0x170]
   14001896e:	lea    r14,[rax+0x168]
   140018975:	xor    r12d,r12d
   140018978:	mov    QWORD PTR [rsp+0x40],rcx
   14001897d:	lea    rcx,[rax+0x174]
   140018984:	mov    QWORD PTR [rsp+0x30],r14
   140018989:	lea    r13,[rax+0x1f7]
   140018990:	mov    QWORD PTR [rsp+0x38],rcx
   140018995:	cmp    rbx,r12
   140018998:	je     0x140018b42
   14001899e:	cmp    rbp,r12
   1400189a1:	je     0x140018b42
   1400189a7:	cmp    r15,r12
   1400189aa:	je     0x140018b42
   1400189b0:	cmp    BYTE PTR [rbx],0x43
   1400189b3:	jne    0x140018a09
   1400189b5:	cmp    BYTE PTR [rbx+0x1],r12b
   1400189b9:	jne    0x140018a09
   1400189bb:	lea    r8,[rip+0x20d4e]        # 0x140039710
   1400189c2:	mov    rdx,r15
   1400189c5:	mov    rcx,rbp
   1400189c8:	call   0x1400164d8
   1400189cd:	cmp    eax,r12d
   1400189d0:	je     0x1400189e6
   1400189d2:	xor    r9d,r9d
   1400189d5:	xor    r8d,r8d
   1400189d8:	xor    edx,edx
   1400189da:	xor    ecx,ecx
   1400189dc:	mov    QWORD PTR [rsp+0x20],r12
   1400189e1:	call   0x140014880
   1400189e6:	cmp    rdi,r12
   1400189e9:	je     0x1400189f9
   1400189eb:	mov    WORD PTR [rdi],r12w
   1400189ef:	mov    WORD PTR [rdi+0x2],r12w
   1400189f4:	mov    WORD PTR [rdi+0x4],r12w
   1400189f9:	cmp    rsi,r12
   1400189fc:	je     0x140018a01
   1400189fe:	mov    DWORD PTR [rsi],r12d
   140018a01:	mov    rax,rbp
   140018a04:	jmp    0x140018b44
   140018a09:	mov    rcx,rbx
   140018a0c:	call   0x140015c00
   140018a11:	mov    r12,rax
   140018a14:	cmp    rax,0x83
   140018a1a:	jae    0x140018a44
   140018a1c:	mov    rdx,rbx
   140018a1f:	mov    rcx,r13
   140018a22:	call   0x1400174e0
   140018a27:	test   eax,eax
   140018a29:	je     0x140018ae8
   140018a2f:	mov    rcx,QWORD PTR [rsp+0x38]
   140018a34:	mov    rdx,rbx
   140018a37:	call   0x1400174e0
   140018a3c:	test   eax,eax
   140018a3e:	je     0x140018ae8
   140018a44:	lea    rcx,[rsp+0x50]
   140018a49:	mov    rdx,rbx
   140018a4c:	xor    r14d,r14d
   140018a4f:	call   0x140018540
   140018a54:	test   eax,eax
   140018a56:	jne    0x140018b42
   140018a5c:	mov    rdx,QWORD PTR [rsp+0x30]
   140018a61:	lea    r8,[rsp+0x50]
   140018a66:	lea    rcx,[rsp+0x50]
   140018a6b:	call   0x140022a54
   140018a70:	test   eax,eax
   140018a72:	je     0x140018b42
   140018a78:	mov    rax,QWORD PTR [rsp+0x30]
   140018a7d:	mov    rcx,QWORD PTR [rsp+0x40]
   140018a82:	lea    r8,[rsp+0x50]
   140018a87:	movzx  eax,WORD PTR [rax+0x4]
   140018a8b:	mov    edx,0x83
   140018a90:	mov    DWORD PTR [rcx],eax
   140018a92:	mov    rcx,r13
   140018a95:	call   0x1400186a8
   140018a9a:	cmp    BYTE PTR [rbx],r14b
   140018a9d:	je     0x140018aad
   140018a9f:	cmp    r12,0x83
   140018aa6:	jae    0x140018aad
   140018aa8:	mov    r14,r12
   140018aab:	jmp    0x140018ab4
   140018aad:	lea    rbx,[rip+0x24ceb]        # 0x14003d79f
   140018ab4:	mov    rcx,QWORD PTR [rsp+0x38]
   140018ab9:	lea    r9,[r14+0x1]
   140018abd:	mov    r8,rbx
   140018ac0:	mov    edx,0x83
   140018ac5:	call   0x140016c08
   140018aca:	test   eax,eax
   140018acc:	je     0x140018ae3
   140018ace:	and    QWORD PTR [rsp+0x20],0x0
   140018ad4:	xor    r9d,r9d
   140018ad7:	xor    r8d,r8d
   140018ada:	xor    edx,edx
   140018adc:	xor    ecx,ecx
   140018ade:	call   0x140014880
   140018ae3:	mov    r14,QWORD PTR [rsp+0x30]
   140018ae8:	test   rdi,rdi
   140018aeb:	je     0x140018afe
   140018aed:	mov    r8d,0x6
   140018af3:	mov    rdx,r14
   140018af6:	mov    rcx,rdi
   140018af9:	call   0x1400160c0
   140018afe:	test   rsi,rsi
   140018b01:	je     0x140018b16
   140018b03:	mov    rdx,QWORD PTR [rsp+0x40]
   140018b08:	mov    r8d,0x4
   140018b0e:	mov    rcx,rsi
   140018b11:	call   0x1400160c0
   140018b16:	mov    r8,r13
   140018b19:	mov    rdx,r15
   140018b1c:	mov    rcx,rbp
   140018b1f:	call   0x1400164d8
   140018b24:	test   eax,eax
   140018b26:	je     0x140018b3d
   140018b28:	and    QWORD PTR [rsp+0x20],0x0
   140018b2e:	xor    r9d,r9d
   140018b31:	xor    r8d,r8d
   140018b34:	xor    edx,edx
   140018b36:	xor    ecx,ecx
   140018b38:	call   0x140014880
   140018b3d:	mov    rax,r13
   140018b40:	jmp    0x140018b44
   140018b42:	xor    eax,eax
   140018b44:	mov    rcx,QWORD PTR [rsp+0xe0]
   140018b4c:	xor    rcx,rsp
   140018b4f:	call   0x1400144f0
   140018b54:	add    rsp,0xf8
   140018b5b:	pop    r15
   140018b5d:	pop    r14
   140018b5f:	pop    r13
   140018b61:	pop    r12
   140018b63:	pop    rdi
   140018b64:	pop    rsi
   140018b65:	pop    rbp
   140018b66:	pop    rbx
   140018b67:	ret    
   140018b68:	mov    QWORD PTR [rsp+0x20],rbx
   140018b6d:	push   rbp
   140018b6e:	push   rsi
   140018b6f:	push   rdi
   140018b70:	push   r12
   140018b72:	push   r13
   140018b74:	push   r14
   140018b76:	push   r15
   140018b78:	sub    rsp,0x210
   140018b7f:	mov    rax,QWORD PTR [rip+0x3023a]        # 0x140048dc0
   140018b86:	xor    rax,rsp
   140018b89:	mov    QWORD PTR [rsp+0x200],rax
   140018b91:	mov    rbx,r8
   140018b94:	movsxd r15,edx
   140018b97:	mov    rdi,rcx
   140018b9a:	call   0x140017714
   140018b9f:	lea    r9,[rsp+0x48]
   140018ba4:	lea    rdx,[rsp+0x70]
   140018ba9:	mov    rsi,rax
   140018bac:	lea    rax,[rsp+0x40]
   140018bb1:	mov    r8d,0x83
   140018bb7:	mov    rcx,rbx
   140018bba:	mov    DWORD PTR [rsp+0x28],r15d
   140018bbf:	mov    QWORD PTR [rsp+0x20],rax
   140018bc4:	call   0x140018928
   140018bc9:	test   rax,rax
   140018bcc:	jne    0x140018bd5
   140018bce:	xor    eax,eax
   140018bd0:	jmp    0x140018e44
   140018bd5:	mov    rbx,r15
   140018bd8:	lea    rcx,[rsp+0x70]
   140018bdd:	shl    rbx,0x5
   140018be1:	mov    rdx,QWORD PTR [rbx+rdi*1+0x48]
   140018be6:	call   0x1400174e0
   140018beb:	test   eax,eax
   140018bed:	je     0x140018e3f
   140018bf3:	lea    rcx,[rsp+0x70]
   140018bf8:	call   0x140015c00
   140018bfd:	mov    rbp,rax
   140018c00:	lea    rcx,[rax+0x5]
   140018c04:	call   0x14001c424
   140018c09:	mov    r12,rax
   140018c0c:	test   rax,rax
   140018c0f:	je     0x140018bce
   140018c11:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   140018c16:	lea    r13,[r15+0x3]
   140018c1a:	lea    rcx,[rsp+0x68]
   140018c1f:	mov    QWORD PTR [rsp+0x58],rax
   140018c24:	mov    eax,DWORD PTR [rdi+r13*4]
   140018c28:	mov    r8d,0x6
   140018c2e:	mov    DWORD PTR [rsp+0x50],eax
   140018c32:	lea    rax,[r15+r15*2+0x12]
   140018c37:	lea    rax,[rdi+rax*2]
   140018c3b:	mov    rdx,rax
   140018c3e:	mov    QWORD PTR [rsp+0x60],rax
   140018c43:	call   0x1400160c0
   140018c48:	mov    eax,DWORD PTR [rdi+0x4]
   140018c4b:	lea    rdx,[rbp+0x1]
   140018c4f:	lea    r8,[rsp+0x70]
   140018c54:	lea    rcx,[r12+0x4]
   140018c59:	mov    DWORD PTR [rsp+0x44],eax
   140018c5d:	call   0x1400164d8
   140018c62:	test   eax,eax
   140018c64:	je     0x140018c7b
   140018c66:	and    QWORD PTR [rsp+0x20],0x0
   140018c6c:	xor    r9d,r9d
   140018c6f:	xor    r8d,r8d
   140018c72:	xor    edx,edx
   140018c74:	xor    ecx,ecx
   140018c76:	call   0x140014880
   140018c7b:	mov    rcx,QWORD PTR [rsp+0x60]
   140018c80:	lea    rax,[r12+0x4]
   140018c85:	lea    rdx,[rsp+0x48]
   140018c8a:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   140018c8f:	movzx  eax,WORD PTR [rsp+0x48]
   140018c94:	mov    r8d,0x6
   140018c9a:	mov    DWORD PTR [rdi+r13*4],eax
   140018c9e:	call   0x1400160c0
   140018ca3:	cmp    r15d,0x2
   140018ca7:	jne    0x140018db4
   140018cad:	mov    eax,DWORD PTR [rsp+0x40]
   140018cb1:	xor    r8d,r8d
   140018cb4:	xor    edx,edx
   140018cb6:	mov    DWORD PTR [rdi+0x4],eax
   140018cb9:	mov    rcx,QWORD PTR [rsi+0x29c]
   140018cc0:	mov    eax,DWORD PTR [rsi+rdx*8+0x27c]
   140018cc7:	cmp    DWORD PTR [rdi+0x4],eax
   140018cca:	je     0x140018ced
   140018ccc:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   140018cd4:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   140018cdc:	inc    rdx
   140018cdf:	inc    r8d
   140018ce2:	cmp    rdx,0x5
   140018ce6:	mov    rcx,rax
   140018ce9:	jl     0x140018cc0
   140018ceb:	jmp    0x140018d0c
   140018ced:	test   r8d,r8d
   140018cf0:	je     0x140018d0c
   140018cf2:	movsxd rdx,r8d
   140018cf5:	mov    rax,QWORD PTR [rsi+rdx*8+0x27c]
   140018cfd:	mov    QWORD PTR [rsi+0x27c],rax
   140018d04:	mov    QWORD PTR [rsi+rdx*8+0x27c],rcx
   140018d0c:	cmp    r8d,0x5
   140018d10:	jne    0x140018da8
   140018d16:	mov    eax,DWORD PTR [rdi+0x14]
   140018d19:	lea    ebp,[r8+0x7a]
   140018d1d:	mov    DWORD PTR [rsp+0x38],0x1
   140018d25:	mov    DWORD PTR [rsp+0x30],eax
   140018d29:	mov    eax,DWORD PTR [rdi+0x4]
   140018d2c:	lea    r8,[rip+0x2094d]        # 0x140039680
   140018d33:	mov    DWORD PTR [rsp+0x28],eax
   140018d37:	lea    rax,[rsp+0x100]
   140018d3f:	lea    edx,[rbp-0x7e]
   140018d42:	mov    r9d,ebp
   140018d45:	xor    ecx,ecx
   140018d47:	mov    QWORD PTR [rsp+0x20],rax
   140018d4c:	call   0x140020db4
   140018d51:	test   eax,eax
   140018d53:	je     0x140018d98
   140018d55:	lea    rax,[rsp+0x100]
   140018d5d:	mov    ecx,0x1ff
   140018d62:	and    WORD PTR [rax],cx
   140018d65:	add    rax,0x2
   140018d69:	sub    rbp,0x1
   140018d6d:	jne    0x140018d5d
   140018d6f:	mov    rdx,QWORD PTR [rip+0x3072a]        # 0x1400494a0
   140018d76:	lea    rcx,[rsp+0x100]
   140018d7e:	mov    r8d,0xfe
   140018d84:	call   0x140016410
   140018d89:	xor    ecx,ecx
   140018d8b:	test   eax,eax
   140018d8d:	sete   cl
   140018d90:	mov    DWORD PTR [rsi+0x280],ecx
   140018d96:	jmp    0x140018d9f
   140018d98:	and    DWORD PTR [rsi+0x280],0x0
   140018d9f:	mov    eax,DWORD PTR [rdi+0x4]
   140018da2:	mov    DWORD PTR [rsi+0x27c],eax
   140018da8:	mov    eax,DWORD PTR [rsi+0x280]
   140018dae:	mov    DWORD PTR [rdi+0x108],eax
   140018db4:	cmp    r15d,0x1
   140018db8:	jne    0x140018dc1
   140018dba:	mov    eax,DWORD PTR [rsp+0x40]
   140018dbe:	mov    DWORD PTR [rdi+0x8],eax
   140018dc1:	lea    rax,[r15+r15*2]
   140018dc5:	lea    rdx,[rip+0x20834]        # 0x140039600
   140018dcc:	mov    rcx,rdi
   140018dcf:	call   QWORD PTR [rdx+rax*8]
   140018dd2:	test   eax,eax
   140018dd4:	mov    rax,QWORD PTR [rsp+0x58]
   140018dd9:	je     0x140018dfd
   140018ddb:	mov    rcx,r12
   140018dde:	mov    QWORD PTR [rbx+rdi*1+0x48],rax
   140018de3:	call   0x140014f10
   140018de8:	mov    r11d,DWORD PTR [rsp+0x50]
   140018ded:	mov    eax,DWORD PTR [rsp+0x44]
   140018df1:	mov    DWORD PTR [rdi+r13*4],r11d
   140018df5:	mov    DWORD PTR [rdi+0x4],eax
   140018df8:	jmp    0x140018bce
   140018dfd:	lea    rcx,[rip+0x306ac]        # 0x1400494b0
   140018e04:	cmp    rax,rcx
   140018e07:	je     0x140018e32
   140018e09:	mov    rdx,QWORD PTR [rbx+rdi*1+0x58]
   140018e0e:	lock add DWORD PTR [rdx],0xffffffff
   140018e12:	jne    0x140018e32
   140018e14:	mov    rcx,QWORD PTR [rbx+rdi*1+0x58]
   140018e19:	call   0x140014f10
   140018e1e:	shl    r13,0x5
   140018e22:	mov    rcx,QWORD PTR [r13+rdi*1+0x0]
   140018e27:	call   0x140014f10
   140018e2c:	and    QWORD PTR [rbx+rdi*1+0x50],0x0
   140018e32:	mov    DWORD PTR [r12],0x1
   140018e3a:	mov    QWORD PTR [rbx+rdi*1+0x58],r12
   140018e3f:	mov    rax,QWORD PTR [rbx+rdi*1+0x48]
   140018e44:	mov    rcx,QWORD PTR [rsp+0x200]
   140018e4c:	xor    rcx,rsp
   140018e4f:	call   0x1400144f0
   140018e54:	mov    rbx,QWORD PTR [rsp+0x268]
   140018e5c:	add    rsp,0x210
   140018e63:	pop    r15
   140018e65:	pop    r14
   140018e67:	pop    r13
   140018e69:	pop    r12
   140018e6b:	pop    rdi
   140018e6c:	pop    rsi
   140018e6d:	pop    rbp
   140018e6e:	ret    
   140018e6f:	int3   
   140018e70:	rex push rbx
   140018e72:	push   rbp
   140018e73:	push   rsi
   140018e74:	push   rdi
   140018e75:	push   r12
   140018e77:	push   r13
   140018e79:	push   r14
   140018e7b:	sub    rsp,0xd0
   140018e82:	mov    rax,QWORD PTR [rip+0x2ff37]        # 0x140048dc0
   140018e89:	xor    rax,rsp
   140018e8c:	mov    QWORD PTR [rsp+0xc0],rax
   140018e94:	mov    rbx,r8
   140018e97:	mov    rdi,rcx
   140018e9a:	test   edx,edx
   140018e9c:	je     0x140018ebe
   140018e9e:	test   rbx,rbx
   140018ea1:	je     0x140018ead
   140018ea3:	call   0x140018b68
   140018ea8:	jmp    0x140018ff6
   140018ead:	movsxd rax,edx
   140018eb0:	shl    rax,0x5
   140018eb4:	mov    rax,QWORD PTR [rax+rcx*1+0x48]
   140018eb9:	jmp    0x140018ff6
   140018ebe:	xor    esi,esi
   140018ec0:	lea    r12d,[rsi+0x1]
   140018ec4:	test   rbx,rbx
   140018ec7:	je     0x140018ff1
   140018ecd:	cmp    BYTE PTR [r8],0x4c
   140018ed1:	jne    0x140019018
   140018ed7:	cmp    BYTE PTR [r8+0x1],0x43
   140018edc:	jne    0x140019018
   140018ee2:	cmp    BYTE PTR [r8+0x2],0x5f
   140018ee7:	jne    0x140019018
   140018eed:	lea    rdx,[rip+0x20820]        # 0x140039714
   140018ef4:	mov    rcx,rbx
   140018ef7:	call   0x140022d88
   140018efc:	mov    rbp,rax
   140018eff:	test   rax,rax
   140018f02:	je     0x14001908c
   140018f08:	mov    r13,rax
   140018f0b:	sub    r13,rbx
   140018f0e:	je     0x14001908c
   140018f14:	cmp    BYTE PTR [rax],0x3b
   140018f17:	je     0x14001908c
   140018f1d:	mov    r14d,0x1
   140018f23:	lea    r12,[rip+0x206de]        # 0x140039608
   140018f2a:	mov    rcx,QWORD PTR [r12]
   140018f2e:	mov    r8,r13
   140018f31:	mov    rdx,rbx
   140018f34:	call   0x140022cd0
   140018f39:	test   eax,eax
   140018f3b:	jne    0x140018f4b
   140018f3d:	mov    rcx,QWORD PTR [r12]
   140018f41:	call   0x140015c00
   140018f46:	cmp    r13,rax
   140018f49:	je     0x140018f5e
   140018f4b:	lea    rax,[rip+0x20716]        # 0x140039668
   140018f52:	add    r12,0x18
   140018f56:	inc    r14d
   140018f59:	cmp    r12,rax
   140018f5c:	jle    0x140018f2a
   140018f5e:	inc    rbp
   140018f61:	lea    rdx,[rip+0x20354]        # 0x1400392bc
   140018f68:	mov    rcx,rbp
   140018f6b:	call   0x14001c920
   140018f70:	mov    rbx,rax
   140018f73:	test   rax,rax
   140018f76:	jne    0x140018f82
   140018f78:	cmp    BYTE PTR [rbp+0x0],0x3b
   140018f7c:	jne    0x14001908c
   140018f82:	cmp    r14d,0x5
   140018f86:	jg     0x140018fd2
   140018f88:	lea    rcx,[rsp+0x30]
   140018f8d:	mov    r9,rax
   140018f90:	mov    r8,rbp
   140018f93:	mov    edx,0x83
   140018f98:	call   0x140016c08
   140018f9d:	test   eax,eax
   140018f9f:	je     0x140018fb6
   140018fa1:	and    QWORD PTR [rsp+0x20],0x0
   140018fa7:	xor    r9d,r9d
   140018faa:	xor    r8d,r8d
   140018fad:	xor    edx,edx
   140018faf:	xor    ecx,ecx
   140018fb1:	call   0x140014880
   140018fb6:	lea    r8,[rsp+0x30]
   140018fbb:	mov    edx,r14d
   140018fbe:	mov    rcx,rdi
   140018fc1:	mov    BYTE PTR [rsp+rbx*1+0x30],0x0
   140018fc6:	call   0x140018b68
   140018fcb:	test   rax,rax
   140018fce:	je     0x140018fd2
   140018fd0:	inc    esi
   140018fd2:	add    rbx,rbp
   140018fd5:	cmp    BYTE PTR [rbx],0x0
   140018fd8:	je     0x140018fe6
   140018fda:	inc    rbx
   140018fdd:	cmp    BYTE PTR [rbx],0x0
   140018fe0:	jne    0x140018eed
   140018fe6:	test   esi,esi
   140018fe8:	je     0x14001908c
   140018fee:	mov    rcx,rdi
   140018ff1:	call   0x140018740
   140018ff6:	mov    rcx,QWORD PTR [rsp+0xc0]
   140018ffe:	xor    rcx,rsp
   140019001:	call   0x1400144f0
   140019006:	add    rsp,0xd0
   14001900d:	pop    r14
   14001900f:	pop    r13
   140019011:	pop    r12
   140019013:	pop    rdi
   140019014:	pop    rsi
   140019015:	pop    rbp
   140019016:	pop    rbx
   140019017:	ret    
   140019018:	and    DWORD PTR [rsp+0x28],esi
   14001901c:	and    QWORD PTR [rsp+0x20],rsi
   140019021:	lea    rdx,[rsp+0x30]
   140019026:	xor    r9d,r9d
   140019029:	mov    r8d,0x83
   14001902f:	mov    rcx,rbx
   140019032:	call   0x140018928
   140019037:	test   rax,rax
   14001903a:	je     0x140018ff6
   14001903c:	xor    ebx,ebx
   14001903e:	lea    rbp,[rdi+0x48]
   140019042:	test   ebx,ebx
   140019044:	je     0x140019073
   140019046:	mov    rdx,QWORD PTR [rbp+0x0]
   14001904a:	lea    rcx,[rsp+0x30]
   14001904f:	call   0x1400174e0
   140019054:	test   eax,eax
   140019056:	je     0x140019071
   140019058:	lea    r8,[rsp+0x30]
   14001905d:	mov    edx,ebx
   14001905f:	mov    rcx,rdi
   140019062:	call   0x140018b68
   140019067:	test   rax,rax
   14001906a:	jne    0x140019071
   14001906c:	xor    r12d,r12d
   14001906f:	jmp    0x140019073
   140019071:	inc    esi
   140019073:	inc    ebx
   140019075:	add    rbp,0x20
   140019079:	cmp    ebx,0x5
   14001907c:	jle    0x140019042
   14001907e:	test   r12d,r12d
   140019081:	jne    0x140018fee
   140019087:	jmp    0x140018fe6
   14001908c:	xor    eax,eax
   14001908e:	jmp    0x140018ff6
   140019093:	int3   
   140019094:	mov    QWORD PTR [rsp+0x8],rsi
   140019099:	mov    QWORD PTR [rsp+0x10],rdi
   14001909e:	mov    QWORD PTR [rsp+0x20],r12
   1400190a3:	push   r13
   1400190a5:	push   r14
   1400190a7:	push   r15
   1400190a9:	sub    rsp,0x40
   1400190ad:	mov    r13,rdx
   1400190b0:	mov    r14d,ecx
   1400190b3:	xor    r12d,r12d
   1400190b6:	cmp    ecx,0x5
   1400190b9:	jbe    0x1400190e1
   1400190bb:	call   0x140015f48
   1400190c0:	mov    DWORD PTR [rax],0x16
   1400190c6:	and    QWORD PTR [rsp+0x20],r12
   1400190cb:	xor    r9d,r9d
   1400190ce:	xor    r8d,r8d
   1400190d1:	xor    edx,edx
   1400190d3:	xor    ecx,ecx
   1400190d5:	call   0x1400149a8
   1400190da:	xor    eax,eax
   1400190dc:	jmp    0x140019297
   1400190e1:	call   0x140017714
   1400190e6:	mov    rsi,rax
   1400190e9:	mov    QWORD PTR [rsp+0x70],rax
   1400190ee:	call   0x140018464
   1400190f3:	or     DWORD PTR [rsi+0xc8],0x10
   1400190fa:	mov    edx,0x1
   1400190ff:	mov    ecx,0x160
   140019104:	call   0x14001c490
   140019109:	mov    rdi,rax
   14001910c:	test   rax,rax
   14001910f:	je     0x14001928d
   140019115:	mov    ecx,0xc
   14001911a:	call   0x140020744
   14001911f:	nop
   140019120:	mov    rdx,QWORD PTR [rsi+0xc0]
   140019127:	test   rdx,rdx
   14001912a:	je     0x14001914b
   14001912c:	cmp    rdi,rdx
   14001912f:	je     0x14001914b
   140019131:	mov    rcx,rdi
   140019134:	mov    r8d,0x160
   14001913a:	call   0x1400160c0
   14001913f:	and    DWORD PTR [rdi],0x0
   140019142:	mov    rcx,rdi
   140019145:	call   0x1400182cc
   14001914a:	nop
   14001914b:	mov    ecx,0xc
   140019150:	call   0x140020644
   140019155:	mov    r8,r13
   140019158:	mov    edx,r14d
   14001915b:	mov    rcx,rdi
   14001915e:	call   0x140018e70
   140019163:	mov    r12,rax
   140019166:	mov    QWORD PTR [rsp+0x30],rax
   14001916b:	test   rax,rax
   14001916e:	je     0x14001927f
   140019174:	test   r13,r13
   140019177:	je     0x1400191a2
   140019179:	lea    rdx,[rip+0x30330]        # 0x1400494b0
   140019180:	mov    rcx,r13
   140019183:	call   0x1400174e0
   140019188:	mov    ecx,DWORD PTR [rip+0x35982]        # 0x14004eb10
   14001918e:	test   eax,eax
   140019190:	mov    r13d,0x1
   140019196:	cmovne ecx,r13d
   14001919a:	mov    DWORD PTR [rip+0x35970],ecx        # 0x14004eb10
   1400191a0:	jmp    0x1400191a8
   1400191a2:	mov    r13d,0x1
   1400191a8:	mov    ecx,0xc
   1400191ad:	call   0x140020744
   1400191b2:	nop
   1400191b3:	mov    rdx,rdi
   1400191b6:	lea    rcx,[rsi+0xc0]
   1400191bd:	call   0x14001840c
   1400191c2:	mov    rcx,rdi
   1400191c5:	call   0x140018364
   1400191ca:	test   BYTE PTR [rsi+0xc8],0x2
   1400191d1:	jne    0x140019273
   1400191d7:	test   BYTE PTR [rip+0x302ca],r13b        # 0x1400494a8
   1400191de:	jne    0x140019273
   1400191e4:	mov    rdx,QWORD PTR [rsi+0xc0]
   1400191eb:	lea    rcx,[rip+0x3042e]        # 0x140049620
   1400191f2:	call   0x14001840c
   1400191f7:	mov    rdx,QWORD PTR [rip+0x30422]        # 0x140049620
   1400191fe:	add    rdx,0xc
   140019202:	mov    r8d,0x18
   140019208:	lea    rcx,[rip+0x35909]        # 0x14004eb18
   14001920f:	call   0x1400160c0
   140019214:	mov    r11,QWORD PTR [rip+0x30405]        # 0x140049620
   14001921b:	mov    eax,DWORD PTR [r11+0x4]
   14001921f:	mov    DWORD PTR [rip+0x3590b],eax        # 0x14004eb30
   140019225:	mov    eax,DWORD PTR [r11+0x8]
   140019229:	mov    DWORD PTR [rip+0x35905],eax        # 0x14004eb34
   14001922f:	mov    eax,DWORD PTR [r11+0x108]
   140019236:	mov    DWORD PTR [rip+0x303ec],eax        # 0x140049628
   14001923c:	mov    rax,QWORD PTR [r11+0x158]
   140019243:	mov    QWORD PTR [rip+0x30b5e],rax        # 0x140049da8
   14001924a:	mov    rax,QWORD PTR [r11+0x128]
   140019251:	mov    QWORD PTR [rip+0x30bc0],rax        # 0x140049e18
   140019258:	mov    rax,QWORD PTR [r11+0x140]
   14001925f:	mov    QWORD PTR [rip+0x309ca],rax        # 0x140049c30
   140019266:	mov    eax,DWORD PTR [r11+0x10c]
   14001926d:	mov    DWORD PTR [rip+0x30bad],eax        # 0x140049e20
   140019273:	mov    ecx,0xc
   140019278:	call   0x140020644
   14001927d:	jmp    0x14001928d
   14001927f:	mov    rcx,rdi
   140019282:	call   0x140018364
   140019287:	call   0x140018150
   14001928c:	nop
   14001928d:	and    DWORD PTR [rsi+0xc8],0xffffffef
   140019294:	mov    rax,r12
   140019297:	mov    rsi,QWORD PTR [rsp+0x60]
   14001929c:	mov    rdi,QWORD PTR [rsp+0x68]
   1400192a1:	mov    r12,QWORD PTR [rsp+0x78]
   1400192a6:	add    rsp,0x40
   1400192aa:	pop    r15
   1400192ac:	pop    r14
   1400192ae:	pop    r13
   1400192b0:	ret    
   1400192b1:	int3   
   1400192b2:	int3   
   1400192b3:	int3   
   1400192b4:	rex push rbp
   1400192b6:	push   r12
   1400192b8:	push   r13
   1400192ba:	push   r14
   1400192bc:	push   r15
   1400192be:	sub    rsp,0x60
   1400192c2:	lea    rbp,[rsp+0x40]
   1400192c7:	mov    QWORD PTR [rbp+0x50],rbx
   1400192cb:	mov    QWORD PTR [rbp+0x58],rsi
   1400192cf:	mov    QWORD PTR [rbp+0x60],rdi
   1400192d3:	mov    rax,QWORD PTR [rip+0x2fae6]        # 0x140048dc0
   1400192da:	xor    rax,rbp
   1400192dd:	mov    QWORD PTR [rbp+0x18],rax
   1400192e1:	mov    r10d,DWORD PTR [rip+0x35850]        # 0x14004eb38
   1400192e8:	mov    esi,0x2
   1400192ed:	xor    edi,edi
   1400192ef:	mov    r11,r9
   1400192f2:	mov    QWORD PTR [rbp+0x10],r9
   1400192f6:	mov    DWORD PTR [rbp+0x0],r8d
   1400192fa:	mov    r14d,edx
   1400192fd:	mov    DWORD PTR [rbp+0x8],edx
   140019300:	mov    rbx,rcx
   140019303:	lea    r13d,[rsi-0x1]
   140019307:	cmp    r10d,edi
   14001930a:	jne    0x14001935b
   14001930c:	lea    r8,[rip+0x20405]        # 0x140039718
   140019313:	mov    r9d,r13d
   140019316:	mov    edx,0x100
   14001931b:	xor    ecx,ecx
   14001931d:	mov    DWORD PTR [rsp+0x28],edi
   140019321:	mov    QWORD PTR [rsp+0x20],rdi
   140019326:	call   QWORD PTR [rip+0x1ceac]        # 0x1400361d8
   14001932c:	cmp    eax,edi
   14001932e:	je     0x14001933c
   140019330:	mov    r10d,r13d
   140019333:	mov    DWORD PTR [rip+0x357fe],r13d        # 0x14004eb38
   14001933a:	jmp    0x140019357
   14001933c:	call   QWORD PTR [rip+0x1d11e]        # 0x140036460
   140019342:	mov    r10d,DWORD PTR [rip+0x357ef]        # 0x14004eb38
   140019349:	cmp    eax,0x78
   14001934c:	cmove  r10d,esi
   140019350:	mov    DWORD PTR [rip+0x357e1],r10d        # 0x14004eb38
   140019357:	mov    r11,QWORD PTR [rbp+0x10]
   14001935b:	mov    r9d,DWORD PTR [rbp+0x70]
   14001935f:	cmp    r9d,edi
   140019362:	jle    0x140019399
   140019364:	mov    ecx,r9d
   140019367:	mov    rax,r11
   14001936a:	sub    ecx,r13d
   14001936d:	cmp    BYTE PTR [rax],dil
   140019370:	je     0x14001937c
   140019372:	add    rax,r13
   140019375:	cmp    ecx,edi
   140019377:	jne    0x14001936a
   140019379:	or     ecx,0xffffffff
   14001937c:	mov    eax,r9d
   14001937f:	sub    eax,ecx
   140019381:	sub    eax,r13d
   140019384:	cmp    eax,r9d
   140019387:	jge    0x140019393
   140019389:	lea    r9d,[rax+0x1]
   14001938d:	mov    DWORD PTR [rbp+0x70],r9d
   140019391:	jmp    0x140019399
   140019393:	mov    r9d,eax
   140019396:	mov    DWORD PTR [rbp+0x70],eax
   140019399:	cmp    r10d,esi
   14001939c:	je     0x1400195fe
   1400193a2:	cmp    r10d,edi
   1400193a5:	je     0x1400195fe
   1400193ab:	cmp    r10d,r13d
   1400193ae:	jne    0x140019634
   1400193b4:	mov    r12d,DWORD PTR [rbp+0x88]
   1400193bb:	mov    esi,edi
   1400193bd:	cmp    r12d,edi
   1400193c0:	jne    0x1400193c9
   1400193c2:	mov    rax,QWORD PTR [rbx]
   1400193c5:	mov    r12d,DWORD PTR [rax+0x4]
   1400193c9:	neg    DWORD PTR [rbp+0x90]
   1400193cf:	mov    r8,r11
   1400193d2:	mov    ecx,r12d
   1400193d5:	sbb    edx,edx
   1400193d7:	mov    DWORD PTR [rsp+0x28],edi
   1400193db:	mov    QWORD PTR [rsp+0x20],rdi
   1400193e0:	and    edx,0x8
   1400193e3:	add    edx,r13d
   1400193e6:	call   QWORD PTR [rip+0x1cfc4]        # 0x1400363b0
   1400193ec:	movsxd r15,eax
   1400193ef:	cmp    r15d,edi
   1400193f2:	je     0x140019634
   1400193f8:	movabs rbx,0xffffffffffffff0
   140019402:	mov    r14d,0xdddd
   140019408:	mov    r13d,0x400
   14001940e:	jle    0x14001946b
   140019410:	xor    edx,edx
   140019412:	lea    rax,[rdx-0x20]
   140019416:	div    r15
   140019419:	cmp    rax,0x2
   14001941d:	jb     0x14001946b
   14001941f:	lea    rcx,[r15+r15*1+0x10]
   140019424:	cmp    rcx,r13
   140019427:	ja     0x140019457
   140019429:	lea    rax,[rcx+0xf]
   14001942d:	cmp    rax,rcx
   140019430:	ja     0x140019435
   140019432:	mov    rax,rbx
   140019435:	and    rax,0xfffffffffffffff0
   140019439:	call   0x1400329e0
   14001943e:	sub    rsp,rax
   140019441:	lea    rdi,[rsp+0x40]
   140019446:	test   rdi,rdi
   140019449:	je     0x140019634
   14001944f:	mov    DWORD PTR [rdi],0xcccc
   140019455:	jmp    0x140019467
   140019457:	call   0x140014f50
   14001945c:	mov    rdi,rax
   14001945f:	test   rax,rax
   140019462:	je     0x14001946b
   140019464:	mov    DWORD PTR [rax],r14d
   140019467:	add    rdi,0x10
   14001946b:	test   rdi,rdi
   14001946e:	je     0x140019634
   140019474:	mov    r9d,DWORD PTR [rbp+0x70]
   140019478:	mov    r8,QWORD PTR [rbp+0x10]
   14001947c:	mov    edx,0x1
   140019481:	mov    ecx,r12d
   140019484:	mov    DWORD PTR [rsp+0x28],r15d
   140019489:	mov    QWORD PTR [rsp+0x20],rdi
   14001948e:	call   QWORD PTR [rip+0x1cf1c]        # 0x1400363b0
   140019494:	xor    ecx,ecx
   140019496:	cmp    eax,ecx
   140019498:	je     0x1400195e9
   14001949e:	mov    edx,DWORD PTR [rbp+0x0]
   1400194a1:	mov    DWORD PTR [rsp+0x28],ecx
   1400194a5:	mov    QWORD PTR [rsp+0x20],rcx
   1400194aa:	mov    ecx,DWORD PTR [rbp+0x8]
   1400194ad:	mov    r9d,r15d
   1400194b0:	mov    r8,rdi
   1400194b3:	call   QWORD PTR [rip+0x1cd1f]        # 0x1400361d8
   1400194b9:	xor    r8d,r8d
   1400194bc:	movsxd rsi,eax
   1400194bf:	cmp    esi,r8d
   1400194c2:	je     0x1400195e9
   1400194c8:	mov    r10d,DWORD PTR [rbp+0x0]
   1400194cc:	bt     r10d,0xa
   1400194d1:	jae    0x14001950e
   1400194d3:	mov    eax,DWORD PTR [rbp+0x80]
   1400194d9:	cmp    eax,r8d
   1400194dc:	je     0x1400195e9
   1400194e2:	cmp    esi,eax
   1400194e4:	jg     0x1400195e9
   1400194ea:	mov    ecx,DWORD PTR [rbp+0x8]
   1400194ed:	mov    DWORD PTR [rsp+0x28],eax
   1400194f1:	mov    rax,QWORD PTR [rbp+0x78]
   1400194f5:	mov    r9d,r15d
   1400194f8:	mov    r8,rdi
   1400194fb:	mov    edx,r10d
   1400194fe:	mov    QWORD PTR [rsp+0x20],rax
   140019503:	call   QWORD PTR [rip+0x1cccf]        # 0x1400361d8
   140019509:	jmp    0x1400195e9
   14001950e:	cmp    esi,r8d
   140019511:	jle    0x140019573
   140019513:	xor    edx,edx
   140019515:	lea    rax,[rdx-0x20]
   140019519:	div    rsi
   14001951c:	cmp    rax,0x2
   140019520:	jb     0x140019573
   140019522:	lea    rcx,[rsi+rsi*1+0x10]
   140019527:	cmp    rcx,r13
   14001952a:	ja     0x140019556
   14001952c:	lea    rax,[rcx+0xf]
   140019530:	cmp    rax,rcx
   140019533:	ja     0x140019538
   140019535:	mov    rax,rbx
   140019538:	and    rax,0xfffffffffffffff0
   14001953c:	call   0x1400329e0
   140019541:	sub    rsp,rax
   140019544:	lea    rbx,[rsp+0x40]
   140019549:	cmp    rbx,r8
   14001954c:	je     0x14001956d
   14001954e:	mov    DWORD PTR [rbx],0xcccc
   140019554:	jmp    0x140019569
   140019556:	call   0x140014f50
   14001955b:	xor    r8d,r8d
   14001955e:	mov    rbx,rax
   140019561:	cmp    rax,r8
   140019564:	je     0x14001956d
   140019566:	mov    DWORD PTR [rax],r14d
   140019569:	add    rbx,0x10
   14001956d:	mov    r10d,DWORD PTR [rbp+0x0]
   140019571:	jmp    0x140019576
   140019573:	mov    rbx,r8
   140019576:	cmp    rbx,r8
   140019579:	je     0x1400195e9
   14001957b:	mov    ecx,DWORD PTR [rbp+0x8]
   14001957e:	mov    r9d,r15d
   140019581:	mov    r8,rdi
   140019584:	mov    edx,r10d
   140019587:	mov    DWORD PTR [rsp+0x28],esi
   14001958b:	mov    QWORD PTR [rsp+0x20],rbx
   140019590:	call   QWORD PTR [rip+0x1cc42]        # 0x1400361d8
   140019596:	xor    ecx,ecx
   140019598:	cmp    eax,ecx
   14001959a:	je     0x1400195db
   14001959c:	mov    eax,DWORD PTR [rbp+0x80]
   1400195a2:	xor    edx,edx
   1400195a4:	mov    QWORD PTR [rsp+0x38],rcx
   1400195a9:	mov    r9d,esi
   1400195ac:	mov    r8,rbx
   1400195af:	mov    QWORD PTR [rsp+0x30],rcx
   1400195b4:	cmp    eax,ecx
   1400195b6:	jne    0x1400195c3
   1400195b8:	mov    DWORD PTR [rsp+0x28],ecx
   1400195bc:	mov    QWORD PTR [rsp+0x20],rcx
   1400195c1:	jmp    0x1400195d0
   1400195c3:	mov    DWORD PTR [rsp+0x28],eax
   1400195c7:	mov    rax,QWORD PTR [rbp+0x78]
   1400195cb:	mov    QWORD PTR [rsp+0x20],rax
   1400195d0:	mov    ecx,r12d
   1400195d3:	call   QWORD PTR [rip+0x1cdef]        # 0x1400363c8
   1400195d9:	mov    esi,eax
   1400195db:	lea    rcx,[rbx-0x10]
   1400195df:	cmp    DWORD PTR [rcx],r14d
   1400195e2:	jne    0x1400195e9
   1400195e4:	call   0x140014f10
   1400195e9:	lea    rcx,[rdi-0x10]
   1400195ed:	cmp    DWORD PTR [rcx],r14d
   1400195f0:	jne    0x1400195f7
   1400195f2:	call   0x140014f10
   1400195f7:	mov    eax,esi
   1400195f9:	jmp    0x1400197cb
   1400195fe:	mov    rsi,rdi
   140019601:	mov    r12,rdi
   140019604:	cmp    r14d,edi
   140019607:	jne    0x140019614
   140019609:	mov    rax,QWORD PTR [rbx]
   14001960c:	mov    r14d,DWORD PTR [rax+0x14]
   140019610:	mov    DWORD PTR [rbp+0x8],r14d
   140019614:	mov    edi,DWORD PTR [rbp+0x88]
   14001961a:	test   edi,edi
   14001961c:	jne    0x140019624
   14001961e:	mov    rax,QWORD PTR [rbx]
   140019621:	mov    edi,DWORD PTR [rax+0x4]
   140019624:	mov    ecx,r14d
   140019627:	call   0x140022e24
   14001962c:	mov    r13d,eax
   14001962f:	cmp    eax,0xffffffff
   140019632:	jne    0x14001963b
   140019634:	xor    eax,eax
   140019636:	jmp    0x1400197cb
   14001963b:	mov    r15,QWORD PTR [rbp+0x78]
   14001963f:	mov    r8,QWORD PTR [rbp+0x10]
   140019643:	cmp    eax,edi
   140019645:	je     0x140019787
   14001964b:	xor    ebx,ebx
   14001964d:	lea    r9,[rbp+0x70]
   140019651:	mov    edx,eax
   140019653:	mov    ecx,edi
   140019655:	mov    DWORD PTR [rsp+0x28],ebx
   140019659:	mov    QWORD PTR [rsp+0x20],rbx
   14001965e:	call   0x140022e78
   140019663:	mov    rsi,rax
   140019666:	cmp    rax,rbx
   140019669:	je     0x140019634
   14001966b:	mov    r9d,DWORD PTR [rbp+0x70]
   14001966f:	mov    edx,DWORD PTR [rbp+0x0]
   140019672:	mov    r8,rax
   140019675:	mov    ecx,r14d
   140019678:	mov    DWORD PTR [rsp+0x28],ebx
   14001967c:	mov    QWORD PTR [rsp+0x20],rbx
   140019681:	call   QWORD PTR [rip+0x1cb49]        # 0x1400361d0
   140019687:	movsxd r9,eax
   14001968a:	mov    DWORD PTR [rbp+0x4],r9d
   14001968e:	cmp    r9d,ebx
   140019691:	jne    0x14001969a
   140019693:	mov    edi,ebx
   140019695:	jmp    0x1400197aa
   14001969a:	cmp    r9d,ebx
   14001969d:	mov    r14d,0xdddd
   1400196a3:	jle    0x140019707
   1400196a5:	mov    rcx,r9
   1400196a8:	cmp    r9,0xffffffffffffffe0
   1400196ac:	ja     0x140019707
   1400196ae:	add    rcx,0x10
   1400196b2:	cmp    rcx,0x400
   1400196b9:	ja     0x1400196ef
   1400196bb:	lea    rbx,[rcx+0xf]
   1400196bf:	cmp    rbx,rcx
   1400196c2:	ja     0x1400196ce
   1400196c4:	movabs rbx,0xffffffffffffff0
   1400196ce:	and    rbx,0xfffffffffffffff0
   1400196d2:	mov    rax,rbx
   1400196d5:	call   0x1400329e0
   1400196da:	sub    rsp,rbx
   1400196dd:	lea    rbx,[rsp+0x40]
   1400196e2:	test   rbx,rbx
   1400196e5:	je     0x14001970c
   1400196e7:	mov    DWORD PTR [rbx],0xcccc
   1400196ed:	jmp    0x1400196ff
   1400196ef:	call   0x140014f50
   1400196f4:	mov    rbx,rax
   1400196f7:	test   rax,rax
   1400196fa:	je     0x140019703
   1400196fc:	mov    DWORD PTR [rax],r14d
   1400196ff:	add    rbx,0x10
   140019703:	mov    r9d,DWORD PTR [rbp+0x4]
   140019707:	test   rbx,rbx
   14001970a:	jne    0x140019710
   14001970c:	xor    ebx,ebx
   14001970e:	jmp    0x140019693
   140019710:	movsxd r8,r9d
   140019713:	xor    edx,edx
   140019715:	mov    rcx,rbx
   140019718:	call   0x140015b00
   14001971d:	mov    r11d,DWORD PTR [rbp+0x4]
   140019721:	mov    r9d,DWORD PTR [rbp+0x70]
   140019725:	mov    edx,DWORD PTR [rbp+0x0]
   140019728:	mov    ecx,DWORD PTR [rbp+0x8]
   14001972b:	mov    DWORD PTR [rsp+0x28],r11d
   140019730:	mov    r8,rsi
   140019733:	mov    QWORD PTR [rsp+0x20],rbx
   140019738:	call   QWORD PTR [rip+0x1ca92]        # 0x1400361d0
   14001973e:	mov    DWORD PTR [rbp+0x4],eax
   140019741:	test   eax,eax
   140019743:	jne    0x140019749
   140019745:	xor    edi,edi
   140019747:	jmp    0x140019777
   140019749:	mov    eax,DWORD PTR [rbp+0x80]
   14001974f:	lea    r9,[rbp+0x4]
   140019753:	mov    r8,rbx
   140019756:	mov    DWORD PTR [rsp+0x28],eax
   14001975a:	mov    edx,edi
   14001975c:	mov    ecx,r13d
   14001975f:	mov    QWORD PTR [rsp+0x20],r15
   140019764:	call   0x140022e78
   140019769:	mov    edi,DWORD PTR [rbp+0x4]
   14001976c:	mov    r12,rax
   14001976f:	xor    eax,eax
   140019771:	cmp    r12,rax
   140019774:	cmove  edi,eax
   140019777:	lea    rcx,[rbx-0x10]
   14001977b:	cmp    DWORD PTR [rcx],r14d
   14001977e:	jne    0x1400197a8
   140019780:	call   0x140014f10
   140019785:	jmp    0x1400197a8
   140019787:	mov    eax,DWORD PTR [rbp+0x80]
   14001978d:	mov    r9d,DWORD PTR [rbp+0x70]
   140019791:	mov    edx,DWORD PTR [rbp+0x0]
   140019794:	mov    DWORD PTR [rsp+0x28],eax
   140019798:	mov    ecx,r14d
   14001979b:	mov    QWORD PTR [rsp+0x20],r15
   1400197a0:	call   QWORD PTR [rip+0x1ca2a]        # 0x1400361d0
   1400197a6:	mov    edi,eax
   1400197a8:	xor    ebx,ebx
   1400197aa:	cmp    rsi,rbx
   1400197ad:	je     0x1400197b7
   1400197af:	mov    rcx,rsi
   1400197b2:	call   0x140014f10
   1400197b7:	cmp    r12,rbx
   1400197ba:	je     0x1400197c9
   1400197bc:	cmp    r15,r12
   1400197bf:	je     0x1400197c9
   1400197c1:	mov    rcx,r12
   1400197c4:	call   0x140014f10
   1400197c9:	mov    eax,edi
   1400197cb:	mov    rcx,QWORD PTR [rbp+0x18]
   1400197cf:	xor    rcx,rbp
   1400197d2:	call   0x1400144f0
   1400197d7:	mov    rbx,QWORD PTR [rbp+0x50]
   1400197db:	mov    rsi,QWORD PTR [rbp+0x58]
   1400197df:	mov    rdi,QWORD PTR [rbp+0x60]
   1400197e3:	lea    rsp,[rbp+0x20]
   1400197e7:	pop    r15
   1400197e9:	pop    r14
   1400197eb:	pop    r13
   1400197ed:	pop    r12
   1400197ef:	pop    rbp
   1400197f0:	ret    
   1400197f1:	int3   
   1400197f2:	int3   
   1400197f3:	int3   
   1400197f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400197f9:	mov    QWORD PTR [rsp+0x10],rsi
   1400197fe:	push   rdi
   1400197ff:	sub    rsp,0x70
   140019803:	mov    esi,edx
   140019805:	mov    rdx,rcx
   140019808:	lea    rcx,[rsp+0x50]
   14001980d:	mov    rbx,r9
   140019810:	mov    edi,r8d
   140019813:	call   0x140014a6c
   140019818:	mov    eax,DWORD PTR [rsp+0xb8]
   14001981f:	mov    r11d,DWORD PTR [rsp+0xc0]
   140019827:	lea    rcx,[rsp+0x50]
   14001982c:	mov    DWORD PTR [rsp+0x40],r11d
   140019831:	mov    DWORD PTR [rsp+0x38],eax
   140019835:	mov    eax,DWORD PTR [rsp+0xb0]
   14001983c:	mov    DWORD PTR [rsp+0x30],eax
   140019840:	mov    rax,QWORD PTR [rsp+0xa8]
   140019848:	mov    r9,rbx
   14001984b:	mov    QWORD PTR [rsp+0x28],rax
   140019850:	mov    eax,DWORD PTR [rsp+0xa0]
   140019857:	mov    r8d,edi
   14001985a:	mov    edx,esi
   14001985c:	mov    DWORD PTR [rsp+0x20],eax
   140019860:	call   0x1400192b4
   140019865:	cmp    BYTE PTR [rsp+0x68],0x0
   14001986a:	je     0x140019878
   14001986c:	mov    rcx,QWORD PTR [rsp+0x60]
   140019871:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019878:	lea    r11,[rsp+0x70]
   14001987d:	mov    rbx,QWORD PTR [r11+0x10]
   140019881:	mov    rsi,QWORD PTR [r11+0x18]
   140019885:	mov    rsp,r11
   140019888:	pop    rdi
   140019889:	ret    
   14001988a:	int3   
   14001988b:	int3   
   14001988c:	rex push rbx
   14001988e:	sub    rsp,0x40
   140019892:	mov    ebx,ecx
   140019894:	lea    rcx,[rsp+0x20]
   140019899:	call   0x140014a6c
   14001989e:	mov    rax,QWORD PTR [rsp+0x20]
   1400198a3:	movzx  r11d,bl
   1400198a7:	mov    rcx,QWORD PTR [rax+0x140]
   1400198ae:	movzx  eax,WORD PTR [rcx+r11*2]
   1400198b3:	and    eax,0x8000
   1400198b8:	cmp    BYTE PTR [rsp+0x38],0x0
   1400198bd:	je     0x1400198cb
   1400198bf:	mov    rcx,QWORD PTR [rsp+0x30]
   1400198c4:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400198cb:	add    rsp,0x40
   1400198cf:	pop    rbx
   1400198d0:	ret    
   1400198d1:	int3   
   1400198d2:	int3   
   1400198d3:	int3   
   1400198d4:	rex push rbx
   1400198d6:	sub    rsp,0x40
   1400198da:	mov    ebx,ecx
   1400198dc:	lea    rcx,[rsp+0x20]
   1400198e1:	xor    edx,edx
   1400198e3:	call   0x140014a6c
   1400198e8:	mov    rax,QWORD PTR [rsp+0x20]
   1400198ed:	movzx  r11d,bl
   1400198f1:	mov    rcx,QWORD PTR [rax+0x140]
   1400198f8:	movzx  eax,WORD PTR [rcx+r11*2]
   1400198fd:	and    eax,0x8000
   140019902:	cmp    BYTE PTR [rsp+0x38],0x0
   140019907:	je     0x140019915
   140019909:	mov    rcx,QWORD PTR [rsp+0x30]
   14001990e:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019915:	add    rsp,0x40
   140019919:	pop    rbx
   14001991a:	ret    
   14001991b:	int3   
   14001991c:	mov    QWORD PTR [rsp+0x10],rbp
   140019921:	mov    QWORD PTR [rsp+0x18],rsi
   140019926:	push   rdi
   140019927:	sub    rsp,0x60
   14001992b:	movsxd rdi,ecx
   14001992e:	mov    ebp,edx
   140019930:	lea    rcx,[rsp+0x40]
   140019935:	mov    rdx,r8
   140019938:	call   0x140014a6c
   14001993d:	lea    r11d,[rdi+0x1]
   140019941:	cmp    r11d,0x100
   140019948:	ja     0x14001995f
   14001994a:	mov    rax,QWORD PTR [rsp+0x40]
   14001994f:	mov    rcx,QWORD PTR [rax+0x140]
   140019956:	movzx  eax,WORD PTR [rcx+rdi*2]
   14001995a:	jmp    0x1400199fe
   14001995f:	mov    esi,edi
   140019961:	lea    rdx,[rsp+0x40]
   140019966:	sar    esi,0x8
   140019969:	movzx  ecx,sil
   14001996d:	call   0x14001988c
   140019972:	mov    edx,0x1
   140019977:	test   eax,eax
   140019979:	je     0x140019999
   14001997b:	mov    BYTE PTR [rsp+0x88],sil
   140019983:	mov    BYTE PTR [rsp+0x89],dil
   14001998b:	mov    BYTE PTR [rsp+0x8a],0x0
   140019993:	lea    r9d,[rdx+0x1]
   140019997:	jmp    0x1400199ac
   140019999:	mov    BYTE PTR [rsp+0x88],dil
   1400199a1:	mov    BYTE PTR [rsp+0x89],0x0
   1400199a9:	mov    r9d,edx
   1400199ac:	mov    rcx,QWORD PTR [rsp+0x40]
   1400199b1:	mov    DWORD PTR [rsp+0x38],edx
   1400199b5:	lea    r8,[rsp+0x88]
   1400199bd:	mov    eax,DWORD PTR [rcx+0x14]
   1400199c0:	mov    DWORD PTR [rsp+0x30],eax
   1400199c4:	mov    eax,DWORD PTR [rcx+0x4]
   1400199c7:	lea    rcx,[rsp+0x40]
   1400199cc:	mov    DWORD PTR [rsp+0x28],eax
   1400199d0:	lea    rax,[rsp+0x70]
   1400199d5:	mov    QWORD PTR [rsp+0x20],rax
   1400199da:	call   0x140020db4
   1400199df:	test   eax,eax
   1400199e1:	jne    0x1400199f9
   1400199e3:	cmp    BYTE PTR [rsp+0x58],al
   1400199e7:	je     0x1400199f5
   1400199e9:	mov    rax,QWORD PTR [rsp+0x50]
   1400199ee:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400199f5:	xor    eax,eax
   1400199f7:	jmp    0x140019a13
   1400199f9:	movzx  eax,WORD PTR [rsp+0x70]
   1400199fe:	and    eax,ebp
   140019a00:	cmp    BYTE PTR [rsp+0x58],0x0
   140019a05:	je     0x140019a13
   140019a07:	mov    rcx,QWORD PTR [rsp+0x50]
   140019a0c:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140019a13:	lea    r11,[rsp+0x60]
   140019a18:	mov    rbp,QWORD PTR [r11+0x18]
   140019a1c:	mov    rsi,QWORD PTR [r11+0x20]
   140019a20:	mov    rsp,r11
   140019a23:	pop    rdi
   140019a24:	ret    
   140019a25:	int3   
   140019a26:	int3   
   140019a27:	int3   
   140019a28:	mov    DWORD PTR [rsp+0x8],ecx
   140019a2c:	sub    rsp,0x28
   140019a30:	xor    r8d,r8d
   140019a33:	mov    edx,0x1000
   140019a38:	xor    ecx,ecx
   140019a3a:	call   QWORD PTR [rip+0x1c7a8]        # 0x1400361e8
   140019a40:	mov    QWORD PTR [rip+0x350f9],rax        # 0x14004eb40
   140019a47:	test   rax,rax
   140019a4a:	je     0x140019a6f
   140019a4c:	lea    r8,[rsp+0x30]
   140019a51:	mov    r9d,0x4
   140019a57:	xor    edx,edx
   140019a59:	mov    rcx,rax
   140019a5c:	mov    DWORD PTR [rsp+0x30],0x2
   140019a64:	call   QWORD PTR [rip+0x1c776]        # 0x1400361e0
   140019a6a:	mov    eax,0x1
   140019a6f:	add    rsp,0x28
   140019a73:	ret    
   140019a74:	mov    QWORD PTR [rsp+0x8],rbx
   140019a79:	mov    QWORD PTR [rsp+0x18],rdi
   140019a7e:	mov    QWORD PTR [rsp+0x20],r13
   140019a83:	push   r14
   140019a85:	sub    rsp,0x30
   140019a89:	lea    r14,[rip+0x2fbc0]        # 0x140049650
   140019a90:	mov    edi,ecx
   140019a92:	xor    ebx,ebx
   140019a94:	mov    rax,r14
   140019a97:	cmp    ecx,DWORD PTR [rax]
   140019a99:	je     0x140019aa6
   140019a9b:	inc    ebx
   140019a9d:	add    rax,0x10
   140019aa1:	cmp    ebx,0x17
   140019aa4:	jb     0x140019a97
   140019aa6:	cmp    ebx,0x17
   140019aa9:	jae    0x140019c83
   140019aaf:	mov    ecx,0x3
   140019ab4:	call   0x1400232f4
   140019ab9:	cmp    eax,0x1
   140019abc:	je     0x140019c3e
   140019ac2:	mov    ecx,0x3
   140019ac7:	call   0x1400232f4
   140019acc:	test   eax,eax
   140019ace:	jne    0x140019add
   140019ad0:	cmp    DWORD PTR [rip+0x2f2e1],0x1        # 0x140048db8
   140019ad7:	je     0x140019c3e
   140019add:	cmp    edi,0xfc
   140019ae3:	je     0x140019c83
   140019ae9:	lea    rdi,[rip+0x35060]        # 0x14004eb50
   140019af0:	mov    r13d,0x314
   140019af6:	lea    r8,[rip+0x201f3]        # 0x140039cf0
   140019afd:	mov    rcx,rdi
   140019b00:	mov    rdx,r13
   140019b03:	call   0x1400164d8
   140019b08:	test   eax,eax
   140019b0a:	je     0x140019b21
   140019b0c:	and    QWORD PTR [rsp+0x20],0x0
   140019b12:	xor    r9d,r9d
   140019b15:	xor    r8d,r8d
   140019b18:	xor    edx,edx
   140019b1a:	xor    ecx,ecx
   140019b1c:	call   0x140014880
   140019b21:	lea    rdx,[rip+0x35041]        # 0x14004eb69
   140019b28:	mov    r8d,0x104
   140019b2e:	xor    ecx,ecx
   140019b30:	mov    BYTE PTR [rip+0x35136],0x0        # 0x14004ec6d
   140019b37:	call   QWORD PTR [rip+0x1c9a3]        # 0x1400364e0
   140019b3d:	test   eax,eax
   140019b3f:	jne    0x140019b72
   140019b41:	lea    r8,[rip+0x20190]        # 0x140039cd8
   140019b48:	lea    rcx,[rip+0x3501a]        # 0x14004eb69
   140019b4f:	mov    edx,0x2fb
   140019b54:	call   0x1400164d8
   140019b59:	test   eax,eax
   140019b5b:	je     0x140019b72
   140019b5d:	and    QWORD PTR [rsp+0x20],0x0
   140019b63:	xor    r9d,r9d
   140019b66:	xor    r8d,r8d
   140019b69:	xor    edx,edx
   140019b6b:	xor    ecx,ecx
   140019b6d:	call   0x140014880
   140019b72:	lea    rcx,[rip+0x34ff0]        # 0x14004eb69
   140019b79:	call   0x140015c00
   140019b7e:	inc    rax
   140019b81:	cmp    rax,0x3c
   140019b85:	jbe    0x140019bcd
   140019b87:	lea    rcx,[rip+0x34fdb]        # 0x14004eb69
   140019b8e:	call   0x140015c00
   140019b93:	lea    rdx,[rip+0x352ca]        # 0x14004ee64
   140019b9a:	lea    r8,[rip+0x20133]        # 0x140039cd4
   140019ba1:	lea    rcx,[rax+rdi*1-0x22]
   140019ba6:	mov    r9d,0x3
   140019bac:	sub    rdx,rcx
   140019baf:	call   0x140016c08
   140019bb4:	test   eax,eax
   140019bb6:	je     0x140019bcd
   140019bb8:	and    QWORD PTR [rsp+0x20],0x0
   140019bbe:	xor    r9d,r9d
   140019bc1:	xor    r8d,r8d
   140019bc4:	xor    edx,edx
   140019bc6:	xor    ecx,ecx
   140019bc8:	call   0x140014880
   140019bcd:	lea    r8,[rip+0x200fc]        # 0x140039cd0
   140019bd4:	mov    rdx,r13
   140019bd7:	mov    rcx,rdi
   140019bda:	call   0x140017284
   140019bdf:	test   eax,eax
   140019be1:	je     0x140019bf8
   140019be3:	and    QWORD PTR [rsp+0x20],0x0
   140019be9:	xor    r9d,r9d
   140019bec:	xor    r8d,r8d
   140019bef:	xor    edx,edx
   140019bf1:	xor    ecx,ecx
   140019bf3:	call   0x140014880
   140019bf8:	movsxd r8,ebx
   140019bfb:	mov    rdx,r13
   140019bfe:	mov    rcx,rdi
   140019c01:	add    r8,r8
   140019c04:	mov    r8,QWORD PTR [r14+r8*8+0x8]
   140019c09:	call   0x140017284
   140019c0e:	test   eax,eax
   140019c10:	je     0x140019c27
   140019c12:	and    QWORD PTR [rsp+0x20],0x0
   140019c18:	xor    r9d,r9d
   140019c1b:	xor    r8d,r8d
   140019c1e:	xor    edx,edx
   140019c20:	xor    ecx,ecx
   140019c22:	call   0x140014880
   140019c27:	lea    rdx,[rip+0x2007a]        # 0x140039ca8
   140019c2e:	mov    r8d,0x12010
   140019c34:	mov    rcx,rdi
   140019c37:	call   0x140023100
   140019c3c:	jmp    0x140019c83
   140019c3e:	mov    ecx,0xfffffff4
   140019c43:	call   QWORD PTR [rip+0x1c5a7]        # 0x1400361f0
   140019c49:	mov    rdi,rax
   140019c4c:	test   rax,rax
   140019c4f:	je     0x140019c83
   140019c51:	cmp    rax,0xffffffffffffffff
   140019c55:	je     0x140019c83
   140019c57:	movsxd rbx,ebx
   140019c5a:	add    rbx,rbx
   140019c5d:	mov    rcx,QWORD PTR [r14+rbx*8+0x8]
   140019c62:	call   0x140015c00
   140019c67:	mov    rdx,QWORD PTR [r14+rbx*8+0x8]
   140019c6c:	and    QWORD PTR [rsp+0x20],0x0
   140019c72:	lea    r9,[rsp+0x48]
   140019c77:	mov    r8,rax
   140019c7a:	mov    rcx,rdi
   140019c7d:	call   QWORD PTR [rip+0x1c6c5]        # 0x140036348
   140019c83:	mov    rbx,QWORD PTR [rsp+0x40]
   140019c88:	mov    rdi,QWORD PTR [rsp+0x50]
   140019c8d:	mov    r13,QWORD PTR [rsp+0x58]
   140019c92:	add    rsp,0x30
   140019c96:	pop    r14
   140019c98:	ret    
   140019c99:	int3   
   140019c9a:	int3   
   140019c9b:	int3   
   140019c9c:	sub    rsp,0x28
   140019ca0:	mov    ecx,0x3
   140019ca5:	call   0x1400232f4
   140019caa:	cmp    eax,0x1
   140019cad:	je     0x140019cc6
   140019caf:	mov    ecx,0x3
   140019cb4:	call   0x1400232f4
   140019cb9:	test   eax,eax
   140019cbb:	jne    0x140019cda
   140019cbd:	cmp    DWORD PTR [rip+0x2f0f4],0x1        # 0x140048db8
   140019cc4:	jne    0x140019cda
   140019cc6:	mov    ecx,0xfc
   140019ccb:	call   0x140019a74
   140019cd0:	mov    ecx,0xff
   140019cd5:	call   0x140019a74
   140019cda:	add    rsp,0x28
   140019cde:	ret    
   140019cdf:	int3   
   140019ce0:	mov    QWORD PTR [rip+0x35181],rcx        # 0x14004ee68
   140019ce7:	ret    
   140019ce8:	rex push rbx
   140019cea:	sub    rsp,0x20
   140019cee:	mov    rbx,rcx
   140019cf1:	mov    rcx,QWORD PTR [rip+0x35170]        # 0x14004ee68
   140019cf8:	call   0x1400175ac
   140019cfd:	test   rax,rax
   140019d00:	je     0x140019d12
   140019d02:	mov    rcx,rbx
   140019d05:	call   rax
   140019d07:	test   eax,eax
   140019d09:	je     0x140019d12
   140019d0b:	mov    eax,0x1
   140019d10:	jmp    0x140019d14
   140019d12:	xor    eax,eax
   140019d14:	add    rsp,0x20
   140019d18:	pop    rbx
   140019d19:	ret    
   140019d1a:	int3   
   140019d1b:	int3   
   140019d1c:	sub    rsp,0x28
   140019d20:	mov    rax,QWORD PTR [rcx]
   140019d23:	cmp    DWORD PTR [rax],0xe06d7363
   140019d29:	jne    0x140019d56
   140019d2b:	cmp    DWORD PTR [rax+0x18],0x4
   140019d2f:	jne    0x140019d56
   140019d31:	mov    eax,DWORD PTR [rax+0x20]
   140019d34:	cmp    eax,0x19930520
   140019d39:	je     0x140019d50
   140019d3b:	cmp    eax,0x19930521
   140019d40:	je     0x140019d50
   140019d42:	cmp    eax,0x19930522
   140019d47:	je     0x140019d50
   140019d49:	cmp    eax,0x1994000
   140019d4e:	jne    0x140019d56
   140019d50:	call   0x14001be8c
   140019d55:	int3   
   140019d56:	xor    eax,eax
   140019d58:	add    rsp,0x28
   140019d5c:	ret    
   140019d5d:	int3   
   140019d5e:	int3   
   140019d5f:	int3   
   140019d60:	sub    rsp,0x28
   140019d64:	lea    rcx,[rip+0xffffffffffffffb1]        # 0x140019d1c
   140019d6b:	call   QWORD PTR [rip+0x1c57f]        # 0x1400362f0
   140019d71:	xor    eax,eax
   140019d73:	add    rsp,0x28
   140019d77:	ret    
   140019d78:	mov    QWORD PTR [rsp+0x8],rbx
   140019d7d:	mov    QWORD PTR [rsp+0x10],rbp
   140019d82:	mov    QWORD PTR [rsp+0x18],rsi
   140019d87:	push   rdi
   140019d88:	sub    rsp,0x20
   140019d8c:	mov    rsi,rdx
   140019d8f:	mov    edi,ecx
   140019d91:	call   0x140017690
   140019d96:	xor    r11d,r11d
   140019d99:	mov    rbx,rax
   140019d9c:	cmp    rax,r11
   140019d9f:	je     0x140019f2f
   140019da5:	mov    rcx,QWORD PTR [rax+0xa0]
   140019dac:	movsxd r8,DWORD PTR [rip+0x2fa19]        # 0x1400497cc
   140019db3:	mov    rdx,rcx
   140019db6:	cmp    DWORD PTR [rdx],edi
   140019db8:	je     0x140019dcd
   140019dba:	mov    rax,r8
   140019dbd:	add    rdx,0x10
   140019dc1:	shl    rax,0x4
   140019dc5:	add    rax,rcx
   140019dc8:	cmp    rdx,rax
   140019dcb:	jb     0x140019db6
   140019dcd:	mov    rax,r8
   140019dd0:	shl    rax,0x4
   140019dd4:	add    rax,rcx
   140019dd7:	cmp    rdx,rax
   140019dda:	jae    0x140019de0
   140019ddc:	cmp    DWORD PTR [rdx],edi
   140019dde:	je     0x140019de3
   140019de0:	mov    rdx,r11
   140019de3:	cmp    rdx,r11
   140019de6:	je     0x140019f2f
   140019dec:	mov    r8,QWORD PTR [rdx+0x8]
   140019df0:	cmp    r8,r11
   140019df3:	je     0x140019f2f
   140019df9:	cmp    r8,0x5
   140019dfd:	jne    0x140019e0c
   140019dff:	mov    QWORD PTR [rdx+0x8],r11
   140019e03:	lea    eax,[r8-0x4]
   140019e07:	jmp    0x140019f31
   140019e0c:	cmp    r8,0x1
   140019e10:	jne    0x140019e1a
   140019e12:	or     eax,0xffffffff
   140019e15:	jmp    0x140019f31
   140019e1a:	mov    rbp,QWORD PTR [rbx+0xa8]
   140019e21:	mov    QWORD PTR [rbx+0xa8],rsi
   140019e28:	mov    ecx,DWORD PTR [rdx+0x4]
   140019e2b:	cmp    ecx,0x8
   140019e2e:	jne    0x140019f1c
   140019e34:	movsxd r10,DWORD PTR [rip+0x2f985]        # 0x1400497c0
   140019e3b:	mov    ecx,DWORD PTR [rip+0x2f983]        # 0x1400497c4
   140019e41:	add    ecx,r10d
   140019e44:	mov    r9,r10
   140019e47:	cmp    r10d,ecx
   140019e4a:	jge    0x140019e76
   140019e4c:	shl    r9,0x4
   140019e50:	mov    rax,QWORD PTR [rbx+0xa0]
   140019e57:	inc    r10d
   140019e5a:	add    r9,0x10
   140019e5e:	mov    QWORD PTR [r9+rax*1-0x8],r11
   140019e63:	mov    ecx,DWORD PTR [rip+0x2f957]        # 0x1400497c0
   140019e69:	mov    eax,DWORD PTR [rip+0x2f955]        # 0x1400497c4
   140019e6f:	add    ecx,eax
   140019e71:	cmp    r10d,ecx
   140019e74:	jl     0x140019e50
   140019e76:	cmp    DWORD PTR [rdx],0xc000008e
   140019e7c:	mov    edi,DWORD PTR [rbx+0xb0]
   140019e82:	jne    0x140019e90
   140019e84:	mov    DWORD PTR [rbx+0xb0],0x83
   140019e8e:	jmp    0x140019f06
   140019e90:	cmp    DWORD PTR [rdx],0xc0000090
   140019e96:	jne    0x140019ea4
   140019e98:	mov    DWORD PTR [rbx+0xb0],0x81
   140019ea2:	jmp    0x140019f06
   140019ea4:	cmp    DWORD PTR [rdx],0xc0000091
   140019eaa:	jne    0x140019eb8
   140019eac:	mov    DWORD PTR [rbx+0xb0],0x84
   140019eb6:	jmp    0x140019f06
   140019eb8:	cmp    DWORD PTR [rdx],0xc0000093
   140019ebe:	jne    0x140019ecc
   140019ec0:	mov    DWORD PTR [rbx+0xb0],0x85
   140019eca:	jmp    0x140019f06
   140019ecc:	cmp    DWORD PTR [rdx],0xc000008d
   140019ed2:	jne    0x140019ee0
   140019ed4:	mov    DWORD PTR [rbx+0xb0],0x82
   140019ede:	jmp    0x140019f06
   140019ee0:	cmp    DWORD PTR [rdx],0xc000008f
   140019ee6:	jne    0x140019ef4
   140019ee8:	mov    DWORD PTR [rbx+0xb0],0x86
   140019ef2:	jmp    0x140019f06
   140019ef4:	cmp    DWORD PTR [rdx],0xc0000092
   140019efa:	jne    0x140019f06
   140019efc:	mov    DWORD PTR [rbx+0xb0],0x8a
   140019f06:	mov    edx,DWORD PTR [rbx+0xb0]
   140019f0c:	mov    ecx,0x8
   140019f11:	call   r8
   140019f14:	mov    DWORD PTR [rbx+0xb0],edi
   140019f1a:	jmp    0x140019f23
   140019f1c:	mov    QWORD PTR [rdx+0x8],r11
   140019f20:	call   r8
   140019f23:	mov    QWORD PTR [rbx+0xa8],rbp
   140019f2a:	jmp    0x140019e12
   140019f2f:	xor    eax,eax
   140019f31:	mov    rbx,QWORD PTR [rsp+0x30]
   140019f36:	mov    rbp,QWORD PTR [rsp+0x38]
   140019f3b:	mov    rsi,QWORD PTR [rsp+0x40]
   140019f40:	add    rsp,0x20
   140019f44:	pop    rdi
   140019f45:	ret    
   140019f46:	int3   
   140019f47:	int3   
   140019f48:	mov    QWORD PTR [rsp+0x8],rbx
   140019f4d:	mov    QWORD PTR [rsp+0x10],rbp
   140019f52:	mov    QWORD PTR [rsp+0x18],rsi
   140019f57:	push   rdi
   140019f58:	sub    rsp,0x30
   140019f5c:	cmp    DWORD PTR [rip+0x368f5],0x0        # 0x140050858
   140019f63:	jne    0x140019f6a
   140019f65:	call   0x140018128
   140019f6a:	mov    rbx,QWORD PTR [rip+0x3458f]        # 0x14004e500
   140019f71:	xor    edi,edi
   140019f73:	test   rbx,rbx
   140019f76:	jne    0x140019f93
   140019f78:	or     eax,0xffffffff
   140019f7b:	jmp    0x14001a049
   140019f80:	cmp    al,0x3d
   140019f82:	je     0x140019f86
   140019f84:	inc    edi
   140019f86:	mov    rcx,rbx
   140019f89:	call   0x140015c00
   140019f8e:	lea    rbx,[rbx+rax*1+0x1]
   140019f93:	mov    al,BYTE PTR [rbx]
   140019f95:	test   al,al
   140019f97:	jne    0x140019f80
   140019f99:	lea    eax,[rdi+0x1]
   140019f9c:	mov    edx,0x8
   140019fa1:	movsxd rcx,eax
   140019fa4:	call   0x14001c490
   140019fa9:	mov    rdi,rax
   140019fac:	mov    QWORD PTR [rip+0x3457d],rax        # 0x14004e530
   140019fb3:	test   rax,rax
   140019fb6:	je     0x140019f78
   140019fb8:	mov    rbx,QWORD PTR [rip+0x34541]        # 0x14004e500
   140019fbf:	cmp    BYTE PTR [rbx],0x0
   140019fc2:	je     0x14001a029
   140019fc4:	mov    rcx,rbx
   140019fc7:	call   0x140015c00
   140019fcc:	cmp    BYTE PTR [rbx],0x3d
   140019fcf:	lea    esi,[rax+0x1]
   140019fd2:	je     0x14001a017
   140019fd4:	movsxd rbp,esi
   140019fd7:	mov    edx,0x1
   140019fdc:	mov    rcx,rbp
   140019fdf:	call   0x14001c490
   140019fe4:	mov    QWORD PTR [rdi],rax
   140019fe7:	test   rax,rax
   140019fea:	je     0x14001a05e
   140019fec:	mov    r8,rbx
   140019fef:	mov    rdx,rbp
   140019ff2:	mov    rcx,rax
   140019ff5:	call   0x1400164d8
   140019ffa:	test   eax,eax
   140019ffc:	je     0x14001a013
   140019ffe:	and    QWORD PTR [rsp+0x20],0x0
   14001a004:	xor    r9d,r9d
   14001a007:	xor    r8d,r8d
   14001a00a:	xor    edx,edx
   14001a00c:	xor    ecx,ecx
   14001a00e:	call   0x140014880
   14001a013:	add    rdi,0x8
   14001a017:	movsxd rax,esi
   14001a01a:	add    rbx,rax
   14001a01d:	cmp    BYTE PTR [rbx],0x0
   14001a020:	jne    0x140019fc4
   14001a022:	mov    rbx,QWORD PTR [rip+0x344d7]        # 0x14004e500
   14001a029:	mov    rcx,rbx
   14001a02c:	call   0x140014f10
   14001a031:	and    QWORD PTR [rip+0x344c7],0x0        # 0x14004e500
   14001a039:	and    QWORD PTR [rdi],0x0
   14001a03d:	mov    DWORD PTR [rip+0x367fd],0x1        # 0x140050844
   14001a047:	xor    eax,eax
   14001a049:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a04e:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a053:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a058:	add    rsp,0x30
   14001a05c:	pop    rdi
   14001a05d:	ret    
   14001a05e:	mov    rcx,QWORD PTR [rip+0x344cb]        # 0x14004e530
   14001a065:	call   0x140014f10
   14001a06a:	and    QWORD PTR [rip+0x344be],0x0        # 0x14004e530
   14001a072:	jmp    0x140019f78
   14001a077:	int3   
   14001a078:	mov    rax,rsp
   14001a07b:	mov    QWORD PTR [rax+0x8],rbx
   14001a07f:	mov    QWORD PTR [rax+0x10],rbp
   14001a083:	mov    QWORD PTR [rax+0x18],rsi
   14001a087:	mov    QWORD PTR [rax+0x20],rdi
   14001a08b:	push   r12
   14001a08d:	push   r13
   14001a08f:	push   r14
   14001a091:	sub    rsp,0x20
   14001a095:	mov    r13,QWORD PTR [rsp+0x60]
   14001a09a:	mov    r14,r9
   14001a09d:	mov    rdi,r8
   14001a0a0:	and    DWORD PTR [r13+0x0],0x0
   14001a0a5:	mov    r12,rdx
   14001a0a8:	mov    rbx,rcx
   14001a0ab:	mov    DWORD PTR [r9],0x1
   14001a0b2:	test   rdx,rdx
   14001a0b5:	je     0x14001a0be
   14001a0b7:	mov    QWORD PTR [rdx],r8
   14001a0ba:	add    r12,0x8
   14001a0be:	xor    ebp,ebp
   14001a0c0:	cmp    BYTE PTR [rbx],0x22
   14001a0c3:	jne    0x14001a0d6
   14001a0c5:	xor    eax,eax
   14001a0c7:	test   ebp,ebp
   14001a0c9:	mov    sil,0x22
   14001a0cc:	sete   al
   14001a0cf:	inc    rbx
   14001a0d2:	mov    ebp,eax
   14001a0d4:	jmp    0x14001a10f
   14001a0d6:	inc    DWORD PTR [r13+0x0]
   14001a0da:	test   rdi,rdi
   14001a0dd:	je     0x14001a0e6
   14001a0df:	mov    al,BYTE PTR [rbx]
   14001a0e1:	mov    BYTE PTR [rdi],al
   14001a0e3:	inc    rdi
   14001a0e6:	movzx  esi,BYTE PTR [rbx]
   14001a0e9:	inc    rbx
   14001a0ec:	mov    ecx,esi
   14001a0ee:	call   0x140016e88
   14001a0f3:	test   eax,eax
   14001a0f5:	je     0x14001a10a
   14001a0f7:	inc    DWORD PTR [r13+0x0]
   14001a0fb:	test   rdi,rdi
   14001a0fe:	je     0x14001a107
   14001a100:	mov    al,BYTE PTR [rbx]
   14001a102:	mov    BYTE PTR [rdi],al
   14001a104:	inc    rdi
   14001a107:	inc    rbx
   14001a10a:	test   sil,sil
   14001a10d:	je     0x14001a12a
   14001a10f:	test   ebp,ebp
   14001a111:	jne    0x14001a0c0
   14001a113:	cmp    sil,0x20
   14001a117:	je     0x14001a11f
   14001a119:	cmp    sil,0x9
   14001a11d:	jne    0x14001a0c0
   14001a11f:	test   rdi,rdi
   14001a122:	je     0x14001a12d
   14001a124:	mov    BYTE PTR [rdi-0x1],0x0
   14001a128:	jmp    0x14001a12d
   14001a12a:	dec    rbx
   14001a12d:	xor    esi,esi
   14001a12f:	cmp    BYTE PTR [rbx],0x0
   14001a132:	je     0x14001a21b
   14001a138:	cmp    BYTE PTR [rbx],0x20
   14001a13b:	je     0x14001a142
   14001a13d:	cmp    BYTE PTR [rbx],0x9
   14001a140:	jne    0x14001a147
   14001a142:	inc    rbx
   14001a145:	jmp    0x14001a138
   14001a147:	cmp    BYTE PTR [rbx],0x0
   14001a14a:	je     0x14001a21b
   14001a150:	test   r12,r12
   14001a153:	je     0x14001a15d
   14001a155:	mov    QWORD PTR [r12],rdi
   14001a159:	add    r12,0x8
   14001a15d:	inc    DWORD PTR [r14]
   14001a160:	mov    edx,0x1
   14001a165:	xor    ecx,ecx
   14001a167:	jmp    0x14001a16e
   14001a169:	inc    rbx
   14001a16c:	inc    ecx
   14001a16e:	cmp    BYTE PTR [rbx],0x5c
   14001a171:	je     0x14001a169
   14001a173:	cmp    BYTE PTR [rbx],0x22
   14001a176:	jne    0x14001a1ae
   14001a178:	test   dl,cl
   14001a17a:	jne    0x14001a199
   14001a17c:	test   esi,esi
   14001a17e:	je     0x14001a18e
   14001a180:	lea    rax,[rbx+0x1]
   14001a184:	cmp    BYTE PTR [rax],0x22
   14001a187:	jne    0x14001a18e
   14001a189:	mov    rbx,rax
   14001a18c:	jmp    0x14001a199
   14001a18e:	xor    eax,eax
   14001a190:	xor    edx,edx
   14001a192:	test   esi,esi
   14001a194:	sete   al
   14001a197:	mov    esi,eax
   14001a199:	shr    ecx,1
   14001a19b:	jmp    0x14001a1ae
   14001a19d:	dec    ecx
   14001a19f:	test   rdi,rdi
   14001a1a2:	je     0x14001a1aa
   14001a1a4:	mov    BYTE PTR [rdi],0x5c
   14001a1a7:	inc    rdi
   14001a1aa:	inc    DWORD PTR [r13+0x0]
   14001a1ae:	test   ecx,ecx
   14001a1b0:	jne    0x14001a19d
   14001a1b2:	mov    al,BYTE PTR [rbx]
   14001a1b4:	test   al,al
   14001a1b6:	je     0x14001a207
   14001a1b8:	test   esi,esi
   14001a1ba:	jne    0x14001a1c4
   14001a1bc:	cmp    al,0x20
   14001a1be:	je     0x14001a207
   14001a1c0:	cmp    al,0x9
   14001a1c2:	je     0x14001a207
   14001a1c4:	test   edx,edx
   14001a1c6:	je     0x14001a1ff
   14001a1c8:	movsx  ecx,al
   14001a1cb:	call   0x140016e88
   14001a1d0:	test   rdi,rdi
   14001a1d3:	je     0x14001a1f0
   14001a1d5:	test   eax,eax
   14001a1d7:	je     0x14001a1e7
   14001a1d9:	mov    al,BYTE PTR [rbx]
   14001a1db:	inc    rbx
   14001a1de:	mov    BYTE PTR [rdi],al
   14001a1e0:	inc    rdi
   14001a1e3:	inc    DWORD PTR [r13+0x0]
   14001a1e7:	mov    al,BYTE PTR [rbx]
   14001a1e9:	mov    BYTE PTR [rdi],al
   14001a1eb:	inc    rdi
   14001a1ee:	jmp    0x14001a1fb
   14001a1f0:	test   eax,eax
   14001a1f2:	je     0x14001a1fb
   14001a1f4:	inc    rbx
   14001a1f7:	inc    DWORD PTR [r13+0x0]
   14001a1fb:	inc    DWORD PTR [r13+0x0]
   14001a1ff:	inc    rbx
   14001a202:	jmp    0x14001a160
   14001a207:	test   rdi,rdi
   14001a20a:	je     0x14001a212
   14001a20c:	mov    BYTE PTR [rdi],0x0
   14001a20f:	inc    rdi
   14001a212:	inc    DWORD PTR [r13+0x0]
   14001a216:	jmp    0x14001a12f
   14001a21b:	test   r12,r12
   14001a21e:	je     0x14001a225
   14001a220:	and    QWORD PTR [r12],0x0
   14001a225:	inc    DWORD PTR [r14]
   14001a228:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a22d:	mov    rbp,QWORD PTR [rsp+0x48]
   14001a232:	mov    rsi,QWORD PTR [rsp+0x50]
   14001a237:	mov    rdi,QWORD PTR [rsp+0x58]
   14001a23c:	add    rsp,0x20
   14001a240:	pop    r14
   14001a242:	pop    r13
   14001a244:	pop    r12
   14001a246:	ret    
   14001a247:	int3   
   14001a248:	mov    QWORD PTR [rsp+0x18],rbx
   14001a24d:	mov    QWORD PTR [rsp+0x20],rsi
   14001a252:	push   rdi
   14001a253:	sub    rsp,0x30
   14001a257:	cmp    DWORD PTR [rip+0x365fa],0x0        # 0x140050858
   14001a25e:	jne    0x14001a265
   14001a260:	call   0x140018128
   14001a265:	lea    rdi,[rip+0x34c14]        # 0x14004ee80
   14001a26c:	mov    r8d,0x104
   14001a272:	xor    ecx,ecx
   14001a274:	mov    rdx,rdi
   14001a277:	mov    BYTE PTR [rip+0x34d06],0x0        # 0x14004ef84
   14001a27e:	call   QWORD PTR [rip+0x1c25c]        # 0x1400364e0
   14001a284:	mov    rbx,QWORD PTR [rip+0x365dd]        # 0x140050868
   14001a28b:	mov    QWORD PTR [rip+0x342be],rdi        # 0x14004e550
   14001a292:	test   rbx,rbx
   14001a295:	je     0x14001a29c
   14001a297:	cmp    BYTE PTR [rbx],0x0
   14001a29a:	jne    0x14001a29f
   14001a29c:	mov    rbx,rdi
   14001a29f:	lea    rax,[rsp+0x48]
   14001a2a4:	lea    r9,[rsp+0x40]
   14001a2a9:	xor    r8d,r8d
   14001a2ac:	xor    edx,edx
   14001a2ae:	mov    rcx,rbx
   14001a2b1:	mov    QWORD PTR [rsp+0x20],rax
   14001a2b6:	call   0x14001a078
   14001a2bb:	movsxd rsi,DWORD PTR [rsp+0x40]
   14001a2c0:	movabs rcx,0x1fffffffffffffff
   14001a2ca:	cmp    rsi,rcx
   14001a2cd:	jae    0x14001a32b
   14001a2cf:	movsxd rcx,DWORD PTR [rsp+0x48]
   14001a2d4:	cmp    rcx,0xffffffffffffffff
   14001a2d8:	jae    0x14001a32b
   14001a2da:	lea    rdx,[rcx+rsi*8]
   14001a2de:	cmp    rdx,rcx
   14001a2e1:	jb     0x14001a32b
   14001a2e3:	mov    rcx,rdx
   14001a2e6:	call   0x14001c424
   14001a2eb:	mov    rdi,rax
   14001a2ee:	test   rax,rax
   14001a2f1:	je     0x14001a32b
   14001a2f3:	lea    r8,[rax+rsi*8]
   14001a2f7:	lea    rax,[rsp+0x48]
   14001a2fc:	lea    r9,[rsp+0x40]
   14001a301:	mov    rdx,rdi
   14001a304:	mov    rcx,rbx
   14001a307:	mov    QWORD PTR [rsp+0x20],rax
   14001a30c:	call   0x14001a078
   14001a311:	mov    r11d,DWORD PTR [rsp+0x40]
   14001a316:	mov    QWORD PTR [rip+0x34203],rdi        # 0x14004e520
   14001a31d:	dec    r11d
   14001a320:	xor    eax,eax
   14001a322:	mov    DWORD PTR [rip+0x341f3],r11d        # 0x14004e51c
   14001a329:	jmp    0x14001a32e
   14001a32b:	or     eax,0xffffffff
   14001a32e:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a333:	mov    rsi,QWORD PTR [rsp+0x58]
   14001a338:	add    rsp,0x30
   14001a33c:	pop    rdi
   14001a33d:	ret    
   14001a33e:	int3   
   14001a33f:	int3   
   14001a340:	mov    rax,rsp
   14001a343:	mov    QWORD PTR [rax+0x8],rbx
   14001a347:	mov    QWORD PTR [rax+0x10],rbp
   14001a34b:	mov    QWORD PTR [rax+0x18],rsi
   14001a34f:	mov    QWORD PTR [rax+0x20],rdi
   14001a353:	push   r12
   14001a355:	sub    rsp,0x40
   14001a359:	mov    ecx,DWORD PTR [rip+0x34c29]        # 0x14004ef88
   14001a35f:	xor    r12d,r12d
   14001a362:	mov    rbx,r12
   14001a365:	lea    esi,[r12+0x2]
   14001a36a:	cmp    ecx,r12d
   14001a36d:	jne    0x14001a3a1
   14001a36f:	call   QWORD PTR [rip+0x1be9b]        # 0x140036210
   14001a375:	mov    rbx,rax
   14001a378:	cmp    rax,r12
   14001a37b:	je     0x14001a389
   14001a37d:	mov    DWORD PTR [rip+0x34c01],0x1        # 0x14004ef88
   14001a387:	jmp    0x14001a3aa
   14001a389:	call   QWORD PTR [rip+0x1c0d1]        # 0x140036460
   14001a38f:	mov    ecx,DWORD PTR [rip+0x34bf3]        # 0x14004ef88
   14001a395:	cmp    eax,0x78
   14001a398:	cmove  ecx,esi
   14001a39b:	mov    DWORD PTR [rip+0x34be7],ecx        # 0x14004ef88
   14001a3a1:	cmp    ecx,0x1
   14001a3a4:	jne    0x14001a464
   14001a3aa:	cmp    rbx,r12
   14001a3ad:	jne    0x14001a3c4
   14001a3af:	call   QWORD PTR [rip+0x1be5b]        # 0x140036210
   14001a3b5:	mov    rbx,rax
   14001a3b8:	cmp    rax,r12
   14001a3bb:	jne    0x14001a3c4
   14001a3bd:	xor    eax,eax
   14001a3bf:	jmp    0x14001a4d7
   14001a3c4:	mov    rdi,rbx
   14001a3c7:	cmp    WORD PTR [rbx],r12w
   14001a3cb:	je     0x14001a3df
   14001a3cd:	add    rdi,rsi
   14001a3d0:	cmp    WORD PTR [rdi],r12w
   14001a3d4:	jne    0x14001a3cd
   14001a3d6:	add    rdi,rsi
   14001a3d9:	cmp    WORD PTR [rdi],r12w
   14001a3dd:	jne    0x14001a3cd
   14001a3df:	mov    QWORD PTR [rsp+0x38],r12
   14001a3e4:	mov    QWORD PTR [rsp+0x30],r12
   14001a3e9:	sub    rdi,rbx
   14001a3ec:	sar    rdi,1
   14001a3ef:	mov    r8,rbx
   14001a3f2:	xor    edx,edx
   14001a3f4:	lea    r9d,[rdi+0x1]
   14001a3f8:	xor    ecx,ecx
   14001a3fa:	mov    DWORD PTR [rsp+0x28],r12d
   14001a3ff:	mov    QWORD PTR [rsp+0x20],r12
   14001a404:	call   QWORD PTR [rip+0x1bfbe]        # 0x1400363c8
   14001a40a:	movsxd rbp,eax
   14001a40d:	cmp    ebp,r12d
   14001a410:	je     0x14001a453
   14001a412:	mov    rcx,rbp
   14001a415:	call   0x14001c424
   14001a41a:	mov    rsi,rax
   14001a41d:	cmp    rax,r12
   14001a420:	je     0x14001a453
   14001a422:	mov    QWORD PTR [rsp+0x38],r12
   14001a427:	mov    QWORD PTR [rsp+0x30],r12
   14001a42c:	lea    r9d,[rdi+0x1]
   14001a430:	mov    r8,rbx
   14001a433:	xor    edx,edx
   14001a435:	xor    ecx,ecx
   14001a437:	mov    DWORD PTR [rsp+0x28],ebp
   14001a43b:	mov    QWORD PTR [rsp+0x20],rax
   14001a440:	call   QWORD PTR [rip+0x1bf82]        # 0x1400363c8
   14001a446:	cmp    eax,r12d
   14001a449:	jne    0x14001a456
   14001a44b:	mov    rcx,rsi
   14001a44e:	call   0x140014f10
   14001a453:	mov    rsi,r12
   14001a456:	mov    rcx,rbx
   14001a459:	call   QWORD PTR [rip+0x1bda9]        # 0x140036208
   14001a45f:	mov    rax,rsi
   14001a462:	jmp    0x14001a4d7
   14001a464:	cmp    ecx,esi
   14001a466:	je     0x14001a471
   14001a468:	cmp    ecx,r12d
   14001a46b:	jne    0x14001a3bd
   14001a471:	call   QWORD PTR [rip+0x1bd89]        # 0x140036200
   14001a477:	mov    rbx,rax
   14001a47a:	cmp    rax,r12
   14001a47d:	je     0x14001a3bd
   14001a483:	cmp    BYTE PTR [rax],r12b
   14001a486:	je     0x14001a498
   14001a488:	inc    rax
   14001a48b:	cmp    BYTE PTR [rax],r12b
   14001a48e:	jne    0x14001a488
   14001a490:	inc    rax
   14001a493:	cmp    BYTE PTR [rax],r12b
   14001a496:	jne    0x14001a488
   14001a498:	sub    eax,ebx
   14001a49a:	inc    eax
   14001a49c:	movsxd rsi,eax
   14001a49f:	mov    rcx,rsi
   14001a4a2:	call   0x14001c424
   14001a4a7:	mov    rdi,rax
   14001a4aa:	cmp    rax,r12
   14001a4ad:	jne    0x14001a4bd
   14001a4af:	mov    rcx,rbx
   14001a4b2:	call   QWORD PTR [rip+0x1c030]        # 0x1400364e8
   14001a4b8:	jmp    0x14001a3bd
   14001a4bd:	mov    r8,rsi
   14001a4c0:	mov    rdx,rbx
   14001a4c3:	mov    rcx,rax
   14001a4c6:	call   0x1400160c0
   14001a4cb:	mov    rcx,rbx
   14001a4ce:	call   QWORD PTR [rip+0x1c014]        # 0x1400364e8
   14001a4d4:	mov    rax,rdi
   14001a4d7:	mov    rbx,QWORD PTR [rsp+0x50]
   14001a4dc:	mov    rbp,QWORD PTR [rsp+0x58]
   14001a4e1:	mov    rsi,QWORD PTR [rsp+0x60]
   14001a4e6:	mov    rdi,QWORD PTR [rsp+0x68]
   14001a4eb:	add    rsp,0x40
   14001a4ef:	pop    r12
   14001a4f1:	ret    
   14001a4f2:	int3   
   14001a4f3:	int3   
   14001a4f4:	mov    rax,rsp
   14001a4f7:	mov    QWORD PTR [rax+0x8],rbx
   14001a4fb:	mov    QWORD PTR [rax+0x10],rsi
   14001a4ff:	mov    QWORD PTR [rax+0x18],rdi
   14001a503:	mov    QWORD PTR [rax+0x20],r12
   14001a507:	push   r13
   14001a509:	push   r14
   14001a50b:	push   r15
   14001a50d:	sub    rsp,0x90
   14001a514:	lea    rcx,[rsp+0x20]
   14001a519:	call   QWORD PTR [rip+0x1bd09]        # 0x140036228
   14001a51f:	nop
   14001a520:	mov    edx,0x58
   14001a525:	lea    r12d,[rdx-0x38]
   14001a529:	mov    rcx,r12
   14001a52c:	call   0x14001c490
   14001a531:	mov    r11,rax
   14001a534:	xor    r15d,r15d
   14001a537:	cmp    rax,r15
   14001a53a:	jne    0x14001a544
   14001a53c:	or     eax,0xffffffff
   14001a53f:	jmp    0x14001a7bf
   14001a544:	mov    QWORD PTR [rip+0x360f5],rax        # 0x140050640
   14001a54b:	mov    ecx,r12d
   14001a54e:	mov    DWORD PTR [rip+0x360d0],ecx        # 0x140050624
   14001a554:	add    rax,0xb00
   14001a55a:	cmp    r11,rax
   14001a55d:	jae    0x14001a5a2
   14001a55f:	mov    BYTE PTR [r11+0x8],r15b
   14001a563:	or     QWORD PTR [r11],0xffffffffffffffff
   14001a567:	mov    BYTE PTR [r11+0x9],0xa
   14001a56c:	mov    DWORD PTR [r11+0xc],r15d
   14001a570:	mov    BYTE PTR [r11+0x38],r15b
   14001a574:	mov    BYTE PTR [r11+0x39],0xa
   14001a579:	mov    BYTE PTR [r11+0x3a],0xa
   14001a57e:	mov    DWORD PTR [r11+0x50],r15d
   14001a582:	mov    BYTE PTR [r11+0x4c],r15b
   14001a586:	add    r11,0x58
   14001a58a:	mov    rax,QWORD PTR [rip+0x360af]        # 0x140050640
   14001a591:	add    rax,0xb00
   14001a597:	cmp    r11,rax
   14001a59a:	jb     0x14001a55f
   14001a59c:	mov    ecx,DWORD PTR [rip+0x36082]        # 0x140050624
   14001a5a2:	cmp    WORD PTR [rsp+0x62],r15w
   14001a5a8:	je     0x14001a6f7
   14001a5ae:	mov    rax,QWORD PTR [rsp+0x68]
   14001a5b3:	cmp    rax,r15
   14001a5b6:	je     0x14001a6f7
   14001a5bc:	lea    r13,[rax+0x4]
   14001a5c0:	movsxd rsi,DWORD PTR [rax]
   14001a5c3:	add    rsi,r13
   14001a5c6:	mov    ebx,0x800
   14001a5cb:	cmp    DWORD PTR [rax],ebx
   14001a5cd:	cmovl  ebx,DWORD PTR [rax]
   14001a5d0:	mov    edi,0x1
   14001a5d5:	cmp    ecx,ebx
   14001a5d7:	jge    0x14001a66a
   14001a5dd:	lea    r14,[rip+0x3605c]        # 0x140050640
   14001a5e4:	mov    edx,0x58
   14001a5e9:	mov    rcx,r12
   14001a5ec:	call   0x14001c490
   14001a5f1:	mov    r11,rax
   14001a5f4:	cmp    rax,r15
   14001a5f7:	je     0x14001a662
   14001a5f9:	mov    QWORD PTR [r14+rdi*8],rax
   14001a5fd:	mov    eax,DWORD PTR [rip+0x36021]        # 0x140050624
   14001a603:	add    eax,r12d
   14001a606:	mov    DWORD PTR [rip+0x36018],eax        # 0x140050624
   14001a60c:	lea    rcx,[r11+0xb00]
   14001a613:	cmp    r11,rcx
   14001a616:	jae    0x14001a659
   14001a618:	mov    BYTE PTR [r11+0x8],r15b
   14001a61c:	or     QWORD PTR [r11],0xffffffffffffffff
   14001a620:	mov    BYTE PTR [r11+0x9],0xa
   14001a625:	mov    DWORD PTR [r11+0xc],r15d
   14001a629:	and    BYTE PTR [r11+0x38],0x80
   14001a62e:	mov    BYTE PTR [r11+0x39],0xa
   14001a633:	mov    BYTE PTR [r11+0x3a],0xa
   14001a638:	mov    DWORD PTR [r11+0x50],r15d
   14001a63c:	mov    BYTE PTR [r11+0x4c],r15b
   14001a640:	add    r11,0x58
   14001a644:	mov    rax,QWORD PTR [r14+rdi*8]
   14001a648:	add    rax,0xb00
   14001a64e:	cmp    r11,rax
   14001a651:	jb     0x14001a618
   14001a653:	mov    eax,DWORD PTR [rip+0x35fcb]        # 0x140050624
   14001a659:	inc    rdi
   14001a65c:	cmp    eax,ebx
   14001a65e:	jl     0x14001a5e4
   14001a660:	jmp    0x14001a671
   14001a662:	mov    ebx,DWORD PTR [rip+0x35fbc]        # 0x140050624
   14001a668:	jmp    0x14001a671
   14001a66a:	lea    r14,[rip+0x35fcf]        # 0x140050640
   14001a671:	mov    edi,r15d
   14001a674:	cmp    ebx,r15d
   14001a677:	jle    0x14001a6f7
   14001a679:	cmp    QWORD PTR [rsi],0xffffffffffffffff
   14001a67d:	je     0x14001a6ea
   14001a67f:	cmp    QWORD PTR [rsi],0xfffffffffffffffe
   14001a683:	je     0x14001a6ea
   14001a685:	test   BYTE PTR [r13+0x0],0x1
   14001a68a:	je     0x14001a6ea
   14001a68c:	test   BYTE PTR [r13+0x0],0x8
   14001a691:	jne    0x14001a6a1
   14001a693:	mov    rcx,QWORD PTR [rsi]
   14001a696:	call   QWORD PTR [rip+0x1bb84]        # 0x140036220
   14001a69c:	cmp    eax,r15d
   14001a69f:	je     0x14001a6ea
   14001a6a1:	movsxd r12,edi
   14001a6a4:	mov    rax,r12
   14001a6a7:	sar    rax,0x5
   14001a6ab:	and    r12d,0x1f
   14001a6af:	imul   r12,r12,0x58
   14001a6b3:	add    r12,QWORD PTR [r14+rax*8]
   14001a6b7:	mov    rax,QWORD PTR [rsi]
   14001a6ba:	mov    QWORD PTR [r12],rax
   14001a6be:	mov    al,BYTE PTR [r13+0x0]
   14001a6c2:	mov    BYTE PTR [r12+0x8],al
   14001a6c7:	lea    rcx,[r12+0x10]
   14001a6cc:	mov    edx,0xfa0
   14001a6d1:	call   0x140020a38
   14001a6d6:	cmp    eax,r15d
   14001a6d9:	je     0x14001a6e2
   14001a6db:	inc    DWORD PTR [r12+0xc]
   14001a6e0:	jmp    0x14001a6ea
   14001a6e2:	or     eax,0xffffffff
   14001a6e5:	jmp    0x14001a7bf
   14001a6ea:	inc    edi
   14001a6ec:	inc    r13
   14001a6ef:	add    rsi,0x8
   14001a6f3:	cmp    edi,ebx
   14001a6f5:	jl     0x14001a679
   14001a6f7:	mov    r12d,r15d
   14001a6fa:	mov    rdi,r15
   14001a6fd:	mov    rbx,rdi
   14001a700:	imul   rbx,rbx,0x58
   14001a704:	add    rbx,QWORD PTR [rip+0x35f35]        # 0x140050640
   14001a70b:	cmp    QWORD PTR [rbx],0xffffffffffffffff
   14001a70f:	je     0x14001a71d
   14001a711:	cmp    QWORD PTR [rbx],0xfffffffffffffffe
   14001a715:	je     0x14001a71d
   14001a717:	or     BYTE PTR [rbx+0x8],0x80
   14001a71b:	jmp    0x14001a79c
   14001a71d:	mov    BYTE PTR [rbx+0x8],0x81
   14001a721:	lea    eax,[r12-0x1]
   14001a726:	neg    eax
   14001a728:	sbb    ecx,ecx
   14001a72a:	add    ecx,0xfffffff5
   14001a72d:	mov    eax,0xfffffff6
   14001a732:	cmp    r12d,r15d
   14001a735:	cmove  ecx,eax
   14001a738:	call   QWORD PTR [rip+0x1bab2]        # 0x1400361f0
   14001a73e:	mov    rsi,rax
   14001a741:	cmp    rax,0xffffffffffffffff
   14001a745:	je     0x14001a791
   14001a747:	cmp    rax,r15
   14001a74a:	je     0x14001a791
   14001a74c:	mov    rcx,rax
   14001a74f:	call   QWORD PTR [rip+0x1bacb]        # 0x140036220
   14001a755:	cmp    eax,r15d
   14001a758:	je     0x14001a791
   14001a75a:	mov    QWORD PTR [rbx],rsi
   14001a75d:	movzx  eax,al
   14001a760:	cmp    eax,0x2
   14001a763:	jne    0x14001a76b
   14001a765:	or     BYTE PTR [rbx+0x8],0x40
   14001a769:	jmp    0x14001a774
   14001a76b:	cmp    eax,0x3
   14001a76e:	jne    0x14001a774
   14001a770:	or     BYTE PTR [rbx+0x8],0x8
   14001a774:	lea    rcx,[rbx+0x10]
   14001a778:	mov    edx,0xfa0
   14001a77d:	call   0x140020a38
   14001a782:	cmp    eax,r15d
   14001a785:	je     0x14001a78c
   14001a787:	inc    DWORD PTR [rbx+0xc]
   14001a78a:	jmp    0x14001a79c
   14001a78c:	or     eax,0xffffffff
   14001a78f:	jmp    0x14001a7bf
   14001a791:	or     BYTE PTR [rbx+0x8],0x40
   14001a795:	mov    QWORD PTR [rbx],0xfffffffffffffffe
   14001a79c:	inc    r12d
   14001a79f:	inc    rdi
   14001a7a2:	cmp    rdi,0x3
   14001a7a6:	jl     0x14001a6fd
   14001a7ac:	mov    ecx,DWORD PTR [rip+0x35e72]        # 0x140050624
   14001a7b2:	call   QWORD PTR [rip+0x1ba60]        # 0x140036218
   14001a7b8:	xor    eax,eax
   14001a7ba:	jmp    0x14001a7bf
   14001a7bc:	or     eax,0xffffffff
   14001a7bf:	lea    r11,[rsp+0x90]
   14001a7c7:	mov    rbx,QWORD PTR [r11+0x20]
   14001a7cb:	mov    rsi,QWORD PTR [r11+0x28]
   14001a7cf:	mov    rdi,QWORD PTR [r11+0x30]
   14001a7d3:	mov    r12,QWORD PTR [r11+0x38]
   14001a7d7:	mov    rsp,r11
   14001a7da:	pop    r15
   14001a7dc:	pop    r14
   14001a7de:	pop    r13
   14001a7e0:	ret    
   14001a7e1:	int3   
   14001a7e2:	int3   
   14001a7e3:	int3   
   14001a7e4:	mov    QWORD PTR [rsp+0x8],rbx
   14001a7e9:	push   rdi
   14001a7ea:	sub    rsp,0x20
   14001a7ee:	lea    rbx,[rip+0x25e23]        # 0x140040618
   14001a7f5:	lea    rdi,[rip+0x25e1c]        # 0x140040618
   14001a7fc:	jmp    0x14001a80c
   14001a7fe:	mov    rax,QWORD PTR [rbx]
   14001a801:	test   rax,rax
   14001a804:	je     0x14001a808
   14001a806:	call   rax
   14001a808:	add    rbx,0x8
   14001a80c:	cmp    rbx,rdi
   14001a80f:	jb     0x14001a7fe
   14001a811:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a816:	add    rsp,0x20
   14001a81a:	pop    rdi
   14001a81b:	ret    
   14001a81c:	mov    QWORD PTR [rsp+0x8],rbx
   14001a821:	push   rdi
   14001a822:	sub    rsp,0x20
   14001a826:	lea    rbx,[rip+0x25dfb]        # 0x140040628
   14001a82d:	lea    rdi,[rip+0x25df4]        # 0x140040628
   14001a834:	jmp    0x14001a844
   14001a836:	mov    rax,QWORD PTR [rbx]
   14001a839:	test   rax,rax
   14001a83c:	je     0x14001a840
   14001a83e:	call   rax
   14001a840:	add    rbx,0x8
   14001a844:	cmp    rbx,rdi
   14001a847:	jb     0x14001a836
   14001a849:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a84e:	add    rsp,0x20
   14001a852:	pop    rdi
   14001a853:	ret    
   14001a854:	mov    QWORD PTR [rsp+0x18],rbx
   14001a859:	push   rdi
   14001a85a:	sub    rsp,0x20
   14001a85e:	mov    rax,QWORD PTR [rip+0x2e55b]        # 0x140048dc0
   14001a865:	and    QWORD PTR [rsp+0x30],0x0
   14001a86b:	movabs rdi,0x2b992ddfa232
   14001a875:	cmp    rax,rdi
   14001a878:	je     0x14001a886
   14001a87a:	not    rax
   14001a87d:	mov    QWORD PTR [rip+0x2e544],rax        # 0x140048dc8
   14001a884:	jmp    0x14001a8fc
   14001a886:	lea    rcx,[rsp+0x30]
   14001a88b:	call   QWORD PTR [rip+0x1b9af]        # 0x140036240
   14001a891:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a896:	call   QWORD PTR [rip+0x1bb24]        # 0x1400363c0
   14001a89c:	mov    r11d,eax
   14001a89f:	xor    rbx,r11
   14001a8a2:	call   QWORD PTR [rip+0x1baf0]        # 0x140036398
   14001a8a8:	mov    r11d,eax
   14001a8ab:	xor    rbx,r11
   14001a8ae:	call   QWORD PTR [rip+0x1b984]        # 0x140036238
   14001a8b4:	lea    rcx,[rsp+0x38]
   14001a8b9:	mov    r11d,eax
   14001a8bc:	xor    rbx,r11
   14001a8bf:	call   QWORD PTR [rip+0x1b96b]        # 0x140036230
   14001a8c5:	mov    r11,QWORD PTR [rsp+0x38]
   14001a8ca:	xor    r11,rbx
   14001a8cd:	movabs rax,0xffffffffffff
   14001a8d7:	and    r11,rax
   14001a8da:	movabs rax,0x2b992ddfa233
   14001a8e4:	cmp    r11,rdi
   14001a8e7:	cmove  r11,rax
   14001a8eb:	mov    QWORD PTR [rip+0x2e4ce],r11        # 0x140048dc0
   14001a8f2:	not    r11
   14001a8f5:	mov    QWORD PTR [rip+0x2e4cc],r11        # 0x140048dc8
   14001a8fc:	mov    rbx,QWORD PTR [rsp+0x40]
   14001a901:	add    rsp,0x20
   14001a905:	pop    rdi
   14001a906:	ret    
   14001a907:	int3   
   14001a908:	mov    QWORD PTR [rsp+0x8],rbx
   14001a90d:	mov    QWORD PTR [rsp+0x10],rbp
   14001a912:	mov    QWORD PTR [rsp+0x18],rsi
   14001a917:	push   rdi
   14001a918:	sub    rsp,0x20
   14001a91c:	mov    rbp,r8
   14001a91f:	mov    rsi,rdx
   14001a922:	mov    rbx,rcx
   14001a925:	test   rcx,rcx
   14001a928:	jne    0x14001a92f
   14001a92a:	call   0x14001beb0
   14001a92f:	movsxd rax,DWORD PTR [rbx+0x18]
   14001a933:	mov    edi,DWORD PTR [rbx+0x14]
   14001a936:	add    rax,QWORD PTR [rsi+0x8]
   14001a93a:	jne    0x14001a941
   14001a93c:	call   0x14001beb0
   14001a941:	xor    ecx,ecx
   14001a943:	test   edi,edi
   14001a945:	je     0x14001a97a
   14001a947:	mov    r9,QWORD PTR [rsi+0x8]
   14001a94b:	movsxd r8,DWORD PTR [rbx+0x18]
   14001a94f:	lea    rdx,[r9+r8*1]
   14001a953:	movsxd rax,DWORD PTR [rdx]
   14001a956:	add    rax,r9
   14001a959:	cmp    rbp,rax
   14001a95c:	jl     0x14001a968
   14001a95e:	inc    ecx
   14001a960:	add    rdx,0x8
   14001a964:	cmp    ecx,edi
   14001a966:	jb     0x14001a953
   14001a968:	test   ecx,ecx
   14001a96a:	je     0x14001a97a
   14001a96c:	lea    eax,[rcx-0x1]
   14001a96f:	lea    rdx,[r8+rax*8]
   14001a973:	mov    eax,DWORD PTR [rdx+r9*1+0x4]
   14001a978:	jmp    0x14001a97d
   14001a97a:	or     eax,0xffffffff
   14001a97d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001a982:	mov    rbp,QWORD PTR [rsp+0x38]
   14001a987:	mov    rsi,QWORD PTR [rsp+0x40]
   14001a98c:	add    rsp,0x20
   14001a990:	pop    rdi
   14001a991:	ret    
   14001a992:	int3   
   14001a993:	int3   
   14001a994:	mov    r8,QWORD PTR [rdx]
   14001a997:	jmp    0x14001a908
   14001a99c:	sub    rsp,0x28
   14001a9a0:	movsxd r9,DWORD PTR [r8+0x1c]
   14001a9a4:	mov    rax,QWORD PTR [rcx]
   14001a9a7:	mov    r10,r8
   14001a9aa:	mov    eax,DWORD PTR [r9+rax*1]
   14001a9ae:	cmp    eax,0xfffffffe
   14001a9b1:	jne    0x14001a9be
   14001a9b3:	mov    r8,QWORD PTR [rdx]
   14001a9b6:	mov    rcx,r10
   14001a9b9:	call   0x14001a908
   14001a9be:	add    rsp,0x28
   14001a9c2:	ret    
   14001a9c3:	int3   
   14001a9c4:	movsxd rdx,DWORD PTR [r8+0x1c]
   14001a9c8:	mov    rax,QWORD PTR [rcx]
   14001a9cb:	mov    DWORD PTR [rdx+rax*1],r9d
   14001a9cf:	ret    
   14001a9d0:	mov    QWORD PTR [rsp+0x8],rbx
   14001a9d5:	push   rdi
   14001a9d6:	sub    rsp,0x20
   14001a9da:	mov    edi,r9d
   14001a9dd:	lea    r9,[rsp+0x40]
   14001a9e2:	mov    rbx,r8
   14001a9e5:	call   0x1400151b4
   14001a9ea:	mov    rcx,QWORD PTR [rax]
   14001a9ed:	movsxd rax,DWORD PTR [rbx+0x1c]
   14001a9f1:	mov    QWORD PTR [rsp+0x40],rcx
   14001a9f6:	cmp    edi,DWORD PTR [rax+rcx*1+0x4]
   14001a9fa:	jle    0x14001aa00
   14001a9fc:	mov    DWORD PTR [rax+rcx*1+0x4],edi
   14001aa00:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aa05:	add    rsp,0x20
   14001aa09:	pop    rdi
   14001aa0a:	ret    
   14001aa0b:	int3   
   14001aa0c:	rex push rbx
   14001aa0e:	sub    rsp,0x20
   14001aa12:	lea    r9,[rsp+0x40]
   14001aa17:	mov    rbx,r8
   14001aa1a:	call   0x1400151b4
   14001aa1f:	mov    rcx,QWORD PTR [rax]
   14001aa22:	movsxd rax,DWORD PTR [rbx+0x1c]
   14001aa26:	mov    QWORD PTR [rsp+0x40],rcx
   14001aa2b:	mov    eax,DWORD PTR [rax+rcx*1+0x4]
   14001aa2f:	add    rsp,0x20
   14001aa33:	pop    rbx
   14001aa34:	ret    
   14001aa35:	int3   
   14001aa36:	int3   
   14001aa37:	int3   
   14001aa38:	lea    rax,[rip+0x1f381]        # 0x140039dc0
   14001aa3f:	mov    QWORD PTR [rcx],rax
   14001aa42:	jmp    0x140014718
   14001aa47:	int3   
   14001aa48:	mov    QWORD PTR [rsp+0x8],rbx
   14001aa4d:	push   rdi
   14001aa4e:	sub    rsp,0x20
   14001aa52:	lea    rax,[rip+0x1f367]        # 0x140039dc0
   14001aa59:	mov    ebx,edx
   14001aa5b:	mov    rdi,rcx
   14001aa5e:	mov    QWORD PTR [rcx],rax
   14001aa61:	call   0x140014718
   14001aa66:	test   bl,0x1
   14001aa69:	je     0x14001aa73
   14001aa6b:	mov    rcx,rdi
   14001aa6e:	call   0x1400062d4
   14001aa73:	mov    rax,rdi
   14001aa76:	mov    rbx,QWORD PTR [rsp+0x30]
   14001aa7b:	add    rsp,0x20
   14001aa7f:	pop    rdi
   14001aa80:	ret    
   14001aa81:	int3   
   14001aa82:	int3   
   14001aa83:	int3   
   14001aa84:	mov    rax,rsp
   14001aa87:	mov    QWORD PTR [rax+0x8],rbx
   14001aa8b:	mov    QWORD PTR [rax+0x10],rbp
   14001aa8f:	mov    QWORD PTR [rax+0x18],rsi
   14001aa93:	mov    QWORD PTR [rax+0x20],rdi
   14001aa97:	push   r12
   14001aa99:	sub    rsp,0x20
   14001aa9d:	mov    esi,DWORD PTR [rcx+0x4]
   14001aaa0:	xor    ebx,ebx
   14001aaa2:	mov    r12,r8
   14001aaa5:	mov    rbp,rdx
   14001aaa8:	mov    rdi,rcx
   14001aaab:	cmp    esi,ebx
   14001aaad:	je     0x14001aabd
   14001aaaf:	movsxd rsi,esi
   14001aab2:	call   0x1400152a0
   14001aab7:	lea    r11,[rsi+rax*1]
   14001aabb:	jmp    0x14001aac0
   14001aabd:	mov    r11,rbx
   14001aac0:	cmp    r11,rbx
   14001aac3:	je     0x14001ab87
   14001aac9:	cmp    esi,ebx
   14001aacb:	je     0x14001aadc
   14001aacd:	movsxd rsi,DWORD PTR [rdi+0x4]
   14001aad1:	call   0x1400152a0
   14001aad6:	lea    r11,[rsi+rax*1]
   14001aada:	jmp    0x14001aadf
   14001aadc:	mov    r11,rbx
   14001aadf:	cmp    BYTE PTR [r11+0x10],bl
   14001aae3:	je     0x14001ab87
   14001aae9:	cmp    esi,ebx
   14001aaeb:	je     0x14001aafe
   14001aaed:	call   0x1400152a0
   14001aaf2:	mov    rsi,rax
   14001aaf5:	movsxd rax,DWORD PTR [rdi+0x4]
   14001aaf9:	add    rsi,rax
   14001aafc:	jmp    0x14001ab01
   14001aafe:	mov    rsi,rbx
   14001ab01:	call   0x1400152b8
   14001ab06:	mov    r11,rax
   14001ab09:	movsxd rax,DWORD PTR [rbp+0x4]
   14001ab0d:	add    r11,rax
   14001ab10:	cmp    rsi,r11
   14001ab13:	je     0x14001ab50
   14001ab15:	cmp    DWORD PTR [rdi+0x4],ebx
   14001ab18:	je     0x14001ab2b
   14001ab1a:	call   0x1400152a0
   14001ab1f:	mov    rsi,rax
   14001ab22:	movsxd rax,DWORD PTR [rdi+0x4]
   14001ab26:	add    rsi,rax
   14001ab29:	jmp    0x14001ab2e
   14001ab2b:	mov    rsi,rbx
   14001ab2e:	call   0x1400152b8
   14001ab33:	lea    rcx,[rsi+0x10]
   14001ab37:	mov    r11,rax
   14001ab3a:	movsxd rax,DWORD PTR [rbp+0x4]
   14001ab3e:	lea    rdx,[r11+rax*1+0x10]
   14001ab43:	call   0x1400174e0
   14001ab48:	cmp    eax,ebx
   14001ab4a:	je     0x14001ab50
   14001ab4c:	xor    eax,eax
   14001ab4e:	jmp    0x14001ab8c
   14001ab50:	mov    al,0x2
   14001ab52:	test   BYTE PTR [rbp+0x0],al
   14001ab55:	je     0x14001ab5c
   14001ab57:	test   BYTE PTR [rdi],0x8
   14001ab5a:	je     0x14001ab83
   14001ab5c:	test   BYTE PTR [r12],0x1
   14001ab61:	je     0x14001ab68
   14001ab63:	test   BYTE PTR [rdi],0x1
   14001ab66:	je     0x14001ab83
   14001ab68:	test   BYTE PTR [r12],0x4
   14001ab6d:	je     0x14001ab74
   14001ab6f:	test   BYTE PTR [rdi],0x4
   14001ab72:	je     0x14001ab83
   14001ab74:	test   BYTE PTR [r12],al
   14001ab78:	je     0x14001ab7e
   14001ab7a:	test   BYTE PTR [rdi],al
   14001ab7c:	je     0x14001ab83
   14001ab7e:	mov    ebx,0x1
   14001ab83:	mov    eax,ebx
   14001ab85:	jmp    0x14001ab8c
   14001ab87:	mov    eax,0x1
   14001ab8c:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ab91:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ab96:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ab9b:	mov    rdi,QWORD PTR [rsp+0x48]
   14001aba0:	add    rsp,0x20
   14001aba4:	pop    r12
   14001aba6:	ret    
   14001aba7:	int3   
   14001aba8:	sub    rsp,0x28
   14001abac:	mov    rax,QWORD PTR [rcx]
   14001abaf:	cmp    DWORD PTR [rax],0xe0434f4d
   14001abb5:	je     0x14001abd1
   14001abb7:	cmp    DWORD PTR [rax],0xe06d7363
   14001abbd:	jne    0x14001abea
   14001abbf:	call   0x140017714
   14001abc4:	and    DWORD PTR [rax+0x100],0x0
   14001abcb:	call   0x14001be8c
   14001abd0:	int3   
   14001abd1:	call   0x140017714
   14001abd6:	cmp    DWORD PTR [rax+0x100],0x0
   14001abdd:	jle    0x14001abea
   14001abdf:	call   0x140017714
   14001abe4:	dec    DWORD PTR [rax+0x100]
   14001abea:	xor    eax,eax
   14001abec:	add    rsp,0x28
   14001abf0:	ret    
   14001abf1:	int3   
   14001abf2:	int3   
   14001abf3:	int3   
   14001abf4:	mov    rax,rsp
   14001abf7:	mov    DWORD PTR [rax+0x20],r9d
   14001abfb:	mov    QWORD PTR [rax+0x18],r8
   14001abff:	mov    QWORD PTR [rax+0x10],rdx
   14001ac03:	mov    QWORD PTR [rax+0x8],rcx
   14001ac07:	push   rbx
   14001ac08:	push   rsi
   14001ac09:	push   rdi
   14001ac0a:	push   r12
   14001ac0c:	push   r13
   14001ac0e:	push   r14
   14001ac10:	push   r15
   14001ac12:	sub    rsp,0x30
   14001ac16:	mov    r13d,r9d
   14001ac19:	mov    rsi,r8
   14001ac1c:	mov    rbx,rdx
   14001ac1f:	mov    r14,rcx
   14001ac22:	call   0x14001a99c
   14001ac27:	mov    edi,eax
   14001ac29:	call   0x1400152a0
   14001ac2e:	mov    r15,rax
   14001ac31:	mov    QWORD PTR [rsp+0x28],rax
   14001ac36:	call   0x140017714
   14001ac3b:	inc    DWORD PTR [rax+0x100]
   14001ac41:	cmp    edi,0xffffffff
   14001ac44:	je     0x14001ad3f
   14001ac4a:	cmp    edi,r13d
   14001ac4d:	jle    0x14001ad3f
   14001ac53:	cmp    edi,0xffffffff
   14001ac56:	jle    0x14001ac5d
   14001ac58:	cmp    edi,DWORD PTR [rsi+0x4]
   14001ac5b:	jl     0x14001ac62
   14001ac5d:	call   0x14001beb0
   14001ac62:	movsxd r12,edi
   14001ac65:	call   0x1400152a0
   14001ac6a:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001ac6e:	lea    rax,[rax+r12*8]
   14001ac72:	mov    edi,DWORD PTR [rcx+rax*1]
   14001ac75:	mov    DWORD PTR [rsp+0x20],edi
   14001ac79:	call   0x1400152a0
   14001ac7e:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001ac82:	lea    rax,[rax+r12*8]
   14001ac86:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14001ac8b:	je     0x14001acae
   14001ac8d:	call   0x1400152a0
   14001ac92:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001ac96:	lea    rax,[rax+r12*8]
   14001ac9a:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14001ac9f:	call   0x1400152a0
   14001aca4:	add    rax,rbx
   14001aca7:	mov    rbx,QWORD PTR [rsp+0x78]
   14001acac:	jmp    0x14001acb0
   14001acae:	xor    eax,eax
   14001acb0:	test   rax,rax
   14001acb3:	je     0x14001ad11
   14001acb5:	mov    r9d,edi
   14001acb8:	mov    r8,rsi
   14001acbb:	mov    rdx,rbx
   14001acbe:	mov    rcx,r14
   14001acc1:	call   0x14001a9c4
   14001acc6:	call   0x1400152a0
   14001accb:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001accf:	lea    rax,[rax+r12*8]
   14001acd3:	cmp    DWORD PTR [rcx+rax*1+0x4],0x0
   14001acd8:	je     0x14001acf6
   14001acda:	call   0x1400152a0
   14001acdf:	movsxd rcx,DWORD PTR [rsi+0x8]
   14001ace3:	lea    rax,[rax+r12*8]
   14001ace7:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14001acec:	call   0x1400152a0
   14001acf1:	add    rax,rbx
   14001acf4:	jmp    0x14001acf8
   14001acf6:	xor    eax,eax
   14001acf8:	mov    r8d,0x103
   14001acfe:	mov    rdx,r14
   14001ad01:	mov    rcx,rax
   14001ad04:	call   0x140032a40
   14001ad09:	mov    rcx,r15
   14001ad0c:	call   0x1400152d0
   14001ad11:	jmp    0x14001ad31
   14001ad13:	mov    r13d,DWORD PTR [rsp+0x88]
   14001ad1b:	mov    rsi,QWORD PTR [rsp+0x80]
   14001ad23:	mov    r14,QWORD PTR [rsp+0x70]
   14001ad28:	mov    r15,QWORD PTR [rsp+0x28]
   14001ad2d:	mov    edi,DWORD PTR [rsp+0x20]
   14001ad31:	mov    DWORD PTR [rsp+0x24],edi
   14001ad35:	mov    rbx,QWORD PTR [rsp+0x78]
   14001ad3a:	jmp    0x14001ac41
   14001ad3f:	call   0x140017714
   14001ad44:	cmp    DWORD PTR [rax+0x100],0x0
   14001ad4b:	jle    0x14001ad58
   14001ad4d:	call   0x140017714
   14001ad52:	dec    DWORD PTR [rax+0x100]
   14001ad58:	cmp    edi,0xffffffff
   14001ad5b:	je     0x14001ad67
   14001ad5d:	cmp    edi,r13d
   14001ad60:	jle    0x14001ad67
   14001ad62:	call   0x14001beb0
   14001ad67:	mov    r9d,edi
   14001ad6a:	mov    r8,rsi
   14001ad6d:	mov    rdx,rbx
   14001ad70:	mov    rcx,r14
   14001ad73:	call   0x14001a9c4
   14001ad78:	add    rsp,0x30
   14001ad7c:	pop    r15
   14001ad7e:	pop    r14
   14001ad80:	pop    r13
   14001ad82:	pop    r12
   14001ad84:	pop    rdi
   14001ad85:	pop    rsi
   14001ad86:	pop    rbx
   14001ad87:	ret    
   14001ad88:	mov    BYTE PTR [rsp+0x10],dl
   14001ad8c:	sub    rsp,0x28
   14001ad90:	xor    eax,eax
   14001ad92:	cmp    rcx,rax
   14001ad95:	je     0x14001adc6
   14001ad97:	cmp    DWORD PTR [rcx],0xe06d7363
   14001ad9d:	jne    0x14001adc6
   14001ad9f:	mov    rdx,QWORD PTR [rcx+0x30]
   14001ada3:	cmp    rdx,rax
   14001ada6:	je     0x14001adc6
   14001ada8:	cmp    DWORD PTR [rdx+0x4],eax
   14001adab:	je     0x14001adc6
   14001adad:	movsxd rax,DWORD PTR [rdx+0x4]
   14001adb1:	mov    rdx,QWORD PTR [rcx+0x38]
   14001adb5:	add    rdx,rax
   14001adb8:	mov    rcx,QWORD PTR [rcx+0x28]
   14001adbc:	call   rdx
   14001adbe:	jmp    0x14001adc6
   14001adc0:	call   0x14001be8c
   14001adc5:	nop
   14001adc6:	add    rsp,0x28
   14001adca:	ret    
   14001adcb:	int3   
   14001adcc:	movsxd rax,DWORD PTR [rdx]
   14001adcf:	add    rax,rcx
   14001add2:	cmp    DWORD PTR [rdx+0x4],0x0
   14001add6:	jl     0x14001adee
   14001add8:	movsxd r9,DWORD PTR [rdx+0x4]
   14001addc:	movsxd rdx,DWORD PTR [rdx+0x8]
   14001ade0:	mov    rcx,QWORD PTR [r9+rcx*1]
   14001ade4:	movsxd r8,DWORD PTR [rdx+rcx*1]
   14001ade8:	add    r8,r9
   14001adeb:	add    rax,r8
   14001adee:	ret    
   14001adef:	int3   
   14001adf0:	mov    QWORD PTR [rsp+0x8],rbx
   14001adf5:	mov    QWORD PTR [rsp+0x10],rbp
   14001adfa:	mov    QWORD PTR [rsp+0x18],rsi
   14001adff:	push   rdi
   14001ae00:	push   r12
   14001ae02:	push   r13
   14001ae04:	push   r14
   14001ae06:	push   r15
   14001ae08:	sub    rsp,0x20
   14001ae0c:	mov    rsi,rdx
   14001ae0f:	mov    r14,rcx
   14001ae12:	test   rdx,rdx
   14001ae15:	jne    0x14001ae22
   14001ae17:	call   0x14001beb0
   14001ae1c:	call   0x14001be8c
   14001ae21:	int3   
   14001ae22:	xor    edi,edi
   14001ae24:	xor    r12b,r12b
   14001ae27:	cmp    DWORD PTR [rdx],edi
   14001ae29:	jle    0x14001aea3
   14001ae2b:	call   0x1400152b8
   14001ae30:	mov    r11,rax
   14001ae33:	mov    rax,QWORD PTR [r14+0x30]
   14001ae37:	movsxd rcx,DWORD PTR [rax+0xc]
   14001ae3b:	lea    r13,[r11+rcx*1+0x4]
   14001ae40:	call   0x1400152b8
   14001ae45:	mov    r11,rax
   14001ae48:	mov    rax,QWORD PTR [r14+0x30]
   14001ae4c:	movsxd rcx,DWORD PTR [rax+0xc]
   14001ae50:	mov    ebp,DWORD PTR [r11+rcx*1]
   14001ae54:	test   ebp,ebp
   14001ae56:	jle    0x14001ae9d
   14001ae58:	movsxd rax,edi
   14001ae5b:	lea    r15,[rax+rax*4]
   14001ae5f:	call   0x1400152b8
   14001ae64:	mov    rbx,rax
   14001ae67:	movsxd rax,DWORD PTR [r13+0x0]
   14001ae6b:	add    rbx,rax
   14001ae6e:	call   0x1400152a0
   14001ae73:	movsxd rcx,DWORD PTR [rsi+0x4]
   14001ae77:	mov    r8,QWORD PTR [r14+0x30]
   14001ae7b:	lea    rax,[rax+r15*4]
   14001ae7f:	mov    rdx,rbx
   14001ae82:	add    rcx,rax
   14001ae85:	call   0x14001aa84
   14001ae8a:	test   eax,eax
   14001ae8c:	jne    0x14001ae9a
   14001ae8e:	dec    ebp
   14001ae90:	add    r13,0x4
   14001ae94:	test   ebp,ebp
   14001ae96:	jg     0x14001ae5f
   14001ae98:	jmp    0x14001ae9d
   14001ae9a:	mov    r12b,0x1
   14001ae9d:	inc    edi
   14001ae9f:	cmp    edi,DWORD PTR [rsi]
   14001aea1:	jl     0x14001ae2b
   14001aea3:	mov    rbx,QWORD PTR [rsp+0x50]
   14001aea8:	mov    rbp,QWORD PTR [rsp+0x58]
   14001aead:	mov    rsi,QWORD PTR [rsp+0x60]
   14001aeb2:	mov    al,r12b
   14001aeb5:	add    rsp,0x20
   14001aeb9:	pop    r15
   14001aebb:	pop    r14
   14001aebd:	pop    r13
   14001aebf:	pop    r12
   14001aec1:	pop    rdi
   14001aec2:	ret    
   14001aec3:	int3   
   14001aec4:	rex push rbx
   14001aec6:	push   rdi
   14001aec7:	push   r12
   14001aec9:	push   r13
   14001aecb:	push   r14
   14001aecd:	push   r15
   14001aecf:	sub    rsp,0x98
   14001aed6:	mov    rdi,rcx
   14001aed9:	xor    r14d,r14d
   14001aedc:	mov    DWORD PTR [rsp+0x20],r14d
   14001aee1:	and    DWORD PTR [rsp+0xd0],r14d
   14001aee9:	and    QWORD PTR [rsp+0x48],r14
   14001aeee:	and    QWORD PTR [rsp+0x40],r14
   14001aef3:	call   0x140017714
   14001aef8:	mov    rax,QWORD PTR [rax+0xf8]
   14001aeff:	mov    QWORD PTR [rsp+0xe8],rax
   14001af07:	call   0x140017714
   14001af0c:	mov    rax,QWORD PTR [rax+0xf0]
   14001af13:	mov    QWORD PTR [rsp+0xe0],rax
   14001af1b:	mov    r12,QWORD PTR [rdi+0x50]
   14001af1f:	mov    QWORD PTR [rsp+0xd8],r12
   14001af27:	mov    rax,QWORD PTR [rdi+0x48]
   14001af2b:	mov    QWORD PTR [rsp+0x38],rax
   14001af30:	mov    rbx,QWORD PTR [rdi+0x40]
   14001af34:	mov    rax,QWORD PTR [rdi+0x30]
   14001af38:	mov    QWORD PTR [rsp+0x58],rax
   14001af3d:	mov    r13,QWORD PTR [rdi+0x28]
   14001af41:	mov    QWORD PTR [rsp+0x60],r13
   14001af46:	call   0x140017714
   14001af4b:	mov    QWORD PTR [rax+0xf0],r12
   14001af52:	call   0x140017714
   14001af57:	mov    QWORD PTR [rax+0xf8],rbx
   14001af5e:	call   0x140017714
   14001af63:	mov    rdx,QWORD PTR [rax+0xf0]
   14001af6a:	mov    rdx,QWORD PTR [rdx+0x28]
   14001af6e:	lea    rcx,[rsp+0x78]
   14001af73:	call   0x14001565c
   14001af78:	mov    r15,rax
   14001af7b:	mov    QWORD PTR [rsp+0x50],rax
   14001af80:	cmp    QWORD PTR [rdi+0x58],r14
   14001af84:	je     0x14001afae
   14001af86:	mov    DWORD PTR [rsp+0xd0],0x1
   14001af91:	call   0x140017714
   14001af96:	mov    rbx,QWORD PTR [rax+0x138]
   14001af9d:	mov    QWORD PTR [rsp+0x40],rbx
   14001afa2:	call   0x140017714
   14001afa7:	mov    QWORD PTR [rax+0xf0],rbx
   14001afae:	mov    r8d,0x100
   14001afb4:	mov    rdx,r13
   14001afb7:	mov    rcx,QWORD PTR [rsp+0x58]
   14001afbc:	call   0x140032a40
   14001afc1:	mov    rbx,rax
   14001afc4:	mov    QWORD PTR [rsp+0x48],rax
   14001afc9:	mov    rdi,QWORD PTR [rsp+0xe8]
   14001afd1:	jmp    0x14001b05f
   14001afd6:	mov    DWORD PTR [rsp+0x20],0x1
   14001afde:	call   0x140017714
   14001afe3:	and    DWORD PTR [rax+0x2c0],0x0
   14001afea:	cmp    DWORD PTR [rsp+0xd0],0x0
   14001aff2:	je     0x14001b022
   14001aff4:	mov    dl,0x1
   14001aff6:	mov    r12,QWORD PTR [rsp+0xd8]
   14001affe:	mov    rcx,r12
   14001b001:	call   0x14001ad88
   14001b006:	mov    r11,QWORD PTR [rsp+0x40]
   14001b00b:	lea    r9,[r11+0x20]
   14001b00f:	mov    r8d,DWORD PTR [r11+0x18]
   14001b013:	mov    edx,DWORD PTR [r11+0x4]
   14001b017:	mov    ecx,DWORD PTR [r11]
   14001b01a:	call   QWORD PTR [rip+0x1b1d8]        # 0x1400361f8
   14001b020:	jmp    0x14001b043
   14001b022:	mov    r12,QWORD PTR [rsp+0xd8]
   14001b02a:	lea    r9,[r12+0x20]
   14001b02f:	mov    r8d,DWORD PTR [r12+0x18]
   14001b034:	mov    edx,DWORD PTR [r12+0x4]
   14001b039:	mov    ecx,DWORD PTR [r12]
   14001b03d:	call   QWORD PTR [rip+0x1b1b5]        # 0x1400361f8
   14001b043:	mov    r14d,DWORD PTR [rsp+0x20]
   14001b048:	mov    rbx,QWORD PTR [rsp+0x48]
   14001b04d:	mov    rdi,QWORD PTR [rsp+0xe8]
   14001b055:	mov    r13,QWORD PTR [rsp+0x60]
   14001b05a:	mov    r15,QWORD PTR [rsp+0x50]
   14001b05f:	mov    rcx,r15
   14001b062:	call   0x1400156d4
   14001b067:	test   r14d,r14d
   14001b06a:	jne    0x14001b0b9
   14001b06c:	mov    r8d,0xe06d7363
   14001b072:	cmp    DWORD PTR [r12],r8d
   14001b076:	jne    0x14001b0b9
   14001b078:	cmp    DWORD PTR [r12+0x18],0x4
   14001b07e:	jne    0x14001b0b9
   14001b080:	cmp    DWORD PTR [r12+0x20],0x19930520
   14001b089:	je     0x14001b0a1
   14001b08b:	cmp    DWORD PTR [r12+0x20],0x19930521
   14001b094:	je     0x14001b0a1
   14001b096:	cmp    DWORD PTR [r12+0x20],0x19930522
   14001b09f:	jne    0x14001b0b9
   14001b0a1:	mov    rcx,QWORD PTR [r12+0x28]
   14001b0a6:	call   0x1400156a0
   14001b0ab:	test   eax,eax
   14001b0ad:	je     0x14001b0b9
   14001b0af:	mov    dl,0x1
   14001b0b1:	mov    rcx,r12
   14001b0b4:	call   0x14001ad88
   14001b0b9:	call   0x140017714
   14001b0be:	mov    rcx,QWORD PTR [rsp+0xe0]
   14001b0c6:	mov    QWORD PTR [rax+0xf0],rcx
   14001b0cd:	call   0x140017714
   14001b0d2:	mov    QWORD PTR [rax+0xf8],rdi
   14001b0d9:	mov    rax,QWORD PTR [rsp+0x38]
   14001b0de:	movsxd rcx,DWORD PTR [rax+0x1c]
   14001b0e2:	mov    rax,QWORD PTR [r13+0x0]
   14001b0e6:	mov    QWORD PTR [rcx+rax*1],0xfffffffffffffffe
   14001b0ee:	mov    rax,rbx
   14001b0f1:	add    rsp,0x98
   14001b0f8:	pop    r15
   14001b0fa:	pop    r14
   14001b0fc:	pop    r13
   14001b0fe:	pop    r12
   14001b100:	pop    rdi
   14001b101:	pop    rbx
   14001b102:	ret    
   14001b103:	int3   
   14001b104:	mov    QWORD PTR [rsp+0x8],rbx
   14001b109:	mov    QWORD PTR [rsp+0x10],rsi
   14001b10e:	mov    QWORD PTR [rsp+0x18],rdi
   14001b113:	push   r12
   14001b115:	push   r13
   14001b117:	push   r14
   14001b119:	sub    rsp,0x30
   14001b11d:	mov    rsi,r9
   14001b120:	mov    rdi,r8
   14001b123:	mov    r12,rdx
   14001b126:	mov    r14,rcx
   14001b129:	xor    ebx,ebx
   14001b12b:	mov    r13d,DWORD PTR [r8+0x4]
   14001b12f:	cmp    r13d,ebx
   14001b132:	je     0x14001b143
   14001b134:	movsxd r13,r13d
   14001b137:	call   0x1400152a0
   14001b13c:	lea    r11,[r13+rax*1+0x0]
   14001b141:	jmp    0x14001b146
   14001b143:	mov    r11,rbx
   14001b146:	cmp    r11,rbx
   14001b149:	je     0x14001b30e
   14001b14f:	cmp    r13d,ebx
   14001b152:	je     0x14001b165
   14001b154:	call   0x1400152a0
   14001b159:	mov    r11,rax
   14001b15c:	movsxd rax,DWORD PTR [rdi+0x4]
   14001b160:	add    r11,rax
   14001b163:	jmp    0x14001b168
   14001b165:	mov    r11,rbx
   14001b168:	cmp    BYTE PTR [r11+0x10],bl
   14001b16c:	je     0x14001b30e
   14001b172:	cmp    DWORD PTR [rdi+0x8],ebx
   14001b175:	jne    0x14001b181
   14001b177:	bt     DWORD PTR [rdi],0x1f
   14001b17b:	jae    0x14001b30e
   14001b181:	bt     DWORD PTR [rdi],0x1f
   14001b185:	jb     0x14001b192
   14001b187:	movsxd rax,DWORD PTR [rdi+0x8]
   14001b18b:	add    rax,QWORD PTR [r12]
   14001b18f:	mov    r12,rax
   14001b192:	test   BYTE PTR [rdi],0x8
   14001b195:	je     0x14001b1dd
   14001b197:	mov    edi,0x1
   14001b19c:	mov    edx,edi
   14001b19e:	mov    rcx,QWORD PTR [r14+0x28]
   14001b1a2:	call   0x140023358
   14001b1a7:	cmp    eax,ebx
   14001b1a9:	je     0x14001b1d3
   14001b1ab:	mov    edx,edi
   14001b1ad:	mov    rcx,r12
   14001b1b0:	call   0x140023358
   14001b1b5:	cmp    eax,ebx
   14001b1b7:	je     0x14001b1d3
   14001b1b9:	mov    rcx,QWORD PTR [r14+0x28]
   14001b1bd:	mov    QWORD PTR [r12],rcx
   14001b1c1:	lea    rdx,[rsi+0x8]
   14001b1c5:	call   0x14001adcc
   14001b1ca:	mov    QWORD PTR [r12],rax
   14001b1ce:	jmp    0x14001b304
   14001b1d3:	call   0x14001beb0
   14001b1d8:	jmp    0x14001b304
   14001b1dd:	mov    edi,0x1
   14001b1e2:	test   BYTE PTR [rsi],dil
   14001b1e5:	je     0x14001b248
   14001b1e7:	mov    edx,edi
   14001b1e9:	mov    rcx,QWORD PTR [r14+0x28]
   14001b1ed:	call   0x140023358
   14001b1f2:	cmp    eax,ebx
   14001b1f4:	je     0x14001b23e
   14001b1f6:	mov    edx,edi
   14001b1f8:	mov    rcx,r12
   14001b1fb:	call   0x140023358
   14001b200:	cmp    eax,ebx
   14001b202:	je     0x14001b23e
   14001b204:	movsxd r8,DWORD PTR [rsi+0x14]
   14001b208:	mov    rdx,QWORD PTR [r14+0x28]
   14001b20c:	mov    rcx,r12
   14001b20f:	call   0x1400160c0
   14001b214:	cmp    DWORD PTR [rsi+0x14],0x8
   14001b218:	jne    0x14001b304
   14001b21e:	cmp    QWORD PTR [r12],rbx
   14001b222:	je     0x14001b304
   14001b228:	lea    rdx,[rsi+0x8]
   14001b22c:	mov    rcx,QWORD PTR [r12]
   14001b230:	call   0x14001adcc
   14001b235:	mov    QWORD PTR [r12],rax
   14001b239:	jmp    0x14001b304
   14001b23e:	call   0x14001beb0
   14001b243:	jmp    0x14001b304
   14001b248:	cmp    DWORD PTR [rsi+0x18],ebx
   14001b24b:	je     0x14001b25e
   14001b24d:	call   0x1400152b8
   14001b252:	mov    r11,rax
   14001b255:	movsxd rax,DWORD PTR [rsi+0x18]
   14001b259:	add    r11,rax
   14001b25c:	jmp    0x14001b261
   14001b25e:	mov    r11,rbx
   14001b261:	cmp    r11,rbx
   14001b264:	jne    0x14001b2ab
   14001b266:	mov    edx,edi
   14001b268:	mov    rcx,QWORD PTR [r14+0x28]
   14001b26c:	call   0x140023358
   14001b271:	cmp    eax,ebx
   14001b273:	je     0x14001b2a4
   14001b275:	mov    edx,edi
   14001b277:	mov    rcx,r12
   14001b27a:	call   0x140023358
   14001b27f:	cmp    eax,ebx
   14001b281:	je     0x14001b2a4
   14001b283:	movsxd r10,DWORD PTR [rsi+0x14]
   14001b287:	lea    rdx,[rsi+0x8]
   14001b28b:	mov    rcx,QWORD PTR [r14+0x28]
   14001b28f:	call   0x14001adcc
   14001b294:	mov    rdx,rax
   14001b297:	mov    r8,r10
   14001b29a:	mov    rcx,r12
   14001b29d:	call   0x1400160c0
   14001b2a2:	jmp    0x14001b304
   14001b2a4:	call   0x14001beb0
   14001b2a9:	jmp    0x14001b304
   14001b2ab:	mov    edx,edi
   14001b2ad:	mov    rcx,QWORD PTR [r14+0x28]
   14001b2b1:	call   0x140023358
   14001b2b6:	cmp    eax,ebx
   14001b2b8:	je     0x14001b2fe
   14001b2ba:	mov    edx,edi
   14001b2bc:	mov    rcx,r12
   14001b2bf:	call   0x140023358
   14001b2c4:	cmp    eax,ebx
   14001b2c6:	je     0x14001b2fe
   14001b2c8:	cmp    DWORD PTR [rsi+0x18],ebx
   14001b2cb:	je     0x14001b2de
   14001b2cd:	call   0x1400152b8
   14001b2d2:	mov    rcx,rax
   14001b2d5:	movsxd rax,DWORD PTR [rsi+0x18]
   14001b2d9:	add    rcx,rax
   14001b2dc:	jmp    0x14001b2e1
   14001b2de:	mov    rcx,rbx
   14001b2e1:	call   0x140023358
   14001b2e6:	cmp    eax,ebx
   14001b2e8:	je     0x14001b2fe
   14001b2ea:	mov    al,BYTE PTR [rsi]
   14001b2ec:	and    al,0x4
   14001b2ee:	neg    al
   14001b2f0:	sbb    ecx,ecx
   14001b2f2:	neg    ecx
   14001b2f4:	add    ecx,edi
   14001b2f6:	mov    ebx,ecx
   14001b2f8:	mov    DWORD PTR [rsp+0x20],ecx
   14001b2fc:	jmp    0x14001b304
   14001b2fe:	call   0x14001beb0
   14001b303:	nop
   14001b304:	mov    eax,ebx
   14001b306:	jmp    0x14001b310
   14001b308:	call   0x14001be8c
   14001b30d:	nop
   14001b30e:	xor    eax,eax
   14001b310:	mov    rbx,QWORD PTR [rsp+0x50]
   14001b315:	mov    rsi,QWORD PTR [rsp+0x58]
   14001b31a:	mov    rdi,QWORD PTR [rsp+0x60]
   14001b31f:	add    rsp,0x30
   14001b323:	pop    r14
   14001b325:	pop    r13
   14001b327:	pop    r12
   14001b329:	ret    
   14001b32a:	int3   
   14001b32b:	int3   
   14001b32c:	mov    QWORD PTR [rsp+0x8],rbx
   14001b331:	mov    QWORD PTR [rsp+0x10],rsi
   14001b336:	push   rdi
   14001b337:	sub    rsp,0x20
   14001b33b:	mov    rbx,r9
   14001b33e:	mov    rsi,rcx
   14001b341:	bt     DWORD PTR [r8],0x1f
   14001b346:	jae    0x14001b34d
   14001b348:	mov    rdi,rdx
   14001b34b:	jmp    0x14001b354
   14001b34d:	movsxd rdi,DWORD PTR [r8+0x8]
   14001b351:	add    rdi,QWORD PTR [rdx]
   14001b354:	call   0x14001b104
   14001b359:	sub    eax,0x1
   14001b35c:	je     0x14001b399
   14001b35e:	cmp    eax,0x1
   14001b361:	jne    0x14001b3c4
   14001b363:	xor    r10d,r10d
   14001b366:	cmp    DWORD PTR [rbx+0x18],r10d
   14001b36a:	je     0x14001b37b
   14001b36c:	call   0x1400152b8
   14001b371:	mov    r10,rax
   14001b374:	movsxd rax,DWORD PTR [rbx+0x18]
   14001b378:	add    r10,rax
   14001b37b:	lea    rdx,[rbx+0x8]
   14001b37f:	mov    rcx,QWORD PTR [rsi+0x28]
   14001b383:	call   0x14001adcc
   14001b388:	mov    rdx,rax
   14001b38b:	mov    r8d,0x1
   14001b391:	mov    rcx,rdi
   14001b394:	call   r10
   14001b397:	jmp    0x14001b3c4
   14001b399:	xor    r10d,r10d
   14001b39c:	cmp    DWORD PTR [rbx+0x18],r10d
   14001b3a0:	je     0x14001b3ae
   14001b3a2:	call   0x1400152b8
   14001b3a7:	movsxd r10,DWORD PTR [rbx+0x18]
   14001b3ab:	add    r10,rax
   14001b3ae:	lea    rdx,[rbx+0x8]
   14001b3b2:	mov    rcx,QWORD PTR [rsi+0x28]
   14001b3b6:	call   0x14001adcc
   14001b3bb:	mov    rdx,rax
   14001b3be:	mov    rcx,rdi
   14001b3c1:	call   r10
   14001b3c4:	jmp    0x14001b3cc
   14001b3c6:	call   0x14001be8c
   14001b3cb:	nop
   14001b3cc:	mov    rbx,QWORD PTR [rsp+0x30]
   14001b3d1:	mov    rsi,QWORD PTR [rsp+0x38]
   14001b3d6:	add    rsp,0x20
   14001b3da:	pop    rdi
   14001b3db:	ret    
   14001b3dc:	mov    rax,rsp
   14001b3df:	mov    QWORD PTR [rax+0x8],rbx
   14001b3e3:	mov    QWORD PTR [rax+0x18],rbp
   14001b3e7:	push   rsi
   14001b3e8:	push   rdi
   14001b3e9:	push   r12
   14001b3eb:	push   r13
   14001b3ed:	push   r14
   14001b3ef:	sub    rsp,0x50
   14001b3f3:	mov    r13,QWORD PTR [rsp+0xa0]
   14001b3fb:	mov    rbp,r9
   14001b3fe:	mov    r12,rdx
   14001b401:	mov    r14,r8
   14001b404:	mov    rbx,rcx
   14001b407:	lea    r9,[rax+0x10]
   14001b40b:	mov    r8,r13
   14001b40e:	mov    rdx,rbp
   14001b411:	mov    rcx,r12
   14001b414:	call   0x1400151b4
   14001b419:	mov    r9,QWORD PTR [rsp+0xb0]
   14001b421:	mov    rsi,QWORD PTR [rsp+0xa8]
   14001b429:	mov    rdi,rax
   14001b42c:	test   r9,r9
   14001b42f:	je     0x14001b43f
   14001b431:	mov    r8,rsi
   14001b434:	mov    rdx,rax
   14001b437:	mov    rcx,rbx
   14001b43a:	call   0x14001b32c
   14001b43f:	call   0x1400152a0
   14001b444:	movsxd rcx,DWORD PTR [rsi+0xc]
   14001b448:	mov    r9,rdi
   14001b44b:	add    rax,rcx
   14001b44e:	mov    cl,BYTE PTR [rsp+0xd8]
   14001b455:	mov    r8,r14
   14001b458:	mov    BYTE PTR [rsp+0x40],cl
   14001b45c:	mov    rcx,QWORD PTR [rsp+0xb8]
   14001b464:	mov    QWORD PTR [rsp+0x38],rbp
   14001b469:	mov    edx,DWORD PTR [rcx]
   14001b46b:	mov    QWORD PTR [rsp+0x30],r13
   14001b470:	mov    rcx,r12
   14001b473:	mov    DWORD PTR [rsp+0x28],edx
   14001b477:	mov    rdx,rbx
   14001b47a:	mov    QWORD PTR [rsp+0x20],rax
   14001b47f:	call   0x140015734
   14001b484:	lea    r11,[rsp+0x50]
   14001b489:	mov    rbx,QWORD PTR [r11+0x30]
   14001b48d:	mov    rbp,QWORD PTR [r11+0x40]
   14001b491:	mov    rsp,r11
   14001b494:	pop    r14
   14001b496:	pop    r13
   14001b498:	pop    r12
   14001b49a:	pop    rdi
   14001b49b:	pop    rsi
   14001b49c:	ret    
   14001b49d:	int3   
   14001b49e:	int3   
   14001b49f:	int3   
   14001b4a0:	mov    QWORD PTR [rsp+0x10],rbx
   14001b4a5:	mov    QWORD PTR [rsp+0x18],r8
   14001b4aa:	push   rbp
   14001b4ab:	push   rsi
   14001b4ac:	push   rdi
   14001b4ad:	push   r12
   14001b4af:	push   r13
   14001b4b1:	push   r14
   14001b4b3:	push   r15
   14001b4b5:	sub    rsp,0x70
   14001b4b9:	cmp    DWORD PTR [rcx],0x80000003
   14001b4bf:	mov    r13,r9
   14001b4c2:	mov    rdi,r8
   14001b4c5:	mov    r14,rdx
   14001b4c8:	mov    rsi,rcx
   14001b4cb:	je     0x14001b6cc
   14001b4d1:	call   0x140017714
   14001b4d6:	mov    r15d,DWORD PTR [rsp+0xe0]
   14001b4de:	mov    rbp,QWORD PTR [rsp+0xd0]
   14001b4e6:	cmp    QWORD PTR [rax+0xe0],0x0
   14001b4ee:	je     0x14001b53e
   14001b4f0:	call   0x140017714
   14001b4f5:	mov    rbx,rax
   14001b4f8:	call   0x1400175a0
   14001b4fd:	cmp    QWORD PTR [rbx+0xe0],rax
   14001b504:	je     0x14001b53e
   14001b506:	cmp    DWORD PTR [rsi],0xe0434f4d
   14001b50c:	je     0x14001b53e
   14001b50e:	mov    rax,QWORD PTR [rsp+0xe8]
   14001b516:	mov    r9,r13
   14001b519:	mov    r8,rdi
   14001b51c:	mov    QWORD PTR [rsp+0x30],rax
   14001b521:	mov    rdx,r14
   14001b524:	mov    rcx,rsi
   14001b527:	mov    DWORD PTR [rsp+0x28],r15d
   14001b52c:	mov    QWORD PTR [rsp+0x20],rbp
   14001b531:	call   0x1400154e0
   14001b536:	test   eax,eax
   14001b538:	jne    0x14001b6cc
   14001b53e:	cmp    DWORD PTR [rbp+0xc],0x0
   14001b542:	jne    0x14001b549
   14001b544:	call   0x14001beb0
   14001b549:	mov    r12d,DWORD PTR [rsp+0xd8]
   14001b551:	lea    rax,[rsp+0x60]
   14001b556:	mov    QWORD PTR [rsp+0x30],r13
   14001b55b:	mov    QWORD PTR [rsp+0x28],rax
   14001b560:	lea    rax,[rsp+0xb0]
   14001b568:	mov    r8d,r15d
   14001b56b:	mov    r9d,r12d
   14001b56e:	mov    rdx,rbp
   14001b571:	mov    rcx,r14
   14001b574:	mov    QWORD PTR [rsp+0x20],rax
   14001b579:	call   0x140015534
   14001b57e:	mov    rdi,rax
   14001b581:	mov    eax,DWORD PTR [rsp+0xb0]
   14001b588:	jmp    0x14001b6c2
   14001b58d:	cmp    r12d,DWORD PTR [rdi]
   14001b590:	jl     0x14001b6b5
   14001b596:	cmp    r12d,DWORD PTR [rdi+0x4]
   14001b59a:	jg     0x14001b6b5
   14001b5a0:	call   0x1400152a0
   14001b5a5:	movsxd rcx,DWORD PTR [rdi+0xc]
   14001b5a9:	lea    rdx,[rcx+rcx*4]
   14001b5ad:	movsxd rcx,DWORD PTR [rdi+0x10]
   14001b5b1:	lea    rdx,[rcx+rdx*4]
   14001b5b5:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14001b5ba:	je     0x14001b5e0
   14001b5bc:	call   0x1400152a0
   14001b5c1:	movsxd rcx,DWORD PTR [rdi+0xc]
   14001b5c5:	lea    rdx,[rcx+rcx*4]
   14001b5c9:	movsxd rcx,DWORD PTR [rdi+0x10]
   14001b5cd:	lea    rdx,[rcx+rdx*4]
   14001b5d1:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14001b5d6:	call   0x1400152a0
   14001b5db:	add    rax,rbx
   14001b5de:	jmp    0x14001b5e2
   14001b5e0:	xor    eax,eax
   14001b5e2:	test   rax,rax
   14001b5e5:	je     0x14001b62f
   14001b5e7:	call   0x1400152a0
   14001b5ec:	movsxd rcx,DWORD PTR [rdi+0xc]
   14001b5f0:	lea    rdx,[rcx+rcx*4]
   14001b5f4:	movsxd rcx,DWORD PTR [rdi+0x10]
   14001b5f8:	lea    rdx,[rcx+rdx*4]
   14001b5fc:	cmp    DWORD PTR [rax+rdx*1-0x10],0x0
   14001b601:	je     0x14001b627
   14001b603:	call   0x1400152a0
   14001b608:	movsxd rcx,DWORD PTR [rdi+0xc]
   14001b60c:	lea    rdx,[rcx+rcx*4]
   14001b610:	movsxd rcx,DWORD PTR [rdi+0x10]
   14001b614:	lea    rdx,[rcx+rdx*4]
   14001b618:	movsxd rbx,DWORD PTR [rax+rdx*1-0x10]
   14001b61d:	call   0x1400152a0
   14001b622:	add    rax,rbx
   14001b625:	jmp    0x14001b629
   14001b627:	xor    eax,eax
   14001b629:	cmp    BYTE PTR [rax+0x10],0x0
   14001b62d:	jne    0x14001b6ae
   14001b62f:	call   0x1400152a0
   14001b634:	movsxd rcx,DWORD PTR [rdi+0xc]
   14001b638:	lea    rdx,[rcx+rcx*4]
   14001b63c:	movsxd rcx,DWORD PTR [rdi+0x10]
   14001b640:	lea    rdx,[rcx+rdx*4]
   14001b644:	test   BYTE PTR [rax+rdx*1-0x14],0x40
   14001b649:	jne    0x14001b6ae
   14001b64b:	call   0x1400152a0
   14001b650:	mov    ecx,DWORD PTR [rdi+0xc]
   14001b653:	mov    r8,QWORD PTR [rsp+0xc0]
   14001b65b:	mov    BYTE PTR [rsp+0x58],0x0
   14001b660:	mov    BYTE PTR [rsp+0x50],0x1
   14001b665:	dec    ecx
   14001b667:	movsxd rcx,ecx
   14001b66a:	mov    r9,r13
   14001b66d:	lea    rdx,[rcx+rcx*4]
   14001b671:	lea    rcx,[rax+rdx*4]
   14001b675:	movsxd rax,DWORD PTR [rdi+0x10]
   14001b679:	mov    rdx,r14
   14001b67c:	add    rcx,rax
   14001b67f:	mov    rax,QWORD PTR [rsp+0xe8]
   14001b687:	mov    QWORD PTR [rsp+0x48],rax
   14001b68c:	mov    DWORD PTR [rsp+0x40],r15d
   14001b691:	mov    QWORD PTR [rsp+0x38],rdi
   14001b696:	and    QWORD PTR [rsp+0x30],0x0
   14001b69c:	mov    QWORD PTR [rsp+0x28],rcx
   14001b6a1:	mov    rcx,rsi
   14001b6a4:	mov    QWORD PTR [rsp+0x20],rbp
   14001b6a9:	call   0x14001b3dc
   14001b6ae:	mov    eax,DWORD PTR [rsp+0xb0]
   14001b6b5:	inc    eax
   14001b6b7:	add    rdi,0x14
   14001b6bb:	mov    DWORD PTR [rsp+0xb0],eax
   14001b6c2:	cmp    eax,DWORD PTR [rsp+0x60]
   14001b6c6:	jb     0x14001b58d
   14001b6cc:	mov    rbx,QWORD PTR [rsp+0xb8]
   14001b6d4:	add    rsp,0x70
   14001b6d8:	pop    r15
   14001b6da:	pop    r14
   14001b6dc:	pop    r13
   14001b6de:	pop    r12
   14001b6e0:	pop    rdi
   14001b6e1:	pop    rsi
   14001b6e2:	pop    rbp
   14001b6e3:	ret    
   14001b6e4:	mov    QWORD PTR [rsp+0x20],rbx
   14001b6e9:	mov    QWORD PTR [rsp+0x18],r8
   14001b6ee:	mov    QWORD PTR [rsp+0x10],rdx
   14001b6f3:	push   rbp
   14001b6f4:	push   rsi
   14001b6f5:	push   rdi
   14001b6f6:	push   r12
   14001b6f8:	push   r13
   14001b6fa:	push   r14
   14001b6fc:	push   r15
   14001b6fe:	sub    rsp,0xa0
   14001b705:	mov    rbx,QWORD PTR [rsp+0x100]
   14001b70d:	xor    r15d,r15d
   14001b710:	mov    r12,rdx
   14001b713:	mov    rdi,rcx
   14001b716:	mov    rdx,r9
   14001b719:	mov    rcx,rbx
   14001b71c:	mov    r13,r9
   14001b71f:	mov    rbp,r8
   14001b722:	mov    BYTE PTR [rsp+0x60],r15b
   14001b727:	mov    r14b,r15b
   14001b72a:	mov    BYTE PTR [rsp+0xe0],r15b
   14001b732:	call   0x14001a994
   14001b737:	lea    r9,[rsp+0x78]
   14001b73c:	mov    r8,rbx
   14001b73f:	mov    rdx,r13
   14001b742:	mov    rcx,r12
   14001b745:	mov    esi,eax
   14001b747:	call   0x1400151b4
   14001b74c:	mov    r8,rbx
   14001b74f:	mov    rdx,r13
   14001b752:	mov    rcx,r12
   14001b755:	call   0x14001aa0c
   14001b75a:	mov    r8,rbx
   14001b75d:	mov    rdx,r13
   14001b760:	cmp    esi,eax
   14001b762:	jle    0x14001b784
   14001b764:	lea    rcx,[rsp+0x78]
   14001b769:	mov    r9d,esi
   14001b76c:	call   0x14001a9c4
   14001b771:	mov    r9d,esi
   14001b774:	mov    r8,rbx
   14001b777:	mov    rdx,r13
   14001b77a:	mov    rcx,r12
   14001b77d:	call   0x14001a9d0
   14001b782:	jmp    0x14001b78e
   14001b784:	mov    rcx,r12
   14001b787:	call   0x14001aa0c
   14001b78c:	mov    esi,eax
   14001b78e:	cmp    esi,0xffffffff
   14001b791:	jl     0x14001b798
   14001b793:	cmp    esi,DWORD PTR [rbx+0x4]
   14001b796:	jl     0x14001b79d
   14001b798:	call   0x14001beb0
   14001b79d:	cmp    DWORD PTR [rdi],0xe06d7363
   14001b7a3:	jne    0x14001bbf4
   14001b7a9:	cmp    DWORD PTR [rdi+0x18],0x4
   14001b7ad:	jne    0x14001b963
   14001b7b3:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14001b7ba:	je     0x14001b7d2
   14001b7bc:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14001b7c3:	je     0x14001b7d2
   14001b7c5:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14001b7cc:	jne    0x14001b963
   14001b7d2:	cmp    QWORD PTR [rdi+0x30],r15
   14001b7d6:	jne    0x14001b963
   14001b7dc:	call   0x140017714
   14001b7e1:	cmp    QWORD PTR [rax+0xf0],r15
   14001b7e8:	je     0x14001bbd9
   14001b7ee:	call   0x140017714
   14001b7f3:	mov    rdi,QWORD PTR [rax+0xf0]
   14001b7fa:	call   0x140017714
   14001b7ff:	mov    rcx,QWORD PTR [rdi+0x38]
   14001b803:	mov    rbp,QWORD PTR [rax+0xf8]
   14001b80a:	mov    BYTE PTR [rsp+0x60],0x1
   14001b80f:	mov    QWORD PTR [rsp+0xf0],rbp
   14001b817:	call   0x1400152ec
   14001b81c:	mov    edx,0x1
   14001b821:	mov    rcx,rdi
   14001b824:	call   0x140023358
   14001b829:	cmp    eax,r15d
   14001b82c:	jne    0x14001b833
   14001b82e:	call   0x14001beb0
   14001b833:	cmp    DWORD PTR [rdi],0xe06d7363
   14001b839:	jne    0x14001b867
   14001b83b:	cmp    DWORD PTR [rdi+0x18],0x4
   14001b83f:	jne    0x14001b867
   14001b841:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14001b848:	je     0x14001b85c
   14001b84a:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14001b851:	je     0x14001b85c
   14001b853:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14001b85a:	jne    0x14001b867
   14001b85c:	cmp    QWORD PTR [rdi+0x30],r15
   14001b860:	jne    0x14001b867
   14001b862:	call   0x14001beb0
   14001b867:	call   0x140017714
   14001b86c:	cmp    QWORD PTR [rax+0x108],r15
   14001b873:	je     0x14001b963
   14001b879:	call   0x140017714
   14001b87e:	mov    rbp,QWORD PTR [rax+0x108]
   14001b885:	call   0x140017714
   14001b88a:	mov    rdx,rbp
   14001b88d:	mov    rcx,rdi
   14001b890:	mov    QWORD PTR [rax+0x108],r15
   14001b897:	call   0x14001adf0
   14001b89c:	cmp    al,r15b
   14001b89f:	jne    0x14001b95b
   14001b8a5:	cmp    DWORD PTR [rbp+0x0],r15d
   14001b8a9:	mov    r12d,r15d
   14001b8ac:	jle    0x14001b903
   14001b8ae:	mov    rsi,r15
   14001b8b1:	call   0x1400152a0
   14001b8b6:	movsxd rcx,DWORD PTR [rbp+0x4]
   14001b8ba:	add    rax,rsi
   14001b8bd:	cmp    DWORD PTR [rcx+rax*1+0x4],r15d
   14001b8c2:	je     0x14001b8df
   14001b8c4:	call   0x1400152a0
   14001b8c9:	movsxd rcx,DWORD PTR [rbp+0x4]
   14001b8cd:	add    rax,rsi
   14001b8d0:	movsxd rbx,DWORD PTR [rcx+rax*1+0x4]
   14001b8d5:	call   0x1400152a0
   14001b8da:	add    rax,rbx
   14001b8dd:	jmp    0x14001b8e2
   14001b8df:	mov    rax,r15
   14001b8e2:	lea    rdx,[rip+0x2df47]        # 0x140049830
   14001b8e9:	mov    rcx,rax
   14001b8ec:	call   0x140014858
   14001b8f1:	cmp    al,r15b
   14001b8f4:	jne    0x14001b909
   14001b8f6:	inc    r12d
   14001b8f9:	add    rsi,0x14
   14001b8fd:	cmp    r12d,DWORD PTR [rbp+0x0]
   14001b901:	jl     0x14001b8b1
   14001b903:	call   0x14001be8c
   14001b908:	int3   
   14001b909:	mov    dl,0x1
   14001b90b:	mov    rcx,rdi
   14001b90e:	call   0x14001ad88
   14001b913:	lea    r11,[rip+0x1e4b6]        # 0x140039dd0
   14001b91a:	lea    rdx,[rsp+0xe0]
   14001b922:	lea    rcx,[rsp+0x88]
   14001b92a:	mov    QWORD PTR [rsp+0xe0],r11
   14001b932:	call   0x140014624
   14001b937:	lea    r11,[rip+0x1e482]        # 0x140039dc0
   14001b93e:	lea    rdx,[rip+0x2a62b]        # 0x140045f70
   14001b945:	lea    rcx,[rsp+0x88]
   14001b94d:	mov    QWORD PTR [rsp+0x88],r11
   14001b955:	call   0x1400158a0
   14001b95a:	int3   
   14001b95b:	mov    rbp,QWORD PTR [rsp+0xf0]
   14001b963:	cmp    DWORD PTR [rdi],0xe06d7363
   14001b969:	jne    0x14001bbf4
   14001b96f:	cmp    DWORD PTR [rdi+0x18],0x4
   14001b973:	jne    0x14001bbf4
   14001b979:	cmp    DWORD PTR [rdi+0x20],0x19930520
   14001b980:	je     0x14001b998
   14001b982:	cmp    DWORD PTR [rdi+0x20],0x19930521
   14001b989:	je     0x14001b998
   14001b98b:	cmp    DWORD PTR [rdi+0x20],0x19930522
   14001b992:	jne    0x14001bbf4
   14001b998:	cmp    DWORD PTR [rbx+0xc],r15d
   14001b99c:	jbe    0x14001bb26
   14001b9a2:	mov    r8d,DWORD PTR [rsp+0x110]
   14001b9aa:	lea    rax,[rsp+0x68]
   14001b9af:	mov    QWORD PTR [rsp+0x30],r13
   14001b9b4:	mov    QWORD PTR [rsp+0x28],rax
   14001b9b9:	lea    rax,[rsp+0x64]
   14001b9be:	mov    r9d,esi
   14001b9c1:	mov    rdx,rbx
   14001b9c4:	mov    rcx,r12
   14001b9c7:	mov    QWORD PTR [rsp+0x20],rax
   14001b9cc:	call   0x140015534
   14001b9d1:	mov    ecx,DWORD PTR [rsp+0x64]
   14001b9d5:	mov    rbp,rax
   14001b9d8:	mov    eax,DWORD PTR [rsp+0x68]
   14001b9dc:	cmp    ecx,eax
   14001b9de:	jae    0x14001bb26
   14001b9e4:	cmp    DWORD PTR [rbp+0x0],esi
   14001b9e7:	jg     0x14001bb0b
   14001b9ed:	cmp    esi,DWORD PTR [rbp+0x4]
   14001b9f0:	jg     0x14001bb0b
   14001b9f6:	call   0x1400152a0
   14001b9fb:	movsxd r12,DWORD PTR [rbp+0x10]
   14001b9ff:	mov    r14d,DWORD PTR [rbp+0xc]
   14001ba03:	add    r12,rax
   14001ba06:	cmp    r14d,r15d
   14001ba09:	jle    0x14001baf3
   14001ba0f:	call   0x1400152b8
   14001ba14:	mov    rcx,QWORD PTR [rdi+0x30]
   14001ba18:	movsxd rdx,DWORD PTR [rcx+0xc]
   14001ba1c:	lea    rax,[rax+rdx*1+0x4]
   14001ba21:	mov    QWORD PTR [rsp+0x70],rax
   14001ba26:	call   0x1400152b8
   14001ba2b:	mov    rcx,QWORD PTR [rdi+0x30]
   14001ba2f:	movsxd rdx,DWORD PTR [rcx+0xc]
   14001ba33:	mov    r15d,DWORD PTR [rax+rdx*1]
   14001ba37:	jmp    0x14001ba6d
   14001ba39:	call   0x1400152b8
   14001ba3e:	mov    rcx,QWORD PTR [rsp+0x70]
   14001ba43:	mov    r8,QWORD PTR [rdi+0x30]
   14001ba47:	movsxd rcx,DWORD PTR [rcx]
   14001ba4a:	add    rax,rcx
   14001ba4d:	mov    rcx,r12
   14001ba50:	mov    rdx,rax
   14001ba53:	mov    QWORD PTR [rsp+0x80],rax
   14001ba5b:	call   0x14001aa84
   14001ba60:	test   eax,eax
   14001ba62:	jne    0x14001ba7e
   14001ba64:	dec    r15d
   14001ba67:	add    QWORD PTR [rsp+0x70],0x4
   14001ba6d:	test   r15d,r15d
   14001ba70:	jg     0x14001ba39
   14001ba72:	dec    r14d
   14001ba75:	add    r12,0x14
   14001ba79:	xor    r15d,r15d
   14001ba7c:	jmp    0x14001ba06
   14001ba7e:	mov    al,BYTE PTR [rsp+0x108]
   14001ba85:	mov    r8,QWORD PTR [rsp+0xf0]
   14001ba8d:	mov    r14b,0x1
   14001ba90:	mov    BYTE PTR [rsp+0x58],al
   14001ba94:	mov    al,BYTE PTR [rsp+0x60]
   14001ba98:	mov    r9,r13
   14001ba9b:	mov    BYTE PTR [rsp+0x50],al
   14001ba9f:	mov    rax,QWORD PTR [rsp+0x118]
   14001baa7:	mov    rcx,rdi
   14001baaa:	mov    QWORD PTR [rsp+0x48],rax
   14001baaf:	mov    eax,DWORD PTR [rsp+0x110]
   14001bab6:	mov    BYTE PTR [rsp+0xe0],r14b
   14001babe:	mov    DWORD PTR [rsp+0x40],eax
   14001bac2:	mov    rax,QWORD PTR [rsp+0x80]
   14001baca:	mov    QWORD PTR [rsp+0x38],rbp
   14001bacf:	mov    QWORD PTR [rsp+0x30],rax
   14001bad4:	mov    QWORD PTR [rsp+0x28],r12
   14001bad9:	mov    r12,QWORD PTR [rsp+0xe8]
   14001bae1:	mov    rdx,r12
   14001bae4:	mov    QWORD PTR [rsp+0x20],rbx
   14001bae9:	call   0x14001b3dc
   14001baee:	xor    r15d,r15d
   14001baf1:	jmp    0x14001bb03
   14001baf3:	mov    r14b,BYTE PTR [rsp+0xe0]
   14001bafb:	mov    r12,QWORD PTR [rsp+0xe8]
   14001bb03:	mov    eax,DWORD PTR [rsp+0x68]
   14001bb07:	mov    ecx,DWORD PTR [rsp+0x64]
   14001bb0b:	inc    ecx
   14001bb0d:	add    rbp,0x14
   14001bb11:	mov    DWORD PTR [rsp+0x64],ecx
   14001bb15:	cmp    ecx,eax
   14001bb17:	jb     0x14001b9e4
   14001bb1d:	cmp    r14b,r15b
   14001bb20:	jne    0x14001bbc6
   14001bb26:	mov    eax,DWORD PTR [rbx]
   14001bb28:	and    eax,0x1fffffff
   14001bb2d:	cmp    eax,0x19930521
   14001bb32:	jb     0x14001bbc6
   14001bb38:	mov    esi,DWORD PTR [rbx+0x20]
   14001bb3b:	cmp    esi,r15d
   14001bb3e:	je     0x14001bb4d
   14001bb40:	movsxd rsi,esi
   14001bb43:	call   0x1400152a0
   14001bb48:	add    rax,rsi
   14001bb4b:	jmp    0x14001bb50
   14001bb4d:	mov    rax,r15
   14001bb50:	cmp    rax,r15
   14001bb53:	je     0x14001bbc6
   14001bb55:	cmp    esi,r15d
   14001bb58:	je     0x14001bb6b
   14001bb5a:	call   0x1400152a0
   14001bb5f:	mov    rdx,rax
   14001bb62:	movsxd rax,DWORD PTR [rbx+0x20]
   14001bb66:	add    rdx,rax
   14001bb69:	jmp    0x14001bb6e
   14001bb6b:	mov    rdx,r15
   14001bb6e:	mov    rcx,rdi
   14001bb71:	call   0x14001adf0
   14001bb76:	cmp    al,r15b
   14001bb79:	jne    0x14001bbc6
   14001bb7b:	lea    r9,[rsp+0xe0]
   14001bb83:	mov    r8,rbx
   14001bb86:	mov    rdx,r13
   14001bb89:	mov    rcx,r12
   14001bb8c:	call   0x1400151b4
   14001bb91:	mov    cl,BYTE PTR [rsp+0x108]
   14001bb98:	mov    r8,QWORD PTR [rsp+0xf0]
   14001bba0:	mov    BYTE PTR [rsp+0x40],cl
   14001bba4:	mov    QWORD PTR [rsp+0x38],r13
   14001bba9:	mov    QWORD PTR [rsp+0x30],rbx
   14001bbae:	or     DWORD PTR [rsp+0x28],0xffffffff
   14001bbb3:	mov    r9,rax
   14001bbb6:	mov    rdx,rdi
   14001bbb9:	mov    rcx,r12
   14001bbbc:	mov    QWORD PTR [rsp+0x20],r15
   14001bbc1:	call   0x140015734
   14001bbc6:	call   0x140017714
   14001bbcb:	cmp    QWORD PTR [rax+0x108],r15
   14001bbd2:	je     0x14001bbd9
   14001bbd4:	call   0x14001beb0
   14001bbd9:	mov    rbx,QWORD PTR [rsp+0xf8]
   14001bbe1:	add    rsp,0xa0
   14001bbe8:	pop    r15
   14001bbea:	pop    r14
   14001bbec:	pop    r13
   14001bbee:	pop    r12
   14001bbf0:	pop    rdi
   14001bbf1:	pop    rsi
   14001bbf2:	pop    rbp
   14001bbf3:	ret    
   14001bbf4:	cmp    DWORD PTR [rbx+0xc],r15d
   14001bbf8:	jbe    0x14001bbc6
   14001bbfa:	cmp    BYTE PTR [rsp+0x108],r15b
   14001bc02:	jne    0x14001bc38
   14001bc04:	mov    rax,QWORD PTR [rsp+0x118]
   14001bc0c:	mov    r9,r13
   14001bc0f:	mov    r8,rbp
   14001bc12:	mov    QWORD PTR [rsp+0x38],rax
   14001bc17:	mov    eax,DWORD PTR [rsp+0x110]
   14001bc1e:	mov    rdx,r12
   14001bc21:	mov    DWORD PTR [rsp+0x30],eax
   14001bc25:	mov    rcx,rdi
   14001bc28:	mov    DWORD PTR [rsp+0x28],esi
   14001bc2c:	mov    QWORD PTR [rsp+0x20],rbx
   14001bc31:	call   0x14001b4a0
   14001bc36:	jmp    0x14001bbc6
   14001bc38:	call   0x14001be8c
   14001bc3d:	int3   
   14001bc3e:	int3   
   14001bc3f:	int3   
   14001bc40:	rex push rbx
   14001bc42:	sub    rsp,0x20
   14001bc46:	mov    rbx,rcx
   14001bc49:	call   0x140014698
   14001bc4e:	lea    r11,[rip+0x1e16b]        # 0x140039dc0
   14001bc55:	mov    QWORD PTR [rbx],r11
   14001bc58:	mov    rax,rbx
   14001bc5b:	add    rsp,0x20
   14001bc5f:	pop    rbx
   14001bc60:	ret    
   14001bc61:	int3   
   14001bc62:	int3   
   14001bc63:	int3   
   14001bc64:	mov    QWORD PTR [rsp+0x8],rbx
   14001bc69:	mov    QWORD PTR [rsp+0x10],rbp
   14001bc6e:	mov    QWORD PTR [rsp+0x18],rsi
   14001bc73:	push   rdi
   14001bc74:	push   r12
   14001bc76:	push   r14
   14001bc78:	sub    rsp,0x40
   14001bc7c:	mov    rbp,r9
   14001bc7f:	mov    r12,r8
   14001bc82:	mov    rsi,rdx
   14001bc85:	mov    rbx,rcx
   14001bc88:	call   0x140017714
   14001bc8d:	mov    rdi,QWORD PTR [rsp+0x80]
   14001bc95:	cmp    DWORD PTR [rax+0x2c0],0x0
   14001bc9c:	mov    edx,0x1fffffff
   14001bca1:	mov    r8d,0x80000029
   14001bca7:	mov    r9d,0x80000026
   14001bcad:	mov    r14d,0x1
   14001bcb3:	jne    0x14001bced
   14001bcb5:	cmp    DWORD PTR [rbx],0xe06d7363
   14001bcbb:	je     0x14001bced
   14001bcbd:	cmp    DWORD PTR [rbx],r8d
   14001bcc0:	jne    0x14001bcd2
   14001bcc2:	cmp    DWORD PTR [rbx+0x18],0xf
   14001bcc6:	jne    0x14001bcd2
   14001bcc8:	cmp    QWORD PTR [rbx+0x60],0x19930520
   14001bcd0:	je     0x14001bced
   14001bcd2:	cmp    DWORD PTR [rbx],r9d
   14001bcd5:	je     0x14001bced
   14001bcd7:	mov    ecx,DWORD PTR [rdi]
   14001bcd9:	and    ecx,edx
   14001bcdb:	cmp    ecx,0x19930522
   14001bce1:	jb     0x14001bced
   14001bce3:	test   BYTE PTR [rdi+0x24],r14b
   14001bce7:	jne    0x14001be6d
   14001bced:	mov    eax,DWORD PTR [rbx+0x4]
   14001bcf0:	test   al,0x66
   14001bcf2:	je     0x14001bd8b
   14001bcf8:	cmp    DWORD PTR [rdi+0x4],0x0
   14001bcfc:	je     0x14001be6d
   14001bd02:	cmp    DWORD PTR [rsp+0x88],0x0
   14001bd0a:	jne    0x14001be6d
   14001bd10:	and    eax,0x20
   14001bd13:	je     0x14001bd54
   14001bd15:	cmp    DWORD PTR [rbx],r9d
   14001bd18:	jne    0x14001bd54
   14001bd1a:	mov    r8,QWORD PTR [r12+0xf8]
   14001bd22:	mov    rdx,rbp
   14001bd25:	mov    rcx,rdi
   14001bd28:	call   0x14001a908
   14001bd2d:	cmp    eax,0xffffffff
   14001bd30:	mov    ebx,eax
   14001bd32:	jl     0x14001bd39
   14001bd34:	cmp    eax,DWORD PTR [rdi+0x4]
   14001bd37:	jl     0x14001bd3e
   14001bd39:	call   0x14001beb0
   14001bd3e:	mov    r9d,ebx
   14001bd41:	mov    rcx,rsi
   14001bd44:	mov    rdx,rbp
   14001bd47:	mov    r8,rdi
   14001bd4a:	call   0x14001abf4
   14001bd4f:	jmp    0x14001be6d
   14001bd54:	test   eax,eax
   14001bd56:	je     0x14001bd78
   14001bd58:	cmp    DWORD PTR [rbx],r8d
   14001bd5b:	jne    0x14001bd78
   14001bd5d:	mov    esi,DWORD PTR [rbx+0x38]
   14001bd60:	cmp    esi,0xffffffff
   14001bd63:	jl     0x14001bd6a
   14001bd65:	cmp    esi,DWORD PTR [rdi+0x4]
   14001bd68:	jl     0x14001bd6f
   14001bd6a:	call   0x14001beb0
   14001bd6f:	mov    rcx,QWORD PTR [rbx+0x28]
   14001bd73:	mov    r9d,esi
   14001bd76:	jmp    0x14001bd44
   14001bd78:	mov    r8,rdi
   14001bd7b:	mov    rdx,rbp
   14001bd7e:	mov    rcx,rsi
   14001bd81:	call   0x140015308
   14001bd86:	jmp    0x14001be6d
   14001bd8b:	cmp    DWORD PTR [rdi+0xc],0x0
   14001bd8f:	jne    0x14001bdbf
   14001bd91:	mov    eax,DWORD PTR [rdi]
   14001bd93:	and    eax,edx
   14001bd95:	cmp    eax,0x19930521
   14001bd9a:	jb     0x14001be6d
   14001bda0:	cmp    DWORD PTR [rdi+0x20],0x0
   14001bda4:	je     0x14001bdb4
   14001bda6:	call   0x1400152a0
   14001bdab:	movsxd rcx,DWORD PTR [rdi+0x20]
   14001bdaf:	add    rax,rcx
   14001bdb2:	jmp    0x14001bdb6
   14001bdb4:	xor    eax,eax
   14001bdb6:	test   rax,rax
   14001bdb9:	je     0x14001be6d
   14001bdbf:	cmp    DWORD PTR [rbx],0xe06d7363
   14001bdc5:	jne    0x14001be34
   14001bdc7:	cmp    DWORD PTR [rbx+0x18],0x3
   14001bdcb:	jb     0x14001be34
   14001bdcd:	cmp    DWORD PTR [rbx+0x20],0x19930522
   14001bdd4:	jbe    0x14001be34
   14001bdd6:	mov    rax,QWORD PTR [rbx+0x30]
   14001bdda:	cmp    DWORD PTR [rax+0x8],0x0
   14001bdde:	je     0x14001bdf2
   14001bde0:	call   0x1400152b8
   14001bde5:	mov    rcx,QWORD PTR [rbx+0x30]
   14001bde9:	movsxd r11,DWORD PTR [rcx+0x8]
   14001bded:	add    r11,rax
   14001bdf0:	jmp    0x14001bdf5
   14001bdf2:	xor    r11d,r11d
   14001bdf5:	test   r11,r11
   14001bdf8:	je     0x14001be34
   14001bdfa:	movzx  eax,BYTE PTR [rsp+0x98]
   14001be02:	mov    r9,rbp
   14001be05:	mov    r8,r12
   14001be08:	mov    DWORD PTR [rsp+0x38],eax
   14001be0c:	mov    rax,QWORD PTR [rsp+0x90]
   14001be14:	mov    rdx,rsi
   14001be17:	mov    QWORD PTR [rsp+0x30],rax
   14001be1c:	mov    eax,DWORD PTR [rsp+0x88]
   14001be23:	mov    rcx,rbx
   14001be26:	mov    DWORD PTR [rsp+0x28],eax
   14001be2a:	mov    QWORD PTR [rsp+0x20],rdi
   14001be2f:	call   r11
   14001be32:	jmp    0x14001be70
   14001be34:	mov    rax,QWORD PTR [rsp+0x90]
   14001be3c:	mov    r9,rbp
   14001be3f:	mov    r8,r12
   14001be42:	mov    QWORD PTR [rsp+0x38],rax
   14001be47:	mov    eax,DWORD PTR [rsp+0x88]
   14001be4e:	mov    rdx,rsi
   14001be51:	mov    DWORD PTR [rsp+0x30],eax
   14001be55:	mov    al,BYTE PTR [rsp+0x98]
   14001be5c:	mov    rcx,rbx
   14001be5f:	mov    BYTE PTR [rsp+0x28],al
   14001be63:	mov    QWORD PTR [rsp+0x20],rdi
   14001be68:	call   0x14001b6e4
   14001be6d:	mov    eax,r14d
   14001be70:	mov    rbx,QWORD PTR [rsp+0x60]
   14001be75:	mov    rbp,QWORD PTR [rsp+0x68]
   14001be7a:	mov    rsi,QWORD PTR [rsp+0x70]
   14001be7f:	add    rsp,0x40
   14001be83:	pop    r14
   14001be85:	pop    r12
   14001be87:	pop    rdi
   14001be88:	ret    
   14001be89:	int3   
   14001be8a:	int3   
   14001be8b:	int3   
   14001be8c:	sub    rsp,0x28
   14001be90:	call   0x140017714
   14001be95:	mov    rcx,QWORD PTR [rax+0xd0]
   14001be9c:	test   rcx,rcx
   14001be9f:	je     0x14001bea5
   14001bea1:	call   rcx
   14001bea3:	jmp    0x14001bea5
   14001bea5:	call   0x14001c198
   14001beaa:	add    rsp,0x28
   14001beae:	ret    
   14001beaf:	int3   
   14001beb0:	sub    rsp,0x28
   14001beb4:	mov    rcx,QWORD PTR [rip+0x330d5]        # 0x14004ef90
   14001bebb:	call   0x1400175ac
   14001bec0:	test   rax,rax
   14001bec3:	je     0x14001bec9
   14001bec5:	call   rax
   14001bec7:	jmp    0x14001bec9
   14001bec9:	call   0x14001be8c
   14001bece:	int3   
   14001becf:	add    rsp,0x28
   14001bed3:	ret    
   14001bed4:	sub    rsp,0x28
   14001bed8:	lea    rcx,[rip+0xffffffffffffffad]        # 0x14001be8c
   14001bedf:	call   0x140017598
   14001bee4:	mov    QWORD PTR [rip+0x330a5],rax        # 0x14004ef90
   14001beeb:	add    rsp,0x28
   14001beef:	ret    
   14001bef0:	mov    QWORD PTR [rsp+0x8],rbx
   14001bef5:	mov    QWORD PTR [rsp+0x10],rbp
   14001befa:	mov    QWORD PTR [rsp+0x18],rsi
   14001beff:	push   rdi
   14001bf00:	push   r12
   14001bf02:	push   r13
   14001bf04:	sub    rsp,0x50
   14001bf08:	xor    r13d,r13d
   14001bf0b:	mov    rdi,r9
   14001bf0e:	mov    rsi,r8
   14001bf11:	mov    rbp,rdx
   14001bf14:	mov    rbx,rcx
   14001bf17:	cmp    r9,r13
   14001bf1a:	jne    0x14001bf2a
   14001bf1c:	cmp    rcx,r13
   14001bf1f:	jne    0x14001bf2f
   14001bf21:	cmp    rdx,r13
   14001bf24:	jne    0x14001bf46
   14001bf26:	xor    eax,eax
   14001bf28:	jmp    0x14001bf68
   14001bf2a:	cmp    rcx,r13
   14001bf2d:	je     0x14001bf46
   14001bf2f:	cmp    rdx,r13
   14001bf32:	jbe    0x14001bf46
   14001bf34:	cmp    r9,r13
   14001bf37:	jne    0x14001bf3e
   14001bf39:	mov    BYTE PTR [rcx],r13b
   14001bf3c:	jmp    0x14001bf26
   14001bf3e:	cmp    r8,r13
   14001bf41:	jne    0x14001bf82
   14001bf43:	mov    BYTE PTR [rcx],r13b
   14001bf46:	call   0x140015f48
   14001bf4b:	mov    ebx,0x16
   14001bf50:	xor    r9d,r9d
   14001bf53:	xor    r8d,r8d
   14001bf56:	xor    edx,edx
   14001bf58:	xor    ecx,ecx
   14001bf5a:	mov    DWORD PTR [rax],ebx
   14001bf5c:	mov    QWORD PTR [rsp+0x20],r13
   14001bf61:	call   0x1400149a8
   14001bf66:	mov    eax,ebx
   14001bf68:	lea    r11,[rsp+0x50]
   14001bf6d:	mov    rbx,QWORD PTR [r11+0x20]
   14001bf71:	mov    rbp,QWORD PTR [r11+0x28]
   14001bf75:	mov    rsi,QWORD PTR [r11+0x30]
   14001bf79:	mov    rsp,r11
   14001bf7c:	pop    r13
   14001bf7e:	pop    r12
   14001bf80:	pop    rdi
   14001bf81:	ret    
   14001bf82:	mov    rdx,QWORD PTR [rsp+0x90]
   14001bf8a:	lea    rcx,[rsp+0x30]
   14001bf8f:	call   0x140014a6c
   14001bf94:	mov    r11,QWORD PTR [rsp+0x38]
   14001bf99:	mov    rdx,rbp
   14001bf9c:	mov    rcx,rbx
   14001bf9f:	cmp    DWORD PTR [r11+0x8],r13d
   14001bfa3:	jne    0x14001bfc5
   14001bfa5:	mov    r9,rdi
   14001bfa8:	mov    r8,rsi
   14001bfab:	call   0x140016c08
   14001bfb0:	cmp    BYTE PTR [rsp+0x48],r13b
   14001bfb5:	je     0x14001bf68
   14001bfb7:	mov    rcx,QWORD PTR [rsp+0x40]
   14001bfbc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001bfc3:	jmp    0x14001bf68
   14001bfc5:	cmp    rdi,0xffffffffffffffff
   14001bfc9:	jne    0x14001bfe2
   14001bfcb:	mov    al,BYTE PTR [rsi]
   14001bfcd:	inc    rsi
   14001bfd0:	mov    BYTE PTR [rcx],al
   14001bfd2:	inc    rcx
   14001bfd5:	cmp    al,r13b
   14001bfd8:	je     0x14001c008
   14001bfda:	sub    rdx,0x1
   14001bfde:	jne    0x14001bfcb
   14001bfe0:	jmp    0x14001c008
   14001bfe2:	mov    al,BYTE PTR [rsi]
   14001bfe4:	inc    rsi
   14001bfe7:	mov    BYTE PTR [rcx],al
   14001bfe9:	inc    rcx
   14001bfec:	cmp    al,r13b
   14001bfef:	je     0x14001bffd
   14001bff1:	sub    rdx,0x1
   14001bff5:	je     0x14001bffd
   14001bff7:	sub    rdi,0x1
   14001bffb:	jne    0x14001bfe2
   14001bffd:	cmp    rdi,r13
   14001c000:	jne    0x14001c008
   14001c002:	mov    BYTE PTR [rcx],r13b
   14001c005:	inc    rcx
   14001c008:	cmp    rdx,r13
   14001c00b:	jne    0x14001c116
   14001c011:	cmp    BYTE PTR [rsi],r13b
   14001c014:	je     0x14001c01c
   14001c016:	cmp    rdi,0x1
   14001c01a:	jne    0x14001c075
   14001c01c:	lea    r12,[rcx-0x1]
   14001c020:	mov    rsi,r12
   14001c023:	cmp    r12,rbx
   14001c026:	jb     0x14001c042
   14001c028:	movzx  ecx,BYTE PTR [rsi]
   14001c02b:	lea    rdx,[rsp+0x30]
   14001c030:	call   0x140016e70
   14001c035:	cmp    eax,r13d
   14001c038:	je     0x14001c042
   14001c03a:	dec    rsi
   14001c03d:	cmp    rsi,rbx
   14001c040:	jae    0x14001c028
   14001c042:	mov    eax,r12d
   14001c045:	sub    eax,esi
   14001c047:	test   al,0x1
   14001c049:	je     0x14001c075
   14001c04b:	mov    BYTE PTR [r12],r13b
   14001c04f:	call   0x140015f48
   14001c054:	mov    edx,0x2a
   14001c059:	mov    DWORD PTR [rax],edx
   14001c05b:	cmp    BYTE PTR [rsp+0x48],r13b
   14001c060:	je     0x14001c06e
   14001c062:	mov    rcx,QWORD PTR [rsp+0x40]
   14001c067:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c06e:	mov    eax,edx
   14001c070:	jmp    0x14001bf68
   14001c075:	cmp    rdi,0xffffffffffffffff
   14001c079:	jne    0x14001c0d7
   14001c07b:	cmp    rbp,0x1
   14001c07f:	jbe    0x14001c0d0
   14001c081:	lea    rsi,[rbx+rbp*1-0x2]
   14001c086:	mov    rdi,rsi
   14001c089:	cmp    rsi,rbx
   14001c08c:	jb     0x14001c0a8
   14001c08e:	movzx  ecx,BYTE PTR [rdi]
   14001c091:	lea    rdx,[rsp+0x30]
   14001c096:	call   0x140016e70
   14001c09b:	cmp    eax,r13d
   14001c09e:	je     0x14001c0a8
   14001c0a0:	dec    rdi
   14001c0a3:	cmp    rdi,rbx
   14001c0a6:	jae    0x14001c08e
   14001c0a8:	mov    eax,esi
   14001c0aa:	sub    eax,edi
   14001c0ac:	test   al,0x1
   14001c0ae:	je     0x14001c0d0
   14001c0b0:	mov    BYTE PTR [rsi],r13b
   14001c0b3:	cmp    BYTE PTR [rsp+0x48],r13b
   14001c0b8:	je     0x14001c0c6
   14001c0ba:	mov    rax,QWORD PTR [rsp+0x40]
   14001c0bf:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c0c6:	mov    eax,0x50
   14001c0cb:	jmp    0x14001bf68
   14001c0d0:	mov    BYTE PTR [rbx+rbp*1-0x1],r13b
   14001c0d5:	jmp    0x14001c0b3
   14001c0d7:	mov    BYTE PTR [rbx],r13b
   14001c0da:	call   0x140015f48
   14001c0df:	mov    ebx,0x22
   14001c0e4:	xor    r9d,r9d
   14001c0e7:	xor    r8d,r8d
   14001c0ea:	xor    edx,edx
   14001c0ec:	xor    ecx,ecx
   14001c0ee:	mov    DWORD PTR [rax],ebx
   14001c0f0:	mov    QWORD PTR [rsp+0x20],r13
   14001c0f5:	call   0x1400149a8
   14001c0fa:	cmp    BYTE PTR [rsp+0x48],r13b
   14001c0ff:	je     0x14001bf66
   14001c105:	mov    rcx,QWORD PTR [rsp+0x40]
   14001c10a:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001c111:	jmp    0x14001bf66
   14001c116:	mov    rax,rcx
   14001c119:	sub    rax,rbx
   14001c11c:	cmp    rax,0x2
   14001c120:	jl     0x14001c17b
   14001c122:	lea    rsi,[rcx-0x2]
   14001c126:	mov    rdi,rsi
   14001c129:	cmp    rsi,rbx
   14001c12c:	jb     0x14001c148
   14001c12e:	movzx  ecx,BYTE PTR [rdi]
   14001c131:	lea    rdx,[rsp+0x30]
   14001c136:	call   0x140016e70
   14001c13b:	cmp    eax,r13d
   14001c13e:	je     0x14001c148
   14001c140:	dec    rdi
   14001c143:	cmp    rdi,rbx
   14001c146:	jae    0x14001c12e
   14001c148:	mov    eax,esi
   14001c14a:	sub    eax,edi
   14001c14c:	test   al,0x1
   14001c14e:	je     0x14001c17b
   14001c150:	mov    BYTE PTR [rsi],r13b
   14001c153:	call   0x140015f48
   14001c158:	mov    edx,0x2a
   14001c15d:	mov    DWORD PTR [rax],edx
   14001c15f:	cmp    BYTE PTR [rsp+0x48],r13b
   14001c164:	je     0x14001c06e
   14001c16a:	mov    rax,QWORD PTR [rsp+0x40]
   14001c16f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c176:	jmp    0x14001c06e
   14001c17b:	cmp    BYTE PTR [rsp+0x48],r13b
   14001c180:	je     0x14001bf26
   14001c186:	mov    rax,QWORD PTR [rsp+0x40]
   14001c18b:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001c192:	jmp    0x14001bf26
   14001c197:	int3   
   14001c198:	sub    rsp,0x5a8
   14001c19f:	test   BYTE PTR [rip+0x2d6b2],0x1        # 0x140049858
   14001c1a6:	je     0x14001c1b2
   14001c1a8:	mov    ecx,0xa
   14001c1ad:	call   0x140019a74
   14001c1b2:	call   0x1400207a8
   14001c1b7:	test   rax,rax
   14001c1ba:	je     0x14001c1c6
   14001c1bc:	mov    ecx,0x16
   14001c1c1:	call   0x1400207b4
   14001c1c6:	test   BYTE PTR [rip+0x2d68b],0x2        # 0x140049858
   14001c1cd:	je     0x14001c22e
   14001c1cf:	lea    rcx,[rsp+0xd0]
   14001c1d7:	call   QWORD PTR [rip+0x1a0f3]        # 0x1400362d0
   14001c1dd:	lea    rcx,[rsp+0x30]
   14001c1e2:	xor    edx,edx
   14001c1e4:	mov    r8d,0x98
   14001c1ea:	call   0x140015b00
   14001c1ef:	mov    rax,QWORD PTR [rsp+0x5a8]
   14001c1f7:	xor    ecx,ecx
   14001c1f9:	mov    QWORD PTR [rsp+0x40],rax
   14001c1fe:	lea    rax,[rsp+0x30]
   14001c203:	mov    DWORD PTR [rsp+0x30],0x40000015
   14001c20b:	mov    QWORD PTR [rsp+0x20],rax
   14001c210:	lea    rax,[rsp+0xd0]
   14001c218:	mov    QWORD PTR [rsp+0x28],rax
   14001c21d:	call   QWORD PTR [rip+0x1a0cd]        # 0x1400362f0
   14001c223:	lea    rcx,[rsp+0x20]
   14001c228:	call   QWORD PTR [rip+0x1a0ca]        # 0x1400362f8
   14001c22e:	mov    ecx,0x3
   14001c233:	call   0x1400171f0
   14001c238:	int3   
   14001c239:	int3   
   14001c23a:	int3   
   14001c23b:	int3   
   14001c23c:	mov    eax,DWORD PTR [rip+0x2d616]        # 0x140049858
   14001c242:	mov    r8d,edx
   14001c245:	and    ecx,edx
   14001c247:	not    r8d
   14001c24a:	and    r8d,eax
   14001c24d:	or     r8d,ecx
   14001c250:	mov    DWORD PTR [rip+0x2d601],r8d        # 0x140049858
   14001c257:	ret    
   14001c258:	rex push rbp
   14001c25a:	push   rsi
   14001c25b:	push   rdi
   14001c25c:	push   r12
   14001c25e:	push   r13
   14001c260:	push   r14
   14001c262:	push   r15
   14001c264:	sub    rsp,0xc0
   14001c26b:	mov    rax,QWORD PTR [rip+0x2cb4e]        # 0x140048dc0
   14001c272:	xor    rax,rsp
   14001c275:	mov    QWORD PTR [rsp+0xb0],rax
   14001c27d:	mov    rbp,QWORD PTR [rsp+0x120]
   14001c285:	mov    r15d,r9d
   14001c288:	mov    r14d,r8d
   14001c28b:	mov    r13,rcx
   14001c28e:	cmp    edx,0x1
   14001c291:	jne    0x14001c3b4
   14001c297:	xor    esi,esi
   14001c299:	lea    r9,[rsp+0x30]
   14001c29e:	mov    r8d,r15d
   14001c2a1:	and    DWORD PTR [rsp+0x28],esi
   14001c2a5:	mov    edx,r14d
   14001c2a8:	lea    rdi,[rsp+0x30]
   14001c2ad:	mov    DWORD PTR [rsp+0x20],0x80
   14001c2b5:	call   0x140023928
   14001c2ba:	mov    r12d,eax
   14001c2bd:	test   eax,eax
   14001c2bf:	jne    0x14001c32a
   14001c2c1:	call   QWORD PTR [rip+0x1a199]        # 0x140036460
   14001c2c7:	cmp    eax,0x7a
   14001c2ca:	jne    0x14001c352
   14001c2d0:	and    DWORD PTR [rsp+0x28],esi
   14001c2d4:	and    DWORD PTR [rsp+0x20],esi
   14001c2d8:	xor    r9d,r9d
   14001c2db:	mov    r8d,r15d
   14001c2de:	mov    edx,r14d
   14001c2e1:	mov    rcx,r13
   14001c2e4:	call   0x140023928
   14001c2e9:	movsxd r12,eax
   14001c2ec:	test   eax,eax
   14001c2ee:	je     0x14001c352
   14001c2f0:	mov    esi,0x1
   14001c2f5:	mov    rcx,r12
   14001c2f8:	mov    rdx,rsi
   14001c2fb:	call   0x14001c490
   14001c300:	mov    rdi,rax
   14001c303:	test   rax,rax
   14001c306:	je     0x14001c352
   14001c308:	and    DWORD PTR [rsp+0x28],0x0
   14001c30d:	mov    r9,rax
   14001c310:	mov    r8d,r15d
   14001c313:	mov    edx,r14d
   14001c316:	mov    rcx,r13
   14001c319:	mov    DWORD PTR [rsp+0x20],r12d
   14001c31e:	call   0x140023928
   14001c323:	mov    r12d,eax
   14001c326:	test   eax,eax
   14001c328:	je     0x14001c34a
   14001c32a:	movsxd r13,r12d
   14001c32d:	mov    edx,0x1
   14001c332:	mov    rcx,r13
   14001c335:	call   0x14001c490
   14001c33a:	mov    rcx,rax
   14001c33d:	mov    QWORD PTR [rbp+0x0],rax
   14001c341:	test   rax,rax
   14001c344:	jne    0x14001c378
   14001c346:	test   esi,esi
   14001c348:	je     0x14001c352
   14001c34a:	mov    rcx,rdi
   14001c34d:	call   0x140014f10
   14001c352:	or     eax,0xffffffff
   14001c355:	mov    rcx,QWORD PTR [rsp+0xb0]
   14001c35d:	xor    rcx,rsp
   14001c360:	call   0x1400144f0
   14001c365:	add    rsp,0xc0
   14001c36c:	pop    r15
   14001c36e:	pop    r14
   14001c370:	pop    r13
   14001c372:	pop    r12
   14001c374:	pop    rdi
   14001c375:	pop    rsi
   14001c376:	pop    rbp
   14001c377:	ret    
   14001c378:	lea    eax,[r12-0x1]
   14001c37d:	mov    r8,rdi
   14001c380:	mov    rdx,r13
   14001c383:	movsxd r9,eax
   14001c386:	call   0x140016c08
   14001c38b:	test   eax,eax
   14001c38d:	je     0x14001c3a4
   14001c38f:	and    QWORD PTR [rsp+0x20],0x0
   14001c395:	xor    r9d,r9d
   14001c398:	xor    r8d,r8d
   14001c39b:	xor    edx,edx
   14001c39d:	xor    ecx,ecx
   14001c39f:	call   0x140014880
   14001c3a4:	test   esi,esi
   14001c3a6:	je     0x14001c3b0
   14001c3a8:	mov    rcx,rdi
   14001c3ab:	call   0x140014f10
   14001c3b0:	xor    eax,eax
   14001c3b2:	jmp    0x14001c355
   14001c3b4:	test   edx,edx
   14001c3b6:	jne    0x14001c352
   14001c3b8:	and    DWORD PTR [rsp+0x28],edx
   14001c3bc:	lea    rdi,[rip+0x32bd5]        # 0x14004ef98
   14001c3c3:	mov    r8d,r15d
   14001c3c6:	mov    edx,r14d
   14001c3c9:	mov    r9,rdi
   14001c3cc:	mov    DWORD PTR [rsp+0x20],0x4
   14001c3d4:	call   0x1400236f0
   14001c3d9:	test   eax,eax
   14001c3db:	je     0x14001c352
   14001c3e1:	mov    BYTE PTR [rbp+0x0],0x0
   14001c3e5:	movzx  esi,BYTE PTR [rdi]
   14001c3e8:	mov    ecx,esi
   14001c3ea:	call   0x1400234e8
   14001c3ef:	test   eax,eax
   14001c3f1:	je     0x14001c3b0
   14001c3f3:	mov    cl,BYTE PTR [rbp+0x0]
   14001c3f6:	add    rdi,0x2
   14001c3fa:	mov    al,cl
   14001c3fc:	shl    al,0x2
   14001c3ff:	add    cl,al
   14001c401:	lea    rax,[rip+0x32b98]        # 0x14004efa0
   14001c408:	add    cl,cl
   14001c40a:	add    cl,sil
   14001c40d:	sub    cl,0x30
   14001c410:	cmp    rdi,rax
   14001c413:	mov    BYTE PTR [rbp+0x0],cl
   14001c416:	jl     0x14001c3e5
   14001c418:	jmp    0x14001c3b0
   14001c41a:	int3   
   14001c41b:	int3   
   14001c41c:	mov    QWORD PTR [rip+0x32b7d],rcx        # 0x14004efa0
   14001c423:	ret    
   14001c424:	mov    QWORD PTR [rsp+0x8],rbx
   14001c429:	mov    QWORD PTR [rsp+0x10],rbp
   14001c42e:	mov    QWORD PTR [rsp+0x18],rsi
   14001c433:	push   rdi
   14001c434:	sub    rsp,0x20
   14001c438:	xor    edi,edi
   14001c43a:	mov    rsi,rcx
   14001c43d:	or     ebp,0xffffffff
   14001c440:	mov    rcx,rsi
   14001c443:	call   0x140014f50
   14001c448:	mov    rbx,rax
   14001c44b:	test   rax,rax
   14001c44e:	jne    0x14001c478
   14001c450:	cmp    DWORD PTR [rip+0x32b52],eax        # 0x14004efa8
   14001c456:	jbe    0x14001c478
   14001c458:	mov    ecx,edi
   14001c45a:	call   QWORD PTR [rip+0x19d20]        # 0x140036180
   14001c460:	lea    r11d,[rdi+0x3e8]
   14001c467:	cmp    r11d,DWORD PTR [rip+0x32b3a]        # 0x14004efa8
   14001c46e:	mov    edi,r11d
   14001c471:	cmova  edi,ebp
   14001c474:	cmp    edi,ebp
   14001c476:	jne    0x14001c440
   14001c478:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c47d:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c482:	mov    rax,rbx
   14001c485:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c48a:	add    rsp,0x20
   14001c48e:	pop    rdi
   14001c48f:	ret    
   14001c490:	mov    rax,rsp
   14001c493:	mov    QWORD PTR [rax+0x8],rbx
   14001c497:	mov    QWORD PTR [rax+0x10],rbp
   14001c49b:	mov    QWORD PTR [rax+0x18],rsi
   14001c49f:	mov    QWORD PTR [rax+0x20],rdi
   14001c4a3:	push   r12
   14001c4a5:	sub    rsp,0x20
   14001c4a9:	xor    edi,edi
   14001c4ab:	mov    rsi,rdx
   14001c4ae:	mov    rbp,rcx
   14001c4b1:	or     r12d,0xffffffff
   14001c4b5:	xor    r8d,r8d
   14001c4b8:	mov    rdx,rsi
   14001c4bb:	mov    rcx,rbp
   14001c4be:	call   0x140020a98
   14001c4c3:	mov    rbx,rax
   14001c4c6:	test   rax,rax
   14001c4c9:	jne    0x14001c4f5
   14001c4cb:	cmp    DWORD PTR [rip+0x32ad7],eax        # 0x14004efa8
   14001c4d1:	jbe    0x14001c4f5
   14001c4d3:	mov    ecx,edi
   14001c4d5:	call   QWORD PTR [rip+0x19ca5]        # 0x140036180
   14001c4db:	lea    r11d,[rdi+0x3e8]
   14001c4e2:	cmp    r11d,DWORD PTR [rip+0x32abf]        # 0x14004efa8
   14001c4e9:	mov    edi,r11d
   14001c4ec:	cmova  edi,r12d
   14001c4f0:	cmp    edi,r12d
   14001c4f3:	jne    0x14001c4b5
   14001c4f5:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c4fa:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c4ff:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c504:	mov    rax,rbx
   14001c507:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c50c:	add    rsp,0x20
   14001c510:	pop    r12
   14001c512:	ret    
   14001c513:	int3   
   14001c514:	mov    rax,rsp
   14001c517:	mov    QWORD PTR [rax+0x8],rbx
   14001c51b:	mov    QWORD PTR [rax+0x10],rbp
   14001c51f:	mov    QWORD PTR [rax+0x18],rsi
   14001c523:	mov    QWORD PTR [rax+0x20],rdi
   14001c527:	push   r12
   14001c529:	sub    rsp,0x20
   14001c52d:	xor    esi,esi
   14001c52f:	mov    rdi,rdx
   14001c532:	mov    rbp,rcx
   14001c535:	or     r12d,0xffffffff
   14001c539:	mov    rdx,rdi
   14001c53c:	mov    rcx,rbp
   14001c53f:	call   0x140015fd0
   14001c544:	mov    rbx,rax
   14001c547:	test   rax,rax
   14001c54a:	jne    0x14001c57b
   14001c54c:	test   rdi,rdi
   14001c54f:	je     0x14001c57b
   14001c551:	cmp    DWORD PTR [rip+0x32a51],eax        # 0x14004efa8
   14001c557:	jbe    0x14001c57b
   14001c559:	mov    ecx,esi
   14001c55b:	call   QWORD PTR [rip+0x19c1f]        # 0x140036180
   14001c561:	lea    r11d,[rsi+0x3e8]
   14001c568:	cmp    r11d,DWORD PTR [rip+0x32a39]        # 0x14004efa8
   14001c56f:	mov    esi,r11d
   14001c572:	cmova  esi,r12d
   14001c576:	cmp    esi,r12d
   14001c579:	jne    0x14001c539
   14001c57b:	mov    rbp,QWORD PTR [rsp+0x38]
   14001c580:	mov    rsi,QWORD PTR [rsp+0x40]
   14001c585:	mov    rdi,QWORD PTR [rsp+0x48]
   14001c58a:	mov    rax,rbx
   14001c58d:	mov    rbx,QWORD PTR [rsp+0x30]
   14001c592:	add    rsp,0x20
   14001c596:	pop    r12
   14001c598:	ret    
   14001c599:	int3   
   14001c59a:	int3   
   14001c59b:	int3   
   14001c59c:	mov    QWORD PTR [rsp+0x8],rbx
   14001c5a1:	mov    QWORD PTR [rsp+0x10],rbp
   14001c5a6:	mov    QWORD PTR [rsp+0x18],rsi
   14001c5ab:	push   rdi
   14001c5ac:	push   r12
   14001c5ae:	push   r13
   14001c5b0:	sub    rsp,0x20
   14001c5b4:	xor    esi,esi
   14001c5b6:	mov    rdi,r8
   14001c5b9:	mov    rbp,rdx
   14001c5bc:	or     r13d,0xffffffff
   14001c5c0:	mov    r12,rcx
   14001c5c3:	mov    r8,rdi
   14001c5c6:	mov    rdx,rbp
   14001c5c9:	mov    rcx,r12
   14001c5cc:	call   0x14002399c
   14001c5d1:	mov    rbx,rax
   14001c5d4:	test   rax,rax
   14001c5d7:	jne    0x14001c608
   14001c5d9:	test   rdi,rdi
   14001c5dc:	je     0x14001c608
   14001c5de:	cmp    DWORD PTR [rip+0x329c4],eax        # 0x14004efa8
   14001c5e4:	jbe    0x14001c608
   14001c5e6:	mov    ecx,esi
   14001c5e8:	call   QWORD PTR [rip+0x19b92]        # 0x140036180
   14001c5ee:	lea    r11d,[rsi+0x3e8]
   14001c5f5:	cmp    r11d,DWORD PTR [rip+0x329ac]        # 0x14004efa8
   14001c5fc:	mov    esi,r11d
   14001c5ff:	cmova  esi,r13d
   14001c603:	cmp    esi,r13d
   14001c606:	jne    0x14001c5c3
   14001c608:	mov    rbp,QWORD PTR [rsp+0x48]
   14001c60d:	mov    rsi,QWORD PTR [rsp+0x50]
   14001c612:	mov    rax,rbx
   14001c615:	mov    rbx,QWORD PTR [rsp+0x40]
   14001c61a:	add    rsp,0x20
   14001c61e:	pop    r13
   14001c620:	pop    r12
   14001c622:	pop    rdi
   14001c623:	ret    
   14001c624:	int3   
   14001c625:	int3   
   14001c626:	int3   
   14001c627:	int3   
   14001c628:	int3   
   14001c629:	int3   
   14001c62a:	int3   
   14001c62b:	int3   
   14001c62c:	int3   
   14001c62d:	int3   
   14001c62e:	int3   
   14001c62f:	int3   
   14001c630:	int3   
   14001c631:	int3   
   14001c632:	int3   
   14001c633:	int3   
   14001c634:	int3   
   14001c635:	int3   
   14001c636:	data16 nop WORD PTR [rax+rax*1+0x0]
   14001c640:	sub    rsp,0x4d8
   14001c647:	xor    r8,r8
   14001c64a:	xor    r9,r9
   14001c64d:	mov    QWORD PTR [rsp+0x20],rsp
   14001c652:	mov    QWORD PTR [rsp+0x28],r8
   14001c657:	call   0x140031fb4
   14001c65c:	add    rsp,0x4d8
   14001c663:	ret    
   14001c664:	int3   
   14001c665:	int3   
   14001c666:	int3   
   14001c667:	int3   
   14001c668:	int3   
   14001c669:	int3   
   14001c66a:	nop    WORD PTR [rax+rax*1+0x0]
   14001c670:	mov    QWORD PTR [rsp+0x8],rcx
   14001c675:	mov    QWORD PTR [rsp+0x18],rdx
   14001c67a:	mov    DWORD PTR [rsp+0x10],r8d
   14001c67f:	mov    r9,0x19930520
   14001c686:	jmp    0x14001c690
   14001c688:	int3   
   14001c689:	int3   
   14001c68a:	int3   
   14001c68b:	int3   
   14001c68c:	int3   
   14001c68d:	int3   
   14001c68e:	xchg   ax,ax
   14001c690:	ret    
   14001c691:	int3   
   14001c692:	int3   
   14001c693:	int3   
   14001c694:	int3   
   14001c695:	int3   
   14001c696:	int3   
   14001c697:	nop    WORD PTR [rax+rax*1+0x0]
   14001c6a0:	ret    
   14001c6a1:	int3   
   14001c6a2:	int3   
   14001c6a3:	int3   
   14001c6a4:	int3   
   14001c6a5:	int3   
   14001c6a6:	int3   
   14001c6a7:	int3   
   14001c6a8:	int3   
   14001c6a9:	int3   
   14001c6aa:	int3   
   14001c6ab:	int3   
   14001c6ac:	int3   
   14001c6ad:	int3   
   14001c6ae:	int3   
   14001c6af:	int3   
   14001c6b0:	mov    rax,rcx
   14001c6b3:	mov    ecx,0x5a4d
   14001c6b8:	cmp    WORD PTR [rax],cx
   14001c6bb:	je     0x14001c6c0
   14001c6bd:	xor    eax,eax
   14001c6bf:	ret    
   14001c6c0:	movsxd rcx,DWORD PTR [rax+0x3c]
   14001c6c4:	add    rcx,rax
   14001c6c7:	xor    eax,eax
   14001c6c9:	cmp    DWORD PTR [rcx],0x4550
   14001c6cf:	jne    0x14001c6dd
   14001c6d1:	mov    edx,0x20b
   14001c6d6:	cmp    WORD PTR [rcx+0x18],dx
   14001c6da:	sete   al
   14001c6dd:	repz ret 
   14001c6df:	int3   
   14001c6e0:	movsxd r8,DWORD PTR [rcx+0x3c]
   14001c6e4:	xor    r9d,r9d
   14001c6e7:	mov    r10,rdx
   14001c6ea:	add    r8,rcx
   14001c6ed:	movzx  eax,WORD PTR [r8+0x14]
   14001c6f2:	movzx  r11d,WORD PTR [r8+0x6]
   14001c6f7:	lea    rcx,[rax+r8*1+0x18]
   14001c6fc:	test   r11d,r11d
   14001c6ff:	je     0x14001c71f
   14001c701:	mov    edx,DWORD PTR [rcx+0xc]
   14001c704:	cmp    r10,rdx
   14001c707:	jb     0x14001c713
   14001c709:	mov    eax,DWORD PTR [rcx+0x8]
   14001c70c:	add    eax,edx
   14001c70e:	cmp    r10,rax
   14001c711:	jb     0x14001c722
   14001c713:	inc    r9d
   14001c716:	add    rcx,0x28
   14001c71a:	cmp    r9d,r11d
   14001c71d:	jb     0x14001c701
   14001c71f:	xor    eax,eax
   14001c721:	ret    
   14001c722:	mov    rax,rcx
   14001c725:	ret    
   14001c726:	int3   
   14001c727:	int3   
   14001c728:	int3   
   14001c729:	int3   
   14001c72a:	int3   
   14001c72b:	int3   
   14001c72c:	int3   
   14001c72d:	int3   
   14001c72e:	int3   
   14001c72f:	int3   
   14001c730:	sub    rsp,0x28
   14001c734:	mov    r8,rcx
   14001c737:	lea    r9,[rip+0xfffffffffffe38c2]        # 0x140000000
   14001c73e:	mov    rcx,r9
   14001c741:	call   0x14001c6b0
   14001c746:	test   eax,eax
   14001c748:	je     0x14001c76c
   14001c74a:	sub    r8,r9
   14001c74d:	mov    rdx,r8
   14001c750:	mov    rcx,r9
   14001c753:	call   0x14001c6e0
   14001c758:	test   rax,rax
   14001c75b:	je     0x14001c76c
   14001c75d:	mov    eax,DWORD PTR [rax+0x24]
   14001c760:	shr    eax,0x1f
   14001c763:	not    eax
   14001c765:	and    eax,0x1
   14001c768:	jmp    0x14001c76c
   14001c76a:	xor    eax,eax
   14001c76c:	add    rsp,0x28
   14001c770:	ret    
   14001c771:	int3   
   14001c772:	int3   
   14001c773:	int3   
   14001c774:	jmp    0x14001c77d
   14001c776:	cmp    al,dl
   14001c778:	je     0x14001c787
   14001c77a:	inc    rcx
   14001c77d:	mov    al,BYTE PTR [rcx]
   14001c77f:	test   al,al
   14001c781:	jne    0x14001c776
   14001c783:	cmp    al,dl
   14001c785:	jne    0x14001c78b
   14001c787:	mov    rax,rcx
   14001c78a:	ret    
   14001c78b:	xor    eax,eax
   14001c78d:	ret    
   14001c78e:	int3   
   14001c78f:	int3   
   14001c790:	mov    rax,rsp
   14001c793:	mov    QWORD PTR [rax+0x10],rbx
   14001c797:	mov    QWORD PTR [rax+0x18],rbp
   14001c79b:	mov    QWORD PTR [rax+0x20],rsi
   14001c79f:	mov    DWORD PTR [rax+0x8],ecx
   14001c7a2:	push   rdi
   14001c7a3:	sub    rsp,0x20
   14001c7a7:	mov    rcx,rdx
   14001c7aa:	mov    rbx,rdx
   14001c7ad:	call   0x140024784
   14001c7b2:	mov    ecx,DWORD PTR [rbx+0x18]
   14001c7b5:	movsxd rsi,eax
   14001c7b8:	test   cl,0x82
   14001c7bb:	jne    0x14001c7d4
   14001c7bd:	call   0x140015f48
   14001c7c2:	mov    DWORD PTR [rax],0x9
   14001c7c8:	or     DWORD PTR [rbx+0x18],0x20
   14001c7cc:	or     eax,0xffffffff
   14001c7cf:	jmp    0x14001c908
   14001c7d4:	test   cl,0x40
   14001c7d7:	je     0x14001c7e6
   14001c7d9:	call   0x140015f48
   14001c7de:	mov    DWORD PTR [rax],0x22
   14001c7e4:	jmp    0x14001c7c8
   14001c7e6:	xor    edi,edi
   14001c7e8:	test   cl,0x1
   14001c7eb:	je     0x14001c806
   14001c7ed:	mov    DWORD PTR [rbx+0x8],edi
   14001c7f0:	test   cl,0x10
   14001c7f3:	je     0x14001c882
   14001c7f9:	mov    rax,QWORD PTR [rbx+0x10]
   14001c7fd:	and    ecx,0xfffffffe
   14001c800:	mov    QWORD PTR [rbx],rax
   14001c803:	mov    DWORD PTR [rbx+0x18],ecx
   14001c806:	mov    eax,DWORD PTR [rbx+0x18]
   14001c809:	mov    DWORD PTR [rbx+0x8],edi
   14001c80c:	and    eax,0xffffffef
   14001c80f:	or     eax,0x2
   14001c812:	mov    DWORD PTR [rbx+0x18],eax
   14001c815:	test   eax,0x10c
   14001c81a:	jne    0x14001c84b
   14001c81c:	call   0x140024560
   14001c821:	add    rax,0x30
   14001c825:	cmp    rbx,rax
   14001c828:	je     0x14001c838
   14001c82a:	call   0x140024560
   14001c82f:	add    rax,0x60
   14001c833:	cmp    rbx,rax
   14001c836:	jne    0x14001c843
   14001c838:	mov    ecx,esi
   14001c83a:	call   0x1400244f0
   14001c83f:	cmp    eax,edi
   14001c841:	jne    0x14001c84b
   14001c843:	mov    rcx,rbx
   14001c846:	call   0x14002449c
   14001c84b:	test   DWORD PTR [rbx+0x18],0x108
   14001c852:	je     0x14001c8e5
   14001c858:	mov    ebp,DWORD PTR [rbx]
   14001c85a:	mov    rdx,QWORD PTR [rbx+0x10]
   14001c85e:	sub    ebp,DWORD PTR [rbx+0x10]
   14001c861:	lea    rax,[rdx+0x1]
   14001c865:	mov    QWORD PTR [rbx],rax
   14001c868:	mov    eax,DWORD PTR [rbx+0x24]
   14001c86b:	dec    eax
   14001c86d:	cmp    ebp,edi
   14001c86f:	mov    DWORD PTR [rbx+0x8],eax
   14001c872:	jle    0x14001c88d
   14001c874:	mov    r8d,ebp
   14001c877:	mov    ecx,esi
   14001c879:	call   0x140024368
   14001c87e:	mov    edi,eax
   14001c880:	jmp    0x14001c8d9
   14001c882:	or     ecx,0x20
   14001c885:	mov    DWORD PTR [rbx+0x18],ecx
   14001c888:	jmp    0x14001c7cc
   14001c88d:	cmp    esi,0xffffffff
   14001c890:	je     0x14001c8b5
   14001c892:	cmp    esi,0xfffffffe
   14001c895:	je     0x14001c8b5
   14001c897:	mov    rcx,rsi
   14001c89a:	mov    rax,rsi
   14001c89d:	lea    rdx,[rip+0x33d9c]        # 0x140050640
   14001c8a4:	and    ecx,0x1f
   14001c8a7:	sar    rax,0x5
   14001c8ab:	imul   rcx,rcx,0x58
   14001c8af:	add    rcx,QWORD PTR [rdx+rax*8]
   14001c8b3:	jmp    0x14001c8bc
   14001c8b5:	lea    rcx,[rip+0x2cf14]        # 0x1400497d0
   14001c8bc:	test   BYTE PTR [rcx+0x8],0x20
   14001c8c0:	je     0x14001c8d9
   14001c8c2:	xor    edx,edx
   14001c8c4:	mov    ecx,esi
   14001c8c6:	lea    r8d,[rdx+0x2]
   14001c8ca:	call   0x140023ad0
   14001c8cf:	cmp    rax,0xffffffffffffffff
   14001c8d3:	je     0x14001c7c8
   14001c8d9:	mov    rcx,QWORD PTR [rbx+0x10]
   14001c8dd:	mov    al,BYTE PTR [rsp+0x30]
   14001c8e1:	mov    BYTE PTR [rcx],al
   14001c8e3:	jmp    0x14001c8fb
   14001c8e5:	mov    ebp,0x1
   14001c8ea:	lea    rdx,[rsp+0x30]
   14001c8ef:	mov    ecx,esi
   14001c8f1:	mov    r8d,ebp
   14001c8f4:	call   0x140024368
   14001c8f9:	mov    edi,eax
   14001c8fb:	cmp    edi,ebp
   14001c8fd:	jne    0x14001c7c8
   14001c903:	movzx  eax,BYTE PTR [rsp+0x30]
   14001c908:	mov    rbx,QWORD PTR [rsp+0x38]
   14001c90d:	mov    rbp,QWORD PTR [rsp+0x40]
   14001c912:	mov    rsi,QWORD PTR [rsp+0x48]
   14001c917:	add    rsp,0x20
   14001c91b:	pop    rdi
   14001c91c:	ret    
   14001c91d:	int3   
   14001c91e:	int3   
   14001c91f:	int3   
   14001c920:	sub    rsp,0x38
   14001c924:	mov    rax,QWORD PTR [rip+0x2c495]        # 0x140048dc0
   14001c92b:	xor    rax,rsp
   14001c92e:	mov    QWORD PTR [rsp+0x20],rax
   14001c933:	mov    al,BYTE PTR [rdx]
   14001c935:	xor    r9d,r9d
   14001c938:	mov    r11,rdx
   14001c93b:	mov    QWORD PTR [rsp],r9
   14001c93f:	mov    QWORD PTR [rsp+0x8],r9
   14001c944:	mov    QWORD PTR [rsp+0x10],r9
   14001c949:	mov    QWORD PTR [rsp+0x18],r9
   14001c94e:	mov    r10,rcx
   14001c951:	jmp    0x14001c96f
   14001c953:	movzx  r8d,al
   14001c957:	movzx  eax,al
   14001c95a:	and    eax,0x7
   14001c95d:	shr    r8,0x3
   14001c961:	mov    cl,al
   14001c963:	shl    dl,cl
   14001c965:	or     BYTE PTR [rsp+r8*1],dl
   14001c969:	inc    r11
   14001c96c:	mov    al,BYTE PTR [r11]
   14001c96f:	mov    edx,0x1
   14001c974:	cmp    al,r9b
   14001c977:	jne    0x14001c953
   14001c979:	or     BYTE PTR [rsp],dl
   14001c97c:	jmp    0x14001c989
   14001c97e:	inc    r9d
   14001c981:	mov    edx,0x1
   14001c986:	inc    r10
   14001c989:	movzx  r8d,BYTE PTR [r10]
   14001c98d:	mov    ecx,r8d
   14001c990:	shr    r8,0x3
   14001c994:	and    ecx,0x7
   14001c997:	shl    edx,cl
   14001c999:	test   BYTE PTR [rsp+r8*1],dl
   14001c99d:	je     0x14001c97e
   14001c99f:	movsxd rax,r9d
   14001c9a2:	mov    rcx,QWORD PTR [rsp+0x20]
   14001c9a7:	xor    rcx,rsp
   14001c9aa:	call   0x1400144f0
   14001c9af:	add    rsp,0x38
   14001c9b3:	ret    
   14001c9b4:	rex push rbx
   14001c9b6:	sub    rsp,0x20
   14001c9ba:	test   BYTE PTR [rdx+0x18],0x40
   14001c9be:	mov    rbx,r8
   14001c9c1:	je     0x14001c9cf
   14001c9c3:	cmp    QWORD PTR [rdx+0x10],0x0
   14001c9c8:	jne    0x14001c9cf
   14001c9ca:	inc    DWORD PTR [r8]
   14001c9cd:	jmp    0x14001c9f5
   14001c9cf:	add    DWORD PTR [rdx+0x8],0xffffffff
   14001c9d3:	js     0x14001c9e2
   14001c9d5:	mov    rax,QWORD PTR [rdx]
   14001c9d8:	mov    BYTE PTR [rax],cl
   14001c9da:	inc    QWORD PTR [rdx]
   14001c9dd:	movzx  eax,cl
   14001c9e0:	jmp    0x14001c9ea
   14001c9e2:	movsx  ecx,cl
   14001c9e5:	call   0x14001c790
   14001c9ea:	cmp    eax,0xffffffff
   14001c9ed:	jne    0x14001c9f3
   14001c9ef:	or     DWORD PTR [rbx],eax
   14001c9f1:	jmp    0x14001c9f5
   14001c9f3:	inc    DWORD PTR [rbx]
   14001c9f5:	add    rsp,0x20
   14001c9f9:	pop    rbx
   14001c9fa:	ret    
   14001c9fb:	int3   
   14001c9fc:	test   edx,edx
   14001c9fe:	jle    0x14001ca4c
   14001ca00:	mov    QWORD PTR [rsp+0x8],rbx
   14001ca05:	mov    QWORD PTR [rsp+0x10],rbp
   14001ca0a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ca0f:	push   rdi
   14001ca10:	sub    rsp,0x20
   14001ca14:	mov    rdi,r9
   14001ca17:	mov    rsi,r8
   14001ca1a:	mov    ebx,edx
   14001ca1c:	mov    bpl,cl
   14001ca1f:	mov    r8,rdi
   14001ca22:	mov    rdx,rsi
   14001ca25:	mov    cl,bpl
   14001ca28:	dec    ebx
   14001ca2a:	call   0x14001c9b4
   14001ca2f:	cmp    DWORD PTR [rdi],0xffffffff
   14001ca32:	je     0x14001ca38
   14001ca34:	test   ebx,ebx
   14001ca36:	jg     0x14001ca1f
   14001ca38:	mov    rbx,QWORD PTR [rsp+0x30]
   14001ca3d:	mov    rbp,QWORD PTR [rsp+0x38]
   14001ca42:	mov    rsi,QWORD PTR [rsp+0x40]
   14001ca47:	add    rsp,0x20
   14001ca4b:	pop    rdi
   14001ca4c:	ret    
   14001ca4d:	int3   
   14001ca4e:	int3   
   14001ca4f:	int3   
   14001ca50:	mov    QWORD PTR [rsp+0x8],rbx
   14001ca55:	mov    QWORD PTR [rsp+0x10],rbp
   14001ca5a:	mov    QWORD PTR [rsp+0x18],rsi
   14001ca5f:	push   rdi
   14001ca60:	sub    rsp,0x20
   14001ca64:	test   BYTE PTR [r8+0x18],0x40
   14001ca69:	mov    rdi,r9
   14001ca6c:	mov    rsi,r8
   14001ca6f:	mov    ebx,edx
   14001ca71:	mov    rbp,rcx
   14001ca74:	je     0x14001ca82
   14001ca76:	cmp    QWORD PTR [r8+0x10],0x0
   14001ca7b:	jne    0x14001ca82
   14001ca7d:	add    DWORD PTR [r9],edx
   14001ca80:	jmp    0x14001cab9
   14001ca82:	test   edx,edx
   14001ca84:	jle    0x14001cab9
   14001ca86:	mov    cl,BYTE PTR [rbp+0x0]
   14001ca89:	mov    r8,rdi
   14001ca8c:	mov    rdx,rsi
   14001ca8f:	dec    ebx
   14001ca91:	call   0x14001c9b4
   14001ca96:	inc    rbp
   14001ca99:	cmp    DWORD PTR [rdi],0xffffffff
   14001ca9c:	jne    0x14001cab5
   14001ca9e:	call   0x140015f48
   14001caa3:	cmp    DWORD PTR [rax],0x2a
   14001caa6:	jne    0x14001cab9
   14001caa8:	mov    r8,rdi
   14001caab:	mov    rdx,rsi
   14001caae:	mov    cl,0x3f
   14001cab0:	call   0x14001c9b4
   14001cab5:	test   ebx,ebx
   14001cab7:	jg     0x14001ca86
   14001cab9:	mov    rbx,QWORD PTR [rsp+0x30]
   14001cabe:	mov    rbp,QWORD PTR [rsp+0x38]
   14001cac3:	mov    rsi,QWORD PTR [rsp+0x40]
   14001cac8:	add    rsp,0x20
   14001cacc:	pop    rdi
   14001cacd:	ret    
   14001cace:	int3   
   14001cacf:	int3   
   14001cad0:	mov    QWORD PTR [rsp+0x18],rbx
   14001cad5:	push   rbp
   14001cad6:	push   rsi
   14001cad7:	push   rdi
   14001cad8:	push   r12
   14001cada:	push   r13
   14001cadc:	push   r14
   14001cade:	push   r15
   14001cae0:	sub    rsp,0x2d0
   14001cae7:	mov    rax,QWORD PTR [rip+0x2c2d2]        # 0x140048dc0
   14001caee:	xor    rax,rsp
   14001caf1:	mov    QWORD PTR [rsp+0x2c8],rax
   14001caf9:	xor    eax,eax
   14001cafb:	mov    rbx,rcx
   14001cafe:	mov    QWORD PTR [rsp+0x68],rcx
   14001cb03:	mov    rdi,rdx
   14001cb06:	lea    rcx,[rsp+0x78]
   14001cb0b:	mov    rdx,r8
   14001cb0e:	mov    r13,r9
   14001cb11:	mov    DWORD PTR [rsp+0x60],eax
   14001cb15:	mov    r12d,eax
   14001cb18:	mov    DWORD PTR [rsp+0x54],eax
   14001cb1c:	mov    r14d,eax
   14001cb1f:	mov    DWORD PTR [rsp+0x48],eax
   14001cb23:	mov    DWORD PTR [rsp+0x58],eax
   14001cb27:	mov    DWORD PTR [rsp+0x50],eax
   14001cb2b:	call   0x140014a6c
   14001cb30:	xor    r10d,r10d
   14001cb33:	cmp    rbx,r10
   14001cb36:	jne    0x14001cb79
   14001cb38:	call   0x140015f48
   14001cb3d:	xor    ebx,ebx
   14001cb3f:	xor    r9d,r9d
   14001cb42:	xor    r8d,r8d
   14001cb45:	xor    edx,edx
   14001cb47:	xor    ecx,ecx
   14001cb49:	mov    DWORD PTR [rax],0x16
   14001cb4f:	mov    QWORD PTR [rsp+0x20],rbx
   14001cb54:	call   0x1400149a8
   14001cb59:	cmp    BYTE PTR [rsp+0x90],bl
   14001cb60:	je     0x14001cb71
   14001cb62:	mov    rax,QWORD PTR [rsp+0x88]
   14001cb6a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001cb71:	or     eax,0xffffffff
   14001cb74:	jmp    0x14001d376
   14001cb79:	or     r15d,0xffffffff
   14001cb7d:	test   BYTE PTR [rbx+0x18],0x40
   14001cb81:	lea    r9,[rip+0xfffffffffffe3478]        # 0x140000000
   14001cb88:	jne    0x14001cc48
   14001cb8e:	mov    rcx,rbx
   14001cb91:	call   0x140024784
   14001cb96:	lea    rdx,[rip+0x2cc33]        # 0x1400497d0
   14001cb9d:	cmp    eax,r15d
   14001cba0:	je     0x14001cbca
   14001cba2:	cmp    eax,0xfffffffe
   14001cba5:	je     0x14001cbca
   14001cba7:	movsxd r8,eax
   14001cbaa:	lea    r9,[rip+0xfffffffffffe344f]        # 0x140000000
   14001cbb1:	mov    rcx,r8
   14001cbb4:	and    r8d,0x1f
   14001cbb8:	sar    rcx,0x5
   14001cbbc:	imul   r8,r8,0x58
   14001cbc0:	add    r8,QWORD PTR [r9+rcx*8+0x50640]
   14001cbc8:	jmp    0x14001cbd4
   14001cbca:	mov    r8,rdx
   14001cbcd:	lea    r9,[rip+0xfffffffffffe342c]        # 0x140000000
   14001cbd4:	test   BYTE PTR [r8+0x38],0x7f
   14001cbd9:	jne    0x14001cc04
   14001cbdb:	cmp    eax,r15d
   14001cbde:	je     0x14001cbfe
   14001cbe0:	cmp    eax,0xfffffffe
   14001cbe3:	je     0x14001cbfe
   14001cbe5:	movsxd rdx,eax
   14001cbe8:	mov    rax,rdx
   14001cbeb:	and    edx,0x1f
   14001cbee:	sar    rax,0x5
   14001cbf2:	imul   rdx,rdx,0x58
   14001cbf6:	add    rdx,QWORD PTR [r9+rax*8+0x50640]
   14001cbfe:	test   BYTE PTR [rdx+0x38],0x80
   14001cc02:	je     0x14001cc45
   14001cc04:	call   0x140015f48
   14001cc09:	xor    ebx,ebx
   14001cc0b:	xor    r9d,r9d
   14001cc0e:	xor    r8d,r8d
   14001cc11:	xor    edx,edx
   14001cc13:	xor    ecx,ecx
   14001cc15:	mov    DWORD PTR [rax],0x16
   14001cc1b:	mov    QWORD PTR [rsp+0x20],rbx
   14001cc20:	call   0x1400149a8
   14001cc25:	cmp    BYTE PTR [rsp+0x90],bl
   14001cc2c:	je     0x14001cc3d
   14001cc2e:	mov    rax,QWORD PTR [rsp+0x88]
   14001cc36:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001cc3d:	mov    eax,r15d
   14001cc40:	jmp    0x14001d376
   14001cc45:	xor    r10d,r10d
   14001cc48:	cmp    rdi,r10
   14001cc4b:	je     0x14001cc04
   14001cc4d:	mov    bpl,BYTE PTR [rdi]
   14001cc50:	mov    esi,r10d
   14001cc53:	mov    DWORD PTR [rsp+0x40],r10d
   14001cc58:	mov    DWORD PTR [rsp+0x44],r10d
   14001cc5d:	mov    edx,r10d
   14001cc60:	mov    QWORD PTR [rsp+0x98],r10
   14001cc68:	cmp    bpl,r10b
   14001cc6b:	je     0x14001d35b
   14001cc71:	mov    rbx,QWORD PTR [rsp+0xa8]
   14001cc79:	mov    r11d,0x200
   14001cc7f:	inc    rdi
   14001cc82:	cmp    esi,r10d
   14001cc85:	mov    QWORD PTR [rsp+0xb0],rdi
   14001cc8d:	jl     0x14001d35b
   14001cc93:	lea    eax,[rbp-0x20]
   14001cc96:	cmp    al,0x58
   14001cc98:	ja     0x14001ccac
   14001cc9a:	movsx  rax,bpl
   14001cc9e:	movsx  ecx,BYTE PTR [rax+r9*1+0x39de0]
   14001cca7:	and    ecx,0xf
   14001ccaa:	jmp    0x14001ccaf
   14001ccac:	mov    ecx,r10d
   14001ccaf:	movsxd rax,edx
   14001ccb2:	movsxd rcx,ecx
   14001ccb5:	lea    rdx,[rax+rcx*8]
   14001ccb9:	movsx  edx,BYTE PTR [rdx+r9*1+0x39e00]
   14001ccc2:	sar    edx,0x4
   14001ccc5:	mov    DWORD PTR [rsp+0x5c],edx
   14001ccc9:	mov    ecx,edx
   14001cccb:	cmp    edx,r10d
   14001ccce:	je     0x14001d44d
   14001ccd4:	sub    ecx,0x1
   14001ccd7:	je     0x14001d565
   14001ccdd:	sub    ecx,0x1
   14001cce0:	je     0x14001d515
   14001cce6:	sub    ecx,0x1
   14001cce9:	je     0x14001d4da
   14001ccef:	sub    ecx,0x1
   14001ccf2:	je     0x14001d4d2
   14001ccf8:	sub    ecx,0x1
   14001ccfb:	je     0x14001d4a1
   14001cd01:	sub    ecx,0x1
   14001cd04:	je     0x14001d3a1
   14001cd0a:	cmp    ecx,0x1
   14001cd0d:	jne    0x14001d34f
   14001cd13:	movsx  eax,bpl
   14001cd17:	cmp    eax,0x64
   14001cd1a:	jg     0x14001ce9e
   14001cd20:	je     0x14001cfa6
   14001cd26:	cmp    eax,0x41
   14001cd29:	je     0x14001ce6f
   14001cd2f:	cmp    eax,0x43
   14001cd32:	je     0x14001ce08
   14001cd38:	cmp    eax,0x45
   14001cd3b:	je     0x14001ce6f
   14001cd41:	cmp    eax,0x47
   14001cd44:	je     0x14001ce6f
   14001cd4a:	cmp    eax,0x53
   14001cd4d:	je     0x14001cdbc
   14001cd4f:	cmp    eax,0x58
   14001cd52:	je     0x14001cf3c
   14001cd58:	cmp    eax,0x5a
   14001cd5b:	je     0x14001cd74
   14001cd5d:	cmp    eax,0x61
   14001cd60:	je     0x14001ce7b
   14001cd66:	cmp    eax,0x63
   14001cd69:	je     0x14001ce16
   14001cd6f:	jmp    0x14001d1bc
   14001cd74:	mov    rax,QWORD PTR [r13+0x0]
   14001cd78:	add    r13,0x8
   14001cd7c:	cmp    rax,r10
   14001cd7f:	je     0x14001cdb0
   14001cd81:	mov    rbx,QWORD PTR [rax+0x8]
   14001cd85:	cmp    rbx,r10
   14001cd88:	je     0x14001cdb0
   14001cd8a:	bt     r12d,0xb
   14001cd8f:	movsx  eax,WORD PTR [rax]
   14001cd92:	jae    0x14001cda6
   14001cd94:	cdq    
   14001cd95:	mov    DWORD PTR [rsp+0x50],0x1
   14001cd9d:	sub    eax,edx
   14001cd9f:	sar    eax,1
   14001cda1:	jmp    0x14001d1b8
   14001cda6:	mov    DWORD PTR [rsp+0x50],r10d
   14001cdab:	jmp    0x14001d1b8
   14001cdb0:	mov    rbx,QWORD PTR [rip+0x2caa9]        # 0x140049860
   14001cdb7:	jmp    0x14001d1ad
   14001cdbc:	test   r12d,0x830
   14001cdc3:	jne    0x14001cdca
   14001cdc5:	bts    r12d,0xb
   14001cdca:	mov    rbx,QWORD PTR [r13+0x0]
   14001cdce:	cmp    r14d,r15d
   14001cdd1:	mov    eax,r14d
   14001cdd4:	mov    ecx,0x7fffffff
   14001cdd9:	cmove  eax,ecx
   14001cddc:	add    r13,0x8
   14001cde0:	test   r12d,0x810
   14001cde7:	je     0x14001cf07
   14001cded:	cmp    rbx,r10
   14001cdf0:	mov    DWORD PTR [rsp+0x50],0x1
   14001cdf8:	cmove  rbx,QWORD PTR [rip+0x2ca68]        # 0x140049868
   14001ce00:	mov    rcx,rbx
   14001ce03:	jmp    0x14001cefa
   14001ce08:	test   r12d,0x830
   14001ce0f:	jne    0x14001ce16
   14001ce11:	bts    r12d,0xb
   14001ce16:	add    r13,0x8
   14001ce1a:	test   r12d,0x810
   14001ce21:	je     0x14001ce4f
   14001ce23:	movzx  r9d,WORD PTR [r13-0x8]
   14001ce28:	lea    rdx,[rsp+0xc0]
   14001ce30:	lea    rcx,[rsp+0x44]
   14001ce35:	mov    r8,r11
   14001ce38:	call   0x140024b60
   14001ce3d:	xor    r10d,r10d
   14001ce40:	cmp    eax,r10d
   14001ce43:	je     0x14001ce62
   14001ce45:	mov    DWORD PTR [rsp+0x58],0x1
   14001ce4d:	jmp    0x14001ce62
   14001ce4f:	mov    al,BYTE PTR [r13-0x8]
   14001ce53:	mov    DWORD PTR [rsp+0x44],0x1
   14001ce5b:	mov    BYTE PTR [rsp+0xc0],al
   14001ce62:	lea    rbx,[rsp+0xc0]
   14001ce6a:	jmp    0x14001d1bc
   14001ce6f:	mov    DWORD PTR [rsp+0x70],0x1
   14001ce77:	add    bpl,0x20
   14001ce7b:	or     r12d,0x40
   14001ce7f:	cmp    r14d,r10d
   14001ce82:	lea    rbx,[rsp+0xc0]
   14001ce8a:	mov    esi,r11d
   14001ce8d:	jge    0x14001d0c0
   14001ce93:	mov    r14d,0x6
   14001ce99:	jmp    0x14001d109
   14001ce9e:	cmp    eax,0x65
   14001cea1:	jl     0x14001d1bc
   14001cea7:	cmp    eax,0x67
   14001ceaa:	jle    0x14001ce7b
   14001ceac:	cmp    eax,0x69
   14001ceaf:	je     0x14001cfa6
   14001ceb5:	cmp    eax,0x6e
   14001ceb8:	je     0x14001cf73
   14001cebe:	cmp    eax,0x6f
   14001cec1:	je     0x14001cf61
   14001cec7:	cmp    eax,0x70
   14001ceca:	je     0x14001cf31
   14001cecc:	cmp    eax,0x73
   14001cecf:	je     0x14001cdca
   14001ced5:	cmp    eax,0x75
   14001ced8:	je     0x14001cfaa
   14001cede:	cmp    eax,0x78
   14001cee1:	jne    0x14001d1bc
   14001cee7:	mov    eax,0x27
   14001ceec:	jmp    0x14001cf41
   14001ceee:	dec    eax
   14001cef0:	cmp    WORD PTR [rcx],r10w
   14001cef4:	je     0x14001ceff
   14001cef6:	add    rcx,0x2
   14001cefa:	cmp    eax,r10d
   14001cefd:	jne    0x14001ceee
   14001ceff:	sub    rcx,rbx
   14001cf02:	sar    rcx,1
   14001cf05:	jmp    0x14001cf28
   14001cf07:	cmp    rbx,r10
   14001cf0a:	cmove  rbx,QWORD PTR [rip+0x2c94e]        # 0x140049860
   14001cf12:	mov    rcx,rbx
   14001cf15:	jmp    0x14001cf21
   14001cf17:	dec    eax
   14001cf19:	cmp    BYTE PTR [rcx],r10b
   14001cf1c:	je     0x14001cf26
   14001cf1e:	inc    rcx
   14001cf21:	cmp    eax,r10d
   14001cf24:	jne    0x14001cf17
   14001cf26:	sub    ecx,ebx
   14001cf28:	mov    DWORD PTR [rsp+0x44],ecx
   14001cf2c:	jmp    0x14001d1bc
   14001cf31:	mov    r14d,0x10
   14001cf37:	bts    r12d,0xf
   14001cf3c:	mov    eax,0x7
   14001cf41:	mov    DWORD PTR [rsp+0x60],eax
   14001cf45:	mov    r9d,0x10
   14001cf4b:	test   r12b,r12b
   14001cf4e:	jns    0x14001cfb0
   14001cf50:	add    al,0x51
   14001cf52:	mov    BYTE PTR [rsp+0x4c],0x30
   14001cf57:	lea    edx,[r9-0xe]
   14001cf5b:	mov    BYTE PTR [rsp+0x4d],al
   14001cf5f:	jmp    0x14001cfb4
   14001cf61:	mov    r9d,0x8
   14001cf67:	test   r12b,r12b
   14001cf6a:	jns    0x14001cfb0
   14001cf6c:	bts    r12d,0x9
   14001cf71:	jmp    0x14001cfb0
   14001cf73:	mov    rdi,QWORD PTR [r13+0x0]
   14001cf77:	add    r13,0x8
   14001cf7b:	call   0x1400247bc
   14001cf80:	xor    r10d,r10d
   14001cf83:	cmp    eax,r10d
   14001cf86:	je     0x14001cc04
   14001cf8c:	test   r12b,0x20
   14001cf90:	je     0x14001cf97
   14001cf92:	mov    WORD PTR [rdi],si
   14001cf95:	jmp    0x14001cf99
   14001cf97:	mov    DWORD PTR [rdi],esi
   14001cf99:	mov    DWORD PTR [rsp+0x58],0x1
   14001cfa1:	jmp    0x14001d312
   14001cfa6:	or     r12d,0x40
   14001cfaa:	mov    r9d,0xa
   14001cfb0:	mov    edx,DWORD PTR [rsp+0x48]
   14001cfb4:	bt     r12d,0xf
   14001cfb9:	jb     0x14001cfc2
   14001cfbb:	bt     r12d,0xc
   14001cfc0:	jae    0x14001cfcc
   14001cfc2:	mov    r8,QWORD PTR [r13+0x0]
   14001cfc6:	add    r13,0x8
   14001cfca:	jmp    0x14001cffa
   14001cfcc:	add    r13,0x8
   14001cfd0:	test   r12b,0x20
   14001cfd4:	je     0x14001cfea
   14001cfd6:	test   r12b,0x40
   14001cfda:	je     0x14001cfe3
   14001cfdc:	movsx  r8,WORD PTR [r13-0x8]
   14001cfe1:	jmp    0x14001cffa
   14001cfe3:	movzx  r8d,WORD PTR [r13-0x8]
   14001cfe8:	jmp    0x14001cffa
   14001cfea:	test   r12b,0x40
   14001cfee:	je     0x14001cff6
   14001cff0:	movsxd r8,DWORD PTR [r13-0x8]
   14001cff4:	jmp    0x14001cffa
   14001cff6:	mov    r8d,DWORD PTR [r13-0x8]
   14001cffa:	test   r12b,0x40
   14001cffe:	je     0x14001d00d
   14001d000:	cmp    r8,r10
   14001d003:	jge    0x14001d00d
   14001d005:	neg    r8
   14001d008:	bts    r12d,0x8
   14001d00d:	bt     r12d,0xf
   14001d012:	jb     0x14001d01e
   14001d014:	bt     r12d,0xc
   14001d019:	jb     0x14001d01e
   14001d01b:	mov    r8d,r8d
   14001d01e:	cmp    r14d,r10d
   14001d021:	jge    0x14001d02b
   14001d023:	mov    r14d,0x1
   14001d029:	jmp    0x14001d036
   14001d02b:	and    r12d,0xfffffff7
   14001d02f:	cmp    r14d,r11d
   14001d032:	cmovg  r14d,r11d
   14001d036:	mov    r15d,DWORD PTR [rsp+0x60]
   14001d03b:	mov    rax,r8
   14001d03e:	lea    rbx,[rsp+0x2bf]
   14001d046:	neg    rax
   14001d049:	sbb    ecx,ecx
   14001d04b:	and    ecx,edx
   14001d04d:	mov    DWORD PTR [rsp+0x48],ecx
   14001d051:	mov    ecx,r14d
   14001d054:	dec    r14d
   14001d057:	cmp    ecx,r10d
   14001d05a:	jg     0x14001d061
   14001d05c:	cmp    r8,r10
   14001d05f:	je     0x14001d081
   14001d061:	xor    edx,edx
   14001d063:	mov    rax,r8
   14001d066:	movsxd rcx,r9d
   14001d069:	div    rcx
   14001d06c:	mov    r8,rax
   14001d06f:	lea    eax,[rdx+0x30]
   14001d072:	cmp    eax,0x39
   14001d075:	jle    0x14001d07a
   14001d077:	add    eax,r15d
   14001d07a:	mov    BYTE PTR [rbx],al
   14001d07c:	dec    rbx
   14001d07f:	jmp    0x14001d051
   14001d081:	lea    rax,[rsp+0x2bf]
   14001d089:	mov    r15d,0xffffffff
   14001d08f:	sub    eax,ebx
   14001d091:	inc    rbx
   14001d094:	bt     r12d,0x9
   14001d099:	mov    DWORD PTR [rsp+0x44],eax
   14001d09d:	jae    0x14001d1bc
   14001d0a3:	cmp    eax,r10d
   14001d0a6:	je     0x14001d0b1
   14001d0a8:	cmp    BYTE PTR [rbx],0x30
   14001d0ab:	je     0x14001d1bc
   14001d0b1:	dec    rbx
   14001d0b4:	inc    DWORD PTR [rsp+0x44]
   14001d0b8:	mov    BYTE PTR [rbx],0x30
   14001d0bb:	jmp    0x14001d1bc
   14001d0c0:	jne    0x14001d0d0
   14001d0c2:	cmp    bpl,0x67
   14001d0c6:	jne    0x14001d109
   14001d0c8:	mov    r14d,0x1
   14001d0ce:	jmp    0x14001d109
   14001d0d0:	cmp    r14d,r11d
   14001d0d3:	cmovg  r14d,r11d
   14001d0d7:	cmp    r14d,0xa3
   14001d0de:	jle    0x14001d109
   14001d0e0:	lea    edi,[r14+0x15d]
   14001d0e7:	movsxd rcx,edi
   14001d0ea:	call   0x14001c424
   14001d0ef:	mov    QWORD PTR [rsp+0x98],rax
   14001d0f7:	test   rax,rax
   14001d0fa:	je     0x14001d103
   14001d0fc:	mov    rbx,rax
   14001d0ff:	mov    esi,edi
   14001d101:	jmp    0x14001d109
   14001d103:	mov    r14d,0xa3
   14001d109:	mov    rax,QWORD PTR [r13+0x0]
   14001d10d:	mov    rcx,QWORD PTR [rip+0x2c78c]        # 0x1400498a0
   14001d114:	add    r13,0x8
   14001d118:	movsx  edi,bpl
   14001d11c:	movsxd rsi,esi
   14001d11f:	mov    QWORD PTR [rsp+0xa8],rax
   14001d127:	call   0x1400175ac
   14001d12c:	lea    rcx,[rsp+0x78]
   14001d131:	mov    r9d,edi
   14001d134:	mov    QWORD PTR [rsp+0x30],rcx
   14001d139:	mov    ecx,DWORD PTR [rsp+0x70]
   14001d13d:	mov    r8,rsi
   14001d140:	mov    DWORD PTR [rsp+0x28],ecx
   14001d144:	lea    rcx,[rsp+0xa8]
   14001d14c:	mov    rdx,rbx
   14001d14f:	mov    DWORD PTR [rsp+0x20],r14d
   14001d154:	call   rax
   14001d156:	mov    edi,r12d
   14001d159:	xor    eax,eax
   14001d15b:	and    edi,0x80
   14001d161:	je     0x14001d180
   14001d163:	cmp    r14d,eax
   14001d166:	jne    0x14001d180
   14001d168:	mov    rcx,QWORD PTR [rip+0x2c749]        # 0x1400498b8
   14001d16f:	call   0x1400175ac
   14001d174:	lea    rdx,[rsp+0x78]
   14001d179:	mov    rcx,rbx
   14001d17c:	call   rax
   14001d17e:	xor    eax,eax
   14001d180:	cmp    bpl,0x67
   14001d184:	jne    0x14001d1a0
   14001d186:	cmp    edi,eax
   14001d188:	jne    0x14001d1a0
   14001d18a:	mov    rcx,QWORD PTR [rip+0x2c71f]        # 0x1400498b0
   14001d191:	call   0x1400175ac
   14001d196:	lea    rdx,[rsp+0x78]
   14001d19b:	mov    rcx,rbx
   14001d19e:	call   rax
   14001d1a0:	cmp    BYTE PTR [rbx],0x2d
   14001d1a3:	jne    0x14001d1ad
   14001d1a5:	bts    r12d,0x8
   14001d1aa:	inc    rbx
   14001d1ad:	mov    rcx,rbx
   14001d1b0:	call   0x140015c00
   14001d1b5:	xor    r10d,r10d
   14001d1b8:	mov    DWORD PTR [rsp+0x44],eax
   14001d1bc:	cmp    DWORD PTR [rsp+0x58],r10d
   14001d1c1:	jne    0x14001d312
   14001d1c7:	test   r12b,0x40
   14001d1cb:	je     0x14001d1fe
   14001d1cd:	bt     r12d,0x8
   14001d1d2:	jae    0x14001d1db
   14001d1d4:	mov    BYTE PTR [rsp+0x4c],0x2d
   14001d1d9:	jmp    0x14001d1e6
   14001d1db:	test   r12b,0x1
   14001d1df:	je     0x14001d1f1
   14001d1e1:	mov    BYTE PTR [rsp+0x4c],0x2b
   14001d1e6:	mov    edi,0x1
   14001d1eb:	mov    DWORD PTR [rsp+0x48],edi
   14001d1ef:	jmp    0x14001d202
   14001d1f1:	test   r12b,0x2
   14001d1f5:	je     0x14001d1fe
   14001d1f7:	mov    BYTE PTR [rsp+0x4c],0x20
   14001d1fc:	jmp    0x14001d1e6
   14001d1fe:	mov    edi,DWORD PTR [rsp+0x48]
   14001d202:	mov    esi,DWORD PTR [rsp+0x54]
   14001d206:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d20b:	sub    esi,DWORD PTR [rsp+0x44]
   14001d20f:	sub    esi,edi
   14001d211:	test   r12b,0xc
   14001d215:	jne    0x14001d228
   14001d217:	lea    r9,[rsp+0x40]
   14001d21c:	mov    r8,rbp
   14001d21f:	mov    edx,esi
   14001d221:	mov    cl,0x20
   14001d223:	call   0x14001c9fc
   14001d228:	lea    r9,[rsp+0x40]
   14001d22d:	lea    rcx,[rsp+0x4c]
   14001d232:	mov    r8,rbp
   14001d235:	mov    edx,edi
   14001d237:	call   0x14001ca50
   14001d23c:	test   r12b,0x8
   14001d240:	je     0x14001d259
   14001d242:	test   r12b,0x4
   14001d246:	jne    0x14001d259
   14001d248:	lea    r9,[rsp+0x40]
   14001d24d:	mov    r8,rbp
   14001d250:	mov    edx,esi
   14001d252:	mov    cl,0x30
   14001d254:	call   0x14001c9fc
   14001d259:	mov    edi,DWORD PTR [rsp+0x44]
   14001d25d:	xor    eax,eax
   14001d25f:	cmp    DWORD PTR [rsp+0x50],eax
   14001d263:	je     0x14001d2da
   14001d265:	cmp    edi,eax
   14001d267:	jle    0x14001d2da
   14001d269:	mov    rbp,rbx
   14001d26c:	movzx  r9d,WORD PTR [rbp+0x0]
   14001d271:	lea    rdx,[rsp+0x2c0]
   14001d279:	lea    rcx,[rsp+0xa0]
   14001d281:	mov    r8d,0x6
   14001d287:	dec    edi
   14001d289:	add    rbp,0x2
   14001d28d:	call   0x140024b60
   14001d292:	xor    r10d,r10d
   14001d295:	cmp    eax,r10d
   14001d298:	jne    0x14001d2cc
   14001d29a:	mov    edx,DWORD PTR [rsp+0xa0]
   14001d2a1:	cmp    edx,r10d
   14001d2a4:	je     0x14001d2cc
   14001d2a6:	mov    r8,QWORD PTR [rsp+0x68]
   14001d2ab:	lea    r9,[rsp+0x40]
   14001d2b0:	lea    rcx,[rsp+0x2c0]
   14001d2b8:	call   0x14001ca50
   14001d2bd:	xor    r10d,r10d
   14001d2c0:	cmp    edi,r10d
   14001d2c3:	jne    0x14001d26c
   14001d2c5:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d2ca:	jmp    0x14001d2ef
   14001d2cc:	mov    rbp,QWORD PTR [rsp+0x68]
   14001d2d1:	mov    eax,r15d
   14001d2d4:	mov    DWORD PTR [rsp+0x40],eax
   14001d2d8:	jmp    0x14001d2f3
   14001d2da:	lea    r9,[rsp+0x40]
   14001d2df:	mov    r8,rbp
   14001d2e2:	mov    edx,edi
   14001d2e4:	mov    rcx,rbx
   14001d2e7:	call   0x14001ca50
   14001d2ec:	xor    r10d,r10d
   14001d2ef:	mov    eax,DWORD PTR [rsp+0x40]
   14001d2f3:	cmp    eax,r10d
   14001d2f6:	jl     0x14001d312
   14001d2f8:	test   r12b,0x4
   14001d2fc:	je     0x14001d312
   14001d2fe:	lea    r9,[rsp+0x40]
   14001d303:	mov    r8,rbp
   14001d306:	mov    edx,esi
   14001d308:	mov    cl,0x20
   14001d30a:	call   0x14001c9fc
   14001d30f:	xor    r10d,r10d
   14001d312:	mov    rax,QWORD PTR [rsp+0x98]
   14001d31a:	cmp    rax,r10
   14001d31d:	je     0x14001d332
   14001d31f:	mov    rcx,rax
   14001d322:	call   0x140014f10
   14001d327:	xor    r10d,r10d
   14001d32a:	mov    QWORD PTR [rsp+0x98],r10
   14001d332:	mov    rdi,QWORD PTR [rsp+0xb0]
   14001d33a:	mov    esi,DWORD PTR [rsp+0x40]
   14001d33e:	mov    edx,DWORD PTR [rsp+0x5c]
   14001d342:	lea    r9,[rip+0xfffffffffffe2cb7]        # 0x140000000
   14001d349:	mov    r11d,0x200
   14001d34f:	mov    bpl,BYTE PTR [rdi]
   14001d352:	cmp    bpl,r10b
   14001d355:	jne    0x14001cc7f
   14001d35b:	cmp    BYTE PTR [rsp+0x90],r10b
   14001d363:	je     0x14001d374
   14001d365:	mov    rcx,QWORD PTR [rsp+0x88]
   14001d36d:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001d374:	mov    eax,esi
   14001d376:	mov    rcx,QWORD PTR [rsp+0x2c8]
   14001d37e:	xor    rcx,rsp
   14001d381:	call   0x1400144f0
   14001d386:	mov    rbx,QWORD PTR [rsp+0x320]
   14001d38e:	add    rsp,0x2d0
   14001d395:	pop    r15
   14001d397:	pop    r14
   14001d399:	pop    r13
   14001d39b:	pop    r12
   14001d39d:	pop    rdi
   14001d39e:	pop    rsi
   14001d39f:	pop    rbp
   14001d3a0:	ret    
   14001d3a1:	cmp    bpl,0x49
   14001d3a5:	je     0x14001d3e1
   14001d3a7:	cmp    bpl,0x68
   14001d3ab:	je     0x14001d3d8
   14001d3ad:	cmp    bpl,0x6c
   14001d3b1:	je     0x14001d3c0
   14001d3b3:	cmp    bpl,0x77
   14001d3b7:	jne    0x14001d34f
   14001d3b9:	bts    r12d,0xb
   14001d3be:	jmp    0x14001d34f
   14001d3c0:	cmp    BYTE PTR [rdi],0x6c
   14001d3c3:	jne    0x14001d3cf
   14001d3c5:	inc    rdi
   14001d3c8:	bts    r12d,0xc
   14001d3cd:	jmp    0x14001d34f
   14001d3cf:	or     r12d,0x10
   14001d3d3:	jmp    0x14001d34f
   14001d3d8:	or     r12d,0x20
   14001d3dc:	jmp    0x14001d34f
   14001d3e1:	mov    al,BYTE PTR [rdi]
   14001d3e3:	bts    r12d,0xf
   14001d3e8:	cmp    al,0x36
   14001d3ea:	jne    0x14001d400
   14001d3ec:	cmp    BYTE PTR [rdi+0x1],0x34
   14001d3f0:	jne    0x14001d400
   14001d3f2:	add    rdi,0x2
   14001d3f6:	bts    r12d,0xf
   14001d3fb:	jmp    0x14001d34f
   14001d400:	cmp    al,0x33
   14001d402:	jne    0x14001d418
   14001d404:	cmp    BYTE PTR [rdi+0x1],0x32
   14001d408:	jne    0x14001d418
   14001d40a:	add    rdi,0x2
   14001d40e:	btr    r12d,0xf
   14001d413:	jmp    0x14001d34f
   14001d418:	cmp    al,0x64
   14001d41a:	je     0x14001d34f
   14001d420:	cmp    al,0x69
   14001d422:	je     0x14001d34f
   14001d428:	cmp    al,0x6f
   14001d42a:	je     0x14001d34f
   14001d430:	cmp    al,0x75
   14001d432:	je     0x14001d34f
   14001d438:	cmp    al,0x78
   14001d43a:	je     0x14001d34f
   14001d440:	cmp    al,0x58
   14001d442:	je     0x14001d34f
   14001d448:	mov    DWORD PTR [rsp+0x5c],r10d
   14001d44d:	lea    rdx,[rsp+0x78]
   14001d452:	movzx  ecx,bpl
   14001d456:	mov    DWORD PTR [rsp+0x50],r10d
   14001d45b:	call   0x14001988c
   14001d460:	xor    esi,esi
   14001d462:	cmp    eax,esi
   14001d464:	je     0x14001d487
   14001d466:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d46b:	lea    r8,[rsp+0x40]
   14001d470:	mov    cl,bpl
   14001d473:	call   0x14001c9b4
   14001d478:	mov    bpl,BYTE PTR [rdi]
   14001d47b:	inc    rdi
   14001d47e:	cmp    bpl,sil
   14001d481:	je     0x14001d589
   14001d487:	mov    rdx,QWORD PTR [rsp+0x68]
   14001d48c:	lea    r8,[rsp+0x40]
   14001d491:	mov    cl,bpl
   14001d494:	call   0x14001c9b4
   14001d499:	xor    r10d,r10d
   14001d49c:	jmp    0x14001d33a
   14001d4a1:	cmp    bpl,0x2a
   14001d4a5:	jne    0x14001d4c0
   14001d4a7:	mov    r14d,DWORD PTR [r13+0x0]
   14001d4ab:	add    r13,0x8
   14001d4af:	cmp    r14d,r10d
   14001d4b2:	jge    0x14001d34f
   14001d4b8:	mov    r14d,r15d
   14001d4bb:	jmp    0x14001d34f
   14001d4c0:	lea    ecx,[r14+r14*4]
   14001d4c4:	movsx  eax,bpl
   14001d4c8:	lea    r14d,[rax+rcx*2-0x30]
   14001d4cd:	jmp    0x14001d34f
   14001d4d2:	mov    r14d,r10d
   14001d4d5:	jmp    0x14001d34f
   14001d4da:	cmp    bpl,0x2a
   14001d4de:	jne    0x14001d4fd
   14001d4e0:	mov    eax,DWORD PTR [r13+0x0]
   14001d4e4:	add    r13,0x8
   14001d4e8:	cmp    eax,r10d
   14001d4eb:	mov    DWORD PTR [rsp+0x54],eax
   14001d4ef:	jge    0x14001d34f
   14001d4f5:	or     r12d,0x4
   14001d4f9:	neg    eax
   14001d4fb:	jmp    0x14001d50c
   14001d4fd:	mov    eax,DWORD PTR [rsp+0x54]
   14001d501:	lea    ecx,[rax+rax*4]
   14001d504:	movsx  eax,bpl
   14001d508:	lea    eax,[rax+rcx*2-0x30]
   14001d50c:	mov    DWORD PTR [rsp+0x54],eax
   14001d510:	jmp    0x14001d34f
   14001d515:	cmp    bpl,0x20
   14001d519:	je     0x14001d55c
   14001d51b:	cmp    bpl,0x23
   14001d51f:	je     0x14001d552
   14001d521:	cmp    bpl,0x2b
   14001d525:	je     0x14001d549
   14001d527:	cmp    bpl,0x2d
   14001d52b:	je     0x14001d540
   14001d52d:	cmp    bpl,0x30
   14001d531:	jne    0x14001d34f
   14001d537:	or     r12d,0x8
   14001d53b:	jmp    0x14001d34f
   14001d540:	or     r12d,0x4
   14001d544:	jmp    0x14001d34f
   14001d549:	or     r12d,0x1
   14001d54d:	jmp    0x14001d34f
   14001d552:	bts    r12d,0x7
   14001d557:	jmp    0x14001d34f
   14001d55c:	or     r12d,0x2
   14001d560:	jmp    0x14001d34f
   14001d565:	mov    DWORD PTR [rsp+0x70],r10d
   14001d56a:	mov    DWORD PTR [rsp+0x58],r10d
   14001d56f:	mov    DWORD PTR [rsp+0x54],r10d
   14001d574:	mov    DWORD PTR [rsp+0x48],r10d
   14001d579:	mov    r12d,r10d
   14001d57c:	mov    r14d,r15d
   14001d57f:	mov    DWORD PTR [rsp+0x50],r10d
   14001d584:	jmp    0x14001d34f
   14001d589:	call   0x140015f48
   14001d58e:	xor    r9d,r9d
   14001d591:	xor    r8d,r8d
   14001d594:	xor    edx,edx
   14001d596:	xor    ecx,ecx
   14001d598:	mov    QWORD PTR [rsp+0x20],rsi
   14001d59d:	mov    DWORD PTR [rax],0x16
   14001d5a3:	call   0x1400149a8
   14001d5a8:	cmp    BYTE PTR [rsp+0x90],sil
   14001d5b0:	jmp    0x14001cc2c
   14001d5b5:	int3   
   14001d5b6:	int3   
   14001d5b7:	int3   
   14001d5b8:	mov    QWORD PTR [rsp+0x18],rbx
   14001d5bd:	push   rbp
   14001d5be:	push   rsi
   14001d5bf:	push   rdi
   14001d5c0:	push   r12
   14001d5c2:	push   r13
   14001d5c4:	push   r14
   14001d5c6:	push   r15
   14001d5c8:	sub    rsp,0x2d0
   14001d5cf:	mov    rax,QWORD PTR [rip+0x2b7ea]        # 0x140048dc0
   14001d5d6:	xor    rax,rsp
   14001d5d9:	mov    QWORD PTR [rsp+0x2c8],rax
   14001d5e1:	xor    eax,eax
   14001d5e3:	mov    rbx,rcx
   14001d5e6:	mov    QWORD PTR [rsp+0x68],rcx
   14001d5eb:	mov    rdi,rdx
   14001d5ee:	lea    rcx,[rsp+0x78]
   14001d5f3:	mov    rdx,r8
   14001d5f6:	mov    r13,r9
   14001d5f9:	mov    DWORD PTR [rsp+0x60],eax
   14001d5fd:	mov    r12d,eax
   14001d600:	mov    DWORD PTR [rsp+0x54],eax
   14001d604:	mov    r15d,eax
   14001d607:	mov    DWORD PTR [rsp+0x48],eax
   14001d60b:	mov    DWORD PTR [rsp+0x58],eax
   14001d60f:	mov    DWORD PTR [rsp+0x50],eax
   14001d613:	call   0x140014a6c
   14001d618:	xor    r10d,r10d
   14001d61b:	cmp    rbx,r10
   14001d61e:	jne    0x14001d661
   14001d620:	call   0x140015f48
   14001d625:	xor    ebx,ebx
   14001d627:	xor    r9d,r9d
   14001d62a:	xor    r8d,r8d
   14001d62d:	xor    edx,edx
   14001d62f:	xor    ecx,ecx
   14001d631:	mov    DWORD PTR [rax],0x16
   14001d637:	mov    QWORD PTR [rsp+0x20],rbx
   14001d63c:	call   0x1400149a8
   14001d641:	cmp    BYTE PTR [rsp+0x90],bl
   14001d648:	je     0x14001d659
   14001d64a:	mov    rax,QWORD PTR [rsp+0x88]
   14001d652:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001d659:	or     eax,0xffffffff
   14001d65c:	jmp    0x14001de78
   14001d661:	or     r14d,0xffffffff
   14001d665:	test   BYTE PTR [rbx+0x18],0x40
   14001d669:	lea    r9,[rip+0xfffffffffffe2990]        # 0x140000000
   14001d670:	jne    0x14001d730
   14001d676:	mov    rcx,rbx
   14001d679:	call   0x140024784
   14001d67e:	lea    rdx,[rip+0x2c14b]        # 0x1400497d0
   14001d685:	cmp    eax,r14d
   14001d688:	je     0x14001d6b2
   14001d68a:	cmp    eax,0xfffffffe
   14001d68d:	je     0x14001d6b2
   14001d68f:	movsxd r8,eax
   14001d692:	lea    r9,[rip+0xfffffffffffe2967]        # 0x140000000
   14001d699:	mov    rcx,r8
   14001d69c:	and    r8d,0x1f
   14001d6a0:	sar    rcx,0x5
   14001d6a4:	imul   r8,r8,0x58
   14001d6a8:	add    r8,QWORD PTR [r9+rcx*8+0x50640]
   14001d6b0:	jmp    0x14001d6bc
   14001d6b2:	mov    r8,rdx
   14001d6b5:	lea    r9,[rip+0xfffffffffffe2944]        # 0x140000000
   14001d6bc:	test   BYTE PTR [r8+0x38],0x7f
   14001d6c1:	jne    0x14001d6ec
   14001d6c3:	cmp    eax,r14d
   14001d6c6:	je     0x14001d6e6
   14001d6c8:	cmp    eax,0xfffffffe
   14001d6cb:	je     0x14001d6e6
   14001d6cd:	movsxd rdx,eax
   14001d6d0:	mov    rax,rdx
   14001d6d3:	and    edx,0x1f
   14001d6d6:	sar    rax,0x5
   14001d6da:	imul   rdx,rdx,0x58
   14001d6de:	add    rdx,QWORD PTR [r9+rax*8+0x50640]
   14001d6e6:	test   BYTE PTR [rdx+0x38],0x80
   14001d6ea:	je     0x14001d72d
   14001d6ec:	call   0x140015f48
   14001d6f1:	xor    ebx,ebx
   14001d6f3:	xor    r9d,r9d
   14001d6f6:	xor    r8d,r8d
   14001d6f9:	xor    edx,edx
   14001d6fb:	xor    ecx,ecx
   14001d6fd:	mov    DWORD PTR [rax],0x16
   14001d703:	mov    QWORD PTR [rsp+0x20],rbx
   14001d708:	call   0x1400149a8
   14001d70d:	cmp    BYTE PTR [rsp+0x90],bl
   14001d714:	je     0x14001d725
   14001d716:	mov    rax,QWORD PTR [rsp+0x88]
   14001d71e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001d725:	mov    eax,r14d
   14001d728:	jmp    0x14001de78
   14001d72d:	xor    r10d,r10d
   14001d730:	cmp    rdi,r10
   14001d733:	je     0x14001d6ec
   14001d735:	mov    bpl,BYTE PTR [rdi]
   14001d738:	mov    esi,r10d
   14001d73b:	mov    DWORD PTR [rsp+0x40],r10d
   14001d740:	mov    DWORD PTR [rsp+0x44],r10d
   14001d745:	mov    edx,r10d
   14001d748:	mov    QWORD PTR [rsp+0x98],r10
   14001d750:	cmp    bpl,r10b
   14001d753:	je     0x14001de5d
   14001d759:	mov    rbx,QWORD PTR [rsp+0xa8]
   14001d761:	mov    r11d,0x200
   14001d767:	inc    rdi
   14001d76a:	cmp    esi,r10d
   14001d76d:	mov    QWORD PTR [rsp+0xb0],rdi
   14001d775:	jl     0x14001de4f
   14001d77b:	lea    eax,[rbp-0x20]
   14001d77e:	cmp    al,0x58
   14001d780:	ja     0x14001d794
   14001d782:	movsx  rax,bpl
   14001d786:	movzx  ecx,BYTE PTR [rax+r9*1+0x39e40]
   14001d78f:	and    ecx,0xf
   14001d792:	jmp    0x14001d797
   14001d794:	mov    ecx,r10d
   14001d797:	movsxd rax,ecx
   14001d79a:	lea    rcx,[rax+rax*8]
   14001d79e:	movsxd rax,edx
   14001d7a1:	add    rcx,rax
   14001d7a4:	movzx  edx,BYTE PTR [rcx+r9*1+0x39e60]
   14001d7ad:	shr    edx,0x4
   14001d7b0:	mov    DWORD PTR [rsp+0x5c],edx
   14001d7b4:	cmp    edx,0x8
   14001d7b7:	je     0x14001d6ec
   14001d7bd:	mov    ecx,edx
   14001d7bf:	cmp    edx,r10d
   14001d7c2:	je     0x14001df52
   14001d7c8:	sub    ecx,0x1
   14001d7cb:	je     0x14001e06a
   14001d7d1:	sub    ecx,0x1
   14001d7d4:	je     0x14001e01a
   14001d7da:	sub    ecx,0x1
   14001d7dd:	je     0x14001dfdf
   14001d7e3:	sub    ecx,0x1
   14001d7e6:	je     0x14001dfd7
   14001d7ec:	sub    ecx,0x1
   14001d7ef:	je     0x14001dfa6
   14001d7f5:	sub    ecx,0x1
   14001d7f8:	je     0x14001dea3
   14001d7fe:	cmp    ecx,0x1
   14001d801:	jne    0x14001de43
   14001d807:	movsx  eax,bpl
   14001d80b:	cmp    eax,0x64
   14001d80e:	jg     0x14001d992
   14001d814:	je     0x14001da9a
   14001d81a:	cmp    eax,0x41
   14001d81d:	je     0x14001d963
   14001d823:	cmp    eax,0x43
   14001d826:	je     0x14001d8fc
   14001d82c:	cmp    eax,0x45
   14001d82f:	je     0x14001d963
   14001d835:	cmp    eax,0x47
   14001d838:	je     0x14001d963
   14001d83e:	cmp    eax,0x53
   14001d841:	je     0x14001d8b0
   14001d843:	cmp    eax,0x58
   14001d846:	je     0x14001da30
   14001d84c:	cmp    eax,0x5a
   14001d84f:	je     0x14001d868
   14001d851:	cmp    eax,0x61
   14001d854:	je     0x14001d96f
   14001d85a:	cmp    eax,0x63
   14001d85d:	je     0x14001d90a
   14001d863:	jmp    0x14001dcb0
   14001d868:	mov    rax,QWORD PTR [r13+0x0]
   14001d86c:	add    r13,0x8
   14001d870:	cmp    rax,r10
   14001d873:	je     0x14001d8a4
   14001d875:	mov    rbx,QWORD PTR [rax+0x8]
   14001d879:	cmp    rbx,r10
   14001d87c:	je     0x14001d8a4
   14001d87e:	bt     r12d,0xb
   14001d883:	movsx  eax,WORD PTR [rax]
   14001d886:	jae    0x14001d89a
   14001d888:	cdq    
   14001d889:	mov    DWORD PTR [rsp+0x50],0x1
   14001d891:	sub    eax,edx
   14001d893:	sar    eax,1
   14001d895:	jmp    0x14001dcac
   14001d89a:	mov    DWORD PTR [rsp+0x50],r10d
   14001d89f:	jmp    0x14001dcac
   14001d8a4:	mov    rbx,QWORD PTR [rip+0x2bfb5]        # 0x140049860
   14001d8ab:	jmp    0x14001dca1
   14001d8b0:	test   r12d,0x830
   14001d8b7:	jne    0x14001d8be
   14001d8b9:	bts    r12d,0xb
   14001d8be:	mov    rbx,QWORD PTR [r13+0x0]
   14001d8c2:	cmp    r15d,r14d
   14001d8c5:	mov    eax,r15d
   14001d8c8:	mov    ecx,0x7fffffff
   14001d8cd:	cmove  eax,ecx
   14001d8d0:	add    r13,0x8
   14001d8d4:	test   r12d,0x810
   14001d8db:	je     0x14001d9fb
   14001d8e1:	cmp    rbx,r10
   14001d8e4:	mov    DWORD PTR [rsp+0x50],0x1
   14001d8ec:	cmove  rbx,QWORD PTR [rip+0x2bf74]        # 0x140049868
   14001d8f4:	mov    rcx,rbx
   14001d8f7:	jmp    0x14001d9ee
   14001d8fc:	test   r12d,0x830
   14001d903:	jne    0x14001d90a
   14001d905:	bts    r12d,0xb
   14001d90a:	add    r13,0x8
   14001d90e:	test   r12d,0x810
   14001d915:	je     0x14001d943
   14001d917:	movzx  r9d,WORD PTR [r13-0x8]
   14001d91c:	lea    rdx,[rsp+0xc0]
   14001d924:	lea    rcx,[rsp+0x44]
   14001d929:	mov    r8,r11
   14001d92c:	call   0x140024b60
   14001d931:	xor    r10d,r10d
   14001d934:	cmp    eax,r10d
   14001d937:	je     0x14001d956
   14001d939:	mov    DWORD PTR [rsp+0x58],0x1
   14001d941:	jmp    0x14001d956
   14001d943:	mov    al,BYTE PTR [r13-0x8]
   14001d947:	mov    DWORD PTR [rsp+0x44],0x1
   14001d94f:	mov    BYTE PTR [rsp+0xc0],al
   14001d956:	lea    rbx,[rsp+0xc0]
   14001d95e:	jmp    0x14001dcb0
   14001d963:	mov    DWORD PTR [rsp+0x70],0x1
   14001d96b:	add    bpl,0x20
   14001d96f:	or     r12d,0x40
   14001d973:	cmp    r15d,r10d
   14001d976:	lea    rbx,[rsp+0xc0]
   14001d97e:	mov    esi,r11d
   14001d981:	jge    0x14001dbb4
   14001d987:	mov    r15d,0x6
   14001d98d:	jmp    0x14001dbfd
   14001d992:	cmp    eax,0x65
   14001d995:	jl     0x14001dcb0
   14001d99b:	cmp    eax,0x67
   14001d99e:	jle    0x14001d96f
   14001d9a0:	cmp    eax,0x69
   14001d9a3:	je     0x14001da9a
   14001d9a9:	cmp    eax,0x6e
   14001d9ac:	je     0x14001da67
   14001d9b2:	cmp    eax,0x6f
   14001d9b5:	je     0x14001da55
   14001d9bb:	cmp    eax,0x70
   14001d9be:	je     0x14001da25
   14001d9c0:	cmp    eax,0x73
   14001d9c3:	je     0x14001d8be
   14001d9c9:	cmp    eax,0x75
   14001d9cc:	je     0x14001da9e
   14001d9d2:	cmp    eax,0x78
   14001d9d5:	jne    0x14001dcb0
   14001d9db:	mov    eax,0x27
   14001d9e0:	jmp    0x14001da35
   14001d9e2:	dec    eax
   14001d9e4:	cmp    WORD PTR [rcx],r10w
   14001d9e8:	je     0x14001d9f3
   14001d9ea:	add    rcx,0x2
   14001d9ee:	cmp    eax,r10d
   14001d9f1:	jne    0x14001d9e2
   14001d9f3:	sub    rcx,rbx
   14001d9f6:	sar    rcx,1
   14001d9f9:	jmp    0x14001da1c
   14001d9fb:	cmp    rbx,r10
   14001d9fe:	cmove  rbx,QWORD PTR [rip+0x2be5a]        # 0x140049860
   14001da06:	mov    rcx,rbx
   14001da09:	jmp    0x14001da15
   14001da0b:	dec    eax
   14001da0d:	cmp    BYTE PTR [rcx],r10b
   14001da10:	je     0x14001da1a
   14001da12:	inc    rcx
   14001da15:	cmp    eax,r10d
   14001da18:	jne    0x14001da0b
   14001da1a:	sub    ecx,ebx
   14001da1c:	mov    DWORD PTR [rsp+0x44],ecx
   14001da20:	jmp    0x14001dcb0
   14001da25:	mov    r15d,0x10
   14001da2b:	bts    r12d,0xf
   14001da30:	mov    eax,0x7
   14001da35:	mov    DWORD PTR [rsp+0x60],eax
   14001da39:	mov    r9d,0x10
   14001da3f:	test   r12b,r12b
   14001da42:	jns    0x14001daa4
   14001da44:	add    al,0x51
   14001da46:	mov    BYTE PTR [rsp+0x4c],0x30
   14001da4b:	lea    edx,[r9-0xe]
   14001da4f:	mov    BYTE PTR [rsp+0x4d],al
   14001da53:	jmp    0x14001daa8
   14001da55:	mov    r9d,0x8
   14001da5b:	test   r12b,r12b
   14001da5e:	jns    0x14001daa4
   14001da60:	bts    r12d,0x9
   14001da65:	jmp    0x14001daa4
   14001da67:	mov    rdi,QWORD PTR [r13+0x0]
   14001da6b:	add    r13,0x8
   14001da6f:	call   0x1400247bc
   14001da74:	xor    r10d,r10d
   14001da77:	cmp    eax,r10d
   14001da7a:	je     0x14001d6ec
   14001da80:	test   r12b,0x20
   14001da84:	je     0x14001da8b
   14001da86:	mov    WORD PTR [rdi],si
   14001da89:	jmp    0x14001da8d
   14001da8b:	mov    DWORD PTR [rdi],esi
   14001da8d:	mov    DWORD PTR [rsp+0x58],0x1
   14001da95:	jmp    0x14001de06
   14001da9a:	or     r12d,0x40
   14001da9e:	mov    r9d,0xa
   14001daa4:	mov    edx,DWORD PTR [rsp+0x48]
   14001daa8:	bt     r12d,0xf
   14001daad:	jb     0x14001dab6
   14001daaf:	bt     r12d,0xc
   14001dab4:	jae    0x14001dac0
   14001dab6:	mov    r8,QWORD PTR [r13+0x0]
   14001daba:	add    r13,0x8
   14001dabe:	jmp    0x14001daee
   14001dac0:	add    r13,0x8
   14001dac4:	test   r12b,0x20
   14001dac8:	je     0x14001dade
   14001daca:	test   r12b,0x40
   14001dace:	je     0x14001dad7
   14001dad0:	movsx  r8,WORD PTR [r13-0x8]
   14001dad5:	jmp    0x14001daee
   14001dad7:	movzx  r8d,WORD PTR [r13-0x8]
   14001dadc:	jmp    0x14001daee
   14001dade:	test   r12b,0x40
   14001dae2:	je     0x14001daea
   14001dae4:	movsxd r8,DWORD PTR [r13-0x8]
   14001dae8:	jmp    0x14001daee
   14001daea:	mov    r8d,DWORD PTR [r13-0x8]
   14001daee:	test   r12b,0x40
   14001daf2:	je     0x14001db01
   14001daf4:	cmp    r8,r10
   14001daf7:	jge    0x14001db01
   14001daf9:	neg    r8
   14001dafc:	bts    r12d,0x8
   14001db01:	bt     r12d,0xf
   14001db06:	jb     0x14001db12
   14001db08:	bt     r12d,0xc
   14001db0d:	jb     0x14001db12
   14001db0f:	mov    r8d,r8d
   14001db12:	cmp    r15d,r10d
   14001db15:	jge    0x14001db1f
   14001db17:	mov    r15d,0x1
   14001db1d:	jmp    0x14001db2a
   14001db1f:	and    r12d,0xfffffff7
   14001db23:	cmp    r15d,r11d
   14001db26:	cmovg  r15d,r11d
   14001db2a:	mov    r14d,DWORD PTR [rsp+0x60]
   14001db2f:	mov    rax,r8
   14001db32:	lea    rbx,[rsp+0x2bf]
   14001db3a:	neg    rax
   14001db3d:	sbb    ecx,ecx
   14001db3f:	and    ecx,edx
   14001db41:	mov    DWORD PTR [rsp+0x48],ecx
   14001db45:	mov    ecx,r15d
   14001db48:	dec    r15d
   14001db4b:	cmp    ecx,r10d
   14001db4e:	jg     0x14001db55
   14001db50:	cmp    r8,r10
   14001db53:	je     0x14001db75
   14001db55:	xor    edx,edx
   14001db57:	mov    rax,r8
   14001db5a:	movsxd rcx,r9d
   14001db5d:	div    rcx
   14001db60:	mov    r8,rax
   14001db63:	lea    eax,[rdx+0x30]
   14001db66:	cmp    eax,0x39
   14001db69:	jle    0x14001db6e
   14001db6b:	add    eax,r14d
   14001db6e:	mov    BYTE PTR [rbx],al
   14001db70:	dec    rbx
   14001db73:	jmp    0x14001db45
   14001db75:	lea    rax,[rsp+0x2bf]
   14001db7d:	mov    r14d,0xffffffff
   14001db83:	sub    eax,ebx
   14001db85:	inc    rbx
   14001db88:	bt     r12d,0x9
   14001db8d:	mov    DWORD PTR [rsp+0x44],eax
   14001db91:	jae    0x14001dcb0
   14001db97:	cmp    eax,r10d
   14001db9a:	je     0x14001dba5
   14001db9c:	cmp    BYTE PTR [rbx],0x30
   14001db9f:	je     0x14001dcb0
   14001dba5:	dec    rbx
   14001dba8:	inc    DWORD PTR [rsp+0x44]
   14001dbac:	mov    BYTE PTR [rbx],0x30
   14001dbaf:	jmp    0x14001dcb0
   14001dbb4:	jne    0x14001dbc4
   14001dbb6:	cmp    bpl,0x67
   14001dbba:	jne    0x14001dbfd
   14001dbbc:	mov    r15d,0x1
   14001dbc2:	jmp    0x14001dbfd
   14001dbc4:	cmp    r15d,r11d
   14001dbc7:	cmovg  r15d,r11d
   14001dbcb:	cmp    r15d,0xa3
   14001dbd2:	jle    0x14001dbfd
   14001dbd4:	lea    edi,[r15+0x15d]
   14001dbdb:	movsxd rcx,edi
   14001dbde:	call   0x14001c424
   14001dbe3:	mov    QWORD PTR [rsp+0x98],rax
   14001dbeb:	test   rax,rax
   14001dbee:	je     0x14001dbf7
   14001dbf0:	mov    rbx,rax
   14001dbf3:	mov    esi,edi
   14001dbf5:	jmp    0x14001dbfd
   14001dbf7:	mov    r15d,0xa3
   14001dbfd:	mov    rax,QWORD PTR [r13+0x0]
   14001dc01:	mov    rcx,QWORD PTR [rip+0x2bc98]        # 0x1400498a0
   14001dc08:	add    r13,0x8
   14001dc0c:	movsx  edi,bpl
   14001dc10:	movsxd rsi,esi
   14001dc13:	mov    QWORD PTR [rsp+0xa8],rax
   14001dc1b:	call   0x1400175ac
   14001dc20:	lea    rcx,[rsp+0x78]
   14001dc25:	mov    r9d,edi
   14001dc28:	mov    QWORD PTR [rsp+0x30],rcx
   14001dc2d:	mov    ecx,DWORD PTR [rsp+0x70]
   14001dc31:	mov    r8,rsi
   14001dc34:	mov    DWORD PTR [rsp+0x28],ecx
   14001dc38:	lea    rcx,[rsp+0xa8]
   14001dc40:	mov    rdx,rbx
   14001dc43:	mov    DWORD PTR [rsp+0x20],r15d
   14001dc48:	call   rax
   14001dc4a:	mov    edi,r12d
   14001dc4d:	xor    eax,eax
   14001dc4f:	and    edi,0x80
   14001dc55:	je     0x14001dc74
   14001dc57:	cmp    r15d,eax
   14001dc5a:	jne    0x14001dc74
   14001dc5c:	mov    rcx,QWORD PTR [rip+0x2bc55]        # 0x1400498b8
   14001dc63:	call   0x1400175ac
   14001dc68:	lea    rdx,[rsp+0x78]
   14001dc6d:	mov    rcx,rbx
   14001dc70:	call   rax
   14001dc72:	xor    eax,eax
   14001dc74:	cmp    bpl,0x67
   14001dc78:	jne    0x14001dc94
   14001dc7a:	cmp    edi,eax
   14001dc7c:	jne    0x14001dc94
   14001dc7e:	mov    rcx,QWORD PTR [rip+0x2bc2b]        # 0x1400498b0
   14001dc85:	call   0x1400175ac
   14001dc8a:	lea    rdx,[rsp+0x78]
   14001dc8f:	mov    rcx,rbx
   14001dc92:	call   rax
   14001dc94:	cmp    BYTE PTR [rbx],0x2d
   14001dc97:	jne    0x14001dca1
   14001dc99:	bts    r12d,0x8
   14001dc9e:	inc    rbx
   14001dca1:	mov    rcx,rbx
   14001dca4:	call   0x140015c00
   14001dca9:	xor    r10d,r10d
   14001dcac:	mov    DWORD PTR [rsp+0x44],eax
   14001dcb0:	cmp    DWORD PTR [rsp+0x58],r10d
   14001dcb5:	jne    0x14001de06
   14001dcbb:	test   r12b,0x40
   14001dcbf:	je     0x14001dcf2
   14001dcc1:	bt     r12d,0x8
   14001dcc6:	jae    0x14001dccf
   14001dcc8:	mov    BYTE PTR [rsp+0x4c],0x2d
   14001dccd:	jmp    0x14001dcda
   14001dccf:	test   r12b,0x1
   14001dcd3:	je     0x14001dce5
   14001dcd5:	mov    BYTE PTR [rsp+0x4c],0x2b
   14001dcda:	mov    edi,0x1
   14001dcdf:	mov    DWORD PTR [rsp+0x48],edi
   14001dce3:	jmp    0x14001dcf6
   14001dce5:	test   r12b,0x2
   14001dce9:	je     0x14001dcf2
   14001dceb:	mov    BYTE PTR [rsp+0x4c],0x20
   14001dcf0:	jmp    0x14001dcda
   14001dcf2:	mov    edi,DWORD PTR [rsp+0x48]
   14001dcf6:	mov    esi,DWORD PTR [rsp+0x54]
   14001dcfa:	mov    rbp,QWORD PTR [rsp+0x68]
   14001dcff:	sub    esi,DWORD PTR [rsp+0x44]
   14001dd03:	sub    esi,edi
   14001dd05:	test   r12b,0xc
   14001dd09:	jne    0x14001dd1c
   14001dd0b:	lea    r9,[rsp+0x40]
   14001dd10:	mov    r8,rbp
   14001dd13:	mov    edx,esi
   14001dd15:	mov    cl,0x20
   14001dd17:	call   0x14001c9fc
   14001dd1c:	lea    r9,[rsp+0x40]
   14001dd21:	lea    rcx,[rsp+0x4c]
   14001dd26:	mov    r8,rbp
   14001dd29:	mov    edx,edi
   14001dd2b:	call   0x14001ca50
   14001dd30:	test   r12b,0x8
   14001dd34:	je     0x14001dd4d
   14001dd36:	test   r12b,0x4
   14001dd3a:	jne    0x14001dd4d
   14001dd3c:	lea    r9,[rsp+0x40]
   14001dd41:	mov    r8,rbp
   14001dd44:	mov    edx,esi
   14001dd46:	mov    cl,0x30
   14001dd48:	call   0x14001c9fc
   14001dd4d:	mov    edi,DWORD PTR [rsp+0x44]
   14001dd51:	xor    eax,eax
   14001dd53:	cmp    DWORD PTR [rsp+0x50],eax
   14001dd57:	je     0x14001ddce
   14001dd59:	cmp    edi,eax
   14001dd5b:	jle    0x14001ddce
   14001dd5d:	mov    rbp,rbx
   14001dd60:	movzx  r9d,WORD PTR [rbp+0x0]
   14001dd65:	lea    rdx,[rsp+0x2c0]
   14001dd6d:	lea    rcx,[rsp+0xa0]
   14001dd75:	mov    r8d,0x6
   14001dd7b:	dec    edi
   14001dd7d:	add    rbp,0x2
   14001dd81:	call   0x140024b60
   14001dd86:	xor    r10d,r10d
   14001dd89:	cmp    eax,r10d
   14001dd8c:	jne    0x14001ddc0
   14001dd8e:	mov    edx,DWORD PTR [rsp+0xa0]
   14001dd95:	cmp    edx,r10d
   14001dd98:	je     0x14001ddc0
   14001dd9a:	mov    r8,QWORD PTR [rsp+0x68]
   14001dd9f:	lea    r9,[rsp+0x40]
   14001dda4:	lea    rcx,[rsp+0x2c0]
   14001ddac:	call   0x14001ca50
   14001ddb1:	xor    r10d,r10d
   14001ddb4:	cmp    edi,r10d
   14001ddb7:	jne    0x14001dd60
   14001ddb9:	mov    rbp,QWORD PTR [rsp+0x68]
   14001ddbe:	jmp    0x14001dde3
   14001ddc0:	mov    rbp,QWORD PTR [rsp+0x68]
   14001ddc5:	mov    eax,r14d
   14001ddc8:	mov    DWORD PTR [rsp+0x40],eax
   14001ddcc:	jmp    0x14001dde7
   14001ddce:	lea    r9,[rsp+0x40]
   14001ddd3:	mov    r8,rbp
   14001ddd6:	mov    edx,edi
   14001ddd8:	mov    rcx,rbx
   14001dddb:	call   0x14001ca50
   14001dde0:	xor    r10d,r10d
   14001dde3:	mov    eax,DWORD PTR [rsp+0x40]
   14001dde7:	cmp    eax,r10d
   14001ddea:	jl     0x14001de06
   14001ddec:	test   r12b,0x4
   14001ddf0:	je     0x14001de06
   14001ddf2:	lea    r9,[rsp+0x40]
   14001ddf7:	mov    r8,rbp
   14001ddfa:	mov    edx,esi
   14001ddfc:	mov    cl,0x20
   14001ddfe:	call   0x14001c9fc
   14001de03:	xor    r10d,r10d
   14001de06:	mov    rax,QWORD PTR [rsp+0x98]
   14001de0e:	cmp    rax,r10
   14001de11:	je     0x14001de26
   14001de13:	mov    rcx,rax
   14001de16:	call   0x140014f10
   14001de1b:	xor    r10d,r10d
   14001de1e:	mov    QWORD PTR [rsp+0x98],r10
   14001de26:	mov    rdi,QWORD PTR [rsp+0xb0]
   14001de2e:	mov    esi,DWORD PTR [rsp+0x40]
   14001de32:	mov    edx,DWORD PTR [rsp+0x5c]
   14001de36:	lea    r9,[rip+0xfffffffffffe21c3]        # 0x140000000
   14001de3d:	mov    r11d,0x200
   14001de43:	mov    bpl,BYTE PTR [rdi]
   14001de46:	cmp    bpl,r10b
   14001de49:	jne    0x14001d767
   14001de4f:	cmp    edx,r10d
   14001de52:	je     0x14001de5d
   14001de54:	cmp    edx,0x7
   14001de57:	jne    0x14001d6ec
   14001de5d:	cmp    BYTE PTR [rsp+0x90],r10b
   14001de65:	je     0x14001de76
   14001de67:	mov    rcx,QWORD PTR [rsp+0x88]
   14001de6f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001de76:	mov    eax,esi
   14001de78:	mov    rcx,QWORD PTR [rsp+0x2c8]
   14001de80:	xor    rcx,rsp
   14001de83:	call   0x1400144f0
   14001de88:	mov    rbx,QWORD PTR [rsp+0x320]
   14001de90:	add    rsp,0x2d0
   14001de97:	pop    r15
   14001de99:	pop    r14
   14001de9b:	pop    r13
   14001de9d:	pop    r12
   14001de9f:	pop    rdi
   14001dea0:	pop    rsi
   14001dea1:	pop    rbp
   14001dea2:	ret    
   14001dea3:	cmp    bpl,0x49
   14001dea7:	je     0x14001dee6
   14001dea9:	cmp    bpl,0x68
   14001dead:	je     0x14001dedd
   14001deaf:	cmp    bpl,0x6c
   14001deb3:	je     0x14001dec2
   14001deb5:	cmp    bpl,0x77
   14001deb9:	jne    0x14001de43
   14001debb:	bts    r12d,0xb
   14001dec0:	jmp    0x14001de43
   14001dec2:	cmp    BYTE PTR [rdi],0x6c
   14001dec5:	jne    0x14001ded4
   14001dec7:	inc    rdi
   14001deca:	bts    r12d,0xc
   14001decf:	jmp    0x14001de43
   14001ded4:	or     r12d,0x10
   14001ded8:	jmp    0x14001de43
   14001dedd:	or     r12d,0x20
   14001dee1:	jmp    0x14001de43
   14001dee6:	mov    al,BYTE PTR [rdi]
   14001dee8:	bts    r12d,0xf
   14001deed:	cmp    al,0x36
   14001deef:	jne    0x14001df05
   14001def1:	cmp    BYTE PTR [rdi+0x1],0x34
   14001def5:	jne    0x14001df05
   14001def7:	add    rdi,0x2
   14001defb:	bts    r12d,0xf
   14001df00:	jmp    0x14001de43
   14001df05:	cmp    al,0x33
   14001df07:	jne    0x14001df1d
   14001df09:	cmp    BYTE PTR [rdi+0x1],0x32
   14001df0d:	jne    0x14001df1d
   14001df0f:	add    rdi,0x2
   14001df13:	btr    r12d,0xf
   14001df18:	jmp    0x14001de43
   14001df1d:	cmp    al,0x64
   14001df1f:	je     0x14001de43
   14001df25:	cmp    al,0x69
   14001df27:	je     0x14001de43
   14001df2d:	cmp    al,0x6f
   14001df2f:	je     0x14001de43
   14001df35:	cmp    al,0x75
   14001df37:	je     0x14001de43
   14001df3d:	cmp    al,0x78
   14001df3f:	je     0x14001de43
   14001df45:	cmp    al,0x58
   14001df47:	je     0x14001de43
   14001df4d:	mov    DWORD PTR [rsp+0x5c],r10d
   14001df52:	lea    rdx,[rsp+0x78]
   14001df57:	movzx  ecx,bpl
   14001df5b:	mov    DWORD PTR [rsp+0x50],r10d
   14001df60:	call   0x14001988c
   14001df65:	xor    esi,esi
   14001df67:	cmp    eax,esi
   14001df69:	je     0x14001df8c
   14001df6b:	mov    rdx,QWORD PTR [rsp+0x68]
   14001df70:	lea    r8,[rsp+0x40]
   14001df75:	mov    cl,bpl
   14001df78:	call   0x14001c9b4
   14001df7d:	mov    bpl,BYTE PTR [rdi]
   14001df80:	inc    rdi
   14001df83:	cmp    bpl,sil
   14001df86:	je     0x14001e08e
   14001df8c:	mov    rdx,QWORD PTR [rsp+0x68]
   14001df91:	lea    r8,[rsp+0x40]
   14001df96:	mov    cl,bpl
   14001df99:	call   0x14001c9b4
   14001df9e:	xor    r10d,r10d
   14001dfa1:	jmp    0x14001de2e
   14001dfa6:	cmp    bpl,0x2a
   14001dfaa:	jne    0x14001dfc5
   14001dfac:	mov    r15d,DWORD PTR [r13+0x0]
   14001dfb0:	add    r13,0x8
   14001dfb4:	cmp    r15d,r10d
   14001dfb7:	jge    0x14001de43
   14001dfbd:	mov    r15d,r14d
   14001dfc0:	jmp    0x14001de43
   14001dfc5:	lea    ecx,[r15+r15*4]
   14001dfc9:	movsx  eax,bpl
   14001dfcd:	lea    r15d,[rax+rcx*2-0x30]
   14001dfd2:	jmp    0x14001de43
   14001dfd7:	mov    r15d,r10d
   14001dfda:	jmp    0x14001de43
   14001dfdf:	cmp    bpl,0x2a
   14001dfe3:	jne    0x14001e002
   14001dfe5:	mov    eax,DWORD PTR [r13+0x0]
   14001dfe9:	add    r13,0x8
   14001dfed:	cmp    eax,r10d
   14001dff0:	mov    DWORD PTR [rsp+0x54],eax
   14001dff4:	jge    0x14001de43
   14001dffa:	or     r12d,0x4
   14001dffe:	neg    eax
   14001e000:	jmp    0x14001e011
   14001e002:	mov    eax,DWORD PTR [rsp+0x54]
   14001e006:	lea    ecx,[rax+rax*4]
   14001e009:	movsx  eax,bpl
   14001e00d:	lea    eax,[rax+rcx*2-0x30]
   14001e011:	mov    DWORD PTR [rsp+0x54],eax
   14001e015:	jmp    0x14001de43
   14001e01a:	cmp    bpl,0x20
   14001e01e:	je     0x14001e061
   14001e020:	cmp    bpl,0x23
   14001e024:	je     0x14001e057
   14001e026:	cmp    bpl,0x2b
   14001e02a:	je     0x14001e04e
   14001e02c:	cmp    bpl,0x2d
   14001e030:	je     0x14001e045
   14001e032:	cmp    bpl,0x30
   14001e036:	jne    0x14001de43
   14001e03c:	or     r12d,0x8
   14001e040:	jmp    0x14001de43
   14001e045:	or     r12d,0x4
   14001e049:	jmp    0x14001de43
   14001e04e:	or     r12d,0x1
   14001e052:	jmp    0x14001de43
   14001e057:	bts    r12d,0x7
   14001e05c:	jmp    0x14001de43
   14001e061:	or     r12d,0x2
   14001e065:	jmp    0x14001de43
   14001e06a:	mov    DWORD PTR [rsp+0x70],r10d
   14001e06f:	mov    DWORD PTR [rsp+0x58],r10d
   14001e074:	mov    DWORD PTR [rsp+0x54],r10d
   14001e079:	mov    DWORD PTR [rsp+0x48],r10d
   14001e07e:	mov    r12d,r10d
   14001e081:	mov    r15d,r14d
   14001e084:	mov    DWORD PTR [rsp+0x50],r10d
   14001e089:	jmp    0x14001de43
   14001e08e:	call   0x140015f48
   14001e093:	xor    r9d,r9d
   14001e096:	xor    r8d,r8d
   14001e099:	xor    edx,edx
   14001e09b:	xor    ecx,ecx
   14001e09d:	mov    QWORD PTR [rsp+0x20],rsi
   14001e0a2:	mov    DWORD PTR [rax],0x16
   14001e0a8:	call   0x1400149a8
   14001e0ad:	cmp    BYTE PTR [rsp+0x90],sil
   14001e0b5:	jmp    0x14001d714
   14001e0ba:	int3   
   14001e0bb:	int3   
   14001e0bc:	rex push rbx
   14001e0be:	sub    rsp,0x40
   14001e0c2:	mov    rbx,rcx
   14001e0c5:	lea    rcx,[rsp+0x20]
   14001e0ca:	call   0x140014a6c
   14001e0cf:	movsx  ecx,BYTE PTR [rbx]
   14001e0d2:	call   0x140014c88
   14001e0d7:	cmp    eax,0x65
   14001e0da:	je     0x14001e0eb
   14001e0dc:	inc    rbx
   14001e0df:	movzx  ecx,BYTE PTR [rbx]
   14001e0e2:	call   0x1400234e8
   14001e0e7:	test   eax,eax
   14001e0e9:	jne    0x14001e0dc
   14001e0eb:	movsx  ecx,BYTE PTR [rbx]
   14001e0ee:	call   0x140014c88
   14001e0f3:	cmp    eax,0x78
   14001e0f6:	jne    0x14001e0fc
   14001e0f8:	add    rbx,0x2
   14001e0fc:	mov    rax,QWORD PTR [rsp+0x20]
   14001e101:	mov    dl,BYTE PTR [rbx]
   14001e103:	mov    rcx,QWORD PTR [rax+0x128]
   14001e10a:	mov    rax,QWORD PTR [rcx]
   14001e10d:	mov    cl,BYTE PTR [rax]
   14001e10f:	mov    BYTE PTR [rbx],cl
   14001e111:	inc    rbx
   14001e114:	mov    al,BYTE PTR [rbx]
   14001e116:	mov    BYTE PTR [rbx],dl
   14001e118:	mov    dl,al
   14001e11a:	mov    al,BYTE PTR [rbx]
   14001e11c:	inc    rbx
   14001e11f:	test   al,al
   14001e121:	jne    0x14001e114
   14001e123:	cmp    BYTE PTR [rsp+0x38],al
   14001e127:	je     0x14001e135
   14001e129:	mov    rax,QWORD PTR [rsp+0x30]
   14001e12e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e135:	add    rsp,0x40
   14001e139:	pop    rbx
   14001e13a:	ret    
   14001e13b:	int3   
   14001e13c:	rex push rbx
   14001e13e:	sub    rsp,0x40
   14001e142:	mov    rbx,rcx
   14001e145:	lea    rcx,[rsp+0x20]
   14001e14a:	call   0x140014a6c
   14001e14f:	mov    r11b,BYTE PTR [rbx]
   14001e152:	mov    rcx,QWORD PTR [rsp+0x20]
   14001e157:	test   r11b,r11b
   14001e15a:	je     0x14001e178
   14001e15c:	mov    rax,QWORD PTR [rcx+0x128]
   14001e163:	mov    rdx,QWORD PTR [rax]
   14001e166:	mov    al,BYTE PTR [rdx]
   14001e168:	cmp    r11b,al
   14001e16b:	je     0x14001e178
   14001e16d:	inc    rbx
   14001e170:	mov    r11b,BYTE PTR [rbx]
   14001e173:	test   r11b,r11b
   14001e176:	jne    0x14001e168
   14001e178:	mov    al,BYTE PTR [rbx]
   14001e17a:	inc    rbx
   14001e17d:	test   al,al
   14001e17f:	je     0x14001e1c0
   14001e181:	jmp    0x14001e18e
   14001e183:	cmp    al,0x65
   14001e185:	je     0x14001e194
   14001e187:	cmp    al,0x45
   14001e189:	je     0x14001e194
   14001e18b:	inc    rbx
   14001e18e:	mov    al,BYTE PTR [rbx]
   14001e190:	test   al,al
   14001e192:	jne    0x14001e183
   14001e194:	mov    rdx,rbx
   14001e197:	dec    rbx
   14001e19a:	cmp    BYTE PTR [rbx],0x30
   14001e19d:	je     0x14001e197
   14001e19f:	mov    rax,QWORD PTR [rcx+0x128]
   14001e1a6:	mov    rcx,QWORD PTR [rax]
   14001e1a9:	mov    al,BYTE PTR [rcx]
   14001e1ab:	cmp    BYTE PTR [rbx],al
   14001e1ad:	jne    0x14001e1b2
   14001e1af:	dec    rbx
   14001e1b2:	mov    al,BYTE PTR [rdx]
   14001e1b4:	inc    rbx
   14001e1b7:	inc    rdx
   14001e1ba:	mov    BYTE PTR [rbx],al
   14001e1bc:	test   al,al
   14001e1be:	jne    0x14001e1b2
   14001e1c0:	cmp    BYTE PTR [rsp+0x38],0x0
   14001e1c5:	je     0x14001e1d3
   14001e1c7:	mov    rax,QWORD PTR [rsp+0x30]
   14001e1cc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e1d3:	add    rsp,0x40
   14001e1d7:	pop    rbx
   14001e1d8:	ret    
   14001e1d9:	int3   
   14001e1da:	int3   
   14001e1db:	int3   
   14001e1dc:	movsd  xmm0,QWORD PTR [rcx]
   14001e1e0:	comisd xmm0,QWORD PTR [rip+0x1bcd8]        # 0x140039ec0
   14001e1e8:	jb     0x14001e1f0
   14001e1ea:	mov    eax,0x1
   14001e1ef:	ret    
   14001e1f0:	xor    eax,eax
   14001e1f2:	ret    
   14001e1f3:	int3   
   14001e1f4:	rex push rbx
   14001e1f6:	sub    rsp,0x30
   14001e1fa:	mov    rax,r8
   14001e1fd:	mov    rbx,rdx
   14001e200:	mov    r8,r9
   14001e203:	mov    rdx,rax
   14001e206:	test   ecx,ecx
   14001e208:	je     0x14001e21e
   14001e20a:	lea    rcx,[rsp+0x20]
   14001e20f:	call   0x140024b74
   14001e214:	mov    r11,QWORD PTR [rsp+0x20]
   14001e219:	mov    QWORD PTR [rbx],r11
   14001e21c:	jmp    0x14001e230
   14001e21e:	lea    rcx,[rsp+0x40]
   14001e223:	call   0x140024c78
   14001e228:	mov    r11d,DWORD PTR [rsp+0x40]
   14001e22d:	mov    DWORD PTR [rbx],r11d
   14001e230:	add    rsp,0x30
   14001e234:	pop    rbx
   14001e235:	ret    
   14001e236:	int3   
   14001e237:	int3   
   14001e238:	xor    r9d,r9d
   14001e23b:	jmp    0x14001e1f4
   14001e240:	xor    edx,edx
   14001e242:	jmp    0x14001e0bc
   14001e247:	int3   
   14001e248:	xor    edx,edx
   14001e24a:	jmp    0x14001e13c
   14001e24f:	int3   
   14001e250:	mov    rax,rsp
   14001e253:	mov    QWORD PTR [rax+0x8],rbx
   14001e257:	mov    QWORD PTR [rax+0x10],rbp
   14001e25b:	mov    QWORD PTR [rax+0x18],rsi
   14001e25f:	mov    QWORD PTR [rax+0x20],rdi
   14001e263:	push   r12
   14001e265:	push   r13
   14001e267:	push   r15
   14001e269:	sub    rsp,0x50
   14001e26d:	mov    r12,rdx
   14001e270:	mov    rdx,QWORD PTR [rsp+0xa0]
   14001e278:	mov    rdi,rcx
   14001e27b:	lea    rcx,[rax-0x38]
   14001e27f:	mov    r15d,r9d
   14001e282:	movsxd rbx,r8d
   14001e285:	call   0x140014a6c
   14001e28a:	xor    r13d,r13d
   14001e28d:	cmp    rdi,r13
   14001e290:	jne    0x14001e2cb
   14001e292:	call   0x140015f48
   14001e297:	lea    ebx,[r13+0x16]
   14001e29b:	xor    r9d,r9d
   14001e29e:	xor    r8d,r8d
   14001e2a1:	xor    edx,edx
   14001e2a3:	xor    ecx,ecx
   14001e2a5:	mov    DWORD PTR [rax],ebx
   14001e2a7:	mov    QWORD PTR [rsp+0x20],r13
   14001e2ac:	call   0x1400149a8
   14001e2b1:	cmp    BYTE PTR [rsp+0x48],r13b
   14001e2b6:	je     0x14001e2c4
   14001e2b8:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e2bd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001e2c4:	mov    eax,ebx
   14001e2c6:	jmp    0x14001e488
   14001e2cb:	cmp    r12,r13
   14001e2ce:	ja     0x14001e305
   14001e2d0:	call   0x140015f48
   14001e2d5:	mov    ebx,0x16
   14001e2da:	xor    r9d,r9d
   14001e2dd:	xor    r8d,r8d
   14001e2e0:	xor    edx,edx
   14001e2e2:	xor    ecx,ecx
   14001e2e4:	mov    DWORD PTR [rax],ebx
   14001e2e6:	mov    QWORD PTR [rsp+0x20],r13
   14001e2eb:	call   0x1400149a8
   14001e2f0:	cmp    BYTE PTR [rsp+0x48],r13b
   14001e2f5:	je     0x14001e2c4
   14001e2f7:	mov    rax,QWORD PTR [rsp+0x40]
   14001e2fc:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e303:	jmp    0x14001e2c4
   14001e305:	mov    eax,r13d
   14001e308:	cmp    ebx,r13d
   14001e30b:	cmovg  eax,ebx
   14001e30e:	add    eax,0x9
   14001e311:	cdqe   
   14001e313:	cmp    r12,rax
   14001e316:	ja     0x14001e327
   14001e318:	call   0x140015f48
   14001e31d:	mov    ebx,0x22
   14001e322:	jmp    0x14001e29b
   14001e327:	mov    rbp,QWORD PTR [rsp+0x90]
   14001e32f:	cmp    BYTE PTR [rsp+0x98],r13b
   14001e337:	je     0x14001e36f
   14001e339:	cmp    DWORD PTR [rbp+0x0],0x2d
   14001e33d:	mov    rsi,r13
   14001e340:	sete   sil
   14001e344:	add    rsi,rdi
   14001e347:	test   ebx,ebx
   14001e349:	setg   r13b
   14001e34d:	test   r13d,r13d
   14001e350:	je     0x14001e36c
   14001e352:	mov    rcx,rsi
   14001e355:	call   0x140015c00
   14001e35a:	movsxd rcx,r13d
   14001e35d:	mov    rdx,rsi
   14001e360:	lea    r8,[rax+0x1]
   14001e364:	add    rcx,rsi
   14001e367:	call   0x1400160c0
   14001e36c:	xor    r13d,r13d
   14001e36f:	cmp    DWORD PTR [rbp+0x0],0x2d
   14001e373:	mov    rdx,rdi
   14001e376:	jne    0x14001e37f
   14001e378:	mov    BYTE PTR [rdi],0x2d
   14001e37b:	lea    rdx,[rdi+0x1]
   14001e37f:	cmp    ebx,r13d
   14001e382:	jle    0x14001e39f
   14001e384:	mov    al,BYTE PTR [rdx+0x1]
   14001e387:	mov    BYTE PTR [rdx],al
   14001e389:	mov    rax,QWORD PTR [rsp+0x30]
   14001e38e:	inc    rdx
   14001e391:	mov    rcx,QWORD PTR [rax+0x128]
   14001e398:	mov    rax,QWORD PTR [rcx]
   14001e39b:	mov    cl,BYTE PTR [rax]
   14001e39d:	mov    BYTE PTR [rdx],cl
   14001e39f:	cmp    BYTE PTR [rsp+0x98],r13b
   14001e3a7:	mov    rcx,r13
   14001e3aa:	lea    r8,[rip+0x1bb17]        # 0x140039ec8
   14001e3b1:	sete   cl
   14001e3b4:	add    rbx,rdx
   14001e3b7:	add    rbx,rcx
   14001e3ba:	sub    rdi,rbx
   14001e3bd:	cmp    r12,0xffffffffffffffff
   14001e3c1:	mov    rcx,rbx
   14001e3c4:	lea    rdx,[r12+rdi*1]
   14001e3c8:	cmove  rdx,r12
   14001e3cc:	call   0x1400164d8
   14001e3d1:	cmp    eax,r13d
   14001e3d4:	je     0x14001e3ea
   14001e3d6:	xor    r9d,r9d
   14001e3d9:	xor    r8d,r8d
   14001e3dc:	xor    edx,edx
   14001e3de:	xor    ecx,ecx
   14001e3e0:	mov    QWORD PTR [rsp+0x20],r13
   14001e3e5:	call   0x140014880
   14001e3ea:	lea    rcx,[rbx+0x2]
   14001e3ee:	cmp    r15d,r13d
   14001e3f1:	je     0x14001e3f6
   14001e3f3:	mov    BYTE PTR [rbx],0x45
   14001e3f6:	mov    rax,QWORD PTR [rbp+0x10]
   14001e3fa:	cmp    BYTE PTR [rax],0x30
   14001e3fd:	je     0x14001e456
   14001e3ff:	mov    r8d,DWORD PTR [rbp+0x4]
   14001e403:	sub    r8d,0x1
   14001e407:	jns    0x14001e410
   14001e409:	neg    r8d
   14001e40c:	mov    BYTE PTR [rbx+0x1],0x2d
   14001e410:	cmp    r8d,0x64
   14001e414:	jl     0x14001e431
   14001e416:	mov    eax,0x51eb851f
   14001e41b:	imul   r8d
   14001e41e:	sar    edx,0x5
   14001e421:	mov    eax,edx
   14001e423:	shr    eax,0x1f
   14001e426:	add    edx,eax
   14001e428:	add    BYTE PTR [rbx+0x2],dl
   14001e42b:	imul   edx,edx,0xffffff9c
   14001e42e:	add    r8d,edx
   14001e431:	cmp    r8d,0xa
   14001e435:	jl     0x14001e452
   14001e437:	mov    eax,0x66666667
   14001e43c:	imul   r8d
   14001e43f:	sar    edx,0x2
   14001e442:	mov    eax,edx
   14001e444:	shr    eax,0x1f
   14001e447:	add    edx,eax
   14001e449:	add    BYTE PTR [rbx+0x3],dl
   14001e44c:	imul   edx,edx,0xfffffff6
   14001e44f:	add    r8d,edx
   14001e452:	add    BYTE PTR [rbx+0x4],r8b
   14001e456:	test   BYTE PTR [rip+0x30f33],0x1        # 0x14004f390
   14001e45d:	je     0x14001e473
   14001e45f:	cmp    BYTE PTR [rcx],0x30
   14001e462:	jne    0x14001e473
   14001e464:	lea    rdx,[rcx+0x1]
   14001e468:	mov    r8d,0x3
   14001e46e:	call   0x1400160c0
   14001e473:	cmp    BYTE PTR [rsp+0x48],r13b
   14001e478:	je     0x14001e486
   14001e47a:	mov    rax,QWORD PTR [rsp+0x40]
   14001e47f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e486:	xor    eax,eax
   14001e488:	lea    r11,[rsp+0x50]
   14001e48d:	mov    rbx,QWORD PTR [r11+0x20]
   14001e491:	mov    rbp,QWORD PTR [r11+0x28]
   14001e495:	mov    rsi,QWORD PTR [r11+0x30]
   14001e499:	mov    rdi,QWORD PTR [r11+0x38]
   14001e49d:	mov    rsp,r11
   14001e4a0:	pop    r15
   14001e4a2:	pop    r13
   14001e4a4:	pop    r12
   14001e4a6:	ret    
   14001e4a7:	int3   
   14001e4a8:	rex push rbx
   14001e4aa:	push   rsi
   14001e4ab:	push   rdi
   14001e4ac:	push   r12
   14001e4ae:	sub    rsp,0x88
   14001e4b5:	mov    rax,QWORD PTR [rip+0x2a904]        # 0x140048dc0
   14001e4bc:	xor    rax,rsp
   14001e4bf:	mov    QWORD PTR [rsp+0x70],rax
   14001e4c4:	mov    rcx,QWORD PTR [rcx]
   14001e4c7:	mov    rbx,r8
   14001e4ca:	mov    rdi,rdx
   14001e4cd:	mov    esi,r9d
   14001e4d0:	mov    r12d,0x16
   14001e4d6:	lea    r8,[rsp+0x58]
   14001e4db:	lea    rdx,[rsp+0x40]
   14001e4e0:	mov    r9,r12
   14001e4e3:	call   0x140024f30
   14001e4e8:	test   rdi,rdi
   14001e4eb:	jne    0x14001e512
   14001e4ed:	call   0x140015f48
   14001e4f2:	and    QWORD PTR [rsp+0x20],0x0
   14001e4f8:	xor    r9d,r9d
   14001e4fb:	xor    r8d,r8d
   14001e4fe:	xor    edx,edx
   14001e500:	xor    ecx,ecx
   14001e502:	mov    DWORD PTR [rax],r12d
   14001e505:	call   0x1400149a8
   14001e50a:	mov    eax,r12d
   14001e50d:	jmp    0x14001e59a
   14001e512:	test   rbx,rbx
   14001e515:	je     0x14001e4ed
   14001e517:	or     rdx,0xffffffffffffffff
   14001e51b:	cmp    rbx,rdx
   14001e51e:	je     0x14001e53a
   14001e520:	xor    eax,eax
   14001e522:	cmp    DWORD PTR [rsp+0x40],0x2d
   14001e527:	mov    rdx,rbx
   14001e52a:	sete   al
   14001e52d:	sub    rdx,rax
   14001e530:	xor    eax,eax
   14001e532:	test   esi,esi
   14001e534:	setg   al
   14001e537:	sub    rdx,rax
   14001e53a:	xor    eax,eax
   14001e53c:	cmp    DWORD PTR [rsp+0x40],0x2d
   14001e541:	lea    r8d,[rsi+0x1]
   14001e545:	sete   al
   14001e548:	xor    ecx,ecx
   14001e54a:	test   esi,esi
   14001e54c:	setg   cl
   14001e54f:	add    rax,rdi
   14001e552:	lea    r9,[rsp+0x40]
   14001e557:	add    rcx,rax
   14001e55a:	call   0x140024d7c
   14001e55f:	test   eax,eax
   14001e561:	je     0x14001e568
   14001e563:	mov    BYTE PTR [rdi],0x0
   14001e566:	jmp    0x14001e59a
   14001e568:	mov    rax,QWORD PTR [rsp+0xd8]
   14001e570:	mov    r9d,DWORD PTR [rsp+0xd0]
   14001e578:	mov    r8d,esi
   14001e57b:	mov    QWORD PTR [rsp+0x30],rax
   14001e580:	lea    rax,[rsp+0x40]
   14001e585:	mov    rdx,rbx
   14001e588:	mov    rcx,rdi
   14001e58b:	mov    BYTE PTR [rsp+0x28],0x0
   14001e590:	mov    QWORD PTR [rsp+0x20],rax
   14001e595:	call   0x14001e250
   14001e59a:	mov    rcx,QWORD PTR [rsp+0x70]
   14001e59f:	xor    rcx,rsp
   14001e5a2:	call   0x1400144f0
   14001e5a7:	add    rsp,0x88
   14001e5ae:	pop    r12
   14001e5b0:	pop    rdi
   14001e5b1:	pop    rsi
   14001e5b2:	pop    rbx
   14001e5b3:	ret    
   14001e5b4:	mov    rax,rsp
   14001e5b7:	mov    QWORD PTR [rax+0x8],rbx
   14001e5bb:	mov    QWORD PTR [rax+0x10],rbp
   14001e5bf:	mov    QWORD PTR [rax+0x18],rdi
   14001e5c3:	mov    QWORD PTR [rax+0x20],r12
   14001e5c7:	push   r13
   14001e5c9:	push   r14
   14001e5cb:	push   r15
   14001e5cd:	sub    rsp,0x50
   14001e5d1:	mov    rdi,rdx
   14001e5d4:	mov    rdx,QWORD PTR [rsp+0x98]
   14001e5dc:	mov    r13,rcx
   14001e5df:	lea    rcx,[rax-0x38]
   14001e5e3:	mov    ebp,r9d
   14001e5e6:	mov    rbx,r8
   14001e5e9:	mov    r15d,0x3ff
   14001e5ef:	mov    r12d,0x30
   14001e5f5:	call   0x140014a6c
   14001e5fa:	xor    r14d,r14d
   14001e5fd:	cmp    ebp,r14d
   14001e600:	cmovl  ebp,r14d
   14001e604:	cmp    rdi,r14
   14001e607:	jne    0x14001e643
   14001e609:	call   0x140015f48
   14001e60e:	lea    ebx,[r12-0x1a]
   14001e613:	xor    r9d,r9d
   14001e616:	xor    r8d,r8d
   14001e619:	xor    edx,edx
   14001e61b:	xor    ecx,ecx
   14001e61d:	mov    DWORD PTR [rax],ebx
   14001e61f:	mov    QWORD PTR [rsp+0x20],r14
   14001e624:	call   0x1400149a8
   14001e629:	cmp    BYTE PTR [rsp+0x48],r14b
   14001e62e:	je     0x14001e63c
   14001e630:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e635:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001e63c:	mov    eax,ebx
   14001e63e:	jmp    0x14001e9be
   14001e643:	cmp    rbx,r14
   14001e646:	ja     0x14001e67d
   14001e648:	call   0x140015f48
   14001e64d:	mov    ebx,0x16
   14001e652:	xor    r9d,r9d
   14001e655:	xor    r8d,r8d
   14001e658:	xor    edx,edx
   14001e65a:	xor    ecx,ecx
   14001e65c:	mov    DWORD PTR [rax],ebx
   14001e65e:	mov    QWORD PTR [rsp+0x20],r14
   14001e663:	call   0x1400149a8
   14001e668:	cmp    BYTE PTR [rsp+0x48],r14b
   14001e66d:	je     0x14001e63c
   14001e66f:	mov    rax,QWORD PTR [rsp+0x40]
   14001e674:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e67b:	jmp    0x14001e63c
   14001e67d:	lea    eax,[rbp+0xb]
   14001e680:	mov    BYTE PTR [rdi],r14b
   14001e683:	movsxd rcx,eax
   14001e686:	cmp    rbx,rcx
   14001e689:	ja     0x14001e69a
   14001e68b:	call   0x140015f48
   14001e690:	mov    ebx,0x22
   14001e695:	jmp    0x14001e613
   14001e69a:	mov    rax,QWORD PTR [r13+0x0]
   14001e69e:	mov    ecx,0x7ff
   14001e6a3:	shr    rax,0x34
   14001e6a7:	and    rax,rcx
   14001e6aa:	cmp    rax,rcx
   14001e6ad:	jne    0x14001e74e
   14001e6b3:	lea    r8,[rbx-0x2]
   14001e6b7:	cmp    rbx,0xffffffffffffffff
   14001e6bb:	lea    rdx,[rdi+0x2]
   14001e6bf:	mov    r9d,ebp
   14001e6c2:	mov    rcx,r13
   14001e6c5:	cmove  r8,rbx
   14001e6c9:	mov    QWORD PTR [rsp+0x28],r14
   14001e6ce:	mov    DWORD PTR [rsp+0x20],r14d
   14001e6d3:	call   0x14001e4a8
   14001e6d8:	cmp    eax,r14d
   14001e6db:	je     0x14001e6fc
   14001e6dd:	mov    BYTE PTR [rdi],r14b
   14001e6e0:	cmp    BYTE PTR [rsp+0x48],r14b
   14001e6e5:	je     0x14001e9be
   14001e6eb:	mov    rcx,QWORD PTR [rsp+0x40]
   14001e6f0:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001e6f7:	jmp    0x14001e9be
   14001e6fc:	cmp    BYTE PTR [rdi+0x2],0x2d
   14001e700:	jne    0x14001e708
   14001e702:	mov    BYTE PTR [rdi],0x2d
   14001e705:	inc    rdi
   14001e708:	mov    ebx,DWORD PTR [rsp+0x90]
   14001e70f:	mov    BYTE PTR [rdi],0x30
   14001e712:	mov    edx,0x65
   14001e717:	mov    eax,ebx
   14001e719:	neg    eax
   14001e71b:	sbb    cl,cl
   14001e71d:	and    cl,0xe0
   14001e720:	add    cl,0x78
   14001e723:	mov    BYTE PTR [rdi+0x1],cl
   14001e726:	lea    rcx,[rdi+0x2]
   14001e72a:	call   0x140020a70
   14001e72f:	cmp    rax,r14
   14001e732:	je     0x14001e744
   14001e734:	neg    ebx
   14001e736:	sbb    cl,cl
   14001e738:	and    cl,0xe0
   14001e73b:	add    cl,0x70
   14001e73e:	mov    BYTE PTR [rax],cl
   14001e740:	mov    BYTE PTR [rax+0x3],r14b
   14001e744:	cmp    BYTE PTR [rsp+0x48],r14b
   14001e749:	jmp    0x14001e9ae
   14001e74e:	movabs rax,0x8000000000000000
   14001e758:	test   QWORD PTR [r13+0x0],rax
   14001e75c:	je     0x14001e764
   14001e75e:	mov    BYTE PTR [rdi],0x2d
   14001e761:	inc    rdi
   14001e764:	mov    r9d,DWORD PTR [rsp+0x90]
   14001e76c:	mov    r11d,0x30
   14001e772:	movabs rbx,0xfffffffffffff
   14001e77c:	mov    eax,r9d
   14001e77f:	mov    BYTE PTR [rdi],r11b
   14001e782:	neg    eax
   14001e784:	mov    eax,r9d
   14001e787:	sbb    cl,cl
   14001e789:	and    cl,0xe0
   14001e78c:	add    cl,0x78
   14001e78f:	neg    eax
   14001e791:	movabs rax,0x7ff0000000000000
   14001e79b:	sbb    edx,edx
   14001e79d:	mov    BYTE PTR [rdi+0x1],cl
   14001e7a0:	and    edx,0xffffffe0
   14001e7a3:	sub    edx,0xffffffd9
   14001e7a6:	test   QWORD PTR [r13+0x0],rax
   14001e7aa:	jne    0x14001e7ca
   14001e7ac:	mov    BYTE PTR [rdi+0x2],r11b
   14001e7b0:	mov    rax,QWORD PTR [r13+0x0]
   14001e7b4:	add    rdi,0x3
   14001e7b8:	and    rax,rbx
   14001e7bb:	neg    rax
   14001e7be:	sbb    r15,r15
   14001e7c1:	and    r15d,0x3fe
   14001e7c8:	jmp    0x14001e7d2
   14001e7ca:	mov    BYTE PTR [rdi+0x2],0x31
   14001e7ce:	add    rdi,0x3
   14001e7d2:	xor    r10d,r10d
   14001e7d5:	mov    r14,rdi
   14001e7d8:	inc    rdi
   14001e7db:	cmp    ebp,r10d
   14001e7de:	jne    0x14001e7e5
   14001e7e0:	mov    BYTE PTR [r14],r10b
   14001e7e3:	jmp    0x14001e7f9
   14001e7e5:	mov    rax,QWORD PTR [rsp+0x30]
   14001e7ea:	mov    rcx,QWORD PTR [rax+0x128]
   14001e7f1:	mov    rax,QWORD PTR [rcx]
   14001e7f4:	mov    cl,BYTE PTR [rax]
   14001e7f6:	mov    BYTE PTR [r14],cl
   14001e7f9:	test   QWORD PTR [r13+0x0],rbx
   14001e7fd:	jbe    0x14001e893
   14001e803:	movabs r8,0xf000000000000
   14001e80d:	cmp    ebp,r10d
   14001e810:	jle    0x14001e845
   14001e812:	mov    rax,QWORD PTR [r13+0x0]
   14001e816:	mov    cl,r12b
   14001e819:	and    rax,r8
   14001e81c:	and    rax,rbx
   14001e81f:	shr    rax,cl
   14001e822:	add    ax,r11w
   14001e826:	cmp    ax,0x39
   14001e82a:	jbe    0x14001e82f
   14001e82c:	add    ax,dx
   14001e82f:	add    r12w,0xfffc
   14001e834:	mov    BYTE PTR [rdi],al
   14001e836:	shr    r8,0x4
   14001e83a:	inc    rdi
   14001e83d:	dec    ebp
   14001e83f:	cmp    r12w,r10w
   14001e843:	jge    0x14001e80d
   14001e845:	cmp    r12w,r10w
   14001e849:	jl     0x14001e893
   14001e84b:	mov    rax,QWORD PTR [r13+0x0]
   14001e84f:	mov    cl,r12b
   14001e852:	and    rax,r8
   14001e855:	and    rax,rbx
   14001e858:	shr    rax,cl
   14001e85b:	cmp    ax,0x8
   14001e85f:	jbe    0x14001e893
   14001e861:	lea    rax,[rdi-0x1]
   14001e865:	cmp    BYTE PTR [rax],0x66
   14001e868:	je     0x14001e86f
   14001e86a:	cmp    BYTE PTR [rax],0x46
   14001e86d:	jne    0x14001e877
   14001e86f:	mov    BYTE PTR [rax],r11b
   14001e872:	dec    rax
   14001e875:	jmp    0x14001e865
   14001e877:	cmp    rax,r14
   14001e87a:	je     0x14001e890
   14001e87c:	mov    cl,BYTE PTR [rax]
   14001e87e:	cmp    cl,0x39
   14001e881:	jne    0x14001e88a
   14001e883:	add    dl,0x3a
   14001e886:	mov    BYTE PTR [rax],dl
   14001e888:	jmp    0x14001e893
   14001e88a:	inc    cl
   14001e88c:	mov    BYTE PTR [rax],cl
   14001e88e:	jmp    0x14001e893
   14001e890:	inc    BYTE PTR [rax-0x1]
   14001e893:	cmp    ebp,r10d
   14001e896:	jle    0x14001e8ba
   14001e898:	mov    r8d,ebp
   14001e89b:	mov    dl,r11b
   14001e89e:	mov    rcx,rdi
   14001e8a1:	mov    ebx,ebp
   14001e8a3:	call   0x140015b00
   14001e8a8:	mov    r9d,DWORD PTR [rsp+0x90]
   14001e8b0:	add    rdi,rbx
   14001e8b3:	xor    r10d,r10d
   14001e8b6:	lea    r11d,[r10+0x30]
   14001e8ba:	cmp    BYTE PTR [r14],r10b
   14001e8bd:	cmove  rdi,r14
   14001e8c1:	neg    r9d
   14001e8c4:	sbb    al,al
   14001e8c6:	and    al,0xe0
   14001e8c8:	add    al,0x70
   14001e8ca:	mov    BYTE PTR [rdi],al
   14001e8cc:	mov    rcx,QWORD PTR [r13+0x0]
   14001e8d0:	shr    rcx,0x34
   14001e8d4:	and    ecx,0x7ff
   14001e8da:	sub    rcx,r15
   14001e8dd:	js     0x14001e8e9
   14001e8df:	mov    BYTE PTR [rdi+0x1],0x2b
   14001e8e3:	add    rdi,0x2
   14001e8e7:	jmp    0x14001e8f4
   14001e8e9:	mov    BYTE PTR [rdi+0x1],0x2d
   14001e8ed:	add    rdi,0x2
   14001e8f1:	neg    rcx
   14001e8f4:	cmp    rcx,0x3e8
   14001e8fb:	mov    r8,rdi
   14001e8fe:	mov    BYTE PTR [rdi],r11b
   14001e901:	jl     0x14001e936
   14001e903:	movabs rax,0x20c49ba5e353f7cf
   14001e90d:	imul   rcx
   14001e910:	sar    rdx,0x7
   14001e914:	mov    rax,rdx
   14001e917:	shr    rax,0x3f
   14001e91b:	add    rdx,rax
   14001e91e:	lea    eax,[r11+rdx*1]
   14001e922:	imul   rdx,rdx,0xfffffffffffffc18
   14001e929:	mov    BYTE PTR [rdi],al
   14001e92b:	inc    rdi
   14001e92e:	add    rcx,rdx
   14001e931:	cmp    rdi,r8
   14001e934:	jne    0x14001e93c
   14001e936:	cmp    rcx,0x64
   14001e93a:	jl     0x14001e96a
   14001e93c:	movabs rax,0xa3d70a3d70a3d70b
   14001e946:	imul   rcx
   14001e949:	add    rdx,rcx
   14001e94c:	sar    rdx,0x6
   14001e950:	mov    rax,rdx
   14001e953:	shr    rax,0x3f
   14001e957:	add    rdx,rax
   14001e95a:	lea    eax,[r11+rdx*1]
   14001e95e:	imul   rdx,rdx,0xffffffffffffff9c
   14001e962:	mov    BYTE PTR [rdi],al
   14001e964:	inc    rdi
   14001e967:	add    rcx,rdx
   14001e96a:	cmp    rdi,r8
   14001e96d:	jne    0x14001e975
   14001e96f:	cmp    rcx,0xa
   14001e973:	jl     0x14001e9a0
   14001e975:	movabs rax,0x6666666666666667
   14001e97f:	imul   rcx
   14001e982:	sar    rdx,0x2
   14001e986:	mov    rax,rdx
   14001e989:	shr    rax,0x3f
   14001e98d:	add    rdx,rax
   14001e990:	lea    eax,[r11+rdx*1]
   14001e994:	imul   rdx,rdx,0xfffffffffffffff6
   14001e998:	mov    BYTE PTR [rdi],al
   14001e99a:	inc    rdi
   14001e99d:	add    rcx,rdx
   14001e9a0:	add    cl,r11b
   14001e9a3:	cmp    BYTE PTR [rsp+0x48],r10b
   14001e9a8:	mov    BYTE PTR [rdi],cl
   14001e9aa:	mov    BYTE PTR [rdi+0x1],r10b
   14001e9ae:	je     0x14001e9bc
   14001e9b0:	mov    rax,QWORD PTR [rsp+0x40]
   14001e9b5:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001e9bc:	xor    eax,eax
   14001e9be:	lea    r11,[rsp+0x50]
   14001e9c3:	mov    rbx,QWORD PTR [r11+0x20]
   14001e9c7:	mov    rbp,QWORD PTR [r11+0x28]
   14001e9cb:	mov    rdi,QWORD PTR [r11+0x30]
   14001e9cf:	mov    r12,QWORD PTR [r11+0x38]
   14001e9d3:	mov    rsp,r11
   14001e9d6:	pop    r15
   14001e9d8:	pop    r14
   14001e9da:	pop    r13
   14001e9dc:	ret    
   14001e9dd:	int3   
   14001e9de:	int3   
   14001e9df:	int3   
   14001e9e0:	mov    rax,rsp
   14001e9e3:	mov    QWORD PTR [rax+0x8],rbx
   14001e9e7:	mov    QWORD PTR [rax+0x10],rbp
   14001e9eb:	mov    QWORD PTR [rax+0x18],rsi
   14001e9ef:	mov    QWORD PTR [rax+0x20],rdi
   14001e9f3:	push   r12
   14001e9f5:	sub    rsp,0x50
   14001e9f9:	mov    ebx,DWORD PTR [r9+0x4]
   14001e9fd:	mov    rsi,rdx
   14001ea00:	mov    rdx,QWORD PTR [rsp+0x88]
   14001ea08:	mov    rdi,rcx
   14001ea0b:	lea    rcx,[rax-0x28]
   14001ea0f:	mov    r12,r9
   14001ea12:	dec    ebx
   14001ea14:	mov    ebp,r8d
   14001ea17:	call   0x140014a6c
   14001ea1c:	test   rdi,rdi
   14001ea1f:	jne    0x14001ea59
   14001ea21:	call   0x140015f48
   14001ea26:	and    QWORD PTR [rsp+0x20],rdi
   14001ea2b:	lea    ebx,[rdi+0x16]
   14001ea2e:	xor    r9d,r9d
   14001ea31:	xor    r8d,r8d
   14001ea34:	xor    edx,edx
   14001ea36:	xor    ecx,ecx
   14001ea38:	mov    DWORD PTR [rax],ebx
   14001ea3a:	call   0x1400149a8
   14001ea3f:	cmp    BYTE PTR [rsp+0x48],dil
   14001ea44:	je     0x14001ea52
   14001ea46:	mov    rcx,QWORD PTR [rsp+0x40]
   14001ea4b:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001ea52:	mov    eax,ebx
   14001ea54:	jmp    0x14001eb88
   14001ea59:	test   rsi,rsi
   14001ea5c:	jne    0x14001ea91
   14001ea5e:	call   0x140015f48
   14001ea63:	and    QWORD PTR [rsp+0x20],rsi
   14001ea68:	lea    ebx,[rsi+0x16]
   14001ea6b:	xor    r9d,r9d
   14001ea6e:	xor    r8d,r8d
   14001ea71:	xor    edx,edx
   14001ea73:	xor    ecx,ecx
   14001ea75:	mov    DWORD PTR [rax],ebx
   14001ea77:	call   0x1400149a8
   14001ea7c:	cmp    BYTE PTR [rsp+0x48],sil
   14001ea81:	je     0x14001ea52
   14001ea83:	mov    rax,QWORD PTR [rsp+0x40]
   14001ea88:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001ea8f:	jmp    0x14001ea52
   14001ea91:	cmp    BYTE PTR [rsp+0x80],0x0
   14001ea99:	je     0x14001eab8
   14001ea9b:	cmp    ebx,ebp
   14001ea9d:	jne    0x14001eab8
   14001ea9f:	xor    eax,eax
   14001eaa1:	cmp    DWORD PTR [r12],0x2d
   14001eaa6:	movsxd rcx,ebx
   14001eaa9:	sete   al
   14001eaac:	add    rax,rdi
   14001eaaf:	mov    BYTE PTR [rcx+rax*1],0x30
   14001eab3:	mov    BYTE PTR [rcx+rax*1+0x1],0x0
   14001eab8:	cmp    DWORD PTR [r12],0x2d
   14001eabd:	jne    0x14001eac5
   14001eabf:	mov    BYTE PTR [rdi],0x2d
   14001eac2:	inc    rdi
   14001eac5:	cmp    DWORD PTR [r12+0x4],0x0
   14001eacb:	jg     0x14001eaed
   14001eacd:	mov    rcx,rdi
   14001ead0:	call   0x140015c00
   14001ead5:	lea    rcx,[rdi+0x1]
   14001ead9:	mov    rdx,rdi
   14001eadc:	lea    r8,[rax+0x1]
   14001eae0:	call   0x1400160c0
   14001eae5:	mov    BYTE PTR [rdi],0x30
   14001eae8:	inc    rdi
   14001eaeb:	jmp    0x14001eaf5
   14001eaed:	movsxd rax,DWORD PTR [r12+0x4]
   14001eaf2:	add    rdi,rax
   14001eaf5:	test   ebp,ebp
   14001eaf7:	jle    0x14001eb73
   14001eaf9:	mov    rcx,rdi
   14001eafc:	lea    rsi,[rdi+0x1]
   14001eb00:	call   0x140015c00
   14001eb05:	mov    rdx,rdi
   14001eb08:	mov    rcx,rsi
   14001eb0b:	lea    r8,[rax+0x1]
   14001eb0f:	call   0x1400160c0
   14001eb14:	mov    r11,QWORD PTR [rsp+0x30]
   14001eb19:	mov    rax,QWORD PTR [r11+0x128]
   14001eb20:	mov    rcx,QWORD PTR [rax]
   14001eb23:	mov    al,BYTE PTR [rcx]
   14001eb25:	mov    BYTE PTR [rdi],al
   14001eb27:	mov    ebx,DWORD PTR [r12+0x4]
   14001eb2c:	test   ebx,ebx
   14001eb2e:	jns    0x14001eb73
   14001eb30:	neg    ebx
   14001eb32:	cmp    BYTE PTR [rsp+0x80],0x0
   14001eb3a:	jne    0x14001eb45
   14001eb3c:	mov    eax,ebx
   14001eb3e:	mov    ebx,ebp
   14001eb40:	cmp    ebp,eax
   14001eb42:	cmovge ebx,eax
   14001eb45:	test   ebx,ebx
   14001eb47:	je     0x14001eb63
   14001eb49:	mov    rcx,rsi
   14001eb4c:	call   0x140015c00
   14001eb51:	movsxd rcx,ebx
   14001eb54:	mov    rdx,rsi
   14001eb57:	lea    r8,[rax+0x1]
   14001eb5b:	add    rcx,rsi
   14001eb5e:	call   0x1400160c0
   14001eb63:	movsxd r8,ebx
   14001eb66:	mov    edx,0x30
   14001eb6b:	mov    rcx,rsi
   14001eb6e:	call   0x140015b00
   14001eb73:	cmp    BYTE PTR [rsp+0x48],0x0
   14001eb78:	je     0x14001eb86
   14001eb7a:	mov    rax,QWORD PTR [rsp+0x40]
   14001eb7f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001eb86:	xor    eax,eax
   14001eb88:	mov    rbx,QWORD PTR [rsp+0x60]
   14001eb8d:	mov    rbp,QWORD PTR [rsp+0x68]
   14001eb92:	mov    rsi,QWORD PTR [rsp+0x70]
   14001eb97:	mov    rdi,QWORD PTR [rsp+0x78]
   14001eb9c:	add    rsp,0x50
   14001eba0:	pop    r12
   14001eba2:	ret    
   14001eba3:	int3   
   14001eba4:	rex push rbx
   14001eba6:	push   rsi
   14001eba7:	push   rdi
   14001eba8:	push   r12
   14001ebaa:	sub    rsp,0x78
   14001ebae:	mov    rax,QWORD PTR [rip+0x2a20b]        # 0x140048dc0
   14001ebb5:	xor    rax,rsp
   14001ebb8:	mov    QWORD PTR [rsp+0x60],rax
   14001ebbd:	mov    rcx,QWORD PTR [rcx]
   14001ebc0:	mov    rbx,r8
   14001ebc3:	mov    rdi,rdx
   14001ebc6:	mov    esi,r9d
   14001ebc9:	mov    r12d,0x16
   14001ebcf:	lea    r8,[rsp+0x48]
   14001ebd4:	lea    rdx,[rsp+0x30]
   14001ebd9:	mov    r9,r12
   14001ebdc:	call   0x140024f30
   14001ebe1:	test   rdi,rdi
   14001ebe4:	jne    0x14001ec08
   14001ebe6:	call   0x140015f48
   14001ebeb:	and    QWORD PTR [rsp+0x20],0x0
   14001ebf1:	xor    r9d,r9d
   14001ebf4:	xor    r8d,r8d
   14001ebf7:	xor    edx,edx
   14001ebf9:	xor    ecx,ecx
   14001ebfb:	mov    DWORD PTR [rax],r12d
   14001ebfe:	call   0x1400149a8
   14001ec03:	mov    eax,r12d
   14001ec06:	jmp    0x14001ec73
   14001ec08:	test   rbx,rbx
   14001ec0b:	je     0x14001ebe6
   14001ec0d:	or     rdx,0xffffffffffffffff
   14001ec11:	cmp    rbx,rdx
   14001ec14:	je     0x14001ec26
   14001ec16:	xor    eax,eax
   14001ec18:	cmp    DWORD PTR [rsp+0x30],0x2d
   14001ec1d:	mov    rdx,rbx
   14001ec20:	sete   al
   14001ec23:	sub    rdx,rax
   14001ec26:	mov    r8d,DWORD PTR [rsp+0x34]
   14001ec2b:	xor    ecx,ecx
   14001ec2d:	lea    r9,[rsp+0x30]
   14001ec32:	add    r8d,esi
   14001ec35:	cmp    DWORD PTR [rsp+0x30],0x2d
   14001ec3a:	sete   cl
   14001ec3d:	add    rcx,rdi
   14001ec40:	call   0x140024d7c
   14001ec45:	test   eax,eax
   14001ec47:	je     0x14001ec4e
   14001ec49:	mov    BYTE PTR [rdi],0x0
   14001ec4c:	jmp    0x14001ec73
   14001ec4e:	mov    rax,QWORD PTR [rsp+0xc0]
   14001ec56:	lea    r9,[rsp+0x30]
   14001ec5b:	mov    r8d,esi
   14001ec5e:	mov    QWORD PTR [rsp+0x28],rax
   14001ec63:	mov    rdx,rbx
   14001ec66:	mov    rcx,rdi
   14001ec69:	mov    BYTE PTR [rsp+0x20],0x0
   14001ec6e:	call   0x14001e9e0
   14001ec73:	mov    rcx,QWORD PTR [rsp+0x60]
   14001ec78:	xor    rcx,rsp
   14001ec7b:	call   0x1400144f0
   14001ec80:	add    rsp,0x78
   14001ec84:	pop    r12
   14001ec86:	pop    rdi
   14001ec87:	pop    rsi
   14001ec88:	pop    rbx
   14001ec89:	ret    
   14001ec8a:	int3   
   14001ec8b:	int3   
   14001ec8c:	rex push rbx
   14001ec8e:	push   rbp
   14001ec8f:	push   rsi
   14001ec90:	push   rdi
   14001ec91:	push   r12
   14001ec93:	sub    rsp,0x80
   14001ec9a:	mov    rax,QWORD PTR [rip+0x2a11f]        # 0x140048dc0
   14001eca1:	xor    rax,rsp
   14001eca4:	mov    QWORD PTR [rsp+0x70],rax
   14001eca9:	mov    rcx,QWORD PTR [rcx]
   14001ecac:	mov    rdi,r8
   14001ecaf:	mov    rsi,rdx
   14001ecb2:	mov    ebp,r9d
   14001ecb5:	mov    ebx,0x16
   14001ecba:	lea    r8,[rsp+0x58]
   14001ecbf:	lea    rdx,[rsp+0x40]
   14001ecc4:	mov    r9,rbx
   14001ecc7:	call   0x140024f30
   14001eccc:	test   rsi,rsi
   14001eccf:	jne    0x14001ecf4
   14001ecd1:	call   0x140015f48
   14001ecd6:	and    QWORD PTR [rsp+0x20],0x0
   14001ecdc:	xor    r9d,r9d
   14001ecdf:	xor    r8d,r8d
   14001ece2:	xor    edx,edx
   14001ece4:	xor    ecx,ecx
   14001ece6:	mov    DWORD PTR [rax],ebx
   14001ece8:	call   0x1400149a8
   14001eced:	mov    eax,ebx
   14001ecef:	jmp    0x14001edb5
   14001ecf4:	test   rdi,rdi
   14001ecf7:	je     0x14001ecd1
   14001ecf9:	mov    r12d,DWORD PTR [rsp+0x44]
   14001ecfe:	xor    eax,eax
   14001ed00:	dec    r12d
   14001ed03:	cmp    DWORD PTR [rsp+0x40],0x2d
   14001ed08:	sete   al
   14001ed0b:	or     rdx,0xffffffffffffffff
   14001ed0f:	lea    rbx,[rax+rsi*1]
   14001ed13:	cmp    rdi,rdx
   14001ed16:	je     0x14001ed1e
   14001ed18:	mov    rdx,rdi
   14001ed1b:	sub    rdx,rax
   14001ed1e:	lea    r9,[rsp+0x40]
   14001ed23:	mov    r8d,ebp
   14001ed26:	mov    rcx,rbx
   14001ed29:	call   0x140024d7c
   14001ed2e:	test   eax,eax
   14001ed30:	je     0x14001ed37
   14001ed32:	mov    BYTE PTR [rsi],0x0
   14001ed35:	jmp    0x14001edb5
   14001ed37:	mov    eax,DWORD PTR [rsp+0x44]
   14001ed3b:	dec    eax
   14001ed3d:	cmp    r12d,eax
   14001ed40:	setl   cl
   14001ed43:	cmp    eax,0xfffffffc
   14001ed46:	jl     0x14001ed83
   14001ed48:	cmp    eax,ebp
   14001ed4a:	jge    0x14001ed83
   14001ed4c:	test   cl,cl
   14001ed4e:	je     0x14001ed5c
   14001ed50:	mov    al,BYTE PTR [rbx]
   14001ed52:	inc    rbx
   14001ed55:	test   al,al
   14001ed57:	jne    0x14001ed50
   14001ed59:	mov    BYTE PTR [rbx-0x2],al
   14001ed5c:	mov    rax,QWORD PTR [rsp+0xd8]
   14001ed64:	lea    r9,[rsp+0x40]
   14001ed69:	mov    r8d,ebp
   14001ed6c:	mov    QWORD PTR [rsp+0x28],rax
   14001ed71:	mov    rdx,rdi
   14001ed74:	mov    rcx,rsi
   14001ed77:	mov    BYTE PTR [rsp+0x20],0x1
   14001ed7c:	call   0x14001e9e0
   14001ed81:	jmp    0x14001edb5
   14001ed83:	mov    rax,QWORD PTR [rsp+0xd8]
   14001ed8b:	mov    r9d,DWORD PTR [rsp+0xd0]
   14001ed93:	mov    r8d,ebp
   14001ed96:	mov    QWORD PTR [rsp+0x30],rax
   14001ed9b:	lea    rax,[rsp+0x40]
   14001eda0:	mov    rdx,rdi
   14001eda3:	mov    rcx,rsi
   14001eda6:	mov    BYTE PTR [rsp+0x28],0x1
   14001edab:	mov    QWORD PTR [rsp+0x20],rax
   14001edb0:	call   0x14001e250
   14001edb5:	mov    rcx,QWORD PTR [rsp+0x70]
   14001edba:	xor    rcx,rsp
   14001edbd:	call   0x1400144f0
   14001edc2:	add    rsp,0x80
   14001edc9:	pop    r12
   14001edcb:	pop    rdi
   14001edcc:	pop    rsi
   14001edcd:	pop    rbp
   14001edce:	pop    rbx
   14001edcf:	ret    
   14001edd0:	sub    rsp,0x38
   14001edd4:	cmp    r9d,0x65
   14001edd8:	je     0x14001ee44
   14001edda:	cmp    r9d,0x45
   14001edde:	je     0x14001ee44
   14001ede0:	cmp    r9d,0x66
   14001ede4:	jne    0x14001edfc
   14001ede6:	mov    rax,QWORD PTR [rsp+0x70]
   14001edeb:	mov    r9d,DWORD PTR [rsp+0x60]
   14001edf0:	mov    QWORD PTR [rsp+0x20],rax
   14001edf5:	call   0x14001eba4
   14001edfa:	jmp    0x14001ee60
   14001edfc:	cmp    r9d,0x61
   14001ee00:	je     0x14001ee26
   14001ee02:	cmp    r9d,0x41
   14001ee06:	je     0x14001ee26
   14001ee08:	mov    rax,QWORD PTR [rsp+0x70]
   14001ee0d:	mov    r9d,DWORD PTR [rsp+0x60]
   14001ee12:	mov    QWORD PTR [rsp+0x28],rax
   14001ee17:	mov    eax,DWORD PTR [rsp+0x68]
   14001ee1b:	mov    DWORD PTR [rsp+0x20],eax
   14001ee1f:	call   0x14001ec8c
   14001ee24:	jmp    0x14001ee60
   14001ee26:	mov    rax,QWORD PTR [rsp+0x70]
   14001ee2b:	mov    r9d,DWORD PTR [rsp+0x60]
   14001ee30:	mov    QWORD PTR [rsp+0x28],rax
   14001ee35:	mov    eax,DWORD PTR [rsp+0x68]
   14001ee39:	mov    DWORD PTR [rsp+0x20],eax
   14001ee3d:	call   0x14001e5b4
   14001ee42:	jmp    0x14001ee60
   14001ee44:	mov    rax,QWORD PTR [rsp+0x70]
   14001ee49:	mov    r9d,DWORD PTR [rsp+0x60]
   14001ee4e:	mov    QWORD PTR [rsp+0x28],rax
   14001ee53:	mov    eax,DWORD PTR [rsp+0x68]
   14001ee57:	mov    DWORD PTR [rsp+0x20],eax
   14001ee5b:	call   0x14001e4a8
   14001ee60:	add    rsp,0x38
   14001ee64:	ret    
   14001ee65:	int3   
   14001ee66:	int3   
   14001ee67:	int3   
   14001ee68:	sub    rsp,0x48
   14001ee6c:	mov    eax,DWORD PTR [rsp+0x78]
   14001ee70:	and    QWORD PTR [rsp+0x30],0x0
   14001ee76:	mov    DWORD PTR [rsp+0x28],eax
   14001ee7a:	mov    eax,DWORD PTR [rsp+0x70]
   14001ee7e:	mov    DWORD PTR [rsp+0x20],eax
   14001ee82:	call   0x14001edd0
   14001ee87:	add    rsp,0x48
   14001ee8b:	ret    
   14001ee8c:	mov    QWORD PTR [rsp+0x8],rbx
   14001ee91:	push   rdi
   14001ee92:	sub    rsp,0x20
   14001ee96:	lea    rbx,[rip+0x2a9d3]        # 0x140049870
   14001ee9d:	mov    edi,0xa
   14001eea2:	mov    rcx,QWORD PTR [rbx]
   14001eea5:	call   0x140017598
   14001eeaa:	mov    QWORD PTR [rbx],rax
   14001eead:	add    rbx,0x8
   14001eeb1:	sub    rdi,0x1
   14001eeb5:	jne    0x14001eea2
   14001eeb7:	mov    rbx,QWORD PTR [rsp+0x30]
   14001eebc:	add    rsp,0x20
   14001eec0:	pop    rdi
   14001eec1:	ret    
   14001eec2:	int3   
   14001eec3:	int3   
   14001eec4:	mov    rax,rsp
   14001eec7:	mov    QWORD PTR [rax+0x8],rbx
   14001eecb:	mov    QWORD PTR [rax+0x10],rbp
   14001eecf:	mov    QWORD PTR [rax+0x18],rsi
   14001eed3:	mov    QWORD PTR [rax+0x20],rdi
   14001eed7:	push   r12
   14001eed9:	push   r13
   14001eedb:	push   r14
   14001eedd:	sub    rsp,0x50
   14001eee1:	mov    r14,rdx
   14001eee4:	mov    rdx,rcx
   14001eee7:	lea    rcx,[rax-0x38]
   14001eeeb:	mov    r12d,r9d
   14001eeee:	mov    r13,r8
   14001eef1:	call   0x140014a6c
   14001eef6:	test   r13,r13
   14001eef9:	je     0x14001eeff
   14001eefb:	mov    QWORD PTR [r13+0x0],r14
   14001eeff:	test   r14,r14
   14001ef02:	jne    0x14001ef2e
   14001ef04:	call   0x140015f48
   14001ef09:	and    QWORD PTR [rsp+0x20],0x0
   14001ef0f:	xor    r9d,r9d
   14001ef12:	xor    r8d,r8d
   14001ef15:	xor    edx,edx
   14001ef17:	xor    ecx,ecx
   14001ef19:	mov    DWORD PTR [rax],0x16
   14001ef1f:	call   0x1400149a8
   14001ef24:	cmp    BYTE PTR [rsp+0x48],0x0
   14001ef29:	jmp    0x14001f117
   14001ef2e:	test   r12d,r12d
   14001ef31:	je     0x14001ef3f
   14001ef33:	cmp    r12d,0x2
   14001ef37:	jl     0x14001ef04
   14001ef39:	cmp    r12d,0x24
   14001ef3d:	jg     0x14001ef04
   14001ef3f:	mov    bpl,BYTE PTR [r14]
   14001ef42:	mov    r8,QWORD PTR [rsp+0x30]
   14001ef47:	xor    edi,edi
   14001ef49:	lea    rbx,[r14+0x1]
   14001ef4d:	cmp    DWORD PTR [r8+0x10c],0x1
   14001ef55:	jle    0x14001ef71
   14001ef57:	lea    r8,[rsp+0x30]
   14001ef5c:	movzx  ecx,bpl
   14001ef60:	mov    edx,0x8
   14001ef65:	call   0x14001991c
   14001ef6a:	mov    r8,QWORD PTR [rsp+0x30]
   14001ef6f:	jmp    0x14001ef83
   14001ef71:	mov    rax,QWORD PTR [r8+0x140]
   14001ef78:	movzx  ecx,bpl
   14001ef7c:	movzx  eax,WORD PTR [rax+rcx*2]
   14001ef80:	and    eax,0x8
   14001ef83:	test   eax,eax
   14001ef85:	je     0x14001ef8f
   14001ef87:	mov    bpl,BYTE PTR [rbx]
   14001ef8a:	inc    rbx
   14001ef8d:	jmp    0x14001ef4d
   14001ef8f:	mov    esi,DWORD PTR [rsp+0x90]
   14001ef96:	cmp    bpl,0x2d
   14001ef9a:	jne    0x14001efa1
   14001ef9c:	or     esi,0x2
   14001ef9f:	jmp    0x14001efa7
   14001efa1:	cmp    bpl,0x2b
   14001efa5:	jne    0x14001efad
   14001efa7:	mov    bpl,BYTE PTR [rbx]
   14001efaa:	inc    rbx
   14001efad:	test   r12d,r12d
   14001efb0:	js     0x14001f109
   14001efb6:	cmp    r12d,0x1
   14001efba:	je     0x14001f109
   14001efc0:	cmp    r12d,0x24
   14001efc4:	jg     0x14001f109
   14001efca:	test   r12d,r12d
   14001efcd:	jne    0x14001eff7
   14001efcf:	cmp    bpl,0x30
   14001efd3:	je     0x14001efdd
   14001efd5:	mov    r12d,0xa
   14001efdb:	jmp    0x14001f015
   14001efdd:	cmp    BYTE PTR [rbx],0x78
   14001efe0:	je     0x14001efef
   14001efe2:	cmp    BYTE PTR [rbx],0x58
   14001efe5:	je     0x14001efef
   14001efe7:	mov    r12d,0x8
   14001efed:	jmp    0x14001f015
   14001efef:	mov    r12d,0x10
   14001eff5:	jmp    0x14001f003
   14001eff7:	cmp    r12d,0x10
   14001effb:	jne    0x14001f015
   14001effd:	cmp    bpl,0x30
   14001f001:	jne    0x14001f015
   14001f003:	cmp    BYTE PTR [rbx],0x78
   14001f006:	je     0x14001f00d
   14001f008:	cmp    BYTE PTR [rbx],0x58
   14001f00b:	jne    0x14001f015
   14001f00d:	mov    bpl,BYTE PTR [rbx+0x1]
   14001f011:	add    rbx,0x2
   14001f015:	mov    r10,QWORD PTR [r8+0x140]
   14001f01c:	xor    edx,edx
   14001f01e:	or     eax,0xffffffff
   14001f021:	div    r12d
   14001f024:	mov    r9d,eax
   14001f027:	movzx  ecx,bpl
   14001f02b:	movzx  r8d,WORD PTR [r10+rcx*2]
   14001f030:	test   r8b,0x4
   14001f034:	je     0x14001f03f
   14001f036:	movsx  ecx,bpl
   14001f03a:	sub    ecx,0x30
   14001f03d:	jmp    0x14001f059
   14001f03f:	test   r8d,0x103
   14001f046:	je     0x14001f074
   14001f048:	lea    eax,[rbp-0x61]
   14001f04b:	movsx  ecx,bpl
   14001f04f:	cmp    al,0x19
   14001f051:	ja     0x14001f056
   14001f053:	sub    ecx,0x20
   14001f056:	add    ecx,0xffffffc9
   14001f059:	cmp    ecx,r12d
   14001f05c:	jae    0x14001f074
   14001f05e:	or     esi,0x8
   14001f061:	cmp    edi,r9d
   14001f064:	jb     0x14001f088
   14001f066:	jne    0x14001f06c
   14001f068:	cmp    ecx,edx
   14001f06a:	jbe    0x14001f088
   14001f06c:	or     esi,0x4
   14001f06f:	test   r13,r13
   14001f072:	jne    0x14001f08e
   14001f074:	dec    rbx
   14001f077:	test   sil,0x8
   14001f07b:	jne    0x14001f096
   14001f07d:	test   r13,r13
   14001f080:	cmovne rbx,r14
   14001f084:	xor    edi,edi
   14001f086:	jmp    0x14001f0e1
   14001f088:	imul   edi,r12d
   14001f08c:	add    edi,ecx
   14001f08e:	mov    bpl,BYTE PTR [rbx]
   14001f091:	inc    rbx
   14001f094:	jmp    0x14001f027
   14001f096:	mov    ebp,0x7fffffff
   14001f09b:	test   sil,0x4
   14001f09f:	jne    0x14001f0be
   14001f0a1:	test   sil,0x1
   14001f0a5:	jne    0x14001f0e1
   14001f0a7:	mov    eax,esi
   14001f0a9:	and    eax,0x2
   14001f0ac:	je     0x14001f0b6
   14001f0ae:	cmp    edi,0x80000000
   14001f0b4:	ja     0x14001f0be
   14001f0b6:	test   eax,eax
   14001f0b8:	jne    0x14001f0e1
   14001f0ba:	cmp    edi,ebp
   14001f0bc:	jbe    0x14001f0e1
   14001f0be:	call   0x140015f48
   14001f0c3:	mov    DWORD PTR [rax],0x22
   14001f0c9:	test   sil,0x1
   14001f0cd:	je     0x14001f0d4
   14001f0cf:	or     edi,0xffffffff
   14001f0d2:	jmp    0x14001f0e1
   14001f0d4:	mov    al,sil
   14001f0d7:	and    al,0x2
   14001f0d9:	neg    al
   14001f0db:	sbb    edi,edi
   14001f0dd:	neg    edi
   14001f0df:	add    edi,ebp
   14001f0e1:	test   r13,r13
   14001f0e4:	je     0x14001f0ea
   14001f0e6:	mov    QWORD PTR [r13+0x0],rbx
   14001f0ea:	test   sil,0x2
   14001f0ee:	je     0x14001f0f2
   14001f0f0:	neg    edi
   14001f0f2:	cmp    BYTE PTR [rsp+0x48],0x0
   14001f0f7:	je     0x14001f105
   14001f0f9:	mov    rcx,QWORD PTR [rsp+0x40]
   14001f0fe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14001f105:	mov    eax,edi
   14001f107:	jmp    0x14001f127
   14001f109:	test   r13,r13
   14001f10c:	je     0x14001f112
   14001f10e:	mov    QWORD PTR [r13+0x0],r14
   14001f112:	cmp    BYTE PTR [rsp+0x48],dil
   14001f117:	je     0x14001f125
   14001f119:	mov    rax,QWORD PTR [rsp+0x40]
   14001f11e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14001f125:	xor    eax,eax
   14001f127:	lea    r11,[rsp+0x50]
   14001f12c:	mov    rbx,QWORD PTR [r11+0x20]
   14001f130:	mov    rbp,QWORD PTR [r11+0x28]
   14001f134:	mov    rsi,QWORD PTR [r11+0x30]
   14001f138:	mov    rdi,QWORD PTR [r11+0x38]
   14001f13c:	mov    rsp,r11
   14001f13f:	pop    r14
   14001f141:	pop    r13
   14001f143:	pop    r12
   14001f145:	ret    
   14001f146:	int3   
   14001f147:	int3   
   14001f148:	sub    rsp,0x38
   14001f14c:	xor    eax,eax
   14001f14e:	mov    r9d,r8d
   14001f151:	mov    r8,rdx
   14001f154:	mov    DWORD PTR [rsp+0x20],eax
   14001f158:	mov    rdx,rcx
   14001f15b:	cmp    DWORD PTR [rip+0x2f9af],eax        # 0x14004eb10
   14001f161:	jne    0x14001f16c
   14001f163:	lea    rcx,[rip+0x2a4c6]        # 0x140049630
   14001f16a:	jmp    0x14001f16e
   14001f16c:	xor    ecx,ecx
   14001f16e:	call   0x14001eec4
   14001f173:	add    rsp,0x38
   14001f177:	ret    
   14001f178:	mov    QWORD PTR [rsp+0x8],rbx
   14001f17d:	mov    QWORD PTR [rsp+0x10],rsi
   14001f182:	push   rdi
   14001f183:	sub    rsp,0x20
   14001f187:	mov    rsi,r9
   14001f18a:	mov    rdi,r8
   14001f18d:	mov    rbx,rdx
   14001f190:	cmp    rcx,QWORD PTR [rdx]
   14001f193:	jne    0x14001f1f9
   14001f195:	cmp    QWORD PTR [r8],r9
   14001f198:	jne    0x14001f1d7
   14001f19a:	mov    rcx,QWORD PTR [rbx]
   14001f19d:	mov    edx,0x2
   14001f1a2:	call   0x14001c490
   14001f1a7:	mov    QWORD PTR [rdi],rax
   14001f1aa:	test   rax,rax
   14001f1ad:	jne    0x14001f1b3
   14001f1af:	xor    eax,eax
   14001f1b1:	jmp    0x14001f1fe
   14001f1b3:	mov    rax,QWORD PTR [rsp+0x50]
   14001f1b8:	mov    rdx,rsi
   14001f1bb:	mov    DWORD PTR [rax],0x1
   14001f1c1:	mov    r8,QWORD PTR [rbx]
   14001f1c4:	mov    rcx,QWORD PTR [rdi]
   14001f1c7:	call   0x1400160c0
   14001f1cc:	mov    r11,QWORD PTR [rbx]
   14001f1cf:	add    r11,r11
   14001f1d2:	mov    QWORD PTR [rbx],r11
   14001f1d5:	jmp    0x14001f1f9
   14001f1d7:	mov    rdx,QWORD PTR [rdx]
   14001f1da:	mov    rcx,QWORD PTR [rdi]
   14001f1dd:	mov    r8d,0x2
   14001f1e3:	call   0x14001c59c
   14001f1e8:	test   rax,rax
   14001f1eb:	je     0x14001f1af
   14001f1ed:	mov    QWORD PTR [rdi],rax
   14001f1f0:	mov    rcx,QWORD PTR [rbx]
   14001f1f3:	add    rcx,rcx
   14001f1f6:	mov    QWORD PTR [rbx],rcx
   14001f1f9:	mov    eax,0x1
   14001f1fe:	mov    rbx,QWORD PTR [rsp+0x30]
   14001f203:	mov    rsi,QWORD PTR [rsp+0x38]
   14001f208:	add    rsp,0x20
   14001f20c:	pop    rdi
   14001f20d:	ret    
   14001f20e:	int3   
   14001f20f:	int3   
   14001f210:	sub    rsp,0x28
   14001f214:	add    DWORD PTR [rcx+0x8],0xffffffff
   14001f218:	js     0x14001f228
   14001f21a:	mov    rax,QWORD PTR [rcx]
   14001f21d:	movzx  edx,BYTE PTR [rax]
   14001f220:	inc    rax
   14001f223:	mov    QWORD PTR [rcx],rax
   14001f226:	jmp    0x14001f22f
   14001f228:	call   0x140024ffc
   14001f22d:	mov    edx,eax
   14001f22f:	mov    eax,edx
   14001f231:	add    rsp,0x28
   14001f235:	ret    
   14001f236:	int3   
   14001f237:	int3   
   14001f238:	mov    r11,rsp
   14001f23b:	mov    QWORD PTR [r11+0x18],rbx
   14001f23f:	push   rbp
   14001f240:	push   rsi
   14001f241:	push   rdi
   14001f242:	push   r12
   14001f244:	push   r13
   14001f246:	push   r14
   14001f248:	push   r15
   14001f24a:	sub    rsp,0x280
   14001f251:	mov    rax,QWORD PTR [rip+0x29b68]        # 0x140048dc0
   14001f258:	xor    rax,rsp
   14001f25b:	mov    QWORD PTR [rsp+0x270],rax
   14001f263:	xor    r14d,r14d
   14001f266:	lea    r12,[r11-0x1a8]
   14001f26d:	mov    QWORD PTR [rsp+0xb8],r9
   14001f275:	mov    QWORD PTR [rsp+0x78],r12
   14001f27a:	mov    rbx,r8
   14001f27d:	mov    rsi,rdx
   14001f280:	mov    QWORD PTR [rsp+0x70],rdx
   14001f285:	mov    rbp,rcx
   14001f288:	mov    QWORD PTR [rsp+0x68],rcx
   14001f28d:	mov    r12d,r14d
   14001f290:	mov    QWORD PTR [r11-0x218],0x15e
   14001f29b:	mov    DWORD PTR [r11-0x234],r14d
   14001f2a2:	mov    WORD PTR [r11-0x238],r14w
   14001f2aa:	mov    edi,r14d
   14001f2ad:	mov    DWORD PTR [rsp+0x3c],r14d
   14001f2b2:	mov    DWORD PTR [rsp+0x44],r14d
   14001f2b7:	cmp    rdx,r14
   14001f2ba:	jne    0x14001f2e3
   14001f2bc:	call   0x140015f48
   14001f2c1:	xor    r9d,r9d
   14001f2c4:	xor    r8d,r8d
   14001f2c7:	xor    edx,edx
   14001f2c9:	xor    ecx,ecx
   14001f2cb:	mov    QWORD PTR [rsp+0x20],r14
   14001f2d0:	mov    DWORD PTR [rax],0x16
   14001f2d6:	call   0x1400149a8
   14001f2db:	or     eax,0xffffffff
   14001f2de:	jmp    0x140020508
   14001f2e3:	cmp    rcx,r14
   14001f2e6:	je     0x14001f2bc
   14001f2e8:	or     r15d,0xffffffff
   14001f2ec:	test   BYTE PTR [rcx+0x18],0x40
   14001f2f0:	jne    0x14001f381
   14001f2f6:	call   0x140024784
   14001f2fb:	lea    rdx,[rip+0x2a4ce]        # 0x1400497d0
   14001f302:	lea    r9,[rip+0x31337]        # 0x140050640
   14001f309:	cmp    eax,r15d
   14001f30c:	je     0x14001f32b
   14001f30e:	cmp    eax,0xfffffffe
   14001f311:	je     0x14001f32b
   14001f313:	movsxd r8,eax
   14001f316:	mov    rcx,r8
   14001f319:	and    r8d,0x1f
   14001f31d:	sar    rcx,0x5
   14001f321:	imul   r8,r8,0x58
   14001f325:	add    r8,QWORD PTR [r9+rcx*8]
   14001f329:	jmp    0x14001f32e
   14001f32b:	mov    r8,rdx
   14001f32e:	test   BYTE PTR [r8+0x38],0x7f
   14001f333:	jne    0x14001f35a
   14001f335:	cmp    eax,r15d
   14001f338:	je     0x14001f354
   14001f33a:	cmp    eax,0xfffffffe
   14001f33d:	je     0x14001f354
   14001f33f:	movsxd rdx,eax
   14001f342:	mov    rax,rdx
   14001f345:	and    edx,0x1f
   14001f348:	sar    rax,0x5
   14001f34c:	imul   rdx,rdx,0x58
   14001f350:	add    rdx,QWORD PTR [r9+rax*8]
   14001f354:	test   BYTE PTR [rdx+0x38],0x80
   14001f358:	je     0x14001f381
   14001f35a:	call   0x140015f48
   14001f35f:	xor    r9d,r9d
   14001f362:	xor    r8d,r8d
   14001f365:	xor    edx,edx
   14001f367:	xor    ecx,ecx
   14001f369:	mov    QWORD PTR [rsp+0x20],r14
   14001f36e:	mov    DWORD PTR [rax],0x16
   14001f374:	call   0x1400149a8
   14001f379:	mov    eax,r15d
   14001f37c:	jmp    0x140020508
   14001f381:	lea    rcx,[rsp+0xd0]
   14001f389:	mov    rdx,rbx
   14001f38c:	call   0x140014a6c
   14001f391:	mov    al,BYTE PTR [rsi]
   14001f393:	mov    ebx,r14d
   14001f396:	mov    BYTE PTR [rsp+0x39],r14b
   14001f39b:	mov    r13d,r14d
   14001f39e:	mov    DWORD PTR [rsp+0x34],r14d
   14001f3a3:	mov    DWORD PTR [rsp+0x64],ebx
   14001f3a7:	cmp    al,r14b
   14001f3aa:	je     0x1400204ed
   14001f3b0:	mov    ebx,0x1
   14001f3b5:	mov    r12b,0x25
   14001f3b8:	movzx  ecx,al
   14001f3bb:	call   0x1400235ec
   14001f3c0:	cmp    eax,r14d
   14001f3c3:	je     0x14001f41c
   14001f3c5:	sub    r13d,ebx
   14001f3c8:	jmp    0x14001f3cf
   14001f3ca:	mov    ebx,0x1
   14001f3cf:	add    r13d,ebx
   14001f3d2:	mov    rcx,rbp
   14001f3d5:	mov    DWORD PTR [rsp+0x34],r13d
   14001f3da:	call   0x14001f210
   14001f3df:	mov    ebx,eax
   14001f3e1:	cmp    eax,r15d
   14001f3e4:	je     0x14001f3fd
   14001f3e6:	movzx  ecx,al
   14001f3e9:	call   0x1400235ec
   14001f3ee:	cmp    eax,r14d
   14001f3f1:	jne    0x14001f3ca
   14001f3f3:	mov    rdx,rbp
   14001f3f6:	mov    ecx,ebx
   14001f3f8:	call   0x140025158
   14001f3fd:	mov    ebx,0x1
   14001f402:	add    rsi,rbx
   14001f405:	movzx  ecx,BYTE PTR [rsi]
   14001f408:	call   0x1400235ec
   14001f40d:	cmp    eax,r14d
   14001f410:	jne    0x14001f402
   14001f412:	mov    QWORD PTR [rsp+0x70],rsi
   14001f417:	jmp    0x140020394
   14001f41c:	cmp    BYTE PTR [rsi],r12b
   14001f41f:	jne    0x140020332
   14001f425:	cmp    BYTE PTR [rsi+0x1],r12b
   14001f429:	je     0x140020322
   14001f42f:	xor    eax,eax
   14001f431:	mov    DWORD PTR [rsp+0x5c],r14d
   14001f436:	mov    BYTE PTR [rsp+0x4c],r14b
   14001f43b:	mov    DWORD PTR [rsp+0x58],r14d
   14001f440:	mov    edi,r14d
   14001f443:	mov    r12d,r14d
   14001f446:	mov    QWORD PTR [rsp+0xc8],r14
   14001f44e:	mov    BYTE PTR [rsp+0x54],r14b
   14001f453:	mov    BYTE PTR [rsp+0x40],r14b
   14001f458:	mov    BYTE PTR [rsp+0x30],r14b
   14001f45d:	mov    sil,r14b
   14001f460:	mov    DWORD PTR [rsp+0xa8],r14d
   14001f468:	mov    r14,QWORD PTR [rsp+0x70]
   14001f46d:	mov    bpl,al
   14001f470:	mov    r13d,eax
   14001f473:	mov    BYTE PTR [rsp+0x38],bl
   14001f477:	add    r14,rbx
   14001f47a:	movzx  ebx,BYTE PTR [r14]
   14001f47e:	mov    ecx,ebx
   14001f480:	call   0x1400234e8
   14001f485:	xor    r8d,r8d
   14001f488:	cmp    eax,r8d
   14001f48b:	je     0x14001f500
   14001f48d:	lea    eax,[r12+r12*4]
   14001f491:	inc    edi
   14001f493:	lea    r12d,[rbx+rax*2-0x30]
   14001f498:	mov    ebx,0x1
   14001f49d:	mov    dl,BYTE PTR [rsp+0x30]
   14001f4a1:	cmp    sil,r8b
   14001f4a4:	je     0x14001f477
   14001f4a6:	mov    DWORD PTR [rsp+0x60],edi
   14001f4aa:	mov    edi,DWORD PTR [rsp+0x3c]
   14001f4ae:	mov    DWORD PTR [rsp+0x50],r13d
   14001f4b3:	mov    r13b,BYTE PTR [rsp+0x4c]
   14001f4b8:	mov    QWORD PTR [rsp+0x70],r14
   14001f4bd:	mov    r14d,DWORD PTR [rsp+0xa8]
   14001f4c5:	mov    DWORD PTR [rsp+0x48],r12d
   14001f4ca:	cmp    dl,r8b
   14001f4cd:	jne    0x14001f5ee
   14001f4d3:	mov    rax,QWORD PTR [rsp+0xb8]
   14001f4db:	mov    QWORD PTR [rsp+0xb0],rax
   14001f4e3:	add    rax,0x8
   14001f4e7:	mov    QWORD PTR [rsp+0xb8],rax
   14001f4ef:	mov    rax,QWORD PTR [rax-0x8]
   14001f4f3:	mov    QWORD PTR [rsp+0x90],rax
   14001f4fb:	jmp    0x14001f5f6
   14001f500:	cmp    ebx,0x2a
   14001f503:	je     0x14001f5da
   14001f509:	cmp    ebx,0x46
   14001f50c:	je     0x14001f498
   14001f50e:	cmp    ebx,0x49
   14001f511:	je     0x14001f580
   14001f513:	cmp    ebx,0x4c
   14001f516:	je     0x14001f572
   14001f518:	cmp    ebx,0x4e
   14001f51b:	je     0x14001f498
   14001f521:	cmp    ebx,0x68
   14001f524:	je     0x14001f565
   14001f526:	cmp    ebx,0x6c
   14001f529:	je     0x14001f53a
   14001f52b:	cmp    ebx,0x77
   14001f52e:	mov    ebx,0x1
   14001f533:	je     0x14001f55d
   14001f535:	jmp    0x14001f5d2
   14001f53a:	cmp    BYTE PTR [r14+0x1],0x6c
   14001f53f:	mov    ebx,0x1
   14001f544:	jne    0x14001f559
   14001f546:	inc    r14
   14001f549:	add    r13d,ebx
   14001f54c:	mov    QWORD PTR [rsp+0x88],r8
   14001f554:	jmp    0x14001f49d
   14001f559:	add    BYTE PTR [rsp+0x38],bl
   14001f55d:	add    bpl,bl
   14001f560:	jmp    0x14001f49d
   14001f565:	add    BYTE PTR [rsp+0x38],r15b
   14001f56a:	add    bpl,r15b
   14001f56d:	jmp    0x14001f498
   14001f572:	mov    ebx,0x1
   14001f577:	add    BYTE PTR [rsp+0x38],bl
   14001f57b:	jmp    0x14001f49d
   14001f580:	mov    al,BYTE PTR [r14+0x1]
   14001f584:	cmp    al,0x36
   14001f586:	jne    0x14001f59a
   14001f588:	cmp    BYTE PTR [r14+0x2],0x34
   14001f58d:	jne    0x14001f59a
   14001f58f:	add    r14,0x2
   14001f593:	mov    ebx,0x1
   14001f598:	jmp    0x14001f549
   14001f59a:	cmp    al,0x33
   14001f59c:	jne    0x14001f5ae
   14001f59e:	cmp    BYTE PTR [r14+0x2],0x32
   14001f5a3:	jne    0x14001f5ae
   14001f5a5:	add    r14,0x2
   14001f5a9:	jmp    0x14001f498
   14001f5ae:	cmp    al,0x64
   14001f5b0:	je     0x14001f593
   14001f5b2:	cmp    al,0x69
   14001f5b4:	je     0x14001f593
   14001f5b6:	cmp    al,0x6f
   14001f5b8:	je     0x14001f593
   14001f5ba:	cmp    al,0x78
   14001f5bc:	je     0x14001f593
   14001f5be:	cmp    al,0x58
   14001f5c0:	je     0x14001f593
   14001f5c2:	mov    ebx,0x1
   14001f5c7:	mov    QWORD PTR [rsp+0x88],r8
   14001f5cf:	add    r13d,ebx
   14001f5d2:	add    sil,bl
   14001f5d5:	jmp    0x14001f49d
   14001f5da:	mov    dl,BYTE PTR [rsp+0x30]
   14001f5de:	mov    ebx,0x1
   14001f5e3:	add    dl,bl
   14001f5e5:	mov    BYTE PTR [rsp+0x30],dl
   14001f5e9:	jmp    0x14001f4a1
   14001f5ee:	mov    QWORD PTR [rsp+0x90],r8
   14001f5f6:	mov    r10,QWORD PTR [rsp+0x70]
   14001f5fb:	mov    bl,r8b
   14001f5fe:	cmp    bpl,r8b
   14001f601:	jne    0x14001f616
   14001f603:	cmp    BYTE PTR [r10],0x53
   14001f607:	je     0x14001f690
   14001f60d:	cmp    BYTE PTR [r10],0x43
   14001f611:	je     0x14001f690
   14001f613:	mov    bpl,r15b
   14001f616:	mov    eax,0x1
   14001f61b:	movzx  r12d,BYTE PTR [r10]
   14001f61f:	or     r12d,0x20
   14001f623:	mov    DWORD PTR [rsp+0xc0],r12d
   14001f62b:	cmp    r12d,0x6e
   14001f62f:	je     0x14001f6c3
   14001f635:	cmp    r12d,0x63
   14001f639:	je     0x14001f69a
   14001f63b:	cmp    r12d,0x7b
   14001f63f:	je     0x14001f69a
   14001f641:	mov    rsi,QWORD PTR [rsp+0x68]
   14001f646:	mov    r14d,DWORD PTR [rsp+0x34]
   14001f64b:	xor    r12d,r12d
   14001f64e:	lea    ebx,[r12+0x1]
   14001f653:	mov    rcx,rsi
   14001f656:	add    r14d,ebx
   14001f659:	call   0x14001f210
   14001f65e:	mov    edi,eax
   14001f660:	mov    DWORD PTR [rsp+0x3c],eax
   14001f664:	cmp    eax,r15d
   14001f667:	je     0x14001f676
   14001f669:	movzx  ecx,al
   14001f66c:	call   0x1400235ec
   14001f671:	cmp    eax,r12d
   14001f674:	jne    0x14001f653
   14001f676:	mov    DWORD PTR [rsp+0x34],r14d
   14001f67b:	mov    r14d,DWORD PTR [rsp+0xa8]
   14001f683:	mov    bl,r12b
   14001f686:	mov    r12d,DWORD PTR [rsp+0xc0]
   14001f68e:	jmp    0x14001f6ae
   14001f690:	mov    eax,0x1
   14001f695:	mov    bpl,al
   14001f698:	jmp    0x14001f61b
   14001f69a:	mov    rcx,QWORD PTR [rsp+0x68]
   14001f69f:	add    DWORD PTR [rsp+0x34],eax
   14001f6a3:	call   0x14001f210
   14001f6a8:	mov    edi,eax
   14001f6aa:	mov    DWORD PTR [rsp+0x3c],eax
   14001f6ae:	cmp    edi,r15d
   14001f6b1:	je     0x1400203b1
   14001f6b7:	mov    r10,QWORD PTR [rsp+0x70]
   14001f6bc:	mov    dl,BYTE PTR [rsp+0x30]
   14001f6c0:	xor    r8d,r8d
   14001f6c3:	mov    ecx,DWORD PTR [rsp+0x60]
   14001f6c7:	mov    eax,DWORD PTR [rsp+0x48]
   14001f6cb:	cmp    ecx,r8d
   14001f6ce:	je     0x14001f6d9
   14001f6d0:	cmp    eax,r8d
   14001f6d3:	je     0x1400203a0
   14001f6d9:	cmp    dl,r8b
   14001f6dc:	jne    0x14001f797
   14001f6e2:	cmp    r12d,0x63
   14001f6e6:	je     0x14001f6f8
   14001f6e8:	cmp    r12d,0x73
   14001f6ec:	je     0x14001f6f8
   14001f6ee:	cmp    r12d,0x7b
   14001f6f2:	jne    0x14001f797
   14001f6f8:	mov    r8,QWORD PTR [rsp+0xb0]
   14001f700:	mov    r11d,0x1
   14001f706:	mov    rcx,QWORD PTR [r8]
   14001f709:	add    r8,0x8
   14001f70d:	mov    esi,DWORD PTR [r8]
   14001f710:	mov    r9,r8
   14001f713:	mov    QWORD PTR [rsp+0xb0],r8
   14001f71b:	add    r8,0x8
   14001f71f:	mov    QWORD PTR [rsp+0x90],rcx
   14001f727:	mov    QWORD PTR [rsp+0xb8],r8
   14001f72f:	cmp    rsi,r11
   14001f732:	jb     0x14002040d
   14001f738:	mov    ecx,DWORD PTR [rsp+0x60]
   14001f73c:	xor    r8d,r8d
   14001f73f:	cmp    r12d,0x6f
   14001f743:	jg     0x14001fb80
   14001f749:	je     0x1400200ae
   14001f74f:	cmp    r12d,0x63
   14001f753:	je     0x14001fb5e
   14001f759:	cmp    r12d,0x64
   14001f75d:	je     0x1400200ae
   14001f763:	jle    0x14001fbae
   14001f769:	cmp    r12d,0x67
   14001f76d:	jle    0x14001f7c6
   14001f76f:	cmp    r12d,0x69
   14001f773:	je     0x14001f7af
   14001f775:	cmp    r12d,0x6e
   14001f779:	jne    0x14001fbae
   14001f77f:	mov    eax,DWORD PTR [rsp+0x34]
   14001f783:	xor    r14d,r14d
   14001f786:	cmp    dl,r14b
   14001f789:	je     0x1400202c7
   14001f78f:	mov    r13d,eax
   14001f792:	jmp    0x140020302
   14001f797:	mov    rsi,QWORD PTR [rsp+0xc8]
   14001f79f:	mov    r9,QWORD PTR [rsp+0xb0]
   14001f7a7:	mov    r11d,0x1
   14001f7ad:	jmp    0x14001f73f
   14001f7af:	mov    r12d,0x64
   14001f7b5:	cmp    edi,0x2d
   14001f7b8:	jne    0x14001fcf4
   14001f7be:	mov    r14b,r11b
   14001f7c1:	jmp    0x14001fcfe
   14001f7c6:	xor    r14d,r14d
   14001f7c9:	mov    rbx,r14
   14001f7cc:	cmp    edi,0x2d
   14001f7cf:	jne    0x14001f7de
   14001f7d1:	mov    rax,QWORD PTR [rsp+0x78]
   14001f7d6:	mov    rbx,r11
   14001f7d9:	mov    BYTE PTR [rax],dil
   14001f7dc:	jmp    0x14001f7e3
   14001f7de:	cmp    edi,0x2b
   14001f7e1:	jne    0x14001f807
   14001f7e3:	mov    r12,QWORD PTR [rsp+0x68]
   14001f7e8:	mov    ebp,DWORD PTR [rsp+0x48]
   14001f7ec:	mov    r13d,DWORD PTR [rsp+0x34]
   14001f7f1:	mov    rcx,r12
   14001f7f4:	sub    ebp,r11d
   14001f7f7:	add    r13d,r11d
   14001f7fa:	call   0x14001f210
   14001f7ff:	mov    edi,eax
   14001f801:	mov    DWORD PTR [rsp+0x3c],eax
   14001f805:	jmp    0x14001f815
   14001f807:	mov    ebp,DWORD PTR [rsp+0x48]
   14001f80b:	mov    r12,QWORD PTR [rsp+0x68]
   14001f810:	mov    r13d,DWORD PTR [rsp+0x34]
   14001f815:	cmp    DWORD PTR [rsp+0x60],r14d
   14001f81a:	movzx  ecx,dil
   14001f81e:	cmove  ebp,r15d
   14001f822:	call   0x1400234e8
   14001f827:	cmp    eax,r14d
   14001f82a:	je     0x14001f89b
   14001f82c:	mov    esi,0x1
   14001f831:	mov    eax,ebp
   14001f833:	sub    ebp,esi
   14001f835:	cmp    eax,r14d
   14001f838:	je     0x14001f89b
   14001f83a:	mov    rax,QWORD PTR [rsp+0x78]
   14001f83f:	add    DWORD PTR [rsp+0x58],esi
   14001f843:	lea    r9,[rsp+0x110]
   14001f84b:	mov    BYTE PTR [rbx+rax*1],dil
   14001f84f:	lea    rax,[rsp+0x84]
   14001f857:	add    rbx,rsi
   14001f85a:	lea    r8,[rsp+0x78]
   14001f85f:	lea    rdx,[rsp+0xa0]
   14001f867:	mov    rcx,rbx
   14001f86a:	mov    QWORD PTR [rsp+0x20],rax
   14001f86f:	call   0x14001f178
   14001f874:	cmp    eax,r14d
   14001f877:	je     0x140020429
   14001f87d:	mov    rcx,r12
   14001f880:	add    r13d,esi
   14001f883:	call   0x14001f210
   14001f888:	movzx  ecx,al
   14001f88b:	mov    edi,eax
   14001f88d:	mov    DWORD PTR [rsp+0x3c],eax
   14001f891:	call   0x1400234e8
   14001f896:	cmp    eax,r14d
   14001f899:	jne    0x14001f831
   14001f89b:	mov    rax,QWORD PTR [rsp+0xd0]
   14001f8a3:	mov    rcx,QWORD PTR [rax+0x128]
   14001f8aa:	mov    rax,QWORD PTR [rcx]
   14001f8ad:	mov    ecx,0x1
   14001f8b2:	mov    sil,BYTE PTR [rax]
   14001f8b5:	cmp    sil,dil
   14001f8b8:	jne    0x14001f993
   14001f8be:	mov    eax,ebp
   14001f8c0:	sub    ebp,ecx
   14001f8c2:	cmp    eax,r14d
   14001f8c5:	je     0x14001f993
   14001f8cb:	add    r13d,ecx
   14001f8ce:	mov    rcx,r12
   14001f8d1:	call   0x14001f210
   14001f8d6:	lea    r9,[rsp+0x110]
   14001f8de:	lea    r8,[rsp+0x78]
   14001f8e3:	mov    edi,eax
   14001f8e5:	mov    DWORD PTR [rsp+0x3c],eax
   14001f8e9:	mov    rax,QWORD PTR [rsp+0x78]
   14001f8ee:	mov    BYTE PTR [rbx+rax*1],sil
   14001f8f2:	lea    rax,[rsp+0x84]
   14001f8fa:	mov    esi,0x1
   14001f8ff:	add    rbx,rsi
   14001f902:	lea    rdx,[rsp+0xa0]
   14001f90a:	mov    QWORD PTR [rsp+0x20],rax
   14001f90f:	mov    rcx,rbx
   14001f912:	call   0x14001f178
   14001f917:	cmp    eax,r14d
   14001f91a:	je     0x140020429
   14001f920:	movzx  ecx,dil
   14001f924:	jmp    0x14001f986
   14001f926:	mov    eax,ebp
   14001f928:	sub    ebp,esi
   14001f92a:	cmp    eax,r14d
   14001f92d:	je     0x14001f990
   14001f92f:	mov    rax,QWORD PTR [rsp+0x78]
   14001f934:	add    DWORD PTR [rsp+0x58],esi
   14001f938:	lea    r9,[rsp+0x110]
   14001f940:	mov    BYTE PTR [rbx+rax*1],dil
   14001f944:	lea    rax,[rsp+0x84]
   14001f94c:	add    rbx,rsi
   14001f94f:	lea    r8,[rsp+0x78]
   14001f954:	lea    rdx,[rsp+0xa0]
   14001f95c:	mov    rcx,rbx
   14001f95f:	mov    QWORD PTR [rsp+0x20],rax
   14001f964:	call   0x14001f178
   14001f969:	cmp    eax,r14d
   14001f96c:	je     0x140020429
   14001f972:	mov    rcx,r12
   14001f975:	add    r13d,esi
   14001f978:	call   0x14001f210
   14001f97d:	mov    edi,eax
   14001f97f:	mov    DWORD PTR [rsp+0x3c],eax
   14001f983:	movzx  ecx,al
   14001f986:	call   0x1400234e8
   14001f98b:	cmp    eax,r14d
   14001f98e:	jne    0x14001f926
   14001f990:	mov    rcx,rsi
   14001f993:	mov    esi,DWORD PTR [rsp+0x58]
   14001f997:	cmp    esi,r14d
   14001f99a:	je     0x14001faed
   14001f9a0:	cmp    edi,0x65
   14001f9a3:	je     0x14001f9ae
   14001f9a5:	cmp    edi,0x45
   14001f9a8:	jne    0x14001faed
   14001f9ae:	mov    eax,ebp
   14001f9b0:	sub    ebp,ecx
   14001f9b2:	cmp    eax,r14d
   14001f9b5:	je     0x14001faed
   14001f9bb:	mov    rax,QWORD PTR [rsp+0x78]
   14001f9c0:	lea    r9,[rsp+0x110]
   14001f9c8:	lea    r8,[rsp+0x78]
   14001f9cd:	mov    BYTE PTR [rbx+rax*1],0x65
   14001f9d1:	add    rbx,rcx
   14001f9d4:	lea    rax,[rsp+0x84]
   14001f9dc:	lea    rdx,[rsp+0xa0]
   14001f9e4:	mov    rcx,rbx
   14001f9e7:	mov    QWORD PTR [rsp+0x20],rax
   14001f9ec:	call   0x14001f178
   14001f9f1:	cmp    eax,r14d
   14001f9f4:	je     0x140020429
   14001f9fa:	mov    rcx,r12
   14001f9fd:	inc    r13d
   14001fa00:	call   0x14001f210
   14001fa05:	mov    edi,eax
   14001fa07:	mov    DWORD PTR [rsp+0x3c],eax
   14001fa0b:	cmp    eax,0x2d
   14001fa0e:	jne    0x14001fa51
   14001fa10:	mov    rax,QWORD PTR [rsp+0x78]
   14001fa15:	lea    r9,[rsp+0x110]
   14001fa1d:	lea    r8,[rsp+0x78]
   14001fa22:	mov    BYTE PTR [rbx+rax*1],dil
   14001fa26:	lea    rax,[rsp+0x84]
   14001fa2e:	inc    rbx
   14001fa31:	lea    rdx,[rsp+0xa0]
   14001fa39:	mov    rcx,rbx
   14001fa3c:	mov    QWORD PTR [rsp+0x20],rax
   14001fa41:	call   0x14001f178
   14001fa46:	cmp    eax,r14d
   14001fa49:	je     0x140020429
   14001fa4f:	jmp    0x14001fa56
   14001fa51:	cmp    eax,0x2b
   14001fa54:	jne    0x14001fa7a
   14001fa56:	mov    eax,ebp
   14001fa58:	mov    ecx,0x1
   14001fa5d:	sub    ebp,ecx
   14001fa5f:	cmp    eax,r14d
   14001fa62:	jne    0x14001fa69
   14001fa64:	mov    ebp,r14d
   14001fa67:	jmp    0x14001fa7a
   14001fa69:	add    r13d,ecx
   14001fa6c:	mov    rcx,r12
   14001fa6f:	call   0x14001f210
   14001fa74:	mov    edi,eax
   14001fa76:	mov    DWORD PTR [rsp+0x3c],eax
   14001fa7a:	movzx  ecx,dil
   14001fa7e:	jmp    0x14001fae3
   14001fa80:	mov    eax,ebp
   14001fa82:	mov    ecx,0x1
   14001fa87:	sub    ebp,ecx
   14001fa89:	cmp    eax,r14d
   14001fa8c:	je     0x14001faed
   14001fa8e:	mov    rax,QWORD PTR [rsp+0x78]
   14001fa93:	add    esi,ecx
   14001fa95:	lea    r9,[rsp+0x110]
   14001fa9d:	mov    BYTE PTR [rbx+rax*1],dil
   14001faa1:	add    rbx,rcx
   14001faa4:	lea    rax,[rsp+0x84]
   14001faac:	lea    r8,[rsp+0x78]
   14001fab1:	lea    rdx,[rsp+0xa0]
   14001fab9:	mov    rcx,rbx
   14001fabc:	mov    QWORD PTR [rsp+0x20],rax
   14001fac1:	call   0x14001f178
   14001fac6:	cmp    eax,r14d
   14001fac9:	je     0x140020429
   14001facf:	mov    rcx,r12
   14001fad2:	inc    r13d
   14001fad5:	call   0x14001f210
   14001fada:	mov    edi,eax
   14001fadc:	mov    DWORD PTR [rsp+0x3c],eax
   14001fae0:	movzx  ecx,al
   14001fae3:	call   0x1400234e8
   14001fae8:	cmp    eax,r14d
   14001faeb:	jne    0x14001fa80
   14001faed:	mov    eax,0x1
   14001faf2:	sub    r13d,eax
   14001faf5:	mov    DWORD PTR [rsp+0x34],r13d
   14001fafa:	cmp    edi,r15d
   14001fafd:	je     0x14001fb0e
   14001faff:	mov    rdx,r12
   14001fb02:	mov    ecx,edi
   14001fb04:	call   0x140025158
   14001fb09:	mov    eax,0x1
   14001fb0e:	cmp    esi,r14d
   14001fb11:	je     0x140020429
   14001fb17:	cmp    BYTE PTR [rsp+0x30],r14b
   14001fb1c:	jne    0x140020302
   14001fb22:	mov    rsi,QWORD PTR [rsp+0x78]
   14001fb27:	add    DWORD PTR [rsp+0x64],eax
   14001fb2b:	mov    BYTE PTR [rbx+rsi*1],r14b
   14001fb2f:	movsx  ebx,BYTE PTR [rsp+0x38]
   14001fb34:	mov    rcx,QWORD PTR [rip+0x29d6d]        # 0x1400498a8
   14001fb3b:	sub    ebx,eax
   14001fb3d:	call   0x1400175ac
   14001fb42:	mov    rdx,QWORD PTR [rsp+0x90]
   14001fb4a:	lea    r9,[rsp+0xd0]
   14001fb52:	mov    r8,rsi
   14001fb55:	mov    ecx,ebx
   14001fb57:	call   rax
   14001fb59:	jmp    0x140020302
   14001fb5e:	cmp    ecx,r8d
   14001fb61:	jne    0x14001fb6f
   14001fb63:	add    eax,r11d
   14001fb66:	mov    DWORD PTR [rsp+0x60],r11d
   14001fb6b:	mov    DWORD PTR [rsp+0x48],eax
   14001fb6f:	cmp    bpl,r8b
   14001fb72:	jle    0x14001fe66
   14001fb78:	mov    r14b,r11b
   14001fb7b:	jmp    0x14001fe66
   14001fb80:	cmp    r12d,0x70
   14001fb84:	je     0x140020098
   14001fb8a:	cmp    r12d,0x73
   14001fb8e:	je     0x14001fe5b
   14001fb94:	cmp    r12d,0x75
   14001fb98:	je     0x1400200ae
   14001fb9e:	cmp    r12d,0x78
   14001fba2:	je     0x14001f7b5
   14001fba8:	cmp    r12d,0x7b
   14001fbac:	je     0x14001fbe3
   14001fbae:	movzx  eax,BYTE PTR [r10]
   14001fbb2:	cmp    eax,edi
   14001fbb4:	jne    0x14002042e
   14001fbba:	mov    cl,BYTE PTR [rsp+0x39]
   14001fbbe:	mov    r13d,DWORD PTR [rsp+0x34]
   14001fbc3:	xor    r14d,r14d
   14001fbc6:	add    cl,r15b
   14001fbc9:	mov    BYTE PTR [rsp+0x39],cl
   14001fbcd:	cmp    dl,r14b
   14001fbd0:	jne    0x140020302
   14001fbd6:	mov    QWORD PTR [rsp+0xb8],r9
   14001fbde:	jmp    0x140020302
   14001fbe3:	cmp    bpl,r8b
   14001fbe6:	movzx  r14d,r14b
   14001fbea:	cmovg  r14d,r11d
   14001fbee:	add    r10,r11
   14001fbf1:	cmp    BYTE PTR [r10],0x5e
   14001fbf5:	mov    QWORD PTR [rsp+0x70],r10
   14001fbfa:	jne    0x14001fc09
   14001fbfc:	inc    r10
   14001fbff:	mov    BYTE PTR [rsp+0x54],r15b
   14001fc04:	mov    QWORD PTR [rsp+0x70],r10
   14001fc09:	xor    edx,edx
   14001fc0b:	lea    rcx,[rsp+0xf0]
   14001fc13:	lea    r8d,[rdx+0x20]
   14001fc17:	call   0x140015b00
   14001fc1c:	mov    r10,QWORD PTR [rsp+0x70]
   14001fc21:	mov    bl,0x5d
   14001fc23:	mov    r11d,0x1
   14001fc29:	cmp    BYTE PTR [r10],bl
   14001fc2c:	jne    0x14001fc3c
   14001fc2e:	mov    r13b,bl
   14001fc31:	add    r10,r11
   14001fc34:	mov    BYTE PTR [rsp+0xfb],0x20
   14001fc3c:	mov    al,BYTE PTR [r10]
   14001fc3f:	cmp    al,bl
   14001fc41:	je     0x14001fcdf
   14001fc47:	xor    r15d,r15d
   14001fc4a:	add    r10,r11
   14001fc4d:	cmp    al,0x2d
   14001fc4f:	jne    0x14001fcb0
   14001fc51:	cmp    r13b,r15b
   14001fc54:	je     0x14001fcb0
   14001fc56:	mov    cl,BYTE PTR [r10]
   14001fc59:	cmp    cl,bl
   14001fc5b:	je     0x14001fcb0
   14001fc5d:	add    r10,r11
   14001fc60:	mov    QWORD PTR [rsp+0x70],r10
   14001fc65:	cmp    r13b,cl
   14001fc68:	jae    0x14001fc6f
   14001fc6a:	mov    r9b,cl
   14001fc6d:	jmp    0x14001fc75
   14001fc6f:	mov    r9b,r13b
   14001fc72:	mov    r13b,cl
   14001fc75:	cmp    r13b,r9b
   14001fc78:	ja     0x14001fcab
   14001fc7a:	movzx  r10d,r13b
   14001fc7e:	movzx  eax,r13b
   14001fc82:	mov    r8,r10
   14001fc85:	mov    edx,r11d
   14001fc88:	and    eax,0x7
   14001fc8b:	shr    r8,0x3
   14001fc8f:	add    r13b,r11b
   14001fc92:	mov    cl,al
   14001fc94:	add    r10,r11
   14001fc97:	shl    dl,cl
   14001fc99:	or     BYTE PTR [rsp+r8*1+0xf0],dl
   14001fca1:	cmp    r13b,r9b
   14001fca4:	jbe    0x14001fc7e
   14001fca6:	mov    r10,QWORD PTR [rsp+0x70]
   14001fcab:	mov    r13b,r15b
   14001fcae:	jmp    0x14001fcd0
   14001fcb0:	movzx  r8d,al
   14001fcb4:	mov    r13b,al
   14001fcb7:	movzx  eax,al
   14001fcba:	and    eax,0x7
   14001fcbd:	mov    edx,r11d
   14001fcc0:	shr    r8,0x3
   14001fcc4:	mov    cl,al
   14001fcc6:	shl    dl,cl
   14001fcc8:	or     BYTE PTR [rsp+r8*1+0xf0],dl
   14001fcd0:	mov    al,BYTE PTR [r10]
   14001fcd3:	cmp    al,bl
   14001fcd5:	jne    0x14001fc4a
   14001fcdb:	or     r15d,0xffffffff
   14001fcdf:	xor    eax,eax
   14001fce1:	cmp    BYTE PTR [r10],al
   14001fce4:	je     0x1400204a0
   14001fcea:	mov    QWORD PTR [rsp+0x70],r10
   14001fcef:	jmp    0x14001fe66
   14001fcf4:	mov    r14b,BYTE PTR [rsp+0x40]
   14001fcf9:	cmp    edi,0x2b
   14001fcfc:	jne    0x14001fd0f
   14001fcfe:	sub    eax,r11d
   14001fd01:	mov    DWORD PTR [rsp+0x48],eax
   14001fd05:	jne    0x14001fd73
   14001fd07:	cmp    ecx,r8d
   14001fd0a:	je     0x14001fd73
   14001fd0c:	mov    bl,r11b
   14001fd0f:	mov    ebp,DWORD PTR [rsp+0x34]
   14001fd13:	mov    rsi,QWORD PTR [rsp+0x68]
   14001fd18:	cmp    edi,0x30
   14001fd1b:	jne    0x14001fdb1
   14001fd21:	inc    ebp
   14001fd23:	mov    rcx,rsi
   14001fd26:	mov    DWORD PTR [rsp+0x34],ebp
   14001fd2a:	call   0x14001f210
   14001fd2f:	mov    edi,eax
   14001fd31:	mov    DWORD PTR [rsp+0x3c],eax
   14001fd35:	cmp    al,0x78
   14001fd37:	je     0x14001fe18
   14001fd3d:	cmp    al,0x58
   14001fd3f:	je     0x14001fe18
   14001fd45:	mov    eax,0x1
   14001fd4a:	mov    DWORD PTR [rsp+0x58],eax
   14001fd4e:	cmp    r12d,0x78
   14001fd52:	je     0x14001fd93
   14001fd54:	mov    r13d,DWORD PTR [rsp+0x48]
   14001fd59:	xor    ebp,ebp
   14001fd5b:	cmp    DWORD PTR [rsp+0x60],ebp
   14001fd5f:	je     0x14001fd68
   14001fd61:	sub    r13d,eax
   14001fd64:	jne    0x14001fd68
   14001fd66:	add    bl,al
   14001fd68:	mov    r12d,0x6f
   14001fd6e:	jmp    0x14001fe52
   14001fd73:	mov    ebp,DWORD PTR [rsp+0x34]
   14001fd77:	mov    rsi,QWORD PTR [rsp+0x68]
   14001fd7c:	add    ebp,r11d
   14001fd7f:	mov    rcx,rsi
   14001fd82:	mov    DWORD PTR [rsp+0x34],ebp
   14001fd86:	call   0x14001f210
   14001fd8b:	mov    edi,eax
   14001fd8d:	mov    DWORD PTR [rsp+0x3c],eax
   14001fd91:	jmp    0x14001fd18
   14001fd93:	sub    ebp,eax
   14001fd95:	mov    DWORD PTR [rsp+0x34],ebp
   14001fd99:	cmp    edi,r15d
   14001fd9c:	je     0x14001fda8
   14001fd9e:	mov    rdx,rsi
   14001fda1:	mov    ecx,edi
   14001fda3:	call   0x140025158
   14001fda8:	mov    edi,0x30
   14001fdad:	mov    DWORD PTR [rsp+0x3c],edi
   14001fdb1:	mov    ebp,DWORD PTR [rsp+0x50]
   14001fdb5:	mov    r13d,DWORD PTR [rsp+0x48]
   14001fdba:	test   ebp,ebp
   14001fdbc:	je     0x1400201ba
   14001fdc2:	mov    rsi,QWORD PTR [rsp+0x88]
   14001fdca:	test   bl,bl
   14001fdcc:	jne    0x1400201a1
   14001fdd2:	mov    rbx,QWORD PTR [rsp+0x68]
   14001fdd7:	cmp    r12d,0x78
   14001fddb:	je     0x140020106
   14001fde1:	cmp    r12d,0x70
   14001fde5:	je     0x140020106
   14001fdeb:	movzx  ecx,dil
   14001fdef:	call   0x1400234e8
   14001fdf4:	test   eax,eax
   14001fdf6:	je     0x140020186
   14001fdfc:	cmp    r12d,0x6f
   14001fe00:	jne    0x1400200fd
   14001fe06:	cmp    edi,0x38
   14001fe09:	jge    0x140020186
   14001fe0f:	shl    rsi,0x3
   14001fe13:	jmp    0x140020144
   14001fe18:	mov    r12d,0x1
   14001fe1e:	mov    rcx,rsi
   14001fe21:	add    ebp,r12d
   14001fe24:	mov    DWORD PTR [rsp+0x34],ebp
   14001fe28:	call   0x14001f210
   14001fe2d:	mov    r13d,DWORD PTR [rsp+0x48]
   14001fe32:	xor    ebp,ebp
   14001fe34:	mov    edi,eax
   14001fe36:	mov    DWORD PTR [rsp+0x3c],eax
   14001fe3a:	cmp    DWORD PTR [rsp+0x60],ebp
   14001fe3e:	je     0x14001fe4c
   14001fe40:	sub    r13d,0x2
   14001fe44:	cmp    r13d,r12d
   14001fe47:	jge    0x14001fe4c
   14001fe49:	add    bl,r12b
   14001fe4c:	mov    r12d,0x78
   14001fe52:	mov    ebp,DWORD PTR [rsp+0x50]
   14001fe56:	jmp    0x14001fdba
   14001fe5b:	movzx  r14d,r14b
   14001fe5f:	cmp    bpl,r8b
   14001fe62:	cmovg  r14d,r11d
   14001fe66:	mov    ecx,DWORD PTR [rsp+0x34]
   14001fe6a:	mov    rbx,QWORD PTR [rsp+0x90]
   14001fe72:	mov    r8d,0x1
   14001fe78:	sub    ecx,r8d
   14001fe7b:	mov    DWORD PTR [rsp+0x34],ecx
   14001fe7f:	cmp    edi,r15d
   14001fe82:	je     0x14001fe9a
   14001fe84:	mov    rdx,QWORD PTR [rsp+0x68]
   14001fe89:	mov    ecx,edi
   14001fe8b:	call   0x140025158
   14001fe90:	mov    ecx,DWORD PTR [rsp+0x34]
   14001fe94:	mov    r8d,0x1
   14001fe9a:	cmp    r12d,0x63
   14001fe9e:	je     0x14001fea3
   14001fea0:	sub    rsi,r8
   14001fea3:	mov    bpl,BYTE PTR [rsp+0x54]
   14001fea8:	mov    r13d,DWORD PTR [rsp+0x48]
   14001fead:	xor    edx,edx
   14001feaf:	cmp    DWORD PTR [rsp+0x60],edx
   14001feb3:	je     0x14001fec3
   14001feb5:	mov    eax,r13d
   14001feb8:	sub    r13d,r8d
   14001febb:	cmp    eax,edx
   14001febd:	je     0x140020086
   14001fec3:	add    ecx,r8d
   14001fec6:	mov    DWORD PTR [rsp+0x34],ecx
   14001feca:	mov    rcx,QWORD PTR [rsp+0x68]
   14001fecf:	call   0x14001f210
   14001fed4:	movsxd rdi,eax
   14001fed7:	mov    DWORD PTR [rsp+0x3c],edi
   14001fedb:	cmp    edi,r15d
   14001fede:	je     0x140020019
   14001fee4:	cmp    r12d,0x63
   14001fee8:	je     0x14001ff30
   14001feea:	cmp    r12d,0x73
   14001feee:	jne    0x14001ff03
   14001fef0:	cmp    edi,0x9
   14001fef3:	jl     0x14001fefe
   14001fef5:	cmp    edi,0xd
   14001fef8:	jle    0x140020019
   14001fefe:	cmp    edi,0x20
   14001ff01:	jne    0x14001ff30
   14001ff03:	cmp    r12d,0x7b
   14001ff07:	jne    0x140020019
   14001ff0d:	mov    rax,rdi
   14001ff10:	mov    edx,edi
   14001ff12:	sar    rax,0x3
   14001ff16:	and    edx,0x7
   14001ff19:	movsx  ecx,BYTE PTR [rsp+rax*1+0xf0]
   14001ff21:	movsx  eax,bpl
   14001ff25:	xor    ecx,eax
   14001ff27:	bt     ecx,edx
   14001ff2a:	jae    0x140020019
   14001ff30:	xor    edx,edx
   14001ff32:	cmp    BYTE PTR [rsp+0x30],dl
   14001ff36:	jne    0x140020007
   14001ff3c:	cmp    rsi,rdx
   14001ff3f:	je     0x14002044d
   14001ff45:	cmp    r14b,dl
   14001ff48:	je     0x14001ffe6
   14001ff4e:	movzx  ecx,dil
   14001ff52:	mov    BYTE PTR [rsp+0x98],dil
   14001ff5a:	call   0x1400198d4
   14001ff5f:	xor    ecx,ecx
   14001ff61:	cmp    eax,ecx
   14001ff63:	je     0x14001ff7a
   14001ff65:	mov    rcx,QWORD PTR [rsp+0x68]
   14001ff6a:	inc    DWORD PTR [rsp+0x34]
   14001ff6e:	call   0x14001f210
   14001ff73:	mov    BYTE PTR [rsp+0x99],al
   14001ff7a:	mov    eax,0x3f
   14001ff7f:	lea    r9,[rsp+0xd0]
   14001ff87:	lea    rdx,[rsp+0x98]
   14001ff8f:	mov    WORD PTR [rsp+0x80],ax
   14001ff97:	mov    rax,QWORD PTR [rsp+0xd0]
   14001ff9f:	lea    rcx,[rsp+0x80]
   14001ffa7:	movsxd r8,DWORD PTR [rax+0x10c]
   14001ffae:	call   0x1400247d4
   14001ffb3:	mov    rax,QWORD PTR [rsp+0x90]
   14001ffbb:	movzx  r11d,WORD PTR [rsp+0x80]
   14001ffc4:	mov    ecx,DWORD PTR [rsp+0x34]
   14001ffc8:	mov    WORD PTR [rax],r11w
   14001ffcc:	add    rax,0x2
   14001ffd0:	mov    r8d,0x1
   14001ffd6:	mov    QWORD PTR [rsp+0x90],rax
   14001ffde:	sub    rsi,r8
   14001ffe1:	jmp    0x14001fead
   14001ffe6:	mov    rax,QWORD PTR [rsp+0x90]
   14001ffee:	mov    r8d,0x1
   14001fff4:	mov    BYTE PTR [rax],dil
   14001fff7:	add    rax,r8
   14001fffa:	sub    rsi,r8
   14001fffd:	mov    QWORD PTR [rsp+0x90],rax
   140020005:	jmp    0x140020010
   140020007:	mov    r8d,0x1
   14002000d:	add    rbx,r8
   140020010:	mov    ecx,DWORD PTR [rsp+0x34]
   140020014:	jmp    0x14001feaf
   140020019:	mov    r13d,DWORD PTR [rsp+0x34]
   14002001e:	mov    r8d,0x1
   140020024:	sub    r13d,r8d
   140020027:	mov    DWORD PTR [rsp+0x34],r13d
   14002002c:	cmp    edi,r15d
   14002002f:	je     0x140020043
   140020031:	mov    rdx,QWORD PTR [rsp+0x68]
   140020036:	mov    ecx,edi
   140020038:	call   0x140025158
   14002003d:	mov    r8d,0x1
   140020043:	xor    edx,edx
   140020045:	mov    rax,QWORD PTR [rsp+0x90]
   14002004d:	cmp    rbx,rax
   140020050:	je     0x1400203b1
   140020056:	cmp    BYTE PTR [rsp+0x30],dl
   14002005a:	jne    0x1400202ff
   140020060:	mov    ebx,DWORD PTR [rsp+0x64]
   140020064:	add    ebx,r8d
   140020067:	mov    DWORD PTR [rsp+0x64],ebx
   14002006b:	cmp    r12d,0x63
   14002006f:	je     0x1400202ff
   140020075:	cmp    r14b,dl
   140020078:	je     0x14002008d
   14002007a:	xor    r14d,r14d
   14002007d:	mov    WORD PTR [rax],r14w
   140020081:	jmp    0x140020302
   140020086:	mov    r13d,DWORD PTR [rsp+0x34]
   14002008b:	jmp    0x140020045
   14002008d:	xor    r14d,r14d
   140020090:	mov    BYTE PTR [rax],r14b
   140020093:	jmp    0x140020302
   140020098:	mov    ebp,DWORD PTR [rsp+0x50]
   14002009c:	mov    BYTE PTR [rsp+0x38],r11b
   1400200a1:	mov    QWORD PTR [rsp+0x88],r8
   1400200a9:	add    ebp,r11d
   1400200ac:	jmp    0x1400200b2
   1400200ae:	mov    ebp,DWORD PTR [rsp+0x50]
   1400200b2:	cmp    edi,0x2d
   1400200b5:	jne    0x1400200bc
   1400200b7:	mov    r14b,r11b
   1400200ba:	jmp    0x1400200ca
   1400200bc:	mov    r14b,BYTE PTR [rsp+0x40]
   1400200c1:	cmp    edi,0x2b
   1400200c4:	jne    0x14001fdb5
   1400200ca:	sub    eax,r11d
   1400200cd:	mov    DWORD PTR [rsp+0x48],eax
   1400200d1:	jne    0x1400200e3
   1400200d3:	cmp    ecx,r8d
   1400200d6:	je     0x1400200e3
   1400200d8:	mov    bl,r11b
   1400200db:	mov    r13d,eax
   1400200de:	jmp    0x14001fdba
   1400200e3:	mov    rcx,QWORD PTR [rsp+0x68]
   1400200e8:	add    DWORD PTR [rsp+0x34],r11d
   1400200ed:	call   0x14001f210
   1400200f2:	mov    edi,eax
   1400200f4:	mov    DWORD PTR [rsp+0x3c],eax
   1400200f8:	jmp    0x14001fdb5
   1400200fd:	lea    rsi,[rsi+rsi*4]
   140020101:	add    rsi,rsi
   140020104:	jmp    0x140020144
   140020106:	movzx  esi,dil
   14002010a:	mov    ecx,esi
   14002010c:	call   0x140023568
   140020111:	test   eax,eax
   140020113:	je     0x140020186
   140020115:	shl    QWORD PTR [rsp+0x88],0x4
   14002011e:	mov    ecx,esi
   140020120:	movsx  ebx,dil
   140020124:	call   0x1400234e8
   140020129:	mov    rsi,QWORD PTR [rsp+0x88]
   140020131:	mov    edi,ebx
   140020133:	and    edi,0xffffffdf
   140020136:	xor    ecx,ecx
   140020138:	sub    edi,0x7
   14002013b:	cmp    eax,ecx
   14002013d:	cmovne edi,ebx
   140020140:	mov    DWORD PTR [rsp+0x3c],edi
   140020144:	lea    eax,[rdi-0x30]
   140020147:	mov    edx,0x1
   14002014c:	add    DWORD PTR [rsp+0x58],edx
   140020150:	movsxd rcx,eax
   140020153:	add    rsi,rcx
   140020156:	cmp    DWORD PTR [rsp+0x60],0x0
   14002015b:	mov    QWORD PTR [rsp+0x88],rsi
   140020163:	je     0x14002016a
   140020165:	sub    r13d,edx
   140020168:	je     0x1400201a1
   14002016a:	mov    rbx,QWORD PTR [rsp+0x68]
   14002016f:	add    DWORD PTR [rsp+0x34],edx
   140020173:	mov    rcx,rbx
   140020176:	call   0x14001f210
   14002017b:	mov    edi,eax
   14002017d:	mov    DWORD PTR [rsp+0x3c],eax
   140020181:	jmp    0x14001fdd7
   140020186:	dec    DWORD PTR [rsp+0x34]
   14002018a:	cmp    edi,r15d
   14002018d:	je     0x140020199
   14002018f:	mov    rdx,rbx
   140020192:	mov    ecx,edi
   140020194:	call   0x140025158
   140020199:	mov    rsi,QWORD PTR [rsp+0x88]
   1400201a1:	test   r14b,r14b
   1400201a4:	je     0x14002029b
   1400201aa:	neg    rsi
   1400201ad:	mov    QWORD PTR [rsp+0x88],rsi
   1400201b5:	jmp    0x14002029b
   1400201ba:	mov    esi,DWORD PTR [rsp+0x5c]
   1400201be:	test   bl,bl
   1400201c0:	jne    0x140020290
   1400201c6:	mov    rbx,QWORD PTR [rsp+0x68]
   1400201cb:	cmp    r12d,0x78
   1400201cf:	je     0x140020204
   1400201d1:	cmp    r12d,0x70
   1400201d5:	je     0x140020204
   1400201d7:	movzx  ecx,dil
   1400201db:	call   0x1400234e8
   1400201e0:	test   eax,eax
   1400201e2:	je     0x140020279
   1400201e8:	cmp    r12d,0x6f
   1400201ec:	jne    0x1400201fc
   1400201ee:	cmp    edi,0x38
   1400201f1:	jge    0x140020279
   1400201f7:	shl    esi,0x3
   1400201fa:	jmp    0x140020240
   1400201fc:	lea    eax,[rsi+rsi*4]
   1400201ff:	lea    esi,[rax+rax*1]
   140020202:	jmp    0x140020240
   140020204:	movzx  esi,dil
   140020208:	mov    ecx,esi
   14002020a:	call   0x140023568
   14002020f:	test   eax,eax
   140020211:	je     0x140020279
   140020213:	mov    eax,DWORD PTR [rsp+0x5c]
   140020217:	mov    ecx,esi
   140020219:	movsx  ebx,dil
   14002021d:	shl    eax,0x4
   140020220:	mov    DWORD PTR [rsp+0x5c],eax
   140020224:	call   0x1400234e8
   140020229:	xor    esi,esi
   14002022b:	mov    edi,ebx
   14002022d:	and    edi,0xffffffdf
   140020230:	sub    edi,0x7
   140020233:	cmp    eax,esi
   140020235:	mov    esi,DWORD PTR [rsp+0x5c]
   140020239:	cmovne edi,ebx
   14002023c:	mov    DWORD PTR [rsp+0x3c],edi
   140020240:	mov    eax,0x1
   140020245:	lea    esi,[rsi+rdi*1-0x30]
   140020249:	add    DWORD PTR [rsp+0x58],eax
   14002024d:	cmp    DWORD PTR [rsp+0x60],0x0
   140020252:	mov    DWORD PTR [rsp+0x5c],esi
   140020256:	je     0x14002025d
   140020258:	sub    r13d,eax
   14002025b:	je     0x140020290
   14002025d:	mov    rbx,QWORD PTR [rsp+0x68]
   140020262:	add    DWORD PTR [rsp+0x34],eax
   140020266:	mov    rcx,rbx
   140020269:	call   0x14001f210
   14002026e:	mov    edi,eax
   140020270:	mov    DWORD PTR [rsp+0x3c],eax
   140020274:	jmp    0x1400201cb
   140020279:	dec    DWORD PTR [rsp+0x34]
   14002027d:	cmp    edi,r15d
   140020280:	je     0x14002028c
   140020282:	mov    rdx,rbx
   140020285:	mov    ecx,edi
   140020287:	call   0x140025158
   14002028c:	mov    esi,DWORD PTR [rsp+0x5c]
   140020290:	test   r14b,r14b
   140020293:	je     0x14002029b
   140020295:	neg    esi
   140020297:	mov    DWORD PTR [rsp+0x5c],esi
   14002029b:	mov    eax,DWORD PTR [rsp+0x58]
   14002029f:	cmp    r12d,0x46
   1400202a3:	mov    r14d,0x0
   1400202a9:	cmove  eax,r14d
   1400202ad:	cmp    eax,r14d
   1400202b0:	je     0x140020429
   1400202b6:	cmp    BYTE PTR [rsp+0x30],r14b
   1400202bb:	jne    0x1400202e3
   1400202bd:	inc    DWORD PTR [rsp+0x64]
   1400202c1:	mov    eax,DWORD PTR [rsp+0x5c]
   1400202c5:	jmp    0x1400202cb
   1400202c7:	mov    ebp,DWORD PTR [rsp+0x50]
   1400202cb:	mov    rcx,QWORD PTR [rsp+0x90]
   1400202d3:	cmp    ebp,r14d
   1400202d6:	je     0x1400202ea
   1400202d8:	mov    rax,QWORD PTR [rsp+0x88]
   1400202e0:	mov    QWORD PTR [rcx],rax
   1400202e3:	mov    r13d,DWORD PTR [rsp+0x34]
   1400202e8:	jmp    0x140020302
   1400202ea:	mov    r13d,DWORD PTR [rsp+0x34]
   1400202ef:	cmp    BYTE PTR [rsp+0x38],r14b
   1400202f4:	je     0x1400202fa
   1400202f6:	mov    DWORD PTR [rcx],eax
   1400202f8:	jmp    0x140020302
   1400202fa:	mov    WORD PTR [rcx],ax
   1400202fd:	jmp    0x140020302
   1400202ff:	xor    r14d,r14d
   140020302:	mov    rsi,QWORD PTR [rsp+0x70]
   140020307:	mov    rbp,QWORD PTR [rsp+0x68]
   14002030c:	mov    ebx,0x1
   140020311:	add    BYTE PTR [rsp+0x39],bl
   140020315:	add    rsi,rbx
   140020318:	mov    r12b,0x25
   14002031b:	mov    QWORD PTR [rsp+0x70],rsi
   140020320:	jmp    0x140020384
   140020322:	cmp    BYTE PTR [rsi],r12b
   140020325:	jne    0x140020332
   140020327:	lea    rax,[rsi+0x1]
   14002032b:	cmp    BYTE PTR [rax],r12b
   14002032e:	cmove  rsi,rax
   140020332:	add    r13d,ebx
   140020335:	mov    rcx,rbp
   140020338:	mov    DWORD PTR [rsp+0x34],r13d
   14002033d:	call   0x14001f210
   140020342:	mov    edi,eax
   140020344:	mov    DWORD PTR [rsp+0x3c],eax
   140020348:	movzx  eax,BYTE PTR [rsi]
   14002034b:	add    rsi,rbx
   14002034e:	mov    QWORD PTR [rsp+0x70],rsi
   140020353:	cmp    eax,edi
   140020355:	jne    0x140020488
   14002035b:	movzx  ecx,dil
   14002035f:	call   0x1400198d4
   140020364:	cmp    eax,r14d
   140020367:	je     0x140020384
   140020369:	mov    rcx,rbp
   14002036c:	call   0x14001f210
   140020371:	movzx  ecx,BYTE PTR [rsi]
   140020374:	add    rsi,rbx
   140020377:	mov    QWORD PTR [rsp+0x70],rsi
   14002037c:	cmp    ecx,eax
   14002037e:	jne    0x140020479
   140020384:	cmp    edi,r15d
   140020387:	jne    0x140020394
   140020389:	cmp    BYTE PTR [rsi],r12b
   14002038c:	jne    0x1400203b4
   14002038e:	cmp    BYTE PTR [rsi+0x1],0x6e
   140020392:	jne    0x1400203b4
   140020394:	mov    al,BYTE PTR [rsi]
   140020396:	cmp    al,r14b
   140020399:	je     0x1400203b4
   14002039b:	jmp    0x14001f3b8
   1400203a0:	cmp    edi,r15d
   1400203a3:	je     0x1400203b1
   1400203a5:	mov    rdx,QWORD PTR [rsp+0x68]
   1400203aa:	mov    ecx,edi
   1400203ac:	call   0x140025158
   1400203b1:	xor    r14d,r14d
   1400203b4:	mov    r12d,DWORD PTR [rsp+0x44]
   1400203b9:	cmp    DWORD PTR [rsp+0x84],0x1
   1400203c1:	jne    0x1400203cd
   1400203c3:	mov    rcx,QWORD PTR [rsp+0x78]
   1400203c8:	call   0x140014f10
   1400203cd:	cmp    edi,r15d
   1400203d0:	jne    0x1400204a5
   1400203d6:	mov    eax,DWORD PTR [rsp+0x64]
   1400203da:	cmp    eax,r14d
   1400203dd:	jne    0x1400203e8
   1400203df:	mov    cl,BYTE PTR [rsp+0x39]
   1400203e3:	cmp    cl,r14b
   1400203e6:	je     0x1400203eb
   1400203e8:	mov    r15d,eax
   1400203eb:	cmp    BYTE PTR [rsp+0xe8],r14b
   1400203f3:	je     0x14001f379
   1400203f9:	mov    rcx,QWORD PTR [rsp+0xe0]
   140020401:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020408:	jmp    0x14001f379
   14002040d:	xor    r14d,r14d
   140020410:	cmp    bpl,r14b
   140020413:	jle    0x14002041b
   140020415:	mov    WORD PTR [rcx],r14w
   140020419:	jmp    0x14002041e
   14002041b:	mov    BYTE PTR [rcx],r14b
   14002041e:	call   0x140015f48
   140020423:	mov    DWORD PTR [rax],0xc
   140020429:	mov    r12d,r14d
   14002042c:	jmp    0x1400203b9
   14002042e:	cmp    edi,r15d
   140020431:	je     0x14002043f
   140020433:	mov    rdx,QWORD PTR [rsp+0x68]
   140020438:	mov    ecx,edi
   14002043a:	call   0x140025158
   14002043f:	mov    r12d,0x1
   140020445:	xor    r14d,r14d
   140020448:	jmp    0x1400203b9
   14002044d:	call   0x140015f48
   140020452:	mov    DWORD PTR [rax],0xc
   140020458:	xor    eax,eax
   14002045a:	mov    r12d,eax
   14002045d:	cmp    r14b,al
   140020460:	je     0x14002046e
   140020462:	xor    r14d,r14d
   140020465:	mov    WORD PTR [rbx],r14w
   140020469:	jmp    0x1400203b9
   14002046e:	xor    r14d,r14d
   140020471:	mov    BYTE PTR [rbx],r14b
   140020474:	jmp    0x1400203b9
   140020479:	cmp    eax,r15d
   14002047c:	je     0x140020488
   14002047e:	mov    rdx,rbp
   140020481:	mov    ecx,eax
   140020483:	call   0x140025158
   140020488:	cmp    edi,r15d
   14002048b:	je     0x1400203b4
   140020491:	mov    rdx,rbp
   140020494:	mov    ecx,edi
   140020496:	call   0x140025158
   14002049b:	jmp    0x1400203b4
   1400204a0:	mov    r12d,eax
   1400204a3:	jmp    0x140020445
   1400204a5:	cmp    r12d,0x1
   1400204a9:	jne    0x1400204e9
   1400204ab:	call   0x140015f48
   1400204b0:	xor    r9d,r9d
   1400204b3:	xor    r8d,r8d
   1400204b6:	xor    edx,edx
   1400204b8:	xor    ecx,ecx
   1400204ba:	mov    QWORD PTR [rsp+0x20],r14
   1400204bf:	mov    DWORD PTR [rax],0x16
   1400204c5:	call   0x1400149a8
   1400204ca:	cmp    BYTE PTR [rsp+0xe8],r14b
   1400204d2:	je     0x1400204e3
   1400204d4:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400204dc:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400204e3:	mov    eax,DWORD PTR [rsp+0x64]
   1400204e7:	jmp    0x140020508
   1400204e9:	mov    ebx,DWORD PTR [rsp+0x64]
   1400204ed:	cmp    BYTE PTR [rsp+0xe8],r14b
   1400204f5:	je     0x140020506
   1400204f7:	mov    rax,QWORD PTR [rsp+0xe0]
   1400204ff:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140020506:	mov    eax,ebx
   140020508:	mov    rcx,QWORD PTR [rsp+0x270]
   140020510:	xor    rcx,rsp
   140020513:	call   0x1400144f0
   140020518:	mov    rbx,QWORD PTR [rsp+0x2d0]
   140020520:	add    rsp,0x280
   140020527:	pop    r15
   140020529:	pop    r14
   14002052b:	pop    r13
   14002052d:	pop    r12
   14002052f:	pop    rdi
   140020530:	pop    rsi
   140020531:	pop    rbp
   140020532:	ret    
   140020533:	int3   
   140020534:	mov    QWORD PTR [rsp+0x8],rbx
   140020539:	mov    QWORD PTR [rsp+0x10],rsi
   14002053e:	mov    QWORD PTR [rsp+0x18],rdi
   140020543:	push   r12
   140020545:	sub    rsp,0x20
   140020549:	lea    r12,[rip+0x29370]        # 0x1400498c0
   140020550:	xor    esi,esi
   140020552:	xor    edi,edi
   140020554:	mov    rbx,r12
   140020557:	cmp    DWORD PTR [rbx+0x8],0x1
   14002055b:	jne    0x140020582
   14002055d:	movsxd rax,esi
   140020560:	mov    edx,0xfa0
   140020565:	inc    esi
   140020567:	lea    rcx,[rax+rax*4]
   14002056b:	lea    rax,[rip+0x2ea3e]        # 0x14004efb0
   140020572:	lea    rcx,[rax+rcx*8]
   140020576:	mov    QWORD PTR [rbx],rcx
   140020579:	call   0x140020a38
   14002057e:	test   eax,eax
   140020580:	je     0x1400205af
   140020582:	lea    rax,[rip+0x29577]        # 0x140049b00
   140020589:	add    rbx,0x10
   14002058d:	inc    edi
   14002058f:	cmp    rbx,rax
   140020592:	jl     0x140020557
   140020594:	mov    eax,0x1
   140020599:	mov    rbx,QWORD PTR [rsp+0x30]
   14002059e:	mov    rsi,QWORD PTR [rsp+0x38]
   1400205a3:	mov    rdi,QWORD PTR [rsp+0x40]
   1400205a8:	add    rsp,0x20
   1400205ac:	pop    r12
   1400205ae:	ret    
   1400205af:	movsxd rax,edi
   1400205b2:	add    rax,rax
   1400205b5:	and    QWORD PTR [r12+rax*8],0x0
   1400205ba:	xor    eax,eax
   1400205bc:	jmp    0x140020599
   1400205be:	int3   
   1400205bf:	int3   
   1400205c0:	mov    QWORD PTR [rsp+0x8],rbx
   1400205c5:	mov    QWORD PTR [rsp+0x10],rbp
   1400205ca:	mov    QWORD PTR [rsp+0x18],rsi
   1400205cf:	push   rdi
   1400205d0:	sub    rsp,0x20
   1400205d4:	lea    rbx,[rip+0x292e5]        # 0x1400498c0
   1400205db:	lea    rbp,[rip+0x2951e]        # 0x140049b00
   1400205e2:	mov    rdi,rbx
   1400205e5:	mov    rsi,QWORD PTR [rdi]
   1400205e8:	test   rsi,rsi
   1400205eb:	je     0x140020608
   1400205ed:	cmp    DWORD PTR [rdi+0x8],0x1
   1400205f1:	je     0x140020608
   1400205f3:	mov    rcx,rsi
   1400205f6:	call   QWORD PTR [rip+0x15dfc]        # 0x1400363f8
   1400205fc:	mov    rcx,rsi
   1400205ff:	call   0x140014f10
   140020604:	and    QWORD PTR [rdi],0x0
   140020608:	add    rdi,0x10
   14002060c:	cmp    rdi,rbp
   14002060f:	jl     0x1400205e5
   140020611:	mov    rcx,QWORD PTR [rbx]
   140020614:	test   rcx,rcx
   140020617:	je     0x140020625
   140020619:	cmp    DWORD PTR [rbx+0x8],0x1
   14002061d:	jne    0x140020625
   14002061f:	call   QWORD PTR [rip+0x15dd3]        # 0x1400363f8
   140020625:	add    rbx,0x10
   140020629:	cmp    rbx,rbp
   14002062c:	jl     0x140020611
   14002062e:	mov    rbx,QWORD PTR [rsp+0x30]
   140020633:	mov    rbp,QWORD PTR [rsp+0x38]
   140020638:	mov    rsi,QWORD PTR [rsp+0x40]
   14002063d:	add    rsp,0x20
   140020641:	pop    rdi
   140020642:	ret    
   140020643:	int3   
   140020644:	movsxd rcx,ecx
   140020647:	lea    rax,[rip+0x29272]        # 0x1400498c0
   14002064e:	add    rcx,rcx
   140020651:	mov    rcx,QWORD PTR [rax+rcx*8]
   140020655:	rex.W jmp QWORD PTR [rip+0x15dfc]        # 0x140036458
   14002065c:	mov    QWORD PTR [rsp+0x8],rbx
   140020661:	mov    QWORD PTR [rsp+0x10],rsi
   140020666:	mov    QWORD PTR [rsp+0x18],rdi
   14002066b:	push   r13
   14002066d:	sub    rsp,0x20
   140020671:	movsxd rbx,ecx
   140020674:	mov    esi,0x1
   140020679:	cmp    QWORD PTR [rip+0x2e4bf],0x0        # 0x14004eb40
   140020681:	jne    0x14002069a
   140020683:	call   0x140019c9c
   140020688:	lea    ecx,[rsi+0x1d]
   14002068b:	call   0x140019a74
   140020690:	mov    ecx,0xff
   140020695:	call   0x140016f08
   14002069a:	mov    rdi,rbx
   14002069d:	add    rdi,rdi
   1400206a0:	lea    r13,[rip+0x29219]        # 0x1400498c0
   1400206a7:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400206ad:	je     0x1400206b3
   1400206af:	mov    eax,esi
   1400206b1:	jmp    0x14002072e
   1400206b3:	mov    ecx,0x28
   1400206b8:	call   0x14001c424
   1400206bd:	mov    rbx,rax
   1400206c0:	test   rax,rax
   1400206c3:	jne    0x1400206d4
   1400206c5:	call   0x140015f48
   1400206ca:	mov    DWORD PTR [rax],0xc
   1400206d0:	xor    eax,eax
   1400206d2:	jmp    0x14002072e
   1400206d4:	mov    ecx,0xa
   1400206d9:	call   0x140020744
   1400206de:	nop
   1400206df:	cmp    QWORD PTR [r13+rdi*8+0x0],0x0
   1400206e5:	jne    0x140020716
   1400206e7:	mov    edx,0xfa0
   1400206ec:	mov    rcx,rbx
   1400206ef:	call   0x140020a38
   1400206f4:	test   eax,eax
   1400206f6:	jne    0x14002070f
   1400206f8:	mov    rcx,rbx
   1400206fb:	call   0x140014f10
   140020700:	call   0x140015f48
   140020705:	mov    DWORD PTR [rax],0xc
   14002070b:	xor    esi,esi
   14002070d:	jmp    0x14002071f
   14002070f:	mov    QWORD PTR [r13+rdi*8+0x0],rbx
   140020714:	jmp    0x14002071f
   140020716:	mov    rcx,rbx
   140020719:	call   0x140014f10
   14002071e:	nop
   14002071f:	mov    rcx,QWORD PTR [rip+0x2923a]        # 0x140049960
   140020726:	call   QWORD PTR [rip+0x15d2c]        # 0x140036458
   14002072c:	mov    eax,esi
   14002072e:	mov    rbx,QWORD PTR [rsp+0x30]
   140020733:	mov    rsi,QWORD PTR [rsp+0x38]
   140020738:	mov    rdi,QWORD PTR [rsp+0x40]
   14002073d:	add    rsp,0x20
   140020741:	pop    r13
   140020743:	ret    
   140020744:	mov    QWORD PTR [rsp+0x8],rbx
   140020749:	push   rdi
   14002074a:	sub    rsp,0x20
   14002074e:	movsxd rbx,ecx
   140020751:	lea    rdi,[rip+0x29168]        # 0x1400498c0
   140020758:	add    rbx,rbx
   14002075b:	cmp    QWORD PTR [rdi+rbx*8],0x0
   140020760:	jne    0x140020773
   140020762:	call   0x14002065c
   140020767:	test   eax,eax
   140020769:	jne    0x140020773
   14002076b:	lea    ecx,[rax+0x11]
   14002076e:	call   0x140016e9c
   140020773:	mov    rcx,QWORD PTR [rdi+rbx*8]
   140020777:	mov    rbx,QWORD PTR [rsp+0x30]
   14002077c:	add    rsp,0x20
   140020780:	pop    rdi
   140020781:	rex.W jmp QWORD PTR [rip+0x15cc0]        # 0x140036448
   140020788:	mov    QWORD PTR [rip+0x2ea51],rcx        # 0x14004f1e0
   14002078f:	mov    QWORD PTR [rip+0x2ea52],rcx        # 0x14004f1e8
   140020796:	mov    QWORD PTR [rip+0x2ea53],rcx        # 0x14004f1f0
   14002079d:	mov    QWORD PTR [rip+0x2ea54],rcx        # 0x14004f1f8
   1400207a4:	ret    
   1400207a5:	int3   
   1400207a6:	int3   
   1400207a7:	int3   
   1400207a8:	mov    rcx,QWORD PTR [rip+0x2ea41]        # 0x14004f1f0
   1400207af:	jmp    0x1400175ac
   1400207b4:	mov    QWORD PTR [rsp+0x10],rbx
   1400207b9:	mov    QWORD PTR [rsp+0x18],rsi
   1400207be:	push   rdi
   1400207bf:	push   r12
   1400207c1:	push   r13
   1400207c3:	push   r14
   1400207c5:	push   r15
   1400207c7:	sub    rsp,0x40
   1400207cb:	mov    ebx,ecx
   1400207cd:	xor    edi,edi
   1400207cf:	mov    DWORD PTR [rsp+0x70],edi
   1400207d3:	xor    esi,esi
   1400207d5:	mov    edx,ecx
   1400207d7:	sub    edx,0x2
   1400207da:	je     0x1400208e9
   1400207e0:	sub    edx,0x2
   1400207e3:	je     0x14002088b
   1400207e9:	sub    edx,0x2
   1400207ec:	je     0x140020872
   1400207f2:	sub    edx,0x2
   1400207f5:	je     0x14002088b
   1400207fb:	sub    edx,0x3
   1400207fe:	je     0x14002088b
   140020804:	sub    edx,0x4
   140020807:	je     0x140020856
   140020809:	sub    edx,0x6
   14002080c:	je     0x14002083a
   14002080e:	cmp    edx,0x1
   140020811:	je     0x140020872
   140020813:	call   0x140015f48
   140020818:	mov    DWORD PTR [rax],0x16
   14002081e:	and    QWORD PTR [rsp+0x20],rsi
   140020823:	xor    r9d,r9d
   140020826:	xor    r8d,r8d
   140020829:	xor    edx,edx
   14002082b:	xor    ecx,ecx
   14002082d:	call   0x1400149a8
   140020832:	or     eax,0xffffffff
   140020835:	jmp    0x140020a0b
   14002083a:	lea    r12,[rip+0x2e9a7]        # 0x14004f1e8
   140020841:	mov    rcx,QWORD PTR [rip+0x2e9a0]        # 0x14004f1e8
   140020848:	mov    edi,0x1
   14002084d:	mov    DWORD PTR [rsp+0x70],edi
   140020851:	jmp    0x140020900
   140020856:	lea    r12,[rip+0x2e99b]        # 0x14004f1f8
   14002085d:	mov    rcx,QWORD PTR [rip+0x2e994]        # 0x14004f1f8
   140020864:	mov    edi,0x1
   140020869:	mov    DWORD PTR [rsp+0x70],edi
   14002086d:	jmp    0x140020900
   140020872:	lea    r12,[rip+0x2e977]        # 0x14004f1f0
   140020879:	mov    rcx,QWORD PTR [rip+0x2e970]        # 0x14004f1f0
   140020880:	mov    edi,0x1
   140020885:	mov    DWORD PTR [rsp+0x70],edi
   140020889:	jmp    0x140020900
   14002088b:	call   0x140017690
   140020890:	mov    rsi,rax
   140020893:	test   rax,rax
   140020896:	jne    0x1400208a0
   140020898:	or     eax,0xffffffff
   14002089b:	jmp    0x140020a0b
   1400208a0:	mov    rdx,QWORD PTR [rax+0xa0]
   1400208a7:	mov    rcx,rdx
   1400208aa:	movsxd r8,DWORD PTR [rip+0x28f1b]        # 0x1400497cc
   1400208b1:	cmp    DWORD PTR [rcx+0x4],ebx
   1400208b4:	je     0x1400208c9
   1400208b6:	add    rcx,0x10
   1400208ba:	mov    rax,r8
   1400208bd:	shl    rax,0x4
   1400208c1:	add    rax,rdx
   1400208c4:	cmp    rcx,rax
   1400208c7:	jb     0x1400208b1
   1400208c9:	mov    rax,r8
   1400208cc:	shl    rax,0x4
   1400208d0:	add    rax,rdx
   1400208d3:	cmp    rcx,rax
   1400208d6:	jae    0x1400208dd
   1400208d8:	cmp    DWORD PTR [rcx+0x4],ebx
   1400208db:	je     0x1400208df
   1400208dd:	xor    ecx,ecx
   1400208df:	lea    r12,[rcx+0x8]
   1400208e3:	mov    r13,QWORD PTR [r12]
   1400208e7:	jmp    0x140020908
   1400208e9:	lea    r12,[rip+0x2e8f0]        # 0x14004f1e0
   1400208f0:	mov    rcx,QWORD PTR [rip+0x2e8e9]        # 0x14004f1e0
   1400208f7:	mov    edi,0x1
   1400208fc:	mov    DWORD PTR [rsp+0x70],edi
   140020900:	call   0x1400175ac
   140020905:	mov    r13,rax
   140020908:	cmp    r13,0x1
   14002090c:	jne    0x140020915
   14002090e:	xor    eax,eax
   140020910:	jmp    0x140020a0b
   140020915:	test   r13,r13
   140020918:	jne    0x140020924
   14002091a:	lea    ecx,[r13+0x3]
   14002091e:	call   0x1400171f0
   140020923:	int3   
   140020924:	test   edi,edi
   140020926:	je     0x140020930
   140020928:	xor    ecx,ecx
   14002092a:	call   0x140020744
   14002092f:	nop
   140020930:	cmp    ebx,0x8
   140020933:	je     0x14002094b
   140020935:	cmp    ebx,0xb
   140020938:	je     0x14002094b
   14002093a:	cmp    ebx,0x4
   14002093d:	je     0x14002094b
   14002093f:	mov    r15,QWORD PTR [rsp+0x38]
   140020944:	mov    r14d,DWORD PTR [rsp+0x70]
   140020949:	jmp    0x14002097c
   14002094b:	mov    r15,QWORD PTR [rsi+0xa8]
   140020952:	mov    QWORD PTR [rsp+0x38],r15
   140020957:	and    QWORD PTR [rsi+0xa8],0x0
   14002095f:	cmp    ebx,0x8
   140020962:	jne    0x140020977
   140020964:	mov    r14d,DWORD PTR [rsi+0xb0]
   14002096b:	mov    DWORD PTR [rsi+0xb0],0x8c
   140020975:	jmp    0x14002097c
   140020977:	mov    r14d,DWORD PTR [rsp+0x70]
   14002097c:	cmp    ebx,0x8
   14002097f:	jne    0x1400209ba
   140020981:	mov    ecx,DWORD PTR [rip+0x28e39]        # 0x1400497c0
   140020987:	mov    edx,ecx
   140020989:	mov    DWORD PTR [rsp+0x30],ecx
   14002098d:	mov    eax,DWORD PTR [rip+0x28e31]        # 0x1400497c4
   140020993:	add    ecx,eax
   140020995:	cmp    edx,ecx
   140020997:	jge    0x1400209c3
   140020999:	movsxd rcx,edx
   14002099c:	add    rcx,rcx
   14002099f:	mov    rax,QWORD PTR [rsi+0xa0]
   1400209a6:	and    QWORD PTR [rax+rcx*8+0x8],0x0
   1400209ac:	inc    edx
   1400209ae:	mov    DWORD PTR [rsp+0x30],edx
   1400209b2:	mov    ecx,DWORD PTR [rip+0x28e08]        # 0x1400497c0
   1400209b8:	jmp    0x14002098d
   1400209ba:	call   0x1400175a0
   1400209bf:	mov    QWORD PTR [r12],rax
   1400209c3:	test   edi,edi
   1400209c5:	je     0x1400209ce
   1400209c7:	xor    ecx,ecx
   1400209c9:	call   0x140020644
   1400209ce:	mov    edi,0x8
   1400209d3:	cmp    ebx,edi
   1400209d5:	jne    0x1400209e4
   1400209d7:	mov    edx,DWORD PTR [rsi+0xb0]
   1400209dd:	mov    ecx,edi
   1400209df:	call   r13
   1400209e2:	jmp    0x1400209e9
   1400209e4:	mov    ecx,ebx
   1400209e6:	call   r13
   1400209e9:	cmp    ebx,edi
   1400209eb:	je     0x1400209f7
   1400209ed:	cmp    ebx,0xb
   1400209f0:	je     0x1400209f7
   1400209f2:	cmp    ebx,0x4
   1400209f5:	jne    0x140020a09
   1400209f7:	mov    QWORD PTR [rsi+0xa8],r15
   1400209fe:	cmp    ebx,edi
   140020a00:	jne    0x140020a09
   140020a02:	mov    DWORD PTR [rsi+0xb0],r14d
   140020a09:	xor    eax,eax
   140020a0b:	lea    r11,[rsp+0x40]
   140020a10:	mov    rbx,QWORD PTR [r11+0x38]
   140020a14:	mov    rsi,QWORD PTR [r11+0x40]
   140020a18:	mov    rsp,r11
   140020a1b:	pop    r15
   140020a1d:	pop    r14
   140020a1f:	pop    r13
   140020a21:	pop    r12
   140020a23:	pop    rdi
   140020a24:	ret    
   140020a25:	int3   
   140020a26:	int3   
   140020a27:	int3   
   140020a28:	mov    QWORD PTR [rip+0x2e7d9],rcx        # 0x14004f208
   140020a2f:	ret    
   140020a30:	mov    QWORD PTR [rip+0x2e7d9],rcx        # 0x14004f210
   140020a37:	ret    
   140020a38:	sub    rsp,0x38
   140020a3c:	call   QWORD PTR [rip+0x15806]        # 0x140036248
   140020a42:	mov    r11d,eax
   140020a45:	mov    DWORD PTR [rsp+0x20],eax
   140020a49:	jmp    0x140020a65
   140020a4b:	cmp    eax,0xc0000017
   140020a50:	jne    0x140020a5d
   140020a52:	mov    ecx,0x8
   140020a57:	call   QWORD PTR [rip+0x15a0b]        # 0x140036468
   140020a5d:	xor    r11d,r11d
   140020a60:	mov    DWORD PTR [rsp+0x20],r11d
   140020a65:	mov    eax,r11d
   140020a68:	add    rsp,0x38
   140020a6c:	ret    
   140020a6d:	int3   
   140020a6e:	int3   
   140020a6f:	int3   
   140020a70:	mov    r9,rcx
   140020a73:	xor    r8d,r8d
   140020a76:	mov    al,BYTE PTR [rcx]
   140020a78:	inc    rcx
   140020a7b:	cmp    al,r8b
   140020a7e:	jne    0x140020a76
   140020a80:	dec    rcx
   140020a83:	cmp    rcx,r9
   140020a86:	je     0x140020a8c
   140020a88:	cmp    BYTE PTR [rcx],dl
   140020a8a:	jne    0x140020a80
   140020a8c:	cmp    BYTE PTR [rcx],dl
   140020a8e:	cmove  r8,rcx
   140020a92:	mov    rax,r8
   140020a95:	ret    
   140020a96:	int3   
   140020a97:	int3   
   140020a98:	mov    QWORD PTR [rsp+0x8],rbx
   140020a9d:	push   rdi
   140020a9e:	sub    rsp,0x30
   140020aa2:	mov    rbx,r8
   140020aa5:	mov    rdi,rdx
   140020aa8:	test   rcx,rcx
   140020aab:	je     0x140020adf
   140020aad:	xor    edx,edx
   140020aaf:	lea    rax,[rdx-0x20]
   140020ab3:	div    rcx
   140020ab6:	cmp    rax,rdi
   140020ab9:	jae    0x140020adf
   140020abb:	call   0x140015f48
   140020ac0:	and    QWORD PTR [rsp+0x20],0x0
   140020ac6:	xor    r9d,r9d
   140020ac9:	xor    r8d,r8d
   140020acc:	xor    edx,edx
   140020ace:	xor    ecx,ecx
   140020ad0:	mov    DWORD PTR [rax],0xc
   140020ad6:	call   0x1400149a8
   140020adb:	xor    eax,eax
   140020add:	jmp    0x140020b3c
   140020adf:	imul   rdi,rcx
   140020ae3:	mov    eax,0x1
   140020ae8:	test   rdi,rdi
   140020aeb:	cmove  rdi,rax
   140020aef:	xor    eax,eax
   140020af1:	cmp    rdi,0xffffffffffffffe0
   140020af5:	ja     0x140020b0f
   140020af7:	mov    rcx,QWORD PTR [rip+0x2e042]        # 0x14004eb40
   140020afe:	lea    edx,[rax+0x8]
   140020b01:	mov    r8,rdi
   140020b04:	call   QWORD PTR [rip+0x157b6]        # 0x1400362c0
   140020b0a:	test   rax,rax
   140020b0d:	jne    0x140020b3c
   140020b0f:	cmp    DWORD PTR [rip+0x2e35a],0x0        # 0x14004ee70
   140020b16:	je     0x140020b31
   140020b18:	mov    rcx,rdi
   140020b1b:	call   0x140019ce8
   140020b20:	test   eax,eax
   140020b22:	jne    0x140020aef
   140020b24:	test   rbx,rbx
   140020b27:	je     0x140020adb
   140020b29:	mov    DWORD PTR [rbx],0xc
   140020b2f:	jmp    0x140020adb
   140020b31:	test   rbx,rbx
   140020b34:	je     0x140020b3c
   140020b36:	mov    DWORD PTR [rbx],0xc
   140020b3c:	mov    rbx,QWORD PTR [rsp+0x40]
   140020b41:	add    rsp,0x30
   140020b45:	pop    rdi
   140020b46:	ret    
   140020b47:	int3   
   140020b48:	mov    DWORD PTR [rsp+0x20],r9d
   140020b4d:	push   rbp
   140020b4e:	push   r12
   140020b50:	push   r13
   140020b52:	push   r14
   140020b54:	push   r15
   140020b56:	sub    rsp,0x40
   140020b5a:	lea    rbp,[rsp+0x30]
   140020b5f:	mov    QWORD PTR [rbp+0x40],rbx
   140020b63:	mov    QWORD PTR [rbp+0x48],rsi
   140020b67:	mov    QWORD PTR [rbp+0x50],rdi
   140020b6b:	mov    rax,QWORD PTR [rip+0x2824e]        # 0x140048dc0
   140020b72:	xor    rax,rbp
   140020b75:	mov    QWORD PTR [rbp+0x8],rax
   140020b79:	mov    r9d,DWORD PTR [rip+0x2e7cc]        # 0x14004f34c
   140020b80:	mov    edi,0x1
   140020b85:	xor    ebx,ebx
   140020b87:	mov    r14,r8
   140020b8a:	mov    r15d,edx
   140020b8d:	mov    r13,rcx
   140020b90:	lea    esi,[rdi+0x1]
   140020b93:	cmp    r9d,ebx
   140020b96:	jne    0x140020bd5
   140020b98:	lea    r9,[rbp+0x0]
   140020b9c:	lea    rdx,[rip+0x18b75]        # 0x140039718
   140020ba3:	mov    r8d,edi
   140020ba6:	mov    ecx,edi
   140020ba8:	call   QWORD PTR [rip+0x156aa]        # 0x140036258
   140020bae:	cmp    eax,ebx
   140020bb0:	je     0x140020bba
   140020bb2:	mov    DWORD PTR [rip+0x2e794],edi        # 0x14004f34c
   140020bb8:	jmp    0x140020bf0
   140020bba:	call   QWORD PTR [rip+0x158a0]        # 0x140036460
   140020bc0:	mov    r9d,DWORD PTR [rip+0x2e785]        # 0x14004f34c
   140020bc7:	cmp    eax,0x78
   140020bca:	cmove  r9d,esi
   140020bce:	mov    DWORD PTR [rip+0x2e777],r9d        # 0x14004f34c
   140020bd5:	cmp    r9d,esi
   140020bd8:	je     0x140020d04
   140020bde:	cmp    r9d,ebx
   140020be1:	je     0x140020d04
   140020be7:	cmp    r9d,edi
   140020bea:	jne    0x140020d33
   140020bf0:	mov    esi,DWORD PTR [rbp+0x68]
   140020bf3:	cmp    esi,ebx
   140020bf5:	jne    0x140020bfe
   140020bf7:	mov    rax,QWORD PTR [r13+0x0]
   140020bfb:	mov    esi,DWORD PTR [rax+0x4]
   140020bfe:	neg    DWORD PTR [rbp+0x78]
   140020c01:	mov    r9d,DWORD PTR [rbp+0x58]
   140020c05:	mov    r8,r14
   140020c08:	sbb    edx,edx
   140020c0a:	mov    ecx,esi
   140020c0c:	mov    DWORD PTR [rsp+0x28],ebx
   140020c10:	and    edx,0x8
   140020c13:	mov    QWORD PTR [rsp+0x20],rbx
   140020c18:	add    edx,edi
   140020c1a:	call   QWORD PTR [rip+0x15790]        # 0x1400363b0
   140020c20:	movsxd r12,eax
   140020c23:	cmp    r12d,ebx
   140020c26:	je     0x140020d33
   140020c2c:	mov    r13d,0xdddd
   140020c32:	jle    0x140020c9c
   140020c34:	movabs rax,0x7ffffffffffffff0
   140020c3e:	cmp    r12,rax
   140020c41:	ja     0x140020c9c
   140020c43:	lea    rcx,[r12+r12*1+0x10]
   140020c48:	cmp    rcx,0x400
   140020c4f:	ja     0x140020c86
   140020c51:	lea    rax,[rcx+0xf]
   140020c55:	cmp    rax,rcx
   140020c58:	ja     0x140020c64
   140020c5a:	movabs rax,0xffffffffffffff0
   140020c64:	and    rax,0xfffffffffffffff0
   140020c68:	call   0x1400329e0
   140020c6d:	sub    rsp,rax
   140020c70:	lea    rdi,[rsp+0x30]
   140020c75:	cmp    rdi,rbx
   140020c78:	je     0x140020d33
   140020c7e:	mov    DWORD PTR [rdi],0xcccc
   140020c84:	jmp    0x140020c96
   140020c86:	call   0x140014f50
   140020c8b:	mov    rdi,rax
   140020c8e:	cmp    rax,rbx
   140020c91:	je     0x140020c9f
   140020c93:	mov    DWORD PTR [rax],r13d
   140020c96:	add    rdi,0x10
   140020c9a:	jmp    0x140020c9f
   140020c9c:	mov    rdi,rbx
   140020c9f:	cmp    rdi,rbx
   140020ca2:	je     0x140020d33
   140020ca8:	mov    r8,r12
   140020cab:	xor    edx,edx
   140020cad:	mov    rcx,rdi
   140020cb0:	add    r8,r8
   140020cb3:	call   0x140015b00
   140020cb8:	mov    r9d,DWORD PTR [rbp+0x58]
   140020cbc:	mov    r8,r14
   140020cbf:	mov    edx,0x1
   140020cc4:	mov    ecx,esi
   140020cc6:	mov    DWORD PTR [rsp+0x28],r12d
   140020ccb:	mov    QWORD PTR [rsp+0x20],rdi
   140020cd0:	call   QWORD PTR [rip+0x156da]        # 0x1400363b0
   140020cd6:	cmp    eax,ebx
   140020cd8:	je     0x140020cef
   140020cda:	mov    r9,QWORD PTR [rbp+0x60]
   140020cde:	mov    r8d,eax
   140020ce1:	mov    rdx,rdi
   140020ce4:	mov    ecx,r15d
   140020ce7:	call   QWORD PTR [rip+0x1556b]        # 0x140036258
   140020ced:	mov    ebx,eax
   140020cef:	lea    rcx,[rdi-0x10]
   140020cf3:	cmp    DWORD PTR [rcx],r13d
   140020cf6:	jne    0x140020cfd
   140020cf8:	call   0x140014f10
   140020cfd:	mov    eax,ebx
   140020cff:	jmp    0x140020d8c
   140020d04:	mov    r12d,DWORD PTR [rbp+0x70]
   140020d08:	mov    rdi,rbx
   140020d0b:	cmp    r12d,ebx
   140020d0e:	jne    0x140020d18
   140020d10:	mov    rax,QWORD PTR [r13+0x0]
   140020d14:	mov    r12d,DWORD PTR [rax+0x14]
   140020d18:	mov    esi,DWORD PTR [rbp+0x68]
   140020d1b:	cmp    esi,ebx
   140020d1d:	jne    0x140020d26
   140020d1f:	mov    rax,QWORD PTR [r13+0x0]
   140020d23:	mov    esi,DWORD PTR [rax+0x4]
   140020d26:	mov    ecx,r12d
   140020d29:	call   0x140022e24
   140020d2e:	cmp    eax,0xffffffff
   140020d31:	jne    0x140020d37
   140020d33:	xor    eax,eax
   140020d35:	jmp    0x140020d8c
   140020d37:	cmp    eax,esi
   140020d39:	je     0x140020d5f
   140020d3b:	lea    r9,[rbp+0x58]
   140020d3f:	mov    r8,r14
   140020d42:	mov    edx,eax
   140020d44:	mov    ecx,esi
   140020d46:	mov    DWORD PTR [rsp+0x28],ebx
   140020d4a:	mov    QWORD PTR [rsp+0x20],rbx
   140020d4f:	call   0x140022e78
   140020d54:	mov    rdi,rax
   140020d57:	cmp    rax,rbx
   140020d5a:	je     0x140020d33
   140020d5c:	mov    r14,rax
   140020d5f:	mov    rax,QWORD PTR [rbp+0x60]
   140020d63:	mov    r9d,DWORD PTR [rbp+0x58]
   140020d67:	mov    r8,r14
   140020d6a:	mov    edx,r15d
   140020d6d:	mov    ecx,r12d
   140020d70:	mov    QWORD PTR [rsp+0x20],rax
   140020d75:	call   QWORD PTR [rip+0x154d5]        # 0x140036250
   140020d7b:	mov    esi,eax
   140020d7d:	cmp    rdi,rbx
   140020d80:	je     0x140020d8a
   140020d82:	mov    rcx,rdi
   140020d85:	call   0x140014f10
   140020d8a:	mov    eax,esi
   140020d8c:	mov    rcx,QWORD PTR [rbp+0x8]
   140020d90:	xor    rcx,rbp
   140020d93:	call   0x1400144f0
   140020d98:	mov    rbx,QWORD PTR [rbp+0x40]
   140020d9c:	mov    rsi,QWORD PTR [rbp+0x48]
   140020da0:	mov    rdi,QWORD PTR [rbp+0x50]
   140020da4:	lea    rsp,[rbp+0x10]
   140020da8:	pop    r15
   140020daa:	pop    r14
   140020dac:	pop    r13
   140020dae:	pop    r12
   140020db0:	pop    rbp
   140020db1:	ret    
   140020db2:	int3   
   140020db3:	int3   
   140020db4:	mov    QWORD PTR [rsp+0x8],rbx
   140020db9:	mov    QWORD PTR [rsp+0x10],rsi
   140020dbe:	push   rdi
   140020dbf:	sub    rsp,0x60
   140020dc3:	mov    esi,edx
   140020dc5:	mov    rdx,rcx
   140020dc8:	lea    rcx,[rsp+0x40]
   140020dcd:	mov    ebx,r9d
   140020dd0:	mov    rdi,r8
   140020dd3:	call   0x140014a6c
   140020dd8:	mov    eax,DWORD PTR [rsp+0xa0]
   140020ddf:	mov    r11d,DWORD PTR [rsp+0xa8]
   140020de7:	lea    rcx,[rsp+0x40]
   140020dec:	mov    DWORD PTR [rsp+0x38],r11d
   140020df1:	mov    DWORD PTR [rsp+0x30],eax
   140020df5:	mov    eax,DWORD PTR [rsp+0x98]
   140020dfc:	mov    DWORD PTR [rsp+0x28],eax
   140020e00:	mov    rax,QWORD PTR [rsp+0x90]
   140020e08:	mov    r9d,ebx
   140020e0b:	mov    r8,rdi
   140020e0e:	mov    edx,esi
   140020e10:	mov    QWORD PTR [rsp+0x20],rax
   140020e15:	call   0x140020b48
   140020e1a:	cmp    BYTE PTR [rsp+0x58],0x0
   140020e1f:	je     0x140020e2d
   140020e21:	mov    rcx,QWORD PTR [rsp+0x50]
   140020e26:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140020e2d:	mov    rbx,QWORD PTR [rsp+0x70]
   140020e32:	mov    rsi,QWORD PTR [rsp+0x78]
   140020e37:	add    rsp,0x60
   140020e3b:	pop    rdi
   140020e3c:	ret    
   140020e3d:	int3   
   140020e3e:	int3   
   140020e3f:	int3   
   140020e40:	sub    rsp,0x28
   140020e44:	call   0x140017714
   140020e49:	mov    rcx,QWORD PTR [rax+0xc0]
   140020e50:	cmp    rcx,QWORD PTR [rip+0x287c9]        # 0x140049620
   140020e57:	je     0x140020e6f
   140020e59:	mov    eax,DWORD PTR [rax+0xc8]
   140020e5f:	test   DWORD PTR [rip+0x28643],eax        # 0x1400494a8
   140020e65:	jne    0x140020e6f
   140020e67:	call   0x140018464
   140020e6c:	mov    rcx,rax
   140020e6f:	mov    rax,QWORD PTR [rcx+0x140]
   140020e76:	add    rsp,0x28
   140020e7a:	ret    
   140020e7b:	int3   
   140020e7c:	mov    rax,rsp
   140020e7f:	mov    QWORD PTR [rax+0x8],rbx
   140020e83:	mov    QWORD PTR [rax+0x10],rbp
   140020e87:	mov    QWORD PTR [rax+0x18],rsi
   140020e8b:	mov    QWORD PTR [rax+0x20],rdi
   140020e8f:	push   r12
   140020e91:	sub    rsp,0x40
   140020e95:	movzx  esi,WORD PTR [rdx+0x42]
   140020e99:	movzx  ebp,WORD PTR [rdx+0x44]
   140020e9d:	mov    rdi,rcx
   140020ea0:	test   rcx,rcx
   140020ea3:	jne    0x140020ead
   140020ea5:	or     eax,0xffffffff
   140020ea8:	jmp    0x140021494
   140020ead:	and    QWORD PTR [rsp+0x38],0x0
   140020eb3:	lea    rax,[rcx+0x8]
   140020eb7:	mov    r9d,0x31
   140020ebd:	lea    r12d,[r9-0x30]
   140020ec1:	mov    QWORD PTR [rsp+0x30],rdx
   140020ec6:	lea    rcx,[rsp+0x30]
   140020ecb:	mov    r8d,esi
   140020ece:	mov    edx,r12d
   140020ed1:	mov    QWORD PTR [rsp+0x20],rax
   140020ed6:	call   0x14001c258
   140020edb:	lea    rcx,[rdi+0x10]
   140020edf:	lea    r9d,[r12+0x31]
   140020ee4:	mov    QWORD PTR [rsp+0x20],rcx
   140020ee9:	lea    rcx,[rsp+0x30]
   140020eee:	mov    r8d,esi
   140020ef1:	mov    edx,r12d
   140020ef4:	mov    ebx,eax
   140020ef6:	call   0x14001c258
   140020efb:	lea    rcx,[rdi+0x18]
   140020eff:	lea    r9d,[r12+0x32]
   140020f04:	mov    QWORD PTR [rsp+0x20],rcx
   140020f09:	lea    rcx,[rsp+0x30]
   140020f0e:	mov    r8d,esi
   140020f11:	mov    edx,r12d
   140020f14:	or     ebx,eax
   140020f16:	call   0x14001c258
   140020f1b:	lea    r9d,[r12+0x33]
   140020f20:	lea    rcx,[rsp+0x30]
   140020f25:	or     ebx,eax
   140020f27:	lea    rax,[rdi+0x20]
   140020f2b:	mov    r8d,esi
   140020f2e:	mov    edx,r12d
   140020f31:	mov    QWORD PTR [rsp+0x20],rax
   140020f36:	call   0x14001c258
   140020f3b:	lea    r9d,[r12+0x34]
   140020f40:	lea    rcx,[rsp+0x30]
   140020f45:	or     ebx,eax
   140020f47:	lea    rax,[rdi+0x28]
   140020f4b:	mov    r8d,esi
   140020f4e:	mov    edx,r12d
   140020f51:	mov    QWORD PTR [rsp+0x20],rax
   140020f56:	call   0x14001c258
   140020f5b:	lea    r9d,[r12+0x35]
   140020f60:	lea    rcx,[rsp+0x30]
   140020f65:	or     ebx,eax
   140020f67:	lea    rax,[rdi+0x30]
   140020f6b:	mov    r8d,esi
   140020f6e:	mov    edx,r12d
   140020f71:	mov    QWORD PTR [rsp+0x20],rax
   140020f76:	call   0x14001c258
   140020f7b:	lea    r9d,[r12+0x36]
   140020f80:	lea    rcx,[rsp+0x30]
   140020f85:	mov    r8d,esi
   140020f88:	mov    edx,r12d
   140020f8b:	mov    QWORD PTR [rsp+0x20],rdi
   140020f90:	or     ebx,eax
   140020f92:	call   0x14001c258
   140020f97:	lea    r9d,[r12+0x29]
   140020f9c:	or     ebx,eax
   140020f9e:	lea    rax,[rdi+0x40]
   140020fa2:	lea    rcx,[rsp+0x30]
   140020fa7:	mov    r8d,esi
   140020faa:	mov    edx,r12d
   140020fad:	mov    QWORD PTR [rsp+0x20],rax
   140020fb2:	call   0x14001c258
   140020fb7:	lea    r9d,[r12+0x2a]
   140020fbc:	lea    rcx,[rsp+0x30]
   140020fc1:	or     ebx,eax
   140020fc3:	lea    rax,[rdi+0x48]
   140020fc7:	mov    r8d,esi
   140020fca:	mov    edx,r12d
   140020fcd:	mov    QWORD PTR [rsp+0x20],rax
   140020fd2:	call   0x14001c258
   140020fd7:	lea    r9d,[r12+0x2b]
   140020fdc:	lea    rcx,[rsp+0x30]
   140020fe1:	or     ebx,eax
   140020fe3:	lea    rax,[rdi+0x50]
   140020fe7:	mov    r8d,esi
   140020fea:	mov    edx,r12d
   140020fed:	mov    QWORD PTR [rsp+0x20],rax
   140020ff2:	call   0x14001c258
   140020ff7:	or     ebx,eax
   140020ff9:	lea    rax,[rdi+0x58]
   140020ffd:	lea    r9d,[r12+0x2c]
   140021002:	lea    rcx,[rsp+0x30]
   140021007:	mov    r8d,esi
   14002100a:	mov    edx,r12d
   14002100d:	mov    QWORD PTR [rsp+0x20],rax
   140021012:	call   0x14001c258
   140021017:	lea    r9d,[r12+0x2d]
   14002101c:	or     ebx,eax
   14002101e:	lea    rax,[rdi+0x60]
   140021022:	lea    rcx,[rsp+0x30]
   140021027:	mov    r8d,esi
   14002102a:	mov    edx,r12d
   14002102d:	mov    QWORD PTR [rsp+0x20],rax
   140021032:	call   0x14001c258
   140021037:	lea    r9d,[r12+0x2e]
   14002103c:	lea    rcx,[rsp+0x30]
   140021041:	or     ebx,eax
   140021043:	lea    rax,[rdi+0x68]
   140021047:	mov    r8d,esi
   14002104a:	mov    edx,r12d
   14002104d:	mov    QWORD PTR [rsp+0x20],rax
   140021052:	call   0x14001c258
   140021057:	lea    r9d,[r12+0x2f]
   14002105c:	lea    rcx,[rsp+0x30]
   140021061:	or     ebx,eax
   140021063:	lea    rax,[rdi+0x38]
   140021067:	mov    r8d,esi
   14002106a:	mov    edx,r12d
   14002106d:	mov    QWORD PTR [rsp+0x20],rax
   140021072:	call   0x14001c258
   140021077:	lea    r9d,[r12+0x43]
   14002107c:	lea    rcx,[rsp+0x30]
   140021081:	or     ebx,eax
   140021083:	lea    rax,[rdi+0x70]
   140021087:	mov    r8d,esi
   14002108a:	mov    edx,r12d
   14002108d:	mov    QWORD PTR [rsp+0x20],rax
   140021092:	call   0x14001c258
   140021097:	lea    r9d,[r12+0x44]
   14002109c:	lea    rcx,[rsp+0x30]
   1400210a1:	or     ebx,eax
   1400210a3:	lea    rax,[rdi+0x78]
   1400210a7:	mov    r8d,esi
   1400210aa:	mov    edx,r12d
   1400210ad:	mov    QWORD PTR [rsp+0x20],rax
   1400210b2:	call   0x14001c258
   1400210b7:	lea    r9d,[r12+0x45]
   1400210bc:	lea    rcx,[rsp+0x30]
   1400210c1:	or     ebx,eax
   1400210c3:	lea    rax,[rdi+0x80]
   1400210ca:	mov    r8d,esi
   1400210cd:	mov    edx,r12d
   1400210d0:	mov    QWORD PTR [rsp+0x20],rax
   1400210d5:	call   0x14001c258
   1400210da:	lea    r9d,[r12+0x46]
   1400210df:	lea    rcx,[rsp+0x30]
   1400210e4:	or     ebx,eax
   1400210e6:	lea    rax,[rdi+0x88]
   1400210ed:	mov    r8d,esi
   1400210f0:	mov    edx,r12d
   1400210f3:	mov    QWORD PTR [rsp+0x20],rax
   1400210f8:	call   0x14001c258
   1400210fd:	lea    r9d,[r12+0x47]
   140021102:	lea    rcx,[rsp+0x30]
   140021107:	or     ebx,eax
   140021109:	lea    rax,[rdi+0x90]
   140021110:	mov    r8d,esi
   140021113:	mov    edx,r12d
   140021116:	mov    QWORD PTR [rsp+0x20],rax
   14002111b:	call   0x14001c258
   140021120:	lea    r9d,[r12+0x48]
   140021125:	lea    rcx,[rsp+0x30]
   14002112a:	or     ebx,eax
   14002112c:	lea    rax,[rdi+0x98]
   140021133:	mov    r8d,esi
   140021136:	mov    edx,r12d
   140021139:	mov    QWORD PTR [rsp+0x20],rax
   14002113e:	call   0x14001c258
   140021143:	or     ebx,eax
   140021145:	lea    rax,[rdi+0xa0]
   14002114c:	lea    r9d,[r12+0x49]
   140021151:	lea    rcx,[rsp+0x30]
   140021156:	mov    r8d,esi
   140021159:	mov    edx,r12d
   14002115c:	mov    QWORD PTR [rsp+0x20],rax
   140021161:	call   0x14001c258
   140021166:	lea    r9d,[r12+0x4a]
   14002116b:	lea    rcx,[rsp+0x30]
   140021170:	or     ebx,eax
   140021172:	lea    rax,[rdi+0xa8]
   140021179:	mov    r8d,esi
   14002117c:	mov    edx,r12d
   14002117f:	mov    QWORD PTR [rsp+0x20],rax
   140021184:	call   0x14001c258
   140021189:	lea    r9d,[r12+0x4b]
   14002118e:	lea    rcx,[rsp+0x30]
   140021193:	or     ebx,eax
   140021195:	lea    rax,[rdi+0xb0]
   14002119c:	mov    r8d,esi
   14002119f:	mov    edx,r12d
   1400211a2:	mov    QWORD PTR [rsp+0x20],rax
   1400211a7:	call   0x14001c258
   1400211ac:	lea    r9d,[r12+0x4c]
   1400211b1:	lea    rcx,[rsp+0x30]
   1400211b6:	or     ebx,eax
   1400211b8:	lea    rax,[rdi+0xb8]
   1400211bf:	mov    r8d,esi
   1400211c2:	mov    edx,r12d
   1400211c5:	mov    QWORD PTR [rsp+0x20],rax
   1400211ca:	call   0x14001c258
   1400211cf:	lea    r9d,[r12+0x4d]
   1400211d4:	lea    rcx,[rsp+0x30]
   1400211d9:	or     ebx,eax
   1400211db:	lea    rax,[rdi+0xc0]
   1400211e2:	mov    r8d,esi
   1400211e5:	mov    edx,r12d
   1400211e8:	mov    QWORD PTR [rsp+0x20],rax
   1400211ed:	call   0x14001c258
   1400211f2:	lea    r9d,[r12+0x4e]
   1400211f7:	lea    rcx,[rsp+0x30]
   1400211fc:	or     ebx,eax
   1400211fe:	lea    rax,[rdi+0xc8]
   140021205:	mov    r8d,esi
   140021208:	mov    edx,r12d
   14002120b:	mov    QWORD PTR [rsp+0x20],rax
   140021210:	call   0x14001c258
   140021215:	lea    r9d,[r12+0x37]
   14002121a:	lea    rcx,[rsp+0x30]
   14002121f:	or     ebx,eax
   140021221:	lea    rax,[rdi+0xd0]
   140021228:	mov    r8d,esi
   14002122b:	mov    edx,r12d
   14002122e:	mov    QWORD PTR [rsp+0x20],rax
   140021233:	call   0x14001c258
   140021238:	lea    r9d,[r12+0x38]
   14002123d:	lea    rcx,[rsp+0x30]
   140021242:	or     ebx,eax
   140021244:	lea    rax,[rdi+0xd8]
   14002124b:	mov    r8d,esi
   14002124e:	mov    edx,r12d
   140021251:	mov    QWORD PTR [rsp+0x20],rax
   140021256:	call   0x14001c258
   14002125b:	lea    r9d,[r12+0x39]
   140021260:	lea    rcx,[rsp+0x30]
   140021265:	or     ebx,eax
   140021267:	lea    rax,[rdi+0xe0]
   14002126e:	mov    r8d,esi
   140021271:	mov    edx,r12d
   140021274:	mov    QWORD PTR [rsp+0x20],rax
   140021279:	call   0x14001c258
   14002127e:	lea    r9d,[r12+0x3a]
   140021283:	lea    rcx,[rsp+0x30]
   140021288:	or     ebx,eax
   14002128a:	lea    rax,[rdi+0xe8]
   140021291:	mov    r8d,esi
   140021294:	mov    edx,r12d
   140021297:	mov    QWORD PTR [rsp+0x20],rax
   14002129c:	call   0x14001c258
   1400212a1:	or     ebx,eax
   1400212a3:	lea    rax,[rdi+0xf0]
   1400212aa:	lea    r9d,[r12+0x3b]
   1400212af:	lea    rcx,[rsp+0x30]
   1400212b4:	mov    r8d,esi
   1400212b7:	mov    edx,r12d
   1400212ba:	mov    QWORD PTR [rsp+0x20],rax
   1400212bf:	call   0x14001c258
   1400212c4:	lea    r9d,[r12+0x3c]
   1400212c9:	lea    rcx,[rsp+0x30]
   1400212ce:	or     ebx,eax
   1400212d0:	lea    rax,[rdi+0xf8]
   1400212d7:	mov    r8d,esi
   1400212da:	mov    edx,r12d
   1400212dd:	mov    QWORD PTR [rsp+0x20],rax
   1400212e2:	call   0x14001c258
   1400212e7:	lea    r9d,[r12+0x3d]
   1400212ec:	lea    rcx,[rsp+0x30]
   1400212f1:	or     ebx,eax
   1400212f3:	lea    rax,[rdi+0x100]
   1400212fa:	mov    r8d,esi
   1400212fd:	mov    edx,r12d
   140021300:	mov    QWORD PTR [rsp+0x20],rax
   140021305:	call   0x14001c258
   14002130a:	lea    r9d,[r12+0x3e]
   14002130f:	lea    rcx,[rsp+0x30]
   140021314:	or     ebx,eax
   140021316:	lea    rax,[rdi+0x108]
   14002131d:	mov    r8d,esi
   140021320:	mov    edx,r12d
   140021323:	mov    QWORD PTR [rsp+0x20],rax
   140021328:	call   0x14001c258
   14002132d:	lea    r9d,[r12+0x3f]
   140021332:	lea    rcx,[rsp+0x30]
   140021337:	or     ebx,eax
   140021339:	lea    rax,[rdi+0x110]
   140021340:	mov    r8d,esi
   140021343:	mov    edx,r12d
   140021346:	mov    QWORD PTR [rsp+0x20],rax
   14002134b:	call   0x14001c258
   140021350:	lea    r9d,[r12+0x40]
   140021355:	lea    rcx,[rsp+0x30]
   14002135a:	or     ebx,eax
   14002135c:	lea    rax,[rdi+0x118]
   140021363:	mov    r8d,esi
   140021366:	mov    edx,r12d
   140021369:	mov    QWORD PTR [rsp+0x20],rax
   14002136e:	call   0x14001c258
   140021373:	lea    r9d,[r12+0x41]
   140021378:	lea    rcx,[rsp+0x30]
   14002137d:	or     ebx,eax
   14002137f:	lea    rax,[rdi+0x120]
   140021386:	mov    r8d,esi
   140021389:	mov    edx,r12d
   14002138c:	mov    QWORD PTR [rsp+0x20],rax
   140021391:	call   0x14001c258
   140021396:	lea    r9d,[r12+0x42]
   14002139b:	lea    rcx,[rsp+0x30]
   1400213a0:	or     ebx,eax
   1400213a2:	lea    rax,[rdi+0x128]
   1400213a9:	mov    r8d,esi
   1400213ac:	mov    edx,r12d
   1400213af:	mov    QWORD PTR [rsp+0x20],rax
   1400213b4:	call   0x14001c258
   1400213b9:	lea    r9d,[r12+0x27]
   1400213be:	lea    rcx,[rsp+0x30]
   1400213c3:	or     ebx,eax
   1400213c5:	lea    rax,[rdi+0x130]
   1400213cc:	mov    r8d,esi
   1400213cf:	mov    edx,r12d
   1400213d2:	mov    QWORD PTR [rsp+0x20],rax
   1400213d7:	call   0x14001c258
   1400213dc:	lea    r9d,[r12+0x28]
   1400213e1:	lea    rcx,[rsp+0x30]
   1400213e6:	or     ebx,eax
   1400213e8:	lea    rax,[rdi+0x138]
   1400213ef:	mov    r8d,esi
   1400213f2:	mov    edx,r12d
   1400213f5:	mov    QWORD PTR [rsp+0x20],rax
   1400213fa:	call   0x14001c258
   1400213ff:	or     ebx,eax
   140021401:	lea    rax,[rdi+0x140]
   140021408:	mov    QWORD PTR [rsp+0x20],rax
   14002140d:	lea    r9d,[r12+0x1e]
   140021412:	lea    rcx,[rsp+0x30]
   140021417:	mov    r8d,ebp
   14002141a:	mov    edx,r12d
   14002141d:	call   0x14001c258
   140021422:	lea    r9d,[r12+0x1f]
   140021427:	lea    rcx,[rsp+0x30]
   14002142c:	or     ebx,eax
   14002142e:	lea    rax,[rdi+0x148]
   140021435:	mov    r8d,ebp
   140021438:	mov    edx,r12d
   14002143b:	mov    QWORD PTR [rsp+0x20],rax
   140021440:	call   0x14001c258
   140021445:	lea    rcx,[rsp+0x30]
   14002144a:	mov    r9d,0x1003
   140021450:	or     ebx,eax
   140021452:	lea    rax,[rdi+0x150]
   140021459:	mov    r8d,ebp
   14002145c:	mov    edx,r12d
   14002145f:	mov    QWORD PTR [rsp+0x20],rax
   140021464:	call   0x14001c258
   140021469:	lea    rcx,[rsp+0x30]
   14002146e:	mov    r9d,0x1009
   140021474:	or     ebx,eax
   140021476:	lea    rax,[rdi+0x15c]
   14002147d:	mov    r8d,ebp
   140021480:	xor    edx,edx
   140021482:	mov    QWORD PTR [rsp+0x20],rax
   140021487:	call   0x14001c258
   14002148c:	mov    DWORD PTR [rdi+0x158],ebp
   140021492:	or     eax,ebx
   140021494:	mov    rbx,QWORD PTR [rsp+0x50]
   140021499:	mov    rbp,QWORD PTR [rsp+0x58]
   14002149e:	mov    rsi,QWORD PTR [rsp+0x60]
   1400214a3:	mov    rdi,QWORD PTR [rsp+0x68]
   1400214a8:	add    rsp,0x40
   1400214ac:	pop    r12
   1400214ae:	ret    
   1400214af:	int3   
   1400214b0:	test   rcx,rcx
   1400214b3:	je     0x140021699
   1400214b9:	push   rbx
   1400214ba:	sub    rsp,0x20
   1400214be:	mov    rbx,rcx
   1400214c1:	mov    rcx,QWORD PTR [rcx+0x8]
   1400214c5:	call   0x140014f10
   1400214ca:	mov    rcx,QWORD PTR [rbx+0x10]
   1400214ce:	call   0x140014f10
   1400214d3:	mov    rcx,QWORD PTR [rbx+0x18]
   1400214d7:	call   0x140014f10
   1400214dc:	mov    rcx,QWORD PTR [rbx+0x20]
   1400214e0:	call   0x140014f10
   1400214e5:	mov    rcx,QWORD PTR [rbx+0x28]
   1400214e9:	call   0x140014f10
   1400214ee:	mov    rcx,QWORD PTR [rbx+0x30]
   1400214f2:	call   0x140014f10
   1400214f7:	mov    rcx,QWORD PTR [rbx]
   1400214fa:	call   0x140014f10
   1400214ff:	mov    rcx,QWORD PTR [rbx+0x40]
   140021503:	call   0x140014f10
   140021508:	mov    rcx,QWORD PTR [rbx+0x48]
   14002150c:	call   0x140014f10
   140021511:	mov    rcx,QWORD PTR [rbx+0x50]
   140021515:	call   0x140014f10
   14002151a:	mov    rcx,QWORD PTR [rbx+0x58]
   14002151e:	call   0x140014f10
   140021523:	mov    rcx,QWORD PTR [rbx+0x60]
   140021527:	call   0x140014f10
   14002152c:	mov    rcx,QWORD PTR [rbx+0x68]
   140021530:	call   0x140014f10
   140021535:	mov    rcx,QWORD PTR [rbx+0x38]
   140021539:	call   0x140014f10
   14002153e:	mov    rcx,QWORD PTR [rbx+0x70]
   140021542:	call   0x140014f10
   140021547:	mov    rcx,QWORD PTR [rbx+0x78]
   14002154b:	call   0x140014f10
   140021550:	mov    rcx,QWORD PTR [rbx+0x80]
   140021557:	call   0x140014f10
   14002155c:	mov    rcx,QWORD PTR [rbx+0x88]
   140021563:	call   0x140014f10
   140021568:	mov    rcx,QWORD PTR [rbx+0x90]
   14002156f:	call   0x140014f10
   140021574:	mov    rcx,QWORD PTR [rbx+0x98]
   14002157b:	call   0x140014f10
   140021580:	mov    rcx,QWORD PTR [rbx+0xa0]
   140021587:	call   0x140014f10
   14002158c:	mov    rcx,QWORD PTR [rbx+0xa8]
   140021593:	call   0x140014f10
   140021598:	mov    rcx,QWORD PTR [rbx+0xb0]
   14002159f:	call   0x140014f10
   1400215a4:	mov    rcx,QWORD PTR [rbx+0xb8]
   1400215ab:	call   0x140014f10
   1400215b0:	mov    rcx,QWORD PTR [rbx+0xc0]
   1400215b7:	call   0x140014f10
   1400215bc:	mov    rcx,QWORD PTR [rbx+0xc8]
   1400215c3:	call   0x140014f10
   1400215c8:	mov    rcx,QWORD PTR [rbx+0xd0]
   1400215cf:	call   0x140014f10
   1400215d4:	mov    rcx,QWORD PTR [rbx+0xd8]
   1400215db:	call   0x140014f10
   1400215e0:	mov    rcx,QWORD PTR [rbx+0xe0]
   1400215e7:	call   0x140014f10
   1400215ec:	mov    rcx,QWORD PTR [rbx+0xe8]
   1400215f3:	call   0x140014f10
   1400215f8:	mov    rcx,QWORD PTR [rbx+0xf0]
   1400215ff:	call   0x140014f10
   140021604:	mov    rcx,QWORD PTR [rbx+0xf8]
   14002160b:	call   0x140014f10
   140021610:	mov    rcx,QWORD PTR [rbx+0x100]
   140021617:	call   0x140014f10
   14002161c:	mov    rcx,QWORD PTR [rbx+0x108]
   140021623:	call   0x140014f10
   140021628:	mov    rcx,QWORD PTR [rbx+0x110]
   14002162f:	call   0x140014f10
   140021634:	mov    rcx,QWORD PTR [rbx+0x118]
   14002163b:	call   0x140014f10
   140021640:	mov    rcx,QWORD PTR [rbx+0x120]
   140021647:	call   0x140014f10
   14002164c:	mov    rcx,QWORD PTR [rbx+0x128]
   140021653:	call   0x140014f10
   140021658:	mov    rcx,QWORD PTR [rbx+0x130]
   14002165f:	call   0x140014f10
   140021664:	mov    rcx,QWORD PTR [rbx+0x138]
   14002166b:	call   0x140014f10
   140021670:	mov    rcx,QWORD PTR [rbx+0x140]
   140021677:	call   0x140014f10
   14002167c:	mov    rcx,QWORD PTR [rbx+0x148]
   140021683:	call   0x140014f10
   140021688:	mov    rcx,QWORD PTR [rbx+0x150]
   14002168f:	call   0x140014f10
   140021694:	add    rsp,0x20
   140021698:	pop    rbx
   140021699:	ret    
   14002169a:	int3   
   14002169b:	int3   
   14002169c:	mov    QWORD PTR [rsp+0x8],rbx
   1400216a1:	mov    QWORD PTR [rsp+0x10],rbp
   1400216a6:	push   rdi
   1400216a7:	sub    rsp,0x20
   1400216ab:	cmp    DWORD PTR [rcx+0x20],0x0
   1400216af:	mov    rdi,rcx
   1400216b2:	lea    rbp,[rip+0x28587]        # 0x140049c40
   1400216b9:	je     0x140021706
   1400216bb:	mov    edx,0x168
   1400216c0:	mov    ecx,0x1
   1400216c5:	call   0x14001c490
   1400216ca:	mov    rbx,rax
   1400216cd:	test   rax,rax
   1400216d0:	jne    0x1400216d9
   1400216d2:	mov    eax,0x1
   1400216d7:	jmp    0x140021726
   1400216d9:	mov    rdx,rdi
   1400216dc:	mov    rcx,rax
   1400216df:	call   0x140020e7c
   1400216e4:	test   eax,eax
   1400216e6:	je     0x1400216fa
   1400216e8:	mov    rcx,rbx
   1400216eb:	call   0x1400214b0
   1400216f0:	mov    rcx,rbx
   1400216f3:	call   0x140014f10
   1400216f8:	jmp    0x1400216d2
   1400216fa:	mov    DWORD PTR [rbx+0x160],0x1
   140021704:	jmp    0x140021709
   140021706:	mov    rbx,rbp
   140021709:	mov    rax,QWORD PTR [rdi+0x158]
   140021710:	cmp    rax,rbp
   140021713:	je     0x14002171d
   140021715:	lock add DWORD PTR [rax+0x160],0xffffffff
   14002171d:	mov    QWORD PTR [rdi+0x158],rbx
   140021724:	xor    eax,eax
   140021726:	mov    rbx,QWORD PTR [rsp+0x30]
   14002172b:	mov    rbp,QWORD PTR [rsp+0x38]
   140021730:	add    rsp,0x20
   140021734:	pop    rdi
   140021735:	ret    
   140021736:	int3   
   140021737:	int3   
   140021738:	test   rcx,rcx
   14002173b:	je     0x14002177f
   14002173d:	push   rbx
   14002173e:	sub    rsp,0x20
   140021742:	mov    rbx,rcx
   140021745:	mov    rcx,QWORD PTR [rcx]
   140021748:	cmp    rcx,QWORD PTR [rip+0x28671]        # 0x140049dc0
   14002174f:	je     0x140021756
   140021751:	call   0x140014f10
   140021756:	mov    rcx,QWORD PTR [rbx+0x8]
   14002175a:	cmp    rcx,QWORD PTR [rip+0x28667]        # 0x140049dc8
   140021761:	je     0x140021768
   140021763:	call   0x140014f10
   140021768:	mov    rcx,QWORD PTR [rbx+0x10]
   14002176c:	cmp    rcx,QWORD PTR [rip+0x2865d]        # 0x140049dd0
   140021773:	je     0x14002177a
   140021775:	call   0x140014f10
   14002177a:	add    rsp,0x20
   14002177e:	pop    rbx
   14002177f:	ret    
   140021780:	mov    rax,rsp
   140021783:	mov    QWORD PTR [rax+0x8],rbx
   140021787:	mov    QWORD PTR [rax+0x10],rbp
   14002178b:	mov    QWORD PTR [rax+0x18],rsi
   14002178f:	push   rdi
   140021790:	push   r12
   140021792:	push   r13
   140021794:	push   r14
   140021796:	push   r15
   140021798:	sub    rsp,0x40
   14002179c:	xor    ebx,ebx
   14002179e:	mov    rsi,rcx
   1400217a1:	mov    QWORD PTR [rax-0x38],rcx
   1400217a5:	mov    QWORD PTR [rax-0x30],rbx
   1400217a9:	cmp    DWORD PTR [rcx+0x1c],ebx
   1400217ac:	jne    0x1400217c5
   1400217ae:	cmp    DWORD PTR [rcx+0x18],ebx
   1400217b1:	jne    0x1400217c5
   1400217b3:	mov    r13,rbx
   1400217b6:	mov    r14,rbx
   1400217b9:	lea    rbp,[rip+0x28600]        # 0x140049dc0
   1400217c0:	jmp    0x14002191d
   1400217c5:	mov    edi,0x58
   1400217ca:	mov    rdx,rdi
   1400217cd:	lea    r12d,[rdi-0x57]
   1400217d1:	mov    rcx,r12
   1400217d4:	call   0x14001c490
   1400217d9:	mov    rbp,rax
   1400217dc:	cmp    rax,rbx
   1400217df:	jne    0x1400217e9
   1400217e1:	mov    eax,r12d
   1400217e4:	jmp    0x14002196e
   1400217e9:	mov    rdx,QWORD PTR [rsi+0x128]
   1400217f0:	mov    rcx,rax
   1400217f3:	mov    r8,rdi
   1400217f6:	call   0x1400160c0
   1400217fb:	mov    edi,0x4
   140021800:	mov    rcx,rdi
   140021803:	call   0x14001c424
   140021808:	mov    r14,rax
   14002180b:	cmp    rax,rbx
   14002180e:	jne    0x14002181a
   140021810:	mov    rcx,rbp
   140021813:	call   0x140014f10
   140021818:	jmp    0x1400217e1
   14002181a:	mov    DWORD PTR [rax],ebx
   14002181c:	cmp    DWORD PTR [rsi+0x1c],ebx
   14002181f:	je     0x1400218ed
   140021825:	mov    rcx,rdi
   140021828:	call   0x14001c424
   14002182d:	mov    r13,rax
   140021830:	cmp    rax,rbx
   140021833:	je     0x1400218a8
   140021835:	mov    DWORD PTR [rax],ebx
   140021837:	movzx  edi,WORD PTR [rsi+0x3e]
   14002183b:	lea    rcx,[rsp+0x30]
   140021840:	mov    r9d,0xe
   140021846:	mov    edx,r12d
   140021849:	mov    r8d,edi
   14002184c:	mov    QWORD PTR [rsp+0x20],rbp
   140021851:	call   0x14001c258
   140021856:	lea    rcx,[rbp+0x8]
   14002185a:	mov    QWORD PTR [rsp+0x20],rcx
   14002185f:	lea    rcx,[rsp+0x30]
   140021864:	mov    r9d,0xf
   14002186a:	mov    r8d,edi
   14002186d:	mov    edx,r12d
   140021870:	mov    ebx,eax
   140021872:	call   0x14001c258
   140021877:	lea    r15,[rbp+0x10]
   14002187b:	lea    rcx,[rsp+0x30]
   140021880:	mov    r9d,0x10
   140021886:	mov    r8d,edi
   140021889:	mov    edx,r12d
   14002188c:	or     ebx,eax
   14002188e:	mov    QWORD PTR [rsp+0x20],r15
   140021893:	call   0x14001c258
   140021898:	or     eax,ebx
   14002189a:	je     0x1400218b8
   14002189c:	mov    rcx,rbp
   14002189f:	call   0x140021738
   1400218a4:	or     r12d,0xffffffff
   1400218a8:	mov    rcx,rbp
   1400218ab:	call   0x140014f10
   1400218b0:	mov    rcx,r14
   1400218b3:	jmp    0x140021813
   1400218b8:	mov    rdx,QWORD PTR [r15]
   1400218bb:	xor    ebx,ebx
   1400218bd:	jmp    0x1400218d0
   1400218bf:	mov    al,BYTE PTR [rdx]
   1400218c1:	cmp    al,0x30
   1400218c3:	jl     0x1400218d6
   1400218c5:	cmp    al,0x39
   1400218c7:	jg     0x1400218d6
   1400218c9:	sub    al,0x30
   1400218cb:	mov    BYTE PTR [rdx],al
   1400218cd:	add    rdx,r12
   1400218d0:	cmp    BYTE PTR [rdx],bl
   1400218d2:	jne    0x1400218bf
   1400218d4:	jmp    0x140021911
   1400218d6:	cmp    al,0x3b
   1400218d8:	jne    0x1400218cd
   1400218da:	mov    r8,rdx
   1400218dd:	mov    al,BYTE PTR [r8+0x1]
   1400218e1:	mov    BYTE PTR [r8],al
   1400218e4:	inc    r8
   1400218e7:	cmp    al,bl
   1400218e9:	jne    0x1400218dd
   1400218eb:	jmp    0x1400218d0
   1400218ed:	mov    rax,QWORD PTR [rip+0x284cc]        # 0x140049dc0
   1400218f4:	mov    r13,rbx
   1400218f7:	mov    QWORD PTR [rbp+0x0],rax
   1400218fb:	mov    rax,QWORD PTR [rip+0x284c6]        # 0x140049dc8
   140021902:	mov    QWORD PTR [rbp+0x8],rax
   140021906:	mov    rax,QWORD PTR [rip+0x284c3]        # 0x140049dd0
   14002190d:	mov    QWORD PTR [rbp+0x10],rax
   140021911:	mov    DWORD PTR [r14],r12d
   140021914:	cmp    r13,rbx
   140021917:	je     0x14002191d
   140021919:	mov    DWORD PTR [r13+0x0],r12d
   14002191d:	mov    rax,QWORD PTR [rsi+0x118]
   140021924:	cmp    rax,rbx
   140021927:	je     0x14002192d
   140021929:	lock add DWORD PTR [rax],0xffffffff
   14002192d:	mov    rcx,QWORD PTR [rsi+0x110]
   140021934:	cmp    rcx,rbx
   140021937:	je     0x140021957
   140021939:	lock add DWORD PTR [rcx],0xffffffff
   14002193d:	jne    0x140021957
   14002193f:	mov    rcx,QWORD PTR [rsi+0x110]
   140021946:	call   0x140014f10
   14002194b:	mov    rcx,QWORD PTR [rsi+0x128]
   140021952:	call   0x140014f10
   140021957:	mov    QWORD PTR [rsi+0x118],r13
   14002195e:	mov    QWORD PTR [rsi+0x110],r14
   140021965:	mov    QWORD PTR [rsi+0x128],rbp
   14002196c:	xor    eax,eax
   14002196e:	lea    r11,[rsp+0x40]
   140021973:	mov    rbx,QWORD PTR [r11+0x30]
   140021977:	mov    rbp,QWORD PTR [r11+0x38]
   14002197b:	mov    rsi,QWORD PTR [r11+0x40]
   14002197f:	mov    rsp,r11
   140021982:	pop    r15
   140021984:	pop    r14
   140021986:	pop    r13
   140021988:	pop    r12
   14002198a:	pop    rdi
   14002198b:	ret    
   14002198c:	test   rcx,rcx
   14002198f:	je     0x140021a20
   140021995:	push   rbx
   140021996:	sub    rsp,0x20
   14002199a:	mov    rbx,rcx
   14002199d:	mov    rcx,QWORD PTR [rcx+0x18]
   1400219a1:	cmp    rcx,QWORD PTR [rip+0x28430]        # 0x140049dd8
   1400219a8:	je     0x1400219af
   1400219aa:	call   0x140014f10
   1400219af:	mov    rcx,QWORD PTR [rbx+0x20]
   1400219b3:	cmp    rcx,QWORD PTR [rip+0x28426]        # 0x140049de0
   1400219ba:	je     0x1400219c1
   1400219bc:	call   0x140014f10
   1400219c1:	mov    rcx,QWORD PTR [rbx+0x28]
   1400219c5:	cmp    rcx,QWORD PTR [rip+0x2841c]        # 0x140049de8
   1400219cc:	je     0x1400219d3
   1400219ce:	call   0x140014f10
   1400219d3:	mov    rcx,QWORD PTR [rbx+0x30]
   1400219d7:	cmp    rcx,QWORD PTR [rip+0x28412]        # 0x140049df0
   1400219de:	je     0x1400219e5
   1400219e0:	call   0x140014f10
   1400219e5:	mov    rcx,QWORD PTR [rbx+0x38]
   1400219e9:	cmp    rcx,QWORD PTR [rip+0x28408]        # 0x140049df8
   1400219f0:	je     0x1400219f7
   1400219f2:	call   0x140014f10
   1400219f7:	mov    rcx,QWORD PTR [rbx+0x40]
   1400219fb:	cmp    rcx,QWORD PTR [rip+0x283fe]        # 0x140049e00
   140021a02:	je     0x140021a09
   140021a04:	call   0x140014f10
   140021a09:	mov    rcx,QWORD PTR [rbx+0x48]
   140021a0d:	cmp    rcx,QWORD PTR [rip+0x283f4]        # 0x140049e08
   140021a14:	je     0x140021a1b
   140021a16:	call   0x140014f10
   140021a1b:	add    rsp,0x20
   140021a1f:	pop    rbx
   140021a20:	ret    
   140021a21:	int3   
   140021a22:	int3   
   140021a23:	int3   
   140021a24:	mov    rax,rsp
   140021a27:	mov    QWORD PTR [rax+0x8],rbx
   140021a2b:	mov    QWORD PTR [rax+0x10],rbp
   140021a2f:	mov    QWORD PTR [rax+0x18],rsi
   140021a33:	mov    QWORD PTR [rax+0x20],rdi
   140021a37:	push   r12
   140021a39:	push   r13
   140021a3b:	push   r14
   140021a3d:	sub    rsp,0x40
   140021a41:	xor    r12d,r12d
   140021a44:	mov    rsi,rcx
   140021a47:	mov    QWORD PTR [rax-0x28],rcx
   140021a4b:	and    QWORD PTR [rax-0x20],r12
   140021a4f:	cmp    DWORD PTR [rcx+0x18],r12d
   140021a53:	jne    0x140021a6a
   140021a55:	cmp    DWORD PTR [rcx+0x1c],r12d
   140021a59:	jne    0x140021a6a
   140021a5b:	xor    r13d,r13d
   140021a5e:	lea    rbp,[rip+0x2835b]        # 0x140049dc0
   140021a65:	jmp    0x140021d73
   140021a6a:	mov    edi,0x58
   140021a6f:	mov    rdx,rdi
   140021a72:	lea    ecx,[rdi-0x57]
   140021a75:	call   0x14001c490
   140021a7a:	mov    rbp,rax
   140021a7d:	test   rax,rax
   140021a80:	jne    0x140021a8c
   140021a82:	mov    eax,0x1
   140021a87:	jmp    0x140021dc4
   140021a8c:	mov    ebx,0x4
   140021a91:	mov    rcx,rbx
   140021a94:	call   0x14001c424
   140021a99:	mov    r13,rax
   140021a9c:	test   rax,rax
   140021a9f:	jne    0x140021aab
   140021aa1:	mov    rcx,rbp
   140021aa4:	call   0x140014f10
   140021aa9:	jmp    0x140021a82
   140021aab:	and    DWORD PTR [rax],r12d
   140021aae:	cmp    DWORD PTR [rsi+0x18],r12d
   140021ab2:	je     0x140021d20
   140021ab8:	mov    rcx,rbx
   140021abb:	call   0x14001c424
   140021ac0:	mov    r12,rax
   140021ac3:	test   rax,rax
   140021ac6:	jne    0x140021ad5
   140021ac8:	mov    rcx,rbp
   140021acb:	call   0x140014f10
   140021ad0:	mov    rcx,r13
   140021ad3:	jmp    0x140021aa4
   140021ad5:	and    DWORD PTR [rax],0x0
   140021ad8:	movzx  edi,WORD PTR [rsi+0x38]
   140021adc:	mov    r9d,0x15
   140021ae2:	lea    rax,[rbp+0x18]
   140021ae6:	lea    edx,[r9-0x14]
   140021aea:	lea    rcx,[rsp+0x30]
   140021aef:	mov    r8d,edi
   140021af2:	mov    QWORD PTR [rsp+0x20],rax
   140021af7:	call   0x14001c258
   140021afc:	lea    rcx,[rbp+0x20]
   140021b00:	mov    r9d,0x14
   140021b06:	mov    QWORD PTR [rsp+0x20],rcx
   140021b0b:	lea    edx,[r9-0x13]
   140021b0f:	lea    rcx,[rsp+0x30]
   140021b14:	mov    r8d,edi
   140021b17:	mov    ebx,eax
   140021b19:	call   0x14001c258
   140021b1e:	lea    rcx,[rbp+0x28]
   140021b22:	mov    r9d,0x16
   140021b28:	mov    QWORD PTR [rsp+0x20],rcx
   140021b2d:	lea    edx,[r9-0x15]
   140021b31:	lea    rcx,[rsp+0x30]
   140021b36:	mov    r8d,edi
   140021b39:	or     ebx,eax
   140021b3b:	call   0x14001c258
   140021b40:	mov    r9d,0x17
   140021b46:	lea    rcx,[rsp+0x30]
   140021b4b:	or     ebx,eax
   140021b4d:	lea    rax,[rbp+0x30]
   140021b51:	lea    edx,[r9-0x16]
   140021b55:	mov    r8d,edi
   140021b58:	mov    QWORD PTR [rsp+0x20],rax
   140021b5d:	call   0x14001c258
   140021b62:	mov    r9d,0x18
   140021b68:	lea    r14,[rbp+0x38]
   140021b6c:	lea    rcx,[rsp+0x30]
   140021b71:	lea    edx,[r9-0x17]
   140021b75:	mov    r8d,edi
   140021b78:	or     ebx,eax
   140021b7a:	mov    QWORD PTR [rsp+0x20],r14
   140021b7f:	call   0x14001c258
   140021b84:	mov    r9d,0x50
   140021b8a:	or     ebx,eax
   140021b8c:	lea    rax,[rbp+0x40]
   140021b90:	lea    rcx,[rsp+0x30]
   140021b95:	lea    edx,[r9-0x4f]
   140021b99:	mov    r8d,edi
   140021b9c:	mov    QWORD PTR [rsp+0x20],rax
   140021ba1:	call   0x14001c258
   140021ba6:	mov    r9d,0x51
   140021bac:	or     ebx,eax
   140021bae:	lea    rax,[rbp+0x48]
   140021bb2:	lea    rcx,[rsp+0x30]
   140021bb7:	lea    edx,[r9-0x50]
   140021bbb:	mov    r8d,edi
   140021bbe:	mov    QWORD PTR [rsp+0x20],rax
   140021bc3:	call   0x14001c258
   140021bc8:	lea    rcx,[rsp+0x30]
   140021bcd:	mov    r9d,0x1a
   140021bd3:	or     ebx,eax
   140021bd5:	lea    rax,[rbp+0x50]
   140021bd9:	mov    r8d,edi
   140021bdc:	xor    edx,edx
   140021bde:	mov    QWORD PTR [rsp+0x20],rax
   140021be3:	call   0x14001c258
   140021be8:	lea    rcx,[rsp+0x30]
   140021bed:	mov    r9d,0x19
   140021bf3:	or     ebx,eax
   140021bf5:	lea    rax,[rbp+0x51]
   140021bf9:	mov    r8d,edi
   140021bfc:	xor    edx,edx
   140021bfe:	mov    QWORD PTR [rsp+0x20],rax
   140021c03:	call   0x14001c258
   140021c08:	lea    rcx,[rsp+0x30]
   140021c0d:	mov    r9d,0x54
   140021c13:	or     ebx,eax
   140021c15:	lea    rax,[rbp+0x52]
   140021c19:	mov    r8d,edi
   140021c1c:	xor    edx,edx
   140021c1e:	mov    QWORD PTR [rsp+0x20],rax
   140021c23:	call   0x14001c258
   140021c28:	or     ebx,eax
   140021c2a:	lea    rax,[rbp+0x53]
   140021c2e:	lea    rcx,[rsp+0x30]
   140021c33:	mov    r9d,0x55
   140021c39:	mov    r8d,edi
   140021c3c:	xor    edx,edx
   140021c3e:	mov    QWORD PTR [rsp+0x20],rax
   140021c43:	call   0x14001c258
   140021c48:	lea    rcx,[rsp+0x30]
   140021c4d:	or     ebx,eax
   140021c4f:	lea    rax,[rbp+0x54]
   140021c53:	mov    r9d,0x56
   140021c59:	mov    r8d,edi
   140021c5c:	xor    edx,edx
   140021c5e:	mov    QWORD PTR [rsp+0x20],rax
   140021c63:	call   0x14001c258
   140021c68:	lea    rcx,[rsp+0x30]
   140021c6d:	mov    r9d,0x57
   140021c73:	or     ebx,eax
   140021c75:	lea    rax,[rbp+0x55]
   140021c79:	mov    r8d,edi
   140021c7c:	xor    edx,edx
   140021c7e:	mov    QWORD PTR [rsp+0x20],rax
   140021c83:	call   0x14001c258
   140021c88:	lea    rcx,[rsp+0x30]
   140021c8d:	mov    r9d,0x52
   140021c93:	or     ebx,eax
   140021c95:	lea    rax,[rbp+0x56]
   140021c99:	mov    r8d,edi
   140021c9c:	xor    edx,edx
   140021c9e:	mov    QWORD PTR [rsp+0x20],rax
   140021ca3:	call   0x14001c258
   140021ca8:	lea    rcx,[rsp+0x30]
   140021cad:	mov    r9d,0x53
   140021cb3:	or     ebx,eax
   140021cb5:	lea    rax,[rbp+0x57]
   140021cb9:	mov    r8d,edi
   140021cbc:	xor    edx,edx
   140021cbe:	mov    QWORD PTR [rsp+0x20],rax
   140021cc3:	call   0x14001c258
   140021cc8:	or     eax,ebx
   140021cca:	je     0x140021cec
   140021ccc:	mov    rcx,rbp
   140021ccf:	call   0x14002198c
   140021cd4:	mov    rcx,rbp
   140021cd7:	call   0x140014f10
   140021cdc:	mov    rcx,r13
   140021cdf:	call   0x140014f10
   140021ce4:	mov    rcx,r12
   140021ce7:	jmp    0x140021aa4
   140021cec:	mov    rdx,QWORD PTR [r14]
   140021cef:	jmp    0x140021d02
   140021cf1:	mov    al,BYTE PTR [rdx]
   140021cf3:	cmp    al,0x30
   140021cf5:	jl     0x140021d09
   140021cf7:	cmp    al,0x39
   140021cf9:	jg     0x140021d09
   140021cfb:	sub    al,0x30
   140021cfd:	mov    BYTE PTR [rdx],al
   140021cff:	inc    rdx
   140021d02:	cmp    BYTE PTR [rdx],0x0
   140021d05:	jne    0x140021cf1
   140021d07:	jmp    0x140021d32
   140021d09:	cmp    al,0x3b
   140021d0b:	jne    0x140021cff
   140021d0d:	mov    r8,rdx
   140021d10:	mov    al,BYTE PTR [r8+0x1]
   140021d14:	mov    BYTE PTR [r8],al
   140021d17:	inc    r8
   140021d1a:	cmp    al,0x0
   140021d1c:	jne    0x140021d10
   140021d1e:	jmp    0x140021d02
   140021d20:	lea    rdx,[rip+0x28099]        # 0x140049dc0
   140021d27:	mov    rcx,rbp
   140021d2a:	mov    r8,rdi
   140021d2d:	call   0x1400160c0
   140021d32:	mov    rax,QWORD PTR [rsi+0x128]
   140021d39:	mov    rcx,QWORD PTR [rax]
   140021d3c:	mov    QWORD PTR [rbp+0x0],rcx
   140021d40:	mov    rax,QWORD PTR [rsi+0x128]
   140021d47:	mov    rcx,QWORD PTR [rax+0x8]
   140021d4b:	mov    QWORD PTR [rbp+0x8],rcx
   140021d4f:	mov    rax,QWORD PTR [rsi+0x128]
   140021d56:	mov    rcx,QWORD PTR [rax+0x10]
   140021d5a:	mov    QWORD PTR [rbp+0x10],rcx
   140021d5e:	mov    DWORD PTR [r13+0x0],0x1
   140021d66:	test   r12,r12
   140021d69:	je     0x140021d73
   140021d6b:	mov    DWORD PTR [r12],0x1
   140021d73:	mov    rax,QWORD PTR [rsi+0x120]
   140021d7a:	test   rax,rax
   140021d7d:	je     0x140021d83
   140021d7f:	lock add DWORD PTR [rax],0xffffffff
   140021d83:	mov    rcx,QWORD PTR [rsi+0x110]
   140021d8a:	test   rcx,rcx
   140021d8d:	je     0x140021dad
   140021d8f:	lock add DWORD PTR [rcx],0xffffffff
   140021d93:	jne    0x140021dad
   140021d95:	mov    rcx,QWORD PTR [rsi+0x128]
   140021d9c:	call   0x140014f10
   140021da1:	mov    rcx,QWORD PTR [rsi+0x110]
   140021da8:	call   0x140014f10
   140021dad:	mov    QWORD PTR [rsi+0x120],r12
   140021db4:	mov    QWORD PTR [rsi+0x110],r13
   140021dbb:	mov    QWORD PTR [rsi+0x128],rbp
   140021dc2:	xor    eax,eax
   140021dc4:	mov    rbx,QWORD PTR [rsp+0x60]
   140021dc9:	mov    rbp,QWORD PTR [rsp+0x68]
   140021dce:	mov    rsi,QWORD PTR [rsp+0x70]
   140021dd3:	mov    rdi,QWORD PTR [rsp+0x78]
   140021dd8:	add    rsp,0x40
   140021ddc:	pop    r14
   140021dde:	pop    r13
   140021de0:	pop    r12
   140021de2:	ret    
   140021de3:	int3   
   140021de4:	mov    r11,rsp
   140021de7:	mov    QWORD PTR [r11+0x10],rbx
   140021deb:	mov    QWORD PTR [r11+0x18],rbp
   140021def:	mov    QWORD PTR [r11+0x20],rsi
   140021df3:	push   rdi
   140021df4:	push   r12
   140021df6:	push   r13
   140021df8:	push   r14
   140021dfa:	push   r15
   140021dfc:	sub    rsp,0x90
   140021e03:	mov    rax,QWORD PTR [rip+0x26fb6]        # 0x140048dc0
   140021e0a:	xor    rax,rsp
   140021e0d:	mov    QWORD PTR [rsp+0x88],rax
   140021e15:	xor    ebx,ebx
   140021e17:	mov    rdi,rcx
   140021e1a:	mov    QWORD PTR [r11-0x58],rcx
   140021e1e:	mov    QWORD PTR [rsp+0x58],rbx
   140021e23:	mov    r13,rbx
   140021e26:	mov    r15,rbx
   140021e29:	mov    r14,rbx
   140021e2c:	mov    r12,rbx
   140021e2f:	mov    QWORD PTR [r11-0x50],rbx
   140021e33:	cmp    DWORD PTR [rcx+0x14],ebx
   140021e36:	je     0x140022180
   140021e3c:	lea    rbp,[rcx+0x4]
   140021e40:	lea    esi,[rbx+0x1]
   140021e43:	cmp    DWORD PTR [rbp+0x0],ebx
   140021e46:	jne    0x140021e6b
   140021e48:	movzx  r8d,WORD PTR [rcx+0x30]
   140021e4d:	lea    rcx,[r11-0x58]
   140021e51:	xor    edx,edx
   140021e53:	mov    r9d,0x1004
   140021e59:	mov    QWORD PTR [rsp+0x20],rbp
   140021e5e:	call   0x14001c258
   140021e63:	cmp    eax,ebx
   140021e65:	jne    0x140022150
   140021e6b:	mov    ecx,0x4
   140021e70:	call   0x14001c424
   140021e75:	mov    r12d,0x180
   140021e7b:	mov    edx,0x2
   140021e80:	mov    rcx,r12
   140021e83:	mov    QWORD PTR [rsp+0x58],rax
   140021e88:	call   0x14001c490
   140021e8d:	mov    rdx,rsi
   140021e90:	mov    rcx,r12
   140021e93:	mov    r13,rax
   140021e96:	call   0x14001c490
   140021e9b:	mov    rdx,rsi
   140021e9e:	mov    rcx,r12
   140021ea1:	mov    r15,rax
   140021ea4:	call   0x14001c490
   140021ea9:	lea    ecx,[r12-0x7f]
   140021eae:	mov    rdx,rsi
   140021eb1:	mov    r14,rax
   140021eb4:	call   0x14001c490
   140021eb9:	mov    r12,rax
   140021ebc:	mov    rax,QWORD PTR [rsp+0x58]
   140021ec1:	cmp    rax,rbx
   140021ec4:	je     0x140022150
   140021eca:	cmp    r13,rbx
   140021ecd:	je     0x140022150
   140021ed3:	cmp    r12,rbx
   140021ed6:	je     0x140022150
   140021edc:	cmp    r15,rbx
   140021edf:	je     0x140022150
   140021ee5:	cmp    r14,rbx
   140021ee8:	je     0x140022150
   140021eee:	mov    DWORD PTR [rax],ebx
   140021ef0:	mov    rcx,r12
   140021ef3:	mov    eax,ebx
   140021ef5:	mov    BYTE PTR [rcx],al
   140021ef7:	add    eax,esi
   140021ef9:	add    rcx,rsi
   140021efc:	cmp    eax,0x100
   140021f01:	jl     0x140021ef5
   140021f03:	mov    ecx,DWORD PTR [rbp+0x0]
   140021f06:	lea    rdx,[rsp+0x70]
   140021f0b:	call   QWORD PTR [rip+0x143ff]        # 0x140036310
   140021f11:	cmp    eax,ebx
   140021f13:	je     0x140022150
   140021f19:	cmp    DWORD PTR [rsp+0x70],0x5
   140021f1e:	ja     0x140022150
   140021f24:	movzx  eax,WORD PTR [rsp+0x70]
   140021f29:	cmp    eax,esi
   140021f2b:	mov    DWORD PTR [rsp+0x50],eax
   140021f2f:	jle    0x140021f60
   140021f31:	cmp    BYTE PTR [rsp+0x76],bl
   140021f35:	je     0x140021f60
   140021f37:	lea    rcx,[rsp+0x77]
   140021f3c:	cmp    BYTE PTR [rcx],bl
   140021f3e:	je     0x140021f60
   140021f40:	movzx  edx,BYTE PTR [rcx-0x1]
   140021f44:	jmp    0x140021f50
   140021f46:	movsxd rax,edx
   140021f49:	add    edx,esi
   140021f4b:	mov    BYTE PTR [rax+r12*1],0x20
   140021f50:	movzx  eax,BYTE PTR [rcx]
   140021f53:	cmp    edx,eax
   140021f55:	jle    0x140021f46
   140021f57:	add    rcx,0x2
   140021f5b:	cmp    BYTE PTR [rcx-0x1],bl
   140021f5e:	jne    0x140021f3c
   140021f60:	mov    eax,DWORD PTR [rbp+0x0]
   140021f63:	mov    DWORD PTR [rsp+0x38],ebx
   140021f67:	lea    rcx,[r13+0x100]
   140021f6e:	mov    DWORD PTR [rsp+0x30],ebx
   140021f72:	mov    DWORD PTR [rsp+0x28],eax
   140021f76:	mov    QWORD PTR [rsp+0x20],rcx
   140021f7b:	xor    ecx,ecx
   140021f7d:	mov    r9d,0x100
   140021f83:	mov    r8,r12
   140021f86:	mov    edx,esi
   140021f88:	call   0x140020db4
   140021f8d:	cmp    eax,ebx
   140021f8f:	je     0x140022150
   140021f95:	mov    eax,DWORD PTR [rbp+0x0]
   140021f98:	mov    edx,DWORD PTR [rdi+0x14]
   140021f9b:	mov    DWORD PTR [rsp+0x40],ebx
   140021f9f:	mov    DWORD PTR [rsp+0x38],eax
   140021fa3:	mov    eax,0xff
   140021fa8:	lea    rcx,[r15+0x81]
   140021faf:	mov    DWORD PTR [rsp+0x30],eax
   140021fb3:	mov    QWORD PTR [rsp+0x28],rcx
   140021fb8:	lea    r8d,[rax+0x1]
   140021fbc:	lea    r9,[r12+0x1]
   140021fc1:	xor    ecx,ecx
   140021fc3:	mov    DWORD PTR [rsp+0x20],eax
   140021fc7:	call   0x1400197f4
   140021fcc:	cmp    eax,ebx
   140021fce:	je     0x140022150
   140021fd4:	mov    eax,DWORD PTR [rbp+0x0]
   140021fd7:	mov    edx,DWORD PTR [rdi+0x14]
   140021fda:	mov    DWORD PTR [rsp+0x40],ebx
   140021fde:	mov    DWORD PTR [rsp+0x38],eax
   140021fe2:	mov    eax,0xff
   140021fe7:	lea    rcx,[r14+0x81]
   140021fee:	mov    DWORD PTR [rsp+0x30],eax
   140021ff2:	mov    QWORD PTR [rsp+0x28],rcx
   140021ff7:	lea    r9,[r12+0x1]
   140021ffc:	xor    ecx,ecx
   140021ffe:	mov    r8d,0x200
   140022004:	mov    DWORD PTR [rsp+0x20],eax
   140022008:	call   0x1400197f4
   14002200d:	cmp    eax,ebx
   14002200f:	je     0x140022150
   140022015:	cmp    DWORD PTR [rsp+0x50],esi
   140022019:	lea    rbp,[r13+0xfe]
   140022020:	mov    WORD PTR [rbp+0x0],bx
   140022024:	mov    BYTE PTR [r15+0x7f],bl
   140022028:	mov    BYTE PTR [r14+0x7f],bl
   14002202c:	mov    BYTE PTR [r15+0x80],bl
   140022033:	mov    BYTE PTR [r14+0x80],bl
   14002203a:	jle    0x140022075
   14002203c:	cmp    BYTE PTR [rsp+0x76],bl
   140022040:	je     0x140022075
   140022042:	lea    rcx,[rsp+0x77]
   140022047:	cmp    BYTE PTR [rcx],bl
   140022049:	je     0x140022075
   14002204b:	movzx  edx,BYTE PTR [rcx-0x1]
   14002204f:	jmp    0x140022065
   140022051:	movsxd rax,edx
   140022054:	mov    r8d,0x8000
   14002205a:	add    edx,esi
   14002205c:	mov    WORD PTR [r13+rax*2+0x100],r8w
   140022065:	movzx  eax,BYTE PTR [rcx]
   140022068:	cmp    edx,eax
   14002206a:	jle    0x140022051
   14002206c:	add    rcx,0x2
   140022070:	cmp    BYTE PTR [rcx-0x1],bl
   140022073:	jne    0x140022047
   140022075:	lea    rdx,[r13+0x200]
   14002207c:	mov    r8d,0xfe
   140022082:	mov    rcx,r13
   140022085:	call   0x1400160c0
   14002208a:	lea    rdx,[r15+0x100]
   140022091:	mov    r8d,0x7f
   140022097:	mov    rcx,r15
   14002209a:	call   0x1400160c0
   14002209f:	lea    rdx,[r14+0x100]
   1400220a6:	mov    r8d,0x7f
   1400220ac:	mov    rcx,r14
   1400220af:	call   0x1400160c0
   1400220b4:	mov    rcx,QWORD PTR [rdi+0x130]
   1400220bb:	cmp    rcx,rbx
   1400220be:	je     0x140022105
   1400220c0:	lock add DWORD PTR [rcx],0xffffffff
   1400220c4:	jne    0x140022105
   1400220c6:	mov    rcx,QWORD PTR [rdi+0x138]
   1400220cd:	sub    rcx,0xfe
   1400220d4:	call   0x140014f10
   1400220d9:	mov    rcx,QWORD PTR [rdi+0x148]
   1400220e0:	add    rcx,0xffffffffffffff80
   1400220e4:	call   0x140014f10
   1400220e9:	mov    rcx,QWORD PTR [rdi+0x150]
   1400220f0:	add    rcx,0xffffffffffffff80
   1400220f4:	call   0x140014f10
   1400220f9:	mov    rcx,QWORD PTR [rdi+0x130]
   140022100:	call   0x140014f10
   140022105:	mov    rax,QWORD PTR [rsp+0x58]
   14002210a:	mov    DWORD PTR [rax],esi
   14002210c:	mov    QWORD PTR [rdi+0x130],rax
   140022113:	lea    rax,[r13+0x100]
   14002211a:	mov    QWORD PTR [rdi+0x140],rax
   140022121:	lea    rax,[r15+0x80]
   140022128:	mov    QWORD PTR [rdi+0x138],rbp
   14002212f:	mov    QWORD PTR [rdi+0x148],rax
   140022136:	lea    rax,[r14+0x80]
   14002213d:	mov    QWORD PTR [rdi+0x150],rax
   140022144:	mov    eax,DWORD PTR [rsp+0x50]
   140022148:	mov    DWORD PTR [rdi+0x10c],eax
   14002214e:	jmp    0x140022174
   140022150:	mov    rcx,QWORD PTR [rsp+0x58]
   140022155:	call   0x140014f10
   14002215a:	mov    rcx,r13
   14002215d:	call   0x140014f10
   140022162:	mov    rcx,r15
   140022165:	call   0x140014f10
   14002216a:	mov    rcx,r14
   14002216d:	call   0x140014f10
   140022172:	mov    ebx,esi
   140022174:	mov    rcx,r12
   140022177:	call   0x140014f10
   14002217c:	mov    eax,ebx
   14002217e:	jmp    0x1400221d5
   140022180:	mov    rax,QWORD PTR [rcx+0x130]
   140022187:	cmp    rax,rbx
   14002218a:	je     0x140022190
   14002218c:	lock add DWORD PTR [rax],0xffffffff
   140022190:	lea    rax,[rip+0x187a9]        # 0x14003a940
   140022197:	mov    esi,0x1
   14002219c:	mov    QWORD PTR [rcx+0x130],rbx
   1400221a3:	mov    QWORD PTR [rcx+0x140],rax
   1400221aa:	lea    rax,[rip+0x18c1f]        # 0x14003add0
   1400221b1:	mov    QWORD PTR [rcx+0x138],rbx
   1400221b8:	mov    QWORD PTR [rcx+0x148],rax
   1400221bf:	lea    rax,[rip+0x18d8a]        # 0x14003af50
   1400221c6:	mov    DWORD PTR [rcx+0x10c],esi
   1400221cc:	mov    QWORD PTR [rcx+0x150],rax
   1400221d3:	xor    eax,eax
   1400221d5:	mov    rcx,QWORD PTR [rsp+0x88]
   1400221dd:	xor    rcx,rsp
   1400221e0:	call   0x1400144f0
   1400221e5:	lea    r11,[rsp+0x90]
   1400221ed:	mov    rbx,QWORD PTR [r11+0x38]
   1400221f1:	mov    rbp,QWORD PTR [r11+0x40]
   1400221f5:	mov    rsi,QWORD PTR [r11+0x48]
   1400221f9:	mov    rsp,r11
   1400221fc:	pop    r15
   1400221fe:	pop    r14
   140022200:	pop    r13
   140022202:	pop    r12
   140022204:	pop    rdi
   140022205:	ret    
   140022206:	int3   
   140022207:	int3   
   140022208:	sub    rsp,0x28
   14002220c:	call   0x140017714
   140022211:	mov    rcx,QWORD PTR [rax+0xc0]
   140022218:	cmp    rcx,QWORD PTR [rip+0x27401]        # 0x140049620
   14002221f:	je     0x140022237
   140022221:	mov    eax,DWORD PTR [rax+0xc8]
   140022227:	test   DWORD PTR [rip+0x2727b],eax        # 0x1400494a8
   14002222d:	jne    0x140022237
   14002222f:	call   0x140018464
   140022234:	mov    rcx,rax
   140022237:	mov    eax,DWORD PTR [rcx+0x4]
   14002223a:	add    rsp,0x28
   14002223e:	ret    
   14002223f:	int3   
   140022240:	sub    rsp,0x28
   140022244:	call   0x140017714
   140022249:	mov    rcx,QWORD PTR [rax+0xc0]
   140022250:	cmp    rcx,QWORD PTR [rip+0x273c9]        # 0x140049620
   140022257:	je     0x14002226f
   140022259:	mov    eax,DWORD PTR [rax+0xc8]
   14002225f:	test   DWORD PTR [rip+0x27243],eax        # 0x1400494a8
   140022265:	jne    0x14002226f
   140022267:	call   0x140018464
   14002226c:	mov    rcx,rax
   14002226f:	lea    rax,[rcx+0xc]
   140022273:	add    rsp,0x28
   140022277:	ret    
   140022278:	mov    rax,rsp
   14002227b:	mov    QWORD PTR [rax+0x8],rbx
   14002227f:	mov    QWORD PTR [rax+0x10],rbp
   140022283:	mov    QWORD PTR [rax+0x18],rsi
   140022287:	mov    QWORD PTR [rax+0x20],rdi
   14002228b:	push   r12
   14002228d:	push   r13
   14002228f:	push   r14
   140022291:	sub    rsp,0x20
   140022295:	xor    ebx,ebx
   140022297:	mov    r13,r8
   14002229a:	mov    edi,edx
   14002229c:	cmp    edx,ebx
   14002229e:	mov    r14,rcx
   1400222a1:	mov    eax,0x1
   1400222a6:	mov    esi,ebx
   1400222a8:	jl     0x1400222e9
   1400222aa:	cmp    eax,ebx
   1400222ac:	je     0x1400222eb
   1400222ae:	mov    rcx,QWORD PTR [r13+0x0]
   1400222b2:	lea    eax,[rsi+rdi*1]
   1400222b5:	cdq    
   1400222b6:	sub    eax,edx
   1400222b8:	sar    eax,1
   1400222ba:	movsxd rbp,eax
   1400222bd:	mov    r12,rbp
   1400222c0:	add    r12,r12
   1400222c3:	mov    rdx,QWORD PTR [r14+r12*8]
   1400222c7:	call   0x140025394
   1400222cc:	cmp    eax,ebx
   1400222ce:	jne    0x1400222db
   1400222d0:	lea    rcx,[r14+r12*8+0x8]
   1400222d5:	mov    QWORD PTR [r13+0x0],rcx
   1400222d9:	jmp    0x1400222e5
   1400222db:	jge    0x1400222e2
   1400222dd:	lea    edi,[rbp-0x1]
   1400222e0:	jmp    0x1400222e5
   1400222e2:	lea    esi,[rbp+0x1]
   1400222e5:	cmp    esi,edi
   1400222e7:	jle    0x1400222aa
   1400222e9:	cmp    eax,ebx
   1400222eb:	mov    rbp,QWORD PTR [rsp+0x48]
   1400222f0:	mov    rsi,QWORD PTR [rsp+0x50]
   1400222f5:	mov    rdi,QWORD PTR [rsp+0x58]
   1400222fa:	sete   bl
   1400222fd:	mov    eax,ebx
   1400222ff:	mov    rbx,QWORD PTR [rsp+0x40]
   140022304:	add    rsp,0x20
   140022308:	pop    r14
   14002230a:	pop    r13
   14002230c:	pop    r12
   14002230e:	ret    
   14002230f:	int3   
   140022310:	mov    QWORD PTR [rsp+0x18],rbx
   140022315:	push   rdi
   140022316:	sub    rsp,0x30
   14002231a:	mov    rax,QWORD PTR [rip+0x26a9f]        # 0x140048dc0
   140022321:	xor    rax,rsp
   140022324:	mov    QWORD PTR [rsp+0x28],rax
   140022329:	mov    rdi,rdx
   14002232c:	mov    rbx,rcx
   14002232f:	test   rcx,rcx
   140022332:	je     0x14002239a
   140022334:	cmp    BYTE PTR [rcx],0x0
   140022337:	je     0x14002239a
   140022339:	lea    rdx,[rip+0x199bc]        # 0x14003bcfc
   140022340:	call   0x1400174e0
   140022345:	test   eax,eax
   140022347:	je     0x14002239a
   140022349:	lea    rdx,[rip+0x199a8]        # 0x14003bcf8
   140022350:	mov    rcx,rbx
   140022353:	call   0x1400174e0
   140022358:	test   eax,eax
   14002235a:	jne    0x14002237a
   14002235c:	mov    ecx,DWORD PTR [rdi+0x24]
   14002235f:	lea    r9d,[rax+0x8]
   140022363:	lea    r8,[rsp+0x20]
   140022368:	lea    edx,[rax+0xb]
   14002236b:	call   QWORD PTR [rip+0x13fa7]        # 0x140036318
   140022371:	test   eax,eax
   140022373:	je     0x1400223b7
   140022375:	lea    rbx,[rsp+0x20]
   14002237a:	mov    rcx,rbx
   14002237d:	call   0x140016de8
   140022382:	mov    rcx,QWORD PTR [rsp+0x28]
   140022387:	xor    rcx,rsp
   14002238a:	call   0x1400144f0
   14002238f:	mov    rbx,QWORD PTR [rsp+0x50]
   140022394:	add    rsp,0x30
   140022398:	pop    rdi
   140022399:	ret    
   14002239a:	mov    ecx,DWORD PTR [rdi+0x24]
   14002239d:	lea    r8,[rsp+0x20]
   1400223a2:	mov    r9d,0x8
   1400223a8:	mov    edx,0x1004
   1400223ad:	call   QWORD PTR [rip+0x13f65]        # 0x140036318
   1400223b3:	test   eax,eax
   1400223b5:	jne    0x1400223bb
   1400223b7:	xor    eax,eax
   1400223b9:	jmp    0x140022382
   1400223bb:	lea    rdx,[rip+0x19932]        # 0x14003bcf4
   1400223c2:	lea    rcx,[rsp+0x20]
   1400223c7:	call   0x1400174e0
   1400223cc:	test   eax,eax
   1400223ce:	jne    0x140022375
   1400223d0:	call   QWORD PTR [rip+0x13dea]        # 0x1400361c0
   1400223d6:	jmp    0x140022382
   1400223d8:	mov    dl,BYTE PTR [rcx]
   1400223da:	mov    r8,rcx
   1400223dd:	xor    r9d,r9d
   1400223e0:	jmp    0x140022409
   1400223e2:	lea    eax,[rdx-0x61]
   1400223e5:	inc    r8
   1400223e8:	cmp    al,0x5
   1400223ea:	ja     0x1400223f1
   1400223ec:	add    dl,0xd9
   1400223ef:	jmp    0x1400223fb
   1400223f1:	lea    eax,[rdx-0x41]
   1400223f4:	cmp    al,0x5
   1400223f6:	ja     0x1400223fb
   1400223f8:	add    dl,0xf9
   1400223fb:	movsx  ecx,dl
   1400223fe:	mov    dl,BYTE PTR [r8]
   140022401:	add    r9d,r9d
   140022404:	lea    r9d,[rcx+r9*8-0x30]
   140022409:	test   dl,dl
   14002240b:	jne    0x1400223e2
   14002240d:	mov    eax,r9d
   140022410:	ret    
   140022411:	int3   
   140022412:	int3   
   140022413:	int3   
   140022414:	mov    QWORD PTR [rsp+0x10],rbx
   140022419:	mov    QWORD PTR [rsp+0x18],rsi
   14002241e:	push   rdi
   14002241f:	sub    rsp,0xb0
   140022426:	mov    rax,QWORD PTR [rip+0x26993]        # 0x140048dc0
   14002242d:	xor    rax,rsp
   140022430:	mov    QWORD PTR [rsp+0xa0],rax
   140022438:	mov    rbx,rcx
   14002243b:	call   0x140017714
   140022440:	mov    rcx,rbx
   140022443:	mov    rdi,rax
   140022446:	call   0x1400223d8
   14002244b:	mov    ecx,DWORD PTR [rdi+0x15c]
   140022451:	neg    ecx
   140022453:	lea    r8,[rsp+0x20]
   140022458:	mov    r9d,0x78
   14002245e:	sbb    edx,edx
   140022460:	mov    ecx,eax
   140022462:	mov    esi,eax
   140022464:	and    edx,0xfffff005
   14002246a:	add    edx,0x1002
   140022470:	call   QWORD PTR [rip+0x13ea2]        # 0x140036318
   140022476:	xor    ebx,ebx
   140022478:	cmp    eax,ebx
   14002247a:	jne    0x140022487
   14002247c:	mov    DWORD PTR [rdi+0x150],ebx
   140022482:	lea    eax,[rbx+0x1]
   140022485:	jmp    0x1400224d4
   140022487:	mov    rcx,QWORD PTR [rdi+0x148]
   14002248e:	lea    rdx,[rsp+0x20]
   140022493:	call   0x140025394
   140022498:	cmp    eax,ebx
   14002249a:	jne    0x1400224c6
   14002249c:	lea    rax,[rip+0x1983d]        # 0x14003bce0
   1400224a3:	cmp    si,WORD PTR [rax]
   1400224a6:	je     0x1400224c6
   1400224a8:	inc    ebx
   1400224aa:	add    rax,0x2
   1400224ae:	cmp    ebx,0xa
   1400224b1:	jb     0x1400224a3
   1400224b3:	or     DWORD PTR [rdi+0x150],0x4
   1400224ba:	mov    DWORD PTR [rdi+0x164],esi
   1400224c0:	mov    DWORD PTR [rdi+0x160],esi
   1400224c6:	mov    eax,DWORD PTR [rdi+0x150]
   1400224cc:	shr    eax,0x2
   1400224cf:	not    eax
   1400224d1:	and    eax,0x1
   1400224d4:	mov    rcx,QWORD PTR [rsp+0xa0]
   1400224dc:	xor    rcx,rsp
   1400224df:	call   0x1400144f0
   1400224e4:	lea    r11,[rsp+0xb0]
   1400224ec:	mov    rbx,QWORD PTR [r11+0x18]
   1400224f0:	mov    rsi,QWORD PTR [r11+0x20]
   1400224f4:	mov    rsp,r11
   1400224f7:	pop    rdi
   1400224f8:	ret    
   1400224f9:	int3   
   1400224fa:	int3   
   1400224fb:	int3   
   1400224fc:	mov    QWORD PTR [rsp+0x10],rbx
   140022501:	push   rbp
   140022502:	push   rsi
   140022503:	push   rdi
   140022504:	sub    rsp,0xb0
   14002250b:	mov    rax,QWORD PTR [rip+0x268ae]        # 0x140048dc0
   140022512:	xor    rax,rsp
   140022515:	mov    QWORD PTR [rsp+0xa0],rax
   14002251d:	mov    esi,ecx
   14002251f:	mov    r9d,0x78
   140022525:	and    ecx,0x3ff
   14002252b:	mov    rbp,r8
   14002252e:	mov    edi,edx
   140022530:	lea    edx,[r9-0x77]
   140022534:	lea    r8,[rsp+0x20]
   140022539:	bts    ecx,0xa
   14002253d:	call   QWORD PTR [rip+0x13dd5]        # 0x140036318
   140022543:	xor    ebx,ebx
   140022545:	cmp    eax,ebx
   140022547:	jne    0x14002254d
   140022549:	xor    eax,eax
   14002254b:	jmp    0x14002258c
   14002254d:	lea    rcx,[rsp+0x20]
   140022552:	call   0x1400223d8
   140022557:	cmp    esi,eax
   140022559:	je     0x140022587
   14002255b:	cmp    edi,ebx
   14002255d:	je     0x140022587
   14002255f:	mov    rcx,QWORD PTR [rbp+0x0]
   140022563:	mov    al,BYTE PTR [rcx]
   140022565:	inc    rcx
   140022568:	cmp    al,0x41
   14002256a:	jl     0x140022570
   14002256c:	cmp    al,0x5a
   14002256e:	jle    0x140022576
   140022570:	sub    al,0x61
   140022572:	cmp    al,0x19
   140022574:	ja     0x14002257a
   140022576:	inc    ebx
   140022578:	jmp    0x140022563
   14002257a:	mov    rcx,QWORD PTR [rbp+0x0]
   14002257e:	call   0x140015c00
   140022583:	cmp    ebx,eax
   140022585:	je     0x140022549
   140022587:	mov    eax,0x1
   14002258c:	mov    rcx,QWORD PTR [rsp+0xa0]
   140022594:	xor    rcx,rsp
   140022597:	call   0x1400144f0
   14002259c:	mov    rbx,QWORD PTR [rsp+0xd8]
   1400225a4:	add    rsp,0xb0
   1400225ab:	pop    rdi
   1400225ac:	pop    rsi
   1400225ad:	pop    rbp
   1400225ae:	ret    
   1400225af:	int3   
   1400225b0:	mov    QWORD PTR [rsp+0x10],rbx
   1400225b5:	mov    QWORD PTR [rsp+0x18],rbp
   1400225ba:	push   rdi
   1400225bb:	sub    rsp,0xb0
   1400225c2:	mov    rax,QWORD PTR [rip+0x267f7]        # 0x140048dc0
   1400225c9:	xor    rax,rsp
   1400225cc:	mov    QWORD PTR [rsp+0xa0],rax
   1400225d4:	mov    rbx,rcx
   1400225d7:	call   0x140017714
   1400225dc:	mov    rcx,rbx
   1400225df:	mov    rdi,rax
   1400225e2:	call   0x1400223d8
   1400225e7:	mov    ecx,DWORD PTR [rdi+0x15c]
   1400225ed:	neg    ecx
   1400225ef:	lea    r8,[rsp+0x20]
   1400225f4:	mov    r9d,0x78
   1400225fa:	sbb    edx,edx
   1400225fc:	mov    ecx,eax
   1400225fe:	mov    ebx,eax
   140022600:	and    edx,0xfffff005
   140022606:	add    edx,0x1002
   14002260c:	call   QWORD PTR [rip+0x13d06]        # 0x140036318
   140022612:	xor    ebp,ebp
   140022614:	cmp    eax,ebp
   140022616:	jne    0x140022628
   140022618:	mov    DWORD PTR [rdi+0x150],ebp
   14002261e:	mov    eax,0x1
   140022623:	jmp    0x14002281d
   140022628:	mov    rcx,QWORD PTR [rdi+0x148]
   14002262f:	lea    rdx,[rsp+0x20]
   140022634:	call   0x140025394
   140022639:	cmp    eax,ebp
   14002263b:	jne    0x140022720
   140022641:	mov    eax,DWORD PTR [rdi+0x158]
   140022647:	lea    r8,[rsp+0x20]
   14002264c:	mov    r9d,0x78
   140022652:	neg    eax
   140022654:	mov    ecx,ebx
   140022656:	sbb    edx,edx
   140022658:	and    edx,0xfffff002
   14002265e:	add    edx,0x1001
   140022664:	call   QWORD PTR [rip+0x13cae]        # 0x140036318
   14002266a:	cmp    eax,ebp
   14002266c:	je     0x140022618
   14002266e:	mov    rcx,QWORD PTR [rdi+0x140]
   140022675:	lea    rdx,[rsp+0x20]
   14002267a:	call   0x140025394
   14002267f:	cmp    eax,ebp
   140022681:	jne    0x140022698
   140022683:	or     DWORD PTR [rdi+0x150],0x304
   14002268d:	mov    DWORD PTR [rdi+0x160],ebx
   140022693:	jmp    0x14002271a
   140022698:	test   BYTE PTR [rdi+0x150],0x2
   14002269f:	jne    0x140022720
   1400226a1:	cmp    DWORD PTR [rdi+0x154],ebp
   1400226a7:	je     0x1400226ee
   1400226a9:	movsxd r8,DWORD PTR [rdi+0x154]
   1400226b0:	mov    rcx,QWORD PTR [rdi+0x140]
   1400226b7:	lea    rdx,[rsp+0x20]
   1400226bc:	call   0x140025544
   1400226c1:	cmp    eax,ebp
   1400226c3:	jne    0x1400226ee
   1400226c5:	mov    rcx,QWORD PTR [rdi+0x140]
   1400226cc:	or     DWORD PTR [rdi+0x150],0x2
   1400226d3:	mov    DWORD PTR [rdi+0x164],ebx
   1400226d9:	call   0x140015c00
   1400226de:	cmp    eax,DWORD PTR [rdi+0x154]
   1400226e4:	jne    0x140022720
   1400226e6:	mov    DWORD PTR [rdi+0x160],ebx
   1400226ec:	jmp    0x140022720
   1400226ee:	mov    eax,DWORD PTR [rdi+0x150]
   1400226f4:	test   al,0x1
   1400226f6:	jne    0x140022720
   1400226f8:	mov    edx,ebp
   1400226fa:	lea    rcx,[rip+0x195df]        # 0x14003bce0
   140022701:	cmp    bx,WORD PTR [rcx]
   140022704:	je     0x140022720
   140022706:	inc    edx
   140022708:	add    rcx,0x2
   14002270c:	cmp    edx,0xa
   14002270f:	jb     0x140022701
   140022711:	or     eax,0x1
   140022714:	mov    DWORD PTR [rdi+0x150],eax
   14002271a:	mov    DWORD PTR [rdi+0x164],ebx
   140022720:	mov    eax,DWORD PTR [rdi+0x150]
   140022726:	mov    ecx,0x300
   14002272b:	and    eax,ecx
   14002272d:	cmp    eax,ecx
   14002272f:	je     0x14002280f
   140022735:	mov    eax,DWORD PTR [rdi+0x158]
   14002273b:	lea    r8,[rsp+0x20]
   140022740:	mov    r9d,0x78
   140022746:	neg    eax
   140022748:	mov    ecx,ebx
   14002274a:	sbb    edx,edx
   14002274c:	and    edx,0xfffff002
   140022752:	add    edx,0x1001
   140022758:	call   QWORD PTR [rip+0x13bba]        # 0x140036318
   14002275e:	cmp    eax,ebp
   140022760:	je     0x140022618
   140022766:	mov    rcx,QWORD PTR [rdi+0x140]
   14002276d:	lea    rdx,[rsp+0x20]
   140022772:	call   0x140025394
   140022777:	cmp    eax,ebp
   140022779:	jne    0x1400227c0
   14002277b:	bts    DWORD PTR [rdi+0x150],0x9
   140022783:	mov    eax,DWORD PTR [rdi+0x150]
   140022789:	cmp    DWORD PTR [rdi+0x158],ebp
   14002278f:	je     0x14002279d
   140022791:	bts    eax,0x8
   140022795:	mov    DWORD PTR [rdi+0x150],eax
   14002279b:	jmp    0x140022801
   14002279d:	cmp    DWORD PTR [rdi+0x154],ebp
   1400227a3:	je     0x1400227f9
   1400227a5:	mov    rcx,QWORD PTR [rdi+0x140]
   1400227ac:	call   0x140015c00
   1400227b1:	cmp    eax,DWORD PTR [rdi+0x154]
   1400227b7:	jne    0x1400227f9
   1400227b9:	mov    edx,0x1
   1400227be:	jmp    0x1400227e7
   1400227c0:	cmp    DWORD PTR [rdi+0x158],ebp
   1400227c6:	jne    0x14002280f
   1400227c8:	cmp    DWORD PTR [rdi+0x154],ebp
   1400227ce:	je     0x14002280f
   1400227d0:	mov    rcx,QWORD PTR [rdi+0x140]
   1400227d7:	lea    rdx,[rsp+0x20]
   1400227dc:	call   0x140025394
   1400227e1:	cmp    eax,ebp
   1400227e3:	jne    0x14002280f
   1400227e5:	xor    edx,edx
   1400227e7:	lea    r8,[rdi+0x140]
   1400227ee:	mov    ecx,ebx
   1400227f0:	call   0x1400224fc
   1400227f5:	cmp    eax,ebp
   1400227f7:	je     0x14002280f
   1400227f9:	bts    DWORD PTR [rdi+0x150],0x8
   140022801:	cmp    DWORD PTR [rdi+0x160],ebp
   140022807:	jne    0x14002280f
   140022809:	mov    DWORD PTR [rdi+0x160],ebx
   14002280f:	mov    eax,DWORD PTR [rdi+0x150]
   140022815:	shr    eax,0x2
   140022818:	not    eax
   14002281a:	and    eax,0x1
   14002281d:	mov    rcx,QWORD PTR [rsp+0xa0]
   140022825:	xor    rcx,rsp
   140022828:	call   0x1400144f0
   14002282d:	lea    r11,[rsp+0xb0]
   140022835:	mov    rbx,QWORD PTR [r11+0x18]
   140022839:	mov    rbp,QWORD PTR [r11+0x20]
   14002283d:	mov    rsp,r11
   140022840:	pop    rdi
   140022841:	ret    
   140022842:	int3   
   140022843:	int3   
   140022844:	mov    QWORD PTR [rsp+0x10],rbx
   140022849:	push   rdi
   14002284a:	sub    rsp,0xb0
   140022851:	mov    rax,QWORD PTR [rip+0x26568]        # 0x140048dc0
   140022858:	xor    rax,rsp
   14002285b:	mov    QWORD PTR [rsp+0xa0],rax
   140022863:	mov    rbx,rcx
   140022866:	call   0x140017714
   14002286b:	mov    rcx,rbx
   14002286e:	mov    rdi,rax
   140022871:	call   0x1400223d8
   140022876:	mov    ecx,DWORD PTR [rdi+0x158]
   14002287c:	neg    ecx
   14002287e:	lea    r8,[rsp+0x20]
   140022883:	mov    r9d,0x78
   140022889:	sbb    edx,edx
   14002288b:	mov    ecx,eax
   14002288d:	mov    ebx,eax
   14002288f:	and    edx,0xfffff002
   140022895:	add    edx,0x1001
   14002289b:	call   QWORD PTR [rip+0x13a77]        # 0x140036318
   1400228a1:	test   eax,eax
   1400228a3:	jne    0x1400228b2
   1400228a5:	and    DWORD PTR [rdi+0x150],eax
   1400228ab:	mov    eax,0x1
   1400228b0:	jmp    0x140022930
   1400228b2:	mov    rcx,QWORD PTR [rdi+0x140]
   1400228b9:	lea    rdx,[rsp+0x20]
   1400228be:	call   0x140025394
   1400228c3:	test   eax,eax
   1400228c5:	jne    0x1400228d4
   1400228c7:	cmp    DWORD PTR [rdi+0x158],eax
   1400228cd:	jne    0x14002290f
   1400228cf:	lea    edx,[rax+0x1]
   1400228d2:	jmp    0x1400228fd
   1400228d4:	cmp    DWORD PTR [rdi+0x158],0x0
   1400228db:	jne    0x140022922
   1400228dd:	cmp    DWORD PTR [rdi+0x154],0x0
   1400228e4:	je     0x140022922
   1400228e6:	mov    rcx,QWORD PTR [rdi+0x140]
   1400228ed:	lea    rdx,[rsp+0x20]
   1400228f2:	call   0x140025394
   1400228f7:	test   eax,eax
   1400228f9:	jne    0x140022922
   1400228fb:	xor    edx,edx
   1400228fd:	lea    r8,[rdi+0x140]
   140022904:	mov    ecx,ebx
   140022906:	call   0x1400224fc
   14002290b:	test   eax,eax
   14002290d:	je     0x140022922
   14002290f:	or     DWORD PTR [rdi+0x150],0x4
   140022916:	mov    DWORD PTR [rdi+0x160],ebx
   14002291c:	mov    DWORD PTR [rdi+0x164],ebx
   140022922:	mov    eax,DWORD PTR [rdi+0x150]
   140022928:	shr    eax,0x2
   14002292b:	not    eax
   14002292d:	and    eax,0x1
   140022930:	mov    rcx,QWORD PTR [rsp+0xa0]
   140022938:	xor    rcx,rsp
   14002293b:	call   0x1400144f0
   140022940:	mov    rbx,QWORD PTR [rsp+0xc8]
   140022948:	add    rsp,0xb0
   14002294f:	pop    rdi
   140022950:	ret    
   140022951:	int3   
   140022952:	int3   
   140022953:	int3   
   140022954:	rex push rbx
   140022956:	sub    rsp,0x20
   14002295a:	mov    rbx,rcx
   14002295d:	mov    rcx,QWORD PTR [rcx]
   140022960:	call   0x140015c00
   140022965:	mov    rcx,QWORD PTR [rbx+0x8]
   140022969:	xor    edx,edx
   14002296b:	cmp    rax,0x3
   14002296f:	sete   dl
   140022972:	mov    DWORD PTR [rbx+0x18],edx
   140022975:	call   0x140015c00
   14002297a:	xor    ecx,ecx
   14002297c:	cmp    rax,0x3
   140022980:	sete   cl
   140022983:	and    DWORD PTR [rbx+0x20],0x0
   140022987:	cmp    DWORD PTR [rbx+0x18],0x0
   14002298b:	mov    DWORD PTR [rbx+0x1c],ecx
   14002298e:	je     0x1400229c8
   140022990:	mov    edx,0x2
   140022995:	mov    DWORD PTR [rbx+0x14],edx
   140022998:	lea    rcx,[rip+0xfffffffffffffc11]        # 0x1400225b0
   14002299f:	mov    edx,0x1
   1400229a4:	call   QWORD PTR [rip+0x138be]        # 0x140036268
   1400229aa:	bt     DWORD PTR [rbx+0x10],0x8
   1400229af:	jae    0x1400229be
   1400229b1:	bt     DWORD PTR [rbx+0x10],0x9
   1400229b6:	jae    0x1400229be
   1400229b8:	test   BYTE PTR [rbx+0x10],0x7
   1400229bc:	jne    0x1400229c2
   1400229be:	and    DWORD PTR [rbx+0x10],0x0
   1400229c2:	add    rsp,0x20
   1400229c6:	pop    rbx
   1400229c7:	ret    
   1400229c8:	mov    rax,QWORD PTR [rbx]
   1400229cb:	xor    edx,edx
   1400229cd:	mov    cl,BYTE PTR [rax]
   1400229cf:	inc    rax
   1400229d2:	cmp    cl,0x41
   1400229d5:	jl     0x1400229dc
   1400229d7:	cmp    cl,0x5a
   1400229da:	jle    0x1400229e4
   1400229dc:	sub    cl,0x61
   1400229df:	cmp    cl,0x19
   1400229e2:	ja     0x140022995
   1400229e4:	inc    edx
   1400229e6:	jmp    0x1400229cd
   1400229e8:	rex push rbx
   1400229ea:	sub    rsp,0x20
   1400229ee:	mov    rbx,rcx
   1400229f1:	mov    rcx,QWORD PTR [rcx]
   1400229f4:	call   0x140015c00
   1400229f9:	xor    edx,edx
   1400229fb:	cmp    rax,0x3
   1400229ff:	sete   dl
   140022a02:	mov    DWORD PTR [rbx+0x18],edx
   140022a05:	test   edx,edx
   140022a07:	je     0x140022a33
   140022a09:	mov    edx,0x2
   140022a0e:	mov    DWORD PTR [rbx+0x14],edx
   140022a11:	lea    rcx,[rip+0xfffffffffffffe2c]        # 0x140022844
   140022a18:	mov    edx,0x1
   140022a1d:	call   QWORD PTR [rip+0x13845]        # 0x140036268
   140022a23:	test   BYTE PTR [rbx+0x10],0x4
   140022a27:	jne    0x140022a2d
   140022a29:	and    DWORD PTR [rbx+0x10],0x0
   140022a2d:	add    rsp,0x20
   140022a31:	pop    rbx
   140022a32:	ret    
   140022a33:	mov    rax,QWORD PTR [rbx]
   140022a36:	xor    edx,edx
   140022a38:	mov    cl,BYTE PTR [rax]
   140022a3a:	inc    rax
   140022a3d:	cmp    cl,0x41
   140022a40:	jl     0x140022a47
   140022a42:	cmp    cl,0x5a
   140022a45:	jle    0x140022a4f
   140022a47:	sub    cl,0x61
   140022a4a:	cmp    cl,0x19
   140022a4d:	ja     0x140022a0e
   140022a4f:	inc    edx
   140022a51:	jmp    0x140022a38
   140022a53:	int3   
   140022a54:	mov    rax,rsp
   140022a57:	mov    QWORD PTR [rax+0x8],rbx
   140022a5b:	mov    QWORD PTR [rax+0x10],rbp
   140022a5f:	mov    QWORD PTR [rax+0x18],rsi
   140022a63:	mov    QWORD PTR [rax+0x20],rdi
   140022a67:	push   r12
   140022a69:	sub    rsp,0x30
   140022a6d:	mov    r12,r8
   140022a70:	mov    rbp,rdx
   140022a73:	mov    rsi,rcx
   140022a76:	call   0x140017714
   140022a7b:	lea    rbx,[rax+0x140]
   140022a82:	test   rsi,rsi
   140022a85:	jne    0x140022a93
   140022a87:	or     DWORD PTR [rbx+0x10],0x104
   140022a8e:	jmp    0x140022b76
   140022a93:	lea    rax,[rsi+0x40]
   140022a97:	mov    QWORD PTR [rbx],rsi
   140022a9a:	mov    QWORD PTR [rbx+0x8],rax
   140022a9e:	test   rax,rax
   140022aa1:	je     0x140022abd
   140022aa3:	cmp    BYTE PTR [rax],0x0
   140022aa6:	je     0x140022abd
   140022aa8:	lea    r8,[rbx+0x8]
   140022aac:	lea    rcx,[rip+0x190bd]        # 0x14003bb70
   140022ab3:	mov    edx,0x16
   140022ab8:	call   0x140022278
   140022abd:	mov    rax,QWORD PTR [rbx]
   140022ac0:	and    DWORD PTR [rbx+0x10],0x0
   140022ac4:	test   rax,rax
   140022ac7:	je     0x140022b32
   140022ac9:	cmp    BYTE PTR [rax],0x0
   140022acc:	je     0x140022b32
   140022ace:	mov    rax,QWORD PTR [rbx+0x8]
   140022ad2:	test   rax,rax
   140022ad5:	je     0x140022ae6
   140022ad7:	cmp    BYTE PTR [rax],0x0
   140022ada:	je     0x140022ae6
   140022adc:	mov    rcx,rbx
   140022adf:	call   0x140022954
   140022ae4:	jmp    0x140022aee
   140022ae6:	mov    rcx,rbx
   140022ae9:	call   0x1400229e8
   140022aee:	cmp    DWORD PTR [rbx+0x10],0x0
   140022af2:	jne    0x140022b8c
   140022af8:	lea    rcx,[rip+0x18c61]        # 0x14003b760
   140022aff:	mov    r8,rbx
   140022b02:	mov    edx,0x40
   140022b07:	call   0x140022278
   140022b0c:	test   eax,eax
   140022b0e:	je     0x140022b82
   140022b10:	mov    rax,QWORD PTR [rbx+0x8]
   140022b14:	test   rax,rax
   140022b17:	je     0x140022b28
   140022b19:	cmp    BYTE PTR [rax],0x0
   140022b1c:	je     0x140022b28
   140022b1e:	mov    rcx,rbx
   140022b21:	call   0x140022954
   140022b26:	jmp    0x140022b82
   140022b28:	mov    rcx,rbx
   140022b2b:	call   0x1400229e8
   140022b30:	jmp    0x140022b82
   140022b32:	mov    rcx,QWORD PTR [rbx+0x8]
   140022b36:	test   rcx,rcx
   140022b39:	je     0x140022b6f
   140022b3b:	cmp    BYTE PTR [rcx],0x0
   140022b3e:	je     0x140022b6f
   140022b40:	call   0x140015c00
   140022b45:	xor    ecx,ecx
   140022b47:	mov    edx,0x1
   140022b4c:	cmp    rax,0x3
   140022b50:	sete   cl
   140022b53:	mov    DWORD PTR [rbx+0x1c],ecx
   140022b56:	lea    rcx,[rip+0xfffffffffffff8b7]        # 0x140022414
   140022b5d:	call   QWORD PTR [rip+0x13705]        # 0x140036268
   140022b63:	test   BYTE PTR [rbx+0x10],0x4
   140022b67:	jne    0x140022b82
   140022b69:	and    DWORD PTR [rbx+0x10],0x0
   140022b6d:	jmp    0x140022b82
   140022b6f:	mov    DWORD PTR [rbx+0x10],0x104
   140022b76:	call   QWORD PTR [rip+0x136e4]        # 0x140036260
   140022b7c:	mov    DWORD PTR [rbx+0x20],eax
   140022b7f:	mov    DWORD PTR [rbx+0x24],eax
   140022b82:	cmp    DWORD PTR [rbx+0x10],0x0
   140022b86:	je     0x140022c9f
   140022b8c:	lea    rax,[rsi+0x80]
   140022b93:	neg    rsi
   140022b96:	mov    rdx,rbx
   140022b99:	sbb    rcx,rcx
   140022b9c:	and    rcx,rax
   140022b9f:	call   0x140022310
   140022ba4:	mov    edi,eax
   140022ba6:	test   eax,eax
   140022ba8:	je     0x140022c9f
   140022bae:	cmp    eax,0xfde8
   140022bb3:	je     0x140022c9f
   140022bb9:	cmp    eax,0xfde9
   140022bbe:	je     0x140022c9f
   140022bc4:	movzx  ecx,ax
   140022bc7:	call   QWORD PTR [rip+0x135fb]        # 0x1400361c8
   140022bcd:	test   eax,eax
   140022bcf:	je     0x140022c9f
   140022bd5:	mov    ecx,DWORD PTR [rbx+0x20]
   140022bd8:	mov    edx,0x1
   140022bdd:	call   QWORD PTR [rip+0x1368d]        # 0x140036270
   140022be3:	test   eax,eax
   140022be5:	je     0x140022c9f
   140022beb:	test   rbp,rbp
   140022bee:	je     0x140022c04
   140022bf0:	movzx  eax,WORD PTR [rbx+0x20]
   140022bf4:	mov    WORD PTR [rbp+0x0],ax
   140022bf8:	movzx  eax,WORD PTR [rbx+0x24]
   140022bfc:	mov    WORD PTR [rbp+0x4],di
   140022c00:	mov    WORD PTR [rbp+0x2],ax
   140022c04:	test   r12,r12
   140022c07:	je     0x140022c98
   140022c0d:	mov    eax,0x814
   140022c12:	cmp    WORD PTR [rbp+0x0],ax
   140022c16:	jne    0x140022c47
   140022c18:	lea    r8,[rip+0x190e1]        # 0x14003bd00
   140022c1f:	mov    edx,0x40
   140022c24:	mov    rcx,r12
   140022c27:	call   0x1400164d8
   140022c2c:	test   eax,eax
   140022c2e:	je     0x140022c62
   140022c30:	and    QWORD PTR [rsp+0x20],0x0
   140022c36:	xor    r9d,r9d
   140022c39:	xor    r8d,r8d
   140022c3c:	xor    edx,edx
   140022c3e:	xor    ecx,ecx
   140022c40:	call   0x140014880
   140022c45:	jmp    0x140022c62
   140022c47:	mov    ecx,DWORD PTR [rbx+0x20]
   140022c4a:	mov    r9d,0x40
   140022c50:	mov    r8,r12
   140022c53:	mov    edx,0x1001
   140022c58:	call   QWORD PTR [rip+0x136ba]        # 0x140036318
   140022c5e:	test   eax,eax
   140022c60:	je     0x140022c9f
   140022c62:	mov    ecx,DWORD PTR [rbx+0x24]
   140022c65:	lea    r8,[r12+0x40]
   140022c6a:	mov    edx,0x1002
   140022c6f:	mov    r9d,0x40
   140022c75:	call   QWORD PTR [rip+0x1369d]        # 0x140036318
   140022c7b:	test   eax,eax
   140022c7d:	je     0x140022c9f
   140022c7f:	mov    r9d,0xa
   140022c85:	lea    rdx,[r12+0x80]
   140022c8d:	mov    ecx,edi
   140022c8f:	lea    r8d,[r9+0x6]
   140022c93:	call   0x140016650
   140022c98:	mov    eax,0x1
   140022c9d:	jmp    0x140022ca1
   140022c9f:	xor    eax,eax
   140022ca1:	mov    rbx,QWORD PTR [rsp+0x40]
   140022ca6:	mov    rbp,QWORD PTR [rsp+0x48]
   140022cab:	mov    rsi,QWORD PTR [rsp+0x50]
   140022cb0:	mov    rdi,QWORD PTR [rsp+0x58]
   140022cb5:	add    rsp,0x30
   140022cb9:	pop    r12
   140022cbb:	ret    
   140022cbc:	int3   
   140022cbd:	int3   
   140022cbe:	int3   
   140022cbf:	int3   
   140022cc0:	int3   
   140022cc1:	int3   
   140022cc2:	int3   
   140022cc3:	int3   
   140022cc4:	int3   
   140022cc5:	int3   
   140022cc6:	data16 nop WORD PTR [rax+rax*1+0x0]
   140022cd0:	test   r8,r8
   140022cd3:	je     0x140022d4a
   140022cd5:	sub    rdx,rcx
   140022cd8:	mov    r9,rdx
   140022cdb:	movabs r11,0x8101010101010100
   140022ce5:	test   cl,0x7
   140022ce8:	je     0x140022d09
   140022cea:	mov    al,BYTE PTR [rcx]
   140022cec:	mov    dl,BYTE PTR [rcx+r9*1]
   140022cf0:	inc    rcx
   140022cf3:	cmp    al,dl
   140022cf5:	jne    0x140022d4e
   140022cf7:	dec    r8
   140022cfa:	je     0x140022d4a
   140022cfc:	test   al,al
   140022cfe:	je     0x140022d4a
   140022d00:	test   rcx,0x7
   140022d07:	jne    0x140022cea
   140022d09:	lea    rdx,[rcx+r9*1]
   140022d0d:	and    dx,0xfff
   140022d12:	cmp    dx,0xff8
   140022d17:	ja     0x140022cea
   140022d19:	mov    rax,QWORD PTR [rcx]
   140022d1c:	mov    rdx,QWORD PTR [rcx+r9*1]
   140022d20:	cmp    rax,rdx
   140022d23:	jne    0x140022cea
   140022d25:	add    rcx,0x8
   140022d29:	sub    r8,0x8
   140022d2d:	movabs r10,0x7efefefefefefeff
   140022d37:	jbe    0x140022d4a
   140022d39:	xor    rax,0xffffffffffffffff
   140022d3d:	add    r10,rdx
   140022d40:	xor    rax,r10
   140022d43:	test   r11,rax
   140022d46:	je     0x140022d09
   140022d48:	jmp    0x140022d56
   140022d4a:	xor    rax,rax
   140022d4d:	ret    
   140022d4e:	sbb    rax,rax
   140022d51:	sbb    rax,0xffffffffffffffff
   140022d55:	ret    
   140022d56:	test   dl,dl
   140022d58:	je     0x140022d81
   140022d5a:	test   dh,dh
   140022d5c:	je     0x140022d81
   140022d5e:	shr    rdx,0x10
   140022d62:	test   dl,dl
   140022d64:	je     0x140022d81
   140022d66:	test   dh,dh
   140022d68:	je     0x140022d81
   140022d6a:	shr    rdx,0x10
   140022d6e:	test   dl,dl
   140022d70:	je     0x140022d81
   140022d72:	test   dh,dh
   140022d74:	je     0x140022d81
   140022d76:	shr    edx,0x10
   140022d79:	test   dl,dl
   140022d7b:	je     0x140022d81
   140022d7d:	test   dh,dh
   140022d7f:	jne    0x140022d09
   140022d81:	xor    rax,rax
   140022d84:	ret    
   140022d85:	int3   
   140022d86:	int3   
   140022d87:	int3   
   140022d88:	sub    rsp,0x38
   140022d8c:	mov    rax,QWORD PTR [rip+0x2602d]        # 0x140048dc0
   140022d93:	xor    rax,rsp
   140022d96:	mov    QWORD PTR [rsp+0x20],rax
   140022d9b:	mov    al,BYTE PTR [rdx]
   140022d9d:	xor    r11d,r11d
   140022da0:	mov    r10,rdx
   140022da3:	mov    QWORD PTR [rsp],r11
   140022da7:	mov    QWORD PTR [rsp+0x8],r11
   140022dac:	mov    QWORD PTR [rsp+0x10],r11
   140022db1:	mov    QWORD PTR [rsp+0x18],r11
   140022db6:	mov    r9,rcx
   140022db9:	jmp    0x140022ddc
   140022dbb:	movzx  r8d,al
   140022dbf:	movzx  eax,al
   140022dc2:	mov    edx,0x1
   140022dc7:	and    eax,0x7
   140022dca:	shr    r8,0x3
   140022dce:	mov    cl,al
   140022dd0:	shl    dl,cl
   140022dd2:	or     BYTE PTR [rsp+r8*1],dl
   140022dd6:	inc    r10
   140022dd9:	mov    al,BYTE PTR [r10]
   140022ddc:	cmp    al,r11b
   140022ddf:	jne    0x140022dbb
   140022de1:	jmp    0x140022e01
   140022de3:	movzx  ecx,r8b
   140022de7:	movzx  eax,r8b
   140022deb:	mov    edx,0x1
   140022df0:	and    ecx,0x7
   140022df3:	shr    rax,0x3
   140022df7:	shl    edx,cl
   140022df9:	test   BYTE PTR [rsp+rax*1],dl
   140022dfc:	jne    0x140022e1d
   140022dfe:	inc    r9
   140022e01:	mov    r8b,BYTE PTR [r9]
   140022e04:	cmp    r8b,r11b
   140022e07:	jne    0x140022de3
   140022e09:	xor    eax,eax
   140022e0b:	mov    rcx,QWORD PTR [rsp+0x20]
   140022e10:	xor    rcx,rsp
   140022e13:	call   0x1400144f0
   140022e18:	add    rsp,0x38
   140022e1c:	ret    
   140022e1d:	mov    rax,r9
   140022e20:	jmp    0x140022e0b
   140022e22:	int3   
   140022e23:	int3   
   140022e24:	sub    rsp,0x38
   140022e28:	mov    rax,QWORD PTR [rip+0x25f91]        # 0x140048dc0
   140022e2f:	xor    rax,rsp
   140022e32:	mov    QWORD PTR [rsp+0x28],rax
   140022e37:	lea    r8,[rsp+0x20]
   140022e3c:	mov    r9d,0x6
   140022e42:	mov    edx,0x1004
   140022e47:	mov    BYTE PTR [rsp+0x26],0x0
   140022e4c:	call   QWORD PTR [rip+0x134c6]        # 0x140036318
   140022e52:	test   eax,eax
   140022e54:	jne    0x140022e5b
   140022e56:	or     eax,0xffffffff
   140022e59:	jmp    0x140022e65
   140022e5b:	lea    rcx,[rsp+0x20]
   140022e60:	call   0x140016de8
   140022e65:	mov    rcx,QWORD PTR [rsp+0x28]
   140022e6a:	xor    rcx,rsp
   140022e6d:	call   0x1400144f0
   140022e72:	add    rsp,0x38
   140022e76:	ret    
   140022e77:	int3   
   140022e78:	rex push rbp
   140022e7a:	push   rbx
   140022e7b:	push   rsi
   140022e7c:	push   rdi
   140022e7d:	push   r12
   140022e7f:	push   r13
   140022e81:	push   r14
   140022e83:	push   r15
   140022e85:	sub    rsp,0x88
   140022e8c:	lea    rbp,[rsp+0x40]
   140022e91:	mov    rax,QWORD PTR [rip+0x25f28]        # 0x140048dc0
   140022e98:	xor    rax,rbp
   140022e9b:	mov    QWORD PTR [rbp+0x30],rax
   140022e9f:	mov    r14,QWORD PTR [rbp+0xb0]
   140022ea6:	mov    r12d,DWORD PTR [r9]
   140022ea9:	xor    edi,edi
   140022eab:	mov    rbx,r8
   140022eae:	mov    rsi,rdi
   140022eb1:	mov    DWORD PTR [rbp+0x0],edi
   140022eb4:	mov    QWORD PTR [rbp+0x10],r9
   140022eb8:	mov    r13d,edx
   140022ebb:	mov    r15d,ecx
   140022ebe:	mov    QWORD PTR [rbp+0x8],rbx
   140022ec2:	cmp    ecx,edx
   140022ec4:	je     0x1400230dd
   140022eca:	lea    rdx,[rbp+0x18]
   140022ece:	call   QWORD PTR [rip+0x1343c]        # 0x140036310
   140022ed4:	cmp    eax,edi
   140022ed6:	je     0x140022f7b
   140022edc:	cmp    DWORD PTR [rbp+0x18],0x1
   140022ee0:	jne    0x140022f7b
   140022ee6:	lea    rdx,[rbp+0x18]
   140022eea:	mov    ecx,r13d
   140022eed:	call   QWORD PTR [rip+0x1341d]        # 0x140036310
   140022ef3:	cmp    eax,edi
   140022ef5:	je     0x140022f7b
   140022efb:	cmp    DWORD PTR [rbp+0x18],0x1
   140022eff:	jne    0x140022f7b
   140022f01:	mov    DWORD PTR [rbp+0x0],0x1
   140022f08:	cmp    r12d,0xffffffff
   140022f0c:	je     0x140022f6e
   140022f0e:	mov    edi,r12d
   140022f11:	test   edi,edi
   140022f13:	jle    0x140022fc2
   140022f19:	movsxd rcx,edi
   140022f1c:	movabs rax,0x7ffffffffffffff0
   140022f26:	cmp    rcx,rax
   140022f29:	ja     0x140022fc2
   140022f2f:	lea    rcx,[rcx+rcx*1+0x10]
   140022f34:	cmp    rcx,0x400
   140022f3b:	ja     0x140022fa9
   140022f3d:	lea    rax,[rcx+0xf]
   140022f41:	cmp    rax,rcx
   140022f44:	ja     0x140022f50
   140022f46:	movabs rax,0xffffffffffffff0
   140022f50:	and    rax,0xfffffffffffffff0
   140022f54:	call   0x1400329e0
   140022f59:	sub    rsp,rax
   140022f5c:	lea    rbx,[rsp+0x40]
   140022f61:	test   rbx,rbx
   140022f64:	je     0x140022fa2
   140022f66:	mov    DWORD PTR [rbx],0xcccc
   140022f6c:	jmp    0x140022fbc
   140022f6e:	mov    rcx,rbx
   140022f71:	call   0x140015c00
   140022f76:	lea    edi,[rax+0x1]
   140022f79:	jmp    0x140022f11
   140022f7b:	mov    r9d,r12d
   140022f7e:	mov    r8,rbx
   140022f81:	mov    edx,0x1
   140022f86:	mov    ecx,r15d
   140022f89:	mov    DWORD PTR [rsp+0x28],edi
   140022f8d:	mov    QWORD PTR [rsp+0x20],rdi
   140022f92:	call   QWORD PTR [rip+0x13418]        # 0x1400363b0
   140022f98:	mov    edi,eax
   140022f9a:	test   eax,eax
   140022f9c:	jne    0x140022f11
   140022fa2:	xor    eax,eax
   140022fa4:	jmp    0x1400230e0
   140022fa9:	call   0x140014f50
   140022fae:	mov    rbx,rax
   140022fb1:	test   rax,rax
   140022fb4:	je     0x140022fc4
   140022fb6:	mov    DWORD PTR [rax],0xdddd
   140022fbc:	add    rbx,0x10
   140022fc0:	jmp    0x140022fc4
   140022fc2:	xor    ebx,ebx
   140022fc4:	test   rbx,rbx
   140022fc7:	je     0x140022fa2
   140022fc9:	movsxd r8,edi
   140022fcc:	xor    edx,edx
   140022fce:	mov    rcx,rbx
   140022fd1:	add    r8,r8
   140022fd4:	call   0x140015b00
   140022fd9:	mov    r8,QWORD PTR [rbp+0x8]
   140022fdd:	mov    r9d,r12d
   140022fe0:	mov    edx,0x1
   140022fe5:	mov    ecx,r15d
   140022fe8:	mov    DWORD PTR [rsp+0x28],edi
   140022fec:	mov    QWORD PTR [rsp+0x20],rbx
   140022ff1:	call   QWORD PTR [rip+0x133b9]        # 0x1400363b0
   140022ff7:	xor    r15d,r15d
   140022ffa:	cmp    eax,r15d
   140022ffd:	je     0x1400230cc
   140023003:	cmp    r14,r15
   140023006:	je     0x140023043
   140023008:	mov    eax,DWORD PTR [rbp+0xb8]
   14002300e:	mov    QWORD PTR [rsp+0x38],r15
   140023013:	mov    QWORD PTR [rsp+0x30],r15
   140023018:	mov    DWORD PTR [rsp+0x28],eax
   14002301c:	mov    r9d,edi
   14002301f:	mov    r8,rbx
   140023022:	xor    edx,edx
   140023024:	mov    ecx,r13d
   140023027:	mov    QWORD PTR [rsp+0x20],r14
   14002302c:	call   QWORD PTR [rip+0x13396]        # 0x1400363c8
   140023032:	cmp    eax,r15d
   140023035:	je     0x1400230cc
   14002303b:	mov    rsi,r14
   14002303e:	jmp    0x1400230cc
   140023043:	cmp    DWORD PTR [rbp+0x0],r15d
   140023047:	jne    0x140023075
   140023049:	mov    QWORD PTR [rsp+0x38],r15
   14002304e:	mov    QWORD PTR [rsp+0x30],r15
   140023053:	mov    r9d,edi
   140023056:	mov    r8,rbx
   140023059:	xor    edx,edx
   14002305b:	mov    ecx,r13d
   14002305e:	mov    DWORD PTR [rsp+0x28],r15d
   140023063:	mov    QWORD PTR [rsp+0x20],r15
   140023068:	call   QWORD PTR [rip+0x1335a]        # 0x1400363c8
   14002306e:	mov    edi,eax
   140023070:	cmp    eax,r15d
   140023073:	je     0x1400230cc
   140023075:	movsxd rdx,edi
   140023078:	mov    ecx,0x1
   14002307d:	call   0x14001c490
   140023082:	mov    rsi,rax
   140023085:	cmp    rax,r15
   140023088:	je     0x1400230cc
   14002308a:	mov    QWORD PTR [rsp+0x38],r15
   14002308f:	mov    QWORD PTR [rsp+0x30],r15
   140023094:	mov    r9d,edi
   140023097:	mov    r8,rbx
   14002309a:	xor    edx,edx
   14002309c:	mov    ecx,r13d
   14002309f:	mov    DWORD PTR [rsp+0x28],edi
   1400230a3:	mov    QWORD PTR [rsp+0x20],rax
   1400230a8:	call   QWORD PTR [rip+0x1331a]        # 0x1400363c8
   1400230ae:	cmp    eax,r15d
   1400230b1:	jne    0x1400230c0
   1400230b3:	mov    rcx,rsi
   1400230b6:	call   0x140014f10
   1400230bb:	mov    rsi,r15
   1400230be:	jmp    0x1400230cc
   1400230c0:	cmp    r12d,0xffffffff
   1400230c4:	je     0x1400230cc
   1400230c6:	mov    rcx,QWORD PTR [rbp+0x10]
   1400230ca:	mov    DWORD PTR [rcx],eax
   1400230cc:	lea    rcx,[rbx-0x10]
   1400230d0:	cmp    DWORD PTR [rcx],0xdddd
   1400230d6:	jne    0x1400230dd
   1400230d8:	call   0x140014f10
   1400230dd:	mov    rax,rsi
   1400230e0:	mov    rcx,QWORD PTR [rbp+0x30]
   1400230e4:	xor    rcx,rbp
   1400230e7:	call   0x1400144f0
   1400230ec:	lea    rsp,[rbp+0x48]
   1400230f0:	pop    r15
   1400230f2:	pop    r14
   1400230f4:	pop    r13
   1400230f6:	pop    r12
   1400230f8:	pop    rdi
   1400230f9:	pop    rsi
   1400230fa:	pop    rbx
   1400230fb:	pop    rbp
   1400230fc:	ret    
   1400230fd:	int3   
   1400230fe:	int3   
   1400230ff:	int3   
   140023100:	mov    QWORD PTR [rsp+0x8],rbx
   140023105:	mov    QWORD PTR [rsp+0x10],rbp
   14002310a:	push   rsi
   14002310b:	push   rdi
   14002310c:	push   r12
   14002310e:	push   r13
   140023110:	push   r14
   140023112:	sub    rsp,0x40
   140023116:	mov    ebp,r8d
   140023119:	mov    r13,rdx
   14002311c:	mov    r14,rcx
   14002311f:	call   0x1400175a0
   140023124:	xor    ebx,ebx
   140023126:	mov    rdi,rax
   140023129:	cmp    QWORD PTR [rip+0x2c228],rbx        # 0x14004f358
   140023130:	jne    0x140023206
   140023136:	lea    rcx,[rip+0x18c4b]        # 0x14003bd88
   14002313d:	call   QWORD PTR [rip+0x13335]        # 0x140036478
   140023143:	mov    rsi,rax
   140023146:	test   rax,rax
   140023149:	je     0x1400232db
   14002314f:	lea    rdx,[rip+0x18c22]        # 0x14003bd78
   140023156:	mov    rcx,rax
   140023159:	call   QWORD PTR [rip+0x13349]        # 0x1400364a8
   14002315f:	test   rax,rax
   140023162:	je     0x1400232db
   140023168:	mov    rcx,rax
   14002316b:	call   0x140017598
   140023170:	lea    rdx,[rip+0x18bf1]        # 0x14003bd68
   140023177:	mov    rcx,rsi
   14002317a:	mov    QWORD PTR [rip+0x2c1d7],rax        # 0x14004f358
   140023181:	call   QWORD PTR [rip+0x13321]        # 0x1400364a8
   140023187:	mov    rcx,rax
   14002318a:	call   0x140017598
   14002318f:	lea    rdx,[rip+0x18bba]        # 0x14003bd50
   140023196:	mov    rcx,rsi
   140023199:	mov    QWORD PTR [rip+0x2c1c0],rax        # 0x14004f360
   1400231a0:	call   QWORD PTR [rip+0x13302]        # 0x1400364a8
   1400231a6:	mov    rcx,rax
   1400231a9:	call   0x140017598
   1400231ae:	lea    rdx,[rip+0x18b7b]        # 0x14003bd30
   1400231b5:	mov    rcx,rsi
   1400231b8:	mov    QWORD PTR [rip+0x2c1a9],rax        # 0x14004f368
   1400231bf:	call   QWORD PTR [rip+0x132e3]        # 0x1400364a8
   1400231c5:	mov    rcx,rax
   1400231c8:	call   0x140017598
   1400231cd:	mov    r11,rax
   1400231d0:	mov    QWORD PTR [rip+0x2c1a1],rax        # 0x14004f378
   1400231d7:	test   rax,rax
   1400231da:	je     0x1400231fd
   1400231dc:	lea    rdx,[rip+0x18b35]        # 0x14003bd18
   1400231e3:	mov    rcx,rsi
   1400231e6:	call   QWORD PTR [rip+0x132bc]        # 0x1400364a8
   1400231ec:	mov    rcx,rax
   1400231ef:	call   0x140017598
   1400231f4:	mov    QWORD PTR [rip+0x2c175],rax        # 0x14004f370
   1400231fb:	jmp    0x14002320d
   1400231fd:	mov    rax,QWORD PTR [rip+0x2c16c]        # 0x14004f370
   140023204:	jmp    0x140023214
   140023206:	mov    rax,QWORD PTR [rip+0x2c163]        # 0x14004f370
   14002320d:	mov    r11,QWORD PTR [rip+0x2c164]        # 0x14004f378
   140023214:	cmp    rax,rdi
   140023217:	je     0x14002327c
   140023219:	cmp    r11,rdi
   14002321c:	je     0x14002327c
   14002321e:	mov    rcx,rax
   140023221:	call   0x1400175ac
   140023226:	mov    rcx,QWORD PTR [rip+0x2c14b]        # 0x14004f378
   14002322d:	mov    rsi,rax
   140023230:	call   0x1400175ac
   140023235:	mov    r12,rax
   140023238:	test   rsi,rsi
   14002323b:	je     0x14002327c
   14002323d:	test   rax,rax
   140023240:	je     0x14002327c
   140023242:	call   rsi
   140023244:	test   rax,rax
   140023247:	je     0x140023276
   140023249:	lea    rcx,[rsp+0x88]
   140023251:	mov    r9d,0xc
   140023257:	lea    r8,[rsp+0x30]
   14002325c:	mov    QWORD PTR [rsp+0x20],rcx
   140023261:	lea    edx,[r9-0xb]
   140023265:	mov    rcx,rax
   140023268:	call   r12
   14002326b:	test   eax,eax
   14002326d:	je     0x140023276
   14002326f:	test   BYTE PTR [rsp+0x38],0x1
   140023274:	jne    0x14002327c
   140023276:	bts    ebp,0x15
   14002327a:	jmp    0x1400232ba
   14002327c:	mov    rcx,QWORD PTR [rip+0x2c0dd]        # 0x14004f360
   140023283:	cmp    rcx,rdi
   140023286:	je     0x1400232ba
   140023288:	call   0x1400175ac
   14002328d:	test   rax,rax
   140023290:	je     0x1400232ba
   140023292:	call   rax
   140023294:	mov    rbx,rax
   140023297:	test   rax,rax
   14002329a:	je     0x1400232ba
   14002329c:	mov    rcx,QWORD PTR [rip+0x2c0c5]        # 0x14004f368
   1400232a3:	cmp    rcx,rdi
   1400232a6:	je     0x1400232ba
   1400232a8:	call   0x1400175ac
   1400232ad:	test   rax,rax
   1400232b0:	je     0x1400232ba
   1400232b2:	mov    rcx,rbx
   1400232b5:	call   rax
   1400232b7:	mov    rbx,rax
   1400232ba:	mov    rcx,QWORD PTR [rip+0x2c097]        # 0x14004f358
   1400232c1:	call   0x1400175ac
   1400232c6:	test   rax,rax
   1400232c9:	je     0x1400232db
   1400232cb:	mov    r9d,ebp
   1400232ce:	mov    r8,r13
   1400232d1:	mov    rdx,r14
   1400232d4:	mov    rcx,rbx
   1400232d7:	call   rax
   1400232d9:	jmp    0x1400232dd
   1400232db:	xor    eax,eax
   1400232dd:	mov    rbx,QWORD PTR [rsp+0x70]
   1400232e2:	mov    rbp,QWORD PTR [rsp+0x78]
   1400232e7:	add    rsp,0x40
   1400232eb:	pop    r14
   1400232ed:	pop    r13
   1400232ef:	pop    r12
   1400232f1:	pop    rdi
   1400232f2:	pop    rsi
   1400232f3:	ret    
   1400232f4:	sub    rsp,0x38
   1400232f8:	test   ecx,ecx
   1400232fa:	js     0x14002331c
   1400232fc:	cmp    ecx,0x2
   1400232ff:	jle    0x14002330e
   140023301:	cmp    ecx,0x3
   140023304:	jne    0x14002331c
   140023306:	mov    eax,DWORD PTR [rip+0x2b204]        # 0x14004e510
   14002330c:	jmp    0x14002333f
   14002330e:	mov    eax,DWORD PTR [rip+0x2b1fc]        # 0x14004e510
   140023314:	mov    DWORD PTR [rip+0x2b1f6],ecx        # 0x14004e510
   14002331a:	jmp    0x14002333f
   14002331c:	call   0x140015f48
   140023321:	and    QWORD PTR [rsp+0x20],0x0
   140023327:	xor    r9d,r9d
   14002332a:	xor    r8d,r8d
   14002332d:	xor    edx,edx
   14002332f:	xor    ecx,ecx
   140023331:	mov    DWORD PTR [rax],0x16
   140023337:	call   0x1400149a8
   14002333c:	or     eax,0xffffffff
   14002333f:	add    rsp,0x38
   140023343:	ret    
   140023344:	int3   
   140023345:	int3   
   140023346:	int3   
   140023347:	int3   
   140023348:	int3   
   140023349:	int3   
   14002334a:	int3   
   14002334b:	int3   
   14002334c:	int3   
   14002334d:	int3   
   14002334e:	int3   
   14002334f:	int3   
   140023350:	mov    rax,QWORD PTR [rsp]
   140023354:	mov    QWORD PTR [rcx],rax
   140023357:	ret    
   140023358:	neg    rcx
   14002335b:	sbb    eax,eax
   14002335d:	and    eax,0x1
   140023360:	ret    
   140023361:	int3   
   140023362:	int3   
   140023363:	int3   
   140023364:	rex push rbx
   140023366:	sub    rsp,0x40
   14002336a:	cmp    DWORD PTR [rip+0x2b79f],0x0        # 0x14004eb10
   140023371:	movsxd rbx,ecx
   140023374:	jne    0x140023388
   140023376:	mov    rax,QWORD PTR [rip+0x26283]        # 0x140049600
   14002337d:	movzx  eax,WORD PTR [rax+rbx*2]
   140023381:	and    eax,0x103
   140023386:	jmp    0x1400233e1
   140023388:	lea    rcx,[rsp+0x20]
   14002338d:	xor    edx,edx
   14002338f:	call   0x140014a6c
   140023394:	mov    rax,QWORD PTR [rsp+0x20]
   140023399:	cmp    DWORD PTR [rax+0x10c],0x1
   1400233a0:	jle    0x1400233b8
   1400233a2:	lea    r8,[rsp+0x20]
   1400233a7:	mov    edx,0x103
   1400233ac:	mov    ecx,ebx
   1400233ae:	call   0x14001991c
   1400233b3:	mov    r11d,eax
   1400233b6:	jmp    0x1400233cb
   1400233b8:	mov    rax,QWORD PTR [rax+0x140]
   1400233bf:	movzx  r11d,WORD PTR [rax+rbx*2]
   1400233c4:	and    r11d,0x103
   1400233cb:	cmp    BYTE PTR [rsp+0x38],0x0
   1400233d0:	je     0x1400233de
   1400233d2:	mov    rax,QWORD PTR [rsp+0x30]
   1400233d7:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400233de:	mov    eax,r11d
   1400233e1:	add    rsp,0x40
   1400233e5:	pop    rbx
   1400233e6:	ret    
   1400233e7:	int3   
   1400233e8:	rex push rbx
   1400233ea:	sub    rsp,0x40
   1400233ee:	cmp    DWORD PTR [rip+0x2b71b],0x0        # 0x14004eb10
   1400233f5:	movsxd rbx,ecx
   1400233f8:	jne    0x14002340a
   1400233fa:	mov    rax,QWORD PTR [rip+0x261ff]        # 0x140049600
   140023401:	movzx  eax,WORD PTR [rax+rbx*2]
   140023405:	and    eax,0x1
   140023408:	jmp    0x140023460
   14002340a:	lea    rcx,[rsp+0x20]
   14002340f:	xor    edx,edx
   140023411:	call   0x140014a6c
   140023416:	mov    rax,QWORD PTR [rsp+0x20]
   14002341b:	cmp    DWORD PTR [rax+0x10c],0x1
   140023422:	jle    0x14002343a
   140023424:	lea    r8,[rsp+0x20]
   140023429:	mov    edx,0x1
   14002342e:	mov    ecx,ebx
   140023430:	call   0x14001991c
   140023435:	mov    r11d,eax
   140023438:	jmp    0x14002344a
   14002343a:	mov    rax,QWORD PTR [rax+0x140]
   140023441:	movzx  r11d,WORD PTR [rax+rbx*2]
   140023446:	and    r11d,0x1
   14002344a:	cmp    BYTE PTR [rsp+0x38],0x0
   14002344f:	je     0x14002345d
   140023451:	mov    rax,QWORD PTR [rsp+0x30]
   140023456:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002345d:	mov    eax,r11d
   140023460:	add    rsp,0x40
   140023464:	pop    rbx
   140023465:	ret    
   140023466:	int3   
   140023467:	int3   
   140023468:	rex push rbx
   14002346a:	sub    rsp,0x40
   14002346e:	cmp    DWORD PTR [rip+0x2b69b],0x0        # 0x14004eb10
   140023475:	movsxd rbx,ecx
   140023478:	jne    0x14002348a
   14002347a:	mov    rax,QWORD PTR [rip+0x2617f]        # 0x140049600
   140023481:	movzx  eax,WORD PTR [rax+rbx*2]
   140023485:	and    eax,0x2
   140023488:	jmp    0x1400234e0
   14002348a:	lea    rcx,[rsp+0x20]
   14002348f:	xor    edx,edx
   140023491:	call   0x140014a6c
   140023496:	mov    rax,QWORD PTR [rsp+0x20]
   14002349b:	cmp    DWORD PTR [rax+0x10c],0x1
   1400234a2:	jle    0x1400234ba
   1400234a4:	lea    r8,[rsp+0x20]
   1400234a9:	mov    edx,0x2
   1400234ae:	mov    ecx,ebx
   1400234b0:	call   0x14001991c
   1400234b5:	mov    r11d,eax
   1400234b8:	jmp    0x1400234ca
   1400234ba:	mov    rax,QWORD PTR [rax+0x140]
   1400234c1:	movzx  r11d,WORD PTR [rax+rbx*2]
   1400234c6:	and    r11d,0x2
   1400234ca:	cmp    BYTE PTR [rsp+0x38],0x0
   1400234cf:	je     0x1400234dd
   1400234d1:	mov    rax,QWORD PTR [rsp+0x30]
   1400234d6:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400234dd:	mov    eax,r11d
   1400234e0:	add    rsp,0x40
   1400234e4:	pop    rbx
   1400234e5:	ret    
   1400234e6:	int3   
   1400234e7:	int3   
   1400234e8:	rex push rbx
   1400234ea:	sub    rsp,0x40
   1400234ee:	cmp    DWORD PTR [rip+0x2b61b],0x0        # 0x14004eb10
   1400234f5:	movsxd rbx,ecx
   1400234f8:	jne    0x14002350a
   1400234fa:	mov    rax,QWORD PTR [rip+0x260ff]        # 0x140049600
   140023501:	movzx  eax,WORD PTR [rax+rbx*2]
   140023505:	and    eax,0x4
   140023508:	jmp    0x140023560
   14002350a:	lea    rcx,[rsp+0x20]
   14002350f:	xor    edx,edx
   140023511:	call   0x140014a6c
   140023516:	mov    rax,QWORD PTR [rsp+0x20]
   14002351b:	cmp    DWORD PTR [rax+0x10c],0x1
   140023522:	jle    0x14002353a
   140023524:	lea    r8,[rsp+0x20]
   140023529:	mov    edx,0x4
   14002352e:	mov    ecx,ebx
   140023530:	call   0x14001991c
   140023535:	mov    r11d,eax
   140023538:	jmp    0x14002354a
   14002353a:	mov    rax,QWORD PTR [rax+0x140]
   140023541:	movzx  r11d,WORD PTR [rax+rbx*2]
   140023546:	and    r11d,0x4
   14002354a:	cmp    BYTE PTR [rsp+0x38],0x0
   14002354f:	je     0x14002355d
   140023551:	mov    rax,QWORD PTR [rsp+0x30]
   140023556:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002355d:	mov    eax,r11d
   140023560:	add    rsp,0x40
   140023564:	pop    rbx
   140023565:	ret    
   140023566:	int3   
   140023567:	int3   
   140023568:	rex push rbx
   14002356a:	sub    rsp,0x40
   14002356e:	cmp    DWORD PTR [rip+0x2b59b],0x0        # 0x14004eb10
   140023575:	movsxd rbx,ecx
   140023578:	jne    0x14002358c
   14002357a:	mov    rax,QWORD PTR [rip+0x2607f]        # 0x140049600
   140023581:	movzx  eax,WORD PTR [rax+rbx*2]
   140023585:	and    eax,0x80
   14002358a:	jmp    0x1400235e5
   14002358c:	lea    rcx,[rsp+0x20]
   140023591:	xor    edx,edx
   140023593:	call   0x140014a6c
   140023598:	mov    rax,QWORD PTR [rsp+0x20]
   14002359d:	cmp    DWORD PTR [rax+0x10c],0x1
   1400235a4:	jle    0x1400235bc
   1400235a6:	lea    r8,[rsp+0x20]
   1400235ab:	mov    edx,0x80
   1400235b0:	mov    ecx,ebx
   1400235b2:	call   0x14001991c
   1400235b7:	mov    r11d,eax
   1400235ba:	jmp    0x1400235cf
   1400235bc:	mov    rax,QWORD PTR [rax+0x140]
   1400235c3:	movzx  r11d,WORD PTR [rax+rbx*2]
   1400235c8:	and    r11d,0x80
   1400235cf:	cmp    BYTE PTR [rsp+0x38],0x0
   1400235d4:	je     0x1400235e2
   1400235d6:	mov    rax,QWORD PTR [rsp+0x30]
   1400235db:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400235e2:	mov    eax,r11d
   1400235e5:	add    rsp,0x40
   1400235e9:	pop    rbx
   1400235ea:	ret    
   1400235eb:	int3   
   1400235ec:	rex push rbx
   1400235ee:	sub    rsp,0x40
   1400235f2:	cmp    DWORD PTR [rip+0x2b517],0x0        # 0x14004eb10
   1400235f9:	movsxd rbx,ecx
   1400235fc:	jne    0x14002360e
   1400235fe:	mov    rax,QWORD PTR [rip+0x25ffb]        # 0x140049600
   140023605:	movzx  eax,WORD PTR [rax+rbx*2]
   140023609:	and    eax,0x8
   14002360c:	jmp    0x140023664
   14002360e:	lea    rcx,[rsp+0x20]
   140023613:	xor    edx,edx
   140023615:	call   0x140014a6c
   14002361a:	mov    rax,QWORD PTR [rsp+0x20]
   14002361f:	cmp    DWORD PTR [rax+0x10c],0x1
   140023626:	jle    0x14002363e
   140023628:	lea    r8,[rsp+0x20]
   14002362d:	mov    edx,0x8
   140023632:	mov    ecx,ebx
   140023634:	call   0x14001991c
   140023639:	mov    r11d,eax
   14002363c:	jmp    0x14002364e
   14002363e:	mov    rax,QWORD PTR [rax+0x140]
   140023645:	movzx  r11d,WORD PTR [rax+rbx*2]
   14002364a:	and    r11d,0x8
   14002364e:	cmp    BYTE PTR [rsp+0x38],0x0
   140023653:	je     0x140023661
   140023655:	mov    rax,QWORD PTR [rsp+0x30]
   14002365a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140023661:	mov    eax,r11d
   140023664:	add    rsp,0x40
   140023668:	pop    rbx
   140023669:	ret    
   14002366a:	int3   
   14002366b:	int3   
   14002366c:	rex push rbx
   14002366e:	sub    rsp,0x40
   140023672:	cmp    DWORD PTR [rip+0x2b497],0x0        # 0x14004eb10
   140023679:	movsxd rbx,ecx
   14002367c:	jne    0x140023690
   14002367e:	mov    rax,QWORD PTR [rip+0x25f7b]        # 0x140049600
   140023685:	movzx  eax,WORD PTR [rax+rbx*2]
   140023689:	and    eax,0x107
   14002368e:	jmp    0x1400236e9
   140023690:	lea    rcx,[rsp+0x20]
   140023695:	xor    edx,edx
   140023697:	call   0x140014a6c
   14002369c:	mov    rax,QWORD PTR [rsp+0x20]
   1400236a1:	cmp    DWORD PTR [rax+0x10c],0x1
   1400236a8:	jle    0x1400236c0
   1400236aa:	lea    r8,[rsp+0x20]
   1400236af:	mov    edx,0x107
   1400236b4:	mov    ecx,ebx
   1400236b6:	call   0x14001991c
   1400236bb:	mov    r11d,eax
   1400236be:	jmp    0x1400236d3
   1400236c0:	mov    rax,QWORD PTR [rax+0x140]
   1400236c7:	movzx  r11d,WORD PTR [rax+rbx*2]
   1400236cc:	and    r11d,0x107
   1400236d3:	cmp    BYTE PTR [rsp+0x38],0x0
   1400236d8:	je     0x1400236e6
   1400236da:	mov    rax,QWORD PTR [rsp+0x30]
   1400236df:	and    DWORD PTR [rax+0xc8],0xfffffffd
   1400236e6:	mov    eax,r11d
   1400236e9:	add    rsp,0x40
   1400236ed:	pop    rbx
   1400236ee:	ret    
   1400236ef:	int3   
   1400236f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400236f5:	mov    QWORD PTR [rsp+0x10],rsi
   1400236fa:	push   rdi
   1400236fb:	sub    rsp,0x40
   1400236ff:	mov    esi,edx
   140023701:	mov    rdx,rcx
   140023704:	lea    rcx,[rsp+0x20]
   140023709:	mov    rbx,r9
   14002370c:	mov    edi,r8d
   14002370f:	call   0x140014a6c
   140023714:	mov    r9d,DWORD PTR [rsp+0x70]
   140023719:	mov    r8,rbx
   14002371c:	mov    edx,edi
   14002371e:	mov    ecx,esi
   140023720:	call   QWORD PTR [rip+0x12b52]        # 0x140036278
   140023726:	cmp    BYTE PTR [rsp+0x38],0x0
   14002372b:	je     0x140023739
   14002372d:	mov    rcx,QWORD PTR [rsp+0x30]
   140023732:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140023739:	mov    rbx,QWORD PTR [rsp+0x50]
   14002373e:	mov    rsi,QWORD PTR [rsp+0x58]
   140023743:	add    rsp,0x40
   140023747:	pop    rdi
   140023748:	ret    
   140023749:	int3   
   14002374a:	int3   
   14002374b:	int3   
   14002374c:	rex push rbp
   14002374e:	push   r12
   140023750:	push   r13
   140023752:	push   r14
   140023754:	push   r15
   140023756:	sub    rsp,0x50
   14002375a:	lea    rbp,[rsp+0x40]
   14002375f:	mov    QWORD PTR [rbp+0x40],rbx
   140023763:	mov    QWORD PTR [rbp+0x48],rsi
   140023767:	mov    QWORD PTR [rbp+0x50],rdi
   14002376b:	mov    rax,QWORD PTR [rip+0x2564e]        # 0x140048dc0
   140023772:	xor    rax,rbp
   140023775:	mov    QWORD PTR [rbp+0x0],rax
   140023779:	mov    r10d,DWORD PTR [rip+0x2bc00]        # 0x14004f380
   140023780:	mov    esi,0x1
   140023785:	xor    ebx,ebx
   140023787:	mov    r15,r9
   14002378a:	mov    r13d,r8d
   14002378d:	mov    r14d,edx
   140023790:	mov    rdi,rcx
   140023793:	lea    r12d,[rsi+0x1]
   140023797:	cmp    r10d,ebx
   14002379a:	jne    0x1400237d3
   14002379c:	xor    r9d,r9d
   14002379f:	xor    r8d,r8d
   1400237a2:	mov    edx,esi
   1400237a4:	xor    ecx,ecx
   1400237a6:	call   QWORD PTR [rip+0x12acc]        # 0x140036278
   1400237ac:	cmp    eax,ebx
   1400237ae:	je     0x1400237b8
   1400237b0:	mov    DWORD PTR [rip+0x2bbca],esi        # 0x14004f380
   1400237b6:	jmp    0x1400237ea
   1400237b8:	call   QWORD PTR [rip+0x12ca2]        # 0x140036460
   1400237be:	mov    r10d,DWORD PTR [rip+0x2bbbb]        # 0x14004f380
   1400237c5:	cmp    eax,0x78
   1400237c8:	cmove  r10d,r12d
   1400237cc:	mov    DWORD PTR [rip+0x2bbad],r10d        # 0x14004f380
   1400237d3:	cmp    r10d,r12d
   1400237d6:	je     0x1400238ec
   1400237dc:	cmp    r10d,ebx
   1400237df:	je     0x1400238ec
   1400237e5:	cmp    r10d,esi
   1400237e8:	jne    0x140023811
   1400237ea:	mov    esi,DWORD PTR [rbp+0x68]
   1400237ed:	cmp    esi,ebx
   1400237ef:	jne    0x1400237f7
   1400237f1:	mov    rax,QWORD PTR [rdi]
   1400237f4:	mov    esi,DWORD PTR [rax+0x4]
   1400237f7:	xor    r9d,r9d
   1400237fa:	xor    r8d,r8d
   1400237fd:	mov    edx,r13d
   140023800:	mov    ecx,r14d
   140023803:	call   QWORD PTR [rip+0x12a6f]        # 0x140036278
   140023809:	movsxd r12,eax
   14002380c:	cmp    r12d,ebx
   14002380f:	jne    0x140023818
   140023811:	xor    eax,eax
   140023813:	jmp    0x1400238ff
   140023818:	jle    0x140023881
   14002381a:	xor    edx,edx
   14002381c:	lea    rax,[rdx-0x20]
   140023820:	div    r12
   140023823:	cmp    rax,0x2
   140023827:	jb     0x140023881
   140023829:	lea    rcx,[r12+r12*1+0x10]
   14002382e:	cmp    rcx,0x400
   140023835:	ja     0x140023868
   140023837:	lea    rax,[rcx+0xf]
   14002383b:	cmp    rax,rcx
   14002383e:	ja     0x14002384a
   140023840:	movabs rax,0xffffffffffffff0
   14002384a:	and    rax,0xfffffffffffffff0
   14002384e:	call   0x1400329e0
   140023853:	sub    rsp,rax
   140023856:	lea    rdi,[rsp+0x40]
   14002385b:	cmp    rdi,rbx
   14002385e:	je     0x140023811
   140023860:	mov    DWORD PTR [rdi],0xcccc
   140023866:	jmp    0x14002387b
   140023868:	call   0x140014f50
   14002386d:	mov    rdi,rax
   140023870:	cmp    rax,rbx
   140023873:	je     0x140023884
   140023875:	mov    DWORD PTR [rax],0xdddd
   14002387b:	add    rdi,0x10
   14002387f:	jmp    0x140023884
   140023881:	mov    rdi,rbx
   140023884:	cmp    rdi,rbx
   140023887:	je     0x140023811
   140023889:	mov    r9d,r12d
   14002388c:	mov    r8,rdi
   14002388f:	mov    edx,r13d
   140023892:	mov    ecx,r14d
   140023895:	call   QWORD PTR [rip+0x129dd]        # 0x140036278
   14002389b:	cmp    eax,ebx
   14002389d:	je     0x1400238d7
   14002389f:	mov    eax,DWORD PTR [rbp+0x60]
   1400238a2:	or     r9d,0xffffffff
   1400238a6:	xor    edx,edx
   1400238a8:	mov    QWORD PTR [rsp+0x38],rbx
   1400238ad:	mov    r8,rdi
   1400238b0:	mov    ecx,esi
   1400238b2:	mov    QWORD PTR [rsp+0x30],rbx
   1400238b7:	cmp    eax,ebx
   1400238b9:	jne    0x1400238c6
   1400238bb:	mov    DWORD PTR [rsp+0x28],ebx
   1400238bf:	mov    QWORD PTR [rsp+0x20],rbx
   1400238c4:	jmp    0x1400238cf
   1400238c6:	mov    DWORD PTR [rsp+0x28],eax
   1400238ca:	mov    QWORD PTR [rsp+0x20],r15
   1400238cf:	call   QWORD PTR [rip+0x12af3]        # 0x1400363c8
   1400238d5:	mov    ebx,eax
   1400238d7:	lea    rcx,[rdi-0x10]
   1400238db:	cmp    DWORD PTR [rcx],0xdddd
   1400238e1:	jne    0x1400238e8
   1400238e3:	call   0x140014f10
   1400238e8:	mov    eax,ebx
   1400238ea:	jmp    0x1400238ff
   1400238ec:	mov    r9d,DWORD PTR [rbp+0x60]
   1400238f0:	mov    r8,r15
   1400238f3:	mov    edx,r13d
   1400238f6:	mov    ecx,r14d
   1400238f9:	call   QWORD PTR [rip+0x12a19]        # 0x140036318
   1400238ff:	mov    rcx,QWORD PTR [rbp+0x0]
   140023903:	xor    rcx,rbp
   140023906:	call   0x1400144f0
   14002390b:	mov    rbx,QWORD PTR [rbp+0x40]
   14002390f:	mov    rsi,QWORD PTR [rbp+0x48]
   140023913:	mov    rdi,QWORD PTR [rbp+0x50]
   140023917:	lea    rsp,[rbp+0x10]
   14002391b:	pop    r15
   14002391d:	pop    r14
   14002391f:	pop    r13
   140023921:	pop    r12
   140023923:	pop    rbp
   140023924:	ret    
   140023925:	int3   
   140023926:	int3   
   140023927:	int3   
   140023928:	mov    QWORD PTR [rsp+0x8],rbx
   14002392d:	mov    QWORD PTR [rsp+0x10],rsi
   140023932:	push   rdi
   140023933:	sub    rsp,0x50
   140023937:	mov    esi,edx
   140023939:	mov    rdx,rcx
   14002393c:	lea    rcx,[rsp+0x30]
   140023941:	mov    rbx,r9
   140023944:	mov    edi,r8d
   140023947:	call   0x140014a6c
   14002394c:	mov    r11d,DWORD PTR [rsp+0x88]
   140023954:	mov    eax,DWORD PTR [rsp+0x80]
   14002395b:	lea    rcx,[rsp+0x30]
   140023960:	mov    DWORD PTR [rsp+0x28],r11d
   140023965:	mov    r9,rbx
   140023968:	mov    r8d,edi
   14002396b:	mov    edx,esi
   14002396d:	mov    DWORD PTR [rsp+0x20],eax
   140023971:	call   0x14002374c
   140023976:	cmp    BYTE PTR [rsp+0x48],0x0
   14002397b:	je     0x140023989
   14002397d:	mov    rcx,QWORD PTR [rsp+0x40]
   140023982:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140023989:	mov    rbx,QWORD PTR [rsp+0x60]
   14002398e:	mov    rsi,QWORD PTR [rsp+0x68]
   140023993:	add    rsp,0x50
   140023997:	pop    rdi
   140023998:	ret    
   140023999:	int3   
   14002399a:	int3   
   14002399b:	int3   
   14002399c:	mov    QWORD PTR [rsp+0x8],rbx
   1400239a1:	mov    QWORD PTR [rsp+0x10],rsi
   1400239a6:	push   rdi
   1400239a7:	sub    rsp,0x30
   1400239ab:	xor    edi,edi
   1400239ad:	mov    rbx,rdx
   1400239b0:	mov    rsi,rcx
   1400239b3:	test   rdx,rdx
   1400239b6:	je     0x1400239e9
   1400239b8:	xor    edx,edx
   1400239ba:	lea    rax,[rdi-0x20]
   1400239be:	div    rbx
   1400239c1:	cmp    rax,r8
   1400239c4:	jae    0x1400239e9
   1400239c6:	call   0x140015f48
   1400239cb:	and    QWORD PTR [rsp+0x20],rdi
   1400239d0:	xor    r9d,r9d
   1400239d3:	xor    r8d,r8d
   1400239d6:	xor    edx,edx
   1400239d8:	xor    ecx,ecx
   1400239da:	mov    DWORD PTR [rax],0xc
   1400239e0:	call   0x1400149a8
   1400239e5:	xor    eax,eax
   1400239e7:	jmp    0x140023a26
   1400239e9:	imul   rbx,r8
   1400239ed:	test   rcx,rcx
   1400239f0:	je     0x1400239fa
   1400239f2:	call   0x140016aa0
   1400239f7:	mov    rdi,rax
   1400239fa:	mov    rdx,rbx
   1400239fd:	mov    rcx,rsi
   140023a00:	call   0x140015fd0
   140023a05:	mov    rsi,rax
   140023a08:	test   rax,rax
   140023a0b:	je     0x140023a23
   140023a0d:	cmp    rdi,rbx
   140023a10:	jae    0x140023a23
   140023a12:	sub    rbx,rdi
   140023a15:	lea    rcx,[rdi+rax*1]
   140023a19:	xor    edx,edx
   140023a1b:	mov    r8,rbx
   140023a1e:	call   0x140015b00
   140023a23:	mov    rax,rsi
   140023a26:	mov    rbx,QWORD PTR [rsp+0x40]
   140023a2b:	mov    rsi,QWORD PTR [rsp+0x48]
   140023a30:	add    rsp,0x30
   140023a34:	pop    rdi
   140023a35:	ret    
   140023a36:	int3   
   140023a37:	int3   
   140023a38:	mov    QWORD PTR [rsp+0x8],rbx
   140023a3d:	push   rdi
   140023a3e:	sub    rsp,0x20
   140023a42:	movsxd rbx,ecx
   140023a45:	mov    edi,r8d
   140023a48:	mov    QWORD PTR [rsp+0x38],rdx
   140023a4d:	mov    ecx,ebx
   140023a4f:	call   0x14002564c
   140023a54:	cmp    rax,0xffffffffffffffff
   140023a58:	jne    0x140023a6b
   140023a5a:	call   0x140015f48
   140023a5f:	mov    DWORD PTR [rax],0x9
   140023a65:	or     rax,0xffffffffffffffff
   140023a69:	jmp    0x140023ac2
   140023a6b:	mov    edx,DWORD PTR [rsp+0x38]
   140023a6f:	lea    r8,[rsp+0x3c]
   140023a74:	mov    r9d,edi
   140023a77:	mov    rcx,rax
   140023a7a:	call   QWORD PTR [rip+0x128c0]        # 0x140036340
   140023a80:	mov    DWORD PTR [rsp+0x38],eax
   140023a84:	cmp    eax,0xffffffff
   140023a87:	jne    0x140023a9c
   140023a89:	call   QWORD PTR [rip+0x129d1]        # 0x140036460
   140023a8f:	test   eax,eax
   140023a91:	je     0x140023a9c
   140023a93:	mov    ecx,eax
   140023a95:	call   0x140015f88
   140023a9a:	jmp    0x140023a65
   140023a9c:	mov    rcx,rbx
   140023a9f:	mov    rax,rbx
   140023aa2:	lea    rdx,[rip+0x2cb97]        # 0x140050640
   140023aa9:	sar    rax,0x5
   140023aad:	and    ecx,0x1f
   140023ab0:	mov    rax,QWORD PTR [rdx+rax*8]
   140023ab4:	imul   rcx,rcx,0x58
   140023ab8:	and    BYTE PTR [rax+rcx*1+0x8],0xfd
   140023abd:	mov    rax,QWORD PTR [rsp+0x38]
   140023ac2:	mov    rbx,QWORD PTR [rsp+0x30]
   140023ac7:	add    rsp,0x20
   140023acb:	pop    rdi
   140023acc:	ret    
   140023acd:	int3   
   140023ace:	int3   
   140023acf:	int3   
   140023ad0:	mov    QWORD PTR [rsp+0x10],rbx
   140023ad5:	mov    QWORD PTR [rsp+0x18],rsi
   140023ada:	mov    DWORD PTR [rsp+0x8],ecx
   140023ade:	push   rdi
   140023adf:	push   r12
   140023ae1:	push   r13
   140023ae3:	push   r14
   140023ae5:	push   r15
   140023ae7:	sub    rsp,0x30
   140023aeb:	mov    r12d,r8d
   140023aee:	mov    r13,rdx
   140023af1:	movsxd rbx,ecx
   140023af4:	cmp    ebx,0xfffffffe
   140023af7:	jne    0x140023b16
   140023af9:	call   0x140015f68
   140023afe:	xor    edi,edi
   140023b00:	mov    DWORD PTR [rax],edi
   140023b02:	call   0x140015f48
   140023b07:	mov    DWORD PTR [rax],0x9
   140023b0d:	or     rax,0xffffffffffffffff
   140023b11:	jmp    0x140023bef
   140023b16:	xor    edi,edi
   140023b18:	cmp    ebx,edi
   140023b1a:	jl     0x140023bc5
   140023b20:	cmp    ebx,DWORD PTR [rip+0x2cafe]        # 0x140050624
   140023b26:	jae    0x140023bc5
   140023b2c:	mov    rsi,rbx
   140023b2f:	mov    r14,rbx
   140023b32:	sar    r14,0x5
   140023b36:	lea    r15,[rip+0x2cb03]        # 0x140050640
   140023b3d:	and    esi,0x1f
   140023b40:	imul   rsi,rsi,0x58
   140023b44:	mov    rax,QWORD PTR [r15+r14*8]
   140023b48:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140023b4d:	and    ecx,0x1
   140023b50:	jne    0x140023b7e
   140023b52:	call   0x140015f68
   140023b57:	mov    DWORD PTR [rax],edi
   140023b59:	call   0x140015f48
   140023b5e:	mov    DWORD PTR [rax],0x9
   140023b64:	mov    QWORD PTR [rsp+0x20],rdi
   140023b69:	xor    r9d,r9d
   140023b6c:	xor    r8d,r8d
   140023b6f:	xor    edx,edx
   140023b71:	xor    ecx,ecx
   140023b73:	call   0x1400149a8
   140023b78:	or     rax,0xffffffffffffffff
   140023b7c:	jmp    0x140023bef
   140023b7e:	mov    ecx,ebx
   140023b80:	call   0x1400256d0
   140023b85:	nop
   140023b86:	mov    rax,QWORD PTR [r15+r14*8]
   140023b8a:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140023b8f:	je     0x140023ba3
   140023b91:	mov    r8d,r12d
   140023b94:	mov    rdx,r13
   140023b97:	mov    ecx,ebx
   140023b99:	call   0x140023a38
   140023b9e:	mov    rdi,rax
   140023ba1:	jmp    0x140023bb9
   140023ba3:	call   0x140015f48
   140023ba8:	mov    DWORD PTR [rax],0x9
   140023bae:	call   0x140015f68
   140023bb3:	mov    DWORD PTR [rax],edi
   140023bb5:	or     rdi,0xffffffffffffffff
   140023bb9:	mov    ecx,ebx
   140023bbb:	call   0x140025778
   140023bc0:	mov    rax,rdi
   140023bc3:	jmp    0x140023bef
   140023bc5:	call   0x140015f68
   140023bca:	mov    DWORD PTR [rax],edi
   140023bcc:	call   0x140015f48
   140023bd1:	mov    DWORD PTR [rax],0x9
   140023bd7:	mov    QWORD PTR [rsp+0x20],rdi
   140023bdc:	xor    r9d,r9d
   140023bdf:	xor    r8d,r8d
   140023be2:	xor    edx,edx
   140023be4:	xor    ecx,ecx
   140023be6:	call   0x1400149a8
   140023beb:	or     rax,0xffffffffffffffff
   140023bef:	mov    rbx,QWORD PTR [rsp+0x68]
   140023bf4:	mov    rsi,QWORD PTR [rsp+0x70]
   140023bf9:	add    rsp,0x30
   140023bfd:	pop    r15
   140023bff:	pop    r14
   140023c01:	pop    r13
   140023c03:	pop    r12
   140023c05:	pop    rdi
   140023c06:	ret    
   140023c07:	int3   
   140023c08:	mov    QWORD PTR [rsp+0x20],rbx
   140023c0d:	push   rbp
   140023c0e:	push   rsi
   140023c0f:	push   rdi
   140023c10:	push   r12
   140023c12:	push   r13
   140023c14:	push   r14
   140023c16:	push   r15
   140023c18:	mov    eax,0x1b30
   140023c1d:	call   0x1400329e0
   140023c22:	sub    rsp,rax
   140023c25:	mov    rax,QWORD PTR [rip+0x25194]        # 0x140048dc0
   140023c2c:	xor    rax,rsp
   140023c2f:	mov    QWORD PTR [rsp+0x1b20],rax
   140023c37:	xor    ebp,ebp
   140023c39:	xor    edi,edi
   140023c3b:	mov    r13d,r8d
   140023c3e:	mov    r12,rdx
   140023c41:	movsxd rbx,ecx
   140023c44:	mov    DWORD PTR [rsp+0x40],ebp
   140023c48:	test   r8d,r8d
   140023c4b:	jne    0x140023c54
   140023c4d:	xor    eax,eax
   140023c4f:	jmp    0x14002433b
   140023c54:	test   rdx,rdx
   140023c57:	jne    0x140023c87
   140023c59:	call   0x140015f68
   140023c5e:	and    DWORD PTR [rax],edi
   140023c60:	call   0x140015f48
   140023c65:	and    QWORD PTR [rsp+0x20],rdi
   140023c6a:	xor    r9d,r9d
   140023c6d:	xor    r8d,r8d
   140023c70:	xor    edx,edx
   140023c72:	xor    ecx,ecx
   140023c74:	mov    DWORD PTR [rax],0x16
   140023c7a:	call   0x1400149a8
   140023c7f:	or     eax,0xffffffff
   140023c82:	jmp    0x14002433b
   140023c87:	mov    r15,rbx
   140023c8a:	mov    r14,rbx
   140023c8d:	lea    rax,[rip+0x2c9ac]        # 0x140050640
   140023c94:	sar    r14,0x5
   140023c98:	and    r15d,0x1f
   140023c9c:	mov    rcx,QWORD PTR [rax+r14*8]
   140023ca0:	mov    QWORD PTR [rsp+0x50],r14
   140023ca5:	imul   r15,r15,0x58
   140023ca9:	mov    sil,BYTE PTR [r15+rcx*1+0x38]
   140023cae:	add    sil,sil
   140023cb1:	sar    sil,1
   140023cb4:	cmp    sil,0x2
   140023cb8:	je     0x140023cc0
   140023cba:	cmp    sil,0x1
   140023cbe:	jne    0x140023cc9
   140023cc0:	mov    eax,r13d
   140023cc3:	not    eax
   140023cc5:	test   al,0x1
   140023cc7:	je     0x140023c59
   140023cc9:	test   BYTE PTR [r15+rcx*1+0x8],0x20
   140023ccf:	je     0x140023cde
   140023cd1:	xor    edx,edx
   140023cd3:	mov    ecx,ebx
   140023cd5:	lea    r8d,[rdx+0x2]
   140023cd9:	call   0x140023a38
   140023cde:	mov    ecx,ebx
   140023ce0:	call   0x1400244f0
   140023ce5:	test   eax,eax
   140023ce7:	je     0x140023fde
   140023ced:	lea    rax,[rip+0x2c94c]        # 0x140050640
   140023cf4:	mov    rax,QWORD PTR [rax+r14*8]
   140023cf8:	test   BYTE PTR [r15+rax*1+0x8],0x80
   140023cfe:	je     0x140023fde
   140023d04:	call   0x140017714
   140023d09:	xor    ebx,ebx
   140023d0b:	lea    rdx,[rsp+0x58]
   140023d10:	mov    rcx,QWORD PTR [rax+0xc0]
   140023d17:	lea    rax,[rip+0x2c922]        # 0x140050640
   140023d1e:	cmp    DWORD PTR [rcx+0x14],ebx
   140023d21:	mov    rcx,QWORD PTR [rax+r14*8]
   140023d25:	mov    rcx,QWORD PTR [r15+rcx*1]
   140023d29:	sete   bl
   140023d2c:	call   QWORD PTR [rip+0x12556]        # 0x140036288
   140023d32:	test   eax,eax
   140023d34:	je     0x140023fde
   140023d3a:	test   ebx,ebx
   140023d3c:	je     0x140023d47
   140023d3e:	test   sil,sil
   140023d41:	je     0x140023fde
   140023d47:	call   QWORD PTR [rip+0x12533]        # 0x140036280
   140023d4d:	and    DWORD PTR [rsp+0x4c],edi
   140023d51:	mov    rbx,r12
   140023d54:	mov    DWORD PTR [rsp+0x58],eax
   140023d58:	test   r13d,r13d
   140023d5b:	je     0x140023fd8
   140023d61:	mov    r14d,DWORD PTR [rsp+0x58]
   140023d66:	mov    ebp,0xd
   140023d6b:	test   sil,sil
   140023d6e:	jne    0x140023ef7
   140023d74:	mov    rdx,QWORD PTR [rsp+0x50]
   140023d79:	mov    cl,BYTE PTR [rbx]
   140023d7b:	xor    r14d,r14d
   140023d7e:	cmp    cl,0xa
   140023d81:	lea    rbp,[rip+0x2c8b8]        # 0x140050640
   140023d88:	mov    rdx,QWORD PTR [rbp+rdx*8+0x0]
   140023d8d:	sete   r14b
   140023d91:	cmp    DWORD PTR [r15+rdx*1+0x50],0x0
   140023d97:	je     0x140023db9
   140023d99:	mov    al,BYTE PTR [r15+rdx*1+0x4c]
   140023d9e:	mov    BYTE PTR [rsp+0x5d],cl
   140023da2:	mov    r8d,0x2
   140023da8:	mov    BYTE PTR [rsp+0x5c],al
   140023dac:	and    DWORD PTR [r15+rdx*1+0x50],0x0
   140023db2:	lea    rdx,[rsp+0x5c]
   140023db7:	jmp    0x140023e02
   140023db9:	movsx  ecx,cl
   140023dbc:	call   0x1400198d4
   140023dc1:	test   eax,eax
   140023dc3:	je     0x140023df9
   140023dc5:	mov    rax,r13
   140023dc8:	sub    rax,rbx
   140023dcb:	add    rax,r12
   140023dce:	cmp    rax,0x1
   140023dd2:	jle    0x140023fa7
   140023dd8:	lea    rcx,[rsp+0x44]
   140023ddd:	mov    r8d,0x2
   140023de3:	mov    rdx,rbx
   140023de6:	call   0x140024948
   140023deb:	cmp    eax,0xffffffff
   140023dee:	je     0x140023f6a
   140023df4:	inc    rbx
   140023df7:	jmp    0x140023e15
   140023df9:	mov    r8d,0x1
   140023dff:	mov    rdx,rbx
   140023e02:	lea    rcx,[rsp+0x44]
   140023e07:	call   0x140024948
   140023e0c:	cmp    eax,0xffffffff
   140023e0f:	je     0x140023f6a
   140023e15:	and    QWORD PTR [rsp+0x38],0x0
   140023e1b:	and    QWORD PTR [rsp+0x30],0x0
   140023e21:	mov    ecx,DWORD PTR [rsp+0x58]
   140023e25:	lea    rax,[rsp+0x5c]
   140023e2a:	lea    r8,[rsp+0x44]
   140023e2f:	mov    r9d,0x1
   140023e35:	xor    edx,edx
   140023e37:	mov    DWORD PTR [rsp+0x28],0x5
   140023e3f:	inc    rbx
   140023e42:	mov    QWORD PTR [rsp+0x20],rax
   140023e47:	call   QWORD PTR [rip+0x1257b]        # 0x1400363c8
   140023e4d:	mov    ebp,eax
   140023e4f:	test   eax,eax
   140023e51:	je     0x140023f6a
   140023e57:	mov    rax,QWORD PTR [rsp+0x50]
   140023e5c:	and    QWORD PTR [rsp+0x20],0x0
   140023e62:	lea    rcx,[rip+0x2c7d7]        # 0x140050640
   140023e69:	mov    rcx,QWORD PTR [rcx+rax*8]
   140023e6d:	lea    r9,[rsp+0x4c]
   140023e72:	lea    rdx,[rsp+0x5c]
   140023e77:	mov    rcx,QWORD PTR [r15+rcx*1]
   140023e7b:	mov    r8d,ebp
   140023e7e:	call   QWORD PTR [rip+0x124c4]        # 0x140036348
   140023e84:	test   eax,eax
   140023e86:	je     0x140023fce
   140023e8c:	mov    edi,ebx
   140023e8e:	sub    edi,r12d
   140023e91:	add    edi,DWORD PTR [rsp+0x40]
   140023e95:	cmp    DWORD PTR [rsp+0x4c],ebp
   140023e99:	jl     0x140023f6a
   140023e9f:	mov    ebp,0xd
   140023ea4:	test   r14d,r14d
   140023ea7:	je     0x140023f5c
   140023ead:	mov    rax,QWORD PTR [rsp+0x50]
   140023eb2:	and    QWORD PTR [rsp+0x20],0x0
   140023eb8:	mov    BYTE PTR [rsp+0x5c],bpl
   140023ebd:	lea    rcx,[rip+0x2c77c]        # 0x140050640
   140023ec4:	lea    r9,[rsp+0x4c]
   140023ec9:	lea    r8d,[rbp-0xc]
   140023ecd:	mov    rcx,QWORD PTR [rcx+rax*8]
   140023ed1:	lea    rdx,[rsp+0x5c]
   140023ed6:	mov    rcx,QWORD PTR [r15+rcx*1]
   140023eda:	call   QWORD PTR [rip+0x12468]        # 0x140036348
   140023ee0:	test   eax,eax
   140023ee2:	je     0x140023fce
   140023ee8:	cmp    DWORD PTR [rsp+0x4c],0x1
   140023eed:	jl     0x140023f6a
   140023eef:	inc    DWORD PTR [rsp+0x40]
   140023ef3:	inc    edi
   140023ef5:	jmp    0x140023f5c
   140023ef7:	cmp    sil,0x1
   140023efb:	je     0x140023f03
   140023efd:	cmp    sil,0x2
   140023f01:	jne    0x140023f1a
   140023f03:	movzx  eax,WORD PTR [rbx]
   140023f06:	xor    r14d,r14d
   140023f09:	cmp    ax,0xa
   140023f0d:	mov    WORD PTR [rsp+0x44],ax
   140023f12:	sete   r14b
   140023f16:	add    rbx,0x2
   140023f1a:	cmp    sil,0x1
   140023f1e:	je     0x140023f26
   140023f20:	cmp    sil,0x2
   140023f24:	jne    0x140023f5c
   140023f26:	movzx  ecx,WORD PTR [rsp+0x44]
   140023f2b:	call   0x1400257a0
   140023f30:	cmp    ax,WORD PTR [rsp+0x44]
   140023f35:	jne    0x140023fce
   140023f3b:	add    edi,0x2
   140023f3e:	test   r14d,r14d
   140023f41:	je     0x140023f5c
   140023f43:	mov    ecx,ebp
   140023f45:	mov    WORD PTR [rsp+0x44],bp
   140023f4a:	call   0x1400257a0
   140023f4f:	cmp    ax,WORD PTR [rsp+0x44]
   140023f54:	jne    0x140023fce
   140023f56:	inc    edi
   140023f58:	inc    DWORD PTR [rsp+0x40]
   140023f5c:	mov    eax,ebx
   140023f5e:	sub    eax,r12d
   140023f61:	cmp    eax,r13d
   140023f64:	jb     0x140023d6b
   140023f6a:	mov    ebx,DWORD PTR [rsp+0x4c]
   140023f6e:	mov    r14,QWORD PTR [rsp+0x50]
   140023f73:	mov    ebp,DWORD PTR [rsp+0x40]
   140023f77:	test   edi,edi
   140023f79:	jne    0x140024337
   140023f7f:	test   ebx,ebx
   140023f81:	je     0x140024301
   140023f87:	cmp    ebx,0x5
   140023f8a:	jne    0x1400242f5
   140023f90:	call   0x140015f48
   140023f95:	mov    DWORD PTR [rax],0x9
   140023f9b:	call   0x140015f68
   140023fa0:	mov    DWORD PTR [rax],ebx
   140023fa2:	jmp    0x140023c7f
   140023fa7:	mov    al,BYTE PTR [rbx]
   140023fa9:	mov    r14,QWORD PTR [rsp+0x50]
   140023fae:	inc    edi
   140023fb0:	mov    rcx,QWORD PTR [rbp+r14*8+0x0]
   140023fb5:	mov    BYTE PTR [r15+rcx*1+0x4c],al
   140023fba:	mov    rax,QWORD PTR [rbp+r14*8+0x0]
   140023fbf:	mov    DWORD PTR [r15+rax*1+0x50],0x1
   140023fc8:	mov    ebx,DWORD PTR [rsp+0x4c]
   140023fcc:	jmp    0x140023f73
   140023fce:	call   QWORD PTR [rip+0x1248c]        # 0x140036460
   140023fd4:	mov    ebx,eax
   140023fd6:	jmp    0x140023f6e
   140023fd8:	mov    ebx,DWORD PTR [rsp+0x4c]
   140023fdc:	jmp    0x140023f7f
   140023fde:	lea    rax,[rip+0x2c65b]        # 0x140050640
   140023fe5:	mov    rcx,QWORD PTR [rax+r14*8]
   140023fe9:	test   BYTE PTR [r15+rcx*1+0x8],0x80
   140023fef:	je     0x1400242bf
   140023ff5:	xor    ebx,ebx
   140023ff7:	mov    rbp,r12
   140023ffa:	test   sil,sil
   140023ffd:	jne    0x1400240d3
   140024003:	test   r13d,r13d
   140024006:	je     0x140024308
   14002400c:	lea    edx,[rbx+0xd]
   14002400f:	mov    r14d,DWORD PTR [rsp+0x40]
   140024014:	lea    rsi,[rsp+0x720]
   14002401c:	xor    ecx,ecx
   14002401e:	mov    eax,ebp
   140024020:	sub    eax,r12d
   140024023:	cmp    eax,r13d
   140024026:	jae    0x14002404e
   140024028:	mov    al,BYTE PTR [rbp+0x0]
   14002402b:	inc    rbp
   14002402e:	cmp    al,0xa
   140024030:	jne    0x14002403d
   140024032:	mov    BYTE PTR [rsi],dl
   140024034:	inc    r14d
   140024037:	inc    rsi
   14002403a:	inc    rcx
   14002403d:	inc    rcx
   140024040:	mov    BYTE PTR [rsi],al
   140024042:	inc    rsi
   140024045:	cmp    rcx,0x13ff
   14002404c:	jb     0x14002401e
   14002404e:	and    QWORD PTR [rsp+0x20],rbx
   140024053:	lea    rax,[rsp+0x720]
   14002405b:	mov    r8d,esi
   14002405e:	sub    r8d,eax
   140024061:	lea    rax,[rip+0x2c5d8]        # 0x140050640
   140024068:	mov    DWORD PTR [rsp+0x40],r14d
   14002406d:	mov    r14,QWORD PTR [rsp+0x50]
   140024072:	lea    r9,[rsp+0x48]
   140024077:	lea    rdx,[rsp+0x720]
   14002407f:	mov    rcx,QWORD PTR [rax+r14*8]
   140024083:	mov    rcx,QWORD PTR [r15+rcx*1]
   140024087:	call   QWORD PTR [rip+0x122bb]        # 0x140036348
   14002408d:	test   eax,eax
   14002408f:	je     0x1400240c6
   140024091:	add    edi,DWORD PTR [rsp+0x48]
   140024095:	lea    rax,[rsp+0x720]
   14002409d:	sub    rsi,rax
   1400240a0:	movsxd rax,DWORD PTR [rsp+0x48]
   1400240a5:	cmp    rax,rsi
   1400240a8:	jl     0x140023f73
   1400240ae:	mov    eax,ebp
   1400240b0:	mov    edx,0xd
   1400240b5:	sub    eax,r12d
   1400240b8:	cmp    eax,r13d
   1400240bb:	jb     0x14002400f
   1400240c1:	jmp    0x140023f73
   1400240c6:	call   QWORD PTR [rip+0x12394]        # 0x140036460
   1400240cc:	mov    ebx,eax
   1400240ce:	jmp    0x140023f73
   1400240d3:	cmp    sil,0x2
   1400240d7:	jne    0x1400241b1
   1400240dd:	test   r13d,r13d
   1400240e0:	je     0x140024308
   1400240e6:	mov    edx,0xd
   1400240eb:	mov    r14d,DWORD PTR [rsp+0x40]
   1400240f0:	lea    rsi,[rsp+0x720]
   1400240f8:	xor    ecx,ecx
   1400240fa:	mov    eax,ebp
   1400240fc:	sub    eax,r12d
   1400240ff:	cmp    eax,r13d
   140024102:	jae    0x140024135
   140024104:	movzx  eax,WORD PTR [rbp+0x0]
   140024108:	add    rbp,0x2
   14002410c:	cmp    ax,0xa
   140024110:	jne    0x140024121
   140024112:	mov    WORD PTR [rsi],dx
   140024115:	add    r14d,0x2
   140024119:	add    rsi,0x2
   14002411d:	add    rcx,0x2
   140024121:	add    rcx,0x2
   140024125:	mov    WORD PTR [rsi],ax
   140024128:	add    rsi,0x2
   14002412c:	cmp    rcx,0x13fe
   140024133:	jb     0x1400240fa
   140024135:	and    QWORD PTR [rsp+0x20],rbx
   14002413a:	lea    rax,[rsp+0x720]
   140024142:	mov    r8d,esi
   140024145:	sub    r8d,eax
   140024148:	lea    rax,[rip+0x2c4f1]        # 0x140050640
   14002414f:	mov    DWORD PTR [rsp+0x40],r14d
   140024154:	mov    r14,QWORD PTR [rsp+0x50]
   140024159:	lea    r9,[rsp+0x48]
   14002415e:	lea    rdx,[rsp+0x720]
   140024166:	mov    rcx,QWORD PTR [rax+r14*8]
   14002416a:	mov    rcx,QWORD PTR [r15+rcx*1]
   14002416e:	call   QWORD PTR [rip+0x121d4]        # 0x140036348
   140024174:	test   eax,eax
   140024176:	je     0x1400240c6
   14002417c:	add    edi,DWORD PTR [rsp+0x48]
   140024180:	lea    rax,[rsp+0x720]
   140024188:	sub    rsi,rax
   14002418b:	movsxd rax,DWORD PTR [rsp+0x48]
   140024190:	cmp    rax,rsi
   140024193:	jl     0x140023f73
   140024199:	mov    eax,ebp
   14002419b:	mov    edx,0xd
   1400241a0:	sub    eax,r12d
   1400241a3:	cmp    eax,r13d
   1400241a6:	jb     0x1400240eb
   1400241ac:	jmp    0x140023f73
   1400241b1:	test   r13d,r13d
   1400241b4:	je     0x140024308
   1400241ba:	mov    r8d,0xd
   1400241c0:	lea    rcx,[rsp+0x70]
   1400241c5:	xor    edx,edx
   1400241c7:	mov    eax,ebp
   1400241c9:	sub    eax,r12d
   1400241cc:	cmp    eax,r13d
   1400241cf:	jae    0x1400241ff
   1400241d1:	movzx  eax,WORD PTR [rbp+0x0]
   1400241d5:	add    rbp,0x2
   1400241d9:	cmp    ax,0xa
   1400241dd:	jne    0x1400241eb
   1400241df:	mov    WORD PTR [rcx],r8w
   1400241e3:	add    rcx,0x2
   1400241e7:	add    rdx,0x2
   1400241eb:	add    rdx,0x2
   1400241ef:	mov    WORD PTR [rcx],ax
   1400241f2:	add    rcx,0x2
   1400241f6:	cmp    rdx,0x6a8
   1400241fd:	jb     0x1400241c7
   1400241ff:	and    QWORD PTR [rsp+0x38],0x0
   140024205:	and    QWORD PTR [rsp+0x30],0x0
   14002420b:	lea    rax,[rsp+0x70]
   140024210:	sub    ecx,eax
   140024212:	lea    r8,[rsp+0x70]
   140024217:	mov    DWORD PTR [rsp+0x28],0xd55
   14002421f:	mov    eax,ecx
   140024221:	mov    ecx,0xfde9
   140024226:	cdq    
   140024227:	sub    eax,edx
   140024229:	xor    edx,edx
   14002422b:	sar    eax,1
   14002422d:	mov    r9d,eax
   140024230:	lea    rax,[rsp+0x720]
   140024238:	mov    QWORD PTR [rsp+0x20],rax
   14002423d:	call   QWORD PTR [rip+0x12185]        # 0x1400363c8
   140024243:	mov    r14d,eax
   140024246:	test   eax,eax
   140024248:	je     0x140023fce
   14002424e:	xor    esi,esi
   140024250:	mov    rax,QWORD PTR [rsp+0x50]
   140024255:	and    QWORD PTR [rsp+0x20],0x0
   14002425b:	movsxd rcx,esi
   14002425e:	lea    rdx,[rsp+rcx*1+0x720]
   140024266:	mov    r8d,r14d
   140024269:	lea    rcx,[rip+0x2c3d0]        # 0x140050640
   140024270:	mov    rcx,QWORD PTR [rcx+rax*8]
   140024274:	lea    r9,[rsp+0x48]
   140024279:	sub    r8d,esi
   14002427c:	mov    rcx,QWORD PTR [r15+rcx*1]
   140024280:	call   QWORD PTR [rip+0x120c2]        # 0x140036348
   140024286:	test   eax,eax
   140024288:	je     0x140024295
   14002428a:	add    esi,DWORD PTR [rsp+0x48]
   14002428e:	cmp    r14d,esi
   140024291:	jg     0x140024250
   140024293:	jmp    0x14002429d
   140024295:	call   QWORD PTR [rip+0x121c5]        # 0x140036460
   14002429b:	mov    ebx,eax
   14002429d:	cmp    r14d,esi
   1400242a0:	jg     0x140023f6e
   1400242a6:	mov    edi,ebp
   1400242a8:	mov    r8d,0xd
   1400242ae:	sub    edi,r12d
   1400242b1:	cmp    edi,r13d
   1400242b4:	jb     0x1400241c0
   1400242ba:	jmp    0x140023f6e
   1400242bf:	mov    rcx,QWORD PTR [r15+rcx*1]
   1400242c3:	and    QWORD PTR [rsp+0x20],rdi
   1400242c8:	lea    r9,[rsp+0x48]
   1400242cd:	mov    r8d,r13d
   1400242d0:	mov    rdx,r12
   1400242d3:	call   QWORD PTR [rip+0x1206f]        # 0x140036348
   1400242d9:	test   eax,eax
   1400242db:	je     0x1400242e8
   1400242dd:	mov    edi,DWORD PTR [rsp+0x48]
   1400242e1:	xor    ebx,ebx
   1400242e3:	jmp    0x140023f77
   1400242e8:	call   QWORD PTR [rip+0x12172]        # 0x140036460
   1400242ee:	mov    ebx,eax
   1400242f0:	jmp    0x140023f77
   1400242f5:	mov    ecx,ebx
   1400242f7:	call   0x140015f88
   1400242fc:	jmp    0x140023c7f
   140024301:	lea    rax,[rip+0x2c338]        # 0x140050640
   140024308:	mov    rax,QWORD PTR [rax+r14*8]
   14002430c:	test   BYTE PTR [r15+rax*1+0x8],0x40
   140024312:	je     0x14002431f
   140024314:	cmp    BYTE PTR [r12],0x1a
   140024319:	je     0x140023c4d
   14002431f:	call   0x140015f48
   140024324:	mov    DWORD PTR [rax],0x1c
   14002432a:	call   0x140015f68
   14002432f:	and    DWORD PTR [rax],0x0
   140024332:	jmp    0x140023c7f
   140024337:	sub    edi,ebp
   140024339:	mov    eax,edi
   14002433b:	mov    rcx,QWORD PTR [rsp+0x1b20]
   140024343:	xor    rcx,rsp
   140024346:	call   0x1400144f0
   14002434b:	mov    rbx,QWORD PTR [rsp+0x1b88]
   140024353:	add    rsp,0x1b30
   14002435a:	pop    r15
   14002435c:	pop    r14
   14002435e:	pop    r13
   140024360:	pop    r12
   140024362:	pop    rdi
   140024363:	pop    rsi
   140024364:	pop    rbp
   140024365:	ret    
   140024366:	int3   
   140024367:	int3   
   140024368:	mov    QWORD PTR [rsp+0x10],rbx
   14002436d:	mov    QWORD PTR [rsp+0x18],rsi
   140024372:	mov    DWORD PTR [rsp+0x8],ecx
   140024376:	push   rdi
   140024377:	push   r12
   140024379:	push   r13
   14002437b:	push   r14
   14002437d:	push   r15
   14002437f:	sub    rsp,0x30
   140024383:	mov    r12d,r8d
   140024386:	mov    r13,rdx
   140024389:	movsxd rbx,ecx
   14002438c:	cmp    ebx,0xfffffffe
   14002438f:	jne    0x1400243ad
   140024391:	call   0x140015f68
   140024396:	xor    edi,edi
   140024398:	mov    DWORD PTR [rax],edi
   14002439a:	call   0x140015f48
   14002439f:	mov    DWORD PTR [rax],0x9
   1400243a5:	or     eax,0xffffffff
   1400243a8:	jmp    0x140024481
   1400243ad:	xor    edi,edi
   1400243af:	cmp    ebx,edi
   1400243b1:	jl     0x140024458
   1400243b7:	cmp    ebx,DWORD PTR [rip+0x2c267]        # 0x140050624
   1400243bd:	jae    0x140024458
   1400243c3:	mov    rsi,rbx
   1400243c6:	mov    r14,rbx
   1400243c9:	sar    r14,0x5
   1400243cd:	lea    r15,[rip+0x2c26c]        # 0x140050640
   1400243d4:	and    esi,0x1f
   1400243d7:	imul   rsi,rsi,0x58
   1400243db:	mov    rax,QWORD PTR [r15+r14*8]
   1400243df:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   1400243e4:	and    ecx,0x1
   1400243e7:	jne    0x140024414
   1400243e9:	call   0x140015f68
   1400243ee:	mov    DWORD PTR [rax],edi
   1400243f0:	call   0x140015f48
   1400243f5:	mov    DWORD PTR [rax],0x9
   1400243fb:	mov    QWORD PTR [rsp+0x20],rdi
   140024400:	xor    r9d,r9d
   140024403:	xor    r8d,r8d
   140024406:	xor    edx,edx
   140024408:	xor    ecx,ecx
   14002440a:	call   0x1400149a8
   14002440f:	or     eax,0xffffffff
   140024412:	jmp    0x140024481
   140024414:	mov    ecx,ebx
   140024416:	call   0x1400256d0
   14002441b:	nop
   14002441c:	mov    rax,QWORD PTR [r15+r14*8]
   140024420:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140024425:	je     0x140024438
   140024427:	mov    r8d,r12d
   14002442a:	mov    rdx,r13
   14002442d:	mov    ecx,ebx
   14002442f:	call   0x140023c08
   140024434:	mov    edi,eax
   140024436:	jmp    0x14002444d
   140024438:	call   0x140015f48
   14002443d:	mov    DWORD PTR [rax],0x9
   140024443:	call   0x140015f68
   140024448:	mov    DWORD PTR [rax],edi
   14002444a:	or     edi,0xffffffff
   14002444d:	mov    ecx,ebx
   14002444f:	call   0x140025778
   140024454:	mov    eax,edi
   140024456:	jmp    0x140024481
   140024458:	call   0x140015f68
   14002445d:	mov    DWORD PTR [rax],edi
   14002445f:	call   0x140015f48
   140024464:	mov    DWORD PTR [rax],0x9
   14002446a:	mov    QWORD PTR [rsp+0x20],rdi
   14002446f:	xor    r9d,r9d
   140024472:	xor    r8d,r8d
   140024475:	xor    edx,edx
   140024477:	xor    ecx,ecx
   140024479:	call   0x1400149a8
   14002447e:	or     eax,0xffffffff
   140024481:	mov    rbx,QWORD PTR [rsp+0x68]
   140024486:	mov    rsi,QWORD PTR [rsp+0x70]
   14002448b:	add    rsp,0x30
   14002448f:	pop    r15
   140024491:	pop    r14
   140024493:	pop    r13
   140024495:	pop    r12
   140024497:	pop    rdi
   140024498:	ret    
   140024499:	int3   
   14002449a:	int3   
   14002449b:	int3   
   14002449c:	rex push rbx
   14002449e:	sub    rsp,0x20
   1400244a2:	inc    DWORD PTR [rip+0x2aedc]        # 0x14004f384
   1400244a8:	mov    rbx,rcx
   1400244ab:	mov    ecx,0x1000
   1400244b0:	call   0x14001c424
   1400244b5:	mov    QWORD PTR [rbx+0x10],rax
   1400244b9:	test   rax,rax
   1400244bc:	je     0x1400244cb
   1400244be:	or     DWORD PTR [rbx+0x18],0x8
   1400244c2:	mov    DWORD PTR [rbx+0x24],0x1000
   1400244c9:	jmp    0x1400244de
   1400244cb:	or     DWORD PTR [rbx+0x18],0x4
   1400244cf:	lea    rax,[rbx+0x20]
   1400244d3:	mov    DWORD PTR [rbx+0x24],0x2
   1400244da:	mov    QWORD PTR [rbx+0x10],rax
   1400244de:	mov    rax,QWORD PTR [rbx+0x10]
   1400244e2:	and    DWORD PTR [rbx+0x8],0x0
   1400244e6:	mov    QWORD PTR [rbx],rax
   1400244e9:	add    rsp,0x20
   1400244ed:	pop    rbx
   1400244ee:	ret    
   1400244ef:	int3   
   1400244f0:	sub    rsp,0x38
   1400244f4:	cmp    ecx,0xfffffffe
   1400244f7:	jne    0x140024506
   1400244f9:	call   0x140015f48
   1400244fe:	mov    DWORD PTR [rax],0x9
   140024504:	jmp    0x140024558
   140024506:	test   ecx,ecx
   140024508:	js     0x140024538
   14002450a:	cmp    ecx,DWORD PTR [rip+0x2c114]        # 0x140050624
   140024510:	jae    0x140024538
   140024512:	movsxd rcx,ecx
   140024515:	lea    rdx,[rip+0x2c124]        # 0x140050640
   14002451c:	mov    rax,rcx
   14002451f:	and    ecx,0x1f
   140024522:	sar    rax,0x5
   140024526:	imul   rcx,rcx,0x58
   14002452a:	mov    rax,QWORD PTR [rdx+rax*8]
   14002452e:	movsx  eax,BYTE PTR [rax+rcx*1+0x8]
   140024533:	and    eax,0x40
   140024536:	jmp    0x14002455a
   140024538:	call   0x140015f48
   14002453d:	and    QWORD PTR [rsp+0x20],0x0
   140024543:	xor    r9d,r9d
   140024546:	xor    r8d,r8d
   140024549:	xor    edx,edx
   14002454b:	xor    ecx,ecx
   14002454d:	mov    DWORD PTR [rax],0x9
   140024553:	call   0x1400149a8
   140024558:	xor    eax,eax
   14002455a:	add    rsp,0x38
   14002455e:	ret    
   14002455f:	int3   
   140024560:	lea    rax,[rip+0x258c9]        # 0x140049e30
   140024567:	ret    
   140024568:	rex push rbx
   14002456a:	sub    rsp,0x20
   14002456e:	mov    eax,DWORD PTR [rip+0x2c0ac]        # 0x140050620
   140024574:	mov    ebx,0x14
   140024579:	test   eax,eax
   14002457b:	jne    0x140024584
   14002457d:	mov    eax,0x200
   140024582:	jmp    0x140024589
   140024584:	cmp    eax,ebx
   140024586:	cmovl  eax,ebx
   140024589:	movsxd rcx,eax
   14002458c:	mov    edx,0x8
   140024591:	mov    DWORD PTR [rip+0x2c089],eax        # 0x140050620
   140024597:	call   0x14001c490
   14002459c:	mov    QWORD PTR [rip+0x2b05d],rax        # 0x14004f600
   1400245a3:	test   rax,rax
   1400245a6:	jne    0x1400245cc
   1400245a8:	lea    edx,[rax+0x8]
   1400245ab:	mov    rcx,rbx
   1400245ae:	mov    DWORD PTR [rip+0x2c06c],ebx        # 0x140050620
   1400245b4:	call   0x14001c490
   1400245b9:	mov    QWORD PTR [rip+0x2b040],rax        # 0x14004f600
   1400245c0:	test   rax,rax
   1400245c3:	jne    0x1400245cc
   1400245c5:	mov    eax,0x1a
   1400245ca:	jmp    0x140024644
   1400245cc:	xor    ecx,ecx
   1400245ce:	lea    rdx,[rip+0x2585b]        # 0x140049e30
   1400245d5:	mov    QWORD PTR [rcx+rax*1],rdx
   1400245d9:	add    rdx,0x30
   1400245dd:	add    rcx,0x8
   1400245e1:	sub    rbx,0x1
   1400245e5:	je     0x1400245f0
   1400245e7:	mov    rax,QWORD PTR [rip+0x2b012]        # 0x14004f600
   1400245ee:	jmp    0x1400245d5
   1400245f0:	xor    r8d,r8d
   1400245f3:	lea    rdx,[rip+0x25852]        # 0x140049e4c
   1400245fa:	lea    r9d,[r8+0x3]
   1400245fe:	mov    rcx,r8
   140024601:	lea    r10,[rip+0x2c038]        # 0x140050640
   140024608:	mov    rax,r8
   14002460b:	sar    rax,0x5
   14002460f:	and    ecx,0x1f
   140024612:	mov    rax,QWORD PTR [r10+rax*8]
   140024616:	imul   rcx,rcx,0x58
   14002461a:	mov    r10,QWORD PTR [rcx+rax*1]
   14002461e:	cmp    r10,0xffffffffffffffff
   140024622:	je     0x14002462f
   140024624:	cmp    r10,0xfffffffffffffffe
   140024628:	je     0x14002462f
   14002462a:	test   r10,r10
   14002462d:	jne    0x140024635
   14002462f:	mov    DWORD PTR [rdx],0xfffffffe
   140024635:	inc    r8
   140024638:	add    rdx,0x30
   14002463c:	sub    r9,0x1
   140024640:	jne    0x1400245fe
   140024642:	xor    eax,eax
   140024644:	add    rsp,0x20
   140024648:	pop    rbx
   140024649:	ret    
   14002464a:	int3   
   14002464b:	int3   
   14002464c:	sub    rsp,0x28
   140024650:	call   0x140025b1c
   140024655:	cmp    BYTE PTR [rip+0x29f04],0x0        # 0x14004e560
   14002465c:	je     0x140024663
   14002465e:	call   0x1400258b4
   140024663:	mov    rcx,QWORD PTR [rip+0x2af96]        # 0x14004f600
   14002466a:	add    rsp,0x28
   14002466e:	jmp    0x140014f10
   140024673:	int3   
   140024674:	rex push rbx
   140024676:	sub    rsp,0x20
   14002467a:	mov    rbx,rcx
   14002467d:	lea    rcx,[rip+0x257ac]        # 0x140049e30
   140024684:	cmp    rbx,rcx
   140024687:	jb     0x1400246c3
   140024689:	lea    rax,[rip+0x25b30]        # 0x14004a1c0
   140024690:	cmp    rbx,rax
   140024693:	ja     0x1400246c3
   140024695:	mov    rdx,rbx
   140024698:	movabs rax,0x2aaaaaaaaaaaaaab
   1400246a2:	sub    rdx,rcx
   1400246a5:	imul   rdx
   1400246a8:	sar    rdx,0x3
   1400246ac:	mov    rcx,rdx
   1400246af:	shr    rcx,0x3f
   1400246b3:	lea    ecx,[rcx+rdx*1+0x10]
   1400246b7:	call   0x140020744
   1400246bc:	bts    DWORD PTR [rbx+0x18],0xf
   1400246c1:	jmp    0x1400246cd
   1400246c3:	lea    rcx,[rbx+0x30]
   1400246c7:	call   QWORD PTR [rip+0x11d7b]        # 0x140036448
   1400246cd:	add    rsp,0x20
   1400246d1:	pop    rbx
   1400246d2:	ret    
   1400246d3:	int3   
   1400246d4:	rex push rbx
   1400246d6:	sub    rsp,0x20
   1400246da:	cmp    ecx,0x14
   1400246dd:	mov    rbx,rdx
   1400246e0:	jge    0x1400246f1
   1400246e2:	add    ecx,0x10
   1400246e5:	call   0x140020744
   1400246ea:	bts    DWORD PTR [rbx+0x18],0xf
   1400246ef:	jmp    0x1400246fb
   1400246f1:	lea    rcx,[rdx+0x30]
   1400246f5:	call   QWORD PTR [rip+0x11d4d]        # 0x140036448
   1400246fb:	add    rsp,0x20
   1400246ff:	pop    rbx
   140024700:	ret    
   140024701:	int3   
   140024702:	int3   
   140024703:	int3   
   140024704:	sub    rsp,0x28
   140024708:	lea    rdx,[rip+0x25721]        # 0x140049e30
   14002470f:	cmp    rcx,rdx
   140024712:	jb     0x14002474b
   140024714:	lea    rax,[rip+0x25aa5]        # 0x14004a1c0
   14002471b:	cmp    rcx,rax
   14002471e:	ja     0x14002474b
   140024720:	btr    DWORD PTR [rcx+0x18],0xf
   140024725:	sub    rcx,rdx
   140024728:	movabs rax,0x2aaaaaaaaaaaaaab
   140024732:	imul   rcx
   140024735:	sar    rdx,0x3
   140024739:	mov    rcx,rdx
   14002473c:	shr    rcx,0x3f
   140024740:	lea    ecx,[rcx+rdx*1+0x10]
   140024744:	call   0x140020644
   140024749:	jmp    0x140024755
   14002474b:	add    rcx,0x30
   14002474f:	call   QWORD PTR [rip+0x11d03]        # 0x140036458
   140024755:	add    rsp,0x28
   140024759:	ret    
   14002475a:	int3   
   14002475b:	int3   
   14002475c:	sub    rsp,0x28
   140024760:	cmp    ecx,0x14
   140024763:	jge    0x140024774
   140024765:	btr    DWORD PTR [rdx+0x18],0xf
   14002476a:	add    ecx,0x10
   14002476d:	call   0x140020644
   140024772:	jmp    0x14002477e
   140024774:	lea    rcx,[rdx+0x30]
   140024778:	call   QWORD PTR [rip+0x11cda]        # 0x140036458
   14002477e:	add    rsp,0x28
   140024782:	ret    
   140024783:	int3   
   140024784:	sub    rsp,0x38
   140024788:	test   rcx,rcx
   14002478b:	jne    0x1400247b2
   14002478d:	call   0x140015f48
   140024792:	and    QWORD PTR [rsp+0x20],0x0
   140024798:	xor    r9d,r9d
   14002479b:	xor    r8d,r8d
   14002479e:	xor    edx,edx
   1400247a0:	xor    ecx,ecx
   1400247a2:	mov    DWORD PTR [rax],0x16
   1400247a8:	call   0x1400149a8
   1400247ad:	or     eax,0xffffffff
   1400247b0:	jmp    0x1400247b5
   1400247b2:	mov    eax,DWORD PTR [rcx+0x1c]
   1400247b5:	add    rsp,0x38
   1400247b9:	ret    
   1400247ba:	int3   
   1400247bb:	int3   
   1400247bc:	mov    rcx,QWORD PTR [rip+0x245fd]        # 0x140048dc0
   1400247c3:	xor    eax,eax
   1400247c5:	or     rcx,0x1
   1400247c9:	cmp    QWORD PTR [rip+0x2abb8],rcx        # 0x14004f388
   1400247d0:	sete   al
   1400247d3:	ret    
   1400247d4:	mov    QWORD PTR [rsp+0x8],rbx
   1400247d9:	mov    QWORD PTR [rsp+0x10],rbp
   1400247de:	mov    QWORD PTR [rsp+0x18],rsi
   1400247e3:	push   rdi
   1400247e4:	sub    rsp,0x50
   1400247e8:	xor    ebp,ebp
   1400247ea:	mov    rsi,r8
   1400247ed:	mov    rdi,rdx
   1400247f0:	mov    rbx,rcx
   1400247f3:	cmp    rdx,rbp
   1400247f6:	je     0x14002480a
   1400247f8:	cmp    r8,rbp
   1400247fb:	je     0x14002480a
   1400247fd:	cmp    BYTE PTR [rdx],bpl
   140024800:	jne    0x140024821
   140024802:	cmp    rcx,rbp
   140024805:	je     0x14002480a
   140024807:	mov    WORD PTR [rcx],bp
   14002480a:	xor    eax,eax
   14002480c:	mov    rbx,QWORD PTR [rsp+0x60]
   140024811:	mov    rbp,QWORD PTR [rsp+0x68]
   140024816:	mov    rsi,QWORD PTR [rsp+0x70]
   14002481b:	add    rsp,0x50
   14002481f:	pop    rdi
   140024820:	ret    
   140024821:	lea    rcx,[rsp+0x30]
   140024826:	mov    rdx,r9
   140024829:	call   0x140014a6c
   14002482e:	mov    r11,QWORD PTR [rsp+0x30]
   140024833:	cmp    DWORD PTR [r11+0x14],ebp
   140024837:	jne    0x14002485e
   140024839:	cmp    rbx,rbp
   14002483c:	je     0x140024844
   14002483e:	movzx  eax,BYTE PTR [rdi]
   140024841:	mov    WORD PTR [rbx],ax
   140024844:	cmp    BYTE PTR [rsp+0x48],bpl
   140024849:	je     0x140024857
   14002484b:	mov    rax,QWORD PTR [rsp+0x40]
   140024850:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024857:	mov    eax,0x1
   14002485c:	jmp    0x14002480c
   14002485e:	movzx  ecx,BYTE PTR [rdi]
   140024861:	lea    rdx,[rsp+0x30]
   140024866:	call   0x14001988c
   14002486b:	cmp    eax,ebp
   14002486d:	je     0x14002490f
   140024873:	mov    rcx,QWORD PTR [rsp+0x30]
   140024878:	mov    r9d,DWORD PTR [rcx+0x10c]
   14002487f:	cmp    r9d,0x1
   140024883:	jle    0x1400248b5
   140024885:	cmp    esi,r9d
   140024888:	jl     0x1400248b5
   14002488a:	mov    ecx,DWORD PTR [rcx+0x4]
   14002488d:	mov    eax,ebp
   14002488f:	cmp    rbx,rbp
   140024892:	setne  al
   140024895:	mov    r8,rdi
   140024898:	mov    edx,0x9
   14002489d:	mov    DWORD PTR [rsp+0x28],eax
   1400248a1:	mov    QWORD PTR [rsp+0x20],rbx
   1400248a6:	call   QWORD PTR [rip+0x11b04]        # 0x1400363b0
   1400248ac:	mov    rcx,QWORD PTR [rsp+0x30]
   1400248b1:	cmp    eax,ebp
   1400248b3:	jne    0x1400248c7
   1400248b5:	movsxd rax,DWORD PTR [rcx+0x10c]
   1400248bc:	cmp    rsi,rax
   1400248bf:	jb     0x1400248e9
   1400248c1:	cmp    BYTE PTR [rdi+0x1],bpl
   1400248c5:	je     0x1400248e9
   1400248c7:	mov    eax,DWORD PTR [rcx+0x10c]
   1400248cd:	cmp    BYTE PTR [rsp+0x48],bpl
   1400248d2:	je     0x14002480c
   1400248d8:	mov    rcx,QWORD PTR [rsp+0x40]
   1400248dd:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400248e4:	jmp    0x14002480c
   1400248e9:	call   0x140015f48
   1400248ee:	mov    DWORD PTR [rax],0x2a
   1400248f4:	cmp    BYTE PTR [rsp+0x48],bpl
   1400248f9:	je     0x140024907
   1400248fb:	mov    rax,QWORD PTR [rsp+0x40]
   140024900:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024907:	or     eax,0xffffffff
   14002490a:	jmp    0x14002480c
   14002490f:	mov    eax,ebp
   140024911:	mov    r9d,0x1
   140024917:	cmp    rbx,rbp
   14002491a:	setne  al
   14002491d:	lea    edx,[r9+0x8]
   140024921:	mov    r8,rdi
   140024924:	mov    DWORD PTR [rsp+0x28],eax
   140024928:	mov    rax,QWORD PTR [rsp+0x30]
   14002492d:	mov    QWORD PTR [rsp+0x20],rbx
   140024932:	mov    ecx,DWORD PTR [rax+0x4]
   140024935:	call   QWORD PTR [rip+0x11a75]        # 0x1400363b0
   14002493b:	cmp    eax,ebp
   14002493d:	jne    0x140024844
   140024943:	jmp    0x1400248e9
   140024945:	int3   
   140024946:	int3   
   140024947:	int3   
   140024948:	xor    r9d,r9d
   14002494b:	jmp    0x1400247d4
   140024950:	mov    QWORD PTR [rsp+0x8],rbx
   140024955:	mov    WORD PTR [rsp+0x20],r9w
   14002495b:	push   rbp
   14002495c:	push   rsi
   14002495d:	push   rdi
   14002495e:	sub    rsp,0x60
   140024962:	xor    ebp,ebp
   140024964:	mov    rdi,r8
   140024967:	mov    rsi,rdx
   14002496a:	mov    rbx,rcx
   14002496d:	cmp    rdx,rbp
   140024970:	jne    0x140024985
   140024972:	cmp    r8,rbp
   140024975:	jbe    0x140024985
   140024977:	cmp    rcx,rbp
   14002497a:	je     0x14002497e
   14002497c:	mov    DWORD PTR [rcx],ebp
   14002497e:	xor    eax,eax
   140024980:	jmp    0x140024a29
   140024985:	cmp    rcx,rbp
   140024988:	je     0x14002498d
   14002498a:	or     DWORD PTR [rcx],0xffffffff
   14002498d:	cmp    r8,0x7fffffff
   140024994:	jbe    0x1400249ba
   140024996:	call   0x140015f48
   14002499b:	mov    ebx,0x16
   1400249a0:	xor    r9d,r9d
   1400249a3:	xor    r8d,r8d
   1400249a6:	xor    edx,edx
   1400249a8:	xor    ecx,ecx
   1400249aa:	mov    DWORD PTR [rax],ebx
   1400249ac:	mov    QWORD PTR [rsp+0x20],rbp
   1400249b1:	call   0x1400149a8
   1400249b6:	mov    eax,ebx
   1400249b8:	jmp    0x140024a29
   1400249ba:	mov    rdx,QWORD PTR [rsp+0xa0]
   1400249c2:	lea    rcx,[rsp+0x40]
   1400249c7:	call   0x140014a6c
   1400249cc:	mov    r11,QWORD PTR [rsp+0x40]
   1400249d1:	cmp    DWORD PTR [r11+0x14],ebp
   1400249d5:	jne    0x140024aa8
   1400249db:	movzx  eax,WORD PTR [rsp+0x98]
   1400249e3:	mov    ecx,0xff
   1400249e8:	cmp    ax,cx
   1400249eb:	jbe    0x140024a39
   1400249ed:	cmp    rsi,rbp
   1400249f0:	je     0x140024a04
   1400249f2:	cmp    rdi,rbp
   1400249f5:	jbe    0x140024a04
   1400249f7:	mov    r8,rdi
   1400249fa:	xor    edx,edx
   1400249fc:	mov    rcx,rsi
   1400249ff:	call   0x140015b00
   140024a04:	call   0x140015f48
   140024a09:	mov    DWORD PTR [rax],0x2a
   140024a0f:	call   0x140015f48
   140024a14:	mov    eax,DWORD PTR [rax]
   140024a16:	cmp    BYTE PTR [rsp+0x58],bpl
   140024a1b:	je     0x140024a29
   140024a1d:	mov    rcx,QWORD PTR [rsp+0x50]
   140024a22:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024a29:	mov    rbx,QWORD PTR [rsp+0x80]
   140024a31:	add    rsp,0x60
   140024a35:	pop    rdi
   140024a36:	pop    rsi
   140024a37:	pop    rbp
   140024a38:	ret    
   140024a39:	cmp    rsi,rbp
   140024a3c:	je     0x140024a81
   140024a3e:	cmp    rdi,rbp
   140024a41:	ja     0x140024a7f
   140024a43:	call   0x140015f48
   140024a48:	mov    ebx,0x22
   140024a4d:	xor    r9d,r9d
   140024a50:	xor    r8d,r8d
   140024a53:	xor    edx,edx
   140024a55:	xor    ecx,ecx
   140024a57:	mov    DWORD PTR [rax],ebx
   140024a59:	mov    QWORD PTR [rsp+0x20],rbp
   140024a5e:	call   0x1400149a8
   140024a63:	cmp    BYTE PTR [rsp+0x58],bpl
   140024a68:	je     0x1400249b6
   140024a6e:	mov    rcx,QWORD PTR [rsp+0x50]
   140024a73:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024a7a:	jmp    0x1400249b6
   140024a7f:	mov    BYTE PTR [rsi],al
   140024a81:	cmp    rbx,rbp
   140024a84:	je     0x140024a8c
   140024a86:	mov    DWORD PTR [rbx],0x1
   140024a8c:	cmp    BYTE PTR [rsp+0x58],bpl
   140024a91:	je     0x14002497e
   140024a97:	mov    rax,QWORD PTR [rsp+0x50]
   140024a9c:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024aa3:	jmp    0x14002497e
   140024aa8:	lea    rax,[rsp+0x88]
   140024ab0:	mov    DWORD PTR [rsp+0x88],ebp
   140024ab7:	mov    ecx,DWORD PTR [r11+0x4]
   140024abb:	mov    QWORD PTR [rsp+0x38],rax
   140024ac0:	mov    QWORD PTR [rsp+0x30],rbp
   140024ac5:	lea    r8,[rsp+0x98]
   140024acd:	mov    r9d,0x1
   140024ad3:	xor    edx,edx
   140024ad5:	mov    DWORD PTR [rsp+0x28],edi
   140024ad9:	mov    QWORD PTR [rsp+0x20],rsi
   140024ade:	call   QWORD PTR [rip+0x118e4]        # 0x1400363c8
   140024ae4:	cmp    eax,ebp
   140024ae6:	je     0x140024afe
   140024ae8:	cmp    DWORD PTR [rsp+0x88],ebp
   140024aef:	jne    0x140024a04
   140024af5:	cmp    rbx,rbp
   140024af8:	je     0x140024a8c
   140024afa:	mov    DWORD PTR [rbx],eax
   140024afc:	jmp    0x140024a8c
   140024afe:	call   QWORD PTR [rip+0x1195c]        # 0x140036460
   140024b04:	cmp    eax,0x7a
   140024b07:	jne    0x140024a04
   140024b0d:	cmp    rsi,rbp
   140024b10:	je     0x140024b24
   140024b12:	cmp    rdi,rbp
   140024b15:	jbe    0x140024b24
   140024b17:	mov    r8,rdi
   140024b1a:	xor    edx,edx
   140024b1c:	mov    rcx,rsi
   140024b1f:	call   0x140015b00
   140024b24:	call   0x140015f48
   140024b29:	mov    ebx,0x22
   140024b2e:	xor    r9d,r9d
   140024b31:	xor    r8d,r8d
   140024b34:	xor    edx,edx
   140024b36:	xor    ecx,ecx
   140024b38:	mov    DWORD PTR [rax],ebx
   140024b3a:	mov    QWORD PTR [rsp+0x20],rbp
   140024b3f:	call   0x1400149a8
   140024b44:	cmp    BYTE PTR [rsp+0x58],bpl
   140024b49:	je     0x1400249b6
   140024b4f:	mov    rax,QWORD PTR [rsp+0x50]
   140024b54:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024b5b:	jmp    0x1400249b6
   140024b60:	sub    rsp,0x38
   140024b64:	and    QWORD PTR [rsp+0x20],0x0
   140024b6a:	call   0x140024950
   140024b6f:	add    rsp,0x38
   140024b73:	ret    
   140024b74:	mov    QWORD PTR [rsp+0x18],rbx
   140024b79:	push   rdi
   140024b7a:	sub    rsp,0x80
   140024b81:	mov    rax,QWORD PTR [rip+0x24238]        # 0x140048dc0
   140024b88:	xor    rax,rsp
   140024b8b:	mov    QWORD PTR [rsp+0x78],rax
   140024b90:	mov    rdi,rcx
   140024b93:	mov    rbx,rdx
   140024b96:	lea    rcx,[rsp+0x40]
   140024b9b:	mov    rdx,r8
   140024b9e:	call   0x140014a6c
   140024ba3:	lea    r11,[rsp+0x40]
   140024ba8:	lea    rdx,[rsp+0x60]
   140024bad:	mov    QWORD PTR [rsp+0x38],r11
   140024bb2:	and    DWORD PTR [rsp+0x30],0x0
   140024bb7:	and    DWORD PTR [rsp+0x28],0x0
   140024bbc:	and    DWORD PTR [rsp+0x20],0x0
   140024bc1:	lea    rcx,[rsp+0x68]
   140024bc6:	xor    r9d,r9d
   140024bc9:	mov    r8,rbx
   140024bcc:	call   0x14002683c
   140024bd1:	lea    rcx,[rsp+0x68]
   140024bd6:	mov    rdx,rdi
   140024bd9:	mov    ebx,eax
   140024bdb:	call   0x140025c34
   140024be0:	mov    edx,0x3
   140024be5:	test   dl,bl
   140024be7:	jne    0x140024c24
   140024be9:	cmp    eax,0x1
   140024bec:	jne    0x140024c05
   140024bee:	cmp    BYTE PTR [rsp+0x58],0x0
   140024bf3:	je     0x140024c01
   140024bf5:	mov    rcx,QWORD PTR [rsp+0x50]
   140024bfa:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024c01:	mov    eax,edx
   140024c03:	jmp    0x140024c58
   140024c05:	cmp    eax,0x2
   140024c08:	jne    0x140024c43
   140024c0a:	cmp    BYTE PTR [rsp+0x58],0x0
   140024c0f:	je     0x140024c1d
   140024c11:	mov    rax,QWORD PTR [rsp+0x50]
   140024c16:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024c1d:	mov    eax,0x4
   140024c22:	jmp    0x140024c58
   140024c24:	test   bl,0x1
   140024c27:	jne    0x140024c0a
   140024c29:	test   bl,0x2
   140024c2c:	je     0x140024c43
   140024c2e:	cmp    BYTE PTR [rsp+0x58],0x0
   140024c33:	je     0x140024c01
   140024c35:	mov    rax,QWORD PTR [rsp+0x50]
   140024c3a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024c41:	jmp    0x140024c01
   140024c43:	cmp    BYTE PTR [rsp+0x58],0x0
   140024c48:	je     0x140024c56
   140024c4a:	mov    rax,QWORD PTR [rsp+0x50]
   140024c4f:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024c56:	xor    eax,eax
   140024c58:	mov    rcx,QWORD PTR [rsp+0x78]
   140024c5d:	xor    rcx,rsp
   140024c60:	call   0x1400144f0
   140024c65:	mov    rbx,QWORD PTR [rsp+0xa0]
   140024c6d:	add    rsp,0x80
   140024c74:	pop    rdi
   140024c75:	ret    
   140024c76:	int3   
   140024c77:	int3   
   140024c78:	mov    QWORD PTR [rsp+0x18],rbx
   140024c7d:	push   rdi
   140024c7e:	sub    rsp,0x80
   140024c85:	mov    rax,QWORD PTR [rip+0x24134]        # 0x140048dc0
   140024c8c:	xor    rax,rsp
   140024c8f:	mov    QWORD PTR [rsp+0x78],rax
   140024c94:	mov    rdi,rcx
   140024c97:	mov    rbx,rdx
   140024c9a:	lea    rcx,[rsp+0x40]
   140024c9f:	mov    rdx,r8
   140024ca2:	call   0x140014a6c
   140024ca7:	lea    r11,[rsp+0x40]
   140024cac:	lea    rdx,[rsp+0x60]
   140024cb1:	mov    QWORD PTR [rsp+0x38],r11
   140024cb6:	and    DWORD PTR [rsp+0x30],0x0
   140024cbb:	and    DWORD PTR [rsp+0x28],0x0
   140024cc0:	and    DWORD PTR [rsp+0x20],0x0
   140024cc5:	lea    rcx,[rsp+0x68]
   140024cca:	xor    r9d,r9d
   140024ccd:	mov    r8,rbx
   140024cd0:	call   0x14002683c
   140024cd5:	lea    rcx,[rsp+0x68]
   140024cda:	mov    rdx,rdi
   140024cdd:	mov    ebx,eax
   140024cdf:	call   0x140026238
   140024ce4:	mov    edx,0x3
   140024ce9:	test   dl,bl
   140024ceb:	jne    0x140024d28
   140024ced:	cmp    eax,0x1
   140024cf0:	jne    0x140024d09
   140024cf2:	cmp    BYTE PTR [rsp+0x58],0x0
   140024cf7:	je     0x140024d05
   140024cf9:	mov    rcx,QWORD PTR [rsp+0x50]
   140024cfe:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140024d05:	mov    eax,edx
   140024d07:	jmp    0x140024d5c
   140024d09:	cmp    eax,0x2
   140024d0c:	jne    0x140024d47
   140024d0e:	cmp    BYTE PTR [rsp+0x58],0x0
   140024d13:	je     0x140024d21
   140024d15:	mov    rax,QWORD PTR [rsp+0x50]
   140024d1a:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024d21:	mov    eax,0x4
   140024d26:	jmp    0x140024d5c
   140024d28:	test   bl,0x1
   140024d2b:	jne    0x140024d0e
   140024d2d:	test   bl,0x2
   140024d30:	je     0x140024d47
   140024d32:	cmp    BYTE PTR [rsp+0x58],0x0
   140024d37:	je     0x140024d05
   140024d39:	mov    rax,QWORD PTR [rsp+0x50]
   140024d3e:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024d45:	jmp    0x140024d05
   140024d47:	cmp    BYTE PTR [rsp+0x58],0x0
   140024d4c:	je     0x140024d5a
   140024d4e:	mov    rax,QWORD PTR [rsp+0x50]
   140024d53:	and    DWORD PTR [rax+0xc8],0xfffffffd
   140024d5a:	xor    eax,eax
   140024d5c:	mov    rcx,QWORD PTR [rsp+0x78]
   140024d61:	xor    rcx,rsp
   140024d64:	call   0x1400144f0
   140024d69:	mov    rbx,QWORD PTR [rsp+0xa0]
   140024d71:	add    rsp,0x80
   140024d78:	pop    rdi
   140024d79:	ret    
   140024d7a:	int3   
   140024d7b:	int3   
   140024d7c:	mov    QWORD PTR [rsp+0x8],rbx
   140024d81:	push   rdi
   140024d82:	sub    rsp,0x30
   140024d86:	mov    r10,QWORD PTR [r9+0x10]
   140024d8a:	mov    rbx,rcx
   140024d8d:	test   rcx,rcx
   140024d90:	jne    0x140024dba
   140024d92:	call   0x140015f48
   140024d97:	mov    ebx,0x16
   140024d9c:	and    QWORD PTR [rsp+0x20],0x0
   140024da2:	xor    r9d,r9d
   140024da5:	xor    r8d,r8d
   140024da8:	xor    edx,edx
   140024daa:	xor    ecx,ecx
   140024dac:	mov    DWORD PTR [rax],ebx
   140024dae:	call   0x1400149a8
   140024db3:	mov    eax,ebx
   140024db5:	jmp    0x140024e4a
   140024dba:	test   rdx,rdx
   140024dbd:	je     0x140024d92
   140024dbf:	xor    eax,eax
   140024dc1:	test   r8d,r8d
   140024dc4:	mov    BYTE PTR [rcx],0x0
   140024dc7:	cmovg  eax,r8d
   140024dcb:	inc    eax
   140024dcd:	cdqe   
   140024dcf:	cmp    rdx,rax
   140024dd2:	ja     0x140024de0
   140024dd4:	call   0x140015f48
   140024dd9:	mov    ebx,0x22
   140024dde:	jmp    0x140024d9c
   140024de0:	mov    BYTE PTR [rcx],0x30
   140024de3:	lea    rax,[rcx+0x1]
   140024de7:	jmp    0x140024e05
   140024de9:	cmp    BYTE PTR [r10],0x0
   140024ded:	je     0x140024df8
   140024def:	movsx  ecx,BYTE PTR [r10]
   140024df3:	inc    r10
   140024df6:	jmp    0x140024dfd
   140024df8:	mov    ecx,0x30
   140024dfd:	mov    BYTE PTR [rax],cl
   140024dff:	inc    rax
   140024e02:	dec    r8d
   140024e05:	test   r8d,r8d
   140024e08:	jg     0x140024de9
   140024e0a:	mov    BYTE PTR [rax],0x0
   140024e0d:	js     0x140024e24
   140024e0f:	cmp    BYTE PTR [r10],0x35
   140024e13:	jl     0x140024e24
   140024e15:	jmp    0x140024e1a
   140024e17:	mov    BYTE PTR [rax],0x30
   140024e1a:	dec    rax
   140024e1d:	cmp    BYTE PTR [rax],0x39
   140024e20:	je     0x140024e17
   140024e22:	inc    BYTE PTR [rax]
   140024e24:	cmp    BYTE PTR [rbx],0x31
   140024e27:	jne    0x140024e2f
   140024e29:	inc    DWORD PTR [r9+0x4]
   140024e2d:	jmp    0x140024e48
   140024e2f:	lea    rcx,[rbx+0x1]
   140024e33:	call   0x140015c00
   140024e38:	lea    rdx,[rbx+0x1]
   140024e3c:	mov    rcx,rbx
   140024e3f:	lea    r8,[rax+0x1]
   140024e43:	call   0x1400160c0
   140024e48:	xor    eax,eax
   140024e4a:	mov    rbx,QWORD PTR [rsp+0x40]
   140024e4f:	add    rsp,0x30
   140024e53:	pop    rdi
   140024e54:	ret    
   140024e55:	int3   
   140024e56:	int3   
   140024e57:	int3   
   140024e58:	mov    QWORD PTR [rsp+0x8],rbx
   140024e5d:	mov    QWORD PTR [rsp+0x10],rdi
   140024e62:	movzx  r10d,WORD PTR [rdx+0x6]
   140024e67:	mov    r11d,DWORD PTR [rdx+0x4]
   140024e6b:	mov    eax,0x8000
   140024e70:	mov    r8w,r10w
   140024e74:	and    r10w,ax
   140024e78:	mov    edi,0x7ff
   140024e7d:	shr    r8w,0x4
   140024e82:	and    r11d,0xfffff
   140024e89:	mov    r9,rcx
   140024e8c:	mov    ecx,DWORD PTR [rdx]
   140024e8e:	and    r8w,di
   140024e92:	mov    ebx,0x80000000
   140024e97:	movzx  eax,r8w
   140024e9b:	test   eax,eax
   140024e9d:	je     0x140024eb6
   140024e9f:	cmp    eax,edi
   140024ea1:	je     0x140024eae
   140024ea3:	mov    eax,0x3c00
   140024ea8:	add    r8w,ax
   140024eac:	jmp    0x140024ed3
   140024eae:	mov    r8d,0x7fff
   140024eb4:	jmp    0x140024ed3
   140024eb6:	test   r11d,r11d
   140024eb9:	jne    0x140024ec8
   140024ebb:	test   ecx,ecx
   140024ebd:	jne    0x140024ec8
   140024ebf:	and    DWORD PTR [r9+0x4],ecx
   140024ec3:	and    DWORD PTR [r9],ecx
   140024ec6:	jmp    0x140024f1e
   140024ec8:	mov    eax,0x3c01
   140024ecd:	add    r8w,ax
   140024ed1:	xor    ebx,ebx
   140024ed3:	mov    eax,ecx
   140024ed5:	shl    r11d,0xb
   140024ed9:	shl    ecx,0xb
   140024edc:	shr    eax,0x15
   140024edf:	mov    DWORD PTR [r9],ecx
   140024ee2:	or     eax,r11d
   140024ee5:	or     eax,ebx
   140024ee7:	bt     eax,0x1f
   140024eeb:	mov    DWORD PTR [r9+0x4],eax
   140024eef:	jb     0x140024f1a
   140024ef1:	mov    ecx,DWORD PTR [r9]
   140024ef4:	mov    edx,DWORD PTR [r9+0x4]
   140024ef8:	add    edx,edx
   140024efa:	mov    eax,ecx
   140024efc:	shr    eax,0x1f
   140024eff:	or     edx,eax
   140024f01:	lea    eax,[rcx+rcx*1]
   140024f04:	mov    DWORD PTR [r9],eax
   140024f07:	mov    eax,0xffff
   140024f0c:	mov    DWORD PTR [r9+0x4],edx
   140024f10:	add    r8w,ax
   140024f14:	bt     edx,0x1f
   140024f18:	jae    0x140024ef1
   140024f1a:	or     r10w,r8w
   140024f1e:	mov    rbx,QWORD PTR [rsp+0x8]
   140024f23:	mov    rdi,QWORD PTR [rsp+0x10]
   140024f28:	mov    WORD PTR [r9+0x8],r10w
   140024f2d:	ret    
   140024f2e:	int3   
   140024f2f:	int3   
   140024f30:	rex push rbx
   140024f32:	push   rsi
   140024f33:	push   rdi
   140024f34:	sub    rsp,0x80
   140024f3b:	mov    rax,QWORD PTR [rip+0x23e7e]        # 0x140048dc0
   140024f42:	xor    rax,rsp
   140024f45:	mov    QWORD PTR [rsp+0x70],rax
   140024f4a:	mov    rdi,rdx
   140024f4d:	mov    QWORD PTR [rsp+0x30],rcx
   140024f52:	lea    rdx,[rsp+0x30]
   140024f57:	lea    rcx,[rsp+0x40]
   140024f5c:	mov    rbx,r9
   140024f5f:	mov    rsi,r8
   140024f62:	call   0x140024e58
   140024f67:	lea    rcx,[rsp+0x40]
   140024f6c:	lea    r11,[rsp+0x30]
   140024f71:	mov    rax,QWORD PTR [rcx]
   140024f74:	xor    r8d,r8d
   140024f77:	lea    r9,[rsp+0x50]
   140024f7c:	mov    QWORD PTR [r11],rax
   140024f7f:	movzx  eax,WORD PTR [rcx+0x8]
   140024f83:	lea    edx,[r8+0x11]
   140024f87:	lea    rcx,[rsp+0x30]
   140024f8c:	mov    WORD PTR [r11+0x8],ax
   140024f91:	call   0x140027138
   140024f96:	lea    r8,[rsp+0x54]
   140024f9b:	mov    rdx,rbx
   140024f9e:	mov    DWORD PTR [rdi+0x8],eax
   140024fa1:	movsx  eax,BYTE PTR [rsp+0x52]
   140024fa6:	mov    rcx,rsi
   140024fa9:	mov    DWORD PTR [rdi],eax
   140024fab:	movsx  eax,WORD PTR [rsp+0x50]
   140024fb0:	mov    DWORD PTR [rdi+0x4],eax
   140024fb3:	call   0x1400164d8
   140024fb8:	test   eax,eax
   140024fba:	je     0x140024fd1
   140024fbc:	and    QWORD PTR [rsp+0x20],0x0
   140024fc2:	xor    r9d,r9d
   140024fc5:	xor    r8d,r8d
   140024fc8:	xor    edx,edx
   140024fca:	xor    ecx,ecx
   140024fcc:	call   0x140014880
   140024fd1:	mov    QWORD PTR [rdi+0x10],rsi
   140024fd5:	mov    rax,rdi
   140024fd8:	mov    rcx,QWORD PTR [rsp+0x70]
   140024fdd:	xor    rcx,rsp
   140024fe0:	call   0x1400144f0
   140024fe5:	add    rsp,0x80
   140024fec:	pop    rdi
   140024fed:	pop    rsi
   140024fee:	pop    rbx
   140024fef:	ret    
   140024ff0:	mov    ecx,0x2
   140024ff5:	jmp    0x140016e9c
   140024ffa:	int3   
   140024ffb:	int3   
   140024ffc:	mov    QWORD PTR [rsp+0x8],rbx
   140025001:	mov    QWORD PTR [rsp+0x10],rsi
   140025006:	push   rdi
   140025007:	sub    rsp,0x30
   14002500b:	mov    rdi,rcx
   14002500e:	test   rcx,rcx
   140025011:	jne    0x140025037
   140025013:	call   0x140015f48
   140025018:	and    QWORD PTR [rsp+0x20],rdi
   14002501d:	xor    r9d,r9d
   140025020:	xor    r8d,r8d
   140025023:	xor    edx,edx
   140025025:	xor    ecx,ecx
   140025027:	mov    DWORD PTR [rax],0x16
   14002502d:	call   0x1400149a8
   140025032:	jmp    0x140025143
   140025037:	mov    eax,DWORD PTR [rcx+0x18]
   14002503a:	test   al,0x83
   14002503c:	je     0x140025143
   140025042:	test   al,0x40
   140025044:	jne    0x140025143
   14002504a:	test   al,0x2
   14002504c:	je     0x140025059
   14002504e:	or     eax,0x20
   140025051:	mov    DWORD PTR [rcx+0x18],eax
   140025054:	jmp    0x140025143
   140025059:	or     eax,0x1
   14002505c:	mov    DWORD PTR [rcx+0x18],eax
   14002505f:	test   eax,0x10c
   140025064:	jne    0x14002506d
   140025066:	call   0x14002449c
   14002506b:	jmp    0x140025074
   14002506d:	mov    rax,QWORD PTR [rcx+0x10]
   140025071:	mov    QWORD PTR [rcx],rax
   140025074:	mov    rcx,rdi
   140025077:	call   0x140024784
   14002507c:	mov    r8d,DWORD PTR [rdi+0x24]
   140025080:	mov    rdx,QWORD PTR [rdi+0x10]
   140025084:	mov    ecx,eax
   140025086:	call   0x140028420
   14002508b:	mov    DWORD PTR [rdi+0x8],eax
   14002508e:	test   eax,eax
   140025090:	je     0x140025132
   140025096:	cmp    eax,0xffffffff
   140025099:	je     0x140025132
   14002509f:	test   BYTE PTR [rdi+0x18],0x82
   1400250a3:	jne    0x140025104
   1400250a5:	mov    rcx,rdi
   1400250a8:	call   0x140024784
   1400250ad:	cmp    eax,0xffffffff
   1400250b0:	je     0x1400250ee
   1400250b2:	mov    rcx,rdi
   1400250b5:	call   0x140024784
   1400250ba:	cmp    eax,0xfffffffe
   1400250bd:	je     0x1400250ee
   1400250bf:	mov    rcx,rdi
   1400250c2:	call   0x140024784
   1400250c7:	mov    rcx,rdi
   1400250ca:	lea    rsi,[rip+0x2b56f]        # 0x140050640
   1400250d1:	movsxd rbx,eax
   1400250d4:	sar    rbx,0x5
   1400250d8:	call   0x140024784
   1400250dd:	mov    r11d,eax
   1400250e0:	and    r11d,0x1f
   1400250e4:	imul   r11,r11,0x58
   1400250e8:	add    r11,QWORD PTR [rsi+rbx*8]
   1400250ec:	jmp    0x1400250f5
   1400250ee:	lea    r11,[rip+0x246db]        # 0x1400497d0
   1400250f5:	mov    al,BYTE PTR [r11+0x8]
   1400250f9:	and    al,0x82
   1400250fb:	cmp    al,0x82
   1400250fd:	jne    0x140025104
   1400250ff:	bts    DWORD PTR [rdi+0x18],0xd
   140025104:	cmp    DWORD PTR [rdi+0x24],0x200
   14002510b:	jne    0x140025121
   14002510d:	test   BYTE PTR [rdi+0x18],0x8
   140025111:	je     0x140025121
   140025113:	bt     DWORD PTR [rdi+0x18],0xa
   140025118:	jb     0x140025121
   14002511a:	mov    DWORD PTR [rdi+0x24],0x1000
   140025121:	mov    rcx,QWORD PTR [rdi]
   140025124:	dec    DWORD PTR [rdi+0x8]
   140025127:	movzx  eax,BYTE PTR [rcx]
   14002512a:	inc    rcx
   14002512d:	mov    QWORD PTR [rdi],rcx
   140025130:	jmp    0x140025146
   140025132:	neg    eax
   140025134:	sbb    eax,eax
   140025136:	and    eax,0x10
   140025139:	add    eax,0x10
   14002513c:	or     DWORD PTR [rdi+0x18],eax
   14002513f:	and    DWORD PTR [rdi+0x8],0x0
   140025143:	or     eax,0xffffffff
   140025146:	mov    rbx,QWORD PTR [rsp+0x40]
   14002514b:	mov    rsi,QWORD PTR [rsp+0x48]
   140025150:	add    rsp,0x30
   140025154:	pop    rdi
   140025155:	ret    
   140025156:	int3   
   140025157:	int3   
   140025158:	mov    QWORD PTR [rsp+0x8],rbx
   14002515d:	push   rdi
   14002515e:	sub    rsp,0x30
   140025162:	test   BYTE PTR [rdx+0x18],0x40
   140025166:	mov    rbx,rdx
   140025169:	mov    edi,ecx
   14002516b:	jne    0x14002520b
   140025171:	mov    rcx,rdx
   140025174:	call   0x140024784
   140025179:	lea    rdx,[rip+0x24650]        # 0x1400497d0
   140025180:	lea    r8,[rip+0x2b4b9]        # 0x140050640
   140025187:	movsxd r11,eax
   14002518a:	cmp    r11d,0xffffffff
   14002518e:	je     0x1400251ad
   140025190:	cmp    r11d,0xfffffffe
   140025194:	je     0x1400251ad
   140025196:	mov    rcx,r11
   140025199:	mov    rax,r11
   14002519c:	and    ecx,0x1f
   14002519f:	sar    rax,0x5
   1400251a3:	imul   rcx,rcx,0x58
   1400251a7:	add    rcx,QWORD PTR [r8+rax*8]
   1400251ab:	jmp    0x1400251b0
   1400251ad:	mov    rcx,rdx
   1400251b0:	test   BYTE PTR [rcx+0x38],0x7f
   1400251b4:	jne    0x1400251dd
   1400251b6:	cmp    r11d,0xffffffff
   1400251ba:	je     0x1400251d7
   1400251bc:	cmp    r11d,0xfffffffe
   1400251c0:	je     0x1400251d7
   1400251c2:	mov    rdx,r11
   1400251c5:	mov    rax,r11
   1400251c8:	and    edx,0x1f
   1400251cb:	sar    rax,0x5
   1400251cf:	imul   rdx,rdx,0x58
   1400251d3:	add    rdx,QWORD PTR [r8+rax*8]
   1400251d7:	test   BYTE PTR [rdx+0x38],0x80
   1400251db:	je     0x14002520b
   1400251dd:	call   0x140015f48
   1400251e2:	and    QWORD PTR [rsp+0x20],0x0
   1400251e8:	xor    r9d,r9d
   1400251eb:	xor    r8d,r8d
   1400251ee:	xor    edx,edx
   1400251f0:	xor    ecx,ecx
   1400251f2:	mov    DWORD PTR [rax],0x16
   1400251f8:	call   0x1400149a8
   1400251fd:	or     eax,0xffffffff
   140025200:	mov    rbx,QWORD PTR [rsp+0x40]
   140025205:	add    rsp,0x30
   140025209:	pop    rdi
   14002520a:	ret    
   14002520b:	cmp    edi,0xffffffff
   14002520e:	je     0x1400251fd
   140025210:	test   BYTE PTR [rbx+0x18],0x1
   140025214:	jne    0x140025222
   140025216:	test   BYTE PTR [rbx+0x18],0x80
   14002521a:	je     0x1400251fd
   14002521c:	test   BYTE PTR [rbx+0x18],0x2
   140025220:	jne    0x1400251fd
   140025222:	cmp    QWORD PTR [rbx+0x10],0x0
   140025227:	jne    0x140025231
   140025229:	mov    rcx,rbx
   14002522c:	call   0x14002449c
   140025231:	mov    rax,QWORD PTR [rbx]
   140025234:	cmp    rax,QWORD PTR [rbx+0x10]
   140025238:	jne    0x140025246
   14002523a:	cmp    DWORD PTR [rbx+0x8],0x0
   14002523e:	jne    0x1400251fd
   140025240:	inc    rax
   140025243:	mov    QWORD PTR [rbx],rax
   140025246:	dec    QWORD PTR [rbx]
   140025249:	test   BYTE PTR [rbx+0x18],0x40
   14002524d:	mov    rax,QWORD PTR [rbx]
   140025250:	je     0x14002525f
   140025252:	cmp    BYTE PTR [rax],dil
   140025255:	je     0x140025262
   140025257:	inc    rax
   14002525a:	mov    QWORD PTR [rbx],rax
   14002525d:	jmp    0x1400251fd
   14002525f:	mov    BYTE PTR [rax],dil
   140025262:	inc    DWORD PTR [rbx+0x8]
   140025265:	and    DWORD PTR [rbx+0x18],0xffffffef
   140025269:	or     DWORD PTR [rbx+0x18],0x1
   14002526d:	movzx  eax,dil
   140025271:	jmp    0x140025200
   140025273:	int3   
   140025274:	mov    r9,rcx
   140025277:	movzx  r8d,BYTE PTR [r9]
   14002527b:	inc    r9
   14002527e:	lea    eax,[r8-0x41]
   140025282:	cmp    eax,0x19
   140025285:	ja     0x14002528b
   140025287:	add    r8d,0x20
   14002528b:	movzx  ecx,BYTE PTR [rdx]
   14002528e:	inc    rdx
   140025291:	lea    eax,[rcx-0x41]
   140025294:	cmp    eax,0x19
   140025297:	ja     0x14002529c
   140025299:	add    ecx,0x20
   14002529c:	test   r8d,r8d
   14002529f:	je     0x1400252a6
   1400252a1:	cmp    r8d,ecx
   1400252a4:	je     0x140025277
   1400252a6:	sub    r8d,ecx
   1400252a9:	mov    eax,r8d
   1400252ac:	ret    
   1400252ad:	int3   
   1400252ae:	int3   
   1400252af:	int3   
   1400252b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400252b5:	mov    QWORD PTR [rsp+0x10],rsi
   1400252ba:	push   rdi
   1400252bb:	sub    rsp,0x50
   1400252bf:	mov    rsi,rcx
   1400252c2:	mov    rdi,rdx
   1400252c5:	lea    rcx,[rsp+0x30]
   1400252ca:	mov    rdx,r8
   1400252cd:	call   0x140014a6c
   1400252d2:	test   rsi,rsi
   1400252d5:	jne    0x140025311
   1400252d7:	call   0x140015f48
   1400252dc:	and    QWORD PTR [rsp+0x20],0x0
   1400252e2:	xor    r9d,r9d
   1400252e5:	xor    r8d,r8d
   1400252e8:	xor    edx,edx
   1400252ea:	xor    ecx,ecx
   1400252ec:	mov    DWORD PTR [rax],0x16
   1400252f2:	call   0x1400149a8
   1400252f7:	cmp    BYTE PTR [rsp+0x48],0x0
   1400252fc:	je     0x14002530a
   1400252fe:	mov    rax,QWORD PTR [rsp+0x40]
   140025303:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002530a:	mov    eax,0x7fffffff
   14002530f:	jmp    0x140025382
   140025311:	test   rdi,rdi
   140025314:	je     0x1400252d7
   140025316:	mov    rax,QWORD PTR [rsp+0x30]
   14002531b:	cmp    DWORD PTR [rax+0x14],0x0
   14002531f:	jne    0x140025341
   140025321:	mov    rdx,rdi
   140025324:	mov    rcx,rsi
   140025327:	call   0x140025274
   14002532c:	cmp    BYTE PTR [rsp+0x48],0x0
   140025331:	je     0x140025382
   140025333:	mov    rcx,QWORD PTR [rsp+0x40]
   140025338:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   14002533f:	jmp    0x140025382
   140025341:	movzx  ecx,BYTE PTR [rsi]
   140025344:	lea    rdx,[rsp+0x30]
   140025349:	call   0x140014b18
   14002534e:	movzx  ecx,BYTE PTR [rdi]
   140025351:	lea    rdx,[rsp+0x30]
   140025356:	mov    ebx,eax
   140025358:	inc    rsi
   14002535b:	call   0x140014b18
   140025360:	inc    rdi
   140025363:	test   ebx,ebx
   140025365:	je     0x14002536b
   140025367:	cmp    ebx,eax
   140025369:	je     0x140025341
   14002536b:	sub    ebx,eax
   14002536d:	cmp    BYTE PTR [rsp+0x48],0x0
   140025372:	je     0x140025380
   140025374:	mov    rcx,QWORD PTR [rsp+0x40]
   140025379:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025380:	mov    eax,ebx
   140025382:	mov    rbx,QWORD PTR [rsp+0x60]
   140025387:	mov    rsi,QWORD PTR [rsp+0x68]
   14002538c:	add    rsp,0x50
   140025390:	pop    rdi
   140025391:	ret    
   140025392:	int3   
   140025393:	int3   
   140025394:	sub    rsp,0x38
   140025398:	cmp    DWORD PTR [rip+0x29771],0x0        # 0x14004eb10
   14002539f:	jne    0x1400253d9
   1400253a1:	test   rcx,rcx
   1400253a4:	jne    0x1400253cd
   1400253a6:	call   0x140015f48
   1400253ab:	and    QWORD PTR [rsp+0x20],0x0
   1400253b1:	xor    r9d,r9d
   1400253b4:	xor    r8d,r8d
   1400253b7:	xor    edx,edx
   1400253b9:	xor    ecx,ecx
   1400253bb:	mov    DWORD PTR [rax],0x16
   1400253c1:	call   0x1400149a8
   1400253c6:	mov    eax,0x7fffffff
   1400253cb:	jmp    0x1400253e1
   1400253cd:	test   rdx,rdx
   1400253d0:	je     0x1400253a6
   1400253d2:	call   0x140025274
   1400253d7:	jmp    0x1400253e1
   1400253d9:	xor    r8d,r8d
   1400253dc:	call   0x1400252b0
   1400253e1:	add    rsp,0x38
   1400253e5:	ret    
   1400253e6:	int3   
   1400253e7:	int3   
   1400253e8:	mov    r10,rcx
   1400253eb:	test   r8,r8
   1400253ee:	je     0x14002542c
   1400253f0:	movzx  r9d,BYTE PTR [r10]
   1400253f4:	inc    r10
   1400253f7:	lea    eax,[r9-0x41]
   1400253fb:	cmp    eax,0x19
   1400253fe:	ja     0x140025404
   140025400:	add    r9d,0x20
   140025404:	movzx  ecx,BYTE PTR [rdx]
   140025407:	inc    rdx
   14002540a:	lea    eax,[rcx-0x41]
   14002540d:	cmp    eax,0x19
   140025410:	ja     0x140025415
   140025412:	add    ecx,0x20
   140025415:	sub    r8,0x1
   140025419:	je     0x140025425
   14002541b:	test   r9d,r9d
   14002541e:	je     0x140025425
   140025420:	cmp    r9d,ecx
   140025423:	je     0x1400253f0
   140025425:	sub    r9d,ecx
   140025428:	mov    eax,r9d
   14002542b:	ret    
   14002542c:	xor    eax,eax
   14002542e:	ret    
   14002542f:	int3   
   140025430:	mov    rax,rsp
   140025433:	mov    QWORD PTR [rax+0x8],rbx
   140025437:	mov    QWORD PTR [rax+0x10],rbp
   14002543b:	mov    QWORD PTR [rax+0x18],rsi
   14002543f:	push   rdi
   140025440:	sub    rsp,0x50
   140025444:	mov    rdi,r8
   140025447:	mov    rsi,rdx
   14002544a:	mov    rbp,rcx
   14002544d:	test   r8,r8
   140025450:	je     0x14002552a
   140025456:	lea    rcx,[rax-0x28]
   14002545a:	mov    rdx,r9
   14002545d:	call   0x140014a6c
   140025462:	test   rbp,rbp
   140025465:	jne    0x1400254a4
   140025467:	call   0x140015f48
   14002546c:	and    QWORD PTR [rsp+0x20],0x0
   140025472:	xor    r9d,r9d
   140025475:	xor    r8d,r8d
   140025478:	xor    edx,edx
   14002547a:	xor    ecx,ecx
   14002547c:	mov    DWORD PTR [rax],0x16
   140025482:	call   0x1400149a8
   140025487:	cmp    BYTE PTR [rsp+0x48],0x0
   14002548c:	je     0x14002549a
   14002548e:	mov    rax,QWORD PTR [rsp+0x40]
   140025493:	and    DWORD PTR [rax+0xc8],0xfffffffd
   14002549a:	mov    eax,0x7fffffff
   14002549f:	jmp    0x14002552c
   1400254a4:	test   rsi,rsi
   1400254a7:	je     0x140025467
   1400254a9:	cmp    rdi,0x7fffffff
   1400254b0:	ja     0x140025467
   1400254b2:	mov    rax,QWORD PTR [rsp+0x30]
   1400254b7:	cmp    DWORD PTR [rax+0x14],0x0
   1400254bb:	jne    0x1400254e0
   1400254bd:	mov    r8,rdi
   1400254c0:	mov    rdx,rsi
   1400254c3:	mov    rcx,rbp
   1400254c6:	call   0x1400253e8
   1400254cb:	cmp    BYTE PTR [rsp+0x48],0x0
   1400254d0:	je     0x14002552c
   1400254d2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400254d7:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   1400254de:	jmp    0x14002552c
   1400254e0:	movzx  ecx,BYTE PTR [rbp+0x0]
   1400254e4:	lea    rdx,[rsp+0x30]
   1400254e9:	call   0x140014b18
   1400254ee:	movzx  ecx,BYTE PTR [rsi]
   1400254f1:	lea    rdx,[rsp+0x30]
   1400254f6:	mov    ebx,eax
   1400254f8:	inc    rbp
   1400254fb:	call   0x140014b18
   140025500:	inc    rsi
   140025503:	sub    rdi,0x1
   140025507:	je     0x140025511
   140025509:	test   ebx,ebx
   14002550b:	je     0x140025511
   14002550d:	cmp    ebx,eax
   14002550f:	je     0x1400254e0
   140025511:	sub    ebx,eax
   140025513:	cmp    BYTE PTR [rsp+0x48],0x0
   140025518:	je     0x140025526
   14002551a:	mov    rcx,QWORD PTR [rsp+0x40]
   14002551f:	and    DWORD PTR [rcx+0xc8],0xfffffffd
   140025526:	mov    eax,ebx
   140025528:	jmp    0x14002552c
   14002552a:	xor    eax,eax
   14002552c:	mov    rbx,QWORD PTR [rsp+0x60]
   140025531:	mov    rbp,QWORD PTR [rsp+0x68]
   140025536:	mov    rsi,QWORD PTR [rsp+0x70]
   14002553b:	add    rsp,0x50
   14002553f:	pop    rdi
   140025540:	ret    
   140025541:	int3   
   140025542:	int3   
   140025543:	int3   
   140025544:	sub    rsp,0x38
   140025548:	cmp    DWORD PTR [rip+0x295c1],0x0        # 0x14004eb10
   14002554f:	jne    0x140025592
   140025551:	test   rcx,rcx
   140025554:	jne    0x14002557d
   140025556:	call   0x140015f48
   14002555b:	and    QWORD PTR [rsp+0x20],0x0
   140025561:	xor    r9d,r9d
   140025564:	xor    r8d,r8d
   140025567:	xor    edx,edx
   140025569:	xor    ecx,ecx
   14002556b:	mov    DWORD PTR [rax],0x16
   140025571:	call   0x1400149a8
   140025576:	mov    eax,0x7fffffff
   14002557b:	jmp    0x14002559a
   14002557d:	test   rdx,rdx
   140025580:	je     0x140025556
   140025582:	cmp    r8,0x7fffffff
   140025589:	ja     0x140025556
   14002558b:	call   0x1400253e8
   140025590:	jmp    0x14002559a
   140025592:	xor    r9d,r9d
   140025595:	call   0x140025430
   14002559a:	add    rsp,0x38
   14002559e:	ret    
   14002559f:	int3   
   1400255a0:	mov    QWORD PTR [rsp+0x8],rbx
   1400255a5:	mov    QWORD PTR [rsp+0x10],rbp
   1400255aa:	push   rdi
   1400255ab:	sub    rsp,0x20
   1400255af:	test   ecx,ecx
   1400255b1:	js     0x140025626
   1400255b3:	cmp    ecx,DWORD PTR [rip+0x2b06b]        # 0x140050624
   1400255b9:	jae    0x140025626
   1400255bb:	movsxd rbx,ecx
   1400255be:	lea    rbp,[rip+0x2b07b]        # 0x140050640
   1400255c5:	mov    rdi,rbx
   1400255c8:	and    ebx,0x1f
   1400255cb:	sar    rdi,0x5
   1400255cf:	imul   rbx,rbx,0x58
   1400255d3:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   1400255d8:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400255dd:	je     0x140025626
   1400255df:	cmp    QWORD PTR [rax+rbx*1],0xffffffffffffffff
   1400255e4:	je     0x140025626
   1400255e6:	cmp    DWORD PTR [rip+0x237cb],0x1        # 0x140048db8
   1400255ed:	jne    0x140025618
   1400255ef:	test   ecx,ecx
   1400255f1:	je     0x14002560b
   1400255f3:	sub    ecx,0x1
   1400255f6:	je     0x140025604
   1400255f8:	cmp    ecx,0x1
   1400255fb:	jne    0x140025618
   1400255fd:	mov    ecx,0xfffffff4
   140025602:	jmp    0x140025610
   140025604:	mov    ecx,0xfffffff5
   140025609:	jmp    0x140025610
   14002560b:	mov    ecx,0xfffffff6
   140025610:	xor    edx,edx
   140025612:	call   QWORD PTR [rip+0x10c78]        # 0x140036290
   140025618:	mov    rax,QWORD PTR [rbp+rdi*8+0x0]
   14002561d:	or     QWORD PTR [rbx+rax*1],0xffffffffffffffff
   140025622:	xor    eax,eax
   140025624:	jmp    0x14002563c
   140025626:	call   0x140015f48
   14002562b:	mov    DWORD PTR [rax],0x9
   140025631:	call   0x140015f68
   140025636:	and    DWORD PTR [rax],0x0
   140025639:	or     eax,0xffffffff
   14002563c:	mov    rbx,QWORD PTR [rsp+0x30]
   140025641:	mov    rbp,QWORD PTR [rsp+0x38]
   140025646:	add    rsp,0x20
   14002564a:	pop    rdi
   14002564b:	ret    
   14002564c:	sub    rsp,0x38
   140025650:	cmp    ecx,0xfffffffe
   140025653:	jne    0x14002566a
   140025655:	call   0x140015f68
   14002565a:	and    DWORD PTR [rax],0x0
   14002565d:	call   0x140015f48
   140025662:	mov    DWORD PTR [rax],0x9
   140025668:	jmp    0x1400256c7
   14002566a:	test   ecx,ecx
   14002566c:	js     0x14002569f
   14002566e:	cmp    ecx,DWORD PTR [rip+0x2afb0]        # 0x140050624
   140025674:	jae    0x14002569f
   140025676:	movsxd rdx,ecx
   140025679:	lea    rcx,[rip+0x2afc0]        # 0x140050640
   140025680:	mov    rax,rdx
   140025683:	and    edx,0x1f
   140025686:	sar    rax,0x5
   14002568a:	imul   rdx,rdx,0x58
   14002568e:	mov    rax,QWORD PTR [rcx+rax*8]
   140025692:	test   BYTE PTR [rax+rdx*1+0x8],0x1
   140025697:	je     0x14002569f
   140025699:	mov    rax,QWORD PTR [rax+rdx*1]
   14002569d:	jmp    0x1400256cb
   14002569f:	call   0x140015f68
   1400256a4:	and    DWORD PTR [rax],0x0
   1400256a7:	call   0x140015f48
   1400256ac:	and    QWORD PTR [rsp+0x20],0x0
   1400256b2:	xor    r9d,r9d
   1400256b5:	xor    r8d,r8d
   1400256b8:	xor    edx,edx
   1400256ba:	xor    ecx,ecx
   1400256bc:	mov    DWORD PTR [rax],0x9
   1400256c2:	call   0x1400149a8
   1400256c7:	or     rax,0xffffffffffffffff
   1400256cb:	add    rsp,0x38
   1400256cf:	ret    
   1400256d0:	mov    rax,rsp
   1400256d3:	mov    QWORD PTR [rax+0x8],rbx
   1400256d7:	mov    QWORD PTR [rax+0x10],rsi
   1400256db:	mov    QWORD PTR [rax+0x18],rdi
   1400256df:	mov    QWORD PTR [rax+0x20],r12
   1400256e3:	push   r13
   1400256e5:	sub    rsp,0x20
   1400256e9:	movsxd rbx,ecx
   1400256ec:	mov    r12,rbx
   1400256ef:	sar    r12,0x5
   1400256f3:	lea    r13,[rip+0x2af46]        # 0x140050640
   1400256fa:	and    ebx,0x1f
   1400256fd:	imul   rbx,rbx,0x58
   140025701:	mov    rsi,QWORD PTR [r13+r12*8+0x0]
   140025706:	mov    edi,0x1
   14002570b:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140025710:	jne    0x140025745
   140025712:	lea    ecx,[rdi+0x9]
   140025715:	call   0x140020744
   14002571a:	nop
   14002571b:	cmp    DWORD PTR [rbx+rsi*1+0xc],0x0
   140025720:	jne    0x14002573b
   140025722:	lea    rcx,[rbx+rsi*1+0x10]
   140025727:	mov    edx,0xfa0
   14002572c:	call   0x140020a38
   140025731:	neg    eax
   140025733:	sbb    edx,edx
   140025735:	and    edi,edx
   140025737:	inc    DWORD PTR [rbx+rsi*1+0xc]
   14002573b:	mov    ecx,0xa
   140025740:	call   0x140020644
   140025745:	test   edi,edi
   140025747:	je     0x140025759
   140025749:	mov    rcx,QWORD PTR [r13+r12*8+0x0]
   14002574e:	lea    rcx,[rcx+rbx*1+0x10]
   140025753:	call   QWORD PTR [rip+0x10cef]        # 0x140036448
   140025759:	mov    eax,edi
   14002575b:	mov    rbx,QWORD PTR [rsp+0x30]
   140025760:	mov    rsi,QWORD PTR [rsp+0x38]
   140025765:	mov    rdi,QWORD PTR [rsp+0x40]
   14002576a:	mov    r12,QWORD PTR [rsp+0x48]
   14002576f:	add    rsp,0x20
   140025773:	pop    r13
   140025775:	ret    
   140025776:	int3   
   140025777:	int3   
   140025778:	movsxd rdx,ecx
   14002577b:	lea    rcx,[rip+0x2aebe]        # 0x140050640
   140025782:	mov    rax,rdx
   140025785:	and    edx,0x1f
   140025788:	sar    rax,0x5
   14002578c:	imul   rdx,rdx,0x58
   140025790:	mov    rax,QWORD PTR [rcx+rax*8]
   140025794:	lea    rcx,[rax+rdx*1+0x10]
   140025799:	rex.W jmp QWORD PTR [rip+0x10cb8]        # 0x140036458
   1400257a0:	sub    rsp,0x68
   1400257a4:	mov    rax,QWORD PTR [rip+0x23615]        # 0x140048dc0
   1400257ab:	xor    rax,rsp
   1400257ae:	mov    QWORD PTR [rsp+0x50],rax
   1400257b3:	cmp    DWORD PTR [rip+0x24a36],0x0        # 0x14004a1f0
   1400257ba:	mov    WORD PTR [rsp+0x40],cx
   1400257bf:	je     0x140025827
   1400257c1:	mov    rcx,QWORD PTR [rip+0x24b70]        # 0x14004a338
   1400257c8:	cmp    rcx,0xfffffffffffffffe
   1400257cc:	jne    0x1400257da
   1400257ce:	call   0x140028594
   1400257d3:	mov    rcx,QWORD PTR [rip+0x24b5e]        # 0x14004a338
   1400257da:	cmp    rcx,0xffffffffffffffff
   1400257de:	je     0x14002589d
   1400257e4:	and    QWORD PTR [rsp+0x20],0x0
   1400257ea:	lea    r9,[rsp+0x44]
   1400257ef:	lea    rdx,[rsp+0x40]
   1400257f4:	mov    r8d,0x1
   1400257fa:	call   QWORD PTR [rip+0x10aa8]        # 0x1400362a8
   140025800:	test   eax,eax
   140025802:	jne    0x140025891
   140025808:	cmp    DWORD PTR [rip+0x249e1],0x2        # 0x14004a1f0
   14002580f:	jne    0x14002589d
   140025815:	call   QWORD PTR [rip+0x10c45]        # 0x140036460
   14002581b:	cmp    eax,0x78
   14002581e:	jne    0x14002589d
   140025820:	and    DWORD PTR [rip+0x249c9],0x0        # 0x14004a1f0
   140025827:	call   QWORD PTR [rip+0x10a73]        # 0x1400362a0
   14002582d:	and    QWORD PTR [rsp+0x38],0x0
   140025833:	and    QWORD PTR [rsp+0x30],0x0
   140025839:	mov    ecx,eax
   14002583b:	lea    rax,[rsp+0x48]
   140025840:	lea    r8,[rsp+0x40]
   140025845:	mov    r9d,0x1
   14002584b:	xor    edx,edx
   14002584d:	mov    DWORD PTR [rsp+0x28],0x5
   140025855:	mov    QWORD PTR [rsp+0x20],rax
   14002585a:	call   QWORD PTR [rip+0x10b68]        # 0x1400363c8
   140025860:	mov    rcx,QWORD PTR [rip+0x24ad1]        # 0x14004a338
   140025867:	cmp    rcx,0xffffffffffffffff
   14002586b:	je     0x14002589d
   14002586d:	and    QWORD PTR [rsp+0x20],0x0
   140025873:	lea    r9,[rsp+0x44]
   140025878:	lea    rdx,[rsp+0x48]
   14002587d:	mov    r8d,eax
   140025880:	call   QWORD PTR [rip+0x10a12]        # 0x140036298
   140025886:	test   eax,eax
   140025888:	je     0x14002589d
   14002588a:	mov    ax,WORD PTR [rsp+0x40]
   14002588f:	jmp    0x1400258a2
   140025891:	mov    DWORD PTR [rip+0x24955],0x1        # 0x14004a1f0
   14002589b:	jmp    0x14002588a
   14002589d:	mov    eax,0xffff
   1400258a2:	mov    rcx,QWORD PTR [rsp+0x50]
   1400258a7:	xor    rcx,rsp
   1400258aa:	call   0x1400144f0
   1400258af:	add    rsp,0x68
   1400258b3:	ret    
   1400258b4:	mov    QWORD PTR [rsp+0x8],rbx
   1400258b9:	mov    QWORD PTR [rsp+0x10],rsi
   1400258be:	push   r12
   1400258c0:	sub    rsp,0x30
   1400258c4:	xor    esi,esi
   1400258c6:	lea    ecx,[rsi+0x1]
   1400258c9:	call   0x140020744
   1400258ce:	nop
   1400258cf:	lea    ebx,[rsi+0x3]
   1400258d2:	mov    DWORD PTR [rsp+0x20],ebx
   1400258d6:	cmp    ebx,DWORD PTR [rip+0x2ad44]        # 0x140050620
   1400258dc:	jge    0x140025947
   1400258de:	movsxd r12,ebx
   1400258e1:	mov    rax,QWORD PTR [rip+0x29d18]        # 0x14004f600
   1400258e8:	cmp    QWORD PTR [rax+r12*8],0x0
   1400258ed:	je     0x14002593f
   1400258ef:	mov    rcx,QWORD PTR [rax+r12*8]
   1400258f3:	test   BYTE PTR [rcx+0x18],0x83
   1400258f7:	je     0x140025909
   1400258f9:	call   0x140028698
   1400258fe:	cmp    eax,0xffffffff
   140025901:	je     0x140025909
   140025903:	inc    esi
   140025905:	mov    DWORD PTR [rsp+0x24],esi
   140025909:	cmp    ebx,0x14
   14002590c:	jl     0x14002593f
   14002590e:	mov    rax,QWORD PTR [rip+0x29ceb]        # 0x14004f600
   140025915:	mov    rcx,QWORD PTR [rax+r12*8]
   140025919:	add    rcx,0x30
   14002591d:	call   QWORD PTR [rip+0x10ad5]        # 0x1400363f8
   140025923:	mov    rcx,QWORD PTR [rip+0x29cd6]        # 0x14004f600
   14002592a:	mov    rcx,QWORD PTR [rcx+r12*8]
   14002592e:	call   0x140014f10
   140025933:	mov    r11,QWORD PTR [rip+0x29cc6]        # 0x14004f600
   14002593a:	and    QWORD PTR [r11+r12*8],0x0
   14002593f:	inc    ebx
   140025941:	mov    DWORD PTR [rsp+0x20],ebx
   140025945:	jmp    0x1400258d6
   140025947:	mov    ecx,0x1
   14002594c:	call   0x140020644
   140025951:	mov    eax,esi
   140025953:	mov    rbx,QWORD PTR [rsp+0x40]
   140025958:	mov    rsi,QWORD PTR [rsp+0x48]
   14002595d:	add    rsp,0x30
   140025961:	pop    r12
   140025963:	ret    
   140025964:	mov    QWORD PTR [rsp+0x8],rbx
   140025969:	mov    QWORD PTR [rsp+0x10],rsi
   14002596e:	push   rdi
   14002596f:	sub    rsp,0x20
   140025973:	mov    eax,DWORD PTR [rcx+0x18]
   140025976:	xor    esi,esi
   140025978:	mov    rbx,rcx
   14002597b:	and    al,0x3
   14002597d:	cmp    al,0x2
   14002597f:	jne    0x1400259c0
   140025981:	test   DWORD PTR [rcx+0x18],0x108
   140025988:	je     0x1400259c0
   14002598a:	mov    edi,DWORD PTR [rcx]
   14002598c:	sub    edi,DWORD PTR [rcx+0x10]
   14002598f:	test   edi,edi
   140025991:	jle    0x1400259c0
   140025993:	call   0x140024784
   140025998:	mov    rdx,QWORD PTR [rbx+0x10]
   14002599c:	mov    r8d,edi
   14002599f:	mov    ecx,eax
   1400259a1:	call   0x140024368
   1400259a6:	cmp    eax,edi
   1400259a8:	jne    0x1400259b9
   1400259aa:	mov    eax,DWORD PTR [rbx+0x18]
   1400259ad:	test   al,al
   1400259af:	jns    0x1400259c0
   1400259b1:	and    eax,0xfffffffd
   1400259b4:	mov    DWORD PTR [rbx+0x18],eax
   1400259b7:	jmp    0x1400259c0
   1400259b9:	or     DWORD PTR [rbx+0x18],0x20
   1400259bd:	or     esi,0xffffffff
   1400259c0:	mov    rcx,QWORD PTR [rbx+0x10]
   1400259c4:	and    DWORD PTR [rbx+0x8],0x0
   1400259c8:	mov    eax,esi
   1400259ca:	mov    rsi,QWORD PTR [rsp+0x38]
   1400259cf:	mov    QWORD PTR [rbx],rcx
   1400259d2:	mov    rbx,QWORD PTR [rsp+0x30]
   1400259d7:	add    rsp,0x20
   1400259db:	pop    rdi
   1400259dc:	ret    
   1400259dd:	int3   
   1400259de:	int3   
   1400259df:	int3   
   1400259e0:	rex push rbx
   1400259e2:	sub    rsp,0x20
   1400259e6:	mov    rbx,rcx
   1400259e9:	test   rcx,rcx
   1400259ec:	jne    0x1400259f5
   1400259ee:	call   0x140025a28
   1400259f3:	jmp    0x140025a21
   1400259f5:	call   0x140025964
   1400259fa:	test   eax,eax
   1400259fc:	je     0x140025a03
   1400259fe:	or     eax,0xffffffff
   140025a01:	jmp    0x140025a21
   140025a03:	bt     DWORD PTR [rbx+0x18],0xe
   140025a08:	jae    0x140025a1f
   140025a0a:	mov    rcx,rbx
   140025a0d:	call   0x140024784
   140025a12:	mov    ecx,eax
   140025a14:	call   0x140028710
   140025a19:	neg    eax
   140025a1b:	sbb    eax,eax
   140025a1d:	jmp    0x140025a21
   140025a1f:	xor    eax,eax
   140025a21:	add    rsp,0x20
   140025a25:	pop    rbx
   140025a26:	ret    
   140025a27:	int3   
   140025a28:	mov    QWORD PTR [rsp+0x8],rsi
   140025a2d:	mov    QWORD PTR [rsp+0x10],rdi
   140025a32:	mov    QWORD PTR [rsp+0x18],r12
   140025a37:	push   r13
   140025a39:	push   r14
   140025a3b:	push   r15
   140025a3d:	sub    rsp,0x30
   140025a41:	mov    r14d,ecx
   140025a44:	xor    r12d,r12d
   140025a47:	xor    esi,esi
   140025a49:	lea    ecx,[rsi+0x1]
   140025a4c:	call   0x140020744
   140025a51:	nop
   140025a52:	xor    edi,edi
   140025a54:	mov    DWORD PTR [rsp+0x20],edi
   140025a58:	or     r15d,0xffffffff
   140025a5c:	cmp    edi,DWORD PTR [rip+0x2abbe]        # 0x140050620
   140025a62:	jge    0x140025aee
   140025a68:	movsxd r13,edi
   140025a6b:	mov    rax,QWORD PTR [rip+0x29b8e]        # 0x14004f600
   140025a72:	cmp    QWORD PTR [rax+r13*8],0x0
   140025a77:	je     0x140025ae3
   140025a79:	mov    rdx,QWORD PTR [rax+r13*8]
   140025a7d:	test   BYTE PTR [rdx+0x18],0x83
   140025a81:	je     0x140025ae3
   140025a83:	mov    ecx,edi
   140025a85:	call   0x1400246d4
   140025a8a:	nop
   140025a8b:	mov    rax,QWORD PTR [rip+0x29b6e]        # 0x14004f600
   140025a92:	mov    rcx,QWORD PTR [rax+r13*8]
   140025a96:	test   BYTE PTR [rcx+0x18],0x83
   140025a9a:	je     0x140025ad1
   140025a9c:	cmp    r14d,0x1
   140025aa0:	jne    0x140025ab6
   140025aa2:	call   0x1400259e0
   140025aa7:	cmp    eax,r15d
   140025aaa:	je     0x140025ad1
   140025aac:	inc    r12d
   140025aaf:	mov    DWORD PTR [rsp+0x24],r12d
   140025ab4:	jmp    0x140025ad1
   140025ab6:	test   r14d,r14d
   140025ab9:	jne    0x140025ad1
   140025abb:	test   BYTE PTR [rcx+0x18],0x2
   140025abf:	je     0x140025ad1
   140025ac1:	call   0x1400259e0
   140025ac6:	cmp    eax,r15d
   140025ac9:	cmove  esi,r15d
   140025acd:	mov    DWORD PTR [rsp+0x28],esi
   140025ad1:	mov    rdx,QWORD PTR [rip+0x29b28]        # 0x14004f600
   140025ad8:	mov    rdx,QWORD PTR [rdx+r13*8]
   140025adc:	mov    ecx,edi
   140025ade:	call   0x14002475c
   140025ae3:	inc    edi
   140025ae5:	mov    DWORD PTR [rsp+0x20],edi
   140025ae9:	jmp    0x140025a5c
   140025aee:	mov    ecx,0x1
   140025af3:	call   0x140020644
   140025af8:	cmp    r14d,0x1
   140025afc:	cmove  esi,r12d
   140025b00:	mov    eax,esi
   140025b02:	mov    rsi,QWORD PTR [rsp+0x50]
   140025b07:	mov    rdi,QWORD PTR [rsp+0x58]
   140025b0c:	mov    r12,QWORD PTR [rsp+0x60]
   140025b11:	add    rsp,0x30
   140025b15:	pop    r15
   140025b17:	pop    r14
   140025b19:	pop    r13
   140025b1b:	ret    
   140025b1c:	mov    ecx,0x1
   140025b21:	jmp    0x140025a28
   140025b26:	int3   
   140025b27:	int3   
   140025b28:	mov    QWORD PTR [rsp+0x8],rbx
   140025b2d:	mov    QWORD PTR [rsp+0x10],rdi
   140025b32:	push   r12
   140025b34:	sub    rsp,0x20
   140025b38:	mov    rbx,rcx
   140025b3b:	call   0x140024784
   140025b40:	mov    ecx,eax
   140025b42:	call   0x1400244f0
   140025b47:	test   eax,eax
   140025b49:	je     0x140025be6
   140025b4f:	call   0x140024560
   140025b54:	add    rax,0x30
   140025b58:	cmp    rbx,rax
   140025b5b:	jne    0x140025b61
   140025b5d:	xor    eax,eax
   140025b5f:	jmp    0x140025b74
   140025b61:	call   0x140024560
   140025b66:	add    rax,0x60
   140025b6a:	cmp    rbx,rax
   140025b6d:	jne    0x140025be6
   140025b6f:	mov    eax,0x1
   140025b74:	inc    DWORD PTR [rip+0x2980a]        # 0x14004f384
   140025b7a:	test   DWORD PTR [rbx+0x18],0x10c
   140025b81:	jne    0x140025be6
   140025b83:	lea    r12,[rip+0x2980e]        # 0x14004f398
   140025b8a:	movsxd rdi,eax
   140025b8d:	cmp    QWORD PTR [r12+rdi*8],0x0
   140025b92:	jne    0x140025bbf
   140025b94:	mov    ecx,0x1000
   140025b99:	call   0x14001c424
   140025b9e:	mov    QWORD PTR [r12+rdi*8],rax
   140025ba2:	test   rax,rax
   140025ba5:	jne    0x140025bbf
   140025ba7:	lea    rax,[rbx+0x20]
   140025bab:	mov    QWORD PTR [rbx+0x10],rax
   140025baf:	mov    QWORD PTR [rbx],rax
   140025bb2:	mov    eax,0x2
   140025bb7:	mov    DWORD PTR [rbx+0x24],eax
   140025bba:	mov    DWORD PTR [rbx+0x8],eax
   140025bbd:	jmp    0x140025bd8
   140025bbf:	mov    rcx,QWORD PTR [r12+rdi*8]
   140025bc3:	mov    DWORD PTR [rbx+0x24],0x1000
   140025bca:	mov    DWORD PTR [rbx+0x8],0x1000
   140025bd1:	mov    QWORD PTR [rbx+0x10],rcx
   140025bd5:	mov    QWORD PTR [rbx],rcx
   140025bd8:	or     DWORD PTR [rbx+0x18],0x1102
   140025bdf:	mov    eax,0x1
   140025be4:	jmp    0x140025be8
   140025be6:	xor    eax,eax
   140025be8:	mov    rbx,QWORD PTR [rsp+0x30]
   140025bed:	mov    rdi,QWORD PTR [rsp+0x38]
   140025bf2:	add    rsp,0x20
   140025bf6:	pop    r12
   140025bf8:	ret    
   140025bf9:	int3   
   140025bfa:	int3   
   140025bfb:	int3   
   140025bfc:	test   ecx,ecx
   140025bfe:	je     0x140025c30
   140025c00:	push   rbx
   140025c01:	sub    rsp,0x20
   140025c05:	bt     DWORD PTR [rdx+0x18],0xc
   140025c0a:	mov    rbx,rdx
   140025c0d:	jae    0x140025c2b
   140025c0f:	mov    rcx,rdx
   140025c12:	call   0x140025964
   140025c17:	and    DWORD PTR [rbx+0x18],0xffffeeff
   140025c1e:	and    DWORD PTR [rbx+0x24],0x0
   140025c22:	and    QWORD PTR [rbx],0x0
   140025c26:	and    QWORD PTR [rbx+0x10],0x0
   140025c2b:	add    rsp,0x20
   140025c2f:	pop    rbx
   140025c30:	ret    
   140025c31:	int3   
   140025c32:	int3   
   140025c33:	int3   
   140025c34:	mov    QWORD PTR [rsp+0x10],rdx
   140025c39:	push   rbx
   140025c3a:	push   rsi
   140025c3b:	push   rdi
   140025c3c:	push   r12
   140025c3e:	push   r13
   140025c40:	push   r14
   140025c42:	push   r15
   140025c44:	sub    rsp,0x40
   140025c48:	movzx  eax,WORD PTR [rcx+0xa]
   140025c4c:	xor    ebx,ebx
   140025c4e:	mov    r15d,0x1f
   140025c54:	mov    edi,eax
   140025c56:	and    eax,0x8000
   140025c5b:	lea    esi,[rbx+0x1]
   140025c5e:	mov    DWORD PTR [rsp+0x80],eax
   140025c65:	mov    eax,DWORD PTR [rcx+0x6]
   140025c68:	and    edi,0x7fff
   140025c6e:	mov    DWORD PTR [rsp+0x20],eax
   140025c72:	mov    eax,DWORD PTR [rcx+0x2]
   140025c75:	sub    edi,0x3fff
   140025c7b:	mov    DWORD PTR [rsp+0x24],eax
   140025c7f:	movzx  eax,WORD PTR [rcx]
   140025c82:	shl    eax,0x10
   140025c85:	mov    DWORD PTR [rsp+0x28],eax
   140025c89:	cmp    edi,0xffffc001
   140025c8f:	jne    0x140025cbe
   140025c91:	mov    r8d,ebx
   140025c94:	mov    rax,rbx
   140025c97:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140025c9b:	jne    0x140025cab
   140025c9d:	add    rax,rsi
   140025ca0:	cmp    rax,0x3
   140025ca4:	jl     0x140025c97
   140025ca6:	jmp    0x1400261e3
   140025cab:	mov    QWORD PTR [rsp+0x20],rbx
   140025cb0:	mov    DWORD PTR [rsp+0x28],ebx
   140025cb4:	mov    ebx,0x2
   140025cb9:	jmp    0x1400261e3
   140025cbe:	mov    r9d,DWORD PTR [rip+0x2453b]        # 0x14004a200
   140025cc5:	lea    rcx,[rsp+0x20]
   140025cca:	mov    r11d,r15d
   140025ccd:	mov    rax,QWORD PTR [rcx]
   140025cd0:	or     r13d,0xffffffff
   140025cd4:	mov    DWORD PTR [rsp+0x90],edi
   140025cdb:	mov    QWORD PTR [rsp+0x30],rax
   140025ce0:	mov    eax,DWORD PTR [rcx+0x8]
   140025ce3:	mov    r12d,ebx
   140025ce6:	mov    DWORD PTR [rsp+0x38],eax
   140025cea:	mov    eax,r9d
   140025ced:	cdq    
   140025cee:	and    edx,r15d
   140025cf1:	add    eax,edx
   140025cf3:	mov    r10d,eax
   140025cf6:	and    eax,r15d
   140025cf9:	sar    r10d,0x5
   140025cfd:	sub    eax,edx
   140025cff:	movsxd r14,r10d
   140025d02:	sub    r11d,eax
   140025d05:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   140025d0a:	bt     ecx,r11d
   140025d0e:	jae    0x140025dad
   140025d14:	mov    ecx,r11d
   140025d17:	mov    eax,r13d
   140025d1a:	movsxd r8,r10d
   140025d1d:	shl    eax,cl
   140025d1f:	not    eax
   140025d21:	test   DWORD PTR [rsp+r8*4+0x20],eax
   140025d26:	jne    0x140025d41
   140025d28:	lea    eax,[rsi+r8*1]
   140025d2c:	cdqe   
   140025d2e:	jmp    0x140025d39
   140025d30:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140025d34:	jne    0x140025d41
   140025d36:	add    rax,rsi
   140025d39:	cmp    rax,0x3
   140025d3d:	jl     0x140025d30
   140025d3f:	jmp    0x140025dad
   140025d41:	lea    eax,[r9-0x1]
   140025d45:	mov    ecx,r15d
   140025d48:	cdq    
   140025d49:	and    edx,r15d
   140025d4c:	add    eax,edx
   140025d4e:	mov    r8d,eax
   140025d51:	and    eax,r15d
   140025d54:	sub    eax,edx
   140025d56:	sar    r8d,0x5
   140025d5a:	mov    edx,esi
   140025d5c:	sub    ecx,eax
   140025d5e:	movsxd r9,r8d
   140025d61:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   140025d66:	shl    edx,cl
   140025d68:	lea    ecx,[rax+rdx*1]
   140025d6b:	cmp    ecx,eax
   140025d6d:	jb     0x140025d73
   140025d6f:	cmp    ecx,edx
   140025d71:	jae    0x140025d76
   140025d73:	mov    r12d,esi
   140025d76:	sub    r8d,esi
   140025d79:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   140025d7e:	movsxd rdx,r8d
   140025d81:	cmp    rdx,rbx
   140025d84:	jl     0x140025dad
   140025d86:	cmp    r12d,ebx
   140025d89:	je     0x140025dad
   140025d8b:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140025d8f:	mov    r12d,ebx
   140025d92:	lea    r8d,[rax+0x1]
   140025d96:	cmp    r8d,eax
   140025d99:	jb     0x140025da0
   140025d9b:	cmp    r8d,esi
   140025d9e:	jae    0x140025da3
   140025da0:	mov    r12d,esi
   140025da3:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   140025da8:	sub    rdx,rsi
   140025dab:	jns    0x140025d86
   140025dad:	mov    ecx,r11d
   140025db0:	mov    eax,r13d
   140025db3:	shl    eax,cl
   140025db5:	and    DWORD PTR [rsp+r14*4+0x20],eax
   140025dba:	lea    eax,[r10+0x1]
   140025dbe:	movsxd rdx,eax
   140025dc1:	cmp    rdx,0x3
   140025dc5:	jge    0x140025de0
   140025dc7:	lea    rcx,[rsp+rdx*4+0x20]
   140025dcc:	mov    r8d,0x3
   140025dd2:	sub    r8,rdx
   140025dd5:	xor    edx,edx
   140025dd7:	shl    r8,0x2
   140025ddb:	call   0x140015b00
   140025de0:	cmp    r12d,ebx
   140025de3:	je     0x140025de7
   140025de5:	add    edi,esi
   140025de7:	mov    edx,DWORD PTR [rip+0x2440f]        # 0x14004a1fc
   140025ded:	mov    eax,edx
   140025def:	sub    eax,DWORD PTR [rip+0x2440b]        # 0x14004a200
   140025df5:	cmp    edi,eax
   140025df7:	jge    0x140025e0f
   140025df9:	mov    QWORD PTR [rsp+0x20],rbx
   140025dfe:	mov    DWORD PTR [rsp+0x28],ebx
   140025e02:	mov    r8d,ebx
   140025e05:	mov    ebx,0x2
   140025e0a:	jmp    0x1400261db
   140025e0f:	cmp    edi,edx
   140025e11:	jg     0x140026074
   140025e17:	sub    edx,DWORD PTR [rsp+0x90]
   140025e1e:	lea    rax,[rsp+0x30]
   140025e23:	mov    r11d,r13d
   140025e26:	mov    rcx,QWORD PTR [rax]
   140025e29:	mov    r12d,0x20
   140025e2f:	mov    r9d,ebx
   140025e32:	mov    QWORD PTR [rsp+0x20],rcx
   140025e37:	mov    ecx,DWORD PTR [rax+0x8]
   140025e3a:	mov    eax,edx
   140025e3c:	cdq    
   140025e3d:	mov    DWORD PTR [rsp+0x28],ecx
   140025e41:	mov    r8,rbx
   140025e44:	and    edx,r15d
   140025e47:	add    eax,edx
   140025e49:	mov    r10d,eax
   140025e4c:	and    eax,r15d
   140025e4f:	sub    eax,edx
   140025e51:	sar    r10d,0x5
   140025e55:	mov    ecx,eax
   140025e57:	mov    edi,eax
   140025e59:	shl    r11d,cl
   140025e5c:	sub    r12d,eax
   140025e5f:	not    r11d
   140025e62:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140025e67:	mov    ecx,edi
   140025e69:	mov    eax,edx
   140025e6b:	shr    edx,cl
   140025e6d:	mov    ecx,r12d
   140025e70:	or     edx,r9d
   140025e73:	and    eax,r11d
   140025e76:	mov    DWORD PTR [rsp+0x90],eax
   140025e7d:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140025e82:	add    r8,rsi
   140025e85:	mov    r9d,DWORD PTR [rsp+0x90]
   140025e8d:	shl    r9d,cl
   140025e90:	cmp    r8,0x3
   140025e94:	jl     0x140025e62
   140025e96:	movsxd r8,r10d
   140025e99:	lea    rdx,[rsp+0x28]
   140025e9e:	mov    edi,0x2
   140025ea3:	mov    rax,r8
   140025ea6:	mov    rcx,rdi
   140025ea9:	shl    rax,0x2
   140025ead:	sub    rdx,rax
   140025eb0:	cmp    rcx,r8
   140025eb3:	jl     0x140025ebd
   140025eb5:	mov    eax,DWORD PTR [rdx]
   140025eb7:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   140025ebb:	jmp    0x140025ec1
   140025ebd:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   140025ec1:	sub    rcx,rsi
   140025ec4:	sub    rdx,0x4
   140025ec8:	cmp    rcx,rbx
   140025ecb:	jge    0x140025eb0
   140025ecd:	mov    r9d,DWORD PTR [rip+0x2432c]        # 0x14004a200
   140025ed4:	mov    r12d,r15d
   140025ed7:	mov    eax,r9d
   140025eda:	cdq    
   140025edb:	and    edx,r15d
   140025ede:	add    eax,edx
   140025ee0:	mov    r11d,eax
   140025ee3:	and    eax,r15d
   140025ee6:	sar    r11d,0x5
   140025eea:	sub    eax,edx
   140025eec:	movsxd r14,r11d
   140025eef:	sub    r12d,eax
   140025ef2:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   140025ef7:	bt     ecx,r12d
   140025efb:	jae    0x140025f9c
   140025f01:	mov    ecx,r12d
   140025f04:	mov    eax,r13d
   140025f07:	movsxd r8,r11d
   140025f0a:	shl    eax,cl
   140025f0c:	not    eax
   140025f0e:	test   DWORD PTR [rsp+r8*4+0x20],eax
   140025f13:	jne    0x140025f2e
   140025f15:	lea    eax,[rsi+r8*1]
   140025f19:	cdqe   
   140025f1b:	jmp    0x140025f26
   140025f1d:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140025f21:	jne    0x140025f2e
   140025f23:	add    rax,rsi
   140025f26:	cmp    rax,0x3
   140025f2a:	jl     0x140025f1d
   140025f2c:	jmp    0x140025f9c
   140025f2e:	lea    eax,[r9-0x1]
   140025f32:	mov    ecx,r15d
   140025f35:	mov    r9d,esi
   140025f38:	cdq    
   140025f39:	and    edx,r15d
   140025f3c:	add    eax,edx
   140025f3e:	mov    r8d,eax
   140025f41:	and    eax,r15d
   140025f44:	sub    eax,edx
   140025f46:	sar    r8d,0x5
   140025f4a:	sub    ecx,eax
   140025f4c:	movsxd r10,r8d
   140025f4f:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   140025f54:	shl    r9d,cl
   140025f57:	mov    ecx,ebx
   140025f59:	lea    edx,[rax+r9*1]
   140025f5d:	cmp    edx,eax
   140025f5f:	jb     0x140025f66
   140025f61:	cmp    edx,r9d
   140025f64:	jae    0x140025f68
   140025f66:	mov    ecx,esi
   140025f68:	sub    r8d,esi
   140025f6b:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   140025f70:	movsxd rdx,r8d
   140025f73:	cmp    rdx,rbx
   140025f76:	jl     0x140025f9c
   140025f78:	cmp    ecx,ebx
   140025f7a:	je     0x140025f9c
   140025f7c:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140025f80:	mov    ecx,ebx
   140025f82:	lea    r8d,[rax+0x1]
   140025f86:	cmp    r8d,eax
   140025f89:	jb     0x140025f90
   140025f8b:	cmp    r8d,esi
   140025f8e:	jae    0x140025f92
   140025f90:	mov    ecx,esi
   140025f92:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   140025f97:	sub    rdx,rsi
   140025f9a:	jns    0x140025f78
   140025f9c:	mov    ecx,r12d
   140025f9f:	mov    eax,r13d
   140025fa2:	shl    eax,cl
   140025fa4:	and    DWORD PTR [rsp+r14*4+0x20],eax
   140025fa9:	lea    eax,[r11+0x1]
   140025fad:	movsxd rdx,eax
   140025fb0:	cmp    rdx,0x3
   140025fb4:	jge    0x140025fcf
   140025fb6:	lea    rcx,[rsp+rdx*4+0x20]
   140025fbb:	mov    r8d,0x3
   140025fc1:	sub    r8,rdx
   140025fc4:	xor    edx,edx
   140025fc6:	shl    r8,0x2
   140025fca:	call   0x140015b00
   140025fcf:	mov    eax,DWORD PTR [rip+0x2422f]        # 0x14004a204
   140025fd5:	mov    r12d,0x20
   140025fdb:	mov    r9d,ebx
   140025fde:	inc    eax
   140025fe0:	mov    r8,rbx
   140025fe3:	cdq    
   140025fe4:	and    edx,r15d
   140025fe7:	add    eax,edx
   140025fe9:	mov    r10d,eax
   140025fec:	and    eax,r15d
   140025fef:	sub    eax,edx
   140025ff1:	sar    r10d,0x5
   140025ff5:	mov    ecx,eax
   140025ff7:	mov    r11d,eax
   140025ffa:	shl    r13d,cl
   140025ffd:	sub    r12d,eax
   140026000:	not    r13d
   140026003:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   140026008:	mov    ecx,r11d
   14002600b:	mov    eax,edx
   14002600d:	shr    edx,cl
   14002600f:	mov    ecx,r12d
   140026012:	or     edx,r9d
   140026015:	and    eax,r13d
   140026018:	mov    DWORD PTR [rsp+0x90],eax
   14002601f:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140026024:	add    r8,rsi
   140026027:	mov    r9d,DWORD PTR [rsp+0x90]
   14002602f:	shl    r9d,cl
   140026032:	cmp    r8,0x3
   140026036:	jl     0x140026003
   140026038:	movsxd r8,r10d
   14002603b:	lea    rdx,[rsp+0x28]
   140026040:	mov    rcx,rdi
   140026043:	mov    rax,r8
   140026046:	shl    rax,0x2
   14002604a:	sub    rdx,rax
   14002604d:	cmp    rcx,r8
   140026050:	jl     0x14002605a
   140026052:	mov    eax,DWORD PTR [rdx]
   140026054:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   140026058:	jmp    0x14002605e
   14002605a:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   14002605e:	sub    rcx,rsi
   140026061:	sub    rdx,0x4
   140026065:	cmp    rcx,rbx
   140026068:	jge    0x14002604d
   14002606a:	mov    r8d,ebx
   14002606d:	mov    ebx,edi
   14002606f:	jmp    0x1400261db
   140026074:	mov    eax,DWORD PTR [rip+0x2418a]        # 0x14004a204
   14002607a:	cdq    
   14002607b:	and    edx,r15d
   14002607e:	add    eax,edx
   140026080:	cmp    edi,DWORD PTR [rip+0x24172]        # 0x14004a1f8
   140026086:	jl     0x14002613e
   14002608c:	mov    r10d,eax
   14002608f:	and    eax,r15d
   140026092:	mov    edi,0x20
   140026097:	sub    eax,edx
   140026099:	mov    QWORD PTR [rsp+0x20],rbx
   14002609e:	bts    DWORD PTR [rsp+0x20],0x1f
   1400260a4:	mov    ecx,eax
   1400260a6:	sar    r10d,0x5
   1400260aa:	mov    DWORD PTR [rsp+0x28],ebx
   1400260ae:	shl    r13d,cl
   1400260b1:	mov    r11d,eax
   1400260b4:	mov    r9d,ebx
   1400260b7:	not    r13d
   1400260ba:	mov    r8,rbx
   1400260bd:	sub    edi,eax
   1400260bf:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   1400260c4:	mov    ecx,r11d
   1400260c7:	mov    eax,r13d
   1400260ca:	and    eax,edx
   1400260cc:	shr    edx,cl
   1400260ce:	mov    ecx,edi
   1400260d0:	or     edx,r9d
   1400260d3:	mov    DWORD PTR [rsp+0x90],eax
   1400260da:	mov    r9d,DWORD PTR [rsp+0x90]
   1400260e2:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   1400260e7:	add    r8,rsi
   1400260ea:	shl    r9d,cl
   1400260ed:	cmp    r8,0x3
   1400260f1:	jl     0x1400260bf
   1400260f3:	movsxd rdx,r10d
   1400260f6:	lea    rcx,[rsp+0x28]
   1400260fb:	mov    edi,0x2
   140026100:	mov    rax,rdx
   140026103:	shl    rax,0x2
   140026107:	sub    rcx,rax
   14002610a:	cmp    rdi,rdx
   14002610d:	jl     0x140026117
   14002610f:	mov    eax,DWORD PTR [rcx]
   140026111:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   140026115:	jmp    0x14002611b
   140026117:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   14002611b:	sub    rdi,rsi
   14002611e:	sub    rcx,0x4
   140026122:	cmp    rdi,rbx
   140026125:	jge    0x14002610a
   140026127:	mov    ecx,DWORD PTR [rip+0x240cb]        # 0x14004a1f8
   14002612d:	mov    r8d,DWORD PTR [rip+0x240d8]        # 0x14004a20c
   140026134:	mov    ebx,esi
   140026136:	add    r8d,ecx
   140026139:	jmp    0x1400261db
   14002613e:	mov    r8d,DWORD PTR [rip+0x240c7]        # 0x14004a20c
   140026145:	btr    DWORD PTR [rsp+0x20],0x1f
   14002614b:	mov    r11d,eax
   14002614e:	and    eax,r15d
   140026151:	add    r8d,edi
   140026154:	mov    r12d,0x20
   14002615a:	sub    eax,edx
   14002615c:	sar    r11d,0x5
   140026160:	mov    r10d,ebx
   140026163:	mov    ecx,eax
   140026165:	mov    edi,eax
   140026167:	mov    r9,rbx
   14002616a:	shl    r13d,cl
   14002616d:	sub    r12d,eax
   140026170:	not    r13d
   140026173:	mov    edx,DWORD PTR [rsp+r9*4+0x20]
   140026178:	mov    ecx,edi
   14002617a:	mov    eax,r13d
   14002617d:	and    eax,edx
   14002617f:	shr    edx,cl
   140026181:	mov    ecx,r12d
   140026184:	or     edx,r10d
   140026187:	mov    DWORD PTR [rsp+0x90],eax
   14002618e:	mov    r10d,DWORD PTR [rsp+0x90]
   140026196:	mov    DWORD PTR [rsp+r9*4+0x20],edx
   14002619b:	add    r9,rsi
   14002619e:	shl    r10d,cl
   1400261a1:	cmp    r9,0x3
   1400261a5:	jl     0x140026173
   1400261a7:	movsxd rdx,r11d
   1400261aa:	lea    rcx,[rsp+0x28]
   1400261af:	mov    edi,0x2
   1400261b4:	mov    rax,rdx
   1400261b7:	shl    rax,0x2
   1400261bb:	sub    rcx,rax
   1400261be:	cmp    rdi,rdx
   1400261c1:	jl     0x1400261cb
   1400261c3:	mov    eax,DWORD PTR [rcx]
   1400261c5:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   1400261c9:	jmp    0x1400261cf
   1400261cb:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   1400261cf:	sub    rdi,rsi
   1400261d2:	sub    rcx,0x4
   1400261d6:	cmp    rdi,rbx
   1400261d9:	jge    0x1400261be
   1400261db:	mov    rdx,QWORD PTR [rsp+0x88]
   1400261e3:	sub    r15d,DWORD PTR [rip+0x2401a]        # 0x14004a204
   1400261ea:	mov    cl,r15b
   1400261ed:	shl    r8d,cl
   1400261f0:	neg    DWORD PTR [rsp+0x80]
   1400261f7:	sbb    eax,eax
   1400261f9:	and    eax,0x80000000
   1400261fe:	or     r8d,eax
   140026201:	mov    eax,DWORD PTR [rip+0x24001]        # 0x14004a208
   140026207:	or     r8d,DWORD PTR [rsp+0x20]
   14002620c:	cmp    eax,0x40
   14002620f:	jne    0x14002621d
   140026211:	mov    eax,DWORD PTR [rsp+0x24]
   140026215:	mov    DWORD PTR [rdx+0x4],r8d
   140026219:	mov    DWORD PTR [rdx],eax
   14002621b:	jmp    0x140026225
   14002621d:	cmp    eax,0x20
   140026220:	jne    0x140026225
   140026222:	mov    DWORD PTR [rdx],r8d
   140026225:	mov    eax,ebx
   140026227:	add    rsp,0x40
   14002622b:	pop    r15
   14002622d:	pop    r14
   14002622f:	pop    r13
   140026231:	pop    r12
   140026233:	pop    rdi
   140026234:	pop    rsi
   140026235:	pop    rbx
   140026236:	ret    
   140026237:	int3   
   140026238:	mov    QWORD PTR [rsp+0x10],rdx
   14002623d:	push   rbx
   14002623e:	push   rsi
   14002623f:	push   rdi
   140026240:	push   r12
   140026242:	push   r13
   140026244:	push   r14
   140026246:	push   r15
   140026248:	sub    rsp,0x40
   14002624c:	movzx  eax,WORD PTR [rcx+0xa]
   140026250:	xor    ebx,ebx
   140026252:	mov    r15d,0x1f
   140026258:	mov    edi,eax
   14002625a:	and    eax,0x8000
   14002625f:	lea    esi,[rbx+0x1]
   140026262:	mov    DWORD PTR [rsp+0x80],eax
   140026269:	mov    eax,DWORD PTR [rcx+0x6]
   14002626c:	and    edi,0x7fff
   140026272:	mov    DWORD PTR [rsp+0x20],eax
   140026276:	mov    eax,DWORD PTR [rcx+0x2]
   140026279:	sub    edi,0x3fff
   14002627f:	mov    DWORD PTR [rsp+0x24],eax
   140026283:	movzx  eax,WORD PTR [rcx]
   140026286:	shl    eax,0x10
   140026289:	mov    DWORD PTR [rsp+0x28],eax
   14002628d:	cmp    edi,0xffffc001
   140026293:	jne    0x1400262c2
   140026295:	mov    r8d,ebx
   140026298:	mov    rax,rbx
   14002629b:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   14002629f:	jne    0x1400262af
   1400262a1:	add    rax,rsi
   1400262a4:	cmp    rax,0x3
   1400262a8:	jl     0x14002629b
   1400262aa:	jmp    0x1400267e7
   1400262af:	mov    QWORD PTR [rsp+0x20],rbx
   1400262b4:	mov    DWORD PTR [rsp+0x28],ebx
   1400262b8:	mov    ebx,0x2
   1400262bd:	jmp    0x1400267e7
   1400262c2:	mov    r9d,DWORD PTR [rip+0x23f4f]        # 0x14004a218
   1400262c9:	lea    rcx,[rsp+0x20]
   1400262ce:	mov    r11d,r15d
   1400262d1:	mov    rax,QWORD PTR [rcx]
   1400262d4:	or     r13d,0xffffffff
   1400262d8:	mov    DWORD PTR [rsp+0x90],edi
   1400262df:	mov    QWORD PTR [rsp+0x30],rax
   1400262e4:	mov    eax,DWORD PTR [rcx+0x8]
   1400262e7:	mov    r12d,ebx
   1400262ea:	mov    DWORD PTR [rsp+0x38],eax
   1400262ee:	mov    eax,r9d
   1400262f1:	cdq    
   1400262f2:	and    edx,r15d
   1400262f5:	add    eax,edx
   1400262f7:	mov    r10d,eax
   1400262fa:	and    eax,r15d
   1400262fd:	sar    r10d,0x5
   140026301:	sub    eax,edx
   140026303:	movsxd r14,r10d
   140026306:	sub    r11d,eax
   140026309:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   14002630e:	bt     ecx,r11d
   140026312:	jae    0x1400263b1
   140026318:	mov    ecx,r11d
   14002631b:	mov    eax,r13d
   14002631e:	movsxd r8,r10d
   140026321:	shl    eax,cl
   140026323:	not    eax
   140026325:	test   DWORD PTR [rsp+r8*4+0x20],eax
   14002632a:	jne    0x140026345
   14002632c:	lea    eax,[rsi+r8*1]
   140026330:	cdqe   
   140026332:	jmp    0x14002633d
   140026334:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140026338:	jne    0x140026345
   14002633a:	add    rax,rsi
   14002633d:	cmp    rax,0x3
   140026341:	jl     0x140026334
   140026343:	jmp    0x1400263b1
   140026345:	lea    eax,[r9-0x1]
   140026349:	mov    ecx,r15d
   14002634c:	cdq    
   14002634d:	and    edx,r15d
   140026350:	add    eax,edx
   140026352:	mov    r8d,eax
   140026355:	and    eax,r15d
   140026358:	sub    eax,edx
   14002635a:	sar    r8d,0x5
   14002635e:	mov    edx,esi
   140026360:	sub    ecx,eax
   140026362:	movsxd r9,r8d
   140026365:	mov    eax,DWORD PTR [rsp+r9*4+0x20]
   14002636a:	shl    edx,cl
   14002636c:	lea    ecx,[rax+rdx*1]
   14002636f:	cmp    ecx,eax
   140026371:	jb     0x140026377
   140026373:	cmp    ecx,edx
   140026375:	jae    0x14002637a
   140026377:	mov    r12d,esi
   14002637a:	sub    r8d,esi
   14002637d:	mov    DWORD PTR [rsp+r9*4+0x20],ecx
   140026382:	movsxd rdx,r8d
   140026385:	cmp    rdx,rbx
   140026388:	jl     0x1400263b1
   14002638a:	cmp    r12d,ebx
   14002638d:	je     0x1400263b1
   14002638f:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140026393:	mov    r12d,ebx
   140026396:	lea    r8d,[rax+0x1]
   14002639a:	cmp    r8d,eax
   14002639d:	jb     0x1400263a4
   14002639f:	cmp    r8d,esi
   1400263a2:	jae    0x1400263a7
   1400263a4:	mov    r12d,esi
   1400263a7:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   1400263ac:	sub    rdx,rsi
   1400263af:	jns    0x14002638a
   1400263b1:	mov    ecx,r11d
   1400263b4:	mov    eax,r13d
   1400263b7:	shl    eax,cl
   1400263b9:	and    DWORD PTR [rsp+r14*4+0x20],eax
   1400263be:	lea    eax,[r10+0x1]
   1400263c2:	movsxd rdx,eax
   1400263c5:	cmp    rdx,0x3
   1400263c9:	jge    0x1400263e4
   1400263cb:	lea    rcx,[rsp+rdx*4+0x20]
   1400263d0:	mov    r8d,0x3
   1400263d6:	sub    r8,rdx
   1400263d9:	xor    edx,edx
   1400263db:	shl    r8,0x2
   1400263df:	call   0x140015b00
   1400263e4:	cmp    r12d,ebx
   1400263e7:	je     0x1400263eb
   1400263e9:	add    edi,esi
   1400263eb:	mov    edx,DWORD PTR [rip+0x23e23]        # 0x14004a214
   1400263f1:	mov    eax,edx
   1400263f3:	sub    eax,DWORD PTR [rip+0x23e1f]        # 0x14004a218
   1400263f9:	cmp    edi,eax
   1400263fb:	jge    0x140026413
   1400263fd:	mov    QWORD PTR [rsp+0x20],rbx
   140026402:	mov    DWORD PTR [rsp+0x28],ebx
   140026406:	mov    r8d,ebx
   140026409:	mov    ebx,0x2
   14002640e:	jmp    0x1400267df
   140026413:	cmp    edi,edx
   140026415:	jg     0x140026678
   14002641b:	sub    edx,DWORD PTR [rsp+0x90]
   140026422:	lea    rax,[rsp+0x30]
   140026427:	mov    r11d,r13d
   14002642a:	mov    rcx,QWORD PTR [rax]
   14002642d:	mov    r12d,0x20
   140026433:	mov    r9d,ebx
   140026436:	mov    QWORD PTR [rsp+0x20],rcx
   14002643b:	mov    ecx,DWORD PTR [rax+0x8]
   14002643e:	mov    eax,edx
   140026440:	cdq    
   140026441:	mov    DWORD PTR [rsp+0x28],ecx
   140026445:	mov    r8,rbx
   140026448:	and    edx,r15d
   14002644b:	add    eax,edx
   14002644d:	mov    r10d,eax
   140026450:	and    eax,r15d
   140026453:	sub    eax,edx
   140026455:	sar    r10d,0x5
   140026459:	mov    ecx,eax
   14002645b:	mov    edi,eax
   14002645d:	shl    r11d,cl
   140026460:	sub    r12d,eax
   140026463:	not    r11d
   140026466:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002646b:	mov    ecx,edi
   14002646d:	mov    eax,edx
   14002646f:	shr    edx,cl
   140026471:	mov    ecx,r12d
   140026474:	or     edx,r9d
   140026477:	and    eax,r11d
   14002647a:	mov    DWORD PTR [rsp+0x90],eax
   140026481:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140026486:	add    r8,rsi
   140026489:	mov    r9d,DWORD PTR [rsp+0x90]
   140026491:	shl    r9d,cl
   140026494:	cmp    r8,0x3
   140026498:	jl     0x140026466
   14002649a:	movsxd r8,r10d
   14002649d:	lea    rdx,[rsp+0x28]
   1400264a2:	mov    edi,0x2
   1400264a7:	mov    rax,r8
   1400264aa:	mov    rcx,rdi
   1400264ad:	shl    rax,0x2
   1400264b1:	sub    rdx,rax
   1400264b4:	cmp    rcx,r8
   1400264b7:	jl     0x1400264c1
   1400264b9:	mov    eax,DWORD PTR [rdx]
   1400264bb:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   1400264bf:	jmp    0x1400264c5
   1400264c1:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   1400264c5:	sub    rcx,rsi
   1400264c8:	sub    rdx,0x4
   1400264cc:	cmp    rcx,rbx
   1400264cf:	jge    0x1400264b4
   1400264d1:	mov    r9d,DWORD PTR [rip+0x23d40]        # 0x14004a218
   1400264d8:	mov    r12d,r15d
   1400264db:	mov    eax,r9d
   1400264de:	cdq    
   1400264df:	and    edx,r15d
   1400264e2:	add    eax,edx
   1400264e4:	mov    r11d,eax
   1400264e7:	and    eax,r15d
   1400264ea:	sar    r11d,0x5
   1400264ee:	sub    eax,edx
   1400264f0:	movsxd r14,r11d
   1400264f3:	sub    r12d,eax
   1400264f6:	mov    ecx,DWORD PTR [rsp+r14*4+0x20]
   1400264fb:	bt     ecx,r12d
   1400264ff:	jae    0x1400265a0
   140026505:	mov    ecx,r12d
   140026508:	mov    eax,r13d
   14002650b:	movsxd r8,r11d
   14002650e:	shl    eax,cl
   140026510:	not    eax
   140026512:	test   DWORD PTR [rsp+r8*4+0x20],eax
   140026517:	jne    0x140026532
   140026519:	lea    eax,[rsi+r8*1]
   14002651d:	cdqe   
   14002651f:	jmp    0x14002652a
   140026521:	cmp    DWORD PTR [rsp+rax*4+0x20],ebx
   140026525:	jne    0x140026532
   140026527:	add    rax,rsi
   14002652a:	cmp    rax,0x3
   14002652e:	jl     0x140026521
   140026530:	jmp    0x1400265a0
   140026532:	lea    eax,[r9-0x1]
   140026536:	mov    ecx,r15d
   140026539:	mov    r9d,esi
   14002653c:	cdq    
   14002653d:	and    edx,r15d
   140026540:	add    eax,edx
   140026542:	mov    r8d,eax
   140026545:	and    eax,r15d
   140026548:	sub    eax,edx
   14002654a:	sar    r8d,0x5
   14002654e:	sub    ecx,eax
   140026550:	movsxd r10,r8d
   140026553:	mov    eax,DWORD PTR [rsp+r10*4+0x20]
   140026558:	shl    r9d,cl
   14002655b:	mov    ecx,ebx
   14002655d:	lea    edx,[rax+r9*1]
   140026561:	cmp    edx,eax
   140026563:	jb     0x14002656a
   140026565:	cmp    edx,r9d
   140026568:	jae    0x14002656c
   14002656a:	mov    ecx,esi
   14002656c:	sub    r8d,esi
   14002656f:	mov    DWORD PTR [rsp+r10*4+0x20],edx
   140026574:	movsxd rdx,r8d
   140026577:	cmp    rdx,rbx
   14002657a:	jl     0x1400265a0
   14002657c:	cmp    ecx,ebx
   14002657e:	je     0x1400265a0
   140026580:	mov    eax,DWORD PTR [rsp+rdx*4+0x20]
   140026584:	mov    ecx,ebx
   140026586:	lea    r8d,[rax+0x1]
   14002658a:	cmp    r8d,eax
   14002658d:	jb     0x140026594
   14002658f:	cmp    r8d,esi
   140026592:	jae    0x140026596
   140026594:	mov    ecx,esi
   140026596:	mov    DWORD PTR [rsp+rdx*4+0x20],r8d
   14002659b:	sub    rdx,rsi
   14002659e:	jns    0x14002657c
   1400265a0:	mov    ecx,r12d
   1400265a3:	mov    eax,r13d
   1400265a6:	shl    eax,cl
   1400265a8:	and    DWORD PTR [rsp+r14*4+0x20],eax
   1400265ad:	lea    eax,[r11+0x1]
   1400265b1:	movsxd rdx,eax
   1400265b4:	cmp    rdx,0x3
   1400265b8:	jge    0x1400265d3
   1400265ba:	lea    rcx,[rsp+rdx*4+0x20]
   1400265bf:	mov    r8d,0x3
   1400265c5:	sub    r8,rdx
   1400265c8:	xor    edx,edx
   1400265ca:	shl    r8,0x2
   1400265ce:	call   0x140015b00
   1400265d3:	mov    eax,DWORD PTR [rip+0x23c43]        # 0x14004a21c
   1400265d9:	mov    r12d,0x20
   1400265df:	mov    r9d,ebx
   1400265e2:	inc    eax
   1400265e4:	mov    r8,rbx
   1400265e7:	cdq    
   1400265e8:	and    edx,r15d
   1400265eb:	add    eax,edx
   1400265ed:	mov    r10d,eax
   1400265f0:	and    eax,r15d
   1400265f3:	sub    eax,edx
   1400265f5:	sar    r10d,0x5
   1400265f9:	mov    ecx,eax
   1400265fb:	mov    r11d,eax
   1400265fe:	shl    r13d,cl
   140026601:	sub    r12d,eax
   140026604:	not    r13d
   140026607:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   14002660c:	mov    ecx,r11d
   14002660f:	mov    eax,edx
   140026611:	shr    edx,cl
   140026613:	mov    ecx,r12d
   140026616:	or     edx,r9d
   140026619:	and    eax,r13d
   14002661c:	mov    DWORD PTR [rsp+0x90],eax
   140026623:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   140026628:	add    r8,rsi
   14002662b:	mov    r9d,DWORD PTR [rsp+0x90]
   140026633:	shl    r9d,cl
   140026636:	cmp    r8,0x3
   14002663a:	jl     0x140026607
   14002663c:	movsxd r8,r10d
   14002663f:	lea    rdx,[rsp+0x28]
   140026644:	mov    rcx,rdi
   140026647:	mov    rax,r8
   14002664a:	shl    rax,0x2
   14002664e:	sub    rdx,rax
   140026651:	cmp    rcx,r8
   140026654:	jl     0x14002665e
   140026656:	mov    eax,DWORD PTR [rdx]
   140026658:	mov    DWORD PTR [rsp+rcx*4+0x20],eax
   14002665c:	jmp    0x140026662
   14002665e:	mov    DWORD PTR [rsp+rcx*4+0x20],ebx
   140026662:	sub    rcx,rsi
   140026665:	sub    rdx,0x4
   140026669:	cmp    rcx,rbx
   14002666c:	jge    0x140026651
   14002666e:	mov    r8d,ebx
   140026671:	mov    ebx,edi
   140026673:	jmp    0x1400267df
   140026678:	mov    eax,DWORD PTR [rip+0x23b9e]        # 0x14004a21c
   14002667e:	cdq    
   14002667f:	and    edx,r15d
   140026682:	add    eax,edx
   140026684:	cmp    edi,DWORD PTR [rip+0x23b86]        # 0x14004a210
   14002668a:	jl     0x140026742
   140026690:	mov    r10d,eax
   140026693:	and    eax,r15d
   140026696:	mov    edi,0x20
   14002669b:	sub    eax,edx
   14002669d:	mov    QWORD PTR [rsp+0x20],rbx
   1400266a2:	bts    DWORD PTR [rsp+0x20],0x1f
   1400266a8:	mov    ecx,eax
   1400266aa:	sar    r10d,0x5
   1400266ae:	mov    DWORD PTR [rsp+0x28],ebx
   1400266b2:	shl    r13d,cl
   1400266b5:	mov    r11d,eax
   1400266b8:	mov    r9d,ebx
   1400266bb:	not    r13d
   1400266be:	mov    r8,rbx
   1400266c1:	sub    edi,eax
   1400266c3:	mov    edx,DWORD PTR [rsp+r8*4+0x20]
   1400266c8:	mov    ecx,r11d
   1400266cb:	mov    eax,r13d
   1400266ce:	and    eax,edx
   1400266d0:	shr    edx,cl
   1400266d2:	mov    ecx,edi
   1400266d4:	or     edx,r9d
   1400266d7:	mov    DWORD PTR [rsp+0x90],eax
   1400266de:	mov    r9d,DWORD PTR [rsp+0x90]
   1400266e6:	mov    DWORD PTR [rsp+r8*4+0x20],edx
   1400266eb:	add    r8,rsi
   1400266ee:	shl    r9d,cl
   1400266f1:	cmp    r8,0x3
   1400266f5:	jl     0x1400266c3
   1400266f7:	movsxd rdx,r10d
   1400266fa:	lea    rcx,[rsp+0x28]
   1400266ff:	mov    edi,0x2
   140026704:	mov    rax,rdx
   140026707:	shl    rax,0x2
   14002670b:	sub    rcx,rax
   14002670e:	cmp    rdi,rdx
   140026711:	jl     0x14002671b
   140026713:	mov    eax,DWORD PTR [rcx]
   140026715:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   140026719:	jmp    0x14002671f
   14002671b:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   14002671f:	sub    rdi,rsi
   140026722:	sub    rcx,0x4
   140026726:	cmp    rdi,rbx
   140026729:	jge    0x14002670e
   14002672b:	mov    ecx,DWORD PTR [rip+0x23adf]        # 0x14004a210
   140026731:	mov    r8d,DWORD PTR [rip+0x23aec]        # 0x14004a224
   140026738:	mov    ebx,esi
   14002673a:	add    r8d,ecx
   14002673d:	jmp    0x1400267df
   140026742:	mov    r8d,DWORD PTR [rip+0x23adb]        # 0x14004a224
   140026749:	btr    DWORD PTR [rsp+0x20],0x1f
   14002674f:	mov    r11d,eax
   140026752:	and    eax,r15d
   140026755:	add    r8d,edi
   140026758:	mov    r12d,0x20
   14002675e:	sub    eax,edx
   140026760:	sar    r11d,0x5
   140026764:	mov    r10d,ebx
   140026767:	mov    ecx,eax
   140026769:	mov    edi,eax
   14002676b:	mov    r9,rbx
   14002676e:	shl    r13d,cl
   140026771:	sub    r12d,eax
   140026774:	not    r13d
   140026777:	mov    edx,DWORD PTR [rsp+r9*4+0x20]
   14002677c:	mov    ecx,edi
   14002677e:	mov    eax,r13d
   140026781:	and    eax,edx
   140026783:	shr    edx,cl
   140026785:	mov    ecx,r12d
   140026788:	or     edx,r10d
   14002678b:	mov    DWORD PTR [rsp+0x90],eax
   140026792:	mov    r10d,DWORD PTR [rsp+0x90]
   14002679a:	mov    DWORD PTR [rsp+r9*4+0x20],edx
   14002679f:	add    r9,rsi
   1400267a2:	shl    r10d,cl
   1400267a5:	cmp    r9,0x3
   1400267a9:	jl     0x140026777
   1400267ab:	movsxd rdx,r11d
   1400267ae:	lea    rcx,[rsp+0x28]
   1400267b3:	mov    edi,0x2
   1400267b8:	mov    rax,rdx
   1400267bb:	shl    rax,0x2
   1400267bf:	sub    rcx,rax
   1400267c2:	cmp    rdi,rdx
   1400267c5:	jl     0x1400267cf
   1400267c7:	mov    eax,DWORD PTR [rcx]
   1400267c9:	mov    DWORD PTR [rsp+rdi*4+0x20],eax
   1400267cd:	jmp    0x1400267d3
   1400267cf:	mov    DWORD PTR [rsp+rdi*4+0x20],ebx
   1400267d3:	sub    rdi,rsi
   1400267d6:	sub    rcx,0x4
   1400267da:	cmp    rdi,rbx
   1400267dd:	jge    0x1400267c2
   1400267df:	mov    rdx,QWORD PTR [rsp+0x88]
   1400267e7:	sub    r15d,DWORD PTR [rip+0x23a2e]        # 0x14004a21c
   1400267ee:	mov    cl,r15b
   1400267f1:	shl    r8d,cl
   1400267f4:	neg    DWORD PTR [rsp+0x80]
   1400267fb:	sbb    eax,eax
   1400267fd:	and    eax,0x80000000
   140026802:	or     r8d,eax
   140026805:	mov    eax,DWORD PTR [rip+0x23a15]        # 0x14004a220
   14002680b:	or     r8d,DWORD PTR [rsp+0x20]
   140026810:	cmp    eax,0x40
   140026813:	jne    0x140026821
   140026815:	mov    eax,DWORD PTR [rsp+0x24]
   140026819:	mov    DWORD PTR [rdx+0x4],r8d
   14002681d:	mov    DWORD PTR [rdx],eax
   14002681f:	jmp    0x140026829
   140026821:	cmp    eax,0x20
   140026824:	jne    0x140026829
   140026826:	mov    DWORD PTR [rdx],r8d
   140026829:	mov    eax,ebx
   14002682b:	add    rsp,0x40
   14002682f:	pop    r15
   140026831:	pop    r14
   140026833:	pop    r13
   140026835:	pop    r12
   140026837:	pop    rdi
   140026838:	pop    rsi
   140026839:	pop    rbx
   14002683a:	ret    
   14002683b:	int3   
   14002683c:	mov    r11,rsp
   14002683f:	mov    QWORD PTR [r11+0x18],rbx
   140026843:	push   rbp
   140026844:	push   rsi
   140026845:	push   rdi
   140026846:	push   r12
   140026848:	push   r13
   14002684a:	push   r14
   14002684c:	push   r15
   14002684e:	sub    rsp,0xb0
   140026855:	mov    rax,QWORD PTR [rip+0x22564]        # 0x140048dc0
   14002685c:	xor    rax,rsp
   14002685f:	mov    QWORD PTR [rsp+0xa0],rax
   140026867:	mov    r12,QWORD PTR [rsp+0x128]
   14002686f:	xor    ebx,ebx
   140026871:	mov    DWORD PTR [rsp+0x38],r9d
   140026876:	lea    r9d,[rbx+0x1]
   14002687a:	mov    QWORD PTR [rsp+0x48],rcx
   14002687f:	mov    r15,rdx
   140026882:	lea    r10,[r11-0x68]
   140026886:	mov    WORD PTR [rsp+0x3c],bx
   14002688b:	mov    edi,ebx
   14002688d:	mov    DWORD PTR [rsp+0x34],r9d
   140026892:	mov    r13d,ebx
   140026895:	mov    DWORD PTR [rsp+0x30],ebx
   140026899:	mov    r14d,ebx
   14002689c:	mov    ebp,ebx
   14002689e:	mov    esi,ebx
   1400268a0:	mov    ecx,ebx
   1400268a2:	cmp    r12,rbx
   1400268a5:	jne    0x1400268cd
   1400268a7:	call   0x140015f48
   1400268ac:	xor    r9d,r9d
   1400268af:	xor    r8d,r8d
   1400268b2:	xor    edx,edx
   1400268b4:	xor    ecx,ecx
   1400268b6:	mov    QWORD PTR [rsp+0x20],rbx
   1400268bb:	mov    DWORD PTR [rax],0x16
   1400268c1:	call   0x1400149a8
   1400268c6:	xor    eax,eax
   1400268c8:	jmp    0x14002710a
   1400268cd:	mov    r11,r8
   1400268d0:	mov    al,BYTE PTR [r8]
   1400268d3:	cmp    al,0x20
   1400268d5:	je     0x1400268e3
   1400268d7:	cmp    al,0x9
   1400268d9:	je     0x1400268e3
   1400268db:	cmp    al,0xa
   1400268dd:	je     0x1400268e3
   1400268df:	cmp    al,0xd
   1400268e1:	jne    0x1400268e8
   1400268e3:	add    r8,r9
   1400268e6:	jmp    0x1400268d0
   1400268e8:	mov    dl,BYTE PTR [r8]
   1400268eb:	add    r8,r9
   1400268ee:	cmp    ecx,0x5
   1400268f1:	jg     0x140026b1c
   1400268f7:	je     0x140026b01
   1400268fd:	mov    r9d,ecx
   140026900:	cmp    ecx,ebx
   140026902:	je     0x140026a9e
   140026908:	mov    eax,0x1
   14002690d:	sub    r9d,eax
   140026910:	je     0x140026a58
   140026916:	sub    r9d,eax
   140026919:	je     0x140026a05
   14002691f:	sub    r9d,eax
   140026922:	je     0x1400269b7
   140026928:	cmp    r9d,eax
   14002692b:	jne    0x140026bf2
   140026931:	mov    r9,rax
   140026934:	mov    r13d,r9d
   140026937:	mov    DWORD PTR [rsp+0x30],r9d
   14002693c:	cmp    edi,ebx
   14002693e:	jne    0x140026971
   140026940:	jmp    0x14002694b
   140026942:	mov    dl,BYTE PTR [r8]
   140026945:	sub    esi,r9d
   140026948:	add    r8,r9
   14002694b:	cmp    dl,0x30
   14002694e:	je     0x140026942
   140026950:	jmp    0x140026971
   140026952:	cmp    dl,0x39
   140026955:	jg     0x140026976
   140026957:	cmp    edi,0x19
   14002695a:	jae    0x14002696b
   14002695c:	sub    dl,0x30
   14002695f:	add    edi,r9d
   140026962:	mov    BYTE PTR [r10],dl
   140026965:	add    r10,r9
   140026968:	sub    esi,r9d
   14002696b:	mov    dl,BYTE PTR [r8]
   14002696e:	add    r8,r9
   140026971:	cmp    dl,0x30
   140026974:	jge    0x140026952
   140026976:	cmp    dl,0x2b
   140026979:	je     0x1400269aa
   14002697b:	cmp    dl,0x2d
   14002697e:	je     0x1400269aa
   140026980:	cmp    dl,0x43
   140026983:	jle    0x140026ad8
   140026989:	cmp    dl,0x45
   14002698c:	jle    0x1400269a0
   14002698e:	cmp    dl,0x63
   140026991:	jle    0x140026ad8
   140026997:	cmp    dl,0x65
   14002699a:	jg     0x140026ad8
   1400269a0:	mov    ecx,0x6
   1400269a5:	jmp    0x1400268e8
   1400269aa:	sub    r8,r9
   1400269ad:	mov    ecx,0xb
   1400269b2:	jmp    0x1400268e8
   1400269b7:	mov    r9,rax
   1400269ba:	mov    al,0x30
   1400269bc:	mov    r13d,r9d
   1400269bf:	jmp    0x1400269e1
   1400269c1:	cmp    dl,0x39
   1400269c4:	jg     0x1400269e5
   1400269c6:	cmp    edi,0x19
   1400269c9:	jae    0x1400269d8
   1400269cb:	sub    dl,al
   1400269cd:	add    edi,r9d
   1400269d0:	mov    BYTE PTR [r10],dl
   1400269d3:	add    r10,r9
   1400269d6:	jmp    0x1400269db
   1400269d8:	add    esi,r9d
   1400269db:	mov    dl,BYTE PTR [r8]
   1400269de:	add    r8,r9
   1400269e1:	cmp    dl,al
   1400269e3:	jge    0x1400269c1
   1400269e5:	mov    rax,QWORD PTR [r12]
   1400269e9:	mov    rcx,QWORD PTR [rax+0x128]
   1400269f0:	mov    rax,QWORD PTR [rcx]
   1400269f3:	cmp    dl,BYTE PTR [rax]
   1400269f5:	jne    0x140026976
   1400269fb:	mov    ecx,0x4
   140026a00:	jmp    0x1400268e8
   140026a05:	lea    eax,[rdx-0x31]
   140026a08:	cmp    al,0x8
   140026a0a:	ja     0x140026a1f
   140026a0c:	mov    ecx,0x3
   140026a11:	mov    r9d,0x1
   140026a17:	sub    r8,r9
   140026a1a:	jmp    0x1400268e8
   140026a1f:	mov    rax,QWORD PTR [r12]
   140026a23:	mov    rcx,QWORD PTR [rax+0x128]
   140026a2a:	mov    rax,QWORD PTR [rcx]
   140026a2d:	cmp    dl,BYTE PTR [rax]
   140026a2f:	jne    0x140026a41
   140026a31:	mov    ecx,0x5
   140026a36:	mov    r9d,0x1
   140026a3c:	jmp    0x1400268e8
   140026a41:	cmp    dl,0x30
   140026a44:	jne    0x140026c61
   140026a4a:	mov    r9d,0x1
   140026a50:	mov    ecx,r9d
   140026a53:	jmp    0x1400268e8
   140026a58:	mov    r9,rax
   140026a5b:	lea    eax,[rdx-0x31]
   140026a5e:	mov    r13d,r9d
   140026a61:	cmp    al,0x8
   140026a63:	ja     0x140026a6c
   140026a65:	mov    ecx,0x3
   140026a6a:	jmp    0x140026a17
   140026a6c:	mov    rax,QWORD PTR [r12]
   140026a70:	mov    rcx,QWORD PTR [rax+0x128]
   140026a77:	mov    rax,QWORD PTR [rcx]
   140026a7a:	cmp    dl,BYTE PTR [rax]
   140026a7c:	je     0x1400269fb
   140026a82:	cmp    dl,0x2b
   140026a85:	je     0x1400269aa
   140026a8b:	cmp    dl,0x2d
   140026a8e:	je     0x1400269aa
   140026a94:	cmp    dl,0x30
   140026a97:	je     0x140026a50
   140026a99:	jmp    0x140026980
   140026a9e:	lea    eax,[rdx-0x31]
   140026aa1:	cmp    al,0x8
   140026aa3:	jbe    0x140026a0c
   140026aa9:	mov    rax,QWORD PTR [r12]
   140026aad:	mov    rcx,QWORD PTR [rax+0x128]
   140026ab4:	mov    rax,QWORD PTR [rcx]
   140026ab7:	cmp    dl,BYTE PTR [rax]
   140026ab9:	je     0x140026a31
   140026abf:	cmp    dl,0x2b
   140026ac2:	je     0x140026af2
   140026ac4:	cmp    dl,0x2d
   140026ac7:	je     0x140026ae0
   140026ac9:	cmp    dl,0x30
   140026acc:	je     0x140026a4a
   140026ad2:	mov    r9d,0x1
   140026ad8:	sub    r8,r9
   140026adb:	jmp    0x140026c6a
   140026ae0:	mov    ecx,0x2
   140026ae5:	mov    DWORD PTR [rsp+0x3c],0x8000
   140026aed:	jmp    0x140026a36
   140026af2:	mov    ecx,0x2
   140026af7:	mov    WORD PTR [rsp+0x3c],bx
   140026afc:	jmp    0x140026a36
   140026b01:	sub    dl,0x30
   140026b04:	mov    DWORD PTR [rsp+0x30],r9d
   140026b09:	cmp    dl,0x9
   140026b0c:	ja     0x140026bfc
   140026b12:	mov    ecx,0x4
   140026b17:	jmp    0x140026a17
   140026b1c:	mov    r9d,ecx
   140026b1f:	sub    r9d,0x6
   140026b23:	je     0x140026bc9
   140026b29:	mov    eax,0x1
   140026b2e:	sub    r9d,eax
   140026b31:	je     0x140026ba5
   140026b33:	sub    r9d,eax
   140026b36:	je     0x140026b7c
   140026b38:	sub    r9d,eax
   140026b3b:	je     0x140026c11
   140026b41:	cmp    r9d,0x2
   140026b45:	jne    0x140026bf2
   140026b4b:	cmp    DWORD PTR [rsp+0x120],ebx
   140026b52:	je     0x140026c09
   140026b58:	lea    r11,[r8-0x1]
   140026b5c:	cmp    dl,0x2b
   140026b5f:	je     0x140026b6f
   140026b61:	cmp    dl,0x2d
   140026b64:	jne    0x140026c01
   140026b6a:	or     DWORD PTR [rsp+0x34],0xffffffff
   140026b6f:	mov    ecx,0x7
   140026b74:	mov    r9,rax
   140026b77:	jmp    0x1400268e8
   140026b7c:	mov    r9,rax
   140026b7f:	mov    r14d,r9d
   140026b82:	jmp    0x140026b8a
   140026b84:	mov    dl,BYTE PTR [r8]
   140026b87:	add    r8,r9
   140026b8a:	cmp    dl,0x30
   140026b8d:	je     0x140026b84
   140026b8f:	sub    dl,0x31
   140026b92:	cmp    dl,0x8
   140026b95:	ja     0x140026ad8
   140026b9b:	mov    ecx,0x9
   140026ba0:	jmp    0x140026a17
   140026ba5:	lea    eax,[rdx-0x31]
   140026ba8:	cmp    al,0x8
   140026baa:	ja     0x140026bb6
   140026bac:	mov    ecx,0x9
   140026bb1:	jmp    0x140026a11
   140026bb6:	cmp    dl,0x30
   140026bb9:	jne    0x140026c61
   140026bbf:	mov    ecx,0x8
   140026bc4:	jmp    0x140026a36
   140026bc9:	lea    eax,[rdx-0x31]
   140026bcc:	lea    r11,[r8-0x2]
   140026bd0:	cmp    al,0x8
   140026bd2:	jbe    0x140026bac
   140026bd4:	cmp    dl,0x2b
   140026bd7:	je     0x140026bed
   140026bd9:	cmp    dl,0x2d
   140026bdc:	jne    0x140026bb6
   140026bde:	or     DWORD PTR [rsp+0x34],0xffffffff
   140026be3:	mov    ecx,0x7
   140026be8:	jmp    0x140026a36
   140026bed:	mov    ecx,0x7
   140026bf2:	cmp    ecx,0xa
   140026bf5:	je     0x140026c64
   140026bf7:	jmp    0x140026a36
   140026bfc:	mov    r8,r11
   140026bff:	jmp    0x140026c6a
   140026c01:	mov    r8,r11
   140026c04:	mov    r9,rax
   140026c07:	jmp    0x140026c6a
   140026c09:	mov    r9,rax
   140026c0c:	jmp    0x140026ad8
   140026c11:	mov    r9,rax
   140026c14:	mov    r11b,0x30
   140026c17:	mov    r14d,r9d
   140026c1a:	jmp    0x140026c3a
   140026c1c:	cmp    dl,0x39
   140026c1f:	jg     0x140026c57
   140026c21:	lea    ecx,[rbp+rbp*4+0x0]
   140026c25:	movsx  eax,dl
   140026c28:	lea    ebp,[rax+rcx*2-0x30]
   140026c2c:	cmp    ebp,0x1450
   140026c32:	jg     0x140026c41
   140026c34:	mov    dl,BYTE PTR [r8]
   140026c37:	add    r8,r9
   140026c3a:	cmp    dl,r11b
   140026c3d:	jge    0x140026c1c
   140026c3f:	jmp    0x140026c57
   140026c41:	mov    ebp,0x1451
   140026c46:	jmp    0x140026c57
   140026c48:	cmp    dl,0x39
   140026c4b:	jg     0x140026ad8
   140026c51:	mov    dl,BYTE PTR [r8]
   140026c54:	add    r8,r9
   140026c57:	cmp    dl,r11b
   140026c5a:	jge    0x140026c48
   140026c5c:	jmp    0x140026ad8
   140026c61:	mov    r8,r11
   140026c64:	mov    r9d,0x1
   140026c6a:	mov    QWORD PTR [r15],r8
   140026c6d:	cmp    r13d,ebx
   140026c70:	je     0x1400270de
   140026c76:	cmp    edi,0x18
   140026c79:	jbe    0x140026c9b
   140026c7b:	mov    al,BYTE PTR [rsp+0x97]
   140026c82:	cmp    al,0x5
   140026c84:	jl     0x140026c90
   140026c86:	add    al,r9b
   140026c89:	mov    BYTE PTR [rsp+0x97],al
   140026c90:	sub    r10,r9
   140026c93:	mov    edi,0x18
   140026c98:	add    esi,r9d
   140026c9b:	cmp    edi,ebx
   140026c9d:	jbe    0x1400270d2
   140026ca3:	sub    r10,r9
   140026ca6:	or     r15d,0xffffffff
   140026caa:	jmp    0x140026cb5
   140026cac:	add    edi,r15d
   140026caf:	add    esi,r9d
   140026cb2:	sub    r10,r9
   140026cb5:	cmp    BYTE PTR [r10],bl
   140026cb8:	je     0x140026cac
   140026cba:	lea    r8,[rsp+0x60]
   140026cbf:	lea    rcx,[rsp+0x80]
   140026cc7:	mov    edx,edi
   140026cc9:	call   0x140028824
   140026cce:	cmp    DWORD PTR [rsp+0x34],ebx
   140026cd2:	jge    0x140026cd6
   140026cd4:	neg    ebp
   140026cd6:	add    ebp,esi
   140026cd8:	cmp    r14d,ebx
   140026cdb:	jne    0x140026ce4
   140026cdd:	add    ebp,DWORD PTR [rsp+0x110]
   140026ce4:	cmp    DWORD PTR [rsp+0x30],ebx
   140026ce8:	jne    0x140026cf1
   140026cea:	sub    ebp,DWORD PTR [rsp+0x118]
   140026cf1:	cmp    ebp,0x1450
   140026cf7:	jg     0x1400270bc
   140026cfd:	cmp    ebp,0xffffebb0
   140026d03:	jl     0x1400270ac
   140026d09:	lea    rsi,[rip+0x23630]        # 0x14004a340
   140026d10:	sub    rsi,0x60
   140026d14:	cmp    ebp,ebx
   140026d16:	je     0x140027096
   140026d1c:	jge    0x140026d2b
   140026d1e:	lea    rsi,[rip+0x2377b]        # 0x14004a4a0
   140026d25:	neg    ebp
   140026d27:	sub    rsi,0x60
   140026d2b:	cmp    DWORD PTR [rsp+0x38],ebx
   140026d2f:	jne    0x140026d36
   140026d31:	mov    WORD PTR [rsp+0x60],bx
   140026d36:	cmp    ebp,ebx
   140026d38:	je     0x140027096
   140026d3e:	mov    edi,0x80000000
   140026d43:	mov    r9d,0x7fff
   140026d49:	mov    r11d,0x1
   140026d4f:	mov    eax,ebp
   140026d51:	add    rsi,0x54
   140026d55:	sar    ebp,0x3
   140026d58:	and    eax,0x7
   140026d5b:	mov    QWORD PTR [rsp+0x40],rsi
   140026d60:	mov    DWORD PTR [rsp+0x38],ebp
   140026d64:	cmp    eax,ebx
   140026d66:	je     0x14002708e
   140026d6c:	cdqe   
   140026d6e:	mov    r14d,0x8000
   140026d74:	lea    rcx,[rax+rax*2]
   140026d78:	lea    rdx,[rsi+rcx*4]
   140026d7c:	cmp    WORD PTR [rdx],r14w
   140026d80:	jb     0x140026da8
   140026d82:	mov    rax,QWORD PTR [rdx]
   140026d85:	lea    rcx,[rsp+0x70]
   140026d8a:	mov    QWORD PTR [rcx],rax
   140026d8d:	mov    eax,DWORD PTR [rdx+0x8]
   140026d90:	lea    rdx,[rsp+0x70]
   140026d95:	mov    DWORD PTR [rcx+0x8],eax
   140026d98:	mov    rax,QWORD PTR [rsp+0x70]
   140026d9d:	shr    rax,0x10
   140026da1:	sub    eax,r11d
   140026da4:	mov    DWORD PTR [rsp+0x72],eax
   140026da8:	movzx  ecx,WORD PTR [rdx+0xa]
   140026dac:	mov    eax,ebx
   140026dae:	movzx  eax,WORD PTR [rsp+0x6a]
   140026db3:	movzx  r13d,cx
   140026db7:	and    cx,r9w
   140026dbb:	mov    DWORD PTR [rsp+0x50],ebx
   140026dbf:	xor    r13w,ax
   140026dc3:	and    ax,r9w
   140026dc7:	mov    DWORD PTR [rsp+0x54],ebx
   140026dcb:	and    r13w,r14w
   140026dcf:	lea    r8d,[rax+rcx*1]
   140026dd3:	mov    DWORD PTR [rsp+0x58],ebx
   140026dd7:	cmp    ax,r9w
   140026ddb:	jae    0x140027075
   140026de1:	cmp    cx,r9w
   140026de5:	jae    0x140027075
   140026deb:	mov    r10d,0xbffd
   140026df1:	cmp    r8w,r10w
   140026df5:	ja     0x140027075
   140026dfb:	mov    r10d,0x3fbf
   140026e01:	cmp    r8w,r10w
   140026e05:	ja     0x140026e10
   140026e07:	mov    DWORD PTR [rsp+0x68],ebx
   140026e0b:	jmp    0x140027086
   140026e10:	cmp    ax,bx
   140026e13:	jne    0x140026e3b
   140026e15:	mov    eax,DWORD PTR [rsp+0x68]
   140026e19:	add    r8w,r11w
   140026e1d:	btr    eax,0x1f
   140026e21:	cmp    eax,ebx
   140026e23:	jne    0x140026e3b
   140026e25:	cmp    DWORD PTR [rsp+0x64],ebx
   140026e29:	jne    0x140026e3b
   140026e2b:	cmp    DWORD PTR [rsp+0x60],ebx
   140026e2f:	jne    0x140026e3b
   140026e31:	mov    WORD PTR [rsp+0x6a],bx
   140026e36:	jmp    0x14002708e
   140026e3b:	cmp    cx,bx
   140026e3e:	jne    0x140026e58
   140026e40:	mov    eax,DWORD PTR [rdx+0x8]
   140026e43:	add    r8w,r11w
   140026e47:	btr    eax,0x1f
   140026e4b:	cmp    eax,ebx
   140026e4d:	jne    0x140026e58
   140026e4f:	cmp    DWORD PTR [rdx+0x4],ebx
   140026e52:	jne    0x140026e58
   140026e54:	cmp    DWORD PTR [rdx],ebx
   140026e56:	je     0x140026e07
   140026e58:	mov    esi,0x1
   140026e5d:	mov    r12d,ebx
   140026e60:	lea    rcx,[rsp+0x54]
   140026e65:	lea    r10d,[rsi+0x4]
   140026e69:	cmp    r10d,ebx
   140026e6c:	lea    eax,[r12+r12*1]
   140026e70:	mov    DWORD PTR [rsp+0x34],r10d
   140026e75:	movsxd r9,eax
   140026e78:	jle    0x140026ecf
   140026e7a:	mov    edi,r12d
   140026e7d:	lea    r14,[rsp+r9*1+0x60]
   140026e82:	lea    r15,[rdx+0x8]
   140026e86:	and    edi,esi
   140026e88:	movzx  eax,WORD PTR [r14]
   140026e8c:	movzx  r9d,WORD PTR [r15]
   140026e90:	mov    r11d,ebx
   140026e93:	imul   r9d,eax
   140026e97:	mov    eax,DWORD PTR [rcx-0x4]
   140026e9a:	lea    ebp,[rax+r9*1]
   140026e9e:	cmp    ebp,eax
   140026ea0:	jb     0x140026ea7
   140026ea2:	cmp    ebp,r9d
   140026ea5:	jae    0x140026eaa
   140026ea7:	mov    r11d,esi
   140026eaa:	mov    DWORD PTR [rcx-0x4],ebp
   140026ead:	cmp    r11d,ebx
   140026eb0:	je     0x140026eb5
   140026eb2:	add    WORD PTR [rcx],si
   140026eb5:	mov    r11d,DWORD PTR [rsp+0x34]
   140026eba:	add    r14,0x2
   140026ebe:	sub    r15,0x2
   140026ec2:	sub    r11d,esi
   140026ec5:	cmp    r11d,ebx
   140026ec8:	mov    DWORD PTR [rsp+0x34],r11d
   140026ecd:	jg     0x140026e88
   140026ecf:	sub    r10d,esi
   140026ed2:	add    rcx,0x2
   140026ed6:	add    r12d,esi
   140026ed9:	cmp    r10d,ebx
   140026edc:	jg     0x140026e69
   140026ede:	mov    r10d,DWORD PTR [rsp+0x58]
   140026ee3:	mov    r9d,DWORD PTR [rsp+0x50]
   140026ee8:	mov    eax,0xc002
   140026eed:	add    r8w,ax
   140026ef1:	mov    r12d,0xffff
   140026ef7:	cmp    r8w,bx
   140026efb:	jle    0x140026f42
   140026efd:	bt     r10d,0x1f
   140026f02:	jb     0x140026f3c
   140026f04:	mov    r11d,DWORD PTR [rsp+0x54]
   140026f09:	mov    edx,r9d
   140026f0c:	add    r10d,r10d
   140026f0f:	shr    edx,0x1f
   140026f12:	add    r9d,r9d
   140026f15:	mov    ecx,r11d
   140026f18:	shr    ecx,0x1f
   140026f1b:	lea    eax,[r11+r11*1]
   140026f1f:	add    r8w,r12w
   140026f23:	or     eax,edx
   140026f25:	or     r10d,ecx
   140026f28:	cmp    r8w,bx
   140026f2c:	mov    DWORD PTR [rsp+0x54],eax
   140026f30:	mov    DWORD PTR [rsp+0x58],r10d
   140026f35:	mov    DWORD PTR [rsp+0x50],r9d
   140026f3a:	jg     0x140026efd
   140026f3c:	cmp    r8w,bx
   140026f40:	jg     0x140026fb4
   140026f42:	add    r8w,r12w
   140026f46:	jns    0x140026fb4
   140026f48:	movzx  eax,r8w
   140026f4c:	neg    ax
   140026f4f:	movzx  edx,ax
   140026f52:	add    r8w,dx
   140026f56:	test   BYTE PTR [rsp+0x50],sil
   140026f5b:	je     0x140026f5f
   140026f5d:	add    ebx,esi
   140026f5f:	mov    r11d,DWORD PTR [rsp+0x54]
   140026f64:	mov    eax,r10d
   140026f67:	shr    r9d,1
   140026f6a:	mov    ecx,r11d
   140026f6d:	shl    eax,0x1f
   140026f70:	shr    r11d,1
   140026f73:	shl    ecx,0x1f
   140026f76:	or     r11d,eax
   140026f79:	shr    r10d,1
   140026f7c:	or     r9d,ecx
   140026f7f:	sub    rdx,rsi
   140026f82:	mov    DWORD PTR [rsp+0x54],r11d
   140026f87:	mov    DWORD PTR [rsp+0x50],r9d
   140026f8c:	jne    0x140026f56
   140026f8e:	mov    DWORD PTR [rsp+0x30],ebx
   140026f92:	xor    ebx,ebx
   140026f94:	mov    DWORD PTR [rsp+0x58],r10d
   140026f99:	mov    eax,DWORD PTR [rsp+0x30]
   140026f9d:	cmp    eax,ebx
   140026f9f:	je     0x140026fb4
   140026fa1:	movzx  eax,r9w
   140026fa5:	or     ax,si
   140026fa8:	mov    WORD PTR [rsp+0x50],ax
   140026fad:	mov    r9d,DWORD PTR [rsp+0x50]
   140026fb2:	jmp    0x140026fb9
   140026fb4:	mov    ax,WORD PTR [rsp+0x50]
   140026fb9:	mov    rsi,QWORD PTR [rsp+0x40]
   140026fbe:	mov    r14d,0x8000
   140026fc4:	mov    edi,0x80000000
   140026fc9:	cmp    ax,r14w
   140026fcd:	ja     0x140026fdf
   140026fcf:	and    r9d,0x1ffff
   140026fd6:	cmp    r9d,0x18000
   140026fdd:	jne    0x14002703c
   140026fdf:	mov    eax,DWORD PTR [rsp+0x52]
   140026fe3:	or     r15d,0xffffffff
   140026fe7:	mov    r11d,0x1
   140026fed:	cmp    eax,r15d
   140026ff0:	jne    0x140027033
   140026ff2:	mov    eax,DWORD PTR [rsp+0x56]
   140026ff6:	mov    DWORD PTR [rsp+0x52],ebx
   140026ffa:	cmp    eax,r15d
   140026ffd:	jne    0x140027025
   140026fff:	movzx  eax,WORD PTR [rsp+0x5a]
   140027004:	mov    DWORD PTR [rsp+0x56],ebx
   140027008:	cmp    ax,r12w
   14002700c:	jne    0x14002701a
   14002700e:	mov    WORD PTR [rsp+0x5a],r14w
   140027014:	add    r8w,r11w
   140027018:	jmp    0x14002702c
   14002701a:	add    ax,r11w
   14002701e:	mov    WORD PTR [rsp+0x5a],ax
   140027023:	jmp    0x14002702c
   140027025:	add    eax,r11d
   140027028:	mov    DWORD PTR [rsp+0x56],eax
   14002702c:	mov    r10d,DWORD PTR [rsp+0x58]
   140027031:	jmp    0x140027042
   140027033:	add    eax,r11d
   140027036:	mov    DWORD PTR [rsp+0x52],eax
   14002703a:	jmp    0x140027042
   14002703c:	mov    r11d,0x1
   140027042:	mov    ebp,DWORD PTR [rsp+0x38]
   140027046:	mov    r9d,0x7fff
   14002704c:	cmp    r8w,r9w
   140027050:	jae    0x140027075
   140027052:	movzx  eax,WORD PTR [rsp+0x52]
   140027057:	or     r8w,r13w
   14002705b:	mov    DWORD PTR [rsp+0x66],r10d
   140027060:	mov    WORD PTR [rsp+0x60],ax
   140027065:	mov    eax,DWORD PTR [rsp+0x54]
   140027069:	mov    WORD PTR [rsp+0x6a],r8w
   14002706f:	mov    DWORD PTR [rsp+0x62],eax
   140027073:	jmp    0x14002708e
   140027075:	neg    r13w
   140027079:	sbb    eax,eax
   14002707b:	and    eax,edi
   14002707d:	add    eax,0x7fff8000
   140027082:	mov    DWORD PTR [rsp+0x68],eax
   140027086:	mov    DWORD PTR [rsp+0x60],ebx
   14002708a:	mov    DWORD PTR [rsp+0x64],ebx
   14002708e:	cmp    ebp,ebx
   140027090:	jne    0x140026d4f
   140027096:	mov    eax,DWORD PTR [rsp+0x68]
   14002709a:	mov    dx,WORD PTR [rsp+0x60]
   14002709f:	mov    ecx,DWORD PTR [rsp+0x62]
   1400270a3:	mov    edi,DWORD PTR [rsp+0x66]
   1400270a7:	shr    eax,0x10
   1400270aa:	jmp    0x1400270ed
   1400270ac:	mov    edx,ebx
   1400270ae:	mov    ax,bx
   1400270b1:	mov    edi,ebx
   1400270b3:	mov    ecx,ebx
   1400270b5:	mov    ebx,0x1
   1400270ba:	jmp    0x1400270ed
   1400270bc:	mov    ecx,ebx
   1400270be:	mov    dx,bx
   1400270c1:	mov    eax,0x7fff
   1400270c6:	mov    ebx,0x2
   1400270cb:	mov    edi,0x80000000
   1400270d0:	jmp    0x1400270ed
   1400270d2:	mov    dx,bx
   1400270d5:	mov    ax,bx
   1400270d8:	mov    edi,ebx
   1400270da:	mov    ecx,ebx
   1400270dc:	jmp    0x1400270ed
   1400270de:	mov    dx,bx
   1400270e1:	mov    ax,bx
   1400270e4:	mov    edi,ebx
   1400270e6:	mov    ecx,ebx
   1400270e8:	mov    ebx,0x4
   1400270ed:	mov    r8,QWORD PTR [rsp+0x48]
   1400270f2:	or     ax,WORD PTR [rsp+0x3c]
   1400270f7:	mov    WORD PTR [r8+0xa],ax
   1400270fc:	mov    eax,ebx
   1400270fe:	mov    WORD PTR [r8],dx
   140027102:	mov    DWORD PTR [r8+0x2],ecx
   140027106:	mov    DWORD PTR [r8+0x6],edi
   14002710a:	mov    rcx,QWORD PTR [rsp+0xa0]
   140027112:	xor    rcx,rsp
   140027115:	call   0x1400144f0
   14002711a:	mov    rbx,QWORD PTR [rsp+0x100]
   140027122:	add    rsp,0xb0
   140027129:	pop    r15
   14002712b:	pop    r14
   14002712d:	pop    r13
   14002712f:	pop    r12
   140027131:	pop    rdi
   140027132:	pop    rsi
   140027133:	pop    rbp
   140027134:	ret    
   140027135:	int3   
   140027136:	int3   
   140027137:	int3   
   140027138:	mov    r11,rsp
   14002713b:	mov    QWORD PTR [r11+0x10],rbx
   14002713f:	push   rbp
   140027140:	push   rsi
   140027141:	push   rdi
   140027142:	push   r12
   140027144:	push   r13
   140027146:	push   r14
   140027148:	push   r15
   14002714a:	sub    rsp,0xb0
   140027151:	mov    rax,QWORD PTR [rip+0x21c68]        # 0x140048dc0
   140027158:	xor    rax,rsp
   14002715b:	mov    QWORD PTR [rsp+0xa0],rax
   140027163:	movzx  edi,WORD PTR [rcx+0x8]
   140027167:	mov    r10d,DWORD PTR [rcx]
   14002716a:	mov    r14d,0x8000
   140027170:	mov    rbx,r9
   140027173:	mov    r9d,DWORD PTR [rcx+0x4]
   140027177:	movzx  ecx,di
   14002717a:	and    cx,r14w
   14002717e:	mov    BYTE PTR [r11-0x68],0xcc
   140027183:	mov    BYTE PTR [r11-0x67],0xcc
   140027188:	mov    BYTE PTR [r11-0x66],0xcc
   14002718d:	mov    BYTE PTR [r11-0x65],0xcc
   140027192:	mov    BYTE PTR [r11-0x64],0xcc
   140027197:	mov    BYTE PTR [r11-0x63],0xcc
   14002719c:	mov    BYTE PTR [r11-0x62],0xcc
   1400271a1:	mov    BYTE PTR [r11-0x61],0xcc
   1400271a6:	mov    BYTE PTR [r11-0x60],0xcc
   1400271ab:	mov    BYTE PTR [r11-0x5f],0xcc
   1400271b0:	mov    BYTE PTR [r11-0x5e],0xfb
   1400271b5:	mov    BYTE PTR [r11-0x5d],0x3f
   1400271ba:	mov    r11d,0x1
   1400271c0:	lea    ebp,[r14-0x1]
   1400271c4:	lea    eax,[r11+0x1f]
   1400271c8:	xor    r12d,r12d
   1400271cb:	and    di,bp
   1400271ce:	mov    DWORD PTR [rsp+0x44],edx
   1400271d2:	mov    QWORD PTR [rsp+0x50],rbx
   1400271d7:	mov    DWORD PTR [rsp+0x4c],r8d
   1400271dc:	mov    WORD PTR [rsp+0x30],cx
   1400271e1:	lea    edx,[rax+0xd]
   1400271e4:	cmp    cx,r12w
   1400271e8:	je     0x1400271ef
   1400271ea:	mov    BYTE PTR [rbx+0x2],dl
   1400271ed:	jmp    0x1400271f2
   1400271ef:	mov    BYTE PTR [rbx+0x2],al
   1400271f2:	cmp    di,r12w
   1400271f6:	jne    0x140027229
   1400271f8:	cmp    r9d,r12d
   1400271fb:	jne    0x1400272ee
   140027201:	cmp    r10d,r12d
   140027204:	jne    0x1400272ee
   14002720a:	cmp    cx,r14w
   14002720e:	cmove  eax,edx
   140027211:	mov    BYTE PTR [rbx+0x4],0x30
   140027215:	mov    WORD PTR [rbx],r12w
   140027219:	mov    BYTE PTR [rbx+0x3],r11b
   14002721d:	mov    BYTE PTR [rbx+0x2],al
   140027220:	mov    BYTE PTR [rbx+0x5],r12b
   140027224:	jmp    0x140027c45
   140027229:	cmp    di,bp
   14002722c:	jne    0x1400272ee
   140027232:	mov    eax,0x80000000
   140027237:	mov    WORD PTR [rbx],r11w
   14002723b:	cmp    r9d,eax
   14002723e:	jne    0x140027245
   140027240:	cmp    r10d,r12d
   140027243:	je     0x140027255
   140027245:	bt     r9d,0x1e
   14002724a:	jb     0x140027255
   14002724c:	lea    r8,[rip+0x14b59]        # 0x14003bdac
   140027253:	jmp    0x1400272bb
   140027255:	cmp    cx,r12w
   140027259:	je     0x140027272
   14002725b:	cmp    r9d,0xc0000000
   140027262:	jne    0x140027272
   140027264:	cmp    r10d,r12d
   140027267:	jne    0x1400272b4
   140027269:	lea    r8,[rip+0x14b34]        # 0x14003bda4
   140027270:	jmp    0x140027283
   140027272:	cmp    r9d,eax
   140027275:	jne    0x1400272b4
   140027277:	cmp    r10d,r12d
   14002727a:	jne    0x1400272b4
   14002727c:	lea    r8,[rip+0x14b19]        # 0x14003bd9c
   140027283:	lea    rcx,[rbx+0x4]
   140027287:	mov    edx,0x16
   14002728c:	call   0x1400164d8
   140027291:	cmp    eax,r12d
   140027294:	je     0x1400272aa
   140027296:	xor    r9d,r9d
   140027299:	xor    r8d,r8d
   14002729c:	xor    edx,edx
   14002729e:	xor    ecx,ecx
   1400272a0:	mov    QWORD PTR [rsp+0x20],r12
   1400272a5:	call   0x140014880
   1400272aa:	mov    eax,0x5
   1400272af:	mov    BYTE PTR [rbx+0x3],al
   1400272b2:	jmp    0x1400272e6
   1400272b4:	lea    r8,[rip+0x14ad9]        # 0x14003bd94
   1400272bb:	lea    rcx,[rbx+0x4]
   1400272bf:	mov    edx,0x16
   1400272c4:	call   0x1400164d8
   1400272c9:	cmp    eax,r12d
   1400272cc:	je     0x1400272e2
   1400272ce:	xor    r9d,r9d
   1400272d1:	xor    r8d,r8d
   1400272d4:	xor    edx,edx
   1400272d6:	xor    ecx,ecx
   1400272d8:	mov    QWORD PTR [rsp+0x20],r12
   1400272dd:	call   0x140014880
   1400272e2:	mov    BYTE PTR [rbx+0x3],0x6
   1400272e6:	mov    r11d,r12d
   1400272e9:	jmp    0x140027c45
   1400272ee:	movzx  r8d,di
   1400272f2:	mov    ecx,r9d
   1400272f5:	mov    DWORD PTR [rsp+0x76],r9d
   1400272fa:	shr    ecx,0x18
   1400272fd:	mov    eax,r8d
   140027300:	mov    DWORD PTR [rsp+0x72],r10d
   140027305:	shr    eax,0x8
   140027308:	lea    r9,[rip+0x23031]        # 0x14004a340
   14002730f:	mov    r13d,0x5
   140027315:	imul   r8d,r8d,0x4d10
   14002731c:	lea    edx,[rax+rcx*2]
   14002731f:	sub    r9,0x60
   140027323:	mov    WORD PTR [rsp+0x7a],di
   140027328:	mov    WORD PTR [rsp+0x70],r12w
   14002732e:	mov    DWORD PTR [rsp+0x48],r13d
   140027333:	mov    esi,0xbffd
   140027338:	imul   edx,edx,0x4d
   14002733b:	lea    ecx,[rdx+r8*1-0x134312f4]
   140027343:	mov    edi,0x3fbf
   140027348:	sar    ecx,0x10
   14002734b:	movsx  r10d,cx
   14002734f:	mov    DWORD PTR [rsp+0x34],ecx
   140027353:	neg    r10d
   140027356:	cmp    r10d,r12d
   140027359:	je     0x140027726
   14002735f:	jge    0x14002736f
   140027361:	lea    r9,[rip+0x23138]        # 0x14004a4a0
   140027368:	neg    r10d
   14002736b:	sub    r9,0x60
   14002736f:	cmp    r10d,r12d
   140027372:	je     0x140027726
   140027378:	mov    r8d,DWORD PTR [rsp+0x74]
   14002737d:	mov    edx,DWORD PTR [rsp+0x70]
   140027381:	mov    eax,r10d
   140027384:	add    r9,0x54
   140027388:	sar    r10d,0x3
   14002738c:	and    eax,0x7
   14002738f:	mov    QWORD PTR [rsp+0x38],r9
   140027394:	mov    DWORD PTR [rsp+0x40],r10d
   140027399:	cmp    eax,r12d
   14002739c:	je     0x140027712
   1400273a2:	cdqe   
   1400273a4:	lea    rcx,[rax+rax*2]
   1400273a8:	lea    rbp,[r9+rcx*4]
   1400273ac:	mov    QWORD PTR [rsp+0x58],rbp
   1400273b1:	cmp    WORD PTR [rbp+0x0],r14w
   1400273b6:	jb     0x1400273f0
   1400273b8:	mov    rax,QWORD PTR [rbp+0x0]
   1400273bc:	lea    rcx,[rsp+0x90]
   1400273c4:	mov    QWORD PTR [rcx],rax
   1400273c7:	mov    eax,DWORD PTR [rbp+0x8]
   1400273ca:	lea    rbp,[rsp+0x90]
   1400273d2:	mov    DWORD PTR [rcx+0x8],eax
   1400273d5:	mov    rax,QWORD PTR [rsp+0x90]
   1400273dd:	mov    QWORD PTR [rsp+0x58],rbp
   1400273e2:	shr    rax,0x10
   1400273e6:	sub    eax,r11d
   1400273e9:	mov    DWORD PTR [rsp+0x92],eax
   1400273f0:	movzx  ecx,WORD PTR [rbp+0xa]
   1400273f4:	movzx  eax,WORD PTR [rsp+0x7a]
   1400273f9:	mov    r15d,0x7fff
   1400273ff:	movzx  edi,cx
   140027402:	and    cx,r15w
   140027406:	mov    ebx,r12d
   140027409:	xor    di,ax
   14002740c:	and    ax,r15w
   140027410:	mov    DWORD PTR [rsp+0x60],r12d
   140027415:	and    di,r14w
   140027419:	mov    DWORD PTR [rsp+0x64],r12d
   14002741e:	mov    DWORD PTR [rsp+0x68],r12d
   140027423:	lea    r9d,[rax+rcx*1]
   140027427:	mov    WORD PTR [rsp+0x32],di
   14002742c:	cmp    ax,r15w
   140027430:	jae    0x1400276e3
   140027436:	cmp    cx,r15w
   14002743a:	jae    0x1400276e3
   140027440:	cmp    r9w,si
   140027444:	ja     0x1400276e3
   14002744a:	mov    edi,0x3fbf
   14002744f:	cmp    r9w,di
   140027453:	ja     0x14002745f
   140027455:	mov    DWORD PTR [rsp+0x78],r12d
   14002745a:	jmp    0x1400276fb
   14002745f:	cmp    ax,r12w
   140027463:	jne    0x14002748b
   140027465:	mov    eax,DWORD PTR [rsp+0x78]
   140027469:	add    r9w,r11w
   14002746d:	btr    eax,0x1f
   140027471:	cmp    eax,r12d
   140027474:	jne    0x14002748b
   140027476:	cmp    r8d,r12d
   140027479:	jne    0x14002748b
   14002747b:	cmp    edx,r12d
   14002747e:	jne    0x14002748b
   140027480:	mov    WORD PTR [rsp+0x7a],r12w
   140027486:	jmp    0x14002770a
   14002748b:	cmp    cx,r12w
   14002748f:	jne    0x1400274ad
   140027491:	mov    eax,DWORD PTR [rbp+0x8]
   140027494:	add    r9w,r11w
   140027498:	btr    eax,0x1f
   14002749c:	cmp    eax,r12d
   14002749f:	jne    0x1400274ad
   1400274a1:	cmp    DWORD PTR [rbp+0x4],r12d
   1400274a5:	jne    0x1400274ad
   1400274a7:	cmp    DWORD PTR [rbp+0x0],r12d
   1400274ab:	je     0x140027455
   1400274ad:	mov    esi,r12d
   1400274b0:	lea    r8,[rsp+0x64]
   1400274b5:	mov    edi,r13d
   1400274b8:	cmp    edi,r12d
   1400274bb:	lea    eax,[rsi+rsi*1]
   1400274be:	mov    r14d,edi
   1400274c1:	movsxd rcx,eax
   1400274c4:	jle    0x14002751e
   1400274c6:	mov    r15d,esi
   1400274c9:	lea    r13,[rbp+0x8]
   1400274cd:	lea    r12,[rsp+rcx*1+0x70]
   1400274d2:	and    r15d,r11d
   1400274d5:	xor    ebp,ebp
   1400274d7:	movzx  eax,WORD PTR [r13+0x0]
   1400274dc:	movzx  ecx,WORD PTR [r12]
   1400274e1:	mov    r10d,ebp
   1400274e4:	imul   ecx,eax
   1400274e7:	mov    eax,DWORD PTR [r8-0x4]
   1400274eb:	lea    edx,[rax+rcx*1]
   1400274ee:	cmp    edx,eax
   1400274f0:	jb     0x1400274f6
   1400274f2:	cmp    edx,ecx
   1400274f4:	jae    0x1400274f9
   1400274f6:	mov    r10d,r11d
   1400274f9:	mov    DWORD PTR [r8-0x4],edx
   1400274fd:	cmp    r10d,ebp
   140027500:	je     0x140027506
   140027502:	add    WORD PTR [r8],r11w
   140027506:	sub    r14d,r11d
   140027509:	add    r12,0x2
   14002750d:	sub    r13,0x2
   140027511:	cmp    r14d,ebp
   140027514:	jg     0x1400274d7
   140027516:	mov    rbp,QWORD PTR [rsp+0x58]
   14002751b:	xor    r12d,r12d
   14002751e:	sub    edi,r11d
   140027521:	add    r8,0x2
   140027525:	add    esi,r11d
   140027528:	cmp    edi,r12d
   14002752b:	jg     0x1400274b8
   14002752d:	mov    r10d,DWORD PTR [rsp+0x68]
   140027532:	mov    r8d,DWORD PTR [rsp+0x60]
   140027537:	mov    eax,0xc002
   14002753c:	add    r9w,ax
   140027540:	mov    r15d,0xffff
   140027546:	cmp    r9w,r12w
   14002754a:	jle    0x14002758e
   14002754c:	bt     r10d,0x1f
   140027551:	jb     0x140027588
   140027553:	mov    edi,DWORD PTR [rsp+0x64]
   140027557:	mov    edx,r8d
   14002755a:	add    r10d,r10d
   14002755d:	shr    edx,0x1f
   140027560:	add    r8d,r8d
   140027563:	mov    ecx,edi
   140027565:	shr    ecx,0x1f
   140027568:	lea    eax,[rdi+rdi*1]
   14002756b:	add    r9w,r15w
   14002756f:	or     eax,edx
   140027571:	or     r10d,ecx
   140027574:	cmp    r9w,r12w
   140027578:	mov    DWORD PTR [rsp+0x64],eax
   14002757c:	mov    DWORD PTR [rsp+0x68],r10d
   140027581:	mov    DWORD PTR [rsp+0x60],r8d
   140027586:	jg     0x14002754c
   140027588:	cmp    r9w,r12w
   14002758c:	jg     0x1400275f4
   14002758e:	add    r9w,r15w
   140027592:	jns    0x1400275f4
   140027594:	movzx  eax,r9w
   140027598:	neg    ax
   14002759b:	movzx  edx,ax
   14002759e:	add    r9w,dx
   1400275a2:	test   BYTE PTR [rsp+0x60],r11b
   1400275a7:	je     0x1400275ac
   1400275a9:	add    ebx,r11d
   1400275ac:	mov    edi,DWORD PTR [rsp+0x64]
   1400275b0:	mov    eax,r10d
   1400275b3:	shr    r8d,1
   1400275b6:	mov    ecx,edi
   1400275b8:	shl    eax,0x1f
   1400275bb:	shr    edi,1
   1400275bd:	shl    ecx,0x1f
   1400275c0:	or     edi,eax
   1400275c2:	shr    r10d,1
   1400275c5:	or     r8d,ecx
   1400275c8:	sub    rdx,r11
   1400275cb:	mov    DWORD PTR [rsp+0x64],edi
   1400275cf:	mov    DWORD PTR [rsp+0x60],r8d
   1400275d4:	jne    0x1400275a2
   1400275d6:	mov    DWORD PTR [rsp+0x68],r10d
   1400275db:	cmp    ebx,r12d
   1400275de:	je     0x1400275f4
   1400275e0:	movzx  eax,r8w
   1400275e4:	or     ax,r11w
   1400275e8:	mov    WORD PTR [rsp+0x60],ax
   1400275ed:	mov    r8d,DWORD PTR [rsp+0x60]
   1400275f2:	jmp    0x1400275f9
   1400275f4:	mov    ax,WORD PTR [rsp+0x60]
   1400275f9:	mov    r14d,0x8000
   1400275ff:	cmp    ax,r14w
   140027603:	ja     0x140027615
   140027605:	and    r8d,0x1ffff
   14002760c:	cmp    r8d,0x18000
   140027613:	jne    0x140027669
   140027615:	mov    eax,DWORD PTR [rsp+0x62]
   140027619:	or     ecx,0xffffffff
   14002761c:	cmp    eax,ecx
   14002761e:	jne    0x140027662
   140027620:	mov    eax,DWORD PTR [rsp+0x66]
   140027624:	mov    DWORD PTR [rsp+0x62],r12d
   140027629:	cmp    eax,ecx
   14002762b:	jne    0x140027654
   14002762d:	movzx  eax,WORD PTR [rsp+0x6a]
   140027632:	mov    DWORD PTR [rsp+0x66],r12d
   140027637:	cmp    ax,r15w
   14002763b:	jne    0x140027649
   14002763d:	mov    WORD PTR [rsp+0x6a],r14w
   140027643:	add    r9w,r11w
   140027647:	jmp    0x14002765b
   140027649:	add    ax,r11w
   14002764d:	mov    WORD PTR [rsp+0x6a],ax
   140027652:	jmp    0x14002765b
   140027654:	add    eax,r11d
   140027657:	mov    DWORD PTR [rsp+0x66],eax
   14002765b:	mov    r10d,DWORD PTR [rsp+0x68]
   140027660:	jmp    0x140027669
   140027662:	add    eax,r11d
   140027665:	mov    DWORD PTR [rsp+0x62],eax
   140027669:	mov    ebp,0x7fff
   14002766e:	mov    r13d,0x5
   140027674:	mov    esi,0xbffd
   140027679:	mov    edi,0x3fbf
   14002767e:	cmp    r9w,bp
   140027682:	jb     0x1400276b2
   140027684:	mov    ax,WORD PTR [rsp+0x32]
   140027689:	mov    edx,r12d
   14002768c:	mov    r8d,r12d
   14002768f:	neg    ax
   140027692:	mov    DWORD PTR [rsp+0x74],r12d
   140027697:	mov    DWORD PTR [rsp+0x70],edx
   14002769b:	sbb    eax,eax
   14002769d:	and    eax,0x80000000
   1400276a2:	add    eax,0x7fff8000
   1400276a7:	mov    DWORD PTR [rsp+0x78],eax
   1400276ab:	mov    r10d,DWORD PTR [rsp+0x40]
   1400276b0:	jmp    0x14002770d
   1400276b2:	movzx  eax,WORD PTR [rsp+0x62]
   1400276b7:	mov    DWORD PTR [rsp+0x76],r10d
   1400276bc:	mov    WORD PTR [rsp+0x70],ax
   1400276c1:	mov    eax,DWORD PTR [rsp+0x64]
   1400276c5:	mov    DWORD PTR [rsp+0x72],eax
   1400276c9:	mov    ax,WORD PTR [rsp+0x32]
   1400276ce:	mov    r8d,DWORD PTR [rsp+0x74]
   1400276d3:	mov    edx,DWORD PTR [rsp+0x70]
   1400276d7:	or     r9w,ax
   1400276db:	mov    WORD PTR [rsp+0x7a],r9w
   1400276e1:	jmp    0x1400276ab
   1400276e3:	neg    di
   1400276e6:	mov    edi,0x3fbf
   1400276eb:	sbb    eax,eax
   1400276ed:	and    eax,0x80000000
   1400276f2:	add    eax,0x7fff8000
   1400276f7:	mov    DWORD PTR [rsp+0x78],eax
   1400276fb:	mov    edx,r12d
   1400276fe:	mov    r8d,r12d
   140027701:	mov    DWORD PTR [rsp+0x74],r12d
   140027706:	mov    DWORD PTR [rsp+0x70],edx
   14002770a:	mov    ebp,r15d
   14002770d:	mov    r9,QWORD PTR [rsp+0x38]
   140027712:	cmp    r10d,r12d
   140027715:	jne    0x140027381
   14002771b:	mov    rbx,QWORD PTR [rsp+0x50]
   140027720:	mov    ecx,DWORD PTR [rsp+0x34]
   140027724:	jmp    0x14002772f
   140027726:	mov    r8d,DWORD PTR [rsp+0x74]
   14002772b:	mov    edx,DWORD PTR [rsp+0x70]
   14002772f:	mov    eax,DWORD PTR [rsp+0x78]
   140027733:	mov    r9d,0x3fff
   140027739:	shr    eax,0x10
   14002773c:	cmp    ax,r9w
   140027740:	jb     0x140027a3c
   140027746:	add    cx,r11w
   14002774a:	mov    r9d,0x8000
   140027750:	mov    r15d,r12d
   140027753:	mov    DWORD PTR [rsp+0x34],ecx
   140027757:	movzx  ecx,WORD PTR [rsp+0x8a]
   14002775f:	mov    DWORD PTR [rsp+0x60],r12d
   140027764:	movzx  r14d,cx
   140027768:	and    cx,bp
   14002776b:	mov    DWORD PTR [rsp+0x64],r12d
   140027770:	xor    r14w,ax
   140027774:	and    ax,bp
   140027777:	mov    DWORD PTR [rsp+0x68],r12d
   14002777c:	and    r14w,r9w
   140027780:	lea    r9d,[rax+rcx*1]
   140027784:	cmp    ax,bp
   140027787:	jae    0x140027a22
   14002778d:	cmp    cx,bp
   140027790:	jae    0x140027a22
   140027796:	cmp    r9w,si
   14002779a:	ja     0x140027a22
   1400277a0:	cmp    r9w,di
   1400277a4:	ja     0x1400277b0
   1400277a6:	mov    DWORD PTR [rsp+0x78],r12d
   1400277ab:	jmp    0x140027a36
   1400277b0:	cmp    ax,r12w
   1400277b4:	jne    0x1400277dc
   1400277b6:	mov    eax,DWORD PTR [rsp+0x78]
   1400277ba:	add    r9w,r11w
   1400277be:	btr    eax,0x1f
   1400277c2:	cmp    eax,r12d
   1400277c5:	jne    0x1400277dc
   1400277c7:	cmp    r8d,r12d
   1400277ca:	jne    0x1400277dc
   1400277cc:	cmp    edx,r12d
   1400277cf:	jne    0x1400277dc
   1400277d1:	mov    WORD PTR [rsp+0x7a],r12w
   1400277d7:	jmp    0x140027a3c
   1400277dc:	cmp    cx,r12w
   1400277e0:	jne    0x14002780a
   1400277e2:	mov    eax,DWORD PTR [rsp+0x88]
   1400277e9:	add    r9w,r11w
   1400277ed:	btr    eax,0x1f
   1400277f1:	cmp    eax,r12d
   1400277f4:	jne    0x14002780a
   1400277f6:	cmp    DWORD PTR [rsp+0x84],r12d
   1400277fe:	jne    0x14002780a
   140027800:	cmp    DWORD PTR [rsp+0x80],r12d
   140027808:	je     0x1400277a6
   14002780a:	mov    edi,r12d
   14002780d:	lea    rdx,[rsp+0x64]
   140027812:	lea    eax,[rdi+rdi*1]
   140027815:	xor    ebx,ebx
   140027817:	mov    r12d,r13d
   14002781a:	cmp    r13d,ebx
   14002781d:	movsxd rcx,eax
   140027820:	jle    0x140027878
   140027822:	mov    r13d,edi
   140027825:	lea    rsi,[rsp+0x88]
   14002782d:	lea    rbp,[rsp+rcx*1+0x70]
   140027832:	and    r13d,r11d
   140027835:	movzx  eax,WORD PTR [rbp+0x0]
   140027839:	movzx  ecx,WORD PTR [rsi]
   14002783c:	mov    r10d,ebx
   14002783f:	imul   ecx,eax
   140027842:	mov    eax,DWORD PTR [rdx-0x4]
   140027845:	lea    r8d,[rax+rcx*1]
   140027849:	cmp    r8d,eax
   14002784c:	jb     0x140027853
   14002784e:	cmp    r8d,ecx
   140027851:	jae    0x140027856
   140027853:	mov    r10d,r11d
   140027856:	mov    DWORD PTR [rdx-0x4],r8d
   14002785a:	cmp    r10d,ebx
   14002785d:	je     0x140027863
   14002785f:	add    WORD PTR [rdx],r11w
   140027863:	sub    r12d,r11d
   140027866:	add    rbp,0x2
   14002786a:	sub    rsi,0x2
   14002786e:	cmp    r12d,ebx
   140027871:	jg     0x140027835
   140027873:	mov    r13d,DWORD PTR [rsp+0x48]
   140027878:	sub    r13d,r11d
   14002787b:	xor    r12d,r12d
   14002787e:	add    rdx,0x2
   140027882:	add    edi,r11d
   140027885:	cmp    r13d,r12d
   140027888:	mov    DWORD PTR [rsp+0x48],r13d
   14002788d:	jg     0x140027812
   14002788f:	mov    r8d,DWORD PTR [rsp+0x68]
   140027894:	mov    r10d,DWORD PTR [rsp+0x60]
   140027899:	mov    eax,0xc002
   14002789e:	add    r9w,ax
   1400278a2:	mov    esi,0xffff
   1400278a7:	cmp    r9w,r12w
   1400278ab:	jle    0x1400278ef
   1400278ad:	bt     r8d,0x1f
   1400278b2:	jb     0x1400278e9
   1400278b4:	mov    edi,DWORD PTR [rsp+0x64]
   1400278b8:	mov    edx,r10d
   1400278bb:	add    r8d,r8d
   1400278be:	shr    edx,0x1f
   1400278c1:	add    r10d,r10d
   1400278c4:	mov    ecx,edi
   1400278c6:	shr    ecx,0x1f
   1400278c9:	lea    eax,[rdi+rdi*1]
   1400278cc:	add    r9w,si
   1400278d0:	or     eax,edx
   1400278d2:	or     r8d,ecx
   1400278d5:	cmp    r9w,r12w
   1400278d9:	mov    DWORD PTR [rsp+0x64],eax
   1400278dd:	mov    DWORD PTR [rsp+0x68],r8d
   1400278e2:	mov    DWORD PTR [rsp+0x60],r10d
   1400278e7:	jg     0x1400278ad
   1400278e9:	cmp    r9w,r12w
   1400278ed:	jg     0x140027955
   1400278ef:	add    r9w,si
   1400278f3:	jns    0x140027955
   1400278f5:	movzx  eax,r9w
   1400278f9:	neg    ax
   1400278fc:	movzx  edx,ax
   1400278ff:	add    r9w,dx
   140027903:	test   BYTE PTR [rsp+0x60],r11b
   140027908:	je     0x14002790d
   14002790a:	add    r15d,r11d
   14002790d:	mov    edi,DWORD PTR [rsp+0x64]
   140027911:	mov    eax,r8d
   140027914:	shr    r10d,1
   140027917:	mov    ecx,edi
   140027919:	shl    eax,0x1f
   14002791c:	shr    edi,1
   14002791e:	shl    ecx,0x1f
   140027921:	or     edi,eax
   140027923:	shr    r8d,1
   140027926:	or     r10d,ecx
   140027929:	sub    rdx,r11
   14002792c:	mov    DWORD PTR [rsp+0x64],edi
   140027930:	mov    DWORD PTR [rsp+0x60],r10d
   140027935:	jne    0x140027903
   140027937:	mov    DWORD PTR [rsp+0x68],r8d
   14002793c:	cmp    r15d,r12d
   14002793f:	je     0x140027955
   140027941:	movzx  eax,r10w
   140027945:	or     ax,r11w
   140027949:	mov    WORD PTR [rsp+0x60],ax
   14002794e:	mov    r10d,DWORD PTR [rsp+0x60]
   140027953:	jmp    0x14002795a
   140027955:	mov    ax,WORD PTR [rsp+0x60]
   14002795a:	mov    rbx,QWORD PTR [rsp+0x50]
   14002795f:	mov    r13d,0x8000
   140027965:	cmp    ax,r13w
   140027969:	ja     0x14002797b
   14002796b:	and    r10d,0x1ffff
   140027972:	cmp    r10d,0x18000
   140027979:	jne    0x1400279ce
   14002797b:	mov    eax,DWORD PTR [rsp+0x62]
   14002797f:	or     ecx,0xffffffff
   140027982:	cmp    eax,ecx
   140027984:	jne    0x1400279c7
   140027986:	mov    eax,DWORD PTR [rsp+0x66]
   14002798a:	mov    DWORD PTR [rsp+0x62],r12d
   14002798f:	cmp    eax,ecx
   140027991:	jne    0x1400279b9
   140027993:	movzx  eax,WORD PTR [rsp+0x6a]
   140027998:	mov    DWORD PTR [rsp+0x66],r12d
   14002799d:	cmp    ax,si
   1400279a0:	jne    0x1400279ae
   1400279a2:	mov    WORD PTR [rsp+0x6a],r13w
   1400279a8:	add    r9w,r11w
   1400279ac:	jmp    0x1400279c0
   1400279ae:	add    ax,r11w
   1400279b2:	mov    WORD PTR [rsp+0x6a],ax
   1400279b7:	jmp    0x1400279c0
   1400279b9:	add    eax,r11d
   1400279bc:	mov    DWORD PTR [rsp+0x66],eax
   1400279c0:	mov    r8d,DWORD PTR [rsp+0x68]
   1400279c5:	jmp    0x1400279ce
   1400279c7:	add    eax,r11d
   1400279ca:	mov    DWORD PTR [rsp+0x62],eax
   1400279ce:	mov    r15d,0x7fff
   1400279d4:	cmp    r9w,r15w
   1400279d8:	jb     0x1400279f6
   1400279da:	neg    r14w
   1400279de:	mov    r8d,r12d
   1400279e1:	mov    edx,r12d
   1400279e4:	sbb    eax,eax
   1400279e6:	and    eax,0x80000000
   1400279eb:	add    eax,0x7fff8000
   1400279f0:	mov    DWORD PTR [rsp+0x78],eax
   1400279f4:	jmp    0x140027a42
   1400279f6:	movzx  eax,WORD PTR [rsp+0x62]
   1400279fb:	or     r9w,r14w
   1400279ff:	mov    DWORD PTR [rsp+0x76],r8d
   140027a04:	mov    WORD PTR [rsp+0x70],ax
   140027a09:	mov    eax,DWORD PTR [rsp+0x64]
   140027a0d:	mov    WORD PTR [rsp+0x7a],r9w
   140027a13:	mov    DWORD PTR [rsp+0x72],eax
   140027a17:	mov    r8d,DWORD PTR [rsp+0x74]
   140027a1c:	mov    edx,DWORD PTR [rsp+0x70]
   140027a20:	jmp    0x140027a42
   140027a22:	neg    r14w
   140027a26:	sbb    eax,eax
   140027a28:	and    eax,0x80000000
   140027a2d:	add    eax,0x7fff8000
   140027a32:	mov    DWORD PTR [rsp+0x78],eax
   140027a36:	mov    edx,r12d
   140027a39:	mov    r8d,r12d
   140027a3c:	mov    r13d,0x8000
   140027a42:	mov    eax,DWORD PTR [rsp+0x34]
   140027a46:	mov    esi,DWORD PTR [rsp+0x44]
   140027a4a:	mov    WORD PTR [rbx],ax
   140027a4d:	test   BYTE PTR [rsp+0x4c],r11b
   140027a52:	je     0x140027a72
   140027a54:	cwde   
   140027a55:	add    esi,eax
   140027a57:	cmp    esi,r12d
   140027a5a:	jg     0x140027a72
   140027a5c:	cmp    WORD PTR [rsp+0x30],r13w
   140027a62:	mov    eax,0x20
   140027a67:	lea    ecx,[rax+0xd]
   140027a6a:	cmove  eax,ecx
   140027a6d:	jmp    0x140027211
   140027a72:	mov    r10d,DWORD PTR [rsp+0x78]
   140027a77:	mov    eax,0x15
   140027a7c:	mov    WORD PTR [rsp+0x7a],r12w
   140027a82:	mov    r9d,DWORD PTR [rsp+0x78]
   140027a87:	cmp    esi,eax
   140027a89:	lea    edi,[rax-0xd]
   140027a8c:	cmovg  esi,eax
   140027a8f:	shr    r10d,0x10
   140027a93:	sub    r10d,0x3ffe
   140027a9a:	mov    ecx,r8d
   140027a9d:	mov    eax,edx
   140027a9f:	add    r9d,r9d
   140027aa2:	add    r8d,r8d
   140027aa5:	shr    eax,0x1f
   140027aa8:	shr    ecx,0x1f
   140027aab:	or     r8d,eax
   140027aae:	or     r9d,ecx
   140027ab1:	add    edx,edx
   140027ab3:	sub    rdi,r11
   140027ab6:	jne    0x140027a9a
   140027ab8:	cmp    r10d,r12d
   140027abb:	mov    DWORD PTR [rsp+0x74],r8d
   140027ac0:	mov    DWORD PTR [rsp+0x70],edx
   140027ac4:	mov    DWORD PTR [rsp+0x78],r9d
   140027ac9:	jge    0x140027b06
   140027acb:	neg    r10d
   140027ace:	movzx  r10d,r10b
   140027ad2:	cmp    r10d,r12d
   140027ad5:	jle    0x140027b06
   140027ad7:	mov    ecx,r8d
   140027ada:	mov    eax,r9d
   140027add:	shr    edx,1
   140027adf:	shr    r8d,1
   140027ae2:	shl    eax,0x1f
   140027ae5:	shl    ecx,0x1f
   140027ae8:	sub    r10d,r11d
   140027aeb:	shr    r9d,1
   140027aee:	or     r8d,eax
   140027af1:	or     edx,ecx
   140027af3:	cmp    r10d,r12d
   140027af6:	jg     0x140027ad7
   140027af8:	mov    DWORD PTR [rsp+0x74],r8d
   140027afd:	mov    DWORD PTR [rsp+0x70],edx
   140027b01:	mov    DWORD PTR [rsp+0x78],r9d
   140027b06:	lea    ebp,[rsi+0x1]
   140027b09:	lea    rdi,[rbx+0x4]
   140027b0d:	cmp    ebp,r12d
   140027b10:	mov    r10,rdi
   140027b13:	jle    0x140027c01
   140027b19:	add    r9d,r9d
   140027b1c:	lea    rcx,[rsp+0x70]
   140027b21:	lea    rsi,[rsp+0x90]
   140027b29:	mov    rax,QWORD PTR [rcx]
   140027b2c:	mov    QWORD PTR [rsi],rax
   140027b2f:	mov    eax,DWORD PTR [rcx+0x8]
   140027b32:	mov    ecx,r8d
   140027b35:	mov    DWORD PTR [rsi+0x8],eax
   140027b38:	mov    eax,edx
   140027b3a:	add    r8d,r8d
   140027b3d:	shr    eax,0x1f
   140027b40:	shr    ecx,0x1f
   140027b43:	add    edx,edx
   140027b45:	or     r8d,eax
   140027b48:	or     r9d,ecx
   140027b4b:	mov    eax,edx
   140027b4d:	mov    ecx,r8d
   140027b50:	shr    eax,0x1f
   140027b53:	add    r8d,r8d
   140027b56:	or     r8d,eax
   140027b59:	mov    rax,QWORD PTR [rsp+0x90]
   140027b61:	add    edx,edx
   140027b63:	shr    ecx,0x1f
   140027b66:	add    r9d,r9d
   140027b69:	lea    r12d,[rax+rdx*1]
   140027b6d:	or     r9d,ecx
   140027b70:	cmp    r12d,edx
   140027b73:	jb     0x140027b7a
   140027b75:	cmp    r12d,eax
   140027b78:	jae    0x140027b97
   140027b7a:	lea    ecx,[r8+0x1]
   140027b7e:	xor    edx,edx
   140027b80:	cmp    ecx,r8d
   140027b83:	jb     0x140027b8a
   140027b85:	cmp    ecx,r11d
   140027b88:	jae    0x140027b8d
   140027b8a:	mov    edx,r11d
   140027b8d:	mov    r8d,ecx
   140027b90:	test   edx,edx
   140027b92:	je     0x140027b97
   140027b94:	add    r9d,r11d
   140027b97:	shr    rax,0x20
   140027b9b:	lea    esi,[r8+rax*1]
   140027b9f:	cmp    esi,r8d
   140027ba2:	jb     0x140027ba8
   140027ba4:	cmp    esi,eax
   140027ba6:	jae    0x140027bab
   140027ba8:	add    r9d,r11d
   140027bab:	add    r9d,DWORD PTR [rsp+0x98]
   140027bb3:	mov    eax,r12d
   140027bb6:	lea    edx,[r12+r12*1]
   140027bba:	shr    eax,0x1f
   140027bbd:	xor    r12d,r12d
   140027bc0:	lea    r8d,[rsi+rsi*1]
   140027bc4:	or     r8d,eax
   140027bc7:	mov    ecx,esi
   140027bc9:	lea    eax,[r9+r9*1]
   140027bcd:	shr    ecx,0x1f
   140027bd0:	sub    ebp,r11d
   140027bd3:	mov    DWORD PTR [rsp+0x70],edx
   140027bd7:	or     eax,ecx
   140027bd9:	mov    DWORD PTR [rsp+0x74],r8d
   140027bde:	mov    DWORD PTR [rsp+0x78],eax
   140027be2:	shr    eax,0x18
   140027be5:	mov    BYTE PTR [rsp+0x7b],r12b
   140027bea:	add    al,0x30
   140027bec:	mov    BYTE PTR [r10],al
   140027bef:	add    r10,r11
   140027bf2:	cmp    ebp,r12d
   140027bf5:	jle    0x140027c01
   140027bf7:	mov    r9d,DWORD PTR [rsp+0x78]
   140027bfc:	jmp    0x140027b19
   140027c01:	sub    r10,r11
   140027c04:	mov    al,BYTE PTR [r10]
   140027c07:	sub    r10,r11
   140027c0a:	cmp    al,0x35
   140027c0c:	jl     0x140027c7c
   140027c0e:	jmp    0x140027c1d
   140027c10:	cmp    BYTE PTR [r10],0x39
   140027c14:	jne    0x140027c22
   140027c16:	mov    BYTE PTR [r10],0x30
   140027c1a:	sub    r10,r11
   140027c1d:	cmp    r10,rdi
   140027c20:	jae    0x140027c10
   140027c22:	cmp    r10,rdi
   140027c25:	jae    0x140027c2e
   140027c27:	add    r10,r11
   140027c2a:	add    WORD PTR [rbx],r11w
   140027c2e:	add    BYTE PTR [r10],r11b
   140027c31:	sub    r10b,bl
   140027c34:	sub    r10b,0x3
   140027c38:	movsx  rax,r10b
   140027c3c:	mov    BYTE PTR [rbx+0x3],r10b
   140027c40:	mov    BYTE PTR [rax+rbx*1+0x4],r12b
   140027c45:	mov    eax,r11d
   140027c48:	mov    rcx,QWORD PTR [rsp+0xa0]
   140027c50:	xor    rcx,rsp
   140027c53:	call   0x1400144f0
   140027c58:	mov    rbx,QWORD PTR [rsp+0xf8]
   140027c60:	add    rsp,0xb0
   140027c67:	pop    r15
   140027c69:	pop    r14
   140027c6b:	pop    r13
   140027c6d:	pop    r12
   140027c6f:	pop    rdi
   140027c70:	pop    rsi
   140027c71:	pop    rbp
   140027c72:	ret    
   140027c73:	cmp    BYTE PTR [r10],0x30
   140027c77:	jne    0x140027c81
   140027c79:	sub    r10,r11
   140027c7c:	cmp    r10,rdi
   140027c7f:	jae    0x140027c73
   140027c81:	cmp    r10,rdi
   140027c84:	jae    0x140027c31
   140027c86:	cmp    WORD PTR [rsp+0x30],r13w
   140027c8c:	mov    eax,0x20
   140027c91:	mov    BYTE PTR [rdi],0x30
   140027c94:	lea    ecx,[rax+0xd]
   140027c97:	cmove  eax,ecx
   140027c9a:	jmp    0x140027215
   140027c9f:	int3   
   140027ca0:	mov    QWORD PTR [rsp+0x10],rdx
   140027ca5:	mov    DWORD PTR [rsp+0x8],ecx
   140027ca9:	push   rbx
   140027caa:	push   rbp
   140027cab:	push   rsi
   140027cac:	push   rdi
   140027cad:	push   r12
   140027caf:	push   r13
   140027cb1:	push   r14
   140027cb3:	push   r15
   140027cb5:	sub    rsp,0x58
   140027cb9:	mov    r12d,0xfffffffe
   140027cbf:	movsxd rax,ecx
   140027cc2:	mov    ebx,r8d
   140027cc5:	mov    DWORD PTR [rsp+0x34],r12d
   140027cca:	mov    DWORD PTR [rsp+0x38],ebx
   140027cce:	cmp    eax,r12d
   140027cd1:	jne    0x140027cec
   140027cd3:	call   0x140015f68
   140027cd8:	xor    edi,edi
   140027cda:	mov    DWORD PTR [rax],edi
   140027cdc:	call   0x140015f48
   140027ce1:	mov    DWORD PTR [rax],0x9
   140027ce7:	jmp    0x14002840b
   140027cec:	xor    edi,edi
   140027cee:	cmp    eax,edi
   140027cf0:	jl     0x1400283e5
   140027cf6:	cmp    eax,DWORD PTR [rip+0x28928]        # 0x140050624
   140027cfc:	jae    0x1400283e5
   140027d02:	mov    rsi,rax
   140027d05:	mov    r14,rax
   140027d08:	lea    r9,[rip+0xfffffffffffd82f1]        # 0x140000000
   140027d0f:	sar    r14,0x5
   140027d13:	and    esi,0x1f
   140027d16:	mov    rcx,QWORD PTR [r9+r14*8+0x50640]
   140027d1e:	imul   rsi,rsi,0x58
   140027d22:	mov    al,BYTE PTR [rcx+rsi*1+0x8]
   140027d26:	test   al,0x1
   140027d28:	je     0x1400283e5
   140027d2e:	cmp    ebx,0x7fffffff
   140027d34:	jbe    0x140027d4d
   140027d36:	call   0x140015f68
   140027d3b:	mov    DWORD PTR [rax],edi
   140027d3d:	call   0x140015f48
   140027d42:	mov    DWORD PTR [rax],0x16
   140027d48:	jmp    0x1400283f7
   140027d4d:	mov    ebp,edi
   140027d4f:	cmp    ebx,edi
   140027d51:	je     0x1400283e1
   140027d57:	test   al,0x2
   140027d59:	jne    0x1400283e1
   140027d5f:	cmp    rdx,rdi
   140027d62:	je     0x140027d36
   140027d64:	mov    r15b,BYTE PTR [rcx+rsi*1+0x38]
   140027d69:	mov    r8d,0x4
   140027d6f:	add    r15b,r15b
   140027d72:	sar    r15b,1
   140027d75:	movsx  ecx,r15b
   140027d79:	sub    ecx,0x1
   140027d7c:	je     0x140027d93
   140027d7e:	sub    ecx,0x1
   140027d81:	jne    0x140027d8e
   140027d83:	mov    eax,ebx
   140027d85:	not    eax
   140027d87:	test   al,0x1
   140027d89:	je     0x140027d36
   140027d8b:	and    ebx,0xfffffffe
   140027d8e:	mov    r13,rdx
   140027d91:	jmp    0x140027df7
   140027d93:	mov    eax,ebx
   140027d95:	not    eax
   140027d97:	test   al,0x1
   140027d99:	je     0x140027d36
   140027d9b:	shr    ebx,1
   140027d9d:	cmp    ebx,r8d
   140027da0:	cmovb  ebx,r8d
   140027da4:	mov    ecx,ebx
   140027da6:	call   0x14001c424
   140027dab:	mov    r13,rax
   140027dae:	cmp    rax,rdi
   140027db1:	jne    0x140027dce
   140027db3:	call   0x140015f48
   140027db8:	mov    DWORD PTR [rax],0xc
   140027dbe:	call   0x140015f68
   140027dc3:	mov    DWORD PTR [rax],0x8
   140027dc9:	jmp    0x14002840b
   140027dce:	mov    ecx,DWORD PTR [rsp+0xa0]
   140027dd5:	xor    edx,edx
   140027dd7:	lea    r8d,[rdx+0x1]
   140027ddb:	call   0x140023a38
   140027de0:	lea    r9,[rip+0xfffffffffffd8219]        # 0x140000000
   140027de7:	mov    r11,rax
   140027dea:	mov    rax,QWORD PTR [r9+r14*8+0x50640]
   140027df2:	mov    QWORD PTR [rax+rsi*1+0x40],r11
   140027df7:	mov    rax,QWORD PTR [r9+r14*8+0x50640]
   140027dff:	mov    rdx,r13
   140027e02:	mov    r8d,0xa
   140027e08:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140027e0d:	je     0x140027eaf
   140027e13:	mov    cl,BYTE PTR [rax+rsi*1+0x9]
   140027e17:	cmp    cl,r8b
   140027e1a:	je     0x140027eaf
   140027e20:	cmp    ebx,edi
   140027e22:	je     0x140027eaf
   140027e28:	mov    BYTE PTR [r13+0x0],cl
   140027e2c:	mov    rax,QWORD PTR [r9+r14*8+0x50640]
   140027e34:	or     r10d,0xffffffff
   140027e38:	add    ebx,r10d
   140027e3b:	lea    rdx,[r13+0x1]
   140027e3f:	lea    ebp,[r8-0x9]
   140027e43:	mov    BYTE PTR [rax+rsi*1+0x9],r8b
   140027e48:	cmp    r15b,dil
   140027e4b:	je     0x140027eaf
   140027e4d:	mov    rax,QWORD PTR [r9+r14*8+0x50640]
   140027e55:	mov    cl,BYTE PTR [rax+rsi*1+0x39]
   140027e59:	cmp    cl,r8b
   140027e5c:	je     0x140027eaf
   140027e5e:	cmp    ebx,edi
   140027e60:	je     0x140027eaf
   140027e62:	mov    BYTE PTR [rdx],cl
   140027e64:	mov    rax,QWORD PTR [r9+r14*8+0x50640]
   140027e6c:	add    ebx,r10d
   140027e6f:	inc    rdx
   140027e72:	lea    ebp,[r8-0x8]
   140027e76:	mov    BYTE PTR [rax+rsi*1+0x39],r8b
   140027e7b:	cmp    r15b,0x1
   140027e7f:	jne    0x140027eaf
   140027e81:	mov    rax,QWORD PTR [r9+r14*8+0x50640]
   140027e89:	mov    cl,BYTE PTR [rax+rsi*1+0x3a]
   140027e8d:	cmp    cl,r8b
   140027e90:	je     0x140027eaf
   140027e92:	cmp    ebx,edi
   140027e94:	je     0x140027eaf
   140027e96:	mov    BYTE PTR [rdx],cl
   140027e98:	mov    rax,QWORD PTR [r9+r14*8+0x50640]
   140027ea0:	inc    rdx
   140027ea3:	lea    ebp,[r8-0x7]
   140027ea7:	add    ebx,r10d
   140027eaa:	mov    BYTE PTR [rax+rsi*1+0x3a],r8b
   140027eaf:	mov    rcx,QWORD PTR [r9+r14*8+0x50640]
   140027eb7:	lea    r9,[rsp+0x30]
   140027ebc:	mov    r8d,ebx
   140027ebf:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140027ec3:	mov    QWORD PTR [rsp+0x20],rdi
   140027ec8:	call   QWORD PTR [rip+0xe482]        # 0x140036350
   140027ece:	cmp    eax,edi
   140027ed0:	je     0x1400283a5
   140027ed6:	movsxd rdx,DWORD PTR [rsp+0x30]
   140027edb:	cmp    edx,edi
   140027edd:	jl     0x1400283a5
   140027ee3:	mov    eax,ebx
   140027ee5:	cmp    rdx,rax
   140027ee8:	ja     0x1400283a5
   140027eee:	lea    r8,[rip+0xfffffffffffd810b]        # 0x140000000
   140027ef5:	add    ebp,edx
   140027ef7:	mov    rax,QWORD PTR [r8+r14*8+0x50640]
   140027eff:	test   BYTE PTR [rax+rsi*1+0x8],0x80
   140027f04:	je     0x140028383
   140027f0a:	cmp    r15b,0x2
   140027f0e:	je     0x1400281cc
   140027f14:	cmp    edx,edi
   140027f16:	je     0x140027f26
   140027f18:	cmp    BYTE PTR [r13+0x0],0xa
   140027f1d:	jne    0x140027f26
   140027f1f:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   140027f24:	jmp    0x140027f2b
   140027f26:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   140027f2b:	movsxd rax,ebp
   140027f2e:	mov    rbx,r13
   140027f31:	mov    r12,r13
   140027f34:	add    rax,r13
   140027f37:	mov    QWORD PTR [rsp+0x40],rax
   140027f3c:	cmp    r13,rax
   140027f3f:	jae    0x14002807f
   140027f45:	mov    ebp,0xd
   140027f4a:	mov    al,BYTE PTR [r12]
   140027f4e:	cmp    al,0x1a
   140027f50:	je     0x140028060
   140027f56:	cmp    al,bpl
   140027f59:	je     0x140027f68
   140027f5b:	mov    BYTE PTR [rbx],al
   140027f5d:	inc    rbx
   140027f60:	inc    r12
   140027f63:	jmp    0x140028053
   140027f68:	mov    rax,QWORD PTR [rsp+0x40]
   140027f6d:	dec    rax
   140027f70:	cmp    r12,rax
   140027f73:	jae    0x140027f90
   140027f75:	lea    rax,[r12+0x1]
   140027f7a:	cmp    BYTE PTR [rax],0xa
   140027f7d:	jne    0x140027f88
   140027f7f:	add    r12,0x2
   140027f83:	jmp    0x140028018
   140027f88:	mov    r12,rax
   140027f8b:	jmp    0x14002804d
   140027f90:	mov    rcx,QWORD PTR [r8+r14*8+0x50640]
   140027f98:	lea    r9,[rsp+0x30]
   140027f9d:	lea    rdx,[rsp+0xb0]
   140027fa5:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140027fa9:	mov    r8d,0x1
   140027faf:	inc    r12
   140027fb2:	mov    QWORD PTR [rsp+0x20],rdi
   140027fb7:	call   QWORD PTR [rip+0xe393]        # 0x140036350
   140027fbd:	cmp    eax,edi
   140027fbf:	jne    0x140027fcb
   140027fc1:	call   QWORD PTR [rip+0xe499]        # 0x140036460
   140027fc7:	cmp    eax,edi
   140027fc9:	jne    0x140028046
   140027fcb:	cmp    DWORD PTR [rsp+0x30],edi
   140027fcf:	je     0x140028046
   140027fd1:	lea    r8,[rip+0xfffffffffffd8028]        # 0x140000000
   140027fd8:	mov    rax,QWORD PTR [r8+r14*8+0x50640]
   140027fe0:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   140027fe5:	je     0x140028009
   140027fe7:	cmp    BYTE PTR [rsp+0xb0],0xa
   140027fef:	je     0x140028018
   140027ff1:	mov    BYTE PTR [rbx],bpl
   140027ff4:	mov    rcx,QWORD PTR [r8+r14*8+0x50640]
   140027ffc:	mov    al,BYTE PTR [rsp+0xb0]
   140028003:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   140028007:	jmp    0x140028050
   140028009:	cmp    rbx,r13
   14002800c:	jne    0x14002801d
   14002800e:	cmp    BYTE PTR [rsp+0xb0],0xa
   140028016:	jne    0x14002801d
   140028018:	mov    BYTE PTR [rbx],0xa
   14002801b:	jmp    0x140028050
   14002801d:	mov    ecx,DWORD PTR [rsp+0xa0]
   140028024:	mov    r8d,0x1
   14002802a:	or     rdx,0xffffffffffffffff
   14002802e:	call   0x140023a38
   140028033:	cmp    BYTE PTR [rsp+0xb0],0xa
   14002803b:	lea    r8,[rip+0xfffffffffffd7fbe]        # 0x140000000
   140028042:	je     0x140028053
   140028044:	jmp    0x14002804d
   140028046:	lea    r8,[rip+0xfffffffffffd7fb3]        # 0x140000000
   14002804d:	mov    BYTE PTR [rbx],bpl
   140028050:	inc    rbx
   140028053:	cmp    r12,QWORD PTR [rsp+0x40]
   140028058:	jb     0x140027f4a
   14002805e:	jmp    0x14002807f
   140028060:	mov    rax,QWORD PTR [r8+r14*8+0x50640]
   140028068:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   14002806d:	jne    0x140028076
   14002806f:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   140028074:	jmp    0x14002807f
   140028076:	mov    al,BYTE PTR [r12]
   14002807a:	mov    BYTE PTR [rbx],al
   14002807c:	inc    rbx
   14002807f:	mov    ebp,ebx
   140028081:	sub    ebp,r13d
   140028084:	cmp    r15b,0x1
   140028088:	jne    0x14002837e
   14002808e:	cmp    ebp,edi
   140028090:	je     0x14002837e
   140028096:	mov    r15d,0x1
   14002809c:	sub    rbx,r15
   14002809f:	test   BYTE PTR [rbx],0x80
   1400280a2:	jne    0x1400280ac
   1400280a4:	add    rbx,r15
   1400280a7:	jmp    0x14002815e
   1400280ac:	mov    edx,r15d
   1400280af:	jmp    0x1400280c1
   1400280b1:	cmp    edx,0x4
   1400280b4:	jg     0x1400280ce
   1400280b6:	cmp    rbx,r13
   1400280b9:	jb     0x1400280ce
   1400280bb:	sub    rbx,r15
   1400280be:	add    edx,r15d
   1400280c1:	movzx  eax,BYTE PTR [rbx]
   1400280c4:	cmp    BYTE PTR [rax+r8*1+0x4a230],dil
   1400280cc:	je     0x1400280b1
   1400280ce:	movzx  ecx,BYTE PTR [rbx]
   1400280d1:	movsx  eax,BYTE PTR [rcx+r8*1+0x4a230]
   1400280da:	cmp    eax,edi
   1400280dc:	jne    0x1400280f2
   1400280de:	call   0x140015f48
   1400280e3:	mov    DWORD PTR [rax],0x2a
   1400280e9:	or     r12d,0xffffffff
   1400280ed:	jmp    0x140028383
   1400280f2:	inc    eax
   1400280f4:	cmp    eax,edx
   1400280f6:	jne    0x140028100
   1400280f8:	movsxd rax,edx
   1400280fb:	add    rbx,rax
   1400280fe:	jmp    0x14002815e
   140028100:	mov    rax,QWORD PTR [r8+r14*8+0x50640]
   140028108:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   14002810d:	je     0x14002814a
   14002810f:	add    rbx,r15
   140028112:	cmp    edx,0x2
   140028115:	mov    BYTE PTR [rax+rsi*1+0x9],cl
   140028119:	jl     0x14002812c
   14002811b:	mov    al,BYTE PTR [rbx]
   14002811d:	mov    rcx,QWORD PTR [r8+r14*8+0x50640]
   140028125:	add    rbx,r15
   140028128:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   14002812c:	cmp    edx,0x3
   14002812f:	jne    0x140028142
   140028131:	mov    al,BYTE PTR [rbx]
   140028133:	mov    rcx,QWORD PTR [r8+r14*8+0x50640]
   14002813b:	add    rbx,r15
   14002813e:	mov    BYTE PTR [rcx+rsi*1+0x3a],al
   140028142:	movsxd rax,edx
   140028145:	sub    rbx,rax
   140028148:	jmp    0x14002815e
   14002814a:	mov    ecx,DWORD PTR [rsp+0xa0]
   140028151:	neg    edx
   140028153:	mov    r8d,r15d
   140028156:	movsxd rdx,edx
   140028159:	call   0x140023a38
   14002815e:	mov    eax,DWORD PTR [rsp+0x38]
   140028162:	mov    r15,QWORD PTR [rsp+0xa8]
   14002816a:	sub    ebx,r13d
   14002816d:	shr    eax,1
   14002816f:	mov    r9d,ebx
   140028172:	mov    r8,r13
   140028175:	mov    DWORD PTR [rsp+0x28],eax
   140028179:	xor    edx,edx
   14002817b:	mov    ecx,0xfde9
   140028180:	mov    QWORD PTR [rsp+0x20],r15
   140028185:	call   QWORD PTR [rip+0xe225]        # 0x1400363b0
   14002818b:	mov    ebp,eax
   14002818d:	cmp    eax,edi
   14002818f:	jne    0x1400281a7
   140028191:	call   QWORD PTR [rip+0xe2c9]        # 0x140036460
   140028197:	mov    ecx,eax
   140028199:	call   0x140015f88
   14002819e:	or     r12d,0xffffffff
   1400281a2:	jmp    0x14002838b
   1400281a7:	mov    r12d,DWORD PTR [rsp+0x34]
   1400281ac:	cmp    eax,ebx
   1400281ae:	lea    rax,[rip+0xfffffffffffd7e4b]        # 0x140000000
   1400281b5:	mov    rax,QWORD PTR [rax+r14*8+0x50640]
   1400281bd:	setne  dil
   1400281c1:	add    ebp,ebp
   1400281c3:	mov    DWORD PTR [rax+rsi*1+0x48],edi
   1400281c7:	jmp    0x14002838b
   1400281cc:	cmp    edx,edi
   1400281ce:	mov    edx,0xa
   1400281d3:	je     0x1400281e3
   1400281d5:	cmp    WORD PTR [r13+0x0],dx
   1400281da:	jne    0x1400281e3
   1400281dc:	or     BYTE PTR [rax+rsi*1+0x8],0x4
   1400281e1:	jmp    0x1400281e8
   1400281e3:	and    BYTE PTR [rax+rsi*1+0x8],0xfb
   1400281e8:	movsxd rax,ebp
   1400281eb:	mov    rbx,r13
   1400281ee:	mov    r12,r13
   1400281f1:	lea    r15,[rax+r13*1]
   1400281f5:	cmp    r13,r15
   1400281f8:	jae    0x140028379
   1400281fe:	mov    ebp,0xd
   140028203:	movzx  eax,WORD PTR [r12]
   140028208:	cmp    ax,0x1a
   14002820c:	je     0x140028357
   140028212:	cmp    ax,bp
   140028215:	je     0x140028227
   140028217:	mov    WORD PTR [rbx],ax
   14002821a:	add    rbx,0x2
   14002821e:	add    r12,0x2
   140028222:	jmp    0x14002834c
   140028227:	lea    rax,[r15-0x2]
   14002822b:	cmp    r12,rax
   14002822e:	jae    0x14002824b
   140028230:	lea    rax,[r12+0x2]
   140028235:	cmp    WORD PTR [rax],dx
   140028238:	jne    0x140028243
   14002823a:	add    r12,0x4
   14002823e:	jmp    0x140028305
   140028243:	mov    r12,rax
   140028246:	jmp    0x140028345
   14002824b:	mov    rcx,QWORD PTR [r8+r14*8+0x50640]
   140028253:	lea    r9,[rsp+0x30]
   140028258:	lea    rdx,[rsp+0xb8]
   140028260:	mov    rcx,QWORD PTR [rcx+rsi*1]
   140028264:	mov    r8d,0x2
   14002826a:	add    r12,0x2
   14002826e:	mov    QWORD PTR [rsp+0x20],rdi
   140028273:	call   QWORD PTR [rip+0xe0d7]        # 0x140036350
   140028279:	cmp    eax,edi
   14002827b:	jne    0x14002828b
   14002827d:	call   QWORD PTR [rip+0xe1dd]        # 0x140036460
   140028283:	cmp    eax,edi
   140028285:	jne    0x140028339
   14002828b:	cmp    DWORD PTR [rsp+0x30],edi
   14002828f:	je     0x140028339
   140028295:	lea    r8,[rip+0xfffffffffffd7d64]        # 0x140000000
   14002829c:	mov    rax,QWORD PTR [r8+r14*8+0x50640]
   1400282a4:	test   BYTE PTR [rax+rsi*1+0x8],0x48
   1400282a9:	je     0x1400282f1
   1400282ab:	mov    edx,0xa
   1400282b0:	cmp    WORD PTR [rsp+0xb8],dx
   1400282b8:	je     0x140028305
   1400282ba:	mov    WORD PTR [rbx],bp
   1400282bd:	mov    al,BYTE PTR [rsp+0xb8]
   1400282c4:	mov    rcx,QWORD PTR [r8+r14*8+0x50640]
   1400282cc:	mov    BYTE PTR [rcx+rsi*1+0x9],al
   1400282d0:	mov    al,BYTE PTR [rsp+0xb9]
   1400282d7:	mov    rcx,QWORD PTR [r8+r14*8+0x50640]
   1400282df:	mov    BYTE PTR [rcx+rsi*1+0x39],al
   1400282e3:	mov    rax,QWORD PTR [r8+r14*8+0x50640]
   1400282eb:	mov    BYTE PTR [rax+rsi*1+0x3a],dl
   1400282ef:	jmp    0x140028348
   1400282f1:	cmp    rbx,r13
   1400282f4:	jne    0x14002830a
   1400282f6:	mov    edx,0xa
   1400282fb:	cmp    WORD PTR [rsp+0xb8],dx
   140028303:	jne    0x14002830a
   140028305:	mov    WORD PTR [rbx],dx
   140028308:	jmp    0x140028348
   14002830a:	mov    ecx,DWORD PTR [rsp+0xa0]
   140028311:	mov    rdx,0xfffffffffffffffe
   140028318:	lea    r8d,[rdx+0x3]
   14002831c:	call   0x140023a38
   140028321:	mov    edx,0xa
   140028326:	lea    r8,[rip+0xfffffffffffd7cd3]        # 0x140000000
   14002832d:	cmp    WORD PTR [rsp+0xb8],dx
   140028335:	je     0x14002834c
   140028337:	jmp    0x140028345
   140028339:	mov    edx,0xa
   14002833e:	lea    r8,[rip+0xfffffffffffd7cbb]        # 0x140000000
   140028345:	mov    WORD PTR [rbx],bp
   140028348:	add    rbx,0x2
   14002834c:	cmp    r12,r15
   14002834f:	jb     0x140028203
   140028355:	jmp    0x140028379
   140028357:	mov    rax,QWORD PTR [r8+r14*8+0x50640]
   14002835f:	test   BYTE PTR [rax+rsi*1+0x8],0x40
   140028364:	jne    0x14002836d
   140028366:	or     BYTE PTR [rax+rsi*1+0x8],0x2
   14002836b:	jmp    0x140028379
   14002836d:	movzx  eax,WORD PTR [r12]
   140028372:	mov    WORD PTR [rbx],ax
   140028375:	add    rbx,0x2
   140028379:	mov    ebp,ebx
   14002837b:	sub    ebp,r13d
   14002837e:	mov    r12d,DWORD PTR [rsp+0x34]
   140028383:	mov    r15,QWORD PTR [rsp+0xa8]
   14002838b:	cmp    r13,r15
   14002838e:	je     0x140028398
   140028390:	mov    rcx,r13
   140028393:	call   0x140014f10
   140028398:	cmp    r12d,0xfffffffe
   14002839c:	cmove  r12d,ebp
   1400283a0:	mov    eax,r12d
   1400283a3:	jmp    0x14002840e
   1400283a5:	call   QWORD PTR [rip+0xe0b5]        # 0x140036460
   1400283ab:	cmp    eax,0x5
   1400283ae:	jne    0x1400283cb
   1400283b0:	call   0x140015f48
   1400283b5:	mov    DWORD PTR [rax],0x9
   1400283bb:	call   0x140015f68
   1400283c0:	mov    DWORD PTR [rax],0x5
   1400283c6:	jmp    0x1400280e9
   1400283cb:	cmp    eax,0x6d
   1400283ce:	jne    0x1400283d5
   1400283d0:	mov    r12d,edi
   1400283d3:	jmp    0x140028383
   1400283d5:	mov    ecx,eax
   1400283d7:	call   0x140015f88
   1400283dc:	jmp    0x1400280e9
   1400283e1:	xor    eax,eax
   1400283e3:	jmp    0x14002840e
   1400283e5:	call   0x140015f68
   1400283ea:	mov    DWORD PTR [rax],edi
   1400283ec:	call   0x140015f48
   1400283f1:	mov    DWORD PTR [rax],0x9
   1400283f7:	xor    r9d,r9d
   1400283fa:	xor    r8d,r8d
   1400283fd:	xor    edx,edx
   1400283ff:	xor    ecx,ecx
   140028401:	mov    QWORD PTR [rsp+0x20],rdi
   140028406:	call   0x1400149a8
   14002840b:	or     eax,0xffffffff
   14002840e:	add    rsp,0x58
   140028412:	pop    r15
   140028414:	pop    r14
   140028416:	pop    r13
   140028418:	pop    r12
   14002841a:	pop    rdi
   14002841b:	pop    rsi
   14002841c:	pop    rbp
   14002841d:	pop    rbx
   14002841e:	ret    
   14002841f:	int3   
   140028420:	mov    QWORD PTR [rsp+0x10],rbx
   140028425:	mov    QWORD PTR [rsp+0x18],rsi
   14002842a:	mov    DWORD PTR [rsp+0x8],ecx
   14002842e:	push   rdi
   14002842f:	push   r12
   140028431:	push   r13
   140028433:	push   r14
   140028435:	push   r15
   140028437:	sub    rsp,0x30
   14002843b:	mov    esi,r8d
   14002843e:	mov    r13,rdx
   140028441:	movsxd rdi,ecx
   140028444:	cmp    edi,0xfffffffe
   140028447:	jne    0x140028465
   140028449:	call   0x140015f68
   14002844e:	xor    ebx,ebx
   140028450:	mov    DWORD PTR [rax],ebx
   140028452:	call   0x140015f48
   140028457:	mov    DWORD PTR [rax],0x9
   14002845d:	or     eax,0xffffffff
   140028460:	jmp    0x14002857a
   140028465:	xor    ebx,ebx
   140028467:	cmp    edi,ebx
   140028469:	jl     0x140028551
   14002846f:	cmp    edi,DWORD PTR [rip+0x281af]        # 0x140050624
   140028475:	jae    0x140028551
   14002847b:	mov    r12,rdi
   14002847e:	mov    r14,rdi
   140028481:	sar    r14,0x5
   140028485:	lea    r15,[rip+0x281b4]        # 0x140050640
   14002848c:	and    r12d,0x1f
   140028490:	imul   r12,r12,0x58
   140028494:	mov    rax,QWORD PTR [r15+r14*8]
   140028498:	movsx  ecx,BYTE PTR [rax+r12*1+0x8]
   14002849e:	and    ecx,0x1
   1400284a1:	jne    0x1400284d1
   1400284a3:	call   0x140015f68
   1400284a8:	mov    DWORD PTR [rax],ebx
   1400284aa:	call   0x140015f48
   1400284af:	mov    DWORD PTR [rax],0x9
   1400284b5:	mov    QWORD PTR [rsp+0x20],rbx
   1400284ba:	xor    r9d,r9d
   1400284bd:	xor    r8d,r8d
   1400284c0:	xor    edx,edx
   1400284c2:	xor    ecx,ecx
   1400284c4:	call   0x1400149a8
   1400284c9:	or     eax,0xffffffff
   1400284cc:	jmp    0x14002857a
   1400284d1:	mov    eax,ebx
   1400284d3:	cmp    r8d,0x7fffffff
   1400284da:	setbe  al
   1400284dd:	cmp    eax,ebx
   1400284df:	jne    0x14002850c
   1400284e1:	call   0x140015f68
   1400284e6:	mov    DWORD PTR [rax],ebx
   1400284e8:	call   0x140015f48
   1400284ed:	mov    DWORD PTR [rax],0x16
   1400284f3:	mov    QWORD PTR [rsp+0x20],rbx
   1400284f8:	xor    r9d,r9d
   1400284fb:	xor    r8d,r8d
   1400284fe:	xor    edx,edx
   140028500:	xor    ecx,ecx
   140028502:	call   0x1400149a8
   140028507:	or     eax,0xffffffff
   14002850a:	jmp    0x14002857a
   14002850c:	mov    ecx,edi
   14002850e:	call   0x1400256d0
   140028513:	nop
   140028514:	mov    rax,QWORD PTR [r15+r14*8]
   140028518:	test   BYTE PTR [rax+r12*1+0x8],0x1
   14002851e:	je     0x140028531
   140028520:	mov    r8d,esi
   140028523:	mov    rdx,r13
   140028526:	mov    ecx,edi
   140028528:	call   0x140027ca0
   14002852d:	mov    ebx,eax
   14002852f:	jmp    0x140028546
   140028531:	call   0x140015f48
   140028536:	mov    DWORD PTR [rax],0x9
   14002853c:	call   0x140015f68
   140028541:	mov    DWORD PTR [rax],ebx
   140028543:	or     ebx,0xffffffff
   140028546:	mov    ecx,edi
   140028548:	call   0x140025778
   14002854d:	mov    eax,ebx
   14002854f:	jmp    0x14002857a
   140028551:	call   0x140015f68
   140028556:	mov    DWORD PTR [rax],ebx
   140028558:	call   0x140015f48
   14002855d:	mov    DWORD PTR [rax],0x9
   140028563:	mov    QWORD PTR [rsp+0x20],rbx
   140028568:	xor    r9d,r9d
   14002856b:	xor    r8d,r8d
   14002856e:	xor    edx,edx
   140028570:	xor    ecx,ecx
   140028572:	call   0x1400149a8
   140028577:	or     eax,0xffffffff
   14002857a:	mov    rbx,QWORD PTR [rsp+0x68]
   14002857f:	mov    rsi,QWORD PTR [rsp+0x70]
   140028584:	add    rsp,0x30
   140028588:	pop    r15
   14002858a:	pop    r14
   14002858c:	pop    r13
   14002858e:	pop    r12
   140028590:	pop    rdi
   140028591:	ret    
   140028592:	int3   
   140028593:	int3   
   140028594:	sub    rsp,0x48
   140028598:	and    QWORD PTR [rsp+0x30],0x0
   14002859e:	and    DWORD PTR [rsp+0x28],0x0
   1400285a3:	mov    r8d,0x3
   1400285a9:	lea    rcx,[rip+0x13808]        # 0x14003bdb8
   1400285b0:	xor    r9d,r9d
   1400285b3:	mov    edx,0x40000000
   1400285b8:	mov    DWORD PTR [rsp+0x20],r8d
   1400285bd:	call   QWORD PTR [rip+0xdd65]        # 0x140036328
   1400285c3:	mov    QWORD PTR [rip+0x21d6e],rax        # 0x14004a338
   1400285ca:	add    rsp,0x48
   1400285ce:	ret    
   1400285cf:	int3   
   1400285d0:	sub    rsp,0x28
   1400285d4:	mov    rcx,QWORD PTR [rip+0x21d5d]        # 0x14004a338
   1400285db:	cmp    rcx,0xffffffffffffffff
   1400285df:	je     0x1400285ed
   1400285e1:	cmp    rcx,0xfffffffffffffffe
   1400285e5:	je     0x1400285ed
   1400285e7:	call   QWORD PTR [rip+0xddb3]        # 0x1400363a0
   1400285ed:	mov    rcx,QWORD PTR [rip+0x21d3c]        # 0x14004a330
   1400285f4:	cmp    rcx,0xffffffffffffffff
   1400285f8:	je     0x140028606
   1400285fa:	cmp    rcx,0xfffffffffffffffe
   1400285fe:	je     0x140028606
   140028600:	call   QWORD PTR [rip+0xdd9a]        # 0x1400363a0
   140028606:	add    rsp,0x28
   14002860a:	ret    
   14002860b:	int3   
   14002860c:	mov    QWORD PTR [rsp+0x8],rbx
   140028611:	push   rdi
   140028612:	sub    rsp,0x30
   140028616:	or     edi,0xffffffff
   140028619:	mov    rbx,rcx
   14002861c:	test   rcx,rcx
   14002861f:	jne    0x140028644
   140028621:	call   0x140015f48
   140028626:	and    QWORD PTR [rsp+0x20],rbx
   14002862b:	xor    r9d,r9d
   14002862e:	xor    r8d,r8d
   140028631:	xor    edx,edx
   140028633:	xor    ecx,ecx
   140028635:	mov    DWORD PTR [rax],0x16
   14002863b:	call   0x1400149a8
   140028640:	or     eax,edi
   140028642:	jmp    0x14002868a
   140028644:	test   BYTE PTR [rcx+0x18],0x83
   140028648:	je     0x140028684
   14002864a:	call   0x140025964
   14002864f:	mov    rcx,rbx
   140028652:	mov    edi,eax
   140028654:	call   0x140028c18
   140028659:	mov    rcx,rbx
   14002865c:	call   0x140024784
   140028661:	mov    ecx,eax
   140028663:	call   0x140028b00
   140028668:	test   eax,eax
   14002866a:	jns    0x140028671
   14002866c:	or     edi,0xffffffff
   14002866f:	jmp    0x140028684
   140028671:	mov    rcx,QWORD PTR [rbx+0x28]
   140028675:	test   rcx,rcx
   140028678:	je     0x140028684
   14002867a:	call   0x140014f10
   14002867f:	and    QWORD PTR [rbx+0x28],0x0
   140028684:	and    DWORD PTR [rbx+0x18],0x0
   140028688:	mov    eax,edi
   14002868a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002868f:	add    rsp,0x30
   140028693:	pop    rdi
   140028694:	ret    
   140028695:	int3   
   140028696:	int3   
   140028697:	int3   
   140028698:	mov    QWORD PTR [rsp+0x10],rbx
   14002869d:	mov    QWORD PTR [rsp+0x8],rcx
   1400286a2:	push   rdi
   1400286a3:	sub    rsp,0x30
   1400286a7:	mov    rbx,rcx
   1400286aa:	or     edi,0xffffffff
   1400286ad:	xor    eax,eax
   1400286af:	test   rcx,rcx
   1400286b2:	setne  al
   1400286b5:	test   eax,eax
   1400286b7:	jne    0x1400286dd
   1400286b9:	call   0x140015f48
   1400286be:	mov    DWORD PTR [rax],0x16
   1400286c4:	and    QWORD PTR [rsp+0x20],0x0
   1400286ca:	xor    r9d,r9d
   1400286cd:	xor    r8d,r8d
   1400286d0:	xor    edx,edx
   1400286d2:	xor    ecx,ecx
   1400286d4:	call   0x1400149a8
   1400286d9:	mov    eax,edi
   1400286db:	jmp    0x140028703
   1400286dd:	test   BYTE PTR [rcx+0x18],0x40
   1400286e1:	je     0x1400286e9
   1400286e3:	and    DWORD PTR [rcx+0x18],0x0
   1400286e7:	jmp    0x140028701
   1400286e9:	call   0x140024674
   1400286ee:	nop
   1400286ef:	mov    rcx,rbx
   1400286f2:	call   0x14002860c
   1400286f7:	mov    edi,eax
   1400286f9:	mov    rcx,rbx
   1400286fc:	call   0x140024704
   140028701:	mov    eax,edi
   140028703:	mov    rbx,QWORD PTR [rsp+0x48]
   140028708:	add    rsp,0x30
   14002870c:	pop    rdi
   14002870d:	ret    
   14002870e:	int3   
   14002870f:	int3   
   140028710:	mov    QWORD PTR [rsp+0x18],rbx
   140028715:	mov    DWORD PTR [rsp+0x8],ecx
   140028719:	push   rsi
   14002871a:	push   rdi
   14002871b:	push   r12
   14002871d:	sub    rsp,0x30
   140028721:	movsxd rdi,ecx
   140028724:	cmp    edi,0xfffffffe
   140028727:	jne    0x14002873c
   140028729:	call   0x140015f48
   14002872e:	mov    DWORD PTR [rax],0x9
   140028734:	or     eax,0xffffffff
   140028737:	jmp    0x140028815
   14002873c:	test   ecx,ecx
   14002873e:	js     0x1400287f2
   140028744:	cmp    edi,DWORD PTR [rip+0x27eda]        # 0x140050624
   14002874a:	jae    0x1400287f2
   140028750:	mov    rbx,rdi
   140028753:	mov    rsi,rdi
   140028756:	sar    rsi,0x5
   14002875a:	lea    r12,[rip+0x27edf]        # 0x140050640
   140028761:	and    ebx,0x1f
   140028764:	imul   rbx,rbx,0x58
   140028768:	mov    rax,QWORD PTR [r12+rsi*8]
   14002876c:	movsx  ecx,BYTE PTR [rax+rbx*1+0x8]
   140028771:	and    ecx,0x1
   140028774:	jne    0x14002879b
   140028776:	call   0x140015f48
   14002877b:	mov    DWORD PTR [rax],0x9
   140028781:	and    QWORD PTR [rsp+0x20],0x0
   140028787:	xor    r9d,r9d
   14002878a:	xor    r8d,r8d
   14002878d:	xor    edx,edx
   14002878f:	xor    ecx,ecx
   140028791:	call   0x1400149a8
   140028796:	or     eax,0xffffffff
   140028799:	jmp    0x140028815
   14002879b:	mov    ecx,edi
   14002879d:	call   0x1400256d0
   1400287a2:	nop
   1400287a3:	mov    rax,QWORD PTR [r12+rsi*8]
   1400287a7:	test   BYTE PTR [rax+rbx*1+0x8],0x1
   1400287ac:	je     0x1400287d9
   1400287ae:	mov    ecx,edi
   1400287b0:	call   0x14002564c
   1400287b5:	mov    rcx,rax
   1400287b8:	call   QWORD PTR [rip+0xdb7a]        # 0x140036338
   1400287be:	test   eax,eax
   1400287c0:	jne    0x1400287cc
   1400287c2:	call   QWORD PTR [rip+0xdc98]        # 0x140036460
   1400287c8:	mov    ebx,eax
   1400287ca:	jmp    0x1400287ce
   1400287cc:	xor    ebx,ebx
   1400287ce:	test   ebx,ebx
   1400287d0:	je     0x1400287e7
   1400287d2:	call   0x140015f68
   1400287d7:	mov    DWORD PTR [rax],ebx
   1400287d9:	call   0x140015f48
   1400287de:	mov    DWORD PTR [rax],0x9
   1400287e4:	or     ebx,0xffffffff
   1400287e7:	mov    ecx,edi
   1400287e9:	call   0x140025778
   1400287ee:	mov    eax,ebx
   1400287f0:	jmp    0x140028815
   1400287f2:	call   0x140015f48
   1400287f7:	mov    DWORD PTR [rax],0x9
   1400287fd:	and    QWORD PTR [rsp+0x20],0x0
   140028803:	xor    r9d,r9d
   140028806:	xor    r8d,r8d
   140028809:	xor    edx,edx
   14002880b:	xor    ecx,ecx
   14002880d:	call   0x1400149a8
   140028812:	or     eax,0xffffffff
   140028815:	mov    rbx,QWORD PTR [rsp+0x60]
   14002881a:	add    rsp,0x30
   14002881e:	pop    r12
   140028820:	pop    rdi
   140028821:	pop    rsi
   140028822:	ret    
   140028823:	int3   
   140028824:	mov    QWORD PTR [rsp+0x8],rbx
   140028829:	mov    QWORD PTR [rsp+0x10],rbp
   14002882e:	push   rsi
   14002882f:	push   rdi
   140028830:	push   r13
   140028832:	sub    rsp,0x20
   140028836:	mov    rax,QWORD PTR [rip+0x20583]        # 0x140048dc0
   14002883d:	xor    rax,rsp
   140028840:	mov    QWORD PTR [rsp+0x10],rax
   140028845:	and    DWORD PTR [r8],0x0
   140028849:	and    DWORD PTR [r8+0x4],0x0
   14002884e:	and    DWORD PTR [r8+0x8],0x0
   140028853:	mov    rbx,r8
   140028856:	mov    esi,edx
   140028858:	mov    rbp,rcx
   14002885b:	mov    edi,0x404e
   140028860:	test   edx,edx
   140028862:	je     0x1400289ac
   140028868:	mov    r13d,0x1
   14002886e:	mov    rax,QWORD PTR [rbx]
   140028871:	mov    r11d,DWORD PTR [rbx+0x8]
   140028875:	lea    rcx,[rsp]
   140028879:	mov    QWORD PTR [rcx],rax
   14002887c:	mov    eax,DWORD PTR [rbx+0x8]
   14002887f:	add    r11d,r11d
   140028882:	mov    DWORD PTR [rcx+0x8],eax
   140028885:	mov    ecx,DWORD PTR [rbx]
   140028887:	mov    eax,DWORD PTR [rbx+0x4]
   14002888a:	lea    r9d,[rcx+rcx*1]
   14002888e:	mov    edx,ecx
   140028890:	lea    r10d,[rax+rax*1]
   140028894:	mov    r8d,eax
   140028897:	shr    edx,0x1f
   14002889a:	mov    eax,r9d
   14002889d:	or     r10d,edx
   1400288a0:	shr    r8d,0x1f
   1400288a4:	lea    edx,[r9+r9*1]
   1400288a8:	or     r11d,r8d
   1400288ab:	mov    ecx,r10d
   1400288ae:	shr    eax,0x1f
   1400288b1:	shr    ecx,0x1f
   1400288b4:	add    r11d,r11d
   1400288b7:	add    r10d,r10d
   1400288ba:	or     r11d,ecx
   1400288bd:	mov    ecx,DWORD PTR [rsp]
   1400288c0:	or     r10d,eax
   1400288c3:	lea    r8d,[rdx+rcx*1]
   1400288c7:	xor    eax,eax
   1400288c9:	mov    DWORD PTR [rbx],edx
   1400288cb:	mov    DWORD PTR [rbx+0x4],r10d
   1400288cf:	mov    DWORD PTR [rbx+0x8],r11d
   1400288d3:	cmp    r8d,edx
   1400288d6:	jb     0x1400288dd
   1400288d8:	cmp    r8d,ecx
   1400288db:	jae    0x1400288e0
   1400288dd:	mov    eax,r13d
   1400288e0:	mov    DWORD PTR [rbx],r8d
   1400288e3:	test   eax,eax
   1400288e5:	je     0x140028908
   1400288e7:	lea    eax,[r10+0x1]
   1400288eb:	xor    ecx,ecx
   1400288ed:	cmp    eax,r10d
   1400288f0:	jb     0x1400288f7
   1400288f2:	cmp    eax,r13d
   1400288f5:	jae    0x1400288fa
   1400288f7:	mov    ecx,r13d
   1400288fa:	mov    DWORD PTR [rbx+0x4],eax
   1400288fd:	test   ecx,ecx
   1400288ff:	je     0x140028908
   140028901:	lea    eax,[r11+0x1]
   140028905:	mov    DWORD PTR [rbx+0x8],eax
   140028908:	mov    eax,DWORD PTR [rbx+0x4]
   14002890b:	mov    rcx,QWORD PTR [rsp]
   14002890f:	xor    edx,edx
   140028911:	shr    rcx,0x20
   140028915:	lea    r9d,[rax+rcx*1]
   140028919:	cmp    r9d,eax
   14002891c:	jb     0x140028923
   14002891e:	cmp    r9d,ecx
   140028921:	jae    0x140028926
   140028923:	mov    edx,r13d
   140028926:	mov    DWORD PTR [rbx+0x4],r9d
   14002892a:	test   edx,edx
   14002892c:	je     0x140028932
   14002892e:	add    DWORD PTR [rbx+0x8],r13d
   140028932:	mov    eax,DWORD PTR [rsp+0x8]
   140028936:	mov    ecx,r9d
   140028939:	add    r9d,r9d
   14002893c:	add    DWORD PTR [rbx+0x8],eax
   14002893f:	mov    edx,DWORD PTR [rbx+0x8]
   140028942:	shr    ecx,0x1f
   140028945:	mov    eax,r8d
   140028948:	add    r8d,r8d
   14002894b:	add    edx,edx
   14002894d:	shr    eax,0x1f
   140028950:	or     edx,ecx
   140028952:	mov    DWORD PTR [rbx],r8d
   140028955:	or     r9d,eax
   140028958:	mov    DWORD PTR [rbx+0x8],edx
   14002895b:	xor    r10d,r10d
   14002895e:	mov    DWORD PTR [rbx+0x4],r9d
   140028962:	movsx  ecx,BYTE PTR [rbp+0x0]
   140028966:	lea    eax,[r8+rcx*1]
   14002896a:	mov    DWORD PTR [rsp],ecx
   14002896d:	cmp    eax,r8d
   140028970:	jb     0x140028976
   140028972:	cmp    eax,ecx
   140028974:	jae    0x140028979
   140028976:	mov    r10d,r13d
   140028979:	mov    DWORD PTR [rbx],eax
   14002897b:	test   r10d,r10d
   14002897e:	je     0x1400289a0
   140028980:	lea    eax,[r9+0x1]
   140028984:	xor    ecx,ecx
   140028986:	cmp    eax,r9d
   140028989:	jb     0x140028990
   14002898b:	cmp    eax,r13d
   14002898e:	jae    0x140028993
   140028990:	mov    ecx,r13d
   140028993:	mov    DWORD PTR [rbx+0x4],eax
   140028996:	test   ecx,ecx
   140028998:	je     0x1400289a0
   14002899a:	lea    eax,[rdx+0x1]
   14002899d:	mov    DWORD PTR [rbx+0x8],eax
   1400289a0:	add    rbp,r13
   1400289a3:	add    esi,0xffffffff
   1400289a6:	jne    0x14002886e
   1400289ac:	cmp    DWORD PTR [rbx+0x8],0x0
   1400289b0:	jne    0x1400289e1
   1400289b2:	mov    ecx,DWORD PTR [rbx]
   1400289b4:	mov    edx,DWORD PTR [rbx+0x4]
   1400289b7:	mov    r8d,edx
   1400289ba:	mov    eax,ecx
   1400289bc:	shl    edx,0x10
   1400289bf:	shr    eax,0x10
   1400289c2:	shr    r8d,0x10
   1400289c6:	shl    ecx,0x10
   1400289c9:	or     edx,eax
   1400289cb:	mov    eax,0xfff0
   1400289d0:	mov    DWORD PTR [rbx+0x8],r8d
   1400289d4:	add    di,ax
   1400289d7:	mov    DWORD PTR [rbx+0x4],edx
   1400289da:	mov    DWORD PTR [rbx],ecx
   1400289dc:	test   r8d,r8d
   1400289df:	je     0x1400289b2
   1400289e1:	bt     DWORD PTR [rbx+0x8],0xf
   1400289e6:	jb     0x140028a1e
   1400289e8:	mov    ecx,DWORD PTR [rbx+0x4]
   1400289eb:	mov    eax,DWORD PTR [rbx]
   1400289ed:	mov    edx,eax
   1400289ef:	add    eax,eax
   1400289f1:	mov    r8d,ecx
   1400289f4:	mov    DWORD PTR [rbx],eax
   1400289f6:	lea    eax,[rcx+rcx*1]
   1400289f9:	shr    edx,0x1f
   1400289fc:	or     eax,edx
   1400289fe:	shr    r8d,0x1f
   140028a02:	mov    ecx,0xffff
   140028a07:	mov    DWORD PTR [rbx+0x4],eax
   140028a0a:	mov    eax,DWORD PTR [rbx+0x8]
   140028a0d:	add    di,cx
   140028a10:	add    eax,eax
   140028a12:	or     eax,r8d
   140028a15:	bt     eax,0xf
   140028a19:	mov    DWORD PTR [rbx+0x8],eax
   140028a1c:	jae    0x1400289e8
   140028a1e:	mov    WORD PTR [rbx+0xa],di
   140028a22:	mov    rcx,QWORD PTR [rsp+0x10]
   140028a27:	xor    rcx,rsp
   140028a2a:	call   0x1400144f0
   140028a2f:	mov    rbx,QWORD PTR [rsp+0x40]
   140028a34:	mov    rbp,QWORD PTR [rsp+0x48]
   140028a39:	add    rsp,0x20
   140028a3d:	pop    r13
   140028a3f:	pop    rdi
   140028a40:	pop    rsi
   140028a41:	ret    
   140028a42:	int3   
   140028a43:	int3   
   140028a44:	mov    QWORD PTR [rsp+0x8],rbx
   140028a49:	push   rdi
   140028a4a:	sub    rsp,0x20
   140028a4e:	movsxd rdi,ecx
   140028a51:	mov    ecx,edi
   140028a53:	call   0x14002564c
   140028a58:	cmp    rax,0xffffffffffffffff
   140028a5c:	je     0x140028ab7
   140028a5e:	mov    rax,QWORD PTR [rip+0x27bdb]        # 0x140050640
   140028a65:	mov    ecx,0x2
   140028a6a:	cmp    edi,0x1
   140028a6d:	jne    0x140028a78
   140028a6f:	test   BYTE PTR [rax+0xb8],dil
   140028a76:	jne    0x140028a82
   140028a78:	cmp    edi,ecx
   140028a7a:	jne    0x140028a99
   140028a7c:	test   BYTE PTR [rax+0x60],0x1
   140028a80:	je     0x140028a99
   140028a82:	call   0x14002564c
   140028a87:	mov    ecx,0x1
   140028a8c:	mov    rbx,rax
   140028a8f:	call   0x14002564c
   140028a94:	cmp    rax,rbx
   140028a97:	je     0x140028ab7
   140028a99:	mov    ecx,edi
   140028a9b:	call   0x14002564c
   140028aa0:	mov    rcx,rax
   140028aa3:	call   QWORD PTR [rip+0xd8f7]        # 0x1400363a0
   140028aa9:	test   eax,eax
   140028aab:	jne    0x140028ab7
   140028aad:	call   QWORD PTR [rip+0xd9ad]        # 0x140036460
   140028ab3:	mov    ebx,eax
   140028ab5:	jmp    0x140028ab9
   140028ab7:	xor    ebx,ebx
   140028ab9:	mov    ecx,edi
   140028abb:	call   0x1400255a0
   140028ac0:	mov    r11,rdi
   140028ac3:	mov    rcx,rdi
   140028ac6:	sar    rcx,0x5
   140028aca:	and    r11d,0x1f
   140028ace:	lea    rdx,[rip+0x27b6b]        # 0x140050640
   140028ad5:	mov    rcx,QWORD PTR [rdx+rcx*8]
   140028ad9:	imul   r11,r11,0x58
   140028add:	mov    BYTE PTR [rcx+r11*1+0x8],0x0
   140028ae3:	test   ebx,ebx
   140028ae5:	je     0x140028af3
   140028ae7:	mov    ecx,ebx
   140028ae9:	call   0x140015f88
   140028aee:	or     eax,0xffffffff
   140028af1:	jmp    0x140028af5
   140028af3:	xor    eax,eax
   140028af5:	mov    rbx,QWORD PTR [rsp+0x30]
   140028afa:	add    rsp,0x20
   140028afe:	pop    rdi
   140028aff:	ret    
   140028b00:	mov    QWORD PTR [rsp+0x18],rbx
   140028b05:	mov    QWORD PTR [rsp+0x20],rsi
   140028b0a:	mov    DWORD PTR [rsp+0x8],ecx
   140028b0e:	push   rdi
   140028b0f:	push   r12
   140028b11:	push   r13
   140028b13:	sub    rsp,0x30
   140028b17:	movsxd rbx,ecx
   140028b1a:	cmp    ebx,0xfffffffe
   140028b1d:	jne    0x140028b3b
   140028b1f:	call   0x140015f68
   140028b24:	xor    edi,edi
   140028b26:	mov    DWORD PTR [rax],edi
   140028b28:	call   0x140015f48
   140028b2d:	mov    DWORD PTR [rax],0x9
   140028b33:	or     eax,0xffffffff
   140028b36:	jmp    0x140028c04
   140028b3b:	xor    edi,edi
   140028b3d:	cmp    ebx,edi
   140028b3f:	jl     0x140028bdb
   140028b45:	cmp    ebx,DWORD PTR [rip+0x27ad9]        # 0x140050624
   140028b4b:	jae    0x140028bdb
   140028b51:	mov    rsi,rbx
   140028b54:	mov    r12,rbx
   140028b57:	sar    r12,0x5
   140028b5b:	lea    r13,[rip+0x27ade]        # 0x140050640
   140028b62:	and    esi,0x1f
   140028b65:	imul   rsi,rsi,0x58
   140028b69:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   140028b6e:	movsx  ecx,BYTE PTR [rax+rsi*1+0x8]
   140028b73:	and    ecx,0x1
   140028b76:	jne    0x140028ba3
   140028b78:	call   0x140015f68
   140028b7d:	mov    DWORD PTR [rax],edi
   140028b7f:	call   0x140015f48
   140028b84:	mov    DWORD PTR [rax],0x9
   140028b8a:	mov    QWORD PTR [rsp+0x20],rdi
   140028b8f:	xor    r9d,r9d
   140028b92:	xor    r8d,r8d
   140028b95:	xor    edx,edx
   140028b97:	xor    ecx,ecx
   140028b99:	call   0x1400149a8
   140028b9e:	or     eax,0xffffffff
   140028ba1:	jmp    0x140028c04
   140028ba3:	mov    ecx,ebx
   140028ba5:	call   0x1400256d0
   140028baa:	nop
   140028bab:	mov    rax,QWORD PTR [r13+r12*8+0x0]
   140028bb0:	test   BYTE PTR [rax+rsi*1+0x8],0x1
   140028bb5:	je     0x140028bc2
   140028bb7:	mov    ecx,ebx
   140028bb9:	call   0x140028a44
   140028bbe:	mov    edi,eax
   140028bc0:	jmp    0x140028bd0
   140028bc2:	call   0x140015f48
   140028bc7:	mov    DWORD PTR [rax],0x9
   140028bcd:	or     edi,0xffffffff
   140028bd0:	mov    ecx,ebx
   140028bd2:	call   0x140025778
   140028bd7:	mov    eax,edi
   140028bd9:	jmp    0x140028c04
   140028bdb:	call   0x140015f68
   140028be0:	mov    DWORD PTR [rax],edi
   140028be2:	call   0x140015f48
   140028be7:	mov    DWORD PTR [rax],0x9
   140028bed:	mov    QWORD PTR [rsp+0x20],rdi
   140028bf2:	xor    r9d,r9d
   140028bf5:	xor    r8d,r8d
   140028bf8:	xor    edx,edx
   140028bfa:	xor    ecx,ecx
   140028bfc:	call   0x1400149a8
   140028c01:	or     eax,0xffffffff
   140028c04:	mov    rbx,QWORD PTR [rsp+0x60]
   140028c09:	mov    rsi,QWORD PTR [rsp+0x68]
   140028c0e:	add    rsp,0x30
   140028c12:	pop    r13
   140028c14:	pop    r12
   140028c16:	pop    rdi
   140028c17:	ret    
   140028c18:	rex push rbx
   140028c1a:	sub    rsp,0x20
   140028c1e:	test   BYTE PTR [rcx+0x18],0x83
   140028c22:	mov    rbx,rcx
   140028c25:	je     0x140028c49
   140028c27:	test   BYTE PTR [rcx+0x18],0x8
   140028c2b:	je     0x140028c49
   140028c2d:	mov    rcx,QWORD PTR [rcx+0x10]
   140028c31:	call   0x140014f10
   140028c36:	and    DWORD PTR [rbx+0x18],0xfffffbf7
   140028c3d:	xor    eax,eax
   140028c3f:	mov    QWORD PTR [rbx],rax
   140028c42:	mov    QWORD PTR [rbx+0x10],rax
   140028c46:	mov    DWORD PTR [rbx+0x8],eax
   140028c49:	add    rsp,0x20
   140028c4d:	pop    rbx
   140028c4e:	ret    
   140028c4f:	int3   
   140028c50:	mov    QWORD PTR [rsp+0x8],rcx
   140028c55:	sub    rsp,0x38
   140028c59:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140028c62:	mov    rcx,QWORD PTR [rsp+0x40]
   140028c67:	call   0x140029d50
   140028c6c:	nop
   140028c6d:	mov    rcx,QWORD PTR [rsp+0x40]
   140028c72:	lea    rax,[rip+0x132c7]        # 0x14003bf40
   140028c79:	mov    QWORD PTR [rcx],rax
   140028c7c:	mov    rcx,QWORD PTR [rsp+0x40]
   140028c81:	add    rcx,0x58
   140028c85:	lea    rdx,[rip+0x13143]        # 0x14003bdcf
   140028c8c:	call   0x140002340
   140028c91:	nop
   140028c92:	mov    rcx,QWORD PTR [rsp+0x40]
   140028c97:	add    rcx,0x80
   140028c9e:	lea    rdx,[rip+0x13133]        # 0x14003bdd8
   140028ca5:	call   0x140002340
   140028caa:	nop
   140028cab:	mov    rcx,QWORD PTR [rsp+0x40]
   140028cb0:	add    rcx,0xa8
   140028cb7:	lea    rdx,[rip+0x1311b]        # 0x14003bdd9
   140028cbe:	call   0x140002340
   140028cc3:	nop
   140028cc4:	mov    rcx,QWORD PTR [rsp+0x40]
   140028cc9:	add    rcx,0xd0
   140028cd0:	lea    rdx,[rip+0x13109]        # 0x14003bde0
   140028cd7:	call   0x140031530
   140028cdc:	nop
   140028cdd:	mov    rcx,QWORD PTR [rsp+0x40]
   140028ce2:	add    rcx,0xe8
   140028ce9:	call   0x140031350
   140028cee:	nop
   140028cef:	mov    rax,QWORD PTR [rsp+0x40]
   140028cf4:	add    rsp,0x38
   140028cf8:	ret    
   140028cf9:	int3   
   140028cfa:	int3   
   140028cfb:	int3   
   140028cfc:	int3   
   140028cfd:	int3   
   140028cfe:	int3   
   140028cff:	int3   
   140028d00:	mov    QWORD PTR [rsp+0x10],rdx
   140028d05:	mov    QWORD PTR [rsp+0x8],rcx
   140028d0a:	push   rbx
   140028d0b:	push   rsi
   140028d0c:	push   rdi
   140028d0d:	sub    rsp,0x570
   140028d14:	mov    QWORD PTR [rsp+0x560],0xfffffffffffffffe
   140028d20:	mov    rax,QWORD PTR [rip+0x20099]        # 0x140048dc0
   140028d27:	xor    rax,rsp
   140028d2a:	mov    QWORD PTR [rsp+0x568],rax
   140028d32:	mov    DWORD PTR [rsp+0x558],0x0
   140028d3d:	mov    rcx,QWORD PTR [rsp+0x590]
   140028d45:	add    rcx,0x58
   140028d49:	call   0x1400051c0
   140028d4e:	movzx  eax,al
   140028d51:	cmp    eax,0x1
   140028d54:	je     0x140028d8e
   140028d56:	mov    rcx,QWORD PTR [rsp+0x590]
   140028d5e:	add    rcx,0x80
   140028d65:	call   0x1400051c0
   140028d6a:	movzx  eax,al
   140028d6d:	cmp    eax,0x1
   140028d70:	je     0x140028d8e
   140028d72:	mov    rcx,QWORD PTR [rsp+0x590]
   140028d7a:	add    rcx,0xa8
   140028d81:	call   0x1400051c0
   140028d86:	movzx  eax,al
   140028d89:	cmp    eax,0x1
   140028d8c:	jne    0x140028dc1
   140028d8e:	lea    rdx,[rip+0x13045]        # 0x14003bdda
   140028d95:	mov    rcx,QWORD PTR [rsp+0x598]
   140028d9d:	call   0x140002340
   140028da2:	nop
   140028da3:	mov    eax,DWORD PTR [rsp+0x558]
   140028daa:	or     eax,0x1
   140028dad:	mov    DWORD PTR [rsp+0x558],eax
   140028db4:	mov    rax,QWORD PTR [rsp+0x598]
   140028dbc:	jmp    0x140029103
   140028dc1:	lea    rdx,[rip+0x13020]        # 0x14003bde8
   140028dc8:	lea    rcx,[rsp+0x1e0]
   140028dd0:	call   0x14002c190
   140028dd5:	nop
   140028dd6:	mov    BYTE PTR [rsp+0xd0],0x0
   140028dde:	lea    rdi,[rsp+0xd1]
   140028de6:	xor    eax,eax
   140028de8:	mov    ecx,0x9
   140028ded:	rep stos BYTE PTR es:[rdi],al
   140028def:	mov    rcx,QWORD PTR [rsp+0x590]
   140028df7:	add    rcx,0xe8
   140028dfe:	call   0x140029630
   140028e03:	movzx  esi,ax
   140028e06:	mov    rcx,QWORD PTR [rsp+0x590]
   140028e0e:	add    rcx,0xe8
   140028e15:	call   0x140029620
   140028e1a:	movzx  ebx,ax
   140028e1d:	mov    rcx,QWORD PTR [rsp+0x590]
   140028e25:	add    rcx,0xe8
   140028e2c:	call   0x140029610
   140028e31:	movzx  edi,ax
   140028e34:	mov    rcx,QWORD PTR [rsp+0x590]
   140028e3c:	add    rcx,0xe8
   140028e43:	call   0x140029600
   140028e48:	movzx  r9d,ax
   140028e4c:	mov    DWORD PTR [rsp+0x30],esi
   140028e50:	mov    DWORD PTR [rsp+0x28],ebx
   140028e54:	mov    DWORD PTR [rsp+0x20],edi
   140028e58:	lea    r8,[rip+0x12f91]        # 0x14003bdf0
   140028e5f:	mov    edx,0xa
   140028e64:	lea    rcx,[rsp+0xd0]
   140028e6c:	call   0x140016678
   140028e71:	lea    r8,[rsp+0xd0]
   140028e79:	lea    rdx,[rip+0x12f80]        # 0x14003be00
   140028e80:	lea    rcx,[rsp+0x1e0]
   140028e88:	call   0x14002d480
   140028e8d:	lea    rdx,[rip+0x12f74]        # 0x14003be08
   140028e94:	lea    rcx,[rsp+0x440]
   140028e9c:	call   0x14002c190
   140028ea1:	nop
   140028ea2:	lea    rdx,[rip+0x12f67]        # 0x14003be10
   140028ea9:	lea    rcx,[rsp+0x530]
   140028eb1:	call   0x140002340
   140028eb6:	nop
   140028eb7:	mov    r8,QWORD PTR [rsp+0x590]
   140028ebf:	add    r8,0x58
   140028ec3:	lea    rdx,[rsp+0x530]
   140028ecb:	lea    rcx,[rsp+0x440]
   140028ed3:	call   0x14002d4d0
   140028ed8:	nop
   140028ed9:	lea    rcx,[rsp+0x530]
   140028ee1:	call   0x140001260
   140028ee6:	mov    BYTE PTR [rsp+0xe0],0x0
   140028eee:	lea    rdi,[rsp+0xe1]
   140028ef6:	xor    eax,eax
   140028ef8:	mov    ecx,0x9
   140028efd:	rep stos BYTE PTR es:[rdi],al
   140028eff:	mov    rcx,QWORD PTR [rsp+0x590]
   140028f07:	add    rcx,0xd0
   140028f0e:	call   0x140029630
   140028f13:	movzx  esi,ax
   140028f16:	mov    rcx,QWORD PTR [rsp+0x590]
   140028f1e:	add    rcx,0xd0
   140028f25:	call   0x140029620
   140028f2a:	movzx  ebx,ax
   140028f2d:	mov    rcx,QWORD PTR [rsp+0x590]
   140028f35:	add    rcx,0xd0
   140028f3c:	call   0x140029610
   140028f41:	movzx  edi,ax
   140028f44:	mov    rcx,QWORD PTR [rsp+0x590]
   140028f4c:	add    rcx,0xd0
   140028f53:	call   0x140029600
   140028f58:	movzx  r9d,ax
   140028f5c:	mov    DWORD PTR [rsp+0x30],esi
   140028f60:	mov    DWORD PTR [rsp+0x28],ebx
   140028f64:	mov    DWORD PTR [rsp+0x20],edi
   140028f68:	lea    r8,[rip+0x12ea9]        # 0x14003be18
   140028f6f:	mov    edx,0xa
   140028f74:	lea    rcx,[rsp+0xe0]
   140028f7c:	call   0x140016678
   140028f81:	lea    r8,[rsp+0xe0]
   140028f89:	lea    rdx,[rip+0x12e98]        # 0x14003be28
   140028f90:	lea    rcx,[rsp+0x440]
   140028f98:	call   0x14002d480
   140028f9d:	lea    rdx,[rip+0x12e8c]        # 0x14003be30
   140028fa4:	lea    rcx,[rsp+0x350]
   140028fac:	call   0x14002c190
   140028fb1:	nop
   140028fb2:	mov    rdx,QWORD PTR [rsp+0x590]
   140028fba:	add    rdx,0x80
   140028fc1:	lea    rcx,[rsp+0x2d0]
   140028fc9:	call   0x140029680
   140028fce:	nop
   140028fcf:	lea    rdx,[rsp+0x2d0]
   140028fd7:	lea    rcx,[rsp+0x350]
   140028fdf:	call   0x14002ac30
   140028fe4:	lea    rdx,[rsp+0x350]
   140028fec:	lea    rcx,[rsp+0x440]
   140028ff4:	call   0x14002ac30
   140028ff9:	lea    rdx,[rip+0x12e40]        # 0x14003be40
   140029000:	lea    rcx,[rsp+0xf0]
   140029008:	call   0x14002c190
   14002900d:	nop
   14002900e:	mov    rdx,QWORD PTR [rsp+0x590]
   140029016:	add    rdx,0xa8
   14002901d:	lea    rcx,[rsp+0x50]
   140029022:	call   0x140029680
   140029027:	nop
   140029028:	lea    rdx,[rsp+0x50]
   14002902d:	lea    rcx,[rsp+0xf0]
   140029035:	call   0x14002ac30
   14002903a:	mov    rcx,QWORD PTR [rsp+0x590]
   140029042:	add    rcx,0x8
   140029046:	lea    rdx,[rsp+0x1e0]
   14002904e:	call   0x14002cc30
   140029053:	mov    rcx,QWORD PTR [rsp+0x590]
   14002905b:	add    rcx,0x8
   14002905f:	lea    rdx,[rsp+0x440]
   140029067:	call   0x14002cc30
   14002906c:	mov    rcx,QWORD PTR [rsp+0x590]
   140029074:	add    rcx,0x8
   140029078:	lea    rdx,[rsp+0xf0]
   140029080:	call   0x14002cc30
   140029085:	mov    rdx,QWORD PTR [rsp+0x598]
   14002908d:	mov    rcx,QWORD PTR [rsp+0x590]
   140029095:	call   0x140029db0
   14002909a:	mov    eax,DWORD PTR [rsp+0x558]
   1400290a1:	or     eax,0x1
   1400290a4:	mov    DWORD PTR [rsp+0x558],eax
   1400290ab:	lea    rcx,[rsp+0x50]
   1400290b0:	call   0x140029640
   1400290b5:	nop
   1400290b6:	lea    rcx,[rsp+0xf0]
   1400290be:	call   0x14002b8b0
   1400290c3:	nop
   1400290c4:	lea    rcx,[rsp+0x2d0]
   1400290cc:	call   0x140029640
   1400290d1:	nop
   1400290d2:	lea    rcx,[rsp+0x350]
   1400290da:	call   0x14002b8b0
   1400290df:	nop
   1400290e0:	lea    rcx,[rsp+0x440]
   1400290e8:	call   0x14002b8b0
   1400290ed:	nop
   1400290ee:	lea    rcx,[rsp+0x1e0]
   1400290f6:	call   0x14002b8b0
   1400290fb:	mov    rax,QWORD PTR [rsp+0x598]
   140029103:	mov    rcx,QWORD PTR [rsp+0x568]
   14002910b:	xor    rcx,rsp
   14002910e:	call   0x1400144f0
   140029113:	add    rsp,0x570
   14002911a:	pop    rdi
   14002911b:	pop    rsi
   14002911c:	pop    rbx
   14002911d:	ret    
   14002911e:	int3   
   14002911f:	int3   
   140029120:	int3   
   140029121:	int3   
   140029122:	int3   
   140029123:	int3   
   140029124:	int3   
   140029125:	int3   
   140029126:	int3   
   140029127:	int3   
   140029128:	int3   
   140029129:	int3   
   14002912a:	int3   
   14002912b:	int3   
   14002912c:	int3   
   14002912d:	int3   
   14002912e:	int3   
   14002912f:	int3   
   140029130:	mov    QWORD PTR [rsp+0x10],rdx
   140029135:	mov    QWORD PTR [rsp+0x8],rcx
   14002913a:	sub    rsp,0x228
   140029141:	mov    QWORD PTR [rsp+0x1e8],0xfffffffffffffffe
   14002914d:	mov    rax,QWORD PTR [rip+0x1fc6c]        # 0x140048dc0
   140029154:	xor    rax,rsp
   140029157:	mov    QWORD PTR [rsp+0x218],rax
   14002915f:	mov    BYTE PTR [rsp+0xe8],0x0
   140029167:	mov    BYTE PTR [rsp+0xe9],0x0
   14002916f:	lea    rax,[rsp+0x138]
   140029177:	mov    QWORD PTR [rsp+0x160],rax
   14002917f:	mov    rdx,QWORD PTR [rsp+0x238]
   140029187:	mov    rcx,QWORD PTR [rsp+0x160]
   14002918f:	call   0x140002390
   140029194:	mov    QWORD PTR [rsp+0x1f0],rax
   14002919c:	mov    rdx,QWORD PTR [rsp+0x1f0]
   1400291a4:	mov    rcx,QWORD PTR [rsp+0x230]
   1400291ac:	call   0x140029fc0
   1400291b1:	movzx  eax,al
   1400291b4:	test   eax,eax
   1400291b6:	jne    0x1400291dc
   1400291b8:	mov    DWORD PTR [rsp+0x168],0x2
   1400291c3:	mov    rcx,QWORD PTR [rsp+0x238]
   1400291cb:	call   0x140001260
   1400291d0:	mov    eax,DWORD PTR [rsp+0x168]
   1400291d7:	jmp    0x1400295de
   1400291dc:	lea    rcx,[rsp+0x30]
   1400291e1:	call   0x14002c210
   1400291e6:	nop
   1400291e7:	mov    rcx,QWORD PTR [rsp+0x230]
   1400291ef:	add    rcx,0x8
   1400291f3:	call   0x1400023d0
   1400291f8:	xor    r9d,r9d
   1400291fb:	xor    r8d,r8d
   1400291fe:	mov    rdx,rax
   140029201:	lea    rcx,[rsp+0x30]
   140029206:	call   0x14002fae0
   14002920b:	lea    rdx,[rsp+0x30]
   140029210:	lea    rcx,[rsp+0x28]
   140029215:	call   0x140029860
   14002921a:	lea    r8,[rip+0x12c37]        # 0x14003be58
   140029221:	lea    rdx,[rsp+0x170]
   140029229:	lea    rcx,[rsp+0x28]
   14002922e:	call   0x14002b380
   140029233:	mov    rcx,rax
   140029236:	call   0x140029880
   14002923b:	mov    QWORD PTR [rsp+0xf0],rax
   140029243:	cmp    QWORD PTR [rsp+0xf0],0x0
   14002924c:	je     0x1400292f0
   140029252:	lea    rdx,[rip+0x12c07]        # 0x14003be60
   140029259:	mov    rcx,QWORD PTR [rsp+0xf0]
   140029261:	call   0x14002b230
   140029266:	test   rax,rax
   140029269:	je     0x1400292f0
   14002926f:	lea    rdx,[rip+0x12bf2]        # 0x14003be68
   140029276:	mov    rcx,QWORD PTR [rsp+0xf0]
   14002927e:	call   0x14002b230
   140029283:	mov    rdx,rax
   140029286:	lea    rcx,[rsp+0x100]
   14002928e:	call   0x140002340
   140029293:	nop
   140029294:	lea    rcx,[rsp+0x100]
   14002929c:	call   0x1400023d0
   1400292a1:	mov    rdx,rax
   1400292a4:	lea    rcx,[rsp+0x178]
   1400292ac:	call   0x140031530
   1400292b1:	mov    QWORD PTR [rsp+0x1f8],rax
   1400292b9:	mov    rcx,QWORD PTR [rsp+0x230]
   1400292c1:	add    rcx,0xe8
   1400292c8:	mov    rdx,QWORD PTR [rsp+0x1f8]
   1400292d0:	call   0x140029750
   1400292d5:	lea    rcx,[rsp+0x178]
   1400292dd:	call   0x140031360
   1400292e2:	nop
   1400292e3:	lea    rcx,[rsp+0x100]
   1400292eb:	call   0x140001260
   1400292f0:	lea    rdx,[rip+0x12ad9]        # 0x14003bdd0
   1400292f7:	lea    rcx,[rsp+0x198]
   1400292ff:	call   0x140031530
   140029304:	mov    QWORD PTR [rsp+0x200],rax
   14002930c:	mov    rax,QWORD PTR [rsp+0x200]
   140029314:	mov    QWORD PTR [rsp+0x208],rax
   14002931c:	mov    rcx,QWORD PTR [rsp+0x230]
   140029324:	add    rcx,0xe8
   14002932b:	mov    rdx,QWORD PTR [rsp+0x208]
   140029333:	call   0x140031490
   140029338:	mov    BYTE PTR [rsp+0x190],al
   14002933f:	lea    rcx,[rsp+0x198]
   140029347:	call   0x140031360
   14002934c:	movzx  r11d,BYTE PTR [rsp+0x190]
   140029355:	test   r11d,r11d
   140029358:	je     0x140029389
   14002935a:	mov    DWORD PTR [rsp+0x1b0],0x1
   140029365:	lea    rcx,[rsp+0x30]
   14002936a:	call   0x1400297e0
   14002936f:	nop
   140029370:	mov    rcx,QWORD PTR [rsp+0x238]
   140029378:	call   0x140001260
   14002937d:	mov    eax,DWORD PTR [rsp+0x1b0]
   140029384:	jmp    0x1400295de
   140029389:	lea    r8,[rip+0x12ae0]        # 0x14003be70
   140029390:	lea    rdx,[rsp+0x1b8]
   140029398:	lea    rcx,[rsp+0x28]
   14002939d:	call   0x14002b380
   1400293a2:	mov    rcx,rax
   1400293a5:	call   0x140029880
   1400293aa:	mov    QWORD PTR [rsp+0xe0],rax
   1400293b2:	cmp    QWORD PTR [rsp+0xe0],0x0
   1400293bb:	je     0x1400294fe
   1400293c1:	lea    rdx,[rip+0x12ab0]        # 0x14003be78
   1400293c8:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400293d0:	call   0x14002b230
   1400293d5:	test   rax,rax
   1400293d8:	je     0x140029402
   1400293da:	lea    rdx,[rip+0x12a9f]        # 0x14003be80
   1400293e1:	mov    rcx,QWORD PTR [rsp+0xe0]
   1400293e9:	call   0x14002b230
   1400293ee:	mov    rcx,QWORD PTR [rsp+0x230]
   1400293f6:	add    rcx,0x58
   1400293fa:	mov    rdx,rax
   1400293fd:	call   0x1400060e0
   140029402:	lea    rdx,[rip+0x12a7f]        # 0x14003be88
   140029409:	mov    rcx,QWORD PTR [rsp+0xe0]
   140029411:	call   0x14002b230
   140029416:	test   rax,rax
   140029419:	je     0x140029470
   14002941b:	lea    rdx,[rip+0x12a6e]        # 0x14003be90
   140029422:	mov    rcx,QWORD PTR [rsp+0xe0]
   14002942a:	call   0x14002b230
   14002942f:	mov    rdx,rax
   140029432:	lea    rcx,[rsp+0x1c0]
   14002943a:	call   0x140031530
   14002943f:	mov    QWORD PTR [rsp+0x210],rax
   140029447:	mov    rcx,QWORD PTR [rsp+0x230]
   14002944f:	add    rcx,0xd0
   140029456:	mov    rdx,QWORD PTR [rsp+0x210]
   14002945e:	call   0x140029750
   140029463:	lea    rcx,[rsp+0x1c0]
   14002946b:	call   0x140031360
   140029470:	lea    rdx,[rip+0x12a21]        # 0x14003be98
   140029477:	mov    rcx,QWORD PTR [rsp+0xe0]
   14002947f:	call   0x1400297b0
   140029484:	mov    QWORD PTR [rsp+0x128],rax
   14002948c:	cmp    QWORD PTR [rsp+0x128],0x0
   140029495:	je     0x1400294f6
   140029497:	mov    rax,QWORD PTR [rsp+0x128]
   14002949f:	mov    rax,QWORD PTR [rax]
   1400294a2:	mov    rcx,QWORD PTR [rsp+0x128]
   1400294aa:	call   QWORD PTR [rax+0x28]
   1400294ad:	mov    QWORD PTR [rsp+0x130],rax
   1400294b5:	cmp    QWORD PTR [rsp+0x130],0x0
   1400294be:	je     0x1400294f6
   1400294c0:	mov    rcx,QWORD PTR [rsp+0x130]
   1400294c8:	call   0x14002b070
   1400294cd:	test   rax,rax
   1400294d0:	je     0x1400294f6
   1400294d2:	mov    rcx,QWORD PTR [rsp+0x130]
   1400294da:	call   0x14002b070
   1400294df:	mov    rcx,QWORD PTR [rsp+0x230]
   1400294e7:	add    rcx,0x80
   1400294ee:	mov    rdx,rax
   1400294f1:	call   0x1400060e0
   1400294f6:	mov    BYTE PTR [rsp+0xe8],0x1
   1400294fe:	lea    r8,[rip+0x129a3]        # 0x14003bea8
   140029505:	lea    rdx,[rsp+0x1d8]
   14002950d:	lea    rcx,[rsp+0x28]
   140029512:	call   0x14002b380
   140029517:	mov    rcx,rax
   14002951a:	call   0x140029880
   14002951f:	mov    QWORD PTR [rsp+0xf8],rax
   140029527:	cmp    QWORD PTR [rsp+0xf8],0x0
   140029530:	je     0x140029570
   140029532:	mov    rcx,QWORD PTR [rsp+0xf8]
   14002953a:	call   0x14002b070
   14002953f:	test   rax,rax
   140029542:	je     0x140029570
   140029544:	mov    rcx,QWORD PTR [rsp+0xf8]
   14002954c:	call   0x14002b070
   140029551:	mov    rcx,QWORD PTR [rsp+0x230]
   140029559:	add    rcx,0xa8
   140029560:	mov    rdx,rax
   140029563:	call   0x1400060e0
   140029568:	mov    BYTE PTR [rsp+0xe9],0x1
   140029570:	movzx  eax,BYTE PTR [rsp+0xe9]
   140029578:	test   eax,eax
   14002957a:	jne    0x1400295b4
   14002957c:	movzx  eax,BYTE PTR [rsp+0xe8]
   140029584:	test   eax,eax
   140029586:	jne    0x1400295b4
   140029588:	mov    DWORD PTR [rsp+0x1e0],0x2
   140029593:	lea    rcx,[rsp+0x30]
   140029598:	call   0x1400297e0
   14002959d:	nop
   14002959e:	mov    rcx,QWORD PTR [rsp+0x238]
   1400295a6:	call   0x140001260
   1400295ab:	mov    eax,DWORD PTR [rsp+0x1e0]
   1400295b2:	jmp    0x1400295de
   1400295b4:	mov    DWORD PTR [rsp+0x1e4],0x0
   1400295bf:	lea    rcx,[rsp+0x30]
   1400295c4:	call   0x1400297e0
   1400295c9:	nop
   1400295ca:	mov    rcx,QWORD PTR [rsp+0x238]
   1400295d2:	call   0x140001260
   1400295d7:	mov    eax,DWORD PTR [rsp+0x1e4]
   1400295de:	mov    rcx,QWORD PTR [rsp+0x218]
   1400295e6:	xor    rcx,rsp
   1400295e9:	call   0x1400144f0
   1400295ee:	add    rsp,0x228
   1400295f5:	ret    
   1400295f6:	int3   
   1400295f7:	int3   
   1400295f8:	int3   
   1400295f9:	int3   
   1400295fa:	int3   
   1400295fb:	int3   
   1400295fc:	int3   
   1400295fd:	int3   
   1400295fe:	int3   
   1400295ff:	int3   
   140029600:	mov    QWORD PTR [rsp+0x8],rcx
   140029605:	mov    rax,QWORD PTR [rsp+0x8]
   14002960a:	mov    ax,WORD PTR [rax+0x8]
   14002960e:	ret    
   14002960f:	int3   
   140029610:	mov    QWORD PTR [rsp+0x8],rcx
   140029615:	mov    rax,QWORD PTR [rsp+0x8]
   14002961a:	mov    ax,WORD PTR [rax+0xa]
   14002961e:	ret    
   14002961f:	int3   
   140029620:	mov    QWORD PTR [rsp+0x8],rcx
   140029625:	mov    rax,QWORD PTR [rsp+0x8]
   14002962a:	mov    ax,WORD PTR [rax+0xc]
   14002962e:	ret    
   14002962f:	int3   
   140029630:	mov    QWORD PTR [rsp+0x8],rcx
   140029635:	mov    rax,QWORD PTR [rsp+0x8]
   14002963a:	mov    ax,WORD PTR [rax+0xe]
   14002963e:	ret    
   14002963f:	int3   
   140029640:	mov    QWORD PTR [rsp+0x8],rcx
   140029645:	sub    rsp,0x28
   140029649:	mov    rcx,QWORD PTR [rsp+0x30]
   14002964e:	lea    rax,[rip+0x12923]        # 0x14003bf78
   140029655:	mov    QWORD PTR [rcx],rax
   140029658:	mov    rcx,QWORD PTR [rsp+0x30]
   14002965d:	call   0x14002b530
   140029662:	add    rsp,0x28
   140029666:	ret    
   140029667:	int3   
   140029668:	int3   
   140029669:	int3   
   14002966a:	int3   
   14002966b:	int3   
   14002966c:	int3   
   14002966d:	int3   
   14002966e:	int3   
   14002966f:	int3   
   140029670:	mov    QWORD PTR [rsp+0x8],rcx
   140029675:	xor    eax,eax
   140029677:	ret    
   140029678:	int3   
   140029679:	int3   
   14002967a:	int3   
   14002967b:	int3   
   14002967c:	int3   
   14002967d:	int3   
   14002967e:	int3   
   14002967f:	int3   
   140029680:	mov    QWORD PTR [rsp+0x10],rdx
   140029685:	mov    QWORD PTR [rsp+0x8],rcx
   14002968a:	sub    rsp,0x38
   14002968e:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140029697:	mov    edx,0x4
   14002969c:	mov    rcx,QWORD PTR [rsp+0x40]
   1400296a1:	call   0x14002b4e0
   1400296a6:	nop
   1400296a7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400296ac:	lea    rax,[rip+0x128c5]        # 0x14003bf78
   1400296b3:	mov    QWORD PTR [rcx],rax
   1400296b6:	mov    rdx,QWORD PTR [rsp+0x48]
   1400296bb:	mov    rcx,QWORD PTR [rsp+0x40]
   1400296c0:	call   0x1400296e0
   1400296c5:	mov    r11,QWORD PTR [rsp+0x40]
   1400296ca:	mov    BYTE PTR [r11+0x70],0x0
   1400296cf:	mov    rax,QWORD PTR [rsp+0x40]
   1400296d4:	add    rsp,0x38
   1400296d8:	ret    
   1400296d9:	int3   
   1400296da:	int3   
   1400296db:	int3   
   1400296dc:	int3   
   1400296dd:	int3   
   1400296de:	int3   
   1400296df:	int3   
   1400296e0:	mov    QWORD PTR [rsp+0x10],rdx
   1400296e5:	mov    QWORD PTR [rsp+0x8],rcx
   1400296ea:	sub    rsp,0x28
   1400296ee:	mov    rcx,QWORD PTR [rsp+0x30]
   1400296f3:	add    rcx,0x38
   1400296f7:	mov    rdx,QWORD PTR [rsp+0x38]
   1400296fc:	call   0x140003790
   140029701:	add    rsp,0x28
   140029705:	ret    
   140029706:	int3   
   140029707:	int3   
   140029708:	int3   
   140029709:	int3   
   14002970a:	int3   
   14002970b:	int3   
   14002970c:	int3   
   14002970d:	int3   
   14002970e:	int3   
   14002970f:	int3   
   140029710:	mov    DWORD PTR [rsp+0x10],edx
   140029714:	mov    QWORD PTR [rsp+0x8],rcx
   140029719:	sub    rsp,0x28
   14002971d:	mov    rcx,QWORD PTR [rsp+0x30]
   140029722:	call   0x140029640
   140029727:	mov    eax,DWORD PTR [rsp+0x38]
   14002972b:	and    eax,0x1
   14002972e:	test   eax,eax
   140029730:	je     0x14002973c
   140029732:	mov    rcx,QWORD PTR [rsp+0x30]
   140029737:	call   0x1400062d4
   14002973c:	mov    rax,QWORD PTR [rsp+0x30]
   140029741:	add    rsp,0x28
   140029745:	ret    
   140029746:	int3   
   140029747:	int3   
   140029748:	int3   
   140029749:	int3   
   14002974a:	int3   
   14002974b:	int3   
   14002974c:	int3   
   14002974d:	int3   
   14002974e:	int3   
   14002974f:	int3   
   140029750:	mov    QWORD PTR [rsp+0x10],rdx
   140029755:	mov    QWORD PTR [rsp+0x8],rcx
   14002975a:	sub    rsp,0x18
   14002975e:	mov    DWORD PTR [rsp],0x0
   140029765:	jmp    0x140029770
   140029767:	mov    eax,DWORD PTR [rsp]
   14002976a:	add    eax,0x1
   14002976d:	mov    DWORD PTR [rsp],eax
   140029770:	cmp    DWORD PTR [rsp],0x4
   140029774:	jae    0x140029794
   140029776:	mov    r8d,DWORD PTR [rsp]
   14002977a:	mov    edx,DWORD PTR [rsp]
   14002977d:	mov    rcx,QWORD PTR [rsp+0x20]
   140029782:	mov    rax,QWORD PTR [rsp+0x28]
   140029787:	movzx  eax,WORD PTR [rax+r8*2+0x8]
   14002978d:	mov    WORD PTR [rcx+rdx*2+0x8],ax
   140029792:	jmp    0x140029767
   140029794:	mov    rcx,QWORD PTR [rsp+0x20]
   140029799:	mov    rax,QWORD PTR [rsp+0x28]
   14002979e:	movzx  eax,BYTE PTR [rax+0x10]
   1400297a2:	mov    BYTE PTR [rcx+0x10],al
   1400297a5:	mov    rax,QWORD PTR [rsp+0x20]
   1400297aa:	add    rsp,0x18
   1400297ae:	ret    
   1400297af:	int3   
   1400297b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400297b5:	mov    QWORD PTR [rsp+0x8],rcx
   1400297ba:	sub    rsp,0x28
   1400297be:	mov    rdx,QWORD PTR [rsp+0x38]
   1400297c3:	mov    rcx,QWORD PTR [rsp+0x30]
   1400297c8:	call   0x14002ad70
   1400297cd:	add    rsp,0x28
   1400297d1:	ret    
   1400297d2:	int3   
   1400297d3:	int3   
   1400297d4:	int3   
   1400297d5:	int3   
   1400297d6:	int3   
   1400297d7:	int3   
   1400297d8:	int3   
   1400297d9:	int3   
   1400297da:	int3   
   1400297db:	int3   
   1400297dc:	int3   
   1400297dd:	int3   
   1400297de:	int3   
   1400297df:	int3   
   1400297e0:	mov    QWORD PTR [rsp+0x8],rcx
   1400297e5:	sub    rsp,0x38
   1400297e9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400297f2:	mov    rcx,QWORD PTR [rsp+0x40]
   1400297f7:	lea    rax,[rip+0x1286a]        # 0x14003c068
   1400297fe:	mov    QWORD PTR [rcx],rax
   140029801:	mov    rcx,QWORD PTR [rsp+0x40]
   140029806:	add    rcx,0x78
   14002980a:	call   0x140001260
   14002980f:	nop
   140029810:	mov    rcx,QWORD PTR [rsp+0x40]
   140029815:	call   0x14002b530
   14002981a:	add    rsp,0x38
   14002981e:	ret    
   14002981f:	int3   
   140029820:	mov    DWORD PTR [rsp+0x10],edx
   140029824:	mov    QWORD PTR [rsp+0x8],rcx
   140029829:	sub    rsp,0x28
   14002982d:	mov    rcx,QWORD PTR [rsp+0x30]
   140029832:	call   0x1400297e0
   140029837:	mov    eax,DWORD PTR [rsp+0x38]
   14002983b:	and    eax,0x1
   14002983e:	test   eax,eax
   140029840:	je     0x14002984c
   140029842:	mov    rcx,QWORD PTR [rsp+0x30]
   140029847:	call   0x1400062d4
   14002984c:	mov    rax,QWORD PTR [rsp+0x30]
   140029851:	add    rsp,0x28
   140029855:	ret    
   140029856:	int3   
   140029857:	int3   
   140029858:	int3   
   140029859:	int3   
   14002985a:	int3   
   14002985b:	int3   
   14002985c:	int3   
   14002985d:	int3   
   14002985e:	int3   
   14002985f:	int3   
   140029860:	mov    QWORD PTR [rsp+0x10],rdx
   140029865:	mov    QWORD PTR [rsp+0x8],rcx
   14002986a:	mov    rcx,QWORD PTR [rsp+0x8]
   14002986f:	mov    rax,QWORD PTR [rsp+0x10]
   140029874:	mov    QWORD PTR [rcx],rax
   140029877:	mov    rax,QWORD PTR [rsp+0x8]
   14002987c:	ret    
   14002987d:	int3   
   14002987e:	int3   
   14002987f:	int3   
   140029880:	mov    QWORD PTR [rsp+0x8],rcx
   140029885:	sub    rsp,0x28
   140029889:	mov    rcx,QWORD PTR [rsp+0x30]
   14002988e:	call   0x1400298a0
   140029893:	add    rsp,0x28
   140029897:	ret    
   140029898:	int3   
   140029899:	int3   
   14002989a:	int3   
   14002989b:	int3   
   14002989c:	int3   
   14002989d:	int3   
   14002989e:	int3   
   14002989f:	int3   
   1400298a0:	mov    QWORD PTR [rsp+0x8],rcx
   1400298a5:	sub    rsp,0x38
   1400298a9:	mov    rax,QWORD PTR [rsp+0x40]
   1400298ae:	cmp    QWORD PTR [rax],0x0
   1400298b2:	je     0x1400298ec
   1400298b4:	mov    rax,QWORD PTR [rsp+0x40]
   1400298b9:	mov    rax,QWORD PTR [rax]
   1400298bc:	mov    rcx,QWORD PTR [rsp+0x40]
   1400298c1:	mov    rcx,QWORD PTR [rcx]
   1400298c4:	mov    rax,QWORD PTR [rax]
   1400298c7:	call   QWORD PTR [rax+0x28]
   1400298ca:	test   rax,rax
   1400298cd:	je     0x1400298ec
   1400298cf:	mov    rax,QWORD PTR [rsp+0x40]
   1400298d4:	mov    rax,QWORD PTR [rax]
   1400298d7:	mov    rcx,QWORD PTR [rsp+0x40]
   1400298dc:	mov    rcx,QWORD PTR [rcx]
   1400298df:	mov    rax,QWORD PTR [rax]
   1400298e2:	call   QWORD PTR [rax+0x28]
   1400298e5:	mov    QWORD PTR [rsp+0x20],rax
   1400298ea:	jmp    0x1400298f5
   1400298ec:	mov    QWORD PTR [rsp+0x20],0x0
   1400298f5:	mov    rax,QWORD PTR [rsp+0x20]
   1400298fa:	add    rsp,0x38
   1400298fe:	ret    
   1400298ff:	int3   
   140029900:	mov    QWORD PTR [rsp+0x8],rcx
   140029905:	sub    rsp,0x38
   140029909:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140029912:	mov    rcx,QWORD PTR [rsp+0x40]
   140029917:	call   0x140029d50
   14002991c:	nop
   14002991d:	mov    rcx,QWORD PTR [rsp+0x40]
   140029922:	lea    rax,[rip+0x128d7]        # 0x14003c200
   140029929:	mov    QWORD PTR [rcx],rax
   14002992c:	mov    rcx,QWORD PTR [rsp+0x40]
   140029931:	add    rcx,0x58
   140029935:	lea    rdx,[rip+0x127e3]        # 0x14003c11f
   14002993c:	call   0x140002340
   140029941:	mov    r11,QWORD PTR [rsp+0x40]
   140029946:	mov    DWORD PTR [r11+0x80],0x0
   140029951:	mov    rax,QWORD PTR [rsp+0x40]
   140029956:	add    rsp,0x38
   14002995a:	ret    
   14002995b:	int3   
   14002995c:	int3   
   14002995d:	int3   
   14002995e:	int3   
   14002995f:	int3   
   140029960:	int3   
   140029961:	int3   
   140029962:	int3   
   140029963:	int3   
   140029964:	int3   
   140029965:	int3   
   140029966:	int3   
   140029967:	int3   
   140029968:	int3   
   140029969:	int3   
   14002996a:	int3   
   14002996b:	int3   
   14002996c:	int3   
   14002996d:	int3   
   14002996e:	int3   
   14002996f:	int3   
   140029970:	mov    QWORD PTR [rsp+0x10],rdx
   140029975:	mov    QWORD PTR [rsp+0x8],rcx
   14002997a:	push   rdi
   14002997b:	sub    rsp,0x2c0
   140029982:	mov    QWORD PTR [rsp+0x2a8],0xfffffffffffffffe
   14002998e:	mov    rax,QWORD PTR [rip+0x1f42b]        # 0x140048dc0
   140029995:	xor    rax,rsp
   140029998:	mov    QWORD PTR [rsp+0x2b0],rax
   1400299a0:	mov    DWORD PTR [rsp+0x2a0],0x0
   1400299ab:	lea    rdx,[rip+0x1276e]        # 0x14003c120
   1400299b2:	lea    rcx,[rsp+0x1b0]
   1400299ba:	call   0x14002c190
   1400299bf:	nop
   1400299c0:	mov    BYTE PTR [rsp+0xb0],0x0
   1400299c8:	lea    rdi,[rsp+0xb1]
   1400299d0:	xor    eax,eax
   1400299d2:	mov    ecx,0x9
   1400299d7:	rep stos BYTE PTR es:[rdi],al
   1400299d9:	mov    rax,QWORD PTR [rsp+0x2d0]
   1400299e1:	mov    r8d,DWORD PTR [rax+0x80]
   1400299e8:	lea    rdx,[rip+0x12739]        # 0x14003c128
   1400299ef:	lea    rcx,[rsp+0x1b0]
   1400299f7:	call   0x14002d450
   1400299fc:	lea    rdx,[rip+0x12735]        # 0x14003c138
   140029a03:	lea    rcx,[rsp+0xc0]
   140029a0b:	call   0x14002c190
   140029a10:	nop
   140029a11:	mov    rdx,QWORD PTR [rsp+0x2d0]
   140029a19:	add    rdx,0x58
   140029a1d:	lea    rcx,[rsp+0x30]
   140029a22:	call   0x140029680
   140029a27:	nop
   140029a28:	lea    rdx,[rsp+0x30]
   140029a2d:	lea    rcx,[rsp+0xc0]
   140029a35:	call   0x14002ac30
   140029a3a:	mov    rcx,QWORD PTR [rsp+0x2d0]
   140029a42:	add    rcx,0x8
   140029a46:	lea    rdx,[rsp+0x1b0]
   140029a4e:	call   0x14002cc30
   140029a53:	mov    rcx,QWORD PTR [rsp+0x2d0]
   140029a5b:	add    rcx,0x8
   140029a5f:	lea    rdx,[rsp+0xc0]
   140029a67:	call   0x14002cc30
   140029a6c:	mov    rdx,QWORD PTR [rsp+0x2d8]
   140029a74:	mov    rcx,QWORD PTR [rsp+0x2d0]
   140029a7c:	call   0x140029db0
   140029a81:	mov    eax,DWORD PTR [rsp+0x2a0]
   140029a88:	or     eax,0x1
   140029a8b:	mov    DWORD PTR [rsp+0x2a0],eax
   140029a92:	lea    rcx,[rsp+0x30]
   140029a97:	call   0x140029640
   140029a9c:	nop
   140029a9d:	lea    rcx,[rsp+0xc0]
   140029aa5:	call   0x14002b8b0
   140029aaa:	nop
   140029aab:	lea    rcx,[rsp+0x1b0]
   140029ab3:	call   0x14002b8b0
   140029ab8:	mov    rax,QWORD PTR [rsp+0x2d8]
   140029ac0:	mov    rcx,QWORD PTR [rsp+0x2b0]
   140029ac8:	xor    rcx,rsp
   140029acb:	call   0x1400144f0
   140029ad0:	add    rsp,0x2c0
   140029ad7:	pop    rdi
   140029ad8:	ret    
   140029ad9:	int3   
   140029ada:	int3   
   140029adb:	int3   
   140029adc:	int3   
   140029add:	int3   
   140029ade:	int3   
   140029adf:	int3   
   140029ae0:	mov    QWORD PTR [rsp+0x10],rdx
   140029ae5:	mov    QWORD PTR [rsp+0x8],rcx
   140029aea:	sub    rsp,0x178
   140029af1:	mov    QWORD PTR [rsp+0x150],0xfffffffffffffffe
   140029afd:	mov    rax,QWORD PTR [rip+0x1f2bc]        # 0x140048dc0
   140029b04:	xor    rax,rsp
   140029b07:	mov    QWORD PTR [rsp+0x160],rax
   140029b0f:	lea    rax,[rsp+0xf8]
   140029b17:	mov    QWORD PTR [rsp+0x120],rax
   140029b1f:	mov    rdx,QWORD PTR [rsp+0x188]
   140029b27:	mov    rcx,QWORD PTR [rsp+0x120]
   140029b2f:	call   0x140002390
   140029b34:	mov    QWORD PTR [rsp+0x158],rax
   140029b3c:	mov    rdx,QWORD PTR [rsp+0x158]
   140029b44:	mov    rcx,QWORD PTR [rsp+0x180]
   140029b4c:	call   0x140029fc0
   140029b51:	movzx  eax,al
   140029b54:	test   eax,eax
   140029b56:	jne    0x140029b7c
   140029b58:	mov    DWORD PTR [rsp+0x128],0x2
   140029b63:	mov    rcx,QWORD PTR [rsp+0x188]
   140029b6b:	call   0x140001260
   140029b70:	mov    eax,DWORD PTR [rsp+0x128]
   140029b77:	jmp    0x140029d36
   140029b7c:	lea    rcx,[rsp+0x40]
   140029b81:	call   0x14002c210
   140029b86:	nop
   140029b87:	mov    rcx,QWORD PTR [rsp+0x180]
   140029b8f:	add    rcx,0x8
   140029b93:	call   0x1400023d0
   140029b98:	xor    r9d,r9d
   140029b9b:	xor    r8d,r8d
   140029b9e:	mov    rdx,rax
   140029ba1:	lea    rcx,[rsp+0x40]
   140029ba6:	call   0x14002fae0
   140029bab:	lea    rdx,[rsp+0x40]
   140029bb0:	lea    rcx,[rsp+0x28]
   140029bb5:	call   0x140029860
   140029bba:	lea    r8,[rip+0x1258f]        # 0x14003c150
   140029bc1:	lea    rdx,[rsp+0x130]
   140029bc9:	lea    rcx,[rsp+0x28]
   140029bce:	call   0x14002b380
   140029bd3:	mov    rcx,rax
   140029bd6:	call   0x140029880
   140029bdb:	mov    QWORD PTR [rsp+0x30],rax
   140029be0:	cmp    QWORD PTR [rsp+0x30],0x0
   140029be6:	je     0x140029c22
   140029be8:	mov    DWORD PTR [rsp+0xf0],0x0
   140029bf3:	lea    r8,[rsp+0xf0]
   140029bfb:	lea    rdx,[rip+0x12556]        # 0x14003c158
   140029c02:	mov    rcx,QWORD PTR [rsp+0x30]
   140029c07:	call   0x14002b270
   140029c0c:	mov    r11,QWORD PTR [rsp+0x180]
   140029c14:	mov    eax,DWORD PTR [rsp+0xf0]
   140029c1b:	mov    DWORD PTR [r11+0x80],eax
   140029c22:	mov    rax,QWORD PTR [rsp+0x180]
   140029c2a:	cmp    DWORD PTR [rax+0x80],0x0
   140029c31:	je     0x140029c6c
   140029c33:	mov    rax,QWORD PTR [rsp+0x180]
   140029c3b:	mov    eax,DWORD PTR [rax+0x80]
   140029c41:	mov    DWORD PTR [rsp+0x138],eax
   140029c48:	lea    rcx,[rsp+0x40]
   140029c4d:	call   0x1400297e0
   140029c52:	nop
   140029c53:	mov    rcx,QWORD PTR [rsp+0x188]
   140029c5b:	call   0x140001260
   140029c60:	mov    eax,DWORD PTR [rsp+0x138]
   140029c67:	jmp    0x140029d36
   140029c6c:	lea    r8,[rip+0x124f5]        # 0x14003c168
   140029c73:	lea    rdx,[rsp+0x140]
   140029c7b:	lea    rcx,[rsp+0x28]
   140029c80:	call   0x14002b380
   140029c85:	mov    rcx,rax
   140029c88:	call   0x140029880
   140029c8d:	mov    QWORD PTR [rsp+0x38],rax
   140029c92:	cmp    QWORD PTR [rsp+0x38],0x0
   140029c98:	je     0x140029cc7
   140029c9a:	mov    rcx,QWORD PTR [rsp+0x38]
   140029c9f:	call   0x14002b070
   140029ca4:	test   rax,rax
   140029ca7:	je     0x140029cc7
   140029ca9:	mov    rcx,QWORD PTR [rsp+0x38]
   140029cae:	call   0x14002b070
   140029cb3:	mov    rcx,QWORD PTR [rsp+0x180]
   140029cbb:	add    rcx,0x58
   140029cbf:	mov    rdx,rax
   140029cc2:	call   0x1400060e0
   140029cc7:	mov    rcx,QWORD PTR [rsp+0x180]
   140029ccf:	add    rcx,0x58
   140029cd3:	call   0x1400051c0
   140029cd8:	movzx  eax,al
   140029cdb:	cmp    eax,0x1
   140029cde:	jne    0x140029d0c
   140029ce0:	mov    DWORD PTR [rsp+0x148],0x2
   140029ceb:	lea    rcx,[rsp+0x40]
   140029cf0:	call   0x1400297e0
   140029cf5:	nop
   140029cf6:	mov    rcx,QWORD PTR [rsp+0x188]
   140029cfe:	call   0x140001260
   140029d03:	mov    eax,DWORD PTR [rsp+0x148]
   140029d0a:	jmp    0x140029d36
   140029d0c:	mov    DWORD PTR [rsp+0x14c],0x0
   140029d17:	lea    rcx,[rsp+0x40]
   140029d1c:	call   0x1400297e0
   140029d21:	nop
   140029d22:	mov    rcx,QWORD PTR [rsp+0x188]
   140029d2a:	call   0x140001260
   140029d2f:	mov    eax,DWORD PTR [rsp+0x14c]
   140029d36:	mov    rcx,QWORD PTR [rsp+0x160]
   140029d3e:	xor    rcx,rsp
   140029d41:	call   0x1400144f0
   140029d46:	add    rsp,0x178
   140029d4d:	ret    
   140029d4e:	int3   
   140029d4f:	int3   
   140029d50:	mov    QWORD PTR [rsp+0x8],rcx
   140029d55:	sub    rsp,0x38
   140029d59:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140029d62:	mov    rcx,QWORD PTR [rsp+0x40]
   140029d67:	lea    rax,[rip+0x121ea]        # 0x14003bf58
   140029d6e:	mov    QWORD PTR [rcx],rax
   140029d71:	mov    rcx,QWORD PTR [rsp+0x40]
   140029d76:	add    rcx,0x8
   140029d7a:	lea    rdx,[rip+0x1249e]        # 0x14003c21f
   140029d81:	call   0x140002340
   140029d86:	nop
   140029d87:	mov    rcx,QWORD PTR [rsp+0x40]
   140029d8c:	add    rcx,0x30
   140029d90:	lea    rdx,[rip+0x12489]        # 0x14003c220
   140029d97:	call   0x140002340
   140029d9c:	nop
   140029d9d:	mov    rax,QWORD PTR [rsp+0x40]
   140029da2:	add    rsp,0x38
   140029da6:	ret    
   140029da7:	int3   
   140029da8:	int3   
   140029da9:	int3   
   140029daa:	int3   
   140029dab:	int3   
   140029dac:	int3   
   140029dad:	int3   
   140029dae:	int3   
   140029daf:	int3   
   140029db0:	mov    QWORD PTR [rsp+0x10],rdx
   140029db5:	mov    QWORD PTR [rsp+0x8],rcx
   140029dba:	sub    rsp,0x438
   140029dc1:	mov    QWORD PTR [rsp+0x410],0xfffffffffffffffe
   140029dcd:	mov    rax,QWORD PTR [rip+0x1efec]        # 0x140048dc0
   140029dd4:	xor    rax,rsp
   140029dd7:	mov    QWORD PTR [rsp+0x428],rax
   140029ddf:	mov    DWORD PTR [rsp+0x408],0x0
   140029dea:	lea    rcx,[rsp+0x120]
   140029df2:	call   0x14002c210
   140029df7:	nop
   140029df8:	lea    rcx,[rsp+0x2f0]
   140029e00:	call   0x14002a1b0
   140029e05:	nop
   140029e06:	xor    r9d,r9d
   140029e09:	xor    r8d,r8d
   140029e0c:	lea    rdx,[rip+0x12415]        # 0x14003c228
   140029e13:	lea    rcx,[rsp+0x2f0]
   140029e1b:	call   0x14002f530
   140029e20:	lea    rdx,[rip+0x12429]        # 0x14003c250
   140029e27:	lea    rcx,[rsp+0x30]
   140029e2c:	call   0x14002c190
   140029e31:	nop
   140029e32:	lea    rdx,[rip+0x1241f]        # 0x14003c258
   140029e39:	lea    rcx,[rsp+0x1d0]
   140029e41:	call   0x14002c190
   140029e46:	nop
   140029e47:	mov    r8,QWORD PTR [rsp+0x440]
   140029e4f:	add    r8,0x8
   140029e53:	lea    rdx,[rip+0x12416]        # 0x14003c270
   140029e5a:	lea    rcx,[rsp+0x3e0]
   140029e62:	call   0x14002a520
   140029e67:	mov    QWORD PTR [rsp+0x418],rax
   140029e6f:	mov    rax,QWORD PTR [rsp+0x418]
   140029e77:	mov    QWORD PTR [rsp+0x420],rax
   140029e7f:	lea    r8,[rip+0x123da]        # 0x14003c260
   140029e86:	mov    rdx,QWORD PTR [rsp+0x420]
   140029e8e:	lea    rcx,[rsp+0x2c0]
   140029e96:	call   0x14002a5b0
   140029e9b:	nop
   140029e9c:	lea    rcx,[rsp+0x3e0]
   140029ea4:	call   0x140001260
   140029ea9:	lea    rcx,[rsp+0x2c0]
   140029eb1:	call   0x1400023d0
   140029eb6:	xor    r9d,r9d
   140029eb9:	xor    r8d,r8d
   140029ebc:	mov    rdx,rax
   140029ebf:	lea    rcx,[rsp+0x1d0]
   140029ec7:	call   0x14002fd00
   140029ecc:	lea    rdx,[rsp+0x1d0]
   140029ed4:	lea    rcx,[rsp+0x30]
   140029ed9:	call   0x14002ac30
   140029ede:	lea    rdx,[rsp+0x2f0]
   140029ee6:	lea    rcx,[rsp+0x120]
   140029eee:	call   0x14002ac30
   140029ef3:	lea    rdx,[rsp+0x30]
   140029ef8:	lea    rcx,[rsp+0x120]
   140029f00:	call   0x14002ac30
   140029f05:	mov    rcx,QWORD PTR [rsp+0x440]
   140029f0d:	add    rcx,0x30
   140029f11:	lea    rdx,[rsp+0x120]
   140029f19:	call   0x14002cc30
   140029f1e:	mov    rdx,QWORD PTR [rsp+0x440]
   140029f26:	add    rdx,0x30
   140029f2a:	mov    rcx,QWORD PTR [rsp+0x448]
   140029f32:	call   0x140002390
   140029f37:	mov    eax,DWORD PTR [rsp+0x408]
   140029f3e:	or     eax,0x1
   140029f41:	mov    DWORD PTR [rsp+0x408],eax
   140029f48:	lea    rcx,[rsp+0x2c0]
   140029f50:	call   0x140001260
   140029f55:	nop
   140029f56:	lea    rcx,[rsp+0x1d0]
   140029f5e:	call   0x14002b8b0
   140029f63:	nop
   140029f64:	lea    rcx,[rsp+0x30]
   140029f69:	call   0x14002b8b0
   140029f6e:	nop
   140029f6f:	lea    rcx,[rsp+0x2f0]
   140029f77:	call   0x14002a220
   140029f7c:	nop
   140029f7d:	lea    rcx,[rsp+0x120]
   140029f85:	call   0x1400297e0
   140029f8a:	mov    rax,QWORD PTR [rsp+0x448]
   140029f92:	mov    rcx,QWORD PTR [rsp+0x428]
   140029f9a:	xor    rcx,rsp
   140029f9d:	call   0x1400144f0
   140029fa2:	add    rsp,0x438
   140029fa9:	ret    
   140029faa:	int3   
   140029fab:	int3   
   140029fac:	int3   
   140029fad:	int3   
   140029fae:	int3   
   140029faf:	int3   
   140029fb0:	int3   
   140029fb1:	int3   
   140029fb2:	int3   
   140029fb3:	int3   
   140029fb4:	int3   
   140029fb5:	int3   
   140029fb6:	int3   
   140029fb7:	int3   
   140029fb8:	int3   
   140029fb9:	int3   
   140029fba:	int3   
   140029fbb:	int3   
   140029fbc:	int3   
   140029fbd:	int3   
   140029fbe:	int3   
   140029fbf:	int3   
   140029fc0:	mov    QWORD PTR [rsp+0x10],rdx
   140029fc5:	mov    QWORD PTR [rsp+0x8],rcx
   140029fca:	sub    rsp,0x158
   140029fd1:	mov    QWORD PTR [rsp+0x138],0xfffffffffffffffe
   140029fdd:	mov    rax,QWORD PTR [rip+0x1eddc]        # 0x140048dc0
   140029fe4:	xor    rax,rsp
   140029fe7:	mov    QWORD PTR [rsp+0x140],rax
   140029fef:	lea    rcx,[rsp+0x30]
   140029ff4:	call   0x14002c210
   140029ff9:	nop
   140029ffa:	mov    rcx,QWORD PTR [rsp+0x168]
   14002a002:	call   0x1400023d0
   14002a007:	xor    r9d,r9d
   14002a00a:	xor    r8d,r8d
   14002a00d:	mov    rdx,rax
   14002a010:	lea    rcx,[rsp+0x30]
   14002a015:	call   0x14002fae0
   14002a01a:	lea    rdx,[rsp+0x30]
   14002a01f:	lea    rcx,[rsp+0x28]
   14002a024:	call   0x140029860
   14002a029:	lea    rdx,[rsp+0x128]
   14002a031:	lea    rcx,[rsp+0x28]
   14002a036:	call   0x14002ad30
   14002a03b:	mov    rcx,rax
   14002a03e:	call   0x140029880
   14002a043:	mov    QWORD PTR [rsp+0xe0],rax
   14002a04b:	cmp    QWORD PTR [rsp+0xe0],0x0
   14002a054:	je     0x14002a13b
   14002a05a:	lea    rdx,[rip+0x1221f]        # 0x14003c280
   14002a061:	mov    rcx,QWORD PTR [rsp+0xe0]
   14002a069:	call   0x1400297b0
   14002a06e:	mov    QWORD PTR [rsp+0xe8],rax
   14002a076:	cmp    QWORD PTR [rsp+0xe8],0x0
   14002a07f:	je     0x14002a139
   14002a085:	mov    rax,QWORD PTR [rsp+0xe8]
   14002a08d:	mov    rax,QWORD PTR [rax]
   14002a090:	mov    rcx,QWORD PTR [rsp+0xe8]
   14002a098:	call   QWORD PTR [rax+0x28]
   14002a09b:	mov    QWORD PTR [rsp+0xf8],rax
   14002a0a3:	mov    QWORD PTR [rsp+0xf0],0x0
   14002a0af:	mov    rcx,QWORD PTR [rsp+0xf8]
   14002a0b7:	call   0x14002a320
   14002a0bc:	mov    QWORD PTR [rsp+0xf0],rax
   14002a0c4:	jmp    0x14002a0db
   14002a0c6:	mov    rcx,QWORD PTR [rsp+0xf0]
   14002a0ce:	call   0x14002a350
   14002a0d3:	mov    QWORD PTR [rsp+0xf0],rax
   14002a0db:	cmp    QWORD PTR [rsp+0xf0],0x0
   14002a0e4:	je     0x14002a139
   14002a0e6:	lea    rdx,[rip+0x12134]        # 0x14003c221
   14002a0ed:	lea    rcx,[rsp+0x100]
   14002a0f5:	call   0x140002340
   14002a0fa:	nop
   14002a0fb:	mov    rdx,QWORD PTR [rsp+0xf0]
   14002a103:	lea    rcx,[rsp+0x100]
   14002a10b:	call   0x14002cc30
   14002a110:	mov    rcx,QWORD PTR [rsp+0x160]
   14002a118:	add    rcx,0x8
   14002a11c:	lea    rdx,[rsp+0x100]
   14002a124:	call   0x14002a380
   14002a129:	nop
   14002a12a:	lea    rcx,[rsp+0x100]
   14002a132:	call   0x140001260
   14002a137:	jmp    0x14002a0c6
   14002a139:	jmp    0x14002a164
   14002a13b:	mov    BYTE PTR [rsp+0x130],0x0
   14002a143:	lea    rcx,[rsp+0x30]
   14002a148:	call   0x1400297e0
   14002a14d:	nop
   14002a14e:	mov    rcx,QWORD PTR [rsp+0x168]
   14002a156:	call   0x140001260
   14002a15b:	mov    al,BYTE PTR [rsp+0x130]
   14002a162:	jmp    0x14002a18b
   14002a164:	mov    BYTE PTR [rsp+0x131],0x1
   14002a16c:	lea    rcx,[rsp+0x30]
   14002a171:	call   0x1400297e0
   14002a176:	nop
   14002a177:	mov    rcx,QWORD PTR [rsp+0x168]
   14002a17f:	call   0x140001260
   14002a184:	mov    al,BYTE PTR [rsp+0x131]
   14002a18b:	mov    rcx,QWORD PTR [rsp+0x140]
   14002a193:	xor    rcx,rsp
   14002a196:	call   0x1400144f0
   14002a19b:	add    rsp,0x158
   14002a1a2:	ret    
   14002a1a3:	int3   
   14002a1a4:	int3   
   14002a1a5:	int3   
   14002a1a6:	int3   
   14002a1a7:	int3   
   14002a1a8:	int3   
   14002a1a9:	int3   
   14002a1aa:	int3   
   14002a1ab:	int3   
   14002a1ac:	int3   
   14002a1ad:	int3   
   14002a1ae:	int3   
   14002a1af:	int3   
   14002a1b0:	mov    QWORD PTR [rsp+0x8],rcx
   14002a1b5:	sub    rsp,0x38
   14002a1b9:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002a1c2:	mov    edx,0x5
   14002a1c7:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a1cc:	call   0x14002b4e0
   14002a1d1:	nop
   14002a1d2:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a1d7:	lea    rax,[rip+0x1215a]        # 0x14003c338
   14002a1de:	mov    QWORD PTR [rcx],rax
   14002a1e1:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a1e6:	add    rcx,0x70
   14002a1ea:	call   0x140002320
   14002a1ef:	nop
   14002a1f0:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a1f5:	add    rcx,0x98
   14002a1fc:	call   0x140002320
   14002a201:	nop
   14002a202:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a207:	add    rcx,0xc0
   14002a20e:	call   0x140002320
   14002a213:	nop
   14002a214:	mov    rax,QWORD PTR [rsp+0x40]
   14002a219:	add    rsp,0x38
   14002a21d:	ret    
   14002a21e:	int3   
   14002a21f:	int3   
   14002a220:	mov    QWORD PTR [rsp+0x8],rcx
   14002a225:	sub    rsp,0x38
   14002a229:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002a232:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a237:	lea    rax,[rip+0x120fa]        # 0x14003c338
   14002a23e:	mov    QWORD PTR [rcx],rax
   14002a241:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a246:	add    rcx,0xc0
   14002a24d:	call   0x140001260
   14002a252:	nop
   14002a253:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a258:	add    rcx,0x98
   14002a25f:	call   0x140001260
   14002a264:	nop
   14002a265:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a26a:	add    rcx,0x70
   14002a26e:	call   0x140001260
   14002a273:	nop
   14002a274:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a279:	call   0x14002b530
   14002a27e:	add    rsp,0x38
   14002a282:	ret    
   14002a283:	int3   
   14002a284:	int3   
   14002a285:	int3   
   14002a286:	int3   
   14002a287:	int3   
   14002a288:	int3   
   14002a289:	int3   
   14002a28a:	int3   
   14002a28b:	int3   
   14002a28c:	int3   
   14002a28d:	int3   
   14002a28e:	int3   
   14002a28f:	int3   
   14002a290:	mov    DWORD PTR [rsp+0x18],r8d
   14002a295:	mov    QWORD PTR [rsp+0x10],rdx
   14002a29a:	mov    QWORD PTR [rsp+0x8],rcx
   14002a29f:	sub    rsp,0x28
   14002a2a3:	mov    rax,QWORD PTR [rsp+0x30]
   14002a2a8:	mov    rax,QWORD PTR [rax]
   14002a2ab:	xor    r9d,r9d
   14002a2ae:	mov    r8d,DWORD PTR [rsp+0x40]
   14002a2b3:	mov    rdx,QWORD PTR [rsp+0x38]
   14002a2b8:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a2bd:	call   QWORD PTR [rax+0x90]
   14002a2c3:	add    rsp,0x28
   14002a2c7:	ret    
   14002a2c8:	int3   
   14002a2c9:	int3   
   14002a2ca:	int3   
   14002a2cb:	int3   
   14002a2cc:	int3   
   14002a2cd:	int3   
   14002a2ce:	int3   
   14002a2cf:	int3   
   14002a2d0:	mov    QWORD PTR [rsp+0x8],rcx
   14002a2d5:	mov    rax,QWORD PTR [rsp+0x8]
   14002a2da:	ret    
   14002a2db:	int3   
   14002a2dc:	int3   
   14002a2dd:	int3   
   14002a2de:	int3   
   14002a2df:	int3   
   14002a2e0:	mov    DWORD PTR [rsp+0x10],edx
   14002a2e4:	mov    QWORD PTR [rsp+0x8],rcx
   14002a2e9:	sub    rsp,0x28
   14002a2ed:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a2f2:	call   0x14002a220
   14002a2f7:	mov    eax,DWORD PTR [rsp+0x38]
   14002a2fb:	and    eax,0x1
   14002a2fe:	test   eax,eax
   14002a300:	je     0x14002a30c
   14002a302:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a307:	call   0x1400062d4
   14002a30c:	mov    rax,QWORD PTR [rsp+0x30]
   14002a311:	add    rsp,0x28
   14002a315:	ret    
   14002a316:	int3   
   14002a317:	int3   
   14002a318:	int3   
   14002a319:	int3   
   14002a31a:	int3   
   14002a31b:	int3   
   14002a31c:	int3   
   14002a31d:	int3   
   14002a31e:	int3   
   14002a31f:	int3   
   14002a320:	mov    QWORD PTR [rsp+0x8],rcx
   14002a325:	sub    rsp,0x28
   14002a329:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a32e:	call   0x14002a340
   14002a333:	add    rsp,0x28
   14002a337:	ret    
   14002a338:	int3   
   14002a339:	int3   
   14002a33a:	int3   
   14002a33b:	int3   
   14002a33c:	int3   
   14002a33d:	int3   
   14002a33e:	int3   
   14002a33f:	int3   
   14002a340:	mov    QWORD PTR [rsp+0x8],rcx
   14002a345:	mov    rax,QWORD PTR [rsp+0x8]
   14002a34a:	mov    rax,QWORD PTR [rax+0x28]
   14002a34e:	ret    
   14002a34f:	int3   
   14002a350:	mov    QWORD PTR [rsp+0x8],rcx
   14002a355:	sub    rsp,0x28
   14002a359:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a35e:	call   0x14002a370
   14002a363:	add    rsp,0x28
   14002a367:	ret    
   14002a368:	int3   
   14002a369:	int3   
   14002a36a:	int3   
   14002a36b:	int3   
   14002a36c:	int3   
   14002a36d:	int3   
   14002a36e:	int3   
   14002a36f:	int3   
   14002a370:	mov    QWORD PTR [rsp+0x8],rcx
   14002a375:	mov    rax,QWORD PTR [rsp+0x8]
   14002a37a:	mov    rax,QWORD PTR [rax+0x68]
   14002a37e:	ret    
   14002a37f:	int3   
   14002a380:	mov    QWORD PTR [rsp+0x10],rdx
   14002a385:	mov    QWORD PTR [rsp+0x8],rcx
   14002a38a:	sub    rsp,0x28
   14002a38e:	mov    rdx,QWORD PTR [rsp+0x38]
   14002a393:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a398:	call   0x14002a3b0
   14002a39d:	add    rsp,0x28
   14002a3a1:	ret    
   14002a3a2:	int3   
   14002a3a3:	int3   
   14002a3a4:	int3   
   14002a3a5:	int3   
   14002a3a6:	int3   
   14002a3a7:	int3   
   14002a3a8:	int3   
   14002a3a9:	int3   
   14002a3aa:	int3   
   14002a3ab:	int3   
   14002a3ac:	int3   
   14002a3ad:	int3   
   14002a3ae:	int3   
   14002a3af:	int3   
   14002a3b0:	mov    QWORD PTR [rsp+0x10],rdx
   14002a3b5:	mov    QWORD PTR [rsp+0x8],rcx
   14002a3ba:	sub    rsp,0x28
   14002a3be:	mov    r9,QWORD PTR [rip+0x1349b]        # 0x14003d860
   14002a3c5:	xor    r8d,r8d
   14002a3c8:	mov    rdx,QWORD PTR [rsp+0x38]
   14002a3cd:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a3d2:	call   0x14002a3e0
   14002a3d7:	add    rsp,0x28
   14002a3db:	ret    
   14002a3dc:	int3   
   14002a3dd:	int3   
   14002a3de:	int3   
   14002a3df:	int3   
   14002a3e0:	mov    QWORD PTR [rsp+0x20],r9
   14002a3e5:	mov    QWORD PTR [rsp+0x18],r8
   14002a3ea:	mov    QWORD PTR [rsp+0x10],rdx
   14002a3ef:	mov    QWORD PTR [rsp+0x8],rcx
   14002a3f4:	push   rbx
   14002a3f5:	push   rdi
   14002a3f6:	sub    rsp,0x38
   14002a3fa:	mov    rcx,QWORD PTR [rsp+0x58]
   14002a3ff:	call   0x1400023f0
   14002a404:	cmp    rax,QWORD PTR [rsp+0x60]
   14002a409:	jae    0x14002a410
   14002a40b:	call   0x14003203c
   14002a410:	mov    rcx,QWORD PTR [rsp+0x58]
   14002a415:	call   0x1400023f0
   14002a41a:	sub    rax,QWORD PTR [rsp+0x60]
   14002a41f:	mov    QWORD PTR [rsp+0x20],rax
   14002a424:	mov    rax,QWORD PTR [rsp+0x68]
   14002a429:	cmp    QWORD PTR [rsp+0x20],rax
   14002a42e:	jae    0x14002a43a
   14002a430:	mov    rax,QWORD PTR [rsp+0x20]
   14002a435:	mov    QWORD PTR [rsp+0x68],rax
   14002a43a:	mov    rcx,QWORD PTR [rsp+0x50]
   14002a43f:	mov    rcx,QWORD PTR [rcx+0x18]
   14002a443:	mov    rax,QWORD PTR [rip+0x13416]        # 0x14003d860
   14002a44a:	sub    rax,rcx
   14002a44d:	cmp    rax,QWORD PTR [rsp+0x68]
   14002a452:	jbe    0x14002a46d
   14002a454:	mov    rcx,QWORD PTR [rsp+0x50]
   14002a459:	mov    rcx,QWORD PTR [rcx+0x18]
   14002a45d:	add    rcx,QWORD PTR [rsp+0x68]
   14002a462:	mov    rax,QWORD PTR [rsp+0x50]
   14002a467:	cmp    rcx,QWORD PTR [rax+0x18]
   14002a46b:	jae    0x14002a472
   14002a46d:	call   0x140031fd4
   14002a472:	cmp    QWORD PTR [rsp+0x68],0x0
   14002a478:	jbe    0x14002a506
   14002a47e:	mov    rax,QWORD PTR [rsp+0x50]
   14002a483:	mov    rax,QWORD PTR [rax+0x18]
   14002a487:	add    rax,QWORD PTR [rsp+0x68]
   14002a48c:	mov    QWORD PTR [rsp+0x20],rax
   14002a491:	xor    r8d,r8d
   14002a494:	mov    rdx,QWORD PTR [rsp+0x20]
   14002a499:	mov    rcx,QWORD PTR [rsp+0x50]
   14002a49e:	call   0x140002c50
   14002a4a3:	movzx  eax,al
   14002a4a6:	test   eax,eax
   14002a4a8:	je     0x14002a506
   14002a4aa:	mov    rcx,QWORD PTR [rsp+0x58]
   14002a4af:	call   0x1400023d0
   14002a4b4:	mov    rdi,rax
   14002a4b7:	add    rdi,QWORD PTR [rsp+0x60]
   14002a4bc:	mov    rbx,QWORD PTR [rsp+0x50]
   14002a4c1:	mov    rax,QWORD PTR [rsp+0x50]
   14002a4c6:	mov    rax,QWORD PTR [rax+0x18]
   14002a4ca:	mov    rbx,QWORD PTR [rbx+0x20]
   14002a4ce:	sub    rbx,rax
   14002a4d1:	mov    rcx,QWORD PTR [rsp+0x50]
   14002a4d6:	call   0x1400023d0
   14002a4db:	mov    rcx,rax
   14002a4de:	mov    rax,QWORD PTR [rsp+0x50]
   14002a4e3:	add    rcx,QWORD PTR [rax+0x18]
   14002a4e7:	mov    r9,QWORD PTR [rsp+0x68]
   14002a4ec:	mov    r8,rdi
   14002a4ef:	mov    rdx,rbx
   14002a4f2:	call   0x140003640
   14002a4f7:	mov    rdx,QWORD PTR [rsp+0x20]
   14002a4fc:	mov    rcx,QWORD PTR [rsp+0x50]
   14002a501:	call   0x140002c30
   14002a506:	mov    rax,QWORD PTR [rsp+0x50]
   14002a50b:	add    rsp,0x38
   14002a50f:	pop    rdi
   14002a510:	pop    rbx
   14002a511:	ret    
   14002a512:	int3   
   14002a513:	int3   
   14002a514:	int3   
   14002a515:	int3   
   14002a516:	int3   
   14002a517:	int3   
   14002a518:	int3   
   14002a519:	int3   
   14002a51a:	int3   
   14002a51b:	int3   
   14002a51c:	int3   
   14002a51d:	int3   
   14002a51e:	int3   
   14002a51f:	int3   
   14002a520:	mov    QWORD PTR [rsp+0x18],r8
   14002a525:	mov    QWORD PTR [rsp+0x10],rdx
   14002a52a:	mov    QWORD PTR [rsp+0x8],rcx
   14002a52f:	sub    rsp,0x78
   14002a533:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14002a53c:	mov    DWORD PTR [rsp+0x48],0x0
   14002a544:	mov    rdx,QWORD PTR [rsp+0x88]
   14002a54c:	lea    rcx,[rsp+0x20]
   14002a551:	call   0x140002340
   14002a556:	mov    QWORD PTR [rsp+0x58],rax
   14002a55b:	mov    rax,QWORD PTR [rsp+0x58]
   14002a560:	mov    QWORD PTR [rsp+0x60],rax
   14002a565:	mov    rdx,QWORD PTR [rsp+0x90]
   14002a56d:	mov    rcx,QWORD PTR [rsp+0x60]
   14002a572:	call   0x14002a380
   14002a577:	mov    rdx,rax
   14002a57a:	mov    rcx,QWORD PTR [rsp+0x80]
   14002a582:	call   0x140002390
   14002a587:	mov    eax,DWORD PTR [rsp+0x48]
   14002a58b:	or     eax,0x1
   14002a58e:	mov    DWORD PTR [rsp+0x48],eax
   14002a592:	lea    rcx,[rsp+0x20]
   14002a597:	call   0x140001260
   14002a59c:	mov    rax,QWORD PTR [rsp+0x80]
   14002a5a4:	add    rsp,0x78
   14002a5a8:	ret    
   14002a5a9:	int3   
   14002a5aa:	int3   
   14002a5ab:	int3   
   14002a5ac:	int3   
   14002a5ad:	int3   
   14002a5ae:	int3   
   14002a5af:	int3   
   14002a5b0:	mov    QWORD PTR [rsp+0x18],r8
   14002a5b5:	mov    QWORD PTR [rsp+0x10],rdx
   14002a5ba:	mov    QWORD PTR [rsp+0x8],rcx
   14002a5bf:	sub    rsp,0x78
   14002a5c3:	mov    QWORD PTR [rsp+0x50],0xfffffffffffffffe
   14002a5cc:	mov    DWORD PTR [rsp+0x48],0x0
   14002a5d4:	mov    rdx,QWORD PTR [rsp+0x88]
   14002a5dc:	lea    rcx,[rsp+0x20]
   14002a5e1:	call   0x140002390
   14002a5e6:	mov    QWORD PTR [rsp+0x58],rax
   14002a5eb:	mov    rax,QWORD PTR [rsp+0x58]
   14002a5f0:	mov    QWORD PTR [rsp+0x60],rax
   14002a5f5:	mov    rdx,QWORD PTR [rsp+0x90]
   14002a5fd:	mov    rcx,QWORD PTR [rsp+0x60]
   14002a602:	call   0x14002a640
   14002a607:	mov    rdx,rax
   14002a60a:	mov    rcx,QWORD PTR [rsp+0x80]
   14002a612:	call   0x140002390
   14002a617:	mov    eax,DWORD PTR [rsp+0x48]
   14002a61b:	or     eax,0x1
   14002a61e:	mov    DWORD PTR [rsp+0x48],eax
   14002a622:	lea    rcx,[rsp+0x20]
   14002a627:	call   0x140001260
   14002a62c:	mov    rax,QWORD PTR [rsp+0x80]
   14002a634:	add    rsp,0x78
   14002a638:	ret    
   14002a639:	int3   
   14002a63a:	int3   
   14002a63b:	int3   
   14002a63c:	int3   
   14002a63d:	int3   
   14002a63e:	int3   
   14002a63f:	int3   
   14002a640:	mov    QWORD PTR [rsp+0x10],rdx
   14002a645:	mov    QWORD PTR [rsp+0x8],rcx
   14002a64a:	sub    rsp,0x28
   14002a64e:	mov    rdx,QWORD PTR [rsp+0x38]
   14002a653:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a658:	call   0x14002a670
   14002a65d:	add    rsp,0x28
   14002a661:	ret    
   14002a662:	int3   
   14002a663:	int3   
   14002a664:	int3   
   14002a665:	int3   
   14002a666:	int3   
   14002a667:	int3   
   14002a668:	int3   
   14002a669:	int3   
   14002a66a:	int3   
   14002a66b:	int3   
   14002a66c:	int3   
   14002a66d:	int3   
   14002a66e:	int3   
   14002a66f:	int3   
   14002a670:	mov    QWORD PTR [rsp+0x10],rdx
   14002a675:	mov    QWORD PTR [rsp+0x8],rcx
   14002a67a:	sub    rsp,0x28
   14002a67e:	mov    rcx,QWORD PTR [rsp+0x38]
   14002a683:	call   0x140001000
   14002a688:	mov    r8,rax
   14002a68b:	mov    rdx,QWORD PTR [rsp+0x38]
   14002a690:	mov    rcx,QWORD PTR [rsp+0x30]
   14002a695:	call   0x14002a6a0
   14002a69a:	add    rsp,0x28
   14002a69e:	ret    
   14002a69f:	int3   
   14002a6a0:	mov    QWORD PTR [rsp+0x18],r8
   14002a6a5:	mov    QWORD PTR [rsp+0x10],rdx
   14002a6aa:	mov    QWORD PTR [rsp+0x8],rcx
   14002a6af:	push   rbx
   14002a6b0:	sub    rsp,0x30
   14002a6b4:	mov    rdx,QWORD PTR [rsp+0x48]
   14002a6b9:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a6be:	call   0x1400035a0
   14002a6c3:	movzx  eax,al
   14002a6c6:	test   eax,eax
   14002a6c8:	je     0x14002a6f5
   14002a6ca:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a6cf:	call   0x1400023d0
   14002a6d4:	mov    r8,QWORD PTR [rsp+0x48]
   14002a6d9:	sub    r8,rax
   14002a6dc:	mov    r9,QWORD PTR [rsp+0x50]
   14002a6e1:	mov    rdx,QWORD PTR [rsp+0x40]
   14002a6e6:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a6eb:	call   0x14002a3e0
   14002a6f0:	jmp    0x14002a7af
   14002a6f5:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a6fa:	mov    rax,0xffffffffffffffff
   14002a701:	sub    rax,QWORD PTR [rcx+0x18]
   14002a705:	cmp    rax,QWORD PTR [rsp+0x50]
   14002a70a:	jbe    0x14002a725
   14002a70c:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a711:	mov    rcx,QWORD PTR [rcx+0x18]
   14002a715:	add    rcx,QWORD PTR [rsp+0x50]
   14002a71a:	mov    rax,QWORD PTR [rsp+0x40]
   14002a71f:	cmp    rcx,QWORD PTR [rax+0x18]
   14002a723:	jae    0x14002a72a
   14002a725:	call   0x140031fd4
   14002a72a:	cmp    QWORD PTR [rsp+0x50],0x0
   14002a730:	jbe    0x14002a7aa
   14002a732:	mov    rax,QWORD PTR [rsp+0x40]
   14002a737:	mov    rax,QWORD PTR [rax+0x18]
   14002a73b:	add    rax,QWORD PTR [rsp+0x50]
   14002a740:	mov    QWORD PTR [rsp+0x20],rax
   14002a745:	xor    r8d,r8d
   14002a748:	mov    rdx,QWORD PTR [rsp+0x20]
   14002a74d:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a752:	call   0x140002c50
   14002a757:	movzx  eax,al
   14002a75a:	test   eax,eax
   14002a75c:	je     0x14002a7aa
   14002a75e:	mov    rbx,QWORD PTR [rsp+0x40]
   14002a763:	mov    rax,QWORD PTR [rsp+0x40]
   14002a768:	mov    rax,QWORD PTR [rax+0x18]
   14002a76c:	mov    rbx,QWORD PTR [rbx+0x20]
   14002a770:	sub    rbx,rax
   14002a773:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a778:	call   0x1400023d0
   14002a77d:	mov    rcx,rax
   14002a780:	mov    rax,QWORD PTR [rsp+0x40]
   14002a785:	add    rcx,QWORD PTR [rax+0x18]
   14002a789:	mov    r9,QWORD PTR [rsp+0x50]
   14002a78e:	mov    r8,QWORD PTR [rsp+0x48]
   14002a793:	mov    rdx,rbx
   14002a796:	call   0x140003640
   14002a79b:	mov    rdx,QWORD PTR [rsp+0x20]
   14002a7a0:	mov    rcx,QWORD PTR [rsp+0x40]
   14002a7a5:	call   0x140002c30
   14002a7aa:	mov    rax,QWORD PTR [rsp+0x40]
   14002a7af:	add    rsp,0x30
   14002a7b3:	pop    rbx
   14002a7b4:	ret    
   14002a7b5:	int3   
   14002a7b6:	int3   
   14002a7b7:	int3   
   14002a7b8:	int3   
   14002a7b9:	int3   
   14002a7ba:	int3   
   14002a7bb:	int3   
   14002a7bc:	int3   
   14002a7bd:	int3   
   14002a7be:	int3   
   14002a7bf:	int3   
   14002a7c0:	lea    rax,[rip+0x11c91]        # 0x14003c458
   14002a7c7:	mov    QWORD PTR [rcx],rax
   14002a7ca:	ret    
   14002a7cb:	int3   
   14002a7cc:	int3   
   14002a7cd:	int3   
   14002a7ce:	int3   
   14002a7cf:	int3   
   14002a7d0:	mov    al,0x1
   14002a7d2:	ret    
   14002a7d3:	int3   
   14002a7d4:	int3   
   14002a7d5:	int3   
   14002a7d6:	int3   
   14002a7d7:	int3   
   14002a7d8:	int3   
   14002a7d9:	int3   
   14002a7da:	int3   
   14002a7db:	int3   
   14002a7dc:	int3   
   14002a7dd:	int3   
   14002a7de:	int3   
   14002a7df:	int3   
   14002a7e0:	rex push rbx
   14002a7e2:	sub    rsp,0x20
   14002a7e6:	lea    rax,[rip+0x11c6b]        # 0x14003c458
   14002a7ed:	mov    rbx,rcx
   14002a7f0:	mov    QWORD PTR [rcx],rax
   14002a7f3:	test   dl,0x1
   14002a7f6:	je     0x14002a7fd
   14002a7f8:	call   0x1400062d4
   14002a7fd:	mov    rax,rbx
   14002a800:	add    rsp,0x20
   14002a804:	pop    rbx
   14002a805:	ret    
   14002a806:	int3   
   14002a807:	int3   
   14002a808:	int3   
   14002a809:	int3   
   14002a80a:	int3   
   14002a80b:	int3   
   14002a80c:	int3   
   14002a80d:	int3   
   14002a80e:	int3   
   14002a80f:	int3   
   14002a810:	lea    rax,[rip+0x11c91]        # 0x14003c4a8
   14002a817:	mov    QWORD PTR [rcx],rax
   14002a81a:	ret    
   14002a81b:	int3   
   14002a81c:	int3   
   14002a81d:	int3   
   14002a81e:	int3   
   14002a81f:	int3   
   14002a820:	rex push rbx
   14002a822:	sub    rsp,0x20
   14002a826:	lea    rax,[rip+0x11c7b]        # 0x14003c4a8
   14002a82d:	mov    rbx,rcx
   14002a830:	mov    QWORD PTR [rcx],rax
   14002a833:	test   dl,0x1
   14002a836:	je     0x14002a83d
   14002a838:	call   0x1400062d4
   14002a83d:	mov    rax,rbx
   14002a840:	add    rsp,0x20
   14002a844:	pop    rbx
   14002a845:	ret    
   14002a846:	int3   
   14002a847:	int3   
   14002a848:	int3   
   14002a849:	int3   
   14002a84a:	int3   
   14002a84b:	int3   
   14002a84c:	int3   
   14002a84d:	int3   
   14002a84e:	int3   
   14002a84f:	int3   
   14002a850:	mov    QWORD PTR [rsp+0x8],rbx
   14002a855:	push   rdi
   14002a856:	sub    rsp,0x20
   14002a85a:	mov    rdi,QWORD PTR [rcx+0x28]
   14002a85e:	mov    rbx,rcx
   14002a861:	test   rdi,rdi
   14002a864:	je     0x14002a89b
   14002a866:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002a870:	mov    rcx,rdi
   14002a873:	mov    rdi,QWORD PTR [rdi+0x68]
   14002a877:	mov    edx,0x1
   14002a87c:	mov    rax,QWORD PTR [rcx]
   14002a87f:	call   QWORD PTR [rax]
   14002a881:	test   rdi,rdi
   14002a884:	jne    0x14002a870
   14002a886:	xor    eax,eax
   14002a888:	mov    QWORD PTR [rbx+0x28],rax
   14002a88c:	mov    QWORD PTR [rbx+0x30],rax
   14002a890:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a895:	add    rsp,0x20
   14002a899:	pop    rdi
   14002a89a:	ret    
   14002a89b:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a8a0:	xor    eax,eax
   14002a8a2:	mov    QWORD PTR [rcx+0x28],rax
   14002a8a6:	mov    QWORD PTR [rcx+0x30],rax
   14002a8aa:	add    rsp,0x20
   14002a8ae:	pop    rdi
   14002a8af:	ret    
   14002a8b0:	rex push rbx
   14002a8b2:	sub    rsp,0x20
   14002a8b6:	mov    rbx,QWORD PTR [rcx+0x28]
   14002a8ba:	test   rbx,rbx
   14002a8bd:	je     0x14002a8d7
   14002a8bf:	nop
   14002a8c0:	mov    rax,QWORD PTR [rbx]
   14002a8c3:	mov    rcx,rbx
   14002a8c6:	call   QWORD PTR [rax+0x30]
   14002a8c9:	test   rax,rax
   14002a8cc:	jne    0x14002a8df
   14002a8ce:	mov    rbx,QWORD PTR [rbx+0x68]
   14002a8d2:	test   rbx,rbx
   14002a8d5:	jne    0x14002a8c0
   14002a8d7:	xor    eax,eax
   14002a8d9:	add    rsp,0x20
   14002a8dd:	pop    rbx
   14002a8de:	ret    
   14002a8df:	mov    rax,QWORD PTR [rbx]
   14002a8e2:	mov    rcx,rbx
   14002a8e5:	add    rsp,0x20
   14002a8e9:	pop    rbx
   14002a8ea:	rex.W jmp QWORD PTR [rax+0x30]
   14002a8ee:	int3   
   14002a8ef:	int3   
   14002a8f0:	rex push rbx
   14002a8f2:	sub    rsp,0x20
   14002a8f6:	mov    rbx,rcx
   14002a8f9:	test   rcx,rcx
   14002a8fc:	je     0x14002a917
   14002a8fe:	xchg   ax,ax
   14002a900:	mov    rax,QWORD PTR [rbx]
   14002a903:	mov    rcx,rbx
   14002a906:	call   QWORD PTR [rax+0x20]
   14002a909:	test   rax,rax
   14002a90c:	jne    0x14002a91f
   14002a90e:	mov    rbx,QWORD PTR [rbx+0x18]
   14002a912:	test   rbx,rbx
   14002a915:	jne    0x14002a900
   14002a917:	xor    eax,eax
   14002a919:	add    rsp,0x20
   14002a91d:	pop    rbx
   14002a91e:	ret    
   14002a91f:	mov    rax,QWORD PTR [rbx]
   14002a922:	mov    rcx,rbx
   14002a925:	add    rsp,0x20
   14002a929:	pop    rbx
   14002a92a:	rex.W jmp QWORD PTR [rax+0x20]
   14002a92e:	int3   
   14002a92f:	int3   
   14002a930:	mov    QWORD PTR [rsp+0x10],rsi
   14002a935:	push   rdi
   14002a936:	sub    rsp,0x20
   14002a93a:	lea    rax,[rcx+0x70]
   14002a93e:	mov    rsi,rcx
   14002a941:	xor    ecx,ecx
   14002a943:	mov    r8,QWORD PTR [rax+0x78]
   14002a947:	mov    rdi,rdx
   14002a94a:	cmp    r8,rax
   14002a94d:	mov    rax,QWORD PTR [rdx]
   14002a950:	mov    rdx,rsi
   14002a953:	cmove  r8,rcx
   14002a957:	mov    rcx,rdi
   14002a95a:	call   QWORD PTR [rax+0x8]
   14002a95d:	test   al,al
   14002a95f:	je     0x14002a991
   14002a961:	mov    QWORD PTR [rsp+0x30],rbx
   14002a966:	mov    rbx,QWORD PTR [rsi+0x28]
   14002a96a:	test   rbx,rbx
   14002a96d:	je     0x14002a98c
   14002a96f:	nop
   14002a970:	mov    rax,QWORD PTR [rbx]
   14002a973:	mov    rdx,rdi
   14002a976:	mov    rcx,rbx
   14002a979:	call   QWORD PTR [rax+0x80]
   14002a97f:	test   al,al
   14002a981:	je     0x14002a98c
   14002a983:	mov    rbx,QWORD PTR [rbx+0x68]
   14002a987:	test   rbx,rbx
   14002a98a:	jne    0x14002a970
   14002a98c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a991:	mov    rax,QWORD PTR [rdi]
   14002a994:	mov    rdx,rsi
   14002a997:	mov    rcx,rdi
   14002a99a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002a99f:	add    rsp,0x20
   14002a9a3:	pop    rdi
   14002a9a4:	rex.W jmp QWORD PTR [rax+0x18]
   14002a9a8:	int3   
   14002a9a9:	int3   
   14002a9aa:	int3   
   14002a9ab:	int3   
   14002a9ac:	int3   
   14002a9ad:	int3   
   14002a9ae:	int3   
   14002a9af:	int3   
   14002a9b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002a9b5:	mov    QWORD PTR [rsp+0x10],rsi
   14002a9ba:	push   rdi
   14002a9bb:	sub    rsp,0x20
   14002a9bf:	mov    rbx,QWORD PTR [rcx+0x28]
   14002a9c3:	mov    esi,r8d
   14002a9c6:	mov    rdi,rdx
   14002a9c9:	test   rbx,rbx
   14002a9cc:	je     0x14002a9f7
   14002a9ce:	xchg   ax,ax
   14002a9d0:	mov    rax,QWORD PTR [rbx]
   14002a9d3:	mov    r8d,esi
   14002a9d6:	mov    rdx,rdi
   14002a9d9:	mov    rcx,rbx
   14002a9dc:	call   QWORD PTR [rax+0x8]
   14002a9df:	lea    rdx,[rip+0xc66a]        # 0x140037050
   14002a9e6:	mov    rcx,rdi
   14002a9e9:	call   0x14003277c
   14002a9ee:	mov    rbx,QWORD PTR [rbx+0x68]
   14002a9f2:	test   rbx,rbx
   14002a9f5:	jne    0x14002a9d0
   14002a9f7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002a9fc:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aa01:	add    rsp,0x20
   14002aa05:	pop    rdi
   14002aa06:	ret    
   14002aa07:	int3   
   14002aa08:	int3   
   14002aa09:	int3   
   14002aa0a:	int3   
   14002aa0b:	int3   
   14002aa0c:	int3   
   14002aa0d:	int3   
   14002aa0e:	int3   
   14002aa0f:	int3   
   14002aa10:	mov    QWORD PTR [rsp+0x10],rsi
   14002aa15:	push   rdi
   14002aa16:	sub    rsp,0x20
   14002aa1a:	mov    rax,QWORD PTR [rdx]
   14002aa1d:	mov    rdi,rdx
   14002aa20:	mov    rsi,rcx
   14002aa23:	mov    rdx,rcx
   14002aa26:	mov    rcx,rdi
   14002aa29:	call   QWORD PTR [rax+0x10]
   14002aa2c:	test   al,al
   14002aa2e:	je     0x14002aa61
   14002aa30:	mov    QWORD PTR [rsp+0x30],rbx
   14002aa35:	mov    rbx,QWORD PTR [rsi+0x28]
   14002aa39:	test   rbx,rbx
   14002aa3c:	je     0x14002aa5c
   14002aa3e:	xchg   ax,ax
   14002aa40:	mov    rax,QWORD PTR [rbx]
   14002aa43:	mov    rdx,rdi
   14002aa46:	mov    rcx,rbx
   14002aa49:	call   QWORD PTR [rax+0x80]
   14002aa4f:	test   al,al
   14002aa51:	je     0x14002aa5c
   14002aa53:	mov    rbx,QWORD PTR [rbx+0x68]
   14002aa57:	test   rbx,rbx
   14002aa5a:	jne    0x14002aa40
   14002aa5c:	mov    rbx,QWORD PTR [rsp+0x30]
   14002aa61:	mov    rax,QWORD PTR [rdi]
   14002aa64:	mov    rdx,rsi
   14002aa67:	mov    rcx,rdi
   14002aa6a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002aa6f:	add    rsp,0x20
   14002aa73:	pop    rdi
   14002aa74:	rex.W jmp QWORD PTR [rax+0x20]
   14002aa78:	int3   
   14002aa79:	int3   
   14002aa7a:	int3   
   14002aa7b:	int3   
   14002aa7c:	int3   
   14002aa7d:	int3   
   14002aa7e:	int3   
   14002aa7f:	int3   
   14002aa80:	mov    rax,QWORD PTR [rdx]
   14002aa83:	mov    r8,rdx
   14002aa86:	mov    rdx,rcx
   14002aa89:	mov    rcx,r8
   14002aa8c:	rex.W jmp QWORD PTR [rax+0x30]
   14002aa90:	mov    rax,QWORD PTR [rdx]
   14002aa93:	mov    r8,rdx
   14002aa96:	mov    rdx,rcx
   14002aa99:	mov    rcx,r8
   14002aa9c:	rex.W jmp QWORD PTR [rax+0x38]
   14002aaa0:	mov    rax,QWORD PTR [rdx]
   14002aaa3:	mov    r8,rdx
   14002aaa6:	mov    rdx,rcx
   14002aaa9:	mov    rcx,r8
   14002aaac:	rex.W jmp QWORD PTR [rax+0x40]
   14002aab0:	mov    rax,QWORD PTR [rdx]
   14002aab3:	mov    r8,rdx
   14002aab6:	mov    rdx,rcx
   14002aab9:	mov    rcx,r8
   14002aabc:	rex.W jmp QWORD PTR [rax+0x28]
   14002aac0:	mov    QWORD PTR [rdx+0x78],rcx
   14002aac4:	mov    rax,QWORD PTR [rcx+0x70]
   14002aac8:	mov    QWORD PTR [rdx+0x70],rax
   14002aacc:	mov    rax,QWORD PTR [rcx+0x70]
   14002aad0:	mov    QWORD PTR [rax+0x78],rdx
   14002aad4:	mov    QWORD PTR [rcx+0x70],rdx
   14002aad8:	ret    
   14002aad9:	int3   
   14002aada:	int3   
   14002aadb:	int3   
   14002aadc:	int3   
   14002aadd:	int3   
   14002aade:	int3   
   14002aadf:	int3   
   14002aae0:	mov    r8,QWORD PTR [rcx+0x78]
   14002aae4:	cmp    r8,rcx
   14002aae7:	je     0x14002ab22
   14002aae9:	nop    DWORD PTR [rax+0x0]
   14002aaf0:	cmp    r8,rdx
   14002aaf3:	je     0x14002ab00
   14002aaf5:	mov    r8,QWORD PTR [r8+0x78]
   14002aaf9:	cmp    r8,rcx
   14002aafc:	jne    0x14002aaf0
   14002aafe:	repz ret 
   14002ab00:	mov    rcx,QWORD PTR [r8+0x70]
   14002ab04:	mov    rax,QWORD PTR [r8+0x78]
   14002ab08:	mov    QWORD PTR [rcx+0x78],rax
   14002ab0c:	mov    rax,QWORD PTR [r8+0x70]
   14002ab10:	mov    rcx,QWORD PTR [r8+0x78]
   14002ab14:	mov    QWORD PTR [rcx+0x70],rax
   14002ab18:	xor    eax,eax
   14002ab1a:	mov    QWORD PTR [r8+0x78],rax
   14002ab1e:	mov    QWORD PTR [r8+0x70],rax
   14002ab22:	repz ret 
   14002ab24:	int3   
   14002ab25:	int3   
   14002ab26:	int3   
   14002ab27:	int3   
   14002ab28:	int3   
   14002ab29:	int3   
   14002ab2a:	int3   
   14002ab2b:	int3   
   14002ab2c:	int3   
   14002ab2d:	int3   
   14002ab2e:	int3   
   14002ab2f:	int3   
   14002ab30:	mov    QWORD PTR [rsp+0x18],r8
   14002ab35:	mov    QWORD PTR [rsp+0x20],r9
   14002ab3a:	sub    rsp,0x38
   14002ab3e:	lea    rax,[rsp+0x58]
   14002ab43:	mov    r9,r8
   14002ab46:	mov    r8,rdx
   14002ab49:	mov    edx,0x20
   14002ab4e:	mov    QWORD PTR [rsp+0x20],rax
   14002ab53:	call   0x1400169f0
   14002ab58:	add    rsp,0x38
   14002ab5c:	ret    
   14002ab5d:	int3   
   14002ab5e:	int3   
   14002ab5f:	int3   
   14002ab60:	mov    QWORD PTR [rsp+0x18],r8
   14002ab65:	mov    QWORD PTR [rsp+0x20],r9
   14002ab6a:	sub    rsp,0x38
   14002ab6e:	lea    rax,[rsp+0x58]
   14002ab73:	mov    r9,r8
   14002ab76:	mov    r8,rdx
   14002ab79:	mov    edx,0x40
   14002ab7e:	mov    QWORD PTR [rsp+0x20],rax
   14002ab83:	call   0x1400169f0
   14002ab88:	add    rsp,0x38
   14002ab8c:	ret    
   14002ab8d:	int3   
   14002ab8e:	int3   
   14002ab8f:	int3   
   14002ab90:	rex push rbx
   14002ab92:	sub    rsp,0x30
   14002ab96:	cmp    DWORD PTR [rdx+0x20],0x0
   14002ab9a:	mov    r8,rdx
   14002ab9d:	mov    rbx,rcx
   14002aba0:	jne    0x14002abe6
   14002aba2:	mov    rax,QWORD PTR [rdx]
   14002aba5:	mov    rcx,r8
   14002aba8:	mov    edx,0x1
   14002abad:	call   QWORD PTR [rax]
   14002abaf:	mov    rcx,rbx
   14002abb2:	call   0x14002a8f0
   14002abb7:	test   rax,rax
   14002abba:	je     0x14002abde
   14002abbc:	mov    rcx,rbx
   14002abbf:	call   0x14002a8f0
   14002abc4:	xor    r9d,r9d
   14002abc7:	xor    r8d,r8d
   14002abca:	lea    edx,[r9+0xf]
   14002abce:	mov    rcx,rax
   14002abd1:	mov    DWORD PTR [rsp+0x20],0x0
   14002abd9:	call   0x14002e9f0
   14002abde:	xor    eax,eax
   14002abe0:	add    rsp,0x30
   14002abe4:	pop    rbx
   14002abe5:	ret    
   14002abe6:	mov    QWORD PTR [rdx+0x18],rcx
   14002abea:	mov    rax,QWORD PTR [rcx+0x30]
   14002abee:	mov    QWORD PTR [rdx+0x68],0x0
   14002abf6:	mov    QWORD PTR [rdx+0x60],rax
   14002abfa:	mov    rax,QWORD PTR [rcx+0x30]
   14002abfe:	test   rax,rax
   14002ac01:	je     0x14002ac14
   14002ac03:	mov    QWORD PTR [rax+0x68],rdx
   14002ac07:	mov    QWORD PTR [rcx+0x30],rdx
   14002ac0b:	mov    rax,rdx
   14002ac0e:	add    rsp,0x30
   14002ac12:	pop    rbx
   14002ac13:	ret    
   14002ac14:	mov    QWORD PTR [rcx+0x28],rdx
   14002ac18:	mov    QWORD PTR [rcx+0x30],rdx
   14002ac1c:	mov    rax,rdx
   14002ac1f:	add    rsp,0x30
   14002ac23:	pop    rbx
   14002ac24:	ret    
   14002ac25:	int3   
   14002ac26:	int3   
   14002ac27:	int3   
   14002ac28:	int3   
   14002ac29:	int3   
   14002ac2a:	int3   
   14002ac2b:	int3   
   14002ac2c:	int3   
   14002ac2d:	int3   
   14002ac2e:	int3   
   14002ac2f:	int3   
   14002ac30:	rex push rbx
   14002ac32:	sub    rsp,0x30
   14002ac36:	cmp    DWORD PTR [rdx+0x20],0x0
   14002ac3a:	mov    rbx,rcx
   14002ac3d:	jne    0x14002ac73
   14002ac3f:	call   0x14002a8f0
   14002ac44:	test   rax,rax
   14002ac47:	je     0x14002ac6b
   14002ac49:	mov    rcx,rbx
   14002ac4c:	call   0x14002a8f0
   14002ac51:	xor    r9d,r9d
   14002ac54:	xor    r8d,r8d
   14002ac57:	lea    edx,[r9+0xf]
   14002ac5b:	mov    rcx,rax
   14002ac5e:	mov    DWORD PTR [rsp+0x20],0x0
   14002ac66:	call   0x14002e9f0
   14002ac6b:	xor    eax,eax
   14002ac6d:	add    rsp,0x30
   14002ac71:	pop    rbx
   14002ac72:	ret    
   14002ac73:	mov    rax,QWORD PTR [rdx]
   14002ac76:	mov    rcx,rdx
   14002ac79:	call   QWORD PTR [rax+0x78]
   14002ac7c:	test   rax,rax
   14002ac7f:	je     0x14002ac6b
   14002ac81:	mov    rdx,rax
   14002ac84:	mov    rcx,rbx
   14002ac87:	add    rsp,0x30
   14002ac8b:	pop    rbx
   14002ac8c:	jmp    0x14002ab90
   14002ac91:	int3   
   14002ac92:	int3   
   14002ac93:	int3   
   14002ac94:	int3   
   14002ac95:	int3   
   14002ac96:	int3   
   14002ac97:	int3   
   14002ac98:	int3   
   14002ac99:	int3   
   14002ac9a:	int3   
   14002ac9b:	int3   
   14002ac9c:	int3   
   14002ac9d:	int3   
   14002ac9e:	int3   
   14002ac9f:	int3   
   14002aca0:	mov    QWORD PTR [rsp+0x8],rbx
   14002aca5:	push   rdi
   14002aca6:	sub    rsp,0x20
   14002acaa:	mov    rbx,rcx
   14002acad:	call   0x14002a850
   14002acb2:	add    rbx,0x70
   14002acb6:	xor    edi,edi
   14002acb8:	nop    DWORD PTR [rax+rax*1+0x0]
   14002acc0:	mov    rax,QWORD PTR [rbx+0x78]
   14002acc4:	cmp    rax,rbx
   14002acc7:	je     0x14002acf7
   14002acc9:	test   rax,rax
   14002accc:	je     0x14002acf7
   14002acce:	mov    r9,rax
   14002acd1:	cmp    rax,rbx
   14002acd4:	mov    rcx,rbx
   14002acd7:	cmove  r9,rdi
   14002acdb:	mov    rdx,r9
   14002acde:	call   0x14002aae0
   14002ace3:	test   r9,r9
   14002ace6:	je     0x14002acc0
   14002ace8:	mov    rax,QWORD PTR [r9]
   14002aceb:	mov    edx,0x1
   14002acf0:	mov    rcx,r9
   14002acf3:	call   QWORD PTR [rax]
   14002acf5:	jmp    0x14002acc0
   14002acf7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002acfc:	add    rsp,0x20
   14002ad00:	pop    rdi
   14002ad01:	ret    
   14002ad02:	int3   
   14002ad03:	int3   
   14002ad04:	int3   
   14002ad05:	int3   
   14002ad06:	int3   
   14002ad07:	int3   
   14002ad08:	int3   
   14002ad09:	int3   
   14002ad0a:	int3   
   14002ad0b:	int3   
   14002ad0c:	int3   
   14002ad0d:	int3   
   14002ad0e:	int3   
   14002ad0f:	int3   
   14002ad10:	mov    rax,QWORD PTR [rcx+0x78]
   14002ad14:	cmp    QWORD PTR [rax+0x60],0x0
   14002ad19:	jne    0x14002ad24
   14002ad1b:	cmp    QWORD PTR [rax+0x38],0x0
   14002ad20:	jne    0x14002ad24
   14002ad22:	xor    eax,eax
   14002ad24:	repz ret 
   14002ad26:	int3   
   14002ad27:	int3   
   14002ad28:	int3   
   14002ad29:	int3   
   14002ad2a:	int3   
   14002ad2b:	int3   
   14002ad2c:	int3   
   14002ad2d:	int3   
   14002ad2e:	int3   
   14002ad2f:	int3   
   14002ad30:	rex push rbx
   14002ad32:	sub    rsp,0x20
   14002ad36:	mov    rcx,QWORD PTR [rcx]
   14002ad39:	mov    rbx,rdx
   14002ad3c:	test   rcx,rcx
   14002ad3f:	je     0x14002ad57
   14002ad41:	call   0x14002a8b0
   14002ad46:	test   rax,rax
   14002ad49:	je     0x14002ad57
   14002ad4b:	mov    QWORD PTR [rbx],rax
   14002ad4e:	mov    rax,rbx
   14002ad51:	add    rsp,0x20
   14002ad55:	pop    rbx
   14002ad56:	ret    
   14002ad57:	mov    QWORD PTR [rbx],0x0
   14002ad5e:	mov    rax,rbx
   14002ad61:	add    rsp,0x20
   14002ad65:	pop    rbx
   14002ad66:	ret    
   14002ad67:	int3   
   14002ad68:	int3   
   14002ad69:	int3   
   14002ad6a:	int3   
   14002ad6b:	int3   
   14002ad6c:	int3   
   14002ad6d:	int3   
   14002ad6e:	int3   
   14002ad6f:	int3   
   14002ad70:	mov    r8,QWORD PTR [rcx+0x28]
   14002ad74:	mov    r10,rdx
   14002ad77:	test   r8,r8
   14002ad7a:	je     0x14002adc0
   14002ad7c:	nop    DWORD PTR [rax+0x0]
   14002ad80:	cmp    QWORD PTR [r8+0x58],0x10
   14002ad85:	jb     0x14002ad8d
   14002ad87:	mov    rax,QWORD PTR [r8+0x40]
   14002ad8b:	jmp    0x14002ad91
   14002ad8d:	lea    rax,[r8+0x40]
   14002ad91:	mov    r9,r10
   14002ad94:	sub    r9,rax
   14002ad97:	nop    WORD PTR [rax+rax*1+0x0]
   14002ada0:	movzx  edx,BYTE PTR [rax]
   14002ada3:	movzx  ecx,BYTE PTR [rax+r9*1]
   14002ada8:	sub    edx,ecx
   14002adaa:	jne    0x14002adb3
   14002adac:	inc    rax
   14002adaf:	test   ecx,ecx
   14002adb1:	jne    0x14002ada0
   14002adb3:	test   edx,edx
   14002adb5:	je     0x14002adc3
   14002adb7:	mov    r8,QWORD PTR [r8+0x68]
   14002adbb:	test   r8,r8
   14002adbe:	jne    0x14002ad80
   14002adc0:	xor    eax,eax
   14002adc2:	ret    
   14002adc3:	mov    rax,r8
   14002adc6:	ret    
   14002adc7:	int3   
   14002adc8:	int3   
   14002adc9:	int3   
   14002adca:	int3   
   14002adcb:	int3   
   14002adcc:	int3   
   14002adcd:	int3   
   14002adce:	int3   
   14002adcf:	int3   
   14002add0:	mov    r8,QWORD PTR [rcx+0x68]
   14002add4:	mov    r10,rdx
   14002add7:	test   r8,r8
   14002adda:	je     0x14002ae20
   14002addc:	nop    DWORD PTR [rax+0x0]
   14002ade0:	cmp    QWORD PTR [r8+0x58],0x10
   14002ade5:	jb     0x14002aded
   14002ade7:	mov    rax,QWORD PTR [r8+0x40]
   14002adeb:	jmp    0x14002adf1
   14002aded:	lea    rax,[r8+0x40]
   14002adf1:	mov    r9,r10
   14002adf4:	sub    r9,rax
   14002adf7:	nop    WORD PTR [rax+rax*1+0x0]
   14002ae00:	movzx  edx,BYTE PTR [rax]
   14002ae03:	movzx  ecx,BYTE PTR [rax+r9*1]
   14002ae08:	sub    edx,ecx
   14002ae0a:	jne    0x14002ae13
   14002ae0c:	inc    rax
   14002ae0f:	test   ecx,ecx
   14002ae11:	jne    0x14002ae00
   14002ae13:	test   edx,edx
   14002ae15:	je     0x14002ae23
   14002ae17:	mov    r8,QWORD PTR [r8+0x68]
   14002ae1b:	test   r8,r8
   14002ae1e:	jne    0x14002ade0
   14002ae20:	xor    eax,eax
   14002ae22:	ret    
   14002ae23:	mov    rax,r8
   14002ae26:	ret    
   14002ae27:	int3   
   14002ae28:	int3   
   14002ae29:	int3   
   14002ae2a:	int3   
   14002ae2b:	int3   
   14002ae2c:	int3   
   14002ae2d:	int3   
   14002ae2e:	int3   
   14002ae2f:	int3   
   14002ae30:	mov    QWORD PTR [rsp+0x8],rbx
   14002ae35:	push   rdi
   14002ae36:	sub    rsp,0x20
   14002ae3a:	mov    rdi,rdx
   14002ae3d:	call   0x14002ad70
   14002ae42:	mov    rbx,rax
   14002ae45:	test   rax,rax
   14002ae48:	je     0x14002ae72
   14002ae4a:	nop    WORD PTR [rax+rax*1+0x0]
   14002ae50:	mov    r8,QWORD PTR [rbx]
   14002ae53:	mov    rcx,rbx
   14002ae56:	call   QWORD PTR [r8+0x30]
   14002ae5a:	mov    rcx,rbx
   14002ae5d:	test   rax,rax
   14002ae60:	jne    0x14002ae7f
   14002ae62:	mov    rdx,rdi
   14002ae65:	call   0x14002add0
   14002ae6a:	mov    rbx,rax
   14002ae6d:	test   rax,rax
   14002ae70:	jne    0x14002ae50
   14002ae72:	xor    eax,eax
   14002ae74:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae79:	add    rsp,0x20
   14002ae7d:	pop    rdi
   14002ae7e:	ret    
   14002ae7f:	mov    rax,QWORD PTR [rbx]
   14002ae82:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ae87:	add    rsp,0x20
   14002ae8b:	pop    rdi
   14002ae8c:	rex.W jmp QWORD PTR [rax+0x30]
   14002ae90:	mov    QWORD PTR [rsp+0x10],rbx
   14002ae95:	mov    QWORD PTR [rsp+0x18],rbp
   14002ae9a:	mov    QWORD PTR [rsp+0x20],rsi
   14002ae9f:	push   rdi
   14002aea0:	sub    rsp,0x20
   14002aea4:	mov    ebp,r8d
   14002aea7:	mov    rbx,rdx
   14002aeaa:	mov    rsi,rcx
   14002aead:	test   r8d,r8d
   14002aeb0:	jle    0x14002aed5
   14002aeb2:	mov    rdi,rbp
   14002aeb5:	data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002aec0:	lea    rdx,[rip+0x11609]        # 0x14003c4d0
   14002aec7:	mov    rcx,rbx
   14002aeca:	call   0x14003277c
   14002aecf:	sub    rdi,0x1
   14002aed3:	jne    0x14002aec0
   14002aed5:	cmp    QWORD PTR [rsi+0x58],0x10
   14002aeda:	jb     0x14002aee2
   14002aedc:	mov    r8,QWORD PTR [rsi+0x40]
   14002aee0:	jmp    0x14002aee6
   14002aee2:	lea    r8,[rsi+0x40]
   14002aee6:	lea    rdx,[rip+0x115df]        # 0x14003c4cc
   14002aeed:	mov    rcx,rbx
   14002aef0:	call   0x14003277c
   14002aef5:	lea    r11,[rsi+0x70]
   14002aef9:	mov    rdi,QWORD PTR [r11+0x78]
   14002aefd:	cmp    rdi,r11
   14002af00:	je     0x14002af3f
   14002af02:	test   rdi,rdi
   14002af05:	je     0x14002af3f
   14002af07:	nop    WORD PTR [rax+rax*1+0x0]
   14002af10:	lea    rdx,[rip+0xf91d]        # 0x14003a834
   14002af17:	mov    rcx,rbx
   14002af1a:	call   0x14003277c
   14002af1f:	mov    r11,QWORD PTR [rdi]
   14002af22:	mov    r8d,ebp
   14002af25:	mov    rdx,rbx
   14002af28:	mov    rcx,rdi
   14002af2b:	call   QWORD PTR [r11+0x8]
   14002af2f:	mov    rcx,rdi
   14002af32:	call   0x14002ad10
   14002af37:	mov    rdi,rax
   14002af3a:	test   rax,rax
   14002af3d:	jne    0x14002af10
   14002af3f:	mov    rax,QWORD PTR [rsi+0x28]
   14002af43:	test   rax,rax
   14002af46:	jne    0x14002af5c
   14002af48:	lea    rdx,[rip+0x11579]        # 0x14003c4c8
   14002af4f:	mov    rcx,rbx
   14002af52:	call   0x14003277c
   14002af57:	jmp    0x14002b055
   14002af5c:	cmp    rax,QWORD PTR [rsi+0x30]
   14002af60:	jne    0x14002afa4
   14002af62:	mov    rcx,rax
   14002af65:	mov    rax,QWORD PTR [rax]
   14002af68:	call   QWORD PTR [rax+0x58]
   14002af6b:	test   rax,rax
   14002af6e:	je     0x14002afa4
   14002af70:	lea    rdx,[rip+0xf4b5]        # 0x14003a42c
   14002af77:	mov    rcx,rbx
   14002af7a:	call   0x14003277c
   14002af7f:	mov    rcx,QWORD PTR [rsi+0x28]
   14002af83:	lea    r8d,[rbp+0x1]
   14002af87:	mov    rax,QWORD PTR [rcx]
   14002af8a:	mov    rdx,rbx
   14002af8d:	call   QWORD PTR [rax+0x8]
   14002af90:	cmp    QWORD PTR [rsi+0x58],0x10
   14002af95:	jb     0x14002b042
   14002af9b:	mov    r8,QWORD PTR [rsi+0x40]
   14002af9f:	jmp    0x14002b046
   14002afa4:	lea    rdx,[rip+0xf481]        # 0x14003a42c
   14002afab:	mov    rcx,rbx
   14002afae:	call   0x14003277c
   14002afb3:	mov    rdi,QWORD PTR [rsi+0x28]
   14002afb7:	test   rdi,rdi
   14002afba:	je     0x14002affc
   14002afbc:	mov    QWORD PTR [rsp+0x30],r12
   14002afc1:	mov    rax,QWORD PTR [rdi]
   14002afc4:	mov    rcx,rdi
   14002afc7:	call   QWORD PTR [rax+0x58]
   14002afca:	test   rax,rax
   14002afcd:	jne    0x14002afde
   14002afcf:	lea    rdx,[rip+0xc07a]        # 0x140037050
   14002afd6:	mov    rcx,rbx
   14002afd9:	call   0x14003277c
   14002afde:	mov    rax,QWORD PTR [rdi]
   14002afe1:	lea    r8d,[rbp+0x1]
   14002afe5:	mov    rdx,rbx
   14002afe8:	mov    rcx,rdi
   14002afeb:	call   QWORD PTR [rax+0x8]
   14002afee:	mov    rdi,QWORD PTR [rdi+0x68]
   14002aff2:	test   rdi,rdi
   14002aff5:	jne    0x14002afc1
   14002aff7:	mov    r12,QWORD PTR [rsp+0x30]
   14002affc:	lea    rdx,[rip+0xc04d]        # 0x140037050
   14002b003:	mov    rcx,rbx
   14002b006:	call   0x14003277c
   14002b00b:	test   ebp,ebp
   14002b00d:	jle    0x14002b035
   14002b00f:	mov    rdi,rbp
   14002b012:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002b020:	lea    rdx,[rip+0x114a9]        # 0x14003c4d0
   14002b027:	mov    rcx,rbx
   14002b02a:	call   0x14003277c
   14002b02f:	sub    rdi,0x1
   14002b033:	jne    0x14002b020
   14002b035:	cmp    QWORD PTR [rsi+0x58],0x10
   14002b03a:	jb     0x14002b042
   14002b03c:	mov    r8,QWORD PTR [rsi+0x40]
   14002b040:	jmp    0x14002b046
   14002b042:	lea    r8,[rsi+0x40]
   14002b046:	lea    rdx,[rip+0x11473]        # 0x14003c4c0
   14002b04d:	mov    rcx,rbx
   14002b050:	call   0x14003277c
   14002b055:	mov    rbx,QWORD PTR [rsp+0x38]
   14002b05a:	mov    rbp,QWORD PTR [rsp+0x40]
   14002b05f:	mov    rsi,QWORD PTR [rsp+0x48]
   14002b064:	add    rsp,0x20
   14002b068:	pop    rdi
   14002b069:	ret    
   14002b06a:	int3   
   14002b06b:	int3   
   14002b06c:	int3   
   14002b06d:	int3   
   14002b06e:	int3   
   14002b06f:	int3   
   14002b070:	sub    rsp,0x28
   14002b074:	mov    rcx,QWORD PTR [rcx+0x28]
   14002b078:	test   rcx,rcx
   14002b07b:	je     0x14002b0a1
   14002b07d:	mov    rax,QWORD PTR [rcx]
   14002b080:	call   QWORD PTR [rax+0x60]
   14002b083:	test   rax,rax
   14002b086:	je     0x14002b0a1
   14002b088:	cmp    QWORD PTR [rax+0x58],0x10
   14002b08d:	jb     0x14002b098
   14002b08f:	mov    rax,QWORD PTR [rax+0x40]
   14002b093:	add    rsp,0x28
   14002b097:	ret    
   14002b098:	add    rax,0x40
   14002b09c:	add    rsp,0x28
   14002b0a0:	ret    
   14002b0a1:	xor    eax,eax
   14002b0a3:	add    rsp,0x28
   14002b0a7:	ret    
   14002b0a8:	int3   
   14002b0a9:	int3   
   14002b0aa:	int3   
   14002b0ab:	int3   
   14002b0ac:	int3   
   14002b0ad:	int3   
   14002b0ae:	int3   
   14002b0af:	int3   
   14002b0b0:	sub    rsp,0x28
   14002b0b4:	cmp    QWORD PTR [rcx+0x68],0x10
   14002b0b9:	jb     0x14002b0c1
   14002b0bb:	mov    rcx,QWORD PTR [rcx+0x50]
   14002b0bf:	jmp    0x14002b0c5
   14002b0c1:	add    rcx,0x50
   14002b0c5:	mov    r8,rdx
   14002b0c8:	lea    rdx,[rip+0xddc1]        # 0x140038e90
   14002b0cf:	call   0x140032998
   14002b0d4:	xor    edx,edx
   14002b0d6:	mov    ecx,0x2
   14002b0db:	cmp    eax,0x1
   14002b0de:	cmove  ecx,edx
   14002b0e1:	mov    eax,ecx
   14002b0e3:	add    rsp,0x28
   14002b0e7:	ret    
   14002b0e8:	int3   
   14002b0e9:	int3   
   14002b0ea:	int3   
   14002b0eb:	int3   
   14002b0ec:	int3   
   14002b0ed:	int3   
   14002b0ee:	int3   
   14002b0ef:	int3   
   14002b0f0:	mov    QWORD PTR [rsp+0x10],rsi
   14002b0f5:	push   rdi
   14002b0f6:	sub    rsp,0x20
   14002b0fa:	mov    rsi,rdx
   14002b0fd:	mov    rdi,rcx
   14002b100:	test   r8d,r8d
   14002b103:	jle    0x14002b12a
   14002b105:	mov    QWORD PTR [rsp+0x30],rbx
   14002b10a:	mov    ebx,r8d
   14002b10d:	nop    DWORD PTR [rax]
   14002b110:	lea    rdx,[rip+0x113b9]        # 0x14003c4d0
   14002b117:	mov    rcx,rsi
   14002b11a:	call   0x14003277c
   14002b11f:	sub    rbx,0x1
   14002b123:	jne    0x14002b110
   14002b125:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b12a:	cmp    QWORD PTR [rdi+0x58],0x10
   14002b12f:	jb     0x14002b137
   14002b131:	mov    r8,QWORD PTR [rdi+0x40]
   14002b135:	jmp    0x14002b13b
   14002b137:	lea    r8,[rdi+0x40]
   14002b13b:	lea    rdx,[rip+0x11396]        # 0x14003c4d8
   14002b142:	mov    rcx,rsi
   14002b145:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b14a:	add    rsp,0x20
   14002b14e:	pop    rdi
   14002b14f:	jmp    0x14003277c
   14002b154:	int3   
   14002b155:	int3   
   14002b156:	int3   
   14002b157:	int3   
   14002b158:	int3   
   14002b159:	int3   
   14002b15a:	int3   
   14002b15b:	int3   
   14002b15c:	int3   
   14002b15d:	int3   
   14002b15e:	int3   
   14002b15f:	int3   
   14002b160:	mov    QWORD PTR [rsp+0x10],rsi
   14002b165:	push   rdi
   14002b166:	sub    rsp,0x20
   14002b16a:	mov    rsi,rdx
   14002b16d:	mov    rdi,rcx
   14002b170:	test   r8d,r8d
   14002b173:	jle    0x14002b19a
   14002b175:	mov    QWORD PTR [rsp+0x30],rbx
   14002b17a:	mov    ebx,r8d
   14002b17d:	nop    DWORD PTR [rax]
   14002b180:	lea    rdx,[rip+0x11349]        # 0x14003c4d0
   14002b187:	mov    rcx,rsi
   14002b18a:	call   0x14003277c
   14002b18f:	sub    rbx,0x1
   14002b193:	jne    0x14002b180
   14002b195:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b19a:	cmp    QWORD PTR [rdi+0x58],0x10
   14002b19f:	jb     0x14002b1a7
   14002b1a1:	mov    r8,QWORD PTR [rdi+0x40]
   14002b1a5:	jmp    0x14002b1ab
   14002b1a7:	lea    r8,[rdi+0x40]
   14002b1ab:	lea    rdx,[rip+0x11332]        # 0x14003c4e4
   14002b1b2:	mov    rcx,rsi
   14002b1b5:	mov    rsi,QWORD PTR [rsp+0x38]
   14002b1ba:	add    rsp,0x20
   14002b1be:	pop    rdi
   14002b1bf:	jmp    0x14003277c
   14002b1c4:	int3   
   14002b1c5:	int3   
   14002b1c6:	int3   
   14002b1c7:	int3   
   14002b1c8:	int3   
   14002b1c9:	int3   
   14002b1ca:	int3   
   14002b1cb:	int3   
   14002b1cc:	int3   
   14002b1cd:	int3   
   14002b1ce:	int3   
   14002b1cf:	int3   
   14002b1d0:	mov    r8,QWORD PTR [rcx+0x78]
   14002b1d4:	mov    r11,rdx
   14002b1d7:	mov    r10,rcx
   14002b1da:	cmp    r8,rcx
   14002b1dd:	je     0x14002b220
   14002b1df:	nop
   14002b1e0:	cmp    QWORD PTR [r8+0x40],0x10
   14002b1e5:	jb     0x14002b1ed
   14002b1e7:	mov    rax,QWORD PTR [r8+0x28]
   14002b1eb:	jmp    0x14002b1f1
   14002b1ed:	lea    rax,[r8+0x28]
   14002b1f1:	mov    r9,r11
   14002b1f4:	sub    r9,rax
   14002b1f7:	nop    WORD PTR [rax+rax*1+0x0]
   14002b200:	movzx  edx,BYTE PTR [rax]
   14002b203:	movzx  ecx,BYTE PTR [rax+r9*1]
   14002b208:	sub    edx,ecx
   14002b20a:	jne    0x14002b213
   14002b20c:	inc    rax
   14002b20f:	test   ecx,ecx
   14002b211:	jne    0x14002b200
   14002b213:	test   edx,edx
   14002b215:	je     0x14002b223
   14002b217:	mov    r8,QWORD PTR [r8+0x78]
   14002b21b:	cmp    r8,r10
   14002b21e:	jne    0x14002b1e0
   14002b220:	xor    eax,eax
   14002b222:	ret    
   14002b223:	mov    rax,r8
   14002b226:	ret    
   14002b227:	int3   
   14002b228:	int3   
   14002b229:	int3   
   14002b22a:	int3   
   14002b22b:	int3   
   14002b22c:	int3   
   14002b22d:	int3   
   14002b22e:	int3   
   14002b22f:	int3   
   14002b230:	sub    rsp,0x28
   14002b234:	add    rcx,0x70
   14002b238:	call   0x14002b1d0
   14002b23d:	test   rax,rax
   14002b240:	je     0x14002b25b
   14002b242:	cmp    QWORD PTR [rax+0x68],0x10
   14002b247:	jb     0x14002b252
   14002b249:	mov    rax,QWORD PTR [rax+0x50]
   14002b24d:	add    rsp,0x28
   14002b251:	ret    
   14002b252:	add    rax,0x50
   14002b256:	add    rsp,0x28
   14002b25a:	ret    
   14002b25b:	xor    eax,eax
   14002b25d:	add    rsp,0x28
   14002b261:	ret    
   14002b262:	int3   
   14002b263:	int3   
   14002b264:	int3   
   14002b265:	int3   
   14002b266:	int3   
   14002b267:	int3   
   14002b268:	int3   
   14002b269:	int3   
   14002b26a:	int3   
   14002b26b:	int3   
   14002b26c:	int3   
   14002b26d:	int3   
   14002b26e:	int3   
   14002b26f:	int3   
   14002b270:	rex push rdi
   14002b272:	sub    rsp,0x20
   14002b276:	add    rcx,0x70
   14002b27a:	mov    rdi,r8
   14002b27d:	call   0x14002b1d0
   14002b282:	test   rax,rax
   14002b285:	je     0x14002b2bb
   14002b287:	cmp    QWORD PTR [rax+0x68],0x10
   14002b28c:	mov    QWORD PTR [rsp+0x30],rbx
   14002b291:	jb     0x14002b299
   14002b293:	mov    rbx,QWORD PTR [rax+0x50]
   14002b297:	jmp    0x14002b29d
   14002b299:	lea    rbx,[rax+0x50]
   14002b29d:	test   rdi,rdi
   14002b2a0:	je     0x14002b2ad
   14002b2a2:	mov    rdx,rdi
   14002b2a5:	mov    rcx,rax
   14002b2a8:	call   0x14002b0b0
   14002b2ad:	mov    rax,rbx
   14002b2b0:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b2b5:	add    rsp,0x20
   14002b2b9:	pop    rdi
   14002b2ba:	ret    
   14002b2bb:	xor    eax,eax
   14002b2bd:	add    rsp,0x20
   14002b2c1:	pop    rdi
   14002b2c2:	ret    
   14002b2c3:	int3   
   14002b2c4:	int3   
   14002b2c5:	int3   
   14002b2c6:	int3   
   14002b2c7:	int3   
   14002b2c8:	int3   
   14002b2c9:	int3   
   14002b2ca:	int3   
   14002b2cb:	int3   
   14002b2cc:	int3   
   14002b2cd:	int3   
   14002b2ce:	int3   
   14002b2cf:	int3   
   14002b2d0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b2d5:	mov    QWORD PTR [rsp+0x10],rbp
   14002b2da:	mov    QWORD PTR [rsp+0x18],rsi
   14002b2df:	push   rdi
   14002b2e0:	push   r12
   14002b2e2:	push   r13
   14002b2e4:	sub    rsp,0x20
   14002b2e8:	mov    rbx,QWORD PTR [rcx+0x78]
   14002b2ec:	mov    rsi,rdx
   14002b2ef:	mov    r12,rcx
   14002b2f2:	cmp    rbx,rcx
   14002b2f5:	je     0x14002b35c
   14002b2f7:	mov    rbp,QWORD PTR [rdx+0x18]
   14002b2fb:	mov    r13,QWORD PTR [rdx+0x20]
   14002b2ff:	nop
   14002b300:	cmp    r13,0x10
   14002b304:	jb     0x14002b30c
   14002b306:	mov    rdx,QWORD PTR [rsi+0x8]
   14002b30a:	jmp    0x14002b310
   14002b30c:	lea    rdx,[rsi+0x8]
   14002b310:	mov    rdi,QWORD PTR [rbx+0x38]
   14002b314:	cmp    rdi,rdi
   14002b317:	cmovb  rdi,rdi
   14002b31b:	cmp    QWORD PTR [rbx+0x40],0x10
   14002b320:	jb     0x14002b328
   14002b322:	mov    rcx,QWORD PTR [rbx+0x28]
   14002b326:	jmp    0x14002b32c
   14002b328:	lea    rcx,[rbx+0x28]
   14002b32c:	mov    r8,rbp
   14002b32f:	cmp    rdi,rbp
   14002b332:	cmovb  r8,rdi
   14002b336:	call   0x140016410
   14002b33b:	movsxd rcx,eax
   14002b33e:	test   eax,eax
   14002b340:	jne    0x14002b34f
   14002b342:	cmp    rdi,rbp
   14002b345:	jb     0x14002b353
   14002b347:	cmp    rdi,rbp
   14002b34a:	setne  al
   14002b34d:	mov    ecx,eax
   14002b34f:	test   ecx,ecx
   14002b351:	je     0x14002b377
   14002b353:	mov    rbx,QWORD PTR [rbx+0x78]
   14002b357:	cmp    rbx,r12
   14002b35a:	jne    0x14002b300
   14002b35c:	xor    eax,eax
   14002b35e:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b363:	mov    rbp,QWORD PTR [rsp+0x48]
   14002b368:	mov    rsi,QWORD PTR [rsp+0x50]
   14002b36d:	add    rsp,0x20
   14002b371:	pop    r13
   14002b373:	pop    r12
   14002b375:	pop    rdi
   14002b376:	ret    
   14002b377:	mov    rax,rbx
   14002b37a:	jmp    0x14002b35e
   14002b37c:	int3   
   14002b37d:	int3   
   14002b37e:	int3   
   14002b37f:	int3   
   14002b380:	rex push rbx
   14002b382:	sub    rsp,0x20
   14002b386:	mov    rcx,QWORD PTR [rcx]
   14002b389:	mov    rbx,rdx
   14002b38c:	test   rcx,rcx
   14002b38f:	je     0x14002b3aa
   14002b391:	mov    rdx,r8
   14002b394:	call   0x14002ae30
   14002b399:	test   rax,rax
   14002b39c:	je     0x14002b3aa
   14002b39e:	mov    QWORD PTR [rbx],rax
   14002b3a1:	mov    rax,rbx
   14002b3a4:	add    rsp,0x20
   14002b3a8:	pop    rbx
   14002b3a9:	ret    
   14002b3aa:	mov    QWORD PTR [rbx],0x0
   14002b3b1:	mov    rax,rbx
   14002b3b4:	add    rsp,0x20
   14002b3b8:	pop    rbx
   14002b3b9:	ret    
   14002b3ba:	int3   
   14002b3bb:	int3   
   14002b3bc:	int3   
   14002b3bd:	int3   
   14002b3be:	int3   
   14002b3bf:	int3   
   14002b3c0:	cmp    QWORD PTR [rcx+0x38],0x10
   14002b3c5:	jb     0x14002b3cc
   14002b3c7:	mov    rax,QWORD PTR [rcx+0x20]
   14002b3cb:	ret    
   14002b3cc:	lea    rax,[rcx+0x20]
   14002b3d0:	ret    
   14002b3d1:	int3   
   14002b3d2:	int3   
   14002b3d3:	int3   
   14002b3d4:	int3   
   14002b3d5:	int3   
   14002b3d6:	int3   
   14002b3d7:	int3   
   14002b3d8:	int3   
   14002b3d9:	int3   
   14002b3da:	int3   
   14002b3db:	int3   
   14002b3dc:	int3   
   14002b3dd:	int3   
   14002b3de:	int3   
   14002b3df:	int3   
   14002b3e0:	rex push rbx
   14002b3e2:	sub    rsp,0x20
   14002b3e6:	cmp    QWORD PTR [rcx+0x68],0x10
   14002b3eb:	mov    rbx,rcx
   14002b3ee:	jb     0x14002b3f9
   14002b3f0:	mov    rcx,QWORD PTR [rcx+0x50]
   14002b3f4:	call   0x1400062d4
   14002b3f9:	mov    QWORD PTR [rbx+0x68],0xf
   14002b401:	mov    QWORD PTR [rbx+0x60],0x0
   14002b409:	mov    BYTE PTR [rbx+0x50],0x0
   14002b40d:	cmp    QWORD PTR [rbx+0x40],0x10
   14002b412:	jb     0x14002b41d
   14002b414:	mov    rcx,QWORD PTR [rbx+0x28]
   14002b418:	call   0x1400062d4
   14002b41d:	mov    QWORD PTR [rbx+0x40],0xf
   14002b425:	mov    QWORD PTR [rbx+0x38],0x0
   14002b42d:	lea    rax,[rip+0x11074]        # 0x14003c4a8
   14002b434:	mov    BYTE PTR [rbx+0x28],0x0
   14002b438:	mov    QWORD PTR [rbx],rax
   14002b43b:	add    rsp,0x20
   14002b43f:	pop    rbx
   14002b440:	ret    
   14002b441:	int3   
   14002b442:	int3   
   14002b443:	int3   
   14002b444:	int3   
   14002b445:	int3   
   14002b446:	int3   
   14002b447:	int3   
   14002b448:	int3   
   14002b449:	int3   
   14002b44a:	int3   
   14002b44b:	int3   
   14002b44c:	int3   
   14002b44d:	int3   
   14002b44e:	int3   
   14002b44f:	int3   
   14002b450:	rex push rbx
   14002b452:	sub    rsp,0x20
   14002b456:	cmp    QWORD PTR [rcx+0x80],0x10
   14002b45e:	mov    rbx,rcx
   14002b461:	jb     0x14002b46c
   14002b463:	mov    rcx,QWORD PTR [rcx+0x68]
   14002b467:	call   0x1400062d4
   14002b46c:	mov    QWORD PTR [rbx+0x80],0xf
   14002b477:	mov    QWORD PTR [rbx+0x78],0x0
   14002b47f:	mov    BYTE PTR [rbx+0x68],0x0
   14002b483:	cmp    QWORD PTR [rbx+0x58],0x10
   14002b488:	jb     0x14002b493
   14002b48a:	mov    rcx,QWORD PTR [rbx+0x40]
   14002b48e:	call   0x1400062d4
   14002b493:	mov    QWORD PTR [rbx+0x58],0xf
   14002b49b:	mov    QWORD PTR [rbx+0x50],0x0
   14002b4a3:	mov    BYTE PTR [rbx+0x40],0x0
   14002b4a7:	cmp    QWORD PTR [rbx+0x30],0x10
   14002b4ac:	jb     0x14002b4b7
   14002b4ae:	mov    rcx,QWORD PTR [rbx+0x18]
   14002b4b2:	call   0x1400062d4
   14002b4b7:	mov    QWORD PTR [rbx+0x30],0xf
   14002b4bf:	mov    QWORD PTR [rbx+0x28],0x0
   14002b4c7:	lea    rax,[rip+0x10f8a]        # 0x14003c458
   14002b4ce:	mov    BYTE PTR [rbx+0x18],0x0
   14002b4d2:	mov    QWORD PTR [rbx],rax
   14002b4d5:	add    rsp,0x20
   14002b4d9:	pop    rbx
   14002b4da:	ret    
   14002b4db:	int3   
   14002b4dc:	int3   
   14002b4dd:	int3   
   14002b4de:	int3   
   14002b4df:	int3   
   14002b4e0:	mov    DWORD PTR [rcx+0xc],0xffffffff
   14002b4e7:	mov    DWORD PTR [rcx+0x8],0xffffffff
   14002b4ee:	xor    r8d,r8d
   14002b4f1:	mov    QWORD PTR [rcx+0x10],r8
   14002b4f5:	lea    rax,[rip+0x1103c]        # 0x14003c538
   14002b4fc:	mov    QWORD PTR [rcx],rax
   14002b4ff:	mov    QWORD PTR [rcx+0x58],0xf
   14002b507:	mov    QWORD PTR [rcx+0x50],r8
   14002b50b:	mov    BYTE PTR [rcx+0x40],r8b
   14002b50f:	mov    rax,rcx
   14002b512:	mov    QWORD PTR [rcx+0x18],r8
   14002b516:	mov    DWORD PTR [rcx+0x20],edx
   14002b519:	mov    QWORD PTR [rcx+0x28],r8
   14002b51d:	mov    QWORD PTR [rcx+0x30],r8
   14002b521:	mov    QWORD PTR [rcx+0x60],r8
   14002b525:	mov    QWORD PTR [rcx+0x68],r8
   14002b529:	ret    
   14002b52a:	int3   
   14002b52b:	int3   
   14002b52c:	int3   
   14002b52d:	int3   
   14002b52e:	int3   
   14002b52f:	int3   
   14002b530:	mov    QWORD PTR [rsp+0x8],rcx
   14002b535:	push   rdi
   14002b536:	sub    rsp,0x30
   14002b53a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b543:	mov    QWORD PTR [rsp+0x48],rbx
   14002b548:	mov    rbx,rcx
   14002b54b:	lea    rax,[rip+0x10fe6]        # 0x14003c538
   14002b552:	mov    QWORD PTR [rcx],rax
   14002b555:	mov    rdi,QWORD PTR [rcx+0x28]
   14002b559:	test   rdi,rdi
   14002b55c:	je     0x14002b576
   14002b55e:	xchg   ax,ax
   14002b560:	mov    rcx,rdi
   14002b563:	mov    rdi,QWORD PTR [rdi+0x68]
   14002b567:	mov    rax,QWORD PTR [rcx]
   14002b56a:	mov    edx,0x1
   14002b56f:	call   QWORD PTR [rax]
   14002b571:	test   rdi,rdi
   14002b574:	jne    0x14002b560
   14002b576:	cmp    QWORD PTR [rbx+0x58],0x10
   14002b57b:	jb     0x14002b586
   14002b57d:	mov    rcx,QWORD PTR [rbx+0x40]
   14002b581:	call   0x1400062d4
   14002b586:	mov    QWORD PTR [rbx+0x58],0xf
   14002b58e:	mov    QWORD PTR [rbx+0x50],0x0
   14002b596:	mov    BYTE PTR [rbx+0x40],0x0
   14002b59a:	lea    rax,[rip+0x10f07]        # 0x14003c4a8
   14002b5a1:	mov    QWORD PTR [rbx],rax
   14002b5a4:	mov    rbx,QWORD PTR [rsp+0x48]
   14002b5a9:	add    rsp,0x30
   14002b5ad:	pop    rdi
   14002b5ae:	ret    
   14002b5af:	int3   
   14002b5b0:	mov    DWORD PTR [rcx+0xc],0xffffffff
   14002b5b7:	mov    DWORD PTR [rcx+0x8],0xffffffff
   14002b5be:	xor    edx,edx
   14002b5c0:	mov    QWORD PTR [rcx+0x10],rdx
   14002b5c4:	lea    rax,[rip+0x10f45]        # 0x14003c510
   14002b5cb:	mov    QWORD PTR [rcx],rax
   14002b5ce:	mov    QWORD PTR [rcx+0x40],0xf
   14002b5d6:	mov    QWORD PTR [rcx+0x38],rdx
   14002b5da:	mov    BYTE PTR [rcx+0x28],dl
   14002b5dd:	mov    QWORD PTR [rcx+0x68],0xf
   14002b5e5:	mov    QWORD PTR [rcx+0x60],rdx
   14002b5e9:	mov    BYTE PTR [rcx+0x50],dl
   14002b5ec:	mov    rax,rcx
   14002b5ef:	mov    QWORD PTR [rcx+0x18],rdx
   14002b5f3:	mov    QWORD PTR [rcx+0x78],rcx
   14002b5f7:	mov    QWORD PTR [rcx+0x70],rcx
   14002b5fb:	ret    
   14002b5fc:	int3   
   14002b5fd:	int3   
   14002b5fe:	int3   
   14002b5ff:	int3   
   14002b600:	mov    QWORD PTR [rsp+0x18],rbx
   14002b605:	mov    QWORD PTR [rsp+0x20],rbp
   14002b60a:	push   r12
   14002b60c:	sub    rsp,0x20
   14002b610:	or     rax,0xffffffffffffffff
   14002b614:	movzx  r12d,r8b
   14002b618:	mov    rbp,rdx
   14002b61b:	sub    rax,QWORD PTR [rcx+0x18]
   14002b61f:	mov    rbx,rcx
   14002b622:	cmp    rax,rdx
   14002b625:	ja     0x14002b62c
   14002b627:	call   0x140031fd4
   14002b62c:	test   rbp,rbp
   14002b62f:	je     0x14002b712
   14002b635:	mov    QWORD PTR [rsp+0x30],rsi
   14002b63a:	mov    rsi,QWORD PTR [rbx+0x18]
   14002b63e:	add    rsi,rbp
   14002b641:	cmp    rsi,0xfffffffffffffffe
   14002b645:	jbe    0x14002b64c
   14002b647:	call   0x140031fd4
   14002b64c:	mov    rax,QWORD PTR [rbx+0x20]
   14002b650:	cmp    rax,rsi
   14002b653:	jae    0x14002b68d
   14002b655:	mov    r8,QWORD PTR [rbx+0x18]
   14002b659:	mov    rdx,rsi
   14002b65c:	mov    rcx,rbx
   14002b65f:	call   0x140003460
   14002b664:	test   rsi,rsi
   14002b667:	je     0x14002b6a9
   14002b669:	mov    rcx,QWORD PTR [rbx+0x18]
   14002b66d:	mov    QWORD PTR [rsp+0x38],rdi
   14002b672:	cmp    rbp,0x1
   14002b676:	jne    0x14002b6cf
   14002b678:	cmp    QWORD PTR [rbx+0x20],0x10
   14002b67d:	jb     0x14002b6c2
   14002b67f:	mov    rax,QWORD PTR [rbx+0x8]
   14002b683:	lea    rdi,[rbx+0x8]
   14002b687:	mov    BYTE PTR [rax+rcx*1],r12b
   14002b68b:	jmp    0x14002b6f6
   14002b68d:	test   rsi,rsi
   14002b690:	jne    0x14002b664
   14002b692:	mov    QWORD PTR [rbx+0x18],rsi
   14002b696:	cmp    rax,0x10
   14002b69a:	jb     0x14002b6a2
   14002b69c:	mov    rax,QWORD PTR [rbx+0x8]
   14002b6a0:	jmp    0x14002b6a6
   14002b6a2:	lea    rax,[rbx+0x8]
   14002b6a6:	mov    BYTE PTR [rax],0x0
   14002b6a9:	mov    rax,rbx
   14002b6ac:	mov    rsi,QWORD PTR [rsp+0x30]
   14002b6b1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b6b6:	mov    rbp,QWORD PTR [rsp+0x48]
   14002b6bb:	add    rsp,0x20
   14002b6bf:	pop    r12
   14002b6c1:	ret    
   14002b6c2:	lea    rdi,[rbx+0x8]
   14002b6c6:	mov    rax,rdi
   14002b6c9:	mov    BYTE PTR [rax+rcx*1],r12b
   14002b6cd:	jmp    0x14002b6f6
   14002b6cf:	cmp    QWORD PTR [rbx+0x20],0x10
   14002b6d4:	jb     0x14002b6e0
   14002b6d6:	mov    rax,QWORD PTR [rbx+0x8]
   14002b6da:	lea    rdi,[rbx+0x8]
   14002b6de:	jmp    0x14002b6e7
   14002b6e0:	lea    rdi,[rbx+0x8]
   14002b6e4:	mov    rax,rdi
   14002b6e7:	movsx  edx,r12b
   14002b6eb:	add    rcx,rax
   14002b6ee:	mov    r8,rbp
   14002b6f1:	call   0x140015b00
   14002b6f6:	cmp    QWORD PTR [rbx+0x20],0x10
   14002b6fb:	mov    QWORD PTR [rbx+0x18],rsi
   14002b6ff:	jb     0x14002b704
   14002b701:	mov    rdi,QWORD PTR [rdi]
   14002b704:	mov    BYTE PTR [rdi+rsi*1],0x0
   14002b708:	mov    rdi,QWORD PTR [rsp+0x38]
   14002b70d:	mov    rax,rbx
   14002b710:	jmp    0x14002b6ac
   14002b712:	mov    rbp,QWORD PTR [rsp+0x48]
   14002b717:	mov    rax,rbx
   14002b71a:	mov    rbx,QWORD PTR [rsp+0x40]
   14002b71f:	add    rsp,0x20
   14002b723:	pop    r12
   14002b725:	ret    
   14002b726:	int3   
   14002b727:	int3   
   14002b728:	int3   
   14002b729:	int3   
   14002b72a:	int3   
   14002b72b:	int3   
   14002b72c:	int3   
   14002b72d:	int3   
   14002b72e:	int3   
   14002b72f:	int3   
   14002b730:	mov    QWORD PTR [rsp+0x8],rbx
   14002b735:	push   rdi
   14002b736:	sub    rsp,0x20
   14002b73a:	cmp    QWORD PTR [rcx+0x68],0x10
   14002b73f:	mov    edi,edx
   14002b741:	mov    rbx,rcx
   14002b744:	jb     0x14002b74f
   14002b746:	mov    rcx,QWORD PTR [rcx+0x50]
   14002b74a:	call   0x1400062d4
   14002b74f:	mov    QWORD PTR [rbx+0x68],0xf
   14002b757:	mov    QWORD PTR [rbx+0x60],0x0
   14002b75f:	mov    BYTE PTR [rbx+0x50],0x0
   14002b763:	cmp    QWORD PTR [rbx+0x40],0x10
   14002b768:	jb     0x14002b773
   14002b76a:	mov    rcx,QWORD PTR [rbx+0x28]
   14002b76e:	call   0x1400062d4
   14002b773:	mov    QWORD PTR [rbx+0x40],0xf
   14002b77b:	mov    QWORD PTR [rbx+0x38],0x0
   14002b783:	lea    rax,[rip+0x10d1e]        # 0x14003c4a8
   14002b78a:	mov    BYTE PTR [rbx+0x28],0x0
   14002b78e:	mov    QWORD PTR [rbx],rax
   14002b791:	test   dil,0x1
   14002b795:	je     0x14002b79f
   14002b797:	mov    rcx,rbx
   14002b79a:	call   0x1400062d4
   14002b79f:	mov    rax,rbx
   14002b7a2:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b7a7:	add    rsp,0x20
   14002b7ab:	pop    rdi
   14002b7ac:	ret    
   14002b7ad:	int3   
   14002b7ae:	int3   
   14002b7af:	int3   
   14002b7b0:	sub    rsp,0x28
   14002b7b4:	mov    edx,0x2
   14002b7b9:	call   0x14002b4e0
   14002b7be:	lea    rdx,[rip+0x10e33]        # 0x14003c5f8
   14002b7c5:	mov    rax,rcx
   14002b7c8:	mov    QWORD PTR [rcx],rdx
   14002b7cb:	add    rsp,0x28
   14002b7cf:	ret    
   14002b7d0:	mov    rax,rcx
   14002b7d3:	ret    
   14002b7d4:	int3   
   14002b7d5:	int3   
   14002b7d6:	int3   
   14002b7d7:	int3   
   14002b7d8:	int3   
   14002b7d9:	int3   
   14002b7da:	int3   
   14002b7db:	int3   
   14002b7dc:	int3   
   14002b7dd:	int3   
   14002b7de:	int3   
   14002b7df:	int3   
   14002b7e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002b7e5:	push   rdi
   14002b7e6:	sub    rsp,0x20
   14002b7ea:	lea    rax,[rip+0x10e07]        # 0x14003c5f8
   14002b7f1:	mov    ebx,edx
   14002b7f3:	mov    rdi,rcx
   14002b7f6:	mov    QWORD PTR [rcx],rax
   14002b7f9:	call   0x14002b530
   14002b7fe:	test   bl,0x1
   14002b801:	je     0x14002b80b
   14002b803:	mov    rcx,rdi
   14002b806:	call   0x1400062d4
   14002b80b:	mov    rax,rdi
   14002b80e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b813:	add    rsp,0x20
   14002b817:	pop    rdi
   14002b818:	ret    
   14002b819:	int3   
   14002b81a:	int3   
   14002b81b:	int3   
   14002b81c:	int3   
   14002b81d:	int3   
   14002b81e:	int3   
   14002b81f:	int3   
   14002b820:	sub    rsp,0x28
   14002b824:	mov    edx,0x3
   14002b829:	call   0x14002b4e0
   14002b82e:	lea    rdx,[rip+0x10e63]        # 0x14003c698
   14002b835:	mov    rax,rcx
   14002b838:	mov    QWORD PTR [rcx],rdx
   14002b83b:	add    rsp,0x28
   14002b83f:	ret    
   14002b840:	mov    QWORD PTR [rsp+0x8],rbx
   14002b845:	push   rdi
   14002b846:	sub    rsp,0x20
   14002b84a:	lea    rax,[rip+0x10e47]        # 0x14003c698
   14002b851:	mov    ebx,edx
   14002b853:	mov    rdi,rcx
   14002b856:	mov    QWORD PTR [rcx],rax
   14002b859:	call   0x14002b530
   14002b85e:	test   bl,0x1
   14002b861:	je     0x14002b86b
   14002b863:	mov    rcx,rdi
   14002b866:	call   0x1400062d4
   14002b86b:	mov    rax,rdi
   14002b86e:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b873:	add    rsp,0x20
   14002b877:	pop    rdi
   14002b878:	ret    
   14002b879:	int3   
   14002b87a:	int3   
   14002b87b:	int3   
   14002b87c:	int3   
   14002b87d:	int3   
   14002b87e:	int3   
   14002b87f:	int3   
   14002b880:	mov    QWORD PTR [rsp+0x8],rbx
   14002b885:	push   rdi
   14002b886:	sub    rsp,0x20
   14002b88a:	mov    ebx,edx
   14002b88c:	mov    rdi,rcx
   14002b88f:	call   0x14002b530
   14002b894:	test   bl,0x1
   14002b897:	je     0x14002b8a1
   14002b899:	mov    rcx,rdi
   14002b89c:	call   0x1400062d4
   14002b8a1:	mov    rax,rdi
   14002b8a4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b8a9:	add    rsp,0x20
   14002b8ad:	pop    rdi
   14002b8ae:	ret    
   14002b8af:	int3   
   14002b8b0:	mov    QWORD PTR [rsp+0x8],rcx
   14002b8b5:	push   rbx
   14002b8b6:	sub    rsp,0x30
   14002b8ba:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002b8c3:	mov    rbx,rcx
   14002b8c6:	lea    rax,[rip+0x10e8b]        # 0x14003c758
   14002b8cd:	mov    QWORD PTR [rcx],rax
   14002b8d0:	call   0x14002aca0
   14002b8d5:	nop
   14002b8d6:	lea    rcx,[rbx+0x70]
   14002b8da:	call   0x14002b3e0
   14002b8df:	nop
   14002b8e0:	mov    rcx,rbx
   14002b8e3:	add    rsp,0x30
   14002b8e7:	pop    rbx
   14002b8e8:	jmp    0x14002b530
   14002b8ed:	int3   
   14002b8ee:	int3   
   14002b8ef:	int3   
   14002b8f0:	rex push rbx
   14002b8f2:	sub    rsp,0x20
   14002b8f6:	lea    rax,[rip+0x10bfb]        # 0x14003c4f8
   14002b8fd:	mov    rbx,rcx
   14002b900:	mov    QWORD PTR [rcx],rax
   14002b903:	cmp    QWORD PTR [rcx+0x38],0x10
   14002b908:	jb     0x14002b913
   14002b90a:	mov    rcx,QWORD PTR [rcx+0x20]
   14002b90e:	call   0x1400062d4
   14002b913:	mov    QWORD PTR [rbx+0x38],0xf
   14002b91b:	mov    QWORD PTR [rbx+0x30],0x0
   14002b923:	mov    rcx,rbx
   14002b926:	mov    BYTE PTR [rbx+0x20],0x0
   14002b92a:	add    rsp,0x20
   14002b92e:	pop    rbx
   14002b92f:	jmp    0x140014718
   14002b934:	int3   
   14002b935:	int3   
   14002b936:	int3   
   14002b937:	int3   
   14002b938:	int3   
   14002b939:	int3   
   14002b93a:	int3   
   14002b93b:	int3   
   14002b93c:	int3   
   14002b93d:	int3   
   14002b93e:	int3   
   14002b93f:	int3   
   14002b940:	mov    QWORD PTR [rsp+0x8],rbx
   14002b945:	push   rdi
   14002b946:	sub    rsp,0x20
   14002b94a:	lea    rax,[rip+0x10ba7]        # 0x14003c4f8
   14002b951:	mov    edi,edx
   14002b953:	mov    rbx,rcx
   14002b956:	mov    QWORD PTR [rcx],rax
   14002b959:	cmp    QWORD PTR [rcx+0x38],0x10
   14002b95e:	jb     0x14002b969
   14002b960:	mov    rcx,QWORD PTR [rcx+0x20]
   14002b964:	call   0x1400062d4
   14002b969:	mov    QWORD PTR [rbx+0x38],0xf
   14002b971:	mov    QWORD PTR [rbx+0x30],0x0
   14002b979:	mov    rcx,rbx
   14002b97c:	mov    BYTE PTR [rbx+0x20],0x0
   14002b980:	call   0x140014718
   14002b985:	test   dil,0x1
   14002b989:	je     0x14002b993
   14002b98b:	mov    rcx,rbx
   14002b98e:	call   0x1400062d4
   14002b993:	mov    rax,rbx
   14002b996:	mov    rbx,QWORD PTR [rsp+0x30]
   14002b99b:	add    rsp,0x20
   14002b99f:	pop    rdi
   14002b9a0:	ret    
   14002b9a1:	int3   
   14002b9a2:	int3   
   14002b9a3:	int3   
   14002b9a4:	int3   
   14002b9a5:	int3   
   14002b9a6:	int3   
   14002b9a7:	int3   
   14002b9a8:	int3   
   14002b9a9:	int3   
   14002b9aa:	int3   
   14002b9ab:	int3   
   14002b9ac:	int3   
   14002b9ad:	int3   
   14002b9ae:	int3   
   14002b9af:	int3   
   14002b9b0:	rex push rbx
   14002b9b2:	push   rsi
   14002b9b3:	push   r13
   14002b9b5:	sub    rsp,0x60
   14002b9b9:	mov    rax,QWORD PTR [rip+0x1d400]        # 0x140048dc0
   14002b9c0:	xor    rax,rsp
   14002b9c3:	mov    QWORD PTR [rsp+0x40],rax
   14002b9c8:	mov    rax,QWORD PTR [rcx+0x18]
   14002b9cc:	xor    ebx,ebx
   14002b9ce:	mov    r13,rdx
   14002b9d1:	mov    rsi,rcx
   14002b9d4:	test   eax,eax
   14002b9d6:	jle    0x14002bbfc
   14002b9dc:	mov    QWORD PTR [rsp+0x90],rbp
   14002b9e4:	mov    QWORD PTR [rsp+0x58],rdi
   14002b9e9:	mov    QWORD PTR [rsp+0x50],r12
   14002b9ee:	xchg   ax,ax
   14002b9f0:	movsxd rdi,ebx
   14002b9f3:	cmp    rdi,rax
   14002b9f6:	jbe    0x14002b9fd
   14002b9f8:	call   0x140014a30
   14002b9fd:	cmp    QWORD PTR [rsi+0x20],0x10
   14002ba02:	jb     0x14002ba0a
   14002ba04:	mov    rax,QWORD PTR [rsi+0x8]
   14002ba08:	jmp    0x14002ba0e
   14002ba0a:	lea    rax,[rsi+0x8]
   14002ba0e:	movzx  r8d,BYTE PTR [rax+rdi*1]
   14002ba13:	cmp    r8b,0x26
   14002ba17:	jne    0x14002bb02
   14002ba1d:	mov    rcx,QWORD PTR [rsi+0x18]
   14002ba21:	lea    eax,[rcx-0x2]
   14002ba24:	cmp    ebx,eax
   14002ba26:	jge    0x14002bae5
   14002ba2c:	lea    eax,[rbx+0x1]
   14002ba2f:	movsxd r12,eax
   14002ba32:	cmp    r12,rcx
   14002ba35:	jbe    0x14002ba3c
   14002ba37:	call   0x140014a30
   14002ba3c:	cmp    QWORD PTR [rsi+0x20],0x10
   14002ba41:	jb     0x14002ba49
   14002ba43:	mov    rax,QWORD PTR [rsi+0x8]
   14002ba47:	jmp    0x14002ba4d
   14002ba49:	lea    rax,[rsi+0x8]
   14002ba4d:	cmp    BYTE PTR [rax+r12*1],0x23
   14002ba52:	jne    0x14002bae5
   14002ba58:	lea    eax,[rbx+0x2]
   14002ba5b:	movsxd r12,eax
   14002ba5e:	cmp    r12,QWORD PTR [rsi+0x18]
   14002ba62:	jbe    0x14002ba69
   14002ba64:	call   0x140014a30
   14002ba69:	cmp    QWORD PTR [rsi+0x20],0x10
   14002ba6e:	jb     0x14002ba76
   14002ba70:	mov    rax,QWORD PTR [rsi+0x8]
   14002ba74:	jmp    0x14002ba7a
   14002ba76:	lea    rax,[rsi+0x8]
   14002ba7a:	cmp    BYTE PTR [rax+r12*1],0x78
   14002ba7f:	jne    0x14002bae5
   14002ba81:	mov    eax,DWORD PTR [rsi+0x18]
   14002ba84:	dec    eax
   14002ba86:	cmp    ebx,eax
   14002ba88:	jge    0x14002bbde
   14002ba8e:	xchg   ax,ax
   14002ba90:	mov    rcx,rsi
   14002ba93:	call   0x1400023d0
   14002ba98:	movsxd rdx,ebx
   14002ba9b:	mov    r8d,0x1
   14002baa1:	add    rdx,rax
   14002baa4:	mov    rcx,r13
   14002baa7:	call   0x14002a6a0
   14002baac:	inc    rdi
   14002baaf:	inc    ebx
   14002bab1:	cmp    rdi,QWORD PTR [rsi+0x18]
   14002bab5:	jbe    0x14002babc
   14002bab7:	call   0x140014a30
   14002babc:	cmp    QWORD PTR [rsi+0x20],0x10
   14002bac1:	jb     0x14002bac9
   14002bac3:	mov    rax,QWORD PTR [rsi+0x8]
   14002bac7:	jmp    0x14002bacd
   14002bac9:	lea    rax,[rsi+0x8]
   14002bacd:	cmp    BYTE PTR [rax+rdi*1],0x3b
   14002bad1:	je     0x14002bbde
   14002bad7:	mov    eax,DWORD PTR [rsi+0x18]
   14002bada:	dec    eax
   14002badc:	cmp    ebx,eax
   14002bade:	jl     0x14002ba90
   14002bae0:	jmp    0x14002bbde
   14002bae5:	mov    r8d,DWORD PTR [rip+0x1ed4c]        # 0x14004a838
   14002baec:	mov    rdx,QWORD PTR [rip+0x1ed3d]        # 0x14004a830
   14002baf3:	mov    rcx,r13
   14002baf6:	call   0x14002a6a0
   14002bafb:	inc    ebx
   14002bafd:	jmp    0x14002bbde
   14002bb02:	cmp    r8b,0x3c
   14002bb06:	jne    0x14002bb25
   14002bb08:	mov    r8d,DWORD PTR [rip+0x1ed39]        # 0x14004a848
   14002bb0f:	mov    rdx,QWORD PTR [rip+0x1ed2a]        # 0x14004a840
   14002bb16:	mov    rcx,r13
   14002bb19:	call   0x14002a6a0
   14002bb1e:	inc    ebx
   14002bb20:	jmp    0x14002bbde
   14002bb25:	cmp    r8b,0x3e
   14002bb29:	jne    0x14002bb48
   14002bb2b:	mov    r8d,DWORD PTR [rip+0x1ed26]        # 0x14004a858
   14002bb32:	mov    rdx,QWORD PTR [rip+0x1ed17]        # 0x14004a850
   14002bb39:	mov    rcx,r13
   14002bb3c:	call   0x14002a6a0
   14002bb41:	inc    ebx
   14002bb43:	jmp    0x14002bbde
   14002bb48:	cmp    r8b,0x22
   14002bb4c:	jne    0x14002bb68
   14002bb4e:	mov    r8d,DWORD PTR [rip+0x1ed13]        # 0x14004a868
   14002bb55:	mov    rdx,QWORD PTR [rip+0x1ed04]        # 0x14004a860
   14002bb5c:	mov    rcx,r13
   14002bb5f:	call   0x14002a6a0
   14002bb64:	inc    ebx
   14002bb66:	jmp    0x14002bbde
   14002bb68:	cmp    r8b,0x27
   14002bb6c:	jne    0x14002bb88
   14002bb6e:	mov    r8d,DWORD PTR [rip+0x1ed03]        # 0x14004a878
   14002bb75:	mov    rdx,QWORD PTR [rip+0x1ecf4]        # 0x14004a870
   14002bb7c:	mov    rcx,r13
   14002bb7f:	call   0x14002a6a0
   14002bb84:	inc    ebx
   14002bb86:	jmp    0x14002bbde
   14002bb88:	cmp    r8b,0x20
   14002bb8c:	jae    0x14002bbcf
   14002bb8e:	movzx  r9d,r8b
   14002bb92:	lea    rcx,[rsp+0x20]
   14002bb97:	lea    r8,[rip+0x10c62]        # 0x14003c800
   14002bb9e:	mov    edx,0x20
   14002bba3:	call   0x14002ab30
   14002bba8:	or     rcx,0xffffffffffffffff
   14002bbac:	xor    eax,eax
   14002bbae:	lea    rdi,[rsp+0x20]
   14002bbb3:	lea    rdx,[rsp+0x20]
   14002bbb8:	repnz scas al,BYTE PTR es:[rdi]
   14002bbba:	not    rcx
   14002bbbd:	dec    rcx
   14002bbc0:	movsxd r8,ecx
   14002bbc3:	mov    rcx,r13
   14002bbc6:	call   0x14002a6a0
   14002bbcb:	inc    ebx
   14002bbcd:	jmp    0x14002bbde
   14002bbcf:	mov    edx,0x1
   14002bbd4:	mov    rcx,r13
   14002bbd7:	call   0x14002b600
   14002bbdc:	inc    ebx
   14002bbde:	mov    rax,QWORD PTR [rsi+0x18]
   14002bbe2:	cmp    ebx,eax
   14002bbe4:	jl     0x14002b9f0
   14002bbea:	mov    r12,QWORD PTR [rsp+0x50]
   14002bbef:	mov    rdi,QWORD PTR [rsp+0x58]
   14002bbf4:	mov    rbp,QWORD PTR [rsp+0x90]
   14002bbfc:	mov    rcx,QWORD PTR [rsp+0x40]
   14002bc01:	xor    rcx,rsp
   14002bc04:	call   0x1400144f0
   14002bc09:	add    rsp,0x60
   14002bc0d:	pop    r13
   14002bc0f:	pop    rsi
   14002bc10:	pop    rbx
   14002bc11:	ret    
   14002bc12:	int3   
   14002bc13:	int3   
   14002bc14:	int3   
   14002bc15:	int3   
   14002bc16:	int3   
   14002bc17:	int3   
   14002bc18:	int3   
   14002bc19:	int3   
   14002bc1a:	int3   
   14002bc1b:	int3   
   14002bc1c:	int3   
   14002bc1d:	int3   
   14002bc1e:	int3   
   14002bc1f:	int3   
   14002bc20:	mov    QWORD PTR [rsp+0x8],rbx
   14002bc25:	push   rdi
   14002bc26:	sub    rsp,0x20
   14002bc2a:	mov    ebx,edx
   14002bc2c:	mov    rdi,rcx
   14002bc2f:	call   0x14002b8b0
   14002bc34:	test   bl,0x1
   14002bc37:	je     0x14002bc41
   14002bc39:	mov    rcx,rdi
   14002bc3c:	call   0x1400062d4
   14002bc41:	mov    rax,rdi
   14002bc44:	mov    rbx,QWORD PTR [rsp+0x30]
   14002bc49:	add    rsp,0x20
   14002bc4d:	pop    rdi
   14002bc4e:	ret    
   14002bc4f:	int3   
   14002bc50:	mov    rax,rsp
   14002bc53:	push   rdi
   14002bc54:	sub    rsp,0x60
   14002bc58:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002bc61:	mov    QWORD PTR [rax+0x18],rbx
   14002bc65:	mov    QWORD PTR [rax+0x20],rsi
   14002bc69:	mov    rax,QWORD PTR [rip+0x1d150]        # 0x140048dc0
   14002bc70:	xor    rax,rsp
   14002bc73:	mov    QWORD PTR [rsp+0x50],rax
   14002bc78:	mov    ebx,r8d
   14002bc7b:	mov    rdi,rdx
   14002bc7e:	mov    rsi,rcx
   14002bc81:	cmp    BYTE PTR [rcx+0x70],0x0
   14002bc85:	je     0x14002bcd7
   14002bc87:	lea    rdx,[rip+0xb3c2]        # 0x140037050
   14002bc8e:	mov    rcx,rdi
   14002bc91:	call   0x14003277c
   14002bc96:	test   ebx,ebx
   14002bc98:	jle    0x14002bcb5
   14002bc9a:	nop    WORD PTR [rax+rax*1+0x0]
   14002bca0:	lea    rdx,[rip+0x10829]        # 0x14003c4d0
   14002bca7:	mov    rcx,rdi
   14002bcaa:	call   0x14003277c
   14002bcaf:	sub    rbx,0x1
   14002bcb3:	jne    0x14002bca0
   14002bcb5:	cmp    QWORD PTR [rsi+0x58],0x10
   14002bcba:	jb     0x14002bcc2
   14002bcbc:	mov    r8,QWORD PTR [rsi+0x40]
   14002bcc0:	jmp    0x14002bcc6
   14002bcc2:	lea    r8,[rsi+0x40]
   14002bcc6:	lea    rdx,[rip+0x10b6b]        # 0x14003c838
   14002bccd:	mov    rcx,rdi
   14002bcd0:	call   0x14003277c
   14002bcd5:	jmp    0x14002bd2f
   14002bcd7:	mov    QWORD PTR [rsp+0x48],0xf
   14002bce0:	mov    QWORD PTR [rsp+0x40],0x0
   14002bce9:	mov    BYTE PTR [rsp+0x30],0x0
   14002bcee:	add    rcx,0x38
   14002bcf2:	lea    rdx,[rsp+0x28]
   14002bcf7:	call   0x14002b9b0
   14002bcfc:	lea    r8,[rsp+0x30]
   14002bd01:	cmp    QWORD PTR [rsp+0x48],0x10
   14002bd07:	cmovae r8,QWORD PTR [rsp+0x30]
   14002bd0d:	lea    rdx,[rip+0xd5a4]        # 0x1400392b8
   14002bd14:	mov    rcx,rdi
   14002bd17:	call   0x14003277c
   14002bd1c:	nop
   14002bd1d:	cmp    QWORD PTR [rsp+0x48],0x10
   14002bd23:	jb     0x14002bd2f
   14002bd25:	mov    rcx,QWORD PTR [rsp+0x30]
   14002bd2a:	call   0x1400062d4
   14002bd2f:	mov    rcx,QWORD PTR [rsp+0x50]
   14002bd34:	xor    rcx,rsp
   14002bd37:	call   0x1400144f0
   14002bd3c:	lea    r11,[rsp+0x60]
   14002bd41:	mov    rbx,QWORD PTR [r11+0x20]
   14002bd45:	mov    rsi,QWORD PTR [r11+0x28]
   14002bd49:	mov    rsp,r11
   14002bd4c:	pop    rdi
   14002bd4d:	ret    
   14002bd4e:	int3   
   14002bd4f:	int3   
   14002bd50:	rex push rbx
   14002bd52:	sub    rsp,0x90
   14002bd59:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002bd62:	and    edx,0x17
   14002bd65:	mov    DWORD PTR [rcx+0x10],edx
   14002bd68:	mov    eax,DWORD PTR [rcx+0x14]
   14002bd6b:	and    eax,edx
   14002bd6d:	je     0x14002bf3c
   14002bd73:	test   r8b,r8b
   14002bd76:	je     0x14002bd82
   14002bd78:	xor    edx,edx
   14002bd7a:	xor    ecx,ecx
   14002bd7c:	call   0x1400158a0
   14002bd81:	int3   
   14002bd82:	test   al,0x4
   14002bd84:	je     0x14002be18
   14002bd8a:	mov    QWORD PTR [rsp+0x48],0xf
   14002bd93:	xor    ebx,ebx
   14002bd95:	mov    QWORD PTR [rsp+0x40],rbx
   14002bd9a:	mov    BYTE PTR [rsp+0x30],bl
   14002bd9e:	lea    r8d,[rbx+0x14]
   14002bda2:	lea    rdx,[rip+0x10af7]        # 0x14003c8a0
   14002bda9:	lea    rcx,[rsp+0x28]
   14002bdae:	call   0x140002a30
   14002bdb3:	nop
   14002bdb4:	lea    rcx,[rsp+0x50]
   14002bdb9:	call   0x14001460c
   14002bdbe:	nop
   14002bdbf:	lea    rax,[rip+0x10732]        # 0x14003c4f8
   14002bdc6:	mov    QWORD PTR [rsp+0x50],rax
   14002bdcb:	mov    QWORD PTR [rsp+0x88],0xf
   14002bdd7:	mov    QWORD PTR [rsp+0x80],rbx
   14002bddf:	mov    BYTE PTR [rsp+0x70],bl
   14002bde3:	or     r9,0xffffffffffffffff
   14002bde7:	xor    r8d,r8d
   14002bdea:	lea    rdx,[rsp+0x28]
   14002bdef:	lea    rcx,[rsp+0x68]
   14002bdf4:	call   0x140002630
   14002bdf9:	nop
   14002bdfa:	lea    rax,[rip+0x109ef]        # 0x14003c7f0
   14002be01:	mov    QWORD PTR [rsp+0x50],rax
   14002be06:	lea    rdx,[rip+0x1a1c3]        # 0x140045fd0
   14002be0d:	lea    rcx,[rsp+0x50]
   14002be12:	call   0x1400158a0
   14002be17:	nop
   14002be18:	test   al,0x2
   14002be1a:	je     0x14002beae
   14002be20:	mov    QWORD PTR [rsp+0x48],0xf
   14002be29:	xor    ebx,ebx
   14002be2b:	mov    QWORD PTR [rsp+0x40],rbx
   14002be30:	mov    BYTE PTR [rsp+0x30],bl
   14002be34:	lea    r8d,[rbx+0x15]
   14002be38:	lea    rdx,[rip+0x10a49]        # 0x14003c888
   14002be3f:	lea    rcx,[rsp+0x28]
   14002be44:	call   0x140002a30
   14002be49:	nop
   14002be4a:	lea    rcx,[rsp+0x50]
   14002be4f:	call   0x14001460c
   14002be54:	nop
   14002be55:	lea    rax,[rip+0x1069c]        # 0x14003c4f8
   14002be5c:	mov    QWORD PTR [rsp+0x50],rax
   14002be61:	mov    QWORD PTR [rsp+0x88],0xf
   14002be6d:	mov    QWORD PTR [rsp+0x80],rbx
   14002be75:	mov    BYTE PTR [rsp+0x70],bl
   14002be79:	or     r9,0xffffffffffffffff
   14002be7d:	xor    r8d,r8d
   14002be80:	lea    rdx,[rsp+0x28]
   14002be85:	lea    rcx,[rsp+0x68]
   14002be8a:	call   0x140002630
   14002be8f:	nop
   14002be90:	lea    rax,[rip+0x10959]        # 0x14003c7f0
   14002be97:	mov    QWORD PTR [rsp+0x50],rax
   14002be9c:	lea    rdx,[rip+0x1a12d]        # 0x140045fd0
   14002bea3:	lea    rcx,[rsp+0x50]
   14002bea8:	call   0x1400158a0
   14002bead:	nop
   14002beae:	mov    QWORD PTR [rsp+0x48],0xf
   14002beb7:	xor    ebx,ebx
   14002beb9:	mov    QWORD PTR [rsp+0x40],rbx
   14002bebe:	mov    BYTE PTR [rsp+0x30],bl
   14002bec2:	lea    r8d,[rbx+0x14]
   14002bec6:	lea    rdx,[rip+0x109a3]        # 0x14003c870
   14002becd:	lea    rcx,[rsp+0x28]
   14002bed2:	call   0x140002a30
   14002bed7:	nop
   14002bed8:	lea    rcx,[rsp+0x50]
   14002bedd:	call   0x14001460c
   14002bee2:	nop
   14002bee3:	lea    rax,[rip+0x1060e]        # 0x14003c4f8
   14002beea:	mov    QWORD PTR [rsp+0x50],rax
   14002beef:	mov    QWORD PTR [rsp+0x88],0xf
   14002befb:	mov    QWORD PTR [rsp+0x80],rbx
   14002bf03:	mov    BYTE PTR [rsp+0x70],bl
   14002bf07:	or     r9,0xffffffffffffffff
   14002bf0b:	xor    r8d,r8d
   14002bf0e:	lea    rdx,[rsp+0x28]
   14002bf13:	lea    rcx,[rsp+0x68]
   14002bf18:	call   0x140002630
   14002bf1d:	nop
   14002bf1e:	lea    rax,[rip+0x108cb]        # 0x14003c7f0
   14002bf25:	mov    QWORD PTR [rsp+0x50],rax
   14002bf2a:	lea    rdx,[rip+0x1a09f]        # 0x140045fd0
   14002bf31:	lea    rcx,[rsp+0x50]
   14002bf36:	call   0x1400158a0
   14002bf3b:	nop
   14002bf3c:	add    rsp,0x90
   14002bf43:	pop    rbx
   14002bf44:	ret    
   14002bf45:	int3   
   14002bf46:	int3   
   14002bf47:	int3   
   14002bf48:	int3   
   14002bf49:	int3   
   14002bf4a:	int3   
   14002bf4b:	int3   
   14002bf4c:	int3   
   14002bf4d:	int3   
   14002bf4e:	int3   
   14002bf4f:	int3   
   14002bf50:	mov    QWORD PTR [rsp+0x8],rcx
   14002bf55:	push   rdi
   14002bf56:	sub    rsp,0x30
   14002bf5a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002bf63:	mov    QWORD PTR [rsp+0x48],rbx
   14002bf68:	mov    rbx,rdx
   14002bf6b:	mov    rdi,rcx
   14002bf6e:	call   0x140014698
   14002bf73:	nop
   14002bf74:	lea    rax,[rip+0x1057d]        # 0x14003c4f8
   14002bf7b:	mov    QWORD PTR [rdi],rax
   14002bf7e:	lea    rdx,[rbx+0x18]
   14002bf82:	lea    rcx,[rdi+0x18]
   14002bf86:	mov    QWORD PTR [rcx+0x20],0xf
   14002bf8e:	mov    QWORD PTR [rcx+0x18],0x0
   14002bf96:	mov    BYTE PTR [rcx+0x8],0x0
   14002bf9a:	or     r9,0xffffffffffffffff
   14002bf9e:	xor    r8d,r8d
   14002bfa1:	call   0x140002630
   14002bfa6:	nop
   14002bfa7:	mov    rax,rdi
   14002bfaa:	mov    rbx,QWORD PTR [rsp+0x48]
   14002bfaf:	add    rsp,0x30
   14002bfb3:	pop    rdi
   14002bfb4:	ret    
   14002bfb5:	int3   
   14002bfb6:	int3   
   14002bfb7:	int3   
   14002bfb8:	int3   
   14002bfb9:	int3   
   14002bfba:	int3   
   14002bfbb:	int3   
   14002bfbc:	int3   
   14002bfbd:	int3   
   14002bfbe:	int3   
   14002bfbf:	int3   
   14002bfc0:	mov    QWORD PTR [rsp+0x8],rcx
   14002bfc5:	push   rdi
   14002bfc6:	sub    rsp,0x30
   14002bfca:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002bfd3:	mov    QWORD PTR [rsp+0x48],rbx
   14002bfd8:	mov    rbx,rdx
   14002bfdb:	mov    rdi,rcx
   14002bfde:	call   0x140014698
   14002bfe3:	nop
   14002bfe4:	lea    rax,[rip+0x1050d]        # 0x14003c4f8
   14002bfeb:	mov    QWORD PTR [rdi],rax
   14002bfee:	lea    rdx,[rbx+0x18]
   14002bff2:	lea    rcx,[rdi+0x18]
   14002bff6:	mov    QWORD PTR [rcx+0x20],0xf
   14002bffe:	mov    QWORD PTR [rcx+0x18],0x0
   14002c006:	mov    BYTE PTR [rcx+0x8],0x0
   14002c00a:	or     r9,0xffffffffffffffff
   14002c00e:	xor    r8d,r8d
   14002c011:	call   0x140002630
   14002c016:	nop
   14002c017:	lea    rax,[rip+0x107d2]        # 0x14003c7f0
   14002c01e:	mov    QWORD PTR [rdi],rax
   14002c021:	mov    rax,rdi
   14002c024:	mov    rbx,QWORD PTR [rsp+0x48]
   14002c029:	add    rsp,0x30
   14002c02d:	pop    rdi
   14002c02e:	ret    
   14002c02f:	int3   
   14002c030:	mov    QWORD PTR [rsp+0x8],rcx
   14002c035:	push   rdi
   14002c036:	sub    rsp,0x30
   14002c03a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c043:	mov    QWORD PTR [rsp+0x48],rbx
   14002c048:	mov    r9,rdx
   14002c04b:	mov    rbx,rcx
   14002c04e:	mov    edx,0x4
   14002c053:	call   0x14002b4e0
   14002c058:	nop
   14002c059:	lea    rax,[rip+0xff18]        # 0x14003bf78
   14002c060:	mov    QWORD PTR [rcx],rax
   14002c063:	xor    eax,eax
   14002c065:	or     rcx,0xffffffffffffffff
   14002c069:	mov    rdi,r9
   14002c06c:	repnz scas al,BYTE PTR es:[rdi]
   14002c06e:	not    rcx
   14002c071:	lea    r8,[rcx-0x1]
   14002c075:	lea    rcx,[rbx+0x38]
   14002c079:	mov    rdx,r9
   14002c07c:	call   0x140002a30
   14002c081:	mov    BYTE PTR [rbx+0x70],0x0
   14002c085:	mov    rax,rbx
   14002c088:	mov    rbx,QWORD PTR [rsp+0x48]
   14002c08d:	add    rsp,0x30
   14002c091:	pop    rdi
   14002c092:	ret    
   14002c093:	int3   
   14002c094:	int3   
   14002c095:	int3   
   14002c096:	int3   
   14002c097:	int3   
   14002c098:	int3   
   14002c099:	int3   
   14002c09a:	int3   
   14002c09b:	int3   
   14002c09c:	int3   
   14002c09d:	int3   
   14002c09e:	int3   
   14002c09f:	int3   
   14002c0a0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c0a5:	push   rdi
   14002c0a6:	sub    rsp,0x20
   14002c0aa:	mov    ebx,edx
   14002c0ac:	mov    rdi,rcx
   14002c0af:	call   0x14002b450
   14002c0b4:	test   bl,0x1
   14002c0b7:	je     0x14002c0c1
   14002c0b9:	mov    rcx,rdi
   14002c0bc:	call   0x1400062d4
   14002c0c1:	mov    rax,rdi
   14002c0c4:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c0c9:	add    rsp,0x20
   14002c0cd:	pop    rdi
   14002c0ce:	ret    
   14002c0cf:	int3   
   14002c0d0:	mov    QWORD PTR [rsp+0x18],rbx
   14002c0d5:	push   rdi
   14002c0d6:	sub    rsp,0x20
   14002c0da:	xor    edi,edi
   14002c0dc:	mov    rbx,rcx
   14002c0df:	cmp    DWORD PTR [rcx+0x8],edi
   14002c0e2:	jle    0x14002c115
   14002c0e4:	mov    QWORD PTR [rsp+0x30],rbp
   14002c0e9:	mov    QWORD PTR [rsp+0x38],rsi
   14002c0ee:	xchg   ax,ax
   14002c0f0:	lea    rdx,[rbx+0x38]
   14002c0f4:	lea    rcx,[rbx+0x10]
   14002c0f8:	or     r9,0xffffffffffffffff
   14002c0fc:	xor    r8d,r8d
   14002c0ff:	call   0x14002a3e0
   14002c104:	inc    edi
   14002c106:	cmp    edi,DWORD PTR [rbx+0x8]
   14002c109:	jl     0x14002c0f0
   14002c10b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c110:	mov    rbp,QWORD PTR [rsp+0x30]
   14002c115:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c11a:	add    rsp,0x20
   14002c11e:	pop    rdi
   14002c11f:	ret    
   14002c120:	mov    QWORD PTR [rsp+0x8],rbx
   14002c125:	mov    QWORD PTR [rsp+0x10],rsi
   14002c12a:	push   rdi
   14002c12b:	sub    rsp,0x20
   14002c12f:	cmp    QWORD PTR [rcx+0x58],0x10
   14002c134:	mov    rsi,rdx
   14002c137:	mov    rbx,rcx
   14002c13a:	jb     0x14002c142
   14002c13c:	mov    rdx,QWORD PTR [rcx+0x40]
   14002c140:	jmp    0x14002c146
   14002c142:	lea    rdx,[rcx+0x40]
   14002c146:	or     rcx,0xffffffffffffffff
   14002c14a:	xor    eax,eax
   14002c14c:	mov    rdi,rdx
   14002c14f:	repnz scas al,BYTE PTR es:[rdi]
   14002c151:	not    rcx
   14002c154:	lea    r8,[rcx-0x1]
   14002c158:	lea    rcx,[rsi+0x38]
   14002c15c:	call   0x140002a30
   14002c161:	mov    rdx,QWORD PTR [rbx+0x10]
   14002c165:	mov    QWORD PTR [rsi+0x10],rdx
   14002c169:	mov    rax,QWORD PTR [rbx+0x8]
   14002c16d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c172:	mov    QWORD PTR [rsi+0x8],rax
   14002c176:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c17b:	add    rsp,0x20
   14002c17f:	pop    rdi
   14002c180:	ret    
   14002c181:	int3   
   14002c182:	int3   
   14002c183:	int3   
   14002c184:	int3   
   14002c185:	int3   
   14002c186:	int3   
   14002c187:	int3   
   14002c188:	int3   
   14002c189:	int3   
   14002c18a:	int3   
   14002c18b:	int3   
   14002c18c:	int3   
   14002c18d:	int3   
   14002c18e:	int3   
   14002c18f:	int3   
   14002c190:	mov    QWORD PTR [rsp+0x8],rcx
   14002c195:	push   rdi
   14002c196:	sub    rsp,0x30
   14002c19a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c1a3:	mov    QWORD PTR [rsp+0x48],rbx
   14002c1a8:	mov    r9,rdx
   14002c1ab:	mov    rbx,rcx
   14002c1ae:	mov    edx,0x1
   14002c1b3:	call   0x14002b4e0
   14002c1b8:	nop
   14002c1b9:	lea    rax,[rip+0x10598]        # 0x14003c758
   14002c1c0:	mov    QWORD PTR [rcx],rax
   14002c1c3:	lea    rcx,[rcx+0x70]
   14002c1c7:	call   0x14002b5b0
   14002c1cc:	nop
   14002c1cd:	xor    eax,eax
   14002c1cf:	mov    QWORD PTR [rbx+0x30],rax
   14002c1d3:	mov    QWORD PTR [rbx+0x28],rax
   14002c1d7:	or     rcx,0xffffffffffffffff
   14002c1db:	mov    rdi,r9
   14002c1de:	repnz scas al,BYTE PTR es:[rdi]
   14002c1e0:	not    rcx
   14002c1e3:	lea    r8,[rcx-0x1]
   14002c1e7:	lea    rcx,[rbx+0x38]
   14002c1eb:	mov    rdx,r9
   14002c1ee:	call   0x140002a30
   14002c1f3:	nop
   14002c1f4:	mov    rax,rbx
   14002c1f7:	mov    rbx,QWORD PTR [rsp+0x48]
   14002c1fc:	add    rsp,0x30
   14002c200:	pop    rdi
   14002c201:	ret    
   14002c202:	int3   
   14002c203:	int3   
   14002c204:	int3   
   14002c205:	int3   
   14002c206:	int3   
   14002c207:	int3   
   14002c208:	int3   
   14002c209:	int3   
   14002c20a:	int3   
   14002c20b:	int3   
   14002c20c:	int3   
   14002c20d:	int3   
   14002c20e:	int3   
   14002c20f:	int3   
   14002c210:	mov    QWORD PTR [rsp+0x8],rcx
   14002c215:	push   rdi
   14002c216:	sub    rsp,0x30
   14002c21a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c223:	mov    QWORD PTR [rsp+0x48],rbx
   14002c228:	mov    rbx,rcx
   14002c22b:	xor    edx,edx
   14002c22d:	call   0x14002b4e0
   14002c232:	nop
   14002c233:	lea    rax,[rip+0xfe2e]        # 0x14003c068
   14002c23a:	mov    QWORD PTR [rcx],rax
   14002c23d:	lea    rcx,[rcx+0x78]
   14002c241:	mov    QWORD PTR [rcx+0x20],0xf
   14002c249:	xor    edi,edi
   14002c24b:	mov    QWORD PTR [rcx+0x18],rdi
   14002c24f:	mov    BYTE PTR [rcx+0x8],dil
   14002c253:	mov    DWORD PTR [rbx+0xa8],0xffffffff
   14002c25d:	mov    DWORD PTR [rbx+0xa4],0xffffffff
   14002c267:	mov    DWORD PTR [rbx+0xa0],0x4
   14002c271:	mov    BYTE PTR [rbx+0xac],dil
   14002c278:	mov    BYTE PTR [rbx+0x70],dil
   14002c27c:	mov    DWORD PTR [rbx+0x74],edi
   14002c27f:	xor    r8d,r8d
   14002c282:	lea    rdx,[rip+0x11516]        # 0x14003d79f
   14002c289:	call   0x140002a30
   14002c28e:	mov    DWORD PTR [rbx+0xa8],edi
   14002c294:	mov    DWORD PTR [rbx+0xa4],edi
   14002c29a:	mov    rax,rbx
   14002c29d:	mov    rbx,QWORD PTR [rsp+0x48]
   14002c2a2:	add    rsp,0x30
   14002c2a6:	pop    rdi
   14002c2a7:	ret    
   14002c2a8:	int3   
   14002c2a9:	int3   
   14002c2aa:	int3   
   14002c2ab:	int3   
   14002c2ac:	int3   
   14002c2ad:	int3   
   14002c2ae:	int3   
   14002c2af:	int3   
   14002c2b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c2b5:	push   rdi
   14002c2b6:	sub    rsp,0x20
   14002c2ba:	mov    rdi,rdx
   14002c2bd:	mov    rbx,rcx
   14002c2c0:	call   0x14002c120
   14002c2c5:	movzx  r11d,BYTE PTR [rbx+0x70]
   14002c2ca:	lea    rdx,[rbx+0x78]
   14002c2ce:	lea    rcx,[rdi+0x78]
   14002c2d2:	mov    BYTE PTR [rdi+0x70],r11b
   14002c2d6:	mov    eax,DWORD PTR [rbx+0x74]
   14002c2d9:	or     r9,0xffffffffffffffff
   14002c2dd:	xor    r8d,r8d
   14002c2e0:	mov    DWORD PTR [rdi+0x74],eax
   14002c2e3:	call   0x140002630
   14002c2e8:	mov    r11d,DWORD PTR [rbx+0xa0]
   14002c2ef:	mov    DWORD PTR [rdi+0xa0],r11d
   14002c2f6:	mov    rax,QWORD PTR [rbx+0xa4]
   14002c2fd:	mov    QWORD PTR [rdi+0xa4],rax
   14002c304:	movzx  eax,BYTE PTR [rbx+0xac]
   14002c30b:	mov    BYTE PTR [rdi+0xac],al
   14002c311:	mov    rbx,QWORD PTR [rbx+0x28]
   14002c315:	test   rbx,rbx
   14002c318:	je     0x14002c33d
   14002c31a:	nop    WORD PTR [rax+rax*1+0x0]
   14002c320:	mov    rax,QWORD PTR [rbx]
   14002c323:	mov    rcx,rbx
   14002c326:	call   QWORD PTR [rax+0x78]
   14002c329:	mov    rcx,rdi
   14002c32c:	mov    rdx,rax
   14002c32f:	call   0x14002ab90
   14002c334:	mov    rbx,QWORD PTR [rbx+0x68]
   14002c338:	test   rbx,rbx
   14002c33b:	jne    0x14002c320
   14002c33d:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c342:	add    rsp,0x20
   14002c346:	pop    rdi
   14002c347:	ret    
   14002c348:	int3   
   14002c349:	int3   
   14002c34a:	int3   
   14002c34b:	int3   
   14002c34c:	int3   
   14002c34d:	int3   
   14002c34e:	int3   
   14002c34f:	int3   
   14002c350:	rex push rdi
   14002c352:	sub    rsp,0x30
   14002c356:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c35f:	mov    QWORD PTR [rsp+0x40],rbx
   14002c364:	mov    rdi,rcx
   14002c367:	mov    ecx,0xb0
   14002c36c:	call   0x140006290
   14002c371:	mov    QWORD PTR [rsp+0x48],rax
   14002c376:	test   rax,rax
   14002c379:	je     0x14002c388
   14002c37b:	mov    rcx,rax
   14002c37e:	call   0x14002c210
   14002c383:	mov    rbx,rax
   14002c386:	jmp    0x14002c38a
   14002c388:	xor    ebx,ebx
   14002c38a:	test   rbx,rbx
   14002c38d:	jne    0x14002c393
   14002c38f:	xor    eax,eax
   14002c391:	jmp    0x14002c3a1
   14002c393:	mov    rdx,rbx
   14002c396:	mov    rcx,rdi
   14002c399:	call   0x14002c2b0
   14002c39e:	mov    rax,rbx
   14002c3a1:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c3a6:	add    rsp,0x30
   14002c3aa:	pop    rdi
   14002c3ab:	ret    
   14002c3ac:	int3   
   14002c3ad:	int3   
   14002c3ae:	int3   
   14002c3af:	int3   
   14002c3b0:	rex push rbx
   14002c3b2:	push   rsi
   14002c3b3:	push   rdi
   14002c3b4:	sub    rsp,0x90
   14002c3bb:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   14002c3c4:	mov    rax,QWORD PTR [rip+0x1c9f5]        # 0x140048dc0
   14002c3cb:	xor    rax,rsp
   14002c3ce:	mov    QWORD PTR [rsp+0x80],rax
   14002c3d6:	mov    rdi,r9
   14002c3d9:	mov    rsi,rdx
   14002c3dc:	mov    rbx,rcx
   14002c3df:	mov    QWORD PTR [rsp+0x78],0xf
   14002c3e8:	mov    QWORD PTR [rsp+0x70],0x0
   14002c3f1:	mov    BYTE PTR [rsp+0x60],0x0
   14002c3f6:	mov    QWORD PTR [rsp+0x50],0xf
   14002c3ff:	mov    QWORD PTR [rsp+0x48],0x0
   14002c408:	mov    BYTE PTR [rsp+0x38],0x0
   14002c40d:	add    rcx,0x20
   14002c411:	lea    rdx,[rsp+0x58]
   14002c416:	call   0x14002b9b0
   14002c41b:	lea    rdx,[rsp+0x30]
   14002c420:	lea    rcx,[rbx+0x48]
   14002c424:	call   0x14002b9b0
   14002c429:	mov    BYTE PTR [rsp+0x20],0x22
   14002c42e:	mov    r9d,0x1
   14002c434:	xor    r8d,r8d
   14002c437:	lea    rdx,[rsp+0x20]
   14002c43c:	lea    rcx,[rbx+0x48]
   14002c440:	call   0x140005360
   14002c445:	cmp    rax,0xffffffffffffffff
   14002c449:	jne    0x14002c4e5
   14002c44f:	test   rsi,rsi
   14002c452:	je     0x14002c485
   14002c454:	lea    r9,[rsp+0x38]
   14002c459:	cmp    QWORD PTR [rsp+0x50],0x10
   14002c45f:	cmovae r9,QWORD PTR [rsp+0x38]
   14002c465:	lea    r8,[rsp+0x60]
   14002c46a:	cmp    QWORD PTR [rsp+0x78],0x10
   14002c470:	cmovae r8,QWORD PTR [rsp+0x60]
   14002c476:	lea    rdx,[rip+0x105bb]        # 0x14003ca38
   14002c47d:	mov    rcx,rsi
   14002c480:	call   0x14003277c
   14002c485:	test   rdi,rdi
   14002c488:	je     0x14002c573
   14002c48e:	or     r9,0xffffffffffffffff
   14002c492:	xor    r8d,r8d
   14002c495:	lea    rdx,[rsp+0x58]
   14002c49a:	mov    rcx,rdi
   14002c49d:	call   0x14002a3e0
   14002c4a2:	mov    r8d,0x2
   14002c4a8:	lea    rdx,[rip+0x10585]        # 0x14003ca34
   14002c4af:	mov    rcx,rdi
   14002c4b2:	call   0x14002a6a0
   14002c4b7:	or     r9,0xffffffffffffffff
   14002c4bb:	xor    r8d,r8d
   14002c4be:	lea    rdx,[rsp+0x30]
   14002c4c3:	mov    rcx,rdi
   14002c4c6:	call   0x14002a3e0
   14002c4cb:	mov    r8d,0x1
   14002c4d1:	lea    rdx,[rip+0x10558]        # 0x14003ca30
   14002c4d8:	mov    rcx,rdi
   14002c4db:	call   0x14002a6a0
   14002c4e0:	jmp    0x14002c573
   14002c4e5:	test   rsi,rsi
   14002c4e8:	je     0x14002c51b
   14002c4ea:	lea    r9,[rsp+0x38]
   14002c4ef:	cmp    QWORD PTR [rsp+0x50],0x10
   14002c4f5:	cmovae r9,QWORD PTR [rsp+0x38]
   14002c4fb:	lea    r8,[rsp+0x60]
   14002c500:	cmp    QWORD PTR [rsp+0x78],0x10
   14002c506:	cmovae r8,QWORD PTR [rsp+0x60]
   14002c50c:	lea    rdx,[rip+0x10515]        # 0x14003ca28
   14002c513:	mov    rcx,rsi
   14002c516:	call   0x14003277c
   14002c51b:	test   rdi,rdi
   14002c51e:	je     0x14002c573
   14002c520:	or     r9,0xffffffffffffffff
   14002c524:	xor    r8d,r8d
   14002c527:	lea    rdx,[rsp+0x58]
   14002c52c:	mov    rcx,rdi
   14002c52f:	call   0x14002a3e0
   14002c534:	mov    r8d,0x2
   14002c53a:	lea    rdx,[rip+0x104df]        # 0x14003ca20
   14002c541:	mov    rcx,rdi
   14002c544:	call   0x14002a6a0
   14002c549:	or     r9,0xffffffffffffffff
   14002c54d:	xor    r8d,r8d
   14002c550:	lea    rdx,[rsp+0x30]
   14002c555:	mov    rcx,rdi
   14002c558:	call   0x14002a3e0
   14002c55d:	mov    r8d,0x1
   14002c563:	lea    rdx,[rip+0xe2c6]        # 0x14003a830
   14002c56a:	mov    rcx,rdi
   14002c56d:	call   0x14002a6a0
   14002c572:	nop
   14002c573:	cmp    QWORD PTR [rsp+0x50],0x10
   14002c579:	jb     0x14002c585
   14002c57b:	mov    rcx,QWORD PTR [rsp+0x38]
   14002c580:	call   0x1400062d4
   14002c585:	mov    QWORD PTR [rsp+0x50],0xf
   14002c58e:	mov    QWORD PTR [rsp+0x48],0x0
   14002c597:	mov    BYTE PTR [rsp+0x38],0x0
   14002c59c:	cmp    QWORD PTR [rsp+0x78],0x10
   14002c5a2:	jb     0x14002c5ae
   14002c5a4:	mov    rcx,QWORD PTR [rsp+0x60]
   14002c5a9:	call   0x1400062d4
   14002c5ae:	mov    rcx,QWORD PTR [rsp+0x80]
   14002c5b6:	xor    rcx,rsp
   14002c5b9:	call   0x1400144f0
   14002c5be:	add    rsp,0x90
   14002c5c5:	pop    rdi
   14002c5c6:	pop    rsi
   14002c5c7:	pop    rbx
   14002c5c8:	ret    
   14002c5c9:	int3   
   14002c5ca:	int3   
   14002c5cb:	int3   
   14002c5cc:	int3   
   14002c5cd:	int3   
   14002c5ce:	int3   
   14002c5cf:	int3   
   14002c5d0:	mov    QWORD PTR [rsp+0x18],rbx
   14002c5d5:	push   rdi
   14002c5d6:	sub    rsp,0x70
   14002c5da:	mov    rax,QWORD PTR [rip+0x1c7df]        # 0x140048dc0
   14002c5e1:	xor    rax,rsp
   14002c5e4:	mov    QWORD PTR [rsp+0x60],rax
   14002c5e9:	mov    rbx,rcx
   14002c5ec:	mov    r9d,edx
   14002c5ef:	lea    r8,[rip+0xc89a]        # 0x140038e90
   14002c5f6:	lea    rcx,[rsp+0x20]
   14002c5fb:	mov    edx,0x40
   14002c600:	call   0x14002ab60
   14002c605:	or     rcx,0xffffffffffffffff
   14002c609:	xor    eax,eax
   14002c60b:	lea    rdi,[rsp+0x20]
   14002c610:	lea    rdx,[rsp+0x20]
   14002c615:	repnz scas al,BYTE PTR es:[rdi]
   14002c617:	not    rcx
   14002c61a:	lea    r8,[rcx-0x1]
   14002c61e:	lea    rcx,[rbx+0x48]
   14002c622:	call   0x140002a30
   14002c627:	mov    rcx,QWORD PTR [rsp+0x60]
   14002c62c:	xor    rcx,rsp
   14002c62f:	call   0x1400144f0
   14002c634:	mov    rbx,QWORD PTR [rsp+0x90]
   14002c63c:	add    rsp,0x70
   14002c640:	pop    rdi
   14002c641:	ret    
   14002c642:	int3   
   14002c643:	int3   
   14002c644:	int3   
   14002c645:	int3   
   14002c646:	int3   
   14002c647:	int3   
   14002c648:	int3   
   14002c649:	int3   
   14002c64a:	int3   
   14002c64b:	int3   
   14002c64c:	int3   
   14002c64d:	int3   
   14002c64e:	int3   
   14002c64f:	int3   
   14002c650:	mov    QWORD PTR [rsp+0x8],rbx
   14002c655:	push   rdi
   14002c656:	sub    rsp,0x20
   14002c65a:	mov    rdi,rcx
   14002c65d:	mov    ecx,0x70
   14002c662:	call   0x140006290
   14002c667:	mov    rbx,rax
   14002c66a:	test   rax,rax
   14002c66d:	je     0x14002c69f
   14002c66f:	mov    edx,0x2
   14002c674:	mov    rcx,rax
   14002c677:	call   0x14002b4e0
   14002c67c:	lea    rcx,[rip+0xff75]        # 0x14003c5f8
   14002c683:	mov    rdx,rbx
   14002c686:	mov    QWORD PTR [rbx],rcx
   14002c689:	mov    rcx,rdi
   14002c68c:	call   0x14002ca40
   14002c691:	mov    rax,rbx
   14002c694:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c699:	add    rsp,0x20
   14002c69d:	pop    rdi
   14002c69e:	ret    
   14002c69f:	xor    eax,eax
   14002c6a1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c6a6:	add    rsp,0x20
   14002c6aa:	pop    rdi
   14002c6ab:	ret    
   14002c6ac:	int3   
   14002c6ad:	int3   
   14002c6ae:	int3   
   14002c6af:	int3   
   14002c6b0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c6b5:	push   rdi
   14002c6b6:	sub    rsp,0x20
   14002c6ba:	mov    rdi,rdx
   14002c6bd:	mov    rbx,rcx
   14002c6c0:	call   0x14002c120
   14002c6c5:	movzx  r11d,BYTE PTR [rbx+0x70]
   14002c6ca:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c6cf:	mov    BYTE PTR [rdi+0x70],r11b
   14002c6d3:	add    rsp,0x20
   14002c6d7:	pop    rdi
   14002c6d8:	ret    
   14002c6d9:	int3   
   14002c6da:	int3   
   14002c6db:	int3   
   14002c6dc:	int3   
   14002c6dd:	int3   
   14002c6de:	int3   
   14002c6df:	int3   
   14002c6e0:	rex push rdi
   14002c6e2:	sub    rsp,0x30
   14002c6e6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002c6ef:	mov    QWORD PTR [rsp+0x40],rbx
   14002c6f4:	mov    rdi,rcx
   14002c6f7:	mov    ecx,0x78
   14002c6fc:	call   0x140006290
   14002c701:	mov    rbx,rax
   14002c704:	mov    QWORD PTR [rsp+0x48],rax
   14002c709:	test   rax,rax
   14002c70c:	je     0x14002c73f
   14002c70e:	mov    edx,0x4
   14002c713:	mov    rcx,rax
   14002c716:	call   0x14002b4e0
   14002c71b:	nop
   14002c71c:	lea    rax,[rip+0xf855]        # 0x14003bf78
   14002c723:	mov    QWORD PTR [rcx],rax
   14002c726:	lea    rcx,[rcx+0x38]
   14002c72a:	xor    r8d,r8d
   14002c72d:	lea    rdx,[rip+0x1106b]        # 0x14003d79f
   14002c734:	call   0x140002a30
   14002c739:	mov    BYTE PTR [rbx+0x70],0x0
   14002c73d:	jmp    0x14002c741
   14002c73f:	xor    ebx,ebx
   14002c741:	test   rbx,rbx
   14002c744:	jne    0x14002c74a
   14002c746:	xor    eax,eax
   14002c748:	jmp    0x14002c758
   14002c74a:	mov    rdx,rbx
   14002c74d:	mov    rcx,rdi
   14002c750:	call   0x14002c6b0
   14002c755:	mov    rax,rbx
   14002c758:	mov    rbx,QWORD PTR [rsp+0x40]
   14002c75d:	add    rsp,0x30
   14002c761:	pop    rdi
   14002c762:	ret    
   14002c763:	int3   
   14002c764:	int3   
   14002c765:	int3   
   14002c766:	int3   
   14002c767:	int3   
   14002c768:	int3   
   14002c769:	int3   
   14002c76a:	int3   
   14002c76b:	int3   
   14002c76c:	int3   
   14002c76d:	int3   
   14002c76e:	int3   
   14002c76f:	int3   
   14002c770:	mov    QWORD PTR [rsp+0x8],rbx
   14002c775:	mov    QWORD PTR [rsp+0x10],rsi
   14002c77a:	push   rdi
   14002c77b:	sub    rsp,0x20
   14002c77f:	mov    rsi,r9
   14002c782:	mov    rdi,rdx
   14002c785:	mov    rbx,rcx
   14002c788:	test   rdx,rdx
   14002c78b:	je     0x14002c79c
   14002c78d:	lea    rdx,[rip+0x1034c]        # 0x14003cae0
   14002c794:	mov    rcx,rdi
   14002c797:	call   0x14003277c
   14002c79c:	test   rsi,rsi
   14002c79f:	je     0x14002c7b6
   14002c7a1:	lea    rdx,[rip+0x10338]        # 0x14003cae0
   14002c7a8:	mov    r8d,0x6
   14002c7ae:	mov    rcx,rsi
   14002c7b1:	call   0x14002a6a0
   14002c7b6:	cmp    QWORD PTR [rbx+0x88],0x0
   14002c7be:	je     0x14002c82a
   14002c7c0:	test   rdi,rdi
   14002c7c3:	je     0x14002c7e8
   14002c7c5:	cmp    QWORD PTR [rbx+0x90],0x10
   14002c7cd:	jb     0x14002c7d5
   14002c7cf:	mov    r8,QWORD PTR [rbx+0x78]
   14002c7d3:	jmp    0x14002c7d9
   14002c7d5:	lea    r8,[rbx+0x78]
   14002c7d9:	lea    rdx,[rip+0x102f0]        # 0x14003cad0
   14002c7e0:	mov    rcx,rdi
   14002c7e3:	call   0x14003277c
   14002c7e8:	test   rsi,rsi
   14002c7eb:	je     0x14002c82a
   14002c7ed:	lea    rdx,[rip+0x102cc]        # 0x14003cac0
   14002c7f4:	mov    r8d,0x9
   14002c7fa:	mov    rcx,rsi
   14002c7fd:	call   0x14002a6a0
   14002c802:	lea    rdx,[rbx+0x70]
   14002c806:	or     r9,0xffffffffffffffff
   14002c80a:	xor    r8d,r8d
   14002c80d:	mov    rcx,rsi
   14002c810:	call   0x14002a3e0
   14002c815:	lea    rdx,[rip+0x1029c]        # 0x14003cab8
   14002c81c:	mov    r8d,0x2
   14002c822:	mov    rcx,rsi
   14002c825:	call   0x14002a6a0
   14002c82a:	cmp    QWORD PTR [rbx+0xb0],0x0
   14002c832:	je     0x14002c8a7
   14002c834:	test   rdi,rdi
   14002c837:	je     0x14002c862
   14002c839:	cmp    QWORD PTR [rbx+0xb8],0x10
   14002c841:	jb     0x14002c84c
   14002c843:	mov    r8,QWORD PTR [rbx+0xa0]
   14002c84a:	jmp    0x14002c853
   14002c84c:	lea    r8,[rbx+0xa0]
   14002c853:	lea    rdx,[rip+0x1024e]        # 0x14003caa8
   14002c85a:	mov    rcx,rdi
   14002c85d:	call   0x14003277c
   14002c862:	test   rsi,rsi
   14002c865:	je     0x14002c8a7
   14002c867:	lea    rdx,[rip+0x1022a]        # 0x14003ca98
   14002c86e:	mov    r8d,0xa
   14002c874:	mov    rcx,rsi
   14002c877:	call   0x14002a6a0
   14002c87c:	lea    rdx,[rbx+0x98]
   14002c883:	or     r9,0xffffffffffffffff
   14002c887:	xor    r8d,r8d
   14002c88a:	mov    rcx,rsi
   14002c88d:	call   0x14002a3e0
   14002c892:	lea    rdx,[rip+0x1021f]        # 0x14003cab8
   14002c899:	mov    r8d,0x2
   14002c89f:	mov    rcx,rsi
   14002c8a2:	call   0x14002a6a0
   14002c8a7:	cmp    QWORD PTR [rbx+0xd8],0x0
   14002c8af:	je     0x14002c924
   14002c8b1:	test   rdi,rdi
   14002c8b4:	je     0x14002c8df
   14002c8b6:	cmp    QWORD PTR [rbx+0xe0],0x10
   14002c8be:	jb     0x14002c8c9
   14002c8c0:	mov    r8,QWORD PTR [rbx+0xc8]
   14002c8c7:	jmp    0x14002c8d0
   14002c8c9:	lea    r8,[rbx+0xc8]
   14002c8d0:	lea    rdx,[rip+0x101a9]        # 0x14003ca80
   14002c8d7:	mov    rcx,rdi
   14002c8da:	call   0x14003277c
   14002c8df:	test   rsi,rsi
   14002c8e2:	je     0x14002c924
   14002c8e4:	lea    rdx,[rip+0x10185]        # 0x14003ca70
   14002c8eb:	mov    r8d,0xc
   14002c8f1:	mov    rcx,rsi
   14002c8f4:	call   0x14002a6a0
   14002c8f9:	lea    rdx,[rbx+0xc0]
   14002c900:	or     r9,0xffffffffffffffff
   14002c904:	xor    r8d,r8d
   14002c907:	mov    rcx,rsi
   14002c90a:	call   0x14002a3e0
   14002c90f:	lea    rdx,[rip+0x101a2]        # 0x14003cab8
   14002c916:	mov    r8d,0x2
   14002c91c:	mov    rcx,rsi
   14002c91f:	call   0x14002a6a0
   14002c924:	test   rdi,rdi
   14002c927:	je     0x14002c938
   14002c929:	lea    rdx,[rip+0x10138]        # 0x14003ca68
   14002c930:	mov    rcx,rdi
   14002c933:	call   0x14003277c
   14002c938:	test   rsi,rsi
   14002c93b:	je     0x14002c952
   14002c93d:	lea    rdx,[rip+0x10124]        # 0x14003ca68
   14002c944:	mov    r8d,0x2
   14002c94a:	mov    rcx,rsi
   14002c94d:	call   0x14002a6a0
   14002c952:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c957:	mov    rsi,QWORD PTR [rsp+0x38]
   14002c95c:	add    rsp,0x20
   14002c960:	pop    rdi
   14002c961:	ret    
   14002c962:	int3   
   14002c963:	int3   
   14002c964:	int3   
   14002c965:	int3   
   14002c966:	int3   
   14002c967:	int3   
   14002c968:	int3   
   14002c969:	int3   
   14002c96a:	int3   
   14002c96b:	int3   
   14002c96c:	int3   
   14002c96d:	int3   
   14002c96e:	int3   
   14002c96f:	int3   
   14002c970:	mov    QWORD PTR [rsp+0x8],rbx
   14002c975:	push   rdi
   14002c976:	sub    rsp,0x20
   14002c97a:	mov    rdi,rdx
   14002c97d:	mov    rbx,rcx
   14002c980:	call   0x14002c120
   14002c985:	lea    rdx,[rbx+0x70]
   14002c989:	lea    rcx,[rdi+0x70]
   14002c98d:	or     r9,0xffffffffffffffff
   14002c991:	xor    r8d,r8d
   14002c994:	call   0x140002630
   14002c999:	lea    rdx,[rbx+0x98]
   14002c9a0:	lea    rcx,[rdi+0x98]
   14002c9a7:	or     r9,0xffffffffffffffff
   14002c9ab:	xor    r8d,r8d
   14002c9ae:	call   0x140002630
   14002c9b3:	lea    rdx,[rbx+0xc0]
   14002c9ba:	lea    rcx,[rdi+0xc0]
   14002c9c1:	or     r9,0xffffffffffffffff
   14002c9c5:	xor    r8d,r8d
   14002c9c8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002c9cd:	add    rsp,0x20
   14002c9d1:	pop    rdi
   14002c9d2:	jmp    0x140002630
   14002c9d7:	int3   
   14002c9d8:	int3   
   14002c9d9:	int3   
   14002c9da:	int3   
   14002c9db:	int3   
   14002c9dc:	int3   
   14002c9dd:	int3   
   14002c9de:	int3   
   14002c9df:	int3   
   14002c9e0:	mov    QWORD PTR [rsp+0x8],rbx
   14002c9e5:	push   rdi
   14002c9e6:	sub    rsp,0x20
   14002c9ea:	mov    rdi,rcx
   14002c9ed:	mov    ecx,0xe8
   14002c9f2:	call   0x140006290
   14002c9f7:	test   rax,rax
   14002c9fa:	je     0x14002ca25
   14002c9fc:	mov    rcx,rax
   14002c9ff:	call   0x14002a1b0
   14002ca04:	mov    rbx,rax
   14002ca07:	test   rax,rax
   14002ca0a:	je     0x14002ca25
   14002ca0c:	mov    rdx,rax
   14002ca0f:	mov    rcx,rdi
   14002ca12:	call   0x14002c970
   14002ca17:	mov    rax,rbx
   14002ca1a:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ca1f:	add    rsp,0x20
   14002ca23:	pop    rdi
   14002ca24:	ret    
   14002ca25:	xor    eax,eax
   14002ca27:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ca2c:	add    rsp,0x20
   14002ca30:	pop    rdi
   14002ca31:	ret    
   14002ca32:	int3   
   14002ca33:	int3   
   14002ca34:	int3   
   14002ca35:	int3   
   14002ca36:	int3   
   14002ca37:	int3   
   14002ca38:	int3   
   14002ca39:	int3   
   14002ca3a:	int3   
   14002ca3b:	int3   
   14002ca3c:	int3   
   14002ca3d:	int3   
   14002ca3e:	int3   
   14002ca3f:	int3   
   14002ca40:	jmp    0x14002c120
   14002ca45:	int3   
   14002ca46:	int3   
   14002ca47:	int3   
   14002ca48:	int3   
   14002ca49:	int3   
   14002ca4a:	int3   
   14002ca4b:	int3   
   14002ca4c:	int3   
   14002ca4d:	int3   
   14002ca4e:	int3   
   14002ca4f:	int3   
   14002ca50:	mov    QWORD PTR [rsp+0x8],rbx
   14002ca55:	push   rdi
   14002ca56:	sub    rsp,0x20
   14002ca5a:	mov    rdi,rcx
   14002ca5d:	mov    ecx,0x70
   14002ca62:	call   0x140006290
   14002ca67:	mov    rbx,rax
   14002ca6a:	test   rax,rax
   14002ca6d:	je     0x14002ca9f
   14002ca6f:	mov    edx,0x3
   14002ca74:	mov    rcx,rax
   14002ca77:	call   0x14002b4e0
   14002ca7c:	lea    rcx,[rip+0xfc15]        # 0x14003c698
   14002ca83:	mov    rdx,rbx
   14002ca86:	mov    QWORD PTR [rbx],rcx
   14002ca89:	mov    rcx,rdi
   14002ca8c:	call   0x14002ca40
   14002ca91:	mov    rax,rbx
   14002ca94:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ca99:	add    rsp,0x20
   14002ca9d:	pop    rdi
   14002ca9e:	ret    
   14002ca9f:	xor    eax,eax
   14002caa1:	mov    rbx,QWORD PTR [rsp+0x30]
   14002caa6:	add    rsp,0x20
   14002caaa:	pop    rdi
   14002caab:	ret    
   14002caac:	int3   
   14002caad:	int3   
   14002caae:	int3   
   14002caaf:	int3   
   14002cab0:	mov    QWORD PTR [rsp+0x10],rsi
   14002cab5:	push   rdi
   14002cab6:	sub    rsp,0x20
   14002caba:	mov    rdi,rdx
   14002cabd:	mov    rsi,rcx
   14002cac0:	call   0x14002b2d0
   14002cac5:	test   rax,rax
   14002cac8:	jne    0x14002cb5a
   14002cace:	mov    ecx,0x80
   14002cad3:	mov    QWORD PTR [rsp+0x30],rbx
   14002cad8:	call   0x140006290
   14002cadd:	mov    rbx,rax
   14002cae0:	test   rax,rax
   14002cae3:	je     0x14002cb2f
   14002cae5:	mov    DWORD PTR [rax+0xc],0xffffffff
   14002caec:	mov    DWORD PTR [rax+0x8],0xffffffff
   14002caf3:	xor    eax,eax
   14002caf5:	mov    QWORD PTR [rbx+0x10],rax
   14002caf9:	lea    rcx,[rip+0xfa10]        # 0x14003c510
   14002cb00:	mov    QWORD PTR [rbx],rcx
   14002cb03:	mov    QWORD PTR [rbx+0x40],0xf
   14002cb0b:	mov    QWORD PTR [rbx+0x38],rax
   14002cb0f:	mov    BYTE PTR [rbx+0x28],al
   14002cb12:	mov    QWORD PTR [rbx+0x68],0xf
   14002cb1a:	mov    QWORD PTR [rbx+0x60],rax
   14002cb1e:	mov    BYTE PTR [rbx+0x50],al
   14002cb21:	mov    QWORD PTR [rbx+0x18],rax
   14002cb25:	mov    QWORD PTR [rbx+0x78],rax
   14002cb29:	mov    QWORD PTR [rbx+0x70],rax
   14002cb2d:	jmp    0x14002cb34
   14002cb2f:	xor    eax,eax
   14002cb31:	mov    rbx,rax
   14002cb34:	mov    rdx,rbx
   14002cb37:	mov    rcx,rsi
   14002cb3a:	call   0x14002aac0
   14002cb3f:	lea    rcx,[rbx+0x20]
   14002cb43:	or     r9,0xffffffffffffffff
   14002cb47:	xor    r8d,r8d
   14002cb4a:	mov    rdx,rdi
   14002cb4d:	call   0x140002630
   14002cb52:	mov    rax,rbx
   14002cb55:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cb5a:	mov    rsi,QWORD PTR [rsp+0x38]
   14002cb5f:	add    rsp,0x20
   14002cb63:	pop    rdi
   14002cb64:	ret    
   14002cb65:	int3   
   14002cb66:	int3   
   14002cb67:	int3   
   14002cb68:	int3   
   14002cb69:	int3   
   14002cb6a:	int3   
   14002cb6b:	int3   
   14002cb6c:	int3   
   14002cb6d:	int3   
   14002cb6e:	int3   
   14002cb6f:	int3   
   14002cb70:	mov    QWORD PTR [rsp+0x10],rsi
   14002cb75:	push   rdi
   14002cb76:	sub    rsp,0x20
   14002cb7a:	mov    rsi,rdx
   14002cb7d:	mov    rdi,rcx
   14002cb80:	call   0x14002b1d0
   14002cb85:	test   rax,rax
   14002cb88:	jne    0x14002cc25
   14002cb8e:	mov    ecx,0x80
   14002cb93:	mov    QWORD PTR [rsp+0x30],rbx
   14002cb98:	call   0x140006290
   14002cb9d:	mov    rbx,rax
   14002cba0:	test   rax,rax
   14002cba3:	je     0x14002cbef
   14002cba5:	mov    DWORD PTR [rax+0xc],0xffffffff
   14002cbac:	mov    DWORD PTR [rax+0x8],0xffffffff
   14002cbb3:	xor    eax,eax
   14002cbb5:	mov    QWORD PTR [rbx+0x10],rax
   14002cbb9:	lea    rcx,[rip+0xf950]        # 0x14003c510
   14002cbc0:	mov    QWORD PTR [rbx],rcx
   14002cbc3:	mov    QWORD PTR [rbx+0x40],0xf
   14002cbcb:	mov    QWORD PTR [rbx+0x38],rax
   14002cbcf:	mov    BYTE PTR [rbx+0x28],al
   14002cbd2:	mov    QWORD PTR [rbx+0x68],0xf
   14002cbda:	mov    QWORD PTR [rbx+0x60],rax
   14002cbde:	mov    BYTE PTR [rbx+0x50],al
   14002cbe1:	mov    QWORD PTR [rbx+0x18],rax
   14002cbe5:	mov    QWORD PTR [rbx+0x78],rax
   14002cbe9:	mov    QWORD PTR [rbx+0x70],rax
   14002cbed:	jmp    0x14002cbf4
   14002cbef:	xor    eax,eax
   14002cbf1:	mov    rbx,rax
   14002cbf4:	mov    rdx,rbx
   14002cbf7:	mov    rcx,rdi
   14002cbfa:	call   0x14002aac0
   14002cbff:	or     rcx,0xffffffffffffffff
   14002cc03:	xor    eax,eax
   14002cc05:	mov    rdi,rsi
   14002cc08:	mov    rdx,rsi
   14002cc0b:	repnz scas al,BYTE PTR es:[rdi]
   14002cc0d:	not    rcx
   14002cc10:	lea    r8,[rcx-0x1]
   14002cc14:	lea    rcx,[rbx+0x20]
   14002cc18:	call   0x140002a30
   14002cc1d:	mov    rax,rbx
   14002cc20:	mov    rbx,QWORD PTR [rsp+0x30]
   14002cc25:	mov    rsi,QWORD PTR [rsp+0x38]
   14002cc2a:	add    rsp,0x20
   14002cc2e:	pop    rdi
   14002cc2f:	ret    
   14002cc30:	mov    r11,rsp
   14002cc33:	push   rdi
   14002cc34:	sub    rsp,0xd0
   14002cc3b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002cc44:	mov    QWORD PTR [r11+0x18],rbx
   14002cc48:	mov    QWORD PTR [r11+0x20],rsi
   14002cc4c:	mov    rax,QWORD PTR [rip+0x1c16d]        # 0x140048dc0
   14002cc53:	xor    rax,rsp
   14002cc56:	mov    QWORD PTR [rsp+0xc0],rax
   14002cc5e:	mov    rbx,rdx
   14002cc61:	mov    rdi,rcx
   14002cc64:	lea    rax,[rip+0xfccd]        # 0x14003c938
   14002cc6b:	mov    QWORD PTR [rsp+0x30],rax
   14002cc70:	xor    esi,esi
   14002cc72:	mov    DWORD PTR [rsp+0x38],esi
   14002cc76:	mov    BYTE PTR [rsp+0x3c],sil
   14002cc7b:	mov    QWORD PTR [r11-0x78],0xf
   14002cc83:	mov    QWORD PTR [r11-0x80],rsi
   14002cc87:	mov    BYTE PTR [rsp+0x48],sil
   14002cc8c:	mov    QWORD PTR [r11-0x50],0xf
   14002cc94:	mov    QWORD PTR [r11-0x58],rsi
   14002cc98:	mov    BYTE PTR [rsp+0x70],sil
   14002cc9d:	lea    r8d,[rsi+0x4]
   14002cca1:	lea    rdx,[rip+0xf828]        # 0x14003c4d0
   14002cca8:	lea    rcx,[r11-0x70]
   14002ccac:	call   0x140002a30
   14002ccb1:	nop
   14002ccb2:	mov    QWORD PTR [rsp+0xb0],0xf
   14002ccbe:	mov    QWORD PTR [rsp+0xa8],rsi
   14002ccc6:	mov    BYTE PTR [rsp+0x98],sil
   14002ccce:	lea    r8d,[rsi+0x1]
   14002ccd2:	lea    rdx,[rip+0xa377]        # 0x140037050
   14002ccd9:	lea    rcx,[rsp+0x90]
   14002cce1:	call   0x140002a30
   14002cce6:	nop
   14002cce7:	xor    r8d,r8d
   14002ccea:	lea    rdx,[rip+0x10aae]        # 0x14003d79f
   14002ccf1:	lea    rcx,[rsp+0x68]
   14002ccf6:	call   0x140002a30
   14002ccfb:	xor    r8d,r8d
   14002ccfe:	lea    rdx,[rip+0x10a9a]        # 0x14003d79f
   14002cd05:	lea    rcx,[rsp+0x90]
   14002cd0d:	call   0x140002a30
   14002cd12:	mov    r11,QWORD PTR [rbx]
   14002cd15:	lea    rdx,[rsp+0x30]
   14002cd1a:	mov    rcx,rbx
   14002cd1d:	call   QWORD PTR [r11+0x80]
   14002cd24:	or     r9,0xffffffffffffffff
   14002cd28:	xor    r8d,r8d
   14002cd2b:	lea    rdx,[rsp+0x40]
   14002cd30:	mov    rcx,rdi
   14002cd33:	call   0x14002a3e0
   14002cd38:	nop
   14002cd39:	cmp    QWORD PTR [rsp+0xb0],0x10
   14002cd42:	jb     0x14002cd51
   14002cd44:	mov    rcx,QWORD PTR [rsp+0x98]
   14002cd4c:	call   0x1400062d4
   14002cd51:	mov    QWORD PTR [rsp+0xb0],0xf
   14002cd5d:	mov    QWORD PTR [rsp+0xa8],rsi
   14002cd65:	mov    BYTE PTR [rsp+0x98],0x0
   14002cd6d:	cmp    QWORD PTR [rsp+0x88],0x10
   14002cd76:	jb     0x14002cd82
   14002cd78:	mov    rcx,QWORD PTR [rsp+0x70]
   14002cd7d:	call   0x1400062d4
   14002cd82:	mov    QWORD PTR [rsp+0x88],0xf
   14002cd8e:	mov    QWORD PTR [rsp+0x80],rsi
   14002cd96:	mov    BYTE PTR [rsp+0x70],0x0
   14002cd9b:	cmp    QWORD PTR [rsp+0x60],0x10
   14002cda1:	jb     0x14002cdb2
   14002cda3:	mov    rcx,QWORD PTR [rsp+0x48]
   14002cda8:	call   0x1400062d4
   14002cdad:	mov    rax,rdi
   14002cdb0:	jmp    0x14002cdb5
   14002cdb2:	mov    rax,rdi
   14002cdb5:	mov    rcx,QWORD PTR [rsp+0xc0]
   14002cdbd:	xor    rcx,rsp
   14002cdc0:	call   0x1400144f0
   14002cdc5:	lea    r11,[rsp+0xd0]
   14002cdcd:	mov    rbx,QWORD PTR [r11+0x20]
   14002cdd1:	mov    rsi,QWORD PTR [r11+0x28]
   14002cdd5:	mov    rsp,r11
   14002cdd8:	pop    rdi
   14002cdd9:	ret    
   14002cdda:	int3   
   14002cddb:	int3   
   14002cddc:	int3   
   14002cddd:	int3   
   14002cdde:	int3   
   14002cddf:	int3   
   14002cde0:	rex push rbx
   14002cde2:	push   rbp
   14002cde3:	push   rsi
   14002cde4:	sub    rsp,0x20
   14002cde8:	mov    QWORD PTR [rsp+0x40],rdi
   14002cded:	xor    edi,edi
   14002cdef:	mov    QWORD PTR [rsp+0x50],r13
   14002cdf4:	cmp    DWORD PTR [rcx+0x8],edi
   14002cdf7:	mov    r13,r8
   14002cdfa:	mov    rsi,rdx
   14002cdfd:	mov    rbx,rcx
   14002ce00:	jle    0x14002ce30
   14002ce02:	mov    QWORD PTR [rsp+0x48],r12
   14002ce07:	nop    WORD PTR [rax+rax*1+0x0]
   14002ce10:	lea    rdx,[rbx+0x38]
   14002ce14:	lea    rcx,[rbx+0x10]
   14002ce18:	or     r9,0xffffffffffffffff
   14002ce1c:	xor    r8d,r8d
   14002ce1f:	call   0x14002a3e0
   14002ce24:	inc    edi
   14002ce26:	cmp    edi,DWORD PTR [rbx+0x8]
   14002ce29:	jl     0x14002ce10
   14002ce2b:	mov    r12,QWORD PTR [rsp+0x48]
   14002ce30:	lea    rdx,[rip+0xd5fd]        # 0x14003a434
   14002ce37:	lea    rcx,[rbx+0x10]
   14002ce3b:	mov    r8d,0x1
   14002ce41:	call   0x14002a6a0
   14002ce46:	cmp    QWORD PTR [rsi+0x58],0x10
   14002ce4b:	jb     0x14002ce53
   14002ce4d:	mov    rdx,QWORD PTR [rsi+0x40]
   14002ce51:	jmp    0x14002ce57
   14002ce53:	lea    rdx,[rsi+0x40]
   14002ce57:	or     rcx,0xffffffffffffffff
   14002ce5b:	xor    eax,eax
   14002ce5d:	mov    rdi,rdx
   14002ce60:	repnz scas al,BYTE PTR es:[rdi]
   14002ce62:	not    rcx
   14002ce65:	lea    r8,[rcx-0x1]
   14002ce69:	lea    rcx,[rbx+0x10]
   14002ce6d:	call   0x14002a6a0
   14002ce72:	mov    rdi,QWORD PTR [rsp+0x40]
   14002ce77:	test   r13,r13
   14002ce7a:	je     0x14002ceb7
   14002ce7c:	nop    DWORD PTR [rax+0x0]
   14002ce80:	lea    rdx,[rip+0xd9ad]        # 0x14003a834
   14002ce87:	lea    rcx,[rbx+0x10]
   14002ce8b:	mov    r8d,0x1
   14002ce91:	call   0x14002a6a0
   14002ce96:	lea    r9,[rbx+0x10]
   14002ce9a:	xor    r8d,r8d
   14002ce9d:	xor    edx,edx
   14002ce9f:	mov    rcx,r13
   14002cea2:	call   0x14002c3b0
   14002cea7:	mov    rcx,r13
   14002ceaa:	call   0x14002ad10
   14002ceaf:	mov    r13,rax
   14002ceb2:	test   rax,rax
   14002ceb5:	jne    0x14002ce80
   14002ceb7:	cmp    QWORD PTR [rsi+0x28],0x0
   14002cebc:	mov    r13,QWORD PTR [rsp+0x50]
   14002cec1:	jne    0x14002cefa
   14002cec3:	lea    rdx,[rip+0xf5fe]        # 0x14003c4c8
   14002ceca:	lea    rcx,[rbx+0x10]
   14002cece:	mov    r8d,0x3
   14002ced4:	call   0x14002a6a0
   14002ced9:	lea    rdx,[rbx+0x60]
   14002cedd:	lea    rcx,[rbx+0x10]
   14002cee1:	or     r9,0xffffffffffffffff
   14002cee5:	xor    r8d,r8d
   14002cee8:	call   0x14002a3e0
   14002ceed:	inc    DWORD PTR [rbx+0x8]
   14002cef0:	mov    al,0x1
   14002cef2:	add    rsp,0x20
   14002cef6:	pop    rsi
   14002cef7:	pop    rbp
   14002cef8:	pop    rbx
   14002cef9:	ret    
   14002cefa:	lea    rdx,[rip+0xd52b]        # 0x14003a42c
   14002cf01:	lea    rcx,[rbx+0x10]
   14002cf05:	mov    r8d,0x1
   14002cf0b:	call   0x14002a6a0
   14002cf10:	mov    rcx,QWORD PTR [rsi+0x28]
   14002cf14:	mov    rax,QWORD PTR [rcx]
   14002cf17:	call   QWORD PTR [rax+0x60]
   14002cf1a:	test   rax,rax
   14002cf1d:	je     0x14002ced9
   14002cf1f:	mov    rcx,QWORD PTR [rsi+0x28]
   14002cf23:	cmp    QWORD PTR [rsi+0x30],rcx
   14002cf27:	jne    0x14002ced9
   14002cf29:	mov    rax,QWORD PTR [rcx]
   14002cf2c:	call   QWORD PTR [rax+0x60]
   14002cf2f:	cmp    BYTE PTR [rax+0x70],0x0
   14002cf33:	jne    0x14002ced9
   14002cf35:	inc    DWORD PTR [rbx+0x8]
   14002cf38:	mov    BYTE PTR [rbx+0xc],0x1
   14002cf3c:	mov    al,0x1
   14002cf3e:	add    rsp,0x20
   14002cf42:	pop    rsi
   14002cf43:	pop    rbp
   14002cf44:	pop    rbx
   14002cf45:	ret    
   14002cf46:	int3   
   14002cf47:	int3   
   14002cf48:	int3   
   14002cf49:	int3   
   14002cf4a:	int3   
   14002cf4b:	int3   
   14002cf4c:	int3   
   14002cf4d:	int3   
   14002cf4e:	int3   
   14002cf4f:	int3   
   14002cf50:	mov    QWORD PTR [rsp+0x10],rbx
   14002cf55:	push   rdi
   14002cf56:	sub    rsp,0x20
   14002cf5a:	dec    DWORD PTR [rcx+0x8]
   14002cf5d:	cmp    QWORD PTR [rdx+0x28],0x0
   14002cf62:	mov    rdi,rdx
   14002cf65:	mov    rbx,rcx
   14002cf68:	je     0x14002cff5
   14002cf6e:	cmp    BYTE PTR [rcx+0xc],0x0
   14002cf72:	mov    QWORD PTR [rsp+0x30],rsi
   14002cf77:	je     0x14002cf7f
   14002cf79:	mov    BYTE PTR [rcx+0xc],0x0
   14002cf7d:	jmp    0x14002cf84
   14002cf7f:	call   0x14002c0d0
   14002cf84:	lea    rdx,[rip+0xfb85]        # 0x14003cb10
   14002cf8b:	lea    rcx,[rbx+0x10]
   14002cf8f:	mov    r8d,0x2
   14002cf95:	call   0x14002a6a0
   14002cf9a:	cmp    QWORD PTR [rdi+0x58],0x10
   14002cf9f:	jb     0x14002cfa7
   14002cfa1:	mov    rdx,QWORD PTR [rdi+0x40]
   14002cfa5:	jmp    0x14002cfab
   14002cfa7:	lea    rdx,[rdi+0x40]
   14002cfab:	or     rcx,0xffffffffffffffff
   14002cfaf:	xor    eax,eax
   14002cfb1:	mov    rdi,rdx
   14002cfb4:	repnz scas al,BYTE PTR es:[rdi]
   14002cfb6:	not    rcx
   14002cfb9:	lea    r8,[rcx-0x1]
   14002cfbd:	lea    rcx,[rbx+0x10]
   14002cfc1:	call   0x14002a6a0
   14002cfc6:	lea    rdx,[rip+0xd45f]        # 0x14003a42c
   14002cfcd:	lea    rcx,[rbx+0x10]
   14002cfd1:	mov    r8d,0x1
   14002cfd7:	call   0x14002a6a0
   14002cfdc:	lea    rdx,[rbx+0x60]
   14002cfe0:	lea    rcx,[rbx+0x10]
   14002cfe4:	or     r9,0xffffffffffffffff
   14002cfe8:	xor    r8d,r8d
   14002cfeb:	call   0x14002a3e0
   14002cff0:	mov    rsi,QWORD PTR [rsp+0x30]
   14002cff5:	mov    al,0x1
   14002cff7:	mov    rbx,QWORD PTR [rsp+0x38]
   14002cffc:	add    rsp,0x20
   14002d000:	pop    rdi
   14002d001:	ret    
   14002d002:	int3   
   14002d003:	int3   
   14002d004:	int3   
   14002d005:	int3   
   14002d006:	int3   
   14002d007:	int3   
   14002d008:	int3   
   14002d009:	int3   
   14002d00a:	int3   
   14002d00b:	int3   
   14002d00c:	int3   
   14002d00d:	int3   
   14002d00e:	int3   
   14002d00f:	int3   
   14002d010:	mov    rax,rsp
   14002d013:	push   rsi
   14002d014:	push   rdi
   14002d015:	push   r12
   14002d017:	sub    rsp,0x60
   14002d01b:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002d024:	mov    QWORD PTR [rax+0x18],rbx
   14002d028:	mov    QWORD PTR [rax+0x20],rbp
   14002d02c:	mov    rax,QWORD PTR [rip+0x1bd8d]        # 0x140048dc0
   14002d033:	xor    rax,rsp
   14002d036:	mov    QWORD PTR [rsp+0x50],rax
   14002d03b:	mov    rsi,rdx
   14002d03e:	mov    rbx,rcx
   14002d041:	cmp    BYTE PTR [rdx+0x70],0x0
   14002d045:	je     0x14002d0ee
   14002d04b:	xor    edi,edi
   14002d04d:	cmp    DWORD PTR [rcx+0x8],edi
   14002d050:	jle    0x14002d07b
   14002d052:	data16 data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   14002d060:	or     r9,0xffffffffffffffff
   14002d064:	xor    r8d,r8d
   14002d067:	lea    rdx,[rbx+0x38]
   14002d06b:	lea    rcx,[rbx+0x10]
   14002d06f:	call   0x14002a3e0
   14002d074:	inc    edi
   14002d076:	cmp    edi,DWORD PTR [rbx+0x8]
   14002d079:	jl     0x14002d060
   14002d07b:	mov    r8d,0x9
   14002d081:	lea    rdx,[rip+0xfac0]        # 0x14003cb48
   14002d088:	lea    rcx,[rbx+0x10]
   14002d08c:	call   0x14002a6a0
   14002d091:	cmp    QWORD PTR [rsi+0x58],0x10
   14002d096:	jb     0x14002d09e
   14002d098:	mov    rdx,QWORD PTR [rsi+0x40]
   14002d09c:	jmp    0x14002d0a2
   14002d09e:	lea    rdx,[rsi+0x40]
   14002d0a2:	xor    eax,eax
   14002d0a4:	or     rcx,0xffffffffffffffff
   14002d0a8:	mov    rdi,rdx
   14002d0ab:	repnz scas al,BYTE PTR es:[rdi]
   14002d0ad:	not    rcx
   14002d0b0:	lea    r8,[rcx-0x1]
   14002d0b4:	lea    rcx,[rbx+0x10]
   14002d0b8:	call   0x14002a6a0
   14002d0bd:	mov    r8d,0x3
   14002d0c3:	lea    rdx,[rip+0xfa76]        # 0x14003cb40
   14002d0ca:	lea    rcx,[rbx+0x10]
   14002d0ce:	call   0x14002a6a0
   14002d0d3:	lea    rdx,[rbx+0x60]
   14002d0d7:	or     r9,0xffffffffffffffff
   14002d0db:	xor    r8d,r8d
   14002d0de:	lea    rcx,[rbx+0x10]
   14002d0e2:	call   0x14002a3e0
   14002d0e7:	mov    al,0x1
   14002d0e9:	jmp    0x14002d1b1
   14002d0ee:	cmp    BYTE PTR [rcx+0xc],0x0
   14002d0f2:	je     0x14002d147
   14002d0f4:	mov    QWORD PTR [rsp+0x48],0xf
   14002d0fd:	xor    edi,edi
   14002d0ff:	mov    QWORD PTR [rsp+0x40],rdi
   14002d104:	mov    BYTE PTR [rsp+0x30],dil
   14002d109:	lea    rcx,[rdx+0x38]
   14002d10d:	lea    rdx,[rsp+0x28]
   14002d112:	call   0x14002b9b0
   14002d117:	lea    rcx,[rbx+0x10]
   14002d11b:	or     r9,0xffffffffffffffff
   14002d11f:	xor    r8d,r8d
   14002d122:	lea    rdx,[rsp+0x28]
   14002d127:	call   0x14002a3e0
   14002d12c:	nop
   14002d12d:	cmp    QWORD PTR [rsp+0x48],0x10
   14002d133:	jb     0x14002d143
   14002d135:	mov    rcx,QWORD PTR [rsp+0x30]
   14002d13a:	call   0x1400062d4
   14002d13f:	mov    al,0x1
   14002d141:	jmp    0x14002d1b1
   14002d143:	mov    al,0x1
   14002d145:	jmp    0x14002d1b1
   14002d147:	call   0x14002c0d0
   14002d14c:	mov    QWORD PTR [rsp+0x48],0xf
   14002d155:	xor    edi,edi
   14002d157:	mov    QWORD PTR [rsp+0x40],rdi
   14002d15c:	mov    BYTE PTR [rsp+0x30],dil
   14002d161:	lea    rcx,[rsi+0x38]
   14002d165:	lea    rdx,[rsp+0x28]
   14002d16a:	call   0x14002b9b0
   14002d16f:	or     r9,0xffffffffffffffff
   14002d173:	xor    r8d,r8d
   14002d176:	lea    rdx,[rsp+0x28]
   14002d17b:	lea    rcx,[rbx+0x10]
   14002d17f:	call   0x14002a3e0
   14002d184:	lea    rdx,[rbx+0x60]
   14002d188:	or     r9,0xffffffffffffffff
   14002d18c:	xor    r8d,r8d
   14002d18f:	lea    rcx,[rbx+0x10]
   14002d193:	call   0x14002a3e0
   14002d198:	nop
   14002d199:	cmp    QWORD PTR [rsp+0x48],0x10
   14002d19f:	jb     0x14002d1af
   14002d1a1:	mov    rcx,QWORD PTR [rsp+0x30]
   14002d1a6:	call   0x1400062d4
   14002d1ab:	mov    al,0x1
   14002d1ad:	jmp    0x14002d1b1
   14002d1af:	mov    al,0x1
   14002d1b1:	mov    rcx,QWORD PTR [rsp+0x50]
   14002d1b6:	xor    rcx,rsp
   14002d1b9:	call   0x1400144f0
   14002d1be:	lea    r11,[rsp+0x60]
   14002d1c3:	mov    rbx,QWORD PTR [r11+0x30]
   14002d1c7:	mov    rbp,QWORD PTR [r11+0x38]
   14002d1cb:	mov    rsp,r11
   14002d1ce:	pop    r12
   14002d1d0:	pop    rdi
   14002d1d1:	pop    rsi
   14002d1d2:	ret    
   14002d1d3:	int3   
   14002d1d4:	int3   
   14002d1d5:	int3   
   14002d1d6:	int3   
   14002d1d7:	int3   
   14002d1d8:	int3   
   14002d1d9:	int3   
   14002d1da:	int3   
   14002d1db:	int3   
   14002d1dc:	int3   
   14002d1dd:	int3   
   14002d1de:	int3   
   14002d1df:	int3   
   14002d1e0:	mov    QWORD PTR [rsp+0x18],rbx
   14002d1e5:	mov    QWORD PTR [rsp+0x20],rdi
   14002d1ea:	push   r12
   14002d1ec:	sub    rsp,0x20
   14002d1f0:	xor    ebx,ebx
   14002d1f2:	mov    r12,rdx
   14002d1f5:	mov    rdi,rcx
   14002d1f8:	cmp    DWORD PTR [rcx+0x8],ebx
   14002d1fb:	jle    0x14002d235
   14002d1fd:	mov    QWORD PTR [rsp+0x30],rbp
   14002d202:	mov    QWORD PTR [rsp+0x38],rsi
   14002d207:	nop    WORD PTR [rax+rax*1+0x0]
   14002d210:	lea    rdx,[rdi+0x38]
   14002d214:	lea    rcx,[rdi+0x10]
   14002d218:	or     r9,0xffffffffffffffff
   14002d21c:	xor    r8d,r8d
   14002d21f:	call   0x14002a3e0
   14002d224:	inc    ebx
   14002d226:	cmp    ebx,DWORD PTR [rdi+0x8]
   14002d229:	jl     0x14002d210
   14002d22b:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d230:	mov    rbp,QWORD PTR [rsp+0x30]
   14002d235:	mov    rax,QWORD PTR [r12]
   14002d239:	lea    r9,[rdi+0x10]
   14002d23d:	xor    r8d,r8d
   14002d240:	xor    edx,edx
   14002d242:	mov    rcx,r12
   14002d245:	call   QWORD PTR [rax+0x90]
   14002d24b:	lea    rdx,[rdi+0x60]
   14002d24f:	lea    rcx,[rdi+0x10]
   14002d253:	or     r9,0xffffffffffffffff
   14002d257:	xor    r8d,r8d
   14002d25a:	call   0x14002a3e0
   14002d25f:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d264:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d269:	mov    al,0x1
   14002d26b:	add    rsp,0x20
   14002d26f:	pop    r12
   14002d271:	ret    
   14002d272:	int3   
   14002d273:	int3   
   14002d274:	int3   
   14002d275:	int3   
   14002d276:	int3   
   14002d277:	int3   
   14002d278:	int3   
   14002d279:	int3   
   14002d27a:	int3   
   14002d27b:	int3   
   14002d27c:	int3   
   14002d27d:	int3   
   14002d27e:	int3   
   14002d27f:	int3   
   14002d280:	mov    QWORD PTR [rsp+0x10],rbx
   14002d285:	mov    QWORD PTR [rsp+0x18],rbp
   14002d28a:	mov    QWORD PTR [rsp+0x20],rsi
   14002d28f:	push   rdi
   14002d290:	sub    rsp,0x20
   14002d294:	xor    edi,edi
   14002d296:	mov    rsi,rdx
   14002d299:	mov    rbx,rcx
   14002d29c:	cmp    DWORD PTR [rcx+0x8],edi
   14002d29f:	jle    0x14002d2d0
   14002d2a1:	mov    QWORD PTR [rsp+0x30],r12
   14002d2a6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002d2b0:	lea    rdx,[rbx+0x38]
   14002d2b4:	lea    rcx,[rbx+0x10]
   14002d2b8:	or     r9,0xffffffffffffffff
   14002d2bc:	xor    r8d,r8d
   14002d2bf:	call   0x14002a3e0
   14002d2c4:	inc    edi
   14002d2c6:	cmp    edi,DWORD PTR [rbx+0x8]
   14002d2c9:	jl     0x14002d2b0
   14002d2cb:	mov    r12,QWORD PTR [rsp+0x30]
   14002d2d0:	lea    rdx,[rip+0xf881]        # 0x14003cb58
   14002d2d7:	lea    rcx,[rbx+0x10]
   14002d2db:	mov    r8d,0x4
   14002d2e1:	call   0x14002a6a0
   14002d2e6:	cmp    QWORD PTR [rsi+0x58],0x10
   14002d2eb:	jb     0x14002d2f3
   14002d2ed:	mov    rdx,QWORD PTR [rsi+0x40]
   14002d2f1:	jmp    0x14002d2f7
   14002d2f3:	lea    rdx,[rsi+0x40]
   14002d2f7:	or     rcx,0xffffffffffffffff
   14002d2fb:	xor    eax,eax
   14002d2fd:	mov    rdi,rdx
   14002d300:	repnz scas al,BYTE PTR es:[rdi]
   14002d302:	not    rcx
   14002d305:	lea    r8,[rcx-0x1]
   14002d309:	lea    rcx,[rbx+0x10]
   14002d30d:	call   0x14002a6a0
   14002d312:	lea    rdx,[rip+0xf83b]        # 0x14003cb54
   14002d319:	lea    rcx,[rbx+0x10]
   14002d31d:	mov    r8d,0x3
   14002d323:	call   0x14002a6a0
   14002d328:	lea    rdx,[rbx+0x60]
   14002d32c:	lea    rcx,[rbx+0x10]
   14002d330:	or     r9,0xffffffffffffffff
   14002d334:	xor    r8d,r8d
   14002d337:	call   0x14002a3e0
   14002d33c:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d341:	mov    rbp,QWORD PTR [rsp+0x40]
   14002d346:	mov    rsi,QWORD PTR [rsp+0x48]
   14002d34b:	mov    al,0x1
   14002d34d:	add    rsp,0x20
   14002d351:	pop    rdi
   14002d352:	ret    
   14002d353:	int3   
   14002d354:	int3   
   14002d355:	int3   
   14002d356:	int3   
   14002d357:	int3   
   14002d358:	int3   
   14002d359:	int3   
   14002d35a:	int3   
   14002d35b:	int3   
   14002d35c:	int3   
   14002d35d:	int3   
   14002d35e:	int3   
   14002d35f:	int3   
   14002d360:	mov    QWORD PTR [rsp+0x10],rbx
   14002d365:	mov    QWORD PTR [rsp+0x18],rsi
   14002d36a:	mov    QWORD PTR [rsp+0x20],rdi
   14002d36f:	push   r12
   14002d371:	sub    rsp,0x20
   14002d375:	xor    edi,edi
   14002d377:	mov    r12,rdx
   14002d37a:	mov    rbx,rcx
   14002d37d:	cmp    DWORD PTR [rcx+0x8],edi
   14002d380:	jle    0x14002d3b0
   14002d382:	mov    QWORD PTR [rsp+0x30],rbp
   14002d387:	nop    WORD PTR [rax+rax*1+0x0]
   14002d390:	lea    rdx,[rbx+0x38]
   14002d394:	lea    rcx,[rbx+0x10]
   14002d398:	or     r9,0xffffffffffffffff
   14002d39c:	xor    r8d,r8d
   14002d39f:	call   0x14002a3e0
   14002d3a4:	inc    edi
   14002d3a6:	cmp    edi,DWORD PTR [rbx+0x8]
   14002d3a9:	jl     0x14002d390
   14002d3ab:	mov    rbp,QWORD PTR [rsp+0x30]
   14002d3b0:	lea    rdx,[rip+0xd07d]        # 0x14003a434
   14002d3b7:	lea    rcx,[rbx+0x10]
   14002d3bb:	mov    r8d,0x1
   14002d3c1:	call   0x14002a6a0
   14002d3c6:	cmp    QWORD PTR [r12+0x58],0x10
   14002d3cc:	jb     0x14002d3d5
   14002d3ce:	mov    rdx,QWORD PTR [r12+0x40]
   14002d3d3:	jmp    0x14002d3da
   14002d3d5:	lea    rdx,[r12+0x40]
   14002d3da:	or     rcx,0xffffffffffffffff
   14002d3de:	xor    eax,eax
   14002d3e0:	mov    rdi,rdx
   14002d3e3:	repnz scas al,BYTE PTR es:[rdi]
   14002d3e5:	not    rcx
   14002d3e8:	lea    r8,[rcx-0x1]
   14002d3ec:	lea    rcx,[rbx+0x10]
   14002d3f0:	call   0x14002a6a0
   14002d3f5:	lea    rdx,[rip+0xd030]        # 0x14003a42c
   14002d3fc:	lea    rcx,[rbx+0x10]
   14002d400:	mov    r8d,0x1
   14002d406:	call   0x14002a6a0
   14002d40b:	lea    rdx,[rbx+0x60]
   14002d40f:	lea    rcx,[rbx+0x10]
   14002d413:	or     r9,0xffffffffffffffff
   14002d417:	xor    r8d,r8d
   14002d41a:	call   0x14002a3e0
   14002d41f:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d424:	mov    rsi,QWORD PTR [rsp+0x40]
   14002d429:	mov    rdi,QWORD PTR [rsp+0x48]
   14002d42e:	mov    al,0x1
   14002d430:	add    rsp,0x20
   14002d434:	pop    r12
   14002d436:	ret    
   14002d437:	int3   
   14002d438:	int3   
   14002d439:	int3   
   14002d43a:	int3   
   14002d43b:	int3   
   14002d43c:	int3   
   14002d43d:	int3   
   14002d43e:	int3   
   14002d43f:	int3   
   14002d440:	xor    r9d,r9d
   14002d443:	jmp    0x14002c3b0
   14002d448:	int3   
   14002d449:	int3   
   14002d44a:	int3   
   14002d44b:	int3   
   14002d44c:	int3   
   14002d44d:	int3   
   14002d44e:	int3   
   14002d44f:	int3   
   14002d450:	rex push rbx
   14002d452:	sub    rsp,0x20
   14002d456:	add    rcx,0x70
   14002d45a:	mov    ebx,r8d
   14002d45d:	call   0x14002cb70
   14002d462:	test   rax,rax
   14002d465:	je     0x14002d471
   14002d467:	mov    edx,ebx
   14002d469:	mov    rcx,rax
   14002d46c:	call   0x14002c5d0
   14002d471:	add    rsp,0x20
   14002d475:	pop    rbx
   14002d476:	ret    
   14002d477:	int3   
   14002d478:	int3   
   14002d479:	int3   
   14002d47a:	int3   
   14002d47b:	int3   
   14002d47c:	int3   
   14002d47d:	int3   
   14002d47e:	int3   
   14002d47f:	int3   
   14002d480:	rex push rbx
   14002d482:	sub    rsp,0x20
   14002d486:	add    rcx,0x70
   14002d48a:	mov    rbx,r8
   14002d48d:	call   0x14002cb70
   14002d492:	mov    r11,rax
   14002d495:	test   rax,rax
   14002d498:	je     0x14002d4c2
   14002d49a:	or     rcx,0xffffffffffffffff
   14002d49e:	mov    QWORD PTR [rsp+0x30],rdi
   14002d4a3:	xor    eax,eax
   14002d4a5:	mov    rdi,rbx
   14002d4a8:	mov    rdx,rbx
   14002d4ab:	repnz scas al,BYTE PTR es:[rdi]
   14002d4ad:	not    rcx
   14002d4b0:	lea    r8,[rcx-0x1]
   14002d4b4:	lea    rcx,[r11+0x48]
   14002d4b8:	call   0x140002a30
   14002d4bd:	mov    rdi,QWORD PTR [rsp+0x30]
   14002d4c2:	add    rsp,0x20
   14002d4c6:	pop    rbx
   14002d4c7:	ret    
   14002d4c8:	int3   
   14002d4c9:	int3   
   14002d4ca:	int3   
   14002d4cb:	int3   
   14002d4cc:	int3   
   14002d4cd:	int3   
   14002d4ce:	int3   
   14002d4cf:	int3   
   14002d4d0:	rex push rbx
   14002d4d2:	sub    rsp,0x20
   14002d4d6:	add    rcx,0x70
   14002d4da:	mov    rbx,r8
   14002d4dd:	call   0x14002cab0
   14002d4e2:	test   rax,rax
   14002d4e5:	je     0x14002d4fa
   14002d4e7:	lea    rcx,[rax+0x48]
   14002d4eb:	or     r9,0xffffffffffffffff
   14002d4ef:	xor    r8d,r8d
   14002d4f2:	mov    rdx,rbx
   14002d4f5:	call   0x140002630
   14002d4fa:	add    rsp,0x20
   14002d4fe:	pop    rbx
   14002d4ff:	ret    
   14002d500:	mov    QWORD PTR [rsp+0x8],rbx
   14002d505:	mov    QWORD PTR [rsp+0x10],rsi
   14002d50a:	push   rdi
   14002d50b:	sub    rsp,0x20
   14002d50f:	mov    rdi,rdx
   14002d512:	mov    rsi,rcx
   14002d515:	call   0x14002c120
   14002d51a:	lea    r11,[rsi+0x70]
   14002d51e:	mov    rbx,QWORD PTR [r11+0x78]
   14002d522:	cmp    rbx,r11
   14002d525:	je     0x14002d56a
   14002d527:	test   rbx,rbx
   14002d52a:	je     0x14002d56a
   14002d52c:	nop    DWORD PTR [rax+0x0]
   14002d530:	cmp    QWORD PTR [rbx+0x68],0x10
   14002d535:	jb     0x14002d53d
   14002d537:	mov    r8,QWORD PTR [rbx+0x50]
   14002d53b:	jmp    0x14002d541
   14002d53d:	lea    r8,[rbx+0x50]
   14002d541:	cmp    QWORD PTR [rbx+0x40],0x10
   14002d546:	jb     0x14002d54e
   14002d548:	mov    rdx,QWORD PTR [rbx+0x28]
   14002d54c:	jmp    0x14002d552
   14002d54e:	lea    rdx,[rbx+0x28]
   14002d552:	mov    rcx,rdi
   14002d555:	call   0x14002d480
   14002d55a:	mov    rcx,rbx
   14002d55d:	call   0x14002ad10
   14002d562:	mov    rbx,rax
   14002d565:	test   rax,rax
   14002d568:	jne    0x14002d530
   14002d56a:	mov    rbx,QWORD PTR [rsi+0x28]
   14002d56e:	test   rbx,rbx
   14002d571:	je     0x14002d590
   14002d573:	mov    rax,QWORD PTR [rbx]
   14002d576:	mov    rcx,rbx
   14002d579:	call   QWORD PTR [rax+0x78]
   14002d57c:	mov    rcx,rdi
   14002d57f:	mov    rdx,rax
   14002d582:	call   0x14002ab90
   14002d587:	mov    rbx,QWORD PTR [rbx+0x68]
   14002d58b:	test   rbx,rbx
   14002d58e:	jne    0x14002d573
   14002d590:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d595:	mov    rsi,QWORD PTR [rsp+0x38]
   14002d59a:	add    rsp,0x20
   14002d59e:	pop    rdi
   14002d59f:	ret    
   14002d5a0:	rex push rdi
   14002d5a2:	sub    rsp,0x30
   14002d5a6:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002d5af:	mov    QWORD PTR [rsp+0x40],rbx
   14002d5b4:	mov    rdi,rcx
   14002d5b7:	mov    ecx,0xf0
   14002d5bc:	call   0x140006290
   14002d5c1:	mov    QWORD PTR [rsp+0x48],rax
   14002d5c6:	test   rax,rax
   14002d5c9:	je     0x14002d5e9
   14002d5cb:	cmp    QWORD PTR [rdi+0x58],0x10
   14002d5d0:	jb     0x14002d5d8
   14002d5d2:	mov    rdx,QWORD PTR [rdi+0x40]
   14002d5d6:	jmp    0x14002d5dc
   14002d5d8:	lea    rdx,[rdi+0x40]
   14002d5dc:	mov    rcx,rax
   14002d5df:	call   0x14002c190
   14002d5e4:	mov    rbx,rax
   14002d5e7:	jmp    0x14002d5eb
   14002d5e9:	xor    ebx,ebx
   14002d5eb:	test   rbx,rbx
   14002d5ee:	jne    0x14002d5f4
   14002d5f0:	xor    eax,eax
   14002d5f2:	jmp    0x14002d602
   14002d5f4:	mov    rdx,rbx
   14002d5f7:	mov    rcx,rdi
   14002d5fa:	call   0x14002d500
   14002d5ff:	mov    rax,rbx
   14002d602:	mov    rbx,QWORD PTR [rsp+0x40]
   14002d607:	add    rsp,0x30
   14002d60b:	pop    rdi
   14002d60c:	ret    
   14002d60d:	int3   
   14002d60e:	int3   
   14002d60f:	int3   
   14002d610:	mov    QWORD PTR [rsp+0x8],rbx
   14002d615:	push   rdi
   14002d616:	sub    rsp,0x20
   14002d61a:	mov    rax,QWORD PTR [rcx]
   14002d61d:	mov    rbx,rcx
   14002d620:	xor    edi,edi
   14002d622:	movsxd rcx,DWORD PTR [rax+0x4]
   14002d626:	test   BYTE PTR [rcx+rbx*1+0x10],0x6
   14002d62b:	jne    0x14002d643
   14002d62d:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   14002d632:	mov    rax,QWORD PTR [rcx]
   14002d635:	call   QWORD PTR [rax+0x60]
   14002d638:	mov    ecx,0x4
   14002d63d:	cmp    eax,0xffffffff
   14002d640:	cmove  edi,ecx
   14002d643:	mov    rax,QWORD PTR [rbx]
   14002d646:	movsxd rcx,DWORD PTR [rax+0x4]
   14002d64a:	add    rcx,rbx
   14002d64d:	test   edi,edi
   14002d64f:	je     0x14002d668
   14002d651:	mov    edx,DWORD PTR [rcx+0x10]
   14002d654:	or     edx,edi
   14002d656:	cmp    QWORD PTR [rcx+0x48],0x0
   14002d65b:	jne    0x14002d660
   14002d65d:	or     edx,0x4
   14002d660:	xor    r8d,r8d
   14002d663:	call   0x14002bd50
   14002d668:	mov    rax,rbx
   14002d66b:	mov    rbx,QWORD PTR [rsp+0x30]
   14002d670:	add    rsp,0x20
   14002d674:	pop    rdi
   14002d675:	ret    
   14002d676:	int3   
   14002d677:	int3   
   14002d678:	int3   
   14002d679:	int3   
   14002d67a:	int3   
   14002d67b:	int3   
   14002d67c:	int3   
   14002d67d:	int3   
   14002d67e:	int3   
   14002d67f:	int3   
   14002d680:	rex push rbx
   14002d682:	sub    rsp,0x20
   14002d686:	mov    rbx,QWORD PTR [rcx]
   14002d689:	test   rbx,rbx
   14002d68c:	je     0x14002d6e0
   14002d68e:	lea    rcx,[rsp+0x30]
   14002d693:	xor    edx,edx
   14002d695:	mov    QWORD PTR [rsp+0x38],rdi
   14002d69a:	call   0x140032304
   14002d69f:	mov    rax,QWORD PTR [rbx+0x8]
   14002d6a3:	test   rax,rax
   14002d6a6:	je     0x14002d6b5
   14002d6a8:	cmp    rax,0xffffffffffffffff
   14002d6ac:	jae    0x14002d6b5
   14002d6ae:	dec    rax
   14002d6b1:	mov    QWORD PTR [rbx+0x8],rax
   14002d6b5:	xor    edi,edi
   14002d6b7:	lea    rcx,[rsp+0x30]
   14002d6bc:	cmp    QWORD PTR [rbx+0x8],rdi
   14002d6c0:	cmove  rdi,rbx
   14002d6c4:	call   0x140032334
   14002d6c9:	test   rdi,rdi
   14002d6cc:	je     0x14002d6db
   14002d6ce:	mov    rax,QWORD PTR [rdi]
   14002d6d1:	mov    edx,0x1
   14002d6d6:	mov    rcx,rdi
   14002d6d9:	call   QWORD PTR [rax]
   14002d6db:	mov    rdi,QWORD PTR [rsp+0x38]
   14002d6e0:	add    rsp,0x20
   14002d6e4:	pop    rbx
   14002d6e5:	ret    
   14002d6e6:	int3   
   14002d6e7:	int3   
   14002d6e8:	int3   
   14002d6e9:	int3   
   14002d6ea:	int3   
   14002d6eb:	int3   
   14002d6ec:	int3   
   14002d6ed:	int3   
   14002d6ee:	int3   
   14002d6ef:	int3   
   14002d6f0:	rex push rbx
   14002d6f2:	sub    rsp,0x20
   14002d6f6:	lea    rax,[rip+0xf8bb]        # 0x14003cfb8
   14002d6fd:	mov    rbx,rcx
   14002d700:	mov    QWORD PTR [rcx],rax
   14002d703:	test   dl,0x1
   14002d706:	je     0x14002d70d
   14002d708:	call   0x1400062d4
   14002d70d:	mov    rax,rbx
   14002d710:	add    rsp,0x20
   14002d714:	pop    rbx
   14002d715:	ret    
   14002d716:	int3   
   14002d717:	int3   
   14002d718:	int3   
   14002d719:	int3   
   14002d71a:	int3   
   14002d71b:	int3   
   14002d71c:	int3   
   14002d71d:	int3   
   14002d71e:	int3   
   14002d71f:	int3   
   14002d720:	mov    QWORD PTR [rsp+0x10],rbx
   14002d725:	push   rdi
   14002d726:	sub    rsp,0x20
   14002d72a:	mov    DWORD PTR [rsp+0x30],0x0
   14002d732:	mov    rax,QWORD PTR [rcx+0x40]
   14002d736:	mov    rbx,rdx
   14002d739:	mov    rdi,QWORD PTR [rax]
   14002d73c:	lea    rcx,[rsp+0x30]
   14002d741:	mov    QWORD PTR [rdx],rdi
   14002d744:	xor    edx,edx
   14002d746:	call   0x140032304
   14002d74b:	mov    rax,QWORD PTR [rdi+0x8]
   14002d74f:	cmp    rax,0xffffffffffffffff
   14002d753:	jae    0x14002d75c
   14002d755:	inc    rax
   14002d758:	mov    QWORD PTR [rdi+0x8],rax
   14002d75c:	lea    rcx,[rsp+0x30]
   14002d761:	call   0x140032334
   14002d766:	mov    rax,rbx
   14002d769:	mov    rbx,QWORD PTR [rsp+0x38]
   14002d76e:	add    rsp,0x20
   14002d772:	pop    rdi
   14002d773:	ret    
   14002d774:	int3   
   14002d775:	int3   
   14002d776:	int3   
   14002d777:	int3   
   14002d778:	int3   
   14002d779:	int3   
   14002d77a:	int3   
   14002d77b:	int3   
   14002d77c:	int3   
   14002d77d:	int3   
   14002d77e:	int3   
   14002d77f:	int3   
   14002d780:	rex push rbx
   14002d782:	sub    rsp,0x20
   14002d786:	movzx  ebx,cl
   14002d789:	mov    ecx,ebx
   14002d78b:	call   0x1400235ec
   14002d790:	test   eax,eax
   14002d792:	jne    0x14002d7a4
   14002d794:	cmp    bl,0xa
   14002d797:	je     0x14002d7a4
   14002d799:	cmp    bl,0xd
   14002d79c:	je     0x14002d7a4
   14002d79e:	add    rsp,0x20
   14002d7a2:	pop    rbx
   14002d7a3:	ret    
   14002d7a4:	mov    al,0x1
   14002d7a6:	add    rsp,0x20
   14002d7aa:	pop    rbx
   14002d7ab:	ret    
   14002d7ac:	int3   
   14002d7ad:	int3   
   14002d7ae:	int3   
   14002d7af:	int3   
   14002d7b0:	sub    rsp,0x28
   14002d7b4:	xor    eax,eax
   14002d7b6:	mov    r9d,ecx
   14002d7b9:	mov    DWORD PTR [rsp+0x8],0xc0
   14002d7c1:	mov    DWORD PTR [rsp+0xc],0xe0
   14002d7c9:	mov    DWORD PTR [rsp+0x10],0xf0
   14002d7d1:	mov    DWORD PTR [rsp+0x14],0xf8
   14002d7d9:	mov    DWORD PTR [rsp],eax
   14002d7dc:	mov    DWORD PTR [rsp+0x4],eax
   14002d7e0:	mov    DWORD PTR [rsp+0x18],0xfc
   14002d7e8:	cmp    ecx,0x80
   14002d7ee:	jae    0x14002d7f9
   14002d7f0:	mov    DWORD PTR [r8],0x1
   14002d7f7:	jmp    0x14002d82a
   14002d7f9:	cmp    ecx,0x800
   14002d7ff:	jae    0x14002d80a
   14002d801:	mov    DWORD PTR [r8],0x2
   14002d808:	jmp    0x14002d82a
   14002d80a:	cmp    ecx,0x10000
   14002d810:	jae    0x14002d81b
   14002d812:	mov    DWORD PTR [r8],0x3
   14002d819:	jmp    0x14002d82a
   14002d81b:	cmp    ecx,0x200000
   14002d821:	jae    0x14002d889
   14002d823:	mov    DWORD PTR [r8],0x4
   14002d82a:	movsxd rcx,DWORD PTR [r8]
   14002d82d:	add    rdx,rcx
   14002d830:	sub    ecx,0x1
   14002d833:	je     0x14002d877
   14002d835:	sub    ecx,0x1
   14002d838:	je     0x14002d866
   14002d83a:	sub    ecx,0x1
   14002d83d:	je     0x14002d855
   14002d83f:	cmp    ecx,0x1
   14002d842:	jne    0x14002d88c
   14002d844:	movzx  eax,r9b
   14002d848:	dec    rdx
   14002d84b:	and    al,0x3f
   14002d84d:	or     al,0x80
   14002d84f:	shr    r9d,0x6
   14002d853:	mov    BYTE PTR [rdx],al
   14002d855:	movzx  eax,r9b
   14002d859:	dec    rdx
   14002d85c:	and    al,0x3f
   14002d85e:	or     al,0x80
   14002d860:	shr    r9d,0x6
   14002d864:	mov    BYTE PTR [rdx],al
   14002d866:	movzx  eax,r9b
   14002d86a:	dec    rdx
   14002d86d:	and    al,0x3f
   14002d86f:	or     al,0x80
   14002d871:	shr    r9d,0x6
   14002d875:	mov    BYTE PTR [rdx],al
   14002d877:	movsxd rax,DWORD PTR [r8]
   14002d87a:	movzx  ecx,BYTE PTR [rsp+rax*4]
   14002d87e:	or     cl,r9b
   14002d881:	mov    BYTE PTR [rdx-0x1],cl
   14002d884:	add    rsp,0x28
   14002d888:	ret    
   14002d889:	mov    DWORD PTR [r8],eax
   14002d88c:	add    rsp,0x28
   14002d890:	ret    
   14002d891:	int3   
   14002d892:	int3   
   14002d893:	int3   
   14002d894:	int3   
   14002d895:	int3   
   14002d896:	int3   
   14002d897:	int3   
   14002d898:	int3   
   14002d899:	int3   
   14002d89a:	int3   
   14002d89b:	int3   
   14002d89c:	int3   
   14002d89d:	int3   
   14002d89e:	int3   
   14002d89f:	int3   
   14002d8a0:	cmp    cl,0x7f
   14002d8a3:	jae    0x14002d8ad
   14002d8a5:	movzx  ecx,cl
   14002d8a8:	jmp    0x140023364
   14002d8ad:	mov    eax,0x1
   14002d8b2:	ret    
   14002d8b3:	int3   
   14002d8b4:	int3   
   14002d8b5:	int3   
   14002d8b6:	int3   
   14002d8b7:	int3   
   14002d8b8:	int3   
   14002d8b9:	int3   
   14002d8ba:	int3   
   14002d8bb:	int3   
   14002d8bc:	int3   
   14002d8bd:	int3   
   14002d8be:	int3   
   14002d8bf:	int3   
   14002d8c0:	cmp    cl,0x7f
   14002d8c3:	jae    0x14002d8cd
   14002d8c5:	movzx  ecx,cl
   14002d8c8:	jmp    0x14002366c
   14002d8cd:	mov    eax,0x1
   14002d8d2:	ret    
   14002d8d3:	int3   
   14002d8d4:	int3   
   14002d8d5:	int3   
   14002d8d6:	int3   
   14002d8d7:	int3   
   14002d8d8:	int3   
   14002d8d9:	int3   
   14002d8da:	int3   
   14002d8db:	int3   
   14002d8dc:	int3   
   14002d8dd:	int3   
   14002d8de:	int3   
   14002d8df:	int3   
   14002d8e0:	mov    QWORD PTR [rsp+0x18],rbx
   14002d8e5:	mov    QWORD PTR [rsp+0x20],rsi
   14002d8ea:	push   rdi
   14002d8eb:	mov    esi,DWORD PTR [rcx+0x10]
   14002d8ee:	mov    ebx,r8d
   14002d8f1:	mov    rdi,rdx
   14002d8f4:	cmp    esi,0x1
   14002d8f7:	mov    r8,rcx
   14002d8fa:	jl     0x14002da34
   14002d900:	mov    r9,QWORD PTR [rcx+0x8]
   14002d904:	mov    r11d,DWORD PTR [rcx]
   14002d907:	mov    r10d,DWORD PTR [rcx+0x4]
   14002d90b:	mov    QWORD PTR [rsp+0x10],rbp
   14002d910:	mov    QWORD PTR [rsp+0x18],r12
   14002d915:	cmp    r9,rdx
   14002d918:	jae    0x14002da1f
   14002d91e:	lea    rbp,[rip+0xf28b]        # 0x14003cbb0
   14002d925:	mov    r12d,0x1
   14002d92b:	nop    DWORD PTR [rax+rax*1+0x0]
   14002d930:	movzx  edx,BYTE PTR [r9]
   14002d934:	mov    ecx,edx
   14002d936:	test   edx,edx
   14002d938:	je     0x14002da2a
   14002d93e:	sub    ecx,0x9
   14002d941:	je     0x14002da05
   14002d947:	sub    ecx,r12d
   14002d94a:	je     0x14002d9f1
   14002d950:	sub    ecx,0x3
   14002d953:	je     0x14002d9dd
   14002d959:	sub    ecx,0xe2
   14002d95f:	je     0x14002d989
   14002d961:	cmp    ebx,r12d
   14002d964:	jne    0x14002d97e
   14002d966:	mov    ecx,DWORD PTR [rbp+rdx*4+0x0]
   14002d96a:	test   ecx,ecx
   14002d96c:	cmove  ecx,r12d
   14002d970:	movsxd rax,ecx
   14002d973:	add    r9,rax
   14002d976:	inc    r10d
   14002d979:	jmp    0x14002da16
   14002d97e:	inc    r9
   14002d981:	inc    r10d
   14002d984:	jmp    0x14002da16
   14002d989:	cmp    ebx,r12d
   14002d98c:	jne    0x14002d9d5
   14002d98e:	movzx  eax,BYTE PTR [r9+0x1]
   14002d993:	test   al,al
   14002d995:	je     0x14002da16
   14002d997:	movzx  ecx,BYTE PTR [r9+0x2]
   14002d99c:	test   cl,cl
   14002d99e:	je     0x14002da16
   14002d9a0:	cmp    al,0xbb
   14002d9a2:	jne    0x14002d9af
   14002d9a4:	cmp    cl,0xbf
   14002d9a7:	jne    0x14002d9af
   14002d9a9:	add    r9,0x3
   14002d9ad:	jmp    0x14002da16
   14002d9af:	cmp    al,0xbf
   14002d9b1:	jne    0x14002d9be
   14002d9b3:	cmp    cl,0xbe
   14002d9b6:	jne    0x14002d9be
   14002d9b8:	add    r9,0x3
   14002d9bc:	jmp    0x14002da16
   14002d9be:	cmp    al,0xbf
   14002d9c0:	jne    0x14002d9cc
   14002d9c2:	cmp    cl,al
   14002d9c4:	jne    0x14002d9cc
   14002d9c6:	add    r9,0x3
   14002d9ca:	jmp    0x14002da16
   14002d9cc:	add    r9,0x3
   14002d9d0:	inc    r10d
   14002d9d3:	jmp    0x14002da16
   14002d9d5:	inc    r9
   14002d9d8:	inc    r10d
   14002d9db:	jmp    0x14002da16
   14002d9dd:	inc    r9
   14002d9e0:	inc    r11d
   14002d9e3:	xor    r10d,r10d
   14002d9e6:	cmp    BYTE PTR [r9],0xa
   14002d9ea:	jne    0x14002da16
   14002d9ec:	inc    r9
   14002d9ef:	jmp    0x14002da16
   14002d9f1:	inc    r9
   14002d9f4:	inc    r11d
   14002d9f7:	xor    r10d,r10d
   14002d9fa:	cmp    BYTE PTR [r9],0xd
   14002d9fe:	jne    0x14002da16
   14002da00:	inc    r9
   14002da03:	jmp    0x14002da16
   14002da05:	mov    eax,r10d
   14002da08:	inc    r9
   14002da0b:	cdq    
   14002da0c:	idiv   esi
   14002da0e:	lea    r10d,[rax+0x1]
   14002da12:	imul   r10d,esi
   14002da16:	cmp    r9,rdi
   14002da19:	jb     0x14002d930
   14002da1f:	mov    DWORD PTR [r8],r11d
   14002da22:	mov    DWORD PTR [r8+0x4],r10d
   14002da26:	mov    QWORD PTR [r8+0x8],r9
   14002da2a:	mov    rbp,QWORD PTR [rsp+0x10]
   14002da2f:	mov    r12,QWORD PTR [rsp+0x18]
   14002da34:	mov    rbx,QWORD PTR [rsp+0x20]
   14002da39:	mov    rsi,QWORD PTR [rsp+0x28]
   14002da3e:	pop    rdi
   14002da3f:	ret    
   14002da40:	mov    QWORD PTR [rsp+0x8],rbx
   14002da45:	push   rdi
   14002da46:	sub    rsp,0x20
   14002da4a:	mov    rbx,rcx
   14002da4d:	test   rcx,rcx
   14002da50:	je     0x14002db05
   14002da56:	movzx  edi,BYTE PTR [rcx]
   14002da59:	test   dil,dil
   14002da5c:	je     0x14002db05
   14002da62:	cmp    edx,0x1
   14002da65:	jne    0x14002dad2
   14002da67:	cmp    dil,0xef
   14002da6b:	jne    0x14002daa0
   14002da6d:	movzx  eax,BYTE PTR [rbx+0x1]
   14002da71:	cmp    al,0xbb
   14002da73:	jne    0x14002da81
   14002da75:	cmp    BYTE PTR [rbx+0x2],0xbf
   14002da79:	jne    0x14002da81
   14002da7b:	add    rbx,0x3
   14002da7f:	jmp    0x14002dabc
   14002da81:	cmp    al,0xbf
   14002da83:	jne    0x14002daa0
   14002da85:	cmp    BYTE PTR [rbx+0x2],0xbe
   14002da89:	jne    0x14002da91
   14002da8b:	add    rbx,0x3
   14002da8f:	jmp    0x14002dabc
   14002da91:	cmp    al,0xbf
   14002da93:	jne    0x14002daa0
   14002da95:	cmp    BYTE PTR [rbx+0x2],al
   14002da98:	jne    0x14002daa0
   14002da9a:	add    rbx,0x3
   14002da9e:	jmp    0x14002dabc
   14002daa0:	movzx  ecx,dil
   14002daa4:	call   0x1400235ec
   14002daa9:	test   eax,eax
   14002daab:	jne    0x14002dab9
   14002daad:	cmp    dil,0xa
   14002dab1:	je     0x14002dab9
   14002dab3:	cmp    dil,0xd
   14002dab7:	jne    0x14002daf7
   14002dab9:	inc    rbx
   14002dabc:	mov    dil,BYTE PTR [rbx]
   14002dabf:	test   dil,dil
   14002dac2:	jne    0x14002da67
   14002dac4:	mov    rax,rbx
   14002dac7:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dacc:	add    rsp,0x20
   14002dad0:	pop    rdi
   14002dad1:	ret    
   14002dad2:	movzx  ecx,dil
   14002dad6:	call   0x1400235ec
   14002dadb:	test   eax,eax
   14002dadd:	jne    0x14002daeb
   14002dadf:	cmp    dil,0xa
   14002dae3:	je     0x14002daeb
   14002dae5:	cmp    dil,0xd
   14002dae9:	jne    0x14002daf7
   14002daeb:	mov    dil,BYTE PTR [rbx+0x1]
   14002daef:	inc    rbx
   14002daf2:	test   dil,dil
   14002daf5:	jne    0x14002dad2
   14002daf7:	mov    rax,rbx
   14002dafa:	mov    rbx,QWORD PTR [rsp+0x30]
   14002daff:	add    rsp,0x20
   14002db03:	pop    rdi
   14002db04:	ret    
   14002db05:	xor    eax,eax
   14002db07:	mov    rbx,QWORD PTR [rsp+0x30]
   14002db0c:	add    rsp,0x20
   14002db10:	pop    rdi
   14002db11:	ret    
   14002db12:	int3   
   14002db13:	int3   
   14002db14:	int3   
   14002db15:	int3   
   14002db16:	int3   
   14002db17:	int3   
   14002db18:	int3   
   14002db19:	int3   
   14002db1a:	int3   
   14002db1b:	int3   
   14002db1c:	int3   
   14002db1d:	int3   
   14002db1e:	int3   
   14002db1f:	int3   
   14002db20:	mov    QWORD PTR [rsp+0x10],rbx
   14002db25:	mov    QWORD PTR [rsp+0x18],rbp
   14002db2a:	push   rdi
   14002db2b:	sub    rsp,0x20
   14002db2f:	mov    ebp,r9d
   14002db32:	mov    rdi,rdx
   14002db35:	mov    rbx,rcx
   14002db38:	test   rcx,rcx
   14002db3b:	je     0x14002dbe6
   14002db41:	cmp    BYTE PTR [rcx],0x0
   14002db44:	je     0x14002dbe6
   14002db4a:	mov    QWORD PTR [rsp+0x30],rsi
   14002db4f:	test   r8b,r8b
   14002db52:	je     0x14002dbc7
   14002db54:	cmp    BYTE PTR [rdi],0x0
   14002db57:	je     0x14002dbb0
   14002db59:	movsx  esi,BYTE PTR [rbx]
   14002db5c:	cmp    ebp,0x1
   14002db5f:	jne    0x14002db74
   14002db61:	cmp    esi,0x80
   14002db67:	jge    0x14002db7d
   14002db69:	mov    ecx,esi
   14002db6b:	call   0x140014c88
   14002db70:	mov    esi,eax
   14002db72:	jmp    0x14002db7d
   14002db74:	mov    ecx,esi
   14002db76:	call   0x140014c88
   14002db7b:	mov    esi,eax
   14002db7d:	movsx  eax,BYTE PTR [rdi]
   14002db80:	cmp    ebp,0x1
   14002db83:	jne    0x14002db95
   14002db85:	cmp    eax,0x80
   14002db8a:	jge    0x14002db9c
   14002db8c:	mov    ecx,eax
   14002db8e:	call   0x140014c88
   14002db93:	jmp    0x14002db9c
   14002db95:	mov    ecx,eax
   14002db97:	call   0x140014c88
   14002db9c:	cmp    esi,eax
   14002db9e:	jne    0x14002dbab
   14002dba0:	inc    rbx
   14002dba3:	inc    rdi
   14002dba6:	cmp    BYTE PTR [rbx],0x0
   14002dba9:	jne    0x14002db54
   14002dbab:	cmp    BYTE PTR [rdi],0x0
   14002dbae:	jne    0x14002dbe2
   14002dbb0:	mov    al,0x1
   14002dbb2:	mov    rsi,QWORD PTR [rsp+0x30]
   14002dbb7:	mov    rbx,QWORD PTR [rsp+0x38]
   14002dbbc:	mov    rbp,QWORD PTR [rsp+0x40]
   14002dbc1:	add    rsp,0x20
   14002dbc5:	pop    rdi
   14002dbc6:	ret    
   14002dbc7:	movzx  eax,BYTE PTR [rdi]
   14002dbca:	test   al,al
   14002dbcc:	je     0x14002dbb0
   14002dbce:	cmp    BYTE PTR [rbx],al
   14002dbd0:	jne    0x14002dbdd
   14002dbd2:	inc    rbx
   14002dbd5:	inc    rdi
   14002dbd8:	cmp    BYTE PTR [rbx],0x0
   14002dbdb:	jne    0x14002dbc7
   14002dbdd:	cmp    BYTE PTR [rdi],0x0
   14002dbe0:	je     0x14002dbb0
   14002dbe2:	xor    al,al
   14002dbe4:	jmp    0x14002dbb2
   14002dbe6:	mov    rbx,QWORD PTR [rsp+0x38]
   14002dbeb:	mov    rbp,QWORD PTR [rsp+0x40]
   14002dbf0:	xor    al,al
   14002dbf2:	add    rsp,0x20
   14002dbf6:	pop    rdi
   14002dbf7:	ret    
   14002dbf8:	int3   
   14002dbf9:	int3   
   14002dbfa:	int3   
   14002dbfb:	int3   
   14002dbfc:	int3   
   14002dbfd:	int3   
   14002dbfe:	int3   
   14002dbff:	int3   
   14002dc00:	movzx  eax,dl
   14002dc03:	lea    rdx,[rcx+0x10]
   14002dc07:	mov    ecx,eax
   14002dc09:	jmp    0x1400320d8
   14002dc0e:	int3   
   14002dc0f:	int3   
   14002dc10:	mov    QWORD PTR [rsp+0x10],rbx
   14002dc15:	push   rsi
   14002dc16:	sub    rsp,0x20
   14002dc1a:	mov    rsi,r8
   14002dc1d:	mov    rbx,rdx
   14002dc20:	cmp    rdx,r8
   14002dc23:	je     0x14002dc4b
   14002dc25:	mov    QWORD PTR [rsp+0x30],rdi
   14002dc2a:	lea    rdi,[rcx+0x10]
   14002dc2e:	xchg   ax,ax
   14002dc30:	movzx  ecx,BYTE PTR [rbx]
   14002dc33:	mov    rdx,rdi
   14002dc36:	call   0x1400320d8
   14002dc3b:	inc    rbx
   14002dc3e:	mov    BYTE PTR [rbx-0x1],al
   14002dc41:	cmp    rbx,rsi
   14002dc44:	jne    0x14002dc30
   14002dc46:	mov    rdi,QWORD PTR [rsp+0x30]
   14002dc4b:	mov    rax,rbx
   14002dc4e:	mov    rbx,QWORD PTR [rsp+0x38]
   14002dc53:	add    rsp,0x20
   14002dc57:	pop    rsi
   14002dc58:	ret    
   14002dc59:	int3   
   14002dc5a:	int3   
   14002dc5b:	int3   
   14002dc5c:	int3   
   14002dc5d:	int3   
   14002dc5e:	int3   
   14002dc5f:	int3   
   14002dc60:	movzx  eax,dl
   14002dc63:	lea    rdx,[rcx+0x10]
   14002dc67:	mov    ecx,eax
   14002dc69:	jmp    0x140032534
   14002dc6e:	int3   
   14002dc6f:	int3   
   14002dc70:	mov    QWORD PTR [rsp+0x10],rbx
   14002dc75:	push   rsi
   14002dc76:	sub    rsp,0x20
   14002dc7a:	mov    rsi,r8
   14002dc7d:	mov    rbx,rdx
   14002dc80:	cmp    rdx,r8
   14002dc83:	je     0x14002dcab
   14002dc85:	mov    QWORD PTR [rsp+0x30],rdi
   14002dc8a:	lea    rdi,[rcx+0x10]
   14002dc8e:	xchg   ax,ax
   14002dc90:	movzx  ecx,BYTE PTR [rbx]
   14002dc93:	mov    rdx,rdi
   14002dc96:	call   0x140032534
   14002dc9b:	inc    rbx
   14002dc9e:	mov    BYTE PTR [rbx-0x1],al
   14002dca1:	cmp    rbx,rsi
   14002dca4:	jne    0x14002dc90
   14002dca6:	mov    rdi,QWORD PTR [rsp+0x30]
   14002dcab:	mov    rax,rbx
   14002dcae:	mov    rbx,QWORD PTR [rsp+0x38]
   14002dcb3:	add    rsp,0x20
   14002dcb7:	pop    rsi
   14002dcb8:	ret    
   14002dcb9:	int3   
   14002dcba:	int3   
   14002dcbb:	int3   
   14002dcbc:	int3   
   14002dcbd:	int3   
   14002dcbe:	int3   
   14002dcbf:	int3   
   14002dcc0:	mov    al,dl
   14002dcc2:	ret    
   14002dcc3:	int3   
   14002dcc4:	int3   
   14002dcc5:	int3   
   14002dcc6:	int3   
   14002dcc7:	int3   
   14002dcc8:	int3   
   14002dcc9:	int3   
   14002dcca:	int3   
   14002dccb:	int3   
   14002dccc:	int3   
   14002dccd:	int3   
   14002dcce:	int3   
   14002dccf:	int3   
   14002dcd0:	sub    rsp,0x38
   14002dcd4:	mov    r10,QWORD PTR [rcx]
   14002dcd7:	mov    rax,r8
   14002dcda:	sub    rax,rdx
   14002dcdd:	mov    QWORD PTR [rsp+0x20],rax
   14002dce2:	call   QWORD PTR [r10+0x38]
   14002dce6:	add    rsp,0x38
   14002dcea:	ret    
   14002dceb:	int3   
   14002dcec:	int3   
   14002dced:	int3   
   14002dcee:	int3   
   14002dcef:	int3   
   14002dcf0:	mov    QWORD PTR [rsp+0x8],rbx
   14002dcf5:	mov    QWORD PTR [rsp+0x10],rsi
   14002dcfa:	mov    QWORD PTR [rsp+0x18],rdi
   14002dcff:	push   r12
   14002dd01:	sub    rsp,0x20
   14002dd05:	mov    rbx,r8
   14002dd08:	mov    r12,r9
   14002dd0b:	mov    rdi,r8
   14002dd0e:	sub    rbx,rdx
   14002dd11:	mov    rsi,rdx
   14002dd14:	cmp    QWORD PTR [rsp+0x50],rbx
   14002dd19:	jae    0x14002dd20
   14002dd1b:	call   0x140014a30
   14002dd20:	mov    rdx,QWORD PTR [rsp+0x50]
   14002dd25:	mov    r9,rbx
   14002dd28:	mov    r8,rsi
   14002dd2b:	mov    rcx,r12
   14002dd2e:	call   0x140014510
   14002dd33:	mov    rbx,QWORD PTR [rsp+0x30]
   14002dd38:	mov    rsi,QWORD PTR [rsp+0x38]
   14002dd3d:	mov    rax,rdi
   14002dd40:	mov    rdi,QWORD PTR [rsp+0x40]
   14002dd45:	add    rsp,0x20
   14002dd49:	pop    r12
   14002dd4b:	ret    
   14002dd4c:	int3   
   14002dd4d:	int3   
   14002dd4e:	int3   
   14002dd4f:	int3   
   14002dd50:	sub    rsp,0x38
   14002dd54:	mov    r10,QWORD PTR [rcx]
   14002dd57:	mov    rax,r8
   14002dd5a:	sub    rax,rdx
   14002dd5d:	mov    QWORD PTR [rsp+0x28],rax
   14002dd62:	mov    rax,QWORD PTR [rsp+0x60]
   14002dd67:	mov    QWORD PTR [rsp+0x20],rax
   14002dd6c:	call   QWORD PTR [r10+0x50]
   14002dd70:	add    rsp,0x38
   14002dd74:	ret    
   14002dd75:	int3   
   14002dd76:	int3   
   14002dd77:	int3   
   14002dd78:	int3   
   14002dd79:	int3   
   14002dd7a:	int3   
   14002dd7b:	int3   
   14002dd7c:	int3   
   14002dd7d:	int3   
   14002dd7e:	int3   
   14002dd7f:	int3   
   14002dd80:	mov    QWORD PTR [rsp+0x8],rbx
   14002dd85:	mov    QWORD PTR [rsp+0x10],rsi
   14002dd8a:	push   rdi
   14002dd8b:	sub    rsp,0x20
   14002dd8f:	mov    rbx,r8
   14002dd92:	mov    rdi,r8
   14002dd95:	mov    rsi,rdx
   14002dd98:	sub    rbx,rdx
   14002dd9b:	cmp    QWORD PTR [rsp+0x58],rbx
   14002dda0:	jae    0x14002dda7
   14002dda2:	call   0x140014a30
   14002dda7:	mov    rdx,QWORD PTR [rsp+0x58]
   14002ddac:	mov    rcx,QWORD PTR [rsp+0x50]
   14002ddb1:	mov    r9,rbx
   14002ddb4:	mov    r8,rsi
   14002ddb7:	call   0x140014510
   14002ddbc:	mov    rbx,QWORD PTR [rsp+0x30]
   14002ddc1:	mov    rsi,QWORD PTR [rsp+0x38]
   14002ddc6:	mov    rax,rdi
   14002ddc9:	add    rsp,0x20
   14002ddcd:	pop    rdi
   14002ddce:	ret    
   14002ddcf:	int3   
   14002ddd0:	mov    QWORD PTR [rsp+0x8],rbx
   14002ddd5:	push   rdi
   14002ddd6:	sub    rsp,0x20
   14002ddda:	lea    rax,[rip+0xf1e7]        # 0x14003cfc8
   14002dde1:	mov    edi,edx
   14002dde3:	mov    rbx,rcx
   14002dde6:	mov    QWORD PTR [rcx],rax
   14002dde9:	mov    eax,DWORD PTR [rcx+0x20]
   14002ddec:	test   eax,eax
   14002ddee:	jle    0x14002ddfb
   14002ddf0:	mov    rcx,QWORD PTR [rcx+0x18]
   14002ddf4:	call   0x140014f10
   14002ddf9:	jmp    0x14002de06
   14002ddfb:	jns    0x14002de06
   14002ddfd:	mov    rcx,QWORD PTR [rcx+0x18]
   14002de01:	call   0x1400062d4
   14002de06:	lea    rax,[rip+0xf1ab]        # 0x14003cfb8
   14002de0d:	mov    QWORD PTR [rbx],rax
   14002de10:	test   dil,0x1
   14002de14:	je     0x14002de1e
   14002de16:	mov    rcx,rbx
   14002de19:	call   0x1400062d4
   14002de1e:	mov    rax,rbx
   14002de21:	mov    rbx,QWORD PTR [rsp+0x30]
   14002de26:	add    rsp,0x20
   14002de2a:	pop    rdi
   14002de2b:	ret    
   14002de2c:	int3   
   14002de2d:	int3   
   14002de2e:	int3   
   14002de2f:	int3   
   14002de30:	sub    rsp,0x28
   14002de34:	mov    rdx,QWORD PTR [rcx]
   14002de37:	mov    rax,QWORD PTR [rdx]
   14002de3a:	movsxd rcx,DWORD PTR [rax+0x4]
   14002de3e:	mov    rcx,QWORD PTR [rcx+rdx*1+0x48]
   14002de43:	test   rcx,rcx
   14002de46:	je     0x14002de51
   14002de48:	add    rcx,0x8
   14002de4c:	call   0x1400320d0
   14002de51:	add    rsp,0x28
   14002de55:	ret    
   14002de56:	int3   
   14002de57:	int3   
   14002de58:	int3   
   14002de59:	int3   
   14002de5a:	int3   
   14002de5b:	int3   
   14002de5c:	int3   
   14002de5d:	int3   
   14002de5e:	int3   
   14002de5f:	int3   
   14002de60:	mov    QWORD PTR [rsp+0x8],rbx
   14002de65:	mov    QWORD PTR [rsp+0x10],rbp
   14002de6a:	mov    QWORD PTR [rsp+0x18],rsi
   14002de6f:	push   rdi
   14002de70:	sub    rsp,0x20
   14002de74:	xor    ebp,ebp
   14002de76:	mov    rbx,rcx
   14002de79:	mov    rdi,rbp
   14002de7c:	cmp    QWORD PTR [rcx+0x50],rbp
   14002de80:	jbe    0x14002dec6
   14002de82:	cmp    rdi,QWORD PTR [rbx+0x50]
   14002de86:	jbe    0x14002de8d
   14002de88:	call   0x140014a30
   14002de8d:	cmp    QWORD PTR [rbx+0x58],0x10
   14002de92:	jb     0x14002de9a
   14002de94:	mov    rax,QWORD PTR [rbx+0x40]
   14002de98:	jmp    0x14002de9e
   14002de9a:	lea    rax,[rbx+0x40]
   14002de9e:	movzx  esi,BYTE PTR [rax+rdi*1]
   14002dea2:	mov    ecx,esi
   14002dea4:	call   0x1400235ec
   14002dea9:	test   eax,eax
   14002deab:	jne    0x14002deb9
   14002dead:	cmp    sil,0xa
   14002deb1:	je     0x14002deb9
   14002deb3:	cmp    sil,0xd
   14002deb7:	jne    0x14002dedd
   14002deb9:	inc    ebp
   14002debb:	inc    rdi
   14002debe:	mov    eax,ebp
   14002dec0:	cmp    rax,QWORD PTR [rbx+0x50]
   14002dec4:	jb     0x14002de82
   14002dec6:	mov    al,0x1
   14002dec8:	mov    rbx,QWORD PTR [rsp+0x30]
   14002decd:	mov    rbp,QWORD PTR [rsp+0x38]
   14002ded2:	mov    rsi,QWORD PTR [rsp+0x40]
   14002ded7:	add    rsp,0x20
   14002dedb:	pop    rdi
   14002dedc:	ret    
   14002dedd:	xor    al,al
   14002dedf:	jmp    0x14002dec8
   14002dee1:	int3   
   14002dee2:	int3   
   14002dee3:	int3   
   14002dee4:	int3   
   14002dee5:	int3   
   14002dee6:	int3   
   14002dee7:	int3   
   14002dee8:	int3   
   14002dee9:	int3   
   14002deea:	int3   
   14002deeb:	int3   
   14002deec:	int3   
   14002deed:	int3   
   14002deee:	int3   
   14002deef:	int3   
   14002def0:	rex push rbx
   14002def2:	sub    rsp,0x20
   14002def6:	mov    rax,QWORD PTR [rcx+0x40]
   14002defa:	mov    rbx,rcx
   14002defd:	mov    rcx,QWORD PTR [rax]
   14002df00:	test   rcx,rcx
   14002df03:	je     0x14002df4a
   14002df05:	mov    rax,QWORD PTR [rbx+0x58]
   14002df09:	cmp    DWORD PTR [rax],0x1
   14002df0c:	jle    0x14002df27
   14002df0e:	dec    DWORD PTR [rax]
   14002df10:	mov    rax,QWORD PTR [rbx+0x40]
   14002df14:	inc    QWORD PTR [rax]
   14002df17:	mov    rax,QWORD PTR [rbx+0x40]
   14002df1b:	mov    rcx,QWORD PTR [rax]
   14002df1e:	movzx  eax,BYTE PTR [rcx]
   14002df21:	add    rsp,0x20
   14002df25:	pop    rbx
   14002df26:	ret    
   14002df27:	test   rcx,rcx
   14002df2a:	je     0x14002df4a
   14002df2c:	mov    rax,QWORD PTR [rbx+0x58]
   14002df30:	cmp    DWORD PTR [rax],0x0
   14002df33:	jle    0x14002df4a
   14002df35:	dec    DWORD PTR [rax]
   14002df37:	mov    rcx,QWORD PTR [rbx+0x40]
   14002df3b:	mov    rdx,QWORD PTR [rcx]
   14002df3e:	lea    rax,[rdx+0x1]
   14002df42:	mov    QWORD PTR [rcx],rax
   14002df45:	movzx  eax,BYTE PTR [rdx]
   14002df48:	jmp    0x14002df53
   14002df4a:	mov    rax,QWORD PTR [rbx]
   14002df4d:	mov    rcx,rbx
   14002df50:	call   QWORD PTR [rax+0x28]
   14002df53:	cmp    eax,0xffffffff
   14002df56:	jne    0x14002df60
   14002df58:	or     eax,eax
   14002df5a:	add    rsp,0x20
   14002df5e:	pop    rbx
   14002df5f:	ret    
   14002df60:	mov    rcx,QWORD PTR [rbx+0x40]
   14002df64:	cmp    QWORD PTR [rcx],0x0
   14002df68:	je     0x14002df7f
   14002df6a:	mov    rax,QWORD PTR [rbx+0x58]
   14002df6e:	cmp    DWORD PTR [rax],0x0
   14002df71:	jle    0x14002df7f
   14002df73:	mov    rax,QWORD PTR [rcx]
   14002df76:	movzx  eax,BYTE PTR [rax]
   14002df79:	add    rsp,0x20
   14002df7d:	pop    rbx
   14002df7e:	ret    
   14002df7f:	mov    rax,QWORD PTR [rbx]
   14002df82:	mov    rcx,rbx
   14002df85:	add    rsp,0x20
   14002df89:	pop    rbx
   14002df8a:	rex.W jmp QWORD PTR [rax+0x20]
   14002df8e:	int3   
   14002df8f:	int3   
   14002df90:	mov    QWORD PTR [rsp+0x8],rcx
   14002df95:	push   rdi
   14002df96:	sub    rsp,0x30
   14002df9a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002dfa3:	mov    QWORD PTR [rsp+0x48],rbx
   14002dfa8:	mov    rbx,rdx
   14002dfab:	mov    rdi,rcx
   14002dfae:	xor    edx,edx
   14002dfb0:	call   0x140032304
   14002dfb5:	nop
   14002dfb6:	mov    QWORD PTR [rdi+0x28],0xf
   14002dfbe:	xor    eax,eax
   14002dfc0:	mov    QWORD PTR [rdi+0x20],rax
   14002dfc4:	mov    BYTE PTR [rdi+0x10],al
   14002dfc7:	mov    QWORD PTR [rdi+0x50],0xf
   14002dfcf:	mov    QWORD PTR [rdi+0x48],rax
   14002dfd3:	mov    BYTE PTR [rdi+0x38],al
   14002dfd6:	mov    QWORD PTR [rdi+0x78],0xf
   14002dfde:	mov    QWORD PTR [rdi+0x70],rax
   14002dfe2:	mov    BYTE PTR [rdi+0x60],al
   14002dfe5:	mov    QWORD PTR [rdi+0xa0],0xf
   14002dff0:	mov    QWORD PTR [rdi+0x98],rax
   14002dff7:	mov    BYTE PTR [rdi+0x88],al
   14002dffd:	mov    rdx,rbx
   14002e000:	mov    rcx,rdi
   14002e003:	call   0x140032494
   14002e008:	nop
   14002e009:	mov    rax,rdi
   14002e00c:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e011:	add    rsp,0x30
   14002e015:	pop    rdi
   14002e016:	ret    
   14002e017:	int3   
   14002e018:	int3   
   14002e019:	int3   
   14002e01a:	int3   
   14002e01b:	int3   
   14002e01c:	int3   
   14002e01d:	int3   
   14002e01e:	int3   
   14002e01f:	int3   
   14002e020:	mov    QWORD PTR [rsp+0x8],rcx
   14002e025:	push   rdi
   14002e026:	sub    rsp,0x30
   14002e02a:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e033:	mov    QWORD PTR [rsp+0x48],rbx
   14002e038:	mov    rbx,rcx
   14002e03b:	call   0x14003246c
   14002e040:	nop
   14002e041:	cmp    QWORD PTR [rbx+0xa0],0x10
   14002e049:	jb     0x14002e057
   14002e04b:	mov    rcx,QWORD PTR [rbx+0x88]
   14002e052:	call   0x1400062d4
   14002e057:	mov    QWORD PTR [rbx+0xa0],0xf
   14002e062:	xor    edi,edi
   14002e064:	mov    QWORD PTR [rbx+0x98],rdi
   14002e06b:	mov    BYTE PTR [rbx+0x88],dil
   14002e072:	cmp    QWORD PTR [rbx+0x78],0x10
   14002e077:	jb     0x14002e082
   14002e079:	mov    rcx,QWORD PTR [rbx+0x60]
   14002e07d:	call   0x1400062d4
   14002e082:	mov    QWORD PTR [rbx+0x78],0xf
   14002e08a:	mov    QWORD PTR [rbx+0x70],rdi
   14002e08e:	mov    BYTE PTR [rbx+0x60],0x0
   14002e092:	cmp    QWORD PTR [rbx+0x50],0x10
   14002e097:	jb     0x14002e0a2
   14002e099:	mov    rcx,QWORD PTR [rbx+0x38]
   14002e09d:	call   0x1400062d4
   14002e0a2:	mov    QWORD PTR [rbx+0x50],0xf
   14002e0aa:	mov    QWORD PTR [rbx+0x48],rdi
   14002e0ae:	mov    BYTE PTR [rbx+0x38],0x0
   14002e0b2:	cmp    QWORD PTR [rbx+0x28],0x10
   14002e0b7:	jb     0x14002e0c2
   14002e0b9:	mov    rcx,QWORD PTR [rbx+0x10]
   14002e0bd:	call   0x1400062d4
   14002e0c2:	mov    QWORD PTR [rbx+0x28],0xf
   14002e0ca:	mov    QWORD PTR [rbx+0x20],rdi
   14002e0ce:	mov    BYTE PTR [rbx+0x10],0x0
   14002e0d2:	mov    rcx,rbx
   14002e0d5:	mov    rbx,QWORD PTR [rsp+0x48]
   14002e0da:	add    rsp,0x30
   14002e0de:	pop    rdi
   14002e0df:	jmp    0x140032334
   14002e0e4:	int3   
   14002e0e5:	int3   
   14002e0e6:	int3   
   14002e0e7:	int3   
   14002e0e8:	int3   
   14002e0e9:	int3   
   14002e0ea:	int3   
   14002e0eb:	int3   
   14002e0ec:	int3   
   14002e0ed:	int3   
   14002e0ee:	int3   
   14002e0ef:	int3   
   14002e0f0:	rex push rbx
   14002e0f2:	push   rbp
   14002e0f3:	push   rsi
   14002e0f4:	push   rdi
   14002e0f5:	push   r12
   14002e0f7:	push   r13
   14002e0f9:	push   r14
   14002e0fb:	sub    rsp,0x50
   14002e0ff:	mov    rax,QWORD PTR [rip+0x1acba]        # 0x140048dc0
   14002e106:	xor    rax,rsp
   14002e109:	mov    QWORD PTR [rsp+0x48],rax
   14002e10e:	xor    ebx,ebx
   14002e110:	mov    r14d,r9d
   14002e113:	mov    r13,r8
   14002e116:	mov    DWORD PTR [r8],ebx
   14002e119:	movzx  eax,BYTE PTR [rcx+0x1]
   14002e11d:	mov    r12,rdx
   14002e120:	mov    rbp,rcx
   14002e123:	mov    QWORD PTR [rsp+0x40],0xf
   14002e12c:	mov    QWORD PTR [rsp+0x38],rbx
   14002e131:	mov    BYTE PTR [rsp+0x28],bl
   14002e135:	test   al,al
   14002e137:	je     0x14002e296
   14002e13d:	cmp    al,0x23
   14002e13f:	jne    0x14002e296
   14002e145:	movzx  eax,BYTE PTR [rcx+0x2]
   14002e149:	add    rcx,0x2
   14002e14d:	test   al,al
   14002e14f:	je     0x14002e296
   14002e155:	lea    edi,[rbx+0x1]
   14002e158:	cmp    al,0x78
   14002e15a:	jne    0x14002e205
   14002e160:	cmp    BYTE PTR [rbp+0x3],bl
   14002e163:	lea    rcx,[rbp+0x3]
   14002e167:	je     0x14002e1fe
   14002e16d:	lea    edx,[rbx+0x3b]
   14002e170:	call   0x14001c774
   14002e175:	mov    r11,rax
   14002e178:	test   rax,rax
   14002e17b:	je     0x14002e1ec
   14002e17d:	cmp    BYTE PTR [rax],bl
   14002e17f:	je     0x14002e1ec
   14002e181:	movzx  ecx,BYTE PTR [r11-0x1]
   14002e186:	dec    r11
   14002e189:	mov    r10,rax
   14002e18c:	sub    r10,rbp
   14002e18f:	cmp    cl,0x78
   14002e192:	je     0x14002e256
   14002e198:	cmp    cl,0x30
   14002e19b:	jl     0x14002e1af
   14002e19d:	cmp    cl,0x39
   14002e1a0:	jg     0x14002e1af
   14002e1a2:	movsx  eax,cl
   14002e1a5:	sub    eax,0x30
   14002e1a8:	imul   eax,edi
   14002e1ab:	add    ebx,eax
   14002e1ad:	jmp    0x14002e1db
   14002e1af:	cmp    cl,0x61
   14002e1b2:	jl     0x14002e1c6
   14002e1b4:	cmp    cl,0x66
   14002e1b7:	jg     0x14002e1c6
   14002e1b9:	movsx  eax,cl
   14002e1bc:	sub    eax,0x57
   14002e1bf:	imul   eax,edi
   14002e1c2:	add    ebx,eax
   14002e1c4:	jmp    0x14002e1db
   14002e1c6:	cmp    cl,0x41
   14002e1c9:	jl     0x14002e1ec
   14002e1cb:	cmp    cl,0x46
   14002e1ce:	jg     0x14002e1ec
   14002e1d0:	movsx  eax,cl
   14002e1d3:	sub    eax,0x37
   14002e1d6:	imul   eax,edi
   14002e1d9:	add    ebx,eax
   14002e1db:	mov    cl,BYTE PTR [r11-0x1]
   14002e1df:	dec    r11
   14002e1e2:	shl    edi,0x4
   14002e1e5:	cmp    cl,0x78
   14002e1e8:	jne    0x14002e198
   14002e1ea:	jmp    0x14002e256
   14002e1ec:	cmp    QWORD PTR [rsp+0x40],0x10
   14002e1f2:	jb     0x14002e1fe
   14002e1f4:	mov    rcx,QWORD PTR [rsp+0x28]
   14002e1f9:	call   0x1400062d4
   14002e1fe:	xor    eax,eax
   14002e200:	jmp    0x14002e32b
   14002e205:	mov    edx,0x3b
   14002e20a:	call   0x14001c774
   14002e20f:	mov    r11,rax
   14002e212:	test   rax,rax
   14002e215:	je     0x14002e1ec
   14002e217:	cmp    BYTE PTR [rax],bl
   14002e219:	je     0x14002e1ec
   14002e21b:	movzx  ecx,BYTE PTR [r11-0x1]
   14002e220:	dec    r11
   14002e223:	mov    r10,rax
   14002e226:	sub    r10,rbp
   14002e229:	cmp    cl,0x23
   14002e22c:	je     0x14002e256
   14002e22e:	xchg   ax,ax
   14002e230:	cmp    cl,0x30
   14002e233:	jl     0x14002e1ec
   14002e235:	cmp    cl,0x39
   14002e238:	jg     0x14002e1ec
   14002e23a:	movsx  eax,cl
   14002e23d:	mov    cl,BYTE PTR [r11-0x1]
   14002e241:	dec    r11
   14002e244:	sub    eax,0x30
   14002e247:	imul   eax,edi
   14002e24a:	lea    edi,[rdi+rdi*4]
   14002e24d:	add    edi,edi
   14002e24f:	add    ebx,eax
   14002e251:	cmp    cl,0x23
   14002e254:	jne    0x14002e230
   14002e256:	cmp    r14d,0x1
   14002e25a:	jne    0x14002e26b
   14002e25c:	mov    r8,r13
   14002e25f:	mov    rdx,r12
   14002e262:	mov    ecx,ebx
   14002e264:	call   0x14002d7b0
   14002e269:	jmp    0x14002e277
   14002e26b:	mov    BYTE PTR [r12],bl
   14002e26f:	mov    DWORD PTR [r13+0x0],0x1
   14002e277:	cmp    QWORD PTR [rsp+0x40],0x10
   14002e27d:	lea    rbx,[r10+rbp*1+0x1]
   14002e282:	jb     0x14002e28e
   14002e284:	mov    rcx,QWORD PTR [rsp+0x28]
   14002e289:	call   0x1400062d4
   14002e28e:	mov    rax,rbx
   14002e291:	jmp    0x14002e32b
   14002e296:	mov    QWORD PTR [rsp+0xa8],r15
   14002e29e:	lea    r15,[rip+0x1c58b]        # 0x14004a830
   14002e2a5:	lea    r14,[rip+0x1c5d4]        # 0x14004a880
   14002e2ac:	mov    rdi,r15
   14002e2af:	nop
   14002e2b0:	mov    r8d,DWORD PTR [rdi+0x8]
   14002e2b4:	mov    rcx,QWORD PTR [rdi]
   14002e2b7:	mov    rdx,rbp
   14002e2ba:	call   0x140022cd0
   14002e2bf:	test   eax,eax
   14002e2c1:	je     0x14002e2ee
   14002e2c3:	add    rdi,0x10
   14002e2c7:	inc    ebx
   14002e2c9:	cmp    rdi,r14
   14002e2cc:	jl     0x14002e2b0
   14002e2ce:	cmp    QWORD PTR [rsp+0x40],0x10
   14002e2d4:	movzx  ecx,BYTE PTR [rbp+0x0]
   14002e2d8:	mov    BYTE PTR [r12],cl
   14002e2dc:	jb     0x14002e2e8
   14002e2de:	mov    rcx,QWORD PTR [rsp+0x28]
   14002e2e3:	call   0x1400062d4
   14002e2e8:	lea    rax,[rbp+0x1]
   14002e2ec:	jmp    0x14002e323
   14002e2ee:	movsxd rcx,ebx
   14002e2f1:	add    rcx,rcx
   14002e2f4:	movzx  eax,BYTE PTR [r15+rcx*8+0xc]
   14002e2fa:	mov    BYTE PTR [r12],al
   14002e2fe:	mov    DWORD PTR [r13+0x0],0x1
   14002e306:	mov    ebx,DWORD PTR [r15+rcx*8+0x8]
   14002e30b:	add    rbx,rbp
   14002e30e:	cmp    QWORD PTR [rsp+0x40],0x10
   14002e314:	jb     0x14002e320
   14002e316:	mov    rcx,QWORD PTR [rsp+0x28]
   14002e31b:	call   0x1400062d4
   14002e320:	mov    rax,rbx
   14002e323:	mov    r15,QWORD PTR [rsp+0xa8]
   14002e32b:	mov    rcx,QWORD PTR [rsp+0x48]
   14002e330:	xor    rcx,rsp
   14002e333:	call   0x1400144f0
   14002e338:	add    rsp,0x50
   14002e33c:	pop    r14
   14002e33e:	pop    r13
   14002e340:	pop    r12
   14002e342:	pop    rdi
   14002e343:	pop    rsi
   14002e344:	pop    rbp
   14002e345:	pop    rbx
   14002e346:	ret    
   14002e347:	int3   
   14002e348:	int3   
   14002e349:	int3   
   14002e34a:	int3   
   14002e34b:	int3   
   14002e34c:	int3   
   14002e34d:	int3   
   14002e34e:	int3   
   14002e34f:	int3   
   14002e350:	rex push rbx
   14002e352:	sub    rsp,0x20
   14002e356:	mov    rbx,rdx
   14002e359:	mov    rdx,QWORD PTR [rcx]
   14002e35c:	xor    eax,eax
   14002e35e:	mov    QWORD PTR [rbx+0x20],0xf
   14002e366:	mov    QWORD PTR [rbx+0x18],rax
   14002e36a:	or     r9,0xffffffffffffffff
   14002e36e:	add    rdx,0x28
   14002e372:	xor    r8d,r8d
   14002e375:	mov    rcx,rbx
   14002e378:	mov    DWORD PTR [rsp+0x30],eax
   14002e37c:	mov    BYTE PTR [rbx+0x8],al
   14002e37f:	call   0x140002630
   14002e384:	mov    rax,rbx
   14002e387:	add    rsp,0x20
   14002e38b:	pop    rbx
   14002e38c:	ret    
   14002e38d:	int3   
   14002e38e:	int3   
   14002e38f:	int3   
   14002e390:	mov    rax,rsp
   14002e393:	push   rbp
   14002e394:	push   rsi
   14002e395:	push   rdi
   14002e396:	sub    rsp,0x110
   14002e39d:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e3a6:	mov    QWORD PTR [rax+0x10],rbx
   14002e3aa:	mov    rbp,rdx
   14002e3ad:	mov    rsi,rcx
   14002e3b0:	xor    ebx,ebx
   14002e3b2:	mov    DWORD PTR [rax+0x8],ebx
   14002e3b5:	test   rcx,rcx
   14002e3b8:	je     0x14002e4a5
   14002e3be:	cmp    QWORD PTR [rcx],rbx
   14002e3c1:	jne    0x14002e499
   14002e3c7:	lea    ecx,[rbx+0x28]
   14002e3ca:	call   0x140006290
   14002e3cf:	mov    rdi,rax
   14002e3d2:	mov    QWORD PTR [rsp+0x140],rax
   14002e3da:	test   rax,rax
   14002e3dd:	je     0x14002e43f
   14002e3df:	lea    rdx,[rsp+0x28]
   14002e3e4:	mov    rcx,rbp
   14002e3e7:	call   0x14002e350
   14002e3ec:	nop
   14002e3ed:	mov    DWORD PTR [rsp+0x130],0x1
   14002e3f8:	mov    rdx,rax
   14002e3fb:	lea    rcx,[rsp+0x68]
   14002e400:	call   0x14002df90
   14002e405:	mov    ebx,0x3
   14002e40a:	mov    QWORD PTR [rdi+0x8],0x0
   14002e412:	lea    rax,[rip+0xebaf]        # 0x14003cfc8
   14002e419:	mov    QWORD PTR [rdi],rax
   14002e41c:	lea    rcx,[rsp+0x50]
   14002e421:	call   0x140032208
   14002e426:	mov    rcx,QWORD PTR [rax]
   14002e429:	mov    QWORD PTR [rdi+0x10],rcx
   14002e42d:	mov    rcx,QWORD PTR [rax+0x8]
   14002e431:	mov    QWORD PTR [rdi+0x18],rcx
   14002e435:	mov    rax,QWORD PTR [rax+0x10]
   14002e439:	mov    QWORD PTR [rdi+0x20],rax
   14002e43d:	jmp    0x14002e441
   14002e43f:	xor    edi,edi
   14002e441:	mov    QWORD PTR [rsi],rdi
   14002e444:	test   bl,0x2
   14002e447:	je     0x14002e45e
   14002e449:	and    ebx,0xfffffffd
   14002e44c:	mov    DWORD PTR [rsp+0x130],ebx
   14002e453:	lea    rcx,[rsp+0x68]
   14002e458:	call   0x14002e020
   14002e45d:	nop
   14002e45e:	test   bl,0x1
   14002e461:	je     0x14002e48d
   14002e463:	cmp    QWORD PTR [rsp+0x48],0x10
   14002e469:	jb     0x14002e481
   14002e46b:	mov    rcx,QWORD PTR [rsp+0x30]
   14002e470:	call   0x1400062d4
   14002e475:	movabs rax,0x2
   14002e47f:	jmp    0x14002e4af
   14002e481:	movabs rax,0x2
   14002e48b:	jmp    0x14002e4af
   14002e48d:	movabs rax,0x2
   14002e497:	jmp    0x14002e4af
   14002e499:	movabs rax,0x2
   14002e4a3:	jmp    0x14002e4af
   14002e4a5:	movabs rax,0x2
   14002e4af:	mov    rbx,QWORD PTR [rsp+0x138]
   14002e4b7:	add    rsp,0x110
   14002e4be:	pop    rdi
   14002e4bf:	pop    rsi
   14002e4c0:	pop    rbp
   14002e4c1:	ret    
   14002e4c2:	int3   
   14002e4c3:	int3   
   14002e4c4:	int3   
   14002e4c5:	int3   
   14002e4c6:	int3   
   14002e4c7:	int3   
   14002e4c8:	int3   
   14002e4c9:	int3   
   14002e4ca:	int3   
   14002e4cb:	int3   
   14002e4cc:	int3   
   14002e4cd:	int3   
   14002e4ce:	int3   
   14002e4cf:	int3   
   14002e4d0:	rex push rbp
   14002e4d2:	push   rsi
   14002e4d3:	push   rdi
   14002e4d4:	sub    rsp,0x40
   14002e4d8:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002e4e1:	mov    QWORD PTR [rsp+0x78],rbx
   14002e4e6:	mov    rbp,rcx
   14002e4e9:	xor    edx,edx
   14002e4eb:	lea    rcx,[rsp+0x68]
   14002e4f0:	call   0x140032304
   14002e4f5:	nop
   14002e4f6:	mov    rsi,QWORD PTR [rip+0x20eab]        # 0x14004f3a8
   14002e4fd:	mov    QWORD PTR [rsp+0x70],rsi
   14002e502:	mov    rdi,QWORD PTR [rip+0x20f77]        # 0x14004f480
   14002e509:	test   rdi,rdi
   14002e50c:	jne    0x14002e54b
   14002e50e:	xor    edx,edx
   14002e510:	lea    rcx,[rsp+0x60]
   14002e515:	call   0x140032304
   14002e51a:	cmp    QWORD PTR [rip+0x20f5f],rdi        # 0x14004f480
   14002e521:	jne    0x14002e53a
   14002e523:	mov    eax,DWORD PTR [rip+0x20f47]        # 0x14004f470
   14002e529:	inc    eax
   14002e52b:	mov    DWORD PTR [rip+0x20f3f],eax        # 0x14004f470
   14002e531:	cdqe   
   14002e533:	mov    QWORD PTR [rip+0x20f46],rax        # 0x14004f480
   14002e53a:	lea    rcx,[rsp+0x60]
   14002e53f:	call   0x140032334
   14002e544:	mov    rdi,QWORD PTR [rip+0x20f35]        # 0x14004f480
   14002e54b:	mov    rcx,QWORD PTR [rbp+0x0]
   14002e54f:	cmp    rdi,QWORD PTR [rcx+0x18]
   14002e553:	jae    0x14002e564
   14002e555:	mov    rax,QWORD PTR [rcx+0x10]
   14002e559:	mov    rbx,QWORD PTR [rax+rdi*8]
   14002e55d:	test   rbx,rbx
   14002e560:	jne    0x14002e57f
   14002e562:	jmp    0x14002e566
   14002e564:	xor    ebx,ebx
   14002e566:	cmp    BYTE PTR [rcx+0x24],0x0
   14002e56a:	je     0x14002e57f
   14002e56c:	call   0x1400323c0
   14002e571:	cmp    rdi,QWORD PTR [rax+0x18]
   14002e575:	jae    0x14002e584
   14002e577:	mov    rax,QWORD PTR [rax+0x10]
   14002e57b:	mov    rbx,QWORD PTR [rax+rdi*8]
   14002e57f:	test   rbx,rbx
   14002e582:	jne    0x14002e600
   14002e584:	test   rsi,rsi
   14002e587:	je     0x14002e58e
   14002e589:	mov    rbx,rsi
   14002e58c:	jmp    0x14002e600
   14002e58e:	mov    rdx,rbp
   14002e591:	lea    rcx,[rsp+0x70]
   14002e596:	call   0x14002e390
   14002e59b:	cmp    rax,0xffffffffffffffff
   14002e59f:	jne    0x14002e5c4
   14002e5a1:	lea    rdx,[rip+0xeb30]        # 0x14003d0d8
   14002e5a8:	lea    rcx,[rsp+0x28]
   14002e5ad:	call   0x140014750
   14002e5b2:	lea    rdx,[rip+0x17aa7]        # 0x140046060
   14002e5b9:	lea    rcx,[rsp+0x28]
   14002e5be:	call   0x1400158a0
   14002e5c3:	int3   
   14002e5c4:	mov    rbx,QWORD PTR [rsp+0x70]
   14002e5c9:	mov    QWORD PTR [rip+0x20dd8],rbx        # 0x14004f3a8
   14002e5d0:	xor    edx,edx
   14002e5d2:	lea    rcx,[rsp+0x60]
   14002e5d7:	call   0x140032304
   14002e5dc:	mov    rcx,QWORD PTR [rbx+0x8]
   14002e5e0:	cmp    rcx,0xffffffffffffffff
   14002e5e4:	jae    0x14002e5ed
   14002e5e6:	inc    rcx
   14002e5e9:	mov    QWORD PTR [rbx+0x8],rcx
   14002e5ed:	lea    rcx,[rsp+0x60]
   14002e5f2:	call   0x140032334
   14002e5f7:	mov    rcx,rbx
   14002e5fa:	call   0x140032414
   14002e5ff:	nop
   14002e600:	lea    rcx,[rsp+0x68]
   14002e605:	call   0x140032334
   14002e60a:	mov    rax,rbx
   14002e60d:	mov    rbx,QWORD PTR [rsp+0x78]
   14002e612:	add    rsp,0x40
   14002e616:	pop    rdi
   14002e617:	pop    rsi
   14002e618:	pop    rbp
   14002e619:	ret    
   14002e61a:	int3   
   14002e61b:	int3   
   14002e61c:	int3   
   14002e61d:	int3   
   14002e61e:	int3   
   14002e61f:	int3   
   14002e620:	mov    QWORD PTR [rsp+0x10],rbx
   14002e625:	mov    QWORD PTR [rsp+0x18],rbp
   14002e62a:	push   rsi
   14002e62b:	sub    rsp,0x20
   14002e62f:	mov    rbp,rdx
   14002e632:	mov    esi,r8d
   14002e635:	mov    rbx,rcx
   14002e638:	lea    rdx,[rip+0xf160]        # 0x14003d79f
   14002e63f:	xor    r8d,r8d
   14002e642:	mov    rcx,rbp
   14002e645:	call   0x140002a30
   14002e64a:	test   rbx,rbx
   14002e64d:	je     0x14002e6c9
   14002e64f:	movzx  ecx,BYTE PTR [rbx]
   14002e652:	test   cl,cl
   14002e654:	je     0x14002e6c9
   14002e656:	mov    edx,esi
   14002e658:	call   0x14002d8a0
   14002e65d:	test   eax,eax
   14002e65f:	jne    0x14002e666
   14002e661:	cmp    BYTE PTR [rbx],0x5f
   14002e664:	jne    0x14002e6c9
   14002e666:	mov    QWORD PTR [rsp+0x30],rdi
   14002e66b:	mov    rdi,rbx
   14002e66e:	xchg   ax,ax
   14002e670:	movzx  ecx,BYTE PTR [rbx]
   14002e673:	test   cl,cl
   14002e675:	je     0x14002e69b
   14002e677:	mov    edx,esi
   14002e679:	call   0x14002d8c0
   14002e67e:	test   eax,eax
   14002e680:	jne    0x14002e695
   14002e682:	movzx  eax,BYTE PTR [rbx]
   14002e685:	cmp    al,0x5f
   14002e687:	je     0x14002e695
   14002e689:	cmp    al,0x2d
   14002e68b:	je     0x14002e695
   14002e68d:	cmp    al,0x2e
   14002e68f:	je     0x14002e695
   14002e691:	cmp    al,0x3a
   14002e693:	jne    0x14002e69b
   14002e695:	add    rbx,0x1
   14002e699:	jne    0x14002e670
   14002e69b:	mov    r8,rbx
   14002e69e:	sub    r8,rdi
   14002e6a1:	test   r8,r8
   14002e6a4:	jle    0x14002e6b1
   14002e6a6:	mov    rdx,rdi
   14002e6a9:	mov    rcx,rbp
   14002e6ac:	call   0x140002a30
   14002e6b1:	mov    rax,rbx
   14002e6b4:	mov    rdi,QWORD PTR [rsp+0x30]
   14002e6b9:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e6be:	mov    rbp,QWORD PTR [rsp+0x40]
   14002e6c3:	add    rsp,0x20
   14002e6c7:	pop    rsi
   14002e6c8:	ret    
   14002e6c9:	mov    rbx,QWORD PTR [rsp+0x38]
   14002e6ce:	mov    rbp,QWORD PTR [rsp+0x40]
   14002e6d3:	xor    eax,eax
   14002e6d5:	add    rsp,0x20
   14002e6d9:	pop    rsi
   14002e6da:	ret    
   14002e6db:	int3   
   14002e6dc:	int3   
   14002e6dd:	int3   
   14002e6de:	int3   
   14002e6df:	int3   
   14002e6e0:	mov    QWORD PTR [rsp+0x10],rbx
   14002e6e5:	push   rbp
   14002e6e6:	push   rsi
   14002e6e7:	push   rdi
   14002e6e8:	push   r12
   14002e6ea:	push   r13
   14002e6ec:	push   r14
   14002e6ee:	push   r15
   14002e6f0:	sub    rsp,0x20
   14002e6f4:	mov    r13,rdx
   14002e6f7:	movzx  edi,r8b
   14002e6fb:	mov    rbx,rcx
   14002e6fe:	lea    rdx,[rip+0xf09a]        # 0x14003d79f
   14002e705:	xor    r8d,r8d
   14002e708:	mov    rcx,r13
   14002e70b:	mov    r15,r9
   14002e70e:	call   0x140002a30
   14002e713:	test   dil,dil
   14002e716:	je     0x14002e8c4
   14002e71c:	cmp    BYTE PTR [rip+0x1bfad],0x0        # 0x14004a6d0
   14002e723:	je     0x14002e8c4
   14002e729:	mov    ebp,DWORD PTR [rsp+0x88]
   14002e730:	mov    rcx,rbx
   14002e733:	xor    sil,sil
   14002e736:	mov    edx,ebp
   14002e738:	call   0x14002da40
   14002e73d:	mov    rbx,rax
   14002e740:	test   rax,rax
   14002e743:	je     0x14002e8ad
   14002e749:	movzx  r12d,BYTE PTR [rsp+0x80]
   14002e752:	lea    r14,[rip+0xe457]        # 0x14003cbb0
   14002e759:	nop    DWORD PTR [rax+0x0]
   14002e760:	cmp    BYTE PTR [rbx],0x0
   14002e763:	je     0x14002e9ca
   14002e769:	mov    r9d,ebp
   14002e76c:	movzx  r8d,r12b
   14002e770:	mov    rdx,r15
   14002e773:	mov    rcx,rbx
   14002e776:	call   0x14002db20
   14002e77b:	test   al,al
   14002e77d:	jne    0x14002e9b1
   14002e783:	mov    dil,BYTE PTR [rbx]
   14002e786:	cmp    dil,0xd
   14002e78a:	je     0x14002e89e
   14002e790:	cmp    dil,0xa
   14002e794:	je     0x14002e89e
   14002e79a:	movzx  ecx,dil
   14002e79e:	call   0x1400235ec
   14002e7a3:	test   eax,eax
   14002e7a5:	jne    0x14002e89e
   14002e7ab:	cmp    dil,0xa
   14002e7af:	je     0x14002e89e
   14002e7b5:	cmp    dil,0xd
   14002e7b9:	je     0x14002e89e
   14002e7bf:	test   sil,sil
   14002e7c2:	je     0x14002e7d5
   14002e7c4:	lea    edx,[rax+0x1]
   14002e7c7:	mov    r8b,0x20
   14002e7ca:	mov    rcx,r13
   14002e7cd:	call   0x14002b600
   14002e7d2:	xor    sil,sil
   14002e7d5:	mov    BYTE PTR [rsp+0x70],0x0
   14002e7da:	mov    BYTE PTR [rsp+0x71],0x0
   14002e7df:	mov    BYTE PTR [rsp+0x72],0x0
   14002e7e4:	mov    BYTE PTR [rsp+0x73],0x0
   14002e7e9:	cmp    ebp,0x1
   14002e7ec:	jne    0x14002e841
   14002e7ee:	movzx  eax,BYTE PTR [rbx]
   14002e7f1:	movsxd rdi,DWORD PTR [r14+rax*4]
   14002e7f5:	mov    DWORD PTR [rsp+0x60],edi
   14002e7f9:	cmp    edi,ebp
   14002e7fb:	je     0x14002e849
   14002e7fd:	test   edi,edi
   14002e7ff:	je     0x14002e82d
   14002e801:	xor    edx,edx
   14002e803:	test   al,al
   14002e805:	je     0x14002e828
   14002e807:	lea    r8,[rsp+0x70]
   14002e80c:	mov    rcx,rbx
   14002e80f:	sub    r8,rbx
   14002e812:	cmp    edx,edi
   14002e814:	jge    0x14002e828
   14002e816:	movzx  eax,BYTE PTR [rcx]
   14002e819:	inc    rcx
   14002e81c:	inc    edx
   14002e81e:	mov    BYTE PTR [r8+rcx*1-0x1],al
   14002e823:	cmp    BYTE PTR [rcx],0x0
   14002e826:	jne    0x14002e812
   14002e828:	add    rbx,rdi
   14002e82b:	jmp    0x14002e86b
   14002e82d:	lea    rdx,[rsp+0x70]
   14002e832:	movsxd r8,edi
   14002e835:	mov    rcx,r13
   14002e838:	xor    ebx,ebx
   14002e83a:	call   0x14002a6a0
   14002e83f:	jmp    0x14002e8a4
   14002e841:	mov    DWORD PTR [rsp+0x60],0x1
   14002e849:	mov    al,BYTE PTR [rbx]
   14002e84b:	cmp    al,0x26
   14002e84d:	jne    0x14002e882
   14002e84f:	lea    r8,[rsp+0x60]
   14002e854:	lea    rdx,[rsp+0x70]
   14002e859:	mov    r9d,ebp
   14002e85c:	mov    rcx,rbx
   14002e85f:	call   0x14002e0f0
   14002e864:	mov    edi,DWORD PTR [rsp+0x60]
   14002e868:	mov    rbx,rax
   14002e86b:	cmp    edi,0x1
   14002e86e:	je     0x14002e889
   14002e870:	lea    rdx,[rsp+0x70]
   14002e875:	movsxd r8,edi
   14002e878:	mov    rcx,r13
   14002e87b:	call   0x14002a6a0
   14002e880:	jmp    0x14002e8a4
   14002e882:	mov    BYTE PTR [rsp+0x70],al
   14002e886:	inc    rbx
   14002e889:	movzx  r8d,BYTE PTR [rsp+0x70]
   14002e88f:	mov    edx,0x1
   14002e894:	mov    rcx,r13
   14002e897:	call   0x14002b600
   14002e89c:	jmp    0x14002e8a4
   14002e89e:	inc    rbx
   14002e8a1:	mov    sil,0x1
   14002e8a4:	test   rbx,rbx
   14002e8a7:	jne    0x14002e760
   14002e8ad:	xor    eax,eax
   14002e8af:	mov    rbx,QWORD PTR [rsp+0x68]
   14002e8b4:	add    rsp,0x20
   14002e8b8:	pop    r15
   14002e8ba:	pop    r14
   14002e8bc:	pop    r13
   14002e8be:	pop    r12
   14002e8c0:	pop    rdi
   14002e8c1:	pop    rsi
   14002e8c2:	pop    rbp
   14002e8c3:	ret    
   14002e8c4:	test   rbx,rbx
   14002e8c7:	je     0x14002e8ad
   14002e8c9:	mov    esi,DWORD PTR [rsp+0x88]
   14002e8d0:	movzx  ebp,BYTE PTR [rsp+0x80]
   14002e8d8:	lea    r14,[rip+0xe2d1]        # 0x14003cbb0
   14002e8df:	nop
   14002e8e0:	cmp    BYTE PTR [rbx],0x0
   14002e8e3:	je     0x14002e9ca
   14002e8e9:	mov    r9d,esi
   14002e8ec:	movzx  r8d,bpl
   14002e8f0:	mov    rdx,r15
   14002e8f3:	mov    rcx,rbx
   14002e8f6:	call   0x14002db20
   14002e8fb:	test   al,al
   14002e8fd:	jne    0x14002e9b1
   14002e903:	mov    BYTE PTR [rsp+0x70],al
   14002e907:	mov    BYTE PTR [rsp+0x71],al
   14002e90b:	mov    BYTE PTR [rsp+0x72],al
   14002e90f:	mov    BYTE PTR [rsp+0x73],al
   14002e913:	cmp    esi,0x1
   14002e916:	jne    0x14002e95f
   14002e918:	movzx  eax,BYTE PTR [rbx]
   14002e91b:	movsxd rdx,DWORD PTR [r14+rax*4]
   14002e91f:	mov    DWORD PTR [rsp+0x60],edx
   14002e923:	cmp    edx,esi
   14002e925:	je     0x14002e968
   14002e927:	test   edx,edx
   14002e929:	je     0x14002e95b
   14002e92b:	xor    edi,edi
   14002e92d:	test   al,al
   14002e92f:	je     0x14002e956
   14002e931:	lea    r8,[rsp+0x70]
   14002e936:	mov    rcx,rbx
   14002e939:	sub    r8,rbx
   14002e93c:	nop    DWORD PTR [rax+0x0]
   14002e940:	cmp    edi,edx
   14002e942:	jge    0x14002e956
   14002e944:	movzx  eax,BYTE PTR [rcx]
   14002e947:	inc    rcx
   14002e94a:	inc    edi
   14002e94c:	mov    BYTE PTR [r8+rcx*1-0x1],al
   14002e951:	cmp    BYTE PTR [rcx],0x0
   14002e954:	jne    0x14002e940
   14002e956:	add    rbx,rdx
   14002e959:	jmp    0x14002e993
   14002e95b:	xor    ebx,ebx
   14002e95d:	jmp    0x14002e993
   14002e95f:	mov    edx,0x1
   14002e964:	mov    DWORD PTR [rsp+0x60],edx
   14002e968:	mov    al,BYTE PTR [rbx]
   14002e96a:	cmp    al,0x26
   14002e96c:	jne    0x14002e98c
   14002e96e:	lea    r8,[rsp+0x60]
   14002e973:	lea    rdx,[rsp+0x70]
   14002e978:	mov    r9d,esi
   14002e97b:	mov    rcx,rbx
   14002e97e:	call   0x14002e0f0
   14002e983:	mov    edx,DWORD PTR [rsp+0x60]
   14002e987:	mov    rbx,rax
   14002e98a:	jmp    0x14002e993
   14002e98c:	mov    BYTE PTR [rsp+0x70],al
   14002e990:	inc    rbx
   14002e993:	movsxd r8,edx
   14002e996:	lea    rdx,[rsp+0x70]
   14002e99b:	mov    rcx,r13
   14002e99e:	call   0x14002a6a0
   14002e9a3:	test   rbx,rbx
   14002e9a6:	jne    0x14002e8e0
   14002e9ac:	jmp    0x14002e8ad
   14002e9b1:	cmp    BYTE PTR [rbx],0x0
   14002e9b4:	je     0x14002e9ca
   14002e9b6:	or     rcx,0xffffffffffffffff
   14002e9ba:	xor    eax,eax
   14002e9bc:	mov    rdi,r15
   14002e9bf:	repnz scas al,BYTE PTR es:[rdi]
   14002e9c1:	not    rcx
   14002e9c4:	dec    rcx
   14002e9c7:	add    rbx,rcx
   14002e9ca:	test   rbx,rbx
   14002e9cd:	je     0x14002e8ad
   14002e9d3:	cmp    BYTE PTR [rbx],0x0
   14002e9d6:	je     0x14002e8ad
   14002e9dc:	mov    rax,rbx
   14002e9df:	jmp    0x14002e8af
   14002e9e4:	int3   
   14002e9e5:	int3   
   14002e9e6:	int3   
   14002e9e7:	int3   
   14002e9e8:	int3   
   14002e9e9:	int3   
   14002e9ea:	int3   
   14002e9eb:	int3   
   14002e9ec:	int3   
   14002e9ed:	int3   
   14002e9ee:	int3   
   14002e9ef:	int3   
   14002e9f0:	mov    QWORD PTR [rsp+0x10],rbx
   14002e9f5:	mov    QWORD PTR [rsp+0x18],rbp
   14002e9fa:	push   rsi
   14002e9fb:	sub    rsp,0x20
   14002e9ff:	cmp    BYTE PTR [rcx+0x70],0x0
   14002ea03:	mov    rbx,r9
   14002ea06:	mov    rbp,r8
   14002ea09:	mov    rsi,rcx
   14002ea0c:	jne    0x14002ea80
   14002ea0e:	mov    DWORD PTR [rcx+0x74],edx
   14002ea11:	mov    BYTE PTR [rcx+0x70],0x1
   14002ea15:	movsxd rax,edx
   14002ea18:	or     rcx,0xffffffffffffffff
   14002ea1c:	mov    QWORD PTR [rsp+0x30],rdi
   14002ea21:	lea    rdx,[rip+0x1bee8]        # 0x14004a910
   14002ea28:	mov    rdx,QWORD PTR [rdx+rax*8]
   14002ea2c:	xor    eax,eax
   14002ea2e:	mov    rdi,rdx
   14002ea31:	repnz scas al,BYTE PTR es:[rdi]
   14002ea33:	not    rcx
   14002ea36:	lea    r8,[rcx-0x1]
   14002ea3a:	lea    rcx,[rsi+0x78]
   14002ea3e:	call   0x140002a30
   14002ea43:	mov    rdi,QWORD PTR [rsp+0x30]
   14002ea48:	mov    DWORD PTR [rsi+0xa8],0xffffffff
   14002ea52:	mov    DWORD PTR [rsi+0xa4],0xffffffff
   14002ea5c:	test   rbp,rbp
   14002ea5f:	je     0x14002ea80
   14002ea61:	test   rbx,rbx
   14002ea64:	je     0x14002ea80
   14002ea66:	mov    r8d,DWORD PTR [rsp+0x50]
   14002ea6b:	mov    rdx,rbp
   14002ea6e:	mov    rcx,rbx
   14002ea71:	call   0x14002d8e0
   14002ea76:	mov    rdx,QWORD PTR [rbx]
   14002ea79:	mov    QWORD PTR [rsi+0xa4],rdx
   14002ea80:	mov    rbx,QWORD PTR [rsp+0x38]
   14002ea85:	mov    rbp,QWORD PTR [rsp+0x40]
   14002ea8a:	add    rsp,0x20
   14002ea8e:	pop    rsi
   14002ea8f:	ret    
   14002ea90:	rex push rdi
   14002ea92:	sub    rsp,0x30
   14002ea96:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14002ea9f:	mov    QWORD PTR [rsp+0x40],rbx
   14002eaa4:	mov    QWORD PTR [rsp+0x50],rsi
   14002eaa9:	mov    edi,r8d
   14002eaac:	mov    rax,rdx
   14002eaaf:	mov    rsi,rcx
   14002eab2:	mov    edx,r8d
   14002eab5:	mov    rcx,rax
   14002eab8:	call   0x14002da40
   14002eabd:	test   rax,rax
   14002eac0:	je     0x14002ec64
   14002eac6:	movzx  edx,BYTE PTR [rax]
   14002eac9:	test   dl,dl
   14002eacb:	je     0x14002ec64
   14002ead1:	cmp    dl,0x3c
   14002ead4:	jne    0x14002ec64
   14002eada:	mov    edx,edi
   14002eadc:	mov    rcx,rax
   14002eadf:	call   0x14002da40
   14002eae4:	mov    rbx,rax
   14002eae7:	test   rax,rax
   14002eaea:	je     0x14002ec60
   14002eaf0:	cmp    BYTE PTR [rax],0x0
   14002eaf3:	je     0x14002ec60
   14002eaf9:	mov    r9d,edi
   14002eafc:	mov    r8b,0x1
   14002eaff:	lea    rdx,[rip+0xe616]        # 0x14003d11c
   14002eb06:	mov    rcx,rax
   14002eb09:	call   0x14002db20
   14002eb0e:	test   al,al
   14002eb10:	je     0x14002eb37
   14002eb12:	mov    ecx,0xe8
   14002eb17:	call   0x140006290
   14002eb1c:	mov    QWORD PTR [rsp+0x48],rax
   14002eb21:	test   rax,rax
   14002eb24:	je     0x14002eb30
   14002eb26:	mov    rcx,rax
   14002eb29:	call   0x14002a1b0
   14002eb2e:	jmp    0x14002eb32
   14002eb30:	xor    eax,eax
   14002eb32:	jmp    0x14002ec55
   14002eb37:	mov    r9d,edi
   14002eb3a:	xor    r8d,r8d
   14002eb3d:	lea    rdx,[rip+0xe014]        # 0x14003cb58
   14002eb44:	mov    rcx,rbx
   14002eb47:	call   0x14002db20
   14002eb4c:	test   al,al
   14002eb4e:	je     0x14002eb75
   14002eb50:	mov    ecx,0x70
   14002eb55:	call   0x140006290
   14002eb5a:	mov    QWORD PTR [rsp+0x48],rax
   14002eb5f:	test   rax,rax
   14002eb62:	je     0x14002eb6e
   14002eb64:	mov    rcx,rax
   14002eb67:	call   0x14002b7b0
   14002eb6c:	jmp    0x14002eb70
   14002eb6e:	xor    eax,eax
   14002eb70:	jmp    0x14002ec55
   14002eb75:	mov    r9d,edi
   14002eb78:	xor    r8d,r8d
   14002eb7b:	lea    rdx,[rip+0xdfc6]        # 0x14003cb48
   14002eb82:	mov    rcx,rbx
   14002eb85:	call   0x14002db20
   14002eb8a:	test   al,al
   14002eb8c:	je     0x14002ebbe
   14002eb8e:	mov    ecx,0x78
   14002eb93:	call   0x140006290
   14002eb98:	mov    QWORD PTR [rsp+0x48],rax
   14002eb9d:	test   rax,rax
   14002eba0:	je     0x14002ebb3
   14002eba2:	lea    rdx,[rip+0xebf6]        # 0x14003d79f
   14002eba9:	mov    rcx,rax
   14002ebac:	call   0x14002c030
   14002ebb1:	jmp    0x14002ebb5
   14002ebb3:	xor    eax,eax
   14002ebb5:	mov    BYTE PTR [rax+0x70],0x1
   14002ebb9:	jmp    0x14002ec55
   14002ebbe:	mov    r9d,edi
   14002ebc1:	xor    r8d,r8d
   14002ebc4:	lea    rdx,[rip+0xe54d]        # 0x14003d118
   14002ebcb:	mov    rcx,rbx
   14002ebce:	call   0x14002db20
   14002ebd3:	test   al,al
   14002ebd5:	je     0x14002ebf9
   14002ebd7:	mov    ecx,0x70
   14002ebdc:	call   0x140006290
   14002ebe1:	mov    QWORD PTR [rsp+0x48],rax
   14002ebe6:	test   rax,rax
   14002ebe9:	je     0x14002ebf5
   14002ebeb:	mov    rcx,rax
   14002ebee:	call   0x14002b820
   14002ebf3:	jmp    0x14002ebf7
   14002ebf5:	xor    eax,eax
   14002ebf7:	jmp    0x14002ec55
   14002ebf9:	mov    edx,edi
   14002ebfb:	movzx  ecx,BYTE PTR [rbx+0x1]
   14002ebff:	call   0x14002d8a0
   14002ec04:	test   eax,eax
   14002ec06:	jne    0x14002ec2e
   14002ec08:	cmp    BYTE PTR [rbx+0x1],0x5f
   14002ec0c:	je     0x14002ec2e
   14002ec0e:	lea    ecx,[rax+0x70]
   14002ec11:	call   0x140006290
   14002ec16:	mov    QWORD PTR [rsp+0x48],rax
   14002ec1b:	test   rax,rax
   14002ec1e:	je     0x14002ec2a
   14002ec20:	mov    rcx,rax
   14002ec23:	call   0x14002b820
   14002ec28:	jmp    0x14002ec2c
   14002ec2a:	xor    eax,eax
   14002ec2c:	jmp    0x14002ec55
   14002ec2e:	mov    ecx,0xf0
   14002ec33:	call   0x140006290
   14002ec38:	mov    QWORD PTR [rsp+0x48],rax
   14002ec3d:	test   rax,rax
   14002ec40:	je     0x14002ec53
   14002ec42:	lea    rdx,[rip+0xeb56]        # 0x14003d79f
   14002ec49:	mov    rcx,rax
   14002ec4c:	call   0x14002c190
   14002ec51:	jmp    0x14002ec55
   14002ec53:	xor    eax,eax
   14002ec55:	test   rax,rax
   14002ec58:	je     0x14002ec66
   14002ec5a:	mov    QWORD PTR [rax+0x18],rsi
   14002ec5e:	jmp    0x14002ec66
   14002ec60:	xor    eax,eax
   14002ec62:	jmp    0x14002ec66
   14002ec64:	xor    eax,eax
   14002ec66:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ec6b:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ec70:	add    rsp,0x30
   14002ec74:	pop    rdi
   14002ec75:	ret    
   14002ec76:	int3   
   14002ec77:	int3   
   14002ec78:	int3   
   14002ec79:	int3   
   14002ec7a:	int3   
   14002ec7b:	int3   
   14002ec7c:	int3   
   14002ec7d:	int3   
   14002ec7e:	int3   
   14002ec7f:	int3   
   14002ec80:	mov    rax,rsp
   14002ec83:	push   rdi
   14002ec84:	push   r12
   14002ec86:	push   r13
   14002ec88:	push   r14
   14002ec8a:	push   r15
   14002ec8c:	sub    rsp,0x40
   14002ec90:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002ec99:	mov    QWORD PTR [rax+0x8],rbx
   14002ec9d:	mov    QWORD PTR [rax+0x18],rbp
   14002eca1:	mov    QWORD PTR [rax+0x20],rsi
   14002eca5:	mov    esi,r9d
   14002eca8:	mov    r13,r8
   14002ecab:	mov    rbp,rdx
   14002ecae:	mov    r12,rcx
   14002ecb1:	call   0x14002a8f0
   14002ecb6:	mov    r14,rax
   14002ecb9:	mov    edx,esi
   14002ecbb:	mov    rcx,rbp
   14002ecbe:	call   0x14002da40
   14002ecc3:	mov    rdi,rax
   14002ecc6:	test   rax,rax
   14002ecc9:	je     0x14002ee10
   14002eccf:	lea    r15,[rip+0xd2a2]        # 0x14003bf78
   14002ecd6:	data16 nop WORD PTR [rax+rax*1+0x0]
   14002ece0:	movzx  eax,BYTE PTR [rdi]
   14002ece3:	test   al,al
   14002ece5:	je     0x14002ee2b
   14002eceb:	cmp    al,0x3c
   14002eced:	je     0x14002ed9c
   14002ecf3:	mov    ecx,0x78
   14002ecf8:	call   0x140006290
   14002ecfd:	mov    rbx,rax
   14002ed00:	mov    QWORD PTR [rsp+0x78],rax
   14002ed05:	test   rax,rax
   14002ed08:	je     0x14002ed34
   14002ed0a:	mov    edx,0x4
   14002ed0f:	mov    rcx,rax
   14002ed12:	call   0x14002b4e0
   14002ed17:	nop
   14002ed18:	mov    QWORD PTR [rbx],r15
   14002ed1b:	lea    rcx,[rbx+0x38]
   14002ed1f:	xor    r8d,r8d
   14002ed22:	lea    rdx,[rip+0xea76]        # 0x14003d79f
   14002ed29:	call   0x140002a30
   14002ed2e:	mov    BYTE PTR [rbx+0x70],0x0
   14002ed32:	jmp    0x14002ed36
   14002ed34:	xor    ebx,ebx
   14002ed36:	test   rbx,rbx
   14002ed39:	je     0x14002ee03
   14002ed3f:	cmp    BYTE PTR [rip+0x1b98a],0x0        # 0x14004a6d0
   14002ed46:	je     0x14002ed5f
   14002ed48:	mov    rax,QWORD PTR [rbx]
   14002ed4b:	mov    r9d,esi
   14002ed4e:	mov    r8,r13
   14002ed51:	mov    rdx,rdi
   14002ed54:	mov    rcx,rbx
   14002ed57:	call   QWORD PTR [rax+0x10]
   14002ed5a:	mov    rbp,rax
   14002ed5d:	jmp    0x14002ed74
   14002ed5f:	mov    rax,QWORD PTR [rbx]
   14002ed62:	mov    r9d,esi
   14002ed65:	mov    r8,r13
   14002ed68:	mov    rdx,rbp
   14002ed6b:	mov    rcx,rbx
   14002ed6e:	call   QWORD PTR [rax+0x10]
   14002ed71:	mov    rbp,rax
   14002ed74:	mov    rcx,rbx
   14002ed77:	call   0x14002de60
   14002ed7c:	test   al,al
   14002ed7e:	jne    0x14002ed8d
   14002ed80:	mov    rdx,rbx
   14002ed83:	mov    rcx,r12
   14002ed86:	call   0x14002ab90
   14002ed8b:	jmp    0x14002edec
   14002ed8d:	mov    rax,QWORD PTR [rbx]
   14002ed90:	mov    edx,0x1
   14002ed95:	mov    rcx,rbx
   14002ed98:	call   QWORD PTR [rax]
   14002ed9a:	jmp    0x14002edec
   14002ed9c:	mov    r9d,esi
   14002ed9f:	xor    r8d,r8d
   14002eda2:	lea    rdx,[rip+0xdd67]        # 0x14003cb10
   14002eda9:	mov    rcx,rdi
   14002edac:	call   0x14002db20
   14002edb1:	test   al,al
   14002edb3:	jne    0x14002ee0b
   14002edb5:	mov    r8d,esi
   14002edb8:	mov    rdx,rdi
   14002edbb:	mov    rcx,r12
   14002edbe:	call   0x14002ea90
   14002edc3:	mov    rbx,rax
   14002edc6:	test   rax,rax
   14002edc9:	je     0x14002ee07
   14002edcb:	mov    r10,QWORD PTR [rax]
   14002edce:	mov    r9d,esi
   14002edd1:	mov    r8,r13
   14002edd4:	mov    rdx,rdi
   14002edd7:	mov    rcx,rax
   14002edda:	call   QWORD PTR [r10+0x10]
   14002edde:	mov    rbp,rax
   14002ede1:	mov    rdx,rbx
   14002ede4:	mov    rcx,r12
   14002ede7:	call   0x14002ab90
   14002edec:	mov    edx,esi
   14002edee:	mov    rcx,rbp
   14002edf1:	call   0x14002da40
   14002edf6:	mov    rdi,rax
   14002edf9:	test   rax,rax
   14002edfc:	je     0x14002ee10
   14002edfe:	jmp    0x14002ece0
   14002ee03:	xor    eax,eax
   14002ee05:	jmp    0x14002ee2e
   14002ee07:	xor    eax,eax
   14002ee09:	jmp    0x14002ee2e
   14002ee0b:	mov    rax,rdi
   14002ee0e:	jmp    0x14002ee2e
   14002ee10:	test   r14,r14
   14002ee13:	je     0x14002ee2b
   14002ee15:	mov    DWORD PTR [rsp+0x20],esi
   14002ee19:	xor    r9d,r9d
   14002ee1c:	xor    r8d,r8d
   14002ee1f:	lea    edx,[r9+0x5]
   14002ee23:	mov    rcx,r14
   14002ee26:	call   0x14002e9f0
   14002ee2b:	mov    rax,rdi
   14002ee2e:	lea    r11,[rsp+0x40]
   14002ee33:	mov    rbx,QWORD PTR [r11+0x30]
   14002ee37:	mov    rbp,QWORD PTR [r11+0x40]
   14002ee3b:	mov    rsi,QWORD PTR [r11+0x48]
   14002ee3f:	mov    rsp,r11
   14002ee42:	pop    r15
   14002ee44:	pop    r14
   14002ee46:	pop    r13
   14002ee48:	pop    r12
   14002ee4a:	pop    rdi
   14002ee4b:	ret    
   14002ee4c:	int3   
   14002ee4d:	int3   
   14002ee4e:	int3   
   14002ee4f:	int3   
   14002ee50:	mov    QWORD PTR [rsp+0x8],rbx
   14002ee55:	mov    QWORD PTR [rsp+0x10],rbp
   14002ee5a:	mov    QWORD PTR [rsp+0x18],rsi
   14002ee5f:	mov    QWORD PTR [rsp+0x20],rdi
   14002ee64:	push   r12
   14002ee66:	sub    rsp,0x30
   14002ee6a:	mov    r12d,r9d
   14002ee6d:	mov    rdi,r8
   14002ee70:	mov    rbx,rdx
   14002ee73:	mov    rbp,rcx
   14002ee76:	call   0x14002a8f0
   14002ee7b:	mov    edx,r12d
   14002ee7e:	mov    rcx,rbx
   14002ee81:	mov    rsi,rax
   14002ee84:	call   0x14002da40
   14002ee89:	mov    rbx,rax
   14002ee8c:	test   rdi,rdi
   14002ee8f:	je     0x14002eea6
   14002ee91:	mov    r8d,r12d
   14002ee94:	mov    rdx,rax
   14002ee97:	mov    rcx,rdi
   14002ee9a:	call   0x14002d8e0
   14002ee9f:	mov    r11,QWORD PTR [rdi]
   14002eea2:	mov    QWORD PTR [rbp+0x8],r11
   14002eea6:	test   rbx,rbx
   14002eea9:	je     0x14002ef24
   14002eeab:	movzx  eax,BYTE PTR [rbx]
   14002eeae:	test   al,al
   14002eeb0:	je     0x14002ef24
   14002eeb2:	cmp    al,0x3c
   14002eeb4:	jne    0x14002ef24
   14002eeb6:	lea    rdx,[rip+0xe8e2]        # 0x14003d79f
   14002eebd:	lea    rcx,[rbp+0x38]
   14002eec1:	xor    r8d,r8d
   14002eec4:	call   0x140002a30
   14002eec9:	add    rbx,0x1
   14002eecd:	je     0x14002eef3
   14002eecf:	nop
   14002eed0:	movzx  r8d,BYTE PTR [rbx]
   14002eed4:	test   r8b,r8b
   14002eed7:	je     0x14002ef14
   14002eed9:	cmp    r8b,0x3e
   14002eedd:	je     0x14002ef19
   14002eedf:	lea    rcx,[rbp+0x38]
   14002eee3:	mov    edx,0x1
   14002eee8:	call   0x14002b600
   14002eeed:	add    rbx,0x1
   14002eef1:	jne    0x14002eed0
   14002eef3:	test   rsi,rsi
   14002eef6:	je     0x14002ef0f
   14002eef8:	xor    r9d,r9d
   14002eefb:	xor    r8d,r8d
   14002eefe:	mov    rcx,rsi
   14002ef01:	lea    edx,[r9+0x9]
   14002ef05:	mov    DWORD PTR [rsp+0x20],r12d
   14002ef0a:	call   0x14002e9f0
   14002ef0f:	test   rbx,rbx
   14002ef12:	je     0x14002ef1f
   14002ef14:	cmp    BYTE PTR [rbx],0x3e
   14002ef17:	jne    0x14002ef1f
   14002ef19:	lea    rax,[rbx+0x1]
   14002ef1d:	jmp    0x14002ef43
   14002ef1f:	mov    rax,rbx
   14002ef22:	jmp    0x14002ef43
   14002ef24:	test   rsi,rsi
   14002ef27:	je     0x14002ef41
   14002ef29:	mov    r9,rdi
   14002ef2c:	mov    r8,rbx
   14002ef2f:	mov    edx,0x9
   14002ef34:	mov    rcx,rsi
   14002ef37:	mov    DWORD PTR [rsp+0x20],r12d
   14002ef3c:	call   0x14002e9f0
   14002ef41:	xor    eax,eax
   14002ef43:	mov    rbx,QWORD PTR [rsp+0x40]
   14002ef48:	mov    rbp,QWORD PTR [rsp+0x48]
   14002ef4d:	mov    rsi,QWORD PTR [rsp+0x50]
   14002ef52:	mov    rdi,QWORD PTR [rsp+0x58]
   14002ef57:	add    rsp,0x30
   14002ef5b:	pop    r12
   14002ef5d:	ret    
   14002ef5e:	int3   
   14002ef5f:	int3   
   14002ef60:	mov    QWORD PTR [rsp+0x8],rbx
   14002ef65:	mov    QWORD PTR [rsp+0x10],rbp
   14002ef6a:	mov    QWORD PTR [rsp+0x18],rsi
   14002ef6f:	mov    QWORD PTR [rsp+0x20],rdi
   14002ef74:	push   r12
   14002ef76:	push   r13
   14002ef78:	push   r14
   14002ef7a:	sub    rsp,0x30
   14002ef7e:	mov    esi,r9d
   14002ef81:	mov    r12,r8
   14002ef84:	mov    rdi,rdx
   14002ef87:	mov    r14,rcx
   14002ef8a:	call   0x14002a8f0
   14002ef8f:	lea    rdx,[rip+0xe809]        # 0x14003d79f
   14002ef96:	lea    rcx,[r14+0x38]
   14002ef9a:	xor    r8d,r8d
   14002ef9d:	mov    r13,rax
   14002efa0:	call   0x140002a30
   14002efa5:	mov    edx,esi
   14002efa7:	mov    rcx,rdi
   14002efaa:	call   0x14002da40
   14002efaf:	mov    rbx,rax
   14002efb2:	test   r12,r12
   14002efb5:	je     0x14002efcd
   14002efb7:	mov    r8d,esi
   14002efba:	mov    rdx,rax
   14002efbd:	mov    rcx,r12
   14002efc0:	call   0x14002d8e0
   14002efc5:	mov    rdx,QWORD PTR [r12]
   14002efc9:	mov    QWORD PTR [r14+0x8],rdx
   14002efcd:	lea    rdx,[rip+0xdb84]        # 0x14003cb58
   14002efd4:	mov    r9d,esi
   14002efd7:	xor    r8d,r8d
   14002efda:	mov    rcx,rbx
   14002efdd:	call   0x14002db20
   14002efe2:	test   al,al
   14002efe4:	jne    0x14002f009
   14002efe6:	test   r13,r13
   14002efe9:	je     0x14002f002
   14002efeb:	mov    r9,r12
   14002efee:	mov    r8,rbx
   14002eff1:	mov    edx,0xa
   14002eff6:	mov    rcx,r13
   14002eff9:	mov    DWORD PTR [rsp+0x20],esi
   14002effd:	call   0x14002e9f0
   14002f002:	xor    eax,eax
   14002f004:	jmp    0x14002f098
   14002f009:	or     rcx,0xffffffffffffffff
   14002f00d:	xor    eax,eax
   14002f00f:	lea    rdi,[rip+0xdb42]        # 0x14003cb58
   14002f016:	repnz scas al,BYTE PTR es:[rdi]
   14002f018:	lea    rdx,[rip+0xe780]        # 0x14003d79f
   14002f01f:	xor    r8d,r8d
   14002f022:	not    rcx
   14002f025:	dec    rcx
   14002f028:	add    rbx,rcx
   14002f02b:	lea    rcx,[r14+0x38]
   14002f02f:	call   0x140002a30
   14002f034:	test   rbx,rbx
   14002f037:	je     0x14002f095
   14002f039:	nop    DWORD PTR [rax+0x0]
   14002f040:	cmp    BYTE PTR [rbx],0x0
   14002f043:	je     0x14002f095
   14002f045:	lea    rdx,[rip+0xdb08]        # 0x14003cb54
   14002f04c:	mov    r9d,esi
   14002f04f:	xor    r8d,r8d
   14002f052:	mov    rcx,rbx
   14002f055:	call   0x14002db20
   14002f05a:	test   al,al
   14002f05c:	jne    0x14002f078
   14002f05e:	lea    rcx,[r14+0x38]
   14002f062:	mov    r8d,0x1
   14002f068:	mov    rdx,rbx
   14002f06b:	call   0x14002a6a0
   14002f070:	add    rbx,0x1
   14002f074:	jne    0x14002f040
   14002f076:	jmp    0x14002f095
   14002f078:	cmp    BYTE PTR [rbx],0x0
   14002f07b:	je     0x14002f095
   14002f07d:	or     rcx,0xffffffffffffffff
   14002f081:	xor    eax,eax
   14002f083:	lea    rdi,[rip+0xdaca]        # 0x14003cb54
   14002f08a:	repnz scas al,BYTE PTR es:[rdi]
   14002f08c:	not    rcx
   14002f08f:	dec    rcx
   14002f092:	add    rbx,rcx
   14002f095:	mov    rax,rbx
   14002f098:	mov    rbx,QWORD PTR [rsp+0x50]
   14002f09d:	mov    rbp,QWORD PTR [rsp+0x58]
   14002f0a2:	mov    rsi,QWORD PTR [rsp+0x60]
   14002f0a7:	mov    rdi,QWORD PTR [rsp+0x68]
   14002f0ac:	add    rsp,0x30
   14002f0b0:	pop    r14
   14002f0b2:	pop    r13
   14002f0b4:	pop    r12
   14002f0b6:	ret    
   14002f0b7:	int3   
   14002f0b8:	int3   
   14002f0b9:	int3   
   14002f0ba:	int3   
   14002f0bb:	int3   
   14002f0bc:	int3   
   14002f0bd:	int3   
   14002f0be:	int3   
   14002f0bf:	int3   
   14002f0c0:	mov    QWORD PTR [rsp+0x10],rbx
   14002f0c5:	mov    QWORD PTR [rsp+0x18],rsi
   14002f0ca:	mov    QWORD PTR [rsp+0x20],rdi
   14002f0cf:	push   r12
   14002f0d1:	sub    rsp,0x30
   14002f0d5:	mov    rax,rdx
   14002f0d8:	mov    rdi,rcx
   14002f0db:	mov    edx,r9d
   14002f0de:	mov    rcx,rax
   14002f0e1:	mov    esi,r9d
   14002f0e4:	mov    r12,r8
   14002f0e7:	call   0x14002da40
   14002f0ec:	mov    rbx,rax
   14002f0ef:	test   rax,rax
   14002f0f2:	je     0x14002f2ba
   14002f0f8:	cmp    BYTE PTR [rax],0x0
   14002f0fb:	je     0x14002f2ba
   14002f101:	test   r12,r12
   14002f104:	je     0x14002f11c
   14002f106:	mov    r8d,esi
   14002f109:	mov    rdx,rax
   14002f10c:	mov    rcx,r12
   14002f10f:	call   0x14002d8e0
   14002f114:	mov    r11,QWORD PTR [r12]
   14002f118:	mov    QWORD PTR [rdi+0x8],r11
   14002f11c:	lea    rdx,[rdi+0x20]
   14002f120:	mov    r8d,esi
   14002f123:	mov    rcx,rbx
   14002f126:	call   0x14002e620
   14002f12b:	test   rax,rax
   14002f12e:	je     0x14002f29d
   14002f134:	cmp    BYTE PTR [rax],0x0
   14002f137:	je     0x14002f29d
   14002f13d:	mov    edx,esi
   14002f13f:	mov    rcx,rax
   14002f142:	call   0x14002da40
   14002f147:	test   rax,rax
   14002f14a:	je     0x14002f279
   14002f150:	movzx  ecx,BYTE PTR [rax]
   14002f153:	test   cl,cl
   14002f155:	je     0x14002f279
   14002f15b:	cmp    cl,0x3d
   14002f15e:	jne    0x14002f279
   14002f164:	lea    rcx,[rax+0x1]
   14002f168:	mov    edx,esi
   14002f16a:	call   0x14002da40
   14002f16f:	mov    rbx,rax
   14002f172:	test   rax,rax
   14002f175:	je     0x14002f29d
   14002f17b:	movzx  eax,BYTE PTR [rax]
   14002f17e:	test   al,al
   14002f180:	je     0x14002f29d
   14002f186:	mov    QWORD PTR [rsp+0x40],rbp
   14002f18b:	cmp    al,0x27
   14002f18d:	jne    0x14002f1d0
   14002f18f:	lea    rdx,[rdi+0x48]
   14002f193:	lea    rcx,[rbx+0x1]
   14002f197:	lea    r9,[rip+0xb692]        # 0x14003a830
   14002f19e:	xor    r8d,r8d
   14002f1a1:	mov    DWORD PTR [rsp+0x28],esi
   14002f1a5:	mov    BYTE PTR [rsp+0x20],0x0
   14002f1aa:	call   0x14002e6e0
   14002f1af:	mov    rbx,rax
   14002f1b2:	mov    rax,rbx
   14002f1b5:	mov    rbp,QWORD PTR [rsp+0x40]
   14002f1ba:	mov    rbx,QWORD PTR [rsp+0x48]
   14002f1bf:	mov    rsi,QWORD PTR [rsp+0x50]
   14002f1c4:	mov    rdi,QWORD PTR [rsp+0x58]
   14002f1c9:	add    rsp,0x30
   14002f1cd:	pop    r12
   14002f1cf:	ret    
   14002f1d0:	cmp    al,0x22
   14002f1d2:	jne    0x14002f1f9
   14002f1d4:	lea    rdx,[rdi+0x48]
   14002f1d8:	lea    rcx,[rbx+0x1]
   14002f1dc:	lea    r9,[rip+0xd84d]        # 0x14003ca30
   14002f1e3:	xor    r8d,r8d
   14002f1e6:	mov    DWORD PTR [rsp+0x28],esi
   14002f1ea:	mov    BYTE PTR [rsp+0x20],0x0
   14002f1ef:	call   0x14002e6e0
   14002f1f4:	mov    rbx,rax
   14002f1f7:	jmp    0x14002f1b2
   14002f1f9:	lea    rdx,[rip+0xe59f]        # 0x14003d79f
   14002f200:	lea    rcx,[rdi+0x48]
   14002f204:	xor    r8d,r8d
   14002f207:	call   0x140002a30
   14002f20c:	nop    DWORD PTR [rax+0x0]
   14002f210:	movzx  ecx,BYTE PTR [rbx]
   14002f213:	test   cl,cl
   14002f215:	je     0x14002f1b2
   14002f217:	call   0x14002d780
   14002f21c:	test   al,al
   14002f21e:	jne    0x14002f1b2
   14002f220:	movzx  r8d,BYTE PTR [rbx]
   14002f224:	cmp    r8b,0x2f
   14002f228:	je     0x14002f1b2
   14002f22a:	cmp    r8b,0x3e
   14002f22e:	je     0x14002f1b2
   14002f230:	cmp    r8b,0x27
   14002f234:	je     0x14002f255
   14002f236:	cmp    r8b,0x22
   14002f23a:	je     0x14002f255
   14002f23c:	lea    rcx,[rdi+0x48]
   14002f240:	mov    edx,0x1
   14002f245:	call   0x14002b600
   14002f24a:	add    rbx,0x1
   14002f24e:	jne    0x14002f210
   14002f250:	jmp    0x14002f1b2
   14002f255:	mov    rcx,QWORD PTR [rdi+0x18]
   14002f259:	test   rcx,rcx
   14002f25c:	je     0x14002f272
   14002f25e:	mov    r9,r12
   14002f261:	mov    r8,rbx
   14002f264:	mov    edx,0x6
   14002f269:	mov    DWORD PTR [rsp+0x20],esi
   14002f26d:	call   0x14002e9f0
   14002f272:	xor    eax,eax
   14002f274:	jmp    0x14002f1b5
   14002f279:	mov    rcx,QWORD PTR [rdi+0x18]
   14002f27d:	test   rcx,rcx
   14002f280:	je     0x14002f296
   14002f282:	mov    r9,r12
   14002f285:	mov    r8,rax
   14002f288:	mov    edx,0x6
   14002f28d:	mov    DWORD PTR [rsp+0x20],esi
   14002f291:	call   0x14002e9f0
   14002f296:	xor    eax,eax
   14002f298:	jmp    0x14002f1ba
   14002f29d:	mov    rcx,QWORD PTR [rdi+0x18]
   14002f2a1:	test   rcx,rcx
   14002f2a4:	je     0x14002f2ba
   14002f2a6:	mov    r9,r12
   14002f2a9:	mov    r8,rbx
   14002f2ac:	mov    edx,0x6
   14002f2b1:	mov    DWORD PTR [rsp+0x20],esi
   14002f2b5:	call   0x14002e9f0
   14002f2ba:	xor    eax,eax
   14002f2bc:	jmp    0x14002f1ba
   14002f2c1:	int3   
   14002f2c2:	int3   
   14002f2c3:	int3   
   14002f2c4:	int3   
   14002f2c5:	int3   
   14002f2c6:	int3   
   14002f2c7:	int3   
   14002f2c8:	int3   
   14002f2c9:	int3   
   14002f2ca:	int3   
   14002f2cb:	int3   
   14002f2cc:	int3   
   14002f2cd:	int3   
   14002f2ce:	int3   
   14002f2cf:	int3   
   14002f2d0:	rex push rbx
   14002f2d2:	push   rbp
   14002f2d3:	push   rsi
   14002f2d4:	push   rdi
   14002f2d5:	push   r12
   14002f2d7:	push   r13
   14002f2d9:	sub    rsp,0x78
   14002f2dd:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002f2e6:	mov    rax,QWORD PTR [rip+0x19ad3]        # 0x140048dc0
   14002f2ed:	xor    rax,rsp
   14002f2f0:	mov    QWORD PTR [rsp+0x60],rax
   14002f2f5:	mov    r13d,r9d
   14002f2f8:	mov    rbp,r8
   14002f2fb:	mov    rsi,rdx
   14002f2fe:	mov    rdi,rcx
   14002f301:	lea    rbx,[rcx+0x38]
   14002f305:	xor    r8d,r8d
   14002f308:	lea    rdx,[rip+0xe490]        # 0x14003d79f
   14002f30f:	mov    rcx,rbx
   14002f312:	call   0x140002a30
   14002f317:	mov    rcx,rdi
   14002f31a:	call   0x14002a8f0
   14002f31f:	mov    r12,rax
   14002f322:	test   rbp,rbp
   14002f325:	je     0x14002f33d
   14002f327:	mov    r8d,r13d
   14002f32a:	mov    rdx,rsi
   14002f32d:	mov    rcx,rbp
   14002f330:	call   0x14002d8e0
   14002f335:	mov    rdx,QWORD PTR [rbp+0x0]
   14002f339:	mov    QWORD PTR [rdi+0x8],rdx
   14002f33d:	cmp    BYTE PTR [rdi+0x70],0x0
   14002f341:	jne    0x14002f393
   14002f343:	mov    r9d,r13d
   14002f346:	xor    r8d,r8d
   14002f349:	lea    rdx,[rip+0xd7f8]        # 0x14003cb48
   14002f350:	mov    rcx,rsi
   14002f353:	call   0x14002db20
   14002f358:	test   al,al
   14002f35a:	jne    0x14002f393
   14002f35c:	mov    DWORD PTR [rsp+0x28],r13d
   14002f361:	mov    BYTE PTR [rsp+0x20],al
   14002f365:	lea    r9,[rip+0xb0c8]        # 0x14003a434
   14002f36c:	mov    r8b,0x1
   14002f36f:	mov    rdx,rbx
   14002f372:	mov    rcx,rsi
   14002f375:	call   0x14002e6e0
   14002f37a:	test   rax,rax
   14002f37d:	je     0x14002f38c
   14002f37f:	cmp    BYTE PTR [rax],0x0
   14002f382:	je     0x14002f38c
   14002f384:	dec    rax
   14002f387:	jmp    0x14002f507
   14002f38c:	xor    eax,eax
   14002f38e:	jmp    0x14002f507
   14002f393:	mov    BYTE PTR [rdi+0x70],0x1
   14002f397:	mov    r9d,r13d
   14002f39a:	xor    r8d,r8d
   14002f39d:	lea    rdx,[rip+0xd7a4]        # 0x14003cb48
   14002f3a4:	mov    rcx,rsi
   14002f3a7:	call   0x14002db20
   14002f3ac:	test   al,al
   14002f3ae:	jne    0x14002f3d4
   14002f3b0:	test   r12,r12
   14002f3b3:	je     0x14002f3cd
   14002f3b5:	mov    DWORD PTR [rsp+0x20],r13d
   14002f3ba:	mov    r9,rbp
   14002f3bd:	mov    r8,rsi
   14002f3c0:	mov    edx,0xe
   14002f3c5:	mov    rcx,r12
   14002f3c8:	call   0x14002e9f0
   14002f3cd:	xor    eax,eax
   14002f3cf:	jmp    0x14002f507
   14002f3d4:	xor    eax,eax
   14002f3d6:	or     rcx,0xffffffffffffffff
   14002f3da:	lea    rdi,[rip+0xd767]        # 0x14003cb48
   14002f3e1:	repnz scas al,BYTE PTR es:[rdi]
   14002f3e3:	not    rcx
   14002f3e6:	dec    rcx
   14002f3e9:	xor    r12d,r12d
   14002f3ec:	add    rsi,rcx
   14002f3ef:	je     0x14002f4bb
   14002f3f5:	cmp    BYTE PTR [rsi],r12b
   14002f3f8:	je     0x14002f4bb
   14002f3fe:	mov    r9d,r13d
   14002f401:	xor    r8d,r8d
   14002f404:	lea    rdx,[rip+0xd735]        # 0x14003cb40
   14002f40b:	mov    rcx,rsi
   14002f40e:	call   0x14002db20
   14002f413:	test   al,al
   14002f415:	jne    0x14002f4bb
   14002f41b:	movzx  ebp,BYTE PTR [rsi]
   14002f41e:	or     rax,0xffffffffffffffff
   14002f422:	sub    rax,QWORD PTR [rbx+0x18]
   14002f426:	cmp    rax,0x1
   14002f42a:	ja     0x14002f431
   14002f42c:	call   0x140031fd4
   14002f431:	mov    rdi,QWORD PTR [rbx+0x18]
   14002f435:	inc    rdi
   14002f438:	cmp    rdi,0xfffffffffffffffe
   14002f43c:	jbe    0x14002f443
   14002f43e:	call   0x140031fd4
   14002f443:	mov    rax,QWORD PTR [rbx+0x20]
   14002f447:	cmp    rax,rdi
   14002f44a:	jae    0x14002f45d
   14002f44c:	mov    r8,QWORD PTR [rbx+0x18]
   14002f450:	mov    rdx,rdi
   14002f453:	mov    rcx,rbx
   14002f456:	call   0x140003460
   14002f45b:	jmp    0x14002f47b
   14002f45d:	test   rdi,rdi
   14002f460:	jne    0x14002f47b
   14002f462:	mov    QWORD PTR [rbx+0x18],r12
   14002f466:	cmp    rax,0x10
   14002f46a:	jb     0x14002f472
   14002f46c:	mov    rax,QWORD PTR [rbx+0x8]
   14002f470:	jmp    0x14002f476
   14002f472:	lea    rax,[rbx+0x8]
   14002f476:	mov    BYTE PTR [rax],r12b
   14002f479:	jmp    0x14002f4b1
   14002f47b:	test   rdi,rdi
   14002f47e:	je     0x14002f4b1
   14002f480:	mov    rdx,QWORD PTR [rbx+0x18]
   14002f484:	cmp    QWORD PTR [rbx+0x20],0x10
   14002f489:	jb     0x14002f494
   14002f48b:	lea    rax,[rbx+0x8]
   14002f48f:	mov    rcx,QWORD PTR [rax]
   14002f492:	jmp    0x14002f49b
   14002f494:	lea    rax,[rbx+0x8]
   14002f498:	mov    rcx,rax
   14002f49b:	mov    BYTE PTR [rcx+rdx*1],bpl
   14002f49f:	mov    QWORD PTR [rbx+0x18],rdi
   14002f4a3:	cmp    QWORD PTR [rbx+0x20],0x10
   14002f4a8:	jb     0x14002f4ad
   14002f4aa:	mov    rax,QWORD PTR [rax]
   14002f4ad:	mov    BYTE PTR [rax+rdi*1],r12b
   14002f4b1:	add    rsi,0x1
   14002f4b5:	jne    0x14002f3f5
   14002f4bb:	mov    QWORD PTR [rsp+0x58],0xf
   14002f4c4:	mov    QWORD PTR [rsp+0x50],r12
   14002f4c9:	mov    BYTE PTR [rsp+0x40],r12b
   14002f4ce:	mov    DWORD PTR [rsp+0x28],r13d
   14002f4d3:	mov    BYTE PTR [rsp+0x20],0x0
   14002f4d8:	lea    r9,[rip+0xd661]        # 0x14003cb40
   14002f4df:	xor    r8d,r8d
   14002f4e2:	lea    rdx,[rsp+0x38]
   14002f4e7:	mov    rcx,rsi
   14002f4ea:	call   0x14002e6e0
   14002f4ef:	mov    rdi,rax
   14002f4f2:	cmp    QWORD PTR [rsp+0x58],0x10
   14002f4f8:	jb     0x14002f504
   14002f4fa:	mov    rcx,QWORD PTR [rsp+0x40]
   14002f4ff:	call   0x1400062d4
   14002f504:	mov    rax,rdi
   14002f507:	mov    rcx,QWORD PTR [rsp+0x60]
   14002f50c:	xor    rcx,rsp
   14002f50f:	call   0x1400144f0
   14002f514:	add    rsp,0x78
   14002f518:	pop    r13
   14002f51a:	pop    r12
   14002f51c:	pop    rdi
   14002f51d:	pop    rsi
   14002f51e:	pop    rbp
   14002f51f:	pop    rbx
   14002f520:	ret    
   14002f521:	int3   
   14002f522:	int3   
   14002f523:	int3   
   14002f524:	int3   
   14002f525:	int3   
   14002f526:	int3   
   14002f527:	int3   
   14002f528:	int3   
   14002f529:	int3   
   14002f52a:	int3   
   14002f52b:	int3   
   14002f52c:	int3   
   14002f52d:	int3   
   14002f52e:	int3   
   14002f52f:	int3   
   14002f530:	rex push rbx
   14002f532:	push   rbp
   14002f533:	push   rsi
   14002f534:	push   rdi
   14002f535:	push   r12
   14002f537:	push   r13
   14002f539:	push   r14
   14002f53b:	push   r15
   14002f53d:	sub    rsp,0x1d8
   14002f544:	mov    QWORD PTR [rsp+0x30],0xfffffffffffffffe
   14002f54d:	mov    rax,QWORD PTR [rip+0x1986c]        # 0x140048dc0
   14002f554:	xor    rax,rsp
   14002f557:	mov    QWORD PTR [rsp+0x1c0],rax
   14002f55f:	mov    ebp,r9d
   14002f562:	mov    r12,r8
   14002f565:	mov    rax,rdx
   14002f568:	mov    rdi,rcx
   14002f56b:	mov    edx,r9d
   14002f56e:	mov    rcx,rax
   14002f571:	call   0x14002da40
   14002f576:	mov    rbx,rax
   14002f579:	mov    rcx,rdi
   14002f57c:	call   0x14002a8f0
   14002f581:	mov    rsi,rax
   14002f584:	test   rbx,rbx
   14002f587:	je     0x14002fa90
   14002f58d:	cmp    BYTE PTR [rbx],0x0
   14002f590:	je     0x14002fa90
   14002f596:	mov    r9d,ebp
   14002f599:	mov    r8b,0x1
   14002f59c:	lea    rdx,[rip+0xdb79]        # 0x14003d11c
   14002f5a3:	mov    rcx,rbx
   14002f5a6:	call   0x14002db20
   14002f5ab:	test   al,al
   14002f5ad:	je     0x14002fa90
   14002f5b3:	test   r12,r12
   14002f5b6:	je     0x14002f5ce
   14002f5b8:	mov    r8d,ebp
   14002f5bb:	mov    rdx,rbx
   14002f5be:	mov    rcx,r12
   14002f5c1:	call   0x14002d8e0
   14002f5c6:	mov    rdx,QWORD PTR [r12]
   14002f5ca:	mov    QWORD PTR [rdi+0x8],rdx
   14002f5ce:	lea    rsi,[rdi+0x70]
   14002f5d2:	xor    r8d,r8d
   14002f5d5:	lea    rdx,[rip+0xe1c3]        # 0x14003d79f
   14002f5dc:	mov    rcx,rsi
   14002f5df:	call   0x140002a30
   14002f5e4:	lea    r13,[rdi+0x98]
   14002f5eb:	xor    r8d,r8d
   14002f5ee:	lea    rdx,[rip+0xe1aa]        # 0x14003d79f
   14002f5f5:	mov    rcx,r13
   14002f5f8:	call   0x140002a30
   14002f5fd:	lea    r14,[rdi+0xc0]
   14002f604:	xor    r8d,r8d
   14002f607:	lea    rdx,[rip+0xe191]        # 0x14003d79f
   14002f60e:	mov    rcx,r14
   14002f611:	call   0x140002a30
   14002f616:	add    rbx,0x5
   14002f61a:	je     0x14002fa8c
   14002f620:	xor    r15d,r15d
   14002f623:	lea    rdi,[rip+0xcee6]        # 0x14003c510
   14002f62a:	nop    WORD PTR [rax+rax*1+0x0]
   14002f630:	movzx  eax,BYTE PTR [rbx]
   14002f633:	test   al,al
   14002f635:	je     0x14002fa8c
   14002f63b:	cmp    al,0x3e
   14002f63d:	je     0x14002fa86
   14002f643:	mov    edx,ebp
   14002f645:	mov    rcx,rbx
   14002f648:	call   0x14002da40
   14002f64d:	mov    rbx,rax
   14002f650:	mov    r9d,ebp
   14002f653:	mov    r8b,0x1
   14002f656:	lea    rdx,[rip+0xdb7b]        # 0x14003d1d8
   14002f65d:	mov    rcx,rax
   14002f660:	call   0x14002db20
   14002f665:	test   al,al
   14002f667:	je     0x14002f789
   14002f66d:	mov    DWORD PTR [rsp+0x4c],0xffffffff
   14002f675:	mov    DWORD PTR [rsp+0x48],0xffffffff
   14002f67d:	mov    QWORD PTR [rsp+0x50],r15
   14002f682:	mov    QWORD PTR [rsp+0x40],rdi
   14002f687:	mov    QWORD PTR [rsp+0x80],0xf
   14002f693:	mov    QWORD PTR [rsp+0x78],r15
   14002f698:	mov    BYTE PTR [rsp+0x68],0x0
   14002f69d:	mov    QWORD PTR [rsp+0xa8],0xf
   14002f6a9:	mov    QWORD PTR [rsp+0xa0],r15
   14002f6b1:	mov    BYTE PTR [rsp+0x90],0x0
   14002f6b9:	mov    QWORD PTR [rsp+0x58],r15
   14002f6be:	mov    QWORD PTR [rsp+0xb8],r15
   14002f6c6:	mov    QWORD PTR [rsp+0xb0],r15
   14002f6ce:	mov    r9d,ebp
   14002f6d1:	mov    r8,r12
   14002f6d4:	mov    rdx,rbx
   14002f6d7:	lea    rcx,[rsp+0x40]
   14002f6dc:	call   0x14002f0c0
   14002f6e1:	mov    rbx,rax
   14002f6e4:	lea    rdx,[rsp+0x90]
   14002f6ec:	cmp    QWORD PTR [rsp+0xa8],0x10
   14002f6f5:	cmovae rdx,QWORD PTR [rsp+0x90]
   14002f6fe:	xor    eax,eax
   14002f700:	or     rcx,0xffffffffffffffff
   14002f704:	mov    rdi,rdx
   14002f707:	repnz scas al,BYTE PTR es:[rdi]
   14002f709:	not    rcx
   14002f70c:	lea    r8,[rcx-0x1]
   14002f710:	mov    rcx,rsi
   14002f713:	call   0x140002a30
   14002f718:	nop
   14002f719:	cmp    QWORD PTR [rsp+0xa8],0x10
   14002f722:	jb     0x14002f731
   14002f724:	mov    rcx,QWORD PTR [rsp+0x90]
   14002f72c:	call   0x1400062d4
   14002f731:	mov    QWORD PTR [rsp+0xa8],0xf
   14002f73d:	mov    QWORD PTR [rsp+0xa0],r15
   14002f745:	mov    BYTE PTR [rsp+0x90],0x0
   14002f74d:	cmp    QWORD PTR [rsp+0x80],0x10
   14002f756:	jb     0x14002f762
   14002f758:	mov    rcx,QWORD PTR [rsp+0x68]
   14002f75d:	call   0x1400062d4
   14002f762:	mov    QWORD PTR [rsp+0x80],0xf
   14002f76e:	mov    QWORD PTR [rsp+0x78],r15
   14002f773:	mov    BYTE PTR [rsp+0x68],0x0
   14002f778:	lea    rax,[rip+0xcd29]        # 0x14003c4a8
   14002f77f:	mov    QWORD PTR [rsp+0x40],rax
   14002f784:	jmp    0x14002fa74
   14002f789:	mov    r9d,ebp
   14002f78c:	mov    r8b,0x1
   14002f78f:	lea    rdx,[rip+0xda32]        # 0x14003d1c8
   14002f796:	mov    rcx,rbx
   14002f799:	call   0x14002db20
   14002f79e:	test   al,al
   14002f7a0:	je     0x14002f8e6
   14002f7a6:	mov    DWORD PTR [rsp+0xcc],0xffffffff
   14002f7b1:	mov    DWORD PTR [rsp+0xc8],0xffffffff
   14002f7bc:	mov    QWORD PTR [rsp+0xd0],r15
   14002f7c4:	mov    QWORD PTR [rsp+0xc0],rdi
   14002f7cc:	mov    QWORD PTR [rsp+0x100],0xf
   14002f7d8:	mov    QWORD PTR [rsp+0xf8],r15
   14002f7e0:	mov    BYTE PTR [rsp+0xe8],0x0
   14002f7e8:	mov    QWORD PTR [rsp+0x128],0xf
   14002f7f4:	mov    QWORD PTR [rsp+0x120],r15
   14002f7fc:	mov    BYTE PTR [rsp+0x110],0x0
   14002f804:	mov    QWORD PTR [rsp+0xd8],r15
   14002f80c:	mov    QWORD PTR [rsp+0x138],r15
   14002f814:	mov    QWORD PTR [rsp+0x130],r15
   14002f81c:	mov    r9d,ebp
   14002f81f:	mov    r8,r12
   14002f822:	mov    rdx,rbx
   14002f825:	lea    rcx,[rsp+0xc0]
   14002f82d:	call   0x14002f0c0
   14002f832:	mov    rbx,rax
   14002f835:	lea    rdx,[rsp+0x110]
   14002f83d:	cmp    QWORD PTR [rsp+0x128],0x10
   14002f846:	cmovae rdx,QWORD PTR [rsp+0x110]
   14002f84f:	xor    eax,eax
   14002f851:	or     rcx,0xffffffffffffffff
   14002f855:	mov    rdi,rdx
   14002f858:	repnz scas al,BYTE PTR es:[rdi]
   14002f85a:	not    rcx
   14002f85d:	lea    r8,[rcx-0x1]
   14002f861:	mov    rcx,r13
   14002f864:	call   0x140002a30
   14002f869:	nop
   14002f86a:	cmp    QWORD PTR [rsp+0x128],0x10
   14002f873:	jb     0x14002f882
   14002f875:	mov    rcx,QWORD PTR [rsp+0x110]
   14002f87d:	call   0x1400062d4
   14002f882:	mov    QWORD PTR [rsp+0x128],0xf
   14002f88e:	mov    QWORD PTR [rsp+0x120],r15
   14002f896:	mov    BYTE PTR [rsp+0x110],0x0
   14002f89e:	cmp    QWORD PTR [rsp+0x100],0x10
   14002f8a7:	jb     0x14002f8b6
   14002f8a9:	mov    rcx,QWORD PTR [rsp+0xe8]
   14002f8b1:	call   0x1400062d4
   14002f8b6:	mov    QWORD PTR [rsp+0x100],0xf
   14002f8c2:	mov    QWORD PTR [rsp+0xf8],r15
   14002f8ca:	mov    BYTE PTR [rsp+0xe8],0x0
   14002f8d2:	lea    rax,[rip+0xcbcf]        # 0x14003c4a8
   14002f8d9:	mov    QWORD PTR [rsp+0xc0],rax
   14002f8e1:	jmp    0x14002fa74
   14002f8e6:	mov    r9d,ebp
   14002f8e9:	mov    r8b,0x1
   14002f8ec:	lea    rdx,[rip+0xd8c5]        # 0x14003d1b8
   14002f8f3:	mov    rcx,rbx
   14002f8f6:	call   0x14002db20
   14002f8fb:	test   al,al
   14002f8fd:	je     0x14002fa40
   14002f903:	mov    DWORD PTR [rsp+0x14c],0xffffffff
   14002f90e:	mov    DWORD PTR [rsp+0x148],0xffffffff
   14002f919:	mov    QWORD PTR [rsp+0x150],r15
   14002f921:	mov    QWORD PTR [rsp+0x140],rdi
   14002f929:	mov    QWORD PTR [rsp+0x180],0xf
   14002f935:	mov    QWORD PTR [rsp+0x178],r15
   14002f93d:	mov    BYTE PTR [rsp+0x168],0x0
   14002f945:	mov    QWORD PTR [rsp+0x1a8],0xf
   14002f951:	mov    QWORD PTR [rsp+0x1a0],r15
   14002f959:	mov    BYTE PTR [rsp+0x190],0x0
   14002f961:	mov    QWORD PTR [rsp+0x158],r15
   14002f969:	mov    QWORD PTR [rsp+0x1b8],r15
   14002f971:	mov    QWORD PTR [rsp+0x1b0],r15
   14002f979:	mov    r9d,ebp
   14002f97c:	mov    r8,r12
   14002f97f:	mov    rdx,rbx
   14002f982:	lea    rcx,[rsp+0x140]
   14002f98a:	call   0x14002f0c0
   14002f98f:	mov    rbx,rax
   14002f992:	lea    rdx,[rsp+0x190]
   14002f99a:	cmp    QWORD PTR [rsp+0x1a8],0x10
   14002f9a3:	cmovae rdx,QWORD PTR [rsp+0x190]
   14002f9ac:	xor    eax,eax
   14002f9ae:	or     rcx,0xffffffffffffffff
   14002f9b2:	mov    rdi,rdx
   14002f9b5:	repnz scas al,BYTE PTR es:[rdi]
   14002f9b7:	not    rcx
   14002f9ba:	lea    r8,[rcx-0x1]
   14002f9be:	mov    rcx,r14
   14002f9c1:	call   0x140002a30
   14002f9c6:	nop
   14002f9c7:	cmp    QWORD PTR [rsp+0x1a8],0x10
   14002f9d0:	jb     0x14002f9df
   14002f9d2:	mov    rcx,QWORD PTR [rsp+0x190]
   14002f9da:	call   0x1400062d4
   14002f9df:	mov    QWORD PTR [rsp+0x1a8],0xf
   14002f9eb:	mov    QWORD PTR [rsp+0x1a0],r15
   14002f9f3:	mov    BYTE PTR [rsp+0x190],0x0
   14002f9fb:	cmp    QWORD PTR [rsp+0x180],0x10
   14002fa04:	jb     0x14002fa13
   14002fa06:	mov    rcx,QWORD PTR [rsp+0x168]
   14002fa0e:	call   0x1400062d4
   14002fa13:	mov    QWORD PTR [rsp+0x180],0xf
   14002fa1f:	mov    QWORD PTR [rsp+0x178],r15
   14002fa27:	mov    BYTE PTR [rsp+0x168],0x0
   14002fa2f:	lea    rax,[rip+0xca72]        # 0x14003c4a8
   14002fa36:	mov    QWORD PTR [rsp+0x140],rax
   14002fa3e:	jmp    0x14002fa74
   14002fa40:	test   rbx,rbx
   14002fa43:	je     0x14002fa8c
   14002fa45:	movzx  edi,BYTE PTR [rbx]
   14002fa48:	test   dil,dil
   14002fa4b:	je     0x14002fa74
   14002fa4d:	cmp    dil,0x3e
   14002fa51:	je     0x14002fa74
   14002fa53:	movzx  ecx,dil
   14002fa57:	call   0x1400235ec
   14002fa5c:	test   eax,eax
   14002fa5e:	jne    0x14002fa74
   14002fa60:	cmp    dil,0xa
   14002fa64:	je     0x14002fa74
   14002fa66:	cmp    dil,0xd
   14002fa6a:	je     0x14002fa74
   14002fa6c:	add    rbx,0x1
   14002fa70:	je     0x14002fa8c
   14002fa72:	jmp    0x14002fa45
   14002fa74:	test   rbx,rbx
   14002fa77:	lea    rdi,[rip+0xca92]        # 0x14003c510
   14002fa7e:	jne    0x14002f630
   14002fa84:	jmp    0x14002fa8c
   14002fa86:	lea    rax,[rbx+0x1]
   14002fa8a:	jmp    0x14002faad
   14002fa8c:	xor    eax,eax
   14002fa8e:	jmp    0x14002faad
   14002fa90:	test   rsi,rsi
   14002fa93:	je     0x14002faab
   14002fa95:	mov    DWORD PTR [rsp+0x20],ebp
   14002fa99:	xor    r9d,r9d
   14002fa9c:	xor    r8d,r8d
   14002fa9f:	lea    edx,[r9+0xb]
   14002faa3:	mov    rcx,rsi
   14002faa6:	call   0x14002e9f0
   14002faab:	xor    eax,eax
   14002faad:	mov    rcx,QWORD PTR [rsp+0x1c0]
   14002fab5:	xor    rcx,rsp
   14002fab8:	call   0x1400144f0
   14002fabd:	add    rsp,0x1d8
   14002fac4:	pop    r15
   14002fac6:	pop    r14
   14002fac8:	pop    r13
   14002faca:	pop    r12
   14002facc:	pop    rdi
   14002facd:	pop    rsi
   14002face:	pop    rbp
   14002facf:	pop    rbx
   14002fad0:	ret    
   14002fad1:	int3   
   14002fad2:	int3   
   14002fad3:	int3   
   14002fad4:	int3   
   14002fad5:	int3   
   14002fad6:	int3   
   14002fad7:	int3   
   14002fad8:	int3   
   14002fad9:	int3   
   14002fada:	int3   
   14002fadb:	int3   
   14002fadc:	int3   
   14002fadd:	int3   
   14002fade:	int3   
   14002fadf:	int3   
   14002fae0:	mov    QWORD PTR [rsp+0x8],rbx
   14002fae5:	mov    QWORD PTR [rsp+0x10],rbp
   14002faea:	mov    QWORD PTR [rsp+0x18],rsi
   14002faef:	mov    QWORD PTR [rsp+0x20],rdi
   14002faf4:	push   r12
   14002faf6:	sub    rsp,0x50
   14002fafa:	mov    rdi,rdx
   14002fafd:	mov    rsi,r8
   14002fb00:	mov    rbp,rcx
   14002fb03:	mov    BYTE PTR [rcx+0x70],0x0
   14002fb07:	xor    r12d,r12d
   14002fb0a:	lea    rdx,[rip+0xdc8e]        # 0x14003d79f
   14002fb11:	mov    DWORD PTR [rcx+0x74],r12d
   14002fb15:	add    rcx,0x78
   14002fb19:	xor    r8d,r8d
   14002fb1c:	mov    ebx,r9d
   14002fb1f:	call   0x140002a30
   14002fb24:	mov    DWORD PTR [rbp+0xa8],r12d
   14002fb2b:	mov    DWORD PTR [rbp+0xa4],r12d
   14002fb32:	test   rdi,rdi
   14002fb35:	je     0x14002fcca
   14002fb3b:	cmp    BYTE PTR [rdi],r12b
   14002fb3e:	je     0x14002fcca
   14002fb44:	mov    DWORD PTR [rbp+0xc],0xffffffff
   14002fb4b:	mov    DWORD PTR [rbp+0x8],0xffffffff
   14002fb52:	test   rsi,rsi
   14002fb55:	je     0x14002fb64
   14002fb57:	mov    eax,DWORD PTR [rsi]
   14002fb59:	mov    DWORD PTR [rbp+0x8],eax
   14002fb5c:	mov    eax,DWORD PTR [rsi+0x4]
   14002fb5f:	mov    DWORD PTR [rbp+0xc],eax
   14002fb62:	jmp    0x14002fb6c
   14002fb64:	mov    DWORD PTR [rbp+0x8],r12d
   14002fb68:	mov    DWORD PTR [rbp+0xc],r12d
   14002fb6c:	mov    eax,DWORD PTR [rbp+0xa0]
   14002fb72:	mov    QWORD PTR [rsp+0x38],rdi
   14002fb77:	mov    DWORD PTR [rsp+0x40],eax
   14002fb7b:	mov    eax,DWORD PTR [rbp+0x8]
   14002fb7e:	mov    DWORD PTR [rsp+0x30],eax
   14002fb82:	mov    eax,DWORD PTR [rbp+0xc]
   14002fb85:	mov    DWORD PTR [rsp+0x34],eax
   14002fb89:	mov    rax,QWORD PTR [rsp+0x30]
   14002fb8e:	mov    QWORD PTR [rbp+0x8],rax
   14002fb92:	test   ebx,ebx
   14002fb94:	jne    0x14002fbc4
   14002fb96:	movzx  eax,BYTE PTR [rdi]
   14002fb99:	test   al,al
   14002fb9b:	je     0x14002fbc4
   14002fb9d:	cmp    al,0xef
   14002fb9f:	jne    0x14002fbc4
   14002fba1:	movzx  eax,BYTE PTR [rdi+0x1]
   14002fba5:	test   al,al
   14002fba7:	je     0x14002fbc4
   14002fba9:	cmp    al,0xbb
   14002fbab:	jne    0x14002fbc4
   14002fbad:	movzx  eax,BYTE PTR [rdi+0x2]
   14002fbb1:	test   al,al
   14002fbb3:	je     0x14002fbc4
   14002fbb5:	cmp    al,0xbf
   14002fbb7:	jne    0x14002fbc4
   14002fbb9:	mov    ebx,0x1
   14002fbbe:	mov    BYTE PTR [rbp+0xac],bl
   14002fbc4:	mov    edx,ebx
   14002fbc6:	mov    rcx,rdi
   14002fbc9:	call   0x14002da40
   14002fbce:	mov    rdi,rax
   14002fbd1:	test   rax,rax
   14002fbd4:	je     0x14002fcca
   14002fbda:	nop    WORD PTR [rax+rax*1+0x0]
   14002fbe0:	cmp    BYTE PTR [rdi],r12b
   14002fbe3:	je     0x14002fcb9
   14002fbe9:	mov    r8d,ebx
   14002fbec:	mov    rdx,rdi
   14002fbef:	mov    rcx,rbp
   14002fbf2:	call   0x14002ea90
   14002fbf7:	mov    rsi,rax
   14002fbfa:	test   rax,rax
   14002fbfd:	je     0x14002fcb9
   14002fc03:	mov    r10,QWORD PTR [rax]
   14002fc06:	lea    r8,[rsp+0x30]
   14002fc0b:	mov    r9d,ebx
   14002fc0e:	mov    rdx,rdi
   14002fc11:	mov    rcx,rax
   14002fc14:	call   QWORD PTR [r10+0x10]
   14002fc18:	mov    rdx,rsi
   14002fc1b:	mov    rcx,rbp
   14002fc1e:	mov    rdi,rax
   14002fc21:	call   0x14002ab90
   14002fc26:	test   ebx,ebx
   14002fc28:	jne    0x14002fca3
   14002fc2a:	mov    rdx,QWORD PTR [rsi]
   14002fc2d:	mov    rcx,rsi
   14002fc30:	call   QWORD PTR [rdx+0x68]
   14002fc33:	test   rax,rax
   14002fc36:	je     0x14002fca3
   14002fc38:	mov    rdx,QWORD PTR [rsi]
   14002fc3b:	mov    rcx,rsi
   14002fc3e:	call   QWORD PTR [rdx+0x68]
   14002fc41:	cmp    QWORD PTR [rax+0xb8],0x10
   14002fc49:	jb     0x14002fc54
   14002fc4b:	mov    rbx,QWORD PTR [rax+0xa0]
   14002fc52:	jmp    0x14002fc5b
   14002fc54:	lea    rbx,[rax+0xa0]
   14002fc5b:	cmp    BYTE PTR [rbx],r12b
   14002fc5e:	jne    0x14002fc67
   14002fc60:	mov    ebx,0x1
   14002fc65:	jmp    0x14002fca3
   14002fc67:	lea    rdx,[rip+0xd57a]        # 0x14003d1e8
   14002fc6e:	xor    r9d,r9d
   14002fc71:	mov    r8b,0x1
   14002fc74:	mov    rcx,rbx
   14002fc77:	call   0x14002db20
   14002fc7c:	test   al,al
   14002fc7e:	je     0x14002fc87
   14002fc80:	mov    ebx,0x1
   14002fc85:	jmp    0x14002fca3
   14002fc87:	lea    rdx,[rip+0xd552]        # 0x14003d1e0
   14002fc8e:	xor    r9d,r9d
   14002fc91:	mov    r8b,0x1
   14002fc94:	mov    rcx,rbx
   14002fc97:	call   0x14002db20
   14002fc9c:	neg    al
   14002fc9e:	sbb    ebx,ebx
   14002fca0:	add    ebx,0x2
   14002fca3:	mov    edx,ebx
   14002fca5:	mov    rcx,rdi
   14002fca8:	call   0x14002da40
   14002fcad:	mov    rdi,rax
   14002fcb0:	test   rax,rax
   14002fcb3:	jne    0x14002fbe0
   14002fcb9:	cmp    QWORD PTR [rbp+0x28],r12
   14002fcbd:	jne    0x14002fcc5
   14002fcbf:	mov    DWORD PTR [rsp+0x20],ebx
   14002fcc3:	jmp    0x14002fccf
   14002fcc5:	mov    rax,rdi
   14002fcc8:	jmp    0x14002fce3
   14002fcca:	mov    DWORD PTR [rsp+0x20],r12d
   14002fccf:	xor    r9d,r9d
   14002fcd2:	xor    r8d,r8d
   14002fcd5:	mov    rcx,rbp
   14002fcd8:	lea    edx,[r9+0xc]
   14002fcdc:	call   0x14002e9f0
   14002fce1:	xor    eax,eax
   14002fce3:	mov    rbx,QWORD PTR [rsp+0x60]
   14002fce8:	mov    rbp,QWORD PTR [rsp+0x68]
   14002fced:	mov    rsi,QWORD PTR [rsp+0x70]
   14002fcf2:	mov    rdi,QWORD PTR [rsp+0x78]
   14002fcf7:	add    rsp,0x50
   14002fcfb:	pop    r12
   14002fcfd:	ret    
   14002fcfe:	int3   
   14002fcff:	int3   
   14002fd00:	rex push rbx
   14002fd02:	push   rbp
   14002fd03:	push   rsi
   14002fd04:	push   rdi
   14002fd05:	push   r12
   14002fd07:	push   r13
   14002fd09:	push   r14
   14002fd0b:	push   r15
   14002fd0d:	sub    rsp,0x78
   14002fd11:	mov    QWORD PTR [rsp+0x38],0xfffffffffffffffe
   14002fd1a:	mov    rax,QWORD PTR [rip+0x1909f]        # 0x140048dc0
   14002fd21:	xor    rax,rsp
   14002fd24:	mov    QWORD PTR [rsp+0x68],rax
   14002fd29:	mov    ebp,r9d
   14002fd2c:	mov    r13,r8
   14002fd2f:	mov    rax,rdx
   14002fd32:	mov    r14,rcx
   14002fd35:	mov    QWORD PTR [rsp+0x30],rcx
   14002fd3a:	mov    edx,r9d
   14002fd3d:	mov    rcx,rax
   14002fd40:	call   0x14002da40
   14002fd45:	mov    rdi,rax
   14002fd48:	mov    rcx,r14
   14002fd4b:	call   0x14002a8f0
   14002fd50:	mov    rbx,rax
   14002fd53:	test   rdi,rdi
   14002fd56:	je     0x140030191
   14002fd5c:	cmp    BYTE PTR [rdi],0x0
   14002fd5f:	je     0x140030191
   14002fd65:	test   r13,r13
   14002fd68:	je     0x14002fd80
   14002fd6a:	mov    r8d,ebp
   14002fd6d:	mov    rdx,rdi
   14002fd70:	mov    rcx,r13
   14002fd73:	call   0x14002d8e0
   14002fd78:	mov    r11,QWORD PTR [r13+0x0]
   14002fd7c:	mov    QWORD PTR [r14+0x8],r11
   14002fd80:	cmp    BYTE PTR [rdi],0x3c
   14002fd83:	je     0x14002fda8
   14002fd85:	test   rbx,rbx
   14002fd88:	je     0x14002fda1
   14002fd8a:	mov    DWORD PTR [rsp+0x20],ebp
   14002fd8e:	mov    r9,r13
   14002fd91:	mov    r8,rdi
   14002fd94:	mov    edx,0x3
   14002fd99:	mov    rcx,rbx
   14002fd9c:	call   0x14002e9f0
   14002fda1:	xor    eax,eax
   14002fda3:	jmp    0x1400301ae
   14002fda8:	lea    rcx,[rdi+0x1]
   14002fdac:	mov    edx,ebp
   14002fdae:	call   0x14002da40
   14002fdb3:	mov    rdi,rax
   14002fdb6:	mov    r8d,ebp
   14002fdb9:	lea    rdx,[r14+0x38]
   14002fdbd:	mov    rcx,rax
   14002fdc0:	call   0x14002e620
   14002fdc5:	mov    r12,rax
   14002fdc8:	test   rax,rax
   14002fdcb:	je     0x140030171
   14002fdd1:	cmp    BYTE PTR [rax],0x0
   14002fdd4:	je     0x140030171
   14002fdda:	mov    QWORD PTR [rsp+0x60],0xf
   14002fde3:	mov    QWORD PTR [rsp+0x58],0x0
   14002fdec:	mov    BYTE PTR [rsp+0x48],0x0
   14002fdf1:	mov    r8d,0x2
   14002fdf7:	lea    rdx,[rip+0xcd12]        # 0x14003cb10
   14002fdfe:	lea    rcx,[rsp+0x40]
   14002fe03:	call   0x140002a30
   14002fe08:	nop
   14002fe09:	or     r9,0xffffffffffffffff
   14002fe0d:	xor    r8d,r8d
   14002fe10:	lea    rdx,[r14+0x38]
   14002fe14:	lea    rcx,[rsp+0x40]
   14002fe19:	call   0x14002a3e0
   14002fe1e:	lea    r15,[rip+0xc6eb]        # 0x14003c510
   14002fe25:	cmp    BYTE PTR [r12],0x0
   14002fe2a:	je     0x14003015a
   14002fe30:	mov    edx,ebp
   14002fe32:	mov    rcx,r12
   14002fe35:	call   0x14002da40
   14002fe3a:	mov    rdi,rax
   14002fe3d:	test   rax,rax
   14002fe40:	je     0x140030127
   14002fe46:	movzx  eax,BYTE PTR [rax]
   14002fe49:	test   al,al
   14002fe4b:	je     0x140030127
   14002fe51:	cmp    al,0x2f
   14002fe53:	je     0x1400300cf
   14002fe59:	cmp    al,0x3e
   14002fe5b:	je     0x14002ffa5
   14002fe61:	mov    ecx,0x80
   14002fe66:	call   0x140006290
   14002fe6b:	mov    rsi,rax
   14002fe6e:	test   rax,rax
   14002fe71:	je     0x14002ff8c
   14002fe77:	mov    DWORD PTR [rax+0xc],0xffffffff
   14002fe7e:	mov    DWORD PTR [rax+0x8],0xffffffff
   14002fe85:	xor    eax,eax
   14002fe87:	mov    QWORD PTR [rsi+0x10],rax
   14002fe8b:	mov    QWORD PTR [rsi],r15
   14002fe8e:	mov    QWORD PTR [rsi+0x40],0xf
   14002fe96:	mov    QWORD PTR [rsi+0x38],rax
   14002fe9a:	mov    BYTE PTR [rsi+0x28],al
   14002fe9d:	mov    QWORD PTR [rsi+0x68],0xf
   14002fea5:	mov    QWORD PTR [rsi+0x60],rax
   14002fea9:	mov    BYTE PTR [rsi+0x50],al
   14002feac:	mov    QWORD PTR [rsi+0x78],rax
   14002feb0:	mov    QWORD PTR [rsi+0x70],rax
   14002feb4:	mov    QWORD PTR [rsi+0x18],rbx
   14002feb8:	mov    rax,QWORD PTR [rsi]
   14002febb:	mov    r9d,ebp
   14002febe:	mov    r8,r13
   14002fec1:	mov    rdx,rdi
   14002fec4:	mov    rcx,rsi
   14002fec7:	call   QWORD PTR [rax+0x10]
   14002feca:	mov    r12,rax
   14002fecd:	test   rax,rax
   14002fed0:	je     0x14002ff49
   14002fed2:	cmp    BYTE PTR [rax],0x0
   14002fed5:	je     0x14002ff49
   14002fed7:	lea    rdx,[rsi+0x20]
   14002fedb:	lea    rcx,[r14+0x70]
   14002fedf:	call   0x14002b2d0
   14002fee4:	test   rax,rax
   14002fee7:	jne    0x14002ff06
   14002fee9:	mov    rdx,rsi
   14002feec:	lea    rcx,[r14+0x70]
   14002fef0:	call   0x14002aac0
   14002fef5:	mov    r14,QWORD PTR [rsp+0x30]
   14002fefa:	lea    r15,[rip+0xc60f]        # 0x14003c510
   14002ff01:	jmp    0x14002fe25
   14002ff06:	test   rbx,rbx
   14002ff09:	je     0x14002ff22
   14002ff0b:	mov    DWORD PTR [rsp+0x20],ebp
   14002ff0f:	mov    r9,r13
   14002ff12:	mov    r8,rdi
   14002ff15:	mov    edx,0x3
   14002ff1a:	mov    rcx,rbx
   14002ff1d:	call   0x14002e9f0
   14002ff22:	mov    rax,QWORD PTR [rsi]
   14002ff25:	mov    edx,0x1
   14002ff2a:	mov    rcx,rsi
   14002ff2d:	call   QWORD PTR [rax]
   14002ff2f:	nop
   14002ff30:	cmp    QWORD PTR [rsp+0x60],0x10
   14002ff36:	jb     0x14002ff42
   14002ff38:	mov    rcx,QWORD PTR [rsp+0x48]
   14002ff3d:	call   0x1400062d4
   14002ff42:	xor    eax,eax
   14002ff44:	jmp    0x1400301ae
   14002ff49:	test   rbx,rbx
   14002ff4c:	je     0x14002ff65
   14002ff4e:	mov    DWORD PTR [rsp+0x20],ebp
   14002ff52:	mov    r9,r13
   14002ff55:	mov    r8,rdi
   14002ff58:	mov    edx,0x3
   14002ff5d:	mov    rcx,rbx
   14002ff60:	call   0x14002e9f0
   14002ff65:	mov    rax,QWORD PTR [rsi]
   14002ff68:	mov    edx,0x1
   14002ff6d:	mov    rcx,rsi
   14002ff70:	call   QWORD PTR [rax]
   14002ff72:	nop
   14002ff73:	cmp    QWORD PTR [rsp+0x60],0x10
   14002ff79:	jb     0x14002ff85
   14002ff7b:	mov    rcx,QWORD PTR [rsp+0x48]
   14002ff80:	call   0x1400062d4
   14002ff85:	xor    eax,eax
   14002ff87:	jmp    0x1400301ae
   14002ff8c:	cmp    QWORD PTR [rsp+0x60],0x10
   14002ff92:	jb     0x14002ff9e
   14002ff94:	mov    rcx,QWORD PTR [rsp+0x48]
   14002ff99:	call   0x1400062d4
   14002ff9e:	xor    eax,eax
   14002ffa0:	jmp    0x1400301ae
   14002ffa5:	lea    rdx,[rdi+0x1]
   14002ffa9:	mov    r9d,ebp
   14002ffac:	mov    r8,r13
   14002ffaf:	mov    rcx,r14
   14002ffb2:	call   0x14002ec80
   14002ffb7:	mov    rdi,rax
   14002ffba:	test   rax,rax
   14002ffbd:	je     0x140030099
   14002ffc3:	cmp    BYTE PTR [rax],0x0
   14002ffc6:	je     0x140030099
   14002ffcc:	lea    rdx,[rsp+0x48]
   14002ffd1:	cmp    QWORD PTR [rsp+0x60],0x10
   14002ffd7:	cmovae rdx,QWORD PTR [rsp+0x48]
   14002ffdd:	mov    r9d,ebp
   14002ffe0:	xor    r8d,r8d
   14002ffe3:	mov    rcx,rax
   14002ffe6:	call   0x14002db20
   14002ffeb:	test   al,al
   14002ffed:	je     0x140030063
   14002ffef:	add    rdi,QWORD PTR [rsp+0x58]
   14002fff4:	mov    edx,ebp
   14002fff6:	mov    rcx,rdi
   14002fff9:	call   0x14002da40
   14002fffe:	test   rax,rax
   140030001:	je     0x14003002d
   140030003:	movzx  ecx,BYTE PTR [rax]
   140030006:	test   cl,cl
   140030008:	je     0x14003002d
   14003000a:	cmp    cl,0x3e
   14003000d:	jne    0x14003002d
   14003000f:	lea    rbx,[rax+0x1]
   140030013:	cmp    QWORD PTR [rsp+0x60],0x10
   140030019:	jb     0x140030025
   14003001b:	mov    rcx,QWORD PTR [rsp+0x48]
   140030020:	call   0x1400062d4
   140030025:	mov    rax,rbx
   140030028:	jmp    0x1400301ae
   14003002d:	test   rbx,rbx
   140030030:	je     0x14003004a
   140030032:	mov    DWORD PTR [rsp+0x20],ebp
   140030036:	mov    r9,r13
   140030039:	mov    r8,rax
   14003003c:	mov    edx,0x8
   140030041:	mov    rcx,rbx
   140030044:	call   0x14002e9f0
   140030049:	nop
   14003004a:	cmp    QWORD PTR [rsp+0x60],0x10
   140030050:	jb     0x14003005c
   140030052:	mov    rcx,QWORD PTR [rsp+0x48]
   140030057:	call   0x1400062d4
   14003005c:	xor    eax,eax
   14003005e:	jmp    0x1400301ae
   140030063:	test   rbx,rbx
   140030066:	je     0x140030080
   140030068:	mov    DWORD PTR [rsp+0x20],ebp
   14003006c:	mov    r9,r13
   14003006f:	mov    r8,rdi
   140030072:	mov    edx,0x8
   140030077:	mov    rcx,rbx
   14003007a:	call   0x14002e9f0
   14003007f:	nop
   140030080:	cmp    QWORD PTR [rsp+0x60],0x10
   140030086:	jb     0x140030092
   140030088:	mov    rcx,QWORD PTR [rsp+0x48]
   14003008d:	call   0x1400062d4
   140030092:	xor    eax,eax
   140030094:	jmp    0x1400301ae
   140030099:	test   rbx,rbx
   14003009c:	je     0x1400300b6
   14003009e:	mov    DWORD PTR [rsp+0x20],ebp
   1400300a2:	mov    r9,r13
   1400300a5:	mov    r8,rax
   1400300a8:	mov    edx,0x8
   1400300ad:	mov    rcx,rbx
   1400300b0:	call   0x14002e9f0
   1400300b5:	nop
   1400300b6:	cmp    QWORD PTR [rsp+0x60],0x10
   1400300bc:	jb     0x1400300c8
   1400300be:	mov    rcx,QWORD PTR [rsp+0x48]
   1400300c3:	call   0x1400062d4
   1400300c8:	xor    eax,eax
   1400300ca:	jmp    0x1400301ae
   1400300cf:	cmp    BYTE PTR [rdi+0x1],0x3e
   1400300d3:	je     0x14003010c
   1400300d5:	test   rbx,rbx
   1400300d8:	je     0x1400300f3
   1400300da:	mov    DWORD PTR [rsp+0x20],ebp
   1400300de:	mov    r9,r13
   1400300e1:	lea    r8,[rdi+0x1]
   1400300e5:	mov    edx,0x7
   1400300ea:	mov    rcx,rbx
   1400300ed:	call   0x14002e9f0
   1400300f2:	nop
   1400300f3:	cmp    QWORD PTR [rsp+0x60],0x10
   1400300f9:	jb     0x140030105
   1400300fb:	mov    rcx,QWORD PTR [rsp+0x48]
   140030100:	call   0x1400062d4
   140030105:	xor    eax,eax
   140030107:	jmp    0x1400301ae
   14003010c:	cmp    QWORD PTR [rsp+0x60],0x10
   140030112:	jb     0x14003011e
   140030114:	mov    rcx,QWORD PTR [rsp+0x48]
   140030119:	call   0x1400062d4
   14003011e:	lea    rax,[rdi+0x2]
   140030122:	jmp    0x1400301ae
   140030127:	test   rbx,rbx
   14003012a:	je     0x140030144
   14003012c:	mov    DWORD PTR [rsp+0x20],ebp
   140030130:	mov    r9,r13
   140030133:	mov    r8,r12
   140030136:	mov    edx,0x6
   14003013b:	mov    rcx,rbx
   14003013e:	call   0x14002e9f0
   140030143:	nop
   140030144:	cmp    QWORD PTR [rsp+0x60],0x10
   14003014a:	jb     0x140030156
   14003014c:	mov    rcx,QWORD PTR [rsp+0x48]
   140030151:	call   0x1400062d4
   140030156:	xor    eax,eax
   140030158:	jmp    0x1400301ae
   14003015a:	cmp    QWORD PTR [rsp+0x60],0x10
   140030160:	jb     0x14003016c
   140030162:	mov    rcx,QWORD PTR [rsp+0x48]
   140030167:	call   0x1400062d4
   14003016c:	mov    rax,r12
   14003016f:	jmp    0x1400301ae
   140030171:	test   rbx,rbx
   140030174:	je     0x14003018d
   140030176:	mov    DWORD PTR [rsp+0x20],ebp
   14003017a:	mov    r9,r13
   14003017d:	mov    r8,rdi
   140030180:	mov    edx,0x4
   140030185:	mov    rcx,rbx
   140030188:	call   0x14002e9f0
   14003018d:	xor    eax,eax
   14003018f:	jmp    0x1400301ae
   140030191:	test   rax,rax
   140030194:	je     0x1400301ac
   140030196:	mov    DWORD PTR [rsp+0x20],ebp
   14003019a:	xor    r9d,r9d
   14003019d:	xor    r8d,r8d
   1400301a0:	lea    edx,[r9+0x3]
   1400301a4:	mov    rcx,rax
   1400301a7:	call   0x14002e9f0
   1400301ac:	xor    eax,eax
   1400301ae:	mov    rcx,QWORD PTR [rsp+0x68]
   1400301b3:	xor    rcx,rsp
   1400301b6:	call   0x1400144f0
   1400301bb:	add    rsp,0x78
   1400301bf:	pop    r15
   1400301c1:	pop    r14
   1400301c3:	pop    r13
   1400301c5:	pop    r12
   1400301c7:	pop    rdi
   1400301c8:	pop    rsi
   1400301c9:	pop    rbp
   1400301ca:	pop    rbx
   1400301cb:	ret    
   1400301cc:	int3   
   1400301cd:	int3   
   1400301ce:	int3   
   1400301cf:	int3   
   1400301d0:	mov    QWORD PTR [rsp+0x8],rcx
   1400301d5:	push   rsi
   1400301d6:	push   rdi
   1400301d7:	push   r12
   1400301d9:	sub    rsp,0x30
   1400301dd:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   1400301e6:	mov    QWORD PTR [rsp+0x58],rbx
   1400301eb:	movzx  edi,dl
   1400301ee:	mov    rbx,rcx
   1400301f1:	mov    rax,QWORD PTR [rcx]
   1400301f4:	movsxd rcx,DWORD PTR [rax+0x4]
   1400301f8:	add    rcx,rbx
   1400301fb:	cmp    DWORD PTR [rcx+0x10],0x0
   1400301ff:	jne    0x140030335
   140030205:	mov    rcx,QWORD PTR [rcx+0x50]
   140030209:	test   rcx,rcx
   14003020c:	je     0x140030213
   14003020e:	call   0x14002d610
   140030213:	test   dil,dil
   140030216:	jne    0x140030321
   14003021c:	mov    rcx,QWORD PTR [rbx]
   14003021f:	movsxd rax,DWORD PTR [rcx+0x4]
   140030223:	test   BYTE PTR [rax+rbx*1+0x18],0x1
   140030228:	je     0x140030321
   14003022e:	movsxd rcx,DWORD PTR [rcx+0x4]
   140030232:	add    rcx,rbx
   140030235:	lea    rdx,[rsp+0x68]
   14003023a:	call   0x14002d720
   14003023f:	nop
   140030240:	mov    rcx,rax
   140030243:	call   0x14002e4d0
   140030248:	mov    r12,rax
   14003024b:	mov    rsi,QWORD PTR [rsp+0x68]
   140030250:	test   rsi,rsi
   140030253:	je     0x14003029e
   140030255:	xor    edx,edx
   140030257:	lea    rcx,[rsp+0x60]
   14003025c:	call   0x140032304
   140030261:	mov    rax,QWORD PTR [rsi+0x8]
   140030265:	test   rax,rax
   140030268:	je     0x140030277
   14003026a:	cmp    rax,0xffffffffffffffff
   14003026e:	jae    0x140030277
   140030270:	dec    rax
   140030273:	mov    QWORD PTR [rsi+0x8],rax
   140030277:	xor    edi,edi
   140030279:	cmp    QWORD PTR [rsi+0x8],rdi
   14003027d:	cmove  rdi,rsi
   140030281:	lea    rcx,[rsp+0x60]
   140030286:	call   0x140032334
   14003028b:	test   rdi,rdi
   14003028e:	je     0x14003029e
   140030290:	mov    rax,QWORD PTR [rdi]
   140030293:	mov    edx,0x1
   140030298:	mov    rcx,rdi
   14003029b:	call   QWORD PTR [rax]
   14003029d:	nop
   14003029e:	mov    rax,QWORD PTR [rbx]
   1400302a1:	movsxd rcx,DWORD PTR [rax+0x4]
   1400302a5:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   1400302aa:	mov    rdx,QWORD PTR [rcx+0x40]
   1400302ae:	cmp    QWORD PTR [rdx],0x0
   1400302b2:	je     0x1400302c5
   1400302b4:	mov    rax,QWORD PTR [rcx+0x58]
   1400302b8:	cmp    DWORD PTR [rax],0x0
   1400302bb:	jle    0x1400302c5
   1400302bd:	mov    rax,QWORD PTR [rdx]
   1400302c0:	movzx  eax,BYTE PTR [rax]
   1400302c3:	jmp    0x1400302d0
   1400302c5:	mov    rax,QWORD PTR [rcx]
   1400302c8:	call   QWORD PTR [rax+0x20]
   1400302cb:	nop    DWORD PTR [rax+rax*1+0x0]
   1400302d0:	cmp    eax,0xffffffff
   1400302d3:	jne    0x1400302f9
   1400302d5:	mov    rax,QWORD PTR [rbx]
   1400302d8:	movsxd rcx,DWORD PTR [rax+0x4]
   1400302dc:	add    rcx,rbx
   1400302df:	mov    edx,DWORD PTR [rcx+0x10]
   1400302e2:	or     edx,0x1
   1400302e5:	cmp    QWORD PTR [rcx+0x48],0x0
   1400302ea:	jne    0x1400302ef
   1400302ec:	or     edx,0x4
   1400302ef:	xor    r8d,r8d
   1400302f2:	call   0x14002bd50
   1400302f7:	jmp    0x140030307
   1400302f9:	movzx  ecx,al
   1400302fc:	mov    rax,QWORD PTR [r12+0x18]
   140030301:	test   BYTE PTR [rax+rcx*2],0x48
   140030305:	jne    0x140030309
   140030307:	jmp    0x140030321
   140030309:	mov    rax,QWORD PTR [rbx]
   14003030c:	movsxd rcx,DWORD PTR [rax+0x4]
   140030310:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   140030315:	call   0x14002def0
   14003031a:	jmp    0x1400302d0
   14003031c:	mov    rbx,QWORD PTR [rsp+0x50]
   140030321:	mov    rax,QWORD PTR [rbx]
   140030324:	movsxd rcx,DWORD PTR [rax+0x4]
   140030328:	add    rcx,rbx
   14003032b:	cmp    DWORD PTR [rcx+0x10],0x0
   14003032f:	jne    0x140030335
   140030331:	mov    al,0x1
   140030333:	jmp    0x14003034f
   140030335:	mov    edx,DWORD PTR [rcx+0x10]
   140030338:	or     edx,0x2
   14003033b:	cmp    QWORD PTR [rcx+0x48],0x0
   140030340:	jne    0x140030345
   140030342:	or     edx,0x4
   140030345:	xor    r8d,r8d
   140030348:	call   0x14002bd50
   14003034d:	xor    al,al
   14003034f:	mov    rbx,QWORD PTR [rsp+0x58]
   140030354:	add    rsp,0x30
   140030358:	pop    r12
   14003035a:	pop    rdi
   14003035b:	pop    rsi
   14003035c:	ret    
   14003035d:	int3   
   14003035e:	int3   
   14003035f:	int3   
   140030360:	mov    QWORD PTR [rsp+0x8],rcx
   140030365:	push   rbx
   140030366:	push   rsi
   140030367:	push   rdi
   140030368:	sub    rsp,0x40
   14003036c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030375:	mov    rbx,rcx
   140030378:	xor    esi,esi
   14003037a:	mov    DWORD PTR [rsp+0x68],esi
   14003037e:	mov    DWORD PTR [rsp+0x70],esi
   140030382:	mov    QWORD PTR [rcx+0x8],rsi
   140030386:	mov    QWORD PTR [rsp+0x28],rcx
   14003038b:	mov    rax,QWORD PTR [rcx]
   14003038e:	movsxd rdx,DWORD PTR [rax+0x4]
   140030392:	mov    rcx,QWORD PTR [rdx+rcx*1+0x48]
   140030397:	test   rcx,rcx
   14003039a:	je     0x1400303a6
   14003039c:	add    rcx,0x8
   1400303a0:	call   0x1400320c8
   1400303a5:	nop
   1400303a6:	mov    dl,0x1
   1400303a8:	mov    rcx,rbx
   1400303ab:	call   0x1400301d0
   1400303b0:	mov    BYTE PTR [rsp+0x30],al
   1400303b4:	test   al,al
   1400303b6:	jne    0x1400303bd
   1400303b8:	or     edi,0xffffffff
   1400303bb:	jmp    0x140030424
   1400303bd:	mov    rax,QWORD PTR [rbx]
   1400303c0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400303c4:	mov    rcx,QWORD PTR [rcx+rbx*1+0x48]
   1400303c9:	mov    rax,QWORD PTR [rcx+0x40]
   1400303cd:	cmp    QWORD PTR [rax],0x0
   1400303d1:	je     0x1400303f5
   1400303d3:	mov    rax,QWORD PTR [rcx+0x58]
   1400303d7:	cmp    DWORD PTR [rax],0x0
   1400303da:	jle    0x1400303f5
   1400303dc:	dec    DWORD PTR [rax]
   1400303de:	mov    rcx,QWORD PTR [rcx+0x40]
   1400303e2:	mov    rdx,QWORD PTR [rcx]
   1400303e5:	lea    rax,[rdx+0x1]
   1400303e9:	mov    QWORD PTR [rcx],rax
   1400303ec:	movzx  edi,BYTE PTR [rdx]
   1400303ef:	mov    DWORD PTR [rsp+0x68],edi
   1400303f3:	jmp    0x140030401
   1400303f5:	mov    rax,QWORD PTR [rcx]
   1400303f8:	call   QWORD PTR [rax+0x28]
   1400303fb:	mov    edi,eax
   1400303fd:	mov    DWORD PTR [rsp+0x68],eax
   140030401:	cmp    edi,0xffffffff
   140030404:	jne    0x140030411
   140030406:	mov    esi,0x3
   14003040b:	mov    DWORD PTR [rsp+0x70],esi
   14003040f:	jmp    0x140030415
   140030411:	inc    QWORD PTR [rbx+0x8]
   140030415:	jmp    0x140030424
   140030417:	mov    rbx,QWORD PTR [rsp+0x60]
   14003041c:	mov    edi,DWORD PTR [rsp+0x68]
   140030420:	mov    esi,DWORD PTR [rsp+0x70]
   140030424:	mov    rax,QWORD PTR [rbx]
   140030427:	movsxd rcx,DWORD PTR [rax+0x4]
   14003042b:	add    rcx,rbx
   14003042e:	test   esi,esi
   140030430:	je     0x14003044a
   140030432:	mov    edx,DWORD PTR [rcx+0x10]
   140030435:	or     edx,esi
   140030437:	cmp    QWORD PTR [rcx+0x48],0x0
   14003043c:	jne    0x140030441
   14003043e:	or     edx,0x4
   140030441:	xor    r8d,r8d
   140030444:	call   0x14002bd50
   140030449:	nop
   14003044a:	mov    rcx,QWORD PTR [rbx]
   14003044d:	movsxd rdx,DWORD PTR [rcx+0x4]
   140030451:	mov    rcx,QWORD PTR [rdx+rbx*1+0x48]
   140030456:	test   rcx,rcx
   140030459:	je     0x140030464
   14003045b:	add    rcx,0x8
   14003045f:	call   0x1400320d0
   140030464:	mov    eax,edi
   140030466:	add    rsp,0x40
   14003046a:	pop    rdi
   14003046b:	pop    rsi
   14003046c:	pop    rbx
   14003046d:	ret    
   14003046e:	int3   
   14003046f:	int3   
   140030470:	mov    QWORD PTR [rsp+0x8],rcx
   140030475:	push   rbx
   140030476:	push   rsi
   140030477:	push   rdi
   140030478:	sub    rsp,0x40
   14003047c:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140030485:	mov    rdi,rcx
   140030488:	xor    esi,esi
   14003048a:	mov    DWORD PTR [rsp+0x70],esi
   14003048e:	mov    QWORD PTR [rcx+0x8],rsi
   140030492:	mov    DWORD PTR [rsp+0x68],esi
   140030496:	mov    QWORD PTR [rsp+0x28],rcx
   14003049b:	mov    rax,QWORD PTR [rcx]
   14003049e:	movsxd rdx,DWORD PTR [rax+0x4]
   1400304a2:	mov    rcx,QWORD PTR [rdx+rcx*1+0x48]
   1400304a7:	test   rcx,rcx
   1400304aa:	je     0x1400304b6
   1400304ac:	add    rcx,0x8
   1400304b0:	call   0x1400320c8
   1400304b5:	nop
   1400304b6:	mov    dl,0x1
   1400304b8:	mov    rcx,rdi
   1400304bb:	call   0x1400301d0
   1400304c0:	mov    BYTE PTR [rsp+0x30],al
   1400304c4:	test   al,al
   1400304c6:	jne    0x1400304cd
   1400304c8:	or     ebx,0xffffffff
   1400304cb:	jmp    0x140030522
   1400304cd:	mov    rax,QWORD PTR [rdi]
   1400304d0:	movsxd rcx,DWORD PTR [rax+0x4]
   1400304d4:	mov    rcx,QWORD PTR [rcx+rdi*1+0x48]
   1400304d9:	mov    rdx,QWORD PTR [rcx+0x40]
   1400304dd:	cmp    QWORD PTR [rdx],0x0
   1400304e1:	je     0x1400304f8
   1400304e3:	mov    rax,QWORD PTR [rcx+0x58]
   1400304e7:	cmp    DWORD PTR [rax],0x0
   1400304ea:	jle    0x1400304f8
   1400304ec:	mov    rax,QWORD PTR [rdx]
   1400304ef:	movzx  ebx,BYTE PTR [rax]
   1400304f2:	mov    DWORD PTR [rsp+0x68],ebx
   1400304f6:	jmp    0x140030504
   1400304f8:	mov    rax,QWORD PTR [rcx]
   1400304fb:	call   QWORD PTR [rax+0x20]
   1400304fe:	mov    ebx,eax
   140030500:	mov    DWORD PTR [rsp+0x68],eax
   140030504:	mov    eax,0x1
   140030509:	cmp    ebx,0xffffffff
   14003050c:	cmove  esi,eax
   14003050f:	mov    DWORD PTR [rsp+0x70],esi
   140030513:	jmp    0x140030522
   140030515:	mov    rdi,QWORD PTR [rsp+0x60]
   14003051a:	mov    esi,DWORD PTR [rsp+0x70]
   14003051e:	mov    ebx,DWORD PTR [rsp+0x68]
   140030522:	mov    rax,QWORD PTR [rdi]
   140030525:	movsxd rcx,DWORD PTR [rax+0x4]
   140030529:	add    rcx,rdi
   14003052c:	test   esi,esi
   14003052e:	je     0x140030548
   140030530:	mov    edx,DWORD PTR [rcx+0x10]
   140030533:	or     edx,esi
   140030535:	cmp    QWORD PTR [rcx+0x48],0x0
   14003053a:	jne    0x14003053f
   14003053c:	or     edx,0x4
   14003053f:	xor    r8d,r8d
   140030542:	call   0x14002bd50
   140030547:	nop
   140030548:	mov    rcx,QWORD PTR [rdi]
   14003054b:	movsxd rdx,DWORD PTR [rcx+0x4]
   14003054f:	mov    rcx,QWORD PTR [rdx+rdi*1+0x48]
   140030554:	test   rcx,rcx
   140030557:	je     0x140030562
   140030559:	add    rcx,0x8
   14003055d:	call   0x1400320d0
   140030562:	mov    eax,ebx
   140030564:	add    rsp,0x40
   140030568:	pop    rdi
   140030569:	pop    rsi
   14003056a:	pop    rbx
   14003056b:	ret    
   14003056c:	int3   
   14003056d:	int3   
   14003056e:	int3   
   14003056f:	int3   
   140030570:	mov    QWORD PTR [rsp+0x8],rbx
   140030575:	mov    QWORD PTR [rsp+0x10],rbp
   14003057a:	mov    QWORD PTR [rsp+0x18],rsi
   14003057f:	mov    QWORD PTR [rsp+0x20],rdi
   140030584:	push   r12
   140030586:	sub    rsp,0x20
   14003058a:	mov    rax,QWORD PTR [rcx]
   14003058d:	mov    rdi,rdx
   140030590:	mov    rsi,rcx
   140030593:	movsxd r8,DWORD PTR [rax+0x4]
   140030597:	cmp    DWORD PTR [r8+rcx*1+0x10],0x0
   14003059d:	jne    0x140030689
   1400305a3:	xor    r12d,r12d
   1400305a6:	mov    rcx,rsi
   1400305a9:	call   0x140030470
   1400305ae:	cmp    eax,0x100
   1400305b3:	mov    ebx,eax
   1400305b5:	jge    0x1400306a6
   1400305bb:	movzx  ecx,al
   1400305be:	call   0x1400235ec
   1400305c3:	test   eax,eax
   1400305c5:	jne    0x1400305d5
   1400305c7:	cmp    bl,0xa
   1400305ca:	je     0x1400305d5
   1400305cc:	cmp    bl,0xd
   1400305cf:	jne    0x1400306a6
   1400305d5:	test   ebx,ebx
   1400305d7:	jle    0x1400306a6
   1400305dd:	mov    rcx,rsi
   1400305e0:	call   0x140030360
   1400305e5:	or     rcx,0xffffffffffffffff
   1400305e9:	sub    rcx,QWORD PTR [rdi+0x18]
   1400305ed:	mov    ebp,eax
   1400305ef:	cmp    rcx,0x1
   1400305f3:	ja     0x1400305fa
   1400305f5:	call   0x140031fd4
   1400305fa:	mov    rbx,QWORD PTR [rdi+0x18]
   1400305fe:	inc    rbx
   140030601:	cmp    rbx,0xfffffffffffffffe
   140030605:	jbe    0x14003060c
   140030607:	call   0x140031fd4
   14003060c:	mov    rax,QWORD PTR [rdi+0x20]
   140030610:	cmp    rax,rbx
   140030613:	jae    0x14003063d
   140030615:	mov    r8,QWORD PTR [rdi+0x18]
   140030619:	mov    rdx,rbx
   14003061c:	mov    rcx,rdi
   14003061f:	call   0x140003460
   140030624:	test   rbx,rbx
   140030627:	je     0x140030677
   140030629:	cmp    QWORD PTR [rdi+0x20],0x10
   14003062e:	mov    rdx,QWORD PTR [rdi+0x18]
   140030632:	lea    rax,[rdi+0x8]
   140030636:	jb     0x14003065e
   140030638:	mov    rcx,QWORD PTR [rax]
   14003063b:	jmp    0x140030661
   14003063d:	test   rbx,rbx
   140030640:	jne    0x140030629
   140030642:	mov    QWORD PTR [rdi+0x18],r12
   140030646:	cmp    rax,0x10
   14003064a:	jb     0x140030655
   14003064c:	mov    rax,QWORD PTR [rdi+0x8]
   140030650:	mov    BYTE PTR [rax],r12b
   140030653:	jmp    0x140030677
   140030655:	lea    rax,[rdi+0x8]
   140030659:	mov    BYTE PTR [rax],r12b
   14003065c:	jmp    0x140030677
   14003065e:	mov    rcx,rax
   140030661:	mov    BYTE PTR [rcx+rdx*1],bpl
   140030665:	cmp    QWORD PTR [rdi+0x20],0x10
   14003066a:	mov    QWORD PTR [rdi+0x18],rbx
   14003066e:	jb     0x140030673
   140030670:	mov    rax,QWORD PTR [rax]
   140030673:	mov    BYTE PTR [rax+rbx*1],r12b
   140030677:	mov    rax,QWORD PTR [rsi]
   14003067a:	movsxd rcx,DWORD PTR [rax+0x4]
   14003067e:	cmp    DWORD PTR [rcx+rsi*1+0x10],r12d
   140030683:	je     0x1400305a6
   140030689:	xor    al,al
   14003068b:	mov    rbx,QWORD PTR [rsp+0x30]
   140030690:	mov    rbp,QWORD PTR [rsp+0x38]
   140030695:	mov    rsi,QWORD PTR [rsp+0x40]
   14003069a:	mov    rdi,QWORD PTR [rsp+0x48]
   14003069f:	add    rsp,0x20
   1400306a3:	pop    r12
   1400306a5:	ret    
   1400306a6:	mov    al,0x1
   1400306a8:	jmp    0x14003068b
   1400306aa:	int3   
   1400306ab:	int3   
   1400306ac:	int3   
   1400306ad:	int3   
   1400306ae:	int3   
   1400306af:	int3   
   1400306b0:	mov    QWORD PTR [rsp+0x8],rbx
   1400306b5:	mov    QWORD PTR [rsp+0x10],rbp
   1400306ba:	mov    QWORD PTR [rsp+0x18],rsi
   1400306bf:	push   rdi
   1400306c0:	push   r12
   1400306c2:	push   r13
   1400306c4:	sub    rsp,0x20
   1400306c8:	mov    rax,QWORD PTR [rcx]
   1400306cb:	mov    rbx,r8
   1400306ce:	mov    r12d,edx
   1400306d1:	movsxd r9,DWORD PTR [rax+0x4]
   1400306d5:	mov    rbp,rcx
   1400306d8:	cmp    DWORD PTR [r9+rcx*1+0x10],0x0
   1400306de:	jne    0x1400307ad
   1400306e4:	xor    r13d,r13d
   1400306e7:	mov    rcx,rbp
   1400306ea:	call   0x140030470
   1400306ef:	mov    esi,eax
   1400306f1:	cmp    eax,r12d
   1400306f4:	je     0x1400307c8
   1400306fa:	test   eax,eax
   1400306fc:	jle    0x1400307ad
   140030702:	mov    rcx,rbp
   140030705:	call   0x140030360
   14003070a:	or     rcx,0xffffffffffffffff
   14003070e:	sub    rcx,QWORD PTR [rbx+0x18]
   140030712:	cmp    rcx,0x1
   140030716:	ja     0x14003071d
   140030718:	call   0x140031fd4
   14003071d:	mov    rdi,QWORD PTR [rbx+0x18]
   140030721:	inc    rdi
   140030724:	cmp    rdi,0xfffffffffffffffe
   140030728:	jbe    0x14003072f
   14003072a:	call   0x140031fd4
   14003072f:	mov    rax,QWORD PTR [rbx+0x20]
   140030733:	cmp    rax,rdi
   140030736:	jae    0x140030760
   140030738:	mov    r8,QWORD PTR [rbx+0x18]
   14003073c:	mov    rdx,rdi
   14003073f:	mov    rcx,rbx
   140030742:	call   0x140003460
   140030747:	test   rdi,rdi
   14003074a:	je     0x14003079a
   14003074c:	cmp    QWORD PTR [rbx+0x20],0x10
   140030751:	mov    rdx,QWORD PTR [rbx+0x18]
   140030755:	lea    rax,[rbx+0x8]
   140030759:	jb     0x140030781
   14003075b:	mov    rcx,QWORD PTR [rax]
   14003075e:	jmp    0x140030784
   140030760:	test   rdi,rdi
   140030763:	jne    0x14003074c
   140030765:	mov    QWORD PTR [rbx+0x18],r13
   140030769:	cmp    rax,0x10
   14003076d:	jb     0x140030778
   14003076f:	mov    rax,QWORD PTR [rbx+0x8]
   140030773:	mov    BYTE PTR [rax],r13b
   140030776:	jmp    0x14003079a
   140030778:	lea    rax,[rbx+0x8]
   14003077c:	mov    BYTE PTR [rax],r13b
   14003077f:	jmp    0x14003079a
   140030781:	mov    rcx,rax
   140030784:	mov    BYTE PTR [rcx+rdx*1],sil
   140030788:	cmp    QWORD PTR [rbx+0x20],0x10
   14003078d:	mov    QWORD PTR [rbx+0x18],rdi
   140030791:	jb     0x140030796
   140030793:	mov    rax,QWORD PTR [rax]
   140030796:	mov    BYTE PTR [rax+rdi*1],r13b
   14003079a:	mov    rax,QWORD PTR [rbp+0x0]
   14003079e:	movsxd rcx,DWORD PTR [rax+0x4]
   1400307a2:	cmp    DWORD PTR [rcx+rbp*1+0x10],r13d
   1400307a7:	je     0x1400306e7
   1400307ad:	xor    al,al
   1400307af:	mov    rbx,QWORD PTR [rsp+0x40]
   1400307b4:	mov    rbp,QWORD PTR [rsp+0x48]
   1400307b9:	mov    rsi,QWORD PTR [rsp+0x50]
   1400307be:	add    rsp,0x20
   1400307c2:	pop    r13
   1400307c4:	pop    r12
   1400307c6:	pop    rdi
   1400307c7:	ret    
   1400307c8:	mov    al,0x1
   1400307ca:	jmp    0x1400307af
   1400307cc:	int3   
   1400307cd:	int3   
   1400307ce:	int3   
   1400307cf:	int3   
   1400307d0:	mov    QWORD PTR [rsp+0x20],rsi
   1400307d5:	push   rdi
   1400307d6:	push   r12
   1400307d8:	push   r13
   1400307da:	sub    rsp,0x30
   1400307de:	mov    rsi,rdx
   1400307e1:	mov    r13,rcx
   1400307e4:	mov    edx,0x3c
   1400307e9:	mov    rcx,rsi
   1400307ec:	mov    rdi,r8
   1400307ef:	call   0x1400306b0
   1400307f4:	test   al,al
   1400307f6:	jne    0x140030822
   1400307f8:	xor    r12d,r12d
   1400307fb:	xor    r9d,r9d
   1400307fe:	xor    r8d,r8d
   140030801:	lea    edx,[r12+0x7]
   140030806:	mov    rcx,r13
   140030809:	mov    DWORD PTR [rsp+0x20],r12d
   14003080e:	call   0x14002e9f0
   140030813:	mov    rsi,QWORD PTR [rsp+0x68]
   140030818:	add    rsp,0x30
   14003081c:	pop    r13
   14003081e:	pop    r12
   140030820:	pop    rdi
   140030821:	ret    
   140030822:	mov    rax,QWORD PTR [rsi]
   140030825:	mov    QWORD PTR [rsp+0x50],rbx
   14003082a:	xor    r12d,r12d
   14003082d:	movsxd rcx,DWORD PTR [rax+0x4]
   140030831:	mov    QWORD PTR [rsp+0x58],rbp
   140030836:	mov    QWORD PTR [rsp+0x60],r14
   14003083b:	mov    eax,DWORD PTR [rcx+rsi*1+0x10]
   14003083f:	test   eax,eax
   140030841:	jne    0x1400309b9
   140030847:	nop    WORD PTR [rax+rax*1+0x0]
   140030850:	movsxd r14,DWORD PTR [rdi+0x18]
   140030854:	test   eax,eax
   140030856:	jne    0x140030943
   14003085c:	nop    DWORD PTR [rax+0x0]
   140030860:	mov    rcx,rsi
   140030863:	call   0x140030470
   140030868:	cmp    eax,0x3e
   14003086b:	je     0x140030943
   140030871:	mov    rcx,rsi
   140030874:	call   0x140030360
   140030879:	mov    ebp,eax
   14003087b:	test   eax,eax
   14003087d:	jle    0x14003092c
   140030883:	or     rcx,0xffffffffffffffff
   140030887:	sub    rcx,QWORD PTR [rdi+0x18]
   14003088b:	cmp    rcx,0x1
   14003088f:	ja     0x140030896
   140030891:	call   0x140031fd4
   140030896:	mov    rbx,QWORD PTR [rdi+0x18]
   14003089a:	inc    rbx
   14003089d:	cmp    rbx,0xfffffffffffffffe
   1400308a1:	jbe    0x1400308a8
   1400308a3:	call   0x140031fd4
   1400308a8:	mov    rax,QWORD PTR [rdi+0x20]
   1400308ac:	cmp    rax,rbx
   1400308af:	jae    0x1400308da
   1400308b1:	mov    r8,QWORD PTR [rdi+0x18]
   1400308b5:	mov    rdx,rbx
   1400308b8:	mov    rcx,rdi
   1400308bb:	call   0x140003460
   1400308c0:	test   rbx,rbx
   1400308c3:	je     0x140030918
   1400308c5:	cmp    QWORD PTR [rdi+0x20],0x10
   1400308ca:	mov    rdx,QWORD PTR [rdi+0x18]
   1400308ce:	jb     0x1400308fb
   1400308d0:	mov    rcx,QWORD PTR [rdi+0x8]
   1400308d4:	lea    rax,[rdi+0x8]
   1400308d8:	jmp    0x140030902
   1400308da:	test   rbx,rbx
   1400308dd:	jne    0x1400308c0
   1400308df:	mov    QWORD PTR [rdi+0x18],r12
   1400308e3:	cmp    rax,0x10
   1400308e7:	jb     0x1400308f2
   1400308e9:	mov    rax,QWORD PTR [rdi+0x8]
   1400308ed:	mov    BYTE PTR [rax],r12b
   1400308f0:	jmp    0x140030918
   1400308f2:	lea    rax,[rdi+0x8]
   1400308f6:	mov    BYTE PTR [rax],r12b
   1400308f9:	jmp    0x140030918
   1400308fb:	lea    rax,[rdi+0x8]
   1400308ff:	mov    rcx,rax
   140030902:	mov    BYTE PTR [rcx+rdx*1],bpl
   140030906:	cmp    QWORD PTR [rdi+0x20],0x10
   14003090b:	mov    QWORD PTR [rdi+0x18],rbx
   14003090f:	jb     0x140030914
   140030911:	mov    rax,QWORD PTR [rax]
   140030914:	mov    BYTE PTR [rax+rbx*1],r12b
   140030918:	mov    rax,QWORD PTR [rsi]
   14003091b:	movsxd rcx,DWORD PTR [rax+0x4]
   14003091f:	cmp    DWORD PTR [rcx+rsi*1+0x10],r12d
   140030924:	je     0x140030860
   14003092a:	jmp    0x140030943
   14003092c:	xor    r9d,r9d
   14003092f:	xor    r8d,r8d
   140030932:	mov    rcx,r13
   140030935:	lea    edx,[r9+0xd]
   140030939:	mov    DWORD PTR [rsp+0x20],r12d
   14003093e:	call   0x14002e9f0
   140030943:	mov    rax,QWORD PTR [rsi]
   140030946:	movsxd rcx,DWORD PTR [rax+0x4]
   14003094a:	cmp    DWORD PTR [rcx+rsi*1+0x10],r12d
   14003094f:	jne    0x1400309a6
   140030951:	mov    rcx,rdi
   140030954:	call   0x1400023d0
   140030959:	xor    r8d,r8d
   14003095c:	mov    rcx,r13
   14003095f:	lea    rdx,[rax+r14*1]
   140030963:	call   0x14002ea90
   140030968:	mov    rbp,rax
   14003096b:	test   rax,rax
   14003096e:	je     0x1400309b9
   140030970:	mov    r9,QWORD PTR [rax]
   140030973:	mov    r8,rdi
   140030976:	mov    rdx,rsi
   140030979:	mov    rcx,rax
   14003097c:	call   QWORD PTR [r9+0x88]
   140030983:	mov    r11,QWORD PTR [rbp+0x0]
   140030987:	mov    rcx,rbp
   14003098a:	call   QWORD PTR [r11+0x28]
   14003098e:	mov    edx,0x1
   140030993:	mov    rcx,rbp
   140030996:	test   rax,rax
   140030999:	mov    rax,QWORD PTR [rbp+0x0]
   14003099d:	setne  bl
   1400309a0:	call   QWORD PTR [rax]
   1400309a2:	test   bl,bl
   1400309a4:	jne    0x1400309d0
   1400309a6:	mov    rax,QWORD PTR [rsi]
   1400309a9:	movsxd rcx,DWORD PTR [rax+0x4]
   1400309ad:	mov    eax,DWORD PTR [rcx+rsi*1+0x10]
   1400309b1:	test   eax,eax
   1400309b3:	je     0x140030850
   1400309b9:	xor    r9d,r9d
   1400309bc:	xor    r8d,r8d
   1400309bf:	mov    rcx,r13
   1400309c2:	lea    edx,[r9+0x1]
   1400309c6:	mov    DWORD PTR [rsp+0x20],r12d
   1400309cb:	call   0x14002e9f0
   1400309d0:	mov    rbp,QWORD PTR [rsp+0x58]
   1400309d5:	mov    rbx,QWORD PTR [rsp+0x50]
   1400309da:	mov    r14,QWORD PTR [rsp+0x60]
   1400309df:	mov    rsi,QWORD PTR [rsp+0x68]
   1400309e4:	add    rsp,0x30
   1400309e8:	pop    r13
   1400309ea:	pop    r12
   1400309ec:	pop    rdi
   1400309ed:	ret    
   1400309ee:	int3   
   1400309ef:	int3   
   1400309f0:	rex push rbx
   1400309f2:	push   rsi
   1400309f3:	push   r12
   1400309f5:	sub    rsp,0x30
   1400309f9:	mov    rax,QWORD PTR [rdx]
   1400309fc:	mov    rbx,r8
   1400309ff:	mov    rsi,rdx
   140030a02:	movsxd r9,DWORD PTR [rax+0x4]
   140030a06:	mov    r12,rcx
   140030a09:	cmp    DWORD PTR [r9+rdx*1+0x10],0x0
   140030a0f:	jne    0x140030b1a
   140030a15:	mov    QWORD PTR [rsp+0x50],rbp
   140030a1a:	mov    QWORD PTR [rsp+0x60],r13
   140030a1f:	xor    r13d,r13d
   140030a22:	mov    QWORD PTR [rsp+0x58],rdi
   140030a27:	mov    rcx,rsi
   140030a2a:	call   0x140030360
   140030a2f:	mov    ebp,eax
   140030a31:	test   eax,eax
   140030a33:	jle    0x140030ae7
   140030a39:	or     rcx,0xffffffffffffffff
   140030a3d:	sub    rcx,QWORD PTR [rbx+0x18]
   140030a41:	cmp    rcx,0x1
   140030a45:	ja     0x140030a4c
   140030a47:	call   0x140031fd4
   140030a4c:	mov    rdi,QWORD PTR [rbx+0x18]
   140030a50:	inc    rdi
   140030a53:	cmp    rdi,0xfffffffffffffffe
   140030a57:	jbe    0x140030a5e
   140030a59:	call   0x140031fd4
   140030a5e:	mov    rax,QWORD PTR [rbx+0x20]
   140030a62:	cmp    rax,rdi
   140030a65:	jae    0x140030a90
   140030a67:	mov    r8,QWORD PTR [rbx+0x18]
   140030a6b:	mov    rdx,rdi
   140030a6e:	mov    rcx,rbx
   140030a71:	call   0x140003460
   140030a76:	test   rdi,rdi
   140030a79:	je     0x140030ace
   140030a7b:	cmp    QWORD PTR [rbx+0x20],0x10
   140030a80:	mov    rdx,QWORD PTR [rbx+0x18]
   140030a84:	jb     0x140030ab1
   140030a86:	mov    rcx,QWORD PTR [rbx+0x8]
   140030a8a:	lea    rax,[rbx+0x8]
   140030a8e:	jmp    0x140030ab8
   140030a90:	test   rdi,rdi
   140030a93:	jne    0x140030a76
   140030a95:	mov    QWORD PTR [rbx+0x18],r13
   140030a99:	cmp    rax,0x10
   140030a9d:	jb     0x140030aa8
   140030a9f:	mov    rax,QWORD PTR [rbx+0x8]
   140030aa3:	mov    BYTE PTR [rax],r13b
   140030aa6:	jmp    0x140030ace
   140030aa8:	lea    rax,[rbx+0x8]
   140030aac:	mov    BYTE PTR [rax],r13b
   140030aaf:	jmp    0x140030ace
   140030ab1:	lea    rax,[rbx+0x8]
   140030ab5:	mov    rcx,rax
   140030ab8:	mov    BYTE PTR [rcx+rdx*1],bpl
   140030abc:	cmp    QWORD PTR [rbx+0x20],0x10
   140030ac1:	mov    QWORD PTR [rbx+0x18],rdi
   140030ac5:	jb     0x140030aca
   140030ac7:	mov    rax,QWORD PTR [rax]
   140030aca:	mov    BYTE PTR [rax+rdi*1],r13b
   140030ace:	cmp    ebp,0x3e
   140030ad1:	je     0x140030b0b
   140030ad3:	mov    rax,QWORD PTR [rsi]
   140030ad6:	movsxd rcx,DWORD PTR [rax+0x4]
   140030ada:	cmp    DWORD PTR [rcx+rsi*1+0x10],r13d
   140030adf:	je     0x140030a27
   140030ae5:	jmp    0x140030b0b
   140030ae7:	mov    rcx,r12
   140030aea:	call   0x14002a8f0
   140030aef:	test   rax,rax
   140030af2:	je     0x140030b0b
   140030af4:	xor    r9d,r9d
   140030af7:	xor    r8d,r8d
   140030afa:	mov    rcx,rax
   140030afd:	lea    edx,[r9+0xd]
   140030b01:	mov    DWORD PTR [rsp+0x20],r13d
   140030b06:	call   0x14002e9f0
   140030b0b:	mov    rdi,QWORD PTR [rsp+0x58]
   140030b10:	mov    rbp,QWORD PTR [rsp+0x50]
   140030b15:	mov    r13,QWORD PTR [rsp+0x60]
   140030b1a:	add    rsp,0x30
   140030b1e:	pop    r12
   140030b20:	pop    rsi
   140030b21:	pop    rbx
   140030b22:	ret    
   140030b23:	int3   
   140030b24:	int3   
   140030b25:	int3   
   140030b26:	int3   
   140030b27:	int3   
   140030b28:	int3   
   140030b29:	int3   
   140030b2a:	int3   
   140030b2b:	int3   
   140030b2c:	int3   
   140030b2d:	int3   
   140030b2e:	int3   
   140030b2f:	int3   
   140030b30:	rex push rbx
   140030b32:	push   rbp
   140030b33:	push   r12
   140030b35:	sub    rsp,0x30
   140030b39:	mov    rax,QWORD PTR [rdx]
   140030b3c:	mov    rbx,r8
   140030b3f:	mov    rbp,rdx
   140030b42:	movsxd r9,DWORD PTR [rax+0x4]
   140030b46:	mov    r12,rcx
   140030b49:	cmp    DWORD PTR [r9+rdx*1+0x10],0x0
   140030b4f:	jne    0x140030cad
   140030b55:	mov    QWORD PTR [rsp+0x50],rsi
   140030b5a:	mov    QWORD PTR [rsp+0x60],r13
   140030b5f:	xor    r13d,r13d
   140030b62:	mov    QWORD PTR [rsp+0x58],rdi
   140030b67:	mov    rcx,rbp
   140030b6a:	call   0x140030360
   140030b6f:	mov    esi,eax
   140030b71:	test   eax,eax
   140030b73:	jle    0x140030c7a
   140030b79:	or     rcx,0xffffffffffffffff
   140030b7d:	sub    rcx,QWORD PTR [rbx+0x18]
   140030b81:	cmp    rcx,0x1
   140030b85:	ja     0x140030b8c
   140030b87:	call   0x140031fd4
   140030b8c:	mov    rdi,QWORD PTR [rbx+0x18]
   140030b90:	inc    rdi
   140030b93:	cmp    rdi,0xfffffffffffffffe
   140030b97:	jbe    0x140030b9e
   140030b99:	call   0x140031fd4
   140030b9e:	mov    rax,QWORD PTR [rbx+0x20]
   140030ba2:	cmp    rax,rdi
   140030ba5:	jae    0x140030bd0
   140030ba7:	mov    r8,QWORD PTR [rbx+0x18]
   140030bab:	mov    rdx,rdi
   140030bae:	mov    rcx,rbx
   140030bb1:	call   0x140003460
   140030bb6:	test   rdi,rdi
   140030bb9:	je     0x140030c0e
   140030bbb:	cmp    QWORD PTR [rbx+0x20],0x10
   140030bc0:	mov    rdx,QWORD PTR [rbx+0x18]
   140030bc4:	jb     0x140030bf1
   140030bc6:	mov    rcx,QWORD PTR [rbx+0x8]
   140030bca:	lea    rax,[rbx+0x8]
   140030bce:	jmp    0x140030bf8
   140030bd0:	test   rdi,rdi
   140030bd3:	jne    0x140030bb6
   140030bd5:	mov    QWORD PTR [rbx+0x18],r13
   140030bd9:	cmp    rax,0x10
   140030bdd:	jb     0x140030be8
   140030bdf:	mov    rax,QWORD PTR [rbx+0x8]
   140030be3:	mov    BYTE PTR [rax],r13b
   140030be6:	jmp    0x140030c0e
   140030be8:	lea    rax,[rbx+0x8]
   140030bec:	mov    BYTE PTR [rax],r13b
   140030bef:	jmp    0x140030c0e
   140030bf1:	lea    rax,[rbx+0x8]
   140030bf5:	mov    rcx,rax
   140030bf8:	mov    BYTE PTR [rcx+rdx*1],sil
   140030bfc:	cmp    QWORD PTR [rbx+0x20],0x10
   140030c01:	mov    QWORD PTR [rbx+0x18],rdi
   140030c05:	jb     0x140030c0a
   140030c07:	mov    rax,QWORD PTR [rax]
   140030c0a:	mov    BYTE PTR [rax+rdi*1],r13b
   140030c0e:	cmp    esi,0x3e
   140030c11:	jne    0x140030c65
   140030c13:	mov    rax,QWORD PTR [rbx+0x18]
   140030c17:	lea    rsi,[rax-0x2]
   140030c1b:	cmp    rax,rsi
   140030c1e:	ja     0x140030c25
   140030c20:	call   0x14003203c
   140030c25:	cmp    QWORD PTR [rbx+0x20],0x10
   140030c2a:	jb     0x140030c36
   140030c2c:	mov    rax,QWORD PTR [rbx+0x8]
   140030c30:	lea    rdi,[rbx+0x8]
   140030c34:	jmp    0x140030c3d
   140030c36:	lea    rdi,[rbx+0x8]
   140030c3a:	mov    rax,rdi
   140030c3d:	cmp    BYTE PTR [rax+rsi*1],0x2d
   140030c41:	jne    0x140030c65
   140030c43:	mov    rax,QWORD PTR [rbx+0x18]
   140030c47:	lea    rsi,[rax-0x3]
   140030c4b:	cmp    rax,rsi
   140030c4e:	ja     0x140030c55
   140030c50:	call   0x14003203c
   140030c55:	cmp    QWORD PTR [rbx+0x20],0x10
   140030c5a:	jb     0x140030c5f
   140030c5c:	mov    rdi,QWORD PTR [rdi]
   140030c5f:	cmp    BYTE PTR [rdi+rsi*1],0x2d
   140030c63:	je     0x140030c9e
   140030c65:	mov    rax,QWORD PTR [rbp+0x0]
   140030c69:	movsxd rcx,DWORD PTR [rax+0x4]
   140030c6d:	cmp    DWORD PTR [rcx+rbp*1+0x10],r13d
   140030c72:	je     0x140030b67
   140030c78:	jmp    0x140030c9e
   140030c7a:	mov    rcx,r12
   140030c7d:	call   0x14002a8f0
   140030c82:	test   rax,rax
   140030c85:	je     0x140030c9e
   140030c87:	xor    r9d,r9d
   140030c8a:	xor    r8d,r8d
   140030c8d:	mov    rcx,rax
   140030c90:	lea    edx,[r9+0xd]
   140030c94:	mov    DWORD PTR [rsp+0x20],r13d
   140030c99:	call   0x14002e9f0
   140030c9e:	mov    rdi,QWORD PTR [rsp+0x58]
   140030ca3:	mov    rsi,QWORD PTR [rsp+0x50]
   140030ca8:	mov    r13,QWORD PTR [rsp+0x60]
   140030cad:	add    rsp,0x30
   140030cb1:	pop    r12
   140030cb3:	pop    rbp
   140030cb4:	pop    rbx
   140030cb5:	ret    
   140030cb6:	int3   
   140030cb7:	int3   
   140030cb8:	int3   
   140030cb9:	int3   
   140030cba:	int3   
   140030cbb:	int3   
   140030cbc:	int3   
   140030cbd:	int3   
   140030cbe:	int3   
   140030cbf:	int3   
   140030cc0:	rex push rbx
   140030cc2:	push   r12
   140030cc4:	push   r13
   140030cc6:	sub    rsp,0x30
   140030cca:	mov    rax,QWORD PTR [rdx]
   140030ccd:	mov    rbx,r8
   140030cd0:	mov    r12,rdx
   140030cd3:	movsxd r9,DWORD PTR [rax+0x4]
   140030cd7:	mov    r13,rcx
   140030cda:	cmp    DWORD PTR [r9+rdx*1+0x10],0x0
   140030ce0:	jne    0x140030e6b
   140030ce6:	mov    QWORD PTR [rsp+0x58],rsi
   140030ceb:	mov    QWORD PTR [rsp+0x68],r14
   140030cf0:	mov    QWORD PTR [rsp+0x50],rbp
   140030cf5:	mov    QWORD PTR [rsp+0x60],rdi
   140030cfa:	xor    r14d,r14d
   140030cfd:	nop    DWORD PTR [rax]
   140030d00:	mov    rcx,r12
   140030d03:	call   0x140030470
   140030d08:	mov    esi,eax
   140030d0a:	cmp    BYTE PTR [r13+0x70],r14b
   140030d0e:	jne    0x140030d19
   140030d10:	cmp    eax,0x3c
   140030d13:	je     0x140030e57
   140030d19:	test   eax,eax
   140030d1b:	jle    0x140030e33
   140030d21:	or     rcx,0xffffffffffffffff
   140030d25:	sub    rcx,QWORD PTR [rbx+0x18]
   140030d29:	cmp    rcx,0x1
   140030d2d:	ja     0x140030d34
   140030d2f:	call   0x140031fd4
   140030d34:	mov    rdi,QWORD PTR [rbx+0x18]
   140030d38:	inc    rdi
   140030d3b:	cmp    rdi,0xfffffffffffffffe
   140030d3f:	jbe    0x140030d46
   140030d41:	call   0x140031fd4
   140030d46:	mov    rax,QWORD PTR [rbx+0x20]
   140030d4a:	cmp    rax,rdi
   140030d4d:	jae    0x140030d78
   140030d4f:	mov    r8,QWORD PTR [rbx+0x18]
   140030d53:	mov    rdx,rdi
   140030d56:	mov    rcx,rbx
   140030d59:	call   0x140003460
   140030d5e:	test   rdi,rdi
   140030d61:	je     0x140030db6
   140030d63:	cmp    QWORD PTR [rbx+0x20],0x10
   140030d68:	mov    rdx,QWORD PTR [rbx+0x18]
   140030d6c:	jb     0x140030d99
   140030d6e:	mov    rcx,QWORD PTR [rbx+0x8]
   140030d72:	lea    rax,[rbx+0x8]
   140030d76:	jmp    0x140030da0
   140030d78:	test   rdi,rdi
   140030d7b:	jne    0x140030d5e
   140030d7d:	mov    QWORD PTR [rbx+0x18],r14
   140030d81:	cmp    rax,0x10
   140030d85:	jb     0x140030d90
   140030d87:	mov    rax,QWORD PTR [rbx+0x8]
   140030d8b:	mov    BYTE PTR [rax],r14b
   140030d8e:	jmp    0x140030db6
   140030d90:	lea    rax,[rbx+0x8]
   140030d94:	mov    BYTE PTR [rax],r14b
   140030d97:	jmp    0x140030db6
   140030d99:	lea    rax,[rbx+0x8]
   140030d9d:	mov    rcx,rax
   140030da0:	mov    BYTE PTR [rcx+rdx*1],sil
   140030da4:	cmp    QWORD PTR [rbx+0x20],0x10
   140030da9:	mov    QWORD PTR [rbx+0x18],rdi
   140030dad:	jb     0x140030db2
   140030daf:	mov    rax,QWORD PTR [rax]
   140030db2:	mov    BYTE PTR [rax+rdi*1],r14b
   140030db6:	mov    rcx,r12
   140030db9:	call   0x140030360
   140030dbe:	cmp    BYTE PTR [r13+0x70],r14b
   140030dc2:	je     0x140030e1e
   140030dc4:	cmp    esi,0x3e
   140030dc7:	jne    0x140030e1e
   140030dc9:	mov    rsi,QWORD PTR [rbx+0x18]
   140030dcd:	cmp    rsi,0x3
   140030dd1:	jb     0x140030e1e
   140030dd3:	lea    rbp,[rsi-0x2]
   140030dd7:	cmp    rbp,rsi
   140030dda:	jbe    0x140030de1
   140030ddc:	call   0x140014a30
   140030de1:	cmp    QWORD PTR [rbx+0x20],0x10
   140030de6:	jb     0x140030df2
   140030de8:	mov    rax,QWORD PTR [rbx+0x8]
   140030dec:	lea    rdi,[rbx+0x8]
   140030df0:	jmp    0x140030df9
   140030df2:	lea    rdi,[rbx+0x8]
   140030df6:	mov    rax,rdi
   140030df9:	cmp    BYTE PTR [rax+rbp*1],0x5d
   140030dfd:	jne    0x140030e1e
   140030dff:	add    rsi,0xfffffffffffffffd
   140030e03:	cmp    rsi,QWORD PTR [rbx+0x18]
   140030e07:	jbe    0x140030e0e
   140030e09:	call   0x140014a30
   140030e0e:	cmp    QWORD PTR [rbx+0x20],0x10
   140030e13:	jb     0x140030e18
   140030e15:	mov    rdi,QWORD PTR [rdi]
   140030e18:	cmp    BYTE PTR [rdi+rsi*1],0x5d
   140030e1c:	je     0x140030e57
   140030e1e:	mov    rax,QWORD PTR [r12]
   140030e22:	movsxd rcx,DWORD PTR [rax+0x4]
   140030e26:	cmp    DWORD PTR [rcx+r12*1+0x10],r14d
   140030e2b:	je     0x140030d00
   140030e31:	jmp    0x140030e57
   140030e33:	mov    rcx,r13
   140030e36:	call   0x14002a8f0
   140030e3b:	test   rax,rax
   140030e3e:	je     0x140030e57
   140030e40:	xor    r9d,r9d
   140030e43:	xor    r8d,r8d
   140030e46:	mov    rcx,rax
   140030e49:	lea    edx,[r9+0xd]
   140030e4d:	mov    DWORD PTR [rsp+0x20],r14d
   140030e52:	call   0x14002e9f0
   140030e57:	mov    rdi,QWORD PTR [rsp+0x60]
   140030e5c:	mov    rbp,QWORD PTR [rsp+0x50]
   140030e61:	mov    rsi,QWORD PTR [rsp+0x58]
   140030e66:	mov    r14,QWORD PTR [rsp+0x68]
   140030e6b:	add    rsp,0x30
   140030e6f:	pop    r13
   140030e71:	pop    r12
   140030e73:	pop    rbx
   140030e74:	ret    
   140030e75:	int3   
   140030e76:	int3   
   140030e77:	int3   
   140030e78:	int3   
   140030e79:	int3   
   140030e7a:	int3   
   140030e7b:	int3   
   140030e7c:	int3   
   140030e7d:	int3   
   140030e7e:	int3   
   140030e7f:	int3   
   140030e80:	rex push rbp
   140030e82:	push   rsi
   140030e83:	push   rdi
   140030e84:	push   r12
   140030e86:	push   r13
   140030e88:	push   r14
   140030e8a:	push   r15
   140030e8c:	sub    rsp,0xe0
   140030e93:	mov    QWORD PTR [rsp+0x40],0xfffffffffffffffe
   140030e9c:	mov    QWORD PTR [rsp+0x138],rbx
   140030ea4:	mov    rax,QWORD PTR [rip+0x17f15]        # 0x140048dc0
   140030eab:	xor    rax,rsp
   140030eae:	mov    QWORD PTR [rsp+0xd0],rax
   140030eb6:	mov    rbx,r8
   140030eb9:	mov    r12,rdx
   140030ebc:	mov    QWORD PTR [rsp+0x30],rcx
   140030ec1:	mov    rax,QWORD PTR [rdx]
   140030ec4:	movsxd rcx,DWORD PTR [rax+0x4]
   140030ec8:	cmp    DWORD PTR [rcx+rdx*1+0x10],0x0
   140030ecd:	jne    0x140030fc2
   140030ed3:	xor    ebp,ebp
   140030ed5:	mov    rcx,r12
   140030ed8:	call   0x140030360
   140030edd:	mov    esi,eax
   140030edf:	test   eax,eax
   140030ee1:	jle    0x140030f94
   140030ee7:	or     rcx,0xffffffffffffffff
   140030eeb:	sub    rcx,QWORD PTR [rbx+0x18]
   140030eef:	cmp    rcx,0x1
   140030ef3:	ja     0x140030efa
   140030ef5:	call   0x140031fd4
   140030efa:	mov    rdi,QWORD PTR [rbx+0x18]
   140030efe:	inc    rdi
   140030f01:	cmp    rdi,0xfffffffffffffffe
   140030f05:	jbe    0x140030f0c
   140030f07:	call   0x140031fd4
   140030f0c:	mov    rax,QWORD PTR [rbx+0x20]
   140030f10:	cmp    rax,rdi
   140030f13:	jae    0x140030f26
   140030f15:	mov    r8,QWORD PTR [rbx+0x18]
   140030f19:	mov    rdx,rdi
   140030f1c:	mov    rcx,rbx
   140030f1f:	call   0x140003460
   140030f24:	jmp    0x140030f44
   140030f26:	test   rdi,rdi
   140030f29:	jne    0x140030f44
   140030f2b:	mov    QWORD PTR [rbx+0x18],rbp
   140030f2f:	cmp    rax,0x10
   140030f33:	jb     0x140030f3b
   140030f35:	mov    rax,QWORD PTR [rbx+0x8]
   140030f39:	jmp    0x140030f3f
   140030f3b:	lea    rax,[rbx+0x8]
   140030f3f:	mov    BYTE PTR [rax],bpl
   140030f42:	jmp    0x140030f7a
   140030f44:	test   rdi,rdi
   140030f47:	je     0x140030f7a
   140030f49:	mov    rdx,QWORD PTR [rbx+0x18]
   140030f4d:	cmp    QWORD PTR [rbx+0x20],0x10
   140030f52:	jb     0x140030f5d
   140030f54:	lea    rax,[rbx+0x8]
   140030f58:	mov    rcx,QWORD PTR [rax]
   140030f5b:	jmp    0x140030f64
   140030f5d:	lea    rax,[rbx+0x8]
   140030f61:	mov    rcx,rax
   140030f64:	mov    BYTE PTR [rcx+rdx*1],sil
   140030f68:	mov    QWORD PTR [rbx+0x18],rdi
   140030f6c:	cmp    QWORD PTR [rbx+0x20],0x10
   140030f71:	jb     0x140030f76
   140030f73:	mov    rax,QWORD PTR [rax]
   140030f76:	mov    BYTE PTR [rax+rdi*1],bpl
   140030f7a:	cmp    esi,0x3e
   140030f7d:	je     0x140030fc2
   140030f7f:	mov    rax,QWORD PTR [r12]
   140030f83:	movsxd rcx,DWORD PTR [rax+0x4]
   140030f87:	cmp    DWORD PTR [rcx+r12*1+0x10],ebp
   140030f8c:	je     0x140030ed5
   140030f92:	jmp    0x140030fc2
   140030f94:	mov    rcx,QWORD PTR [rsp+0x30]
   140030f99:	call   0x14002a8f0
   140030f9e:	test   rax,rax
   140030fa1:	je     0x140031324
   140030fa7:	mov    DWORD PTR [rsp+0x20],ebp
   140030fab:	xor    r9d,r9d
   140030fae:	xor    r8d,r8d
   140030fb1:	lea    edx,[r9+0xd]
   140030fb5:	mov    rcx,rax
   140030fb8:	call   0x14002e9f0
   140030fbd:	jmp    0x140031324
   140030fc2:	mov    rax,QWORD PTR [rbx+0x18]
   140030fc6:	cmp    rax,0x3
   140030fca:	jb     0x140031324
   140030fd0:	lea    rdi,[rax-0x1]
   140030fd4:	cmp    rax,rdi
   140030fd7:	ja     0x140030fde
   140030fd9:	call   0x14003203c
   140030fde:	cmp    QWORD PTR [rbx+0x20],0x10
   140030fe3:	jb     0x140030fef
   140030fe5:	lea    r13,[rbx+0x8]
   140030fe9:	mov    rax,QWORD PTR [r13+0x0]
   140030fed:	jmp    0x140030ff6
   140030fef:	lea    r13,[rbx+0x8]
   140030ff3:	mov    rax,r13
   140030ff6:	cmp    BYTE PTR [rax+rdi*1],0x3e
   140030ffa:	jne    0x140031028
   140030ffc:	mov    rax,QWORD PTR [rbx+0x18]
   140031000:	lea    rdi,[rax-0x2]
   140031004:	cmp    rax,rdi
   140031007:	ja     0x14003100e
   140031009:	call   0x14003203c
   14003100e:	cmp    QWORD PTR [rbx+0x20],0x10
   140031013:	jb     0x14003101b
   140031015:	mov    rax,QWORD PTR [r13+0x0]
   140031019:	jmp    0x14003101e
   14003101b:	mov    rax,r13
   14003101e:	cmp    BYTE PTR [rax+rdi*1],0x2f
   140031022:	je     0x140031324
   140031028:	mov    rax,QWORD PTR [rbx+0x18]
   14003102c:	lea    rdi,[rax-0x1]
   140031030:	cmp    rax,rdi
   140031033:	ja     0x14003103a
   140031035:	call   0x14003203c
   14003103a:	cmp    QWORD PTR [rbx+0x20],0x10
   14003103f:	jb     0x140031047
   140031041:	mov    rax,QWORD PTR [r13+0x0]
   140031045:	jmp    0x14003104a
   140031047:	mov    rax,r13
   14003104a:	cmp    BYTE PTR [rax+rdi*1],0x3e
   14003104e:	jne    0x140031324
   140031054:	lea    rdi,[rip+0xaf1d]        # 0x14003bf78
   14003105b:	nop    DWORD PTR [rax+rax*1+0x0]
   140031060:	mov    rdx,rbx
   140031063:	mov    rcx,r12
   140031066:	call   0x140030570
   14003106b:	mov    rdx,QWORD PTR [r12]
   14003106f:	movsxd rax,DWORD PTR [rdx+0x4]
   140031073:	cmp    DWORD PTR [rax+r12*1+0x10],0x0
   140031079:	jne    0x1400310de
   14003107b:	mov    rcx,r12
   14003107e:	call   0x140030470
   140031083:	cmp    eax,0x3c
   140031086:	je     0x1400310de
   140031088:	mov    edx,0x4
   14003108d:	lea    rcx,[rsp+0x50]
   140031092:	call   0x14002b4e0
   140031097:	nop
   140031098:	mov    QWORD PTR [rsp+0x50],rdi
   14003109d:	xor    r8d,r8d
   1400310a0:	lea    rdx,[rip+0xc6f8]        # 0x14003d79f
   1400310a7:	lea    rcx,[rsp+0x88]
   1400310af:	call   0x140002a30
   1400310b4:	mov    BYTE PTR [rsp+0xc0],0x0
   1400310bc:	mov    r8,rbx
   1400310bf:	mov    rdx,r12
   1400310c2:	lea    rcx,[rsp+0x50]
   1400310c7:	call   0x140030cc0
   1400310cc:	nop
   1400310cd:	mov    QWORD PTR [rsp+0x50],rdi
   1400310d2:	lea    rcx,[rsp+0x50]
   1400310d7:	call   0x14002b530
   1400310dc:	jmp    0x140031060
   1400310de:	mov    rax,QWORD PTR [r12]
   1400310e2:	movsxd rcx,DWORD PTR [rax+0x4]
   1400310e6:	cmp    DWORD PTR [rcx+r12*1+0x10],0x0
   1400310ec:	jne    0x140031324
   1400310f2:	mov    edi,DWORD PTR [rbx+0x18]
   1400310f5:	mov    DWORD PTR [rsp+0x38],edi
   1400310f9:	xor    r15b,r15b
   1400310fc:	xor    r14b,r14b
   1400310ff:	nop
   140031100:	mov    rax,QWORD PTR [r12]
   140031104:	movsxd rcx,DWORD PTR [rax+0x4]
   140031108:	cmp    DWORD PTR [rcx+r12*1+0x10],0x0
   14003110e:	jne    0x140031324
   140031114:	mov    rcx,r12
   140031117:	call   0x140030470
   14003111c:	mov    ebp,eax
   14003111e:	test   eax,eax
   140031120:	jle    0x1400312fb
   140031126:	cmp    eax,0x3e
   140031129:	je     0x140031248
   14003112f:	or     rcx,0xffffffffffffffff
   140031133:	sub    rcx,QWORD PTR [rbx+0x18]
   140031137:	cmp    rcx,0x1
   14003113b:	ja     0x140031142
   14003113d:	call   0x140031fd4
   140031142:	mov    rdi,QWORD PTR [rbx+0x18]
   140031146:	inc    rdi
   140031149:	cmp    rdi,0xfffffffffffffffe
   14003114d:	jbe    0x140031154
   14003114f:	call   0x140031fd4
   140031154:	mov    rax,QWORD PTR [rbx+0x20]
   140031158:	cmp    rax,rdi
   14003115b:	jae    0x14003116e
   14003115d:	mov    r8,QWORD PTR [rbx+0x18]
   140031161:	mov    rdx,rdi
   140031164:	mov    rcx,rbx
   140031167:	call   0x140003460
   14003116c:	jmp    0x14003118b
   14003116e:	test   rdi,rdi
   140031171:	jne    0x14003118b
   140031173:	mov    QWORD PTR [rbx+0x18],rdi
   140031177:	cmp    rax,0x10
   14003117b:	jb     0x140031183
   14003117d:	mov    rax,QWORD PTR [r13+0x0]
   140031181:	jmp    0x140031186
   140031183:	mov    rax,r13
   140031186:	mov    BYTE PTR [rax],0x0
   140031189:	jmp    0x1400311c0
   14003118b:	test   rdi,rdi
   14003118e:	je     0x1400311c0
   140031190:	mov    rcx,QWORD PTR [rbx+0x18]
   140031194:	cmp    QWORD PTR [rbx+0x20],0x10
   140031199:	jb     0x1400311a1
   14003119b:	mov    rax,QWORD PTR [r13+0x0]
   14003119f:	jmp    0x1400311a4
   1400311a1:	mov    rax,r13
   1400311a4:	mov    BYTE PTR [rax+rcx*1],bpl
   1400311a8:	mov    QWORD PTR [rbx+0x18],rdi
   1400311ac:	cmp    QWORD PTR [rbx+0x20],0x10
   1400311b1:	jb     0x1400311b9
   1400311b3:	mov    rax,QWORD PTR [r13+0x0]
   1400311b7:	jmp    0x1400311bc
   1400311b9:	mov    rax,r13
   1400311bc:	mov    BYTE PTR [rax+rdi*1],0x0
   1400311c0:	mov    rcx,r12
   1400311c3:	call   0x140030360
   1400311c8:	cmp    ebp,0x5b
   1400311cb:	jne    0x1400311f4
   1400311cd:	mov    rdi,QWORD PTR [rbx+0x18]
   1400311d1:	cmp    rdi,0x9
   1400311d5:	jb     0x1400311f4
   1400311d7:	mov    rcx,rbx
   1400311da:	call   0x1400023d0
   1400311df:	lea    rsi,[rax+rdi*1-0x9]
   1400311e4:	lea    rdi,[rip+0xb95d]        # 0x14003cb48
   1400311eb:	mov    ecx,0xa
   1400311f0:	repz cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400311f2:	je     0x140031248
   1400311f4:	test   r14b,r14b
   1400311f7:	jne    0x140031100
   1400311fd:	cmp    ebp,0x3c
   140031200:	je     0x140031100
   140031206:	cmp    ebp,0x100
   14003120c:	jge    0x140031233
   14003120e:	movzx  ecx,bpl
   140031212:	call   0x1400235ec
   140031217:	test   eax,eax
   140031219:	jne    0x140031100
   14003121f:	cmp    bpl,0xa
   140031223:	je     0x140031100
   140031229:	cmp    bpl,0xd
   14003122d:	je     0x140031100
   140031233:	mov    r14b,0x1
   140031236:	cmp    ebp,0x2f
   140031239:	jne    0x140031100
   14003123f:	movzx  r15d,r14b
   140031243:	jmp    0x140031100
   140031248:	test   r15b,r15b
   14003124b:	jne    0x1400312a4
   14003124d:	mov    rcx,rbx
   140031250:	call   0x1400023d0
   140031255:	mov    rdx,rax
   140031258:	movsxd rax,DWORD PTR [rsp+0x38]
   14003125d:	add    rdx,rax
   140031260:	xor    r8d,r8d
   140031263:	mov    rcx,QWORD PTR [rsp+0x30]
   140031268:	call   0x14002ea90
   14003126d:	mov    rdi,rax
   140031270:	test   rax,rax
   140031273:	je     0x140031324
   140031279:	mov    rax,QWORD PTR [rax]
   14003127c:	mov    r8,rbx
   14003127f:	mov    rdx,r12
   140031282:	mov    rcx,rdi
   140031285:	call   QWORD PTR [rax+0x88]
   14003128b:	mov    rax,QWORD PTR [rdi]
   14003128e:	mov    edx,0x1
   140031293:	mov    rcx,rdi
   140031296:	call   QWORD PTR [rax]
   140031298:	lea    rdi,[rip+0xacd9]        # 0x14003bf78
   14003129f:	jmp    0x140031060
   1400312a4:	mov    rax,QWORD PTR [r12]
   1400312a8:	movsxd rdx,DWORD PTR [rax+0x4]
   1400312ac:	cmp    DWORD PTR [rdx+r12*1+0x10],0x0
   1400312b2:	jne    0x140031324
   1400312b4:	mov    rcx,r12
   1400312b7:	call   0x140030360
   1400312bc:	test   eax,eax
   1400312be:	jg     0x1400312e8
   1400312c0:	mov    rcx,QWORD PTR [rsp+0x30]
   1400312c5:	call   0x14002a8f0
   1400312ca:	test   rax,rax
   1400312cd:	je     0x140031324
   1400312cf:	xor    ebp,ebp
   1400312d1:	mov    DWORD PTR [rsp+0x20],ebp
   1400312d5:	xor    r9d,r9d
   1400312d8:	xor    r8d,r8d
   1400312db:	lea    edx,[rbp+0xd]
   1400312de:	mov    rcx,rax
   1400312e1:	call   0x14002e9f0
   1400312e6:	jmp    0x140031324
   1400312e8:	movzx  r8d,al
   1400312ec:	mov    edx,0x1
   1400312f1:	mov    rcx,rbx
   1400312f4:	call   0x14002b600
   1400312f9:	jmp    0x140031324
   1400312fb:	mov    rcx,QWORD PTR [rsp+0x30]
   140031300:	call   0x14002a8f0
   140031305:	test   rax,rax
   140031308:	je     0x140031324
   14003130a:	mov    DWORD PTR [rsp+0x20],0x0
   140031312:	xor    r9d,r9d
   140031315:	xor    r8d,r8d
   140031318:	lea    edx,[r9+0xd]
   14003131c:	mov    rcx,rax
   14003131f:	call   0x14002e9f0
   140031324:	mov    rcx,QWORD PTR [rsp+0xd0]
   14003132c:	xor    rcx,rsp
   14003132f:	call   0x1400144f0
   140031334:	mov    rbx,QWORD PTR [rsp+0x138]
   14003133c:	add    rsp,0xe0
   140031343:	pop    r15
   140031345:	pop    r14
   140031347:	pop    r13
   140031349:	pop    r12
   14003134b:	pop    rdi
   14003134c:	pop    rsi
   14003134d:	pop    rbp
   14003134e:	ret    
   14003134f:	int3   
   140031350:	lea    rax,[rip+0xc181]        # 0x14003d4d8
   140031357:	mov    QWORD PTR [rcx],rax
   14003135a:	mov    rax,rcx
   14003135d:	ret    
   14003135e:	int3   
   14003135f:	int3   
   140031360:	lea    rax,[rip+0xc171]        # 0x14003d4d8
   140031367:	mov    QWORD PTR [rcx],rax
   14003136a:	ret    
   14003136b:	int3   
   14003136c:	int3   
   14003136d:	int3   
   14003136e:	int3   
   14003136f:	int3   
   140031370:	rex push rsi
   140031372:	push   rdi
   140031373:	push   r13
   140031375:	push   r14
   140031377:	push   r15
   140031379:	sub    rsp,0x30
   14003137d:	mov    rax,QWORD PTR [rip+0x17a3c]        # 0x140048dc0
   140031384:	xor    rax,rsp
   140031387:	mov    QWORD PTR [rsp+0x28],rax
   14003138c:	xor    r15d,r15d
   14003138f:	lea    r13,[rcx+0x8]
   140031393:	mov    rsi,rdx
   140031396:	mov    WORD PTR [r13+0x0],r15w
   14003139b:	mov    WORD PTR [r13+0x2],r15w
   1400313a0:	mov    WORD PTR [r13+0x4],r15w
   1400313a5:	mov    WORD PTR [r13+0x6],r15w
   1400313aa:	mov    r14,rcx
   1400313ad:	mov    dil,0x1
   1400313b0:	test   rdx,rdx
   1400313b3:	jne    0x1400313bc
   1400313b5:	xor    al,al
   1400313b7:	jmp    0x140031469
   1400313bc:	mov    QWORD PTR [rsp+0x68],rbx
   1400313c1:	mov    QWORD PTR [rsp+0x70],rbp
   1400313c6:	mov    rcx,r15
   1400313c9:	mov    QWORD PTR [rsp+0x78],r12
   1400313ce:	mov    r12d,r15d
   1400313d1:	mov    rbx,r15
   1400313d4:	mov    rbp,r15
   1400313d7:	mov    BYTE PTR [rsp+0x20],r12b
   1400313dc:	cmp    BYTE PTR [rdx],cl
   1400313de:	je     0x140031444
   1400313e0:	cmp    rbx,0x14
   1400313e4:	jge    0x140031438
   1400313e6:	cmp    rbp,0x4
   1400313ea:	jge    0x140031438
   1400313ec:	movzx  eax,BYTE PTR [rbx+rsi*1]
   1400313f0:	cmp    al,BYTE PTR [r14+0x10]
   1400313f4:	je     0x14003140e
   1400313f6:	test   al,al
   1400313f8:	je     0x14003140e
   1400313fa:	cmp    rcx,0x4
   1400313fe:	jge    0x140031409
   140031400:	mov    BYTE PTR [rsp+rcx*1+0x20],al
   140031404:	inc    rcx
   140031407:	jmp    0x14003142f
   140031409:	xor    dil,dil
   14003140c:	jmp    0x14003142f
   14003140e:	mov    BYTE PTR [rsp+rcx*1+0x20],r15b
   140031413:	lea    rcx,[rsp+0x20]
   140031418:	call   0x140016de8
   14003141d:	inc    r12d
   140031420:	inc    rbp
   140031423:	mov    WORD PTR [r13+0x0],ax
   140031428:	add    r13,0x2
   14003142c:	mov    rcx,r15
   14003142f:	inc    rbx
   140031432:	cmp    BYTE PTR [rbx+rsi*1],r15b
   140031436:	jne    0x1400313e0
   140031438:	movzx  edi,dil
   14003143c:	cmp    r12d,0x4
   140031440:	cmovg  edi,r15d
   140031444:	lea    rcx,[rsp+0x20]
   140031449:	call   0x140016de8
   14003144e:	mov    rbp,QWORD PTR [rsp+0x70]
   140031453:	mov    rbx,QWORD PTR [rsp+0x68]
   140031458:	movsxd rcx,r12d
   14003145b:	mov    r12,QWORD PTR [rsp+0x78]
   140031460:	mov    WORD PTR [r14+rcx*2+0x8],ax
   140031466:	mov    al,dil
   140031469:	mov    rcx,QWORD PTR [rsp+0x28]
   14003146e:	xor    rcx,rsp
   140031471:	call   0x1400144f0
   140031476:	add    rsp,0x30
   14003147a:	pop    r15
   14003147c:	pop    r14
   14003147e:	pop    r13
   140031480:	pop    rdi
   140031481:	pop    rsi
   140031482:	ret    
   140031483:	int3   
   140031484:	int3   
   140031485:	int3   
   140031486:	int3   
   140031487:	int3   
   140031488:	int3   
   140031489:	int3   
   14003148a:	int3   
   14003148b:	int3   
   14003148c:	int3   
   14003148d:	int3   
   14003148e:	int3   
   14003148f:	int3   
   140031490:	mov    QWORD PTR [rsp+0x8],rbx
   140031495:	mov    QWORD PTR [rsp+0x10],rdi
   14003149a:	xor    edi,edi
   14003149c:	mov    rbx,rdx
   14003149f:	lea    r8,[rcx+0xe]
   1400314a3:	lea    eax,[rdi+0x1]
   1400314a6:	lea    r9d,[rdi+0x3]
   1400314aa:	mov    r10d,edi
   1400314ad:	mov    r11d,edi
   1400314b0:	sub    rbx,rcx
   1400314b3:	data16 data16 data16 data16 nop WORD PTR [rax+rax*1+0x0]
   1400314c0:	movzx  ecx,WORD PTR [r8]
   1400314c4:	movzx  edx,WORD PTR [rbx+r8*1]
   1400314c9:	cmp    cx,dx
   1400314cc:	je     0x1400314d8
   1400314ce:	jbe    0x1400314d5
   1400314d0:	mov    r10d,eax
   1400314d3:	jmp    0x1400314d8
   1400314d5:	mov    r11d,eax
   1400314d8:	sub    r8,0x2
   1400314dc:	inc    eax
   1400314de:	sub    r9,0x1
   1400314e2:	jns    0x1400314c0
   1400314e4:	mov    rbx,QWORD PTR [rsp+0x8]
   1400314e9:	mov    rdi,QWORD PTR [rsp+0x10]
   1400314ee:	cmp    r10d,r11d
   1400314f1:	setg   al
   1400314f4:	ret    
   1400314f5:	int3   
   1400314f6:	int3   
   1400314f7:	int3   
   1400314f8:	int3   
   1400314f9:	int3   
   1400314fa:	int3   
   1400314fb:	int3   
   1400314fc:	int3   
   1400314fd:	int3   
   1400314fe:	int3   
   1400314ff:	int3   
   140031500:	rex push rbx
   140031502:	sub    rsp,0x20
   140031506:	mov    rbx,rcx
   140031509:	call   0x140031360
   14003150e:	test   dl,0x1
   140031511:	je     0x140031518
   140031513:	call   0x1400062d4
   140031518:	mov    rax,rbx
   14003151b:	add    rsp,0x20
   14003151f:	pop    rbx
   140031520:	ret    
   140031521:	int3   
   140031522:	int3   
   140031523:	int3   
   140031524:	int3   
   140031525:	int3   
   140031526:	int3   
   140031527:	int3   
   140031528:	int3   
   140031529:	int3   
   14003152a:	int3   
   14003152b:	int3   
   14003152c:	int3   
   14003152d:	int3   
   14003152e:	int3   
   14003152f:	int3   
   140031530:	rex push rbx
   140031532:	sub    rsp,0x20
   140031536:	lea    rax,[rip+0xbf9b]        # 0x14003d4d8
   14003153d:	mov    rbx,rcx
   140031540:	mov    BYTE PTR [rcx+0x10],0x2e
   140031544:	mov    QWORD PTR [rcx],rax
   140031547:	call   0x140031370
   14003154c:	mov    rax,rbx
   14003154f:	add    rsp,0x20
   140031553:	pop    rbx
   140031554:	ret    
   140031555:	int3   
   140031556:	int3   
   140031557:	int3   
   140031558:	int3   
   140031559:	int3   
   14003155a:	int3   
   14003155b:	int3   
   14003155c:	int3   
   14003155d:	int3   
   14003155e:	int3   
   14003155f:	int3   
   140031560:	mov    QWORD PTR [rsp+0x10],rdx
   140031565:	mov    QWORD PTR [rsp+0x8],rcx
   14003156a:	sub    rsp,0x38
   14003156e:	mov    QWORD PTR [rsp+0x28],0xfffffffffffffffe
   140031577:	mov    rdx,QWORD PTR [rsp+0x48]
   14003157c:	mov    rcx,QWORD PTR [rsp+0x40]
   140031581:	call   0x140002390
   140031586:	mov    r11,QWORD PTR [rsp+0x40]
   14003158b:	mov    DWORD PTR [r11+0x28],0x7
   140031593:	mov    rcx,QWORD PTR [rsp+0x48]
   140031598:	call   0x140001260
   14003159d:	mov    rax,QWORD PTR [rsp+0x40]
   1400315a2:	add    rsp,0x38
   1400315a6:	ret    
   1400315a7:	int3   
   1400315a8:	int3   
   1400315a9:	int3   
   1400315aa:	int3   
   1400315ab:	int3   
   1400315ac:	int3   
   1400315ad:	int3   
   1400315ae:	int3   
   1400315af:	int3   
   1400315b0:	mov    DWORD PTR [rsp+0x20],r9d
   1400315b5:	mov    QWORD PTR [rsp+0x18],r8
   1400315ba:	mov    DWORD PTR [rsp+0x10],edx
   1400315be:	mov    QWORD PTR [rsp+0x8],rcx
   1400315c3:	push   rbx
   1400315c4:	push   rdi
   1400315c5:	sub    rsp,0x148
   1400315cc:	mov    QWORD PTR [rsp+0x120],0xfffffffffffffffe
   1400315d8:	mov    rax,QWORD PTR [rip+0x177e1]        # 0x140048dc0
   1400315df:	xor    rax,rsp
   1400315e2:	mov    QWORD PTR [rsp+0x130],rax
   1400315ea:	mov    QWORD PTR [rsp+0xb0],0x0
   1400315f6:	xor    eax,eax
   1400315f8:	mov    WORD PTR [rsp+0x50],ax
   1400315fd:	mov    QWORD PTR [rsp+0x60],0x0
   140031606:	lea    rdi,[rsp+0x68]
   14003160b:	xor    eax,eax
   14003160d:	mov    ecx,0x48
   140031612:	rep stos BYTE PTR es:[rdi],al
   140031614:	mov    DWORD PTR [rsp+0xb8],0x0
   14003161f:	mov    BYTE PTR [rsp+0x54],0x1
   140031624:	mov    rcx,QWORD PTR [rsp+0x160]
   14003162c:	call   0x1400023d0
   140031631:	mov    rdx,rax
   140031634:	xor    ecx,ecx
   140031636:	call   QWORD PTR [rip+0x4a54]        # 0x140036090
   14003163c:	mov    QWORD PTR [rsp+0xb0],rax
   140031644:	cmp    QWORD PTR [rsp+0xb0],0x0
   14003164d:	jne    0x140031670
   14003164f:	mov    BYTE PTR [rsp+0x100],0x0
   140031657:	mov    rcx,QWORD PTR [rsp+0x170]
   14003165f:	call   0x140002510
   140031664:	mov    al,BYTE PTR [rsp+0x100]
   14003166b:	jmp    0x14003194f
   140031670:	mov    rcx,QWORD PTR [rsp+0x170]
   140031678:	call   0x140031d40
   14003167d:	movzx  eax,al
   140031680:	test   eax,eax
   140031682:	jne    0x140031804
   140031688:	lea    rdx,[rip+0xbe60]        # 0x14003d4ef
   14003168f:	lea    rcx,[rsp+0xc8]
   140031697:	call   0x140002340
   14003169c:	nop
   14003169d:	mov    rcx,QWORD PTR [rsp+0x170]
   1400316a5:	call   0x140002750
   1400316aa:	mov    DWORD PTR [rsp+0xb8],eax
   1400316b1:	mov    QWORD PTR [rsp+0xf0],0x0
   1400316bd:	jmp    0x1400316d3
   1400316bf:	mov    rax,QWORD PTR [rsp+0xf0]
   1400316c7:	add    rax,0x1
   1400316cb:	mov    QWORD PTR [rsp+0xf0],rax
   1400316d3:	movsxd rax,DWORD PTR [rsp+0xb8]
   1400316db:	cmp    QWORD PTR [rsp+0xf0],rax
   1400316e3:	jae    0x1400317f7
   1400316e9:	cmp    QWORD PTR [rsp+0xf0],0xa
   1400316f2:	jae    0x1400317f7
   1400316f8:	mov    rdx,QWORD PTR [rsp+0xf0]
   140031700:	mov    rcx,QWORD PTR [rsp+0x170]
   140031708:	call   0x140031d80
   14003170d:	mov    rcx,rax
   140031710:	call   0x1400023f0
   140031715:	mov    rcx,rax
   140031718:	add    rcx,0x1
   14003171c:	call   0x1400062dc
   140031721:	mov    QWORD PTR [rsp+0x108],rax
   140031729:	mov    rcx,QWORD PTR [rsp+0xf0]
   140031731:	mov    rax,QWORD PTR [rsp+0x108]
   140031739:	mov    QWORD PTR [rsp+rcx*8+0x60],rax
   14003173e:	mov    rdx,QWORD PTR [rsp+0xf0]
   140031746:	mov    rcx,QWORD PTR [rsp+0x170]
   14003174e:	call   0x140031d80
   140031753:	mov    rcx,rax
   140031756:	call   0x1400023f0
   14003175b:	mov    r8,rax
   14003175e:	add    r8,0x1
   140031762:	xor    edx,edx
   140031764:	mov    rcx,QWORD PTR [rsp+0xf0]
   14003176c:	mov    rcx,QWORD PTR [rsp+rcx*8+0x60]
   140031771:	call   0x140015b00
   140031776:	mov    rdx,QWORD PTR [rsp+0xf0]
   14003177e:	mov    rcx,QWORD PTR [rsp+0x170]
   140031786:	call   0x140031d80
   14003178b:	mov    rcx,rax
   14003178e:	call   0x1400023f0
   140031793:	mov    rbx,rax
   140031796:	mov    rdx,QWORD PTR [rsp+0xf0]
   14003179e:	mov    rcx,QWORD PTR [rsp+0x170]
   1400317a6:	call   0x140031d80
   1400317ab:	mov    rcx,rax
   1400317ae:	call   0x1400023d0
   1400317b3:	mov    rdi,rax
   1400317b6:	mov    rdx,QWORD PTR [rsp+0xf0]
   1400317be:	mov    rcx,QWORD PTR [rsp+0x170]
   1400317c6:	call   0x140031d80
   1400317cb:	mov    rcx,rax
   1400317ce:	call   0x1400023f0
   1400317d3:	mov    rdx,rax
   1400317d6:	add    rdx,0x1
   1400317da:	mov    r9,rbx
   1400317dd:	mov    r8,rdi
   1400317e0:	mov    rcx,QWORD PTR [rsp+0xf0]
   1400317e8:	mov    rcx,QWORD PTR [rsp+rcx*8+0x60]
   1400317ed:	call   0x140016c08
   1400317f2:	jmp    0x1400316bf
   1400317f7:	lea    rcx,[rsp+0xc8]
   1400317ff:	call   0x140001260
   140031804:	mov    eax,DWORD PTR [rsp+0x178]
   14003180b:	mov    DWORD PTR [rsp+0x128],eax
   140031812:	cmp    DWORD PTR [rsp+0x128],0x0
   14003181a:	je     0x140031832
   14003181c:	cmp    DWORD PTR [rsp+0x128],0x1
   140031824:	je     0x14003183e
   140031826:	cmp    DWORD PTR [rsp+0x128],0x2
   14003182e:	je     0x14003184a
   140031830:	jmp    0x140031856
   140031832:	mov    eax,0x1
   140031837:	mov    WORD PTR [rsp+0x50],ax
   14003183c:	jmp    0x140031860
   14003183e:	mov    eax,0x4
   140031843:	mov    WORD PTR [rsp+0x50],ax
   140031848:	jmp    0x140031860
   14003184a:	mov    eax,0x2
   14003184f:	mov    WORD PTR [rsp+0x50],ax
   140031854:	jmp    0x140031860
   140031856:	mov    eax,0x1
   14003185b:	mov    WORD PTR [rsp+0x50],ax
   140031860:	mov    QWORD PTR [rsp+0x40],0x0
   140031869:	lea    rax,[rsp+0x60]
   14003186e:	mov    QWORD PTR [rsp+0x38],rax
   140031873:	mov    DWORD PTR [rsp+0x30],0x0
   14003187b:	movzx  eax,WORD PTR [rsp+0xb8]
   140031883:	mov    WORD PTR [rsp+0x28],ax
   140031888:	mov    QWORD PTR [rsp+0x20],0x0
   140031891:	mov    r9d,DWORD PTR [rsp+0x168]
   140031899:	xor    r8d,r8d
   14003189c:	movzx  edx,WORD PTR [rsp+0x50]
   1400318a1:	mov    rcx,QWORD PTR [rsp+0xb0]
   1400318a9:	call   QWORD PTR [rip+0x4751]        # 0x140036000
   1400318af:	test   eax,eax
   1400318b1:	jne    0x1400318c5
   1400318b3:	call   QWORD PTR [rip+0x4ba7]        # 0x140036460
   1400318b9:	mov    DWORD PTR [rsp+0xf8],eax
   1400318c0:	mov    BYTE PTR [rsp+0x54],0x0
   1400318c5:	mov    DWORD PTR [rsp+0xfc],0x0
   1400318d0:	jmp    0x1400318e3
   1400318d2:	mov    eax,DWORD PTR [rsp+0xfc]
   1400318d9:	add    eax,0x1
   1400318dc:	mov    DWORD PTR [rsp+0xfc],eax
   1400318e3:	cmp    DWORD PTR [rsp+0xfc],0xa
   1400318eb:	jge    0x140031921
   1400318ed:	movsxd rax,DWORD PTR [rsp+0xfc]
   1400318f5:	cmp    QWORD PTR [rsp+rax*8+0x60],0x0
   1400318fb:	je     0x14003191f
   1400318fd:	movsxd rax,DWORD PTR [rsp+0xfc]
   140031905:	mov    rax,QWORD PTR [rsp+rax*8+0x60]
   14003190a:	mov    QWORD PTR [rsp+0x110],rax
   140031912:	mov    rcx,QWORD PTR [rsp+0x110]
   14003191a:	call   0x1400062d4
   14003191f:	jmp    0x1400318d2
   140031921:	mov    rcx,QWORD PTR [rsp+0xb0]
   140031929:	call   QWORD PTR [rip+0x46d9]        # 0x140036008
   14003192f:	movzx  eax,BYTE PTR [rsp+0x54]
   140031934:	mov    BYTE PTR [rsp+0x118],al
   14003193b:	mov    rcx,QWORD PTR [rsp+0x170]
   140031943:	call   0x140002510
   140031948:	mov    al,BYTE PTR [rsp+0x118]
   14003194f:	mov    rcx,QWORD PTR [rsp+0x130]
   140031957:	xor    rcx,rsp
   14003195a:	call   0x1400144f0
   14003195f:	add    rsp,0x148
   140031966:	pop    rdi
   140031967:	pop    rbx
   140031968:	ret    
   140031969:	int3   
   14003196a:	int3   
   14003196b:	int3   
   14003196c:	int3   
   14003196d:	int3   
   14003196e:	int3   
   14003196f:	int3   
   140031970:	mov    DWORD PTR [rsp+0x18],r8d
   140031975:	mov    QWORD PTR [rsp+0x10],rdx
   14003197a:	mov    QWORD PTR [rsp+0x8],rcx
   14003197f:	sub    rsp,0xc8
   140031986:	mov    QWORD PTR [rsp+0xa0],0xfffffffffffffffe
   140031992:	mov    eax,DWORD PTR [rsp+0xe0]
   140031999:	mov    DWORD PTR [rsp+0xa8],eax
   1400319a0:	cmp    DWORD PTR [rsp+0xa8],0x0
   1400319a8:	je     0x1400319c0
   1400319aa:	cmp    DWORD PTR [rsp+0xa8],0x1
   1400319b2:	je     0x1400319ca
   1400319b4:	cmp    DWORD PTR [rsp+0xa8],0x2
   1400319bc:	je     0x1400319d4
   1400319be:	jmp    0x1400319de
   1400319c0:	mov    DWORD PTR [rsp+0x28],0xc0020003
   1400319c8:	jmp    0x1400319e6
   1400319ca:	mov    DWORD PTR [rsp+0x28],0x40020001
   1400319d2:	jmp    0x1400319e6
   1400319d4:	mov    DWORD PTR [rsp+0x28],0x80020002
   1400319dc:	jmp    0x1400319e6
   1400319de:	mov    DWORD PTR [rsp+0x28],0x40020001
   1400319e6:	lea    rcx,[rsp+0x30]
   1400319eb:	call   0x140002400
   1400319f0:	nop
   1400319f1:	mov    rdx,QWORD PTR [rsp+0xd8]
   1400319f9:	lea    rcx,[rsp+0x30]
   1400319fe:	call   0x140002530
   140031a03:	lea    rax,[rsp+0x68]
   140031a08:	mov    QWORD PTR [rsp+0x98],rax
   140031a10:	lea    rdx,[rsp+0x30]
   140031a15:	mov    rcx,QWORD PTR [rsp+0x98]
   140031a1d:	call   0x140002450
   140031a22:	mov    QWORD PTR [rsp+0xb0],rax
   140031a2a:	mov    r9d,DWORD PTR [rsp+0xe0]
   140031a32:	mov    r8,QWORD PTR [rsp+0xb0]
   140031a3a:	mov    edx,DWORD PTR [rsp+0x28]
   140031a3e:	mov    rcx,QWORD PTR [rsp+0xd0]
   140031a46:	call   0x1400315b0
   140031a4b:	mov    BYTE PTR [rsp+0x60],al
   140031a4f:	lea    rcx,[rsp+0x30]
   140031a54:	call   0x140002510
   140031a59:	nop
   140031a5a:	mov    rcx,QWORD PTR [rsp+0xd8]
   140031a62:	call   0x140001260
   140031a67:	mov    al,BYTE PTR [rsp+0x60]
   140031a6b:	add    rsp,0xc8
   140031a72:	ret    
   140031a73:	int3   
   140031a74:	int3   
   140031a75:	int3   
   140031a76:	int3   
   140031a77:	int3   
   140031a78:	int3   
   140031a79:	int3   
   140031a7a:	int3   
   140031a7b:	int3   
   140031a7c:	int3   
   140031a7d:	int3   
   140031a7e:	int3   
   140031a7f:	int3   
   140031a80:	mov    DWORD PTR [rsp+0x18],r8d
   140031a85:	mov    DWORD PTR [rsp+0x10],edx
   140031a89:	mov    QWORD PTR [rsp+0x8],rcx
   140031a8e:	sub    rsp,0xa8
   140031a95:	mov    QWORD PTR [rsp+0x90],0xfffffffffffffffe
   140031aa1:	lea    rcx,[rsp+0x20]
   140031aa6:	call   0x140002400
   140031aab:	nop
   140031aac:	lea    rax,[rsp+0x58]
   140031ab1:	mov    QWORD PTR [rsp+0x88],rax
   140031ab9:	lea    rdx,[rsp+0x20]
   140031abe:	mov    rcx,QWORD PTR [rsp+0x88]
   140031ac6:	call   0x140002450
   140031acb:	mov    QWORD PTR [rsp+0x98],rax
   140031ad3:	mov    r9d,DWORD PTR [rsp+0xc0]
   140031adb:	mov    r8,QWORD PTR [rsp+0x98]
   140031ae3:	mov    edx,DWORD PTR [rsp+0xb8]
   140031aea:	mov    rcx,QWORD PTR [rsp+0xb0]
   140031af2:	call   0x1400315b0
   140031af7:	mov    BYTE PTR [rsp+0x50],al
   140031afb:	lea    rcx,[rsp+0x20]
   140031b00:	call   0x140002510
   140031b05:	mov    al,BYTE PTR [rsp+0x50]
   140031b09:	add    rsp,0xa8
   140031b10:	ret    
   140031b11:	int3   
   140031b12:	int3   
   140031b13:	int3   
   140031b14:	int3   
   140031b15:	int3   
   140031b16:	int3   
   140031b17:	int3   
   140031b18:	int3   
   140031b19:	int3   
   140031b1a:	int3   
   140031b1b:	int3   
   140031b1c:	int3   
   140031b1d:	int3   
   140031b1e:	int3   
   140031b1f:	int3   
   140031b20:	mov    QWORD PTR [rsp+0x10],rdx
   140031b25:	mov    QWORD PTR [rsp+0x8],rcx
   140031b2a:	push   rbx
   140031b2b:	sub    rsp,0xb0
   140031b32:	mov    QWORD PTR [rsp+0x98],0xfffffffffffffffe
   140031b3e:	mov    rax,QWORD PTR [rip+0x1727b]        # 0x140048dc0
   140031b45:	xor    rax,rsp
   140031b48:	mov    QWORD PTR [rsp+0xa0],rax
   140031b50:	mov    QWORD PTR [rsp+0x58],0x0
   140031b59:	mov    DWORD PTR [rsp+0x60],0x0
   140031b61:	lea    rdx,[rip+0xb990]        # 0x14003d4f8
   140031b68:	lea    rcx,[rsp+0x68]
   140031b6d:	call   0x140002340
   140031b72:	nop
   140031b73:	mov    rdx,QWORD PTR [rsp+0xc0]
   140031b7b:	lea    rcx,[rsp+0x68]
   140031b80:	call   0x14002a3b0
   140031b85:	lea    rcx,[rsp+0x68]
   140031b8a:	call   0x1400023d0
   140031b8f:	mov    rdx,rax
   140031b92:	lea    rax,[rsp+0x60]
   140031b97:	mov    QWORD PTR [rsp+0x40],rax
   140031b9c:	lea    rax,[rsp+0x58]
   140031ba1:	mov    QWORD PTR [rsp+0x38],rax
   140031ba6:	mov    QWORD PTR [rsp+0x30],0x0
   140031baf:	mov    DWORD PTR [rsp+0x28],0x20006
   140031bb7:	mov    DWORD PTR [rsp+0x20],0x0
   140031bbf:	xor    r9d,r9d
   140031bc2:	xor    r8d,r8d
   140031bc5:	mov    rcx,0xffffffff80000002
   140031bcc:	call   QWORD PTR [rip+0x4446]        # 0x140036018
   140031bd2:	test   eax,eax
   140031bd4:	je     0x140031c02
   140031bd6:	mov    BYTE PTR [rsp+0x90],0x0
   140031bde:	lea    rcx,[rsp+0x68]
   140031be3:	call   0x140001260
   140031be8:	nop
   140031be9:	mov    rcx,QWORD PTR [rsp+0xc8]
   140031bf1:	call   0x140001260
   140031bf6:	mov    al,BYTE PTR [rsp+0x90]
   140031bfd:	jmp    0x140031d1c
   140031c02:	mov    rcx,QWORD PTR [rsp+0xc8]
   140031c0a:	call   0x1400023f0
   140031c0f:	mov    rbx,rax
   140031c12:	mov    rcx,QWORD PTR [rsp+0xc8]
   140031c1a:	call   0x1400023d0
   140031c1f:	mov    DWORD PTR [rsp+0x28],ebx
   140031c23:	mov    QWORD PTR [rsp+0x20],rax
   140031c28:	mov    r9d,0x2
   140031c2e:	xor    r8d,r8d
   140031c31:	lea    rdx,[rip+0xb8f8]        # 0x14003d530
   140031c38:	mov    rcx,QWORD PTR [rsp+0x58]
   140031c3d:	call   QWORD PTR [rip+0x43cd]        # 0x140036010
   140031c43:	test   eax,eax
   140031c45:	je     0x140031c7e
   140031c47:	mov    rcx,QWORD PTR [rsp+0x58]
   140031c4c:	call   QWORD PTR [rip+0x43ce]        # 0x140036020
   140031c52:	mov    BYTE PTR [rsp+0x91],0x0
   140031c5a:	lea    rcx,[rsp+0x68]
   140031c5f:	call   0x140001260
   140031c64:	nop
   140031c65:	mov    rcx,QWORD PTR [rsp+0xc8]
   140031c6d:	call   0x140001260
   140031c72:	mov    al,BYTE PTR [rsp+0x91]
   140031c79:	jmp    0x140031d1c
   140031c7e:	mov    rax,QWORD PTR [rsp+0xc0]
   140031c86:	add    rax,0x28
   140031c8a:	mov    DWORD PTR [rsp+0x28],0x4
   140031c92:	mov    QWORD PTR [rsp+0x20],rax
   140031c97:	mov    r9d,0x4
   140031c9d:	xor    r8d,r8d
   140031ca0:	lea    rdx,[rip+0xb8a1]        # 0x14003d548
   140031ca7:	mov    rcx,QWORD PTR [rsp+0x58]
   140031cac:	call   QWORD PTR [rip+0x435e]        # 0x140036010
   140031cb2:	test   eax,eax
   140031cb4:	je     0x140031cea
   140031cb6:	mov    rcx,QWORD PTR [rsp+0x58]
   140031cbb:	call   QWORD PTR [rip+0x435f]        # 0x140036020
   140031cc1:	mov    BYTE PTR [rsp+0x92],0x0
   140031cc9:	lea    rcx,[rsp+0x68]
   140031cce:	call   0x140001260
   140031cd3:	nop
   140031cd4:	mov    rcx,QWORD PTR [rsp+0xc8]
   140031cdc:	call   0x140001260
   140031ce1:	mov    al,BYTE PTR [rsp+0x92]
   140031ce8:	jmp    0x140031d1c
   140031cea:	mov    rcx,QWORD PTR [rsp+0x58]
   140031cef:	call   QWORD PTR [rip+0x432b]        # 0x140036020
   140031cf5:	mov    BYTE PTR [rsp+0x93],0x1
   140031cfd:	lea    rcx,[rsp+0x68]
   140031d02:	call   0x140001260
   140031d07:	nop
   140031d08:	mov    rcx,QWORD PTR [rsp+0xc8]
   140031d10:	call   0x140001260
   140031d15:	mov    al,BYTE PTR [rsp+0x93]
   140031d1c:	mov    rcx,QWORD PTR [rsp+0xa0]
   140031d24:	xor    rcx,rsp
   140031d27:	call   0x1400144f0
   140031d2c:	add    rsp,0xb0
   140031d33:	pop    rbx
   140031d34:	ret    
   140031d35:	int3   
   140031d36:	int3   
   140031d37:	int3   
   140031d38:	int3   
   140031d39:	int3   
   140031d3a:	int3   
   140031d3b:	int3   
   140031d3c:	int3   
   140031d3d:	int3   
   140031d3e:	int3   
   140031d3f:	int3   
   140031d40:	mov    QWORD PTR [rsp+0x8],rcx
   140031d45:	sub    rsp,0x38
   140031d49:	mov    rcx,QWORD PTR [rsp+0x40]
   140031d4e:	call   0x140002750
   140031d53:	test   rax,rax
   140031d56:	jne    0x140031d62
   140031d58:	mov    DWORD PTR [rsp+0x20],0x1
   140031d60:	jmp    0x140031d6a
   140031d62:	mov    DWORD PTR [rsp+0x20],0x0
   140031d6a:	mov    al,BYTE PTR [rsp+0x20]
   140031d6e:	add    rsp,0x38
   140031d72:	ret    
   140031d73:	int3   
   140031d74:	int3   
   140031d75:	int3   
   140031d76:	int3   
   140031d77:	int3   
   140031d78:	int3   
   140031d79:	int3   
   140031d7a:	int3   
   140031d7b:	int3   
   140031d7c:	int3   
   140031d7d:	int3   
   140031d7e:	int3   
   140031d7f:	int3   
   140031d80:	mov    QWORD PTR [rsp+0x10],rdx
   140031d85:	mov    QWORD PTR [rsp+0x8],rcx
   140031d8a:	sub    rsp,0x48
   140031d8e:	mov    rcx,QWORD PTR [rsp+0x50]
   140031d93:	call   0x140002750
   140031d98:	cmp    rax,QWORD PTR [rsp+0x58]
   140031d9d:	ja     0x140031da4
   140031d9f:	call   0x140031de0
   140031da4:	lea    rdx,[rsp+0x20]
   140031da9:	mov    rcx,QWORD PTR [rsp+0x50]
   140031dae:	call   0x140002d30
   140031db3:	mov    r8,QWORD PTR [rsp+0x58]
   140031db8:	lea    rdx,[rsp+0x30]
   140031dbd:	mov    rcx,rax
   140031dc0:	call   0x140003350
   140031dc5:	mov    rcx,rax
   140031dc8:	call   0x140031f30
   140031dcd:	add    rsp,0x48
   140031dd1:	ret    
   140031dd2:	int3   
   140031dd3:	int3   
   140031dd4:	int3   
   140031dd5:	int3   
   140031dd6:	int3   
   140031dd7:	int3   
   140031dd8:	int3   
   140031dd9:	int3   
   140031dda:	int3   
   140031ddb:	int3   
   140031ddc:	int3   
   140031ddd:	int3   
   140031dde:	int3   
   140031ddf:	int3   
   140031de0:	sub    rsp,0x98
   140031de7:	mov    QWORD PTR [rsp+0x88],0xfffffffffffffffe
   140031df3:	lea    rdx,[rip+0xb84e]        # 0x14003d648
   140031dfa:	lea    rcx,[rsp+0x60]
   140031dff:	call   0x140002340
   140031e04:	nop
   140031e05:	lea    rdx,[rsp+0x60]
   140031e0a:	lea    rcx,[rsp+0x20]
   140031e0f:	call   0x140031e40
   140031e14:	lea    rdx,[rip+0x142a5]        # 0x1400460c0
   140031e1b:	lea    rcx,[rsp+0x20]
   140031e20:	call   0x1400158a0
   140031e25:	nop
   140031e26:	lea    rcx,[rsp+0x60]
   140031e2b:	call   0x140001260
   140031e30:	nop
   140031e31:	add    rsp,0x98
   140031e38:	ret    
   140031e39:	int3   
   140031e3a:	int3   
   140031e3b:	int3   
   140031e3c:	int3   
   140031e3d:	int3   
   140031e3e:	int3   
   140031e3f:	int3   
   140031e40:	mov    QWORD PTR [rsp+0x10],rdx
   140031e45:	mov    QWORD PTR [rsp+0x8],rcx
   140031e4a:	sub    rsp,0x28
   140031e4e:	mov    rdx,QWORD PTR [rsp+0x38]
   140031e53:	mov    rcx,QWORD PTR [rsp+0x30]
   140031e58:	call   0x1400010a0
   140031e5d:	mov    r11,QWORD PTR [rsp+0x30]
   140031e62:	lea    rax,[rip+0xb807]        # 0x14003d670
   140031e69:	mov    QWORD PTR [r11],rax
   140031e6c:	mov    rax,QWORD PTR [rsp+0x30]
   140031e71:	add    rsp,0x28
   140031e75:	ret    
   140031e76:	int3   
   140031e77:	int3   
   140031e78:	int3   
   140031e79:	int3   
   140031e7a:	int3   
   140031e7b:	int3   
   140031e7c:	int3   
   140031e7d:	int3   
   140031e7e:	int3   
   140031e7f:	int3   
   140031e80:	mov    QWORD PTR [rsp+0x8],rcx
   140031e85:	sub    rsp,0x28
   140031e89:	mov    rcx,QWORD PTR [rsp+0x30]
   140031e8e:	lea    rax,[rip+0xb7db]        # 0x14003d670
   140031e95:	mov    QWORD PTR [rcx],rax
   140031e98:	mov    rcx,QWORD PTR [rsp+0x30]
   140031e9d:	call   0x1400011a0
   140031ea2:	add    rsp,0x28
   140031ea6:	ret    
   140031ea7:	int3   
   140031ea8:	int3   
   140031ea9:	int3   
   140031eaa:	int3   
   140031eab:	int3   
   140031eac:	int3   
   140031ead:	int3   
   140031eae:	int3   
   140031eaf:	int3   
   140031eb0:	mov    DWORD PTR [rsp+0x10],edx
   140031eb4:	mov    QWORD PTR [rsp+0x8],rcx
   140031eb9:	sub    rsp,0x28
   140031ebd:	mov    rcx,QWORD PTR [rsp+0x30]
   140031ec2:	call   0x140031e80
   140031ec7:	mov    eax,DWORD PTR [rsp+0x38]
   140031ecb:	and    eax,0x1
   140031ece:	test   eax,eax
   140031ed0:	je     0x140031edc
   140031ed2:	mov    rcx,QWORD PTR [rsp+0x30]
   140031ed7:	call   0x1400062d4
   140031edc:	mov    rax,QWORD PTR [rsp+0x30]
   140031ee1:	add    rsp,0x28
   140031ee5:	ret    
   140031ee6:	int3   
   140031ee7:	int3   
   140031ee8:	int3   
   140031ee9:	int3   
   140031eea:	int3   
   140031eeb:	int3   
   140031eec:	int3   
   140031eed:	int3   
   140031eee:	int3   
   140031eef:	int3   
   140031ef0:	mov    QWORD PTR [rsp+0x10],rdx
   140031ef5:	mov    QWORD PTR [rsp+0x8],rcx
   140031efa:	sub    rsp,0x28
   140031efe:	mov    rdx,QWORD PTR [rsp+0x38]
   140031f03:	mov    rcx,QWORD PTR [rsp+0x30]
   140031f08:	call   0x1400011f0
   140031f0d:	mov    r11,QWORD PTR [rsp+0x30]
   140031f12:	lea    rax,[rip+0xb757]        # 0x14003d670
   140031f19:	mov    QWORD PTR [r11],rax
   140031f1c:	mov    rax,QWORD PTR [rsp+0x30]
   140031f21:	add    rsp,0x28
   140031f25:	ret    
   140031f26:	int3   
   140031f27:	int3   
   140031f28:	int3   
   140031f29:	int3   
   140031f2a:	int3   
   140031f2b:	int3   
   140031f2c:	int3   
   140031f2d:	int3   
   140031f2e:	int3   
   140031f2f:	int3   
   140031f30:	mov    QWORD PTR [rsp+0x8],rcx
   140031f35:	sub    rsp,0x28
   140031f39:	mov    rcx,QWORD PTR [rsp+0x30]
   140031f3e:	call   0x140031f50
   140031f43:	add    rsp,0x28
   140031f47:	ret    
   140031f48:	int3   
   140031f49:	int3   
   140031f4a:	int3   
   140031f4b:	int3   
   140031f4c:	int3   
   140031f4d:	int3   
   140031f4e:	int3   
   140031f4f:	int3   
   140031f50:	mov    QWORD PTR [rsp+0x8],rcx
   140031f55:	sub    rsp,0x28
   140031f59:	mov    rcx,QWORD PTR [rsp+0x30]
   140031f5e:	call   0x140001030
   140031f63:	movzx  eax,al
   140031f66:	test   eax,eax
   140031f68:	jne    0x140031f6f
   140031f6a:	call   0x140014a30
   140031f6f:	xor    eax,eax
   140031f71:	test   eax,eax
   140031f73:	jne    0x140031f6f
   140031f75:	mov    rcx,QWORD PTR [rsp+0x30]
   140031f7a:	call   0x140001020
   140031f7f:	mov    rcx,QWORD PTR [rsp+0x30]
   140031f84:	mov    rax,QWORD PTR [rax+0x20]
   140031f88:	cmp    QWORD PTR [rcx+0x8],rax
   140031f8c:	jb     0x140031f93
   140031f8e:	call   0x140014a30
   140031f93:	xor    eax,eax
   140031f95:	test   eax,eax
   140031f97:	jne    0x140031f93
   140031f99:	mov    rax,QWORD PTR [rsp+0x30]
   140031f9e:	mov    rax,QWORD PTR [rax+0x8]
   140031fa2:	add    rsp,0x28
   140031fa6:	ret    
   140031fa7:	int3   
   140031fa8:	jmp    QWORD PTR [rip+0x4332]        # 0x1400362e0
   140031fae:	jmp    QWORD PTR [rip+0x4324]        # 0x1400362d8
   140031fb4:	jmp    QWORD PTR [rip+0x42f6]        # 0x1400362b0
   140031fba:	jmp    QWORD PTR [rip+0x41a0]        # 0x140036160
   140031fc0:	jmp    QWORD PTR [rip+0x4842]        # 0x140036808
   140031fc6:	jmp    QWORD PTR [rip+0x482c]        # 0x1400367f8
   140031fcc:	jmp    QWORD PTR [rip+0x482e]        # 0x140036800
   140031fd2:	int3   
   140031fd3:	int3   
   140031fd4:	sub    rsp,0x98
   140031fdb:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   140031fe4:	lea    rdx,[rip+0xb70d]        # 0x14003d6f8
   140031feb:	lea    rcx,[rsp+0x28]
   140031ff0:	call   0x140002340
   140031ff5:	nop
   140031ff6:	lea    rcx,[rsp+0x50]
   140031ffb:	call   0x14001460c
   140032000:	nop
   140032001:	lea    rax,[rip+0xb680]        # 0x14003d688
   140032008:	mov    QWORD PTR [rsp+0x50],rax
   14003200d:	lea    rdx,[rsp+0x28]
   140032012:	lea    rcx,[rsp+0x68]
   140032017:	call   0x140002390
   14003201c:	nop
   14003201d:	lea    rax,[rip+0xb67c]        # 0x14003d6a0
   140032024:	mov    QWORD PTR [rsp+0x50],rax
   140032029:	lea    rdx,[rip+0x14190]        # 0x1400461c0
   140032030:	lea    rcx,[rsp+0x50]
   140032035:	call   0x1400158a0
   14003203a:	int3   
   14003203b:	int3   
   14003203c:	sub    rsp,0x98
   140032043:	mov    QWORD PTR [rsp+0x20],0xfffffffffffffffe
   14003204c:	mov    QWORD PTR [rsp+0x48],0xf
   140032055:	and    QWORD PTR [rsp+0x40],0x0
   14003205b:	mov    BYTE PTR [rsp+0x30],0x0
   140032060:	lea    rcx,[rip+0xb6c9]        # 0x14003d730
   140032067:	call   0x140015c00
   14003206c:	mov    r8,rax
   14003206f:	lea    rdx,[rip+0xb6ba]        # 0x14003d730
   140032076:	lea    rcx,[rsp+0x28]
   14003207b:	call   0x140002a30
   140032080:	nop
   140032081:	lea    rcx,[rsp+0x50]
   140032086:	call   0x14001460c
   14003208b:	nop
   14003208c:	lea    rax,[rip+0xb5f5]        # 0x14003d688
   140032093:	mov    QWORD PTR [rsp+0x50],rax
   140032098:	lea    rdx,[rsp+0x28]
   14003209d:	lea    rcx,[rsp+0x68]
   1400320a2:	call   0x140002390
   1400320a7:	nop
   1400320a8:	lea    rax,[rip+0xb5c1]        # 0x14003d670
   1400320af:	mov    QWORD PTR [rsp+0x50],rax
   1400320b4:	lea    rdx,[rip+0x14005]        # 0x1400460c0
   1400320bb:	lea    rcx,[rsp+0x50]
   1400320c0:	call   0x1400158a0
   1400320c5:	int3   
   1400320c6:	int3   
   1400320c7:	int3   
   1400320c8:	mov    rcx,QWORD PTR [rcx]
   1400320cb:	jmp    0x140032684
   1400320d0:	mov    rcx,QWORD PTR [rcx]
   1400320d3:	jmp    0x14003268c
   1400320d8:	mov    QWORD PTR [rsp+0x8],rbx
   1400320dd:	push   rbp
   1400320de:	push   rsi
   1400320df:	push   rdi
   1400320e0:	sub    rsp,0x50
   1400320e4:	mov    rdi,rdx
   1400320e7:	movsxd rbx,ecx
   1400320ea:	test   rdx,rdx
   1400320ed:	jne    0x140032100
   1400320ef:	call   0x140022240
   1400320f4:	mov    esi,DWORD PTR [rax+0x8]
   1400320f7:	call   0x140022208
   1400320fc:	mov    ebp,eax
   1400320fe:	jmp    0x140032105
   140032100:	mov    esi,DWORD PTR [rdx]
   140032102:	mov    ebp,DWORD PTR [rdx+0x4]
   140032105:	test   esi,esi
   140032107:	jne    0x14003211b
   140032109:	lea    eax,[rbx-0x41]
   14003210c:	cmp    eax,0x19
   14003210f:	ja     0x140032114
   140032111:	add    ebx,0x20
   140032114:	mov    eax,ebx
   140032116:	jmp    0x1400321fa
   14003211b:	cmp    ebx,0x100
   140032121:	jae    0x14003213f
   140032123:	test   rdi,rdi
   140032126:	jne    0x140032135
   140032128:	mov    ecx,ebx
   14003212a:	call   0x1400233e8
   14003212f:	test   eax,eax
   140032131:	jne    0x140032144
   140032133:	jmp    0x140032114
   140032135:	mov    rax,QWORD PTR [rdi+0x8]
   140032139:	test   BYTE PTR [rax+rbx*2],0x1
   14003213d:	je     0x140032114
   14003213f:	test   rdi,rdi
   140032142:	jne    0x14003215d
   140032144:	call   0x140020e40
   140032149:	mov    ecx,ebx
   14003214b:	sar    ecx,0x8
   14003214e:	movzx  ecx,cl
   140032151:	movzx  edx,WORD PTR [rax+rcx*2]
   140032155:	and    edx,0x8000
   14003215b:	jmp    0x140032174
   14003215d:	mov    eax,ebx
   14003215f:	sar    rax,0x8
   140032163:	movzx  ecx,al
   140032166:	mov    rax,QWORD PTR [rdi+0x8]
   14003216a:	movsx  edx,WORD PTR [rax+rcx*2]
   14003216e:	shr    edx,0xf
   140032171:	and    edx,0x1
   140032174:	test   edx,edx
   140032176:	je     0x140032191
   140032178:	mov    eax,ebx
   14003217a:	mov    BYTE PTR [rsp+0x79],bl
   14003217e:	mov    BYTE PTR [rsp+0x7a],0x0
   140032183:	sar    eax,0x8
   140032186:	mov    BYTE PTR [rsp+0x78],al
   14003218a:	mov    eax,0x2
   14003218f:	jmp    0x14003219f
   140032191:	mov    BYTE PTR [rsp+0x78],bl
   140032195:	mov    BYTE PTR [rsp+0x79],0x0
   14003219a:	mov    eax,0x1
   14003219f:	mov    DWORD PTR [rsp+0x40],0x1
   1400321a7:	mov    DWORD PTR [rsp+0x38],ebp
   1400321ab:	lea    rcx,[rsp+0x80]
   1400321b3:	mov    DWORD PTR [rsp+0x30],0x3
   1400321bb:	mov    QWORD PTR [rsp+0x28],rcx
   1400321c0:	lea    r9,[rsp+0x78]
   1400321c5:	xor    ecx,ecx
   1400321c7:	mov    r8d,0x100
   1400321cd:	mov    edx,esi
   1400321cf:	mov    DWORD PTR [rsp+0x20],eax
   1400321d3:	call   0x1400197f4
   1400321d8:	test   eax,eax
   1400321da:	je     0x140032114
   1400321e0:	cmp    eax,0x1
   1400321e3:	movzx  eax,BYTE PTR [rsp+0x80]
   1400321eb:	je     0x1400321fa
   1400321ed:	movzx  ecx,BYTE PTR [rsp+0x81]
   1400321f5:	shl    eax,0x8
   1400321f8:	or     eax,ecx
   1400321fa:	mov    rbx,QWORD PTR [rsp+0x70]
   1400321ff:	add    rsp,0x50
   140032203:	pop    rdi
   140032204:	pop    rsi
   140032205:	pop    rbp
   140032206:	ret    
   140032207:	int3   
   140032208:	rex push rbx
   14003220a:	sub    rsp,0x20
   14003220e:	mov    rbx,rcx
   140032211:	call   0x140022240
   140032216:	mov    edx,DWORD PTR [rax+0x4]
   140032219:	mov    DWORD PTR [rbx],edx
   14003221b:	call   0x140022208
   140032220:	mov    edx,0x2
   140032225:	mov    ecx,0x100
   14003222a:	mov    DWORD PTR [rbx+0x4],eax
   14003222d:	call   0x14001c490
   140032232:	mov    QWORD PTR [rbx+0x8],rax
   140032236:	test   rax,rax
   140032239:	je     0x14003225b
   14003223b:	call   0x140020e40
   140032240:	mov    rcx,QWORD PTR [rbx+0x8]
   140032244:	mov    r8d,0x200
   14003224a:	mov    rdx,rax
   14003224d:	call   0x1400160c0
   140032252:	mov    DWORD PTR [rbx+0x10],0x1
   140032259:	jmp    0x140032268
   14003225b:	call   0x140020e40
   140032260:	and    DWORD PTR [rbx+0x10],0x0
   140032264:	mov    QWORD PTR [rbx+0x8],rax
   140032268:	mov    rax,rbx
   14003226b:	add    rsp,0x20
   14003226f:	pop    rbx
   140032270:	ret    
   140032271:	int3   
   140032272:	int3   
   140032273:	int3   
   140032274:	mov    QWORD PTR [rsp+0x8],rbx
   140032279:	mov    QWORD PTR [rsp+0x10],rsi
   14003227e:	push   rdi
   14003227f:	sub    rsp,0x20
   140032283:	mov    rbx,rcx
   140032286:	lock add DWORD PTR [rip+0x1876a],0x1        # 0x14004a9f8
   14003228e:	jne    0x1400322ae
   140032290:	lea    rdi,[rip+0x1d119]        # 0x14004f3b0
   140032297:	mov    esi,0x4
   14003229c:	mov    rcx,rdi
   14003229f:	call   0x140032674
   1400322a4:	add    rdi,0x28
   1400322a8:	sub    rsi,0x1
   1400322ac:	jne    0x14003229c
   1400322ae:	mov    rsi,QWORD PTR [rsp+0x38]
   1400322b3:	mov    rax,rbx
   1400322b6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400322bb:	add    rsp,0x20
   1400322bf:	pop    rdi
   1400322c0:	ret    
   1400322c1:	int3   
   1400322c2:	int3   
   1400322c3:	int3   
   1400322c4:	mov    QWORD PTR [rsp+0x8],rbx
   1400322c9:	push   rdi
   1400322ca:	sub    rsp,0x20
   1400322ce:	lock add DWORD PTR [rip+0x18722],0xffffffff        # 0x14004a9f8
   1400322d6:	jns    0x1400322f6
   1400322d8:	lea    rbx,[rip+0x1d0d1]        # 0x14004f3b0
   1400322df:	mov    edi,0x4
   1400322e4:	mov    rcx,rbx
   1400322e7:	call   0x14003267c
   1400322ec:	add    rbx,0x28
   1400322f0:	sub    rdi,0x1
   1400322f4:	jne    0x1400322e4
   1400322f6:	mov    rbx,QWORD PTR [rsp+0x30]
   1400322fb:	add    rsp,0x20
   1400322ff:	pop    rdi
   140032300:	ret    
   140032301:	int3   
   140032302:	int3   
   140032303:	int3   
   140032304:	rex push rbx
   140032306:	sub    rsp,0x20
   14003230a:	cmp    edx,0x4
   14003230d:	mov    rbx,rcx
   140032310:	mov    DWORD PTR [rcx],edx
   140032312:	jge    0x14003232b
   140032314:	movsxd rax,edx
   140032317:	lea    rdx,[rax+rax*4]
   14003231b:	lea    rax,[rip+0x1d08e]        # 0x14004f3b0
   140032322:	lea    rcx,[rax+rdx*8]
   140032326:	call   0x140032684
   14003232b:	mov    rax,rbx
   14003232e:	add    rsp,0x20
   140032332:	pop    rbx
   140032333:	ret    
   140032334:	sub    rsp,0x28
   140032338:	cmp    DWORD PTR [rcx],0x4
   14003233b:	jge    0x140032354
   14003233d:	movsxd rax,DWORD PTR [rcx]
   140032340:	lea    rcx,[rax+rax*4]
   140032344:	lea    rax,[rip+0x1d065]        # 0x14004f3b0
   14003234b:	lea    rcx,[rax+rcx*8]
   14003234f:	call   0x14003268c
   140032354:	add    rsp,0x28
   140032358:	ret    
   140032359:	int3   
   14003235a:	int3   
   14003235b:	int3   
   14003235c:	mov    QWORD PTR [rsp+0x10],rbx
   140032361:	push   rdi
   140032362:	sub    rsp,0x20
   140032366:	mov    rdi,QWORD PTR [rcx+0x8]
   14003236a:	lea    rcx,[rsp+0x30]
   14003236f:	xor    edx,edx
   140032371:	call   0x140032304
   140032376:	mov    rax,QWORD PTR [rdi+0x8]
   14003237a:	test   rax,rax
   14003237d:	je     0x14003238c
   14003237f:	cmp    rax,0xffffffffffffffff
   140032383:	jae    0x14003238c
   140032385:	dec    rax
   140032388:	mov    QWORD PTR [rdi+0x8],rax
   14003238c:	xor    ebx,ebx
   14003238e:	lea    rcx,[rsp+0x30]
   140032393:	cmp    QWORD PTR [rdi+0x8],rbx
   140032397:	cmove  rbx,rdi
   14003239b:	call   0x140032334
   1400323a0:	test   rbx,rbx
   1400323a3:	je     0x1400323b2
   1400323a5:	mov    rax,QWORD PTR [rbx]
   1400323a8:	mov    edx,0x1
   1400323ad:	mov    rcx,rbx
   1400323b0:	call   QWORD PTR [rax]
   1400323b2:	mov    rbx,QWORD PTR [rsp+0x38]
   1400323b7:	add    rsp,0x20
   1400323bb:	pop    rdi
   1400323bc:	ret    
   1400323bd:	int3   
   1400323be:	int3   
   1400323bf:	int3   
   1400323c0:	mov    rax,QWORD PTR [rip+0x1d099]        # 0x14004f460
   1400323c7:	ret    
   1400323c8:	rex push rbx
   1400323ca:	sub    rsp,0x20
   1400323ce:	lea    rcx,[rsp+0x30]
   1400323d3:	xor    edx,edx
   1400323d5:	call   0x140032304
   1400323da:	jmp    0x1400323f6
   1400323dc:	mov    rax,QWORD PTR [rbx]
   1400323df:	mov    rcx,rbx
   1400323e2:	mov    QWORD PTR [rip+0x1d06f],rax        # 0x14004f458
   1400323e9:	call   0x14003235c
   1400323ee:	mov    rcx,rbx
   1400323f1:	call   0x1400062d4
   1400323f6:	mov    rbx,QWORD PTR [rip+0x1d05b]        # 0x14004f458
   1400323fd:	test   rbx,rbx
   140032400:	jne    0x1400323dc
   140032402:	lea    rcx,[rsp+0x30]
   140032407:	call   0x140032334
   14003240c:	add    rsp,0x20
   140032410:	pop    rbx
   140032411:	ret    
   140032412:	int3   
   140032413:	int3   
   140032414:	rex push rbx
   140032416:	sub    rsp,0x20
   14003241a:	cmp    QWORD PTR [rip+0x1d036],0x0        # 0x14004f458
   140032422:	mov    rbx,rcx
   140032425:	jne    0x14003243c
   140032427:	lea    rcx,[rip+0xffffffffffffff9a]        # 0x1400323c8
   14003242e:	call   0x140015acc
   140032433:	test   eax,eax
   140032435:	je     0x14003243c
   140032437:	call   0x14001c198
   14003243c:	mov    ecx,0x10
   140032441:	call   0x140006290
   140032446:	test   rax,rax
   140032449:	je     0x14003245b
   14003244b:	mov    rcx,QWORD PTR [rip+0x1d006]        # 0x14004f458
   140032452:	mov    QWORD PTR [rax+0x8],rbx
   140032456:	mov    QWORD PTR [rax],rcx
   140032459:	jmp    0x14003245d
   14003245b:	xor    eax,eax
   14003245d:	mov    QWORD PTR [rip+0x1cff4],rax        # 0x14004f458
   140032464:	add    rsp,0x20
   140032468:	pop    rbx
   140032469:	ret    
   14003246a:	int3   
   14003246b:	int3   
   14003246c:	sub    rsp,0x28
   140032470:	cmp    QWORD PTR [rcx+0x70],0x0
   140032475:	jbe    0x14003248f
   140032477:	cmp    QWORD PTR [rcx+0x78],0x10
   14003247c:	jb     0x140032484
   14003247e:	mov    rdx,QWORD PTR [rcx+0x60]
   140032482:	jmp    0x140032488
   140032484:	lea    rdx,[rcx+0x60]
   140032488:	xor    ecx,ecx
   14003248a:	call   0x140019094
   14003248f:	add    rsp,0x28
   140032493:	ret    
   140032494:	mov    QWORD PTR [rsp+0x8],rbx
   140032499:	mov    QWORD PTR [rsp+0x10],rsi
   14003249e:	push   rdi
   14003249f:	sub    rsp,0x20
   1400324a3:	cmp    QWORD PTR [rdx+0x20],0x10
   1400324a8:	mov    rsi,rcx
   1400324ab:	jb     0x1400324b3
   1400324ad:	mov    rdi,QWORD PTR [rdx+0x8]
   1400324b1:	jmp    0x1400324b7
   1400324b3:	lea    rdi,[rdx+0x8]
   1400324b7:	xor    edx,edx
   1400324b9:	xor    ecx,ecx
   1400324bb:	call   0x140019094
   1400324c0:	mov    rbx,rax
   1400324c3:	lea    rax,[rip+0xb2d5]        # 0x14003d79f
   1400324ca:	test   rbx,rbx
   1400324cd:	cmove  rbx,rax
   1400324d1:	mov    rcx,rbx
   1400324d4:	call   0x140015c00
   1400324d9:	lea    rcx,[rsi+0x58]
   1400324dd:	mov    rdx,rbx
   1400324e0:	mov    r8,rax
   1400324e3:	call   0x140002a30
   1400324e8:	test   rdi,rdi
   1400324eb:	je     0x1400324fa
   1400324ed:	mov    rdx,rdi
   1400324f0:	xor    ecx,ecx
   1400324f2:	call   0x140019094
   1400324f7:	mov    rdi,rax
   1400324fa:	lea    rax,[rip+0x7f57]        # 0x14003a458
   140032501:	test   rdi,rdi
   140032504:	cmove  rdi,rax
   140032508:	mov    rcx,rdi
   14003250b:	call   0x140015c00
   140032510:	lea    rcx,[rsi+0x80]
   140032517:	mov    rdx,rdi
   14003251a:	mov    r8,rax
   14003251d:	mov    rbx,QWORD PTR [rsp+0x30]
   140032522:	mov    rsi,QWORD PTR [rsp+0x38]
   140032527:	add    rsp,0x20
   14003252b:	pop    rdi
   14003252c:	jmp    0x140002a30
   140032531:	int3   
   140032532:	int3   
   140032533:	int3   
   140032534:	mov    QWORD PTR [rsp+0x8],rbx
   140032539:	mov    QWORD PTR [rsp+0x20],rbp
   14003253e:	push   rsi
   14003253f:	push   rdi
   140032540:	push   r12
   140032542:	sub    rsp,0x50
   140032546:	mov    rdi,rdx
   140032549:	movsxd rbx,ecx
   14003254c:	test   rdx,rdx
   14003254f:	jne    0x140032563
   140032551:	call   0x140022240
   140032556:	mov    esi,DWORD PTR [rax+0x8]
   140032559:	call   0x140022208
   14003255e:	mov    r12d,eax
   140032561:	jmp    0x140032569
   140032563:	mov    esi,DWORD PTR [rdx]
   140032565:	mov    r12d,DWORD PTR [rdx+0x4]
   140032569:	test   esi,esi
   14003256b:	jne    0x14003257f
   14003256d:	lea    eax,[rbx-0x61]
   140032570:	cmp    eax,0x19
   140032573:	ja     0x140032578
   140032575:	sub    ebx,0x20
   140032578:	mov    eax,ebx
   14003257a:	jmp    0x14003265f
   14003257f:	mov    ebp,0x2
   140032584:	cmp    ebx,0x100
   14003258a:	jae    0x1400325a8
   14003258c:	test   rdi,rdi
   14003258f:	jne    0x14003259e
   140032591:	mov    ecx,ebx
   140032593:	call   0x140023468
   140032598:	test   eax,eax
   14003259a:	jne    0x1400325ad
   14003259c:	jmp    0x140032578
   14003259e:	mov    rax,QWORD PTR [rdi+0x8]
   1400325a2:	test   BYTE PTR [rax+rbx*2],bpl
   1400325a6:	je     0x140032578
   1400325a8:	test   rdi,rdi
   1400325ab:	jne    0x1400325c6
   1400325ad:	call   0x140020e40
   1400325b2:	mov    ecx,ebx
   1400325b4:	sar    ecx,0x8
   1400325b7:	movzx  ecx,cl
   1400325ba:	movzx  edx,WORD PTR [rax+rcx*2]
   1400325be:	and    edx,0x8000
   1400325c4:	jmp    0x1400325dd
   1400325c6:	mov    eax,ebx
   1400325c8:	sar    rax,0x8
   1400325cc:	movzx  ecx,al
   1400325cf:	mov    rax,QWORD PTR [rdi+0x8]
   1400325d3:	movsx  edx,WORD PTR [rax+rcx*2]
   1400325d7:	shr    edx,0xf
   1400325da:	and    edx,0x1
   1400325dd:	test   edx,edx
   1400325df:	je     0x1400325f5
   1400325e1:	mov    eax,ebx
   1400325e3:	mov    BYTE PTR [rsp+0x79],bl
   1400325e7:	mov    BYTE PTR [rsp+0x7a],0x0
   1400325ec:	sar    eax,0x8
   1400325ef:	mov    BYTE PTR [rsp+0x78],al
   1400325f3:	jmp    0x140032603
   1400325f5:	mov    BYTE PTR [rsp+0x78],bl
   1400325f9:	mov    BYTE PTR [rsp+0x79],0x0
   1400325fe:	mov    ebp,0x1
   140032603:	mov    DWORD PTR [rsp+0x40],0x1
   14003260b:	mov    DWORD PTR [rsp+0x38],r12d
   140032610:	lea    rax,[rsp+0x80]
   140032618:	mov    DWORD PTR [rsp+0x30],0x3
   140032620:	mov    QWORD PTR [rsp+0x28],rax
   140032625:	lea    r9,[rsp+0x78]
   14003262a:	mov    r8d,0x200
   140032630:	mov    edx,esi
   140032632:	xor    ecx,ecx
   140032634:	mov    DWORD PTR [rsp+0x20],ebp
   140032638:	call   0x1400197f4
   14003263d:	test   eax,eax
   14003263f:	je     0x140032578
   140032645:	cmp    eax,0x1
   140032648:	movzx  eax,BYTE PTR [rsp+0x80]
   140032650:	je     0x14003265f
   140032652:	movzx  ecx,BYTE PTR [rsp+0x81]
   14003265a:	shl    eax,0x8
   14003265d:	or     eax,ecx
   14003265f:	lea    r11,[rsp+0x50]
   140032664:	mov    rbx,QWORD PTR [r11+0x20]
   140032668:	mov    rbp,QWORD PTR [r11+0x38]
   14003266c:	mov    rsp,r11
   14003266f:	pop    r12
   140032671:	pop    rdi
   140032672:	pop    rsi
   140032673:	ret    
   140032674:	rex.W jmp QWORD PTR [rip+0x3dc5]        # 0x140036440
   14003267b:	int3   
   14003267c:	rex.W jmp QWORD PTR [rip+0x3d75]        # 0x1400363f8
   140032683:	int3   
   140032684:	rex.W jmp QWORD PTR [rip+0x3dbd]        # 0x140036448
   14003268b:	int3   
   14003268c:	rex.W jmp QWORD PTR [rip+0x3dc5]        # 0x140036458
   140032693:	int3   
   140032694:	sub    rsp,0x38
   140032698:	call   QWORD PTR [rip+0x3da2]        # 0x140036440
   14003269e:	xor    r11d,r11d
   1400326a1:	mov    DWORD PTR [rsp+0x20],r11d
   1400326a6:	jmp    0x1400326b3
   1400326a8:	mov    r11d,0x8007000e
   1400326ae:	mov    DWORD PTR [rsp+0x20],r11d
   1400326b3:	mov    eax,r11d
   1400326b6:	add    rsp,0x38
   1400326ba:	ret    
   1400326bb:	int3   
   1400326bc:	rex push rbx
   1400326be:	sub    rsp,0x20
   1400326c2:	mov    rbx,rcx
   1400326c5:	add    rcx,0x28
   1400326c9:	call   QWORD PTR [rip+0x3d29]        # 0x1400363f8
   1400326cf:	mov    rcx,QWORD PTR [rbx+0x50]
   1400326d3:	test   rcx,rcx
   1400326d6:	je     0x1400326e2
   1400326d8:	call   0x140014f10
   1400326dd:	and    QWORD PTR [rbx+0x50],0x0
   1400326e2:	and    DWORD PTR [rbx+0x58],0x0
   1400326e6:	and    DWORD PTR [rbx+0x5c],0x0
   1400326ea:	add    rsp,0x20
   1400326ee:	pop    rbx
   1400326ef:	ret    
   1400326f0:	mov    QWORD PTR [rsp+0x8],rbx
   1400326f5:	push   rdi
   1400326f6:	sub    rsp,0x20
   1400326fa:	xor    edx,edx
   1400326fc:	mov    rdi,rcx
   1400326ff:	lea    r8d,[rdx+0x28]
   140032703:	add    rcx,r8
   140032706:	call   0x140015b00
   14003270b:	and    QWORD PTR [rdi+0x50],0x0
   140032710:	and    DWORD PTR [rdi+0x58],0x0
   140032714:	and    DWORD PTR [rdi+0x5c],0x0
   140032718:	lea    rax,[rip+0xfffffffffffcd8e1]        # 0x140000000
   14003271f:	lea    rcx,[rdi+0x28]
   140032723:	mov    QWORD PTR [rdi+0x10],rax
   140032727:	mov    QWORD PTR [rdi+0x8],rax
   14003272b:	lea    rax,[rip+0xb026]        # 0x14003d758
   140032732:	mov    DWORD PTR [rdi],0x60
   140032738:	mov    DWORD PTR [rdi+0x18],0x900
   14003273f:	mov    QWORD PTR [rdi+0x20],rax
   140032743:	call   0x140032694
   140032748:	movzx  ecx,BYTE PTR [rip+0x18495]        # 0x14004abe4
   14003274f:	mov    rbx,QWORD PTR [rsp+0x30]
   140032754:	test   eax,eax
   140032756:	mov    edx,0x1
   14003275b:	mov    rax,rdi
   14003275e:	cmovs  ecx,edx
   140032761:	mov    BYTE PTR [rip+0x1847d],cl        # 0x14004abe4
   140032767:	add    rsp,0x20
   14003276b:	pop    rdi
   14003276c:	ret    
   14003276d:	int3   
   14003276e:	jmp    QWORD PTR [rip+0x3d8c]        # 0x140036500
   140032774:	jmp    QWORD PTR [rip+0x3d7e]        # 0x1400364f8
   14003277a:	int3   
   14003277b:	int3   
   14003277c:	mov    rax,rsp
   14003277f:	mov    QWORD PTR [rax+0x10],rdx
   140032783:	mov    QWORD PTR [rax+0x8],rcx
   140032787:	mov    QWORD PTR [rax+0x18],r8
   14003278b:	mov    QWORD PTR [rax+0x20],r9
   14003278f:	push   rbx
   140032790:	push   rsi
   140032791:	push   rdi
   140032792:	push   r12
   140032794:	sub    rsp,0x38
   140032798:	mov    rdi,rcx
   14003279b:	xor    ebx,ebx
   14003279d:	mov    esi,ebx
   14003279f:	mov    eax,ebx
   1400327a1:	cmp    rcx,rbx
   1400327a4:	setne  al
   1400327a7:	cmp    eax,ebx
   1400327a9:	jne    0x1400327d2
   1400327ab:	call   0x140015f48
   1400327b0:	mov    DWORD PTR [rax],0x16
   1400327b6:	mov    QWORD PTR [rsp+0x20],rbx
   1400327bb:	xor    r9d,r9d
   1400327be:	xor    r8d,r8d
   1400327c1:	xor    edx,edx
   1400327c3:	xor    ecx,ecx
   1400327c5:	call   0x1400149a8
   1400327ca:	or     eax,0xffffffff
   1400327cd:	jmp    0x1400328e7
   1400327d2:	mov    eax,ebx
   1400327d4:	cmp    rdx,rbx
   1400327d7:	setne  al
   1400327da:	cmp    eax,ebx
   1400327dc:	jne    0x140032805
   1400327de:	call   0x140015f48
   1400327e3:	mov    DWORD PTR [rax],0x16
   1400327e9:	mov    QWORD PTR [rsp+0x20],rbx
   1400327ee:	xor    r9d,r9d
   1400327f1:	xor    r8d,r8d
   1400327f4:	xor    edx,edx
   1400327f6:	xor    ecx,ecx
   1400327f8:	call   0x1400149a8
   1400327fd:	or     eax,0xffffffff
   140032800:	jmp    0x1400328e7
   140032805:	lea    r12,[rsp+0x70]
   14003280a:	call   0x140024674
   14003280f:	nop
   140032810:	test   BYTE PTR [rdi+0x18],0x40
   140032814:	jne    0x1400328af
   14003281a:	mov    rcx,rdi
   14003281d:	call   0x140024784
   140032822:	cmp    eax,0xffffffff
   140032825:	je     0x140032851
   140032827:	cmp    eax,0xfffffffe
   14003282a:	je     0x140032851
   14003282c:	movsxd rdx,eax
   14003282f:	mov    rcx,rdx
   140032832:	sar    rcx,0x5
   140032836:	lea    r8,[rip+0x1de03]        # 0x140050640
   14003283d:	and    edx,0x1f
   140032840:	imul   rdx,rdx,0x58
   140032844:	add    rdx,QWORD PTR [r8+rcx*8]
   140032848:	lea    rcx,[rip+0x16f81]        # 0x1400497d0
   14003284f:	jmp    0x140032862
   140032851:	lea    rcx,[rip+0x16f78]        # 0x1400497d0
   140032858:	mov    rdx,rcx
   14003285b:	lea    r8,[rip+0x1ddde]        # 0x140050640
   140032862:	test   BYTE PTR [rdx+0x38],0x7f
   140032866:	jne    0x14003288d
   140032868:	cmp    eax,0xffffffff
   14003286b:	je     0x140032887
   14003286d:	cmp    eax,0xfffffffe
   140032870:	je     0x140032887
   140032872:	movsxd rcx,eax
   140032875:	mov    rax,rcx
   140032878:	sar    rax,0x5
   14003287c:	and    ecx,0x1f
   14003287f:	imul   rcx,rcx,0x58
   140032883:	add    rcx,QWORD PTR [r8+rax*8]
   140032887:	test   BYTE PTR [rcx+0x38],0x80
   14003288b:	je     0x1400328af
   14003288d:	call   0x140015f48
   140032892:	mov    DWORD PTR [rax],0x16
   140032898:	mov    QWORD PTR [rsp+0x20],rbx
   14003289d:	xor    r9d,r9d
   1400328a0:	xor    r8d,r8d
   1400328a3:	xor    edx,edx
   1400328a5:	xor    ecx,ecx
   1400328a7:	call   0x1400149a8
   1400328ac:	or     esi,0xffffffff
   1400328af:	cmp    esi,ebx
   1400328b1:	jne    0x1400328dd
   1400328b3:	mov    rcx,rdi
   1400328b6:	call   0x140025b28
   1400328bb:	mov    ebx,eax
   1400328bd:	mov    r9,r12
   1400328c0:	xor    r8d,r8d
   1400328c3:	mov    rdx,QWORD PTR [rsp+0x68]
   1400328c8:	mov    rcx,rdi
   1400328cb:	call   0x14001cad0
   1400328d0:	mov    esi,eax
   1400328d2:	mov    rdx,rdi
   1400328d5:	mov    ecx,ebx
   1400328d7:	call   0x140025bfc
   1400328dc:	nop
   1400328dd:	mov    rcx,rdi
   1400328e0:	call   0x140024704
   1400328e5:	mov    eax,esi
   1400328e7:	add    rsp,0x38
   1400328eb:	pop    r12
   1400328ed:	pop    rdi
   1400328ee:	pop    rsi
   1400328ef:	pop    rbx
   1400328f0:	ret    
   1400328f1:	int3   
   1400328f2:	int3   
   1400328f3:	int3   
   1400328f4:	mov    QWORD PTR [rsp+0x8],rbx
   1400328f9:	mov    QWORD PTR [rsp+0x10],rbp
   1400328fe:	mov    QWORD PTR [rsp+0x18],rsi
   140032903:	push   rdi
   140032904:	sub    rsp,0x60
   140032908:	mov    rbp,rcx
   14003290b:	mov    rcx,rdx
   14003290e:	mov    rsi,r9
   140032911:	mov    rbx,r8
   140032914:	mov    rdi,rdx
   140032917:	call   0x140015c00
   14003291c:	test   rdi,rdi
   14003291f:	jne    0x140032946
   140032921:	call   0x140015f48
   140032926:	and    QWORD PTR [rsp+0x20],0x0
   14003292c:	xor    r9d,r9d
   14003292f:	xor    r8d,r8d
   140032932:	xor    edx,edx
   140032934:	xor    ecx,ecx
   140032936:	mov    DWORD PTR [rax],0x16
   14003293c:	call   0x1400149a8
   140032941:	or     eax,0xffffffff
   140032944:	jmp    0x140032981
   140032946:	test   rbx,rbx
   140032949:	je     0x140032921
   14003294b:	mov    r9,QWORD PTR [rsp+0x90]
   140032953:	mov    ecx,0x7fffffff
   140032958:	mov    r8,rsi
   14003295b:	cmp    rax,rcx
   14003295e:	mov    rdx,rbx
   140032961:	mov    DWORD PTR [rsp+0x48],0x49
   140032969:	cmova  eax,ecx
   14003296c:	lea    rcx,[rsp+0x30]
   140032971:	mov    QWORD PTR [rsp+0x40],rdi
   140032976:	mov    QWORD PTR [rsp+0x30],rdi
   14003297b:	mov    DWORD PTR [rsp+0x38],eax
   14003297f:	call   rbp
   140032981:	lea    r11,[rsp+0x60]
   140032986:	mov    rbx,QWORD PTR [r11+0x10]
   14003298a:	mov    rbp,QWORD PTR [r11+0x18]
   14003298e:	mov    rsi,QWORD PTR [r11+0x20]
   140032992:	mov    rsp,r11
   140032995:	pop    rdi
   140032996:	ret    
   140032997:	int3   
   140032998:	mov    r11,rsp
   14003299b:	mov    QWORD PTR [r11+0x10],rdx
   14003299f:	mov    QWORD PTR [r11+0x18],r8
   1400329a3:	mov    QWORD PTR [r11+0x20],r9
   1400329a7:	sub    rsp,0x38
   1400329ab:	mov    r8,rdx
   1400329ae:	lea    rax,[r11+0x18]
   1400329b2:	mov    rdx,rcx
   1400329b5:	lea    rcx,[rip+0xfffffffffffec87c]        # 0x14001f238
   1400329bc:	xor    r9d,r9d
   1400329bf:	mov    QWORD PTR [r11-0x18],rax
   1400329c3:	call   0x1400328f4
   1400329c8:	add    rsp,0x38
   1400329cc:	ret    
   1400329cd:	int3   
   1400329ce:	int3   
   1400329cf:	int3   
   1400329d0:	int3   
   1400329d1:	int3   
   1400329d2:	int3   
   1400329d3:	int3   
   1400329d4:	int3   
   1400329d5:	int3   
   1400329d6:	data16 nop WORD PTR [rax+rax*1+0x0]
   1400329e0:	sub    rsp,0x10
   1400329e4:	mov    QWORD PTR [rsp],r10
   1400329e8:	mov    QWORD PTR [rsp+0x8],r11
   1400329ed:	xor    r11,r11
   1400329f0:	lea    r10,[rsp+0x18]
   1400329f5:	sub    r10,rax
   1400329f8:	cmovb  r10,r11
   1400329fc:	mov    r11,QWORD PTR gs:0x10
   140032a05:	cmp    r10,r11
   140032a08:	jae    0x140032a20
   140032a0a:	and    r10w,0xf000
   140032a10:	lea    r11,[r11-0x1000]
   140032a17:	mov    BYTE PTR [r11],0x0
   140032a1b:	cmp    r10,r11
   140032a1e:	jne    0x140032a10
   140032a20:	mov    r10,QWORD PTR [rsp]
   140032a24:	mov    r11,QWORD PTR [rsp+0x8]
   140032a29:	add    rsp,0x10
   140032a2d:	ret    
   140032a2e:	int3   
   140032a2f:	int3   
   140032a30:	int3   
   140032a31:	int3   
   140032a32:	int3   
   140032a33:	int3   
   140032a34:	int3   
   140032a35:	int3   
   140032a36:	data16 nop WORD PTR [rax+rax*1+0x0]
   140032a40:	sub    rsp,0x28
   140032a44:	mov    QWORD PTR [rsp+0x30],rcx
   140032a49:	mov    QWORD PTR [rsp+0x38],rdx
   140032a4e:	mov    DWORD PTR [rsp+0x40],r8d
   140032a53:	mov    rdx,QWORD PTR [rdx]
   140032a56:	mov    rax,rcx
   140032a59:	call   0x14001c670
   140032a5e:	call   rax
   140032a60:	call   0x14001c6a0
   140032a65:	mov    rcx,rax
   140032a68:	mov    rdx,QWORD PTR [rsp+0x38]
   140032a6d:	mov    rdx,QWORD PTR [rdx]
   140032a70:	mov    r8d,0x2
   140032a76:	call   0x14001c670
   140032a7b:	add    rsp,0x28
   140032a7f:	ret    
   140032a80:	mov    QWORD PTR [rsp+0x10],rdx
   140032a85:	push   rbp
   140032a86:	sub    rsp,0x20
   140032a8a:	mov    rbp,rdx
   140032a8d:	mov    rcx,QWORD PTR [rbp+0x28]
   140032a91:	call   0x1400063d8
   140032a96:	nop
   140032a97:	lea    rax,[rip+0xfffffffffffd3888]        # 0x140006326
   140032a9e:	jmp    0x140032aa0
   140032aa0:	add    rsp,0x20
   140032aa4:	pop    rbp
   140032aa5:	ret    
   140032aa6:	int3   
   140032aa7:	mov    QWORD PTR [rsp+0x10],rdx
   140032aac:	push   rbp
   140032aad:	sub    rsp,0x20
   140032ab1:	mov    rbp,rdx
   140032ab4:	mov    ecx,0x10
   140032ab9:	call   0x140006d98
   140032abe:	xor    edx,edx
   140032ac0:	xor    ecx,ecx
   140032ac2:	call   0x1400158a0
   140032ac7:	nop
   140032ac8:	add    rsp,0x20
   140032acc:	pop    rbp
   140032acd:	ret    
   140032ace:	int3   
   140032acf:	mov    QWORD PTR [rsp+0x10],rdx
   140032ad4:	push   rbp
   140032ad5:	sub    rsp,0x20
   140032ad9:	mov    rbp,rdx
   140032adc:	mov    rcx,QWORD PTR [rbp+0x50]
   140032ae0:	add    rcx,0x28
   140032ae4:	call   QWORD PTR [rip+0x396e]        # 0x140036458
   140032aea:	xor    edx,edx
   140032aec:	xor    ecx,ecx
   140032aee:	call   0x1400158a0
   140032af3:	nop
   140032af4:	add    rsp,0x20
   140032af8:	pop    rbp
   140032af9:	ret    
   140032afa:	int3   
   140032afb:	rex push rbp
   140032afd:	sub    rsp,0x20
   140032b01:	mov    rbp,rdx
   140032b04:	lea    rdx,[rip+0x180f5]        # 0x14004ac00
   140032b0b:	mov    rcx,QWORD PTR [rbp+0x48]
   140032b0f:	call   0x140001090
   140032b14:	add    rsp,0x20
   140032b18:	pop    rbp
   140032b19:	ret    
   140032b1a:	rex push rbp
   140032b1c:	sub    rsp,0x20
   140032b20:	mov    rbp,rdx
   140032b23:	mov    rcx,QWORD PTR [rbp+0x40]
   140032b27:	add    rcx,0x58
   140032b2b:	call   0x14000715c
   140032b30:	add    rsp,0x20
   140032b34:	pop    rbp
   140032b35:	ret    
   140032b36:	int3   
   140032b37:	int3   
   140032b38:	int3   
   140032b39:	int3   
   140032b3a:	rex push rbp
   140032b3c:	sub    rsp,0x20
   140032b40:	mov    rbp,rdx
   140032b43:	mov    rcx,QWORD PTR [rbp+0x40]
   140032b47:	add    rcx,0xc0
   140032b4e:	call   0x140006dc4
   140032b53:	add    rsp,0x20
   140032b57:	pop    rbp
   140032b58:	ret    
   140032b59:	rex push rbp
   140032b5b:	sub    rsp,0x20
   140032b5f:	mov    rbp,rdx
   140032b62:	mov    rcx,QWORD PTR [rbp+0x40]
   140032b66:	call   0x14000715c
   140032b6b:	add    rsp,0x20
   140032b6f:	pop    rbp
   140032b70:	ret    
   140032b71:	rex push rbp
   140032b73:	sub    rsp,0x20
   140032b77:	mov    rbp,rdx
   140032b7a:	lea    rcx,[rbp+0x40]
   140032b7e:	call   0x14000715c
   140032b83:	add    rsp,0x20
   140032b87:	pop    rbp
   140032b88:	ret    
   140032b89:	rex push rbp
   140032b8b:	sub    rsp,0x20
   140032b8f:	mov    rbp,rdx
   140032b92:	mov    rcx,QWORD PTR [rbp+0x40]
   140032b96:	add    rcx,0x58
   140032b9a:	call   0x14000715c
   140032b9f:	add    rsp,0x20
   140032ba3:	pop    rbp
   140032ba4:	ret    
   140032ba5:	int3   
   140032ba6:	int3   
   140032ba7:	int3   
   140032ba8:	int3   
   140032ba9:	rex push rbp
   140032bab:	sub    rsp,0x20
   140032baf:	mov    rbp,rdx
   140032bb2:	mov    rcx,QWORD PTR [rbp+0x40]
   140032bb6:	add    rcx,0xc0
   140032bbd:	call   0x140006dc4
   140032bc2:	add    rsp,0x20
   140032bc6:	pop    rbp
   140032bc7:	ret    
   140032bc8:	int3   
   140032bc9:	mov    QWORD PTR [rsp+0x10],rdx
   140032bce:	push   rbp
   140032bcf:	sub    rsp,0x20
   140032bd3:	mov    rbp,rdx
   140032bd6:	mov    rcx,QWORD PTR [rbp+0x28]
   140032bda:	test   rcx,rcx
   140032bdd:	je     0x140032be5
   140032bdf:	call   0x1400063d8
   140032be4:	nop
   140032be5:	lea    rax,[rip+0xfffffffffffd50d3]        # 0x140007cbf
   140032bec:	jmp    0x140032bee
   140032bee:	add    rsp,0x20
   140032bf2:	pop    rbp
   140032bf3:	ret    
   140032bf4:	int3   
   140032bf5:	int3   
   140032bf6:	int3   
   140032bf7:	int3   
   140032bf8:	int3   
   140032bf9:	rex push rbp
   140032bfb:	sub    rsp,0x20
   140032bff:	mov    rbp,rdx
   140032c02:	mov    rcx,QWORD PTR [rbp+0x50]
   140032c06:	call   0x14000666c
   140032c0b:	add    rsp,0x20
   140032c0f:	pop    rbp
   140032c10:	ret    
   140032c11:	int3   
   140032c12:	int3   
   140032c13:	int3   
   140032c14:	int3   
   140032c15:	int3   
   140032c16:	int3   
   140032c17:	int3   
   140032c18:	int3   
   140032c19:	rex push rbp
   140032c1b:	sub    rsp,0x20
   140032c1f:	mov    rbp,rdx
   140032c22:	mov    rcx,QWORD PTR [rbp+0x50]
   140032c26:	call   0x14000666c
   140032c2b:	add    rsp,0x20
   140032c2f:	pop    rbp
   140032c30:	ret    
   140032c31:	int3   
   140032c32:	int3   
   140032c33:	int3   
   140032c34:	int3   
   140032c35:	int3   
   140032c36:	int3   
   140032c37:	int3   
   140032c38:	int3   
   140032c39:	rex push rbp
   140032c3b:	sub    rsp,0x20
   140032c3f:	mov    rbp,rdx
   140032c42:	mov    rcx,QWORD PTR [rbp+0x50]
   140032c46:	call   0x14000666c
   140032c4b:	add    rsp,0x20
   140032c4f:	pop    rbp
   140032c50:	ret    
   140032c51:	rex push rbp
   140032c53:	sub    rsp,0x20
   140032c57:	mov    rbp,rdx
   140032c5a:	mov    rcx,QWORD PTR [rbp+0x40]
   140032c5e:	call   0x14000666c
   140032c63:	add    rsp,0x20
   140032c67:	pop    rbp
   140032c68:	ret    
   140032c69:	rex push rbx
   140032c6b:	push   rbp
   140032c6c:	push   rdi
   140032c6d:	sub    rsp,0x20
   140032c71:	mov    rbp,rdx
   140032c74:	cmp    DWORD PTR [rbp+0x24],0x2
   140032c78:	je     0x140032ca9
   140032c7a:	xor    ebx,ebx
   140032c7c:	cmp    DWORD PTR [rbp+0x20],ebx
   140032c7f:	sete   bl
   140032c82:	test   ebx,ebx
   140032c84:	je     0x140032c90
   140032c86:	call   QWORD PTR [rip+0x37d4]        # 0x140036460
   140032c8c:	mov    edi,eax
   140032c8e:	jmp    0x140032c92
   140032c90:	xor    edi,edi
   140032c92:	mov    rdx,QWORD PTR [rbp+0x28]
   140032c96:	xor    ecx,ecx
   140032c98:	call   0x140006dcc
   140032c9d:	test   ebx,ebx
   140032c9f:	je     0x140032ca9
   140032ca1:	mov    ecx,edi
   140032ca3:	call   QWORD PTR [rip+0x37bf]        # 0x140036468
   140032ca9:	add    rsp,0x20
   140032cad:	pop    rdi
   140032cae:	pop    rbp
   140032caf:	pop    rbx
   140032cb0:	ret    
   140032cb1:	rex push rbp
   140032cb3:	sub    rsp,0x20
   140032cb7:	mov    rbp,rdx
   140032cba:	lea    rcx,[rbp+0x58]
   140032cbe:	call   0x14000715c
   140032cc3:	add    rsp,0x20
   140032cc7:	pop    rbp
   140032cc8:	ret    
   140032cc9:	rex push rbp
   140032ccb:	sub    rsp,0x20
   140032ccf:	mov    rbp,rdx
   140032cd2:	mov    rcx,QWORD PTR [rbp+0x48]
   140032cd6:	call   0x14000b9a0
   140032cdb:	add    rsp,0x20
   140032cdf:	pop    rbp
   140032ce0:	ret    
   140032ce1:	mov    QWORD PTR [rsp+0x10],rdx
   140032ce6:	push   rbx
   140032ce7:	push   rbp
   140032ce8:	sub    rsp,0x38
   140032cec:	mov    rbp,rdx
   140032cef:	call   0x140008ae0
   140032cf4:	mov    r11,rax
   140032cf7:	xor    ecx,ecx
   140032cf9:	test   rax,rax
   140032cfc:	setne  cl
   140032cff:	test   ecx,ecx
   140032d01:	jne    0x140032d0e
   140032d03:	mov    ecx,0x80004005
   140032d08:	call   0x14000677c
   140032d0d:	int3   
   140032d0e:	mov    rax,QWORD PTR [rax]
   140032d11:	mov    rcx,r11
   140032d14:	call   QWORD PTR [rax+0x18]
   140032d17:	add    rax,0x18
   140032d1b:	mov    QWORD PTR [rbp+0x30],rax
   140032d1f:	mov    rcx,QWORD PTR [rbp+0x38]
   140032d23:	mov    rax,QWORD PTR [rcx]
   140032d26:	xor    r9d,r9d
   140032d29:	mov    r8d,0x200
   140032d2f:	lea    rdx,[rbp+0x50]
   140032d33:	call   QWORD PTR [rax+0x18]
   140032d36:	test   eax,eax
   140032d38:	je     0x140032d6b
   140032d3a:	lea    rax,[rbp+0x50]
   140032d3e:	mov    QWORD PTR [rsp+0x28],rax
   140032d43:	mov    DWORD PTR [rsp+0x20],0x38
   140032d4b:	lea    r9,[rip+0x4396]        # 0x1400370e8
   140032d52:	lea    r8,[rip+0x436f]        # 0x1400370c8
   140032d59:	lea    rdx,[rip+0x4358]        # 0x1400370b8
   140032d60:	lea    rcx,[rbp+0x30]
   140032d64:	call   0x14000916c
   140032d69:	jmp    0x140032d91
   140032d6b:	mov    DWORD PTR [rsp+0x20],0x38
   140032d73:	lea    r9,[rip+0x436e]        # 0x1400370e8
   140032d7a:	lea    r8,[rip+0x4347]        # 0x1400370c8
   140032d81:	lea    rdx,[rip+0x4320]        # 0x1400370a8
   140032d88:	lea    rcx,[rbp+0x30]
   140032d8c:	call   0x14000916c
   140032d91:	xor    r8d,r8d
   140032d94:	xor    edx,edx
   140032d96:	mov    rbx,QWORD PTR [rbp+0x30]
   140032d9a:	mov    rcx,rbx
   140032d9d:	call   0x140008274
   140032da2:	nop
   140032da3:	lea    rdx,[rbx-0x18]
   140032da7:	or     eax,0xffffffff
   140032daa:	lock xadd DWORD PTR [rdx+0x10],eax
   140032daf:	dec    eax
   140032db1:	test   eax,eax
   140032db3:	jg     0x140032dbe
   140032db5:	mov    rcx,QWORD PTR [rdx]
   140032db8:	mov    rax,QWORD PTR [rcx]
   140032dbb:	call   QWORD PTR [rax+0x8]
   140032dbe:	mov    rcx,QWORD PTR [rbp+0x38]
   140032dc2:	mov    rax,QWORD PTR [rcx]
   140032dc5:	mov    edx,0x1
   140032dca:	call   QWORD PTR [rax+0x8]
   140032dcd:	nop
   140032dce:	lea    rax,[rip+0xfffffffffffd63e7]        # 0x1400091bc
   140032dd5:	jmp    0x140032dd7
   140032dd7:	add    rsp,0x38
   140032ddb:	pop    rbp
   140032ddc:	pop    rbx
   140032ddd:	ret    
   140032dde:	int3   
   140032ddf:	int3   
   140032de0:	int3   
   140032de1:	rex push rbp
   140032de3:	sub    rsp,0x20
   140032de7:	mov    rbp,rdx
   140032dea:	lea    rcx,[rbp+0x30]
   140032dee:	call   0x14000715c
   140032df3:	add    rsp,0x20
   140032df7:	pop    rbp
   140032df8:	ret    
   140032df9:	rex push rbp
   140032dfb:	sub    rsp,0x20
   140032dff:	mov    rbp,rdx
   140032e02:	lea    rcx,[rbp+0x58]
   140032e06:	call   0x14000715c
   140032e0b:	add    rsp,0x20
   140032e0f:	pop    rbp
   140032e10:	ret    
   140032e11:	int3   
   140032e12:	int3   
   140032e13:	int3   
   140032e14:	int3   
   140032e15:	int3   
   140032e16:	int3   
   140032e17:	int3   
   140032e18:	int3   
   140032e19:	rex push rbp
   140032e1b:	sub    rsp,0x20
   140032e1f:	mov    rbp,rdx
   140032e22:	lea    rcx,[rbp+0x20]
   140032e26:	call   0x14000715c
   140032e2b:	add    rsp,0x20
   140032e2f:	pop    rbp
   140032e30:	ret    
   140032e31:	int3   
   140032e32:	int3   
   140032e33:	int3   
   140032e34:	int3   
   140032e35:	int3   
   140032e36:	int3   
   140032e37:	int3   
   140032e38:	int3   
   140032e39:	mov    QWORD PTR [rsp+0x10],rdx
   140032e3e:	push   rbp
   140032e3f:	sub    rsp,0x20
   140032e43:	mov    rbp,rdx
   140032e46:	lea    rax,[rip+0xfffffffffffd6f1d]        # 0x140009d6a
   140032e4d:	jmp    0x140032e4f
   140032e4f:	add    rsp,0x20
   140032e53:	pop    rbp
   140032e54:	ret    
   140032e55:	int3   
   140032e56:	rex push rbp
   140032e58:	sub    rsp,0x20
   140032e5c:	mov    rbp,rdx
   140032e5f:	mov    rcx,QWORD PTR [rbp+0x50]
   140032e63:	add    rcx,0x18
   140032e67:	call   0x14000715c
   140032e6c:	add    rsp,0x20
   140032e70:	pop    rbp
   140032e71:	ret    
   140032e72:	rex push rbp
   140032e74:	sub    rsp,0x20
   140032e78:	mov    rbp,rdx
   140032e7b:	mov    rcx,QWORD PTR [rbp+0x58]
   140032e7f:	call   0x14000b9a0
   140032e84:	add    rsp,0x20
   140032e88:	pop    rbp
   140032e89:	ret    
   140032e8a:	rex push rbp
   140032e8c:	sub    rsp,0x20
   140032e90:	mov    rbp,rdx
   140032e93:	mov    rcx,QWORD PTR [rbp+0x50]
   140032e97:	add    rcx,0x8
   140032e9b:	call   0x1400121e0
   140032ea0:	add    rsp,0x20
   140032ea4:	pop    rbp
   140032ea5:	ret    
   140032ea6:	int3   
   140032ea7:	int3   
   140032ea8:	int3   
   140032ea9:	int3   
   140032eaa:	rex push rbp
   140032eac:	sub    rsp,0x20
   140032eb0:	mov    rbp,rdx
   140032eb3:	mov    rcx,QWORD PTR [rbp+0x50]
   140032eb7:	add    rcx,0x30
   140032ebb:	call   0x1400089b8
   140032ec0:	add    rsp,0x20
   140032ec4:	pop    rbp
   140032ec5:	ret    
   140032ec6:	int3   
   140032ec7:	int3   
   140032ec8:	int3   
   140032ec9:	int3   
   140032eca:	rex push rbp
   140032ecc:	sub    rsp,0x20
   140032ed0:	mov    rbp,rdx
   140032ed3:	mov    rcx,QWORD PTR [rbp+0x50]
   140032ed7:	add    rcx,0x68
   140032edb:	call   0x1400089b8
   140032ee0:	add    rsp,0x20
   140032ee4:	pop    rbp
   140032ee5:	ret    
   140032ee6:	mov    QWORD PTR [rsp+0x10],rdx
   140032eeb:	push   rbp
   140032eec:	sub    rsp,0x20
   140032ef0:	mov    rbp,rdx
   140032ef3:	mov    rcx,QWORD PTR [rbp+0x58]
   140032ef7:	call   0x140006280
   140032efc:	xor    edx,edx
   140032efe:	xor    ecx,ecx
   140032f00:	call   0x1400158a0
   140032f05:	nop
   140032f06:	add    rsp,0x20
   140032f0a:	pop    rbp
   140032f0b:	ret    
   140032f0c:	int3   
   140032f0d:	rex push rbp
   140032f0f:	sub    rsp,0x20
   140032f13:	mov    rbp,rdx
   140032f16:	mov    rcx,QWORD PTR [rbp+0x40]
   140032f1a:	add    rcx,0x8
   140032f1e:	call   0x1400121e0
   140032f23:	add    rsp,0x20
   140032f27:	pop    rbp
   140032f28:	ret    
   140032f29:	int3   
   140032f2a:	int3   
   140032f2b:	int3   
   140032f2c:	int3   
   140032f2d:	rex push rbp
   140032f2f:	sub    rsp,0x20
   140032f33:	mov    rbp,rdx
   140032f36:	mov    rcx,QWORD PTR [rbp+0x40]
   140032f3a:	add    rcx,0x30
   140032f3e:	call   0x1400089b8
   140032f43:	add    rsp,0x20
   140032f47:	pop    rbp
   140032f48:	ret    
   140032f49:	int3   
   140032f4a:	int3   
   140032f4b:	int3   
   140032f4c:	int3   
   140032f4d:	rex push rbp
   140032f4f:	sub    rsp,0x20
   140032f53:	mov    rbp,rdx
   140032f56:	mov    rcx,QWORD PTR [rbp+0x40]
   140032f5a:	add    rcx,0x68
   140032f5e:	call   0x1400089b8
   140032f63:	add    rsp,0x20
   140032f67:	pop    rbp
   140032f68:	ret    
   140032f69:	rex push rbx
   140032f6b:	push   rbp
   140032f6c:	push   rsi
   140032f6d:	push   rdi
   140032f6e:	sub    rsp,0x28
   140032f72:	mov    rbp,rdx
   140032f75:	cmp    DWORD PTR [rbp+0x58],0x2
   140032f79:	je     0x140032fae
   140032f7b:	xor    ebx,ebx
   140032f7d:	mov    edi,ebx
   140032f7f:	cmp    WORD PTR [rbp+0x20],bx
   140032f83:	sete   dil
   140032f87:	cmp    edi,ebx
   140032f89:	je     0x140032f95
   140032f8b:	call   QWORD PTR [rip+0x34cf]        # 0x140036460
   140032f91:	mov    esi,eax
   140032f93:	jmp    0x140032f97
   140032f95:	mov    esi,ebx
   140032f97:	mov    rdx,QWORD PTR [rbp+0x60]
   140032f9b:	xor    ecx,ecx
   140032f9d:	call   0x140006dcc
   140032fa2:	cmp    edi,ebx
   140032fa4:	je     0x140032fae
   140032fa6:	mov    ecx,esi
   140032fa8:	call   QWORD PTR [rip+0x34ba]        # 0x140036468
   140032fae:	add    rsp,0x28
   140032fb2:	pop    rdi
   140032fb3:	pop    rsi
   140032fb4:	pop    rbp
   140032fb5:	pop    rbx
   140032fb6:	ret    
   140032fb7:	rex push rbx
   140032fb9:	push   rbp
   140032fba:	push   rdi
   140032fbb:	sub    rsp,0x20
   140032fbf:	mov    rbp,rdx
   140032fc2:	cmp    DWORD PTR [rbp+0x58],0x2
   140032fc6:	je     0x140032ff7
   140032fc8:	xor    ebx,ebx
   140032fca:	cmp    DWORD PTR [rbp+0x20],ebx
   140032fcd:	sete   bl
   140032fd0:	test   ebx,ebx
   140032fd2:	je     0x140032fde
   140032fd4:	call   QWORD PTR [rip+0x3486]        # 0x140036460
   140032fda:	mov    edi,eax
   140032fdc:	jmp    0x140032fe0
   140032fde:	xor    edi,edi
   140032fe0:	mov    rdx,QWORD PTR [rbp+0x28]
   140032fe4:	xor    ecx,ecx
   140032fe6:	call   0x140006dcc
   140032feb:	test   ebx,ebx
   140032fed:	je     0x140032ff7
   140032fef:	mov    ecx,edi
   140032ff1:	call   QWORD PTR [rip+0x3471]        # 0x140036468
   140032ff7:	add    rsp,0x20
   140032ffb:	pop    rdi
   140032ffc:	pop    rbp
   140032ffd:	pop    rbx
   140032ffe:	ret    
   140032fff:	rex push rbx
   140033001:	push   rbp
   140033002:	push   rdi
   140033003:	sub    rsp,0x60
   140033007:	mov    rbp,rdx
   14003300a:	cmp    DWORD PTR [rbp+0x60],0x2
   14003300e:	je     0x140033040
   140033010:	xor    ebx,ebx
   140033012:	cmp    QWORD PTR [rbp+0x70],rbx
   140033016:	sete   bl
   140033019:	test   ebx,ebx
   14003301b:	je     0x140033027
   14003301d:	call   QWORD PTR [rip+0x343d]        # 0x140036460
   140033023:	mov    edi,eax
   140033025:	jmp    0x140033029
   140033027:	xor    edi,edi
   140033029:	mov    rdx,QWORD PTR [rbp+0x68]
   14003302d:	xor    ecx,ecx
   14003302f:	call   0x140006dcc
   140033034:	test   ebx,ebx
   140033036:	je     0x140033040
   140033038:	mov    ecx,edi
   14003303a:	call   QWORD PTR [rip+0x3428]        # 0x140036468
   140033040:	add    rsp,0x60
   140033044:	pop    rdi
   140033045:	pop    rbp
   140033046:	pop    rbx
   140033047:	ret    
   140033048:	rex push rbx
   14003304a:	push   rbp
   14003304b:	push   rdi
   14003304c:	sub    rsp,0x20
   140033050:	mov    rbp,rdx
   140033053:	cmp    DWORD PTR [rbp+0x48],0x2
   140033057:	je     0x140033089
   140033059:	xor    ebx,ebx
   14003305b:	cmp    QWORD PTR [rbp+0x20],rbx
   14003305f:	sete   bl
   140033062:	test   ebx,ebx
   140033064:	je     0x140033070
   140033066:	call   QWORD PTR [rip+0x33f4]        # 0x140036460
   14003306c:	mov    edi,eax
   14003306e:	jmp    0x140033072
   140033070:	xor    edi,edi
   140033072:	mov    rdx,QWORD PTR [rbp+0x50]
   140033076:	xor    ecx,ecx
   140033078:	call   0x140006dcc
   14003307d:	test   ebx,ebx
   14003307f:	je     0x140033089
   140033081:	mov    ecx,edi
   140033083:	call   QWORD PTR [rip+0x33df]        # 0x140036468
   140033089:	add    rsp,0x20
   14003308d:	pop    rdi
   14003308e:	pop    rbp
   14003308f:	pop    rbx
   140033090:	ret    
   140033091:	rex push rbp
   140033093:	sub    rsp,0x20
   140033097:	mov    rbp,rdx
   14003309a:	lea    rcx,[rbp+0x58]
   14003309e:	call   0x140008e1c
   1400330a3:	add    rsp,0x20
   1400330a7:	pop    rbp
   1400330a8:	ret    
   1400330a9:	rex push rbp
   1400330ab:	sub    rsp,0x20
   1400330af:	mov    rbp,rdx
   1400330b2:	lea    rcx,[rbp+0x28]
   1400330b6:	call   0x140008e1c
   1400330bb:	add    rsp,0x20
   1400330bf:	pop    rbp
   1400330c0:	ret    
   1400330c1:	rex push rbp
   1400330c3:	sub    rsp,0x20
   1400330c7:	mov    rbp,rdx
   1400330ca:	lea    rcx,[rbp+0x38]
   1400330ce:	call   0x140008e1c
   1400330d3:	add    rsp,0x20
   1400330d7:	pop    rbp
   1400330d8:	ret    
   1400330d9:	rex push rbp
   1400330db:	sub    rsp,0x20
   1400330df:	mov    rbp,rdx
   1400330e2:	mov    rcx,QWORD PTR [rbp+0x40]
   1400330e6:	call   0x14000b9a0
   1400330eb:	add    rsp,0x20
   1400330ef:	pop    rbp
   1400330f0:	ret    
   1400330f1:	rex push rbp
   1400330f3:	sub    rsp,0x20
   1400330f7:	mov    rbp,rdx
   1400330fa:	mov    rdx,QWORD PTR [rbp+0x40]
   1400330fe:	mov    rcx,QWORD PTR [rbp+0x48]
   140033102:	call   0x14000b9a0
   140033107:	add    rsp,0x20
   14003310b:	pop    rbp
   14003310c:	ret    
   14003310d:	rex push rbp
   14003310f:	sub    rsp,0x20
   140033113:	mov    rbp,rdx
   140033116:	cmp    DWORD PTR [rbp+0x38],0x2
   14003311a:	je     0x140033127
   14003311c:	mov    rdx,QWORD PTR [rbp+0x40]
   140033120:	xor    ecx,ecx
   140033122:	call   0x140006dcc
   140033127:	add    rsp,0x20
   14003312b:	pop    rbp
   14003312c:	ret    
   14003312d:	rex push rbx
   14003312f:	push   rbp
   140033130:	push   rdi
   140033131:	sub    rsp,0x20
   140033135:	mov    rbp,rdx
   140033138:	cmp    DWORD PTR [rbp+0x50],0x2
   14003313c:	je     0x14003316d
   14003313e:	xor    ebx,ebx
   140033140:	cmp    DWORD PTR [rbp+0x20],ebx
   140033143:	sete   bl
   140033146:	test   ebx,ebx
   140033148:	je     0x140033154
   14003314a:	call   QWORD PTR [rip+0x3310]        # 0x140036460
   140033150:	mov    edi,eax
   140033152:	jmp    0x140033156
   140033154:	xor    edi,edi
   140033156:	mov    rdx,QWORD PTR [rbp+0x58]
   14003315a:	xor    ecx,ecx
   14003315c:	call   0x140006dcc
   140033161:	test   ebx,ebx
   140033163:	je     0x14003316d
   140033165:	mov    ecx,edi
   140033167:	call   QWORD PTR [rip+0x32fb]        # 0x140036468
   14003316d:	add    rsp,0x20
   140033171:	pop    rdi
   140033172:	pop    rbp
   140033173:	pop    rbx
   140033174:	ret    
   140033175:	mov    QWORD PTR [rsp+0x10],rdx
   14003317a:	push   rbx
   14003317b:	push   rbp
   14003317c:	push   rdi
   14003317d:	sub    rsp,0x20
   140033181:	mov    rbp,rdx
   140033184:	mov    rdx,QWORD PTR [rbp+0x28]
   140033188:	add    rdx,0x98
   14003318f:	mov    rbx,QWORD PTR [rbp+0x48]
   140033193:	mov    rcx,rbx
   140033196:	call   0x140008c70
   14003319b:	mov    QWORD PTR [rbp+0x20],rax
   14003319f:	xor    edi,edi
   1400331a1:	cmp    rbx,rdi
   1400331a4:	je     0x1400331af
   1400331a6:	mov    rcx,rbx
   1400331a9:	call   0x1400063d8
   1400331ae:	nop
   1400331af:	lea    rax,[rip+0xfffffffffffdb2d3]        # 0x14000e489
   1400331b6:	jmp    0x1400331b8
   1400331b8:	add    rsp,0x20
   1400331bc:	pop    rdi
   1400331bd:	pop    rbp
   1400331be:	pop    rbx
   1400331bf:	ret    
   1400331c0:	int3   
   1400331c1:	rex push rbp
   1400331c3:	sub    rsp,0x20
   1400331c7:	mov    rbp,rdx
   1400331ca:	mov    rcx,QWORD PTR [rbp+0x40]
   1400331ce:	call   0x14000a270
   1400331d3:	add    rsp,0x20
   1400331d7:	pop    rbp
   1400331d8:	ret    
   1400331d9:	rex push rbp
   1400331db:	sub    rsp,0x20
   1400331df:	mov    rbp,rdx
   1400331e2:	lea    rcx,[rbp+0x30]
   1400331e6:	call   0x14000e554
   1400331eb:	add    rsp,0x20
   1400331ef:	pop    rbp
   1400331f0:	ret    
   1400331f1:	mov    QWORD PTR [rsp+0x10],rdx
   1400331f6:	push   rbx
   1400331f7:	push   rbp
   1400331f8:	push   rdi
   1400331f9:	sub    rsp,0x30
   1400331fd:	mov    rbp,rdx
   140033200:	mov    rax,QWORD PTR [rbp+0xd0]
   140033207:	mov    QWORD PTR [rbp+0x58],rax
   14003320b:	mov    eax,DWORD PTR [rbp+0xd8]
   140033211:	mov    DWORD PTR [rbp+0x60],eax
   140033214:	mov    rax,QWORD PTR [rbp+0xe0]
   14003321b:	mov    QWORD PTR [rbp+0x68],rax
   14003321f:	mov    rax,QWORD PTR [rbp+0xe8]
   140033226:	mov    QWORD PTR [rbp+0x70],rax
   14003322a:	lea    rdx,[rbp+0x58]
   14003322e:	mov    rdi,QWORD PTR [rbp+0x40]
   140033232:	mov    rcx,rdi
   140033235:	call   0x140008c70
   14003323a:	mov    QWORD PTR [rbp+0x30],rax
   14003323e:	xor    ebx,ebx
   140033240:	cmp    rdi,rbx
   140033243:	je     0x14003324e
   140033245:	mov    rcx,rdi
   140033248:	call   0x1400063d8
   14003324d:	nop
   14003324e:	lea    rax,[rip+0xfffffffffffdc729]        # 0x14000f97e
   140033255:	jmp    0x140033257
   140033257:	add    rsp,0x30
   14003325b:	pop    rdi
   14003325c:	pop    rbp
   14003325d:	pop    rbx
   14003325e:	ret    
   14003325f:	int3   
   140033260:	rex push rbp
   140033262:	sub    rsp,0x20
   140033266:	mov    rbp,rdx
   140033269:	lea    rcx,[rbp+0x30]
   14003326d:	call   0x140008e1c
   140033272:	add    rsp,0x20
   140033276:	pop    rbp
   140033277:	ret    
   140033278:	rex push rbp
   14003327a:	sub    rsp,0x20
   14003327e:	mov    rbp,rdx
   140033281:	lea    rcx,[rbp+0x40]
   140033285:	call   0x14000d998
   14003328a:	add    rsp,0x20
   14003328e:	pop    rbp
   14003328f:	ret    
   140033290:	int3   
   140033291:	int3   
   140033292:	int3   
   140033293:	int3   
   140033294:	int3   
   140033295:	int3   
   140033296:	int3   
   140033297:	int3   
   140033298:	rex push rbp
   14003329a:	sub    rsp,0x20
   14003329e:	mov    rbp,rdx
   1400332a1:	lea    rcx,[rbp+0x48]
   1400332a5:	call   0x140012c78
   1400332aa:	add    rsp,0x20
   1400332ae:	pop    rbp
   1400332af:	ret    
   1400332b0:	int3   
   1400332b1:	int3   
   1400332b2:	int3   
   1400332b3:	int3   
   1400332b4:	int3   
   1400332b5:	int3   
   1400332b6:	int3   
   1400332b7:	int3   
   1400332b8:	rex push rbp
   1400332ba:	sub    rsp,0x20
   1400332be:	mov    rbp,rdx
   1400332c1:	lea    rcx,[rbp+0x70]
   1400332c5:	call   0x14000e554
   1400332ca:	add    rsp,0x20
   1400332ce:	pop    rbp
   1400332cf:	ret    
   1400332d0:	int3   
   1400332d1:	int3   
   1400332d2:	int3   
   1400332d3:	int3   
   1400332d4:	int3   
   1400332d5:	int3   
   1400332d6:	int3   
   1400332d7:	int3   
   1400332d8:	rex push rbp
   1400332da:	sub    rsp,0x20
   1400332de:	mov    rbp,rdx
   1400332e1:	lea    rcx,[rbp+0x48]
   1400332e5:	call   0x140012c78
   1400332ea:	add    rsp,0x20
   1400332ee:	pop    rbp
   1400332ef:	ret    
   1400332f0:	rex push rbp
   1400332f2:	sub    rsp,0x20
   1400332f6:	mov    rbp,rdx
   1400332f9:	mov    rcx,QWORD PTR [rbp+0x78]
   1400332fd:	call   0x1400062d4
   140033302:	add    rsp,0x20
   140033306:	pop    rbp
   140033307:	ret    
   140033308:	int3   
   140033309:	int3   
   14003330a:	int3   
   14003330b:	int3   
   14003330c:	int3   
   14003330d:	int3   
   14003330e:	int3   
   14003330f:	int3   
   140033310:	mov    QWORD PTR [rsp+0x10],rdx
   140033315:	push   rbp
   140033316:	sub    rsp,0x20
   14003331a:	mov    rbp,rdx
   14003331d:	mov    rcx,QWORD PTR [rbp+0x28]
   140033321:	call   0x1400063d8
   140033326:	nop
   140033327:	lea    rax,[rip+0xfffffffffffddc5f]        # 0x140010f8d
   14003332e:	jmp    0x140033330
   140033330:	add    rsp,0x20
   140033334:	pop    rbp
   140033335:	ret    
   140033336:	int3   
   140033337:	mov    QWORD PTR [rsp+0x10],rdx
   14003333c:	push   rbx
   14003333d:	push   rbp
   14003333e:	sub    rsp,0x38
   140033342:	mov    rbp,rdx
   140033345:	call   0x140008ae0
   14003334a:	mov    r11,rax
   14003334d:	xor    ecx,ecx
   14003334f:	test   rax,rax
   140033352:	setne  cl
   140033355:	test   ecx,ecx
   140033357:	jne    0x140033364
   140033359:	mov    ecx,0x80004005
   14003335e:	call   0x14000677c
   140033363:	int3   
   140033364:	mov    rax,QWORD PTR [rax]
   140033367:	mov    rcx,r11
   14003336a:	call   QWORD PTR [rax+0x18]
   14003336d:	add    rax,0x18
   140033371:	mov    QWORD PTR [rbp+0x30],rax
   140033375:	mov    rcx,QWORD PTR [rbp+0x38]
   140033379:	mov    rax,QWORD PTR [rcx]
   14003337c:	xor    r9d,r9d
   14003337f:	mov    r8d,0x200
   140033385:	lea    rdx,[rbp+0x50]
   140033389:	call   QWORD PTR [rax+0x18]
   14003338c:	test   eax,eax
   14003338e:	je     0x1400333c1
   140033390:	lea    rax,[rbp+0x50]
   140033394:	mov    QWORD PTR [rsp+0x28],rax
   140033399:	mov    DWORD PTR [rsp+0x20],0x497
   1400333a1:	lea    r9,[rip+0x50c8]        # 0x140038470
   1400333a8:	lea    r8,[rip+0x3d19]        # 0x1400370c8
   1400333af:	lea    rdx,[rip+0x3d02]        # 0x1400370b8
   1400333b6:	lea    rcx,[rbp+0x30]
   1400333ba:	call   0x14000916c
   1400333bf:	jmp    0x1400333e7
   1400333c1:	mov    DWORD PTR [rsp+0x20],0x497
   1400333c9:	lea    r9,[rip+0x50a0]        # 0x140038470
   1400333d0:	lea    r8,[rip+0x3cf1]        # 0x1400370c8
   1400333d7:	lea    rdx,[rip+0x3cca]        # 0x1400370a8
   1400333de:	lea    rcx,[rbp+0x30]
   1400333e2:	call   0x14000916c
   1400333e7:	xor    r8d,r8d
   1400333ea:	xor    edx,edx
   1400333ec:	mov    rbx,QWORD PTR [rbp+0x30]
   1400333f0:	mov    rcx,rbx
   1400333f3:	call   0x140008274
   1400333f8:	nop
   1400333f9:	lea    rdx,[rbx-0x18]
   1400333fd:	or     eax,0xffffffff
   140033400:	lock xadd DWORD PTR [rdx+0x10],eax
   140033405:	dec    eax
   140033407:	test   eax,eax
   140033409:	jg     0x140033414
   14003340b:	mov    rcx,QWORD PTR [rdx]
   14003340e:	mov    rax,QWORD PTR [rcx]
   140033411:	call   QWORD PTR [rax+0x8]
   140033414:	mov    rcx,QWORD PTR [rbp+0x38]
   140033418:	mov    rax,QWORD PTR [rcx]
   14003341b:	mov    edx,0x1
   140033420:	call   QWORD PTR [rax+0x8]
   140033423:	nop
   140033424:	lea    rax,[rip+0xfffffffffffddbbe]        # 0x140010fe9
   14003342b:	jmp    0x14003342d
   14003342d:	add    rsp,0x38
   140033431:	pop    rbp
   140033432:	pop    rbx
   140033433:	ret    
   140033434:	int3   
   140033435:	int3   
   140033436:	int3   
   140033437:	rex push rbp
   140033439:	sub    rsp,0x20
   14003343d:	mov    rbp,rdx
   140033440:	lea    rcx,[rbp+0x30]
   140033444:	call   0x14000715c
   140033449:	add    rsp,0x20
   14003344d:	pop    rbp
   14003344e:	ret    
   14003344f:	rex push rbp
   140033451:	sub    rsp,0x20
   140033455:	mov    rbp,rdx
   140033458:	lea    rcx,[rbp+0x58]
   14003345c:	call   0x140010fb8
   140033461:	add    rsp,0x20
   140033465:	pop    rbp
   140033466:	ret    
   140033467:	rex push rbp
   140033469:	sub    rsp,0x20
   14003346d:	mov    rbp,rdx
   140033470:	lea    rcx,[rbp+0x50]
   140033474:	call   0x14000d488
   140033479:	add    rsp,0x20
   14003347d:	pop    rbp
   14003347e:	ret    
   14003347f:	mov    QWORD PTR [rsp+0x10],rdx
   140033484:	push   rbp
   140033485:	sub    rsp,0x20
   140033489:	mov    rbp,rdx
   14003348c:	mov    ecx,0x1
   140033491:	call   0x140006d98
   140033496:	xor    edx,edx
   140033498:	xor    ecx,ecx
   14003349a:	call   0x1400158a0
   14003349f:	nop
   1400334a0:	add    rsp,0x20
   1400334a4:	pop    rbp
   1400334a5:	ret    
   1400334a6:	int3   
   1400334a7:	rex push rbp
   1400334a9:	sub    rsp,0x20
   1400334ad:	mov    rbp,rdx
   1400334b0:	lea    rcx,[rbp+0x20]
   1400334b4:	call   0x14000715c
   1400334b9:	add    rsp,0x20
   1400334bd:	pop    rbp
   1400334be:	ret    
   1400334bf:	rex push rbp
   1400334c1:	sub    rsp,0x20
   1400334c5:	mov    rbp,rdx
   1400334c8:	mov    rcx,QWORD PTR [rbp+0x58]
   1400334cc:	call   0x1400062d4
   1400334d1:	add    rsp,0x20
   1400334d5:	pop    rbp
   1400334d6:	ret    
   1400334d7:	mov    QWORD PTR [rsp+0x10],rdx
   1400334dc:	push   rbx
   1400334dd:	push   rbp
   1400334de:	sub    rsp,0x38
   1400334e2:	mov    rbp,rdx
   1400334e5:	call   0x140008ae0
   1400334ea:	mov    r11,rax
   1400334ed:	xor    ecx,ecx
   1400334ef:	test   rax,rax
   1400334f2:	setne  cl
   1400334f5:	test   ecx,ecx
   1400334f7:	jne    0x140033504
   1400334f9:	mov    ecx,0x80004005
   1400334fe:	call   0x14000677c
   140033503:	int3   
   140033504:	mov    rax,QWORD PTR [rax]
   140033507:	mov    rcx,r11
   14003350a:	call   QWORD PTR [rax+0x18]
   14003350d:	add    rax,0x18
   140033511:	mov    QWORD PTR [rbp+0x30],rax
   140033515:	mov    rcx,QWORD PTR [rbp+0x38]
   140033519:	mov    rax,QWORD PTR [rcx]
   14003351c:	xor    r9d,r9d
   14003351f:	mov    r8d,0x200
   140033525:	lea    rdx,[rbp+0x50]
   140033529:	call   QWORD PTR [rax+0x18]
   14003352c:	test   eax,eax
   14003352e:	je     0x140033561
   140033530:	lea    rax,[rbp+0x50]
   140033534:	mov    QWORD PTR [rsp+0x28],rax
   140033539:	mov    DWORD PTR [rsp+0x20],0x6d
   140033541:	lea    r9,[rip+0x5a88]        # 0x140038fd0
   140033548:	lea    r8,[rip+0x3b79]        # 0x1400370c8
   14003354f:	lea    rdx,[rip+0x3b62]        # 0x1400370b8
   140033556:	lea    rcx,[rbp+0x30]
   14003355a:	call   0x14000916c
   14003355f:	jmp    0x140033587
   140033561:	mov    DWORD PTR [rsp+0x20],0x6d
   140033569:	lea    r9,[rip+0x5a60]        # 0x140038fd0
   140033570:	lea    r8,[rip+0x3b51]        # 0x1400370c8
   140033577:	lea    rdx,[rip+0x3b2a]        # 0x1400370a8
   14003357e:	lea    rcx,[rbp+0x30]
   140033582:	call   0x14000916c
   140033587:	xor    r8d,r8d
   14003358a:	xor    edx,edx
   14003358c:	mov    rbx,QWORD PTR [rbp+0x30]
   140033590:	mov    rcx,rbx
   140033593:	call   0x140008274
   140033598:	nop
   140033599:	lea    rdx,[rbx-0x18]
   14003359d:	or     eax,0xffffffff
   1400335a0:	lock xadd DWORD PTR [rdx+0x10],eax
   1400335a5:	dec    eax
   1400335a7:	test   eax,eax
   1400335a9:	jg     0x1400335b4
   1400335ab:	mov    rcx,QWORD PTR [rdx]
   1400335ae:	mov    rax,QWORD PTR [rcx]
   1400335b1:	call   QWORD PTR [rax+0x8]
   1400335b4:	mov    rcx,QWORD PTR [rbp+0x38]
   1400335b8:	mov    rax,QWORD PTR [rcx]
   1400335bb:	mov    edx,0x1
   1400335c0:	call   QWORD PTR [rax+0x8]
   1400335c3:	nop
   1400335c4:	lea    rax,[rip+0xfffffffffffdee8f]        # 0x14001245a
   1400335cb:	jmp    0x1400335cd
   1400335cd:	add    rsp,0x38
   1400335d1:	pop    rbp
   1400335d2:	pop    rbx
   1400335d3:	ret    
   1400335d4:	int3   
   1400335d5:	int3   
   1400335d6:	int3   
   1400335d7:	rex push rbp
   1400335d9:	sub    rsp,0x20
   1400335dd:	mov    rbp,rdx
   1400335e0:	lea    rcx,[rbp+0x30]
   1400335e4:	call   0x14000715c
   1400335e9:	add    rsp,0x20
   1400335ed:	pop    rbp
   1400335ee:	ret    
   1400335ef:	rex push rbp
   1400335f1:	sub    rsp,0x20
   1400335f5:	mov    rbp,rdx
   1400335f8:	mov    rcx,QWORD PTR [rbp+0x88]
   1400335ff:	call   0x14000b9a0
   140033604:	add    rsp,0x20
   140033608:	pop    rbp
   140033609:	ret    
   14003360a:	int3   
   14003360b:	int3   
   14003360c:	int3   
   14003360d:	int3   
   14003360e:	int3   
   14003360f:	mov    QWORD PTR [rsp+0x10],rdx
   140033614:	push   rbp
   140033615:	sub    rsp,0x20
   140033619:	mov    rbp,rdx
   14003361c:	mov    rcx,QWORD PTR [rbp+0x88]
   140033623:	test   rcx,rcx
   140033626:	je     0x140033633
   140033628:	mov    rax,QWORD PTR [rcx]
   14003362b:	mov    edx,0x1
   140033630:	call   QWORD PTR [rax+0x8]
   140033633:	and    QWORD PTR [rbp+0x80],0x0
   14003363b:	lea    rax,[rip+0xfffffffffffe001f]        # 0x140013661
   140033642:	jmp    0x140033644
   140033644:	add    rsp,0x20
   140033648:	pop    rbp
   140033649:	ret    
   14003364a:	int3   
   14003364b:	rex push rbp
   14003364d:	sub    rsp,0x20
   140033651:	mov    rbp,rdx
   140033654:	mov    rcx,QWORD PTR [rbp+0x50]
   140033658:	call   0x14000b9a0
   14003365d:	add    rsp,0x20
   140033661:	pop    rbp
   140033662:	ret    
   140033663:	int3   
   140033664:	int3   
   140033665:	int3   
   140033666:	int3   
   140033667:	int3   
   140033668:	int3   
   140033669:	int3   
   14003366a:	int3   
   14003366b:	rex push rbp
   14003366d:	sub    rsp,0x20
   140033671:	mov    rbp,rdx
   140033674:	mov    rcx,QWORD PTR [rbp+0x50]
   140033678:	call   0x14000b9a0
   14003367d:	add    rsp,0x20
   140033681:	pop    rbp
   140033682:	ret    
   140033683:	mov    QWORD PTR [rsp+0x10],rdx
   140033688:	push   rbp
   140033689:	push   rsi
   14003368a:	sub    rsp,0x28
   14003368e:	mov    rbp,rdx
   140033691:	mov    rcx,QWORD PTR [rbp+0x20]
   140033695:	test   rcx,rcx
   140033698:	je     0x1400336a5
   14003369a:	mov    rax,QWORD PTR [rcx]
   14003369d:	mov    edx,0x1
   1400336a2:	call   QWORD PTR [rax+0x8]
   1400336a5:	xor    edx,edx
   1400336a7:	xor    ecx,ecx
   1400336a9:	call   0x1400158a0
   1400336ae:	nop
   1400336af:	add    rsp,0x28
   1400336b3:	pop    rsi
   1400336b4:	pop    rbp
   1400336b5:	ret    
   1400336b6:	int3   
   1400336b7:	rex push rbp
   1400336b9:	sub    rsp,0x20
   1400336bd:	mov    rbp,rdx
   1400336c0:	mov    rax,QWORD PTR [rcx]
   1400336c3:	mov    rdx,rcx
   1400336c6:	mov    ecx,DWORD PTR [rax]
   1400336c8:	call   0x140019d78
   1400336cd:	add    rsp,0x20
   1400336d1:	pop    rbp
   1400336d2:	ret    
   1400336d3:	rex push rbp
   1400336d5:	sub    rsp,0x40
   1400336d9:	mov    rbp,rdx
   1400336dc:	lea    rax,[rbp+0x40]
   1400336e0:	mov    QWORD PTR [rsp+0x30],rax
   1400336e5:	mov    rax,QWORD PTR [rbp+0x90]
   1400336ec:	mov    QWORD PTR [rsp+0x28],rax
   1400336f1:	mov    rax,QWORD PTR [rbp+0x88]
   1400336f8:	mov    QWORD PTR [rsp+0x20],rax
   1400336fd:	mov    r9,QWORD PTR [rbp+0x80]
   140033704:	mov    r8,QWORD PTR [rbp+0x78]
   140033708:	mov    rdx,QWORD PTR [rbp+0x70]
   14003370c:	call   0x14001543c
   140033711:	add    rsp,0x40
   140033715:	pop    rbp
   140033716:	ret    
   140033717:	rex push rbp
   140033719:	sub    rsp,0x20
   14003371d:	mov    rbp,rdx
   140033720:	call   0x140016f2c
   140033725:	add    rsp,0x20
   140033729:	pop    rbp
   14003372a:	ret    
   14003372b:	rex push rbp
   14003372d:	sub    rsp,0x20
   140033731:	mov    rbp,rdx
   140033734:	cmp    DWORD PTR [rbp+0x80],0x0
   14003373b:	je     0x140033747
   14003373d:	mov    ecx,0x8
   140033742:	call   0x140020644
   140033747:	add    rsp,0x20
   14003374b:	pop    rbp
   14003374c:	ret    
   14003374d:	rex push rbp
   14003374f:	sub    rsp,0x20
   140033753:	mov    rbp,rdx
   140033756:	mov    ecx,0xe
   14003375b:	call   0x140020644
   140033760:	add    rsp,0x20
   140033764:	pop    rbp
   140033765:	ret    
   140033766:	rex push rbp
   140033768:	sub    rsp,0x20
   14003376c:	mov    rbp,rdx
   14003376f:	mov    ecx,0xd
   140033774:	call   0x140020644
   140033779:	add    rsp,0x20
   14003377d:	pop    rbp
   14003377e:	ret    
   14003377f:	int3   
   140033780:	int3   
   140033781:	int3   
   140033782:	int3   
   140033783:	int3   
   140033784:	int3   
   140033785:	int3   
   140033786:	rex push rbp
   140033788:	sub    rsp,0x20
   14003378c:	mov    rbp,rdx
   14003378f:	mov    ecx,0xc
   140033794:	call   0x140020644
   140033799:	add    rsp,0x20
   14003379d:	pop    rbp
   14003379e:	ret    
   14003379f:	rex push rbp
   1400337a1:	sub    rsp,0x20
   1400337a5:	mov    rbp,rdx
   1400337a8:	mov    ecx,0xd
   1400337ad:	call   0x140020644
   1400337b2:	add    rsp,0x20
   1400337b6:	pop    rbp
   1400337b7:	ret    
   1400337b8:	rex push rbp
   1400337ba:	sub    rsp,0x20
   1400337be:	mov    rbp,rdx
   1400337c1:	mov    ecx,0xc
   1400337c6:	call   0x140020644
   1400337cb:	add    rsp,0x20
   1400337cf:	pop    rbp
   1400337d0:	ret    
   1400337d1:	rex push rbp
   1400337d3:	sub    rsp,0x30
   1400337d7:	mov    rbp,rdx
   1400337da:	mov    ecx,0xc
   1400337df:	call   0x140020644
   1400337e4:	add    rsp,0x30
   1400337e8:	pop    rbp
   1400337e9:	ret    
   1400337ea:	int3   
   1400337eb:	int3   
   1400337ec:	int3   
   1400337ed:	int3   
   1400337ee:	int3   
   1400337ef:	int3   
   1400337f0:	int3   
   1400337f1:	rex push rbp
   1400337f3:	sub    rsp,0x30
   1400337f7:	mov    rbp,rdx
   1400337fa:	mov    ecx,0xc
   1400337ff:	call   0x140020644
   140033804:	add    rsp,0x30
   140033808:	pop    rbp
   140033809:	ret    
   14003380a:	int3   
   14003380b:	int3   
   14003380c:	int3   
   14003380d:	int3   
   14003380e:	int3   
   14003380f:	int3   
   140033810:	int3   
   140033811:	rex push rbp
   140033813:	sub    rsp,0x30
   140033817:	mov    rbp,rdx
   14003381a:	mov    rax,QWORD PTR [rbp+0x70]
   14003381e:	and    DWORD PTR [rax+0xc8],0xffffffef
   140033825:	add    rsp,0x30
   140033829:	pop    rbp
   14003382a:	ret    
   14003382b:	rex push rbp
   14003382d:	sub    rsp,0x20
   140033831:	mov    rbp,rdx
   140033834:	call   0x14001aba8
   140033839:	add    rsp,0x20
   14003383d:	pop    rbp
   14003383e:	ret    
   14003383f:	int3   
   140033840:	int3   
   140033841:	int3   
   140033842:	int3   
   140033843:	int3   
   140033844:	int3   
   140033845:	int3   
   140033846:	int3   
   140033847:	int3   
   140033848:	int3   
   140033849:	int3   
   14003384a:	int3   
   14003384b:	rex push rbp
   14003384d:	sub    rsp,0x20
   140033851:	mov    rbp,rdx
   140033854:	call   0x140017714
   140033859:	cmp    DWORD PTR [rax+0x100],0x0
   140033860:	jle    0x14003386d
   140033862:	call   0x140017714
   140033867:	dec    DWORD PTR [rax+0x100]
   14003386d:	add    rsp,0x20
   140033871:	pop    rbp
   140033872:	ret    
   140033873:	rex push rbp
   140033875:	sub    rsp,0x20
   140033879:	mov    rbp,rdx
   14003387c:	xor    eax,eax
   14003387e:	cmp    BYTE PTR [rbp+0x38],al
   140033881:	setne  al
   140033884:	add    rsp,0x20
   140033888:	pop    rbp
   140033889:	ret    
   14003388a:	rex push rbp
   14003388c:	sub    rsp,0x20
   140033890:	mov    rbp,rdx
   140033893:	mov    QWORD PTR [rbp+0x70],rcx
   140033897:	mov    QWORD PTR [rbp+0x68],rcx
   14003389b:	mov    rax,QWORD PTR [rbp+0x68]
   14003389f:	mov    rcx,QWORD PTR [rax]
   1400338a2:	mov    QWORD PTR [rbp+0x28],rcx
   1400338a6:	mov    DWORD PTR [rbp+0x20],0x0
   1400338ad:	mov    rax,QWORD PTR [rbp+0x28]
   1400338b1:	mov    r8d,0xe06d7363
   1400338b7:	cmp    DWORD PTR [rax],r8d
   1400338ba:	jne    0x140033909
   1400338bc:	mov    rax,QWORD PTR [rbp+0x28]
   1400338c0:	cmp    DWORD PTR [rax+0x18],0x4
   1400338c4:	jne    0x140033909
   1400338c6:	mov    rax,QWORD PTR [rbp+0x28]
   1400338ca:	cmp    DWORD PTR [rax+0x20],0x19930520
   1400338d1:	je     0x1400338ed
   1400338d3:	mov    rax,QWORD PTR [rbp+0x28]
   1400338d7:	cmp    DWORD PTR [rax+0x20],0x19930521
   1400338de:	je     0x1400338ed
   1400338e0:	mov    rax,QWORD PTR [rbp+0x28]
   1400338e4:	cmp    DWORD PTR [rax+0x20],0x19930522
   1400338eb:	jne    0x140033909
   1400338ed:	mov    rdx,QWORD PTR [rbp+0x28]
   1400338f1:	mov    rax,QWORD PTR [rbp+0xd8]
   1400338f8:	mov    rcx,QWORD PTR [rax+0x28]
   1400338fc:	cmp    QWORD PTR [rdx+0x28],rcx
   140033900:	jne    0x140033909
   140033902:	mov    DWORD PTR [rbp+0x20],0x1
   140033909:	mov    rax,QWORD PTR [rbp+0x28]
   14003390d:	cmp    DWORD PTR [rax],r8d
   140033910:	jne    0x14003396d
   140033912:	mov    rax,QWORD PTR [rbp+0x28]
   140033916:	cmp    DWORD PTR [rax+0x18],0x4
   14003391a:	jne    0x14003396d
   14003391c:	mov    rax,QWORD PTR [rbp+0x28]
   140033920:	cmp    DWORD PTR [rax+0x20],0x19930520
   140033927:	je     0x140033943
   140033929:	mov    rax,QWORD PTR [rbp+0x28]
   14003392d:	cmp    DWORD PTR [rax+0x20],0x19930521
   140033934:	je     0x140033943
   140033936:	mov    rax,QWORD PTR [rbp+0x28]
   14003393a:	cmp    DWORD PTR [rax+0x20],0x19930522
   140033941:	jne    0x14003396d
   140033943:	mov    rax,QWORD PTR [rbp+0x28]
   140033947:	cmp    QWORD PTR [rax+0x30],0x0
   14003394c:	jne    0x14003396d
   14003394e:	call   0x140017714
   140033953:	mov    DWORD PTR [rax+0x2c0],0x1
   14003395d:	mov    DWORD PTR [rbp+0x20],0x1
   140033964:	mov    DWORD PTR [rbp+0x30],0x1
   14003396b:	jmp    0x140033974
   14003396d:	mov    DWORD PTR [rbp+0x30],0x0
   140033974:	mov    eax,DWORD PTR [rbp+0x30]
   140033977:	add    rsp,0x20
   14003397b:	pop    rbp
   14003397c:	ret    
   14003397d:	int3   
   14003397e:	int3   
   14003397f:	int3   
   140033980:	int3   
   140033981:	int3   
   140033982:	int3   
   140033983:	int3   
   140033984:	int3   
   140033985:	int3   
   140033986:	int3   
   140033987:	int3   
   140033988:	int3   
   140033989:	int3   
   14003398a:	rex push rbx
   14003398c:	push   rbp
   14003398d:	sub    rsp,0x28
   140033991:	mov    rbp,rdx
   140033994:	mov    rcx,QWORD PTR [rbp+0x50]
   140033998:	call   0x1400156d4
   14003399d:	cmp    DWORD PTR [rbp+0x20],0x0
   1400339a1:	jne    0x1400339ed
   1400339a3:	mov    r8d,0xe06d7363
   1400339a9:	mov    rbx,QWORD PTR [rbp+0xd8]
   1400339b0:	cmp    DWORD PTR [rbx],r8d
   1400339b3:	jne    0x1400339ed
   1400339b5:	cmp    DWORD PTR [rbx+0x18],0x4
   1400339b9:	jne    0x1400339ed
   1400339bb:	cmp    DWORD PTR [rbx+0x20],0x19930520
   1400339c2:	je     0x1400339d6
   1400339c4:	cmp    DWORD PTR [rbx+0x20],0x19930521
   1400339cb:	je     0x1400339d6
   1400339cd:	cmp    DWORD PTR [rbx+0x20],0x19930522
   1400339d4:	jne    0x1400339ed
   1400339d6:	mov    rcx,QWORD PTR [rbx+0x28]
   1400339da:	call   0x1400156a0
   1400339df:	test   eax,eax
   1400339e1:	je     0x1400339ed
   1400339e3:	mov    dl,0x1
   1400339e5:	mov    rcx,rbx
   1400339e8:	call   0x14001ad88
   1400339ed:	call   0x140017714
   1400339f2:	mov    rcx,QWORD PTR [rbp+0xe0]
   1400339f9:	mov    QWORD PTR [rax+0xf0],rcx
   140033a00:	call   0x140017714
   140033a05:	mov    rcx,QWORD PTR [rbp+0xe8]
   140033a0c:	mov    QWORD PTR [rax+0xf8],rcx
   140033a13:	add    rsp,0x28
   140033a17:	pop    rbp
   140033a18:	pop    rbx
   140033a19:	ret    
   140033a1a:	int3   
   140033a1b:	int3   
   140033a1c:	int3   
   140033a1d:	int3   
   140033a1e:	int3   
   140033a1f:	int3   
   140033a20:	rex push rbp
   140033a22:	sub    rsp,0x20
   140033a26:	mov    rbp,rdx
   140033a29:	mov    rax,QWORD PTR [rcx]
   140033a2c:	xor    ecx,ecx
   140033a2e:	cmp    DWORD PTR [rax],0xc0000005
   140033a34:	sete   cl
   140033a37:	mov    eax,ecx
   140033a39:	mov    eax,ecx
   140033a3b:	add    rsp,0x20
   140033a3f:	pop    rbp
   140033a40:	ret    
   140033a41:	rex push rbp
   140033a43:	sub    rsp,0x20
   140033a47:	mov    rbp,rdx
   140033a4a:	mov    rcx,QWORD PTR [rip+0x15f0f]        # 0x140049960
   140033a51:	call   QWORD PTR [rip+0x2a01]        # 0x140036458
   140033a57:	add    rsp,0x20
   140033a5b:	pop    rbp
   140033a5c:	ret    
   140033a5d:	rex push rbp
   140033a5f:	sub    rsp,0x30
   140033a63:	mov    rbp,rdx
   140033a66:	cmp    DWORD PTR [rbp+0x70],0x0
   140033a6a:	je     0x140033a73
   140033a6c:	xor    ecx,ecx
   140033a6e:	call   0x140020644
   140033a73:	add    rsp,0x30
   140033a77:	pop    rbp
   140033a78:	ret    
   140033a79:	rex push rbp
   140033a7b:	sub    rsp,0x30
   140033a7f:	mov    rbp,rdx
   140033a82:	mov    ecx,DWORD PTR [rbp+0x60]
   140033a85:	call   0x140025778
   140033a8a:	add    rsp,0x30
   140033a8e:	pop    rbp
   140033a8f:	ret    
   140033a90:	rex push rbp
   140033a92:	sub    rsp,0x20
   140033a96:	mov    rbp,rdx
   140033a99:	mov    ecx,0xa
   140033a9e:	call   0x140020644
   140033aa3:	add    rsp,0x20
   140033aa7:	pop    rbp
   140033aa8:	ret    
   140033aa9:	rex push rbp
   140033aab:	sub    rsp,0x20
   140033aaf:	mov    rbp,rdx
   140033ab2:	mov    ecx,0x1
   140033ab7:	call   0x140020644
   140033abc:	add    rsp,0x20
   140033ac0:	pop    rbp
   140033ac1:	ret    
   140033ac2:	rex push rbp
   140033ac4:	sub    rsp,0x20
   140033ac8:	mov    rbp,rdx
   140033acb:	movsxd rcx,DWORD PTR [rbp+0x20]
   140033acf:	mov    rax,rcx
   140033ad2:	mov    rdx,QWORD PTR [rip+0x1bb27]        # 0x14004f600
   140033ad9:	mov    rdx,QWORD PTR [rdx+rcx*8]
   140033add:	call   0x14002475c
   140033ae2:	add    rsp,0x20
   140033ae6:	pop    rbp
   140033ae7:	ret    
   140033ae8:	int3   
   140033ae9:	int3   
   140033aea:	int3   
   140033aeb:	int3   
   140033aec:	int3   
   140033aed:	int3   
   140033aee:	int3   
   140033aef:	int3   
   140033af0:	int3   
   140033af1:	int3   
   140033af2:	rex push rbp
   140033af4:	sub    rsp,0x20
   140033af8:	mov    rbp,rdx
   140033afb:	mov    ecx,0x1
   140033b00:	call   0x140020644
   140033b05:	add    rsp,0x20
   140033b09:	pop    rbp
   140033b0a:	ret    
   140033b0b:	rex push rbp
   140033b0d:	sub    rsp,0x30
   140033b11:	mov    rbp,rdx
   140033b14:	mov    rcx,QWORD PTR [rbp+0x40]
   140033b18:	call   0x140024704
   140033b1d:	add    rsp,0x30
   140033b21:	pop    rbp
   140033b22:	ret    
   140033b23:	rex push rbp
   140033b25:	sub    rsp,0x30
   140033b29:	mov    rbp,rdx
   140033b2c:	mov    ecx,DWORD PTR [rbp+0x50]
   140033b2f:	call   0x140025778
   140033b34:	add    rsp,0x30
   140033b38:	pop    rbp
   140033b39:	ret    
   140033b3a:	int3   
   140033b3b:	int3   
   140033b3c:	int3   
   140033b3d:	int3   
   140033b3e:	int3   
   140033b3f:	int3   
   140033b40:	rex push rbp
   140033b42:	sub    rsp,0x20
   140033b46:	mov    rbp,rdx
   140033b49:	mov    rcx,QWORD PTR [rbp+0x40]
   140033b4d:	call   0x140005520
   140033b52:	add    rsp,0x20
   140033b56:	pop    rbp
   140033b57:	ret    
   140033b58:	int3   
   140033b59:	int3   
   140033b5a:	int3   
   140033b5b:	int3   
   140033b5c:	int3   
   140033b5d:	int3   
   140033b5e:	int3   
   140033b5f:	int3   
   140033b60:	rex push rbp
   140033b62:	sub    rsp,0x20
   140033b66:	mov    rbp,rdx
   140033b69:	mov    rcx,QWORD PTR [rbp+0x40]
   140033b6d:	add    rcx,0x58
   140033b71:	call   0x140001260
   140033b76:	add    rsp,0x20
   140033b7a:	pop    rbp
   140033b7b:	ret    
   140033b7c:	int3   
   140033b7d:	int3   
   140033b7e:	int3   
   140033b7f:	int3   
   140033b80:	rex push rbp
   140033b82:	sub    rsp,0x20
   140033b86:	mov    rbp,rdx
   140033b89:	mov    rcx,QWORD PTR [rbp+0x40]
   140033b8d:	add    rcx,0x80
   140033b94:	call   0x140001260
   140033b99:	add    rsp,0x20
   140033b9d:	pop    rbp
   140033b9e:	ret    
   140033b9f:	int3   
   140033ba0:	rex push rbp
   140033ba2:	sub    rsp,0x20
   140033ba6:	mov    rbp,rdx
   140033ba9:	mov    rcx,QWORD PTR [rbp+0x40]
   140033bad:	add    rcx,0xa8
   140033bb4:	call   0x140001260
   140033bb9:	add    rsp,0x20
   140033bbd:	pop    rbp
   140033bbe:	ret    
   140033bbf:	int3   
   140033bc0:	rex push rbp
   140033bc2:	sub    rsp,0x20
   140033bc6:	mov    rbp,rdx
   140033bc9:	mov    rcx,QWORD PTR [rbp+0x40]
   140033bcd:	add    rcx,0xd0
   140033bd4:	call   0x140031360
   140033bd9:	add    rsp,0x20
   140033bdd:	pop    rbp
   140033bde:	ret    
   140033bdf:	int3   
   140033be0:	int3   
   140033be1:	int3   
   140033be2:	int3   
   140033be3:	int3   
   140033be4:	int3   
   140033be5:	int3   
   140033be6:	int3   
   140033be7:	int3   
   140033be8:	int3   
   140033be9:	int3   
   140033bea:	int3   
   140033beb:	int3   
   140033bec:	int3   
   140033bed:	int3   
   140033bee:	int3   
   140033bef:	int3   
   140033bf0:	rex push rbp
   140033bf2:	sub    rsp,0x20
   140033bf6:	mov    rbp,rdx
   140033bf9:	mov    eax,DWORD PTR [rbp+0x558]
   140033bff:	and    eax,0x1
   140033c02:	test   eax,eax
   140033c04:	je     0x140033c19
   140033c06:	and    DWORD PTR [rbp+0x558],0xfffffffe
   140033c0d:	mov    rcx,QWORD PTR [rbp+0x598]
   140033c14:	call   0x140001260
   140033c19:	add    rsp,0x20
   140033c1d:	pop    rbp
   140033c1e:	ret    
   140033c1f:	int3   
   140033c20:	rex push rbp
   140033c22:	sub    rsp,0x20
   140033c26:	mov    rbp,rdx
   140033c29:	lea    rcx,[rbp+0x1e0]
   140033c30:	call   0x14002b8b0
   140033c35:	add    rsp,0x20
   140033c39:	pop    rbp
   140033c3a:	ret    
   140033c3b:	int3   
   140033c3c:	int3   
   140033c3d:	int3   
   140033c3e:	int3   
   140033c3f:	int3   
   140033c40:	rex push rbp
   140033c42:	sub    rsp,0x20
   140033c46:	mov    rbp,rdx
   140033c49:	lea    rcx,[rbp+0x440]
   140033c50:	call   0x14002b8b0
   140033c55:	add    rsp,0x20
   140033c59:	pop    rbp
   140033c5a:	ret    
   140033c5b:	int3   
   140033c5c:	int3   
   140033c5d:	int3   
   140033c5e:	int3   
   140033c5f:	int3   
   140033c60:	rex push rbp
   140033c62:	sub    rsp,0x20
   140033c66:	mov    rbp,rdx
   140033c69:	lea    rcx,[rbp+0x530]
   140033c70:	call   0x140001260
   140033c75:	add    rsp,0x20
   140033c79:	pop    rbp
   140033c7a:	ret    
   140033c7b:	int3   
   140033c7c:	int3   
   140033c7d:	int3   
   140033c7e:	int3   
   140033c7f:	int3   
   140033c80:	rex push rbp
   140033c82:	sub    rsp,0x20
   140033c86:	mov    rbp,rdx
   140033c89:	lea    rcx,[rbp+0x350]
   140033c90:	call   0x14002b8b0
   140033c95:	add    rsp,0x20
   140033c99:	pop    rbp
   140033c9a:	ret    
   140033c9b:	int3   
   140033c9c:	int3   
   140033c9d:	int3   
   140033c9e:	int3   
   140033c9f:	int3   
   140033ca0:	rex push rbp
   140033ca2:	sub    rsp,0x20
   140033ca6:	mov    rbp,rdx
   140033ca9:	lea    rcx,[rbp+0x2d0]
   140033cb0:	call   0x140029640
   140033cb5:	add    rsp,0x20
   140033cb9:	pop    rbp
   140033cba:	ret    
   140033cbb:	int3   
   140033cbc:	int3   
   140033cbd:	int3   
   140033cbe:	int3   
   140033cbf:	int3   
   140033cc0:	rex push rbp
   140033cc2:	sub    rsp,0x20
   140033cc6:	mov    rbp,rdx
   140033cc9:	lea    rcx,[rbp+0xf0]
   140033cd0:	call   0x14002b8b0
   140033cd5:	add    rsp,0x20
   140033cd9:	pop    rbp
   140033cda:	ret    
   140033cdb:	int3   
   140033cdc:	int3   
   140033cdd:	int3   
   140033cde:	int3   
   140033cdf:	int3   
   140033ce0:	rex push rbp
   140033ce2:	sub    rsp,0x20
   140033ce6:	mov    rbp,rdx
   140033ce9:	lea    rcx,[rbp+0x50]
   140033ced:	call   0x140029640
   140033cf2:	add    rsp,0x20
   140033cf6:	pop    rbp
   140033cf7:	ret    
   140033cf8:	int3   
   140033cf9:	int3   
   140033cfa:	int3   
   140033cfb:	int3   
   140033cfc:	int3   
   140033cfd:	int3   
   140033cfe:	int3   
   140033cff:	int3   
   140033d00:	rex push rbp
   140033d02:	sub    rsp,0x20
   140033d06:	mov    rbp,rdx
   140033d09:	mov    rcx,QWORD PTR [rbp+0x238]
   140033d10:	call   0x140001260
   140033d15:	add    rsp,0x20
   140033d19:	pop    rbp
   140033d1a:	ret    
   140033d1b:	int3   
   140033d1c:	int3   
   140033d1d:	int3   
   140033d1e:	int3   
   140033d1f:	int3   
   140033d20:	rex push rbp
   140033d22:	sub    rsp,0x20
   140033d26:	mov    rbp,rdx
   140033d29:	lea    rcx,[rbp+0x30]
   140033d2d:	call   0x1400297e0
   140033d32:	add    rsp,0x20
   140033d36:	pop    rbp
   140033d37:	ret    
   140033d38:	int3   
   140033d39:	int3   
   140033d3a:	int3   
   140033d3b:	int3   
   140033d3c:	int3   
   140033d3d:	int3   
   140033d3e:	int3   
   140033d3f:	int3   
   140033d40:	rex push rbp
   140033d42:	sub    rsp,0x20
   140033d46:	mov    rbp,rdx
   140033d49:	lea    rcx,[rbp+0x100]
   140033d50:	call   0x140001260
   140033d55:	add    rsp,0x20
   140033d59:	pop    rbp
   140033d5a:	ret    
   140033d5b:	int3   
   140033d5c:	int3   
   140033d5d:	int3   
   140033d5e:	int3   
   140033d5f:	int3   
   140033d60:	rex push rbp
   140033d62:	sub    rsp,0x20
   140033d66:	mov    rbp,rdx
   140033d69:	lea    rcx,[rbp+0x198]
   140033d70:	call   0x140031360
   140033d75:	add    rsp,0x20
   140033d79:	pop    rbp
   140033d7a:	ret    
   140033d7b:	int3   
   140033d7c:	int3   
   140033d7d:	int3   
   140033d7e:	int3   
   140033d7f:	int3   
   140033d80:	rex push rbp
   140033d82:	sub    rsp,0x20
   140033d86:	mov    rbp,rdx
   140033d89:	mov    rcx,QWORD PTR [rbp+0x40]
   140033d8d:	call   0x140005520
   140033d92:	add    rsp,0x20
   140033d96:	pop    rbp
   140033d97:	ret    
   140033d98:	int3   
   140033d99:	int3   
   140033d9a:	int3   
   140033d9b:	int3   
   140033d9c:	int3   
   140033d9d:	int3   
   140033d9e:	int3   
   140033d9f:	int3   
   140033da0:	rex push rbp
   140033da2:	sub    rsp,0x20
   140033da6:	mov    rbp,rdx
   140033da9:	lea    rcx,[rbp+0x1b0]
   140033db0:	call   0x14002b8b0
   140033db5:	add    rsp,0x20
   140033db9:	pop    rbp
   140033dba:	ret    
   140033dbb:	int3   
   140033dbc:	int3   
   140033dbd:	int3   
   140033dbe:	int3   
   140033dbf:	int3   
   140033dc0:	rex push rbp
   140033dc2:	sub    rsp,0x20
   140033dc6:	mov    rbp,rdx
   140033dc9:	lea    rcx,[rbp+0xc0]
   140033dd0:	call   0x14002b8b0
   140033dd5:	add    rsp,0x20
   140033dd9:	pop    rbp
   140033dda:	ret    
   140033ddb:	int3   
   140033ddc:	int3   
   140033ddd:	int3   
   140033dde:	int3   
   140033ddf:	int3   
   140033de0:	rex push rbp
   140033de2:	sub    rsp,0x20
   140033de6:	mov    rbp,rdx
   140033de9:	lea    rcx,[rbp+0x30]
   140033ded:	call   0x140029640
   140033df2:	add    rsp,0x20
   140033df6:	pop    rbp
   140033df7:	ret    
   140033df8:	int3   
   140033df9:	int3   
   140033dfa:	int3   
   140033dfb:	int3   
   140033dfc:	int3   
   140033dfd:	int3   
   140033dfe:	int3   
   140033dff:	int3   
   140033e00:	rex push rbp
   140033e02:	sub    rsp,0x20
   140033e06:	mov    rbp,rdx
   140033e09:	mov    eax,DWORD PTR [rbp+0x2a0]
   140033e0f:	and    eax,0x1
   140033e12:	test   eax,eax
   140033e14:	je     0x140033e29
   140033e16:	and    DWORD PTR [rbp+0x2a0],0xfffffffe
   140033e1d:	mov    rcx,QWORD PTR [rbp+0x2d8]
   140033e24:	call   0x140001260
   140033e29:	add    rsp,0x20
   140033e2d:	pop    rbp
   140033e2e:	ret    
   140033e2f:	int3   
   140033e30:	int3   
   140033e31:	int3   
   140033e32:	int3   
   140033e33:	int3   
   140033e34:	int3   
   140033e35:	int3   
   140033e36:	int3   
   140033e37:	int3   
   140033e38:	int3   
   140033e39:	int3   
   140033e3a:	int3   
   140033e3b:	int3   
   140033e3c:	int3   
   140033e3d:	int3   
   140033e3e:	int3   
   140033e3f:	int3   
   140033e40:	rex push rbp
   140033e42:	sub    rsp,0x20
   140033e46:	mov    rbp,rdx
   140033e49:	mov    rcx,QWORD PTR [rbp+0x188]
   140033e50:	call   0x140001260
   140033e55:	add    rsp,0x20
   140033e59:	pop    rbp
   140033e5a:	ret    
   140033e5b:	int3   
   140033e5c:	int3   
   140033e5d:	int3   
   140033e5e:	int3   
   140033e5f:	int3   
   140033e60:	rex push rbp
   140033e62:	sub    rsp,0x20
   140033e66:	mov    rbp,rdx
   140033e69:	lea    rcx,[rbp+0x40]
   140033e6d:	call   0x1400297e0
   140033e72:	add    rsp,0x20
   140033e76:	pop    rbp
   140033e77:	ret    
   140033e78:	int3   
   140033e79:	int3   
   140033e7a:	int3   
   140033e7b:	int3   
   140033e7c:	int3   
   140033e7d:	int3   
   140033e7e:	int3   
   140033e7f:	int3   
   140033e80:	rex push rbp
   140033e82:	sub    rsp,0x20
   140033e86:	mov    rbp,rdx
   140033e89:	mov    rcx,QWORD PTR [rbp+0x40]
   140033e8d:	add    rcx,0x8
   140033e91:	call   0x140001260
   140033e96:	add    rsp,0x20
   140033e9a:	pop    rbp
   140033e9b:	ret    
   140033e9c:	int3   
   140033e9d:	int3   
   140033e9e:	int3   
   140033e9f:	int3   
   140033ea0:	int3   
   140033ea1:	int3   
   140033ea2:	int3   
   140033ea3:	int3   
   140033ea4:	int3   
   140033ea5:	int3   
   140033ea6:	int3   
   140033ea7:	int3   
   140033ea8:	int3   
   140033ea9:	int3   
   140033eaa:	int3   
   140033eab:	int3   
   140033eac:	int3   
   140033ead:	int3   
   140033eae:	int3   
   140033eaf:	int3   
   140033eb0:	rex push rbp
   140033eb2:	sub    rsp,0x20
   140033eb6:	mov    rbp,rdx
   140033eb9:	lea    rcx,[rbp+0x120]
   140033ec0:	call   0x1400297e0
   140033ec5:	add    rsp,0x20
   140033ec9:	pop    rbp
   140033eca:	ret    
   140033ecb:	int3   
   140033ecc:	int3   
   140033ecd:	int3   
   140033ece:	int3   
   140033ecf:	int3   
   140033ed0:	rex push rbp
   140033ed2:	sub    rsp,0x20
   140033ed6:	mov    rbp,rdx
   140033ed9:	lea    rcx,[rbp+0x2f0]
   140033ee0:	call   0x14002a220
   140033ee5:	add    rsp,0x20
   140033ee9:	pop    rbp
   140033eea:	ret    
   140033eeb:	int3   
   140033eec:	int3   
   140033eed:	int3   
   140033eee:	int3   
   140033eef:	int3   
   140033ef0:	rex push rbp
   140033ef2:	sub    rsp,0x20
   140033ef6:	mov    rbp,rdx
   140033ef9:	lea    rcx,[rbp+0x30]
   140033efd:	call   0x14002b8b0
   140033f02:	add    rsp,0x20
   140033f06:	pop    rbp
   140033f07:	ret    
   140033f08:	int3   
   140033f09:	int3   
   140033f0a:	int3   
   140033f0b:	int3   
   140033f0c:	int3   
   140033f0d:	int3   
   140033f0e:	int3   
   140033f0f:	int3   
   140033f10:	rex push rbp
   140033f12:	sub    rsp,0x20
   140033f16:	mov    rbp,rdx
   140033f19:	lea    rcx,[rbp+0x1d0]
   140033f20:	call   0x14002b8b0
   140033f25:	add    rsp,0x20
   140033f29:	pop    rbp
   140033f2a:	ret    
   140033f2b:	int3   
   140033f2c:	int3   
   140033f2d:	int3   
   140033f2e:	int3   
   140033f2f:	int3   
   140033f30:	rex push rbp
   140033f32:	sub    rsp,0x20
   140033f36:	mov    rbp,rdx
   140033f39:	lea    rcx,[rbp+0x3e0]
   140033f40:	call   0x140001260
   140033f45:	add    rsp,0x20
   140033f49:	pop    rbp
   140033f4a:	ret    
   140033f4b:	int3   
   140033f4c:	int3   
   140033f4d:	int3   
   140033f4e:	int3   
   140033f4f:	int3   
   140033f50:	rex push rbp
   140033f52:	sub    rsp,0x20
   140033f56:	mov    rbp,rdx
   140033f59:	lea    rcx,[rbp+0x2c0]
   140033f60:	call   0x140001260
   140033f65:	add    rsp,0x20
   140033f69:	pop    rbp
   140033f6a:	ret    
   140033f6b:	int3   
   140033f6c:	int3   
   140033f6d:	int3   
   140033f6e:	int3   
   140033f6f:	int3   
   140033f70:	rex push rbp
   140033f72:	sub    rsp,0x20
   140033f76:	mov    rbp,rdx
   140033f79:	mov    eax,DWORD PTR [rbp+0x408]
   140033f7f:	and    eax,0x1
   140033f82:	test   eax,eax
   140033f84:	je     0x140033f99
   140033f86:	and    DWORD PTR [rbp+0x408],0xfffffffe
   140033f8d:	mov    rcx,QWORD PTR [rbp+0x448]
   140033f94:	call   0x140001260
   140033f99:	add    rsp,0x20
   140033f9d:	pop    rbp
   140033f9e:	ret    
   140033f9f:	int3   
   140033fa0:	int3   
   140033fa1:	int3   
   140033fa2:	int3   
   140033fa3:	int3   
   140033fa4:	int3   
   140033fa5:	int3   
   140033fa6:	int3   
   140033fa7:	int3   
   140033fa8:	int3   
   140033fa9:	int3   
   140033faa:	int3   
   140033fab:	int3   
   140033fac:	int3   
   140033fad:	int3   
   140033fae:	int3   
   140033faf:	int3   
   140033fb0:	rex push rbp
   140033fb2:	sub    rsp,0x20
   140033fb6:	mov    rbp,rdx
   140033fb9:	mov    rcx,QWORD PTR [rbp+0x168]
   140033fc0:	call   0x140001260
   140033fc5:	add    rsp,0x20
   140033fc9:	pop    rbp
   140033fca:	ret    
   140033fcb:	int3   
   140033fcc:	int3   
   140033fcd:	int3   
   140033fce:	int3   
   140033fcf:	int3   
   140033fd0:	rex push rbp
   140033fd2:	sub    rsp,0x20
   140033fd6:	mov    rbp,rdx
   140033fd9:	lea    rcx,[rbp+0x30]
   140033fdd:	call   0x1400297e0
   140033fe2:	add    rsp,0x20
   140033fe6:	pop    rbp
   140033fe7:	ret    
   140033fe8:	int3   
   140033fe9:	int3   
   140033fea:	int3   
   140033feb:	int3   
   140033fec:	int3   
   140033fed:	int3   
   140033fee:	int3   
   140033fef:	int3   
   140033ff0:	rex push rbp
   140033ff2:	sub    rsp,0x20
   140033ff6:	mov    rbp,rdx
   140033ff9:	lea    rcx,[rbp+0x100]
   140034000:	call   0x140001260
   140034005:	add    rsp,0x20
   140034009:	pop    rbp
   14003400a:	ret    
   14003400b:	int3   
   14003400c:	int3   
   14003400d:	int3   
   14003400e:	int3   
   14003400f:	int3   
   140034010:	rex push rbp
   140034012:	sub    rsp,0x20
   140034016:	mov    rbp,rdx
   140034019:	mov    rcx,QWORD PTR [rbp+0x40]
   14003401d:	call   0x14002b530
   140034022:	add    rsp,0x20
   140034026:	pop    rbp
   140034027:	ret    
   140034028:	int3   
   140034029:	int3   
   14003402a:	int3   
   14003402b:	int3   
   14003402c:	int3   
   14003402d:	int3   
   14003402e:	int3   
   14003402f:	int3   
   140034030:	rex push rbp
   140034032:	sub    rsp,0x20
   140034036:	mov    rbp,rdx
   140034039:	mov    rcx,QWORD PTR [rbp+0x40]
   14003403d:	add    rcx,0x70
   140034041:	call   0x140001260
   140034046:	add    rsp,0x20
   14003404a:	pop    rbp
   14003404b:	ret    
   14003404c:	int3   
   14003404d:	int3   
   14003404e:	int3   
   14003404f:	int3   
   140034050:	rex push rbp
   140034052:	sub    rsp,0x20
   140034056:	mov    rbp,rdx
   140034059:	mov    rcx,QWORD PTR [rbp+0x40]
   14003405d:	add    rcx,0x98
   140034064:	call   0x140001260
   140034069:	add    rsp,0x20
   14003406d:	pop    rbp
   14003406e:	ret    
   14003406f:	int3   
   140034070:	rex push rbp
   140034072:	sub    rsp,0x20
   140034076:	mov    rbp,rdx
   140034079:	lea    rcx,[rbp+0x20]
   14003407d:	call   0x140001260
   140034082:	add    rsp,0x20
   140034086:	pop    rbp
   140034087:	ret    
   140034088:	int3   
   140034089:	int3   
   14003408a:	int3   
   14003408b:	int3   
   14003408c:	int3   
   14003408d:	int3   
   14003408e:	int3   
   14003408f:	int3   
   140034090:	rex push rbp
   140034092:	sub    rsp,0x20
   140034096:	mov    rbp,rdx
   140034099:	mov    eax,DWORD PTR [rbp+0x48]
   14003409c:	and    eax,0x1
   14003409f:	test   eax,eax
   1400340a1:	je     0x1400340b3
   1400340a3:	and    DWORD PTR [rbp+0x48],0xfffffffe
   1400340a7:	mov    rcx,QWORD PTR [rbp+0x80]
   1400340ae:	call   0x140001260
   1400340b3:	add    rsp,0x20
   1400340b7:	pop    rbp
   1400340b8:	ret    
   1400340b9:	int3   
   1400340ba:	int3   
   1400340bb:	int3   
   1400340bc:	int3   
   1400340bd:	int3   
   1400340be:	int3   
   1400340bf:	int3   
   1400340c0:	rex push rbp
   1400340c2:	sub    rsp,0x20
   1400340c6:	mov    rbp,rdx
   1400340c9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400340cd:	call   0x14002a810
   1400340d2:	add    rsp,0x20
   1400340d6:	pop    rbp
   1400340d7:	ret    
   1400340d8:	int3   
   1400340d9:	int3   
   1400340da:	int3   
   1400340db:	int3   
   1400340dc:	int3   
   1400340dd:	int3   
   1400340de:	int3   
   1400340df:	int3   
   1400340e0:	rex push rbp
   1400340e2:	sub    rsp,0x20
   1400340e6:	mov    rbp,rdx
   1400340e9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400340ed:	add    rcx,0x38
   1400340f1:	call   0x140001260
   1400340f6:	add    rsp,0x20
   1400340fa:	pop    rbp
   1400340fb:	ret    
   1400340fc:	int3   
   1400340fd:	int3   
   1400340fe:	int3   
   1400340ff:	int3   
   140034100:	rex push rbp
   140034102:	sub    rsp,0x20
   140034106:	mov    rbp,rdx
   140034109:	lea    rcx,[rbp+0x28]
   14003410d:	call   0x140001260
   140034112:	add    rsp,0x20
   140034116:	pop    rbp
   140034117:	ret    
   140034118:	int3   
   140034119:	int3   
   14003411a:	int3   
   14003411b:	int3   
   14003411c:	int3   
   14003411d:	int3   
   14003411e:	int3   
   14003411f:	int3   
   140034120:	rex push rbp
   140034122:	sub    rsp,0x20
   140034126:	mov    rbp,rdx
   140034129:	lea    rcx,[rbp+0x28]
   14003412d:	call   0x140001260
   140034132:	add    rsp,0x20
   140034136:	pop    rbp
   140034137:	ret    
   140034138:	int3   
   140034139:	int3   
   14003413a:	int3   
   14003413b:	int3   
   14003413c:	int3   
   14003413d:	int3   
   14003413e:	int3   
   14003413f:	int3   
   140034140:	rex push rbp
   140034142:	sub    rsp,0x20
   140034146:	mov    rbp,rdx
   140034149:	lea    rcx,[rbp+0x50]
   14003414d:	call   0x140014718
   140034152:	add    rsp,0x20
   140034156:	pop    rbp
   140034157:	ret    
   140034158:	int3   
   140034159:	int3   
   14003415a:	int3   
   14003415b:	int3   
   14003415c:	int3   
   14003415d:	int3   
   14003415e:	int3   
   14003415f:	int3   
   140034160:	rex push rbp
   140034162:	sub    rsp,0x20
   140034166:	mov    rbp,rdx
   140034169:	lea    rcx,[rbp+0x28]
   14003416d:	call   0x140001260
   140034172:	add    rsp,0x20
   140034176:	pop    rbp
   140034177:	ret    
   140034178:	int3   
   140034179:	int3   
   14003417a:	int3   
   14003417b:	int3   
   14003417c:	int3   
   14003417d:	int3   
   14003417e:	int3   
   14003417f:	int3   
   140034180:	rex push rbp
   140034182:	sub    rsp,0x20
   140034186:	mov    rbp,rdx
   140034189:	lea    rcx,[rbp+0x50]
   14003418d:	call   0x140014718
   140034192:	add    rsp,0x20
   140034196:	pop    rbp
   140034197:	ret    
   140034198:	int3   
   140034199:	int3   
   14003419a:	int3   
   14003419b:	int3   
   14003419c:	int3   
   14003419d:	int3   
   14003419e:	int3   
   14003419f:	int3   
   1400341a0:	rex push rbp
   1400341a2:	sub    rsp,0x20
   1400341a6:	mov    rbp,rdx
   1400341a9:	lea    rcx,[rbp+0x28]
   1400341ad:	call   0x140001260
   1400341b2:	add    rsp,0x20
   1400341b6:	pop    rbp
   1400341b7:	ret    
   1400341b8:	int3   
   1400341b9:	int3   
   1400341ba:	int3   
   1400341bb:	int3   
   1400341bc:	int3   
   1400341bd:	int3   
   1400341be:	int3   
   1400341bf:	int3   
   1400341c0:	rex push rbp
   1400341c2:	sub    rsp,0x20
   1400341c6:	mov    rbp,rdx
   1400341c9:	lea    rcx,[rbp+0x50]
   1400341cd:	call   0x140014718
   1400341d2:	add    rsp,0x20
   1400341d6:	pop    rbp
   1400341d7:	ret    
   1400341d8:	int3   
   1400341d9:	int3   
   1400341da:	int3   
   1400341db:	int3   
   1400341dc:	int3   
   1400341dd:	int3   
   1400341de:	int3   
   1400341df:	int3   
   1400341e0:	rex push rbp
   1400341e2:	sub    rsp,0x20
   1400341e6:	mov    rbp,rdx
   1400341e9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400341ed:	call   0x14002b530
   1400341f2:	add    rsp,0x20
   1400341f6:	pop    rbp
   1400341f7:	ret    
   1400341f8:	int3   
   1400341f9:	int3   
   1400341fa:	int3   
   1400341fb:	int3   
   1400341fc:	int3   
   1400341fd:	int3   
   1400341fe:	int3   
   1400341ff:	int3   
   140034200:	rex push rbp
   140034202:	sub    rsp,0x20
   140034206:	mov    rbp,rdx
   140034209:	mov    rcx,QWORD PTR [rbp+0x40]
   14003420d:	call   0x14002b530
   140034212:	add    rsp,0x20
   140034216:	pop    rbp
   140034217:	ret    
   140034218:	int3   
   140034219:	int3   
   14003421a:	int3   
   14003421b:	int3   
   14003421c:	int3   
   14003421d:	int3   
   14003421e:	int3   
   14003421f:	int3   
   140034220:	rex push rbp
   140034222:	sub    rsp,0x20
   140034226:	mov    rbp,rdx
   140034229:	mov    rcx,QWORD PTR [rbp+0x40]
   14003422d:	add    rcx,0x70
   140034231:	call   0x14002b3e0
   140034236:	add    rsp,0x20
   14003423a:	pop    rbp
   14003423b:	ret    
   14003423c:	int3   
   14003423d:	int3   
   14003423e:	int3   
   14003423f:	int3   
   140034240:	rex push rbp
   140034242:	sub    rsp,0x20
   140034246:	mov    rbp,rdx
   140034249:	mov    rcx,QWORD PTR [rbp+0x40]
   14003424d:	call   0x14002b530
   140034252:	add    rsp,0x20
   140034256:	pop    rbp
   140034257:	ret    
   140034258:	int3   
   140034259:	int3   
   14003425a:	int3   
   14003425b:	int3   
   14003425c:	int3   
   14003425d:	int3   
   14003425e:	int3   
   14003425f:	int3   
   140034260:	rex push rbp
   140034262:	sub    rsp,0x20
   140034266:	mov    rbp,rdx
   140034269:	mov    rcx,QWORD PTR [rbp+0x40]
   14003426d:	add    rcx,0x78
   140034271:	call   0x140001260
   140034276:	add    rsp,0x20
   14003427a:	pop    rbp
   14003427b:	ret    
   14003427c:	int3   
   14003427d:	int3   
   14003427e:	int3   
   14003427f:	int3   
   140034280:	rex push rbp
   140034282:	sub    rsp,0x20
   140034286:	mov    rbp,rdx
   140034289:	mov    rcx,QWORD PTR [rbp+0x48]
   14003428d:	call   0x1400062d4
   140034292:	add    rsp,0x20
   140034296:	pop    rbp
   140034297:	ret    
   140034298:	int3   
   140034299:	int3   
   14003429a:	int3   
   14003429b:	int3   
   14003429c:	int3   
   14003429d:	int3   
   14003429e:	int3   
   14003429f:	int3   
   1400342a0:	rex push rbp
   1400342a2:	sub    rsp,0x20
   1400342a6:	mov    rbp,rdx
   1400342a9:	lea    rcx,[rbp+0x58]
   1400342ad:	call   0x140001260
   1400342b2:	add    rsp,0x20
   1400342b6:	pop    rbp
   1400342b7:	ret    
   1400342b8:	int3   
   1400342b9:	int3   
   1400342ba:	int3   
   1400342bb:	int3   
   1400342bc:	int3   
   1400342bd:	int3   
   1400342be:	int3   
   1400342bf:	int3   
   1400342c0:	rex push rbp
   1400342c2:	sub    rsp,0x20
   1400342c6:	mov    rbp,rdx
   1400342c9:	lea    rcx,[rbp+0x30]
   1400342cd:	call   0x140001260
   1400342d2:	add    rsp,0x20
   1400342d6:	pop    rbp
   1400342d7:	ret    
   1400342d8:	int3   
   1400342d9:	int3   
   1400342da:	int3   
   1400342db:	int3   
   1400342dc:	int3   
   1400342dd:	int3   
   1400342de:	int3   
   1400342df:	int3   
   1400342e0:	rex push rbp
   1400342e2:	sub    rsp,0x20
   1400342e6:	mov    rbp,rdx
   1400342e9:	mov    rcx,QWORD PTR [rbp+0x48]
   1400342ed:	call   0x1400062d4
   1400342f2:	add    rsp,0x20
   1400342f6:	pop    rbp
   1400342f7:	ret    
   1400342f8:	int3   
   1400342f9:	int3   
   1400342fa:	int3   
   1400342fb:	int3   
   1400342fc:	int3   
   1400342fd:	int3   
   1400342fe:	int3   
   1400342ff:	int3   
   140034300:	rex push rbp
   140034302:	sub    rsp,0x20
   140034306:	mov    rbp,rdx
   140034309:	mov    rcx,QWORD PTR [rbp+0x48]
   14003430d:	call   0x14002b530
   140034312:	add    rsp,0x20
   140034316:	pop    rbp
   140034317:	ret    
   140034318:	int3   
   140034319:	int3   
   14003431a:	int3   
   14003431b:	int3   
   14003431c:	int3   
   14003431d:	int3   
   14003431e:	int3   
   14003431f:	int3   
   140034320:	rex push rbp
   140034322:	sub    rsp,0x20
   140034326:	mov    rbp,rdx
   140034329:	lea    rcx,[rbp+0x30]
   14003432d:	call   0x14002a7c0
   140034332:	add    rsp,0x20
   140034336:	pop    rbp
   140034337:	ret    
   140034338:	int3   
   140034339:	int3   
   14003433a:	int3   
   14003433b:	int3   
   14003433c:	int3   
   14003433d:	int3   
   14003433e:	int3   
   14003433f:	int3   
   140034340:	rex push rbp
   140034342:	sub    rsp,0x20
   140034346:	mov    rbp,rdx
   140034349:	lea    rcx,[rbp+0x30]
   14003434d:	add    rcx,0x10
   140034351:	call   0x140001260
   140034356:	add    rsp,0x20
   14003435a:	pop    rbp
   14003435b:	ret    
   14003435c:	int3   
   14003435d:	int3   
   14003435e:	int3   
   14003435f:	int3   
   140034360:	rex push rbp
   140034362:	sub    rsp,0x20
   140034366:	mov    rbp,rdx
   140034369:	lea    rcx,[rbp+0x30]
   14003436d:	add    rcx,0x38
   140034371:	call   0x140001260
   140034376:	add    rsp,0x20
   14003437a:	pop    rbp
   14003437b:	ret    
   14003437c:	int3   
   14003437d:	int3   
   14003437e:	int3   
   14003437f:	int3   
   140034380:	rex push rbp
   140034382:	sub    rsp,0x20
   140034386:	mov    rbp,rdx
   140034389:	lea    rcx,[rbp+0x30]
   14003438d:	call   0x14002b450
   140034392:	add    rsp,0x20
   140034396:	pop    rbp
   140034397:	ret    
   140034398:	int3   
   140034399:	int3   
   14003439a:	int3   
   14003439b:	int3   
   14003439c:	int3   
   14003439d:	int3   
   14003439e:	int3   
   14003439f:	int3   
   1400343a0:	rex push rbp
   1400343a2:	sub    rsp,0x20
   1400343a6:	mov    rbp,rdx
   1400343a9:	lea    rcx,[rbp+0x28]
   1400343ad:	call   0x140001260
   1400343b2:	add    rsp,0x20
   1400343b6:	pop    rbp
   1400343b7:	ret    
   1400343b8:	int3   
   1400343b9:	int3   
   1400343ba:	int3   
   1400343bb:	int3   
   1400343bc:	int3   
   1400343bd:	int3   
   1400343be:	int3   
   1400343bf:	int3   
   1400343c0:	rex push rbp
   1400343c2:	sub    rsp,0x20
   1400343c6:	mov    rbp,rdx
   1400343c9:	lea    rcx,[rbp+0x28]
   1400343cd:	call   0x140001260
   1400343d2:	add    rsp,0x20
   1400343d6:	pop    rbp
   1400343d7:	ret    
   1400343d8:	int3   
   1400343d9:	int3   
   1400343da:	int3   
   1400343db:	int3   
   1400343dc:	int3   
   1400343dd:	int3   
   1400343de:	int3   
   1400343df:	int3   
   1400343e0:	rex push rbp
   1400343e2:	sub    rsp,0x20
   1400343e6:	mov    rbp,rdx
   1400343e9:	mov    rcx,QWORD PTR [rbp+0x40]
   1400343ed:	call   0x140032334
   1400343f2:	add    rsp,0x20
   1400343f6:	pop    rbp
   1400343f7:	ret    
   1400343f8:	int3   
   1400343f9:	int3   
   1400343fa:	int3   
   1400343fb:	int3   
   1400343fc:	int3   
   1400343fd:	int3   
   1400343fe:	int3   
   1400343ff:	int3   
   140034400:	rex push rbp
   140034402:	sub    rsp,0x20
   140034406:	mov    rbp,rdx
   140034409:	mov    rcx,QWORD PTR [rbp+0x40]
   14003440d:	add    rcx,0x8
   140034411:	call   0x140001260
   140034416:	add    rsp,0x20
   14003441a:	pop    rbp
   14003441b:	ret    
   14003441c:	int3   
   14003441d:	int3   
   14003441e:	int3   
   14003441f:	int3   
   140034420:	rex push rbp
   140034422:	sub    rsp,0x20
   140034426:	mov    rbp,rdx
   140034429:	mov    rcx,QWORD PTR [rbp+0x40]
   14003442d:	add    rcx,0x30
   140034431:	call   0x140001260
   140034436:	add    rsp,0x20
   14003443a:	pop    rbp
   14003443b:	ret    
   14003443c:	int3   
   14003443d:	int3   
   14003443e:	int3   
   14003443f:	int3   
   140034440:	rex push rbp
   140034442:	sub    rsp,0x20
   140034446:	mov    rbp,rdx
   140034449:	mov    rcx,QWORD PTR [rbp+0x40]
   14003444d:	add    rcx,0x58
   140034451:	call   0x140001260
   140034456:	add    rsp,0x20
   14003445a:	pop    rbp
   14003445b:	ret    
   14003445c:	int3   
   14003445d:	int3   
   14003445e:	int3   
   14003445f:	int3   
   140034460:	rex push rbp
   140034462:	sub    rsp,0x20
   140034466:	mov    rbp,rdx
   140034469:	mov    rcx,QWORD PTR [rbp+0x40]
   14003446d:	add    rcx,0x80
   140034474:	call   0x140001260
   140034479:	add    rsp,0x20
   14003447d:	pop    rbp
   14003447e:	ret    
   14003447f:	int3   
   140034480:	rex push rbp
   140034482:	sub    rsp,0x20
   140034486:	mov    rbp,rdx
   140034489:	mov    rcx,QWORD PTR [rbp+0x140]
   140034490:	call   0x1400062d4
   140034495:	add    rsp,0x20
   140034499:	pop    rbp
   14003449a:	ret    
   14003449b:	int3   
   14003449c:	int3   
   14003449d:	int3   
   14003449e:	int3   
   14003449f:	int3   
   1400344a0:	rex push rbp
   1400344a2:	sub    rsp,0x20
   1400344a6:	mov    rbp,rdx
   1400344a9:	mov    eax,DWORD PTR [rbp+0x130]
   1400344af:	and    eax,0x1
   1400344b2:	test   eax,eax
   1400344b4:	je     0x1400344c6
   1400344b6:	and    DWORD PTR [rbp+0x130],0xfffffffe
   1400344bd:	lea    rcx,[rbp+0x28]
   1400344c1:	call   0x140001260
   1400344c6:	add    rsp,0x20
   1400344ca:	pop    rbp
   1400344cb:	ret    
   1400344cc:	int3   
   1400344cd:	int3   
   1400344ce:	int3   
   1400344cf:	int3   
   1400344d0:	rex push rbp
   1400344d2:	sub    rsp,0x20
   1400344d6:	mov    rbp,rdx
   1400344d9:	lea    rcx,[rbp+0x68]
   1400344dd:	call   0x140032334
   1400344e2:	add    rsp,0x20
   1400344e6:	pop    rbp
   1400344e7:	ret    
   1400344e8:	int3   
   1400344e9:	int3   
   1400344ea:	int3   
   1400344eb:	int3   
   1400344ec:	int3   
   1400344ed:	int3   
   1400344ee:	int3   
   1400344ef:	int3   
   1400344f0:	rex push rbp
   1400344f2:	sub    rsp,0x20
   1400344f6:	mov    rbp,rdx
   1400344f9:	mov    rcx,QWORD PTR [rbp+0x48]
   1400344fd:	call   0x1400062d4
   140034502:	add    rsp,0x20
   140034506:	pop    rbp
   140034507:	ret    
   140034508:	int3   
   140034509:	int3   
   14003450a:	int3   
   14003450b:	int3   
   14003450c:	int3   
   14003450d:	int3   
   14003450e:	int3   
   14003450f:	int3   
   140034510:	rex push rbp
   140034512:	sub    rsp,0x20
   140034516:	mov    rbp,rdx
   140034519:	mov    rcx,QWORD PTR [rbp+0x48]
   14003451d:	call   0x1400062d4
   140034522:	add    rsp,0x20
   140034526:	pop    rbp
   140034527:	ret    
   140034528:	int3   
   140034529:	int3   
   14003452a:	int3   
   14003452b:	int3   
   14003452c:	int3   
   14003452d:	int3   
   14003452e:	int3   
   14003452f:	int3   
   140034530:	rex push rbp
   140034532:	sub    rsp,0x20
   140034536:	mov    rbp,rdx
   140034539:	mov    rcx,QWORD PTR [rbp+0x48]
   14003453d:	call   0x1400062d4
   140034542:	add    rsp,0x20
   140034546:	pop    rbp
   140034547:	ret    
   140034548:	int3   
   140034549:	int3   
   14003454a:	int3   
   14003454b:	int3   
   14003454c:	int3   
   14003454d:	int3   
   14003454e:	int3   
   14003454f:	int3   
   140034550:	rex push rbp
   140034552:	sub    rsp,0x20
   140034556:	mov    rbp,rdx
   140034559:	mov    rcx,QWORD PTR [rbp+0x48]
   14003455d:	call   0x1400062d4
   140034562:	add    rsp,0x20
   140034566:	pop    rbp
   140034567:	ret    
   140034568:	int3   
   140034569:	int3   
   14003456a:	int3   
   14003456b:	int3   
   14003456c:	int3   
   14003456d:	int3   
   14003456e:	int3   
   14003456f:	int3   
   140034570:	rex push rbp
   140034572:	sub    rsp,0x20
   140034576:	mov    rbp,rdx
   140034579:	mov    rcx,QWORD PTR [rbp+0x48]
   14003457d:	call   0x1400062d4
   140034582:	add    rsp,0x20
   140034586:	pop    rbp
   140034587:	ret    
   140034588:	int3   
   140034589:	int3   
   14003458a:	int3   
   14003458b:	int3   
   14003458c:	int3   
   14003458d:	int3   
   14003458e:	int3   
   14003458f:	int3   
   140034590:	rex push rbp
   140034592:	sub    rsp,0x20
   140034596:	mov    rbp,rdx
   140034599:	mov    rcx,QWORD PTR [rbp+0x48]
   14003459d:	call   0x1400062d4
   1400345a2:	add    rsp,0x20
   1400345a6:	pop    rbp
   1400345a7:	ret    
   1400345a8:	int3   
   1400345a9:	int3   
   1400345aa:	int3   
   1400345ab:	int3   
   1400345ac:	int3   
   1400345ad:	int3   
   1400345ae:	int3   
   1400345af:	int3   
   1400345b0:	rex push rbp
   1400345b2:	sub    rsp,0x20
   1400345b6:	mov    rbp,rdx
   1400345b9:	mov    rcx,QWORD PTR [rbp+0x78]
   1400345bd:	call   0x1400062d4
   1400345c2:	add    rsp,0x20
   1400345c6:	pop    rbp
   1400345c7:	ret    
   1400345c8:	int3   
   1400345c9:	int3   
   1400345ca:	int3   
   1400345cb:	int3   
   1400345cc:	int3   
   1400345cd:	int3   
   1400345ce:	int3   
   1400345cf:	int3   
   1400345d0:	rex push rbp
   1400345d2:	sub    rsp,0x20
   1400345d6:	mov    rbp,rdx
   1400345d9:	mov    rcx,QWORD PTR [rbp+0x78]
   1400345dd:	call   0x14002b530
   1400345e2:	add    rsp,0x20
   1400345e6:	pop    rbp
   1400345e7:	ret    
   1400345e8:	int3   
   1400345e9:	int3   
   1400345ea:	int3   
   1400345eb:	int3   
   1400345ec:	int3   
   1400345ed:	int3   
   1400345ee:	int3   
   1400345ef:	int3   
   1400345f0:	rex push rbp
   1400345f2:	sub    rsp,0x20
   1400345f6:	mov    rbp,rdx
   1400345f9:	lea    rcx,[rbp+0x38]
   1400345fd:	call   0x140001260
   140034602:	add    rsp,0x20
   140034606:	pop    rbp
   140034607:	ret    
   140034608:	int3   
   140034609:	int3   
   14003460a:	int3   
   14003460b:	int3   
   14003460c:	int3   
   14003460d:	int3   
   14003460e:	int3   
   14003460f:	int3   
   140034610:	rex push rbp
   140034612:	sub    rsp,0x20
   140034616:	mov    rbp,rdx
   140034619:	lea    rcx,[rbp+0x40]
   14003461d:	call   0x14002b3e0
   140034622:	add    rsp,0x20
   140034626:	pop    rbp
   140034627:	ret    
   140034628:	int3   
   140034629:	int3   
   14003462a:	int3   
   14003462b:	int3   
   14003462c:	int3   
   14003462d:	int3   
   14003462e:	int3   
   14003462f:	int3   
   140034630:	rex push rbp
   140034632:	sub    rsp,0x20
   140034636:	mov    rbp,rdx
   140034639:	lea    rcx,[rbp+0xc0]
   140034640:	call   0x14002b3e0
   140034645:	add    rsp,0x20
   140034649:	pop    rbp
   14003464a:	ret    
   14003464b:	int3   
   14003464c:	int3   
   14003464d:	int3   
   14003464e:	int3   
   14003464f:	int3   
   140034650:	rex push rbp
   140034652:	sub    rsp,0x20
   140034656:	mov    rbp,rdx
   140034659:	lea    rcx,[rbp+0x140]
   140034660:	call   0x14002b3e0
   140034665:	add    rsp,0x20
   140034669:	pop    rbp
   14003466a:	ret    
   14003466b:	int3   
   14003466c:	int3   
   14003466d:	int3   
   14003466e:	int3   
   14003466f:	int3   
   140034670:	rex push rbp
   140034672:	sub    rsp,0x20
   140034676:	mov    rbp,rdx
   140034679:	lea    rcx,[rbp+0x40]
   14003467d:	call   0x140001260
   140034682:	add    rsp,0x20
   140034686:	pop    rbp
   140034687:	ret    
   140034688:	int3   
   140034689:	int3   
   14003468a:	int3   
   14003468b:	int3   
   14003468c:	int3   
   14003468d:	int3   
   14003468e:	int3   
   14003468f:	int3   
   140034690:	rex push rbp
   140034692:	sub    rsp,0x20
   140034696:	mov    rbp,rdx
   140034699:	lea    rcx,[rbp+0x68]
   14003469d:	call   0x14002d680
   1400346a2:	add    rsp,0x20
   1400346a6:	pop    rbp
   1400346a7:	ret    
   1400346a8:	int3   
   1400346a9:	int3   
   1400346aa:	int3   
   1400346ab:	int3   
   1400346ac:	int3   
   1400346ad:	int3   
   1400346ae:	int3   
   1400346af:	int3   
   1400346b0:	mov    QWORD PTR [rsp+0x10],rdx
   1400346b5:	push   rbp
   1400346b6:	sub    rsp,0x20
   1400346ba:	mov    rbp,rdx
   1400346bd:	mov    rcx,QWORD PTR [rbp+0x50]
   1400346c1:	mov    rax,QWORD PTR [rcx]
   1400346c4:	movsxd rdx,DWORD PTR [rax+0x4]
   1400346c8:	add    rdx,rcx
   1400346cb:	mov    eax,DWORD PTR [rdx+0x10]
   1400346ce:	or     eax,0x4
   1400346d1:	cmp    QWORD PTR [rdx+0x48],0x0
   1400346d6:	jne    0x1400346dd
   1400346d8:	or     eax,0x4
   1400346db:	jmp    0x1400346dd
   1400346dd:	and    eax,0x17
   1400346e0:	mov    DWORD PTR [rdx+0x10],eax
   1400346e3:	test   DWORD PTR [rdx+0x14],eax
   1400346e6:	jne    0x1400346f1
   1400346e8:	lea    rax,[rip+0xffffffffffffbc2d]        # 0x14003031c
   1400346ef:	jmp    0x1400346fb
   1400346f1:	xor    edx,edx
   1400346f3:	xor    ecx,ecx
   1400346f5:	call   0x1400158a0
   1400346fa:	nop
   1400346fb:	add    rsp,0x20
   1400346ff:	pop    rbp
   140034700:	ret    
   140034701:	int3   
   140034702:	int3   
   140034703:	int3   
   140034704:	int3   
   140034705:	int3   
   140034706:	int3   
   140034707:	int3   
   140034708:	int3   
   140034709:	int3   
   14003470a:	int3   
   14003470b:	int3   
   14003470c:	int3   
   14003470d:	int3   
   14003470e:	int3   
   14003470f:	int3   
   140034710:	rex push rbp
   140034712:	sub    rsp,0x20
   140034716:	mov    rbp,rdx
   140034719:	lea    rcx,[rbp+0x28]
   14003471d:	call   0x14002de30
   140034722:	add    rsp,0x20
   140034726:	pop    rbp
   140034727:	ret    
   140034728:	int3   
   140034729:	int3   
   14003472a:	int3   
   14003472b:	int3   
   14003472c:	int3   
   14003472d:	int3   
   14003472e:	int3   
   14003472f:	int3   
   140034730:	rex push rbp
   140034732:	sub    rsp,0x20
   140034736:	mov    rbp,rdx
   140034739:	lea    rcx,[rbp+0x28]
   14003473d:	call   0x14002de30
   140034742:	add    rsp,0x20
   140034746:	pop    rbp
   140034747:	ret    
   140034748:	int3   
   140034749:	int3   
   14003474a:	int3   
   14003474b:	int3   
   14003474c:	int3   
   14003474d:	int3   
   14003474e:	int3   
   14003474f:	int3   
   140034750:	mov    QWORD PTR [rsp+0x10],rdx
   140034755:	push   rbp
   140034756:	sub    rsp,0x20
   14003475a:	mov    rbp,rdx
   14003475d:	mov    rcx,QWORD PTR [rbp+0x60]
   140034761:	mov    rax,QWORD PTR [rcx]
   140034764:	movsxd rdx,DWORD PTR [rax+0x4]
   140034768:	add    rdx,rcx
   14003476b:	mov    eax,DWORD PTR [rdx+0x10]
   14003476e:	or     eax,0x4
   140034771:	cmp    QWORD PTR [rdx+0x48],0x0
   140034776:	jne    0x14003477d
   140034778:	or     eax,0x4
   14003477b:	jmp    0x14003477d
   14003477d:	and    eax,0x17
   140034780:	mov    DWORD PTR [rdx+0x10],eax
   140034783:	test   DWORD PTR [rdx+0x14],eax
   140034786:	jne    0x140034791
   140034788:	lea    rax,[rip+0xffffffffffffbc88]        # 0x140030417
   14003478f:	jmp    0x14003479b
   140034791:	xor    edx,edx
   140034793:	xor    ecx,ecx
   140034795:	call   0x1400158a0
   14003479a:	nop
   14003479b:	add    rsp,0x20
   14003479f:	pop    rbp
   1400347a0:	ret    
   1400347a1:	int3   
   1400347a2:	int3   
   1400347a3:	int3   
   1400347a4:	int3   
   1400347a5:	int3   
   1400347a6:	int3   
   1400347a7:	int3   
   1400347a8:	int3   
   1400347a9:	int3   
   1400347aa:	int3   
   1400347ab:	int3   
   1400347ac:	int3   
   1400347ad:	int3   
   1400347ae:	int3   
   1400347af:	int3   
   1400347b0:	rex push rbp
   1400347b2:	sub    rsp,0x20
   1400347b6:	mov    rbp,rdx
   1400347b9:	lea    rcx,[rbp+0x28]
   1400347bd:	call   0x14002de30
   1400347c2:	add    rsp,0x20
   1400347c6:	pop    rbp
   1400347c7:	ret    
   1400347c8:	int3   
   1400347c9:	int3   
   1400347ca:	int3   
   1400347cb:	int3   
   1400347cc:	int3   
   1400347cd:	int3   
   1400347ce:	int3   
   1400347cf:	int3   
   1400347d0:	rex push rbp
   1400347d2:	sub    rsp,0x20
   1400347d6:	mov    rbp,rdx
   1400347d9:	lea    rcx,[rbp+0x28]
   1400347dd:	call   0x14002de30
   1400347e2:	add    rsp,0x20
   1400347e6:	pop    rbp
   1400347e7:	ret    
   1400347e8:	int3   
   1400347e9:	int3   
   1400347ea:	int3   
   1400347eb:	int3   
   1400347ec:	int3   
   1400347ed:	int3   
   1400347ee:	int3   
   1400347ef:	int3   
   1400347f0:	mov    QWORD PTR [rsp+0x10],rdx
   1400347f5:	push   rbp
   1400347f6:	sub    rsp,0x20
   1400347fa:	mov    rbp,rdx
   1400347fd:	mov    rcx,QWORD PTR [rbp+0x60]
   140034801:	mov    rax,QWORD PTR [rcx]
   140034804:	movsxd rdx,DWORD PTR [rax+0x4]
   140034808:	add    rdx,rcx
   14003480b:	mov    eax,DWORD PTR [rdx+0x10]
   14003480e:	or     eax,0x4
   140034811:	cmp    QWORD PTR [rdx+0x48],0x0
   140034816:	jne    0x14003481d
   140034818:	or     eax,0x4
   14003481b:	jmp    0x14003481d
   14003481d:	and    eax,0x17
   140034820:	mov    DWORD PTR [rdx+0x10],eax
   140034823:	test   DWORD PTR [rdx+0x14],eax
   140034826:	jne    0x140034831
   140034828:	lea    rax,[rip+0xffffffffffffbce6]        # 0x140030515
   14003482f:	jmp    0x14003483b
   140034831:	xor    edx,edx
   140034833:	xor    ecx,ecx
   140034835:	call   0x1400158a0
   14003483a:	nop
   14003483b:	add    rsp,0x20
   14003483f:	pop    rbp
   140034840:	ret    
   140034841:	int3   
   140034842:	int3   
   140034843:	int3   
   140034844:	int3   
   140034845:	int3   
   140034846:	int3   
   140034847:	int3   
   140034848:	int3   
   140034849:	int3   
   14003484a:	int3   
   14003484b:	int3   
   14003484c:	int3   
   14003484d:	int3   
   14003484e:	int3   
   14003484f:	int3   
   140034850:	rex push rbp
   140034852:	sub    rsp,0x20
   140034856:	mov    rbp,rdx
   140034859:	lea    rcx,[rbp+0x50]
   14003485d:	call   0x14002b530
   140034862:	add    rsp,0x20
   140034866:	pop    rbp
   140034867:	ret    
   140034868:	int3   
   140034869:	int3   
   14003486a:	int3   
   14003486b:	int3   
   14003486c:	int3   
   14003486d:	int3   
   14003486e:	int3   
   14003486f:	int3   
   140034870:	rex push rbp
   140034872:	sub    rsp,0x20
   140034876:	mov    rbp,rdx
   140034879:	lea    rcx,[rbp+0x50]
   14003487d:	call   0x140029640
   140034882:	add    rsp,0x20
   140034886:	pop    rbp
   140034887:	ret    
   140034888:	int3   
   140034889:	int3   
   14003488a:	int3   
   14003488b:	int3   
   14003488c:	int3   
   14003488d:	int3   
   14003488e:	int3   
   14003488f:	int3   
   140034890:	rex push rbp
   140034892:	sub    rsp,0x20
   140034896:	mov    rbp,rdx
   140034899:	mov    rcx,QWORD PTR [rbp+0x48]
   14003489d:	call   0x140001260
   1400348a2:	add    rsp,0x20
   1400348a6:	pop    rbp
   1400348a7:	ret    
   1400348a8:	int3   
   1400348a9:	int3   
   1400348aa:	int3   
   1400348ab:	int3   
   1400348ac:	int3   
   1400348ad:	int3   
   1400348ae:	int3   
   1400348af:	int3   
   1400348b0:	rex push rbp
   1400348b2:	sub    rsp,0x20
   1400348b6:	mov    rbp,rdx
   1400348b9:	mov    rcx,QWORD PTR [rbp+0x170]
   1400348c0:	call   0x140002510
   1400348c5:	add    rsp,0x20
   1400348c9:	pop    rbp
   1400348ca:	ret    
   1400348cb:	int3   
   1400348cc:	int3   
   1400348cd:	int3   
   1400348ce:	int3   
   1400348cf:	int3   
   1400348d0:	rex push rbp
   1400348d2:	sub    rsp,0x20
   1400348d6:	mov    rbp,rdx
   1400348d9:	lea    rcx,[rbp+0xc8]
   1400348e0:	call   0x140001260
   1400348e5:	add    rsp,0x20
   1400348e9:	pop    rbp
   1400348ea:	ret    
   1400348eb:	int3   
   1400348ec:	int3   
   1400348ed:	int3   
   1400348ee:	int3   
   1400348ef:	int3   
   1400348f0:	int3   
   1400348f1:	int3   
   1400348f2:	int3   
   1400348f3:	int3   
   1400348f4:	int3   
   1400348f5:	int3   
   1400348f6:	int3   
   1400348f7:	int3   
   1400348f8:	int3   
   1400348f9:	int3   
   1400348fa:	int3   
   1400348fb:	int3   
   1400348fc:	int3   
   1400348fd:	int3   
   1400348fe:	int3   
   1400348ff:	int3   
   140034900:	rex push rbp
   140034902:	sub    rsp,0x20
   140034906:	mov    rbp,rdx
   140034909:	mov    rcx,QWORD PTR [rbp+0xd8]
   140034910:	call   0x140001260
   140034915:	add    rsp,0x20
   140034919:	pop    rbp
   14003491a:	ret    
   14003491b:	int3   
   14003491c:	int3   
   14003491d:	int3   
   14003491e:	int3   
   14003491f:	int3   
   140034920:	rex push rbp
   140034922:	sub    rsp,0x20
   140034926:	mov    rbp,rdx
   140034929:	lea    rcx,[rbp+0x30]
   14003492d:	call   0x140002510
   140034932:	add    rsp,0x20
   140034936:	pop    rbp
   140034937:	ret    
   140034938:	int3   
   140034939:	int3   
   14003493a:	int3   
   14003493b:	int3   
   14003493c:	int3   
   14003493d:	int3   
   14003493e:	int3   
   14003493f:	int3   
   140034940:	rex push rbp
   140034942:	sub    rsp,0x20
   140034946:	mov    rbp,rdx
   140034949:	lea    rcx,[rbp+0x20]
   14003494d:	call   0x140002510
   140034952:	add    rsp,0x20
   140034956:	pop    rbp
   140034957:	ret    
   140034958:	int3   
   140034959:	int3   
   14003495a:	int3   
   14003495b:	int3   
   14003495c:	int3   
   14003495d:	int3   
   14003495e:	int3   
   14003495f:	int3   
   140034960:	rex push rbp
   140034962:	sub    rsp,0x20
   140034966:	mov    rbp,rdx
   140034969:	mov    rcx,QWORD PTR [rbp+0xc8]
   140034970:	call   0x140001260
   140034975:	add    rsp,0x20
   140034979:	pop    rbp
   14003497a:	ret    
   14003497b:	int3   
   14003497c:	int3   
   14003497d:	int3   
   14003497e:	int3   
   14003497f:	int3   
   140034980:	rex push rbp
   140034982:	sub    rsp,0x20
   140034986:	mov    rbp,rdx
   140034989:	lea    rcx,[rbp+0x68]
   14003498d:	call   0x140001260
   140034992:	add    rsp,0x20
   140034996:	pop    rbp
   140034997:	ret    
   140034998:	int3   
   140034999:	int3   
   14003499a:	int3   
   14003499b:	int3   
   14003499c:	int3   
   14003499d:	int3   
   14003499e:	int3   
   14003499f:	int3   
   1400349a0:	rex push rbp
   1400349a2:	sub    rsp,0x20
   1400349a6:	mov    rbp,rdx
   1400349a9:	lea    rcx,[rbp+0x60]
   1400349ad:	call   0x140001260
   1400349b2:	add    rsp,0x20
   1400349b6:	pop    rbp
   1400349b7:	ret    
   1400349b8:	rex push rbp
   1400349ba:	sub    rsp,0x20
   1400349be:	mov    rbp,rdx
   1400349c1:	lea    rcx,[rbp+0x28]
   1400349c5:	call   0x140001260
   1400349ca:	add    rsp,0x20
   1400349ce:	pop    rbp
   1400349cf:	ret    
   1400349d0:	int3   
   1400349d1:	int3   
   1400349d2:	int3   
   1400349d3:	int3   
   1400349d4:	int3   
   1400349d5:	int3   
   1400349d6:	int3   
   1400349d7:	int3   
   1400349d8:	rex push rbp
   1400349da:	sub    rsp,0x20
   1400349de:	mov    rbp,rdx
   1400349e1:	lea    rcx,[rbp+0x50]
   1400349e5:	call   0x140014718
   1400349ea:	add    rsp,0x20
   1400349ee:	pop    rbp
   1400349ef:	ret    
   1400349f0:	rex push rbp
   1400349f2:	sub    rsp,0x20
   1400349f6:	mov    rbp,rdx
   1400349f9:	mov    rax,QWORD PTR [rcx]
   1400349fc:	xor    r11d,r11d
   1400349ff:	cmp    DWORD PTR [rax],0xc0000017
   140034a05:	sete   r11b
   140034a09:	mov    eax,r11d
   140034a0c:	add    rsp,0x20
   140034a10:	pop    rbp
   140034a11:	ret    
   140034a12:	rex push rbp
   140034a14:	sub    rsp,0x30
   140034a18:	mov    rbp,rdx
   140034a1b:	mov    rcx,QWORD PTR [rbp+0x60]
   140034a1f:	call   0x140024704
   140034a24:	add    rsp,0x30
   140034a28:	pop    rbp
   140034a29:	ret    
   140034a2a:	int3   
   140034a2b:	int3   
   140034a2c:	int3   
   140034a2d:	int3   
   140034a2e:	int3   
   140034a2f:	int3   
   140034a30:	mov    QWORD PTR [rsp+0x10],rdx
   140034a35:	push   rbp
   140034a36:	sub    rsp,0x20
   140034a3a:	mov    rbp,rdx
   140034a3d:	mov    rdx,QWORD PTR [rbp+0x88]
   140034a44:	mov    QWORD PTR [rbp+0x88],rdx
   140034a4b:	inc    rdx
   140034a4e:	mov    rcx,QWORD PTR [rbp+0x80]
   140034a55:	call   0x1400035e0
   140034a5a:	mov    QWORD PTR [rbp+0x20],rax
   140034a5e:	lea    rax,[rip+0xfffffffffffceac1]        # 0x140003526
   140034a65:	add    rsp,0x20
   140034a69:	pop    rbp
   140034a6a:	ret    
   140034a6b:	int3   
   140034a6c:	int3   
   140034a6d:	int3   
   140034a6e:	int3   
   140034a6f:	int3   
   140034a70:	mov    QWORD PTR [rsp+0x10],rdx
   140034a75:	push   rbx
   140034a76:	push   rbp
   140034a77:	sub    rsp,0x28
   140034a7b:	mov    rbp,rdx
   140034a7e:	mov    rbx,QWORD PTR [rbp+0x80]
   140034a85:	cmp    QWORD PTR [rbx+0x20],0x10
   140034a8a:	jb     0x140034a95
   140034a8c:	mov    rcx,QWORD PTR [rbx+0x8]
   140034a90:	call   0x1400062d4
   140034a95:	mov    QWORD PTR [rbx+0x20],0xf
   140034a9d:	xor    ecx,ecx
   140034a9f:	mov    QWORD PTR [rbx+0x18],rcx
   140034aa3:	mov    BYTE PTR [rbx+0x8],cl
   140034aa6:	xor    edx,edx
   140034aa8:	call   0x1400158a0
   140034aad:	nop
   140034aae:	add    rsp,0x28
   140034ab2:	pop    rbp
   140034ab3:	pop    rbx
   140034ab4:	ret    
   140034ab5:	int3   
   140034ab6:	int3   
   140034ab7:	int3   
   140034ab8:	int3   
   140034ab9:	int3   
   140034aba:	int3   
   140034abb:	int3   
   140034abc:	int3   
   140034abd:	int3   
   140034abe:	int3   
   140034abf:	int3   
   140034ac0:	rex push rbp
   140034ac2:	sub    rsp,0x20
   140034ac6:	mov    rbp,rdx
   140034ac9:	mov    rcx,QWORD PTR [rbp+0x40]
   140034acd:	call   0x140014718
   140034ad2:	add    rsp,0x20
   140034ad6:	pop    rbp
   140034ad7:	ret    
   140034ad8:	int3   
   140034ad9:	int3   
   140034ada:	int3   
   140034adb:	int3   
   140034adc:	int3   
   140034add:	int3   
   140034ade:	int3   
   140034adf:	int3   
   140034ae0:	rex push rbp
   140034ae2:	sub    rsp,0x20
   140034ae6:	mov    rbp,rdx
   140034ae9:	mov    rcx,QWORD PTR [rbp+0x40]
   140034aed:	call   0x140005520
   140034af2:	add    rsp,0x20
   140034af6:	pop    rbp
   140034af7:	ret    
   140034af8:	int3   
   140034af9:	int3   
   140034afa:	int3   
   140034afb:	int3   
   140034afc:	int3   
   140034afd:	int3   
   140034afe:	int3   
   140034aff:	int3   
   140034b00:	rex push rbp
   140034b02:	sub    rsp,0x20
   140034b06:	mov    rbp,rdx
   140034b09:	mov    rcx,QWORD PTR [rbp+0x40]
   140034b0d:	add    rcx,0x58
   140034b11:	call   0x140001260
   140034b16:	add    rsp,0x20
   140034b1a:	pop    rbp
   140034b1b:	ret    
   140034b1c:	int3   
   140034b1d:	int3   
   140034b1e:	int3   
   140034b1f:	int3   
   140034b20:	rex push rbp
   140034b22:	sub    rsp,0x20
   140034b26:	mov    rbp,rdx
   140034b29:	mov    rcx,QWORD PTR [rbp+0x40]
   140034b2d:	add    rcx,0x80
   140034b34:	call   0x140001260
   140034b39:	add    rsp,0x20
   140034b3d:	pop    rbp
   140034b3e:	ret    
   140034b3f:	int3   
   140034b40:	rex push rbp
   140034b42:	sub    rsp,0x20
   140034b46:	mov    rbp,rdx
   140034b49:	mov    rcx,QWORD PTR [rbp+0x40]
   140034b4d:	add    rcx,0xa8
   140034b54:	call   0x140001260
   140034b59:	add    rsp,0x20
   140034b5d:	pop    rbp
   140034b5e:	ret    
   140034b5f:	int3   
   140034b60:	rex push rbp
   140034b62:	sub    rsp,0x20
   140034b66:	mov    rbp,rdx
   140034b69:	mov    rcx,QWORD PTR [rbp+0x40]
   140034b6d:	add    rcx,0xd0
   140034b74:	call   0x140031360
   140034b79:	add    rsp,0x20
   140034b7d:	pop    rbp
   140034b7e:	ret    
   140034b7f:	int3   
   140034b80:	rex push rbp
   140034b82:	sub    rsp,0x20
   140034b86:	mov    rbp,rdx
   140034b89:	mov    rdx,QWORD PTR [rbp+0x28]
   140034b8d:	mov    rcx,QWORD PTR [rbp+0x30]
   140034b91:	call   0x140001090
   140034b96:	add    rsp,0x20
   140034b9a:	pop    rbp
   140034b9b:	ret    
   140034b9c:	int3   
   140034b9d:	int3   
   140034b9e:	int3   
   140034b9f:	int3   
   140034ba0:	mov    QWORD PTR [rsp+0x10],rdx
   140034ba5:	push   rbx
   140034ba6:	push   rbp
   140034ba7:	push   rsi
   140034ba8:	push   rdi
   140034ba9:	sub    rsp,0x28
   140034bad:	mov    rbp,rdx
   140034bb0:	mov    rbx,QWORD PTR [rbp+0x68]
   140034bb4:	mov    rdi,QWORD PTR [rbp+0x60]
   140034bb8:	cmp    rbx,rdi
   140034bbb:	je     0x140034bd5
   140034bbd:	mov    rsi,QWORD PTR [rbp+0x78]
   140034bc1:	mov    rdx,rbx
   140034bc4:	mov    rcx,rsi
   140034bc7:	call   0x1400037a0
   140034bcc:	add    rbx,0x28
   140034bd0:	cmp    rbx,rdi
   140034bd3:	jne    0x140034bc1
   140034bd5:	xor    edx,edx
   140034bd7:	xor    ecx,ecx
   140034bd9:	call   0x1400158a0
   140034bde:	nop
   140034bdf:	add    rsp,0x28
   140034be3:	pop    rdi
   140034be4:	pop    rsi
   140034be5:	pop    rbp
   140034be6:	pop    rbx
   140034be7:	ret    
   140034be8:	int3   
   140034be9:	int3   
   140034bea:	int3   
   140034beb:	int3   
   140034bec:	int3   
   140034bed:	int3   
   140034bee:	int3   
   140034bef:	int3   
   140034bf0:	rex push rbp
   140034bf2:	sub    rsp,0x20
   140034bf6:	mov    rbp,rdx
   140034bf9:	mov    rcx,QWORD PTR [rbp+0xb0]
   140034c00:	call   0x140001260
   140034c05:	add    rsp,0x20
   140034c09:	pop    rbp
   140034c0a:	ret    
   140034c0b:	int3   
   140034c0c:	int3   
   140034c0d:	int3   
   140034c0e:	int3   
   140034c0f:	int3   
   140034c10:	rex push rbp
   140034c12:	sub    rsp,0x20
   140034c16:	mov    rbp,rdx
   140034c19:	lea    rcx,[rbp+0x58]
   140034c1d:	call   0x140001260
   140034c22:	add    rsp,0x20
   140034c26:	pop    rbp
   140034c27:	ret    
   140034c28:	int3   
   140034c29:	int3   
   140034c2a:	int3   
   140034c2b:	int3   
   140034c2c:	int3   
   140034c2d:	int3   
   140034c2e:	int3   
   140034c2f:	int3   
   140034c30:	rex push rbp
   140034c32:	sub    rsp,0x20
   140034c36:	mov    rbp,rdx
   140034c39:	lea    rcx,[rbp+0x88]
   140034c40:	call   0x140001260
   140034c45:	add    rsp,0x20
   140034c49:	pop    rbp
   140034c4a:	ret    
   140034c4b:	int3   
   140034c4c:	int3   
   140034c4d:	int3   
   140034c4e:	int3   
   140034c4f:	int3   
   140034c50:	rex push rbp
   140034c52:	sub    rsp,0x20
   140034c56:	mov    rbp,rdx
   140034c59:	lea    rcx,[rbp+0x30]
   140034c5d:	call   0x140001260
   140034c62:	add    rsp,0x20
   140034c66:	pop    rbp
   140034c67:	ret    
   140034c68:	int3   
   140034c69:	int3   
   140034c6a:	int3   
   140034c6b:	int3   
   140034c6c:	int3   
   140034c6d:	int3   
   140034c6e:	int3   
   140034c6f:	int3   
   140034c70:	rex push rbp
   140034c72:	sub    rsp,0x20
   140034c76:	mov    rbp,rdx
   140034c79:	mov    rcx,QWORD PTR [rbp+0x90]
   140034c80:	call   0x140001260
   140034c85:	add    rsp,0x20
   140034c89:	pop    rbp
   140034c8a:	ret    
   140034c8b:	int3   
   140034c8c:	int3   
   140034c8d:	int3   
   140034c8e:	int3   
   140034c8f:	int3   
   140034c90:	rex push rbp
   140034c92:	sub    rsp,0x20
   140034c96:	mov    rbp,rdx
   140034c99:	lea    rcx,[rbp+0x60]
   140034c9d:	call   0x140001260
   140034ca2:	add    rsp,0x20
   140034ca6:	pop    rbp
   140034ca7:	ret    
   140034ca8:	int3   
   140034ca9:	int3   
   140034caa:	int3   
   140034cab:	int3   
   140034cac:	int3   
   140034cad:	int3   
   140034cae:	int3   
   140034caf:	int3   
   140034cb0:	rex push rbp
   140034cb2:	sub    rsp,0x20
   140034cb6:	mov    rbp,rdx
   140034cb9:	lea    rcx,[rbp+0x70]
   140034cbd:	call   0x140001260
   140034cc2:	add    rsp,0x20
   140034cc6:	pop    rbp
   140034cc7:	ret    
   140034cc8:	int3   
   140034cc9:	int3   
   140034cca:	int3   
   140034ccb:	int3   
   140034ccc:	int3   
   140034ccd:	int3   
   140034cce:	int3   
   140034ccf:	int3   
   140034cd0:	rex push rbp
   140034cd2:	sub    rsp,0x20
   140034cd6:	mov    rbp,rdx
   140034cd9:	mov    rcx,QWORD PTR [rbp+0xd0]
   140034ce0:	call   0x140001260
   140034ce5:	add    rsp,0x20
   140034ce9:	pop    rbp
   140034cea:	ret    
   140034ceb:	int3   
   140034cec:	int3   
   140034ced:	int3   
   140034cee:	int3   
   140034cef:	int3   
   140034cf0:	rex push rbp
   140034cf2:	sub    rsp,0x20
   140034cf6:	mov    rbp,rdx
   140034cf9:	lea    rcx,[rbp+0xa0]
   140034d00:	call   0x140001260
   140034d05:	add    rsp,0x20
   140034d09:	pop    rbp
   140034d0a:	ret    
   140034d0b:	int3   
   140034d0c:	int3   
   140034d0d:	int3   
   140034d0e:	int3   
   140034d0f:	int3   
   140034d10:	rex push rbp
   140034d12:	sub    rsp,0x20
   140034d16:	mov    rbp,rdx
   140034d19:	mov    rcx,QWORD PTR [rbp+0x38]
   140034d1d:	call   0x140001260
   140034d22:	add    rsp,0x20
   140034d26:	pop    rbp
   140034d27:	ret    
   140034d28:	int3   
   140034d29:	int3   
   140034d2a:	int3   
   140034d2b:	int3   
   140034d2c:	int3   
   140034d2d:	int3   
   140034d2e:	int3   
   140034d2f:	int3   
   140034d30:	rex push rbp
   140034d32:	sub    rsp,0x20
   140034d36:	mov    rbp,rdx
   140034d39:	mov    rcx,QWORD PTR [rbp+0x30]
   140034d3d:	call   0x140001260
   140034d42:	add    rsp,0x20
   140034d46:	pop    rbp
   140034d47:	ret    
   140034d48:	int3   
   140034d49:	int3   
   140034d4a:	int3   
   140034d4b:	int3   
   140034d4c:	int3   
   140034d4d:	int3   
   140034d4e:	int3   
   140034d4f:	int3   
   140034d50:	rex push rbp
   140034d52:	sub    rsp,0x20
   140034d56:	mov    rbp,rdx
   140034d59:	mov    rcx,QWORD PTR [rbp+0x20]
   140034d5d:	call   0x140001260
   140034d62:	add    rsp,0x20
   140034d66:	pop    rbp
   140034d67:	ret    
   140034d68:	int3   
   140034d69:	int3   
   140034d6a:	int3   
   140034d6b:	int3   
   140034d6c:	int3   
   140034d6d:	int3   
   140034d6e:	int3   
   140034d6f:	int3   
   140034d70:	rex push rbp
   140034d72:	sub    rsp,0x20
   140034d76:	mov    rbp,rdx
   140034d79:	mov    rcx,QWORD PTR [rbp+0x20]
   140034d7d:	add    rcx,0x28
   140034d81:	call   0x140001260
   140034d86:	add    rsp,0x20
   140034d8a:	pop    rbp
   140034d8b:	ret    
   140034d8c:	int3   
   140034d8d:	int3   
   140034d8e:	int3   
   140034d8f:	int3   
   140034d90:	rex push rbp
   140034d92:	sub    rsp,0x20
   140034d96:	mov    rbp,rdx
   140034d99:	lea    rcx,[rbp+0x48]
   140034d9d:	call   0x140001260
   140034da2:	add    rsp,0x20
   140034da6:	pop    rbp
   140034da7:	ret    
   140034da8:	int3   
   140034da9:	int3   
   140034daa:	int3   
   140034dab:	int3   
   140034dac:	int3   
   140034dad:	int3   
   140034dae:	int3   
   140034daf:	int3   
   140034db0:	rex push rbp
   140034db2:	sub    rsp,0x20
   140034db6:	mov    rbp,rdx
   140034db9:	mov    rdx,QWORD PTR [rbp+0x30]
   140034dbd:	mov    rcx,QWORD PTR [rbp+0x38]
   140034dc1:	call   0x140001090
   140034dc6:	add    rsp,0x20
   140034dca:	pop    rbp
   140034dcb:	ret    
   140034dcc:	int3   
   140034dcd:	int3   
   140034dce:	int3   
   140034dcf:	int3   
   140034dd0:	mov    QWORD PTR [rsp+0x10],rdx
   140034dd5:	push   rbx
   140034dd6:	push   rbp
   140034dd7:	push   rsi
   140034dd8:	push   rdi
   140034dd9:	sub    rsp,0x28
   140034ddd:	mov    rbp,rdx
   140034de0:	mov    rbx,QWORD PTR [rbp+0x28]
   140034de4:	mov    rdi,QWORD PTR [rbp+0x20]
   140034de8:	cmp    rbx,rdi
   140034deb:	je     0x140034e08
   140034ded:	mov    rsi,QWORD PTR [rbp+0xc8]
   140034df4:	mov    rdx,rbx
   140034df7:	mov    rcx,rsi
   140034dfa:	call   0x1400037a0
   140034dff:	add    rbx,0x28
   140034e03:	cmp    rbx,rdi
   140034e06:	jne    0x140034df4
   140034e08:	xor    edx,edx
   140034e0a:	xor    ecx,ecx
   140034e0c:	call   0x1400158a0
   140034e11:	nop
   140034e12:	add    rsp,0x28
   140034e16:	pop    rdi
   140034e17:	pop    rsi
   140034e18:	pop    rbp
   140034e19:	pop    rbx
   140034e1a:	ret    
   140034e1b:	int3   
   140034e1c:	int3   
   140034e1d:	int3   
   140034e1e:	int3   
   140034e1f:	int3   
   140034e20:	rex push rbp
   140034e22:	sub    rsp,0x20
   140034e26:	mov    rbp,rdx
   140034e29:	mov    rdx,QWORD PTR [rbp+0x68]
   140034e2d:	mov    rcx,QWORD PTR [rbp+0x28]
   140034e31:	call   0x140001090
   140034e36:	add    rsp,0x20
   140034e3a:	pop    rbp
   140034e3b:	ret    
   140034e3c:	int3   
   140034e3d:	int3   
   140034e3e:	int3   
   140034e3f:	int3   
   140034e40:	mov    QWORD PTR [rsp+0x10],rdx
   140034e45:	push   rbx
   140034e46:	push   rbp
   140034e47:	push   rsi
   140034e48:	push   rdi
   140034e49:	sub    rsp,0x28
   140034e4d:	mov    rbp,rdx
   140034e50:	mov    rbx,QWORD PTR [rbp+0x60]
   140034e54:	mov    rdi,QWORD PTR [rbp+0x70]
   140034e58:	cmp    rbx,rdi
   140034e5b:	je     0x140034e75
   140034e5d:	mov    rsi,QWORD PTR [rbp+0x78]
   140034e61:	mov    rdx,rbx
   140034e64:	mov    rcx,rsi
   140034e67:	call   0x1400037a0
   140034e6c:	add    rbx,0x28
   140034e70:	cmp    rbx,rdi
   140034e73:	jne    0x140034e61
   140034e75:	xor    edx,edx
   140034e77:	xor    ecx,ecx
   140034e79:	call   0x1400158a0
   140034e7e:	nop
   140034e7f:	add    rsp,0x28
   140034e83:	pop    rdi
   140034e84:	pop    rsi
   140034e85:	pop    rbp
   140034e86:	pop    rbx
   140034e87:	ret    
   140034e88:	int3   
   140034e89:	int3   
   140034e8a:	int3   
   140034e8b:	int3   
   140034e8c:	int3   
   140034e8d:	int3   
   140034e8e:	int3   
   140034e8f:	int3   
   140034e90:	rex push rbp
   140034e92:	sub    rsp,0x20
   140034e96:	mov    rbp,rdx
   140034e99:	lea    rcx,[rbp+0x28]
   140034e9d:	call   0x140001260
   140034ea2:	add    rsp,0x20
   140034ea6:	pop    rbp
   140034ea7:	ret    
   140034ea8:	int3   
   140034ea9:	int3   
   140034eaa:	int3   
   140034eab:	int3   
   140034eac:	int3   
   140034ead:	int3   
   140034eae:	int3   
   140034eaf:	int3   
   140034eb0:	rex push rbp
   140034eb2:	sub    rsp,0x20
   140034eb6:	mov    rbp,rdx
   140034eb9:	lea    rcx,[rbp+0x50]
   140034ebd:	call   0x140014718
   140034ec2:	add    rsp,0x20
   140034ec6:	pop    rbp
   140034ec7:	ret    
   140034ec8:	int3   
   140034ec9:	int3   
   140034eca:	int3   
   140034ecb:	int3   
   140034ecc:	int3   
   140034ecd:	int3   
   140034ece:	int3   
   140034ecf:	int3   
   140034ed0:	mov    QWORD PTR [rsp+0x10],rdx
   140034ed5:	push   rbx
   140034ed6:	push   rbp
   140034ed7:	push   rsi
   140034ed8:	push   rdi
   140034ed9:	push   r12
   140034edb:	sub    rsp,0x30
   140034edf:	mov    rbp,rdx
   140034ee2:	mov    r12d,DWORD PTR [rbp+0x34]
   140034ee6:	cmp    r12d,0x1
   140034eea:	jle    0x140034f0d
   140034eec:	mov    rdi,QWORD PTR [rbp+0x48]
   140034ef0:	lea    rax,[rdi+rdi*4]
   140034ef4:	mov    rbx,QWORD PTR [rbp+0x38]
   140034ef8:	lea    r8,[rbx+rax*8]
   140034efc:	mov    rdx,rbx
   140034eff:	mov    rsi,QWORD PTR [rbp+0x40]
   140034f03:	mov    rcx,rsi
   140034f06:	call   0x140002d80
   140034f0b:	jmp    0x140034f19
   140034f0d:	mov    rbx,QWORD PTR [rbp+0x38]
   140034f11:	mov    rdi,QWORD PTR [rbp+0x48]
   140034f15:	mov    rsi,QWORD PTR [rbp+0x40]
   140034f19:	test   r12d,r12d
   140034f1c:	jle    0x140034f3d
   140034f1e:	mov    rdx,QWORD PTR [rbp+0x50]
   140034f22:	add    rdx,rdi
   140034f25:	lea    rax,[rdx+rdx*4]
   140034f29:	lea    r8,[rbx+rax*8]
   140034f2d:	lea    rax,[rdi+rdi*4]
   140034f31:	lea    rdx,[rbx+rax*8]
   140034f35:	mov    rcx,rsi
   140034f38:	call   0x140002d80
   140034f3d:	mov    rcx,rbx
   140034f40:	call   0x1400062d4
   140034f45:	xor    edx,edx
   140034f47:	xor    ecx,ecx
   140034f49:	call   0x1400158a0
   140034f4e:	nop
   140034f4f:	add    rsp,0x30
   140034f53:	pop    r12
   140034f55:	pop    rdi
   140034f56:	pop    rsi
   140034f57:	pop    rbp
   140034f58:	pop    rbx
   140034f59:	ret    
   140034f5a:	int3   
   140034f5b:	int3   
   140034f5c:	int3   
   140034f5d:	int3   
   140034f5e:	int3   
   140034f5f:	int3   
   140034f60:	rex push rbp
   140034f62:	sub    rsp,0x20
   140034f66:	mov    rbp,rdx
   140034f69:	lea    rcx,[rbp+0x68]
   140034f6d:	call   0x140001260
   140034f72:	add    rsp,0x20
   140034f76:	pop    rbp
   140034f77:	ret    
   140034f78:	int3   
   140034f79:	int3   
   140034f7a:	int3   
   140034f7b:	int3   
   140034f7c:	int3   
   140034f7d:	int3   
   140034f7e:	int3   
   140034f7f:	int3   
   140034f80:	mov    QWORD PTR [rsp+0x10],rdx
   140034f85:	push   rbp
   140034f86:	sub    rsp,0x30
   140034f8a:	mov    rbp,rdx
   140034f8d:	mov    rax,QWORD PTR [rbp+0x50]
   140034f91:	lea    r9,[rax+rax*4]
   140034f95:	mov    rcx,QWORD PTR [rbp+0x40]
   140034f99:	mov    rax,QWORD PTR [rcx+0x20]
   140034f9d:	lea    r8,[rax+r9*8]
   140034fa1:	mov    rax,QWORD PTR [rbp+0x38]
   140034fa5:	mov    rdx,QWORD PTR [rax+0x8]
   140034fa9:	lea    rdx,[rdx+r9*8]
   140034fad:	call   0x140002d80
   140034fb2:	xor    edx,edx
   140034fb4:	xor    ecx,ecx
   140034fb6:	call   0x1400158a0
   140034fbb:	nop
   140034fbc:	add    rsp,0x30
   140034fc0:	pop    rbp
   140034fc1:	ret    
   140034fc2:	int3   
   140034fc3:	int3   
   140034fc4:	int3   
   140034fc5:	int3   
   140034fc6:	int3   
   140034fc7:	int3   
   140034fc8:	int3   
   140034fc9:	int3   
   140034fca:	int3   
   140034fcb:	int3   
   140034fcc:	int3   
   140034fcd:	int3   
   140034fce:	int3   
   140034fcf:	int3   
   140034fd0:	rex push rbp
   140034fd2:	sub    rsp,0x20
   140034fd6:	mov    rbp,rdx
   140034fd9:	lea    rcx,[rbp+0x68]
   140034fdd:	call   0x140001260
   140034fe2:	add    rsp,0x20
   140034fe6:	pop    rbp
   140034fe7:	ret    
   140034fe8:	int3   
   140034fe9:	int3   
   140034fea:	int3   
   140034feb:	int3   
   140034fec:	int3   
   140034fed:	int3   
   140034fee:	int3   
   140034fef:	int3   
   140034ff0:	rex push rbp
   140034ff2:	sub    rsp,0x20
   140034ff6:	mov    rbp,rdx
   140034ff9:	mov    rcx,QWORD PTR [rbp+0x60]
   140034ffd:	call   0x140002620
   140035002:	add    rsp,0x20
   140035006:	pop    rbp
   140035007:	ret    
   140035008:	int3   
   140035009:	int3   
   14003500a:	int3   
   14003500b:	int3   
   14003500c:	int3   
   14003500d:	int3   
   14003500e:	int3   
   14003500f:	int3   
   140035010:	mov    QWORD PTR [rsp+0x10],rdx
   140035015:	push   rbp
   140035016:	sub    rsp,0x30
   14003501a:	mov    rbp,rdx
   14003501d:	mov    rcx,QWORD PTR [rbp+0x60]
   140035021:	call   0x1400029a0
   140035026:	xor    edx,edx
   140035028:	xor    ecx,ecx
   14003502a:	call   0x1400158a0
   14003502f:	nop
   140035030:	add    rsp,0x30
   140035034:	pop    rbp
   140035035:	ret    
   140035036:	int3   
   140035037:	int3   
   140035038:	int3   
   140035039:	int3   
   14003503a:	int3   
   14003503b:	int3   
   14003503c:	int3   
   14003503d:	int3   
   14003503e:	int3   
   14003503f:	int3   
   140035040:	rex push rbp
   140035042:	sub    rsp,0x20
   140035046:	mov    rbp,rdx
   140035049:	mov    rcx,QWORD PTR [rbp+0x40]
   14003504d:	call   0x140002620
   140035052:	add    rsp,0x20
   140035056:	pop    rbp
   140035057:	ret    
   140035058:	int3   
   140035059:	int3   
   14003505a:	int3   
   14003505b:	int3   
   14003505c:	int3   
   14003505d:	int3   
   14003505e:	int3   
   14003505f:	int3   
   140035060:	rex push rbp
   140035062:	sub    rsp,0x20
   140035066:	mov    rbp,rdx
   140035069:	lea    rcx,[rbp+0x68]
   14003506d:	call   0x140001260
   140035072:	add    rsp,0x20
   140035076:	pop    rbp
   140035077:	ret    
   140035078:	int3   
   140035079:	int3   
   14003507a:	int3   
   14003507b:	int3   
   14003507c:	int3   
   14003507d:	int3   
   14003507e:	int3   
   14003507f:	int3   
   140035080:	rex push rbp
   140035082:	sub    rsp,0x20
   140035086:	mov    rbp,rdx
   140035089:	lea    rcx,[rbp+0x50]
   14003508d:	call   0x140001260
   140035092:	add    rsp,0x20
   140035096:	pop    rbp
   140035097:	ret    
   140035098:	int3   
   140035099:	int3   
   14003509a:	int3   
   14003509b:	int3   
   14003509c:	int3   
   14003509d:	int3   
   14003509e:	int3   
   14003509f:	int3   
   1400350a0:	rex push rbp
   1400350a2:	sub    rsp,0x20
   1400350a6:	mov    rbp,rdx
   1400350a9:	lea    rcx,[rbp+0x170]
   1400350b0:	call   0x140001260
   1400350b5:	add    rsp,0x20
   1400350b9:	pop    rbp
   1400350ba:	ret    
   1400350bb:	int3   
   1400350bc:	int3   
   1400350bd:	int3   
   1400350be:	int3   
   1400350bf:	int3   
   1400350c0:	rex push rbp
   1400350c2:	sub    rsp,0x20
   1400350c6:	mov    rbp,rdx
   1400350c9:	lea    rcx,[rbp+0xe0]
   1400350d0:	call   0x140001260
   1400350d5:	add    rsp,0x20
   1400350d9:	pop    rbp
   1400350da:	ret    
   1400350db:	int3   
   1400350dc:	int3   
   1400350dd:	int3   
   1400350de:	int3   
   1400350df:	int3   
   1400350e0:	rex push rbp
   1400350e2:	sub    rsp,0x20
   1400350e6:	mov    rbp,rdx
   1400350e9:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400350f0:	call   0x140001260
   1400350f5:	add    rsp,0x20
   1400350f9:	pop    rbp
   1400350fa:	ret    
   1400350fb:	int3   
   1400350fc:	int3   
   1400350fd:	int3   
   1400350fe:	int3   
   1400350ff:	int3   
   140035100:	rex push rbp
   140035102:	sub    rsp,0x20
   140035106:	mov    rbp,rdx
   140035109:	lea    rcx,[rbp+0x110]
   140035110:	call   0x140003b60
   140035115:	add    rsp,0x20
   140035119:	pop    rbp
   14003511a:	ret    
   14003511b:	int3   
   14003511c:	int3   
   14003511d:	int3   
   14003511e:	int3   
   14003511f:	int3   
   140035120:	rex push rbp
   140035122:	sub    rsp,0x20
   140035126:	mov    rbp,rdx
   140035129:	lea    rcx,[rbp+0x78]
   14003512d:	call   0x140002620
   140035132:	add    rsp,0x20
   140035136:	pop    rbp
   140035137:	ret    
   140035138:	int3   
   140035139:	int3   
   14003513a:	int3   
   14003513b:	int3   
   14003513c:	int3   
   14003513d:	int3   
   14003513e:	int3   
   14003513f:	int3   
   140035140:	rex push rbp
   140035142:	sub    rsp,0x20
   140035146:	mov    rbp,rdx
   140035149:	lea    rcx,[rbp+0x78]
   14003514d:	call   0x140002510
   140035152:	add    rsp,0x20
   140035156:	pop    rbp
   140035157:	ret    
   140035158:	int3   
   140035159:	int3   
   14003515a:	int3   
   14003515b:	int3   
   14003515c:	int3   
   14003515d:	int3   
   14003515e:	int3   
   14003515f:	int3   
   140035160:	rex push rbp
   140035162:	sub    rsp,0x20
   140035166:	mov    rbp,rdx
   140035169:	mov    rcx,QWORD PTR [rbp+0xd0]
   140035170:	call   0x140001260
   140035175:	add    rsp,0x20
   140035179:	pop    rbp
   14003517a:	ret    
   14003517b:	int3   
   14003517c:	int3   
   14003517d:	int3   
   14003517e:	int3   
   14003517f:	int3   
   140035180:	rex push rbp
   140035182:	sub    rsp,0x20
   140035186:	mov    rbp,rdx
   140035189:	lea    rcx,[rbp+0x110]
   140035190:	call   0x140003b60
   140035195:	add    rsp,0x20
   140035199:	pop    rbp
   14003519a:	ret    
   14003519b:	int3   
   14003519c:	int3   
   14003519d:	int3   
   14003519e:	int3   
   14003519f:	int3   
   1400351a0:	rex push rbp
   1400351a2:	sub    rsp,0x20
   1400351a6:	mov    rbp,rdx
   1400351a9:	mov    rcx,QWORD PTR [rbp+0xd0]
   1400351b0:	call   0x140001260
   1400351b5:	add    rsp,0x20
   1400351b9:	pop    rbp
   1400351ba:	ret    
   1400351bb:	int3   
   1400351bc:	int3   
   1400351bd:	int3   
   1400351be:	int3   
   1400351bf:	int3   
   1400351c0:	rex push rbp
   1400351c2:	sub    rsp,0x20
   1400351c6:	mov    rbp,rdx
   1400351c9:	lea    rcx,[rbp+0x110]
   1400351d0:	call   0x140003b60
   1400351d5:	add    rsp,0x20
   1400351d9:	pop    rbp
   1400351da:	ret    
   1400351db:	int3   
   1400351dc:	int3   
   1400351dd:	int3   
   1400351de:	int3   
   1400351df:	int3   
   1400351e0:	rex push rbp
   1400351e2:	sub    rsp,0x20
   1400351e6:	mov    rbp,rdx
   1400351e9:	lea    rcx,[rbp+0x20]
   1400351ed:	call   0x140002620
   1400351f2:	add    rsp,0x20
   1400351f6:	pop    rbp
   1400351f7:	ret    
   1400351f8:	int3   
   1400351f9:	int3   
   1400351fa:	int3   
   1400351fb:	int3   
   1400351fc:	int3   
   1400351fd:	int3   
   1400351fe:	int3   
   1400351ff:	int3   
   140035200:	rex push rbp
   140035202:	sub    rsp,0x20
   140035206:	mov    rbp,rdx
   140035209:	lea    rcx,[rbp+0x20]
   14003520d:	call   0x140002510
   140035212:	add    rsp,0x20
   140035216:	pop    rbp
   140035217:	ret    
   140035218:	int3   
   140035219:	int3   
   14003521a:	int3   
   14003521b:	int3   
   14003521c:	int3   
   14003521d:	int3   
   14003521e:	int3   
   14003521f:	int3   
   140035220:	rex push rbp
   140035222:	sub    rsp,0x20
   140035226:	mov    rbp,rdx
   140035229:	lea    rcx,[rbp+0x20]
   14003522d:	call   0x140002620
   140035232:	add    rsp,0x20
   140035236:	pop    rbp
   140035237:	ret    
   140035238:	int3   
   140035239:	int3   
   14003523a:	int3   
   14003523b:	int3   
   14003523c:	int3   
   14003523d:	int3   
   14003523e:	int3   
   14003523f:	int3   
   140035240:	rex push rbp
   140035242:	sub    rsp,0x20
   140035246:	mov    rbp,rdx
   140035249:	lea    rcx,[rbp+0x20]
   14003524d:	call   0x140002510
   140035252:	add    rsp,0x20
   140035256:	pop    rbp
   140035257:	ret    
   140035258:	int3   
   140035259:	int3   
   14003525a:	int3   
   14003525b:	int3   
   14003525c:	int3   
   14003525d:	int3   
   14003525e:	int3   
   14003525f:	int3   
   140035260:	rex push rbp
   140035262:	sub    rsp,0x20
   140035266:	mov    rbp,rdx
   140035269:	lea    rcx,[rbp+0x160]
   140035270:	call   0x140001260
   140035275:	add    rsp,0x20
   140035279:	pop    rbp
   14003527a:	ret    
   14003527b:	int3   
   14003527c:	int3   
   14003527d:	int3   
   14003527e:	int3   
   14003527f:	int3   
   140035280:	rex push rbp
   140035282:	sub    rsp,0x20
   140035286:	mov    rbp,rdx
   140035289:	lea    rcx,[rbp+0x220]
   140035290:	call   0x140005610
   140035295:	add    rsp,0x20
   140035299:	pop    rbp
   14003529a:	ret    
   14003529b:	int3   
   14003529c:	int3   
   14003529d:	int3   
   14003529e:	int3   
   14003529f:	int3   
   1400352a0:	rex push rbp
   1400352a2:	sub    rsp,0x20
   1400352a6:	mov    rbp,rdx
   1400352a9:	lea    rcx,[rbp+0x38]
   1400352ad:	call   0x140002620
   1400352b2:	add    rsp,0x20
   1400352b6:	pop    rbp
   1400352b7:	ret    
   1400352b8:	int3   
   1400352b9:	int3   
   1400352ba:	int3   
   1400352bb:	int3   
   1400352bc:	int3   
   1400352bd:	int3   
   1400352be:	int3   
   1400352bf:	int3   
   1400352c0:	rex push rbp
   1400352c2:	sub    rsp,0x20
   1400352c6:	mov    rbp,rdx
   1400352c9:	lea    rcx,[rbp+0x38]
   1400352cd:	call   0x140002510
   1400352d2:	add    rsp,0x20
   1400352d6:	pop    rbp
   1400352d7:	ret    
   1400352d8:	int3   
   1400352d9:	int3   
   1400352da:	int3   
   1400352db:	int3   
   1400352dc:	int3   
   1400352dd:	int3   
   1400352de:	int3   
   1400352df:	int3   
   1400352e0:	rex push rbp
   1400352e2:	sub    rsp,0x20
   1400352e6:	mov    rbp,rdx
   1400352e9:	lea    rcx,[rbp+0xc0]
   1400352f0:	call   0x140001260
   1400352f5:	add    rsp,0x20
   1400352f9:	pop    rbp
   1400352fa:	ret    
   1400352fb:	int3   
   1400352fc:	int3   
   1400352fd:	int3   
   1400352fe:	int3   
   1400352ff:	int3   
   140035300:	rex push rbp
   140035302:	sub    rsp,0x20
   140035306:	mov    rbp,rdx
   140035309:	lea    rcx,[rbp+0x138]
   140035310:	call   0x140001260
   140035315:	add    rsp,0x20
   140035319:	pop    rbp
   14003531a:	ret    
   14003531b:	int3   
   14003531c:	int3   
   14003531d:	int3   
   14003531e:	int3   
   14003531f:	int3   
   140035320:	rex push rbp
   140035322:	sub    rsp,0x20
   140035326:	mov    rbp,rdx
   140035329:	lea    rcx,[rbp+0x110]
   140035330:	call   0x140001260
   140035335:	add    rsp,0x20
   140035339:	pop    rbp
   14003533a:	ret    
   14003533b:	int3   
   14003533c:	int3   
   14003533d:	int3   
   14003533e:	int3   
   14003533f:	int3   
   140035340:	mov    QWORD PTR [rsp+0x10],rdx
   140035345:	push   rbp
   140035346:	sub    rsp,0x30
   14003534a:	mov    rbp,rdx
   14003534d:	mov    DWORD PTR [rbp+0x68],0x3
   140035354:	lea    rax,[rip+0xfffffffffffd098b]        # 0x140005ce6
   14003535b:	jmp    0x14003535d
   14003535d:	add    rsp,0x30
   140035361:	pop    rbp
   140035362:	ret    
   140035363:	int3   
   140035364:	int3   
   140035365:	int3   
   140035366:	int3   
   140035367:	int3   
   140035368:	int3   
   140035369:	int3   
   14003536a:	int3   
   14003536b:	int3   
   14003536c:	int3   
   14003536d:	int3   
   14003536e:	int3   
   14003536f:	int3   
   140035370:	rex push rbp
   140035372:	sub    rsp,0x20
   140035376:	mov    rbp,rdx
   140035379:	lea    rcx,[rbp+0xe8]
   140035380:	call   0x140001260
   140035385:	add    rsp,0x20
   140035389:	pop    rbp
   14003538a:	ret    
   14003538b:	int3   
   14003538c:	int3   
   14003538d:	int3   
   14003538e:	int3   
   14003538f:	int3   
   140035390:	rex push rbp
   140035392:	sub    rsp,0x20
   140035396:	mov    rbp,rdx
   140035399:	lea    rcx,[rbp+0x190]
   1400353a0:	call   0x1400057e0
   1400353a5:	add    rsp,0x20
   1400353a9:	pop    rbp
   1400353aa:	ret    
   1400353ab:	int3   
   1400353ac:	int3   
   1400353ad:	int3   
   1400353ae:	int3   
   1400353af:	int3   
   1400353b0:	rex push rbp
   1400353b2:	sub    rsp,0x20
   1400353b6:	mov    rbp,rdx
   1400353b9:	mov    rcx,QWORD PTR [rbp+0x70]
   1400353bd:	call   0x140001260
   1400353c2:	add    rsp,0x20
   1400353c6:	pop    rbp
   1400353c7:	ret    
   1400353c8:	int3   
   1400353c9:	int3   
   1400353ca:	int3   
   1400353cb:	int3   
   1400353cc:	int3   
   1400353cd:	int3   
   1400353ce:	int3   
   1400353cf:	int3   
   1400353d0:	mov    rax,QWORD PTR [rip+0x1171]        # 0x140036548
   1400353d7:	mov    QWORD PTR [rip+0x1a212],rax        # 0x14004f5f0
   1400353de:	ret    
   1400353df:	int3   
   1400353e0:	lea    rcx,[rip+0x3f9]        # 0x1400357e0
   1400353e7:	jmp    0x140015acc
   1400353ec:	lea    rcx,[rip+0x3fd]        # 0x1400357f0
   1400353f3:	jmp    0x140015acc
   1400353f8:	lea    rcx,[rip+0x401]        # 0x140035800
   1400353ff:	jmp    0x140015acc
   140035404:	lea    rcx,[rip+0x405]        # 0x140035810
   14003540b:	jmp    0x140015acc
   140035410:	lea    rcx,[rip+0x405]        # 0x14003581c
   140035417:	jmp    0x140015acc
   14003541c:	sub    rsp,0x28
   140035420:	lea    rcx,[rip+0x15b89]        # 0x14004afb0
   140035427:	call   0x14000906c
   14003542c:	lea    rcx,[rip+0x3f5]        # 0x140035828
   140035433:	add    rsp,0x28
   140035437:	jmp    0x140015acc
   14003543c:	lea    rcx,[rip+0x3f1]        # 0x140035834
   140035443:	jmp    0x140015acc
   140035448:	sub    rsp,0x28
   14003544c:	lea    rcx,[rip+0x34cd]        # 0x140038920
   140035453:	call   QWORD PTR [rip+0x1147]        # 0x1400365a0
   140035459:	mov    DWORD PTR [rip+0x18c29],eax        # 0x14004e088
   14003545f:	add    rsp,0x28
   140035463:	ret    
   140035464:	sub    rsp,0x28
   140035468:	lea    rcx,[rip+0x18c21]        # 0x14004e090
   14003546f:	call   0x14000a238
   140035474:	lea    rax,[rip+0x237d]        # 0x1400377f8
   14003547b:	lea    r11,[rip+0x2496]        # 0x140037918
   140035482:	mov    QWORD PTR [rip+0x18c67],rax        # 0x14004e0f0
   140035489:	lea    rax,[rip+0x2450]        # 0x1400378e0
   140035490:	lea    rcx,[rip+0x3a9]        # 0x140035840
   140035497:	mov    QWORD PTR [rip+0x18c5a],rax        # 0x14004e0f8
   14003549e:	xor    eax,eax
   1400354a0:	mov    QWORD PTR [rip+0x18be9],r11        # 0x14004e090
   1400354a7:	mov    QWORD PTR [rip+0x18c22],rax        # 0x14004e0d0
   1400354ae:	mov    BYTE PTR [rip+0x18c24],al        # 0x14004e0d8
   1400354b4:	mov    QWORD PTR [rip+0x18c2d],rax        # 0x14004e0e8
   1400354bb:	mov    QWORD PTR [rip+0x18c3e],rax        # 0x14004e100
   1400354c2:	mov    DWORD PTR [rip+0x18c40],eax        # 0x14004e108
   1400354c8:	mov    QWORD PTR [rip+0x18c41],rax        # 0x14004e110
   1400354cf:	mov    DWORD PTR [rip+0x18c43],eax        # 0x14004e118
   1400354d5:	mov    QWORD PTR [rip+0x18c44],rax        # 0x14004e120
   1400354dc:	mov    QWORD PTR [rip+0x18c45],rax        # 0x14004e128
   1400354e3:	mov    QWORD PTR [rip+0x18c46],rax        # 0x14004e130
   1400354ea:	add    rsp,0x28
   1400354ee:	jmp    0x140015acc
   1400354f3:	int3   
   1400354f4:	sub    rsp,0x28
   1400354f8:	lea    rcx,[rip+0x18c41]        # 0x14004e140
   1400354ff:	call   0x14000a238
   140035504:	lea    rax,[rip+0x22ed]        # 0x1400377f8
   14003550b:	lea    r11,[rip+0x2406]        # 0x140037918
   140035512:	mov    QWORD PTR [rip+0x18c87],rax        # 0x14004e1a0
   140035519:	lea    rax,[rip+0x23c0]        # 0x1400378e0
   140035520:	lea    rcx,[rip+0x325]        # 0x14003584c
   140035527:	mov    QWORD PTR [rip+0x18c7a],rax        # 0x14004e1a8
   14003552e:	xor    eax,eax
   140035530:	mov    QWORD PTR [rip+0x18c09],r11        # 0x14004e140
   140035537:	mov    BYTE PTR [rip+0x18c4b],al        # 0x14004e188
   14003553d:	mov    QWORD PTR [rip+0x18c54],rax        # 0x14004e198
   140035544:	mov    QWORD PTR [rip+0x18c65],rax        # 0x14004e1b0
   14003554b:	mov    DWORD PTR [rip+0x18c67],eax        # 0x14004e1b8
   140035551:	mov    QWORD PTR [rip+0x18c68],rax        # 0x14004e1c0
   140035558:	mov    DWORD PTR [rip+0x18c6a],eax        # 0x14004e1c8
   14003555e:	mov    QWORD PTR [rip+0x18c6b],rax        # 0x14004e1d0
   140035565:	mov    QWORD PTR [rip+0x18c6c],rax        # 0x14004e1d8
   14003556c:	mov    QWORD PTR [rip+0x18c6d],rax        # 0x14004e1e0
   140035573:	mov    QWORD PTR [rip+0x18c02],0x1        # 0x14004e180
   14003557e:	add    rsp,0x28
   140035582:	jmp    0x140015acc
   140035587:	int3   
   140035588:	sub    rsp,0x28
   14003558c:	lea    rcx,[rip+0x18c5d]        # 0x14004e1f0
   140035593:	call   0x14000a238
   140035598:	or     QWORD PTR [rip+0x18c90],0xffffffffffffffff        # 0x14004e230
   1400355a0:	lea    rax,[rip+0x2251]        # 0x1400377f8
   1400355a7:	mov    QWORD PTR [rip+0x18ca2],rax        # 0x14004e250
   1400355ae:	lea    rax,[rip+0x232b]        # 0x1400378e0
   1400355b5:	lea    r11,[rip+0x235c]        # 0x140037918
   1400355bc:	mov    QWORD PTR [rip+0x18c95],rax        # 0x14004e258
   1400355c3:	xor    eax,eax
   1400355c5:	lea    rcx,[rip+0x28c]        # 0x140035858
   1400355cc:	mov    BYTE PTR [rip+0x18c66],al        # 0x14004e238
   1400355d2:	mov    QWORD PTR [rip+0x18c6f],rax        # 0x14004e248
   1400355d9:	mov    QWORD PTR [rip+0x18c80],rax        # 0x14004e260
   1400355e0:	mov    DWORD PTR [rip+0x18c82],eax        # 0x14004e268
   1400355e6:	mov    QWORD PTR [rip+0x18c83],rax        # 0x14004e270
   1400355ed:	mov    DWORD PTR [rip+0x18c85],eax        # 0x14004e278
   1400355f3:	mov    QWORD PTR [rip+0x18c86],rax        # 0x14004e280
   1400355fa:	mov    QWORD PTR [rip+0x18c87],rax        # 0x14004e288
   140035601:	mov    QWORD PTR [rip+0x18c88],rax        # 0x14004e290
   140035608:	mov    QWORD PTR [rip+0x18be1],r11        # 0x14004e1f0
   14003560f:	add    rsp,0x28
   140035613:	jmp    0x140015acc
   140035618:	sub    rsp,0x28
   14003561c:	lea    rcx,[rip+0x18c7d]        # 0x14004e2a0
   140035623:	call   0x14000a238
   140035628:	lea    rax,[rip+0x21c9]        # 0x1400377f8
   14003562f:	lea    r11,[rip+0x22e2]        # 0x140037918
   140035636:	mov    QWORD PTR [rip+0x18cc3],rax        # 0x14004e300
   14003563d:	lea    rax,[rip+0x229c]        # 0x1400378e0
   140035644:	lea    rcx,[rip+0x219]        # 0x140035864
   14003564b:	mov    QWORD PTR [rip+0x18cb6],rax        # 0x14004e308
   140035652:	xor    eax,eax
   140035654:	mov    QWORD PTR [rip+0x18c45],r11        # 0x14004e2a0
   14003565b:	mov    BYTE PTR [rip+0x18c87],al        # 0x14004e2e8
   140035661:	mov    QWORD PTR [rip+0x18c90],rax        # 0x14004e2f8
   140035668:	mov    QWORD PTR [rip+0x18ca1],rax        # 0x14004e310
   14003566f:	mov    DWORD PTR [rip+0x18ca3],eax        # 0x14004e318
   140035675:	mov    QWORD PTR [rip+0x18ca4],rax        # 0x14004e320
   14003567c:	mov    DWORD PTR [rip+0x18ca6],eax        # 0x14004e328
   140035682:	mov    QWORD PTR [rip+0x18ca7],rax        # 0x14004e330
   140035689:	mov    QWORD PTR [rip+0x18ca8],rax        # 0x14004e338
   140035690:	mov    QWORD PTR [rip+0x18ca9],rax        # 0x14004e340
   140035697:	mov    QWORD PTR [rip+0x18c3e],0xfffffffffffffffe        # 0x14004e2e0
   1400356a2:	add    rsp,0x28
   1400356a6:	jmp    0x140015acc
   1400356ab:	int3   
   1400356ac:	lea    rcx,[rip+0x13485]        # 0x140048b38
   1400356b3:	jmp    0x14000639c
   1400356b8:	sub    rsp,0x28
   1400356bc:	lea    rcx,[rip+0x18c9d]        # 0x14004e360
   1400356c3:	xor    edx,edx
   1400356c5:	call   0x140006584
   1400356ca:	and    DWORD PTR [rip+0x18ca3],0x0        # 0x14004e374
   1400356d1:	and    DWORD PTR [rip+0x18ca0],0x0        # 0x14004e378
   1400356d8:	lea    rax,[rip+0x3a29]        # 0x140039108
   1400356df:	lea    rcx,[rip+0x18a]        # 0x140035870
   1400356e6:	mov    DWORD PTR [rip+0x18d0c],0xf022        # 0x14004e3fc
   1400356f0:	mov    QWORD PTR [rip+0x18c69],rax        # 0x14004e360
   1400356f7:	add    rsp,0x28
   1400356fb:	jmp    0x140015acc
   140035700:	sub    rsp,0x28
   140035704:	lea    rcx,[rip+0x18cf5]        # 0x14004e400
   14003570b:	xor    edx,edx
   14003570d:	call   0x140006584
   140035712:	and    DWORD PTR [rip+0x18cfb],0x0        # 0x14004e414
   140035719:	and    DWORD PTR [rip+0x18cf8],0x0        # 0x14004e418
   140035720:	lea    rax,[rip+0x3a19]        # 0x140039140
   140035727:	lea    rcx,[rip+0x152]        # 0x140035880
   14003572e:	mov    DWORD PTR [rip+0x18d64],0xf024        # 0x14004e49c
   140035738:	mov    QWORD PTR [rip+0x18cc1],rax        # 0x14004e400
   14003573f:	add    rsp,0x28
   140035743:	jmp    0x140015acc
   140035748:	sub    rsp,0x28
   14003574c:	call   0x140013090
   140035751:	mov    DWORD PTR [rip+0x18d7d],eax        # 0x14004e4d4
   140035757:	add    rsp,0x28
   14003575b:	ret    
   14003575c:	lea    rcx,[rip+0x135cd]        # 0x140048d30
   140035763:	jmp    0x14000639c
   140035768:	sub    rsp,0x28
   14003576c:	lea    rcx,[rip+0x19cdd]        # 0x14004f450
   140035773:	call   0x140032274
   140035778:	lea    rcx,[rip+0x111]        # 0x140035890
   14003577f:	add    rsp,0x28
   140035783:	jmp    0x140015acc
   140035788:	lea    rcx,[rip+0x10d]        # 0x14003589c
   14003578f:	jmp    0x140015acc
   140035794:	sub    rsp,0x28
   140035798:	lea    rcx,[rip+0x19da1]        # 0x14004f540
   14003579f:	call   0x140032274
   1400357a4:	lea    rcx,[rip+0xfd]        # 0x1400358a8
   1400357ab:	add    rsp,0x28
   1400357af:	jmp    0x140015acc
   1400357b4:	lea    rcx,[rip+0xf9]        # 0x1400358b4
   1400357bb:	jmp    0x140015acc
   1400357c0:	sub    rsp,0x28
   1400357c4:	lea    rcx,[rip+0x19d85]        # 0x14004f550
   1400357cb:	call   0x1400326f0
   1400357d0:	lea    rcx,[rip+0x121]        # 0x1400358f8
   1400357d7:	add    rsp,0x28
   1400357db:	jmp    0x140015acc
   1400357e0:	lea    rax,[rip+0x13e1]        # 0x140036bc8
   1400357e7:	mov    QWORD PTR [rip+0x12a22],rax        # 0x140048210
   1400357ee:	ret    
   1400357ef:	int3   
   1400357f0:	lea    rax,[rip+0x13d1]        # 0x140036bc8
   1400357f7:	mov    QWORD PTR [rip+0x12ab2],rax        # 0x1400482b0
   1400357fe:	ret    
   1400357ff:	int3   
   140035800:	lea    rax,[rip+0x13c1]        # 0x140036bc8
   140035807:	mov    QWORD PTR [rip+0x12b42],rax        # 0x140048350
   14003580e:	ret    
   14003580f:	int3   
   140035810:	lea    rcx,[rip+0x15789]        # 0x14004afa0
   140035817:	jmp    0x140006ca8
   14003581c:	lea    rcx,[rip+0x15775]        # 0x14004af98
   140035823:	jmp    0x140006740
   140035828:	lea    rcx,[rip+0x15781]        # 0x14004afb0
   14003582f:	jmp    0x140009190
   140035834:	lea    rcx,[rip+0x18b15]        # 0x14004e350
   14003583b:	jmp    0x140006740
   140035840:	lea    rcx,[rip+0x18849]        # 0x14004e090
   140035847:	jmp    0x14000e554
   14003584c:	lea    rcx,[rip+0x188ed]        # 0x14004e140
   140035853:	jmp    0x14000e554
   140035858:	lea    rcx,[rip+0x18991]        # 0x14004e1f0
   14003585f:	jmp    0x14000e554
   140035864:	lea    rcx,[rip+0x18a35]        # 0x14004e2a0
   14003586b:	jmp    0x14000e554
   140035870:	lea    rax,[rip+0x1351]        # 0x140036bc8
   140035877:	mov    QWORD PTR [rip+0x18ae2],rax        # 0x14004e360
   14003587e:	ret    
   14003587f:	int3   
   140035880:	lea    rax,[rip+0x1341]        # 0x140036bc8
   140035887:	mov    QWORD PTR [rip+0x18b72],rax        # 0x14004e400
   14003588e:	ret    
   14003588f:	int3   
   140035890:	lea    rcx,[rip+0x19bb9]        # 0x14004f450
   140035897:	jmp    0x1400322c4
   14003589c:	lea    rcx,[rip+0x19bed]        # 0x14004f490
   1400358a3:	jmp    0x14002d680
   1400358a8:	lea    rcx,[rip+0x19c91]        # 0x14004f540
   1400358af:	jmp    0x1400322c4
   1400358b4:	rex push rbx
   1400358b6:	sub    rsp,0x20
   1400358ba:	mov    rcx,QWORD PTR [rip+0x15157]        # 0x14004aa18
   1400358c1:	cmp    rcx,0xa
   1400358c5:	jae    0x1400358f2
   1400358c7:	lea    rbx,[rip+0x19c22]        # 0x14004f4f0
   1400358ce:	mov    rax,QWORD PTR [rbx+rcx*8]
   1400358d2:	inc    rcx
   1400358d5:	mov    QWORD PTR [rip+0x1513c],rcx        # 0x14004aa18
   1400358dc:	test   rax,rax
   1400358df:	je     0x1400358ec
   1400358e1:	call   QWORD PTR [rbx+rcx*8-0x8]
   1400358e5:	mov    rcx,QWORD PTR [rip+0x1512c]        # 0x14004aa18
   1400358ec:	cmp    rcx,0xa
   1400358f0:	jb     0x1400358ce
   1400358f2:	add    rsp,0x20
   1400358f6:	pop    rbx
   1400358f7:	ret    
   1400358f8:	lea    rcx,[rip+0x19c51]        # 0x14004f550
   1400358ff:	jmp    0x1400326bc

Disassembly of section .rdata:

0000000140036000 <.rdata>:
   140036000:	call   0x140036480
   140036005:	add    BYTE PTR [rax],al
   140036007:	add    al,dl
   140036009:	jnp    0x14003600f
   14003600b:	add    BYTE PTR [rax],al
   14003600d:	add    BYTE PTR [rax],al
   14003600f:	add    BYTE PTR [rsi+0x47b],bh
   140036015:	add    BYTE PTR [rax],al
   140036017:	add    BYTE PTR [rbx+rdi*2+0x4],ch
   14003601e:	add    BYTE PTR [rax],al
   140036020:	sahf   
   140036021:	jnp    0x140036027
   140036023:	add    BYTE PTR [rax],al
   140036025:	add    BYTE PTR [rax],al
   140036027:	add    BYTE PTR [rax+0x47b],cl
   14003602d:	add    BYTE PTR [rax],al
   14003602f:	add    BYTE PTR [rax+0x7b],dh
   140036032:	add    al,0x0
   140036034:	add    BYTE PTR [rax],al
   140036036:	add    BYTE PTR [rax],al
   140036038:	pop    rdx
   140036039:	jnp    0x14003603f
   14003603b:	add    BYTE PTR [rax],al
   14003603d:	add    BYTE PTR [rax],al
   14003603f:	add    BYTE PTR [rdx+0x7b],cl
   140036042:	add    al,0x0
   140036044:	add    BYTE PTR [rax],al
   140036046:	add    BYTE PTR [rax],al
   140036048:	cmp    bh,BYTE PTR [rbx+0x4]
   14003604b:	add    BYTE PTR [rax],al
   14003604d:	add    BYTE PTR [rax],al
   14003604f:	add    BYTE PTR [rax],ch
   140036051:	jnp    0x140036057
   140036053:	add    BYTE PTR [rax],al
   140036055:	add    BYTE PTR [rax],al
   140036057:	add    BYTE PTR [rsi],dl
   140036059:	jnp    0x14003605f
   14003605b:	add    BYTE PTR [rax],al
   14003605d:	add    BYTE PTR [rax],al
   14003605f:	add    BYTE PTR [rax],al
   140036061:	jnp    0x140036067
   140036063:	add    BYTE PTR [rax],al
   140036065:	add    BYTE PTR [rax],al
   140036067:	add    al,dh
   140036069:	jp     0x14003606f
   14003606b:	add    BYTE PTR [rax],al
   14003606d:	add    BYTE PTR [rax],al
   14003606f:	add    dh,bl
   140036071:	jp     0x140036077
   140036073:	add    BYTE PTR [rax],al
   140036075:	add    BYTE PTR [rax],al
   140036077:	add    dl,cl
   140036079:	jp     0x14003607f
   14003607b:	add    BYTE PTR [rax],al
   14003607d:	add    BYTE PTR [rax],al
   14003607f:	add    BYTE PTR [rdx+rdi*2+0x4],ch
   140036086:	add    BYTE PTR [rax],al
   140036088:	mov    ?,WORD PTR [rdx+0x4]
   14003608b:	add    BYTE PTR [rax],al
   14003608d:	add    BYTE PTR [rax],al
   14003608f:	add    al,bh
   140036091:	jnp    0x140036097
	...
   14003609f:	add    dl,dl
   1400360a1:	jns    0x1400360a7
   1400360a3:	add    BYTE PTR [rax],al
   1400360a5:	add    BYTE PTR [rax],al
   1400360a7:	add    BYTE PTR [rsi],ch
   1400360a9:	jp     0x1400360af
   1400360ab:	add    BYTE PTR [rax],al
   1400360ad:	add    BYTE PTR [rax],al
   1400360af:	add    BYTE PTR [rdx],ah
   1400360b1:	jp     0x1400360b7
   1400360b3:	add    BYTE PTR [rax],al
   1400360b5:	add    BYTE PTR [rax],al
   1400360b7:	add    BYTE PTR [rsi],cl
   1400360b9:	jp     0x1400360bf
   1400360bb:	add    BYTE PTR [rax],al
   1400360bd:	add    BYTE PTR [rax],al
   1400360bf:	add    ah,bh
   1400360c1:	jns    0x1400360c7
   1400360c3:	add    BYTE PTR [rax],al
   1400360c5:	add    BYTE PTR [rax],al
   1400360c7:	add    dl,bh
   1400360c9:	js     0x1400360cf
   1400360cb:	add    BYTE PTR [rax],al
   1400360cd:	add    BYTE PTR [rax],al
   1400360cf:	add    dl,ch
   1400360d1:	js     0x1400360d7
   1400360d3:	add    BYTE PTR [rax],al
   1400360d5:	add    BYTE PTR [rax],al
   1400360d7:	add    dl,bl
   1400360d9:	js     0x1400360df
   1400360db:	add    BYTE PTR [rax],al
   1400360dd:	add    BYTE PTR [rax],al
   1400360df:	add    BYTE PTR [rcx+rdi*2+0x4],bh
   1400360e6:	add    BYTE PTR [rax],al
   1400360e8:	test   al,0x79
   1400360ea:	add    al,0x0
   1400360ec:	add    BYTE PTR [rax],al
   1400360ee:	add    BYTE PTR [rax],al
   1400360f0:	cwde   
   1400360f1:	jns    0x1400360f7
   1400360f3:	add    BYTE PTR [rax],al
   1400360f5:	add    BYTE PTR [rax],al
   1400360f7:	add    BYTE PTR [rsi+0x479],cl
   1400360fd:	add    BYTE PTR [rax],al
   1400360ff:	add    BYTE PTR [rdx+0x479],al
   140036105:	add    BYTE PTR [rax],al
   140036107:	add    BYTE PTR [rcx+rdi*2+0x4],dh
   14003610b:	add    BYTE PTR [rax],al
   14003610d:	add    BYTE PTR [rax],al
   14003610f:	add    BYTE PTR [rax+0x79],ch
   140036112:	add    al,0x0
   140036114:	add    BYTE PTR [rax],al
   140036116:	add    BYTE PTR [rax],al
   140036118:	pop    rdx
   140036119:	jns    0x14003611f
   14003611b:	add    BYTE PTR [rax],al
   14003611d:	add    BYTE PTR [rax],al
   14003611f:	add    BYTE PTR [rsi+0x79],cl
   140036122:	add    al,0x0
   140036124:	add    BYTE PTR [rax],al
   140036126:	add    BYTE PTR [rax],al
   140036128:	rex.R jns 0x14003612f
   14003612b:	add    BYTE PTR [rax],al
   14003612d:	add    BYTE PTR [rax],al
   14003612f:	add    BYTE PTR [rsi],dh
   140036131:	jns    0x140036137
   140036133:	add    BYTE PTR [rax],al
   140036135:	add    BYTE PTR [rax],al
   140036137:	add    BYTE PTR [rsi],ah
   140036139:	jns    0x14003613f
   14003613b:	add    BYTE PTR [rax],al
   14003613d:	add    BYTE PTR [rax],al
   14003613f:	add    BYTE PTR [rax],bl
   140036141:	jns    0x140036147
   140036143:	add    BYTE PTR [rax],al
   140036145:	add    BYTE PTR [rax],al
   140036147:	add    BYTE PTR [rax],cl
   140036149:	jns    0x14003614f
   14003614b:	add    BYTE PTR [rax],al
   14003614d:	add    BYTE PTR [rax],al
   14003614f:	add    dh,ah
   140036151:	jns    0x140036157
	...
   14003615f:	add    BYTE PTR [rax+0x70],dh
   140036162:	add    al,0x0
   140036164:	add    BYTE PTR [rax],al
   140036166:	add    BYTE PTR [rax],al
   140036168:	test   BYTE PTR [rax+0x4],dh
   14003616b:	add    BYTE PTR [rax],al
   14003616d:	add    BYTE PTR [rax],al
   14003616f:	add    BYTE PTR [rdx+0x470],dl
   140036175:	add    BYTE PTR [rax],al
   140036177:	add    BYTE PTR [rsi+0x470],bl
   14003617d:	add    BYTE PTR [rax],al
   14003617f:	add    BYTE PTR [rsi+0x470],dh
   140036185:	add    BYTE PTR [rax],al
   140036187:	add    BYTE PTR [rsi+0x470],bh
   14003618d:	add    BYTE PTR [rax],al
   14003618f:	add    ah,cl
   140036191:	jo     0x140036197
   140036193:	add    BYTE PTR [rax],al
   140036195:	add    BYTE PTR [rax],al
   140036197:	add    ah,bl
   140036199:	jo     0x14003619f
   14003619b:	add    BYTE PTR [rax],al
   14003619d:	add    BYTE PTR [rax],al
   14003619f:	add    ah,ch
   1400361a1:	jo     0x1400361a7
   1400361a3:	add    BYTE PTR [rax],al
   1400361a5:	add    BYTE PTR [rax],al
   1400361a7:	add    dl,bh
   1400361a9:	jo     0x1400361af
   1400361ab:	add    BYTE PTR [rax],al
   1400361ad:	add    BYTE PTR [rax],al
   1400361af:	add    BYTE PTR [rax],cl
   1400361b1:	jno    0x1400361b7
   1400361b3:	add    BYTE PTR [rax],al
   1400361b5:	add    BYTE PTR [rax],al
   1400361b7:	add    BYTE PTR [rdx],dl
   1400361b9:	jno    0x1400361bf
   1400361bb:	add    BYTE PTR [rax],al
   1400361bd:	add    BYTE PTR [rax],al
   1400361bf:	add    BYTE PTR [rsi],bl
   1400361c1:	jno    0x1400361c7
   1400361c3:	add    BYTE PTR [rax],al
   1400361c5:	add    BYTE PTR [rax],al
   1400361c7:	add    BYTE PTR [rax],ch
   1400361c9:	jno    0x1400361cf
   1400361cb:	add    BYTE PTR [rax],al
   1400361cd:	add    BYTE PTR [rax],al
   1400361cf:	add    BYTE PTR [rdx],bh
   1400361d1:	jno    0x1400361d7
   1400361d3:	add    BYTE PTR [rax],al
   1400361d5:	add    BYTE PTR [rax],al
   1400361d7:	add    BYTE PTR [rdx+0x71],cl
   1400361da:	add    al,0x0
   1400361dc:	add    BYTE PTR [rax],al
   1400361de:	add    BYTE PTR [rax],al
   1400361e0:	pop    rdx
   1400361e1:	jno    0x1400361e7
   1400361e3:	add    BYTE PTR [rax],al
   1400361e5:	add    BYTE PTR [rax],al
   1400361e7:	add    BYTE PTR [rax+0x71],dh
   1400361ea:	add    al,0x0
   1400361ec:	add    BYTE PTR [rax],al
   1400361ee:	add    BYTE PTR [rax],al
   1400361f0:	jle    0x140036263
   1400361f2:	add    al,0x0
   1400361f4:	add    BYTE PTR [rax],al
   1400361f6:	add    BYTE PTR [rax],al
   1400361f8:	pop    rsi
   1400361f9:	jo     0x1400361ff
   1400361fb:	add    BYTE PTR [rax],al
   1400361fd:	add    BYTE PTR [rax],al
   1400361ff:	add    BYTE PTR [rax+0x471],ch
   140036205:	add    BYTE PTR [rax],al
   140036207:	add    al,al
   140036209:	jno    0x14003620f
   14003620b:	add    BYTE PTR [rax],al
   14003620d:	add    BYTE PTR [rax],al
   14003620f:	add    dl,bl
   140036211:	jno    0x140036217
   140036213:	add    BYTE PTR [rax],al
   140036215:	add    BYTE PTR [rax],al
   140036217:	add    ah,dh
   140036219:	jno    0x14003621f
   14003621b:	add    BYTE PTR [rax],al
   14003621d:	add    BYTE PTR [rax],al
   14003621f:	add    BYTE PTR [rsi],al
   140036221:	jb     0x140036227
   140036223:	add    BYTE PTR [rax],al
   140036225:	add    BYTE PTR [rax],al
   140036227:	add    BYTE PTR [rdx+rsi*2],dl
   14003622a:	add    al,0x0
   14003622c:	add    BYTE PTR [rax],al
   14003622e:	add    BYTE PTR [rax],al
   140036230:	es jb  0x140036237
   140036233:	add    BYTE PTR [rax],al
   140036235:	add    BYTE PTR [rax],al
   140036237:	add    BYTE PTR [rax+0x72],al
   14003623a:	add    al,0x0
   14003623c:	add    BYTE PTR [rax],al
   14003623e:	add    BYTE PTR [rax],al
   140036240:	push   rax
   140036241:	jb     0x140036247
   140036243:	add    BYTE PTR [rax],al
   140036245:	add    BYTE PTR [rax],al
   140036247:	add    BYTE PTR [rdx+0x72],ch
   14003624a:	add    al,0x0
   14003624c:	add    BYTE PTR [rax],al
   14003624e:	add    BYTE PTR [rax],al
   140036250:	xchg   edx,eax
   140036251:	jb     0x140036257
   140036253:	add    BYTE PTR [rax],al
   140036255:	add    BYTE PTR [rax],al
   140036257:	add    BYTE PTR [rdx+rsi*2+0x4],ah
   14003625e:	add    BYTE PTR [rax],al
   140036260:	mov    dh,0x72
   140036262:	add    al,0x0
   140036264:	add    BYTE PTR [rax],al
   140036266:	add    BYTE PTR [rax],al
   140036268:	int3   
   140036269:	jb     0x14003626f
   14003626b:	add    BYTE PTR [rax],al
   14003626d:	add    BYTE PTR [rax],al
   14003626f:	add    dl,ah
   140036271:	jb     0x140036277
   140036273:	add    BYTE PTR [rax],al
   140036275:	add    BYTE PTR [rax],al
   140036277:	add    dl,dh
   140036279:	jb     0x14003627f
   14003627b:	add    BYTE PTR [rax],al
   14003627d:	add    BYTE PTR [rax],al
   14003627f:	add    BYTE PTR [rbx+rsi*2],al
   140036282:	add    al,0x0
   140036284:	add    BYTE PTR [rax],al
   140036286:	add    BYTE PTR [rax],al
   140036288:	adc    al,0x73
   14003628a:	add    al,0x0
   14003628c:	add    BYTE PTR [rax],al
   14003628e:	add    BYTE PTR [rax],al
   140036290:	es jae 0x140036297
   140036293:	add    BYTE PTR [rax],al
   140036295:	add    BYTE PTR [rax],al
   140036297:	add    BYTE PTR [rsi],dh
   140036299:	jae    0x14003629f
   14003629b:	add    BYTE PTR [rax],al
   14003629d:	add    BYTE PTR [rax],al
   14003629f:	add    BYTE PTR [rsi+0x73],al
   1400362a2:	add    al,0x0
   1400362a4:	add    BYTE PTR [rax],al
   1400362a6:	add    BYTE PTR [rax],al
   1400362a8:	pop    rsp
   1400362a9:	jae    0x1400362af
   1400362ab:	add    BYTE PTR [rax],al
   1400362ad:	add    BYTE PTR [rax],al
   1400362af:	add    BYTE PTR [rax+0x70],dl
   1400362b2:	add    al,0x0
   1400362b4:	add    BYTE PTR [rax],al
   1400362b6:	add    BYTE PTR [rax],al
   1400362b8:	ds jo  0x1400362bf
   1400362bb:	add    BYTE PTR [rax],al
   1400362bd:	add    BYTE PTR [rax],al
   1400362bf:	add    BYTE PTR [rdx],dh
   1400362c1:	jo     0x1400362c7
   1400362c3:	add    BYTE PTR [rax],al
   1400362c5:	add    BYTE PTR [rax],al
   1400362c7:	add    BYTE PTR [rsi],ah
   1400362c9:	jo     0x1400362cf
   1400362cb:	add    BYTE PTR [rax],al
   1400362cd:	add    BYTE PTR [rax],al
   1400362cf:	add    BYTE PTR [rdx],dl
   1400362d1:	jo     0x1400362d7
   1400362d3:	add    BYTE PTR [rax],al
   1400362d5:	add    BYTE PTR [rax],al
   1400362d7:	add    al,bh
   1400362d9:	outs   dx,DWORD PTR ds:[rsi]
   1400362da:	add    al,0x0
   1400362dc:	add    BYTE PTR [rax],al
   1400362de:	add    BYTE PTR [rax],al
   1400362e0:	in     al,0x6f
   1400362e2:	add    al,0x0
   1400362e4:	add    BYTE PTR [rax],al
   1400362e6:	add    BYTE PTR [rax],al
   1400362e8:	shr    BYTE PTR [rdi+0x4],1
   1400362eb:	add    BYTE PTR [rax],al
   1400362ed:	add    BYTE PTR [rax],al
   1400362ef:	add    BYTE PTR [rdx+0x46f],dh
   1400362f5:	add    BYTE PTR [rax],al
   1400362f7:	add    BYTE PTR [rsi+0x46f],dl
   1400362fd:	add    BYTE PTR [rax],al
   1400362ff:	add    BYTE PTR [rdx+0x46f],al
   140036305:	add    BYTE PTR [rax],al
   140036307:	add    BYTE PTR [rsi+0x6f],dh
   14003630a:	add    al,0x0
   14003630c:	add    BYTE PTR [rax],al
   14003630e:	add    BYTE PTR [rax],al
   140036310:	push   0x6f
   140036312:	add    al,0x0
   140036314:	add    BYTE PTR [rax],al
   140036316:	add    BYTE PTR [rax],al
   140036318:	pop    rax
   140036319:	outs   dx,DWORD PTR ds:[rsi]
   14003631a:	add    al,0x0
   14003631c:	add    BYTE PTR [rax],al
   14003631e:	add    BYTE PTR [rax],al
   140036320:	rex.WX outs dx,DWORD PTR ds:[rsi]
   140036322:	add    al,0x0
   140036324:	add    BYTE PTR [rax],al
   140036326:	add    BYTE PTR [rax],al
   140036328:	cmp    al,0x6f
   14003632a:	add    al,0x0
   14003632c:	add    BYTE PTR [rax],al
   14003632e:	add    BYTE PTR [rax],al
   140036330:	sub    BYTE PTR [rdi+0x4],ch
   140036333:	add    BYTE PTR [rax],al
   140036335:	add    BYTE PTR [rax],al
   140036337:	add    BYTE PTR [rdi+rbp*2],dl
   14003633a:	add    al,0x0
   14003633c:	add    BYTE PTR [rax],al
   14003633e:	add    BYTE PTR [rax],al
   140036340:	add    ch,BYTE PTR [rdi+0x4]
   140036343:	add    BYTE PTR [rax],al
   140036345:	add    BYTE PTR [rax],al
   140036347:	add    dh,dh
   140036349:	outs   dx,BYTE PTR ds:[rsi]
   14003634a:	add    al,0x0
   14003634c:	add    BYTE PTR [rax],al
   14003634e:	add    BYTE PTR [rax],al
   140036350:	(bad)  
   140036351:	outs   dx,BYTE PTR ds:[rsi]
   140036352:	add    al,0x0
   140036354:	add    BYTE PTR [rax],al
   140036356:	add    BYTE PTR [rax],al
   140036358:	fsubr  DWORD PTR [rsi+0x4]
   14003635b:	add    BYTE PTR [rax],al
   14003635d:	add    BYTE PTR [rax],al
   14003635f:	add    dh,al
   140036361:	outs   dx,BYTE PTR ds:[rsi]
   140036362:	add    al,0x0
   140036364:	add    BYTE PTR [rax],al
   140036366:	add    BYTE PTR [rax],al
   140036368:	mov    dl,0x6e
   14003636a:	add    al,0x0
   14003636c:	add    BYTE PTR [rax],al
   14003636e:	add    BYTE PTR [rax],al
   140036370:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140036371:	outs   dx,BYTE PTR ds:[rsi]
   140036372:	add    al,0x0
   140036374:	add    BYTE PTR [rax],al
   140036376:	add    BYTE PTR [rax],al
   140036378:	(bad)  
   140036379:	outs   dx,BYTE PTR ds:[rsi]
   14003637a:	add    al,0x0
   14003637c:	add    BYTE PTR [rax],al
   14003637e:	add    BYTE PTR [rax],al
   140036380:	test   BYTE PTR [rsi+0x4],ch
   140036383:	add    BYTE PTR [rax],al
   140036385:	add    BYTE PTR [rax],al
   140036387:	add    BYTE PTR [rax+0x6e],dh
   14003638a:	add    al,0x0
   14003638c:	add    BYTE PTR [rax],al
   14003638e:	add    BYTE PTR [rax],al
   140036390:	pop    rsi
   140036391:	outs   dx,BYTE PTR ds:[rsi]
   140036392:	add    al,0x0
   140036394:	add    BYTE PTR [rax],al
   140036396:	add    BYTE PTR [rax],al
   140036398:	rex.W outs dx,BYTE PTR ds:[rsi]
   14003639a:	add    al,0x0
   14003639c:	add    BYTE PTR [rax],al
   14003639e:	add    BYTE PTR [rax],al
   1400363a0:	cmp    ch,BYTE PTR [rsi+0x4]
   1400363a3:	add    BYTE PTR [rax],al
   1400363a5:	add    BYTE PTR [rax],al
   1400363a7:	add    BYTE PTR [rax],ch
   1400363a9:	outs   dx,BYTE PTR ds:[rsi]
   1400363aa:	add    al,0x0
   1400363ac:	add    BYTE PTR [rax],al
   1400363ae:	add    BYTE PTR [rax],al
   1400363b0:	adc    ch,BYTE PTR [rsi+0x4]
   1400363b3:	add    BYTE PTR [rax],al
   1400363b5:	add    BYTE PTR [rax],al
   1400363b7:	add    BYTE PTR [rsi],al
   1400363b9:	outs   dx,BYTE PTR ds:[rsi]
   1400363ba:	add    al,0x0
   1400363bc:	add    BYTE PTR [rax],al
   1400363be:	add    BYTE PTR [rax],al
   1400363c0:	lock ins DWORD PTR es:[rdi],dx
   1400363c2:	add    al,0x0
   1400363c4:	add    BYTE PTR [rax],al
   1400363c6:	add    BYTE PTR [rax],al
   1400363c8:	fisubr DWORD PTR [rbp+0x4]
   1400363cb:	add    BYTE PTR [rax],al
   1400363cd:	add    BYTE PTR [rax],al
   1400363cf:	add    dl,cl
   1400363d1:	ins    DWORD PTR es:[rdi],dx
   1400363d2:	add    al,0x0
   1400363d4:	add    BYTE PTR [rax],al
   1400363d6:	add    BYTE PTR [rax],al
   1400363d8:	mov    edx,0x46d
   1400363dd:	add    BYTE PTR [rax],al
   1400363df:	add    BYTE PTR [rdx+0x46d],ch
   1400363e5:	add    BYTE PTR [rax],al
   1400363e7:	add    BYTE PTR [rax+0x46d],bl
   1400363ed:	add    BYTE PTR [rax],al
   1400363ef:	add    BYTE PTR [rdx+0x46d],cl
   1400363f5:	add    BYTE PTR [rax],al
   1400363f7:	add    BYTE PTR [rdx+0x6d],dh
   1400363fa:	add    al,0x0
   1400363fc:	add    BYTE PTR [rax],al
   1400363fe:	add    BYTE PTR [rax],al
   140036400:	(bad)  
   140036401:	ins    DWORD PTR es:[rdi],dx
   140036402:	add    al,0x0
   140036404:	add    BYTE PTR [rax],al
   140036406:	add    BYTE PTR [rax],al
   140036408:	push   rsp
   140036409:	ins    DWORD PTR es:[rdi],dx
   14003640a:	add    al,0x0
   14003640c:	add    BYTE PTR [rax],al
   14003640e:	add    BYTE PTR [rax],al
   140036410:	rex.RX ins DWORD PTR es:[rdi],dx
   140036412:	add    al,0x0
   140036414:	add    BYTE PTR [rax],al
   140036416:	add    BYTE PTR [rax],al
   140036418:	ss ins DWORD PTR es:[rdi],dx
   14003641a:	add    al,0x0
   14003641c:	add    BYTE PTR [rax],al
   14003641e:	add    BYTE PTR [rax],al
   140036420:	es ins DWORD PTR es:[rdi],dx
   140036422:	add    al,0x0
   140036424:	add    BYTE PTR [rax],al
   140036426:	add    BYTE PTR [rax],al
   140036428:	(bad)  
   140036429:	ins    DWORD PTR es:[rdi],dx
   14003642a:	add    al,0x0
   14003642c:	add    BYTE PTR [rax],al
   14003642e:	add    BYTE PTR [rax],al
   140036430:	or     BYTE PTR [rbp+0x4],ch
   140036433:	add    BYTE PTR [rax],al
   140036435:	add    BYTE PTR [rax],al
   140036437:	add    ah,bh
   140036439:	ins    BYTE PTR es:[rdi],dx
   14003643a:	add    al,0x0
   14003643c:	add    BYTE PTR [rax],al
   14003643e:	add    BYTE PTR [rax],al
   140036440:	loopne 0x1400364ae
   140036442:	add    al,0x0
   140036444:	add    BYTE PTR [rax],al
   140036446:	add    BYTE PTR [rax],al
   140036448:	enter  0x46c,0x0
   14003644c:	add    BYTE PTR [rax],al
   14003644e:	add    BYTE PTR [rax],al
   140036450:	mov    edx,0x46c
   140036455:	add    BYTE PTR [rax],al
   140036457:	add    BYTE PTR [rdx+0x46c],ah
   14003645d:	add    BYTE PTR [rax],al
   14003645f:	add    BYTE PTR [rdx+0x46c],dl
   140036465:	add    BYTE PTR [rax],al
   140036467:	add    BYTE PTR [rdx+0x46c],al
   14003646d:	add    BYTE PTR [rax],al
   14003646f:	add    BYTE PTR [rsp+rbp*2+0x4],dh
   140036473:	add    BYTE PTR [rax],al
   140036475:	add    BYTE PTR [rax],al
   140036477:	add    BYTE PTR [rsp+rbp*2+0x4],ah
   14003647b:	add    BYTE PTR [rax],al
   14003647d:	add    BYTE PTR [rax],al
   14003647f:	add    BYTE PTR [rsp+rbp*2+0x4],dl
   140036483:	add    BYTE PTR [rax],al
   140036485:	add    BYTE PTR [rax],al
   140036487:	add    BYTE PTR [rsp+rbp*2+0x4],al
   14003648b:	add    BYTE PTR [rax],al
   14003648d:	add    BYTE PTR [rax],al
   14003648f:	add    BYTE PTR [rax],bh
   140036491:	ins    BYTE PTR es:[rdi],dx
   140036492:	add    al,0x0
   140036494:	add    BYTE PTR [rax],al
   140036496:	add    BYTE PTR [rax],al
   140036498:	sub    ch,BYTE PTR [rsp+rax*1+0x0]
   14003649c:	add    BYTE PTR [rax],al
   14003649e:	add    BYTE PTR [rax],al
   1400364a0:	(bad)  
   1400364a1:	ins    BYTE PTR es:[rdi],dx
   1400364a2:	add    al,0x0
   1400364a4:	add    BYTE PTR [rax],al
   1400364a6:	add    BYTE PTR [rax],al
   1400364a8:	add    al,0x6c
   1400364aa:	add    al,0x0
   1400364ac:	add    BYTE PTR [rax],al
   1400364ae:	add    BYTE PTR [rax],al
   1400364b0:	repnz imul eax,DWORD PTR [rax+rax*1],0x0
   1400364b5:	add    BYTE PTR [rax],al
   1400364b7:	add    dh,ah
   1400364b9:	imul   eax,DWORD PTR [rax+rax*1],0x0
   1400364bd:	add    BYTE PTR [rax],al
   1400364bf:	add    al,dl
   1400364c1:	imul   eax,DWORD PTR [rax+rax*1],0x0
   1400364c5:	add    BYTE PTR [rax],al
   1400364c7:	add    al,al
   1400364c9:	imul   eax,DWORD PTR [rax+rax*1],0x0
   1400364cd:	add    BYTE PTR [rax],al
   1400364cf:	add    BYTE PTR [rax+0x46b],dh
   1400364d5:	add    BYTE PTR [rax],al
   1400364d7:	add    BYTE PTR [rbx+rbp*2+0x4],ah
   1400364de:	add    BYTE PTR [rax],al
   1400364e0:	mov    gs,WORD PTR [rbx+0x4]
   1400364e3:	add    BYTE PTR [rax],al
   1400364e5:	add    BYTE PTR [rax],al
   1400364e7:	add    BYTE PTR [rsi+0x471],cl
	...
   1400364f5:	add    BYTE PTR [rax],al
   1400364f7:	add    BYTE PTR [rax+0x7c],cl
   1400364fa:	add    al,0x0
   1400364fc:	add    BYTE PTR [rax],al
   1400364fe:	add    BYTE PTR [rax],al
   140036500:	sub    al,0x7c
   140036502:	add    al,0x0
	...
   140036510:	or     DWORD PTR [rax],eax
   140036512:	add    BYTE PTR [rax],al
   140036514:	add    BYTE PTR [rax],al
   140036516:	add    BYTE PTR [rax+0xc],al
   14003651c:	add    BYTE PTR [rax],al
   14003651e:	add    BYTE PTR [rax+0x8],al
   140036524:	add    BYTE PTR [rax],al
   140036526:	add    BYTE PTR [rax+0x0],al
   14003652c:	add    BYTE PTR [rax],al
   14003652e:	add    BYTE PTR [rax],al
   140036530:	jo     0x14003659d
   140036532:	add    al,0x0
   140036534:	add    BYTE PTR [rax],al
   140036536:	add    BYTE PTR [rax],al
   140036538:	pop    rdx
   140036539:	imul   eax,DWORD PTR [rax+rax*1],0x0
   14003653d:	add    BYTE PTR [rax],al
   14003653f:	add    BYTE PTR [rax+0x6b],al
   140036542:	add    al,0x0
   140036544:	add    BYTE PTR [rax],al
   140036546:	add    BYTE PTR [rax],al
   140036548:	imul   eax,DWORD PTR cs:[rax+rax*1],0x0
   14003654d:	add    BYTE PTR [rax],al
   14003654f:	add    BYTE PTR [rax],dl
   140036551:	imul   eax,DWORD PTR [rax+rax*1],0x0
	...
   14003655d:	add    BYTE PTR [rax],al
   14003655f:	add    BYTE PTR [rax+rdi*2+0x4],bh
   140036566:	add    BYTE PTR [rax],al
   140036568:	scas   al,BYTE PTR es:[rdi]
   140036569:	js     0x14003656f
   14003656b:	add    BYTE PTR [rax],al
   14003656d:	add    BYTE PTR [rax],al
   14003656f:	add    BYTE PTR [rax+0x478],ah
   140036575:	add    BYTE PTR [rax],al
   140036577:	add    BYTE PTR [rax+rdi*2+0x4],dl
   14003657e:	add    BYTE PTR [rax],al
   140036580:	(bad)  
   140036581:	js     0x140036587
   140036583:	add    BYTE PTR [rax],al
   140036585:	add    BYTE PTR [rax],al
   140036587:	add    BYTE PTR [rax+rdi*2+0x4],dh
   14003658b:	add    BYTE PTR [rax],al
   14003658d:	add    BYTE PTR [rax],al
   14003658f:	add    BYTE PTR [rdx+0x78],ah
   140036592:	add    al,0x0
   140036594:	add    BYTE PTR [rax],al
   140036596:	add    BYTE PTR [rax],al
   140036598:	push   rax
   140036599:	js     0x14003659f
   14003659b:	add    BYTE PTR [rax],al
   14003659d:	add    BYTE PTR [rax],al
   14003659f:	add    BYTE PTR [rsi],dh
   1400365a1:	js     0x1400365a7
   1400365a3:	add    BYTE PTR [rax],al
   1400365a5:	add    BYTE PTR [rax],al
   1400365a7:	add    BYTE PTR [rdx],ch
   1400365a9:	js     0x1400365af
   1400365ab:	add    BYTE PTR [rax],al
   1400365ad:	add    BYTE PTR [rax],al
   1400365af:	add    BYTE PTR [rsi],bl
   1400365b1:	js     0x1400365b7
   1400365b3:	add    BYTE PTR [rax],al
   1400365b5:	add    BYTE PTR [rax],al
   1400365b7:	add    BYTE PTR [rax],dl
   1400365b9:	js     0x1400365bf
   1400365bb:	add    BYTE PTR [rax],al
   1400365bd:	add    BYTE PTR [rax],al
   1400365bf:	add    BYTE PTR [rax],al
   1400365c1:	js     0x1400365c7
   1400365c3:	add    BYTE PTR [rax],al
   1400365c5:	add    BYTE PTR [rax],al
   1400365c7:	add    al,dh
   1400365c9:	ja     0x1400365cf
   1400365cb:	add    BYTE PTR [rax],al
   1400365cd:	add    BYTE PTR [rax],al
   1400365cf:	add    al,dl
   1400365d1:	ja     0x1400365d7
   1400365d3:	add    BYTE PTR [rax],al
   1400365d5:	add    BYTE PTR [rax],al
   1400365d7:	add    BYTE PTR [rsi+0x477],dh
   1400365dd:	add    BYTE PTR [rax],al
   1400365df:	add    BYTE PTR [rdx+0x477],ch
   1400365e5:	add    BYTE PTR [rax],al
   1400365e7:	add    BYTE PTR [rdi+rsi*2+0x4],dl
   1400365ee:	add    BYTE PTR [rax],al
   1400365f0:	xchg   BYTE PTR [rdi+0x4],dh
   1400365f3:	add    BYTE PTR [rax],al
   1400365f5:	add    BYTE PTR [rax],al
   1400365f7:	add    BYTE PTR [rsi+0x77],dh
   1400365fa:	add    al,0x0
   1400365fc:	add    BYTE PTR [rax],al
   1400365fe:	add    BYTE PTR [rax],al
   140036600:	data16 ja 0x140036607
   140036603:	add    BYTE PTR [rax],al
   140036605:	add    BYTE PTR [rax],al
   140036607:	add    BYTE PTR [rdx+0x77],dl
   14003660a:	add    al,0x0
   14003660c:	add    BYTE PTR [rax],al
   14003660e:	add    BYTE PTR [rax],al
   140036610:	ds ja  0x140036617
   140036613:	add    BYTE PTR [rax],al
   140036615:	add    BYTE PTR [rax],al
   140036617:	add    BYTE PTR [rdi+rsi*2],ch
   14003661a:	add    al,0x0
   14003661c:	add    BYTE PTR [rax],al
   14003661e:	add    BYTE PTR [rax],al
   140036620:	sbb    al,0x77
   140036622:	add    al,0x0
   140036624:	add    BYTE PTR [rax],al
   140036626:	add    BYTE PTR [rax],al
   140036628:	or     dh,BYTE PTR [rdi+0x4]
   14003662b:	add    BYTE PTR [rax],al
   14003662d:	add    BYTE PTR [rax],al
   14003662f:	add    BYTE PTR [rax],al
   140036631:	ja     0x140036637
   140036633:	add    BYTE PTR [rax],al
   140036635:	add    BYTE PTR [rax],al
   140036637:	add    BYTE PTR [rdx+0x73],bh
   14003663a:	add    al,0x0
   14003663c:	add    BYTE PTR [rax],al
   14003663e:	add    BYTE PTR [rax],al
   140036640:	nop
   140036641:	jae    0x140036647
   140036643:	add    BYTE PTR [rax],al
   140036645:	add    BYTE PTR [rax],al
   140036647:	add    BYTE PTR [rsi+0x473],bl
   14003664d:	add    BYTE PTR [rax],al
   14003664f:	add    BYTE PTR [rsi+0x473],ch
   140036655:	add    BYTE PTR [rax],al
   140036657:	add    dl,ch
   140036659:	jbe    0x14003665f
   14003665b:	add    BYTE PTR [rax],al
   14003665d:	add    BYTE PTR [rax],al
   14003665f:	add    dl,bl
   140036661:	jbe    0x140036667
   140036663:	add    BYTE PTR [rax],al
   140036665:	add    BYTE PTR [rax],al
   140036667:	add    dl,cl
   140036669:	jbe    0x14003666f
   14003666b:	add    BYTE PTR [rax],al
   14003666d:	add    BYTE PTR [rax],al
   14003666f:	add    BYTE PTR [rax+0x476],bh
   140036675:	add    BYTE PTR [rax],al
   140036677:	add    BYTE PTR [rsi+0x476],ah
   14003667d:	add    BYTE PTR [rax],al
   14003667f:	add    BYTE PTR [rsi+0x476],dl
   140036685:	add    BYTE PTR [rax],al
   140036687:	add    BYTE PTR [rsi+rsi*2+0x4],al
   14003668e:	add    BYTE PTR [rax],al
   140036690:	outs   dx,BYTE PTR ds:[rsi]
   140036691:	jbe    0x140036697
   140036693:	add    BYTE PTR [rax],al
   140036695:	add    BYTE PTR [rax],al
   140036697:	add    BYTE PTR [rdx+0x76],ah
   14003669a:	add    al,0x0
   14003669c:	add    BYTE PTR [rax],al
   14003669e:	add    BYTE PTR [rax],al
   1400366a0:	push   rdx
   1400366a1:	jbe    0x1400366a7
   1400366a3:	add    BYTE PTR [rax],al
   1400366a5:	add    BYTE PTR [rax],al
   1400366a7:	add    BYTE PTR [rsi+0x76],al
   1400366aa:	add    al,0x0
   1400366ac:	add    BYTE PTR [rax],al
   1400366ae:	add    BYTE PTR [rax],al
   1400366b0:	xor    al,0x76
   1400366b2:	add    al,0x0
   1400366b4:	add    BYTE PTR [rax],al
   1400366b6:	add    BYTE PTR [rax],al
   1400366b8:	and    dh,BYTE PTR [rsi+0x4]
   1400366bb:	add    BYTE PTR [rax],al
   1400366bd:	add    BYTE PTR [rax],al
   1400366bf:	add    BYTE PTR [rax],bl
   1400366c1:	jbe    0x1400366c7
   1400366c3:	add    BYTE PTR [rax],al
   1400366c5:	add    BYTE PTR [rax],al
   1400366c7:	add    BYTE PTR [rax],cl
   1400366c9:	jbe    0x1400366cf
   1400366cb:	add    BYTE PTR [rax],al
   1400366cd:	add    BYTE PTR [rax],al
   1400366cf:	add    al,dh
   1400366d1:	jne    0x1400366d7
   1400366d3:	add    BYTE PTR [rax],al
   1400366d5:	add    BYTE PTR [rax],al
   1400366d7:	add    ah,ah
   1400366d9:	jne    0x1400366df
   1400366db:	add    BYTE PTR [rax],al
   1400366dd:	add    BYTE PTR [rax],al
   1400366df:	add    dh,cl
   1400366e1:	jne    0x1400366e7
   1400366e3:	add    BYTE PTR [rax],al
   1400366e5:	add    BYTE PTR [rax],al
   1400366e7:	add    BYTE PTR [rsi+0x475],bh
   1400366ed:	add    BYTE PTR [rax],al
   1400366ef:	add    ah,bl
   1400366f1:	ja     0x1400366f7
   1400366f3:	add    BYTE PTR [rax],al
   1400366f5:	add    BYTE PTR [rax],al
   1400366f7:	add    al,al
   1400366f9:	jae    0x1400366ff
   1400366fb:	add    BYTE PTR [rax],al
   1400366fd:	add    BYTE PTR [rax],al
   1400366ff:	add    dh,dl
   140036701:	jae    0x140036707
   140036703:	add    BYTE PTR [rax],al
   140036705:	add    BYTE PTR [rax],al
   140036707:	add    dl,ah
   140036709:	jae    0x14003670f
   14003670b:	add    BYTE PTR [rax],al
   14003670d:	add    BYTE PTR [rax],al
   14003670f:	add    ah,dh
   140036711:	jae    0x140036717
   140036713:	add    BYTE PTR [rax],al
   140036715:	add    BYTE PTR [rax],al
   140036717:	add    BYTE PTR [rsp+rsi*2],al
   14003671a:	add    al,0x0
   14003671c:	add    BYTE PTR [rax],al
   14003671e:	add    BYTE PTR [rax],al
   140036720:	and    BYTE PTR [rsp+rax*1+0x0],dh
   140036724:	add    BYTE PTR [rax],al
   140036726:	add    BYTE PTR [rax],al
   140036728:	cs je  0x14003672f
   14003672b:	add    BYTE PTR [rax],al
   14003672d:	add    BYTE PTR [rax],al
   14003672f:	add    BYTE PTR [rdx+0x74],al
   140036732:	add    al,0x0
   140036734:	add    BYTE PTR [rax],al
   140036736:	add    BYTE PTR [rax],al
   140036738:	push   rdx
   140036739:	je     0x14003673f
   14003673b:	add    BYTE PTR [rax],al
   14003673d:	add    BYTE PTR [rax],al
   14003673f:	add    BYTE PTR [rdx+0x475],dh
   140036745:	add    BYTE PTR [rax],al
   140036747:	add    BYTE PTR [rbp+rsi*2+0x4],bl
   14003674e:	add    BYTE PTR [rax],al
   140036750:	jle    0x1400367c7
   140036752:	add    al,0x0
   140036754:	add    BYTE PTR [rax],al
   140036756:	add    BYTE PTR [rax],al
   140036758:	jo     0x1400367cf
   14003675a:	add    al,0x0
   14003675c:	add    BYTE PTR [rax],al
   14003675e:	add    BYTE PTR [rax],al
   140036760:	fs jne 0x140036767
   140036763:	add    BYTE PTR [rax],al
   140036765:	add    BYTE PTR [rax],al
   140036767:	add    BYTE PTR [rsi+0x75],dl
   14003676a:	add    al,0x0
   14003676c:	add    BYTE PTR [rax],al
   14003676e:	add    BYTE PTR [rax],al
   140036770:	rex.R jne 0x140036777
   140036773:	add    BYTE PTR [rax],al
   140036775:	add    BYTE PTR [rax],al
   140036777:	add    BYTE PTR [rsi*2+0x4],dh
   14003677e:	add    BYTE PTR [rax],al
   140036780:	and    dh,BYTE PTR [rbp+0x4]
   140036783:	add    BYTE PTR [rax],al
   140036785:	add    BYTE PTR [rax],al
   140036787:	add    BYTE PTR [rsi*2+0x4],dl
   14003678e:	add    BYTE PTR [rax],al
   140036790:	add    BYTE PTR [rbp+0x4],dh
   140036793:	add    BYTE PTR [rax],al
   140036795:	add    BYTE PTR [rax],al
   140036797:	add    al,bh
   140036799:	je     0x14003679f
   14003679b:	add    BYTE PTR [rax],al
   14003679d:	add    BYTE PTR [rax],al
   14003679f:	add    ah,ch
   1400367a1:	je     0x1400367a7
   1400367a3:	add    BYTE PTR [rax],al
   1400367a5:	add    BYTE PTR [rax],al
   1400367a7:	add    dh,bl
   1400367a9:	je     0x1400367af
   1400367ab:	add    BYTE PTR [rax],al
   1400367ad:	add    BYTE PTR [rax],al
   1400367af:	add    dl,cl
   1400367b1:	je     0x1400367b7
   1400367b3:	add    BYTE PTR [rax],al
   1400367b5:	add    BYTE PTR [rax],al
   1400367b7:	add    BYTE PTR [rsi+0x474],dh
   1400367bd:	add    BYTE PTR [rax],al
   1400367bf:	add    BYTE PTR [rsp+rsi*2+0x4],ah
   1400367c6:	add    BYTE PTR [rax],al
   1400367c8:	nop
   1400367c9:	je     0x1400367cf
   1400367cb:	add    BYTE PTR [rax],al
   1400367cd:	add    BYTE PTR [rax],al
   1400367cf:	add    BYTE PTR [rdx+0x474],al
   1400367d5:	add    BYTE PTR [rax],al
   1400367d7:	add    BYTE PTR [rdx+0x74],dh
   1400367da:	add    al,0x0
   1400367dc:	add    BYTE PTR [rax],al
   1400367de:	add    BYTE PTR [rax],al
   1400367e0:	(bad)  
   1400367e1:	je     0x1400367e7
   1400367e3:	add    BYTE PTR [rax],al
   1400367e5:	add    BYTE PTR [rax],al
   1400367e7:	add    ah,al
   1400367e9:	ja     0x1400367ef
	...
   1400367f7:	add    BYTE PTR [rdx+0x7a],bl
   1400367fa:	add    al,0x0
   1400367fc:	add    BYTE PTR [rax],al
   1400367fe:	add    BYTE PTR [rax],al
   140036800:	jo     0x14003687c
   140036802:	add    al,0x0
   140036804:	add    BYTE PTR [rax],al
   140036806:	add    BYTE PTR [rax],al
   140036808:	rex.WX jp 0x14003680f
	...
   14003681f:	add    BYTE PTR [rsp+rdx*2],al
   140036822:	add    eax,DWORD PTR [rax+0x1]
   140036825:	add    BYTE PTR [rax],al
   140036827:	add    BYTE PTR [rax],dl
   140036829:	push   rsp
   14003682a:	add    eax,DWORD PTR [rax+0x1]
   14003682d:	add    BYTE PTR [rax],al
   14003682f:	add    BYTE PTR [rax+0x57],ch
   140036832:	add    eax,DWORD PTR [rax+0x1]
   140036835:	add    BYTE PTR [rax],al
   140036837:	add    BYTE PTR [rdi+rdx*2+0x14003],dl
   14003683e:	add    BYTE PTR [rax],al
   140036840:	mov    ah,0x57
   140036842:	add    eax,DWORD PTR [rax+0x1]
   140036845:	add    BYTE PTR [rax],al
   140036847:	add    al,al
   140036849:	push   rdi
   14003684a:	add    eax,DWORD PTR [rax+0x1]
   14003684d:	add    BYTE PTR [rax],al
   14003684f:	add    al,ah
   140036851:	push   rbx
   140036852:	add    eax,DWORD PTR [rax+0x1]
   140036855:	add    BYTE PTR [rax],al
   140036857:	add    ah,ch
   140036859:	push   rbx
   14003685a:	add    eax,DWORD PTR [rax+0x1]
   14003685d:	add    BYTE PTR [rax],al
   14003685f:	add    al,bh
   140036861:	push   rbx
   140036862:	add    eax,DWORD PTR [rax+0x1]
   140036865:	add    BYTE PTR [rax],al
   140036867:	add    BYTE PTR [rsp+rdx*2],bl
   14003686a:	add    eax,DWORD PTR [rax+0x1]
   14003686d:	add    BYTE PTR [rax],al
   14003686f:	add    BYTE PTR [rsp+rdx*2],bh
   140036872:	add    eax,DWORD PTR [rax+0x1]
   140036875:	add    BYTE PTR [rax],al
   140036877:	add    BYTE PTR [rax+0x54],cl
   14003687a:	add    eax,DWORD PTR [rax+0x1]
   14003687d:	add    BYTE PTR [rax],al
   14003687f:	add    BYTE PTR [rsp+rdx*2+0x3],ah
   140036883:	rex add DWORD PTR [rax],eax
   140036886:	add    BYTE PTR [rax],al
   140036888:	hlt    
   140036889:	push   rsp
   14003688a:	add    eax,DWORD PTR [rax+0x1]
   14003688d:	add    BYTE PTR [rax],al
   14003688f:	add    BYTE PTR [rax+0x1400355],cl
   140036895:	add    BYTE PTR [rax],al
   140036897:	add    BYTE PTR [rax],bl
   140036899:	push   rsi
   14003689a:	add    eax,DWORD PTR [rax+0x1]
   14003689d:	add    BYTE PTR [rax],al
   14003689f:	add    BYTE PTR [rsi+rdx*2+0x14003],ch
   1400368a6:	add    BYTE PTR [rax],al
   1400368a8:	mov    eax,0x1400356
   1400368ad:	add    BYTE PTR [rax],al
   1400368af:	add    BYTE PTR [rax],al
   1400368b1:	push   rdi
   1400368b2:	add    eax,DWORD PTR [rax+0x1]
   1400368b5:	add    BYTE PTR [rax],al
   1400368b7:	add    BYTE PTR [rax+0x57],cl
   1400368ba:	add    eax,DWORD PTR [rax+0x1]
   1400368bd:	add    BYTE PTR [rax],al
   1400368bf:	add    BYTE PTR [rdi+rdx*2+0x3],bl
   1400368c3:	rex add DWORD PTR [rax],eax
   1400368c6:	add    BYTE PTR [rax],al
   1400368c8:	mov    BYTE PTR [rdi+0x3],dl
   1400368cb:	rex add DWORD PTR [rax],eax
   1400368ce:	add    BYTE PTR [rax],al
   1400368d0:	rcl    BYTE PTR [rbx+0x3],1
   1400368d3:	rex add DWORD PTR [rax],eax
	...
   1400368e6:	add    BYTE PTR [rax],al
   1400368e8:	sbb    BYTE PTR [rcx+0x1],0x40
   1400368ec:	add    DWORD PTR [rax],eax
   1400368ee:	add    BYTE PTR [rax],al
   1400368f0:	sub    BYTE PTR [rcx+0x14001],al
   1400368f6:	add    BYTE PTR [rax],al
   1400368f8:	push   0x1400245
   1400368fd:	add    BYTE PTR [rax],al
   1400368ff:	add    BYTE PTR [rax-0x63],ah
   140036902:	add    DWORD PTR [rax+0x1],eax
	...
   140036915:	add    BYTE PTR [rax],al
   140036917:	add    al,dl
   140036919:	test   DWORD PTR [rdx],eax
   14003691b:	rex add DWORD PTR [rax],eax
   14003691e:	add    BYTE PTR [rax],al
   140036920:	rex.WR
   140036921:	rex.RX add r8b,BYTE PTR [rax+0x1]
	...
   140036941:	add    BYTE PTR [rax],al
   140036943:	add    bl,dl
   140036945:	jae    0x14003697a
   140036947:	push   rdx
   140036948:	add    BYTE PTR [rax],al
   14003694a:	add    BYTE PTR [rax],al
   14003694c:	add    al,BYTE PTR [rax]
   14003694e:	add    BYTE PTR [rax],al
   140036950:	outs   dx,DWORD PTR ds:[rsi]
   140036951:	add    BYTE PTR [rax],al
   140036953:	add    BYTE PTR [rax-0x21],ch
   140036956:	add    eax,DWORD PTR [rax]
   140036958:	push   0x3cd
   14003695d:	add    BYTE PTR [rax],al
   14003695f:	add    BYTE PTR [rbx+0x4f],al
   140036962:	(bad)  
   140036963:	push   0x65
   140036965:	movsxd esi,DWORD PTR [rax+rax*1+0x44]
   140036969:	gs ins BYTE PTR es:[rdi],dx
   14003696b:	gs je  0x1400369d3
   14003696e:	add    BYTE PTR [rax],al
   140036970:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140036972:	push   rdx
   140036973:	gs ins DWORD PTR es:[rdi],dx
   140036975:	outs   dx,DWORD PTR ds:[rsi]
   140036976:	jbe    0x1400369dd
	...
   140036980:	rex.RX outs dx,DWORD PTR ds:[rsi]
   140036982:	jb     0x1400369e7
   140036984:	gs push rdx
   140036986:	gs ins DWORD PTR es:[rdi],dx
   140036988:	outs   dx,DWORD PTR ds:[rsi]
   140036989:	jbe    0x1400369f0
   14003698b:	add    BYTE PTR [rsi+0x61],dl
   14003698e:	ins    BYTE PTR es:[rdi],dx
   14003698f:	add    BYTE PTR [rdx+0x0],al
   140036992:	add    BYTE PTR [rax],al
   140036994:	add    BYTE PTR [rax],r8b
   140036997:	add    BYTE PTR [rbp+0x0],cl
   14003699a:	add    BYTE PTR [rax],al
   14003699c:	push   rbx
   14003699d:	add    BYTE PTR [rax],al
   14003699f:	add    BYTE PTR [rcx+rbp*2+0x14003],bl
   1400369a6:	add    BYTE PTR [rax],al
   1400369a8:	cwde   
   1400369a9:	imul   eax,DWORD PTR [rbx],0x140
   1400369af:	add    BYTE PTR [rcx+rbp*2+0x14003],dl
   1400369b6:	add    BYTE PTR [rax],al
   1400369b8:	nop
   1400369b9:	imul   eax,DWORD PTR [rbx],0x140
   1400369bf:	add    BYTE PTR [rcx+rbp*2+0x14003],cl
   1400369c6:	add    BYTE PTR [rax],al
   1400369c8:	sub    BYTE PTR [rcx+0x3],0x40
   1400369cc:	add    DWORD PTR [rax],eax
   1400369ce:	add    BYTE PTR [rax],al
   1400369d0:	jo     0x140036a3b
   1400369d2:	add    eax,DWORD PTR [rax+0x1]
   1400369d5:	add    BYTE PTR [rax],al
   1400369d7:	add    BYTE PTR [rax+0x69],ch
   1400369da:	add    eax,DWORD PTR [rax+0x1]
   1400369dd:	add    BYTE PTR [rax],al
   1400369df:	add    BYTE PTR [rax+0x69],ah
   1400369e2:	add    eax,DWORD PTR [rax+0x1]
   1400369e5:	add    BYTE PTR [rax],al
   1400369e7:	add    BYTE PTR [rax],cl
   1400369e9:	add    BYTE PTR [rax],al
   1400369eb:	add    bh,bh
   1400369ed:	inc    DWORD PTR [rax]
	...
   140036a0f:	add    BYTE PTR [rdx],ah
   140036a11:	add    eax,0x21993
   140036a16:	add    BYTE PTR [rax],al
   140036a18:	cmp    al,0x7
   140036a1a:	add    al,0x0
   140036a1c:	add    DWORD PTR [rax],eax
   140036a1e:	add    BYTE PTR [rax],al
   140036a20:	pop    rax
   140036a21:	(bad)  
   140036a22:	add    al,0x0
   140036a24:	(bad)  
   140036a25:	add    BYTE PTR [rax],al
   140036a27:	add    BYTE PTR [rax+0x20000406],al
   140036a2d:	add    BYTE PTR [rax],al
   140036a2f:	add    BYTE PTR [rax],al
   140036a31:	add    BYTE PTR [rax],al
   140036a33:	add    BYTE PTR [rcx],al
   140036a35:	add    BYTE PTR [rax],al
   140036a37:	add    BYTE PTR [rbx+0x49],al
   140036a3a:	outs   dx,BYTE PTR ds:[rsi]
   140036a3b:	jbe    0x140036a9e
   140036a3d:	ins    BYTE PTR es:[rdi],dx
   140036a3e:	imul   esp,DWORD PTR [rcx+rax*2+0x72],0x63784567
   140036a46:	gs jo  0x140036abd
   140036a49:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140036a50:	rex.XB
   140036a51:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   140036a53:	je     0x140036aa8
   140036a55:	jne    0x140036ac7
   140036a57:	jo     0x140036ac8
   140036a59:	jb     0x140036acf
   140036a5b:	gs fs rex.RB js 0x140036ac3
   140036a60:	gs jo  0x140036ad7
   140036a63:	imul   ebp,DWORD PTR [rdi+0x6e],0x4d430000
   140036a6a:	gs ins DWORD PTR es:[rdi],dx
   140036a6c:	outs   dx,DWORD PTR ds:[rsi]
   140036a6d:	jb     0x140036ae8
   140036a6f:	rex.RB js 0x140036ad5
   140036a72:	gs jo  0x140036ae9
   140036a75:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140036a7c:	add    BYTE PTR [rax],al
   140036a7e:	add    BYTE PTR [rax],al
   140036a80:	rex.XB push r11
   140036a82:	imul   ebp,DWORD PTR [rbp+0x70],0x7845656c
   140036a89:	movsxd esp,DWORD PTR [rbp+0x70]
   140036a8c:	je     0x140036af7
   140036a8e:	outs   dx,DWORD PTR ds:[rsi]
   140036a8f:	outs   dx,BYTE PTR ds:[rsi]
	...
   140036a98:	rex.XB
   140036a99:	rex.RB js 0x140036aff
   140036a9c:	gs jo  0x140036b13
   140036a9f:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140036aa6:	add    BYTE PTR [rax],al
   140036aa8:	cwde   
   140036aa9:	push   0x3
   140036aab:	rex add DWORD PTR [rax],eax
   140036aae:	add    BYTE PTR [rax],al
   140036ab0:	adc    BYTE PTR [rax],al
   140036ab2:	add    BYTE PTR [rax],al
   140036ab4:	(bad)  
   140036ab5:	inc    DWORD PTR [rax]
	...
   140036abf:	add    al,ah
   140036ac1:	imul   eax,DWORD PTR [rbx],0x140
	...
   140036ad7:	add    BYTE PTR [rax+0x140036a],al
   140036add:	add    BYTE PTR [rax],al
   140036adf:	add    BYTE PTR [rax-0x1000000],ah
   140036ae5:	inc    DWORD PTR [rax]
	...
   140036aef:	add    BYTE PTR [rax+0x140036a],ch
	...
   140036b05:	add    BYTE PTR [rax],al
   140036b07:	add    BYTE PTR [rax+0x6a],ch
   140036b0a:	add    eax,DWORD PTR [rax+0x1]
   140036b0d:	add    BYTE PTR [rax],al
   140036b0f:	add    BYTE PTR [rax-0x1000000],ah
   140036b15:	inc    DWORD PTR [rax]
	...
   140036b1f:	add    al,bl
   140036b21:	push   0x3
   140036b23:	rex add DWORD PTR [rax],eax
	...
   140036b36:	add    BYTE PTR [rax],al
   140036b38:	push   rax
   140036b39:	push   0x3
   140036b3b:	rex add DWORD PTR [rax],eax
   140036b3e:	add    BYTE PTR [rax],al
   140036b40:	movabs al,ds:0xffff000000
   140036b49:	add    BYTE PTR [rax],al
   140036b4b:	add    BYTE PTR [rax],al
   140036b4d:	add    BYTE PTR [rax],al
   140036b4f:	add    al,bl
   140036b51:	push   0x3
   140036b53:	rex add DWORD PTR [rax],eax
	...
   140036b66:	add    BYTE PTR [rax],al
   140036b68:	cmp    BYTE PTR [rdx+0x3],ch
   140036b6b:	rex add DWORD PTR [rax],eax
   140036b6e:	add    BYTE PTR [rax],al
   140036b70:	movabs al,ds:0xffff000000
   140036b79:	add    BYTE PTR [rax],al
   140036b7b:	add    BYTE PTR [rax],al
   140036b7d:	add    BYTE PTR [rax],al
   140036b7f:	add    al,bl
   140036b81:	push   0x3
   140036b83:	rex add DWORD PTR [rax],eax
	...
   140036b96:	add    BYTE PTR [rax],al
   140036b98:	and    al,BYTE PTR [rip+0x11993]        # 0x140048531
   140036b9e:	add    BYTE PTR [rax],al
   140036ba0:	or     BYTE PTR [rdx],0x4
	...
   140036bab:	add    BYTE PTR [rbx],al
   140036bad:	add    BYTE PTR [rax],al
   140036baf:	add    al,bl
   140036bb1:	(bad)  
   140036bb2:	add    al,0x0
   140036bb4:	and    BYTE PTR [rax],al
   140036bb6:	add    BYTE PTR [rax],al
   140036bb8:	add    BYTE PTR [rax],al
   140036bba:	add    BYTE PTR [rax],al
   140036bbc:	add    DWORD PTR [rax],eax
   140036bbe:	add    BYTE PTR [rax],al
   140036bc0:	loopne 0x140036ba1
   140036bc2:	add    eax,DWORD PTR [rax+0x1]
   140036bc5:	add    BYTE PTR [rax],al
   140036bc7:	add    BYTE PTR [rax+0x1400064],al
   140036bcd:	add    BYTE PTR [rax],al
   140036bcf:	add    BYTE PTR [rax+0x59],cl
   140036bd2:	add    DWORD PTR [rax+0x1],eax
   140036bd5:	add    BYTE PTR [rax],al
   140036bd7:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140036bde:	add    BYTE PTR [rax],al
   140036be0:	hlt    
   140036be1:	movsxd eax,DWORD PTR [rax]
   140036be3:	rex add DWORD PTR [rax],eax
   140036be6:	add    BYTE PTR [rax],al
   140036be8:	mov    WORD PTR [rbp+0x0],fs
   140036beb:	rex add DWORD PTR [rax],eax
   140036bee:	add    BYTE PTR [rax],al
   140036bf0:	cld    
   140036bf1:	movsxd eax,DWORD PTR [rax]
   140036bf3:	rex add DWORD PTR [rax],eax
   140036bf6:	add    BYTE PTR [rax],al
   140036bf8:	adc    cl,ah
   140036bfa:	add    eax,DWORD PTR [rax+0x1]
   140036bfd:	add    BYTE PTR [rax],al
   140036bff:	add    BYTE PTR [rax+0x1400064],cl
   140036c05:	add    BYTE PTR [rax],al
   140036c07:	add    BYTE PTR [rax],ah
   140036c09:	data16 add BYTE PTR [rax+0x1],al
   140036c0d:	add    BYTE PTR [rax],al
   140036c0f:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140036c16:	add    BYTE PTR [rax],al
   140036c18:	hlt    
   140036c19:	movsxd eax,DWORD PTR [rax]
   140036c1b:	rex add DWORD PTR [rax],eax
   140036c1e:	add    BYTE PTR [rax],al
   140036c20:	mov    WORD PTR [rbp+0x0],fs
   140036c23:	rex add DWORD PTR [rax],eax
   140036c26:	add    BYTE PTR [rax],al
   140036c28:	cld    
   140036c29:	movsxd eax,DWORD PTR [rax]
   140036c2b:	rex add DWORD PTR [rax],eax
   140036c2e:	add    BYTE PTR [rax],al
   140036c30:	movabs al,ds:0x90000000014003e1
   140036c39:	add    BYTE PTR fs:[rax+0x1],al
   140036c3d:	add    BYTE PTR [rax],al
   140036c3f:	add    BYTE PTR [rax],ah
   140036c41:	data16 add BYTE PTR [rax+0x1],al
   140036c45:	add    BYTE PTR [rax],al
   140036c47:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140036c4e:	add    BYTE PTR [rax],al
   140036c50:	hlt    
   140036c51:	movsxd eax,DWORD PTR [rax]
   140036c53:	rex add DWORD PTR [rax],eax
   140036c56:	add    BYTE PTR [rax],al
   140036c58:	mov    WORD PTR [rbp+0x0],fs
   140036c5b:	rex add DWORD PTR [rax],eax
   140036c5e:	add    BYTE PTR [rax],al
   140036c60:	cld    
   140036c61:	movsxd eax,DWORD PTR [rax]
   140036c63:	rex add DWORD PTR [rax],eax
   140036c66:	add    BYTE PTR [rax],al
   140036c68:	xor    dl,ah
   140036c6a:	add    eax,DWORD PTR [rax+0x1]
   140036c6d:	add    BYTE PTR [rax],al
   140036c6f:	add    BYTE PTR [rax+0x1400064],bl
   140036c75:	add    BYTE PTR [rax],al
   140036c77:	add    BYTE PTR [rax],ah
   140036c79:	data16 add BYTE PTR [rax+0x1],al
   140036c7d:	add    BYTE PTR [rax],al
   140036c7f:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140036c86:	add    BYTE PTR [rax],al
   140036c88:	hlt    
   140036c89:	movsxd eax,DWORD PTR [rax]
   140036c8b:	rex add DWORD PTR [rax],eax
   140036c8e:	add    BYTE PTR [rax],al
   140036c90:	mov    WORD PTR [rbp+0x0],fs
   140036c93:	rex add DWORD PTR [rax],eax
   140036c96:	add    BYTE PTR [rax],al
   140036c98:	cld    
   140036c99:	movsxd eax,DWORD PTR [rax]
   140036c9b:	rex add DWORD PTR [rax],eax
   140036c9e:	add    BYTE PTR [rax],al
   140036ca0:	and    al,BYTE PTR [rip+0x21993]        # 0x140058639
   140036ca6:	add    BYTE PTR [rax],al
   140036ca8:	cmp    al,0x7
   140036caa:	add    al,0x0
   140036cac:	add    DWORD PTR [rax],eax
   140036cae:	add    BYTE PTR [rax],al
   140036cb0:	adc    al,0x7
   140036cb2:	add    al,0x0
   140036cb4:	(bad)  
   140036cb5:	add    BYTE PTR [rax],al
   140036cb7:	add    BYTE PTR [rdi+rax*1+0x4],cl
   140036cbb:	add    BYTE PTR [rax],ah
   140036cbd:	add    BYTE PTR [rax],al
   140036cbf:	add    BYTE PTR [rax],al
   140036cc1:	add    BYTE PTR [rax],al
   140036cc3:	add    BYTE PTR [rcx],al
   140036cc5:	add    BYTE PTR [rax],al
   140036cc7:	add    al,al
   140036cc9:	loop   0x140036cce
   140036ccb:	rex add DWORD PTR [rax],eax
   140036cce:	add    BYTE PTR [rax],al
   140036cd0:	enter  0x6b,0x40
   140036cd4:	add    DWORD PTR [rax],eax
   140036cd6:	add    BYTE PTR [rax],al
   140036cd8:	and    al,BYTE PTR [rip+0x21993]        # 0x140058671
   140036cde:	add    BYTE PTR [rax],al
   140036ce0:	cmp    al,0x7
   140036ce2:	add    al,0x0
   140036ce4:	add    DWORD PTR [rax],eax
   140036ce6:	add    BYTE PTR [rax],al
   140036ce8:	test   al,0x7
   140036cea:	add    al,0x0
   140036cec:	(bad)  
   140036ced:	add    BYTE PTR [rax],al
   140036cef:	add    al,dl
   140036cf1:	(bad)  
   140036cf2:	add    al,0x0
   140036cf4:	and    BYTE PTR [rax],al
   140036cf6:	add    BYTE PTR [rax],al
   140036cf8:	add    BYTE PTR [rax],al
   140036cfa:	add    BYTE PTR [rax],al
   140036cfc:	add    DWORD PTR [rax],eax
   140036cfe:	add    BYTE PTR [rax],al
   140036d00:	and    al,BYTE PTR [rip+0x11993]        # 0x140048699
   140036d06:	add    BYTE PTR [rax],al
   140036d08:	sbb    BYTE PTR [rax],cl
   140036d0a:	add    al,0x0
	...
   140036d14:	add    eax,DWORD PTR [rax]
   140036d16:	add    BYTE PTR [rax],al
   140036d18:	and    BYTE PTR [rax],cl
   140036d1a:	add    al,0x0
   140036d1c:	and    BYTE PTR [rax],al
   140036d1e:	add    BYTE PTR [rax],al
   140036d20:	add    BYTE PTR [rax],al
   140036d22:	add    BYTE PTR [rax],al
   140036d24:	add    DWORD PTR [rax],eax
   140036d26:	add    BYTE PTR [rax],al
   140036d28:	nop
   140036d29:	jrcxz  0x140036d2e
   140036d2b:	rex add DWORD PTR [rax],eax
   140036d2e:	add    BYTE PTR [rax],al
   140036d30:	je     0x140036da4
   140036d32:	add    BYTE PTR [rax+0x1],al
   140036d35:	add    BYTE PTR [rax],al
   140036d37:	add    BYTE PTR [rax],dl
   140036d39:	in     al,0x3
   140036d3b:	rex add DWORD PTR [rax],eax
   140036d3e:	add    BYTE PTR [rax],al
   140036d40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140036d41:	jb     0x140036d43
   140036d43:	rex add DWORD PTR [rax],eax
   140036d46:	add    BYTE PTR [rax],al
   140036d48:	and    al,BYTE PTR [rip+0x21993]        # 0x1400586e1
   140036d4e:	add    BYTE PTR [rax],al
   140036d50:	ins    BYTE PTR es:[rdi],dx
   140036d51:	or     BYTE PTR [rax+rax*1],al
	...
   140036d5c:	add    al,0x0
   140036d5e:	add    BYTE PTR [rax],al
   140036d60:	jl     0x140036d6a
   140036d62:	add    al,0x0
   140036d64:	and    BYTE PTR [rax],al
   140036d66:	add    BYTE PTR [rax],al
   140036d68:	add    BYTE PTR [rax],al
   140036d6a:	add    BYTE PTR [rax],al
   140036d6c:	add    DWORD PTR [rax],eax
   140036d6e:	add    BYTE PTR [rax],al
   140036d70:	nop
   140036d71:	in     al,0x3
   140036d73:	rex add DWORD PTR [rax],eax
   140036d76:	add    BYTE PTR [rax],al
   140036d78:	sub    al,0x76
   140036d7a:	add    BYTE PTR [rax+0x1],al
   140036d7d:	add    BYTE PTR [rax],al
   140036d7f:	add    BYTE PTR [rax],dl
   140036d81:	in     eax,0x3
   140036d83:	rex add DWORD PTR [rax],eax
   140036d86:	add    BYTE PTR [rax],al
   140036d88:	clc    
   140036d89:	jp     0x140036d8b
   140036d8b:	rex add DWORD PTR [rax],eax
   140036d8e:	add    BYTE PTR [rax],al
   140036d90:	and    al,BYTE PTR [rip+0x11993]        # 0x140048729
   140036d96:	add    BYTE PTR [rax],al
   140036d98:	enter  0x408,0x0
	...
   140036da4:	add    eax,DWORD PTR [rax]
   140036da6:	add    BYTE PTR [rax],al
   140036da8:	ror    BYTE PTR [rax],1
   140036daa:	add    al,0x0
   140036dac:	and    BYTE PTR [rax],al
   140036dae:	add    BYTE PTR [rax],al
   140036db0:	add    BYTE PTR [rax],al
   140036db2:	add    BYTE PTR [rax],al
   140036db4:	add    DWORD PTR [rax],eax
   140036db6:	add    BYTE PTR [rax],al
   140036db8:	and    al,BYTE PTR [rip+0x11993]        # 0x140048751
   140036dbe:	add    BYTE PTR [rax],al
   140036dc0:	push   rax
   140036dc1:	or     DWORD PTR [rax+rax*1],eax
	...
   140036dcc:	add    eax,DWORD PTR [rax]
   140036dce:	add    BYTE PTR [rax],al
   140036dd0:	cld    
   140036dd1:	or     BYTE PTR [rax+rax*1],al
   140036dd4:	and    BYTE PTR [rax],al
   140036dd6:	add    BYTE PTR [rax],al
   140036dd8:	add    BYTE PTR [rax],al
   140036dda:	add    BYTE PTR [rax],al
   140036ddc:	add    DWORD PTR [rax],eax
   140036dde:	add    BYTE PTR [rax],al
   140036de0:	nop
   140036de1:	in     eax,0x3
   140036de3:	rex add DWORD PTR [rax],eax
   140036de6:	add    BYTE PTR [rax],al
   140036de8:	clc    
   140036de9:	jp     0x140036deb
   140036deb:	rex add DWORD PTR [rax],eax
   140036dee:	add    BYTE PTR [rax],al
   140036df0:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140036df3:	movsxd esi,DWORD PTR [rsp+rbp*2+0x33]
   140036df7:	xor    ch,BYTE PTR [rsi]
   140036df9:	fs ins BYTE PTR es:[rdi],dx
   140036dfb:	ins    BYTE PTR es:[rdi],dx
   140036dfc:	add    BYTE PTR [rax],al
   140036dfe:	add    BYTE PTR [rax],al
   140036e00:	and    al,BYTE PTR [rip+0x11993]        # 0x140048799
   140036e06:	add    BYTE PTR [rax],al
   140036e08:	push   rax
   140036e09:	or     DWORD PTR [rax+rax*1],eax
	...
   140036e14:	add    eax,DWORD PTR [rax]
   140036e16:	add    BYTE PTR [rax],al
   140036e18:	sub    BYTE PTR [rcx],cl
   140036e1a:	add    al,0x0
   140036e1c:	and    BYTE PTR [rax],al
   140036e1e:	add    BYTE PTR [rax],al
   140036e20:	add    BYTE PTR [rax],al
   140036e22:	add    BYTE PTR [rax],al
   140036e24:	add    DWORD PTR [rax],eax
   140036e26:	add    BYTE PTR [rax],al
   140036e28:	sbb    dh,ah
   140036e2a:	add    eax,DWORD PTR [rax+0x1]
   140036e2d:	add    BYTE PTR [rax],al
   140036e2f:	add    al,bh
   140036e31:	jp     0x140036e33
   140036e33:	rex add DWORD PTR [rax],eax
   140036e36:	add    BYTE PTR [rax],al
   140036e38:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140036e3b:	fs ins BYTE PTR es:[rdi],dx
   140036e3d:	xor    esi,DWORD PTR [edx]
   140036e40:	cs fs ins BYTE PTR es:[rdi],dx
   140036e43:	ins    BYTE PTR es:[rdi],dx
   140036e44:	add    BYTE PTR [rax],al
   140036e46:	add    BYTE PTR [rax],al
   140036e48:	and    al,BYTE PTR [rip+0x11993]        # 0x1400487e1
   140036e4e:	add    BYTE PTR [rax],al
   140036e50:	push   rax
   140036e51:	or     DWORD PTR [rax+rax*1],eax
	...
   140036e5c:	add    eax,DWORD PTR [rax]
   140036e5e:	add    BYTE PTR [rax],al
   140036e60:	pop    rax
   140036e61:	or     DWORD PTR [rax+rax*1],eax
   140036e64:	and    BYTE PTR [rax],al
   140036e66:	add    BYTE PTR [rax],al
   140036e68:	add    BYTE PTR [rax],al
   140036e6a:	add    BYTE PTR [rax],al
   140036e6c:	add    DWORD PTR [rax],eax
   140036e6e:	add    BYTE PTR [rax],al
   140036e70:	movabs al,ds:0xf8000000014003e6
   140036e79:	jp     0x140036e7b
   140036e7b:	rex add DWORD PTR [rax],eax
   140036e7e:	add    BYTE PTR [rax],al
   140036e80:	jae    0x140036eea
   140036e82:	gs ins BYTE PTR es:[rdi],dx
   140036e84:	ins    BYTE PTR es:[rdi],dx
   140036e85:	xor    esi,DWORD PTR [rdx]
   140036e87:	cs fs ins BYTE PTR es:[rdi],dx
   140036e8a:	ins    BYTE PTR es:[rdi],dx
   140036e8b:	add    BYTE PTR [rax],al
   140036e8d:	add    BYTE PTR [rax],al
   140036e8f:	add    BYTE PTR [rdx],ah
   140036e91:	add    eax,0x71993
   140036e96:	add    BYTE PTR [rax],al
   140036e98:	ror    BYTE PTR [rcx],0x4
   140036e9b:	add    BYTE PTR [rcx],al
   140036e9d:	add    BYTE PTR [rax],al
   140036e9f:	add    BYTE PTR [rax+0xf000409],bl
   140036ea5:	add    BYTE PTR [rax],al
   140036ea7:	add    al,bh
   140036ea9:	or     DWORD PTR [rax+rax*1],eax
   140036eac:	and    BYTE PTR [rax],al
   140036eae:	add    BYTE PTR [rax],al
   140036eb0:	add    BYTE PTR [rax],al
   140036eb2:	add    BYTE PTR [rax],al
   140036eb4:	add    DWORD PTR [rax],eax
   140036eb6:	add    BYTE PTR [rax],al
   140036eb8:	sub    bh,ah
   140036eba:	add    eax,DWORD PTR [rax+0x1]
   140036ebd:	add    BYTE PTR [rax],al
   140036ebf:	add    BYTE PTR [rsi+rsi*2],ch
   140036ec2:	add    BYTE PTR [rax+0x1],al
   140036ec5:	add    BYTE PTR [rax],al
   140036ec7:	add    BYTE PTR [rdx],ah
   140036ec9:	add    eax,0x11993
   140036ece:	add    BYTE PTR [rax],al
   140036ed0:	or     BYTE PTR [rdx],0x4
	...
   140036edb:	add    BYTE PTR [rbx],al
   140036edd:	add    BYTE PTR [rax],al
   140036edf:	add    BYTE PTR [rax+0x2000040a],cl
   140036ee5:	add    BYTE PTR [rax],al
   140036ee7:	add    BYTE PTR [rax],al
   140036ee9:	add    BYTE PTR [rax],al
   140036eeb:	add    BYTE PTR [rcx],al
   140036eed:	add    BYTE PTR [rax],al
   140036eef:	add    BYTE PTR [rdx],ah
   140036ef1:	add    eax,0x11993
   140036ef6:	add    BYTE PTR [rax],al
   140036ef8:	sbb    BYTE PTR [rbx],cl
   140036efa:	add    al,0x0
	...
   140036f04:	add    eax,DWORD PTR [rax]
   140036f06:	add    BYTE PTR [rax],al
   140036f08:	and    BYTE PTR [rbx],cl
   140036f0a:	add    al,0x0
   140036f0c:	and    BYTE PTR [rax],al
   140036f0e:	add    BYTE PTR [rax],al
   140036f10:	add    BYTE PTR [rax],al
   140036f12:	add    BYTE PTR [rax],al
   140036f14:	add    DWORD PTR [rax],eax
   140036f16:	add    BYTE PTR [rax],al
   140036f18:	rex.XB
   140036f19:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140036f1b:	gs rex.RB js 0x140036f82
   140036f1f:	gs jo  0x140036f96
   140036f22:	imul   ebp,DWORD PTR [rdi+0x6e],0x18000000
   140036f29:	outs   dx,DWORD PTR ds:[rsi]
   140036f2a:	add    eax,DWORD PTR [rax+0x1]
   140036f2d:	add    BYTE PTR [rax],al
   140036f2f:	add    BYTE PTR [rax],bl
   140036f31:	add    BYTE PTR [rax],al
   140036f33:	add    bh,bh
   140036f35:	inc    DWORD PTR [rax]
	...
   140036f3f:	add    BYTE PTR [rax+0x140036a],ch
	...
   140036f55:	add    BYTE PTR [rax],al
   140036f57:	add    BYTE PTR [rax+0x14003e7],dh
   140036f5d:	add    BYTE PTR [rax],al
   140036f5f:	add    BYTE PTR [rsp+rax*4+0x0],dl
   140036f63:	rex add DWORD PTR [rax],eax
   140036f66:	add    BYTE PTR [rax],al
   140036f68:	push   0x1400085
   140036f6d:	add    BYTE PTR [rax],al
   140036f6f:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140036f76:	add    BYTE PTR [rax],al
   140036f78:	hlt    
   140036f79:	movsxd eax,DWORD PTR [rax]
   140036f7b:	rex add DWORD PTR [rax],eax
   140036f7e:	add    BYTE PTR [rax],al
   140036f80:	rol    BYTE PTR [rax+rax*1+0x140],0x0
   140036f88:	cld    
   140036f89:	movsxd eax,DWORD PTR [rax]
   140036f8b:	rex add DWORD PTR [rax],eax
   140036f8e:	add    BYTE PTR [rax],al
   140036f90:	and    al,BYTE PTR [rip+0x11993]        # 0x140048929
   140036f96:	add    BYTE PTR [rax],al
   140036f98:	or     r8,QWORD PTR [rax+rax*1]
	...
   140036fa4:	add    eax,DWORD PTR [rax]
   140036fa6:	add    BYTE PTR [rax],al
   140036fa8:	push   rsp
   140036fa9:	or     eax,DWORD PTR [rax+rax*1]
   140036fac:	and    BYTE PTR [rax],al
   140036fae:	add    BYTE PTR [rax],al
   140036fb0:	add    BYTE PTR [rax],al
   140036fb2:	add    BYTE PTR [rax],al
   140036fb4:	add    DWORD PTR [rax],eax
   140036fb6:	add    BYTE PTR [rax],al
   140036fb8:	rex.R
   140036fb9:	rex.WB push r11
   140036fbb:	push   rax
   140036fbc:	rex.WR
   140036fbd:	pop    r9
   140036fbf:	add    BYTE PTR [rbx+0x4d],al
   140036fc2:	(bad)  
   140036fc3:	jo     0x140037015
   140036fc5:	je     0x140037039
   140036fc7:	push   rsp
   140036fc8:	outs   dx,DWORD PTR ds:[rsi]
   140036fc9:	push   rax
   140036fca:	je     0x14003703e
   140036fcc:	add    BYTE PTR [rax],al
   140036fce:	add    BYTE PTR [rax],al
   140036fd0:	shr    BYTE PTR [rdi+0x3],0x40
   140036fd4:	add    DWORD PTR [rax],eax
   140036fd6:	add    BYTE PTR [rax],al
   140036fd8:	cmp    BYTE PTR [rax],al
   140036fda:	add    BYTE PTR [rax],al
   140036fdc:	(bad)  
   140036fdd:	inc    DWORD PTR [rax]
	...
   140036fe7:	add    al,ah
   140036fe9:	imul   eax,DWORD PTR [rbx],0x140
	...
   140036fff:	add    BYTE PTR [rax],bh
   140037001:	call   0x14004b009
   140037006:	add    BYTE PTR [rax],al
   140037008:	js     0x140036f93
   14003700a:	add    BYTE PTR [rax+0x1],al
   14003700d:	add    BYTE PTR [rax],al
   14003700f:	add    BYTE PTR [rdx+rcx*4+0x14000],ah
   140037016:	add    BYTE PTR [rax],al
   140037018:	pushf  
   140037019:	mov    ecx,0x14000
   14003701e:	add    BYTE PTR [rax],al
   140037020:	mov    eax,0x14003e8
   140037025:	add    BYTE PTR [rax],al
   140037027:	add    al,ch
   140037029:	mov    al,BYTE PTR [rax]
   14003702b:	rex add DWORD PTR [rax],eax
   14003702e:	add    BYTE PTR [rax],al
   140037030:	xor    al,0x8b
   140037032:	add    BYTE PTR [rax+0x1],al
   140037035:	add    BYTE PTR [rax],al
   140037037:	add    BYTE PTR [rbx+rcx*4],bh
   14003703a:	add    BYTE PTR [rax+0x1],al
   14003703d:	add    BYTE PTR [rax],al
   14003703f:	add    BYTE PTR [rax-0x75],bh
   140037042:	add    BYTE PTR [rax+0x1],al
   140037045:	add    BYTE PTR [rax],al
   140037047:	add    BYTE PTR [rbx+rcx*4+0x0],dh
   14003704b:	rex add DWORD PTR [rax],eax
   14003704e:	add    BYTE PTR [rax],al
   140037050:	or     al,BYTE PTR [rax]
   140037052:	add    BYTE PTR [rax],al
   140037054:	add    BYTE PTR [rax],al
   140037056:	add    BYTE PTR [rax],al
   140037058:	and    al,BYTE PTR [rip+0x11993]        # 0x1400489f1
   14003705e:	add    BYTE PTR [rax],al
   140037060:	je     0x140037077
   140037062:	add    al,0x0
	...
   14003706c:	add    eax,DWORD PTR [rax]
   14003706e:	add    BYTE PTR [rax],al
   140037070:	lods   al,BYTE PTR ds:[rsi]
   140037071:	or     eax,DWORD PTR [rax+rax*1]
   140037074:	and    BYTE PTR [rax],al
   140037076:	add    BYTE PTR [rax],al
   140037078:	add    BYTE PTR [rax],al
   14003707a:	add    BYTE PTR [rax],al
   14003707c:	add    DWORD PTR [rax],eax
   14003707e:	add    BYTE PTR [rax],al
   140037080:	and    al,BYTE PTR [rip+0x31993]        # 0x140068a19
   140037086:	add    BYTE PTR [rax],al
   140037088:	sbb    al,0xc
   14003708a:	add    al,0x0
   14003708c:	add    DWORD PTR [rax],eax
   14003708e:	add    BYTE PTR [rax],al
   140037090:	hlt    
   140037091:	or     eax,DWORD PTR [rax+rax*1]
   140037094:	or     BYTE PTR [rax],al
   140037096:	add    BYTE PTR [rax],al
   140037098:	xor    al,0xc
   14003709a:	add    al,0x0
   14003709c:	add    BYTE PTR [rax],al
   14003709f:	add    BYTE PTR [rax],al
   1400370a1:	add    BYTE PTR [rax],al
   1400370a3:	add    BYTE PTR [rcx],al
   1400370a5:	add    BYTE PTR [rax],al
   1400370a7:	add    BYTE PTR [rip+0x25282073],ah        # 0x1652b9120
   1400370ad:	jae    0x1400370e9
   1400370af:	and    eax,0x2964
   1400370b4:	add    BYTE PTR [rax],al
   1400370b6:	add    BYTE PTR [rax],al
   1400370b8:	and    eax,0x25282073
   1400370bd:	jae    0x1400370f9
   1400370bf:	and    eax,0x250a2964
   1400370c4:	jae    0x1400370c6
   1400370c6:	add    BYTE PTR [rax],al
   1400370c8:	rex.RB js 0x14003712e
   1400370cb:	gs jo  0x140037142
   1400370ce:	imul   ebp,DWORD PTR [rdi+0x6e],0x72687420
   1400370d5:	outs   dx,DWORD PTR ds:[rsi]
   1400370d6:	ja     0x140037146
   1400370d8:	and    BYTE PTR [rcx+0x6e],ch
   1400370db:	and    BYTE PTR [rbp+riz*2+0x73],ah
   1400370df:	je     0x140037153
   1400370e1:	jne    0x140037146
   1400370e3:	je     0x140037154
   1400370e5:	jb     0x1400370e7
   1400370e7:	add    BYTE PTR [rsi+0x3a],ah
   1400370ea:	pop    rsp
   1400370eb:	fs fs pop rsp
   1400370ee:	jbe    0x140037153
   1400370f0:	je     0x140037161
   1400370f2:	outs   dx,DWORD PTR ds:[rsi]
   1400370f3:	ins    BYTE PTR es:[rdi],dx
   1400370f4:	jae    0x140037152
   1400370f6:	jbe    0x14003715b
   1400370f8:	(bad)  
   1400370f9:	ins    BYTE PTR es:[rdi],dx
   1400370fa:	imul   esp,DWORD PTR [rdx+0x73],0x6968735c
   140037101:	jo     0x14003715f
   140037103:	(bad)  
   140037104:	je     0x140037172
   140037106:	ins    DWORD PTR es:[rdi],dx
   140037107:	movsxd bx,DWORD PTR [rbx+rsi*2+0x72]
   14003710c:	movsxd ebx,DWORD PTR [rbp+rbp*2+0x66]
   140037110:	movsxd ebx,DWORD PTR [rcx+riz*2+0x75]
   140037114:	js     0x14003717a
   140037116:	(bad)  
   140037117:	je     0x14003717a
   140037119:	movsxd esi,DWORD PTR cs:[rax+0x70]
   14003711d:	add    BYTE PTR [rax],al
   14003711f:	add    BYTE PTR [rbx+0x41],al
   140037122:	jb     0x140037187
   140037124:	push   0x45657669
   140037129:	js     0x14003718e
   14003712b:	gs jo  0x1400371a2
   14003712e:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   140037135:	add    BYTE PTR [rax],al
   140037137:	add    BYTE PTR [rax],ah
   140037139:	jno    0x14003713e
   14003713b:	rex add DWORD PTR [rax],eax
   14003713e:	add    BYTE PTR [rax],al
   140037140:	and    BYTE PTR [rax],al
   140037142:	add    BYTE PTR [rax],al
   140037144:	(bad)  
   140037145:	inc    DWORD PTR [rax]
	...
   14003714f:	add    BYTE PTR [rax+0x140036a],ch
	...
   140037165:	add    BYTE PTR [rax],al
   140037167:	add    BYTE PTR [rdx],ah
   140037169:	add    eax,0x41993
   14003716e:	add    BYTE PTR [rax],al
   140037170:	push   rax
   140037171:	or     eax,0x10004
   140037176:	add    BYTE PTR [rax],al
   140037178:	sub    BYTE PTR [rip+0x80004],cl        # 0x1400b7182
   14003717e:	add    BYTE PTR [rax],al
   140037180:	jo     0x14003718f
   140037182:	add    al,0x0
   140037184:	sub    BYTE PTR [rax],al
   140037186:	add    BYTE PTR [rax],al
   140037188:	add    BYTE PTR [rax],al
   14003718a:	add    BYTE PTR [rax],al
   14003718c:	add    DWORD PTR [rax],eax
   14003718e:	add    BYTE PTR [rax],al
   140037190:	and    al,BYTE PTR [rip+0x11993]        # 0x140048b29
   140037196:	add    BYTE PTR [rax],al
   140037198:	int3   
   140037199:	or     eax,0x4
   14003719e:	add    BYTE PTR [rax],al
   1400371a0:	add    BYTE PTR [rax],al
   1400371a2:	add    BYTE PTR [rax],al
   1400371a4:	add    eax,DWORD PTR [rax]
   1400371a6:	add    BYTE PTR [rax],al
   1400371a8:	(bad)  
   1400371a9:	or     eax,0x200004
   1400371ae:	add    BYTE PTR [rax],al
   1400371b0:	add    BYTE PTR [rax],al
   1400371b2:	add    BYTE PTR [rax],al
   1400371b4:	add    DWORD PTR [rax],eax
   1400371b6:	add    BYTE PTR [rax],al
   1400371b8:	xor    dl,ch
   1400371ba:	add    eax,DWORD PTR [rax+0x1]
   1400371bd:	add    BYTE PTR [rax],al
   1400371bf:	add    BYTE PTR [rsp+rbx*4],dl
   1400371c2:	add    BYTE PTR [rax+0x1],al
   1400371c5:	add    BYTE PTR [rax],al
   1400371c7:	add    BYTE PTR [rax],ch
   1400371c9:	sahf   
   1400371ca:	add    BYTE PTR [rax+0x1],al
   1400371cd:	add    BYTE PTR [rax],al
   1400371cf:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   1400371d6:	add    BYTE PTR [rax],al
   1400371d8:	hlt    
   1400371d9:	movsxd eax,DWORD PTR [rax]
   1400371db:	rex add DWORD PTR [rax],eax
   1400371de:	add    BYTE PTR [rax],al
   1400371e0:	sbb    al,0x9c
   1400371e2:	add    BYTE PTR [rax+0x1],al
   1400371e5:	add    BYTE PTR [rax],al
   1400371e7:	add    ah,bh
   1400371e9:	movsxd eax,DWORD PTR [rax]
   1400371eb:	rex add DWORD PTR [rax],eax
   1400371ee:	add    BYTE PTR [rax],al
   1400371f0:	and    al,BYTE PTR [rip+0x11993]        # 0x140048b89
   1400371f6:	add    BYTE PTR [rax],al
   1400371f8:	add    BYTE PTR [rsi],cl
   1400371fa:	add    al,0x0
	...
   140037204:	add    eax,DWORD PTR [rax]
   140037206:	add    BYTE PTR [rax],al
   140037208:	or     BYTE PTR [rsi],cl
   14003720a:	add    al,0x0
   14003720c:	and    BYTE PTR [rax],al
   14003720e:	add    BYTE PTR [rax],al
   140037210:	add    BYTE PTR [rax],al
   140037212:	add    BYTE PTR [rax],al
   140037214:	add    DWORD PTR [rax],eax
   140037216:	add    BYTE PTR [rax],al
   140037218:	rex.XB
   140037219:	rex.XB ins DWORD PTR es:[rdi],dx
   14003721b:	fs push rsp
   14003721d:	(bad)  
   14003721e:	jb     0x140037287
   140037220:	gs je  0x140037223
	...
   140037237:	add    bh,bh
   140037239:	(bad)  
   14003723a:	(bad)  
   14003723b:	inc    DWORD PTR [rax]
	...
   14003725d:	add    BYTE PTR [rax],al
   14003725f:	add    bh,bh
   140037261:	(bad)  
   140037262:	(bad)  
   140037263:	(bad)  
   140037264:	(bad)  
   140037265:	(bad)  
   140037266:	(bad)  
   140037267:	inc    DWORD PTR [rax]
	...
   140037275:	add    BYTE PTR [rax],al
   140037277:	add    BYTE PTR [rax],dh
   140037279:	jb     0x14003727e
   14003727b:	rex add DWORD PTR [rax],eax
   14003727e:	add    BYTE PTR [rax],al
   140037280:	sub    BYTE PTR [rdi+0x14004],al
   140037286:	add    BYTE PTR [rax],al
   140037288:	sub    al,0x87
   14003728a:	add    al,0x40
   14003728c:	add    DWORD PTR [rax],eax
	...
   140037296:	add    BYTE PTR [rax],al
   140037298:	(bad)  
   140037299:	(bad)  
   14003729a:	(bad)  
   14003729b:	inc    DWORD PTR [rax]
	...
   1400372bd:	add    BYTE PTR [rax],al
   1400372bf:	add    bh,bh
   1400372c1:	(bad)  
   1400372c2:	(bad)  
   1400372c3:	(bad)  
   1400372c4:	(bad)  
   1400372c5:	(bad)  
   1400372c6:	(bad)  
   1400372c7:	inc    DWORD PTR [rax]
   1400372c9:	add    BYTE PTR [rax],al
   1400372cb:	add    BYTE PTR [rax],al
   1400372cd:	add    BYTE PTR [rax],al
   1400372cf:	add    bh,bh
   1400372d1:	(bad)  
   1400372d2:	(bad)  
   1400372d3:	(bad)  
   1400372d4:	(bad)  
   1400372d5:	(bad)  
   1400372d6:	(bad)  
   1400372d7:	inc    DWORD PTR [rax]
   1400372d9:	add    BYTE PTR [rax],al
   1400372db:	add    BYTE PTR [rax],al
   1400372dd:	add    BYTE PTR [rax],al
   1400372df:	add    BYTE PTR [rax+0x1400372],dl
   1400372e5:	add    BYTE PTR [rax],al
   1400372e7:	add    BYTE PTR [rax],dh
   1400372e9:	xchg   DWORD PTR [rax+rax*2],eax
   1400372ec:	add    DWORD PTR [rax],eax
   1400372ee:	add    BYTE PTR [rax],al
   1400372f0:	rcl    dh,0x3
   1400372f3:	rex add DWORD PTR [rax],eax
   1400372f6:	add    BYTE PTR [rax],al
   1400372f8:	and    BYTE PTR [rax],al
	...
   140037306:	add    BYTE PTR [rax],al
   140037308:	(bad)  
   140037309:	(bad)  
   14003730a:	(bad)  
   14003730b:	(bad)  
   14003730c:	(bad)  
   14003730d:	(bad)  
   14003730e:	(bad)  
   14003730f:	inc    DWORD PTR [rax]
   140037311:	add    BYTE PTR [rax],al
   140037313:	add    BYTE PTR [rax],al
   140037315:	add    BYTE PTR [rax],al
   140037317:	add    al,dh
   140037319:	jb     0x14003731e
   14003731b:	rex add DWORD PTR [rax],eax
	...
   140037326:	add    BYTE PTR [rax],al
   140037328:	(bad)  
   140037329:	(bad)  
   14003732a:	(bad)  
   14003732b:	(bad)  
   14003732c:	(bad)  
   14003732d:	(bad)  
   14003732e:	(bad)  
   14003732f:	inc    DWORD PTR [rax]
   140037331:	add    BYTE PTR [rax],al
   140037333:	add    BYTE PTR [rax],al
   140037335:	add    BYTE PTR [rax],al
   140037337:	add    BYTE PTR [rax],ah
   140037339:	jae    0x14003733e
   14003733b:	rex add DWORD PTR [rax],eax
	...
   140037356:	add    BYTE PTR [rax],al
   140037358:	rex jae 0x14003735e
   14003735b:	rex add DWORD PTR [rax],eax
   14003735e:	add    BYTE PTR [rax],al
   140037360:	(bad)  
   140037361:	(bad)  
   140037362:	(bad)  
   140037363:	clts   
   140037365:	add    BYTE PTR [rax],al
   140037367:	add    BYTE PTR [rax],bl
   140037369:	jb     0x14003736e
   14003736b:	rex add DWORD PTR [rax],eax
   14003736e:	add    BYTE PTR [rax],al
   140037370:	add    BYTE PTR [rax],al
   140037373:	add    bh,bh
   140037375:	inc    DWORD PTR [rax]
	...
   14003737f:	add    al,ah
   140037381:	imul   eax,DWORD PTR [rbx],0x140
	...
   14003739f:	add    BYTE PTR [rax+0x1400373],ch
	...
   1400373c5:	add    BYTE PTR [rax],al
   1400373c7:	add    BYTE PTR [rax+0x14003ea],bh
   1400373cd:	add    BYTE PTR [rax],al
   1400373cf:	add    ah,dl
   1400373d1:	movabs ds:0xa390000000014000,al
   1400373da:	add    BYTE PTR [rax+0x1],al
   1400373dd:	add    BYTE PTR [rax],al
   1400373df:	add    BYTE PTR [rax],dl
   1400373e1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400373e2:	add    BYTE PTR [rax+0x1],al
   1400373e5:	add    BYTE PTR [rax],al
   1400373e7:	add    BYTE PTR [rax],ch
   1400373e9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400373ea:	add    BYTE PTR [rax+0x1],al
   1400373ed:	add    BYTE PTR [rax],al
   1400373ef:	add    BYTE PTR [rdx],ah
   1400373f1:	add    eax,0x31993
   1400373f6:	add    BYTE PTR [rax],al
   1400373f8:	jo     0x140037408
   1400373fa:	add    al,0x0
	...
   140037404:	add    eax,0x88000000
   140037409:	(bad)  
   14003740a:	add    al,0x0
   14003740c:	and    BYTE PTR [rax],al
   14003740e:	add    BYTE PTR [rax],al
   140037410:	add    BYTE PTR [rax],al
   140037412:	add    BYTE PTR [rax],al
   140037414:	add    DWORD PTR [rax],eax
   140037416:	add    BYTE PTR [rax],al
   140037418:	xor    bl,ch
   14003741a:	add    eax,DWORD PTR [rax+0x1]
   14003741d:	add    BYTE PTR [rax],al
   14003741f:	add    ah,dl
   140037421:	test   al,0x0
   140037423:	rex add DWORD PTR [rax],eax
   140037426:	add    BYTE PTR [rax],al
   140037428:	and    al,BYTE PTR [rip+0x21993]        # 0x140058dc1
   14003742e:	add    BYTE PTR [rax],al
   140037430:	cmp    al,0x7
   140037432:	add    al,0x0
   140037434:	add    DWORD PTR [rax],eax
   140037436:	add    BYTE PTR [rax],al
   140037438:	fmul   QWORD PTR [rsi]
   14003743a:	add    al,0x0
   14003743c:	(bad)  
   14003743d:	add    BYTE PTR [rax],al
   14003743f:	add    BYTE PTR [rdi+rcx*1],al
   140037442:	add    al,0x0
   140037444:	and    BYTE PTR [rax],al
   140037446:	add    BYTE PTR [rax],al
   140037448:	add    BYTE PTR [rax],al
   14003744a:	add    BYTE PTR [rax],al
   14003744c:	add    DWORD PTR [rax],eax
   14003744e:	add    BYTE PTR [rax],al
   140037450:	and    al,BYTE PTR [rip+0x31993]        # 0x140068de9
   140037456:	add    BYTE PTR [rax],al
   140037458:	push   rsp
   140037459:	(bad)  
	...
   140037463:	add    BYTE PTR [rip+0x6c000000],al        # 0x1ac037469
   140037469:	(bad)  
   14003746b:	add    BYTE PTR [rax],ah
   14003746d:	add    BYTE PTR [rax],al
   14003746f:	add    BYTE PTR [rax],al
   140037471:	add    BYTE PTR [rax],al
   140037473:	add    BYTE PTR [rcx],al
   140037475:	add    BYTE PTR [rax],al
   140037477:	add    BYTE PTR [rbx+0x57],al
   14003747a:	outs   dx,BYTE PTR ds:[rsi]
   14003747b:	add    BYTE PTR fs:[rax],al
	...
   140037486:	add    BYTE PTR [rax],al
   140037488:	(bad)  
   140037489:	(bad)  
   14003748a:	(bad)  
   14003748b:	(bad)  
   14003748c:	(bad)  
   14003748d:	(bad)  
   14003748e:	(bad)  
   14003748f:	inc    DWORD PTR [rcx+0x66]
   140037492:	js     0x1400374eb
   140037494:	outs   dx,BYTE PTR ds:[rsi]
   140037495:	cmp    DWORD PTR fs:[rax],esi
   140037498:	jae    0x14003749a
   14003749a:	add    BYTE PTR [rax],al
   14003749c:	add    BYTE PTR [rax],al
   14003749e:	add    BYTE PTR [rax],al
   1400374a0:	rex.B
   1400374a1:	data16 js 0x1400374e7
   1400374a4:	outs   dx,DWORD PTR ds:[rsi]
   1400374a5:	outs   dx,BYTE PTR ds:[rsi]
   1400374a6:	je     0x14003751a
   1400374a8:	outs   dx,DWORD PTR ds:[rsi]
   1400374a9:	ins    BYTE PTR es:[rdi],dx
   1400374aa:	rex.X (bad) 
   1400374ac:	jb     0x1400374e7
   1400374ae:	xor    BYTE PTR [rbx+0x0],dh
   1400374b1:	add    BYTE PTR [rax],al
   1400374b3:	add    BYTE PTR [rax],al
   1400374b5:	add    BYTE PTR [rax],al
   1400374b7:	add    BYTE PTR [rcx+0x66],al
   1400374ba:	js     0x140037509
   1400374bc:	rex.R
   1400374bd:	rex.WB
   1400374be:	rex.RX jb 0x140037522
   1400374c1:	ins    DWORD PTR es:[rdi],dx
   1400374c2:	cmp    DWORD PTR gs:[rax],esi
   1400374c5:	jae    0x1400374c7
   1400374c7:	add    BYTE PTR [rcx+0x66],al
   1400374ca:	js     0x140037512
   1400374cc:	jb     0x14003752f
   1400374ce:	ins    DWORD PTR es:[rdi],dx
   1400374cf:	gs rex.WRXB jb 0x140037529
   1400374d3:	imul   esp,DWORD PTR [rbp+0x77],0x733039
   1400374da:	add    BYTE PTR [rax],al
   1400374dc:	add    BYTE PTR [rax],al
   1400374de:	add    BYTE PTR [rax],al
   1400374e0:	rex.B
   1400374e1:	data16 js 0x140037533
   1400374e4:	ins    BYTE PTR es:[rdi],dx
   1400374e5:	rex.XB outs dx,DWORD PTR gs:[rsi]
   1400374e8:	outs   dx,BYTE PTR ds:[rsi]
   1400374e9:	je     0x14003755d
   1400374eb:	outs   dx,DWORD PTR ds:[rsi]
   1400374ec:	ins    BYTE PTR es:[rdi],dx
   1400374ed:	cmp    DWORD PTR [rax],esi
   1400374ef:	jae    0x1400374f1
   1400374f1:	add    BYTE PTR [rax],al
   1400374f3:	add    BYTE PTR [rax],al
   1400374f5:	add    BYTE PTR [rax],al
   1400374f7:	add    BYTE PTR [rcx+0x66],al
   1400374fa:	js     0x14003754b
   1400374fc:	ins    BYTE PTR es:[rdi],dx
   1400374fd:	fs push rdi
   1400374ff:	outs   dx,BYTE PTR ds:[rsi]
   140037500:	fs push rax
   140037502:	jb     0x140037573
   140037504:	movsxd esi,DWORD PTR [rdx+rsi*1]
   140037507:	xor    eax,DWORD PTR [rax]
   140037509:	add    BYTE PTR [rax],al
   14003750b:	add    BYTE PTR [rax],al
   14003750d:	add    BYTE PTR [rax],al
   14003750f:	add    BYTE PTR [rax],dl
   140037511:	jae    0x140037516
   140037513:	rex add DWORD PTR [rax],eax
   140037516:	add    BYTE PTR [rax],al
   140037518:	xor    BYTE PTR [rbx+rax*1+0x40],0x1
   14003751d:	add    BYTE PTR [rax],al
   14003751f:	add    BYTE PTR [rax+0x74],bh
   140037522:	add    eax,DWORD PTR [rax+0x1]
   140037525:	add    BYTE PTR [rax],al
   140037527:	add    BYTE PTR [rax-0x1000000],ch
   14003752d:	inc    DWORD PTR [rax]
   14003752f:	add    BYTE PTR [rax],ch
   140037531:	xlat   BYTE PTR ds:[rbx]
   140037532:	add    BYTE PTR [rax+0x1],al
   140037535:	add    BYTE PTR [rax],al
   140037537:	add    BYTE PTR [rax+0x73],ch
   14003753a:	add    eax,DWORD PTR [rax+0x1]
	...
   14003754d:	add    BYTE PTR [rax],al
   14003754f:	add    BYTE PTR [rbp+0x6e],al
   140037552:	jne    0x1400375c1
   140037554:	imul   r14d,DWORD PTR [rbx+0x70],0x4479616c
   14003755c:	gs jbe 0x1400375c8
   14003755f:	movsxd esp,DWORD PTR [rbp+0x73]
   140037562:	add    BYTE PTR [r8],al
   140037565:	add    BYTE PTR [rax],al
   140037567:	add    BYTE PTR [rdi+0x65],al
   14003756a:	je     0x1400375b9
   14003756c:	outs   dx,DWORD PTR ds:[rsi]
   14003756d:	outs   dx,BYTE PTR ds:[rsi]
   14003756e:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6f666e49
   140037576:	add    BYTE PTR [r13+0x6e],al
   14003757a:	jne    0x1400375e9
   14003757c:	imul   r14d,DWORD PTR [rbx+0x70],0x4d79616c
   140037584:	outs   dx,DWORD PTR ds:[rsi]
   140037585:	outs   dx,BYTE PTR ds:[rsi]
   140037586:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x73
   14003758e:	add    BYTE PTR [rax],al
   140037590:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140037592:	outs   dx,BYTE PTR ds:[rsi]
   140037593:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6d6f7246
   14003759b:	push   rax
   14003759c:	outs   dx,DWORD PTR ds:[rsi]
   14003759d:	imul   ebp,DWORD PTR [rsi+0x74],0x0
   1400375a4:	add    BYTE PTR [rax],al
   1400375a6:	add    BYTE PTR [rax],al
   1400375a8:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   1400375aa:	outs   dx,BYTE PTR ds:[rsi]
   1400375ab:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6d6f7246
   1400375b3:	push   rdx
   1400375b4:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x4d]
   1400375b9:	outs   dx,DWORD PTR ds:[rsi]
   1400375ba:	outs   dx,BYTE PTR ds:[rsi]
   1400375bb:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x6d6f7246
   1400375c3:	push   rdi
   1400375c4:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400375cb:	add    BYTE PTR [rax],al
   1400375cd:	add    BYTE PTR [rax],al
   1400375cf:	add    BYTE PTR [rdi+0x65],al
   1400375d2:	je     0x140037627
   1400375d4:	jns    0x140037649
   1400375d6:	je     0x14003763d
   1400375d8:	ins    DWORD PTR es:[rdi],dx
   1400375d9:	rex.WRB
   1400375da:	gs je  0x14003764f
   1400375dd:	imul   esp,DWORD PTR [rbx+0x73],0x0
   1400375e4:	push   rbp
   1400375e5:	push   rbx
   1400375e6:	rex.RB push r10
   1400375e8:	xor    esi,DWORD PTR [rdx]
   1400375ea:	add    BYTE PTR [rax],al
   1400375ec:	add    BYTE PTR [rax],al
   1400375ee:	add    BYTE PTR [rax],al
   1400375f0:	(bad)  
   1400375f1:	add    BYTE PTR [rbx+0x0],ah
   1400375f4:	movsxd eax,DWORD PTR [rax]
   1400375f6:	push   rax
   1400375f7:	add    BYTE PTR [rcx+0x0],ah
   1400375fa:	jb     0x1400375fc
   1400375fc:	add    BYTE PTR gs:[rsi+0x0],ch
   140037600:	je     0x140037602
   140037602:	add    BYTE PTR [rax],al
   140037604:	add    BYTE PTR [rax],al
   140037606:	add    BYTE PTR [rax],al
   140037608:	(bad)  
   140037609:	add    BYTE PTR [rbx+0x0],ah
   14003760c:	movsxd eax,DWORD PTR [rax]
   14003760e:	rex.XB add BYTE PTR [r8+0x0],bpl
   140037612:	imul   eax,DWORD PTR [rax],0x64006c
   140037618:	rex.XB add BYTE PTR [r15+0x0],bpl
   14003761c:	jne    0x14003761e
   14003761e:	outs   dx,BYTE PTR ds:[rsi]
   14003761f:	add    BYTE PTR [rax+rax*1+0x0],dh
   140037623:	add    BYTE PTR [rax],al
   140037625:	add    BYTE PTR [rax],al
   140037627:	add    BYTE PTR [rcx+0x0],ah
   14003762a:	movsxd eax,DWORD PTR [rax]
   14003762c:	movsxd eax,DWORD PTR [rax]
   14003762e:	rex.XB add BYTE PTR [r8+0x0],bpl
   140037632:	imul   eax,DWORD PTR [rax],0x64006c
	...
   140037640:	(bad)  
   140037641:	add    BYTE PTR [rbx+0x0],ah
   140037644:	movsxd eax,DWORD PTR [rax]
   140037646:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   14003764a:	ins    DWORD PTR es:[rdi],dx
   14003764b:	add    BYTE PTR [rbp+0x0],ah
   14003764e:	add    BYTE PTR [rax],al
   140037650:	(bad)  
   140037651:	add    BYTE PTR [rbx+0x0],ah
   140037654:	movsxd eax,DWORD PTR [rax]
   140037656:	push   rsi
   140037657:	add    BYTE PTR [rcx+0x0],ah
   14003765a:	ins    BYTE PTR es:[rdi],dx
   14003765b:	add    BYTE PTR [rbp+0x0],dh
   14003765e:	add    BYTE PTR gs:[rax],al
   140037661:	add    BYTE PTR [rax],al
   140037663:	add    BYTE PTR [rax],al
   140037665:	add    BYTE PTR [rax],al
   140037667:	add    BYTE PTR [rcx+0x0],ah
   14003766a:	movsxd eax,DWORD PTR [rax]
   14003766c:	movsxd eax,DWORD PTR [rax]
   14003766e:	add    BYTE PTR [rbp+0x0],r12b
   140037672:	jae    0x140037674
   140037674:	movsxd eax,DWORD PTR [rax]
   140037676:	jb     0x140037678
   140037678:	imul   eax,DWORD PTR [rax],0x740070
   14003767e:	imul   eax,DWORD PTR [rax],0x6e006f
   140037684:	add    BYTE PTR [rax],al
   140037686:	add    BYTE PTR [rax],al
   140037688:	(bad)  
   140037689:	add    BYTE PTR [rbx+0x0],ah
   14003768c:	movsxd eax,DWORD PTR [rax]
   14003768e:	push   rdx
   14003768f:	add    BYTE PTR [rdi+0x0],ch
   140037692:	ins    BYTE PTR es:[rdi],dx
   140037693:	add    BYTE PTR [rbp+0x0],ah
   140037696:	add    BYTE PTR [rax],al
   140037698:	(bad)  
   140037699:	add    BYTE PTR [rbx+0x0],ah
   14003769c:	movsxd eax,DWORD PTR [rax]
   14003769e:	push   rbx
   14003769f:	add    BYTE PTR [rax+rax*1+0x61],dh
   1400376a3:	add    BYTE PTR [rax+rax*1+0x65],dh
	...
   1400376af:	add    BYTE PTR [rcx+0x0],ah
   1400376b2:	movsxd eax,DWORD PTR [rax]
   1400376b4:	movsxd eax,DWORD PTR [rax]
   1400376b6:	rex.W add BYTE PTR [rbp+0x0],spl
   1400376ba:	ins    BYTE PTR es:[rdi],dx
   1400376bb:	add    BYTE PTR [rax+0x0],dh
   1400376be:	add    BYTE PTR [rax],al
   1400376c0:	(bad)  
   1400376c1:	add    BYTE PTR [rbx+0x0],ah
   1400376c4:	movsxd eax,DWORD PTR [rax]
   1400376c6:	rex.W add BYTE PTR [rbp+0x0],spl
   1400376ca:	ins    BYTE PTR es:[rdi],dx
   1400376cb:	add    BYTE PTR [rax+0x0],dh
   1400376ce:	push   rsp
   1400376cf:	add    BYTE PTR [rdi+0x0],ch
   1400376d2:	jo     0x1400376d4
   1400376d4:	imul   eax,DWORD PTR [rax],0x63
   1400376da:	add    BYTE PTR [rax],al
   1400376dc:	add    BYTE PTR [rax],al
   1400376de:	add    BYTE PTR [rax],al
   1400376e0:	(bad)  
   1400376e1:	add    BYTE PTR [rbx+0x0],ah
   1400376e4:	movsxd eax,DWORD PTR [rax]
   1400376e6:	rex.WXB add BYTE PTR [r13+0x0],spl
   1400376ea:	jns    0x1400376ec
   1400376ec:	(bad)  
   1400376ed:	add    BYTE PTR [rdi+0x0],ch
   1400376f0:	(bad)  
   1400376f1:	add    BYTE PTR [rdx+0x0],dh
   1400376f4:	add    BYTE PTR fs:[rbx+0x0],dl
   1400376f8:	push   0x72006f00
   1400376fd:	add    BYTE PTR [rax+rax*1+0x63],dh
   140037701:	add    BYTE PTR [rbp+0x0],dh
   140037704:	je     0x140037706
   140037706:	add    BYTE PTR [rax],al
   140037708:	(bad)  
   140037709:	add    BYTE PTR [rbx+0x0],ah
   14003770c:	movsxd eax,DWORD PTR [rax]
   14003770e:	rex.RX add BYTE PTR [rdi+0x0],r13b
   140037712:	movsxd eax,DWORD PTR [rax]
   140037714:	jne    0x140037716
   140037716:	jae    0x140037718
	...
   140037720:	(bad)  
   140037721:	add    BYTE PTR [rbx+0x0],ah
   140037724:	movsxd eax,DWORD PTR [rax]
   140037726:	push   rbx
   140037727:	add    BYTE PTR [rbp+0x0],ah
   14003772a:	ins    BYTE PTR es:[rdi],dx
   14003772b:	add    BYTE PTR [rbp+0x0],ah
   14003772e:	movsxd eax,DWORD PTR [rax]
   140037730:	je     0x140037732
   140037732:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140037740:	(bad)  
   140037741:	add    BYTE PTR [rbx+0x0],ah
   140037744:	movsxd eax,DWORD PTR [rax]
   140037746:	add    BYTE PTR [rbp+0x0],r12b
   14003774a:	data16 add BYTE PTR [rcx+0x0],ah
   14003774e:	jne    0x140037750
   140037750:	ins    BYTE PTR es:[rdi],dx
   140037751:	add    BYTE PTR [rax+rax*1+0x41],dh
   140037755:	add    BYTE PTR [rbx+0x0],ah
   140037758:	je     0x14003775a
   14003775a:	imul   eax,DWORD PTR [rax],0x6e006f
	...
   140037768:	(bad)  
   140037769:	add    BYTE PTR [rbx+0x0],ah
   14003776c:	movsxd eax,DWORD PTR [rax]
   14003776e:	push   rbx
   14003776f:	add    BYTE PTR [rbp+0x0],ah
   140037772:	ins    BYTE PTR es:[rdi],dx
   140037773:	add    BYTE PTR [rbp+0x0],ah
   140037776:	movsxd eax,DWORD PTR [rax]
   140037778:	je     0x14003777a
   14003777a:	add    BYTE PTR [rax],al
   14003777c:	add    BYTE PTR [rax],al
   14003777e:	add    BYTE PTR [rax],al
   140037780:	(bad)  
   140037781:	add    BYTE PTR [rbx+0x0],ah
   140037784:	movsxd eax,DWORD PTR [rax]
   140037786:	rex.WR add BYTE PTR [rdi+0x0],r13b
   14003778a:	movsxd eax,DWORD PTR [rax]
   14003778c:	(bad)  
   14003778d:	add    BYTE PTR [rax+rax*1+0x69],dh
   140037791:	add    BYTE PTR [rdi+0x0],ch
   140037794:	outs   dx,BYTE PTR ds:[rsi]
   140037795:	add    BYTE PTR [rax],al
   140037797:	add    BYTE PTR [rcx+0x0],ah
   14003779a:	movsxd eax,DWORD PTR [rax]
   14003779c:	movsxd eax,DWORD PTR [rax]
   14003779e:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   1400377a2:	jbe    0x1400377a4
   1400377a4:	imul   eax,DWORD PTR [rax],0x610067
   1400377aa:	je     0x1400377ac
   1400377ac:	add    BYTE PTR gs:[rax],al
   1400377af:	add    BYTE PTR [rcx+0x0],ah
   1400377b2:	movsxd eax,DWORD PTR [rax]
   1400377b4:	movsxd eax,DWORD PTR [rax]
   1400377b6:	rex.W add BYTE PTR [rcx+0x0],bpl
   1400377ba:	je     0x1400377bc
   1400377bc:	push   rsp
   1400377bd:	add    BYTE PTR [rbp+0x0],ah
   1400377c0:	jae    0x1400377c2
   1400377c2:	je     0x1400377c4
   1400377c4:	add    BYTE PTR [rax],al
   1400377c6:	add    BYTE PTR [rax],al
   1400377c8:	(bad)  
   1400377c9:	add    BYTE PTR [rbx+0x0],ah
   1400377cc:	movsxd eax,DWORD PTR [rax]
   1400377ce:	add    BYTE PTR [rdi+0x0],r13b
   1400377d2:	add    BYTE PTR [rbp+0x0],r12b
   1400377d6:	data16 add BYTE PTR [rcx+0x0],ah
   1400377da:	jne    0x1400377dc
   1400377dc:	ins    BYTE PTR es:[rdi],dx
   1400377dd:	add    BYTE PTR [rax+rax*1+0x41],dh
   1400377e1:	add    BYTE PTR [rbx+0x0],ah
   1400377e4:	je     0x1400377e6
   1400377e6:	imul   eax,DWORD PTR [rax],0x6e006f
   1400377ec:	add    BYTE PTR [rax],al
   1400377ee:	add    BYTE PTR [rax],al
   1400377f0:	test   al,0xeb
   1400377f2:	add    eax,DWORD PTR [rax+0x1]
   1400377f5:	add    BYTE PTR [rax],al
   1400377f7:	add    BYTE PTR [rsi+rax*8+0x14000],cl
   1400377fe:	add    BYTE PTR [rax],al
   140037800:	(bad)  
   140037801:	mov    BYTE PTR [rax],0x40
   140037804:	add    DWORD PTR [rax],eax
   140037806:	add    BYTE PTR [rax],al
   140037808:	sbb    al,0xc7
   14003780a:	add    BYTE PTR [rax+0x1],al
   14003780d:	add    BYTE PTR [rax],al
   14003780f:	add    BYTE PTR [rdi+rax*8+0x14000],al
   140037816:	add    BYTE PTR [rax],al
   140037818:	or     al,0xba
   14003781a:	add    BYTE PTR [rax+0x1],al
   14003781d:	add    BYTE PTR [rax],al
   14003781f:	add    BYTE PTR [rdx+rdi*4],bh
   140037822:	add    BYTE PTR [rax+0x1],al
   140037825:	add    BYTE PTR [rax],al
   140037827:	add    BYTE PTR [rax-0x46],dl
   14003782a:	add    BYTE PTR [rax+0x1],al
   14003782d:	add    BYTE PTR [rax],al
   14003782f:	add    BYTE PTR [rax],bh
   140037831:	enter  0x4000,0x1
   140037835:	add    BYTE PTR [rax],al
   140037837:	add    BYTE PTR [rax+rcx*8+0x14000],dl
   14003783e:	add    BYTE PTR [rax],al
   140037840:	lock enter 0x4000,0x1
   140037845:	add    BYTE PTR [rax],al
   140037847:	add    BYTE PTR [rax-0x37],bh
   14003784a:	add    BYTE PTR [rax+0x1],al
   14003784d:	add    BYTE PTR [rax],al
   14003784f:	add    BYTE PTR [rax],al
   140037851:	retf   0x4000
   140037854:	add    DWORD PTR [rax],eax
   140037856:	add    BYTE PTR [rax],al
   140037858:	mov    dl,cl
   14003785a:	add    BYTE PTR [rax+0x1],al
   14003785d:	add    BYTE PTR [rax],al
   14003785f:	add    BYTE PTR [rax],dl
   140037861:	retf   
   140037862:	add    BYTE PTR [rax+0x1],al
   140037865:	add    BYTE PTR [rax],al
   140037867:	add    BYTE PTR [rax+0x14000cb],bl
   14003786d:	add    BYTE PTR [rax],al
   14003786f:	add    BYTE PTR [rax],ah
   140037871:	int3   
   140037872:	add    BYTE PTR [rax+0x1],al
   140037875:	add    BYTE PTR [rax],al
   140037877:	add    BYTE PTR [rax+0x14000cc],ch
   14003787d:	add    BYTE PTR [rax],al
   14003787f:	add    BYTE PTR [rax-0x33],al
   140037882:	add    BYTE PTR [rax+0x1],al
   140037885:	add    BYTE PTR [rax],al
   140037887:	add    al,cl
   140037889:	int    0x0
   14003788b:	rex add DWORD PTR [rax],eax
   14003788e:	add    BYTE PTR [rax],al
   140037890:	and    al,0xce
   140037892:	add    BYTE PTR [rax+0x1],al
   140037895:	add    BYTE PTR [rax],al
   140037897:	add    BYTE PTR [rax+0x14000ce],al
   14003789d:	add    BYTE PTR [rax],al
   14003789f:	add    BYTE PTR [rax],cl
   1400378a1:	iret   
   1400378a2:	add    BYTE PTR [rax+0x1],al
   1400378a5:	add    BYTE PTR [rax],al
   1400378a7:	add    BYTE PTR [rax+0x14000cf],dl
   1400378ad:	add    BYTE PTR [rax],al
   1400378af:	add    BYTE PTR [rax-0x30],cl
   1400378b2:	add    BYTE PTR [rax+0x1],al
   1400378b5:	add    BYTE PTR [rax],al
   1400378b7:	add    al,ah
   1400378b9:	rol    BYTE PTR [rax],1
   1400378bb:	rex add DWORD PTR [rax],eax
   1400378be:	add    BYTE PTR [rax],al
   1400378c0:	pop    rax
   1400378c1:	rol    DWORD PTR [rax],1
   1400378c3:	rex add DWORD PTR [rax],eax
   1400378c6:	add    BYTE PTR [rax],al
   1400378c8:	rcl    cl,1
   1400378ca:	add    BYTE PTR [rax+0x1],al
   1400378cd:	add    BYTE PTR [rax],al
   1400378cf:	add    BYTE PTR [rax-0x2e],bl
   1400378d2:	add    BYTE PTR [rax+0x1],al
   1400378d5:	add    BYTE PTR [rax],al
   1400378d7:	add    BYTE PTR [rax],ah
   1400378d9:	in     al,dx
   1400378da:	add    eax,DWORD PTR [rax+0x1]
   1400378dd:	add    BYTE PTR [rax],al
   1400378df:	add    al,ah
   1400378e1:	rol    BYTE PTR [rax],cl
   1400378e3:	rex add DWORD PTR [rax],eax
   1400378e6:	add    BYTE PTR [rax],al
   1400378e8:	sub    bl,dl
   1400378ea:	add    BYTE PTR [rax+0x1],al
   1400378ed:	add    BYTE PTR [rax],al
   1400378ef:	add    BYTE PTR [rax-0x2d],dh
   1400378f2:	add    BYTE PTR [rax+0x1],al
   1400378f5:	add    BYTE PTR [rax],al
   1400378f7:	add    al,bl
   1400378f9:	rol    DWORD PTR [rax],cl
   1400378fb:	rex add DWORD PTR [rax],eax
   1400378fe:	add    BYTE PTR [rax],al
   140037900:	xor    al,0xd4
   140037902:	add    BYTE PTR [rax+0x1],al
   140037905:	add    BYTE PTR [rax],al
   140037907:	add    BYTE PTR [rax-0x46],bl
   14003790a:	add    BYTE PTR [rax+0x1],al
   14003790d:	add    BYTE PTR [rax],al
   14003790f:	add    BYTE PTR [rax+0x14003ec],bl
   140037915:	add    BYTE PTR [rax],al
   140037917:	add    BYTE PTR [rax+0x14000be],cl
   14003791d:	add    BYTE PTR [rax],al
   14003791f:	add    BYTE PTR [rdi+rbp*8+0x0],bh
   140037923:	rex add DWORD PTR [rax],eax
   140037926:	add    BYTE PTR [rax],al
   140037928:	pushf  
   140037929:	mov    ecx,0x14000
   14003792e:	add    BYTE PTR [rax],al
   140037930:	push   rsp
   140037931:	movabs al,ds:0xb6f8000000014000
   14003793a:	add    BYTE PTR [rax+0x1],al
   14003793d:	add    BYTE PTR [rax],al
   14003793f:	add    BYTE PTR [rax],bh
   140037941:	mov    esi,0x14000
   140037946:	add    BYTE PTR [rax],al
   140037948:	int3   
   140037949:	hlt    
   14003794a:	add    BYTE PTR [rax+0x1],al
   14003794d:	add    BYTE PTR [rax],al
   14003794f:	add    ah,cl
   140037951:	hlt    
   140037952:	add    BYTE PTR [rax+0x1],al
   140037955:	add    BYTE PTR [rax],al
   140037957:	add    ah,cl
   140037959:	hlt    
   14003795a:	add    BYTE PTR [rax+0x1],al
   14003795d:	add    BYTE PTR [rax],al
   14003795f:	add    al,bl
   140037961:	movabs eax,ds:0x129c000000014000
   14003796a:	add    DWORD PTR [rax+0x1],eax
   14003796d:	add    BYTE PTR [rax],al
   14003796f:	add    BYTE PTR [rax],al
   140037971:	movabs ds:0xa1e8000000014000,al
   14003797a:	add    BYTE PTR [rax+0x1],al
   14003797d:	add    BYTE PTR [rax],al
   14003797f:	add    al,bh
   140037981:	movabs eax,ds:0xba04000000014000
   14003798a:	add    BYTE PTR [rax+0x1],al
   14003798d:	add    BYTE PTR [rax],al
   14003798f:	add    al,dh
   140037991:	movabs eax,ds:0xbe38000000014000
   14003799a:	add    BYTE PTR [rax+0x1],al
   14003799d:	add    BYTE PTR [rax],al
   14003799f:	add    ah,cl
   1400379a1:	hlt    
   1400379a2:	add    BYTE PTR [rax+0x1],al
   1400379a5:	add    BYTE PTR [rax],al
   1400379a7:	add    ah,cl
   1400379a9:	hlt    
   1400379aa:	add    BYTE PTR [rax+0x1],al
   1400379ad:	add    BYTE PTR [rax],al
   1400379af:	add    ah,cl
   1400379b1:	hlt    
   1400379b2:	add    BYTE PTR [rax+0x1],al
   1400379b5:	add    BYTE PTR [rax],al
   1400379b7:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   1400379be:	add    BYTE PTR [rax],al
   1400379c0:	lock ret 
   1400379c2:	add    BYTE PTR [rax+0x1],al
   1400379c5:	add    BYTE PTR [rax],al
   1400379c7:	add    BYTE PTR [rbx+rax*8],ch
   1400379ca:	add    BYTE PTR [rax+0x1],al
   1400379cd:	add    BYTE PTR [rax],al
   1400379cf:	add    BYTE PTR [rax],bl
   1400379d1:	std    
   1400379d2:	add    BYTE PTR [rax+0x1],al
   1400379d5:	add    BYTE PTR [rax],al
   1400379d7:	add    BYTE PTR [rsi+rbx*8+0x0],bl
   1400379db:	rex add DWORD PTR [rax],eax
   1400379de:	add    BYTE PTR [rax],al
   1400379e0:	test   BYTE PTR [rdi],dl
   1400379e2:	add    DWORD PTR [rax+0x1],eax
   1400379e5:	add    BYTE PTR [rax],al
   1400379e7:	add    BYTE PTR [rax+0x14000b9],ch
   1400379ed:	add    BYTE PTR [rax],al
   1400379ef:	add    ah,bl
   1400379f1:	mov    dh,0x0
   1400379f3:	rex add DWORD PTR [rax],eax
   1400379f6:	add    BYTE PTR [rax],al
   1400379f8:	adc    bl,al
   1400379fa:	add    BYTE PTR [rax+0x1],al
   1400379fd:	add    BYTE PTR [rax],al
   1400379ff:	add    ah,ah
   140037a01:	mov    bh,0x0
   140037a03:	rex add DWORD PTR [rax],eax
   140037a06:	add    BYTE PTR [rax],al
   140037a08:	int3   
   140037a09:	hlt    
   140037a0a:	add    BYTE PTR [rax+0x1],al
   140037a0d:	add    BYTE PTR [rax],al
   140037a0f:	add    BYTE PTR [rax+rdx*1],al
   140037a12:	add    DWORD PTR [rax+0x1],eax
   140037a15:	add    BYTE PTR [rax],al
   140037a17:	add    BYTE PTR [rax+0x1400110],ch
   140037a1d:	add    BYTE PTR [rax],al
   140037a1f:	add    al,dl
   140037a21:	(bad)
   140037a24:	add    DWORD PTR [rax],eax
   140037a26:	add    BYTE PTR [rax],al
   140037a28:	rex mov esi,0x14000
   140037a2e:	add    BYTE PTR [rax],al
   140037a30:	clc    
   140037a31:	(bad)  
   140037a32:	add    BYTE PTR [rax+0x1],al
   140037a35:	add    BYTE PTR [rax],al
   140037a37:	add    BYTE PTR [rax-0x46],dh
   140037a3a:	add    BYTE PTR [rax+0x1],al
   140037a3d:	add    BYTE PTR [rax],al
   140037a3f:	add    BYTE PTR [rax+0x14000ba],ah
   140037a45:	add    BYTE PTR [rax],al
   140037a47:	add    BYTE PTR [rdx+rdi*4+0x14000],ch
   140037a4e:	add    BYTE PTR [rax],al
   140037a50:	mov    eax,0x14000ba
   140037a55:	add    BYTE PTR [rax],al
   140037a57:	add    ah,ch
   140037a59:	mov    edx,0x14000
   140037a5e:	add    BYTE PTR [rax],al
   140037a60:	and    BYTE PTR [rbx+0x14000],bh
   140037a66:	add    BYTE PTR [rax],al
   140037a68:	push   rsp
   140037a69:	mov    ebx,0x14000
   140037a6e:	add    BYTE PTR [rax],al
   140037a70:	mov    BYTE PTR [rbx+0x14000],bh
   140037a76:	add    BYTE PTR [rax],al
   140037a78:	mov    esp,0x14000bb
   140037a7d:	add    BYTE PTR [rax],al
   140037a7f:	add    al,dh
   140037a81:	mov    ebx,0x14000
   140037a86:	add    BYTE PTR [rax],al
   140037a88:	and    al,0xbc
   140037a8a:	add    BYTE PTR [rax+0x1],al
   140037a8d:	add    BYTE PTR [rax],al
   140037a8f:	add    BYTE PTR [rsp+rdi*4+0x0],bl
   140037a93:	rex add DWORD PTR [rax],eax
   140037a96:	add    BYTE PTR [rax],al
   140037a98:	xchg   esp,eax
   140037a99:	mov    esp,0x14000
   140037a9e:	add    BYTE PTR [rax],al
   140037aa0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140037aa1:	mov    esp,0x14000
   140037aa6:	add    BYTE PTR [rax],al
   140037aa8:	mov    ah,0xbc
   140037aaa:	add    BYTE PTR [rax+0x1],al
   140037aad:	add    BYTE PTR [rax],al
   140037aaf:	add    ah,ch
   140037ab1:	mov    esp,0x14000
   140037ab6:	add    BYTE PTR [rax],al
   140037ab8:	and    al,0xbd
   140037aba:	add    BYTE PTR [rax+0x1],al
   140037abd:	add    BYTE PTR [rax],al
   140037abf:	add    BYTE PTR [rax-0x43],bh
   140037ac2:	add    BYTE PTR [rax+0x1],al
   140037ac5:	add    BYTE PTR [rax],al
   140037ac7:	add    BYTE PTR [rax+0x14000bd],dh
   140037acd:	add    BYTE PTR [rax],al
   140037acf:	add    al,al
   140037ad1:	mov    ebp,0x14000
   140037ad6:	add    BYTE PTR [rax],al
   140037ad8:	clc    
   140037ad9:	mov    ebp,0x14000
   140037ade:	add    BYTE PTR [rax],al
   140037ae0:	clc    
   140037ae1:	mov    ebp,0x14000
   140037ae6:	add    BYTE PTR [rax],al
   140037ae8:	xor    BYTE PTR [rsi+0x14000],bh
   140037aee:	add    BYTE PTR [rax],al
   140037af0:	lods   al,BYTE PTR ds:[rsi]
   140037af1:	adc    DWORD PTR [rcx],eax
   140037af3:	rex add DWORD PTR [rax],eax
   140037af6:	add    BYTE PTR [rax],al
   140037af8:	sub    al,0xf1
   140037afa:	add    BYTE PTR [rax+0x1],al
   140037afd:	add    BYTE PTR [rax],al
   140037aff:	add    BYTE PTR [rdx+rsi*8],dl
   140037b02:	add    BYTE PTR [rax+0x1],al
   140037b05:	add    BYTE PTR [rax],al
   140037b07:	add    BYTE PTR [rax+0x14000b7],ch
   140037b0d:	add    BYTE PTR [rax],al
   140037b0f:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140037b16:	add    BYTE PTR [rax],al
   140037b18:	rex.WR ret 0x4000
   140037b1c:	add    DWORD PTR [rax],eax
   140037b1e:	add    BYTE PTR [rax],al
   140037b20:	pop    rsp
   140037b21:	ret    0x4000
   140037b24:	add    DWORD PTR [rax],eax
   140037b26:	add    BYTE PTR [rax],al
   140037b28:	mov    al,0xb7
   140037b2a:	add    BYTE PTR [rax+0x1],al
   140037b2d:	add    BYTE PTR [rax],al
   140037b2f:	add    BYTE PTR [rdi+rdx*1+0x14001],dh
   140037b36:	add    BYTE PTR [rax],al
   140037b38:	cld    
   140037b39:	mov    eax,0x14000
   140037b3e:	add    BYTE PTR [rax],al
   140037b40:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140037b41:	inc    DWORD PTR [rax]
   140037b43:	rex add DWORD PTR [rax],eax
   140037b46:	add    BYTE PTR [rax],al
   140037b48:	sbb    al,0xb7
   140037b4a:	add    BYTE PTR [rax+0x1],al
   140037b4d:	add    BYTE PTR [rax],al
   140037b4f:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140037b56:	add    BYTE PTR [rax],al
   140037b58:	adc    QWORD PTR [rcx],r8
   140037b5b:	rex add DWORD PTR [rax],eax
   140037b5e:	add    BYTE PTR [rax],al
   140037b60:	cmp    BYTE PTR [rsi+0x14000],bh
   140037b66:	add    BYTE PTR [rax],al
   140037b68:	int3   
   140037b69:	hlt    
   140037b6a:	add    BYTE PTR [rax+0x1],al
   140037b6d:	add    BYTE PTR [rax],al
   140037b6f:	add    BYTE PTR [rax-0x42],cl
   140037b72:	add    BYTE PTR [rax+0x1],al
   140037b75:	add    BYTE PTR [rax],al
   140037b77:	add    BYTE PTR [rax-0x42],ch
   140037b7a:	add    BYTE PTR [rax+0x1],al
   140037b7d:	add    BYTE PTR [rax],al
   140037b7f:	add    ah,cl
   140037b81:	hlt    
   140037b82:	add    BYTE PTR [rax+0x1],al
   140037b85:	add    BYTE PTR [rax],al
   140037b87:	add    ah,cl
   140037b89:	hlt    
   140037b8a:	add    BYTE PTR [rax+0x1],al
   140037b8d:	add    BYTE PTR [rax],al
   140037b8f:	add    BYTE PTR [rax],ah
   140037b91:	in     eax,dx
   140037b92:	add    eax,DWORD PTR [rax+0x1]
   140037b95:	add    BYTE PTR [rax],al
   140037b97:	add    BYTE PTR [rax+0x14000b8],ah
   140037b9d:	add    BYTE PTR [rax],al
   140037b9f:	add    BYTE PTR [rax+0x14003ed],ah
   140037ba5:	add    BYTE PTR [rax],al
   140037ba7:	add    BYTE PTR [rax+0x14000b9],dl
   140037bad:	add    BYTE PTR [rax],al
   140037baf:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140037bb6:	add    BYTE PTR [rax],al
   140037bb8:	pushf  
   140037bb9:	mov    ecx,0x14000
   140037bbe:	add    BYTE PTR [rax],al
   140037bc0:	pushf  
   140037bc1:	mov    ecx,0x14000
   140037bc6:	add    BYTE PTR [rax],al
   140037bc8:	loopne 0x140037c00
   140037bca:	xchg   DWORD PTR [rcx+0x3d],esp
   140037bcd:	cmp    al,0xcf
   140037bcf:	adc    DWORD PTR [rcx+0xaa000c],eax
   140037bd5:	cmp    BYTE PTR [rbx+0x7d9dcf71],bl
   140037bdb:	jp     0x140037b7e
   140037bdd:	mov    bh,0x19
   140037bdf:	rex xchg eax,eax
   140037be1:	xor    DWORD PTR [rip+0x69846882],esp        # 0x1a987e469
   140037be7:	and    BYTE PTR [rdx],0x5
   140037bea:	xchg   ebx,eax
   140037beb:	sbb    DWORD PTR [rcx],eax
   140037bed:	add    BYTE PTR [rax],al
   140037bef:	add    BYTE PTR [rbp+rdx*1+0x4],dh
	...
   140037bfb:	add    BYTE PTR [rbx],al
   140037bfd:	add    BYTE PTR [rax],al
   140037bff:	add    BYTE PTR [rcx+rdx*1],bl
   140037c02:	add    al,0x0
   140037c04:	and    BYTE PTR [rax],al
   140037c06:	add    BYTE PTR [rax],al
   140037c08:	add    BYTE PTR [rax],al
   140037c0a:	add    BYTE PTR [rax],al
   140037c0c:	add    DWORD PTR [rax],eax
   140037c0e:	add    BYTE PTR [rax],al
   140037c10:	and    al,BYTE PTR [rip+0x11993]        # 0x1400495a9
   140037c16:	add    BYTE PTR [rax],al
   140037c18:	je     0x140037c2f
   140037c1a:	add    al,0x0
	...
   140037c24:	add    eax,DWORD PTR [rax]
   140037c26:	add    BYTE PTR [rax],al
   140037c28:	adc    DWORD PTR [rax+rax*1],r8d
   140037c2c:	and    BYTE PTR [rax],al
   140037c2e:	add    BYTE PTR [rax],al
   140037c30:	add    BYTE PTR [rax],al
   140037c32:	add    BYTE PTR [rax],al
   140037c34:	add    DWORD PTR [rax],eax
   140037c36:	add    BYTE PTR [rax],al
   140037c38:	and    al,BYTE PTR [rip+0x11993]        # 0x1400495d1
   140037c3e:	add    BYTE PTR [rax],al
   140037c40:	je     0x140037c57
   140037c42:	add    al,0x0
	...
   140037c4c:	add    eax,DWORD PTR [rax]
   140037c4e:	add    BYTE PTR [rax],al
   140037c50:	je     0x140037c63
   140037c52:	add    al,0x0
   140037c54:	and    BYTE PTR [rax],al
   140037c56:	add    BYTE PTR [rax],al
   140037c58:	add    BYTE PTR [rax],al
   140037c5a:	add    BYTE PTR [rax],al
   140037c5c:	add    DWORD PTR [rax],eax
   140037c5e:	add    BYTE PTR [rax],al
   140037c60:	and    al,BYTE PTR [rip+0x11993]        # 0x1400495f9
   140037c66:	add    BYTE PTR [rax],al
   140037c68:	test   al,0x11
   140037c6a:	add    al,0x0
	...
   140037c74:	add    eax,DWORD PTR [rax]
   140037c76:	add    BYTE PTR [rax],al
   140037c78:	mov    al,0x11
   140037c7a:	add    al,0x0
   140037c7c:	push   rax
   140037c7d:	add    BYTE PTR [rax],al
   140037c7f:	add    BYTE PTR [rax],al
   140037c81:	add    BYTE PTR [rax],al
   140037c83:	add    BYTE PTR [rcx],al
   140037c85:	add    BYTE PTR [rax],al
   140037c87:	add    BYTE PTR [rdx],ah
   140037c89:	add    eax,0x11993
   140037c8e:	add    BYTE PTR [rax],al
   140037c90:	je     0x140037ca7
   140037c92:	add    al,0x0
	...
   140037c9c:	add    eax,DWORD PTR [rax]
   140037c9e:	add    BYTE PTR [rax],al
   140037ca0:	fcom   QWORD PTR [rcx]
   140037ca2:	add    al,0x0
   140037ca4:	and    BYTE PTR [rax],al
   140037ca6:	add    BYTE PTR [rax],al
   140037ca8:	add    BYTE PTR [rax],al
   140037caa:	add    BYTE PTR [rax],al
   140037cac:	add    DWORD PTR [rax],eax
   140037cae:	add    BYTE PTR [rax],al
   140037cb0:	and    al,BYTE PTR [rip+0x11993]        # 0x140049649
   140037cb6:	add    BYTE PTR [rax],al
   140037cb8:	je     0x140037ccf
   140037cba:	add    al,0x0
	...
   140037cc4:	add    eax,DWORD PTR [rax]
   140037cc6:	add    BYTE PTR [rax],al
   140037cc8:	or     BYTE PTR [rdx],dl
   140037cca:	add    al,0x0
   140037ccc:	and    BYTE PTR [rax],al
   140037cce:	add    BYTE PTR [rax],al
   140037cd0:	add    BYTE PTR [rax],al
   140037cd2:	add    BYTE PTR [rax],al
   140037cd4:	add    DWORD PTR [rax],eax
   140037cd6:	add    BYTE PTR [rax],al
   140037cd8:	and    al,BYTE PTR [rip+0x11993]        # 0x140049671
   140037cde:	add    BYTE PTR [rax],al
   140037ce0:	je     0x140037cf7
   140037ce2:	add    al,0x0
	...
   140037cec:	add    eax,DWORD PTR [rax]
   140037cee:	add    BYTE PTR [rax],al
   140037cf0:	cmp    BYTE PTR [rdx],dl
   140037cf2:	add    al,0x0
   140037cf4:	and    BYTE PTR [rax],al
   140037cf6:	add    BYTE PTR [rax],al
   140037cf8:	add    BYTE PTR [rax],al
   140037cfa:	add    BYTE PTR [rax],al
   140037cfc:	add    DWORD PTR [rax],eax
   140037cfe:	add    BYTE PTR [rax],al
   140037d00:	and    al,BYTE PTR [rip+0x11993]        # 0x140049699
   140037d06:	add    BYTE PTR [rax],al
   140037d08:	je     0x140037d1f
   140037d0a:	add    al,0x0
	...
   140037d14:	add    eax,DWORD PTR [rax]
   140037d16:	add    BYTE PTR [rax],al
   140037d18:	push   0x20000412
   140037d1d:	add    BYTE PTR [rax],al
   140037d1f:	add    BYTE PTR [rax],al
   140037d21:	add    BYTE PTR [rax],al
   140037d23:	add    BYTE PTR [rcx],al
   140037d25:	add    BYTE PTR [rax],al
   140037d27:	add    BYTE PTR [rdx],ah
   140037d29:	add    eax,0x11993
   140037d2e:	add    BYTE PTR [rax],al
   140037d30:	je     0x140037d47
   140037d32:	add    al,0x0
	...
   140037d3c:	add    eax,DWORD PTR [rax]
   140037d3e:	add    BYTE PTR [rax],al
   140037d40:	cwde   
   140037d41:	adc    al,BYTE PTR [rax+rax*1]
   140037d44:	and    BYTE PTR [rax],al
   140037d46:	add    BYTE PTR [rax],al
   140037d48:	add    BYTE PTR [rax],al
   140037d4a:	add    BYTE PTR [rax],al
   140037d4c:	add    DWORD PTR [rax],eax
   140037d4e:	add    BYTE PTR [rax],al
   140037d50:	and    al,BYTE PTR [rip+0x11993]        # 0x1400496e9
   140037d56:	add    BYTE PTR [rax],al
   140037d58:	je     0x140037d6f
   140037d5a:	add    al,0x0
	...
   140037d64:	add    eax,DWORD PTR [rax]
   140037d66:	add    BYTE PTR [rax],al
   140037d68:	enter  0x412,0x0
   140037d6c:	and    BYTE PTR [rax],al
   140037d6e:	add    BYTE PTR [rax],al
   140037d70:	add    BYTE PTR [rax],al
   140037d72:	add    BYTE PTR [rax],al
   140037d74:	add    DWORD PTR [rax],eax
   140037d76:	add    BYTE PTR [rax],al
   140037d78:	and    al,BYTE PTR [rip+0x11993]        # 0x140049711
   140037d7e:	add    BYTE PTR [rax],al
   140037d80:	je     0x140037d97
   140037d82:	add    al,0x0
	...
   140037d8c:	add    eax,DWORD PTR [rax]
   140037d8e:	add    BYTE PTR [rax],al
   140037d90:	clc    
   140037d91:	adc    al,BYTE PTR [rax+rax*1]
   140037d94:	and    BYTE PTR [rax],al
   140037d96:	add    BYTE PTR [rax],al
   140037d98:	add    BYTE PTR [rax],al
   140037d9a:	add    BYTE PTR [rax],al
   140037d9c:	add    DWORD PTR [rax],eax
   140037d9e:	add    BYTE PTR [rax],al
   140037da0:	and    al,BYTE PTR [rip+0x11993]        # 0x140049739
   140037da6:	add    BYTE PTR [rax],al
   140037da8:	je     0x140037dbf
   140037daa:	add    al,0x0
	...
   140037db4:	add    eax,DWORD PTR [rax]
   140037db6:	add    BYTE PTR [rax],al
   140037db8:	sub    BYTE PTR [rbx],dl
   140037dba:	add    al,0x0
   140037dbc:	and    BYTE PTR [rax],al
   140037dbe:	add    BYTE PTR [rax],al
   140037dc0:	add    BYTE PTR [rax],al
   140037dc2:	add    BYTE PTR [rax],al
   140037dc4:	add    DWORD PTR [rax],eax
   140037dc6:	add    BYTE PTR [rax],al
   140037dc8:	and    al,BYTE PTR [rip+0x11993]        # 0x140049761
   140037dce:	add    BYTE PTR [rax],al
   140037dd0:	je     0x140037de7
   140037dd2:	add    al,0x0
	...
   140037ddc:	add    eax,DWORD PTR [rax]
   140037dde:	add    BYTE PTR [rax],al
   140037de0:	pop    rax
   140037de1:	adc    eax,DWORD PTR [rax+rax*1]
   140037de4:	and    BYTE PTR [rax],al
   140037de6:	add    BYTE PTR [rax],al
   140037de8:	add    BYTE PTR [rax],al
   140037dea:	add    BYTE PTR [rax],al
   140037dec:	add    DWORD PTR [rax],eax
   140037dee:	add    BYTE PTR [rax],al
   140037df0:	and    al,BYTE PTR [rip+0x11993]        # 0x140049789
   140037df6:	add    BYTE PTR [rax],al
   140037df8:	je     0x140037e0f
   140037dfa:	add    al,0x0
	...
   140037e04:	add    eax,DWORD PTR [rax]
   140037e06:	add    BYTE PTR [rax],al
   140037e08:	mov    WORD PTR [rbx],ss
   140037e0a:	add    al,0x0
   140037e0c:	and    BYTE PTR [rax],al
   140037e0e:	add    BYTE PTR [rax],al
   140037e10:	add    BYTE PTR [rax],al
   140037e12:	add    BYTE PTR [rax],al
   140037e14:	add    DWORD PTR [rax],eax
   140037e16:	add    BYTE PTR [rax],al
   140037e18:	and    al,BYTE PTR [rip+0x11993]        # 0x1400497b1
   140037e1e:	add    BYTE PTR [rax],al
   140037e20:	je     0x140037e37
   140037e22:	add    al,0x0
	...
   140037e2c:	add    eax,DWORD PTR [rax]
   140037e2e:	add    BYTE PTR [rax],al
   140037e30:	mov    esp,0x20000413
   140037e35:	add    BYTE PTR [rax],al
   140037e37:	add    BYTE PTR [rax],al
   140037e39:	add    BYTE PTR [rax],al
   140037e3b:	add    BYTE PTR [rcx],al
   140037e3d:	add    BYTE PTR [rax],al
   140037e3f:	add    BYTE PTR [rdx],ah
   140037e41:	add    eax,0x11993
   140037e46:	add    BYTE PTR [rax],al
   140037e48:	je     0x140037e5f
   140037e4a:	add    al,0x0
	...
   140037e54:	add    eax,DWORD PTR [rax]
   140037e56:	add    BYTE PTR [rax],al
   140037e58:	call   0x160038270
   140037e5d:	add    BYTE PTR [rax],al
   140037e5f:	add    BYTE PTR [rax],al
   140037e61:	add    BYTE PTR [rax],al
   140037e63:	add    BYTE PTR [rcx],al
   140037e65:	add    BYTE PTR [rax],al
   140037e67:	add    BYTE PTR [rdx],ah
   140037e69:	add    eax,0x11993
   140037e6e:	add    BYTE PTR [rax],al
   140037e70:	je     0x140037e87
   140037e72:	add    al,0x0
	...
   140037e7c:	add    eax,DWORD PTR [rax]
   140037e7e:	add    BYTE PTR [rax],al
   140037e80:	adc    al,0x14
   140037e82:	add    al,0x0
   140037e84:	and    BYTE PTR [rax],al
   140037e86:	add    BYTE PTR [rax],al
   140037e88:	add    BYTE PTR [rax],al
   140037e8a:	add    BYTE PTR [rax],al
   140037e8c:	add    DWORD PTR [rax],eax
   140037e8e:	add    BYTE PTR [rax],al
   140037e90:	and    al,BYTE PTR [rip+0x11993]        # 0x140049829
   140037e96:	add    BYTE PTR [rax],al
   140037e98:	je     0x140037eaf
   140037e9a:	add    al,0x0
	...
   140037ea4:	add    eax,DWORD PTR [rax]
   140037ea6:	add    BYTE PTR [rax],al
   140037ea8:	rex.R adc al,0x4
   140037eab:	add    BYTE PTR [rax],ah
   140037ead:	add    BYTE PTR [rax],al
   140037eaf:	add    BYTE PTR [rax],al
   140037eb1:	add    BYTE PTR [rax],al
   140037eb3:	add    BYTE PTR [rcx],al
   140037eb5:	add    BYTE PTR [rax],al
   140037eb7:	add    BYTE PTR [rdx],ah
   140037eb9:	add    eax,0x11993
   140037ebe:	add    BYTE PTR [rax],al
   140037ec0:	je     0x140037ed7
   140037ec2:	add    al,0x0
	...
   140037ecc:	add    eax,DWORD PTR [rax]
   140037ece:	add    BYTE PTR [rax],al
   140037ed0:	je     0x140037ee6
   140037ed2:	add    al,0x0
   140037ed4:	and    BYTE PTR [rax],al
   140037ed6:	add    BYTE PTR [rax],al
   140037ed8:	add    BYTE PTR [rax],al
   140037eda:	add    BYTE PTR [rax],al
   140037edc:	add    DWORD PTR [rax],eax
   140037ede:	add    BYTE PTR [rax],al
   140037ee0:	and    al,BYTE PTR [rip+0x11993]        # 0x140049879
   140037ee6:	add    BYTE PTR [rax],al
   140037ee8:	test   al,0x14
   140037eea:	add    al,0x0
	...
   140037ef4:	add    eax,DWORD PTR [rax]
   140037ef6:	add    BYTE PTR [rax],al
   140037ef8:	mov    al,0x14
   140037efa:	add    al,0x0
   140037efc:	xor    BYTE PTR [rax],al
   140037efe:	add    BYTE PTR [rax],al
   140037f00:	add    BYTE PTR [rax],al
   140037f02:	add    BYTE PTR [rax],al
   140037f04:	add    DWORD PTR [rax],eax
   140037f06:	add    BYTE PTR [rax],al
   140037f08:	and    al,BYTE PTR [rip+0x11993]        # 0x1400498a1
   140037f0e:	add    BYTE PTR [rax],al
   140037f10:	je     0x140037f27
   140037f12:	add    al,0x0
	...
   140037f1c:	add    eax,DWORD PTR [rax]
   140037f1e:	add    BYTE PTR [rax],al
   140037f20:	in     al,0x14
   140037f22:	add    al,0x0
   140037f24:	and    BYTE PTR [rax],al
   140037f26:	add    BYTE PTR [rax],al
   140037f28:	add    BYTE PTR [rax],al
   140037f2a:	add    BYTE PTR [rax],al
   140037f2c:	add    DWORD PTR [rax],eax
   140037f2e:	add    BYTE PTR [rax],al
   140037f30:	and    al,BYTE PTR [rip+0x11993]        # 0x1400498c9
   140037f36:	add    BYTE PTR [rax],al
   140037f38:	je     0x140037f4f
   140037f3a:	add    al,0x0
	...
   140037f44:	add    eax,DWORD PTR [rax]
   140037f46:	add    BYTE PTR [rax],al
   140037f48:	sbb    BYTE PTR [rip+0x200004],dl        # 0x140237f52
   140037f4e:	add    BYTE PTR [rax],al
   140037f50:	add    BYTE PTR [rax],al
   140037f52:	add    BYTE PTR [rax],al
   140037f54:	add    DWORD PTR [rax],eax
   140037f56:	add    BYTE PTR [rax],al
   140037f58:	and    al,BYTE PTR [rip+0x11993]        # 0x1400498f1
   140037f5e:	add    BYTE PTR [rax],al
   140037f60:	je     0x140037f77
   140037f62:	add    al,0x0
	...
   140037f6c:	add    eax,DWORD PTR [rax]
   140037f6e:	add    BYTE PTR [rax],al
   140037f70:	rex.R adc eax,0x200004
   140037f76:	add    BYTE PTR [rax],al
   140037f78:	add    BYTE PTR [rax],al
   140037f7a:	add    BYTE PTR [rax],al
   140037f7c:	add    DWORD PTR [rax],eax
   140037f7e:	add    BYTE PTR [rax],al
   140037f80:	and    al,BYTE PTR [rip+0x11993]        # 0x140049919
   140037f86:	add    BYTE PTR [rax],al
   140037f88:	je     0x140037f9f
   140037f8a:	add    al,0x0
	...
   140037f94:	add    eax,DWORD PTR [rax]
   140037f96:	add    BYTE PTR [rax],al
   140037f98:	jl     0x140037faf
   140037f9a:	add    al,0x0
   140037f9c:	and    BYTE PTR [rax],al
   140037f9e:	add    BYTE PTR [rax],al
   140037fa0:	add    BYTE PTR [rax],al
   140037fa2:	add    BYTE PTR [rax],al
   140037fa4:	add    DWORD PTR [rax],eax
   140037fa6:	add    BYTE PTR [rax],al
   140037fa8:	and    al,BYTE PTR [rip+0x11993]        # 0x140049941
   140037fae:	add    BYTE PTR [rax],al
   140037fb0:	je     0x140037fc7
   140037fb2:	add    al,0x0
	...
   140037fbc:	add    eax,DWORD PTR [rax]
   140037fbe:	add    BYTE PTR [rax],al
   140037fc0:	lods   al,BYTE PTR ds:[rsi]
   140037fc1:	adc    eax,0x200004
   140037fc6:	add    BYTE PTR [rax],al
   140037fc8:	add    BYTE PTR [rax],al
   140037fca:	add    BYTE PTR [rax],al
   140037fcc:	add    DWORD PTR [rax],eax
   140037fce:	add    BYTE PTR [rax],al
   140037fd0:	and    al,BYTE PTR [rip+0x11993]        # 0x140049969
   140037fd6:	add    BYTE PTR [rax],al
   140037fd8:	je     0x140037fef
   140037fda:	add    al,0x0
	...
   140037fe4:	add    eax,DWORD PTR [rax]
   140037fe6:	add    BYTE PTR [rax],al
   140037fe8:	(bad)  
   140037fe9:	adc    eax,0x200004
   140037fee:	add    BYTE PTR [rax],al
   140037ff0:	add    BYTE PTR [rax],al
   140037ff2:	add    BYTE PTR [rax],al
   140037ff4:	add    DWORD PTR [rax],eax
   140037ff6:	add    BYTE PTR [rax],al
   140037ff8:	and    al,BYTE PTR [rip+0x11993]        # 0x140049991
   140037ffe:	add    BYTE PTR [rax],al
   140038000:	je     0x140038017
   140038002:	add    al,0x0
	...
   14003800c:	add    eax,DWORD PTR [rax]
   14003800e:	add    BYTE PTR [rax],al
   140038010:	cld    
   140038011:	adc    eax,0x200004
   140038016:	add    BYTE PTR [rax],al
   140038018:	add    BYTE PTR [rax],al
   14003801a:	add    BYTE PTR [rax],al
   14003801c:	add    DWORD PTR [rax],eax
   14003801e:	add    BYTE PTR [rax],al
   140038020:	and    al,BYTE PTR [rip+0x11993]        # 0x1400499b9
   140038026:	add    BYTE PTR [rax],al
   140038028:	je     0x14003803f
   14003802a:	add    al,0x0
	...
   140038034:	add    eax,DWORD PTR [rax]
   140038036:	add    BYTE PTR [rax],al
   140038038:	sub    al,0x16
   14003803a:	add    al,0x0
   14003803c:	and    BYTE PTR [rax],al
   14003803e:	add    BYTE PTR [rax],al
   140038040:	add    BYTE PTR [rax],al
   140038042:	add    BYTE PTR [rax],al
   140038044:	add    DWORD PTR [rax],eax
   140038046:	add    BYTE PTR [rax],al
   140038048:	and    al,BYTE PTR [rip+0x11993]        # 0x1400499e1
   14003804e:	add    BYTE PTR [rax],al
   140038050:	je     0x140038067
   140038052:	add    al,0x0
	...
   14003805c:	add    eax,DWORD PTR [rax]
   14003805e:	add    BYTE PTR [rax],al
   140038060:	pop    rax
   140038061:	(bad)  
   140038062:	add    al,0x0
   140038064:	and    BYTE PTR [rax],al
   140038066:	add    BYTE PTR [rax],al
   140038068:	add    BYTE PTR [rax],al
   14003806a:	add    BYTE PTR [rax],al
   14003806c:	add    DWORD PTR [rax],eax
   14003806e:	add    BYTE PTR [rax],al
   140038070:	and    al,BYTE PTR [rip+0x11993]        # 0x140049a09
   140038076:	add    BYTE PTR [rax],al
   140038078:	cwde   
   140038079:	(bad)  
   14003807a:	add    al,0x0
	...
   140038084:	add    eax,DWORD PTR [rax]
   140038086:	add    BYTE PTR [rax],al
   140038088:	movabs al,ds:0x20000416
   140038091:	add    BYTE PTR [rax],al
   140038093:	add    BYTE PTR [rcx],al
   140038095:	add    BYTE PTR [rax],al
   140038097:	add    BYTE PTR [rdx],ah
   140038099:	add    eax,0x11993
   14003809e:	add    BYTE PTR [rax],al
   1400380a0:	enter  0x416,0x0
	...
   1400380ac:	add    eax,DWORD PTR [rax]
   1400380ae:	add    BYTE PTR [rax],al
   1400380b0:	rcl    BYTE PTR [rsi],1
   1400380b2:	add    al,0x0
   1400380b4:	and    BYTE PTR [rax],al
   1400380b6:	add    BYTE PTR [rax],al
   1400380b8:	add    BYTE PTR [rax],al
   1400380ba:	add    BYTE PTR [rax],al
   1400380bc:	add    DWORD PTR [rax],eax
   1400380be:	add    BYTE PTR [rax],al
   1400380c0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400380c2:	imul   esi,DWORD PTR [rbx+rax*2+0x6f],0x6e6f6d6d
   1400380ca:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400380cc:	outs   dx,BYTE PTR ds:[rsi]
   1400380cd:	je     0x140038141
   1400380cf:	outs   dx,DWORD PTR ds:[rsi]
   1400380d0:	ins    BYTE PTR es:[rdi],dx
   1400380d1:	jae    0x1400380d3
   1400380d3:	add    BYTE PTR [rax],al
   1400380d5:	add    BYTE PTR [rax],al
   1400380d7:	add    BYTE PTR [rcx+0x6e],cl
   1400380da:	imul   esi,DWORD PTR [rbx+rax*2+0x6f],0x6e6f6d6d
   1400380e2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400380e4:	outs   dx,BYTE PTR ds:[rsi]
   1400380e5:	je     0x140038159
   1400380e7:	outs   dx,DWORD PTR ds:[rsi]
   1400380e8:	ins    BYTE PTR es:[rdi],dx
   1400380e9:	jae    0x140038130
   1400380eb:	js     0x1400380ed
   1400380ed:	add    BYTE PTR [rax],al
   1400380ef:	add    BYTE PTR [rdx],ah
   1400380f1:	add    eax,0x11993
   1400380f6:	add    BYTE PTR [rax],al
   1400380f8:	add    al,0x1f
   1400380fa:	add    al,0x0
	...
   140038104:	add    eax,DWORD PTR [rax]
   140038106:	add    BYTE PTR [rax],al
   140038108:	rex.WR (bad) 
   14003810a:	add    al,0x0
   14003810c:	xor    BYTE PTR [rax],al
   14003810e:	add    BYTE PTR [rax],al
   140038110:	add    BYTE PTR [rax],al
   140038112:	add    BYTE PTR [rax],al
   140038114:	add    DWORD PTR [rax],eax
   140038116:	add    BYTE PTR [rax],al
   140038118:	and    al,BYTE PTR [rip+0x21993]        # 0x140059ab1
   14003811e:	add    BYTE PTR [rax],al
   140038120:	cmp    al,0x7
   140038122:	add    al,0x0
   140038124:	add    DWORD PTR [rax],eax
   140038126:	add    BYTE PTR [rax],al
   140038128:	mov    esp,0x6000417
   14003812d:	add    BYTE PTR [rax],al
   14003812f:	add    ah,ah
   140038131:	(bad)  
   140038132:	add    al,0x0
   140038134:	xor    BYTE PTR [rax],al
   140038136:	add    BYTE PTR [rax],al
   140038138:	add    BYTE PTR [rax],al
   14003813a:	add    BYTE PTR [rax],al
   14003813c:	add    DWORD PTR [rax],eax
   14003813e:	add    BYTE PTR [rax],al
   140038140:	and    al,BYTE PTR [rip+0x11993]        # 0x140049ad9
   140038146:	add    BYTE PTR [rax],al
   140038148:	and    al,0x18
   14003814a:	add    al,0x0
	...
   140038154:	add    eax,DWORD PTR [rax]
   140038156:	add    BYTE PTR [rax],al
   140038158:	sub    al,0x18
   14003815a:	add    al,0x0
   14003815c:	and    BYTE PTR [rax],al
   14003815e:	add    BYTE PTR [rax],al
   140038160:	add    BYTE PTR [rax],al
   140038162:	add    BYTE PTR [rax],al
   140038164:	add    DWORD PTR [rax],eax
   140038166:	add    BYTE PTR [rax],al
   140038168:	and    al,BYTE PTR [rip+0x21993]        # 0x140059b01
   14003816e:	add    BYTE PTR [rax],al
   140038170:	je     0x14003818a
   140038172:	add    al,0x0
	...
   14003817c:	add    eax,DWORD PTR [rax]
   14003817e:	add    BYTE PTR [rax],al
   140038180:	test   BYTE PTR [rax],bl
   140038182:	add    al,0x0
   140038184:	and    BYTE PTR [rax],al
   140038186:	add    BYTE PTR [rax],al
   140038188:	add    BYTE PTR [rax],al
   14003818a:	add    BYTE PTR [rax],al
   14003818c:	add    DWORD PTR [rax],eax
   14003818e:	add    BYTE PTR [rax],al
   140038190:	rex.W je 0x140038200
   140038193:	ins    BYTE PTR es:[rdi],dx
   140038194:	rex.W
   140038195:	gs ins BYTE PTR es:[rdi],dx
   140038197:	jo     0x1400381da
   140038199:	add    BYTE PTR [rax],al
   14003819b:	add    BYTE PTR [rax],al
   14003819d:	add    BYTE PTR [rax],al
   14003819f:	add    BYTE PTR [rax+0x68],ch
   1400381a2:	movsxd esi,DWORD PTR [rdx+rsi*2+0x6c]
   1400381a6:	outs   dx,DWORD PTR cs:[rsi]
   1400381a8:	movsxd edi,DWORD PTR [rax+0x0]
   1400381ab:	add    BYTE PTR [rax],al
   1400381ad:	add    BYTE PTR [rax],al
   1400381af:	add    BYTE PTR [rax-0xd],bl
   1400381b2:	add    eax,DWORD PTR [rax+0x1]
   1400381b5:	add    BYTE PTR [rax],al
   1400381b7:	add    BYTE PTR [rsi+rsi*8+0x14000],bl
   1400381be:	add    BYTE PTR [rax],al
   1400381c0:	fdiv   st,st(6)
   1400381c2:	add    BYTE PTR [rax+0x1],al
   1400381c5:	add    BYTE PTR [rax],al
   1400381c7:	add    al,al
   1400381c9:	test   BYTE PTR [rax],0x40
   1400381cc:	add    DWORD PTR [rax],eax
   1400381ce:	add    BYTE PTR [rax],al
   1400381d0:	int3   
   1400381d1:	hlt    
   1400381d2:	add    BYTE PTR [rax+0x1],al
   1400381d5:	add    BYTE PTR [rax],al
   1400381d7:	add    BYTE PTR [rax-0x46],dl
   1400381da:	add    BYTE PTR [rax+0x1],al
   1400381dd:	add    BYTE PTR [rax],al
   1400381df:	add    BYTE PTR [rax],dh
   1400381e1:	repz add eax,DWORD PTR [rax+0x1]
   1400381e5:	add    BYTE PTR [rax],al
   1400381e7:	add    BYTE PTR [rsi+rsi*8+0x14000],dh
   1400381ee:	add    BYTE PTR [rax],al
   1400381f0:	test   al,0xf6
   1400381f2:	add    BYTE PTR [rax+0x1],al
   1400381f5:	add    BYTE PTR [rax],al
   1400381f7:	add    ah,cl
   1400381f9:	test   BYTE PTR [rax],0x40
   1400381fc:	add    DWORD PTR [rax],eax
   1400381fe:	add    BYTE PTR [rax],al
   140038200:	nop
   140038201:	out    dx,al
   140038202:	add    BYTE PTR [rax+0x1],al
	...
   14003820d:	add    BYTE PTR [rax],al
   14003820f:	add    BYTE PTR [rax],ah
   140038211:	lock add eax,DWORD PTR [rax+0x1]
   140038215:	add    BYTE PTR [rax],al
   140038217:	add    BYTE PTR [rax],ah
   140038219:	test   BYTE PTR [rax],0x40
   14003821c:	add    DWORD PTR [rax],eax
   14003821e:	add    BYTE PTR [rax],al
   140038220:	in     al,dx
   140038221:	cmc    
   140038222:	add    BYTE PTR [rax+0x1],al
   140038225:	add    BYTE PTR [rax],al
   140038227:	add    ah,dh
   140038229:	cmc    
   14003822a:	add    BYTE PTR [rax+0x1],al
   14003822d:	add    BYTE PTR [rax],al
   14003822f:	add    BYTE PTR [rdi+rbp*8],dh
   140038232:	add    BYTE PTR [rax+0x1],al
   140038235:	add    BYTE PTR [rax],al
   140038237:	add    BYTE PTR [rax-0x11],bl
   14003823a:	add    BYTE PTR [rax+0x1],al
   14003823d:	add    BYTE PTR [rax],al
   14003823f:	add    BYTE PTR [rax],al
   140038241:	out    dx,eax
   140038242:	add    BYTE PTR [rax+0x1],al
   140038245:	add    BYTE PTR [rax],al
   140038247:	add    BYTE PTR [rsi+rbp*8+0x14000],bl
   14003824e:	add    BYTE PTR [rax],al
   140038250:	add    al,0xe9
   140038252:	add    BYTE PTR [rax+0x1],al
   140038255:	add    BYTE PTR [rax],al
   140038257:	add    BYTE PTR [rcx+rbp*8],dh
   14003825a:	add    BYTE PTR [rax+0x1],al
   14003825d:	add    BYTE PTR [rax],al
   14003825f:	add    BYTE PTR [rcx+rbp*8+0x0],ah
   140038263:	rex add DWORD PTR [rax],eax
   140038266:	add    BYTE PTR [rax],al
   140038268:	mov    ah,0xe9
   14003826a:	add    BYTE PTR [rax+0x1],al
   14003826d:	add    BYTE PTR [rax],al
   14003826f:	add    BYTE PTR [rdx+rbp*8],al
   140038272:	add    BYTE PTR [rax+0x1],al
   140038275:	add    BYTE PTR [rax],al
   140038277:	add    BYTE PTR [rdx+rbp*8+0x0],dl
   14003827b:	rex add DWORD PTR [rax],eax
   14003827e:	add    BYTE PTR [rax],al
   140038280:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140038281:	(bad)  
   140038282:	add    BYTE PTR [rax+0x1],al
   140038285:	add    BYTE PTR [rax],al
   140038287:	add    ah,dh
   140038289:	(bad)  
   14003828a:	add    BYTE PTR [rax+0x1],al
   14003828d:	add    BYTE PTR [rax],al
   14003828f:	add    BYTE PTR [rbx+rbp*8+0x0],al
   140038293:	rex add DWORD PTR [rax],eax
   140038296:	add    BYTE PTR [rax],al
   140038298:	xchg   esp,eax
   140038299:	jmp    0x14003829b
   14003829b:	rex add DWORD PTR [rax],eax
   14003829e:	add    BYTE PTR [rax],al
   1400382a0:	in     al,dx
   1400382a1:	jmp    0x1400382a3
   1400382a3:	rex add DWORD PTR [rax],eax
   1400382a6:	add    BYTE PTR [rax],al
   1400382a8:	cmp    al,0xec
   1400382aa:	add    BYTE PTR [rax+0x1],al
   1400382ad:	add    BYTE PTR [rax],al
   1400382af:	add    BYTE PTR [rsp+rbp*8+0x0],ch
   1400382b3:	rex add DWORD PTR [rax],eax
   1400382b6:	add    BYTE PTR [rax],al
   1400382b8:	pushf  
   1400382b9:	in     al,dx
   1400382ba:	add    BYTE PTR [rax+0x1],al
   1400382bd:	add    BYTE PTR [rax],al
   1400382bf:	add    ah,ch
   1400382c1:	in     al,dx
   1400382c2:	add    BYTE PTR [rax+0x1],al
   1400382c5:	add    BYTE PTR [rax],al
   1400382c7:	add    BYTE PTR [rax],dh
   1400382c9:	in     eax,dx
   1400382ca:	add    BYTE PTR [rax+0x1],al
   1400382cd:	add    BYTE PTR [rax],al
   1400382cf:	add    BYTE PTR [rax+0x14000ed],bh
   1400382d5:	add    BYTE PTR [rax],al
   1400382d7:	add    BYTE PTR [rax],cl
   1400382d9:	out    dx,al
   1400382da:	add    BYTE PTR [rax+0x1],al
   1400382dd:	add    BYTE PTR [rax],al
   1400382df:	add    BYTE PTR [rax],bh
   1400382e1:	out    dx,al
   1400382e2:	add    BYTE PTR [rax+0x1],al
   1400382e5:	add    BYTE PTR [rax],al
   1400382e7:	add    BYTE PTR [rsi+rbp*8+0x0],bh
   1400382eb:	rex add DWORD PTR [rax],eax
   1400382ee:	add    BYTE PTR [rax],al
   1400382f0:	jl     0x1400382e0
   1400382f2:	add    BYTE PTR [rax+0x1],al
   1400382f5:	add    BYTE PTR [rax],al
   1400382f7:	add    BYTE PTR [rsi+rsi*8],dh
   1400382fa:	add    BYTE PTR [rax+0x1],al
   1400382fd:	add    BYTE PTR [rax],al
   1400382ff:	add    al,bl
   140038301:	jnp    0x140038306
   140038303:	rex add DWORD PTR [rax],eax
   140038306:	add    BYTE PTR [rax],al
   140038308:	or     BYTE PTR [rax],al
   14003830a:	add    BYTE PTR [rax],al
   14003830c:	add    BYTE PTR [rax],al
   14003830e:	add    BYTE PTR [rax],al
   140038310:	add    DWORD PTR [rax],eax
   140038312:	add    BYTE PTR [rax],al
   140038314:	add    BYTE PTR [rax],al
   140038316:	add    BYTE PTR [rax],al
   140038318:	enter  0x37b,0x40
   14003831c:	add    DWORD PTR [rax],eax
	...
   140038326:	add    BYTE PTR [rax],al
   140038328:	add    DWORD PTR [rax],eax
   14003832a:	add    BYTE PTR [rax],al
   14003832c:	add    BYTE PTR [rax],al
   14003832e:	add    BYTE PTR [rax],al
   140038330:	js     0x1400382b5
   140038332:	add    eax,DWORD PTR [rax+0x1]
	...
   14003833d:	add    BYTE PTR [rax],al
   14003833f:	add    BYTE PTR [rcx],al
   140038341:	add    BYTE PTR [rax],al
   140038343:	add    BYTE PTR [rax],al
   140038345:	add    BYTE PTR [rax],al
   140038347:	add    BYTE PTR [rax+0x1400383],cl
   14003834d:	add    BYTE PTR [rax],al
   14003834f:	add    BYTE PTR [rax],ah
   140038351:	add    BYTE PTR [rax],al
   140038353:	add    BYTE PTR [rax],al
   140038355:	add    BYTE PTR [rax],al
   140038357:	add    BYTE PTR [rcx],al
	...
   140038379:	add    al,0x2
   14003837b:	add    BYTE PTR [rax],al
   14003837d:	add    BYTE PTR [rax],al
   14003837f:	add    al,al
   140038381:	add    BYTE PTR [rax],al
   140038383:	add    BYTE PTR [rax],al
   140038385:	add    BYTE PTR [rax],al
   140038387:	rex.RX adc al,0x1
   14003838a:	add    BYTE PTR [rax],al
   14003838c:	add    BYTE PTR [rax],al
   14003838e:	add    BYTE PTR [rax],al
   140038390:	rol    BYTE PTR [rax],0x0
   140038393:	add    BYTE PTR [rax],al
   140038395:	add    BYTE PTR [rax],al
   140038397:	rex.RX and r8b,BYTE PTR [rip+0x21993]        # 0x140059d31
   14003839e:	add    BYTE PTR [rax],al
   1400383a0:	cmp    al,0x7
   1400383a2:	add    al,0x0
   1400383a4:	add    DWORD PTR [rax],eax
   1400383a6:	add    BYTE PTR [rax],al
   1400383a8:	or     al,0x19
   1400383aa:	add    al,0x0
   1400383ac:	(bad)  
   1400383ad:	add    BYTE PTR [rax],al
   1400383af:	add    BYTE PTR [rcx+rbx*1],dh
   1400383b2:	add    al,0x0
   1400383b4:	cmp    BYTE PTR [rax],al
   1400383b6:	add    BYTE PTR [rax],al
   1400383b8:	add    BYTE PTR [rax],al
   1400383ba:	add    BYTE PTR [rax],al
   1400383bc:	add    DWORD PTR [rax],eax
   1400383be:	add    BYTE PTR [rax],al
   1400383c0:	and    al,BYTE PTR [rip+0x11993]        # 0x140049d59
   1400383c6:	add    BYTE PTR [rax],al
   1400383c8:	mov    BYTE PTR [rcx],bl
   1400383ca:	add    al,0x0
	...
   1400383d4:	add    eax,DWORD PTR [rax]
   1400383d6:	add    BYTE PTR [rax],al
   1400383d8:	nop
   1400383d9:	sbb    DWORD PTR [rax+rax*1],eax
   1400383dc:	add    BYTE PTR [rax],al
   1400383df:	add    BYTE PTR [rax],al
   1400383e1:	add    BYTE PTR [rax],al
   1400383e3:	add    BYTE PTR [rcx],al
   1400383e5:	add    BYTE PTR [rax],al
   1400383e7:	add    BYTE PTR [rbx],ah
   1400383e9:	xor    esi,DWORD PTR [rdx]
   1400383eb:	(bad)  
   1400383ec:	cmp    BYTE PTR ss:[rax],al
   1400383ef:	add    BYTE PTR [rcx+0x6d],ch
   1400383f2:	add    BYTE PTR gs:[rax],al
   1400383f5:	add    BYTE PTR [rax],al
   1400383f7:	add    BYTE PTR [rdx],ah
   1400383f9:	add    eax,0x41993
   1400383fe:	add    BYTE PTR [rax],al
   140038400:	in     al,dx
   140038401:	sbb    DWORD PTR [rax+rax*1],eax
	...
   14003840c:	adc    eax,0xc000000
   140038411:	sbb    al,BYTE PTR [rax+rax*1]
   140038414:	push   0x0
   140038419:	add    BYTE PTR [rax],al
   14003841b:	add    BYTE PTR [rcx],al
   14003841d:	add    BYTE PTR [rax],al
   14003841f:	add    BYTE PTR [rdx],ah
   140038421:	add    eax,0x31993
   140038426:	add    BYTE PTR [rax],al
   140038428:	add    al,0x1b
   14003842a:	add    al,0x0
   14003842c:	add    DWORD PTR [rax],eax
   14003842e:	add    BYTE PTR [rax],al
   140038430:	fcomp  QWORD PTR [rdx]
   140038432:	add    al,0x0
   140038434:	or     BYTE PTR [rax],al
   140038436:	add    BYTE PTR [rax],al
   140038438:	sbb    al,0x1b
   14003843a:	add    al,0x0
   14003843c:	and    BYTE PTR [rax],al
   14003843e:	add    BYTE PTR [rax],al
   140038440:	add    BYTE PTR [rax],al
   140038442:	add    BYTE PTR [rax],al
   140038444:	add    DWORD PTR [rax],eax
   140038446:	add    BYTE PTR [rax],al
   140038448:	and    al,BYTE PTR [rip+0x31993]        # 0x140069de1
   14003844e:	add    BYTE PTR [rax],al
   140038450:	lods   al,BYTE PTR ds:[rsi]
   140038451:	sbb    eax,DWORD PTR [rax+rax*1]
   140038454:	add    DWORD PTR [rax],eax
   140038456:	add    BYTE PTR [rax],al
   140038458:	test   BYTE PTR [rbx],bl
   14003845a:	add    al,0x0
   14003845c:	or     BYTE PTR [rax],al
   14003845e:	add    BYTE PTR [rax],al
   140038460:	(bad)  
   140038461:	sbb    eax,DWORD PTR [rax+rax*1]
   140038464:	add    BYTE PTR [rax],al
   140038467:	add    BYTE PTR [rax],al
   140038469:	add    BYTE PTR [rax],al
   14003846b:	add    BYTE PTR [rcx],al
   14003846d:	add    BYTE PTR [rax],al
   14003846f:	add    BYTE PTR [rsi+0x3a],ah
   140038472:	pop    rsp
   140038473:	fs fs pop rsp
   140038476:	jbe    0x1400384db
   140038478:	je     0x1400384e9
   14003847a:	outs   dx,DWORD PTR ds:[rsi]
   14003847b:	ins    BYTE PTR es:[rdi],dx
   14003847c:	jae    0x1400384da
   14003847e:	jbe    0x1400384e3
   140038480:	(bad)  
   140038481:	ins    BYTE PTR es:[rdi],dx
   140038482:	imul   esp,DWORD PTR [rdx+0x73],0x6968735c
   140038489:	jo     0x1400384e7
   14003848b:	(bad)  
   14003848c:	je     0x1400384fa
   14003848e:	ins    DWORD PTR es:[rdi],dx
   14003848f:	movsxd bx,DWORD PTR [rcx+rbp*2+0x6e]
   140038494:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   140038498:	gs pop rsp
   14003849a:	(bad)  
   14003849b:	data16 js 0x140038515
   14003849e:	imul   ebp,DWORD PTR [rsi+0x32],0x6c6e692e
   1400384a5:	add    BYTE PTR [rax],al
   1400384a7:	add    BYTE PTR [rdx],ah
   1400384a9:	add    eax,0x11993
   1400384ae:	add    BYTE PTR [rax],al
   1400384b0:	and    BYTE PTR [rsp+rax*1],bl
	...
   1400384bb:	add    BYTE PTR [rbx],al
   1400384bd:	add    BYTE PTR [rax],al
   1400384bf:	add    BYTE PTR [rax],ch
   1400384c1:	sbb    al,0x4
   1400384c3:	add    BYTE PTR [rax],ah
   1400384c5:	add    BYTE PTR [rax],al
   1400384c7:	add    BYTE PTR [rax],al
   1400384c9:	add    BYTE PTR [rax],al
   1400384cb:	add    BYTE PTR [rcx],al
   1400384cd:	add    BYTE PTR [rax],al
   1400384cf:	add    BYTE PTR [rdx],ah
   1400384d1:	add    eax,0x11993
   1400384d6:	add    BYTE PTR [rax],al
   1400384d8:	and    BYTE PTR [rsp+rax*1],bl
	...
   1400384e3:	add    BYTE PTR [rbx],al
   1400384e5:	add    BYTE PTR [rax],al
   1400384e7:	add    BYTE PTR [rsp+rbx*1+0x4],bl
   1400384eb:	add    BYTE PTR [rax],ah
   1400384ed:	add    BYTE PTR [rax],al
   1400384ef:	add    BYTE PTR [rax],al
   1400384f1:	add    BYTE PTR [rax],al
   1400384f3:	add    BYTE PTR [rcx],al
   1400384f5:	add    BYTE PTR [rax],al
   1400384f7:	add    al,ah
   1400384f9:	movabs eax,ds:0x8510000000014000
   140038502:	add    eax,DWORD PTR [rax+0x1]
	...
   14003850d:	add    BYTE PTR [rax],al
   14003850f:	add    BYTE PTR [rax],bh
   140038511:	add    DWORD PTR [rax],eax
	...
   14003851f:	add    BYTE PTR [rsi],cl
   140038521:	add    BYTE PTR [rax],al
   140038523:	add    BYTE PTR [rax],al
   140038525:	add    BYTE PTR [rax],al
   140038527:	add    al,ch
   140038529:	fiadd  WORD PTR [rax]
   14003852b:	rex add DWORD PTR [rax],eax
   14003852e:	add    BYTE PTR [rax],al
   140038530:	xor    eax,DWORD PTR [rcx]
	...
   14003853e:	add    BYTE PTR [rax],al
   140038540:	(bad)  
   140038541:	add    BYTE PTR [rax],al
   140038543:	add    BYTE PTR [rax],al
   140038545:	add    BYTE PTR [rax],al
   140038547:	add    al,ch
   140038549:	fiadd  WORD PTR [rax]
   14003854b:	rex add DWORD PTR [rax],eax
   14003854e:	add    BYTE PTR [rax],al
   140038550:	xor    eax,0x1
	...
   14003855d:	add    BYTE PTR [rax],al
   14003855f:	add    BYTE PTR [rsi],cl
   140038561:	add    BYTE PTR [rax],al
   140038563:	add    BYTE PTR [rax],al
   140038565:	add    BYTE PTR [rax],al
   140038567:	add    al,ch
   140038569:	fiadd  WORD PTR [rax]
   14003856b:	rex add DWORD PTR [rax],eax
   14003856e:	add    BYTE PTR [rax],al
   140038570:	xor    al,0x1
	...
   14003857e:	add    BYTE PTR [rax],al
   140038580:	(bad)  
   140038581:	add    BYTE PTR [rax],al
   140038583:	add    BYTE PTR [rax],al
   140038585:	add    BYTE PTR [rax],al
   140038587:	add    al,ch
   140038589:	fiadd  WORD PTR [rax]
   14003858b:	rex add DWORD PTR [rax],eax
   14003858e:	add    BYTE PTR [rax],al
   140038590:	add    DWORD PTR ss:[rax],eax
	...
   14003859f:	add    BYTE PTR [rsi],cl
   1400385a1:	add    BYTE PTR [rax],al
   1400385a3:	add    BYTE PTR [rax],al
   1400385a5:	add    BYTE PTR [rax],al
   1400385a7:	add    al,ch
   1400385a9:	fiadd  WORD PTR [rax]
   1400385ab:	rex add DWORD PTR [rax],eax
   1400385ae:	add    BYTE PTR [rax],al
   1400385b0:	xor    al,BYTE PTR [rcx]
	...
   1400385be:	add    BYTE PTR [rax],al
   1400385c0:	(bad)  
   1400385c1:	add    BYTE PTR [rax],al
   1400385c3:	add    BYTE PTR [rax],al
   1400385c5:	add    BYTE PTR [rax],al
   1400385c7:	add    al,ch
   1400385c9:	fiadd  WORD PTR [rax]
   1400385cb:	rex add DWORD PTR [rax],eax
   1400385ce:	add    BYTE PTR [rax],al
   1400385d0:	(bad)  
   1400385d1:	add    DWORD PTR [rax],eax
	...
   1400385df:	add    BYTE PTR [rsi],cl
   1400385e1:	add    BYTE PTR [rax],al
   1400385e3:	add    BYTE PTR [rax],al
   1400385e5:	add    BYTE PTR [rax],al
   1400385e7:	add    al,ch
   1400385e9:	fiadd  WORD PTR [rax]
   1400385eb:	rex add DWORD PTR [rax],eax
   1400385ee:	add    BYTE PTR [rax],al
   1400385f0:	(bad)  
	...
   1400385fd:	add    BYTE PTR [rax],al
   1400385ff:	add    BYTE PTR [rbx],ah
   140038601:	add    BYTE PTR [rax],al
   140038603:	add    BYTE PTR [rax],al
   140038605:	add    BYTE PTR [rax],al
   140038607:	add    BYTE PTR [rax-0x20],bl
   14003860a:	add    BYTE PTR [rax+0x1],al
   14003860d:	add    BYTE PTR [rax],al
   14003860f:	add    BYTE PTR [rbx],ch
	...
   14003861d:	add    BYTE PTR [rax],al
   14003861f:	add    BYTE PTR [rsi],ch
   140038621:	add    BYTE PTR [rax],al
   140038623:	add    BYTE PTR [rax],al
   140038625:	add    BYTE PTR [rax],al
   140038627:	add    BYTE PTR [rdi+rbp*8+0x14000],ch
   14003862e:	add    BYTE PTR [rax],al
   140038630:	sub    al,0x0
	...
   14003863e:	add    BYTE PTR [rax],al
   140038640:	add    BYTE PTR cs:[rax],al
   140038643:	add    BYTE PTR [rax],al
   140038645:	add    BYTE PTR [rax],al
   140038647:	add    BYTE PTR [rax],ah
   140038649:	out    0x0,al
   14003864b:	rex add DWORD PTR [rax],eax
   14003864e:	add    BYTE PTR [rax],al
   140038650:	sbb    DWORD PTR [rax],eax
	...
   14003865e:	add    BYTE PTR [rax],al
   140038660:	or     BYTE PTR [rax],al
   140038662:	add    BYTE PTR [rax],al
   140038664:	add    BYTE PTR [rax],al
   140038666:	add    BYTE PTR [rax],al
   140038668:	clc    
   140038669:	loope  0x14003866b
   14003866b:	rex add DWORD PTR [rax],eax
   14003866e:	add    BYTE PTR [rax],al
   140038670:	cmp    DWORD PTR [rax],eax
	...
   14003867e:	add    BYTE PTR [rax],al
   140038680:	(bad)  
   140038681:	add    BYTE PTR [rax],al
   140038683:	add    BYTE PTR [rax],al
   140038685:	add    BYTE PTR [rax],al
   140038687:	add    BYTE PTR [rax+rsi*8],al
   14003868a:	add    BYTE PTR [rax+0x1],al
   14003868d:	add    BYTE PTR [rax],al
   14003868f:	add    BYTE PTR [rcx],ah
   140038691:	add    DWORD PTR [rax],eax
	...
   14003869f:	add    BYTE PTR [rdx],bl
   1400386a1:	add    BYTE PTR [rax],al
   1400386a3:	add    BYTE PTR [rax],al
   1400386a5:	add    BYTE PTR [rax],al
   1400386a7:	add    BYTE PTR [rax+0x14000e1],dh
   1400386ad:	add    BYTE PTR [rax],al
   1400386af:	add    BYTE PTR [rcx+rax*1],dl
	...
   1400386be:	add    BYTE PTR [rax],al
   1400386c0:	sub    al,BYTE PTR [rax]
   1400386c2:	add    BYTE PTR [rax],al
   1400386c4:	add    BYTE PTR [rax],al
   1400386c6:	add    BYTE PTR [rax],al
   1400386c8:	test   cl,ah
   1400386ca:	add    BYTE PTR [rax+0x1],al
   1400386cd:	add    BYTE PTR [rax],al
   1400386cf:	add    BYTE PTR [rip+0x1],dl        # 0x1400386d6
	...
   1400386dd:	add    BYTE PTR [rax],al
   1400386df:	add    BYTE PTR [rdx],ch
   1400386e1:	add    BYTE PTR [rax],al
   1400386e3:	add    BYTE PTR [rax],al
   1400386e5:	add    BYTE PTR [rax],al
   1400386e7:	add    BYTE PTR [rcx+riz*8+0x14000],al
   1400386ee:	add    BYTE PTR [rax],al
   1400386f0:	sub    eax,0x0
	...
   1400386fd:	add    BYTE PTR [rax],al
   1400386ff:	add    BYTE PTR [rsi],ch
   140038701:	add    BYTE PTR [rax],al
   140038703:	add    BYTE PTR [rax],al
   140038705:	add    BYTE PTR [rax],al
   140038707:	add    BYTE PTR [rax+rsi*8],dh
   14003870a:	add    BYTE PTR [rax+0x1],al
   14003870d:	add    BYTE PTR [rax],al
   14003870f:	add    BYTE PTR [rdi],ch
	...
   14003871d:	add    BYTE PTR [rax],al
   14003871f:	add    BYTE PTR [rdx],cl
   140038721:	add    BYTE PTR [rax],al
   140038723:	add    BYTE PTR [rax],al
   140038725:	add    BYTE PTR [rax],al
   140038727:	add    ah,ch
   140038729:	in     eax,0x0
   14003872b:	rex add DWORD PTR [rax],eax
   14003872e:	add    BYTE PTR [rax],al
   140038730:	add    BYTE PTR cs:[rax],al
	...
   14003873f:	add    BYTE PTR [rdx],cl
   140038741:	add    BYTE PTR [rax],al
   140038743:	add    BYTE PTR [rax],al
   140038745:	add    BYTE PTR [rax],al
   140038747:	add    ah,ch
   140038749:	in     eax,0x0
   14003874b:	rex add DWORD PTR [rax],eax
   14003874e:	add    BYTE PTR [rax],al
   140038750:	(bad)  
	...
   14003875d:	add    BYTE PTR [rax],al
   14003875f:	add    BYTE PTR [rbx],dl
   140038761:	add    BYTE PTR [rax],al
   140038763:	add    BYTE PTR [rax],al
   140038765:	add    BYTE PTR [rax],al
   140038767:	add    ah,dh
   140038769:	fadd   QWORD PTR [rax]
   14003876b:	rex add DWORD PTR [rax],eax
   14003876e:	add    BYTE PTR [rax],al
   140038770:	adc    BYTE PTR [rdx],al
	...
   14003877e:	add    BYTE PTR [rax],al
   140038780:	(bad)  
   140038781:	add    BYTE PTR [rax],al
   140038783:	add    BYTE PTR [rax],al
   140038785:	add    BYTE PTR [rax],al
   140038787:	add    BYTE PTR [rax+rbp*8+0x14000],bl
   14003878e:	add    BYTE PTR [rax],al
   140038790:	adc    eax,0x0
	...
   14003879d:	add    BYTE PTR [rax],al
   14003879f:	add    BYTE PTR [rbx],dl
   1400387a1:	add    BYTE PTR [rax],al
   1400387a3:	add    BYTE PTR [rax],al
   1400387a5:	add    BYTE PTR [rax],al
   1400387a7:	add    BYTE PTR [rax+0x14000f3],cl
   1400387ad:	add    BYTE PTR [rax],al
   1400387af:	add    BYTE PTR [rbx],bl
	...
   1400387bd:	add    BYTE PTR [rax],al
   1400387bf:	add    BYTE PTR [rax+rax*1],ch
   1400387c2:	add    BYTE PTR [rax],al
   1400387c4:	add    BYTE PTR [rax],al
   1400387c6:	add    BYTE PTR [rax],al
   1400387c8:	in     al,dx
   1400387c9:	repz add BYTE PTR [rax+0x1],al
   1400387cd:	add    BYTE PTR [rax],al
   1400387cf:	add    BYTE PTR [rbx+0x0],dl
	...
   1400387de:	add    BYTE PTR [rax],al
   1400387e0:	(bad)  
   1400387e1:	add    BYTE PTR [rax],al
   1400387e3:	add    BYTE PTR [rax],al
   1400387e5:	add    BYTE PTR [rax],al
   1400387e7:	add    BYTE PTR [rax+0x14000e0],dl
   1400387ed:	add    BYTE PTR [rax],al
   1400387ef:	add    BYTE PTR [rdx],bl
	...
   1400387fd:	add    BYTE PTR [rax],al
   1400387ff:	add    BYTE PTR [rip+0x0],ch        # 0x140038805
   140038805:	add    BYTE PTR [rax],al
   140038807:	add    BYTE PTR [rax+0x140010e],bh
   14003880d:	add    BYTE PTR [rax],al
   14003880f:	add    BYTE PTR [rdx],al
	...
   14003881d:	add    BYTE PTR [rax],al
   14003881f:	add    BYTE PTR [rbx],dl
   140038821:	add    BYTE PTR [rax],al
   140038823:	add    BYTE PTR [rax],al
   140038825:	add    BYTE PTR [rax],al
   140038827:	add    BYTE PTR [rsp+rbx*8+0x14000],bl
   14003882e:	add    BYTE PTR [rax],al
   140038830:	outs   dx,BYTE PTR ds:[rsi]
   140038831:	add    eax,DWORD PTR [rax]
	...
   14003883f:	add    BYTE PTR [rsi],cl
   140038841:	add    BYTE PTR [rax],al
   140038843:	add    BYTE PTR [rax],al
   140038845:	add    BYTE PTR [rax],al
   140038847:	add    BYTE PTR [rsi+rax*8+0x0],dl
   14003884b:	rex add DWORD PTR [rax],eax
   14003884e:	add    BYTE PTR [rax],al
   140038850:	jle    0x140038852
	...
   14003885e:	add    BYTE PTR [rax],al
   140038860:	(bad)  
   140038861:	add    BYTE PTR [rax],al
   140038863:	add    BYTE PTR [rax],al
   140038865:	add    BYTE PTR [rax],al
   140038867:	add    BYTE PTR [rax-0xc],bl
   14003886a:	add    BYTE PTR [rax+0x1],al
   14003886d:	add    BYTE PTR [rax],al
   14003886f:	add    BYTE PTR [rax],al
   140038871:	rol    BYTE PTR [rax],0x0
	...
   140038880:	mov    al,ah
   140038882:	add    al,0x40
   140038884:	add    DWORD PTR [rax],eax
   140038886:	add    BYTE PTR [rax],al
   140038888:	shr    al,1
   14003888a:	add    BYTE PTR [rax+0x1],al
   14003888d:	add    BYTE PTR [rax],al
   14003888f:	add    BYTE PTR [rip+0x0],bh        # 0x140038895
	...
   14003889d:	add    BYTE PTR [rax],al
   14003889f:	add    BYTE PTR [rsi],cl
   1400388a1:	add    BYTE PTR [rax],al
   1400388a3:	add    BYTE PTR [rax],al
   1400388a5:	add    BYTE PTR [rax],al
   1400388a7:	add    BYTE PTR [rcx+riz*8+0x0],al
   1400388ab:	rex add DWORD PTR [rax],eax
	...
   1400388ce:	add    BYTE PTR [rax],al
   1400388d0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004a269
   1400388d6:	add    BYTE PTR [rax],al
   1400388d8:	nop
   1400388d9:	sbb    al,0x4
	...
   1400388e3:	add    BYTE PTR [rbx],al
   1400388e5:	add    BYTE PTR [rax],al
   1400388e7:	add    BYTE PTR [rax+0x2800041c],bl
   1400388ed:	add    BYTE PTR [rax],al
   1400388ef:	add    BYTE PTR [rax],al
   1400388f1:	add    BYTE PTR [rax],al
   1400388f3:	add    BYTE PTR [rcx],al
   1400388f5:	add    BYTE PTR [rax],al
   1400388f7:	add    BYTE PTR [rdx],ah
   1400388f9:	add    eax,0x21993
   1400388fe:	add    BYTE PTR [rax],al
   140038900:	cmp    al,0x7
   140038902:	add    al,0x0
   140038904:	add    DWORD PTR [rax],eax
   140038906:	add    BYTE PTR [rax],al
   140038908:	fcomp  QWORD PTR [rsp+rax*1]
   14003890b:	add    BYTE PTR [rsi],al
   14003890d:	add    BYTE PTR [rax],al
   14003890f:	add    BYTE PTR [rbx*1+0x200004],al
   140038916:	add    BYTE PTR [rax],al
   140038918:	add    BYTE PTR [rax],al
   14003891a:	add    BYTE PTR [rax],al
   14003891c:	add    DWORD PTR [rax],eax
   14003891e:	add    BYTE PTR [rax],al
   140038920:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140038923:	ins    DWORD PTR es:[rdi],dx
   140038924:	movsxd esi,DWORD PTR [rdx+rsi*2+0x6c]
   140038928:	pop    rdi
   140038929:	rex.R jb 0x14003898d
   14003892c:	imul   r14,QWORD PTR [ebx+0x74],0x67734d
	...
   14003893d:	add    BYTE PTR [rax],al
   14003893f:	add    BYTE PTR [rip+0x35250032],ah        # 0x175288977
   140038945:	add    BYTE PTR [rax],al
   140038947:	add    BYTE PTR [rip+0x4c435c32],ah        # 0x18c46e57f
   14003894d:	push   rbx
   14003894e:	rex.WB
   14003894f:	add    BYTE PTR [rip+0x31],r12b        # 0x140038987
   140038956:	add    BYTE PTR [rax],al
   140038958:	and    eax,0x6e495c32
   14003895d:	jae    0x1400389c4
   14003895f:	jb     0x1400389d5
   140038961:	(bad)  
   140038962:	(bad)  
   140038963:	ins    BYTE PTR es:[rdi],dx
   140038964:	add    BYTE PTR gs:[rax],al
   140038967:	add    BYTE PTR [rip+0x72705c32],ah        # 0x1b273e59f
   14003896d:	outs   dx,DWORD PTR ds:[rsi]
   14003896e:	je     0x1400389df
   140038970:	movsxd ebp,DWORD PTR [rdi+0x6c]
   140038973:	pop    rsp
   140038974:	push   rbx
   140038975:	je     0x1400389db
   140038977:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x69746964
   140038980:	outs   dx,BYTE PTR ds:[rsi]
   140038981:	addr32 pop rsp
   140038983:	jbe    0x1400389ea
   140038985:	jb     0x1400389e9
   140038987:	pop    rsp
   140038988:	xor    BYTE PTR [rax],al
   14003898a:	es rex.RB
   14003898c:	imul   esi,DWORD PTR fs:[rax+rax*1+0x25],0x72705c32
   140038995:	outs   dx,DWORD PTR ds:[rsi]
   140038996:	je     0x140038a07
   140038998:	movsxd ebp,DWORD PTR [rdi+0x6c]
   14003899b:	pop    rsp
   14003899c:	push   rbx
   14003899d:	je     0x140038a03
   14003899f:	imul   r13d,DWORD PTR [rbp+r12*2+0x45],0x69746964
   1400389a8:	outs   dx,BYTE PTR ds:[rsi]
   1400389a9:	addr32 pop rsp
   1400389ab:	jae    0x140038a12
   1400389ad:	jb     0x140038a25
   1400389af:	gs jb  0x1400389b2
   1400389b2:	and    eax,0x33
   1400389b7:	add    BYTE PTR [rbx+0x4c],al
   1400389ba:	push   rbx
   1400389bb:	rex.WB
   1400389bc:	rex.R pop rsp
   1400389be:	and    eax,0x35250031
   1400389c3:	add    BYTE PTR [rax],al
   1400389c5:	add    BYTE PTR [rax],al
   1400389c7:	add    BYTE PTR [rbx+0x4c],al
   1400389ca:	push   rbx
   1400389cb:	rex.WB
   1400389cc:	rex.R pop rsp
   1400389ce:	and    eax,0x72505c31
   1400389d3:	outs   dx,DWORD PTR ds:[rsi]
   1400389d4:	addr32 rex.WB
   1400389d6:	add    BYTE PTR [rip+0x32],r12b        # 0x140038a0f
   1400389dd:	add    BYTE PTR [rax],al
   1400389df:	add    BYTE PTR [rbx+0x4c],al
   1400389e2:	push   rbx
   1400389e3:	rex.WB
   1400389e4:	rex.R pop rsp
   1400389e6:	and    eax,0x6e495c31
   1400389eb:	jo     0x140038a5f
   1400389ed:	outs   dx,DWORD PTR ds:[rsi]
   1400389ee:	movsxd ecx,DWORD PTR [rax+0x61]
   1400389f1:	outs   dx,BYTE PTR ds:[rsi]
   1400389f2:	fs ins BYTE PTR es:[rdi],dx
   1400389f4:	gs jb  0x140038a2a
   1400389f7:	xor    al,BYTE PTR [rax]
   1400389f9:	outs   dx,DWORD PTR ds:[rsi]
   1400389fa:	ins    BYTE PTR es:[rdi],dx
   1400389fb:	xor    esi,DWORD PTR gs:[rdx]
   1400389fe:	cs fs ins BYTE PTR es:[rdi],dx
   140038a01:	ins    BYTE PTR es:[rdi],dx
   140038a02:	add    BYTE PTR [rax],al
   140038a04:	add    BYTE PTR [rax],al
   140038a06:	add    BYTE PTR [rax],al
   140038a08:	rex.XB
   140038a09:	rex.WR push rbx
   140038a0b:	rex.WB
   140038a0c:	rex.R pop rsp
   140038a0e:	and    eax,0x6f4c5c31
   140038a13:	movsxd esp,DWORD PTR [rcx+0x6c]
   140038a16:	push   rbx
   140038a17:	gs jb  0x140038a90
   140038a1a:	gs jb  0x140038a50
   140038a1d:	xor    al,BYTE PTR [rax]
   140038a1f:	and    eax,0x33
   140038a24:	add    BYTE PTR [rax],al
   140038a26:	add    BYTE PTR [rax],al
   140038a28:	rex.XB
   140038a29:	rex.WR push rbx
   140038a2b:	rex.WB
   140038a2c:	rex.R pop rsp
   140038a2e:	and    eax,0x65565c31
   140038a33:	jb     0x140038a97
   140038a35:	pop    rsp
   140038a36:	xor    BYTE PTR [rax],al
   140038a38:	es rex.RB
   140038a3a:	imul   esi,DWORD PTR fs:[rsp+rbp*1+0x30],0x322c
   140038a43:	add    BYTE PTR [rax],al
   140038a45:	add    BYTE PTR [rax],al
   140038a47:	add    BYTE PTR [rbx+0x4c],al
   140038a4a:	push   rbx
   140038a4b:	rex.WB
   140038a4c:	rex.R pop rsp
   140038a4e:	and    eax,0x65565c31
   140038a53:	jb     0x140038ab7
   140038a55:	pop    rsp
   140038a56:	xor    DWORD PTR [rax],eax
   140038a58:	es rex.WRXB jo 0x140038ac1
   140038a5c:	outs   dx,BYTE PTR ds:[rsi]
   140038a5d:	sub    al,0x30
   140038a5f:	sub    al,0x32
   140038a61:	add    BYTE PTR [rax],al
   140038a63:	add    BYTE PTR [rax],al
   140038a65:	add    BYTE PTR [rax],al
   140038a67:	add    BYTE PTR [rbx+0x4c],al
   140038a6a:	push   rbx
   140038a6b:	rex.WB
   140038a6c:	rex.R pop rsp
   140038a6e:	and    eax,0x6e495c31
   140038a73:	jae    0x140038ada
   140038a75:	jb     0x140038aeb
   140038a77:	(bad)  
   140038a78:	(bad)  
   140038a79:	ins    BYTE PTR es:[rdi],dx
   140038a7a:	add    BYTE PTR gs:[rax],al
   140038a7d:	add    BYTE PTR [rax],al
   140038a7f:	add    BYTE PTR [rbx+0x4c],al
   140038a82:	push   rbx
   140038a83:	rex.WB
   140038a84:	rex.R pop rsp
   140038a86:	and    eax,0x75415c31
   140038a8b:	js     0x140038ae2
   140038a8d:	jae    0x140038af4
   140038a8f:	jb     0x140038ae5
   140038a91:	jns    0x140038b03
   140038a93:	gs pop rsp
   140038a95:	xor    al,BYTE PTR [rax]
   140038a97:	and    eax,0x34
   140038a9c:	add    BYTE PTR [rax],al
   140038a9e:	add    BYTE PTR [rax],al
   140038aa0:	rex.XB
   140038aa1:	rex.WR push rbx
   140038aa3:	rex.WB
   140038aa4:	rex.R pop rsp
   140038aa6:	and    eax,0x75415c31
   140038aab:	js     0x140038b02
   140038aad:	jae    0x140038b14
   140038aaf:	jb     0x140038b05
   140038ab1:	jns    0x140038b23
   140038ab3:	gs pop rsp
   140038ab5:	xor    eax,DWORD PTR [rax]
   140038ab7:	and    eax,0x36
   140038abc:	add    BYTE PTR [rax],al
   140038abe:	add    BYTE PTR [rax],al
   140038ac0:	rex.XB
   140038ac1:	rex.WR push rbx
   140038ac3:	rex.WB
   140038ac4:	rex.R pop rsp
   140038ac6:	and    eax,0x65445c31
   140038acb:	data16 (bad) 
   140038acd:	jne    0x140038b3b
   140038acf:	je     0x140038b1a
   140038ad1:	movsxd ebp,DWORD PTR [rdi+0x6e]
   140038ad4:	add    BYTE PTR [rip+0x37252c33],ah        # 0x17728b70d
   140038ada:	add    BYTE PTR [rax],al
   140038adc:	add    BYTE PTR [rax],al
   140038ade:	add    BYTE PTR [rax],al
   140038ae0:	rex.XB
   140038ae1:	rex.WR push rbx
   140038ae3:	rex.WB
   140038ae4:	rex.R pop rsp
   140038ae6:	and    eax,0x694d5c31
   140038aeb:	jae    0x140038b50
   140038aed:	push   rbx
   140038aee:	je     0x140038b51
   140038af0:	je     0x140038b67
   140038af2:	jae    0x140038af4
   140038af4:	xor    esi,DWORD PTR [rdx]
   140038af6:	add    BYTE PTR [rax],al
   140038af8:	rex.XB
   140038af9:	rex.WR push rbx
   140038afb:	rex.WB
   140038afc:	rex.R pop rsp
   140038afe:	and    eax,0x6e495c31
   140038b03:	push   rax
   140038b04:	jb     0x140038b75
   140038b06:	movsxd edx,DWORD PTR [rbx+0x65]
   140038b09:	jb     0x140038b81
   140038b0b:	gs jb  0x140038b41
   140038b0e:	xor    al,BYTE PTR [rax]
   140038b10:	and    eax,0x33
   140038b15:	add    BYTE PTR [rax],al
   140038b17:	add    BYTE PTR [rbx+0x4c],al
   140038b1a:	push   rbx
   140038b1b:	rex.WB
   140038b1c:	rex.R pop rsp
   140038b1e:	and    eax,0x6f445c31
   140038b23:	movsxd ecx,DWORD PTR [rdi+0x62]
   140038b26:	push   0x65
   140038b28:	movsxd esi,DWORD PTR [rax+rax*1+0x30]
   140038b2c:	add    BYTE PTR [rax],al
   140038b2e:	add    BYTE PTR [rax],al
   140038b30:	and    eax,0x6f445c32
   140038b35:	movsxd ecx,DWORD PTR [rdi+0x62]
   140038b38:	push   0x65
   140038b3a:	movsxd esi,DWORD PTR [rax+rax*1+0x30]
   140038b3e:	add    BYTE PTR [rax],al
   140038b40:	rex.XB
   140038b41:	rex.WR push rbx
   140038b43:	rex.WB
   140038b44:	rex.R pop rsp
   140038b46:	and    eax,0x72505c31
   140038b4b:	imul   ebp,DWORD PTR [rsi+0x74],0x656c6261
   140038b52:	add    BYTE PTR [rax],al
   140038b54:	add    BYTE PTR [rax],al
   140038b56:	add    BYTE PTR [rax],al
   140038b58:	rex.XB
   140038b59:	rex.WR push rbx
   140038b5b:	rex.WB
   140038b5c:	rex.R pop rsp
   140038b5e:	and    eax,0x65445c31
   140038b63:	data16 (bad) 
   140038b65:	jne    0x140038bd3
   140038b67:	je     0x140038bae
   140038b69:	js     0x140038bdf
   140038b6b:	outs   dx,BYTE PTR gs:[rsi]
   140038b6d:	jae    0x140038bd8
   140038b6f:	outs   dx,DWORD PTR ds:[rsi]
   140038b70:	outs   dx,BYTE PTR ds:[rsi]
   140038b71:	add    BYTE PTR [rip+0x25202c39],ah        # 0x16523b7b0
   140038b77:	cmp    BYTE PTR [rax],al
   140038b79:	add    BYTE PTR [rax],al
   140038b7b:	add    BYTE PTR [rax],al
   140038b7d:	add    BYTE PTR [rax],al
   140038b7f:	add    BYTE PTR [rax-0x77],al
   140038b82:	add    eax,DWORD PTR [rax+0x1]
   140038b85:	add    BYTE PTR [rax],al
   140038b87:	add    BYTE PTR [rax-0x77],bl
   140038b8a:	add    eax,DWORD PTR [rax+0x1]
   140038b8d:	add    BYTE PTR [rax],al
   140038b8f:	add    BYTE PTR [rax-0x77],ch
   140038b92:	add    eax,DWORD PTR [rax+0x1]
   140038b95:	add    BYTE PTR [rax],al
   140038b97:	add    BYTE PTR [rax+0x1400389],bh
   140038b9d:	add    BYTE PTR [rax],al
   140038b9f:	add    BYTE PTR [rax],ch
   140038ba1:	mov    al,BYTE PTR [rbx]
   140038ba3:	rex add DWORD PTR [rax],eax
   140038ba6:	add    BYTE PTR [rax],al
   140038ba8:	rex.W mov al,BYTE PTR [rbx]
   140038bab:	rex add DWORD PTR [rax],eax
   140038bae:	add    BYTE PTR [rax],al
   140038bb0:	push   0x140038a
   140038bb5:	add    BYTE PTR [rax],al
   140038bb7:	add    BYTE PTR [rax+0x140038a],al
   140038bbd:	add    BYTE PTR [rax],al
   140038bbf:	add    BYTE PTR [rax+0x140038a],ah
   140038bc5:	add    BYTE PTR [rax],al
   140038bc7:	add    al,ah
   140038bc9:	mov    al,BYTE PTR [rbx]
   140038bcb:	rex add DWORD PTR [rax],eax
	...
   140038bde:	add    BYTE PTR [rax],al
   140038be0:	rex mov DWORD PTR [rbx],eax
   140038be3:	rex add DWORD PTR [rax],eax
   140038be6:	add    BYTE PTR [rax],al
   140038be8:	pop    rax
   140038be9:	mov    DWORD PTR [rbx],eax
   140038beb:	rex add DWORD PTR [rax],eax
   140038bee:	add    BYTE PTR [rax],al
   140038bf0:	push   0x1400389
   140038bf5:	add    BYTE PTR [rax],al
   140038bf7:	add    BYTE PTR [rax+0x1400389],bh
   140038bfd:	add    BYTE PTR [rax],al
   140038bff:	add    BYTE PTR [rax],ch
   140038c01:	mov    al,BYTE PTR [rbx]
   140038c03:	rex add DWORD PTR [rax],eax
   140038c06:	add    BYTE PTR [rax],al
   140038c08:	push   0x140038a
   140038c0d:	add    BYTE PTR [rax],al
   140038c0f:	add    BYTE PTR [rax+0x140038a],al
   140038c15:	add    BYTE PTR [rax],al
   140038c17:	add    BYTE PTR [rax+0x140038a],ah
   140038c1d:	add    BYTE PTR [rax],al
   140038c1f:	add    al,ah
   140038c21:	mov    al,BYTE PTR [rbx]
   140038c23:	rex add DWORD PTR [rax],eax
	...
   140038c2e:	add    BYTE PTR [rax],al
   140038c30:	rex mov DWORD PTR [rbx],eax
   140038c33:	rex add DWORD PTR [rax],eax
   140038c36:	add    BYTE PTR [rax],al
   140038c38:	pop    rax
   140038c39:	mov    DWORD PTR [rbx],eax
   140038c3b:	rex add DWORD PTR [rax],eax
   140038c3e:	add    BYTE PTR [rax],al
   140038c40:	push   0x1400389
   140038c45:	add    BYTE PTR [rax],al
   140038c47:	add    BYTE PTR [rax+0x1400389],bh
   140038c4d:	add    BYTE PTR [rax],al
   140038c4f:	add    BYTE PTR [rax],ch
   140038c51:	mov    al,BYTE PTR [rbx]
   140038c53:	rex add DWORD PTR [rax],eax
   140038c56:	add    BYTE PTR [rax],al
   140038c58:	rex.W mov al,BYTE PTR [rbx]
   140038c5b:	rex add DWORD PTR [rax],eax
   140038c5e:	add    BYTE PTR [rax],al
   140038c60:	push   0x140038a
   140038c65:	add    BYTE PTR [rax],al
   140038c67:	add    BYTE PTR [rax+0x140038a],al
   140038c6d:	add    BYTE PTR [rax],al
   140038c6f:	add    BYTE PTR [rax+0x140038a],ah
   140038c75:	add    BYTE PTR [rax],al
   140038c77:	add    al,ah
   140038c79:	mov    al,BYTE PTR [rbx]
   140038c7b:	rex add DWORD PTR [rax],eax
   140038c7e:	add    BYTE PTR [rax],al
   140038c80:	sbb    BYTE PTR [rbx+0x14003],cl
   140038c86:	add    BYTE PTR [rax],al
   140038c88:	xor    BYTE PTR [rbx+0x14003],cl
   140038c8e:	add    BYTE PTR [rax],al
   140038c90:	rex mov eax,DWORD PTR [rbx]
   140038c93:	rex add DWORD PTR [rax],eax
	...
   140038c9e:	add    BYTE PTR [rax],al
   140038ca0:	mov    QWORD PTR [rbx],rax
   140038ca3:	rex add DWORD PTR [rax],eax
   140038ca6:	add    BYTE PTR [rax],al
   140038ca8:	nop
   140038ca9:	mov    DWORD PTR [rbx],eax
   140038cab:	rex add DWORD PTR [rax],eax
   140038cae:	add    BYTE PTR [rax],al
   140038cb0:	enter  0x389,0x40
   140038cb4:	add    DWORD PTR [rax],eax
   140038cb6:	add    BYTE PTR [rax],al
   140038cb8:	loopne 0x140038c43
   140038cba:	add    eax,DWORD PTR [rax+0x1]
   140038cbd:	add    BYTE PTR [rax],al
   140038cbf:	add    BYTE PTR [rax],cl
   140038cc1:	mov    al,BYTE PTR [rbx]
   140038cc3:	rex add DWORD PTR [rax],eax
   140038cc6:	add    BYTE PTR [rax],al
   140038cc8:	ror    BYTE PTR [rdx+0x14003],0x0
	...
   140038cd7:	add    BYTE PTR [rax-0x77],cl
   140038cda:	add    eax,DWORD PTR [rax+0x1]
   140038cdd:	add    BYTE PTR [rax],al
   140038cdf:	add    BYTE PTR [rax+0x1400389],dl
   140038ce5:	add    BYTE PTR [rax],al
   140038ce7:	add    al,cl
   140038ce9:	mov    DWORD PTR [rbx],eax
   140038ceb:	rex add DWORD PTR [rax],eax
   140038cee:	add    BYTE PTR [rax],al
   140038cf0:	clc    
   140038cf1:	mov    al,BYTE PTR [rbx]
   140038cf3:	rex add DWORD PTR [rax],eax
   140038cf6:	add    BYTE PTR [rax],al
   140038cf8:	ror    BYTE PTR [rdx+0x14003],0x0
	...
   140038d07:	add    BYTE PTR [rax-0x77],al
   140038d0a:	add    eax,DWORD PTR [rax+0x1]
   140038d0d:	add    BYTE PTR [rax],al
   140038d0f:	add    BYTE PTR [rax+0x1400389],bh
	...
   140038d1d:	add    BYTE PTR [rax],al
   140038d1f:	add    BYTE PTR [rax-0x77],cl
   140038d22:	add    eax,DWORD PTR [rax+0x1]
   140038d25:	add    BYTE PTR [rax],al
   140038d27:	add    al,cl
   140038d29:	mov    DWORD PTR [rbx],eax
   140038d2b:	rex add DWORD PTR [rax],eax
   140038d2e:	add    BYTE PTR [rax],al
   140038d30:	loopne 0x140038cbb
   140038d32:	add    eax,DWORD PTR [rax+0x1]
   140038d35:	add    BYTE PTR [rax],al
   140038d37:	add    BYTE PTR [rax],cl
   140038d39:	mov    al,BYTE PTR [rbx]
   140038d3b:	rex add DWORD PTR [rax],eax
   140038d3e:	add    BYTE PTR [rax],al
   140038d40:	ror    BYTE PTR [rdx+0x14003],0x0
	...
   140038d4f:	add    BYTE PTR [rax-0x77],al
   140038d52:	add    eax,DWORD PTR [rax+0x1]
   140038d55:	add    BYTE PTR [rax],al
   140038d57:	add    BYTE PTR [rax+0x1400389],bh
	...
   140038d65:	add    BYTE PTR [rax],al
   140038d67:	add    BYTE PTR [rax-0x77],cl
   140038d6a:	add    eax,DWORD PTR [rax+0x1]
   140038d6d:	add    BYTE PTR [rax],al
   140038d6f:	add    al,cl
   140038d71:	mov    DWORD PTR [rbx],eax
   140038d73:	rex add DWORD PTR [rax],eax
   140038d76:	add    BYTE PTR [rax],al
   140038d78:	loopne 0x140038d03
   140038d7a:	add    eax,DWORD PTR [rax+0x1]
   140038d7d:	add    BYTE PTR [rax],al
   140038d7f:	add    BYTE PTR [rax],cl
   140038d81:	mov    al,BYTE PTR [rbx]
   140038d83:	rex add DWORD PTR [rax],eax
	...
   140038d8e:	add    BYTE PTR [rax],al
   140038d90:	mov    QWORD PTR [rbx],rax
   140038d93:	rex add DWORD PTR [rax],eax
   140038d96:	add    BYTE PTR [rax],al
   140038d98:	enter  0x389,0x40
   140038d9c:	add    DWORD PTR [rax],eax
   140038d9e:	add    BYTE PTR [rax],al
   140038da0:	clc    
   140038da1:	mov    al,BYTE PTR [rbx]
   140038da3:	rex add DWORD PTR [rax],eax
	...
   140038dae:	add    BYTE PTR [rax],al
   140038db0:	mov    QWORD PTR [rbx],rax
   140038db3:	rex add DWORD PTR [rax],eax
   140038db6:	add    BYTE PTR [rax],al
   140038db8:	nop
   140038db9:	mov    DWORD PTR [rbx],eax
   140038dbb:	rex add DWORD PTR [rax],eax
   140038dbe:	add    BYTE PTR [rax],al
   140038dc0:	enter  0x389,0x40
   140038dc4:	add    DWORD PTR [rax],eax
   140038dc6:	add    BYTE PTR [rax],al
   140038dc8:	loopne 0x140038d53
   140038dca:	add    eax,DWORD PTR [rax+0x1]
   140038dcd:	add    BYTE PTR [rax],al
   140038dcf:	add    BYTE PTR [rax],cl
   140038dd1:	mov    al,BYTE PTR [rbx]
   140038dd3:	rex add DWORD PTR [rax],eax
   140038dd6:	add    BYTE PTR [rax],al
   140038dd8:	ror    BYTE PTR [rdx+0x14003],0x0
   140038ddf:	add    BYTE PTR [rax-0x75],bl
   140038de2:	add    eax,DWORD PTR [rax+0x1]
	...
   140038ded:	add    BYTE PTR [rax],al
   140038def:	add    BYTE PTR [rax+0x140038b],al
   140038df5:	add    BYTE PTR [rax],al
   140038df7:	add    BYTE PTR [rax+0x140038c],ah
   140038dfd:	add    BYTE PTR [rax],al
   140038dff:	add    al,ah
   140038e01:	mov    eax,DWORD PTR [rbx]
   140038e03:	rex add DWORD PTR [rax],eax
   140038e06:	add    BYTE PTR [rax],al
   140038e08:	movabs al,ds:0x80000000140038c
   140038e11:	lea    eax,[rbx]
   140038e13:	rex add DWORD PTR [rax],eax
   140038e16:	add    BYTE PTR [rax],al
   140038e18:	and    BYTE PTR [rbp+0x14003],cl
   140038e1e:	add    BYTE PTR [rax],al
   140038e20:	push   rax
   140038e21:	lea    eax,[rbx]
   140038e23:	rex add DWORD PTR [rax],eax
   140038e26:	add    BYTE PTR [rax],al
   140038e28:	push   0x140038d
   140038e2d:	add    BYTE PTR [rax],al
   140038e2f:	add    BYTE PTR [rax],dh
   140038e31:	mov    WORD PTR [rbx],es
   140038e33:	rex add DWORD PTR [rax],eax
   140038e36:	add    BYTE PTR [rax],al
   140038e38:	mov    al,0x8d
   140038e3a:	add    eax,DWORD PTR [rax+0x1]
   140038e3d:	add    BYTE PTR [rax],al
   140038e3f:	add    BYTE PTR [rax+0x140038b],al
   140038e45:	add    BYTE PTR [rax],al
   140038e47:	add    al,bl
   140038e49:	mov    WORD PTR [rbx],es
   140038e4b:	rex add DWORD PTR [rax],eax
   140038e4e:	add    BYTE PTR [rax],al
   140038e50:	loopne 0x140038ddd
   140038e52:	add    eax,DWORD PTR [rax+0x1]
   140038e55:	add    BYTE PTR [rax],al
   140038e57:	add    al,bl
   140038e59:	mov    WORD PTR [rbx],es
   140038e5b:	rex add DWORD PTR [rax],eax
   140038e5e:	add    BYTE PTR [rax],al
   140038e60:	or     BYTE PTR [rbp+0x14003],cl
   140038e66:	add    BYTE PTR [rax],al
   140038e68:	and    BYTE PTR [rbp+0x14003],cl
   140038e6e:	add    BYTE PTR [rax],al
   140038e70:	push   rax
   140038e71:	lea    eax,[rbx]
   140038e73:	rex add DWORD PTR [rax],eax
   140038e76:	add    BYTE PTR [rax],al
   140038e78:	nop
   140038e79:	lea    eax,[rbx]
   140038e7b:	rex add DWORD PTR [rax],eax
   140038e7e:	add    BYTE PTR [rax],al
   140038e80:	xor    BYTE PTR [rbx+rax*1+0x140],cl
   140038e87:	add    BYTE PTR [rax+0x140038d],dh
   140038e8d:	add    BYTE PTR [rax],al
   140038e8f:	add    BYTE PTR [rip+0x64],ah        # 0x140038ef9
   140038e95:	add    BYTE PTR [rax],al
   140038e97:	add    bh,bh
   140038e99:	(bad)  
   140038e9a:	(bad)  
   140038e9b:	(bad)  
   140038e9c:	(bad)  
   140038e9d:	(bad)  
   140038e9e:	(bad)  
   140038e9f:	inc    DWORD PTR [rbx+0x42]
   140038ea2:	jns    0x140038f18
   140038ea4:	gs rex.B jb 0x140038f1a
   140038ea8:	(bad)  
   140038ea9:	jns    0x140038eab
   140038eab:	add    BYTE PTR [rax],al
   140038ead:	add    BYTE PTR [rax],al
   140038eaf:	add    BYTE PTR [rax+0x14003f3],al
   140038eb5:	add    BYTE PTR [rax],al
   140038eb7:	add    BYTE PTR [rax+0x140011b],dl
   140038ebd:	add    BYTE PTR [rax],al
   140038ebf:	add    BYTE PTR [rsi+rbx*1],dh
   140038ec2:	add    DWORD PTR [rax+0x1],eax
   140038ec5:	add    BYTE PTR [rax],al
   140038ec7:	add    BYTE PTR [rbx*1+0x14001],ah
   140038ece:	add    BYTE PTR [rax],al
   140038ed0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004a869
   140038ed6:	add    BYTE PTR [rax],al
   140038ed8:	mov    esp,0x41d
   140038edd:	add    BYTE PTR [rax],al
   140038edf:	add    BYTE PTR [rax],al
   140038ee1:	add    BYTE PTR [rax],al
   140038ee3:	add    BYTE PTR [rbx],al
   140038ee5:	add    BYTE PTR [rax],al
   140038ee7:	add    ah,al
   140038ee9:	sbb    eax,0x280004
   140038eee:	add    BYTE PTR [rax],al
   140038ef0:	add    BYTE PTR [rax],al
   140038ef2:	add    BYTE PTR [rax],al
   140038ef4:	add    DWORD PTR [rax],eax
   140038ef6:	add    BYTE PTR [rax],al
   140038ef8:	rex.XB
   140038ef9:	rex.WRB
   140038efa:	outs   dx,BYTE PTR gs:[rsi]
   140038efc:	jne    0x140038efe
   140038efe:	add    BYTE PTR [rax],al
   140038f00:	clc    
   140038f01:	mov    es,WORD PTR [rbx]
   140038f03:	rex add DWORD PTR [rax],eax
   140038f06:	add    BYTE PTR [rax],al
   140038f08:	adc    BYTE PTR [rax],al
   140038f0a:	add    BYTE PTR [rax],al
   140038f0c:	(bad)  
   140038f0d:	inc    DWORD PTR [rax]
   140038f0f:	add    BYTE PTR [rdx+riz*1+0x1],cl
   140038f13:	rex add DWORD PTR [rax],eax
   140038f16:	add    BYTE PTR [rax],al
   140038f18:	loopne 0x140038f83
   140038f1a:	add    eax,DWORD PTR [rax+0x1]
	...
   140038f31:	hlt    
   140038f32:	add    eax,DWORD PTR [rax+0x1]
   140038f35:	add    BYTE PTR [rax],al
   140038f37:	add    BYTE PTR [rsi+riz*1+0x1],al
   140038f3b:	rex add DWORD PTR [rax],eax
   140038f3e:	add    BYTE PTR [rax],al
   140038f40:	je     0x140038f66
   140038f42:	add    DWORD PTR [rax+0x1],eax
   140038f45:	add    BYTE PTR [rax],al
   140038f47:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140038f4e:	add    BYTE PTR [rax],al
   140038f50:	xor    ah,0x3
   140038f53:	rex add DWORD PTR [rax],eax
   140038f56:	add    BYTE PTR [rax],al
   140038f58:	and    r8b,BYTE PTR [rcx]
   140038f5b:	rex add DWORD PTR [rax],eax
   140038f5e:	add    BYTE PTR [rax],al
   140038f60:	in     al,dx
   140038f61:	and    eax,DWORD PTR [rcx]
   140038f63:	rex add DWORD PTR [rax],eax
   140038f66:	add    BYTE PTR [rax],al
   140038f68:	pushf  
   140038f69:	mov    ecx,0x14000
   140038f6e:	add    BYTE PTR [rax],al
   140038f70:	pushf  
   140038f71:	mov    ecx,0x14000
   140038f76:	add    BYTE PTR [rax],al
   140038f78:	pushf  
   140038f79:	mov    ecx,0x14000
   140038f7e:	add    BYTE PTR [rax],al
   140038f80:	and    al,BYTE PTR [rip+0x11993]        # 0x14004a919
   140038f86:	add    BYTE PTR [rax],al
   140038f88:	add    al,0x1f
   140038f8a:	add    al,0x0
	...
   140038f94:	add    eax,DWORD PTR [rax]
   140038f96:	add    BYTE PTR [rax],al
   140038f98:	hlt    
   140038f99:	sbb    eax,0x300004
   140038f9e:	add    BYTE PTR [rax],al
   140038fa0:	add    BYTE PTR [rax],al
   140038fa2:	add    BYTE PTR [rax],al
   140038fa4:	add    DWORD PTR [rax],eax
   140038fa6:	add    BYTE PTR [rax],al
   140038fa8:	and    al,BYTE PTR [rip+0x31993]        # 0x14006a941
   140038fae:	add    BYTE PTR [rax],al
   140038fb0:	pop    rsp
   140038fb1:	(bad)  
   140038fb2:	add    al,0x0
   140038fb4:	add    DWORD PTR [rax],eax
   140038fb6:	add    BYTE PTR [rax],al
   140038fb8:	xor    al,0x1e
   140038fba:	add    al,0x0
   140038fbc:	or     BYTE PTR [rax],al
   140038fbe:	add    BYTE PTR [rax],al
   140038fc0:	je     0x140038fe0
   140038fc2:	add    al,0x0
   140038fc4:	add    BYTE PTR [rax],al
   140038fc7:	add    BYTE PTR [rax],al
   140038fc9:	add    BYTE PTR [rax],al
   140038fcb:	add    BYTE PTR [rcx],al
   140038fcd:	add    BYTE PTR [rax],al
   140038fcf:	add    BYTE PTR [rsi+0x3a],ah
   140038fd2:	pop    rsp
   140038fd3:	fs fs pop rsp
   140038fd6:	jbe    0x14003903b
   140038fd8:	je     0x140039049
   140038fda:	outs   dx,DWORD PTR ds:[rsi]
   140038fdb:	ins    BYTE PTR es:[rdi],dx
   140038fdc:	jae    0x14003903a
   140038fde:	jbe    0x140039043
   140038fe0:	(bad)  
   140038fe1:	ins    BYTE PTR es:[rdi],dx
   140038fe2:	imul   esp,DWORD PTR [rdx+0x73],0x6968735c
   140038fe9:	jo     0x140039047
   140038feb:	(bad)  
   140038fec:	je     0x14003905a
   140038fee:	ins    DWORD PTR es:[rdi],dx
   140038fef:	movsxd bx,DWORD PTR [rcx+rbp*2+0x6e]
   140038ff4:	movsxd ebp,DWORD PTR [rbp+rsi*2+0x64]
   140038ff8:	gs pop rsp
   140038ffa:	(bad)  
   140038ffb:	data16 js 0x140039075
   140038ffe:	imul   ebp,DWORD PTR [rsi+0x31],0x6c6e692e
   140039005:	add    BYTE PTR [rax],al
   140039007:	add    BYTE PTR [rbx+0x47],al
   14003900a:	imul   ecx,DWORD PTR fs:[rdi+0x62],0x7463656a
   140039012:	add    BYTE PTR [rax],al
   140039014:	rex.XB
   140039015:	rex.R
   140039016:	rex.XB add BYTE PTR [r11+0x55],al
   14003901a:	jae    0x140039081
   14003901c:	jb     0x140039063
   14003901e:	js     0x140039083
   140039020:	gs jo  0x140039097
   140039023:	imul   ebp,DWORD PTR [rdi+0x6e],0x52430000
   14003902a:	gs jae 0x14003909c
   14003902d:	jne    0x1400390a1
   14003902f:	movsxd esp,DWORD PTR [rbp+0x45]
   140039032:	js     0x140039097
   140039034:	gs jo  0x1400390ab
   140039037:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14003903e:	add    BYTE PTR [rax],al
   140039040:	sub    BYTE PTR [rax+0x14003],dl
   140039046:	add    BYTE PTR [rax],al
   140039048:	movabs al,ds:0xffff000000
   140039051:	add    BYTE PTR [rax],al
   140039053:	add    BYTE PTR [rax],al
   140039055:	add    BYTE PTR [rax],al
   140039057:	add    al,bl
   140039059:	push   0x3
   14003905b:	rex add DWORD PTR [rax],eax
	...
   14003906e:	add    BYTE PTR [rax],al
   140039070:	sbb    BYTE PTR [rax+0x14003],dl
   140039076:	add    BYTE PTR [rax],al
   140039078:	movabs al,ds:0xffff000000
   140039081:	add    BYTE PTR [rax],al
   140039083:	add    BYTE PTR [rax],al
   140039085:	add    BYTE PTR [rax],al
   140039087:	add    al,bl
   140039089:	push   0x3
   14003908b:	rex add DWORD PTR [rax],eax
	...
   14003909e:	add    BYTE PTR [rax],al
   1400390a0:	adc    al,0x90
   1400390a2:	add    eax,DWORD PTR [rax+0x1]
   1400390a5:	add    BYTE PTR [rax],al
   1400390a7:	add    BYTE PTR [rax],ah
   1400390a9:	add    BYTE PTR [rax],al
   1400390ab:	add    bh,bh
   1400390ad:	inc    DWORD PTR [rax]
   1400390af:	add    al,cl
   1400390b1:	sub    al,BYTE PTR [rcx]
   1400390b3:	rex add DWORD PTR [rax],eax
   1400390b6:	add    BYTE PTR [rax],al
   1400390b8:	loopne 0x140039123
   1400390ba:	add    eax,DWORD PTR [rax+0x1]
	...
   1400390cd:	add    BYTE PTR [rax],al
   1400390cf:	add    BYTE PTR [rax],cl
   1400390d1:	nop
   1400390d2:	add    eax,DWORD PTR [rax+0x1]
   1400390d5:	add    BYTE PTR [rax],al
   1400390d7:	add    BYTE PTR [rax],dl
   1400390d9:	add    BYTE PTR [rax],al
   1400390db:	add    bh,bh
   1400390dd:	inc    DWORD PTR [rax]
   1400390df:	add    ah,bh
   1400390e1:	sub    al,BYTE PTR [rcx]
   1400390e3:	rex add DWORD PTR [rax],eax
   1400390e6:	add    BYTE PTR [rax],al
   1400390e8:	loopne 0x140039153
   1400390ea:	add    eax,DWORD PTR [rax+0x1]
	...
   140039101:	cmc    
   140039102:	add    eax,DWORD PTR [rax+0x1]
   140039105:	add    BYTE PTR [rax],al
   140039107:	add    BYTE PTR [rsi+riz*1],ch
   14003910a:	add    DWORD PTR [rax+0x1],eax
   14003910d:	add    BYTE PTR [rax],al
   14003910f:	add    BYTE PTR [rax],ah
   140039111:	data16 add BYTE PTR [rax+0x1],al
   140039115:	add    BYTE PTR [rax],al
   140039117:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   14003911e:	add    BYTE PTR [rax],al
   140039120:	hlt    
   140039121:	movsxd eax,DWORD PTR [rax]
   140039123:	rex add DWORD PTR [rax],eax
   140039126:	add    BYTE PTR [rax],al
   140039128:	mov    WORD PTR [rbp+0x0],fs
   14003912b:	rex add DWORD PTR [rax],eax
   14003912e:	add    BYTE PTR [rax],al
   140039130:	cld    
   140039131:	movsxd eax,DWORD PTR [rax]
   140039133:	rex add DWORD PTR [rax],eax
   140039136:	add    BYTE PTR [rax],al
   140039138:	nop
   140039139:	cmc    
   14003913a:	add    eax,DWORD PTR [rax+0x1]
   14003913d:	add    BYTE PTR [rax],al
   14003913f:	add    BYTE PTR [rsi+riz*1],dh
   140039142:	add    DWORD PTR [rax+0x1],eax
   140039145:	add    BYTE PTR [rax],al
   140039147:	add    BYTE PTR [rax],ah
   140039149:	data16 add BYTE PTR [rax+0x1],al
   14003914d:	add    BYTE PTR [rax],al
   14003914f:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   140039156:	add    BYTE PTR [rax],al
   140039158:	hlt    
   140039159:	movsxd eax,DWORD PTR [rax]
   14003915b:	rex add DWORD PTR [rax],eax
   14003915e:	add    BYTE PTR [rax],al
   140039160:	mov    WORD PTR [rbp+0x0],fs
   140039163:	rex add DWORD PTR [rax],eax
   140039166:	add    BYTE PTR [rax],al
   140039168:	cld    
   140039169:	movsxd eax,DWORD PTR [rax]
   14003916b:	rex add DWORD PTR [rax],eax
   14003916e:	add    BYTE PTR [rax],al
   140039170:	and    dh,dh
   140039172:	add    eax,DWORD PTR [rax+0x1]
   140039175:	add    BYTE PTR [rax],al
   140039177:	add    BYTE PTR [rsi+riz*1],bh
   14003917a:	add    DWORD PTR [rax+0x1],eax
   14003917d:	add    BYTE PTR [rax],al
   14003917f:	add    al,dl
   140039181:	sub    eax,0x14001
   140039186:	add    BYTE PTR [rax],al
   140039188:	pushf  
   140039189:	mov    ecx,0x14000
   14003918e:	add    BYTE PTR [rax],al
   140039190:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140039191:	and    al,0x1
   140039193:	rex add DWORD PTR [rax],eax
   140039196:	add    BYTE PTR [rax],al
   140039198:	lods   al,BYTE PTR ds:[rsi]
   140039199:	and    al,0x1
   14003919b:	rex add DWORD PTR [rax],eax
   14003919e:	add    BYTE PTR [rax],al
   1400391a0:	mov    ah,0x24
   1400391a2:	add    DWORD PTR [rax+0x1],eax
   1400391a5:	add    BYTE PTR [rax],al
   1400391a7:	add    BYTE PTR [rsp+0x14001],bh
   1400391ae:	add    BYTE PTR [rax],al
   1400391b0:	(bad)  
   1400391b1:	and    al,0x1
   1400391b3:	rex add DWORD PTR [rax],eax
   1400391b6:	add    BYTE PTR [rax],al
   1400391b8:	or     al,0x25
   1400391ba:	add    DWORD PTR [rax+0x1],eax
   1400391bd:	add    BYTE PTR [rax],al
   1400391bf:	add    BYTE PTR [rax],al
   1400391c1:	add    DWORD PTR cs:[rax+0x1],eax
   1400391c5:	add    BYTE PTR [rax],al
   1400391c7:	add    BYTE PTR [rsi+rbp*1+0x1],dl
   1400391cb:	rex add DWORD PTR [rax],eax
   1400391ce:	add    BYTE PTR [rax],al
   1400391d0:	(bad)  
   1400391d1:	and    eax,0x14001
   1400391d6:	add    BYTE PTR [rax],al
   1400391d8:	movabs al,ds:0xe000000001400125
   1400391e1:	and    eax,0x14001
   1400391e6:	add    BYTE PTR [rax],al
   1400391e8:	or     BYTE PTR [rax],ch
   1400391ea:	add    DWORD PTR [rax+0x1],eax
   1400391ed:	add    BYTE PTR [rax],al
   1400391ef:	add    BYTE PTR [rax+0x28],dh
   1400391f2:	add    DWORD PTR [rax+0x1],eax
   1400391f5:	add    BYTE PTR [rax],al
   1400391f7:	add    al,bl
   1400391f9:	sub    BYTE PTR [rcx],al
   1400391fb:	rex add DWORD PTR [rax],eax
   1400391fe:	add    BYTE PTR [rax],al
   140039200:	rex sub DWORD PTR [rcx],eax
   140039203:	rex add DWORD PTR [rax],eax
   140039206:	add    BYTE PTR [rax],al
   140039208:	shr    BYTE PTR [rcx],1
   14003920a:	add    DWORD PTR [rax+0x1],eax
   14003920d:	add    BYTE PTR [rax],al
   14003920f:	add    BYTE PTR [rax],bh
   140039211:	sub    al,BYTE PTR [rcx]
   140039213:	rex add DWORD PTR [rax],eax
   140039216:	add    BYTE PTR [rax],al
   140039218:	and    BYTE PTR [rsi],ah
   14003921a:	add    DWORD PTR [rax+0x1],eax
   14003921d:	add    BYTE PTR [rax],al
   14003921f:	add    BYTE PTR [rsi+riz*1+0x1],dh
   140039223:	rex add DWORD PTR [rax],eax
   140039226:	add    BYTE PTR [rax],al
   140039228:	and    BYTE PTR [rsi],0x1
   14003922b:	rex add DWORD PTR [rax],eax
   14003922e:	add    BYTE PTR [rax],al
   140039230:	mov    WORD PTR [rsi],fs
   140039232:	add    DWORD PTR [rax+0x1],eax
   140039235:	add    BYTE PTR [rax],al
   140039237:	add    BYTE PTR [rax+0x1400126],ch
   14003923d:	add    BYTE PTR [rax],al
   14003923f:	add    al,ch
   140039241:	add    DWORD PTR es:[rax+0x1],eax
   140039245:	add    BYTE PTR [rax],al
   140039247:	add    BYTE PTR [rdi+riz*1+0x1],cl
   14003924b:	rex add DWORD PTR [rax],eax
   14003924e:	add    BYTE PTR [rax],al
   140039250:	push   0x1400127
   140039255:	add    BYTE PTR [rax],al
   140039257:	add    BYTE PTR [rax+0x1400127],dl
   14003925d:	add    BYTE PTR [rax],al
   14003925f:	add    al,ch
   140039261:	(bad)  
   140039262:	add    DWORD PTR [rax+0x1],eax
   140039265:	add    BYTE PTR [rax],al
   140039267:	add    BYTE PTR [rdx],ah
   140039269:	add    eax,0x11993
   14003926e:	add    BYTE PTR [rax],al
   140039270:	add    al,0x1f
   140039272:	add    al,0x0
	...
   14003927c:	add    eax,DWORD PTR [rax]
   14003927e:	add    BYTE PTR [rax],al
   140039280:	(bad)  
   140039281:	(bad)  
   140039282:	add    al,0x0
   140039284:	xor    BYTE PTR [rax],al
   140039286:	add    BYTE PTR [rax],al
   140039288:	add    BYTE PTR [rax],al
   14003928a:	add    BYTE PTR [rax],al
   14003928c:	add    DWORD PTR [rax],eax
   14003928e:	add    BYTE PTR [rax],al
   140039290:	and    al,BYTE PTR [rip+0x11993]        # 0x14004ac29
   140039296:	add    BYTE PTR [rax],al
   140039298:	add    al,0x1f
   14003929a:	add    al,0x0
	...
   1400392a4:	add    eax,DWORD PTR [rax]
   1400392a6:	add    BYTE PTR [rax],al
   1400392a8:	or     al,0x1f
   1400392aa:	add    al,0x0
   1400392ac:	xor    BYTE PTR [rax],al
   1400392ae:	add    BYTE PTR [rax],al
   1400392b0:	add    BYTE PTR [rax],al
   1400392b2:	add    BYTE PTR [rax],al
   1400392b4:	add    DWORD PTR [rax],eax
   1400392b6:	add    BYTE PTR [rax],al
   1400392b8:	and    eax,0x3b000073
   1400392bd:	add    BYTE PTR [rax],al
   1400392bf:	add    BYTE PTR [rax+0x14003f6],ah
   1400392c5:	add    BYTE PTR [rax],al
   1400392c7:	add    ah,ah
   1400392c9:	(bad)  
   1400392ca:	add    BYTE PTR [rax+0x1],al
   1400392cd:	add    BYTE PTR [rax],al
   1400392cf:	add    BYTE PTR [rsp+rsi*1+0x1],bh
   1400392d3:	rex add DWORD PTR [rax],eax
   1400392d6:	add    BYTE PTR [rax],al
   1400392d8:	in     al,dx
   1400392d9:	cmp    al,0x1
   1400392db:	rex add DWORD PTR [rax],eax
   1400392de:	add    BYTE PTR [rax],al
   1400392e0:	and    al,BYTE PTR [rip+0x31993]        # 0x14006ac79
   1400392e6:	add    BYTE PTR [rax],al
   1400392e8:	test   al,0x1f
   1400392ea:	add    al,0x0
   1400392ec:	add    DWORD PTR [rax],eax
   1400392ee:	add    BYTE PTR [rax],al
   1400392f0:	sbb    BYTE PTR [rdi],0x4
   1400392f3:	add    BYTE PTR [rax],cl
   1400392f5:	add    BYTE PTR [rax],al
   1400392f7:	add    al,al
   1400392f9:	(bad)  
   1400392fa:	add    al,0x0
   1400392fc:	sub    BYTE PTR [rax],al
   1400392fe:	add    BYTE PTR [rax],al
   140039300:	add    BYTE PTR [rax],al
   140039302:	add    BYTE PTR [rax],al
   140039304:	add    DWORD PTR [rax],eax
   140039306:	add    BYTE PTR [rax],al
   140039308:	and    al,BYTE PTR [rip+0x21993]        # 0x14005aca1
   14003930e:	add    BYTE PTR [rax],al
   140039310:	sbb    BYTE PTR [rax],ah
   140039312:	add    al,0x0
	...
   14003931c:	add    eax,0x28000000
   140039321:	and    BYTE PTR [rax+rax*1],al
   140039324:	and    BYTE PTR [rax],al
   140039326:	add    BYTE PTR [rax],al
   140039328:	add    BYTE PTR [rax],al
   14003932a:	add    BYTE PTR [rax],al
   14003932c:	add    DWORD PTR [rax],eax
   14003932e:	add    BYTE PTR [rax],al
   140039330:	and    al,BYTE PTR [rip+0x21993]        # 0x14005acc9
   140039336:	add    BYTE PTR [rax],al
   140039338:	cmp    al,0x7
   14003933a:	add    al,0x0
   14003933c:	add    DWORD PTR [rax],eax
   14003933e:	add    BYTE PTR [rax],al
   140039340:	test   al,0x20
   140039342:	add    al,0x0
   140039344:	(bad)  
   140039345:	add    BYTE PTR [rax],al
   140039347:	add    al,dl
   140039349:	and    BYTE PTR [rax+rax*1],al
   14003934c:	sub    BYTE PTR [rax],al
   14003934e:	add    BYTE PTR [rax],al
   140039350:	add    BYTE PTR [rax],al
   140039352:	add    BYTE PTR [rax],al
   140039354:	add    DWORD PTR [rax],eax
   140039356:	add    BYTE PTR [rax],al
   140039358:	rex.XB push r8
   14003935a:	je     0x1400393ce
   14003935c:	rex.B jb 0x1400393d1
   14003935f:	(bad)  
   140039360:	jns    0x140039362
   140039362:	add    BYTE PTR [rax],al
   140039364:	add    BYTE PTR [rax],al
   140039366:	add    BYTE PTR [rax],al
   140039368:	pop    rax
   140039369:	xchg   ebx,eax
   14003936a:	add    eax,DWORD PTR [rax+0x1]
   14003936d:	add    BYTE PTR [rax],al
   14003936f:	add    BYTE PTR [rax],ch
   140039371:	add    BYTE PTR [rax],al
   140039373:	add    bh,bh
   140039375:	inc    DWORD PTR [rax]
	...
   14003937f:	add    al,ah
   140039381:	imul   eax,DWORD PTR [rbx],0x140
	...
   140039397:	add    BYTE PTR [rax],ah
   140039399:	test   DWORD PTR [rbx],0x140
   14003939f:	add    BYTE PTR [rax+0x1400140],ch
   1400393a5:	add    BYTE PTR [rax],al
   1400393a7:	add    ah,cl
   1400393a9:	add    DWORD PTR [r8+0x1],eax
   1400393ad:	add    BYTE PTR [rax],al
   1400393af:	add    BYTE PTR [rcx+rdi*4+0x14000],bl
   1400393b6:	add    BYTE PTR [rax],al
   1400393b8:	rex.XB
   1400393b9:	rex.WRXB (bad) 
   1400393bc:	jb     0x140039430
   1400393be:	(bad)  
   1400393bf:	jns    0x1400393c1
   1400393c1:	add    BYTE PTR [rax],al
   1400393c3:	add    BYTE PTR [rax],al
   1400393c5:	add    BYTE PTR [rax],al
   1400393c7:	add    al,bh
   1400393c9:	test   DWORD PTR [rbx],0x140
   1400393cf:	add    BYTE PTR [rdx+rax*2],cl
   1400393d2:	add    DWORD PTR [rax+0x1],eax
   1400393d5:	add    BYTE PTR [rax],al
   1400393d7:	add    BYTE PTR [rax+0x1400144],bl
   1400393dd:	add    BYTE PTR [rax],al
   1400393df:	add    BYTE PTR [rax+0x1400143],bh
   1400393e5:	add    BYTE PTR [rax],al
   1400393e7:	add    BYTE PTR [rax],ah
   1400393e9:	sub    esp,DWORD PTR [rax]
   1400393eb:	add    BYTE PTR [rax],al
   1400393ed:	add    BYTE PTR [rax],al
   1400393ef:	add    BYTE PTR [rbx],bl
   1400393f1:	call   0x1680393f6
   1400393f6:	add    BYTE PTR [rax],al
   1400393f8:	(bad)  
   1400393f9:	call   0xc20393fe
   1400393fe:	add    BYTE PTR [rax],al
   140039400:	sbb    al,0xe8
   140039402:	add    BYTE PTR [rax],al
   140039404:	add    BYTE PTR [rax+rax*1],dl
   140039407:	add    BYTE PTR [rip+0xe8],bl        # 0x1400394f5
   14003940d:	add    BYTE PTR [r8],al
   140039410:	and    al,bh
   140039412:	add    eax,DWORD PTR [rax+0x1]
   140039415:	add    BYTE PTR [rax],al
   140039417:	add    BYTE PTR [rax+0x1400147],dh
   14003941d:	add    BYTE PTR [rax],al
   14003941f:	add    BYTE PTR [rdi+rax*2],bh
   140039422:	add    DWORD PTR [rax+0x1],eax
   140039425:	add    BYTE PTR [rax],al
   140039427:	add    BYTE PTR [rbp+0x6e],dl
   14003942a:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   14003942e:	outs   dx,BYTE PTR ds:[rsi]
   14003942f:	and    BYTE PTR [rbp+0x78],ah
   140039432:	movsxd esp,DWORD PTR [rbp+0x70]
   140039435:	je     0x1400394a0
   140039437:	outs   dx,DWORD PTR ds:[rsi]
   140039438:	outs   dx,BYTE PTR ds:[rsi]
   140039439:	add    BYTE PTR [rax],al
   14003943b:	add    BYTE PTR [rax],al
   14003943d:	add    BYTE PTR [rax],al
   14003943f:	add    BYTE PTR [rax-0x8],cl
   140039442:	add    eax,DWORD PTR [rax+0x1]
   140039445:	add    BYTE PTR [rax],al
   140039447:	add    al,ah
   140039449:	rex.RXB add DWORD PTR [r8+0x1],r8d
   14003944d:	add    BYTE PTR [rax],al
   14003944f:	add    BYTE PTR [rdi+rax*2],bh
   140039452:	add    DWORD PTR [rax+0x1],eax
   140039455:	add    BYTE PTR [rax],al
   140039457:	add    al,cl
   140039459:	clc    
   14003945a:	add    eax,DWORD PTR [rax+0x1]
   14003945d:	add    BYTE PTR [rax],al
   14003945f:	add    BYTE PTR [rax+rcx*2],bl
   140039462:	add    DWORD PTR [rax+0x1],eax
	...
   14003946d:	add    BYTE PTR [rax],al
   14003946f:	add    BYTE PTR [rcx],ch
   140039471:	add    BYTE PTR [rax],al
   140039473:	add    BYTE PTR [rcx],0x0
	...
   140039486:	add    BYTE PTR [rax],al
   140039488:	sldt   WORD PTR [rax]
   14003948b:	add    BYTE PTR [rax],al
   14003948d:	add    BYTE PTR [rax],al
   14003948f:	add    BYTE PTR [rax],ah
   140039491:	add    eax,0x1993
	...
   14003950e:	add    BYTE PTR [rax],al
   140039510:	movsxd esi,DWORD PTR [rbx+0x6d]
   140039513:	loopne 0x140039516
	...
   140039525:	add    BYTE PTR [rax],al
   140039527:	add    BYTE PTR [rax+rax*1],al
   14003952a:	add    BYTE PTR [rax],al
   14003952c:	add    BYTE PTR [rax],al
   14003952e:	add    BYTE PTR [rax],al
   140039530:	and    BYTE PTR [rip+0x1993],al        # 0x14003aec9
	...
   14003954e:	add    BYTE PTR [rax],al
   140039550:	cwde   
   140039551:	push   0x1
   140039553:	rex add DWORD PTR [rax],eax
   140039556:	add    BYTE PTR [rax],al
   140039558:	pushf  
   140039559:	mov    ecx,0x14000
   14003955e:	add    BYTE PTR [rax],al
   140039560:	pushf  
   140039561:	mov    ecx,0x14000
   140039566:	add    BYTE PTR [rax],al
   140039568:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003956a:	jb     0x1400395b1
   14003956c:	js     0x1400395d7
   14003956e:	je     0x1400395c0
   140039570:	jb     0x1400395e1
   140039572:	movsxd esp,DWORD PTR [rbp+0x73]
   140039575:	jae    0x140039577
   140039577:	add    BYTE PTR [rbp+0x0],ch
   14003957a:	jae    0x14003957c
   14003957c:	movsxd eax,DWORD PTR [rax]
   14003957e:	outs   dx,DWORD PTR ds:[rsi]
   14003957f:	add    BYTE PTR [rdx+0x0],dh
   140039582:	add    BYTE PTR gs:[rbp+0x0],ah
   140039586:	add    BYTE PTR cs:[rax+rax*1+0x6c],ah
   14003958b:	add    BYTE PTR [rax+rax*1+0x0],ch
   14003958f:	add    BYTE PTR [rax-0x1b],dh
   140039592:	add    al,0x40
   140039594:	add    DWORD PTR [rax],eax
   140039596:	add    BYTE PTR [rax],al
   140039598:	adc    dh,ah
   14003959a:	add    al,0x40
   14003959c:	add    DWORD PTR [rax],eax
   14003959e:	add    BYTE PTR [rax],al
   1400395a0:	rex.WR
   1400395a1:	rex.XB pop r15
   1400395a3:	push   rsp
   1400395a4:	rex.WB
   1400395a5:	rex.WRB
   1400395a6:	add    BYTE PTR [r11+rax*2+0x5f],r9b
   1400395ab:	rex.WRX push rbp
   1400395ad:	rex.WRB
   1400395ae:	rex.RB push r10
   1400395b0:	rex.WB
   1400395b1:	rex.XB add BYTE PTR [r8],al
   1400395b4:	add    BYTE PTR [rax],al
   1400395b6:	add    BYTE PTR [rax],al
   1400395b8:	rex.WR
   1400395b9:	rex.XB pop r15
   1400395bb:	rex.WRB
   1400395bc:	rex.WRXB
   1400395bd:	rex.WRX
   1400395be:	rex.RB push r12
   1400395c0:	push   r10
   1400395c2:	pop    rcx
   1400395c3:	add    BYTE PTR [rax],al
   1400395c5:	add    BYTE PTR [rax],al
   1400395c7:	add    BYTE PTR [rbx+rax*2+0x5f],cl
   1400395cb:	rex.XB push r12
   1400395cd:	pop    rcx
   1400395ce:	push   rax
   1400395cf:	add    BYTE PTR [r8],r8b
   1400395d2:	add    BYTE PTR [rax],al
   1400395d4:	add    BYTE PTR [rax],al
   1400395d6:	add    BYTE PTR [rax],al
   1400395d8:	rex.WR
   1400395d9:	rex.XB pop r15
   1400395db:	rex.XB
   1400395dc:	rex.WRXB
   1400395dd:	rex.WR
   1400395de:	rex.WR
   1400395df:	push   r12
   1400395e1:	add    BYTE PTR [r8],r8b
   1400395e4:	rex.WR
   1400395e5:	rex.XB pop r15
   1400395e7:	rex.B
   1400395e8:	rex.WR
   1400395e9:	rex.WR add BYTE PTR [rax],r8b
   1400395ec:	add    BYTE PTR [rax],al
   1400395ee:	add    BYTE PTR [rax],al
   1400395f0:	in     al,0x95
   1400395f2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400395fd:	add    BYTE PTR [rax],al
   1400395ff:	add    ah,cl
   140039601:	hlt    
   140039602:	add    BYTE PTR [rax+0x1],al
   140039605:	add    BYTE PTR [rax],al
   140039607:	add    al,bl
   140039609:	xchg   ebp,eax
   14003960a:	add    eax,DWORD PTR [rax+0x1]
   14003960d:	add    BYTE PTR [rax],al
   14003960f:	add    BYTE PTR [rax+0x1400494],dh
   140039615:	add    BYTE PTR [rax],al
   140039617:	add    ah,cl
   140039619:	hlt    
   14003961a:	add    BYTE PTR [rax+0x1],al
   14003961d:	add    BYTE PTR [rax],al
   14003961f:	add    al,cl
   140039621:	xchg   ebp,eax
   140039622:	add    eax,DWORD PTR [rax+0x1]
   140039625:	add    BYTE PTR [rax],al
   140039627:	add    BYTE PTR [rax+0x1400494],dh
   14003962d:	add    BYTE PTR [rax],al
   14003962f:	add    ah,ah
   140039631:	sbb    eax,0x14002
   140039636:	add    BYTE PTR [rax],al
   140039638:	mov    eax,0x1400395
   14003963d:	add    BYTE PTR [rax],al
   14003963f:	add    BYTE PTR [rax+0x1400494],dh
   140039645:	add    BYTE PTR [rax],al
   140039647:	add    BYTE PTR [rdx+rbx*1],ah
   14003964a:	add    al,BYTE PTR [rax+0x1]
   14003964d:	add    BYTE PTR [rax],al
   14003964f:	add    BYTE PTR [rax+0x1400395],ch
   140039655:	add    BYTE PTR [rax],al
   140039657:	add    BYTE PTR [rax+0x1400494],dh
   14003965d:	add    BYTE PTR [rax],al
   14003965f:	add    BYTE PTR [rax+0x1400217],al
   140039665:	add    BYTE PTR [rax],al
   140039667:	add    BYTE PTR [rax+0x1400395],ah
   14003966d:	add    BYTE PTR [rax],al
   14003966f:	add    BYTE PTR [rax+0x1400494],dh
   140039675:	add    BYTE PTR [rax],al
   140039677:	add    BYTE PTR [rsi+rdx*1+0x14002],bl
   14003967e:	add    BYTE PTR [rax],al
   140039680:	add    DWORD PTR [rdx],eax
   140039682:	add    eax,DWORD PTR [rax*1+0x9080706]
   140039689:	or     cl,BYTE PTR [rbx]
   14003968b:	or     al,0xd
   14003968d:	(bad)  
   14003968e:	movups xmm2,XMMWORD PTR [rcx]
   140039691:	adc    dl,BYTE PTR [rbx]
   140039693:	adc    al,0x15
   140039695:	(bad)  
   140039696:	(bad)  
   140039697:	sbb    BYTE PTR [rcx],bl
   140039699:	sbb    bl,BYTE PTR [rbx]
   14003969b:	sbb    al,0x1d
   14003969d:	(bad)  
   14003969e:	(bad)  
   14003969f:	and    BYTE PTR [rcx],ah
   1400396a1:	and    ah,BYTE PTR [rbx]
   1400396a3:	and    al,0x25
   1400396a5:	es (bad) 
   1400396a7:	sub    BYTE PTR [rcx],ch
   1400396a9:	sub    ch,BYTE PTR [rbx]
   1400396ab:	sub    al,0x2d
   1400396ad:	cs (bad) 
   1400396af:	xor    BYTE PTR [rcx],dh
   1400396b1:	xor    dh,BYTE PTR [rbx]
   1400396b3:	xor    al,0x35
   1400396b5:	ss (bad) 
   1400396b7:	cmp    BYTE PTR [rcx],bh
   1400396b9:	cmp    bh,BYTE PTR [rbx]
   1400396bb:	cmp    al,0x3d
   1400396bd:	ds (bad) 
   1400396bf:	rex
   1400396c0:	rex.B
   1400396c1:	rex.X
   1400396c2:	rex.XB
   1400396c3:	rex.R
   1400396c4:	rex.RB
   1400396c5:	rex.RX
   1400396c6:	rex.RXB
   1400396c7:	rex.W
   1400396c8:	rex.WB
   1400396c9:	rex.WX
   1400396ca:	rex.WXB
   1400396cb:	rex.WR
   1400396cc:	rex.WRB
   1400396cd:	rex.WRX
   1400396ce:	rex.WRXB push r8
   1400396d0:	push   rcx
   1400396d1:	push   rdx
   1400396d2:	push   rbx
   1400396d3:	push   rsp
   1400396d4:	push   rbp
   1400396d5:	push   rsi
   1400396d6:	push   rdi
   1400396d7:	pop    rax
   1400396d8:	pop    rcx
   1400396d9:	pop    rdx
   1400396da:	pop    rbx
   1400396db:	pop    rsp
   1400396dc:	pop    rbp
   1400396dd:	pop    rsi
   1400396de:	pop    rdi
   1400396df:	(bad)  
   1400396e0:	(bad)  
   1400396e1:	(bad)
   1400396e6:	addr32 push 0x6c6b6a69
   1400396ec:	ins    DWORD PTR es:[rdi],dx
   1400396ed:	outs   dx,BYTE PTR ds:[rsi]
   1400396ee:	outs   dx,DWORD PTR ds:[rsi]
   1400396ef:	jo     0x140039762
   1400396f1:	jb     0x140039766
   1400396f3:	je     0x14003976a
   1400396f5:	jbe    0x14003976e
   1400396f7:	js     0x140039772
   1400396f9:	jp     0x140039776
   1400396fb:	jl     0x14003977a
   1400396fd:	jle    0x14003977e
   1400396ff:	add    BYTE PTR [rdi+0x2e],bl
   140039702:	sub    al,0x0
   140039704:	add    BYTE PTR cs:[rax],al
   140039707:	add    BYTE PTR [rdi+0x0],bl
   14003970a:	add    BYTE PTR [rax],al
   14003970c:	cmp    eax,0x43000000
   140039711:	add    BYTE PTR [rax],al
   140039713:	add    BYTE PTR [rip+0x3b],bh        # 0x140039754
   140039719:	add    BYTE PTR [rax],al
   14003971b:	add    BYTE PTR [rax],al
   14003971d:	add    BYTE PTR [rax],al
   14003971f:	add    BYTE PTR [rdx+0x75],dh
   140039722:	outs   dx,BYTE PTR ds:[rsi]
   140039723:	je     0x14003978e
   140039725:	ins    DWORD PTR es:[rdi],dx
   140039726:	and    BYTE PTR gs:[rbp+0x72],ah
   14003972a:	jb     0x14003979b
   14003972c:	jb     0x14003974e
   14003972e:	add    BYTE PTR [rax],al
   140039730:	or     eax,0xa
   140039735:	add    BYTE PTR [rax],al
   140039737:	add    BYTE PTR [rsp+rcx*2+0x4f],dl
   14003973b:	push   rbx
   14003973c:	push   rbx
   14003973d:	and    BYTE PTR [rbp+0x72],ah
   140039740:	jb     0x1400397b1
   140039742:	jb     0x140039751
   140039744:	or     al,BYTE PTR [rax]
   140039746:	add    BYTE PTR [rax],al
   140039748:	push   rbx
   140039749:	rex.WB
   14003974a:	rex.WRX
   14003974b:	rex.RXB and BYTE PTR [r13+0x72],r12b
   14003974f:	jb     0x1400397c0
   140039751:	jb     0x140039760
   140039753:	or     al,BYTE PTR [rax]
   140039755:	add    BYTE PTR [rax],al
   140039757:	add    BYTE PTR [rdi+rcx*2+0x4d],al
   14003975b:	rex.B
   14003975c:	rex.WB
   14003975d:	rex.WRX and BYTE PTR [rbp+0x72],r12b
   140039761:	jb     0x1400397d2
   140039763:	jb     0x140039772
   140039765:	or     al,BYTE PTR [rax]
	...
   14003976f:	add    BYTE PTR [rdx+0x36],dl
   140039772:	xor    BYTE PTR [rbx],dh
   140039774:	xor    al,0xd
   140039776:	or     al,BYTE PTR [rcx+0x6e]
   140039779:	and    BYTE PTR [rcx+0x70],ah
   14003977c:	jo     0x1400397ea
   14003977e:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140039785:	and    BYTE PTR [rax+0x61],ch
   140039788:	jae    0x1400397aa
   14003978a:	ins    DWORD PTR es:[rdi],dx
   14003978b:	(bad)  
   14003978c:	fs and BYTE PTR gs:[rcx+0x6e],ah
   140039791:	and    BYTE PTR [rcx+0x74],ah
   140039794:	je     0x1400397fb
   140039796:	ins    DWORD PTR es:[rdi],dx
   140039797:	jo     0x14003980d
   140039799:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   14003979d:	ins    BYTE PTR es:[rdi],dx
   14003979e:	outs   dx,DWORD PTR ds:[rsi]
   14003979f:	(bad)  
   1400397a0:	and    BYTE PTR fs:[rax+rbp*2+0x65],dh
   1400397a5:	and    BYTE PTR [rbx+0x20],al
   1400397a8:	jb     0x14003981f
   1400397aa:	outs   dx,BYTE PTR ds:[rsi]
   1400397ab:	je     0x140039816
   1400397ad:	ins    DWORD PTR es:[rdi],dx
   1400397ae:	and    BYTE PTR gs:[rcx+rbp*2+0x62],ch
   1400397b3:	jb     0x140039816
   1400397b5:	jb     0x140039830
   1400397b7:	and    BYTE PTR [rcx+0x6e],ch
   1400397ba:	movsxd ebp,DWORD PTR [rdi+0x72]
   1400397bd:	jb     0x140039824
   1400397bf:	movsxd esi,DWORD PTR [rsp+rbp*2+0x79]
   1400397c3:	or     dl,BYTE PTR cs:[rax+0x6c]
   1400397c7:	gs (bad) 
   1400397c9:	jae    0x140039830
   1400397cb:	and    BYTE PTR [rbx+0x6f],ah
   1400397ce:	outs   dx,BYTE PTR ds:[rsi]
   1400397cf:	je     0x140039832
   1400397d1:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
   1400397d5:	push   0x70612065
   1400397da:	jo     0x140039848
   1400397dc:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   1400397e3:	(bad)  
   1400397e4:	jae    0x140039806
   1400397e6:	jae    0x14003985d
   1400397e8:	jo     0x14003985a
   1400397ea:	outs   dx,DWORD PTR ds:[rsi]
   1400397eb:	jb     0x140039861
   1400397ed:	and    BYTE PTR [rbp+riz*2+0x61],dh
   1400397f1:	ins    DWORD PTR es:[rdi],dx
   1400397f2:	and    BYTE PTR [rsi+0x6f],ah
   1400397f5:	jb     0x140039817
   1400397f7:	ins    DWORD PTR es:[rdi],dx
   1400397f8:	outs   dx,DWORD PTR ds:[rsi]
   1400397f9:	jb     0x140039860
   1400397fb:	and    BYTE PTR [rcx+0x6e],ch
   1400397fe:	outs   dx,WORD PTR ds:[rsi]
   140039800:	jb     0x14003986f
   140039802:	(bad)  
   140039803:	je     0x14003986e
   140039805:	outs   dx,DWORD PTR ds:[rsi]
   140039806:	outs   dx,BYTE PTR ds:[rsi]
   140039807:	cs or  eax,0xa
   14003980d:	add    BYTE PTR [rax],al
   14003980f:	add    BYTE PTR [rdx+0x36],dl
   140039812:	xor    BYTE PTR [rbx],dh
   140039814:	xor    ecx,DWORD PTR [rip+0x41202d0a]        # 0x18123c524
   14003981a:	je     0x140039890
   14003981c:	gs ins DWORD PTR es:[rdi],dx
   14003981e:	jo     0x140039894
   140039820:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140039824:	jne    0x140039899
   140039826:	and    BYTE PTR gs:[rbp+0x53],cl
   14003982a:	rex.WB
   14003982b:	rex.WR and BYTE PTR [rbx+0x6f],r12b
   14003982f:	fs and BYTE PTR gs:[rsi+0x72],ah
   140039834:	outs   dx,DWORD PTR ds:[rsi]
   140039835:	ins    DWORD PTR es:[rdi],dx
   140039836:	and    BYTE PTR [rax+rbp*2+0x69],dh
   14003983a:	jae    0x14003985c
   14003983c:	(bad)  
   14003983d:	jae    0x1400398b2
   14003983f:	gs ins DWORD PTR es:[rdi],dx
   140039841:	(bad)  
   140039842:	ins    BYTE PTR es:[rdi],dx
   140039843:	jns    0x140039865
   140039845:	fs jne 0x1400398ba
   140039848:	imul   ebp,DWORD PTR [rsi+0x67],0x74616e20
   14003984f:	imul   esi,DWORD PTR [rsi+0x65],0x646f6320
   140039856:	and    BYTE PTR gs:[rcx+0x6e],ch
   14003985a:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   140039862:	je     0x1400398cd
   140039864:	outs   dx,DWORD PTR ds:[rsi]
   140039865:	outs   dx,BYTE PTR ds:[rsi]
   140039866:	or     dl,BYTE PTR [rax+rbp*2+0x69]
   14003986a:	jae    0x14003988c
   14003986c:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
   140039873:	gs jae 0x140039896
   140039876:	(bad)  
   140039877:	and    BYTE PTR [rdx+0x75],ah
   14003987a:	and    BYTE PTR [ecx+0x6e],ch
   14003987e:	and    BYTE PTR [rcx+0x6f],bh
   140039881:	jne    0x1400398f5
   140039883:	and    BYTE PTR [rcx+0x70],ah
   140039886:	jo     0x1400398f4
   140039888:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003988f:	and    BYTE PTR cs:[rcx+0x74],cl
   140039893:	and    BYTE PTR [rcx+0x73],ch
   140039896:	and    BYTE PTR [rbp+0x6f],ch
   140039899:	jae    0x14003990f
   14003989b:	and    BYTE PTR [rcx+rbp*2+0x6b],ch
   14003989f:	gs ins BYTE PTR es:[rdi],dx
   1400398a1:	jns    0x1400398c3
   1400398a3:	je     0x14003990d
   1400398a5:	and    BYTE PTR gs:[rdx+0x65],dh
   1400398a9:	jae    0x140039920
   1400398ab:	ins    BYTE PTR es:[rdi],dx
   1400398ac:	je     0x1400398ce
   1400398ae:	outs   dx,DWORD PTR ds:[rsi]
   1400398af:	data16 and BYTE PTR [rbx+0x61],ah
   1400398b3:	ins    BYTE PTR es:[rdi],dx
   1400398b4:	ins    BYTE PTR es:[rdi],dx
   1400398b5:	imul   ebp,DWORD PTR [rsi+0x67],0x206e6120
   1400398bc:	rex.WRB push r11
   1400398be:	rex.WB
   1400398bf:	rex.WR sub rax,0x706d6f63
   1400398c5:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x632f2820
   1400398cd:	ins    BYTE PTR es:[rdi],dx
   1400398ce:	jb     0x1400398f9
   1400398d0:	and    BYTE PTR [rsi+0x75],ah
   1400398d3:	outs   dx,BYTE PTR ds:[rsi]
   1400398d4:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   1400398d8:	outs   dx,BYTE PTR ds:[rsi]
   1400398d9:	and    BYTE PTR [rsi+0x72],ah
   1400398dc:	outs   dx,DWORD PTR ds:[rsi]
   1400398dd:	ins    DWORD PTR es:[rdi],dx
   1400398de:	and    BYTE PTR [rcx+0x20],ah
   1400398e1:	outs   dx,BYTE PTR ds:[rsi]
   1400398e2:	(bad)  
   1400398e3:	je     0x14003994e
   1400398e5:	jbe    0x14003994c
   1400398e7:	and    BYTE PTR [rbx+0x6f],ah
   1400398ea:	outs   dx,BYTE PTR ds:[rsi]
   1400398eb:	jae    0x140039961
   1400398ed:	jb     0x140039964
   1400398ef:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   1400398f3:	and    BYTE PTR [rdi+0x72],ch
   1400398f6:	and    BYTE PTR [rsi+0x72],ah
   1400398f9:	outs   dx,DWORD PTR ds:[rsi]
   1400398fa:	ins    DWORD PTR es:[rdi],dx
   1400398fb:	and    BYTE PTR [rsp+rbp*2+0x6c],al
   1400398ff:	rex.WRB (bad) 
   140039901:	imul   ebp,DWORD PTR [rsi+0x2e],0xa0d
   140039908:	push   rdx
   140039909:	xor    BYTE PTR ss:[rbx],dh
   14003990c:	xor    cl,BYTE PTR [rip+0x6e202d0a]        # 0x1ae23c61c
   140039912:	outs   dx,DWORD PTR ds:[rsi]
   140039913:	je     0x140039935
   140039915:	outs   dx,BYTE PTR gs:[rsi]
   140039917:	outs   dx,DWORD PTR ds:[rsi]
   140039918:	jne    0x140039981
   14003991a:	push   0x61707320
   14003991f:	movsxd esp,DWORD PTR [rbp+0x20]
   140039922:	outs   dx,WORD PTR ds:[rsi]
   140039924:	jb     0x140039946
   140039926:	ins    BYTE PTR es:[rdi],dx
   140039927:	outs   dx,DWORD PTR ds:[rsi]
   140039928:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003992b:	and    BYTE PTR gs:[rcx+0x6e],ch
   14003992f:	outs   dx,WORD PTR ds:[rsi]
   140039931:	jb     0x1400399a0
   140039933:	(bad)  
   140039934:	je     0x14003999f
   140039936:	outs   dx,DWORD PTR ds:[rsi]
   140039937:	outs   dx,BYTE PTR ds:[rsi]
   140039938:	or     eax,0xa
   14003993d:	add    BYTE PTR [rax],al
   14003993f:	add    BYTE PTR [rdx+0x36],dl
   140039942:	xor    BYTE PTR [rbx],dh
   140039944:	xor    DWORD PTR [rip+0x41202d0a],ecx        # 0x18123c654
   14003994a:	je     0x1400399c0
   14003994c:	gs ins DWORD PTR es:[rdi],dx
   14003994e:	jo     0x1400399c4
   140039950:	and    BYTE PTR [rdi+rbp*2+0x20],dh
   140039954:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   14003995b:	imul   edi,DWORD PTR [rdx+0x65],0x65687420
   140039962:	and    BYTE PTR [rbx+0x52],al
   140039965:	push   rsp
   140039966:	and    BYTE PTR [rbp+0x6f],ch
   140039969:	jb     0x1400399d0
   14003996b:	and    BYTE PTR [rax+rbp*2+0x61],dh
   14003996f:	outs   dx,BYTE PTR ds:[rsi]
   140039970:	and    BYTE PTR [rdi+0x6e],ch
   140039973:	movsxd esp,DWORD PTR [rbp+0x2e]
   140039976:	or     dl,BYTE PTR [rax+rbp*2+0x69]
   14003997a:	jae    0x14003999c
   14003997c:	imul   ebp,DWORD PTR [rsi+0x64],0x74616369
   140039983:	gs jae 0x1400399a6
   140039986:	(bad)  
   140039987:	and    BYTE PTR [rdx+0x75],ah
   14003998a:	and    BYTE PTR [ecx+0x6e],ch
   14003998e:	and    BYTE PTR [rcx+0x6f],bh
   140039991:	jne    0x140039a05
   140039993:	and    BYTE PTR [rcx+0x70],ah
   140039996:	jo     0x140039a04
   140039998:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003999f:	cs or  eax,0xa
   1400399a5:	add    BYTE PTR [rax],al
   1400399a7:	add    BYTE PTR [rdx+0x36],dl
   1400399aa:	xor    BYTE PTR [rbx],dh
   1400399ac:	xor    BYTE PTR [rip+0x43202d0a],cl        # 0x18323c6bc
   1400399b2:	push   rdx
   1400399b3:	push   rsp
   1400399b4:	and    BYTE PTR [rsi+0x6f],ch
   1400399b7:	je     0x1400399d9
   1400399b9:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400399c0:	imul   edi,DWORD PTR [rdx+0x65],0xa0d64
   1400399c7:	add    BYTE PTR [rdx+0x36],dl
   1400399ca:	xor    BYTE PTR [rdx],dh
   1400399cc:	cmp    BYTE PTR [rip+0x75202d0a],cl        # 0x1b523c6dc
   1400399d2:	outs   dx,BYTE PTR ds:[rsi]
   1400399d3:	(bad)  
   1400399d4:	(bad)  
   1400399d5:	ins    BYTE PTR es:[rdi],dx
   1400399d6:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   1400399db:	imul   ebp,DWORD PTR [rsi+0x69],0x6c616974
   1400399e2:	imul   edi,DWORD PTR [rdx+0x65],0x61656820
   1400399e9:	jo     0x1400399f8
   1400399eb:	or     al,BYTE PTR [rax]
   1400399ed:	add    BYTE PTR [rax],al
   1400399ef:	add    BYTE PTR [rdx+0x36],dl
   1400399f2:	xor    BYTE PTR [rdx],dh
   1400399f4:	(bad)  
   1400399f5:	or     eax,0x6e202d0a
   1400399fa:	outs   dx,DWORD PTR ds:[rsi]
   1400399fb:	je     0x140039a1d
   1400399fd:	outs   dx,BYTE PTR gs:[rsi]
   1400399ff:	outs   dx,DWORD PTR ds:[rsi]
   140039a00:	jne    0x140039a69
   140039a02:	push   0x61707320
   140039a07:	movsxd esp,DWORD PTR [rbp+0x20]
   140039a0a:	outs   dx,WORD PTR ds:[rsi]
   140039a0c:	jb     0x140039a2e
   140039a0e:	ins    BYTE PTR es:[rdi],dx
   140039a0f:	outs   dx,DWORD PTR ds:[rsi]
   140039a10:	ja     0x140039a7b
   140039a12:	outs   dx,DWORD PTR ds:[rsi]
   140039a13:	and    BYTE PTR [rcx+0x6e],ch
   140039a16:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x617a696c
   140039a1e:	je     0x140039a89
   140039a20:	outs   dx,DWORD PTR ds:[rsi]
   140039a21:	outs   dx,BYTE PTR ds:[rsi]
   140039a22:	or     eax,0xa
   140039a27:	add    BYTE PTR [rdx+0x36],dl
   140039a2a:	xor    BYTE PTR [rdx],dh
   140039a2c:	ss or  eax,0x6e202d0a
   140039a32:	outs   dx,DWORD PTR ds:[rsi]
   140039a33:	je     0x140039a55
   140039a35:	outs   dx,BYTE PTR gs:[rsi]
   140039a37:	outs   dx,DWORD PTR ds:[rsi]
   140039a38:	jne    0x140039aa1
   140039a3a:	push   0x61707320
   140039a3f:	movsxd esp,DWORD PTR [rbp+0x20]
   140039a42:	outs   dx,WORD PTR ds:[rsi]
   140039a44:	jb     0x140039a66
   140039a46:	jae    0x140039abc
   140039a48:	imul   ebp,DWORD PTR fs:[rdi+0x20],0x74696e69
   140039a50:	imul   esp,DWORD PTR [rcx+0x6c],0x74617a69
   140039a57:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0d
   140039a5e:	add    BYTE PTR [rax],al
   140039a60:	push   rdx
   140039a61:	xor    BYTE PTR ss:[rdx],dh
   140039a64:	xor    eax,0x202d0a0d
   140039a69:	jo     0x140039ae0
   140039a6b:	jb     0x140039ad2
   140039a6d:	and    BYTE PTR [rsi+0x69],dh
   140039a70:	jb     0x140039ae6
   140039a72:	jne    0x140039ad5
   140039a74:	ins    BYTE PTR es:[rdi],dx
   140039a75:	and    BYTE PTR [rsi+0x75],ah
   140039a78:	outs   dx,BYTE PTR ds:[rsi]
   140039a79:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   140039a7d:	outs   dx,BYTE PTR ds:[rsi]
   140039a7e:	and    BYTE PTR [rbx+0x61],ah
   140039a81:	ins    BYTE PTR es:[rdi],dx
   140039a82:	ins    BYTE PTR es:[rdi],dx
   140039a83:	or     eax,0xa
   140039a88:	push   rdx
   140039a89:	xor    BYTE PTR ss:[rdx],dh
   140039a8c:	xor    al,0xd
   140039a8e:	or     ch,BYTE PTR [rip+0x746f6e20]        # 0x1b47308b4
   140039a94:	and    BYTE PTR [rbp+0x6e],ah
   140039a97:	outs   dx,DWORD PTR ds:[rsi]
   140039a98:	jne    0x140039b01
   140039a9a:	push   0x61707320
   140039a9f:	movsxd esp,DWORD PTR [rbp+0x20]
   140039aa2:	outs   dx,WORD PTR ds:[rsi]
   140039aa4:	jb     0x140039ac6
   140039aa6:	pop    rdi
   140039aa7:	outs   dx,DWORD PTR ds:[rsi]
   140039aa8:	outs   dx,BYTE PTR ds:[rsi]
   140039aa9:	gs js  0x140039b15
   140039aac:	je     0x140039add
   140039aae:	(bad)  
   140039aaf:	je     0x140039b16
   140039ab1:	js     0x140039b1c
   140039ab3:	je     0x140039ad5
   140039ab5:	je     0x140039b18
   140039ab7:	(bad)  
   140039ab8:	ins    BYTE PTR es:[rdi],dx
   140039ab9:	gs or  eax,0xa
   140039abf:	add    BYTE PTR [rdx+0x36],dl
   140039ac2:	xor    BYTE PTR [rcx],dh
   140039ac4:	cmp    DWORD PTR [rip+0x75202d0a],ecx        # 0x1b523c7d4
   140039aca:	outs   dx,BYTE PTR ds:[rsi]
   140039acb:	(bad)  
   140039acc:	(bad)  
   140039acd:	ins    BYTE PTR es:[rdi],dx
   140039ace:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140039ad3:	outs   dx,DWORD PTR ds:[rsi]
   140039ad4:	jo     0x140039b3b
   140039ad6:	outs   dx,BYTE PTR ds:[rsi]
   140039ad7:	and    BYTE PTR [rbx+0x6f],ah
   140039ada:	outs   dx,BYTE PTR ds:[rsi]
   140039adb:	jae    0x140039b4c
   140039add:	ins    BYTE PTR es:[rdi],dx
   140039ade:	and    BYTE PTR gs:[rbp+riz*2+0x76],ah
   140039ae3:	imul   esp,DWORD PTR [rbx+0x65],0xa0d
   140039aea:	add    BYTE PTR [rax],al
   140039aec:	add    BYTE PTR [rax],al
   140039aee:	add    BYTE PTR [rax],al
   140039af0:	push   rdx
   140039af1:	xor    BYTE PTR ss:[rcx],dh
   140039af4:	cmp    BYTE PTR [rip+0x75202d0a],cl        # 0x1b523c804
   140039afa:	outs   dx,BYTE PTR ds:[rsi]
   140039afb:	gs js  0x140039b6e
   140039afe:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140039b03:	and    BYTE PTR [rax+0x65],ch
   140039b06:	(bad)  
   140039b07:	jo     0x140039b29
   140039b09:	gs jb  0x140039b7e
   140039b0c:	outs   dx,DWORD PTR ds:[rsi]
   140039b0d:	jb     0x140039b1c
   140039b0f:	or     al,BYTE PTR [rax]
   140039b11:	add    BYTE PTR [rax],al
   140039b13:	add    BYTE PTR [rax],al
   140039b15:	add    BYTE PTR [rax],al
   140039b17:	add    BYTE PTR [rdx+0x36],dl
   140039b1a:	xor    BYTE PTR [rcx],dh
   140039b1c:	(bad)  
   140039b1d:	or     eax,0x75202d0a
   140039b22:	outs   dx,BYTE PTR ds:[rsi]
   140039b23:	gs js  0x140039b96
   140039b26:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   140039b2b:	and    BYTE PTR [rbp+0x75],ch
   140039b2e:	ins    BYTE PTR es:[rdi],dx
   140039b2f:	je     0x140039b9a
   140039b31:	je     0x140039b9b
   140039b33:	jb     0x140039b9a
   140039b35:	(bad)  
   140039b36:	and    BYTE PTR fs:[rdi+rbp*2+0x63],ch
   140039b3b:	imul   esp,DWORD PTR [rax],0x65
   140039b3e:	jb     0x140039bb2
   140039b40:	outs   dx,DWORD PTR ds:[rsi]
   140039b41:	jb     0x140039b50
   140039b43:	or     al,BYTE PTR [rax]
   140039b45:	add    BYTE PTR [rax],al
   140039b47:	add    BYTE PTR [rdx+0x36],dl
   140039b4a:	xor    BYTE PTR [rcx],dh
   140039b4c:	ss or  eax,0x6e202d0a
   140039b52:	outs   dx,DWORD PTR ds:[rsi]
   140039b53:	je     0x140039b75
   140039b55:	outs   dx,BYTE PTR gs:[rsi]
   140039b57:	outs   dx,DWORD PTR ds:[rsi]
   140039b58:	jne    0x140039bc1
   140039b5a:	push   0x61707320
   140039b5f:	movsxd esp,DWORD PTR [rbp+0x20]
   140039b62:	outs   dx,WORD PTR ds:[rsi]
   140039b64:	jb     0x140039b86
   140039b66:	je     0x140039bd0
   140039b68:	jb     0x140039bcf
   140039b6a:	(bad)  
   140039b6b:	and    BYTE PTR fs:[rcx+riz*2+0x74],ah
   140039b70:	(bad)  
   140039b71:	or     eax,0xa
	...
   140039b7e:	add    BYTE PTR [rax],al
   140039b80:	or     eax,0x6968540a
   140039b85:	jae    0x140039ba7
   140039b87:	(bad)  
   140039b88:	jo     0x140039bfa
   140039b8a:	ins    BYTE PTR es:[rdi],dx
   140039b8b:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140039b92:	and    BYTE PTR [rax+0x61],ch
   140039b95:	jae    0x140039bb7
   140039b97:	jb     0x140039bfe
   140039b99:	jno    0x140039c10
   140039b9b:	gs jae 0x140039c12
   140039b9e:	gs and BYTE PTR fs:[rax+rbp*2+0x65],dh
   140039ba4:	and    BYTE PTR [rdx+0x75],dl
   140039ba7:	outs   dx,BYTE PTR ds:[rsi]
   140039ba8:	je     0x140039c13
   140039baa:	ins    DWORD PTR es:[rdi],dx
   140039bab:	and    BYTE PTR gs:[rdi+rbp*2+0x20],dh
   140039bb0:	je     0x140039c17
   140039bb2:	jb     0x140039c21
   140039bb4:	imul   ebp,DWORD PTR [rsi+0x61],0x69206574
   140039bbb:	je     0x140039bdd
   140039bbd:	imul   ebp,DWORD PTR [rsi+0x20],0x75206e61
   140039bc4:	outs   dx,BYTE PTR ds:[rsi]
   140039bc5:	jne    0x140039c3a
   140039bc7:	jne    0x140039c2a
   140039bc9:	ins    BYTE PTR es:[rdi],dx
   140039bca:	and    BYTE PTR [rdi+0x61],dh
   140039bcd:	jns    0x140039bfd
   140039bcf:	or     dl,BYTE PTR [rax+0x6c]
   140039bd2:	gs (bad) 
   140039bd4:	jae    0x140039c3b
   140039bd6:	and    BYTE PTR [rbx+0x6f],ah
   140039bd9:	outs   dx,BYTE PTR ds:[rsi]
   140039bda:	je     0x140039c3d
   140039bdc:	movsxd esi,DWORD PTR [rax+riz*1+0x74]
   140039be0:	push   0x70612065
   140039be5:	jo     0x140039c53
   140039be7:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   140039bee:	(bad)  
   140039bef:	jae    0x140039c11
   140039bf1:	jae    0x140039c68
   140039bf3:	jo     0x140039c65
   140039bf5:	outs   dx,DWORD PTR ds:[rsi]
   140039bf6:	jb     0x140039c6c
   140039bf8:	and    BYTE PTR [rbp+riz*2+0x61],dh
   140039bfc:	ins    DWORD PTR es:[rdi],dx
   140039bfd:	and    BYTE PTR [rsi+0x6f],ah
   140039c00:	jb     0x140039c22
   140039c02:	ins    DWORD PTR es:[rdi],dx
   140039c03:	outs   dx,DWORD PTR ds:[rsi]
   140039c04:	jb     0x140039c6b
   140039c06:	and    BYTE PTR [rcx+0x6e],ch
   140039c09:	outs   dx,WORD PTR ds:[rsi]
   140039c0b:	jb     0x140039c7a
   140039c0d:	(bad)  
   140039c0e:	je     0x140039c79
   140039c10:	outs   dx,DWORD PTR ds:[rsi]
   140039c11:	outs   dx,BYTE PTR ds:[rsi]
   140039c12:	cs or  eax,0xa
   140039c18:	push   rdx
   140039c19:	xor    BYTE PTR ss:[rax],dh
   140039c1c:	cmp    DWORD PTR [rip+0x6e202d0a],ecx        # 0x1ae23c92c
   140039c22:	outs   dx,DWORD PTR ds:[rsi]
   140039c23:	je     0x140039c45
   140039c25:	outs   dx,BYTE PTR gs:[rsi]
   140039c27:	outs   dx,DWORD PTR ds:[rsi]
   140039c28:	jne    0x140039c91
   140039c2a:	push   0x61707320
   140039c2f:	movsxd esp,DWORD PTR [rbp+0x20]
   140039c32:	outs   dx,WORD PTR ds:[rsi]
   140039c34:	jb     0x140039c56
   140039c36:	outs   dx,BYTE PTR gs:[rsi]
   140039c38:	jbe    0x140039ca3
   140039c3a:	jb     0x140039cab
   140039c3c:	outs   dx,BYTE PTR ds:[rsi]
   140039c3d:	ins    DWORD PTR es:[rdi],dx
   140039c3e:	outs   dx,BYTE PTR gs:[rsi]
   140039c40:	je     0x140039c4f
   140039c42:	or     al,BYTE PTR [rax]
   140039c44:	add    BYTE PTR [rax],al
   140039c46:	add    BYTE PTR [rax],al
   140039c48:	push   rdx
   140039c49:	xor    BYTE PTR ss:[rax],dh
   140039c4c:	cmp    BYTE PTR [rip+0x6e202d0a],cl        # 0x1ae23c95c
   140039c52:	outs   dx,DWORD PTR ds:[rsi]
   140039c53:	je     0x140039c75
   140039c55:	outs   dx,BYTE PTR gs:[rsi]
   140039c57:	outs   dx,DWORD PTR ds:[rsi]
   140039c58:	jne    0x140039cc1
   140039c5a:	push   0x61707320
   140039c5f:	movsxd esp,DWORD PTR [rbp+0x20]
   140039c62:	outs   dx,WORD PTR ds:[rsi]
   140039c64:	jb     0x140039c86
   140039c66:	(bad)  
   140039c67:	jb     0x140039cd0
   140039c69:	jne    0x140039cd8
   140039c6b:	outs   dx,BYTE PTR gs:[rsi]
   140039c6d:	je     0x140039ce2
   140039c6f:	or     eax,0xa
   140039c74:	add    BYTE PTR [rax],al
   140039c76:	add    BYTE PTR [rax],al
   140039c78:	push   rdx
   140039c79:	xor    BYTE PTR ss:[rax],dh
   140039c7c:	xor    cl,BYTE PTR [rip+0x66202d0a]        # 0x1a623c98c
   140039c82:	ins    BYTE PTR es:[rdi],dx
   140039c83:	outs   dx,DWORD PTR ds:[rsi]
   140039c84:	(bad)  
   140039c85:	je     0x140039cf0
   140039c87:	outs   dx,BYTE PTR ds:[rsi]
   140039c88:	and    BYTE PTR [eax+0x6f],dh
   140039c8c:	imul   ebp,DWORD PTR [rsi+0x74],0x70757320
   140039c93:	jo     0x140039d04
   140039c95:	jb     0x140039d0b
   140039c97:	and    BYTE PTR [rsi+0x6f],ch
   140039c9a:	je     0x140039cbc
   140039c9c:	ins    BYTE PTR es:[rdi],dx
   140039c9d:	outs   dx,DWORD PTR ds:[rsi]
   140039c9e:	(bad)  
   140039c9f:	fs gs fs or eax,0xa
   140039ca7:	add    BYTE PTR [rbp+0x69],cl
   140039caa:	movsxd esi,DWORD PTR [rdx+0x6f]
   140039cad:	jae    0x140039d1e
   140039caf:	data16 je 0x140039cd2
   140039cb2:	push   rsi
   140039cb3:	imul   esi,DWORD PTR [rbx+0x75],0x43206c61
   140039cba:	sub    ebp,DWORD PTR [rbx]
   140039cbc:	and    BYTE PTR [rdx+0x75],dl
   140039cbf:	outs   dx,BYTE PTR ds:[rsi]
   140039cc0:	je     0x140039d2b
   140039cc2:	ins    DWORD PTR es:[rdi],dx
   140039cc3:	and    BYTE PTR gs:[rcx+rbp*2+0x62],cl
   140039cc8:	jb     0x140039d2b
   140039cca:	jb     0x140039d45
   140039ccc:	add    BYTE PTR [rax],al
   140039cce:	add    BYTE PTR [rax],al
   140039cd0:	or     cl,BYTE PTR [rdx]
   140039cd2:	add    BYTE PTR [rax],al
   140039cd4:	cs cs add BYTE PTR cs:[rax+rsi*2],bh
   140039cda:	jb     0x140039d4b
   140039cdc:	addr32 jb 0x140039d40
   140039cdf:	ins    DWORD PTR es:[rdi],dx
   140039ce0:	and    BYTE PTR [rsi+0x61],ch
   140039ce3:	ins    DWORD PTR es:[rdi],dx
   140039ce4:	and    BYTE PTR gs:[rbp+0x6e],dh
   140039ce8:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   140039cec:	outs   dx,BYTE PTR ds:[rsi]
   140039ced:	add    BYTE PTR ds:[rax],al
   140039cf0:	push   rdx
   140039cf1:	jne    0x140039d61
   140039cf3:	je     0x140039d5e
   140039cf5:	ins    DWORD PTR es:[rdi],dx
   140039cf6:	and    BYTE PTR gs:[rbp+0x72],al
   140039cfa:	jb     0x140039d6b
   140039cfc:	jb     0x140039d1f
   140039cfe:	or     cl,BYTE PTR [rdx]
   140039d00:	push   rax
   140039d01:	jb     0x140039d72
   140039d03:	addr32 jb 0x140039d67
   140039d06:	ins    DWORD PTR es:[rdi],dx
   140039d07:	cmp    ah,BYTE PTR [rax]
   140039d09:	add    BYTE PTR [rax],al
   140039d0b:	add    BYTE PTR [rax],al
   140039d0d:	add    BYTE PTR [rax],al
   140039d0f:	add    BYTE PTR [rip+0xbc00000],al        # 0x14bc39d15
	...
   140039d1d:	add    BYTE PTR [rax],al
   140039d1f:	add    BYTE PTR [rip+0x4c00000],bl        # 0x144c39d25
	...
   140039d2d:	add    BYTE PTR [rax],al
   140039d2f:	add    BYTE PTR [rsi+0x4c00000],dl
	...
   140039d3d:	add    BYTE PTR [rax],al
   140039d3f:	add    BYTE PTR [rbp+0x8c00000],cl
	...
   140039d4d:	add    BYTE PTR [rax],al
   140039d4f:	add    BYTE PTR [rsi+0x8c00000],cl
	...
   140039d5d:	add    BYTE PTR [rax],al
   140039d5f:	add    BYTE PTR [rdi+0x8c00000],cl
	...
   140039d6d:	add    BYTE PTR [rax],al
   140039d6f:	add    BYTE PTR [rax+0x8c00000],dl
	...
   140039d7d:	add    BYTE PTR [rax],al
   140039d7f:	add    BYTE PTR [rcx+0x8c00000],dl
	...
   140039d8d:	add    BYTE PTR [rax],al
   140039d8f:	add    BYTE PTR [rdx+0x8c00000],dl
	...
   140039d9d:	add    BYTE PTR [rax],al
   140039d9f:	add    BYTE PTR [rbx+0x8c00000],dl
	...
   140039dad:	add    BYTE PTR [rax],al
   140039daf:	add    BYTE PTR [rax+0x14001ad],cl
   140039db5:	add    BYTE PTR [rax],al
   140039db7:	add    BYTE PTR [rax-0x7],al
   140039dba:	add    eax,DWORD PTR [rax+0x1]
   140039dbd:	add    BYTE PTR [rax],al
   140039dbf:	add    BYTE PTR [rax-0x56],cl
   140039dc2:	add    DWORD PTR [rax+0x1],eax
   140039dc5:	add    BYTE PTR [rax],al
   140039dc7:	add    BYTE PTR [rdi+rax*2],bh
   140039dca:	add    DWORD PTR [rax+0x1],eax
   140039dcd:	add    BYTE PTR [rax],al
   140039dcf:	add    BYTE PTR [rdx+0x61],ah
   140039dd2:	and    BYTE PTR fs:[rbp+0x78],ah
   140039dd6:	movsxd esp,DWORD PTR [rbp+0x70]
   140039dd9:	je     0x140039e44
   140039ddb:	outs   dx,DWORD PTR ds:[rsi]
   140039ddc:	outs   dx,BYTE PTR ds:[rsi]
   140039ddd:	add    BYTE PTR [rax],al
   140039ddf:	add    BYTE PTR [rax],ch
   140039de1:	add    BYTE PTR [rsi+0x0],ch
   140039de4:	jne    0x140039de6
   140039de6:	ins    BYTE PTR es:[rdi],dx
   140039de7:	add    BYTE PTR [rax+rax*1+0x29],ch
   140039deb:	add    BYTE PTR [rax],al
   140039ded:	add    BYTE PTR [rax],al
   140039def:	add    BYTE PTR [rax],ch
   140039df1:	outs   dx,BYTE PTR ds:[rsi]
   140039df2:	jne    0x140039e60
   140039df4:	ins    BYTE PTR es:[rdi],dx
   140039df5:	sub    DWORD PTR [rax],eax
	...
   140039dff:	add    BYTE PTR [rsi],al
   140039e01:	add    BYTE PTR [rax],al
   140039e03:	(bad)  
   140039e04:	add    BYTE PTR [rcx],al
   140039e06:	add    BYTE PTR [rax],al
   140039e08:	adc    BYTE PTR [rax],al
   140039e0a:	add    eax,DWORD PTR [rsi]
   140039e0c:	add    BYTE PTR [rsi],al
   140039e0e:	add    dl,BYTE PTR [rax]
   140039e10:	add    al,0x45
   140039e12:	rex.RB
   140039e13:	rex.RB add eax,0x5050505
   140039e19:	xor    eax,0x500030
   140039e1e:	add    BYTE PTR [rax],al
   140039e20:	add    BYTE PTR [rax],ch
   140039e22:	and    BYTE PTR [rax],bh
   140039e24:	push   rax
   140039e25:	pop    rax
   140039e26:	(bad)  
   140039e27:	or     BYTE PTR [rax],al
   140039e29:	(bad)  
   140039e2a:	xor    BYTE PTR [rax],dh
   140039e2c:	push   rdi
   140039e2d:	push   rax
   140039e2e:	(bad)  
   140039e2f:	add    BYTE PTR [rax],al
   140039e31:	and    BYTE PTR [rax],ah
   140039e33:	or     BYTE PTR [rax],al
   140039e35:	add    BYTE PTR [rax],al
   140039e37:	add    BYTE PTR [rax],cl
   140039e39:	(bad)  
   140039e3a:	push   0x60606060
   140039e3f:	add    BYTE PTR [rax],al
   140039e41:	js     0x140039eb3
   140039e43:	js     0x140039ebd
   140039e45:	js     0x140039ebf
   140039e47:	or     BYTE PTR [rdi],al
   140039e49:	or     BYTE PTR [rax],al
   140039e4b:	add    BYTE PTR [rdi],al
   140039e4d:	add    BYTE PTR [rax],cl
   140039e4f:	or     BYTE PTR [rax],cl
   140039e51:	add    BYTE PTR [rax],al
   140039e53:	or     BYTE PTR [rax],al
   140039e55:	or     BYTE PTR [rax],al
   140039e57:	(bad)  
   140039e58:	or     BYTE PTR [rax],al
   140039e5a:	add    BYTE PTR [rax],al
   140039e5c:	add    BYTE PTR [rax],al
   140039e5e:	add    BYTE PTR [rax],al
   140039e60:	(bad)  
   140039e61:	add    BYTE PTR [rax-0x7f7e7f7a],0x0
   140039e68:	add    BYTE PTR [rax],dl
   140039e6a:	add    eax,DWORD PTR [rsi-0x7f7d7980]
   140039e70:	adc    al,0x5
   140039e72:	add    eax,0x85454545
   140039e77:	test   DWORD PTR [rbp+0x30000005],eax
   140039e7d:	xor    BYTE PTR [rax+0x888050],al
   140039e83:	or     BYTE PTR [rax],al
   140039e85:	sub    BYTE PTR [rdi],ah
   140039e87:	cmp    BYTE PTR [rax+0x57],dl
   140039e8a:	add    BYTE PTR [rax],0x7
   140039e8d:	add    BYTE PTR [rdi],dh
   140039e8f:	xor    BYTE PTR [rax],dh
   140039e91:	push   rax
   140039e92:	push   rax
   140039e93:	mov    BYTE PTR [rax],al
   140039e95:	add    BYTE PTR [rax],al
   140039e97:	and    BYTE PTR [rax],ch
   140039e99:	or     BYTE PTR [rax+0x8080],0x0
   140039ea0:	(bad)  
   140039ea1:	push   0x68686860
   140039ea6:	or     BYTE PTR [rax],cl
   140039ea8:	(bad)  
   140039ea9:	js     0x140039f1b
   140039eab:	jo     0x140039f24
   140039ead:	jo     0x140039f1f
   140039eaf:	or     BYTE PTR [rax],cl
   140039eb1:	add    BYTE PTR [rax],al
   140039eb3:	or     BYTE PTR [rax],al
   140039eb5:	or     BYTE PTR [rax],al
   140039eb7:	(bad)  
   140039eb8:	or     BYTE PTR [rax],al
	...
   140039ec6:	add    BYTE PTR [rax],al
   140039ec8:	sub    esi,DWORD PTR gs:[rax]
   140039ecb:	xor    BYTE PTR [rax],dh
   140039ecd:	add    BYTE PTR [rax],al
   140039ecf:	add    BYTE PTR [rbx+0x75],dl
   140039ed2:	outs   dx,BYTE PTR ds:[rsi]
   140039ed3:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   140039ed5:	outs   dx,BYTE PTR ds:[rsi]
   140039ed6:	push   rsp
   140039ed7:	jne    0x140039f3e
   140039ed9:	push   rdi
   140039eda:	gs fs push rsp
   140039edd:	push   0x69724675
   140039ee2:	push   rbx
   140039ee3:	(bad)  
   140039ee4:	je     0x140039ee6
   140039ee6:	add    BYTE PTR [rax],al
   140039ee8:	rex.WX (bad) 
   140039eea:	outs   dx,BYTE PTR ds:[rsi]
   140039eeb:	rex.RX
   140039eec:	gs (bad) 
   140039eee:	rex.WRB (bad) 
   140039ef0:	jb     0x140039f33
   140039ef2:	jo     0x140039f66
   140039ef4:	rex.WRB (bad) 
   140039ef6:	jns    0x140039f42
   140039ef8:	jne    0x140039f68
   140039efa:	rex.WX jne 0x140039f69
   140039efd:	rex.B jne 0x140039f67
   140039f00:	push   rbx
   140039f01:	gs jo  0x140039f53
   140039f04:	movsxd esi,DWORD PTR [rsi+rcx*2+0x6f]
   140039f08:	jbe    0x140039f4e
   140039f0a:	movsxd eax,DWORD PTR gs:[rax]
   140039f0d:	add    BYTE PTR [rax],al
   140039f0f:	add    BYTE PTR [rax],ah
   140039f11:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140039f13:	ins    DWORD PTR es:[rdi],dx
   140039f14:	jo     0x140039f82
   140039f16:	gs je  0x140039f7e
   140039f19:	and    BYTE PTR [rdi+0x62],cl
   140039f1c:	push   0x65
   140039f1e:	movsxd esi,DWORD PTR [rax+riz*1+0x4c]
   140039f22:	outs   dx,DWORD PTR ds:[rsi]
   140039f23:	movsxd esp,DWORD PTR [rcx+0x74]
   140039f26:	outs   dx,DWORD PTR ds:[rsi]
   140039f27:	jb     0x140039f50
   140039f29:	add    BYTE PTR [rax],al
   140039f2b:	add    BYTE PTR [rax],al
   140039f2d:	add    BYTE PTR [rax],al
   140039f2f:	add    BYTE PTR [rax],ah
   140039f31:	rex.XB ins BYTE PTR es:[rdi],dx
   140039f33:	(bad)  
   140039f34:	jae    0x140039fa9
   140039f36:	and    BYTE PTR [rax+0x69],cl
   140039f39:	gs jb  0x140039f9d
   140039f3c:	jb     0x140039fa1
   140039f3e:	push   0x65442079
   140039f43:	jae    0x140039fa8
   140039f45:	jb     0x140039fb0
   140039f47:	jo     0x140039fbd
   140039f49:	outs   dx,DWORD PTR ds:[rsi]
   140039f4a:	jb     0x140039f73
   140039f4c:	add    BYTE PTR [rax],al
   140039f4e:	add    BYTE PTR [rax],al
   140039f50:	and    BYTE PTR [rdx+0x61],al
   140039f53:	jae    0x140039fba
   140039f55:	and    BYTE PTR [rbx+0x6c],al
   140039f58:	(bad)  
   140039f59:	jae    0x140039fce
   140039f5b:	and    BYTE PTR [rcx+0x72],al
   140039f5e:	jb     0x140039fc1
   140039f60:	jns    0x140039f89
   140039f62:	add    BYTE PTR [rax],al
   140039f64:	add    BYTE PTR [rax],al
   140039f66:	add    BYTE PTR [rax],al
   140039f68:	and    BYTE PTR [rdx+0x61],al
   140039f6b:	jae    0x140039fd2
   140039f6d:	and    BYTE PTR [rbx+0x6c],al
   140039f70:	(bad)  
   140039f71:	jae    0x140039fe6
   140039f73:	and    BYTE PTR [rbp+riz*2+0x73],al
   140039f77:	movsxd esi,DWORD PTR [rdx+0x69]
   140039f7a:	jo     0x140039ff0
   140039f7c:	outs   dx,DWORD PTR ds:[rsi]
   140039f7d:	jb     0x140039f9f
   140039f7f:	(bad)  
   140039f80:	je     0x140039fa2
   140039f82:	sub    BYTE PTR [rax],al
   140039f84:	add    BYTE PTR [rax],al
   140039f86:	add    BYTE PTR [rax],al
   140039f88:	and    BYTE PTR [rcx+rdi*2+0x70],dl
   140039f8c:	and    BYTE PTR gs:[rbp+riz*2+0x73],al
   140039f91:	movsxd esi,DWORD PTR [rdx+0x69]
   140039f94:	jo     0x14003a00a
   140039f96:	outs   dx,DWORD PTR ds:[rsi]
   140039f97:	jb     0x140039fc0
   140039f99:	add    BYTE PTR [rax],al
   140039f9b:	add    BYTE PTR [rax],al
   140039f9d:	add    BYTE PTR [rax],al
   140039f9f:	add    BYTE PTR [rax+0x6c],ah
   140039fa2:	outs   dx,DWORD PTR ds:[rsi]
   140039fa3:	movsxd esp,DWORD PTR [rcx+0x6c]
   140039fa6:	and    BYTE PTR [rbx+0x74],dh
   140039fa9:	(bad)  
   140039faa:	je     0x14003a015
   140039fac:	movsxd esp,DWORD PTR [rax]
   140039fae:	je     0x14003a018
   140039fb0:	jb     0x14003a017
   140039fb2:	(bad)  
   140039fb3:	and    BYTE PTR fs:[rdi+0x75],ah
   140039fb7:	(bad)  
   140039fb8:	jb     0x14003a01e
   140039fba:	(bad)  
   140039fbb:	add    BYTE PTR [rax],al
   140039fbd:	add    BYTE PTR [rax],al
   140039fbf:	add    BYTE PTR [rax+0x6d],ah
   140039fc2:	(bad)  
   140039fc3:	outs   dx,BYTE PTR ds:[rsi]
   140039fc4:	(bad)  
   140039fc5:	gs and BYTE PTR fs:[esi+0x65],dh
   140039fcb:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140039fcf:	and    BYTE PTR [rbx+0x6f],ah
   140039fd2:	jo     0x14003a04d
   140039fd4:	and    BYTE PTR [rbx+0x6f],ah
   140039fd7:	outs   dx,BYTE PTR ds:[rsi]
   140039fd8:	jae    0x14003a04e
   140039fda:	jb     0x14003a051
   140039fdc:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140039fe0:	and    BYTE PTR [rcx+0x74],ch
   140039fe3:	gs jb  0x14003a047
   140039fe6:	je     0x14003a057
   140039fe8:	jb     0x14003a011
   140039fea:	add    BYTE PTR [rax],al
   140039fec:	add    BYTE PTR [rax],al
   140039fee:	add    BYTE PTR [rax],al
   140039ff0:	(bad)  
   140039ff1:	jbe    0x14003a058
   140039ff3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   140039ff7:	and    BYTE PTR [rsi+0x62],dh
   140039ffa:	(bad)  
   140039ffb:	jae    0x14003a062
   140039ffd:	and    BYTE PTR [rbx+0x6f],ah
   14003a000:	jo     0x14003a07b
   14003a002:	and    BYTE PTR [rbx+0x6f],ah
   14003a005:	outs   dx,BYTE PTR ds:[rsi]
   14003a006:	jae    0x14003a07c
   14003a008:	jb     0x14003a07f
   14003a00a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a00e:	and    BYTE PTR [rcx+0x74],ch
   14003a011:	gs jb  0x14003a075
   14003a014:	je     0x14003a085
   14003a016:	jb     0x14003a03f
	...
   14003a020:	(bad)  
   14003a021:	jbe    0x14003a088
   14003a023:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a027:	and    BYTE PTR [rbx+0x6f],ah
   14003a02a:	jo     0x14003a0a5
   14003a02c:	and    BYTE PTR [rbx+0x6f],ah
   14003a02f:	outs   dx,BYTE PTR ds:[rsi]
   14003a030:	jae    0x14003a0a6
   14003a032:	jb     0x14003a0a9
   14003a034:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a038:	and    BYTE PTR [rcx+0x74],ch
   14003a03b:	gs jb  0x14003a09f
   14003a03e:	je     0x14003a0af
   14003a040:	jb     0x14003a069
   14003a042:	add    BYTE PTR [rax],al
   14003a044:	add    BYTE PTR [rax],al
   14003a046:	add    BYTE PTR [rax],al
   14003a048:	(bad)  
   14003a049:	fs jns 0x14003a0ba
   14003a04c:	(bad)  
   14003a04d:	ins    DWORD PTR es:[rdi],dx
   14003a04e:	imul   esp,DWORD PTR [rbx+0x20],0x78657461
   14003a055:	imul   esi,DWORD PTR [rax+riz*1+0x64],0x72747365
   14003a05d:	jne    0x14003a0c2
   14003a05f:	je     0x14003a0d0
   14003a061:	jb     0x14003a083
   14003a063:	outs   dx,WORD PTR ds:[rsi]
   14003a065:	jb     0x14003a087
   14003a067:	(bad)  
	...
   14003a070:	(bad)  
   14003a071:	fs jns 0x14003a0e2
   14003a074:	(bad)  
   14003a075:	ins    DWORD PTR es:[rdi],dx
   14003a076:	imul   esp,DWORD PTR [rbx+0x20],0x74696e69
   14003a07d:	imul   esp,DWORD PTR [rcx+0x6c],0x72657a69
   14003a084:	and    BYTE PTR [rsi+0x6f],ah
   14003a087:	jb     0x14003a0a9
   14003a089:	(bad)  
   14003a08a:	add    BYTE PTR [rax],al
   14003a08c:	add    BYTE PTR [rax],al
   14003a08e:	add    BYTE PTR [rax],al
   14003a090:	(bad)  
   14003a091:	gs push 0x63657620
   14003a097:	je     0x14003a108
   14003a099:	jb     0x14003a0bb
   14003a09b:	jbe    0x14003a0ff
   14003a09d:	(bad)  
   14003a09e:	jae    0x14003a105
   14003a0a0:	and    BYTE PTR [rbx+0x6f],ah
   14003a0a3:	jo     0x14003a11e
   14003a0a5:	and    BYTE PTR [rbx+0x6f],ah
   14003a0a8:	outs   dx,BYTE PTR ds:[rsi]
   14003a0a9:	jae    0x14003a11f
   14003a0ab:	jb     0x14003a122
   14003a0ad:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a0b1:	and    BYTE PTR [rcx+0x74],ch
   14003a0b4:	gs jb  0x14003a118
   14003a0b7:	je     0x14003a128
   14003a0b9:	jb     0x14003a0e2
   14003a0bb:	add    BYTE PTR [rax],al
   14003a0bd:	add    BYTE PTR [rax],al
   14003a0bf:	add    BYTE PTR [rax+0x65],ah
   14003a0c2:	push   0x63657620
   14003a0c7:	je     0x14003a138
   14003a0c9:	jb     0x14003a0eb
   14003a0cb:	movsxd ebp,DWORD PTR [rdi+0x70]
   14003a0ce:	jns    0x14003a0f0
   14003a0d0:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003a0d3:	jae    0x14003a149
   14003a0d5:	jb     0x14003a14c
   14003a0d7:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a0db:	and    BYTE PTR [rcx+0x74],ch
   14003a0de:	gs jb  0x14003a142
   14003a0e1:	je     0x14003a152
   14003a0e3:	jb     0x14003a10c
   14003a0e5:	add    BYTE PTR [rax],al
   14003a0e7:	add    BYTE PTR [rax+0x6d],ah
   14003a0ea:	(bad)  
   14003a0eb:	outs   dx,BYTE PTR ds:[rsi]
   14003a0ec:	(bad)  
   14003a0ed:	gs and BYTE PTR fs:[esi+0x65],dh
   14003a0f3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a0f7:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14003a0fb:	je     0x14003a16f
   14003a0fd:	jne    0x14003a162
   14003a0ff:	je     0x14003a170
   14003a101:	jb     0x14003a123
   14003a103:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14003a10b:	(bad)  
   14003a10c:	add    BYTE PTR [rax],al
   14003a10e:	add    BYTE PTR [rax],al
   14003a110:	(bad)  
   14003a111:	ins    DWORD PTR es:[rdi],dx
   14003a112:	(bad)  
   14003a113:	outs   dx,BYTE PTR ds:[rsi]
   14003a114:	(bad)  
   14003a115:	gs and BYTE PTR fs:[esi+0x65],dh
   14003a11b:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a11f:	and    BYTE PTR [rbx+0x6f],ah
   14003a122:	outs   dx,BYTE PTR ds:[rsi]
   14003a123:	jae    0x14003a199
   14003a125:	jb     0x14003a19c
   14003a127:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a12b:	and    BYTE PTR [rcx+0x74],ch
   14003a12e:	gs jb  0x14003a192
   14003a131:	je     0x14003a1a2
   14003a133:	jb     0x14003a15c
   14003a135:	add    BYTE PTR [rax],al
   14003a137:	add    BYTE PTR [rax+0x70],ah
   14003a13a:	ins    BYTE PTR es:[rdi],dx
   14003a13b:	(bad)  
   14003a13c:	movsxd esp,DWORD PTR [rbp+0x6d]
   14003a13f:	outs   dx,BYTE PTR gs:[rsi]
   14003a141:	je     0x14003a163
   14003a143:	fs gs ins BYTE PTR es:[rdi],dx
   14003a146:	gs je  0x14003a1ae
   14003a149:	pop    rbx
   14003a14a:	pop    rbp
   14003a14b:	and    BYTE PTR [rbx+0x6c],ah
   14003a14e:	outs   dx,DWORD PTR ds:[rsi]
   14003a14f:	jae    0x14003a1c6
   14003a151:	jb     0x14003a1b8
   14003a153:	(bad)  
   14003a154:	add    BYTE PTR [rax],al
   14003a156:	add    BYTE PTR [rax],al
   14003a158:	(bad)  
   14003a159:	jo     0x14003a1c7
   14003a15b:	(bad)  
   14003a15c:	movsxd esp,DWORD PTR [rbp+0x6d]
   14003a15f:	outs   dx,BYTE PTR gs:[rsi]
   14003a161:	je     0x14003a183
   14003a163:	fs gs ins BYTE PTR es:[rdi],dx
   14003a166:	gs je  0x14003a1ce
   14003a169:	and    BYTE PTR [rbx+0x6c],ah
   14003a16c:	outs   dx,DWORD PTR ds:[rsi]
   14003a16d:	jae    0x14003a1e4
   14003a16f:	jb     0x14003a1d6
   14003a171:	(bad)  
   14003a172:	add    BYTE PTR [rax],al
   14003a174:	add    BYTE PTR [rax],al
   14003a176:	add    BYTE PTR [rax],al
   14003a178:	(bad)  
   14003a179:	outs   dx,DWORD PTR ds:[rsi]
   14003a17a:	ins    DWORD PTR es:[rdi],dx
   14003a17b:	outs   dx,BYTE PTR ds:[rsi]
   14003a17c:	imul   esp,DWORD PTR [rax],0x6c6c6163
   14003a182:	jae    0x14003a1ed
   14003a184:	addr32 (bad) 
   14003a186:	add    BYTE PTR [rax],al
   14003a188:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14003a18c:	gs je  0x14003a1f4
   14003a18f:	pop    rbx
   14003a190:	pop    rbp
   14003a191:	add    BYTE PTR [rax],al
   14003a193:	add    BYTE PTR [rax],ah
   14003a195:	outs   dx,BYTE PTR ds:[rsi]
   14003a196:	gs ja  0x14003a1f4
   14003a199:	pop    rbp
   14003a19a:	add    BYTE PTR [rax],al
   14003a19c:	add    BYTE PTR [rax],al
   14003a19e:	add    BYTE PTR [rax],al
   14003a1a0:	(bad)  
   14003a1a1:	ins    BYTE PTR es:[rdi],dx
   14003a1a2:	outs   dx,DWORD PTR ds:[rsi]
   14003a1a3:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a1a6:	and    BYTE PTR [rsi+0x66],dh
   14003a1a9:	je     0x14003a20c
   14003a1ab:	(bad)  
   14003a1ac:	ins    BYTE PTR es:[rdi],dx
   14003a1ad:	and    BYTE PTR gs:[rbx+0x6f],ah
   14003a1b1:	outs   dx,BYTE PTR ds:[rsi]
   14003a1b2:	jae    0x14003a228
   14003a1b4:	jb     0x14003a22b
   14003a1b6:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a1ba:	and    BYTE PTR [rbx+0x6c],ah
   14003a1bd:	outs   dx,DWORD PTR ds:[rsi]
   14003a1be:	jae    0x14003a235
   14003a1c0:	jb     0x14003a227
   14003a1c2:	(bad)  
   14003a1c3:	add    BYTE PTR [rax],al
   14003a1c5:	add    BYTE PTR [rax],al
   14003a1c7:	add    BYTE PTR [rax+0x6c],ah
   14003a1ca:	outs   dx,DWORD PTR ds:[rsi]
   14003a1cb:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a1ce:	and    BYTE PTR [rsi+0x66],dh
   14003a1d1:	je     0x14003a234
   14003a1d3:	(bad)  
   14003a1d4:	ins    BYTE PTR es:[rdi],dx
   14003a1d5:	gs (bad) 
   14003a1d7:	add    BYTE PTR [rax+0x52],ah
   14003a1da:	push   rsp
   14003a1db:	push   rsp
   14003a1dc:	rex.WB add BYTE PTR [r8],al
   14003a1df:	add    BYTE PTR [rax+0x45],ah
   14003a1e2:	rex.W add BYTE PTR [rax],al
   14003a1e5:	add    BYTE PTR [rax],al
   14003a1e7:	add    BYTE PTR [rax+0x75],ah
   14003a1ea:	fs je  0x14003a20d
   14003a1ed:	jb     0x14003a254
   14003a1ef:	je     0x14003a266
   14003a1f1:	jb     0x14003a261
   14003a1f3:	imul   ebp,DWORD PTR [rsi+0x67],0x63600027
   14003a1fa:	outs   dx,DWORD PTR ds:[rsi]
   14003a1fb:	jo     0x14003a276
   14003a1fd:	and    BYTE PTR [rbx+0x6f],ah
   14003a200:	outs   dx,BYTE PTR ds:[rsi]
   14003a201:	jae    0x14003a277
   14003a203:	jb     0x14003a27a
   14003a205:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a209:	and    BYTE PTR [rbx+0x6c],ah
   14003a20c:	outs   dx,DWORD PTR ds:[rsi]
   14003a20d:	jae    0x14003a284
   14003a20f:	jb     0x14003a276
   14003a211:	(bad)  
   14003a212:	add    BYTE PTR [rax],al
   14003a214:	add    BYTE PTR [rax],al
   14003a216:	add    BYTE PTR [rax],al
   14003a218:	(bad)  
   14003a219:	gs push 0x63657620
   14003a21f:	je     0x14003a290
   14003a221:	jb     0x14003a243
   14003a223:	jbe    0x14003a287
   14003a225:	(bad)  
   14003a226:	jae    0x14003a28d
   14003a228:	and    BYTE PTR [rbx+0x6f],ah
   14003a22b:	outs   dx,BYTE PTR ds:[rsi]
   14003a22c:	jae    0x14003a2a2
   14003a22e:	jb     0x14003a2a5
   14003a230:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a234:	and    BYTE PTR [rcx+0x74],ch
   14003a237:	gs jb  0x14003a29b
   14003a23a:	je     0x14003a2ab
   14003a23c:	jb     0x14003a265
   14003a23e:	add    BYTE PTR [rax],al
   14003a240:	(bad)  
   14003a241:	gs push 0x63657620
   14003a247:	je     0x14003a2b8
   14003a249:	jb     0x14003a26b
   14003a24b:	fs gs jae 0x14003a2c3
   14003a24f:	jb     0x14003a2c6
   14003a251:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a255:	and    BYTE PTR [rcx+0x74],ch
   14003a258:	gs jb  0x14003a2bc
   14003a25b:	je     0x14003a2cc
   14003a25d:	jb     0x14003a286
   14003a25f:	add    BYTE PTR [rax+0x65],ah
   14003a262:	push   0x63657620
   14003a267:	je     0x14003a2d8
   14003a269:	jb     0x14003a28b
   14003a26b:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003a26e:	jae    0x14003a2e4
   14003a270:	jb     0x14003a2e7
   14003a272:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a276:	and    BYTE PTR [rcx+0x74],ch
   14003a279:	gs jb  0x14003a2dd
   14003a27c:	je     0x14003a2ed
   14003a27e:	jb     0x14003a2a7
	...
   14003a288:	(bad)  
   14003a289:	jbe    0x14003a2f4
   14003a28b:	jb     0x14003a301
   14003a28d:	jne    0x14003a2f0
   14003a28f:	ins    BYTE PTR es:[rdi],dx
   14003a290:	and    BYTE PTR [rcx+rbp*2+0x73],ah
   14003a294:	jo     0x14003a302
   14003a296:	(bad)  
   14003a297:	movsxd esp,DWORD PTR [rbp+0x6d]
   14003a29a:	outs   dx,BYTE PTR gs:[rsi]
   14003a29c:	je     0x14003a2be
   14003a29e:	ins    DWORD PTR es:[rdi],dx
   14003a29f:	(bad)  
   14003a2a0:	jo     0x14003a2c9
   14003a2a2:	add    BYTE PTR [rax],al
   14003a2a4:	add    BYTE PTR [rax],al
   14003a2a6:	add    BYTE PTR [rax],al
   14003a2a8:	(bad)  
   14003a2a9:	jbe    0x14003a310
   14003a2ab:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a2af:	and    BYTE PTR [rsi+0x62],dh
   14003a2b2:	(bad)  
   14003a2b3:	jae    0x14003a31a
   14003a2b5:	and    BYTE PTR [rbx+0x6f],ah
   14003a2b8:	outs   dx,BYTE PTR ds:[rsi]
   14003a2b9:	jae    0x14003a32f
   14003a2bb:	jb     0x14003a332
   14003a2bd:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a2c1:	and    BYTE PTR [rcx+0x74],ch
   14003a2c4:	gs jb  0x14003a328
   14003a2c7:	je     0x14003a338
   14003a2c9:	jb     0x14003a2f2
   14003a2cb:	add    BYTE PTR [rax],al
   14003a2cd:	add    BYTE PTR [rax],al
   14003a2cf:	add    BYTE PTR [rax+0x76],ah
   14003a2d2:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003a2d7:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14003a2db:	je     0x14003a34f
   14003a2dd:	jne    0x14003a342
   14003a2df:	je     0x14003a350
   14003a2e1:	jb     0x14003a303
   14003a2e3:	imul   esi,DWORD PTR [rbp+riz*2+0x72],0x726f7461
   14003a2eb:	(bad)  
   14003a2ec:	add    BYTE PTR [rax],al
   14003a2ee:	add    BYTE PTR [rax],al
   14003a2f0:	(bad)  
   14003a2f1:	jbe    0x14003a358
   14003a2f3:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a2f7:	and    BYTE PTR [rbx+0x6f],ah
   14003a2fa:	outs   dx,BYTE PTR ds:[rsi]
   14003a2fb:	jae    0x14003a371
   14003a2fd:	jb     0x14003a374
   14003a2ff:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a303:	and    BYTE PTR [rcx+0x74],ch
   14003a306:	gs jb  0x14003a36a
   14003a309:	je     0x14003a37a
   14003a30b:	jb     0x14003a334
   14003a30d:	add    BYTE PTR [rax],al
   14003a30f:	add    BYTE PTR [rax+0x73],ah
   14003a312:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a315:	(bad)  
   14003a316:	jb     0x14003a338
   14003a318:	fs gs ins BYTE PTR es:[rdi],dx
   14003a31b:	gs je  0x14003a387
   14003a31e:	outs   dx,BYTE PTR ds:[rsi]
   14003a31f:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14003a324:	je     0x14003a398
   14003a326:	jne    0x14003a38b
   14003a328:	je     0x14003a399
   14003a32a:	jb     0x14003a353
   14003a32c:	add    BYTE PTR [rax],al
   14003a32e:	add    BYTE PTR [rax],al
   14003a330:	(bad)  
   14003a331:	fs gs data16 (bad) 
   14003a335:	jne    0x14003a3a3
   14003a337:	je     0x14003a359
   14003a339:	movsxd ebp,DWORD PTR [rdi+0x6e]
   14003a33c:	jae    0x14003a3b2
   14003a33e:	jb     0x14003a3b5
   14003a340:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003a344:	and    BYTE PTR [rbx+0x6c],ah
   14003a347:	outs   dx,DWORD PTR ds:[rsi]
   14003a348:	jae    0x14003a3bf
   14003a34a:	jb     0x14003a3b1
   14003a34c:	(bad)  
   14003a34d:	add    BYTE PTR [rax],al
   14003a34f:	add    BYTE PTR [rax+0x76],ah
   14003a352:	movsxd esi,DWORD PTR gs:[rdi+rbp*2+0x72]
   14003a357:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14003a35b:	gs je  0x14003a3c7
   14003a35e:	outs   dx,BYTE PTR ds:[rsi]
   14003a35f:	and    BYTE PTR [ebp+eiz*2+0x73],ah
   14003a364:	je     0x14003a3d8
   14003a366:	jne    0x14003a3cb
   14003a368:	je     0x14003a3d9
   14003a36a:	jb     0x14003a393
   14003a36c:	add    BYTE PTR [rax],al
   14003a36e:	add    BYTE PTR [rax],al
   14003a370:	(bad)  
   14003a371:	jbe    0x14003a3d5
   14003a373:	(bad)  
   14003a374:	jae    0x14003a3db
   14003a376:	and    BYTE PTR [rbp+riz*2+0x73],ah
   14003a37a:	je     0x14003a3ee
   14003a37c:	jne    0x14003a3e1
   14003a37e:	je     0x14003a3ef
   14003a380:	jb     0x14003a3a9
   14003a382:	add    BYTE PTR [rax],al
   14003a384:	add    BYTE PTR [rax],al
   14003a386:	add    BYTE PTR [rax],al
   14003a388:	(bad)  
   14003a389:	jae    0x14003a3ff
   14003a38b:	jb     0x14003a3f6
   14003a38d:	outs   dx,BYTE PTR ds:[rsi]
   14003a38e:	addr32 (bad) 
	...
   14003a398:	(bad)  
   14003a399:	ins    BYTE PTR es:[rdi],dx
   14003a39a:	outs   dx,DWORD PTR ds:[rsi]
   14003a39b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a39e:	and    BYTE PTR [rbx+0x74],dh
   14003a3a1:	(bad)  
   14003a3a2:	je     0x14003a40d
   14003a3a4:	movsxd esp,DWORD PTR [rax]
   14003a3a6:	addr32 jne 0x14003a40a
   14003a3a9:	jb     0x14003a40f
   14003a3ab:	(bad)  
   14003a3ac:	add    BYTE PTR [rax],al
   14003a3ae:	add    BYTE PTR [rax],al
   14003a3b0:	(bad)  
   14003a3b1:	je     0x14003a42c
   14003a3b3:	jo     0x14003a41a
   14003a3b5:	outs   dx,DWORD PTR ds:[rsi]
   14003a3b6:	data16 (bad) 
	...
   14003a3c0:	(bad)  
   14003a3c1:	jbe    0x14003a426
   14003a3c3:	(bad)  
   14003a3c4:	ins    BYTE PTR es:[rdi],dx
   14003a3c5:	ins    BYTE PTR es:[rdi],dx
   14003a3c6:	(bad)  
   14003a3c7:	add    BYTE PTR [rax+0x76],ah
   14003a3ca:	(bad)  
   14003a3cb:	je     0x14003a42e
   14003a3cd:	(bad)  
   14003a3ce:	ins    BYTE PTR es:[rdi],dx
   14003a3cf:	gs (bad) 
   14003a3d1:	add    BYTE PTR [rax],al
   14003a3d3:	add    BYTE PTR [rax],al
   14003a3d5:	add    BYTE PTR [rax],al
   14003a3d7:	add    BYTE PTR [rax+0x76],ah
   14003a3da:	data16 je 0x14003a43e
   14003a3dd:	(bad)  
   14003a3de:	ins    BYTE PTR es:[rdi],dx
   14003a3df:	gs (bad) 
   14003a3e1:	add    BYTE PTR [rax],al
   14003a3e3:	add    BYTE PTR [rsi+0x3d],bl
   14003a3e6:	add    BYTE PTR [rax],al
   14003a3e8:	jl     0x14003a427
   14003a3ea:	add    BYTE PTR [rax],al
   14003a3ec:	es cmp eax,0x3c3c0000
   14003a3f2:	cmp    eax,0x3d3e3e00
   14003a3f7:	add    BYTE PTR [rip+0x2f00003d],ah        # 0x16f03a43a
   14003a3fd:	cmp    eax,0x3d2d0000
   14003a402:	add    BYTE PTR [rax],al
   14003a404:	sub    edi,DWORD PTR [rip+0x3d2a0000]        # 0x17d2da40a
   14003a40a:	add    BYTE PTR [rax],al
   14003a40c:	jl     0x14003a48a
   14003a40e:	add    BYTE PTR [rax],al
   14003a410:	es add BYTE PTR es:[rax],al
   14003a414:	jl     0x14003a416
   14003a416:	add    BYTE PTR [rax],al
   14003a418:	pop    rsi
   14003a419:	add    BYTE PTR [rax],al
   14003a41b:	add    BYTE PTR [rsi+0x0],bh
   14003a41e:	add    BYTE PTR [rax],al
   14003a420:	sub    BYTE PTR [rcx],ch
   14003a422:	add    BYTE PTR [rax],al
   14003a424:	sub    al,0x0
   14003a426:	add    BYTE PTR [rax],al
   14003a428:	ds cmp eax,0x3e0000
   14003a42e:	add    BYTE PTR [rax],al
   14003a430:	cmp    al,0x3d
   14003a432:	add    BYTE PTR [rax],al
   14003a434:	cmp    al,0x0
   14003a436:	add    BYTE PTR [rax],al
   14003a438:	and    eax,0x2f000000
   14003a43d:	add    BYTE PTR [rax],al
   14003a43f:	add    BYTE PTR [rip+0x26002a3e],ch        # 0x16603ce83
   14003a445:	add    BYTE PTR [rax],al
   14003a447:	add    BYTE PTR [rbx],ch
   14003a449:	add    BYTE PTR [rax],al
   14003a44b:	add    BYTE PTR [rip+0x2d000000],ch        # 0x16d03a451
   14003a451:	sub    eax,0x2b2b0000
   14003a456:	add    BYTE PTR [rax],al
   14003a458:	sub    al,BYTE PTR [rax]
   14003a45a:	add    BYTE PTR [rax],al
   14003a45c:	sub    eax,0x6f00003e
   14003a461:	jo     0x14003a4c8
   14003a463:	jb     0x14003a4c6
   14003a465:	je     0x14003a4d6
   14003a467:	jb     0x14003a469
   14003a469:	add    BYTE PTR [rax],al
   14003a46b:	add    BYTE PTR [rbx+0x5d],bl
   14003a46e:	add    BYTE PTR [rax],al
   14003a470:	and    DWORD PTR [rip+0x3d3d0000],edi        # 0x17d40a476
   14003a476:	add    BYTE PTR [rax],al
   14003a478:	and    DWORD PTR [rax],eax
   14003a47a:	add    BYTE PTR [rax],al
   14003a47c:	cmp    al,0x3c
   14003a47e:	add    BYTE PTR [rax],al
   14003a480:	ds add BYTE PTR ds:[rax],al
   14003a484:	add    BYTE PTR [rax],al
   14003a486:	add    BYTE PTR [rax],al
   14003a488:	and    BYTE PTR [rbp+riz*2+0x6c],ah
   14003a48c:	gs je  0x14003a4f4
   14003a48f:	add    BYTE PTR [rax],ah
   14003a491:	outs   dx,BYTE PTR ds:[rsi]
   14003a492:	gs ja  0x14003a495
   14003a495:	add    BYTE PTR [rax],al
   14003a497:	add    BYTE PTR [rdi+0x5f],bl
   14003a49a:	jne    0x14003a50a
   14003a49c:	(bad)  
   14003a49d:	ins    BYTE PTR es:[rdi],dx
   14003a49e:	imul   esp,DWORD PTR [rdi+0x6e],0x6465
   14003a4a5:	add    BYTE PTR [rax],al
   14003a4a7:	add    BYTE PTR [rdi+0x5f],bl
   14003a4aa:	jb     0x14003a511
   14003a4ac:	jae    0x14003a522
   14003a4ae:	jb     0x14003a519
   14003a4b0:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   14003a4b4:	add    BYTE PTR [rax],al
   14003a4b6:	add    BYTE PTR [rax],al
   14003a4b8:	pop    rdi
   14003a4b9:	pop    rdi
   14003a4ba:	jo     0x14003a530
   14003a4bc:	jb     0x14003a4f4
   14003a4be:	xor    al,0x0
   14003a4c0:	pop    rdi
   14003a4c1:	pop    rdi
   14003a4c2:	movsxd ebp,DWORD PTR [rdx+rsi*2+0x63]
   14003a4c6:	(bad)  
   14003a4c7:	ins    BYTE PTR es:[rdi],dx
   14003a4c8:	ins    BYTE PTR es:[rdi],dx
   14003a4c9:	add    BYTE PTR [rax],al
   14003a4cb:	add    BYTE PTR [rax],al
   14003a4cd:	add    BYTE PTR [rax],al
   14003a4cf:	add    BYTE PTR [rdi+0x5f],bl
   14003a4d2:	data16 (bad) 
   14003a4d4:	jae    0x14003a54a
   14003a4d6:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003a4d9:	ins    BYTE PTR es:[rdi],dx
   14003a4da:	add    BYTE PTR [rax],al
   14003a4dc:	add    BYTE PTR [rax],al
   14003a4de:	add    BYTE PTR [rax],al
   14003a4e0:	pop    rdi
   14003a4e1:	pop    rdi
   14003a4e2:	je     0x14003a54c
   14003a4e4:	imul   esi,DWORD PTR [rbx+0x63],0x6c6c61
   14003a4eb:	add    BYTE PTR [rax],al
   14003a4ed:	add    BYTE PTR [rax],al
   14003a4ef:	add    BYTE PTR [rdi+0x5f],bl
   14003a4f2:	jae    0x14003a568
   14003a4f4:	movsxd esp,DWORD PTR fs:[rcx+0x6c]
   14003a4f8:	ins    BYTE PTR es:[rdi],dx
   14003a4f9:	add    BYTE PTR [rax],al
   14003a4fb:	add    BYTE PTR [rax],al
   14003a4fd:	add    BYTE PTR [rax],al
   14003a4ff:	add    BYTE PTR [rdi+0x5f],bl
   14003a502:	jo     0x14003a565
   14003a504:	jae    0x14003a569
   14003a506:	(bad)  
   14003a507:	ins    BYTE PTR es:[rdi],dx
	...
   14003a510:	pop    rdi
   14003a511:	pop    rdi
   14003a512:	movsxd esp,DWORD PTR [rbp+riz*2+0x63]
   14003a516:	ins    BYTE PTR es:[rdi],dx
   14003a517:	add    BYTE PTR [rdi+0x5f],bl
   14003a51a:	(bad)  
   14003a51c:	jae    0x14003a583
   14003a51e:	sub    BYTE PTR fs:[rax],al
	...
   14003a52d:	add    BYTE PTR [rax],al
   14003a52f:	add    BYTE PTR [rax],bl
   14003a531:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003a532:	add    eax,DWORD PTR [rax+0x1]
   14003a535:	add    BYTE PTR [rax],al
   14003a537:	add    BYTE PTR [rax],dl
   14003a539:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003a53a:	add    eax,DWORD PTR [rax+0x1]
   14003a53d:	add    BYTE PTR [rax],al
   14003a53f:	add    BYTE PTR [rax],al
   14003a541:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14003a542:	add    eax,DWORD PTR [rax+0x1]
   14003a545:	add    BYTE PTR [rax],al
   14003a547:	add    al,dh
   14003a549:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a54a:	add    eax,DWORD PTR [rax+0x1]
   14003a54d:	add    BYTE PTR [rax],al
   14003a54f:	add    al,ah
   14003a551:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a552:	add    eax,DWORD PTR [rax+0x1]
   14003a555:	add    BYTE PTR [rax],al
   14003a557:	add    al,dl
   14003a559:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a55a:	add    eax,DWORD PTR [rax+0x1]
   14003a55d:	add    BYTE PTR [rax],al
   14003a55f:	add    al,al
   14003a561:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a562:	add    eax,DWORD PTR [rax+0x1]
   14003a565:	add    BYTE PTR [rax],al
   14003a567:	add    BYTE PTR [rax+0x14003a4],bh
   14003a56d:	add    BYTE PTR [rax],al
   14003a56f:	add    BYTE PTR [rax+0x14003a4],ch
   14003a575:	add    BYTE PTR [rax],al
   14003a577:	add    BYTE PTR [rax+0x14003a4],bl
   14003a57d:	add    BYTE PTR [rax],al
   14003a57f:	add    BYTE PTR [rdi+0x14003d7],bl
   14003a585:	add    BYTE PTR [rax],al
   14003a587:	add    BYTE PTR [rax+0x140039f],cl
   14003a58d:	add    BYTE PTR [rax],al
   14003a58f:	add    BYTE PTR [rax-0x61],ch
   14003a592:	add    eax,DWORD PTR [rax+0x1]
   14003a595:	add    BYTE PTR [rax],al
   14003a597:	add    BYTE PTR [rax-0x61],dl
   14003a59a:	add    eax,DWORD PTR [rax+0x1]
   14003a59d:	add    BYTE PTR [rax],al
   14003a59f:	add    BYTE PTR [rax],dh
   14003a5a1:	lahf   
   14003a5a2:	add    eax,DWORD PTR [rax+0x1]
   14003a5a5:	add    BYTE PTR [rax],al
   14003a5a7:	add    BYTE PTR [rax],dl
   14003a5a9:	lahf   
   14003a5aa:	add    eax,DWORD PTR [rax+0x1]
   14003a5ad:	add    BYTE PTR [rax],al
   14003a5af:	add    BYTE PTR [rax+0x14003a4],dl
   14003a5b5:	add    BYTE PTR [rax],al
   14003a5b7:	add    BYTE PTR [rax+0x14003a4],cl
   14003a5bd:	add    BYTE PTR [rax],al
   14003a5bf:	add    BYTE PTR [rdi+rdx*4],cl
   14003a5c2:	add    eax,DWORD PTR [rax+0x1]
   14003a5c5:	add    BYTE PTR [rax],al
   14003a5c7:	add    BYTE PTR [rax+0x14003a4],al
   14003a5cd:	add    BYTE PTR [rax],al
   14003a5cf:	add    BYTE PTR [rsp+riz*4+0x3],bh
   14003a5d3:	rex add DWORD PTR [rax],eax
   14003a5d6:	add    BYTE PTR [rax],al
   14003a5d8:	js     0x14003a57e
   14003a5da:	add    eax,DWORD PTR [rax+0x1]
   14003a5dd:	add    BYTE PTR [rax],al
   14003a5df:	add    BYTE PTR [rsp+riz*4+0x3],dh
   14003a5e3:	rex add DWORD PTR [rax],eax
   14003a5e6:	add    BYTE PTR [rax],al
   14003a5e8:	jo     0x14003a58e
   14003a5ea:	add    eax,DWORD PTR [rax+0x1]
   14003a5ed:	add    BYTE PTR [rax],al
   14003a5ef:	add    BYTE PTR [rsp+riz*4+0x3],ch
   14003a5f3:	rex add DWORD PTR [rax],eax
   14003a5f6:	add    BYTE PTR [rax],al
   14003a5f8:	(bad)  
   14003a5f9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a5fa:	add    eax,DWORD PTR [rax+0x1]
   14003a5fd:	add    BYTE PTR [rax],al
   14003a5ff:	add    BYTE PTR [rsp+riz*4+0x3],bl
   14003a603:	rex add DWORD PTR [rax],eax
   14003a606:	add    BYTE PTR [rax],al
   14003a608:	pop    rax
   14003a609:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a60a:	add    eax,DWORD PTR [rax+0x1]
   14003a60d:	add    BYTE PTR [rax],al
   14003a60f:	add    BYTE PTR [rsp+riz*4+0x3],dl
   14003a613:	rex add DWORD PTR [rax],eax
   14003a616:	add    BYTE PTR [rax],al
   14003a618:	push   rax
   14003a619:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a61a:	add    eax,DWORD PTR [rax+0x1]
   14003a61d:	add    BYTE PTR [rax],al
   14003a61f:	add    BYTE PTR [rsp+riz*4+0x3],cl
   14003a623:	rex add DWORD PTR [rax],eax
   14003a626:	add    BYTE PTR [rax],al
   14003a628:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a62a:	add    eax,DWORD PTR [rax+0x1]
   14003a62d:	add    BYTE PTR [rax],al
   14003a62f:	add    BYTE PTR [rsp+riz*4+0x3],al
   14003a633:	rex add DWORD PTR [rax],eax
   14003a636:	add    BYTE PTR [rax],al
   14003a638:	rex movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a63a:	add    eax,DWORD PTR [rax+0x1]
   14003a63d:	add    BYTE PTR [rax],al
   14003a63f:	add    BYTE PTR [rsp+riz*4],bh
   14003a642:	add    eax,DWORD PTR [rax+0x1]
   14003a645:	add    BYTE PTR [rax],al
   14003a647:	add    BYTE PTR [rax],bh
   14003a649:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a64a:	add    eax,DWORD PTR [rax+0x1]
   14003a64d:	add    BYTE PTR [rax],al
   14003a64f:	add    BYTE PTR [rsp+riz*4],dh
   14003a652:	add    eax,DWORD PTR [rax+0x1]
   14003a655:	add    BYTE PTR [rax],al
   14003a657:	add    BYTE PTR [rax],dh
   14003a659:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a65a:	add    eax,DWORD PTR [rax+0x1]
   14003a65d:	add    BYTE PTR [rax],al
   14003a65f:	add    BYTE PTR [rsp+riz*4],ch
   14003a662:	add    eax,DWORD PTR [rax+0x1]
   14003a665:	add    BYTE PTR [rax],al
   14003a667:	add    BYTE PTR [rax],ch
   14003a669:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a66a:	add    eax,DWORD PTR [rax+0x1]
   14003a66d:	add    BYTE PTR [rax],al
   14003a66f:	add    BYTE PTR [rsp+riz*4],ah
   14003a672:	add    eax,DWORD PTR [rax+0x1]
   14003a675:	add    BYTE PTR [rax],al
   14003a677:	add    BYTE PTR [rax],ah
   14003a679:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a67a:	add    eax,DWORD PTR [rax+0x1]
   14003a67d:	add    BYTE PTR [rax],al
   14003a67f:	add    BYTE PTR [rsp+riz*4],bl
   14003a682:	add    eax,DWORD PTR [rax+0x1]
   14003a685:	add    BYTE PTR [rax],al
   14003a687:	add    BYTE PTR [rax],bl
   14003a689:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a68a:	add    eax,DWORD PTR [rax+0x1]
   14003a68d:	add    BYTE PTR [rax],al
   14003a68f:	add    BYTE PTR [rsp+riz*4],dl
   14003a692:	add    eax,DWORD PTR [rax+0x1]
   14003a695:	add    BYTE PTR [rax],al
   14003a697:	add    BYTE PTR [rax],dl
   14003a699:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a69a:	add    eax,DWORD PTR [rax+0x1]
   14003a69d:	add    BYTE PTR [rax],al
   14003a69f:	add    BYTE PTR [rsp+riz*4],cl
   14003a6a2:	add    eax,DWORD PTR [rax+0x1]
   14003a6a5:	add    BYTE PTR [rax],al
   14003a6a7:	add    BYTE PTR [rax],cl
   14003a6a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a6aa:	add    eax,DWORD PTR [rax+0x1]
   14003a6ad:	add    BYTE PTR [rax],al
   14003a6af:	add    BYTE PTR [rsp+riz*4],al
   14003a6b2:	add    eax,DWORD PTR [rax+0x1]
   14003a6b5:	add    BYTE PTR [rax],al
   14003a6b7:	add    BYTE PTR [rax],al
   14003a6b9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003a6ba:	add    eax,DWORD PTR [rax+0x1]
   14003a6bd:	add    BYTE PTR [rax],al
   14003a6bf:	add    ah,bh
   14003a6c1:	movabs ds:0xa3f8000000014003,eax
   14003a6ca:	add    eax,DWORD PTR [rax+0x1]
   14003a6cd:	add    BYTE PTR [rax],al
   14003a6cf:	add    ah,dh
   14003a6d1:	movabs ds:0xa3f0000000014003,eax
   14003a6da:	add    eax,DWORD PTR [rax+0x1]
   14003a6dd:	add    BYTE PTR [rax],al
   14003a6df:	add    ah,ch
   14003a6e1:	movabs ds:0xa3e8000000014003,eax
   14003a6ea:	add    eax,DWORD PTR [rax+0x1]
   14003a6ed:	add    BYTE PTR [rax],al
   14003a6ef:	add    ah,ah
   14003a6f1:	movabs ds:0xa3d8000000014003,eax
   14003a6fa:	add    eax,DWORD PTR [rax+0x1]
   14003a6fd:	add    BYTE PTR [rax],al
   14003a6ff:	add    al,cl
   14003a701:	movabs ds:0xa3c0000000014003,eax
   14003a70a:	add    eax,DWORD PTR [rax+0x1]
   14003a70d:	add    BYTE PTR [rax],al
   14003a70f:	add    BYTE PTR [rax+0x14003a3],dh
   14003a715:	add    BYTE PTR [rax],al
   14003a717:	add    BYTE PTR [rax+0x14003a3],bl
   14003a71d:	add    BYTE PTR [rax],al
   14003a71f:	add    BYTE PTR [rax+0x14003a3],cl
   14003a725:	add    BYTE PTR [rax],al
   14003a727:	add    BYTE PTR [rax-0x5d],dh
   14003a72a:	add    eax,DWORD PTR [rax+0x1]
   14003a72d:	add    BYTE PTR [rax],al
   14003a72f:	add    BYTE PTR [rax-0x5d],dl
   14003a732:	add    eax,DWORD PTR [rax+0x1]
   14003a735:	add    BYTE PTR [rax],al
   14003a737:	add    BYTE PTR [rax],dh
   14003a739:	movabs ds:0xa310000000014003,eax
   14003a742:	add    eax,DWORD PTR [rax+0x1]
   14003a745:	add    BYTE PTR [rax],al
   14003a747:	add    al,dh
   14003a749:	movabs ds:0xa2d0000000014003,al
   14003a752:	add    eax,DWORD PTR [rax+0x1]
   14003a755:	add    BYTE PTR [rax],al
   14003a757:	add    BYTE PTR [rax+0x14003a2],ch
   14003a75d:	add    BYTE PTR [rax],al
   14003a75f:	add    BYTE PTR [rax+0x14003a2],cl
   14003a765:	add    BYTE PTR [rax],al
   14003a767:	add    BYTE PTR [rax-0x5e],ah
   14003a76a:	add    eax,DWORD PTR [rax+0x1]
   14003a76d:	add    BYTE PTR [rax],al
   14003a76f:	add    BYTE PTR [rax-0x5e],al
   14003a772:	add    eax,DWORD PTR [rax+0x1]
   14003a775:	add    BYTE PTR [rax],al
   14003a777:	add    BYTE PTR [rax],bl
   14003a779:	movabs ds:0xa1f8000000014003,al
   14003a782:	add    eax,DWORD PTR [rax+0x1]
   14003a785:	add    BYTE PTR [rax],al
   14003a787:	add    al,ch
   14003a789:	movabs eax,ds:0xa1e0000000014003
   14003a792:	add    eax,DWORD PTR [rax+0x1]
   14003a795:	add    BYTE PTR [rax],al
   14003a797:	add    al,bl
   14003a799:	movabs eax,ds:0xa1c8000000014003
   14003a7a2:	add    eax,DWORD PTR [rax+0x1]
   14003a7a5:	add    BYTE PTR [rax],al
   14003a7a7:	add    BYTE PTR [rax+0x14003a1],ah
   14003a7ad:	add    BYTE PTR [rax],al
   14003a7af:	add    BYTE PTR [rcx+riz*4+0x14003],dl
   14003a7b6:	add    BYTE PTR [rax],al
   14003a7b8:	mov    BYTE PTR [rcx+0x14003],ah
   14003a7be:	add    BYTE PTR [rax],al
   14003a7c0:	js     0x14003a763
   14003a7c2:	add    eax,DWORD PTR [rax+0x1]
   14003a7c5:	add    BYTE PTR [rax],al
   14003a7c7:	add    BYTE PTR [rax-0x5f],bl
   14003a7ca:	add    eax,DWORD PTR [rax+0x1]
   14003a7cd:	add    BYTE PTR [rax],al
   14003a7cf:	add    BYTE PTR [rax],bh
   14003a7d1:	movabs eax,ds:0xa110000000014003
   14003a7da:	add    eax,DWORD PTR [rax+0x1]
   14003a7dd:	add    BYTE PTR [rax],al
   14003a7df:	add    al,ch
   14003a7e1:	movabs al,ds:0xa0c0000000014003
   14003a7ea:	add    eax,DWORD PTR [rax+0x1]
   14003a7ed:	add    BYTE PTR [rax],al
   14003a7ef:	add    BYTE PTR [rax+0x14003a0],dl
   14003a7f5:	add    BYTE PTR [rax],al
   14003a7f7:	add    BYTE PTR [rax-0x60],dh
   14003a7fa:	add    eax,DWORD PTR [rax+0x1]
   14003a7fd:	add    BYTE PTR [rax],al
   14003a7ff:	add    BYTE PTR [rax-0x60],cl
   14003a802:	add    eax,DWORD PTR [rax+0x1]
   14003a805:	add    BYTE PTR [rax],al
   14003a807:	add    BYTE PTR [rax],ah
   14003a809:	movabs al,ds:0x9ff0000000014003
   14003a812:	add    eax,DWORD PTR [rax+0x1]
   14003a815:	add    BYTE PTR [rax],al
   14003a817:	add    al,al
   14003a819:	lahf   
   14003a81a:	add    eax,DWORD PTR [rax+0x1]
   14003a81d:	add    BYTE PTR [rax],al
   14003a81f:	add    BYTE PTR [rax+0x140039f],ah
   14003a825:	add    BYTE PTR [rax],al
   14003a827:	add    BYTE PTR [rdi+0x14003d7],bl
   14003a82d:	add    BYTE PTR [rax],al
   14003a82f:	add    BYTE PTR [rdi],ah
   14003a831:	add    BYTE PTR [rax],al
   14003a833:	add    BYTE PTR [rax],ah
	...
   14003a93d:	add    BYTE PTR [rax],al
   14003a93f:	add    BYTE PTR [rax],ah
   14003a941:	add    BYTE PTR [rax],ah
   14003a943:	add    BYTE PTR [rax],ah
   14003a945:	add    BYTE PTR [rax],ah
   14003a947:	add    BYTE PTR [rax],ah
   14003a949:	add    BYTE PTR [rax],ah
   14003a94b:	add    BYTE PTR [rax],ah
   14003a94d:	add    BYTE PTR [rax],ah
   14003a94f:	add    BYTE PTR [rax],ah
   14003a951:	add    BYTE PTR [rax],ch
   14003a953:	add    BYTE PTR [rax],ch
   14003a955:	add    BYTE PTR [rax],ch
   14003a957:	add    BYTE PTR [rax],ch
   14003a959:	add    BYTE PTR [rax],ch
   14003a95b:	add    BYTE PTR [rax],ah
   14003a95d:	add    BYTE PTR [rax],ah
   14003a95f:	add    BYTE PTR [rax],ah
   14003a961:	add    BYTE PTR [rax],ah
   14003a963:	add    BYTE PTR [rax],ah
   14003a965:	add    BYTE PTR [rax],ah
   14003a967:	add    BYTE PTR [rax],ah
   14003a969:	add    BYTE PTR [rax],ah
   14003a96b:	add    BYTE PTR [rax],ah
   14003a96d:	add    BYTE PTR [rax],ah
   14003a96f:	add    BYTE PTR [rax],ah
   14003a971:	add    BYTE PTR [rax],ah
   14003a973:	add    BYTE PTR [rax],ah
   14003a975:	add    BYTE PTR [rax],ah
   14003a977:	add    BYTE PTR [rax],ah
   14003a979:	add    BYTE PTR [rax],ah
   14003a97b:	add    BYTE PTR [rax],ah
   14003a97d:	add    BYTE PTR [rax],ah
   14003a97f:	add    BYTE PTR [rax+0x0],cl
   14003a982:	adc    BYTE PTR [rax],al
   14003a984:	adc    BYTE PTR [rax],al
   14003a986:	adc    BYTE PTR [rax],al
   14003a988:	adc    BYTE PTR [rax],al
   14003a98a:	adc    BYTE PTR [rax],al
   14003a98c:	adc    BYTE PTR [rax],al
   14003a98e:	adc    BYTE PTR [rax],al
   14003a990:	adc    BYTE PTR [rax],al
   14003a992:	adc    BYTE PTR [rax],al
   14003a994:	adc    BYTE PTR [rax],al
   14003a996:	adc    BYTE PTR [rax],al
   14003a998:	adc    BYTE PTR [rax],al
   14003a99a:	adc    BYTE PTR [rax],al
   14003a99c:	adc    BYTE PTR [rax],al
   14003a99e:	adc    BYTE PTR [rax],al
   14003a9a0:	test   BYTE PTR [rax],al
   14003a9a2:	test   BYTE PTR [rax],al
   14003a9a4:	test   BYTE PTR [rax],al
   14003a9a6:	test   BYTE PTR [rax],al
   14003a9a8:	test   BYTE PTR [rax],al
   14003a9aa:	test   BYTE PTR [rax],al
   14003a9ac:	test   BYTE PTR [rax],al
   14003a9ae:	test   BYTE PTR [rax],al
   14003a9b0:	test   BYTE PTR [rax],al
   14003a9b2:	test   BYTE PTR [rax],al
   14003a9b4:	adc    BYTE PTR [rax],al
   14003a9b6:	adc    BYTE PTR [rax],al
   14003a9b8:	adc    BYTE PTR [rax],al
   14003a9ba:	adc    BYTE PTR [rax],al
   14003a9bc:	adc    BYTE PTR [rax],al
   14003a9be:	adc    BYTE PTR [rax],al
   14003a9c0:	adc    BYTE PTR [rax],al
   14003a9c2:	add    DWORD PTR [rax],0x810081
   14003a9c8:	add    DWORD PTR [rax],0x810081
   14003a9ce:	add    DWORD PTR [rax],eax
   14003a9d0:	add    DWORD PTR [rax],eax
   14003a9d2:	add    DWORD PTR [rax],eax
   14003a9d4:	add    DWORD PTR [rax],eax
   14003a9d6:	add    DWORD PTR [rax],eax
   14003a9d8:	add    DWORD PTR [rax],eax
   14003a9da:	add    DWORD PTR [rax],eax
   14003a9dc:	add    DWORD PTR [rax],eax
   14003a9de:	add    DWORD PTR [rax],eax
   14003a9e0:	add    DWORD PTR [rax],eax
   14003a9e2:	add    DWORD PTR [rax],eax
   14003a9e4:	add    DWORD PTR [rax],eax
   14003a9e6:	add    DWORD PTR [rax],eax
   14003a9e8:	add    DWORD PTR [rax],eax
   14003a9ea:	add    DWORD PTR [rax],eax
   14003a9ec:	add    DWORD PTR [rax],eax
   14003a9ee:	add    DWORD PTR [rax],eax
   14003a9f0:	add    DWORD PTR [rax],eax
   14003a9f2:	add    DWORD PTR [rax],eax
   14003a9f4:	add    DWORD PTR [rax],eax
   14003a9f6:	adc    BYTE PTR [rax],al
   14003a9f8:	adc    BYTE PTR [rax],al
   14003a9fa:	adc    BYTE PTR [rax],al
   14003a9fc:	adc    BYTE PTR [rax],al
   14003a9fe:	adc    BYTE PTR [rax],al
   14003aa00:	adc    BYTE PTR [rax],al
   14003aa02:	(bad)  
   14003aa03:	add    BYTE PTR [rdx-0x7dff7e00],al
   14003aa09:	add    BYTE PTR [rdx+0x2008200],al
   14003aa0f:	add    BYTE PTR [rdx],al
   14003aa11:	add    BYTE PTR [rdx],al
   14003aa13:	add    BYTE PTR [rdx],al
   14003aa15:	add    BYTE PTR [rdx],al
   14003aa17:	add    BYTE PTR [rdx],al
   14003aa19:	add    BYTE PTR [rdx],al
   14003aa1b:	add    BYTE PTR [rdx],al
   14003aa1d:	add    BYTE PTR [rdx],al
   14003aa1f:	add    BYTE PTR [rdx],al
   14003aa21:	add    BYTE PTR [rdx],al
   14003aa23:	add    BYTE PTR [rdx],al
   14003aa25:	add    BYTE PTR [rdx],al
   14003aa27:	add    BYTE PTR [rdx],al
   14003aa29:	add    BYTE PTR [rdx],al
   14003aa2b:	add    BYTE PTR [rdx],al
   14003aa2d:	add    BYTE PTR [rdx],al
   14003aa2f:	add    BYTE PTR [rdx],al
   14003aa31:	add    BYTE PTR [rdx],al
   14003aa33:	add    BYTE PTR [rdx],al
   14003aa35:	add    BYTE PTR [rax],dl
   14003aa37:	add    BYTE PTR [rax],dl
   14003aa39:	add    BYTE PTR [rax],dl
   14003aa3b:	add    BYTE PTR [rax],dl
   14003aa3d:	add    BYTE PTR [rax],ah
	...
   14003ab3f:	add    BYTE PTR [rax],al
   14003ab41:	add    BYTE PTR [rax],ah
   14003ab43:	add    BYTE PTR [rax],ah
   14003ab45:	add    BYTE PTR [rax],ah
   14003ab47:	add    BYTE PTR [rax],ah
   14003ab49:	add    BYTE PTR [rax],ah
   14003ab4b:	add    BYTE PTR [rax],ah
   14003ab4d:	add    BYTE PTR [rax],ah
   14003ab4f:	add    BYTE PTR [rax],ah
   14003ab51:	add    BYTE PTR [rax],ah
   14003ab53:	add    BYTE PTR [rax+0x0],ch
   14003ab56:	sub    BYTE PTR [rax],al
   14003ab58:	sub    BYTE PTR [rax],al
   14003ab5a:	sub    BYTE PTR [rax],al
   14003ab5c:	sub    BYTE PTR [rax],al
   14003ab5e:	and    BYTE PTR [rax],al
   14003ab60:	and    BYTE PTR [rax],al
   14003ab62:	and    BYTE PTR [rax],al
   14003ab64:	and    BYTE PTR [rax],al
   14003ab66:	and    BYTE PTR [rax],al
   14003ab68:	and    BYTE PTR [rax],al
   14003ab6a:	and    BYTE PTR [rax],al
   14003ab6c:	and    BYTE PTR [rax],al
   14003ab6e:	and    BYTE PTR [rax],al
   14003ab70:	and    BYTE PTR [rax],al
   14003ab72:	and    BYTE PTR [rax],al
   14003ab74:	and    BYTE PTR [rax],al
   14003ab76:	and    BYTE PTR [rax],al
   14003ab78:	and    BYTE PTR [rax],al
   14003ab7a:	and    BYTE PTR [rax],al
   14003ab7c:	and    BYTE PTR [rax],al
   14003ab7e:	and    BYTE PTR [rax],al
   14003ab80:	and    BYTE PTR [rax],al
   14003ab82:	rex.W add BYTE PTR [rax],dl
   14003ab85:	add    BYTE PTR [rax],dl
   14003ab87:	add    BYTE PTR [rax],dl
   14003ab89:	add    BYTE PTR [rax],dl
   14003ab8b:	add    BYTE PTR [rax],dl
   14003ab8d:	add    BYTE PTR [rax],dl
   14003ab8f:	add    BYTE PTR [rax],dl
   14003ab91:	add    BYTE PTR [rax],dl
   14003ab93:	add    BYTE PTR [rax],dl
   14003ab95:	add    BYTE PTR [rax],dl
   14003ab97:	add    BYTE PTR [rax],dl
   14003ab99:	add    BYTE PTR [rax],dl
   14003ab9b:	add    BYTE PTR [rax],dl
   14003ab9d:	add    BYTE PTR [rax],dl
   14003ab9f:	add    BYTE PTR [rax],dl
   14003aba1:	add    BYTE PTR [rax+rax*1+0x840084],al
   14003aba8:	test   BYTE PTR [rax],al
   14003abaa:	test   BYTE PTR [rax],al
   14003abac:	test   BYTE PTR [rax],al
   14003abae:	test   BYTE PTR [rax],al
   14003abb0:	test   BYTE PTR [rax],al
   14003abb2:	test   BYTE PTR [rax],al
   14003abb4:	test   BYTE PTR [rax],al
   14003abb6:	adc    BYTE PTR [rax],al
   14003abb8:	adc    BYTE PTR [rax],al
   14003abba:	adc    BYTE PTR [rax],al
   14003abbc:	adc    BYTE PTR [rax],al
   14003abbe:	adc    BYTE PTR [rax],al
   14003abc0:	adc    BYTE PTR [rax],al
   14003abc2:	adc    BYTE PTR [rax],al
   14003abc4:	add    DWORD PTR [rcx],0x1810181
   14003abca:	add    DWORD PTR [rcx],0x1810181
   14003abd0:	add    DWORD PTR [rcx],eax
   14003abd2:	add    DWORD PTR [rcx],eax
   14003abd4:	add    DWORD PTR [rcx],eax
   14003abd6:	add    DWORD PTR [rcx],eax
   14003abd8:	add    DWORD PTR [rcx],eax
   14003abda:	add    DWORD PTR [rcx],eax
   14003abdc:	add    DWORD PTR [rcx],eax
   14003abde:	add    DWORD PTR [rcx],eax
   14003abe0:	add    DWORD PTR [rcx],eax
   14003abe2:	add    DWORD PTR [rcx],eax
   14003abe4:	add    DWORD PTR [rcx],eax
   14003abe6:	add    DWORD PTR [rcx],eax
   14003abe8:	add    DWORD PTR [rcx],eax
   14003abea:	add    DWORD PTR [rcx],eax
   14003abec:	add    DWORD PTR [rcx],eax
   14003abee:	add    DWORD PTR [rcx],eax
   14003abf0:	add    DWORD PTR [rcx],eax
   14003abf2:	add    DWORD PTR [rcx],eax
   14003abf4:	add    DWORD PTR [rcx],eax
   14003abf6:	add    DWORD PTR [rcx],eax
   14003abf8:	adc    BYTE PTR [rax],al
   14003abfa:	adc    BYTE PTR [rax],al
   14003abfc:	adc    BYTE PTR [rax],al
   14003abfe:	adc    BYTE PTR [rax],al
   14003ac00:	adc    BYTE PTR [rax],al
   14003ac02:	adc    BYTE PTR [rax],al
   14003ac04:	(bad)  
   14003ac05:	add    DWORD PTR [rdx-0x7dfe7dff],eax
   14003ac0b:	add    DWORD PTR [rdx+0x2018201],eax
   14003ac11:	add    DWORD PTR [rdx],eax
   14003ac13:	add    DWORD PTR [rdx],eax
   14003ac15:	add    DWORD PTR [rdx],eax
   14003ac17:	add    DWORD PTR [rdx],eax
   14003ac19:	add    DWORD PTR [rdx],eax
   14003ac1b:	add    DWORD PTR [rdx],eax
   14003ac1d:	add    DWORD PTR [rdx],eax
   14003ac1f:	add    DWORD PTR [rdx],eax
   14003ac21:	add    DWORD PTR [rdx],eax
   14003ac23:	add    DWORD PTR [rdx],eax
   14003ac25:	add    DWORD PTR [rdx],eax
   14003ac27:	add    DWORD PTR [rdx],eax
   14003ac29:	add    DWORD PTR [rdx],eax
   14003ac2b:	add    DWORD PTR [rdx],eax
   14003ac2d:	add    DWORD PTR [rdx],eax
   14003ac2f:	add    DWORD PTR [rdx],eax
   14003ac31:	add    DWORD PTR [rdx],eax
   14003ac33:	add    DWORD PTR [rdx],eax
   14003ac35:	add    DWORD PTR [rdx],eax
   14003ac37:	add    DWORD PTR [rax],edx
   14003ac39:	add    BYTE PTR [rax],dl
   14003ac3b:	add    BYTE PTR [rax],dl
   14003ac3d:	add    BYTE PTR [rax],dl
   14003ac3f:	add    BYTE PTR [rax],ah
   14003ac41:	add    BYTE PTR [rax],ah
   14003ac43:	add    BYTE PTR [rax],ah
   14003ac45:	add    BYTE PTR [rax],ah
   14003ac47:	add    BYTE PTR [rax],ah
   14003ac49:	add    BYTE PTR [rax],ah
   14003ac4b:	add    BYTE PTR [rax],ah
   14003ac4d:	add    BYTE PTR [rax],ah
   14003ac4f:	add    BYTE PTR [rax],ah
   14003ac51:	add    BYTE PTR [rax],ah
   14003ac53:	add    BYTE PTR [rax],ah
   14003ac55:	add    BYTE PTR [rax],ah
   14003ac57:	add    BYTE PTR [rax],ah
   14003ac59:	add    BYTE PTR [rax],ah
   14003ac5b:	add    BYTE PTR [rax],ah
   14003ac5d:	add    BYTE PTR [rax],ah
   14003ac5f:	add    BYTE PTR [rax],ah
   14003ac61:	add    BYTE PTR [rax],ah
   14003ac63:	add    BYTE PTR [rax],ah
   14003ac65:	add    BYTE PTR [rax],ah
   14003ac67:	add    BYTE PTR [rax],ah
   14003ac69:	add    BYTE PTR [rax],ah
   14003ac6b:	add    BYTE PTR [rax],ah
   14003ac6d:	add    BYTE PTR [rax],ah
   14003ac6f:	add    BYTE PTR [rax],ah
   14003ac71:	add    BYTE PTR [rax],ah
   14003ac73:	add    BYTE PTR [rax],ah
   14003ac75:	add    BYTE PTR [rax],ah
   14003ac77:	add    BYTE PTR [rax],ah
   14003ac79:	add    BYTE PTR [rax],ah
   14003ac7b:	add    BYTE PTR [rax],ah
   14003ac7d:	add    BYTE PTR [rax],ah
   14003ac7f:	add    BYTE PTR [rax],ah
   14003ac81:	add    BYTE PTR [rax+0x0],cl
   14003ac84:	adc    BYTE PTR [rax],al
   14003ac86:	adc    BYTE PTR [rax],al
   14003ac88:	adc    BYTE PTR [rax],al
   14003ac8a:	adc    BYTE PTR [rax],al
   14003ac8c:	adc    BYTE PTR [rax],al
   14003ac8e:	adc    BYTE PTR [rax],al
   14003ac90:	adc    BYTE PTR [rax],al
   14003ac92:	adc    BYTE PTR [rax],al
   14003ac94:	adc    BYTE PTR [rax],al
   14003ac96:	adc    BYTE PTR [rax],al
   14003ac98:	adc    BYTE PTR [rax],al
   14003ac9a:	adc    BYTE PTR [rax],al
   14003ac9c:	adc    BYTE PTR [rax],al
   14003ac9e:	adc    BYTE PTR [rax],al
   14003aca0:	adc    BYTE PTR [rax],al
   14003aca2:	adc    BYTE PTR [rax],al
   14003aca4:	adc    BYTE PTR [rax],al
   14003aca6:	adc    al,0x0
   14003aca8:	adc    al,0x0
   14003acaa:	adc    BYTE PTR [rax],al
   14003acac:	adc    BYTE PTR [rax],al
   14003acae:	adc    BYTE PTR [rax],al
   14003acb0:	adc    BYTE PTR [rax],al
   14003acb2:	adc    BYTE PTR [rax],al
   14003acb4:	adc    al,0x0
   14003acb6:	adc    BYTE PTR [rax],al
   14003acb8:	adc    BYTE PTR [rax],al
   14003acba:	adc    BYTE PTR [rax],al
   14003acbc:	adc    BYTE PTR [rax],al
   14003acbe:	adc    BYTE PTR [rax],al
   14003acc0:	adc    BYTE PTR [rax],al
   14003acc2:	add    DWORD PTR [rcx],eax
   14003acc4:	add    DWORD PTR [rcx],eax
   14003acc6:	add    DWORD PTR [rcx],eax
   14003acc8:	add    DWORD PTR [rcx],eax
   14003acca:	add    DWORD PTR [rcx],eax
   14003accc:	add    DWORD PTR [rcx],eax
   14003acce:	add    DWORD PTR [rcx],eax
   14003acd0:	add    DWORD PTR [rcx],eax
   14003acd2:	add    DWORD PTR [rcx],eax
   14003acd4:	add    DWORD PTR [rcx],eax
   14003acd6:	add    DWORD PTR [rcx],eax
   14003acd8:	add    DWORD PTR [rcx],eax
   14003acda:	add    DWORD PTR [rcx],eax
   14003acdc:	add    DWORD PTR [rcx],eax
   14003acde:	add    DWORD PTR [rcx],eax
   14003ace0:	add    DWORD PTR [rcx],eax
   14003ace2:	add    DWORD PTR [rcx],eax
   14003ace4:	add    DWORD PTR [rcx],eax
   14003ace6:	add    DWORD PTR [rcx],eax
   14003ace8:	add    DWORD PTR [rcx],eax
   14003acea:	add    DWORD PTR [rcx],eax
   14003acec:	add    DWORD PTR [rcx],eax
   14003acee:	add    DWORD PTR [rcx],eax
   14003acf0:	adc    BYTE PTR [rax],al
   14003acf2:	add    DWORD PTR [rcx],eax
   14003acf4:	add    DWORD PTR [rcx],eax
   14003acf6:	add    DWORD PTR [rcx],eax
   14003acf8:	add    DWORD PTR [rcx],eax
   14003acfa:	add    DWORD PTR [rcx],eax
   14003acfc:	add    DWORD PTR [rcx],eax
   14003acfe:	add    DWORD PTR [rcx],eax
   14003ad00:	add    al,BYTE PTR [rcx]
   14003ad02:	add    al,BYTE PTR [rcx]
   14003ad04:	add    al,BYTE PTR [rcx]
   14003ad06:	add    al,BYTE PTR [rcx]
   14003ad08:	add    al,BYTE PTR [rcx]
   14003ad0a:	add    al,BYTE PTR [rcx]
   14003ad0c:	add    al,BYTE PTR [rcx]
   14003ad0e:	add    al,BYTE PTR [rcx]
   14003ad10:	add    al,BYTE PTR [rcx]
   14003ad12:	add    al,BYTE PTR [rcx]
   14003ad14:	add    al,BYTE PTR [rcx]
   14003ad16:	add    al,BYTE PTR [rcx]
   14003ad18:	add    al,BYTE PTR [rcx]
   14003ad1a:	add    al,BYTE PTR [rcx]
   14003ad1c:	add    al,BYTE PTR [rcx]
   14003ad1e:	add    al,BYTE PTR [rcx]
   14003ad20:	add    al,BYTE PTR [rcx]
   14003ad22:	add    al,BYTE PTR [rcx]
   14003ad24:	add    al,BYTE PTR [rcx]
   14003ad26:	add    al,BYTE PTR [rcx]
   14003ad28:	add    al,BYTE PTR [rcx]
   14003ad2a:	add    al,BYTE PTR [rcx]
   14003ad2c:	add    al,BYTE PTR [rcx]
   14003ad2e:	add    al,BYTE PTR [rcx]
   14003ad30:	adc    BYTE PTR [rax],al
   14003ad32:	add    al,BYTE PTR [rcx]
   14003ad34:	add    al,BYTE PTR [rcx]
   14003ad36:	add    al,BYTE PTR [rcx]
   14003ad38:	add    al,BYTE PTR [rcx]
   14003ad3a:	add    al,BYTE PTR [rcx]
   14003ad3c:	add    al,BYTE PTR [rcx]
   14003ad3e:	add    al,BYTE PTR [rcx]
   14003ad40:	add    al,BYTE PTR [rcx]
   14003ad42:	add    DWORD PTR [rcx],eax
	...
   14003ad50:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14003ad57:	xchg   DWORD PTR [rax-0x73747577],ecx
   14003ad5d:	lea    ecx,[rsi-0x6d6e6f71]
   14003ad63:	xchg   ebx,eax
   14003ad64:	xchg   esp,eax
   14003ad65:	xchg   ebp,eax
   14003ad66:	xchg   esi,eax
   14003ad67:	xchg   edi,eax
   14003ad68:	cwde   
   14003ad69:	cdq    
   14003ad6a:	(bad)  
   14003ad6b:	fwait
   14003ad6c:	pushf  
   14003ad6d:	popf   
   14003ad6e:	sahf   
   14003ad6f:	lahf   
   14003ad70:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003ad79:	test   eax,0xadacabaa
   14003ad7e:	scas   al,BYTE PTR es:[rdi]
   14003ad7f:	scas   eax,DWORD PTR es:[rdi]
   14003ad80:	mov    al,0xb1
   14003ad82:	mov    dl,0xb3
   14003ad84:	mov    ah,0xb5
   14003ad86:	mov    dh,0xb7
   14003ad88:	mov    eax,0xbcbbbab9
   14003ad8d:	mov    ebp,0xc1c0bfbe
   14003ad92:	ret    0xc4c3
   14003ad95:	(bad)
   14003ad98:	enter  0xcac9,0xcb
   14003ad9c:	int3   
   14003ad9d:	int    0xce
   14003ad9f:	iret   
   14003ada0:	rcl    cl,1
   14003ada2:	rcl    bl,cl
   14003ada4:	(bad)  
   14003ada5:	(bad)  
   14003ada6:	(bad)  
   14003ada7:	xlat   BYTE PTR ds:[rbx]
   14003ada8:	fcomp  st(1)
   14003adaa:	fcmovu st,st(3)
   14003adac:	(bad)  
   14003adae:	(bad)  
   14003adb0:	loopne 0x14003ad93
   14003adb2:	loop   0x14003ad97
   14003adb4:	in     al,0xe5
   14003adb6:	out    0xe7,al
   14003adb8:	call   0x12cef98a6
   14003adbd:	in     eax,dx
   14003adbe:	out    dx,al
   14003adbf:	out    dx,eax
   14003adc0:	lock icebp 
   14003adc2:	repnz repz hlt 
   14003adc5:	cmc    
   14003adc6:	div    bh
   14003adc8:	clc    
   14003adc9:	stc    
   14003adca:	cli    
   14003adcb:	sti    
   14003adcc:	cld    
   14003adcd:	std    
   14003adce:	(bad)  
   14003adcf:	inc    DWORD PTR [rax]
   14003add1:	add    DWORD PTR [rdx],eax
   14003add3:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003adda:	or     cl,BYTE PTR [rbx]
   14003addc:	or     al,0xd
   14003adde:	(bad)  
   14003addf:	movups xmm2,XMMWORD PTR [rcx]
   14003ade2:	adc    dl,BYTE PTR [rbx]
   14003ade4:	adc    al,0x15
   14003ade6:	(bad)  
   14003ade7:	(bad)  
   14003ade8:	sbb    BYTE PTR [rcx],bl
   14003adea:	sbb    bl,BYTE PTR [rbx]
   14003adec:	sbb    al,0x1d
   14003adee:	(bad)  
   14003adef:	(bad)  
   14003adf0:	and    BYTE PTR [rcx],ah
   14003adf2:	and    ah,BYTE PTR [rbx]
   14003adf4:	and    al,0x25
   14003adf6:	es (bad) 
   14003adf8:	sub    BYTE PTR [rcx],ch
   14003adfa:	sub    ch,BYTE PTR [rbx]
   14003adfc:	sub    al,0x2d
   14003adfe:	cs (bad) 
   14003ae00:	xor    BYTE PTR [rcx],dh
   14003ae02:	xor    dh,BYTE PTR [rbx]
   14003ae04:	xor    al,0x35
   14003ae06:	ss (bad) 
   14003ae08:	cmp    BYTE PTR [rcx],bh
   14003ae0a:	cmp    bh,BYTE PTR [rbx]
   14003ae0c:	cmp    al,0x3d
   14003ae0e:	ds (bad) 
   14003ae10:	rex (bad) 
   14003ae12:	(bad)
   14003ae17:	addr32 push 0x6c6b6a69
   14003ae1d:	ins    DWORD PTR es:[rdi],dx
   14003ae1e:	outs   dx,BYTE PTR ds:[rsi]
   14003ae1f:	outs   dx,DWORD PTR ds:[rsi]
   14003ae20:	jo     0x14003ae93
   14003ae22:	jb     0x14003ae97
   14003ae24:	je     0x14003ae9b
   14003ae26:	jbe    0x14003ae9f
   14003ae28:	js     0x14003aea3
   14003ae2a:	jp     0x14003ae87
   14003ae2c:	pop    rsp
   14003ae2d:	pop    rbp
   14003ae2e:	pop    rsi
   14003ae2f:	pop    rdi
   14003ae30:	(bad)  
   14003ae31:	(bad)  
   14003ae32:	(bad)
   14003ae37:	addr32 push 0x6c6b6a69
   14003ae3d:	ins    DWORD PTR es:[rdi],dx
   14003ae3e:	outs   dx,BYTE PTR ds:[rsi]
   14003ae3f:	outs   dx,DWORD PTR ds:[rsi]
   14003ae40:	jo     0x14003aeb3
   14003ae42:	jb     0x14003aeb7
   14003ae44:	je     0x14003aebb
   14003ae46:	jbe    0x14003aebf
   14003ae48:	js     0x14003aec3
   14003ae4a:	jp     0x14003aec7
   14003ae4c:	jl     0x14003aecb
   14003ae4e:	jle    0x14003aecf
   14003ae50:	add    BYTE PTR [rcx-0x7a7b7c7e],0x86
   14003ae57:	xchg   DWORD PTR [rax-0x73747577],ecx
   14003ae5d:	lea    ecx,[rsi-0x6d6e6f71]
   14003ae63:	xchg   ebx,eax
   14003ae64:	xchg   esp,eax
   14003ae65:	xchg   ebp,eax
   14003ae66:	xchg   esi,eax
   14003ae67:	xchg   edi,eax
   14003ae68:	cwde   
   14003ae69:	cdq    
   14003ae6a:	(bad)  
   14003ae6b:	fwait
   14003ae6c:	pushf  
   14003ae6d:	popf   
   14003ae6e:	sahf   
   14003ae6f:	lahf   
   14003ae70:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003ae79:	test   eax,0xadacabaa
   14003ae7e:	scas   al,BYTE PTR es:[rdi]
   14003ae7f:	scas   eax,DWORD PTR es:[rdi]
   14003ae80:	mov    al,0xb1
   14003ae82:	mov    dl,0xb3
   14003ae84:	mov    ah,0xb5
   14003ae86:	mov    dh,0xb7
   14003ae88:	mov    eax,0xbcbbbab9
   14003ae8d:	mov    ebp,0xc1c0bfbe
   14003ae92:	ret    0xc4c3
   14003ae95:	(bad)
   14003ae98:	enter  0xcac9,0xcb
   14003ae9c:	int3   
   14003ae9d:	int    0xce
   14003ae9f:	iret   
   14003aea0:	rcl    cl,1
   14003aea2:	rcl    bl,cl
   14003aea4:	(bad)  
   14003aea5:	(bad)  
   14003aea6:	(bad)  
   14003aea7:	xlat   BYTE PTR ds:[rbx]
   14003aea8:	fcomp  st(1)
   14003aeaa:	fcmovu st,st(3)
   14003aeac:	(bad)  
   14003aeae:	(bad)  
   14003aeb0:	loopne 0x14003ae93
   14003aeb2:	loop   0x14003ae97
   14003aeb4:	in     al,0xe5
   14003aeb6:	out    0xe7,al
   14003aeb8:	call   0x12cef99a6
   14003aebd:	in     eax,dx
   14003aebe:	out    dx,al
   14003aebf:	out    dx,eax
   14003aec0:	lock icebp 
   14003aec2:	repnz repz hlt 
   14003aec5:	cmc    
   14003aec6:	div    bh
   14003aec8:	clc    
   14003aec9:	stc    
   14003aeca:	cli    
   14003aecb:	sti    
   14003aecc:	cld    
   14003aecd:	std    
   14003aece:	(bad)  
   14003aecf:	inc    DWORD PTR [rax-0x7b7c7d7f]
   14003aed5:	test   DWORD PTR [rsi-0x75767779],eax
   14003aedb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14003aee2:	xchg   edx,eax
   14003aee3:	xchg   ebx,eax
   14003aee4:	xchg   esp,eax
   14003aee5:	xchg   ebp,eax
   14003aee6:	xchg   esi,eax
   14003aee7:	xchg   edi,eax
   14003aee8:	cwde   
   14003aee9:	cdq    
   14003aeea:	(bad)  
   14003aeeb:	fwait
   14003aeec:	pushf  
   14003aeed:	popf   
   14003aeee:	sahf   
   14003aeef:	lahf   
   14003aef0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003aef9:	test   eax,0xadacabaa
   14003aefe:	scas   al,BYTE PTR es:[rdi]
   14003aeff:	scas   eax,DWORD PTR es:[rdi]
   14003af00:	mov    al,0xb1
   14003af02:	mov    dl,0xb3
   14003af04:	mov    ah,0xb5
   14003af06:	mov    dh,0xb7
   14003af08:	mov    eax,0xbcbbbab9
   14003af0d:	mov    ebp,0xc1c0bfbe
   14003af12:	ret    0xc4c3
   14003af15:	(bad)
   14003af18:	enter  0xcac9,0xcb
   14003af1c:	int3   
   14003af1d:	int    0xce
   14003af1f:	iret   
   14003af20:	rcl    cl,1
   14003af22:	rcl    bl,cl
   14003af24:	(bad)  
   14003af25:	(bad)  
   14003af26:	(bad)  
   14003af27:	xlat   BYTE PTR ds:[rbx]
   14003af28:	fcomp  st(1)
   14003af2a:	fcmovu st,st(3)
   14003af2c:	(bad)  
   14003af2e:	(bad)  
   14003af30:	loopne 0x14003af13
   14003af32:	loop   0x14003af17
   14003af34:	in     al,0xe5
   14003af36:	out    0xe7,al
   14003af38:	call   0x12cef9a26
   14003af3d:	in     eax,dx
   14003af3e:	out    dx,al
   14003af3f:	out    dx,eax
   14003af40:	lock icebp 
   14003af42:	repnz repz hlt 
   14003af45:	cmc    
   14003af46:	div    bh
   14003af48:	clc    
   14003af49:	stc    
   14003af4a:	cli    
   14003af4b:	sti    
   14003af4c:	cld    
   14003af4d:	std    
   14003af4e:	(bad)  
   14003af4f:	inc    DWORD PTR [rax]
   14003af51:	add    DWORD PTR [rdx],eax
   14003af53:	add    eax,DWORD PTR [rax*1+0x9080706]
   14003af5a:	or     cl,BYTE PTR [rbx]
   14003af5c:	or     al,0xd
   14003af5e:	(bad)  
   14003af5f:	movups xmm2,XMMWORD PTR [rcx]
   14003af62:	adc    dl,BYTE PTR [rbx]
   14003af64:	adc    al,0x15
   14003af66:	(bad)  
   14003af67:	(bad)  
   14003af68:	sbb    BYTE PTR [rcx],bl
   14003af6a:	sbb    bl,BYTE PTR [rbx]
   14003af6c:	sbb    al,0x1d
   14003af6e:	(bad)  
   14003af6f:	(bad)  
   14003af70:	and    BYTE PTR [rcx],ah
   14003af72:	and    ah,BYTE PTR [rbx]
   14003af74:	and    al,0x25
   14003af76:	es (bad) 
   14003af78:	sub    BYTE PTR [rcx],ch
   14003af7a:	sub    ch,BYTE PTR [rbx]
   14003af7c:	sub    al,0x2d
   14003af7e:	cs (bad) 
   14003af80:	xor    BYTE PTR [rcx],dh
   14003af82:	xor    dh,BYTE PTR [rbx]
   14003af84:	xor    al,0x35
   14003af86:	ss (bad) 
   14003af88:	cmp    BYTE PTR [rcx],bh
   14003af8a:	cmp    bh,BYTE PTR [rbx]
   14003af8c:	cmp    al,0x3d
   14003af8e:	ds (bad) 
   14003af90:	rex
   14003af91:	rex.B
   14003af92:	rex.X
   14003af93:	rex.XB
   14003af94:	rex.R
   14003af95:	rex.RB
   14003af96:	rex.RX
   14003af97:	rex.RXB
   14003af98:	rex.W
   14003af99:	rex.WB
   14003af9a:	rex.WX
   14003af9b:	rex.WXB
   14003af9c:	rex.WR
   14003af9d:	rex.WRB
   14003af9e:	rex.WRX
   14003af9f:	rex.WRXB push r8
   14003afa1:	push   rcx
   14003afa2:	push   rdx
   14003afa3:	push   rbx
   14003afa4:	push   rsp
   14003afa5:	push   rbp
   14003afa6:	push   rsi
   14003afa7:	push   rdi
   14003afa8:	pop    rax
   14003afa9:	pop    rcx
   14003afaa:	pop    rdx
   14003afab:	pop    rbx
   14003afac:	pop    rsp
   14003afad:	pop    rbp
   14003afae:	pop    rsi
   14003afaf:	pop    rdi
   14003afb0:	(bad)  
   14003afb1:	rex.B
   14003afb2:	rex.X
   14003afb3:	rex.XB
   14003afb4:	rex.R
   14003afb5:	rex.RB
   14003afb6:	rex.RX
   14003afb7:	rex.RXB
   14003afb8:	rex.W
   14003afb9:	rex.WB
   14003afba:	rex.WX
   14003afbb:	rex.WXB
   14003afbc:	rex.WR
   14003afbd:	rex.WRB
   14003afbe:	rex.WRX
   14003afbf:	rex.WRXB push r8
   14003afc1:	push   rcx
   14003afc2:	push   rdx
   14003afc3:	push   rbx
   14003afc4:	push   rsp
   14003afc5:	push   rbp
   14003afc6:	push   rsi
   14003afc7:	push   rdi
   14003afc8:	pop    rax
   14003afc9:	pop    rcx
   14003afca:	pop    rdx
   14003afcb:	jnp    0x14003b049
   14003afcd:	jge    0x14003b04d
   14003afcf:	jg     0x14003af51
   14003afd1:	add    DWORD PTR [rdx-0x797a7b7d],0x8a898887
   14003afdb:	mov    ecx,DWORD PTR [rbp+rcx*4-0x6e6f7072]
   14003afe2:	xchg   edx,eax
   14003afe3:	xchg   ebx,eax
   14003afe4:	xchg   esp,eax
   14003afe5:	xchg   ebp,eax
   14003afe6:	xchg   esi,eax
   14003afe7:	xchg   edi,eax
   14003afe8:	cwde   
   14003afe9:	cdq    
   14003afea:	(bad)  
   14003afeb:	fwait
   14003afec:	pushf  
   14003afed:	popf   
   14003afee:	sahf   
   14003afef:	lahf   
   14003aff0:	movabs al,ds:0xa8a7a6a5a4a3a2a1
   14003aff9:	test   eax,0xadacabaa
   14003affe:	scas   al,BYTE PTR es:[rdi]
   14003afff:	scas   eax,DWORD PTR es:[rdi]
   14003b000:	mov    al,0xb1
   14003b002:	mov    dl,0xb3
   14003b004:	mov    ah,0xb5
   14003b006:	mov    dh,0xb7
   14003b008:	mov    eax,0xbcbbbab9
   14003b00d:	mov    ebp,0xc1c0bfbe
   14003b012:	ret    0xc4c3
   14003b015:	(bad)
   14003b018:	enter  0xcac9,0xcb
   14003b01c:	int3   
   14003b01d:	int    0xce
   14003b01f:	iret   
   14003b020:	rcl    cl,1
   14003b022:	rcl    bl,cl
   14003b024:	(bad)  
   14003b025:	(bad)  
   14003b026:	(bad)  
   14003b027:	xlat   BYTE PTR ds:[rbx]
   14003b028:	fcomp  st(1)
   14003b02a:	fcmovu st,st(3)
   14003b02c:	(bad)  
   14003b02e:	(bad)  
   14003b030:	loopne 0x14003b013
   14003b032:	loop   0x14003b017
   14003b034:	in     al,0xe5
   14003b036:	out    0xe7,al
   14003b038:	call   0x12cef9b26
   14003b03d:	in     eax,dx
   14003b03e:	out    dx,al
   14003b03f:	out    dx,eax
   14003b040:	lock icebp 
   14003b042:	repnz repz hlt 
   14003b045:	cmc    
   14003b046:	div    bh
   14003b048:	clc    
   14003b049:	stc    
   14003b04a:	cli    
   14003b04b:	sti    
   14003b04c:	cld    
   14003b04d:	std    
   14003b04e:	(bad)  
   14003b04f:	dec    DWORD PTR [rax+0x48]
   14003b052:	cmp    ch,BYTE PTR [rbp+0x6d]
   14003b055:	cmp    dh,BYTE PTR [rbx+0x73]
	...
   14003b060:	fs fs fs fs sub al,0x20
   14003b066:	rex.WRB
   14003b067:	rex.WRB
   14003b068:	rex.WRB
   14003b069:	rex.WRB and BYTE PTR [r12+riz*2+0x2c],r12b
   14003b06e:	and    BYTE PTR [rcx+0x79],bh
   14003b071:	jns    0x14003b0ec
   14003b073:	add    BYTE PTR [rax],al
   14003b075:	add    BYTE PTR [rax],al
   14003b077:	add    BYTE PTR [rbp+0x4d],cl
   14003b07a:	(bad)  
   14003b07b:	fs fs (bad) 
   14003b07e:	jns    0x14003b0f9
   14003b080:	add    BYTE PTR [rax],al
   14003b082:	add    BYTE PTR [rax],al
   14003b084:	push   rax
   14003b085:	rex.WRB add BYTE PTR [r8],r8b
   14003b088:	rex.B
   14003b089:	rex.WRB add BYTE PTR [r8],r8b
   14003b08c:	add    BYTE PTR [rax],al
   14003b08e:	add    BYTE PTR [rax],al
   14003b090:	rex.R
   14003b091:	movsxd esp,DWORD PTR gs:[rbp+0x6d]
   14003b095:	(bad)  
   14003b096:	gs jb  0x14003b099
   14003b099:	add    BYTE PTR [rax],al
   14003b09b:	add    BYTE PTR [rax],al
   14003b09d:	add    BYTE PTR [rax],al
   14003b09f:	add    BYTE PTR [rsi+0x6f],cl
   14003b0a2:	jbe    0x14003b109
   14003b0a4:	ins    DWORD PTR es:[rdi],dx
   14003b0a5:	(bad)  
   14003b0a6:	gs jb  0x14003b0a9
   14003b0a9:	add    BYTE PTR [rax],al
   14003b0ab:	add    BYTE PTR [rax],al
   14003b0ad:	add    BYTE PTR [rax],al
   14003b0af:	add    BYTE PTR [rdi+0x63],cl
   14003b0b2:	je     0x14003b123
   14003b0b4:	(bad)  
   14003b0b5:	gs jb  0x14003b0b8
   14003b0b8:	push   rbx
   14003b0b9:	gs jo  0x14003b130
   14003b0bc:	gs ins DWORD PTR es:[rdi],dx
   14003b0be:	(bad)  
   14003b0bf:	gs jb  0x14003b0c2
   14003b0c2:	add    BYTE PTR [rax],al
   14003b0c4:	rex.B jne 0x14003b12e
   14003b0c7:	jne    0x14003b13c
   14003b0c9:	je     0x14003b0cb
   14003b0cb:	add    BYTE PTR [rdx+0x75],cl
   14003b0ce:	ins    BYTE PTR es:[rdi],dx
   14003b0cf:	jns    0x14003b0d1
   14003b0d1:	add    BYTE PTR [rax],al
   14003b0d3:	add    BYTE PTR [rdx+0x75],cl
   14003b0d6:	outs   dx,BYTE PTR ds:[rsi]
   14003b0d7:	add    BYTE PTR gs:[rax],al
   14003b0da:	add    BYTE PTR [rax],al
   14003b0dc:	rex.B jo 0x14003b151
   14003b0df:	imul   ebp,DWORD PTR [rax+rax*1+0x0],0x72614d00
   14003b0e7:	movsxd ebp,DWORD PTR [rax+0x0]
   14003b0ea:	add    BYTE PTR [rax],al
   14003b0ec:	add    BYTE PTR [rax],al
   14003b0ee:	add    BYTE PTR [rax],al
   14003b0f0:	rex.RX
   14003b0f1:	(bad)
   14003b0f7:	jns    0x14003b0f9
   14003b0f9:	add    BYTE PTR [rax],al
   14003b0fb:	add    BYTE PTR [rax],al
   14003b0fd:	add    BYTE PTR [rax],al
   14003b0ff:	add    BYTE PTR [rdx+0x61],cl
   14003b102:	outs   dx,BYTE PTR ds:[rsi]
   14003b103:	jne    0x14003b166
   14003b105:	jb     0x14003b180
   14003b107:	add    BYTE PTR [rbp+riz*2+0x63],al
   14003b10b:	add    BYTE PTR [rsi+0x6f],cl
   14003b10e:	jbe    0x14003b110
   14003b110:	movsxd r14,DWORD PTR [r8+r8*1+0x53]
   14003b115:	gs jo  0x14003b118
   14003b118:	rex.B jne 0x14003b182
   14003b11b:	add    BYTE PTR [rdx+0x75],cl
   14003b11e:	ins    BYTE PTR es:[rdi],dx
   14003b11f:	add    BYTE PTR [rdx+0x75],cl
   14003b122:	outs   dx,BYTE PTR ds:[rsi]
   14003b123:	add    BYTE PTR [rbp+0x61],cl
   14003b126:	jns    0x14003b128
   14003b128:	rex.B jo 0x14003b19d
   14003b12b:	add    BYTE PTR [rbp+0x61],cl
   14003b12e:	jb     0x14003b130
   14003b130:	rex.RX
   14003b131:	gs (bad) 
   14003b133:	add    BYTE PTR [rdx+0x61],cl
   14003b136:	outs   dx,BYTE PTR ds:[rsi]
   14003b137:	add    BYTE PTR [rbx+0x61],dl
   14003b13a:	je     0x14003b1b1
   14003b13c:	jb     0x14003b1a2
   14003b13e:	(bad)  
   14003b13f:	jns    0x14003b141
   14003b141:	add    BYTE PTR [rax],al
   14003b143:	add    BYTE PTR [rsi+0x72],al
   14003b146:	imul   esp,DWORD PTR [rcx+riz*2+0x79],0x0
   14003b14e:	add    BYTE PTR [rax],al
   14003b150:	push   rsp
   14003b151:	push   0x64737275
   14003b156:	(bad)  
   14003b157:	jns    0x14003b159
   14003b159:	add    BYTE PTR [rax],al
   14003b15b:	add    BYTE PTR [rax],al
   14003b15d:	add    BYTE PTR [rax],al
   14003b15f:	add    BYTE PTR [rdi+0x65],dl
   14003b162:	outs   dx,BYTE PTR fs:[rsi]
   14003b164:	gs jae 0x14003b1cb
   14003b167:	(bad)  
   14003b168:	jns    0x14003b16a
   14003b16a:	add    BYTE PTR [rax],al
   14003b16c:	add    BYTE PTR [rax],al
   14003b16e:	add    BYTE PTR [rax],al
   14003b170:	push   rsp
   14003b171:	jne    0x14003b1d8
   14003b173:	jae    0x14003b1d9
   14003b175:	(bad)  
   14003b176:	jns    0x14003b178
   14003b178:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14003b17a:	outs   dx,BYTE PTR ds:[rsi]
   14003b17b:	fs (bad) 
   14003b17d:	jns    0x14003b17f
   14003b17f:	add    BYTE PTR [rbx+0x75],dl
   14003b182:	outs   dx,BYTE PTR ds:[rsi]
   14003b183:	fs (bad) 
   14003b185:	jns    0x14003b187
   14003b187:	add    BYTE PTR [rbx+0x61],dl
   14003b18a:	je     0x14003b18c
   14003b18c:	rex.RX jb 0x14003b1f8
   14003b18f:	add    BYTE PTR [rax+rbp*2+0x75],dl
   14003b193:	add    BYTE PTR [rdi+0x65],dl
   14003b196:	add    BYTE PTR fs:[rbp+rsi*2+0x65],dl
   14003b19b:	add    BYTE PTR [rbp+0x6f],cl
   14003b19e:	outs   dx,BYTE PTR ds:[rsi]
   14003b19f:	add    BYTE PTR [rbx+0x75],dl
   14003b1a2:	outs   dx,BYTE PTR ds:[rsi]
   14003b1a3:	add    BYTE PTR [rax],al
   14003b1a5:	add    BYTE PTR [rax],al
   14003b1a7:	add    BYTE PTR [rbp+0x6e],dh
   14003b1aa:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x6174732d
   14003b1b2:	je     0x14003b219
   14003b1b4:	jae    0x14003b1b6
   14003b1b6:	add    BYTE PTR [rax],al
   14003b1b8:	jne    0x14003b228
   14003b1ba:	imul   esi,DWORD PTR [rbp+riz*2+0x64],0x6e696b2d
   14003b1c2:	outs   dx,DWORD PTR fs:[esi]
   14003b1c5:	ins    DWORD PTR es:[rdi],dx
   14003b1c6:	add    BYTE PTR [rax],al
   14003b1c8:	je     0x14003b23c
   14003b1ca:	imul   ebp,DWORD PTR [rsi+0x69],0x20646164
   14003b1d1:	and    BYTE PTR es:[rdi+rbp*2+0x62],dh
   14003b1d6:	(bad)  
   14003b1d7:	outs   dx,DWORD PTR ds:[esi]
   14003b1d9:	add    BYTE PTR [rax],al
   14003b1db:	add    BYTE PTR [rax],al
   14003b1dd:	add    BYTE PTR [rax],al
   14003b1df:	add    BYTE PTR [rbx+0x6f],dh
   14003b1e2:	jne    0x14003b258
   14003b1e4:	push   0x726f6b2d
   14003b1e9:	gs (bad) 
   14003b1eb:	add    BYTE PTR [rax],al
   14003b1ed:	add    BYTE PTR [rax],al
   14003b1ef:	add    BYTE PTR [rbx+0x6f],dh
   14003b1f2:	jne    0x14003b268
   14003b1f4:	push   0x7266612d
   14003b1f9:	imul   esp,DWORD PTR [rbx+0x61],0x0
   14003b200:	jae    0x14003b271
   14003b202:	jne    0x14003b278
   14003b204:	push   0x726f6b20
   14003b209:	gs (bad) 
   14003b20b:	add    BYTE PTR [rax],al
   14003b20d:	add    BYTE PTR [rax],al
   14003b20f:	add    BYTE PTR [rbx+0x6f],dh
   14003b212:	jne    0x14003b288
   14003b214:	push   0x72666120
   14003b219:	imul   esp,DWORD PTR [rbx+0x61],0x0
   14003b220:	jae    0x14003b28e
   14003b222:	outs   dx,DWORD PTR ds:[rsi]
   14003b223:	jbe    0x14003b286
   14003b225:	imul   eax,DWORD PTR [rax],0x0
   14003b228:	jo     0x14003b29f
   14003b22a:	gs jb  0x14003b2a1
   14003b22d:	outs   dx,DWORD PTR ds:[rsi]
   14003b22e:	sub    eax,0x6f636972
   14003b233:	add    BYTE PTR [rax],al
   14003b235:	add    BYTE PTR [rax],al
   14003b237:	add    BYTE PTR [rax+0x72],dh
   14003b23a:	sub    eax,0x6e696863
   14003b23f:	(bad)  
	...
   14003b248:	jo     0x14003b2bc
   14003b24a:	and    BYTE PTR [rbx+0x68],ah
   14003b24d:	imul   ebp,DWORD PTR [rsi+0x61],0x0
   14003b254:	outs   dx,BYTE PTR ds:[rsi]
   14003b255:	jp     0x14003b257
   14003b257:	add    BYTE PTR [rsi+0x65],ch
   14003b25a:	ja     0x14003b289
   14003b25c:	jp     0x14003b2c3
   14003b25e:	(bad)  
   14003b25f:	ins    BYTE PTR es:[rdi],dx
   14003b260:	(bad)  
   14003b261:	outs   dx,BYTE PTR ds:[rsi]
   14003b262:	add    BYTE PTR fs:[rax],al
   14003b265:	add    BYTE PTR [rax],al
   14003b267:	add    BYTE PTR [rax+0x6f],ch
   14003b26a:	outs   dx,BYTE PTR ds:[rsi]
   14003b26b:	addr32 sub eax,0x676e6f6b
   14003b271:	add    BYTE PTR [rax],al
   14003b273:	add    BYTE PTR [rax],al
   14003b275:	add    BYTE PTR [rax],al
   14003b277:	add    BYTE PTR [rax+0x6f],ch
   14003b27a:	ins    BYTE PTR es:[rdi],dx
   14003b27b:	ins    BYTE PTR es:[rdi],dx
   14003b27c:	(bad)  
   14003b27d:	outs   dx,BYTE PTR ds:[rsi]
   14003b27e:	add    BYTE PTR fs:[rdi+0x72],ah
   14003b282:	gs (bad) 
   14003b284:	je     0x14003b2a6
   14003b286:	(bad)  
   14003b288:	imul   esi,DWORD PTR [rcx+riz*2+0x69],0x6e
   14003b290:	outs   dx,BYTE PTR gs:[rsi]
   14003b292:	ins    BYTE PTR es:[edi],dx
   14003b294:	(bad)  
   14003b295:	outs   dx,BYTE PTR ds:[rsi]
   14003b296:	add    BYTE PTR fs:[rbx+0x7a],ah
   14003b29a:	movsxd ebp,DWORD PTR gs:[rax+0x0]
   14003b29e:	add    BYTE PTR [rax],al
   14003b2a0:	movsxd ebp,DWORD PTR [rax+0x69]
   14003b2a3:	outs   dx,BYTE PTR ds:[rsi]
   14003b2a4:	(bad)  
   14003b2a5:	add    BYTE PTR [rax],al
   14003b2a7:	add    BYTE PTR [rdx+0x72],ah
   14003b2aa:	imul   esi,DWORD PTR [rcx+riz*2+0x69],0x6d61006e
   14003b2b2:	gs jb  0x14003b31e
   14003b2b5:	movsxd esp,DWORD PTR [rcx+0x0]
   14003b2b8:	jne    0x14003b32d
   14003b2ba:	(bad)  
   14003b2bb:	add    BYTE PTR [rbp+0x73],dh
   14003b2be:	add    BYTE PTR [rax],al
   14003b2c0:	jne    0x14003b32d
   14003b2c2:	add    BYTE PTR [rax],al
   14003b2c4:	jae    0x14003b33d
   14003b2c6:	imul   esi,DWORD PTR [rbx+0x73],0x0
   14003b2cd:	add    BYTE PTR [rax],al
   14003b2cf:	add    BYTE PTR [rbx+0x77],dh
   14003b2d2:	gs imul esi,DWORD PTR fs:[rbx+0x68],0x6e69662d
   14003b2db:	ins    BYTE PTR es:[rdi],dx
   14003b2dc:	(bad)  
   14003b2dd:	outs   dx,BYTE PTR ds:[rsi]
   14003b2de:	add    BYTE PTR fs:[rbx+0x70],dh
   14003b2e2:	(bad)  
   14003b2e3:	outs   dx,BYTE PTR ds:[rsi]
   14003b2e4:	imul   esi,DWORD PTR [rbx+0x68],0x6e65762d
   14003b2eb:	gs jp  0x14003b363
   14003b2ee:	gs ins BYTE PTR es:[rdi],dx
   14003b2f0:	(bad)  
   14003b2f1:	add    BYTE PTR [rax],al
   14003b2f3:	add    BYTE PTR [rax],al
   14003b2f5:	add    BYTE PTR [rax],al
   14003b2f7:	add    BYTE PTR [rbx+0x70],dh
   14003b2fa:	(bad)  
   14003b2fb:	outs   dx,BYTE PTR ds:[rsi]
   14003b2fc:	imul   esi,DWORD PTR [rbx+0x68],0x7572752d
   14003b303:	addr32 jne 0x14003b367
   14003b306:	jns    0x14003b308
   14003b308:	jae    0x14003b37a
   14003b30a:	(bad)  
   14003b30b:	outs   dx,BYTE PTR ds:[rsi]
   14003b30c:	imul   esi,DWORD PTR [rbx+0x68],0x6575702d
   14003b313:	jb     0x14003b389
   14003b315:	outs   dx,DWORD PTR ds:[rsi]
   14003b316:	and    BYTE PTR [rdx+0x69],dh
   14003b319:	movsxd ebp,DWORD PTR [rdi+0x0]
   14003b31c:	add    BYTE PTR [rax],al
   14003b31e:	add    BYTE PTR [rax],al
   14003b320:	jae    0x14003b392
   14003b322:	(bad)  
   14003b323:	outs   dx,BYTE PTR ds:[rsi]
   14003b324:	imul   esi,DWORD PTR [rbx+0x68],0x7265702d
   14003b32b:	jne    0x14003b32d
   14003b32d:	add    BYTE PTR [rax],al
   14003b32f:	add    BYTE PTR [rbx+0x70],dh
   14003b332:	(bad)  
   14003b333:	outs   dx,BYTE PTR ds:[rsi]
   14003b334:	imul   esi,DWORD PTR [rbx+0x68],0x7261702d
   14003b33b:	(bad)  
   14003b33c:	addr32 jne 0x14003b3a0
   14003b33f:	jns    0x14003b341
   14003b341:	add    BYTE PTR [rax],al
   14003b343:	add    BYTE PTR [rax],al
   14003b345:	add    BYTE PTR [rax],al
   14003b347:	add    BYTE PTR [rbx+0x70],dh
   14003b34a:	(bad)  
   14003b34b:	outs   dx,BYTE PTR ds:[rsi]
   14003b34c:	imul   esi,DWORD PTR [rbx+0x68],0x6e61702d
   14003b353:	(bad)  
   14003b354:	ins    DWORD PTR es:[rdi],dx
   14003b355:	(bad)  
   14003b356:	add    BYTE PTR [rax],al
   14003b358:	jae    0x14003b3ca
   14003b35a:	(bad)  
   14003b35b:	outs   dx,BYTE PTR ds:[rsi]
   14003b35c:	imul   esi,DWORD PTR [rbx+0x68],0x63696e2d
   14003b363:	(bad)  
   14003b364:	jb     0x14003b3c7
   14003b366:	addr32 jne 0x14003b3ca
   14003b369:	add    BYTE PTR [rax],al
   14003b36b:	add    BYTE PTR [rax],al
   14003b36d:	add    BYTE PTR [rax],al
   14003b36f:	add    BYTE PTR [rbx+0x70],dh
   14003b372:	(bad)  
   14003b373:	outs   dx,BYTE PTR ds:[rsi]
   14003b374:	imul   esi,DWORD PTR [rbx+0x68],0x646f6d2d
   14003b37b:	gs jb  0x14003b3ec
   14003b37e:	add    BYTE PTR [rax],al
   14003b380:	jae    0x14003b3f2
   14003b382:	(bad)  
   14003b383:	outs   dx,BYTE PTR ds:[rsi]
   14003b384:	imul   esi,DWORD PTR [rbx+0x68],0x78656d2d
   14003b38b:	imul   esp,DWORD PTR [rbx+0x61],0x7073006e
   14003b392:	(bad)  
   14003b393:	outs   dx,BYTE PTR ds:[rsi]
   14003b394:	imul   esi,DWORD PTR [rbx+0x68],0x6e6f682d
   14003b39b:	fs jne 0x14003b410
   14003b39e:	(bad)  
   14003b39f:	jae    0x14003b3a1
   14003b3a1:	add    BYTE PTR [rax],al
   14003b3a3:	add    BYTE PTR [rax],al
   14003b3a5:	add    BYTE PTR [rax],al
   14003b3a7:	add    BYTE PTR [rbx+0x70],dh
   14003b3aa:	(bad)  
   14003b3ab:	outs   dx,BYTE PTR ds:[rsi]
   14003b3ac:	imul   esi,DWORD PTR [rbx+0x68],0x6175672d
   14003b3b3:	je     0x14003b41a
   14003b3b5:	ins    DWORD PTR es:[rdi],dx
   14003b3b6:	(bad)  
   14003b3b7:	ins    BYTE PTR es:[rdi],dx
   14003b3b8:	(bad)  
   14003b3b9:	add    BYTE PTR [rax],al
   14003b3bb:	add    BYTE PTR [rax],al
   14003b3bd:	add    BYTE PTR [rax],al
   14003b3bf:	add    BYTE PTR [rbx+0x70],dh
   14003b3c2:	(bad)  
   14003b3c3:	outs   dx,BYTE PTR ds:[rsi]
   14003b3c4:	imul   esi,DWORD PTR [rbx+0x68],0x206c652d
   14003b3cb:	jae    0x14003b42e
   14003b3cd:	ins    BYTE PTR es:[rdi],dx
   14003b3ce:	jbe    0x14003b431
   14003b3d0:	outs   dx,DWORD PTR fs:[rsi]
   14003b3d2:	jb     0x14003b3d4
   14003b3d4:	add    BYTE PTR [rax],al
   14003b3d6:	add    BYTE PTR [rax],al
   14003b3d8:	jae    0x14003b44a
   14003b3da:	(bad)  
   14003b3db:	outs   dx,BYTE PTR ds:[rsi]
   14003b3dc:	imul   esi,DWORD PTR [rbx+0x68],0x7563652d
   14003b3e3:	(bad)  
   14003b3e4:	outs   dx,DWORD PTR fs:[rsi]
   14003b3e6:	jb     0x14003b3e8
   14003b3e8:	jae    0x14003b45a
   14003b3ea:	(bad)  
   14003b3eb:	outs   dx,BYTE PTR ds:[rsi]
   14003b3ec:	imul   esi,DWORD PTR [rbx+0x68],0x6d6f642d
   14003b3f3:	imul   ebp,DWORD PTR [rsi+0x69],0x206e6163
   14003b3fa:	jb     0x14003b461
   14003b3fc:	jo     0x14003b473
   14003b3fe:	(bad)  
   14003b3ff:	ins    BYTE PTR es:[rdi],dx
   14003b400:	imul   esp,DWORD PTR [rbx+0x0],0x0
   14003b407:	add    BYTE PTR [rbx+0x70],dh
   14003b40a:	(bad)  
   14003b40b:	outs   dx,BYTE PTR ds:[rsi]
   14003b40c:	imul   esi,DWORD PTR [rbx+0x68],0x736f632d
   14003b413:	je     0x14003b476
   14003b415:	and    BYTE PTR [rdx+0x69],dh
   14003b418:	movsxd esp,DWORD PTR [rcx+0x0]
   14003b41b:	add    BYTE PTR [rax],al
   14003b41d:	add    BYTE PTR [rax],al
   14003b41f:	add    BYTE PTR [rbx+0x70],dh
   14003b422:	(bad)  
   14003b423:	outs   dx,BYTE PTR ds:[rsi]
   14003b424:	imul   esi,DWORD PTR [rbx+0x68],0x6c6f632d
   14003b42b:	outs   dx,DWORD PTR ds:[rsi]
   14003b42c:	ins    DWORD PTR es:[rdi],dx
   14003b42d:	(bad)  
   14003b42e:	imul   esp,DWORD PTR [rcx+0x0],0x0
   14003b435:	add    BYTE PTR [rax],al
   14003b437:	add    BYTE PTR [rbx+0x70],dh
   14003b43a:	(bad)  
   14003b43b:	outs   dx,BYTE PTR ds:[rsi]
   14003b43c:	imul   esi,DWORD PTR [rbx+0x68],0x6968632d
   14003b443:	ins    BYTE PTR es:[rdi],dx
   14003b444:	add    BYTE PTR gs:[rax],al
   14003b447:	add    BYTE PTR [rbx+0x70],dh
   14003b44a:	(bad)  
   14003b44b:	outs   dx,BYTE PTR ds:[rsi]
   14003b44c:	imul   esi,DWORD PTR [rbx+0x68],0x6c6f622d
   14003b453:	imul   esi,DWORD PTR [rsi+0x69],0x70730061
   14003b45a:	(bad)  
   14003b45b:	outs   dx,BYTE PTR ds:[rsi]
   14003b45c:	imul   esi,DWORD PTR [rbx+0x68],0x6772612d
   14003b463:	outs   dx,BYTE PTR gs:[rsi]
   14003b465:	je     0x14003b4d0
   14003b467:	outs   dx,BYTE PTR ds:[rsi]
   14003b468:	(bad)  
   14003b469:	add    BYTE PTR [rax],al
   14003b46b:	add    BYTE PTR [rax],al
   14003b46d:	add    BYTE PTR [rax],al
   14003b46f:	add    BYTE PTR [rax+0x6f],dh
   14003b472:	jb     0x14003b4e8
   14003b474:	jne    0x14003b4dd
   14003b476:	jne    0x14003b4dd
   14003b478:	jae    0x14003b4df
   14003b47a:	sub    eax,0x7a617262
   14003b47f:	imul   ebp,DWORD PTR [rcx+rbp*2+0x61],0x6e
   14003b487:	add    BYTE PTR [rsi+0x6f],ch
   14003b48a:	jb     0x14003b503
   14003b48c:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x6e796e2d
   14003b495:	outs   dx,DWORD PTR ds:[rsi]
   14003b496:	jb     0x14003b50b
   14003b498:	imul   eax,DWORD PTR [rax],0x0
   14003b49b:	add    BYTE PTR [rax],al
   14003b49d:	add    BYTE PTR [rax],al
   14003b49f:	add    BYTE PTR [rsi+0x6f],ch
   14003b4a2:	jb     0x14003b51b
   14003b4a4:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x6b6f622d
   14003b4ad:	ins    DWORD PTR es:[rdi],dx
   14003b4ae:	(bad)  
   14003b4af:	ins    BYTE PTR es:[rdi],dx
	...
   14003b4b8:	outs   dx,BYTE PTR ds:[rsi]
   14003b4b9:	outs   dx,DWORD PTR ds:[rsi]
   14003b4ba:	jb     0x14003b533
   14003b4bc:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x0
   14003b4c5:	add    BYTE PTR [rax],al
   14003b4c7:	add    BYTE PTR [rcx+0x74],ch
   14003b4ca:	(bad)  
   14003b4cb:	ins    BYTE PTR es:[rdi],dx
   14003b4cc:	imul   esp,DWORD PTR [rcx+0x6e],0x6977732d
   14003b4d3:	jae    0x14003b548
   14003b4d5:	add    BYTE PTR [rax],al
   14003b4d7:	add    BYTE PTR [rcx+0x72],ch
   14003b4da:	imul   esi,DWORD PTR [rbx+0x68],0x676e652d
   14003b4e1:	ins    BYTE PTR es:[rdi],dx
   14003b4e2:	imul   esi,DWORD PTR [rbx+0x68],0x67000000
   14003b4e9:	gs jb  0x14003b559
   14003b4ec:	(bad)  
   14003b4ed:	outs   dx,BYTE PTR ds:[rsi]
   14003b4ee:	sub    eax,0x73697773
   14003b4f3:	jae    0x14003b4f5
   14003b4f5:	add    BYTE PTR [rax],al
   14003b4f7:	add    BYTE PTR [rdi+0x65],ah
   14003b4fa:	jb     0x14003b569
   14003b4fc:	(bad)  
   14003b4fd:	outs   dx,BYTE PTR ds:[rsi]
   14003b4fe:	sub    eax,0x6578756c
   14003b503:	ins    DWORD PTR es:[rdi],dx
   14003b504:	(bad)  
   14003b505:	outs   dx,DWORD PTR ds:[rsi]
   14003b506:	jne    0x14003b57a
   14003b508:	add    BYTE PTR [eax],al
   14003b50b:	add    BYTE PTR [rax],al
   14003b50d:	add    BYTE PTR [rax],al
   14003b50f:	add    BYTE PTR [rdi+0x65],ah
   14003b512:	jb     0x14003b581
   14003b514:	(bad)  
   14003b515:	outs   dx,BYTE PTR ds:[rsi]
   14003b516:	sub    eax,0x6863696c
   14003b51b:	je     0x14003b582
   14003b51d:	outs   dx,BYTE PTR ds:[rsi]
   14003b51e:	jae    0x14003b594
   14003b520:	imul   ebp,DWORD PTR gs:[rsi+0x0],0x0
   14003b528:	addr32 gs jb 0x14003b599
   14003b52c:	(bad)  
   14003b52d:	outs   dx,BYTE PTR ds:[rsi]
   14003b52e:	sub    eax,0x74737561
   14003b533:	jb     0x14003b59e
   14003b535:	(bad)  
   14003b536:	outs   dx,BYTE PTR ds:[rsi]
   14003b537:	add    BYTE PTR [rsi+0x72],ah
   14003b53a:	outs   dx,BYTE PTR gs:[rsi]
   14003b53c:	movsxd ebp,DWORD PTR [rax+0x2d]
   14003b53f:	jae    0x14003b5b8
   14003b541:	imul   esi,DWORD PTR [rbx+0x73],0x0
   14003b548:	data16 jb 0x14003b5b0
   14003b54b:	outs   dx,BYTE PTR ds:[rsi]
   14003b54c:	movsxd ebp,DWORD PTR [rax+0x2d]
   14003b54f:	ins    BYTE PTR es:[rdi],dx
   14003b550:	jne    0x14003b5ca
   14003b552:	gs ins DWORD PTR es:[rdi],dx
   14003b554:	(bad)  
   14003b555:	outs   dx,DWORD PTR ds:[rsi]
   14003b556:	jne    0x14003b5ca
   14003b558:	add    BYTE PTR [eax],al
   14003b55b:	add    BYTE PTR [rax],al
   14003b55d:	add    BYTE PTR [rax],al
   14003b55f:	add    BYTE PTR [rsi+0x72],ah
   14003b562:	outs   dx,BYTE PTR gs:[rsi]
   14003b564:	movsxd ebp,DWORD PTR [rax+0x2d]
   14003b567:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003b56a:	(bad)  
   14003b56b:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x65726600
   14003b573:	outs   dx,BYTE PTR ds:[rsi]
   14003b574:	movsxd ebp,DWORD PTR [rax+0x2d]
   14003b577:	(bad)  
   14003b578:	gs ins BYTE PTR es:[rdi],dx
   14003b57a:	imul   esp,DWORD PTR [ecx+0x6e],0x6e650000
   14003b582:	ins    BYTE PTR es:[edi],dx
   14003b584:	imul   esi,DWORD PTR [rbx+0x68],0x6173752d
   14003b58b:	add    BYTE PTR [rax],al
   14003b58d:	add    BYTE PTR [rax],al
   14003b58f:	add    BYTE PTR [rbp+0x6e],ah
   14003b592:	ins    BYTE PTR es:[edi],dx
   14003b594:	imul   esi,DWORD PTR [rbx+0x68],0x73752d
   14003b59b:	add    BYTE PTR [rax],al
   14003b59d:	add    BYTE PTR [rax],al
   14003b59f:	add    BYTE PTR [rbp+0x6e],ah
   14003b5a2:	ins    BYTE PTR es:[edi],dx
   14003b5a4:	imul   esi,DWORD PTR [rbx+0x68],0x6b752d
   14003b5ab:	add    BYTE PTR [rax],al
   14003b5ad:	add    BYTE PTR [rax],al
   14003b5af:	add    BYTE PTR [rbp+0x6e],ah
   14003b5b2:	ins    BYTE PTR es:[edi],dx
   14003b5b4:	imul   esi,DWORD PTR [rbx+0x68],0x6972742d
   14003b5bb:	outs   dx,BYTE PTR ds:[rsi]
   14003b5bc:	imul   esp,DWORD PTR [rcx+riz*2+0x64],0x74207920
   14003b5c4:	outs   dx,DWORD PTR ds:[rsi]
   14003b5c5:	(bad)
   14003b5ca:	add    BYTE PTR [rax],al
   14003b5cc:	add    BYTE PTR [rax],al
   14003b5ce:	add    BYTE PTR [rax],al
   14003b5d0:	outs   dx,BYTE PTR gs:[rsi]
   14003b5d2:	ins    BYTE PTR es:[edi],dx
   14003b5d4:	imul   esi,DWORD PTR [rbx+0x68],0x756f732d
   14003b5db:	je     0x14003b645
   14003b5dd:	and    BYTE PTR [rcx+0x66],ah
   14003b5e0:	jb     0x14003b64b
   14003b5e2:	movsxd esp,DWORD PTR [rcx+0x0]
   14003b5e5:	add    BYTE PTR [rax],al
   14003b5e7:	add    BYTE PTR [rbp+0x6e],ah
   14003b5ea:	ins    BYTE PTR es:[edi],dx
   14003b5ec:	imul   esi,DWORD PTR [rbx+0x68],0x7a6e2d
   14003b5f3:	add    BYTE PTR [rax],al
   14003b5f5:	add    BYTE PTR [rax],al
   14003b5f7:	add    BYTE PTR [rbp+0x6e],ah
   14003b5fa:	ins    BYTE PTR es:[edi],dx
   14003b5fc:	imul   esi,DWORD PTR [rbx+0x68],0x6d616a2d
   14003b603:	(bad)  
   14003b604:	imul   esp,DWORD PTR [rbx+0x61],0x676e6500
   14003b60b:	ins    BYTE PTR es:[rdi],dx
   14003b60c:	imul   esi,DWORD PTR [rbx+0x68],0x6572692d
   14003b613:	add    BYTE PTR [rax],al
   14003b615:	add    BYTE PTR [rax],al
   14003b617:	add    BYTE PTR [rbp+0x6e],ah
   14003b61a:	ins    BYTE PTR es:[edi],dx
   14003b61c:	imul   esi,DWORD PTR [rbx+0x68],0x7261632d
   14003b623:	imul   esp,DWORD PTR [rdx+0x62],0x6e6165
   14003b62a:	add    BYTE PTR [rax],al
   14003b62c:	add    BYTE PTR [rax],al
   14003b62e:	add    BYTE PTR [rax],al
   14003b630:	outs   dx,BYTE PTR gs:[rsi]
   14003b632:	ins    BYTE PTR es:[edi],dx
   14003b634:	imul   esi,DWORD PTR [rbx+0x68],0x6e61632d
   14003b63b:	add    BYTE PTR [rax],al
   14003b63d:	add    BYTE PTR [rax],al
   14003b63f:	add    BYTE PTR [rbp+0x6e],ah
   14003b642:	ins    BYTE PTR es:[edi],dx
   14003b644:	imul   esi,DWORD PTR [rbx+0x68],0x6c65622d
   14003b64b:	imul   edi,DWORD PTR [rdx+0x65],0x6e650000
   14003b652:	ins    BYTE PTR es:[edi],dx
   14003b654:	imul   esi,DWORD PTR [rbx+0x68],0x7375612d
   14003b65b:	add    BYTE PTR [rax],al
   14003b65d:	add    BYTE PTR [rax],al
   14003b65f:	add    BYTE PTR [rbp+0x6e],ah
   14003b662:	ins    BYTE PTR es:[edi],dx
   14003b664:	imul   esi,DWORD PTR [rbx+0x68],0x656d612d
   14003b66b:	jb     0x14003b6d6
   14003b66d:	movsxd esp,DWORD PTR [rcx+0x6e]
	...
   14003b678:	fs jne 0x14003b6ef
   14003b67b:	movsxd ebp,DWORD PTR [rax+0x2d]
   14003b67e:	(bad)  
   14003b67f:	gs ins BYTE PTR es:[rdi],dx
   14003b681:	imul   esp,DWORD PTR [ecx+0x6e],0x63000000
   14003b689:	push   0x73656e69
   14003b68e:	gs sub eax,0x64617274
   14003b694:	imul   esi,DWORD PTR [rcx+rbp*2+0x6f],0x6c616e
   14003b69c:	add    BYTE PTR [rax],al
   14003b69e:	add    BYTE PTR [rax],al
   14003b6a0:	movsxd ebp,DWORD PTR [rax+0x69]
   14003b6a3:	outs   dx,BYTE PTR ds:[rsi]
   14003b6a4:	gs jae 0x14003b70c
   14003b6a7:	sub    eax,0x676e6973
   14003b6ac:	(bad)  
   14003b6ad:	jo     0x14003b71e
   14003b6af:	jb     0x14003b716
   14003b6b1:	add    BYTE PTR [rax],al
   14003b6b3:	add    BYTE PTR [rax],al
   14003b6b5:	add    BYTE PTR [rax],al
   14003b6b7:	add    BYTE PTR [rbx+0x68],ah
   14003b6ba:	imul   ebp,DWORD PTR [rsi+0x65],0x732d6573
   14003b6c1:	imul   ebp,DWORD PTR [rbp+0x70],0x6966696c
   14003b6c8:	gs add BYTE PTR fs:[rax],al
   14003b6cc:	add    BYTE PTR [rax],al
   14003b6ce:	add    BYTE PTR [rax],al
   14003b6d0:	movsxd ebp,DWORD PTR [rax+0x69]
   14003b6d3:	outs   dx,BYTE PTR ds:[rsi]
   14003b6d4:	gs jae 0x14003b73c
   14003b6d7:	sub    eax,0x676e6f68
   14003b6dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x67
	...
   14003b6e8:	movsxd ebp,DWORD PTR [rax+0x69]
   14003b6eb:	outs   dx,BYTE PTR ds:[rsi]
   14003b6ec:	gs jae 0x14003b754
   14003b6ef:	add    BYTE PTR [rbx+0x68],ah
   14003b6f2:	imul   eax,DWORD PTR [rax],0x686863
   14003b6f8:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003b6fb:	(bad)  
   14003b6fc:	imul   esp,DWORD PTR fs:[rcx+0x6e],0x0
   14003b704:	add    BYTE PTR [rax],al
   14003b706:	add    BYTE PTR [rax],al
   14003b708:	(bad)  
   14003b709:	gs ins BYTE PTR es:[rdi],dx
   14003b70b:	imul   esp,DWORD PTR [ecx+0x6e],0x73756100
   14003b713:	je     0x14003b787
   14003b715:	(bad)  
   14003b716:	ins    BYTE PTR es:[rdi],dx
   14003b717:	imul   esp,DWORD PTR [rcx+0x6e],0x0
   14003b71e:	add    BYTE PTR [rax],al
   14003b720:	(bad)  
   14003b721:	ins    DWORD PTR es:[rdi],dx
   14003b722:	gs jb  0x14003b78e
   14003b725:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003b728:	sub    eax,0x6c676e65
   14003b72d:	imul   esi,DWORD PTR [rbx+0x68],0x0
   14003b734:	add    BYTE PTR [rax],al
   14003b736:	add    BYTE PTR [rax],al
   14003b738:	(bad)  
   14003b739:	ins    DWORD PTR es:[rdi],dx
   14003b73a:	gs jb  0x14003b7a6
   14003b73d:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003b740:	and    BYTE PTR [rbp+0x6e],ah
   14003b743:	ins    BYTE PTR es:[edi],dx
   14003b745:	imul   esi,DWORD PTR [rbx+0x68],0x0
   14003b74c:	add    BYTE PTR [rax],al
   14003b74e:	add    BYTE PTR [rax],al
   14003b750:	(bad)  
   14003b751:	ins    DWORD PTR es:[rdi],dx
   14003b752:	gs jb  0x14003b7be
   14003b755:	movsxd esp,DWORD PTR [rcx+0x6e]
	...
   14003b760:	push   rax
   14003b761:	mov    bh,0x3
   14003b763:	rex add DWORD PTR [rax],eax
   14003b766:	add    BYTE PTR [rax],al
   14003b768:	rex.RB
   14003b769:	rex.WRX push rbp
   14003b76b:	add    BYTE PTR [rax],al
   14003b76d:	add    BYTE PTR [rax],al
   14003b76f:	add    BYTE PTR [rax],bh
   14003b771:	mov    bh,0x3
   14003b773:	rex add DWORD PTR [rax],eax
   14003b776:	add    BYTE PTR [rax],al
   14003b778:	rex.RB
   14003b779:	rex.WRX push rbp
   14003b77b:	add    BYTE PTR [rax],al
   14003b77d:	add    BYTE PTR [rax],al
   14003b77f:	add    BYTE PTR [rax],ah
   14003b781:	mov    bh,0x3
   14003b783:	rex add DWORD PTR [rax],eax
   14003b786:	add    BYTE PTR [rax],al
   14003b788:	rex.RB
   14003b789:	rex.WRX push rbp
   14003b78b:	add    BYTE PTR [rax],al
   14003b78d:	add    BYTE PTR [rax],al
   14003b78f:	add    BYTE PTR [rax],dl
   14003b791:	mov    bh,0x3
   14003b793:	rex add DWORD PTR [rax],eax
   14003b796:	add    BYTE PTR [rax],al
   14003b798:	rex.RB
   14003b799:	rex.WRX
   14003b79a:	add    BYTE PTR [r8],al
   14003b79d:	add    BYTE PTR [rax],al
   14003b79f:	add    BYTE PTR [rax],cl
   14003b7a1:	mov    bh,0x3
   14003b7a3:	rex add DWORD PTR [rax],eax
   14003b7a6:	add    BYTE PTR [rax],al
   14003b7a8:	rex.WRX
   14003b7a9:	rex.WR
   14003b7aa:	rex.X add BYTE PTR [rax],al
   14003b7ad:	add    BYTE PTR [rax],al
   14003b7af:	add    al,bh
   14003b7b1:	mov    dh,0x3
   14003b7b3:	rex add DWORD PTR [rax],eax
   14003b7b6:	add    BYTE PTR [rax],al
   14003b7b8:	rex.RB
   14003b7b9:	rex.WRX
   14003b7ba:	rex.XB add BYTE PTR [r8],al
   14003b7bd:	add    BYTE PTR [rax],al
   14003b7bf:	add    ah,dh
   14003b7c1:	mov    dh,0x3
   14003b7c3:	rex add DWORD PTR [rax],eax
   14003b7c6:	add    BYTE PTR [rax],al
   14003b7c8:	pop    rdx
   14003b7c9:	rex.W
   14003b7ca:	rex.W add BYTE PTR [rax],al
   14003b7cd:	add    BYTE PTR [rax],al
   14003b7cf:	add    al,dh
   14003b7d1:	mov    dh,0x3
   14003b7d3:	rex add DWORD PTR [rax],eax
   14003b7d6:	add    BYTE PTR [rax],al
   14003b7d8:	pop    rdx
   14003b7d9:	rex.W
   14003b7da:	rex.WB add BYTE PTR [r8],al
   14003b7dd:	add    BYTE PTR [rax],al
   14003b7df:	add    al,ch
   14003b7e1:	mov    dh,0x3
   14003b7e3:	rex add DWORD PTR [rax],eax
   14003b7e6:	add    BYTE PTR [rax],al
   14003b7e8:	rex.XB
   14003b7e9:	rex.W push rbx
   14003b7eb:	add    BYTE PTR [rax],al
   14003b7ed:	add    BYTE PTR [rax],al
   14003b7ef:	add    al,dl
   14003b7f1:	mov    dh,0x3
   14003b7f3:	rex add DWORD PTR [rax],eax
   14003b7f6:	add    BYTE PTR [rax],al
   14003b7f8:	pop    rdx
   14003b7f9:	rex.W
   14003b7fa:	rex.W add BYTE PTR [rax],al
   14003b7fd:	add    BYTE PTR [rax],al
   14003b7ff:	add    BYTE PTR [rax+0x14003b6],bh
   14003b805:	add    BYTE PTR [rax],al
   14003b807:	add    BYTE PTR [rbx+0x48],al
   14003b80a:	push   rbx
   14003b80b:	add    BYTE PTR [rax],al
   14003b80d:	add    BYTE PTR [rax],al
   14003b80f:	add    BYTE PTR [rax+0x14003b6],ah
   14003b815:	add    BYTE PTR [rax],al
   14003b817:	add    BYTE PTR [rdx+0x48],bl
   14003b81a:	rex.WB add BYTE PTR [r8],al
   14003b81d:	add    BYTE PTR [rax],al
   14003b81f:	add    BYTE PTR [rax+0x14003b6],cl
   14003b825:	add    BYTE PTR [rax],al
   14003b827:	add    BYTE PTR [rbx+0x48],al
   14003b82a:	push   rsp
   14003b82b:	add    BYTE PTR [rax],al
   14003b82d:	add    BYTE PTR [rax],al
   14003b82f:	add    BYTE PTR [rax-0x4a],bh
   14003b832:	add    eax,DWORD PTR [rax+0x1]
   14003b835:	add    BYTE PTR [rax],al
   14003b837:	add    BYTE PTR [rsi+0x4c],cl
   14003b83a:	rex.X add BYTE PTR [rax],al
   14003b83d:	add    BYTE PTR [rax],al
   14003b83f:	add    BYTE PTR [rax-0x4a],ah
   14003b842:	add    eax,DWORD PTR [rax+0x1]
   14003b845:	add    BYTE PTR [rax],al
   14003b847:	add    BYTE PTR [rbp+0x4e],al
   14003b84a:	push   rbp
   14003b84b:	add    BYTE PTR [rax],al
   14003b84d:	add    BYTE PTR [rax],al
   14003b84f:	add    BYTE PTR [rax-0x4a],dl
   14003b852:	add    eax,DWORD PTR [rax+0x1]
   14003b855:	add    BYTE PTR [rax],al
   14003b857:	add    BYTE PTR [rbp+0x4e],al
   14003b85a:	add    BYTE PTR [r8],al
   14003b85d:	add    BYTE PTR [rax],al
   14003b85f:	add    BYTE PTR [rax-0x4a],al
   14003b862:	add    eax,DWORD PTR [rax+0x1]
   14003b865:	add    BYTE PTR [rax],al
   14003b867:	add    BYTE PTR [rbp+0x4e],al
   14003b86a:	rex.WR add BYTE PTR [rax],r8b
   14003b86d:	add    BYTE PTR [rax],al
   14003b86f:	add    BYTE PTR [rax],dh
   14003b871:	mov    dh,0x3
   14003b873:	rex add DWORD PTR [rax],eax
   14003b876:	add    BYTE PTR [rax],al
   14003b878:	rex.RB
   14003b879:	rex.WRX
   14003b87a:	rex.XB add BYTE PTR [r8],al
   14003b87d:	add    BYTE PTR [rax],al
   14003b87f:	add    BYTE PTR [rax],bl
   14003b881:	mov    dh,0x3
   14003b883:	rex add DWORD PTR [rax],eax
   14003b886:	add    BYTE PTR [rax],al
   14003b888:	rex.RB
   14003b889:	rex.WRX
   14003b88a:	rex.X add BYTE PTR [rax],al
   14003b88d:	add    BYTE PTR [rax],al
   14003b88f:	add    BYTE PTR [rax],cl
   14003b891:	mov    dh,0x3
   14003b893:	rex add DWORD PTR [rax],eax
   14003b896:	add    BYTE PTR [rax],al
   14003b898:	rex.RB
   14003b899:	rex.WRX
   14003b89a:	rex.WB add BYTE PTR [r8],al
   14003b89d:	add    BYTE PTR [rax],al
   14003b89f:	add    al,bh
   14003b8a1:	mov    ch,0x3
   14003b8a3:	rex add DWORD PTR [rax],eax
   14003b8a6:	add    BYTE PTR [rax],al
   14003b8a8:	rex.RB
   14003b8a9:	rex.WRX
   14003b8aa:	rex.WX add BYTE PTR [rax],al
   14003b8ad:	add    BYTE PTR [rax],al
   14003b8af:	add    al,ch
   14003b8b1:	mov    ch,0x3
   14003b8b3:	rex add DWORD PTR [rax],eax
   14003b8b6:	add    BYTE PTR [rax],al
   14003b8b8:	rex.RB
   14003b8b9:	rex.WRX pop rdx
   14003b8bb:	add    BYTE PTR [rax],al
   14003b8bd:	add    BYTE PTR [rax],al
   14003b8bf:	add    al,dl
   14003b8c1:	mov    ch,0x3
   14003b8c3:	rex add DWORD PTR [rax],eax
   14003b8c6:	add    BYTE PTR [rax],al
   14003b8c8:	rex.RB
   14003b8c9:	rex.WRX push rbx
   14003b8cb:	add    BYTE PTR [rax],al
   14003b8cd:	add    BYTE PTR [rax],al
   14003b8cf:	add    BYTE PTR [rax+0x14003b5],dh
   14003b8d5:	add    BYTE PTR [rax],al
   14003b8d7:	add    BYTE PTR [rbp+0x4e],al
   14003b8da:	push   rsp
   14003b8db:	add    BYTE PTR [rax],al
   14003b8dd:	add    BYTE PTR [rax],al
   14003b8df:	add    BYTE PTR [rax+0x14003b5],ah
   14003b8e5:	add    BYTE PTR [rax],al
   14003b8e7:	add    BYTE PTR [rbp+0x4e],al
   14003b8ea:	rex.RXB add BYTE PTR [r8],r8b
   14003b8ed:	add    BYTE PTR [rax],al
   14003b8ef:	add    BYTE PTR [rax+0x14003b5],dl
   14003b8f5:	add    BYTE PTR [rax],al
   14003b8f7:	add    BYTE PTR [rbp+0x4e],al
   14003b8fa:	push   rbp
   14003b8fb:	add    BYTE PTR [rax],al
   14003b8fd:	add    BYTE PTR [rax],al
   14003b8ff:	add    BYTE PTR [rax+0x14003b5],al
   14003b905:	add    BYTE PTR [rax],al
   14003b907:	add    BYTE PTR [rbp+0x4e],al
   14003b90a:	push   rbp
   14003b90b:	add    BYTE PTR [rax],al
   14003b90d:	add    BYTE PTR [rax],al
   14003b90f:	add    BYTE PTR [rax-0x4b],dh
   14003b912:	add    eax,DWORD PTR [rax+0x1]
   14003b915:	add    BYTE PTR [rax],al
   14003b917:	add    BYTE PTR [rsi+0x52],al
   14003b91a:	rex.X add BYTE PTR [rax],al
   14003b91d:	add    BYTE PTR [rax],al
   14003b91f:	add    BYTE PTR [rax-0x4b],ah
   14003b922:	add    eax,DWORD PTR [rax+0x1]
   14003b925:	add    BYTE PTR [rax],al
   14003b927:	add    BYTE PTR [rsi+0x52],al
   14003b92a:	rex.XB add BYTE PTR [r8],al
   14003b92d:	add    BYTE PTR [rax],al
   14003b92f:	add    BYTE PTR [rax-0x4b],cl
   14003b932:	add    eax,DWORD PTR [rax+0x1]
   14003b935:	add    BYTE PTR [rax],al
   14003b937:	add    BYTE PTR [rsi+0x52],al
   14003b93a:	rex.WR add BYTE PTR [rax],r8b
   14003b93d:	add    BYTE PTR [rax],al
   14003b93f:	add    BYTE PTR [rax],bh
   14003b941:	mov    ch,0x3
   14003b943:	rex add DWORD PTR [rax],eax
   14003b946:	add    BYTE PTR [rax],al
   14003b948:	rex.RX push rdx
   14003b94a:	push   rbx
   14003b94b:	add    BYTE PTR [rax],al
   14003b94d:	add    BYTE PTR [rax],al
   14003b94f:	add    BYTE PTR [rax],ch
   14003b951:	mov    ch,0x3
   14003b953:	rex add DWORD PTR [rax],eax
   14003b956:	add    BYTE PTR [rax],al
   14003b958:	rex.R
   14003b959:	rex.RB
   14003b95a:	add    BYTE PTR [r8],al
   14003b95d:	add    BYTE PTR [rax],al
   14003b95f:	add    BYTE PTR [rax],dl
   14003b961:	mov    ch,0x3
   14003b963:	rex add DWORD PTR [rax],eax
   14003b966:	add    BYTE PTR [rax],al
   14003b968:	rex.R
   14003b969:	rex.RB
   14003b96a:	rex.XB add BYTE PTR [r8],al
   14003b96d:	add    BYTE PTR [rax],al
   14003b96f:	add    al,bh
   14003b971:	mov    ah,0x3
   14003b973:	rex add DWORD PTR [rax],eax
   14003b976:	add    BYTE PTR [rax],al
   14003b978:	rex.R
   14003b979:	rex.RB
   14003b97a:	rex.WR add BYTE PTR [rax],r8b
   14003b97d:	add    BYTE PTR [rax],al
   14003b97f:	add    al,ch
   14003b981:	mov    ah,0x3
   14003b983:	rex add DWORD PTR [rax],eax
   14003b986:	add    BYTE PTR [rax],al
   14003b988:	rex.R
   14003b989:	rex.RB push r11
   14003b98b:	add    BYTE PTR [rax],al
   14003b98d:	add    BYTE PTR [rax],al
   14003b98f:	add    al,bl
   14003b991:	mov    ah,0x3
   14003b993:	rex add DWORD PTR [rax],eax
   14003b996:	add    BYTE PTR [rax],al
   14003b998:	rex.RB
   14003b999:	rex.WRX
   14003b99a:	rex.WB add BYTE PTR [r8],al
   14003b99d:	add    BYTE PTR [rax],al
   14003b99f:	add    al,cl
   14003b9a1:	mov    ah,0x3
   14003b9a3:	rex add DWORD PTR [rax],eax
   14003b9a6:	add    BYTE PTR [rax],al
   14003b9a8:	rex.WB push r12
   14003b9aa:	push   rbx
   14003b9ab:	add    BYTE PTR [rax],al
   14003b9ad:	add    BYTE PTR [rax],al
   14003b9af:	add    BYTE PTR [rax+0x14003b4],bh
   14003b9b5:	add    BYTE PTR [rax],al
   14003b9b7:	add    BYTE PTR [rsi+0x4f],cl
   14003b9ba:	push   rdx
   14003b9bb:	add    BYTE PTR [rax],al
   14003b9bd:	add    BYTE PTR [rax],al
   14003b9bf:	add    BYTE PTR [rax+0x14003b4],ah
   14003b9c5:	add    BYTE PTR [rax],al
   14003b9c7:	add    BYTE PTR [rsi+0x4f],cl
   14003b9ca:	push   rdx
   14003b9cb:	add    BYTE PTR [rax],al
   14003b9cd:	add    BYTE PTR [rax],al
   14003b9cf:	add    BYTE PTR [rax+0x14003b4],cl
   14003b9d5:	add    BYTE PTR [rax],al
   14003b9d7:	add    BYTE PTR [rsi+0x4f],cl
   14003b9da:	rex.WRX add BYTE PTR [rax],r8b
   14003b9dd:	add    BYTE PTR [rax],al
   14003b9df:	add    BYTE PTR [rax-0x4c],dh
   14003b9e2:	add    eax,DWORD PTR [rax+0x1]
   14003b9e5:	add    BYTE PTR [rax],al
   14003b9e7:	add    BYTE PTR [rax+0x54],dl
   14003b9ea:	rex.X add BYTE PTR [rax],al
   14003b9ed:	add    BYTE PTR [rax],al
   14003b9ef:	add    BYTE PTR [rax-0x4c],bl
   14003b9f2:	add    eax,DWORD PTR [rax+0x1]
   14003b9f5:	add    BYTE PTR [rax],al
   14003b9f7:	add    BYTE PTR [rbp+0x53],al
   14003b9fa:	push   rbx
   14003b9fb:	add    BYTE PTR [rax],al
   14003b9fd:	add    BYTE PTR [rax],al
   14003b9ff:	add    BYTE PTR [rax-0x4c],cl
   14003ba02:	add    eax,DWORD PTR [rax+0x1]
   14003ba05:	add    BYTE PTR [rax],al
   14003ba07:	add    BYTE PTR [rbp+0x53],al
   14003ba0a:	rex.X add BYTE PTR [rax],al
   14003ba0d:	add    BYTE PTR [rax],al
   14003ba0f:	add    BYTE PTR [rax],bh
   14003ba11:	mov    ah,0x3
   14003ba13:	rex add DWORD PTR [rax],eax
   14003ba16:	add    BYTE PTR [rax],al
   14003ba18:	rex.RB push r11
   14003ba1a:	rex.WR add BYTE PTR [rax],r8b
   14003ba1d:	add    BYTE PTR [rax],al
   14003ba1f:	add    BYTE PTR [rax],ah
   14003ba21:	mov    ah,0x3
   14003ba23:	rex add DWORD PTR [rax],eax
   14003ba26:	add    BYTE PTR [rax],al
   14003ba28:	rex.RB push r11
   14003ba2a:	rex.WRXB add BYTE PTR [r8],r8b
   14003ba2d:	add    BYTE PTR [rax],al
   14003ba2f:	add    BYTE PTR [rax],cl
   14003ba31:	mov    ah,0x3
   14003ba33:	rex add DWORD PTR [rax],eax
   14003ba36:	add    BYTE PTR [rax],al
   14003ba38:	rex.RB push r11
   14003ba3a:	rex.XB add BYTE PTR [r8],al
   14003ba3d:	add    BYTE PTR [rax],al
   14003ba3f:	add    al,ch
   14003ba41:	mov    bl,0x3
   14003ba43:	rex add DWORD PTR [rax],eax
   14003ba46:	add    BYTE PTR [rax],al
   14003ba48:	rex.RB push r11
   14003ba4a:	add    BYTE PTR [rax],r8b
   14003ba4d:	add    BYTE PTR [rax],al
   14003ba4f:	add    al,bl
   14003ba51:	mov    bl,0x3
   14003ba53:	rex add DWORD PTR [rax],eax
   14003ba56:	add    BYTE PTR [rax],al
   14003ba58:	rex.RB push r11
   14003ba5a:	rex.RX add BYTE PTR [rax],r8b
   14003ba5d:	add    BYTE PTR [rax],al
   14003ba5f:	add    al,al
   14003ba61:	mov    bl,0x3
   14003ba63:	rex add DWORD PTR [rax],eax
   14003ba66:	add    BYTE PTR [rax],al
   14003ba68:	rex.RB push r11
   14003ba6a:	add    BYTE PTR [r8],r8b
   14003ba6d:	add    BYTE PTR [rax],al
   14003ba6f:	add    BYTE PTR [rax+0x14003b3],ch
   14003ba75:	add    BYTE PTR [rax],al
   14003ba77:	add    BYTE PTR [rbp+0x53],al
   14003ba7a:	rex.RXB add BYTE PTR [r8],r8b
   14003ba7d:	add    BYTE PTR [rax],al
   14003ba7f:	add    BYTE PTR [rax+0x14003b3],dl
   14003ba85:	add    BYTE PTR [rax],al
   14003ba87:	add    BYTE PTR [rbp+0x53],al
   14003ba8a:	rex.W add BYTE PTR [rax],al
   14003ba8d:	add    BYTE PTR [rax],al
   14003ba8f:	add    BYTE PTR [rax+0x14003b3],al
   14003ba95:	add    BYTE PTR [rax],al
   14003ba97:	add    BYTE PTR [rbp+0x53],al
   14003ba9a:	rex.WRB add BYTE PTR [r8],r8b
   14003ba9d:	add    BYTE PTR [rax],al
   14003ba9f:	add    BYTE PTR [rax-0x4d],dh
   14003baa2:	add    eax,DWORD PTR [rax+0x1]
   14003baa5:	add    BYTE PTR [rax],al
   14003baa7:	add    BYTE PTR [rbp+0x53],al
   14003baaa:	rex.WRX add BYTE PTR [rax],r8b
   14003baad:	add    BYTE PTR [rax],al
   14003baaf:	add    BYTE PTR [rax-0x4d],bl
   14003bab2:	add    eax,DWORD PTR [rax+0x1]
   14003bab5:	add    BYTE PTR [rax],al
   14003bab7:	add    BYTE PTR [rbp+0x53],al
   14003baba:	rex.WB add BYTE PTR [r8],al
   14003babd:	add    BYTE PTR [rax],al
   14003babf:	add    BYTE PTR [rax-0x4d],cl
   14003bac2:	add    eax,DWORD PTR [rax+0x1]
   14003bac5:	add    BYTE PTR [rax],al
   14003bac7:	add    BYTE PTR [rbp+0x53],al
   14003baca:	add    BYTE PTR [r8],al
   14003bacd:	add    BYTE PTR [rax],al
   14003bacf:	add    BYTE PTR [rax],dh
   14003bad1:	mov    bl,0x3
   14003bad3:	rex add DWORD PTR [rax],eax
   14003bad6:	add    BYTE PTR [rax],al
   14003bad8:	rex.RB push r11
   14003bada:	pop    rdx
   14003badb:	add    BYTE PTR [rax],al
   14003badd:	add    BYTE PTR [rax],al
   14003badf:	add    BYTE PTR [rax],ah
   14003bae1:	mov    bl,0x3
   14003bae3:	rex add DWORD PTR [rax],eax
   14003bae6:	add    BYTE PTR [rax],al
   14003bae8:	rex.RB push r11
   14003baea:	push   rdx
   14003baeb:	add    BYTE PTR [rax],al
   14003baed:	add    BYTE PTR [rax],al
   14003baef:	add    BYTE PTR [rax],cl
   14003baf1:	mov    bl,0x3
   14003baf3:	rex add DWORD PTR [rax],eax
   14003baf6:	add    BYTE PTR [rax],al
   14003baf8:	rex.RB push r11
   14003bafa:	push   rbp
   14003bafb:	add    BYTE PTR [rax],al
   14003bafd:	add    BYTE PTR [rax],al
   14003baff:	add    al,bh
   14003bb01:	mov    dl,0x3
   14003bb03:	rex add DWORD PTR [rax],eax
   14003bb06:	add    BYTE PTR [rax],al
   14003bb08:	rex.RB push r11
   14003bb0a:	pop    rcx
   14003bb0b:	add    BYTE PTR [rax],al
   14003bb0d:	add    BYTE PTR [rax],al
   14003bb0f:	add    al,ah
   14003bb11:	mov    dl,0x3
   14003bb13:	rex add DWORD PTR [rax],eax
   14003bb16:	add    BYTE PTR [rax],al
   14003bb18:	rex.RB push r11
   14003bb1a:	push   rsi
   14003bb1b:	add    BYTE PTR [rax],al
   14003bb1d:	add    BYTE PTR [rax],al
   14003bb1f:	add    al,dl
   14003bb21:	mov    dl,0x3
   14003bb23:	rex add DWORD PTR [rax],eax
   14003bb26:	add    BYTE PTR [rax],al
   14003bb28:	push   rbx
   14003bb29:	push   rsi
   14003bb2a:	rex.RX add BYTE PTR [rax],r8b
   14003bb2d:	add    BYTE PTR [rax],al
   14003bb2f:	add    ah,al
   14003bb31:	mov    dl,0x3
   14003bb33:	rex add DWORD PTR [rax],eax
   14003bb36:	add    BYTE PTR [rax],al
   14003bb38:	rex.R
   14003bb39:	rex.RB push r11
   14003bb3b:	add    BYTE PTR [rax],al
   14003bb3d:	add    BYTE PTR [rax],al
   14003bb3f:	add    al,al
   14003bb41:	mov    dl,0x3
   14003bb43:	rex add DWORD PTR [rax],eax
   14003bb46:	add    BYTE PTR [rax],al
   14003bb48:	rex.RB
   14003bb49:	rex.WRX
   14003bb4a:	rex.RXB add BYTE PTR [r8],r8b
   14003bb4d:	add    BYTE PTR [rax],al
   14003bb4f:	add    BYTE PTR [rdx+rsi*4+0x14003],bh
   14003bb56:	add    BYTE PTR [rax],al
   14003bb58:	rex.RB
   14003bb59:	rex.WRX push rbp
   14003bb5b:	add    BYTE PTR [rax],al
   14003bb5d:	add    BYTE PTR [rax],al
   14003bb5f:	add    BYTE PTR [rax+0x14003b2],bh
   14003bb65:	add    BYTE PTR [rax],al
   14003bb67:	add    BYTE PTR [rbp+0x4e],al
   14003bb6a:	push   rbp
   14003bb6b:	add    BYTE PTR [rax],al
   14003bb6d:	add    BYTE PTR [rax],al
   14003bb6f:	add    BYTE PTR [rax+0x14003b2],dh
   14003bb75:	add    BYTE PTR [rax],al
   14003bb77:	add    BYTE PTR [rbp+0x53],dl
   14003bb7a:	add    BYTE PTR [r8],al
   14003bb7d:	add    BYTE PTR [rax],al
   14003bb7f:	add    BYTE PTR [rax+0x14003b2],ch
   14003bb85:	add    BYTE PTR [rax],al
   14003bb87:	add    BYTE PTR [rdi+0x42],al
   14003bb8a:	push   rdx
   14003bb8b:	add    BYTE PTR [rax],al
   14003bb8d:	add    BYTE PTR [rax],al
   14003bb8f:	add    BYTE PTR [rax+0x14003b2],ah
   14003bb95:	add    BYTE PTR [rax],al
   14003bb97:	add    BYTE PTR [rbx+0x48],al
   14003bb9a:	rex.WRX add BYTE PTR [rax],r8b
   14003bb9d:	add    BYTE PTR [rax],al
   14003bb9f:	add    BYTE PTR [rax+0x14003b2],bl
   14003bba5:	add    BYTE PTR [rax],al
   14003bba7:	add    BYTE PTR [rbx+0x5a],al
   14003bbaa:	add    BYTE PTR [r8],r8b
   14003bbad:	add    BYTE PTR [rax],al
   14003bbaf:	add    BYTE PTR [rax+0x14003b2],dl
   14003bbb5:	add    BYTE PTR [rax],al
   14003bbb7:	add    BYTE PTR [rdi+0x42],al
   14003bbba:	push   rdx
   14003bbbb:	add    BYTE PTR [rax],al
   14003bbbd:	add    BYTE PTR [rax],al
   14003bbbf:	add    BYTE PTR [rax+0x14003b2],al
   14003bbc5:	add    BYTE PTR [rax],al
   14003bbc7:	add    BYTE PTR [rdi+0x42],al
   14003bbca:	push   rdx
   14003bbcb:	add    BYTE PTR [rax],al
   14003bbcd:	add    BYTE PTR [rax],al
   14003bbcf:	add    BYTE PTR [rax-0x4e],bh
   14003bbd2:	add    eax,DWORD PTR [rax+0x1]
   14003bbd5:	add    BYTE PTR [rax],al
   14003bbd7:	add    BYTE PTR [rsi+0x4c],cl
   14003bbda:	add    BYTE PTR [rax],r8b
   14003bbdd:	add    BYTE PTR [rax],al
   14003bbdf:	add    BYTE PTR [rax-0x4e],ch
   14003bbe2:	add    eax,DWORD PTR [rax+0x1]
   14003bbe5:	add    BYTE PTR [rax],al
   14003bbe7:	add    BYTE PTR [rax+0x4b],cl
   14003bbea:	rex.RXB add BYTE PTR [r8],r8b
   14003bbed:	add    BYTE PTR [rax],al
   14003bbef:	add    BYTE PTR [rax-0x4e],bl
   14003bbf2:	add    eax,DWORD PTR [rax+0x1]
   14003bbf5:	add    BYTE PTR [rax],al
   14003bbf7:	add    BYTE PTR [rsi+0x5a],cl
   14003bbfa:	rex.WR add BYTE PTR [rax],r8b
   14003bbfd:	add    BYTE PTR [rax],al
   14003bbff:	add    BYTE PTR [rdx+rsi*4+0x3],dl
   14003bc03:	rex add DWORD PTR [rax],eax
   14003bc06:	add    BYTE PTR [rax],al
   14003bc08:	rex.WRX pop rdx
   14003bc0a:	rex.WR add BYTE PTR [rax],r8b
   14003bc0d:	add    BYTE PTR [rax],al
   14003bc0f:	add    BYTE PTR [rax-0x4e],cl
   14003bc12:	add    eax,DWORD PTR [rax+0x1]
   14003bc15:	add    BYTE PTR [rax],al
   14003bc17:	add    BYTE PTR [rbx+0x48],al
   14003bc1a:	rex.WRX add BYTE PTR [rax],r8b
   14003bc1d:	add    BYTE PTR [rax],al
   14003bc1f:	add    BYTE PTR [rax],bh
   14003bc21:	mov    dl,0x3
   14003bc23:	rex add DWORD PTR [rax],eax
   14003bc26:	add    BYTE PTR [rax],al
   14003bc28:	rex.XB
   14003bc29:	rex.W
   14003bc2a:	rex.WRX add BYTE PTR [rax],r8b
   14003bc2d:	add    BYTE PTR [rax],al
   14003bc2f:	add    BYTE PTR [rax],ch
   14003bc31:	mov    dl,0x3
   14003bc33:	rex add DWORD PTR [rax],eax
   14003bc36:	add    BYTE PTR [rax],al
   14003bc38:	push   rax
   14003bc39:	push   rdx
   14003bc3a:	rex.WB add BYTE PTR [r8],al
   14003bc3d:	add    BYTE PTR [rax],al
   14003bc3f:	add    BYTE PTR [rax],ah
   14003bc41:	mov    dl,0x3
   14003bc43:	rex add DWORD PTR [rax],eax
   14003bc46:	add    BYTE PTR [rax],al
   14003bc48:	push   rbx
   14003bc49:	push   rsi
   14003bc4a:	rex.WXB add BYTE PTR [r8],al
   14003bc4d:	add    BYTE PTR [rax],al
   14003bc4f:	add    BYTE PTR [rax],dl
   14003bc51:	mov    dl,0x3
   14003bc53:	rex add DWORD PTR [rax],eax
   14003bc56:	add    BYTE PTR [rax],al
   14003bc58:	pop    rdx
   14003bc59:	rex.B
   14003bc5a:	rex.RX add BYTE PTR [rax],r8b
   14003bc5d:	add    BYTE PTR [rax],al
   14003bc5f:	add    BYTE PTR [rax],al
   14003bc61:	mov    dl,0x3
   14003bc63:	rex add DWORD PTR [rax],eax
   14003bc66:	add    BYTE PTR [rax],al
   14003bc68:	rex.WXB
   14003bc69:	rex.WRXB push r10
   14003bc6b:	add    BYTE PTR [rax],al
   14003bc6d:	add    BYTE PTR [rax],al
   14003bc6f:	add    al,dh
   14003bc71:	mov    cl,0x3
   14003bc73:	rex add DWORD PTR [rax],eax
   14003bc76:	add    BYTE PTR [rax],al
   14003bc78:	pop    rdx
   14003bc79:	rex.B
   14003bc7a:	rex.RX add BYTE PTR [rax],r8b
   14003bc7d:	add    BYTE PTR [rax],al
   14003bc7f:	add    al,ah
   14003bc81:	mov    cl,0x3
   14003bc83:	rex add DWORD PTR [rax],eax
   14003bc86:	add    BYTE PTR [rax],al
   14003bc88:	rex.WXB
   14003bc89:	rex.WRXB push r10
   14003bc8b:	add    BYTE PTR [rax],al
   14003bc8d:	add    BYTE PTR [rax],al
   14003bc8f:	add    al,cl
   14003bc91:	mov    cl,0x3
   14003bc93:	rex add DWORD PTR [rax],eax
   14003bc96:	add    BYTE PTR [rax],al
   14003bc98:	push   rsp
   14003bc99:	push   rsp
   14003bc9a:	rex.WRXB add BYTE PTR [r8],r8b
   14003bc9d:	add    BYTE PTR [rax],al
   14003bc9f:	add    al,al
   14003bca1:	mov    dl,0x3
   14003bca3:	rex add DWORD PTR [rax],eax
   14003bca6:	add    BYTE PTR [rax],al
   14003bca8:	rex.RXB
   14003bca9:	rex.X push rdx
   14003bcab:	add    BYTE PTR [rax],al
   14003bcad:	add    BYTE PTR [rax],al
   14003bcaf:	add    BYTE PTR [rax+0x14003b1],bh
   14003bcb5:	add    BYTE PTR [rax],al
   14003bcb7:	add    BYTE PTR [rdi+0x42],al
   14003bcba:	push   rdx
   14003bcbb:	add    BYTE PTR [rax],al
   14003bcbd:	add    BYTE PTR [rax],al
   14003bcbf:	add    BYTE PTR [rax+0x14003b1],ch
   14003bcc5:	add    BYTE PTR [rax],al
   14003bcc7:	add    BYTE PTR [rbp+0x53],dl
   14003bcca:	add    BYTE PTR [r8],al
   14003bccd:	add    BYTE PTR [rax],al
   14003bccf:	add    BYTE PTR [rdx+rsi*4+0x14003],bh
   14003bcd6:	add    BYTE PTR [rax],al
   14003bcd8:	push   rbp
   14003bcd9:	push   rbx
   14003bcda:	add    BYTE PTR [r8],al
   14003bcdd:	add    BYTE PTR [rax],al
   14003bcdf:	add    BYTE PTR [rsp+rcx*1],cl
   14003bce2:	sbb    cl,BYTE PTR [rdi+rax*1]
   14003bce5:	adc    BYTE PTR [rsi],dh
   14003bce7:	add    al,0xc
   14003bce9:	or     BYTE PTR [rip+0xc040304],ch        # 0x14c07bff3
   14003bcef:	adc    BYTE PTR [rax],dl
   14003bcf1:	or     BYTE PTR [rip+0x3008],bl        # 0x14003ecff
   14003bcf7:	add    BYTE PTR [rdi+0x43],cl
   14003bcfa:	push   rax
   14003bcfb:	add    BYTE PTR [rcx+0x43],al
   14003bcfe:	push   rax
   14003bcff:	add    BYTE PTR [rsi+0x6f],cl
   14003bd02:	jb     0x14003bd7b
   14003bd04:	imul   esp,DWORD PTR gs:[ecx+0x6e],0x6e794e2d
   14003bd0d:	outs   dx,DWORD PTR ds:[rsi]
   14003bd0e:	jb     0x14003bd83
   14003bd10:	imul   eax,DWORD PTR [rax],0x0
   14003bd13:	add    BYTE PTR [rax],al
   14003bd15:	add    BYTE PTR [rax],al
   14003bd17:	add    BYTE PTR [rdi+0x65],al
   14003bd1a:	je     0x14003bd6c
   14003bd1c:	jb     0x14003bd8d
   14003bd1e:	movsxd esp,DWORD PTR [rbp+0x73]
   14003bd21:	jae    0x14003bd7a
   14003bd23:	imul   ebp,DWORD PTR [rsi+0x64],0x7453776f
   14003bd2a:	(bad)  
   14003bd2b:	je     0x14003bd96
   14003bd2d:	outs   dx,DWORD PTR ds:[rsi]
   14003bd2e:	outs   dx,BYTE PTR ds:[rsi]
   14003bd2f:	add    BYTE PTR [rdi+0x65],al
   14003bd32:	je     0x14003bd89
   14003bd34:	jae    0x14003bd9b
   14003bd36:	jb     0x14003bd87
   14003bd38:	(bad)  
   14003bd39:	push   0x65
   14003bd3b:	movsxd esi,DWORD PTR [rcx+rcx*2+0x6e]
   14003bd3f:	outs   dx,WORD PTR ds:[rsi]
   14003bd41:	jb     0x14003bdb0
   14003bd43:	(bad)  
   14003bd44:	je     0x14003bdaf
   14003bd46:	outs   dx,DWORD PTR ds:[rsi]
   14003bd47:	outs   dx,BYTE PTR ds:[rsi]
   14003bd48:	add    BYTE PTR [r8],al
   14003bd4b:	add    BYTE PTR [rax],al
   14003bd4d:	add    BYTE PTR [rax],al
   14003bd4f:	add    BYTE PTR [rdi+0x65],al
   14003bd52:	je     0x14003bda0
   14003bd54:	(bad)  
   14003bd55:	jae    0x14003bdcb
   14003bd57:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   14003bd5c:	gs push rax
   14003bd5e:	outs   dx,DWORD PTR ds:[rsi]
   14003bd5f:	jo     0x14003bdd6
   14003bd61:	jo     0x14003bd63
   14003bd63:	add    BYTE PTR [rax],al
   14003bd65:	add    BYTE PTR [rax],al
   14003bd67:	add    BYTE PTR [rdi+0x65],al
   14003bd6a:	je     0x14003bdad
   14003bd6c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x76]
   14003bd70:	gs push rdi
   14003bd72:	imul   ebp,DWORD PTR [rsi+0x64],0x4d00776f
   14003bd79:	gs jae 0x14003bdef
   14003bd7c:	(bad)  
   14003bd7d:	rex.X outs dx,DWORD PTR gs:[esi]
   14003bd81:	js     0x14003bdc4
   14003bd83:	add    BYTE PTR [rax],al
   14003bd85:	add    BYTE PTR [rax],al
   14003bd87:	add    BYTE PTR [rbp+0x53],dl
   14003bd8a:	rex.RB push r10
   14003bd8c:	xor    esi,DWORD PTR [rdx]
   14003bd8e:	cs rex.R
   14003bd90:	rex.WR
   14003bd91:	rex.WR add BYTE PTR [rax],r8b
   14003bd94:	xor    DWORD PTR [rbx],esp
   14003bd96:	push   rcx
   14003bd97:	rex.WRX
   14003bd98:	rex.B
   14003bd99:	rex.WRX add BYTE PTR [rax],r8b
   14003bd9c:	xor    DWORD PTR [rbx],esp
   14003bd9e:	rex.WB
   14003bd9f:	rex.WRX
   14003bda0:	rex.RX add BYTE PTR [rax],r8b
   14003bda3:	add    BYTE PTR [rcx],dh
   14003bda5:	and    ecx,DWORD PTR [rcx+0x4e]
   14003bda8:	add    BYTE PTR [rax],r8b
   14003bdab:	add    BYTE PTR [rcx],dh
   14003bdad:	and    edx,DWORD PTR [rbx+0x4e]
   14003bdb0:	rex.B
   14003bdb1:	rex.WRX add BYTE PTR [rax],r8b
   14003bdb4:	add    BYTE PTR [rax],al
   14003bdb6:	add    BYTE PTR [rax],al
   14003bdb8:	rex.XB
   14003bdb9:	rex.WRXB
   14003bdba:	rex.WRX
   14003bdbb:	rex.WRXB push r13
   14003bdbd:	push   rsp
   14003bdbe:	and    al,0x0
   14003bdc0:	(bad)
   14003bdc5:	ins    BYTE PTR es:[rdi],dx
   14003bdc6:	ins    BYTE PTR es:[rdi],dx
   14003bdc7:	outs   dx,DWORD PTR ds:[rsi]
   14003bdc8:	movsxd esp,DWORD PTR [rcx+0x74]
   14003bdcb:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e320000
   14003bdd2:	xor    BYTE PTR [rsi],ch
   14003bdd4:	xor    BYTE PTR [rsi],ch
   14003bdd6:	xor    BYTE PTR [rax],al
	...
   14003bde0:	xor    BYTE PTR [rsi],ch
   14003bde2:	xor    BYTE PTR [rsi],ch
   14003bde4:	xor    BYTE PTR [rsi],ch
   14003bde6:	xor    BYTE PTR [rax],al
   14003bde8:	push   rbx
   14003bde9:	gs jb  0x14003be62
   14003bdec:	imul   esp,DWORD PTR [rbx+0x65],0x2e642500
   14003bdf3:	and    eax,0x64252e64
   14003bdf8:	cs and eax,0x64
   14003bdfe:	add    BYTE PTR [rax],al
   14003be00:	push   rsi
   14003be01:	gs jb  0x14003be77
   14003be04:	imul   ebp,DWORD PTR [rdi+0x6e],0x62694c00
   14003be0b:	jb     0x14003be6e
   14003be0d:	jb     0x14003be88
   14003be0f:	add    BYTE PTR [rsi+0x61],cl
   14003be12:	ins    DWORD PTR es:[rdi],dx
   14003be13:	add    BYTE PTR gs:[rax],al
   14003be16:	add    BYTE PTR [rax],al
   14003be18:	and    eax,0x64252e64
   14003be1d:	cs and eax,0x64252e64
   14003be23:	add    BYTE PTR [rax],al
   14003be25:	add    BYTE PTR [rax],al
   14003be27:	add    BYTE PTR [rsi+0x65],dl
   14003be2a:	jb     0x14003be9f
   14003be2c:	imul   ebp,DWORD PTR [rdi+0x6e],0x67695300
   14003be33:	outs   dx,BYTE PTR ds:[rsi]
   14003be34:	(bad)  
   14003be35:	je     0x14003beac
   14003be37:	jb     0x14003be9e
   14003be39:	add    BYTE PTR [rax],al
   14003be3b:	add    BYTE PTR [rax],al
   14003be3d:	add    BYTE PTR [rax],al
   14003be3f:	add    BYTE PTR [rbp+0x6e],al
   14003be42:	movsxd esi,DWORD PTR [rdx+0x79]
   14003be45:	jo     0x14003bebb
   14003be47:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   14003be4b:	outs   dx,BYTE PTR ds:[rsi]
   14003be4c:	je     0x14003beb3
   14003be4e:	outs   dx,BYTE PTR ds:[rsi]
   14003be4f:	je     0x14003be51
   14003be51:	add    BYTE PTR [rax],al
   14003be53:	add    BYTE PTR [rax],al
   14003be55:	add    BYTE PTR [rax],al
   14003be57:	add    BYTE PTR [rbx+0x65],dl
   14003be5a:	jb     0x14003bed2
   14003be5c:	imul   esp,DWORD PTR [rbx+0x65],0x72655600
   14003be63:	jae    0x14003bece
   14003be65:	outs   dx,DWORD PTR ds:[rsi]
   14003be66:	outs   dx,BYTE PTR ds:[rsi]
   14003be67:	add    BYTE PTR [rsi+0x65],dl
   14003be6a:	jb     0x14003bedf
   14003be6c:	imul   ebp,DWORD PTR [rdi+0x6e],0x62694c00
   14003be73:	jb     0x14003bed6
   14003be75:	jb     0x14003bef0
   14003be77:	add    BYTE PTR [rsi+0x61],cl
   14003be7a:	ins    DWORD PTR es:[rdi],dx
   14003be7b:	add    BYTE PTR gs:[rax],al
   14003be7e:	add    BYTE PTR [rax],al
   14003be80:	rex.WRX (bad) 
   14003be82:	ins    DWORD PTR es:[rdi],dx
   14003be83:	add    BYTE PTR gs:[rax],al
   14003be86:	add    BYTE PTR [rax],al
   14003be88:	push   rsi
   14003be89:	gs jb  0x14003beff
   14003be8c:	imul   ebp,DWORD PTR [rdi+0x6e],0x72655600
   14003be93:	jae    0x14003befe
   14003be95:	outs   dx,DWORD PTR ds:[rsi]
   14003be96:	outs   dx,BYTE PTR ds:[rsi]
   14003be97:	add    BYTE PTR [rbx+0x69],dl
   14003be9a:	outs   dx,BYTE PTR ds:[esi]
   14003be9c:	(bad)  
   14003be9d:	je     0x14003bf14
   14003be9f:	jb     0x14003bf06
   14003bea1:	add    BYTE PTR [rax],al
   14003bea3:	add    BYTE PTR [rax],al
   14003bea5:	add    BYTE PTR [rax],al
   14003bea7:	add    BYTE PTR [rbp+0x6e],al
   14003beaa:	movsxd esi,DWORD PTR [rdx+0x79]
   14003bead:	jo     0x14003bf23
   14003beaf:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   14003beb3:	outs   dx,BYTE PTR ds:[rsi]
   14003beb4:	je     0x14003bf1b
   14003beb6:	outs   dx,BYTE PTR ds:[rsi]
   14003beb7:	je     0x14003beb9
   14003beb9:	add    BYTE PTR [rax],al
   14003bebb:	add    BYTE PTR [rax],al
   14003bebd:	add    BYTE PTR [rax],al
   14003bebf:	add    BYTE PTR [rdx],ah
   14003bec1:	add    eax,0x51993
   14003bec6:	add    BYTE PTR [rax],al
   14003bec8:	push   rsp
   14003bec9:	cs add al,0x0
	...
   14003bed4:	(bad)  
   14003bed5:	add    BYTE PTR [rax],al
   14003bed7:	add    BYTE PTR [rsi+rbp*1+0x200004],dh
   14003bede:	add    BYTE PTR [rax],al
   14003bee0:	add    BYTE PTR [rax],al
   14003bee2:	add    BYTE PTR [rax],al
   14003bee4:	add    DWORD PTR [rax],eax
   14003bee6:	add    BYTE PTR [rax],al
   14003bee8:	and    al,BYTE PTR [rip+0x81993]        # 0x1400bd881
   14003beee:	add    BYTE PTR [rax],al
   14003bef0:	in     al,dx
   14003bef1:	cs add al,0x0
	...
   14003befc:	adc    DWORD PTR [rax],eax
   14003befe:	add    BYTE PTR [rax],al
   14003bf00:	mov    BYTE PTR [rdi],ch
   14003bf02:	add    al,0x0
   14003bf04:	(bad)  
   14003bf05:	add    eax,0x0
   14003bf0a:	add    BYTE PTR [rax],al
   14003bf0c:	add    DWORD PTR [rax],eax
   14003bf0e:	add    BYTE PTR [rax],al
   14003bf10:	and    al,BYTE PTR [rip+0x41993]        # 0x14007d8a9
   14003bf16:	add    BYTE PTR [rax],al
   14003bf18:	adc    BYTE PTR [rax],dh
   14003bf1a:	add    al,0x0
	...
   14003bf24:	adc    DWORD PTR [rax],eax
   14003bf26:	add    BYTE PTR [rax],al
   14003bf28:	xor    BYTE PTR fs:[rax+rax*1],al
   14003bf2c:	call   0x14003bf32
   14003bf31:	add    BYTE PTR [rax],al
   14003bf33:	add    BYTE PTR [rcx],al
   14003bf35:	add    BYTE PTR [rax],al
   14003bf37:	add    BYTE PTR [rax],bl
   14003bf39:	add    eax,0x14004
   14003bf3e:	add    BYTE PTR [rax],al
   14003bf40:	mov    al,0x57
   14003bf42:	add    BYTE PTR [rax+0x1],al
   14003bf45:	add    BYTE PTR [rax],al
   14003bf47:	add    BYTE PTR [rax],al
   14003bf49:	lea    eax,[rdx]
   14003bf4b:	rex add DWORD PTR [rax],eax
   14003bf4e:	add    BYTE PTR [rax],al
   14003bf50:	cwde   
   14003bf51:	add    eax,0x14004
   14003bf56:	add    BYTE PTR [rax],al
   14003bf58:	nop
   14003bf59:	push   rbp
   14003bf5a:	add    BYTE PTR [rax+0x1],al
   14003bf5d:	add    BYTE PTR [rax],al
   14003bf5f:	add    BYTE PTR [rax+0x140029d],dh
	...
   14003bf6d:	add    BYTE PTR [rax],al
   14003bf6f:	add    al,al
   14003bf71:	stc    
   14003bf72:	add    eax,DWORD PTR [rax+0x1]
   14003bf75:	add    BYTE PTR [rax],al
   14003bf77:	add    BYTE PTR [rax],dl
   14003bf79:	xchg   edi,eax
   14003bf7a:	add    al,BYTE PTR [rax+0x1]
   14003bf7d:	add    BYTE PTR [rax],al
   14003bf7f:	add    BYTE PTR [rax-0x44],dl
   14003bf82:	add    al,BYTE PTR [rax+0x1]
   14003bf85:	add    BYTE PTR [rax],al
   14003bf87:	add    al,dl
   14003bf89:	repnz add al,BYTE PTR [rax+0x1]
   14003bf8d:	add    BYTE PTR [rax],al
   14003bf8f:	add    BYTE PTR [rax-0x6a],dh
   14003bf92:	add    al,BYTE PTR [rax+0x1]
   14003bf95:	add    BYTE PTR [rax],al
   14003bf97:	add    BYTE PTR [rax-0x6a],dh
   14003bf9a:	add    al,BYTE PTR [rax+0x1]
   14003bf9d:	add    BYTE PTR [rax],al
   14003bf9f:	add    BYTE PTR [rax-0x6a],dh
   14003bfa2:	add    al,BYTE PTR [rax+0x1]
   14003bfa5:	add    BYTE PTR [rax],al
   14003bfa7:	add    BYTE PTR [rax-0x6a],dh
   14003bfaa:	add    al,BYTE PTR [rax+0x1]
   14003bfad:	add    BYTE PTR [rax],al
   14003bfaf:	add    BYTE PTR [rax-0x6a],dh
   14003bfb2:	add    al,BYTE PTR [rax+0x1]
   14003bfb5:	add    BYTE PTR [rax],al
   14003bfb7:	add    BYTE PTR [rax-0x6a],dh
   14003bfba:	add    al,BYTE PTR [rax+0x1]
   14003bfbd:	add    BYTE PTR [rax],al
   14003bfbf:	add    BYTE PTR [rax-0x6a],dh
   14003bfc2:	add    al,BYTE PTR [rax+0x1]
   14003bfc5:	add    BYTE PTR [rax],al
   14003bfc7:	add    BYTE PTR [rax-0x6a],dh
   14003bfca:	add    al,BYTE PTR [rax+0x1]
   14003bfcd:	add    BYTE PTR [rax],al
   14003bfcf:	add    al,dl
   14003bfd1:	movabs ds:0xa2d0000000014002,al
   14003bfda:	add    al,BYTE PTR [rax+0x1]
   14003bfdd:	add    BYTE PTR [rax],al
   14003bfdf:	add    BYTE PTR [rax-0x6a],dh
   14003bfe2:	add    al,BYTE PTR [rax+0x1]
   14003bfe5:	add    BYTE PTR [rax],al
   14003bfe7:	add    BYTE PTR [rax-0x6a],dh
   14003bfea:	add    al,BYTE PTR [rax+0x1]
   14003bfed:	add    BYTE PTR [rax],al
   14003bfef:	add    al,ah
   14003bff1:	mov    BYTE PTR [rdx],0x40
   14003bff4:	add    DWORD PTR [rax],eax
   14003bff6:	add    BYTE PTR [rax],al
   14003bff8:	nop
   14003bff9:	stos   BYTE PTR es:[rdi],al
   14003bffa:	add    al,BYTE PTR [rax+0x1]
   14003bffd:	add    BYTE PTR [rax],al
   14003bfff:	add    al,al
   14003c001:	or     al,0x3
   14003c003:	rex add DWORD PTR [rax],eax
   14003c006:	add    BYTE PTR [rax],al
   14003c008:	and    al,BYTE PTR [rip+0x11993]        # 0x14004d9a1
   14003c00e:	add    BYTE PTR [rax],al
   14003c010:	cmp    al,0x31
   14003c012:	add    al,0x0
	...
   14003c01c:	add    eax,DWORD PTR [rax]
   14003c01e:	add    BYTE PTR [rax],al
   14003c020:	add    al,0x31
   14003c022:	add    al,0x0
   14003c024:	and    BYTE PTR [rax],al
   14003c026:	add    BYTE PTR [rax],al
   14003c028:	add    BYTE PTR [rax],al
   14003c02a:	add    BYTE PTR [rax],al
   14003c02c:	add    DWORD PTR [rax],eax
   14003c02e:	add    BYTE PTR [rax],al
   14003c030:	and    al,BYTE PTR [rip+0x11993]        # 0x14004d9c9
   14003c036:	add    BYTE PTR [rax],al
   14003c038:	cmp    al,0x31
   14003c03a:	add    al,0x0
	...
   14003c044:	add    eax,DWORD PTR [rax]
   14003c046:	add    BYTE PTR [rax],al
   14003c048:	xor    DWORD PTR [rax+rax*1],r8d
   14003c04c:	and    BYTE PTR [rax],al
   14003c04e:	add    BYTE PTR [rax],al
   14003c050:	add    BYTE PTR [rax],al
   14003c052:	add    BYTE PTR [rax],al
   14003c054:	add    DWORD PTR [rax],eax
	...
   14003c05e:	add    BYTE PTR [rax],al
   14003c060:	lock cli 
   14003c062:	add    eax,DWORD PTR [rax+0x1]
   14003c065:	add    BYTE PTR [rax],al
   14003c067:	add    BYTE PTR [rax],ah
   14003c069:	cwde   
   14003c06a:	add    al,BYTE PTR [rax+0x1]
   14003c06d:	add    BYTE PTR [rax],al
   14003c06f:	add    BYTE PTR [rax+0x14002a9],dh
   14003c075:	add    BYTE PTR [rax],al
   14003c077:	add    al,ah
   14003c079:	cli    
   14003c07a:	add    al,BYTE PTR [rax+0x1]
   14003c07d:	add    BYTE PTR [rax],al
   14003c07f:	add    al,dl
   14003c081:	movabs ds:0xa2d0000000014002,al
   14003c08a:	add    al,BYTE PTR [rax+0x1]
   14003c08d:	add    BYTE PTR [rax],al
   14003c08f:	add    BYTE PTR [rax-0x6a],dh
   14003c092:	add    al,BYTE PTR [rax+0x1]
   14003c095:	add    BYTE PTR [rax],al
   14003c097:	add    BYTE PTR [rax-0x6a],dh
   14003c09a:	add    al,BYTE PTR [rax+0x1]
   14003c09d:	add    BYTE PTR [rax],al
   14003c09f:	add    BYTE PTR [rax-0x6a],dh
   14003c0a2:	add    al,BYTE PTR [rax+0x1]
   14003c0a5:	add    BYTE PTR [rax],al
   14003c0a7:	add    BYTE PTR [rax-0x6a],dh
   14003c0aa:	add    al,BYTE PTR [rax+0x1]
   14003c0ad:	add    BYTE PTR [rax],al
   14003c0af:	add    BYTE PTR [rax-0x6a],dh
   14003c0b2:	add    al,BYTE PTR [rax+0x1]
   14003c0b5:	add    BYTE PTR [rax],al
   14003c0b7:	add    BYTE PTR [rax-0x6a],dh
   14003c0ba:	add    al,BYTE PTR [rax+0x1]
   14003c0bd:	add    BYTE PTR [rax],al
   14003c0bf:	add    BYTE PTR [rax-0x6a],dh
   14003c0c2:	add    al,BYTE PTR [rax+0x1]
   14003c0c5:	add    BYTE PTR [rax],al
   14003c0c7:	add    BYTE PTR [rax-0x6a],dh
   14003c0ca:	add    al,BYTE PTR [rax+0x1]
   14003c0cd:	add    BYTE PTR [rax],al
   14003c0cf:	add    BYTE PTR [rax-0x6a],dh
   14003c0d2:	add    al,BYTE PTR [rax+0x1]
   14003c0d5:	add    BYTE PTR [rax],al
   14003c0d7:	add    BYTE PTR [rax-0x6a],dh
   14003c0da:	add    al,BYTE PTR [rax+0x1]
   14003c0dd:	add    BYTE PTR [rax],al
   14003c0df:	add    BYTE PTR [rax-0x3d],dl
   14003c0e2:	add    al,BYTE PTR [rax+0x1]
   14003c0e5:	add    BYTE PTR [rax],al
   14003c0e7:	add    BYTE PTR [rax],dl
   14003c0e9:	stos   BYTE PTR es:[rdi],al
   14003c0ea:	add    al,BYTE PTR [rax+0x1]
   14003c0ed:	add    BYTE PTR [rax],al
   14003c0ef:	add    al,dl
   14003c0f1:	(bad)  
   14003c0f2:	add    eax,DWORD PTR [rax+0x1]
   14003c0f5:	add    BYTE PTR [rax],al
   14003c0f7:	add    al,cl
   14003c0f9:	add    eax,DWORD PTR [rax+rax*2]
   14003c0fc:	add    DWORD PTR [rax],eax
   14003c0fe:	add    BYTE PTR [rax],al
   14003c100:	push   rax
   14003c101:	adc    BYTE PTR [rax],al
   14003c103:	rex add DWORD PTR [rax],eax
   14003c106:	add    BYTE PTR [rax],al
   14003c108:	cmp    al,0x47
   14003c10a:	add    DWORD PTR [rax+0x1],eax
   14003c10d:	add    BYTE PTR [rax],al
   14003c10f:	add    BYTE PTR [rdx+0x61],ah
   14003c112:	and    BYTE PTR fs:[rcx+0x6c],ah
   14003c116:	ins    BYTE PTR es:[rdi],dx
   14003c117:	outs   dx,DWORD PTR ds:[rsi]
   14003c118:	movsxd esp,DWORD PTR [rcx+0x74]
   14003c11b:	imul   ebp,DWORD PTR [rdi+0x6e],0x65530000
   14003c122:	jb     0x14003c19a
   14003c124:	imul   esp,DWORD PTR [rbx+0x65],0x72724500
   14003c12b:	outs   dx,DWORD PTR ds:[rsi]
   14003c12c:	jb     0x14003c171
   14003c12e:	outs   dx,DWORD PTR ds:[rsi]
   14003c12f:	fs add BYTE PTR gs:[rax],al
   14003c133:	add    BYTE PTR [rax],al
   14003c135:	add    BYTE PTR [rax],al
   14003c137:	add    BYTE PTR [rbp+0x6e],al
   14003c13a:	movsxd esi,DWORD PTR [rdx+0x79]
   14003c13d:	jo     0x14003c1b3
   14003c13f:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   14003c143:	outs   dx,BYTE PTR ds:[rsi]
   14003c144:	je     0x14003c1ab
   14003c146:	outs   dx,BYTE PTR ds:[rsi]
   14003c147:	je     0x14003c149
   14003c149:	add    BYTE PTR [rax],al
   14003c14b:	add    BYTE PTR [rax],al
   14003c14d:	add    BYTE PTR [rax],al
   14003c14f:	add    BYTE PTR [rbx+0x65],dl
   14003c152:	jb     0x14003c1ca
   14003c154:	imul   esp,DWORD PTR [rbx+0x65],0x72724500
   14003c15b:	outs   dx,DWORD PTR ds:[rsi]
   14003c15c:	jb     0x14003c1a1
   14003c15e:	outs   dx,DWORD PTR ds:[rsi]
   14003c15f:	fs add BYTE PTR gs:[rax],al
   14003c163:	add    BYTE PTR [rax],al
   14003c165:	add    BYTE PTR [rax],al
   14003c167:	add    BYTE PTR [rbp+0x6e],al
   14003c16a:	movsxd esi,DWORD PTR [rdx+0x79]
   14003c16d:	jo     0x14003c1e3
   14003c16f:	gs rex.XB outs dx,DWORD PTR fs:[rsi]
   14003c173:	outs   dx,BYTE PTR ds:[rsi]
   14003c174:	je     0x14003c1db
   14003c176:	outs   dx,BYTE PTR ds:[rsi]
   14003c177:	je     0x14003c179
   14003c179:	add    BYTE PTR [rax],al
   14003c17b:	add    BYTE PTR [rax],al
   14003c17d:	add    BYTE PTR [rax],al
   14003c17f:	add    BYTE PTR [rdx],ah
   14003c181:	add    eax,0x11993
   14003c186:	add    BYTE PTR [rax],al
   14003c188:	xor    DWORD PTR fs:[rax+rax*1],eax
	...
   14003c194:	add    eax,DWORD PTR [rax]
   14003c196:	add    BYTE PTR [rax],al
   14003c198:	test   BYTE PTR [rcx],dh
   14003c19a:	add    al,0x0
   14003c19c:	and    BYTE PTR [rax],al
   14003c19e:	add    BYTE PTR [rax],al
   14003c1a0:	add    BYTE PTR [rax],al
   14003c1a2:	add    BYTE PTR [rax],al
   14003c1a4:	add    DWORD PTR [rax],eax
   14003c1a6:	add    BYTE PTR [rax],al
   14003c1a8:	and    al,BYTE PTR [rip+0x41993]        # 0x14007db41
   14003c1ae:	add    BYTE PTR [rax],al
   14003c1b0:	pushf  
   14003c1b1:	xor    DWORD PTR [rax+rax*1],eax
	...
   14003c1bc:	(bad)  
   14003c1bd:	add    BYTE PTR [rax],al
   14003c1bf:	add    ah,dh
   14003c1c1:	xor    DWORD PTR [rax+rax*1],eax
   14003c1c4:	test   al,0x2
   14003c1c6:	add    BYTE PTR [rax],al
   14003c1c8:	add    BYTE PTR [rax],al
   14003c1ca:	add    BYTE PTR [rax],al
   14003c1cc:	add    DWORD PTR [rax],eax
   14003c1ce:	add    BYTE PTR [rax],al
   14003c1d0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005db69
   14003c1d6:	add    BYTE PTR [rax],al
   14003c1d8:	sub    al,0x32
   14003c1da:	add    al,0x0
	...
   14003c1e4:	or     eax,0x60000000
   14003c1e9:	xor    al,BYTE PTR [rax+rax*1]
   14003c1ec:	push   rax
   14003c1ed:	add    DWORD PTR [rax],eax
   14003c1ef:	add    BYTE PTR [rax],al
   14003c1f1:	add    BYTE PTR [rax],al
   14003c1f3:	add    BYTE PTR [rcx],al
   14003c1f5:	add    BYTE PTR [rax],al
   14003c1f7:	add    BYTE PTR [rax+0x1400404],bl
   14003c1fd:	add    BYTE PTR [rax],al
   14003c1ff:	add    BYTE PTR [rax+0x58],dh
   14003c202:	add    BYTE PTR [rax+0x1],al
   14003c205:	add    BYTE PTR [rax],al
   14003c207:	add    BYTE PTR [rax-0x67],dh
   14003c20a:	add    al,BYTE PTR [rax+0x1]
   14003c20d:	add    BYTE PTR [rax],al
   14003c20f:	add    BYTE PTR [rdx+0x61],ah
   14003c212:	and    BYTE PTR fs:[rcx+0x6c],ah
   14003c216:	ins    BYTE PTR es:[rdi],dx
   14003c217:	outs   dx,DWORD PTR ds:[rsi]
   14003c218:	movsxd esp,DWORD PTR [rcx+0x74]
   14003c21b:	imul   ebp,DWORD PTR [rdi+0x6e],0x0
   14003c222:	add    BYTE PTR [rax],al
   14003c224:	add    BYTE PTR [rax],al
   14003c226:	add    BYTE PTR [rax],al
   14003c228:	cmp    al,0x3f
   14003c22a:	js     0x14003c299
   14003c22c:	ins    BYTE PTR es:[rdi],dx
   14003c22d:	and    BYTE PTR [rsi+0x65],dh
   14003c230:	jb     0x14003c2a5
   14003c232:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31273d
   14003c239:	xor    BYTE PTR [rdi],ah
   14003c23b:	and    BYTE PTR [rbp+0x6e],ah
   14003c23e:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003c241:	imul   ebp,DWORD PTR [rsi+0x67],0x5455273d
   14003c248:	rex.RX sub eax,0x3e3f2738
   14003c24e:	add    BYTE PTR [rax],al
   14003c250:	push   rsp
   14003c251:	js     0x14003c2c1
   14003c253:	add    BYTE PTR [rax],al
   14003c255:	add    BYTE PTR [rax],al
   14003c257:	add    BYTE PTR [rbx+0x6f],al
   14003c25a:	outs   dx,BYTE PTR ds:[rsi]
   14003c25b:	je     0x14003c2c2
   14003c25d:	outs   dx,BYTE PTR ds:[rsi]
   14003c25e:	je     0x14003c260
   14003c260:	cmp    al,0x2f
   14003c262:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14003c264:	outs   dx,BYTE PTR ds:[rsi]
   14003c265:	je     0x14003c2cc
   14003c267:	outs   dx,BYTE PTR ds:[rsi]
   14003c268:	je     0x14003c2a8
   14003c26a:	add    BYTE PTR [rax],al
   14003c26c:	add    BYTE PTR [rax],al
   14003c26e:	add    BYTE PTR [rax],al
   14003c270:	cmp    al,0x43
   14003c272:	outs   dx,DWORD PTR ds:[rsi]
   14003c273:	outs   dx,BYTE PTR ds:[rsi]
   14003c274:	je     0x14003c2db
   14003c276:	outs   dx,BYTE PTR ds:[rsi]
   14003c277:	je     0x14003c2b7
   14003c279:	add    BYTE PTR [rax],al
   14003c27b:	add    BYTE PTR [rax],al
   14003c27d:	add    BYTE PTR [rax],al
   14003c27f:	add    BYTE PTR [rbx+0x6f],al
   14003c282:	outs   dx,BYTE PTR ds:[rsi]
   14003c283:	je     0x14003c2ea
   14003c285:	outs   dx,BYTE PTR ds:[rsi]
   14003c286:	je     0x14003c288
   14003c288:	and    al,BYTE PTR [rip+0x11993]        # 0x14004dc21
   14003c28e:	add    BYTE PTR [rax],al
   14003c290:	enter  0x432,0x0
	...
   14003c29c:	add    eax,DWORD PTR [rax]
   14003c29e:	add    BYTE PTR [rax],al
   14003c2a0:	call   0x16003c6d7
   14003c2a5:	add    BYTE PTR [rax],al
   14003c2a7:	add    BYTE PTR [rax],al
   14003c2a9:	add    BYTE PTR [rax],al
   14003c2ab:	add    BYTE PTR [rcx],al
   14003c2ad:	add    BYTE PTR [rax],al
   14003c2af:	add    BYTE PTR [rdx],ah
   14003c2b1:	add    eax,0x81993
   14003c2b6:	add    BYTE PTR [rax],al
   14003c2b8:	add    BYTE PTR [rbx],dh
   14003c2ba:	add    al,0x0
	...
   14003c2c4:	or     al,0x0
   14003c2c6:	add    BYTE PTR [rax],al
   14003c2c8:	mov    WORD PTR [rbx],?
   14003c2ca:	add    al,0x0
   14003c2cc:	adc    BYTE PTR [rax+rax*1],al
   14003c2cf:	add    BYTE PTR [rax],al
   14003c2d1:	add    BYTE PTR [rax],al
   14003c2d3:	add    BYTE PTR [rcx],al
   14003c2d5:	add    BYTE PTR [rax],al
   14003c2d7:	add    BYTE PTR [rdx],ah
   14003c2d9:	add    eax,0x31993
   14003c2de:	add    BYTE PTR [rax],al
   14003c2e0:	in     al,dx
   14003c2e1:	xor    eax,DWORD PTR [rax+rax*1]
	...
   14003c2ec:	or     al,BYTE PTR [rax]
   14003c2ee:	add    BYTE PTR [rax],al
   14003c2f0:	xor    BYTE PTR [rsp+rax*1],dh
   14003c2f3:	add    BYTE PTR [rax],bh
   14003c2f5:	add    DWORD PTR [rax],eax
   14003c2f7:	add    BYTE PTR [rax],al
   14003c2f9:	add    BYTE PTR [rax],al
   14003c2fb:	add    BYTE PTR [rcx],al
   14003c2fd:	add    BYTE PTR [rax],al
   14003c2ff:	add    BYTE PTR [rdx],ah
   14003c301:	add    eax,0x31993
   14003c306:	add    BYTE PTR [rax],al
   14003c308:	enter  0x434,0x0
	...
   14003c314:	add    eax,0x90000000
   14003c319:	xor    al,0x4
   14003c31b:	add    BYTE PTR [rax],ah
   14003c31d:	add    BYTE PTR [rax],al
   14003c31f:	add    BYTE PTR [rax],al
   14003c321:	add    BYTE PTR [rax],al
   14003c323:	add    BYTE PTR [rcx],al
	...
   14003c32d:	add    BYTE PTR [rax],al
   14003c32f:	add    BYTE PTR [rax-0x5],bh
   14003c332:	add    eax,DWORD PTR [rax+0x1]
   14003c335:	add    BYTE PTR [rax],al
   14003c337:	add    al,ah
   14003c339:	movabs ds:0xa290000000014002,al
   14003c342:	add    al,BYTE PTR [rax+0x1]
   14003c345:	add    BYTE PTR [rax],al
   14003c347:	add    BYTE PTR [rax],dh
   14003c349:	cmc    
   14003c34a:	add    al,BYTE PTR [rax+0x1]
   14003c34d:	add    BYTE PTR [rax],al
   14003c34f:	add    BYTE PTR [rax-0x6a],dh
   14003c352:	add    al,BYTE PTR [rax+0x1]
   14003c355:	add    BYTE PTR [rax],al
   14003c357:	add    BYTE PTR [rax-0x6a],dh
   14003c35a:	add    al,BYTE PTR [rax+0x1]
   14003c35d:	add    BYTE PTR [rax],al
   14003c35f:	add    BYTE PTR [rax-0x6a],dh
   14003c362:	add    al,BYTE PTR [rax+0x1]
   14003c365:	add    BYTE PTR [rax],al
   14003c367:	add    BYTE PTR [rax-0x6a],dh
   14003c36a:	add    al,BYTE PTR [rax+0x1]
   14003c36d:	add    BYTE PTR [rax],al
   14003c36f:	add    BYTE PTR [rax-0x6a],dh
   14003c372:	add    al,BYTE PTR [rax+0x1]
   14003c375:	add    BYTE PTR [rax],al
   14003c377:	add    BYTE PTR [rax-0x6a],dh
   14003c37a:	add    al,BYTE PTR [rax+0x1]
   14003c37d:	add    BYTE PTR [rax],al
   14003c37f:	add    BYTE PTR [rax-0x6a],dh
   14003c382:	add    al,BYTE PTR [rax+0x1]
   14003c385:	add    BYTE PTR [rax],al
   14003c387:	add    BYTE PTR [rax-0x6a],dh
   14003c38a:	add    al,BYTE PTR [rax+0x1]
   14003c38d:	add    BYTE PTR [rax],al
   14003c38f:	add    BYTE PTR [rax-0x6a],dh
   14003c392:	add    al,BYTE PTR [rax+0x1]
   14003c395:	add    BYTE PTR [rax],al
   14003c397:	add    BYTE PTR [rax-0x6a],dh
   14003c39a:	add    al,BYTE PTR [rax+0x1]
   14003c39d:	add    BYTE PTR [rax],al
   14003c39f:	add    al,dl
   14003c3a1:	movabs ds:0xa2d0000000014002,al
   14003c3aa:	add    al,BYTE PTR [rax+0x1]
   14003c3ad:	add    BYTE PTR [rax],al
   14003c3af:	add    al,ah
   14003c3b1:	leave  
   14003c3b2:	add    al,BYTE PTR [rax+0x1]
   14003c3b5:	add    BYTE PTR [rax],al
   14003c3b7:	add    BYTE PTR [rax+0x14002aa],ah
   14003c3bd:	add    BYTE PTR [rax],al
   14003c3bf:	add    al,dh
   14003c3c1:	or     DWORD PTR [rbx],eax
   14003c3c3:	rex add DWORD PTR [rax],eax
   14003c3c6:	add    BYTE PTR [rax],al
   14003c3c8:	jo     0x14003c391
   14003c3ca:	add    al,BYTE PTR [rax+0x1]
   14003c3cd:	add    BYTE PTR [rax],al
   14003c3cf:	add    BYTE PTR [rdx],ah
   14003c3d1:	add    eax,0x31993
   14003c3d6:	add    BYTE PTR [rax],al
   14003c3d8:	enter  0x434,0x0
	...
   14003c3e4:	add    eax,0xe0000000
   14003c3e9:	xor    al,0x4
   14003c3eb:	add    BYTE PTR [rax],ah
   14003c3ed:	add    BYTE PTR [rax],al
   14003c3ef:	add    BYTE PTR [rax],al
   14003c3f1:	add    BYTE PTR [rax],al
   14003c3f3:	add    BYTE PTR [rcx],al
   14003c3f5:	add    BYTE PTR [rax],al
   14003c3f7:	add    BYTE PTR [rdx],ah
   14003c3f9:	add    eax,0x21993
   14003c3fe:	add    BYTE PTR [rax],al
   14003c400:	and    al,0x35
   14003c402:	add    al,0x0
	...
   14003c40c:	add    eax,DWORD PTR [rax]
   14003c40e:	add    BYTE PTR [rax],al
   14003c410:	xor    al,0x35
   14003c412:	add    al,0x0
   14003c414:	push   rax
   14003c415:	add    BYTE PTR [rax],al
   14003c417:	add    BYTE PTR [rax],al
   14003c419:	add    BYTE PTR [rax],al
   14003c41b:	add    BYTE PTR [rcx],al
   14003c41d:	add    BYTE PTR [rax],al
   14003c41f:	add    BYTE PTR [rdx],ah
   14003c421:	add    eax,0x21993
   14003c426:	add    BYTE PTR [rax],al
   14003c428:	and    al,0x35
   14003c42a:	add    al,0x0
	...
   14003c434:	add    eax,DWORD PTR [rax]
   14003c436:	add    BYTE PTR [rax],al
   14003c438:	pop    rsp
   14003c439:	xor    eax,0x500004
   14003c43e:	add    BYTE PTR [rax],al
   14003c440:	add    BYTE PTR [rax],al
   14003c442:	add    BYTE PTR [rax],al
   14003c444:	add    DWORD PTR [rax],eax
	...
   14003c44e:	add    BYTE PTR [rax],al
   14003c450:	add    ah,bh
   14003c452:	add    eax,DWORD PTR [rax+0x1]
   14003c455:	add    BYTE PTR [rax],al
   14003c457:	add    al,ah
   14003c459:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c45a:	add    al,BYTE PTR [rax+0x1]
   14003c45d:	add    BYTE PTR [rax],al
   14003c45f:	add    al,dl
   14003c461:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c462:	add    al,BYTE PTR [rax+0x1]
   14003c465:	add    BYTE PTR [rax],al
   14003c467:	add    al,dl
   14003c469:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c46a:	add    al,BYTE PTR [rax+0x1]
   14003c46d:	add    BYTE PTR [rax],al
   14003c46f:	add    al,dl
   14003c471:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c472:	add    al,BYTE PTR [rax+0x1]
   14003c475:	add    BYTE PTR [rax],al
   14003c477:	add    al,dl
   14003c479:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c47a:	add    al,BYTE PTR [rax+0x1]
   14003c47d:	add    BYTE PTR [rax],al
   14003c47f:	add    al,dl
   14003c481:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c482:	add    al,BYTE PTR [rax+0x1]
   14003c485:	add    BYTE PTR [rax],al
   14003c487:	add    al,dl
   14003c489:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c48a:	add    al,BYTE PTR [rax+0x1]
   14003c48d:	add    BYTE PTR [rax],al
   14003c48f:	add    al,dl
   14003c491:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c492:	add    al,BYTE PTR [rax+0x1]
   14003c495:	add    BYTE PTR [rax],al
   14003c497:	add    al,dl
   14003c499:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c49a:	add    al,BYTE PTR [rax+0x1]
   14003c49d:	add    BYTE PTR [rax],al
   14003c49f:	add    BYTE PTR [rax-0x4],bh
   14003c4a2:	add    eax,DWORD PTR [rax+0x1]
   14003c4a5:	add    BYTE PTR [rax],al
   14003c4a7:	add    BYTE PTR [rax],ah
   14003c4a9:	test   al,0x2
   14003c4ab:	rex add DWORD PTR [rax],eax
   14003c4ae:	add    BYTE PTR [rax],al
   14003c4b0:	rex.W pop rcx
   14003c4b2:	add    DWORD PTR [rax+0x1],eax
   14003c4b5:	add    BYTE PTR [rax],al
   14003c4b7:	add    BYTE PTR [rax+0x59],cl
   14003c4ba:	add    DWORD PTR [rax+0x1],eax
   14003c4bd:	add    BYTE PTR [rax],al
   14003c4bf:	add    BYTE PTR [rdi+rbp*1],bh
   14003c4c2:	and    eax,0x3e73
   14003c4c7:	add    BYTE PTR [rax],ah
   14003c4c9:	(bad)  
   14003c4ca:	add    BYTE PTR ds:0x20200073,bh
   14003c4d2:	and    BYTE PTR [rax],ah
   14003c4d4:	add    BYTE PTR [rax],al
   14003c4d6:	add    BYTE PTR [rax],al
   14003c4d8:	cmp    al,0x21
   14003c4da:	sub    eax,0x2d73252d
   14003c4df:	sub    eax,0x3e
   14003c4e4:	cmp    al,0x25
   14003c4e6:	jae    0x14003c526
	...
   14003c4f0:	movabs al,ds:0x40000000014003fc
   14003c4f9:	mov    ecx,0x14002
   14003c4fe:	add    BYTE PTR [rax],al
   14003c500:	shl    BYTE PTR [rbx+0x14002],0x0
   14003c507:	add    BYTE PTR [rax],ah
   14003c509:	std    
   14003c50a:	add    eax,DWORD PTR [rax+0x1]
   14003c50d:	add    BYTE PTR [rax],al
   14003c50f:	add    BYTE PTR [rax],dh
   14003c511:	mov    bh,0x2
   14003c513:	rex add DWORD PTR [rax],eax
   14003c516:	add    BYTE PTR [rax],al
   14003c518:	rex (bad) 
   14003c51a:	add    al,BYTE PTR [rax+0x1]
   14003c51d:	add    BYTE PTR [rax],al
   14003c51f:	add    al,al
   14003c521:	lock add al,BYTE PTR [rax+0x1]
	...
   14003c52d:	add    BYTE PTR [rax],al
   14003c52f:	add    BYTE PTR [rax+0x14003fd],ah
   14003c535:	add    BYTE PTR [rax],al
   14003c537:	add    BYTE PTR [rax+0x14002b8],al
   14003c53d:	add    BYTE PTR [rax],al
   14003c53f:	add    BYTE PTR [rax+0x59],cl
   14003c542:	add    DWORD PTR [rax+0x1],eax
   14003c545:	add    BYTE PTR [rax],al
   14003c547:	add    BYTE PTR [rax+0x59],cl
   14003c54a:	add    DWORD PTR [rax+0x1],eax
   14003c54d:	add    BYTE PTR [rax],al
   14003c54f:	add    BYTE PTR [rax-0x6a],dh
   14003c552:	add    al,BYTE PTR [rax+0x1]
   14003c555:	add    BYTE PTR [rax],al
   14003c557:	add    BYTE PTR [rax-0x6a],dh
   14003c55a:	add    al,BYTE PTR [rax+0x1]
   14003c55d:	add    BYTE PTR [rax],al
   14003c55f:	add    BYTE PTR [rax-0x6a],dh
   14003c562:	add    al,BYTE PTR [rax+0x1]
   14003c565:	add    BYTE PTR [rax],al
   14003c567:	add    BYTE PTR [rax-0x6a],dh
   14003c56a:	add    al,BYTE PTR [rax+0x1]
   14003c56d:	add    BYTE PTR [rax],al
   14003c56f:	add    BYTE PTR [rax-0x6a],dh
   14003c572:	add    al,BYTE PTR [rax+0x1]
   14003c575:	add    BYTE PTR [rax],al
   14003c577:	add    BYTE PTR [rax-0x6a],dh
   14003c57a:	add    al,BYTE PTR [rax+0x1]
   14003c57d:	add    BYTE PTR [rax],al
   14003c57f:	add    BYTE PTR [rax-0x6a],dh
   14003c582:	add    al,BYTE PTR [rax+0x1]
   14003c585:	add    BYTE PTR [rax],al
   14003c587:	add    BYTE PTR [rax-0x6a],dh
   14003c58a:	add    al,BYTE PTR [rax+0x1]
   14003c58d:	add    BYTE PTR [rax],al
   14003c58f:	add    BYTE PTR [rax-0x6a],dh
   14003c592:	add    al,BYTE PTR [rax+0x1]
   14003c595:	add    BYTE PTR [rax],al
   14003c597:	add    BYTE PTR [rax-0x6a],dh
   14003c59a:	add    al,BYTE PTR [rax+0x1]
   14003c59d:	add    BYTE PTR [rax],al
   14003c59f:	add    BYTE PTR [rax-0x6a],dh
   14003c5a2:	add    al,BYTE PTR [rax+0x1]
   14003c5a5:	add    BYTE PTR [rax],al
   14003c5a7:	add    BYTE PTR [rax-0x6a],dh
   14003c5aa:	add    al,BYTE PTR [rax+0x1]
   14003c5ad:	add    BYTE PTR [rax],al
   14003c5af:	add    BYTE PTR [rax+0x59],cl
   14003c5b2:	add    DWORD PTR [rax+0x1],eax
   14003c5b5:	add    BYTE PTR [rax],al
   14003c5b7:	add    BYTE PTR [rax+0x59],cl
   14003c5ba:	add    DWORD PTR [rax+0x1],eax
   14003c5bd:	add    BYTE PTR [rax],al
   14003c5bf:	add    BYTE PTR [rax+0x59],cl
   14003c5c2:	add    DWORD PTR [rax+0x1],eax
   14003c5c5:	add    BYTE PTR [rax],al
   14003c5c7:	add    BYTE PTR [rdx],ah
   14003c5c9:	add    eax,0x21993
   14003c5ce:	add    BYTE PTR [rax],al
   14003c5d0:	jo     0x14003c608
   14003c5d2:	add    al,0x0
	...
   14003c5dc:	add    al,0x0
   14003c5de:	add    BYTE PTR [rax],al
   14003c5e0:	xor    BYTE PTR [rsi],0x4
   14003c5e3:	add    BYTE PTR [rax],ah
   14003c5e5:	add    BYTE PTR [rax],al
   14003c5e7:	add    BYTE PTR [rax],al
   14003c5e9:	add    BYTE PTR [rax],al
   14003c5eb:	add    BYTE PTR [rcx],al
   14003c5ed:	add    BYTE PTR [rax],al
   14003c5ef:	add    al,cl
   14003c5f1:	std    
   14003c5f2:	add    eax,DWORD PTR [rax+0x1]
   14003c5f5:	add    BYTE PTR [rax],al
   14003c5f7:	add    al,ah
   14003c5f9:	mov    bh,0x2
   14003c5fb:	rex add DWORD PTR [rax],eax
   14003c5fe:	add    BYTE PTR [rax],al
   14003c600:	lock mov al,0x2
   14003c603:	rex add DWORD PTR [rax],eax
   14003c606:	add    BYTE PTR [rax],al
   14003c608:	(bad)  
   14003c609:	out    dx,eax
   14003c60a:	add    al,BYTE PTR [rax+0x1]
   14003c60d:	add    BYTE PTR [rax],al
   14003c60f:	add    BYTE PTR [rax-0x6a],dh
   14003c612:	add    al,BYTE PTR [rax+0x1]
   14003c615:	add    BYTE PTR [rax],al
   14003c617:	add    BYTE PTR [rax-0x6a],dh
   14003c61a:	add    al,BYTE PTR [rax+0x1]
   14003c61d:	add    BYTE PTR [rax],al
   14003c61f:	add    BYTE PTR [rax-0x6a],dh
   14003c622:	add    al,BYTE PTR [rax+0x1]
   14003c625:	add    BYTE PTR [rax],al
   14003c627:	add    BYTE PTR [rax-0x6a],dh
   14003c62a:	add    al,BYTE PTR [rax+0x1]
   14003c62d:	add    BYTE PTR [rax],al
   14003c62f:	add    al,dl
   14003c631:	mov    bh,0x2
   14003c633:	rex add DWORD PTR [rax],eax
   14003c636:	add    BYTE PTR [rax],al
   14003c638:	shl    BYTE PTR [rdi+0x14002],1
   14003c63e:	add    BYTE PTR [rax],al
   14003c640:	jo     0x14003c5d8
   14003c642:	add    al,BYTE PTR [rax+0x1]
   14003c645:	add    BYTE PTR [rax],al
   14003c647:	add    BYTE PTR [rax-0x6a],dh
   14003c64a:	add    al,BYTE PTR [rax+0x1]
   14003c64d:	add    BYTE PTR [rax],al
   14003c64f:	add    BYTE PTR [rax-0x6a],dh
   14003c652:	add    al,BYTE PTR [rax+0x1]
   14003c655:	add    BYTE PTR [rax],al
   14003c657:	add    BYTE PTR [rax-0x6a],dh
   14003c65a:	add    al,BYTE PTR [rax+0x1]
   14003c65d:	add    BYTE PTR [rax],al
   14003c65f:	add    BYTE PTR [rax-0x6a],dh
   14003c662:	add    al,BYTE PTR [rax+0x1]
   14003c665:	add    BYTE PTR [rax],al
   14003c667:	add    BYTE PTR [rax-0x6a],dh
   14003c66a:	add    al,BYTE PTR [rax+0x1]
   14003c66d:	add    BYTE PTR [rax],al
   14003c66f:	add    BYTE PTR [rax-0x3a],dl
   14003c672:	add    al,BYTE PTR [rax+0x1]
   14003c675:	add    BYTE PTR [rax],al
   14003c677:	add    BYTE PTR [rax+0x14002aa],al
   14003c67d:	add    BYTE PTR [rax],al
   14003c67f:	add    BYTE PTR [rax],dh
   14003c681:	or     eax,DWORD PTR [rbx]
   14003c683:	rex add DWORD PTR [rax],eax
	...
   14003c68e:	add    BYTE PTR [rax],al
   14003c690:	push   rax
   14003c691:	inc    BYTE PTR [rbx]
   14003c693:	rex add DWORD PTR [rax],eax
   14003c696:	add    BYTE PTR [rax],al
   14003c698:	rex mov eax,0x14002
   14003c69e:	add    BYTE PTR [rax],al
   14003c6a0:	(bad)  
   14003c6a1:	mov    cl,0x2
   14003c6a3:	rex add DWORD PTR [rax],eax
   14003c6a6:	add    BYTE PTR [rax],al
   14003c6a8:	push   rax
   14003c6a9:	out    dx,al
   14003c6aa:	add    al,BYTE PTR [rax+0x1]
   14003c6ad:	add    BYTE PTR [rax],al
   14003c6af:	add    BYTE PTR [rax-0x6a],dh
   14003c6b2:	add    al,BYTE PTR [rax+0x1]
   14003c6b5:	add    BYTE PTR [rax],al
   14003c6b7:	add    BYTE PTR [rax-0x6a],dh
   14003c6ba:	add    al,BYTE PTR [rax+0x1]
   14003c6bd:	add    BYTE PTR [rax],al
   14003c6bf:	add    BYTE PTR [rax-0x6a],dh
   14003c6c2:	add    al,BYTE PTR [rax+0x1]
   14003c6c5:	add    BYTE PTR [rax],al
   14003c6c7:	add    BYTE PTR [rax-0x6a],dh
   14003c6ca:	add    al,BYTE PTR [rax+0x1]
   14003c6cd:	add    BYTE PTR [rax],al
   14003c6cf:	add    BYTE PTR [rax-0x6a],dh
   14003c6d2:	add    al,BYTE PTR [rax+0x1]
   14003c6d5:	add    BYTE PTR [rax],al
   14003c6d7:	add    BYTE PTR [rax-0x6a],dh
   14003c6da:	add    al,BYTE PTR [rax+0x1]
   14003c6dd:	add    BYTE PTR [rax],al
   14003c6df:	add    al,dl
   14003c6e1:	mov    bh,0x2
   14003c6e3:	rex add DWORD PTR [rax],eax
   14003c6e6:	add    BYTE PTR [rax],al
   14003c6e8:	shl    BYTE PTR [rdi+0x14002],1
   14003c6ee:	add    BYTE PTR [rax],al
   14003c6f0:	jo     0x14003c688
   14003c6f2:	add    al,BYTE PTR [rax+0x1]
   14003c6f5:	add    BYTE PTR [rax],al
   14003c6f7:	add    BYTE PTR [rax-0x6a],dh
   14003c6fa:	add    al,BYTE PTR [rax+0x1]
   14003c6fd:	add    BYTE PTR [rax],al
   14003c6ff:	add    BYTE PTR [rax-0x6a],dh
   14003c702:	add    al,BYTE PTR [rax+0x1]
   14003c705:	add    BYTE PTR [rax],al
   14003c707:	add    BYTE PTR [rax-0x6a],dh
   14003c70a:	add    al,BYTE PTR [rax+0x1]
   14003c70d:	add    BYTE PTR [rax],al
   14003c70f:	add    BYTE PTR [rax-0x36],dl
   14003c712:	add    al,BYTE PTR [rax+0x1]
   14003c715:	add    BYTE PTR [rax],al
   14003c717:	add    BYTE PTR [rax+0x14002aa],dh
   14003c71d:	add    BYTE PTR [rax],al
   14003c71f:	add    al,dh
   14003c721:	or     DWORD PTR [rbx],eax
   14003c723:	rex add DWORD PTR [rax],eax
   14003c726:	add    BYTE PTR [rax],al
   14003c728:	and    al,BYTE PTR [rip+0x21993]        # 0x14005e0c1
   14003c72e:	add    BYTE PTR [rax],al
   14003c730:	sub    BYTE PTR [rcx],bh
   14003c732:	add    al,0x0
	...
   14003c73c:	add    al,0x0
   14003c73e:	add    BYTE PTR [rax],al
   14003c740:	and    BYTE PTR [rdi],dh
   14003c742:	add    al,0x0
   14003c744:	and    BYTE PTR [rax],al
   14003c746:	add    BYTE PTR [rax],al
   14003c748:	add    BYTE PTR [rax],al
   14003c74a:	add    BYTE PTR [rax],al
   14003c74c:	add    DWORD PTR [rax],eax
   14003c74e:	add    BYTE PTR [rax],al
   14003c750:	fdivr  st,st(6)
   14003c752:	add    eax,DWORD PTR [rax+0x1]
   14003c755:	add    BYTE PTR [rax],al
   14003c757:	add    BYTE PTR [rax],ah
   14003c759:	mov    esp,0x14002
   14003c75e:	add    BYTE PTR [rax],al
   14003c760:	nop
   14003c761:	scas   al,BYTE PTR es:[rdi]
   14003c762:	add    al,BYTE PTR [rax+0x1]
   14003c765:	add    BYTE PTR [rax],al
   14003c767:	add    BYTE PTR [rax],al
   14003c769:	std    
   14003c76a:	add    al,BYTE PTR [rax+0x1]
   14003c76d:	add    BYTE PTR [rax],al
   14003c76f:	add    BYTE PTR [rax-0x6a],dh
   14003c772:	add    al,BYTE PTR [rax+0x1]
   14003c775:	add    BYTE PTR [rax],al
   14003c777:	add    BYTE PTR [rax-0x6a],dh
   14003c77a:	add    al,BYTE PTR [rax+0x1]
   14003c77d:	add    BYTE PTR [rax],al
   14003c77f:	add    al,dl
   14003c781:	mov    bh,0x2
   14003c783:	rex add DWORD PTR [rax],eax
   14003c786:	add    BYTE PTR [rax],al
   14003c788:	shl    BYTE PTR [rdi+0x14002],1
   14003c78e:	add    BYTE PTR [rax],al
   14003c790:	jo     0x14003c728
   14003c792:	add    al,BYTE PTR [rax+0x1]
   14003c795:	add    BYTE PTR [rax],al
   14003c797:	add    BYTE PTR [rax-0x6a],dh
   14003c79a:	add    al,BYTE PTR [rax+0x1]
   14003c79d:	add    BYTE PTR [rax],al
   14003c79f:	add    BYTE PTR [rax-0x6a],dh
   14003c7a2:	add    al,BYTE PTR [rax+0x1]
   14003c7a5:	add    BYTE PTR [rax],al
   14003c7a7:	add    BYTE PTR [rax-0x6a],dh
   14003c7aa:	add    al,BYTE PTR [rax+0x1]
   14003c7ad:	add    BYTE PTR [rax],al
   14003c7af:	add    BYTE PTR [rax-0x6a],dh
   14003c7b2:	add    al,BYTE PTR [rax+0x1]
   14003c7b5:	add    BYTE PTR [rax],al
   14003c7b7:	add    BYTE PTR [rax-0x6a],dh
   14003c7ba:	add    al,BYTE PTR [rax+0x1]
   14003c7bd:	add    BYTE PTR [rax],al
   14003c7bf:	add    BYTE PTR [rax-0x6a],dh
   14003c7c2:	add    al,BYTE PTR [rax+0x1]
   14003c7c5:	add    BYTE PTR [rax],al
   14003c7c7:	add    BYTE PTR [rax-0x6a],dh
   14003c7ca:	add    al,BYTE PTR [rax+0x1]
   14003c7cd:	add    BYTE PTR [rax],al
   14003c7cf:	add    BYTE PTR [rax+0x14002d5],ah
   14003c7d5:	add    BYTE PTR [rax],al
   14003c7d7:	add    BYTE PTR [rax],dh
   14003c7d9:	test   eax,0x14002
   14003c7de:	add    BYTE PTR [rax],al
   14003c7e0:	or     BYTE PTR [rsi],0x3
   14003c7e3:	rex add DWORD PTR [rax],eax
   14003c7e6:	add    BYTE PTR [rax],al
   14003c7e8:	(bad)  
   14003c7e9:	inc    DWORD PTR [rbx]
   14003c7eb:	rex add DWORD PTR [rax],eax
   14003c7ee:	add    BYTE PTR [rax],al
   14003c7f0:	rex mov ecx,0x14002
   14003c7f6:	add    BYTE PTR [rax],al
   14003c7f8:	shl    BYTE PTR [rbx+0x14002],0x0
   14003c7ff:	add    BYTE PTR [rsi],ah
   14003c801:	and    edi,DWORD PTR [rax+0x25]
   14003c804:	xor    BYTE PTR [rdx],dh
   14003c806:	pop    rax
   14003c807:	cmp    eax,DWORD PTR [rax]
   14003c809:	add    BYTE PTR [rax],al
   14003c80b:	add    BYTE PTR [rax],al
   14003c80d:	add    BYTE PTR [rax],al
   14003c80f:	add    BYTE PTR [rdx],ah
   14003c811:	add    eax,0x11993
   14003c816:	add    BYTE PTR [rax],al
   14003c818:	pushf  
   14003c819:	(bad)  
   14003c81a:	add    al,0x0
	...
   14003c824:	add    eax,DWORD PTR [rax]
   14003c826:	add    BYTE PTR [rax],al
   14003c828:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003c829:	(bad)  
   14003c82a:	add    al,0x0
   14003c82c:	and    BYTE PTR [rax],al
   14003c82e:	add    BYTE PTR [rax],al
   14003c830:	add    BYTE PTR [rax],al
   14003c832:	add    BYTE PTR [rax],al
   14003c834:	add    DWORD PTR [rax],eax
   14003c836:	add    BYTE PTR [rax],al
   14003c838:	cmp    al,0x21
   14003c83a:	pop    rbx
   14003c83b:	rex.XB
   14003c83c:	rex.R
   14003c83d:	push   r12
   14003c83f:	pop    r11
   14003c841:	and    eax,0x3e5d5d73
   14003c846:	or     al,BYTE PTR [rax]
   14003c848:	and    al,BYTE PTR [rip+0x61993]        # 0x14009e1e1
   14003c84e:	add    BYTE PTR [rax],al
   14003c850:	shl    BYTE PTR [rdi],1
   14003c852:	add    al,0x0
	...
   14003c85c:	or     eax,0x0
   14003c861:	cmp    BYTE PTR [rax+rax*1],al
   14003c864:	and    BYTE PTR [rax],al
   14003c866:	add    BYTE PTR [rax],al
   14003c868:	add    BYTE PTR [rax],al
   14003c86a:	add    BYTE PTR [rax],al
   14003c86c:	add    DWORD PTR [rax],eax
   14003c86e:	add    BYTE PTR [rax],al
   14003c870:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14003c877:	cmp    bh,BYTE PTR gs:[rdx]
   14003c87a:	outs   dx,DWORD PTR gs:[rsi]
   14003c87c:	data16 (bad) 
   14003c87e:	imul   esi,DWORD PTR [rax+riz*1+0x73],0x7465
   14003c886:	add    BYTE PTR [rax],al
   14003c888:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14003c88f:	cmp    bh,BYTE PTR gs:[rdx]
   14003c892:	data16 (bad) 
   14003c894:	imul   ebp,DWORD PTR [rdx+riz*2+0x69],0x65732074
   14003c89c:	je     0x14003c89e
   14003c89e:	add    BYTE PTR [rax],al
   14003c8a0:	imul   ebp,DWORD PTR [rdi+0x73],0x7361625f
   14003c8a7:	cmp    bh,BYTE PTR gs:[rdx]
   14003c8aa:	(bad)
   14003c8af:	je     0x14003c8d1
   14003c8b1:	jae    0x14003c918
   14003c8b3:	je     0x14003c8b5
   14003c8b5:	add    BYTE PTR [rax],al
   14003c8b7:	add    BYTE PTR [rdx],ah
   14003c8b9:	add    eax,0x11993
   14003c8be:	add    BYTE PTR [rax],al
   14003c8c0:	(bad)  
   14003c8c1:	rex.WRX add al,0x0
	...
   14003c8cc:	add    eax,DWORD PTR [rax]
   14003c8ce:	add    BYTE PTR [rax],al
   14003c8d0:	jl     0x14003c90a
   14003c8d2:	add    al,0x0
   14003c8d4:	and    BYTE PTR [rax],al
   14003c8d6:	add    BYTE PTR [rax],al
   14003c8d8:	add    BYTE PTR [rax],al
   14003c8da:	add    BYTE PTR [rax],al
   14003c8dc:	add    DWORD PTR [rax],eax
   14003c8de:	add    BYTE PTR [rax],al
   14003c8e0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004e279
   14003c8e6:	add    BYTE PTR [rax],al
   14003c8e8:	(bad)  
   14003c8e9:	rex.WRX add al,0x0
	...
   14003c8f4:	add    eax,DWORD PTR [rax]
   14003c8f6:	add    BYTE PTR [rax],al
   14003c8f8:	test   al,0x38
   14003c8fa:	add    al,0x0
   14003c8fc:	and    BYTE PTR [rax],al
   14003c8fe:	add    BYTE PTR [rax],al
   14003c900:	add    BYTE PTR [rax],al
   14003c902:	add    BYTE PTR [rax],al
   14003c904:	add    DWORD PTR [rax],eax
   14003c906:	add    BYTE PTR [rax],al
   14003c908:	and    al,BYTE PTR [rip+0x11993]        # 0x14004e2a1
   14003c90e:	add    BYTE PTR [rax],al
   14003c910:	cmp    al,0x31
   14003c912:	add    al,0x0
	...
   14003c91c:	add    eax,DWORD PTR [rax]
   14003c91e:	add    BYTE PTR [rax],al
   14003c920:	(bad)  
   14003c921:	cmp    BYTE PTR [rax+rax*1],al
   14003c924:	and    BYTE PTR [rax],al
   14003c926:	add    BYTE PTR [rax],al
   14003c928:	add    BYTE PTR [rax],al
   14003c92a:	add    BYTE PTR [rax],al
   14003c92c:	add    DWORD PTR [rax],eax
   14003c92e:	add    BYTE PTR [rax],al
   14003c930:	call   0x14143cd34
   14003c935:	add    BYTE PTR [rax],al
   14003c937:	add    BYTE PTR [rax+0x14002c0],ah
   14003c93d:	add    BYTE PTR [rax],al
   14003c93f:	add    al,ah
   14003c941:	int    0x2
   14003c943:	rex add DWORD PTR [rax],eax
   14003c946:	add    BYTE PTR [rax],al
   14003c948:	shl    BYTE PTR [rdi+0x14002],1
   14003c94e:	add    BYTE PTR [rax],al
   14003c950:	push   rax
   14003c951:	iret   
   14003c952:	add    al,BYTE PTR [rax+0x1]
   14003c955:	add    BYTE PTR [rax],al
   14003c957:	add    al,dl
   14003c959:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003c95a:	add    al,BYTE PTR [rax+0x1]
   14003c95d:	add    BYTE PTR [rax],al
   14003c95f:	add    BYTE PTR [rax-0x2d],ah
   14003c962:	add    al,BYTE PTR [rax+0x1]
   14003c965:	add    BYTE PTR [rax],al
   14003c967:	add    BYTE PTR [rax+0x14002d2],al
   14003c96d:	add    BYTE PTR [rax],al
   14003c96f:	add    BYTE PTR [rax],dl
   14003c971:	rol    BYTE PTR [rdx],1
   14003c973:	rex add DWORD PTR [rax],eax
   14003c976:	add    BYTE PTR [rax],al
   14003c978:	loopne 0x14003c94b
   14003c97a:	add    al,BYTE PTR [rax+0x1]
   14003c97d:	add    BYTE PTR [rax],al
   14003c97f:	add    BYTE PTR [rdx],ah
   14003c981:	add    eax,0x21993
   14003c986:	add    BYTE PTR [rax],al
   14003c988:	sub    BYTE PTR [rcx],bh
   14003c98a:	add    al,0x0
	...
   14003c994:	add    al,0x0
   14003c996:	add    BYTE PTR [rax],al
   14003c998:	cmp    BYTE PTR [rcx],bh
   14003c99a:	add    al,0x0
   14003c99c:	and    BYTE PTR [rax],al
   14003c99e:	add    BYTE PTR [rax],al
   14003c9a0:	add    BYTE PTR [rax],al
   14003c9a2:	add    BYTE PTR [rax],al
   14003c9a4:	add    DWORD PTR [rax],eax
   14003c9a6:	add    BYTE PTR [rax],al
   14003c9a8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005e341
   14003c9ae:	add    BYTE PTR [rax],al
   14003c9b0:	ins    BYTE PTR es:[rdi],dx
   14003c9b1:	cmp    DWORD PTR [rax+rax*1],eax
	...
   14003c9bc:	add    al,0x0
   14003c9be:	add    BYTE PTR [rax],al
   14003c9c0:	jl     0x14003c9fb
   14003c9c2:	add    al,0x0
   14003c9c4:	and    BYTE PTR [rax],al
   14003c9c6:	add    BYTE PTR [rax],al
   14003c9c8:	add    BYTE PTR [rax],al
   14003c9ca:	add    BYTE PTR [rax],al
   14003c9cc:	add    DWORD PTR [rax],eax
   14003c9ce:	add    BYTE PTR [rax],al
   14003c9d0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004e369
   14003c9d6:	add    BYTE PTR [rax],al
   14003c9d8:	mov    al,0x39
   14003c9da:	add    al,0x0
	...
   14003c9e4:	add    eax,DWORD PTR [rax]
   14003c9e6:	add    BYTE PTR [rax],al
   14003c9e8:	mov    eax,0x20000439
   14003c9ed:	add    BYTE PTR [rax],al
   14003c9ef:	add    BYTE PTR [rax],al
   14003c9f1:	add    BYTE PTR [rax],al
   14003c9f3:	add    BYTE PTR [rcx],al
   14003c9f5:	add    BYTE PTR [rax],al
   14003c9f7:	add    BYTE PTR [rdx],ah
   14003c9f9:	add    eax,0x21993
   14003c9fe:	add    BYTE PTR [rax],al
   14003ca00:	in     al,dx
   14003ca01:	cmp    DWORD PTR [rax+rax*1],eax
	...
   14003ca0c:	add    eax,0xfc000000
   14003ca11:	cmp    DWORD PTR [rax+rax*1],eax
   14003ca14:	sub    BYTE PTR [rax],al
   14003ca16:	add    BYTE PTR [rax],al
   14003ca18:	add    BYTE PTR [rax],al
   14003ca1a:	add    BYTE PTR [rax],al
   14003ca1c:	add    DWORD PTR [rax],eax
   14003ca1e:	add    BYTE PTR [rax],al
   14003ca20:	cmp    eax,0x27
   14003ca25:	add    BYTE PTR [rax],al
   14003ca27:	add    BYTE PTR [rip+0x25273d73],ah        # 0x1652b07a0
   14003ca2d:	jae    0x14003ca56
   14003ca2f:	add    BYTE PTR [rdx],ah
   14003ca31:	add    BYTE PTR [rax],al
   14003ca33:	add    BYTE PTR [rip+0x25000022],bh        # 0x16503ca5b
   14003ca39:	jae    0x14003ca78
   14003ca3b:	and    ah,BYTE PTR [rip+0x22002273]        # 0x16203ecb4
   14003ca41:	add    eax,0x21993
   14003ca46:	add    BYTE PTR [rax],al
   14003ca48:	rex.WR cmp r8b,BYTE PTR [rax+rax*1]
	...
   14003ca54:	add    eax,0x5c000000
   14003ca59:	cmp    al,BYTE PTR [rax+rax*1]
   14003ca5c:	and    BYTE PTR [rax],al
   14003ca5e:	add    BYTE PTR [rax],al
   14003ca60:	add    BYTE PTR [rax],al
   14003ca62:	add    BYTE PTR [rax],al
   14003ca64:	add    DWORD PTR [rax],eax
   14003ca66:	add    BYTE PTR [rax],al
   14003ca68:	(bad)  
   14003ca69:	add    BYTE PTR ds:[rax],al
   14003ca6c:	add    BYTE PTR [rax],al
   14003ca6e:	add    BYTE PTR [rax],al
   14003ca70:	jae    0x14003cae6
   14003ca72:	(bad)  
   14003ca73:	outs   dx,BYTE PTR ds:[rsi]
   14003ca74:	fs (bad) 
   14003ca76:	ins    BYTE PTR es:[rdi],dx
   14003ca77:	outs   dx,DWORD PTR ds:[rsi]
   14003ca78:	outs   dx,BYTE PTR ds:[rsi]
   14003ca79:	gs cmp eax,0x22
   14003ca7f:	add    BYTE PTR [rbx+0x74],dh
   14003ca82:	(bad)  
   14003ca83:	outs   dx,BYTE PTR ds:[rsi]
   14003ca84:	fs (bad) 
   14003ca86:	ins    BYTE PTR es:[rdi],dx
   14003ca87:	outs   dx,DWORD PTR ds:[rsi]
   14003ca88:	outs   dx,BYTE PTR ds:[rsi]
   14003ca89:	gs cmp eax,0x22732522
   14003ca8f:	and    BYTE PTR [rax],al
   14003ca91:	add    BYTE PTR [rax],al
   14003ca93:	add    BYTE PTR [rax],al
   14003ca95:	add    BYTE PTR [rax],al
   14003ca97:	add    BYTE PTR [rbp+0x6e],ah
   14003ca9a:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003ca9d:	imul   ebp,DWORD PTR [rsi+0x67],0x223d
   14003caa4:	add    BYTE PTR [rax],al
   14003caa6:	add    BYTE PTR [rax],al
   14003caa8:	outs   dx,BYTE PTR gs:[rsi]
   14003caaa:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003caad:	imul   ebp,DWORD PTR [rsi+0x67],0x7325223d
   14003cab4:	and    ah,BYTE PTR [rax]
   14003cab6:	add    BYTE PTR [rax],al
   14003cab8:	and    ah,BYTE PTR [rax]
   14003caba:	add    BYTE PTR [rax],al
   14003cabc:	add    BYTE PTR [rax],al
   14003cabe:	add    BYTE PTR [rax],al
   14003cac0:	jbe    0x14003cb27
   14003cac2:	jb     0x14003cb37
   14003cac4:	imul   ebp,DWORD PTR [rdi+0x6e],0x223d
   14003cacb:	add    BYTE PTR [rax],al
   14003cacd:	add    BYTE PTR [rax],al
   14003cacf:	add    BYTE PTR [rsi+0x65],dh
   14003cad2:	jb     0x14003cb47
   14003cad4:	imul   ebp,DWORD PTR [rdi+0x6e],0x7325223d
   14003cadb:	and    ah,BYTE PTR [rax]
   14003cadd:	add    BYTE PTR [rax],al
   14003cadf:	add    BYTE PTR [rdi+rdi*1],bh
   14003cae2:	js     0x14003cb51
   14003cae4:	ins    BYTE PTR es:[rdi],dx
   14003cae5:	and    BYTE PTR [rax],al
   14003cae7:	add    BYTE PTR [rdx],ah
   14003cae9:	add    eax,0x41993
   14003caee:	add    BYTE PTR [rax],al
   14003caf0:	clc    
   14003caf1:	cmp    al,BYTE PTR [rax+rax*1]
	...
   14003cafc:	(bad)  
   14003cafd:	add    BYTE PTR [rax],al
   14003caff:	add    BYTE PTR [rax],bl
   14003cb01:	cmp    eax,DWORD PTR [rax+rax*1]
   14003cb04:	and    BYTE PTR [rax],al
   14003cb06:	add    BYTE PTR [rax],al
   14003cb08:	add    BYTE PTR [rax],al
   14003cb0a:	add    BYTE PTR [rax],al
   14003cb0c:	add    DWORD PTR [rax],eax
   14003cb0e:	add    BYTE PTR [rax],al
   14003cb10:	cmp    al,0x2f
   14003cb12:	add    BYTE PTR [rax],al
   14003cb14:	add    BYTE PTR [rax],al
   14003cb16:	add    BYTE PTR [rax],al
   14003cb18:	and    al,BYTE PTR [rip+0x21993]        # 0x14005e4b1
   14003cb1e:	add    BYTE PTR [rax],al
   14003cb20:	add    al,0x3c
   14003cb22:	add    al,0x0
	...
   14003cb2c:	add    eax,0x14000000
   14003cb31:	cmp    al,0x4
   14003cb33:	add    BYTE PTR [rax],ah
   14003cb35:	add    BYTE PTR [rax],al
   14003cb37:	add    BYTE PTR [rax],al
   14003cb39:	add    BYTE PTR [rax],al
   14003cb3b:	add    BYTE PTR [rcx],al
   14003cb3d:	add    BYTE PTR [rax],al
   14003cb3f:	add    BYTE PTR [rbp+0x5d],bl
   14003cb42:	add    BYTE PTR ds:[rax],al
   14003cb45:	add    BYTE PTR [rax],al
   14003cb47:	add    BYTE PTR [rcx+riz*1],bh
   14003cb4a:	pop    rbx
   14003cb4b:	rex.XB
   14003cb4c:	rex.R
   14003cb4d:	push   r12
   14003cb4f:	pop    r11
   14003cb51:	add    BYTE PTR [rax],al
   14003cb53:	add    BYTE PTR [rip+0x3c003e2d],ch        # 0x17c040986
   14003cb59:	and    DWORD PTR [rip+0x2d],ebp        # 0x14003cb8c
   14003cb5f:	add    BYTE PTR [rdx],ah
   14003cb61:	add    eax,0x11993
   14003cb66:	add    BYTE PTR [rax],al
   14003cb68:	mov    al,0x39
   14003cb6a:	add    al,0x0
	...
   14003cb74:	add    eax,DWORD PTR [rax]
   14003cb76:	add    BYTE PTR [rax],al
   14003cb78:	or     BYTE PTR [rip+0x200004],bh        # 0x14023cb82
   14003cb7e:	add    BYTE PTR [rax],al
   14003cb80:	add    BYTE PTR [rax],al
   14003cb82:	add    BYTE PTR [rax],al
   14003cb84:	add    DWORD PTR [rax],eax
   14003cb86:	add    BYTE PTR [rax],al
   14003cb88:	es (bad) 
   14003cb8a:	jo     0x14003cbfb
   14003cb8c:	jae    0x14003cbc9
   14003cb8e:	add    BYTE PTR [rax],al
   14003cb90:	es jno 0x14003cc08
   14003cb93:	outs   dx,DWORD PTR ds:[rsi]
   14003cb94:	je     0x14003cbd1
   14003cb96:	add    BYTE PTR [rax],al
   14003cb98:	es addr32 je 0x14003cbd7
   14003cb9c:	add    BYTE PTR [rax],al
   14003cb9e:	add    BYTE PTR [rax],al
   14003cba0:	es ins BYTE PTR es:[rdi],dx
   14003cba2:	je     0x14003cbdf
   14003cba4:	add    BYTE PTR [rax],al
   14003cba6:	add    BYTE PTR [rax],al
   14003cba8:	es (bad) 
   14003cbaa:	ins    DWORD PTR es:[rdi],dx
   14003cbab:	jo     0x14003cbe8
   14003cbad:	add    BYTE PTR [rax],al
   14003cbaf:	add    BYTE PTR [rcx],al
   14003cbb1:	add    BYTE PTR [rax],al
   14003cbb3:	add    BYTE PTR [rcx],al
   14003cbb5:	add    BYTE PTR [rax],al
   14003cbb7:	add    BYTE PTR [rcx],al
   14003cbb9:	add    BYTE PTR [rax],al
   14003cbbb:	add    BYTE PTR [rcx],al
   14003cbbd:	add    BYTE PTR [rax],al
   14003cbbf:	add    BYTE PTR [rcx],al
   14003cbc1:	add    BYTE PTR [rax],al
   14003cbc3:	add    BYTE PTR [rcx],al
   14003cbc5:	add    BYTE PTR [rax],al
   14003cbc7:	add    BYTE PTR [rcx],al
   14003cbc9:	add    BYTE PTR [rax],al
   14003cbcb:	add    BYTE PTR [rcx],al
   14003cbcd:	add    BYTE PTR [rax],al
   14003cbcf:	add    BYTE PTR [rcx],al
   14003cbd1:	add    BYTE PTR [rax],al
   14003cbd3:	add    BYTE PTR [rcx],al
   14003cbd5:	add    BYTE PTR [rax],al
   14003cbd7:	add    BYTE PTR [rcx],al
   14003cbd9:	add    BYTE PTR [rax],al
   14003cbdb:	add    BYTE PTR [rcx],al
   14003cbdd:	add    BYTE PTR [rax],al
   14003cbdf:	add    BYTE PTR [rcx],al
   14003cbe1:	add    BYTE PTR [rax],al
   14003cbe3:	add    BYTE PTR [rcx],al
   14003cbe5:	add    BYTE PTR [rax],al
   14003cbe7:	add    BYTE PTR [rcx],al
   14003cbe9:	add    BYTE PTR [rax],al
   14003cbeb:	add    BYTE PTR [rcx],al
   14003cbed:	add    BYTE PTR [rax],al
   14003cbef:	add    BYTE PTR [rcx],al
   14003cbf1:	add    BYTE PTR [rax],al
   14003cbf3:	add    BYTE PTR [rcx],al
   14003cbf5:	add    BYTE PTR [rax],al
   14003cbf7:	add    BYTE PTR [rcx],al
   14003cbf9:	add    BYTE PTR [rax],al
   14003cbfb:	add    BYTE PTR [rcx],al
   14003cbfd:	add    BYTE PTR [rax],al
   14003cbff:	add    BYTE PTR [rcx],al
   14003cc01:	add    BYTE PTR [rax],al
   14003cc03:	add    BYTE PTR [rcx],al
   14003cc05:	add    BYTE PTR [rax],al
   14003cc07:	add    BYTE PTR [rcx],al
   14003cc09:	add    BYTE PTR [rax],al
   14003cc0b:	add    BYTE PTR [rcx],al
   14003cc0d:	add    BYTE PTR [rax],al
   14003cc0f:	add    BYTE PTR [rcx],al
   14003cc11:	add    BYTE PTR [rax],al
   14003cc13:	add    BYTE PTR [rcx],al
   14003cc15:	add    BYTE PTR [rax],al
   14003cc17:	add    BYTE PTR [rcx],al
   14003cc19:	add    BYTE PTR [rax],al
   14003cc1b:	add    BYTE PTR [rcx],al
   14003cc1d:	add    BYTE PTR [rax],al
   14003cc1f:	add    BYTE PTR [rcx],al
   14003cc21:	add    BYTE PTR [rax],al
   14003cc23:	add    BYTE PTR [rcx],al
   14003cc25:	add    BYTE PTR [rax],al
   14003cc27:	add    BYTE PTR [rcx],al
   14003cc29:	add    BYTE PTR [rax],al
   14003cc2b:	add    BYTE PTR [rcx],al
   14003cc2d:	add    BYTE PTR [rax],al
   14003cc2f:	add    BYTE PTR [rcx],al
   14003cc31:	add    BYTE PTR [rax],al
   14003cc33:	add    BYTE PTR [rcx],al
   14003cc35:	add    BYTE PTR [rax],al
   14003cc37:	add    BYTE PTR [rcx],al
   14003cc39:	add    BYTE PTR [rax],al
   14003cc3b:	add    BYTE PTR [rcx],al
   14003cc3d:	add    BYTE PTR [rax],al
   14003cc3f:	add    BYTE PTR [rcx],al
   14003cc41:	add    BYTE PTR [rax],al
   14003cc43:	add    BYTE PTR [rcx],al
   14003cc45:	add    BYTE PTR [rax],al
   14003cc47:	add    BYTE PTR [rcx],al
   14003cc49:	add    BYTE PTR [rax],al
   14003cc4b:	add    BYTE PTR [rcx],al
   14003cc4d:	add    BYTE PTR [rax],al
   14003cc4f:	add    BYTE PTR [rcx],al
   14003cc51:	add    BYTE PTR [rax],al
   14003cc53:	add    BYTE PTR [rcx],al
   14003cc55:	add    BYTE PTR [rax],al
   14003cc57:	add    BYTE PTR [rcx],al
   14003cc59:	add    BYTE PTR [rax],al
   14003cc5b:	add    BYTE PTR [rcx],al
   14003cc5d:	add    BYTE PTR [rax],al
   14003cc5f:	add    BYTE PTR [rcx],al
   14003cc61:	add    BYTE PTR [rax],al
   14003cc63:	add    BYTE PTR [rcx],al
   14003cc65:	add    BYTE PTR [rax],al
   14003cc67:	add    BYTE PTR [rcx],al
   14003cc69:	add    BYTE PTR [rax],al
   14003cc6b:	add    BYTE PTR [rcx],al
   14003cc6d:	add    BYTE PTR [rax],al
   14003cc6f:	add    BYTE PTR [rcx],al
   14003cc71:	add    BYTE PTR [rax],al
   14003cc73:	add    BYTE PTR [rcx],al
   14003cc75:	add    BYTE PTR [rax],al
   14003cc77:	add    BYTE PTR [rcx],al
   14003cc79:	add    BYTE PTR [rax],al
   14003cc7b:	add    BYTE PTR [rcx],al
   14003cc7d:	add    BYTE PTR [rax],al
   14003cc7f:	add    BYTE PTR [rcx],al
   14003cc81:	add    BYTE PTR [rax],al
   14003cc83:	add    BYTE PTR [rcx],al
   14003cc85:	add    BYTE PTR [rax],al
   14003cc87:	add    BYTE PTR [rcx],al
   14003cc89:	add    BYTE PTR [rax],al
   14003cc8b:	add    BYTE PTR [rcx],al
   14003cc8d:	add    BYTE PTR [rax],al
   14003cc8f:	add    BYTE PTR [rcx],al
   14003cc91:	add    BYTE PTR [rax],al
   14003cc93:	add    BYTE PTR [rcx],al
   14003cc95:	add    BYTE PTR [rax],al
   14003cc97:	add    BYTE PTR [rcx],al
   14003cc99:	add    BYTE PTR [rax],al
   14003cc9b:	add    BYTE PTR [rcx],al
   14003cc9d:	add    BYTE PTR [rax],al
   14003cc9f:	add    BYTE PTR [rcx],al
   14003cca1:	add    BYTE PTR [rax],al
   14003cca3:	add    BYTE PTR [rcx],al
   14003cca5:	add    BYTE PTR [rax],al
   14003cca7:	add    BYTE PTR [rcx],al
   14003cca9:	add    BYTE PTR [rax],al
   14003ccab:	add    BYTE PTR [rcx],al
   14003ccad:	add    BYTE PTR [rax],al
   14003ccaf:	add    BYTE PTR [rcx],al
   14003ccb1:	add    BYTE PTR [rax],al
   14003ccb3:	add    BYTE PTR [rcx],al
   14003ccb5:	add    BYTE PTR [rax],al
   14003ccb7:	add    BYTE PTR [rcx],al
   14003ccb9:	add    BYTE PTR [rax],al
   14003ccbb:	add    BYTE PTR [rcx],al
   14003ccbd:	add    BYTE PTR [rax],al
   14003ccbf:	add    BYTE PTR [rcx],al
   14003ccc1:	add    BYTE PTR [rax],al
   14003ccc3:	add    BYTE PTR [rcx],al
   14003ccc5:	add    BYTE PTR [rax],al
   14003ccc7:	add    BYTE PTR [rcx],al
   14003ccc9:	add    BYTE PTR [rax],al
   14003cccb:	add    BYTE PTR [rcx],al
   14003cccd:	add    BYTE PTR [rax],al
   14003cccf:	add    BYTE PTR [rcx],al
   14003ccd1:	add    BYTE PTR [rax],al
   14003ccd3:	add    BYTE PTR [rcx],al
   14003ccd5:	add    BYTE PTR [rax],al
   14003ccd7:	add    BYTE PTR [rcx],al
   14003ccd9:	add    BYTE PTR [rax],al
   14003ccdb:	add    BYTE PTR [rcx],al
   14003ccdd:	add    BYTE PTR [rax],al
   14003ccdf:	add    BYTE PTR [rcx],al
   14003cce1:	add    BYTE PTR [rax],al
   14003cce3:	add    BYTE PTR [rcx],al
   14003cce5:	add    BYTE PTR [rax],al
   14003cce7:	add    BYTE PTR [rcx],al
   14003cce9:	add    BYTE PTR [rax],al
   14003cceb:	add    BYTE PTR [rcx],al
   14003cced:	add    BYTE PTR [rax],al
   14003ccef:	add    BYTE PTR [rcx],al
   14003ccf1:	add    BYTE PTR [rax],al
   14003ccf3:	add    BYTE PTR [rcx],al
   14003ccf5:	add    BYTE PTR [rax],al
   14003ccf7:	add    BYTE PTR [rcx],al
   14003ccf9:	add    BYTE PTR [rax],al
   14003ccfb:	add    BYTE PTR [rcx],al
   14003ccfd:	add    BYTE PTR [rax],al
   14003ccff:	add    BYTE PTR [rcx],al
   14003cd01:	add    BYTE PTR [rax],al
   14003cd03:	add    BYTE PTR [rcx],al
   14003cd05:	add    BYTE PTR [rax],al
   14003cd07:	add    BYTE PTR [rcx],al
   14003cd09:	add    BYTE PTR [rax],al
   14003cd0b:	add    BYTE PTR [rcx],al
   14003cd0d:	add    BYTE PTR [rax],al
   14003cd0f:	add    BYTE PTR [rcx],al
   14003cd11:	add    BYTE PTR [rax],al
   14003cd13:	add    BYTE PTR [rcx],al
   14003cd15:	add    BYTE PTR [rax],al
   14003cd17:	add    BYTE PTR [rcx],al
   14003cd19:	add    BYTE PTR [rax],al
   14003cd1b:	add    BYTE PTR [rcx],al
   14003cd1d:	add    BYTE PTR [rax],al
   14003cd1f:	add    BYTE PTR [rcx],al
   14003cd21:	add    BYTE PTR [rax],al
   14003cd23:	add    BYTE PTR [rcx],al
   14003cd25:	add    BYTE PTR [rax],al
   14003cd27:	add    BYTE PTR [rcx],al
   14003cd29:	add    BYTE PTR [rax],al
   14003cd2b:	add    BYTE PTR [rcx],al
   14003cd2d:	add    BYTE PTR [rax],al
   14003cd2f:	add    BYTE PTR [rcx],al
   14003cd31:	add    BYTE PTR [rax],al
   14003cd33:	add    BYTE PTR [rcx],al
   14003cd35:	add    BYTE PTR [rax],al
   14003cd37:	add    BYTE PTR [rcx],al
   14003cd39:	add    BYTE PTR [rax],al
   14003cd3b:	add    BYTE PTR [rcx],al
   14003cd3d:	add    BYTE PTR [rax],al
   14003cd3f:	add    BYTE PTR [rcx],al
   14003cd41:	add    BYTE PTR [rax],al
   14003cd43:	add    BYTE PTR [rcx],al
   14003cd45:	add    BYTE PTR [rax],al
   14003cd47:	add    BYTE PTR [rcx],al
   14003cd49:	add    BYTE PTR [rax],al
   14003cd4b:	add    BYTE PTR [rcx],al
   14003cd4d:	add    BYTE PTR [rax],al
   14003cd4f:	add    BYTE PTR [rcx],al
   14003cd51:	add    BYTE PTR [rax],al
   14003cd53:	add    BYTE PTR [rcx],al
   14003cd55:	add    BYTE PTR [rax],al
   14003cd57:	add    BYTE PTR [rcx],al
   14003cd59:	add    BYTE PTR [rax],al
   14003cd5b:	add    BYTE PTR [rcx],al
   14003cd5d:	add    BYTE PTR [rax],al
   14003cd5f:	add    BYTE PTR [rcx],al
   14003cd61:	add    BYTE PTR [rax],al
   14003cd63:	add    BYTE PTR [rcx],al
   14003cd65:	add    BYTE PTR [rax],al
   14003cd67:	add    BYTE PTR [rcx],al
   14003cd69:	add    BYTE PTR [rax],al
   14003cd6b:	add    BYTE PTR [rcx],al
   14003cd6d:	add    BYTE PTR [rax],al
   14003cd6f:	add    BYTE PTR [rcx],al
   14003cd71:	add    BYTE PTR [rax],al
   14003cd73:	add    BYTE PTR [rcx],al
   14003cd75:	add    BYTE PTR [rax],al
   14003cd77:	add    BYTE PTR [rcx],al
   14003cd79:	add    BYTE PTR [rax],al
   14003cd7b:	add    BYTE PTR [rcx],al
   14003cd7d:	add    BYTE PTR [rax],al
   14003cd7f:	add    BYTE PTR [rcx],al
   14003cd81:	add    BYTE PTR [rax],al
   14003cd83:	add    BYTE PTR [rcx],al
   14003cd85:	add    BYTE PTR [rax],al
   14003cd87:	add    BYTE PTR [rcx],al
   14003cd89:	add    BYTE PTR [rax],al
   14003cd8b:	add    BYTE PTR [rcx],al
   14003cd8d:	add    BYTE PTR [rax],al
   14003cd8f:	add    BYTE PTR [rcx],al
   14003cd91:	add    BYTE PTR [rax],al
   14003cd93:	add    BYTE PTR [rcx],al
   14003cd95:	add    BYTE PTR [rax],al
   14003cd97:	add    BYTE PTR [rcx],al
   14003cd99:	add    BYTE PTR [rax],al
   14003cd9b:	add    BYTE PTR [rcx],al
   14003cd9d:	add    BYTE PTR [rax],al
   14003cd9f:	add    BYTE PTR [rcx],al
   14003cda1:	add    BYTE PTR [rax],al
   14003cda3:	add    BYTE PTR [rcx],al
   14003cda5:	add    BYTE PTR [rax],al
   14003cda7:	add    BYTE PTR [rcx],al
   14003cda9:	add    BYTE PTR [rax],al
   14003cdab:	add    BYTE PTR [rcx],al
   14003cdad:	add    BYTE PTR [rax],al
   14003cdaf:	add    BYTE PTR [rcx],al
   14003cdb1:	add    BYTE PTR [rax],al
   14003cdb3:	add    BYTE PTR [rcx],al
   14003cdb5:	add    BYTE PTR [rax],al
   14003cdb7:	add    BYTE PTR [rcx],al
   14003cdb9:	add    BYTE PTR [rax],al
   14003cdbb:	add    BYTE PTR [rcx],al
   14003cdbd:	add    BYTE PTR [rax],al
   14003cdbf:	add    BYTE PTR [rcx],al
   14003cdc1:	add    BYTE PTR [rax],al
   14003cdc3:	add    BYTE PTR [rcx],al
   14003cdc5:	add    BYTE PTR [rax],al
   14003cdc7:	add    BYTE PTR [rcx],al
   14003cdc9:	add    BYTE PTR [rax],al
   14003cdcb:	add    BYTE PTR [rcx],al
   14003cdcd:	add    BYTE PTR [rax],al
   14003cdcf:	add    BYTE PTR [rcx],al
   14003cdd1:	add    BYTE PTR [rax],al
   14003cdd3:	add    BYTE PTR [rcx],al
   14003cdd5:	add    BYTE PTR [rax],al
   14003cdd7:	add    BYTE PTR [rcx],al
   14003cdd9:	add    BYTE PTR [rax],al
   14003cddb:	add    BYTE PTR [rcx],al
   14003cddd:	add    BYTE PTR [rax],al
   14003cddf:	add    BYTE PTR [rcx],al
   14003cde1:	add    BYTE PTR [rax],al
   14003cde3:	add    BYTE PTR [rcx],al
   14003cde5:	add    BYTE PTR [rax],al
   14003cde7:	add    BYTE PTR [rcx],al
   14003cde9:	add    BYTE PTR [rax],al
   14003cdeb:	add    BYTE PTR [rcx],al
   14003cded:	add    BYTE PTR [rax],al
   14003cdef:	add    BYTE PTR [rcx],al
   14003cdf1:	add    BYTE PTR [rax],al
   14003cdf3:	add    BYTE PTR [rcx],al
   14003cdf5:	add    BYTE PTR [rax],al
   14003cdf7:	add    BYTE PTR [rcx],al
   14003cdf9:	add    BYTE PTR [rax],al
   14003cdfb:	add    BYTE PTR [rcx],al
   14003cdfd:	add    BYTE PTR [rax],al
   14003cdff:	add    BYTE PTR [rcx],al
   14003ce01:	add    BYTE PTR [rax],al
   14003ce03:	add    BYTE PTR [rcx],al
   14003ce05:	add    BYTE PTR [rax],al
   14003ce07:	add    BYTE PTR [rcx],al
   14003ce09:	add    BYTE PTR [rax],al
   14003ce0b:	add    BYTE PTR [rcx],al
   14003ce0d:	add    BYTE PTR [rax],al
   14003ce0f:	add    BYTE PTR [rcx],al
   14003ce11:	add    BYTE PTR [rax],al
   14003ce13:	add    BYTE PTR [rcx],al
   14003ce15:	add    BYTE PTR [rax],al
   14003ce17:	add    BYTE PTR [rcx],al
   14003ce19:	add    BYTE PTR [rax],al
   14003ce1b:	add    BYTE PTR [rcx],al
   14003ce1d:	add    BYTE PTR [rax],al
   14003ce1f:	add    BYTE PTR [rcx],al
   14003ce21:	add    BYTE PTR [rax],al
   14003ce23:	add    BYTE PTR [rcx],al
   14003ce25:	add    BYTE PTR [rax],al
   14003ce27:	add    BYTE PTR [rcx],al
   14003ce29:	add    BYTE PTR [rax],al
   14003ce2b:	add    BYTE PTR [rcx],al
   14003ce2d:	add    BYTE PTR [rax],al
   14003ce2f:	add    BYTE PTR [rcx],al
   14003ce31:	add    BYTE PTR [rax],al
   14003ce33:	add    BYTE PTR [rcx],al
   14003ce35:	add    BYTE PTR [rax],al
   14003ce37:	add    BYTE PTR [rcx],al
   14003ce39:	add    BYTE PTR [rax],al
   14003ce3b:	add    BYTE PTR [rcx],al
   14003ce3d:	add    BYTE PTR [rax],al
   14003ce3f:	add    BYTE PTR [rcx],al
   14003ce41:	add    BYTE PTR [rax],al
   14003ce43:	add    BYTE PTR [rcx],al
   14003ce45:	add    BYTE PTR [rax],al
   14003ce47:	add    BYTE PTR [rcx],al
   14003ce49:	add    BYTE PTR [rax],al
   14003ce4b:	add    BYTE PTR [rcx],al
   14003ce4d:	add    BYTE PTR [rax],al
   14003ce4f:	add    BYTE PTR [rcx],al
   14003ce51:	add    BYTE PTR [rax],al
   14003ce53:	add    BYTE PTR [rcx],al
   14003ce55:	add    BYTE PTR [rax],al
   14003ce57:	add    BYTE PTR [rcx],al
   14003ce59:	add    BYTE PTR [rax],al
   14003ce5b:	add    BYTE PTR [rcx],al
   14003ce5d:	add    BYTE PTR [rax],al
   14003ce5f:	add    BYTE PTR [rcx],al
   14003ce61:	add    BYTE PTR [rax],al
   14003ce63:	add    BYTE PTR [rcx],al
   14003ce65:	add    BYTE PTR [rax],al
   14003ce67:	add    BYTE PTR [rcx],al
   14003ce69:	add    BYTE PTR [rax],al
   14003ce6b:	add    BYTE PTR [rcx],al
   14003ce6d:	add    BYTE PTR [rax],al
   14003ce6f:	add    BYTE PTR [rcx],al
   14003ce71:	add    BYTE PTR [rax],al
   14003ce73:	add    BYTE PTR [rcx],al
   14003ce75:	add    BYTE PTR [rax],al
   14003ce77:	add    BYTE PTR [rcx],al
   14003ce79:	add    BYTE PTR [rax],al
   14003ce7b:	add    BYTE PTR [rcx],al
   14003ce7d:	add    BYTE PTR [rax],al
   14003ce7f:	add    BYTE PTR [rcx],al
   14003ce81:	add    BYTE PTR [rax],al
   14003ce83:	add    BYTE PTR [rcx],al
   14003ce85:	add    BYTE PTR [rax],al
   14003ce87:	add    BYTE PTR [rcx],al
   14003ce89:	add    BYTE PTR [rax],al
   14003ce8b:	add    BYTE PTR [rcx],al
   14003ce8d:	add    BYTE PTR [rax],al
   14003ce8f:	add    BYTE PTR [rcx],al
   14003ce91:	add    BYTE PTR [rax],al
   14003ce93:	add    BYTE PTR [rcx],al
   14003ce95:	add    BYTE PTR [rax],al
   14003ce97:	add    BYTE PTR [rcx],al
   14003ce99:	add    BYTE PTR [rax],al
   14003ce9b:	add    BYTE PTR [rcx],al
   14003ce9d:	add    BYTE PTR [rax],al
   14003ce9f:	add    BYTE PTR [rcx],al
   14003cea1:	add    BYTE PTR [rax],al
   14003cea3:	add    BYTE PTR [rcx],al
   14003cea5:	add    BYTE PTR [rax],al
   14003cea7:	add    BYTE PTR [rcx],al
   14003cea9:	add    BYTE PTR [rax],al
   14003ceab:	add    BYTE PTR [rcx],al
   14003cead:	add    BYTE PTR [rax],al
   14003ceaf:	add    BYTE PTR [rcx],al
   14003ceb1:	add    BYTE PTR [rax],al
   14003ceb3:	add    BYTE PTR [rcx],al
   14003ceb5:	add    BYTE PTR [rax],al
   14003ceb7:	add    BYTE PTR [rdx],al
   14003ceb9:	add    BYTE PTR [rax],al
   14003cebb:	add    BYTE PTR [rdx],al
   14003cebd:	add    BYTE PTR [rax],al
   14003cebf:	add    BYTE PTR [rdx],al
   14003cec1:	add    BYTE PTR [rax],al
   14003cec3:	add    BYTE PTR [rdx],al
   14003cec5:	add    BYTE PTR [rax],al
   14003cec7:	add    BYTE PTR [rdx],al
   14003cec9:	add    BYTE PTR [rax],al
   14003cecb:	add    BYTE PTR [rdx],al
   14003cecd:	add    BYTE PTR [rax],al
   14003cecf:	add    BYTE PTR [rdx],al
   14003ced1:	add    BYTE PTR [rax],al
   14003ced3:	add    BYTE PTR [rdx],al
   14003ced5:	add    BYTE PTR [rax],al
   14003ced7:	add    BYTE PTR [rdx],al
   14003ced9:	add    BYTE PTR [rax],al
   14003cedb:	add    BYTE PTR [rdx],al
   14003cedd:	add    BYTE PTR [rax],al
   14003cedf:	add    BYTE PTR [rdx],al
   14003cee1:	add    BYTE PTR [rax],al
   14003cee3:	add    BYTE PTR [rdx],al
   14003cee5:	add    BYTE PTR [rax],al
   14003cee7:	add    BYTE PTR [rdx],al
   14003cee9:	add    BYTE PTR [rax],al
   14003ceeb:	add    BYTE PTR [rdx],al
   14003ceed:	add    BYTE PTR [rax],al
   14003ceef:	add    BYTE PTR [rdx],al
   14003cef1:	add    BYTE PTR [rax],al
   14003cef3:	add    BYTE PTR [rdx],al
   14003cef5:	add    BYTE PTR [rax],al
   14003cef7:	add    BYTE PTR [rdx],al
   14003cef9:	add    BYTE PTR [rax],al
   14003cefb:	add    BYTE PTR [rdx],al
   14003cefd:	add    BYTE PTR [rax],al
   14003ceff:	add    BYTE PTR [rdx],al
   14003cf01:	add    BYTE PTR [rax],al
   14003cf03:	add    BYTE PTR [rdx],al
   14003cf05:	add    BYTE PTR [rax],al
   14003cf07:	add    BYTE PTR [rdx],al
   14003cf09:	add    BYTE PTR [rax],al
   14003cf0b:	add    BYTE PTR [rdx],al
   14003cf0d:	add    BYTE PTR [rax],al
   14003cf0f:	add    BYTE PTR [rdx],al
   14003cf11:	add    BYTE PTR [rax],al
   14003cf13:	add    BYTE PTR [rdx],al
   14003cf15:	add    BYTE PTR [rax],al
   14003cf17:	add    BYTE PTR [rdx],al
   14003cf19:	add    BYTE PTR [rax],al
   14003cf1b:	add    BYTE PTR [rdx],al
   14003cf1d:	add    BYTE PTR [rax],al
   14003cf1f:	add    BYTE PTR [rdx],al
   14003cf21:	add    BYTE PTR [rax],al
   14003cf23:	add    BYTE PTR [rdx],al
   14003cf25:	add    BYTE PTR [rax],al
   14003cf27:	add    BYTE PTR [rdx],al
   14003cf29:	add    BYTE PTR [rax],al
   14003cf2b:	add    BYTE PTR [rdx],al
   14003cf2d:	add    BYTE PTR [rax],al
   14003cf2f:	add    BYTE PTR [rbx],al
   14003cf31:	add    BYTE PTR [rax],al
   14003cf33:	add    BYTE PTR [rbx],al
   14003cf35:	add    BYTE PTR [rax],al
   14003cf37:	add    BYTE PTR [rbx],al
   14003cf39:	add    BYTE PTR [rax],al
   14003cf3b:	add    BYTE PTR [rbx],al
   14003cf3d:	add    BYTE PTR [rax],al
   14003cf3f:	add    BYTE PTR [rbx],al
   14003cf41:	add    BYTE PTR [rax],al
   14003cf43:	add    BYTE PTR [rbx],al
   14003cf45:	add    BYTE PTR [rax],al
   14003cf47:	add    BYTE PTR [rbx],al
   14003cf49:	add    BYTE PTR [rax],al
   14003cf4b:	add    BYTE PTR [rbx],al
   14003cf4d:	add    BYTE PTR [rax],al
   14003cf4f:	add    BYTE PTR [rbx],al
   14003cf51:	add    BYTE PTR [rax],al
   14003cf53:	add    BYTE PTR [rbx],al
   14003cf55:	add    BYTE PTR [rax],al
   14003cf57:	add    BYTE PTR [rbx],al
   14003cf59:	add    BYTE PTR [rax],al
   14003cf5b:	add    BYTE PTR [rbx],al
   14003cf5d:	add    BYTE PTR [rax],al
   14003cf5f:	add    BYTE PTR [rbx],al
   14003cf61:	add    BYTE PTR [rax],al
   14003cf63:	add    BYTE PTR [rbx],al
   14003cf65:	add    BYTE PTR [rax],al
   14003cf67:	add    BYTE PTR [rbx],al
   14003cf69:	add    BYTE PTR [rax],al
   14003cf6b:	add    BYTE PTR [rbx],al
   14003cf6d:	add    BYTE PTR [rax],al
   14003cf6f:	add    BYTE PTR [rax+rax*1],al
   14003cf72:	add    BYTE PTR [rax],al
   14003cf74:	add    al,0x0
   14003cf76:	add    BYTE PTR [rax],al
   14003cf78:	add    al,0x0
   14003cf7a:	add    BYTE PTR [rax],al
   14003cf7c:	add    al,0x0
   14003cf7e:	add    BYTE PTR [rax],al
   14003cf80:	add    al,0x0
   14003cf82:	add    BYTE PTR [rax],al
   14003cf84:	add    DWORD PTR [rax],eax
   14003cf86:	add    BYTE PTR [rax],al
   14003cf88:	add    DWORD PTR [rax],eax
   14003cf8a:	add    BYTE PTR [rax],al
   14003cf8c:	add    DWORD PTR [rax],eax
   14003cf8e:	add    BYTE PTR [rax],al
   14003cf90:	add    DWORD PTR [rax],eax
   14003cf92:	add    BYTE PTR [rax],al
   14003cf94:	add    DWORD PTR [rax],eax
   14003cf96:	add    BYTE PTR [rax],al
   14003cf98:	add    DWORD PTR [rax],eax
   14003cf9a:	add    BYTE PTR [rax],al
   14003cf9c:	add    DWORD PTR [rax],eax
   14003cf9e:	add    BYTE PTR [rax],al
   14003cfa0:	add    DWORD PTR [rax],eax
   14003cfa2:	add    BYTE PTR [rax],al
   14003cfa4:	add    DWORD PTR [rax],eax
   14003cfa6:	add    BYTE PTR [rax],al
   14003cfa8:	add    DWORD PTR [rax],eax
   14003cfaa:	add    BYTE PTR [rax],al
   14003cfac:	add    DWORD PTR [rax],eax
   14003cfae:	add    BYTE PTR [rax],al
   14003cfb0:	push   0x1400400
   14003cfb5:	add    BYTE PTR [rax],al
   14003cfb7:	add    al,dh
   14003cfb9:	(bad)  
   14003cfba:	add    al,BYTE PTR [rax+0x1]
   14003cfbd:	add    BYTE PTR [rax],al
   14003cfbf:	add    BYTE PTR [rax],bh
   14003cfc1:	add    DWORD PTR [rax+rax*2],eax
   14003cfc4:	add    DWORD PTR [rax],eax
   14003cfc6:	add    BYTE PTR [rax],al
   14003cfc8:	rcr    ch,1
   14003cfca:	add    al,BYTE PTR [rax+0x1]
   14003cfcd:	add    BYTE PTR [rax],al
   14003cfcf:	add    BYTE PTR [rax],dl
   14003cfd1:	fadd   QWORD PTR [rdx]
   14003cfd3:	rex add DWORD PTR [rax],eax
   14003cfd6:	add    BYTE PTR [rax],al
   14003cfd8:	add    ah,bl
   14003cfda:	add    al,BYTE PTR [rax+0x1]
   14003cfdd:	add    BYTE PTR [rax],al
   14003cfdf:	add    BYTE PTR [rax-0x24],dh
   14003cfe2:	add    al,BYTE PTR [rax+0x1]
   14003cfe5:	add    BYTE PTR [rax],al
   14003cfe7:	add    BYTE PTR [rax-0x24],ah
   14003cfea:	add    al,BYTE PTR [rax+0x1]
   14003cfed:	add    BYTE PTR [rax],al
   14003cfef:	add    al,dl
   14003cff1:	fadd   QWORD PTR [rdx]
   14003cff3:	rex add DWORD PTR [rax],eax
   14003cff6:	add    BYTE PTR [rax],al
   14003cff8:	rcr    ah,0x2
   14003cffb:	rex add DWORD PTR [rax],eax
   14003cffe:	add    BYTE PTR [rax],al
   14003d000:	lock fadd QWORD PTR [rdx]
   14003d003:	rex add DWORD PTR [rax],eax
   14003d006:	add    BYTE PTR [rax],al
   14003d008:	push   rax
   14003d009:	fld    QWORD PTR [rdx]
   14003d00b:	rex add DWORD PTR [rax],eax
   14003d00e:	add    BYTE PTR [rax],al
   14003d010:	rcr    ah,0x2
   14003d013:	rex add DWORD PTR [rax],eax
   14003d016:	add    BYTE PTR [rax],al
   14003d018:	sbb    ch,0x2
   14003d01b:	rex add DWORD PTR [rax],eax
   14003d01e:	add    BYTE PTR [rax],al
   14003d020:	and    al,BYTE PTR [rip+0x51993]        # 0x14008e9b9
   14003d026:	add    BYTE PTR [rax],al
   14003d028:	sbb    al,0x3e
   14003d02a:	add    al,0x0
	...
   14003d034:	(bad)  
   14003d035:	add    BYTE PTR [rax],al
   14003d037:	add    BYTE PTR [rsi+rdi*1+0x4],al
   14003d03b:	add    BYTE PTR [rax],ah
   14003d03d:	add    BYTE PTR [rax],al
   14003d03f:	add    BYTE PTR [rax],al
   14003d041:	add    BYTE PTR [rax],al
   14003d043:	add    BYTE PTR [rcx],al
	...
   14003d04d:	add    BYTE PTR [rax],al
   14003d04f:	add    BYTE PTR [rdx],ah
   14003d051:	add    eax,0x51993
   14003d056:	add    BYTE PTR [rax],al
   14003d058:	sbb    al,0x3e
   14003d05a:	add    al,0x0
	...
   14003d064:	(bad)  
   14003d065:	add    BYTE PTR [rax],al
   14003d067:	add    BYTE PTR [rax+0x2000043e],dl
   14003d06d:	add    BYTE PTR [rax],al
   14003d06f:	add    BYTE PTR [rax],al
   14003d071:	add    BYTE PTR [rax],al
   14003d073:	add    BYTE PTR [rcx],al
	...
   14003d07d:	add    BYTE PTR [rax],al
   14003d07f:	add    BYTE PTR [rdx],ah
   14003d081:	add    eax,0x31993
   14003d086:	add    BYTE PTR [rax],al
   14003d088:	and    al,0x3f
   14003d08a:	add    al,0x0
	...
   14003d094:	(bad)  
   14003d095:	add    BYTE PTR [rax],al
   14003d097:	add    BYTE PTR [rdi+rdi*1],bh
   14003d09a:	add    al,0x0
   14003d09c:	and    BYTE PTR [rax],al
   14003d09e:	add    BYTE PTR [rax],al
   14003d0a0:	add    BYTE PTR [rax],al
   14003d0a2:	add    BYTE PTR [rax],al
   14003d0a4:	add    DWORD PTR [rax],eax
	...
   14003d0ae:	add    BYTE PTR [rax],al
   14003d0b0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004ea49
   14003d0b6:	add    BYTE PTR [rax],al
   14003d0b8:	test   BYTE PTR [rdi],bh
   14003d0ba:	add    al,0x0
	...
   14003d0c4:	add    eax,DWORD PTR [rax]
   14003d0c6:	add    BYTE PTR [rax],al
   14003d0c8:	mov    WORD PTR [rdi],?
   14003d0ca:	add    al,0x0
   14003d0cc:	and    BYTE PTR [rax],al
   14003d0ce:	add    BYTE PTR [rax],al
   14003d0d0:	add    BYTE PTR [rax],al
   14003d0d2:	add    BYTE PTR [rax],al
   14003d0d4:	add    DWORD PTR [rax],eax
   14003d0d6:	add    BYTE PTR [rax],al
   14003d0d8:	(bad)
   14003d0dd:	(bad)  
   14003d0de:	jae    0x14003d154
	...
   14003d0f0:	and    al,BYTE PTR [rip+0x61993]        # 0x14009ea89
   14003d0f6:	add    BYTE PTR [rax],al
   14003d0f8:	sub    al,0x40
   14003d0fa:	add    al,0x0
	...
   14003d104:	or     eax,0x5c000000
   14003d109:	add    al,0x0
   14003d10c:	and    BYTE PTR [rax],al
   14003d10e:	add    BYTE PTR [rax],al
   14003d110:	add    BYTE PTR [rax],al
   14003d112:	add    BYTE PTR [rax],al
   14003d114:	add    DWORD PTR [rax],eax
   14003d116:	add    BYTE PTR [rax],al
   14003d118:	cmp    al,0x21
   14003d11a:	add    BYTE PTR [rax],al
   14003d11c:	cmp    al,0x3f
   14003d11e:	js     0x14003d18d
   14003d120:	ins    BYTE PTR es:[rdi],dx
	...
   14003d12d:	add    BYTE PTR [rax],al
   14003d12f:	add    BYTE PTR [rdx],ah
   14003d131:	add    eax,0x21993
   14003d136:	add    BYTE PTR [rax],al
   14003d138:	call   0x14003d57d
   14003d13d:	add    BYTE PTR [rax],al
   14003d13f:	add    BYTE PTR [rax],al
   14003d141:	add    BYTE PTR [rax],al
   14003d143:	add    BYTE PTR [rip+0xfffffffff8000000],al        # 0x13803d149
   14003d149:	add    al,0x0
   14003d14c:	xor    BYTE PTR [rax],al
   14003d14e:	add    BYTE PTR [rax],al
   14003d150:	add    BYTE PTR [rax],al
   14003d152:	add    BYTE PTR [rax],al
   14003d154:	add    DWORD PTR [rax],eax
	...
   14003d15e:	add    BYTE PTR [rax],al
   14003d160:	and    al,BYTE PTR [rip+0x11993]        # 0x14004eaf9
   14003d166:	add    BYTE PTR [rax],al
   14003d168:	rol    BYTE PTR [rcx+0x4],0x0
	...
   14003d174:	add    eax,DWORD PTR [rax]
   14003d176:	add    BYTE PTR [rax],al
   14003d178:	enter  0x441,0x0
   14003d17c:	xor    BYTE PTR [rax],al
   14003d17e:	add    BYTE PTR [rax],al
   14003d180:	add    BYTE PTR [rax],al
   14003d182:	add    BYTE PTR [rax],al
   14003d184:	add    DWORD PTR [rax],eax
	...
   14003d18e:	add    BYTE PTR [rax],al
   14003d190:	and    al,BYTE PTR [rip+0x31993]        # 0x14006eb29
   14003d196:	add    BYTE PTR [rax],al
   14003d198:	add    al,0x42
   14003d19a:	add    al,0x0
	...
   14003d1a4:	(bad)  
   14003d1a5:	add    BYTE PTR [rax],al
   14003d1a7:	add    BYTE PTR [rdx+rax*2],bl
   14003d1aa:	add    al,0x0
   14003d1ac:	xor    BYTE PTR [rax],al
   14003d1ae:	add    BYTE PTR [rax],al
   14003d1b0:	add    BYTE PTR [rax],al
   14003d1b2:	add    BYTE PTR [rax],al
   14003d1b4:	add    DWORD PTR [rax],eax
   14003d1b6:	add    BYTE PTR [rax],al
   14003d1b8:	jae    0x14003d22e
   14003d1ba:	(bad)  
   14003d1bb:	outs   dx,BYTE PTR ds:[rsi]
   14003d1bc:	fs (bad) 
   14003d1be:	ins    BYTE PTR es:[rdi],dx
   14003d1bf:	outs   dx,DWORD PTR ds:[rsi]
   14003d1c0:	outs   dx,BYTE PTR ds:[rsi]
   14003d1c1:	add    BYTE PTR gs:[rax],al
   14003d1c4:	add    BYTE PTR [rax],al
   14003d1c6:	add    BYTE PTR [rax],al
   14003d1c8:	outs   dx,BYTE PTR gs:[rsi]
   14003d1ca:	movsxd ebp,DWORD PTR [rdi+0x64]
   14003d1cd:	imul   ebp,DWORD PTR [rsi+0x67],0x0
   14003d1d4:	add    BYTE PTR [rax],al
   14003d1d6:	add    BYTE PTR [rax],al
   14003d1d8:	jbe    0x14003d23f
   14003d1da:	jb     0x14003d24f
   14003d1dc:	imul   ebp,DWORD PTR [rdi+0x6e],0x46545500
   14003d1e3:	cmp    BYTE PTR [rax],al
   14003d1e5:	add    BYTE PTR [rax],al
   14003d1e7:	add    BYTE PTR [rbp+0x54],dl
   14003d1ea:	rex.RX sub eax,0x38
   14003d1f0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004eb89
   14003d1f6:	add    BYTE PTR [rax],al
   14003d1f8:	nop
   14003d1f9:	rex.X add al,0x0
	...
   14003d204:	adc    DWORD PTR [rax],eax
   14003d206:	add    BYTE PTR [rax],al
   14003d208:	cwde   
   14003d209:	rex.X add al,0x0
   14003d20c:	cmp    BYTE PTR [rax],al
   14003d20e:	add    BYTE PTR [rax],al
   14003d210:	add    BYTE PTR [rax],al
   14003d212:	add    BYTE PTR [rax],al
   14003d214:	add    DWORD PTR [rax],eax
	...
   14003d21e:	add    BYTE PTR [rax],al
   14003d220:	and    al,BYTE PTR [rip+0x91993]        # 0x1400cebb9
   14003d226:	add    BYTE PTR [rax],al
   14003d228:	jo     0x14003d26d
   14003d22a:	add    al,0x0
   14003d22c:	add    DWORD PTR [rax],eax
   14003d22e:	add    BYTE PTR [rax],al
   14003d230:	rex.W
   14003d231:	rex.XB add al,0x0
   14003d234:	or     al,0x0
   14003d236:	add    BYTE PTR [rax],al
   14003d238:	mov    eax,0x20000443
   14003d23d:	add    BYTE PTR [rax],al
   14003d23f:	add    BYTE PTR [rax],al
   14003d241:	add    BYTE PTR [rax],al
   14003d243:	add    BYTE PTR [rcx],al
	...
   14003d24d:	add    BYTE PTR [rax],al
   14003d24f:	add    BYTE PTR [rdx],ah
   14003d251:	add    eax,0xa1993
   14003d256:	add    BYTE PTR [rax],al
   14003d258:	fs rex.R add al,0x0
   14003d25c:	add    DWORD PTR [rax],eax
   14003d25e:	add    BYTE PTR [rax],al
   14003d260:	cmp    al,0x44
   14003d262:	add    al,0x0
   14003d264:	or     eax,DWORD PTR [rax]
   14003d266:	add    BYTE PTR [rax],al
   14003d268:	mov    ah,0x44
   14003d26a:	add    al,0x0
   14003d26c:	and    BYTE PTR [rax],al
   14003d26e:	add    BYTE PTR [rax],al
   14003d270:	add    BYTE PTR [rax],al
   14003d272:	add    BYTE PTR [rax],al
   14003d274:	add    DWORD PTR [rax],eax
	...
   14003d27e:	add    BYTE PTR [rax],al
   14003d280:	and    al,BYTE PTR [rip+0xa1993]        # 0x1400dec19
   14003d286:	add    BYTE PTR [rax],al
   14003d288:	pop    rax
   14003d289:	rex.RB add al,0x0
   14003d28c:	add    DWORD PTR [rax],eax
   14003d28e:	add    BYTE PTR [rax],al
   14003d290:	xor    BYTE PTR [rbp+0x4],al
   14003d293:	add    BYTE PTR [rbx],cl
   14003d295:	add    BYTE PTR [rax],al
   14003d297:	add    BYTE PTR [rax+0x20000445],ch
   14003d29d:	add    BYTE PTR [rax],al
   14003d29f:	add    BYTE PTR [rax],al
   14003d2a1:	add    BYTE PTR [rax],al
   14003d2a3:	add    BYTE PTR [rcx],al
	...
   14003d2ad:	add    BYTE PTR [rax],al
   14003d2af:	add    BYTE PTR [rdx],ah
   14003d2b1:	add    eax,0x21993
   14003d2b6:	add    BYTE PTR [rax],al
   14003d2b8:	or     BYTE PTR [rdi+0x4],al
	...
   14003d2c3:	add    BYTE PTR [rax+rax*1],al
   14003d2c6:	add    BYTE PTR [rax],al
   14003d2c8:	sbb    BYTE PTR [rdi+0x4],al
   14003d2cb:	add    BYTE PTR [rax+0x0],al
   14003d2ce:	add    BYTE PTR [rax],al
   14003d2d0:	add    BYTE PTR [rax],al
   14003d2d2:	add    BYTE PTR [rax],al
   14003d2d4:	add    DWORD PTR [rax],eax
	...
   14003d2de:	add    BYTE PTR [rax],al
   14003d2e0:	rex.RB jb 0x14003d355
   14003d2e3:	outs   dx,DWORD PTR ds:[rsi]
   14003d2e4:	jb     0x14003d306
   14003d2e6:	ja     0x14003d350
   14003d2e8:	outs   dx,BYTE PTR gs:[rsi]
   14003d2ea:	and    BYTE PTR [rcx+rbp*2+0x58],dl
   14003d2ee:	ins    DWORD PTR es:[rdi],dx
   14003d2ef:	ins    BYTE PTR es:[rdi],dx
   14003d2f0:	rex.R outs dx,DWORD PTR ds:[rsi]
   14003d2f2:	movsxd esi,DWORD PTR [rbp+0x6d]
   14003d2f5:	outs   dx,BYTE PTR gs:[rsi]
   14003d2f7:	je     0x14003d319
   14003d2f9:	(bad)  
   14003d2fa:	fs fs gs and BYTE PTR fs:[rdi+rbp*2+0x20],dh
   14003d302:	outs   dx,DWORD PTR fs:[rsi]
   14003d304:	movsxd esi,DWORD PTR [rbp+0x6d]
   14003d307:	outs   dx,BYTE PTR gs:[rsi]
   14003d309:	je     0x14003d337
   14003d30b:	and    BYTE PTR [rdx+0x65],ah
   14003d30e:	movsxd esp,DWORD PTR [rcx+0x75]
   14003d311:	jae    0x14003d378
   14003d313:	and    BYTE PTR [rcx+rbp*2+0x58],dl
   14003d317:	ins    DWORD PTR es:[rdi],dx
   14003d318:	ins    BYTE PTR es:[rdi],dx
   14003d319:	rex.R outs dx,DWORD PTR ds:[rsi]
   14003d31b:	movsxd esi,DWORD PTR [rbp+0x6d]
   14003d31e:	outs   dx,BYTE PTR gs:[rsi]
   14003d320:	je     0x14003d342
   14003d322:	movsxd esp,DWORD PTR [rcx+0x6e]
   14003d325:	and    BYTE PTR [rdi+0x6e],ch
   14003d328:	ins    BYTE PTR es:[rdi],dx
   14003d329:	jns    0x14003d34b
   14003d32b:	(bad)  
   14003d32c:	and    BYTE PTR gs:[rcx+0x74],ah
   14003d330:	and    BYTE PTR [rax+rbp*2+0x65],dh
   14003d334:	and    BYTE PTR [rdx+0x6f],dh
   14003d337:	outs   dx,DWORD PTR ds:[rsi]
   14003d338:	je     0x14003d368
   14003d33a:	add    BYTE PTR [rax],al
   14003d33c:	add    BYTE PTR [rax],al
   14003d33e:	add    BYTE PTR [rax],al
   14003d340:	rex.RB jb 0x14003d3b5
   14003d343:	outs   dx,DWORD PTR ds:[rsi]
   14003d344:	jb     0x14003d366
   14003d346:	jo     0x14003d3a9
   14003d348:	jb     0x14003d3bd
   14003d34a:	imul   ebp,DWORD PTR [rsi+0x67],0x41444320
   14003d351:	push   rsp
   14003d352:	rex.B
   14003d353:	add    BYTE PTR cs:[rax],al
   14003d356:	add    BYTE PTR [rax],al
   14003d358:	rex.RB jb 0x14003d3cd
   14003d35b:	outs   dx,DWORD PTR ds:[rsi]
   14003d35c:	jb     0x14003d37e
   14003d35e:	outs   dx,BYTE PTR ds:[rsi]
   14003d35f:	jne    0x14003d3cd
   14003d361:	ins    BYTE PTR es:[rdi],dx
   14003d362:	and    BYTE PTR [rax],ch
   14003d364:	xor    BYTE PTR [rcx],ch
   14003d366:	and    BYTE PTR [rdi+0x72],ch
   14003d369:	and    BYTE PTR [rbp+0x6e],dh
   14003d36c:	gs js  0x14003d3df
   14003d36f:	movsxd esi,DWORD PTR gs:[rbp+riz*2+0x64]
   14003d374:	and    BYTE PTR [rbp+0x4f],al
   14003d377:	rex.RX and BYTE PTR [rsi+0x6f],r12b
   14003d37b:	jne    0x14003d3eb
   14003d37d:	and    BYTE PTR fs:[rcx+0x6e],ch
   14003d381:	and    BYTE PTR [rcx+0x6e],ch
   14003d384:	jo     0x14003d3fb
   14003d386:	je     0x14003d3a8
   14003d388:	jae    0x14003d3fe
   14003d38a:	jb     0x14003d3f1
   14003d38c:	(bad)  
   14003d38d:	ins    DWORD PTR es:[rdi],dx
   14003d38e:	add    BYTE PTR cs:[rbp+0x72],al
   14003d392:	jb     0x14003d403
   14003d394:	jb     0x14003d3b6
   14003d396:	outs   dx,DWORD PTR fs:[rsi]
   14003d398:	movsxd esi,DWORD PTR [rbp+0x6d]
   14003d39b:	outs   dx,BYTE PTR gs:[rsi]
   14003d39d:	je     0x14003d3bf
   14003d39f:	gs ins DWORD PTR es:[rdi],dx
   14003d3a1:	jo     0x14003d417
   14003d3a3:	jns    0x14003d3d3
   14003d3a5:	add    BYTE PTR [rax],al
   14003d3a7:	add    BYTE PTR [rbp+0x72],al
   14003d3aa:	jb     0x14003d41b
   14003d3ac:	jb     0x14003d3ce
   14003d3ae:	jo     0x14003d411
   14003d3b0:	jb     0x14003d425
   14003d3b2:	imul   ebp,DWORD PTR [rsi+0x67],0x63654420
   14003d3b9:	ins    BYTE PTR es:[rdi],dx
   14003d3ba:	(bad)  
   14003d3bb:	jb     0x14003d41e
   14003d3bd:	je     0x14003d428
   14003d3bf:	outs   dx,DWORD PTR ds:[rsi]
   14003d3c0:	outs   dx,BYTE PTR ds:[rsi]
   14003d3c1:	add    BYTE PTR cs:[rax],al
   14003d3c4:	add    BYTE PTR [rax],al
   14003d3c6:	add    BYTE PTR [rax],al
   14003d3c8:	rex.RB jb 0x14003d43d
   14003d3cb:	outs   dx,DWORD PTR ds:[rsi]
   14003d3cc:	jb     0x14003d3ee
   14003d3ce:	jo     0x14003d431
   14003d3d0:	jb     0x14003d445
   14003d3d2:	imul   ebp,DWORD PTR [rsi+0x67],0x6d6f4320
   14003d3d9:	ins    DWORD PTR es:[rdi],dx
   14003d3da:	outs   dx,BYTE PTR gs:[rsi]
   14003d3dc:	je     0x14003d40c
   14003d3de:	add    BYTE PTR [rax],al
   14003d3e0:	rex.RB jb 0x14003d455
   14003d3e3:	outs   dx,DWORD PTR ds:[rsi]
   14003d3e4:	jb     0x14003d406
   14003d3e6:	jo     0x14003d449
   14003d3e8:	jb     0x14003d45d
   14003d3ea:	imul   ebp,DWORD PTR [rsi+0x67],0x6b6e5520
   14003d3f1:	outs   dx,BYTE PTR ds:[rsi]
   14003d3f2:	outs   dx,DWORD PTR ds:[rsi]
   14003d3f3:	ja     0x14003d463
   14003d3f5:	add    BYTE PTR cs:[rax],al
   14003d3f8:	rex.RB jb 0x14003d46d
   14003d3fb:	outs   dx,DWORD PTR ds:[rsi]
   14003d3fc:	jb     0x14003d41e
   14003d3fe:	jb     0x14003d465
   14003d400:	(bad)  
   14003d401:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x646e6520
   14003d409:	and    BYTE PTR [rcx+riz*2+0x67],dh
   14003d40d:	add    BYTE PTR cs:[rax],al
   14003d410:	rex.RB jb 0x14003d485
   14003d413:	outs   dx,DWORD PTR ds:[rsi]
   14003d414:	jb     0x14003d450
   14003d416:	and    BYTE PTR [rbp+0x6d],ah
   14003d419:	jo     0x14003d48f
   14003d41b:	jns    0x14003d43d
   14003d41d:	je     0x14003d480
   14003d41f:	add    BYTE PTR cs:[eax],al
   14003d423:	add    BYTE PTR [rax],al
   14003d425:	add    BYTE PTR [rax],al
   14003d427:	add    BYTE PTR [rbp+0x72],al
   14003d42a:	jb     0x14003d49b
   14003d42c:	jb     0x14003d44e
   14003d42e:	jb     0x14003d495
   14003d430:	(bad)  
   14003d431:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x74744120
   14003d439:	jb     0x14003d4a4
   14003d43b:	(bad)  
   14003d43c:	jne    0x14003d4b2
   14003d43e:	gs jae 0x14003d46f
   14003d441:	add    BYTE PTR [rax],al
   14003d443:	add    BYTE PTR [rax],al
   14003d445:	add    BYTE PTR [rax],al
   14003d447:	add    BYTE PTR [rbp+0x72],al
   14003d44a:	jb     0x14003d4bb
   14003d44c:	jb     0x14003d46e
   14003d44e:	jb     0x14003d4b5
   14003d450:	(bad)  
   14003d451:	imul   ebp,DWORD PTR fs:[rsi+0x67],0x656c4520
   14003d459:	ins    DWORD PTR es:[rdi],dx
   14003d45a:	outs   dx,BYTE PTR gs:[rsi]
   14003d45c:	je     0x14003d47e
   14003d45e:	jbe    0x14003d4c1
   14003d460:	ins    BYTE PTR es:[rdi],dx
   14003d461:	jne    0x14003d4c8
   14003d463:	add    BYTE PTR cs:[rax],al
   14003d466:	add    BYTE PTR [rax],al
   14003d468:	rex.RX (bad) 
   14003d46a:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003d472:	jb     0x14003d4d9
   14003d474:	(bad)  
   14003d475:	and    BYTE PTR fs:[rbp+0x6c],al
   14003d479:	gs ins DWORD PTR es:[rdi],dx
   14003d47b:	outs   dx,BYTE PTR gs:[rsi]
   14003d47d:	je     0x14003d49f
   14003d47f:	outs   dx,BYTE PTR ds:[rsi]
   14003d480:	(bad)  
   14003d481:	ins    DWORD PTR es:[rdi],dx
   14003d482:	add    BYTE PTR gs:[rax],al
   14003d485:	add    BYTE PTR [rax],al
   14003d487:	add    BYTE PTR [rbp+0x72],al
   14003d48a:	jb     0x14003d4fb
   14003d48c:	jb     0x14003d4ae
   14003d48e:	jo     0x14003d4f1
   14003d490:	jb     0x14003d505
   14003d492:	imul   ebp,DWORD PTR [rsi+0x67],0x656c4520
   14003d499:	ins    DWORD PTR es:[rdi],dx
   14003d49a:	outs   dx,BYTE PTR gs:[rsi]
   14003d49c:	je     0x14003d4cc
   14003d49e:	add    BYTE PTR [rax],al
   14003d4a0:	rex.RX (bad) 
   14003d4a2:	imul   ebp,DWORD PTR [rbp+riz*2+0x64],0x206f7420
   14003d4aa:	outs   dx,DWORD PTR ds:[rsi]
   14003d4ab:	jo     0x14003d512
   14003d4ad:	outs   dx,BYTE PTR ds:[rsi]
   14003d4ae:	and    BYTE PTR [rsi+0x69],ah
   14003d4b1:	ins    BYTE PTR es:[rdi],dx
   14003d4b2:	add    BYTE PTR gs:[rbp+0x72],al
   14003d4b6:	jb     0x14003d527
   14003d4b8:	jb     0x14003d4ba
   14003d4ba:	add    BYTE PTR [rax],al
   14003d4bc:	add    BYTE PTR [rax],al
   14003d4be:	add    BYTE PTR [rax],al
   14003d4c0:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14003d4c2:	and    BYTE PTR [rbp+0x72],ah
   14003d4c5:	jb     0x14003d536
   14003d4c7:	jb     0x14003d4c9
   14003d4c9:	add    BYTE PTR [rax],al
   14003d4cb:	add    BYTE PTR [rax],al
   14003d4cd:	add    BYTE PTR [rax],al
   14003d4cf:	add    al,al
   14003d4d1:	add    DWORD PTR [rax+rax*2],eax
   14003d4d4:	add    DWORD PTR [rax],eax
   14003d4d6:	add    BYTE PTR [rax],al
   14003d4d8:	add    BYTE PTR [rip+0x14003],dl        # 0x1400514e1
   14003d4de:	add    BYTE PTR [rax],al
   14003d4e0:	(bad)
   14003d4e5:	ins    BYTE PTR es:[rdi],dx
   14003d4e6:	ins    BYTE PTR es:[rdi],dx
   14003d4e7:	outs   dx,DWORD PTR ds:[rsi]
   14003d4e8:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d4eb:	imul   ebp,DWORD PTR [rdi+0x6e],0xa0000
   14003d4f2:	add    BYTE PTR [rax],al
   14003d4f4:	add    BYTE PTR [rax],al
   14003d4f6:	add    BYTE PTR [rax],al
   14003d4f8:	push   rbx
   14003d4f9:	pop    rcx
   14003d4fa:	push   rbx
   14003d4fb:	push   rsp
   14003d4fc:	rex.RB
   14003d4fd:	rex.WRB pop r12
   14003d4ff:	rex.XB jne 0x14003d574
   14003d502:	jb     0x14003d569
   14003d504:	outs   dx,BYTE PTR ds:[rsi]
   14003d505:	je     0x14003d54a
   14003d507:	outs   dx,DWORD PTR ds:[rsi]
   14003d508:	outs   dx,BYTE PTR ds:[rsi]
   14003d509:	je     0x14003d57d
   14003d50b:	outs   dx,DWORD PTR ds:[rsi]
   14003d50c:	ins    BYTE PTR es:[rdi],dx
   14003d50d:	push   rbx
   14003d50e:	gs je  0x14003d56d
   14003d511:	push   rbx
   14003d512:	gs jb  0x14003d58b
   14003d515:	imul   esp,DWORD PTR [rbx+0x65],0x76455c73
   14003d51c:	outs   dx,BYTE PTR gs:[rsi]
   14003d51e:	je     0x14003d56c
   14003d520:	outs   dx,DWORD PTR ds:[rsi]
   14003d521:	addr32 pop rsp
   14003d523:	rex.B jo 0x14003d596
   14003d526:	ins    BYTE PTR es:[rdi],dx
   14003d527:	imul   esp,DWORD PTR [rbx+0x61],0x6e6f6974
   14003d52e:	pop    rsp
   14003d52f:	add    BYTE PTR [rbp+0x76],al
   14003d532:	outs   dx,BYTE PTR gs:[rsi]
   14003d534:	je     0x14003d583
   14003d536:	gs jae 0x14003d5ac
   14003d539:	(bad)  
   14003d53a:	imul   r13d,DWORD PTR gs:[ebp+r12d*2+0x0],0x0
   14003d545:	add    BYTE PTR [rax],al
   14003d547:	add    BYTE PTR [rcx+rdi*2+0x70],dl
   14003d54b:	gs jae 0x14003d5a1
   14003d54e:	jne    0x14003d5c0
   14003d550:	jo     0x14003d5c1
   14003d552:	jb     0x14003d5c8
   14003d554:	gs add BYTE PTR fs:[rax],al
   14003d558:	and    al,BYTE PTR [rip+0x11993]        # 0x14004eef1
   14003d55e:	add    BYTE PTR [rax],al
   14003d560:	jl     0x14003d5a9
   14003d562:	add    al,0x0
	...
   14003d56c:	add    eax,DWORD PTR [rax]
   14003d56e:	add    BYTE PTR [rax],al
   14003d570:	pushf  
   14003d571:	rex.RXB add al,0x0
   14003d574:	sub    BYTE PTR [rax],al
   14003d576:	add    BYTE PTR [rax],al
   14003d578:	add    BYTE PTR [rax],al
   14003d57a:	add    BYTE PTR [rax],al
   14003d57c:	add    DWORD PTR [rax],eax
   14003d57e:	add    BYTE PTR [rax],al
   14003d580:	and    al,BYTE PTR [rip+0x21993]        # 0x14005ef19
   14003d586:	add    BYTE PTR [rax],al
   14003d588:	mov    ah,0x47
   14003d58a:	add    al,0x0
	...
   14003d594:	(bad)  
   14003d595:	add    BYTE PTR [rax],al
   14003d597:	add    ah,ch
   14003d599:	rex.RXB add al,0x0
   14003d59c:	and    BYTE PTR [rcx],al
   14003d59e:	add    BYTE PTR [rax],al
   14003d5a0:	add    BYTE PTR [rax],al
   14003d5a2:	add    BYTE PTR [rax],al
   14003d5a4:	add    DWORD PTR [rax],eax
   14003d5a6:	add    BYTE PTR [rax],al
   14003d5a8:	and    al,BYTE PTR [rip+0x21993]        # 0x14005ef41
   14003d5ae:	add    BYTE PTR [rax],al
   14003d5b0:	and    al,0x48
   14003d5b2:	add    al,0x0
	...
   14003d5bc:	add    eax,0x54000000
   14003d5c1:	rex.W add al,0x0
   14003d5c4:	movabs al,ds:0x100000000000000
   14003d5cd:	add    BYTE PTR [rax],al
   14003d5cf:	add    BYTE PTR [rdx],ah
   14003d5d1:	add    eax,0x11993
   14003d5d6:	add    BYTE PTR [rax],al
   14003d5d8:	jl     0x14003d622
   14003d5da:	add    al,0x0
	...
   14003d5e4:	add    eax,DWORD PTR [rax]
   14003d5e6:	add    BYTE PTR [rax],al
   14003d5e8:	pushf  
   14003d5e9:	rex.W add al,0x0
   14003d5ec:	nop
   14003d5ed:	add    BYTE PTR [rax],al
   14003d5ef:	add    BYTE PTR [rax],al
   14003d5f1:	add    BYTE PTR [rax],al
   14003d5f3:	add    BYTE PTR [rcx],al
   14003d5f5:	add    BYTE PTR [rax],al
   14003d5f7:	add    BYTE PTR [rdx],ah
   14003d5f9:	add    eax,0x21993
   14003d5fe:	add    BYTE PTR [rax],al
   14003d600:	mov    ah,0x48
   14003d602:	add    al,0x0
	...
   14003d60c:	(bad)  
   14003d60d:	add    BYTE PTR [rax],al
   14003d60f:	add    ah,ch
   14003d611:	rex.W add al,0x0
   14003d614:	cwde   
   14003d615:	add    BYTE PTR [rax],al
   14003d617:	add    BYTE PTR [rax],al
   14003d619:	add    BYTE PTR [rax],al
   14003d61b:	add    BYTE PTR [rcx],al
   14003d61d:	add    BYTE PTR [rax],al
   14003d61f:	add    BYTE PTR [rdx],ah
   14003d621:	add    eax,0x11993
   14003d626:	add    BYTE PTR [rax],al
   14003d628:	jl     0x14003d673
   14003d62a:	add    al,0x0
	...
   14003d634:	add    al,BYTE PTR [rax]
   14003d636:	add    BYTE PTR [rax],al
   14003d638:	test   BYTE PTR [rcx+0x4],cl
   14003d63b:	add    BYTE PTR [rax+0x0],cl
   14003d641:	add    BYTE PTR [rax],al
   14003d643:	add    BYTE PTR [rcx],al
   14003d645:	add    BYTE PTR [rax],al
   14003d647:	add    BYTE PTR [rcx+0x6e],ch
   14003d64a:	jbe    0x14003d6ad
   14003d64c:	ins    BYTE PTR es:[rdi],dx
   14003d64d:	imul   esp,DWORD PTR [rax+riz*1+0x76],0x6f746365
   14003d655:	jb     0x14003d693
   14003d657:	push   rsp
   14003d658:	and    BYTE PTR ds:[rbx+0x75],dh
   14003d65c:	(bad)  
   14003d65e:	movsxd esi,DWORD PTR [rdx+0x69]
   14003d661:	jo     0x14003d6d7
   14003d663:	add    BYTE PTR [rax],al
   14003d665:	add    BYTE PTR [rax],al
   14003d667:	add    BYTE PTR [rax],bh
   14003d669:	add    al,BYTE PTR [rax+rax*2]
   14003d66c:	add    DWORD PTR [rax],eax
   14003d66e:	add    BYTE PTR [rax],al
   14003d670:	mov    al,0x1e
   14003d672:	add    eax,DWORD PTR [rax+0x1]
   14003d675:	add    BYTE PTR [rax],al
   14003d677:	add    BYTE PTR [rax],dl
   14003d679:	adc    DWORD PTR [rax],eax
   14003d67b:	rex add DWORD PTR [rax],eax
   14003d67e:	add    BYTE PTR [rax],al
   14003d680:	add    rax,QWORD PTR [rax+rax*2]
   14003d684:	add    DWORD PTR [rax],eax
   14003d686:	add    BYTE PTR [rax],al
   14003d688:	xor    BYTE PTR [rcx],dl
   14003d68a:	add    BYTE PTR [rax+0x1],al
   14003d68d:	add    BYTE PTR [rax],al
   14003d68f:	add    BYTE PTR [rax],dl
   14003d691:	adc    DWORD PTR [rax],eax
   14003d693:	rex add DWORD PTR [rax],eax
   14003d696:	add    BYTE PTR [rax],al
   14003d698:	rol    BYTE PTR [rdx],0x4
   14003d69b:	rex add DWORD PTR [rax],eax
   14003d69e:	add    BYTE PTR [rax],al
   14003d6a0:	xor    BYTE PTR [rcx],dl
   14003d6a2:	add    BYTE PTR [rax+0x1],al
   14003d6a5:	add    BYTE PTR [rax],al
   14003d6a7:	add    BYTE PTR [rax],dl
   14003d6a9:	adc    DWORD PTR [rax],eax
   14003d6ab:	rex add DWORD PTR [rax],eax
	...
   14003d6b6:	add    BYTE PTR [rax],al
   14003d6b8:	rol    BYTE PTR [rax],0x0
   14003d6bb:	add    BYTE PTR [rax],al
   14003d6bd:	add    BYTE PTR [rax],al
   14003d6bf:	add    BYTE PTR [rdx+r8*1],r8b
   14003d6c3:	add    BYTE PTR [rax],al
   14003d6c5:	add    BYTE PTR [rax],al
   14003d6c7:	add    al,al
   14003d6c9:	add    BYTE PTR [rax],al
   14003d6cb:	add    BYTE PTR [rax],al
   14003d6cd:	add    BYTE PTR [rax],al
   14003d6cf:	rex.RX and r8b,BYTE PTR [rip+0x21993]        # 0x14005f069
   14003d6d6:	add    BYTE PTR [rax],al
   14003d6d8:	(bad)  
   14003d6d9:	rex.WB add al,0x0
	...
   14003d6e4:	add    al,0x0
   14003d6e6:	add    BYTE PTR [rax],al
   14003d6e8:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003d6e9:	rex.WB add al,0x0
   14003d6ec:	and    BYTE PTR [rax],al
   14003d6ee:	add    BYTE PTR [rax],al
   14003d6f0:	add    BYTE PTR [rax],al
   14003d6f2:	add    BYTE PTR [rax],al
   14003d6f4:	add    DWORD PTR [rax],eax
   14003d6f6:	add    BYTE PTR [rax],al
   14003d6f8:	jae    0x14003d76e
   14003d6fa:	jb     0x14003d765
   14003d6fc:	outs   dx,BYTE PTR ds:[rsi]
   14003d6fd:	and    BYTE PTR [edi+ebp*2+0x6f],dh
   14003d702:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003d706:	add    BYTE PTR [edx],ah
   14003d709:	add    eax,0x21993
   14003d70e:	add    BYTE PTR [rax],al
   14003d710:	(bad)  
   14003d711:	rex.WB add al,0x0
	...
   14003d71c:	add    al,0x0
   14003d71e:	add    BYTE PTR [rax],al
   14003d720:	in     al,0x49
   14003d722:	add    al,0x0
   14003d724:	and    BYTE PTR [rax],al
   14003d726:	add    BYTE PTR [rax],al
   14003d728:	add    BYTE PTR [rax],al
   14003d72a:	add    BYTE PTR [rax],al
   14003d72c:	add    DWORD PTR [rax],eax
   14003d72e:	add    BYTE PTR [rax],al
   14003d730:	imul   ebp,DWORD PTR [rsi+0x76],0x64696c61
   14003d737:	and    BYTE PTR [rbx+0x74],dh
   14003d73a:	jb     0x14003d7a5
   14003d73c:	outs   dx,BYTE PTR ds:[rsi]
   14003d73d:	and    BYTE PTR [eax+0x6f],dh
   14003d741:	jae    0x14003d7ac
   14003d743:	je     0x14003d7ae
   14003d745:	outs   dx,DWORD PTR ds:[rsi]
   14003d746:	outs   dx,BYTE PTR ds:[rsi]
   14003d747:	add    BYTE PTR [rax],dl
   14003d749:	pop    rcx
   14003d74a:	(bad)  
   14003d74b:	mov    dh,0x28
   14003d74d:	rcl    DWORD PTR gs:[rcx],1
   14003d750:	xchg   esi,eax
   14003d751:	adc    DWORD PTR [rax],eax
   14003d753:	add    al,bh
   14003d755:	(bad)  
   14003d756:	or     eax,0x4c3de00d
   14003d75b:	cmp    DWORD PTR [rdi+0x3c],ebp
   14003d75e:	rcl    BYTE PTR [rcx],cl
   14003d760:	cmp    DWORD PTR [rbx+0x0],0x7a794fc0
   14003d767:	mov    bh,0x63
   14003d769:	movsxd esi,DWORD PTR [rbx+0x0]
   14003d76c:	push   rbp
   14003d76d:	push   rsp
   14003d76e:	rex.RX sub eax,0x38
   14003d774:	add    BYTE PTR [rax],al
   14003d776:	add    BYTE PTR [rax],al
   14003d778:	push   rbp
   14003d779:	push   rsp
   14003d77a:	rex.RX sub eax,0x454c3631
	...
   14003d788:	push   rbp
   14003d789:	rex.WRX
   14003d78a:	rex.WB
   14003d78b:	rex.XB
   14003d78c:	rex.WRXB
   14003d78d:	rex.R
   14003d78e:	add    BYTE PTR [r10+0x61],r12b
   14003d792:	and    BYTE PTR fs:[rcx+0x6c],ah
   14003d796:	ins    BYTE PTR es:[rdi],dx
   14003d797:	outs   dx,DWORD PTR ds:[rsi]
   14003d798:	movsxd esp,DWORD PTR [rcx+0x74]
   14003d79b:	imul   ebp,DWORD PTR [rdi+0x6e],0x72500000
   14003d7a2:	outs   dx,DWORD PTR ds:[rsi]
   14003d7a3:	je     0x14003d80a
   14003d7a5:	js     0x14003d810
   14003d7a7:	jae    0x14003d7c9
   14003d7a9:	imul   r12,QWORD PTR [rbx+0x65],0x6e69736e
   14003d7b1:	and    BYTE PTR [ebx+0x65],dl
   14003d7b5:	jb     0x14003d82d
   14003d7b7:	imul   esp,DWORD PTR [rbx+0x65],0x0
   14003d7be:	add    BYTE PTR [rax],al
   14003d7c0:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
   14003d7c7:	add    BYTE PTR [rdi],ch
   14003d7c9:	imul   ebp,DWORD PTR [rsi+0x73],0x6c6c6174
	...
   14003d7d8:	push   rax
   14003d7d9:	jb     0x14003d84a
   14003d7db:	je     0x14003d842
   14003d7dd:	js     0x14003d848
   14003d7df:	jae    0x14003d801
   14003d7e1:	imul   r12,QWORD PTR [rbx+0x65],0x6e69736e
   14003d7e9:	and    BYTE PTR [esi+0x32],dl
   14003d7ed:	add    BYTE PTR [rax],al
   14003d7ef:	add    BYTE PTR [rax+0x53],dl
   14003d7f2:	rex.WB pop r15
   14003d7f4:	push   rbx
   14003d7f5:	push   rsi
   14003d7f6:	rex.XB pop r15
   14003d7f8:	xor    bl,BYTE PTR [rdi+0x78]
   14003d7fb:	ss xor al,0x0
   14003d7fe:	add    BYTE PTR [rax],al
   14003d800:	push   rsp
   14003d801:	push   0x73207369
   14003d806:	gs jb  0x14003d87f
   14003d809:	imul   esp,DWORD PTR [rbx+0x65],0x6f727020
   14003d810:	jbe    0x14003d87b
   14003d812:	fs gs jae 0x14003d836
   14003d816:	push   rax
   14003d817:	jb     0x14003d888
   14003d819:	je     0x14003d880
   14003d81b:	js     0x14003d886
   14003d81d:	jae    0x14003d83f
   14003d81f:	ins    BYTE PTR es:[rdi],dx
   14003d820:	imul   esp,DWORD PTR [rbx+0x65],0x6e69736e
   14003d827:	and    BYTE PTR [esi+0x75],ah
   14003d82b:	outs   dx,BYTE PTR ds:[rsi]
   14003d82c:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003d830:	outs   dx,BYTE PTR ds:[rsi]
   14003d831:	(bad)  
   14003d832:	ins    BYTE PTR es:[rdi],dx
   14003d833:	imul   esi,DWORD PTR [rcx+rdi*2+0x2e],0x6c656400
   14003d83b:	gs je  0x14003d8a3
   14003d83e:	add    BYTE PTR [rax],al
   14003d840:	(bad)  
   14003d841:	fs gs ins BYTE PTR es:[rdi],dx
   14003d844:	gs je  0x14003d8ac
   14003d847:	add    BYTE PTR [rsi+0x65],dh
   14003d84a:	movsxd esi,DWORD PTR [rdi+rbp*2+0x72]
   14003d84e:	cmp    al,0x54
   14003d850:	and    BYTE PTR ds:[rdi+rbp*2+0x6f],dh
   14003d855:	and    BYTE PTR [rdi+rbp*2+0x6e],ch
   14003d859:	add    BYTE PTR [eax],al
   14003d85c:	add    BYTE PTR [rax],al
   14003d85e:	add    BYTE PTR [rax],al
   14003d860:	(bad)  
   14003d861:	(bad)  
   14003d862:	(bad)  
   14003d863:	(bad)  
   14003d864:	(bad)  
   14003d865:	(bad)  
   14003d866:	(bad)  
   14003d867:	inc    DWORD PTR [rbx+0x68]
   14003d86a:	(bad)  
   14003d86b:	outs   dx,BYTE PTR ds:[rsi]
   14003d86c:	addr32 gs push rbx
   14003d86f:	gs jb  0x14003d8e8
   14003d872:	imul   esp,DWORD PTR [rbx+0x65],0x666e6f43
   14003d879:	imul   esp,DWORD PTR [rdi+0x32],0x41
   14003d880:	(bad)  
   14003d881:	fs jbe 0x14003d8e5
   14003d884:	jo     0x14003d8ef
   14003d886:	xor    esi,DWORD PTR [rdx]
   14003d888:	cs fs ins BYTE PTR es:[rdi],dx
   14003d88b:	ins    BYTE PTR es:[rdi],dx
   14003d88c:	add    BYTE PTR [rax],al
   14003d88e:	add    BYTE PTR [rax],al
   14003d890:	jo     0x14003d905
   14003d892:	imul   esi,DWORD PTR [rbx+0x65],0x63697672
   14003d899:	gs pop rdi
   14003d89b:	xor    ch,BYTE PTR [rsi]
   14003d89d:	gs js  0x14003d905
	...
   14003d8b4:	adc    DWORD PTR [rax],ecx
   14003d8b6:	and    bl,BYTE PTR [rbp+rbx*1+0x0]
   14003d8ba:	add    BYTE PTR [rax],dl
   14003d8bc:	add    bl,BYTE PTR [rbx+0x11]
   14003d8bf:	or     al,0x8
   14003d8c1:	pop    rsp
	...
   14003d8ce:	add    BYTE PTR [rax],al
   14003d8d0:	lock fld DWORD PTR [rbx]
   14003d8d3:	rex add DWORD PTR [rax],eax
   14003d8d6:	add    BYTE PTR [rax],al
   14003d8d8:	shl    BYTE PTR [rax+0x0],0x40
   14003d8dc:	add    DWORD PTR [rax],eax
   14003d8de:	add    BYTE PTR [rax],al
   14003d8e0:	shl    BYTE PTR [rax+0x0],1
   14003d8e3:	rex add DWORD PTR [rax],eax
	...
   14003d90e:	add    BYTE PTR [rax],al
   14003d910:	mov    dl,0xd8
   14003d912:	add    eax,DWORD PTR [rax+0x1]
   14003d915:	add    BYTE PTR [rax],al
   14003d917:	add    BYTE PTR [rcx],al
   14003d919:	add    BYTE PTR [rax],al
   14003d91b:	add    BYTE PTR [rdx],al
   14003d91d:	add    BYTE PTR [rip+0x0],al        # 0x14003d923
   14003d923:	add    BYTE PTR [rax],al
   14003d925:	add    BYTE PTR [rax],al
   14003d927:	add    ah,dh
   14003d929:	add    DWORD PTR [rax],eax
   14003d92b:	(bad)  
	...
   14003d948:	add    DWORD PTR [rax],eax
	...
   14003d966:	add    BYTE PTR [rax],al
   14003d968:	movabs al,ds:0x1400058
   14003d971:	add    BYTE PTR [rdx],dh
   14003d973:	rex.W add BYTE PTR [rax],al
   14003d976:	add    BYTE PTR [rax],al
   14003d978:	add    BYTE PTR [rax],al
   14003d97a:	sub    BYTE PTR [rax],al
   14003d97c:	or     BYTE PTR [rax],al
   14003d97e:	xor    al,0x10
   14003d980:	rex.RX add eax,0x10a
   14003d986:	add    BYTE PTR [rax],al
   14003d988:	add    BYTE PTR [rax],al
   14003d98a:	add    BYTE PTR [rax],al
   14003d98c:	or     eax,DWORD PTR [rcx]
   14003d98e:	add    BYTE PTR [rax],al
   14003d990:	add    al,0x0
   14003d992:	rex.W add BYTE PTR [rax],cl
   14003d995:	add    BYTE PTR [rax],cl
   14003d997:	add    BYTE PTR [rdx],dl
   14003d999:	add    BYTE PTR [rax],dl
   14003d99b:	add    BYTE PTR [rsi],al
   14003d99d:	add    BYTE PTR [rax+0x21],dl
   14003d9a0:	sbb    BYTE PTR [rax],al
   14003d9a2:	or     BYTE PTR [rax],al
   14003d9a4:	jo     0x14003d9a6
   14003d9a6:	and    BYTE PTR [rax],al
   14003d9a8:	or     BYTE PTR [rax],al
   14003d9aa:	add    BYTE PTR [rax],al
   14003d9ac:	add    BYTE PTR [rax],al
   14003d9ae:	add    BYTE PTR [rax],al
   14003d9b0:	rcr    al,1
   14003d9b2:	add    eax,DWORD PTR [rax+0x1]
   14003d9b5:	add    BYTE PTR [rax],al
   14003d9b7:	add    BYTE PTR [rax-0x27],ch
   14003d9ba:	add    eax,DWORD PTR [rax+0x1]
   14003d9bd:	add    BYTE PTR [rax],al
   14003d9bf:	add    BYTE PTR [rdx-0x27],dh
   14003d9c2:	add    eax,DWORD PTR [rax+0x1]
   14003d9c5:	add    BYTE PTR [rax],al
   14003d9c7:	add    ah,al
   14003d9c9:	fadd   DWORD PTR [rbx]
   14003d9cb:	rex add DWORD PTR [rax],eax
	...
   14003d9ee:	add    BYTE PTR [rax],al
   14003d9f0:	(bad)  
   14003d9f1:	add    BYTE PTR [rax],al
   14003d9f3:	add    BYTE PTR [rbx-0x9a6f475],dh
   14003d9f9:	rex.WRX movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14003d9fb:	rex.WR or rdi,0xffffffffffffffbe
   14003d9ff:	(bad)  
   14003da00:	(bad)  
   14003da01:	(bad)  
   14003da02:	xchg   BYTE PTR [rcx+rax*1+0x0],dh
   14003da06:	add    BYTE PTR [rax],al
   14003da08:	add    al,0x5d
   14003da0a:	mov    BYTE PTR [rdx+0x11c91ceb],cl
   14003da10:	lahf   
   14003da11:	call   0x1502eda1e
   14003da16:	rex.W (bad) 
   14003da18:	add    al,BYTE PTR [rax]
   14003da1a:	add    BYTE PTR [rax],al
   14003da1c:	add    BYTE PTR [rax],al
   14003da1e:	add    BYTE PTR [rax],al
   14003da20:	mov    BYTE PTR [rdx+0x14004],ch
	...
   14003da3e:	add    BYTE PTR [rax],al
   14003da40:	mov    al,0xd9
   14003da42:	add    eax,DWORD PTR [rax+0x1]
   14003da45:	add    BYTE PTR [rax],al
   14003da47:	add    BYTE PTR [rax],al
   14003da49:	add    BYTE PTR [rax],al
   14003da4b:	add    al,0x0
   14003da4d:	add    BYTE PTR [rax],al
   14003da4f:	add    BYTE PTR [rdx+0x50],dl
   14003da52:	rex.XB and BYTE PTR [rip+0x6c616d20],bpl        # 0x1ac654779
   14003da59:	outs   dx,WORD PTR ds:[rsi]
   14003da5b:	jb     0x14003daca
   14003da5d:	gs and BYTE PTR fs:[rdx+0x65],dh
   14003da62:	jno    0x14003dad9
   14003da64:	gs jae 0x14003dadb
   14003da67:	add    BYTE PTR cs:[rax],al
   14003da6a:	add    BYTE PTR [rax],al
   14003da6c:	add    BYTE PTR [rax],al
   14003da6e:	add    BYTE PTR [rax],al
   14003da70:	push   rax
   14003da71:	jae    0x14003dadc
   14003da73:	rex.RB js 0x14003dadb
   14003da76:	movsxd esi,DWORD PTR [rbp+0x74]
   14003da79:	gs rex.RX jne 0x14003daeb
   14003da7d:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14003da81:	outs   dx,BYTE PTR ds:[rsi]
   14003da82:	add    BYTE PTR [rax],al
   14003da84:	add    BYTE PTR [rax],al
   14003da86:	add    BYTE PTR [rax],al
   14003da88:	outs   dx,BYTE PTR ds:[rsi]
   14003da89:	movsxd esp,DWORD PTR [rcx+0x6c]
   14003da8c:	jb     0x14003dafe
   14003da8e:	movsxd eax,DWORD PTR [rax]
   14003da90:	and    al,BYTE PTR [rip+0x41993]        # 0x14007f429
   14003da96:	add    BYTE PTR [rax],al
   14003da98:	rex.WR
   14003da99:	rex.WR add al,0x0
   14003da9c:	add    al,BYTE PTR [rax]
   14003da9e:	add    BYTE PTR [rax],al
   14003daa0:	cld    
   14003daa1:	rex.WXB add al,0x0
   14003daa4:	or     DWORD PTR [rax],eax
   14003daa6:	add    BYTE PTR [rax],al
   14003daa8:	ins    BYTE PTR es:[rdi],dx
   14003daa9:	rex.WR add al,0x0
   14003daac:	sub    BYTE PTR [rax],al
   14003daae:	add    BYTE PTR [rax],al
   14003dab0:	add    BYTE PTR [rax],al
   14003dab2:	add    BYTE PTR [rax],al
   14003dab4:	add    DWORD PTR [rax],eax
	...
   14003dabe:	add    BYTE PTR [rax],al
   14003dac0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f459
   14003dac6:	add    BYTE PTR [rax],al
   14003dac8:	(bad)  
   14003dac9:	rex.WRX add al,0x0
	...
   14003dad4:	add    eax,DWORD PTR [rax]
   14003dad6:	add    BYTE PTR [rax],al
   14003dad8:	push   rax
   14003dad9:	rex.WRB add al,0x0
   14003dadc:	and    BYTE PTR [rax],al
   14003dade:	add    BYTE PTR [rax],al
   14003dae0:	add    BYTE PTR [rax],al
   14003dae2:	add    BYTE PTR [rax],al
   14003dae4:	add    DWORD PTR [rax],eax
	...
   14003daee:	add    BYTE PTR [rax],al
   14003daf0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f489
   14003daf6:	add    BYTE PTR [rax],al
   14003daf8:	(bad)  
   14003daf9:	rex.WRX add al,0x0
	...
   14003db04:	add    eax,DWORD PTR [rax]
   14003db06:	add    BYTE PTR [rax],al
   14003db08:	jl     0x14003db57
   14003db0a:	add    al,0x0
   14003db0c:	and    BYTE PTR [rax],al
   14003db0e:	add    BYTE PTR [rax],al
   14003db10:	add    BYTE PTR [rax],al
   14003db12:	add    BYTE PTR [rax],al
   14003db14:	add    DWORD PTR [rax],eax
	...
   14003db1e:	add    BYTE PTR [rax],al
   14003db20:	and    al,BYTE PTR [rip+0x51993]        # 0x14008f4b9
   14003db26:	add    BYTE PTR [rax],al
   14003db28:	mov    al,0x4d
   14003db2a:	add    al,0x0
	...
   14003db34:	(bad)  
   14003db35:	add    BYTE PTR [rax],al
   14003db37:	add    al,bl
   14003db39:	rex.WRB add al,0x0
   14003db3c:	and    BYTE PTR [rax],al
   14003db3e:	add    BYTE PTR [rax],al
   14003db40:	add    BYTE PTR [rax],al
   14003db42:	add    BYTE PTR [rax],al
   14003db44:	add    DWORD PTR [rax],eax
	...
   14003db4e:	add    BYTE PTR [rax],al
   14003db50:	and    al,BYTE PTR [rip+0x31993]        # 0x14006f4e9
   14003db56:	add    BYTE PTR [rax],al
   14003db58:	push   0x100044e
   14003db5d:	add    BYTE PTR [rax],al
   14003db5f:	add    BYTE PTR [rax+0x4e],al
   14003db62:	add    al,0x0
   14003db64:	or     BYTE PTR [rax],al
   14003db66:	add    BYTE PTR [rax],al
   14003db68:	or     BYTE PTR [rsi+0x4],0x0
   14003db6c:	and    BYTE PTR [rax],al
   14003db6e:	add    BYTE PTR [rax],al
   14003db70:	add    BYTE PTR [rax],al
   14003db72:	add    BYTE PTR [rax],al
   14003db74:	add    DWORD PTR [rax],eax
	...
   14003db7e:	add    BYTE PTR [rax],al
   14003db80:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f519
   14003db86:	add    BYTE PTR [rax],al
   14003db88:	(bad)  
   14003db89:	rex.WRX add al,0x0
	...
   14003db94:	add    eax,DWORD PTR [rax]
   14003db96:	add    BYTE PTR [rax],al
   14003db98:	fmul   QWORD PTR [rsi+0x4]
   14003db9b:	add    BYTE PTR [rax],ah
   14003db9d:	add    BYTE PTR [rax],al
   14003db9f:	add    BYTE PTR [rax],al
   14003dba1:	add    BYTE PTR [rax],al
   14003dba3:	add    BYTE PTR [rcx],al
	...
   14003dbad:	add    BYTE PTR [rax],al
   14003dbaf:	add    BYTE PTR [rdx],ah
   14003dbb1:	add    eax,0x11993
   14003dbb6:	add    BYTE PTR [rax],al
   14003dbb8:	or     BYTE PTR [rbx+0x4],dl
	...
   14003dbc3:	add    BYTE PTR [rip+0x48000000],al        # 0x18803dbc9
   14003dbc9:	rex.WRXB add al,0x0
   14003dbcc:	rex.W add BYTE PTR [rax],al
   14003dbcf:	add    BYTE PTR [rax],al
   14003dbd1:	add    BYTE PTR [rax],al
   14003dbd3:	add    BYTE PTR [rcx],al
	...
   14003dbdd:	add    BYTE PTR [rax],al
   14003dbdf:	add    BYTE PTR [rdx],ah
   14003dbe1:	add    eax,0x11993
   14003dbe6:	add    BYTE PTR [rax],al
   14003dbe8:	pushf  
   14003dbe9:	(bad)  
   14003dbea:	add    al,0x0
	...
   14003dbf4:	(bad)  
   14003dbf5:	add    BYTE PTR [rax],al
   14003dbf7:	add    BYTE PTR [rax+0x2000044f],dh
   14003dbfd:	add    BYTE PTR [rax],al
   14003dbff:	add    BYTE PTR [rax],al
   14003dc01:	add    BYTE PTR [rax],al
   14003dc03:	add    BYTE PTR [rcx],al
	...
   14003dc0d:	add    BYTE PTR [rax],al
   14003dc0f:	add    BYTE PTR [rdx],ah
   14003dc11:	add    eax,0x31993
   14003dc16:	add    BYTE PTR [rax],al
   14003dc18:	or     al,0x50
   14003dc1a:	add    al,0x0
	...
   14003dc24:	sbb    BYTE PTR [rax],al
   14003dc26:	add    BYTE PTR [rax],al
   14003dc28:	and    al,0x50
   14003dc2a:	add    al,0x0
   14003dc2c:	push   rax
   14003dc2d:	add    BYTE PTR [rax],al
   14003dc2f:	add    BYTE PTR [rax],al
   14003dc31:	add    BYTE PTR [rax],al
   14003dc33:	add    BYTE PTR [rcx],al
	...
   14003dc3d:	add    BYTE PTR [rax],al
   14003dc3f:	add    BYTE PTR [rdx],ah
   14003dc41:	add    eax,0x11993
   14003dc46:	add    BYTE PTR [rax],al
   14003dc48:	or     BYTE PTR [rcx+0x4],dl
	...
   14003dc53:	add    BYTE PTR [rcx],cl
   14003dc55:	add    BYTE PTR [rax],al
   14003dc57:	add    BYTE PTR [rax],dl
   14003dc59:	push   rcx
   14003dc5a:	add    al,0x0
   14003dc5c:	sub    BYTE PTR [rax],al
   14003dc5e:	add    BYTE PTR [rax],al
   14003dc60:	add    BYTE PTR [rax],al
   14003dc62:	add    BYTE PTR [rax],al
   14003dc64:	add    DWORD PTR [rax],eax
	...
   14003dc6e:	add    BYTE PTR [rax],al
   14003dc70:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f609
   14003dc76:	add    BYTE PTR [rax],al
   14003dc78:	adc    BYTE PTR [rcx+0x4],0x0
	...
   14003dc84:	adc    al,0x0
   14003dc86:	add    BYTE PTR [rax],al
   14003dc88:	nop
   14003dc89:	push   rcx
   14003dc8a:	add    al,0x0
   14003dc8c:	xor    BYTE PTR [rax],al
   14003dc8e:	add    BYTE PTR [rax],al
   14003dc90:	add    BYTE PTR [rax],al
   14003dc92:	add    BYTE PTR [rax],al
   14003dc94:	add    DWORD PTR [rax],eax
	...
   14003dc9e:	add    BYTE PTR [rax],al
   14003dca0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f639
   14003dca6:	add    BYTE PTR [rax],al
   14003dca8:	or     BYTE PTR [rbx+0x4],dl
	...
   14003dcb3:	add    BYTE PTR [rdi],al
   14003dcb5:	add    BYTE PTR [rax],al
   14003dcb7:	add    BYTE PTR [rax+0x52],dl
   14003dcba:	add    al,0x0
   14003dcbc:	rex.W add BYTE PTR [rax],al
   14003dcbf:	add    BYTE PTR [rax],al
   14003dcc1:	add    BYTE PTR [rax],al
   14003dcc3:	add    BYTE PTR [rcx],al
	...
   14003dccd:	add    BYTE PTR [rax],al
   14003dccf:	add    BYTE PTR [rdx],ah
   14003dcd1:	add    eax,0x11993
   14003dcd6:	add    BYTE PTR [rax],al
   14003dcd8:	test   al,0x52
   14003dcda:	add    al,0x0
	...
   14003dce4:	(bad)  
   14003dce5:	add    BYTE PTR [rax],al
   14003dce7:	add    BYTE PTR [rax+0x48000452],dh
   14003dced:	add    BYTE PTR [rax],al
   14003dcef:	add    BYTE PTR [rax],al
   14003dcf1:	add    BYTE PTR [rax],al
   14003dcf3:	add    BYTE PTR [rcx],al
	...
   14003dcfd:	add    BYTE PTR [rax],al
   14003dcff:	add    BYTE PTR [rdx],ah
   14003dd01:	add    eax,0x11993
   14003dd06:	add    BYTE PTR [rax],al
   14003dd08:	or     BYTE PTR [rbx+0x4],dl
	...
   14003dd13:	add    BYTE PTR [rdi],al
   14003dd15:	add    BYTE PTR [rax],al
   14003dd17:	add    BYTE PTR [rax],dl
   14003dd19:	push   rbx
   14003dd1a:	add    al,0x0
   14003dd1c:	rex.W add BYTE PTR [rax],al
   14003dd1f:	add    BYTE PTR [rax],al
   14003dd21:	add    BYTE PTR [rax],al
   14003dd23:	add    BYTE PTR [rcx],al
	...
   14003dd2d:	add    BYTE PTR [rax],al
   14003dd2f:	add    BYTE PTR [rdx],ah
   14003dd31:	add    eax,0x21993
   14003dd36:	add    BYTE PTR [rax],al
   14003dd38:	ins    BYTE PTR es:[rdi],dx
   14003dd39:	push   rbx
   14003dd3a:	add    al,0x0
	...
   14003dd44:	sldt   WORD PTR [rax]
   14003dd47:	add    BYTE PTR [rbx+rdx*2+0x4],bh
   14003dd4b:	add    BYTE PTR [rax+0x0],bl
   14003dd51:	add    BYTE PTR [rax],al
   14003dd53:	add    BYTE PTR [rcx],al
	...
   14003dd5d:	add    BYTE PTR [rax],al
   14003dd5f:	add    BYTE PTR [rdx],ah
   14003dd61:	add    eax,0x41993
   14003dd66:	add    BYTE PTR [rax],al
   14003dd68:	sbb    BYTE PTR [rsp+rax*1+0x0],dl
	...
   14003dd74:	(bad)  
   14003dd75:	add    BYTE PTR [rax],al
   14003dd77:	add    BYTE PTR [rax],bh
   14003dd79:	push   rsp
   14003dd7a:	add    al,0x0
   14003dd7c:	sub    BYTE PTR [rax],al
   14003dd7e:	add    BYTE PTR [rax],al
   14003dd80:	add    BYTE PTR [rax],al
   14003dd82:	add    BYTE PTR [rax],al
   14003dd84:	add    DWORD PTR [rax],eax
	...
   14003dd8e:	add    BYTE PTR [rax],al
   14003dd90:	and    al,BYTE PTR [rip+0x51993]        # 0x14008f729
   14003dd96:	add    BYTE PTR [rax],al
   14003dd98:	fcom   DWORD PTR [rsp+rax*1+0x0]
   14003dd9c:	add    DWORD PTR [rax],eax
   14003dd9e:	add    BYTE PTR [rax],al
   14003dda0:	mov    al,0x54
   14003dda2:	add    al,0x0
   14003dda4:	or     BYTE PTR [rax],al
   14003dda6:	add    BYTE PTR [rax],al
   14003dda8:	add    BYTE PTR [rbp+0x4],dl
   14003ddab:	add    BYTE PTR [rax+0x0],al
   14003ddae:	add    BYTE PTR [rax],al
   14003ddb0:	add    BYTE PTR [rax],al
   14003ddb2:	add    BYTE PTR [rax],al
   14003ddb4:	add    DWORD PTR [rax],eax
	...
   14003ddbe:	add    BYTE PTR [rax],al
   14003ddc0:	and    al,BYTE PTR [rip+0x31993]        # 0x14006f759
   14003ddc6:	add    BYTE PTR [rax],al
   14003ddc8:	cwde   
   14003ddc9:	push   rbp
   14003ddca:	add    al,0x0
   14003ddcc:	add    DWORD PTR [rax],eax
   14003ddce:	add    BYTE PTR [rax],al
   14003ddd0:	jo     0x14003de27
   14003ddd2:	add    al,0x0
   14003ddd4:	or     BYTE PTR [rax],al
   14003ddd6:	add    BYTE PTR [rax],al
   14003ddd8:	mov    al,0x55
   14003ddda:	add    al,0x0
   14003dddc:	and    BYTE PTR [rax],al
   14003ddde:	add    BYTE PTR [rax],al
   14003dde0:	add    BYTE PTR [rax],al
   14003dde2:	add    BYTE PTR [rax],al
   14003dde4:	add    DWORD PTR [rax],eax
	...
   14003ddee:	add    BYTE PTR [rax],al
   14003ddf0:	and    al,BYTE PTR [rip+0x21993]        # 0x14005f789
   14003ddf6:	add    BYTE PTR [rax],al
   14003ddf8:	adc    BYTE PTR [rsi+0x4],dl
	...
   14003de03:	add    BYTE PTR [rax+rax*1],al
   14003de06:	add    BYTE PTR [rax],al
   14003de08:	and    BYTE PTR [rsi+0x4],dl
   14003de0b:	add    BYTE PTR [rax],ah
   14003de0d:	add    BYTE PTR [rax],al
   14003de0f:	add    BYTE PTR [rax],al
   14003de11:	add    BYTE PTR [rax],al
   14003de13:	add    BYTE PTR [rcx],al
	...
   14003de1d:	add    BYTE PTR [rax],al
   14003de1f:	add    BYTE PTR [rdx],ah
   14003de21:	add    eax,0x61993
   14003de26:	add    BYTE PTR [rax],al
   14003de28:	fcom   QWORD PTR [rsi+0x4]
   14003de2b:	add    BYTE PTR [rdx],al
   14003de2d:	add    BYTE PTR [rax],al
   14003de2f:	add    BYTE PTR [rsi+rdx*2+0xe0004],cl
   14003de36:	add    BYTE PTR [rax],al
   14003de38:	or     al,0x57
   14003de3a:	add    al,0x0
   14003de3c:	(bad)  
   14003de3d:	add    BYTE PTR [rax],al
   14003de3f:	add    BYTE PTR [rax],al
   14003de41:	add    BYTE PTR [rax],al
   14003de43:	add    BYTE PTR [rcx],al
	...
   14003de4d:	add    BYTE PTR [rax],al
   14003de4f:	add    BYTE PTR [rdx],ah
   14003de51:	add    eax,0x31993
   14003de56:	add    BYTE PTR [rax],al
   14003de58:	fcom   QWORD PTR [rdi+0x4]
   14003de5b:	add    BYTE PTR [rcx],al
   14003de5d:	add    BYTE PTR [rax],al
   14003de5f:	add    BYTE PTR [rdi+rdx*2+0x70004],dh
   14003de66:	add    BYTE PTR [rax],al
   14003de68:	hlt    
   14003de69:	push   rdi
   14003de6a:	add    al,0x0
   14003de6c:	xor    BYTE PTR [rax],al
   14003de6e:	add    BYTE PTR [rax],al
   14003de70:	add    BYTE PTR [rax],al
   14003de72:	add    BYTE PTR [rax],al
   14003de74:	add    DWORD PTR [rax],eax
	...
   14003de7e:	add    BYTE PTR [rax],al
   14003de80:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f819
   14003de86:	add    BYTE PTR [rax],al
   14003de88:	cmp    al,0x58
   14003de8a:	add    al,0x0
	...
   14003de94:	add    eax,DWORD PTR [rax]
   14003de96:	add    BYTE PTR [rax],al
   14003de98:	rex.R pop rax
   14003de9a:	add    al,0x0
   14003de9c:	and    BYTE PTR [rax],al
   14003de9e:	add    BYTE PTR [rax],al
   14003dea0:	add    BYTE PTR [rax],al
   14003dea2:	add    BYTE PTR [rax],al
   14003dea4:	add    DWORD PTR [rax],eax
	...
   14003deae:	add    BYTE PTR [rax],al
   14003deb0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f849
   14003deb6:	add    BYTE PTR [rax],al
   14003deb8:	je     0x14003df12
   14003deba:	add    al,0x0
	...
   14003dec4:	add    eax,0x7c000000
   14003dec9:	pop    rax
   14003deca:	add    al,0x0
   14003decc:	cmp    BYTE PTR [rax],al
   14003dece:	add    BYTE PTR [rax],al
   14003ded0:	add    BYTE PTR [rax],al
   14003ded2:	add    BYTE PTR [rax],al
   14003ded4:	add    DWORD PTR [rax],eax
	...
   14003dede:	add    BYTE PTR [rax],al
   14003dee0:	and    al,BYTE PTR [rip+0x11993]        # 0x14004f879
   14003dee6:	add    BYTE PTR [rax],al
   14003dee8:	or     BYTE PTR [rbx+0x4],dl
	...
   14003def3:	add    BYTE PTR [rip+0xffffffffc4000000],al        # 0x10403def9
   14003def9:	pop    rax
   14003defa:	add    al,0x0
   14003defc:	rex.W add BYTE PTR [rax],al
   14003deff:	add    BYTE PTR [rax],al
   14003df01:	add    BYTE PTR [rax],al
   14003df03:	add    BYTE PTR [rcx],al
	...
   14003df0d:	add    BYTE PTR [rax],al
   14003df0f:	add    BYTE PTR [rdx],ah
   14003df11:	add    eax,0xe1993
   14003df16:	add    BYTE PTR [rax],al
   14003df18:	adc    BYTE PTR [rcx+0x4],bl
	...
   14003df23:	add    BYTE PTR [rax+rax*1],ch
   14003df26:	add    BYTE PTR [rax],al
   14003df28:	sbb    BYTE PTR [rcx+0x4],0x0
   14003df2c:	fadd   DWORD PTR [rax]
   14003df2e:	add    BYTE PTR [rax],al
   14003df30:	add    BYTE PTR [rax],al
   14003df32:	add    BYTE PTR [rax],al
   14003df34:	add    DWORD PTR [rax],eax
	...
   14003df3e:	add    BYTE PTR [rax],al
   14003df40:	and    al,BYTE PTR [rip+0xc1993]        # 0x1400ff8d9
   14003df46:	add    BYTE PTR [rax],al
   14003df48:	cmp    al,0x5b
   14003df4a:	add    al,0x0
   14003df4c:	add    DWORD PTR [rax],eax
   14003df4e:	add    BYTE PTR [rax],al
   14003df50:	adc    al,0x5b
   14003df52:	add    al,0x0
   14003df54:	sbb    eax,0x9c000000
   14003df59:	pop    rbx
   14003df5a:	add    al,0x0
   14003df5c:	mov    eax,0x0
   14003df61:	add    BYTE PTR [rax],al
   14003df63:	add    BYTE PTR [rcx],al
   14003df65:	add    BYTE PTR [rax],al
   14003df67:	add    BYTE PTR [rdx+0x53],dl
   14003df6a:	rex.R push rbx
   14003df6c:	or     bh,BYTE PTR [rcx+0x73e6da50]
   14003df72:	add    al,BYTE PTR [rbp-0x6d]
   14003df75:	fidivr WORD PTR [rcx+0x6b99a4dc]
   14003df7b:	leave  
   14003df7c:	add    DWORD PTR [rax],eax
   14003df7e:	add    BYTE PTR [rax],al
   14003df80:	movsxd edi,DWORD PTR [rdx]
   14003df82:	pop    rsp
   14003df83:	rex.X jne 0x14003dfef
   14003df86:	ins    BYTE PTR es:[rdi],dx
   14003df87:	fs pop rsp
   14003df89:	push   rax
   14003df8a:	push   rbx
   14003df8b:	rex.WB
   14003df8c:	rex.WXB
   14003df8d:	gs jns 0x14003dfec
   14003df90:	rex.X push rdx
   14003df92:	rex.B
   14003df93:	rex.WRX
   14003df94:	rex.XB
   14003df95:	rex.W pop rdi
   14003df97:	rex.B
   14003df98:	rex.XB push r12
   14003df9a:	rex.WB push r14
   14003df9c:	push   r12
   14003df9e:	rex.WRXB push r10
   14003dfa0:	pop    rdi
   14003dfa1:	xor    ebx,DWORD PTR [rdi+0x32]
   14003dfa4:	pop    rdi
   14003dfa5:	xor    BYTE PTR [rax+rdx*2+0x61],bl
   14003dfa9:	jb     0x14003e01f
   14003dfab:	jae    0x14003e009
   14003dfad:	(bad)  
   14003dfae:	imul   ebp,DWORD PTR [rsi+0x5c],0x656c6552
   14003dfb5:	(bad)  
   14003dfb6:	jae    0x14003e01d
   14003dfb8:	rex.B outs dx,BYTE PTR ds:[rsi]
   14003dfba:	je     0x14003e025
   14003dfbc:	rex.XB jb 0x14003e020
   14003dfbf:	movsxd ebp,DWORD PTR [rbx+0x5f]
   14003dfc2:	js     0x14003dffa
   14003dfc4:	xor    al,0x5c
   14003dfc6:	push   rax
   14003dfc7:	push   rbx
   14003dfc8:	rex.WB push r11
   14003dfca:	gs jb  0x14003e043
   14003dfcd:	imul   esp,DWORD PTR [rbx+0x65],0x702e325f
   14003dfd4:	fs (bad) 
	...
   14003dfde:	add    BYTE PTR [rax],al
   14003dfe0:	add    DWORD PTR [rax],eax
	...
   14003dfea:	add    BYTE PTR [rax],al
   14003dfec:	sbb    BYTE PTR [rcx-0x1ff7fffc],al
   14003dff2:	add    eax,DWORD PTR [rax]
   14003dff4:	loopne 0x14003dfd5
   14003dff6:	add    eax,DWORD PTR [rax]
	...
   14003e010:	add    eax,DWORD PTR [rax]
   14003e012:	add    BYTE PTR [rax],al
   14003e014:	and    al,ah
   14003e016:	add    eax,DWORD PTR [rax]
	...
   14003e020:	rex loopne 0x14003e026
   14003e023:	add    BYTE PTR [rax-0x20],ch
   14003e026:	add    eax,DWORD PTR [rax]
   14003e028:	shl    al,0x3
	...
   14003e03f:	add    BYTE PTR [rax],bl
   14003e041:	add    DWORD PTR [rax+rax*1],0x2
   14003e048:	add    BYTE PTR [rax],al
   14003e04a:	add    BYTE PTR [rax],al
   14003e04c:	(bad)  
   14003e04d:	(bad)  
   14003e04e:	(bad)  
   14003e04f:	inc    DWORD PTR [rax]
   14003e051:	add    BYTE PTR [rax],al
   14003e053:	add    BYTE PTR [rax+0x0],al
   14003e056:	add    BYTE PTR [rax],al
   14003e058:	or     al,ah
   14003e05a:	add    eax,DWORD PTR [rax]
	...
   14003e068:	rex add DWORD PTR [rax+rax*1],0x1
   14003e070:	add    BYTE PTR [rax],al
   14003e072:	add    BYTE PTR [rax],al
   14003e074:	(bad)  
   14003e075:	(bad)  
   14003e076:	(bad)  
   14003e077:	inc    DWORD PTR [rax]
   14003e079:	add    BYTE PTR [rax],al
   14003e07b:	add    BYTE PTR [rax+0x0],al
   14003e07e:	add    BYTE PTR [rax],al
   14003e080:	nop
   14003e081:	loopne 0x14003e086
	...
   14003e097:	add    BYTE PTR [rdx],al
   14003e099:	add    BYTE PTR [rax],al
   14003e09b:	add    BYTE PTR [rax+0x3e0],ch
   14003e0a1:	add    BYTE PTR [rax],al
   14003e0a3:	add    BYTE PTR [rax],al
   14003e0a5:	add    BYTE PTR [rax],al
   14003e0a7:	add    BYTE PTR [rax-0x20],ch
   14003e0aa:	add    eax,DWORD PTR [rax]
   14003e0ac:	shl    al,0x3
	...
   14003e0bf:	add    BYTE PTR [rax-0x7f],ch
   14003e0c2:	add    al,0x0
	...
   14003e0cc:	(bad)  
   14003e0cd:	(bad)  
   14003e0ce:	(bad)  
   14003e0cf:	inc    DWORD PTR [rax]
   14003e0d1:	add    BYTE PTR [rax],al
   14003e0d3:	add    BYTE PTR [rax+0x0],al
   14003e0d6:	add    BYTE PTR [rax],al
   14003e0d8:	call   0x14003e4bd
	...
   14003e0ed:	add    BYTE PTR [rax],al
   14003e0ef:	add    BYTE PTR [rcx],al
   14003e0f1:	add    BYTE PTR [rax],al
   14003e0f3:	add    BYTE PTR [rax],al
   14003e0f5:	loope  0x14003e0fa
	...
   14003e0ff:	add    al,al
   14003e101:	loopne 0x14003e106
	...
   14003e10f:	add    BYTE PTR [rcx],al
	...
   14003e119:	add    BYTE PTR [rax],al
   14003e11b:	add    BYTE PTR [rax+0x38000481],cl
   14003e121:	loope  0x14003e126
   14003e123:	add    BYTE PTR [rax],dl
   14003e125:	loope  0x14003e12a
	...
   14003e13f:	add    BYTE PTR [rax+rax*1],al
   14003e142:	add    BYTE PTR [rax],al
   14003e144:	push   rax
   14003e145:	loope  0x14003e14a
	...
   14003e14f:	add    BYTE PTR [rax-0x1f],bh
   14003e152:	add    eax,DWORD PTR [rax]
   14003e154:	rex loopne 0x14003e15a
   14003e157:	add    BYTE PTR [rax-0x20],ch
   14003e15a:	add    eax,DWORD PTR [rax]
   14003e15c:	shl    al,0x3
	...
   14003e177:	add    BYTE PTR [rax+0x3000481],cl
   14003e17d:	add    BYTE PTR [rax],al
   14003e17f:	add    BYTE PTR [rax],al
   14003e181:	add    BYTE PTR [rax],al
   14003e183:	add    bh,bh
   14003e185:	(bad)  
   14003e186:	(bad)  
   14003e187:	inc    DWORD PTR [rax]
   14003e189:	add    BYTE PTR [rax],al
   14003e18b:	add    BYTE PTR [rax+0x0],al
   14003e18e:	add    BYTE PTR [rax],al
   14003e190:	cmp    cl,ah
   14003e192:	add    eax,DWORD PTR [rax]
	...
   14003e1a0:	add    DWORD PTR [rax],eax
	...
   14003e1aa:	add    BYTE PTR [rax],al
   14003e1ac:	mov    al,0x81
   14003e1ae:	add    al,0x0
   14003e1b0:	enter  0x3e1,0x0
   14003e1b4:	movabs al,ds:0x3e1
	...
   14003e1cd:	add    BYTE PTR [rax],al
   14003e1cf:	add    BYTE PTR [rax+rax*1],al
   14003e1d2:	add    BYTE PTR [rax],al
   14003e1d4:	loopne 0x14003e1b7
   14003e1d6:	add    eax,DWORD PTR [rax]
	...
   14003e1e0:	or     dl,ah
   14003e1e2:	add    eax,DWORD PTR [rax]
   14003e1e4:	rex loopne 0x14003e1ea
   14003e1e7:	add    BYTE PTR [rax-0x20],ch
   14003e1ea:	add    eax,DWORD PTR [rax]
   14003e1ec:	shl    al,0x3
	...
   14003e207:	add    BYTE PTR [rax+0x3000481],dh
   14003e20d:	add    BYTE PTR [rax],al
   14003e20f:	add    BYTE PTR [rax],al
   14003e211:	add    BYTE PTR [rax],al
   14003e213:	add    bh,bh
   14003e215:	(bad)  
   14003e216:	(bad)  
   14003e217:	inc    DWORD PTR [rax]
   14003e219:	add    BYTE PTR [rax],al
   14003e21b:	add    BYTE PTR [rax+0x0],al
   14003e21e:	add    BYTE PTR [rax],al
   14003e220:	enter  0x3e1,0x0
	...
   14003e230:	add    DWORD PTR [rax],eax
	...
   14003e23a:	add    BYTE PTR [rax],al
   14003e23c:	loopne 0x14003e1bf
   14003e23e:	add    al,0x0
   14003e240:	pop    rax
   14003e241:	loop   0x14003e246
   14003e243:	add    BYTE PTR [rax],dh
   14003e245:	loop   0x14003e24a
	...
   14003e25f:	add    BYTE PTR [rax+rax*1],al
   14003e262:	add    BYTE PTR [rax],al
   14003e264:	jo     0x14003e248
   14003e266:	add    eax,DWORD PTR [rax]
	...
   14003e270:	cwde   
   14003e271:	loop   0x14003e276
   14003e273:	add    BYTE PTR [rax-0x20],al
   14003e276:	add    eax,DWORD PTR [rax]
   14003e278:	push   0xffffffffc00003e0
   14003e27d:	loopne 0x14003e282
	...
   14003e297:	add    al,ah
   14003e299:	add    DWORD PTR [rax+rax*1],0x3
   14003e2a0:	add    BYTE PTR [rax],al
   14003e2a2:	add    BYTE PTR [rax],al
   14003e2a4:	(bad)  
   14003e2a5:	(bad)  
   14003e2a6:	(bad)  
   14003e2a7:	inc    DWORD PTR [rax]
   14003e2a9:	add    BYTE PTR [rax],al
   14003e2ab:	add    BYTE PTR [rax+0x0],al
   14003e2ae:	add    BYTE PTR [rax],al
   14003e2b0:	pop    rax
   14003e2b1:	loop   0x14003e2b6
	...
   14003e2bf:	add    BYTE PTR [rcx],al
	...
   14003e2c9:	add    BYTE PTR [rax],al
   14003e2cb:	add    al,dh
   14003e2cd:	add    DWORD PTR [rax+rax*1],0xffffffe8
   14003e2d1:	loop   0x14003e2d6
   14003e2d3:	add    al,al
   14003e2d5:	loop   0x14003e2da
	...
   14003e2ef:	add    BYTE PTR [rdx],al
   14003e2f1:	add    BYTE PTR [rax],al
   14003e2f3:	add    BYTE PTR [rax],al
   14003e2f5:	jrcxz  0x14003e2fa
	...
   14003e2ff:	add    BYTE PTR [rax],bl
   14003e301:	jrcxz  0x14003e306
   14003e303:	add    BYTE PTR [rax-0x1d],al
   14003e306:	add    eax,DWORD PTR [rax]
	...
   14003e318:	lock add DWORD PTR [rax+rax*1],0x1
   14003e31d:	add    BYTE PTR [rax],al
   14003e31f:	add    BYTE PTR [rax],al
   14003e321:	add    BYTE PTR [rax],al
   14003e323:	add    bh,bh
   14003e325:	(bad)  
   14003e326:	(bad)  
   14003e327:	inc    DWORD PTR [rax]
   14003e329:	add    BYTE PTR [rax],al
   14003e32b:	add    BYTE PTR [rax+0x0],al
   14003e32e:	add    BYTE PTR [rax],al
   14003e330:	call   0x14003e717
	...
   14003e33d:	add    BYTE PTR [rax],al
   14003e33f:	add    BYTE PTR [rax],bl
   14003e341:	test   BYTE PTR [rax+rax*1],al
	...
   14003e34c:	(bad)  
   14003e34d:	(bad)  
   14003e34e:	(bad)  
   14003e34f:	inc    DWORD PTR [rax]
   14003e351:	add    BYTE PTR [rax],al
   14003e353:	add    BYTE PTR [rax+0x0],al
   14003e356:	add    BYTE PTR [rax],al
   14003e358:	push   0x3e3
	...
   14003e36d:	add    BYTE PTR [rax],al
   14003e36f:	add    BYTE PTR [rcx],al
   14003e371:	add    BYTE PTR [rax],al
   14003e373:	add    BYTE PTR [rax+0x3e3],al
   14003e379:	add    BYTE PTR [rax],al
   14003e37b:	add    BYTE PTR [rax],al
   14003e37d:	add    BYTE PTR [rax],al
   14003e37f:	add    BYTE PTR [rax-0x1d],al
   14003e382:	add    eax,DWORD PTR [rax]
	...
   14003e390:	add    DWORD PTR [rax],eax
	...
   14003e39a:	add    BYTE PTR [rax],al
   14003e39c:	test   BYTE PTR [rax+rax*1],al
   14003e3a0:	mov    eax,0x900003e3
   14003e3a5:	jrcxz  0x14003e3aa
	...
   14003e3bf:	add    BYTE PTR [rdx],al
   14003e3c1:	add    BYTE PTR [rax],al
   14003e3c3:	add    al,dl
   14003e3c5:	jrcxz  0x14003e3ca
	...
   14003e3cf:	add    al,ch
   14003e3d1:	jrcxz  0x14003e3d6
   14003e3d3:	add    BYTE PTR [rax-0x1d],al
   14003e3d6:	add    eax,DWORD PTR [rax]
	...
   14003e3e8:	test   BYTE PTR [rax+rax*1],al
   14003e3ec:	add    DWORD PTR [rax],eax
   14003e3ee:	add    BYTE PTR [rax],al
   14003e3f0:	add    BYTE PTR [rax],al
   14003e3f2:	add    BYTE PTR [rax],al
   14003e3f4:	(bad)  
   14003e3f5:	(bad)  
   14003e3f6:	(bad)  
   14003e3f7:	inc    DWORD PTR [rax]
   14003e3f9:	add    BYTE PTR [rax],al
   14003e3fb:	add    BYTE PTR [rax+0x0],al
   14003e3fe:	add    BYTE PTR [rax],al
   14003e400:	mov    eax,0x3e3
	...
   14003e40d:	add    BYTE PTR [rax],al
   14003e40f:	add    BYTE PTR [rcx],al
	...
   14003e419:	add    BYTE PTR [rax],al
   14003e41b:	add    BYTE PTR [rax-0x7c],ch
   14003e41e:	add    al,0x0
   14003e420:	cmp    ah,ah
   14003e422:	add    eax,DWORD PTR [rax]
   14003e424:	adc    ah,ah
   14003e426:	add    eax,DWORD PTR [rax]
	...
   14003e440:	add    al,BYTE PTR [rax]
   14003e442:	add    BYTE PTR [rax],al
   14003e444:	push   rax
   14003e445:	in     al,0x3
	...
   14003e44f:	add    BYTE PTR [rax-0x1c],ch
   14003e452:	add    eax,DWORD PTR [rax]
   14003e454:	rex jrcxz 0x14003e45a
	...
   14003e467:	add    BYTE PTR [rax-0x7c],ch
   14003e46a:	add    al,0x0
   14003e46c:	add    DWORD PTR [rax],eax
   14003e46e:	add    BYTE PTR [rax],al
   14003e470:	add    BYTE PTR [rax],al
   14003e472:	add    BYTE PTR [rax],al
   14003e474:	(bad)  
   14003e475:	(bad)  
   14003e476:	(bad)  
   14003e477:	inc    DWORD PTR [rax]
   14003e479:	add    BYTE PTR [rax],al
   14003e47b:	add    BYTE PTR [rax+0x0],al
   14003e47e:	add    BYTE PTR [rax],al
   14003e480:	cmp    ah,ah
   14003e482:	add    eax,DWORD PTR [rax]
	...
   14003e490:	add    DWORD PTR [rax],eax
	...
   14003e49a:	add    BYTE PTR [rax],al
   14003e49c:	cwde   
   14003e49d:	test   BYTE PTR [rax+rax*1],al
   14003e4a0:	mov    eax,0x900003e4
   14003e4a5:	in     al,0x3
	...
   14003e4bf:	add    BYTE PTR [rdx],al
   14003e4c1:	add    BYTE PTR [rax],al
   14003e4c3:	add    al,dl
   14003e4c5:	in     al,0x3
	...
   14003e4cf:	add    al,ch
   14003e4d1:	in     al,0x3
   14003e4d3:	add    BYTE PTR [rax-0x1d],al
   14003e4d6:	add    eax,DWORD PTR [rax]
	...
   14003e4e8:	cwde   
   14003e4e9:	test   BYTE PTR [rax+rax*1],al
   14003e4ec:	add    DWORD PTR [rax],eax
   14003e4ee:	add    BYTE PTR [rax],al
   14003e4f0:	add    BYTE PTR [rax],al
   14003e4f2:	add    BYTE PTR [rax],al
   14003e4f4:	(bad)  
   14003e4f5:	(bad)  
   14003e4f6:	(bad)  
   14003e4f7:	inc    DWORD PTR [rax]
   14003e4f9:	add    BYTE PTR [rax],al
   14003e4fb:	add    BYTE PTR [rax+0x0],al
   14003e4fe:	add    BYTE PTR [rax],al
   14003e500:	mov    eax,0x3e4
	...
   14003e50d:	add    BYTE PTR [rax],al
   14003e50f:	add    BYTE PTR [rcx],al
	...
   14003e519:	add    BYTE PTR [rax],al
   14003e51b:	add    al,al
   14003e51d:	test   BYTE PTR [rax+rax*1],al
   14003e520:	cmp    ch,ah
   14003e522:	add    eax,DWORD PTR [rax]
   14003e524:	adc    ch,ah
   14003e526:	add    eax,DWORD PTR [rax]
	...
   14003e540:	add    al,BYTE PTR [rax]
   14003e542:	add    BYTE PTR [rax],al
   14003e544:	push   rax
   14003e545:	in     eax,0x3
	...
   14003e54f:	add    BYTE PTR [rax-0x1b],ch
   14003e552:	add    eax,DWORD PTR [rax]
   14003e554:	rex jrcxz 0x14003e55a
	...
   14003e567:	add    al,al
   14003e569:	test   BYTE PTR [rax+rax*1],al
   14003e56c:	add    DWORD PTR [rax],eax
   14003e56e:	add    BYTE PTR [rax],al
   14003e570:	add    BYTE PTR [rax],al
   14003e572:	add    BYTE PTR [rax],al
   14003e574:	(bad)  
   14003e575:	(bad)  
   14003e576:	(bad)  
   14003e577:	inc    DWORD PTR [rax]
   14003e579:	add    BYTE PTR [rax],al
   14003e57b:	add    BYTE PTR [rax+0x0],al
   14003e57e:	add    BYTE PTR [rax],al
   14003e580:	cmp    ch,ah
   14003e582:	add    eax,DWORD PTR [rax]
	...
   14003e590:	add    DWORD PTR [rax],eax
	...
   14003e59a:	add    BYTE PTR [rax],al
   14003e59c:	lock test BYTE PTR [rax+rax*1],al
   14003e5a0:	mov    eax,0x900003e5
   14003e5a5:	in     eax,0x3
	...
   14003e5bf:	add    BYTE PTR [rbx],al
   14003e5c1:	add    BYTE PTR [rax],al
   14003e5c3:	add    al,dl
   14003e5c5:	in     eax,0x3
	...
   14003e5cf:	add    al,dh
   14003e5d1:	in     eax,0x3
   14003e5d3:	add    BYTE PTR [rax-0x1b],ch
   14003e5d6:	add    eax,DWORD PTR [rax]
   14003e5d8:	rex jrcxz 0x14003e5de
	...
   14003e5ef:	add    al,dh
   14003e5f1:	test   BYTE PTR [rax+rax*1],al
   14003e5f4:	add    al,BYTE PTR [rax]
   14003e5f6:	add    BYTE PTR [rax],al
   14003e5f8:	add    BYTE PTR [rax],al
   14003e5fa:	add    BYTE PTR [rax],al
   14003e5fc:	(bad)  
   14003e5fd:	(bad)  
   14003e5fe:	(bad)  
   14003e5ff:	inc    DWORD PTR [rax]
   14003e601:	add    BYTE PTR [rax],al
   14003e603:	add    BYTE PTR [rax+0x0],al
   14003e606:	add    BYTE PTR [rax],al
   14003e608:	mov    eax,0x3e5
	...
   14003e615:	add    BYTE PTR [rax],al
   14003e617:	add    BYTE PTR [rcx],al
	...
   14003e621:	add    BYTE PTR [rax],al
   14003e623:	add    BYTE PTR [rax],bl
   14003e625:	test   DWORD PTR [rax+rax*1],eax
   14003e628:	out    0x3,al
   14003e62b:	add    BYTE PTR [rax],bl
   14003e62d:	out    0x3,al
	...
   14003e647:	add    BYTE PTR [rbx],al
   14003e649:	add    BYTE PTR [rax],al
   14003e64b:	add    BYTE PTR [rax-0x1a],bl
   14003e64e:	add    eax,DWORD PTR [rax]
	...
   14003e658:	js     0x14003e640
   14003e65a:	add    eax,DWORD PTR [rax]
   14003e65c:	push   0x400003e5
   14003e661:	jrcxz  0x14003e666
	...
   14003e677:	add    BYTE PTR [rax],bl
   14003e679:	test   DWORD PTR [rax+rax*1],eax
   14003e67c:	add    al,BYTE PTR [rax]
   14003e67e:	add    BYTE PTR [rax],al
   14003e680:	add    BYTE PTR [rax],al
   14003e682:	add    BYTE PTR [rax],al
   14003e684:	(bad)  
   14003e685:	(bad)  
   14003e686:	(bad)  
   14003e687:	inc    DWORD PTR [rax]
   14003e689:	add    BYTE PTR [rax],al
   14003e68b:	add    BYTE PTR [rax+0x0],al
   14003e68e:	add    BYTE PTR [rax],al
   14003e690:	out    0x3,al
	...
   14003e69f:	add    BYTE PTR [rcx],al
	...
   14003e6a9:	add    BYTE PTR [rax],al
   14003e6ab:	add    BYTE PTR [rax-0x7b],al
   14003e6ae:	add    al,0x0
   14003e6b0:	enter  0x3e6,0x0
   14003e6b4:	movabs al,ds:0x3e6
	...
   14003e6cd:	add    BYTE PTR [rax],al
   14003e6cf:	add    BYTE PTR [rbx],al
   14003e6d1:	add    BYTE PTR [rax],al
   14003e6d3:	add    al,ah
   14003e6d5:	out    0x3,al
	...
   14003e6df:	add    BYTE PTR [rax],al
   14003e6e1:	out    0x3,eax
   14003e6e3:	add    BYTE PTR [rax-0x1b],ch
   14003e6e6:	add    eax,DWORD PTR [rax]
   14003e6e8:	rex jrcxz 0x14003e6ee
	...
   14003e6ff:	add    BYTE PTR [rax-0x7b],al
   14003e702:	add    al,0x0
   14003e704:	add    al,BYTE PTR [rax]
   14003e706:	add    BYTE PTR [rax],al
   14003e708:	add    BYTE PTR [rax],al
   14003e70a:	add    BYTE PTR [rax],al
   14003e70c:	(bad)  
   14003e70d:	(bad)  
   14003e70e:	(bad)  
   14003e70f:	inc    DWORD PTR [rax]
   14003e711:	add    BYTE PTR [rax],al
   14003e713:	add    BYTE PTR [rax+0x0],al
   14003e716:	add    BYTE PTR [rax],al
   14003e718:	enter  0x3e6,0x0
	...
   14003e728:	add    DWORD PTR [rax],eax
	...
   14003e732:	add    BYTE PTR [rax],al
   14003e734:	push   0x50000485
   14003e739:	out    0x3,eax
   14003e73b:	add    BYTE PTR [rax],ch
   14003e73d:	out    0x3,eax
	...
   14003e757:	add    BYTE PTR [rbx],al
   14003e759:	add    BYTE PTR [rax],al
   14003e75b:	add    BYTE PTR [rax-0x19],ch
   14003e75e:	add    eax,DWORD PTR [rax]
	...
   14003e768:	mov    bh,ah
   14003e76a:	add    eax,DWORD PTR [rax]
   14003e76c:	call   0x18003eb55
   14003e771:	jrcxz  0x14003e776
	...
   14003e787:	add    BYTE PTR [rax-0x7b],ch
   14003e78a:	add    al,0x0
   14003e78c:	add    al,BYTE PTR [rax]
   14003e78e:	add    BYTE PTR [rax],al
   14003e790:	add    BYTE PTR [rax],al
   14003e792:	add    BYTE PTR [rax],al
   14003e794:	(bad)  
   14003e795:	(bad)  
   14003e796:	(bad)  
   14003e797:	inc    DWORD PTR [rax]
   14003e799:	add    BYTE PTR [rax],al
   14003e79b:	add    BYTE PTR [rax+0x0],al
   14003e79e:	add    BYTE PTR [rax],al
   14003e7a0:	push   rax
   14003e7a1:	out    0x3,eax
	...
   14003e7af:	add    BYTE PTR [rcx],al
	...
   14003e7b9:	add    BYTE PTR [rax],al
   14003e7bb:	add    BYTE PTR [rax-0x27fffb7b],bl
   14003e7c1:	out    0x3,eax
   14003e7c3:	add    BYTE PTR [rax+0x3e7],dh
	...
   14003e7dd:	add    BYTE PTR [rax],al
   14003e7df:	add    BYTE PTR [rbx],al
   14003e7e1:	add    BYTE PTR [rax],al
   14003e7e3:	add    al,dh
   14003e7e5:	out    0x3,eax
	...
   14003e7ef:	add    BYTE PTR [rax],dl
   14003e7f1:	call   0x1206be7f9
   14003e7f6:	add    eax,DWORD PTR [rax]
   14003e7f8:	shl    al,0x3
	...
   14003e80f:	add    BYTE PTR [rax+0x2000485],bl
   14003e815:	add    BYTE PTR [rax],al
   14003e817:	add    BYTE PTR [rax],al
   14003e819:	add    BYTE PTR [rax],al
   14003e81b:	add    bh,bh
   14003e81d:	(bad)  
   14003e81e:	(bad)  
   14003e81f:	inc    DWORD PTR [rax]
   14003e821:	add    BYTE PTR [rax],al
   14003e823:	add    BYTE PTR [rax+0x0],al
   14003e826:	add    BYTE PTR [rax],al
   14003e828:	fsub   st,st(7)
   14003e82a:	add    eax,DWORD PTR [rax]
	...
   14003e838:	add    DWORD PTR [rax],eax
	...
   14003e842:	add    BYTE PTR [rax],al
   14003e844:	call   0x1a003ecce
   14003e849:	call   0x1283be851
   14003e84e:	add    eax,DWORD PTR [rax]
	...
   14003e868:	add    al,BYTE PTR [rax]
   14003e86a:	add    BYTE PTR [rax],al
   14003e86c:	js     0x14003e856
   14003e86e:	add    eax,DWORD PTR [rax]
	...
   14003e878:	nop
   14003e879:	call   0x120c3e881
   14003e87e:	add    eax,DWORD PTR [rax]
	...
   14003e890:	call   0x14103ed1a
   14003e895:	add    BYTE PTR [rax],al
   14003e897:	add    BYTE PTR [rax],al
   14003e899:	add    BYTE PTR [rax],al
   14003e89b:	add    bh,bh
   14003e89d:	(bad)  
   14003e89e:	(bad)  
   14003e89f:	inc    DWORD PTR [rax]
   14003e8a1:	add    BYTE PTR [rax],al
   14003e8a3:	add    BYTE PTR [rax+0x0],al
   14003e8a6:	add    BYTE PTR [rax],al
   14003e8a8:	(bad)  
   14003e8a9:	call   0x14003e8b1
	...
   14003e8b6:	add    BYTE PTR [rax],al
   14003e8b8:	add    DWORD PTR [rax],eax
	...
   14003e8c2:	add    BYTE PTR [rax],al
   14003e8c4:	adc    BYTE PTR [rsi-0x171ffffc],al
   14003e8ca:	add    eax,DWORD PTR [rax]
   14003e8cc:	mov    eax,0x3e8
	...
   14003e8e5:	add    BYTE PTR [rax],al
   14003e8e7:	add    BYTE PTR [rdx],al
   14003e8e9:	add    BYTE PTR [rax],al
   14003e8eb:	add    al,bh
   14003e8ed:	call   0x14003e8f5
   14003e8f2:	add    BYTE PTR [rax],al
   14003e8f4:	add    BYTE PTR [rax],al
   14003e8f6:	add    BYTE PTR [rax],al
   14003e8f8:	adc    cl,ch
   14003e8fa:	add    eax,DWORD PTR [rax]
   14003e8fc:	cmp    cl,ch
   14003e8fe:	add    eax,DWORD PTR [rax]
	...
   14003e910:	adc    BYTE PTR [rsi+0x10004],al
   14003e916:	add    BYTE PTR [rax],al
   14003e918:	add    BYTE PTR [rax],al
   14003e91a:	add    BYTE PTR [rax],al
   14003e91c:	(bad)  
   14003e91d:	(bad)  
   14003e91e:	(bad)  
   14003e91f:	inc    DWORD PTR [rax]
   14003e921:	add    BYTE PTR [rax],al
   14003e923:	add    BYTE PTR [rax+0x0],al
   14003e926:	add    BYTE PTR [rax],al
   14003e928:	loopne 0x14003e912
   14003e92a:	add    eax,DWORD PTR [rax]
	...
   14003e938:	cmp    BYTE PTR [rsi+0x4],al
   14003e93e:	add    BYTE PTR [rax],al
   14003e940:	add    BYTE PTR [rax],al
   14003e942:	add    BYTE PTR [rax],al
   14003e944:	(bad)  
   14003e945:	(bad)  
   14003e946:	(bad)  
   14003e947:	inc    DWORD PTR [rax]
   14003e949:	add    BYTE PTR [rax],al
   14003e94b:	add    BYTE PTR [rax+0x0],al
   14003e94e:	add    BYTE PTR [rax],al
   14003e950:	(bad)  
   14003e951:	jmp    0x14003e959
	...
   14003e966:	add    BYTE PTR [rax],al
   14003e968:	add    DWORD PTR [rax],eax
   14003e96a:	add    BYTE PTR [rax],al
   14003e96c:	js     0x14003e957
   14003e96e:	add    eax,DWORD PTR [rax]
	...
   14003e978:	cmp    cl,ch
   14003e97a:	add    eax,DWORD PTR [rax]
	...
   14003e988:	mov    BYTE PTR [rsi+0x10004],al
   14003e98e:	add    BYTE PTR [rax],al
   14003e990:	add    BYTE PTR [rax],al
   14003e992:	add    BYTE PTR [rax],al
   14003e994:	(bad)  
   14003e995:	(bad)  
   14003e996:	(bad)  
   14003e997:	inc    DWORD PTR [rax]
   14003e999:	add    BYTE PTR [rax],al
   14003e99b:	add    BYTE PTR [rax+0x0],al
   14003e99e:	add    BYTE PTR [rax],al
   14003e9a0:	mov    al,0xe9
   14003e9a2:	add    eax,DWORD PTR [rax]
	...
   14003e9b8:	add    al,BYTE PTR [rax]
   14003e9ba:	add    BYTE PTR [rax],al
   14003e9bc:	enter  0x3e9,0x0
	...
   14003e9c8:	mov    cl,ch
   14003e9ca:	add    eax,DWORD PTR [rax]
   14003e9cc:	shl    al,0x3
	...
   14003e9df:	add    BYTE PTR [rax+0x486],dh
   14003e9e5:	add    BYTE PTR [rax],al
   14003e9e7:	add    BYTE PTR [rax],al
   14003e9e9:	add    BYTE PTR [rax],al
   14003e9eb:	add    bh,bh
   14003e9ed:	(bad)  
   14003e9ee:	(bad)  
   14003e9ef:	inc    DWORD PTR [rax]
   14003e9f1:	add    BYTE PTR [rax],al
   14003e9f3:	add    BYTE PTR [rax+0x0],al
   14003e9f6:	add    BYTE PTR [rax],al
   14003e9f8:	or     dl,ch
   14003e9fa:	add    eax,DWORD PTR [rax]
	...
   14003ea10:	add    DWORD PTR [rax],eax
   14003ea12:	add    BYTE PTR [rax],al
   14003ea14:	and    dl,ch
   14003ea16:	add    eax,DWORD PTR [rax]
	...
   14003ea20:	loopne 0x14003ea0b
   14003ea22:	add    eax,DWORD PTR [rax]
	...
   14003ea30:	add    DWORD PTR [rax],eax
	...
   14003ea3a:	add    BYTE PTR [rax],al
   14003ea3c:	add    BYTE PTR [rdi-0x15a7fffc],al
   14003ea42:	add    eax,DWORD PTR [rax]
   14003ea44:	xor    dl,ch
   14003ea46:	add    eax,DWORD PTR [rax]
	...
   14003ea60:	add    eax,DWORD PTR [rax]
   14003ea62:	add    BYTE PTR [rax],al
   14003ea64:	jo     0x14003ea50
   14003ea66:	add    eax,DWORD PTR [rax]
	...
   14003ea70:	nop
   14003ea71:	(bad)  
   14003ea72:	add    eax,DWORD PTR [rax]
   14003ea74:	push   0xffffffffc00003e0
   14003ea79:	loopne 0x14003ea7e
	...
   14003ea8f:	add    BYTE PTR [rax],al
   14003ea91:	xchg   DWORD PTR [rax+rax*1],eax
   14003ea94:	add    al,BYTE PTR [rax]
   14003ea96:	add    BYTE PTR [rax],al
   14003ea98:	add    BYTE PTR [rax],al
   14003ea9a:	add    BYTE PTR [rax],al
   14003ea9c:	(bad)  
   14003ea9d:	(bad)  
   14003ea9e:	(bad)  
   14003ea9f:	inc    DWORD PTR [rax]
   14003eaa1:	add    BYTE PTR [rax],al
   14003eaa3:	add    BYTE PTR [rax+0x0],al
   14003eaa6:	add    BYTE PTR [rax],al
   14003eaa8:	pop    rax
   14003eaa9:	(bad)  
   14003eaaa:	add    eax,DWORD PTR [rax]
	...
   14003eab8:	add    DWORD PTR [rax],eax
	...
   14003eac2:	add    BYTE PTR [rax],al
   14003eac4:	cmp    BYTE PTR [rdi-0x151ffffc],al
   14003eaca:	add    eax,DWORD PTR [rax]
   14003eacc:	mov    eax,0x3ea
	...
   14003eae5:	add    BYTE PTR [rax],al
   14003eae7:	add    BYTE PTR [rcx],al
   14003eae9:	add    BYTE PTR [rax],al
   14003eaeb:	add    al,bh
   14003eaed:	(bad)  
   14003eaee:	add    eax,DWORD PTR [rax]
	...
   14003eaf8:	or     bl,ch
   14003eafa:	add    eax,DWORD PTR [rax]
	...
   14003eb08:	cmp    BYTE PTR [rdi+0x4],al
   14003eb0e:	add    BYTE PTR [rax],al
   14003eb10:	add    BYTE PTR [rax],al
   14003eb12:	add    BYTE PTR [rax],al
   14003eb14:	(bad)  
   14003eb15:	(bad)  
   14003eb16:	(bad)  
   14003eb17:	inc    DWORD PTR [rax]
   14003eb19:	add    BYTE PTR [rax],al
   14003eb1b:	add    BYTE PTR [rax+0x0],al
   14003eb1e:	add    BYTE PTR [rax],al
   14003eb20:	loopne 0x14003eb0c
   14003eb22:	add    eax,DWORD PTR [rax]
	...
   14003eb30:	add    DWORD PTR [rax],eax
	...
   14003eb3a:	add    BYTE PTR [rax],al
   14003eb3c:	pop    rax
   14003eb3d:	xchg   DWORD PTR [rax+rax*1],eax
   14003eb40:	pop    rax
   14003eb41:	jmp    0x14003eb46
   14003eb43:	add    BYTE PTR [rax],dh
   14003eb45:	jmp    0x14003eb4a
	...
   14003eb5f:	add    BYTE PTR [rcx],al
   14003eb61:	add    BYTE PTR [rax],al
   14003eb63:	add    BYTE PTR [rax-0x15],dh
   14003eb66:	add    eax,DWORD PTR [rax]
	...
   14003eb70:	sub    bl,0x3
	...
   14003eb7f:	add    BYTE PTR [rax-0x79],bl
   14003eb82:	add    al,0x0
	...
   14003eb8c:	(bad)  
   14003eb8d:	(bad)  
   14003eb8e:	(bad)  
   14003eb8f:	inc    DWORD PTR [rax]
   14003eb91:	add    BYTE PTR [rax],al
   14003eb93:	add    BYTE PTR [rax+0x0],al
   14003eb96:	add    BYTE PTR [rax],al
   14003eb98:	pop    rax
   14003eb99:	jmp    0x14003eb9e
	...
   14003eba7:	add    BYTE PTR [rcx],al
	...
   14003ebb1:	add    BYTE PTR [rax],al
   14003ebb3:	add    BYTE PTR [rax-0x78],dh
   14003ebb6:	add    al,0x0
   14003ebb8:	shr    bl,1
   14003ebba:	add    eax,DWORD PTR [rax]
   14003ebbc:	test   al,0xeb
   14003ebbe:	add    eax,DWORD PTR [rax]
	...
   14003ebd8:	add    DWORD PTR [rax],eax
   14003ebda:	add    BYTE PTR [rax],al
   14003ebdc:	call   0x14003efcc
   14003ebe1:	add    BYTE PTR [rax],al
   14003ebe3:	add    BYTE PTR [rax],al
   14003ebe5:	add    BYTE PTR [rax],al
   14003ebe7:	add    al,bh
   14003ebe9:	jmp    0x14003ebee
	...
   14003ebf7:	add    BYTE PTR [rax-0x78],dh
   14003ebfa:	add    al,0x0
	...
   14003ec04:	(bad)  
   14003ec05:	(bad)  
   14003ec06:	(bad)  
   14003ec07:	inc    DWORD PTR [rax]
   14003ec09:	add    BYTE PTR [rax],al
   14003ec0b:	add    BYTE PTR [rax+0x0],al
   14003ec0e:	add    BYTE PTR [rax],al
   14003ec10:	shr    bl,1
   14003ec12:	add    eax,DWORD PTR [rax]
	...
   14003ec20:	add    DWORD PTR [rax],eax
	...
   14003ec2a:	add    BYTE PTR [rax],al
   14003ec2c:	cwde   
   14003ec2d:	mov    BYTE PTR [rax+rax*1],al
   14003ec30:	rex.W in al,dx
   14003ec32:	add    eax,DWORD PTR [rax]
   14003ec34:	and    ah,ch
   14003ec36:	add    eax,DWORD PTR [rax]
	...
   14003ec50:	add    DWORD PTR [rax],eax
   14003ec52:	add    BYTE PTR [rax],al
   14003ec54:	(bad)  
   14003ec55:	in     al,dx
   14003ec56:	add    eax,DWORD PTR [rax]
	...
   14003ec60:	jo     0x14003ec4e
   14003ec62:	add    eax,DWORD PTR [rax]
	...
   14003ec70:	cwde   
   14003ec71:	mov    BYTE PTR [rax+rax*1],al
	...
   14003ec7c:	(bad)  
   14003ec7d:	(bad)  
   14003ec7e:	(bad)  
   14003ec7f:	inc    DWORD PTR [rax]
   14003ec81:	add    BYTE PTR [rax],al
   14003ec83:	add    BYTE PTR [rax+0x0],al
   14003ec86:	add    BYTE PTR [rax],al
   14003ec88:	rex.W in al,dx
   14003ec8a:	add    eax,DWORD PTR [rax]
	...
   14003ec98:	add    DWORD PTR [rax],eax
	...
   14003eca2:	add    BYTE PTR [rax],al
   14003eca4:	enter  0x488,0x0
   14003eca8:	shr    ah,0x3
   14003ecab:	add    BYTE PTR [rax+0x3ec],bl
	...
   14003ecc5:	add    BYTE PTR [rax],al
   14003ecc7:	add    BYTE PTR [rbx],al
   14003ecc9:	add    BYTE PTR [rax],al
   14003eccb:	add    al,bl
   14003eccd:	in     al,dx
   14003ecce:	add    eax,DWORD PTR [rax]
	...
   14003ecd8:	clc    
   14003ecd9:	in     al,dx
   14003ecda:	add    eax,DWORD PTR [rax]
   14003ecdc:	mov    cl,ch
   14003ecde:	add    eax,DWORD PTR [rax]
   14003ece0:	shl    al,0x3
	...
   14003ecf7:	add    al,cl
   14003ecf9:	mov    BYTE PTR [rax+rax*1],al
   14003ecfc:	add    al,BYTE PTR [rax]
   14003ecfe:	add    BYTE PTR [rax],al
   14003ed00:	add    BYTE PTR [rax],al
   14003ed02:	add    BYTE PTR [rax],al
   14003ed04:	(bad)  
   14003ed05:	(bad)  
   14003ed06:	(bad)  
   14003ed07:	inc    DWORD PTR [rax]
   14003ed09:	add    BYTE PTR [rax],al
   14003ed0b:	add    BYTE PTR [rax+0x0],al
   14003ed0e:	add    BYTE PTR [rax],al
   14003ed10:	shr    ah,0x3
	...
   14003ed1f:	add    BYTE PTR [rcx],al
	...
   14003ed29:	add    BYTE PTR [rax],al
   14003ed2b:	add    al,ch
   14003ed2d:	mov    BYTE PTR [rax+rax*1],al
   14003ed30:	rex.W in eax,dx
   14003ed32:	add    eax,DWORD PTR [rax]
   14003ed34:	and    ch,ch
   14003ed36:	add    eax,DWORD PTR [rax]
	...
   14003ed50:	add    al,BYTE PTR [rax]
   14003ed52:	add    BYTE PTR [rax],al
   14003ed54:	(bad)  
   14003ed55:	in     eax,dx
   14003ed56:	add    eax,DWORD PTR [rax]
	...
   14003ed60:	js     0x14003ed4f
   14003ed62:	add    eax,DWORD PTR [rax]
   14003ed64:	rex jrcxz 0x14003ed6a
	...
   14003ed77:	add    al,ch
   14003ed79:	mov    BYTE PTR [rax+rax*1],al
   14003ed7c:	add    DWORD PTR [rax],eax
   14003ed7e:	add    BYTE PTR [rax],al
   14003ed80:	add    BYTE PTR [rax],al
   14003ed82:	add    BYTE PTR [rax],al
   14003ed84:	(bad)  
   14003ed85:	(bad)  
   14003ed86:	(bad)  
   14003ed87:	inc    DWORD PTR [rax]
   14003ed89:	add    BYTE PTR [rax],al
   14003ed8b:	add    BYTE PTR [rax+0x0],al
   14003ed8e:	add    BYTE PTR [rax],al
   14003ed90:	rex.W in eax,dx
   14003ed92:	add    eax,DWORD PTR [rax]
	...
   14003eda0:	add    DWORD PTR [rax],eax
	...
   14003edaa:	add    BYTE PTR [rax],al
   14003edac:	sbb    BYTE PTR [rcx-0x1237fffc],cl
   14003edb2:	add    eax,DWORD PTR [rax]
   14003edb4:	movabs al,ds:0x3ed
	...
   14003edcd:	add    BYTE PTR [rax],al
   14003edcf:	add    BYTE PTR [rdx],al
   14003edd1:	add    BYTE PTR [rax],al
   14003edd3:	add    al,ah
   14003edd5:	in     eax,dx
   14003edd6:	add    eax,DWORD PTR [rax]
	...
   14003ede0:	clc    
   14003ede1:	in     eax,dx
   14003ede2:	add    eax,DWORD PTR [rax]
   14003ede4:	or     bl,ch
   14003ede6:	add    eax,DWORD PTR [rax]
	...
   14003edf8:	sbb    BYTE PTR [rcx+0x10004],cl
   14003edfe:	add    BYTE PTR [rax],al
   14003ee00:	add    BYTE PTR [rax],al
   14003ee02:	add    BYTE PTR [rax],al
   14003ee04:	(bad)  
   14003ee05:	(bad)  
   14003ee06:	(bad)  
   14003ee07:	inc    DWORD PTR [rax]
   14003ee09:	add    BYTE PTR [rax],al
   14003ee0b:	add    BYTE PTR [rax+0x0],al
   14003ee0e:	add    BYTE PTR [rax],al
   14003ee10:	enter  0x3ed,0x0
	...
   14003ee24:	add    eax,0x6000000
   14003ee29:	add    BYTE PTR [rax],al
   14003ee2b:	add    BYTE PTR [rax],bh
   14003ee2d:	out    dx,al
   14003ee2e:	add    eax,DWORD PTR [rax]
	...
   14003ee38:	jo     0x14003ee28
   14003ee3a:	add    eax,DWORD PTR [rax]
   14003ee3c:	cwde   
   14003ee3d:	out    dx,al
   14003ee3e:	add    eax,DWORD PTR [rax]
   14003ee40:	clc    
   14003ee41:	out    dx,al
   14003ee42:	add    eax,DWORD PTR [rax]
   14003ee44:	push   rax
   14003ee45:	out    dx,eax
   14003ee46:	add    eax,DWORD PTR [rax]
   14003ee48:	js     0x14003ee39
   14003ee4a:	add    eax,DWORD PTR [rax]
   14003ee4c:	clc    
   14003ee4d:	out    dx,eax
   14003ee4e:	add    eax,DWORD PTR [rax]
	...
   14003ee70:	rex mov DWORD PTR [rax+rax*1],eax
   14003ee74:	add    eax,0x0
   14003ee79:	add    BYTE PTR [rax],al
   14003ee7b:	add    bh,bh
   14003ee7d:	(bad)  
   14003ee7e:	(bad)  
   14003ee7f:	inc    DWORD PTR [rax]
   14003ee81:	add    BYTE PTR [rax],al
   14003ee83:	add    BYTE PTR [rax+0x0],al
   14003ee86:	add    BYTE PTR [rax],al
   14003ee88:	and    dh,ch
   14003ee8a:	add    eax,DWORD PTR [rax]
	...
   14003ee98:	nop
   14003ee99:	mov    DWORD PTR [rax+rax*1],eax
   14003ee9c:	add    al,BYTE PTR [rax]
   14003ee9e:	add    BYTE PTR [rax],al
   14003eea0:	add    BYTE PTR [rax],al
   14003eea2:	add    BYTE PTR [rax],al
   14003eea4:	(bad)  
   14003eea5:	(bad)  
   14003eea6:	(bad)  
   14003eea7:	inc    DWORD PTR [rax]
   14003eea9:	add    BYTE PTR [rax],al
   14003eeab:	add    BYTE PTR [rax+0x0],al
   14003eeae:	add    BYTE PTR [rax],al
   14003eeb0:	shr    dh,0x3
	...
   14003eec7:	add    BYTE PTR [rbx],al
   14003eec9:	add    BYTE PTR [rax],al
   14003eecb:	add    al,bl
   14003eecd:	out    dx,al
   14003eece:	add    eax,DWORD PTR [rax]
	...
   14003eed8:	cwde   
   14003eed9:	out    dx,al
   14003eeda:	add    eax,DWORD PTR [rax]
   14003eedc:	clc    
   14003eedd:	out    dx,al
   14003eede:	add    eax,DWORD PTR [rax]
   14003eee0:	loopne 0x14003eecb
   14003eee2:	add    eax,DWORD PTR [rax]
	...
   14003eef8:	mov    eax,0x1000489
   14003eefd:	add    BYTE PTR [rax],al
   14003eeff:	add    BYTE PTR [rax],al
   14003ef01:	add    BYTE PTR [rax],al
   14003ef03:	add    bh,bh
   14003ef05:	(bad)  
   14003ef06:	(bad)  
   14003ef07:	inc    DWORD PTR [rax]
   14003ef09:	add    BYTE PTR [rax],al
   14003ef0b:	add    BYTE PTR [rax+0x0],al
   14003ef0e:	add    BYTE PTR [rax],al
   14003ef10:	and    bh,ch
   14003ef12:	add    eax,DWORD PTR [rax]
	...
   14003ef28:	add    al,BYTE PTR [rax]
   14003ef2a:	add    BYTE PTR [rax],al
   14003ef2c:	cmp    bh,ch
   14003ef2e:	add    eax,DWORD PTR [rax]
	...
   14003ef38:	clc    
   14003ef39:	out    dx,al
   14003ef3a:	add    eax,DWORD PTR [rax]
   14003ef3c:	loopne 0x14003ef27
   14003ef3e:	add    eax,DWORD PTR [rax]
	...
   14003ef50:	mov    al,0x86
   14003ef52:	add    al,0x0
	...
   14003ef5c:	(bad)  
   14003ef5d:	(bad)  
   14003ef5e:	(bad)  
   14003ef5f:	inc    DWORD PTR [rax]
   14003ef61:	add    BYTE PTR [rax],al
   14003ef63:	add    BYTE PTR [rdx+0x0],al
   14003ef66:	add    BYTE PTR [rax],al
   14003ef68:	or     dl,ch
   14003ef6a:	add    eax,DWORD PTR [rax]
	...
   14003ef78:	fmul   DWORD PTR [rcx+0x10004]
   14003ef7e:	add    BYTE PTR [rax],al
   14003ef80:	or     BYTE PTR [rax],al
   14003ef82:	add    BYTE PTR [rax],al
   14003ef84:	(bad)  
   14003ef85:	(bad)  
   14003ef86:	(bad)  
   14003ef87:	inc    DWORD PTR [rax]
   14003ef89:	add    BYTE PTR [rax],al
   14003ef8b:	add    BYTE PTR [rax+0x0],al
   14003ef8e:	add    BYTE PTR [rax],al
   14003ef90:	movabs al,ds:0x3ef
	...
   14003efa5:	add    BYTE PTR [rax],al
   14003efa7:	add    BYTE PTR [rdx],al
   14003efa9:	add    BYTE PTR [rax],al
   14003efab:	add    BYTE PTR [rax+0x3ef],bh
   14003efb1:	add    BYTE PTR [rax],al
   14003efb3:	add    BYTE PTR [rax],al
   14003efb5:	add    BYTE PTR [rax],al
   14003efb7:	add    al,dl
   14003efb9:	out    dx,eax
   14003efba:	add    eax,DWORD PTR [rax]
   14003efbc:	loopne 0x14003efa7
   14003efbe:	add    eax,DWORD PTR [rax]
	...
   14003efd0:	fmul   DWORD PTR [rcx+0x10004]
   14003efd6:	add    BYTE PTR [rax],al
   14003efd8:	add    BYTE PTR [rax],al
   14003efda:	add    BYTE PTR [rax],al
   14003efdc:	(bad)  
   14003efdd:	(bad)  
   14003efde:	(bad)  
   14003efdf:	inc    DWORD PTR [rax]
   14003efe1:	add    BYTE PTR [rax],al
   14003efe3:	add    BYTE PTR [rax+0x0],al
   14003efe6:	add    BYTE PTR [rax],al
   14003efe8:	movabs al,ds:0x3ef
   14003eff1:	add    BYTE PTR [rax],al
   14003eff3:	add    BYTE PTR [rax],al
   14003eff5:	add    BYTE PTR [rax],al
   14003eff7:	add    BYTE PTR [rax+0x486],dh
   14003effd:	add    BYTE PTR [rax],al
   14003efff:	add    BYTE PTR [rax],cl
   14003f001:	add    BYTE PTR [rax],al
   14003f003:	add    bh,bh
   14003f005:	(bad)  
   14003f006:	(bad)  
   14003f007:	inc    DWORD PTR [rax]
   14003f009:	add    BYTE PTR [rax],al
   14003f00b:	add    BYTE PTR [rdx+0x0],al
   14003f00e:	add    BYTE PTR [rax],al
   14003f010:	or     dl,ch
   14003f012:	add    eax,DWORD PTR [rax]
	...
   14003f020:	add    DWORD PTR [rax],eax
	...
   14003f02a:	add    BYTE PTR [rax],al
   14003f02c:	add    BYTE PTR [rdx-0xfb7fffc],cl
   14003f032:	add    eax,DWORD PTR [rax]
   14003f034:	and    al,dh
   14003f036:	add    eax,DWORD PTR [rax]
	...
   14003f04c:	add    DWORD PTR [rax],eax
   14003f04e:	add    BYTE PTR [rax],al
   14003f050:	or     al,0x0
   14003f052:	add    BYTE PTR [rax],al
   14003f054:	(bad)  
   14003f055:	lock add eax,DWORD PTR [rax]
	...
   14003f060:	enter  0x3f0,0x0
   14003f064:	lock lock add eax,DWORD PTR [rax]
   14003f068:	nop
   14003f069:	icebp  
   14003f06a:	add    eax,DWORD PTR [rax]
   14003f06c:	(bad)  
   14003f06d:	repnz add eax,DWORD PTR [rax]
   14003f070:	jo     0x14003f060
   14003f072:	add    eax,DWORD PTR [rax]
   14003f074:	cwde   
   14003f075:	out    dx,al
   14003f076:	add    eax,DWORD PTR [rax]
   14003f078:	clc    
   14003f079:	out    dx,al
   14003f07a:	add    eax,DWORD PTR [rax]
   14003f07c:	push   rax
   14003f07d:	out    dx,eax
   14003f07e:	add    eax,DWORD PTR [rax]
   14003f080:	js     0x14003f071
   14003f082:	add    eax,DWORD PTR [rax]
   14003f084:	clc    
   14003f085:	out    dx,eax
   14003f086:	add    eax,DWORD PTR [rax]
   14003f088:	mov    dl,dh
   14003f08a:	add    eax,DWORD PTR [rax]
   14003f08c:	or     bl,dh
   14003f08e:	add    eax,DWORD PTR [rax]
	...
   14003f0c8:	add    BYTE PTR [rdx+0xb0004],cl
   14003f0ce:	add    BYTE PTR [rax],al
   14003f0d0:	add    BYTE PTR [rax],al
   14003f0d2:	add    BYTE PTR [rax],al
   14003f0d4:	(bad)  
   14003f0d5:	(bad)  
   14003f0d6:	(bad)  
   14003f0d7:	inc    DWORD PTR [rax]
   14003f0d9:	add    BYTE PTR [rax],al
   14003f0db:	add    BYTE PTR [rax+0x0],al
   14003f0de:	add    BYTE PTR [rax],al
   14003f0e0:	rex.W
   14003f0e1:	lock add eax,DWORD PTR [rax]
	...
   14003f0f0:	mov    al,BYTE PTR [rax+rax*1]
   14003f0f4:	or     al,BYTE PTR [rax]
   14003f0f6:	add    BYTE PTR [rax],al
   14003f0f8:	add    BYTE PTR [rax],al
   14003f0fa:	add    BYTE PTR [rax],al
   14003f0fc:	(bad)  
   14003f0fd:	(bad)  
   14003f0fe:	(bad)  
   14003f0ff:	inc    DWORD PTR [rax]
   14003f101:	add    BYTE PTR [rax],al
   14003f103:	add    BYTE PTR [rax+0x0],al
   14003f106:	add    BYTE PTR [rax],al
   14003f108:	sbb    cl,dh
   14003f10a:	add    eax,DWORD PTR [rax]
	...
   14003f11c:	add    eax,0xb000000
   14003f121:	add    BYTE PTR [rax],al
   14003f123:	add    BYTE PTR [rax],dh
   14003f125:	icebp  
   14003f126:	add    eax,DWORD PTR [rax]
	...
   14003f130:	lock lock add eax,DWORD PTR [rax]
   14003f134:	nop
   14003f135:	icebp  
   14003f136:	add    eax,DWORD PTR [rax]
   14003f138:	(bad)  
   14003f139:	repnz add eax,DWORD PTR [rax]
   14003f13c:	jo     0x14003f12c
   14003f13e:	add    eax,DWORD PTR [rax]
   14003f140:	cwde   
   14003f141:	out    dx,al
   14003f142:	add    eax,DWORD PTR [rax]
   14003f144:	clc    
   14003f145:	out    dx,al
   14003f146:	add    eax,DWORD PTR [rax]
   14003f148:	push   rax
   14003f149:	out    dx,eax
   14003f14a:	add    eax,DWORD PTR [rax]
   14003f14c:	js     0x14003f13d
   14003f14e:	add    eax,DWORD PTR [rax]
   14003f150:	clc    
   14003f151:	out    dx,eax
   14003f152:	add    eax,DWORD PTR [rax]
   14003f154:	mov    dl,dh
   14003f156:	add    eax,DWORD PTR [rax]
   14003f158:	or     bl,dh
   14003f15a:	add    eax,DWORD PTR [rax]
	...
   14003f190:	jo     0x14003f11c
   14003f192:	add    al,0x0
   14003f194:	add    DWORD PTR [rax],eax
   14003f196:	add    BYTE PTR [rax],al
   14003f198:	sub    BYTE PTR [rax],al
   14003f19a:	add    BYTE PTR [rax],al
   14003f19c:	(bad)  
   14003f19d:	(bad)  
   14003f19e:	(bad)  
   14003f19f:	inc    DWORD PTR [rax]
   14003f1a1:	add    BYTE PTR [rax],al
   14003f1a3:	add    BYTE PTR [rax+0x0],al
   14003f1a6:	add    BYTE PTR [rax],al
   14003f1a8:	mov    eax,0x3f1
	...
   14003f1bd:	add    BYTE PTR [rax],al
   14003f1bf:	add    BYTE PTR [rdx],al
   14003f1c1:	add    BYTE PTR [rax],al
   14003f1c3:	add    al,dl
   14003f1c5:	icebp  
   14003f1c6:	add    eax,DWORD PTR [rax]
	...
   14003f1d0:	call   0x15003f5c6
   14003f1d5:	repnz add eax,DWORD PTR [rax]
	...
   14003f1e8:	jo     0x14003f174
   14003f1ea:	add    al,0x0
   14003f1ec:	add    DWORD PTR [rax],eax
   14003f1ee:	add    BYTE PTR [rax],al
   14003f1f0:	add    BYTE PTR [rax],al
   14003f1f2:	add    BYTE PTR [rax],al
   14003f1f4:	(bad)  
   14003f1f5:	(bad)  
   14003f1f6:	(bad)  
   14003f1f7:	inc    DWORD PTR [rax]
   14003f1f9:	add    BYTE PTR [rax],al
   14003f1fb:	add    BYTE PTR [rax+0x0],al
   14003f1fe:	add    BYTE PTR [rax],al
   14003f200:	mov    eax,0x3f1
	...
   14003f20d:	add    BYTE PTR [rax],al
   14003f20f:	add    al,al
   14003f211:	mov    al,BYTE PTR [rax+rax*1]
	...
   14003f21c:	(bad)  
   14003f21d:	(bad)  
   14003f21e:	(bad)  
   14003f21f:	inc    DWORD PTR [rax]
   14003f221:	add    BYTE PTR [rax],al
   14003f223:	add    BYTE PTR [rax+0x0],al
   14003f226:	add    BYTE PTR [rax],al
   14003f228:	cmp    dl,dh
   14003f22a:	add    eax,DWORD PTR [rax]
	...
   14003f240:	add    DWORD PTR [rax],eax
   14003f242:	add    BYTE PTR [rax],al
   14003f244:	push   rax
   14003f245:	repnz add eax,DWORD PTR [rax]
	...
   14003f250:	adc    dl,dh
   14003f252:	add    eax,DWORD PTR [rax]
	...
   14003f260:	ror    BYTE PTR [rdx+0x4],0x0
   14003f267:	add    BYTE PTR [rax],ch
   14003f269:	add    BYTE PTR [rax],al
   14003f26b:	add    bh,bh
   14003f26d:	(bad)  
   14003f26e:	(bad)  
   14003f26f:	inc    DWORD PTR [rax]
   14003f271:	add    BYTE PTR [rax],al
   14003f273:	add    BYTE PTR [rax+0x0],al
   14003f276:	add    BYTE PTR [rax],al
   14003f278:	cmp    dl,dh
   14003f27a:	add    eax,DWORD PTR [rax]
	...
   14003f288:	lock mov al,BYTE PTR [rax+rax*1]
   14003f28c:	add    DWORD PTR [rax],eax
   14003f28e:	add    BYTE PTR [rax],al
   14003f290:	and    BYTE PTR [rax],al
   14003f292:	add    BYTE PTR [rax],al
   14003f294:	(bad)  
   14003f295:	(bad)  
   14003f296:	(bad)  
   14003f297:	inc    DWORD PTR [rax]
   14003f299:	add    BYTE PTR [rax],al
   14003f29b:	add    BYTE PTR [rax+0x0],al
   14003f29e:	add    BYTE PTR [rax],al
   14003f2a0:	mov    al,0xf2
   14003f2a2:	add    eax,DWORD PTR [rax]
	...
   14003f2b8:	add    al,BYTE PTR [rax]
   14003f2ba:	add    BYTE PTR [rax],al
   14003f2bc:	enter  0x3f2,0x0
	...
   14003f2c8:	loopne 0x14003f2bc
   14003f2ca:	add    eax,DWORD PTR [rax]
   14003f2cc:	loopne 0x14003f2b7
   14003f2ce:	add    eax,DWORD PTR [rax]
	...
   14003f2e0:	lock mov al,BYTE PTR [rax+rax*1]
   14003f2e4:	add    DWORD PTR [rax],eax
   14003f2e6:	add    BYTE PTR [rax],al
   14003f2e8:	add    BYTE PTR [rax],al
   14003f2ea:	add    BYTE PTR [rax],al
   14003f2ec:	(bad)  
   14003f2ed:	(bad)  
   14003f2ee:	(bad)  
   14003f2ef:	inc    DWORD PTR [rax]
   14003f2f1:	add    BYTE PTR [rax],al
   14003f2f3:	add    BYTE PTR [rax+0x0],al
   14003f2f6:	add    BYTE PTR [rax],al
   14003f2f8:	mov    al,0xf2
   14003f2fa:	add    eax,DWORD PTR [rax]
	...
   14003f308:	mov    al,0x86
   14003f30a:	add    al,0x0
   14003f30c:	add    BYTE PTR [rax],al
   14003f30e:	add    BYTE PTR [rax],al
   14003f310:	and    BYTE PTR [rax],al
   14003f312:	add    BYTE PTR [rax],al
   14003f314:	(bad)  
   14003f315:	(bad)  
   14003f316:	(bad)  
   14003f317:	inc    DWORD PTR [rax]
   14003f319:	add    BYTE PTR [rax],al
   14003f31b:	add    BYTE PTR [rdx+0x0],al
   14003f31e:	add    BYTE PTR [rax],al
   14003f320:	or     dl,ch
   14003f322:	add    eax,DWORD PTR [rax]
	...
   14003f330:	add    DWORD PTR [rax],eax
   14003f332:	add    BYTE PTR [rax],al
   14003f334:	or     BYTE PTR [rax],al
   14003f336:	add    BYTE PTR [rax],al
   14003f338:	add    BYTE PTR [rax],al
   14003f33a:	add    BYTE PTR [rax],al
   14003f33c:	add    BYTE PTR [rdx-0xfb7fffc],cl
   14003f342:	add    eax,DWORD PTR [rax]
   14003f344:	xor    bl,dh
   14003f346:	add    eax,DWORD PTR [rax]
	...
   14003f358:	add    DWORD PTR [rax],eax
   14003f35a:	add    BYTE PTR [rax],al
   14003f35c:	and    BYTE PTR [rax],al
   14003f35e:	add    BYTE PTR [rax],al
   14003f360:	add    BYTE PTR [rax],al
   14003f362:	add    BYTE PTR [rax],al
   14003f364:	add    BYTE PTR [rdx-0xfb7fffc],cl
   14003f36a:	add    eax,DWORD PTR [rax]
   14003f36c:	pop    rax
   14003f36d:	repz add eax,DWORD PTR [rax]
	...
   14003f380:	add    DWORD PTR [rax],eax
	...
   14003f38a:	add    BYTE PTR [rax],al
   14003f38c:	push   0xffffffffa800048b
   14003f391:	repz add eax,DWORD PTR [rax]
   14003f394:	xor    bl,0x3
	...
   14003f3af:	add    BYTE PTR [rdx],al
   14003f3b1:	add    BYTE PTR [rax],al
   14003f3b3:	add    al,al
   14003f3b5:	repz add eax,DWORD PTR [rax]
	...
   14003f3c0:	fdiv   st,st(3)
   14003f3c2:	add    eax,DWORD PTR [rax]
   14003f3c4:	shl    al,0x3
	...
   14003f3d7:	add    BYTE PTR [rax-0x75],ch
   14003f3da:	add    al,0x0
   14003f3dc:	add    DWORD PTR [rax],eax
   14003f3de:	add    BYTE PTR [rax],al
   14003f3e0:	add    BYTE PTR [rax],al
   14003f3e2:	add    BYTE PTR [rax],al
   14003f3e4:	(bad)  
   14003f3e5:	(bad)  
   14003f3e6:	(bad)  
   14003f3e7:	inc    DWORD PTR [rax]
   14003f3e9:	add    BYTE PTR [rax],al
   14003f3eb:	add    BYTE PTR [rax+0x0],al
   14003f3ee:	add    BYTE PTR [rax],al
   14003f3f0:	test   al,0xf3
   14003f3f2:	add    eax,DWORD PTR [rax]
	...
   14003f400:	add    DWORD PTR [rax],eax
	...
   14003f40a:	add    BYTE PTR [rax],al
   14003f40c:	nop
   14003f40d:	mov    eax,DWORD PTR [rax+rax*1]
   14003f410:	sub    ah,dh
   14003f412:	add    eax,DWORD PTR [rax]
   14003f414:	add    ah,dh
   14003f416:	add    eax,DWORD PTR [rax]
	...
   14003f430:	add    al,BYTE PTR [rax]
   14003f432:	add    BYTE PTR [rax],al
   14003f434:	rex hlt 
   14003f436:	add    eax,DWORD PTR [rax]
	...
   14003f440:	pop    rax
   14003f441:	hlt    
   14003f442:	add    eax,DWORD PTR [rax]
   14003f444:	shl    al,0x3
	...
   14003f457:	add    BYTE PTR [rax+0x100048b],dl
   14003f45d:	add    BYTE PTR [rax],al
   14003f45f:	add    BYTE PTR [rax],al
   14003f461:	add    BYTE PTR [rax],al
   14003f463:	add    bh,bh
   14003f465:	(bad)  
   14003f466:	(bad)  
   14003f467:	inc    DWORD PTR [rax]
   14003f469:	add    BYTE PTR [rax],al
   14003f46b:	add    BYTE PTR [rax+0x0],al
   14003f46e:	add    BYTE PTR [rax],al
   14003f470:	sub    ah,dh
   14003f472:	add    eax,DWORD PTR [rax]
	...
   14003f480:	add    DWORD PTR [rax],eax
	...
   14003f48a:	add    BYTE PTR [rax],al
   14003f48c:	mov    eax,0xa800048b
   14003f491:	hlt    
   14003f492:	add    eax,DWORD PTR [rax]
   14003f494:	xor    ah,0x3
	...
   14003f4af:	add    BYTE PTR [rdx],al
   14003f4b1:	add    BYTE PTR [rax],al
   14003f4b3:	add    al,al
   14003f4b5:	hlt    
   14003f4b6:	add    eax,DWORD PTR [rax]
	...
   14003f4c0:	fdiv   st,st(4)
   14003f4c2:	add    eax,DWORD PTR [rax]
   14003f4c4:	shl    al,0x3
	...
   14003f4d7:	add    BYTE PTR [rax+0x100048b],bh
   14003f4dd:	add    BYTE PTR [rax],al
   14003f4df:	add    BYTE PTR [rax],al
   14003f4e1:	add    BYTE PTR [rax],al
   14003f4e3:	add    bh,bh
   14003f4e5:	(bad)  
   14003f4e6:	(bad)  
   14003f4e7:	inc    DWORD PTR [rax]
   14003f4e9:	add    BYTE PTR [rax],al
   14003f4eb:	add    BYTE PTR [rax+0x0],al
   14003f4ee:	add    BYTE PTR [rax],al
   14003f4f0:	test   al,0xf4
   14003f4f2:	add    eax,DWORD PTR [rax]
	...
   14003f500:	add    DWORD PTR [rax],eax
	...
   14003f50a:	add    BYTE PTR [rax],al
   14003f50c:	fmul   DWORD PTR [rbx-0xad7fffc]
   14003f512:	add    eax,DWORD PTR [rax]
   14003f514:	add    ch,dh
   14003f516:	add    eax,DWORD PTR [rax]
	...
   14003f530:	add    al,0x0
   14003f532:	add    BYTE PTR [rax],al
   14003f534:	rex cmc 
   14003f536:	add    eax,DWORD PTR [rax]
	...
   14003f540:	push   0x400003f5
   14003f545:	loopne 0x14003f54a
   14003f547:	add    BYTE PTR [rax-0x20],ch
   14003f54a:	add    eax,DWORD PTR [rax]
   14003f54c:	shl    al,0x3
	...
   14003f567:	add    al,bl
   14003f569:	mov    eax,DWORD PTR [rax+rax*1]
   14003f56c:	add    eax,DWORD PTR [rax]
   14003f56e:	add    BYTE PTR [rax],al
   14003f570:	add    BYTE PTR [rax],al
   14003f572:	add    BYTE PTR [rax],al
   14003f574:	(bad)  
   14003f575:	(bad)  
   14003f576:	(bad)  
   14003f577:	inc    DWORD PTR [rax]
   14003f579:	add    BYTE PTR [rax],al
   14003f57b:	add    BYTE PTR [rax+0x0],al
   14003f57e:	add    BYTE PTR [rax],al
   14003f580:	sub    ch,dh
   14003f582:	add    eax,DWORD PTR [rax]
	...
   14003f590:	add    DWORD PTR [rax],eax
	...
   14003f59a:	add    BYTE PTR [rax],al
   14003f59c:	or     BYTE PTR [rsp+rax*1+0x3f5b800],cl
   14003f5a3:	add    BYTE PTR [rax+0x3f5],dl
	...
   14003f5bd:	add    BYTE PTR [rax],al
   14003f5bf:	add    BYTE PTR [rax+rax*1],al
   14003f5c2:	add    BYTE PTR [rax],al
   14003f5c4:	shl    ch,1
   14003f5c6:	add    eax,DWORD PTR [rax]
	...
   14003f5d0:	clc    
   14003f5d1:	cmc    
   14003f5d2:	add    eax,DWORD PTR [rax]
   14003f5d4:	rex loopne 0x14003f5da
   14003f5d7:	add    BYTE PTR [rax-0x20],ch
   14003f5da:	add    eax,DWORD PTR [rax]
   14003f5dc:	shl    al,0x3
	...
   14003f5f7:	add    BYTE PTR [rax],cl
   14003f5f9:	mov    WORD PTR [rax+rax*1],es
   14003f5fc:	add    eax,DWORD PTR [rax]
   14003f5fe:	add    BYTE PTR [rax],al
   14003f600:	add    BYTE PTR [rax],al
   14003f602:	add    BYTE PTR [rax],al
   14003f604:	(bad)  
   14003f605:	(bad)  
   14003f606:	(bad)  
   14003f607:	inc    DWORD PTR [rax]
   14003f609:	add    BYTE PTR [rax],al
   14003f60b:	add    BYTE PTR [rax+0x0],al
   14003f60e:	add    BYTE PTR [rax],al
   14003f610:	mov    eax,0x3f5
	...
   14003f61d:	add    BYTE PTR [rax],al
   14003f61f:	add    BYTE PTR [rcx],al
	...
   14003f629:	add    BYTE PTR [rax],al
   14003f62b:	add    BYTE PTR [rax],dh
   14003f62d:	mov    WORD PTR [rax+rax*1],es
   14003f630:	rex.W test BYTE PTR [rbx],0x0
   14003f634:	and    dh,dh
   14003f636:	add    eax,DWORD PTR [rax]
	...
   14003f650:	add    al,BYTE PTR [rax]
   14003f652:	add    BYTE PTR [rax],al
   14003f654:	(bad)  
   14003f655:	test   BYTE PTR [rbx],0x0
	...
   14003f660:	js     0x14003f658
   14003f662:	add    eax,DWORD PTR [rax]
   14003f664:	shl    al,0x3
	...
   14003f677:	add    BYTE PTR [rax],dh
   14003f679:	mov    WORD PTR [rax+rax*1],es
   14003f67c:	add    DWORD PTR [rax],eax
   14003f67e:	add    BYTE PTR [rax],al
   14003f680:	add    BYTE PTR [rax],al
   14003f682:	add    BYTE PTR [rax],al
   14003f684:	(bad)  
   14003f685:	(bad)  
   14003f686:	(bad)  
   14003f687:	inc    DWORD PTR [rax]
   14003f689:	add    BYTE PTR [rax],al
   14003f68b:	add    BYTE PTR [rax+0x0],al
   14003f68e:	add    BYTE PTR [rax],al
   14003f690:	rex.W test BYTE PTR [rbx],0x0
	...
   14003f6a0:	add    DWORD PTR [rax],eax
	...
   14003f6aa:	add    BYTE PTR [rax],al
   14003f6ac:	push   rax
   14003f6ad:	mov    WORD PTR [rax+rax*1],es
   14003f6b0:	enter  0x3f6,0x0
   14003f6b4:	movabs al,ds:0x3f6
	...
   14003f6cd:	add    BYTE PTR [rax],al
   14003f6cf:	add    BYTE PTR [rdx],al
   14003f6d1:	add    BYTE PTR [rax],al
   14003f6d3:	add    al,ah
   14003f6d5:	test   BYTE PTR [rbx],0x0
	...
   14003f6e0:	clc    
   14003f6e1:	test   BYTE PTR [rbx],0x0
   14003f6e4:	shl    al,0x3
	...
   14003f6f7:	add    BYTE PTR [rax-0x74],dl
   14003f6fa:	add    al,0x0
   14003f6fc:	add    DWORD PTR [rax],eax
   14003f6fe:	add    BYTE PTR [rax],al
   14003f700:	add    BYTE PTR [rax],al
   14003f702:	add    BYTE PTR [rax],al
   14003f704:	(bad)  
   14003f705:	(bad)  
   14003f706:	(bad)  
   14003f707:	inc    DWORD PTR [rax]
   14003f709:	add    BYTE PTR [rax],al
   14003f70b:	add    BYTE PTR [rax+0x0],al
   14003f70e:	add    BYTE PTR [rax],al
   14003f710:	enter  0x3f6,0x0
	...
   14003f720:	add    DWORD PTR [rax],eax
	...
   14003f72a:	add    BYTE PTR [rax],al
   14003f72c:	loopne 0x14003f6ba
   14003f72e:	add    al,0x0
   14003f730:	test   QWORD PTR [rbx],0x3f72000
	...
   14003f74f:	add    BYTE PTR [rdx],al
   14003f751:	add    BYTE PTR [rax],al
   14003f753:	add    BYTE PTR [rax-0x9],ah
   14003f756:	add    eax,DWORD PTR [rax]
	...
   14003f760:	js     0x14003f759
   14003f762:	add    eax,DWORD PTR [rax]
   14003f764:	shl    al,0x3
	...
   14003f777:	add    al,ah
   14003f779:	mov    WORD PTR [rax+rax*1],es
   14003f77c:	add    DWORD PTR [rax],eax
   14003f77e:	add    BYTE PTR [rax],al
   14003f780:	add    BYTE PTR [rax],al
   14003f782:	add    BYTE PTR [rax],al
   14003f784:	(bad)  
   14003f785:	(bad)  
   14003f786:	(bad)  
   14003f787:	inc    DWORD PTR [rax]
   14003f789:	add    BYTE PTR [rax],al
   14003f78b:	add    BYTE PTR [rax+0x0],al
   14003f78e:	add    BYTE PTR [rax],al
   14003f790:	test   QWORD PTR [rbx],0x0
	...
   14003f79f:	add    BYTE PTR [rax],al
   14003f7a1:	lea    eax,[rax+rax*1]
   14003f7a4:	add    DWORD PTR [rax],eax
   14003f7a6:	add    BYTE PTR [rax],al
   14003f7a8:	add    BYTE PTR [rax],al
   14003f7aa:	add    BYTE PTR [rax],al
   14003f7ac:	(bad)  
   14003f7ad:	(bad)  
   14003f7ae:	(bad)  
   14003f7af:	inc    DWORD PTR [rax]
   14003f7b1:	add    BYTE PTR [rax],al
   14003f7b3:	add    BYTE PTR [rax+0x0],al
   14003f7b6:	add    BYTE PTR [rax],al
   14003f7b8:	enter  0x3f7,0x0
	...
   14003f7d0:	add    al,BYTE PTR [rax]
   14003f7d2:	add    BYTE PTR [rax],al
   14003f7d4:	loopne 0x14003f7cd
   14003f7d6:	add    eax,DWORD PTR [rax]
	...
   14003f7e0:	movabs al,ds:0x3e0c00003f7
	...
   14003f7f5:	add    BYTE PTR [rax],al
   14003f7f7:	add    BYTE PTR [rcx],al
	...
   14003f805:	lea    eax,[rax+rax*1]
   14003f808:	enter  0x3f7,0x0
   14003f80c:	clc    
   14003f80d:	test   DWORD PTR [rbx],0x0
	...
   14003f81f:	add    BYTE PTR [rcx],al
	...
   14003f829:	add    BYTE PTR [rax],al
   14003f82b:	add    BYTE PTR [rax+0x480004aa],bh
   14003f831:	add    al,0x4
   14003f833:	add    BYTE PTR [rax],ah
   14003f835:	clc    
   14003f836:	add    eax,DWORD PTR [rax]
	...
   14003f848:	add    DWORD PTR [rax],eax
	...
   14003f852:	add    BYTE PTR [rax],al
   14003f854:	push   0x7000048d
   14003f859:	clc    
   14003f85a:	add    eax,DWORD PTR [rax]
   14003f85c:	rex.W clc 
   14003f85e:	add    eax,DWORD PTR [rax]
	...
   14003f878:	add    al,BYTE PTR [rax]
   14003f87a:	add    BYTE PTR [rax],al
   14003f87c:	mov    al,bh
   14003f87e:	add    eax,DWORD PTR [rax]
	...
   14003f888:	movabs al,ds:0x404200003f8
	...
   14003f89d:	add    BYTE PTR [rax],al
   14003f89f:	add    BYTE PTR [rax-0x73],ch
   14003f8a2:	add    al,0x0
   14003f8a4:	add    DWORD PTR [rax],eax
   14003f8a6:	add    BYTE PTR [rax],al
   14003f8a8:	add    BYTE PTR [rax],al
   14003f8aa:	add    BYTE PTR [rax],al
   14003f8ac:	(bad)  
   14003f8ad:	(bad)  
   14003f8ae:	(bad)  
   14003f8af:	inc    DWORD PTR [rax]
   14003f8b1:	add    BYTE PTR [rax],al
   14003f8b3:	add    BYTE PTR [rax+0x0],al
   14003f8b6:	add    BYTE PTR [rax],al
   14003f8b8:	jo     0x14003f8b2
   14003f8ba:	add    eax,DWORD PTR [rax]
	...
   14003f8c8:	add    DWORD PTR [rax],eax
	...
   14003f8d2:	add    BYTE PTR [rax],al
   14003f8d4:	cwde   
   14003f8d5:	lea    eax,[rax+rax*1]
   14003f8d8:	lock clc 
   14003f8da:	add    eax,DWORD PTR [rax]
   14003f8dc:	enter  0x3f8,0x0
	...
   14003f8f8:	add    DWORD PTR [rax],eax
   14003f8fa:	add    BYTE PTR [rax],al
   14003f8fc:	or     cl,bh
   14003f8fe:	add    eax,DWORD PTR [rax]
	...
   14003f908:	sbb    cl,bh
   14003f90a:	add    eax,DWORD PTR [rax]
	...
   14003f918:	cwde   
   14003f919:	lea    eax,[rax+rax*1]
	...
   14003f924:	(bad)  
   14003f925:	(bad)  
   14003f926:	(bad)  
   14003f927:	inc    DWORD PTR [rax]
   14003f929:	add    BYTE PTR [rax],al
   14003f92b:	add    BYTE PTR [rax+0x0],al
   14003f92e:	add    BYTE PTR [rax],al
   14003f930:	lock clc 
   14003f932:	add    eax,DWORD PTR [rax]
	...
   14003f940:	add    DWORD PTR [rax],eax
	...
   14003f94a:	add    BYTE PTR [rax],al
   14003f94c:	xor    BYTE PTR [rax-0x697fffc],bl
   14003f952:	add    eax,DWORD PTR [rax]
   14003f954:	rex stc 
   14003f956:	add    eax,DWORD PTR [rax]
	...
   14003f970:	add    al,BYTE PTR [rax]
   14003f972:	add    BYTE PTR [rax],al
   14003f974:	cmp    cl,0x3
	...
   14003f97f:	add    BYTE PTR [rax+0x200003f9],bl
   14003f985:	add    al,0x4
	...
   14003f997:	add    BYTE PTR [rax],dh
   14003f999:	cwde   
   14003f99a:	add    al,0x0
   14003f99c:	add    DWORD PTR [rax],eax
   14003f99e:	add    BYTE PTR [rax],al
   14003f9a0:	add    BYTE PTR [rax],al
   14003f9a2:	add    BYTE PTR [rax],al
   14003f9a4:	(bad)  
   14003f9a5:	(bad)  
   14003f9a6:	(bad)  
   14003f9a7:	inc    DWORD PTR [rax]
   14003f9a9:	add    BYTE PTR [rax],al
   14003f9ab:	add    BYTE PTR [rax+0x0],al
   14003f9ae:	add    BYTE PTR [rax],al
   14003f9b0:	push   0x3f9
	...
   14003f9bd:	add    BYTE PTR [rax],al
   14003f9bf:	add    BYTE PTR [rcx],al
	...
   14003f9c9:	add    BYTE PTR [rax],al
   14003f9cb:	add    BYTE PTR [rax],cl
   14003f9cd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003f9ce:	add    al,0x0
   14003f9d0:	call   0x10003fdce
   14003f9d5:	stc    
   14003f9d6:	add    eax,DWORD PTR [rax]
	...
   14003f9f0:	add    eax,DWORD PTR [rax]
   14003f9f2:	add    BYTE PTR [rax],al
   14003f9f4:	add    dl,bh
   14003f9f6:	add    eax,DWORD PTR [rax]
	...
   14003fa00:	and    dl,bh
   14003fa02:	add    eax,DWORD PTR [rax]
   14003fa04:	rex.W cli 
   14003fa06:	add    eax,DWORD PTR [rax]
   14003fa08:	movabs al,ds:0x3fa
	...
   14003fa1d:	add    BYTE PTR [rax],al
   14003fa1f:	add    BYTE PTR [rax],cl
   14003fa21:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003fa22:	add    al,0x0
   14003fa24:	add    al,BYTE PTR [rax]
   14003fa26:	add    BYTE PTR [rax],al
   14003fa28:	add    BYTE PTR [rax],al
   14003fa2a:	add    BYTE PTR [rax],al
   14003fa2c:	(bad)  
   14003fa2d:	(bad)  
   14003fa2e:	(bad)  
   14003fa2f:	inc    DWORD PTR [rax]
   14003fa31:	add    BYTE PTR [rax],al
   14003fa33:	add    BYTE PTR [rax+0x0],al
   14003fa36:	add    BYTE PTR [rax],al
   14003fa38:	call   0x14003fe36
	...
   14003fa45:	add    BYTE PTR [rax],al
   14003fa47:	add    BYTE PTR [rax],ch
   14003fa49:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003fa4a:	add    al,0x0
   14003fa4c:	add    DWORD PTR [rax],eax
   14003fa4e:	add    BYTE PTR [rax],al
   14003fa50:	add    BYTE PTR [rax],al
   14003fa52:	add    BYTE PTR [rax],al
   14003fa54:	(bad)  
   14003fa55:	(bad)  
   14003fa56:	(bad)  
   14003fa57:	inc    DWORD PTR [rax]
   14003fa59:	add    BYTE PTR [rax],al
   14003fa5b:	add    BYTE PTR [rax+0x0],al
   14003fa5e:	add    BYTE PTR [rax],al
   14003fa60:	jo     0x14003fa5c
   14003fa62:	add    eax,DWORD PTR [rax]
	...
   14003fa78:	add    al,BYTE PTR [rax]
   14003fa7a:	add    BYTE PTR [rax],al
   14003fa7c:	mov    dl,bh
   14003fa7e:	add    eax,DWORD PTR [rax]
	...
   14003fa88:	rex.W cli 
   14003fa8a:	add    eax,DWORD PTR [rax]
   14003fa8c:	movabs al,ds:0x3fa
	...
   14003fa9d:	add    BYTE PTR [rax],al
   14003fa9f:	add    BYTE PTR [rax-0x5a],cl
   14003faa2:	add    al,0x0
	...
   14003faac:	(bad)  
   14003faad:	(bad)  
   14003faae:	(bad)  
   14003faaf:	inc    DWORD PTR [rax]
   14003fab1:	add    BYTE PTR [rax],al
   14003fab3:	add    BYTE PTR [rax+0x0],al
   14003fab6:	add    BYTE PTR [rax],al
   14003fab8:	enter  0x3fa,0x0
	...
   14003fad0:	add    DWORD PTR [rax],eax
   14003fad2:	add    BYTE PTR [rax],al
   14003fad4:	loopne 0x14003fad0
   14003fad6:	add    eax,DWORD PTR [rax]
	...
   14003fae0:	movabs al,ds:0x3fa
   14003fae9:	add    BYTE PTR [rax],al
   14003faeb:	add    BYTE PTR [rax],al
   14003faed:	add    BYTE PTR [rax],al
   14003faef:	add    BYTE PTR [rcx],al
	...
   14003faf9:	add    BYTE PTR [rax],al
   14003fafb:	add    BYTE PTR [rax-0x5a],ch
   14003fafe:	add    al,0x0
   14003fb00:	sbb    bl,bh
   14003fb02:	add    eax,DWORD PTR [rax]
   14003fb04:	lock cli 
   14003fb06:	add    eax,DWORD PTR [rax]
	...
   14003fb20:	add    eax,DWORD PTR [rax]
   14003fb22:	add    BYTE PTR [rax],al
   14003fb24:	xor    bl,bh
   14003fb26:	add    eax,DWORD PTR [rax]
	...
   14003fb30:	push   rax
   14003fb31:	sti    
   14003fb32:	add    eax,DWORD PTR [rax]
   14003fb34:	rex.W cli 
   14003fb36:	add    eax,DWORD PTR [rax]
   14003fb38:	movabs al,ds:0x3fa
	...
   14003fb4d:	add    BYTE PTR [rax],al
   14003fb4f:	add    BYTE PTR [rax-0x5a],ch
   14003fb52:	add    al,0x0
   14003fb54:	add    al,BYTE PTR [rax]
   14003fb56:	add    BYTE PTR [rax],al
   14003fb58:	add    BYTE PTR [rax],al
   14003fb5a:	add    BYTE PTR [rax],al
   14003fb5c:	(bad)  
   14003fb5d:	(bad)  
   14003fb5e:	(bad)  
   14003fb5f:	inc    DWORD PTR [rax]
   14003fb61:	add    BYTE PTR [rax],al
   14003fb63:	add    BYTE PTR [rax+0x0],al
   14003fb66:	add    BYTE PTR [rax],al
   14003fb68:	sbb    bl,bh
   14003fb6a:	add    eax,DWORD PTR [rax]
	...
   14003fb78:	add    DWORD PTR [rax],eax
	...
   14003fb82:	add    BYTE PTR [rax],al
   14003fb84:	movabs al,ds:0x780003fba00004a6
   14003fb8d:	sti    
   14003fb8e:	add    eax,DWORD PTR [rax]
	...
   14003fba8:	add    eax,DWORD PTR [rax]
   14003fbaa:	add    BYTE PTR [rax],al
   14003fbac:	mov    eax,0x3fb
   14003fbb1:	add    BYTE PTR [rax],al
   14003fbb3:	add    BYTE PTR [rax],al
   14003fbb5:	add    BYTE PTR [rax],al
   14003fbb7:	add    al,bl
   14003fbb9:	sti    
   14003fbba:	add    eax,DWORD PTR [rax]
   14003fbbc:	rex.W cli 
   14003fbbe:	add    eax,DWORD PTR [rax]
   14003fbc0:	movabs al,ds:0x3fa
	...
   14003fbd5:	add    BYTE PTR [rax],al
   14003fbd7:	add    BYTE PTR [rax+0x20004a6],ah
   14003fbdd:	add    BYTE PTR [rax],al
   14003fbdf:	add    BYTE PTR [rax],al
   14003fbe1:	add    BYTE PTR [rax],al
   14003fbe3:	add    bh,bh
   14003fbe5:	(bad)  
   14003fbe6:	(bad)  
   14003fbe7:	inc    DWORD PTR [rax]
   14003fbe9:	add    BYTE PTR [rax],al
   14003fbeb:	add    BYTE PTR [rax+0x0],al
   14003fbee:	add    BYTE PTR [rax],al
   14003fbf0:	movabs al,ds:0x3fb
   14003fbf9:	add    BYTE PTR [rax],al
   14003fbfb:	add    BYTE PTR [rax],al
   14003fbfd:	add    BYTE PTR [rax],al
   14003fbff:	add    BYTE PTR [rcx],al
	...
   14003fc09:	add    BYTE PTR [rax],al
   14003fc0b:	add    al,bl
   14003fc0d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003fc0e:	add    al,0x0
   14003fc10:	sub    ah,bh
   14003fc12:	add    eax,DWORD PTR [rax]
   14003fc14:	add    ah,bh
   14003fc16:	add    eax,DWORD PTR [rax]
	...
   14003fc30:	add    DWORD PTR [rax],eax
   14003fc32:	add    BYTE PTR [rax],al
   14003fc34:	rex cld 
   14003fc36:	add    eax,DWORD PTR [rax]
	...
   14003fc40:	push   rax
   14003fc41:	cld    
   14003fc42:	add    eax,DWORD PTR [rax]
	...
   14003fc50:	fsub   DWORD PTR [rsi+0x4]
   14003fc56:	add    BYTE PTR [rax],al
   14003fc58:	add    BYTE PTR [rax],al
   14003fc5a:	add    BYTE PTR [rax],al
   14003fc5c:	(bad)  
   14003fc5d:	(bad)  
   14003fc5e:	(bad)  
   14003fc5f:	inc    DWORD PTR [rax]
   14003fc61:	add    BYTE PTR [rax],al
   14003fc63:	add    BYTE PTR [rax+0x0],al
   14003fc66:	add    BYTE PTR [rax],al
   14003fc68:	sub    ah,bh
   14003fc6a:	add    eax,DWORD PTR [rax]
	...
   14003fc78:	add    DWORD PTR [rax],eax
	...
   14003fc82:	add    BYTE PTR [rax],al
   14003fc84:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14003fc86:	add    al,0x0
   14003fc88:	enter  0x3fa,0x0
   14003fc8c:	js     0x14003fc8a
   14003fc8e:	add    eax,DWORD PTR [rax]
	...
   14003fca0:	add    DWORD PTR [rax],eax
	...
   14003fcaa:	add    BYTE PTR [rax],al
   14003fcac:	add    BYTE PTR [rdi-0x337fffc],ah
   14003fcb2:	add    eax,DWORD PTR [rax]
   14003fcb4:	movabs al,ds:0x3fc
	...
   14003fccd:	add    BYTE PTR [rax],al
   14003fccf:	add    BYTE PTR [rdx],al
   14003fcd1:	add    BYTE PTR [rax],al
   14003fcd3:	add    al,ah
   14003fcd5:	cld    
   14003fcd6:	add    eax,DWORD PTR [rax]
	...
   14003fce0:	clc    
   14003fce1:	cld    
   14003fce2:	add    eax,DWORD PTR [rax]
   14003fce4:	and    BYTE PTR [rsp+rax*1],al
	...
   14003fcf7:	add    BYTE PTR [rax],al
   14003fcf9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003fcfa:	add    al,0x0
   14003fcfc:	add    DWORD PTR [rax],eax
   14003fcfe:	add    BYTE PTR [rax],al
   14003fd00:	add    BYTE PTR [rax],al
   14003fd02:	add    BYTE PTR [rax],al
   14003fd04:	(bad)  
   14003fd05:	(bad)  
   14003fd06:	(bad)  
   14003fd07:	inc    DWORD PTR [rax]
   14003fd09:	add    BYTE PTR [rax],al
   14003fd0b:	add    BYTE PTR [rax+0x0],al
   14003fd0e:	add    BYTE PTR [rax],al
   14003fd10:	enter  0x3fc,0x0
	...
   14003fd20:	add    DWORD PTR [rax],eax
	...
   14003fd2a:	add    BYTE PTR [rax],al
   14003fd2c:	sub    BYTE PTR [rdi-0x2b7fffc],ah
   14003fd32:	add    eax,DWORD PTR [rax]
   14003fd34:	and    ch,bh
   14003fd36:	add    eax,DWORD PTR [rax]
	...
   14003fd50:	add    al,BYTE PTR [rax]
   14003fd52:	add    BYTE PTR [rax],al
   14003fd54:	(bad)  
   14003fd55:	std    
   14003fd56:	add    eax,DWORD PTR [rax]
	...
   14003fd60:	js     0x14003fd5f
   14003fd62:	add    eax,DWORD PTR [rax]
   14003fd64:	movabs al,ds:0x3fa
	...
   14003fd75:	add    BYTE PTR [rax],al
   14003fd77:	add    BYTE PTR [rax],ch
   14003fd79:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003fd7a:	add    al,0x0
   14003fd7c:	add    DWORD PTR [rax],eax
   14003fd7e:	add    BYTE PTR [rax],al
   14003fd80:	add    BYTE PTR [rax],al
   14003fd82:	add    BYTE PTR [rax],al
   14003fd84:	(bad)  
   14003fd85:	(bad)  
   14003fd86:	(bad)  
   14003fd87:	inc    DWORD PTR [rax]
   14003fd89:	add    BYTE PTR [rax],al
   14003fd8b:	add    BYTE PTR [rax+0x0],al
   14003fd8e:	add    BYTE PTR [rax],al
   14003fd90:	rex.W std 
   14003fd92:	add    eax,DWORD PTR [rax]
	...
   14003fda0:	add    DWORD PTR [rax],eax
	...
   14003fdaa:	add    BYTE PTR [rax],al
   14003fdac:	sub    BYTE PTR [rsi-0x58ffffc],ah
   14003fdb2:	add    eax,DWORD PTR [rax]
   14003fdb4:	movabs al,ds:0x3fd
	...
   14003fdc5:	add    BYTE PTR [rax],al
   14003fdc7:	add    BYTE PTR [rcx],al
	...
   14003fdd1:	add    BYTE PTR [rax],al
   14003fdd3:	add    BYTE PTR [rax-0x59],dl
   14003fdd6:	add    al,0x0
   14003fdd8:	lock std 
   14003fdda:	add    eax,DWORD PTR [rax]
   14003fddc:	enter  0x3fd,0x0
	...
   14003fdf8:	add    eax,DWORD PTR [rax]
   14003fdfa:	add    BYTE PTR [rax],al
   14003fdfc:	or     dh,bh
   14003fdfe:	add    eax,DWORD PTR [rax]
	...
   14003fe08:	sub    dh,bh
   14003fe0a:	add    eax,DWORD PTR [rax]
   14003fe0c:	rex.W cli 
   14003fe0e:	add    eax,DWORD PTR [rax]
   14003fe10:	movabs al,ds:0x3fa
	...
   14003fe25:	add    BYTE PTR [rax],al
   14003fe27:	add    BYTE PTR [rax-0x59],dl
   14003fe2a:	add    al,0x0
   14003fe2c:	add    al,BYTE PTR [rax]
   14003fe2e:	add    BYTE PTR [rax],al
   14003fe30:	add    BYTE PTR [rax],al
   14003fe32:	add    BYTE PTR [rax],al
   14003fe34:	(bad)  
   14003fe35:	(bad)  
   14003fe36:	(bad)  
   14003fe37:	inc    DWORD PTR [rax]
   14003fe39:	add    BYTE PTR [rax],al
   14003fe3b:	add    BYTE PTR [rax+0x0],al
   14003fe3e:	add    BYTE PTR [rax],al
   14003fe40:	lock std 
   14003fe42:	add    eax,DWORD PTR [rax]
	...
   14003fe50:	add    DWORD PTR [rax],eax
	...
   14003fe5a:	add    BYTE PTR [rax],al
   14003fe5c:	js     0x14003fe05
   14003fe5e:	add    al,0x0
   14003fe60:	js     0x14003fe60
   14003fe62:	add    eax,DWORD PTR [rax]
   14003fe64:	push   rax
   14003fe65:	inc    BYTE PTR [rbx]
	...
   14003fe7f:	add    BYTE PTR [rbx],al
   14003fe81:	add    BYTE PTR [rax],al
   14003fe83:	add    BYTE PTR [rax+0x3fe],dl
   14003fe89:	add    BYTE PTR [rax],al
   14003fe8b:	add    BYTE PTR [rax],al
   14003fe8d:	add    BYTE PTR [rax],al
   14003fe8f:	add    BYTE PTR [rax+0x480003fe],dh
   14003fe95:	cli    
   14003fe96:	add    eax,DWORD PTR [rax]
   14003fe98:	movabs al,ds:0x3fa
	...
   14003fead:	add    BYTE PTR [rax],al
   14003feaf:	add    BYTE PTR [rax-0x59],bh
   14003feb2:	add    al,0x0
   14003feb4:	add    al,BYTE PTR [rax]
   14003feb6:	add    BYTE PTR [rax],al
   14003feb8:	add    BYTE PTR [rax],al
   14003feba:	add    BYTE PTR [rax],al
   14003febc:	(bad)  
   14003febd:	(bad)  
   14003febe:	(bad)  
   14003febf:	inc    DWORD PTR [rax]
   14003fec1:	add    BYTE PTR [rax],al
   14003fec3:	add    BYTE PTR [rax+0x0],al
   14003fec6:	add    BYTE PTR [rax],al
   14003fec8:	js     0x14003fec8
   14003feca:	add    eax,DWORD PTR [rax]
	...
   14003fed8:	add    DWORD PTR [rax],eax
	...
   14003fee2:	add    BYTE PTR [rax],al
   14003fee4:	movabs al,ds:0xd80003ff000004a7
   14003feed:	inc    BYTE PTR [rbx]
	...
   14003ff07:	add    BYTE PTR [rbx],al
   14003ff09:	add    BYTE PTR [rax],al
   14003ff0b:	add    BYTE PTR [rax],bl
   14003ff0d:	inc    DWORD PTR [rbx]
	...
   14003ff17:	add    BYTE PTR [rax],bh
   14003ff19:	inc    DWORD PTR [rbx]
   14003ff1b:	add    BYTE PTR [rax-0x6],cl
   14003ff1e:	add    eax,DWORD PTR [rax]
   14003ff20:	movabs al,ds:0x3fa
	...
   14003ff35:	add    BYTE PTR [rax],al
   14003ff37:	add    BYTE PTR [rax+0x20004a7],ah
   14003ff3d:	add    BYTE PTR [rax],al
   14003ff3f:	add    BYTE PTR [rax],al
   14003ff41:	add    BYTE PTR [rax],al
   14003ff43:	add    bh,bh
   14003ff45:	(bad)  
   14003ff46:	(bad)  
   14003ff47:	inc    DWORD PTR [rax]
   14003ff49:	add    BYTE PTR [rax],al
   14003ff4b:	add    BYTE PTR [rax+0x0],al
   14003ff4e:	add    BYTE PTR [rax],al
   14003ff50:	add    bh,bh
   14003ff52:	add    eax,DWORD PTR [rax]
	...
   14003ff60:	add    DWORD PTR [rax],eax
	...
   14003ff6a:	add    BYTE PTR [rax],al
   14003ff6c:	enter  0x4a7,0x0
   14003ff70:	mov    bh,bh
   14003ff72:	add    eax,DWORD PTR [rax]
   14003ff74:	(bad)  
   14003ff75:	inc    DWORD PTR [rbx]
	...
   14003ff8f:	add    BYTE PTR [rbx],al
   14003ff91:	add    BYTE PTR [rax],al
   14003ff93:	add    BYTE PTR [rax+0x3ff],ah
   14003ff99:	add    BYTE PTR [rax],al
   14003ff9b:	add    BYTE PTR [rax],al
   14003ff9d:	add    BYTE PTR [rax],al
   14003ff9f:	add    al,al
   14003ffa1:	inc    DWORD PTR [rbx]
   14003ffa3:	add    al,bh
   14003ffa5:	cld    
   14003ffa6:	add    eax,DWORD PTR [rax]
   14003ffa8:	and    BYTE PTR [rsp+rax*1],al
	...
   14003ffbf:	add    al,cl
   14003ffc1:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003ffc2:	add    al,0x0
   14003ffc4:	add    al,BYTE PTR [rax]
   14003ffc6:	add    BYTE PTR [rax],al
   14003ffc8:	add    BYTE PTR [rax],al
   14003ffca:	add    BYTE PTR [rax],al
   14003ffcc:	(bad)  
   14003ffcd:	(bad)  
   14003ffce:	(bad)  
   14003ffcf:	inc    DWORD PTR [rax]
   14003ffd1:	add    BYTE PTR [rax],al
   14003ffd3:	add    BYTE PTR [rax+0x0],al
   14003ffd6:	add    BYTE PTR [rax],al
   14003ffd8:	mov    bh,bh
   14003ffda:	add    eax,DWORD PTR [rax]
	...
   14003ffe8:	add    DWORD PTR [rax],eax
	...
   14003fff2:	add    BYTE PTR [rax],al
   14003fff4:	clc    
   14003fff5:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14003fff6:	add    al,0x0
   14003fff8:	adc    BYTE PTR [rax],al
   14003fffa:	add    al,0x0
   14003fffc:	call   0x140040400
	...
   140040015:	add    BYTE PTR [rax],al
   140040017:	add    BYTE PTR [rdx],al
   140040019:	add    BYTE PTR [rax],al
   14004001b:	add    BYTE PTR [rax],ch
   14004001d:	add    BYTE PTR [rax+rax*1],al
	...
   140040028:	add    BYTE PTR [rax+rax*1],al
   14004002c:	push   rax
   14004002d:	cld    
   14004002e:	add    eax,DWORD PTR [rax]
	...
   140040040:	clc    
   140040041:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040042:	add    al,0x0
   140040044:	add    DWORD PTR [rax],eax
   140040046:	add    BYTE PTR [rax],al
   140040048:	add    BYTE PTR [rax],al
   14004004a:	add    BYTE PTR [rax],al
   14004004c:	(bad)  
   14004004d:	(bad)  
   14004004e:	(bad)  
   14004004f:	inc    DWORD PTR [rax]
   140040051:	add    BYTE PTR [rax],al
   140040053:	add    BYTE PTR [rax+0x0],al
   140040056:	add    BYTE PTR [rax],al
   140040058:	adc    BYTE PTR [rax],al
   14004005a:	add    al,0x0
	...
   140040068:	add    DWORD PTR [rax],eax
	...
   140040072:	add    BYTE PTR [rax],al
   140040074:	sub    BYTE PTR [rax+0x900004],0x4
   14004007b:	add    BYTE PTR [rax+0x0],ch
   14004007e:	add    al,0x0
	...
   140040098:	add    DWORD PTR [rax],eax
   14004009a:	add    BYTE PTR [rax],al
   14004009c:	test   al,0x0
   14004009e:	add    al,0x0
	...
   1400400a8:	mov    eax,0x400
	...
   1400400b5:	add    BYTE PTR [rax],al
   1400400b7:	add    BYTE PTR [rax+0x4a8],al
   1400400bd:	add    BYTE PTR [rax],al
   1400400bf:	add    BYTE PTR [rax],al
   1400400c1:	add    BYTE PTR [rax],al
   1400400c3:	add    bh,bh
   1400400c5:	(bad)  
   1400400c6:	(bad)  
   1400400c7:	inc    DWORD PTR [rax]
   1400400c9:	add    BYTE PTR [rax],al
   1400400cb:	add    BYTE PTR [rax+0x0],al
   1400400ce:	add    BYTE PTR [rax],al
   1400400d0:	nop
   1400400d1:	add    BYTE PTR [rax+rax*1],al
	...
   1400400e8:	add    al,BYTE PTR [rax]
   1400400ea:	add    BYTE PTR [rax],al
   1400400ec:	clc    
   1400400ed:	add    BYTE PTR [rax+rax*1],al
	...
   1400400f8:	adc    BYTE PTR [rcx],al
   1400400fa:	add    al,0x0
   1400400fc:	mov    eax,0x400
	...
   14004010d:	add    BYTE PTR [rax],al
   14004010f:	add    BYTE PTR [rax+0x10004a8],ch
   140040115:	add    BYTE PTR [rax],al
   140040117:	add    BYTE PTR [rax],al
   140040119:	add    BYTE PTR [rax],al
   14004011b:	add    bh,bh
   14004011d:	(bad)  
   14004011e:	(bad)  
   14004011f:	inc    DWORD PTR [rax]
   140040121:	add    BYTE PTR [rax],al
   140040123:	add    BYTE PTR [rax+0x0],al
   140040126:	add    BYTE PTR [rax],al
   140040128:	loopne 0x14004012a
   14004012a:	add    al,0x0
	...
   140040138:	add    DWORD PTR [rax],eax
	...
   140040142:	add    BYTE PTR [rax],al
   140040144:	shr    BYTE PTR [rax+0x1600004],1
   14004014a:	add    al,0x0
   14004014c:	cmp    BYTE PTR [rcx],al
   14004014e:	add    al,0x0
	...
   140040168:	add    eax,DWORD PTR [rax]
   14004016a:	add    BYTE PTR [rax],al
   14004016c:	js     0x14004016f
   14004016e:	add    al,0x0
	...
   140040178:	cwde   
   140040179:	add    DWORD PTR [rax+rax*1],eax
   14004017c:	adc    BYTE PTR [rcx],al
   14004017e:	add    al,0x0
   140040180:	mov    eax,0x400
	...
   140040195:	add    BYTE PTR [rax],al
   140040197:	add    al,dl
   140040199:	test   al,0x4
   14004019b:	add    BYTE PTR [rdx],al
   14004019d:	add    BYTE PTR [rax],al
   14004019f:	add    BYTE PTR [rax],al
   1400401a1:	add    BYTE PTR [rax],al
   1400401a3:	add    bh,bh
   1400401a5:	(bad)  
   1400401a6:	(bad)  
   1400401a7:	inc    DWORD PTR [rax]
   1400401a9:	add    BYTE PTR [rax],al
   1400401ab:	add    BYTE PTR [rax+0x0],al
   1400401ae:	add    BYTE PTR [rax],al
   1400401b0:	(bad)  
   1400401b1:	add    DWORD PTR [rax+rax*1],eax
	...
   1400401c0:	add    DWORD PTR [rax],eax
	...
   1400401ca:	add    BYTE PTR [rax],al
   1400401cc:	cwde   
   1400401cd:	test   eax,0x1e80004
   1400401d2:	add    al,0x0
   1400401d4:	rol    BYTE PTR [rcx],0x4
	...
   1400401ef:	add    BYTE PTR [rcx],al
   1400401f1:	add    BYTE PTR [rax],al
   1400401f3:	add    BYTE PTR [rax],al
   1400401f5:	add    al,BYTE PTR [rax+rax*1]
	...
   140040200:	adc    BYTE PTR [rdx],al
   140040202:	add    al,0x0
	...
   140040210:	cwde   
   140040211:	test   eax,0x4
   140040216:	add    BYTE PTR [rax],al
   140040218:	add    BYTE PTR [rax],al
   14004021a:	add    BYTE PTR [rax],al
   14004021c:	(bad)  
   14004021d:	(bad)  
   14004021e:	(bad)  
   14004021f:	inc    DWORD PTR [rax]
   140040221:	add    BYTE PTR [rax],al
   140040223:	add    BYTE PTR [rax+0x0],al
   140040226:	add    BYTE PTR [rax],al
   140040228:	call   0x14004062e
	...
   140040235:	add    BYTE PTR [rax],al
   140040237:	add    BYTE PTR [rcx],al
	...
   140040241:	add    BYTE PTR [rax],al
   140040243:	add    al,al
   140040245:	test   eax,0x2600004
   14004024a:	add    al,0x0
   14004024c:	cmp    BYTE PTR [rdx],al
   14004024e:	add    al,0x0
	...
   140040268:	add    eax,DWORD PTR [rax]
   14004026a:	add    BYTE PTR [rax],al
   14004026c:	js     0x140040270
   14004026e:	add    al,0x0
	...
   140040278:	cwde   
   140040279:	add    al,BYTE PTR [rax+rax*1]
   14004027c:	movabs al,ds:0x40420000403
	...
   140040295:	add    BYTE PTR [rax],al
   140040297:	add    al,al
   140040299:	test   eax,0x20004
   14004029e:	add    BYTE PTR [rax],al
   1400402a0:	add    BYTE PTR [rax],al
   1400402a2:	add    BYTE PTR [rax],al
   1400402a4:	(bad)  
   1400402a5:	(bad)  
   1400402a6:	(bad)  
   1400402a7:	inc    DWORD PTR [rax]
   1400402a9:	add    BYTE PTR [rax],al
   1400402ab:	add    BYTE PTR [rax+0x0],al
   1400402ae:	add    BYTE PTR [rax],al
   1400402b0:	(bad)  
   1400402b1:	add    al,BYTE PTR [rax+rax*1]
	...
   1400402c0:	add    DWORD PTR [rax],eax
	...
   1400402ca:	add    BYTE PTR [rax],al
   1400402cc:	adc    BYTE PTR [rbx+0x2e80004],ch
   1400402d2:	add    al,0x0
   1400402d4:	rol    BYTE PTR [rdx],0x4
	...
   1400402ef:	add    BYTE PTR [rbx],al
   1400402f1:	add    BYTE PTR [rax],al
   1400402f3:	add    BYTE PTR [rax],al
   1400402f5:	add    eax,DWORD PTR [rax+rax*1]
	...
   140040300:	and    BYTE PTR [rbx],al
   140040302:	add    al,0x0
   140040304:	movabs al,ds:0x40420000403
	...
   14004031d:	add    BYTE PTR [rax],al
   14004031f:	add    BYTE PTR [rax],dl
   140040321:	stos   DWORD PTR es:[rdi],eax
   140040322:	add    al,0x0
   140040324:	add    al,BYTE PTR [rax]
   140040326:	add    BYTE PTR [rax],al
   140040328:	add    BYTE PTR [rax],al
   14004032a:	add    BYTE PTR [rax],al
   14004032c:	(bad)  
   14004032d:	(bad)  
   14004032e:	(bad)  
   14004032f:	inc    DWORD PTR [rax]
   140040331:	add    BYTE PTR [rax],al
   140040333:	add    BYTE PTR [rax+0x0],al
   140040336:	add    BYTE PTR [rax],al
   140040338:	call   0x14004073f
	...
   140040345:	add    BYTE PTR [rax],al
   140040347:	add    BYTE PTR [rcx],al
	...
   140040351:	add    BYTE PTR [rax],al
   140040353:	add    al,ah
   140040355:	stos   BYTE PTR es:[rdi],al
   140040356:	add    al,0x0
   140040358:	jo     0x14004035d
   14004035a:	add    al,0x0
   14004035c:	add    rax,QWORD PTR [rax+rax*1]
	...
   140040378:	add    al,BYTE PTR [rax]
   14004037a:	add    BYTE PTR [rax],al
   14004037c:	mov    BYTE PTR [rbx],al
   14004037e:	add    al,0x0
	...
   140040388:	movabs al,ds:0x40420000403
	...
   14004039d:	add    BYTE PTR [rax],al
   14004039f:	add    al,ah
   1400403a1:	stos   BYTE PTR es:[rdi],al
   1400403a2:	add    al,0x0
   1400403a4:	add    DWORD PTR [rax],eax
   1400403a6:	add    BYTE PTR [rax],al
   1400403a8:	add    BYTE PTR [rax],al
   1400403aa:	add    BYTE PTR [rax],al
   1400403ac:	(bad)  
   1400403ad:	(bad)  
   1400403ae:	(bad)  
   1400403af:	inc    DWORD PTR [rax]
   1400403b1:	add    BYTE PTR [rax],al
   1400403b3:	add    BYTE PTR [rax+0x0],al
   1400403b6:	add    BYTE PTR [rax],al
   1400403b8:	jo     0x1400403bd
   1400403ba:	add    al,0x0
	...
   1400403c8:	add    DWORD PTR [rax],eax
	...
   1400403d2:	add    BYTE PTR [rax],al
   1400403d4:	cmp    BYTE PTR [rbx+0x3f00004],ch
   1400403da:	add    al,0x0
   1400403dc:	enter  0x403,0x0
	...
   1400403f8:	add    al,BYTE PTR [rax]
   1400403fa:	add    BYTE PTR [rax],al
   1400403fc:	or     BYTE PTR [rsp+rax*1],al
	...
   140040407:	add    BYTE PTR [rax+0x4],dh
   14004040a:	add    al,0x0
   14004040c:	and    BYTE PTR [rsp+rax*1],al
	...
   14004041f:	add    BYTE PTR [rax+0x4aa],bh
   140040425:	add    BYTE PTR [rax],al
   140040427:	add    BYTE PTR [rax],al
   140040429:	add    BYTE PTR [rax],al
   14004042b:	add    bh,bh
   14004042d:	(bad)  
   14004042e:	(bad)  
   14004042f:	inc    DWORD PTR [rax]
   140040431:	add    BYTE PTR [rax],al
   140040433:	add    BYTE PTR [rax+0x0],al
   140040436:	add    BYTE PTR [rax],al
   140040438:	rex.W add al,0x4
	...
   14004044f:	add    BYTE PTR [rcx],al
   140040451:	add    BYTE PTR [rax],al
   140040453:	add    BYTE PTR [rax+0x4],ah
   140040456:	add    al,0x0
	...
   140040460:	and    BYTE PTR [rsp+rax*1],al
	...
   14004046f:	add    BYTE PTR [rax],bh
   140040471:	stos   DWORD PTR es:[rdi],eax
   140040472:	add    al,0x0
   140040474:	add    DWORD PTR [rax],eax
   140040476:	add    BYTE PTR [rax],al
   140040478:	add    BYTE PTR [rax],al
   14004047a:	add    BYTE PTR [rax],al
   14004047c:	(bad)  
   14004047d:	(bad)  
   14004047e:	(bad)  
   14004047f:	inc    DWORD PTR [rax]
   140040481:	add    BYTE PTR [rax],al
   140040483:	add    BYTE PTR [rax+0x0],al
   140040486:	add    BYTE PTR [rax],al
   140040488:	lock add eax,DWORD PTR [rax+rax*1]
	...
   140040498:	add    DWORD PTR [rax],eax
	...
   1400404a2:	add    BYTE PTR [rax],al
   1400404a4:	(bad)  
   1400404a5:	stos   DWORD PTR es:[rdi],eax
   1400404a6:	add    al,0x0
   1400404a8:	rol    BYTE PTR [rsp+rax*1],0x0
   1400404ac:	cwde   
   1400404ad:	add    al,0x4
	...
   1400404c7:	add    BYTE PTR [rdx],al
   1400404c9:	add    BYTE PTR [rax],al
   1400404cb:	add    al,bl
   1400404cd:	add    al,0x4
	...
   1400404d7:	add    al,dh
   1400404d9:	add    al,0x4
   1400404db:	add    al,ch
   1400404dd:	add    eax,0x4
	...
   1400404ee:	add    BYTE PTR [rax],al
   1400404f0:	(bad)  
   1400404f1:	stos   DWORD PTR es:[rdi],eax
   1400404f2:	add    al,0x0
   1400404f4:	add    DWORD PTR [rax],eax
   1400404f6:	add    BYTE PTR [rax],al
   1400404f8:	add    BYTE PTR [rax],al
   1400404fa:	add    BYTE PTR [rax],al
   1400404fc:	(bad)  
   1400404fd:	(bad)  
   1400404fe:	(bad)  
   1400404ff:	inc    DWORD PTR [rax]
   140040501:	add    BYTE PTR [rax],al
   140040503:	add    BYTE PTR [rax+0x0],al
   140040506:	add    BYTE PTR [rax],al
   140040508:	rol    BYTE PTR [rsp+rax*1],0x0
	...
   140040518:	add    DWORD PTR [rax],eax
	...
   140040522:	add    BYTE PTR [rax],al
   140040524:	mov    BYTE PTR [rbx+0x5400004],ch
   14004052a:	add    al,0x0
   14004052c:	sbb    BYTE PTR [rip+0x4],al        # 0x140040536
	...
   140040546:	add    BYTE PTR [rax],al
   140040548:	add    al,BYTE PTR [rax]
   14004054a:	add    BYTE PTR [rax],al
   14004054c:	pop    rax
   14004054d:	add    eax,0x4
   140040552:	add    BYTE PTR [rax],al
   140040554:	add    BYTE PTR [rax],al
   140040556:	add    BYTE PTR [rax],al
   140040558:	jo     0x14004055f
   14004055a:	add    al,0x0
   14004055c:	call   0x140040966
	...
   14004056d:	add    BYTE PTR [rax],al
   14004056f:	add    BYTE PTR [rax+0x10004ab],cl
   140040575:	add    BYTE PTR [rax],al
   140040577:	add    BYTE PTR [rax],al
   140040579:	add    BYTE PTR [rax],al
   14004057b:	add    bh,bh
   14004057d:	(bad)  
   14004057e:	(bad)  
   14004057f:	inc    DWORD PTR [rax]
   140040581:	add    BYTE PTR [rax],al
   140040583:	add    BYTE PTR [rax+0x0],al
   140040586:	add    BYTE PTR [rax],al
   140040588:	rex add eax,0x4
	...
   140040596:	add    BYTE PTR [rax],al
   140040598:	add    DWORD PTR [rax],eax
	...
   1400405a2:	add    BYTE PTR [rax],al
   1400405a4:	mov    al,0xab
   1400405a6:	add    al,0x0
   1400405a8:	rol    BYTE PTR [rip+0x5980004],0x4        # 0x1459c05b3
	...
   1400405c7:	add    BYTE PTR [rcx],al
   1400405c9:	add    BYTE PTR [rax],al
   1400405cb:	add    al,bl
   1400405cd:	add    eax,0x4
   1400405d2:	add    BYTE PTR [rax],al
   1400405d4:	add    BYTE PTR [rax],al
   1400405d6:	add    BYTE PTR [rax],al
   1400405d8:	call   0x1400409e2
	...
   1400405e5:	add    BYTE PTR [rax],al
   1400405e7:	add    BYTE PTR [rax+0x4ab],dh
   1400405ed:	add    BYTE PTR [rax],al
   1400405ef:	add    BYTE PTR [rax],al
   1400405f1:	add    BYTE PTR [rax],al
   1400405f3:	add    bh,bh
   1400405f5:	(bad)  
   1400405f6:	(bad)  
   1400405f7:	inc    DWORD PTR [rax]
   1400405f9:	add    BYTE PTR [rax],al
   1400405fb:	add    BYTE PTR [rax+0x0],al
   1400405fe:	add    BYTE PTR [rax],al
   140040600:	rol    BYTE PTR [rip+0x4],0x0        # 0x14004060b
	...
   14004062f:	add    BYTE PTR [rcx],al
   140040631:	add    al,0x1
   140040633:	add    BYTE PTR [rdx+rax*2],al
   140040636:	add    BYTE PTR [rax],al
   140040638:	sbb    DWORD PTR [rdx],ecx
   14004063a:	add    al,BYTE PTR [rax]
   14004063c:	or     dh,BYTE PTR [rdx]
   14004063e:	(bad)  
   14004063f:	push   rax
   140040640:	mov    ah,0x53
   140040642:	add    DWORD PTR [rax],eax
   140040644:	adc    BYTE PTR [rdx+0x3],ch
   140040647:	add    BYTE PTR [rcx],bl
   140040649:	or     eax,0x62040001
   14004064e:	add    BYTE PTR [rax],al
   140040650:	mov    ah,0x53
   140040652:	add    DWORD PTR [rax],eax
   140040654:	adc    BYTE PTR [rdx+0x3],ch
	...
   14004065f:	add    BYTE PTR [rcx],al
   140040661:	add    BYTE PTR [rax],al
   140040663:	add    BYTE PTR [rcx],al
   140040665:	add    BYTE PTR [rax],al
   140040667:	add    BYTE PTR [rsi+rax*1+0x4],ch
   14004066b:	add    BYTE PTR [rax],al
   14004066d:	add    BYTE PTR [rax],al
   14004066f:	add    BYTE PTR [rax],cl
   140040671:	add    BYTE PTR [rax+rax*1],0x28
   140040675:	add    BYTE PTR [rax],al
   140040677:	add    BYTE PTR [rax+0x3800032a],al
   14004067d:	add    BYTE PTR [rax],al
   14004067f:	add    ah,ch
   140040681:	(bad)  
   140040682:	add    BYTE PTR [rax],al
   140040684:	(bad)  
   140040685:	(bad)  
   140040686:	(bad)  
   140040687:	call   FWORD PTR [rbx+riz*2]
   14004068a:	add    BYTE PTR [rax],al
   14004068c:	add    BYTE PTR [rax],al
   14004068e:	add    BYTE PTR [rax],al
   140040690:	and    al,0x63
   140040692:	add    BYTE PTR [rax],al
   140040694:	(bad)  
   140040695:	(bad)  
   140040696:	(bad)  
   140040697:	inc    DWORD PTR [rax+0x32a]
   14004069d:	add    BYTE PTR [rax],al
   14004069f:	add    BYTE PTR [rbp+0x100032a],cl
   1400406a5:	add    BYTE PTR [rax],al
   1400406a7:	add    BYTE PTR [rdi+0x32a],dl
   1400406ad:	add    BYTE PTR [rax],al
   1400406af:	add    BYTE PTR [rcx],bl
   1400406b1:	(bad)  
   1400406b2:	add    eax,0x4d340d00
   1400406b7:	add    BYTE PTR [rip+0x6004801],cl        # 0x146044ebe
   1400406bd:	jo     0x1400406bf
   1400406bf:	add    BYTE PTR [rax+0x30000158],al
   1400406c5:	add    al,BYTE PTR [rax]
   1400406c7:	add    BYTE PTR [rcx],dl
   1400406c9:	or     eax,0x62040001
   1400406ce:	add    BYTE PTR [rax],al
   1400406d0:	mov    ah,0x53
   1400406d2:	add    DWORD PTR [rax],eax
   1400406d4:	cwde   
   1400406d5:	imul   eax,DWORD PTR [rbx],0x0
   1400406d8:	rex.R
   1400406d9:	add    BYTE PTR gs:[rax],al
   1400406dc:	(bad)  
   1400406dd:	(bad)  
   1400406de:	(bad)  
   1400406df:	jmp    QWORD PTR [rbx+0x65]
   1400406e2:	add    BYTE PTR [rax],al
   1400406e4:	add    BYTE PTR [rax],al
   1400406e6:	add    BYTE PTR [rax],al
   1400406e8:	jo     0x14004074f
   1400406ea:	add    BYTE PTR [rax],al
   1400406ec:	(bad)  
   1400406ed:	(bad)  
   1400406ee:	(bad)  
   1400406ef:	call   FWORD PTR [rcx]
   1400406f1:	or     al,BYTE PTR [rdx]
   1400406f3:	add    BYTE PTR [rdx],cl
   1400406f5:	xor    al,BYTE PTR [rsi]
   1400406f7:	push   rax
   1400406f8:	mov    ah,0x53
   1400406fa:	add    DWORD PTR [rax],eax
   1400406fc:	movabs al,ds:0x140004141900036c
   140040705:	xor    al,0x8
   140040707:	add    BYTE PTR [rsi],al
   140040709:	push   rdx
   14004070a:	add    dh,BYTE PTR [rax-0x4c]
   14004070d:	push   rbx
   14004070e:	add    DWORD PTR [rax],eax
   140040710:	movabs al,ds:0x36c
   140040719:	add    BYTE PTR [rax],al
   14004071b:	add    BYTE PTR [rcx],al
   14004071d:	add    BYTE PTR [rax],al
   14004071f:	add    BYTE PTR [rcx],al
   140040721:	add    BYTE PTR [rax],al
   140040723:	add    BYTE PTR [rax],ch
   140040725:	(bad)  
   140040726:	add    al,0x0
   140040728:	add    BYTE PTR [rax],al
   14004072a:	add    BYTE PTR [rax],al
   14004072c:	or     BYTE PTR [rax+0x280004],al
   140040732:	add    BYTE PTR [rax],al
   140040734:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040735:	sub    al,BYTE PTR [rbx]
   140040737:	add    BYTE PTR [rax],bh
   140040739:	add    BYTE PTR [rax],al
   14004073b:	add    bh,bh
   14004073d:	(bad)  
   14004073e:	(bad)  
   14004073f:	inc    DWORD PTR [rax]
   140040741:	add    BYTE PTR [rax],al
   140040743:	add    bh,bh
   140040745:	(bad)  
   140040746:	(bad)  
   140040747:	inc    DWORD PTR [rax]
   140040749:	add    BYTE PTR [rax],al
   14004074b:	add    al,dh
   14004074d:	data16 add BYTE PTR [rax],al
   140040750:	(bad)  
   140040751:	(bad)  
   140040752:	(bad)  
   140040753:	call   FWORD PTR [rbx]
   140040755:	add    BYTE PTR [eax],al
   140040758:	add    BYTE PTR [rax],al
   14004075a:	add    BYTE PTR [rax],al
   14004075c:	sub    BYTE PTR [rdi+0x0],ah
   14004075f:	add    bh,bh
   140040761:	(bad)  
   140040762:	(bad)  
   140040763:	jmp    QWORD PTR [rdi+0x32a]
   140040769:	add    BYTE PTR [rax],al
   14004076b:	add    BYTE PTR [rdx+rbp*1+0x10003],dh
   140040772:	add    BYTE PTR [rax],al
   140040774:	enter  0x32a,0x0
   140040778:	add    BYTE PTR [rax],al
   14004077a:	add    BYTE PTR [rax],al
   14004077c:	sbb    DWORD PTR [rdx],ecx
   14004077e:	add    al,BYTE PTR [rax]
   140040780:	or     dh,BYTE PTR [rdx]
   140040782:	(bad)  
   140040783:	push   rax
   140040784:	mov    ah,0x53
   140040786:	add    DWORD PTR [rax],eax
   140040788:	fsubr  DWORD PTR [rbx+rax*1+0x0]
   14004078c:	sbb    DWORD PTR [rcx],esp
   14004078e:	or     BYTE PTR [rax],al
   140040790:	and    DWORD PTR [rsp+rcx*1+0x0],esp
   140040794:	sbb    al,0x34
   140040796:	or     eax,DWORD PTR [rax]
   140040798:	(bad)  
   140040799:	push   rdx
   14004079a:	or     dl,al
   14004079c:	or     al,al
   14004079e:	(bad)  
   14004079f:	jo     0x140040755
   1400407a1:	push   rbx
   1400407a2:	add    DWORD PTR [rax],eax
   1400407a4:	fsubr  DWORD PTR [rbx+rax*1+0x0]
	...
   1400407b0:	add    DWORD PTR [rax],eax
   1400407b2:	add    BYTE PTR [rax],al
   1400407b4:	add    DWORD PTR [rax],eax
   1400407b6:	add    BYTE PTR [rax],al
   1400407b8:	mov    esp,0x407
   1400407bd:	add    BYTE PTR [rax],al
   1400407bf:	add    BYTE PTR [rax],cl
   1400407c1:	add    BYTE PTR [rax+rax*1],0x28
   1400407c5:	add    BYTE PTR [rax],al
   1400407c7:	add    bh,cl
   1400407c9:	sub    al,BYTE PTR [rbx]
   1400407cb:	add    BYTE PTR [rax],bh
   1400407cd:	add    BYTE PTR [rax],al
   1400407cf:	add    BYTE PTR [rdx+rbp*2],bh
   1400407d2:	add    BYTE PTR [rax],al
   1400407d4:	(bad)  
   1400407d5:	(bad)  
   1400407d6:	(bad)  
   1400407d7:	jmp    QWORD PTR [rbp+0x6a]
   1400407dd:	add    BYTE PTR [rax],al
   1400407df:	add    ch,al
   1400407e1:	push   0x0
   1400407e3:	add    bh,bh
   1400407e5:	(bad)  
   1400407e6:	(bad)  
   1400407e7:	dec    edi
   1400407e9:	sub    al,BYTE PTR [rbx]
   1400407eb:	add    BYTE PTR [rax],al
   1400407ed:	add    BYTE PTR [rax],al
   1400407ef:	add    ah,bl
   1400407f1:	sub    al,BYTE PTR [rbx]
   1400407f3:	add    BYTE PTR [rcx],al
   1400407f5:	add    BYTE PTR [rax],al
   1400407f7:	add    ah,dh
   1400407f9:	sub    al,BYTE PTR [rbx]
   1400407fb:	add    BYTE PTR [rax],al
   1400407fd:	add    BYTE PTR [rax],al
   1400407ff:	add    BYTE PTR [rcx],dl
   140040801:	sbb    DWORD PTR [rsi],eax
   140040803:	add    BYTE PTR [rcx],bl
   140040805:	or     al,BYTE PTR fs:[rax]
   140040808:	adc    al,0x34
   14004080a:	or     BYTE PTR [rax],al
   14004080c:	(bad)  
   14004080d:	push   rdx
   14004080e:	add    dh,BYTE PTR [rax-0x4c]
   140040811:	push   rbx
   140040812:	add    DWORD PTR [rax],eax
   140040814:	add    BYTE PTR [rbp+0x3],ch
   140040817:	add    bh,bh
   140040819:	(bad)  
   14004081a:	(bad)  
   14004081b:	(bad)  
   14004081c:	sti    
   14004081d:	sub    al,BYTE PTR [rbx]
   14004081f:	add    ah,ch
   140040821:	imul   eax,DWORD PTR [rax],0x0
   140040824:	(bad)  
   140040825:	(bad)  
   140040826:	(bad)  
   140040827:	(bad)  
   140040828:	cmp    ch,BYTE PTR [rax+rax*1+0x0]
   14004082c:	add    BYTE PTR [rax],al
   14004082e:	add    BYTE PTR [rax],al
   140040830:	rex ins BYTE PTR es:[rdi],dx
   140040832:	add    BYTE PTR [rax],al
   140040834:	(bad)  
   140040835:	(bad)  
   140040836:	(bad)  
   140040837:	inc    DWORD PTR [rcx]
   140040839:	or     al,BYTE PTR [rax+rax*1]
   14004083c:	or     dh,BYTE PTR [rsi+rax*1]
   14004083f:	add    BYTE PTR [rdx],cl
   140040841:	xor    al,BYTE PTR [rsi]
   140040843:	(bad)  
   140040844:	add    DWORD PTR [rcx],ebx
   140040846:	or     al,BYTE PTR [rax]
   140040848:	sbb    DWORD PTR [rcx+rcx*1+0x0],esi
   14004084c:	sbb    DWORD PTR [rax+rcx*1+0x0],esp
   140040850:	sbb    DWORD PTR [rdi+rax*1+0x0],edx
   140040854:	sbb    DWORD PTR [rsi+rax*1],esi
   140040857:	add    BYTE PTR [rcx],bl
   140040859:	xor    dl,BYTE PTR [rip+0x21311c0]        # 0x142171a1f
   14004085f:	add    BYTE PTR [rdx],cl
   140040861:	push   rdx
   140040862:	(bad)  
   140040863:	xor    BYTE PTR [rbx+rdx*2+0x6d480001],dh
   14004086a:	add    eax,DWORD PTR [rax]
   14004086c:	(bad)  
   14004086d:	(bad)  
   14004086e:	(bad)  
   14004086f:	call   FWORD PTR [rdx]
   140040871:	sub    eax,DWORD PTR [rbx]
   140040873:	add    BYTE PTR [rax],al
   140040875:	add    BYTE PTR [rax],al
   140040877:	add    BYTE PTR [rdx],bh
   140040879:	sub    eax,DWORD PTR [rbx]
   14004087b:	add    BYTE PTR [rax+0x73],bl
   14004087e:	add    BYTE PTR [rax],al
   140040880:	(bad)  
   140040881:	(bad)  
   140040882:	(bad)  
   140040883:	(bad)  
   140040884:	js     0x1400408f9
   140040886:	add    BYTE PTR [rax],al
   140040888:	add    DWORD PTR [rax],eax
   14004088a:	add    BYTE PTR [rax],al
   14004088c:	pcmpeqb mm0,QWORD PTR [rax]
   14004088f:	add    BYTE PTR [rax],al
   140040891:	add    BYTE PTR [rax],al
   140040893:	add    BYTE PTR [rsp+rsi*2],bl
   140040896:	add    BYTE PTR [rax],al
   140040898:	(bad)  
   140040899:	(bad)  
   14004089a:	(bad)  
   14004089b:	inc    DWORD PTR [rcx]
   14004089d:	sbb    DWORD PTR [rdx],ecx
   14004089f:	add    BYTE PTR [rcx],bl
   1400408a1:	je     0x1400408b0
   1400408a3:	add    BYTE PTR [rcx],bl
   1400408a5:	fs or  al,0x0
   1400408a8:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   1400408ac:	sbb    DWORD PTR [rdx+rcx*1],esi
   1400408af:	add    BYTE PTR [rcx],bl
   1400408b1:	jb     0x1400408c8
   1400408b3:	rcl    BYTE PTR [rcx],1
   1400408b5:	sbb    BYTE PTR [rax+rax*1],al
   1400408b8:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400408bb:	add    BYTE PTR [rdx],cl
   1400408bd:	push   rdx
   1400408be:	(bad)  
   1400408bf:	jo     0x140040875
   1400408c1:	push   rbx
   1400408c2:	add    DWORD PTR [rax],eax
   1400408c4:	nop
   1400408c5:	ins    DWORD PTR es:[rdi],dx
   1400408c6:	add    eax,DWORD PTR [rax]
   1400408c8:	(bad)  
   1400408c9:	(bad)  
   1400408ca:	(bad)  
   1400408cb:	call   FWORD PTR [rcx+0x2b]
   1400408ce:	add    eax,DWORD PTR [rax]
   1400408d0:	pop    rsp
   1400408d1:	jbe    0x1400408d3
   1400408d3:	add    bh,bh
   1400408d5:	(bad)  
   1400408d6:	(bad)  
   1400408d7:	jmp    FWORD PTR [rcx+0x76]
   1400408dd:	add    BYTE PTR [rax],al
   1400408df:	add    cl,dh
   1400408e1:	jbe    0x1400408e3
   1400408e3:	add    bh,bh
   1400408e5:	(bad)  
   1400408e6:	(bad)  
   1400408e7:	call   QWORD PTR [rcx]
   1400408e9:	adc    al,0x4
   1400408eb:	add    BYTE PTR [rsp+rsi*1],dl
   1400408ee:	or     DWORD PTR [rax],eax
   1400408f0:	(bad)  
   1400408f1:	push   rdx
   1400408f2:	add    dh,BYTE PTR [rax-0x4c]
   1400408f5:	push   rbx
   1400408f6:	add    DWORD PTR [rax],eax
   1400408f8:	mov    eax,0x36d
   1400408fd:	ja     0x1400408ff
   1400408ff:	add    bh,bh
   140040901:	(bad)  
   140040902:	(bad)  
   140040903:	jmp    FWORD PTR [rcx]
   140040905:	ja     0x140040907
   140040907:	add    BYTE PTR [rax],al
   140040909:	add    BYTE PTR [rax],al
   14004090b:	add    BYTE PTR [rbx+0x77],dl
   14004090e:	add    BYTE PTR [rax],al
   140040910:	(bad)  
   140040911:	(bad)  
   140040912:	(bad)  
   140040913:	call   QWORD PTR [rcx]
   140040915:	adc    al,0x4
   140040917:	add    BYTE PTR [rsp+rsi*1],dl
   14004091a:	or     DWORD PTR [rax],eax
   14004091c:	(bad)  
   14004091d:	push   rdx
   14004091e:	add    dh,BYTE PTR [rax-0x4c]
   140040921:	push   rbx
   140040922:	add    DWORD PTR [rax],eax
   140040924:	add    BYTE PTR [rsi+0x3],ch
   140040927:	add    ah,bh
   140040929:	jns    0x14004092b
   14004092b:	add    bh,bh
   14004092d:	(bad)  
   14004092e:	(bad)  
   14004092f:	jmp    QWORD PTR [rip+0x7a]        # 0x1400409af
   140040935:	add    BYTE PTR [rax],al
   140040937:	add    BYTE PTR [rdi+0x7a],cl
   14004093a:	add    BYTE PTR [rax],al
   14004093c:	(bad)  
   14004093d:	(bad)  
   14004093e:	(bad)  
   14004093f:	call   QWORD PTR [rcx]
   140040941:	lar    eax,WORD PTR [rax]
   140040944:	(bad)  
   140040945:	push   rdx
   140040946:	add    dh,BYTE PTR [rax]
   140040948:	mov    ah,0x53
   14004094a:	add    DWORD PTR [rax],eax
   14004094c:	rex.W outs dx,BYTE PTR ds:[rsi]
   14004094e:	add    eax,DWORD PTR [rax]
   140040950:	(bad)  
   140040951:	(bad)  
   140040952:	(bad)  
   140040953:	push   QWORD PTR [rcx+0x2b]
   140040956:	add    eax,DWORD PTR [rax]
   140040958:	pop    rsp
   140040959:	jnp    0x14004095b
   14004095b:	add    bh,bh
   14004095d:	(bad)  
   14004095e:	(bad)  
   14004095f:	inc    DWORD PTR [rax+0x7b]
   140040965:	add    BYTE PTR [rax],al
   140040967:	add    BYTE PTR [rcx-0xffff85],ch
   14004096d:	(bad)  
   14004096e:	(bad)  
   14004096f:	call   FWORD PTR [rcx]
   140040971:	or     al,BYTE PTR [rdx]
   140040973:	add    BYTE PTR [rdx],cl
   140040975:	xor    al,BYTE PTR [rsi]
   140040977:	push   rax
   140040978:	mov    ah,0x53
   14004097a:	add    DWORD PTR [rax],eax
   14004097c:	nop
   14004097d:	outs   dx,BYTE PTR ds:[rsi]
   14004097e:	add    eax,DWORD PTR [rax]
   140040980:	sbb    DWORD PTR [rsi],ebx
   140040982:	(bad)  
   140040983:	add    BYTE PTR [rsi],bl
   140040985:	je     0x140040992
   140040987:	add    BYTE PTR [rcx],bl
   140040989:	or     DWORD PTR fs:[rax],eax
   14004098c:	or     edx,DWORD PTR [rdx+0x7]
   14004098f:	shl    BYTE PTR [rbx+rdx*2+0x6e900001],0x3
   140040997:	add    BYTE PTR [rdx],al
   140040999:	add    BYTE PTR [rax],al
   14004099b:	add    BYTE PTR [rdx],al
   14004099d:	add    BYTE PTR [rax],al
   14004099f:	add    BYTE PTR [rbx],al
   1400409a1:	add    BYTE PTR [rax],al
   1400409a3:	add    BYTE PTR [rcx],al
   1400409a5:	add    BYTE PTR [rax],al
   1400409a7:	add    BYTE PTR [rcx+rcx*1+0x4],ch
   1400409ae:	add    BYTE PTR [rax],al
   1400409b0:	xor    BYTE PTR [rax+0x280004],al
   1400409b6:	add    BYTE PTR [rax],al
   1400409b8:	leave  
   1400409b9:	sub    eax,DWORD PTR [rbx]
   1400409bb:	add    BYTE PTR [rax],bh
   1400409bd:	add    BYTE PTR [rax],al
   1400409bf:	add    bh,bh
   1400409c1:	(bad)  
   1400409c2:	(bad)  
   1400409c3:	dec    DWORD PTR [rcx+0x32b]
   1400409c9:	add    BYTE PTR [rax],al
   1400409cb:	add    BYTE PTR [rcx+0x100032b],ch
   1400409d1:	add    BYTE PTR [rax],al
   1400409d3:	add    BYTE PTR [rax],al
   1400409d5:	add    BYTE PTR [rax],al
   1400409d7:	add    BYTE PTR [rcx],al
   1400409d9:	add    BYTE PTR [rax],al
   1400409db:	add    BYTE PTR [rax],al
   1400409dd:	add    BYTE PTR [rax],al
   1400409df:	add    BYTE PTR [rcx],al
   1400409e1:	add    BYTE PTR [rax],al
   1400409e3:	add    cl,bh
   1400409e5:	sub    eax,DWORD PTR [rbx]
   1400409e7:	add    BYTE PTR [rcx],al
   1400409e9:	add    BYTE PTR [rax],al
   1400409eb:	add    BYTE PTR [rcx],bl
   1400409ed:	sub    al,0x3
   1400409ef:	add    BYTE PTR [rcx],al
   1400409f1:	add    BYTE PTR [rax],al
   1400409f3:	add    BYTE PTR [rcx],bh
   1400409f5:	sub    al,0x3
   1400409f7:	add    ah,ah
   1400409f9:	jnp    0x1400409fb
   1400409fb:	add    bh,bh
   1400409fd:	(bad)  
   1400409fe:	(bad)  
   1400409ff:	call   QWORD PTR [rsi+0x7c]
   140040a02:	add    BYTE PTR [rax],al
   140040a04:	add    BYTE PTR [rax],al
   140040a06:	add    BYTE PTR [rax],al
   140040a08:	jle    0x140040a86
   140040a0a:	add    BYTE PTR [rax],al
   140040a0c:	add    DWORD PTR [rax],eax
   140040a0e:	add    BYTE PTR [rax],al
   140040a10:	xchg   esi,eax
   140040a11:	jl     0x140040a13
   140040a13:	add    BYTE PTR [rdx],al
   140040a15:	add    BYTE PTR [rax],al
   140040a17:	add    BYTE PTR [rbp+0x100007c],bh
   140040a1d:	add    BYTE PTR [rax],al
   140040a1f:	add    bl,dh
   140040a21:	jl     0x140040a23
   140040a23:	add    BYTE PTR [rax+rax*1],al
   140040a26:	add    BYTE PTR [rax],al
   140040a28:	or     BYTE PTR [rbp+0x0],bh
   140040a2b:	add    BYTE PTR [rcx],al
   140040a2d:	add    BYTE PTR [rax],al
   140040a2f:	add    BYTE PTR [rcx],ah
   140040a31:	jge    0x140040a33
   140040a33:	add    BYTE PTR [rip+0x36000000],al        # 0x176040a39
   140040a39:	jge    0x140040a3b
   140040a3b:	add    BYTE PTR [rcx],al
   140040a3d:	add    BYTE PTR [rax],al
   140040a3f:	add    BYTE PTR [rax+0x7d],dl
   140040a42:	add    BYTE PTR [rax],al
   140040a44:	(bad)  
   140040a45:	add    BYTE PTR [rax],al
   140040a47:	add    BYTE PTR [rbp+0x7d],ah
   140040a4a:	add    BYTE PTR [rax],al
   140040a4c:	add    DWORD PTR [rax],eax
   140040a4e:	add    BYTE PTR [rax],al
   140040a50:	nop
   140040a51:	jge    0x140040a53
   140040a53:	add    bh,bh
   140040a55:	(bad)  
   140040a56:	(bad)  
   140040a57:	dec    ecx
   140040a59:	sub    eax,DWORD PTR [rbx]
   140040a5b:	add    BYTE PTR [rax],al
   140040a5d:	add    BYTE PTR [rax],al
   140040a5f:	add    dh,dl
   140040a61:	sub    eax,DWORD PTR [rbx]
   140040a63:	add    BYTE PTR [rbx],al
   140040a65:	add    BYTE PTR [rax],al
   140040a67:	add    ch,ah
   140040a69:	sub    eax,DWORD PTR [rbx]
   140040a6b:	add    BYTE PTR [rax],al
   140040a6d:	add    BYTE PTR [rax],al
   140040a6f:	add    BYTE PTR [rcx],dl
   140040a71:	lar    eax,WORD PTR [rax]
   140040a74:	(bad)  
   140040a75:	push   rdx
   140040a76:	add    dh,BYTE PTR [rax]
   140040a78:	mov    ah,0x53
   140040a7a:	add    DWORD PTR [rax],eax
   140040a7c:	enter  0x36e,0x0
   140040a80:	(bad)  
   140040a81:	(bad)  
   140040a82:	(bad)  
   140040a83:	call   QWORD PTR [rcx+0x2c]
   140040a86:	add    eax,DWORD PTR [rax]
   140040a88:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140040a89:	jge    0x140040a8b
   140040a8b:	add    bh,bh
   140040a8d:	(bad)  
   140040a8e:	(bad)  
   140040a8f:	inc    ebp
   140040a91:	jge    0x140040a93
   140040a93:	add    BYTE PTR [rax],al
   140040a95:	add    BYTE PTR [rax],al
   140040a97:	add    ch,ah
   140040a99:	jge    0x140040a9b
   140040a9b:	add    bh,bh
   140040a9d:	(bad)  
   140040a9e:	(bad)  
   140040a9f:	inc    DWORD PTR [rcx]
   140040aa1:	or     BYTE PTR [rax+rax*1],al
   140040aa4:	or     BYTE PTR [rdx],dh
   140040aa6:	add    al,0x70
   140040aa8:	add    edx,DWORD PTR [rax+0x2]
   140040aab:	xor    BYTE PTR [rcx],dl
   140040aad:	sbb    DWORD PTR [rdx],ecx
   140040aaf:	add    BYTE PTR [rcx],bl
   140040ab1:	(bad)  
   140040ab2:	or     eax,DWORD PTR [rax]
   140040ab4:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   140040ab8:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   140040abc:	sbb    DWORD PTR [rax+rcx*1],esi
   140040abf:	add    BYTE PTR [rcx],bl
   140040ac1:	push   rdx
   140040ac2:	adc    eax,0x15ca8d0
   140040ac7:	add    BYTE PTR [rcx],al
   140040ac9:	add    BYTE PTR [rax],al
   140040acb:	add    BYTE PTR [rdi],cl
   140040acd:	jg     0x140040acf
   140040acf:	add    BYTE PTR [rdi],ah
   140040ad1:	jg     0x140040ad3
   140040ad3:	add    BYTE PTR [rcx+0x2c],ch
   140040ad6:	add    eax,DWORD PTR [rax]
   140040ad8:	add    BYTE PTR [rax],al
   140040ada:	add    BYTE PTR [rax],al
   140040adc:	sbb    DWORD PTR [rcx+rcx*1],esp
   140040adf:	add    BYTE PTR [rdx],dl
   140040ae1:	add    DWORD PTR [rdx],ebp
   140040ae3:	add    BYTE PTR [rbx],cl
   140040ae5:	lock or eax,edx
   140040ae8:	(bad)  
   140040ae9:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143640f60
   140040af0:	add    dh,BYTE PTR [rax]
   140040af2:	add    BYTE PTR [rax],al
   140040af4:	sbb    BYTE PTR [rax+0x1],0x0
   140040af8:	rex add DWORD PTR [rax],eax
   140040afb:	add    BYTE PTR [rcx],dl
   140040afd:	(bad)  
   140040afe:	or     BYTE PTR [rax],al
   140040b00:	(bad)  
   140040b01:	or     al,BYTE PTR fs:[rax]
   140040b04:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140040b08:	adc    al,0x34
   140040b0a:	or     BYTE PTR [rax],al
   140040b0c:	(bad)  
   140040b0d:	push   rdx
   140040b0e:	add    dh,BYTE PTR [rax-0x4c]
   140040b11:	push   rbx
   140040b12:	add    DWORD PTR [rax],eax
   140040b14:	lock outs dx,BYTE PTR ds:[rsi]
   140040b16:	add    eax,DWORD PTR [rax]
   140040b18:	(bad)  
   140040b19:	(bad)  
   140040b1a:	(bad)  
   140040b1b:	push   QWORD PTR [rcx-0x3bfffcd4]
   140040b21:	(bad)  
   140040b22:	add    BYTE PTR [rax],al
   140040b24:	(bad)  
   140040b25:	(bad)  
   140040b26:	(bad)  
   140040b27:	call   FWORD PTR [rdx]
   140040b29:	add    DWORD PTR [rax],0x0
   140040b2c:	add    BYTE PTR [rax],al
   140040b2e:	add    BYTE PTR [rax],al
   140040b30:	push   rax
   140040b31:	add    DWORD PTR [rax],0x0
   140040b34:	(bad)  
   140040b35:	(bad)  
   140040b36:	(bad)  
   140040b37:	call   QWORD PTR [rcx]
   140040b39:	adc    al,0x4
   140040b3b:	add    BYTE PTR [rsp+rsi*1],dl
   140040b3e:	or     BYTE PTR [rax],al
   140040b40:	(bad)  
   140040b41:	push   rdx
   140040b42:	add    dh,BYTE PTR [rax-0x4c]
   140040b45:	push   rbx
   140040b46:	add    DWORD PTR [rax],eax
   140040b48:	nop
   140040b49:	outs   dx,DWORD PTR ds:[rsi]
   140040b4a:	add    eax,DWORD PTR [rax]
   140040b4c:	(bad)  
   140040b4d:	(bad)  
   140040b4e:	(bad)  
   140040b4f:	dec    ecx
   140040b51:	sub    al,0x3
   140040b53:	add    BYTE PTR [rsp+rax*4+0x0],bl
   140040b57:	add    bh,bh
   140040b59:	(bad)  
   140040b5a:	(bad)  
   140040b5b:	inc    DWORD PTR [rsp+rax*4+0x0]
   140040b62:	add    BYTE PTR [rax],al
   140040b64:	movabs ds:0x1ffffffff000084,eax
   140040b6d:	or     al,BYTE PTR [rax+rax*1]
   140040b70:	or     dh,BYTE PTR [rbx+rcx*1]
   140040b73:	add    BYTE PTR [rdx],cl
   140040b75:	jb     0x140040b7d
   140040b77:	jo     0x140040b7a
   140040b79:	or     al,BYTE PTR [rax+rax*1]
   140040b7c:	or     dh,BYTE PTR [rsi+rax*1]
   140040b7f:	add    BYTE PTR [rdx],cl
   140040b81:	xor    al,BYTE PTR [rsi]
   140040b83:	jo     0x140040b86
   140040b85:	adc    al,0x8
   140040b87:	add    BYTE PTR [rsp+riz*2],dl
   140040b8a:	or     DWORD PTR [rax],eax
   140040b8c:	adc    al,0x54
   140040b8e:	or     BYTE PTR [rax],al
   140040b90:	adc    al,0x34
   140040b92:	(bad)  
   140040b93:	add    BYTE PTR [rdx+rsi*1],dl
   140040b96:	adc    BYTE PTR [rax+0x11],dh
   140040b99:	adc    al,0x4
   140040b9b:	add    BYTE PTR [rsp+rsi*1],dl
   140040b9e:	or     al,BYTE PTR [rax]
   140040ba0:	(bad)  
   140040ba1:	jb     0x140040ba5
   140040ba3:	jo     0x140040b59
   140040ba5:	push   rbx
   140040ba6:	add    DWORD PTR [rax],eax
   140040ba8:	pop    rax
   140040ba9:	jo     0x140040bae
   140040bab:	add    BYTE PTR [rax-0x72],ah
   140040bae:	add    BYTE PTR [rax],al
   140040bb0:	(bad)  
   140040bb1:	(bad)  
   140040bb2:	(bad)  
   140040bb3:	call   FWORD PTR [rbp+0x8e]
   140040bb9:	add    BYTE PTR [rax],al
   140040bbb:	add    BYTE PTR [rdi-0xffff72],ah
   140040bc1:	(bad)  
   140040bc2:	(bad)  
   140040bc3:	inc    DWORD PTR [rcx]
   140040bc5:	adc    eax,DWORD PTR [rcx]
   140040bc7:	add    BYTE PTR [rbx],dl
   140040bc9:	rex.X add BYTE PTR [rax],al
   140040bcc:	sbb    DWORD PTR [rbx],ecx
   140040bce:	add    eax,DWORD PTR [rax]
   140040bd0:	or     esp,DWORD PTR [rdx+0x7]
   140040bd3:	push   rax
   140040bd4:	(bad)  
   140040bd5:	xor    BYTE PTR [rax],al
   140040bd7:	add    BYTE PTR [rbx+rdx*2+0x70800001],dh
   140040bde:	add    eax,DWORD PTR [rax]
   140040be0:	sbb    DWORD PTR [rdx],esp
   140040be2:	add    al,BYTE PTR [rax]
   140040be4:	(bad)  
   140040be5:	add    DWORD PTR [rbp+0x0],ecx
   140040be8:	jo     0x140040c48
   140040bea:	add    DWORD PTR [rax],eax
   140040bec:	xor    BYTE PTR [rax+0x3],0x0
   140040bf0:	push   rbx
   140040bf1:	add    al,BYTE PTR [rax]
	...
   140040bfb:	add    BYTE PTR [rdx],al
   140040bfd:	add    BYTE PTR [rax],al
   140040bff:	add    BYTE PTR [rcx],al
   140040c01:	add    BYTE PTR [rax],al
   140040c03:	add    BYTE PTR [rax],cl
   140040c05:	or     al,0x4
   140040c07:	add    BYTE PTR [rax],al
   140040c09:	add    BYTE PTR [rax],al
   140040c0b:	add    BYTE PTR [rax],cl
   140040c0d:	add    BYTE PTR [rax+rax*1],0x38
   140040c11:	add    BYTE PTR [rax],al
   140040c13:	add    cl,ah
   140040c15:	sub    al,0x3
   140040c17:	add    BYTE PTR [rax+0x0],bl
   140040c1a:	add    BYTE PTR [rax],al
   140040c1c:	(bad)  
   140040c1d:	(bad)  
   140040c1e:	(bad)  
   140040c1f:	inc    DWORD PTR [rax]
   140040c21:	add    BYTE PTR [rax],al
   140040c23:	add    bh,bh
   140040c25:	(bad)  
   140040c26:	(bad)  
   140040c27:	inc    DWORD PTR [rax]
   140040c29:	add    BYTE PTR [rax],al
   140040c2b:	add    BYTE PTR [rcx],al
   140040c2d:	add    BYTE PTR [rax],al
   140040c2f:	add    cl,ah
   140040c31:	sub    eax,0x91900003
   140040c36:	add    BYTE PTR [rax],al
   140040c38:	(bad)  
   140040c39:	(bad)  
   140040c3a:	(bad)  
   140040c3b:	push   QWORD PTR [rdx+0x91]
   140040c41:	add    BYTE PTR [rax],al
   140040c43:	add    BYTE PTR [rcx+rdx*4-0x10000],bh
   140040c4a:	(bad)  
   140040c4b:	jmp    rcx
   140040c4d:	sub    al,0x3
   140040c4f:	add    BYTE PTR [rax],al
   140040c51:	add    BYTE PTR [rax],al
   140040c53:	add    bh,ch
   140040c55:	sub    al,0x3
   140040c57:	add    BYTE PTR [rcx],al
   140040c59:	add    BYTE PTR [rax],al
   140040c5b:	add    BYTE PTR [rdi],bl
   140040c5d:	sub    eax,0x20003
   140040c62:	add    BYTE PTR [rax],al
   140040c64:	movabs ds:0xce0000000100032d,eax
   140040c6d:	sub    eax,0x3
   140040c72:	add    BYTE PTR [rax],al
   140040c74:	add    DWORD PTR [rdx],ecx
   140040c76:	add    al,BYTE PTR [rax]
   140040c78:	or     dh,BYTE PTR [rdx]
   140040c7a:	(bad)  
   140040c7b:	xor    BYTE PTR [rcx],al
   140040c7d:	sbb    al,0xc
   140040c7f:	add    BYTE PTR [rsp+riz*2],bl
   140040c82:	(bad)  
   140040c83:	add    BYTE PTR [rsp+rdx*2],bl
   140040c86:	or     eax,0xc341c00
   140040c8b:	add    BYTE PTR [rdx+rdx*2],bl
   140040c8e:	sbb    al,dh
   140040c90:	(bad)  
   140040c91:	loopne 0x140040ca7
   140040c93:	rcl    BYTE PTR [rdx],1
   140040c95:	rcl    BYTE PTR [rax],0x70
   140040c98:	add    DWORD PTR [rdx],ecx
   140040c9a:	add    al,0x0
   140040c9c:	or     dh,BYTE PTR [rax+rcx*1]
   140040c9f:	add    BYTE PTR [rdx],cl
   140040ca1:	push   rdx
   140040ca2:	(bad)  
   140040ca3:	jo     0x140040ca6
   140040ca5:	sbb    BYTE PTR [rdx],cl
   140040ca7:	add    BYTE PTR [rax],bl
   140040ca9:	fs or  al,0x0
   140040cac:	sbb    BYTE PTR [rbx+rcx*1+0x0],dl
   140040cb0:	sbb    BYTE PTR [rdx+rcx*1],dh
   140040cb3:	add    BYTE PTR [rax],bl
   140040cb5:	push   rdx
   140040cb6:	adc    al,0xd0
   140040cb8:	adc    al,al
   140040cba:	adc    BYTE PTR [rax+0x19],dh
   140040cbd:	(bad)  
   140040cbe:	(bad)  
   140040cbf:	add    BYTE PTR [rdi],cl
   140040cc1:	adc    eax,DWORD PTR fs:[rax]
   140040cc4:	sysenter 
   140040cc6:	adc    al,BYTE PTR [rax]
   140040cc8:	psrld  mm1,QWORD PTR [rbx]
   140040ccb:	jo     0x140040c4d
   140040ccd:	pop    rax
   140040cce:	add    DWORD PTR [rax],eax
   140040cd0:	(bad)  
   140040cd1:	add    BYTE PTR [rax],al
   140040cd3:	add    BYTE PTR [rcx],al
   140040cd5:	and    DWORD PTR [rdx],ecx
   140040cd7:	add    BYTE PTR [rcx],ah
   140040cd9:	fs or  al,0x0
   140040cdc:	and    DWORD PTR [rbx+rcx*1+0x0],edx
   140040ce0:	and    DWORD PTR [rdx+rcx*1],esi
   140040ce3:	add    BYTE PTR [rcx],ah
   140040ce5:	push   rdx
   140040ce6:	sbb    eax,0x19c01bd0
   140040ceb:	jo     0x140040cee
   140040ced:	clts   
   140040cef:	add    BYTE PTR [rdi],cl
   140040cf1:	push   rsp
   140040cf2:	(bad)  
   140040cf3:	add    BYTE PTR [rdi],cl
   140040cf5:	xor    al,0x6
   140040cf7:	add    BYTE PTR [rdi],cl
   140040cf9:	xor    cl,BYTE PTR [rbx]
   140040cfb:	jo     0x140040d16
   140040cfd:	or     al,BYTE PTR [rdx]
   140040cff:	add    BYTE PTR [rdx],cl
   140040d01:	xor    al,BYTE PTR [rsi]
   140040d03:	push   rax
   140040d04:	mov    ah,0x53
   140040d06:	add    DWORD PTR [rax],eax
   140040d08:	push   0x19000371
   140040d0d:	(bad)  
   140040d0e:	or     BYTE PTR [rax],al
   140040d10:	(bad)  
   140040d11:	je     0x140040d20
   140040d13:	add    BYTE PTR [rcx],bl
   140040d15:	fs or  al,0x0
   140040d18:	adc    al,0x34
   140040d1a:	or     al,BYTE PTR [rax]
   140040d1c:	(bad)  
   140040d1d:	jb     0x140040d21
   140040d1f:	shl    BYTE PTR [rbx+rdx*2+0x71680001],0x3
   140040d27:	add    BYTE PTR [rax],al
   140040d29:	add    BYTE PTR [rax],al
   140040d2b:	add    BYTE PTR [rdx],al
   140040d2d:	add    BYTE PTR [rax],al
   140040d2f:	add    BYTE PTR [rbx],al
   140040d31:	add    BYTE PTR [rax],al
   140040d33:	add    BYTE PTR [rcx],al
   140040d35:	add    BYTE PTR [rax],al
   140040d37:	add    BYTE PTR [rcx*1+0x4],bh
   140040d3e:	add    BYTE PTR [rax],al
   140040d40:	or     BYTE PTR [rax+0x300004],al
   140040d46:	add    BYTE PTR [rax],al
   140040d48:	cmp    DWORD PTR [rsi],ebp
   140040d4a:	add    eax,DWORD PTR [rax]
   140040d4c:	cmp    BYTE PTR [rax],al
   140040d4e:	add    BYTE PTR [rax],al
   140040d50:	(bad)  
   140040d51:	(bad)  
   140040d52:	(bad)  
   140040d53:	inc    DWORD PTR [rax]
   140040d55:	add    BYTE PTR [rax],al
   140040d57:	add    BYTE PTR [rax],al
   140040d59:	add    BYTE PTR [rax],al
   140040d5b:	add    cl,bh
   140040d5d:	sub    eax,0x10003
   140040d62:	add    BYTE PTR [rax],al
   140040d64:	sbb    DWORD PTR [rsi],ebp
   140040d66:	add    eax,DWORD PTR [rax]
   140040d68:	(bad)  
   140040d69:	(bad)  
   140040d6a:	(bad)  
   140040d6b:	inc    DWORD PTR [rax]
   140040d6d:	add    BYTE PTR [rax],al
   140040d6f:	add    BYTE PTR [rsp+rbx*4],bl
   140040d72:	add    BYTE PTR [rax],al
   140040d74:	(bad)  
   140040d75:	(bad)  
   140040d76:	(bad)  
   140040d77:	call   FWORD PTR [rdi-0x64]
   140040d7a:	add    BYTE PTR [rax],al
   140040d7c:	add    BYTE PTR [rax],al
   140040d7e:	add    BYTE PTR [rax],al
   140040d80:	nop
   140040d81:	pushf  
   140040d82:	add    BYTE PTR [rax],al
   140040d84:	add    DWORD PTR [rax],eax
   140040d86:	add    BYTE PTR [rax],al
   140040d88:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140040d89:	pushf  
   140040d8a:	add    BYTE PTR [rax],al
   140040d8c:	add    al,BYTE PTR [rax]
   140040d8e:	add    BYTE PTR [rax],al
   140040d90:	sub    BYTE PTR [rbp+0x10000],bl
   140040d96:	add    BYTE PTR [rax],al
   140040d98:	rex.XB popf 
   140040d9a:	add    BYTE PTR [rax],al
   140040d9c:	add    BYTE PTR [rax],al
   140040d9e:	add    BYTE PTR [rax],al
   140040da0:	movsxd ebx,DWORD PTR [rbp-0x10000]
   140040da6:	(bad)  
   140040da7:	(bad)  
   140040da8:	cmp    DWORD PTR [rsi],ebp
   140040daa:	add    eax,DWORD PTR [rax]
   140040dac:	add    BYTE PTR [rax],al
   140040dae:	add    BYTE PTR [rax],al
   140040db0:	adc    DWORD PTR [rax],esp
   140040db2:	or     BYTE PTR [rax],al
   140040db4:	and    BYTE PTR [rsp+rcx*1+0x0],dl
   140040db8:	sbb    esi,DWORD PTR [rbx+rcx*1]
   140040dbb:	add    BYTE PTR [rip+0x7c00952],cl        # 0x147c41713
   140040dc1:	jo     0x140040dc9
   140040dc3:	(bad)  
   140040dc4:	mov    ah,0x53
   140040dc6:	add    DWORD PTR [rax],eax
   140040dc8:	nop
   140040dc9:	jno    0x140040dce
   140040dcb:	add    bh,bh
   140040dcd:	(bad)  
   140040dce:	(bad)  
   140040dcf:	call   QWORD PTR [rsi+0x2e]
   140040dd2:	add    eax,DWORD PTR [rax]
   140040dd4:	test   BYTE PTR [rbp-0x10000],bl
   140040dda:	(bad)  
   140040ddb:	(bad)  
   140040ddc:	out    dx,al
   140040ddd:	popf   
   140040dde:	add    BYTE PTR [rax],al
   140040de0:	add    BYTE PTR [rax],al
   140040de2:	add    BYTE PTR [rax],al
   140040de4:	adc    DWORD PTR [rsi-0x10000],ebx
   140040dea:	(bad)  
   140040deb:	call   QWORD PTR [rcx]
   140040ded:	adc    al,0x4
   140040def:	add    BYTE PTR [rsp+rsi*1],dl
   140040df2:	or     BYTE PTR [rax],al
   140040df4:	(bad)  
   140040df5:	push   rdx
   140040df6:	add    dh,BYTE PTR [rax-0x4c]
   140040df9:	push   rbx
   140040dfa:	add    DWORD PTR [rax],eax
   140040dfc:	lock jno 0x140040e02
   140040dff:	add    bh,bh
   140040e01:	(bad)  
   140040e02:	(bad)  
   140040e03:	push   QWORD PTR [rdx+0x2e]
   140040e06:	add    eax,DWORD PTR [rax]
   140040e08:	jl     0x140040da8
   140040e0a:	add    BYTE PTR [rax],al
   140040e0c:	(bad)  
   140040e0d:	(bad)  
   140040e0e:	(bad)  
   140040e0f:	jmp    QWORD PTR [rdi+0x9e]
   140040e15:	add    BYTE PTR [rax],al
   140040e17:	add    BYTE PTR [rcx-0xffff62],bh
   140040e1d:	(bad)  
   140040e1e:	(bad)  
   140040e1f:	inc    DWORD PTR [rcx]
   140040e21:	clts   
   140040e23:	add    BYTE PTR [rdi],cl
   140040e25:	fs (bad) 
   140040e27:	add    BYTE PTR [rdi],cl
   140040e29:	xor    al,0x6
   140040e2b:	add    BYTE PTR [rdi],cl
   140040e2d:	xor    cl,BYTE PTR [rbx]
   140040e2f:	jo     0x140040e4a
   140040e31:	or     eax,DWORD PTR cs:[rax]
   140040e34:	sbb    al,0x74
   140040e36:	sbb    eax,0x1c641c00
   140040e3b:	add    BYTE PTR [rsp+rdx*2],bl
   140040e3e:	sbb    eax,DWORD PTR [rax]
   140040e40:	sbb    al,0x34
   140040e42:	sbb    al,BYTE PTR [rax]
   140040e44:	sbb    al,0x1
   140040e46:	sbb    BYTE PTR [rax],al
   140040e48:	adc    eax,0x800000c0
   140040e4d:	pop    rax
   140040e4e:	add    DWORD PTR [rax],eax
   140040e50:	mov    al,0x0
   140040e52:	add    BYTE PTR [rax],al
   140040e54:	adc    DWORD PTR [rax],esp
   140040e56:	or     BYTE PTR [rax],al
   140040e58:	and    BYTE PTR [rsp+rcx*1+0x0],dl
   140040e5c:	sbb    esi,DWORD PTR [rbx+rcx*1]
   140040e5f:	add    BYTE PTR [rip+0x7c00952],cl        # 0x147c417b7
   140040e65:	jo     0x140040e6d
   140040e67:	(bad)  
   140040e68:	mov    ah,0x53
   140040e6a:	add    DWORD PTR [rax],eax
   140040e6c:	lock jae 0x140040e72
   140040e6f:	add    bh,bh
   140040e71:	(bad)  
   140040e72:	(bad)  
   140040e73:	dec    DWORD PTR [rdx+0x32e]
   140040e79:	add    BYTE PTR [rax],al
   140040e7b:	add    BYTE PTR [rdx+0x100032e],ch
   140040e81:	add    BYTE PTR [rax],al
   140040e83:	add    dl,cl
   140040e85:	add    eax,DWORD PTR cs:[rax]
   140040e88:	mov    BYTE PTR [rsi-0x10000],ah
   140040e8e:	(bad)  
   140040e8f:	call   rcx
   140040e91:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140040e92:	add    BYTE PTR [rax],al
   140040e94:	add    BYTE PTR [rax],al
   140040e96:	add    BYTE PTR [rax],al
   140040e98:	loopne 0x140040e40
   140040e9a:	add    BYTE PTR [rax],al
   140040e9c:	add    DWORD PTR [rax],eax
   140040e9e:	add    BYTE PTR [rax],al
   140040ea0:	out    dx,eax
   140040ea1:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140040ea2:	add    BYTE PTR [rax],al
   140040ea4:	add    al,BYTE PTR [rax]
   140040ea6:	add    BYTE PTR [rax],al
   140040ea8:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140040eaa:	add    BYTE PTR [rax],al
   140040eac:	(bad)  
   140040ead:	(bad)  
   140040eae:	(bad)  
   140040eaf:	call   FWORD PTR [rcx]
   140040eb1:	or     al,BYTE PTR [rdx]
   140040eb3:	add    BYTE PTR [rdx],cl
   140040eb5:	xor    al,BYTE PTR [rsi]
   140040eb7:	push   rax
   140040eb8:	mov    ah,0x53
   140040eba:	add    DWORD PTR [rax],eax
   140040ebc:	sub    BYTE PTR [rbx+rax*1+0x0],dh
   140040ec0:	sbb    DWORD PTR [rip+0x641d0008],ebx        # 0x1a4210ece
   140040ec6:	or     al,0x0
   140040ec8:	sbb    BYTE PTR [rdx+rcx*1],dh
   140040ecb:	add    BYTE PTR [rdx],cl
   140040ecd:	push   rdx
   140040ece:	(bad)  
   140040ecf:	rol    BYTE PTR [rax+rax*8],1
   140040ed2:	add    dh,BYTE PTR [rax-0x4c]
   140040ed5:	push   rbx
   140040ed6:	add    DWORD PTR [rax],eax
   140040ed8:	sub    BYTE PTR [rbx+rax*1+0x0],dh
	...
   140040ee4:	add    DWORD PTR [rax],eax
   140040ee6:	add    BYTE PTR [rax],al
   140040ee8:	add    DWORD PTR [rax],eax
   140040eea:	add    BYTE PTR [rax],al
   140040eec:	lock (bad) 
   140040eee:	add    al,0x0
   140040ef0:	add    BYTE PTR [rax],al
   140040ef2:	add    BYTE PTR [rax],al
   140040ef4:	or     BYTE PTR [rax+0x280004],al
   140040efa:	add    BYTE PTR [rax],al
   140040efc:	out    0x2e,al
   140040efe:	add    eax,DWORD PTR [rax]
   140040f00:	cmp    BYTE PTR [rax],al
   140040f02:	add    BYTE PTR [rax],al
   140040f04:	(bad)  
   140040f05:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040f06:	add    BYTE PTR [rax],al
   140040f08:	(bad)  
   140040f09:	(bad)  
   140040f0a:	(bad)  
   140040f0b:	jmp    rcx
   140040f0d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140040f0e:	add    BYTE PTR [rax],al
   140040f10:	add    BYTE PTR [rax],al
   140040f12:	add    BYTE PTR [rax],al
   140040f14:	or     al,0xa8
   140040f16:	add    BYTE PTR [rax],al
   140040f18:	(bad)  
   140040f19:	(bad)  
   140040f1a:	(bad)  
   140040f1b:	jmp    rsi
   140040f1d:	add    eax,DWORD PTR cs:[rax]
   140040f20:	add    BYTE PTR [rax],al
   140040f22:	add    BYTE PTR [rax],al
   140040f24:	repz add eax,DWORD PTR cs:[rax]
   140040f28:	add    DWORD PTR [rax],eax
   140040f2a:	add    BYTE PTR [rax],al
   140040f2c:	(bad)  
   140040f2d:	(bad)  
   140040f2e:	add    eax,DWORD PTR [rax]
   140040f30:	add    BYTE PTR [rax],al
   140040f32:	add    BYTE PTR [rax],al
   140040f34:	add    DWORD PTR [rbx],edx
   140040f36:	add    al,0x0
   140040f38:	adc    esi,DWORD PTR [rcx+rcx*1]
   140040f3b:	add    BYTE PTR [rbx],dl
   140040f3d:	xor    cl,BYTE PTR [rdi]
   140040f3f:	jo     0x140040f52
   140040f41:	sbb    BYTE PTR [rax+rax*1],al
   140040f44:	sbb    BYTE PTR [rcx+rcx*1],dh
   140040f47:	add    BYTE PTR [rdx],cl
   140040f49:	push   rdx
   140040f4a:	(bad)  
   140040f4b:	jo     0x140040f01
   140040f4d:	push   rbx
   140040f4e:	add    DWORD PTR [rax],eax
   140040f50:	push   rax
   140040f51:	je     0x140040f56
   140040f53:	add    bh,bh
   140040f55:	(bad)  
   140040f56:	(bad)  
   140040f57:	dec    DWORD PTR [rip+0x32f]        # 0x14004128c
   140040f5d:	add    BYTE PTR [rax],al
   140040f5f:	add    BYTE PTR [rip+0x100032f],ch        # 0x141041294
   140040f65:	add    BYTE PTR [rax],al
   140040f67:	add    BYTE PTR [rbp+0x2f],cl
   140040f6a:	add    eax,DWORD PTR [rax]
   140040f6c:	(bad)  
   140040f6d:	test   al,0x0
   140040f6f:	add    bh,bh
   140040f71:	(bad)  
   140040f72:	(bad)  
   140040f73:	(bad)  
   140040f74:	sti    
   140040f75:	test   al,0x0
   140040f77:	add    BYTE PTR [rdx],al
   140040f79:	add    BYTE PTR [rax],al
   140040f7b:	add    BYTE PTR [rcx],al
   140040f7d:	test   eax,0x10000
   140040f82:	add    BYTE PTR [rax],al
   140040f84:	or     ebp,DWORD PTR [rcx+0x0]
   140040f8a:	add    BYTE PTR [rax],al
   140040f8c:	adc    eax,0xff0000a9
   140040f91:	(bad)  
   140040f92:	(bad)  
   140040f93:	call   FWORD PTR [rcx]
   140040f95:	sbb    DWORD PTR [rdx],eax
   140040f97:	add    BYTE PTR [rdi],al
   140040f99:	add    DWORD PTR [rbx],ebx
   140040f9b:	add    BYTE PTR [rax-0x3ffffea8],al
   140040fa1:	add    BYTE PTR [rax],al
   140040fa3:	add    BYTE PTR [rcx],al
   140040fa5:	or     al,BYTE PTR [rax+rax*1]
   140040fa8:	or     dh,BYTE PTR [rsp+rcx*1]
   140040fab:	add    BYTE PTR [rdx],cl
   140040fad:	xchg   edx,eax
   140040fae:	(bad)  
   140040faf:	jo     0x140040fb2
   140040fb1:	(bad)  
   140040fb2:	or     eax,0x23641f00
   140040fb7:	add    BYTE PTR [rdi],bl
   140040fb9:	push   rsp
   140040fba:	and    al,BYTE PTR [rax]
   140040fbc:	(bad)  
   140040fbd:	xor    al,0x21
   140040fbf:	add    BYTE PTR [rdi],bl
   140040fc1:	add    DWORD PTR [rdx],ebx
   140040fc3:	add    BYTE PTR [rax],bl
   140040fc5:	lock (bad) 
   140040fc7:	loopne 0x140040fdd
   140040fc9:	rcl    BYTE PTR [rdx],1
   140040fcb:	rcl    BYTE PTR [rax],0x70
   140040fce:	add    BYTE PTR [rax],al
   140040fd0:	add    DWORD PTR [rax+rcx*1],edx
   140040fd3:	add    BYTE PTR [rsp+riz*2],dl
   140040fd6:	or     eax,DWORD PTR [rax]
   140040fd8:	adc    al,0x54
   140040fda:	or     al,BYTE PTR [rax]
   140040fdc:	adc    al,0x34
   140040fde:	or     DWORD PTR [rax],eax
   140040fe0:	adc    al,0x52
   140040fe2:	adc    BYTE PTR [rax+0x1],dh
   140040fe5:	adc    al,0x8
   140040fe7:	add    BYTE PTR [rsp+riz*2],dl
   140040fea:	or     BYTE PTR [rax],al
   140040fec:	adc    al,0x54
   140040fee:	(bad)  
   140040fef:	add    BYTE PTR [rsp+rsi*1],dl
   140040ff2:	(bad)  
   140040ff3:	add    BYTE PTR [rdx+rsi*1],dl
   140040ff6:	adc    BYTE PTR [rax+0x1],dh
   140040ff9:	add    al,0x1
   140040ffb:	add    BYTE PTR [rdx+riz*4],al
   140040ffe:	add    BYTE PTR [rax],al
   140041000:	add    DWORD PTR [rcx],ecx
   140041002:	add    eax,0x5420900
   140041007:	jo     0x14004100d
   140041009:	(bad)  
   14004100a:	add    edx,DWORD PTR [rax+0x2]
   14004100d:	xor    BYTE PTR [rax],al
   14004100f:	add    BYTE PTR [rcx],dl
   140041011:	or     eax,0x340d0006
   140041016:	or     al,BYTE PTR [rax]
   140041018:	or     eax,0x7c00952
   14004101d:	jo     0x140041025
   14004101f:	(bad)  
   140041020:	test   al,0x5c
   140041022:	add    DWORD PTR [rax],eax
   140041024:	add    DWORD PTR [rax],eax
   140041026:	add    BYTE PTR [rax],al
   140041028:	sar    DWORD PTR [rsi-0x411e0000],1
   14004102e:	add    BYTE PTR [rax],al
   140041030:	imul   ebp,DWORD PTR [rdi],0x3
   140041036:	add    BYTE PTR [rax],al
   140041038:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b4191046
   14004103e:	or     al,BYTE PTR [rax]
   140041040:	adc    eax,0x15000964
   140041045:	xor    al,0x8
   140041047:	add    BYTE PTR [rip+0xffffffffa8c01152],dl        # 0xe8c4219f
   14004104d:	pop    rsp
   14004104e:	add    DWORD PTR [rax],eax
   140041050:	add    DWORD PTR [rax],eax
   140041052:	add    BYTE PTR [rax],al
   140041054:	je     0x140041015
   140041056:	add    BYTE PTR [rax],al
   140041058:	mov    DWORD PTR [rdi+0x2fb70000],edi
   14004105e:	add    eax,DWORD PTR [rax]
   140041060:	add    BYTE PTR [rax],al
   140041062:	add    BYTE PTR [rax],al
   140041064:	adc    DWORD PTR [rip+0x74150008],edx        # 0x1b4191072
   14004106a:	or     al,BYTE PTR [rax]
   14004106c:	adc    eax,0x15000964
   140041071:	xor    al,0x8
   140041073:	add    BYTE PTR [rip+0xffffffffa8c01152],dl        # 0xe8c421cb
   140041079:	pop    rsp
   14004107a:	add    DWORD PTR [rax],eax
   14004107c:	add    DWORD PTR [rax],eax
   14004107e:	add    BYTE PTR [rax],al
   140041080:	and    al,al
   140041082:	add    BYTE PTR [rax],al
   140041084:	xor    eax,0xb70000c0
   140041089:	(bad)  
   14004108a:	add    eax,DWORD PTR [rax]
   14004108c:	add    BYTE PTR [rax],al
   14004108e:	add    BYTE PTR [rax],al
   140041090:	add    DWORD PTR [rax],ecx
   140041092:	add    al,0x0
   140041094:	or     BYTE PTR [rdx+0x50037004],dh
   14004109a:	add    dh,BYTE PTR [rax]
   14004109c:	adc    DWORD PTR [rdx+rcx*1],ebx
   14004109f:	add    BYTE PTR [rsp+rax*8],bl
   1400410a2:	adc    eax,0x14741c00
   1400410a7:	add    BYTE PTR [rsp+riz*2],bl
   1400410aa:	adc    eax,DWORD PTR [rax]
   1400410ac:	sbb    al,0x34
   1400410ae:	adc    al,BYTE PTR [rax]
   1400410b0:	sbb    al,0xf2
   1400410b2:	adc    eax,0x15ca8d0
   1400410b7:	add    BYTE PTR [rcx],al
   1400410b9:	add    BYTE PTR [rax],al
   1400410bb:	add    dh,bl
   1400410bd:	rol    BYTE PTR [rax],0x0
   1400410c0:	pop    rax
   1400410c1:	rol    DWORD PTR [rax],0x0
   1400410c4:	jmp    FWORD PTR [rdi]
   1400410c6:	add    eax,DWORD PTR [rax]
   1400410c8:	add    BYTE PTR [rax],al
   1400410ca:	add    BYTE PTR [rax],al
   1400410cc:	adc    DWORD PTR [rdi],ecx
   1400410ce:	(bad)  
   1400410cf:	add    BYTE PTR [rdi],cl
   1400410d1:	or     eax,DWORD PTR fs:[rax]
   1400410d4:	sysenter 
   1400410d6:	or     BYTE PTR [rax],al
   1400410d8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400410db:	jo     0x140041085
   1400410dd:	pop    rsp
   1400410de:	add    DWORD PTR [rax],eax
   1400410e0:	add    DWORD PTR [rax],eax
   1400410e2:	add    BYTE PTR [rax],al
   1400410e4:	repnz rol DWORD PTR [rax],0x0
   1400410e8:	add    eax,edx
   1400410ea:	add    BYTE PTR [rax],al
   1400410ec:	rex.W xor BYTE PTR [rbx],al
   1400410ef:	add    BYTE PTR [rax],al
   1400410f1:	add    BYTE PTR [rax],al
   1400410f3:	add    BYTE PTR [rcx],al
   1400410f5:	sbb    DWORD PTR [rdx],ecx
   1400410f7:	add    BYTE PTR [rcx],bl
   1400410f9:	je     0x14004110c
   1400410fb:	add    BYTE PTR [rcx],bl
   1400410fd:	adc    BYTE PTR fs:[rax],al
   140041100:	sbb    DWORD PTR [rdi+rcx*1+0x0],edx
   140041104:	sbb    DWORD PTR [rsi+rcx*1],esi
   140041107:	add    BYTE PTR [rcx],bl
   140041109:	mov    dl,0x15
   14004110b:	rcl    BYTE PTR [rcx],0xf
   14004110e:	add    al,BYTE PTR [rax]
   140041110:	(bad)  
   140041111:	jb     0x140041115
   140041113:	xor    BYTE PTR [rbx+rdx*2+0x7be80001],dh
   14004111a:	add    eax,DWORD PTR [rax]
   14004111c:	mov    esi,es
   14004111e:	add    BYTE PTR [rax],al
   140041120:	(bad)  
   140041121:	(bad)  
   140041122:	(bad)  
   140041123:	jmp    FWORD PTR [rsi+0xc6]
   140041129:	add    BYTE PTR [rax],al
   14004112b:	add    BYTE PTR [rax-0xffff3a],bh
   140041131:	(bad)  
   140041132:	(bad)  
   140041133:	call   QWORD PTR [rcx]
   140041135:	lar    eax,WORD PTR [rax]
   140041138:	(bad)  
   140041139:	jb     0x14004113d
   14004113b:	xor    BYTE PTR [rbx+rdx*2+0x7c100001],dh
   140041142:	add    eax,DWORD PTR [rax]
   140041144:	(bad)  
   140041145:	mov    BYTE PTR [rax],0x0
   140041148:	(bad)  
   140041149:	(bad)  
   14004114a:	(bad)  
   14004114b:	push   rsi
   14004114d:	mov    BYTE PTR [rax],0x0
   140041150:	add    BYTE PTR [rax],al
   140041152:	add    BYTE PTR [rax],al
   140041154:	add    bh,al
   140041156:	add    BYTE PTR [rax],al
   140041158:	(bad)  
   140041159:	(bad)  
   14004115a:	(bad)  
   14004115b:	call   QWORD PTR [rcx]
   14004115d:	sbb    DWORD PTR [rsi],eax
   14004115f:	add    BYTE PTR [rcx],bl
   140041161:	or     eax,DWORD PTR fs:[rax]
   140041164:	adc    al,0x34
   140041166:	or     al,BYTE PTR [rax]
   140041168:	(bad)  
   140041169:	jb     0x14004116d
   14004116b:	jo     0x140041121
   14004116d:	push   rbx
   14004116e:	add    DWORD PTR [rax],eax
   140041170:	cmp    BYTE PTR [rbx+rax*1+0x0],bh
   140041174:	sbb    al,0xc7
   140041176:	add    BYTE PTR [rax],al
   140041178:	(bad)  
   140041179:	(bad)  
   14004117a:	(bad)  
   14004117b:	dec    DWORD PTR [rsi-0x39]
   14004117e:	add    BYTE PTR [rax],al
   140041180:	add    BYTE PTR [rax],al
   140041182:	add    BYTE PTR [rax],al
   140041184:	pop    rsi
   140041185:	mov    DWORD PTR [rax],0xffffff00
   14004118b:	call   QWORD PTR [rcx]
   14004118d:	sbb    eax,0x641d0008
   140041192:	adc    al,BYTE PTR [rax]
   140041194:	sbb    DWORD PTR [rcx+rdx*1+0x0],edx
   140041198:	adc    eax,0x8001034
   14004119d:	rol    BYTE PTR [rax+rsi*2],cl
   1400411a0:	mov    ah,0x53
   1400411a2:	add    DWORD PTR [rax],eax
   1400411a4:	(bad)  
   1400411a5:	jl     0x1400411aa
   1400411a7:	add    bh,bh
   1400411a9:	(bad)  
   1400411aa:	(bad)  
   1400411ab:	call   QWORD PTR [rcx-0x7bfffcd0]
   1400411b1:	mov    DWORD PTR [rax],0xffffff00
   1400411b7:	(bad)  
   1400411b8:	mov    edx,0xc7
   1400411bd:	add    BYTE PTR [rax],al
   1400411bf:	add    BYTE PTR [rip+0xffffffffff0000c8],cl        # 0x13f04128d
   1400411c5:	(bad)  
   1400411c6:	(bad)  
   1400411c7:	call   QWORD PTR [rcx]
   1400411c9:	adc    al,0x4
   1400411cb:	add    BYTE PTR [rsp+rsi*1],dl
   1400411ce:	or     al,BYTE PTR [rax]
   1400411d0:	(bad)  
   1400411d1:	jb     0x1400411d5
   1400411d3:	jo     0x140041189
   1400411d5:	push   rbx
   1400411d6:	add    DWORD PTR [rax],eax
   1400411d8:	mov    BYTE PTR [rbx+rax*1+0x0],bh
   1400411dc:	cmp    al,cl
   1400411de:	add    BYTE PTR [rax],al
   1400411e0:	(bad)  
   1400411e1:	(bad)  
   1400411e2:	(bad)  
   1400411e3:	jmp    QWORD PTR [rdx-0x38]
   1400411e6:	add    BYTE PTR [rax],al
   1400411e8:	add    BYTE PTR [rax],al
   1400411ea:	add    BYTE PTR [rax],al
   1400411ec:	jae    0x1400411b6
   1400411ee:	add    BYTE PTR [rax],al
   1400411f0:	(bad)  
   1400411f1:	(bad)  
   1400411f2:	(bad)  
   1400411f3:	call   QWORD PTR [rcx]
   1400411f5:	adc    al,0x4
   1400411f7:	add    BYTE PTR [rsp+rsi*1],dl
   1400411fa:	or     al,BYTE PTR [rax]
   1400411fc:	(bad)  
   1400411fd:	jb     0x140041201
   1400411ff:	jo     0x1400411b5
   140041201:	push   rbx
   140041202:	add    DWORD PTR [rax],eax
   140041204:	mov    al,0x7c
   140041206:	add    eax,DWORD PTR [rax]
   140041208:	xchg   esp,eax
   140041209:	enter  0x0,0xff
   14004120d:	(bad)  
   14004120e:	(bad)  
   14004120f:	(bad)  
   140041210:	mov    esi,0xc8
   140041215:	add    BYTE PTR [rax],al
   140041217:	add    bh,cl
   140041219:	enter  0x0,0xff
   14004121d:	(bad)  
   14004121e:	(bad)  
   14004121f:	call   QWORD PTR [rcx]
   140041221:	sbb    DWORD PTR [rsi],eax
   140041223:	add    BYTE PTR [rcx],bl
   140041225:	lldt   WORD PTR fs:[rsp+rsi*1]
   14004122a:	(bad)  
   14004122b:	add    BYTE PTR [rsi],al
   14004122d:	mov    dl,0x2
   14004122f:	jo     0x1400411e5
   140041231:	push   rbx
   140041232:	add    DWORD PTR [rax],eax
   140041234:	fdivr  DWORD PTR [rbx+rax*1+0x0]
   140041238:	lock enter 0x0,0xff
   14004123d:	(bad)  
   14004123e:	(bad)  
   14004123f:	jmp    QWORD PTR [rdx]
   140041241:	leave  
   140041242:	add    BYTE PTR [rax],al
   140041244:	add    BYTE PTR [rax],al
   140041246:	add    BYTE PTR [rax],al
   140041248:	push   rbx
   140041249:	leave  
   14004124a:	add    BYTE PTR [rax],al
   14004124c:	(bad)  
   14004124d:	(bad)  
   14004124e:	(bad)  
   14004124f:	call   QWORD PTR [rcx]
   140041251:	sbb    DWORD PTR [rsi],eax
   140041253:	add    BYTE PTR [rcx],bl
   140041255:	lldt   WORD PTR fs:[rsp+rsi*1]
   14004125a:	(bad)  
   14004125b:	add    BYTE PTR [rsi],al
   14004125d:	mov    dl,0x2
   14004125f:	jo     0x140041215
   140041261:	push   rbx
   140041262:	add    DWORD PTR [rax],eax
   140041264:	add    BYTE PTR [rbp+0x3],bh
   140041267:	add    BYTE PTR [rax-0x37],bh
   14004126a:	add    BYTE PTR [rax],al
   14004126c:	(bad)  
   14004126d:	(bad)  
   14004126e:	(bad)  
   14004126f:	jmp    FWORD PTR [rdx+0xc9]
   140041275:	add    BYTE PTR [rax],al
   140041277:	add    bl,bl
   140041279:	leave  
   14004127a:	add    BYTE PTR [rax],al
   14004127c:	(bad)  
   14004127d:	(bad)  
   14004127e:	(bad)  
   14004127f:	call   QWORD PTR [rcx]
   140041281:	sbb    DWORD PTR [rsi],eax
   140041283:	add    BYTE PTR [rcx],bl
   140041285:	lldt   WORD PTR fs:[rsp+rsi*1]
   14004128a:	(bad)  
   14004128b:	add    BYTE PTR [rsi],al
   14004128d:	mov    dl,0x2
   14004128f:	jo     0x140041245
   140041291:	push   rbx
   140041292:	add    DWORD PTR [rax],eax
   140041294:	sub    BYTE PTR [rbp+0x3],bh
   140041297:	add    BYTE PTR [rax],al
   140041299:	retf   0x0
   14004129c:	(bad)  
   14004129d:	(bad)  
   14004129e:	(bad)  
   14004129f:	push   QWORD PTR [rdx]
   1400412a1:	retf   0x0
   1400412a4:	add    BYTE PTR [rax],al
   1400412a6:	add    BYTE PTR [rax],al
   1400412a8:	movsxd ecx,edx
   1400412aa:	add    BYTE PTR [rax],al
   1400412ac:	(bad)  
   1400412ad:	(bad)  
   1400412ae:	(bad)  
   1400412af:	call   QWORD PTR [rcx]
   1400412b1:	sbb    DWORD PTR [rsi],eax
   1400412b3:	add    BYTE PTR [rcx],bl
   1400412b5:	lldt   WORD PTR fs:[rsp+rsi*1]
   1400412ba:	(bad)  
   1400412bb:	add    BYTE PTR [rsi],al
   1400412bd:	mov    dl,0x2
   1400412bf:	jo     0x140041275
   1400412c1:	push   rbx
   1400412c2:	add    DWORD PTR [rax],eax
   1400412c4:	push   rax
   1400412c5:	jge    0x1400412ca
   1400412c7:	add    BYTE PTR [rax-0xffff36],cl
   1400412cd:	(bad)  
   1400412ce:	(bad)  
   1400412cf:	(bad)  
   1400412d0:	mov    edx,0xca
   1400412d5:	add    BYTE PTR [rax],al
   1400412d7:	add    bl,ch
   1400412d9:	retf   0x0
   1400412dc:	(bad)  
   1400412dd:	(bad)  
   1400412de:	(bad)  
   1400412df:	call   QWORD PTR [rcx]
   1400412e1:	sbb    DWORD PTR [rsi],eax
   1400412e3:	add    BYTE PTR [rcx],bl
   1400412e5:	lldt   WORD PTR fs:[rsp+rsi*1]
   1400412ea:	(bad)  
   1400412eb:	add    BYTE PTR [rsi],al
   1400412ed:	mov    dl,0x2
   1400412ef:	jo     0x1400412a5
   1400412f1:	push   rbx
   1400412f2:	add    DWORD PTR [rax],eax
   1400412f4:	js     0x140041373
   1400412f6:	add    eax,DWORD PTR [rax]
   1400412f8:	adc    bl,cl
   1400412fa:	add    BYTE PTR [rax],al
   1400412fc:	(bad)  
   1400412fd:	(bad)  
   1400412fe:	(bad)  
   1400412ff:	inc    DWORD PTR [rdx-0x35]
   140041302:	add    BYTE PTR [rax],al
   140041304:	add    BYTE PTR [rax],al
   140041306:	add    BYTE PTR [rax],al
   140041308:	jae    0x1400412d5
   14004130a:	add    BYTE PTR [rax],al
   14004130c:	(bad)  
   14004130d:	(bad)  
   14004130e:	(bad)  
   14004130f:	call   QWORD PTR [rcx]
   140041311:	sbb    DWORD PTR [rsi],eax
   140041313:	add    BYTE PTR [rcx],bl
   140041315:	lldt   WORD PTR fs:[rsp+rsi*1]
   14004131a:	(bad)  
   14004131b:	add    BYTE PTR [rsi],al
   14004131d:	mov    dl,0x2
   14004131f:	jo     0x1400412d5
   140041321:	push   rbx
   140041322:	add    DWORD PTR [rax],eax
   140041324:	movabs al,ds:0xff0000cb9800037d
   14004132d:	(bad)  
   14004132e:	(bad)  
   14004132f:	dec    edx
   140041331:	retf   
   140041332:	add    BYTE PTR [rax],al
   140041334:	add    BYTE PTR [rax],al
   140041336:	add    BYTE PTR [rax],al
   140041338:	sti    
   140041339:	retf   
   14004133a:	add    BYTE PTR [rax],al
   14004133c:	(bad)  
   14004133d:	(bad)  
   14004133e:	(bad)  
   14004133f:	call   QWORD PTR [rcx]
   140041341:	sbb    DWORD PTR [rsi],eax
   140041343:	add    BYTE PTR [rcx],bl
   140041345:	lldt   WORD PTR fs:[rsp+rsi*1]
   14004134a:	(bad)  
   14004134b:	add    BYTE PTR [rsi],al
   14004134d:	mov    dl,0x2
   14004134f:	jo     0x140041305
   140041351:	push   rbx
   140041352:	add    DWORD PTR [rax],eax
   140041354:	enter  0x37d,0x0
   140041358:	and    ah,cl
   14004135a:	add    BYTE PTR [rax],al
   14004135c:	(bad)  
   14004135d:	(bad)  
   14004135e:	(bad)  
   14004135f:	call   QWORD PTR [rdx-0x34]
   140041362:	add    BYTE PTR [rax],al
   140041364:	add    BYTE PTR [rax],al
   140041366:	add    BYTE PTR [rax],al
   140041368:	or     esp,0x0
   14004136b:	add    bh,bh
   14004136d:	(bad)  
   14004136e:	(bad)  
   14004136f:	call   QWORD PTR [rcx]
   140041371:	sbb    eax,0x641d0008
   140041376:	adc    BYTE PTR [rax],al
   140041378:	sbb    DWORD PTR [rdi+rcx*1+0x0],edx
   14004137c:	adc    eax,0x8000e34
   140041381:	mov    dl,0x4
   140041383:	jo     0x140041339
   140041385:	push   rbx
   140041386:	add    DWORD PTR [rax],eax
   140041388:	lock jge 0x14004138e
   14004138b:	add    BYTE PTR [rax-0xffff34],ch
   140041391:	(bad)  
   140041392:	(bad)  
   140041393:	jmp    rax
   140041395:	int3   
   140041396:	add    BYTE PTR [rax],al
   140041398:	add    BYTE PTR [rax],al
   14004139a:	add    BYTE PTR [rax],al
   14004139c:	adc    al,0xcd
   14004139e:	add    BYTE PTR [rax],al
   1400413a0:	(bad)  
   1400413a1:	(bad)  
   1400413a2:	(bad)  
   1400413a3:	call   QWORD PTR [rcx]
   1400413a5:	sbb    DWORD PTR [rsi],eax
   1400413a7:	add    BYTE PTR [rcx],bl
   1400413a9:	lldt   WORD PTR fs:[rsp+rsi*1]
   1400413ae:	(bad)  
   1400413af:	add    BYTE PTR [rsi],al
   1400413b1:	mov    dl,0x2
   1400413b3:	jo     0x140041369
   1400413b5:	push   rbx
   1400413b6:	add    DWORD PTR [rax],eax
   1400413b8:	sbb    BYTE PTR [rsi+0x3],bh
   1400413bb:	add    BYTE PTR [rax-0x33],al
   1400413be:	add    BYTE PTR [rax],al
   1400413c0:	(bad)  
   1400413c1:	(bad)  
   1400413c2:	(bad)  
   1400413c3:	push   QWORD PTR [rdx-0x33]
   1400413c6:	add    BYTE PTR [rax],al
   1400413c8:	add    BYTE PTR [rax],al
   1400413ca:	add    BYTE PTR [rax],al
   1400413cc:	movabs ds:0x11ffffffff0000cd,eax
   1400413d5:	adc    al,0x4
   1400413d7:	add    BYTE PTR [rsp+rsi*1],dl
   1400413da:	or     al,BYTE PTR [rax]
   1400413dc:	(bad)  
   1400413dd:	jb     0x1400413e1
   1400413df:	jo     0x140041395
   1400413e1:	push   rbx
   1400413e2:	add    DWORD PTR [rax],eax
   1400413e4:	rex jle 0x1400413ea
   1400413e7:	add    al,cl
   1400413e9:	int    0x0
   1400413eb:	add    bh,bh
   1400413ed:	(bad)  
   1400413ee:	(bad)  
   1400413ef:	push   rdx
   1400413f1:	int    0x0
   1400413f3:	add    BYTE PTR [rax],al
   1400413f5:	add    BYTE PTR [rax],al
   1400413f7:	add    BYTE PTR [rbx],al
   1400413f9:	(bad)  
   1400413fa:	add    BYTE PTR [rax],al
   1400413fc:	(bad)  
   1400413fd:	(bad)  
   1400413fe:	(bad)  
   1400413ff:	call   QWORD PTR [rcx]
   140041401:	adc    al,0x4
   140041403:	add    BYTE PTR [rsp+rsi*1],dl
   140041406:	or     al,BYTE PTR [rax]
   140041408:	(bad)  
   140041409:	jb     0x14004140d
   14004140b:	jo     0x1400413c1
   14004140d:	push   rbx
   14004140e:	add    DWORD PTR [rax],eax
   140041410:	push   0x2400037e
   140041415:	(bad)  
   140041416:	add    BYTE PTR [rax],al
   140041418:	(bad)  
   140041419:	(bad)  
   14004141a:	(bad)  
   14004141b:	dec    DWORD PTR [rsi-0x32]
   14004141e:	add    BYTE PTR [rax],al
   140041420:	add    BYTE PTR [rax],al
   140041422:	add    BYTE PTR [rax],al
   140041424:	pop    rdi
   140041425:	(bad)  
   140041426:	add    BYTE PTR [rax],al
   140041428:	(bad)  
   140041429:	(bad)  
   14004142a:	(bad)  
   14004142b:	call   QWORD PTR [rcx]
   14004142d:	sbb    DWORD PTR [rsi],eax
   14004142f:	add    BYTE PTR [rcx],bl
   140041431:	lldt   WORD PTR fs:[rsp+rsi*1]
   140041436:	(bad)  
   140041437:	add    BYTE PTR [rsi],al
   140041439:	mov    dl,0x2
   14004143b:	jo     0x1400413f1
   14004143d:	push   rbx
   14004143e:	add    DWORD PTR [rax],eax
   140041440:	nop
   140041441:	jle    0x140041446
   140041443:	add    BYTE PTR [rax-0xffff32],al
   140041449:	(bad)  
   14004144a:	(bad)  
   14004144b:	push   QWORD PTR [rdx+0xce]
   140041451:	add    BYTE PTR [rax],al
   140041453:	add    bl,ah
   140041455:	(bad)  
   140041456:	add    BYTE PTR [rax],al
   140041458:	(bad)  
   140041459:	(bad)  
   14004145a:	(bad)  
   14004145b:	call   QWORD PTR [rcx]
   14004145d:	sbb    DWORD PTR [rsi],eax
   14004145f:	add    BYTE PTR [rcx],bl
   140041461:	lldt   WORD PTR fs:[rsp+rsi*1]
   140041466:	(bad)  
   140041467:	add    BYTE PTR [rsi],al
   140041469:	mov    dl,0x2
   14004146b:	jo     0x140041421
   14004146d:	push   rbx
   14004146e:	add    DWORD PTR [rax],eax
   140041470:	mov    eax,0x800037e
   140041475:	iret   
   140041476:	add    BYTE PTR [rax],al
   140041478:	(bad)  
   140041479:	(bad)  
   14004147a:	(bad)  
   14004147b:	(bad)  
   14004147c:	cmp    edi,ecx
   14004147e:	add    BYTE PTR [rax],al
   140041480:	add    BYTE PTR [rax],al
   140041482:	add    BYTE PTR [rax],al
   140041484:	imul   ecx,edi,0xffff0000
   14004148a:	(bad)  
   14004148b:	call   QWORD PTR [rcx]
   14004148d:	sbb    eax,0x641d0008
   140041492:	adc    al,BYTE PTR [rax]
   140041494:	sbb    DWORD PTR [rcx+rdx*1+0x0],edx
   140041498:	adc    eax,0x8001034
   14004149d:	rol    BYTE PTR [rax+rsi*2],cl
   1400414a0:	mov    ah,0x53
   1400414a2:	add    DWORD PTR [rax],eax
   1400414a4:	loopne 0x140041524
   1400414a6:	add    eax,DWORD PTR [rax]
   1400414a8:	(bad)  
   1400414a9:	(bad)  
   1400414aa:	(bad)  
   1400414ab:	inc    ecx
   1400414ad:	xor    BYTE PTR [rbx],al
   1400414af:	add    BYTE PTR [rax-0xffff31],dl
   1400414b5:	(bad)  
   1400414b6:	(bad)  
   1400414b7:	dec    eax
   1400414b9:	iret   
   1400414ba:	add    BYTE PTR [rax],al
   1400414bc:	add    BYTE PTR [rax],al
   1400414be:	add    BYTE PTR [rax],al
   1400414c0:	sbb    dl,al
   1400414c2:	add    BYTE PTR [rax],al
   1400414c4:	(bad)  
   1400414c5:	(bad)  
   1400414c6:	(bad)  
   1400414c7:	call   QWORD PTR [rcx]
   1400414c9:	sbb    eax,0x641d0008
   1400414ce:	adc    BYTE PTR [rax],al
   1400414d0:	sbb    DWORD PTR [rdi+rcx*1+0x0],edx
   1400414d4:	adc    eax,0x8000e34
   1400414d9:	mov    dl,0x4
   1400414db:	jo     0x140041491
   1400414dd:	push   rbx
   1400414de:	add    DWORD PTR [rax],eax
   1400414e0:	or     BYTE PTR [rdi+0x3],bh
   1400414e3:	add    BYTE PTR [rax-0x30],cl
   1400414e6:	add    BYTE PTR [rax],al
   1400414e8:	(bad)  
   1400414e9:	(bad)  
   1400414ea:	(bad)  
   1400414eb:	(bad)  
   1400414ec:	jg     0x1400414be
   1400414ee:	add    BYTE PTR [rax],al
   1400414f0:	add    BYTE PTR [rax],al
   1400414f2:	add    BYTE PTR [rax],al
   1400414f4:	mov    dl,0xd0
   1400414f6:	add    BYTE PTR [rax],al
   1400414f8:	(bad)  
   1400414f9:	(bad)  
   1400414fa:	(bad)  
   1400414fb:	call   QWORD PTR [rcx]
   1400414fd:	sbb    eax,0x641d0008
   140041502:	or     al,0x0
   140041504:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140041508:	adc    eax,0x8000a34
   14004150d:	jb     0x140041513
   14004150f:	jo     0x1400414c5
   140041511:	push   rbx
   140041512:	add    DWORD PTR [rax],eax
   140041514:	xor    BYTE PTR [rdi+0x3],bh
   140041517:	add    al,ah
   140041519:	rol    BYTE PTR [rax],1
   14004151b:	add    bh,bh
   14004151d:	(bad)  
   14004151e:	(bad)  
   14004151f:	call   QWORD PTR [rdi]
   140041521:	rol    DWORD PTR [rax],1
   140041523:	add    BYTE PTR [rax],al
   140041525:	add    BYTE PTR [rax],al
   140041527:	add    BYTE PTR [rip+0xffffffffff0000d1],ch        # 0x13f0415fe
   14004152d:	(bad)  
   14004152e:	(bad)  
   14004152f:	call   QWORD PTR [rcx]
   140041531:	adc    al,0x4
   140041533:	add    BYTE PTR [rsp+rsi*1],dl
   140041536:	(bad)  
   140041537:	add    BYTE PTR [rsi],al
   140041539:	mov    dl,0x2
   14004153b:	jo     0x1400414f1
   14004153d:	push   rbx
   14004153e:	add    DWORD PTR [rax],eax
   140041540:	pop    rax
   140041541:	jg     0x140041546
   140041543:	add    BYTE PTR [rax-0x2f],bl
   140041546:	add    BYTE PTR [rax],al
   140041548:	(bad)  
   140041549:	(bad)  
   14004154a:	(bad)  
   14004154b:	inc    DWORD PTR [rdx+0xd1]
   140041551:	add    BYTE PTR [rax],al
   140041553:	add    BYTE PTR [rax-0xffff2f],dh
   140041559:	(bad)  
   14004155a:	(bad)  
   14004155b:	call   QWORD PTR [rcx]
   14004155d:	sbb    DWORD PTR [rsi],eax
   14004155f:	add    BYTE PTR [rcx],bl
   140041561:	lldt   WORD PTR fs:[rsp+rsi*1]
   140041566:	(bad)  
   140041567:	add    BYTE PTR [rsi],al
   140041569:	mov    dl,0x2
   14004156b:	jo     0x140041521
   14004156d:	push   rbx
   14004156e:	add    DWORD PTR [rax],eax
   140041570:	cmp    BYTE PTR [rdi+0x3],0x0
   140041574:	(bad)  
   140041575:	(bad)  
   140041576:	(bad)  
   140041577:	jmp    FWORD PTR [rcx-0x2ffffcd0]
   14004157d:	rol    DWORD PTR [rax],1
   14004157f:	add    bh,bh
   140041581:	(bad)  
   140041582:	(bad)  
   140041583:	inc    DWORD PTR [rdx]
   140041585:	rol    BYTE PTR [rax],cl
   140041587:	add    BYTE PTR [rax],al
   140041589:	add    BYTE PTR [rax],al
   14004158b:	add    BYTE PTR [rbx],dh
   14004158d:	rol    BYTE PTR [rax],cl
   14004158f:	add    bh,bh
   140041591:	(bad)  
   140041592:	(bad)  
   140041593:	call   QWORD PTR [rcx]
   140041595:	sbb    DWORD PTR [rsi],eax
   140041597:	add    BYTE PTR [rcx],bl
   140041599:	lldt   WORD PTR fs:[rsp+rsi*1]
   14004159e:	(bad)  
   14004159f:	add    BYTE PTR [rsi],al
   1400415a1:	mov    dl,0x2
   1400415a3:	jo     0x140041559
   1400415a5:	push   rbx
   1400415a6:	add    DWORD PTR [rax],eax
   1400415a8:	test   al,0x7f
   1400415aa:	add    eax,DWORD PTR [rax]
   1400415ac:	pop    rax
   1400415ad:	rol    BYTE PTR [rax],cl
   1400415af:	add    bh,bh
   1400415b1:	(bad)  
   1400415b2:	(bad)  
   1400415b3:	dec    DWORD PTR [rdx+0xd2]
   1400415b9:	add    BYTE PTR [rax],al
   1400415bb:	add    BYTE PTR [rbx-0xffff2e],bh
   1400415c1:	(bad)  
   1400415c2:	(bad)  
   1400415c3:	call   QWORD PTR [rcx]
   1400415c5:	lar    eax,WORD PTR [rax]
   1400415c8:	(bad)  
   1400415c9:	jb     0x1400415cd
   1400415cb:	xor    BYTE PTR [rbx+rdx*2+0x7fd00001],dh
   1400415d2:	add    eax,DWORD PTR [rax]
   1400415d4:	loopne 0x1400415a8
   1400415d6:	add    BYTE PTR [rax],al
   1400415d8:	(bad)  
   1400415d9:	(bad)  
   1400415da:	(bad)  
   1400415db:	inc    DWORD PTR [rdx]
   1400415dd:	rol    DWORD PTR [rax],cl
   1400415df:	add    BYTE PTR [rax],al
   1400415e1:	add    BYTE PTR [rax],al
   1400415e3:	add    BYTE PTR [rbx+rdx*8],cl
   1400415e6:	add    BYTE PTR [rax],al
   1400415e8:	(bad)  
   1400415e9:	(bad)  
   1400415ea:	(bad)  
   1400415eb:	call   QWORD PTR [rcx]
   1400415ed:	lar    eax,WORD PTR [rax]
   1400415f0:	(bad)  
   1400415f1:	jb     0x1400415f5
   1400415f3:	xor    BYTE PTR [rbx+rdx*2+0x7ff80001],dh
   1400415fa:	add    eax,DWORD PTR [rax]
   1400415fc:	sub    bl,dl
   1400415fe:	add    BYTE PTR [rax],al
   140041600:	(bad)  
   140041601:	(bad)  
   140041602:	(bad)  
   140041603:	dec    DWORD PTR [rdx-0x2d]
   140041606:	add    BYTE PTR [rax],al
   140041608:	add    BYTE PTR [rax],al
   14004160a:	add    BYTE PTR [rax],al
   14004160c:	push   rsp
   14004160d:	rol    DWORD PTR [rax],cl
   14004160f:	add    bh,bh
   140041611:	(bad)  
   140041612:	(bad)  
   140041613:	call   QWORD PTR [rcx]
   140041615:	sbb    DWORD PTR [rsi],eax
   140041617:	add    BYTE PTR [rcx],bl
   140041619:	or     eax,DWORD PTR fs:[rax]
   14004161c:	adc    al,0x34
   14004161e:	or     al,BYTE PTR [rax]
   140041620:	(bad)  
   140041621:	jb     0x140041625
   140041623:	jo     0x1400415d9
   140041625:	push   rbx
   140041626:	add    DWORD PTR [rax],eax
   140041628:	and    BYTE PTR [rax-0x2c8ffffd],al
   14004162e:	add    BYTE PTR [rax],al
   140041630:	(bad)  
   140041631:	(bad)  
   140041632:	(bad)  
   140041633:	jmp    QWORD PTR [rdx+0xd3]
   140041639:	add    BYTE PTR [rax],al
   14004163b:	add    BYTE PTR [rdx-0xffff2d],dh
   140041641:	(bad)  
   140041642:	(bad)  
   140041643:	call   QWORD PTR [rcx]
   140041645:	adc    al,0x4
   140041647:	add    BYTE PTR [rsp+rsi*1],dl
   14004164a:	or     al,BYTE PTR [rax]
   14004164c:	(bad)  
   14004164d:	jb     0x140041651
   14004164f:	jo     0x140041605
   140041651:	push   rbx
   140041652:	add    DWORD PTR [rax],eax
   140041654:	rex.W add BYTE PTR [rbx],0x0
   140041658:	fcom   st(3)
   14004165a:	add    BYTE PTR [rax],al
   14004165c:	(bad)  
   14004165d:	(bad)  
   14004165e:	(bad)  
   14004165f:	inc    DWORD PTR [rdx]
   140041661:	(bad)  
   140041662:	add    BYTE PTR [rax],al
   140041664:	add    BYTE PTR [rax],al
   140041666:	add    BYTE PTR [rax],al
   140041668:	adc    edx,esp
   14004166a:	add    BYTE PTR [rax],al
   14004166c:	(bad)  
   14004166d:	(bad)  
   14004166e:	(bad)  
   14004166f:	inc    DWORD PTR [rcx]
   140041671:	(bad)  
   140041672:	or     DWORD PTR [rax],eax
   140041674:	(bad)  
   140041675:	sbb    BYTE PTR fs:[rax],al
   140041678:	(bad)  
   140041679:	push   rsp
   14004167a:	(bad)  
   14004167b:	add    BYTE PTR [rdi],dl
   14004167d:	xor    al,0x16
   14004167f:	add    BYTE PTR [rdi],dl
   140041681:	add    DWORD PTR [rax+rax*1],edx
   140041684:	adc    BYTE PTR [rax+0x0],dh
   140041687:	add    BYTE PTR [rcx],dl
   140041689:	or     eax,0x62040001
   14004168e:	add    BYTE PTR [rax],al
   140041690:	mov    ah,0x53
   140041692:	add    DWORD PTR [rax],eax
   140041694:	jo     0x140041616
   140041696:	add    eax,DWORD PTR [rax]
   140041698:	(bad)  
   140041699:	(bad)  
   14004169a:	(bad)  
   14004169b:	(bad)  
   14004169c:	fnstenv [rax]
   14004169e:	add    eax,DWORD PTR [rax]
   1400416a0:	sub    bh,dl
   1400416a2:	add    BYTE PTR [rax],al
   1400416a4:	(bad)  
   1400416a5:	(bad)  
   1400416a6:	(bad)  
   1400416a7:	inc    DWORD PTR [rdi-0x29]
   1400416aa:	add    BYTE PTR [rax],al
   1400416ac:	add    BYTE PTR [rax],al
   1400416ae:	add    BYTE PTR [rax],al
   1400416b0:	push   rsp
   1400416b1:	xlat   BYTE PTR ds:[rbx]
   1400416b2:	add    BYTE PTR [rax],al
   1400416b4:	(bad)  
   1400416b5:	(bad)  
   1400416b6:	(bad)  
   1400416b7:	call   QWORD PTR [rcx]
   1400416b9:	adc    al,BYTE PTR [rcx]
   1400416bb:	add    BYTE PTR [rcx],cl
   1400416bd:	(bad)  
   1400416be:	add    BYTE PTR [rax],al
   1400416c0:	mov    ah,0x53
   1400416c2:	add    DWORD PTR [rax],eax
   1400416c4:	cwde   
   1400416c5:	add    BYTE PTR [rbx],0x0
   1400416c8:	(bad)  
   1400416c9:	(bad)  
   1400416ca:	(bad)  
   1400416cb:	push   rcx
   1400416cd:	xor    BYTE PTR [rbx],al
   1400416cf:	add    BYTE PTR [rdi+rdx*8+0x0],bl
   1400416d3:	add    bh,bh
   1400416d5:	(bad)  
   1400416d6:	(bad)  
   1400416d7:	push   QWORD PTR [rbx-0x29]
   1400416da:	add    BYTE PTR [rax],al
   1400416dc:	add    BYTE PTR [rax],al
   1400416de:	add    BYTE PTR [rax],al
   1400416e0:	jle    0x1400416b9
   1400416e2:	add    BYTE PTR [rax],al
   1400416e4:	(bad)  
   1400416e5:	(bad)  
   1400416e6:	(bad)  
   1400416e7:	call   QWORD PTR [rcx]
   1400416e9:	or     al,BYTE PTR [rax+rax*1]
   1400416ec:	or     dh,BYTE PTR [rsi+rax*1]
   1400416ef:	add    BYTE PTR [rdx],cl
   1400416f1:	xor    al,BYTE PTR [rsi]
   1400416f3:	jo     0x14004169d
   1400416f5:	pop    rsp
   1400416f6:	add    DWORD PTR [rax],eax
   1400416f8:	add    DWORD PTR [rax],eax
   1400416fa:	add    BYTE PTR [rax],al
   1400416fc:	sub    ebx,eax
   1400416fe:	add    BYTE PTR [rax],al
   140041700:	push   rcx
   140041701:	fadd   DWORD PTR [rax]
   140041703:	add    BYTE PTR [rip+0x331],cl        # 0x140041a3a
   140041709:	add    BYTE PTR [rax],al
   14004170b:	add    BYTE PTR [rcx],dl
   14004170d:	clts   
   14004170f:	add    BYTE PTR [rdi],cl
   140041711:	or     DWORD PTR fs:[rax],eax
   140041714:	sysenter 
   140041716:	or     BYTE PTR [rax],al
   140041718:	rsqrtps xmm1,XMMWORD PTR [rbx]
   14004171b:	jo     0x1400416c5
   14004171d:	pop    rsp
   14004171e:	add    DWORD PTR [rax],eax
   140041720:	add    DWORD PTR [rax],eax
   140041722:	add    BYTE PTR [rax],al
   140041724:	and    al,0xd9
   140041726:	add    BYTE PTR [rax],al
   140041728:	push   rdx
   140041729:	fld    DWORD PTR [rax]
   14004172b:	add    BYTE PTR [rip+0x331],ch        # 0x140041a62
   140041731:	add    BYTE PTR [rax],al
   140041733:	add    BYTE PTR [rcx],dl
   140041735:	sbb    DWORD PTR [rsi],eax
   140041737:	add    BYTE PTR [rcx],bl
   140041739:	fs or  al,0x0
   14004173c:	adc    al,0x34
   14004173e:	or     al,BYTE PTR [rax]
   140041740:	(bad)  
   140041741:	jb     0x140041745
   140041743:	jo     0x1400416f9
   140041745:	push   rbx
   140041746:	add    DWORD PTR [rax],eax
   140041748:	lock add BYTE PTR [rbx],0x0
   14004174c:	js     0x140041728
   14004174e:	add    BYTE PTR [rax],al
   140041750:	(bad)  
   140041751:	(bad)  
   140041752:	(bad)  
   140041753:	inc    ebp
   140041755:	fiadd  DWORD PTR [rax]
   140041757:	add    BYTE PTR [rax],al
   140041759:	add    BYTE PTR [rax],al
   14004175b:	add    bl,bh
   14004175d:	fiadd  DWORD PTR [rax]
   14004175f:	add    bh,bh
   140041761:	(bad)  
   140041762:	(bad)  
   140041763:	inc    DWORD PTR [rcx]
   140041765:	or     al,BYTE PTR [rax+rax*1]
   140041768:	or     dh,BYTE PTR [rax+rdx*1]
   14004176b:	add    BYTE PTR [rdx],cl
   14004176d:	rol    BYTE PTR [rsi],cl
   14004176f:	jo     0x140041772
   140041771:	(bad)  
   140041772:	add    al,BYTE PTR [rax]
   140041774:	(bad)  
   140041775:	mov    dl,0x2
   140041777:	xor    BYTE PTR [rcx],al
   140041779:	adc    eax,0x34150004
   14004177e:	or     BYTE PTR [rax],al
   140041780:	adc    eax,0x19701152
   140041785:	or     al,0x4
   140041787:	add    BYTE PTR [rdx+rsi*1],cl
   14004178a:	or     BYTE PTR [rax+0x7],dh
   14004178d:	push   rax
   14004178e:	(bad)  
   14004178f:	xor    BYTE PTR [rbx+rdx*2-0x7ee7ffff],dh
   140041796:	add    eax,DWORD PTR [rax]
   140041798:	sbb    DWORD PTR [rcx],ebp
   14004179a:	or     al,0x0
   14004179c:	sub    esp,eax
   14004179e:	(bad)  
   14004179f:	add    BYTE PTR [rip+0x21001674],ah        # 0x161042e19
   1400417a5:	fs adc eax,0x14341d00
   1400417ab:	add    BYTE PTR [rax],dl
   1400417ad:	repnz or eax,esi
   1400417b0:	(bad)  
   1400417b1:	loopne 0x1400417b8
   1400417b3:	shl    BYTE PTR [rbx+rdx*2-0x7ee7ffff],1
   1400417ba:	add    eax,DWORD PTR [rax]
	...
   1400417c4:	add    DWORD PTR [rax],eax
   1400417c6:	add    BYTE PTR [rax],al
   1400417c8:	add    DWORD PTR [rax],eax
   1400417ca:	add    BYTE PTR [rax],al
   1400417cc:	rcl    BYTE PTR [rdi],1
   1400417ce:	add    al,0x0
   1400417d0:	add    BYTE PTR [rax],al
   1400417d2:	add    BYTE PTR [rax],al
   1400417d4:	or     BYTE PTR [rax+0x480004],al
   1400417da:	add    BYTE PTR [rax],al
   1400417dc:	jne    0x14004180f
   1400417de:	add    eax,DWORD PTR [rax]
   1400417e0:	rex.W add BYTE PTR [rax],al
   1400417e3:	add    BYTE PTR [rax-0x1d],dh
   1400417e6:	add    BYTE PTR [rax],al
   1400417e8:	(bad)  
   1400417e9:	(bad)  
   1400417ea:	(bad)  
   1400417eb:	call   QWORD PTR [rdx]
   1400417ed:	in     al,0x0
   1400417ef:	add    BYTE PTR [rax],al
   1400417f1:	add    BYTE PTR [rax],al
   1400417f3:	add    BYTE PTR [rdi-0xffff1c],al
   1400417f9:	(bad)  
   1400417fa:	(bad)  
   1400417fb:	push   QWORD PTR [rbp+0x31]
   1400417fe:	add    eax,DWORD PTR [rax]
   140041800:	add    BYTE PTR [rax],al
   140041802:	add    BYTE PTR [rax],al
   140041804:	test   BYTE PTR [rcx],dh
   140041806:	add    eax,DWORD PTR [rax]
   140041808:	add    DWORD PTR [rax],eax
   14004180a:	add    BYTE PTR [rax],al
   14004180c:	scas   eax,DWORD PTR es:[rdi]
   14004180d:	xor    DWORD PTR [rbx],eax
   14004180f:	add    BYTE PTR [rax],al
   140041811:	add    BYTE PTR [rax],al
   140041813:	add    BYTE PTR [rcx],dl
   140041815:	adc    eax,DWORD PTR [rdx]
   140041817:	add    BYTE PTR [rdx],cl
   140041819:	push   rdx
   14004181a:	(bad)  
   14004181b:	xor    BYTE PTR [rbx+rdx*2-0x7ebfffff],dh
   140041822:	add    eax,DWORD PTR [rax]
   140041824:	(bad)  
   140041825:	(bad)  
   140041826:	(bad)  
   140041827:	inc    ecx
   140041829:	xor    DWORD PTR [rbx],eax
   14004182b:	add    BYTE PTR [rbp+riz*8+0x0],dl
   14004182f:	add    bh,bh
   140041831:	(bad)  
   140041832:	(bad)  
   140041833:	push   QWORD PTR [rbp+riz*8+0x0]
   140041837:	add    BYTE PTR [rax],al
   140041839:	add    BYTE PTR [rax],al
   14004183b:	add    dh,bl
   14004183d:	in     eax,0x0
   14004183f:	add    bh,bh
   140041841:	(bad)  
   140041842:	(bad)  
   140041843:	inc    DWORD PTR [rcx]
   140041845:	adc    eax,0x34150006
   14004184a:	or     al,BYTE PTR [rax]
   14004184c:	adc    eax,0x10701152
   140041851:	(bad)  
   140041852:	(bad)  
   140041854:	adc    DWORD PTR [rax],esp
   140041856:	or     DWORD PTR [rax],eax
   140041858:	and    BYTE PTR [rax+riz*1+0x0],ah
   14004185c:	sbb    al,0x54
   14004185e:	(bad)  
   14004185f:	add    BYTE PTR [rax],bl
   140041861:	xor    al,0x1e
   140041863:	add    BYTE PTR [rbx],cl
   140041865:	add    DWORD PTR [rax+rax*1],ebx
   140041868:	add    al,0x70
   14004186a:	add    BYTE PTR [rax],al
   14004186c:	mov    ah,0x53
   14004186e:	add    DWORD PTR [rax],eax
   140041870:	push   0xffffffffff000381
   140041875:	(bad)  
   140041876:	(bad)  
   140041877:	inc    DWORD PTR [rax]
   140041879:	add    BYTE PTR [rax],al
   14004187b:	add    bh,bh
   14004187d:	(bad)  
   14004187e:	(bad)  
   14004187f:	(bad)  
   140041880:	fnstenv [rcx]
   140041882:	add    eax,DWORD PTR [rax]
   140041884:	test   al,0xe7
   140041886:	add    BYTE PTR [rax],al
   140041888:	(bad)  
   140041889:	(bad)  
   14004188a:	(bad)  
   14004188b:	inc    DWORD PTR [rax-0x18]
   14004188e:	add    BYTE PTR [rax],al
   140041890:	add    DWORD PTR [rax],eax
   140041892:	add    BYTE PTR [rax],al
   140041894:	movsxd ebp,eax
   140041896:	add    BYTE PTR [rax],al
   140041898:	(bad)  
   140041899:	(bad)  
   14004189a:	(bad)  
   14004189b:	inc    DWORD PTR [rcx]
   14004189d:	add    al,0x1
   14004189f:	add    BYTE PTR [rdx+rax*4],al
   1400418a2:	add    BYTE PTR [rax],al
   1400418a4:	add    DWORD PTR [rsi],eax
   1400418a6:	add    al,BYTE PTR [rax]
   1400418a8:	(bad)  
   1400418a9:	xchg   edx,eax
   1400418aa:	add    dh,BYTE PTR [rax]
   1400418ac:	add    DWORD PTR [rdi],edx
   1400418ae:	or     BYTE PTR [rax],al
   1400418b0:	(bad)  
   1400418b1:	fs adc al,0x0
   1400418b4:	(bad)  
   1400418b5:	push   rsp
   1400418b6:	adc    eax,DWORD PTR [rax]
   1400418b8:	(bad)  
   1400418b9:	xor    al,0x12
   1400418bb:	add    BYTE PTR [rdi],dl
   1400418bd:	repnz adc BYTE PTR [rax+0x1],dh
   1400418c1:	sbb    BYTE PTR [rdx],cl
   1400418c3:	add    BYTE PTR [rax],bl
   1400418c5:	fs (bad) 
   1400418c7:	add    BYTE PTR [rax],bl
   1400418c9:	push   rsp
   1400418ca:	or     eax,0xc341800
   1400418cf:	add    BYTE PTR [rax],bl
   1400418d1:	jb     0x1400418e7
   1400418d3:	rcl    BYTE PTR [rdx],1
   1400418d5:	rcl    BYTE PTR [rax],0x70
   1400418d8:	sbb    DWORD PTR [rsp+rax*1],ecx
   1400418db:	add    BYTE PTR [rdx+rdx*2],cl
   1400418de:	or     BYTE PTR [rax+0x7],dh
   1400418e1:	push   rax
   1400418e2:	(bad)  
   1400418e3:	xor    BYTE PTR [rbx+rdx*2-0x7c67ffff],dh
   1400418ea:	add    eax,DWORD PTR [rax]
   1400418ec:	sbb    DWORD PTR [rip+0x1240009],ebp        # 0x1412818fb
   1400418f2:	adc    al,BYTE PTR [rax]
   1400418f4:	sbb    eax,0x19e01bf0
   1400418f9:	rcl    BYTE PTR [rdi],1
   1400418fb:	rcl    BYTE PTR [rip+0x13601470],0x30        # 0x153642d72
   140041902:	add    BYTE PTR [rax],al
   140041904:	mov    ah,0x53
   140041906:	add    DWORD PTR [rax],eax
   140041908:	cwde   
   140041909:	add    DWORD PTR [rbx],0x0
	...
   140041914:	add    DWORD PTR [rax],eax
   140041916:	add    BYTE PTR [rax],al
   140041918:	add    DWORD PTR [rax],eax
   14004191a:	add    BYTE PTR [rax],al
   14004191c:	and    BYTE PTR [rcx],bl
   14004191e:	add    al,0x0
   140041920:	add    BYTE PTR [rax],al
   140041922:	add    BYTE PTR [rax],al
   140041924:	or     BYTE PTR [rax+0x400004],al
   14004192a:	add    BYTE PTR [rax],al
   14004192c:	icebp  
   14004192d:	xor    DWORD PTR [rbx],eax
   14004192f:	add    BYTE PTR [rax+0x0],bl
   140041932:	add    BYTE PTR [rax],al
   140041934:	or     al,0xf8
   140041936:	add    BYTE PTR [rax],al
   140041938:	(bad)  
   140041939:	(bad)  
   14004193a:	(bad)  
   14004193b:	call   FWORD PTR [rax+rdi*8+0x0]
   14004193f:	add    BYTE PTR [rax],al
   140041941:	add    BYTE PTR [rax],al
   140041943:	add    BYTE PTR [rcx+rdi*8+0x0],bh
   140041947:	add    bh,bh
   140041949:	(bad)  
   14004194a:	(bad)  
   14004194b:	push   rcx
   14004194d:	xor    DWORD PTR [rbx],eax
   14004194f:	add    BYTE PTR [rax],al
   140041951:	add    BYTE PTR [rax],al
   140041953:	add    BYTE PTR [rax],al
   140041955:	xor    al,BYTE PTR [rbx]
   140041957:	add    BYTE PTR [rcx],al
   140041959:	add    BYTE PTR [rax],al
   14004195b:	add    BYTE PTR [rsi+0x32],cl
   14004195e:	add    eax,DWORD PTR [rax]
   140041960:	add    BYTE PTR [rax],al
   140041962:	add    BYTE PTR [rax],al
   140041964:	sbb    DWORD PTR [rip+0x1120009],ebp        # 0x141161973
   14004196a:	cmp    BYTE PTR [rax],al
   14004196c:	or     esp,eax
   14004196e:	or     eax,edx
   140041970:	(bad)  
   140041971:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143641de8
   140041978:	add    dh,BYTE PTR [rax]
   14004197a:	add    BYTE PTR [rax],al
   14004197c:	jo     0x1400419dc
   14004197e:	add    DWORD PTR [rax],eax
   140041980:	rol    BYTE PTR [rbx+0x1b20003],0x0
   140041987:	add    bh,bh
   140041989:	(bad)  
   14004198a:	(bad)  
   14004198b:	jmp    QWORD PTR [rax+0x32]
   14004198e:	add    eax,DWORD PTR [rax]
   140041990:	pushf  
   140041991:	stc    
   140041992:	add    BYTE PTR [rax],al
   140041994:	(bad)  
   140041995:	(bad)  
   140041996:	(bad)  
   140041997:	(bad)  
   140041998:	fdiv   st(2),st
   14004199a:	add    BYTE PTR [rax],al
   14004199c:	add    BYTE PTR [rax],al
   14004199e:	add    BYTE PTR [rax],al
   1400419a0:	sub    bh,bl
   1400419a2:	add    BYTE PTR [rax],al
   1400419a4:	(bad)  
   1400419a5:	(bad)  
   1400419a6:	(bad)  
   1400419a7:	inc    DWORD PTR [rcx]
   1400419a9:	sbb    al,0xb
   1400419ab:	add    BYTE PTR [rsp+rsi*2],bl
   1400419ae:	sbb    eax,DWORD PTR [rax]
   1400419b0:	sbb    al,0x64
   1400419b2:	sbb    al,BYTE PTR [rax]
   1400419b4:	sbb    al,0x54
   1400419b6:	sbb    DWORD PTR [rax],eax
   1400419b8:	sbb    al,0x34
   1400419ba:	sbb    BYTE PTR [rax],al
   1400419bc:	sbb    al,0x1
   1400419be:	(bad)  
   1400419bf:	add    BYTE PTR [rip+0x110000c0],dl        # 0x151041a85
   1400419c5:	sub    DWORD PTR [rip+0x2b742900],ecx        # 0x16b7842cb
   1400419cb:	add    BYTE PTR [rip+0x21002a64],ah        # 0x161044435
   1400419d1:	push   rsp
   1400419d2:	sub    DWORD PTR [rax],eax
   1400419d4:	sbb    eax,0x10002834
   1400419d9:	add    DWORD PTR [rax+rax*1],esp
   1400419dc:	or     eax,esi
   1400419de:	(bad)  
   1400419df:	rol    BYTE PTR [rip+0xffffffffb40000c0],1        # 0xf4041aa5
   1400419e5:	push   rbx
   1400419e6:	add    DWORD PTR [rax],eax
   1400419e8:	clc    
   1400419e9:	add    DWORD PTR [rbx],0x0
   1400419ec:	(bad)  
   1400419ed:	(bad)  
   1400419ee:	(bad)  
   1400419ef:	(bad)  
   1400419f0:	js     0x140041a24
   1400419f2:	add    eax,DWORD PTR [rax]
   1400419f4:	add    BYTE PTR [rax],al
   1400419f6:	add    BYTE PTR [rax],al
   1400419f8:	cwde   
   1400419f9:	xor    al,BYTE PTR [rbx]
   1400419fb:	add    BYTE PTR [rcx],al
   1400419fd:	add    BYTE PTR [rax],al
   1400419ff:	add    BYTE PTR [rax+0x332],bh
   140041a05:	add    BYTE PTR [rax],al
   140041a07:	add    al,bl
   140041a09:	xor    al,BYTE PTR [rbx]
   140041a0b:	add    BYTE PTR [rdi+rdi*8-0x10000],ah
   140041a12:	(bad)  
   140041a13:	jmp    rsi
   140041a15:	inc    DWORD PTR [rax]
   140041a17:	add    BYTE PTR [rax],al
   140041a19:	add    BYTE PTR [rax],al
   140041a1b:	add    BYTE PTR [rcx],dl
   140041a1d:	add    BYTE PTR [rcx],al
   140041a1f:	add    bh,bh
   140041a21:	(bad)  
   140041a22:	(bad)  
   140041a23:	call   FWORD PTR [rax]
   140041a25:	add    BYTE PTR [rcx],al
   140041a27:	add    BYTE PTR [rax],al
   140041a29:	add    BYTE PTR [rax],al
   140041a2b:	add    BYTE PTR [rdi],bh
   140041a2d:	add    BYTE PTR [rcx],al
   140041a2f:	add    bh,bh
   140041a31:	(bad)  
   140041a32:	(bad)  
   140041a33:	inc    DWORD PTR [rsi+0x0]
   140041a36:	add    DWORD PTR [rax],eax
   140041a38:	add    BYTE PTR [rax],al
   140041a3a:	add    BYTE PTR [rax],al
   140041a3c:	push   rax
   140041a3d:	add    DWORD PTR [rcx],eax
   140041a3f:	add    bh,bh
   140041a41:	(bad)  
   140041a42:	(bad)  
   140041a43:	call   QWORD PTR [rdi+0x1]
   140041a46:	add    DWORD PTR [rax],eax
   140041a48:	add    BYTE PTR [rax],al
   140041a4a:	add    BYTE PTR [rax],al
   140041a4c:	rol    DWORD PTR [rdx],0x1
   140041a4f:	add    BYTE PTR [rcx],al
   140041a51:	add    BYTE PTR [rax],al
   140041a53:	add    ch,dl
   140041a55:	add    al,BYTE PTR [rcx]
   140041a57:	add    BYTE PTR [rdx],al
   140041a59:	add    BYTE PTR [rax],al
   140041a5b:	add    BYTE PTR [rbx+0x3],cl
   140041a5e:	add    DWORD PTR [rax],eax
   140041a60:	add    DWORD PTR [rax],eax
   140041a62:	add    BYTE PTR [rax],al
   140041a64:	push   rsi
   140041a65:	add    eax,DWORD PTR [rcx]
   140041a67:	add    BYTE PTR [rax],al
   140041a69:	add    BYTE PTR [rax],al
   140041a6b:	add    BYTE PTR [rcx],dh
   140041a6d:	add    al,0x1
   140041a6f:	add    BYTE PTR [rbx],al
   140041a71:	add    BYTE PTR [rax],al
   140041a73:	add    BYTE PTR [rbx+0x4],dl
   140041a76:	add    DWORD PTR [rax],eax
   140041a78:	add    BYTE PTR [rax],al
   140041a7a:	add    BYTE PTR [rax],al
   140041a7c:	jp     0x140041a88
   140041a7e:	add    DWORD PTR [rax],eax
   140041a80:	(bad)  
   140041a81:	(bad)  
   140041a82:	(bad)  
   140041a83:	(bad)  
   140041a84:	jg     0x140041a90
   140041a86:	add    DWORD PTR [rax],eax
   140041a88:	add    BYTE PTR [rax],al
   140041a8a:	add    BYTE PTR [rax],al
   140041a8c:	mov    ecx,DWORD PTR [rbx]
   140041a8e:	add    DWORD PTR [rax],eax
   140041a90:	(bad)  
   140041a91:	(bad)  
   140041a92:	(bad)  
   140041a93:	call   QWORD PTR [rdx+0x10b]
   140041a99:	add    BYTE PTR [rax],al
   140041a9b:	add    BYTE PTR [rbp+rcx*1+0x1],cl
   140041a9f:	add    bh,bh
   140041aa1:	(bad)  
   140041aa2:	(bad)  
   140041aa3:	call   QWORD PTR [rcx+0xd]
   140041aa6:	add    DWORD PTR [rax],eax
   140041aa8:	add    BYTE PTR [rax],al
   140041aaa:	add    BYTE PTR [rax],al
   140041aac:	push   0xffffffffff00010d
   140041ab1:	(bad)  
   140041ab2:	(bad)  
   140041ab3:	call   FWORD PTR [rcx]
   140041ab5:	or     al,BYTE PTR [rdx]
   140041ab7:	add    BYTE PTR [rdx],cl
   140041ab9:	xor    al,BYTE PTR [rsi]
   140041abb:	push   rax
   140041abc:	mov    ah,0x53
   140041abe:	add    DWORD PTR [rax],eax
   140041ac0:	and    BYTE PTR [rbx+rax*1+0x5171900],al
   140041ac7:	add    BYTE PTR [rsi],cl
   140041ac9:	(bad)  
   140041aca:	or     al,al
   140041acc:	or     BYTE PTR [rax+0x7],dh
   140041acf:	(bad)  
   140041ad0:	(bad)  
   140041ad1:	xor    BYTE PTR [rax],al
   140041ad3:	add    BYTE PTR [rbx+rdx*2-0x7bdfffff],dh
   140041ada:	add    eax,DWORD PTR [rax]
   140041adc:	add    BYTE PTR [rax],al
   140041ade:	add    BYTE PTR [rax],al
   140041ae0:	add    DWORD PTR [rax],eax
   140041ae2:	add    BYTE PTR [rax],al
   140041ae4:	add    al,BYTE PTR [rax]
   140041ae6:	add    BYTE PTR [rax],al
   140041ae8:	add    DWORD PTR [rax],eax
   140041aea:	add    BYTE PTR [rax],al
   140041aec:	lock sbb al,BYTE PTR [rax+rax*1]
   140041af0:	add    BYTE PTR [rax],al
   140041af2:	add    BYTE PTR [rax],al
   140041af4:	or     BYTE PTR [rax+0x280004],al
   140041afa:	add    BYTE PTR [rax],al
   140041afc:	adc    BYTE PTR [rbx],dh
   140041afe:	add    eax,DWORD PTR [rax]
   140041b00:	cmp    BYTE PTR [rax],al
   140041b02:	add    BYTE PTR [rax],al
   140041b04:	(bad)  
   140041b05:	(bad)  
   140041b06:	(bad)  
   140041b07:	inc    DWORD PTR [rax]
   140041b09:	add    BYTE PTR [rax],al
   140041b0b:	add    BYTE PTR [rax],al
   140041b0d:	add    BYTE PTR [rax],al
   140041b0f:	add    al,dh
   140041b11:	xor    al,BYTE PTR [rbx]
   140041b13:	add    bh,bh
   140041b15:	(bad)  
   140041b16:	(bad)  
   140041b17:	inc    DWORD PTR [rax]
   140041b19:	add    BYTE PTR [rax],al
   140041b1b:	add    ah,bh
   140041b1d:	(bad)  
   140041b1e:	add    DWORD PTR [rax],eax
   140041b20:	(bad)  
   140041b21:	(bad)  
   140041b22:	(bad)  
   140041b23:	(bad)  
   140041b24:	cmp    cl,BYTE PTR [rdi]
   140041b26:	add    DWORD PTR [rax],eax
   140041b28:	add    BYTE PTR [rax],al
   140041b2a:	add    BYTE PTR [rax],al
   140041b2c:	rex.WR sgdt [rax]
   140041b30:	add    DWORD PTR [rax],eax
   140041b32:	add    BYTE PTR [rax],al
   140041b34:	xchg   BYTE PTR [rdi],cl
   140041b36:	add    DWORD PTR [rax],eax
   140041b38:	add    BYTE PTR [rax],al
   140041b3a:	add    BYTE PTR [rax],al
   140041b3c:	mov    ecx,DWORD PTR [rdi]
   140041b3e:	add    DWORD PTR [rax],eax
   140041b40:	(bad)  
   140041b41:	(bad)  
   140041b42:	(bad)  
   140041b43:	call   QWORD PTR [rax]
   140041b45:	xor    eax,DWORD PTR [rbx]
   140041b47:	add    BYTE PTR [rax],al
   140041b49:	add    BYTE PTR [rax],al
   140041b4b:	add    BYTE PTR [rip+0x2000333],bl        # 0x142041e84
   140041b51:	add    BYTE PTR [rax],al
   140041b53:	add    BYTE PTR [rdi],ah
   140041b55:	xor    eax,DWORD PTR [rbx]
   140041b57:	add    BYTE PTR [rax],al
   140041b59:	add    BYTE PTR [rax],al
   140041b5b:	add    BYTE PTR [rcx],bl
   140041b5d:	or     eax,DWORD PTR [rbx]
   140041b5f:	add    BYTE PTR [rbx],cl
   140041b61:	(bad)  
   140041b62:	(bad)  
   140041b63:	push   rax
   140041b64:	(bad)  
   140041b65:	xor    BYTE PTR [rax],al
   140041b67:	add    BYTE PTR [rbx+rdx*2-0x7bb7ffff],dh
   140041b6e:	add    eax,DWORD PTR [rax]
   140041b70:	sbb    DWORD PTR [rdx],esp
   140041b72:	add    al,BYTE PTR [rax]
   140041b74:	(bad)  
   140041b75:	add    DWORD PTR [rbp+0x0],ecx
   140041b78:	jo     0x140041bd8
   140041b7a:	add    DWORD PTR [rax],eax
   140041b7c:	rex.W test BYTE PTR [rbx],al
   140041b7f:	add    BYTE PTR [rbx+0x2],dl
	...
   140041b8a:	add    BYTE PTR [rax],al
   140041b8c:	add    al,BYTE PTR [rax]
   140041b8e:	add    BYTE PTR [rax],al
   140041b90:	add    DWORD PTR [rax],eax
   140041b92:	add    BYTE PTR [rax],al
   140041b94:	cwde   
   140041b95:	sbb    eax,DWORD PTR [rax+rax*1]
   140041b98:	add    BYTE PTR [rax],al
   140041b9a:	add    BYTE PTR [rax],al
   140041b9c:	or     BYTE PTR [rax+0x380004],al
   140041ba2:	add    BYTE PTR [rax],al
   140041ba4:	(bad)  
   140041ba5:	xor    eax,DWORD PTR [rbx]
   140041ba7:	add    BYTE PTR [rax+0x0],bl
   140041baa:	add    BYTE PTR [rax],al
   140041bac:	(bad)  
   140041bad:	(bad)  
   140041bae:	(bad)  
   140041baf:	inc    DWORD PTR [rax]
   140041bb1:	add    BYTE PTR [rax],al
   140041bb3:	add    bh,bh
   140041bb5:	(bad)  
   140041bb6:	(bad)  
   140041bb7:	inc    DWORD PTR [rax]
   140041bb9:	add    BYTE PTR [rax],al
   140041bbb:	add    BYTE PTR [rcx],al
   140041bbd:	add    BYTE PTR [rax],al
   140041bbf:	add    BYTE PTR [rdi],dh
   140041bc1:	xor    al,0x3
   140041bc3:	add    BYTE PTR [rax-0xfffef1],bh
   140041bc9:	(bad)  
   140041bca:	(bad)  
   140041bcb:	(bad)  
   140041bcc:	fimul  DWORD PTR [rdi]
   140041bce:	add    DWORD PTR [rax],eax
   140041bd0:	add    BYTE PTR [rax],al
   140041bd2:	add    BYTE PTR [rax],al
   140041bd4:	jmp    0x13f041ce8
   140041bd9:	(bad)  
   140041bda:	(bad)  
   140041bdb:	push   QWORD PTR [rdi]
   140041bdd:	xor    eax,DWORD PTR [rbx]
   140041bdf:	add    BYTE PTR [rax],al
   140041be1:	add    BYTE PTR [rax],al
   140041be3:	add    BYTE PTR [rbp+0x33],al
   140041be6:	add    eax,DWORD PTR [rax]
   140041be8:	add    DWORD PTR [rax],eax
   140041bea:	add    BYTE PTR [rax],al
   140041bec:	jne    0x140041c21
   140041bee:	add    eax,DWORD PTR [rax]
   140041bf0:	add    al,BYTE PTR [rax]
   140041bf2:	add    BYTE PTR [rax],al
   140041bf4:	stc    
   140041bf5:	xor    eax,DWORD PTR [rbx]
   140041bf7:	add    BYTE PTR [rcx],al
   140041bf9:	add    BYTE PTR [rax],al
   140041bfb:	add    BYTE PTR [rsp+rsi*1],ah
   140041bfe:	add    eax,DWORD PTR [rax]
   140041c00:	add    BYTE PTR [rax],al
   140041c02:	add    BYTE PTR [rax],al
   140041c04:	adc    DWORD PTR [rsi],ebx
   140041c06:	or     BYTE PTR [rax],al
   140041c08:	(bad)  
   140041c09:	or     al,BYTE PTR fs:[rax]
   140041c0c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140041c10:	adc    al,0x34
   140041c12:	or     BYTE PTR [rax],al
   140041c14:	(bad)  
   140041c15:	push   rdx
   140041c16:	add    dh,BYTE PTR [rax-0x4c]
   140041c19:	push   rbx
   140041c1a:	add    DWORD PTR [rax],eax
   140041c1c:	test   al,0x84
   140041c1e:	add    eax,DWORD PTR [rax]
   140041c20:	(bad)  
   140041c21:	(bad)  
   140041c22:	(bad)  
   140041c23:	dec    DWORD PTR [rdi+0x34]
   140041c26:	add    eax,DWORD PTR [rax]
   140041c28:	add    al,0x10
   140041c2a:	add    DWORD PTR [rax],eax
   140041c2c:	(bad)  
   140041c2d:	(bad)  
   140041c2e:	(bad)  
   140041c2f:	inc    DWORD PTR [rbx+0x10]
   140041c32:	add    DWORD PTR [rax],eax
   140041c34:	add    BYTE PTR [rax],al
   140041c36:	add    BYTE PTR [rax],al
   140041c38:	mov    dl,BYTE PTR [rax]
   140041c3a:	add    DWORD PTR [rax],eax
   140041c3c:	(bad)  
   140041c3d:	(bad)  
   140041c3e:	(bad)  
   140041c3f:	call   QWORD PTR [rcx]
   140041c41:	(bad)  
   140041c42:	or     BYTE PTR [rax],al
   140041c44:	(bad)  
   140041c45:	or     al,BYTE PTR fs:[rax]
   140041c48:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140041c4c:	adc    al,0x34
   140041c4e:	or     BYTE PTR [rax],al
   140041c50:	(bad)  
   140041c51:	push   rdx
   140041c52:	add    dh,BYTE PTR [rax-0x4c]
   140041c55:	push   rbx
   140041c56:	add    DWORD PTR [rax],eax
   140041c58:	rol    BYTE PTR [rbx+rax*1+0x110a800],1
   140041c5f:	add    bh,bh
   140041c61:	(bad)  
   140041c62:	(bad)  
   140041c63:	jmp    rdi
   140041c65:	adc    BYTE PTR [rcx],al
   140041c67:	add    BYTE PTR [rax],al
   140041c69:	add    BYTE PTR [rax],al
   140041c6b:	add    BYTE PTR [rsi],ch
   140041c6d:	adc    DWORD PTR [rcx],eax
   140041c6f:	add    bh,bh
   140041c71:	(bad)  
   140041c72:	(bad)  
   140041c73:	call   QWORD PTR [rcx]
   140041c75:	(bad)  
   140041c76:	or     BYTE PTR [rax],al
   140041c78:	(bad)  
   140041c79:	or     eax,DWORD PTR fs:[rax]
   140041c7c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140041c80:	adc    al,0x34
   140041c82:	or     BYTE PTR [rax],al
   140041c84:	(bad)  
   140041c85:	push   rdx
   140041c86:	add    dh,BYTE PTR [rax-0x4c]
   140041c89:	push   rbx
   140041c8a:	add    DWORD PTR [rax],eax
   140041c8c:	ror    BYTE PTR [rax-0xfffd],1
   140041c92:	(bad)  
   140041c93:	jmp    QWORD PTR [rdi+0x34]
   140041c96:	add    eax,DWORD PTR [rax]
   140041c98:	lods   al,BYTE PTR ds:[rsi]
   140041c99:	adc    DWORD PTR [rcx],eax
   140041c9b:	add    bh,bh
   140041c9d:	(bad)  
   140041c9e:	(bad)  
   140041c9f:	call   QWORD PTR [rdx+rdx*1]
   140041ca2:	add    DWORD PTR [rax],eax
   140041ca4:	add    BYTE PTR [rax],al
   140041ca6:	add    BYTE PTR [rax],al
   140041ca8:	pop    rbp
   140041ca9:	adc    al,BYTE PTR [rcx]
   140041cab:	add    bh,bh
   140041cad:	(bad)  
   140041cae:	(bad)  
   140041caf:	call   FWORD PTR [rcx]
   140041cb1:	or     al,BYTE PTR [rdx]
   140041cb3:	add    BYTE PTR [rdx],cl
   140041cb5:	xor    al,BYTE PTR [rsi]
   140041cb7:	push   rax
   140041cb8:	mov    ah,0x53
   140041cba:	add    DWORD PTR [rax],eax
   140041cbc:	clc    
   140041cbd:	mov    BYTE PTR [rbx],al
   140041cbf:	add    BYTE PTR [rcx],bl
   140041cc1:	sbb    al,0x7
   140041cc3:	add    BYTE PTR [rsp+riz*2],bl
   140041cc6:	adc    eax,0x14341800
   140041ccb:	add    BYTE PTR [rbx],cl
   140041ccd:	add    DWORD PTR [rdx],edx
   140041ccf:	add    BYTE PTR [rax+rsi*2],al
   140041cd2:	add    BYTE PTR [rax],al
   140041cd4:	mov    ah,0x53
   140041cd6:	add    DWORD PTR [rax],eax
   140041cd8:	clc    
   140041cd9:	mov    BYTE PTR [rbx],al
	...
   140041ce3:	add    BYTE PTR [rcx],al
   140041ce5:	add    BYTE PTR [rax],al
   140041ce7:	add    BYTE PTR [rcx],al
   140041ce9:	add    BYTE PTR [rax],al
   140041ceb:	add    al,dh
   140041ced:	sbb    al,0x4
   140041cef:	add    BYTE PTR [rax],al
   140041cf1:	add    BYTE PTR [rax],al
   140041cf3:	add    BYTE PTR [rax],cl
   140041cf5:	add    BYTE PTR [rax+rax*1],0x80
   140041cf9:	add    BYTE PTR [rax],al
   140041cfb:	add    BYTE PTR [rdi+0x34],bh
   140041cfe:	add    eax,DWORD PTR [rax]
   140041d00:	cmp    BYTE PTR [rax],al
   140041d02:	add    BYTE PTR [rax],al
   140041d04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140041d05:	adc    al,BYTE PTR [rcx]
   140041d07:	add    bh,bh
   140041d09:	(bad)  
   140041d0a:	(bad)  
   140041d0b:	inc    DWORD PTR [rip+0x113]        # 0x140041e24
   140041d11:	add    BYTE PTR [rax],al
   140041d13:	add    BYTE PTR [rdx],bh
   140041d15:	adc    eax,DWORD PTR [rcx]
   140041d17:	add    bh,bh
   140041d19:	(bad)  
   140041d1a:	(bad)  
   140041d1b:	(bad)  
   140041d1c:	jg     0x140041d52
   140041d1e:	add    eax,DWORD PTR [rax]
   140041d20:	add    BYTE PTR [rax],al
   140041d22:	add    BYTE PTR [rax],al
   140041d24:	mov    WORD PTR [rbx+rax*1],?
   140041d27:	add    BYTE PTR [rcx],al
   140041d29:	add    BYTE PTR [rax],al
   140041d2b:	add    BYTE PTR [rax+0x334],ah
   140041d31:	add    BYTE PTR [rax],al
   140041d33:	add    BYTE PTR [rcx],al
   140041d35:	adc    cl,BYTE PTR [rax]
   140041d37:	add    BYTE PTR [rdx],dl
   140041d39:	push   rsp
   140041d3a:	adc    al,0x0
   140041d3c:	adc    dh,BYTE PTR [rdx+rdx*1]
   140041d3f:	add    BYTE PTR [rdx],dl
   140041d41:	ror    BYTE PTR [rsi],cl
   140041d43:	ror    BYTE PTR [rax+rsi*2],0xb
   140041d47:	(bad)  
   140041d48:	sbb    DWORD PTR [rdi+rax*1],esp
   140041d4b:	add    BYTE PTR [rdx],dl
   140041d4d:	sub    eax,DWORD PTR fs:[rax]
   140041d50:	adc    dh,BYTE PTR [rdx+rbp*1]
   140041d53:	add    BYTE PTR [rdx],dl
   140041d55:	add    DWORD PTR [rsi],esp
   140041d57:	add    BYTE PTR [rbx],cl
   140041d59:	jo     0x140041d5b
   140041d5b:	add    BYTE PTR [rax+0x20000158],al
   140041d61:	add    DWORD PTR [rax],eax
   140041d63:	add    BYTE PTR [rcx],al
   140041d65:	or     al,BYTE PTR [rdx]
   140041d67:	add    BYTE PTR [rdx],cl
   140041d69:	push   rdx
   140041d6a:	(bad)  
   140041d6b:	xor    BYTE PTR [rcx],al
   140041d6d:	adc    eax,0x64150008
   140041d72:	or     BYTE PTR [rax],al
   140041d74:	adc    eax,0x15000754
   140041d79:	xor    al,0x6
   140041d7b:	add    BYTE PTR [rip+0x1c01132],dl        # 0x141c42eb3
   140041d81:	sbb    al,0xc
   140041d83:	add    BYTE PTR [rsp+riz*2],bl
   140041d86:	or     al,0x0
   140041d88:	sbb    al,0x54
   140041d8a:	or     eax,DWORD PTR [rax]
   140041d8c:	sbb    al,0x34
   140041d8e:	or     al,BYTE PTR [rax]
   140041d90:	sbb    al,0x32
   140041d92:	sbb    al,dh
   140041d94:	(bad)  
   140041d95:	loopne 0x140041dab
   140041d97:	rcl    BYTE PTR [rdx],1
   140041d99:	rcl    BYTE PTR [rax],0x70
   140041d9c:	adc    DWORD PTR [rdx],esp
   140041d9e:	or     al,BYTE PTR [rax]
   140041da0:	and    dh,BYTE PTR [rbx+rcx*1+0x0]
   140041da4:	(bad)  
   140041da5:	or     al,BYTE PTR fs:[rax]
   140041da8:	sbb    dl,BYTE PTR [rcx+rcx*1+0x0]
   140041dac:	(bad)  
   140041dad:	xor    al,0x8
   140041daf:	add    BYTE PTR [rcx],cl
   140041db1:	push   rdx
   140041db2:	add    eax,0x153b4c0
   140041db7:	add    al,dl
   140041db9:	mov    es,WORD PTR [rbx]
   140041dbb:	add    bh,bh
   140041dbd:	(bad)  
   140041dbe:	(bad)  
   140041dbf:	jmp    QWORD PTR [rdi-0x7ffffccc]
   140041dc5:	and    BYTE PTR [rcx],al
   140041dc7:	add    bh,bh
   140041dc9:	(bad)  
   140041dca:	(bad)  
   140041dcb:	(bad)  
   140041dcc:	fisub  WORD PTR [rax]
   140041dce:	add    DWORD PTR [rax],eax
   140041dd0:	add    BYTE PTR [rax],al
   140041dd2:	add    BYTE PTR [rax],al
   140041dd4:	sbb    al,0x21
   140041dd6:	add    DWORD PTR [rax],eax
   140041dd8:	(bad)  
   140041dd9:	(bad)  
   140041dda:	(bad)  
   140041ddb:	call   QWORD PTR [rcx]
   140041ddd:	sbb    DWORD PTR [rsi],eax
   140041ddf:	add    BYTE PTR [rcx],bl
   140041de1:	fs or  al,0x0
   140041de4:	adc    al,0x34
   140041de6:	or     al,BYTE PTR [rax]
   140041de8:	(bad)  
   140041de9:	jb     0x140041ded
   140041deb:	jo     0x140041da1
   140041ded:	push   rbx
   140041dee:	add    DWORD PTR [rax],eax
   140041df0:	or     BYTE PTR [rdi+0x22900003],0x1
   140041df7:	add    bh,bh
   140041df9:	(bad)  
   140041dfa:	(bad)  
   140041dfb:	(bad)  
   140041dfc:	frstor [rdx]
   140041dfe:	add    DWORD PTR [rax],eax
   140041e00:	add    BYTE PTR [rax],al
   140041e02:	add    BYTE PTR [rax],al
   140041e04:	adc    esp,DWORD PTR [rbx]
   140041e06:	add    DWORD PTR [rax],eax
   140041e08:	(bad)  
   140041e09:	(bad)  
   140041e0a:	(bad)  
   140041e0b:	call   FWORD PTR [rcx]
   140041e0d:	or     eax,DWORD PTR [rbx]
   140041e0f:	add    BYTE PTR [rbx],cl
   140041e11:	(bad)  
   140041e12:	(bad)  
   140041e13:	push   rax
   140041e14:	(bad)  
   140041e15:	xor    BYTE PTR [rax],al
   140041e17:	add    BYTE PTR [rbx+rdx*2-0x7057ffff],dh
   140041e1e:	add    eax,DWORD PTR [rax]
   140041e20:	sbb    DWORD PTR [rdx],esp
   140041e22:	add    al,BYTE PTR [rax]
   140041e24:	(bad)  
   140041e25:	add    DWORD PTR [rbp+0x0],ecx
   140041e28:	jo     0x140041e88
   140041e2a:	add    DWORD PTR [rax],eax
   140041e2c:	test   al,0x8f
   140041e2e:	add    eax,DWORD PTR [rax]
   140041e30:	push   rbx
   140041e31:	add    al,BYTE PTR [rax]
	...
   140041e3b:	add    BYTE PTR [rdx],al
   140041e3d:	add    BYTE PTR [rax],al
   140041e3f:	add    BYTE PTR [rcx],al
   140041e41:	add    BYTE PTR [rax],al
   140041e43:	add    BYTE PTR [rax+0x1e],cl
   140041e46:	add    al,0x0
   140041e48:	add    BYTE PTR [rax],al
   140041e4a:	add    BYTE PTR [rax],al
   140041e4c:	or     BYTE PTR [rax+0x380004],al
   140041e52:	add    BYTE PTR [rax],al
   140041e54:	xlat   BYTE PTR ds:[rbx]
   140041e55:	xor    al,0x3
   140041e57:	add    BYTE PTR [rax+0x0],bl
   140041e5a:	add    BYTE PTR [rax],al
   140041e5c:	(bad)  
   140041e5d:	(bad)  
   140041e5e:	(bad)  
   140041e5f:	inc    DWORD PTR [rax]
   140041e61:	add    BYTE PTR [rax],al
   140041e63:	add    bh,bh
   140041e65:	(bad)  
   140041e66:	(bad)  
   140041e67:	inc    DWORD PTR [rax]
   140041e69:	add    BYTE PTR [rax],al
   140041e6b:	add    BYTE PTR [rcx],al
   140041e6d:	add    BYTE PTR [rax],al
   140041e6f:	add    bh,dl
   140041e71:	xor    eax,0x24280003
   140041e76:	add    DWORD PTR [rax],eax
   140041e78:	(bad)  
   140041e79:	(bad)  
   140041e7a:	(bad)  
   140041e7b:	call   QWORD PTR [rsp+0x1]
   140041e7f:	add    BYTE PTR [rax],al
   140041e81:	add    BYTE PTR [rax],al
   140041e83:	add    BYTE PTR [rdx+0x24],bl
   140041e86:	add    DWORD PTR [rax],eax
   140041e88:	(bad)  
   140041e89:	(bad)  
   140041e8a:	(bad)  
   140041e8b:	call   rdi
   140041e8d:	xor    al,0x3
   140041e8f:	add    BYTE PTR [rax],al
   140041e91:	add    BYTE PTR [rax],al
   140041e93:	add    ch,ah
   140041e95:	xor    al,0x3
   140041e97:	add    BYTE PTR [rcx],al
   140041e99:	add    BYTE PTR [rax],al
   140041e9b:	add    BYTE PTR [rip+0x2000335],dl        # 0x1420421d6
   140041ea1:	add    BYTE PTR [rax],al
   140041ea3:	add    BYTE PTR [rcx+0x1000335],bl
   140041ea9:	add    BYTE PTR [rax],al
   140041eab:	add    ah,al
   140041ead:	xor    eax,0x3
   140041eb2:	add    BYTE PTR [rax],al
   140041eb4:	add    DWORD PTR [rcx+rax*1],eax
   140041eb7:	add    BYTE PTR [rdx+riz*2],al
   140041eba:	add    BYTE PTR [rax],al
   140041ebc:	adc    DWORD PTR [rcx],ebx
   140041ebe:	(bad)  
   140041ebf:	add    BYTE PTR [rcx],bl
   140041ec1:	fs or  al,0x0
   140041ec4:	adc    al,0x34
   140041ec6:	or     al,BYTE PTR [rax]
   140041ec8:	(bad)  
   140041ec9:	jb     0x140041ecd
   140041ecb:	jo     0x140041e81
   140041ecd:	push   rbx
   140041ece:	add    DWORD PTR [rax],eax
   140041ed0:	push   0x60000392
   140041ed5:	sub    eax,DWORD PTR [rcx]
   140041ed7:	add    bh,bh
   140041ed9:	(bad)  
   140041eda:	(bad)  
   140041edb:	jmp    FWORD PTR [rbp+0x12b]
   140041ee1:	add    BYTE PTR [rax],al
   140041ee3:	add    bl,ah
   140041ee5:	sub    eax,DWORD PTR [rcx]
   140041ee7:	add    bh,bh
   140041ee9:	(bad)  
   140041eea:	(bad)  
   140041eeb:	call   QWORD PTR [rcx]
   140041eed:	sbb    DWORD PTR [rsi],eax
   140041eef:	add    BYTE PTR [rcx],bl
   140041ef1:	fs or  al,0x0
   140041ef4:	adc    al,0x34
   140041ef6:	or     al,BYTE PTR [rax]
   140041ef8:	(bad)  
   140041ef9:	jb     0x140041efd
   140041efb:	jo     0x140041eb1
   140041efd:	push   rbx
   140041efe:	add    DWORD PTR [rax],eax
   140041f00:	nop
   140041f01:	xchg   edx,eax
   140041f02:	add    eax,DWORD PTR [rax]
   140041f04:	(bad)  
   140041f05:	(bad)  
   140041f06:	(bad)  
   140041f07:	(bad)  
   140041f08:	mov    edi,0xa0000334
   140041f0d:	sub    al,0x1
   140041f0f:	add    bh,bh
   140041f11:	(bad)  
   140041f12:	(bad)  
   140041f13:	(bad)  
   140041f14:	in     eax,dx
   140041f15:	sub    al,0x1
   140041f17:	add    BYTE PTR [rax],al
   140041f19:	add    BYTE PTR [rax],al
   140041f1b:	add    BYTE PTR [rbx],ah
   140041f1d:	sub    eax,0xffff0001
   140041f22:	(bad)  
   140041f23:	inc    DWORD PTR [rcx]
   140041f25:	or     al,BYTE PTR [rax+rax*1]
   140041f28:	or     dh,BYTE PTR [rcx+rcx*1]
   140041f2b:	add    BYTE PTR [rdx],cl
   140041f2d:	push   rdx
   140041f2e:	(bad)  
   140041f2f:	jo     0x140041f4a
   140041f31:	adc    eax,DWORD PTR [rcx]
   140041f33:	add    BYTE PTR [rdx+rax*4],al
   140041f36:	add    BYTE PTR [rax],al
   140041f38:	sbb    BYTE PTR [rax+0x1],0x0
   140041f3c:	cmp    BYTE PTR [rax],al
   140041f3e:	add    BYTE PTR [rax],al
   140041f40:	add    DWORD PTR [rcx],ebx
   140041f42:	or     al,BYTE PTR [rax]
   140041f44:	sbb    esp,eax
   140041f46:	or     DWORD PTR [rax],eax
   140041f48:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140041f4c:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140041f50:	sbb    DWORD PTR [rsi+rax*1],esi
   140041f53:	add    BYTE PTR [rcx],bl
   140041f55:	xor    dl,BYTE PTR [rip+0x20a19d0]        # 0x1420e392b
   140041f5b:	add    BYTE PTR [rdx],cl
   140041f5d:	xor    al,BYTE PTR [rsi]
   140041f5f:	push   rax
   140041f60:	mov    ah,0x53
   140041f62:	add    DWORD PTR [rax],eax
   140041f64:	loopne 0x140041ef8
   140041f66:	add    eax,DWORD PTR [rax]
   140041f68:	sbb    DWORD PTR [rip+0xffffffff82140005],ebx        # 0xc2181f73
   140041f6e:	adc    al,al
   140041f70:	(bad)  
   140041f71:	jo     0x140041f80
   140041f73:	(bad)  
   140041f74:	or     al,0x30
   140041f76:	add    BYTE PTR [rax],al
   140041f78:	mov    ah,0x53
   140041f7a:	add    DWORD PTR [rax],eax
   140041f7c:	loopne 0x140041f10
   140041f7e:	add    eax,DWORD PTR [rax]
   140041f80:	add    DWORD PTR [rax],eax
   140041f82:	add    BYTE PTR [rax],al
   140041f84:	add    DWORD PTR [rax],eax
   140041f86:	add    BYTE PTR [rax],al
   140041f88:	add    al,BYTE PTR [rax]
   140041f8a:	add    BYTE PTR [rax],al
   140041f8c:	add    DWORD PTR [rax],eax
   140041f8e:	add    BYTE PTR [rax],al
   140041f90:	xchg   esp,eax
   140041f91:	(bad)  
   140041f92:	add    al,0x0
   140041f94:	add    BYTE PTR [rax],al
   140041f96:	add    BYTE PTR [rax],al
   140041f98:	or     BYTE PTR [rax+0x300004],al
   140041f9e:	add    BYTE PTR [rax],al
   140041fa0:	(bad)  
   140041fa2:	add    eax,DWORD PTR [rax]
   140041fa4:	cmp    BYTE PTR [rax],al
   140041fa6:	add    BYTE PTR [rax],al
   140041fa8:	(bad)  
   140041fa9:	(bad)  
   140041faa:	(bad)  
   140041fab:	(bad)  
   140041fac:	out    dx,eax
   140041fad:	xor    eax,0xffff0003
   140041fb2:	(bad)  
   140041fb3:	inc    DWORD PTR [rax]
   140041fb5:	add    BYTE PTR [rax],al
   140041fb7:	add    bh,bh
   140041fb9:	(bad)  
   140041fba:	(bad)  
   140041fbb:	inc    DWORD PTR [rax]
   140041fbd:	add    BYTE PTR [rax],al
   140041fbf:	add    BYTE PTR [rbp+rsi*1+0x1],dh
   140041fc3:	add    bh,bh
   140041fc5:	(bad)  
   140041fc6:	(bad)  
   140041fc7:	(bad)  
   140041fc8:	mov    edx,0x135
   140041fcd:	add    BYTE PTR [rax],al
   140041fcf:	add    cl,dl
   140041fd1:	xor    eax,0xffff0001
   140041fd6:	(bad)  
   140041fd7:	(bad)  
   140041fd8:	cmp    eax,0x1000136
   140041fdd:	add    BYTE PTR [rax],al
   140041fdf:	add    BYTE PTR [rdi+0x36],bl
   140041fe2:	add    DWORD PTR [rax],eax
   140041fe4:	(bad)  
   140041fe5:	(bad)  
   140041fe6:	(bad)  
   140041fe7:	dec    DWORD PTR [rdi]
   140041fe9:	add    eax,DWORD PTR ss:[rax]
   140041fec:	add    BYTE PTR [rax],al
   140041fee:	add    BYTE PTR [rax],al
   140041ff0:	sbb    al,0x36
   140041ff2:	add    eax,DWORD PTR [rax]
   140041ff4:	add    al,BYTE PTR [rax]
   140041ff6:	add    BYTE PTR [rax],al
   140041ff8:	cmp    esi,DWORD PTR [rsi]
   140041ffa:	add    eax,DWORD PTR [rax]
   140041ffc:	add    BYTE PTR [rax],al
   140041ffe:	add    BYTE PTR [rax],al
   140042000:	adc    DWORD PTR [rsi],edx
   140042002:	(bad)  
   140042003:	add    BYTE PTR [rsi],dl
   140042005:	xor    al,0xb
   140042007:	add    BYTE PTR [rax],cl
   140042009:	push   rdx
   14004200a:	add    al,0x70
   14004200c:	add    esp,DWORD PTR [rax+0x2]
   14004200f:	push   rax
   140042010:	mov    ah,0x53
   140042012:	add    DWORD PTR [rax],eax
   140042014:	or     BYTE PTR [rbx-0xfffd],dl
   14004201a:	(bad)  
   14004201b:	dec    DWORD PTR [rbx+0x36]
   14004201e:	add    eax,DWORD PTR [rax]
   140042020:	(bad)  
   140042021:	(bad)  
   140042022:	(bad)  
   140042023:	jmp    FWORD PTR [rbx+0x36]
   140042026:	add    eax,DWORD PTR [rax]
   140042028:	nop
   140042029:	add    DWORD PTR ss:[rax],eax
   14004202c:	(bad)  
   14004202d:	(bad)  
   14004202e:	(bad)  
   14004202f:	call   rax
   140042031:	add    DWORD PTR ss:[rax],eax
   140042034:	add    BYTE PTR [rax],al
   140042036:	add    BYTE PTR [rax],al
   140042038:	in     eax,0x36
   14004203a:	add    DWORD PTR [rax],eax
   14004203c:	(bad)  
   14004203d:	(bad)  
   14004203e:	(bad)  
   14004203f:	dec    DWORD PTR [rax+0x37]
   140042042:	add    DWORD PTR [rax],eax
   140042044:	add    DWORD PTR [rax],eax
   140042046:	add    BYTE PTR [rax],al
   140042048:	pop    rdx
   140042049:	(bad)  
   14004204a:	add    DWORD PTR [rax],eax
   14004204c:	(bad)  
   14004204d:	(bad)  
   14004204e:	(bad)  
   14004204f:	inc    DWORD PTR [rcx]
   140042051:	adc    eax,0x74150008
   140042056:	or     BYTE PTR [rax],al
   140042058:	adc    eax,0x15000764
   14004205d:	xor    al,0x6
   14004205f:	add    BYTE PTR [rip+0x1c01132],dl        # 0x141c43197
   140042065:	(bad)  
   140042066:	or     al,BYTE PTR [rax]
   140042068:	(bad)  
   140042069:	push   rsp
   14004206a:	(bad)  
   14004206b:	add    BYTE PTR [rsi],dl
   14004206d:	xor    al,0xd
   14004206f:	add    BYTE PTR [rsi],dl
   140042071:	push   rdx
   140042072:	adc    ah,al
   140042074:	adc    al,dl
   140042076:	(bad)  
   140042077:	ror    BYTE PTR [rax+rsi*2],0xb
   14004207b:	(bad)  
   14004207c:	sbb    DWORD PTR [rbx],ecx
   14004207e:	add    eax,DWORD PTR [rax]
   140042080:	or     eax,DWORD PTR [rdx+0x7]
   140042083:	(bad)  
   140042084:	(bad)  
   140042085:	push   rax
   140042086:	add    BYTE PTR [rax],al
   140042088:	mov    ah,0x53
   14004208a:	add    DWORD PTR [rax],eax
   14004208c:	xor    BYTE PTR [rbx+0x17190003],dl
   140042092:	(bad)  
   140042093:	add    BYTE PTR [rdi],dl
   140042095:	xor    al,0xd
   140042097:	add    BYTE PTR [rcx],cl
   140042099:	jb     0x1400420a0
   14004209b:	rol    BYTE PTR [rbx],0x70
   14004209e:	add    ah,BYTE PTR [rax-0x4c]
   1400420a1:	push   rbx
   1400420a2:	add    DWORD PTR [rax],eax
   1400420a4:	xor    BYTE PTR [rbx+0x3],dl
   1400420aa:	add    BYTE PTR [rax],al
   1400420ac:	add    BYTE PTR [rax],al
   1400420ae:	add    BYTE PTR [rax],al
   1400420b0:	add    DWORD PTR [rax],eax
   1400420b2:	add    BYTE PTR [rax],al
   1400420b4:	add    DWORD PTR [rax],eax
   1400420b6:	add    BYTE PTR [rax],al
   1400420b8:	mov    esp,0x420
   1400420bd:	add    BYTE PTR [rax],al
   1400420bf:	add    BYTE PTR [rax],cl
   1400420c1:	add    BYTE PTR [rax+rax*1],0x30
   1400420c5:	add    BYTE PTR [rax],al
   1400420c7:	add    BYTE PTR [rbx+0x48000336],al
   1400420cd:	add    BYTE PTR [rax],al
   1400420cf:	add    al,ah
   1400420d1:	add    DWORD PTR ds:[rax],eax
   1400420d4:	(bad)  
   1400420d5:	(bad)  
   1400420d6:	(bad)  
   1400420d7:	(bad)  
   1400420d8:	(bad)  
   1400420d9:	(bad)  
   1400420da:	add    DWORD PTR [rax],eax
   1400420dc:	add    BYTE PTR [rax],al
   1400420de:	add    BYTE PTR [rax],al
   1400420e0:	xchg   ebp,eax
   1400420e1:	rex add DWORD PTR [rax],eax
   1400420e4:	(bad)  
   1400420e5:	(bad)  
   1400420e6:	(bad)  
   1400420e7:	inc    DWORD PTR [rbx+0x336]
   1400420ed:	add    BYTE PTR [rax],al
   1400420ef:	add    BYTE PTR [rcx+0x1000336],dl
   1400420f5:	add    BYTE PTR [rax],al
   1400420f7:	add    BYTE PTR [rdi+0x336],ch
   1400420fd:	add    BYTE PTR [rax],al
   1400420ff:	add    BYTE PTR [rcx],al
   140042101:	(bad)  
   140042102:	add    al,BYTE PTR [rax]
   140042104:	(bad)  
   140042105:	push   rdx
   140042106:	add    dh,BYTE PTR [rax]
   140042108:	add    DWORD PTR [rcx],ecx
   14004210a:	add    eax,DWORD PTR [rax]
   14004210c:	or     DWORD PTR [rcx],eax
   14004210e:	mov    esp,0x300200
   140042113:	add    BYTE PTR [rcx],al
   140042115:	adc    al,0x8
   140042117:	add    BYTE PTR [rsp+riz*2],dl
   14004211a:	or     al,BYTE PTR [rax]
   14004211c:	adc    al,0x54
   14004211e:	or     DWORD PTR [rax],eax
   140042120:	adc    al,0x34
   140042122:	or     BYTE PTR [rax],al
   140042124:	adc    al,0x52
   140042126:	adc    BYTE PTR [rax+0x1],dh
   140042129:	or     al,BYTE PTR [rax+rax*1]
   14004212c:	or     dl,BYTE PTR [rcx+rdx*1+0x0]
   140042130:	or     dl,dl
   140042132:	(bad)  
   140042133:	jo     0x14004214e
   140042135:	sub    DWORD PTR [rbx],ecx
   140042137:	push   rbp
   140042138:	sbb    esi,DWORD PTR [rdx+rdx*1+0x0]
   14004213c:	(bad)  
   14004213d:	adc    DWORD PTR fs:[rax],eax
   140042140:	adc    esi,DWORD PTR [rax+rdx*1]
   140042143:	add    BYTE PTR [rdi],cl
   140042145:	push   rbx
   140042146:	or     dh,BYTE PTR [rdx-0x3ffb2ffa]
   14004214c:	add    dl,BYTE PTR [rax+0x0]
   14004214f:	add    BYTE PTR [rax+0x50000158],al
   140042155:	add    BYTE PTR [rax],al
   140042157:	add    BYTE PTR [rcx],al
   140042159:	or     al,BYTE PTR [rax+rax*1]
   14004215c:	or     dh,BYTE PTR [rdx+rcx*1]
   14004215f:	add    BYTE PTR [rdx],cl
   140042161:	jb     0x140042169
   140042163:	jo     0x14004216e
   140042165:	or     al,BYTE PTR [rax+rax*1]
   140042168:	or     dh,BYTE PTR [rcx+rcx*1]
   14004216b:	add    BYTE PTR [rdx],cl
   14004216d:	push   rdx
   14004216e:	(bad)  
   14004216f:	jo     0x140042119
   140042171:	pop    rsp
   140042172:	add    DWORD PTR [rax],eax
   140042174:	add    DWORD PTR [rax],eax
   140042176:	add    BYTE PTR [rax],al
   140042178:	fist   WORD PTR [rax+0x1]
   14004217b:	add    BYTE PTR [rbx+0x51],bh
   14004217e:	add    DWORD PTR [rax],eax
   140042180:	mov    bh,0x36
   140042182:	add    eax,DWORD PTR [rax]
   140042184:	jnp    0x1400421d7
   140042186:	add    DWORD PTR [rax],eax
   140042188:	add    DWORD PTR [rsp+rcx*1],ebx
   14004218b:	add    BYTE PTR [rsp+riz*2],bl
   14004218e:	or     eax,0xc541c00
   140042193:	add    BYTE PTR [rsp+rsi*1],bl
   140042196:	or     eax,DWORD PTR [rax]
   140042198:	sbb    al,0x32
   14004219a:	sbb    al,dh
   14004219c:	(bad)  
   14004219d:	loopne 0x1400421b3
   14004219f:	rcl    BYTE PTR [rdx],1
   1400421a1:	rcl    BYTE PTR [rax],0x70
   1400421a4:	add    DWORD PTR [rax],ebx
   1400421a6:	or     al,BYTE PTR [rax]
   1400421a8:	sbb    BYTE PTR [rbx+rcx*1+0x0],ah
   1400421ac:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400421b0:	sbb    BYTE PTR [rax+rcx*1],dh
   1400421b3:	add    BYTE PTR [rax],bl
   1400421b5:	xor    dl,BYTE PTR [rax+rdx*8]
   1400421b8:	adc    al,al
   1400421ba:	adc    BYTE PTR [rax+0x1],dh
   1400421bd:	clts   
   1400421bf:	add    BYTE PTR [rdi],cl
   1400421c1:	fs or  al,0x0
   1400421c4:	sysenter 
   1400421c6:	or     eax,DWORD PTR [rax]
   1400421c8:	(bad)  
   1400421ca:	or     esi,DWORD PTR [rax+0x1]
   1400421cd:	adc    al,0x8
   1400421cf:	add    BYTE PTR [rsp+riz*2],dl
   1400421d2:	or     al,0x0
   1400421d4:	adc    al,0x54
   1400421d6:	or     eax,DWORD PTR [rax]
   1400421d8:	adc    al,0x34
   1400421da:	or     al,BYTE PTR [rax]
   1400421dc:	adc    al,0x72
   1400421de:	adc    BYTE PTR [rax+0x1],dh
   1400421e1:	(bad)  
   1400421e2:	add    al,BYTE PTR [rax]
   1400421e4:	(bad)  
   1400421e5:	jb     0x1400421e9
   1400421e7:	push   rax
   1400421e8:	or     DWORD PTR [rax],ebx
   1400421ea:	add    al,BYTE PTR [rax]
   1400421ec:	sbb    BYTE PTR [rdx+0x5ca83014],dh
   1400421f2:	add    DWORD PTR [rax],eax
   1400421f4:	add    DWORD PTR [rax],eax
   1400421f6:	add    BYTE PTR [rax],al
   1400421f8:	(bad)  
   1400421f9:	push   rbp
   1400421fa:	add    DWORD PTR [rax],eax
   1400421fc:	(bad)  
   1400421fd:	push   rbp
   1400421fe:	add    DWORD PTR [rax],eax
   140042200:	shl    DWORD PTR [rsi],cl
   140042202:	add    eax,DWORD PTR [rax]
   140042204:	(bad)  
   140042205:	push   rbp
   140042206:	add    DWORD PTR [rax],eax
   140042208:	add    DWORD PTR [rdi],edx
   14004220a:	or     DWORD PTR [rax],eax
   14004220c:	(bad)  
   14004220d:	fs mov eax,0xb7541700
   140042213:	add    BYTE PTR [rdi],dl
   140042215:	xor    al,0xb6
   140042217:	add    BYTE PTR [rdi],dl
   140042219:	add    DWORD PTR [rax+rax*1+0x7010],esi
   140042220:	add    DWORD PTR [rdx],ecx
   140042222:	add    al,0x0
   140042224:	or     dh,BYTE PTR [rdi+rcx*1]
   140042227:	add    BYTE PTR [rdx],cl
   140042229:	mov    dl,0x6
   14004222b:	jo     0x14004223e
   14004222d:	sbb    DWORD PTR [rdx],ecx
   14004222f:	add    BYTE PTR [rcx],bl
   140042231:	je     0x14004223d
   140042233:	add    BYTE PTR [rcx],bl
   140042235:	or     DWORD PTR fs:[rax],eax
   140042238:	sbb    DWORD PTR [rax+rcx*1],esi
   14004223b:	add    BYTE PTR [rcx],bl
   14004223d:	xor    dl,BYTE PTR [rip+0x11d013e0]        # 0x151d43623
   140042243:	shr    BYTE PTR [rax+0x100015c],0x0
   14004224a:	add    BYTE PTR [rax],al
   14004224c:	out    0x59,al
   14004224e:	add    DWORD PTR [rax],eax
   140042250:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140042251:	pop    rdx
   140042252:	add    DWORD PTR [rax],eax
   140042254:	(bad)  
   140042255:	(bad)  
   140042256:	add    eax,DWORD PTR [rax]
   140042258:	add    BYTE PTR [rax],al
   14004225a:	add    BYTE PTR [rax],al
   14004225c:	add    DWORD PTR [rax],esp
   14004225e:	or     al,0x0
   140042260:	and    BYTE PTR [rcx+rdx*1+0x0],ah
   140042264:	and    BYTE PTR [rax+rdx*1+0x0],dl
   140042268:	and    BYTE PTR [rsi+rcx*1],dh
   14004226b:	add    BYTE PTR [rax],ah
   14004226d:	jb     0x14004228b
   14004226f:	lock sbb ah,al
   140042272:	sbb    al,dl
   140042274:	(bad)  
   140042275:	rcl    BYTE PTR [rax+rsi*2],0x1
   140042279:	add    al,0x1
   14004227b:	add    BYTE PTR [rdx+rdx*1],al
   14004227e:	add    BYTE PTR [rax],al
   140042280:	add    DWORD PTR [rdi],ecx
   140042282:	add    DWORD PTR [rax],eax
   140042284:	punpckldq mm0,DWORD PTR [rax]
   140042287:	add    BYTE PTR [rcx],al
   140042289:	add    al,0x1
   14004228b:	add    BYTE PTR [rdx+rax*8],al
   14004228e:	add    BYTE PTR [rax],al
   140042290:	add    DWORD PTR [rdi],ecx
   140042292:	add    al,0x0
   140042294:	sysenter 
   140042296:	(bad)  
   140042297:	add    BYTE PTR [rdi],cl
   140042299:	xor    cl,BYTE PTR [rbx]
   14004229b:	jo     0x1400422ae
   14004229d:	sbb    al,0xa
   14004229f:	add    BYTE PTR [rsp+riz*2],bl
   1400422a2:	ltr    WORD PTR [rsp+rsi*1]
   1400422a6:	(bad)  
   1400422a7:	add    BYTE PTR [rdx+rsi*2],bl
   1400422aa:	sbb    al,dh
   1400422ac:	(bad)  
   1400422ad:	loopne 0x1400422c3
   1400422af:	rcl    BYTE PTR [rdx],1
   1400422b1:	rcl    BYTE PTR [rax],0x70
   1400422b4:	test   al,0x5c
   1400422b6:	add    DWORD PTR [rax],eax
   1400422b8:	add    DWORD PTR [rax],eax
   1400422ba:	add    BYTE PTR [rax],al
   1400422bc:	xchg   DWORD PTR [rax+0x1],esi
   1400422bf:	add    BYTE PTR [rax+0x2b000171],dl
   1400422c5:	(bad)  
   1400422c6:	add    eax,DWORD PTR [rax]
   1400422c8:	add    BYTE PTR [rax],al
   1400422ca:	add    BYTE PTR [rax],al
   1400422cc:	add    DWORD PTR [rdx+rax*1],ecx
   1400422cf:	add    BYTE PTR [rcx+rax*1],cl
   1400422d2:	adc    DWORD PTR [rax],eax
   1400422d4:	adc    DWORD PTR [rsi],eax
   1400422d6:	add    al,BYTE PTR [rax]
   1400422d8:	(bad)  
   1400422d9:	push   rdx
   1400422da:	add    dh,BYTE PTR [rax]
   1400422dc:	test   al,0x5c
   1400422de:	add    DWORD PTR [rax],eax
   1400422e0:	add    DWORD PTR [rax],eax
   1400422e2:	add    BYTE PTR [rax],al
   1400422e4:	jo     0x14004235a
   1400422e6:	add    DWORD PTR [rax],eax
   1400422e8:	mov    ebp,0x4d000174
   1400422ed:	(bad)  
   1400422ee:	add    eax,DWORD PTR [rax]
   1400422f0:	add    BYTE PTR [rax],al
   1400422f2:	add    BYTE PTR [rax],al
   1400422f4:	adc    DWORD PTR [rdx],ecx
   1400422f6:	add    al,0x0
   1400422f8:	or     dh,BYTE PTR [rsi+rax*1]
   1400422fb:	add    BYTE PTR [rdx],cl
   1400422fd:	xor    al,BYTE PTR [rsi]
   1400422ff:	jo     0x1400422a9
   140042301:	pop    rsp
   140042302:	add    DWORD PTR [rax],eax
   140042304:	add    al,BYTE PTR [rax]
   140042306:	add    BYTE PTR [rax],al
   140042308:	xor    dh,BYTE PTR [rsi+0x1]
   14004230b:	add    BYTE PTR [rip+0x66000176],bh        # 0x1a6042487
   140042311:	(bad)  
   140042312:	add    eax,DWORD PTR [rax]
   140042314:	add    BYTE PTR [rax],al
   140042316:	add    BYTE PTR [rax],al
   140042318:	push   rdx
   140042319:	jbe    0x14004231c
   14004231b:	add    BYTE PTR [rcx+0x76],bh
   14004231e:	add    DWORD PTR [rax],eax
   140042320:	xchg   BYTE PTR [rdi],dh
   140042322:	add    eax,DWORD PTR [rax]
   140042324:	add    BYTE PTR [rax],al
   140042326:	add    BYTE PTR [rax],al
   140042328:	adc    DWORD PTR [rbx],edx
   14004232a:	add    al,0x0
   14004232c:	adc    esi,DWORD PTR [rdi+rax*1]
   14004232f:	add    BYTE PTR [rbx],dl
   140042331:	xor    cl,BYTE PTR [rdi]
   140042333:	jo     0x1400422dd
   140042335:	pop    rsp
   140042336:	add    DWORD PTR [rax],eax
   140042338:	add    al,BYTE PTR [rax]
   14004233a:	add    BYTE PTR [rax],al
   14004233c:	(bad)  
   14004233d:	ja     0x140042340
   14004233f:	add    BYTE PTR [rax+rdi*2],al
   140042342:	add    DWORD PTR [rax],eax
   140042344:	data16 (bad) 
   140042346:	add    eax,DWORD PTR [rax]
   140042348:	add    BYTE PTR [rax],al
   14004234a:	add    BYTE PTR [rax],al
   14004234c:	sbb    DWORD PTR [rax+0x1],edi
   14004234f:	add    BYTE PTR [rax+0x78],dl
   140042352:	add    DWORD PTR [rax],eax
   140042354:	xchg   BYTE PTR [rdi],dh
   140042356:	add    eax,DWORD PTR [rax]
   140042358:	add    BYTE PTR [rax],al
   14004235a:	add    BYTE PTR [rax],al
   14004235c:	sbb    DWORD PTR [rdi+rax*1],esp
   14004235f:	add    BYTE PTR [rdx],dl
   140042361:	fs mov ah,0x0
   140042364:	adc    dh,BYTE PTR [rbx+rsi*4]
   140042367:	add    BYTE PTR [rdx],dl
   140042369:	add    DWORD PTR [rax+0x700b00],esi
   14004236f:	add    BYTE PTR [rax+0x70000158],al
   140042375:	add    eax,0xa110000
   14004237a:	add    al,0x0
   14004237c:	or     dh,BYTE PTR [rdi+rax*1]
   14004237f:	add    BYTE PTR [rdx],cl
   140042381:	xor    al,BYTE PTR [rsi]
   140042383:	jo     0x14004232d
   140042385:	pop    rsp
   140042386:	add    DWORD PTR [rax],eax
   140042388:	add    DWORD PTR [rax],eax
   14004238a:	add    BYTE PTR [rax],al
   14004238c:	stos   BYTE PTR es:[rdi],al
   14004238d:	jnp    0x140042390
   14004238f:	add    BYTE PTR [rbx],al
   140042391:	jl     0x140042394
   140042393:	add    BYTE PTR [rdi+0x337],bl
   140042399:	add    BYTE PTR [rax],al
   14004239b:	add    BYTE PTR [rcx],al
   14004239d:	(bad)  
   14004239e:	add    al,BYTE PTR [rax]
   1400423a0:	(bad)  
   1400423a1:	jb     0x1400423a5
   1400423a3:	xor    BYTE PTR [rcx],bl
   1400423a5:	(bad)  
   1400423a6:	or     BYTE PTR [rax],al
   1400423a8:	adc    BYTE PTR [rax+rdx*1],dh
   1400423ab:	add    BYTE PTR [rax],dl
   1400423ad:	jb     0x1400423bb
   1400423af:	ror    BYTE PTR [rdx],1
   1400423b1:	ror    BYTE PTR [rax],0x70
   1400423b4:	(bad)  
   1400423b5:	(bad)  
   1400423b6:	(bad)  
   1400423b7:	push   rax
   1400423b8:	sbb    BYTE PTR [rax+0x1],0x0
   1400423bc:	cmp    BYTE PTR [rax],al
   1400423be:	add    BYTE PTR [rax],al
   1400423c0:	adc    DWORD PTR [rcx],ebx
   1400423c2:	or     al,BYTE PTR [rax]
   1400423c4:	sbb    esp,eax
   1400423c6:	or     eax,DWORD PTR [rax]
   1400423c8:	sbb    DWORD PTR [rdx+rcx*1+0x0],esi
   1400423cc:	sbb    DWORD PTR [rcx+rcx*1+0x0],esp
   1400423d0:	sbb    DWORD PTR [rax+rcx*1],esi
   1400423d3:	add    BYTE PTR [rcx],bl
   1400423d5:	push   rdx
   1400423d6:	adc    eax,0x15ca8d0
   1400423db:	add    BYTE PTR [rcx],al
   1400423dd:	add    BYTE PTR [rax],al
   1400423df:	add    BYTE PTR [rcx],bl
   1400423e1:	add    BYTE PTR [rcx],0x0
   1400423e4:	rol    DWORD PTR [rax+0x379f0001],cl
   1400423ea:	add    eax,DWORD PTR [rax]
   1400423ec:	add    BYTE PTR [rax],al
   1400423ee:	add    BYTE PTR [rax],al
   1400423f0:	adc    DWORD PTR [rsi],eax
   1400423f2:	add    al,BYTE PTR [rax]
   1400423f4:	(bad)  
   1400423f5:	xor    al,BYTE PTR [rdx]
   1400423f7:	xor    BYTE PTR [rax+0x100015c],ch
   1400423fd:	add    BYTE PTR [rax],al
   1400423ff:	add    BYTE PTR [rbx-0x46fffe7c],ah
   140042405:	test   BYTE PTR [rcx],al
   140042407:	add    BYTE PTR [rax+0x337],bh
   14004240d:	add    BYTE PTR [rax],al
   14004240f:	add    BYTE PTR [rcx],al
   140042411:	(bad)  
   140042412:	add    eax,0x13621700
   140042417:	jo     0x14004242b
   140042419:	(bad)  
   14004241a:	adc    DWORD PTR [rax+0x10],edx
   14004241d:	xor    BYTE PTR [rax],al
   14004241f:	add    BYTE PTR [rcx],al
   140042421:	sbb    DWORD PTR [rdx],ecx
   140042423:	add    BYTE PTR [rcx],bl
   140042425:	je     0x140042432
   140042427:	add    BYTE PTR [rcx],bl
   140042429:	or     al,BYTE PTR fs:[rax]
   14004242c:	sbb    DWORD PTR [rcx+rcx*1+0x0],edx
   140042430:	sbb    DWORD PTR [rax+rcx*1],esi
   140042433:	add    BYTE PTR [rcx],bl
   140042435:	push   rdx
   140042436:	adc    eax,0xa1401c0
   14004243b:	add    BYTE PTR [rsp+rsi*1],dl
   14004243e:	(bad)  
   14004243f:	add    BYTE PTR [rdx+rdx*2],dl
   140042442:	adc    al,dh
   140042444:	(bad)  
   140042445:	loopne 0x140042453
   140042447:	ror    BYTE PTR [rdx],1
   140042449:	ror    BYTE PTR [rax],0x70
   14004244c:	(bad)  
   14004244d:	(bad)  
   14004244e:	(bad)  
   14004244f:	push   rax
   140042450:	sbb    DWORD PTR [rsi],esp
   140042452:	or     al,BYTE PTR [rax]
   140042454:	adc    al,0x1
   140042456:	(bad)  
   140042457:	add    BYTE PTR [rip+0x9e00bf0],cl        # 0x149e4304d
   14004245d:	rol    BYTE PTR [rdi],1
   14004245f:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436428d6
   140042466:	add    dh,BYTE PTR [rax]
   140042468:	sbb    BYTE PTR [rax+0x1],0x0
   14004246c:	loopne 0x14004246e
   14004246e:	add    BYTE PTR [rax],al
   140042470:	sbb    DWORD PTR [rcx],ebp
   140042472:	or     eax,DWORD PTR [rax]
   140042474:	(bad)  
   140042475:	xor    al,0x4d
   140042477:	add    BYTE PTR [rdi],dl
   140042479:	add    DWORD PTR [rdx+0x0],eax
   14004247c:	adc    al,dh
   14004247e:	(bad)  
   14004247f:	loopne 0x14004248d
   140042481:	ror    BYTE PTR [rdx],1
   140042483:	ror    BYTE PTR [rax],0x70
   140042486:	(bad)  
   140042487:	(bad)  
   140042488:	(bad)  
   140042489:	push   rax
   14004248a:	add    BYTE PTR [rax],al
   14004248c:	sbb    BYTE PTR [rax+0x1],0x0
   140042490:	add    BYTE PTR [rdx],al
   140042492:	add    BYTE PTR [rax],al
   140042494:	sbb    DWORD PTR [rcx+rcx*1],esp
   140042497:	add    BYTE PTR [rdx],dl
   140042499:	add    DWORD PTR [rdx],ebx
   14004249b:	add    BYTE PTR [rbx],cl
   14004249d:	loopne 0x1400424a8
   14004249f:	rol    BYTE PTR [rdi],1
   1400424a1:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143642918
   1400424a8:	add    dh,BYTE PTR [rax]
   1400424aa:	add    BYTE PTR [rax],al
   1400424ac:	sbb    BYTE PTR [rax+0x1],0x0
   1400424b0:	rol    BYTE PTR [rax],0x0
   1400424b3:	add    BYTE PTR [rcx],dl
   1400424b5:	sbb    DWORD PTR [rdx],ecx
   1400424b7:	add    BYTE PTR [rcx],bl
   1400424b9:	(bad)  
   1400424ba:	ltr    WORD PTR [rcx]
   1400424bd:	je     0x1400424cc
   1400424bf:	add    BYTE PTR [rcx],bl
   1400424c1:	fs or  al,0x0
   1400424c4:	sbb    DWORD PTR [rdx+0x15],esi
   1400424c7:	lock adc esp,eax
   1400424ca:	adc    eax,edx
   1400424cc:	test   al,0x5c
   1400424ce:	add    DWORD PTR [rax],eax
   1400424d0:	add    eax,DWORD PTR [rax]
   1400424d2:	add    BYTE PTR [rax],al
   1400424d4:	and    BYTE PTR [rcx-0x6eb4ffff],dl
   1400424da:	add    DWORD PTR [rax],eax
   1400424dc:	shl    DWORD PTR [rdi],1
   1400424de:	add    eax,DWORD PTR [rax]
   1400424e0:	add    BYTE PTR [rax],al
   1400424e2:	add    BYTE PTR [rax],al
   1400424e4:	mov    bl,0x91
   1400424e6:	add    DWORD PTR [rax],eax
   1400424e8:	jae    0x14004247c
   1400424ea:	add    DWORD PTR [rax],eax
   1400424ec:	icebp  
   1400424ed:	(bad)  
   1400424ee:	add    eax,DWORD PTR [rax]
   1400424f0:	add    BYTE PTR [rax],al
   1400424f2:	add    BYTE PTR [rax],al
   1400424f4:	cli    
   1400424f5:	nop
   1400424f6:	add    DWORD PTR [rax],eax
   1400424f8:	lea    edx,[rdx+0x38110001]
   1400424fe:	add    eax,DWORD PTR [rax]
   140042500:	add    BYTE PTR [rax],al
   140042502:	add    BYTE PTR [rax],al
   140042504:	sbb    DWORD PTR [rip+0x741f450d],ebp        # 0x1b4236a17
   14004250a:	adc    al,0x0
   14004250c:	sbb    esp,DWORD PTR [rbx+rdx*1+0x0]
   140042510:	(bad)  
   140042511:	xor    al,0x12
   140042513:	add    BYTE PTR [rbx],dl
   140042515:	rex.XB (bad) 
   140042517:	mov    dl,0xa
   140042519:	lock or al,ah
   14004251c:	(bad)  
   14004251d:	rol    BYTE PTR [rax+rax*8],1
   140042520:	add    dl,BYTE PTR [rax+0x0]
   140042523:	add    BYTE PTR [rax+0x58000158],al
   140042529:	add    BYTE PTR [rax],al
   14004252b:	add    BYTE PTR [rcx],al
   14004252d:	clts   
   14004252f:	add    BYTE PTR [rdi],cl
   140042531:	adc    DWORD PTR fs:[rax],eax
   140042534:	sysenter 
   140042536:	adc    BYTE PTR [rax],al
   140042538:	psrld  mm1,QWORD PTR [rbx]
   14004253b:	jo     0x14004253e
   14004253d:	clts   
   14004253f:	add    BYTE PTR [rdi],cl
   140042541:	adc    BYTE PTR fs:[rax],al
   140042544:	andps  xmm1,XMMWORD PTR [rdi]
   140042547:	add    BYTE PTR [rdi],cl
   140042549:	mov    dl,0xb
   14004254b:	jo     0x14004254e
   14004254d:	or     BYTE PTR [rcx],al
   14004254f:	add    BYTE PTR [rax],cl
   140042551:	rex.X add BYTE PTR [rax],al
   140042554:	add    DWORD PTR [rip+0xffffffffd4150008],edx        # 0x114192562
   14004255a:	or     eax,DWORD PTR [rax]
   14004255c:	adc    eax,0x15000a74
   140042561:	xor    al,0x8
   140042563:	add    BYTE PTR [rip+0x1e01152],dl        # 0x141e436bb
   140042569:	clts   
   14004256b:	add    BYTE PTR [rdi],cl
   14004256d:	or     eax,DWORD PTR fs:[rax]
   140042570:	sysenter 
   140042572:	or     al,BYTE PTR [rax]
   140042574:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140042577:	jo     0x14004257a
   140042579:	sbb    DWORD PTR [rdx],ecx
   14004257b:	add    BYTE PTR [rcx],bl
   14004257d:	je     0x14004258c
   14004257f:	add    BYTE PTR [rcx],bl
   140042581:	fs or  al,0x0
   140042584:	sbb    DWORD PTR [rbx+rcx*1+0x0],edx
   140042588:	sbb    DWORD PTR [rdx+rcx*1],esi
   14004258b:	add    BYTE PTR [rcx],bl
   14004258d:	jb     0x1400425a4
   14004258f:	ror    BYTE PTR [rcx],0x20
   140042592:	or     eax,0x19c42000
   140042597:	add    BYTE PTR [rax],ah
   140042599:	je     0x1400425b3
   14004259b:	add    BYTE PTR [rax],ah
   14004259d:	fs (bad) 
   14004259f:	add    BYTE PTR [rax],ah
   1400425a1:	xor    al,0x16
   1400425a3:	add    BYTE PTR [rax],ah
   1400425a5:	add    DWORD PTR [rdx],edx
   1400425a7:	add    BYTE PTR [rcx],bl
   1400425a9:	lock (bad) 
   1400425ab:	loopne 0x1400425c2
   1400425ad:	rol    BYTE PTR [rax],1
   1400425af:	add    BYTE PTR [rax+0x100015c],ch
   1400425b5:	add    BYTE PTR [rax],al
   1400425b7:	add    BYTE PTR [riz*4-0x5adfffff],dl
   1400425be:	add    DWORD PTR [rax],eax
   1400425c0:	add    DWORD PTR [rax],eax
   1400425c2:	add    BYTE PTR [rax],al
   1400425c4:	mov    esp,0x10001a7
   1400425c9:	or     al,BYTE PTR [rax+rax*1]
   1400425cc:	or     dh,BYTE PTR [rax+rcx*1]
   1400425cf:	add    BYTE PTR [rdx],cl
   1400425d1:	xor    al,BYTE PTR [rsi]
   1400425d3:	jo     0x1400425ee
   1400425d5:	and    cl,BYTE PTR [rax]
   1400425d7:	add    BYTE PTR [rdx],ah
   1400425d9:	push   rdx
   1400425da:	(bad)  
   1400425db:	lock sbb al,0xe0
   1400425de:	sbb    dl,al
   1400425e0:	sbb    al,al
   1400425e2:	(bad)  
   1400425e3:	jo     0x1400425fa
   1400425e5:	(bad)  
   1400425e6:	adc    al,0x30
   1400425e8:	test   al,0x5c
   1400425ea:	add    DWORD PTR [rax],eax
   1400425ec:	add    al,BYTE PTR [rax]
   1400425ee:	add    BYTE PTR [rax],al
   1400425f0:	jns    0x14004259e
   1400425f2:	add    DWORD PTR [rax],eax
   1400425f4:	adc    ebp,DWORD PTR [rbp+0x382b0001]
   1400425fa:	add    eax,DWORD PTR [rax]
   1400425fc:	adc    ebp,DWORD PTR [rbp-0x53beffff]
   140042602:	add    DWORD PTR [rax],eax
   140042604:	(bad)  
   140042605:	lods   eax,DWORD PTR ds:[rsi]
   140042606:	add    DWORD PTR [rax],eax
   140042608:	rex.WXB cmp BYTE PTR [r11],al
   14004260b:	add    BYTE PTR [rax],al
   14004260d:	add    BYTE PTR [rax],al
   14004260f:	add    BYTE PTR [rcx],cl
   140042611:	or     BYTE PTR [rcx],al
   140042613:	add    BYTE PTR [rax],cl
   140042615:	rex.X add BYTE PTR [rax],al
   140042618:	test   al,0x5c
   14004261a:	add    DWORD PTR [rax],eax
   14004261c:	add    DWORD PTR [rax],eax
   14004261e:	add    BYTE PTR [rax],al
   140042620:	lods   eax,DWORD PTR ds:[rsi]
   140042621:	lods   eax,DWORD PTR ds:[rsi]
   140042622:	add    DWORD PTR [rax],eax
   140042624:	shr    BYTE PTR [rbp+0x38730001],0x3
   14004262b:	add    al,al
   14004262d:	lods   eax,DWORD PTR ds:[rsi]
   14004262e:	add    DWORD PTR [rax],eax
   140042630:	add    DWORD PTR [rdi],eax
   140042632:	add    eax,DWORD PTR [rax]
   140042634:	(bad)  
   140042635:	rex.X add edx,DWORD PTR [rax+0x2]
   140042639:	xor    BYTE PTR [rax],al
   14004263b:	add    BYTE PTR [rcx],bl
   14004263d:	adc    cl,BYTE PTR [rax]
   14004263f:	add    BYTE PTR [rdx],dl
   140042641:	add    DWORD PTR [rbx],edx
   140042643:	add    BYTE PTR [rbx],cl
   140042645:	lock or eax,esp
   140042648:	(bad)  
   140042649:	rol    BYTE PTR [rip+0x27003c0],1        # 0x142742a0f
   14004264f:	xor    BYTE PTR [rax+0x200015c],ch
   140042655:	add    BYTE PTR [rax],al
   140042657:	add    BYTE PTR [rsi-0x29fffe51],ch
   14004265d:	scas   eax,DWORD PTR es:[rdi]
   14004265e:	add    DWORD PTR [rax],eax
   140042660:	mov    bh,BYTE PTR [rax]
   140042662:	add    eax,DWORD PTR [rax]
   140042664:	(bad)  
   140042665:	scas   eax,DWORD PTR es:[rdi]
   140042666:	add    DWORD PTR [rax],eax
   140042668:	scas   al,BYTE PTR es:[rdi]
   140042669:	scas   eax,DWORD PTR es:[rdi]
   14004266a:	add    DWORD PTR [rax],eax
   14004266c:	pop    rdi
   14004266d:	mov    al,0x1
   14004266f:	add    BYTE PTR [rdx+0x339],cl
   140042675:	add    BYTE PTR [rax],al
   140042677:	add    BYTE PTR [rcx],cl
   140042679:	sbb    DWORD PTR [rdx],ecx
   14004267b:	add    BYTE PTR [rcx],bl
   14004267d:	je     0x14004268b
   14004267f:	add    BYTE PTR [rcx],bl
   140042681:	or     eax,DWORD PTR fs:[rax]
   140042684:	sbb    DWORD PTR [rdx+rcx*1],esi
   140042687:	add    BYTE PTR [rcx],bl
   140042689:	push   rdx
   14004268a:	adc    eax,0x11d013e0
   14004268f:	shr    BYTE PTR [rax+0x100015c],0x0
   140042696:	add    BYTE PTR [rax],al
   140042698:	xchg   edx,eax
   140042699:	mov    cl,0x1
   14004269b:	add    BYTE PTR [rbx+rsi*4],al
   14004269e:	add    DWORD PTR [rax],eax
   1400426a0:	add    DWORD PTR [rax],eax
   1400426a2:	add    BYTE PTR [rax],al
   1400426a4:	or     BYTE PTR [rbx+0xf090001],dh
   1400426aa:	(bad)  
   1400426ab:	add    BYTE PTR [rdi],cl
   1400426ad:	fs (bad) 
   1400426af:	add    BYTE PTR [rdi],cl
   1400426b1:	xor    al,0x6
   1400426b3:	add    BYTE PTR [rdi],cl
   1400426b5:	xor    cl,BYTE PTR [rbx]
   1400426b7:	jo     0x140042661
   1400426b9:	pop    rsp
   1400426ba:	add    DWORD PTR [rax],eax
   1400426bc:	add    DWORD PTR [rax],eax
   1400426be:	add    BYTE PTR [rax],al
   1400426c0:	push   rsp
   1400426c1:	mov    bl,0x1
   1400426c3:	add    dh,al
   1400426c5:	mov    bl,0x1
   1400426c7:	add    BYTE PTR [rcx],al
   1400426c9:	add    BYTE PTR [rax],al
   1400426cb:	add    dh,al
   1400426cd:	mov    bl,0x1
   1400426cf:	add    BYTE PTR [rcx],al
   1400426d1:	(bad)  
   1400426d2:	or     al,BYTE PTR [rax]
   1400426d4:	(bad)  
   1400426d5:	push   rsp
   1400426d6:	adc    al,BYTE PTR [rax]
   1400426d8:	(bad)  
   1400426d9:	xor    al,0x10
   1400426db:	add    BYTE PTR [rdi],dl
   1400426dd:	xchg   edx,eax
   1400426de:	adc    esp,eax
   1400426e0:	adc    eax,edx
   1400426e2:	xadd   BYTE PTR [rip+0x1600c70],cl        # 0x141643359
   1400426e9:	sbb    DWORD PTR [rdx],ecx
   1400426eb:	add    BYTE PTR [rcx],bl
   1400426ed:	xor    al,0x17
   1400426ef:	add    BYTE PTR [rcx],bl
   1400426f1:	rcl    BYTE PTR [rip+0x11e013f0],cl        # 0x151e43ae7
   1400426f7:	ror    BYTE PTR [rdi],1
   1400426f9:	ror    BYTE PTR [rip+0xb600c70],0x50        # 0x14b643370
   140042700:	add    DWORD PTR [rcx],esp
   140042702:	or     eax,DWORD PTR [rax]
   140042704:	and    DWORD PTR [rdi+rbx*1],esi
   140042707:	add    BYTE PTR [rcx],ah
   140042709:	add    DWORD PTR [rax+rax*1],edx
   14004270c:	sbb    dh,al
   14004270e:	sbb    al,ah
   140042710:	(bad)  
   140042711:	rcl    BYTE PTR [rax+rax*8],1
   140042714:	adc    dh,BYTE PTR [rax+0x11]
   140042717:	(bad)  
   140042718:	adc    BYTE PTR [rax+0x0],dl
   14004271b:	add    BYTE PTR [rcx],al
   14004271d:	sbb    BYTE PTR [rdx],cl
   14004271f:	add    BYTE PTR [rax],bl
   140042721:	fs (bad) 
   140042723:	add    BYTE PTR [rax],bl
   140042725:	push   rsp
   140042726:	or     eax,0xc341800
   14004272b:	add    BYTE PTR [rax],bl
   14004272d:	jb     0x140042743
   14004272f:	loopne 0x140042743
   140042731:	rcl    BYTE PTR [rax],0x70
   140042734:	or     DWORD PTR [rcx+rax*1],eax
   140042737:	add    BYTE PTR [rdx+rax*2],al
   14004273a:	add    BYTE PTR [rax],al
   14004273c:	test   al,0x5c
   14004273e:	add    DWORD PTR [rax],eax
   140042740:	add    DWORD PTR [rax],eax
   140042742:	add    BYTE PTR [rax],al
   140042744:	movabs eax,ds:0x10001bea50001be
   14004274d:	add    BYTE PTR [rax],al
   14004274f:	add    BYTE PTR [rbp+0x90001be],ah
   140042755:	add    al,0x1
   140042757:	add    BYTE PTR [rdx+rax*2],al
   14004275a:	add    BYTE PTR [rax],al
   14004275c:	test   al,0x5c
   14004275e:	add    DWORD PTR [rax],eax
   140042760:	add    DWORD PTR [rax],eax
   140042762:	add    BYTE PTR [rax],al
   140042764:	(bad)
   140042767:	add    cl,cl
   140042769:	mov    esi,0x10001
   14004276e:	add    BYTE PTR [rax],al
   140042770:	leave  
   140042771:	mov    esi,0x18010001
   140042776:	or     al,BYTE PTR [rax]
   140042778:	sbb    BYTE PTR [rax+rdx*1+0x0],ah
   14004277c:	sbb    BYTE PTR [rdi+rcx*1+0x0],dl
   140042780:	sbb    BYTE PTR [rsi+rcx*1],dh
   140042783:	add    BYTE PTR [rax],bl
   140042785:	xchg   edx,eax
   140042786:	adc    al,0xd0
   140042788:	adc    al,al
   14004278a:	adc    BYTE PTR [rax+0x1],dh
   14004278d:	(bad)  
   14004278e:	add    al,BYTE PTR [rax]
   140042790:	(bad)  
   140042791:	add    DWORD PTR [rbp+0x9251900],esi
   140042797:	add    BYTE PTR [rbx],dl
   140042799:	add    DWORD PTR [rax],ebx
   14004279b:	add    BYTE PTR [rax+rsi*8],cl
   14004279e:	or     ah,al
   1400427a0:	or     al,dl
   1400427a2:	(bad)  
   1400427a3:	rol    BYTE PTR [rax+rsi*2],0x3
   1400427a7:	(bad)  
   1400427a8:	add    dl,BYTE PTR [rax+0x0]
   1400427ab:	add    BYTE PTR [rax-0x4ffffea8],al
   1400427b1:	add    BYTE PTR [rax],al
   1400427b3:	add    BYTE PTR [rcx],al
   1400427b5:	sbb    BYTE PTR [rdx],cl
   1400427b7:	add    BYTE PTR [rax],bl
   1400427b9:	or     al,BYTE PTR fs:[rax]
   1400427bc:	sbb    BYTE PTR [rcx+rcx*1+0x0],dl
   1400427c0:	sbb    BYTE PTR [rax+rcx*1],dh
   1400427c3:	add    BYTE PTR [rax],bl
   1400427c5:	xor    dl,BYTE PTR [rax+rdx*8]
   1400427c8:	adc    al,al
   1400427ca:	adc    BYTE PTR [rax+0x0],dh
   1400427cd:	add    BYTE PTR [rax],al
   1400427cf:	add    BYTE PTR [rcx],al
   1400427d1:	(bad)  
   1400427d2:	add    al,BYTE PTR [rax]
   1400427d4:	(bad)  
   1400427d5:	add    DWORD PTR [rbx+0x1040900],ebx
   1400427db:	add    BYTE PTR [rdx+rax*2],al
   1400427de:	add    BYTE PTR [rax],al
   1400427e0:	test   al,0x5c
   1400427e2:	add    DWORD PTR [rax],eax
   1400427e4:	add    DWORD PTR [rax],eax
   1400427e6:	add    BYTE PTR [rax],al
   1400427e8:	(bad)  
   1400427e9:	mov    DWORD PTR [rcx],0x1c76a00
   1400427ef:	add    BYTE PTR [rax],ah
   1400427f1:	cmp    al,BYTE PTR [rbx]
   1400427f3:	add    BYTE PTR [rdx-0x39],ch
   1400427f6:	add    DWORD PTR [rax],eax
   1400427f8:	add    DWORD PTR [rdi],edx
   1400427fa:	or     BYTE PTR [rax],al
   1400427fc:	(bad)  
   1400427fd:	or     DWORD PTR fs:[rax],eax
   140042800:	(bad)  
   140042801:	push   rsp
   140042802:	or     BYTE PTR [rax],al
   140042804:	(bad)  
   140042805:	xor    al,0x7
   140042807:	add    BYTE PTR [rdi],dl
   140042809:	xor    dl,BYTE PTR [rbx]
   14004280b:	jo     0x14004280e
   14004280d:	sbb    BYTE PTR [rax],cl
   14004280f:	add    BYTE PTR [rax],bl
   140042811:	or     BYTE PTR fs:[rax],al
   140042814:	sbb    BYTE PTR [rdi+rax*1+0x0],dl
   140042818:	sbb    BYTE PTR [rsi+rax*1],dh
   14004281b:	add    BYTE PTR [rax],bl
   14004281d:	xor    dl,BYTE PTR [rax+rsi*2]
   140042820:	sbb    DWORD PTR [rcx],ebp
   140042822:	or     eax,DWORD PTR [rax]
   140042824:	(bad)  
   140042825:	xor    al,0x64
   140042827:	add    BYTE PTR [rdi],dl
   140042829:	add    DWORD PTR [rdx+0x0],ebx
   14004282c:	adc    al,dh
   14004282e:	(bad)  
   14004282f:	loopne 0x14004283d
   140042831:	ror    BYTE PTR [rdx],1
   140042833:	ror    BYTE PTR [rax],0x70
   140042836:	(bad)  
   140042837:	(bad)  
   140042838:	(bad)  
   140042839:	push   rax
   14004283a:	add    BYTE PTR [rax],al
   14004283c:	sbb    BYTE PTR [rax+0x1],0x0
   140042840:	enter  0x2,0x0
   140042844:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4212856
   14004284a:	adc    DWORD PTR [rax],eax
   14004284c:	sbb    eax,0x1d001064
   140042851:	push   rsp
   140042852:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d04368d
   140042859:	xchg   edx,eax
   14004285a:	sbb    eax,esi
   14004285c:	(bad)  
   14004285d:	rcl    BYTE PTR [rip+0x61c19c0],1        # 0x146204223
   140042863:	add    BYTE PTR [rip+0x6001101],cl        # 0x14604396a
   140042869:	rol    BYTE PTR [rax+rsi*2],0x3
   14004286d:	(bad)  
   14004286e:	add    dh,BYTE PTR [rax]
   140042870:	sbb    BYTE PTR [rax+0x1],0x0
   140042874:	jo     0x140042876
   140042876:	add    BYTE PTR [rax],al
   140042878:	add    DWORD PTR [rip+0xffffffffc41d000c],ebx        # 0x10421288a
   14004287e:	adc    DWORD PTR [rax],eax
   140042880:	sbb    eax,0x1d001074
   140042885:	push   rsp
   140042886:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d0436c1
   14004288d:	xchg   edx,eax
   14004288e:	sbb    eax,esi
   140042890:	(bad)  
   140042891:	loopne 0x1400428a8
   140042893:	rol    BYTE PTR [rcx],1
   140042895:	sbb    DWORD PTR [rdx],ecx
   140042897:	add    BYTE PTR [rcx],bl
   140042899:	je     0x1400428aa
   14004289b:	add    BYTE PTR [rcx],bl
   14004289d:	fs (bad) 
   14004289f:	add    BYTE PTR [rcx],bl
   1400428a1:	push   rsp
   1400428a2:	or     eax,0xc341900
   1400428a7:	add    BYTE PTR [rcx],bl
   1400428a9:	xchg   edx,eax
   1400428aa:	adc    eax,0x51919c0
   1400428af:	add    BYTE PTR [rdx],cl
   1400428b1:	loop   0x1400428b9
   1400428b3:	rol    BYTE PTR [rax+rsi*2],0x3
   1400428b7:	(bad)  
   1400428b8:	add    dh,BYTE PTR [rax]
   1400428ba:	add    BYTE PTR [rax],al
   1400428bc:	sbb    BYTE PTR [rax+0x1],0x0
   1400428c0:	(bad)  
   1400428c1:	add    BYTE PTR [rax],al
   1400428c3:	add    BYTE PTR [rcx],bl
   1400428c5:	sbb    eax,0xf20e0006
   1400428ca:	(bad)  
   1400428cb:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143642d42
   1400428d2:	add    dh,BYTE PTR [rax]
   1400428d4:	sbb    BYTE PTR [rax+0x1],0x0
   1400428d8:	jo     0x1400428da
   1400428da:	add    BYTE PTR [rax],al
   1400428dc:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b42128ee
   1400428e2:	adc    DWORD PTR [rax],eax
   1400428e4:	sbb    eax,0x1d001064
   1400428e9:	push   rsp
   1400428ea:	ltr    WORD PTR [rip+0x1d000e34]        # 0x15d043725
   1400428f1:	xchg   edx,eax
   1400428f2:	sbb    eax,esp
   1400428f4:	(bad)  
   1400428f5:	rcl    BYTE PTR [rip+0xb2b19c0],1        # 0x14b2f42bb
   1400428fb:	add    BYTE PTR [rcx],bl
   1400428fd:	xor    al,0x5a
   1400428ff:	add    BYTE PTR [rcx],bl
   140042901:	add    DWORD PTR [rax+0x0],edx
   140042904:	adc    dh,al
   140042906:	adc    al,ah
   140042908:	(bad)  
   140042909:	ror    BYTE PTR [rax+rax*8],1
   14004290c:	or     dh,BYTE PTR [rax+0x9]
   14004290f:	(bad)  
   140042910:	or     BYTE PTR [rax+0x0],dl
   140042913:	add    BYTE PTR [rax+0x70000158],al
   140042919:	add    al,BYTE PTR [rax]
   14004291b:	add    BYTE PTR [rcx],dl
   14004291d:	adc    eax,0x74150008
   140042922:	or     BYTE PTR [rax],al
   140042924:	adc    eax,0x15000764
   140042929:	xor    al,0x6
   14004292b:	add    BYTE PTR [rip+0xffffffffa8d01132],dl        # 0xe8d43a63
   140042931:	pop    rsp
   140042932:	add    DWORD PTR [rax],eax
   140042934:	add    DWORD PTR [rax],eax
   140042936:	add    BYTE PTR [rax],al
   140042938:	fild   WORD PTR [rsi]
   14004293a:	add    al,BYTE PTR [rax]
   14004293c:	(bad)  
   14004293d:	(bad)  
   14004293e:	add    al,BYTE PTR [rax]
   140042940:	cmp    al,BYTE PTR [r11]
   140042943:	add    BYTE PTR [rax],al
   140042945:	add    BYTE PTR [rax],al
   140042947:	add    BYTE PTR [rcx],dl
   140042949:	(bad)  
   14004294a:	or     al,BYTE PTR [rax]
   14004294c:	(bad)  
   14004294d:	adc    BYTE PTR fs:[rax],al
   140042950:	(bad)  
   140042951:	xor    al,0xf
   140042953:	add    BYTE PTR [rdi],dl
   140042955:	jb     0x14004296a
   140042957:	lock adc eax,esp
   14004295a:	(bad)  
   14004295c:	or     eax,0xa8700bc0
   140042961:	pop    rsp
   140042962:	add    DWORD PTR [rax],eax
   140042964:	add    DWORD PTR [rax],eax
   140042966:	add    BYTE PTR [rax],al
   140042968:	xor    BYTE PTR [rcx],cl
   14004296a:	add    al,BYTE PTR [rax]
   14004296c:	ret    
   14004296d:	or     DWORD PTR [rdx],eax
   14004296f:	add    BYTE PTR [rbp+0x3a],bl
   140042972:	add    eax,DWORD PTR [rax]
   140042974:	add    BYTE PTR [rax],al
   140042976:	add    BYTE PTR [rax],al
   140042978:	or     DWORD PTR [rcx+rax*1],eax
   14004297b:	add    BYTE PTR [rdx+riz*2],al
   14004297e:	add    BYTE PTR [rax],al
   140042980:	test   al,0x5c
   140042982:	add    DWORD PTR [rax],eax
   140042984:	add    DWORD PTR [rax],eax
   140042986:	add    BYTE PTR [rax],al
   140042988:	cmp    al,0xa
   14004298a:	add    al,BYTE PTR [rax]
   14004298c:	rex.WXB or al,BYTE PTR [r10]
   14004298f:	add    al,dh
   140042991:	add    rax,QWORD PTR [r8]
   140042994:	rex.WXB or al,BYTE PTR [r10]
   140042997:	add    BYTE PTR [rcx],bl
   140042999:	xor    DWORD PTR [rip+0x10742335],ecx        # 0x150784cd4
   14004299f:	add    BYTE PTR [rdi],bl
   1400429a1:	ltr    WORD PTR fs:[rbx]
   1400429a5:	xor    al,0xe
   1400429a7:	add    BYTE PTR [rdi],dl
   1400429a9:	xor    edx,DWORD PTR [rdx]
   1400429ab:	jb     0x1400429bb
   1400429ad:	lock or al,0xe0
   1400429b0:	or     dl,al
   1400429b2:	or     al,al
   1400429b4:	(bad)  
   1400429b5:	push   rax
   1400429b6:	add    BYTE PTR [rax],al
   1400429b8:	sbb    BYTE PTR [rax+0x1],0x0
   1400429bc:	cmp    BYTE PTR [rax],al
   1400429be:	add    BYTE PTR [rax],al
   1400429c0:	add    DWORD PTR [rdi],ecx
   1400429c2:	(bad)  
   1400429c3:	add    BYTE PTR [rdi],cl
   1400429c5:	str    WORD PTR fs:[rdi]
   1400429c9:	xor    al,0xe
   1400429cb:	add    BYTE PTR [rdi],cl
   1400429cd:	mov    dl,0xb
   1400429cf:	jo     0x1400429d2
   1400429d1:	sbb    al,0xc
   1400429d3:	add    BYTE PTR [rsp+riz*2],bl
   1400429d6:	adc    BYTE PTR [rax],al
   1400429d8:	sbb    al,0x54
   1400429da:	ltr    WORD PTR [rsp+rsi*1]
   1400429de:	(bad)  
   1400429df:	add    BYTE PTR [rdx+rsi*2],bl
   1400429e2:	sbb    al,dh
   1400429e4:	(bad)  
   1400429e5:	loopne 0x1400429fb
   1400429e7:	rcl    BYTE PTR [rdx],1
   1400429e9:	rcl    BYTE PTR [rax],0x70
   1400429ec:	add    DWORD PTR [rsi],ecx
   1400429ee:	add    al,BYTE PTR [rax]
   1400429f0:	(bad)  
   1400429f1:	xor    cl,BYTE PTR [rdx]
   1400429f3:	xor    BYTE PTR [rcx],al
   1400429f5:	sbb    eax,0x741d000c
   1400429fa:	ltr    WORD PTR [rip+0x1d000e64]        # 0x15d043865
   140042a01:	push   rsp
   140042a02:	or     eax,0xc341d00
   140042a07:	add    BYTE PTR [rip+0x17e01972],bl        # 0x157e4437f
   140042a0d:	rcl    BYTE PTR [rip+0xd3119c0],1        # 0x14d3543d3
   140042a13:	add    BYTE PTR [rdi],bl
   140042a15:	sbb    eax,DWORD PTR fs:[rax]
   140042a18:	(bad)  
   140042a19:	push   rsp
   140042a1a:	sbb    al,BYTE PTR [rax]
   140042a1c:	(bad)  
   140042a1d:	xor    al,0x19
   140042a1f:	add    BYTE PTR [rdi],bl
   140042a21:	add    DWORD PTR [rdx],edx
   140042a23:	add    BYTE PTR [rax],bl
   140042a25:	lock (bad) 
   140042a27:	loopne 0x140042a3d
   140042a29:	rcl    BYTE PTR [rdx],1
   140042a2b:	rcl    BYTE PTR [rax],0x70
   140042a2e:	add    BYTE PTR [rax],al
   140042a30:	sbb    BYTE PTR [rax+0x1],0x0
   140042a34:	mov    BYTE PTR [rax],al
   140042a36:	add    BYTE PTR [rax],al
   140042a38:	add    DWORD PTR [rip+0x741d000c],ebx        # 0x1b4212a4a
   140042a3e:	or     eax,DWORD PTR [rax]
   140042a40:	sbb    eax,0x1d000a64
   140042a45:	push   rsp
   140042a46:	or     DWORD PTR [rax],eax
   140042a48:	sbb    eax,0x1d000834
   140042a4d:	xor    bl,BYTE PTR [rcx]
   140042a4f:	loopne 0x140042a68
   140042a51:	rcl    BYTE PTR [rip+0x41919c0],1        # 0x1441d4417
   140042a57:	add    BYTE PTR [rdx],cl
   140042a59:	xor    al,0xa
   140042a5b:	add    BYTE PTR [rdx],cl
   140042a5d:	push   rdx
   140042a5e:	(bad)  
   140042a5f:	jo     0x1400429e1
   140042a61:	pop    rax
   140042a62:	add    DWORD PTR [rax],eax
   140042a64:	sub    BYTE PTR [rax],al
   140042a66:	add    BYTE PTR [rax],al
   140042a68:	sbb    DWORD PTR [rdi+rax*1],esp
   140042a6b:	add    BYTE PTR [rdx],dl
   140042a6d:	sbb    al,BYTE PTR fs:[rax]
   140042a70:	adc    dh,BYTE PTR [rcx+rbx*1]
   140042a73:	add    BYTE PTR [rdx],dl
   140042a75:	add    DWORD PTR [rsi],edx
   140042a77:	add    BYTE PTR [rbx],cl
   140042a79:	jo     0x140042a7b
   140042a7b:	add    BYTE PTR [rax-0x5ffffea8],al
   140042a81:	add    BYTE PTR [rax],al
   140042a83:	add    BYTE PTR [rcx],bl
   140042a85:	and    DWORD PTR [rdi],eax
   140042a87:	add    BYTE PTR [rdi],cl
   140042a89:	xor    al,0x1b
   140042a8b:	add    BYTE PTR [rdi],cl
   140042a8d:	add    DWORD PTR [rsi],edx
   140042a8f:	add    BYTE PTR [rax],cl
   140042a91:	jo     0x140042a9a
   140042a93:	(bad)  
   140042a94:	(bad)  
   140042a95:	push   rax
   140042a96:	add    BYTE PTR [rax],al
   140042a98:	sbb    BYTE PTR [rax+0x1],0x0
   140042a9c:	movabs al,ds:0x1200072419000000
   140042aa5:	push   rsp
   140042aa6:	sbb    al,BYTE PTR [rax]
   140042aa8:	adc    dh,BYTE PTR [rcx+rbx*1]
   140042aab:	add    BYTE PTR [rdx],dl
   140042aad:	add    DWORD PTR [rsi],edx
   140042aaf:	add    BYTE PTR [rbx],cl
   140042ab1:	jo     0x140042ab3
   140042ab3:	add    BYTE PTR [rax-0x5ffffea8],al
   140042ab9:	add    BYTE PTR [rax],al
   140042abb:	add    BYTE PTR [rcx],bl
   140042abd:	(bad)  
   140042abe:	add    eax,0x19340d00
   140042ac3:	add    BYTE PTR [rip+0x6001601],cl        # 0x1460440ca
   140042ac9:	jo     0x140042acb
   140042acb:	add    BYTE PTR [rax-0x5ffffea8],al
   140042ad1:	add    BYTE PTR [rax],al
   140042ad3:	add    BYTE PTR [rcx],bl
   140042ad5:	adc    eax,DWORD PTR [rcx]
   140042ad7:	add    BYTE PTR [rdx+riz*2],al
   140042ada:	add    BYTE PTR [rax],al
   140042adc:	sbb    BYTE PTR [rax+0x1],0x0
   140042ae0:	and    BYTE PTR [rax],al
   140042ae2:	add    BYTE PTR [rax],al
   140042ae4:	sbb    DWORD PTR [rbx],edx
   140042ae6:	add    DWORD PTR [rax],eax
   140042ae8:	add    al,0x62
   140042aea:	add    BYTE PTR [rax],al
   140042aec:	sbb    BYTE PTR [rax+0x1],0x0
   140042af0:	sub    BYTE PTR [rax],al
   140042af2:	add    BYTE PTR [rax],al
   140042af4:	sbb    DWORD PTR [rdi],esp
   140042af6:	or     eax,DWORD PTR [rbp+0x19]
   140042af9:	rex.XB adc al,0x1
   140042afc:	adc    DWORD PTR [rax],eax
   140042afe:	or     eax,0x9e00bf0
   140042b03:	rol    BYTE PTR [rdi],1
   140042b05:	rol    BYTE PTR [rip+0x3600470],0x30        # 0x143642f7c
   140042b0c:	add    dl,BYTE PTR [rax+0x0]
   140042b0f:	add    BYTE PTR [rax+0x70000158],al
   140042b15:	add    BYTE PTR [rax],al
   140042b17:	add    BYTE PTR [rcx],al
   140042b19:	(bad)  
   140042b1a:	or     al,BYTE PTR [rax]
   140042b1c:	(bad)  
   140042b1d:	push   rsp
   140042b1e:	lldt   WORD PTR [rsi]
   140042b21:	xor    al,0xe
   140042b23:	add    BYTE PTR [rsi],dl
   140042b25:	jb     0x140042b39
   140042b27:	loopne 0x140042b39
   140042b29:	ror    BYTE PTR [rsi],1
   140042b2b:	ror    BYTE PTR [rax+rsi*2],0xb
   140042b2f:	(bad)  
   140042b30:	add    DWORD PTR [rcx+rax*1],eax
   140042b33:	add    BYTE PTR [rdx+rax*2],al
   140042b36:	add    BYTE PTR [rax],al
   140042b38:	add    DWORD PTR [rdi],ecx
   140042b3a:	(bad)  
   140042b3b:	add    BYTE PTR [rdi],cl
   140042b3d:	or     eax,DWORD PTR fs:[rax]
   140042b40:	sysenter 
   140042b42:	or     al,BYTE PTR [rax]
   140042b44:	(bad)  
   140042b46:	or     esi,DWORD PTR [rax+0x19]
   140042b49:	sub    eax,0x741f450d
   140042b4e:	adc    al,BYTE PTR [rax]
   140042b50:	sbb    esp,DWORD PTR [rcx+rdx*1+0x0]
   140042b54:	(bad)  
   140042b55:	xor    al,0x10
   140042b57:	add    BYTE PTR [rbx],dl
   140042b59:	rex.XB (bad) 
   140042b5b:	xchg   edx,eax
   140042b5c:	or     dh,al
   140042b5e:	or     al,ah
   140042b60:	(bad)  
   140042b61:	rol    BYTE PTR [rax+rax*8],1
   140042b64:	add    dl,BYTE PTR [rax+0x0]
   140042b67:	add    BYTE PTR [rax+0x40000158],al
   140042b6d:	add    BYTE PTR [rax],al
   140042b6f:	add    BYTE PTR [rcx],dl
   140042b71:	sbb    ecx,DWORD PTR [rdx]
   140042b73:	add    BYTE PTR [rbx],bl
   140042b75:	fs (bad) 
   140042b77:	add    BYTE PTR [rbx],bl
   140042b79:	xor    al,0xd
   140042b7b:	add    BYTE PTR [rbx],bl
   140042b7d:	push   rdx
   140042b7e:	(bad)  
   140042b7f:	lock adc eax,0x11d013e0
   140042b85:	ror    BYTE PTR [rdi],0x70
   140042b88:	test   al,0x5c
   140042b8a:	add    DWORD PTR [rax],eax
   140042b8c:	add    DWORD PTR [rax],eax
   140042b8e:	add    BYTE PTR [rax],al
   140042b90:	xchg   BYTE PTR [rbx],bh
   140042b92:	add    al,BYTE PTR [rax]
   140042b94:	mov    ecx,0x7900023b
   140042b99:	cmp    al,BYTE PTR [rbx]
   140042b9b:	add    BYTE PTR [rax],al
   140042b9d:	add    BYTE PTR [rax],al
   140042b9f:	add    BYTE PTR [rcx],bl
   140042ba1:	(bad)  
   140042ba2:	or     eax,DWORD PTR [rax]
   140042ba4:	sbb    eax,0x1d037134
   140042ba9:	add    DWORD PTR [rsi+0x3],esp
   140042bac:	adc    al,dh
   140042bae:	(bad)  
   140042baf:	loopne 0x140042bbd
   140042bb1:	ror    BYTE PTR [rdx],1
   140042bb3:	ror    BYTE PTR [rax],0x70
   140042bb6:	(bad)  
   140042bb7:	(bad)  
   140042bb8:	(bad)  
   140042bb9:	push   rax
   140042bba:	add    BYTE PTR [rax],al
   140042bbc:	sbb    BYTE PTR [rax+0x1],0x0
   140042bc0:	and    BYTE PTR [rbx],bl
   140042bc2:	add    BYTE PTR [rax],al
   140042bc4:	adc    DWORD PTR [rbx],ebx
   140042bc6:	or     al,BYTE PTR [rax]
   140042bc8:	sbb    esp,DWORD PTR [rsi+rcx*1+0x0]
   140042bcc:	sbb    esi,DWORD PTR [rcx*1+0x17521b00]
   140042bd3:	lock adc eax,0x11d013e0
   140042bd9:	ror    BYTE PTR [rdi],0x70
   140042bdc:	test   al,0x5c
   140042bde:	add    DWORD PTR [rax],eax
   140042be0:	add    DWORD PTR [rax],eax
   140042be2:	add    BYTE PTR [rax],al
   140042be4:	sbb    al,0x44
   140042be6:	add    al,BYTE PTR [rax]
   140042be8:	rex.WRB
   140042be9:	add    r8b,BYTE PTR [rax]
   140042bec:	jns    0x140042c28
   140042bee:	add    eax,DWORD PTR [rax]
   140042bf0:	add    BYTE PTR [rax],al
   140042bf2:	add    BYTE PTR [rax],al
   140042bf4:	add    DWORD PTR [rdx],edx
   140042bf6:	(bad)  
   140042bf7:	add    BYTE PTR [rdx],dl
   140042bf9:	xor    al,0x10
   140042bfb:	add    BYTE PTR [rdx],dl
   140042bfd:	mov    dl,0xe
   140042bff:	jo     0x140042c0e
   140042c01:	(bad)  
   140042c02:	or     al,0x50
   140042c04:	sbb    DWORD PTR [rsp+rax*1],ebx
   140042c07:	add    BYTE PTR [rip+0xd001434],cl        # 0x14d044041
   140042c0d:	repnz (bad) 
   140042c0f:	jo     0x140042b91
   140042c11:	pop    rax
   140042c12:	add    DWORD PTR [rax],eax
   140042c14:	js     0x140042c16
   140042c16:	add    BYTE PTR [rax],al
   140042c18:	add    DWORD PTR [rdx],ecx
   140042c1a:	add    al,0x0
   140042c1c:	or     dh,BYTE PTR [rdx+rax*1+0x0]
   140042c20:	add    eax,0x19000134
   140042c25:	sbb    al,BYTE PTR [rax+rax*1]
   140042c28:	or     esi,edx
   140042c2a:	add    al,0x70
   140042c2c:	add    esp,DWORD PTR [rax+0x2]
   140042c2f:	xor    BYTE PTR [rax+0x70000158],al
   140042c35:	add    BYTE PTR [rax],al
   140042c37:	add    BYTE PTR [rcx],al
   140042c39:	clts   
   140042c3b:	add    BYTE PTR [rdi],cl
   140042c3d:	or     DWORD PTR fs:[rax],eax
   140042c40:	sysenter 
   140042c42:	or     BYTE PTR [rax],al
   140042c44:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140042c47:	jo     0x140042c4a
   140042c49:	adc    al,0x8
   140042c4b:	add    BYTE PTR [rsp+riz*2],dl
   140042c4e:	(bad)  
   140042c4f:	add    BYTE PTR [rsp+rdx*2],dl
   140042c52:	or     eax,0xc341400
   140042c57:	add    BYTE PTR [rdx+rdx*4],dl
   140042c5a:	adc    BYTE PTR [rax+0x11],dh
   140042c5d:	sbb    DWORD PTR [rdx],ecx
   140042c5f:	add    BYTE PTR [rcx],bl
   140042c61:	(bad)  
   140042c62:	or     DWORD PTR [rax],eax
   140042c64:	sbb    DWORD PTR [rax+rcx*1+0x0],esi
   140042c68:	sbb    DWORD PTR [rdi+rax*1+0x0],esp
   140042c6c:	sbb    DWORD PTR [rsi+rax*1],esi
   140042c6f:	add    BYTE PTR [rcx],bl
   140042c71:	xor    dl,BYTE PTR [rip+0x15ca8d0]        # 0x14160d547
   140042c77:	add    BYTE PTR [rcx],al
   140042c79:	add    BYTE PTR [rax],al
   140042c7b:	add    BYTE PTR [rbx],bl
   140042c7d:	push   rdi
   140042c7e:	add    al,BYTE PTR [rax]
   140042c80:	cmp    edx,DWORD PTR [rdi+0x2]
   140042c83:	add    BYTE PTR [rax+0x33a],dl
   140042c89:	add    BYTE PTR [rax],al
   140042c8b:	add    BYTE PTR [rcx],bl
   140042c8d:	adc    eax,DWORD PTR [rcx]
   140042c8f:	add    BYTE PTR [rdx+rax*8],al
   140042c92:	add    BYTE PTR [rax],al
   140042c94:	sbb    BYTE PTR [rax+0x1],0x0
   140042c98:	push   rax
   140042c99:	add    BYTE PTR [rax],al
   140042c9b:	add    BYTE PTR [rcx],dl
   140042c9d:	adc    BYTE PTR [rsi],al
   140042c9f:	add    BYTE PTR [rax],dl
   140042ca1:	or     DWORD PTR fs:[rax],eax
   140042ca4:	adc    BYTE PTR [rax+rcx*1],dh
   140042ca7:	add    BYTE PTR [rax],dl
   140042ca9:	push   rdx
   140042caa:	or     al,0xc0
   140042cac:	test   al,0x5c
   140042cae:	add    DWORD PTR [rax],eax
   140042cb0:	add    DWORD PTR [rax],eax
   140042cb2:	add    BYTE PTR [rax],al
   140042cb4:	iret   
   140042cb5:	pop    rax
   140042cb6:	add    al,BYTE PTR [rax]
   140042cb8:	rex.RXB pop r9
   140042cba:	add    al,BYTE PTR [rax]
   140042cbc:	test   eax,0x33a
   140042cc1:	add    BYTE PTR [rax],al
   140042cc3:	add    BYTE PTR [rcx],dl
   140042cc5:	sbb    DWORD PTR [rdx],ecx
   140042cc7:	add    BYTE PTR [rcx],bl
   140042cc9:	(bad)  
   140042cca:	or     al,0x0
   140042ccc:	sbb    DWORD PTR [rbx+rcx*1+0x0],esi
   140042cd0:	sbb    DWORD PTR [rdx+rcx*1+0x0],esp
   140042cd4:	sbb    DWORD PTR [rdx+0x15],edx
   140042cd7:	lock adc esp,eax
   140042cda:	adc    eax,edx
   140042cdc:	test   al,0x5c
   140042cde:	add    DWORD PTR [rax],eax
   140042ce0:	add    al,BYTE PTR [rax]
   140042ce2:	add    BYTE PTR [rax],al
   140042ce4:	mov    ebx,DWORD PTR [rdx+0x2]
   140042ce7:	add    cl,dl
   140042ce9:	pop    rdx
   140042cea:	add    al,BYTE PTR [rax]
   140042cec:	ret    0x33a
   140042cef:	add    BYTE PTR [rax],al
   140042cf1:	add    BYTE PTR [rax],al
   140042cf3:	add    BYTE PTR [rdx+0x5a],dl
   140042cf6:	add    al,BYTE PTR [rax]
   140042cf8:	out    dx,al
   140042cf9:	pop    rdx
   140042cfa:	add    al,BYTE PTR [rax]
   140042cfc:	repnz cmp al,BYTE PTR [rbx]
   140042cff:	add    BYTE PTR [rax],al
   140042d01:	add    BYTE PTR [rax],al
   140042d03:	add    BYTE PTR [rcx],al
   140042d05:	adc    BYTE PTR [rsi],al
   140042d07:	add    BYTE PTR [rax],dl
   140042d09:	je     0x140042d12
   140042d0b:	add    BYTE PTR [rax],dl
   140042d0d:	xor    al,0x6
   140042d0f:	add    BYTE PTR [rax],dl
   140042d11:	xor    cl,BYTE PTR [rax+rax*8]
   140042d14:	add    DWORD PTR [rcx],ecx
   140042d16:	add    al,BYTE PTR [rax]
   140042d18:	or     DWORD PTR [rdx],esi
   140042d1a:	add    eax,0x8140130
   140042d1f:	add    BYTE PTR [rdx+rsi*2],dl
   140042d22:	adc    al,dh
   140042d24:	(bad)  
   140042d25:	loopne 0x140042d33
   140042d27:	ror    BYTE PTR [rdx],1
   140042d29:	ror    BYTE PTR [rax],0x70
   140042d2c:	(bad)  
   140042d2d:	(bad)  
   140042d2e:	(bad)  
   140042d2f:	xor    BYTE PTR [rcx],bl
   140042d31:	sub    ecx,DWORD PTR [rbx]
   140042d33:	add    BYTE PTR [rcx],bl
   140042d35:	xor    al,0x20
   140042d37:	add    BYTE PTR [rcx],bl
   140042d39:	add    DWORD PTR [rsi],edx
   140042d3b:	add    BYTE PTR [rdx],dl
   140042d3d:	lock adc al,ah
   140042d40:	(bad)  
   140042d41:	ror    BYTE PTR [rax+rax*8],1
   140042d44:	or     dh,BYTE PTR [rax+0x9]
   140042d47:	(bad)  
   140042d48:	or     BYTE PTR [rax+0x0],dl
   140042d4b:	add    BYTE PTR [rax-0x5ffffea8],al
   140042d51:	add    BYTE PTR [rax],al
   140042d53:	add    BYTE PTR [rcx],bl
   140042d55:	sub    ecx,DWORD PTR [rbx]
   140042d57:	add    BYTE PTR [rcx],bl
   140042d59:	xor    al,0x1f
   140042d5b:	add    BYTE PTR [rcx],bl
   140042d5d:	add    DWORD PTR [rsi],edx
   140042d5f:	add    BYTE PTR [rdx],dl
   140042d61:	lock adc al,ah
   140042d64:	(bad)  
   140042d65:	ror    BYTE PTR [rax+rax*8],1
   140042d68:	or     dh,BYTE PTR [rax+0x9]
   140042d6b:	(bad)  
   140042d6c:	or     BYTE PTR [rax+0x0],dl
   140042d6f:	add    BYTE PTR [rax-0x5ffffea8],al
   140042d75:	add    BYTE PTR [rax],al
   140042d77:	add    BYTE PTR [rcx],al
   140042d79:	sbb    DWORD PTR [rcx],ecx
   140042d7b:	add    BYTE PTR [rcx],bl
   140042d7d:	movabs ds:0xc00fd011e013f015,al
   140042d86:	or     eax,0xb600c70
   140042d8b:	push   rax
   140042d8c:	or     dh,BYTE PTR [rax]
   140042d8e:	add    BYTE PTR [rax],al
   140042d90:	adc    DWORD PTR [rbx],ebx
   140042d92:	or     al,BYTE PTR [rax]
   140042d94:	sbb    esp,DWORD PTR [rsi+rcx*1+0x0]
   140042d98:	sbb    esi,DWORD PTR [rcx*1+0x17521b00]
   140042d9f:	lock adc eax,0x11d013e0
   140042da5:	ror    BYTE PTR [rdi],0x70
   140042da8:	test   al,0x5c
   140042daa:	add    DWORD PTR [rax],eax
   140042dac:	add    DWORD PTR [rax],eax
   140042dae:	add    BYTE PTR [rax],al
   140042db0:	adc    al,0x85
   140042db2:	add    al,BYTE PTR [rax]
   140042db4:	rex.RX test DWORD PTR [rdx],r8d
   140042db7:	add    BYTE PTR [rcx+0x3a],bh
   140042dba:	add    eax,DWORD PTR [rax]
   140042dbc:	add    BYTE PTR [rax],al
   140042dbe:	add    BYTE PTR [rax],al
   140042dc0:	adc    DWORD PTR [rdi],ecx
   140042dc2:	add    al,0x0
   140042dc4:	sysenter 
   140042dc6:	or     DWORD PTR [rax],eax
   140042dc8:	rsqrtps xmm1,XMMWORD PTR [rbx]
   140042dcb:	jo     0x140042d75
   140042dcd:	pop    rsp
   140042dce:	add    DWORD PTR [rax],eax
   140042dd0:	add    DWORD PTR [rax],eax
   140042dd2:	add    BYTE PTR [rax],al
   140042dd4:	out    dx,eax
   140042dd5:	xchg   BYTE PTR [rdx],al
   140042dd7:	add    cl,bh
   140042dd9:	xchg   BYTE PTR [rdx],al
   140042ddb:	add    BYTE PTR [rbx],cl
   140042ddd:	cmp    eax,DWORD PTR [rbx]
   140042ddf:	add    BYTE PTR [rax],al
   140042de1:	add    BYTE PTR [rax],al
   140042de3:	add    BYTE PTR [rcx],dl
   140042de5:	adc    DWORD PTR [rsi],eax
   140042de7:	add    BYTE PTR [rcx],dl
   140042de9:	xor    al,0xc
   140042deb:	add    BYTE PTR [rcx],dl
   140042ded:	push   rdx
   140042dee:	or     eax,0xa700bc0
   140042df3:	(bad)  
   140042df4:	test   al,0x5c
   140042df6:	add    DWORD PTR [rax],eax
   140042df8:	add    DWORD PTR [rax],eax
   140042dfa:	add    BYTE PTR [rax],al
   140042dfc:	movabs ds:0x23000287e7000287,eax
   140042e05:	cmp    eax,DWORD PTR [rbx]
   140042e07:	add    BYTE PTR [rax],al
   140042e09:	add    BYTE PTR [rax],al
   140042e0b:	add    BYTE PTR [rcx],bl
   140042e0d:	and    DWORD PTR [rax],ecx
   140042e0f:	add    BYTE PTR [rdx],dl
   140042e11:	push   rsp
   140042e12:	or     DWORD PTR [rax],eax
   140042e14:	adc    dh,BYTE PTR [rax+rcx*1]
   140042e17:	add    BYTE PTR [rdx],dl
   140042e19:	xor    cl,BYTE PTR [rsi]
   140042e1b:	ror    BYTE PTR [rax+rsi*2],1
   140042e1e:	or     esp,DWORD PTR [rax-0x80]
   140042e21:	pop    rax
   140042e22:	add    DWORD PTR [rax],eax
   140042e24:	adc    BYTE PTR [rax],al
   140042e26:	add    BYTE PTR [rax],al
   140042e28:	adc    DWORD PTR [rdi],edx
   140042e2a:	or     BYTE PTR [rax],al
   140042e2c:	(bad)  
   140042e2d:	fs or  eax,0xc341700
   140042e33:	add    BYTE PTR [rdi],dl
   140042e35:	push   rdx
   140042e36:	adc    edx,eax
   140042e38:	adc    eax,eax
   140042e3a:	pshufw mm5,QWORD PTR [rax+0x100015c],0x0
   140042e42:	add    BYTE PTR [rax],al
   140042e44:	stos   DWORD PTR es:[rdi],eax
   140042e45:	mov    eax,DWORD PTR [rdx]
   140042e47:	add    al,dl
   140042e49:	mov    eax,DWORD PTR [rdx]
   140042e4b:	add    BYTE PTR [rbx],ah
   140042e4d:	cmp    eax,DWORD PTR [rbx]
   140042e4f:	add    BYTE PTR [rax],al
   140042e51:	add    BYTE PTR [rax],al
   140042e53:	add    bh,bh
   140042e55:	(bad)  
   140042e56:	(bad)  
   140042e57:	inc    DWORD PTR [rax+0x3b]
   140042e5a:	add    eax,DWORD PTR [rax]
   140042e5c:	add    BYTE PTR [rax],al
   140042e5e:	add    BYTE PTR [rax],al
   140042e60:	(bad)  
   140042e61:	cmp    eax,DWORD PTR [rbx]
   140042e63:	add    BYTE PTR [rcx],al
   140042e65:	add    BYTE PTR [rax],al
   140042e67:	add    BYTE PTR [rax+0x200033b],al
   140042e6d:	add    BYTE PTR [rax],al
   140042e6f:	add    BYTE PTR [rax+0x300033b],ah
   140042e75:	add    BYTE PTR [rax],al
   140042e77:	add    al,al
   140042e79:	cmp    eax,DWORD PTR [rbx]
   140042e7b:	add    BYTE PTR [rcx],dl
   140042e7d:	adc    al,BYTE PTR [rcx]
   140042e7f:	add    BYTE PTR [rcx],cl
   140042e81:	(bad)  
   140042e82:	add    BYTE PTR [rax],al
   140042e84:	mov    ah,0x53
   140042e86:	add    DWORD PTR [rax],eax
   140042e88:	sar    BYTE PTR [rsi+0x6010003],0x2
   140042e8f:	add    BYTE PTR [rsi],al
   140042e91:	xor    al,BYTE PTR [rdx]
   140042e93:	push   rax
   140042e94:	add    DWORD PTR [rsi],eax
   140042e96:	add    al,BYTE PTR [rax]
   140042e98:	(bad)  
   140042e99:	xor    al,BYTE PTR [rdx]
   140042e9b:	push   rax
   140042e9c:	add    DWORD PTR [rsi],eax
   140042e9e:	add    al,BYTE PTR [rax]
   140042ea0:	(bad)  
   140042ea1:	xor    al,BYTE PTR [rdx]
   140042ea3:	push   rax
   140042ea4:	add    DWORD PTR [rsi],eax
   140042ea6:	add    al,BYTE PTR [rax]
   140042ea8:	(bad)  
   140042ea9:	xor    al,BYTE PTR [rdx]
   140042eab:	push   rax
   140042eac:	add    DWORD PTR [rsi],eax
   140042eae:	add    al,BYTE PTR [rax]
   140042eb0:	(bad)  
   140042eb1:	xor    al,BYTE PTR [rdx]
   140042eb3:	push   rax
   140042eb4:	push   rax
   140042eb5:	mov    WORD PTR [rdx],es
   140042eb7:	add    bh,bh
   140042eb9:	(bad)  
   140042eba:	(bad)  
   140042ebb:	jmp    FWORD PTR [rbp-0x74]
   140042ebe:	add    al,BYTE PTR [rax]
   140042ec0:	add    BYTE PTR [rax],al
   140042ec2:	add    BYTE PTR [rax],al
   140042ec4:	xchg   edx,eax
   140042ec5:	mov    WORD PTR [rdx],es
   140042ec7:	add    BYTE PTR [rcx],al
   140042ec9:	add    BYTE PTR [rax],al
   140042ecb:	add    BYTE PTR [rbx+0x200028c],ch
   140042ed1:	add    BYTE PTR [rax],al
   140042ed3:	add    ah,al
   140042ed5:	mov    WORD PTR [rdx],es
   140042ed7:	add    BYTE PTR [rbx],al
   140042ed9:	add    BYTE PTR [rax],al
   140042edb:	add    ch,bl
   140042edd:	mov    WORD PTR [rdx],es
   140042edf:	add    BYTE PTR [rax+rax*1],al
   140042ee2:	add    BYTE PTR [rax],al
   140042ee4:	out    dx,eax
   140042ee5:	mov    WORD PTR [rdx],es
   140042ee7:	add    bh,bh
   140042ee9:	(bad)  
   140042eea:	(bad)  
   140042eeb:	(bad)  
   140042eec:	(bad)  
   140042eed:	(bad)  
   140042eee:	(bad)  
   140042eef:	push   rax
   140042ef1:	cmp    eax,DWORD PTR [rbx]
   140042ef3:	add    BYTE PTR [rax],al
   140042ef5:	add    BYTE PTR [rax],al
   140042ef7:	add    BYTE PTR [rax],ah
   140042ef9:	cmp    al,0x3
   140042efb:	add    BYTE PTR [rcx],al
   140042efd:	add    BYTE PTR [rax],al
   140042eff:	add    BYTE PTR [rax+0x3c],al
   140042f02:	add    eax,DWORD PTR [rax]
   140042f04:	add    al,BYTE PTR [rax]
   140042f06:	add    BYTE PTR [rax],al
   140042f08:	(bad)  
   140042f09:	cmp    al,0x3
   140042f0b:	add    BYTE PTR [rdx],al
   140042f0d:	add    BYTE PTR [rax],al
   140042f0f:	add    BYTE PTR [rax+0x400033c],al
   140042f15:	add    BYTE PTR [rax],al
   140042f17:	add    BYTE PTR [rax+0x500033c],ah
   140042f1d:	add    BYTE PTR [rax],al
   140042f1f:	add    al,al
   140042f21:	cmp    al,0x3
   140042f23:	add    BYTE PTR [rsi],al
   140042f25:	add    BYTE PTR [rax],al
   140042f27:	add    al,ah
   140042f29:	cmp    al,0x3
   140042f2b:	add    BYTE PTR [rcx],bl
   140042f2d:	xor    al,BYTE PTR [rip+0xffffffffae011400]        # 0xee054333
   140042f33:	add    BYTE PTR [rip+0xb600c70],cl        # 0x14b643ba9
   140042f39:	xor    BYTE PTR [rax],al
   140042f3b:	add    BYTE PTR [rax+0x5e],dh
   140042f3e:	add    DWORD PTR [rax],eax
   140042f40:	call   0x1aa043303
   140042f45:	add    eax,0x6010000
   140042f4a:	add    al,BYTE PTR [rax]
   140042f4c:	(bad)  
   140042f4d:	xor    al,BYTE PTR [rdx]
   140042f4f:	push   rax
   140042f50:	add    DWORD PTR [rsi],eax
   140042f52:	add    al,BYTE PTR [rax]
   140042f54:	(bad)  
   140042f55:	xor    al,BYTE PTR [rdx]
   140042f57:	push   rax
   140042f58:	add    DWORD PTR [rsi],eax
   140042f5a:	add    al,BYTE PTR [rax]
   140042f5c:	(bad)  
   140042f5d:	xor    al,BYTE PTR [rdx]
   140042f5f:	push   rax
   140042f60:	add    DWORD PTR [rsi],eax
   140042f62:	add    al,BYTE PTR [rax]
   140042f64:	(bad)  
   140042f65:	xor    al,BYTE PTR [rdx]
   140042f67:	push   rax
   140042f68:	add    DWORD PTR [rsi],eax
   140042f6a:	add    al,BYTE PTR [rax]
   140042f6c:	(bad)  
   140042f6d:	xor    al,BYTE PTR [rdx]
   140042f6f:	push   rax
   140042f70:	add    DWORD PTR [rsi],eax
   140042f72:	add    al,BYTE PTR [rax]
   140042f74:	(bad)  
   140042f75:	xor    al,BYTE PTR [rdx]
   140042f77:	push   rax
   140042f78:	add    DWORD PTR [rsi],eax
   140042f7a:	add    al,BYTE PTR [rax]
   140042f7c:	(bad)  
   140042f7d:	xor    al,BYTE PTR [rdx]
   140042f7f:	push   rax
   140042f80:	add    DWORD PTR [rsi],eax
   140042f82:	add    al,BYTE PTR [rax]
   140042f84:	(bad)  
   140042f85:	xor    al,BYTE PTR [rdx]
   140042f87:	push   rax
   140042f88:	add    BYTE PTR [rbp-0xfffe],cl
   140042f8e:	(bad)  
   140042f8f:	jmp    QWORD PTR [rbx+0x28d]
   140042f95:	add    BYTE PTR [rax],al
   140042f97:	add    cl,al
   140042f99:	lea    eax,[rdx]
   140042f9b:	add    bh,bh
   140042f9d:	(bad)  
   140042f9e:	(bad)  
   140042f9f:	call   rsi
   140042fa1:	lea    eax,[rdx]
   140042fa3:	add    BYTE PTR [rcx],al
   140042fa5:	add    BYTE PTR [rax],al
   140042fa7:	add    BYTE PTR [rdx+0x200028e],ah
   140042fad:	add    BYTE PTR [rax],al
   140042faf:	add    BYTE PTR [rdi+0x300028e],dh
   140042fb5:	add    BYTE PTR [rax],al
   140042fb7:	add    cl,bl
   140042fb9:	mov    es,WORD PTR [rdx]
   140042fbb:	add    BYTE PTR [rdx],al
   140042fbd:	add    BYTE PTR [rax],al
   140042fbf:	add    BYTE PTR [rdx+0x400028f],dh
   140042fc5:	add    BYTE PTR [rax],al
   140042fc7:	add    bh,cl
   140042fc9:	pop    QWORD PTR [rdx]
   140042fcb:	add    BYTE PTR [rip+0xe000000],al        # 0x14e042fd1
   140042fd1:	nop
   140042fd2:	add    al,BYTE PTR [rax]
   140042fd4:	(bad)  
   140042fd5:	add    BYTE PTR [rax],al
   140042fd7:	add    BYTE PTR [rax],ch
   140042fd9:	nop
   140042fda:	add    al,BYTE PTR [rax]
   140042fdc:	(bad)  
   140042fdd:	add    BYTE PTR [rax],al
   140042fdf:	add    BYTE PTR [rbx+0x6000290],ch
   140042fe5:	add    BYTE PTR [rax],al
   140042fe7:	add    BYTE PTR [rsi+0x5000290],dh
   140042fed:	add    BYTE PTR [rax],al
   140042fef:	add    ah,al
   140042ff1:	nop
   140042ff2:	add    al,BYTE PTR [rax]
   140042ff4:	add    al,0x0
   140042ff6:	add    BYTE PTR [rax],al
   140042ff8:	rcl    BYTE PTR [rax+0x20002],cl
   140042ffe:	add    BYTE PTR [rax],al
   140043000:	loopne 0x140042f92
   140043002:	add    al,BYTE PTR [rax]
   140043004:	add    DWORD PTR [rax],eax
   140043006:	add    BYTE PTR [rax],al
   140043008:	out    dx,al
   140043009:	nop
   14004300a:	add    al,BYTE PTR [rax]
   14004300c:	add    BYTE PTR [rax],al
   14004300e:	add    BYTE PTR [rax],al
   140043010:	(bad)  
   140043011:	(bad)  
   140043012:	(bad)  
   140043013:	inc    DWORD PTR [rax]
   140043015:	cmp    eax,0x3
   14004301a:	add    BYTE PTR [rax],al
   14004301c:	and    BYTE PTR [rip+0x10003],bh        # 0x140053025
   140043022:	add    BYTE PTR [rax],al
   140043024:	rex cmp eax,0x10003
   14004302a:	add    BYTE PTR [rax],al
   14004302c:	(bad)  
   14004302d:	cmp    eax,0x2f190003
   140043032:	add    al,BYTE PTR [rax]
   140043034:	adc    DWORD PTR [rcx],eax
   140043036:	add    BYTE PTR [r8+0x5e],r14b
   14004303a:	add    DWORD PTR [rax],eax
   14004303c:	adc    BYTE PTR [rdi+0x21a0003],bh
   140043042:	add    BYTE PTR [rax],al
   140043044:	add    DWORD PTR [rsi],eax
   140043046:	add    al,BYTE PTR [rax]
   140043048:	(bad)  
   140043049:	xor    al,BYTE PTR [rdx]
   14004304b:	push   rax
   14004304c:	add    DWORD PTR [rsi],eax
   14004304e:	add    al,BYTE PTR [rax]
   140043050:	(bad)  
   140043051:	xor    al,BYTE PTR [rdx]
   140043053:	push   rax
   140043054:	add    DWORD PTR [rsi],eax
   140043056:	add    al,BYTE PTR [rax]
   140043058:	(bad)  
   140043059:	xor    al,BYTE PTR [rdx]
   14004305b:	push   rax
   14004305c:	add    DWORD PTR [rsi],eax
   14004305e:	add    al,BYTE PTR [rax]
   140043060:	(bad)  
   140043061:	xor    al,BYTE PTR [rdx]
   140043063:	push   rax
   140043064:	xor    BYTE PTR [rcx-0xfffe],dl
   14004306a:	(bad)  
   14004306b:	call   FWORD PTR [rdi-0x6f]
   14004306e:	add    al,BYTE PTR [rax]
   140043070:	add    BYTE PTR [rax],al
   140043072:	add    BYTE PTR [rax],al
   140043074:	ret    
   140043075:	xchg   ecx,eax
   140043076:	add    al,BYTE PTR [rax]
   140043078:	(bad)  
   140043079:	(bad)  
   14004307a:	(bad)  
   14004307b:	(bad)  
   14004307c:	fcom   QWORD PTR [rcx+0x2]
   140043082:	add    BYTE PTR [rax],al
   140043084:	out    0x91,eax
   140043086:	add    al,BYTE PTR [rax]
   140043088:	add    DWORD PTR [rax],eax
   14004308a:	add    BYTE PTR [rax],al
   14004308c:	xchg   esp,eax
   14004308d:	xchg   edx,eax
   14004308e:	add    al,BYTE PTR [rax]
   140043090:	add    al,BYTE PTR [rax]
   140043092:	add    BYTE PTR [rax],al
   140043094:	jrcxz  0x140043028
   140043096:	add    al,BYTE PTR [rax]
   140043098:	add    DWORD PTR [rax],eax
   14004309a:	add    BYTE PTR [rax],al
   14004309c:	sbb    al,0x93
   14004309e:	add    al,BYTE PTR [rax]
   1400430a0:	add    eax,DWORD PTR [rax]
   1400430a2:	add    BYTE PTR [rax],al
   1400430a4:	(bad)  
   1400430a5:	xchg   ebx,eax
   1400430a6:	add    al,BYTE PTR [rax]
   1400430a8:	add    DWORD PTR [rax],eax
   1400430aa:	add    BYTE PTR [rax],al
   1400430ac:	gs xchg ebx,eax
   1400430ae:	add    al,BYTE PTR [rax]
   1400430b0:	add    BYTE PTR [rax],al
   1400430b2:	add    BYTE PTR [rax],al
   1400430b4:	jo     0x140043049
   1400430b6:	add    al,BYTE PTR [rax]
   1400430b8:	(bad)  
   1400430b9:	(bad)  
   1400430ba:	(bad)  
   1400430bb:	dec    DWORD PTR [rcx+0x1000293]
   1400430c1:	add    BYTE PTR [rax],al
   1400430c3:	add    BYTE PTR [rbx+0x295],dl
   1400430c9:	add    BYTE PTR [rax],al
   1400430cb:	add    BYTE PTR [rsi-0xfffd6b],bl
   1400430d1:	(bad)  
   1400430d2:	(bad)  
   1400430d3:	push   QWORD PTR [rbp+rdx*4+0x10002]
   1400430da:	add    BYTE PTR [rax],al
   1400430dc:	mov    edi,0x295
   1400430e1:	add    BYTE PTR [rax],al
   1400430e3:	add    dl,cl
   1400430e5:	xchg   ebp,eax
   1400430e6:	add    al,BYTE PTR [rax]
   1400430e8:	(bad)  
   1400430e9:	(bad)  
   1400430ea:	(bad)  
   1400430eb:	inc    DWORD PTR [rcx]
   1400430ed:	or     DWORD PTR [rcx],eax
   1400430ef:	add    BYTE PTR [rcx],cl
   1400430f1:	rex.X add BYTE PTR [rax],al
   1400430f4:	adc    DWORD PTR [rdi],edx
   1400430f6:	add    DWORD PTR [rax],eax
   1400430f8:	(bad)  
   1400430f9:	(bad)  
   1400430fa:	add    BYTE PTR [rax],al
   1400430fc:	mov    ah,0x53
   1400430fe:	add    DWORD PTR [rax],eax
   140043100:	or     al,al
   140043102:	add    eax,DWORD PTR [rax]
   140043104:	adc    BYTE PTR [rsi-0xfffe],0xff
   14004310b:	jmp    QWORD PTR [rdi+0x296]
   140043111:	add    BYTE PTR [rax],al
   140043113:	add    bh,cl
   140043115:	xchg   esi,eax
   140043116:	add    al,BYTE PTR [rax]
   140043118:	(bad)  
   140043119:	(bad)  
   14004311a:	(bad)  
   14004311b:	inc    DWORD PTR [rcx]
   14004311d:	(bad)  
   14004311e:	add    DWORD PTR [rax],eax
   140043120:	(bad)  
   140043121:	and    al,BYTE PTR [rax]
   140043123:	add    BYTE PTR [rcx],al
   140043125:	(bad)  
   140043126:	add    DWORD PTR [rax],eax
   140043128:	(bad)  
   140043129:	rex.X add BYTE PTR [rax],al
   14004312c:	adc    DWORD PTR [rdx],edx
   14004312e:	add    DWORD PTR [rax],eax
   140043130:	or     DWORD PTR [rdx+0x0],esp
   140043133:	add    BYTE PTR [rbx+rdx*2-0x3fcfffff],dh
   14004313a:	add    eax,DWORD PTR [rax]
   14004313c:	(bad)  
   14004313d:	(bad)  
   14004313e:	(bad)  
   14004313f:	jmp    rax
   140043141:	add    eax,DWORD PTR [r8]
   140043144:	loopne 0x1400430dd
   140043146:	add    al,BYTE PTR [rax]
   140043148:	(bad)  
   140043149:	(bad)  
   14004314a:	(bad)  
   14004314b:	inc    DWORD PTR [rcx]
   14004314d:	cwde   
   14004314e:	add    al,BYTE PTR [rax]
   140043150:	add    BYTE PTR [rax],al
   140043152:	add    BYTE PTR [rax],al
   140043154:	adc    BYTE PTR [rax-0xfffe],bl
   14004315a:	(bad)  
   14004315b:	inc    DWORD PTR [rcx]
   14004315d:	or     eax,0x420d0001
   140043162:	add    BYTE PTR [rax],al
   140043164:	(bad)  
   140043165:	(bad)  
   140043166:	(bad)  
   140043167:	inc    DWORD PTR [rax+0x1100033d]
   14004316d:	adc    al,BYTE PTR [rcx]
   14004316f:	add    BYTE PTR [rcx],cl
   140043171:	(bad)  
   140043172:	add    BYTE PTR [rax],al
   140043174:	mov    ah,0x53
   140043176:	add    DWORD PTR [rax],eax
   140043178:	add    cl,0x3
   14004317b:	add    BYTE PTR [rcx],al
   14004317d:	(bad)  
   14004317e:	add    al,BYTE PTR [rax]
   140043180:	(bad)  
   140043181:	xor    al,BYTE PTR [rdx]
   140043183:	push   rax
   140043184:	add    BYTE PTR [rcx-0xfffe],bl
   14004318a:	(bad)  
   14004318b:	call   FWORD PTR [rip+0x299]        # 0x14004342a
   140043191:	add    BYTE PTR [rax],al
   140043193:	add    BYTE PTR [rcx-0x67],dl
   140043196:	add    al,BYTE PTR [rax]
   140043198:	(bad)  
   140043199:	(bad)  
   14004319a:	(bad)  
   14004319b:	(bad)  
   14004319c:	(bad)  
   14004319d:	(bad)  
   14004319e:	(bad)  
   14004319f:	inc    DWORD PTR [rax]
   1400431a1:	add    eax,DWORD PTR ds:[rax]
   1400431a4:	add    BYTE PTR [rax],al
   1400431a6:	add    BYTE PTR [rax],al
   1400431a8:	movabs al,ds:0xc00000000100033d
   1400431b1:	cmp    eax,0x20003
   1400431b6:	add    BYTE PTR [rax],al
   1400431b8:	loopne 0x1400431f7
   1400431ba:	add    eax,DWORD PTR [rax]
   1400431bc:	sbb    DWORD PTR [rax],esi
   1400431be:	add    eax,DWORD PTR [rax]
   1400431c0:	adc    al,BYTE PTR [rcx]
   1400431c2:	pop    rax
   1400431c3:	add    BYTE PTR [rbx],cl
   1400431c5:	jo     0x1400431c7
   1400431c7:	add    BYTE PTR [rax+0x5e],dh
   1400431ca:	add    DWORD PTR [rax],eax
   1400431cc:	test   al,0xc1
   1400431ce:	add    eax,DWORD PTR [rax]
   1400431d0:	mov    dl,0x2
   1400431d2:	add    BYTE PTR [rax],al
   1400431d4:	add    DWORD PTR [rsi],eax
   1400431d6:	add    al,BYTE PTR [rax]
   1400431d8:	(bad)  
   1400431d9:	xor    al,BYTE PTR [rdx]
   1400431db:	push   rax
   1400431dc:	add    DWORD PTR [rsi],eax
   1400431de:	add    al,BYTE PTR [rax]
   1400431e0:	(bad)  
   1400431e1:	xor    al,BYTE PTR [rdx]
   1400431e3:	push   rax
   1400431e4:	add    DWORD PTR [rsi],eax
   1400431e6:	add    al,BYTE PTR [rax]
   1400431e8:	(bad)  
   1400431e9:	xor    al,BYTE PTR [rdx]
   1400431eb:	push   rax
   1400431ec:	add    DWORD PTR [rsi],eax
   1400431ee:	add    al,BYTE PTR [rax]
   1400431f0:	(bad)  
   1400431f1:	xor    al,BYTE PTR [rdx]
   1400431f3:	push   rax
   1400431f4:	jo     0x14004318f
   1400431f6:	add    al,BYTE PTR [rax]
   1400431f8:	(bad)  
   1400431f9:	(bad)  
   1400431fa:	(bad)  
   1400431fb:	inc    eax
   1400431fd:	cdq    
   1400431fe:	add    al,BYTE PTR [rax]
   140043200:	add    DWORD PTR [rax],eax
   140043202:	add    BYTE PTR [rax],al
   140043204:	adc    DWORD PTR [rdx+0x20002],ebx
   14004320a:	add    BYTE PTR [rax],al
   14004320c:	sub    BYTE PTR [rdx+0x30002],bl
   140043212:	add    BYTE PTR [rax],al
   140043214:	xchg   edx,eax
   140043215:	(bad)  
   140043216:	add    al,BYTE PTR [rax]
   140043218:	add    al,BYTE PTR [rax]
   14004321a:	add    BYTE PTR [rax],al
   14004321c:	popf   
   14004321d:	(bad)  
   14004321e:	add    al,BYTE PTR [rax]
   140043220:	add    DWORD PTR [rax],eax
   140043222:	add    BYTE PTR [rax],al
   140043224:	stos   DWORD PTR es:[rdi],eax
   140043225:	(bad)  
   140043226:	add    al,BYTE PTR [rax]
   140043228:	add    BYTE PTR [rax],al
   14004322a:	add    BYTE PTR [rax],al
   14004322c:	(bad)  
   14004322d:	(bad)  
   14004322e:	(bad)  
   14004322f:	inc    DWORD PTR [rax+0x3e]
   140043232:	add    eax,DWORD PTR [rax]
   140043234:	add    BYTE PTR [rax],al
   140043236:	add    BYTE PTR [rax],al
   140043238:	(bad)  
   140043239:	add    eax,DWORD PTR ds:[rax]
   14004323c:	sbb    DWORD PTR [rdi],ebp
   14004323e:	add    al,BYTE PTR [rax]
   140043240:	adc    DWORD PTR [rcx],eax
   140043242:	(bad)  
   140043243:	add    BYTE PTR [rax+0x5e],dh
   140043246:	add    DWORD PTR [rax],eax
   140043248:	rol    cl,1
   14004324a:	add    eax,DWORD PTR [rax]
   14004324c:	(bad)  
   14004324e:	add    BYTE PTR [rax],al
   140043250:	add    DWORD PTR [rsi],eax
   140043252:	add    al,BYTE PTR [rax]
   140043254:	(bad)  
   140043255:	xor    al,BYTE PTR [rdx]
   140043257:	push   rax
   140043258:	add    DWORD PTR [rsi],eax
   14004325a:	add    al,BYTE PTR [rax]
   14004325c:	(bad)  
   14004325d:	xor    al,BYTE PTR [rdx]
   14004325f:	push   rax
   140043260:	loopne 0x1400431fc
   140043262:	add    al,BYTE PTR [rax]
   140043264:	(bad)  
   140043265:	(bad)  
   140043266:	(bad)  
   140043267:	dec    DWORD PTR [rdi]
   140043269:	fwait
   14004326a:	add    al,BYTE PTR [rax]
   14004326c:	add    BYTE PTR [rax],al
   14004326e:	add    BYTE PTR [rax],al
   140043270:	movsxd ebx,DWORD PTR [rbx-0xfffe]
   140043276:	(bad)  
   140043277:	(bad)  
   140043278:	jl     0x140043215
   14004327a:	add    al,BYTE PTR [rax]
   14004327c:	add    BYTE PTR [rax],al
   14004327e:	add    BYTE PTR [rax],al
   140043280:	xchg   DWORD PTR [rbx+0x10002],ebx
   140043286:	add    BYTE PTR [rax],al
   140043288:	rex.W pushf 
   14004328a:	add    al,BYTE PTR [rax]
   14004328c:	add    BYTE PTR [rax],al
   14004328e:	add    BYTE PTR [rax],al
   140043290:	push   rbx
   140043291:	pushf  
   140043292:	add    al,BYTE PTR [rax]
   140043294:	(bad)  
   140043295:	(bad)  
   140043296:	(bad)  
   140043297:	jmp    FWORD PTR [rsp+rbx*4+0x2]
   14004329b:	add    BYTE PTR [rcx],al
   14004329d:	add    BYTE PTR [rax],al
   14004329f:	add    bl,ch
   1400432a1:	pushf  
   1400432a2:	add    al,BYTE PTR [rax]
   1400432a4:	add    BYTE PTR [rax],al
   1400432a6:	add    BYTE PTR [rax],al
   1400432a8:	neg    BYTE PTR [rdx+rax*1-0x100]
   1400432af:	dec    DWORD PTR [rbx*4+0x10002]
   1400432b6:	add    BYTE PTR [rax],al
   1400432b8:	(bad)  
   1400432b9:	popf   
   1400432ba:	add    al,BYTE PTR [rax]
   1400432bc:	add    BYTE PTR [rax],al
   1400432be:	add    BYTE PTR [rax],al
   1400432c0:	and    bl,BYTE PTR [rbp-0xfffe]
   1400432c6:	(bad)  
   1400432c7:	(bad)  
   1400432c8:	(bad)  
   1400432c9:	(bad)  
   1400432ca:	(bad)  
   1400432cb:	inc    DWORD PTR [rax+0x1100033e]
   1400432d1:	adc    al,BYTE PTR [rcx]
   1400432d3:	add    BYTE PTR [rcx],cl
   1400432d5:	(bad)  
   1400432d6:	add    BYTE PTR [rax],al
   1400432d8:	mov    ah,0x53
   1400432da:	add    DWORD PTR [rax],eax
   1400432dc:	mov    dl,al
   1400432de:	add    eax,DWORD PTR [rax]
   1400432e0:	add    DWORD PTR [rsi],eax
   1400432e2:	add    al,BYTE PTR [rax]
   1400432e4:	(bad)  
   1400432e5:	xor    al,BYTE PTR [rdx]
   1400432e7:	push   rax
   1400432e8:	push   rax
   1400432e9:	popf   
   1400432ea:	add    al,BYTE PTR [rax]
   1400432ec:	(bad)  
   1400432ed:	(bad)  
   1400432ee:	(bad)  
   1400432ef:	inc    DWORD PTR [rdi+0x29d]
   1400432f5:	add    BYTE PTR [rax],al
   1400432f7:	add    BYTE PTR [rbp-0xfffd63],bl
   1400432fd:	(bad)  
   1400432fe:	(bad)  
   1400432ff:	(bad)  
   140043300:	(bad)  
   140043301:	(bad)  
   140043302:	(bad)  
   140043303:	push   QWORD PTR [rax+0x3f]
   140043306:	add    eax,DWORD PTR [rax]
   140043308:	add    BYTE PTR [rax],al
   14004330a:	add    BYTE PTR [rax],al
   14004330c:	mov    al,0x3e
   14004330e:	add    eax,DWORD PTR [rax]
   140043310:	add    DWORD PTR [rax],eax
   140043312:	add    BYTE PTR [rax],al
   140043314:	sar    BYTE PTR [rsi],1
   140043316:	add    eax,DWORD PTR [rax]
   140043318:	add    al,BYTE PTR [rax]
   14004331a:	add    BYTE PTR [rax],al
   14004331c:	lock add eax,DWORD PTR ds:[rax]
   140043320:	add    eax,DWORD PTR [rax]
   140043322:	add    BYTE PTR [rax],al
   140043324:	adc    BYTE PTR [rdi],bh
   140043326:	add    eax,DWORD PTR [rax]
   140043328:	add    al,0x0
   14004332a:	add    BYTE PTR [rax],al
   14004332c:	xor    BYTE PTR [rdi],bh
   14004332e:	add    eax,DWORD PTR [rax]
   140043330:	add    eax,0x50000000
   140043335:	(bad)  
   140043336:	add    eax,DWORD PTR [rax]
   140043338:	add    al,0x0
   14004333a:	add    BYTE PTR [rax],al
   14004333c:	push   rax
   14004333d:	(bad)  
   14004333e:	add    eax,DWORD PTR [rax]
   140043340:	sbb    DWORD PTR [rdi],ebp
   140043342:	add    al,BYTE PTR [rax]
   140043344:	adc    DWORD PTR [rcx],eax
   140043346:	xchg   DWORD PTR [rax],eax
   140043348:	jo     0x1400433a8
   14004334a:	add    DWORD PTR [rax],eax
   14004334c:	mov    al,0xc2
   14004334e:	add    eax,DWORD PTR [rax]
   140043350:	sub    al,BYTE PTR [rax+rax*1]
   140043353:	add    BYTE PTR [rcx],al
   140043355:	(bad)  
   140043356:	add    al,BYTE PTR [rax]
   140043358:	(bad)  
   140043359:	xor    al,BYTE PTR [rdx]
   14004335b:	push   rax
   14004335c:	add    DWORD PTR [rsi],eax
   14004335e:	add    al,BYTE PTR [rax]
   140043360:	(bad)  
   140043361:	xor    al,BYTE PTR [rdx]
   140043363:	push   rax
   140043364:	add    DWORD PTR [rsi],eax
   140043366:	add    al,BYTE PTR [rax]
   140043368:	(bad)  
   140043369:	xor    al,BYTE PTR [rdx]
   14004336b:	push   rax
   14004336c:	add    DWORD PTR [rsi],eax
   14004336e:	add    al,BYTE PTR [rax]
   140043370:	(bad)  
   140043371:	xor    al,BYTE PTR [rdx]
   140043373:	push   rax
   140043374:	add    DWORD PTR [rsi],eax
   140043376:	add    al,BYTE PTR [rax]
   140043378:	(bad)  
   140043379:	xor    al,BYTE PTR [rdx]
   14004337b:	push   rax
   14004337c:	add    DWORD PTR [rsi],eax
   14004337e:	add    al,BYTE PTR [rax]
   140043380:	(bad)  
   140043381:	xor    al,BYTE PTR [rdx]
   140043383:	push   rax
   140043384:	add    DWORD PTR [rsi],eax
   140043386:	add    al,BYTE PTR [rax]
   140043388:	(bad)  
   140043389:	xor    al,BYTE PTR [rdx]
   14004338b:	push   rax
   14004338c:	mov    al,0x9d
   14004338e:	add    al,BYTE PTR [rax]
   140043390:	(bad)  
   140043391:	(bad)  
   140043392:	(bad)  
   140043393:	(bad)  
   140043394:	clc    
   140043395:	popf   
   140043396:	add    al,BYTE PTR [rax]
   140043398:	add    DWORD PTR [rax],eax
   14004339a:	add    BYTE PTR [rax],al
   14004339c:	(bad)  
   14004339d:	sahf   
   14004339e:	add    al,BYTE PTR [rax]
   1400433a0:	add    al,BYTE PTR [rax]
   1400433a2:	add    BYTE PTR [rax],al
   1400433a4:	xor    bl,BYTE PTR [rsi+0x30002]
   1400433aa:	add    BYTE PTR [rax],al
   1400433ac:	rex.RXB sahf 
   1400433ae:	add    al,BYTE PTR [rax]
   1400433b0:	add    al,0x0
   1400433b2:	add    BYTE PTR [rax],al
   1400433b4:	jg     0x140043354
   1400433b6:	add    al,BYTE PTR [rax]
   1400433b8:	add    eax,0x9c000000
   1400433bd:	sahf   
   1400433be:	add    al,BYTE PTR [rax]
   1400433c0:	(bad)  
   1400433c1:	add    BYTE PTR [rax],al
   1400433c3:	add    BYTE PTR [rax-0x61],cl
   1400433c6:	add    al,BYTE PTR [rax]
   1400433c8:	add    al,0x0
   1400433ca:	add    BYTE PTR [rax],al
   1400433cc:	push   rsi
   1400433cd:	lahf   
   1400433ce:	add    al,BYTE PTR [rax]
   1400433d0:	add    eax,DWORD PTR [rax]
   1400433d2:	add    BYTE PTR [rax],al
   1400433d4:	fs lahf 
   1400433d6:	add    al,BYTE PTR [rax]
   1400433d8:	add    al,BYTE PTR [rax]
   1400433da:	add    BYTE PTR [rax],al
   1400433dc:	outs   dx,DWORD PTR ds:[rsi]
   1400433dd:	lahf   
   1400433de:	add    al,BYTE PTR [rax]
   1400433e0:	add    DWORD PTR [rax],eax
   1400433e2:	add    BYTE PTR [rax],al
   1400433e4:	jge    0x140043385
   1400433e6:	add    al,BYTE PTR [rax]
   1400433e8:	add    BYTE PTR [rax],al
   1400433ea:	add    BYTE PTR [rax],al
   1400433ec:	(bad)  
   1400433ed:	(bad)  
   1400433ee:	(bad)  
   1400433ef:	push   QWORD PTR [rax+0x33f]
   1400433f5:	add    BYTE PTR [rax],al
   1400433f7:	add    al,dl
   1400433f9:	(bad)  
   1400433fa:	add    eax,DWORD PTR [rax]
   1400433fc:	add    DWORD PTR [rax],eax
   1400433fe:	add    BYTE PTR [rax],al
   140043400:	lock (bad) 
   140043402:	add    eax,DWORD PTR [rax]
   140043404:	sbb    DWORD PTR [rdi],ebp
   140043406:	add    al,BYTE PTR [rax]
   140043408:	adc    DWORD PTR [rcx],eax
   14004340a:	sub    eax,DWORD PTR [rax]
   14004340c:	jo     0x14004346c
   14004340e:	add    DWORD PTR [rax],eax
   140043410:	fadd   st,st(2)
   140043412:	add    eax,DWORD PTR [rax]
   140043414:	rex.X add DWORD PTR [rax],eax
   140043417:	add    BYTE PTR [rcx],al
   140043419:	(bad)  
   14004341a:	add    al,BYTE PTR [rax]
   14004341c:	(bad)  
   14004341d:	xor    al,BYTE PTR [rdx]
   14004341f:	push   rax
   140043420:	add    DWORD PTR [rsi],eax
   140043422:	add    al,BYTE PTR [rax]
   140043424:	(bad)  
   140043425:	xor    al,BYTE PTR [rdx]
   140043427:	push   rax
   140043428:	add    DWORD PTR [rsi],eax
   14004342a:	add    al,BYTE PTR [rax]
   14004342c:	(bad)  
   14004342d:	xor    al,BYTE PTR [rdx]
   14004342f:	push   rax
   140043430:	rcr    BYTE PTR [rdi-0xfffe],0xff
   140043437:	(bad)  
   140043438:	out    dx,eax
   140043439:	lahf   
   14004343a:	add    al,BYTE PTR [rax]
   14004343c:	add    BYTE PTR [rax],al
   14004343e:	add    BYTE PTR [rax],al
   140043440:	cli    
   140043441:	lahf   
   140043442:	add    al,BYTE PTR [rax]
   140043444:	add    DWORD PTR [rax],eax
   140043446:	add    BYTE PTR [rax],al
   140043448:	sti    
   140043449:	movabs al,ds:0xa12a000000020002
   140043452:	add    al,BYTE PTR [rax]
   140043454:	add    DWORD PTR [rax],eax
   140043456:	add    BYTE PTR [rax],al
   140043458:	rex.XB movabs eax,ds:0xa14e000000000002
   140043462:	add    al,BYTE PTR [rax]
   140043464:	(bad)  
   140043465:	(bad)  
   140043466:	(bad)  
   140043467:	jmp    QWORD PTR [rcx+riz*4+0x2]
   14004346b:	add    BYTE PTR [rcx],al
   14004346d:	add    BYTE PTR [rax],al
   14004346f:	add    BYTE PTR [rcx+riz*4+0x2],ch
   140043473:	add    BYTE PTR [rax],al
   140043475:	add    BYTE PTR [rax],al
   140043477:	add    BYTE PTR [rdi-0x5f],dh
   14004347a:	add    al,BYTE PTR [rax]
   14004347c:	(bad)  
   14004347d:	(bad)  
   14004347e:	(bad)  
   14004347f:	call   QWORD PTR [rcx]
   140043481:	adc    al,BYTE PTR [rcx]
   140043483:	add    BYTE PTR [rcx],cl
   140043485:	(bad)  
   140043486:	add    BYTE PTR [rax],al
   140043488:	mov    ah,0x53
   14004348a:	add    DWORD PTR [rax],eax
   14004348c:	add    bl,al
   14004348e:	add    eax,DWORD PTR [rax]
   140043490:	mov    al,0xa1
   140043492:	add    al,BYTE PTR [rax]
   140043494:	(bad)  
   140043495:	(bad)  
   140043496:	(bad)  
   140043497:	call   rdx
   140043499:	movabs eax,ds:0xa1f0000000000002
   1400434a2:	add    al,BYTE PTR [rax]
   1400434a4:	add    DWORD PTR [rax],eax
   1400434a6:	add    BYTE PTR [rax],al
   1400434a8:	add    ah,BYTE PTR [rdx+0x20002]
   1400434ae:	add    BYTE PTR [rax],al
   1400434b0:	adc    al,0xa2
   1400434b2:	add    al,BYTE PTR [rax]
   1400434b4:	(bad)  
   1400434b5:	(bad)  
   1400434b6:	(bad)  
   1400434b7:	call   QWORD PTR [rcx]
   1400434b9:	adc    al,BYTE PTR [rcx]
   1400434bb:	add    BYTE PTR [rcx],cl
   1400434bd:	(bad)  
   1400434be:	add    BYTE PTR [rax],al
   1400434c0:	mov    ah,0x53
   1400434c2:	add    DWORD PTR [rax],eax
   1400434c4:	rol    bl,1
   1400434c6:	add    eax,DWORD PTR [rax]
   1400434c8:	(bad)  
   1400434c9:	(bad)  
   1400434ca:	(bad)  
   1400434cb:	call   QWORD PTR [rax]
   1400434cd:	rex add eax,DWORD PTR [rax]
   1400434d0:	add    BYTE PTR [rax],al
   1400434d2:	add    BYTE PTR [rax],al
   1400434d4:	xor    BYTE PTR [rax+0x3],al
   1400434d7:	add    BYTE PTR [rcx],al
   1400434d9:	add    BYTE PTR [rax],al
   1400434db:	add    BYTE PTR [rax+0x40],dl
   1400434de:	add    eax,DWORD PTR [rax]
   1400434e0:	and    BYTE PTR [rdx-0xfffe],ah
   1400434e6:	(bad)  
   1400434e7:	inc    DWORD PTR [rcx-0x5e]
   1400434ea:	add    al,BYTE PTR [rax]
   1400434ec:	add    al,BYTE PTR [rax]
   1400434ee:	add    BYTE PTR [rax],al
   1400434f0:	push   rbx
   1400434f1:	movabs ds:0xa265000000010002,al
   1400434fa:	add    al,BYTE PTR [rax]
   1400434fc:	add    BYTE PTR [rax],al
   1400434fe:	add    BYTE PTR [rax],al
   140043500:	je     0x1400434a4
   140043502:	add    al,BYTE PTR [rax]
   140043504:	(bad)  
   140043505:	(bad)  
   140043506:	(bad)  
   140043507:	inc    DWORD PTR [rcx]
   140043509:	sbb    al,BYTE PTR [rbx]
   14004350b:	add    BYTE PTR [rdx],bl
   14004350d:	(bad)  
   14004350e:	(bad)  
   14004350f:	jo     0x140043526
   140043511:	xor    BYTE PTR [rax],al
   140043513:	add    BYTE PTR [rcx],dl
   140043515:	sbb    al,0x1
   140043517:	add    BYTE PTR [rbx],dl
   140043519:	loop   0x14004351b
   14004351b:	add    BYTE PTR [rbx+rdx*2-0x3c07ffff],dh
   140043522:	add    eax,DWORD PTR [rax]
   140043524:	(bad)  
   140043525:	(bad)  
   140043526:	(bad)  
   140043527:	call   QWORD PTR [rax+0x340]
   14004352d:	add    BYTE PTR [rax],al
   14004352f:	add    BYTE PTR [rax+0x40],dh
   140043532:	add    eax,DWORD PTR [rax]
   140043534:	and    BYTE PTR [rbp-0xfffe],ah
   14004353a:	(bad)  
   14004353b:	jmp    QWORD PTR [rbp-0x5b]
   14004353e:	add    al,BYTE PTR [rax]
   140043540:	add    DWORD PTR [rax],eax
   140043542:	add    BYTE PTR [rax],al
   140043544:	xchg   edx,eax
   140043545:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043546:	add    al,BYTE PTR [rax]
   140043548:	add    BYTE PTR [rax],al
   14004354a:	add    BYTE PTR [rax],al
   14004354c:	adc    DWORD PTR [rcx+rax*1],ebx
   14004354f:	add    BYTE PTR [rbx],dl
   140043551:	loop   0x140043553
   140043553:	add    BYTE PTR [rbx+rdx*2-0x3bdfffff],dh
   14004355a:	add    eax,DWORD PTR [rax]
   14004355c:	mov    al,0xa5
   14004355e:	add    al,BYTE PTR [rax]
   140043560:	(bad)  
   140043561:	(bad)  
   140043562:	(bad)  
   140043563:	push   rbp
   140043565:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140043566:	add    al,BYTE PTR [rax]
   140043568:	add    DWORD PTR [rax],eax
   14004356a:	add    BYTE PTR [rax],al
   14004356c:	and    ah,BYTE PTR [rsi+0x2]
   140043572:	add    BYTE PTR [rax],al
   140043574:	add    DWORD PTR [rdx+rax*1],edx
   140043577:	add    BYTE PTR [rdx+rdx*2],dl
   14004357a:	adc    BYTE PTR [rax],dh
   14004357c:	and    DWORD PTR [rax],eax
   14004357e:	add    BYTE PTR [rax],al
   140043580:	xor    BYTE PTR [rcx-0x569efffe],ch
   140043586:	add    al,BYTE PTR [rax]
   140043588:	int3   
   140043589:	cmp    al,BYTE PTR [rax+rax*1]
   14004358c:	and    DWORD PTR [rip+0x34050002],eax        # 0x174093594
   140043592:	(bad)  
   140043593:	add    BYTE PTR [rax],dh
   140043595:	test   eax,0xa9610002
   14004359a:	add    al,BYTE PTR [rax]
   14004359c:	int3   
   14004359d:	cmp    al,BYTE PTR [rax+rax*1]
   1400435a0:	and    DWORD PTR [rax],eax
   1400435a2:	add    BYTE PTR [rax],al
   1400435a4:	adc    BYTE PTR [rdx-0x55cffffe],ch
   1400435aa:	add    al,BYTE PTR [rax]
   1400435ac:	int3   
   1400435ad:	cmp    al,BYTE PTR [rax+rax*1]
   1400435b0:	and    DWORD PTR [rip+0x34050002],eax        # 0x1740935b8
   1400435b6:	(bad)  
   1400435b7:	add    BYTE PTR [rax],dl
   1400435b9:	stos   BYTE PTR es:[rdi],al
   1400435ba:	add    al,BYTE PTR [rax]
   1400435bc:	xor    BYTE PTR [rdx+0x3acc0002],ch
   1400435c2:	add    al,0x0
   1400435c4:	add    DWORD PTR [rsi],ecx
   1400435c6:	add    DWORD PTR [rax],eax
   1400435c8:	(bad)  
   1400435c9:	(bad)  
   1400435ca:	add    BYTE PTR [rax],al
   1400435cc:	and    DWORD PTR [rax],eax
   1400435ce:	add    BYTE PTR [rax],al
   1400435d0:	nop
   1400435d1:	scas   al,BYTE PTR es:[rdi]
   1400435d2:	add    al,BYTE PTR [rax]
   1400435d4:	mov    esp,0x840002af
   1400435d9:	or     eax,DWORD PTR [rax+rax*1]
   1400435dc:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x1040935e4
   1400435e2:	(bad)  
   1400435e3:	add    BYTE PTR [rax-0x43fffd52],dl
   1400435e9:	scas   eax,DWORD PTR es:[rdi]
   1400435ea:	add    al,BYTE PTR [rax]
   1400435ec:	test   BYTE PTR [rbx],cl
   1400435ee:	add    al,0x0
   1400435f0:	and    DWORD PTR [rax],eax
   1400435f2:	add    BYTE PTR [rax],al
   1400435f4:	lock mov al,0x2
   1400435f7:	add    BYTE PTR [rip+0xffffffffcc0002b1],al        # 0x10c0438ae
   1400435fd:	cmp    al,BYTE PTR [rax+rax*1]
   140043600:	and    DWORD PTR [rip+0x34050002],eax        # 0x174093608
   140043606:	(bad)  
   140043607:	add    al,dh
   140043609:	mov    al,0x2
   14004360b:	add    BYTE PTR [rip+0xffffffffcc0002b1],al        # 0x10c0438c2
   140043611:	cmp    al,BYTE PTR [rax+rax*1]
   140043614:	and    DWORD PTR [rax],eax
   140043616:	add    BYTE PTR [rax],al
   140043618:	(bad)  
   140043619:	mov    cl,0x2
   14004361b:	add    BYTE PTR [rbp-0x4f],dh
   14004361e:	add    al,BYTE PTR [rax]
   140043620:	int3   
   140043621:	cmp    al,BYTE PTR [rax+rax*1]
   140043624:	and    DWORD PTR [rip+0x34050002],eax        # 0x17409362c
   14004362a:	(bad)  
   14004362b:	add    BYTE PTR [rax-0x4f],ah
   14004362e:	add    al,BYTE PTR [rax]
   140043630:	jne    0x1400435e3
   140043632:	add    al,BYTE PTR [rax]
   140043634:	int3   
   140043635:	cmp    al,BYTE PTR [rax+rax*1]
   140043638:	and    DWORD PTR [rax],eax
   14004363a:	add    BYTE PTR [rax],al
   14004363c:	jo     0x1400435f0
   14004363e:	add    al,BYTE PTR [rax]
   140043640:	mov    WORD PTR [rdx+0x4f940002],?
   140043646:	add    al,0x0
   140043648:	and    DWORD PTR [rip+0x34050002],eax        # 0x174093650
   14004364e:	(bad)  
   14004364f:	add    BYTE PTR [rax-0x4e],dh
   140043652:	add    al,BYTE PTR [rax]
   140043654:	mov    WORD PTR [rdx+0x4f940002],?
   14004365a:	add    al,0x0
   14004365c:	adc    DWORD PTR [rax],ebx
   14004365e:	add    al,0x0
   140043660:	sbb    BYTE PTR [rcx+rcx*1],dh
   140043663:	add    BYTE PTR [rdx],cl
   140043665:	push   rdx
   140043666:	(bad)  
   140043667:	jo     0x14004361d
   140043669:	push   rbx
   14004366a:	add    DWORD PTR [rax],eax
   14004366c:	enter  0x3c5,0x0
   140043670:	(bad)  
   140043671:	(bad)  
   140043672:	(bad)  
   140043673:	inc    eax
   140043675:	rex add eax,DWORD PTR [rax]
   140043678:	add    BYTE PTR [rax],al
   14004367a:	add    BYTE PTR [rax],al
   14004367c:	loopne 0x1400436be
   14004367e:	add    eax,DWORD PTR [rax]
   140043680:	xor    BYTE PTR [rbp-0xfffe],dh
   140043686:	(bad)  
   140043687:	call   QWORD PTR [rbp-0x4b]
   14004368a:	add    al,BYTE PTR [rax]
   14004368c:	add    DWORD PTR [rax],eax
   14004368e:	add    BYTE PTR [rax],al
   140043690:	jbe    0x140043647
   140043692:	add    al,BYTE PTR [rax]
   140043694:	add    BYTE PTR [rax],al
   140043696:	add    BYTE PTR [rax],al
   140043698:	(bad)  
   140043699:	mov    ch,0x2
   14004369b:	add    bh,bh
   14004369d:	(bad)  
   14004369e:	(bad)  
   14004369f:	jmp    QWORD PTR [rcx]
   1400436a1:	add    BYTE PTR [rax],al
   1400436a3:	add    BYTE PTR [rax],al
   1400436a5:	mov    dh,0x2
   1400436a7:	add    BYTE PTR [rip+0x2b6],dh        # 0x140043963
   1400436ad:	(bad)  
   1400436ae:	add    al,0x0
   1400436b0:	and    DWORD PTR [rax],eax
   1400436b2:	add    al,0x0
   1400436b4:	add    BYTE PTR [rdi+rax*1+0x0],dh
   1400436b8:	add    BYTE PTR [rsi+rax*1+0x0],ah
   1400436bc:	add    BYTE PTR [rsi-0x49cafffe],dh
   1400436c2:	add    al,BYTE PTR [rax]
   1400436c4:	add    BYTE PTR [rdi],dh
   1400436c6:	add    al,0x0
   1400436c8:	and    DWORD PTR [rax],eax
   1400436ca:	add    BYTE PTR [rax],al
   1400436cc:	xor    eax,0x6d0002b6
   1400436d1:	mov    dh,0x2
   1400436d3:	add    ah,ch
   1400436d5:	ss add al,0x0
   1400436d8:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b40936e0
   1400436de:	(bad)  
   1400436df:	add    BYTE PTR [rip+0x6d0002b6],dh        # 0x1ad04399b
   1400436e5:	mov    dh,0x2
   1400436e7:	add    ah,ch
   1400436e9:	ss add al,0x0
   1400436ec:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a40936f4
   1400436f2:	(bad)  
   1400436f3:	add    BYTE PTR [rax],al
   1400436f5:	mov    dh,0x2
   1400436f7:	add    BYTE PTR [rip+0x2b6],dh        # 0x1400439b3
   1400436fd:	(bad)  
   1400436fe:	add    al,0x0
   140043700:	add    DWORD PTR [rax],edx
   140043702:	(bad)  
   140043703:	add    BYTE PTR [rax],dl
   140043705:	push   rsp
   140043706:	or     DWORD PTR [rax],eax
   140043708:	adc    BYTE PTR [rax+rcx*1],dh
   14004370b:	add    BYTE PTR [rax],dl
   14004370d:	xor    cl,BYTE PTR [rax+rax*8]
   140043710:	adc    DWORD PTR [rbx],edx
   140043712:	add    al,BYTE PTR [rax]
   140043714:	or     dl,BYTE PTR [rdx+0x6]
   140043717:	xor    BYTE PTR [rbx+rdx*2-0x38d7ffff],dh
   14004371e:	add    eax,DWORD PTR [rax]
   140043720:	mov    al,0xb8
   140043722:	add    al,BYTE PTR [rax]
   140043724:	(bad)  
   140043725:	(bad)  
   140043726:	(bad)  
   140043727:	call   rax
   140043729:	mov    eax,0x10002
   14004372e:	add    BYTE PTR [rax],al
   140043730:	(bad)  
   140043731:	mov    eax,0x2
   140043736:	add    BYTE PTR [rax],al
   140043738:	loopne 0x1400436f2
   14004373a:	add    al,BYTE PTR [rax]
   14004373c:	(bad)  
   14004373d:	(bad)  
   14004373e:	(bad)  
   14004373f:	jmp    QWORD PTR [rcx]
   140043741:	add    BYTE PTR [rax],al
   140043743:	add    BYTE PTR [rax-0x23fffd47],dh
   140043749:	mov    ecx,0x376c0002
   14004374e:	add    al,0x0
   140043750:	and    DWORD PTR [rdx],edx
   140043752:	(bad)  
   140043753:	add    BYTE PTR [rdx],dl
   140043755:	(bad)  
   140043756:	or     al,BYTE PTR [rax]
   140043758:	or     eax,0x8000b74
   14004375d:	push   rsp
   14004375e:	adc    al,BYTE PTR [rax]
   140043760:	mov    al,0xb9
   140043762:	add    al,BYTE PTR [rax]
   140043764:	fdivr  QWORD PTR [rcx+0x376c0002]
   14004376a:	add    al,0x0
   14004376c:	sbb    DWORD PTR [rax],ebx
   14004376e:	add    al,0x0
   140043770:	or     DWORD PTR [rdx+0x6003d005],esi
   140043776:	add    dh,BYTE PTR [rax]
   140043778:	sbb    BYTE PTR [rax+0x1],0x0
   14004377c:	add    BYTE PTR [rax],al
   14004377f:	add    BYTE PTR [rcx],bl
   140043781:	sub    BYTE PTR [rsi],al
   140043783:	add    BYTE PTR [rcx],bl
   140043785:	adc    DWORD PTR fs:[rax],eax
   140043788:	adc    eax,0x8001034
   14004378d:	mov    dl,0x4
   14004378f:	jo     0x140043801
   140043791:	pop    rsi
   140043792:	add    DWORD PTR [rax],eax
   140043794:	adc    al,cl
   140043796:	add    eax,DWORD PTR [rax]
   140043798:	push   rdx
   140043799:	add    BYTE PTR [rax],al
   14004379b:	add    bh,bh
   14004379d:	(bad)  
   14004379e:	(bad)  
   14004379f:	inc    DWORD PTR [rax]
   1400437a1:	add    eax,DWORD PTR [r8]
   1400437a4:	push   rax
   1400437a5:	mov    esp,0xffff0002
   1400437aa:	(bad)  
   1400437ab:	(bad)  
   1400437ac:	out    dx,al
   1400437ad:	mov    esp,0x2
   1400437b2:	add    BYTE PTR [rax],al
   1400437b4:	sbb    eax,0xff0002bd
   1400437b9:	(bad)  
   1400437ba:	(bad)  
   1400437bb:	call   QWORD PTR [rcx]
   1400437bd:	adc    al,BYTE PTR [rbx]
   1400437bf:	add    BYTE PTR [rcx],cl
   1400437c1:	add    DWORD PTR [rdx],edx
   1400437c3:	add    BYTE PTR [rdx],al
   1400437c5:	xor    BYTE PTR [rax],al
   1400437c7:	add    BYTE PTR [rbx+rdx*2-0x37b7ffff],dh
   1400437ce:	add    eax,DWORD PTR [rax]
   1400437d0:	(bad)  
   1400437d1:	(bad)  
   1400437d2:	(bad)  
   1400437d3:	jmp    QWORD PTR [rax]
   1400437d5:	add    eax,DWORD PTR [r8]
   1400437d8:	add    BYTE PTR [rax],al
   1400437da:	add    BYTE PTR [rax],al
   1400437dc:	rex
   1400437dd:	add    eax,DWORD PTR [r8]
   1400437e0:	(bad)  
   1400437e1:	(bad)  
   1400437e2:	(bad)  
   1400437e3:	jmp    QWORD PTR [rax+0x41]
   1400437e6:	add    eax,DWORD PTR [rax]
   1400437e8:	add    al,BYTE PTR [rax]
   1400437ea:	add    BYTE PTR [rax],al
   1400437ec:	add    BYTE PTR [rcx+0x3],0x0
   1400437f0:	(bad)  
   1400437f1:	(bad)  
   1400437f2:	(bad)  
   1400437f3:	jmp    QWORD PTR [rax+0x4000341]
   1400437f9:	add    BYTE PTR [rax],al
   1400437fb:	add    al,al
   1400437fd:	add    eax,DWORD PTR [r8]
   140043800:	push   rax
   140043801:	mov    ebp,0xffff0002
   140043806:	(bad)  
   140043807:	push   QWORD PTR [rbp+rdi*4+0x2]
   14004380e:	add    BYTE PTR [rax],al
   140043810:	mov    edi,0x10002bd
   140043815:	add    BYTE PTR [rax],al
   140043817:	add    dl,bh
   140043819:	mov    ebp,0x2
   14004381e:	add    BYTE PTR [rax],al
   140043820:	sbb    BYTE PTR [rsi-0xfffe],bh
   140043826:	(bad)  
   140043827:	dec    DWORD PTR [rdx-0x42]
   14004382a:	add    al,BYTE PTR [rax]
   14004382c:	add    al,BYTE PTR [rax]
   14004382e:	add    BYTE PTR [rax],al
   140043830:	push   rbp
   140043831:	mov    esi,0x30002
   140043836:	add    BYTE PTR [rax],al
   140043838:	nop
   140043839:	mov    esi,0x20002
   14004383e:	add    BYTE PTR [rax],al
   140043840:	scas   al,BYTE PTR es:[rdi]
   140043841:	mov    esi,0xffff0002
   140043846:	(bad)  
   140043847:	(bad)  
   140043848:	fdivr  DWORD PTR [rsi+0x40002]
   14004384e:	add    BYTE PTR [rax],al
   140043850:	jrcxz  0x140043810
   140043852:	add    al,BYTE PTR [rax]
   140043854:	add    eax,0x1e000000
   140043859:	mov    edi,0x40002
   14004385e:	add    BYTE PTR [rax],al
   140043860:	cmp    al,0xbf
   140043862:	add    al,BYTE PTR [rax]
   140043864:	(bad)  
   140043865:	(bad)  
   140043866:	(bad)  
   140043867:	call   QWORD PTR [rcx]
   140043869:	sbb    BYTE PTR [rax+rax*1],al
   14004386c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004386f:	add    BYTE PTR [rdx],cl
   140043871:	push   rdx
   140043872:	(bad)  
   140043873:	jo     0x140043829
   140043875:	push   rbx
   140043876:	add    DWORD PTR [rax],eax
   140043878:	mov    eax,0x500003c8
   14004387d:	mov    edi,0xffff0002
   140043882:	(bad)  
   140043883:	push   QWORD PTR [rdi+rdi*4+0x2]
   140043887:	add    BYTE PTR [rax],al
   140043889:	add    BYTE PTR [rax],al
   14004388b:	add    BYTE PTR [rdi-0xfffd41],ah
   140043891:	(bad)  
   140043892:	(bad)  
   140043893:	call   QWORD PTR [rcx]
   140043895:	sbb    BYTE PTR [rax+rax*1],al
   140043898:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004389b:	add    BYTE PTR [rdx],cl
   14004389d:	push   rdx
   14004389e:	(bad)  
   14004389f:	jo     0x140043855
   1400438a1:	push   rbx
   1400438a2:	add    DWORD PTR [rax],eax
   1400438a4:	loopne 0x14004386e
   1400438a6:	add    eax,DWORD PTR [rax]
   1400438a8:	sar    BYTE PTR [rdi-0xfffe],0xff
   1400438af:	jmp    rsp
   1400438b1:	mov    edi,0x2
   1400438b6:	add    BYTE PTR [rax],al
   1400438b8:	(bad)  
   1400438b9:	rol    BYTE PTR [rdx],0x0
   1400438bc:	(bad)  
   1400438bd:	(bad)  
   1400438be:	(bad)  
   1400438bf:	call   QWORD PTR [rcx]
   1400438c1:	sbb    BYTE PTR [rax+rax*1],al
   1400438c4:	sbb    BYTE PTR [rcx+rcx*1],dh
   1400438c7:	add    BYTE PTR [rdx],cl
   1400438c9:	push   rdx
   1400438ca:	(bad)  
   1400438cb:	jo     0x140043881
   1400438cd:	push   rbx
   1400438ce:	add    DWORD PTR [rax],eax
   1400438d0:	or     cl,cl
   1400438d2:	add    eax,DWORD PTR [rax]
   1400438d4:	xor    al,al
   1400438d6:	add    al,BYTE PTR [rax]
   1400438d8:	(bad)  
   1400438d9:	(bad)  
   1400438da:	(bad)  
   1400438db:	call   FWORD PTR [rcx-0x40]
   1400438de:	add    al,BYTE PTR [rax]
   1400438e0:	add    BYTE PTR [rax],al
   1400438e2:	add    BYTE PTR [rax],al
   1400438e4:	test   eax,eax
   1400438e6:	add    al,BYTE PTR [rax]
   1400438e8:	(bad)  
   1400438e9:	(bad)  
   1400438ea:	(bad)  
   1400438eb:	jmp    QWORD PTR [rcx]
   1400438ed:	add    BYTE PTR [rax],al
   1400438ef:	add    al,dl
   1400438f1:	rol    BYTE PTR [rdx],0x0
   1400438f4:	in     al,0xc0
   1400438f6:	add    al,BYTE PTR [rax]
   1400438f8:	enter  0x425,0x0
   1400438fc:	and    DWORD PTR [rdx],ecx
   1400438fe:	add    al,0x0
   140043900:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140043904:	add    eax,0xd0000654
   140043909:	rol    BYTE PTR [rdx],0x0
   14004390c:	in     al,0xc0
   14004390e:	add    al,BYTE PTR [rax]
   140043910:	enter  0x425,0x0
   140043914:	adc    DWORD PTR [rax],ebx
   140043916:	add    al,0x0
   140043918:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004391b:	add    BYTE PTR [rdx],cl
   14004391d:	push   rdx
   14004391e:	(bad)  
   14004391f:	jo     0x1400438d5
   140043921:	push   rbx
   140043922:	add    DWORD PTR [rax],eax
   140043924:	or     cl,0x3
   140043927:	add    bh,bh
   140043929:	(bad)  
   14004392a:	(bad)  
   14004392b:	inc    DWORD PTR [rax]
   14004392d:	rex.X add eax,DWORD PTR [rax]
   140043930:	add    BYTE PTR [rax],al
   140043932:	add    BYTE PTR [rax],al
   140043934:	and    BYTE PTR [rdx+0x3],al
   140043937:	add    BYTE PTR [rax-0xfffd3f],dl
   14004393d:	(bad)  
   14004393e:	(bad)  
   14004393f:	(bad)  
   140043940:	mov    ecx,0x2c1
   140043945:	add    BYTE PTR [rax],al
   140043947:	add    ch,cl
   140043949:	rol    DWORD PTR [rdx],0x0
   14004394c:	add    DWORD PTR [rax],eax
   14004394e:	add    BYTE PTR [rax],al
   140043950:	hlt    
   140043951:	rol    DWORD PTR [rdx],0x0
   140043954:	(bad)  
   140043955:	(bad)  
   140043956:	(bad)  
   140043957:	call   QWORD PTR [rcx]
   140043959:	sbb    BYTE PTR [rax+rax*1],al
   14004395c:	sbb    BYTE PTR [rcx+rcx*1],dh
   14004395f:	add    BYTE PTR [rdx],cl
   140043961:	push   rdx
   140043962:	(bad)  
   140043963:	jo     0x140043919
   140043965:	push   rbx
   140043966:	add    DWORD PTR [rax],eax
   140043968:	test   al,0xc9
   14004396a:	add    eax,DWORD PTR [rax]
   14004396c:	(bad)  
   14004396d:	(bad)  
   14004396e:	(bad)  
   14004396f:	inc    DWORD PTR [rax+0x42]
   140043972:	add    eax,DWORD PTR [rax]
   140043974:	add    BYTE PTR [rax],al
   140043976:	add    BYTE PTR [rax],al
   140043978:	(bad)  
   140043979:	rex.X add eax,DWORD PTR [rax]
   14004397c:	adc    dl,al
   14004397e:	add    al,BYTE PTR [rax]
   140043980:	(bad)  
   140043981:	(bad)  
   140043982:	(bad)  
   140043983:	push   QWORD PTR [rbx]
   140043985:	ret    0x2
   140043988:	add    BYTE PTR [rax],al
   14004398a:	add    BYTE PTR [rax],al
   14004398c:	push   rbx
   14004398d:	ret    0x2
   140043990:	add    DWORD PTR [rax],eax
   140043992:	add    BYTE PTR [rax],al
   140043994:	(bad)  
   140043995:	ret    0x2
   140043998:	(bad)  
   140043999:	(bad)  
   14004399a:	(bad)  
   14004399b:	call   QWORD PTR [rcx]
   14004399d:	adc    al,0x4
   14004399f:	add    BYTE PTR [rsp+rsi*1],dl
   1400439a2:	or     BYTE PTR [rax],al
   1400439a4:	(bad)  
   1400439a5:	push   rdx
   1400439a6:	add    dh,BYTE PTR [rax-0x4c]
   1400439a9:	push   rbx
   1400439aa:	add    DWORD PTR [rax],eax
   1400439ac:	ror    cl,1
   1400439ae:	add    eax,DWORD PTR [rax]
   1400439b0:	(bad)  
   1400439b1:	(bad)  
   1400439b2:	(bad)  
   1400439b3:	inc    DWORD PTR [rax+0x50000342]
   1400439b9:	ret    
   1400439ba:	add    al,BYTE PTR [rax]
   1400439bc:	(bad)  
   1400439bd:	(bad)  
   1400439be:	(bad)  
   1400439bf:	push   QWORD PTR [rsi-0x3d]
   1400439c2:	add    al,BYTE PTR [rax]
   1400439c4:	add    BYTE PTR [rax],al
   1400439c6:	add    BYTE PTR [rax],al
   1400439c8:	mov    al,bl
   1400439ca:	add    al,BYTE PTR [rax]
   1400439cc:	(bad)  
   1400439cd:	(bad)  
   1400439ce:	(bad)  
   1400439cf:	call   FWORD PTR [rcx]
   1400439d1:	es add eax,0x12010b00
   1400439d7:	add    BYTE PTR [rax+rsi*2],al
   1400439da:	add    esp,DWORD PTR [rax+0x2]
   1400439dd:	xor    BYTE PTR [rax],al
   1400439df:	add    BYTE PTR [rax+0x5e],dh
   1400439e2:	add    DWORD PTR [rax],eax
   1400439e4:	clc    
   1400439e5:	leave  
   1400439e6:	add    eax,DWORD PTR [rax]
   1400439e8:	(bad)  
   1400439e9:	add    BYTE PTR [rax],al
   1400439eb:	add    bh,bh
   1400439ed:	(bad)  
   1400439ee:	(bad)  
   1400439ef:	jmp    QWORD PTR [rax+0x342]
   1400439f5:	add    BYTE PTR [rax],al
   1400439f7:	add    al,al
   1400439f9:	rex.X add eax,DWORD PTR [rax]
   1400439fc:	mov    al,0xc3
   1400439fe:	add    al,BYTE PTR [rax]
   140043a00:	(bad)  
   140043a01:	(bad)  
   140043a02:	(bad)  
   140043a03:	push   rsi
   140043a05:	ret    
   140043a06:	add    al,BYTE PTR [rax]
   140043a08:	add    BYTE PTR [rax],al
   140043a0a:	add    BYTE PTR [rax],al
   140043a0c:	or     eax,0x10002c4
   140043a11:	add    BYTE PTR [rax],al
   140043a13:	add    BYTE PTR [rbx-0x3b],dh
   140043a16:	add    al,BYTE PTR [rax]
   140043a18:	add    BYTE PTR [rax],al
   140043a1a:	add    BYTE PTR [rax],al
   140043a1c:	pushf  
   140043a1d:	(bad)
   140043a20:	(bad)  
   140043a21:	(bad)  
   140043a22:	(bad)  
   140043a23:	call   FWORD PTR [rcx]
   140043a25:	sbb    DWORD PTR [rax+rax*1],eax
   140043a28:	or     dh,BYTE PTR [rdx+rdx*1]
   140043a2b:	add    BYTE PTR [rdx],cl
   140043a2d:	rol    BYTE PTR [rsi],cl
   140043a2f:	jo     0x1400439b1
   140043a31:	pop    rax
   140043a32:	add    DWORD PTR [rax],eax
   140043a34:	(bad)  
   140043a35:	add    BYTE PTR [rax],al
   140043a37:	add    BYTE PTR [rcx],dl
   140043a39:	adc    al,0x4
   140043a3b:	add    BYTE PTR [rsp+rsi*1],dl
   140043a3e:	or     BYTE PTR [rax],al
   140043a40:	(bad)  
   140043a41:	push   rdx
   140043a42:	add    dh,BYTE PTR [rax-0x4c]
   140043a45:	push   rbx
   140043a46:	add    DWORD PTR [rax],eax
   140043a48:	rex retf 0x3
   140043a4c:	(bad)  
   140043a4d:	(bad)  
   140043a4e:	(bad)  
   140043a4f:	jmp    rax
   140043a51:	rex.X add eax,DWORD PTR [rax]
   140043a54:	add    BYTE PTR [rax],al
   140043a56:	add    BYTE PTR [rax],al
   140043a58:	add    BYTE PTR [rbx+0x3],al
   140043a5b:	add    al,ah
   140043a5d:	mov    BYTE PTR [rdx],0x0
   140043a60:	(bad)  
   140043a61:	(bad)  
   140043a62:	(bad)  
   140043a63:	dec    DWORD PTR [rcx]
   140043a65:	mov    DWORD PTR [rdx],0x0
   140043a6b:	add    BYTE PTR [rdi+rax*8],bl
   140043a6e:	add    al,BYTE PTR [rax]
   140043a70:	add    DWORD PTR [rax],eax
   140043a72:	add    BYTE PTR [rax],al
   140043a74:	cmp    eax,0x2c7
   140043a79:	add    BYTE PTR [rax],al
   140043a7b:	add    BYTE PTR [rcx-0x39],al
   140043a7e:	add    al,BYTE PTR [rax]
   140043a80:	(bad)  
   140043a81:	(bad)  
   140043a82:	(bad)  
   140043a83:	jmp    QWORD PTR [rcx]
   140043a85:	add    BYTE PTR [rax],al
   140043a87:	add    BYTE PTR [rax-0x2cfffd36],dh
   140043a8d:	retf   0x2
   140043a90:	int3   
   140043a91:	cmp    al,BYTE PTR [rax+rax*1]
   140043a94:	and    DWORD PTR [rip+0x34050002],eax        # 0x174093a9c
   140043a9a:	(bad)  
   140043a9b:	add    BYTE PTR [rax-0x2cfffd36],dh
   140043aa1:	retf   0x2
   140043aa4:	int3   
   140043aa5:	cmp    al,BYTE PTR [rax+rax*1]
   140043aa8:	and    DWORD PTR [rax],eax
   140043aaa:	add    BYTE PTR [rax],al
   140043aac:	jo     0x140043a79
   140043aae:	add    al,BYTE PTR [rax]
   140043ab0:	xchg   ebx,eax
   140043ab1:	retf   
   140043ab2:	add    al,BYTE PTR [rax]
   140043ab4:	int3   
   140043ab5:	cmp    al,BYTE PTR [rax+rax*1]
   140043ab8:	and    DWORD PTR [rip+0x34050002],eax        # 0x174093ac0
   140043abe:	(bad)  
   140043abf:	add    BYTE PTR [rax-0x35],dh
   140043ac2:	add    al,BYTE PTR [rax]
   140043ac4:	xchg   ebx,eax
   140043ac5:	retf   
   140043ac6:	add    al,BYTE PTR [rax]
   140043ac8:	int3   
   140043ac9:	cmp    al,BYTE PTR [rax+rax*1]
   140043acc:	add    DWORD PTR [rdx],ecx
   140043ace:	add    al,0x0
   140043ad0:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140043ad4:	or     dh,BYTE PTR [rdx]
   140043ad6:	(bad)  
   140043ad7:	jo     0x140043af2
   140043ad9:	cs (bad) 
   140043adb:	add    BYTE PTR [rsp+riz*2],bl
   140043ade:	(bad)  
   140043adf:	add    BYTE PTR [rax],bl
   140043ae1:	xor    al,0x1e
   140043ae3:	add    BYTE PTR [rbx],cl
   140043ae5:	add    DWORD PTR [rdx],ebx
   140043ae7:	add    BYTE PTR [rax+rsi*2],al
   140043aea:	add    BYTE PTR [rax],al
   140043aec:	jo     0x140043b4c
   140043aee:	add    DWORD PTR [rax],eax
   140043af0:	call   0x102043ebf
   140043af5:	add    BYTE PTR [rax],al
   140043af7:	add    bh,bh
   140043af9:	(bad)  
   140043afa:	(bad)  
   140043afb:	jmp    QWORD PTR [rax]
   140043afd:	rex.XB add eax,DWORD PTR [r8]
   140043b00:	add    BYTE PTR [rax],al
   140043b02:	add    BYTE PTR [rax],al
   140043b04:	rex
   140043b05:	rex.XB add eax,DWORD PTR [r8]
   140043b08:	add    DWORD PTR [rax],eax
   140043b0a:	add    BYTE PTR [rax],al
   140043b0c:	(bad)  
   140043b0d:	rex.XB add eax,DWORD PTR [r8]
   140043b10:	(bad)  
   140043b11:	(bad)  
   140043b12:	(bad)  
   140043b13:	inc    DWORD PTR [rax+0x30000343]
   140043b19:	int3   
   140043b1a:	add    al,BYTE PTR [rax]
   140043b1c:	(bad)  
   140043b1d:	(bad)  
   140043b1e:	(bad)  
   140043b1f:	jmp    QWORD PTR [rsp+rcx*8+0x2]
   140043b23:	add    BYTE PTR [rax],al
   140043b25:	add    BYTE PTR [rax],al
   140043b27:	add    BYTE PTR [rsp+rcx*8+0x10002],cl
   140043b2e:	add    BYTE PTR [rax],al
   140043b30:	mov    dl,0xcc
   140043b32:	add    al,BYTE PTR [rax]
   140043b34:	add    al,BYTE PTR [rax]
   140043b36:	add    BYTE PTR [rax],al
   140043b38:	out    0xcc,eax
   140043b3a:	add    al,BYTE PTR [rax]
   140043b3c:	add    eax,DWORD PTR [rax]
   140043b3e:	add    BYTE PTR [rax],al
   140043b40:	cmp    ebp,ecx
   140043b42:	add    al,BYTE PTR [rax]
   140043b44:	(bad)  
   140043b45:	(bad)  
   140043b46:	(bad)  
   140043b47:	jmp    QWORD PTR [rcx]
   140043b49:	add    BYTE PTR [rax],al
   140043b4b:	add    al,ah
   140043b4d:	int    0x2
   140043b4f:	add    al,ch
   140043b51:	int    0x2
   140043b53:	add    BYTE PTR [rax+0x2100043b],ch
   140043b59:	add    BYTE PTR [rdx],al
   140043b5b:	add    BYTE PTR [rax],al
   140043b5d:	(bad)  
   140043b5e:	or     al,BYTE PTR [rax]
   140043b60:	loopne 0x140043b2f
   140043b62:	add    al,BYTE PTR [rax]
   140043b64:	call   0xe8043e36
   140043b69:	cmp    eax,DWORD PTR [rax+rax*1]
   140043b6c:	and    DWORD PTR [rax],eax
   140043b6e:	add    BYTE PTR [rax],al
   140043b70:	call   0x142043e42
   140043b75:	(bad)  
   140043b76:	add    al,BYTE PTR [rax]
   140043b78:	nop
   140043b79:	cmp    eax,DWORD PTR [rax+rax*1]
   140043b7c:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x104093b84
   140043b82:	or     DWORD PTR [rax],eax
   140043b84:	call   0x142043e56
   140043b89:	(bad)  
   140043b8a:	add    al,BYTE PTR [rax]
   140043b8c:	nop
   140043b8d:	cmp    eax,DWORD PTR [rax+rax*1]
   140043b90:	and    DWORD PTR [rsp+rax*1],ecx
   140043b93:	add    BYTE PTR [rsp+rdx*8],cl
   140043b96:	or     al,BYTE PTR [rax]
   140043b98:	add    eax,0xe0000874
   140043b9d:	int    0x2
   140043b9f:	add    al,ch
   140043ba1:	int    0x2
   140043ba3:	add    BYTE PTR [rax+0x100043b],ch
   140043ba9:	or     BYTE PTR [rax+rax*1],al
   140043bac:	or     BYTE PTR [rdx],dh
   140043bae:	add    al,0x60
   140043bb0:	add    edx,DWORD PTR [rax+0x2]
   140043bb3:	xor    BYTE PTR [rcx],ah
   140043bb5:	add    BYTE PTR [rax],al
   140043bb7:	add    BYTE PTR [rax-0x31],dl
   140043bba:	add    al,BYTE PTR [rax]
   140043bbc:	jb     0x140043b8d
   140043bbe:	add    al,BYTE PTR [rax]
   140043bc0:	fdivr  DWORD PTR [rbx]
   140043bc2:	add    al,0x0
   140043bc4:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4093bcc
   140043bca:	(bad)  
   140043bcb:	add    BYTE PTR [rax-0x31],dl
   140043bce:	add    al,BYTE PTR [rax]
   140043bd0:	jb     0x140043ba1
   140043bd2:	add    al,BYTE PTR [rax]
   140043bd4:	fdivr  DWORD PTR [rbx]
   140043bd6:	add    al,0x0
   140043bd8:	add    DWORD PTR [rdx],ecx
   140043bda:	add    al,0x0
   140043bdc:	or     dh,BYTE PTR [rdi+rax*1]
   140043bdf:	add    BYTE PTR [rdx],cl
   140043be1:	xor    al,BYTE PTR [rsi]
   140043be3:	jo     0x140043bfe
   140043be5:	sub    ecx,DWORD PTR [rax]
   140043be7:	add    BYTE PTR [rsp+rdx*2],bl
   140043bea:	adc    eax,DWORD PTR [rax]
   140043bec:	sbb    BYTE PTR [rdx+rdx*1],dh
   140043bef:	add    BYTE PTR [rbx],cl
   140043bf1:	mov    dl,0x7
   140043bf3:	rol    BYTE PTR [rip+0x70600470],0x5e        # 0x1b064406a
   140043bfa:	add    DWORD PTR [rax],eax
   140043bfc:	sbb    bl,cl
   140043bfe:	add    eax,DWORD PTR [rax]
   140043c00:	push   rdx
   140043c01:	add    BYTE PTR [rax],al
   140043c03:	add    bh,bh
   140043c05:	(bad)  
   140043c06:	(bad)  
   140043c07:	jmp    QWORD PTR [rax-0xfffcbd]
   140043c0d:	(bad)  
   140043c0e:	(bad)  
   140043c0f:	inc    eax
   140043c11:	rex.XB add eax,DWORD PTR [r8]
   140043c14:	adc    al,dl
   140043c16:	add    al,BYTE PTR [rax]
   140043c18:	(bad)  
   140043c19:	(bad)  
   140043c1a:	(bad)  
   140043c1b:	dec    DWORD PTR [rcx]
   140043c1d:	rol    DWORD PTR [rdx],1
   140043c1f:	add    BYTE PTR [rax],al
   140043c21:	add    BYTE PTR [rax],al
   140043c23:	add    BYTE PTR [rip+0xffffffffff0002d1],ch        # 0x13f043efa
   140043c29:	(bad)  
   140043c2a:	(bad)  
   140043c2b:	jmp    QWORD PTR [rcx-0x2f]
   140043c2e:	add    al,BYTE PTR [rax]
   140043c30:	add    DWORD PTR [rax],eax
   140043c32:	add    BYTE PTR [rax],al
   140043c34:	cdq    
   140043c35:	rol    DWORD PTR [rdx],1
   140043c37:	add    bh,bh
   140043c39:	(bad)  
   140043c3a:	(bad)  
   140043c3b:	jmp    QWORD PTR [rcx]
   140043c3d:	add    BYTE PTR [rax],al
   140043c3f:	add    al,ah
   140043c41:	rol    DWORD PTR [rdx],1
   140043c43:	add    ch,bh
   140043c45:	rol    DWORD PTR [rdx],1
   140043c47:	add    BYTE PTR [rsp+rdi*1+0x4],ah
   140043c4b:	add    BYTE PTR [rcx],ah
   140043c4d:	or     al,BYTE PTR [rax+rax*1]
   140043c50:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140043c54:	add    eax,0xe0000654
   140043c59:	rol    DWORD PTR [rdx],1
   140043c5b:	add    ch,bh
   140043c5d:	rol    DWORD PTR [rdx],1
   140043c5f:	add    BYTE PTR [rsp+rdi*1+0x4],ah
   140043c63:	add    BYTE PTR [rcx],al
   140043c65:	adc    BYTE PTR [rsi],al
   140043c67:	add    BYTE PTR [rax],dl
   140043c69:	je     0x140043c74
   140043c6b:	add    BYTE PTR [rax],dl
   140043c6d:	xor    al,0x8
   140043c6f:	add    BYTE PTR [rax],dl
   140043c71:	xor    cl,BYTE PTR [rax+rax*8]
   140043c74:	and    DWORD PTR [rax],eax
   140043c76:	add    BYTE PTR [rax],al
   140043c78:	adc    dl,0x2
   140043c7b:	add    BYTE PTR [rcx-0x7bfffd2e],ah
   140043c81:	or     eax,DWORD PTR [rax+rax*1]
   140043c84:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x104093c8c
   140043c8a:	(bad)  
   140043c8b:	add    BYTE PTR [rax-0x5efffd2e],al
   140043c91:	rol    BYTE PTR [rdx],cl
   140043c93:	add    BYTE PTR [rbx+rcx*1+0x210004],al
   140043c9a:	add    BYTE PTR [rax],al
   140043c9c:	(bad)  
   140043c9d:	rol    DWORD PTR [rdx],cl
   140043c9f:	add    BYTE PTR [rdx-0x43fffd2d],al
   140043ca5:	cmp    al,0x4
   140043ca7:	add    BYTE PTR [rcx],ah
   140043ca9:	add    eax,0x54050002
   140043cae:	(bad)  
   140043caf:	add    BYTE PTR [rax-0x2d],ah
   140043cb2:	add    al,BYTE PTR [rax]
   140043cb4:	(bad)  
   140043cb5:	rol    DWORD PTR [rdx],cl
   140043cb7:	add    BYTE PTR [rsp+rdi*1+0x15010004],bh
   140043cbe:	or     BYTE PTR [rax],al
   140043cc0:	adc    eax,0x15000974
   140043cc5:	or     BYTE PTR fs:[rax],al
   140043cc8:	adc    eax,0x15000734
   140043ccd:	xor    dl,BYTE PTR [rcx]
   140043ccf:	shl    BYTE PTR [rcx],0x0
   140043cd2:	add    BYTE PTR [rax],al
   140043cd4:	adc    ah,0x2
   140043cd7:	add    BYTE PTR [rsi-0x6bfffd2c],bl
   140043cdd:	rex.WRB add al,0x0
   140043ce0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4093ce8
   140043ce6:	(bad)  
   140043ce7:	add    BYTE PTR [rax-0x61fffd2c],al
   140043ced:	(bad)  
   140043cee:	add    al,BYTE PTR [rax]
   140043cf0:	xchg   esp,eax
   140043cf1:	rex.WRB add al,0x0
   140043cf4:	adc    DWORD PTR [rsp+rax*1],edx
   140043cf7:	add    BYTE PTR [rsp+rsi*1],dl
   140043cfa:	or     BYTE PTR [rax],al
   140043cfc:	(bad)  
   140043cfd:	push   rdx
   140043cfe:	add    dh,BYTE PTR [rax-0x4c]
   140043d01:	push   rbx
   140043d02:	add    DWORD PTR [rax],eax
   140043d04:	(bad)  
   140043d05:	retf   
   140043d06:	add    eax,DWORD PTR [rax]
   140043d08:	movabs al,ds:0xc6ffffffff0002d5
   140043d11:	(bad)  
   140043d12:	add    al,BYTE PTR [rax]
   140043d14:	add    BYTE PTR [rax],al
   140043d16:	add    BYTE PTR [rax],al
   140043d18:	jmp    0x140043cef
   140043d1a:	add    al,BYTE PTR [rax]
   140043d1c:	(bad)  
   140043d1d:	(bad)  
   140043d1e:	(bad)  
   140043d1f:	jmp    QWORD PTR [rcx]
   140043d21:	add    BYTE PTR [rax],al
   140043d23:	add    BYTE PTR [rax-0x6afffd2a],al
   140043d29:	(bad)  
   140043d2a:	add    al,BYTE PTR [rax]
   140043d2c:	xchg   esp,eax
   140043d2d:	rex.WRB add al,0x0
   140043d30:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4093d38
   140043d36:	(bad)  
   140043d37:	add    BYTE PTR [rax-0x6afffd2a],al
   140043d3d:	(bad)  
   140043d3e:	add    al,BYTE PTR [rax]
   140043d40:	xchg   esp,eax
   140043d41:	rex.WRB add al,0x0
   140043d44:	and    DWORD PTR [rax],eax
   140043d46:	add    BYTE PTR [rax],al
   140043d48:	loopne 0x140043d22
   140043d4a:	add    al,BYTE PTR [rax]
   140043d4c:	or     ebx,ecx
   140043d4e:	add    al,BYTE PTR [rax]
   140043d50:	ins    BYTE PTR es:[rdi],dx
   140043d51:	cmp    eax,0xa210004
   140043d56:	add    al,0x0
   140043d58:	or     al,ah
   140043d5a:	add    eax,DWORD PTR [rax]
   140043d5c:	add    eax,0xe0000254
   140043d61:	fadd   DWORD PTR [rdx]
   140043d63:	add    BYTE PTR [rbx],cl
   140043d65:	fld    DWORD PTR [rdx]
   140043d67:	add    BYTE PTR [rbp+rdi*1+0x4],ch
   140043d6b:	add    BYTE PTR [rcx],al
   140043d6d:	or     eax,DWORD PTR [rip+0x5640b00]        # 0x145684873
   140043d73:	add    BYTE PTR [rbx],cl
   140043d75:	xor    al,0x4
   140043d77:	add    BYTE PTR [rbx],cl
   140043d79:	jo     0x140043d7b
   140043d7b:	add    BYTE PTR [rcx],ah
   140043d7d:	add    BYTE PTR [rax],al
   140043d7f:	add    BYTE PTR [rax],ah
   140043d81:	fild   DWORD PTR [rdx]
   140043d83:	add    BYTE PTR [rdx-0x25],cl
   140043d86:	add    al,BYTE PTR [rax]
   140043d88:	sub    al,0x4d
   140043d8a:	add    al,0x0
   140043d8c:	and    DWORD PTR [rax],eax
   140043d8e:	add    al,BYTE PTR [rax]
   140043d90:	add    BYTE PTR [rsi+rax*1+0x0],ah
   140043d94:	and    bl,bl
   140043d96:	add    al,BYTE PTR [rax]
   140043d98:	rex.WX fild DWORD PTR [rdx]
   140043d9b:	add    BYTE PTR [rcx*2+0x5210004],ch
   140043da2:	add    al,BYTE PTR [rax]
   140043da4:	add    eax,0x20000664
   140043da9:	fild   DWORD PTR [rdx]
   140043dab:	add    BYTE PTR [rdx-0x25],cl
   140043dae:	add    al,BYTE PTR [rax]
   140043db0:	sub    al,0x4d
   140043db2:	add    al,0x0
   140043db4:	and    DWORD PTR [rax],eax
   140043db6:	add    BYTE PTR [rax],al
   140043db8:	adc    ah,bl
   140043dba:	add    al,BYTE PTR [rax]
   140043dbc:	and    eax,0xfc0002dc
   140043dc1:	cmp    eax,0x5210004
   140043dc6:	add    al,BYTE PTR [rax]
   140043dc8:	add    eax,0x10000674
   140043dcd:	fadd   QWORD PTR [rdx]
   140043dcf:	add    BYTE PTR [rip+0xfffffffffc0002dc],ah        # 0x13c0440b1
   140043dd5:	cmp    eax,0x210004
   140043dda:	add    BYTE PTR [rax],al
   140043ddc:	jo     0x140043dba
   140043dde:	add    al,BYTE PTR [rax]
   140043de0:	test   esp,ebx
   140043de2:	add    al,BYTE PTR [rax]
   140043de4:	cld    
   140043de5:	cmp    eax,0x5210004
   140043dea:	add    al,BYTE PTR [rax]
   140043dec:	add    eax,0x70000674
   140043df1:	fadd   QWORD PTR [rdx]
   140043df3:	add    BYTE PTR [rbp-0x3fffd24],al
   140043df9:	cmp    eax,0xa010004
   140043dfe:	add    al,0x0
   140043e00:	or     dh,BYTE PTR [rdi+rax*1]
   140043e03:	add    BYTE PTR [rdx],cl
   140043e05:	xor    al,BYTE PTR [rsi]
   140043e07:	(bad)  
   140043e08:	adc    DWORD PTR [rax],ebx
   140043e0a:	add    al,0x0
   140043e0c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140043e0f:	add    BYTE PTR [rdx],cl
   140043e11:	push   rdx
   140043e12:	(bad)  
   140043e13:	jo     0x140043dc9
   140043e15:	push   rbx
   140043e16:	add    DWORD PTR [rax],eax
   140043e18:	and    al,dl
   140043e1a:	add    eax,DWORD PTR [rax]
   140043e1c:	(bad)  
   140043e1d:	(bad)  
   140043e1e:	(bad)  
   140043e1f:	jmp    rax
   140043e21:	rex.XB add eax,DWORD PTR [r8]
   140043e24:	add    BYTE PTR [rax],al
   140043e26:	add    BYTE PTR [rax],al
   140043e28:	add    BYTE PTR [rbx+rax*1+0x0],al
   140043e2c:	add    DWORD PTR [rax],eax
   140043e2e:	add    BYTE PTR [rax],al
   140043e30:	and    BYTE PTR [rbx+rax*1+0x0],al
   140043e34:	add    al,BYTE PTR [rax]
   140043e36:	add    BYTE PTR [rax],al
   140043e38:	rex
   140043e39:	add    r8d,DWORD PTR [rax]
   140043e3c:	add    eax,DWORD PTR [rax]
   140043e3e:	add    BYTE PTR [rax],al
   140043e40:	(bad)  
   140043e41:	add    r8d,DWORD PTR [rax]
   140043e44:	nop
   140043e45:	fild   WORD PTR [rdx]
   140043e47:	add    bh,bh
   140043e49:	(bad)  
   140043e4a:	(bad)  
   140043e4b:	push   QWORD PTR [rsi+0x2df]
   140043e51:	add    BYTE PTR [rax],al
   140043e53:	add    bh,al
   140043e55:	fild   WORD PTR [rdx]
   140043e57:	add    BYTE PTR [rcx],al
   140043e59:	add    BYTE PTR [rax],al
   140043e5b:	add    dh,dl
   140043e5d:	fild   WORD PTR [rdx]
   140043e5f:	add    BYTE PTR [rdx],al
   140043e61:	add    BYTE PTR [rax],al
   140043e63:	add    ch,ah
   140043e65:	fild   WORD PTR [rdx]
   140043e67:	add    BYTE PTR [rbx],al
   140043e69:	add    BYTE PTR [rax],al
   140043e6b:	add    ch,bh
   140043e6d:	fild   WORD PTR [rdx]
   140043e6f:	add    BYTE PTR [rax+rax*1],al
   140043e72:	add    BYTE PTR [rax],al
   140043e74:	or     eax,esp
   140043e76:	add    al,BYTE PTR [rax]
   140043e78:	(bad)  
   140043e79:	(bad)  
   140043e7a:	(bad)  
   140043e7b:	call   QWORD PTR [rcx]
   140043e7d:	sbb    BYTE PTR [rax+rax*1],al
   140043e80:	sbb    BYTE PTR [rcx+rcx*1],dh
   140043e83:	add    BYTE PTR [rdx],cl
   140043e85:	push   rdx
   140043e86:	(bad)  
   140043e87:	jo     0x140043e3d
   140043e89:	push   rbx
   140043e8a:	add    DWORD PTR [rax],eax
   140043e8c:	push   rax
   140043e8d:	rol    BYTE PTR [rbx],1
   140043e8f:	add    BYTE PTR [rax],ah
   140043e91:	loopne 0x140043e95
   140043e93:	add    bh,bh
   140043e95:	(bad)  
   140043e96:	(bad)  
   140043e97:	(bad)  
   140043e98:	cmp    esp,eax
   140043e9a:	add    al,BYTE PTR [rax]
   140043e9c:	add    al,0x0
   140043e9e:	add    BYTE PTR [rax],al
   140043ea0:	rex.B loopne 0x140043ea5
   140043ea3:	add    BYTE PTR [rbx],al
   140043ea5:	add    BYTE PTR [rax],al
   140043ea7:	add    BYTE PTR [rdx-0x20],dh
   140043eaa:	add    al,BYTE PTR [rax]
   140043eac:	add    al,BYTE PTR [rax]
   140043eae:	add    BYTE PTR [rax],al
   140043eb0:	xchg   edx,eax
   140043eb1:	loopne 0x140043eb5
   140043eb3:	add    BYTE PTR [rcx],al
   140043eb5:	add    BYTE PTR [rax],al
   140043eb7:	add    BYTE PTR [rdx+0x2e0],dh
   140043ebd:	add    BYTE PTR [rax],al
   140043ebf:	add    dl,dl
   140043ec1:	loopne 0x140043ec5
   140043ec3:	add    bh,bh
   140043ec5:	(bad)  
   140043ec6:	(bad)  
   140043ec7:	jmp    QWORD PTR [rcx]
   140043ec9:	add    BYTE PTR [rax],al
   140043ecb:	add    al,dh
   140043ecd:	loopne 0x140043ed1
   140043ecf:	add    BYTE PTR [rsi-0x13fffd1e],dl
   140043ed5:	ds add al,0x0
   140043ed8:	and    DWORD PTR [rax],ecx
   140043eda:	add    al,BYTE PTR [rax]
   140043edc:	or     ah,dh
   140043ede:	adc    eax,0x2e0f000
   140043ee3:	add    BYTE PTR [rsi-0x13fffd1e],dl
   140043ee9:	ds add al,0x0
   140043eec:	sbb    DWORD PTR [rsi],ebx
   140043eee:	or     BYTE PTR [rax],al
   140043ef0:	setb   BYTE PTR [rbx]
   140043ef3:	loopne 0x140043efe
   140043ef5:	rol    BYTE PTR [rdi],1
   140043ef7:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14364436e
   140043efe:	add    dh,BYTE PTR [rax]
   140043f00:	sbb    BYTE PTR [rax+0x1],0x0
   140043f04:	rex.W add BYTE PTR [rax],al
   140043f07:	add    BYTE PTR [rcx],dl
   140043f09:	sbb    al,BYTE PTR [rdi]
   140043f0b:	add    BYTE PTR [rdx],bl
   140043f0d:	xor    al,0x27
   140043f0f:	add    BYTE PTR [rip+0x6002201],cl        # 0x146046116
   140043f15:	jo     0x140043f1c
   140043f17:	(bad)  
   140043f18:	add    al,0x50
   140043f1a:	add    BYTE PTR [rax],al
   140043f1c:	mov    ah,0x53
   140043f1e:	add    DWORD PTR [rax],eax
   140043f20:	adc    al,0x3
   140043f23:	add    bh,bh
   140043f25:	(bad)  
   140043f26:	(bad)  
   140043f27:	inc    DWORD PTR [rax+0x344]
   140043f2d:	add    BYTE PTR [rax],al
   140043f2f:	add    BYTE PTR [rax-0xfffcbc],ah
   140043f35:	(bad)  
   140043f36:	(bad)  
   140043f37:	jmp    QWORD PTR [rax-0x6ffffcbc]
   140043f3d:	jrcxz  0x140043f41
   140043f3f:	add    bh,bh
   140043f41:	(bad)  
   140043f42:	(bad)  
   140043f43:	(bad)  
   140043f44:	(bad)  
   140043f46:	add    al,BYTE PTR [rax]
   140043f48:	add    BYTE PTR [rax],al
   140043f4a:	add    BYTE PTR [rax],al
   140043f4c:	in     eax,dx
   140043f4d:	jrcxz  0x140043f51
   140043f4f:	add    BYTE PTR [rcx],al
   140043f51:	add    BYTE PTR [rax],al
   140043f53:	add    BYTE PTR [rdi],bh
   140043f55:	in     al,0x2
   140043f57:	add    BYTE PTR [rax],al
   140043f59:	add    BYTE PTR [rax],al
   140043f5b:	add    BYTE PTR [rcx-0x1c],al
   140043f5e:	add    al,BYTE PTR [rax]
   140043f60:	add    al,BYTE PTR [rax]
   140043f62:	add    BYTE PTR [rax],al
   140043f64:	pop    rsi
   140043f65:	in     al,0x2
   140043f67:	add    bh,bh
   140043f69:	(bad)  
   140043f6a:	(bad)  
   140043f6b:	call   QWORD PTR [rcx]
   140043f6d:	(bad)  
   140043f6e:	(bad)  
   140043f6f:	add    BYTE PTR [rsi],dl
   140043f71:	xor    al,0xf
   140043f73:	add    BYTE PTR [rax],cl
   140043f75:	jb     0x140043f7b
   140043f77:	jo     0x140043f7c
   140043f79:	(bad)  
   140043f7a:	add    dl,BYTE PTR [rax-0x4c]
   140043f7d:	push   rbx
   140043f7e:	add    DWORD PTR [rax],eax
   140043f80:	mov    al,0xd0
   140043f82:	add    eax,DWORD PTR [rax]
   140043f84:	(bad)  
   140043f85:	(bad)  
   140043f86:	(bad)  
   140043f87:	call   rax
   140043f89:	add    r8d,DWORD PTR [rax]
   140043f8c:	shl    ah,1
   140043f8e:	add    al,BYTE PTR [rax]
   140043f90:	(bad)  
   140043f91:	(bad)  
   140043f92:	(bad)  
   140043f93:	push   rsi
   140043f95:	in     al,0x2
   140043f97:	add    BYTE PTR [rax],al
   140043f99:	add    BYTE PTR [rax],al
   140043f9b:	add    BYTE PTR [rax],al
   140043f9d:	out    0x2,al
   140043f9f:	add    bh,bh
   140043fa1:	(bad)  
   140043fa2:	(bad)  
   140043fa3:	jmp    QWORD PTR [rcx]
   140043fa5:	add    BYTE PTR [rax],al
   140043fa7:	add    BYTE PTR [rax],ah
   140043fa9:	out    0x2,al
   140043fab:	add    BYTE PTR [rsi-0x1a],ah
   140043fae:	add    al,BYTE PTR [rax]
   140043fb0:	add    al,0x40
   140043fb2:	add    al,0x0
   140043fb4:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4093fbc
   140043fba:	(bad)  
   140043fbb:	add    BYTE PTR [rax],ah
   140043fbd:	out    0x2,al
   140043fbf:	add    BYTE PTR [rsi-0x1a],ah
   140043fc2:	add    al,BYTE PTR [rax]
   140043fc4:	add    al,0x40
   140043fc6:	add    al,0x0
   140043fc8:	add    DWORD PTR [rdx+rcx*1],edx
   140043fcb:	add    BYTE PTR [rsp+rsi*1],dl
   140043fce:	or     eax,0x10321400
   140043fd3:	lock (bad) 
   140043fd5:	loopne 0x140043fe3
   140043fd7:	ror    BYTE PTR [rdx],1
   140043fd9:	ror    BYTE PTR [rax],0x70
   140043fdc:	(bad)  
   140043fdd:	(bad)  
   140043fde:	(bad)  
   140043fdf:	push   rax
   140043fe0:	and    DWORD PTR [rax],eax
   140043fe2:	add    BYTE PTR [rax],al
   140043fe4:	lock jmp 0x12a203fec
   140043fea:	add    al,BYTE PTR [rax]
   140043fec:	add    al,0x40
   140043fee:	add    al,0x0
   140043ff0:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4093ff8
   140043ff6:	(bad)  
   140043ff7:	add    al,dh
   140043ff9:	jmp    0x12a204000
   140043ffe:	add    al,BYTE PTR [rax]
   140044000:	add    al,0x40
   140044002:	add    al,0x0
   140044004:	add    DWORD PTR [rdi],ecx
   140044006:	(bad)  
   140044007:	add    BYTE PTR [rdi],cl
   140044009:	push   rsp
   14004400a:	or     BYTE PTR [rax],al
   14004400c:	sysenter 
   14004400e:	(bad)  
   14004400f:	add    BYTE PTR [rdi],cl
   140044011:	xor    cl,BYTE PTR [rbx]
   140044013:	(bad)  
   140044014:	adc    DWORD PTR [rcx],ebx
   140044016:	(bad)  
   140044017:	add    BYTE PTR [rcx],bl
   140044019:	or     al,BYTE PTR fs:[rax]
   14004401c:	adc    al,0x34
   14004401e:	or     BYTE PTR [rax],al
   140044020:	(bad)  
   140044021:	push   rdx
   140044022:	add    dh,BYTE PTR [rax-0x4c]
   140044025:	push   rbx
   140044026:	add    DWORD PTR [rax],eax
   140044028:	lock rol BYTE PTR [rbx],1
   14004402b:	add    bh,bh
   14004402d:	(bad)  
   14004402e:	(bad)  
   14004402f:	push   rax
   140044031:	add    r8d,DWORD PTR [rax]
   140044034:	(bad)  
   140044035:	(bad)  
   140044036:	(bad)  
   140044037:	call   QWORD PTR [rax]
   140044039:	add    r8d,DWORD PTR [r8]
   14004403c:	(bad)  
   14004403d:	(bad)  
   14004403e:	(bad)  
   14004403f:	push   QWORD PTR [rax]
   140044041:	add    r8d,DWORD PTR [r8]
   140044044:	(bad)  
   140044045:	(bad)  
   140044046:	(bad)  
   140044047:	call   QWORD PTR [rax+0x45]
   14004404a:	add    eax,DWORD PTR [rax]
   14004404c:	(bad)  
   14004404d:	(bad)  
   14004404e:	(bad)  
   14004404f:	push   QWORD PTR [rax+0x45]
   140044052:	add    eax,DWORD PTR [rax]
   140044054:	(bad)  
   140044055:	(bad)  
   140044056:	(bad)  
   140044057:	call   QWORD PTR [rax-0x6ffffcbb]
   14004405d:	(bad)  
   14004405e:	add    al,BYTE PTR [rax]
   140044060:	(bad)  
   140044061:	(bad)  
   140044062:	(bad)  
   140044063:	jmp    QWORD PTR [rcx]
   140044065:	jmp    0x140044069
   140044067:	add    BYTE PTR [rax],al
   140044069:	add    BYTE PTR [rax],al
   14004406b:	add    BYTE PTR [rdx],dh
   14004406d:	jmp    0x140044071
   14004406f:	add    bh,bh
   140044071:	(bad)  
   140044072:	(bad)  
   140044073:	call   FWORD PTR [rdi-0x15]
   140044076:	add    al,BYTE PTR [rax]
   140044078:	add    DWORD PTR [rax],eax
   14004407a:	add    BYTE PTR [rax],al
   14004407c:	jo     0x140044069
   14004407e:	add    al,BYTE PTR [rax]
   140044080:	(bad)  
   140044081:	(bad)  
   140044082:	(bad)  
   140044083:	call   FWORD PTR [rbp+0x20002eb]
   140044089:	add    BYTE PTR [rax],al
   14004408b:	add    BYTE PTR [rbp-0xfffd15],dh
   140044091:	(bad)  
   140044092:	(bad)  
   140044093:	jmp    rsi
   140044095:	jmp    0x140044099
   140044097:	add    BYTE PTR [rbx],al
   140044099:	add    BYTE PTR [rax],al
   14004409b:	add    bh,dh
   14004409d:	jmp    0x1400440a1
   14004409f:	add    bh,bh
   1400440a1:	(bad)  
   1400440a2:	(bad)  
   1400440a3:	call   FWORD PTR [rbx]
   1400440a5:	in     al,dx
   1400440a6:	add    al,BYTE PTR [rax]
   1400440a8:	add    eax,0x2c000000
   1400440ad:	in     al,dx
   1400440ae:	add    al,BYTE PTR [rax]
   1400440b0:	(bad)  
   1400440b1:	(bad)  
   1400440b2:	(bad)  
   1400440b3:	(bad)  
   1400440b4:	cmp    eax,0x40002ec
   1400440b9:	add    BYTE PTR [rax],al
   1400440bb:	add    BYTE PTR [rbp-0x14],dl
   1400440be:	add    al,BYTE PTR [rax]
   1400440c0:	(bad)  
   1400440c1:	(bad)  
   1400440c2:	(bad)  
   1400440c3:	call   QWORD PTR [rcx]
   1400440c5:	and    eax,0x6425000c
   1400440ca:	adc    DWORD PTR [rax],eax
   1400440cc:	and    DWORD PTR [rax+rdx*1+0x0],edx
   1400440d0:	sbb    eax,0x10000e34
   1400440d5:	jb     0x1400440e3
   1400440d7:	lock or ah,al
   1400440da:	or     al,dl
   1400440dc:	(bad)  
   1400440dd:	rol    BYTE PTR [rax+rsi*2],0xb4
   1400440e1:	push   rbx
   1400440e2:	add    DWORD PTR [rax],eax
   1400440e4:	xor    cl,dl
   1400440e6:	add    eax,DWORD PTR [rax]
   1400440e8:	(bad)  
   1400440e9:	(bad)  
   1400440ea:	(bad)  
   1400440eb:	push   QWORD PTR [rax+0x345]
   1400440f1:	add    BYTE PTR [rax],al
   1400440f3:	add    al,dl
   1400440f5:	add    r8d,DWORD PTR [r8]
   1400440f8:	sub    ah,0x2
   1400440fb:	add    bh,bh
   1400440fd:	(bad)  
   1400440fe:	(bad)  
   1400440ff:	inc    DWORD PTR [rip+0x2ed]        # 0x1400443f2
   140044105:	add    BYTE PTR [rax],al
   140044107:	add    BYTE PTR [rax],bl
   140044109:	in     eax,dx
   14004410a:	add    al,BYTE PTR [rax]
   14004410c:	add    DWORD PTR [rax],eax
   14004410e:	add    BYTE PTR [rax],al
   140044110:	xor    ch,ch
   140044112:	add    al,BYTE PTR [rax]
   140044114:	add    BYTE PTR [rax],al
   140044116:	add    BYTE PTR [rax],al
   140044118:	ss in  eax,dx
   14004411a:	add    al,BYTE PTR [rax]
   14004411c:	(bad)  
   14004411d:	(bad)  
   14004411e:	(bad)  
   14004411f:	inc    DWORD PTR [rcx]
   140044121:	sbb    cl,BYTE PTR [rdx]
   140044123:	add    BYTE PTR [rdx],bl
   140044125:	je     0x140044132
   140044127:	add    BYTE PTR [rdx],bl
   140044129:	or     al,BYTE PTR fs:[rax]
   14004412c:	sbb    dl,BYTE PTR [rcx+rcx*1+0x0]
   140044130:	sbb    dh,BYTE PTR [rax+rcx*1]
   140044133:	add    BYTE PTR [rdx],bl
   140044135:	push   rdx
   140044136:	(bad)  
   140044137:	rol    BYTE PTR [rcx],0x1e
   14004413a:	or     al,0x0
   14004413c:	(bad)  
   14004413d:	je     0x14004414c
   14004413f:	add    BYTE PTR [rsi],bl
   140044141:	fs or  al,0x0
   140044144:	(bad)  
   140044145:	push   rsp
   140044146:	or     eax,DWORD PTR [rax]
   140044148:	(bad)  
   140044149:	xor    al,0xa
   14004414b:	add    BYTE PTR [rsi],bl
   14004414d:	push   rdx
   14004414e:	sbb    ah,al
   140044150:	sbb    al,dl
   140044152:	(bad)  
   140044153:	shl    BYTE PTR [rcx],0x0
   140044156:	add    al,BYTE PTR [rax]
   140044158:	add    BYTE PTR [rax+rcx*1+0x0],dl
   14004415c:	shl    al,0x2
   14004415f:	add    BYTE PTR [rsi-0x73fffd0f],al
   140044165:	rex.B add al,0x0
   140044168:	and    DWORD PTR [rax],eax
   14004416a:	add    BYTE PTR [rax],al
   14004416c:	shl    al,0x2
   14004416f:	add    BYTE PTR [rsi-0x73fffd0f],al
   140044175:	rex.B add al,0x0
   140044178:	and    DWORD PTR [rip+0x54050002],eax        # 0x194094180
   14004417e:	or     BYTE PTR [rax],al
   140044180:	shl    al,0x2
   140044183:	add    BYTE PTR [rsi-0x73fffd0f],al
   140044189:	rex.B add al,0x0
   14004418c:	add    DWORD PTR [rip+0x74150008],edx        # 0x1b419419a
   140044192:	or     eax,DWORD PTR [rax]
   140044194:	adc    eax,0x15000a64
   140044199:	xor    al,0x9
   14004419b:	add    BYTE PTR [rip+0x19c01152],dl        # 0x159c452f3
   1400441a1:	and    eax,0xe20d0007
   1400441a6:	or     eax,edx
   1400441a8:	(bad)  
   1400441a9:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143644620
   1400441b0:	add    dh,BYTE PTR [rax]
   1400441b2:	add    BYTE PTR [rax],al
   1400441b4:	jo     0x140044214
   1400441b6:	add    DWORD PTR [rax],eax
   1400441b8:	(bad)  
   1400441b9:	rol    DWORD PTR [rbx],1
   1400441bb:	add    BYTE PTR [rdx+0x0],ah
   1400441be:	add    BYTE PTR [rax],al
   1400441c0:	(bad)  
   1400441c1:	(bad)  
   1400441c2:	(bad)  
   1400441c3:	push   rax
   1400441c5:	add    r8d,DWORD PTR [r8]
   1400441c8:	shl    dl,1
   1400441ca:	add    al,BYTE PTR [rax]
   1400441cc:	(bad)  
   1400441cd:	(bad)  
   1400441ce:	(bad)  
   1400441cf:	dec    esi
   1400441d1:	hlt    
   1400441d2:	add    al,BYTE PTR [rax]
   1400441d4:	add    BYTE PTR [rax],al
   1400441d6:	add    BYTE PTR [rax],al
   1400441d8:	repnz hlt 
   1400441da:	add    al,BYTE PTR [rax]
   1400441dc:	(bad)  
   1400441dd:	(bad)  
   1400441de:	(bad)  
   1400441df:	call   FWORD PTR [rcx]
   1400441e1:	(bad)  
   1400441e2:	or     al,BYTE PTR [rax]
   1400441e4:	adc    al,0x1
   1400441e6:	cmp    eax,DWORD PTR [rax]
   1400441e8:	or     eax,0x9e00bf0
   1400441ed:	rol    BYTE PTR [rdi],1
   1400441ef:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x143644666
   1400441f6:	add    dh,BYTE PTR [rax]
   1400441f8:	jo     0x140044258
   1400441fa:	add    DWORD PTR [rax],eax
   1400441fc:	nop
   1400441fd:	rol    DWORD PTR [rbx],1
   1400441ff:	add    dl,al
   140044201:	add    DWORD PTR [rax],eax
   140044203:	add    bh,bh
   140044205:	(bad)  
   140044206:	(bad)  
   140044207:	call   QWORD PTR [rax]
   140044209:	rex.RX add r8d,DWORD PTR [rax]
   14004420c:	(bad)  
   14004420d:	(bad)  
   14004420e:	(bad)  
   14004420f:	push   QWORD PTR [rax]
   140044211:	rex.RX add r8d,DWORD PTR [rax]
   140044214:	(bad)  
   140044215:	(bad)  
   140044216:	(bad)  
   140044217:	call   QWORD PTR [rax+0x46]
   14004421a:	add    eax,DWORD PTR [rax]
   14004421c:	xor    ch,dh
   14004421e:	add    al,BYTE PTR [rax]
   140044220:	(bad)  
   140044221:	(bad)  
   140044222:	(bad)  
   140044223:	dec    esi
   140044225:	test   BYTE PTR [rdx],0x0
   140044228:	add    BYTE PTR [rax],al
   14004422a:	add    BYTE PTR [rax],al
   14004422c:	sbb    edi,esi
   14004422e:	add    al,BYTE PTR [rax]
   140044230:	(bad)  
   140044231:	(bad)  
   140044232:	(bad)  
   140044233:	call   FWORD PTR [rax+rdi*8]
   140044236:	add    al,BYTE PTR [rax]
   140044238:	add    DWORD PTR [rax],eax
   14004423a:	add    BYTE PTR [rax],al
   14004423c:	push   0xfffffffffffffff8
   14004423e:	add    al,BYTE PTR [rax]
   140044240:	(bad)  
   140044241:	(bad)  
   140044242:	(bad)  
   140044243:	(bad)  
   140044244:	jns    0x14004423f
   140044246:	add    al,BYTE PTR [rax]
   140044248:	add    al,BYTE PTR [rax]
   14004424a:	add    BYTE PTR [rax],al
   14004424c:	(bad)  
   14004424d:	stc    
   14004424e:	add    al,BYTE PTR [rax]
   140044250:	(bad)  
   140044251:	(bad)  
   140044252:	(bad)  
   140044253:	inc    DWORD PTR [rcx]
   140044255:	sbb    cl,BYTE PTR [rdx]
   140044257:	add    BYTE PTR [rdx],bl
   140044259:	je     0x14004426a
   14004425b:	add    BYTE PTR [rdx],bl
   14004425d:	fs (bad) 
   14004425f:	add    BYTE PTR [rdx],bl
   140044261:	push   rsp
   140044262:	or     eax,0xc341a00
   140044267:	add    BYTE PTR [rdx],bl
   140044269:	xchg   edx,eax
   14004426a:	(bad)  
   14004426b:	rcr    BYTE PTR [rcx],0x29
   14004426e:	or     DWORD PTR [rax],eax
   140044270:	adc    edx,esp
   140044272:	or     eax,0x9e00bf0
   140044277:	rol    BYTE PTR [rdi],1
   140044279:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x1436446f0
   140044280:	add    dh,BYTE PTR [rax]
   140044282:	add    BYTE PTR [rax],al
   140044284:	jo     0x1400442e4
   140044286:	add    DWORD PTR [rax],eax
   140044288:	lock rol DWORD PTR [rbx],1
   14004428b:	add    BYTE PTR [rdx+0x0],ch
   14004428e:	add    BYTE PTR [rax],al
   140044290:	(bad)  
   140044291:	(bad)  
   140044292:	(bad)  
   140044293:	push   QWORD PTR [rax+0x46]
   140044296:	add    eax,DWORD PTR [rax]
   140044298:	add    ch,bh
   14004429a:	add    al,BYTE PTR [rax]
   14004429c:	(bad)  
   14004429d:	(bad)  
   14004429e:	(bad)  
   14004429f:	dec    DWORD PTR [rcx]
   1400442a1:	inc    BYTE PTR [rdx]
   1400442a3:	add    BYTE PTR [rax],al
   1400442a5:	add    BYTE PTR [rax],al
   1400442a7:	add    BYTE PTR [rax],dh
   1400442a9:	inc    DWORD PTR [rdx]
   1400442ab:	add    bh,bh
   1400442ad:	(bad)  
   1400442ae:	(bad)  
   1400442af:	dec    DWORD PTR [rcx-0x1]
   1400442b2:	add    al,BYTE PTR [rax]
   1400442b4:	add    BYTE PTR [rax],al
   1400442b6:	add    BYTE PTR [rax],al
   1400442b8:	jae    0x1400442b9
   1400442ba:	add    al,BYTE PTR [rax]
   1400442bc:	(bad)  
   1400442bd:	(bad)  
   1400442be:	(bad)  
   1400442bf:	jmp    QWORD PTR [rbp+0x2ff]
   1400442c5:	add    BYTE PTR [rax],al
   1400442c7:	add    BYTE PTR [rbx],dl
   1400442c9:	add    BYTE PTR [rbx],al
   1400442cb:	add    bh,bh
   1400442cd:	(bad)  
   1400442ce:	(bad)  
   1400442cf:	jmp    FWORD PTR [rip+0x300]        # 0x1400445d5
   1400442d5:	add    BYTE PTR [rax],al
   1400442d7:	add    BYTE PTR [rdx+0x0],cl
   1400442da:	add    eax,DWORD PTR [rax]
   1400442dc:	(bad)  
   1400442dd:	(bad)  
   1400442de:	(bad)  
   1400442df:	jmp    QWORD PTR [rbx+0x0]
   1400442e2:	add    eax,DWORD PTR [rax]
   1400442e4:	add    BYTE PTR [rax],al
   1400442e6:	add    BYTE PTR [rax],al
   1400442e8:	add    BYTE PTR [rax],0x3
   1400442eb:	add    bh,bh
   1400442ed:	(bad)  
   1400442ee:	(bad)  
   1400442ef:	call   FWORD PTR [rcx+0x300]
   1400442f5:	add    BYTE PTR [rax],al
   1400442f7:	add    BYTE PTR [rsi-0xfffd00],dh
   1400442fd:	(bad)  
   1400442fe:	(bad)  
   1400442ff:	dec    edi
   140044301:	add    BYTE PTR [rbx],al
   140044303:	add    BYTE PTR [rax],al
   140044305:	add    BYTE PTR [rax],al
   140044307:	add    bl,dh
   140044309:	add    BYTE PTR [rbx],al
   14004430b:	add    bh,bh
   14004430d:	(bad)  
   14004430e:	(bad)  
   14004430f:	jmp    QWORD PTR [rdi]
   140044311:	add    DWORD PTR [rbx],eax
   140044313:	add    BYTE PTR [rax],al
   140044315:	add    BYTE PTR [rax],al
   140044317:	add    BYTE PTR [rcx+rax*1+0x3],al
   14004431b:	add    bh,bh
   14004431d:	(bad)  
   14004431e:	(bad)  
   14004431f:	call   FWORD PTR [rcx]
   140044321:	or     al,BYTE PTR [rdx]
   140044323:	add    BYTE PTR [rdx],cl
   140044325:	xor    al,BYTE PTR [rsi]
   140044327:	push   rax
   140044328:	mov    ah,0x53
   14004432a:	add    DWORD PTR [rax],eax
   14004432c:	and    dl,dl
   14004432e:	add    eax,DWORD PTR [rax]
   140044330:	sbb    DWORD PTR [rbx],ebx
   140044332:	(bad)  
   140044333:	add    BYTE PTR [rbx],bl
   140044335:	xor    al,0xb
   140044337:	add    BYTE PTR [rip+0x7c00952],cl        # 0x147c44c8f
   14004433d:	jo     0x140044345
   14004433f:	(bad)  
   140044340:	mov    ah,0x53
   140044342:	add    DWORD PTR [rax],eax
   140044344:	and    dl,dl
   140044346:	add    eax,DWORD PTR [rax]
   140044348:	add    DWORD PTR [rax],eax
   14004434a:	add    BYTE PTR [rax],al
   14004434c:	add    DWORD PTR [rax],eax
   14004434e:	add    BYTE PTR [rax],al
   140044350:	or     BYTE PTR [rax],al
   140044352:	add    BYTE PTR [rax],al
   140044354:	add    DWORD PTR [rax],eax
   140044356:	add    BYTE PTR [rax],al
   140044358:	pop    rsp
   140044359:	rex.XB add al,0x0
   14004435c:	add    BYTE PTR [rax],al
	...
   140044367:	add    BYTE PTR [rax+0x38000346],dh
   14004436d:	add    BYTE PTR [rax],al
   14004436f:	add    bh,bh
   140044371:	(bad)  
   140044372:	(bad)  
   140044373:	call   QWORD PTR [rax-0xfffcba]
   140044379:	(bad)  
   14004437a:	(bad)  
   14004437b:	inc    DWORD PTR [rax]
   14004437d:	add    BYTE PTR [rax],al
   14004437f:	add    bh,bh
   140044381:	(bad)  
   140044382:	(bad)  
   140044383:	inc    DWORD PTR [rax]
   140044385:	add    BYTE PTR [rax],al
   140044387:	add    BYTE PTR [rdx],al
   140044389:	add    BYTE PTR [rax],al
   14004438b:	add    BYTE PTR [rax],al
   14004438d:	add    BYTE PTR [rax],al
   14004438f:	add    BYTE PTR [rbx],al
   140044391:	add    BYTE PTR [rax],al
   140044393:	add    BYTE PTR [rax],al
   140044395:	add    BYTE PTR [rax],al
   140044397:	add    BYTE PTR [rdx],al
   140044399:	add    BYTE PTR [rax],al
   14004439b:	add    BYTE PTR [rax],al
   14004439d:	add    BYTE PTR [rax],al
   14004439f:	add    BYTE PTR [rip+0x0],al        # 0x1400443a5
   1400443a5:	add    BYTE PTR [rax],al
   1400443a7:	add    BYTE PTR [rdx],al
   1400443a9:	add    BYTE PTR [rax],al
   1400443ab:	add    BYTE PTR [rax],al
   1400443ad:	add    BYTE PTR [rax],al
   1400443af:	add    BYTE PTR [rdi],al
   1400443b1:	add    BYTE PTR [rax],al
   1400443b3:	add    BYTE PTR [rax],al
   1400443b5:	add    BYTE PTR [rax],al
   1400443b7:	add    al,dl
   1400443b9:	add    DWORD PTR [rbx],eax
   1400443bb:	add    bh,bh
   1400443bd:	(bad)  
   1400443be:	(bad)  
   1400443bf:	inc    DWORD PTR [rax+0x2]
   1400443c2:	add    eax,DWORD PTR [rax]
   1400443c4:	add    BYTE PTR [rax],al
   1400443c6:	add    BYTE PTR [rax],al
   1400443c8:	rex.WXB add al,BYTE PTR [r11]
   1400443cb:	add    bh,bh
   1400443cd:	(bad)  
   1400443ce:	(bad)  
   1400443cf:	call   FWORD PTR [rsi+0x1000302]
   1400443d5:	add    BYTE PTR [rax],al
   1400443d7:	add    BYTE PTR [rdi],al
   1400443d9:	add    eax,DWORD PTR [rbx]
   1400443db:	add    bh,bh
   1400443dd:	(bad)  
   1400443de:	(bad)  
   1400443df:	dec    DWORD PTR [rcx]
   1400443e1:	add    eax,DWORD PTR [rbx]
   1400443e3:	add    BYTE PTR [rcx],al
   1400443e5:	add    BYTE PTR [rax],al
   1400443e7:	add    BYTE PTR [rbx+rax*1],bl
   1400443ea:	add    eax,DWORD PTR [rax]
   1400443ec:	(bad)  
   1400443ed:	(bad)  
   1400443ee:	(bad)  
   1400443ef:	push   QWORD PTR [rax+0x346]
   1400443f5:	add    BYTE PTR [rax],al
   1400443f7:	add    BYTE PTR [rbp+0x2000346],bh
   1400443fd:	add    BYTE PTR [rax],al
   1400443ff:	add    al,ch
   140044401:	rex.RX add r8d,DWORD PTR [rax]
   140044404:	add    BYTE PTR [rax],al
   140044406:	add    BYTE PTR [rax],al
   140044408:	icebp  
   140044409:	rex.RX add r8d,DWORD PTR [rax]
   14004440c:	add    al,BYTE PTR [rax]
   14004440e:	add    BYTE PTR [rax],al
   140044410:	sti    
   140044411:	rex.RX add r8d,DWORD PTR [rax]
   140044414:	add    BYTE PTR [rax],al
   140044416:	add    BYTE PTR [rax],al
   140044418:	sbb    DWORD PTR [rdx],ecx
   14004441a:	add    al,BYTE PTR [rax]
   14004441c:	or     dh,BYTE PTR [rdx]
   14004441e:	(bad)  
   14004441f:	push   rax
   140044420:	mov    ah,0x53
   140044422:	add    DWORD PTR [rax],eax
   140044424:	push   rax
   140044425:	rol    BYTE PTR [rbx],cl
   140044427:	add    BYTE PTR [rcx],bl
   140044429:	adc    eax,0x720c0004
   14004442e:	or     BYTE PTR [rax+0x7],dh
   140044431:	(bad)  
   140044432:	(bad)  
   140044433:	xor    BYTE PTR [rbx+rdx*2-0x2dafffff],dh
   14004443a:	add    eax,DWORD PTR [rax]
   14004443c:	add    al,BYTE PTR [rax]
   14004443e:	add    BYTE PTR [rax],al
   140044440:	add    al,BYTE PTR [rax]
   140044442:	add    BYTE PTR [rax],al
   140044444:	or     DWORD PTR [rax],eax
   140044446:	add    BYTE PTR [rax],al
   140044448:	add    DWORD PTR [rax],eax
   14004444a:	add    BYTE PTR [rax],al
   14004444c:	push   rax
   14004444d:	rex.R add al,0x0
   140044450:	add    BYTE PTR [rax],al
	...
   14004445b:	add    BYTE PTR [rax+0x47],dl
   14004445e:	add    eax,DWORD PTR [rax]
   140044460:	cmp    BYTE PTR [rax],al
   140044462:	add    BYTE PTR [rax],al
   140044464:	(bad)  
   140044465:	(bad)  
   140044466:	(bad)  
   140044467:	call   QWORD PTR [rax]
   140044469:	rex.RXB add r8d,DWORD PTR [r8]
   14004446c:	(bad)  
   14004446d:	(bad)  
   14004446e:	(bad)  
   14004446f:	push   QWORD PTR [rax]
   140044471:	rex.RXB add r8d,DWORD PTR [r8]
   140044474:	add    DWORD PTR [rax],eax
   140044476:	add    BYTE PTR [rax],al
   140044478:	add    BYTE PTR [rax],al
   14004447a:	add    BYTE PTR [rax],al
   14004447c:	add    DWORD PTR [rax],eax
   14004447e:	add    BYTE PTR [rax],al
   140044480:	add    BYTE PTR [rax],al
   140044482:	add    BYTE PTR [rax],al
   140044484:	add    eax,DWORD PTR [rax]
   140044486:	add    BYTE PTR [rax],al
   140044488:	add    BYTE PTR [rax],al
   14004448a:	add    BYTE PTR [rax],al
   14004448c:	add    al,0x0
   14004448e:	add    BYTE PTR [rax],al
   140044490:	add    BYTE PTR [rax],al
   140044492:	add    BYTE PTR [rax],al
   140044494:	add    eax,DWORD PTR [rax]
   140044496:	add    BYTE PTR [rax],al
   140044498:	add    BYTE PTR [rax],al
   14004449a:	add    BYTE PTR [rax],al
   14004449c:	(bad)  
   14004449d:	add    BYTE PTR [rax],al
   14004449f:	add    BYTE PTR [rax],al
   1400444a1:	add    BYTE PTR [rax],al
   1400444a3:	add    BYTE PTR [rbx],al
   1400444a5:	add    BYTE PTR [rax],al
   1400444a7:	add    BYTE PTR [rax],al
   1400444a9:	add    BYTE PTR [rax],al
   1400444ab:	add    BYTE PTR [rax],cl
   1400444ad:	add    BYTE PTR [rax],al
   1400444af:	add    BYTE PTR [rax],al
   1400444b1:	add    BYTE PTR [rax],al
   1400444b3:	add    BYTE PTR [rax+0x3],ah
   1400444b6:	add    eax,DWORD PTR [rax]
   1400444b8:	(bad)  
   1400444b9:	(bad)  
   1400444ba:	(bad)  
   1400444bb:	jmp    QWORD PTR [rsi+0x303]
   1400444c1:	add    BYTE PTR [rax],al
   1400444c3:	add    BYTE PTR [rbx+rax*1+0x10003],dh
   1400444ca:	add    BYTE PTR [rax],al
   1400444cc:	mov    ebp,0x2000303
   1400444d1:	add    BYTE PTR [rax],al
   1400444d3:	add    BYTE PTR [rip+0x1000304],dl        # 0x1410447dd
   1400444d9:	add    BYTE PTR [rax],al
   1400444db:	add    BYTE PTR [rdx+0x4],cl
   1400444de:	add    eax,DWORD PTR [rax]
   1400444e0:	(bad)  
   1400444e1:	(bad)  
   1400444e2:	(bad)  
   1400444e3:	call   QWORD PTR [rax+0x47]
   1400444e6:	add    eax,DWORD PTR [rax]
   1400444e8:	add    BYTE PTR [rax],al
   1400444ea:	add    BYTE PTR [rax],al
   1400444ec:	pop    rbp
   1400444ed:	rex.RXB add r8d,DWORD PTR [r8]
   1400444f0:	add    eax,DWORD PTR [rax]
   1400444f2:	add    BYTE PTR [rax],al
   1400444f4:	mov    BYTE PTR [rdi+0x3],al
   1400444f7:	add    BYTE PTR [rax],al
   1400444f9:	add    BYTE PTR [rax],al
   1400444fb:	add    BYTE PTR [rcx+0x3000347],dl
   140044501:	add    BYTE PTR [rax],al
   140044503:	add    BYTE PTR [rbx+0x347],bl
   140044509:	add    BYTE PTR [rax],al
   14004450b:	add    BYTE PTR [rcx],bl
   14004450d:	or     al,BYTE PTR [rdx]
   14004450f:	add    BYTE PTR [rdx],cl
   140044511:	xor    al,BYTE PTR [rsi]
   140044513:	push   rax
   140044514:	mov    ah,0x53
   140044516:	add    DWORD PTR [rax],eax
   140044518:	adc    dl,0x3
   14004451b:	add    BYTE PTR [rcx],bl
   14004451d:	adc    eax,0x720c0004
   140044522:	or     BYTE PTR [rax+0x7],dh
   140044525:	(bad)  
   140044526:	(bad)  
   140044527:	xor    BYTE PTR [rbx+rdx*2-0x2d7fffff],dh
   14004452e:	add    eax,DWORD PTR [rax]
   140044530:	add    al,BYTE PTR [rax]
   140044532:	add    BYTE PTR [rax],al
   140044534:	add    al,BYTE PTR [rax]
   140044536:	add    BYTE PTR [rax],al
   140044538:	or     DWORD PTR [rax],eax
   14004453a:	add    BYTE PTR [rax],al
   14004453c:	add    DWORD PTR [rax],eax
   14004453e:	add    BYTE PTR [rax],al
   140044540:	rex.R
   140044541:	rex.RB add al,0x0
   140044544:	add    BYTE PTR [rax],al
	...
   14004454f:	add    al,dh
   140044551:	rex.RXB add r8d,DWORD PTR [r8]
   140044554:	cmp    BYTE PTR [rax],al
   140044556:	add    BYTE PTR [rax],al
   140044558:	(bad)  
   140044559:	(bad)  
   14004455a:	(bad)  
   14004455b:	push   QWORD PTR [rax-0xfffcb9]
   140044561:	(bad)  
   140044562:	(bad)  
   140044563:	call   rax
   140044565:	rex.RXB add r8d,DWORD PTR [r8]
   140044568:	add    DWORD PTR [rax],eax
   14004456a:	add    BYTE PTR [rax],al
   14004456c:	add    BYTE PTR [rax],al
   14004456e:	add    BYTE PTR [rax],al
   140044570:	add    DWORD PTR [rax],eax
   140044572:	add    BYTE PTR [rax],al
   140044574:	add    BYTE PTR [rax],al
   140044576:	add    BYTE PTR [rax],al
   140044578:	add    eax,DWORD PTR [rax]
   14004457a:	add    BYTE PTR [rax],al
   14004457c:	add    BYTE PTR [rax],al
   14004457e:	add    BYTE PTR [rax],al
   140044580:	add    al,0x0
   140044582:	add    BYTE PTR [rax],al
   140044584:	add    BYTE PTR [rax],al
   140044586:	add    BYTE PTR [rax],al
   140044588:	add    eax,DWORD PTR [rax]
   14004458a:	add    BYTE PTR [rax],al
   14004458c:	add    BYTE PTR [rax],al
   14004458e:	add    BYTE PTR [rax],al
   140044590:	(bad)  
   140044591:	add    BYTE PTR [rax],al
   140044593:	add    BYTE PTR [rax],al
   140044595:	add    BYTE PTR [rax],al
   140044597:	add    BYTE PTR [rbx],al
   140044599:	add    BYTE PTR [rax],al
   14004459b:	add    BYTE PTR [rax],al
   14004459d:	add    BYTE PTR [rax],al
   14004459f:	add    BYTE PTR [rax],cl
   1400445a1:	add    BYTE PTR [rax],al
   1400445a3:	add    BYTE PTR [rax],al
   1400445a5:	add    BYTE PTR [rax],al
   1400445a7:	add    BYTE PTR [rax+0x4],dh
   1400445aa:	add    eax,DWORD PTR [rax]
   1400445ac:	(bad)  
   1400445ad:	(bad)  
   1400445ae:	(bad)  
   1400445af:	push   QWORD PTR [rsi+0x304]
   1400445b5:	add    BYTE PTR [rax],al
   1400445b7:	add    ah,al
   1400445b9:	add    al,0x3
   1400445bb:	add    BYTE PTR [rcx],al
   1400445bd:	add    BYTE PTR [rax],al
   1400445bf:	add    ch,cl
   1400445c1:	add    al,0x3
   1400445c3:	add    BYTE PTR [rdx],al
   1400445c5:	add    BYTE PTR [rax],al
   1400445c7:	add    BYTE PTR [rbx],dl
   1400445c9:	add    eax,0x10003
   1400445ce:	add    BYTE PTR [rax],al
   1400445d0:	add    rax,0xffffffffffff0003
   1400445d6:	(bad)  
   1400445d7:	push   rax
   1400445d9:	rex.RXB add r8d,DWORD PTR [r8]
   1400445dc:	add    BYTE PTR [rax],al
   1400445de:	add    BYTE PTR [rax],al
   1400445e0:	std    
   1400445e1:	rex.RXB add r8d,DWORD PTR [r8]
   1400445e4:	add    eax,DWORD PTR [rax]
   1400445e6:	add    BYTE PTR [rax],al
   1400445e8:	sub    BYTE PTR [rax+0x3],cl
   1400445eb:	add    BYTE PTR [rax],al
   1400445ed:	add    BYTE PTR [rax],al
   1400445ef:	add    BYTE PTR [rcx],dh
   1400445f1:	add    rax,QWORD PTR [rax]
   1400445f4:	add    eax,DWORD PTR [rax]
   1400445f6:	add    BYTE PTR [rax],al
   1400445f8:	cmp    ecx,DWORD PTR [rax+0x3]
   1400445fb:	add    BYTE PTR [rax],al
   1400445fd:	add    BYTE PTR [rax],al
   1400445ff:	add    BYTE PTR [rcx],al
   140044601:	sbb    cl,BYTE PTR [rdx]
   140044603:	add    BYTE PTR [rdx],bl
   140044605:	je     0x140044610
   140044607:	add    BYTE PTR [rdx],bl
   140044609:	or     BYTE PTR fs:[rax],al
   14004460c:	sbb    dl,BYTE PTR [rdi+rax*1+0x0]
   140044610:	sbb    dh,BYTE PTR [rsi+rax*1]
   140044613:	add    BYTE PTR [rdx],bl
   140044615:	xor    dl,BYTE PTR [rsi]
   140044617:	rol    BYTE PTR [rcx],0x6b
   14004461a:	or     al,0x0
   14004461c:	imul   esp,esp,0xc
   14004461f:	add    BYTE PTR [rsi+0x54],ah
   140044622:	or     eax,DWORD PTR [rax]
   140044624:	pop    rdx
   140044625:	xor    al,0xa
   140044627:	add    BYTE PTR [rsi],cl
   140044629:	fs or  eax,0xa520e00
   14004462f:	ror    BYTE PTR [rax],1
   140044631:	rol    BYTE PTR [rsi],0x70
   140044634:	and    DWORD PTR [rax],eax
   140044636:	add    BYTE PTR [rax],al
   140044638:	lock or DWORD PTR [rbx],eax
   14004463b:	add    BYTE PTR [rip+0x6000030a],dl        # 0x1a004494b
   140044641:	rex.RX add al,0x0
   140044644:	and    DWORD PTR [rdx],edx
   140044646:	(bad)  
   140044647:	add    BYTE PTR [rdx],dl
   140044649:	je     0x140044656
   14004464b:	add    BYTE PTR [rdx],cl
   14004464d:	(bad)  
   14004464e:	or     al,0x0
   140044650:	add    eax,0xf0000a54
   140044655:	or     DWORD PTR [rbx],eax
   140044657:	add    BYTE PTR [rip+0x6000030a],dl        # 0x1a0044967
   14004465d:	rex.RX add al,0x0
   140044660:	add    DWORD PTR [rcx],ecx
   140044662:	add    al,0x0
   140044664:	or     DWORD PTR [rdx+0x5],edx
   140044667:	rol    BYTE PTR [rbx],0x60
   14004466a:	add    dh,BYTE PTR [rax]
   14004466c:	and    DWORD PTR [rax],eax
   14004466e:	add    BYTE PTR [rax],al
   140044670:	xor    BYTE PTR [rbx],cl
   140044672:	add    eax,DWORD PTR [rax]
   140044674:	push   rbp
   140044675:	or     eax,DWORD PTR [rbx]
   140044677:	add    BYTE PTR [rax+0x21000446],bl
   14004467d:	adc    al,BYTE PTR [rsi]
   14004467f:	add    BYTE PTR [rdx],dl
   140044681:	je     0x14004468e
   140044683:	add    BYTE PTR [rdx],cl
   140044685:	(bad)  
   140044686:	or     al,0x0
   140044688:	add    eax,0x30000a64
   14004468d:	or     eax,DWORD PTR [rbx]
   14004468f:	add    BYTE PTR [rbp+0xb],dl
   140044692:	add    eax,DWORD PTR [rax]
   140044694:	cwde   
   140044695:	rex.RX add al,0x0
   140044698:	add    DWORD PTR [rcx],ecx
   14004469a:	add    al,0x0
   14004469c:	or     DWORD PTR [rdx+0x5],edx
   14004469f:	rol    BYTE PTR [rbx],0x50
   1400446a2:	add    dh,BYTE PTR [rax]
   1400446a4:	and    DWORD PTR [rax],eax
   1400446a6:	add    BYTE PTR [rax],al
   1400446a8:	ror    BYTE PTR [rbx+rax*1],0x0
   1400446ac:	out    0xc,al
   1400446ae:	add    eax,DWORD PTR [rax]
   1400446b0:	(bad)  
   1400446b1:	rex.RX add al,0x0
   1400446b4:	and    DWORD PTR [rax+rcx*1],edx
   1400446b7:	add    BYTE PTR [rsp+rsi*2],dl
   1400446ba:	or     al,0x0
   1400446bc:	andps  xmm1,XMMWORD PTR [rdx]
   1400446bf:	add    BYTE PTR [rdx],cl
   1400446c1:	in     al,0xd
   1400446c3:	add    BYTE PTR [rip+0xffffffffc0000b64],al        # 0x10004522d
   1400446c9:	or     al,0x3
   1400446cb:	add    dh,ah
   1400446cd:	or     al,0x3
   1400446cf:	add    ah,dl
   1400446d1:	rex.RX add al,0x0
   1400446d4:	add    DWORD PTR [rdx],ecx
   1400446d6:	add    al,0x0
   1400446d8:	or     dl,BYTE PTR [rdx+0x6]
   1400446db:	rol    BYTE PTR [rax+rax*8],1
   1400446de:	add    dh,BYTE PTR [rax]
   1400446e0:	sbb    DWORD PTR [rsi],esi
   1400446e2:	or     eax,DWORD PTR [rax]
   1400446e4:	and    al,0x34
   1400446e6:	(bad)  
   1400446e7:	add    BYTE PTR [rbx],dl
   1400446e9:	add    DWORD PTR [rax+rax*1],ebx
   1400446ec:	or     al,0xf0
   1400446ee:	or     ah,al
   1400446f0:	or     al,dl
   1400446f2:	(bad)  
   1400446f3:	rol    BYTE PTR [rax+rsi*2],0x3
   1400446f7:	(bad)  
   1400446f8:	add    dl,BYTE PTR [rax+0x0]
   1400446fb:	add    BYTE PTR [rax+0x5e],dh
   1400446fe:	add    DWORD PTR [rax],eax
   140044700:	mov    al,0xd2
   140044702:	add    eax,DWORD PTR [rax]
   140044704:	rol    BYTE PTR [rax],cl
   140044706:	add    BYTE PTR [rax],al
   140044708:	(bad)  
   140044709:	(bad)  
   14004470a:	(bad)  
   14004470b:	call   QWORD PTR [rax+0x48]
   14004470e:	add    eax,DWORD PTR [rax]
   140044710:	(bad)  
   140044711:	(bad)  
   140044712:	(bad)  
   140044713:	push   QWORD PTR [rax+0x48]
   140044716:	add    eax,DWORD PTR [rax]
   140044718:	or     BYTE PTR [rsi],0x3
   14004471b:	add    bh,bh
   14004471d:	(bad)  
   14004471e:	(bad)  
   14004471f:	call   FWORD PTR [rax+0x310]
   140044725:	add    BYTE PTR [rax],al
   140044727:	add    BYTE PTR [rax+rdx*1+0x10003],bh
   14004472e:	add    BYTE PTR [rax],al
   140044730:	int    0x10
   140044732:	add    eax,DWORD PTR [rax]
   140044734:	(bad)  
   140044735:	(bad)  
   140044736:	(bad)  
   140044737:	jmp    QWORD PTR [rcx]
   140044739:	add    BYTE PTR [rax],al
   14004473b:	add    BYTE PTR [rax+0x13],dh
   14004473e:	add    eax,DWORD PTR [rax]
   140044740:	mov    esp,0x64000313
   140044745:	rex.RXB add al,0x0
   140044748:	and    DWORD PTR [rdx],edx
   14004474a:	(bad)  
   14004474b:	add    BYTE PTR [rdx],dl
   14004474d:	(bad)  
   14004474e:	str    WORD PTR [rdx]
   140044751:	push   rsp
   140044752:	(bad)  
   140044753:	add    BYTE PTR [rip+0x70000d34],al        # 0x1b004548d
   140044759:	adc    eax,DWORD PTR [rbx]
   14004475b:	add    BYTE PTR [rbx+rdx*1+0x47640003],bh
   140044762:	add    al,0x0
   140044764:	sbb    DWORD PTR [rsi+rax*1],ebx
   140044767:	add    BYTE PTR [rip+0x7f00952],cl        # 0x147f450bf
   14004476d:	loopne 0x140044774
   14004476f:	rol    BYTE PTR [rbx],1
   140044771:	jo     0x140044775
   140044773:	(bad)  
   140044774:	sbb    BYTE PTR [rax+0x1],0x0
   140044778:	sub    BYTE PTR [rax],al
   14004477a:	add    BYTE PTR [rax],al
   14004477c:	(bad)  
   14004477d:	(bad)  
   14004477e:	(bad)  
   14004477f:	call   QWORD PTR [rax+0x11000348]
   140044785:	(bad)  
   140044786:	add    DWORD PTR [rax],eax
   140044788:	(bad)  
   140044789:	(bad)  
   14004478a:	add    BYTE PTR [rax],al
   14004478c:	mov    ah,0x53
   14004478e:	add    DWORD PTR [rax],eax
   140044790:	pop    rax
   140044791:	(bad)  
   140044792:	add    eax,DWORD PTR [rax]
   140044794:	add    DWORD PTR [rsi],eax
   140044796:	add    al,BYTE PTR [rax]
   140044798:	(bad)  
   140044799:	xor    al,BYTE PTR [rdx]
   14004479b:	push   rax
   14004479c:	(bad)  
   14004479d:	adc    eax,0xffff0003
   1400447a2:	(bad)  
   1400447a3:	push   QWORD PTR [rdi+0x15]
   1400447a6:	add    eax,DWORD PTR [rax]
   1400447a8:	add    BYTE PTR [rax],al
   1400447aa:	add    BYTE PTR [rax],al
   1400447ac:	xchg   ebx,eax
   1400447ad:	adc    eax,0xffff0003
   1400447b2:	(bad)  
   1400447b3:	(bad)  
   1400447b4:	(bad)  
   1400447b5:	(bad)  
   1400447b6:	(bad)  
   1400447b7:	push   QWORD PTR [rax+0x348]
   1400447bd:	add    BYTE PTR [rax],al
   1400447bf:	add    al,dl
   1400447c1:	add    rax,QWORD PTR [rax]
   1400447c4:	sbb    DWORD PTR [rdx],edi
   1400447c6:	add    al,0x0
   1400447c8:	sbb    al,0x1
   1400447ca:	sub    DWORD PTR [rax],eax
   1400447cc:	adc    eax,0x70301470
   1400447d1:	pop    rsi
   1400447d2:	add    DWORD PTR [rax],eax
   1400447d4:	adc    ch,0x3
   1400447d7:	add    BYTE PTR [rdx],dh
   1400447d9:	add    DWORD PTR [rax],eax
   1400447db:	add    BYTE PTR [rcx],al
   1400447dd:	(bad)  
   1400447de:	add    al,BYTE PTR [rax]
   1400447e0:	(bad)  
   1400447e1:	xor    al,BYTE PTR [rdx]
   1400447e3:	push   rax
   1400447e4:	add    DWORD PTR [rsi],eax
   1400447e6:	add    al,BYTE PTR [rax]
   1400447e8:	(bad)  
   1400447e9:	xor    al,BYTE PTR [rdx]
   1400447eb:	push   rax
   1400447ec:	mov    al,0x15
   1400447ee:	add    eax,DWORD PTR [rax]
   1400447f0:	(bad)  
   1400447f1:	(bad)  
   1400447f2:	(bad)  
   1400447f3:	(bad)  
   1400447f4:	(bad)  
   1400447f5:	adc    eax,0x3
   1400447fa:	add    BYTE PTR [rax],al
   1400447fc:	push   rdi
   1400447fd:	(bad)  
   1400447fe:	add    eax,DWORD PTR [rax]
   140044800:	(bad)  
   140044801:	(bad)  
   140044802:	(bad)  
   140044803:	push   QWORD PTR [rax+0x16]
   140044806:	add    eax,DWORD PTR [rax]
   140044808:	add    BYTE PTR [rax],al
   14004480a:	add    BYTE PTR [rax],al
   14004480c:	popf   
   14004480d:	(bad)  
   14004480e:	add    eax,DWORD PTR [rax]
   140044810:	add    DWORD PTR [rax],eax
   140044812:	add    BYTE PTR [rax],al
   140044814:	not    DWORD PTR [rdi]
   140044816:	add    eax,DWORD PTR [rax]
   140044818:	add    BYTE PTR [rax],al
   14004481a:	add    BYTE PTR [rax],al
   14004481c:	cmp    ebx,DWORD PTR [rcx]
   14004481e:	add    eax,DWORD PTR [rax]
   140044820:	(bad)  
   140044821:	(bad)  
   140044822:	(bad)  
   140044823:	(bad)  
   140044824:	(bad)  
   140044825:	(bad)  
   140044826:	(bad)  
   140044827:	inc    DWORD PTR [rax]
   140044829:	add    rax,QWORD PTR [r8]
   14004482c:	add    BYTE PTR [rax],al
   14004482e:	add    BYTE PTR [rax],al
   140044830:	and    BYTE PTR [rcx+0x3],cl
   140044833:	add    BYTE PTR [rcx],dl
   140044835:	and    al,BYTE PTR [rdx]
   140044837:	add    BYTE PTR [rsi],dl
   140044839:	add    DWORD PTR [rcx],ebx
   14004483b:	add    BYTE PTR [rbx+rdx*2-0x2a57ffff],dh
   140044842:	add    eax,DWORD PTR [rax]
   140044844:	add    DWORD PTR [rsi],eax
   140044846:	add    al,BYTE PTR [rax]
   140044848:	(bad)  
   140044849:	xor    al,BYTE PTR [rdx]
   14004484b:	push   rax
   14004484c:	add    DWORD PTR [rsi],eax
   14004484e:	add    al,BYTE PTR [rax]
   140044850:	(bad)  
   140044851:	xor    al,BYTE PTR [rdx]
   140044853:	push   rax
   140044854:	jo     0x14004486f
   140044856:	add    eax,DWORD PTR [rax]
   140044858:	(bad)  
   140044859:	(bad)  
   14004485a:	(bad)  
   14004485b:	call   QWORD PTR [rdx+0x319]
   140044861:	add    BYTE PTR [rax],al
   140044863:	add    cl,dh
   140044865:	sbb    DWORD PTR [rbx],eax
   140044867:	add    BYTE PTR [rcx],al
   140044869:	add    BYTE PTR [rax],al
   14004486b:	add    BYTE PTR [rdi+0x1a],cl
   14004486e:	add    eax,DWORD PTR [rax]
   140044870:	add    BYTE PTR [rax],al
   140044872:	add    BYTE PTR [rax],al
   140044874:	pop    rdx
   140044875:	sbb    al,BYTE PTR [rbx]
   140044877:	add    bh,bh
   140044879:	(bad)  
   14004487a:	(bad)  
   14004487b:	(bad)  
   14004487c:	(bad)  
   14004487d:	(bad)  
   14004487e:	(bad)  
   14004487f:	inc    DWORD PTR [rax+0x49]
   140044882:	add    eax,DWORD PTR [rax]
   140044884:	adc    DWORD PTR [rcx],esp
   140044886:	add    al,BYTE PTR [rax]
   140044888:	adc    eax,0xb4001501
   14004488d:	push   rbx
   14004488e:	add    DWORD PTR [rax],eax
   140044890:	rcl    ch,1
   140044892:	add    eax,DWORD PTR [rax]
   140044894:	add    DWORD PTR [rsi],eax
   140044896:	add    al,BYTE PTR [rax]
   140044898:	(bad)  
   140044899:	xor    al,BYTE PTR [rdx]
   14004489b:	push   rax
   14004489c:	sbb    BYTE PTR [rdx],0x3
   14004489f:	add    bh,bh
   1400448a1:	(bad)  
   1400448a2:	(bad)  
   1400448a3:	jmp    FWORD PTR [rdx+rbx*1+0x3]
   1400448aa:	add    BYTE PTR [rax],al
   1400448ac:	sti    
   1400448ad:	sbb    al,BYTE PTR [rbx]
   1400448af:	add    bh,bh
   1400448b1:	(bad)  
   1400448b2:	(bad)  
   1400448b3:	(bad)  
   1400448b4:	(bad)  
   1400448b5:	(bad)  
   1400448b6:	(bad)  
   1400448b7:	jmp    QWORD PTR [rax+0x49]
   1400448ba:	add    eax,DWORD PTR [rax]
   1400448bc:	add    BYTE PTR [rax],al
   1400448be:	add    BYTE PTR [rax],al
   1400448c0:	or     BYTE PTR [rcx+0x3],0x0
   1400448c4:	sbb    DWORD PTR [rax],esi
   1400448c6:	add    eax,DWORD PTR [rax]
   1400448c8:	adc    al,BYTE PTR [rcx]
   1400448ca:	(bad)  
   1400448cb:	add    BYTE PTR [rbx],cl
   1400448cd:	xor    BYTE PTR [rax],al
   1400448cf:	add    BYTE PTR [rax+0x5e],dh
   1400448d2:	add    DWORD PTR [rax],eax
   1400448d4:	clc    
   1400448d5:	(bad)  
   1400448d6:	add    eax,DWORD PTR [rax]
   1400448d8:	movabs ds:0x600020601000000,al
   1400448e1:	xor    al,BYTE PTR [rdx]
   1400448e3:	push   rax
   1400448e4:	add    DWORD PTR [rsi],eax
   1400448e6:	add    al,BYTE PTR [rax]
   1400448e8:	(bad)  
   1400448e9:	xor    al,BYTE PTR [rdx]
   1400448eb:	push   rax
   1400448ec:	and    BYTE PTR [rbx],bl
   1400448ee:	add    eax,DWORD PTR [rax]
   1400448f0:	(bad)  
   1400448f1:	(bad)  
   1400448f2:	(bad)  
   1400448f3:	call   QWORD PTR [rax+0x1b]
   1400448f6:	add    eax,DWORD PTR [rax]
   1400448f8:	add    BYTE PTR [rax],al
   1400448fa:	add    BYTE PTR [rax],al
   1400448fc:	jae    0x140044919
   1400448fe:	add    eax,DWORD PTR [rax]
   140044900:	add    DWORD PTR [rax],eax
   140044902:	add    BYTE PTR [rax],al
   140044904:	ficomp WORD PTR [rbx]
   140044906:	add    eax,DWORD PTR [rax]
   140044908:	add    BYTE PTR [rax],al
   14004490a:	add    BYTE PTR [rax],al
   14004490c:	jmp    0x13f044c2c
   140044911:	(bad)  
   140044912:	(bad)  
   140044913:	inc    DWORD PTR [rdx]
   140044915:	sbb    al,0x3
   140044917:	add    BYTE PTR [rcx],al
   140044919:	add    BYTE PTR [rax],al
   14004491b:	add    BYTE PTR [rdx+0x1c],bl
   14004491e:	add    eax,DWORD PTR [rax]
   140044920:	add    BYTE PTR [rax],al
   140044922:	add    BYTE PTR [rax],al
   140044924:	gs sbb al,0x3
   140044927:	add    bh,bh
   140044929:	(bad)  
   14004492a:	(bad)  
   14004492b:	(bad)  
   14004492c:	jle    0x14004494a
   14004492e:	add    eax,DWORD PTR [rax]
   140044930:	add    DWORD PTR [rax],eax
   140044932:	add    BYTE PTR [rax],al
   140044934:	leave  
   140044935:	sbb    al,0x3
   140044937:	add    BYTE PTR [rax],al
   140044939:	add    BYTE PTR [rax],al
   14004493b:	add    ah,dl
   14004493d:	sbb    al,0x3
   14004493f:	add    bh,bh
   140044941:	(bad)  
   140044942:	(bad)  
   140044943:	(bad)  
   140044944:	(bad)  
   140044945:	sbb    al,0x3
   140044947:	add    BYTE PTR [rcx],al
   140044949:	add    BYTE PTR [rax],al
   14004494b:	add    ch,bh
   14004494d:	sbb    al,0x3
   14004494f:	add    BYTE PTR [rax],al
   140044951:	add    BYTE PTR [rax],al
   140044953:	add    BYTE PTR [rax],cl
   140044955:	sbb    eax,0xffff0003
   14004495a:	(bad)  
   14004495b:	inc    DWORD PTR [rcx]
   14004495d:	or     DWORD PTR [rcx],eax
   14004495f:	add    BYTE PTR [rcx],cl
   140044961:	(bad)  
   140044962:	add    BYTE PTR [rax],al
   140044964:	add    DWORD PTR [rsi],ecx
   140044966:	add    DWORD PTR [rax],eax
   140044968:	(bad)  
   140044969:	(bad)  
   14004496a:	add    BYTE PTR [rax],al
   14004496c:	adc    DWORD PTR [rbx],edx
   14004496e:	add    al,BYTE PTR [rax]
   140044970:	(bad)  
   140044971:	add    DWORD PTR [rbx],edx
   140044973:	add    BYTE PTR [rbx+rdx*2-0x29dfffff],dh
   14004497a:	add    eax,DWORD PTR [rax]
   14004497c:	(bad)  
   14004497d:	(bad)  
   14004497e:	(bad)  
   14004497f:	jmp    QWORD PTR [rax-0x1ffffcb7]
   140044985:	sbb    eax,0xffff0003
   14004498a:	(bad)  
   14004498b:	inc    DWORD PTR [rip+0x31e]        # 0x140044caf
   140044991:	add    BYTE PTR [rax],al
   140044993:	add    BYTE PTR [rcx],dl
   140044995:	adc    BYTE PTR [rdx],al
   140044997:	add    BYTE PTR [rdi],al
   140044999:	add    DWORD PTR [rbx],edx
   14004499b:	add    BYTE PTR [rbx+rdx*2-0x292fffff],dh
   1400449a2:	add    eax,DWORD PTR [rax]
   1400449a4:	(bad)  
   1400449a5:	(bad)  
   1400449a6:	add    eax,DWORD PTR [rax]
   1400449a8:	(bad)  
   1400449a9:	(bad)  
   1400449aa:	(bad)  
   1400449ab:	push   rsi
   1400449ad:	(bad)  
   1400449ae:	add    eax,DWORD PTR [rax]
   1400449b0:	add    BYTE PTR [rax],al
   1400449b2:	add    BYTE PTR [rax],al
   1400449b4:	add    DWORD PTR [rax],esp
   1400449b6:	add    eax,DWORD PTR [rax]
   1400449b8:	add    DWORD PTR [rax],eax
   1400449ba:	add    BYTE PTR [rax],al
   1400449bc:	sbb    eax,0x320
   1400449c1:	add    BYTE PTR [rax],al
   1400449c3:	add    BYTE PTR [rcx],dl
   1400449c5:	adc    BYTE PTR [rdx],al
   1400449c7:	add    BYTE PTR [rdi],al
   1400449c9:	add    DWORD PTR [rbx],edx
   1400449cb:	add    BYTE PTR [rbx+rdx*2-0x28f7ffff],dh
   1400449d2:	add    eax,DWORD PTR [rax]
   1400449d4:	(bad)  
   1400449d5:	(bad)  
   1400449d6:	(bad)  
   1400449d7:	(bad)  
   1400449d8:	mov    eax,0x349
   1400449dd:	add    BYTE PTR [rax],al
   1400449df:	add    al,bl
   1400449e1:	add    rax,QWORD PTR [r8]
   1400449e4:	cmp    al,0x20
   1400449e6:	add    eax,DWORD PTR [rax]
   1400449e8:	(bad)  
   1400449e9:	(bad)  
   1400449ea:	(bad)  
   1400449eb:	inc    DWORD PTR [rcx+0x320]
   1400449f1:	add    BYTE PTR [rax],al
   1400449f3:	add    BYTE PTR [rax+riz*1+0x10003],cl
   1400449fa:	add    BYTE PTR [rax],al
   1400449fc:	test   al,0x20
   1400449fe:	add    eax,DWORD PTR [rax]
   140044a00:	add    BYTE PTR [rax],al
   140044a02:	add    BYTE PTR [rax],al
   140044a04:	add    DWORD PTR [rsi+rax*1],ecx
   140044a07:	add    BYTE PTR [rsp+rsi*1],cl
   140044a0a:	(bad)  
   140044a0b:	add    BYTE PTR [rdx+rdx*4],cl
   140044a0e:	or     BYTE PTR [rax+0x7],dh
   140044a11:	(bad)  
   140044a12:	(bad)  
   140044a13:	push   rax
   140044a14:	add    DWORD PTR [rdx],edx
   140044a16:	or     BYTE PTR [rax],al
   140044a18:	adc    dl,BYTE PTR [rcx+rdx*1+0x0]
   140044a1c:	adc    dh,BYTE PTR [rsi+rcx*1]
   140044a1f:	add    BYTE PTR [rdx],dl
   140044a21:	xchg   edx,eax
   140044a22:	(bad)  
   140044a23:	ror    BYTE PTR [rax+rsi*2],0xb
   140044a27:	(bad)  
   140044a28:	or     DWORD PTR [rcx+rax*1],eax
   140044a2b:	add    BYTE PTR [rdx+riz*2],al
   140044a2e:	add    BYTE PTR [rax],al
   140044a30:	test   al,0x5c
   140044a32:	add    DWORD PTR [rax],eax
   140044a34:	add    DWORD PTR [rax],eax
   140044a36:	add    BYTE PTR [rax],al
   140044a38:	cwde   
   140044a39:	add    eax,DWORD PTR es:[rax]
   140044a3c:	test   al,0x26
   140044a3e:	add    eax,DWORD PTR [rax]
   140044a40:	lock add rax,QWORD PTR [r8]
   140044a44:	test   al,0x26
   140044a46:	add    eax,DWORD PTR [rax]
   140044a48:	add    DWORD PTR [rsi],eax
   140044a4a:	add    al,BYTE PTR [rax]
   140044a4c:	(bad)  
   140044a4d:	push   rdx
   140044a4e:	add    dl,BYTE PTR [rax+0x11]
   140044a51:	sbb    al,0x5
   140044a53:	add    BYTE PTR [rdx+riz*2],bl
   140044a56:	sbb    al,al
   140044a58:	(bad)  
   140044a59:	jo     0x140044a70
   140044a5b:	(bad)  
   140044a5c:	adc    al,0x30
   140044a5e:	add    BYTE PTR [rax],al
   140044a60:	test   al,0x5c
   140044a62:	add    DWORD PTR [rax],eax
   140044a64:	add    DWORD PTR [rax],eax
   140044a66:	add    BYTE PTR [rax],al
   140044a68:	adc    BYTE PTR [rax],ch
   140044a6a:	add    eax,DWORD PTR [rax]
   140044a6c:	(bad)  [rax]
   140044a6e:	add    eax,DWORD PTR [rax]
   140044a70:	adc    cl,BYTE PTR [rdx+0x3]
   140044a73:	add    BYTE PTR [rax],al
   140044a75:	add    BYTE PTR [rax],al
   140044a77:	add    BYTE PTR [rcx],al
   140044a79:	adc    al,0x8
   140044a7b:	add    BYTE PTR [rsp+riz*2],dl
   140044a7e:	adc    BYTE PTR [rax],al
   140044a80:	adc    al,0x54
   140044a82:	lldt   WORD PTR [rsp+rsi*1]
   140044a86:	(bad)  
   140044a87:	add    BYTE PTR [rdx+rsi*4],dl
   140044a8a:	adc    BYTE PTR [rax+0x1],dh
   140044a8d:	adc    eax,DWORD PTR [rcx]
   140044a8f:	add    BYTE PTR [rbx],dl
   140044a91:	(bad)  
   140044a92:	add    BYTE PTR [rax],al
   140044a94:	sbb    DWORD PTR [rdi+rax*1],esp
   140044a97:	add    BYTE PTR [rdx],dl
   140044a99:	fs and eax,0x24341200
   140044a9f:	add    BYTE PTR [rdx],dl
   140044aa1:	add    DWORD PTR [rax],esp
   140044aa3:	add    BYTE PTR [rbx],cl
   140044aa5:	jo     0x140044aa7
   140044aa7:	add    BYTE PTR [rax-0xffffea8],al
   140044aad:	add    BYTE PTR [rax],al
   140044aaf:	add    BYTE PTR [rcx],al
   140044ab1:	add    eax,0x74050002
   140044ab6:	add    DWORD PTR [rax],eax
   140044ab8:	add    DWORD PTR [rsi],ebx
   140044aba:	or     al,0x0
   140044abc:	(bad)  
   140044abd:	je     0x140044aca
   140044abf:	add    BYTE PTR [rsi],bl
   140044ac1:	or     al,BYTE PTR fs:[rax]
   140044ac4:	(bad)  
   140044ac5:	push   rsp
   140044ac6:	or     DWORD PTR [rax],eax
   140044ac8:	(bad)  
   140044ac9:	xor    al,0x8
   140044acb:	add    BYTE PTR [rsi],bl
   140044acd:	xor    bl,BYTE PTR [rdx]
   140044acf:	loopne 0x140044ae9
   140044ad1:	rcl    BYTE PTR [rsi],1
   140044ad3:	shl    BYTE PTR [rcx],0x0
   140044ad6:	or     BYTE PTR [rax],al
   140044ad8:	add    ah,ah
   140044ada:	or     eax,DWORD PTR [rax]
   140044adc:	add    BYTE PTR [rdx+rcx*1+0x0],dh
   140044ae0:	add    BYTE PTR [rcx+rcx*1+0x0],ah
   140044ae4:	add    BYTE PTR [rax+rcx*1],dh
   140044ae7:	add    BYTE PTR [rax+0x53],ah
   140044aea:	add    BYTE PTR [rax],al
   140044aec:	mov    edx,DWORD PTR [rbx+0x0]
   140044aef:	add    BYTE PTR [rbx+rcx*2],dl
   140044af2:	add    al,0x0
   140044af4:	and    DWORD PTR [rax],ebx
   140044af6:	or     BYTE PTR [rax],al
   140044af8:	sbb    ah,ah
   140044afa:	or     eax,DWORD PTR [rax]
   140044afc:	adc    esi,DWORD PTR [rdx+rcx*1+0x0]
   140044b00:	(bad)  
   140044b01:	or     DWORD PTR fs:[rax],eax
   140044b04:	add    eax,0x60000834
   140044b09:	push   rbx
   140044b0a:	add    BYTE PTR [rax],al
   140044b0c:	mov    edx,DWORD PTR [rbx+0x0]
   140044b0f:	add    BYTE PTR [rbx+rcx*2],dl
   140044b12:	add    al,0x0
   140044b14:	add    DWORD PTR [rdx],ecx
   140044b16:	add    al,0x0
   140044b18:	or     dh,BYTE PTR [rdx]
   140044b1a:	(bad)  
   140044b1b:	rol    BYTE PTR [rax+rax*8],1
   140044b1e:	add    dl,BYTE PTR [rax+0x21]
   140044b21:	add    BYTE PTR [rax],al
   140044b23:	add    BYTE PTR [rax-0x45ffffd5],al
   140044b29:	sub    eax,DWORD PTR [rax]
   140044b2b:	add    BYTE PTR [rbx+rcx*2+0x4],al
   140044b2f:	add    BYTE PTR [rcx],ah
   140044b31:	add    eax,0x34050002
   140044b36:	(bad)  
   140044b37:	add    BYTE PTR [rax-0x45ffffd5],al
   140044b3d:	sub    eax,DWORD PTR [rax]
   140044b3f:	add    BYTE PTR [rbx+rcx*2+0x4],al
   140044b43:	add    BYTE PTR [rcx],al
   140044b45:	clts   
   140044b47:	add    BYTE PTR [rdi],cl
   140044b49:	or     BYTE PTR fs:[rax],al
   140044b4c:	andps  xmm0,XMMWORD PTR [rdi]
   140044b4f:	add    BYTE PTR [rdi],cl
   140044b51:	xor    cl,BYTE PTR [rbx]
   140044b53:	jo     0x140044b76
   140044b55:	add    BYTE PTR [rax],al
   140044b57:	add    al,dl
   140044b59:	push   rcx
   140044b5a:	add    BYTE PTR [rax],al
   140044b5c:	loope  0x140044baf
   140044b5e:	add    BYTE PTR [rax],al
   140044b60:	movabs al,ds:0xe10000002100044b
   140044b69:	push   rcx
   140044b6a:	add    BYTE PTR [rax],al
   140044b6c:	out    0x51,al
   140044b6e:	add    BYTE PTR [rax],al
   140044b70:	mov    WORD PTR [rbx+0x4],cs
   140044b73:	add    BYTE PTR [rcx],ah
   140044b75:	or     al,BYTE PTR [rax+rax*1]
   140044b78:	or     ah,ah
   140044b7a:	(bad)  
   140044b7b:	add    BYTE PTR [rip+0xffffffffe1000dd4],al        # 0x121045955
   140044b81:	push   rcx
   140044b82:	add    BYTE PTR [rax],al
   140044b84:	out    0x51,al
   140044b86:	add    BYTE PTR [rax],al
   140044b88:	mov    WORD PTR [rbx+0x4],cs
   140044b8b:	add    BYTE PTR [rcx],ah
   140044b8d:	add    eax,0x54050002
   140044b92:	or     al,0x0
   140044b94:	rcl    BYTE PTR [rcx+0x0],1
   140044b97:	add    cl,ah
   140044b99:	push   rcx
   140044b9a:	add    BYTE PTR [rax],al
   140044b9c:	movabs al,ds:0xd00060d0100044b
   140044ba5:	xor    al,0xf
   140044ba7:	add    BYTE PTR [rip+0x7c00972],cl        # 0x147c4551f
   140044bad:	jo     0x140044bb5
   140044baf:	(bad)  
   140044bb0:	add    DWORD PTR [rdi],ecx
   140044bb2:	(bad)  
   140044bb3:	add    BYTE PTR [rdi],cl
   140044bb5:	fs or  eax,0xc340f00
   140044bbb:	add    BYTE PTR [rdi],cl
   140044bbd:	xchg   edx,eax
   140044bbe:	or     esi,DWORD PTR [rax+0x19]
   140044bc1:	or     eax,DWORD PTR [rbx]
   140044bc3:	add    BYTE PTR [rbx],cl
   140044bc5:	rex.X (bad) 
   140044bc7:	push   rax
   140044bc8:	(bad)  
   140044bc9:	xor    BYTE PTR [rax],al
   140044bcb:	add    BYTE PTR [rbx+rdx*2-0x256fffff],dh
   140044bd2:	add    eax,DWORD PTR [rax]
   140044bd4:	sbb    DWORD PTR [rdx],ecx
   140044bd6:	add    al,BYTE PTR [rax]
   140044bd8:	or     dh,BYTE PTR [rdx]
   140044bda:	(bad)  
   140044bdb:	push   rax
   140044bdc:	mov    ah,0x53
   140044bde:	add    DWORD PTR [rax],eax
   140044be0:	nop
   140044be1:	fiadd  DWORD PTR [rbx]
   140044be3:	add    BYTE PTR [rcx],bl
   140044be5:	and    DWORD PTR [rip+0x14a21800],eax        # 0x154a663eb
   140044beb:	rcl    BYTE PTR [rdx],0x70
   140044bee:	adc    DWORD PTR [rax+0x10],esp
   140044bf1:	xor    BYTE PTR [rax],al
   140044bf3:	add    BYTE PTR [rbx+rdx*2-0x256fffff],dh
   140044bfa:	add    eax,DWORD PTR [rax]
	...
   140044c04:	add    eax,DWORD PTR [rax]
   140044c06:	add    BYTE PTR [rax],al
   140044c08:	add    DWORD PTR [rax],eax
   140044c0a:	add    BYTE PTR [rax],al
   140044c0c:	cmp    BYTE PTR [rsp+rax*1+0x0],cl
   140044c10:	add    al,BYTE PTR [rax]
   140044c12:	add    BYTE PTR [rax],al
   140044c14:	add    al,BYTE PTR [rax]
   140044c16:	add    BYTE PTR [rax],al
   140044c18:	add    eax,DWORD PTR [rax]
   140044c1a:	add    BYTE PTR [rax],al
   140044c1c:	add    DWORD PTR [rax],eax
   140044c1e:	add    BYTE PTR [rax],al
   140044c20:	and    al,0x4c
   140044c22:	add    al,0x0
   140044c24:	add    BYTE PTR [rax],al
	...
   140044c2f:	add    BYTE PTR [rax+0x4a],dh
   140044c32:	add    eax,DWORD PTR [rax]
   140044c34:	rex.W add BYTE PTR [rax],al
   140044c37:	add    BYTE PTR [rax+0x0],al
	...
   140044c42:	add    BYTE PTR [rax],al
   140044c44:	xor    BYTE PTR [rdx+0x3],cl
   140044c47:	add    BYTE PTR [rax],bh
   140044c49:	add    BYTE PTR [rax],al
   140044c4b:	add    bh,bh
   140044c4d:	(bad)  
   140044c4e:	(bad)  
   140044c4f:	inc    DWORD PTR [rax]
   140044c51:	add    BYTE PTR [rax],al
   140044c53:	add    bh,bh
   140044c55:	(bad)  
   140044c56:	(bad)  
   140044c57:	inc    DWORD PTR [rax]
   140044c59:	add    BYTE PTR [rax],al
   140044c5b:	add    BYTE PTR [rcx],al
   140044c5d:	add    BYTE PTR [rax],al
   140044c5f:	add    BYTE PTR [rax],al
   140044c61:	add    BYTE PTR [rax],al
   140044c63:	add    BYTE PTR [rcx],al
   140044c65:	add    BYTE PTR [rax],al
   140044c67:	add    BYTE PTR [rax],al
   140044c69:	add    BYTE PTR [rax],al
   140044c6b:	add    BYTE PTR [rax+0x34],ah
   140044c6e:	add    BYTE PTR [rax],al
   140044c70:	(bad)  
   140044c71:	(bad)  
   140044c72:	(bad)  
   140044c73:	dec    ebx
   140044c75:	xor    al,0x0
   140044c77:	add    BYTE PTR [rax],al
   140044c79:	add    BYTE PTR [rax],al
   140044c7b:	add    BYTE PTR [rsi*1-0x10000],ah
   140044c82:	(bad)  
   140044c83:	push   QWORD PTR [rax]
   140044c85:	rex.WX add rax,QWORD PTR [rax]
   140044c88:	add    BYTE PTR [rax],al
   140044c8a:	add    BYTE PTR [rax],al
   140044c8c:	cmp    eax,0x100034a
   140044c91:	add    BYTE PTR [rax],al
   140044c93:	add    BYTE PTR [rbx+0x4a],cl
   140044c96:	add    eax,DWORD PTR [rax]
   140044c98:	add    al,BYTE PTR [rax]
   140044c9a:	add    BYTE PTR [rax],al
   140044c9c:	pop    rsi
   140044c9d:	rex.WX add rax,QWORD PTR [rax]
   140044ca0:	add    BYTE PTR [rax],al
   140044ca2:	add    BYTE PTR [rax],al
   140044ca4:	jle    0x140044cf0
   140044ca6:	add    eax,DWORD PTR [rax]
   140044ca8:	add    eax,DWORD PTR [rax]
   140044caa:	add    BYTE PTR [rax],al
   140044cac:	scas   al,BYTE PTR es:[rdi]
   140044cad:	rex.WX add rax,QWORD PTR [rax]
   140044cb0:	add    BYTE PTR [rax],al
   140044cb2:	add    BYTE PTR [rax],al
   140044cb4:	and    DWORD PTR [rax],eax
   140044cb6:	add    BYTE PTR [rax],al
   140044cb8:	sub    BYTE PTR [rip+0x2d8a0000],0x0        # 0x16d8e4cbf
   140044cbf:	add    ah,bl
   140044cc1:	rex.WR add al,0x0
   140044cc4:	and    DWORD PTR [rdx],ecx
   140044cc6:	add    al,0x0
   140044cc8:	or     ah,BYTE PTR [rdi+rax*1+0x0]
   140044ccc:	add    eax,0x80000634
   140044cd1:	sub    eax,0x2d8a0000
   140044cd6:	add    BYTE PTR [rax],al
   140044cd8:	fmul   QWORD PTR [rsp+rax*1+0x0]
   140044cdc:	add    DWORD PTR [rdx],ecx
   140044cde:	add    al,BYTE PTR [rax]
   140044ce0:	or     dh,BYTE PTR [rdx]
   140044ce2:	(bad)  
   140044ce3:	jo     0x140044d06
   140044ce5:	add    BYTE PTR [rax],al
   140044ce7:	add    BYTE PTR [rax+0x2c],dl
   140044cea:	add    BYTE PTR [rax],al
   140044cec:	mov    ch,0x2c
   140044cee:	add    BYTE PTR [rax],al
   140044cf0:	test   BYTE PTR [rbx],cl
   140044cf2:	add    al,0x0
   140044cf4:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x104094cfc
   140044cfa:	(bad)  
   140044cfb:	add    BYTE PTR [rax+0x2c],dl
   140044cfe:	add    BYTE PTR [rax],al
   140044d00:	mov    ch,0x2c
   140044d02:	add    BYTE PTR [rax],al
   140044d04:	test   BYTE PTR [rbx],cl
   140044d06:	add    al,0x0
   140044d08:	and    DWORD PTR [rax],eax
   140044d0a:	add    BYTE PTR [rax],al
   140044d0c:	movabs al,ds:0x2c000029bd000029
   140044d15:	rex.WRB add al,0x0
   140044d18:	and    DWORD PTR [rip+0x64050002],eax        # 0x1a4094d20
   140044d1e:	(bad)  
   140044d1f:	add    BYTE PTR [rax-0x42ffffd7],ah
   140044d25:	sub    DWORD PTR [rax],eax
   140044d27:	add    BYTE PTR [rcx*2+0xf010004],ch
   140044d2e:	(bad)  
   140044d2f:	add    BYTE PTR [rdi],cl
   140044d31:	push   rsp
   140044d32:	or     BYTE PTR [rax],al
   140044d34:	sysenter 
   140044d36:	(bad)  
   140044d37:	add    BYTE PTR [rdi],cl
   140044d39:	xor    cl,BYTE PTR [rbx]
   140044d3b:	jo     0x140044d4e
   140044d3d:	sbb    BYTE PTR [rax+rax*1],al
   140044d40:	sbb    BYTE PTR [rcx+rcx*1],dh
   140044d43:	add    BYTE PTR [rdx],cl
   140044d45:	push   rdx
   140044d46:	(bad)  
   140044d47:	jo     0x140044cfd
   140044d49:	push   rbx
   140044d4a:	add    DWORD PTR [rax],eax
   140044d4c:	rcr    dl,0x3
   140044d4f:	add    al,dh
   140044d51:	adc    DWORD PTR [rax],eax
   140044d53:	add    bh,bh
   140044d55:	(bad)  
   140044d56:	(bad)  
   140044d57:	call   QWORD PTR [rdx+rdx*1]
   140044d5a:	add    BYTE PTR [rax],al
   140044d5c:	add    BYTE PTR [rax],al
   140044d5e:	add    BYTE PTR [rax],al
   140044d60:	rex.RXB adc r8b,BYTE PTR [r8]
   140044d63:	add    bh,bh
   140044d65:	(bad)  
   140044d66:	(bad)  
   140044d67:	call   QWORD PTR [rcx]
   140044d69:	sbb    BYTE PTR [rax+rax*1],al
   140044d6c:	sbb    BYTE PTR [rcx+rcx*1],dh
   140044d6f:	add    BYTE PTR [rdx],cl
   140044d71:	push   rdx
   140044d72:	(bad)  
   140044d73:	jo     0x140044d29
   140044d75:	push   rbx
   140044d76:	add    DWORD PTR [rax],eax
   140044d78:	lock fiadd DWORD PTR [rbx]
   140044d7b:	add    BYTE PTR [rax-0xfffff0],ah
   140044d81:	(bad)  
   140044d82:	(bad)  
   140044d83:	inc    esp
   140044d85:	adc    BYTE PTR [rax],al
   140044d87:	add    BYTE PTR [rax],al
   140044d89:	add    BYTE PTR [rax],al
   140044d8b:	add    dh,dh
   140044d8d:	adc    BYTE PTR [rax],al
   140044d8f:	add    bh,bh
   140044d91:	(bad)  
   140044d92:	(bad)  
   140044d93:	inc    DWORD PTR [rcx]
   140044d95:	(bad)  
   140044d96:	add    al,BYTE PTR [rax]
   140044d98:	(bad)  
   140044d99:	xor    al,BYTE PTR [rdx]
   140044d9b:	xor    BYTE PTR [rcx],dl
   140044d9d:	sbb    BYTE PTR [rax+rax*1],al
   140044da0:	sbb    BYTE PTR [rcx+rcx*1],dh
   140044da3:	add    BYTE PTR [rdx],cl
   140044da5:	push   rdx
   140044da6:	(bad)  
   140044da7:	jo     0x140044d5d
   140044da9:	push   rbx
   140044daa:	add    DWORD PTR [rax],eax
   140044dac:	and    bl,bl
   140044dae:	add    eax,DWORD PTR [rax]
   140044db0:	(bad)  
   140044db1:	(bad)  
   140044db2:	(bad)  
   140044db3:	jmp    rax
   140044db5:	rex.WX add rax,QWORD PTR [rax]
   140044db8:	add    BYTE PTR [rax],al
   140044dba:	add    BYTE PTR [rax],al
   140044dbc:	add    BYTE PTR [rbx+0x3],cl
   140044dbf:	add    BYTE PTR [rcx],al
   140044dc1:	add    BYTE PTR [rax],al
   140044dc3:	add    BYTE PTR [rax],ah
   140044dc5:	rex.WXB add rax,QWORD PTR [r8]
   140044dc8:	add    al,BYTE PTR [rax]
   140044dca:	add    BYTE PTR [rax],al
   140044dcc:	rex
   140044dcd:	rex.WXB add rax,QWORD PTR [r8]
   140044dd0:	add    eax,DWORD PTR [rax]
   140044dd2:	add    BYTE PTR [rax],al
   140044dd4:	(bad)  
   140044dd5:	rex.WXB add rax,QWORD PTR [r8]
   140044dd8:	adc    BYTE PTR [rsi+0x0],dl
   140044ddb:	add    bh,bh
   140044ddd:	(bad)  
   140044dde:	(bad)  
   140044ddf:	push   QWORD PTR [rip+0x4000056]        # 0x144044e3b
   140044de5:	add    BYTE PTR [rax],al
   140044de7:	add    BYTE PTR [rdx+0x56],al
   140044dea:	add    BYTE PTR [rax],al
   140044dec:	add    eax,DWORD PTR [rax]
   140044dee:	add    BYTE PTR [rax],al
   140044df0:	rex.WRXB push r14
   140044df2:	add    BYTE PTR [rax],al
   140044df4:	add    al,BYTE PTR [rax]
   140044df6:	add    BYTE PTR [rax],al
   140044df8:	adc    BYTE PTR [rsi+0x0],0x0
   140044dfc:	add    DWORD PTR [rax],eax
   140044dfe:	add    BYTE PTR [rax],al
   140044e00:	scas   eax,DWORD PTR es:[rdi]
   140044e01:	push   rsi
   140044e02:	add    BYTE PTR [rax],al
   140044e04:	add    BYTE PTR [rax],al
   140044e06:	add    BYTE PTR [rax],al
   140044e08:	iret   
   140044e09:	push   rsi
   140044e0a:	add    BYTE PTR [rax],al
   140044e0c:	(bad)  
   140044e0d:	(bad)  
   140044e0e:	(bad)  
   140044e0f:	call   FWORD PTR [rcx]
   140044e11:	or     eax,0x420d0005
   140044e16:	or     DWORD PTR [rax+0x8],esi
   140044e19:	(bad)  
   140044e1a:	(bad)  
   140044e1b:	push   rax
   140044e1c:	(bad)  
   140044e1d:	xor    BYTE PTR [rax],al
   140044e1f:	add    BYTE PTR [rbx+rdx*2-0x24afffff],dh
   140044e26:	add    eax,DWORD PTR [rax]
   140044e28:	sbb    DWORD PTR [rax],esp
   140044e2a:	(bad)  
   140044e2b:	add    BYTE PTR [rax],ah
   140044e2d:	xor    al,0xe
   140044e2f:	add    BYTE PTR [rdx],dl
   140044e31:	jb     0x140044e41
   140044e33:	ror    BYTE PTR [rax+rsi*2],0xb
   140044e37:	(bad)  
   140044e38:	mov    ah,0x53
   140044e3a:	add    DWORD PTR [rax],eax
   140044e3c:	push   rax
   140044e3d:	fild   DWORD PTR [rbx]
   140044e3f:	add    BYTE PTR [rax],al
   140044e41:	add    BYTE PTR [rax],al
   140044e43:	add    BYTE PTR [rcx],al
   140044e45:	add    BYTE PTR [rax],al
   140044e47:	add    BYTE PTR [rdx],al
   140044e49:	add    BYTE PTR [rax],al
   140044e4b:	add    BYTE PTR [rcx],al
   140044e4d:	add    BYTE PTR [rax],al
   140044e4f:	add    BYTE PTR [rsi+rcx*2+0x4],dl
   140044e53:	add    BYTE PTR [rax+0x0],al
	...
   140044e5e:	add    BYTE PTR [rax],al
   140044e60:	movabs al,ds:0xff0000005800034b
   140044e69:	(bad)  
   140044e6a:	(bad)  
   140044e6b:	inc    DWORD PTR [rax]
   140044e6d:	add    BYTE PTR [rax],al
   140044e6f:	add    BYTE PTR [rax],al
   140044e71:	add    BYTE PTR [rax],al
   140044e73:	add    BYTE PTR [rax-0xfffcb5],al
   140044e79:	(bad)  
   140044e7a:	(bad)  
   140044e7b:	inc    DWORD PTR [rax]
   140044e7d:	add    BYTE PTR [rax],al
   140044e7f:	add    BYTE PTR [rax],al
   140044e81:	(bad)  
   140044e82:	add    BYTE PTR [rax],al
   140044e84:	(bad)  
   140044e85:	(bad)  
   140044e86:	(bad)  
   140044e87:	jmp    FWORD PTR [rsi]
   140044e89:	(bad)  
   140044e8a:	add    BYTE PTR [rax],al
   140044e8c:	add    BYTE PTR [rax],al
   140044e8e:	add    BYTE PTR [rax],al
   140044e90:	rex (bad) 
   140044e92:	add    BYTE PTR [rax],al
   140044e94:	add    DWORD PTR [rax],eax
   140044e96:	add    BYTE PTR [rax],al
   140044e98:	push   0x37
   140044e9d:	add    BYTE PTR [rax],al
   140044e9f:	add    BYTE PTR [rsi+0x37],dh
   140044ea2:	add    BYTE PTR [rax],al
   140044ea4:	(bad)  
   140044ea5:	(bad)  
   140044ea6:	(bad)  
   140044ea7:	jmp    QWORD PTR [rax+0x34b]
   140044ead:	add    BYTE PTR [rax],al
   140044eaf:	add    BYTE PTR [rax+0x200034b],dh
   140044eb5:	add    BYTE PTR [rax],al
   140044eb7:	add    bh,bl
   140044eb9:	rex.WXB add rax,QWORD PTR [r8]
   140044ebc:	add    BYTE PTR [rax],al
   140044ebe:	add    BYTE PTR [rax],al
   140044ec0:	adc    DWORD PTR [rax],ebx
   140044ec2:	add    al,0x0
   140044ec4:	sbb    BYTE PTR [rcx+rcx*1],dh
   140044ec7:	add    BYTE PTR [rdx],cl
   140044ec9:	push   rdx
   140044eca:	(bad)  
   140044ecb:	jo     0x140044e81
   140044ecd:	push   rbx
   140044ece:	add    DWORD PTR [rax],eax
   140044ed0:	sbb    bl,0x3
   140044ed3:	add    bh,bh
   140044ed5:	(bad)  
   140044ed6:	(bad)  
   140044ed7:	inc    eax
   140044ed9:	rex.WX add rax,QWORD PTR [rax]
   140044edc:	lock xor eax,DWORD PTR [rax]
   140044edf:	add    bh,bh
   140044ee1:	(bad)  
   140044ee2:	(bad)  
   140044ee3:	call   QWORD PTR [rsp+rsi*1]
   140044ee6:	add    BYTE PTR [rax],al
   140044ee8:	add    BYTE PTR [rax],al
   140044eea:	add    BYTE PTR [rax],al
   140044eec:	rex.RXB xor al,0x0
   140044eef:	add    bh,bh
   140044ef1:	(bad)  
   140044ef2:	(bad)  
   140044ef3:	jmp    QWORD PTR [rcx]
   140044ef5:	add    BYTE PTR [rdx],al
   140044ef7:	add    BYTE PTR [rax],al
   140044ef9:	je     0x140044f01
   140044efb:	add    BYTE PTR [rax],dh
   140044efd:	sub    al,BYTE PTR [rax]
   140044eff:	add    al,ah
   140044f01:	sub    al,BYTE PTR [rax]
   140044f03:	add    BYTE PTR [rax+rax*2],al
   140044f06:	add    al,0x0
   140044f08:	and    DWORD PTR [rax],eax
   140044f0a:	add    BYTE PTR [rax],al
   140044f0c:	xor    BYTE PTR [rdx],ch
   140044f0e:	add    BYTE PTR [rax],al
   140044f10:	loopne 0x140044f3c
   140044f12:	add    BYTE PTR [rax],al
   140044f14:	add    al,0x40
   140044f16:	add    al,0x0
   140044f18:	and    DWORD PTR [rip+0x74050002],eax        # 0x1b4094f20
   140044f1e:	(bad)  
   140044f1f:	add    BYTE PTR [rax],dh
   140044f21:	sub    al,BYTE PTR [rax]
   140044f23:	add    al,ah
   140044f25:	sub    al,BYTE PTR [rax]
   140044f27:	add    BYTE PTR [rax+rax*2],al
   140044f2a:	add    al,0x0
   140044f2c:	sbb    DWORD PTR [rdx],ebp
   140044f2e:	add    eax,0x14341800
   140044f33:	add    BYTE PTR [rbx],cl
   140044f35:	add    DWORD PTR [rdx],edx
   140044f37:	add    BYTE PTR [rax+rsi*2],al
   140044f3a:	add    BYTE PTR [rax],al
   140044f3c:	jo     0x140044f9c
   140044f3e:	add    DWORD PTR [rax],eax
   140044f40:	mov    al,0xdb
   140044f42:	add    eax,DWORD PTR [rax]
   140044f44:	(bad)  
   140044f45:	add    BYTE PTR [rax],al
   140044f47:	add    BYTE PTR [rax+0x21],dh
   140044f4a:	add    BYTE PTR [rax],al
   140044f4c:	(bad)  
   140044f4d:	(bad)  
   140044f4e:	(bad)  
   140044f4f:	call   rbx
   140044f51:	and    DWORD PTR [rax],eax
   140044f53:	add    BYTE PTR [rax],al
   140044f55:	add    BYTE PTR [rax],al
   140044f57:	add    ch,bl
   140044f59:	and    DWORD PTR [rax],eax
   140044f5b:	add    bh,bh
   140044f5d:	(bad)  
   140044f5e:	(bad)  
   140044f5f:	(bad)  
   140044f60:	clc    
   140044f61:	and    DWORD PTR [rax],eax
   140044f63:	add    BYTE PTR [rax],al
   140044f65:	add    BYTE PTR [rax],al
   140044f67:	add    bl,ah
   140044f69:	and    al,BYTE PTR [rax]
   140044f6b:	add    bh,bh
   140044f6d:	(bad)  
   140044f6e:	(bad)  
   140044f6f:	jmp    QWORD PTR [rcx]
   140044f71:	add    BYTE PTR [rax],al
   140044f73:	add    BYTE PTR [rax],dl
   140044f75:	(bad)  
   140044f76:	add    BYTE PTR [rax],al
   140044f78:	cdq    
   140044f79:	(bad)  
   140044f7a:	add    BYTE PTR [rax],al
   140044f7c:	test   BYTE PTR [rbx],cl
   140044f7e:	add    al,0x0
   140044f80:	and    DWORD PTR [rip+0xffffffffc4050002],eax        # 0x104094f88
   140044f86:	(bad)  
   140044f87:	add    BYTE PTR [rax],dl
   140044f89:	(bad)  
   140044f8a:	add    BYTE PTR [rax],al
   140044f8c:	cdq    
   140044f8d:	(bad)  
   140044f8e:	add    BYTE PTR [rax],al
   140044f90:	test   BYTE PTR [rbx],cl
   140044f92:	add    al,0x0
   140044f94:	add    DWORD PTR [rsi],eax
   140044f96:	add    al,BYTE PTR [rax]
   140044f98:	(bad)  
   140044f99:	xor    al,BYTE PTR [rdx]
   140044f9b:	jo     0x140044fb6
   140044f9d:	(bad)  
   140044f9e:	add    al,BYTE PTR [rax]
   140044fa0:	(bad)  
   140044fa1:	mov    dl,0x2
   140044fa3:	xor    BYTE PTR [rax+0x5e],dh
   140044fa6:	add    DWORD PTR [rax],eax
   140044fa8:	loopne 0x140044f85
   140044faa:	add    eax,DWORD PTR [rax]
   140044fac:	push   rdx
   140044fad:	add    BYTE PTR [rax],al
   140044faf:	add    al,al
   140044fb1:	pop    rdi
   140044fb2:	add    BYTE PTR [rax],al
   140044fb4:	(bad)  
   140044fb5:	(bad)  
   140044fb6:	(bad)  
   140044fb7:	push   rbp
   140044fb9:	pop    rdi
   140044fba:	add    BYTE PTR [rax],al
   140044fbc:	add    BYTE PTR [rax],al
   140044fbe:	add    BYTE PTR [rax],al
   140044fc0:	(bad)  
   140044fc1:	(bad)  
   140044fc2:	add    BYTE PTR [rax],al
   140044fc4:	(bad)  
   140044fc5:	(bad)  
   140044fc6:	(bad)  
   140044fc7:	dec    DWORD PTR [rbp+0x60]
   140044fca:	add    BYTE PTR [rax],al
   140044fcc:	add    BYTE PTR [rax],al
   140044fce:	add    BYTE PTR [rax],al
   140044fd0:	gs (bad) 
   140044fd2:	add    BYTE PTR [rax],al
   140044fd4:	(bad)  
   140044fd5:	(bad)  
   140044fd6:	(bad)  
   140044fd7:	(bad)  
   140044fd8:	jnp    0x14004503a
   140044fda:	add    BYTE PTR [rax],al
   140044fdc:	add    BYTE PTR [rax],al
   140044fde:	add    BYTE PTR [rax],al
   140044fe0:	(bad)  
   140044fe1:	(bad)  
   140044fe2:	add    BYTE PTR [rax],al
   140044fe4:	(bad)  
   140044fe5:	(bad)  
   140044fe6:	(bad)  
   140044fe7:	call   FWORD PTR [rcx]
   140044fe9:	xor    BYTE PTR [rcx],cl
   140044feb:	add    BYTE PTR [rsi],bl
   140044fed:	xor    al,0x20
   140044fef:	add    BYTE PTR [rcx],dl
   140044ff1:	add    DWORD PTR [rax],ebx
   140044ff3:	add    BYTE PTR [rdx],cl
   140044ff5:	ror    BYTE PTR [rax],1
   140044ff7:	rol    BYTE PTR [rsi],0x70
   140044ffa:	add    eax,0x500460
   140044fff:	add    BYTE PTR [rax+0x5e],dh
   140045002:	add    DWORD PTR [rax],eax
   140045004:	adc    ah,bl
   140045006:	add    eax,DWORD PTR [rax]
   140045008:	mov    edx,0xff000000
   14004500d:	(bad)  
   14004500e:	(bad)  
   14004500f:	push   rax
   140045011:	rex.WXB add rax,QWORD PTR [r8]
   140045014:	add    BYTE PTR [rax],al
   140045016:	add    BYTE PTR [rax],al
   140045018:	adc    BYTE PTR [rbx+rax*1+0x0],cl
   14004501c:	add    DWORD PTR [rax],eax
   14004501e:	add    BYTE PTR [rax],al
   140045020:	xor    BYTE PTR [rbx+rax*1+0x0],cl
   140045024:	xor    BYTE PTR [rdx+0x0],cl
   140045027:	add    bh,bh
   140045029:	(bad)  
   14004502a:	(bad)  
   14004502b:	jmp    FWORD PTR [rdx+0x4a]
   14004502e:	add    BYTE PTR [rax],al
   140045030:	add    BYTE PTR [rax],al
   140045032:	add    BYTE PTR [rax],al
   140045034:	jo     0x140045080
   140045036:	add    BYTE PTR [rax],al
   140045038:	(bad)  
   140045039:	(bad)  
   14004503a:	(bad)  
   14004503b:	call   FWORD PTR [rcx+0x4a]
   140045041:	add    BYTE PTR [rax],al
   140045043:	add    bl,dl
   140045045:	rex.WX add BYTE PTR [rax],al
   140045048:	add    DWORD PTR [rax],eax
   14004504a:	add    BYTE PTR [rax],al
   14004504c:	cld    
   14004504d:	rex.WX add BYTE PTR [rax],al
   140045050:	add    BYTE PTR [rax],al
   140045052:	add    BYTE PTR [rax],al
   140045054:	and    DWORD PTR [rbx+0x0],ecx
   140045057:	add    bh,bh
   140045059:	(bad)  
   14004505a:	(bad)  
   14004505b:	dec    DWORD PTR [rax+0x4b]
   14004505e:	add    BYTE PTR [rax],al
   140045060:	add    DWORD PTR [rax],eax
   140045062:	add    BYTE PTR [rax],al
   140045064:	mov    WORD PTR [rbx+0x0],cs
   140045067:	add    BYTE PTR [rax],al
   140045069:	add    BYTE PTR [rax],al
   14004506b:	add    BYTE PTR [rcx-0xffffb5],dh
   140045071:	(bad)  
   140045072:	(bad)  
   140045073:	(bad)  
   140045074:	fmul   DWORD PTR [rbx+0x0]
   140045077:	add    BYTE PTR [rcx],al
   140045079:	add    BYTE PTR [rax],al
   14004507b:	add    BYTE PTR [rip+0x4c],dl        # 0x1400450cd
   140045081:	add    BYTE PTR [rax],al
   140045083:	add    BYTE PTR [rdx],bh
   140045085:	rex.WR add BYTE PTR [rax],r8b
   140045088:	(bad)  
   140045089:	(bad)  
   14004508a:	(bad)  
   14004508b:	dec    DWORD PTR [rcx+0x4c]
   14004508e:	add    BYTE PTR [rax],al
   140045090:	add    DWORD PTR [rax],eax
   140045092:	add    BYTE PTR [rax],al
   140045094:	xchg   edx,eax
   140045095:	rex.WR add BYTE PTR [rax],r8b
   140045098:	add    BYTE PTR [rax],al
   14004509a:	add    BYTE PTR [rax],al
   14004509c:	mov    bh,0x4c
   14004509e:	add    BYTE PTR [rax],al
   1400450a0:	(bad)  
   1400450a1:	(bad)  
   1400450a2:	(bad)  
   1400450a3:	inc    esi
   1400450a5:	rex.WR add BYTE PTR [rax],r8b
   1400450a8:	add    DWORD PTR [rax],eax
   1400450aa:	add    BYTE PTR [rax],al
   1400450ac:	dec    DWORD PTR [rax+rax*1+0x0]
   1400450b0:	add    al,BYTE PTR [rax]
   1400450b2:	add    BYTE PTR [rax],al
   1400450b4:	int3   
   1400450b5:	rex.WRB add BYTE PTR [r8],r8b
   1400450b8:	add    DWORD PTR [rax],eax
   1400450ba:	add    BYTE PTR [rax],al
   1400450bc:	test   BYTE PTR [rbp+0x0],0x0
   1400450c0:	add    BYTE PTR [rax],al
   1400450c2:	add    BYTE PTR [rax],al
   1400450c4:	sbb    ecx,DWORD PTR [rsi+0x0]
   1400450c7:	add    bh,bh
   1400450c9:	(bad)  
   1400450ca:	(bad)  
   1400450cb:	jmp    QWORD PTR [rdi]
   1400450cd:	rex.WRX add BYTE PTR [rax],r8b
   1400450d0:	add    DWORD PTR [rax],eax
   1400450d2:	add    BYTE PTR [rax],al
   1400450d4:	push   rcx
   1400450d5:	rex.WRX add BYTE PTR [rax],r8b
   1400450d8:	add    BYTE PTR [rax],al
   1400450da:	add    BYTE PTR [rax],al
   1400450dc:	jbe    0x14004512c
   1400450de:	add    BYTE PTR [rax],al
   1400450e0:	(bad)  
   1400450e1:	(bad)  
   1400450e2:	(bad)  
   1400450e3:	call   FWORD PTR [rcx]
   1400450e5:	xor    cl,BYTE PTR [rcx]
   1400450e7:	add    BYTE PTR [rax],ah
   1400450e9:	fs xor eax,0x34541c00
   1400450ef:	add    BYTE PTR [rax],bl
   1400450f1:	xor    al,0x32
   1400450f3:	add    BYTE PTR [rbx],cl
   1400450f5:	add    DWORD PTR [rax],esi
   1400450f7:	add    BYTE PTR [rax+rsi*2],al
   1400450fa:	add    BYTE PTR [rax],al
   1400450fc:	jo     0x14004515c
   1400450fe:	add    DWORD PTR [rax],eax
   140045100:	rex fadd QWORD PTR [rbx]
   140045103:	add    BYTE PTR [rdx+0x1],dh
   140045106:	add    BYTE PTR [rax],al
   140045108:	(bad)  
   140045109:	(bad)  
   14004510a:	(bad)  
   14004510b:	call   QWORD PTR [rax+0x4c]
   14004510e:	add    eax,DWORD PTR [rax]
   140045110:	xor    BYTE PTR [rdi+0x0],al
   140045113:	add    bh,bh
   140045115:	(bad)  
   140045116:	(bad)  
   140045117:	call   QWORD PTR [rdi+rax*2+0x0]
   14004511e:	add    BYTE PTR [rax],al
   140045120:	or     ecx,DWORD PTR [rcx+0x0]
   140045123:	add    bh,bh
   140045125:	(bad)  
   140045126:	(bad)  
   140045127:	jmp    QWORD PTR [rcx+rcx*2]
   14004512a:	add    BYTE PTR [rax],al
   14004512c:	add    BYTE PTR [rax],al
   14004512e:	add    BYTE PTR [rax],al
   140045130:	push   rbp
   140045131:	rex.WB add BYTE PTR [r8],al
   140045134:	(bad)  
   140045135:	(bad)  
   140045136:	(bad)  
   140045137:	jmp    FWORD PTR [rsi+0x49]
   14004513a:	add    BYTE PTR [rax],al
   14004513c:	add    BYTE PTR [rax],al
   14004513e:	add    BYTE PTR [rax],al
   140045140:	(bad)  
   140045141:	rex.WB add BYTE PTR [r8],al
   140045144:	(bad)  
   140045145:	(bad)  
   140045146:	(bad)  
   140045147:	(bad)  
   140045148:	(bad)  
   140045149:	rex.WB add BYTE PTR [r8],al
   14004514c:	add    BYTE PTR [rax],al
   14004514e:	add    BYTE PTR [rax],al
   140045150:	repz rex.WB add BYTE PTR [r8],al
   140045154:	(bad)  
   140045155:	(bad)  
   140045156:	(bad)  
   140045157:	call   FWORD PTR [rcx]
   140045159:	xor    eax,0x5423000b
   14004515e:	sbb    eax,0x1c341f00
   140045163:	add    BYTE PTR [rdx],dl
   140045165:	add    DWORD PTR [rax+rax*1],edx
   140045168:	or     esp,eax
   14004516a:	or     eax,edx
   14004516c:	(bad)  
   14004516d:	rol    BYTE PTR [rip+0x600470],0x0        # 0x1406455e4
   140045174:	jo     0x1400451d4
   140045176:	add    DWORD PTR [rax],eax
   140045178:	jo     0x140045156
   14004517a:	add    eax,DWORD PTR [rax]
   14004517c:	(bad)  
   14004517d:	add    BYTE PTR [rax],al
   14004517f:	add    bh,bh
   140045181:	(bad)  
   140045182:	(bad)  
   140045183:	push   QWORD PTR [rax+0x4c]
   140045186:	add    eax,DWORD PTR [rax]
   140045188:	add    BYTE PTR [rax],al
   14004518a:	add    BYTE PTR [rax],al
   14004518c:	nop
   14004518d:	add    r8,QWORD PTR [rax]
   140045190:	jo     0x1400451d5
   140045192:	add    BYTE PTR [rax],al
   140045194:	(bad)  
   140045195:	(bad)  
   140045196:	(bad)  
   140045197:	jmp    FWORD PTR [rdi+0x43]
   14004519d:	add    BYTE PTR [rax],al
   14004519f:	add    BYTE PTR [rbp-0xffffbd],dh
   1400451a5:	(bad)  
   1400451a6:	(bad)  
   1400451a7:	(bad)  
   1400451a8:	fiadd  WORD PTR [rbx+0x0]
   1400451ab:	add    BYTE PTR [rax],al
   1400451ad:	add    BYTE PTR [rax],al
   1400451af:	add    BYTE PTR [rip+0xffffffffff000044],bh        # 0x13f0451f9
   1400451b5:	(bad)  
   1400451b6:	(bad)  
   1400451b7:	jmp    QWORD PTR [rsi+0x44]
   1400451ba:	add    BYTE PTR [rax],al
   1400451bc:	add    BYTE PTR [rax],al
   1400451be:	add    BYTE PTR [rax],al
   1400451c0:	mov    eax,DWORD PTR [rax+rax*1+0x0]
   1400451c4:	(bad)  
   1400451c5:	(bad)  
   1400451c6:	(bad)  
   1400451c7:	call   FWORD PTR [rdx+0x44]
   1400451cd:	add    BYTE PTR [rax],al
   1400451cf:	add    ah,dl
   1400451d1:	add    BYTE PTR [rax],r8b
   1400451d4:	add    DWORD PTR [rax],eax
   1400451d6:	add    BYTE PTR [rax],al
   1400451d8:	inc    DWORD PTR [rax+rax*1+0x0]
   1400451dc:	add    BYTE PTR [rax],al
   1400451de:	add    BYTE PTR [rax],al
   1400451e0:	sub    al,BYTE PTR [rbp+0x0]
   1400451e3:	add    bh,bh
   1400451e5:	(bad)  
   1400451e6:	(bad)  
   1400451e7:	(bad)  
   1400451e8:	cmp    DWORD PTR [rbp+0x0],eax
   1400451eb:	add    BYTE PTR [rcx],al
   1400451ed:	add    BYTE PTR [rax],al
   1400451ef:	add    BYTE PTR [rsi+0x45],ah
   1400451f2:	add    BYTE PTR [rax],al
   1400451f4:	add    BYTE PTR [rax],al
   1400451f6:	add    BYTE PTR [rax],al
   1400451f8:	xchg   ecx,eax
   1400451f9:	add    BYTE PTR [r8],r8b
   1400451fc:	(bad)  
   1400451fd:	(bad)  
   1400451fe:	(bad)  
   1400451ff:	jmp    QWORD PTR [rax+0x1000045]
   140045205:	add    BYTE PTR [rax],al
   140045207:	add    ah,ah
   140045209:	add    BYTE PTR [r8],r8b
   14004520c:	add    BYTE PTR [rax],al
   14004520e:	add    BYTE PTR [rax],al
   140045210:	cmovbe eax,DWORD PTR [rax]
   140045213:	add    bh,bh
   140045215:	(bad)  
   140045216:	(bad)  
   140045217:	call   FWORD PTR [rsi]
   140045219:	rex.RX add BYTE PTR [rax],r8b
   14004521c:	add    DWORD PTR [rax],eax
   14004521e:	add    BYTE PTR [rax],al
   140045220:	(bad)  
   140045221:	rex.RX add BYTE PTR [rax],r8b
   140045224:	add    BYTE PTR [rax],al
   140045226:	add    BYTE PTR [rax],al
   140045228:	(bad)
   14004522b:	add    bh,bh
   14004522d:	(bad)  
   14004522e:	(bad)  
   14004522f:	call   FWORD PTR [rcx]
   140045231:	cs (bad) 
   140045233:	add    BYTE PTR [rsp+riz*2],bl
   140045236:	(bad)  
   140045237:	add    BYTE PTR [rax],bl
   140045239:	xor    al,0x15
   14004523b:	add    BYTE PTR [rbx],cl
   14004523d:	add    DWORD PTR [rdx],edx
   14004523f:	add    BYTE PTR [rax+rsi*2],al
   140045242:	add    BYTE PTR [rax],al
   140045244:	jo     0x1400452a4
   140045246:	add    DWORD PTR [rax],eax
   140045248:	movabs al,ds:0xe0000000820003dc
   140045251:	add    BYTE PTR [r8],al
   140045254:	(bad)  
   140045255:	(bad)  
   140045256:	(bad)  
   140045257:	call   FWORD PTR [rdx+rax*2+0x0]
   14004525b:	add    BYTE PTR [rax],al
   14004525d:	add    BYTE PTR [rax],al
   14004525f:	add    BYTE PTR [rbp-0xffffbe],al
   140045265:	(bad)  
   140045266:	(bad)  
   140045267:	call   FWORD PTR [rsi+0x42]
   14004526d:	add    BYTE PTR [rax],al
   14004526f:	add    dl,ah
   140045271:	rex.X add BYTE PTR [rax],al
   140045274:	(bad)  
   140045275:	(bad)  
   140045276:	(bad)  
   140045277:	(bad)  
   140045278:	clc    
   140045279:	rex.X add BYTE PTR [rax],al
   14004527c:	add    BYTE PTR [rax],al
   14004527e:	add    BYTE PTR [rax],al
   140045280:	xor    BYTE PTR [rbx+0x0],al
   140045283:	add    bh,bh
   140045285:	(bad)  
   140045286:	(bad)  
   140045287:	call   FWORD PTR [rcx]
   140045289:	cs (bad) 
   14004528b:	add    BYTE PTR [rsp+riz*2],bl
   14004528e:	sbb    al,BYTE PTR [rax]
   140045290:	sbb    BYTE PTR [rcx+rbx*1],dh
   140045293:	add    BYTE PTR [rbx],cl
   140045295:	add    DWORD PTR [rsi],edx
   140045297:	add    BYTE PTR [rax+rsi*2],al
   14004529a:	add    BYTE PTR [rax],al
   14004529c:	jo     0x1400452fc
   14004529e:	add    DWORD PTR [rax],eax
   1400452a0:	rcr    ah,1
   1400452a2:	add    eax,DWORD PTR [rax]
   1400452a4:	movabs ds:0xb0ffffffff000000,al
   1400452ad:	add    r8,QWORD PTR [rax]
   1400452b0:	rex
   1400452b1:	add    BYTE PTR [rax],al
   1400452b4:	(bad)  
   1400452b5:	(bad)  
   1400452b6:	(bad)  
   1400452b7:	(bad)  
   1400452b8:	mov    esp,0x40
   1400452bd:	add    BYTE PTR [rax],al
   1400452bf:	add    ch,ah
   1400452c1:	add    BYTE PTR [rax],al
   1400452c4:	(bad)  
   1400452c5:	(bad)  
   1400452c6:	(bad)  
   1400452c7:	inc    DWORD PTR [rcx]
   1400452c9:	add    BYTE PTR [r8],al
   1400452cc:	add    BYTE PTR [rax],al
   1400452ce:	add    BYTE PTR [rax],al
   1400452d0:	rex.RB
   1400452d1:	add    BYTE PTR [r8],al
   1400452d4:	(bad)  
   1400452d5:	(bad)  
   1400452d6:	(bad)  
   1400452d7:	call   FWORD PTR [rsi+0x41]
   1400452da:	add    BYTE PTR [rax],al
   1400452dc:	add    BYTE PTR [rax],al
   1400452de:	add    BYTE PTR [rax],al
   1400452e0:	sahf   
   1400452e1:	add    BYTE PTR [r8],al
   1400452e4:	(bad)  
   1400452e5:	(bad)  
   1400452e6:	(bad)  
   1400452e7:	call   FWORD PTR [rcx]
   1400452e9:	cs (bad) 
   1400452eb:	add    BYTE PTR [rsp+riz*2],bl
   1400452ee:	(bad)  
   1400452ef:	add    BYTE PTR [rax],bl
   1400452f1:	xor    al,0x15
   1400452f3:	add    BYTE PTR [rbx],cl
   1400452f5:	add    DWORD PTR [rdx],edx
   1400452f7:	add    BYTE PTR [rax+rsi*2],al
   1400452fa:	add    BYTE PTR [rax],al
   1400452fc:	jo     0x14004535c
   1400452fe:	add    DWORD PTR [rax],eax
   140045300:	add    ch,bl
   140045302:	add    eax,DWORD PTR [rax]
   140045304:	(bad)  
   140045305:	add    BYTE PTR [rax],al
   140045307:	add    bh,bh
   140045309:	(bad)  
   14004530a:	(bad)  
   14004530b:	inc    DWORD PTR [rax-0x4ffffcb0]
   140045311:	add    BYTE PTR ds:[rax],al
   140045314:	(bad)  
   140045315:	(bad)  
   140045316:	(bad)  
   140045317:	jmp    FWORD PTR [rdi+rdi*1]
   14004531a:	add    BYTE PTR [rax],al
   14004531c:	add    BYTE PTR [rax],al
   14004531e:	add    BYTE PTR [rax],al
   140045320:	push   rbp
   140045321:	(bad)  
   140045322:	add    BYTE PTR [rax],al
   140045324:	(bad)  
   140045325:	(bad)  
   140045326:	(bad)  
   140045327:	jmp    FWORD PTR [rsi+0x3f]
   14004532a:	add    BYTE PTR [rax],al
   14004532c:	add    BYTE PTR [rax],al
   14004532e:	add    BYTE PTR [rax],al
   140045330:	mov    dl,0x3f
   140045332:	add    BYTE PTR [rax],al
   140045334:	(bad)  
   140045335:	(bad)  
   140045336:	(bad)  
   140045337:	dec    eax
   140045339:	(bad)  
   14004533a:	add    BYTE PTR [rax],al
   14004533c:	add    BYTE PTR [rax],al
   14004533e:	add    BYTE PTR [rax],al
   140045340:	add    eax,0xff000040
   140045345:	(bad)  
   140045346:	(bad)  
   140045347:	call   FWORD PTR [rcx]
   140045349:	xor    al,0x9
   14004534b:	add    BYTE PTR [rdx],ah
   14004534d:	push   rsp
   14004534e:	rex.WRB add BYTE PTR [r14],r11b
   140045351:	xor    al,0x4c
   140045353:	add    BYTE PTR [rsi],cl
   140045355:	add    DWORD PTR [rsi+0x0],eax
   140045358:	(bad)  
   140045359:	rol    BYTE PTR [rip+0x600470],0x0        # 0x1406457d0
   140045360:	jo     0x1400453c0
   140045362:	add    DWORD PTR [rax],eax
   140045364:	xor    ch,bl
   140045366:	add    eax,DWORD PTR [rax]
   140045368:	and    al,BYTE PTR [rdx]
   14004536a:	add    BYTE PTR [rax],al
   14004536c:	(bad)  
   14004536d:	(bad)  
   14004536e:	(bad)  
   14004536f:	call   rax
   140045371:	add    r8,QWORD PTR [rax]
   140045374:	add    BYTE PTR [rax],al
   140045376:	add    BYTE PTR [rax],al
   140045378:	lock add r8,QWORD PTR [rax]
   14004537c:	sar    BYTE PTR [rbx],0x0
   14004537f:	add    bh,bh
   140045381:	(bad)  
   140045382:	(bad)  
   140045383:	inc    DWORD PTR [rcx]
   140045385:	cmp    al,0x0
   140045387:	add    BYTE PTR [rax],al
   140045389:	add    BYTE PTR [rax],al
   14004538b:	add    BYTE PTR [rdi],al
   14004538d:	cmp    al,0x0
   14004538f:	add    bh,bh
   140045391:	(bad)  
   140045392:	(bad)  
   140045393:	push   QWORD PTR [rax]
   140045395:	cmp    al,0x0
   140045397:	add    BYTE PTR [rax],al
   140045399:	add    BYTE PTR [rax],al
   14004539b:	add    BYTE PTR [rdi],dh
   14004539d:	cmp    al,0x0
   14004539f:	add    bh,bh
   1400453a1:	(bad)  
   1400453a2:	(bad)  
   1400453a3:	jmp    QWORD PTR [rax+0x3c]
   1400453a6:	add    BYTE PTR [rax],al
   1400453a8:	add    BYTE PTR [rax],al
   1400453aa:	add    BYTE PTR [rax],al
   1400453ac:	movabs ds:0xce0000000100003c,eax
   1400453b5:	cmp    al,0x0
   1400453b7:	add    BYTE PTR [rax],al
   1400453b9:	add    BYTE PTR [rax],al
   1400453bb:	add    BYTE PTR [rdx],al
   1400453bd:	cmp    eax,0xffff0000
   1400453c2:	(bad)  
   1400453c3:	jmp    QWORD PTR [rdi]
   1400453c5:	cmp    eax,0x10000
   1400453ca:	add    BYTE PTR [rax],al
   1400453cc:	push   rbx
   1400453cd:	cmp    eax,0x0
   1400453d2:	add    BYTE PTR [rax],al
   1400453d4:	xchg   DWORD PTR [rip+0xffffffffffff0000],edi        # 0x1400353da
   1400453da:	(bad)  
   1400453db:	call   QWORD PTR [rsi+0x100003d]
   1400453e1:	add    BYTE PTR [rax],al
   1400453e3:	add    BYTE PTR [rdi],bh
   1400453e5:	add    BYTE PTR ds:[rax],al
   1400453e8:	add    BYTE PTR [rax],al
   1400453ea:	add    BYTE PTR [rax],al
   1400453ec:	jae    0x14004542c
   1400453ee:	add    BYTE PTR [rax],al
   1400453f0:	(bad)  
   1400453f1:	(bad)  
   1400453f2:	(bad)  
   1400453f3:	inc    DWORD PTR [rcx]
   1400453f5:	(bad)  
   1400453f6:	add    al,BYTE PTR [rax]
   1400453f8:	(bad)  
   1400453f9:	xor    al,BYTE PTR [rdx]
   1400453fb:	push   rax
   1400453fc:	sbb    DWORD PTR [rbx],esp
   1400453fe:	(bad)  
   1400453ff:	add    BYTE PTR [rbx],cl
   140045401:	xchg   edx,eax
   140045402:	(bad)  
   140045403:	rol    BYTE PTR [rip+0x3600470],0x50        # 0x14364587a
   14004540a:	add    dh,BYTE PTR [rax]
   14004540c:	jo     0x14004546c
   14004540e:	add    DWORD PTR [rax],eax
   140045410:	(bad)  
   140045411:	fld    QWORD PTR [rbx]
   140045413:	add    BYTE PTR [rdx+0x0],al
   140045416:	add    BYTE PTR [rax],al
   140045418:	(bad)  
   140045419:	(bad)  
   14004541a:	(bad)  
   14004541b:	call   QWORD PTR [rax]
   14004541d:	add    r8,QWORD PTR [r8]
   140045420:	add    BYTE PTR [rax],al
   140045422:	add    BYTE PTR [rax],al
   140045424:	xor    BYTE PTR [rbp+0x3],cl
   140045427:	add    BYTE PTR [rcx],al
   140045429:	add    BYTE PTR [rax],al
   14004542b:	add    BYTE PTR [rax+0x4d],dl
   14004542e:	add    eax,DWORD PTR [rax]
   140045430:	add    al,BYTE PTR [rax]
   140045432:	add    BYTE PTR [rax],al
   140045434:	jo     0x140045483
   140045436:	add    eax,DWORD PTR [rax]
   140045438:	push   rax
   140045439:	cmp    al,BYTE PTR [rax]
   14004543b:	add    bh,bh
   14004543d:	(bad)  
   14004543e:	(bad)  
   14004543f:	dec    DWORD PTR [rbx+0x100003a]
   140045445:	add    BYTE PTR [rax],al
   140045447:	add    BYTE PTR [rsi+0x200003a],bl
   14004544d:	add    BYTE PTR [rax],al
   14004544f:	add    BYTE PTR [rsi+0x300003a],ch
   140045455:	add    BYTE PTR [rax],al
   140045457:	add    dl,bh
   140045459:	cmp    al,BYTE PTR [rax]
   14004545b:	add    BYTE PTR [rax],al
   14004545d:	add    BYTE PTR [rax],al
   14004545f:	add    BYTE PTR [rdx],bl
   140045461:	cmp    eax,DWORD PTR [rax]
   140045463:	add    bh,bh
   140045465:	(bad)  
   140045466:	(bad)  
   140045467:	call   FWORD PTR [rcx]
   140045469:	adc    eax,DWORD PTR [rcx]
   14004546b:	add    BYTE PTR [rdx+rax*2],al
   14004546e:	add    BYTE PTR [rax],al
   140045470:	sbb    BYTE PTR [rax+0x1],0x0
   140045474:	adc    BYTE PTR [rax],al
   140045476:	add    BYTE PTR [rax],al
   140045478:	sbb    DWORD PTR [rip+0x420d0005],ecx        # 0x182115483
   14004547e:	or     DWORD PTR [rax+0x8],esi
   140045481:	(bad)  
   140045482:	(bad)  
   140045483:	push   rax
   140045484:	(bad)  
   140045485:	xor    BYTE PTR [rax],al
   140045487:	add    BYTE PTR [rbx+rdx*2-0x226fffff],dh
   14004548e:	add    eax,DWORD PTR [rax]
   140045490:	sbb    DWORD PTR [rcx],esi
   140045492:	(bad)  
   140045493:	add    BYTE PTR [rdi],bl
   140045495:	xor    al,0x17
   140045497:	add    BYTE PTR [rdx],dl
   140045499:	add    DWORD PTR [rdx],edx
   14004549b:	add    BYTE PTR [rbx],cl
   14004549d:	ror    BYTE PTR [rcx],0x70
   1400454a0:	or     BYTE PTR [rax+0x0],ah
   1400454a3:	add    BYTE PTR [rax+0x5e],dh
   1400454a6:	add    DWORD PTR [rax],eax
   1400454a8:	nop
   1400454a9:	fld    QWORD PTR [rbx]
   1400454ab:	add    BYTE PTR [rbx+0x1000000],al
   1400454b1:	add    BYTE PTR [rax],al
   1400454b3:	add    BYTE PTR [rbx],al
   1400454b5:	add    BYTE PTR [rax],al
   1400454b7:	add    BYTE PTR [rax+rax*1],al
   1400454ba:	add    BYTE PTR [rax],al
   1400454bc:	add    DWORD PTR [rax],eax
   1400454be:	add    BYTE PTR [rax],al
   1400454c0:	(bad)  
   1400454c1:	push   rsp
   1400454c2:	add    al,0x0
   1400454c4:	add    BYTE PTR [rax],al
	...
   1400454cf:	add    al,dl
   1400454d1:	add    r8,QWORD PTR [r8]
   1400454d4:	pop    rax
   1400454d5:	add    BYTE PTR [rax],al
   1400454d7:	add    bh,bh
   1400454d9:	(bad)  
   1400454da:	(bad)  
   1400454db:	call   QWORD PTR [rax+0x34d]
   1400454e1:	add    BYTE PTR [rax],al
   1400454e3:	add    BYTE PTR [rax],al
   1400454e5:	add    BYTE PTR [rax],al
   1400454e7:	add    BYTE PTR [rcx],al
   1400454e9:	add    BYTE PTR [rax],al
   1400454eb:	add    BYTE PTR [rax+0x100034d],dh
	...
   1400454fd:	add    BYTE PTR [rax],al
   1400454ff:	add    BYTE PTR [rax+0x38],dh
   140045502:	add    BYTE PTR [rax],al
   140045504:	(bad)  
   140045505:	(bad)  
   140045506:	(bad)  
   140045507:	inc    edi
   140045509:	cmp    BYTE PTR [rax],al
   14004550b:	add    BYTE PTR [rcx],al
   14004550d:	add    BYTE PTR [rax],al
   14004550f:	add    dl,bl
   140045511:	cmp    BYTE PTR [rax],al
   140045513:	add    BYTE PTR [rdx],al
   140045515:	add    BYTE PTR [rax],al
   140045517:	add    BYTE PTR [rcx+rdi*1],al
   14004551a:	add    BYTE PTR [rax],al
   14004551c:	add    DWORD PTR [rax],eax
   14004551e:	add    BYTE PTR [rax],al
   140045520:	jae    0x14004555b
   140045522:	add    BYTE PTR [rax],al
   140045524:	(bad)  
   140045525:	(bad)  
   140045526:	(bad)  
   140045527:	call   rax
   140045529:	add    r8,QWORD PTR [r8]
   14004552c:	add    BYTE PTR [rax],al
   14004552e:	add    BYTE PTR [rax],al
   140045530:	loopne 0x14004557f
   140045532:	add    eax,DWORD PTR [rax]
   140045534:	add    al,0x0
   140045536:	add    BYTE PTR [rax],al
   140045538:	adc    cl,BYTE PTR [rsi+0x3]
   14004553b:	add    BYTE PTR [rax],al
   14004553d:	add    BYTE PTR [rax],al
   14004553f:	add    BYTE PTR [rcx],bl
   140045541:	or     eax,0x420d0005
   140045546:	or     DWORD PTR [rax+0x8],esi
   140045549:	(bad)  
   14004554a:	(bad)  
   14004554b:	push   rax
   14004554c:	(bad)  
   14004554d:	xor    BYTE PTR [rax],al
   14004554f:	add    BYTE PTR [rbx+rdx*2-0x223fffff],dh
   140045556:	add    eax,DWORD PTR [rax]
   140045558:	sbb    DWORD PTR [rax*1+0xf621300],ebx
   14004555f:	ror    BYTE PTR [rip+0xb600c70],0x30        # 0x14b6461d6
   140045566:	add    BYTE PTR [rax],al
   140045568:	mov    ah,0x53
   14004556a:	add    DWORD PTR [rax],eax
   14004556c:	rcr    ch,0x3
   14004556f:	add    BYTE PTR [rax],al
   140045571:	add    BYTE PTR [rax],al
   140045573:	add    BYTE PTR [rcx],al
   140045575:	add    BYTE PTR [rax],al
   140045577:	add    BYTE PTR [rdx],al
   140045579:	add    BYTE PTR [rax],al
   14004557b:	add    BYTE PTR [rcx],al
   14004557d:	add    BYTE PTR [rax],al
   14004557f:	add    BYTE PTR [rbp+rdx*2+0x400004],al
	...
   14004558e:	add    BYTE PTR [rax],al
   140045590:	rex
   140045591:	rex.WRX add r8,QWORD PTR [rax]
   140045594:	pop    rax
   140045595:	add    BYTE PTR [rax],al
   140045597:	add    bh,bh
   140045599:	(bad)  
   14004559a:	(bad)  
   14004559b:	inc    DWORD PTR [rax]
   14004559d:	add    BYTE PTR [rax],al
   14004559f:	add    BYTE PTR [rax],al
   1400455a1:	add    BYTE PTR [rax],al
   1400455a3:	add    BYTE PTR [rax],ah
   1400455a5:	rex.WRX add r8,QWORD PTR [rax]
   1400455a8:	(bad)  
   1400455a9:	(bad)  
   1400455aa:	(bad)  
   1400455ab:	inc    DWORD PTR [rax]
   1400455ad:	add    BYTE PTR [rax],al
   1400455af:	add    al,ah
   1400455b1:	(bad)  
   1400455b2:	add    BYTE PTR [rax],al
   1400455b4:	(bad)  
   1400455b5:	(bad)  
   1400455b6:	(bad)  
   1400455b7:	dec    DWORD PTR [rdx]
   1400455b9:	cmp    BYTE PTR [rax],al
   1400455bb:	add    BYTE PTR [rax],al
   1400455bd:	add    BYTE PTR [rax],al
   1400455bf:	add    BYTE PTR [rdi],bl
   1400455c1:	cmp    BYTE PTR [rax],al
   1400455c3:	add    BYTE PTR [rcx],al
   1400455c5:	add    BYTE PTR [rax],al
   1400455c7:	add    BYTE PTR [rdi+0x38],al
   1400455ca:	add    BYTE PTR [rax],al
   1400455cc:	add    BYTE PTR [rax],al
   1400455ce:	add    BYTE PTR [rax],al
   1400455d0:	push   rsi
   1400455d1:	cmp    BYTE PTR [rax],al
   1400455d3:	add    bh,bh
   1400455d5:	(bad)  
   1400455d6:	(bad)  
   1400455d7:	inc    DWORD PTR [rax+0x4e]
   1400455da:	add    eax,DWORD PTR [rax]
   1400455dc:	add    BYTE PTR [rax],al
   1400455de:	add    BYTE PTR [rax],al
   1400455e0:	push   rax
   1400455e1:	rex.WRX add r8,QWORD PTR [rax]
   1400455e4:	add    al,BYTE PTR [rax]
   1400455e6:	add    BYTE PTR [rax],al
   1400455e8:	jg     0x140045638
   1400455ea:	add    eax,DWORD PTR [rax]
   1400455ec:	add    BYTE PTR [rax],al
   1400455ee:	add    BYTE PTR [rax],al
   1400455f0:	add    DWORD PTR [rdi],ecx
   1400455f2:	(bad)  
   1400455f3:	add    BYTE PTR [rdi],cl
   1400455f5:	or     al,BYTE PTR fs:[rax]
   1400455f8:	sysenter 
   1400455fa:	or     DWORD PTR [rax],eax
   1400455fc:	rsqrtps xmm1,XMMWORD PTR [rbx]
   1400455ff:	jo     0x140045612
   140045601:	adc    BYTE PTR [rdx],al
   140045603:	add    BYTE PTR [rdi],al
   140045605:	add    DWORD PTR [rbx],edx
   140045607:	add    BYTE PTR [rbx+rdx*2-0x220fffff],dh
   14004560e:	add    eax,DWORD PTR [rax]
   140045610:	(bad)  
   140045611:	(bad)  
   140045612:	(bad)  
   140045613:	call   QWORD PTR [rax+0x34e]
   140045619:	add    BYTE PTR [rax],al
   14004561b:	add    BYTE PTR [rax+0x3000034e],dh
   140045621:	xor    al,BYTE PTR [rax]
   140045623:	add    bh,bh
   140045625:	(bad)  
   140045626:	(bad)  
   140045627:	jmp    FWORD PTR [rdi+0x32]
   14004562a:	add    BYTE PTR [rax],al
   14004562c:	add    BYTE PTR [rax],al
   14004562e:	add    BYTE PTR [rax],al
   140045630:	jp     0x140045664
   140045632:	add    BYTE PTR [rax],al
   140045634:	add    DWORD PTR [rax],eax
   140045636:	add    BYTE PTR [rax],al
   140045638:	mov    edx,0x32
   14004563d:	add    BYTE PTR [rax],al
   14004563f:	add    BYTE PTR [rcx],bl
   140045641:	or     al,BYTE PTR [rdx]
   140045643:	add    BYTE PTR [rdx],cl
   140045645:	push   rdx
   140045646:	(bad)  
   140045647:	push   rax
   140045648:	mov    ah,0x53
   14004564a:	add    DWORD PTR [rax],eax
   14004564c:	and    dh,bl
   14004564e:	add    eax,DWORD PTR [rax]
   140045650:	sbb    DWORD PTR [rdi],ecx
   140045652:	(bad)  
   140045653:	add    BYTE PTR [rdi],cl
   140045655:	push   rdx
   140045656:	or     eax,eax
   140045658:	or     DWORD PTR [rax+0x8],esi
   14004565b:	(bad)  
   14004565c:	(bad)  
   14004565d:	push   rax
   14004565e:	(bad)  
   14004565f:	xor    BYTE PTR [rbx+rdx*2-0x21dfffff],dh
   140045666:	add    eax,DWORD PTR [rax]
   140045668:	sbb    DWORD PTR [rsi],ebp
   14004566a:	or     DWORD PTR [rax],eax
   14004566c:	adc    eax,DWORD PTR [rcx]
   14004566e:	adc    al,0x0
   140045670:	or     al,0xf0
   140045672:	or     ah,al
   140045674:	or     al,dl
   140045676:	(bad)  
   140045677:	rol    BYTE PTR [rax+rsi*2],0x3
   14004567b:	(bad)  
   14004567c:	add    dh,BYTE PTR [rax]
   14004567e:	add    BYTE PTR [rax],al
   140045680:	jo     0x1400456e0
   140045682:	add    DWORD PTR [rax],eax
   140045684:	and    dh,bl
   140045686:	add    eax,DWORD PTR [rax]
   140045688:	xchg   ebx,eax
	...
   140045691:	add    BYTE PTR [rax],al
   140045693:	add    BYTE PTR [rcx],al
   140045695:	add    BYTE PTR [rax],al
   140045697:	add    BYTE PTR [rcx],al
   140045699:	add    BYTE PTR [rax],al
   14004569b:	add    al,cl
   14004569d:	push   rsi
   14004569e:	add    al,0x0
   1400456a0:	add    eax,DWORD PTR [rax]
   1400456a2:	add    BYTE PTR [rax],al
   1400456a4:	add    eax,DWORD PTR [rax]
   1400456a6:	add    BYTE PTR [rax],al
   1400456a8:	add    al,0x0
   1400456aa:	add    BYTE PTR [rax],al
   1400456ac:	add    DWORD PTR [rax],eax
   1400456ae:	add    BYTE PTR [rax],al
   1400456b0:	mov    ah,0x56
   1400456b2:	add    al,0x0
   1400456b4:	add    BYTE PTR [rax],al
	...
   1400456bf:	add    BYTE PTR [rax+0x4800034f],al
   1400456c5:	add    BYTE PTR [rax],al
   1400456c7:	add    BYTE PTR [rax+0x0],al
	...
   1400456d2:	add    BYTE PTR [rax],al
   1400456d4:	ror    BYTE PTR [rsi+0x3],1
   1400456d7:	add    BYTE PTR [rax+0x0],ch
   1400456da:	add    BYTE PTR [rax],al
   1400456dc:	(bad)  
   1400456dd:	(bad)  
   1400456de:	(bad)  
   1400456df:	inc    DWORD PTR [rax]
   1400456e1:	add    BYTE PTR [rax],al
   1400456e3:	add    bh,bh
   1400456e5:	(bad)  
   1400456e6:	(bad)  
   1400456e7:	inc    DWORD PTR [rax]
   1400456e9:	add    BYTE PTR [rax],al
   1400456eb:	add    bh,bh
   1400456ed:	(bad)  
   1400456ee:	(bad)  
   1400456ef:	jmp    QWORD PTR [rax+0x4f]
   1400456f2:	add    eax,DWORD PTR [rax]
   1400456f4:	add    al,BYTE PTR [rax]
   1400456f6:	add    BYTE PTR [rax],al
   1400456f8:	add    BYTE PTR [rax],al
   1400456fa:	add    BYTE PTR [rax],al
   1400456fc:	add    al,BYTE PTR [rax]
   1400456fe:	add    BYTE PTR [rax],al
   140045700:	add    BYTE PTR [rax],al
   140045702:	add    BYTE PTR [rax],al
   140045704:	(bad)  
   140045705:	(bad)  
   140045706:	(bad)  
   140045707:	call   rax
   140045709:	rex.WRXB add r8,QWORD PTR [r8]
   14004570c:	loopne 0x14004573b
   14004570e:	add    BYTE PTR [rax],al
   140045710:	(bad)  
   140045711:	(bad)  
   140045712:	(bad)  
   140045713:	jmp    QWORD PTR [rax]
   140045715:	(bad)  
   140045716:	add    BYTE PTR [rax],al
   140045718:	add    BYTE PTR [rax],al
   14004571a:	add    BYTE PTR [rax],al
   14004571c:	mov    cl,0x2f
   14004571e:	add    BYTE PTR [rax],al
   140045720:	(bad)  
   140045721:	(bad)  
   140045722:	(bad)  
   140045723:	jmp    QWORD PTR [rdi+0x30]
   140045726:	add    BYTE PTR [rax],al
   140045728:	add    al,BYTE PTR [rax]
   14004572a:	add    BYTE PTR [rax],al
   14004572c:	(bad)  
   14004572d:	xor    BYTE PTR [rax],al
   14004572f:	add    BYTE PTR [rbx],al
   140045731:	add    BYTE PTR [rax],al
   140045733:	add    dl,ah
   140045735:	xor    BYTE PTR [rax],al
   140045737:	add    BYTE PTR [rdx],al
   140045739:	add    BYTE PTR [rax],al
   14004573b:	add    BYTE PTR [rip+0xffffffffff000031],bl        # 0x13f045772
   140045741:	(bad)  
   140045742:	(bad)  
   140045743:	jmp    FWORD PTR [rcx+0x31]
   140045746:	add    BYTE PTR [rax],al
   140045748:	add    eax,0xed000000
   14004574d:	xor    DWORD PTR [rax],eax
   14004574f:	add    bh,bh
   140045751:	(bad)  
   140045752:	(bad)  
   140045753:	call   rax
   140045755:	rex.WRX add r8,QWORD PTR [rax]
   140045758:	add    BYTE PTR [rax],al
   14004575a:	add    BYTE PTR [rax],al
   14004575c:	loop   0x1400457ac
   14004575e:	add    eax,DWORD PTR [rax]
   140045760:	add    DWORD PTR [rax],eax
   140045762:	add    BYTE PTR [rax],al
   140045764:	rex.WRXB
   140045765:	rex.WRXB add r8,QWORD PTR [r8]
   140045768:	add    BYTE PTR [rax],al
   14004576a:	add    BYTE PTR [rax],al
   14004576c:	lea    ecx,[rdi+0x3]
   14004576f:	add    BYTE PTR [rax+rax*1],al
   140045772:	add    BYTE PTR [rax],al
   140045774:	mov    esp,0x34f
   140045779:	add    BYTE PTR [rax],al
   14004577b:	add    BYTE PTR [rcx],al
   14004577d:	clts   
   14004577f:	add    BYTE PTR [rdi],cl
   140045781:	fs (bad) 
   140045783:	add    BYTE PTR [rdi],cl
   140045785:	xor    al,0xd
   140045787:	add    BYTE PTR [rdi],cl
   140045789:	xchg   edx,eax
   14004578a:	or     esi,DWORD PTR [rax+0x19]
   14004578d:	or     al,BYTE PTR [rdx]
   14004578f:	add    BYTE PTR [rdx],cl
   140045791:	push   rdx
   140045792:	(bad)  
   140045793:	push   rax
   140045794:	mov    ah,0x53
   140045796:	add    DWORD PTR [rax],eax
   140045798:	push   rax
   140045799:	fiadd  WORD PTR [rbx]
   14004579b:	add    BYTE PTR [rcx],bl
   14004579d:	sbb    eax,DWORD PTR [rsi]
   14004579f:	add    BYTE PTR [rbx],bl
   1400457a1:	xor    al,0xd
   1400457a3:	add    BYTE PTR [rip+0x7c00972],cl        # 0x147c4611b
   1400457a9:	jo     0x1400457b1
   1400457ab:	(bad)  
   1400457ac:	mov    ah,0x53
   1400457ae:	add    DWORD PTR [rax],eax
   1400457b0:	push   rax
   1400457b1:	fiadd  WORD PTR [rbx]
   1400457b3:	add    BYTE PTR [rcx],al
   1400457b5:	add    BYTE PTR [rax],al
   1400457b7:	add    BYTE PTR [rcx],al
   1400457b9:	add    BYTE PTR [rax],al
   1400457bb:	add    BYTE PTR [rdx],al
   1400457bd:	add    BYTE PTR [rax],al
   1400457bf:	add    BYTE PTR [rcx],al
   1400457c1:	add    BYTE PTR [rax],al
   1400457c3:	add    al,cl
   1400457c5:	push   rdi
   1400457c6:	add    al,0x0
   1400457c8:	add    BYTE PTR [rax],al
	...
   1400457d3:	add    BYTE PTR [rax],dl
   1400457d5:	push   rax
   1400457d6:	add    eax,DWORD PTR [rax]
   1400457d8:	rex.W add BYTE PTR [rax],al
   1400457db:	add    bh,bh
   1400457dd:	(bad)  
   1400457de:	(bad)  
   1400457df:	push   rax
   1400457e1:	rex.WRXB add r8,QWORD PTR [r8]
	...
   1400457f4:	push   rax
   1400457f5:	and    al,0x0
   1400457f7:	add    bh,bh
   1400457f9:	(bad)  
   1400457fa:	(bad)  
   1400457fb:	dec    DWORD PTR [rdx+0x24]
   140045801:	add    BYTE PTR [rax],al
   140045803:	add    BYTE PTR [rcx+0x1000024],bh
   140045809:	add    BYTE PTR [rax],al
   14004580b:	add    ch,bh
   14004580d:	and    al,0x0
   14004580f:	add    bh,bh
   140045811:	(bad)  
   140045812:	(bad)  
   140045813:	call   QWORD PTR [rax]
   140045815:	push   rax
   140045816:	add    eax,DWORD PTR [rax]
   140045818:	add    BYTE PTR [rax],al
   14004581a:	add    BYTE PTR [rax],al
   14004581c:	sbb    eax,0x2000350
   140045821:	add    BYTE PTR [rax],al
   140045823:	add    BYTE PTR [rax],dh
   140045825:	push   rax
   140045826:	add    eax,DWORD PTR [rax]
   140045828:	add    BYTE PTR [rax],al
   14004582a:	add    BYTE PTR [rax],al
   14004582c:	adc    DWORD PTR [rdi],ecx
   14004582e:	add    al,BYTE PTR [rax]
   140045830:	(bad)  
   140045831:	push   rdx
   140045832:	add    dh,BYTE PTR [rax]
   140045834:	mov    ah,0x53
   140045836:	add    DWORD PTR [rax],eax
   140045838:	sbb    dh,0x3
   14004583b:	add    bh,bh
   14004583d:	(bad)  
   14004583e:	(bad)  
   14004583f:	inc    DWORD PTR [rax+0x50]
   140045842:	add    eax,DWORD PTR [rax]
   140045844:	add    BYTE PTR [rax+rax*1],ah
   140045847:	add    bh,bh
   140045849:	(bad)  
   14004584a:	(bad)  
   14004584b:	jmp    FWORD PTR [rsi]
   14004584d:	and    al,0x0
   14004584f:	add    BYTE PTR [rax],al
   140045851:	add    BYTE PTR [rax],al
   140045853:	add    BYTE PTR [rdx],bh
   140045855:	and    al,0x0
   140045857:	add    bh,bh
   140045859:	(bad)  
   14004585a:	(bad)  
   14004585b:	call   FWORD PTR [rcx]
   14004585d:	and    al,0x3
   14004585f:	add    BYTE PTR [rcx],cl
   140045861:	add    DWORD PTR [rax+rax*1],edx
   140045864:	add    dh,BYTE PTR [rax]
   140045866:	add    BYTE PTR [rax],al
   140045868:	jo     0x1400458c8
   14004586a:	add    DWORD PTR [rax],eax
   14004586c:	mov    al,0xde
   14004586e:	add    eax,DWORD PTR [rax]
   140045870:	(bad)  
   140045871:	add    BYTE PTR [rax],al
   140045873:	add    bh,bh
   140045875:	(bad)  
   140045876:	(bad)  
   140045877:	jmp    QWORD PTR [rax+0x50]
   14004587a:	add    eax,DWORD PTR [rax]
   14004587c:	nop
   14004587d:	(bad)  
   14004587e:	add    BYTE PTR [rax],al
   140045880:	(bad)  
   140045881:	(bad)  
   140045882:	(bad)  
   140045883:	(bad)  
   140045884:	in     eax,dx
   140045885:	(bad)  
   140045886:	add    BYTE PTR [rax],al
   140045888:	add    BYTE PTR [rax],al
   14004588a:	add    BYTE PTR [rax],al
   14004588c:	push   rdi
   14004588d:	and    BYTE PTR [rax],al
   14004588f:	add    bh,bh
   140045891:	(bad)  
   140045892:	(bad)  
   140045893:	push   QWORD PTR [rbp+0x20]
   140045896:	add    BYTE PTR [rax],al
   140045898:	add    BYTE PTR [rax],al
   14004589a:	add    BYTE PTR [rax],al
   14004589c:	xor    eax,0xff000021
   1400458a1:	(bad)  
   1400458a2:	(bad)  
   1400458a3:	call   FWORD PTR [rcx]
   1400458a5:	cs (bad) 
   1400458a7:	add    BYTE PTR [rsp+riz*2],bl
   1400458aa:	adc    eax,0x14341800
   1400458af:	add    BYTE PTR [rbx],cl
   1400458b1:	add    DWORD PTR [rdx],edx
   1400458b3:	add    BYTE PTR [rax+rsi*2],al
   1400458b6:	add    BYTE PTR [rax],al
   1400458b8:	jo     0x140045918
   1400458ba:	add    DWORD PTR [rax],eax
   1400458bc:	loopne 0x14004589c
   1400458be:	add    eax,DWORD PTR [rax]
   1400458c0:	(bad)  
   1400458c1:	add    BYTE PTR [rax],al
   1400458c3:	add    BYTE PTR [rax+0x1e],al
   1400458c6:	add    BYTE PTR [rax],al
   1400458c8:	(bad)  
   1400458c9:	(bad)  
   1400458ca:	(bad)  
   1400458cb:	jmp    FWORD PTR [rdx+0x1e]
   1400458d1:	add    BYTE PTR [rax],al
   1400458d3:	add    al,ah
   1400458d5:	(bad)  
   1400458d6:	add    BYTE PTR [rax],al
   1400458d8:	(bad)  
   1400458d9:	(bad)  
   1400458da:	(bad)  
   1400458db:	push   rsp
   1400458dd:	(bad)  
   1400458de:	add    BYTE PTR [rax],al
   1400458e0:	add    BYTE PTR [rax],al
   1400458e2:	add    BYTE PTR [rax],al
   1400458e4:	push   rax
   1400458e5:	(bad)  
   1400458e6:	add    BYTE PTR [rax],al
   1400458e8:	(bad)  
   1400458e9:	(bad)  
   1400458ea:	(bad)  
   1400458eb:	call   FWORD PTR [rcx]
   1400458ed:	xor    eax,0x64230009
   1400458f2:	pop    rbp
   1400458f3:	add    BYTE PTR [rdi],bl
   1400458f5:	push   rsp
   1400458f6:	pop    rsp
   1400458f7:	add    BYTE PTR [rbx],bl
   1400458f9:	xor    al,0x5a
   1400458fb:	add    BYTE PTR [rbx],cl
   1400458fd:	add    DWORD PTR [rax+0x0],ebx
   140045900:	add    al,0x70
   140045902:	add    BYTE PTR [rax],al
   140045904:	jo     0x140045964
   140045906:	add    DWORD PTR [rax],eax
   140045908:	adc    bh,bl
   14004590a:	add    eax,DWORD PTR [rax]
   14004590c:	mov    dl,0x2
   14004590e:	add    BYTE PTR [rax],al
   140045910:	(bad)  
   140045911:	(bad)  
   140045912:	(bad)  
   140045913:	jmp    QWORD PTR [rax+0x350]
   140045919:	add    BYTE PTR [rax],al
   14004591b:	add    al,al
   14004591d:	push   rax
   14004591e:	add    eax,DWORD PTR [rax]
   140045920:	add    DWORD PTR [rax],eax
   140045922:	add    BYTE PTR [rax],al
   140045924:	loopne 0x140045976
   140045926:	add    eax,DWORD PTR [rax]
   140045928:	add    DWORD PTR [rax],eax
   14004592a:	add    BYTE PTR [rax],al
   14004592c:	add    BYTE PTR [rcx+0x3],dl
   14004592f:	add    BYTE PTR [rbx],al
   140045931:	add    BYTE PTR [rax],al
   140045933:	add    BYTE PTR [rax],ah
   140045935:	push   rcx
   140045936:	add    eax,DWORD PTR [rax]
   140045938:	add    eax,DWORD PTR [rax]
   14004593a:	add    BYTE PTR [rax],al
   14004593c:	rex push rcx
   14004593e:	add    eax,DWORD PTR [rax]
   140045940:	add    DWORD PTR [rax],eax
   140045942:	add    BYTE PTR [rax],al
   140045944:	(bad)  
   140045945:	push   rcx
   140045946:	add    eax,DWORD PTR [rax]
   140045948:	add    DWORD PTR [rax],eax
   14004594a:	add    BYTE PTR [rax],al
   14004594c:	adc    BYTE PTR [rcx+0x3],0x0
   140045950:	add    DWORD PTR [rax],eax
   140045952:	add    BYTE PTR [rax],al
   140045954:	movabs al,ds:0xc000000001000351
   14004595d:	push   rcx
   14004595e:	add    eax,DWORD PTR [rax]
   140045960:	or     DWORD PTR [rax],eax
   140045962:	add    BYTE PTR [rax],al
   140045964:	loopne 0x1400459b7
   140045966:	add    eax,DWORD PTR [rax]
   140045968:	or     DWORD PTR [rax],eax
   14004596a:	add    BYTE PTR [rax],al
   14004596c:	add    BYTE PTR [rdx+0x3],dl
   14004596f:	add    BYTE PTR [rcx],cl
   140045971:	add    BYTE PTR [rax],al
   140045973:	add    BYTE PTR [rax],ah
   140045975:	push   rdx
   140045976:	add    eax,DWORD PTR [rax]
   140045978:	or     DWORD PTR [rax],eax
   14004597a:	add    BYTE PTR [rax],al
   14004597c:	rex push rdx
   14004597e:	add    eax,DWORD PTR [rax]
   140045980:	movabs al,ds:0xdffffffff000012
   140045989:	adc    eax,DWORD PTR [rax]
   14004598b:	add    BYTE PTR [rax],al
   14004598d:	add    BYTE PTR [rax],al
   14004598f:	add    BYTE PTR [rax+0x13],cl
   140045992:	add    BYTE PTR [rax],al
   140045994:	add    DWORD PTR [rax],eax
   140045996:	add    BYTE PTR [rax],al
   140045998:	pop    rcx
   140045999:	adc    al,0x0
   14004599b:	add    BYTE PTR [rsi],al
   14004599d:	add    BYTE PTR [rax],al
   14004599f:	add    BYTE PTR [rsp+rdx*1+0x10000],al
   1400459a6:	add    BYTE PTR [rax],al
   1400459a8:	lahf   
   1400459a9:	adc    al,0x0
   1400459ab:	add    BYTE PTR [rdi],al
   1400459ad:	add    BYTE PTR [rax],al
   1400459af:	add    dl,dl
   1400459b1:	adc    al,0x0
   1400459b3:	add    BYTE PTR [rcx],al
   1400459b5:	add    BYTE PTR [rax],al
   1400459b7:	add    BYTE PTR [rdx],bh
   1400459b9:	adc    eax,0x0
   1400459be:	add    BYTE PTR [rax],al
   1400459c0:	outs   dx,BYTE PTR ds:[rsi]
   1400459c1:	adc    eax,0xffff0000
   1400459c6:	(bad)  
   1400459c7:	dec    DWORD PTR [rbp+0x1000015]
   1400459cd:	add    BYTE PTR [rax],al
   1400459cf:	add    ah,dl
   1400459d1:	adc    eax,0x20000
   1400459d6:	add    BYTE PTR [rax],al
   1400459d8:	call   QWORD PTR [rip+0x10000]        # 0x1400559de
   1400459de:	add    BYTE PTR [rax],al
   1400459e0:	sbb    dl,BYTE PTR [rsi]
   1400459e2:	add    BYTE PTR [rax],al
   1400459e4:	add    eax,DWORD PTR [rax]
   1400459e6:	add    BYTE PTR [rax],al
   1400459e8:	pop    rax
   1400459e9:	(bad)  
   1400459ea:	add    BYTE PTR [rax],al
   1400459ec:	add    al,0x0
   1400459ee:	add    BYTE PTR [rax],al
   1400459f0:	jo     0x140045a08
   1400459f2:	add    BYTE PTR [rax],al
   1400459f4:	add    eax,0xaa000000
   1400459f9:	(bad)  
   1400459fa:	add    BYTE PTR [rax],al
   1400459fc:	add    eax,DWORD PTR [rax]
   1400459fe:	add    BYTE PTR [rax],al
   140045a00:	and    edx,DWORD PTR [rdi]
   140045a02:	add    BYTE PTR [rax],al
   140045a04:	add    DWORD PTR [rax],eax
   140045a06:	add    BYTE PTR [rax],al
   140045a08:	mov    edx,DWORD PTR [rdi]
   140045a0a:	add    BYTE PTR [rax],al
   140045a0c:	add    BYTE PTR [rax],al
   140045a0e:	add    BYTE PTR [rax],al
   140045a10:	mov    edi,0xff000017
   140045a15:	(bad)  
   140045a16:	(bad)  
   140045a17:	(bad)  
   140045a18:	ficom  WORD PTR [rdi]
   140045a1a:	add    BYTE PTR [rax],al
   140045a1c:	add    eax,DWORD PTR [rax]
   140045a1e:	add    BYTE PTR [rax],al
   140045a20:	mov    dh,0x18
   140045a22:	add    BYTE PTR [rax],al
   140045a24:	add    DWORD PTR [rax],eax
   140045a26:	add    BYTE PTR [rax],al
   140045a28:	(bad)  
   140045a29:	sbb    DWORD PTR [rax],eax
   140045a2b:	add    BYTE PTR [rax],al
   140045a2d:	add    BYTE PTR [rax],al
   140045a2f:	add    BYTE PTR [rdx+0x19],dl
   140045a32:	add    BYTE PTR [rax],al
   140045a34:	(bad)  
   140045a35:	(bad)  
   140045a36:	(bad)  
   140045a37:	push   QWORD PTR [rcx+0x19]
   140045a3a:	add    BYTE PTR [rax],al
   140045a3c:	add    DWORD PTR [rax],eax
   140045a3e:	add    BYTE PTR [rax],al
   140045a40:	test   eax,0x8000019
   140045a45:	add    BYTE PTR [rax],al
   140045a47:	add    al,ah
   140045a49:	sbb    DWORD PTR [rax],eax
   140045a4b:	add    BYTE PTR [rcx],al
   140045a4d:	add    BYTE PTR [rax],al
   140045a4f:	add    al,bh
   140045a51:	sbb    DWORD PTR [rax],eax
   140045a53:	add    BYTE PTR [rcx],cl
   140045a55:	add    BYTE PTR [rax],al
   140045a57:	add    BYTE PTR [rsi],dh
   140045a59:	sbb    al,BYTE PTR [rax]
   140045a5b:	add    BYTE PTR [rdx],cl
   140045a5d:	add    BYTE PTR [rax],al
   140045a5f:	add    BYTE PTR [rbp+0x1a],al
   140045a62:	add    BYTE PTR [rax],al
   140045a64:	or     eax,DWORD PTR [rax]
   140045a66:	add    BYTE PTR [rax],al
   140045a68:	jg     0x140045a84
   140045a6a:	add    BYTE PTR [rax],al
   140045a6c:	or     DWORD PTR [rax],eax
   140045a6e:	add    BYTE PTR [rax],al
   140045a70:	out    0x1a,al
   140045a72:	add    BYTE PTR [rax],al
   140045a74:	add    DWORD PTR [rax],eax
   140045a76:	add    BYTE PTR [rax],al
   140045a78:	rex.WRX sbb r8,QWORD PTR [rax]
   140045a7b:	add    BYTE PTR [rax],al
   140045a7d:	add    BYTE PTR [rax],al
   140045a7f:	add    BYTE PTR [rdx-0xffffe5],al
   140045a85:	(bad)  
   140045a86:	(bad)  
   140045a87:	jmp    QWORD PTR [rcx+0x900001b]
   140045a8d:	add    BYTE PTR [rax],al
   140045a8f:	add    BYTE PTR [rax],cl
   140045a91:	sbb    al,0x0
   140045a93:	add    BYTE PTR [rax+rax*1],cl
   140045a96:	add    BYTE PTR [rax],al
   140045a98:	(bad)  
   140045a99:	sbb    al,0x0
   140045a9b:	add    BYTE PTR [rip+0x51000000],cl        # 0x191045aa1
   140045aa1:	sbb    al,0x0
   140045aa3:	add    BYTE PTR [rcx],cl
   140045aa5:	add    BYTE PTR [rax],al
   140045aa7:	add    BYTE PTR [rdi+0x100001c],bh
   140045aad:	add    BYTE PTR [rax],al
   140045aaf:	add    BYTE PTR [rdi],ah
   140045ab1:	sbb    eax,0x0
   140045ab6:	add    BYTE PTR [rax],al
   140045ab8:	pop    rbx
   140045ab9:	sbb    eax,0xffff0000
   140045abe:	(bad)  
   140045abf:	(bad)  
   140045ac0:	jp     0x140045adf
   140045ac2:	add    BYTE PTR [rax],al
   140045ac4:	or     DWORD PTR [rax],eax
   140045ac6:	add    BYTE PTR [rax],al
   140045ac8:	mov    al,0x1d
   140045aca:	add    BYTE PTR [rax],al
   140045acc:	add    DWORD PTR [rax],eax
   140045ace:	add    BYTE PTR [rax],al
   140045ad0:	mov    esi,0x1d
   140045ad5:	add    BYTE PTR [rax],al
   140045ad7:	add    dl,dh
   140045ad9:	sbb    eax,0xffff0000
   140045ade:	(bad)  
   140045adf:	call   FWORD PTR [rcx]
   140045ae1:	or     al,BYTE PTR [rdx]
   140045ae3:	add    BYTE PTR [rdx],cl
   140045ae5:	push   rdx
   140045ae6:	(bad)  
   140045ae7:	push   rax
   140045ae8:	mov    ah,0x53
   140045aea:	add    DWORD PTR [rax],eax
   140045aec:	rex fild WORD PTR [rbx]
   140045aef:	add    BYTE PTR [rcx],bl
   140045af1:	(bad)  
   140045af2:	or     DWORD PTR [rax],eax
   140045af4:	sbb    DWORD PTR [rcx],eax
   140045af6:	data16 add cl,BYTE PTR [rax+rsi*8]
   140045afa:	or     ah,al
   140045afc:	or     al,dl
   140045afe:	(bad)  
   140045aff:	rol    BYTE PTR [rax+rsi*2],0x3
   140045b03:	(bad)  
   140045b04:	add    dh,BYTE PTR [rax]
   140045b06:	add    BYTE PTR [rax],al
   140045b08:	jo     0x140045b68
   140045b0a:	add    DWORD PTR [rax],eax
   140045b0c:	rex fild WORD PTR [rbx]
   140045b0f:	add    BYTE PTR [rbx],ah
   140045b11:	adc    eax,DWORD PTR [rax]
   140045b13:	add    BYTE PTR [rdi],al
   140045b15:	add    BYTE PTR [rax],al
   140045b17:	add    BYTE PTR [rdi],al
   140045b19:	add    BYTE PTR [rax],al
   140045b1b:	add    BYTE PTR [rax],cl
   140045b1d:	add    BYTE PTR [rax],al
   140045b1f:	add    BYTE PTR [rcx],al
   140045b21:	add    BYTE PTR [rax],al
   140045b23:	add    BYTE PTR [rax],ch
   140045b25:	pop    rbx
   140045b26:	add    al,0x0
   140045b28:	add    BYTE PTR [rax],al
	...
   140045b33:	add    BYTE PTR [rax+0x53],al
   140045b36:	add    eax,DWORD PTR [rax]
   140045b38:	rex.W add BYTE PTR [rax],al
   140045b3b:	add    bh,bh
   140045b3d:	(bad)  
   140045b3e:	(bad)  
   140045b3f:	jmp    QWORD PTR [rax+0x52]
   140045b42:	add    eax,DWORD PTR [rax]
   140045b44:	add    BYTE PTR [rax],al
   140045b46:	add    BYTE PTR [rax],al
   140045b48:	adc    BYTE PTR [rdx+0x3],0x0
   140045b4c:	add    DWORD PTR [rax],eax
   140045b4e:	add    BYTE PTR [rax],al
   140045b50:	movabs al,ds:0xc000000001000352
   140045b59:	push   rdx
   140045b5a:	add    eax,DWORD PTR [rax]
   140045b5c:	add    eax,DWORD PTR [rax]
   140045b5e:	add    BYTE PTR [rax],al
   140045b60:	loopne 0x140045bb4
   140045b62:	add    eax,DWORD PTR [rax]
   140045b64:	add    eax,DWORD PTR [rax]
   140045b66:	add    BYTE PTR [rax],al
   140045b68:	add    BYTE PTR [rbx+0x3],dl
   140045b6b:	add    BYTE PTR [rip+0x20000000],al        # 0x160045b71
   140045b71:	push   rbx
   140045b72:	add    eax,DWORD PTR [rax]
   140045b74:	(bad)  
   140045b75:	add    BYTE PTR [rax],al
   140045b77:	add    BYTE PTR [rax],al
   140045b79:	add    BYTE PTR [rax],al
   140045b7b:	add    BYTE PTR [rsi],al
   140045b7d:	add    BYTE PTR [rax],al
   140045b7f:	add    BYTE PTR [rax],al
   140045b81:	add    BYTE PTR [rax],al
   140045b83:	add    BYTE PTR [rsi],al
   140045b85:	add    BYTE PTR [rax],al
   140045b87:	add    BYTE PTR [rax+0x53],dh
   140045b8a:	add    eax,DWORD PTR [rax]
   140045b8c:	or     DWORD PTR [rax],eax
   140045b8e:	add    BYTE PTR [rax],al
   140045b90:	nop
   140045b91:	push   rbx
   140045b92:	add    eax,DWORD PTR [rax]
   140045b94:	or     al,BYTE PTR [rax]
   140045b96:	add    BYTE PTR [rax],al
   140045b98:	mov    al,0x53
   140045b9a:	add    eax,DWORD PTR [rax]
   140045b9c:	movabs al,ds:0x1cffffffff000058
   140045ba5:	pop    rcx
   140045ba6:	add    BYTE PTR [rax],al
   140045ba8:	add    BYTE PTR [rax],al
   140045baa:	add    BYTE PTR [rax],al
   140045bac:	sub    bl,BYTE PTR [rcx+0x0]
   140045baf:	add    BYTE PTR [rcx],al
   140045bb1:	add    BYTE PTR [rax],al
   140045bb3:	add    BYTE PTR [rcx+0x59],cl
   140045bb6:	add    BYTE PTR [rax],al
   140045bb8:	add    al,BYTE PTR [rax]
   140045bba:	add    BYTE PTR [rax],al
   140045bbc:	pop    rax
   140045bbd:	pop    rcx
   140045bbe:	add    BYTE PTR [rax],al
   140045bc0:	add    eax,DWORD PTR [rax]
   140045bc2:	add    BYTE PTR [rax],al
   140045bc4:	icebp  
   140045bc5:	pop    rcx
   140045bc6:	add    BYTE PTR [rax],al
   140045bc8:	add    al,0x0
   140045bca:	add    BYTE PTR [rax],al
   140045bcc:	lea    ebx,[rbx+0x0]
   140045bcf:	add    BYTE PTR [rbx],al
   140045bd1:	add    BYTE PTR [rax],al
   140045bd3:	add    BYTE PTR [rsi+0x100005b],ah
   140045bd9:	add    BYTE PTR [rax],al
   140045bdb:	add    BYTE PTR [rdi],cl
   140045bdd:	pop    rsp
   140045bde:	add    BYTE PTR [rax],al
   140045be0:	add    BYTE PTR [rax],al
   140045be2:	add    BYTE PTR [rax],al
   140045be4:	sbb    eax,0xff00005c
   140045be9:	(bad)  
   140045bea:	(bad)  
   140045beb:	(bad)  
   140045bec:	cmp    eax,0x300005c
   140045bf1:	add    BYTE PTR [rax],al
   140045bf3:	add    BYTE PTR [rbx+0x5c],dl
   140045bf6:	add    BYTE PTR [rax],al
   140045bf8:	add    eax,0x69000000
   140045bfd:	pop    rsp
   140045bfe:	add    BYTE PTR [rax],al
   140045c00:	(bad)  
   140045c01:	add    BYTE PTR [rax],al
   140045c03:	add    BYTE PTR [rdx+0x700005c],bh
   140045c09:	add    BYTE PTR [rax],al
   140045c0b:	add    ah,ah
   140045c0d:	pop    rsp
   140045c0e:	add    BYTE PTR [rax],al
   140045c10:	(bad)  
   140045c11:	add    BYTE PTR [rax],al
   140045c13:	add    BYTE PTR [rbp+rbx*2+0x0],al
   140045c17:	add    BYTE PTR [rcx],cl
   140045c19:	add    BYTE PTR [rax],al
   140045c1b:	add    BYTE PTR [rdx+0x5d],dl
   140045c1e:	add    BYTE PTR [rax],al
   140045c20:	or     al,BYTE PTR [rax]
   140045c22:	add    BYTE PTR [rax],al
   140045c24:	xchg   edi,eax
   140045c25:	pop    rbp
   140045c26:	add    BYTE PTR [rax],al
   140045c28:	or     eax,DWORD PTR [rax]
   140045c2a:	add    BYTE PTR [rax],al
   140045c2c:	mov    ah,0x5d
   140045c2e:	add    BYTE PTR [rax],al
   140045c30:	or     al,BYTE PTR [rax]
   140045c32:	add    BYTE PTR [rax],al
   140045c34:	rex.RX pop rsi
   140045c36:	add    BYTE PTR [rax],al
   140045c38:	or     DWORD PTR [rax],eax
   140045c3a:	add    BYTE PTR [rax],al
   140045c3c:	push   rsp
   140045c3d:	pop    rsi
   140045c3e:	add    BYTE PTR [rax],al
   140045c40:	(bad)  
   140045c41:	add    BYTE PTR [rax],al
   140045c43:	add    BYTE PTR [rsi+rbx*2+0x50000],bl
   140045c4a:	add    BYTE PTR [rax],al
   140045c4c:	rcr    BYTE PTR [rsi+0x0],1
   140045c4f:	add    BYTE PTR [rbx],al
   140045c51:	add    BYTE PTR [rax],al
   140045c53:	add    BYTE PTR [rdi+rbx*2],al
   140045c56:	add    BYTE PTR [rax],al
   140045c58:	add    DWORD PTR [rax],eax
   140045c5a:	add    BYTE PTR [rax],al
   140045c5c:	outs   dx,DWORD PTR ds:[rsi]
   140045c5d:	pop    rdi
   140045c5e:	add    BYTE PTR [rax],al
   140045c60:	add    BYTE PTR [rax],al
   140045c62:	add    BYTE PTR [rax],al
   140045c64:	jge    0x140045cc5
   140045c66:	add    BYTE PTR [rax],al
   140045c68:	(bad)  
   140045c69:	(bad)  
   140045c6a:	(bad)  
   140045c6b:	inc    DWORD PTR [rax+0x53]
   140045c6e:	add    eax,DWORD PTR [rax]
   140045c70:	add    BYTE PTR [rax],al
   140045c72:	add    BYTE PTR [rax],al
   140045c74:	rex.WRB push r11
   140045c76:	add    eax,DWORD PTR [rax]
   140045c78:	or     BYTE PTR [rax],al
   140045c7a:	add    BYTE PTR [rax],al
   140045c7c:	push   rsp
   140045c7d:	push   rbx
   140045c7e:	add    eax,DWORD PTR [rax]
	...
   140045c94:	test   al,0x5c
   140045c96:	add    al,0x0
	...
   140045ca8:	add    eax,0xd8000000
   140045cad:	pop    rsp
   140045cae:	add    al,0x0
   140045cb0:	add    BYTE PTR [rbp+0x4],bl
   140045cb3:	add    BYTE PTR [rax],ch
   140045cb5:	pop    rbp
   140045cb6:	add    al,0x0
   140045cb8:	push   rax
   140045cb9:	pop    rbp
   140045cba:	add    al,0x0
   140045cbc:	js     0x140045d1b
   140045cbe:	add    al,0x0
	...
   140045cd8:	add    DWORD PTR [rax],eax
   140045cda:	add    BYTE PTR [rax],al
   140045cdc:	xor    BYTE PTR [rax+0x4],al
   140045ce2:	add    BYTE PTR [rax],al
   140045ce4:	(bad)  
   140045ce5:	(bad)  
   140045ce6:	(bad)  
   140045ce7:	inc    DWORD PTR [rax]
   140045ce9:	add    BYTE PTR [rax],al
   140045ceb:	add    BYTE PTR [rax],cl
	...
   140045cfd:	add    BYTE PTR [rax],al
   140045cff:	add    BYTE PTR [rcx],al
   140045d01:	add    BYTE PTR [rax],al
   140045d03:	add    BYTE PTR [rax-0x80],bl
   140045d06:	add    al,0x0
   140045d08:	add    BYTE PTR [rax],al
   140045d0a:	add    BYTE PTR [rax],al
   140045d0c:	(bad)  
   140045d0d:	(bad)  
   140045d0e:	(bad)  
   140045d0f:	inc    DWORD PTR [rax]
   140045d11:	add    BYTE PTR [rax],al
   140045d13:	add    BYTE PTR [rax],cl
	...
   140045d25:	add    BYTE PTR [rax],al
   140045d27:	add    BYTE PTR [rcx],al
   140045d29:	add    BYTE PTR [rax],al
   140045d2b:	add    BYTE PTR [rax],cl
   140045d2d:	add    BYTE PTR [rax+rax*1],0x0
   140045d31:	add    BYTE PTR [rax],al
   140045d33:	add    bh,bh
   140045d35:	(bad)  
   140045d36:	(bad)  
   140045d37:	inc    DWORD PTR [rax]
   140045d39:	add    BYTE PTR [rax],al
   140045d3b:	add    BYTE PTR [rax],cl
	...
   140045d4d:	add    BYTE PTR [rax],al
   140045d4f:	add    BYTE PTR [rcx],al
   140045d51:	add    BYTE PTR [rax],al
   140045d53:	add    BYTE PTR [rax+0x480],al
   140045d59:	add    BYTE PTR [rax],al
   140045d5b:	add    bh,bh
   140045d5d:	(bad)  
   140045d5e:	(bad)  
   140045d5f:	inc    DWORD PTR [rax]
   140045d61:	add    BYTE PTR [rax],al
   140045d63:	add    BYTE PTR [rax],cl
	...
   140045d75:	add    BYTE PTR [rax],al
   140045d77:	add    BYTE PTR [rcx],al
   140045d79:	add    BYTE PTR [rax],al
   140045d7b:	add    BYTE PTR [rax+0x480],ah
   140045d81:	add    BYTE PTR [rax],al
   140045d83:	add    bh,bh
   140045d85:	(bad)  
   140045d86:	(bad)  
   140045d87:	inc    DWORD PTR [rax]
   140045d89:	add    BYTE PTR [rax],al
   140045d8b:	add    BYTE PTR [rax],cl
	...
   140045da9:	add    BYTE PTR [rax],al
   140045dab:	add    al,al
   140045dad:	pop    rbp
   140045dae:	add    al,0x0
	...
   140045dc0:	add    eax,0xf0000000
   140045dc5:	pop    rbp
   140045dc6:	add    al,0x0
   140045dc8:	add    BYTE PTR [rbp+0x4],bl
   140045dcb:	add    BYTE PTR [rax],ch
   140045dcd:	pop    rbp
   140045dce:	add    al,0x0
   140045dd0:	push   rax
   140045dd1:	pop    rbp
   140045dd2:	add    al,0x0
   140045dd4:	js     0x140045e33
   140045dd6:	add    al,0x0
	...
   140045df0:	add    DWORD PTR [rax],eax
   140045df2:	add    BYTE PTR [rax],al
   140045df4:	mov    eax,0x480
   140045df9:	add    BYTE PTR [rax],al
   140045dfb:	add    bh,bh
   140045dfd:	(bad)  
   140045dfe:	(bad)  
   140045dff:	inc    DWORD PTR [rax]
   140045e01:	add    BYTE PTR [rax],al
   140045e03:	add    BYTE PTR [rax],cl
	...
   140045e21:	add    BYTE PTR [rax],al
   140045e23:	add    BYTE PTR [rax],bh
   140045e25:	pop    rsi
   140045e26:	add    al,0x0
	...
   140045e38:	add    eax,0x68000000
   140045e3d:	pop    rsi
   140045e3e:	add    al,0x0
   140045e40:	add    BYTE PTR [rbp+0x4],bl
   140045e43:	add    BYTE PTR [rax],ch
   140045e45:	pop    rbp
   140045e46:	add    al,0x0
   140045e48:	push   rax
   140045e49:	pop    rbp
   140045e4a:	add    al,0x0
   140045e4c:	js     0x140045eab
   140045e4e:	add    al,0x0
	...
   140045e68:	add    DWORD PTR [rax],eax
   140045e6a:	add    BYTE PTR [rax],al
   140045e6c:	call   0x1400462f1
   140045e71:	add    BYTE PTR [rax],al
   140045e73:	add    bh,bh
   140045e75:	(bad)  
   140045e76:	(bad)  
   140045e77:	inc    DWORD PTR [rax]
   140045e79:	add    BYTE PTR [rax],al
   140045e7b:	add    BYTE PTR [rax],cl
	...
   140045e99:	add    BYTE PTR [rax],al
   140045e9b:	add    BYTE PTR [rax+0x45e],dh
	...
   140045ead:	add    BYTE PTR [rax],al
   140045eaf:	add    BYTE PTR [rax+rax*1],al
   140045eb2:	add    BYTE PTR [rax],al
   140045eb4:	fcomp  DWORD PTR [rsi+0x4]
   140045eb7:	add    BYTE PTR [rax],ch
   140045eb9:	pop    rbp
   140045eba:	add    al,0x0
   140045ebc:	push   rax
   140045ebd:	pop    rbp
   140045ebe:	add    al,0x0
   140045ec0:	js     0x140045f1f
   140045ec2:	add    al,0x0
	...
   140045ed8:	add    DWORD PTR [rax],eax
   140045eda:	add    BYTE PTR [rax],al
   140045edc:	rol    BYTE PTR [rbp+0x4],0x0
   140045ee3:	add    bh,bh
   140045ee5:	(bad)  
   140045ee6:	(bad)  
   140045ee7:	inc    DWORD PTR [rax]
   140045ee9:	add    BYTE PTR [rax],al
   140045eeb:	add    BYTE PTR [rax],cl
	...
   140045f09:	add    BYTE PTR [rax],al
   140045f0b:	add    BYTE PTR [rax],ah
   140045f0d:	pop    rdi
   140045f0e:	add    al,0x0
	...
   140045f20:	add    al,0x0
   140045f22:	add    BYTE PTR [rax],al
   140045f24:	rex.W pop rdi
   140045f26:	add    al,0x0
   140045f28:	sub    BYTE PTR [rbp+0x4],bl
   140045f2b:	add    BYTE PTR [rax+0x5d],dl
   140045f2e:	add    al,0x0
   140045f30:	js     0x140045f8f
   140045f32:	add    al,0x0
	...
   140045f48:	add    DWORD PTR [rax],eax
   140045f4a:	add    BYTE PTR [rax],al
   140045f4c:	rol    BYTE PTR [rsi+0x4],1
   140045f52:	add    BYTE PTR [rax],al
   140045f54:	(bad)  
   140045f55:	(bad)  
   140045f56:	(bad)  
   140045f57:	inc    DWORD PTR [rax]
   140045f59:	add    BYTE PTR [rax],al
   140045f5b:	add    BYTE PTR [rax],cl
	...
   140045f71:	add    BYTE PTR [rax],al
   140045f73:	add    BYTE PTR [rax],bh
   140045f75:	stos   BYTE PTR es:[rdi],al
   140045f76:	add    DWORD PTR [rax],eax
   140045f78:	add    BYTE PTR [rax],al
   140045f7a:	add    BYTE PTR [rax],al
   140045f7c:	nop
   140045f7d:	pop    rdi
   140045f7e:	add    al,0x0
	...
   140045f90:	add    al,BYTE PTR [rax]
   140045f92:	add    BYTE PTR [rax],al
   140045f94:	test   al,0x5f
   140045f96:	add    al,0x0
   140045f98:	sub    BYTE PTR [rcx+0x4],ah
	...
   140045fab:	add    BYTE PTR [rax],dh
   140045fad:	cwde   
   140045fae:	add    al,0x0
   140045fb0:	add    BYTE PTR [rax],al
   140045fb2:	add    BYTE PTR [rax],al
   140045fb4:	(bad)  
   140045fb5:	(bad)  
   140045fb6:	(bad)  
   140045fb7:	inc    DWORD PTR [rax]
   140045fb9:	add    BYTE PTR [rax],al
   140045fbb:	add    BYTE PTR [rax],bl
   140045fbd:	add    BYTE PTR [rax],al
   140045fbf:	add    BYTE PTR [rax-0x44],al
   140045fc2:	add    DWORD PTR [rax],eax
	...
   140045fd4:	lock mov eax,0x2
   140045fda:	add    BYTE PTR [rax],al
   140045fdc:	lock pop rdi
   140045fde:	add    al,0x0
	...
   140045ff0:	add    eax,DWORD PTR [rax]
   140045ff2:	add    BYTE PTR [rax],al
   140045ff4:	adc    BYTE PTR [rax+0x4],ah
   140045ff7:	add    BYTE PTR [rax],bh
   140045ff9:	(bad)  
   140045ffa:	add    al,0x0
   140045ffc:	sub    BYTE PTR [rcx+0x4],ah
	...
   140046013:	add    al,cl
   140046015:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140046016:	add    al,0x0
   140046018:	add    BYTE PTR [rax],al
   14004601a:	add    BYTE PTR [rax],al
   14004601c:	(bad)  
   14004601d:	(bad)  
   14004601e:	(bad)  
   14004601f:	inc    DWORD PTR [rax]
   140046021:	add    BYTE PTR [rax],al
   140046023:	add    BYTE PTR [rax+0x0],al
   140046026:	add    BYTE PTR [rax],al
   140046028:	sar    BYTE PTR [rdi+0x2],0x0
	...
   14004603b:	add    BYTE PTR [rax],al
   14004603d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004603e:	add    al,0x0
   140046040:	add    BYTE PTR [rax],al
   140046042:	add    BYTE PTR [rax],al
   140046044:	(bad)  
   140046045:	(bad)  
   140046046:	(bad)  
   140046047:	inc    DWORD PTR [rax]
   140046049:	add    BYTE PTR [rax],al
   14004604b:	add    BYTE PTR [rax+0x0],al
   14004604e:	add    BYTE PTR [rax],al
   140046050:	push   rax
   140046051:	mov    edi,0x2
	...
   140046062:	add    BYTE PTR [rax],al
   140046064:	movabs al,ds:0x8000000000000147
   14004606d:	(bad)  
   14004606e:	add    al,0x0
	...
   140046080:	add    al,BYTE PTR [rax]
   140046082:	add    BYTE PTR [rax],al
   140046084:	cwde   
   140046085:	(bad)  
   140046086:	add    al,0x0
   140046088:	sub    BYTE PTR [rcx+0x4],ah
	...
   14004609b:	add    BYTE PTR [rax-0x73],ch
   14004609e:	add    al,0x0
   1400460a0:	add    BYTE PTR [rax],al
   1400460a2:	add    BYTE PTR [rax],al
   1400460a4:	(bad)  
   1400460a5:	(bad)  
   1400460a6:	(bad)  
   1400460a7:	inc    DWORD PTR [rax]
   1400460a9:	add    BYTE PTR [rax],al
   1400460ab:	add    BYTE PTR [rax],bl
   1400460ad:	add    BYTE PTR [rax],al
   1400460af:	add    BYTE PTR [rdi+rax*2+0x1],bh
	...
   1400460c3:	add    BYTE PTR [rax+0x31e],al
   1400460c9:	add    BYTE PTR [rax],al
   1400460cb:	add    al,ah
   1400460cd:	(bad)  
   1400460ce:	add    al,0x0
	...
   1400460e0:	add    eax,DWORD PTR [rax]
   1400460e2:	add    BYTE PTR [rax],al
   1400460e4:	add    BYTE PTR [rcx+0x4],ah
   1400460e7:	add    BYTE PTR [rax+0x61],dl
   1400460ea:	add    al,0x0
   1400460ec:	sub    BYTE PTR [rcx+0x4],ah
	...
   140046103:	add    al,al
   140046105:	test   eax,0x4
   14004610a:	add    BYTE PTR [rax],al
   14004610c:	(bad)  
   14004610d:	(bad)  
   14004610e:	(bad)  
   14004610f:	inc    DWORD PTR [rax]
   140046111:	add    BYTE PTR [rax],al
   140046113:	add    BYTE PTR [rax+0x0],al
   140046116:	add    BYTE PTR [rax],al
   140046118:	lock (bad) 
   14004611a:	add    eax,DWORD PTR [rax]
	...
   14004612c:	mov    eax,0x4aa
   140046131:	add    BYTE PTR [rax],al
   140046133:	add    bh,bh
   140046135:	(bad)  
   140046136:	(bad)  
   140046137:	inc    DWORD PTR [rax]
   140046139:	add    BYTE PTR [rax],al
   14004613b:	add    BYTE PTR [rax],bl
   14004613d:	add    BYTE PTR [rax],al
   14004613f:	add    BYTE PTR [rax+0x146],bl
	...
   140046151:	add    BYTE PTR [rax],al
   140046153:	add    al,ah
   140046155:	stos   BYTE PTR es:[rdi],al
   140046156:	add    al,0x0
   140046158:	add    BYTE PTR [rax],al
   14004615a:	add    BYTE PTR [rax],al
   14004615c:	(bad)  
   14004615d:	(bad)  
   14004615e:	(bad)  
   14004615f:	inc    DWORD PTR [rax]
   140046161:	add    BYTE PTR [rax],al
   140046163:	add    BYTE PTR [rax+0x0],al
   140046166:	add    BYTE PTR [rax],al
   140046168:	lock adc DWORD PTR [rax],eax
	...
   14004617b:	add    BYTE PTR [rax],dl
   14004617d:	stos   DWORD PTR es:[rdi],eax
   14004617e:	add    al,0x0
   140046180:	add    BYTE PTR [rax],al
   140046182:	add    BYTE PTR [rax],al
   140046184:	(bad)  
   140046185:	(bad)  
   140046186:	(bad)  
   140046187:	inc    DWORD PTR [rax]
   140046189:	add    BYTE PTR [rax],al
   14004618b:	add    BYTE PTR [rax+0x0],al
   14004618e:	add    BYTE PTR [rax],al
   140046190:	lock xor eax,DWORD PTR [rax]
	...
   14004619f:	add    BYTE PTR [rbx],al
   1400461a1:	add    BYTE PTR [rax],al
   1400461a3:	add    BYTE PTR [rax+0x61],bh
   1400461a6:	add    al,0x0
   1400461a8:	push   rax
   1400461a9:	(bad)  
   1400461aa:	add    al,0x0
   1400461ac:	sub    BYTE PTR [rcx+0x4],ah
	...
   1400461c3:	add    BYTE PTR [rax+0x11],ah
   1400461c9:	add    BYTE PTR [rax],al
   1400461cb:	add    BYTE PTR [rax+0x461],ah
	...
   1400461e1:	add    BYTE PTR [rax],al
   1400461e3:	add    BYTE PTR [rax],bh
   1400461e5:	stos   DWORD PTR es:[rdi],eax
   1400461e6:	add    al,0x0
   1400461e8:	add    BYTE PTR [rax],al
   1400461ea:	add    BYTE PTR [rax],al
   1400461ec:	(bad)  
   1400461ed:	(bad)  
   1400461ee:	(bad)  
   1400461ef:	inc    DWORD PTR [rax]
   1400461f1:	add    BYTE PTR [rax],al
   1400461f3:	add    BYTE PTR [rax],bl
   1400461f5:	add    BYTE PTR [rax],al
   1400461f7:	add    al,dl
   1400461f9:	add    BYTE PTR ss:[rax],al
	...
   140046208:	add    al,BYTE PTR [rax]
   14004620a:	add    BYTE PTR [rax],al
   14004620c:	loopne 0x14004626f
   14004620e:	add    al,0x0
   140046210:	sub    BYTE PTR [rcx+0x4],ah
	...
   140046223:	add    BYTE PTR [rax+0x10],al
   140046226:	add    BYTE PTR [rax],al
   140046228:	add    BYTE PTR [rax],al
   14004622a:	add    BYTE PTR [rax],al
   14004622c:	or     BYTE PTR [rdx+0x4],ah
	...
   14004623f:	add    BYTE PTR [rax],ch
   140046241:	push   0x4
   140046246:	add    BYTE PTR [rax],al
   140046248:	add    BYTE PTR [rax],al
   14004624a:	add    BYTE PTR [rax],al
   14004624c:	(bad)  
   14004624d:	imul   eax,DWORD PTR [rax+rax*1],0x30
   140046251:	add    eax,DWORD PTR gs:[rax]
   140046254:	pop    rax
   140046255:	fs add al,0x0
	...
   140046260:	ins    BYTE PTR es:[rdi],dx
   140046261:	jae    0x140046267
   140046263:	add    BYTE PTR [rax+0x61],ah
   140046266:	add    eax,DWORD PTR [rax]
   140046268:	pop    rax
   140046269:	push   0x4
   14004626e:	add    BYTE PTR [rax],al
   140046270:	add    BYTE PTR [rax],al
   140046272:	add    BYTE PTR [rax],al
   140046274:	(bad)  
   140046275:	js     0x14004627b
   140046277:	add    BYTE PTR [rax+0x65],ah
   14004627a:	add    eax,DWORD PTR [rax]
   14004627c:	cwde   
   14004627d:	movsxd eax,DWORD PTR [rax+rax*1]
	...
   140046288:	rex jp 0x14004628f
   14004628b:	add    BYTE PTR [rax-0xffffca0],ah
   140046291:	push   0x4
	...
   14004629b:	add    BYTE PTR [rax-0x7fffb86],al
   1400462a1:	add    eax,DWORD PTR [eax]
   1400462a4:	clc    
   1400462a5:	(bad)  
   1400462a6:	add    al,0x0
	...
   1400462b0:	adc    BYTE PTR [rsp+rax*1+0x0],bh
   1400462b4:	add    BYTE PTR [rax+0x3],ah
   1400462b7:	add    BYTE PTR [rax],cl
   1400462b9:	push   0x4
   1400462be:	add    BYTE PTR [rax],al
   1400462c0:	add    BYTE PTR [rax],al
   1400462c2:	add    BYTE PTR [rax],al
   1400462c4:	(bad)  
   1400462c5:	jl     0x1400462cb
   1400462c7:	add    BYTE PTR [rax],dl
   1400462c9:	add    eax,DWORD PTR gs:[rax]
   1400462cc:	lock addr32 add al,0x0
	...
   1400462d8:	pop    rsp
   1400462d9:	jl     0x1400462df
   1400462db:	add    al,bh
   1400462dd:	add    eax,DWORD PTR fs:[rax]
	...
   1400462f8:	call   0x140046778
   1400462fd:	add    BYTE PTR [rax],al
   1400462ff:	add    al,dl
   140046301:	jnp    0x140046307
   140046303:	add    BYTE PTR [rax],al
   140046305:	add    BYTE PTR [rax],al
   140046307:	add    BYTE PTR [rsi+0x47b],bh
   14004630d:	add    BYTE PTR [rax],al
   14004630f:	add    BYTE PTR [rbx+rdi*2+0x4],ch
   140046316:	add    BYTE PTR [rax],al
   140046318:	sahf   
   140046319:	jnp    0x14004631f
   14004631b:	add    BYTE PTR [rax],al
   14004631d:	add    BYTE PTR [rax],al
   14004631f:	add    BYTE PTR [rax+0x47b],cl
   140046325:	add    BYTE PTR [rax],al
   140046327:	add    BYTE PTR [rax+0x7b],dh
   14004632a:	add    al,0x0
   14004632c:	add    BYTE PTR [rax],al
   14004632e:	add    BYTE PTR [rax],al
   140046330:	pop    rdx
   140046331:	jnp    0x140046337
   140046333:	add    BYTE PTR [rax],al
   140046335:	add    BYTE PTR [rax],al
   140046337:	add    BYTE PTR [rdx+0x7b],cl
   14004633a:	add    al,0x0
   14004633c:	add    BYTE PTR [rax],al
   14004633e:	add    BYTE PTR [rax],al
   140046340:	cmp    bh,BYTE PTR [rbx+0x4]
   140046343:	add    BYTE PTR [rax],al
   140046345:	add    BYTE PTR [rax],al
   140046347:	add    BYTE PTR [rax],ch
   140046349:	jnp    0x14004634f
   14004634b:	add    BYTE PTR [rax],al
   14004634d:	add    BYTE PTR [rax],al
   14004634f:	add    BYTE PTR [rsi],dl
   140046351:	jnp    0x140046357
   140046353:	add    BYTE PTR [rax],al
   140046355:	add    BYTE PTR [rax],al
   140046357:	add    BYTE PTR [rax],al
   140046359:	jnp    0x14004635f
   14004635b:	add    BYTE PTR [rax],al
   14004635d:	add    BYTE PTR [rax],al
   14004635f:	add    al,dh
   140046361:	jp     0x140046367
   140046363:	add    BYTE PTR [rax],al
   140046365:	add    BYTE PTR [rax],al
   140046367:	add    dh,bl
   140046369:	jp     0x14004636f
   14004636b:	add    BYTE PTR [rax],al
   14004636d:	add    BYTE PTR [rax],al
   14004636f:	add    dl,cl
   140046371:	jp     0x140046377
   140046373:	add    BYTE PTR [rax],al
   140046375:	add    BYTE PTR [rax],al
   140046377:	add    BYTE PTR [rdx+rdi*2+0x4],ch
   14004637e:	add    BYTE PTR [rax],al
   140046380:	mov    ?,WORD PTR [rdx+0x4]
   140046383:	add    BYTE PTR [rax],al
   140046385:	add    BYTE PTR [rax],al
   140046387:	add    al,bh
   140046389:	jnp    0x14004638f
	...
   140046397:	add    dl,dl
   140046399:	jns    0x14004639f
   14004639b:	add    BYTE PTR [rax],al
   14004639d:	add    BYTE PTR [rax],al
   14004639f:	add    BYTE PTR [rsi],ch
   1400463a1:	jp     0x1400463a7
   1400463a3:	add    BYTE PTR [rax],al
   1400463a5:	add    BYTE PTR [rax],al
   1400463a7:	add    BYTE PTR [rdx],ah
   1400463a9:	jp     0x1400463af
   1400463ab:	add    BYTE PTR [rax],al
   1400463ad:	add    BYTE PTR [rax],al
   1400463af:	add    BYTE PTR [rsi],cl
   1400463b1:	jp     0x1400463b7
   1400463b3:	add    BYTE PTR [rax],al
   1400463b5:	add    BYTE PTR [rax],al
   1400463b7:	add    ah,bh
   1400463b9:	jns    0x1400463bf
   1400463bb:	add    BYTE PTR [rax],al
   1400463bd:	add    BYTE PTR [rax],al
   1400463bf:	add    dl,bh
   1400463c1:	js     0x1400463c7
   1400463c3:	add    BYTE PTR [rax],al
   1400463c5:	add    BYTE PTR [rax],al
   1400463c7:	add    dl,ch
   1400463c9:	js     0x1400463cf
   1400463cb:	add    BYTE PTR [rax],al
   1400463cd:	add    BYTE PTR [rax],al
   1400463cf:	add    dl,bl
   1400463d1:	js     0x1400463d7
   1400463d3:	add    BYTE PTR [rax],al
   1400463d5:	add    BYTE PTR [rax],al
   1400463d7:	add    BYTE PTR [rcx+rdi*2+0x4],bh
   1400463de:	add    BYTE PTR [rax],al
   1400463e0:	test   al,0x79
   1400463e2:	add    al,0x0
   1400463e4:	add    BYTE PTR [rax],al
   1400463e6:	add    BYTE PTR [rax],al
   1400463e8:	cwde   
   1400463e9:	jns    0x1400463ef
   1400463eb:	add    BYTE PTR [rax],al
   1400463ed:	add    BYTE PTR [rax],al
   1400463ef:	add    BYTE PTR [rsi+0x479],cl
   1400463f5:	add    BYTE PTR [rax],al
   1400463f7:	add    BYTE PTR [rdx+0x479],al
   1400463fd:	add    BYTE PTR [rax],al
   1400463ff:	add    BYTE PTR [rcx+rdi*2+0x4],dh
   140046403:	add    BYTE PTR [rax],al
   140046405:	add    BYTE PTR [rax],al
   140046407:	add    BYTE PTR [rax+0x79],ch
   14004640a:	add    al,0x0
   14004640c:	add    BYTE PTR [rax],al
   14004640e:	add    BYTE PTR [rax],al
   140046410:	pop    rdx
   140046411:	jns    0x140046417
   140046413:	add    BYTE PTR [rax],al
   140046415:	add    BYTE PTR [rax],al
   140046417:	add    BYTE PTR [rsi+0x79],cl
   14004641a:	add    al,0x0
   14004641c:	add    BYTE PTR [rax],al
   14004641e:	add    BYTE PTR [rax],al
   140046420:	rex.R jns 0x140046427
   140046423:	add    BYTE PTR [rax],al
   140046425:	add    BYTE PTR [rax],al
   140046427:	add    BYTE PTR [rsi],dh
   140046429:	jns    0x14004642f
   14004642b:	add    BYTE PTR [rax],al
   14004642d:	add    BYTE PTR [rax],al
   14004642f:	add    BYTE PTR [rsi],ah
   140046431:	jns    0x140046437
   140046433:	add    BYTE PTR [rax],al
   140046435:	add    BYTE PTR [rax],al
   140046437:	add    BYTE PTR [rax],bl
   140046439:	jns    0x14004643f
   14004643b:	add    BYTE PTR [rax],al
   14004643d:	add    BYTE PTR [rax],al
   14004643f:	add    BYTE PTR [rax],cl
   140046441:	jns    0x140046447
   140046443:	add    BYTE PTR [rax],al
   140046445:	add    BYTE PTR [rax],al
   140046447:	add    dh,ah
   140046449:	jns    0x14004644f
	...
   140046457:	add    BYTE PTR [rax+0x70],dh
   14004645a:	add    al,0x0
   14004645c:	add    BYTE PTR [rax],al
   14004645e:	add    BYTE PTR [rax],al
   140046460:	test   BYTE PTR [rax+0x4],dh
   140046463:	add    BYTE PTR [rax],al
   140046465:	add    BYTE PTR [rax],al
   140046467:	add    BYTE PTR [rdx+0x470],dl
   14004646d:	add    BYTE PTR [rax],al
   14004646f:	add    BYTE PTR [rsi+0x470],bl
   140046475:	add    BYTE PTR [rax],al
   140046477:	add    BYTE PTR [rsi+0x470],dh
   14004647d:	add    BYTE PTR [rax],al
   14004647f:	add    BYTE PTR [rsi+0x470],bh
   140046485:	add    BYTE PTR [rax],al
   140046487:	add    ah,cl
   140046489:	jo     0x14004648f
   14004648b:	add    BYTE PTR [rax],al
   14004648d:	add    BYTE PTR [rax],al
   14004648f:	add    ah,bl
   140046491:	jo     0x140046497
   140046493:	add    BYTE PTR [rax],al
   140046495:	add    BYTE PTR [rax],al
   140046497:	add    ah,ch
   140046499:	jo     0x14004649f
   14004649b:	add    BYTE PTR [rax],al
   14004649d:	add    BYTE PTR [rax],al
   14004649f:	add    dl,bh
   1400464a1:	jo     0x1400464a7
   1400464a3:	add    BYTE PTR [rax],al
   1400464a5:	add    BYTE PTR [rax],al
   1400464a7:	add    BYTE PTR [rax],cl
   1400464a9:	jno    0x1400464af
   1400464ab:	add    BYTE PTR [rax],al
   1400464ad:	add    BYTE PTR [rax],al
   1400464af:	add    BYTE PTR [rdx],dl
   1400464b1:	jno    0x1400464b7
   1400464b3:	add    BYTE PTR [rax],al
   1400464b5:	add    BYTE PTR [rax],al
   1400464b7:	add    BYTE PTR [rsi],bl
   1400464b9:	jno    0x1400464bf
   1400464bb:	add    BYTE PTR [rax],al
   1400464bd:	add    BYTE PTR [rax],al
   1400464bf:	add    BYTE PTR [rax],ch
   1400464c1:	jno    0x1400464c7
   1400464c3:	add    BYTE PTR [rax],al
   1400464c5:	add    BYTE PTR [rax],al
   1400464c7:	add    BYTE PTR [rdx],bh
   1400464c9:	jno    0x1400464cf
   1400464cb:	add    BYTE PTR [rax],al
   1400464cd:	add    BYTE PTR [rax],al
   1400464cf:	add    BYTE PTR [rdx+0x71],cl
   1400464d2:	add    al,0x0
   1400464d4:	add    BYTE PTR [rax],al
   1400464d6:	add    BYTE PTR [rax],al
   1400464d8:	pop    rdx
   1400464d9:	jno    0x1400464df
   1400464db:	add    BYTE PTR [rax],al
   1400464dd:	add    BYTE PTR [rax],al
   1400464df:	add    BYTE PTR [rax+0x71],dh
   1400464e2:	add    al,0x0
   1400464e4:	add    BYTE PTR [rax],al
   1400464e6:	add    BYTE PTR [rax],al
   1400464e8:	jle    0x14004655b
   1400464ea:	add    al,0x0
   1400464ec:	add    BYTE PTR [rax],al
   1400464ee:	add    BYTE PTR [rax],al
   1400464f0:	pop    rsi
   1400464f1:	jo     0x1400464f7
   1400464f3:	add    BYTE PTR [rax],al
   1400464f5:	add    BYTE PTR [rax],al
   1400464f7:	add    BYTE PTR [rax+0x471],ch
   1400464fd:	add    BYTE PTR [rax],al
   1400464ff:	add    al,al
   140046501:	jno    0x140046507
   140046503:	add    BYTE PTR [rax],al
   140046505:	add    BYTE PTR [rax],al
   140046507:	add    dl,bl
   140046509:	jno    0x14004650f
   14004650b:	add    BYTE PTR [rax],al
   14004650d:	add    BYTE PTR [rax],al
   14004650f:	add    ah,dh
   140046511:	jno    0x140046517
   140046513:	add    BYTE PTR [rax],al
   140046515:	add    BYTE PTR [rax],al
   140046517:	add    BYTE PTR [rsi],al
   140046519:	jb     0x14004651f
   14004651b:	add    BYTE PTR [rax],al
   14004651d:	add    BYTE PTR [rax],al
   14004651f:	add    BYTE PTR [rdx+rsi*2],dl
   140046522:	add    al,0x0
   140046524:	add    BYTE PTR [rax],al
   140046526:	add    BYTE PTR [rax],al
   140046528:	es jb  0x14004652f
   14004652b:	add    BYTE PTR [rax],al
   14004652d:	add    BYTE PTR [rax],al
   14004652f:	add    BYTE PTR [rax+0x72],al
   140046532:	add    al,0x0
   140046534:	add    BYTE PTR [rax],al
   140046536:	add    BYTE PTR [rax],al
   140046538:	push   rax
   140046539:	jb     0x14004653f
   14004653b:	add    BYTE PTR [rax],al
   14004653d:	add    BYTE PTR [rax],al
   14004653f:	add    BYTE PTR [rdx+0x72],ch
   140046542:	add    al,0x0
   140046544:	add    BYTE PTR [rax],al
   140046546:	add    BYTE PTR [rax],al
   140046548:	xchg   edx,eax
   140046549:	jb     0x14004654f
   14004654b:	add    BYTE PTR [rax],al
   14004654d:	add    BYTE PTR [rax],al
   14004654f:	add    BYTE PTR [rdx+rsi*2+0x4],ah
   140046556:	add    BYTE PTR [rax],al
   140046558:	mov    dh,0x72
   14004655a:	add    al,0x0
   14004655c:	add    BYTE PTR [rax],al
   14004655e:	add    BYTE PTR [rax],al
   140046560:	int3   
   140046561:	jb     0x140046567
   140046563:	add    BYTE PTR [rax],al
   140046565:	add    BYTE PTR [rax],al
   140046567:	add    dl,ah
   140046569:	jb     0x14004656f
   14004656b:	add    BYTE PTR [rax],al
   14004656d:	add    BYTE PTR [rax],al
   14004656f:	add    dl,dh
   140046571:	jb     0x140046577
   140046573:	add    BYTE PTR [rax],al
   140046575:	add    BYTE PTR [rax],al
   140046577:	add    BYTE PTR [rbx+rsi*2],al
   14004657a:	add    al,0x0
   14004657c:	add    BYTE PTR [rax],al
   14004657e:	add    BYTE PTR [rax],al
   140046580:	adc    al,0x73
   140046582:	add    al,0x0
   140046584:	add    BYTE PTR [rax],al
   140046586:	add    BYTE PTR [rax],al
   140046588:	es jae 0x14004658f
   14004658b:	add    BYTE PTR [rax],al
   14004658d:	add    BYTE PTR [rax],al
   14004658f:	add    BYTE PTR [rsi],dh
   140046591:	jae    0x140046597
   140046593:	add    BYTE PTR [rax],al
   140046595:	add    BYTE PTR [rax],al
   140046597:	add    BYTE PTR [rsi+0x73],al
   14004659a:	add    al,0x0
   14004659c:	add    BYTE PTR [rax],al
   14004659e:	add    BYTE PTR [rax],al
   1400465a0:	pop    rsp
   1400465a1:	jae    0x1400465a7
   1400465a3:	add    BYTE PTR [rax],al
   1400465a5:	add    BYTE PTR [rax],al
   1400465a7:	add    BYTE PTR [rax+0x70],dl
   1400465aa:	add    al,0x0
   1400465ac:	add    BYTE PTR [rax],al
   1400465ae:	add    BYTE PTR [rax],al
   1400465b0:	ds jo  0x1400465b7
   1400465b3:	add    BYTE PTR [rax],al
   1400465b5:	add    BYTE PTR [rax],al
   1400465b7:	add    BYTE PTR [rdx],dh
   1400465b9:	jo     0x1400465bf
   1400465bb:	add    BYTE PTR [rax],al
   1400465bd:	add    BYTE PTR [rax],al
   1400465bf:	add    BYTE PTR [rsi],ah
   1400465c1:	jo     0x1400465c7
   1400465c3:	add    BYTE PTR [rax],al
   1400465c5:	add    BYTE PTR [rax],al
   1400465c7:	add    BYTE PTR [rdx],dl
   1400465c9:	jo     0x1400465cf
   1400465cb:	add    BYTE PTR [rax],al
   1400465cd:	add    BYTE PTR [rax],al
   1400465cf:	add    al,bh
   1400465d1:	outs   dx,DWORD PTR ds:[rsi]
   1400465d2:	add    al,0x0
   1400465d4:	add    BYTE PTR [rax],al
   1400465d6:	add    BYTE PTR [rax],al
   1400465d8:	in     al,0x6f
   1400465da:	add    al,0x0
   1400465dc:	add    BYTE PTR [rax],al
   1400465de:	add    BYTE PTR [rax],al
   1400465e0:	shr    BYTE PTR [rdi+0x4],1
   1400465e3:	add    BYTE PTR [rax],al
   1400465e5:	add    BYTE PTR [rax],al
   1400465e7:	add    BYTE PTR [rdx+0x46f],dh
   1400465ed:	add    BYTE PTR [rax],al
   1400465ef:	add    BYTE PTR [rsi+0x46f],dl
   1400465f5:	add    BYTE PTR [rax],al
   1400465f7:	add    BYTE PTR [rdx+0x46f],al
   1400465fd:	add    BYTE PTR [rax],al
   1400465ff:	add    BYTE PTR [rsi+0x6f],dh
   140046602:	add    al,0x0
   140046604:	add    BYTE PTR [rax],al
   140046606:	add    BYTE PTR [rax],al
   140046608:	push   0x6f
   14004660a:	add    al,0x0
   14004660c:	add    BYTE PTR [rax],al
   14004660e:	add    BYTE PTR [rax],al
   140046610:	pop    rax
   140046611:	outs   dx,DWORD PTR ds:[rsi]
   140046612:	add    al,0x0
   140046614:	add    BYTE PTR [rax],al
   140046616:	add    BYTE PTR [rax],al
   140046618:	rex.WX outs dx,DWORD PTR ds:[rsi]
   14004661a:	add    al,0x0
   14004661c:	add    BYTE PTR [rax],al
   14004661e:	add    BYTE PTR [rax],al
   140046620:	cmp    al,0x6f
   140046622:	add    al,0x0
   140046624:	add    BYTE PTR [rax],al
   140046626:	add    BYTE PTR [rax],al
   140046628:	sub    BYTE PTR [rdi+0x4],ch
   14004662b:	add    BYTE PTR [rax],al
   14004662d:	add    BYTE PTR [rax],al
   14004662f:	add    BYTE PTR [rdi+rbp*2],dl
   140046632:	add    al,0x0
   140046634:	add    BYTE PTR [rax],al
   140046636:	add    BYTE PTR [rax],al
   140046638:	add    ch,BYTE PTR [rdi+0x4]
   14004663b:	add    BYTE PTR [rax],al
   14004663d:	add    BYTE PTR [rax],al
   14004663f:	add    dh,dh
   140046641:	outs   dx,BYTE PTR ds:[rsi]
   140046642:	add    al,0x0
   140046644:	add    BYTE PTR [rax],al
   140046646:	add    BYTE PTR [rax],al
   140046648:	(bad)  
   140046649:	outs   dx,BYTE PTR ds:[rsi]
   14004664a:	add    al,0x0
   14004664c:	add    BYTE PTR [rax],al
   14004664e:	add    BYTE PTR [rax],al
   140046650:	fsubr  DWORD PTR [rsi+0x4]
   140046653:	add    BYTE PTR [rax],al
   140046655:	add    BYTE PTR [rax],al
   140046657:	add    dh,al
   140046659:	outs   dx,BYTE PTR ds:[rsi]
   14004665a:	add    al,0x0
   14004665c:	add    BYTE PTR [rax],al
   14004665e:	add    BYTE PTR [rax],al
   140046660:	mov    dl,0x6e
   140046662:	add    al,0x0
   140046664:	add    BYTE PTR [rax],al
   140046666:	add    BYTE PTR [rax],al
   140046668:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140046669:	outs   dx,BYTE PTR ds:[rsi]
   14004666a:	add    al,0x0
   14004666c:	add    BYTE PTR [rax],al
   14004666e:	add    BYTE PTR [rax],al
   140046670:	(bad)  
   140046671:	outs   dx,BYTE PTR ds:[rsi]
   140046672:	add    al,0x0
   140046674:	add    BYTE PTR [rax],al
   140046676:	add    BYTE PTR [rax],al
   140046678:	test   BYTE PTR [rsi+0x4],ch
   14004667b:	add    BYTE PTR [rax],al
   14004667d:	add    BYTE PTR [rax],al
   14004667f:	add    BYTE PTR [rax+0x6e],dh
   140046682:	add    al,0x0
   140046684:	add    BYTE PTR [rax],al
   140046686:	add    BYTE PTR [rax],al
   140046688:	pop    rsi
   140046689:	outs   dx,BYTE PTR ds:[rsi]
   14004668a:	add    al,0x0
   14004668c:	add    BYTE PTR [rax],al
   14004668e:	add    BYTE PTR [rax],al
   140046690:	rex.W outs dx,BYTE PTR ds:[rsi]
   140046692:	add    al,0x0
   140046694:	add    BYTE PTR [rax],al
   140046696:	add    BYTE PTR [rax],al
   140046698:	cmp    ch,BYTE PTR [rsi+0x4]
   14004669b:	add    BYTE PTR [rax],al
   14004669d:	add    BYTE PTR [rax],al
   14004669f:	add    BYTE PTR [rax],ch
   1400466a1:	outs   dx,BYTE PTR ds:[rsi]
   1400466a2:	add    al,0x0
   1400466a4:	add    BYTE PTR [rax],al
   1400466a6:	add    BYTE PTR [rax],al
   1400466a8:	adc    ch,BYTE PTR [rsi+0x4]
   1400466ab:	add    BYTE PTR [rax],al
   1400466ad:	add    BYTE PTR [rax],al
   1400466af:	add    BYTE PTR [rsi],al
   1400466b1:	outs   dx,BYTE PTR ds:[rsi]
   1400466b2:	add    al,0x0
   1400466b4:	add    BYTE PTR [rax],al
   1400466b6:	add    BYTE PTR [rax],al
   1400466b8:	lock ins DWORD PTR es:[rdi],dx
   1400466ba:	add    al,0x0
   1400466bc:	add    BYTE PTR [rax],al
   1400466be:	add    BYTE PTR [rax],al
   1400466c0:	fisubr DWORD PTR [rbp+0x4]
   1400466c3:	add    BYTE PTR [rax],al
   1400466c5:	add    BYTE PTR [rax],al
   1400466c7:	add    dl,cl
   1400466c9:	ins    DWORD PTR es:[rdi],dx
   1400466ca:	add    al,0x0
   1400466cc:	add    BYTE PTR [rax],al
   1400466ce:	add    BYTE PTR [rax],al
   1400466d0:	mov    edx,0x46d
   1400466d5:	add    BYTE PTR [rax],al
   1400466d7:	add    BYTE PTR [rdx+0x46d],ch
   1400466dd:	add    BYTE PTR [rax],al
   1400466df:	add    BYTE PTR [rax+0x46d],bl
   1400466e5:	add    BYTE PTR [rax],al
   1400466e7:	add    BYTE PTR [rdx+0x46d],cl
   1400466ed:	add    BYTE PTR [rax],al
   1400466ef:	add    BYTE PTR [rdx+0x6d],dh
   1400466f2:	add    al,0x0
   1400466f4:	add    BYTE PTR [rax],al
   1400466f6:	add    BYTE PTR [rax],al
   1400466f8:	(bad)  
   1400466f9:	ins    DWORD PTR es:[rdi],dx
   1400466fa:	add    al,0x0
   1400466fc:	add    BYTE PTR [rax],al
   1400466fe:	add    BYTE PTR [rax],al
   140046700:	push   rsp
   140046701:	ins    DWORD PTR es:[rdi],dx
   140046702:	add    al,0x0
   140046704:	add    BYTE PTR [rax],al
   140046706:	add    BYTE PTR [rax],al
   140046708:	rex.RX ins DWORD PTR es:[rdi],dx
   14004670a:	add    al,0x0
   14004670c:	add    BYTE PTR [rax],al
   14004670e:	add    BYTE PTR [rax],al
   140046710:	ss ins DWORD PTR es:[rdi],dx
   140046712:	add    al,0x0
   140046714:	add    BYTE PTR [rax],al
   140046716:	add    BYTE PTR [rax],al
   140046718:	es ins DWORD PTR es:[rdi],dx
   14004671a:	add    al,0x0
   14004671c:	add    BYTE PTR [rax],al
   14004671e:	add    BYTE PTR [rax],al
   140046720:	(bad)  
   140046721:	ins    DWORD PTR es:[rdi],dx
   140046722:	add    al,0x0
   140046724:	add    BYTE PTR [rax],al
   140046726:	add    BYTE PTR [rax],al
   140046728:	or     BYTE PTR [rbp+0x4],ch
   14004672b:	add    BYTE PTR [rax],al
   14004672d:	add    BYTE PTR [rax],al
   14004672f:	add    ah,bh
   140046731:	ins    BYTE PTR es:[rdi],dx
   140046732:	add    al,0x0
   140046734:	add    BYTE PTR [rax],al
   140046736:	add    BYTE PTR [rax],al
   140046738:	loopne 0x1400467a6
   14004673a:	add    al,0x0
   14004673c:	add    BYTE PTR [rax],al
   14004673e:	add    BYTE PTR [rax],al
   140046740:	enter  0x46c,0x0
   140046744:	add    BYTE PTR [rax],al
   140046746:	add    BYTE PTR [rax],al
   140046748:	mov    edx,0x46c
   14004674d:	add    BYTE PTR [rax],al
   14004674f:	add    BYTE PTR [rdx+0x46c],ah
   140046755:	add    BYTE PTR [rax],al
   140046757:	add    BYTE PTR [rdx+0x46c],dl
   14004675d:	add    BYTE PTR [rax],al
   14004675f:	add    BYTE PTR [rdx+0x46c],al
   140046765:	add    BYTE PTR [rax],al
   140046767:	add    BYTE PTR [rsp+rbp*2+0x4],dh
   14004676b:	add    BYTE PTR [rax],al
   14004676d:	add    BYTE PTR [rax],al
   14004676f:	add    BYTE PTR [rsp+rbp*2+0x4],ah
   140046773:	add    BYTE PTR [rax],al
   140046775:	add    BYTE PTR [rax],al
   140046777:	add    BYTE PTR [rsp+rbp*2+0x4],dl
   14004677b:	add    BYTE PTR [rax],al
   14004677d:	add    BYTE PTR [rax],al
   14004677f:	add    BYTE PTR [rsp+rbp*2+0x4],al
   140046783:	add    BYTE PTR [rax],al
   140046785:	add    BYTE PTR [rax],al
   140046787:	add    BYTE PTR [rax],bh
   140046789:	ins    BYTE PTR es:[rdi],dx
   14004678a:	add    al,0x0
   14004678c:	add    BYTE PTR [rax],al
   14004678e:	add    BYTE PTR [rax],al
   140046790:	sub    ch,BYTE PTR [rsp+rax*1+0x0]
   140046794:	add    BYTE PTR [rax],al
   140046796:	add    BYTE PTR [rax],al
   140046798:	(bad)  
   140046799:	ins    BYTE PTR es:[rdi],dx
   14004679a:	add    al,0x0
   14004679c:	add    BYTE PTR [rax],al
   14004679e:	add    BYTE PTR [rax],al
   1400467a0:	add    al,0x6c
   1400467a2:	add    al,0x0
   1400467a4:	add    BYTE PTR [rax],al
   1400467a6:	add    BYTE PTR [rax],al
   1400467a8:	repnz imul eax,DWORD PTR [rax+rax*1],0x0
   1400467ad:	add    BYTE PTR [rax],al
   1400467af:	add    dh,ah
   1400467b1:	imul   eax,DWORD PTR [rax+rax*1],0x0
   1400467b5:	add    BYTE PTR [rax],al
   1400467b7:	add    al,dl
   1400467b9:	imul   eax,DWORD PTR [rax+rax*1],0x0
   1400467bd:	add    BYTE PTR [rax],al
   1400467bf:	add    al,al
   1400467c1:	imul   eax,DWORD PTR [rax+rax*1],0x0
   1400467c5:	add    BYTE PTR [rax],al
   1400467c7:	add    BYTE PTR [rax+0x46b],dh
   1400467cd:	add    BYTE PTR [rax],al
   1400467cf:	add    BYTE PTR [rbx+rbp*2+0x4],ah
   1400467d6:	add    BYTE PTR [rax],al
   1400467d8:	mov    gs,WORD PTR [rbx+0x4]
   1400467db:	add    BYTE PTR [rax],al
   1400467dd:	add    BYTE PTR [rax],al
   1400467df:	add    BYTE PTR [rsi+0x471],cl
	...
   1400467ed:	add    BYTE PTR [rax],al
   1400467ef:	add    BYTE PTR [rax+0x7c],cl
   1400467f2:	add    al,0x0
   1400467f4:	add    BYTE PTR [rax],al
   1400467f6:	add    BYTE PTR [rax],al
   1400467f8:	sub    al,0x7c
   1400467fa:	add    al,0x0
	...
   140046808:	or     DWORD PTR [rax],eax
   14004680a:	add    BYTE PTR [rax],al
   14004680c:	add    BYTE PTR [rax],al
   14004680e:	add    BYTE PTR [rax+0xc],al
   140046814:	add    BYTE PTR [rax],al
   140046816:	add    BYTE PTR [rax+0x8],al
   14004681c:	add    BYTE PTR [rax],al
   14004681e:	add    BYTE PTR [rax+0x0],al
   140046824:	add    BYTE PTR [rax],al
   140046826:	add    BYTE PTR [rax],al
   140046828:	jo     0x140046895
   14004682a:	add    al,0x0
   14004682c:	add    BYTE PTR [rax],al
   14004682e:	add    BYTE PTR [rax],al
   140046830:	pop    rdx
   140046831:	imul   eax,DWORD PTR [rax+rax*1],0x0
   140046835:	add    BYTE PTR [rax],al
   140046837:	add    BYTE PTR [rax+0x6b],al
   14004683a:	add    al,0x0
   14004683c:	add    BYTE PTR [rax],al
   14004683e:	add    BYTE PTR [rax],al
   140046840:	imul   eax,DWORD PTR cs:[rax+rax*1],0x0
   140046845:	add    BYTE PTR [rax],al
   140046847:	add    BYTE PTR [rax],dl
   140046849:	imul   eax,DWORD PTR [rax+rax*1],0x0
	...
   140046855:	add    BYTE PTR [rax],al
   140046857:	add    BYTE PTR [rax+rdi*2+0x4],bh
   14004685e:	add    BYTE PTR [rax],al
   140046860:	scas   al,BYTE PTR es:[rdi]
   140046861:	js     0x140046867
   140046863:	add    BYTE PTR [rax],al
   140046865:	add    BYTE PTR [rax],al
   140046867:	add    BYTE PTR [rax+0x478],ah
   14004686d:	add    BYTE PTR [rax],al
   14004686f:	add    BYTE PTR [rax+rdi*2+0x4],dl
   140046876:	add    BYTE PTR [rax],al
   140046878:	(bad)  
   140046879:	js     0x14004687f
   14004687b:	add    BYTE PTR [rax],al
   14004687d:	add    BYTE PTR [rax],al
   14004687f:	add    BYTE PTR [rax+rdi*2+0x4],dh
   140046883:	add    BYTE PTR [rax],al
   140046885:	add    BYTE PTR [rax],al
   140046887:	add    BYTE PTR [rdx+0x78],ah
   14004688a:	add    al,0x0
   14004688c:	add    BYTE PTR [rax],al
   14004688e:	add    BYTE PTR [rax],al
   140046890:	push   rax
   140046891:	js     0x140046897
   140046893:	add    BYTE PTR [rax],al
   140046895:	add    BYTE PTR [rax],al
   140046897:	add    BYTE PTR [rsi],dh
   140046899:	js     0x14004689f
   14004689b:	add    BYTE PTR [rax],al
   14004689d:	add    BYTE PTR [rax],al
   14004689f:	add    BYTE PTR [rdx],ch
   1400468a1:	js     0x1400468a7
   1400468a3:	add    BYTE PTR [rax],al
   1400468a5:	add    BYTE PTR [rax],al
   1400468a7:	add    BYTE PTR [rsi],bl
   1400468a9:	js     0x1400468af
   1400468ab:	add    BYTE PTR [rax],al
   1400468ad:	add    BYTE PTR [rax],al
   1400468af:	add    BYTE PTR [rax],dl
   1400468b1:	js     0x1400468b7
   1400468b3:	add    BYTE PTR [rax],al
   1400468b5:	add    BYTE PTR [rax],al
   1400468b7:	add    BYTE PTR [rax],al
   1400468b9:	js     0x1400468bf
   1400468bb:	add    BYTE PTR [rax],al
   1400468bd:	add    BYTE PTR [rax],al
   1400468bf:	add    al,dh
   1400468c1:	ja     0x1400468c7
   1400468c3:	add    BYTE PTR [rax],al
   1400468c5:	add    BYTE PTR [rax],al
   1400468c7:	add    al,dl
   1400468c9:	ja     0x1400468cf
   1400468cb:	add    BYTE PTR [rax],al
   1400468cd:	add    BYTE PTR [rax],al
   1400468cf:	add    BYTE PTR [rsi+0x477],dh
   1400468d5:	add    BYTE PTR [rax],al
   1400468d7:	add    BYTE PTR [rdx+0x477],ch
   1400468dd:	add    BYTE PTR [rax],al
   1400468df:	add    BYTE PTR [rdi+rsi*2+0x4],dl
   1400468e6:	add    BYTE PTR [rax],al
   1400468e8:	xchg   BYTE PTR [rdi+0x4],dh
   1400468eb:	add    BYTE PTR [rax],al
   1400468ed:	add    BYTE PTR [rax],al
   1400468ef:	add    BYTE PTR [rsi+0x77],dh
   1400468f2:	add    al,0x0
   1400468f4:	add    BYTE PTR [rax],al
   1400468f6:	add    BYTE PTR [rax],al
   1400468f8:	data16 ja 0x1400468ff
   1400468fb:	add    BYTE PTR [rax],al
   1400468fd:	add    BYTE PTR [rax],al
   1400468ff:	add    BYTE PTR [rdx+0x77],dl
   140046902:	add    al,0x0
   140046904:	add    BYTE PTR [rax],al
   140046906:	add    BYTE PTR [rax],al
   140046908:	ds ja  0x14004690f
   14004690b:	add    BYTE PTR [rax],al
   14004690d:	add    BYTE PTR [rax],al
   14004690f:	add    BYTE PTR [rdi+rsi*2],ch
   140046912:	add    al,0x0
   140046914:	add    BYTE PTR [rax],al
   140046916:	add    BYTE PTR [rax],al
   140046918:	sbb    al,0x77
   14004691a:	add    al,0x0
   14004691c:	add    BYTE PTR [rax],al
   14004691e:	add    BYTE PTR [rax],al
   140046920:	or     dh,BYTE PTR [rdi+0x4]
   140046923:	add    BYTE PTR [rax],al
   140046925:	add    BYTE PTR [rax],al
   140046927:	add    BYTE PTR [rax],al
   140046929:	ja     0x14004692f
   14004692b:	add    BYTE PTR [rax],al
   14004692d:	add    BYTE PTR [rax],al
   14004692f:	add    BYTE PTR [rdx+0x73],bh
   140046932:	add    al,0x0
   140046934:	add    BYTE PTR [rax],al
   140046936:	add    BYTE PTR [rax],al
   140046938:	nop
   140046939:	jae    0x14004693f
   14004693b:	add    BYTE PTR [rax],al
   14004693d:	add    BYTE PTR [rax],al
   14004693f:	add    BYTE PTR [rsi+0x473],bl
   140046945:	add    BYTE PTR [rax],al
   140046947:	add    BYTE PTR [rsi+0x473],ch
   14004694d:	add    BYTE PTR [rax],al
   14004694f:	add    dl,ch
   140046951:	jbe    0x140046957
   140046953:	add    BYTE PTR [rax],al
   140046955:	add    BYTE PTR [rax],al
   140046957:	add    dl,bl
   140046959:	jbe    0x14004695f
   14004695b:	add    BYTE PTR [rax],al
   14004695d:	add    BYTE PTR [rax],al
   14004695f:	add    dl,cl
   140046961:	jbe    0x140046967
   140046963:	add    BYTE PTR [rax],al
   140046965:	add    BYTE PTR [rax],al
   140046967:	add    BYTE PTR [rax+0x476],bh
   14004696d:	add    BYTE PTR [rax],al
   14004696f:	add    BYTE PTR [rsi+0x476],ah
   140046975:	add    BYTE PTR [rax],al
   140046977:	add    BYTE PTR [rsi+0x476],dl
   14004697d:	add    BYTE PTR [rax],al
   14004697f:	add    BYTE PTR [rsi+rsi*2+0x4],al
   140046986:	add    BYTE PTR [rax],al
   140046988:	outs   dx,BYTE PTR ds:[rsi]
   140046989:	jbe    0x14004698f
   14004698b:	add    BYTE PTR [rax],al
   14004698d:	add    BYTE PTR [rax],al
   14004698f:	add    BYTE PTR [rdx+0x76],ah
   140046992:	add    al,0x0
   140046994:	add    BYTE PTR [rax],al
   140046996:	add    BYTE PTR [rax],al
   140046998:	push   rdx
   140046999:	jbe    0x14004699f
   14004699b:	add    BYTE PTR [rax],al
   14004699d:	add    BYTE PTR [rax],al
   14004699f:	add    BYTE PTR [rsi+0x76],al
   1400469a2:	add    al,0x0
   1400469a4:	add    BYTE PTR [rax],al
   1400469a6:	add    BYTE PTR [rax],al
   1400469a8:	xor    al,0x76
   1400469aa:	add    al,0x0
   1400469ac:	add    BYTE PTR [rax],al
   1400469ae:	add    BYTE PTR [rax],al
   1400469b0:	and    dh,BYTE PTR [rsi+0x4]
   1400469b3:	add    BYTE PTR [rax],al
   1400469b5:	add    BYTE PTR [rax],al
   1400469b7:	add    BYTE PTR [rax],bl
   1400469b9:	jbe    0x1400469bf
   1400469bb:	add    BYTE PTR [rax],al
   1400469bd:	add    BYTE PTR [rax],al
   1400469bf:	add    BYTE PTR [rax],cl
   1400469c1:	jbe    0x1400469c7
   1400469c3:	add    BYTE PTR [rax],al
   1400469c5:	add    BYTE PTR [rax],al
   1400469c7:	add    al,dh
   1400469c9:	jne    0x1400469cf
   1400469cb:	add    BYTE PTR [rax],al
   1400469cd:	add    BYTE PTR [rax],al
   1400469cf:	add    ah,ah
   1400469d1:	jne    0x1400469d7
   1400469d3:	add    BYTE PTR [rax],al
   1400469d5:	add    BYTE PTR [rax],al
   1400469d7:	add    dh,cl
   1400469d9:	jne    0x1400469df
   1400469db:	add    BYTE PTR [rax],al
   1400469dd:	add    BYTE PTR [rax],al
   1400469df:	add    BYTE PTR [rsi+0x475],bh
   1400469e5:	add    BYTE PTR [rax],al
   1400469e7:	add    ah,bl
   1400469e9:	ja     0x1400469ef
   1400469eb:	add    BYTE PTR [rax],al
   1400469ed:	add    BYTE PTR [rax],al
   1400469ef:	add    al,al
   1400469f1:	jae    0x1400469f7
   1400469f3:	add    BYTE PTR [rax],al
   1400469f5:	add    BYTE PTR [rax],al
   1400469f7:	add    dh,dl
   1400469f9:	jae    0x1400469ff
   1400469fb:	add    BYTE PTR [rax],al
   1400469fd:	add    BYTE PTR [rax],al
   1400469ff:	add    dl,ah
   140046a01:	jae    0x140046a07
   140046a03:	add    BYTE PTR [rax],al
   140046a05:	add    BYTE PTR [rax],al
   140046a07:	add    ah,dh
   140046a09:	jae    0x140046a0f
   140046a0b:	add    BYTE PTR [rax],al
   140046a0d:	add    BYTE PTR [rax],al
   140046a0f:	add    BYTE PTR [rsp+rsi*2],al
   140046a12:	add    al,0x0
   140046a14:	add    BYTE PTR [rax],al
   140046a16:	add    BYTE PTR [rax],al
   140046a18:	and    BYTE PTR [rsp+rax*1+0x0],dh
   140046a1c:	add    BYTE PTR [rax],al
   140046a1e:	add    BYTE PTR [rax],al
   140046a20:	cs je  0x140046a27
   140046a23:	add    BYTE PTR [rax],al
   140046a25:	add    BYTE PTR [rax],al
   140046a27:	add    BYTE PTR [rdx+0x74],al
   140046a2a:	add    al,0x0
   140046a2c:	add    BYTE PTR [rax],al
   140046a2e:	add    BYTE PTR [rax],al
   140046a30:	push   rdx
   140046a31:	je     0x140046a37
   140046a33:	add    BYTE PTR [rax],al
   140046a35:	add    BYTE PTR [rax],al
   140046a37:	add    BYTE PTR [rdx+0x475],dh
   140046a3d:	add    BYTE PTR [rax],al
   140046a3f:	add    BYTE PTR [rbp+rsi*2+0x4],bl
   140046a46:	add    BYTE PTR [rax],al
   140046a48:	jle    0x140046abf
   140046a4a:	add    al,0x0
   140046a4c:	add    BYTE PTR [rax],al
   140046a4e:	add    BYTE PTR [rax],al
   140046a50:	jo     0x140046ac7
   140046a52:	add    al,0x0
   140046a54:	add    BYTE PTR [rax],al
   140046a56:	add    BYTE PTR [rax],al
   140046a58:	fs jne 0x140046a5f
   140046a5b:	add    BYTE PTR [rax],al
   140046a5d:	add    BYTE PTR [rax],al
   140046a5f:	add    BYTE PTR [rsi+0x75],dl
   140046a62:	add    al,0x0
   140046a64:	add    BYTE PTR [rax],al
   140046a66:	add    BYTE PTR [rax],al
   140046a68:	rex.R jne 0x140046a6f
   140046a6b:	add    BYTE PTR [rax],al
   140046a6d:	add    BYTE PTR [rax],al
   140046a6f:	add    BYTE PTR [rsi*2+0x4],dh
   140046a76:	add    BYTE PTR [rax],al
   140046a78:	and    dh,BYTE PTR [rbp+0x4]
   140046a7b:	add    BYTE PTR [rax],al
   140046a7d:	add    BYTE PTR [rax],al
   140046a7f:	add    BYTE PTR [rsi*2+0x4],dl
   140046a86:	add    BYTE PTR [rax],al
   140046a88:	add    BYTE PTR [rbp+0x4],dh
   140046a8b:	add    BYTE PTR [rax],al
   140046a8d:	add    BYTE PTR [rax],al
   140046a8f:	add    al,bh
   140046a91:	je     0x140046a97
   140046a93:	add    BYTE PTR [rax],al
   140046a95:	add    BYTE PTR [rax],al
   140046a97:	add    ah,ch
   140046a99:	je     0x140046a9f
   140046a9b:	add    BYTE PTR [rax],al
   140046a9d:	add    BYTE PTR [rax],al
   140046a9f:	add    dh,bl
   140046aa1:	je     0x140046aa7
   140046aa3:	add    BYTE PTR [rax],al
   140046aa5:	add    BYTE PTR [rax],al
   140046aa7:	add    dl,cl
   140046aa9:	je     0x140046aaf
   140046aab:	add    BYTE PTR [rax],al
   140046aad:	add    BYTE PTR [rax],al
   140046aaf:	add    BYTE PTR [rsi+0x474],dh
   140046ab5:	add    BYTE PTR [rax],al
   140046ab7:	add    BYTE PTR [rsp+rsi*2+0x4],ah
   140046abe:	add    BYTE PTR [rax],al
   140046ac0:	nop
   140046ac1:	je     0x140046ac7
   140046ac3:	add    BYTE PTR [rax],al
   140046ac5:	add    BYTE PTR [rax],al
   140046ac7:	add    BYTE PTR [rdx+0x474],al
   140046acd:	add    BYTE PTR [rax],al
   140046acf:	add    BYTE PTR [rdx+0x74],dh
   140046ad2:	add    al,0x0
   140046ad4:	add    BYTE PTR [rax],al
   140046ad6:	add    BYTE PTR [rax],al
   140046ad8:	(bad)  
   140046ad9:	je     0x140046adf
   140046adb:	add    BYTE PTR [rax],al
   140046add:	add    BYTE PTR [rax],al
   140046adf:	add    ah,al
   140046ae1:	ja     0x140046ae7
	...
   140046aef:	add    BYTE PTR [rdx+0x7a],bl
   140046af2:	add    al,0x0
   140046af4:	add    BYTE PTR [rax],al
   140046af6:	add    BYTE PTR [rax],al
   140046af8:	jo     0x140046b74
   140046afa:	add    al,0x0
   140046afc:	add    BYTE PTR [rax],al
   140046afe:	add    BYTE PTR [rax],al
   140046b00:	rex.WX jp 0x140046b07
	...
   140046b0f:	add    BYTE PTR [rdx+0x63705201],ah
   140046b15:	rex.WRB
   140046b16:	ins    DWORD PTR es:[edi],dx
   140046b18:	je     0x140046b6d
   140046b1a:	je     0x140046b8b
   140046b1c:	jo     0x140046b71
   140046b1e:	gs jb  0x140046b97
   140046b21:	gs jb  0x140046b70
   140046b24:	imul   esi,DWORD PTR [rbx+0x74],0x6e696e65
   140046b2b:	add    BYTE PTR [eax],al
   140046b2e:	sbb    eax,DWORD PTR [rcx]
   140046b30:	rex.WRX
   140046b31:	fs jb  0x140046b87
   140046b34:	gs jb  0x140046bad
   140046b37:	gs jb  0x140046b7d
   140046b3a:	(bad)  
   140046b3b:	ins    BYTE PTR es:[rdi],dx
   140046b3c:	ins    BYTE PTR es:[rdi],dx
   140046b3d:	xor    al,BYTE PTR [rax]
   140046b3f:	add    dl,cl
   140046b41:	add    DWORD PTR [rdx+0x70],edx
   140046b44:	movsxd edx,DWORD PTR [rbx+0x65]
   140046b47:	jb     0x140046bbf
   140046b49:	gs jb  0x140046ba1
   140046b4c:	jae    0x140046bb3
   140046b4e:	push   rax
   140046b4f:	jb     0x140046bc0
   140046b51:	je     0x140046bc6
   140046b53:	gs jno 0x140046b9b
   140046b56:	jo     0x140046b99
   140046b58:	add    BYTE PTR [rax],al
   140046b5a:	mov    ebp,0x63705201
   140046b5f:	push   rbx
   140046b60:	gs jb  0x140046bd9
   140046b63:	gs jb  0x140046bb8
   140046b66:	imul   esi,DWORD PTR gs:[ebx+0x74],0x66497265
   140046b6f:	add    BYTE PTR [rdx+0x63705201],bh
   140046b75:	push   rbx
   140046b76:	gs jb  0x140046bef
   140046b79:	gs jb  0x140046bc8
   140046b7c:	imul   esi,DWORD PTR [rbx+0x74],0x52006e65
   140046b83:	push   rax
   140046b84:	rex.XB push r10
   140046b86:	push   rsp
   140046b87:	xor    al,0x2e
   140046b89:	fs ins BYTE PTR es:[rdi],dx
   140046b8b:	ins    BYTE PTR es:[rdi],dx
   140046b8c:	add    BYTE PTR [rax],al
   140046b8e:	hlt    
   140046b8f:	add    DWORD PTR [rdi+0x65],eax
   140046b92:	je     0x140046be1
   140046b94:	outs   dx,DWORD PTR ds:[rsi]
   140046b95:	fs jne 0x140046c04
   140046b98:	imul   r13d,DWORD PTR gs:[rbp+r12*2+0x4e],0x41656d61
   140046ba2:	add    BYTE PTR [rax],al
   140046ba4:	mov    ah,0x4
   140046ba6:	ins    BYTE PTR es:[rdi],dx
   140046ba7:	jae    0x140046c1d
   140046ba9:	jb     0x140046c0e
   140046bab:	ins    DWORD PTR es:[rdi],dx
   140046bac:	jo     0x140046c17
   140046bae:	add    BYTE PTR [r11+0x0],sil
   140046bb2:	rex.XB jb 0x140046c1a
   140046bb5:	(bad)  
   140046bb6:	je     0x140046c1d
   140046bb8:	rex.RB jbe 0x140046c20
   140046bbb:	outs   dx,BYTE PTR ds:[rsi]
   140046bbc:	je     0x140046bff
   140046bbe:	add    BYTE PTR [rax],al
   140046bc0:	movabs ds:0x5465746165724300,eax
   140046bc9:	push   0x64616572
   140046bce:	add    BYTE PTR [rax],al
   140046bd0:	push   0x69615704
   140046bd5:	je     0x140046c1d
   140046bd7:	outs   dx,DWORD PTR ds:[rsi]
   140046bd8:	jb     0x140046c2d
   140046bda:	imul   ebp,DWORD PTR [rsi+0x67],0x624f656c
   140046be1:	push   0x65
   140046be3:	movsxd esi,DWORD PTR [rax+rax*1-0x28]
   140046be7:	add    edx,DWORD PTR [rbx+0x65]
   140046bea:	je     0x140046c31
   140046bec:	jbe    0x140046c53
   140046bee:	outs   dx,BYTE PTR ds:[rsi]
   140046bef:	je     0x140046bf1
   140046bf1:	add    BYTE PTR [rsi],bl
   140046bf3:	add    DWORD PTR [rsi+0x69],eax
   140046bf6:	outs   dx,BYTE PTR ds:[rsi]
   140046bf7:	rex.RX imul r14d,DWORD PTR fs:[rdx+0x73],0x6c694674
   140046c00:	add    BYTE PTR gs:[r8],al
   140046c04:	and    BYTE PTR [rdx],al
   140046c06:	rex.RXB
   140046c07:	gs je  0x140046c5a
   140046c0a:	jb     0x140046c7b
   140046c0c:	movsxd eax,DWORD PTR [rcx+0x64]
   140046c0f:	fs jb  0x140046c77
   140046c12:	jae    0x140046c87
   140046c14:	add    BYTE PTR [rax],al
   140046c16:	test   BYTE PTR [rcx],0x47
   140046c19:	gs je  0x140046c69
   140046c1c:	outs   dx,DWORD PTR ds:[rsi]
   140046c1d:	fs jne 0x140046c8c
   140046c20:	gs rex.W (bad) 
   140046c23:	outs   dx,BYTE PTR ds:[rsi]
   140046c24:	fs ins BYTE PTR es:[rdi],dx
   140046c26:	add    BYTE PTR gs:[r8],al
   140046c2a:	repz add cl,BYTE PTR [rdi+rbp*2+0x63]
   140046c2f:	(bad)  
   140046c30:	ins    BYTE PTR es:[rdi],dx
   140046c31:	rex.B ins BYTE PTR es:[rdi],dx
   140046c33:	ins    BYTE PTR es:[rdi],dx
   140046c34:	outs   dx,DWORD PTR ds:[rsi]
   140046c35:	movsxd eax,DWORD PTR [rax]
   140046c37:	add    bh,dh
   140046c39:	add    cl,BYTE PTR [rdi+rbp*2+0x63]
   140046c3d:	(bad)  
   140046c3e:	ins    BYTE PTR es:[rdi],dx
   140046c3f:	rex.RX jb 0x140046ca7
   140046c42:	add    BYTE PTR gs:[rbp+0x2],dh
   140046c46:	rex.RXB
   140046c47:	gs je  0x140046ca0
   140046c4a:	gs jb  0x140046cc0
   140046c4d:	imul   ebp,DWORD PTR [rdi+0x6e],0x417845
   140046c54:	rex.WB add al,BYTE PTR [r15+0x65]
   140046c58:	je     0x140046cad
   140046c5a:	jns    0x140046ccf
   140046c5c:	je     0x140046cc3
   140046c5e:	ins    DWORD PTR es:[rdi],dx
   140046c5f:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140046c61:	outs   dx,WORD PTR ds:[rsi]
   140046c63:	add    bl,ch
   140046c65:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   140046c69:	imul   r12,QWORD PTR fs:[rdx+0x72],0x41797261
   140046c72:	add    BYTE PTR [rax],al
   140046c74:	add    QWORD PTR [r14+0x72],r8
   140046c78:	gs imul r12,QWORD PTR gs:[rdx+0x72],0x797261
   140046c82:	lock add edx,DWORD PTR [rbx+0x65]
   140046c86:	je     0x140046cd4
   140046c88:	(bad)  
   140046c89:	jae    0x140046cff
   140046c8b:	rex.RB jb 0x140046d00
   140046c8e:	outs   dx,DWORD PTR ds:[rsi]
   140046c8f:	jb     0x140046c91
   140046c91:	add    dh,ah
   140046c93:	add    DWORD PTR [rdi+0x65],eax
   140046c96:	je     0x140046ce4
   140046c98:	(bad)  
   140046c99:	jae    0x140046d0f
   140046c9b:	rex.RB jb 0x140046d10
   140046c9e:	outs   dx,DWORD PTR ds:[rsi]
   140046c9f:	jb     0x140046ca1
   140046ca1:	add    cl,ch
   140046ca3:	add    cl,BYTE PTR [rbp+riz*2+0x61]
   140046ca7:	jbe    0x140046d0e
   140046ca9:	rex.XB jb 0x140046d15
   140046cac:	je     0x140046d17
   140046cae:	movsxd esp,DWORD PTR [rcx+0x6c]
   140046cb1:	push   rbx
   140046cb2:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140046cb7:	outs   dx,BYTE PTR ds:[rsi]
   140046cb8:	add    BYTE PTR [rax],al
   140046cba:	cmp    BYTE PTR [rsp+rdx*2],al
   140046cbd:	ins    BYTE PTR es:[rdi],dx
   140046cbe:	jae    0x140046d07
   140046cc0:	gs je  0x140046d19
   140046cc3:	(bad)  
   140046cc4:	ins    BYTE PTR es:[rdi],dx
   140046cc5:	jne    0x140046d2c
   140046cc7:	add    dl,bl
   140046cc9:	add    BYTE PTR [rbp+0x6e],al
   140046ccc:	je     0x140046d33
   140046cce:	jb     0x140046d13
   140046cd0:	jb     0x140046d3b
   140046cd2:	je     0x140046d3d
   140046cd4:	movsxd esp,DWORD PTR [rcx+0x6c]
   140046cd7:	push   rbx
   140046cd8:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140046cdd:	outs   dx,BYTE PTR ds:[rsi]
   140046cde:	add    BYTE PTR [rax],al
   140046ce0:	mov    ah,0x2
   140046ce2:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140046ce4:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140046cec:	rex.XB jb 0x140046d58
   140046cef:	je     0x140046d5a
   140046cf1:	movsxd esp,DWORD PTR [rcx+0x6c]
   140046cf4:	push   rbx
   140046cf5:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140046cfa:	outs   dx,BYTE PTR ds:[rsi]
   140046cfb:	add    BYTE PTR [rsi],dh
   140046cfd:	add    al,0x54
   140046cff:	ins    BYTE PTR es:[rdi],dx
   140046d00:	jae    0x140046d43
   140046d02:	ins    BYTE PTR es:[rdi],dx
   140046d03:	ins    BYTE PTR es:[rdi],dx
   140046d04:	outs   dx,DWORD PTR ds:[rsi]
   140046d05:	movsxd eax,DWORD PTR [rax]
   140046d07:	add    BYTE PTR [rax+0x6f6c4702],dl
   140046d0d:	(bad)
   140046d12:	movsxd ebp,DWORD PTR [rbx+0x0]
   140046d15:	add    BYTE PTR [rbx+0x6f6c4702],dl
   140046d1b:	(bad)
   140046d20:	rex.B ins BYTE PTR es:[rdi],dx
   140046d22:	ins    BYTE PTR es:[rdi],dx
   140046d23:	outs   dx,DWORD PTR ds:[rsi]
   140046d24:	movsxd eax,DWORD PTR [rax]
   140046d26:	xchg   edi,eax
   140046d27:	add    al,BYTE PTR [rdi+0x6c]
   140046d2a:	outs   dx,DWORD PTR ds:[rsi]
   140046d2b:	(bad)
   140046d30:	ins    BYTE PTR es:[rdi],dx
   140046d31:	outs   dx,DWORD PTR ds:[rsi]
   140046d32:	movsxd ebp,DWORD PTR [rbx+0x0]
   140046d35:	add    BYTE PTR [rdi+0x6f6c4702],cl
   140046d3b:	(bad)
   140046d40:	outs   dx,BYTE PTR ds:[rsi]
   140046d41:	fs ins BYTE PTR es:[rdi],dx
   140046d43:	add    BYTE PTR gs:[rax],al
   140046d46:	test   DWORD PTR [rdx],eax
   140046d48:	rex.RXB ins BYTE PTR es:[rdi],dx
   140046d4a:	outs   dx,DWORD PTR ds:[rsi]
   140046d4b:	(bad)
   140046d50:	ins    BYTE PTR es:[rdi],dx
   140046d51:	outs   dx,DWORD PTR ds:[rsi]
   140046d52:	movsxd eax,DWORD PTR [rax]
   140046d54:	cmp    DWORD PTR [rsp+rdx*2],eax
   140046d57:	ins    BYTE PTR es:[rdi],dx
   140046d58:	jae    0x140046dad
   140046d5a:	gs je  0x140046db3
   140046d5d:	(bad)  
   140046d5e:	ins    BYTE PTR es:[rdi],dx
   140046d5f:	jne    0x140046dc6
   140046d61:	add    dl,bh
   140046d63:	add    cl,BYTE PTR [rdi+rbp*2+0x63]
   140046d67:	(bad)  
   140046d68:	ins    BYTE PTR es:[rdi],dx
   140046d69:	push   rdx
   140046d6a:	gs rex.B ins BYTE PTR es:[rdi],dx
   140046d6d:	ins    BYTE PTR es:[rdi],dx
   140046d6e:	outs   dx,DWORD PTR ds:[rsi]
   140046d6f:	movsxd eax,DWORD PTR [rax]
   140046d71:	add    BYTE PTR [rdi+0x6c654400],bh
   140046d77:	gs je  0x140046ddf
   140046d7a:	rex.XB jb 0x140046de6
   140046d7d:	je     0x140046de8
   140046d7f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140046d82:	push   rbx
   140046d83:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140046d88:	outs   dx,BYTE PTR ds:[rsi]
   140046d89:	add    BYTE PTR [rdx+rax*1+0x626f6c47],cl
   140046d90:	(bad)  
   140046d91:	ins    BYTE PTR es:[rdi],dx
   140046d92:	rex.RX jb 0x140046dfa
   140046d95:	add    BYTE PTR gs:[rax],al
   140046d98:	and    al,0x4
   140046d9a:	push   rbx
   140046d9b:	imul   edi,DWORD PTR [rdx+0x65],0x6552666f
   140046da2:	jae    0x140046e13
   140046da4:	jne    0x140046e18
   140046da6:	movsxd esp,DWORD PTR [rbp+0x0]
   140046da9:	add    BYTE PTR [rcx],al
   140046dab:	add    ecx,DWORD PTR [rdi+rbp*2+0x63]
   140046daf:	imul   edx,DWORD PTR [rdx+0x65],0x73
   140046db3:	outs   dx,DWORD PTR ds:[rsi]
   140046db4:	jne    0x140046e28
   140046db6:	movsxd esp,DWORD PTR [rbp+0x0]
   140046db9:	add    al,dh
   140046dbb:	add    cl,BYTE PTR [rdi+rbp*2+0x61]
   140046dbf:	fs push rdx
   140046dc1:	gs jae 0x140046e33
   140046dc4:	jne    0x140046e38
   140046dc6:	movsxd esp,DWORD PTR [rbp+0x0]
   140046dc9:	add    BYTE PTR [rdi],dh
   140046dcb:	add    DWORD PTR [rsi+0x69],eax
   140046dce:	outs   dx,BYTE PTR ds:[rsi]
   140046dcf:	fs push rdx
   140046dd1:	gs jae 0x140046e43
   140046dd4:	jne    0x140046e48
   140046dd6:	movsxd esp,DWORD PTR [rbp+0x41]
   140046dd9:	add    BYTE PTR [rsi+0x4],bh
   140046ddc:	push   rdi
   140046ddd:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x54726168
   140046de5:	outs   dx,DWORD PTR ds:[rsi]
   140046de6:	rex.WRB jne 0x140046e55
   140046de9:	je     0x140046e54
   140046deb:	rex.X jns 0x140046e62
   140046dee:	add    BYTE PTR gs:[rbx+0x74654701],ch
   140046df5:	rex.XB jne 0x140046e6a
   140046df8:	jb     0x140046e5f
   140046dfa:	outs   dx,BYTE PTR ds:[rsi]
   140046dfb:	je     0x140046e4d
   140046dfd:	jb     0x140046e6e
   140046dff:	movsxd esp,DWORD PTR [rbp+0x73]
   140046e02:	jae    0x140046e4d
   140046e04:	add    BYTE PTR fs:[rbp+0x74736c04],bh
   140046e0b:	jb     0x140046e79
   140046e0d:	outs   dx,BYTE PTR gs:[rsi]
   140046e0f:	add    BYTE PTR [r8],al
   140046e12:	adc    al,0x3
   140046e14:	rex.WRB jne 0x140046e83
   140046e17:	je     0x140046e82
   140046e19:	rex.X jns 0x140046e90
   140046e1c:	gs push rsp
   140046e1e:	outs   dx,DWORD PTR ds:[rsi]
   140046e1f:	push   rdi
   140046e20:	imul   esp,DWORD PTR [rbp+riz*2+0x43],0x726168
   140046e28:	add    QWORD PTR [rsi+0x6f],rax
   140046e2c:	jb     0x140046e9b
   140046e2e:	(bad)  
   140046e2f:	je     0x140046e7e
   140046e31:	gs jae 0x140046ea7
   140046e34:	(bad)  
   140046e35:	add    BYTE PTR gs:[r8d],al
   140046e3a:	rex.XB add BYTE PTR [r11+0x6c],al
   140046e3e:	outs   dx,DWORD PTR ds:[rsi]
   140046e3f:	jae    0x140046ea6
   140046e41:	rex.W (bad) 
   140046e43:	outs   dx,BYTE PTR ds:[rsi]
   140046e44:	fs ins BYTE PTR es:[rdi],dx
   140046e46:	add    BYTE PTR gs:[rsi+0x74654701],ch
   140046e4d:	rex.XB jne 0x140046ec2
   140046e50:	jb     0x140046eb7
   140046e52:	outs   dx,BYTE PTR ds:[rsi]
   140046e53:	je     0x140046ea9
   140046e55:	push   0x64616572
   140046e5a:	rex.WB
   140046e5b:	add    BYTE PTR fs:[rax],al
   140046e5e:	push   rdx
   140046e5f:	add    BYTE PTR [rbx+0x6f],al
   140046e62:	ins    DWORD PTR es:[rdi],dx
   140046e63:	jo     0x140046ec6
   140046e65:	jb     0x140046ecc
   140046e67:	push   rbx
   140046e68:	je     0x140046edc
   140046e6a:	imul   ebp,DWORD PTR [rsi+0x67],0xf9000041
   140046e71:	add    DWORD PTR [rdi+0x65],eax
   140046e74:	je     0x140046ec3
   140046e76:	outs   dx,DWORD PTR ds:[rsi]
   140046e77:	fs jne 0x140046ee6
   140046e7a:	gs rex.W (bad) 
   140046e7d:	outs   dx,BYTE PTR ds:[rsi]
   140046e7e:	fs ins BYTE PTR es:[rdi],dx
   140046e80:	gs push rdi
   140046e82:	add    BYTE PTR [rax],al
   140046e84:	lea    eax,[rdx]
   140046e86:	rex.RXB ins BYTE PTR es:[rdi],dx
   140046e88:	outs   dx,DWORD PTR ds:[rsi]
   140046e89:	(bad)
   140046e8e:	je     0x140046ed1
   140046e90:	je     0x140046f01
   140046e92:	ins    DWORD PTR es:[rdi],dx
   140046e93:	rex.WRX (bad) 
   140046e95:	ins    DWORD PTR es:[rdi],dx
   140046e96:	add    BYTE PTR gs:[r8],al
   140046e9a:	mov    cl,0x4
   140046e9c:	ins    BYTE PTR es:[rdi],dx
   140046e9d:	jae    0x140046f13
   140046e9f:	jb     0x140046f04
   140046ea1:	ins    DWORD PTR es:[rdi],dx
   140046ea2:	jo     0x140046ee5
   140046ea4:	add    BYTE PTR [rax],al
   140046ea6:	mov    dl,0x4
   140046ea8:	ins    BYTE PTR es:[rdi],dx
   140046ea9:	jae    0x140046f1f
   140046eab:	jb     0x140046f10
   140046ead:	ins    DWORD PTR es:[rdi],dx
   140046eae:	jo     0x140046f07
   140046eb0:	add    BYTE PTR [rax],al
   140046eb2:	xchg   DWORD PTR [rdx],eax
   140046eb4:	rex.RXB ins BYTE PTR es:[rdi],dx
   140046eb6:	outs   dx,DWORD PTR ds:[rsi]
   140046eb7:	(bad)
   140046ebc:	ins    BYTE PTR es:[rdi],dx
   140046ebd:	gs je  0x140046f25
   140046ec0:	rex.B je 0x140046f32
   140046ec3:	ins    DWORD PTR es:[rdi],dx
   140046ec4:	add    BYTE PTR [rax],al
   140046ec6:	mov    BYTE PTR [rdx],al
   140046ec8:	rex.RXB ins BYTE PTR es:[rdi],dx
   140046eca:	outs   dx,DWORD PTR ds:[rsi]
   140046ecb:	(bad)
   140046ed0:	outs   dx,BYTE PTR ds:[rsi]
   140046ed1:	fs rex.B je 0x140046f44
   140046ed5:	ins    DWORD PTR es:[rdi],dx
   140046ed6:	add    BYTE PTR [r11+0x6f6c4702],al
   140046edd:	(bad)
   140046ee2:	fs rex.B je 0x140046f55
   140046ee6:	ins    DWORD PTR es:[rdi],dx
   140046ee7:	add    BYTE PTR [r8],al
   140046eea:	(bad)  
   140046eec:	push   rdx
   140046eed:	gs (bad) 
   140046eef:	imul   r13d,DWORD PTR fs:[rbp+r12*2+0x0],0x57049100
   140046ef9:	jb     0x140046f64
   140046efb:	je     0x140046f62
   140046efd:	imul   r13d,DWORD PTR [rbp+r12*2+0x0],0x655303e4
   140046f06:	je     0x140046f4e
   140046f08:	imul   ebp,DWORD PTR [rbp+riz*2+0x50],0x746e696f
   140046f10:	gs jb  0x140046f13
   140046f13:	add    BYTE PTR [rdx+0x1],al
   140046f16:	rex.RX ins BYTE PTR es:[rdi],dx
   140046f18:	jne    0x140046f8d
   140046f1a:	push   0x656c6946
   140046f1f:	rex.X jne 0x140046f88
   140046f22:	data16 gs jb 0x140046f99
   140046f26:	add    BYTE PTR [rax],al
   140046f28:	stos   BYTE PTR es:[rdi],al
   140046f29:	add    DWORD PTR [rdi+0x65],eax
   140046f2c:	je     0x140046f71
   140046f2e:	jne    0x140046fa2
   140046f30:	jb     0x140046f97
   140046f32:	outs   dx,BYTE PTR ds:[rsi]
   140046f33:	je     0x140046f85
   140046f35:	jb     0x140046fa6
   140046f37:	movsxd esp,DWORD PTR [rbp+0x73]
   140046f3a:	jae    0x140046f3c
   140046f3c:	jns    0x140046f3e
   140046f3e:	rex.XB jb 0x140046fa6
   140046f41:	(bad)  
   140046f42:	je     0x140046fa9
   140046f44:	imul   r13d,DWORD PTR [rbp+r12*2+0x41],0x47028b00
   140046f4d:	ins    BYTE PTR es:[rdi],dx
   140046f4e:	outs   dx,DWORD PTR ds:[rsi]
   140046f4f:	(bad)
   140046f54:	(bad)  
   140046f55:	addr32 jae 0x140046f58
   140046f58:	call   0x1b469b65e
   140046f5d:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140046f5f:	movsxd esp,DWORD PTR [rcx+0x6c]
   140046f62:	rex.WB outs dx,BYTE PTR gs:[rsi]
   140046f65:	outs   dx,WORD PTR ds:[rsi]
   140046f67:	add    BYTE PTR [r8],al
   140046f6a:	pop    rsp
   140046f6b:	add    DWORD PTR [rdi+0x65],eax
   140046f6e:	je     0x140046fb3
   140046f70:	push   rax
   140046f71:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140046f73:	outs   dx,WORD PTR ds:[rsi]
   140046f75:	add    BYTE PTR [rbx],dl
   140046f77:	add    al,BYTE PTR [rdi+0x65]
   140046f7a:	je     0x140046fcb
   140046f7c:	rex.RB
   140046f7d:	rex.WRB
   140046f7e:	rex.XB push r8
   140046f80:	add    BYTE PTR [rax],al
   140046f82:	xor    DWORD PTR [rsp+rdx*2],eax
   140046f85:	gs jb  0x140046ff5
   140046f88:	imul   ebp,DWORD PTR [rsi+0x61],0x72506574
   140046f8f:	outs   dx,DWORD PTR ds:[rsi]
   140046f90:	movsxd esp,DWORD PTR [rbp+0x73]
   140046f93:	jae    0x140046f95
   140046f95:	add    BYTE PTR [rdx+0x4],al
   140046f98:	push   rbp
   140046f99:	outs   dx,BYTE PTR ds:[rsi]
   140046f9a:	push   0x6c646e61
   140046f9f:	gs fs rex.RB js 0x140047007
   140046fa4:	gs jo  0x14004701b
   140046fa7:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140046fae:	gs jb  0x140046fb1
   140046fb1:	add    BYTE PTR [rcx],bl
   140046fb3:	add    al,0x53
   140046fb5:	gs je  0x14004700d
   140046fb8:	outs   dx,BYTE PTR ds:[rsi]
   140046fb9:	push   0x6c646e61
   140046fbe:	gs fs rex.RB js 0x140047026
   140046fc3:	gs jo  0x14004703a
   140046fc6:	imul   ebp,DWORD PTR [rdi+0x6e],0x746c6946
   140046fcd:	gs jb  0x140046fd0
   140046fd0:	retf   
   140046fd1:	add    cl,BYTE PTR [rcx+0x73]
   140046fd4:	rex.R
   140046fd5:	gs (bad) 
   140046fd7:	jne    0x140047040
   140046fd9:	addr32 gs jb 0x14004702d
   140046fdd:	jb     0x140047044
   140046fdf:	jae    0x140047046
   140046fe1:	outs   dx,BYTE PTR ds:[rsi]
   140046fe2:	je     0x140046fe4
   140046fe4:	xchg   edi,eax
   140046fe5:	add    edx,DWORD PTR [rdx+0x74]
   140046fe8:	ins    BYTE PTR es:[rdi],dx
   140046fe9:	push   rsi
   140046fea:	imul   esi,DWORD PTR [rdx+0x74],0x556c6175
   140046ff1:	outs   dx,BYTE PTR ds:[rsi]
   140046ff2:	ja     0x14004705d
   140046ff4:	outs   dx,BYTE PTR ds:[rsi]
   140046ff5:	add    BYTE PTR fs:[rax],al
   140046ff8:	nop
   140046ff9:	add    edx,DWORD PTR [rdx+0x74]
   140046ffc:	ins    BYTE PTR es:[rdi],dx
   140046ffd:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140046fff:	outs   dx,DWORD PTR ds:[rsi]
   140047000:	imul   esi,DWORD PTR [rbp+0x70],0x46
   140047004:	jne    0x140047074
   140047006:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004700a:	outs   dx,BYTE PTR ds:[rsi]
   14004700b:	rex.RB outs dx,BYTE PTR ds:[rsi]
   14004700d:	je     0x140047081
   14004700f:	jns    0x140047011
   140047011:	add    BYTE PTR [rcx+0x6c745203],cl
   140047017:	rex.XB (bad) 
   140047019:	jo     0x14004708f
   14004701b:	jne    0x14004708f
   14004701d:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140047020:	outs   dx,BYTE PTR ds:[rsi]
   140047021:	je     0x140047088
   140047023:	js     0x140047099
   140047025:	add    BYTE PTR [rcx+0x61654802],ah
   14004702b:	jo     0x140047073
   14004702d:	jb     0x140047094
   14004702f:	add    BYTE PTR gs:[rax],al
   140047032:	popf   
   140047033:	add    cl,BYTE PTR [rax+0x65]
   140047036:	(bad)  
   140047037:	jo     0x14004707a
   140047039:	ins    BYTE PTR es:[rdi],dx
   14004703a:	ins    BYTE PTR es:[rdi],dx
   14004703b:	outs   dx,DWORD PTR ds:[rsi]
   14004703c:	movsxd eax,DWORD PTR [rax]
   14004703e:	jo     0x140047041
   140047040:	rex.RXB
   140047041:	gs je  0x140047087
   140047044:	outs   dx,DWORD PTR ds:[rsi]
   140047045:	ins    DWORD PTR es:[rdi],dx
   140047046:	ins    DWORD PTR es:[rdi],dx
   140047047:	(bad)  
   140047048:	outs   dx,BYTE PTR ds:[rsi]
   140047049:	imul   r13,QWORD PTR fs:[rsi+0x65],0x3960041
   140047052:	push   rdx
   140047053:	je     0x1400470c1
   140047055:	push   rbp
   140047056:	outs   dx,BYTE PTR ds:[rsi]
   140047057:	ja     0x1400470c2
   140047059:	outs   dx,BYTE PTR ds:[rsi]
   14004705a:	fs rex.RB js 0x14004705e
   14004705e:	push   rsp
   14004705f:	add    edx,DWORD PTR [rdx+0x61]
   140047062:	imul   esi,DWORD PTR [rbx+0x65],0x65637845
   140047069:	jo     0x1400470df
   14004706b:	imul   ebp,DWORD PTR [rdi+0x6e],0x3920000
   140047072:	push   rdx
   140047073:	je     0x1400470e1
   140047075:	push   rax
   140047076:	movsxd edx,DWORD PTR [rdi+rbp*2+0x46]
   14004707a:	imul   ebp,DWORD PTR [rbp+riz*2+0x48],0x65646165
   140047082:	jb     0x140047084
   140047084:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140047085:	add    cl,BYTE PTR [rax+0x65]
   140047088:	(bad)  
   140047089:	jo     0x1400470dd
   14004708b:	gs rex.B ins BYTE PTR es:[rdi],dx
   14004708e:	ins    BYTE PTR es:[rdi],dx
   14004708f:	outs   dx,DWORD PTR ds:[rsi]
   140047090:	movsxd eax,DWORD PTR [rax]
   140047092:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140047093:	add    cl,BYTE PTR [rax+0x65]
   140047096:	(bad)  
   140047097:	jo     0x1400470ec
   140047099:	imul   edi,DWORD PTR [rdx+0x65],0x2a30000
   1400470a0:	rex.W
   1400470a1:	gs (bad) 
   1400470a3:	jo     0x1400470f6
   1400470a5:	jne    0x14004710c
   1400470a7:	jb     0x140047122
   1400470a9:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400470ab:	outs   dx,WORD PTR ds:[rsi]
   1400470ad:	jb     0x14004711c
   1400470af:	(bad)  
   1400470b0:	je     0x14004711b
   1400470b2:	outs   dx,DWORD PTR ds:[rsi]
   1400470b3:	outs   dx,BYTE PTR ds:[rsi]
   1400470b4:	add    BYTE PTR [rax],al
   1400470b6:	and    eax,0x656c5304
   1400470bb:	gs jo  0x1400470be
   1400470be:	add    eax,0x69784501
   1400470c3:	je     0x140047115
   1400470c5:	jb     0x140047136
   1400470c7:	movsxd esp,DWORD PTR [rbp+0x73]
   1400470ca:	jae    0x1400470cc
   1400470cc:	(bad)  
   1400470cd:	add    BYTE PTR [rbp+0x6e],al
   1400470d0:	movsxd ebp,DWORD PTR [rdi+0x64]
   1400470d3:	gs push rax
   1400470d5:	outs   dx,DWORD PTR ds:[rsi]
   1400470d6:	imul   ebp,DWORD PTR [rsi+0x74],0xb8007265
   1400470dd:	add    BYTE PTR [rbp+riz*2+0x63],al
   1400470e1:	outs   dx,DWORD PTR ds:[rsi]
   1400470e2:	fs gs push rax
   1400470e5:	outs   dx,DWORD PTR ds:[rsi]
   1400470e6:	imul   ebp,DWORD PTR [rsi+0x74],0x3f007265
   1400470ed:	add    DWORD PTR [rsi+0x6c],eax
   1400470f0:	jae    0x140047139
   1400470f2:	gs je  0x14004714b
   1400470f5:	(bad)  
   1400470f6:	ins    BYTE PTR es:[rdi],dx
   1400470f7:	jne    0x14004715e
   1400470f9:	add    BYTE PTR [rax+0x1],al
   1400470fc:	rex.RX ins BYTE PTR es:[rdi],dx
   1400470fe:	jae    0x140047153
   140047100:	gs je  0x140047159
   140047103:	(bad)  
   140047104:	ins    BYTE PTR es:[rdi],dx
   140047105:	jne    0x14004716c
   140047107:	add    BYTE PTR [rsi],bh
   140047109:	add    DWORD PTR [rsi+0x6c],eax
   14004710c:	jae    0x140047154
   14004710e:	jb     0x140047175
   140047110:	add    BYTE PTR gs:[rip+0x736c4601],bh        # 0x1b370b718
   140047117:	rex.B ins BYTE PTR es:[rdi],dx
   140047119:	ins    BYTE PTR es:[rdi],dx
   14004711a:	outs   dx,DWORD PTR ds:[rsi]
   14004711b:	movsxd eax,DWORD PTR [rax]
   14004711d:	add    BYTE PTR [rbx+0x1],dl
   140047120:	rex.RXB
   140047121:	gs je  0x140047165
   140047124:	rex.XB push r8
   140047126:	add    BYTE PTR [rax],al
   140047128:	(bad)  
   140047129:	add    cl,BYTE PTR [rcx+0x73]
   14004712c:	push   rsi
   14004712d:	(bad)  
   14004712e:	ins    BYTE PTR es:[rdi],dx
   14004712f:	imul   esp,DWORD PTR [rbx+rax*2+0x6f],0x61506564
   140047137:	addr32 gs add bl,bl
   14004713b:	add    cl,BYTE PTR [rbx+rax*2+0x4d]
   14004713f:	(bad)  
   140047140:	jo     0x140047195
   140047142:	je     0x1400471b6
   140047144:	imul   ebp,DWORD PTR [rsi+0x67],0xdd000041
   14004714b:	add    cl,BYTE PTR [rbx+rax*2+0x4d]
   14004714f:	(bad)  
   140047150:	jo     0x1400471a5
   140047152:	je     0x1400471c6
   140047154:	imul   ebp,DWORD PTR [rsi+0x67],0xa5000057
   14004715b:	add    cl,BYTE PTR [rax+0x65]
   14004715e:	(bad)  
   14004715f:	jo     0x1400471b4
   140047161:	gs je  0x1400471ad
   140047164:	outs   dx,BYTE PTR ds:[rsi]
   140047165:	outs   dx,WORD PTR ds:[rsi]
   140047167:	jb     0x1400471d6
   140047169:	(bad)  
   14004716a:	je     0x1400471d5
   14004716c:	outs   dx,DWORD PTR ds:[rsi]
   14004716d:	outs   dx,BYTE PTR ds:[rsi]
   14004716e:	add    BYTE PTR [rax],al
   140047170:	lahf   
   140047171:	add    cl,BYTE PTR [rax+0x65]
   140047174:	(bad)  
   140047175:	jo     0x1400471ba
   140047177:	jb     0x1400471de
   140047179:	(bad)  
   14004717a:	je     0x1400471e1
   14004717c:	add    BYTE PTR [rax],al
   14004717e:	cmp    eax,DWORD PTR [rdx]
   140047180:	rex.RXB
   140047181:	gs je  0x1400471d7
   140047184:	je     0x1400471ea
   140047186:	rex.W (bad) 
   140047188:	outs   dx,BYTE PTR ds:[rsi]
   140047189:	fs ins BYTE PTR es:[rdi],dx
   14004718b:	add    BYTE PTR gs:[rax],al
   14004718e:	rex.WXB add QWORD PTR [r14+0x72],rax
   140047192:	gs rex.RB outs dx,BYTE PTR gs:[rsi]
   140047196:	jbe    0x140047201
   140047198:	jb     0x140047209
   14004719a:	outs   dx,BYTE PTR ds:[rsi]
   14004719b:	ins    DWORD PTR es:[rdi],dx
   14004719c:	outs   dx,BYTE PTR gs:[rsi]
   14004719e:	je     0x1400471f3
   1400471a0:	je     0x140047214
   1400471a2:	imul   ebp,DWORD PTR [rsi+0x67],0xc0004173
   1400471a9:	add    DWORD PTR [rdi+0x65],eax
   1400471ac:	je     0x1400471f3
   1400471ae:	outs   dx,BYTE PTR ds:[rsi]
   1400471af:	jbe    0x14004721a
   1400471b1:	jb     0x140047222
   1400471b3:	outs   dx,BYTE PTR ds:[rsi]
   1400471b4:	ins    DWORD PTR es:[rdi],dx
   1400471b5:	outs   dx,BYTE PTR gs:[rsi]
   1400471b7:	je     0x14004720c
   1400471b9:	je     0x14004722d
   1400471bb:	imul   ebp,DWORD PTR [rsi+0x67],0x14c0073
   1400471c2:	rex.RX jb 0x14004722a
   1400471c5:	rex.RB outs dx,BYTE PTR gs:[rsi]
   1400471c8:	jbe    0x140047233
   1400471ca:	jb     0x14004723b
   1400471cc:	outs   dx,BYTE PTR ds:[rsi]
   1400471cd:	ins    DWORD PTR es:[rdi],dx
   1400471ce:	outs   dx,BYTE PTR gs:[rsi]
   1400471d0:	je     0x140047225
   1400471d2:	je     0x140047246
   1400471d4:	imul   ebp,DWORD PTR [rsi+0x67],0xc2005773
   1400471db:	add    DWORD PTR [rdi+0x65],eax
   1400471de:	je     0x140047225
   1400471e0:	outs   dx,BYTE PTR ds:[rsi]
   1400471e1:	jbe    0x14004724c
   1400471e3:	jb     0x140047254
   1400471e5:	outs   dx,BYTE PTR ds:[rsi]
   1400471e6:	ins    DWORD PTR es:[rdi],dx
   1400471e7:	outs   dx,BYTE PTR gs:[rsi]
   1400471e9:	je     0x14004723e
   1400471eb:	je     0x14004725f
   1400471ed:	imul   ebp,DWORD PTR [rsi+0x67],0x5773
   1400471f4:	in     al,dx
   1400471f5:	add    edx,DWORD PTR [rbx+0x65]
   1400471f8:	je     0x140047242
   1400471fa:	(bad)  
   1400471fb:	outs   dx,BYTE PTR ds:[rsi]
   1400471fc:	fs ins BYTE PTR es:[rdi],dx
   1400471fe:	rex.XB outs dx,DWORD PTR gs:[rsi]
   140047201:	jne    0x140047271
   140047203:	je     0x140047205
   140047205:	add    al,bl
   140047207:	add    DWORD PTR [rdi+0x65],eax
   14004720a:	je     0x140047252
   14004720c:	imul   ebp,DWORD PTR [rbp+riz*2+0x54],0x657079
   140047214:	cmp    DWORD PTR [rdx],eax
   140047216:	rex.RXB
   140047217:	gs je  0x14004726d
   14004721a:	je     0x14004727d
   14004721c:	jb     0x140047292
   14004721e:	jne    0x140047290
   140047220:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140047222:	outs   dx,WORD PTR ds:[rsi]
   140047224:	add    BYTE PTR [r14+0x3],cl
   140047228:	push   rcx
   140047229:	jne    0x140047290
   14004722b:	jb     0x1400472a6
   14004722d:	push   rax
   14004722e:	gs jb  0x140047297
   140047231:	outs   dx,DWORD PTR ds:[rsi]
   140047232:	jb     0x1400472a1
   140047234:	(bad)  
   140047235:	outs   dx,BYTE PTR ds:[rsi]
   140047236:	movsxd esp,DWORD PTR [rbp+0x43]
   140047239:	outs   dx,DWORD PTR ds:[rsi]
   14004723a:	jne    0x1400472aa
   14004723c:	je     0x1400472a3
   14004723e:	jb     0x140047240
   140047240:	data16 add al,BYTE PTR [rdi+0x65]
   140047244:	je     0x14004729a
   140047246:	imul   esp,DWORD PTR [rbx+0x6b],0x6e756f43
   14004724d:	je     0x14004724f
   14004724f:	add    BYTE PTR [rdi+0x2],cl
   140047252:	rex.RXB
   140047253:	gs je  0x1400472a9
   140047256:	jns    0x1400472cb
   140047258:	je     0x1400472bf
   14004725a:	ins    DWORD PTR es:[rdi],dx
   14004725b:	push   rsp
   14004725c:	imul   ebp,DWORD PTR [rbp+0x65],0x69467341
   140047263:	ins    BYTE PTR es:[rdi],dx
   140047264:	gs push rsp
   140047266:	imul   ebp,DWORD PTR [rbp+0x65],0x4902b500
   14004726d:	outs   dx,BYTE PTR ds:[rsi]
   14004726e:	imul   esi,DWORD PTR [rcx+rbp*2+0x61],0x657a696c
   140047276:	rex.XB jb 0x1400472e2
   140047279:	je     0x1400472e4
   14004727b:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004727e:	push   rbx
   14004727f:	movsxd esi,DWORD PTR gs:[rcx+rbp*2+0x6f]
   140047284:	outs   dx,BYTE PTR ds:[rsi]
   140047285:	rex.B outs dx,BYTE PTR ds:[rsi]
   140047287:	fs push rbx
   140047289:	jo     0x1400472f4
   14004728b:	outs   dx,BYTE PTR ds:[rsi]
   14004728c:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004728e:	jne    0x1400472fe
   140047290:	je     0x140047292
   140047292:	cmp    eax,0x74654702
   140047297:	push   rbx
   140047298:	je     0x14004730c
   14004729a:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   1400472a1:	add    BYTE PTR [r8],al
   1400472a4:	add    al,BYTE PTR [rdi+0x65]
   1400472a8:	je     0x1400472fd
   1400472aa:	je     0x14004731e
   1400472ac:	imul   ebp,DWORD PTR [rsi+0x67],0x65707954
   1400472b3:	push   rdi
   1400472b4:	add    BYTE PTR [rax],al
   1400472b6:	ins    DWORD PTR es:[rdi],dx
   1400472b7:	add    al,BYTE PTR [rdi+0x65]
   1400472ba:	je     0x140047311
   1400472bc:	jae    0x140047323
   1400472be:	jb     0x140047304
   1400472c0:	gs data16 (bad) 
   1400472c3:	jne    0x140047331
   1400472c5:	je     0x140047313
   1400472c7:	rex.XB
   1400472c8:	rex.WB
   1400472c9:	add    BYTE PTR [rax],r8b
   1400472cc:	stc    
   1400472cd:	add    BYTE PTR [rbp+0x6e],al
   1400472d0:	jne    0x14004733f
   1400472d2:	push   rbx
   1400472d3:	jns    0x140047348
   1400472d5:	je     0x14004733c
   1400472d7:	ins    DWORD PTR es:[rdi],dx
   1400472d8:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400472da:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400472dd:	gs jae 0x140047321
   1400472e0:	add    BYTE PTR [rax],al
   1400472e2:	xlat   BYTE PTR ds:[rbx]
   1400472e3:	add    cl,BYTE PTR [rcx+0x73]
   1400472e6:	push   rsi
   1400472e7:	(bad)  
   1400472e8:	ins    BYTE PTR es:[rdi],dx
   1400472e9:	imul   esp,DWORD PTR [rsp+rcx*2+0x6f],0x656c6163
   1400472f1:	add    dl,ch
   1400472f3:	add    DWORD PTR [rdi+0x65],eax
   1400472f6:	je     0x140047344
   1400472f8:	outs   dx,DWORD PTR ds:[rsi]
   1400472f9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400472fc:	rex.WB outs dx,BYTE PTR gs:[rsi]
   1400472ff:	outs   dx,WORD PTR ds:[rsi]
   140047301:	push   rdi
   140047302:	add    BYTE PTR [rax],al
   140047304:	test   BYTE PTR [rcx],al
   140047306:	rex.RXB
   140047307:	gs je  0x14004734d
   14004730a:	outs   dx,DWORD PTR ds:[rsi]
   14004730b:	outs   dx,BYTE PTR ds:[rsi]
   14004730c:	jae    0x14004737d
   14004730e:	ins    BYTE PTR es:[rdi],dx
   14004730f:	gs rex.XB push r8
   140047312:	add    BYTE PTR [rax],al
   140047314:	xchg   esi,eax
   140047315:	add    DWORD PTR [rdi+0x65],eax
   140047318:	je     0x14004735d
   14004731a:	outs   dx,DWORD PTR ds:[rsi]
   14004731b:	outs   dx,BYTE PTR ds:[rsi]
   14004731c:	jae    0x14004738d
   14004731e:	ins    BYTE PTR es:[rdi],dx
   14004731f:	rex.WRB outs dx,DWORD PTR gs:[rsi]
   140047322:	fs add BYTE PTR gs:[rax],al
   140047326:	add    BYTE PTR [rbx+rdx*2],al
   140047329:	gs je  0x14004737f
   14004732c:	je     0x140047392
   14004732e:	rex.W (bad) 
   140047330:	outs   dx,BYTE PTR ds:[rsi]
   140047331:	fs ins BYTE PTR es:[rdi],dx
   140047333:	add    BYTE PTR gs:[rax],al
   140047336:	xchg   BYTE PTR [rdi+rdx*2],al
   140047339:	jb     0x1400473a4
   14004733b:	je     0x1400473a2
   14004733d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004733f:	outs   dx,BYTE PTR ds:[rsi]
   140047340:	jae    0x1400473b1
   140047342:	ins    BYTE PTR es:[rdi],dx
   140047343:	add    BYTE PTR gs:[r10+0x74654701],bl
   14004734b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004734d:	outs   dx,BYTE PTR ds:[rsi]
   14004734e:	jae    0x1400473bf
   140047350:	ins    BYTE PTR es:[rdi],dx
   140047351:	gs rex.WRXB jne 0x1400473c9
   140047355:	jo     0x1400473cc
   140047357:	je     0x14004739c
   140047359:	push   rax
   14004735a:	add    BYTE PTR [rax],al
   14004735c:	nop
   14004735d:	add    al,0x57
   14004735f:	jb     0x1400473ca
   140047361:	je     0x1400473c8
   140047363:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140047365:	outs   dx,BYTE PTR ds:[rsi]
   140047366:	jae    0x1400473d7
   140047368:	ins    BYTE PTR es:[rdi],dx
   140047369:	gs push rdi
   14004736b:	add    BYTE PTR [rbx+0x45],cl
   14004736e:	push   rdx
   14004736f:	rex.WRX
   140047370:	rex.RB
   140047371:	xor    r14,QWORD PTR [rdx]
   140047374:	cs fs ins BYTE PTR es:[rdi],dx
   140047377:	ins    BYTE PTR es:[rdi],dx
   140047378:	add    BYTE PTR [rax],al
   14004737a:	loope  0x14004737e
   14004737c:	push   rbp
   14004737d:	outs   dx,BYTE PTR ds:[rsi]
   14004737e:	push   0x576b6f6f
   140047383:	imul   ebp,DWORD PTR [rsi+0x64],0x4873776f
   14004738a:	outs   dx,DWORD PTR ds:[rsi]
   14004738b:	outs   dx,DWORD PTR ds:[rsi]
   14004738c:	imul   eax,DWORD PTR [rbp+0x78],0x0
   140047390:	cld    
   140047391:	add    DWORD PTR [rbp+0x65],ecx
   140047394:	jae    0x140047409
   140047396:	(bad)  
   140047397:	rex.X outs dx,DWORD PTR gs:[esi]
   14004739b:	js     0x1400473de
   14004739d:	add    cl,dl
   14004739f:	add    BYTE PTR [rbp+0x6e],al
   1400473a2:	(bad)  
   1400473a3:	(bad)  
   1400473a4:	ins    BYTE PTR es:[rdi],dx
   1400473a5:	gs push rdi
   1400473a7:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400473ae:	retf   0x4901
   1400473b1:	jae    0x14004740a
   1400473b3:	imul   ebp,DWORD PTR [rsi+0x64],0x6e45776f
   1400473ba:	(bad)  
   1400473bb:	(bad)  
   1400473bc:	ins    BYTE PTR es:[rdi],dx
   1400473bd:	gs add BYTE PTR fs:[rdx],bh
   1400473c1:	add    DWORD PTR [rdi+0x65],eax
   1400473c4:	je     0x140047412
   1400473c6:	(bad)  
   1400473c7:	jae    0x14004743d
   1400473c9:	movsxd esi,DWORD PTR [r9+rbp*2+0x76]
   1400473ce:	gs push rax
   1400473d0:	outs   dx,DWORD PTR ds:[rsi]
   1400473d1:	jo     0x140047448
   1400473d3:	jo     0x1400473d5
   1400473d5:	add    BYTE PTR [rdi+0x1],dl
   1400473d8:	rex.RXB
   1400473d9:	gs je  0x14004742c
   1400473dc:	(bad)  
   1400473dd:	jb     0x140047444
   1400473df:	outs   dx,BYTE PTR ds:[rsi]
   1400473e0:	je     0x1400473e2
   1400473e2:	add    DWORD PTR [rcx],0x47
   1400473e5:	gs je  0x14004743f
   1400473e8:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   1400473ef:	outs   dx,BYTE PTR ds:[rsi]
   1400473f0:	add    BYTE PTR [r8d],al
   1400473f4:	(bad)  
   1400473f6:	push   rbx
   1400473f7:	outs   dx,BYTE PTR gs:[rsi]
   1400473f9:	fs rex.WRB
   1400473fb:	gs jae 0x140047471
   1400473fe:	(bad)  
   1400473ff:	add    BYTE PTR gs:[r8d],al
   140047404:	xchg   esp,eax
   140047405:	add    DWORD PTR [rdi+0x65],eax
   140047408:	je     0x140047461
   14004740a:	imul   ebp,DWORD PTR [rsi+0x64],0x6854776f
   140047411:	jb     0x140047478
   140047413:	(bad)  
   140047414:	fs push rax
   140047416:	jb     0x140047487
   140047418:	movsxd esp,DWORD PTR [rbp+0x73]
   14004741b:	jae    0x140047466
   14004741d:	add    BYTE PTR fs:[rax],al
   140047420:	ins    DWORD PTR es:[rdi],dx
   140047421:	add    DWORD PTR [rdi+0x65],eax
   140047424:	je     0x140047479
   140047426:	jne    0x14004748a
   140047428:	rex.WRB
   140047429:	outs   dx,BYTE PTR gs:[rsi]
   14004742b:	jne    0x14004742d
   14004742d:	add    BYTE PTR [rcx+rax*1+0x47],al
   140047431:	gs je  0x140047481
   140047434:	outs   dx,BYTE PTR gs:[rsi]
   140047436:	jne    0x140047481
   140047438:	je     0x14004749f
   14004743a:	ins    DWORD PTR es:[rdi],dx
   14004743b:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004743d:	jne    0x1400474ad
   14004743f:	je     0x140047441
   140047441:	add    BYTE PTR [rbp+0x1],al
   140047444:	rex.RXB
   140047445:	gs je  0x140047495
   140047448:	outs   dx,BYTE PTR gs:[rsi]
   14004744a:	jne    0x140047495
   14004744c:	je     0x1400474b3
   14004744e:	ins    DWORD PTR es:[rdi],dx
   14004744f:	rex.WB
   140047450:	add    BYTE PTR [rcx+0x1],r9b
   140047454:	rex.RXB
   140047455:	gs je  0x1400474a5
   140047458:	outs   dx,BYTE PTR gs:[rsi]
   14004745a:	jne    0x1400474af
   14004745c:	je     0x1400474bf
   14004745e:	je     0x1400474c5
   140047460:	add    BYTE PTR [rax],al
   140047462:	cli    
   140047463:	add    dl,BYTE PTR [rsi+0x61]
   140047466:	ins    BYTE PTR es:[rdi],dx
   140047467:	imul   esp,DWORD PTR [rcx+riz*2+0x74],0x63655265
   14004746f:	je     0x140047471
   140047471:	add    BYTE PTR [rdi],bl
   140047473:	add    dl,BYTE PTR [rax+0x65]
   140047476:	imul   ecx,DWORD PTR gs:[rbp+0x65],0x73
   14004747b:	jae    0x1400474de
   14004747d:	add    BYTE PTR gs:[r8d],al
   140047482:	xor    eax,DWORD PTR [rcx]
   140047484:	rex.RXB
   140047485:	gs je  0x1400474d3
   140047488:	gs jns 0x1400474de
   14004748b:	je     0x1400474ee
   14004748d:	je     0x1400474f4
   14004748f:	add    BYTE PTR [rax+0x73694400],ch
   140047495:	jo     0x1400474f8
   140047497:	je     0x1400474fc
   140047499:	push   0x7373654d
   14004749e:	(bad)  
   14004749f:	add    BYTE PTR gs:[r8d],al
   1400474a4:	sbb    eax,DWORD PTR [rax]
   1400474a6:	rex.XB (bad) 
   1400474a8:	ins    BYTE PTR es:[rdi],dx
   1400474a9:	ins    BYTE PTR es:[rdi],dx
   1400474aa:	rex.WRX
   1400474ab:	gs js  0x140047522
   1400474ae:	rex.W outs dx,DWORD PTR ds:[rsi]
   1400474b0:	outs   dx,DWORD PTR ds:[rsi]
   1400474b1:	imul   eax,DWORD PTR [rbp+0x78],0x0
   1400474b5:	add    BYTE PTR [rdi+0x74655302],dh
   1400474bb:	push   rdi
   1400474bc:	imul   ebp,DWORD PTR [rsi+0x64],0x4873776f
   1400474c3:	outs   dx,DWORD PTR ds:[rsi]
   1400474c4:	outs   dx,DWORD PTR ds:[rsi]
   1400474c5:	imul   eax,DWORD PTR [rbp+0x78],0x41
   1400474c9:	add    BYTE PTR [rdi+0x1],ch
   1400474cc:	rex.RXB
   1400474cd:	gs je  0x140047523
   1400474d0:	jns    0x140047545
   1400474d2:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400474d4:	ins    BYTE PTR es:[rdi],dx
   1400474d5:	outs   dx,DWORD PTR ds:[rsi]
   1400474d6:	jb     0x14004751a
   1400474d8:	jb     0x14004754f
   1400474da:	jae    0x140047544
   1400474dc:	add    BYTE PTR [rax],al
   1400474de:	outs   dx,BYTE PTR ds:[rsi]
   1400474df:	add    DWORD PTR [rdi+0x65],eax
   1400474e2:	je     0x140047537
   1400474e4:	jns    0x140047559
   1400474e6:	rex.XB outs dx,DWORD PTR ds:[rsi]
   1400474e8:	ins    BYTE PTR es:[rdi],dx
   1400474e9:	outs   dx,DWORD PTR ds:[rsi]
   1400474ea:	jb     0x1400474ec
   1400474ec:	push   rax
   1400474ed:	add    dl,BYTE PTR [rdx+0x65]
   1400474f0:	ins    BYTE PTR es:[rdi],dx
   1400474f1:	gs (bad) 
   1400474f3:	jae    0x14004755a
   1400474f5:	rex.R
   1400474f6:	add    BYTE PTR [r9+r8*1],bl
   1400474fa:	rex.RXB
   1400474fb:	gs je  0x140047542
   1400474fe:	rex.XB add BYTE PTR [r9+0x1],sil
   140047502:	rex.RXB
   140047503:	gs je  0x140047559
   140047506:	jns    0x14004757b
   140047508:	je     0x14004756f
   14004750a:	ins    DWORD PTR es:[rdi],dx
   14004750b:	rex.WRB
   14004750c:	gs je  0x140047581
   14004750f:	imul   esp,DWORD PTR [rbx+0x73],0x1d60000
   140047516:	rex.WR outs dx,DWORD PTR ds:[rsi]
   140047518:	(bad)  
   140047519:	fs rex.XB jne 0x14004758f
   14004751d:	jae    0x14004758e
   14004751f:	jb     0x140047562
   140047521:	add    BYTE PTR [rax+0x74654701],dl
   140047527:	push   rdi
   140047528:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   14004752f:	js     0x1400475a5
   140047531:	add    BYTE PTR [r8],al
   140047534:	cmp    eax,0x65684300
   140047539:	movsxd ebp,DWORD PTR [rbx+0x4d]
   14004753c:	outs   dx,BYTE PTR gs:[rsi]
   14004753e:	jne    0x140047589
   140047540:	je     0x1400475a7
   140047542:	ins    DWORD PTR es:[rdi],dx
   140047543:	add    bh,cl
   140047545:	add    BYTE PTR [rbp+0x6e],al
   140047548:	(bad)  
   140047549:	(bad)  
   14004754a:	ins    BYTE PTR es:[rdi],dx
   14004754b:	gs rex.WRB
   14004754d:	outs   dx,BYTE PTR gs:[rsi]
   14004754f:	jne    0x14004759a
   140047551:	je     0x1400475b8
   140047553:	ins    DWORD PTR es:[rdi],dx
   140047554:	add    BYTE PTR [rax],al
   140047556:	add    al,0x2
   140047558:	rex.WRB outs dx,DWORD PTR ds:[rsi]
   14004755a:	imul   esp,DWORD PTR fs:[rsi+0x79],0x756e654d
   140047562:	add    BYTE PTR [r14],spl
   140047565:	add    DWORD PTR [rdi+0x65],eax
   140047568:	je     0x1400475b0
   14004756a:	outs   dx,DWORD PTR ds:[rsi]
   14004756b:	movsxd esi,DWORD PTR [rbp+0x73]
   14004756e:	add    BYTE PTR [rax],al
   140047570:	(bad)  
   140047571:	add    DWORD PTR [rdi+rbp*2+0x61],ecx
   140047575:	imul   esi,DWORD PTR fs:[rbp+r13*2+0x61],0x40004170
   14004757f:	add    DWORD PTR [rdi+0x65],eax
   140047582:	je     0x1400475d1
   140047584:	outs   dx,BYTE PTR gs:[rsi]
   140047586:	jne    0x1400475cb
   140047588:	push   0x4d6b6365
   14004758d:	(bad)  
   14004758e:	jb     0x1400475fb
   140047590:	imul   r13d,DWORD PTR [rbp+0x65],0x6f69736e
   140047598:	outs   dx,BYTE PTR ds:[rsi]
   140047599:	jae    0x14004759b
   14004759b:	add    BYTE PTR [rcx+0x74655302],cl
   1400475a1:	rex.WRB
   1400475a2:	outs   dx,BYTE PTR gs:[rsi]
   1400475a4:	jne    0x1400475ef
   1400475a6:	je     0x14004760d
   1400475a8:	ins    DWORD PTR es:[rdi],dx
   1400475a9:	imul   esi,DWORD PTR [rbp+r13*2+0x61],0x7370
   1400475b2:	jg     0x1400475b5
   1400475b4:	rex.RXB
   1400475b5:	gs je  0x14004760f
   1400475b8:	imul   ebp,DWORD PTR [rsi+0x64],0x8c00776f
   1400475bf:	add    DWORD PTR [rdi+0x65],eax
   1400475c2:	je     0x14004761b
   1400475c4:	imul   ebp,DWORD PTR [rsi+0x64],0x6552776f
   1400475cb:	movsxd esi,DWORD PTR [rax+rax*1-0x75]
   1400475cf:	add    DWORD PTR [rdi+0x65],eax
   1400475d2:	je     0x14004762b
   1400475d4:	imul   ebp,DWORD PTR [rsi+0x64],0x6c50776f
   1400475db:	(bad)  
   1400475dc:	movsxd esp,DWORD PTR [rbp+0x6d]
   1400475df:	outs   dx,BYTE PTR gs:[rsi]
   1400475e1:	je     0x1400475e3
   1400475e3:	add    cl,al
   1400475e5:	add    DWORD PTR [rcx+0x73],ecx
   1400475e8:	movsxd rbp,DWORD PTR [r15+0x6e]
   1400475ec:	imul   esp,DWORD PTR [rbx+0x0],0x5302cc00
   1400475f3:	jns    0x140047668
   1400475f5:	je     0x14004765c
   1400475f7:	ins    DWORD PTR es:[rdi],dx
   1400475f8:	push   rax
   1400475f9:	(bad)  
   1400475fa:	jb     0x14004765d
   1400475fc:	ins    DWORD PTR es:[rdi],dx
   1400475fd:	gs je  0x140047665
   140047600:	jb     0x140047675
   140047602:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140047604:	outs   dx,WORD PTR ds:[rsi]
   140047606:	add    BYTE PTR [r15+0x74655302],bpl
   14004760d:	push   rdi
   14004760e:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   140047615:	jae    0x140047617
   140047617:	add    BYTE PTR [rsi],bh
   140047619:	add    DWORD PTR [rdi+0x65],eax
   14004761c:	je     0x14004766b
   14004761e:	outs   dx,BYTE PTR gs:[rsi]
   140047620:	jne    0x140047622
   140047622:	sbb    al,0x0
   140047624:	rex.XB (bad) 
   140047626:	ins    BYTE PTR es:[rdi],dx
   140047627:	ins    BYTE PTR es:[rdi],dx
   140047628:	push   rdi
   140047629:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   140047630:	outs   dx,DWORD PTR ds:[rsi]
   140047631:	movsxd eax,DWORD PTR [rcx+0x0]
   140047634:	xchg   ebp,eax
   140047635:	add    BYTE PTR [rbp+riz*2+0x66],al
   140047639:	push   rdi
   14004763a:	imul   ebp,DWORD PTR [rsi+0x64],0x7250776f
   140047641:	outs   dx,DWORD PTR ds:[rsi]
   140047642:	movsxd eax,DWORD PTR [rcx+0x0]
   140047645:	add    BYTE PTR [rip+0x49745002],ch        # 0x18978c64d
   14004764b:	outs   dx,BYTE PTR ds:[rsi]
   14004764c:	push   rdx
   14004764d:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   140047652:	and    BYTE PTR [rcx],al
   140047654:	rex.RXB
   140047655:	gs je  0x14004769c
   140047658:	ins    BYTE PTR es:[rdi],dx
   140047659:	addr32 rex.XB je 0x1400476cf
   14004765d:	ins    BYTE PTR es:[rdi],dx
   14004765e:	rex.WB
   14004765f:	add    BYTE PTR [rax],r8b
   140047662:	rex.WRXB add BYTE PTR [r11+0x6f],r8b
   140047666:	jo     0x1400476e1
   140047668:	push   rdx
   140047669:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x0]
   14004766e:	add    eax,DWORD PTR [rax]
   140047670:	rex.B
   140047671:	fs push 0x75
   140047674:	jae    0x1400476ea
   140047676:	push   rdi
   140047677:	imul   ebp,DWORD PTR [rsi+0x64],0x6552776f
   14004767e:	movsxd esi,DWORD PTR [rbp+rax*2+0x78]
   140047682:	add    BYTE PTR [rax],al
   140047684:	(bad)  
   140047685:	add    dl,BYTE PTR [rdx+0x65]
   140047688:	imul   esi,DWORD PTR [ebx+0x74],0x6c437265
   140047690:	(bad)  
   140047691:	jae    0x140047706
   140047693:	add    BYTE PTR [r8],al
   140047696:	add    al,0x1
   140047698:	rex.RXB
   140047699:	gs je  0x1400476df
   14004769c:	ins    BYTE PTR es:[rdi],dx
   14004769d:	(bad)  
   14004769e:	jae    0x140047713
   1400476a0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400476a2:	outs   dx,WORD PTR ds:[rsi]
   1400476a4:	add    BYTE PTR [rip+0x74654701],al        # 0x1b469bdac
   1400476ab:	rex.XB ins BYTE PTR es:[rdi],dx
   1400476ad:	(bad)  
   1400476ae:	jae    0x140047723
   1400476b0:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400476b2:	outs   dx,WORD PTR ds:[rsi]
   1400476b4:	rex.RB js 0x1400476f8
   1400476b7:	add    BYTE PTR [rdi+0x0],ah
   1400476ba:	rex.XB jb 0x140047722
   1400476bd:	(bad)  
   1400476be:	je     0x140047725
   1400476c0:	push   rdi
   1400476c1:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   1400476c8:	add    BYTE PTR [r10],spl
   1400476cb:	add    dl,BYTE PTR [rax+0x6f]
   1400476ce:	jae    0x140047744
   1400476d0:	rex.WRB
   1400476d1:	gs jae 0x140047747
   1400476d4:	(bad)  
   1400476d5:	add    BYTE PTR gs:[r8d],al
   1400476da:	sgdt   [rdi+0x65]
   1400476de:	je     0x140047723
   1400476e0:	ins    BYTE PTR es:[rdi],dx
   1400476e1:	imul   esp,DWORD PTR [rbp+0x6e],0x63655274
   1400476e8:	je     0x1400476ea
   1400476ea:	add    BYTE PTR [rdx],0x53
   1400476ed:	gs je  0x140047736
   1400476f0:	outs   dx,DWORD PTR ds:[rsi]
   1400476f1:	jb     0x140047758
   1400476f3:	addr32 jb 0x140047765
   1400476f6:	jne    0x140047766
   1400476f8:	fs push rdi
   1400476fa:	imul   ebp,DWORD PTR [rsi+0x64],0x8500776f
   140047701:	add    dl,BYTE PTR [rbx+0x65]
   140047704:	je     0x140047753
   140047706:	outs   dx,BYTE PTR gs:[rsi]
   140047708:	jne    0x14004770a
   14004770a:	test   DWORD PTR [rcx],0x5770614d
   140047710:	imul   ebp,DWORD PTR [rsi+0x64],0x6f50776f
   140047717:	imul   ebp,DWORD PTR [rsi+0x74],0x14e0073
   14004771e:	rex.RXB
   14004771f:	gs je  0x14004776f
   140047722:	gs jae 0x140047798
   140047725:	(bad)  
   140047726:	addr32 gs push rax
   140047729:	outs   dx,DWORD PTR ds:[rsi]
   14004772a:	jae    0x14004772c
   14004772c:	rex.WRXB add QWORD PTR [r15+0x65],r8
   140047730:	je     0x14004777f
   140047732:	gs jae 0x1400477a8
   140047735:	(bad)  
   140047736:	addr32 gs push rsp
   140047739:	imul   ebp,DWORD PTR [rbp+0x65],0x2ab0000
   140047740:	push   rbx
   140047741:	gs je  0x14004779b
   140047744:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14004774b:	outs   dx,BYTE PTR ds:[rsi]
   14004774c:	addr32 push rax
   14004774e:	je     0x1400477c2
   140047750:	add    BYTE PTR [r9+rax*1+0x57746547],al
   140047758:	imul   ebp,DWORD PTR [rsi+0x64],0x6f4c776f
   14004775f:	outs   dx,BYTE PTR ds:[rsi]
   140047760:	addr32 push rax
   140047762:	je     0x1400477d6
   140047764:	add    BYTE PTR [r8+0x73654400],spl
   14004776b:	je     0x1400477df
   14004776d:	outs   dx,DWORD PTR ds:[rsi]
   14004776e:	jns    0x1400477c7
   140047770:	imul   ebp,DWORD PTR [rsi+0x64],0x7700776f
   140047777:	add    DWORD PTR [rdi+0x65],eax
   14004777a:	je     0x1400477d0
   14004777c:	outs   dx,DWORD PTR ds:[rsi]
   14004777d:	jo     0x1400477d6
   14004777f:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   140047786:	and    DWORD PTR [rcx],eax
   140047788:	rex.RXB
   140047789:	gs je  0x1400477d0
   14004778c:	ins    BYTE PTR es:[rdi],dx
   14004778d:	addr32 rex.WB je 0x1400477f6
   140047791:	ins    DWORD PTR es:[rdi],dx
   140047792:	add    BYTE PTR [rax],al
   140047794:	(bad)  
   140047795:	add    DWORD PTR [rdi+0x65],eax
   140047798:	je     0x1400477e0
   14004779a:	outs   dx,DWORD PTR ds:[rsi]
   14004779b:	jb     0x140047802
   14004779d:	addr32 jb 0x14004780f
   1400477a0:	jne    0x140047810
   1400477a2:	fs push rdi
   1400477a4:	imul   ebp,DWORD PTR [rsi+0x64],0xc900776f
   1400477ab:	add    DWORD PTR [rcx+0x73],ecx
   1400477ae:	push   rdi
   1400477af:	imul   ebp,DWORD PTR [rsi+0x64],0x776f
   1400477b6:	push   rbx
   1400477b7:	add    dl,BYTE PTR [rdx+0x65]
   1400477ba:	ins    DWORD PTR es:[rdi],dx
   1400477bb:	outs   dx,DWORD PTR ds:[rsi]
   1400477bc:	jbe    0x140047823
   1400477be:	push   rax
   1400477bf:	jb     0x140047830
   1400477c1:	jo     0x140047804
   1400477c3:	add    BYTE PTR [rbp+0x1],bl
   1400477c6:	rex.RXB
   1400477c7:	gs je  0x14004781a
   1400477ca:	jb     0x14004783b
   1400477cc:	jo     0x14004780f
   1400477ce:	add    BYTE PTR [rax],al
   1400477d0:	xchg   ebp,eax
   1400477d1:	add    dl,BYTE PTR [rbx+0x65]
   1400477d4:	je     0x140047826
   1400477d6:	jb     0x140047847
   1400477d8:	jo     0x14004781b
   1400477da:	add    BYTE PTR [rax],al
   1400477dc:	or     DWORD PTR [rcx],eax
   1400477de:	rex.RXB
   1400477df:	gs je  0x140047825
   1400477e2:	ins    BYTE PTR es:[rdi],dx
   1400477e3:	(bad)  
   1400477e4:	jae    0x140047859
   1400477e6:	rex.WR outs dx,DWORD PTR ds:[rsi]
   1400477e8:	outs   dx,BYTE PTR ds:[rsi]
   1400477e9:	addr32 push rax
   1400477eb:	je     0x14004785f
   1400477ed:	add    BYTE PTR [r8],al
   1400477f0:	or     al,0x1
   1400477f2:	rex.RXB
   1400477f3:	gs je  0x140047839
   1400477f6:	ins    BYTE PTR es:[rdi],dx
   1400477f7:	(bad)  
   1400477f8:	jae    0x14004786d
   1400477fa:	rex.WRX (bad) 
   1400477fc:	ins    DWORD PTR es:[rdi],dx
   1400477fd:	add    BYTE PTR gs:[r8],cl
   140047801:	add    DWORD PTR [rdi+0x65],eax
   140047804:	je     0x140047849
   140047806:	ins    BYTE PTR es:[rdi],dx
   140047807:	(bad)  
   140047808:	jae    0x14004787d
   14004780a:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004780c:	outs   dx,BYTE PTR ds:[rsi]
   14004780d:	add    BYTE PTR [r9d],al
   140047811:	add    DWORD PTR [rdi+0x65],eax
   140047814:	je     0x140047859
   140047816:	(bad)  
   140047817:	jo     0x14004788d
   140047819:	jne    0x14004788d
   14004781b:	add    BYTE PTR gs:[rax],al
   14004781e:	(bad)  
   14004781f:	add    edx,DWORD PTR [rdi+0x69]
   140047822:	outs   dx,BYTE PTR ds:[rsi]
   140047823:	rex.W
   140047824:	gs ins BYTE PTR es:[rdi],dx
   140047826:	jo     0x140047869
   140047828:	add    BYTE PTR [rax],al
   14004782a:	fiadd  DWORD PTR [rcx]
   14004782c:	rex.WR outs dx,DWORD PTR ds:[rsi]
   14004782e:	(bad)  
   14004782f:	movsxd rbp,DWORD PTR fs:[r15+0x6e]
   140047834:	add    BYTE PTR [r13+0x2],cl
   140047838:	push   rdx
   140047839:	imul   esi,DWORD PTR gs:[ebx+0x74],0x69577265
   140047842:	outs   dx,BYTE PTR ds:[rsi]
   140047843:	outs   dx,DWORD PTR fs:[rsi]
   140047845:	ja     0x140047894
   140047847:	gs jae 0x1400478bd
   14004784a:	(bad)  
   14004784b:	add    BYTE PTR gs:[r8d],al
   140047850:	mov    bl,0x2
   140047852:	push   rbx
   140047853:	gs je  0x1400478ad
   140047856:	imul   ebp,DWORD PTR [rsi+0x64],0x6554776f
   14004785d:	js     0x1400478d3
   14004785f:	add    BYTE PTR [r8],al
   140047862:	add    BYTE PTR [r11+0x6c],r8b
   140047866:	imul   esp,DWORD PTR [rbp+0x6e],0x536f5474
   14004786d:	movsxd esi,DWORD PTR [rdx+0x65]
   140047870:	outs   dx,BYTE PTR gs:[rsi]
   140047872:	add    BYTE PTR [rax],al
   140047874:	sahf   
   140047875:	add    BYTE PTR [rbp+riz*2+0x73],al
   140047879:	je     0x1400478ed
   14004787b:	outs   dx,DWORD PTR ds:[rsi]
   14004787c:	jns    0x1400478cb
   14004787e:	outs   dx,BYTE PTR gs:[rsi]
   140047880:	jne    0x140047882
   140047882:	(bad)  
   140047883:	add    dl,BYTE PTR [rcx+riz*2+0x62]
   140047887:	(bad)  
   140047888:	gs fs push rsp
   14004788b:	gs js  0x140047902
   14004788e:	rex.WRXB jne 0x140047905
   140047891:	add    BYTE PTR [r8],al
   140047894:	(bad)
   140047897:	jb     0x1400478fa
   140047899:	ja     0x1400478ef
   14004789b:	gs js  0x140047912
   14004789e:	add    r14b,al
   1400478a1:	add    BYTE PTR [rdx+rsi*2+0x61],al
   1400478a5:	ja     0x1400478fb
   1400478a7:	gs js  0x14004791e
   1400478aa:	rex.RB js 0x1400478ee
   1400478ad:	add    BYTE PTR [rdi+0x61724701],dl
   1400478b3:	jns    0x140047908
   1400478b5:	je     0x140047929
   1400478b7:	imul   ebp,DWORD PTR [rsi+0x67],0x2240041
   1400478be:	push   rax
   1400478bf:	outs   dx,DWORD PTR ds:[rsi]
   1400478c0:	jae    0x140047936
   1400478c2:	push   rcx
   1400478c3:	jne    0x14004792e
   1400478c5:	je     0x140047914
   1400478c7:	gs jae 0x14004793d
   1400478ca:	(bad)  
   1400478cb:	add    BYTE PTR gs:[ebp+0x53],dl
   1400478d0:	rex.RB push r10
   1400478d2:	xor    esi,DWORD PTR [rdx]
   1400478d4:	cs fs ins BYTE PTR es:[rdi],dx
   1400478d7:	ins    BYTE PTR es:[rdi],dx
   1400478d8:	add    BYTE PTR [rax],al
   1400478da:	mov    ch,0x1
   1400478dc:	rex.RXB
   1400478dd:	gs je  0x140047924
   1400478e0:	gs jbe 0x14004794c
   1400478e3:	movsxd esp,DWORD PTR [rbp+0x43]
   1400478e6:	(bad)  
   1400478e7:	jo     0x14004795c
   1400478e9:	add    BYTE PTR [rax],ch
   1400478eb:	add    BYTE PTR [rbx+0x72],al
   1400478ee:	gs (bad) 
   1400478f0:	je     0x140047957
   1400478f2:	imul   esi,DWORD PTR [rbp+r13*2+0x61],0xaa000070
   1400478fb:	add    DWORD PTR [rdi+0x65],eax
   1400478fe:	je     0x140047943
   140047900:	ins    BYTE PTR es:[rdi],dx
   140047901:	imul   esi,DWORD PTR [rax+0x42],0x786f
   140047908:	lea    eax,[rdx]
   14004790a:	push   rbx
   14004790b:	gs je  0x140047962
   14004790e:	gs js  0x140047985
   140047911:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140047913:	ins    BYTE PTR es:[rdi],dx
   140047914:	outs   dx,DWORD PTR ds:[rsi]
   140047915:	jb     0x140047917
   140047917:	add    BYTE PTR [rbp+0x2],ah
   14004791a:	push   rbx
   14004791b:	gs je  0x140047960
   14004791e:	imul   eax,DWORD PTR [rbx+0x6f],0x6c
   140047922:	outs   dx,DWORD PTR ds:[rsi]
   140047923:	jb     0x140047925
   140047925:	add    al,dl
   140047927:	add    BYTE PTR [rbp+riz*2+0x6c],al
   14004792b:	gs je  0x140047993
   14004792e:	rex.WRXB (bad) 
   140047930:	push   0x65
   140047932:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140047936:	and    al,BYTE PTR [rcx]
   140047938:	rex.RB js 0x1400479af
   14004793b:	push   rsp
   14004793c:	gs js  0x1400479b3
   14004793f:	rex.WRXB jne 0x1400479b6
   140047942:	add    BYTE PTR [r15+0x2],dl
   140047946:	push   rbx
   140047947:	(bad)  
   140047948:	jbe    0x1400479af
   14004794a:	rex.R
   14004794b:	rex.XB add BYTE PTR [r8],al
   14004794e:	push   rax
   14004794f:	add    dl,BYTE PTR [rdx+0x65]
   140047952:	jae    0x1400479c8
   140047954:	outs   dx,DWORD PTR ds:[rsi]
   140047955:	jb     0x1400479bc
   140047957:	rex.R
   140047958:	rex.XB add BYTE PTR [r11+0x2],dil
   14004795c:	push   rbx
   14004795d:	gs je  0x1400479ad
   140047960:	(bad)  
   140047961:	jo     0x1400479b0
   140047963:	outs   dx,DWORD PTR ds:[rsi]
   140047964:	fs add BYTE PTR gs:[rax],al
   140047968:	add    dl,BYTE PTR [r8+0x74]
   14004796c:	push   rsi
   14004796d:	imul   esi,DWORD PTR [rbx+0x69],0x656c62
   140047974:	add    r10b,BYTE PTR [r10+0x65]
   140047978:	movsxd esi,DWORD PTR [rsi+rdx*2+0x69]
   14004797c:	jae    0x1400479e7
   14004797e:	(bad)  
   14004797f:	ins    BYTE PTR es:[rdi],dx
   140047980:	add    BYTE PTR gs:[rdi+0x78655402],bl
   140047987:	je     0x1400479d8
   140047989:	jne    0x1400479ff
   14004798b:	add    BYTE PTR [r8],al
   14004798e:	sbb    DWORD PTR [rcx],eax
   140047990:	rex.RB jae 0x1400479f6
   140047993:	(bad)  
   140047994:	jo     0x1400479fb
   140047996:	add    BYTE PTR [rax],al
   140047998:	pop    rsi
   140047999:	add    dl,BYTE PTR [rbx+0x65]
   14004799c:	ins    BYTE PTR es:[rdi],dx
   14004799d:	movsxd esi,DWORD PTR gs:[rdi+rcx*2+0x62]
   1400479a2:	push   0x65
   1400479a4:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   1400479a8:	nop
   1400479a9:	add    dl,BYTE PTR [rbx+0x65]
   1400479ac:	je     0x140047a04
   1400479ae:	imul   esp,DWORD PTR [rbp+0x77],0x74726f70
   1400479b5:	rex.WRXB jb 0x140047a1f
   1400479b8:	rex.RB js 0x1400479bb
   1400479bb:	add    BYTE PTR [rip+0x66664f02],ah        # 0x1a66ac8c3
   1400479c1:	jae    0x140047a28
   1400479c3:	je     0x140047a1b
   1400479c5:	imul   esp,DWORD PTR [rbp+0x77],0x74726f70
   1400479cc:	rex.WRXB jb 0x140047a36
   1400479cf:	rex.RB js 0x1400479d2
   1400479d2:	pop    QWORD PTR [rdx]
   1400479d4:	push   rbx
   1400479d5:	gs je  0x140047a2e
   1400479d8:	imul   esp,DWORD PTR [rbp+0x77],0x74726f70
   1400479df:	rex.RB js 0x140047a56
   1400479e2:	rex.RB js 0x1400479e5
   1400479e5:	add    BYTE PTR [rax+0x2],bl
   1400479e8:	push   rbx
   1400479e9:	movsxd esp,DWORD PTR [rcx+0x6c]
   1400479ec:	gs push rsi
   1400479ee:	imul   esp,DWORD PTR [rbp+0x77],0x74726f70
   1400479f5:	rex.RB js 0x140047a6c
   1400479f8:	rex.RB js 0x1400479fb
   1400479fb:	add    BYTE PTR [rbx+0x74655302],dl
   140047a01:	push   rdi
   140047a02:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140047a09:	je     0x140047a50
   140047a0b:	js     0x140047a0d
   140047a0d:	add    BYTE PTR [rcx+0x2],bl
   140047a10:	push   rbx
   140047a11:	movsxd esp,DWORD PTR [rcx+0x6c]
   140047a14:	gs push rdi
   140047a16:	imul   ebp,DWORD PTR [rsi+0x64],0x7845776f
   140047a1d:	je     0x140047a64
   140047a1f:	js     0x140047a21
   140047a21:	add    ch,cl
   140047a23:	add    BYTE PTR [rbp+riz*2+0x6c],al
   140047a27:	gs je  0x140047a8f
   140047a2a:	rex.R
   140047a2b:	rex.XB add BYTE PTR [r8],al
   140047a2e:	hlt    
   140047a2f:	add    DWORD PTR [rdi+0x65],eax
   140047a32:	je     0x140047a87
   140047a34:	je     0x140047aa5
   140047a36:	movsxd ebp,DWORD PTR [rbx+0x4f]
   140047a39:	(bad)  
   140047a3a:	push   0x65
   140047a3c:	movsxd esi,DWORD PTR [rax+rax*1+0x0]
   140047a40:	rex.RXB
   140047a41:	rex.R
   140047a42:	xor    rsi,QWORD PTR [r10]
   140047a45:	cs fs ins BYTE PTR es:[rdi],dx
   140047a48:	ins    BYTE PTR es:[rdi],dx
   140047a49:	add    BYTE PTR [rip+0x6f6c4300],bl        # 0x1af70bd4f
   140047a4f:	jae    0x140047ab6
   140047a51:	push   rax
   140047a52:	jb     0x140047abd
   140047a54:	outs   dx,BYTE PTR ds:[rsi]
   140047a55:	je     0x140047abc
   140047a57:	jb     0x140047a59
   140047a59:	add    BYTE PTR [rbp+0x0],cl
   140047a5c:	rex.R outs dx,DWORD PTR ds:[rsi]
   140047a5e:	movsxd esi,DWORD PTR [rbp+0x6d]
   140047a61:	outs   dx,BYTE PTR gs:[rsi]
   140047a63:	je     0x140047ab5
   140047a65:	jb     0x140047ad6
   140047a67:	jo     0x140047ace
   140047a69:	jb     0x140047adf
   140047a6b:	imul   esp,DWORD PTR [rbp+0x73],0x8e0041
   140047a72:	rex.WRXB jo 0x140047ada
   140047a75:	outs   dx,BYTE PTR ds:[rsi]
   140047a76:	push   rax
   140047a77:	jb     0x140047ae2
   140047a79:	outs   dx,BYTE PTR ds:[rsi]
   140047a7a:	je     0x140047ae1
   140047a7c:	jb     0x140047abf
   140047a7e:	add    BYTE PTR [rax],al
   140047a80:	push   rdi
   140047a81:	rex.WB
   140047a82:	rex.WRX push rbx
   140047a84:	push   rax
   140047a85:	rex.WRXB
   140047a86:	rex.WRXB
   140047a87:	rex.WR
   140047a88:	cs rex.R push rdx
   140047a8b:	push   rsi
   140047a8c:	add    BYTE PTR [rax],al
   140047a8e:	rol    DWORD PTR [rdx],0x53
   140047a91:	je     0x140047af4
   140047a93:	jb     0x140047b09
   140047a95:	push   rbx
   140047a96:	gs jb  0x140047b0f
   140047a99:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   140047aa0:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   140047aa8:	gs jb  0x140047aec
   140047aab:	add    BYTE PTR [rdi+0x2],bh
   140047aae:	push   rdx
   140047aaf:	imul   esi,DWORD PTR gs:[ebx+0x74],0x65537265
   140047ab8:	jb     0x140047b30
   140047aba:	imul   esp,DWORD PTR [rbx+0x65],0x6c727443
   140047ac1:	rex.W (bad) 
   140047ac3:	outs   dx,BYTE PTR ds:[rsi]
   140047ac4:	fs ins BYTE PTR es:[rdi],dx
   140047ac6:	gs jb  0x140047b0a
   140047ac9:	add    BYTE PTR [rdx+0x74655302],bh
   140047acf:	push   rbx
   140047ad0:	gs jb  0x140047b49
   140047ad3:	imul   esp,DWORD PTR [rbx+0x65],0x74617453
   140047ada:	jne    0x140047b4f
   140047adc:	add    BYTE PTR [rax],al
   140047ade:	repnz add DWORD PTR [rdi+0x70],ecx
   140047ae2:	outs   dx,BYTE PTR gs:[rsi]
   140047ae4:	push   rbx
   140047ae5:	rex.XB
   140047ae6:	rex.WRB (bad) 
   140047ae8:	outs   dx,BYTE PTR ds:[rsi]
   140047ae9:	(bad)  
   140047aea:	addr32 gs jb 0x140047b2f
   140047aee:	add    BYTE PTR [rax],al
   140047af0:	hlt    
   140047af1:	add    DWORD PTR [rdi+0x70],ecx
   140047af4:	outs   dx,BYTE PTR gs:[rsi]
   140047af6:	push   rbx
   140047af7:	gs jb  0x140047b70
   140047afa:	imul   esp,DWORD PTR [rbx+0x65],0x53000041
   140047b01:	add    BYTE PTR [rbx+0x6c],al
   140047b04:	outs   dx,DWORD PTR ds:[rsi]
   140047b05:	jae    0x140047b6c
   140047b07:	push   rbx
   140047b08:	gs jb  0x140047b81
   140047b0b:	imul   esp,DWORD PTR [rbx+0x65],0x646e6148
   140047b12:	ins    BYTE PTR es:[rdi],dx
   140047b13:	add    BYTE PTR gs:[rax],al
   140047b16:	pop    rax
   140047b17:	add    BYTE PTR [rbx+0x6f],al
   140047b1a:	outs   dx,BYTE PTR ds:[rsi]
   140047b1b:	je     0x140047b8f
   140047b1d:	outs   dx,DWORD PTR ds:[rsi]
   140047b1e:	ins    BYTE PTR es:[rdi],dx
   140047b1f:	push   rbx
   140047b20:	gs jb  0x140047b99
   140047b23:	imul   esp,DWORD PTR [rbx+0x65],0x7c0000
   140047b2a:	rex.XB jb 0x140047b92
   140047b2d:	(bad)  
   140047b2e:	je     0x140047b95
   140047b30:	push   rbx
   140047b31:	gs jb  0x140047baa
   140047b34:	imul   esp,DWORD PTR [rbx+0x65],0xc0000041
   140047b3b:	add    dl,BYTE PTR [rbx+0x74]
   140047b3e:	(bad)  
   140047b3f:	jb     0x140047bb5
   140047b41:	push   rbx
   140047b42:	gs jb  0x140047bbb
   140047b45:	imul   esp,DWORD PTR [rbx+0x65],0xd60041
   140047b4c:	rex.R
   140047b4d:	gs ins BYTE PTR es:[rdi],dx
   140047b4f:	gs je  0x140047bb7
   140047b52:	push   rbx
   140047b53:	gs jb  0x140047bcc
   140047b56:	imul   esp,DWORD PTR [rbx+0x65],0x4c018200
   140047b5d:	outs   dx,DWORD PTR ds:[rsi]
   140047b5e:	movsxd ebp,DWORD PTR [rbx+0x53]
   140047b61:	gs jb  0x140047bda
   140047b64:	imul   esp,DWORD PTR [rbx+0x65],0x61746144
   140047b6b:	(bad)  
   140047b6d:	jae    0x140047bd4
   140047b6f:	add    cl,bh
   140047b71:	add    dl,BYTE PTR [rbp+0x6e]
   140047b74:	ins    BYTE PTR es:[rdi],dx
   140047b75:	outs   dx,DWORD PTR ds:[rsi]
   140047b76:	movsxd ebp,DWORD PTR [rbx+0x53]
   140047b79:	gs jb  0x140047bf2
   140047b7c:	imul   esp,DWORD PTR [rbx+0x65],0x61746144
   140047b83:	(bad)  
   140047b85:	jae    0x140047bec
   140047b87:	add    BYTE PTR [rip+0x65755102],bl        # 0x1a579cc8f
   140047b8d:	jb     0x140047c08
   140047b8f:	push   rbx
   140047b90:	gs jb  0x140047c09
   140047b93:	imul   esp,DWORD PTR [rbx+0x65],0x666e6f43
   140047b9a:	imul   esp,DWORD PTR [rdi+0x41],0x52022a00
   140047ba1:	gs rex.XB ins BYTE PTR es:[edi],dx
   140047ba5:	outs   dx,DWORD PTR ds:[rsi]
   140047ba6:	jae    0x140047c0d
   140047ba8:	rex.WXB
   140047ba9:	gs jns 0x140047bac
   140047bac:	xor    al,BYTE PTR [rdx]
   140047bae:	push   rdx
   140047baf:	gs addr32 rex.XB jb 0x140047c19
   140047bb4:	(bad)  
   140047bb5:	je     0x140047c1c
   140047bb7:	rex.WXB
   140047bb8:	gs jns 0x140047c00
   140047bbb:	js     0x140047bfe
   140047bbd:	add    BYTE PTR [rdi+0x2],dh
   140047bc0:	push   rdx
   140047bc1:	gs addr32 push rbx
   140047bc4:	gs je  0x140047c1d
   140047bc7:	(bad)  
   140047bc8:	ins    BYTE PTR es:[rdi],dx
   140047bc9:	jne    0x140047c30
   140047bcb:	rex.RB js 0x140047c0f
   140047bce:	add    BYTE PTR [rax],al
   140047bd0:	xlat   BYTE PTR ds:[rbx]
   140047bd1:	add    BYTE PTR [rbp+riz*2+0x72],al
   140047bd5:	imul   esi,DWORD PTR gs:[ebx+0x74],0x76457265
   140047bde:	outs   dx,BYTE PTR gs:[rsi]
   140047be0:	je     0x140047c35
   140047be2:	outs   dx,DWORD PTR ds:[rsi]
   140047be3:	jne    0x140047c57
   140047be5:	movsxd esp,DWORD PTR [rbp+0x0]
   140047be8:	mov    BYTE PTR [rdx],al
   140047bea:	push   rdx
   140047beb:	gs jo  0x140047c5d
   140047bee:	jb     0x140047c64
   140047bf0:	rex.RB jbe 0x140047c58
   140047bf3:	outs   dx,BYTE PTR ds:[rsi]
   140047bf4:	je     0x140047c37
   140047bf6:	add    BYTE PTR [rax],al
   140047bf8:	jl     0x140047bfc
   140047bfa:	push   rdx
   140047bfb:	imul   esi,DWORD PTR gs:[ebx+0x74],0x76457265
   140047c04:	outs   dx,BYTE PTR gs:[rsi]
   140047c06:	je     0x140047c5b
   140047c08:	outs   dx,DWORD PTR ds:[rsi]
   140047c09:	jne    0x140047c7d
   140047c0b:	movsxd esp,DWORD PTR [rbp+0x41]
   140047c0e:	add    BYTE PTR [rax],al
   140047c10:	rex.B
   140047c11:	rex.R push rsi
   140047c13:	push   r8
   140047c15:	xor    rsi,QWORD PTR [r10]
   140047c18:	cs fs ins BYTE PTR es:[rdi],dx
   140047c1b:	ins    BYTE PTR es:[rdi],dx
   140047c1c:	add    BYTE PTR [rax],al
   140047c1e:	rex.WRXB
   140047c1f:	rex.WR
   140047c20:	rex.RB
   140047c21:	push   r13
   140047c23:	push   rsp
   140047c24:	xor    esi,DWORD PTR [rdx]
   140047c26:	cs fs ins BYTE PTR es:[rdi],dx
   140047c29:	ins    BYTE PTR es:[rdi],dx
   140047c2a:	add    BYTE PTR [rax],al
   140047c2c:	add    al,0x0
   140047c2e:	rex.XB jb 0x140047c96
   140047c31:	(bad)  
   140047c32:	je     0x140047c99
   140047c34:	push   rbx
   140047c35:	je     0x140047c9b
   140047c37:	movsxd esp,DWORD PTR [r11+0x65]
   140047c3b:	jae    0x140047cb0
   140047c3d:	imul   esp,DWORD PTR [rdx+0x6c],0x6a624f65
   140047c44:	movsxd esi,DWORD PTR gs:[rax+rax*1+0x14]
   140047c49:	add    BYTE PTR [rdx+rsi*2+0x65],cl
   140047c4d:	jae    0x140047cc4
   140047c4f:	ins    BYTE PTR es:[rdi],dx
   140047c50:	je     0x140047c98
   140047c52:	jb     0x140047cc3
   140047c54:	ins    DWORD PTR es:[rdi],dx
   140047c55:	rex.WRXB (bad) 
   140047c57:	push   0x65
   140047c59:	movsxd esi,DWORD PTR [rax+rax*1+0x4f]
   140047c5d:	rex.WR
   140047c5e:	rex.RB
   140047c5f:	rex.B
   140047c60:	rex.XB
   140047c61:	rex.XB
   140047c62:	cs fs ins BYTE PTR es:[rdi],dx
   140047c65:	ins    BYTE PTR es:[rdi],dx
	...

Disassembly of section .data:

0000000140048000 <.data>:
   140048000:	je     0x140048064
   140048002:	add    BYTE PTR [rax+0x1],al
   140048005:	add    BYTE PTR [rax],al
   140048007:	add    BYTE PTR [rax-0x6c],ah
   14004800a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048015:	add    BYTE PTR [rax],al
   140048017:	add    BYTE PTR [rsi],ch
   140048019:	push   rax
   14004801a:	rex.RB
   14004801b:	push   r14
   14004801d:	rex.XB
   14004801e:	rex.RB js 0x140048084
   140048021:	gs jo  0x140048098
   140048024:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004802b:	add    BYTE PTR [rax],al
   14004802d:	add    BYTE PTR [rax],al
   14004802f:	add    BYTE PTR [rax-0x6c],ah
   140048032:	add    eax,DWORD PTR [rax+0x1]
	...
   14004803d:	add    BYTE PTR [rax],al
   14004803f:	add    BYTE PTR [rsi],ch
   140048041:	push   rax
   140048042:	rex.RB
   140048043:	push   r14
   140048045:	rex.XB
   140048046:	rex.WRB
   140048047:	gs ins DWORD PTR es:[rdi],dx
   140048049:	outs   dx,DWORD PTR ds:[rsi]
   14004804a:	jb     0x1400480c5
   14004804c:	rex.RB js 0x1400480b2
   14004804f:	gs jo  0x1400480c6
   140048052:	imul   ebp,DWORD PTR [rdi+0x6e],0x60004040
   140048059:	xchg   esp,eax
   14004805a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048065:	add    BYTE PTR [rax],al
   140048067:	add    BYTE PTR [rsi],ch
   140048069:	push   rax
   14004806a:	rex.RB
   14004806b:	push   r14
   14004806d:	rex.XB push r11
   14004806f:	imul   ebp,DWORD PTR [rbp+0x70],0x7845656c
   140048076:	movsxd esp,DWORD PTR [rbp+0x70]
   140048079:	je     0x1400480e4
   14004807b:	outs   dx,DWORD PTR ds:[rsi]
   14004807c:	outs   dx,BYTE PTR ds:[rsi]
   14004807d:	rex
   14004807e:	add    BYTE PTR [rax-0x6c],spl
   140048082:	add    eax,DWORD PTR [rax+0x1]
	...
   14004808d:	add    BYTE PTR [rax],al
   14004808f:	add    BYTE PTR [rsi],ch
   140048091:	push   rax
   140048092:	rex.RB
   140048093:	push   r14
   140048095:	rex.XB
   140048096:	rex.WRXB (bad) 
   140048098:	push   0x65
   14004809a:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14004809e:	add    BYTE PTR [rax],al
   1400480a0:	(bad)  
   1400480a1:	xchg   esp,eax
   1400480a2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400480ad:	add    BYTE PTR [rax],al
   1400480af:	add    BYTE PTR [rsi],ch
   1400480b1:	push   rax
   1400480b2:	rex.RB
   1400480b3:	pop    r8
   1400480b5:	add    BYTE PTR [rax],al
   1400480b7:	add    BYTE PTR [rax-0x6c],ah
   1400480ba:	add    eax,DWORD PTR [rax+0x1]
	...
   1400480c5:	add    BYTE PTR [rax],al
   1400480c7:	add    BYTE PTR [rsi],ch
   1400480c9:	push   rax
   1400480ca:	rex.RB
   1400480cb:	push   r14
   1400480cd:	rex.XB
   1400480ce:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400480d0:	je     0x140048125
   1400480d2:	jne    0x140048144
   1400480d4:	jo     0x140048145
   1400480d6:	jb     0x14004814c
   1400480d8:	gs fs rex.RB js 0x140048140
   1400480dd:	gs jo  0x140048154
   1400480e0:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   1400480e7:	add    BYTE PTR [rax-0x6c],ah
   1400480ea:	add    eax,DWORD PTR [rax+0x1]
	...
   1400480f5:	add    BYTE PTR [rax],al
   1400480f7:	add    BYTE PTR [rsi],ch
   1400480f9:	push   rax
   1400480fa:	rex.RB
   1400480fb:	push   r14
   1400480fd:	rex.XB
   1400480fe:	rex.WB outs dx,BYTE PTR ds:[rsi]
   140048100:	jbe    0x140048163
   140048102:	ins    BYTE PTR es:[rdi],dx
   140048103:	imul   esp,DWORD PTR [rcx+rax*2+0x72],0x63784567
   14004810b:	gs jo  0x140048182
   14004810e:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   140048115:	add    BYTE PTR [rax],al
   140048117:	add    BYTE PTR [rax-0x6c],ah
   14004811a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048125:	add    BYTE PTR [rax],al
   140048127:	add    BYTE PTR [rsi],ch
   140048129:	(bad)  
   14004812a:	push   r14
   14004812c:	rex.XB push r11
   14004812e:	imul   ebp,DWORD PTR [rbp+0x70],0x7845656c
   140048135:	movsxd esp,DWORD PTR [rbp+0x70]
   140048138:	je     0x1400481a3
   14004813a:	outs   dx,DWORD PTR ds:[rsi]
   14004813b:	outs   dx,BYTE PTR ds:[rsi]
   14004813c:	rex
   14004813d:	add    BYTE PTR [rax],al
   140048140:	(bad)  
   140048141:	xchg   esp,eax
   140048142:	add    eax,DWORD PTR [rax+0x1]
	...
   14004814d:	add    BYTE PTR [rax],al
   14004814f:	add    BYTE PTR [rsi],ch
   140048151:	(bad)  
   140048152:	push   r14
   140048154:	rex.XB
   140048155:	rex.RB js 0x1400481bb
   140048158:	gs jo  0x1400481cf
   14004815b:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   140048162:	add    BYTE PTR [rax],al
   140048164:	add    BYTE PTR [rax],al
   140048166:	add    BYTE PTR [rax],al
   140048168:	(bad)  
   140048169:	xchg   esp,eax
   14004816a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048175:	add    BYTE PTR [rax],al
   140048177:	add    BYTE PTR [rsi],ch
   140048179:	(bad)  
   14004817a:	push   r14
   14004817c:	rex.XB
   14004817d:	rex.WRXB (bad) 
   14004817f:	push   0x65
   140048181:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   140048185:	add    BYTE PTR [rax],al
   140048187:	add    BYTE PTR [rax-0x6c],ah
   14004818a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048195:	add    BYTE PTR [rax],al
   140048197:	add    BYTE PTR [rsi],ch
   140048199:	(bad)  
   14004819a:	push   r14
   14004819c:	rex.XB
   14004819d:	rex.WRB
   14004819e:	gs ins DWORD PTR es:[rdi],dx
   1400481a0:	outs   dx,DWORD PTR ds:[rsi]
   1400481a1:	jb     0x14004821c
   1400481a3:	rex.RB js 0x140048209
   1400481a6:	gs jo  0x14004821d
   1400481a9:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   1400481b0:	(bad)  
   1400481b1:	xchg   esp,eax
   1400481b2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400481bd:	add    BYTE PTR [rax],al
   1400481bf:	add    BYTE PTR [rsi],ch
   1400481c1:	(bad)  
   1400481c2:	push   r14
   1400481c4:	rex.XB
   1400481c5:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   1400481c7:	je     0x14004821c
   1400481c9:	jne    0x14004823b
   1400481cb:	jo     0x14004823c
   1400481cd:	jb     0x140048243
   1400481cf:	gs fs rex.RB js 0x140048237
   1400481d4:	gs jo  0x14004824b
   1400481d7:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   1400481de:	add    BYTE PTR [rax],al
   1400481e0:	(bad)  
   1400481e1:	xchg   esp,eax
   1400481e2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400481ed:	add    BYTE PTR [rax],al
   1400481ef:	add    BYTE PTR [rsi],ch
   1400481f1:	(bad)  
   1400481f2:	push   r14
   1400481f4:	rex.XB
   1400481f5:	rex.WB outs dx,BYTE PTR ds:[rsi]
   1400481f7:	jbe    0x14004825a
   1400481f9:	ins    BYTE PTR es:[rdi],dx
   1400481fa:	imul   esp,DWORD PTR [rcx+rax*2+0x72],0x63784567
   140048202:	gs jo  0x140048279
   140048205:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004820c:	add    BYTE PTR [rax],al
   14004820e:	add    BYTE PTR [rax],al
   140048210:	add    BYTE PTR [rbx+rax*1+0x40],ch
   140048214:	add    DWORD PTR [rax],eax
	...
   1400482aa:	add    BYTE PTR [rax],al
   1400482ac:	and    esi,eax
   1400482ae:	add    BYTE PTR [rax],al
   1400482b0:	cmp    BYTE PTR [rbx+rax*1+0x40],ch
   1400482b4:	add    DWORD PTR [rax],eax
	...
   14004834a:	add    BYTE PTR [rax],al
   14004834c:	and    eax,esi
   14004834e:	add    BYTE PTR [rax],al
   140048350:	jo     0x1400483be
   140048352:	add    eax,DWORD PTR [rax+0x1]
	...
   1400483e9:	add    BYTE PTR [rax],al
   1400483eb:	add    BYTE PTR [rip+0x600000f0],ah        # 0x1a00484e1
   1400483f1:	xchg   esp,eax
   1400483f2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400483fd:	add    BYTE PTR [rax],al
   1400483ff:	add    BYTE PTR [rsi],ch
   140048401:	(bad)  
   140048402:	push   r13
   140048404:	rex.XB push r12
   140048406:	push   0x64616572
   14004840b:	rex.R (bad) 
   14004840d:	je     0x140048470
   14004840f:	rex
   140048410:	add    BYTE PTR [rax],al
   140048413:	add    BYTE PTR [rax],al
   140048415:	add    BYTE PTR [rax],al
   140048417:	add    BYTE PTR [rax-0x6c],ah
   14004841a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048425:	add    BYTE PTR [rax],al
   140048427:	add    BYTE PTR [rsi],ch
   140048429:	(bad)  
   14004842a:	push   r14
   14004842c:	rex.XB
   14004842d:	rex.WRX outs dx,DWORD PTR ds:[rsi]
   14004842f:	push   rsp
   140048430:	jb     0x140048493
   140048432:	movsxd ebp,DWORD PTR [rbx+0x4f]
   140048435:	(bad)  
   140048436:	push   0x65
   140048438:	movsxd esi,DWORD PTR [rax+rax*2+0x40]
   14004843c:	add    BYTE PTR [rax],al
   14004843e:	add    BYTE PTR [rax],al
   140048440:	(bad)  
   140048441:	xchg   esp,eax
   140048442:	add    eax,DWORD PTR [rax+0x1]
	...
   14004844d:	add    BYTE PTR [rax],al
   14004844f:	add    BYTE PTR [rsi],ch
   140048451:	(bad)  
   140048452:	push   r14
   140048454:	pop    rdi
   140048455:	rex.B
   140048456:	rex.RX pop rax
   140048458:	pop    rdi
   140048459:	push   rsp
   14004845a:	rex.W push rdx
   14004845c:	rex.RB
   14004845d:	rex.B
   14004845e:	rex.R pop rdi
   140048460:	push   rbx
   140048461:	push   rsp
   140048462:	push   r12
   140048464:	rex.RB
   140048465:	rex
   140048466:	add    BYTE PTR [rax-0x6c],spl
   14004846a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048475:	add    BYTE PTR [rax],al
   140048477:	add    BYTE PTR [rsi],ch
   140048479:	(bad)  
   14004847a:	push   r14
   14004847c:	rex.B
   14004847d:	rex.RX pop rax
   14004847f:	pop    rdi
   140048480:	rex.WRB
   140048481:	rex.WRXB
   140048482:	rex.R push rbp
   140048484:	rex.WR
   140048485:	rex.RB pop r15
   140048487:	push   rsp
   140048488:	rex.W push rdx
   14004848a:	rex.RB
   14004848b:	rex.B
   14004848c:	rex.R pop rdi
   14004848e:	push   rbx
   14004848f:	push   rsp
   140048490:	push   r12
   140048492:	rex.RB
   140048493:	rex
   140048494:	add    BYTE PTR [rax],al
   140048497:	add    BYTE PTR [rax-0x6c],ah
   14004849a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400484a5:	add    BYTE PTR [rax],al
   1400484a7:	add    BYTE PTR [rsi],ch
   1400484a9:	(bad)  
   1400484aa:	push   r14
   1400484ac:	rex.B
   1400484ad:	rex.RX pop rax
   1400484af:	pop    rdi
   1400484b0:	rex.WRB
   1400484b1:	rex.WRXB
   1400484b2:	rex.R push rbp
   1400484b4:	rex.WR
   1400484b5:	rex.RB pop r15
   1400484b7:	push   rbx
   1400484b8:	push   rsp
   1400484b9:	push   r12
   1400484bb:	rex.RB
   1400484bc:	rex
   1400484bd:	add    BYTE PTR [rax],al
   1400484c0:	(bad)  
   1400484c1:	xchg   esp,eax
   1400484c2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400484cd:	add    BYTE PTR [rax],al
   1400484cf:	add    BYTE PTR [rsi],ch
   1400484d1:	(bad)  
   1400484d2:	push   r14
   1400484d4:	rex.XB
   1400484d5:	rex.R ins BYTE PTR es:[rdi],dx
   1400484d7:	ins    BYTE PTR es:[rdi],dx
   1400484d8:	rex.WB jae 0x14004854a
   1400484db:	ins    BYTE PTR es:[rdi],dx
   1400484dc:	(bad)  
   1400484dd:	je     0x140048548
   1400484df:	outs   dx,DWORD PTR ds:[rsi]
   1400484e0:	outs   dx,BYTE PTR ds:[rsi]
   1400484e1:	push   rdi
   1400484e2:	jb     0x140048545
   1400484e4:	jo     0x140048556
   1400484e6:	gs jb  0x14004852b
   1400484e9:	(bad)  
   1400484ea:	jae    0x140048551
   1400484ec:	rex
   1400484ed:	add    BYTE PTR [rax],al
   1400484f0:	(bad)  
   1400484f1:	xchg   esp,eax
   1400484f2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400484fd:	add    BYTE PTR [rax],al
   1400484ff:	add    BYTE PTR [rsi],ch
   140048501:	(bad)  
   140048502:	push   r14
   140048504:	rex.XB
   140048505:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140048507:	ins    DWORD PTR es:[rdi],dx
   140048508:	rex.XB je 0x140048577
   14004850b:	push   rdi
   14004850c:	jb     0x14004856f
   14004850e:	jo     0x140048580
   140048510:	gs jb  0x140048553
   140048513:	add    BYTE PTR [rax],al
   140048516:	add    BYTE PTR [rax],al
   140048518:	(bad)  
   140048519:	xchg   esp,eax
   14004851a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048525:	add    BYTE PTR [rax],al
   140048527:	add    BYTE PTR [rsi],ch
   140048529:	(bad)  
   14004852a:	push   r14
   14004852c:	rex.XB
   14004852d:	rex.XB outs dx,DWORD PTR ds:[rsi]
   14004852f:	ins    DWORD PTR es:[rdi],dx
   140048530:	ins    DWORD PTR es:[rdi],dx
   140048531:	rex.R ins BYTE PTR es:[rdi],dx
   140048533:	addr32 push rdi
   140048535:	jb     0x140048598
   140048537:	jo     0x1400485a9
   140048539:	gs jb  0x14004857c
   14004853c:	add    BYTE PTR [rax],al
   14004853f:	add    BYTE PTR [rax-0x6c],ah
   140048542:	add    eax,DWORD PTR [rax+0x1]
	...
   14004854d:	add    BYTE PTR [rax],al
   14004854f:	add    BYTE PTR [rsi],ch
   140048551:	(bad)  
   140048552:	push   r14
   140048554:	rex.XB push r11
   140048556:	push   0x576c6c65
   14004855b:	jb     0x1400485be
   14004855d:	jo     0x1400485cf
   14004855f:	gs jb  0x1400485a2
   140048562:	add    BYTE PTR [rax],al
   140048565:	add    BYTE PTR [rax],al
   140048567:	add    BYTE PTR [rax-0x6c],ah
   14004856a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048575:	add    BYTE PTR [rax],al
   140048577:	add    BYTE PTR [rsi],ch
   140048579:	(bad)  
   14004857a:	push   r14
   14004857c:	pop    rdi
   14004857d:	rex.B
   14004857e:	rex.RX pop rax
   140048580:	pop    rdi
   140048581:	rex.X
   140048582:	push   r11
   140048584:	rex.RB pop r15
   140048586:	rex.WRB
   140048587:	rex.WRXB
   140048588:	rex.R push rbp
   14004858a:	rex.WR
   14004858b:	rex.RB pop r15
   14004858d:	push   rbx
   14004858e:	push   rsp
   14004858f:	push   r12
   140048591:	rex.RB
   140048592:	rex
   140048593:	add    BYTE PTR [rax],al
   140048596:	add    BYTE PTR [rax],al
   140048598:	(bad)  
   140048599:	xchg   esp,eax
   14004859a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400485a5:	add    BYTE PTR [rax],al
   1400485a7:	add    BYTE PTR [rsi],ch
   1400485a9:	(bad)  
   1400485aa:	push   r14
   1400485ac:	rex.XB
   1400485ad:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400485af:	gs rex.RB js 0x140048616
   1400485b3:	gs jo  0x14004862a
   1400485b6:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   1400485bd:	add    BYTE PTR [rax],al
   1400485bf:	add    BYTE PTR [rax-0x6c],ah
   1400485c2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400485cd:	add    BYTE PTR [rax],al
   1400485cf:	add    BYTE PTR [rsi],ch
   1400485d1:	push   rax
   1400485d2:	rex.RB
   1400485d3:	push   r14
   1400485d5:	rex.XB
   1400485d6:	rex.WRXB ins BYTE PTR es:[rdi],dx
   1400485d8:	gs rex.RB js 0x14004863f
   1400485dc:	gs jo  0x140048653
   1400485df:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   1400485e6:	add    BYTE PTR [rax],al
   1400485e8:	(bad)  
   1400485e9:	xchg   esp,eax
   1400485ea:	add    eax,DWORD PTR [rax+0x1]
	...
   1400485f5:	add    BYTE PTR [rax],al
   1400485f7:	add    BYTE PTR [rsi],ch
   1400485f9:	(bad)  
   1400485fa:	push   r14
   1400485fc:	rex.XB
   1400485fd:	rex.WRB (bad) 
   1400485ff:	jo     0x140048651
   140048601:	je     0x140048675
   140048603:	push   rsp
   140048604:	outs   dx,DWORD PTR ds:[rsi]
   140048605:	push   rax
   140048606:	je     0x14004867a
   140048608:	rex
   140048609:	add    BYTE PTR [rax],al
   14004860c:	add    BYTE PTR [rax],al
   14004860e:	add    BYTE PTR [rax],al
   140048610:	(bad)  
   140048611:	xchg   esp,eax
   140048612:	add    eax,DWORD PTR [rax+0x1]
	...
   14004861d:	add    BYTE PTR [rax],al
   14004861f:	add    BYTE PTR [rsi],ch
   140048621:	(bad)  
   140048622:	push   r14
   140048624:	rex.XB
   140048625:	rex.B
   140048626:	data16 js 0x14004867c
   140048629:	je     0x14004869d
   14004862b:	imul   ebp,DWORD PTR [rsi+0x67],0x4072674d
   140048632:	add    BYTE PTR [rax],al
   140048635:	add    BYTE PTR [rax],al
   140048637:	add    BYTE PTR [rax-0x6c],ah
   14004863a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048645:	add    BYTE PTR [rax],al
   140048647:	add    BYTE PTR [rsi],ch
   140048649:	(bad)  
   14004864a:	push   r13
   14004864c:	rex.WB
   14004864d:	rex.B je 0x1400486bc
   140048650:	push   rbx
   140048651:	je     0x1400486c5
   140048653:	imul   ebp,DWORD PTR [rsi+0x67],0x4072674d
   14004865a:	push   r12
   14004865c:	rex.WR
   14004865d:	rex
   14004865e:	add    BYTE PTR [rax],bpl
   140048661:	jo     0x140048666
   140048663:	rex add DWORD PTR [rax],eax
   140048666:	add    BYTE PTR [rax],al
   140048668:	(bad)  
   140048669:	xchg   BYTE PTR [rax+rax*2],al
   14004866c:	add    DWORD PTR [rax],eax
	...
   140048676:	add    BYTE PTR [rax],al
   140048678:	add    al,BYTE PTR [rax]
	...
   140048686:	add    BYTE PTR [rax],al
   140048688:	(bad)  
   140048689:	xchg   esp,eax
   14004868a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048695:	add    BYTE PTR [rax],al
   140048697:	add    BYTE PTR [rsi],ch
   140048699:	(bad)  
   14004869a:	push   r14
   14004869c:	rex.XB
   14004869d:	rex.XB ins DWORD PTR es:[rdi],dx
   14004869f:	fs push rsp
   1400486a1:	(bad)  
   1400486a2:	jb     0x14004870b
   1400486a4:	gs je  0x1400486e7
   1400486a7:	add    BYTE PTR [rax],al
   1400486aa:	add    BYTE PTR [rax],al
   1400486ac:	add    BYTE PTR [rax],al
   1400486ae:	add    BYTE PTR [rax],al
   1400486b0:	(bad)  
   1400486b1:	xchg   esp,eax
   1400486b2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400486bd:	add    BYTE PTR [rax],al
   1400486bf:	add    BYTE PTR [rsi],ch
   1400486c1:	(bad)  
   1400486c2:	push   r13
   1400486c4:	rex.WB push r13
   1400486c6:	outs   dx,BYTE PTR ds:[rsi]
   1400486c7:	imul   ebp,DWORD PTR [rsi+0x6f],0x77
   1400486cb:	outs   dx,BYTE PTR ds:[rsi]
   1400486cc:	rex
   1400486cd:	add    BYTE PTR [rax],al
   1400486d0:	(bad)  
   1400486d1:	xchg   esp,eax
   1400486d2:	add    eax,DWORD PTR [rax+0x1]
	...
   1400486dd:	add    BYTE PTR [rax],al
   1400486df:	add    BYTE PTR [rsi],ch
   1400486e1:	push   rax
   1400486e2:	rex.RB
   1400486e3:	push   r14
   1400486e5:	rex.XB
   1400486e6:	rex.B jb 0x14004874c
   1400486e9:	push   0x45657669
   1400486ee:	js     0x140048753
   1400486f0:	gs jo  0x140048767
   1400486f3:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   1400486fa:	add    BYTE PTR [rax],al
   1400486fc:	add    BYTE PTR [rax],al
   1400486fe:	add    BYTE PTR [rax],al
   140048700:	(bad)  
   140048701:	xchg   esp,eax
   140048702:	add    eax,DWORD PTR [rax+0x1]
	...
   14004870d:	add    BYTE PTR [rax],al
   14004870f:	add    BYTE PTR [rsi],ch
   140048711:	(bad)  
   140048712:	push   r14
   140048714:	rex.XB
   140048715:	rex.B jb 0x14004877b
   140048718:	push   0x45657669
   14004871d:	js     0x140048782
   14004871f:	gs jo  0x140048796
   140048722:	imul   ebp,DWORD PTR [rdi+0x6e],0xff004040
   140048729:	(bad)  
   14004872a:	(bad)  
   14004872b:	(bad)  
   14004872c:	(bad)  
   14004872d:	(bad)  
   14004872e:	(bad)  
   14004872f:	(bad)  
   140048730:	(bad)  
   140048731:	(bad)  
   140048732:	(bad)  
   140048733:	inc    DWORD PTR [rax]
   140048735:	add    BYTE PTR [rax],al
   140048737:	add    BYTE PTR [rax-0x6c],ah
   14004873a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048745:	add    BYTE PTR [rax],al
   140048747:	add    BYTE PTR [rsi],ch
   140048749:	(bad)  
   14004874a:	push   r14
   14004874c:	rex.XB
   14004874d:	rex.XB ins DWORD PTR es:[rdi],dx
   14004874f:	fs push rbp
   140048751:	rex.WB
   140048752:	rex
   140048753:	add    BYTE PTR [rax],al
   140048756:	add    BYTE PTR [rax],al
   140048758:	(bad)  
   140048759:	xchg   esp,eax
   14004875a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048765:	add    BYTE PTR [rax],al
   140048767:	add    BYTE PTR [rsi],ch
   140048769:	(bad)  
   14004876a:	push   r14
   14004876c:	rex.XB
   14004876d:	rex.W (bad) 
   14004876f:	outs   dx,BYTE PTR ds:[rsi]
   140048770:	fs ins BYTE PTR es:[rdi],dx
   140048772:	gs rex.WRB (bad) 
   140048775:	jo     0x1400487b7
   140048777:	add    BYTE PTR [rax],al
   14004877a:	add    BYTE PTR [rax],al
   14004877c:	add    BYTE PTR [rax],al
   14004877e:	add    BYTE PTR [rax],al
   140048780:	lock jne 0x140048786
   140048783:	rex add DWORD PTR [rax],eax
   140048786:	add    BYTE PTR [rax],al
   140048788:	or     BYTE PTR [rsi+0x3],dh
   14004878b:	rex add DWORD PTR [rax],eax
   14004878e:	add    BYTE PTR [rax],al
   140048790:	sub    BYTE PTR [rsi+0x3],dh
   140048793:	rex add DWORD PTR [rax],eax
   140048796:	add    BYTE PTR [rax],al
   140048798:	rex jbe 0x14004879e
   14004879b:	rex add DWORD PTR [rax],eax
   14004879e:	add    BYTE PTR [rax],al
   1400487a0:	push   rax
   1400487a1:	jbe    0x1400487a6
   1400487a3:	rex add DWORD PTR [rax],eax
   1400487a6:	add    BYTE PTR [rax],al
   1400487a8:	push   0x1400376
   1400487ad:	add    BYTE PTR [rax],al
   1400487af:	add    BYTE PTR [rax+0x1400376],cl
   1400487b5:	add    BYTE PTR [rax],al
   1400487b7:	add    BYTE PTR [rax+0x1400376],bl
   1400487bd:	add    BYTE PTR [rax],al
   1400487bf:	add    BYTE PTR [rax+0x1400376],dh
   1400487c5:	add    BYTE PTR [rax],al
   1400487c7:	add    al,al
   1400487c9:	jbe    0x1400487ce
   1400487cb:	rex add DWORD PTR [rax],eax
   1400487ce:	add    BYTE PTR [rax],al
   1400487d0:	loopne 0x140048848
   1400487d2:	add    eax,DWORD PTR [rax+0x1]
   1400487d5:	add    BYTE PTR [rax],al
   1400487d7:	add    BYTE PTR [rax],cl
   1400487d9:	ja     0x1400487de
   1400487db:	rex add DWORD PTR [rax],eax
   1400487de:	add    BYTE PTR [rax],al
   1400487e0:	and    BYTE PTR [rdi+0x3],dh
   1400487e3:	rex add DWORD PTR [rax],eax
   1400487e6:	add    BYTE PTR [rax],al
   1400487e8:	rex ja 0x1400487ee
   1400487eb:	rex add DWORD PTR [rax],eax
   1400487ee:	add    BYTE PTR [rax],al
   1400487f0:	push   0x1400377
   1400487f5:	add    BYTE PTR [rax],al
   1400487f7:	add    BYTE PTR [rax+0x1400377],al
   1400487fd:	add    BYTE PTR [rax],al
   1400487ff:	add    BYTE PTR [rax+0x1400377],bl
   140048805:	add    BYTE PTR [rax],al
   140048807:	add    BYTE PTR [rax+0x1400377],dh
   14004880d:	add    BYTE PTR [rax],al
   14004880f:	add    al,cl
   140048811:	ja     0x140048816
   140048813:	rex add DWORD PTR [rax],eax
	...
   14004881e:	add    BYTE PTR [rax],al
   140048820:	js     0x14004880e
   140048822:	(bad)  
   140048823:	push   QWORD PTR [rdi-0x14]
   140048826:	(bad)  
   140048827:	push   QWORD PTR [rsi-0x14]
   14004882a:	(bad)  
   14004882b:	push   QWORD PTR [rbp-0x14]
   14004882e:	(bad)  
   14004882f:	push   QWORD PTR [rsp+rbp*8-0x1]
   140048833:	push   QWORD PTR [rbx-0x14]
   140048836:	(bad)  
   140048837:	push   QWORD PTR [rdx-0x14]
   14004883a:	(bad)  
   14004883b:	push   QWORD PTR [rcx-0x14]
   14004883e:	(bad)  
   14004883f:	push   QWORD PTR [rax-0x14]
   140048842:	(bad)  
   140048843:	jmp    FWORD PTR [rdi-0x14]
   140048846:	(bad)  
   140048847:	jmp    FWORD PTR [rsi-0x14]
   14004884a:	(bad)  
   14004884b:	jmp    FWORD PTR [rbp-0x14]
   14004884e:	(bad)  
   14004884f:	jmp    FWORD PTR [rsp+rbp*8-0x1]
   140048853:	jmp    FWORD PTR [rbx-0x14]
   140048856:	(bad)  
   140048857:	jmp    FWORD PTR [rdx-0x14]
   14004885a:	(bad)  
   14004885b:	jmp    FWORD PTR [rcx-0x14]
   14004885e:	(bad)  
   14004885f:	jmp    FWORD PTR [rax-0x14]
   140048862:	(bad)  
   140048863:	jmp    QWORD PTR [rdi-0x14]
   140048866:	(bad)  
   140048867:	jmp    QWORD PTR [rsi-0x14]
   14004886a:	(bad)  
   14004886b:	inc    DWORD PTR [rax]
   14004886d:	add    BYTE PTR [rax],al
   14004886f:	add    BYTE PTR [rax-0x6c],ah
   140048872:	add    eax,DWORD PTR [rax+0x1]
	...
   14004887d:	add    BYTE PTR [rax],al
   14004887f:	add    BYTE PTR [rsi],ch
   140048881:	(bad)  
   140048882:	push   r14
   140048884:	pop    rax
   140048885:	movsxd esp,DWORD PTR [r11+0x65]
   140048889:	jae    0x1400488fe
   14004888b:	imul   esp,DWORD PTR [rdx+0x6c],0x57434065
   140048892:	outs   dx,BYTE PTR ds:[rsi]
   140048893:	fs rex
   140048895:	add    BYTE PTR [rax],al
   140048898:	(bad)  
   140048899:	xchg   esp,eax
   14004889a:	add    eax,DWORD PTR [rax+0x1]
	...
   1400488a5:	add    BYTE PTR [rax],al
   1400488a7:	add    BYTE PTR [rsi],ch
   1400488a9:	(bad)  
   1400488aa:	push   r14
   1400488ac:	pop    rax
   1400488ad:	movsxd esp,DWORD PTR [r11+0x65]
   1400488b1:	jae    0x140048926
   1400488b3:	imul   esp,DWORD PTR [rdx+0x6c],0x72655365
   1400488ba:	jbe    0x140048921
   1400488bc:	jb     0x1400488fe
   1400488be:	rex.XB push r15
   1400488c0:	outs   dx,BYTE PTR ds:[rsi]
   1400488c1:	fs rex
   1400488c3:	add    BYTE PTR [rax],al
   1400488c6:	add    BYTE PTR [rax],al
   1400488c8:	(bad)  
   1400488c9:	xchg   esp,eax
   1400488ca:	add    eax,DWORD PTR [rax+0x1]
	...
   1400488d5:	add    BYTE PTR [rax],al
   1400488d7:	add    BYTE PTR [rsi],ch
   1400488d9:	(bad)  
   1400488da:	push   r14
   1400488dc:	rex.XB push r15
   1400488de:	outs   dx,BYTE PTR ds:[rsi]
   1400488df:	fs rex
   1400488e1:	add    BYTE PTR [rax],al
   1400488e4:	add    BYTE PTR [rax],al
   1400488e6:	add    BYTE PTR [rax],al
   1400488e8:	(bad)  
   1400488e9:	xchg   esp,eax
   1400488ea:	add    eax,DWORD PTR [rax+0x1]
	...
   1400488f5:	add    BYTE PTR [rax],al
   1400488f7:	add    BYTE PTR [rsi],ch
   1400488f9:	(bad)  
   1400488fa:	push   r14
   1400488fc:	pop    rdi
   1400488fd:	rex.B
   1400488fe:	rex.RX pop rax
   140048900:	pop    rdi
   140048901:	rex.W push rsp
   140048903:	rex.WRB
   140048904:	rex.WR
   140048905:	rex.W
   140048906:	rex.RB
   140048907:	rex.WR push rax
   140048909:	pop    rdi
   14004890a:	push   rbx
   14004890b:	push   rsp
   14004890c:	push   r12
   14004890e:	rex.RB
   14004890f:	rex
   140048910:	add    BYTE PTR [rax],al
   140048913:	add    BYTE PTR [rax],al
   140048915:	add    BYTE PTR [rax],al
   140048917:	add    BYTE PTR [rax-0x6c],ah
   14004891a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048925:	add    BYTE PTR [rax],al
   140048927:	add    BYTE PTR [rsi],ch
   140048929:	(bad)  
   14004892a:	push   r14
   14004892c:	rex.XB push r12
   14004892e:	gs jae 0x1400489a5
   140048931:	rex.XB ins DWORD PTR es:[rdi],dx
   140048933:	fs push rbp
   140048935:	rex.WB
   140048936:	rex
   140048937:	add    BYTE PTR [rax],al
   14004893a:	add    BYTE PTR [rax],al
   14004893c:	add    BYTE PTR [rax],al
   14004893e:	add    BYTE PTR [rax],al
   140048940:	(bad)  
   140048941:	xchg   esp,eax
   140048942:	add    eax,DWORD PTR [rax+0x1]
	...
   14004894d:	add    BYTE PTR [rax],al
   14004894f:	add    BYTE PTR [rsi],ch
   140048951:	(bad)  
   140048952:	push   r14
   140048954:	(bad)  
   140048955:	and    al,0x49
   140048957:	movsxd esp,DWORD PTR [r11+0x65]
   14004895b:	jae    0x1400489d0
   14004895d:	imul   esp,DWORD PTR [rdx+0x6c],0x6f725065
   140048964:	js     0x1400489df
   140048966:	rex.WB ins DWORD PTR es:[rdi],dx
   140048968:	jo     0x1400489d6
   14004896a:	rex push rsi
   14004896c:	rex.XB
   14004896d:	movsxd esp,DWORD PTR [r11+0x65]
   140048971:	jae    0x1400489e6
   140048973:	imul   esp,DWORD PTR [rdx+0x6c],0x6f725065
   14004897a:	js     0x1400489f5
   14004897c:	rex
   14004897d:	push   r12
   14004897f:	rex.WR
   140048980:	rex
   140048981:	rex
   140048982:	rex
   140048983:	push   r12
   140048985:	rex.WR
   140048986:	rex
   140048987:	add    BYTE PTR [rax],al
   14004898a:	add    BYTE PTR [rax],al
   14004898c:	add    BYTE PTR [rax],al
   14004898e:	add    BYTE PTR [rax],al
   140048990:	(bad)  
   140048991:	xchg   esp,eax
   140048992:	add    eax,DWORD PTR [rax+0x1]
	...
   14004899d:	add    BYTE PTR [rax],al
   14004899f:	add    BYTE PTR [rsi],ch
   1400489a1:	(bad)  
   1400489a2:	push   r13
   1400489a4:	rex.WB
   1400489a5:	movsxd esp,DWORD PTR [r11+0x65]
   1400489a9:	jae    0x140048a1e
   1400489ab:	imul   esp,DWORD PTR [rdx+0x6c],0x404065
   1400489b2:	add    BYTE PTR [rax],al
   1400489b4:	add    BYTE PTR [rax],al
   1400489b6:	add    BYTE PTR [rax],al
   1400489b8:	(bad)  
   1400489b9:	xchg   esp,eax
   1400489ba:	add    eax,DWORD PTR [rax+0x1]
	...
   1400489c5:	add    BYTE PTR [rax],al
   1400489c7:	add    BYTE PTR [rsi],ch
   1400489c9:	(bad)  
   1400489ca:	push   r13
   1400489cc:	rex.WB
   1400489cd:	imul   r14d,DWORD PTR [rbx+0x70],0x68637461
   1400489d5:	rex
   1400489d6:	add    BYTE PTR [rax-0x6c],spl
   1400489da:	add    eax,DWORD PTR [rax+0x1]
	...
   1400489e5:	add    BYTE PTR [rax],al
   1400489e7:	add    BYTE PTR [rsi],ch
   1400489e9:	(bad)  
   1400489ea:	push   r13
   1400489ec:	rex.WB
   1400489ed:	movsxd esp,DWORD PTR [r11+0x65]
   1400489f1:	jae    0x140048a66
   1400489f3:	imul   esp,DWORD PTR [rdx+0x6c],0x6f725065
   1400489fa:	js     0x140048a75
   1400489fc:	rex
   1400489fd:	add    BYTE PTR [rax],al
   140048a00:	(bad)  
   140048a01:	xchg   esp,eax
   140048a02:	add    eax,DWORD PTR [rax+0x1]
	...
   140048a0d:	add    BYTE PTR [rax],al
   140048a0f:	add    BYTE PTR [rsi],ch
   140048a11:	(bad)  
   140048a12:	push   r14
   140048a14:	(bad)  
   140048a15:	and    al,0x43
   140048a17:	rex.WRB
   140048a18:	rex.RX
   140048a19:	rex.XB
   140048a1a:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140048a1c:	ins    DWORD PTR es:[rdi],dx
   140048a1d:	rex.WRXB (bad) 
   140048a1f:	push   0x65
   140048a21:	movsxd esi,DWORD PTR [rax+rax*2+0x56]
   140048a25:	rex.XB
   140048a26:	movsxd esp,DWORD PTR [r11+0x65]
   140048a2a:	jae    0x140048a9f
   140048a2c:	imul   esp,DWORD PTR [rdx+0x6c],0x6f725065
   140048a33:	js     0x140048aae
   140048a35:	rex
   140048a36:	push   r12
   140048a38:	rex.WR
   140048a39:	rex
   140048a3a:	rex
   140048a3b:	rex
   140048a3c:	add    BYTE PTR [rax],al
   140048a3f:	add    BYTE PTR [rax-0x6c],ah
   140048a42:	add    eax,DWORD PTR [rax+0x1]
	...
   140048a4d:	add    BYTE PTR [rax],al
   140048a4f:	add    BYTE PTR [rsi],ch
   140048a51:	(bad)  
   140048a52:	push   r14
   140048a54:	rex.XB
   140048a55:	movsxd esp,DWORD PTR [r11+0x65]
   140048a59:	jae    0x140048ace
   140048a5b:	imul   esp,DWORD PTR [rdx+0x6c],0x6f725065
   140048a62:	js     0x140048add
   140048a64:	rex
   140048a65:	push   r12
   140048a67:	rex.WR
   140048a68:	rex
   140048a69:	add    BYTE PTR [rax],al
   140048a6c:	add    BYTE PTR [rax],al
   140048a6e:	add    BYTE PTR [rax],al
   140048a70:	(bad)  
   140048a71:	xchg   esp,eax
   140048a72:	add    eax,DWORD PTR [rax+0x1]
	...
   140048a7d:	add    BYTE PTR [rax],al
   140048a7f:	add    BYTE PTR [rsi],ch
   140048a81:	(bad)  
   140048a82:	push   r14
   140048a84:	(bad)  
   140048a85:	and    al,0x43
   140048a87:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140048a89:	ins    DWORD PTR es:[rdi],dx
   140048a8a:	rex.WRXB (bad) 
   140048a8c:	push   0x65
   140048a8e:	movsxd esi,DWORD PTR [rdx+rdx*2+0x6f]
   140048a92:	outs   dx,DWORD PTR ds:[rsi]
   140048a93:	je     0x140048ada
   140048a95:	js     0x140048ad7
   140048a97:	push   rsi
   140048a98:	rex.XB
   140048a99:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140048a9b:	ins    DWORD PTR es:[rdi],dx
   140048a9c:	push   rbx
   140048a9d:	imul   ebp,DWORD PTR [rsi+0x67],0x6854656c
   140048aa4:	jb     0x140048b0b
   140048aa6:	(bad)  
   140048aa7:	rex.WRB outs dx,DWORD PTR fs:[rsi]
   140048aaa:	fs gs ins BYTE PTR es:[rdi],dx
   140048aad:	rex
   140048aae:	push   r12
   140048ab0:	rex.WR
   140048ab1:	rex
   140048ab2:	rex
   140048ab3:	rex
   140048ab4:	push   r12
   140048ab6:	rex.WR
   140048ab7:	rex
   140048ab8:	add    BYTE PTR [rax],al
   140048abb:	add    BYTE PTR [rax],al
   140048abd:	add    BYTE PTR [rax],al
   140048abf:	add    BYTE PTR [rax-0x6c],ah
   140048ac2:	add    eax,DWORD PTR [rax+0x1]
	...
   140048acd:	add    BYTE PTR [rax],al
   140048acf:	add    BYTE PTR [rsi],ch
   140048ad1:	(bad)  
   140048ad2:	push   r14
   140048ad4:	rex.XB
   140048ad5:	rex.XB outs dx,DWORD PTR ds:[rsi]
   140048ad7:	ins    DWORD PTR es:[rdi],dx
   140048ad8:	rex.WRXB (bad) 
   140048ada:	push   0x65
   140048adc:	movsxd esi,DWORD PTR [rdx+rdx*2+0x6f]
   140048ae0:	outs   dx,DWORD PTR ds:[rsi]
   140048ae1:	je     0x140048b25
   140048ae3:	(bad)  
   140048ae4:	jae    0x140048b4b
   140048ae6:	rex
   140048ae7:	push   r12
   140048ae9:	rex.WR
   140048aea:	rex
   140048aeb:	add    BYTE PTR [rax],al
   140048aee:	add    BYTE PTR [rax],al
   140048af0:	(bad)  
   140048af1:	xchg   esp,eax
   140048af2:	add    eax,DWORD PTR [rax+0x1]
	...
   140048afd:	add    BYTE PTR [rax],al
   140048aff:	add    BYTE PTR [rsi],ch
   140048b01:	(bad)  
   140048b02:	push   r13
   140048b04:	rex.WB
   140048b05:	rex.WRXB ins BYTE PTR es:[rdi],dx
   140048b07:	gs push rdi
   140048b09:	imul   ebp,DWORD PTR [rsi+0x64],0x4040776f
	...
   140048b18:	rex.B jo 0x140048b7c
   140048b1b:	jb     0x140048b91
   140048b1d:	ins    DWORD PTR es:[rdi],dx
   140048b1e:	outs   dx,BYTE PTR gs:[rsi]
   140048b20:	je     0x140048b22
   140048b22:	add    BYTE PTR [rax],al
   140048b24:	rex.X outs dx,DWORD PTR ds:[rsi]
   140048b26:	je     0x140048b90
   140048b28:	add    BYTE PTR [rax],al
   140048b2a:	add    BYTE PTR [rax],al
   140048b2c:	rex.RX jb 0x140048b94
   140048b2f:	add    BYTE PTR gs:[rax],al
   140048b32:	add    BYTE PTR [rax],al
   140048b34:	add    BYTE PTR [rax],al
   140048b36:	add    BYTE PTR [rax],al
   140048b38:	movabs al,ds:0x280000000140038e
   140048b41:	add    BYTE PTR [rax],al
   140048b43:	add    BYTE PTR [rax],al
   140048b45:	add    BYTE PTR [rax],al
   140048b47:	add    al,bh
   140048b49:	sbb    eax,0x14001
   140048b4e:	add    BYTE PTR [rax],al
   140048b50:	loopne 0x140048bbb
   140048b52:	add    eax,DWORD PTR [rax+0x1]
	...
   140048b5d:	add    BYTE PTR [rax],al
   140048b5f:	add    BYTE PTR [rax-0x1d],bl
   140048b62:	add    al,0x40
   140048b64:	add    DWORD PTR [rax],eax
   140048b66:	add    BYTE PTR [rax],al
   140048b68:	(bad)  
   140048b69:	xchg   esp,eax
   140048b6a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048b75:	add    BYTE PTR [rax],al
   140048b77:	add    BYTE PTR [rsi],ch
   140048b79:	(bad)  
   140048b7a:	push   r14
   140048b7c:	rex.XB
   140048b7d:	rex.X jns 0x140048bf4
   140048b80:	gs rex.B jb 0x140048bf6
   140048b84:	(bad)  
   140048b85:	jns    0x140048bc7
   140048b87:	add    BYTE PTR [rax],al
   140048b8a:	add    BYTE PTR [rax],al
   140048b8c:	add    BYTE PTR [rax],al
   140048b8e:	add    BYTE PTR [rax],al
   140048b90:	(bad)  
   140048b91:	xchg   esp,eax
   140048b92:	add    eax,DWORD PTR [rax+0x1]
	...
   140048b9d:	add    BYTE PTR [rax],al
   140048b9f:	add    BYTE PTR [rsi],ch
   140048ba1:	(bad)  
   140048ba2:	push   r14
   140048ba4:	rex.XB
   140048ba5:	rex.RXB
   140048ba6:	imul   ecx,DWORD PTR fs:[rdi+0x62],0x7463656a
   140048bae:	rex
   140048baf:	add    BYTE PTR [rax],al
   140048bb2:	add    BYTE PTR [rax],al
   140048bb4:	add    BYTE PTR [rax],al
   140048bb6:	add    BYTE PTR [rax],al
   140048bb8:	(bad)  
   140048bb9:	xchg   esp,eax
   140048bba:	add    eax,DWORD PTR [rax+0x1]
	...
   140048bc5:	add    BYTE PTR [rax],al
   140048bc7:	add    BYTE PTR [rsi],ch
   140048bc9:	(bad)  
   140048bca:	push   r14
   140048bcc:	rex.XB
   140048bcd:	rex.WRB
   140048bce:	outs   dx,BYTE PTR gs:[rsi]
   140048bd0:	jne    0x140048c12
   140048bd2:	add    BYTE PTR [rax],al
   140048bd5:	add    BYTE PTR [rax],al
   140048bd7:	add    BYTE PTR [rax-0x6c],ah
   140048bda:	add    eax,DWORD PTR [rax+0x1]
	...
   140048be5:	add    BYTE PTR [rax],al
   140048be7:	add    BYTE PTR [rsi],ch
   140048be9:	(bad)  
   140048bea:	push   r14
   140048bec:	rex.XB push r10
   140048bee:	gs jae 0x140048c60
   140048bf1:	jne    0x140048c65
   140048bf3:	movsxd esp,DWORD PTR [rbp+0x45]
   140048bf6:	js     0x140048c5b
   140048bf8:	gs jo  0x140048c6f
   140048bfb:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   140048c02:	add    BYTE PTR [rax],al
   140048c04:	add    BYTE PTR [rax],al
   140048c06:	add    BYTE PTR [rax],al
   140048c08:	(bad)  
   140048c09:	xchg   esp,eax
   140048c0a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048c15:	add    BYTE PTR [rax],al
   140048c17:	add    BYTE PTR [rsi],ch
   140048c19:	(bad)  
   140048c1a:	push   r14
   140048c1c:	rex.XB push r13
   140048c1e:	jae    0x140048c85
   140048c20:	jb     0x140048c67
   140048c22:	js     0x140048c87
   140048c24:	gs jo  0x140048c9b
   140048c27:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   140048c2e:	add    BYTE PTR [rax],al
   140048c30:	(bad)  
   140048c31:	xchg   esp,eax
   140048c32:	add    eax,DWORD PTR [rax+0x1]
	...
   140048c3d:	add    BYTE PTR [rax],al
   140048c3f:	add    BYTE PTR [rsi],ch
   140048c41:	(bad)  
   140048c42:	push   r14
   140048c44:	rex.XB
   140048c45:	rex.R
   140048c46:	rex.XB
   140048c47:	rex
   140048c48:	add    BYTE PTR [rax],al
   140048c4b:	add    BYTE PTR [rcx],al
   140048c4d:	add    BYTE PTR [rax],al
   140048c4f:	add    BYTE PTR [rax-0x6c],ah
   140048c52:	add    eax,DWORD PTR [rax+0x1]
	...
   140048c5d:	add    BYTE PTR [rax],al
   140048c5f:	add    BYTE PTR [rsi],ch
   140048c61:	(bad)  
   140048c62:	push   r14
   140048c64:	(bad)  
   140048c65:	and    al,0x43
   140048c67:	rex.B jb 0x140048cdc
   140048c6a:	(bad)  
   140048c6b:	jns    0x140048cad
   140048c6d:	push   rdi
   140048c6e:	xor    al,0x4c
   140048c70:	outs   dx,DWORD PTR ds:[rsi]
   140048c71:	(bad)  
   140048c72:	fs rex.B jb 0x140048ce8
   140048c76:	(bad)  
   140048c77:	jns    0x140048cc8
   140048c79:	(bad)  
   140048c7a:	push   0x54
   140048c7c:	jns    0x140048cee
   140048c7e:	gs rex
   140048c80:	rex.XB
   140048c81:	rex.B jb 0x140048ce7
   140048c84:	push   0x40657669
   140048c89:	rex
   140048c8a:	rex.B
   140048c8b:	rex.RB
   140048c8c:	rex.X push rdi
   140048c8e:	xor    al,0x31
   140048c90:	xor    al,BYTE PTR [rax+0x40]
   140048c93:	add    BYTE PTR [rax],al
   140048c96:	add    BYTE PTR [rax],al
   140048c98:	(bad)  
   140048c99:	(bad)  
   140048c9a:	(bad)  
   140048c9b:	(bad)  
   140048c9c:	(bad)  
   140048c9d:	(bad)  
   140048c9e:	(bad)  
   140048c9f:	call   FWORD PTR [rdx+rbx*2-0x177523e4]
   140048ca6:	fimul  WORD PTR [rbp-0x5b]
   140048ca9:	movabs eax,ds:0xe2f3f7ae202af860
   140048cb2:	mov    ah,0xc0
   140048cb4:	and    DWORD PTR [rdx-0x4572b88d],edi
   140048cba:	xor    ebx,DWORD PTR [rsi-0x37]
   140048cbd:	rex.RX jmp 0x140048c4b
   140048cc0:	fist   DWORD PTR [rax]
   140048cc2:	xor    eax,0x2b7d7f97
   140048cc7:	mov    DWORD PTR [r13+0x74],r14d
   140048ccb:	test   al,0x58
   140048ccd:	sub    bl,dl
   140048ccf:	push   rsp
   140048cd0:	rex.X
   140048cd1:	adc    WORD PTR [rsi],si
   140048cd4:	adc    edx,edi
   140048cd6:	xchg   edi,eax
   140048cd7:	rex.WXB
   140048cd8:	fwait
   140048cd9:	xor    DWORD PTR [rsp+rax*4-0x57],0xffffffd0
   140048cde:	add    al,0x33
   140048ce0:	(bad)  
   140048ce1:	xchg   esp,eax
   140048ce2:	add    eax,DWORD PTR [rax+0x1]
	...
   140048ced:	add    BYTE PTR [rax],al
   140048cef:	add    BYTE PTR [rsi],ch
   140048cf1:	(bad)  
   140048cf2:	push   r14
   140048cf4:	rex.XB push r8
   140048cf6:	je     0x140048d6a
   140048cf8:	rex.B jb 0x140048d6d
   140048cfb:	(bad)  
   140048cfc:	jns    0x140048d3e
   140048cfe:	add    BYTE PTR [rax-0x6c],spl
   140048d02:	add    eax,DWORD PTR [rax+0x1]
	...
   140048d0d:	add    BYTE PTR [rax],al
   140048d0f:	add    BYTE PTR [rsi],ch
   140048d11:	(bad)  
   140048d12:	push   r14
   140048d14:	rex.XB
   140048d15:	rex.WRXB (bad) 
   140048d18:	jb     0x140048d8c
   140048d1a:	(bad)  
   140048d1b:	jns    0x140048d5d
   140048d1d:	add    BYTE PTR [rax],al
   140048d20:	add    BYTE PTR [rax],al
   140048d22:	add    BYTE PTR [rax-0x80000000],al
	...
   140048d30:	mov    eax,0x1400393
   140048d35:	add    BYTE PTR [rax],al
   140048d37:	add    BYTE PTR [rax],ch
   140048d39:	add    BYTE PTR [rax],al
   140048d3b:	add    BYTE PTR [rax],al
   140048d3d:	add    BYTE PTR [rax],al
   140048d3f:	add    BYTE PTR [rsp+rax*2+0x1],bl
   140048d43:	rex add DWORD PTR [rax],eax
   140048d46:	add    BYTE PTR [rax],al
   140048d48:	loopne 0x140048db3
   140048d4a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048d55:	add    BYTE PTR [rax],al
   140048d57:	add    ah,dh
   140048d59:	in     al,0x4
   140048d5b:	rex add DWORD PTR [rax],eax
   140048d5e:	add    BYTE PTR [rax],al
   140048d60:	nop
   140048d61:	xlat   BYTE PTR ds:[rbx]
   140048d62:	add    eax,DWORD PTR [rax+0x1]
   140048d65:	add    BYTE PTR [rax],al
   140048d67:	add    BYTE PTR [rax-0x6c],ah
   140048d6a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048d75:	add    BYTE PTR [rax],al
   140048d77:	add    BYTE PTR [rsi],ch
   140048d79:	(bad)  
   140048d7a:	push   r14
   140048d7c:	(bad)
   140048d81:	(bad)  
   140048d82:	jae    0x140048df8
   140048d84:	rex jae 0x140048dfb
   140048d87:	fs rex
   140048d89:	add    BYTE PTR [rax],al
   140048d8c:	add    BYTE PTR [rax],al
   140048d8e:	add    BYTE PTR [rax],al
   140048d90:	nop
   140048d91:	xlat   BYTE PTR ds:[rbx]
   140048d92:	add    eax,DWORD PTR [rax+0x1]
   140048d95:	add    BYTE PTR [rax],al
   140048d97:	add    BYTE PTR [rax-0x6c],ah
   140048d9a:	add    eax,DWORD PTR [rax+0x1]
	...
   140048da5:	add    BYTE PTR [rax],al
   140048da7:	add    BYTE PTR [rsi],ch
   140048da9:	(bad)  
   140048daa:	push   r14
   140048dac:	je     0x140048e27
   140048dae:	jo     0x140048e15
   140048db0:	pop    rdi
   140048db1:	imul   ebp,DWORD PTR [rsi+0x66],0x40406f
   140048db8:	add    DWORD PTR [rax],eax
   140048dba:	add    BYTE PTR [rax],al
   140048dbc:	add    BYTE PTR [rax],al
   140048dbe:	add    BYTE PTR [rax],al
   140048dc0:	xor    ah,BYTE PTR [rdx+0x2b992ddf]
   140048dc6:	add    BYTE PTR [rax],al
   140048dc8:	int    0x5d
   140048dca:	and    dl,dl
   140048dcc:	data16 (bad) 
   140048dce:	(bad)  
   140048dcf:	inc    DWORD PTR [rcx]
   140048dd1:	add    BYTE PTR [rax],al
   140048dd3:	add    BYTE PTR [rsi],dl
   140048dd5:	add    BYTE PTR [rax],al
   140048dd7:	add    BYTE PTR [rdx],al
   140048dd9:	add    BYTE PTR [rax],al
   140048ddb:	add    BYTE PTR [rdx],al
   140048ddd:	add    BYTE PTR [rax],al
   140048ddf:	add    BYTE PTR [rbx],al
   140048de1:	add    BYTE PTR [rax],al
   140048de3:	add    BYTE PTR [rdx],al
   140048de5:	add    BYTE PTR [rax],al
   140048de7:	add    BYTE PTR [rax+rax*1],al
   140048dea:	add    BYTE PTR [rax],al
   140048dec:	sbb    BYTE PTR [rax],al
   140048dee:	add    BYTE PTR [rax],al
   140048df0:	add    eax,0xd000000
   140048df5:	add    BYTE PTR [rax],al
   140048df7:	add    BYTE PTR [rsi],al
   140048df9:	add    BYTE PTR [rax],al
   140048dfb:	add    BYTE PTR [rcx],cl
   140048dfd:	add    BYTE PTR [rax],al
   140048dff:	add    BYTE PTR [rdi],al
   140048e01:	add    BYTE PTR [rax],al
   140048e03:	add    BYTE PTR [rax+rax*1],cl
   140048e06:	add    BYTE PTR [rax],al
   140048e08:	or     BYTE PTR [rax],al
   140048e0a:	add    BYTE PTR [rax],al
   140048e0c:	or     al,0x0
   140048e0e:	add    BYTE PTR [rax],al
   140048e10:	or     DWORD PTR [rax],eax
   140048e12:	add    BYTE PTR [rax],al
   140048e14:	or     al,0x0
   140048e16:	add    BYTE PTR [rax],al
   140048e18:	or     al,BYTE PTR [rax]
   140048e1a:	add    BYTE PTR [rax],al
   140048e1c:	(bad)  
   140048e1d:	add    BYTE PTR [rax],al
   140048e1f:	add    BYTE PTR [rbx],cl
   140048e21:	add    BYTE PTR [rax],al
   140048e23:	add    BYTE PTR [rax],cl
   140048e25:	add    BYTE PTR [rax],al
   140048e27:	add    BYTE PTR [rax+rax*1],cl
   140048e2a:	add    BYTE PTR [rax],al
   140048e2c:	(bad)  
   140048e2d:	add    BYTE PTR [rax],al
   140048e2f:	add    BYTE PTR [rip+0x16000000],cl        # 0x156048e35
   140048e35:	add    BYTE PTR [rax],al
   140048e37:	add    BYTE PTR [rdi],cl
   140048e39:	add    BYTE PTR [rax],al
   140048e3b:	add    BYTE PTR [rdx],al
   140048e3d:	add    BYTE PTR [rax],al
   140048e3f:	add    BYTE PTR [rax],dl
   140048e41:	add    BYTE PTR [rax],al
   140048e43:	add    BYTE PTR [rip+0x11000000],cl        # 0x151048e49
   140048e49:	add    BYTE PTR [rax],al
   140048e4b:	add    BYTE PTR [rdx],dl
   140048e4d:	add    BYTE PTR [rax],al
   140048e4f:	add    BYTE PTR [rdx],dl
   140048e51:	add    BYTE PTR [rax],al
   140048e53:	add    BYTE PTR [rdx],al
   140048e55:	add    BYTE PTR [rax],al
   140048e57:	add    BYTE PTR [rcx],ah
   140048e59:	add    BYTE PTR [rax],al
   140048e5b:	add    BYTE PTR [rip+0x35000000],cl        # 0x175048e61
   140048e61:	add    BYTE PTR [rax],al
   140048e63:	add    BYTE PTR [rdx],al
   140048e65:	add    BYTE PTR [rax],al
   140048e67:	add    BYTE PTR [rcx+0x0],al
   140048e6a:	add    BYTE PTR [rax],al
   140048e6c:	or     eax,0x43000000
   140048e71:	add    BYTE PTR [rax],al
   140048e73:	add    BYTE PTR [rdx],al
   140048e75:	add    BYTE PTR [rax],al
   140048e77:	add    BYTE PTR [rax+0x0],dl
   140048e7a:	add    BYTE PTR [rax],al
   140048e7c:	adc    DWORD PTR [rax],eax
   140048e7e:	add    BYTE PTR [rax],al
   140048e80:	push   rdx
   140048e81:	add    BYTE PTR [rax],al
   140048e83:	add    BYTE PTR [rip+0x53000000],cl        # 0x193048e89
   140048e89:	add    BYTE PTR [rax],al
   140048e8b:	add    BYTE PTR [rip+0x57000000],cl        # 0x197048e91
   140048e91:	add    BYTE PTR [rax],al
   140048e93:	add    BYTE PTR [rsi],dl
   140048e95:	add    BYTE PTR [rax],al
   140048e97:	add    BYTE PTR [rcx+0x0],bl
   140048e9a:	add    BYTE PTR [rax],al
   140048e9c:	or     eax,DWORD PTR [rax]
   140048e9e:	add    BYTE PTR [rax],al
   140048ea0:	ins    BYTE PTR es:[rdi],dx
   140048ea1:	add    BYTE PTR [rax],al
   140048ea3:	add    BYTE PTR [rip+0x6d000000],cl        # 0x1ad048ea9
   140048ea9:	add    BYTE PTR [rax],al
   140048eab:	add    BYTE PTR [rax],ah
   140048ead:	add    BYTE PTR [rax],al
   140048eaf:	add    BYTE PTR [rax+0x0],dh
   140048eb2:	add    BYTE PTR [rax],al
   140048eb4:	sbb    al,0x0
   140048eb6:	add    BYTE PTR [rax],al
   140048eb8:	jb     0x140048eba
   140048eba:	add    BYTE PTR [rax],al
   140048ebc:	or     DWORD PTR [rax],eax
   140048ebe:	add    BYTE PTR [rax],al
   140048ec0:	(bad)  
   140048ec1:	add    BYTE PTR [rax],al
   140048ec3:	add    BYTE PTR [rsi],dl
   140048ec5:	add    BYTE PTR [rax],al
   140048ec7:	add    BYTE PTR [rax+0xa000000],al
   140048ecd:	add    BYTE PTR [rax],al
   140048ecf:	add    BYTE PTR [rcx+0xa000000],al
   140048ed5:	add    BYTE PTR [rax],al
   140048ed7:	add    BYTE PTR [rdx+0x9000000],al
   140048edd:	add    BYTE PTR [rax],al
   140048edf:	add    BYTE PTR [rbx+0x16000000],al
   140048ee5:	add    BYTE PTR [rax],al
   140048ee7:	add    BYTE PTR [rax+rax*1+0xd0000],al
   140048eee:	add    BYTE PTR [rax],al
   140048ef0:	xchg   ecx,eax
   140048ef1:	add    BYTE PTR [rax],al
   140048ef3:	add    BYTE PTR [rcx],ch
   140048ef5:	add    BYTE PTR [rax],al
   140048ef7:	add    BYTE PTR [rsi+0xd000000],bl
   140048efd:	add    BYTE PTR [rax],al
   140048eff:	add    BYTE PTR [rcx+0x2000000],ah
   140048f05:	add    BYTE PTR [rax],al
   140048f07:	add    BYTE PTR [rax+rax*1+0xb0000],ah
   140048f0e:	add    BYTE PTR [rax],al
   140048f10:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140048f11:	add    BYTE PTR [rax],al
   140048f13:	add    BYTE PTR [rip+0xffffffffb7000000],cl        # 0xf7048f19
   140048f19:	add    BYTE PTR [rax],al
   140048f1b:	add    BYTE PTR [rcx],dl
   140048f1d:	add    BYTE PTR [rax],al
   140048f1f:	add    dh,cl
   140048f21:	add    BYTE PTR [rax],al
   140048f23:	add    BYTE PTR [rdx],al
   140048f25:	add    BYTE PTR [rax],al
   140048f27:	add    bh,dl
   140048f29:	add    BYTE PTR [rax],al
   140048f2b:	add    BYTE PTR [rbx],cl
   140048f2d:	add    BYTE PTR [rax],al
   140048f2f:	add    BYTE PTR [rax],bl
   140048f31:	(bad)  
   140048f32:	add    BYTE PTR [rax],al
   140048f34:	or     al,0x0
   140048f36:	add    BYTE PTR [rax],al
   140048f38:	or     al,0x0
   140048f3a:	add    BYTE PTR [rax],al
   140048f3c:	or     BYTE PTR [rax],al
   140048f3e:	add    BYTE PTR [rax],al
   140048f40:	jne    0x140048eda
   140048f42:	add    BYTE PTR [rax],al
   140048f44:	jae    0x140048ede
   140048f46:	add    BYTE PTR [rax],al
   140048f48:	lock jno 0x140048f4c
   140048f4b:	rex add DWORD PTR [rax],eax
   140048f4e:	add    BYTE PTR [rax],al
   140048f50:	nop
   140048f51:	xlat   BYTE PTR ds:[rbx]
   140048f52:	add    eax,DWORD PTR [rax+0x1]
	...
   140048f5d:	add    BYTE PTR [rax],al
   140048f5f:	add    bh,bh
   140048f61:	(bad)  
   140048f62:	(bad)  
   140048f63:	inc    DWORD PTR [rax]
	...
   140048fcd:	add    BYTE PTR [rax],dl
   140048fcf:	adc    BYTE PTR [rax],dl
   140048fd1:	adc    BYTE PTR [rax],dl
   140048fd3:	adc    BYTE PTR [rax],dl
   140048fd5:	adc    BYTE PTR [rax],dl
   140048fd7:	adc    BYTE PTR [rax],dl
   140048fd9:	adc    BYTE PTR [rax],dl
   140048fdb:	adc    BYTE PTR [rax],dl
   140048fdd:	adc    BYTE PTR [rax],dl
   140048fdf:	adc    BYTE PTR [rax],dl
   140048fe1:	adc    BYTE PTR [rax],dl
   140048fe3:	adc    BYTE PTR [rax],dl
   140048fe5:	adc    BYTE PTR [rax],dl
   140048fe7:	adc    BYTE PTR [rax],al
   140048fe9:	add    BYTE PTR [rax],al
   140048feb:	add    BYTE PTR [rax],al
   140048fed:	add    BYTE PTR [rax],ah
   140048fef:	and    BYTE PTR [rax],ah
   140048ff1:	and    BYTE PTR [rax],ah
   140048ff3:	and    BYTE PTR [rax],ah
   140048ff5:	and    BYTE PTR [rax],ah
   140048ff7:	and    BYTE PTR [rax],ah
   140048ff9:	and    BYTE PTR [rax],ah
   140048ffb:	and    BYTE PTR [rax],ah
   140048ffd:	and    BYTE PTR [rax],ah
   140048fff:	and    BYTE PTR [rax],ah
   140049001:	and    BYTE PTR [rax],ah
   140049003:	and    BYTE PTR [rax],ah
   140049005:	and    BYTE PTR [rax],ah
   140049007:	and    BYTE PTR [rax],al
	...
   1400490cd:	add    BYTE PTR [rcx+0x62],ah
   1400490d0:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   1400490d4:	addr32 push 0x6c6b6a69
   1400490da:	ins    DWORD PTR es:[rdi],dx
   1400490db:	outs   dx,BYTE PTR ds:[rsi]
   1400490dc:	outs   dx,DWORD PTR ds:[rsi]
   1400490dd:	jo     0x140049150
   1400490df:	jb     0x140049154
   1400490e1:	je     0x140049158
   1400490e3:	jbe    0x14004915c
   1400490e5:	js     0x140049160
   1400490e7:	jp     0x1400490e9
   1400490e9:	add    BYTE PTR [rax],al
   1400490eb:	add    BYTE PTR [rax],al
   1400490ed:	add    BYTE PTR [rcx+0x42],al
   1400490f0:	rex.XB
   1400490f1:	rex.R
   1400490f2:	rex.RB
   1400490f3:	rex.RX
   1400490f4:	rex.RXB
   1400490f5:	rex.W
   1400490f6:	rex.WB
   1400490f7:	rex.WX
   1400490f8:	rex.WXB
   1400490f9:	rex.WR
   1400490fa:	rex.WRB
   1400490fb:	rex.WRX
   1400490fc:	rex.WRXB push r8
   1400490fe:	push   rcx
   1400490ff:	push   rdx
   140049100:	push   rbx
   140049101:	push   rsp
   140049102:	push   rbp
   140049103:	push   rsi
   140049104:	push   rdi
   140049105:	pop    rax
   140049106:	pop    rcx
   140049107:	pop    rdx
	...
   1400491d0:	add    BYTE PTR [rax],al
   1400491d2:	adc    BYTE PTR [rax],dl
   1400491d4:	adc    BYTE PTR [rax],dl
   1400491d6:	adc    BYTE PTR [rax],dl
   1400491d8:	adc    BYTE PTR [rax],dl
   1400491da:	adc    BYTE PTR [rax],dl
   1400491dc:	adc    BYTE PTR [rax],dl
   1400491de:	adc    BYTE PTR [rax],dl
   1400491e0:	adc    BYTE PTR [rax],dl
   1400491e2:	adc    BYTE PTR [rax],dl
   1400491e4:	adc    BYTE PTR [rax],dl
   1400491e6:	adc    BYTE PTR [rax],dl
   1400491e8:	adc    BYTE PTR [rax],dl
   1400491ea:	adc    BYTE PTR [rax],dl
   1400491ec:	add    BYTE PTR [rax],al
   1400491ee:	add    BYTE PTR [rax],al
   1400491f0:	add    BYTE PTR [rax],al
   1400491f2:	and    BYTE PTR [rax],ah
   1400491f4:	and    BYTE PTR [rax],ah
   1400491f6:	and    BYTE PTR [rax],ah
   1400491f8:	and    BYTE PTR [rax],ah
   1400491fa:	and    BYTE PTR [rax],ah
   1400491fc:	and    BYTE PTR [rax],ah
   1400491fe:	and    BYTE PTR [rax],ah
   140049200:	and    BYTE PTR [rax],ah
   140049202:	and    BYTE PTR [rax],ah
   140049204:	and    BYTE PTR [rax],ah
   140049206:	and    BYTE PTR [rax],ah
   140049208:	and    BYTE PTR [rax],ah
   14004920a:	and    BYTE PTR [rax],ah
	...
   1400492e0:	add    BYTE PTR [rcx+0x62],ah
   1400492e3:	movsxd esp,DWORD PTR [rbp+riz*2+0x66]
   1400492e7:	addr32 push 0x6c6b6a69
   1400492ed:	ins    DWORD PTR es:[rdi],dx
   1400492ee:	outs   dx,BYTE PTR ds:[rsi]
   1400492ef:	outs   dx,DWORD PTR ds:[rsi]
   1400492f0:	jo     0x140049363
   1400492f2:	jb     0x140049367
   1400492f4:	je     0x14004936b
   1400492f6:	jbe    0x14004936f
   1400492f8:	js     0x140049373
   1400492fa:	jp     0x1400492fc
   1400492fc:	add    BYTE PTR [rax],al
   1400492fe:	add    BYTE PTR [rax],al
   140049300:	add    BYTE PTR [rcx+0x42],al
   140049303:	rex.XB
   140049304:	rex.R
   140049305:	rex.RB
   140049306:	rex.RX
   140049307:	rex.RXB
   140049308:	rex.W
   140049309:	rex.WB
   14004930a:	rex.WX
   14004930b:	rex.WXB
   14004930c:	rex.WR
   14004930d:	rex.WRB
   14004930e:	rex.WRX
   14004930f:	rex.WRXB push r8
   140049311:	push   rcx
   140049312:	push   rdx
   140049313:	push   rbx
   140049314:	push   rsp
   140049315:	push   rbp
   140049316:	push   rsi
   140049317:	push   rdi
   140049318:	pop    rax
   140049319:	pop    rcx
   14004931a:	pop    rdx
	...
   14004939f:	add    BYTE PTR [rax-0x71],dh
   1400493a2:	add    al,0x40
   1400493a4:	add    DWORD PTR [rax],eax
   1400493a6:	add    BYTE PTR [rax],al
   1400493a8:	add    DWORD PTR [rdx],eax
   1400493aa:	add    al,0x8
   1400493ac:	add    BYTE PTR [rax],al
   1400493ae:	add    BYTE PTR [rax],al
   1400493b0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400493b1:	add    eax,DWORD PTR [rax]
   1400493b3:	add    BYTE PTR [rax-0x7e],ah
   1400493b6:	jns    0x14004933a
   1400493b8:	and    DWORD PTR [rax],eax
   1400493ba:	add    BYTE PTR [rax],al
   1400493bc:	add    BYTE PTR [rax],al
   1400493be:	add    BYTE PTR [rax],al
   1400493c0:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400493c1:	fild   WORD PTR [rax]
   1400493c3:	add    BYTE PTR [rax],al
   1400493c5:	add    BYTE PTR [rax],al
   1400493c7:	add    BYTE PTR [rcx+0xa5],ah
   1400493cd:	add    BYTE PTR [rax],al
   1400493cf:	add    BYTE PTR [rcx+0xfce09f],al
   1400493d5:	add    BYTE PTR [rax],al
   1400493d7:	add    BYTE PTR [rax+0x7e],al
   1400493da:	cmp    ah,0x0
   1400493dd:	add    BYTE PTR [rax],al
   1400493df:	add    BYTE PTR [rax-0x3efffffd],ch
   1400493e5:	movabs ds:0x20a3da,eax
	...
   1400493fe:	add    BYTE PTR [rax],al
   140049400:	cmp    esi,0x0
   140049406:	add    BYTE PTR [rax],al
   140049408:	rex inc BYTE PTR [rax]
   14004940b:	add    BYTE PTR [rax],al
   14004940d:	add    BYTE PTR [rax],al
   14004940f:	add    BYTE PTR [rbp-0x3efffffd],dh
   140049415:	movabs ds:0x20a3da,eax
	...
   14004942e:	add    BYTE PTR [rax],al
   140049430:	cmp    esi,0x0
   140049436:	add    BYTE PTR [rax],al
   140049438:	inc    BYTE PTR [r8]
   14004943b:	add    BYTE PTR [rax],al
   14004943d:	add    BYTE PTR [rax],al
   14004943f:	add    BYTE PTR [rsi-0x30fffffd],dh
   140049445:	movabs ds:0xa2e8a2e5001aa2e4,al
   14004944e:	pop    rbx
	...
   14004945f:	add    BYTE PTR [rcx+0xfe],al
   140049465:	add    BYTE PTR [rax],al
   140049467:	add    BYTE PTR [rax+0x7e],al
   14004946a:	movabs eax,ds:0x55100000000fe
   140049473:	add    BYTE PTR [rcx-0x26],dl
   140049476:	pop    rsi
   140049477:	fisub  DWORD PTR [rax]
   140049479:	add    BYTE PTR [rdi-0x26],bl
   14004947c:	push   0xffffffffffffffda
   14004947e:	xor    al,BYTE PTR [rax]
	...
   140049490:	adc    ebx,0xf9e0ded8
   140049496:	add    BYTE PTR [rax],al
   140049498:	xor    DWORD PTR [rsi-0x7f],edi
   14004949b:	inc    BYTE PTR [rax]
   14004949d:	add    BYTE PTR [rax],al
   14004949f:	add    BYTE PTR [rbx+rbp*4+0x3],al
   1400494a3:	rex add DWORD PTR [rax],eax
   1400494a6:	add    BYTE PTR [rax],al
   1400494a8:	(bad)  
   1400494a9:	(bad)  
   1400494aa:	(bad)  
   1400494ab:	inc    DWORD PTR [rax]
   1400494ad:	add    BYTE PTR [rax],al
   1400494af:	add    BYTE PTR [rbx+0x0],al
	...
   1400494be:	add    BYTE PTR [rax],al
   1400494c0:	add    DWORD PTR [rax],eax
	...
   140049526:	add    BYTE PTR [rax],al
   140049528:	mov    al,0x94
   14004952a:	add    al,0x40
   14004952c:	add    DWORD PTR [rax],eax
	...
   140049546:	add    BYTE PTR [rax],al
   140049548:	mov    al,0x94
   14004954a:	add    al,0x40
   14004954c:	add    DWORD PTR [rax],eax
	...
   140049566:	add    BYTE PTR [rax],al
   140049568:	mov    al,0x94
   14004956a:	add    al,0x40
   14004956c:	add    DWORD PTR [rax],eax
	...
   140049586:	add    BYTE PTR [rax],al
   140049588:	mov    al,0x94
   14004958a:	add    al,0x40
   14004958c:	add    DWORD PTR [rax],eax
	...
   1400495a6:	add    BYTE PTR [rax],al
   1400495a8:	mov    al,0x94
   1400495aa:	add    al,0x40
   1400495ac:	add    DWORD PTR [rax],eax
	...
   1400495c6:	add    BYTE PTR [rax],al
   1400495c8:	add    DWORD PTR [rax],eax
   1400495ca:	add    BYTE PTR [rax],al
   1400495cc:	add    DWORD PTR [rax],eax
	...
   1400495e6:	add    BYTE PTR [rax],al
   1400495e8:	rcr    BYTE PTR [rbp+0x14004],0x0
	...
   1400495ff:	add    BYTE PTR [rax-0x57],al
   140049602:	add    eax,DWORD PTR [rax+0x1]
   140049605:	add    BYTE PTR [rax],al
   140049607:	add    al,dl
   140049609:	lods   eax,DWORD PTR ds:[rsi]
   14004960a:	add    eax,DWORD PTR [rax+0x1]
   14004960d:	add    BYTE PTR [rax],al
   14004960f:	add    BYTE PTR [rax-0x51],dl
   140049612:	add    eax,DWORD PTR [rax+0x1]
   140049615:	add    BYTE PTR [rax],al
   140049617:	add    BYTE PTR [rax-0x64],al
   14004961a:	add    al,0x40
   14004961c:	add    DWORD PTR [rax],eax
   14004961e:	add    BYTE PTR [rax],al
   140049620:	rcl    BYTE PTR [rsp+rax*1+0x140],0x0
   140049628:	add    DWORD PTR [rax],eax
   14004962a:	add    BYTE PTR [rax],al
   14004962c:	add    BYTE PTR [rax],al
   14004962e:	add    BYTE PTR [rax],al
   140049630:	rcl    BYTE PTR [rsp+rax*1+0x140],0x0
   140049638:	jo     0x1400495c9
   14004963a:	add    al,0x40
   14004963c:	add    DWORD PTR [rax],eax
   14004963e:	add    BYTE PTR [rax],al
   140049640:	adc    BYTE PTR [rax],al
	...
   14004964e:	add    BYTE PTR [rax],al
   140049650:	add    al,BYTE PTR [rax]
   140049652:	add    BYTE PTR [rax],al
   140049654:	add    BYTE PTR [rax],al
   140049656:	add    BYTE PTR [rax],al
   140049658:	js     0x1400495f6
   14004965a:	add    eax,DWORD PTR [rax+0x1]
   14004965d:	add    BYTE PTR [rax],al
   14004965f:	add    BYTE PTR [rax],cl
   140049661:	add    BYTE PTR [rax],al
   140049663:	add    BYTE PTR [rax],al
   140049665:	add    BYTE PTR [rax],al
   140049667:	add    BYTE PTR [rax-0x64],cl
   14004966a:	add    eax,DWORD PTR [rax+0x1]
   14004966d:	add    BYTE PTR [rax],al
   14004966f:	add    BYTE PTR [rcx],cl
   140049671:	add    BYTE PTR [rax],al
   140049673:	add    BYTE PTR [rax],al
   140049675:	add    BYTE PTR [rax],al
   140049677:	add    BYTE PTR [rax],bl
   140049679:	pushf  
   14004967a:	add    eax,DWORD PTR [rax+0x1]
   14004967d:	add    BYTE PTR [rax],al
   14004967f:	add    BYTE PTR [rdx],cl
   140049681:	add    BYTE PTR [rax],al
   140049683:	add    BYTE PTR [rax],al
   140049685:	add    BYTE PTR [rax],al
   140049687:	add    BYTE PTR [rax+0x140039b],al
   14004968d:	add    BYTE PTR [rax],al
   14004968f:	add    BYTE PTR [rax],dl
   140049691:	add    BYTE PTR [rax],al
   140049693:	add    BYTE PTR [rax],al
   140049695:	add    BYTE PTR [rax],al
   140049697:	add    BYTE PTR [rax-0x65],cl
   14004969a:	add    eax,DWORD PTR [rax+0x1]
   14004969d:	add    BYTE PTR [rax],al
   14004969f:	add    BYTE PTR [rcx],dl
   1400496a1:	add    BYTE PTR [rax],al
   1400496a3:	add    BYTE PTR [rax],al
   1400496a5:	add    BYTE PTR [rax],al
   1400496a7:	add    BYTE PTR [rax],bl
   1400496a9:	fwait
   1400496aa:	add    eax,DWORD PTR [rax+0x1]
   1400496ad:	add    BYTE PTR [rax],al
   1400496af:	add    BYTE PTR [rdx],dl
   1400496b1:	add    BYTE PTR [rax],al
   1400496b3:	add    BYTE PTR [rax],al
   1400496b5:	add    BYTE PTR [rax],al
   1400496b7:	add    al,dh
   1400496b9:	(bad)  
   1400496ba:	add    eax,DWORD PTR [rax+0x1]
   1400496bd:	add    BYTE PTR [rax],al
   1400496bf:	add    BYTE PTR [rbx],dl
   1400496c1:	add    BYTE PTR [rax],al
   1400496c3:	add    BYTE PTR [rax],al
   1400496c5:	add    BYTE PTR [rax],al
   1400496c7:	add    al,al
   1400496c9:	(bad)  
   1400496ca:	add    eax,DWORD PTR [rax+0x1]
   1400496cd:	add    BYTE PTR [rax],al
   1400496cf:	add    BYTE PTR [rax],bl
   1400496d1:	add    BYTE PTR [rax],al
   1400496d3:	add    BYTE PTR [rax],al
   1400496d5:	add    BYTE PTR [rax],al
   1400496d7:	add    BYTE PTR [rax+0x140039a],cl
   1400496dd:	add    BYTE PTR [rax],al
   1400496df:	add    BYTE PTR [rcx],bl
   1400496e1:	add    BYTE PTR [rax],al
   1400496e3:	add    BYTE PTR [rax],al
   1400496e5:	add    BYTE PTR [rax],al
   1400496e7:	add    BYTE PTR [rax-0x66],ah
   1400496ea:	add    eax,DWORD PTR [rax+0x1]
   1400496ed:	add    BYTE PTR [rax],al
   1400496ef:	add    BYTE PTR [rdx],bl
   1400496f1:	add    BYTE PTR [rax],al
   1400496f3:	add    BYTE PTR [rax],al
   1400496f5:	add    BYTE PTR [rax],al
   1400496f7:	add    BYTE PTR [rax],ch
   1400496f9:	(bad)  
   1400496fa:	add    eax,DWORD PTR [rax+0x1]
   1400496fd:	add    BYTE PTR [rax],al
   1400496ff:	add    BYTE PTR [rbx],bl
   140049701:	add    BYTE PTR [rax],al
   140049703:	add    BYTE PTR [rax],al
   140049705:	add    BYTE PTR [rax],al
   140049707:	add    al,dh
   140049709:	cdq    
   14004970a:	add    eax,DWORD PTR [rax+0x1]
   14004970d:	add    BYTE PTR [rax],al
   14004970f:	add    BYTE PTR [rax+rax*1],bl
   140049712:	add    BYTE PTR [rax],al
   140049714:	add    BYTE PTR [rax],al
   140049716:	add    BYTE PTR [rax],al
   140049718:	enter  0x399,0x40
   14004971c:	add    DWORD PTR [rax],eax
   14004971e:	add    BYTE PTR [rax],al
   140049720:	(bad)  
   140049721:	add    BYTE PTR [rax],al
   140049723:	add    BYTE PTR [rax],al
   140049725:	add    BYTE PTR [rax],al
   140049727:	add    BYTE PTR [rax+0x1400399],ch
   14004972d:	add    BYTE PTR [rax],al
   14004972f:	add    BYTE PTR [rdi],bl
   140049731:	add    BYTE PTR [rax],al
   140049733:	add    BYTE PTR [rax],al
   140049735:	add    BYTE PTR [rax],al
   140049737:	add    BYTE PTR [rax-0x67],al
   14004973a:	add    eax,DWORD PTR [rax+0x1]
   14004973d:	add    BYTE PTR [rax],al
   14004973f:	add    BYTE PTR [rax],ah
   140049741:	add    BYTE PTR [rax],al
   140049743:	add    BYTE PTR [rax],al
   140049745:	add    BYTE PTR [rax],al
   140049747:	add    BYTE PTR [rax],cl
   140049749:	cdq    
   14004974a:	add    eax,DWORD PTR [rax+0x1]
   14004974d:	add    BYTE PTR [rax],al
   14004974f:	add    BYTE PTR [rcx],ah
   140049751:	add    BYTE PTR [rax],al
   140049753:	add    BYTE PTR [rax],al
   140049755:	add    BYTE PTR [rax],al
   140049757:	add    BYTE PTR [rax],dl
   140049759:	cwde   
   14004975a:	add    eax,DWORD PTR [rax+0x1]
   14004975d:	add    BYTE PTR [rax],al
   14004975f:	add    BYTE PTR [rdx],ah
   140049761:	add    BYTE PTR [rax],al
   140049763:	add    BYTE PTR [rax],al
   140049765:	add    BYTE PTR [rax],al
   140049767:	add    BYTE PTR [rax-0x69],dh
   14004976a:	add    eax,DWORD PTR [rax+0x1]
   14004976d:	add    BYTE PTR [rax],al
   14004976f:	add    BYTE PTR [rax+0x0],bh
   140049772:	add    BYTE PTR [rax],al
   140049774:	add    BYTE PTR [rax],al
   140049776:	add    BYTE PTR [rax],al
   140049778:	pop    rax
   140049779:	xchg   edi,eax
   14004977a:	add    eax,DWORD PTR [rax+0x1]
   14004977d:	add    BYTE PTR [rax],al
   14004977f:	add    BYTE PTR [rcx+0x0],bh
   140049782:	add    BYTE PTR [rax],al
   140049784:	add    BYTE PTR [rax],al
   140049786:	add    BYTE PTR [rax],al
   140049788:	xchg   rdi,rax
   14004978a:	add    eax,DWORD PTR [rax+0x1]
   14004978d:	add    BYTE PTR [rax],al
   14004978f:	add    BYTE PTR [rdx+0x0],bh
   140049792:	add    BYTE PTR [rax],al
   140049794:	add    BYTE PTR [rax],al
   140049796:	add    BYTE PTR [rax],al
   140049798:	cmp    BYTE PTR [rdi+0x14003],dl
   14004979e:	add    BYTE PTR [rax],al
   1400497a0:	cld    
   1400497a1:	add    BYTE PTR [rax],al
   1400497a3:	add    BYTE PTR [rax],al
   1400497a5:	add    BYTE PTR [rax],al
   1400497a7:	add    BYTE PTR [rax],dh
   1400497a9:	xchg   edi,eax
   1400497aa:	add    eax,DWORD PTR [rax+0x1]
   1400497ad:	add    BYTE PTR [rax],al
   1400497af:	add    bh,bh
   1400497b1:	add    BYTE PTR [rax],al
   1400497b3:	add    BYTE PTR [rax],al
   1400497b5:	add    BYTE PTR [rax],al
   1400497b7:	add    BYTE PTR [rax],ah
   1400497b9:	xchg   edi,eax
   1400497ba:	add    eax,DWORD PTR [rax+0x1]
   1400497bd:	add    BYTE PTR [rax],al
   1400497bf:	add    BYTE PTR [rbx],al
   1400497c1:	add    BYTE PTR [rax],al
   1400497c3:	add    BYTE PTR [rdi],al
   1400497c5:	add    BYTE PTR [rax],al
   1400497c7:	add    BYTE PTR [rax+0xa000000],ah
   1400497cd:	add    BYTE PTR [rax],al
   1400497cf:	add    bh,bh
   1400497d1:	(bad)  
   1400497d2:	(bad)  
   1400497d3:	(bad)  
   1400497d4:	(bad)  
   1400497d5:	(bad)  
   1400497d6:	(bad)  
   1400497d7:	inc    DWORD PTR [rax+0xa]
	...
   140049825:	add    BYTE PTR [rax],al
   140049827:	add    BYTE PTR [rax+0x14003d7],dl
   14004982d:	add    BYTE PTR [rax],al
   14004982f:	add    BYTE PTR [rax-0x6c],ah
   140049832:	add    eax,DWORD PTR [rax+0x1]
	...
   14004983d:	add    BYTE PTR [rax],al
   14004983f:	add    BYTE PTR [rsi],ch
   140049841:	(bad)  
   140049842:	push   r14
   140049844:	(bad)
   140049849:	js     0x1400498ae
   14004984b:	gs jo  0x1400498c2
   14004984e:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   140049855:	rex
   140049856:	add    BYTE PTR [rbx],al
   140049859:	add    BYTE PTR [rax],al
   14004985b:	add    BYTE PTR [rax],al
   14004985d:	add    BYTE PTR [rax],al
   14004985f:	add    al,dh
   140049861:	popf   
   140049862:	add    eax,DWORD PTR [rax+0x1]
   140049865:	add    BYTE PTR [rax],al
   140049867:	add    al,ah
   140049869:	popf   
   14004986a:	add    eax,DWORD PTR [rax+0x1]
   14004986d:	add    BYTE PTR [rax],al
   14004986f:	add    al,dh
   140049871:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   140049875:	add    BYTE PTR [rax],al
   140049877:	add    al,dh
   140049879:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   14004987d:	add    BYTE PTR [rax],al
   14004987f:	add    al,dh
   140049881:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   140049885:	add    BYTE PTR [rax],al
   140049887:	add    al,dh
   140049889:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   14004988d:	add    BYTE PTR [rax],al
   14004988f:	add    al,dh
   140049891:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   140049895:	add    BYTE PTR [rax],al
   140049897:	add    al,dh
   140049899:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   14004989d:	add    BYTE PTR [rax],al
   14004989f:	add    al,dh
   1400498a1:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   1400498a5:	add    BYTE PTR [rax],al
   1400498a7:	add    al,dh
   1400498a9:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   1400498ad:	add    BYTE PTR [rax],al
   1400498af:	add    al,dh
   1400498b1:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
   1400498b5:	add    BYTE PTR [rax],al
   1400498b7:	add    al,dh
   1400498b9:	rex.WRXB add r8b,BYTE PTR [r8+0x1]
	...
   1400498c5:	add    BYTE PTR [rax],al
   1400498c7:	add    BYTE PTR [rcx],al
	...
   1400498d5:	add    BYTE PTR [rax],al
   1400498d7:	add    BYTE PTR [rcx],al
	...
   1400498f5:	add    BYTE PTR [rax],al
   1400498f7:	add    BYTE PTR [rcx],al
	...
   140049905:	add    BYTE PTR [rax],al
   140049907:	add    BYTE PTR [rcx],al
	...
   140049925:	add    BYTE PTR [rax],al
   140049927:	add    BYTE PTR [rcx],al
	...
   140049935:	add    BYTE PTR [rax],al
   140049937:	add    BYTE PTR [rcx],al
	...
   140049945:	add    BYTE PTR [rax],al
   140049947:	add    BYTE PTR [rcx],al
	...
   140049965:	add    BYTE PTR [rax],al
   140049967:	add    BYTE PTR [rcx],al
	...
   140049985:	add    BYTE PTR [rax],al
   140049987:	add    BYTE PTR [rcx],al
	...
   140049995:	add    BYTE PTR [rax],al
   140049997:	add    BYTE PTR [rcx],al
	...
   1400499a5:	add    BYTE PTR [rax],al
   1400499a7:	add    BYTE PTR [rcx],al
	...
   1400499c5:	add    BYTE PTR [rax],al
   1400499c7:	add    BYTE PTR [rcx],al
	...
   1400499d5:	add    BYTE PTR [rax],al
   1400499d7:	add    BYTE PTR [rcx],al
	...
   1400499e5:	add    BYTE PTR [rax],al
   1400499e7:	add    BYTE PTR [rcx],al
	...
   140049afd:	add    BYTE PTR [rax],al
   140049aff:	add    BYTE PTR [rax+0x1000070],al
   140049b05:	add    BYTE PTR [rax],al
   140049b07:	add    al,dh
   140049b09:	icebp  
   140049b0a:	(bad)  
   140049b0b:	inc    DWORD PTR [rax]
   140049b0d:	add    BYTE PTR [rax],al
   140049b0f:	add    BYTE PTR [rax+0x53],dl
   140049b12:	push   rsp
	...
   140049b4f:	add    BYTE PTR [rax+0x44],dl
   140049b52:	push   rsp
	...
   140049b8f:	add    BYTE PTR [rax],dl
   140049b91:	fwait
   140049b92:	add    al,0x40
   140049b94:	add    DWORD PTR [rax],eax
   140049b96:	add    BYTE PTR [rax],al
   140049b98:	push   rax
   140049b99:	fwait
   140049b9a:	add    al,0x40
   140049b9c:	add    DWORD PTR [rax],eax
   140049b9e:	add    BYTE PTR [rax],al
   140049ba0:	(bad)  
   140049ba1:	(bad)  
   140049ba2:	(bad)  
   140049ba3:	inc    DWORD PTR [rax]
	...
   140049bad:	add    BYTE PTR [rax],al
   140049baf:	add    bh,bh
   140049bb1:	(bad)  
   140049bb2:	(bad)  
   140049bb3:	inc    DWORD PTR [rax]
	...
   140049bbd:	add    BYTE PTR [rax],al
   140049bbf:	add    bh,bh
   140049bc1:	(bad)  
   140049bc2:	(bad)  
   140049bc3:	call   FWORD PTR [rsi]
   140049bc5:	add    BYTE PTR [rax],al
   140049bc7:	add    BYTE PTR [rbx],bh
   140049bc9:	add    BYTE PTR [rax],al
   140049bcb:	add    BYTE PTR [rdx+0x0],bl
   140049bce:	add    BYTE PTR [rax],al
   140049bd0:	js     0x140049bd2
   140049bd2:	add    BYTE PTR [rax],al
   140049bd4:	xchg   edi,eax
   140049bd5:	add    BYTE PTR [rax],al
   140049bd7:	add    BYTE PTR [rbp-0x2c000000],dh
   140049bdd:	add    BYTE PTR [rax],al
   140049bdf:	add    bl,dh
   140049be1:	add    BYTE PTR [rax],al
   140049be3:	add    BYTE PTR [rcx],dl
   140049be5:	add    DWORD PTR [rax],eax
   140049be7:	add    BYTE PTR [rax],dh
   140049be9:	add    DWORD PTR [rax],eax
   140049beb:	add    BYTE PTR [rsi+0x1],cl
   140049bee:	add    BYTE PTR [rax],al
   140049bf0:	ins    DWORD PTR es:[rdi],dx
   140049bf1:	add    DWORD PTR [rax],eax
   140049bf3:	add    BYTE PTR [rax],al
   140049bf5:	add    BYTE PTR [rax],al
   140049bf7:	add    bh,bh
   140049bf9:	(bad)  
   140049bfa:	(bad)  
   140049bfb:	call   FWORD PTR [rsi]
   140049bfd:	add    BYTE PTR [rax],al
   140049bff:	add    BYTE PTR [rdx],bh
   140049c01:	add    BYTE PTR [rax],al
   140049c03:	add    BYTE PTR [rcx+0x0],bl
   140049c06:	add    BYTE PTR [rax],al
   140049c08:	ja     0x140049c0a
   140049c0a:	add    BYTE PTR [rax],al
   140049c0c:	xchg   esi,eax
   140049c0d:	add    BYTE PTR [rax],al
   140049c0f:	add    BYTE PTR [rax+rax*1+0xd30000],dh
   140049c16:	add    BYTE PTR [rax],al
   140049c18:	repnz add BYTE PTR [rax],al
   140049c1b:	add    BYTE PTR [rax],dl
   140049c1d:	add    DWORD PTR [rax],eax
   140049c1f:	add    BYTE PTR [rdi],ch
   140049c21:	add    DWORD PTR [rax],eax
   140049c23:	add    BYTE PTR [rbp+0x1],cl
   140049c26:	add    BYTE PTR [rax],al
   140049c28:	ins    BYTE PTR es:[rdi],dx
   140049c29:	add    DWORD PTR [rax],eax
   140049c2b:	add    BYTE PTR [rax],al
   140049c2d:	add    BYTE PTR [rax],al
   140049c2f:	add    BYTE PTR [rax-0x57],al
   140049c32:	add    eax,DWORD PTR [rax+0x1]
   140049c35:	add    BYTE PTR [rax],al
   140049c37:	add    BYTE PTR [rdx-0x55],al
   140049c3a:	add    eax,DWORD PTR [rax+0x1]
   140049c3d:	add    BYTE PTR [rax],al
   140049c3f:	add    BYTE PTR [rax+0x14003b1],ah
   140049c45:	add    BYTE PTR [rax],al
   140049c47:	add    BYTE PTR [rcx+rsi*4+0x14003],bl
   140049c4e:	add    BYTE PTR [rax],al
   140049c50:	cwde   
   140049c51:	mov    cl,0x3
   140049c53:	rex add DWORD PTR [rax],eax
   140049c56:	add    BYTE PTR [rax],al
   140049c58:	xchg   esp,eax
   140049c59:	mov    cl,0x3
   140049c5b:	rex add DWORD PTR [rax],eax
   140049c5e:	add    BYTE PTR [rax],al
   140049c60:	nop
   140049c61:	mov    cl,0x3
   140049c63:	rex add DWORD PTR [rax],eax
   140049c66:	add    BYTE PTR [rax],al
   140049c68:	mov    WORD PTR [rcx+0x14003],?
   140049c6e:	add    BYTE PTR [rax],al
   140049c70:	mov    BYTE PTR [rcx+0x14003],dh
   140049c76:	add    BYTE PTR [rax],al
   140049c78:	xor    BYTE PTR [rcx+0x14003],0x0
   140049c7f:	add    BYTE PTR [rax-0x4f],bh
   140049c82:	add    eax,DWORD PTR [rax+0x1]
   140049c85:	add    BYTE PTR [rax],al
   140049c87:	add    BYTE PTR [rax-0x4f],dh
   140049c8a:	add    eax,DWORD PTR [rax+0x1]
   140049c8d:	add    BYTE PTR [rax],al
   140049c8f:	add    BYTE PTR [rax-0x4f],ah
   140049c92:	add    eax,DWORD PTR [rax+0x1]
   140049c95:	add    BYTE PTR [rax],al
   140049c97:	add    BYTE PTR [rax-0x4f],dl
   140049c9a:	add    eax,DWORD PTR [rax+0x1]
   140049c9d:	add    BYTE PTR [rax],al
   140049c9f:	add    BYTE PTR [rcx+rsi*4+0x3],al
   140049ca3:	rex add DWORD PTR [rax],eax
   140049ca6:	add    BYTE PTR [rax],al
   140049ca8:	cmp    BYTE PTR [rcx+0x14003],dh
   140049cae:	add    BYTE PTR [rax],al
   140049cb0:	xor    al,0xb1
   140049cb2:	add    eax,DWORD PTR [rax+0x1]
   140049cb5:	add    BYTE PTR [rax],al
   140049cb7:	add    BYTE PTR [rax],dh
   140049cb9:	mov    cl,0x3
   140049cbb:	rex add DWORD PTR [rax],eax
   140049cbe:	add    BYTE PTR [rax],al
   140049cc0:	sub    al,0xb1
   140049cc2:	add    eax,DWORD PTR [rax+0x1]
   140049cc5:	add    BYTE PTR [rax],al
   140049cc7:	add    BYTE PTR [rax],ch
   140049cc9:	mov    cl,0x3
   140049ccb:	rex add DWORD PTR [rax],eax
   140049cce:	add    BYTE PTR [rax],al
   140049cd0:	and    al,0xb1
   140049cd2:	add    eax,DWORD PTR [rax+0x1]
   140049cd5:	add    BYTE PTR [rax],al
   140049cd7:	add    BYTE PTR [rax],ah
   140049cd9:	mov    cl,0x3
   140049cdb:	rex add DWORD PTR [rax],eax
   140049cde:	add    BYTE PTR [rax],al
   140049ce0:	sbb    al,0xb1
   140049ce2:	add    eax,DWORD PTR [rax+0x1]
   140049ce5:	add    BYTE PTR [rax],al
   140049ce7:	add    BYTE PTR [rax],bl
   140049ce9:	mov    cl,0x3
   140049ceb:	rex add DWORD PTR [rax],eax
   140049cee:	add    BYTE PTR [rax],al
   140049cf0:	adc    al,0xb1
   140049cf2:	add    eax,DWORD PTR [rax+0x1]
   140049cf5:	add    BYTE PTR [rax],al
   140049cf7:	add    BYTE PTR [rax],dl
   140049cf9:	mov    cl,0x3
   140049cfb:	rex add DWORD PTR [rax],eax
   140049cfe:	add    BYTE PTR [rax],al
   140049d00:	or     al,0xb1
   140049d02:	add    eax,DWORD PTR [rax+0x1]
   140049d05:	add    BYTE PTR [rax],al
   140049d07:	add    BYTE PTR [rax],cl
   140049d09:	mov    cl,0x3
   140049d0b:	rex add DWORD PTR [rax],eax
   140049d0e:	add    BYTE PTR [rax],al
   140049d10:	add    BYTE PTR [rcx+0x14003],dh
   140049d16:	add    BYTE PTR [rax],al
   140049d18:	lock mov al,0x3
   140049d1b:	rex add DWORD PTR [rax],eax
   140049d1e:	add    BYTE PTR [rax],al
   140049d20:	in     al,0xb0
   140049d22:	add    eax,DWORD PTR [rax+0x1]
   140049d25:	add    BYTE PTR [rax],al
   140049d27:	add    ah,bl
   140049d29:	mov    al,0x3
   140049d2b:	rex add DWORD PTR [rax],eax
   140049d2e:	add    BYTE PTR [rax],al
   140049d30:	and    al,0xb1
   140049d32:	add    eax,DWORD PTR [rax+0x1]
   140049d35:	add    BYTE PTR [rax],al
   140049d37:	add    ah,dl
   140049d39:	mov    al,0x3
   140049d3b:	rex add DWORD PTR [rax],eax
   140049d3e:	add    BYTE PTR [rax],al
   140049d40:	int3   
   140049d41:	mov    al,0x3
   140049d43:	rex add DWORD PTR [rax],eax
   140049d46:	add    BYTE PTR [rax],al
   140049d48:	(bad)  
   140049d49:	mov    al,0x3
   140049d4b:	rex add DWORD PTR [rax],eax
   140049d4e:	add    BYTE PTR [rax],al
   140049d50:	mov    eax,0x14003b0
   140049d55:	add    BYTE PTR [rax],al
   140049d57:	add    BYTE PTR [rax+0x14003b0],dh
   140049d5d:	add    BYTE PTR [rax],al
   140049d5f:	add    BYTE PTR [rax+0x14003b0],ah
   140049d65:	add    BYTE PTR [rax],al
   140049d67:	add    BYTE PTR [rax+0x14003b0],dl
   140049d6d:	add    BYTE PTR [rax],al
   140049d6f:	add    BYTE PTR [rax+0x14003b0],cl
   140049d75:	add    BYTE PTR [rax],al
   140049d77:	add    BYTE PTR [rax+rsi*4+0x14003],al
   140049d7e:	add    BYTE PTR [rax],al
   140049d80:	js     0x140049d32
   140049d82:	add    eax,DWORD PTR [rax+0x1]
   140049d85:	add    BYTE PTR [rax],al
   140049d87:	add    BYTE PTR [rax-0x50],ah
   140049d8a:	add    eax,DWORD PTR [rax+0x1]
   140049d8d:	add    BYTE PTR [rax],al
   140049d8f:	add    BYTE PTR [rax-0x50],dl
   140049d92:	add    eax,DWORD PTR [rax+0x1]
   140049d95:	add    BYTE PTR [rax],al
   140049d97:	add    BYTE PTR [rcx],cl
   140049d99:	add    al,0x0
   140049d9b:	add    BYTE PTR [rcx],al
	...
   140049da5:	add    BYTE PTR [rax],al
   140049da7:	add    BYTE PTR [rax-0x64],al
   140049daa:	add    al,0x40
   140049dac:	add    DWORD PTR [rax],eax
   140049dae:	add    BYTE PTR [rax],al
   140049db0:	add    BYTE PTR cs:[rax],al
	...
   140049dbf:	add    BYTE PTR [rax+0x140049d],dh
   140049dc5:	add    BYTE PTR [rax],al
   140049dc7:	add    BYTE PTR [rax-0xd],dl
   140049dca:	add    al,0x40
   140049dcc:	add    DWORD PTR [rax],eax
   140049dce:	add    BYTE PTR [rax],al
   140049dd0:	push   rax
   140049dd1:	repz add al,0x40
   140049dd4:	add    DWORD PTR [rax],eax
   140049dd6:	add    BYTE PTR [rax],al
   140049dd8:	push   rax
   140049dd9:	repz add al,0x40
   140049ddc:	add    DWORD PTR [rax],eax
   140049dde:	add    BYTE PTR [rax],al
   140049de0:	push   rax
   140049de1:	repz add al,0x40
   140049de4:	add    DWORD PTR [rax],eax
   140049de6:	add    BYTE PTR [rax],al
   140049de8:	push   rax
   140049de9:	repz add al,0x40
   140049dec:	add    DWORD PTR [rax],eax
   140049dee:	add    BYTE PTR [rax],al
   140049df0:	push   rax
   140049df1:	repz add al,0x40
   140049df4:	add    DWORD PTR [rax],eax
   140049df6:	add    BYTE PTR [rax],al
   140049df8:	push   rax
   140049df9:	repz add al,0x40
   140049dfc:	add    DWORD PTR [rax],eax
   140049dfe:	add    BYTE PTR [rax],al
   140049e00:	push   rax
   140049e01:	repz add al,0x40
   140049e04:	add    DWORD PTR [rax],eax
   140049e06:	add    BYTE PTR [rax],al
   140049e08:	push   rax
   140049e09:	repz add al,0x40
   140049e0c:	add    DWORD PTR [rax],eax
   140049e0e:	add    BYTE PTR [rax],al
   140049e10:	jg     0x140049e91
   140049e12:	jg     0x140049e93
   140049e14:	jg     0x140049e95
   140049e16:	jg     0x140049e97
   140049e18:	rcr    BYTE PTR [rbp+0x14004],0x0
   140049e1f:	add    BYTE PTR [rcx],al
   140049e21:	add    BYTE PTR [rax],al
   140049e23:	add    BYTE PTR [rsi],ch
   140049e25:	add    BYTE PTR [rax],al
   140049e27:	add    BYTE PTR [rcx],al
   140049e29:	add    BYTE PTR [rax],al
   140049e2b:	add    BYTE PTR [rax],al
   140049e2d:	add    BYTE PTR [rax],al
   140049e2f:	add    BYTE PTR [rax],ah
   140049e31:	test   BYTE PTR [rax+rax*2],0x1
	...
   140049e3d:	add    BYTE PTR [rax],al
   140049e3f:	add    BYTE PTR [rax],ah
   140049e41:	test   BYTE PTR [rax+rax*2],0x1
   140049e45:	add    BYTE PTR [rax],al
   140049e47:	add    BYTE PTR [rcx],al
   140049e49:	add    DWORD PTR [rax],eax
	...
   140049e53:	add    BYTE PTR [rax],al
   140049e55:	adc    BYTE PTR [rax],al
	...
   140049e77:	add    BYTE PTR [rdx],al
   140049e79:	add    BYTE PTR [rax],al
   140049e7b:	add    BYTE PTR [rcx],al
	...
   140049ea5:	add    BYTE PTR [rax],al
   140049ea7:	add    BYTE PTR [rdx],al
   140049ea9:	add    BYTE PTR [rax],al
   140049eab:	add    BYTE PTR [rdx],al
	...
   14004a1ed:	add    BYTE PTR [rax],al
   14004a1ef:	add    BYTE PTR [rdx],al
	...
   14004a1f9:	add    al,0x0
   14004a1fb:	add    BYTE PTR [rcx],al
   14004a1fd:	cld    
   14004a1fe:	(bad)  
   14004a1ff:	push   QWORD PTR [rip+0xb000000]        # 0x14b04a205
   14004a205:	add    BYTE PTR [rax],al
   14004a207:	add    BYTE PTR [rax+0x0],al
   14004a20a:	add    BYTE PTR [rax],al
   14004a20c:	inc    DWORD PTR [rbx]
   14004a20e:	add    BYTE PTR [rax],al
   14004a210:	add    BYTE PTR [rax],0x0
   14004a213:	add    BYTE PTR [rcx+0x18ffffff],al
   14004a219:	add    BYTE PTR [rax],al
   14004a21b:	add    BYTE PTR [rax],cl
   14004a21d:	add    BYTE PTR [rax],al
   14004a21f:	add    BYTE PTR [rax],ah
   14004a221:	add    BYTE PTR [rax],al
   14004a223:	add    BYTE PTR [rdi+0x0],bh
	...
   14004a2ee:	add    BYTE PTR [rax],al
   14004a2f0:	add    DWORD PTR [rcx],eax
   14004a2f2:	add    DWORD PTR [rcx],eax
   14004a2f4:	add    DWORD PTR [rcx],eax
   14004a2f6:	add    DWORD PTR [rcx],eax
   14004a2f8:	add    DWORD PTR [rcx],eax
   14004a2fa:	add    DWORD PTR [rcx],eax
   14004a2fc:	add    DWORD PTR [rcx],eax
   14004a2fe:	add    DWORD PTR [rcx],eax
   14004a300:	add    DWORD PTR [rcx],eax
   14004a302:	add    DWORD PTR [rcx],eax
   14004a304:	add    DWORD PTR [rcx],eax
   14004a306:	add    DWORD PTR [rcx],eax
   14004a308:	add    DWORD PTR [rcx],eax
   14004a30a:	add    DWORD PTR [rcx],eax
   14004a30c:	add    DWORD PTR [rcx],eax
   14004a30e:	add    DWORD PTR [rcx],eax
   14004a310:	add    al,BYTE PTR [rdx]
   14004a312:	add    al,BYTE PTR [rdx]
   14004a314:	add    al,BYTE PTR [rdx]
   14004a316:	add    al,BYTE PTR [rdx]
   14004a318:	add    al,BYTE PTR [rdx]
   14004a31a:	add    al,BYTE PTR [rdx]
   14004a31c:	add    al,BYTE PTR [rdx]
   14004a31e:	add    al,BYTE PTR [rdx]
   14004a320:	add    eax,DWORD PTR [rbx]
   14004a322:	add    eax,DWORD PTR [rbx]
   14004a324:	add    eax,DWORD PTR [rbx]
   14004a326:	add    eax,DWORD PTR [rbx]
	...
   14004a330:	(bad)  
   14004a331:	(bad)  
   14004a332:	(bad)  
   14004a333:	(bad)  
   14004a334:	(bad)  
   14004a335:	(bad)  
   14004a336:	(bad)  
   14004a337:	(bad)  
   14004a338:	(bad)  
   14004a339:	(bad)  
   14004a33a:	(bad)  
   14004a33b:	(bad)  
   14004a33c:	(bad)  
   14004a33d:	(bad)  
   14004a33e:	(bad)  
   14004a33f:	inc    DWORD PTR [rax]
	...
   14004a349:	movabs al,ds:0x4002
   14004a352:	add    BYTE PTR [rax],al
   14004a354:	add    al,cl
   14004a356:	add    eax,0x40
   14004a35b:	add    BYTE PTR [rax],al
   14004a35d:	add    BYTE PTR [rax],al
   14004a35f:	add    BYTE PTR [rax],al
   14004a361:	cli    
   14004a362:	or     BYTE PTR [rax+0x0],al
   14004a365:	add    BYTE PTR [rax],al
   14004a367:	add    BYTE PTR [rax],al
   14004a369:	add    BYTE PTR [rax],al
   14004a36b:	add    BYTE PTR [rax-0x64],al
   14004a36e:	or     al,0x40
	...
   14004a378:	push   rax
   14004a379:	ret    
   14004a37a:	cmovo  eax,DWORD PTR [rax]
   14004a37d:	add    BYTE PTR [rax],al
   14004a37f:	add    BYTE PTR [rax],al
   14004a381:	add    BYTE PTR [rax],al
   14004a383:	add    BYTE PTR [rsp+rsi*8],ah
   14004a386:	adc    al,BYTE PTR [rax+0x0]
   14004a389:	add    BYTE PTR [rax],al
   14004a38b:	add    BYTE PTR [rax],al
   14004a38d:	add    BYTE PTR [rax],al
   14004a38f:	adc    BYTE PTR [rsi+0x401698],0x0
   14004a396:	add    BYTE PTR [rax],al
   14004a398:	add    BYTE PTR [rax],al
   14004a39a:	add    BYTE PTR [rax],ah
   14004a39c:	mov    esp,0x4019be
   14004a3a1:	add    BYTE PTR [rax],al
   14004a3a3:	add    BYTE PTR [rax],al
   14004a3a5:	add    al,0xbf
   14004a3a7:	leave  
   14004a3a8:	sbb    ecx,DWORD PTR [rsi+0x4034]
   14004a3ae:	add    BYTE PTR [rcx+0x1bcecced],ah
   14004a3b4:	ret    0x4ed3
   14004a3b7:	and    al,sil
   14004a3ba:	sahf   
   14004a3bb:	mov    ch,0x70
   14004a3bd:	sub    ebp,DWORD PTR [rax+0x699dc5ad]
   14004a3c3:	rex rcr BYTE PTR [rbp-0x3],1
   14004a3c7:	and    eax,0x4f8e1ae5
   14004a3cc:	sbb    ebx,ebp
   14004a3ce:	add    DWORD PTR [rax+0x71],0xffffff96
   14004a3d2:	xlat   BYTE PTR ds:[rbx]
   14004a3d3:	xchg   ebp,eax
   14004a3d4:	rex.XB (bad) 
   14004a3d6:	add    eax,0x9eaf298d
   14004a3db:	rex stc 
   14004a3dd:	mov    edi,0x81ed44a0
   14004a3e2:	adc    cl,BYTE PTR [rdi+0x40b98281]
   14004a3e8:	mov    edi,0xcfa6d53c
   14004a3ed:	dec    DWORD PTR [rcx+0x1f]
   14004a3f0:	js     0x14004a3b4
   14004a3f2:	rol    DWORD PTR [rax+0x6f],cl
   14004a3f5:	(bad)  
   14004a3f6:	loopne 0x14004a384
   14004a3f8:	jmp    0xfa4c6d7d
   14004a3fd:	xchg   ebx,eax
   14004a3fe:	test   al,0x41
   14004a400:	mov    esp,0x27556b85
   14004a405:	cmp    DWORD PTR [rbp+0x7ce070f7],ecx
   14004a40b:	rex.X mov esp,0xf9de8edd
   14004a411:	popf   
   14004a412:	sti    
   14004a413:	jmp    0x14004a493
   14004a415:	stos   BYTE PTR es:[rdi],al
   14004a416:	push   rcx
   14004a417:	rex.XB movabs eax,ds:0x842f29f2cce376e6
   14004a421:	and    DWORD PTR [rsi],0x17102844
   14004a427:	stos   BYTE PTR es:[rdi],al
   14004a428:	clc    
   14004a429:	scas   al,BYTE PTR es:[rdi]
   14004a42a:	adc    bl,ah
   14004a42c:	(bad)
   14004a42f:	rex.R jmp 0x14004a3d9
   14004a432:	(bad)  
   14004a433:	repz imul ebx
   14004a436:	loope  0x14004a482
   14004a438:	jp     0x14004a3cf
   14004a43a:	iret   
   14004a43b:	rex.RB
   14004a43c:	gs int3 
   14004a43e:	(bad)  
   14004a43f:	xchg   ecx,eax
   14004a440:	(bad)  
   14004a441:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a442:	scas   al,BYTE PTR es:[rdi]
   14004a443:	movabs al,ds:0xc17650d46a3e319
   14004a44c:	jne    0x14004a3cf
   14004a44e:	xchg   BYTE PTR [rbp+0x76],dh
   14004a451:	leave  
   14004a452:	rex.W
   14004a453:	rex.WRB pop r8
   14004a455:	rex.X in al,0xa7
   14004a458:	xchg   ebx,eax
   14004a459:	cmp    DWORD PTR [rbx],edi
   14004a45b:	xor    eax,0x53edb2b8
   14004a460:	rex.WRB cmps QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   14004a462:	in     eax,0x5d
   14004a464:	cmp    eax,0x8b3b5dc5
   14004a469:	sahf   
   14004a46a:	xchg   edx,eax
   14004a46b:	pop    rdx
   14004a46c:	call   FWORD PTR [rbp-0x5a]
   14004a46f:	lock movabs eax,ds:0xd161378ca554c020
   14004a479:	std    
   14004a47a:	mov    ebx,DWORD PTR [rdx-0x75]
   14004a47d:	fsub   DWORD PTR [rip+0xffffffffdbf9895d]        # 0x11bfe2de0
   14004a483:	stos   BYTE PTR es:[edi],al
   14004a485:	xchg   ebp,eax
   14004a486:	clc    
   14004a487:	repz (bad) 
   14004a489:	mov    edi,0xdd5dc8a2
   14004a48e:	sub    BYTE PTR [rsi+0x4c],0xc9
   14004a492:	fwait
   14004a493:	xchg   edi,eax
   14004a494:	and    BYTE PTR [rdx-0x3b9fadfe],cl
   14004a49a:	and    eax,0x75
   14004a49f:	add    ch,cl
   14004a4a1:	int3   
   14004a4a2:	int    0xcc
   14004a4a4:	int3   
   14004a4a5:	int3   
   14004a4a6:	int3   
   14004a4a7:	int3   
   14004a4a8:	int3   
   14004a4a9:	int3   
   14004a4aa:	sti    
   14004a4ab:	(bad)  
   14004a4ac:	jno    0x14004a4eb
   14004a4ae:	or     dl,bh
   14004a4b0:	movabs ds:0x5a3ff8a3d70a3d70,eax
   14004a4b9:	fs cmp ebx,edi
   14004a4bc:	rex.WRXB lea r10,[r15-0xa7ced92]
   14004a4c3:	(bad)  
   14004a4c4:	ret    
   14004a4c5:	shr    DWORD PTR [riz*2+0x1758e219],cl
   14004a4cc:	mov    bh,0xd1
   14004a4ce:	icebp  
   14004a4cf:	(bad)  
   14004a4d0:	ror    BYTE PTR [rdi],1
   14004a4d2:	and    eax,DWORD PTR [rdi+rax*2-0x3a53b8e5]
   14004a4d9:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14004a4da:	out    dx,al
   14004a4db:	(bad)  
   14004a4dc:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14004a4de:	mov    dh,0x69
   14004a4e0:	ins    BYTE PTR es:[rdi],dx
   14004a4e1:	scas   eax,DWORD PTR es:[rdi]
   14004a4e2:	add    eax,0xeb8637bd
   14004a4e7:	(bad)  
   14004a4e8:	xor    edi,DWORD PTR [rip+0xffffffffe57a42bc]        # 0x1257ee7aa
   14004a4ee:	(bad)  
   14004a4ef:	xchg   esp,eax
   14004a4f0:	mov    edi,0xc23fe7d6
   14004a4f5:	std    
   14004a4f6:	std    
   14004a4f7:	(bad)  
   14004a4f8:	(bad)  
   14004a4f9:	test   BYTE PTR [rcx],dl
   14004a4fb:	ja     0x14004a4c9
   14004a4fd:	stos   DWORD PTR es:[rdi],eax
   14004a4fe:	in     al,0x3f
   14004a500:	(bad)  
   14004a501:	rex.WR pop rbx
   14004a503:	loope  0x14004a552
   14004a505:	(bad)  
   14004a506:	mov    esi,0xc9e69594
   14004a50b:	(bad)  
   14004a50c:	xchg   edx,eax
   14004a50d:	(bad)  
   14004a50e:	push   rbx
   14004a50f:	cmp    esi,DWORD PTR [rbp+0x44]
   14004a512:	int    0x14
   14004a514:	mov    esi,0xde3faf9a
   14004a519:	addr32 mov edx,0xad453994
   14004a51f:	(bad)  
   14004a520:	mov    cl,0xcf
   14004a522:	xchg   esp,eax
   14004a523:	(bad)  
   14004a524:	and    al,0x23
   14004a526:	(bad)  
   14004a527:	loop   0x14004a4e5
   14004a529:	mov    edx,0x8b61313b
   14004a52e:	jp     0x14004a56f
   14004a530:	(bad)  
   14004a531:	push   rbp
   14004a532:	pop    rcx
   14004a533:	sar    DWORD PTR [rsi-0x4f],0x53
   14004a537:	jl     0x14004a54b
   14004a539:	mov    ebx,0xeed73f5f
   14004a53e:	(bad)  
   14004a53f:	lea    eax,[rsi]
   14004a541:	mov    esi,0xfb158592
   14004a546:	rex.R (bad) 
   14004a548:	and    al,0x3f
   14004a54a:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14004a54b:	jmp    0x12a2c4a89
   14004a550:	jg     0x14004a4fa
   14004a552:	sub    bh,BYTE PTR [rdi]
   14004a554:	jge    0x14004a502
   14004a556:	movabs eax,ds:0x55ddd0467c64bce4
   14004a55f:	movsxd edi,DWORD PTR ds:[rbx+0x6]
   14004a563:	int3   
   14004a564:	and    edx,DWORD PTR [rdi+rsi*2-0x7d]
   14004a568:	call   QWORD PTR [rcx-0x56ec27f]
   14004a56e:	cmp    bl,BYTE PTR [rcx]
   14004a570:	jp     0x14004a5d5
   14004a572:	and    eax,0xacc03143
   14004a577:	cmp    al,0x21
   14004a579:	mov    ecx,edx
   14004a57b:	cmp    BYTE PTR [rdx+0xb89747],al
   14004a581:	std    
   14004a582:	xlat   BYTE PTR ds:[rbx]
   14004a583:	cmp    ebx,esp
   14004a585:	mov    BYTE PTR [rax+0x8],bl
   14004a588:	sbb    esi,DWORD PTR [rcx-0x59791c18]
   14004a58e:	add    edi,DWORD PTR [rbx]
   14004a590:	mov    BYTE PTR [rbp+rax*2-0x6649f8be],0x75
   14004a598:	(bad)  
   14004a599:	fld    TBYTE PTR [rsi]
   14004a59b:	cmp    dh,BYTE PTR [rbx]
   14004a59d:	jno    0x14004a5bb
   14004a59f:	shl    BYTE PTR [rbx],cl
   14004a5a1:	(bad)  [rdx]
   14004a5a3:	out    dx,al
   14004a5a4:	xchg   r8,rax
   14004a5a6:	pop    rdx
   14004a5a7:	cmp    DWORD PTR [rsi+0x57c0be87],esp
   14004a5ad:	fisub  DWORD PTR [rbp-0x4a5d597e]
   14004a5b3:	xor    ah,dl
   14004a5b5:	push   0x52a711b2
   14004a5ba:	lahf   
   14004a5bb:	rex.R pop rcx
   14004a5bd:	mov    bh,0x10
   14004a5bf:	sub    al,0x25
   14004a5c1:	rex.WB in al,0x2d
   14004a5c4:	ss xor al,0x4f
   14004a5c7:	push   rbx
   14004a5c8:	scas   al,BYTE PTR es:[rdi]
   14004a5c9:	(bad)  
   14004a5ca:	imul   esp,DWORD PTR [rip+0xffffffffa404598f],0xffffffc0        # 0xe408ff60
   14004a5d1:	faddp  st(2),st
   14004a5d3:	jge    0x14004a5d0
   14004a5d5:	call   0x127a2c4a0
   14004a5da:	mov    BYTE PTR [rdx+0x57],bl
   14004a5dd:	xchg   ecx,eax
   14004a5de:	cmp    al,0xbf
   14004a5e0:	push   rax
   14004a5e1:	and    DWORD PTR [rdx],0x18
   14004a5e4:	rex.WRX
   14004a5e5:	rex.WXB
   14004a5e6:	gs (bad) 
   14004a5e8:	std    
   14004a5e9:	or     DWORD PTR [rdi+0x7d9406af],0x11
   14004a5f0:	in     al,0x2d
   14004a5f2:	ficomp WORD PTR [rdi+0x4c8d2ce]
   14004a5f8:	frstor [rsi+0xad8]
   14004a5fe:	add    BYTE PTR [rax],al
   14004a600:	sar    BYTE PTR [rbp+0x14003],0x0
   14004a607:	add    BYTE PTR [rax-0x6c],ah
   14004a60a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a615:	add    BYTE PTR [rax],al
   14004a617:	add    BYTE PTR [rsi],ch
   14004a619:	(bad)  
   14004a61a:	push   r14
   14004a61c:	push   rsp
   14004a61d:	imul   ebx,DWORD PTR [rax+0x6d],0x7865546c
   14004a624:	je     0x14004a666
   14004a626:	add    BYTE PTR [rax-0x6c],spl
   14004a62a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a635:	add    BYTE PTR [rax],al
   14004a637:	add    BYTE PTR [rsi],ch
   14004a639:	(bad)  
   14004a63a:	push   r14
   14004a63c:	push   rsp
   14004a63d:	imul   ebx,DWORD PTR [rax+0x6d],0x646f4e6c
   14004a644:	gs rex
   14004a646:	add    BYTE PTR [rax-0x6c],spl
   14004a64a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a655:	add    BYTE PTR [rax],al
   14004a657:	add    BYTE PTR [rsi],ch
   14004a659:	(bad)  
   14004a65a:	push   r14
   14004a65c:	push   rsp
   14004a65d:	imul   ebx,DWORD PTR [rax+0x6d],0x7361426c
   14004a664:	gs rex
   14004a666:	add    BYTE PTR [rax-0x6c],spl
   14004a66a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a675:	add    BYTE PTR [rax],al
   14004a677:	add    BYTE PTR [rsi],ch
   14004a679:	(bad)  
   14004a67a:	push   r14
   14004a67c:	push   rsp
   14004a67d:	imul   ebx,DWORD PTR [rax+0x6d],0x636f446c
   14004a684:	jne    0x14004a6f3
   14004a686:	outs   dx,BYTE PTR gs:[rsi]
   14004a688:	je     0x14004a6ca
   14004a68a:	add    BYTE PTR [rax],al
   14004a68d:	add    BYTE PTR [rax],al
   14004a68f:	add    BYTE PTR [rax],dl
   14004a691:	rol    DWORD PTR [rbx],0x40
   14004a694:	add    DWORD PTR [rax],eax
   14004a696:	add    BYTE PTR [rax],al
   14004a698:	adc    dl,al
   14004a69a:	add    eax,DWORD PTR [rax+0x1]
   14004a69d:	add    BYTE PTR [rax],al
   14004a69f:	add    BYTE PTR [rax-0x6c],ah
   14004a6a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a6ad:	add    BYTE PTR [rax],al
   14004a6af:	add    BYTE PTR [rsi],ch
   14004a6b1:	(bad)  
   14004a6b2:	push   r14
   14004a6b4:	push   rsp
   14004a6b5:	imul   ebx,DWORD PTR [rax+0x6d],0x6365446c
   14004a6bc:	ins    BYTE PTR es:[rdi],dx
   14004a6bd:	(bad)  
   14004a6be:	jb     0x14004a721
   14004a6c0:	je     0x14004a72b
   14004a6c2:	outs   dx,DWORD PTR ds:[rsi]
   14004a6c3:	outs   dx,BYTE PTR ds:[rsi]
   14004a6c4:	rex
   14004a6c5:	add    BYTE PTR [rax],al
   14004a6c8:	nop
   14004a6c9:	xlat   BYTE PTR ds:[rbx]
   14004a6ca:	add    eax,DWORD PTR [rax+0x1]
   14004a6cd:	add    BYTE PTR [rax],al
   14004a6cf:	add    BYTE PTR [rcx],al
   14004a6d1:	add    BYTE PTR [rax],al
   14004a6d3:	add    BYTE PTR [rax],al
   14004a6d5:	add    BYTE PTR [rax],al
   14004a6d7:	add    BYTE PTR [rax-0x6c],ah
   14004a6da:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a6e5:	add    BYTE PTR [rax],al
   14004a6e7:	add    BYTE PTR [rsi],ch
   14004a6e9:	(bad)  
   14004a6ea:	push   r14
   14004a6ec:	push   rsp
   14004a6ed:	imul   ebx,DWORD PTR [rax+0x6d],0x7369566c
   14004a6f4:	imul   esi,DWORD PTR [rdi+rbp*2+0x72],0x4040
   14004a6fc:	add    BYTE PTR [rax],al
   14004a6fe:	add    BYTE PTR [rax],al
   14004a700:	(bad)  
   14004a701:	xchg   esp,eax
   14004a702:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a70d:	add    BYTE PTR [rax],al
   14004a70f:	add    BYTE PTR [rsi],ch
   14004a711:	(bad)  
   14004a712:	push   r14
   14004a714:	jb     0x14004a78b
   14004a716:	outs   dx,BYTE PTR ds:[rsi]
   14004a717:	je     0x14004a782
   14004a719:	ins    DWORD PTR es:[rdi],dx
   14004a71a:	gs pop rdi
   14004a71c:	gs jb  0x14004a791
   14004a71f:	outs   dx,DWORD PTR ds:[rsi]
   14004a720:	jb     0x14004a762
   14004a722:	jae    0x14004a798
   14004a724:	fs rex
   14004a726:	add    BYTE PTR [rax-0x6c],spl
   14004a72a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a735:	add    BYTE PTR [rax],al
   14004a737:	add    BYTE PTR [rsi],ch
   14004a739:	(bad)  
   14004a73a:	push   r14
   14004a73c:	push   rsp
   14004a73d:	imul   ebx,DWORD PTR [rax+0x6d],0x7474416c
   14004a744:	jb     0x14004a7af
   14004a746:	(bad)  
   14004a747:	jne    0x14004a7bd
   14004a749:	gs rex
   14004a74b:	add    BYTE PTR [rax],al
   14004a74e:	add    BYTE PTR [rax],al
   14004a750:	(bad)  
   14004a751:	xchg   esp,eax
   14004a752:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a75d:	add    BYTE PTR [rax],al
   14004a75f:	add    BYTE PTR [rsi],ch
   14004a761:	(bad)  
   14004a762:	push   r14
   14004a764:	push   rsp
   14004a765:	imul   ebx,DWORD PTR [rax+0x6d],0x6d6f436c
   14004a76c:	ins    DWORD PTR es:[rdi],dx
   14004a76d:	outs   dx,BYTE PTR gs:[rsi]
   14004a76f:	je     0x14004a7b1
   14004a771:	add    BYTE PTR [rax],al
   14004a774:	add    BYTE PTR [rax],al
   14004a776:	add    BYTE PTR [rax],al
   14004a778:	(bad)  
   14004a779:	xchg   esp,eax
   14004a77a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a785:	add    BYTE PTR [rax],al
   14004a787:	add    BYTE PTR [rsi],ch
   14004a789:	(bad)  
   14004a78a:	push   r14
   14004a78c:	push   rsp
   14004a78d:	imul   ebx,DWORD PTR [rax+0x6d],0x6b6e556c
   14004a794:	outs   dx,BYTE PTR ds:[rsi]
   14004a795:	outs   dx,DWORD PTR ds:[rsi]
   14004a796:	ja     0x14004a806
   14004a798:	rex
   14004a799:	add    BYTE PTR [rax],al
   14004a79c:	add    BYTE PTR [rax],al
   14004a79e:	add    BYTE PTR [rax],al
   14004a7a0:	(bad)  
   14004a7a1:	xchg   esp,eax
   14004a7a2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a7ad:	add    BYTE PTR [rax],al
   14004a7af:	add    BYTE PTR [rsi],ch
   14004a7b1:	(bad)  
   14004a7b2:	push   r14
   14004a7b4:	push   rsp
   14004a7b5:	imul   ebx,DWORD PTR [rax+0x6d],0x656c456c
   14004a7bc:	ins    DWORD PTR es:[rdi],dx
   14004a7bd:	outs   dx,BYTE PTR gs:[rsi]
   14004a7bf:	je     0x14004a801
   14004a7c1:	add    BYTE PTR [rax],al
   14004a7c4:	add    BYTE PTR [rax],al
   14004a7c6:	add    BYTE PTR [rax],al
   14004a7c8:	(bad)  
   14004a7c9:	xchg   esp,eax
   14004a7ca:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a7d5:	add    BYTE PTR [rax],al
   14004a7d7:	add    BYTE PTR [rsi],ch
   14004a7d9:	(bad)  
   14004a7da:	push   r14
   14004a7dc:	data16 (bad) 
   14004a7de:	imul   ebp,DWORD PTR [rbp+rsi*2+0x72],0x6f694065
   14004a7e6:	jae    0x14004a847
   14004a7e8:	(bad)  
   14004a7ea:	jae    0x14004a851
   14004a7ec:	rex jae 0x14004a863
   14004a7ef:	fs rex
   14004a7f1:	add    BYTE PTR [rax],al
   14004a7f4:	add    BYTE PTR [rax],al
   14004a7f6:	add    BYTE PTR [rax],al
   14004a7f8:	(bad)  
   14004a7f9:	xchg   esp,eax
   14004a7fa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a805:	add    BYTE PTR [rax],al
   14004a807:	add    BYTE PTR [rsi],ch
   14004a809:	(bad)  
   14004a80a:	push   r14
   14004a80c:	push   rsp
   14004a80d:	imul   ebx,DWORD PTR [rax+0x6d],0x6972506c
   14004a814:	outs   dx,BYTE PTR ds:[rsi]
   14004a815:	je     0x14004a87c
   14004a817:	jb     0x14004a859
   14004a819:	add    BYTE PTR [rax],al
   14004a81c:	add    BYTE PTR [rax],al
   14004a81e:	add    BYTE PTR [rax],al
   14004a820:	nop
   14004a821:	xlat   BYTE PTR ds:[rbx]
   14004a822:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a82d:	add    BYTE PTR [rax],al
   14004a82f:	add    BYTE PTR [rax+0x14003cb],ch
   14004a835:	add    BYTE PTR [rax],al
   14004a837:	add    BYTE PTR [rip+0x26000000],al        # 0x16604a83d
   14004a83d:	add    BYTE PTR [rax],al
   14004a83f:	add    BYTE PTR [rax+0x14003cb],ah
   14004a845:	add    BYTE PTR [rax],al
   14004a847:	add    BYTE PTR [rax+rax*1],al
   14004a84a:	add    BYTE PTR [rax],al
   14004a84c:	cmp    al,0x0
   14004a84e:	add    BYTE PTR [rax],al
   14004a850:	cwde   
   14004a851:	retf   
   14004a852:	add    eax,DWORD PTR [rax+0x1]
   14004a855:	add    BYTE PTR [rax],al
   14004a857:	add    BYTE PTR [rax+rax*1],al
   14004a85a:	add    BYTE PTR [rax],al
   14004a85c:	add    BYTE PTR ds:[rax],al
   14004a85f:	add    BYTE PTR [rax+0x14003cb],dl
   14004a865:	add    BYTE PTR [rax],al
   14004a867:	add    BYTE PTR [rsi],al
   14004a869:	add    BYTE PTR [rax],al
   14004a86b:	add    BYTE PTR [rdx],ah
   14004a86d:	add    BYTE PTR [rax],al
   14004a86f:	add    BYTE PTR [rax+0x14003cb],cl
   14004a875:	add    BYTE PTR [rax],al
   14004a877:	add    BYTE PTR [rsi],al
   14004a879:	add    BYTE PTR [rax],al
   14004a87b:	add    BYTE PTR [rdi],ah
   14004a87d:	add    BYTE PTR [rax],al
   14004a87f:	add    BYTE PTR [rax-0x6c],ah
   14004a882:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a88d:	add    BYTE PTR [rax],al
   14004a88f:	add    BYTE PTR [rsi],ch
   14004a891:	(bad)  
   14004a892:	push   r14
   14004a894:	data16 (bad) 
   14004a896:	movsxd esp,DWORD PTR [rbp+0x74]
   14004a899:	rex ins BYTE PTR es:[rdi],dx
   14004a89b:	outs   dx,DWORD PTR ds:[rsi]
   14004a89c:	movsxd esp,DWORD PTR [rcx+0x6c]
   14004a89f:	gs rex jae 0x14004a917
   14004a8a3:	fs rex
   14004a8a5:	add    BYTE PTR [rax],al
   14004a8a8:	(bad)  
   14004a8a9:	xchg   esp,eax
   14004a8aa:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a8b5:	add    BYTE PTR [rax],al
   14004a8b7:	add    BYTE PTR [rsi],ch
   14004a8b9:	(bad)  
   14004a8ba:	push   r13
   14004a8bc:	movsxd esi,DWORD PTR [rcx+rdi*2+0x70]
   14004a8c0:	gs pop rdi
   14004a8c2:	(bad)  
   14004a8c4:	jae    0x14004a92b
   14004a8c6:	rex jae 0x14004a93d
   14004a8c9:	fs rex
   14004a8cb:	add    BYTE PTR [rax],al
   14004a8ce:	add    BYTE PTR [rax],al
   14004a8d0:	(bad)  
   14004a8d1:	xchg   esp,eax
   14004a8d2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a8dd:	add    BYTE PTR [rax],al
   14004a8df:	add    BYTE PTR [rsi],ch
   14004a8e1:	(bad)  
   14004a8e2:	push   r14
   14004a8e4:	(bad)  
   14004a8e5:	and    al,0x63
   14004a8e7:	je     0x14004a962
   14004a8e9:	jo     0x14004a950
   14004a8eb:	rex
   14004a8ec:	rex.R
   14004a8ed:	rex jae 0x14004a964
   14004a8f0:	fs rex
   14004a8f2:	add    BYTE PTR [rax],al
	...
   14004a8fd:	add    BYTE PTR [rax],al
   14004a8ff:	add    BYTE PTR [rax+0x14003d7],dl
	...
   14004a90d:	add    BYTE PTR [rax],al
   14004a90f:	add    al,al
   14004a911:	(bad)  
   14004a912:	add    eax,DWORD PTR [rax+0x1]
   14004a915:	add    BYTE PTR [rax],al
   14004a917:	add    BYTE PTR [rsp+rdx*8+0x14003],dh
   14004a91e:	add    BYTE PTR [rax],al
   14004a920:	movabs al,ds:0x88000000014003d4
   14004a929:	(bad)  
   14004a92a:	add    eax,DWORD PTR [rax+0x1]
   14004a92d:	add    BYTE PTR [rax],al
   14004a92f:	add    BYTE PTR [rax-0x2c],ch
   14004a932:	add    eax,DWORD PTR [rax+0x1]
   14004a935:	add    BYTE PTR [rax],al
   14004a937:	add    BYTE PTR [rax-0x2c],cl
   14004a93a:	add    eax,DWORD PTR [rax+0x1]
   14004a93d:	add    BYTE PTR [rax],al
   14004a93f:	add    BYTE PTR [rax],ch
   14004a941:	(bad)  
   14004a942:	add    eax,DWORD PTR [rax+0x1]
   14004a945:	add    BYTE PTR [rax],al
   14004a947:	add    BYTE PTR [rax],dl
   14004a949:	(bad)  
   14004a94a:	add    eax,DWORD PTR [rax+0x1]
   14004a94d:	add    BYTE PTR [rax],al
   14004a94f:	add    al,bh
   14004a951:	rol    DWORD PTR [rbx],cl
   14004a953:	rex add DWORD PTR [rax],eax
   14004a956:	add    BYTE PTR [rax],al
   14004a958:	loopne 0x14004a92d
   14004a95a:	add    eax,DWORD PTR [rax+0x1]
   14004a95d:	add    BYTE PTR [rax],al
   14004a95f:	add    al,cl
   14004a961:	rol    DWORD PTR [rbx],cl
   14004a963:	rex add DWORD PTR [rax],eax
   14004a966:	add    BYTE PTR [rax],al
   14004a968:	test   al,0xd3
   14004a96a:	add    eax,DWORD PTR [rax+0x1]
   14004a96d:	add    BYTE PTR [rax],al
   14004a96f:	add    BYTE PTR [rax+0x14003d3],dl
   14004a975:	add    BYTE PTR [rax],al
   14004a977:	add    BYTE PTR [rax-0x2d],bl
   14004a97a:	add    eax,DWORD PTR [rax+0x1]
   14004a97d:	add    BYTE PTR [rax],al
   14004a97f:	add    BYTE PTR [rax-0x2d],al
   14004a982:	add    eax,DWORD PTR [rax+0x1]
   14004a985:	add    BYTE PTR [rax],al
   14004a987:	add    al,ah
   14004a989:	rol    BYTE PTR [rbx],cl
   14004a98b:	rex add DWORD PTR [rax],eax
   14004a98e:	add    BYTE PTR [rax],al
   14004a990:	nop
   14004a991:	xlat   BYTE PTR ds:[rbx]
   14004a992:	add    eax,DWORD PTR [rax+0x1]
   14004a995:	add    BYTE PTR [rax],al
   14004a997:	add    BYTE PTR [rax-0x6c],ah
   14004a99a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a9a5:	add    BYTE PTR [rax],al
   14004a9a7:	add    BYTE PTR [rsi],ch
   14004a9a9:	(bad)  
   14004a9aa:	push   r14
   14004a9ac:	push   rsi
   14004a9ad:	gs jb  0x14004aa23
   14004a9b0:	imul   ebp,DWORD PTR [rdi+0x6e],0x4040
   14004a9b7:	add    al,ah
   14004a9b9:	(bad)  
   14004a9ba:	add    eax,DWORD PTR [rax+0x1]
   14004a9bd:	add    BYTE PTR [rax],al
   14004a9bf:	add    BYTE PTR [rax-0x6c],ah
   14004a9c2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004a9cd:	add    BYTE PTR [rax],al
   14004a9cf:	add    BYTE PTR [rsi],ch
   14004a9d1:	(bad)  
   14004a9d2:	push   r14
   14004a9d4:	outs   dx,DWORD PTR ds:[rsi]
   14004a9d5:	jne    0x14004aa4b
   14004a9d7:	pop    rdi
   14004a9d8:	outs   dx,DWORD PTR ds:[rsi]
   14004a9d9:	pop    di
   14004a9db:	jb     0x14004aa3e
   14004a9dd:	outs   dx,BYTE PTR ds:[rsi]
   14004a9de:	addr32 gs rex jae 0x14004aa57
   14004a9e3:	fs rex
   14004a9e5:	add    BYTE PTR [rax],al
   14004a9e8:	nop
   14004a9e9:	xlat   BYTE PTR ds:[rbx]
   14004a9ea:	add    eax,DWORD PTR [rax+0x1]
   14004a9ed:	add    BYTE PTR [rax],al
   14004a9ef:	add    BYTE PTR [rax+0x14003d7],dl
   14004a9f5:	add    BYTE PTR [rax],al
   14004a9f7:	add    bh,bh
   14004a9f9:	(bad)  
   14004a9fa:	(bad)  
   14004a9fb:	inc    DWORD PTR [rax]
   14004a9fd:	add    BYTE PTR [rax],al
   14004a9ff:	add    BYTE PTR [rax+0x14003d7],dl
	...
   14004aa0d:	add    BYTE PTR [rax],al
   14004aa0f:	add    BYTE PTR [rax+0x14003d7],dl
   14004aa15:	add    BYTE PTR [rax],al
   14004aa17:	add    BYTE PTR [rdx],cl
   14004aa19:	add    BYTE PTR [rax],al
   14004aa1b:	add    BYTE PTR [rax],al
   14004aa1d:	add    BYTE PTR [rax],al
   14004aa1f:	add    BYTE PTR [rbx+0x6f],al
   14004aa22:	jo     0x14004aa9d
   14004aa24:	jb     0x14004aa8f
   14004aa26:	addr32 push 0x63282074
   14004aa2c:	sub    DWORD PTR [rax],esp
   14004aa2e:	xor    DWORD PTR [rcx],edi
   14004aa30:	cmp    DWORD PTR [rdx],esi
   14004aa32:	sub    eax,0x34303032
   14004aa37:	and    BYTE PTR [rdx+0x79],ah
   14004aa3a:	and    BYTE PTR [rax+0x2e],dl
   14004aa3d:	rex.WX
   14004aa3e:	and    BYTE PTR cs:[rax+0x6c],dl
   14004aa42:	(bad)  
   14004aa43:	jne    0x14004aaac
   14004aa45:	gs jb  0x14004aa74
   14004aa48:	and    BYTE PTR [rcx+rbp*2+0x63],ch
   14004aa4c:	outs   dx,BYTE PTR gs:[rsi]
   14004aa4e:	jae    0x14004aab5
   14004aa50:	and    BYTE PTR fs:[rdx+0x79],ah
   14004aa54:	and    BYTE PTR [rcx+rbp*2+0x6e],al
   14004aa58:	imul   esi,DWORD PTR [rbp+0x6d],0x77
   14004aa5c:	(bad)  
   14004aa5d:	jb     0x14004aac4
   14004aa5f:	sub    al,0x20
   14004aa61:	rex.WR je 0x14004aac8
   14004aa64:	and    BYTE PTR cs:[rcx+0x4c],al
   14004aa68:	rex.WR and BYTE PTR [rdx+0x49],r10b
   14004aa6c:	rex.RXB
   14004aa6d:	rex.W push rsp
   14004aa6f:	push   rbx
   14004aa70:	and    BYTE PTR [rdx+0x45],dl
   14004aa73:	push   rbx
   14004aa74:	rex.RB push r10
   14004aa76:	push   rsi
   14004aa77:	rex.RB
   14004aa78:	rex.R
   14004aa79:	add    BYTE PTR cs:[rax],al
   14004aa7c:	add    BYTE PTR [rax],al
   14004aa7e:	add    BYTE PTR [rax],al
   14004aa80:	nop
   14004aa81:	xlat   BYTE PTR ds:[rbx]
   14004aa82:	add    eax,DWORD PTR [rax+0x1]
   14004aa85:	add    BYTE PTR [rax],al
   14004aa87:	add    BYTE PTR [rcx],al
   14004aa89:	add    BYTE PTR [rax],al
   14004aa8b:	add    BYTE PTR [rax],al
   14004aa8d:	add    BYTE PTR [rax],al
   14004aa8f:	add    al,dh
   14004aa91:	cmc    
   14004aa92:	add    al,0x40
   14004aa94:	add    DWORD PTR [rax],eax
	...
   14004aa9e:	add    BYTE PTR [rax],al
   14004aaa0:	lock fld DWORD PTR [rbx]
   14004aaa3:	rex add DWORD PTR [rax],eax
   14004aaa6:	add    BYTE PTR [rax],al
   14004aaa8:	nop
   14004aaa9:	xlat   BYTE PTR ds:[rbx]
   14004aaaa:	add    eax,DWORD PTR [rax+0x1]
   14004aaad:	add    BYTE PTR [rax],al
   14004aaaf:	add    BYTE PTR [rax+0x14003d7],dl
   14004aab5:	add    BYTE PTR [rax],al
   14004aab7:	add    BYTE PTR [rax-0x6c],ah
   14004aaba:	add    eax,DWORD PTR [rax+0x1]
	...
   14004aac5:	add    BYTE PTR [rax],al
   14004aac7:	add    BYTE PTR [rsi],ch
   14004aac9:	(bad)  
   14004aaca:	push   r14
   14004aacc:	gs js  0x14004ab32
   14004aacf:	gs jo  0x14004ab46
   14004aad2:	imul   ebp,DWORD PTR [rdi+0x6e],0x64747340
   14004aad9:	rex
   14004aada:	add    BYTE PTR [rax],al
   14004aadd:	add    BYTE PTR [rax],al
   14004aadf:	add    BYTE PTR [rax-0x6c],ah
   14004aae2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004aaed:	add    BYTE PTR [rax],al
   14004aaef:	add    BYTE PTR [rsi],ch
   14004aaf1:	(bad)  
   14004aaf2:	push   r14
   14004aaf4:	ins    BYTE PTR es:[rdi],dx
   14004aaf5:	outs   dx,DWORD PTR ds:[rsi]
   14004aaf6:	imul   esp,DWORD PTR [ebx+0x5f],0x6f727265
   14004aafe:	jb     0x14004ab40
   14004ab00:	jae    0x14004ab76
   14004ab02:	fs rex
   14004ab04:	add    BYTE PTR [rax],al
   14004ab07:	add    BYTE PTR [rcx],al
   14004ab09:	add    BYTE PTR [rax],al
   14004ab0b:	add    BYTE PTR [rax],al
   14004ab0d:	add    BYTE PTR [rax],al
   14004ab0f:	add    BYTE PTR [rax-0x6c],ah
   14004ab12:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ab1d:	add    BYTE PTR [rax],al
   14004ab1f:	add    BYTE PTR [rsi],ch
   14004ab21:	(bad)  
   14004ab22:	push   r14
   14004ab24:	ins    BYTE PTR es:[rdi],dx
   14004ab25:	outs   dx,BYTE PTR gs:[rsi]
   14004ab27:	addr32 je 0x14004ab92
   14004ab2a:	pop    rdi
   14004ab2b:	gs jb  0x14004aba0
   14004ab2e:	outs   dx,DWORD PTR ds:[rsi]
   14004ab2f:	jb     0x14004ab71
   14004ab31:	jae    0x14004aba7
   14004ab33:	fs rex
   14004ab35:	add    BYTE PTR [rax],al
   14004ab38:	(bad)  
   14004ab39:	xchg   esp,eax
   14004ab3a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ab45:	add    BYTE PTR [rax],al
   14004ab47:	add    BYTE PTR [rsi],ch
   14004ab49:	(bad)  
   14004ab4a:	push   r14
   14004ab4c:	(bad)
   14004ab51:	ins    BYTE PTR es:[rdi],dx
   14004ab52:	ins    BYTE PTR es:[rdi],dx
   14004ab53:	outs   dx,DWORD PTR ds:[rsi]
   14004ab54:	movsxd eax,DWORD PTR [rax+0x73]
   14004ab57:	je     0x14004abbd
   14004ab59:	rex
   14004ab5a:	add    BYTE PTR [rax],al
   14004ab5d:	add    BYTE PTR [rax],al
   14004ab5f:	add    BYTE PTR [rax-0x6c],ah
   14004ab62:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ab6d:	add    BYTE PTR [rax],al
   14004ab6f:	add    BYTE PTR [rsi],ch
   14004ab71:	(bad)  
   14004ab72:	push   r14
   14004ab74:	push   rbx
   14004ab75:	gs jb  0x14004abee
   14004ab78:	imul   esp,DWORD PTR [rbx+0x65],0x70736552
   14004ab7f:	outs   dx,DWORD PTR ds:[rsi]
   14004ab80:	outs   dx,BYTE PTR ds:[rsi]
   14004ab81:	jae    0x14004abe8
   14004ab83:	rex
   14004ab84:	add    BYTE PTR [rax],al
   14004ab87:	add    BYTE PTR [rax-0x6c],ah
   14004ab8a:	add    eax,DWORD PTR [rax+0x1]
	...
   14004ab95:	add    BYTE PTR [rax],al
   14004ab97:	add    BYTE PTR [rsi],ch
   14004ab99:	(bad)  
   14004ab9a:	push   r14
   14004ab9c:	push   rbx
   14004ab9d:	gs jb  0x14004ac16
   14004aba0:	imul   esp,DWORD PTR [rbx+0x65],0x75716552
   14004aba7:	gs jae 0x14004ac1e
   14004abaa:	rex
   14004abab:	add    BYTE PTR [rax],al
   14004abae:	add    BYTE PTR [rax],al
   14004abb0:	(bad)  
   14004abb1:	xchg   esp,eax
   14004abb2:	add    eax,DWORD PTR [rax+0x1]
	...
   14004abbd:	add    BYTE PTR [rax],al
   14004abbf:	add    BYTE PTR [rsi],ch
   14004abc1:	(bad)  
   14004abc2:	push   r14
   14004abc4:	pop    rax
   14004abc5:	rex.WRB
   14004abc6:	rex.WR push rsp
   14004abc8:	jb     0x14004ac2b
   14004abca:	outs   dx,BYTE PTR ds:[rsi]
   14004abcb:	jae    0x14004ac2e
   14004abcd:	movsxd esi,DWORD PTR [rcx+rbp*2+0x6f]
   14004abd1:	outs   dx,BYTE PTR ds:[rsi]
   14004abd2:	rex
   14004abd3:	add    BYTE PTR [rax],al
	...

Disassembly of section .pdata:

0000000140051000 <.pdata>:
   140051000:	add    BYTE PTR [rax],dl
   140051002:	add    BYTE PTR [rax],al
   140051004:	sbb    eax,0xb0000010
   140051009:	rex.WX add al,0x0
   14005100c:	push   rax
   14005100d:	adc    BYTE PTR [rax],al
   14005100f:	add    BYTE PTR [rcx+0x78000010],cl
   140051015:	or     eax,DWORD PTR [rax+rax*1]
   140051018:	movabs al,ds:0x6800001104000010
   140051021:	rex.WRB add al,0x0
   140051024:	xor    BYTE PTR [rcx],dl
   140051026:	add    BYTE PTR [rax],al
   140051028:	xchg   ecx,eax
   140051029:	adc    DWORD PTR [rax],eax
   14005102b:	add    BYTE PTR [rax+0xb],bh
   14005102e:	add    al,0x0
   140051030:	movabs al,ds:0x94000011e4000011
   140051039:	rex.WRB add al,0x0
   14005103c:	lock adc DWORD PTR [rax],eax
   14005103f:	add    BYTE PTR [rbp+0x12],dl
   140051042:	add    BYTE PTR [rax],al
   140051044:	cmp    al,0x4d
   140051046:	add    al,0x0
   140051048:	(bad)  
   140051049:	adc    al,BYTE PTR [rax]
   14005104b:	add    BYTE PTR [rbx-0x6bffffee],dl
   140051051:	rex.WRB add al,0x0
   140051054:	movabs al,ds:0xec00001e35000012
   14005105d:	pop    rax
   14005105e:	add    al,0x0
   140051060:	rex (bad) 
   140051062:	add    BYTE PTR [rax],al
   140051064:	xchg   DWORD PTR [rdi],ebx
   140051066:	add    BYTE PTR [rax],al
   140051068:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051069:	pop    rax
   14005106a:	add    al,0x0
   14005106c:	nop
   14005106d:	(bad)  
   14005106e:	add    BYTE PTR [rax],al
   140051070:	movsxd esp,DWORD PTR [rcx]
   140051072:	add    BYTE PTR [rax],al
   140051074:	pop    rsp
   140051075:	pop    rax
   140051076:	add    al,0x0
   140051078:	jo     0x14005109b
   14005107a:	add    BYTE PTR [rax],al
   14005107c:	(bad)  
   14005107d:	and    eax,DWORD PTR [rax]
   14005107f:	add    BYTE PTR [rdi+rcx*2],ch
   140051082:	add    al,0x0
   140051084:	rex and eax,DWORD PTR [rax]
   140051087:	add    BYTE PTR [rcx+0x78000023],cl
   14005108d:	or     eax,DWORD PTR [rax+rax*1]
   140051090:	nop
   140051091:	and    eax,DWORD PTR [rax]
   140051093:	add    dl,al
   140051095:	and    eax,DWORD PTR [rax]
   140051097:	add    BYTE PTR [rbp+rcx*2+0x24000004],dl
   14005109e:	add    BYTE PTR [rax],al
   1400510a0:	rex.XB and al,0x0
   1400510a3:	add    BYTE PTR [rax+rbx*2],ch
   1400510a6:	add    al,0x0
   1400510a8:	push   rax
   1400510a9:	and    al,0x0
   1400510ab:	add    BYTE PTR [rsi],cl
   1400510ad:	and    eax,0x579c0000
   1400510b2:	add    al,0x0
   1400510b4:	adc    BYTE PTR [rip+0x252b0000],ah        # 0x1653010ba
   1400510ba:	add    BYTE PTR [rax],al
   1400510bc:	xchg   esp,eax
   1400510bd:	rex.WRB add al,0x0
   1400510c0:	xor    BYTE PTR [rip+0x26200000],ah        # 0x1662510c6
   1400510c6:	add    BYTE PTR [rax],al
   1400510c8:	jl     0x140051121
   1400510ca:	add    al,0x0
   1400510cc:	xor    BYTE PTR [rsi],ah
   1400510ce:	add    BYTE PTR [rax],al
   1400510d0:	rex.X (bad) 
   1400510d2:	add    BYTE PTR [rax],al
   1400510d4:	add    BYTE PTR [rsi+0x4],al
   1400510d7:	add    BYTE PTR [rax-0x24ffffd9],al
   1400510dd:	sub    BYTE PTR [rax],al
   1400510df:	add    BYTE PTR [rax],bh
   1400510e1:	rex.B add al,0x0
   1400510e4:	loopne 0x14005110e
   1400510e6:	add    BYTE PTR [rax],al
   1400510e8:	movabs al,ds:0xa000040b6c000029
   1400510f1:	sub    DWORD PTR [rax],eax
   1400510f3:	add    BYTE PTR [rbp+0x2c000029],bh
   1400510f9:	rex.WRB add al,0x0
   1400510fc:	mov    ebp,0x7000029
   140051101:	sub    al,BYTE PTR [rax]
   140051103:	add    BYTE PTR [rax],bl
   140051105:	rex.WRB add al,0x0
   140051108:	(bad)  
   140051109:	sub    al,BYTE PTR [rax]
   14005110b:	add    BYTE PTR [rbx],ah
   14005110d:	sub    al,BYTE PTR [rax]
   14005110f:	add    BYTE PTR [rax],cl
   140051111:	rex.WRB add al,0x0
   140051114:	xor    BYTE PTR [rdx],ch
   140051116:	add    BYTE PTR [rax],al
   140051118:	loopne 0x140051144
   14005111a:	add    BYTE PTR [rax],al
   14005111c:	add    al,0x40
   14005111e:	add    al,0x0
   140051120:	loopne 0x14005114c
   140051122:	add    BYTE PTR [rax],al
   140051124:	cmc    
   140051125:	sub    al,BYTE PTR [rax]
   140051127:	add    BYTE PTR [rax],bl
   140051129:	rex.WRXB add al,0x0
   14005112c:	cmc    
   14005112d:	sub    al,BYTE PTR [rax]
   14005112f:	add    BYTE PTR [rax],bh
   140051131:	sub    eax,DWORD PTR [rax]
   140051133:	add    BYTE PTR [rax],cl
   140051135:	rex.WRXB add al,0x0
   140051138:	cmp    BYTE PTR [rbx],ch
   14005113a:	add    BYTE PTR [rax],al
   14005113c:	(bad)  
   14005113d:	sub    eax,DWORD PTR [rax]
   14005113f:	add    ah,dh
   140051141:	rex.WRX add al,0x0
   140051144:	(bad)  
   140051145:	sub    eax,DWORD PTR [rax]
   140051147:	add    BYTE PTR [rbx+rbp*1+0x0],dh
   14005114b:	add    BYTE PTR [rax],cl
   14005114d:	rex.WRXB add al,0x0
   140051150:	sub    BYTE PTR [rbx],0x0
   140051153:	add    BYTE PTR [rdx+0x4400002b],bh
   140051159:	rex.WXB add al,0x0
   14005115c:	mov    edx,0x1900002b
   140051161:	sub    al,0x0
   140051163:	add    BYTE PTR [rax],dh
   140051165:	rex.WXB add al,0x0
   140051168:	sbb    DWORD PTR [rax+rax*1],ebp
   14005116b:	add    BYTE PTR [rsp+rbp*1],ch
   14005116e:	add    BYTE PTR [rax],al
   140051170:	and    BYTE PTR [rbx+0x4],cl
   140051173:	add    BYTE PTR [rax+0x2c],dl
   140051176:	add    BYTE PTR [rax],al
   140051178:	mov    ch,0x2c
   14005117a:	add    BYTE PTR [rax],al
   14005117c:	test   BYTE PTR [rbx],cl
   14005117e:	add    al,0x0
   140051180:	mov    ch,0x2c
   140051182:	add    BYTE PTR [rax],al
   140051184:	fild   QWORD PTR [rax+rax*1]
   140051187:	add    ah,dh
   140051189:	rex.WR add al,0x0
   14005118c:	fild   QWORD PTR [rax+rax*1]
   14005118f:	add    BYTE PTR [rcx],ch
   140051191:	sub    eax,0x4ce40000
   140051196:	add    al,0x0
   140051198:	xor    BYTE PTR [rip+0x2d780000],ch        # 0x16d7d119e
   14005119e:	add    BYTE PTR [rax],al
   1400511a0:	and    BYTE PTR [rsi],cl
   1400511a2:	add    al,0x0
   1400511a4:	sub    BYTE PTR [rip+0x2d8a0000],0x0        # 0x16d8f11ab
   1400511ab:	add    ah,bl
   1400511ad:	rex.WR add al,0x0
   1400511b0:	mov    ch,BYTE PTR [rip+0x2dda0000]        # 0x16ddf11b6
   1400511b6:	add    BYTE PTR [rax],al
   1400511b8:	(bad)  
   1400511b9:	rex.WR add al,0x0
   1400511bc:	fisubr DWORD PTR [rip+0x2ddc0000]        # 0x16de111c2
   1400511c2:	add    BYTE PTR [rax],al
   1400511c4:	mov    ah,0x4c
   1400511c6:	add    al,0x0
   1400511c8:	loopne 0x1400511f7
   1400511ca:	add    BYTE PTR [rax],al
   1400511cc:	and    eax,0x68000032
   1400511d1:	push   rsi
   1400511d2:	add    al,0x0
   1400511d4:	xor    BYTE PTR [rdx],dh
   1400511d6:	add    BYTE PTR [rax],al
   1400511d8:	fdiv   DWORD PTR [rdx]
   1400511da:	add    BYTE PTR [rax],al
   1400511dc:	add    BYTE PTR [rsi+0x4],dl
   1400511df:	add    al,ah
   1400511e1:	xor    al,BYTE PTR [rax]
   1400511e3:	add    BYTE PTR [rdx+0x33],al
   1400511e6:	add    BYTE PTR [rax],al
   1400511e8:	pushf  
   1400511e9:	sbb    BYTE PTR [rax+rax*1],al
   1400511ec:	push   rax
   1400511ed:	xor    eax,DWORD PTR [rax]
   1400511ef:	add    ch,ch
   1400511f1:	xor    eax,DWORD PTR [rax]
   1400511f3:	add    BYTE PTR [rcx+riz*1],dl
   1400511f6:	add    al,0x0
   1400511f8:	lock xor eax,DWORD PTR [rax]
   1400511fb:	add    BYTE PTR [rdi+0x34],bl
   1400511fe:	add    BYTE PTR [rax],al
   140051200:	ror    BYTE PTR [rsi+0x4],0x0
   140051204:	(bad)  
   140051205:	xor    al,0x0
   140051207:	add    BYTE PTR [rax-0x1bffffcb],ah
   14005120d:	rex.WXB add al,0x0
   140051210:	loopne 0x140051247
   140051212:	add    BYTE PTR [rax],al
   140051214:	cmp    eax,0x9c000036
   140051219:	sbb    BYTE PTR [rax+rax*1],al
   14005121c:	rex
   14005121d:	add    BYTE PTR ss:[rax],al
   140051220:	push   rdi
   140051221:	add    BYTE PTR ss:[rax],al
   140051224:	xchg   esp,eax
   140051225:	rex.WRB add al,0x0
   140051228:	(bad)  
   140051229:	add    BYTE PTR ss:[rax],al
   14005122c:	(bad)  
   14005122d:	add    BYTE PTR ss:[rax],al
   140051230:	lock push rbp
   140051232:	add    al,0x0
   140051234:	shl    BYTE PTR [rsi],1
   140051236:	add    BYTE PTR [rax],al
   140051238:	icebp  
   140051239:	add    BYTE PTR ss:[rax],al
   14005123c:	xchg   esp,eax
   14005123d:	rex.WRB add al,0x0
   140051240:	add    BYTE PTR [rdi],dh
   140051242:	add    BYTE PTR [rax],al
   140051244:	test   BYTE PTR [rdi],dh
   140051246:	add    BYTE PTR [rax],al
   140051248:	sub    BYTE PTR [rsi+0x4],cl
   14005124b:	add    BYTE PTR [rax-0x2cffffc9],ah
   140051251:	(bad)  
   140051252:	add    BYTE PTR [rax],al
   140051254:	xchg   esp,eax
   140051255:	rex.WRB add al,0x0
   140051258:	loopne 0x140051291
   14005125a:	add    BYTE PTR [rax],al
   14005125c:	movsxd edi,DWORD PTR [rax]
   14005125e:	add    BYTE PTR [rax],al
   140051260:	pop    rax
   140051261:	push   rbp
   140051262:	add    al,0x0
   140051264:	jo     0x14005129e
   140051266:	add    BYTE PTR [rax],al
   140051268:	lods   al,BYTE PTR ds:[rsi]
   140051269:	cmp    DWORD PTR [rax],eax
   14005126b:	add    BYTE PTR [rax-0x4ffffbac],dl
   140051271:	cmp    DWORD PTR [rax],eax
   140051273:	add    BYTE PTR [rsi+0x3a],cl
   140051276:	add    BYTE PTR [rax],al
   140051278:	push   0x50000454
   14005127d:	cmp    al,BYTE PTR [rax]
   14005127f:	add    BYTE PTR [rbp+0x3b],dl
   140051282:	add    BYTE PTR [rax],al
   140051284:	cld    
   140051285:	push   rbx
   140051286:	add    al,0x0
   140051288:	(bad)  
   140051289:	cmp    eax,DWORD PTR [rax]
   14005128b:	add    BYTE PTR [rdi-0x6bffffc5],dh
   140051291:	rex.WRB add al,0x0
   140051294:	sar    BYTE PTR [rbx],0x0
   140051297:	add    BYTE PTR [rsi+0x4800003e],ah
   14005129d:	push   rbx
   14005129e:	add    al,0x0
   1400512a0:	mov    al,0x3e
   1400512a2:	add    BYTE PTR [rax],al
   1400512a4:	(bad)  
   1400512a5:	add    BYTE PTR [rax],al
   1400512a8:	call   0x1800516ff
   1400512ad:	add    BYTE PTR [rax],al
   1400512b0:	fiadd  DWORD PTR [rcx+0x0]
   1400512b3:	add    BYTE PTR [rax-0x1ffffbae],cl
   1400512b9:	add    BYTE PTR [r8],al
   1400512bc:	push   0x43
   1400512be:	add    BYTE PTR [rax],al
   1400512c0:	xor    BYTE PTR [rdx+0x4],dl
   1400512c3:	add    BYTE PTR [rax+0x43],dh
   1400512c6:	add    BYTE PTR [rax],al
   1400512c8:	and    al,BYTE PTR [rdi+0x0]
   1400512cb:	add    BYTE PTR [rax+0x51],bl
   1400512ce:	add    al,0x0
   1400512d0:	xor    BYTE PTR [rdi+0x0],al
   1400512d3:	add    BYTE PTR [rax],dh
   1400512d5:	rex.WX add BYTE PTR [rax],al
   1400512d8:	in     al,0x50
   1400512da:	add    al,0x0
   1400512dc:	xor    BYTE PTR [rdx+0x0],cl
   1400512df:	add    BYTE PTR [rdi-0x17ffffb2],ah
   1400512e5:	rex.WRXB add al,0x0
   1400512e8:	mov    al,0x4e
   1400512ea:	add    BYTE PTR [rax],al
   1400512ec:	mov    bh,0x50
   1400512ee:	add    BYTE PTR [rax],al
   1400512f0:	xchg   esp,eax
   1400512f1:	rex.WX add al,0x0
   1400512f4:	rcl    BYTE PTR [rax+0x0],0x0
   1400512f8:	mov    ecx,0xb0000051
   1400512fd:	rex.WXB add al,0x0
   140051300:	rcl    BYTE PTR [rcx+0x0],1
   140051303:	add    cl,ah
   140051305:	push   rcx
   140051306:	add    BYTE PTR [rax],al
   140051308:	movabs al,ds:0xe6000051e100044b
   140051311:	push   rcx
   140051312:	add    BYTE PTR [rax],al
   140051314:	mov    WORD PTR [rbx+0x4],cs
   140051317:	add    dh,ah
   140051319:	push   rcx
   14005131a:	add    BYTE PTR [rax],al
   14005131c:	mov    ebp,0x74000052
   140051321:	rex.WXB add al,0x0
   140051324:	mov    ebp,0x14000052
   140051329:	push   rbx
   14005132a:	add    BYTE PTR [rax],al
   14005132c:	fs rex.WXB add al,0x0
   140051330:	adc    al,0x53
   140051332:	add    BYTE PTR [rax],al
   140051334:	pop    rsp
   140051335:	push   rbx
   140051336:	add    BYTE PTR [rax],al
   140051338:	push   rsp
   140051339:	rex.WXB add al,0x0
   14005133c:	(bad)  
   14005133d:	push   rbx
   14005133e:	add    BYTE PTR [rax],al
   140051340:	mov    edx,DWORD PTR [rbx+0x0]
   140051343:	add    BYTE PTR [rbx+rcx*2],dl
   140051346:	add    al,0x0
   140051348:	mov    edx,DWORD PTR [rbx+0x0]
   14005134b:	add    BYTE PTR [rax+0x54],cl
   14005134e:	add    BYTE PTR [rax],al
   140051350:	hlt    
   140051351:	rex.WX add al,0x0
   140051354:	rex.W push rsp
   140051356:	add    BYTE PTR [rax],al
   140051358:	pop    rdx
   140051359:	push   rsp
   14005135a:	add    BYTE PTR [rax],al
   14005135c:	(bad)  
   14005135d:	rex.WX add al,0x0
   140051360:	(bad)  
   140051361:	push   rsp
   140051362:	add    BYTE PTR [rax],al
   140051364:	adc    dl,BYTE PTR [rbp+0x0]
   140051367:	add    BYTE PTR [rax+0x2000044a],bh
   14005136d:	push   rbp
   14005136e:	add    BYTE PTR [rax],al
   140051370:	adc    DWORD PTR [rbp+0x0],0x44d9400
   140051377:	add    BYTE PTR [rax+0xd000055],dl
   14005137d:	push   rsi
   14005137e:	add    BYTE PTR [rax],al
   140051380:	js     0x14005138d
   140051382:	add    al,0x0
   140051384:	adc    BYTE PTR [rsi+0x0],dl
   140051387:	add    BYTE PTR [rdi+rdx*2],ah
   14005138a:	add    BYTE PTR [rax],al
   14005138c:	pushf  
   14005138d:	rex.WRB add al,0x0
   140051390:	xor    BYTE PTR [rdi+0x0],dl
   140051393:	add    BYTE PTR [rdx+0x57],ch
   140051396:	add    BYTE PTR [rax],al
   140051398:	xchg   esp,eax
   140051399:	rex.WRB add al,0x0
   14005139c:	jo     0x1400513f5
   14005139e:	add    BYTE PTR [rax],al
   1400513a0:	lods   eax,DWORD PTR ds:[rsi]
   1400513a1:	push   rdi
   1400513a2:	add    BYTE PTR [rax],al
   1400513a4:	xchg   esp,eax
   1400513a5:	rex.WRB add al,0x0
   1400513a8:	mov    al,0x57
   1400513aa:	add    BYTE PTR [rax],al
   1400513ac:	fist   WORD PTR [rdi+0x0]
   1400513af:	add    BYTE PTR [rax+0xb],bh
   1400513b2:	add    al,0x0
   1400513b4:	loopne 0x14005140d
   1400513b6:	add    BYTE PTR [rax],al
   1400513b8:	outs   dx,DWORD PTR ds:[rsi]
   1400513b9:	pop    rax
   1400513ba:	add    BYTE PTR [rax],al
   1400513bc:	xchg   esp,eax
   1400513bd:	rex.WRB add al,0x0
   1400513c0:	jo     0x14005141a
   1400513c2:	add    BYTE PTR [rax],al
   1400513c4:	lahf   
   1400513c5:	pop    rax
   1400513c6:	add    BYTE PTR [rax],al
   1400513c8:	js     0x1400513d5
   1400513ca:	add    al,0x0
   1400513cc:	movabs al,ds:0xf000005fbb000058
   1400513d5:	pop    rdx
   1400513d6:	add    al,0x0
   1400513d8:	rcr    BYTE PTR [rdi+0x0],0x0
   1400513dc:	mov    dh,0x60
   1400513de:	add    BYTE PTR [rax],al
   1400513e0:	pushf  
   1400513e1:	rex.WRXB add al,0x0
   1400513e4:	loopne 0x140051446
   1400513e6:	add    BYTE PTR [rax],al
   1400513e8:	or     BYTE PTR [rcx+0x0],ah
   1400513eb:	add    BYTE PTR [rdi+rcx*2+0x61100004],dl
   1400513f2:	add    BYTE PTR [rax],al
   1400513f4:	cdq    
   1400513f5:	(bad)  
   1400513f6:	add    BYTE PTR [rax],al
   1400513f8:	test   BYTE PTR [rbx],cl
   1400513fa:	add    al,0x0
   1400513fc:	cdq    
   1400513fd:	(bad)  
   1400513fe:	add    BYTE PTR [rax],al
   140051400:	(bad)  
   140051401:	(bad)  
   140051402:	add    BYTE PTR [rax],al
   140051404:	or     BYTE PTR [rdi+0x4],0x0
   140051408:	(bad)  
   140051409:	(bad)  
   14005140a:	add    BYTE PTR [rax],al
   14005140c:	out    dx,al
   14005140d:	(bad)  
   14005140e:	add    BYTE PTR [rax],al
   140051410:	jo     0x140051461
   140051412:	add    al,0x0
   140051414:	lock (bad) 
   140051416:	add    BYTE PTR [rax],al
   140051418:	je     0x14005147c
   14005141a:	add    BYTE PTR [rax],al
   14005141c:	in     al,0xf
   14005141e:	add    al,0x0
   140051420:	je     0x140051484
   140051422:	add    BYTE PTR [rax],al
   140051424:	jle    0x140051488
   140051426:	add    BYTE PTR [rax],al
   140051428:	xor    BYTE PTR [rsi],al
   14005142a:	add    al,0x0
   14005142c:	nop
   14005142d:	(bad)  
   14005142e:	add    BYTE PTR [rax],al
   140051430:	shl    BYTE PTR [rdx+0x0],cl
   140051433:	add    BYTE PTR [rax+0xb],bh
   140051436:	add    al,0x0
   140051438:	in     al,dx
   140051439:	(bad)  
   14005143a:	add    BYTE PTR [rax],al
   14005143c:	xor    BYTE PTR [rbx+0x0],ah
   14005143f:	add    BYTE PTR [rax+0x6],cl
   140051442:	add    al,0x0
   140051444:	xor    BYTE PTR [rbx+0x0],ah
   140051447:	add    BYTE PTR [rsi+0x63],ah
   14005144a:	add    BYTE PTR [rax],al
   14005144c:	xor    BYTE PTR [rsi],al
   14005144e:	add    al,0x0
   140051450:	push   0xffffffff9c000063
   140051455:	movsxd eax,DWORD PTR [rax]
   140051457:	add    BYTE PTR [rbp+rcx*2+0x639c0004],dl
   14005145e:	add    BYTE PTR [rax],al
   140051460:	(bad)  
   140051461:	movsxd eax,DWORD PTR [rax]
   140051463:	add    BYTE PTR [rax+0xb],bh
   140051466:	add    al,0x0
   140051468:	fsub   DWORD PTR [rbx+0x0]
   14005146b:	add    dl,dh
   14005146d:	movsxd eax,DWORD PTR [rax]
   14005146f:	add    BYTE PTR [rax],dh
   140051471:	(bad)  
   140051472:	add    al,0x0
   140051474:	cld    
   140051475:	movsxd eax,DWORD PTR [rax]
   140051477:	add    BYTE PTR [rdi+0x64],bh
   14005147a:	add    BYTE PTR [rax],al
   14005147c:	mov    al,0x6
   14005147e:	add    al,0x0
   140051480:	movabs al,ds:0x94000064d5000064
   140051489:	rex.WRB add al,0x0
   14005148c:	fsub   DWORD PTR [rax+rax*1+0x0]
   140051490:	cli    
   140051491:	add    BYTE PTR fs:[rax],al
   140051494:	xor    BYTE PTR [rsi],al
   140051496:	add    al,0x0
   140051498:	cld    
   140051499:	add    BYTE PTR fs:[rax],al
   14005149c:	(bad)  
   14005149d:	add    BYTE PTR gs:[rax],al
   1400514a0:	xor    BYTE PTR [rsi],al
   1400514a2:	add    al,0x0
   1400514a4:	and    BYTE PTR [rbp+0x0],ah
   1400514a7:	add    BYTE PTR [rdx+0x65],al
   1400514aa:	add    BYTE PTR [rax],al
   1400514ac:	xor    BYTE PTR [rsi],al
   1400514ae:	add    al,0x0
   1400514b0:	rex.R
   1400514b1:	add    BYTE PTR gs:[rax],al
   1400514b4:	jne    0x14005151b
   1400514b6:	add    BYTE PTR [rax],al
   1400514b8:	enter  0x406,0x0
   1400514bc:	mov    WORD PTR [rbp+0x0],fs
   1400514bf:	add    BYTE PTR [rdi],bl
   1400514c1:	data16 add BYTE PTR [rax],al
   1400514c4:	and    BYTE PTR [rsi],cl
   1400514c6:	add    al,0x0
   1400514c8:	and    BYTE PTR [rsi+0x0],ah
   1400514cb:	add    BYTE PTR [rsi+0x66],al
   1400514ce:	add    BYTE PTR [rax],al
   1400514d0:	xchg   esp,eax
   1400514d1:	rex.WRB add al,0x0
   1400514d4:	rex.W
   1400514d5:	data16 add BYTE PTR [rax],al
   1400514d8:	push   0x66
   1400514da:	add    BYTE PTR [rax],al
   1400514dc:	xor    BYTE PTR [rsi],al
   1400514de:	add    al,0x0
   1400514e0:	ins    BYTE PTR es:[rdi],dx
   1400514e1:	data16 add BYTE PTR [rax],al
   1400514e4:	and    BYTE PTR [rsi+0x0],0x0
   1400514e8:	xor    BYTE PTR [rsi],al
   1400514ea:	add    al,0x0
   1400514ec:	and    BYTE PTR [rsi+0x0],0x0
   1400514f0:	in     eax,dx
   1400514f1:	data16 add BYTE PTR [rax],al
   1400514f4:	and    BYTE PTR [rsi],cl
   1400514f6:	add    al,0x0
   1400514f8:	lock data16 add BYTE PTR [rax],al
   1400514fc:	rex
   1400514fd:	add    BYTE PTR [eax],al
   140051500:	add    BYTE PTR [rdi],al
   140051502:	add    al,0x0
   140051504:	rex
   140051505:	add    BYTE PTR [eax],al
   140051508:	jl     0x140051571
   14005150a:	add    BYTE PTR [rax],al
   14005150c:	xor    BYTE PTR [rsi],al
   14005150e:	add    al,0x0
   140051510:	jl     0x140051579
   140051512:	add    BYTE PTR [rax],al
   140051514:	xchg   esp,eax
   140051515:	add    BYTE PTR [eax],al
   140051518:	xor    BYTE PTR [rsi],al
   14005151a:	add    al,0x0
   14005151c:	xchg   esp,eax
   14005151d:	add    BYTE PTR [eax],al
   140051520:	mov    ecx,0x30000067
   140051525:	(bad)  
   140051526:	add    al,0x0
   140051528:	mov    esp,0xa000067
   14005152d:	push   0x4d940000
   140051532:	add    al,0x0
   140051534:	or     al,0x68
   140051536:	add    BYTE PTR [rax],al
   140051538:	movabs al,ds:0xa000040844000069
   140051541:	imul   eax,DWORD PTR [rax],0x6a3900
   140051547:	add    BYTE PTR [rax+rcx*1+0x4],al
   14005154b:	add    BYTE PTR [rdx+rbp*2],bh
   14005154e:	add    BYTE PTR [rax],al
   140051550:	(bad)
   140051553:	add    BYTE PTR [rdi+rax*1+0x6bc80004],cl
   14005155a:	add    BYTE PTR [rax],al
   14005155c:	(bad)  
   14005155d:	imul   eax,DWORD PTR [rax],0x0
   140051560:	xchg   esp,eax
   140051561:	rex.WRB add al,0x0
   140051564:	in     al,dx
   140051565:	imul   eax,DWORD PTR [rax],0x0
   140051568:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051569:	ins    BYTE PTR es:[rdi],dx
   14005156a:	add    BYTE PTR [rax],al
   14005156c:	add    BYTE PTR [rax],cl
   14005156e:	add    al,0x0
   140051570:	test   al,0x6c
   140051572:	add    BYTE PTR [rax],al
   140051574:	shr    DWORD PTR [rax+rax*1+0x0],1
   140051578:	xchg   esp,eax
   140051579:	rex.WRB add al,0x0
   14005157c:	(bad)  
   14005157d:	ins    BYTE PTR es:[rdi],dx
   14005157e:	add    BYTE PTR [rax],al
   140051580:	add    al,0x6d
   140051582:	add    BYTE PTR [rax],al
   140051584:	xor    BYTE PTR [rsi],al
   140051586:	add    al,0x0
   140051588:	add    al,0x6d
   14005158a:	add    BYTE PTR [rax],al
   14005158c:	xchg   ebp,eax
   14005158d:	ins    DWORD PTR es:[rdi],dx
   14005158e:	add    BYTE PTR [rax],al
   140051590:	cmp    BYTE PTR [rax],cl
   140051592:	add    al,0x0
   140051594:	cwde   
   140051595:	ins    DWORD PTR es:[rdi],dx
   140051596:	add    BYTE PTR [rax],al
   140051598:	(bad)  
   140051599:	ins    DWORD PTR es:[rdi],dx
   14005159a:	add    BYTE PTR [rax],al
   14005159c:	xor    BYTE PTR [rsi],al
   14005159e:	add    al,0x0
   1400515a0:	int3   
   1400515a1:	ins    DWORD PTR es:[rdi],dx
   1400515a2:	add    BYTE PTR [rax],al
   1400515a4:	out    0x6d,al
   1400515a6:	add    BYTE PTR [rax],al
   1400515a8:	xor    BYTE PTR [rsi],al
   1400515aa:	add    al,0x0
   1400515ac:	call   0x15d05161e
   1400515b1:	outs   dx,BYTE PTR ds:[rsi]
   1400515b2:	add    BYTE PTR [rax],al
   1400515b4:	xchg   esp,eax
   1400515b5:	rex.WRB add al,0x0
   1400515b8:	and    BYTE PTR [rsi+0x0],ch
   1400515bb:	add    BYTE PTR [rsi+rbp*2+0xfe40000],ch
   1400515c2:	add    al,0x0
   1400515c4:	lods   al,BYTE PTR ds:[rsi]
   1400515c5:	outs   dx,BYTE PTR ds:[rsi]
   1400515c6:	add    BYTE PTR [rax],al
   1400515c8:	mov    ebx,0x3000006e
   1400515cd:	(bad)  
   1400515ce:	add    al,0x0
   1400515d0:	mov    esp,0x3200006e
   1400515d5:	outs   dx,DWORD PTR ds:[rsi]
   1400515d6:	add    BYTE PTR [rax],al
   1400515d8:	js     0x1400515e5
   1400515da:	add    al,0x0
   1400515dc:	xor    al,0x6f
   1400515de:	add    BYTE PTR [rax],al
   1400515e0:	jg     0x140051651
   1400515e2:	add    BYTE PTR [rax],al
   1400515e4:	xchg   esp,eax
   1400515e5:	rex.WRB add al,0x0
   1400515e8:	mov    al,0x6f
   1400515ea:	add    BYTE PTR [rax],al
   1400515ec:	cmc    
   1400515ed:	outs   dx,DWORD PTR ds:[rsi]
   1400515ee:	add    BYTE PTR [rax],al
   1400515f0:	xchg   esp,eax
   1400515f1:	rex.WRB add al,0x0
   1400515f4:	clc    
   1400515f5:	outs   dx,DWORD PTR ds:[rsi]
   1400515f6:	add    BYTE PTR [rax],al
   1400515f8:	in     al,dx
   1400515f9:	jo     0x1400515fb
   1400515fb:	add    BYTE PTR [rax+0xb],bh
   1400515fe:	add    al,0x0
   140051600:	in     al,dx
   140051601:	jo     0x140051603
   140051603:	add    BYTE PTR [rbx+0x71],bl
   140051606:	add    BYTE PTR [rax],al
   140051608:	js     0x140051615
   14005160a:	add    al,0x0
   14005160c:	pop    rsp
   14005160d:	jno    0x14005160f
   14005160f:	add    BYTE PTR [rbx+0x30000071],al
   140051615:	(bad)  
   140051616:	add    al,0x0
   140051618:	test   BYTE PTR [rcx+0x0],dh
   14005161b:	add    BYTE PTR [rdx+rsi*2],ch
   14005161e:	add    BYTE PTR [rax],al
   140051620:	or     BYTE PTR [rax+rax*1],r8b
   140051624:	sub    al,0x72
   140051626:	add    BYTE PTR [rax],al
   140051628:	jae    0x14005169c
   14005162a:	add    BYTE PTR [rax],al
   14005162c:	xor    BYTE PTR [rsi],al
   14005162e:	add    al,0x0
   140051630:	je     0x1400516a4
   140051632:	add    BYTE PTR [rax],al
   140051634:	movabs ds:0xa400040b78000072,eax
   14005163d:	jb     0x14005163f
   14005163f:	add    bl,dl
   140051641:	jb     0x140051643
   140051643:	add    BYTE PTR [rax+0xb],bh
   140051646:	add    al,0x0
   140051648:	(bad)  
   140051649:	jb     0x14005164b
   14005164b:	add    BYTE PTR [rip+0x30000073],ch        # 0x1700516c4
   140051651:	(bad)  
   140051652:	add    al,0x0
   140051654:	xor    BYTE PTR [rbx+0x0],dh
   140051657:	add    BYTE PTR [rdi+0x73],dl
   14005165a:	add    BYTE PTR [rax],al
   14005165c:	xor    BYTE PTR [rsi],al
   14005165e:	add    al,0x0
   140051660:	pop    rax
   140051661:	jae    0x140051663
   140051663:	add    BYTE PTR [rcx+0x74],al
   140051666:	add    BYTE PTR [rax],al
   140051668:	pop    rsp
   140051669:	or     BYTE PTR [rax+rax*1],al
   14005166c:	rex.R je 0x14005166f
   14005166f:	add    BYTE PTR [rax+0x75],ah
   140051672:	add    BYTE PTR [rax],al
   140051674:	pushf  
   140051675:	or     BYTE PTR [rax+rax*1],al
   140051678:	(bad)  
   140051679:	jne    0x14005167b
   14005167b:	add    BYTE PTR [rcx],ch
   14005167d:	jbe    0x14005167f
   14005167f:	add    BYTE PTR [rax+rcx*1+0x4],al
   140051683:	add    BYTE PTR [rsi+rsi*2],ch
   140051686:	add    BYTE PTR [rax],al
   140051688:	pop    rbx
   140051689:	jbe    0x14005168b
   14005168b:	add    BYTE PTR [rax+0xb],bh
   14005168e:	add    al,0x0
   140051690:	pop    rsp
   140051691:	jbe    0x140051693
   140051693:	add    bh,bh
   140051695:	jbe    0x140051697
   140051697:	add    BYTE PTR [rax+rcx*1+0x77000004],dh
   14005169e:	add    BYTE PTR [rax],al
   1400516a0:	stc    
   1400516a1:	jns    0x1400516a3
   1400516a3:	add    al,ch
   1400516a5:	or     BYTE PTR [rax+rax*1],al
   1400516a8:	cld    
   1400516a9:	jns    0x1400516ab
   1400516ab:	add    dh,dh
   1400516ad:	jp     0x1400516af
   1400516af:	add    BYTE PTR [rcx+rcx*1],dl
   1400516b2:	add    al,0x0
   1400516b4:	clc    
   1400516b5:	jp     0x1400516b7
   1400516b7:	add    BYTE PTR [rbx+rdi*2+0x0],bl
   1400516bb:	add    BYTE PTR [rax+0xb],bh
   1400516be:	add    al,0x0
   1400516c0:	pop    rsp
   1400516c1:	jnp    0x1400516c3
   1400516c3:	add    cl,ah
   1400516c5:	jnp    0x1400516c7
   1400516c7:	add    BYTE PTR [rax+0x9],al
   1400516ca:	add    al,0x0
   1400516cc:	in     al,0x7b
   1400516ce:	add    BYTE PTR [rax],al
   1400516d0:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400516d1:	jge    0x1400516d3
   1400516d3:	add    BYTE PTR [rax-0x5bfffbf7],al
   1400516d9:	jge    0x1400516db
   1400516db:	add    dh,ch
   1400516dd:	jge    0x1400516df
   1400516df:	add    BYTE PTR [rax+0xa],dh
   1400516e2:	add    al,0x0
   1400516e4:	lock jge 0x1400516e7
   1400516e7:	add    BYTE PTR [rsi],bh
   1400516e9:	jle    0x1400516eb
   1400516eb:	add    BYTE PTR [rax],dh
   1400516ed:	(bad)  
   1400516ee:	add    al,0x0
   1400516f0:	rex jle 0x1400516f3
   1400516f3:	add    BYTE PTR [rsi+rdi*2+0x0],ch
   1400516f7:	add    BYTE PTR [rax],dh
   1400516f9:	(bad)  
   1400516fa:	add    al,0x0
   1400516fc:	ins    BYTE PTR es:[rdi],dx
   1400516fd:	jle    0x1400516ff
   1400516ff:	add    al,al
   140051701:	jle    0x140051703
   140051703:	add    BYTE PTR [rax+0xb],bh
   140051706:	add    al,0x0
   140051708:	sar    BYTE PTR [rsi+0x0],0x0
   14005170c:	js     0x14005178d
   14005170e:	add    BYTE PTR [rax],al
   140051710:	lods   al,BYTE PTR ds:[rsi]
   140051711:	or     al,BYTE PTR [rax+rax*1]
   140051714:	js     0x140051795
   140051716:	add    BYTE PTR [rax],al
   140051718:	fnstsw WORD PTR [rdi+0x0]
   14005171b:	add    BYTE PTR [rax+0xb],bh
   14005171e:	add    al,0x0
   140051720:	loopne 0x1400517a1
   140051722:	add    BYTE PTR [rax],al
   140051724:	in     al,0x80
   140051726:	add    BYTE PTR [rax],al
   140051728:	in     al,0xf
   14005172a:	add    al,0x0
   14005172c:	in     al,0x80
   14005172e:	add    BYTE PTR [rax],al
   140051730:	jno    0x1400516b4
   140051732:	add    BYTE PTR [rax],al
   140051734:	fmul   QWORD PTR [rdx]
   140051736:	add    al,0x0
   140051738:	je     0x1400516bc
   14005173a:	add    BYTE PTR [rax],al
   14005173c:	(bad)
   140051740:	and    BYTE PTR [rsi],cl
   140051742:	add    al,0x0
   140051744:	(bad)
   140051748:	add    DWORD PTR [rbx+0xafc0000],0x4
   14005174f:	add    BYTE PTR [rbx+rax*4-0x7bc00000],al
   140051756:	add    BYTE PTR [rax],al
   140051758:	int3   
   140051759:	and    DWORD PTR [rax+rax*1],eax
   14005175c:	test   BYTE PTR [rax],al
   14005175f:	add    BYTE PTR [rdx-0x7c],dl
   140051762:	add    BYTE PTR [rax],al
   140051764:	xor    BYTE PTR [rsi],al
   140051766:	add    al,0x0
   140051768:	pop    rsp
   140051769:	test   BYTE PTR [rax],al
   14005176b:	add    BYTE PTR [rbp+0x38000084],bh
   140051771:	or     eax,DWORD PTR [rax+rax*1]
   140051774:	rol    BYTE PTR [rax+rax*1+0x856600],0x0
   14005177c:	ins    BYTE PTR es:[rdi],dx
   14005177d:	or     eax,DWORD PTR [rax+rax*1]
   140051780:	push   0xffffffff8e000085
   140051785:	test   DWORD PTR [rax],eax
   140051787:	add    BYTE PTR [rbp+rcx*2-0x7a6ffffc],dl
   14005178e:	add    BYTE PTR [rax],al
   140051790:	(bad)  
   140051791:	xchg   BYTE PTR [rax],al
   140051793:	add    ah,ah
   140051795:	(bad)  
   140051797:	add    BYTE PTR [rax],dl
   140051799:	xchg   BYTE PTR [rax],al
   14005179b:	add    al,bh
   14005179d:	xchg   BYTE PTR [rax],al
   14005179f:	add    BYTE PTR [rdi+riz*1-0x7907fffc],dh
   1400517a6:	add    BYTE PTR [rax],al
   1400517a8:	jne    0x140051731
   1400517aa:	add    BYTE PTR [rax],al
   1400517ac:	and    BYTE PTR [rsi],cl
   1400517ae:	add    al,0x0
   1400517b0:	js     0x140051739
   1400517b2:	add    BYTE PTR [rax],al
   1400517b4:	mov    dl,0x87
   1400517b6:	add    BYTE PTR [rax],al
   1400517b8:	xchg   esp,eax
   1400517b9:	rex.WRB add al,0x0
   1400517bc:	in     al,dx
   1400517bd:	xchg   DWORD PTR [rax],eax
   1400517bf:	add    BYTE PTR [rax+rcx*4],dh
   1400517c2:	add    BYTE PTR [rax],al
   1400517c4:	xor    BYTE PTR [rsi],al
   1400517c6:	add    al,0x0
   1400517c8:	xor    al,0x88
   1400517ca:	add    BYTE PTR [rax],al
   1400517cc:	(bad)  
   1400517cd:	mov    BYTE PTR [rax],al
   1400517cf:	add    BYTE PTR [rsi+rbx*1-0x779ffffc],dh
   1400517d6:	add    BYTE PTR [rax],al
   1400517d8:	(bad)  
   1400517d9:	mov    BYTE PTR [rax],al
   1400517db:	add    BYTE PTR [rax],dh
   1400517dd:	(bad)  
   1400517de:	add    al,0x0
   1400517e0:	enter  0x88,0x0
   1400517e4:	js     0x14005176f
   1400517e6:	add    BYTE PTR [rax],al
   1400517e8:	and    BYTE PTR [rsi],cl
   1400517ea:	add    al,0x0
   1400517ec:	enter  0x89,0x0
   1400517f0:	xor    DWORD PTR [rdx+0x4d940000],ecx
   1400517f6:	add    al,0x0
   1400517f8:	xor    al,0x8a
   1400517fa:	add    BYTE PTR [rax],al
   1400517fc:	movabs ds:0xa400040b7800008a,al
   140051805:	mov    al,BYTE PTR [rax]
   140051807:	add    ch,bl
   140051809:	mov    al,BYTE PTR [rax]
   14005180b:	add    BYTE PTR [rax+0xb],bh
   14005180e:	add    al,0x0
   140051810:	call   0x17305189f
   140051815:	mov    eax,DWORD PTR [rax]
   140051817:	add    BYTE PTR [rax+0xb],bh
   14005181a:	add    al,0x0
   14005181c:	cmp    al,0x8b
   14005181e:	add    BYTE PTR [rax],al
   140051820:	je     0x1400517ad
   140051822:	add    BYTE PTR [rax],al
   140051824:	xchg   esp,eax
   140051825:	rex.WRB add al,0x0
   140051828:	test   BYTE PTR [rbx-0x744b0000],cl
   14005182e:	add    BYTE PTR [rax],al
   140051830:	xchg   esp,eax
   140051831:	rex.WRB add al,0x0
   140051834:	mov    eax,0xe300008b
   140051839:	mov    eax,DWORD PTR [rax]
   14005183b:	add    BYTE PTR [rax],dh
   14005183d:	(bad)  
   14005183e:	add    al,0x0
   140051840:	in     al,0x8b
   140051842:	add    BYTE PTR [rax],al
   140051844:	mov    WORD PTR cs:[rax],es
   140051847:	add    BYTE PTR [rbp+rcx*2-0x73cffffc],dl
   14005184e:	add    BYTE PTR [rax],al
   140051850:	rex.X mov WORD PTR [rax],es
   140051853:	add    BYTE PTR [rax],dh
   140051855:	(bad)  
   140051856:	add    al,0x0
   140051858:	rex.R mov WORD PTR [rax],es
   14005185b:	add    BYTE PTR [rdi-0x74],ch
   14005185e:	add    BYTE PTR [rax],al
   140051860:	xor    BYTE PTR [rsi],al
   140051862:	add    al,0x0
   140051864:	jo     0x1400517f2
   140051866:	add    BYTE PTR [rax],al
   140051868:	mov    ch,0x8c
   14005186a:	add    BYTE PTR [rax],al
   14005186c:	js     0x140051879
   14005186e:	add    al,0x0
   140051870:	mov    eax,0x8900008c
   140051875:	lea    eax,[rax]
   140051877:	add    BYTE PTR [rax+0xb],bh
   14005187a:	add    al,0x0
   14005187c:	mov    WORD PTR [rbp-0x71e50000],cs
   140051882:	add    BYTE PTR [rax],al
   140051884:	test   BYTE PTR [rbx],cl
   140051886:	add    al,0x0
   140051888:	sbb    al,0x8e
   14005188a:	add    BYTE PTR [rax],al
   14005188c:	xor    eax,0x3000008e
   140051891:	(bad)  
   140051892:	add    al,0x0
   140051894:	cmp    BYTE PTR [rsi-0x71a00000],cl
   14005189a:	add    BYTE PTR [rax],al
   14005189c:	xor    BYTE PTR [rsi],al
   14005189e:	add    al,0x0
   1400518a0:	(bad)  
   1400518a1:	mov    es,WORD PTR [rax]
   1400518a3:	add    dh,al
   1400518a5:	mov    es,WORD PTR [rax]
   1400518a7:	add    BYTE PTR [rax-0x37fffbf5],bl
   1400518ad:	mov    es,WORD PTR [rax]
   1400518af:	add    cl,ch
   1400518b1:	mov    es,WORD PTR [rax]
   1400518b3:	add    BYTE PTR [rax],dh
   1400518b5:	(bad)  
   1400518b6:	add    al,0x0
   1400518b8:	in     al,dx
   1400518b9:	mov    es,WORD PTR [rax]
   1400518bb:	add    BYTE PTR [rdi+rcx*4+0x0],al
   1400518bf:	add    BYTE PTR [rax],ah
   1400518c1:	(bad)  
   1400518c2:	add    al,0x0
   1400518c4:	rex.R pop QWORD PTR [rax]
   1400518c7:	add    BYTE PTR [rdi+rcx*4+0x0],ah
   1400518cb:	add    BYTE PTR [rax],dh
   1400518cd:	(bad)  
   1400518ce:	add    al,0x0
   1400518d0:	pop    QWORD PTR fs:[rax]
   1400518d3:	add    bh,dl
   1400518d5:	pop    QWORD PTR [rax]
   1400518d7:	add    BYTE PTR [rbp+rcx*2-0x7027fffc],dl
   1400518de:	add    BYTE PTR [rax],al
   1400518e0:	push   0xffffffffffffff90
   1400518e2:	add    BYTE PTR [rax],al
   1400518e4:	js     0x1400518f1
   1400518e6:	add    al,0x0
   1400518e8:	ins    BYTE PTR es:[rdi],dx
   1400518e9:	nop
   1400518ea:	add    BYTE PTR [rax],al
   1400518ec:	(bad)  
   1400518ed:	nop
   1400518ee:	add    BYTE PTR [rax],al
   1400518f0:	xchg   esp,eax
   1400518f1:	rex.WRB add al,0x0
   1400518f4:	enter  0x90,0x0
   1400518f8:	imul   edx,DWORD PTR [rcx+0xfe40000],0x4
   1400518ff:	add    BYTE PTR [rcx+rdx*4+0x0],ch
   140051903:	add    BYTE PTR [rbp-0x3bffff6f],cl
   140051909:	or     eax,DWORD PTR [rax+rax*1]
   14005190c:	nop
   14005190d:	xchg   ecx,eax
   14005190e:	add    BYTE PTR [rax],al
   140051910:	(bad)  
   140051911:	xchg   ecx,eax
   140051912:	add    BYTE PTR [rax],al
   140051914:	loopne 0x140051921
   140051916:	add    al,0x0
   140051918:	(bad)  
   140051919:	xchg   ecx,eax
   14005191a:	add    BYTE PTR [rax],al
   14005191c:	or     DWORD PTR [rdx+0x4d940000],edx
   140051922:	add    al,0x0
   140051924:	or     al,0x92
   140051926:	add    BYTE PTR [rax],al
   140051928:	sub    al,0x92
   14005192a:	add    BYTE PTR [rax],al
   14005192c:	je     0x14005193a
   14005192e:	add    al,0x0
   140051930:	cmp    BYTE PTR [rdx-0x6bef0000],dl
   140051936:	add    BYTE PTR [rax],al
   140051938:	jl     0x140051946
   14005193a:	add    al,0x0
   14005193c:	adc    al,0x94
   14005193e:	add    BYTE PTR [rax],al
   140051940:	rcl    DWORD PTR [rax+rax*1+0x40c9800],cl
   140051947:	add    ah,dl
   140051949:	xchg   esp,eax
   14005194a:	add    BYTE PTR [rax],al
   14005194c:	xor    DWORD PTR [rsi+0xca40000],edx
   140051952:	add    al,0x0
   140051954:	xor    al,0x96
   140051956:	add    BYTE PTR [rax],al
   140051958:	(bad)  
   140051959:	xchg   esi,eax
   14005195a:	add    BYTE PTR [rax],al
   14005195c:	js     0x140051969
   14005195e:	add    al,0x0
   140051960:	pushf  
   140051961:	xchg   esi,eax
   140051962:	add    BYTE PTR [rax],al
   140051964:	movabs al,ds:0xa000040cbc000097
   14005196d:	xchg   edi,eax
   14005196e:	add    BYTE PTR [rax],al
   140051970:	sbb    bl,BYTE PTR [rcx+0xcd40000]
   140051976:	add    al,0x0
   140051978:	sbb    al,0x99
   14005197a:	add    BYTE PTR [rax],al
   14005197c:	push   0xffffffffec00009a
   140051981:	or     al,0x4
   140051983:	add    BYTE PTR [rax-0x66],ch
   140051986:	add    BYTE PTR [rax],al
   140051988:	push   rax
   140051989:	fwait
   14005198a:	add    BYTE PTR [rax],al
   14005198c:	xchg   esp,eax
   14005198d:	rex.WRB add al,0x0
   140051990:	push   rax
   140051991:	fwait
   140051992:	add    BYTE PTR [rax],al
   140051994:	adc    al,0x9c
   140051996:	add    BYTE PTR [rax],al
   140051998:	in     al,0xf
   14005199a:	add    al,0x0
   14005199c:	sbb    al,0x9c
   14005199e:	add    BYTE PTR [rax],al
   1400519a0:	(bad)  
   1400519a1:	popf   
   1400519a2:	add    BYTE PTR [rax],al
   1400519a4:	or     al,0xd
   1400519a6:	add    al,0x0
   1400519a8:	test   BYTE PTR [rbp-0x61d90000],bl
   1400519ae:	add    BYTE PTR [rax],al
   1400519b0:	mov    al,0xd
   1400519b2:	add    al,0x0
   1400519b4:	sub    BYTE PTR [rsi-0x61840000],bl
   1400519ba:	add    BYTE PTR [rax],al
   1400519bc:	js     0x1400519c9
   1400519be:	add    al,0x0
   1400519c0:	jl     0x140051960
   1400519c2:	add    BYTE PTR [rax],al
   1400519c4:	rcr    BYTE PTR [rsi+0xdec0000],1
   1400519ca:	add    al,0x0
   1400519cc:	rcr    BYTE PTR [rsi-0x5fae0000],1
   1400519d2:	add    BYTE PTR [rax],al
   1400519d4:	js     0x1400519e1
   1400519d6:	add    al,0x0
   1400519d8:	push   rsp
   1400519d9:	movabs al,ds:0x18c00000a1d60000
   1400519e2:	add    al,0x0
   1400519e4:	cmp    BYTE PTR [rdx-0x5d900000],ah
   1400519ea:	add    BYTE PTR [rax],al
   1400519ec:	xchg   esp,eax
   1400519ed:	rex.WRB add al,0x0
   1400519f0:	jo     0x140051994
   1400519f2:	add    BYTE PTR [rax],al
   1400519f4:	xchg   ebx,eax
   1400519f5:	movabs ds:0xa29400044d940000,al
   1400519fe:	add    BYTE PTR [rax],al
   140051a00:	mov    ah,0xa2
   140051a02:	add    BYTE PTR [rax],al
   140051a04:	xor    BYTE PTR [rsi],al
   140051a06:	add    al,0x0
   140051a08:	mov    ah,0xa2
   140051a0a:	add    BYTE PTR [rax],al
   140051a0c:	shl    BYTE PTR [rdx+0x6300000],cl
   140051a12:	add    al,0x0
   140051a14:	(bad)  
   140051a15:	movabs ds:0xe200000a3900000,al
   140051a1e:	add    al,0x0
   140051a20:	nop
   140051a21:	movabs ds:0xb780000a4270000,eax
   140051a2a:	add    al,0x0
   140051a2c:	sub    BYTE PTR [rax+rax*1+0xa4bc00],ah
   140051a33:	add    BYTE PTR [rax-0x43fffbf4],bl
   140051a39:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140051a3a:	add    BYTE PTR [rax],al
   140051a3c:	montmul (bad)
   140051a3d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140051a3e:	add    BYTE PTR [rax],al
   140051a40:	xor    BYTE PTR [rsi],cl
   140051a42:	add    al,0x0
   140051a44:	adc    BYTE PTR [rsi-0x59790000],ah
   140051a4a:	add    BYTE PTR [rax],al
   140051a4c:	add    BYTE PTR [rcx],ah
   140051a4e:	add    al,0x0
   140051a50:	mov    BYTE PTR [rsi-0x58a20000],ah
   140051a56:	add    BYTE PTR [rax],al
   140051a58:	push   rsp
   140051a59:	(bad)  
   140051a5a:	add    al,0x0
   140051a5c:	(bad)  
   140051a5d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140051a5e:	add    BYTE PTR [rax],al
   140051a60:	rex.R test al,0x0
   140051a63:	add    al,al
   140051a65:	(bad)  
   140051a66:	add    al,0x0
   140051a68:	rex.R test al,0x0
   140051a6b:	add    bl,dl
   140051a6d:	test   al,0x0
   140051a6f:	add    BYTE PTR [rdi+rcx*1],dh
   140051a72:	add    al,0x0
   140051a74:	(bad)  
   140051a75:	test   al,0x0
   140051a77:	add    BYTE PTR [rcx],bh
   140051a79:	test   eax,0xf400000
   140051a7e:	add    al,0x0
   140051a80:	cmp    al,0xa9
   140051a82:	add    BYTE PTR [rax],al
   140051a84:	pushf  
   140051a85:	test   eax,0xf940000
   140051a8a:	add    al,0x0
   140051a8c:	pushf  
   140051a8d:	test   eax,0xaafe0000
   140051a92:	add    BYTE PTR [rax],al
   140051a94:	js     0x140051aa1
   140051a96:	add    al,0x0
   140051a98:	add    BYTE PTR [rbx-0x54940000],ch
   140051a9e:	add    BYTE PTR [rax],al
   140051aa0:	js     0x140051aad
   140051aa2:	add    al,0x0
   140051aa4:	ins    BYTE PTR es:[rdi],dx
   140051aa5:	stos   DWORD PTR es:[rdi],eax
   140051aa6:	add    BYTE PTR [rax],al
   140051aa8:	jmp    0xe4051b58
   140051aad:	(bad)  
   140051aaf:	add    ah,ch
   140051ab1:	stos   DWORD PTR es:[rdi],eax
   140051ab2:	add    BYTE PTR [rax],al
   140051ab4:	fwait
   140051ab5:	lods   al,BYTE PTR ds:[rsi]
   140051ab6:	add    BYTE PTR [rax],al
   140051ab8:	cwde   
   140051ab9:	or     al,0x4
   140051abb:	add    BYTE PTR [rsp+rbp*4-0x4a480000],bl
   140051ac2:	add    BYTE PTR [rax],al
   140051ac4:	mov    al,0xf
   140051ac6:	add    al,0x0
   140051ac8:	mov    eax,0x5e0000b5
   140051acd:	mov    dh,0x0
   140051acf:	add    BYTE PTR [rax+0x6000041d],al
   140051ad5:	mov    dh,0x0
   140051ad7:	add    cl,bl
   140051ad9:	mov    dh,0x0
   140051adb:	add    BYTE PTR [rax+0xb],bh
   140051ade:	add    al,0x0
   140051ae0:	fdiv   QWORD PTR [rsi-0x490a0000]
   140051ae6:	add    BYTE PTR [rax],al
   140051ae8:	xor    BYTE PTR [rsi],al
   140051aea:	add    al,0x0
   140051aec:	clc    
   140051aed:	mov    dh,0x0
   140051aef:	add    BYTE PTR [rcx],bl
   140051af1:	mov    bh,0x0
   140051af3:	add    BYTE PTR [rax],dh
   140051af5:	(bad)  
   140051af6:	add    al,0x0
   140051af8:	sbb    al,0xb7
   140051afa:	add    BYTE PTR [rax],al
   140051afc:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140051afd:	mov    bh,0x0
   140051aff:	add    BYTE PTR [rcx+riz*1],dl
   140051b02:	add    al,0x0
   140051b04:	mov    al,0xb7
   140051b06:	add    BYTE PTR [rax],al
   140051b08:	in     al,0xb7
   140051b0a:	add    BYTE PTR [rax],al
   140051b0c:	js     0x140051b19
   140051b0e:	add    al,0x0
   140051b10:	in     al,0xb7
   140051b12:	add    BYTE PTR [rax],al
   140051b14:	jns    0x140051ace
   140051b16:	add    BYTE PTR [rax],al
   140051b18:	in     al,0xf
   140051b1a:	add    al,0x0
   140051b1c:	jl     0x140051ad6
   140051b1e:	add    BYTE PTR [rax],al
   140051b20:	sahf   
   140051b21:	mov    eax,0x6300000
   140051b26:	add    al,0x0
   140051b28:	movabs al,ds:0x780000b8cf0000b8
   140051b31:	or     eax,DWORD PTR [rax+rax*1]
   140051b34:	cld    
   140051b35:	mov    eax,0xb9680000
   140051b3a:	add    BYTE PTR [rax],al
   140051b3c:	ror    BYTE PTR [rdi],1
   140051b3e:	add    al,0x0
   140051b40:	push   0xffffffff900000b9
   140051b45:	mov    ecx,0x4d940000
   140051b4a:	add    al,0x0
   140051b4c:	test   al,0xb9
   140051b4e:	add    BYTE PTR [rax],al
   140051b50:	add    bh,BYTE PTR [rdx+0xfe40000]
   140051b56:	add    al,0x0
   140051b58:	or     al,0xba
   140051b5a:	add    BYTE PTR [rax],al
   140051b5c:	cmp    edi,DWORD PTR [rdx+0x21000000]
   140051b62:	add    al,0x0
   140051b64:	jo     0x140051b20
   140051b66:	add    BYTE PTR [rax],al
   140051b68:	sahf   
   140051b69:	mov    edx,0x6300000
   140051b6e:	add    al,0x0
   140051b70:	mov    eax,0xeb0000ba
   140051b75:	mov    edx,0x189c0000
   140051b7a:	add    al,0x0
   140051b7c:	in     al,dx
   140051b7d:	mov    edx,0xbb1f0000
   140051b82:	add    BYTE PTR [rax],al
   140051b84:	pushf  
   140051b85:	sbb    BYTE PTR [rax+rax*1],al
   140051b88:	and    BYTE PTR [rbx-0x44ad0000],bh
   140051b8e:	add    BYTE PTR [rax],al
   140051b90:	pushf  
   140051b91:	sbb    BYTE PTR [rax+rax*1],al
   140051b94:	push   rsp
   140051b95:	mov    ebx,0xbb870000
   140051b9a:	add    BYTE PTR [rax],al
   140051b9c:	pushf  
   140051b9d:	sbb    BYTE PTR [rax+rax*1],al
   140051ba0:	mov    BYTE PTR [rbx-0x44450000],bh
   140051ba6:	add    BYTE PTR [rax],al
   140051ba8:	pushf  
   140051ba9:	sbb    BYTE PTR [rax+rax*1],al
   140051bac:	mov    esp,0xef0000bb
   140051bb1:	mov    ebx,0x189c0000
   140051bb6:	add    al,0x0
   140051bb8:	lock mov ebx,0xbc230000
   140051bbe:	add    BYTE PTR [rax],al
   140051bc0:	pushf  
   140051bc1:	sbb    BYTE PTR [rax+rax*1],al
   140051bc4:	and    al,0xbc
   140051bc6:	add    BYTE PTR [rax],al
   140051bc8:	pop    rdx
   140051bc9:	mov    esp,0x189c0000
   140051bce:	add    al,0x0
   140051bd0:	pop    rsp
   140051bd1:	mov    esp,0xbc920000
   140051bd6:	add    BYTE PTR [rax],al
   140051bd8:	pushf  
   140051bd9:	sbb    BYTE PTR [rax+rax*1],al
   140051bdc:	mov    ah,0xbc
   140051bde:	add    BYTE PTR [rax],al
   140051be0:	(bad)  
   140051be1:	mov    esp,0x189c0000
   140051be6:	add    al,0x0
   140051be8:	in     al,dx
   140051be9:	mov    esp,0xbd220000
   140051bee:	add    BYTE PTR [rax],al
   140051bf0:	pushf  
   140051bf1:	sbb    BYTE PTR [rax+rax*1],al
   140051bf4:	and    al,0xbd
   140051bf6:	add    BYTE PTR [rax],al
   140051bf8:	jne    0x140051bb7
   140051bfa:	add    BYTE PTR [rax],al
   140051bfc:	clc    
   140051bfd:	(bad)  
   140051bff:	add    BYTE PTR [rax-0x43],bh
   140051c02:	add    BYTE PTR [rax],al
   140051c04:	scas   al,BYTE PTR es:[rdi]
   140051c05:	mov    ebp,0x189c0000
   140051c0a:	add    al,0x0
   140051c0c:	sar    BYTE PTR [rbp-0x420a0000],0x0
   140051c13:	add    BYTE PTR [rax+rbx*1-0x4207fffc],bl
   140051c1a:	add    BYTE PTR [rax],al
   140051c1c:	cs mov esi,0x189c0000
   140051c22:	add    al,0x0
   140051c24:	movabs rsi,0x6300000be650000
   140051c2e:	add    al,0x0
   140051c30:	push   0xffffffff850000be
   140051c35:	mov    esi,0x6300000
   140051c3a:	add    al,0x0
   140051c3c:	nop
   140051c3d:	mov    esi,0xbf2c0000
   140051c42:	add    BYTE PTR [rax],al
   140051c44:	adc    BYTE PTR [rax],dl
   140051c46:	add    al,0x0
   140051c48:	sub    al,0xbf
   140051c4a:	add    BYTE PTR [rax],al
   140051c4c:	(bad)  
   140051c4d:	mov    edi,0x10380000
   140051c52:	add    al,0x0
   140051c54:	fdivr  DWORD PTR [rdi-0x3f7f0000]
   140051c5a:	add    BYTE PTR [rax],al
   140051c5c:	adc    BYTE PTR fs:[rax+rax*1],al
   140051c60:	test   al,al
   140051c62:	add    BYTE PTR [rax],al
   140051c64:	scas   al,BYTE PTR es:[rdi]
   140051c65:	rol    DWORD PTR [rax],0x0
   140051c68:	pushf  
   140051c69:	adc    BYTE PTR [rax+rax*1],al
   140051c6c:	mov    al,0xc1
   140051c6e:	add    BYTE PTR [rax],al
   140051c70:	rex.WXB ret 0x0
   140051c74:	int3   
   140051c75:	adc    BYTE PTR [rax+rax*1],al
   140051c78:	ins    BYTE PTR es:[rdi],dx
   140051c79:	ret    0x0
   140051c7c:	ffree  st(2)
   140051c7e:	add    BYTE PTR [rax],al
   140051c80:	xchg   esp,eax
   140051c81:	rex.WRB add al,0x0
   140051c84:	loopne 0x140051c48
   140051c86:	add    BYTE PTR [rax],al
   140051c88:	movnti DWORD PTR [rax],eax
   140051c8b:	add    BYTE PTR [rax+0xb],bh
   140051c8e:	add    al,0x0
   140051c90:	sub    al,0xc3
   140051c92:	add    BYTE PTR [rax],al
   140051c94:	in     eax,dx
   140051c95:	ret    
   140051c96:	add    BYTE PTR [rax],al
   140051c98:	hlt    
   140051c99:	adc    BYTE PTR [rax+rax*1],al
   140051c9c:	lock ret 
   140051c9e:	add    BYTE PTR [rax],al
   140051ca0:	lods   eax,DWORD PTR ds:[rsi]
   140051ca1:	(bad)  
   140051ca2:	add    BYTE PTR [rax],al
   140051ca4:	hlt    
   140051ca5:	adc    BYTE PTR [rax+rax*1],al
   140051ca8:	mov    al,0xc4
   140051caa:	add    BYTE PTR [rax],al
   140051cac:	(bad)
   140051cb0:	and    BYTE PTR [rsi],cl
   140051cb2:	add    al,0x0
   140051cb4:	xor    ch,al
   140051cb6:	add    BYTE PTR [rax],al
   140051cb8:	(bad)  
   140051cb9:	(bad)
   140051cbc:	in     al,0xf
   140051cbe:	add    al,0x0
   140051cc0:	rol    ch,1
   140051cc2:	add    BYTE PTR [rax],al
   140051cc4:	push   rcx
   140051cc5:	mov    BYTE PTR [rax],0x0
   140051cc8:	and    BYTE PTR [rsi],cl
   140051cca:	add    al,0x0
   140051ccc:	push   rsp
   140051ccd:	mov    BYTE PTR [rax],0x0
   140051cd0:	mov    esi,eax
   140051cd2:	add    BYTE PTR [rax],al
   140051cd4:	xchg   esp,eax
   140051cd5:	rex.WRB add al,0x0
   140051cd8:	mov    esi,es
   140051cda:	add    BYTE PTR [rax],al
   140051cdc:	rol    esi,cl
   140051cde:	add    BYTE PTR [rax],al
   140051ce0:	or     al,0x11
   140051ce2:	add    al,0x0
   140051ce4:	(bad)  
   140051ce5:	mov    BYTE PTR [rax],0x0
   140051ce8:	sbb    eax,edi
   140051cea:	add    BYTE PTR [rax],al
   140051cec:	xor    al,0x11
   140051cee:	add    al,0x0
   140051cf0:	sbb    al,0xc7
   140051cf2:	add    BYTE PTR [rax],al
   140051cf4:	add    edi,0x0
   140051cf7:	add    BYTE PTR [rcx+rdx*1+0x4],bl
   140051cfb:	add    BYTE PTR [rdi+rax*8-0x37c80000],al
   140051d02:	add    BYTE PTR [rax],al
   140051d04:	mov    WORD PTR [rcx],ss
   140051d06:	add    al,0x0
   140051d08:	cmp    al,cl
   140051d0a:	add    BYTE PTR [rax],al
   140051d0c:	xchg   ebx,eax
   140051d0d:	enter  0x0,0xc8
   140051d11:	adc    DWORD PTR [rax+rax*1],eax
   140051d14:	xchg   esp,eax
   140051d15:	enter  0x0,0xef
   140051d19:	enter  0x0,0xf4
   140051d1d:	adc    DWORD PTR [rax+rax*1],eax
   140051d20:	lock enter 0x0,0x78
   140051d25:	leave  
   140051d26:	add    BYTE PTR [rax],al
   140051d28:	and    BYTE PTR [rdx],dl
   140051d2a:	add    al,0x0
   140051d2c:	js     0x140051cf7
   140051d2e:	add    BYTE PTR [rax],al
   140051d30:	add    dl,cl
   140051d32:	add    BYTE PTR [rax],al
   140051d34:	push   rax
   140051d35:	adc    al,BYTE PTR [rax+rax*1]
   140051d38:	add    dl,cl
   140051d3a:	add    BYTE PTR [rax],al
   140051d3c:	mov    dl,cl
   140051d3e:	add    BYTE PTR [rax],al
   140051d40:	adc    BYTE PTR [rdx],0x4
   140051d43:	add    BYTE PTR [rax+0x100000ca],cl
   140051d49:	retf   
   140051d4a:	add    BYTE PTR [rax],al
   140051d4c:	mov    al,0x12
   140051d4e:	add    al,0x0
   140051d50:	adc    bl,cl
   140051d52:	add    BYTE PTR [rax],al
   140051d54:	cwde   
   140051d55:	retf   
   140051d56:	add    BYTE PTR [rax],al
   140051d58:	loopne 0x140051d6c
   140051d5a:	add    al,0x0
   140051d5c:	cwde   
   140051d5d:	retf   
   140051d5e:	add    BYTE PTR [rax],al
   140051d60:	and    ah,cl
   140051d62:	add    BYTE PTR [rax],al
   140051d64:	adc    BYTE PTR [rbx],dl
   140051d66:	add    al,0x0
   140051d68:	and    ah,cl
   140051d6a:	add    BYTE PTR [rax],al
   140051d6c:	test   al,0xcc
   140051d6e:	add    BYTE PTR [rax],al
   140051d70:	rex adc eax,DWORD PTR [rax+rax*1]
   140051d74:	test   al,0xcc
   140051d76:	add    BYTE PTR [rax],al
   140051d78:	(bad)  
   140051d79:	int    0x0
   140051d7b:	add    BYTE PTR [rax+0x13],dh
   140051d7e:	add    al,0x0
   140051d80:	rex int 0x0
   140051d83:	add    al,cl
   140051d85:	int    0x0
   140051d87:	add    BYTE PTR [rbx+rdx*1-0x3237fffc],ah
   140051d8e:	add    BYTE PTR [rax],al
   140051d90:	and    ecx,esi
   140051d92:	add    BYTE PTR [rax],al
   140051d94:	(bad)  
   140051d95:	adc    eax,DWORD PTR [rax+rax*1]
   140051d98:	and    al,0xce
   140051d9a:	add    BYTE PTR [rax],al
   140051d9c:	jg     0x140051d6c
   140051d9e:	add    BYTE PTR [rax],al
   140051da0:	add    BYTE PTR [rsp+rax*1],dl
   140051da3:	add    BYTE PTR [rax+0x80000ce],al
   140051da9:	iret   
   140051daa:	add    BYTE PTR [rax],al
   140051dac:	sub    al,0x14
   140051dae:	add    al,0x0
   140051db0:	or     bh,cl
   140051db2:	add    BYTE PTR [rax],al
   140051db4:	mov    cs,edi
   140051db6:	add    BYTE PTR [rax],al
   140051db8:	pop    rsp
   140051db9:	adc    al,0x4
   140051dbb:	add    BYTE PTR [rax+0x450000cf],dl
   140051dc1:	rol    BYTE PTR [rax],1
   140051dc3:	add    BYTE PTR [rsp+rdx*1-0x2fb7fffc],cl
   140051dca:	add    BYTE PTR [rax],al
   140051dcc:	fst    st(0)
   140051dce:	add    BYTE PTR [rax],al
   140051dd0:	enter  0x414,0x0
   140051dd4:	loopne 0x140051da6
   140051dd6:	add    BYTE PTR [rax],al
   140051dd8:	push   rdi
   140051dd9:	rol    DWORD PTR [rax],1
   140051ddb:	add    ah,bh
   140051ddd:	adc    al,0x4
   140051ddf:	add    BYTE PTR [rax-0x2f],bl
   140051de2:	add    BYTE PTR [rax],al
   140051de4:	rcl    cl,1
   140051de6:	add    BYTE PTR [rax],al
   140051de8:	xor    BYTE PTR [rip+0xffffffffd1d00004],dl        # 0x111d51df2
   140051dee:	add    BYTE PTR [rax],al
   140051df0:	pop    rax
   140051df1:	rol    BYTE PTR [rax],cl
   140051df3:	add    BYTE PTR [rbp+rdx*1+0x4],bl
   140051df7:	add    BYTE PTR [rax-0x2e],bl
   140051dfa:	add    BYTE PTR [rax],al
   140051dfc:	loopne 0x140051dd0
   140051dfe:	add    BYTE PTR [rax],al
   140051e00:	xchg   esp,eax
   140051e01:	adc    eax,0xd2e00004
   140051e06:	add    BYTE PTR [rax],al
   140051e08:	(bad)  
   140051e09:	rol    DWORD PTR [rax],cl
   140051e0b:	add    ah,al
   140051e0d:	adc    eax,0xd3280004
   140051e12:	add    BYTE PTR [rax],al
   140051e14:	outs   dx,DWORD PTR ds:[rsi]
   140051e15:	rol    DWORD PTR [rax],cl
   140051e17:	add    ah,ch
   140051e19:	adc    eax,0xd3700004
   140051e1e:	add    BYTE PTR [rax],al
   140051e20:	xlat   BYTE PTR ds:[rbx]
   140051e21:	rol    DWORD PTR [rax],cl
   140051e23:	add    BYTE PTR [rsi+rdx*1],dl
   140051e26:	add    al,0x0
   140051e28:	fcom   st(3)
   140051e2a:	add    BYTE PTR [rax],al
   140051e2c:	xor    edx,esp
   140051e2e:	add    BYTE PTR [rax],al
   140051e30:	rex.R (bad) 
   140051e32:	add    al,0x0
   140051e34:	xor    al,0xd4
   140051e36:	add    BYTE PTR [rax],al
   140051e38:	test   esp,edx
   140051e3a:	add    BYTE PTR [rax],al
   140051e3c:	cwde   
   140051e3d:	or     al,0x4
   140051e3f:	add    BYTE PTR [rax-0x60ffff2c],cl
   140051e45:	(bad)  
   140051e46:	add    BYTE PTR [rax],al
   140051e48:	xor    BYTE PTR [rsi],al
   140051e4a:	add    al,0x0
   140051e4c:	movabs al,ds:0x700000d6f80000d4
   140051e55:	(bad)  
   140051e56:	add    al,0x0
   140051e58:	clc    
   140051e59:	(bad)  
   140051e5a:	add    BYTE PTR [rax],al
   140051e5c:	xlat   BYTE PTR es:[rbx]
   140051e5e:	add    BYTE PTR [rax],al
   140051e60:	xor    BYTE PTR [rsi],al
   140051e62:	add    al,0x0
   140051e64:	sub    bh,dl
   140051e66:	add    BYTE PTR [rax],al
   140051e68:	pop    rcx
   140051e69:	xlat   BYTE PTR ds:[rbx]
   140051e6a:	add    BYTE PTR [rax],al
   140051e6c:	mov    BYTE PTR [rsi],dl
   140051e6e:	add    al,0x0
   140051e70:	pop    rsp
   140051e71:	xlat   BYTE PTR ds:[rbx]
   140051e72:	add    BYTE PTR [rax],al
   140051e74:	adc    edi,0x0
   140051e77:	add    BYTE PTR [rax-0x7bfffbea],bh
   140051e7d:	xlat   BYTE PTR ds:[rbx]
   140051e7e:	add    BYTE PTR [rax],al
   140051e80:	not    bh
   140051e82:	add    BYTE PTR [rax],al
   140051e84:	js     0x140051e91
   140051e86:	add    al,0x0
   140051e88:	clc    
   140051e89:	xlat   BYTE PTR ds:[rbx]
   140051e8a:	add    BYTE PTR [rax],al
   140051e8c:	ins    DWORD PTR es:[rdi],dx
   140051e8d:	fadd   DWORD PTR [rax]
   140051e8f:	add    al,ch
   140051e91:	(bad)  
   140051e92:	add    al,0x0
   140051e94:	jo     0x140051e6e
   140051e96:	add    BYTE PTR [rax],al
   140051e98:	loop   0x140051e72
   140051e9a:	add    BYTE PTR [rax],al
   140051e9c:	js     0x140051ea9
   140051e9e:	add    al,0x0
   140051ea0:	in     al,0xd8
   140051ea2:	add    BYTE PTR [rax],al
   140051ea4:	cwde   
   140051ea5:	fld    DWORD PTR [rax]
   140051ea7:	add    BYTE PTR [rdi+rdx*1],cl
   140051eaa:	add    al,0x0
   140051eac:	cwde   
   140051ead:	fld    DWORD PTR [rax]
   140051eaf:	add    BYTE PTR [rcx+rbx*8+0x4d940000],bh
   140051eb6:	add    al,0x0
   140051eb8:	mov    esp,0x220000d9
   140051ebd:	fiadd  DWORD PTR [rax]
   140051ebf:	add    BYTE PTR [rbp+rcx*2-0x25dbfffc],dl
   140051ec6:	add    BYTE PTR [rax],al
   140051ec8:	jne    0x140051ea4
   140051eca:	add    BYTE PTR [rax],al
   140051ecc:	xchg   esp,eax
   140051ecd:	rex.WRB add al,0x0
   140051ed0:	js     0x140051eac
   140051ed2:	add    BYTE PTR [rax],al
   140051ed4:	sbb    ebx,ebx
   140051ed6:	add    BYTE PTR [rax],al
   140051ed8:	xor    al,0x17
   140051eda:	add    al,0x0
   140051edc:	sbb    al,0xdb
   140051ede:	add    BYTE PTR [rax],al
   140051ee0:	pop    rbp
   140051ee1:	fild   DWORD PTR [rax]
   140051ee3:	add    BYTE PTR [rax+0xb],bh
   140051ee6:	add    al,0x0
   140051ee8:	(bad)  
   140051ee9:	fild   DWORD PTR [rax]
   140051eeb:	add    BYTE PTR [rbx-0x6bffff25],cl
   140051ef1:	rex.WRB add al,0x0
   140051ef4:	mov    ebx,ds
   140051ef6:	add    BYTE PTR [rax],al
   140051ef8:	(bad)  
   140051ef9:	fild   DWORD PTR [rax]
   140051efb:	add    BYTE PTR [rax],ah
   140051efd:	(bad)  
   140051efe:	add    al,0x0
   140051f00:	in     al,dx
   140051f01:	fild   DWORD PTR [rax]
   140051f03:	add    BYTE PTR [rax],bh
   140051f05:	fadd   QWORD PTR [rax]
   140051f07:	add    BYTE PTR [rax+0xb],bh
   140051f0a:	add    al,0x0
   140051f0c:	cmp    ah,bl
   140051f0e:	add    BYTE PTR [rax],al
   140051f10:	cdq    
   140051f11:	fadd   QWORD PTR [rax]
   140051f13:	add    BYTE PTR [rbp+rcx*2-0x2363fffc],dl
   140051f1a:	add    BYTE PTR [rax],al
   140051f1c:	hlt    
   140051f1d:	fadd   QWORD PTR [rax]
   140051f1f:	add    BYTE PTR [rbp+rcx*2-0x230bfffc],dl
   140051f26:	add    BYTE PTR [rax],al
   140051f28:	pop    rcx
   140051f29:	fiadd  WORD PTR [rax]
   140051f2b:	add    BYTE PTR [rdi+rdx*1+0x4],ah
   140051f2f:	add    BYTE PTR [rsi+rbx*8+0x0],bl
   140051f33:	add    bh,ah
   140051f35:	fiadd  WORD PTR [rax]
   140051f37:	add    BYTE PTR [rax+0xb],bh
   140051f3a:	add    al,0x0
   140051f3c:	call   0x18605201f
   140051f41:	fild   WORD PTR [rax]
   140051f43:	add    BYTE PTR [rbx+riz*1-0x20b7fffc],bl
   140051f4a:	add    BYTE PTR [rax],al
   140051f4c:	repnz fild WORD PTR [rax]
   140051f4f:	add    ah,ah
   140051f51:	(bad)  
   140051f53:	add    ah,dh
   140051f55:	fild   WORD PTR [rax]
   140051f57:	add    BYTE PTR [rsi-0x20],dl
   140051f5a:	add    BYTE PTR [rax],al
   140051f5c:	cwde   
   140051f5d:	or     al,0x4
   140051f5f:	add    BYTE PTR [rax-0x20],bl
   140051f62:	add    BYTE PTR [rax],al
   140051f64:	(bad)  
   140051f65:	loopne 0x140051f67
   140051f67:	add    BYTE PTR [rbp+rcx*2-0x1f6ffffc],dl
   140051f6e:	add    BYTE PTR [rax],al
   140051f70:	rex.B loope 0x140051f73
   140051f73:	add    BYTE PTR [rax],ah
   140051f75:	(bad)  
   140051f76:	add    al,0x0
   140051f78:	rex.R loope 0x140051f7b
   140051f7b:	add    BYTE PTR [rdx-0x6bffff1f],al
   140051f81:	rex.WRB add al,0x0
   140051f84:	test   cl,ah
   140051f86:	add    BYTE PTR [rax],al
   140051f88:	scas   al,BYTE PTR es:[rdi]
   140051f89:	loope  0x140051f8b
   140051f8b:	add    BYTE PTR [rbp+rcx*2-0x1e4ffffc],dl
   140051f92:	add    BYTE PTR [rax],al
   140051f94:	cmc    
   140051f95:	loope  0x140051f97
   140051f97:	add    BYTE PTR [rax+0x17],dh
   140051f9a:	add    al,0x0
   140051f9c:	clc    
   140051f9d:	loope  0x140051f9f
   140051f9f:	add    BYTE PTR [rdi],ah
   140051fa1:	loop   0x140051fa3
   140051fa3:	add    BYTE PTR [rax],al
   140051fa5:	and    DWORD PTR [rax+rax*1],eax
   140051fa8:	sub    dl,ah
   140051faa:	add    BYTE PTR [rax],al
   140051fac:	mov    al,0xe2
   140051fae:	add    BYTE PTR [rax],al
   140051fb0:	and    BYTE PTR [rsi],cl
   140051fb2:	add    al,0x0
   140051fb4:	mov    al,0xe2
   140051fb6:	add    BYTE PTR [rax],al
   140051fb8:	(bad)  
   140051fb9:	loop   0x140051fbb
   140051fbb:	add    BYTE PTR [rax],dh
   140051fbd:	(bad)  
   140051fbe:	add    al,0x0
   140051fc0:	fsub   st,st(2)
   140051fc2:	add    BYTE PTR [rax],al
   140051fc4:	outs   dx,BYTE PTR ds:[rsi]
   140051fc5:	jrcxz  0x140051fc7
   140051fc7:	add    BYTE PTR [rax+0x17],bh
   140051fca:	add    al,0x0
   140051fcc:	jo     0x140051fb1
   140051fce:	add    BYTE PTR [rax],al
   140051fd0:	iret   
   140051fd1:	in     al,0x0
   140051fd3:	add    BYTE PTR [rax-0x2ffffbe9],bl
   140051fd9:	in     al,0x0
   140051fdb:	add    BYTE PTR [rcx-0x1b],dl
   140051fde:	add    BYTE PTR [rax],al
   140051fe0:	adc    al,0x21
   140051fe2:	add    al,0x0
   140051fe4:	push   rsp
   140051fe5:	in     eax,0x0
   140051fe7:	add    bl,ch
   140051fe9:	in     eax,0x0
   140051feb:	add    BYTE PTR [rax+rbx*1],dl
   140051fee:	add    al,0x0
   140051ff0:	in     al,dx
   140051ff1:	in     eax,0x0
   140051ff3:	add    BYTE PTR [rdi],bl
   140051ff5:	out    0x0,al
   140051ff7:	add    BYTE PTR [rbp+rcx*2-0x19dffffc],dl
   140051ffe:	add    BYTE PTR [rax],al
   140052000:	(bad)  
   140052002:	add    BYTE PTR [rax],al
   140052004:	js     0x140052011
   140052006:	add    al,0x0
   140052008:	loopne 0x140051ff0
   14005200a:	add    BYTE PTR [rax],al
   14005200c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005200d:	out    0x0,eax
   14005200f:	add    BYTE PTR [rax+rbx*1+0x4],al
   140052013:	add    BYTE PTR [rax-0x66ffff19],ch
   140052019:	call   0x15859201e
   14005201e:	add    al,0x0
   140052020:	pushf  
   140052021:	call   0x128d22026
   140052026:	add    BYTE PTR [rax],al
   140052028:	xchg   esp,eax
   140052029:	rex.WRB add al,0x0
   14005202c:	shr    al,1
   14005202e:	add    BYTE PTR [rax],al
   140052030:	add    ch,cl
   140052032:	add    BYTE PTR [rax],al
   140052034:	xchg   esp,eax
   140052035:	rex.WRB add al,0x0
   140052038:	add    al,0xe9
   14005203a:	add    BYTE PTR [rax],al
   14005203c:	xor    ecx,ebp
   14005203e:	add    BYTE PTR [rax],al
   140052040:	xor    BYTE PTR [rsi],al
   140052042:	add    al,0x0
   140052044:	xor    al,0xe9
   140052046:	add    BYTE PTR [rax],al
   140052048:	(bad)  
   140052049:	jmp    0x14635204e
   14005204e:	add    al,0x0
   140052050:	fs jmp 0x129b62056
   140052056:	add    BYTE PTR [rax],al
   140052058:	pushf  
   140052059:	sbb    BYTE PTR [rax+rax*1],al
   14005205c:	mov    ah,0xe9
   14005205e:	add    BYTE PTR [rax],al
   140052060:	add    edx,ebp
   140052062:	add    BYTE PTR [rax],al
   140052064:	pushf  
   140052065:	sbb    BYTE PTR [rax+rax*1],al
   140052068:	add    al,0xea
   14005206a:	add    BYTE PTR [rax],al
   14005206c:	push   rcx
   14005206d:	(bad)  
   14005206e:	add    BYTE PTR [rax],al
   140052070:	pushf  
   140052071:	sbb    BYTE PTR [rax+rax*1],al
   140052074:	push   rsp
   140052075:	(bad)  
   140052076:	add    BYTE PTR [rax],al
   140052078:	movabs eax,ds:0xa40004189c0000ea
   140052081:	(bad)  
   140052082:	add    BYTE PTR [rax],al
   140052084:	icebp  
   140052085:	(bad)  
   140052086:	add    BYTE PTR [rax],al
   140052088:	pushf  
   140052089:	sbb    BYTE PTR [rax+rax*1],al
   14005208c:	hlt    
   14005208d:	(bad)  
   14005208e:	add    BYTE PTR [rax],al
   140052090:	rex.B jmp 0x140052093
   140052093:	add    BYTE PTR [rax+rbx*1-0x14bbfffc],bl
   14005209a:	add    BYTE PTR [rax],al
   14005209c:	xchg   ecx,eax
   14005209d:	jmp    0x14005209f
   14005209f:	add    BYTE PTR [rax+rbx*1-0x146bfffc],bl
   1400520a6:	add    BYTE PTR [rax],al
   1400520a8:	jmp    0xdc052198
   1400520ad:	sbb    BYTE PTR [rax+rax*1],al
   1400520b0:	in     al,dx
   1400520b1:	jmp    0x1400520b3
   1400520b3:	add    BYTE PTR [rsp+rbp*8],bh
   1400520b6:	add    BYTE PTR [rax],al
   1400520b8:	pushf  
   1400520b9:	sbb    BYTE PTR [rax+rax*1],al
   1400520bc:	cmp    al,0xec
   1400520be:	add    BYTE PTR [rax],al
   1400520c0:	ins    BYTE PTR es:[rdi],dx
   1400520c1:	in     al,dx
   1400520c2:	add    BYTE PTR [rax],al
   1400520c4:	xor    BYTE PTR [rsi],al
   1400520c6:	add    al,0x0
   1400520c8:	ins    BYTE PTR es:[rdi],dx
   1400520c9:	in     al,dx
   1400520ca:	add    BYTE PTR [rax],al
   1400520cc:	pushf  
   1400520cd:	in     al,dx
   1400520ce:	add    BYTE PTR [rax],al
   1400520d0:	xor    BYTE PTR [rsi],al
   1400520d2:	add    al,0x0
   1400520d4:	pushf  
   1400520d5:	in     al,dx
   1400520d6:	add    BYTE PTR [rax],al
   1400520d8:	in     al,dx
   1400520d9:	in     al,dx
   1400520da:	add    BYTE PTR [rax],al
   1400520dc:	pushf  
   1400520dd:	sbb    BYTE PTR [rax+rax*1],al
   1400520e0:	in     al,dx
   1400520e1:	in     al,dx
   1400520e2:	add    BYTE PTR [rax],al
   1400520e4:	xor    ch,ch
   1400520e6:	add    BYTE PTR [rax],al
   1400520e8:	pushf  
   1400520e9:	sbb    BYTE PTR [rax+rax*1],al
   1400520ec:	xor    ch,ch
   1400520ee:	add    BYTE PTR [rax],al
   1400520f0:	mov    ch,0xed
   1400520f2:	add    BYTE PTR [rax],al
   1400520f4:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400520f5:	sbb    BYTE PTR [rax+rax*1],al
   1400520f8:	mov    eax,0x80000ed
   1400520fd:	out    dx,al
   1400520fe:	add    BYTE PTR [rax],al
   140052100:	pushf  
   140052101:	sbb    BYTE PTR [rax+rax*1],al
   140052104:	or     dh,ch
   140052106:	add    BYTE PTR [rax],al
   140052108:	cmp    dh,ch
   14005210a:	add    BYTE PTR [rax],al
   14005210c:	xor    BYTE PTR [rsi],al
   14005210e:	add    al,0x0
   140052110:	cmp    dh,ch
   140052112:	add    BYTE PTR [rax],al
   140052114:	jl     0x140052104
   140052116:	add    BYTE PTR [rax],al
   140052118:	pushf  
   140052119:	sbb    BYTE PTR [rax+rax*1],al
   14005211c:	pushf  
   14005211d:	out    dx,al
   14005211e:	add    BYTE PTR [rax],al
   140052120:	(bad)  
   140052121:	out    dx,al
   140052122:	add    BYTE PTR [rax],al
   140052124:	clc    
   140052125:	(bad)  
   140052127:	add    BYTE PTR [rax],al
   140052129:	out    dx,eax
   14005212a:	add    BYTE PTR [rax],al
   14005212c:	xor    al,0xef
   14005212e:	add    BYTE PTR [rax],al
   140052130:	mov    ah,0x1e
   140052132:	add    al,0x0
   140052134:	xor    al,0xef
   140052136:	add    BYTE PTR [rax],al
   140052138:	push   rbp
   140052139:	out    dx,eax
   14005213a:	add    BYTE PTR [rax],al
   14005213c:	xor    BYTE PTR [rsi],al
   14005213e:	add    al,0x0
   140052140:	pop    rax
   140052141:	out    dx,eax
   140052142:	add    BYTE PTR [rax],al
   140052144:	jns    0x140052135
   140052146:	add    BYTE PTR [rax],al
   140052148:	xor    BYTE PTR [rsi],al
   14005214a:	add    al,0x0
   14005214c:	jl     0x14005213d
   14005214e:	add    BYTE PTR [rax],al
   140052150:	stos   DWORD PTR es:[rdi],eax
   140052151:	out    dx,eax
   140052152:	add    BYTE PTR [rax],al
   140052154:	js     0x140052161
   140052156:	add    al,0x0
   140052158:	lods   al,BYTE PTR ds:[rsi]
   140052159:	out    dx,eax
   14005215a:	add    BYTE PTR [rax],al
   14005215c:	add    eax,esi
   14005215e:	add    BYTE PTR [rax],al
   140052160:	js     0x14005216d
   140052162:	add    al,0x0
   140052164:	add    al,0xf0
   140052166:	add    BYTE PTR [rax],al
   140052168:	xor    esi,eax
   14005216a:	add    BYTE PTR [rax],al
   14005216c:	xchg   esp,eax
   14005216d:	rex.WRB add al,0x0
   140052170:	xor    al,0xf0
   140052172:	add    BYTE PTR [rax],al
   140052174:	pop    rdx
   140052175:	lock add BYTE PTR [rax],al
   140052178:	xchg   esp,eax
   140052179:	rex.WRB add al,0x0
   14005217c:	pop    rsp
   14005217d:	lock add BYTE PTR [rax],al
   140052180:	sub    dh,cl
   140052182:	add    BYTE PTR [rax],al
   140052184:	or     BYTE PTR [rax+rax*1],r8b
   140052188:	sub    al,0xf1
   14005218a:	add    BYTE PTR [rax],al
   14005218c:	adc    edx,esi
   14005218e:	add    BYTE PTR [rax],al
   140052190:	lods   al,BYTE PTR ds:[rsi]
   140052191:	sbb    BYTE PTR [rax+rax*1],al
   140052194:	adc    al,0xf2
   140052196:	add    BYTE PTR [rax],al
   140052198:	shl    edx,1
   14005219a:	add    BYTE PTR [rax],al
   14005219c:	rcr    BYTE PTR [rax],0x4
   14005219f:	add    ah,dl
   1400521a1:	repnz add BYTE PTR [rax],al
   1400521a4:	rex.WXB
   1400521a5:	repz add BYTE PTR [rax],al
   1400521a8:	js     0x1400521b5
   1400521aa:	add    al,0x0
   1400521ac:	rex.WR
   1400521ad:	repz add BYTE PTR [rax],al
   1400521b0:	xchg   ebx,esi
   1400521b2:	add    BYTE PTR [rax],al
   1400521b4:	xchg   esp,eax
   1400521b5:	rex.WRB add al,0x0
   1400521b8:	mov    bl,dh
   1400521ba:	add    BYTE PTR [rax],al
   1400521bc:	jmp    0x1400521b1
   1400521be:	add    BYTE PTR [rax],al
   1400521c0:	add    BYTE PTR [rcx],ah
   1400521c2:	add    al,0x0
   1400521c4:	in     al,dx
   1400521c5:	repz add BYTE PTR [rax],al
   1400521c8:	push   rdi
   1400521c9:	hlt    
   1400521ca:	add    BYTE PTR [rax],al
   1400521cc:	cwde   
   1400521cd:	or     al,0x4
   1400521cf:	add    BYTE PTR [rax-0xc],bl
   1400521d2:	add    BYTE PTR [rax],al
   1400521d4:	retf   
   1400521d5:	hlt    
   1400521d6:	add    BYTE PTR [rax],al
   1400521d8:	add    BYTE PTR [rcx],ah
   1400521da:	add    al,0x0
   1400521dc:	shl    ah,1
   1400521de:	add    BYTE PTR [rax],al
   1400521e0:	(bad)  
   1400521e1:	cmc    
   1400521e2:	add    BYTE PTR [rax],al
   1400521e4:	or     BYTE PTR [rax+rax*1],r8b
   1400521e8:	hlt    
   1400521e9:	cmc    
   1400521ea:	add    BYTE PTR [rax],al
   1400521ec:	(bad)  
   1400521ed:	test   BYTE PTR [rax],0x0
   1400521f0:	xchg   esp,eax
   1400521f1:	rex.WRB add al,0x0
   1400521f4:	xor    al,0xf6
   1400521f6:	add    BYTE PTR [rax],al
   1400521f8:	pushf  
   1400521f9:	test   BYTE PTR [rax],0x0
   1400521fc:	js     0x140052209
   1400521fe:	add    al,0x0
   140052200:	in     al,0xf6
   140052202:	add    BYTE PTR [rax],al
   140052204:	xchg   bh,dh
   140052206:	add    BYTE PTR [rax],al
   140052208:	adc    al,0x21
   14005220a:	add    al,0x0
   14005220c:	mov    bh,dh
   14005220e:	add    BYTE PTR [rax],al
   140052210:	or     bh,al
   140052212:	add    BYTE PTR [rax],al
   140052214:	xchg   esp,eax
   140052215:	rex.WRB add al,0x0
   140052218:	or     al,0xf8
   14005221a:	add    BYTE PTR [rax],al
   14005221c:	cdq    
   14005221d:	stc    
   14005221e:	add    BYTE PTR [rax],al
   140052220:	in     al,dx
   140052221:	sbb    BYTE PTR [rax+rax*1],al
   140052224:	pushf  
   140052225:	stc    
   140052226:	add    BYTE PTR [rax],al
   140052228:	sahf   
   140052229:	cld    
   14005222a:	add    BYTE PTR [rax],al
   14005222c:	sbb    DWORD PTR fs:[rax+rax*1],eax
   140052230:	movabs al,ds:0x780000fd160000fc
   140052239:	or     eax,DWORD PTR [rax+rax*1]
   14005223c:	sbb    ch,bh
   14005223e:	add    BYTE PTR [rax],al
   140052240:	sar    dh,cl
   140052242:	add    BYTE PTR [rax],al
   140052244:	test   al,0x19
   140052246:	add    al,0x0
   140052248:	(bad)  
   140052249:	inc    BYTE PTR [rax]
   14005224b:	add    BYTE PTR [rcx-0x67ffff01],ah
   140052251:	or     al,0x4
   140052253:	add    BYTE PTR [rdi+rdi*8+0xd8c0000],ah
   14005225a:	add    DWORD PTR [rax],eax
   14005225c:	(bad)  
   14005225d:	sbb    DWORD PTR [rax+rax*1],eax
   140052260:	mov    WORD PTR [rip+0xeb80001],cs        # 0x14ebd2267
   140052266:	add    DWORD PTR [rax],eax
   140052268:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052269:	sbb    BYTE PTR [rax+rax*1],al
   14005226c:	mov    eax,0xf900010e
   140052271:	(bad)  
   140052272:	add    DWORD PTR [rax],eax
   140052274:	xchg   esp,eax
   140052275:	rex.WRB add al,0x0
   140052278:	cld    
   140052279:	(bad)  
   14005227a:	add    DWORD PTR [rax],eax
   14005227c:	mov    ch,0xf
   14005227e:	add    DWORD PTR [rax],eax
   140052280:	(bad)  
   140052281:	sbb    al,BYTE PTR [rax+rax*1]
   140052284:	mov    eax,0x100010f
   140052289:	adc    BYTE PTR [rcx],al
   14005228b:	add    BYTE PTR [rax+0x1b],dh
   14005228e:	add    al,0x0
   140052290:	add    al,0x10
   140052292:	add    DWORD PTR [rax],eax
   140052294:	test   al,0x10
   140052296:	add    DWORD PTR [rax],eax
   140052298:	add    al,0x1c
   14005229a:	add    al,0x0
   14005229c:	test   al,0x10
   14005229e:	add    DWORD PTR [rax],eax
   1400522a0:	adc    QWORD PTR [rcx],r8
   1400522a3:	add    BYTE PTR [rax+0x1c],al
   1400522a6:	add    al,0x0
   1400522a8:	adc    QWORD PTR [rcx],r8
   1400522ab:	add    BYTE PTR [rdx+0x111],ch
   1400522b1:	and    DWORD PTR [rax+rax*1],eax
   1400522b4:	lods   al,BYTE PTR ds:[rsi]
   1400522b5:	adc    DWORD PTR [rcx],eax
   1400522b7:	add    BYTE PTR [rdx+0x74000112],bl
   1400522bd:	sbb    al,0x4
   1400522bf:	add    BYTE PTR [rdx+rdx*1+0x135e0001],ah
   1400522c6:	add    DWORD PTR [rax],eax
   1400522c8:	rcr    BYTE PTR [rsp+rax*1],0x0
   1400522cc:	(bad)  
   1400522cd:	adc    eax,DWORD PTR [rcx]
   1400522cf:	add    BYTE PTR [rdx+0x78000113],dh
   1400522d5:	or     eax,DWORD PTR [rax+rax*1]
   1400522d8:	mov    ah,0x13
   1400522da:	add    DWORD PTR [rax],eax
   1400522dc:	adc    DWORD PTR [rdi],0x1d340001
   1400522e2:	add    al,0x0
   1400522e4:	test   BYTE PTR [rdi],dl
   1400522e6:	add    DWORD PTR [rax],eax
   1400522e8:	mov    ah,0x17
   1400522ea:	add    DWORD PTR [rax],eax
   1400522ec:	xchg   esp,eax
   1400522ed:	rex.WRB add al,0x0
   1400522f0:	enter  0x117,0x0
   1400522f4:	cld    
   1400522f5:	(bad)  
   1400522f6:	add    DWORD PTR [rax],eax
   1400522f8:	xor    BYTE PTR [rsi],al
   1400522fa:	add    al,0x0
   1400522fc:	cld    
   1400522fd:	(bad)  
   1400522fe:	add    DWORD PTR [rax],eax
   140052300:	xor    BYTE PTR [rax],bl
   140052302:	add    DWORD PTR [rax],eax
   140052304:	xor    BYTE PTR [rsi],al
   140052306:	add    al,0x0
   140052308:	xor    BYTE PTR [rax],bl
   14005230a:	add    DWORD PTR [rax],eax
   14005230c:	pop    rdi
   14005230d:	sbb    BYTE PTR [rcx],al
   14005230f:	add    BYTE PTR [rax],dh
   140052311:	(bad)  
   140052312:	add    al,0x0
   140052314:	(bad)  
   140052315:	sbb    BYTE PTR [rcx],al
   140052317:	add    BYTE PTR [rdi+0x30000118],cl
   14005231d:	(bad)  
   14005231e:	add    al,0x0
   140052320:	nop
   140052321:	sbb    BYTE PTR [rcx],al
   140052323:	add    BYTE PTR [rsi],al
   140052325:	sbb    DWORD PTR [rcx],eax
   140052327:	add    BYTE PTR [rax+rbx*1+0x19080004],bl
   14005232e:	add    DWORD PTR [rax],eax
   140052330:	ins    DWORD PTR es:[rdi],dx
   140052331:	sbb    DWORD PTR [rcx],eax
   140052333:	add    BYTE PTR [rax+0x70000422],dl
   140052339:	sbb    DWORD PTR [rcx],eax
   14005233b:	add    BYTE PTR [rdx],dh
   14005233d:	sbb    al,BYTE PTR [rcx]
   14005233f:	add    BYTE PTR [rax+0x1d],cl
   140052342:	add    al,0x0
   140052344:	xor    al,0x1a
   140052346:	add    DWORD PTR [rax],eax
   140052348:	(bad)  
   140052349:	sbb    al,BYTE PTR [rcx]
   14005234b:	add    BYTE PTR [rbp+rcx*2+0x1a600004],dl
   140052352:	add    DWORD PTR [rax],eax
   140052354:	movabs eax,ds:0xa40004229000011a
   14005235d:	sbb    al,BYTE PTR [rcx]
   14005235f:	add    BYTE PTR [rdi],al
   140052361:	sbb    eax,DWORD PTR [rcx]
   140052363:	add    BYTE PTR [rax+0xb],bh
   140052366:	add    al,0x0
   140052368:	or     BYTE PTR [rbx],bl
   14005236a:	add    DWORD PTR [rax],eax
   14005236c:	nop
   14005236d:	sbb    eax,DWORD PTR [rcx]
   14005236f:	add    BYTE PTR [rbp+rbx*1+0x4],ah
   140052373:	add    BYTE PTR [rax+0x2300011b],bl
   140052379:	sbb    eax,0xfe40001
   14005237e:	add    al,0x0
   140052380:	and    al,0x1d
   140052382:	add    DWORD PTR [rax],eax
   140052384:	neg    DWORD PTR [rip+0x1d6c0001]        # 0x15d71238b
   14005238a:	add    al,0x0
   14005238c:	clc    
   14005238d:	sbb    eax,0x1e310001
   140052392:	add    DWORD PTR [rax],eax
   140052394:	xor    BYTE PTR [rsi],al
   140052396:	add    al,0x0
   140052398:	xor    al,0x1e
   14005239a:	add    DWORD PTR [rax],eax
   14005239c:	jno    0x1400523bc
   14005239e:	add    DWORD PTR [rax],eax
   1400523a0:	js     0x1400523ad
   1400523a2:	add    al,0x0
   1400523a4:	je     0x1400523c4
   1400523a6:	add    DWORD PTR [rax],eax
   1400523a8:	jge    0x1400523ca
   1400523aa:	add    DWORD PTR [rax],eax
   1400523ac:	sbb    BYTE PTR [rip+0x20800004],0x1        # 0x1608523b7
   1400523b3:	add    BYTE PTR [rdi+0x21],ch
   1400523b6:	add    DWORD PTR [rax],eax
   1400523b8:	pushf  
   1400523b9:	sbb    eax,0x21700004
   1400523be:	add    DWORD PTR [rax],eax
   1400523c0:	mov    fs,WORD PTR [rcx]
   1400523c2:	add    DWORD PTR [rax],eax
   1400523c4:	in     al,dx
   1400523c5:	xor    BYTE PTR [rax+rax*1],al
   1400523c8:	mov    esp,0xde000121
   1400523cd:	and    DWORD PTR [rcx],eax
   1400523cf:	add    BYTE PTR [rbp+rcx*2+0x21e80004],dl
   1400523d6:	add    DWORD PTR [rax],eax
   1400523d8:	and    al,BYTE PTR [r9]
   1400523db:	add    BYTE PTR [rbp+rcx*2+0x224c0004],dl
   1400523e2:	add    DWORD PTR [rax],eax
   1400523e4:	ja     0x140052408
   1400523e6:	add    DWORD PTR [rax],eax
   1400523e8:	xor    BYTE PTR [rsi],al
   1400523ea:	add    al,0x0
   1400523ec:	nop
   1400523ed:	and    al,BYTE PTR [rcx]
   1400523ef:	add    BYTE PTR [rbx],dh
   1400523f1:	and    eax,DWORD PTR [rcx]
   1400523f3:	add    ah,bl
   1400523f5:	sbb    eax,0x23340004
   1400523fa:	add    DWORD PTR [rax],eax
   1400523fc:	push   rdi
   1400523fd:	and    eax,DWORD PTR [rcx]
   1400523ff:	add    BYTE PTR [rbp+rcx*2+0x23580004],dl
   140052406:	add    DWORD PTR [rax],eax
   140052408:	and    DWORD PTR [rbx],0x1
   14005240b:	add    BYTE PTR [rbp+rcx*2+0x23840004],dl
   140052412:	add    DWORD PTR [rax],eax
   140052414:	enter  0x123,0x0
   140052418:	js     0x140052425
   14005241a:	add    al,0x0
   14005241c:	enter  0x123,0x0
   140052420:	(bad)  
   140052421:	and    eax,DWORD PTR [rcx]
   140052423:	add    BYTE PTR [rax],dh
   140052425:	(bad)  
   140052426:	add    al,0x0
   140052428:	in     al,dx
   140052429:	and    eax,DWORD PTR [rcx]
   14005242b:	add    BYTE PTR [rip+0x78000124],ah        # 0x1b8052555
   140052431:	or     eax,DWORD PTR [rax+rax*1]
   140052434:	sub    BYTE PTR [rcx+rax*1],ah
   140052437:	add    BYTE PTR [rdx+0x24],dh
   14005243a:	add    DWORD PTR [rax],eax
   14005243c:	and    BYTE PTR [rsi],bl
   14005243e:	add    al,0x0
   140052440:	je     0x140052466
   140052442:	add    DWORD PTR [rax],eax
   140052444:	movabs ds:0xc400040b78000124,eax
   14005244d:	and    al,0x1
   14005244f:	add    BYTE PTR [rcx],cl
   140052451:	and    eax,0xb780001
   140052456:	add    al,0x0
   140052458:	or     al,0x25
   14005245a:	add    DWORD PTR [rax],eax
   14005245c:	pop    rbp
   14005245d:	and    eax,0xb780001
   140052462:	add    al,0x0
   140052464:	(bad)  
   140052465:	and    eax,0x259e0001
   14005246a:	add    DWORD PTR [rax],eax
   14005246c:	js     0x140052479
   14005246e:	add    al,0x0
   140052470:	movabs al,ds:0x78000125de000125
   140052479:	or     eax,DWORD PTR [rax+rax*1]
   14005247c:	loopne 0x1400524a3
   14005247e:	add    DWORD PTR [rax],eax
   140052480:	sbb    eax,0x78000126
   140052485:	or     eax,DWORD PTR [rax+rax*1]
   140052488:	mov    WORD PTR [rsi],fs
   14005248a:	add    DWORD PTR [rax],eax
   14005248c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005248d:	add    DWORD PTR es:[rax],eax
   140052490:	mov    ah,0x1e
   140052492:	add    al,0x0
   140052494:	test   al,0x26
   140052496:	add    DWORD PTR [rax],eax
   140052498:	out    0x26,eax
   14005249a:	add    DWORD PTR [rax],eax
   14005249c:	pushf  
   14005249d:	sbb    BYTE PTR [rax+rax*1],al
   1400524a0:	call   0x18c0525cb
   1400524a5:	(bad)  
   1400524a6:	add    DWORD PTR [rax],eax
   1400524a8:	pushf  
   1400524a9:	and    eax,DWORD PTR [rax+rax*1]
   1400524ac:	rex.WR (bad) 
   1400524ae:	add    DWORD PTR [rax],eax
   1400524b0:	addr32 (bad) 
   1400524b2:	add    DWORD PTR [rax],eax
   1400524b4:	mov    ah,0x1e
   1400524b6:	add    al,0x0
   1400524b8:	push   0xffffffff8d000127
   1400524bd:	(bad)  
   1400524be:	add    DWORD PTR [rax],eax
   1400524c0:	mov    ah,0x1e
   1400524c2:	add    al,0x0
   1400524c4:	nop
   1400524c5:	(bad)  
   1400524c6:	add    DWORD PTR [rax],eax
   1400524c8:	call   0x1380525f4
   1400524cd:	(bad)  
   1400524cf:	add    al,ch
   1400524d1:	(bad)  
   1400524d2:	add    DWORD PTR [rax],eax
   1400524d4:	add    eax,0xb4000128
   1400524d9:	(bad)  
   1400524da:	add    al,0x0
   1400524dc:	or     BYTE PTR [rax],ch
   1400524de:	add    DWORD PTR [rax],eax
   1400524e0:	outs   dx,DWORD PTR ds:[rsi]
   1400524e1:	sub    BYTE PTR [rcx],al
   1400524e3:	add    ah,ah
   1400524e5:	(bad)  
   1400524e7:	add    BYTE PTR [rax+0x28],dh
   1400524ea:	add    DWORD PTR [rax],eax
   1400524ec:	xlat   BYTE PTR ds:[rbx]
   1400524ed:	sub    BYTE PTR [rcx],al
   1400524ef:	add    ah,ah
   1400524f1:	(bad)  
   1400524f3:	add    al,bl
   1400524f5:	sub    BYTE PTR [rcx],al
   1400524f7:	add    BYTE PTR [rdi],bh
   1400524f9:	sub    DWORD PTR [rcx],eax
   1400524fb:	add    ah,ah
   1400524fd:	(bad)  
   1400524ff:	add    BYTE PTR [rax+0x29],al
   140052502:	add    DWORD PTR [rax],eax
   140052504:	int    0x29
   140052506:	add    DWORD PTR [rax],eax
   140052508:	and    BYTE PTR [rsp+rax*1],ah
   14005250b:	add    al,dl
   14005250d:	sub    DWORD PTR [rcx],eax
   14005250f:	add    BYTE PTR [rdi],dh
   140052511:	sub    al,BYTE PTR [rcx]
   140052513:	add    ah,ah
   140052515:	(bad)  
   140052517:	add    BYTE PTR [rax],bh
   140052519:	sub    al,BYTE PTR [rcx]
   14005251b:	add    ch,al
   14005251d:	sub    al,BYTE PTR [rcx]
   14005251f:	add    BYTE PTR [rax],ah
   140052521:	and    al,0x4
   140052523:	add    al,cl
   140052525:	sub    al,BYTE PTR [rcx]
   140052527:	add    ah,bh
   140052529:	sub    al,BYTE PTR [rcx]
   14005252b:	add    BYTE PTR [rax],dh
   14005252d:	(bad)  
   14005252e:	add    al,0x0
   140052530:	cld    
   140052531:	sub    al,BYTE PTR [rcx]
   140052533:	add    BYTE PTR [rdi],ah
   140052535:	sub    eax,DWORD PTR [rcx]
   140052537:	add    BYTE PTR [rax],dh
   140052539:	(bad)  
   14005253a:	add    al,0x0
   14005253c:	(bad)  
   14005253d:	sub    eax,DWORD PTR [rcx]
   14005253f:	add    BYTE PTR [rbx],al
   140052541:	sub    al,0x1
   140052543:	add    BYTE PTR [rsi+rbx*1+0x2c040004],bh
   14005254a:	add    DWORD PTR [rax],eax
   14005254c:	(bad)  
   14005254d:	sub    al,0x1
   14005254f:	add    BYTE PTR [rbp+rcx*2+0x2c280004],dl
   140052556:	add    DWORD PTR [rax],eax
   140052558:	jne    0x140052586
   14005255a:	add    DWORD PTR [rax],eax
   14005255c:	js     0x140052569
   14005255e:	add    al,0x0
   140052560:	js     0x14005258e
   140052562:	add    DWORD PTR [rax],eax
   140052564:	movabs al,ds:0xa00004063000012c
   14005256d:	sub    al,0x1
   14005256f:	add    BYTE PTR [rbx+0x2d],al
   140052572:	add    DWORD PTR [rax],eax
   140052574:	in     al,dx
   140052575:	(bad)  
   140052576:	add    al,0x0
   140052578:	rex.R sub eax,0x2d670001
   14005257e:	add    DWORD PTR [rax],eax
   140052580:	xchg   esp,eax
   140052581:	rex.WRB add al,0x0
   140052584:	push   0xffffffffac00012d
   140052589:	sub    eax,0xb780001
   14005258e:	add    al,0x0
   140052590:	lods   al,BYTE PTR ds:[rsi]
   140052591:	sub    eax,0x2dce0001
   140052596:	add    DWORD PTR [rax],eax
   140052598:	xor    BYTE PTR [rsi],al
   14005259a:	add    al,0x0
   14005259c:	shr    BYTE PTR [rip+0x2dff0001],1        # 0x16e0425a3
   1400525a2:	add    DWORD PTR [rax],eax
   1400525a4:	js     0x1400525b1
   1400525a6:	add    al,0x0
   1400525a8:	add    BYTE PTR [rsi],ch
   1400525aa:	add    DWORD PTR [rax],eax
   1400525ac:	push   rcx
   1400525ad:	add    DWORD PTR cs:[rax],eax
   1400525b0:	js     0x1400525bd
   1400525b2:	add    al,0x0
   1400525b4:	push   rsp
   1400525b5:	add    DWORD PTR cs:[rax],eax
   1400525b8:	mov    esi,0x2000012e
   1400525bd:	(bad)  
   1400525be:	add    al,0x0
   1400525c0:	shr    BYTE PTR [rsi],0x1
   1400525c3:	add    dl,dh
   1400525c5:	add    DWORD PTR cs:[rax],eax
   1400525c8:	xchg   esp,eax
   1400525c9:	rex.WRB add al,0x0
   1400525cc:	hlt    
   1400525cd:	add    DWORD PTR cs:[rax],eax
   1400525d0:	in     al,0x2f
   1400525d2:	add    DWORD PTR [rax],eax
   1400525d4:	and    al,0x1f
   1400525d6:	add    al,0x0
   1400525d8:	in     al,0x2f
   1400525da:	add    DWORD PTR [rax],eax
   1400525dc:	cld    
   1400525dd:	(bad)  
   1400525de:	add    DWORD PTR [rax],eax
   1400525e0:	xor    BYTE PTR [rsi],al
   1400525e2:	add    al,0x0
   1400525e4:	cld    
   1400525e5:	(bad)  
   1400525e6:	add    DWORD PTR [rax],eax
   1400525e8:	wrmsr  
   1400525ea:	add    DWORD PTR [rax],eax
   1400525ec:	xor    BYTE PTR [rsi],al
   1400525ee:	add    al,0x0
   1400525f0:	adc    BYTE PTR [rax],dh
   1400525f2:	add    DWORD PTR [rax],eax
   1400525f4:	je     0x140052626
   1400525f6:	add    DWORD PTR [rax],eax
   1400525f8:	xchg   esp,eax
   1400525f9:	rex.WRB add al,0x0
   1400525fc:	je     0x14005262e
   1400525fe:	add    DWORD PTR [rax],eax
   140052600:	mov    ?,WORD PTR [rax]
   140052602:	add    DWORD PTR [rax],eax
   140052604:	xor    BYTE PTR [rsi],al
   140052606:	add    al,0x0
   140052608:	nop
   140052609:	xor    BYTE PTR [rcx],al
   14005260b:	add    dl,dl
   14005260d:	xor    BYTE PTR [rcx],al
   14005260f:	add    BYTE PTR [rax],dh
   140052611:	(bad)  
   140052612:	add    al,0x0
   140052614:	(bad)  
   140052615:	xor    BYTE PTR [rcx],al
   140052617:	add    ch,dh
   140052619:	xor    BYTE PTR [rcx],al
   14005261b:	add    BYTE PTR [rax],dh
   14005261d:	(bad)  
   14005261e:	add    al,0x0
   140052620:	clc    
   140052621:	xor    BYTE PTR [rcx],al
   140052623:	add    BYTE PTR [rbx+rsi*1],ah
   140052626:	add    DWORD PTR [rax],eax
   140052628:	mov    ah,0x27
   14005262a:	add    al,0x0
   14005262c:	and    al,0x33
   14005262e:	add    DWORD PTR [rax],eax
   140052630:	rex.B xor al,0x1
   140052633:	add    BYTE PTR [rax+rcx*1+0x4],al
   140052637:	add    BYTE PTR [rsp+rsi*1+0x1],al
   14005263b:	add    BYTE PTR [rcx+0x34],bh
   14005263e:	add    DWORD PTR [rax],eax
   140052640:	xor    BYTE PTR [rsi],al
   140052642:	add    al,0x0
   140052644:	jl     0x14005267a
   140052646:	add    DWORD PTR [rax],eax
   140052648:	stos   DWORD PTR es:[rdi],eax
   140052649:	xor    al,0x1
   14005264b:	add    BYTE PTR [rax+0xb],bh
   14005264e:	add    al,0x0
   140052650:	lods   al,BYTE PTR ds:[rsi]
   140052651:	xor    al,0x1
   140052653:	add    BYTE PTR [rbx+0x35],dh
   140052656:	add    DWORD PTR [rax],eax
   140052658:	rex (bad) 
   14005265a:	add    al,0x0
   14005265c:	je     0x140052693
   14005265e:	add    DWORD PTR [rax],eax
   140052660:	(bad)  
   140052661:	add    DWORD PTR ss:[rax],eax
   140052664:	push   0xffffffff9000041f
   140052669:	add    DWORD PTR ss:[rax],eax
   14005266c:	(bad)  
   14005266d:	cmp    BYTE PTR [rcx],al
   14005266f:	add    BYTE PTR [rax],al
   140052671:	and    BYTE PTR [rax+rax*1],al
   140052674:	and    BYTE PTR [rax],bh
   140052676:	add    DWORD PTR [rax],eax
   140052678:	int3   
   140052679:	cmp    DWORD PTR [rcx],eax
   14005267b:	add    BYTE PTR [rax+0x20],dl
   14005267e:	add    al,0x0
   140052680:	int3   
   140052681:	cmp    DWORD PTR [rcx],eax
   140052683:	add    ah,ch
   140052685:	cmp    al,0x1
   140052687:	add    BYTE PTR [rax+riz*1+0x4],ah
   14005268b:	add    ah,ch
   14005268d:	cmp    al,0x1
   14005268f:	add    BYTE PTR [rbp+rdi*1+0x1],al
   140052693:	add    BYTE PTR [rax+0xb],bh
   140052696:	add    al,0x0
   140052698:	rex.R cmp eax,0x3edf0001
   14005269e:	add    DWORD PTR [rax],eax
   1400526a0:	push   rax
   1400526a1:	and    BYTE PTR [rax+rax*1],al
   1400526a4:	loopne 0x1400526e4
   1400526a6:	add    DWORD PTR [rax],eax
   1400526a8:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400526a9:	rex add DWORD PTR [rax],eax
   1400526ac:	nop
   1400526ad:	and    BYTE PTR [rax+rax*1],al
   1400526b0:	rol    BYTE PTR [rax+0x1],1
   1400526b3:	add    ah,cl
   1400526b5:	add    DWORD PTR [r8],eax
   1400526b8:	or     BYTE PTR [rax+rax*1],r8b
   1400526bc:	int3   
   1400526bd:	add    DWORD PTR [r8],eax
   1400526c0:	or     DWORD PTR [rdx+0x1],eax
   1400526c3:	add    BYTE PTR [rax+0xb],bh
   1400526c6:	add    al,0x0
   1400526c8:	adc    al,0x42
   1400526ca:	add    DWORD PTR [rax],eax
   1400526cc:	mov    ch,0x43
   1400526ce:	add    DWORD PTR [rax],eax
   1400526d0:	or     BYTE PTR [rax+rax*1],r8b
   1400526d4:	mov    eax,0x59000143
   1400526d9:	add    DWORD PTR [rax],r8d
   1400526dc:	in     al,0xf
   1400526de:	add    al,0x0
   1400526e0:	pop    rsp
   1400526e1:	add    DWORD PTR [rax],r8d
   1400526e4:	xchg   ebp,eax
   1400526e5:	add    DWORD PTR [rax],r8d
   1400526e8:	xor    BYTE PTR [rsi],al
   1400526ea:	add    al,0x0
   1400526ec:	cwde   
   1400526ed:	add    DWORD PTR [rax],r8d
   1400526f0:	(bad)  
   1400526f1:	add    DWORD PTR [rax],r8d
   1400526f4:	js     0x140052701
   1400526f6:	add    al,0x0
   1400526f8:	adc    BYTE PTR [rbp+0x1],al
   1400526fb:	add    BYTE PTR [rdi+0x38000145],ah
   140052701:	sub    al,0x4
   140052703:	add    BYTE PTR [rax+0x9000145],ch
   140052709:	rex.RX add DWORD PTR [rax],r8d
   14005270c:	add    BYTE PTR [rcx],ah
   14005270e:	add    al,0x0
   140052710:	and    al,0x46
   140052712:	add    DWORD PTR [rax],eax
   140052714:	xchg   ebp,eax
   140052715:	rex.RX add DWORD PTR [rax],r8d
   140052718:	and    BYTE PTR [rsi],cl
   14005271a:	add    al,0x0
   14005271c:	cwde   
   14005271d:	rex.RX add DWORD PTR [rax],r8d
   140052720:	sbb    BYTE PTR [rdi+0x1],al
   140052723:	add    BYTE PTR [rax],ah
   140052725:	(bad)  
   140052726:	add    al,0x0
   140052728:	sbb    BYTE PTR [rdi+0x1],al
   14005272b:	add    BYTE PTR [rdx],bh
   14005272d:	rex.RXB add DWORD PTR [r8],r8d
   140052730:	xor    BYTE PTR [rsi],al
   140052732:	add    al,0x0
   140052734:	push   rax
   140052735:	rex.RXB add DWORD PTR [r8],r8d
   140052738:	jp     0x140052781
   14005273a:	add    DWORD PTR [rax],eax
   14005273c:	je     0x14005274a
   14005273e:	add    al,0x0
   140052740:	jl     0x140052789
   140052742:	add    DWORD PTR [rax],eax
   140052744:	popf   
   140052745:	rex.RXB add DWORD PTR [r8],r8d
   140052748:	xchg   esp,eax
   140052749:	rex.WRB add al,0x0
   14005274c:	mov    al,0x47
   14005274e:	add    DWORD PTR [rax],eax
   140052750:	fild   WORD PTR [rdi+0x1]
   140052753:	add    BYTE PTR [rax+0xb],bh
   140052756:	add    al,0x0
   140052758:	loopne 0x1400527a1
   14005275a:	add    DWORD PTR [rax],eax
   14005275c:	sbb    DWORD PTR [rax+0x1],ecx
   14005275f:	add    BYTE PTR [rax+0xb],bh
   140052762:	add    al,0x0
   140052764:	sbb    al,0x48
   140052766:	add    DWORD PTR [rax],eax
   140052768:	push   rbp
   140052769:	add    QWORD PTR [rax],rax
   14005276c:	js     0x140052779
   14005276e:	add    al,0x0
   140052770:	pop    rax
   140052771:	add    QWORD PTR [rax],rax
   140052774:	js     0x1400527be
   140052776:	add    DWORD PTR [rax],eax
   140052778:	xor    BYTE PTR [rsi],al
   14005277a:	add    al,0x0
   14005277c:	or     BYTE PTR [rax+0x1],0x0
   140052780:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052781:	add    QWORD PTR [r8],rax
   140052784:	or     BYTE PTR [rcx],ah
   140052786:	add    al,0x0
   140052788:	test   al,0x49
   14005278a:	add    DWORD PTR [rax],eax
   14005278c:	sub    eax,0x1400014a
   140052791:	and    DWORD PTR [rax+rax*1],eax
   140052794:	xor    BYTE PTR [rdx+0x1],cl
   140052797:	add    BYTE PTR [rsi+0x4a],cl
   14005279a:	add    DWORD PTR [rax],eax
   14005279c:	mov    ah,0x1e
   14005279e:	add    al,0x0
   1400527a0:	ins    BYTE PTR es:[rdi],dx
   1400527a1:	rex.WX add QWORD PTR [rax],rax
   1400527a4:	adc    eax,0x9400014b
   1400527a9:	rex.WRB add al,0x0
   1400527ac:	sbb    BYTE PTR [rbx+0x1],cl
   1400527af:	add    BYTE PTR [rax+0x2800014c],cl
   1400527b5:	and    DWORD PTR [rax+rax*1],eax
   1400527b8:	mov    BYTE PTR [rcx+rax*1+0x0],cl
   1400527bc:	mov    al,0x4c
   1400527be:	add    DWORD PTR [rax],eax
   1400527c0:	xor    BYTE PTR [rsi],al
   1400527c2:	add    al,0x0
   1400527c4:	mov    al,0x4c
   1400527c6:	add    DWORD PTR [rax],eax
   1400527c8:	mov    ebx,0x3400014e
   1400527cd:	and    DWORD PTR [rax+rax*1],eax
   1400527d0:	mov    esp,0x700014e
   1400527d5:	rex.WRXB add QWORD PTR [r8],r8
   1400527d8:	pop    rax
   1400527d9:	and    DWORD PTR [rax+rax*1],eax
   1400527dc:	adc    BYTE PTR [rdi+0x1],cl
   1400527df:	add    BYTE PTR [rbp+0x4f],cl
   1400527e2:	add    DWORD PTR [rax],eax
   1400527e4:	je     0x1400527f2
   1400527e6:	add    al,0x0
   1400527e8:	push   rax
   1400527e9:	rex.WRXB add QWORD PTR [r8],r8
   1400527ec:	(bad)  
   1400527ed:	push   rax
   1400527ee:	add    DWORD PTR [rax],eax
   1400527f0:	and    BYTE PTR [rsi],cl
   1400527f2:	add    al,0x0
   1400527f4:	or     BYTE PTR [rax+0x1],dl
   1400527f7:	add    BYTE PTR [rdi+0x64000151],bl
   1400527fd:	and    DWORD PTR [rax+rax*1],eax
   140052800:	movabs al,ds:0x30000151b2000151
   140052809:	(bad)  
   14005280a:	add    al,0x0
   14005280c:	mov    ah,0x51
   14005280e:	add    DWORD PTR [rax],eax
   140052810:	lahf   
   140052811:	push   rdx
   140052812:	add    DWORD PTR [rax],eax
   140052814:	mov    BYTE PTR [rcx],ah
   140052816:	add    al,0x0
   140052818:	movabs al,ds:0x30000152b5000152
   140052821:	(bad)  
   140052822:	add    al,0x0
   140052824:	mov    eax,0xcd000152
   140052829:	push   rdx
   14005282a:	add    DWORD PTR [rax],eax
   14005282c:	xor    BYTE PTR [rsi],al
   14005282e:	add    al,0x0
   140052830:	rcl    BYTE PTR [rdx+0x1],1
   140052833:	add    bl,ch
   140052835:	push   rdx
   140052836:	add    DWORD PTR [rax],eax
   140052838:	xchg   esp,eax
   140052839:	rex.WRB add al,0x0
   14005283c:	in     al,dx
   14005283d:	push   rdx
   14005283e:	add    DWORD PTR [rax],eax
   140052840:	(bad)  
   140052841:	push   rbx
   140052842:	add    DWORD PTR [rax],eax
   140052844:	xchg   esp,eax
   140052845:	rex.WRB add al,0x0
   140052848:	or     BYTE PTR [rbx+0x1],dl
   14005284b:	add    BYTE PTR [rbx+rdx*2+0x21a40001],dh
   140052852:	add    al,0x0
   140052854:	mov    ah,0x53
   140052856:	add    DWORD PTR [rax],eax
   140052858:	cmp    edx,DWORD PTR [rcx+rax*1+0x0]
   14005285c:	mov    esp,0x3c000421
   140052861:	push   rsp
   140052862:	add    DWORD PTR [rax],eax
   140052864:	fst    QWORD PTR [rcx+rax*1+0x0]
   140052868:	int3   
   140052869:	and    DWORD PTR [rax+rax*1],eax
   14005286c:	loopne 0x1400528c2
   14005286e:	add    DWORD PTR [rax],eax
   140052870:	xor    DWORD PTR [rbp+0x1],edx
   140052873:	add    al,ch
   140052875:	and    DWORD PTR [rax+rax*1],eax
   140052878:	xor    al,0x55
   14005287a:	add    DWORD PTR [rax],eax
   14005287c:	pop    rcx
   14005287d:	push   rsi
   14005287e:	add    DWORD PTR [rax],eax
   140052880:	mov    ah,0x27
   140052882:	add    al,0x0
   140052884:	pop    rsp
   140052885:	push   rsi
   140052886:	add    DWORD PTR [rax],eax
   140052888:	lahf   
   140052889:	push   rsi
   14005288a:	add    DWORD PTR [rax],eax
   14005288c:	xchg   esp,eax
   14005288d:	rex.WRB add al,0x0
   140052890:	movabs al,ds:0x94000156d2000156
   140052899:	rex.WRB add al,0x0
   14005289c:	(bad)  
   14005289d:	push   rsi
   14005289e:	add    DWORD PTR [rax],eax
   1400528a0:	xor    dl,BYTE PTR [rdi+0x1]
   1400528a3:	add    BYTE PTR [rax+0xb],bh
   1400528a6:	add    al,0x0
   1400528a8:	xor    al,0x57
   1400528aa:	add    DWORD PTR [rax],eax
   1400528ac:	sbb    bl,BYTE PTR [rax+0x1]
   1400528af:	add    BYTE PTR [rax],cl
   1400528b1:	and    al,BYTE PTR [rax+rax*1]
   1400528b4:	sbb    al,0x58
   1400528b6:	add    DWORD PTR [rax],eax
   1400528b8:	jg     0x140052912
   1400528ba:	add    DWORD PTR [rax],eax
   1400528bc:	xchg   esp,eax
   1400528bd:	rex.WRB add al,0x0
   1400528c0:	sbb    BYTE PTR [rax+0x1],0x0
   1400528c4:	popf   
   1400528c5:	pop    rax
   1400528c6:	add    DWORD PTR [rax],eax
   1400528c8:	xor    BYTE PTR [rsi],al
   1400528ca:	add    al,0x0
   1400528cc:	movabs al,ds:0x2000015931000158
   1400528d5:	and    al,BYTE PTR [rax+rax*1]
   1400528d8:	xor    al,0x59
   1400528da:	add    DWORD PTR [rax],eax
   1400528dc:	rex.W pop rcx
   1400528de:	add    DWORD PTR [rax],eax
   1400528e0:	mov    ah,0x1e
   1400528e2:	add    al,0x0
   1400528e4:	rex.W pop rcx
   1400528e6:	add    DWORD PTR [rax],eax
   1400528e8:	jle    0x140052943
   1400528ea:	add    DWORD PTR [rax],eax
   1400528ec:	xor    BYTE PTR [rsi],al
   1400528ee:	add    al,0x0
   1400528f0:	sbb    BYTE PTR [rcx+0x1],0x0
   1400528f4:	ret    0x159
   1400528f7:	add    BYTE PTR [rbp+rcx*2+0x59c40004],dl
   1400528fe:	add    DWORD PTR [rax],eax
   140052900:	leave  
   140052901:	pop    rdx
   140052902:	add    DWORD PTR [rax],eax
   140052904:	sub    al,0x22
   140052906:	add    al,0x0
   140052908:	int3   
   140052909:	pop    rdx
   14005290a:	add    DWORD PTR [rax],eax
   14005290c:	jrcxz  0x140052968
   14005290e:	add    DWORD PTR [rax],eax
   140052910:	xor    BYTE PTR [rsi],al
   140052912:	add    al,0x0
   140052914:	test   al,0x5c
   140052916:	add    DWORD PTR [rax],eax
   140052918:	rex.WB pop r14
   14005291a:	add    DWORD PTR [rax],eax
   14005291c:	pop    rsp
   14005291d:	and    al,BYTE PTR [rax+rax*1]
   140052920:	jo     0x140052980
   140052922:	add    DWORD PTR [rax],eax
   140052924:	call   FWORD PTR [rsi+0x1]
   140052927:	add    BYTE PTR [rax+rcx*1+0x4],al
   14005292b:	add    BYTE PTR [rax+0x5f],cl
   14005292e:	add    DWORD PTR [rax],eax
   140052930:	push   0x3000015f
   140052935:	(bad)  
   140052936:	add    al,0x0
   140052938:	push   0xffffffff8800015f
   14005293d:	pop    rdi
   14005293e:	add    DWORD PTR [rax],eax
   140052940:	xor    BYTE PTR [rsi],al
   140052942:	add    al,0x0
   140052944:	mov    BYTE PTR [rdi+0x1],bl
   140052947:	add    dh,cl
   140052949:	pop    rdi
   14005294a:	add    DWORD PTR [rax],eax
   14005294c:	xchg   esp,eax
   14005294d:	rex.WRB add al,0x0
   140052950:	rcr    BYTE PTR [rdi+0x1],1
   140052953:	add    BYTE PTR [rbx+0x20000160],ah
   140052959:	(bad)  
   14005295a:	add    al,0x0
   14005295c:	fsub   DWORD PTR [rcx+rax*1+0x0]
   140052960:	rex.WB
   140052961:	add    DWORD PTR gs:[rax],eax
   140052964:	add    BYTE PTR [rcx],ah
   140052966:	add    al,0x0
   140052968:	rex.WR
   140052969:	add    DWORD PTR gs:[rax],eax
   14005296c:	rex.WRB
   14005296d:	add    WORD PTR [rax],ax
   140052970:	cmp    BYTE PTR [rsp+rax*1],ch
   140052973:	add    BYTE PTR [rax+0x66],dl
   140052976:	add    DWORD PTR [rax],eax
   140052978:	ja     0x1400529e0
   14005297a:	add    DWORD PTR [rax],eax
   14005297c:	mov    ah,0x1e
   14005297e:	add    al,0x0
   140052980:	js     0x1400529e8
   140052982:	add    DWORD PTR [rax],eax
   140052984:	pushf  
   140052985:	add    WORD PTR [rax],ax
   140052988:	and    BYTE PTR [rdx],0x4
   14005298b:	add    BYTE PTR [rsi+riz*2+0x66f50001],bl
   140052992:	add    DWORD PTR [rax],eax
   140052994:	mov    BYTE PTR [rdx],ah
   140052996:	add    al,0x0
   140052998:	adc    BYTE PTR [rdi+0x1],ah
   14005299b:	add    bl,bh
   14005299d:	add    DWORD PTR [eax],eax
   1400529a0:	js     0x1400529ec
   1400529a2:	add    al,0x0
   1400529a4:	cld    
   1400529a5:	add    DWORD PTR [eax],eax
   1400529a8:	jp     0x140052a12
   1400529aa:	add    DWORD PTR [rax],eax
   1400529ac:	add    BYTE PTR [rcx],ah
   1400529ae:	add    al,0x0
   1400529b0:	jl     0x140052a1a
   1400529b2:	add    DWORD PTR [rax],eax
   1400529b4:	xchg   edx,eax
   1400529b5:	push   0x1eb40001
   1400529ba:	add    al,0x0
   1400529bc:	xchg   esp,eax
   1400529bd:	push   0x69ef0001
   1400529c2:	add    DWORD PTR [rax],eax
   1400529c4:	and    BYTE PTR [rsp+rax*1],ah
   1400529c7:	add    al,dh
   1400529c9:	imul   eax,DWORD PTR [rcx],0x16a0e00
   1400529cf:	add    BYTE PTR [rsi+rbx*1+0x6aa00004],dh
   1400529d6:	add    DWORD PTR [rax],eax
   1400529d8:	out    0x6a,al
   1400529da:	add    DWORD PTR [rax],eax
   1400529dc:	mov    ah,0x1e
   1400529de:	add    al,0x0
   1400529e0:	call   0x13d052b4f
   1400529e5:	imul   eax,DWORD PTR [rcx],0x0
   1400529e8:	mov    al,0x4b
   1400529ea:	add    al,0x0
   1400529ec:	or     BYTE PTR [rcx+rax*1+0x0],ch
   1400529f0:	(bad)  [rcx+rax*1+0x0]
   1400529f4:	add    BYTE PTR [rcx],ah
   1400529f6:	add    al,0x0
   1400529f8:	loopne 0x140052a66
   1400529fa:	add    DWORD PTR [rax],eax
   1400529fc:	call   0x110052b6e
   140052a01:	(bad)  
   140052a03:	add    ah,dh
   140052a05:	ins    DWORD PTR es:[rdi],dx
   140052a06:	add    DWORD PTR [rax],eax
   140052a08:	outs   dx,DWORD PTR ds:[rsi]
   140052a09:	outs   dx,BYTE PTR ds:[rsi]
   140052a0a:	add    DWORD PTR [rax],eax
   140052a0c:	cmp    BYTE PTR [rbx],ch
   140052a0e:	add    al,0x0
   140052a10:	pushf  
   140052a11:	outs   dx,BYTE PTR ds:[rsi]
   140052a12:	add    DWORD PTR [rax],eax
   140052a14:	leave  
   140052a15:	outs   dx,BYTE PTR ds:[rsi]
   140052a16:	add    DWORD PTR [rax],eax
   140052a18:	xchg   esp,eax
   140052a19:	rex.WRB add al,0x0
   140052a1c:	int3   
   140052a1d:	outs   dx,BYTE PTR ds:[rsi]
   140052a1e:	add    DWORD PTR [rax],eax
   140052a20:	add    eax,0x9400016f
   140052a25:	rex.WRB add al,0x0
   140052a28:	or     BYTE PTR [rdi+0x1],ch
   140052a2b:	add    BYTE PTR [rsi],bl
   140052a2d:	outs   dx,DWORD PTR ds:[rsi]
   140052a2e:	add    DWORD PTR [rax],eax
   140052a30:	xchg   esp,eax
   140052a31:	rex.WRB add al,0x0
   140052a34:	cmp    BYTE PTR [rdi+0x1],ch
   140052a37:	add    BYTE PTR [rbx+0x6f],ch
   140052a3a:	add    DWORD PTR [rax],eax
   140052a3c:	nop
   140052a3d:	and    al,BYTE PTR [rax+rax*1]
   140052a40:	ins    BYTE PTR es:[rdi],dx
   140052a41:	outs   dx,DWORD PTR ds:[rsi]
   140052a42:	add    DWORD PTR [rax],eax
   140052a44:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052a45:	outs   dx,DWORD PTR ds:[rsi]
   140052a46:	add    DWORD PTR [rax],eax
   140052a48:	js     0x140052a55
   140052a4a:	add    al,0x0
   140052a4c:	test   al,0x6f
   140052a4e:	add    DWORD PTR [rax],eax
   140052a50:	push   rdi
   140052a51:	jo     0x140052a54
   140052a53:	add    BYTE PTR [rax+0xb],bh
   140052a56:	add    al,0x0
   140052a58:	pop    rax
   140052a59:	jo     0x140052a5c
   140052a5b:	add    dl,ah
   140052a5d:	jno    0x140052a60
   140052a5f:	add    BYTE PTR [rdx+riz*1+0x721c0004],bl
   140052a66:	add    DWORD PTR [rax],eax
   140052a68:	xor    DWORD PTR [rdx+0x1],0x0
   140052a6c:	xchg   esp,eax
   140052a6d:	rex.WRB add al,0x0
   140052a70:	test   BYTE PTR [rdx+0x1],dh
   140052a73:	add    BYTE PTR [rip+0x173],cl        # 0x140052bec
   140052a79:	and    DWORD PTR [rax+rax*1],eax
   140052a7c:	adc    BYTE PTR [rbx+0x1],dh
   140052a7f:	add    BYTE PTR [rdx+0x74],bl
   140052a82:	add    DWORD PTR [rax],eax
   140052a84:	int3   
   140052a85:	and    al,BYTE PTR [rax+rax*1]
   140052a88:	pop    rsp
   140052a89:	je     0x140052a8c
   140052a8b:	add    ch,cl
   140052a8d:	je     0x140052a90
   140052a8f:	add    ah,dl
   140052a91:	and    al,BYTE PTR [rax+rax*1]
   140052a94:	mov    ah,0x75
   140052a96:	add    DWORD PTR [rax],eax
   140052a98:	fnstenv [rbp+0x1]
   140052a9b:	add    BYTE PTR [rax],dh
   140052a9d:	(bad)  
   140052a9e:	add    al,0x0
   140052aa0:	fdiv   QWORD PTR [rbp+0x1]
   140052aa3:	add    BYTE PTR [rsi-0xbfffe8a],cl
   140052aa9:	and    al,BYTE PTR [rax+rax*1]
   140052aac:	nop
   140052aad:	jbe    0x140052ab0
   140052aaf:	add    BYTE PTR [rdi+rsi*2],dl
   140052ab2:	add    DWORD PTR [rax],eax
   140052ab4:	js     0x140052ac1
   140052ab6:	add    al,0x0
   140052ab8:	adc    al,0x77
   140052aba:	add    DWORD PTR [rax],eax
   140052abc:	cmp    BYTE PTR [rdi+0x1],dh
   140052abf:	add    BYTE PTR [rbp+rcx*2+0x77380004],dl
   140052ac6:	add    DWORD PTR [rax],eax
   140052ac8:	ins    DWORD PTR es:[rdi],dx
   140052ac9:	js     0x140052acc
   140052acb:	add    BYTE PTR [rax],ch
   140052acd:	and    eax,DWORD PTR [rax+rax*1]
   140052ad0:	jo     0x140052b4a
   140052ad2:	add    DWORD PTR [rax],eax
   140052ad4:	icebp  
   140052ad5:	js     0x140052ad8
   140052ad7:	add    BYTE PTR [rbp+rcx*2+0x78f40004],dl
   140052ade:	add    DWORD PTR [rax],eax
   140052ae0:	xchg   BYTE PTR [rcx+0x1],bh
   140052ae3:	add    ah,ah
   140052ae5:	(bad)  
   140052ae7:	add    BYTE PTR [rax+0x6b000179],cl
   140052aed:	jnp    0x140052af0
   140052aef:	add    BYTE PTR [rbx+riz*1+0x4],bl
   140052af3:	add    BYTE PTR [rbx+rdi*2+0x1],ch
   140052af7:	add    BYTE PTR [rax],ch
   140052af9:	jl     0x140052afc
   140052afb:	add    BYTE PTR [rax+0x23],bh
   140052afe:	add    al,0x0
   140052b00:	sub    BYTE PTR [rcx+rax*1+0x0],bh
   140052b04:	mov    eax,0x9c00017c
   140052b09:	and    eax,DWORD PTR [rax+rax*1]
   140052b0c:	mov    eax,0x2f00017c
   140052b11:	jg     0x140052b14
   140052b13:	add    BYTE PTR [rbx+riz*1+0x7f300004],ah
   140052b1a:	add    DWORD PTR [rax],eax
   140052b1c:	sub    BYTE PTR [rcx+0x23c00001],al
   140052b22:	add    al,0x0
   140052b24:	sub    BYTE PTR [rcx-0x7eafffff],al
   140052b2a:	add    DWORD PTR [rax],eax
   140052b2c:	xor    BYTE PTR [rsi],al
   140052b2e:	add    al,0x0
   140052b30:	push   rax
   140052b31:	add    DWORD PTR [rcx],0x182ca00
   140052b37:	add    BYTE PTR [rax],ah
   140052b39:	(bad)  
   140052b3a:	add    al,0x0
   140052b3c:	or     al,0x84
   140052b3e:	add    DWORD PTR [rax],eax
   140052b40:	movsxd eax,DWORD PTR [rcx+rax*1+0x44d9400]
   140052b47:	add    BYTE PTR [rsp+rax*4+0x1],ah
   140052b4b:	add    cl,bl
   140052b4d:	test   BYTE PTR [rcx],al
   140052b4f:	add    al,dh
   140052b51:	and    eax,DWORD PTR [rax+rax*1]
   140052b54:	fadd   QWORD PTR [rcx+rax*1+0x1854000]
   140052b5b:	add    BYTE PTR [rax],dl
   140052b5d:	and    al,0x4
   140052b5f:	add    BYTE PTR [rax-0x7b],al
   140052b62:	add    DWORD PTR [rax],eax
   140052b64:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140052b65:	xchg   BYTE PTR [rcx],al
   140052b67:	add    BYTE PTR [rax],ah
   140052b69:	and    al,0x4
   140052b6b:	add    BYTE PTR [rax+0x3d000186],ch
   140052b71:	xchg   DWORD PTR [rcx],eax
   140052b73:	add    BYTE PTR [rax],bh
   140052b75:	sub    al,0x4
   140052b77:	add    BYTE PTR [rax-0x79],al
   140052b7a:	add    DWORD PTR [rax],eax
   140052b7c:	mov    DWORD PTR es:[rcx],eax
   140052b7f:	add    BYTE PTR [rax],bh
   140052b81:	and    al,0x4
   140052b83:	add    BYTE PTR [rax],ch
   140052b85:	mov    DWORD PTR [rcx],eax
   140052b87:	add    BYTE PTR [rax-0x75],ch
   140052b8a:	add    DWORD PTR [rax],eax
   140052b8c:	push   rax
   140052b8d:	and    al,0x4
   140052b8f:	add    BYTE PTR [rax-0x75],ch
   140052b92:	add    DWORD PTR [rax],eax
   140052b94:	outs   dx,DWORD PTR ds:[rsi]
   140052b95:	mov    es,WORD PTR [rcx]
   140052b97:	add    BYTE PTR [rax+0x24],dh
   140052b9a:	add    al,0x0
   140052b9c:	jo     0x140052b2c
   140052b9e:	add    DWORD PTR [rax],eax
   140052ba0:	xchg   ebx,eax
   140052ba1:	nop
   140052ba2:	add    DWORD PTR [rax],eax
   140052ba4:	xchg   esp,eax
   140052ba5:	and    al,0x4
   140052ba7:	add    BYTE PTR [rax+rdx*4-0x6d4effff],dl
   140052bae:	add    DWORD PTR [rax],eax
   140052bb0:	mov    ah,0x24
   140052bb2:	add    al,0x0
   140052bb4:	mov    ah,0x92
   140052bb6:	add    DWORD PTR [rax],eax
   140052bb8:	icebp  
   140052bb9:	xchg   edi,eax
   140052bba:	add    DWORD PTR [rax],eax
   140052bbc:	add    al,0x25
   140052bbe:	add    al,0x0
   140052bc0:	hlt    
   140052bc1:	xchg   edi,eax
   140052bc2:	add    DWORD PTR [rax],eax
   140052bc4:	mov    bl,BYTE PTR [rax+0x252c0001]
   140052bca:	add    al,0x0
   140052bcc:	mov    WORD PTR [rax-0x672effff],ds
   140052bd2:	add    DWORD PTR [rax],eax
   140052bd4:	pushf  
   140052bd5:	and    eax,DWORD PTR [rax+rax*1]
   140052bd8:	(bad)  
   140052bd9:	cwde   
   140052bda:	add    DWORD PTR [rax],eax
   140052bdc:	sbb    ebx,DWORD PTR [rcx+0x239c0001]
   140052be2:	add    al,0x0
   140052be4:	sbb    al,0x99
   140052be6:	add    DWORD PTR [rax],eax
   140052be8:	and    eax,0x3c00019a
   140052bed:	and    eax,0x9a280004
   140052bf2:	add    DWORD PTR [rax],eax
   140052bf4:	je     0x140052b90
   140052bf6:	add    DWORD PTR [rax],eax
   140052bf8:	rex.WR and rax,0xffffffff9a740004
   140052bfe:	add    DWORD PTR [rax],eax
   140052c00:	cdq    
   140052c01:	pushf  
   140052c02:	add    DWORD PTR [rax],eax
   140052c04:	push   rsp
   140052c05:	and    eax,0x9c9c0004
   140052c0a:	add    DWORD PTR [rax],eax
   140052c0c:	fistp  WORD PTR [rcx+rax*1+0x4063000]
   140052c13:	add    al,ch
   140052c15:	pushf  
   140052c16:	add    DWORD PTR [rax],eax
   140052c18:	sbb    bl,BYTE PTR [rbp+0x4d940001]
   140052c1e:	add    al,0x0
   140052c20:	sbb    al,0x9d
   140052c22:	add    DWORD PTR [rax],eax
   140052c24:	pop    rbp
   140052c25:	popf   
   140052c26:	add    DWORD PTR [rax],eax
   140052c28:	xor    BYTE PTR [rsi],al
   140052c2a:	add    al,0x0
   140052c2c:	(bad)  
   140052c2d:	popf   
   140052c2e:	add    DWORD PTR [rax],eax
   140052c30:	js     0x140052bcf
   140052c32:	add    DWORD PTR [rax],eax
   140052c34:	xor    BYTE PTR [rsi],al
   140052c36:	add    al,0x0
   140052c38:	js     0x140052bd7
   140052c3a:	add    DWORD PTR [rax],eax
   140052c3c:	rex.RX lahf 
   140052c3e:	add    DWORD PTR [rax],eax
   140052c40:	in     al,0xf
   140052c42:	add    al,0x0
   140052c44:	rex.W lahf 
   140052c46:	add    DWORD PTR [rax],eax
   140052c48:	ja     0x140052bea
   140052c4a:	add    DWORD PTR [rax],eax
   140052c4c:	adc    al,0x21
   140052c4e:	add    al,0x0
   140052c50:	js     0x140052bf2
   140052c52:	add    DWORD PTR [rax],eax
   140052c54:	rex.RXB movabs ds:0xa24800042a380001,al
   140052c5e:	add    DWORD PTR [rax],eax
   140052c60:	movabs ds:0xa340000425680001,eax
   140052c6a:	add    DWORD PTR [rax],eax
   140052c6c:	repnz movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052c6e:	add    DWORD PTR [rax],eax
   140052c70:	js     0x140052c97
   140052c72:	add    al,0x0
   140052c74:	hlt    
   140052c75:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140052c76:	add    DWORD PTR [rax],eax
   140052c78:	loope  0x140052c21
   140052c7a:	add    DWORD PTR [rax],eax
   140052c7c:	nop
   140052c7d:	and    eax,0xa7e40004
   140052c82:	add    DWORD PTR [rax],eax
   140052c84:	sbb    al,0xa8
   140052c86:	add    DWORD PTR [rax],eax
   140052c88:	js     0x140052c95
   140052c8a:	add    al,0x0
   140052c8c:	sbb    al,0xa8
   140052c8e:	add    DWORD PTR [rax],eax
   140052c90:	push   rsp
   140052c91:	test   al,0x1
   140052c93:	add    BYTE PTR [rax+0xb],bh
   140052c96:	add    al,0x0
   140052c98:	push   rsp
   140052c99:	test   al,0x1
   140052c9b:	add    BYTE PTR [rdi],al
   140052c9d:	test   eax,0x25c80001
   140052ca2:	add    al,0x0
   140052ca4:	or     BYTE PTR [rcx-0x566dffff],ch
   140052caa:	add    DWORD PTR [rax],eax
   140052cac:	in     al,0xf
   140052cae:	add    al,0x0
   140052cb0:	pushf  
   140052cb1:	test   eax,0xa9c30001
   140052cb6:	add    DWORD PTR [rax],eax
   140052cb8:	xor    BYTE PTR [rsi],al
   140052cba:	add    al,0x0
   140052cbc:	shr    BYTE PTR [rcx-0x55f4ffff],1
   140052cc2:	add    DWORD PTR [rax],eax
   140052cc4:	js     0x140052cd1
   140052cc6:	add    al,0x0
   140052cc8:	or     al,0xaa
   140052cca:	add    DWORD PTR [rax],eax
   140052ccc:	xor    eax,0x940001aa
   140052cd1:	rex.WRB add al,0x0
   140052cd4:	rex.W stos BYTE PTR es:[rdi],al
   140052cd6:	add    DWORD PTR [rax],eax
   140052cd8:	sub    DWORD PTR [rdx+0xb780001],0xaa840004
   140052ce2:	add    DWORD PTR [rax],eax
   140052ce4:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140052ce5:	stos   DWORD PTR es:[rdi],eax
   140052ce6:	add    DWORD PTR [rax],eax
   140052ce8:	or     BYTE PTR [rax+rax*1],r8b
   140052cec:	test   al,0xab
   140052cee:	add    DWORD PTR [rax],eax
   140052cf0:	icebp  
   140052cf1:	stos   DWORD PTR es:[rdi],eax
   140052cf2:	add    DWORD PTR [rax],eax
   140052cf4:	xor    BYTE PTR [rsi],al
   140052cf6:	add    al,0x0
   140052cf8:	hlt    
   140052cf9:	stos   DWORD PTR es:[rdi],eax
   140052cfa:	add    DWORD PTR [rax],eax
   140052cfc:	mov    BYTE PTR [rbp+0x25d40001],ch
   140052d02:	add    al,0x0
   140052d04:	mov    BYTE PTR [rbp-0x5234ffff],ch
   140052d0a:	add    DWORD PTR [rax],eax
   140052d0c:	adc    BYTE PTR [rsi],ah
   140052d0e:	add    al,0x0
   140052d10:	lock lods eax,DWORD PTR ds:[rsi]
   140052d12:	add    DWORD PTR [rax],eax
   140052d14:	ret    
   140052d15:	scas   al,BYTE PTR es:[rdi]
   140052d16:	add    DWORD PTR [rax],eax
   140052d18:	sbb    BYTE PTR [rip+0xffffffffaec40004],0x1        # 0xeec92d23
   140052d1f:	add    BYTE PTR [rbx],al
   140052d21:	mov    cl,0x1
   140052d23:	add    BYTE PTR [rsi+riz*1],bh
   140052d26:	add    al,0x0
   140052d28:	add    al,0xb1
   140052d2a:	add    DWORD PTR [rax],eax
   140052d2c:	sub    dh,BYTE PTR [rbx+0x26780001]
   140052d32:	add    al,0x0
   140052d34:	sub    al,0xb3
   140052d36:	add    DWORD PTR [rax],eax
   140052d38:	fdiv   QWORD PTR [rbx+0x26a80001]
   140052d3e:	add    al,0x0
   140052d40:	fdiv   QWORD PTR [rbx-0x4b62ffff]
   140052d46:	add    DWORD PTR [rax],eax
   140052d48:	shl    BYTE PTR [rsi],1
   140052d4a:	add    al,0x0
   140052d4c:	movabs al,ds:0xe80001b6e40001b4
   140052d55:	es add al,0x0
   140052d58:	in     al,0xb6
   140052d5a:	add    DWORD PTR [rax],eax
   140052d5c:	ds mov esp,0x27000001
   140052d62:	add    al,0x0
   140052d64:	rex mov esp,0xbc610001
   140052d6a:	add    DWORD PTR [rax],eax
   140052d6c:	xchg   esp,eax
   140052d6d:	rex.WRB add al,0x0
   140052d70:	fs mov esp,0xbe890001
   140052d76:	add    DWORD PTR [rax],eax
   140052d78:	sbb    al,0x27
   140052d7a:	add    al,0x0
   140052d7c:	mov    WORD PTR [rsi-0x4150ffff],?
   140052d82:	add    DWORD PTR [rax],eax
   140052d84:	xor    al,0x27
   140052d86:	add    al,0x0
   140052d88:	mov    al,0xbe
   140052d8a:	add    DWORD PTR [rax],eax
   140052d8c:	(bad)  
   140052d8d:	mov    esi,0x27540001
   140052d92:	add    al,0x0
   140052d94:	(bad)  
   140052d95:	mov    esi,0xbef00001
   140052d9a:	add    DWORD PTR [rax],eax
   140052d9c:	xor    BYTE PTR [rsi],al
   140052d9e:	add    al,0x0
   140052da0:	lock mov esi,0xc1970001
   140052da6:	add    DWORD PTR [rax],eax
   140052da8:	je     0x140052dd1
   140052daa:	add    al,0x0
   140052dac:	cwde   
   140052dad:	rol    DWORD PTR [rcx],0x0
   140052db0:	cmp    edx,eax
   140052db2:	add    DWORD PTR [rax],eax
   140052db4:	mov    WORD PTR [rdi],fs
   140052db6:	add    al,0x0
   140052db8:	pop    rax
   140052db9:	ret    0x1
   140052dbc:	sbb    al,ah
   140052dbe:	add    DWORD PTR [rax],eax
   140052dc0:	xchg   esp,eax
   140052dc1:	(bad)  
   140052dc2:	add    al,0x0
   140052dc4:	and    al,0xc4
   140052dc6:	add    DWORD PTR [rax],eax
   140052dc8:	nop
   140052dc9:	(bad)
   140052dcd:	(bad)  
   140052dcf:	add    BYTE PTR [rax+0x130001c4],dl
   140052dd5:	(bad)
   140052dd8:	or     BYTE PTR [rax+rax*1],r8b
   140052ddc:	adc    al,0xc5
   140052dde:	add    DWORD PTR [rax],eax
   140052de0:	cdq    
   140052de1:	(bad)
   140052de4:	or     BYTE PTR [rax+rax*1],r8b
   140052de8:	pushf  
   140052de9:	(bad)
   140052dec:	and    al,0xc6
   140052dee:	add    DWORD PTR [rax],eax
   140052df0:	mov    ah,0x27
   140052df2:	add    al,0x0
   140052df4:	rex mov BYTE PTR [rcx],0x0
   140052df8:	mov    BYTE PTR fs:[rcx],0x0
   140052dfc:	shl    BYTE PTR [rdi],1
   140052dfe:	add    al,0x0
   140052e00:	xor    bh,al
   140052e02:	add    DWORD PTR [rax],eax
   140052e04:	jno    0x140052dcd
   140052e06:	add    DWORD PTR [rax],eax
   140052e08:	fsub   DWORD PTR [rdi]
   140052e0a:	add    al,0x0
   140052e0c:	nop
   140052e0d:	mov    DWORD PTR [rcx],0x1c91d00
   140052e13:	add    al,bh
   140052e15:	(bad)  
   140052e16:	add    al,0x0
   140052e18:	and    cl,cl
   140052e1a:	add    DWORD PTR [rax],eax
   140052e1c:	mov    ah,0xc9
   140052e1e:	add    DWORD PTR [rax],eax
   140052e20:	(bad)  
   140052e21:	sub    al,BYTE PTR [rax+rax*1]
   140052e24:	mov    ah,0xc9
   140052e26:	add    DWORD PTR [rax],eax
   140052e28:	sti    
   140052e29:	leave  
   140052e2a:	add    DWORD PTR [rax],eax
   140052e2c:	xchg   esp,eax
   140052e2d:	rex.WRB add al,0x0
   140052e30:	cld    
   140052e31:	leave  
   140052e32:	add    DWORD PTR [rax],eax
   140052e34:	rex.WRB retf 0x1
   140052e38:	or     al,0x28
   140052e3a:	add    al,0x0
   140052e3c:	push   rax
   140052e3d:	retf   0x1
   140052e40:	(bad)  
   140052e41:	retf   0x1
   140052e44:	in     al,0xf
   140052e46:	add    al,0x0
   140052e48:	ror    dl,1
   140052e4a:	add    DWORD PTR [rax],eax
   140052e4c:	mov    ch,0xd5
   140052e4e:	add    DWORD PTR [rax],eax
   140052e50:	and    BYTE PTR [rax],ch
   140052e52:	add    al,0x0
   140052e54:	mov    eax,0xba0001d5
   140052e59:	loopne 0x140052e5c
   140052e5b:	add    BYTE PTR [rax],ah
   140052e5d:	sub    BYTE PTR [rax+rax*1],al
   140052e60:	mov    esp,0x3b0001e0
   140052e65:	loope  0x140052e68
   140052e67:	add    BYTE PTR [rbx+riz*1-0x1ec3fffc],bl
   140052e6e:	add    DWORD PTR [rax],eax
   140052e70:	fabs   
   140052e72:	add    DWORD PTR [rax],eax
   140052e74:	pushf  
   140052e75:	and    eax,DWORD PTR [rax+rax*1]
   140052e78:	hlt    
   140052e79:	loope  0x140052e7c
   140052e7b:	add    BYTE PTR [rsi],dh
   140052e7d:	loop   0x140052e80
   140052e7f:	add    BYTE PTR [rax],al
   140052e81:	and    DWORD PTR [rax+rax*1],eax
   140052e84:	push   rax
   140052e85:	loop   0x140052e88
   140052e87:	add    BYTE PTR [rdi+0x440001e4],ah
   140052e8d:	sub    BYTE PTR [rax+rax*1],al
   140052e90:	test   al,0xe4
   140052e92:	add    DWORD PTR [rax],eax
   140052e94:	mov    ah,0xe5
   140052e96:	add    DWORD PTR [rax],eax
   140052e98:	(bad)  
   140052e99:	sub    BYTE PTR [rax+rax*1],al
   140052e9c:	mov    ah,0xe5
   140052e9e:	add    DWORD PTR [rax],eax
   140052ea0:	fucomp st(1)
   140052ea2:	add    DWORD PTR [rax],eax
   140052ea4:	js     0x140052ece
   140052ea6:	add    al,0x0
   140052ea8:	loopne 0x140052e93
   140052eaa:	add    DWORD PTR [rax],eax
   140052eac:	movabs ds:0xa4000428940001eb,eax
   140052eb5:	jmp    0x140052eb8
   140052eb7:	add    BYTE PTR [rdx-0x53fffe14],cl
   140052ebd:	sub    BYTE PTR [rax+rax*1],al
   140052ec0:	mov    esp,gs
   140052ec2:	add    DWORD PTR [rax],eax
   140052ec4:	shr    ch,1
   140052ec6:	add    DWORD PTR [rax],eax
   140052ec8:	(bad)  
   140052ec9:	sub    BYTE PTR [rax+rax*1],al
   140052ecc:	shr    ch,1
   140052ece:	add    DWORD PTR [rax],eax
   140052ed0:	gs out dx,al
   140052ed2:	add    DWORD PTR [rax],eax
   140052ed4:	mov    ah,0x1e
   140052ed6:	add    al,0x0
   140052ed8:	push   0xffffffff8c0001ee
   140052edd:	out    dx,al
   140052ede:	add    DWORD PTR [rax],eax
   140052ee0:	pushf  
   140052ee1:	sbb    BYTE PTR [rax+rax*1],al
   140052ee4:	mov    esi,gs
   140052ee6:	add    DWORD PTR [rax],eax
   140052ee8:	ret    0x1ee
   140052eeb:	add    BYTE PTR [rax+0xb],bh
   140052eee:	add    al,0x0
   140052ef0:	(bad)  
   140052ef1:	out    dx,al
   140052ef2:	add    DWORD PTR [rax],eax
   140052ef4:	rex.RX icebp 
   140052ef6:	add    DWORD PTR [rax],eax
   140052ef8:	fsubr  QWORD PTR [rax]
   140052efa:	add    al,0x0
   140052efc:	rex.W icebp 
   140052efe:	add    DWORD PTR [rax],eax
   140052f00:	js     0x140052ef3
   140052f02:	add    DWORD PTR [rax],eax
   140052f04:	mov    ah,0x1e
   140052f06:	add    al,0x0
   140052f08:	js     0x140052efb
   140052f0a:	add    DWORD PTR [rax],eax
   140052f0c:	(bad)  
   140052f0d:	repnz add DWORD PTR [rax],eax
   140052f10:	and    BYTE PTR [rsi],cl
   140052f12:	add    al,0x0
   140052f14:	adc    dl,dh
   140052f16:	add    DWORD PTR [rax],eax
   140052f18:	repnz add DWORD PTR ss:[rax],eax
   140052f1c:	xor    BYTE PTR [rsi],al
   140052f1e:	add    al,0x0
   140052f20:	cmp    dl,dh
   140052f22:	add    DWORD PTR [rax],eax
   140052f24:	xor    eax,DWORD PTR [rip+0x28f80002]        # 0x168fd2f2c
   140052f2a:	add    al,0x0
   140052f2c:	xor    al,0x5
   140052f2e:	add    al,BYTE PTR [rax]
   140052f30:	mov    esi,0x50000205
   140052f35:	and    BYTE PTR [rax+rax*1],al
   140052f38:	rol    BYTE PTR [rip+0x6430002],0x2        # 0x146482f41
   140052f3f:	add    ah,ah
   140052f41:	(bad)  
   140052f43:	add    BYTE PTR [rsi+rax*1+0x2],bl
   140052f47:	add    BYTE PTR [rdi+rax*1+0x2],al
   140052f4b:	add    BYTE PTR [rcx+rbp*1],bl
   140052f4e:	add    al,0x0
   140052f50:	rex.R (bad) 
   140052f52:	add    al,BYTE PTR [rax]
   140052f54:	mov    BYTE PTR [rdi],al
   140052f56:	add    al,BYTE PTR [rax]
   140052f58:	js     0x140052f65
   140052f5a:	add    al,0x0
   140052f5c:	mov    ah,0x7
   140052f5e:	add    al,BYTE PTR [rax]
   140052f60:	and    eax,0x4800020a
   140052f65:	sub    DWORD PTR [rax+rax*1],eax
   140052f68:	cmp    BYTE PTR [rdx],cl
   140052f6a:	add    al,BYTE PTR [rax]
   140052f6c:	ins    DWORD PTR es:[rdi],dx
   140052f6d:	or     al,BYTE PTR [rdx]
   140052f6f:	add    BYTE PTR [rax+0x29],bh
   140052f72:	add    al,0x0
   140052f74:	cwde   
   140052f75:	or     al,BYTE PTR [rdx]
   140052f77:	add    BYTE PTR [rdi+0xb],al
   140052f7a:	add    al,BYTE PTR [rax]
   140052f7c:	cwde   
   140052f7d:	or     al,0x4
   140052f7f:	add    BYTE PTR [rax+0xb],cl
   140052f82:	add    al,BYTE PTR [rax]
   140052f84:	mov    dl,0xd
   140052f86:	add    al,BYTE PTR [rax]
   140052f88:	cwde   
   140052f89:	sub    DWORD PTR [rax+rax*1],eax
   140052f8c:	mov    ah,0xd
   140052f8e:	add    al,BYTE PTR [rax]
   140052f90:	cmp    eax,0xc000020e
   140052f95:	sub    DWORD PTR [rax+rax*1],eax
   140052f98:	rex (bad) 
   140052f9a:	add    al,BYTE PTR [rax]
   140052f9c:	jnp    0x140052fac
   140052f9e:	add    al,BYTE PTR [rax]
   140052fa0:	xor    BYTE PTR [rsi],al
   140052fa2:	add    al,0x0
   140052fa4:	jl     0x140052fb4
   140052fa6:	add    al,BYTE PTR [rax]
   140052fa8:	scas   eax,DWORD PTR es:[rdi]
   140052fa9:	adc    al,0x2
   140052fab:	add    BYTE PTR [rax+0x25],bh
   140052fae:	add    al,0x0
   140052fb0:	mov    al,0x14
   140052fb2:	add    al,BYTE PTR [rax]
   140052fb4:	(bad)  
   140052fb5:	(bad)  
   140052fb6:	add    al,BYTE PTR [rax]
   140052fb8:	in     al,dx
   140052fb9:	sub    DWORD PTR [rax+rax*1],eax
   140052fbc:	pushf  
   140052fbd:	(bad)  
   140052fbe:	add    al,BYTE PTR [rax]
   140052fc0:	ss (bad) 
   140052fc2:	add    al,BYTE PTR [rax]
   140052fc4:	in     al,dx
   140052fc5:	or     al,0x4
   140052fc7:	add    BYTE PTR [rax],bh
   140052fc9:	(bad)  
   140052fca:	add    al,BYTE PTR [rax]
   140052fcc:	adc    BYTE PTR [rdi],0x2
   140052fcf:	add    BYTE PTR [rsp+rcx*1+0x4],dh
   140052fd3:	add    BYTE PTR [rax-0x73fffde9],al
   140052fd9:	sbb    DWORD PTR [rdx],eax
   140052fdb:	add    al,dl
   140052fdd:	sub    DWORD PTR [rax+rax*1],eax
   140052fe0:	mov    WORD PTR [rcx],ds
   140052fe2:	add    al,BYTE PTR [rax]
   140052fe4:	and    DWORD PTR [rdx],ebx
   140052fe6:	add    al,BYTE PTR [rax]
   140052fe8:	in     al,dx
   140052fe9:	sub    DWORD PTR [rax+rax*1],eax
   140052fec:	and    al,0x1a
   140052fee:	add    al,BYTE PTR [rax]
   140052ff0:	jrcxz  0x14005300f
   140052ff2:	add    al,BYTE PTR [rax]
   140052ff4:	hlt    
   140052ff5:	sub    DWORD PTR [rax+rax*1],eax
   140052ff8:	in     al,0x1d
   140052ffa:	add    al,BYTE PTR [rax]
   140052ffc:	(bad)  
   140052ffd:	and    al,BYTE PTR [rdx]
   140052fff:	add    BYTE PTR [rax],dl
   140053001:	sub    al,BYTE PTR [rax+rax*1]
   140053004:	or     BYTE PTR [rdx],ah
   140053006:	add    al,BYTE PTR [rax]
   140053008:	(bad)  
   140053009:	and    al,BYTE PTR [rdx]
   14005300b:	add    BYTE PTR [rax],dh
   14005300d:	(bad)  
   14005300e:	add    al,0x0
   140053010:	and    al,BYTE PTR [rdx]
   140053013:	add    BYTE PTR [rax+0x22],bh
   140053016:	add    al,BYTE PTR [rax]
   140053018:	xor    BYTE PTR [rsi],al
   14005301a:	add    al,0x0
   14005301c:	js     0x140053040
   14005301e:	add    al,BYTE PTR [rax]
   140053020:	mov    db0,rdx
   140053023:	add    BYTE PTR [rax],bh
   140053025:	sub    al,BYTE PTR [rax+rax*1]
   140053028:	adc    BYTE PTR [rbx],ah
   14005302a:	add    al,BYTE PTR [rax]
   14005302c:	fsub   DWORD PTR [rbx]
   14005302e:	add    al,BYTE PTR [rax]
   140053030:	push   rsp
   140053031:	sub    al,BYTE PTR [rax+rax*1]
   140053034:	adc    al,0x24
   140053036:	add    al,BYTE PTR [rax]
   140053038:	stc    
   140053039:	and    al,0x2
   14005303b:	add    BYTE PTR [rax+0x2a],ch
   14005303e:	add    al,0x0
   140053040:	cld    
   140053041:	and    al,0x2
   140053043:	add    BYTE PTR [rdi-0x7bfffddb],ch
   140053049:	sub    al,BYTE PTR [rax+rax*1]
   14005304c:	mov    al,0x25
   14005304e:	add    al,BYTE PTR [rax]
   140053050:	rex.X sub BYTE PTR [rdx],al
   140053053:	add    BYTE PTR [rax+0x4400042a],ah
   140053059:	sub    BYTE PTR [rdx],al
   14005305b:	add    BYTE PTR [rcx+0x29],dl
   14005305e:	add    al,BYTE PTR [rax]
   140053060:	mov    esp,0x5400042a
   140053065:	sub    DWORD PTR [rdx],eax
   140053067:	add    al,ch
   140053069:	sub    DWORD PTR [rdx],eax
   14005306b:	add    BYTE PTR [rbp+rcx*2+0x29e80004],dl
   140053072:	add    al,BYTE PTR [rax]
   140053074:	push   rbx
   140053075:	sub    al,BYTE PTR [rdx]
   140053077:	add    BYTE PTR [rbp+rcx*2+0x2a540004],dl
   14005307e:	add    al,BYTE PTR [rax]
   140053080:	mov    esp,0x2000022c
   140053085:	and    al,0x4
   140053087:	add    BYTE PTR [rax+0x2200022d],cl
   14005308d:	add    al,BYTE PTR cs:[rax]
   140053090:	(bad)  
   140053091:	sub    al,BYTE PTR [rax+rax*1]
   140053094:	and    al,0x2e
   140053096:	add    al,BYTE PTR [rax]
   140053098:	ja     0x1400530c8
   14005309a:	add    al,BYTE PTR [rax]
   14005309c:	in     al,0x2a
   14005309e:	add    al,0x0
   1400530a0:	js     0x1400530d0
   1400530a2:	add    al,BYTE PTR [rax]
   1400530a4:	std    
   1400530a5:	xor    BYTE PTR [rdx],al
   1400530a7:	add    ah,dh
   1400530a9:	sub    al,BYTE PTR [rax+rax*1]
   1400530ac:	add    BYTE PTR [rcx],dh
   1400530ae:	add    al,BYTE PTR [rax]
   1400530b0:	hlt    
   1400530b1:	xor    al,BYTE PTR [rdx]
   1400530b3:	add    BYTE PTR [rax],bl
   1400530b5:	sub    eax,DWORD PTR [rax+rax*1]
   1400530b8:	hlt    
   1400530b9:	xor    al,BYTE PTR [rdx]
   1400530bb:	add    BYTE PTR [rbx+rsi*1+0x2],al
   1400530bf:	add    BYTE PTR [rsi+rbx*1+0x33640004],dh
   1400530c6:	add    al,BYTE PTR [rax]
   1400530c8:	out    0x33,eax
   1400530ca:	add    al,BYTE PTR [rax]
   1400530cc:	pushf  
   1400530cd:	and    eax,DWORD PTR [rax+rax*1]
   1400530d0:	call   0x1a6053308
   1400530d5:	xor    al,0x2
   1400530d7:	add    BYTE PTR [rbx+riz*1+0x34680004],bl
   1400530de:	add    al,BYTE PTR [rax]
   1400530e0:	out    0x34,al
   1400530e2:	add    al,BYTE PTR [rax]
   1400530e4:	pushf  
   1400530e5:	and    eax,DWORD PTR [rax+rax*1]
   1400530e8:	call   0x1a6053321
   1400530ed:	xor    eax,0x239c0002
   1400530f2:	add    al,0x0
   1400530f4:	push   0xffffffffeb000235
   1400530f9:	xor    eax,0x239c0002
   1400530fe:	add    al,0x0
   140053100:	in     al,dx
   140053101:	xor    eax,0x366a0002
   140053106:	add    al,BYTE PTR [rax]
   140053108:	pushf  
   140053109:	and    eax,DWORD PTR [rax+rax*1]
   14005310c:	ins    BYTE PTR es:[rdi],dx
   14005310d:	add    al,BYTE PTR ss:[rax]
   140053110:	out    dx,eax
   140053111:	add    al,BYTE PTR ss:[rax]
   140053114:	pushf  
   140053115:	and    eax,DWORD PTR [rax+rax*1]
   140053118:	lock add al,BYTE PTR ss:[rax]
   14005311c:	rex.WB (bad) 
   14005311e:	add    al,BYTE PTR [rax]
   140053120:	cmp    BYTE PTR [rbx],ch
   140053122:	add    al,0x0
   140053124:	rex.WR (bad) 
   140053126:	add    al,BYTE PTR [rax]
   140053128:	and    eax,0x48000239
   14005312d:	sub    eax,DWORD PTR [rax+rax*1]
   140053130:	sub    BYTE PTR [rcx],bh
   140053132:	add    al,BYTE PTR [rax]
   140053134:	cdq    
   140053135:	cmp    DWORD PTR [rdx],eax
   140053137:	add    BYTE PTR [rax-0x63fffbb5],dh
   14005313d:	cmp    DWORD PTR [rdx],eax
   14005313f:	add    BYTE PTR [rsi],dh
   140053141:	cmp    al,BYTE PTR [rdx]
   140053143:	add    BYTE PTR [rax],bh
   140053145:	sub    al,0x4
   140053147:	add    BYTE PTR [rax],bh
   140053149:	cmp    al,BYTE PTR [rdx]
   14005314b:	add    ch,cl
   14005314d:	cmp    al,BYTE PTR [rdx]
   14005314f:	add    BYTE PTR [rax+0xb],bh
   140053152:	add    al,0x0
   140053154:	sar    BYTE PTR [rdx],1
   140053156:	add    al,BYTE PTR [rax]
   140053158:	(bad)  
   140053159:	cmp    al,0x2
   14005315b:	add    BYTE PTR [rax+0x2b],dh
   14005315e:	add    al,0x0
   140053160:	or     BYTE PTR [rdx+rax*1],bh
   140053163:	add    BYTE PTR [rsi+0x43],ah
   140053166:	add    al,BYTE PTR [rax]
   140053168:	movabs al,ds:0x990002436800042b
   140053171:	add    r8b,BYTE PTR [rax]
   140053174:	(bad)  
   140053175:	sub    eax,DWORD PTR [rax+rax*1]
   140053178:	pushf  
   140053179:	add    r8b,BYTE PTR [rax]
   14005317c:	out    dx,eax
   14005317d:	add    r8b,BYTE PTR [rax]
   140053180:	xchg   esp,eax
   140053181:	rex.WRB add al,0x0
   140053184:	lock add r8b,BYTE PTR [rax]
   140053188:	pop    rdi
   140053189:	add    r8b,BYTE PTR [r8]
   14005318c:	mov    ah,0x1e
   14005318e:	add    al,0x0
   140053190:	push   0x4a000245
   140053195:	rex.RX add r8b,BYTE PTR [rax]
   140053198:	xchg   esp,eax
   140053199:	rex.WRB add al,0x0
   14005319c:	rex.WR
   14005319d:	rex.RX add r8b,BYTE PTR [rax]
   1400531a0:	jae    0x1400531e8
   1400531a2:	add    al,BYTE PTR [rax]
   1400531a4:	xor    BYTE PTR [rsi],al
   1400531a6:	add    al,0x0
   1400531a8:	je     0x1400531f0
   1400531aa:	add    al,BYTE PTR [rax]
   1400531ac:	rol    DWORD PTR [rsi+0x2],cl
   1400531af:	add    BYTE PTR [rbp+rcx*2+0x46d40004],dl
   1400531b6:	add    al,BYTE PTR [rax]
   1400531b8:	add    DWORD PTR [rdi+0x2],eax
   1400531bb:	add    BYTE PTR [rbp+rcx*2+0x47040004],dl
   1400531c2:	add    al,BYTE PTR [rax]
   1400531c4:	pop    rdx
   1400531c5:	rex.RXB add r8b,BYTE PTR [r8]
   1400531c8:	xor    BYTE PTR [rsi],al
   1400531ca:	add    al,0x0
   1400531cc:	pop    rsp
   1400531cd:	rex.RXB add r8b,BYTE PTR [r8]
   1400531d0:	add    DWORD PTR [rdi+0x2],0x0
   1400531d4:	xor    BYTE PTR [rsi],al
   1400531d6:	add    al,0x0
   1400531d8:	test   BYTE PTR [rdi+0x2],al
   1400531db:	add    BYTE PTR [rdx-0x4bfffdb9],bh
   1400531e1:	(bad)  
   1400531e2:	add    al,0x0
   1400531e4:	(bad)  
   1400531e5:	rex.RXB add r8b,BYTE PTR [r8]
   1400531e8:	rex.RB
   1400531e9:	rex.WB add al,BYTE PTR [r8]
   1400531ec:	rex.W sub al,0x4
   1400531ef:	add    BYTE PTR [rax+0x49],dl
   1400531f2:	add    al,BYTE PTR [rax]
   1400531f4:	(bad)  
   1400531f5:	rex.WXB add al,BYTE PTR [r8]
   1400531f8:	hlt    
   1400531f9:	sub    eax,DWORD PTR [rax+rax*1]
   1400531fc:	(bad)  
   1400531fd:	rex.WXB add al,BYTE PTR [r8]
   140053200:	je     0x14005324d
   140053202:	add    al,BYTE PTR [rax]
   140053204:	mov    ah,0x1e
   140053206:	add    al,0x0
   140053208:	je     0x140053255
   14005320a:	add    al,BYTE PTR [rax]
   14005320c:	jbe    0x14005325a
   14005320e:	add    al,BYTE PTR [rax]
   140053210:	add    al,0x2c
   140053212:	add    al,0x0
   140053214:	js     0x140053262
   140053216:	add    al,BYTE PTR [rax]
   140053218:	jp     0x140053267
   14005321a:	add    al,BYTE PTR [rax]
   14005321c:	add    al,0x2c
   14005321e:	add    al,0x0
   140053220:	jl     0x14005326f
   140053222:	add    al,BYTE PTR [rax]
   140053224:	push   rbp
   140053225:	rex.WRX add r8b,BYTE PTR [rax]
   140053228:	cwde   
   140053229:	or     al,0x4
   14005322b:	add    BYTE PTR [rax+0x4e],bl
   14005322e:	add    al,BYTE PTR [rax]
   140053230:	rex.WRXB add r8b,BYTE PTR cs:[r8]
   140053234:	sbb    BYTE PTR [rsp+rax*1],ch
   140053237:	add    BYTE PTR [rax],dh
   140053239:	rex.WRXB add r8b,BYTE PTR [r8]
   14005323c:	lock rex.WRXB add r8b,BYTE PTR [r8]
   140053240:	and    al,0x2c
   140053242:	add    al,0x0
   140053244:	cld    
   140053245:	rex.WRXB add r8b,BYTE PTR [r8]
   140053248:	push   rsi
   140053249:	push   rcx
   14005324a:	add    al,BYTE PTR [rax]
   14005324c:	cmp    BYTE PTR [rsp+rax*1],ch
   14005324f:	add    BYTE PTR [rax+0x51],bl
   140053252:	add    al,BYTE PTR [rax]
   140053254:	jae    0x1400532a8
   140053256:	add    al,BYTE PTR [rax]
   140053258:	cwde   
   140053259:	or     al,0x4
   14005325b:	add    BYTE PTR [rax-0x6dfffdae],dh
   140053261:	push   rbx
   140053262:	add    al,BYTE PTR [rax]
   140053264:	mov    al,0x4b
   140053266:	add    al,0x0
   140053268:	xchg   esp,eax
   140053269:	push   rbx
   14005326a:	add    al,BYTE PTR [rax]
   14005326c:	out    0x53,al
   14005326e:	add    al,BYTE PTR [rax]
   140053270:	mov    ah,0x1e
   140053272:	add    al,0x0
   140053274:	xor    BYTE PTR [rdx+rax*1+0x0],dl
   140053278:	push   r13
   14005327a:	add    al,BYTE PTR [rax]
   14005327c:	rex.W sub al,0x4
   14005327f:	add    BYTE PTR [rbp+rdx*2+0x2],al
   140053283:	add    BYTE PTR [rdi-0x4bfffdab],bl
   140053289:	(bad)  
   14005328a:	add    al,0x0
   14005328c:	movabs al,ds:0xec0002564c000255
   140053295:	or     al,0x4
   140053297:	add    BYTE PTR [rsi+rdx*2+0x2],cl
   14005329b:	add    al,dl
   14005329d:	push   rsi
   14005329e:	add    al,BYTE PTR [rax]
   1400532a0:	mov    ah,0x1e
   1400532a2:	add    al,0x0
   1400532a4:	rcl    BYTE PTR [rsi+0x2],1
   1400532a7:	add    BYTE PTR [rsi+0x57],dh
   1400532aa:	add    al,BYTE PTR [rax]
   1400532ac:	pop    rsp
   1400532ad:	sub    al,0x4
   1400532af:	add    BYTE PTR [rax-0x4bfffda9],ah
   1400532b5:	pop    rax
   1400532b6:	add    al,BYTE PTR [rax]
   1400532b8:	mov    WORD PTR [rsp+rax*1],gs
   1400532bb:	add    BYTE PTR [rax+rbx*2+0x59640002],dh
   1400532c2:	add    al,BYTE PTR [rax]
   1400532c4:	pushf  
   1400532c5:	sub    al,0x4
   1400532c7:	add    BYTE PTR [rcx+rbx*2+0x2],ah
   1400532cb:	add    ch,bl
   1400532cd:	pop    rcx
   1400532ce:	add    al,BYTE PTR [rax]
   1400532d0:	and    BYTE PTR [rsi],cl
   1400532d2:	add    al,0x0
   1400532d4:	loopne 0x14005332f
   1400532d6:	add    al,BYTE PTR [rax]
   1400532d8:	(bad)  
   1400532d9:	pop    rdx
   1400532da:	add    al,BYTE PTR [rax]
   1400532dc:	xchg   esp,eax
   1400532dd:	rex.WRB add al,0x0
   1400532e0:	sub    BYTE PTR [rdx+0x2],bl
   1400532e3:	add    BYTE PTR [rbx+rbx*2],bl
   1400532e6:	add    al,BYTE PTR [rax]
   1400532e8:	(bad)  
   1400532e9:	sub    al,0x4
   1400532eb:	add    BYTE PTR [rax],ch
   1400532ed:	pop    rbx
   1400532ee:	add    al,BYTE PTR [rax]
   1400532f0:	stc    
   1400532f1:	pop    rbx
   1400532f2:	add    al,BYTE PTR [rax]
   1400532f4:	add    al,0x2d
   1400532f6:	add    al,0x0
   1400532f8:	cld    
   1400532f9:	pop    rbx
   1400532fa:	add    al,BYTE PTR [rax]
   1400532fc:	xor    DWORD PTR [rdx+rax*1+0x0],ebx
   140053300:	adc    al,0x2d
   140053302:	add    al,0x0
   140053304:	xor    al,0x5c
   140053306:	add    al,BYTE PTR [rax]
   140053308:	(bad)  
   140053309:	(bad)  
   14005330b:	add    BYTE PTR [rbp*1+0x62380004],bl
   140053312:	add    al,BYTE PTR [rax]
   140053314:	cmp    ebp,DWORD PTR [rax+0x2]
   140053317:	add    BYTE PTR [rbp*1+0x683c0004],bl
   14005331e:	add    al,BYTE PTR [rax]
   140053320:	xor    eax,0x30000271
   140053325:	sub    eax,0x71380004
   14005332a:	add    al,BYTE PTR [rax]
   14005332c:	lahf   
   14005332d:	jl     0x140053331
   14005332f:	add    BYTE PTR [rbp+rbp*1+0x4],dl
   140053333:	add    BYTE PTR [rax+0x1f00027c],ah
   140053339:	test   BYTE PTR [rdx],al
   14005333b:	add    BYTE PTR [rax+0x2d],bh
   14005333e:	add    al,0x0
   140053340:	and    BYTE PTR [rdx+rax*1+0x2859200],al
   140053347:	add    BYTE PTR [rax-0x6bfffbd3],dl
   14005334d:	test   DWORD PTR [rdx],eax
   14005334f:	add    bh,cl
   140053351:	test   DWORD PTR [rdx],eax
   140053353:	add    BYTE PTR [rax+rbx*1-0x7a2ffffc],bl
   14005335a:	add    al,BYTE PTR [rax]
   14005335c:	or     eax,DWORD PTR [rsi+0x6300002]
   140053362:	add    al,0x0
   140053364:	or     al,0x86
   140053366:	add    al,BYTE PTR [rax]
   140053368:	xchg   ebp,eax
   140053369:	xchg   BYTE PTR [rdx],al
   14005336b:	add    BYTE PTR [rax-0x67fffbf4],bl
   140053371:	xchg   BYTE PTR [rdx],al
   140053373:	add    BYTE PTR [rsi],cl
   140053375:	xchg   DWORD PTR [rdx],eax
   140053377:	add    al,al
   140053379:	sub    eax,0x87100004
   14005337e:	add    al,BYTE PTR [rax]
   140053380:	and    ecx,DWORD PTR [rax+0x2de40002]
   140053386:	add    al,0x0
   140053388:	and    al,0x88
   14005338a:	add    al,BYTE PTR [rax]
   14005338c:	rex.X mov al,BYTE PTR [rdx]
   14005338f:	add    BYTE PTR [rsi+rbp*1],cl
   140053392:	add    al,0x0
   140053394:	mov    r8b,BYTE PTR [rdx]
   140053397:	add    BYTE PTR [rax],al
   140053399:	mov    eax,DWORD PTR [rdx]
   14005339b:	add    BYTE PTR [rax+0xb],bh
   14005339e:	add    al,0x0
   1400533a0:	add    BYTE PTR [rbx-0x73e7fffe],cl
   1400533a6:	add    al,BYTE PTR [rax]
   1400533a8:	sub    BYTE PTR [rsi],ch
   1400533aa:	add    al,0x0
   1400533ac:	sbb    BYTE PTR [rdx+rax*1+0x28c4f00],cl
   1400533b3:	add    BYTE PTR [rbp+rcx*2-0x73affffc],dl
   1400533ba:	add    al,BYTE PTR [rax]
   1400533bc:	stc    
   1400533bd:	mov    WORD PTR [rdx],es
   1400533bf:	add    BYTE PTR [rsi+rbp*1+0x4],bh
   1400533c3:	add    BYTE PTR [rax],al
   1400533c5:	lea    eax,[rdx]
   1400533c7:	add    BYTE PTR [rdi],bl
   1400533c9:	xchg   ecx,eax
   1400533ca:	add    al,BYTE PTR [rax]
   1400533cc:	sub    al,0x2f
   1400533ce:	add    al,0x0
   1400533d0:	xor    BYTE PTR [rcx-0x6a09fffe],dl
   1400533d6:	add    al,BYTE PTR [rax]
   1400533d8:	xor    BYTE PTR [rax],dh
   1400533da:	add    al,0x0
   1400533dc:	rex xchg esi,eax
   1400533de:	add    al,BYTE PTR [rax]
   1400533e0:	addr32 xchg esi,eax
   1400533e2:	add    al,BYTE PTR [rax]
   1400533e4:	in     al,dx
   1400533e5:	xor    BYTE PTR [rax+rax*1],al
   1400533e8:	adc    BYTE PTR [rsi-0x6926fffe],0x2
   1400533ef:	add    ah,dh
   1400533f1:	xor    BYTE PTR [rax+rax*1],al
   1400533f4:	loopne 0x14005338c
   1400533f6:	add    al,BYTE PTR [rax]
   1400533f8:	(bad)  
   1400533f9:	xchg   edi,eax
   1400533fa:	add    al,BYTE PTR [rax]
   1400533fc:	and    al,0x31
   1400533fe:	add    al,0x0
   140053400:	adc    BYTE PTR [rdi-0x68b9fffe],dl
   140053406:	add    al,BYTE PTR [rax]
   140053408:	pop    rsp
   140053409:	xor    DWORD PTR [rax+rax*1],eax
   14005340c:	push   rax
   14005340d:	xchg   edi,eax
   14005340e:	add    al,BYTE PTR [rax]
   140053410:	scas   eax,DWORD PTR es:[rdi]
   140053411:	xchg   edi,eax
   140053412:	add    al,BYTE PTR [rax]
   140053414:	sbb    al,0x31
   140053416:	add    al,0x0
   140053418:	mov    al,0x97
   14005341a:	add    al,BYTE PTR [rax]
   14005341c:	rcl    BYTE PTR [rdi+0x31240002],cl
   140053422:	add    al,0x0
   140053424:	loopne 0x1400533bd
   140053426:	add    al,BYTE PTR [rax]
   140053428:	(bad)  
   140053429:	cwde   
   14005342a:	add    al,BYTE PTR [rax]
   14005342c:	sub    al,0x31
   14005342e:	add    al,0x0
   140053430:	and    BYTE PTR [rax-0x67a9fffe],bl
   140053436:	add    al,BYTE PTR [rax]
   140053438:	pop    rsp
   140053439:	xor    DWORD PTR [rax+rax*1],eax
   14005343c:	sbb    BYTE PTR [rax-0x6767fffe],0x2
   140053443:	add    ah,ch
   140053445:	xor    BYTE PTR [rax+rax*1],al
   140053448:	movabs al,ds:0x5c000298ff000298
   140053451:	rex.WB add al,0x0
   140053454:	add    BYTE PTR [rcx-0x66a4fffe],bl
   14005345a:	add    al,BYTE PTR [rax]
   14005345c:	ins    BYTE PTR es:[rdi],dx
   14005345d:	xor    DWORD PTR [rax+rax*1],eax
   140053460:	jo     0x1400533fb
   140053462:	add    al,BYTE PTR [rax]
   140053464:	ficomp DWORD PTR [rdx+0x31bc0002]
   14005346a:	add    al,0x0
   14005346c:	loopne 0x140053408
   14005346e:	add    al,BYTE PTR [rax]
   140053470:	rex.WRX popf 
   140053472:	add    al,BYTE PTR [rax]
   140053474:	cmp    al,0x32
   140053476:	add    al,0x0
   140053478:	push   rax
   140053479:	popf   
   14005347a:	add    al,BYTE PTR [rax]
   14005347c:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005347d:	popf   
   14005347e:	add    al,BYTE PTR [rax]
   140053480:	shl    BYTE PTR [rdx],1
   140053482:	add    al,0x0
   140053484:	mov    al,0x9d
   140053486:	add    al,BYTE PTR [rax]
   140053488:	stos   DWORD PTR es:[rdi],eax
   140053489:	lahf   
   14005348a:	add    al,BYTE PTR [rax]
   14005348c:	rex xor eax,DWORD PTR [rax+rax*1]
   140053490:	rcr    BYTE PTR [rdi-0x5e5cfffe],0x2
   140053497:	add    BYTE PTR [rsp+rsi*1],al
   14005349a:	add    al,0x0
   14005349c:	mov    al,0xa1
   14005349e:	add    al,BYTE PTR [rax]
   1400534a0:	(bad)  
   1400534a1:	movabs ds:0xa220000434800002,al
   1400534aa:	add    al,BYTE PTR [rax]
   1400534ac:	and    DWORD PTR [rdx+0x34b80002],0x4
   1400534b3:	add    BYTE PTR [rax-0x37fffd5e],dl
   1400534b9:	movabs ds:0xa2e000040bc40002,al
   1400534c2:	add    al,BYTE PTR [rax]
   1400534c4:	(bad)  
   1400534c5:	movabs ds:0xa3200004315c0002,eax
   1400534ce:	add    al,BYTE PTR [rax]
   1400534d0:	cmp    BYTE PTR [rbx+0x30ec0002],ah
   1400534d6:	add    al,0x0
   1400534d8:	push   rax
   1400534d9:	movabs ds:0x30ec0002a3680002,eax
   1400534e2:	add    al,0x0
   1400534e4:	and    BYTE PTR [rbx-0x5c5dfffe],0x2
   1400534eb:	add    BYTE PTR [rcx+rsi*1],ah
   1400534ee:	add    al,0x0
   1400534f0:	mov    al,0xa3
   1400534f2:	add    al,BYTE PTR [rax]
   1400534f4:	fsub   QWORD PTR [rbx+0x31240002]
   1400534fa:	add    al,0x0
   1400534fc:	loopne 0x1400534a1
   1400534fe:	add    al,BYTE PTR [rax]
   140053500:	adc    ah,BYTE PTR [rbp+0x35080002]
   140053506:	add    al,0x0
   140053508:	and    BYTE PTR [rbp-0x5a55fffe],ah
   14005350e:	add    al,BYTE PTR [rax]
   140053510:	adc    al,0x35
   140053512:	add    al,0x0
   140053514:	mov    al,0xa5
   140053516:	add    al,BYTE PTR [rax]
   140053518:	cmp    ah,BYTE PTR [rsi+0x354c0002]
   14005351e:	add    al,0x0
   140053520:	rex cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053522:	add    al,BYTE PTR [rax]
   140053524:	(bad)  
   140053525:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053526:	add    al,BYTE PTR [rax]
   140053528:	and    al,0x31
   14005352a:	add    al,0x0
   14005352c:	jo     0x1400534d4
   14005352e:	add    al,BYTE PTR [rax]
   140053530:	lahf   
   140053531:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140053532:	add    al,BYTE PTR [rax]
   140053534:	and    al,0x31
   140053536:	add    al,0x0
   140053538:	movabs al,ds:0x740002a7b50002a6
   140053541:	xor    eax,0xa7e00004
   140053546:	add    al,BYTE PTR [rax]
   140053548:	(bad)  
   140053549:	test   al,0x2
   14005354b:	add    BYTE PTR [rbp+rcx*2-0x57dffffc],dl
   140053552:	add    al,BYTE PTR [rax]
   140053554:	rex.RX test al,0x2
   140053557:	add    BYTE PTR [rbp+rcx*2-0x57affffc],dl
   14005355e:	add    al,BYTE PTR [rax]
   140053560:	mov    al,0xa8
   140053562:	add    al,BYTE PTR [rax]
   140053564:	js     0x140053571
   140053566:	add    al,0x0
   140053568:	mov    al,0xa8
   14005356a:	add    al,BYTE PTR [rax]
   14005356c:	out    dx,al
   14005356d:	test   al,0x2
   14005356f:	add    BYTE PTR [rbp+rcx*2-0x570ffffc],dl
   140053576:	add    al,BYTE PTR [rax]
   140053578:	cs test eax,0x4d940002
   14005357e:	add    al,0x0
   140053580:	xor    BYTE PTR [rcx-0x569efffe],ch
   140053586:	add    al,BYTE PTR [rax]
   140053588:	int3   
   140053589:	cmp    al,BYTE PTR [rax+rax*1]
   14005358c:	(bad)  
   14005358d:	test   eax,0xa9910002
   140053592:	add    al,BYTE PTR [rax]
   140053594:	mov    WORD PTR [rip+0xffffffffa9910004],?        # 0xe996359e
   14005359a:	add    al,BYTE PTR [rax]
   14005359c:	test   al,0xa9
   14005359e:	add    al,BYTE PTR [rax]
   1400535a0:	jl     0x1400535d7
   1400535a2:	add    al,0x0
   1400535a4:	mov    al,0xa9
   1400535a6:	add    al,BYTE PTR [rax]
   1400535a8:	(bad)  
   1400535a9:	stos   BYTE PTR es:[rdi],al
   1400535aa:	add    al,BYTE PTR [rax]
   1400535ac:	and    BYTE PTR [rsi],cl
   1400535ae:	add    al,0x0
   1400535b0:	adc    BYTE PTR [rdx-0x55cffffe],ch
   1400535b6:	add    al,BYTE PTR [rax]
   1400535b8:	int3   
   1400535b9:	cmp    al,BYTE PTR [rax+rax*1]
   1400535bc:	xor    BYTE PTR [rdx-0x559efffe],ch
   1400535c2:	add    al,BYTE PTR [rax]
   1400535c4:	mov    al,0x35
   1400535c6:	add    al,0x0
   1400535c8:	(bad)  
   1400535c9:	stos   BYTE PTR es:[rdi],al
   1400535ca:	add    al,BYTE PTR [rax]
   1400535cc:	js     0x140053578
   1400535ce:	add    al,BYTE PTR [rax]
   1400535d0:	movabs al,ds:0x5d0002ab30000435
   1400535d9:	stos   DWORD PTR es:[rdi],eax
   1400535da:	add    al,BYTE PTR [rax]
   1400535dc:	(bad)  
   1400535dd:	xor    eax,0xab600004
   1400535e2:	add    al,BYTE PTR [rax]
   1400535e4:	lea    ebp,[rbx+0x35c40002]
   1400535ea:	add    al,0x0
   1400535ec:	nop
   1400535ed:	stos   DWORD PTR es:[rdi],eax
   1400535ee:	add    al,BYTE PTR [rax]
   1400535f0:	and    eax,0x2ac
   1400535f5:	and    DWORD PTR [rax+rax*1],eax
   1400535f8:	xor    BYTE PTR [rdx+rax*1+0x2ac9100],ch
   1400535ff:	add    BYTE PTR [rax],al
   140053601:	and    DWORD PTR [rax+rax*1],eax
   140053604:	movabs al,ds:0x780002ad020002ac
   14005360d:	or     eax,DWORD PTR [rax+rax*1]
   140053610:	xor    BYTE PTR [rbp-0x5298fffe],ch
   140053616:	add    al,BYTE PTR [rax]
   140053618:	xchg   esp,eax
   140053619:	rex.WRB add al,0x0
   14005361c:	xor    BYTE PTR [rsi-0x516ffffe],ch
   140053622:	add    al,BYTE PTR [rax]
   140053624:	js     0x140053631
   140053626:	add    al,0x0
   140053628:	nop
   140053629:	scas   al,BYTE PTR es:[rdi]
   14005362a:	add    al,BYTE PTR [rax]
   14005362c:	mov    esp,0x840002af
   140053631:	or     eax,DWORD PTR [rax+rax*1]
   140053634:	mov    esp,0xfc0002af
   140053639:	scas   eax,DWORD PTR es:[rdi]
   14005363a:	add    al,BYTE PTR [rax]
   14005363c:	fdiv   QWORD PTR [rip+0xffffffffaffc0004]        # 0xf0013646
   140053642:	add    al,BYTE PTR [rax]
   140053644:	push   0xffffffffffffffb0
   140053646:	add    al,BYTE PTR [rax]
   140053648:	int3   
   140053649:	xor    eax,0xb0700004
   14005364e:	add    al,BYTE PTR [rax]
   140053650:	test   al,0xb0
   140053652:	add    al,BYTE PTR [rax]
   140053654:	xor    BYTE PTR [rsi],al
   140053656:	add    al,0x0
   140053658:	mov    al,0xb0
   14005365a:	add    al,BYTE PTR [rax]
   14005365c:	call   0x170053911
   140053661:	(bad)  
   140053662:	add    al,0x0
   140053664:	lock mov al,0x2
   140053667:	add    BYTE PTR [rip+0xffffffffcc0002b1],al        # 0x10c05391e
   14005366d:	cmp    al,BYTE PTR [rax+rax*1]
   140053670:	add    eax,0x2a0002b1
   140053675:	mov    cl,0x2
   140053677:	add    BYTE PTR [rax],al
   140053679:	ss add al,0x0
   14005367c:	sub    dh,BYTE PTR [rcx-0x4eabfffe]
   140053682:	add    al,BYTE PTR [rax]
   140053684:	lock xor eax,0xb1600004
   14005368a:	add    al,BYTE PTR [rax]
   14005368c:	jne    0x14005363f
   14005368e:	add    al,BYTE PTR [rax]
   140053690:	int3   
   140053691:	cmp    al,BYTE PTR [rax+rax*1]
   140053694:	jne    0x140053647
   140053696:	add    al,BYTE PTR [rax]
   140053698:	(bad)  
   140053699:	mov    cl,0x2
   14005369b:	add    BYTE PTR [rsi+rsi*1],ah
   14005369e:	add    al,0x0
   1400536a0:	(bad)  
   1400536a1:	mov    cl,0x2
   1400536a3:	add    ah,al
   1400536a5:	mov    cl,0x2
   1400536a7:	add    BYTE PTR [rsi+rsi*1],dl
   1400536aa:	add    al,0x0
   1400536ac:	xor    BYTE PTR [rdx-0x4d9dfffe],dh
   1400536b2:	add    al,BYTE PTR [rax]
   1400536b4:	xor    BYTE PTR [rsi],al
   1400536b6:	add    al,0x0
   1400536b8:	jo     0x14005366c
   1400536ba:	add    al,BYTE PTR [rax]
   1400536bc:	mov    WORD PTR [rdx+0x4f940002],?
   1400536c2:	add    al,0x0
   1400536c4:	mov    WORD PTR [rdx-0x4d44fffe],?
   1400536ca:	add    al,BYTE PTR [rax]
   1400536cc:	rex.W
   1400536cd:	ss add al,0x0
   1400536d0:	mov    ebx,0xc30002b2
   1400536d5:	mov    dl,0x2
   1400536d7:	add    BYTE PTR [rax],bh
   1400536d9:	ss add al,0x0
   1400536dc:	shl    BYTE PTR [rdx-0x4c83fffe],1
   1400536e2:	add    al,BYTE PTR [rax]
   1400536e4:	mov    ah,0x27
   1400536e6:	add    al,0x0
   1400536e8:	xor    BYTE PTR [rbx-0x4c45fffe],0x2
   1400536ef:	add    BYTE PTR [rbp+rcx*2-0x4c1ffffc],dl
   1400536f6:	add    al,BYTE PTR [rax]
   1400536f8:	mov    r12b,0x2
   1400536fb:	add    BYTE PTR [rbp+rcx*2-0x4baffffc],dl
   140053702:	add    al,BYTE PTR [rax]
   140053704:	(bad)  [rdx+rax*1+0x44d9400]
   14005370b:	add    BYTE PTR [rax],dh
   14005370d:	mov    ch,0x2
   14005370f:	add    BYTE PTR [rdi+0x5c0002b5],ch
   140053715:	ss add al,0x0
   140053718:	add    BYTE PTR [rsi-0x49cafffe],dh
   14005371e:	add    al,BYTE PTR [rax]
   140053720:	add    BYTE PTR [rdi],dh
   140053722:	add    al,0x0
   140053724:	xor    eax,0x6d0002b6
   140053729:	mov    dh,0x2
   14005372b:	add    ah,ch
   14005372d:	ss add al,0x0
   140053730:	ins    DWORD PTR es:[rdi],dx
   140053731:	mov    dh,0x2
   140053733:	add    BYTE PTR [rbp-0x27fffd4a],cl
   140053739:	ss add al,0x0
   14005373c:	lea    esi,[rsi-0x493dfffe]
   140053742:	add    al,BYTE PTR [rax]
   140053744:	enter  0x436,0x0
   140053748:	ret    0x2b6
   14005374b:	add    BYTE PTR [rdx],dl
   14005374d:	mov    bh,0x2
   14005374f:	add    BYTE PTR [rax+0x12000436],dh
   140053755:	mov    bh,0x2
   140053757:	add    BYTE PTR [rsi],ah
   140053759:	mov    bh,0x2
   14005375b:	add    BYTE PTR [rax+0x30000436],ah
   140053761:	mov    bh,0x2
   140053763:	add    BYTE PTR [rbp+0x780002b7],ch
   140053769:	or     eax,DWORD PTR [rax+rax*1]
   14005376c:	mov    al,0xb7
   14005376e:	add    al,BYTE PTR [rax]
   140053770:	shl    BYTE PTR [rdi+0x6300002],1
   140053776:	add    al,0x0
   140053778:	loopne 0x140053731
   14005377a:	add    al,BYTE PTR [rax]
   14005377c:	sbb    DWORD PTR [rax+0xb780002],edi
   140053782:	add    al,0x0
   140053784:	and    BYTE PTR [rax-0x47bffffe],bh
   14005378a:	add    al,BYTE PTR [rax]
   14005378c:	xor    BYTE PTR [rsi],al
   14005378e:	add    al,0x0
   140053790:	rex mov eax,0xb8790002
   140053796:	add    al,BYTE PTR [rax]
   140053798:	js     0x1400537a5
   14005379a:	add    al,0x0
   14005379c:	cmp    BYTE PTR [rax-0x4750fffe],0x2
   1400537a3:	add    BYTE PTR [rax+0xb],bh
   1400537a6:	add    al,0x0
   1400537a8:	mov    al,0xb8
   1400537aa:	add    al,BYTE PTR [rax]
   1400537ac:	in     eax,dx
   1400537ad:	mov    eax,0x37100002
   1400537b2:	add    al,0x0
   1400537b4:	lock mov eax,0xb9340002
   1400537ba:	add    al,BYTE PTR [rax]
   1400537bc:	xchg   esp,eax
   1400537bd:	rex.WRB add al,0x0
   1400537c0:	rex mov ecx,0xb9a10002
   1400537c6:	add    al,BYTE PTR [rax]
   1400537c8:	js     0x1400537d5
   1400537ca:	add    al,0x0
   1400537cc:	mov    al,0xb9
   1400537ce:	add    al,BYTE PTR [rax]
   1400537d0:	fdivr  QWORD PTR [rcx+0x376c0002]
   1400537d6:	add    al,0x0
   1400537d8:	fdivr  QWORD PTR [rcx-0x4403fffe]
   1400537de:	add    al,BYTE PTR [rax]
   1400537e0:	push   rax
   1400537e1:	(bad)  
   1400537e2:	add    al,0x0
   1400537e4:	cld    
   1400537e5:	mov    ebx,0xbc120002
   1400537ea:	add    al,BYTE PTR [rax]
   1400537ec:	rex (bad) 
   1400537ee:	add    al,0x0
   1400537f0:	and    BYTE PTR [rdx+rax*1+0x2bc4f00],bh
   1400537f7:	add    BYTE PTR [rax+0xb],bh
   1400537fa:	add    al,0x0
   1400537fc:	push   rax
   1400537fd:	mov    esp,0xbd4e0002
   140053802:	add    al,BYTE PTR [rax]
   140053804:	xor    BYTE PTR [rdi],0x4
   140053807:	add    BYTE PTR [rax-0x43],dl
   14005380a:	add    al,BYTE PTR [rax]
   14005380c:	rex.RB mov r15d,0x37bc0002
   140053812:	add    al,0x0
   140053814:	push   rax
   140053815:	mov    edi,0xbfb50002
   14005381a:	add    al,BYTE PTR [rax]
   14005381c:	push   0xffffffffc0000438
   140053821:	mov    edi,0xc02f0002
   140053826:	add    al,BYTE PTR [rax]
   140053828:	xchg   esp,eax
   140053829:	cmp    BYTE PTR [rax+rax*1],al
   14005382c:	xor    al,al
   14005382e:	add    al,BYTE PTR [rax]
   140053830:	xchg   ebx,eax
   140053831:	rol    BYTE PTR [rdx],0x0
   140053834:	sar    BYTE PTR [rax],0x4
   140053837:	add    BYTE PTR [rax-0x30fffd40],ah
   14005383d:	rol    BYTE PTR [rdx],0x0
   140053840:	js     0x14005384d
   140053842:	add    al,0x0
   140053844:	rol    al,1
   140053846:	add    al,BYTE PTR [rax]
   140053848:	in     al,0xc0
   14005384a:	add    al,BYTE PTR [rax]
   14005384c:	enter  0x425,0x0
   140053850:	in     al,0xc0
   140053852:	add    al,BYTE PTR [rax]
   140053854:	adc    eax,0xfc0002c1
   140053859:	cmp    BYTE PTR [rax+rax*1],al
   14005385c:	adc    eax,0x200002c1
   140053861:	rol    DWORD PTR [rdx],0x0
   140053864:	in     al,dx
   140053865:	cmp    BYTE PTR [rax+rax*1],al
   140053868:	and    cl,al
   14005386a:	add    al,BYTE PTR [rax]
   14005386c:	add    ecx,0xe200002
   140053872:	add    al,0x0
   140053874:	nop
   140053875:	rol    DWORD PTR [rdx],0x0
   140053878:	add    al,dl
   14005387a:	add    al,BYTE PTR [rax]
   14005387c:	adc    al,0x39
   14005387e:	add    al,0x0
   140053880:	adc    dl,al
   140053882:	add    al,BYTE PTR [rax]
   140053884:	test   al,0xc2
   140053886:	add    al,BYTE PTR [rax]
   140053888:	pop    rax
   140053889:	cmp    DWORD PTR [rax+rax*1],eax
   14005388c:	mov    al,0xc2
   14005388e:	add    al,BYTE PTR [rax]
   140053890:	rex.W ret 
   140053892:	add    al,BYTE PTR [rax]
   140053894:	js     0x1400538a1
   140053896:	add    al,0x0
   140053898:	push   rax
   140053899:	ret    
   14005389a:	add    al,BYTE PTR [rax]
   14005389c:	lods   al,BYTE PTR ds:[rsi]
   14005389d:	ret    
   14005389e:	add    al,BYTE PTR [rax]
   1400538a0:	pushf  
   1400538a1:	cmp    DWORD PTR [rax+rax*1],eax
   1400538a4:	mov    al,0xc3
   1400538a6:	add    al,BYTE PTR [rax]
   1400538a8:	leave  
   1400538a9:	(bad)
   1400538ac:	sar    BYTE PTR [rcx],1
   1400538ae:	add    al,0x0
   1400538b0:	rol    ch,1
   1400538b2:	add    al,BYTE PTR [rax]
   1400538b4:	rex.X mov BYTE PTR [rdx],0x0
   1400538b8:	and    al,0x3a
   1400538ba:	add    al,0x0
   1400538bc:	push   rax
   1400538bd:	mov    BYTE PTR [rdx],0x0
   1400538c0:	lods   al,BYTE PTR ds:[rsi]
   1400538c1:	mov    BYTE PTR [rdx],0x0
   1400538c4:	js     0x1400538d1
   1400538c6:	add    al,0x0
   1400538c8:	mov    al,0xc6
   1400538ca:	add    al,BYTE PTR [rax]
   1400538cc:	fld    st(6)
   1400538ce:	add    al,BYTE PTR [rax]
   1400538d0:	js     0x1400538dd
   1400538d2:	add    al,0x0
   1400538d4:	loopne 0x14005389c
   1400538d6:	add    al,BYTE PTR [rax]
   1400538d8:	movsxd eax,edi
   1400538da:	add    al,BYTE PTR [rax]
   1400538dc:	cmp    BYTE PTR [rdx],bh
   1400538de:	add    al,0x0
   1400538e0:	jo     0x1400538a9
   1400538e2:	add    al,BYTE PTR [rax]
   1400538e4:	(bad)  
   1400538e5:	leave  
   1400538e6:	add    al,BYTE PTR [rax]
   1400538e8:	and    BYTE PTR [rsi],cl
   1400538ea:	add    al,0x0
   1400538ec:	jo     0x1400538b7
   1400538ee:	add    al,BYTE PTR [rax]
   1400538f0:	xlat   BYTE PTR ds:[rbx]
   1400538f1:	leave  
   1400538f2:	add    al,BYTE PTR [rax]
   1400538f4:	js     0x140053901
   1400538f6:	add    al,0x0
   1400538f8:	loopne 0x1400538c3
   1400538fa:	add    al,BYTE PTR [rax]
   1400538fc:	xor    cl,dl
   1400538fe:	add    al,BYTE PTR [rax]
   140053900:	js     0x14005390d
   140053902:	add    al,0x0
   140053904:	push   rax
   140053905:	retf   0x2
   140053908:	lods   al,BYTE PTR ds:[rsi]
   140053909:	retf   0x2
   14005390c:	js     0x140053919
   14005390e:	add    al,0x0
   140053910:	mov    al,0xca
   140053912:	add    al,BYTE PTR [rax]
   140053914:	ror    edx,cl
   140053916:	add    al,BYTE PTR [rax]
   140053918:	int3   
   140053919:	cmp    al,BYTE PTR [rax+rax*1]
   14005391c:	ror    edx,cl
   14005391e:	add    al,BYTE PTR [rax]
   140053920:	pop    rdx
   140053921:	retf   
   140053922:	add    al,BYTE PTR [rax]
   140053924:	xchg   esp,eax
   140053925:	cmp    al,BYTE PTR [rax+rax*1]
   140053928:	pop    rdx
   140053929:	retf   
   14005392a:	add    al,BYTE PTR [rax]
   14005392c:	gs retf 
   14005392e:	add    al,BYTE PTR [rax]
   140053930:	test   BYTE PTR [rdx],bh
   140053932:	add    al,0x0
   140053934:	jo     0x140053901
   140053936:	add    al,BYTE PTR [rax]
   140053938:	xchg   ebx,eax
   140053939:	retf   
   14005393a:	add    al,BYTE PTR [rax]
   14005393c:	int3   
   14005393d:	cmp    al,BYTE PTR [rax+rax*1]
   140053940:	xchg   ebx,eax
   140053941:	retf   
   140053942:	add    al,BYTE PTR [rax]
   140053944:	and    eax,0xb80002cc
   140053949:	cmp    al,BYTE PTR [rax+rax*1]
   14005394c:	and    eax,0x300002cc
   140053951:	int3   
   140053952:	add    al,BYTE PTR [rax]
   140053954:	test   al,0x3a
   140053956:	add    al,0x0
   140053958:	xor    ah,cl
   14005395a:	add    al,BYTE PTR [rax]
   14005395c:	fcmove st,st(5)
   14005395e:	add    al,BYTE PTR [rax]
   140053960:	fdivr  DWORD PTR [rdx]
   140053962:	add    al,0x0
   140053964:	loopne 0x140053933
   140053966:	add    al,BYTE PTR [rax]
   140053968:	call   0xe8053c3a
   14005396d:	cmp    eax,DWORD PTR [rax+rax*1]
   140053970:	call   0x142053c42
   140053975:	(bad)  
   140053976:	add    al,BYTE PTR [rax]
   140053978:	nop
   140053979:	cmp    eax,DWORD PTR [rax+rax*1]
   14005397c:	add    cl,dh
   14005397e:	add    al,BYTE PTR [rax]
   140053980:	xor    dh,cl
   140053982:	add    al,BYTE PTR [rax]
   140053984:	jl     0x1400539c1
   140053986:	add    al,0x0
   140053988:	xor    dh,cl
   14005398a:	add    al,BYTE PTR [rax]
   14005398c:	or     dh,0x2
   14005398f:	add    BYTE PTR [rbx+rdi*1+0x4],ch
   140053993:	add    BYTE PTR [rax-0x3cfffd32],al
   140053999:	(bad)  
   14005399a:	add    al,BYTE PTR [rax]
   14005399c:	pop    rax
   14005399d:	cmp    eax,DWORD PTR [rax+rax*1]
   1400539a0:	ret    
   1400539a1:	(bad)  
   1400539a2:	add    al,BYTE PTR [rax]
   1400539a4:	rex.RX iret 
   1400539a6:	add    al,BYTE PTR [rax]
   1400539a8:	cmp    rax,QWORD PTR [rax+rax*1]
   1400539ac:	push   rax
   1400539ad:	iret   
   1400539ae:	add    al,BYTE PTR [rax]
   1400539b0:	jb     0x140053981
   1400539b2:	add    al,BYTE PTR [rax]
   1400539b4:	fdivr  DWORD PTR [rbx]
   1400539b6:	add    al,0x0
   1400539b8:	jb     0x140053989
   1400539ba:	add    al,BYTE PTR [rax]
   1400539bc:	cmc    
   1400539bd:	iret   
   1400539be:	add    al,BYTE PTR [rax]
   1400539c0:	(bad)  
   1400539c1:	cmp    eax,DWORD PTR [rax+rax*1]
   1400539c4:	cmc    
   1400539c5:	iret   
   1400539c6:	add    al,BYTE PTR [rax]
   1400539c8:	add    dl,al
   1400539ca:	add    al,BYTE PTR [rax]
   1400539cc:	mov    ah,0x3b
   1400539ce:	add    al,0x0
   1400539d0:	adc    al,dl
   1400539d2:	add    al,BYTE PTR [rax]
   1400539d4:	rcl    ecx,cl
   1400539d6:	add    al,BYTE PTR [rax]
   1400539d8:	in     al,0x3b
   1400539da:	add    al,0x0
   1400539dc:	loopne 0x1400539af
   1400539de:	add    al,BYTE PTR [rax]
   1400539e0:	std    
   1400539e1:	rol    DWORD PTR [rdx],1
   1400539e3:	add    BYTE PTR [rsp+rdi*1+0x4],ah
   1400539e7:	add    ch,bh
   1400539e9:	rol    DWORD PTR [rdx],1
   1400539eb:	add    BYTE PTR [rip+0x4c0002d2],dh        # 0x18c053cc3
   1400539f1:	cmp    al,0x4
   1400539f3:	add    BYTE PTR [rip+0x720002d2],dh        # 0x1b2053ccb
   1400539f9:	rol    BYTE PTR [rdx],cl
   1400539fb:	add    BYTE PTR [rsp+rdi*1],bh
   1400539fe:	add    al,0x0
   140053a00:	adc    dl,0x2
   140053a03:	add    BYTE PTR [rcx-0x7bfffd2e],ah
   140053a09:	or     eax,DWORD PTR [rax+rax*1]
   140053a0c:	movabs eax,ds:0x840002d2d00002d2
   140053a15:	cmp    al,0x4
   140053a17:	add    al,dl
   140053a19:	rol    BYTE PTR [rdx],cl
   140053a1b:	add    BYTE PTR [rbx-0x2d],dl
   140053a1e:	add    al,BYTE PTR [rax]
   140053a20:	je     0x140053a5e
   140053a22:	add    al,0x0
   140053a24:	(bad)  
   140053a25:	rol    DWORD PTR [rdx],cl
   140053a27:	add    BYTE PTR [rdx-0x43fffd2d],al
   140053a2d:	cmp    al,0x4
   140053a2f:	add    BYTE PTR [rdx-0x4ffffd2d],al
   140053a35:	rol    DWORD PTR [rdx],cl
   140053a37:	add    BYTE PTR [rax-0x4ffffbc4],ch
   140053a3d:	rol    DWORD PTR [rdx],cl
   140053a3f:	add    BYTE PTR [rdi],dh
   140053a41:	(bad)  
   140053a42:	add    al,BYTE PTR [rax]
   140053a44:	cwde   
   140053a45:	cmp    al,0x4
   140053a47:	add    BYTE PTR [rax-0x2c],dl
   140053a4a:	add    al,BYTE PTR [rax]
   140053a4c:	ja     0x140053a22
   140053a4e:	add    al,BYTE PTR [rax]
   140053a50:	xchg   esp,eax
   140053a51:	rex.WRB add al,0x0
   140053a54:	adc    ah,0x2
   140053a57:	add    BYTE PTR [rsi-0x6bfffd2c],bl
   140053a5d:	rex.WRB add al,0x0
   140053a60:	sahf   
   140053a61:	(bad)  
   140053a62:	add    al,BYTE PTR [rax]
   140053a64:	ret    0x2d4
   140053a67:	add    al,ah
   140053a69:	cmp    al,0x4
   140053a6b:	add    dl,al
   140053a6d:	(bad)  
   140053a6e:	add    al,BYTE PTR [rax]
   140053a70:	enter  0x2d4,0x0
   140053a74:	sar    BYTE PTR [rsp+rax*1],1
   140053a77:	add    al,dl
   140053a79:	(bad)  
   140053a7a:	add    al,BYTE PTR [rax]
   140053a7c:	add    ch,dl
   140053a7e:	add    al,BYTE PTR [rax]
   140053a80:	xchg   esp,eax
   140053a81:	rex.WRB add al,0x0
   140053a84:	add    ch,dl
   140053a86:	add    al,BYTE PTR [rax]
   140053a88:	movabs al,ds:0xa000040e200002d5
   140053a91:	(bad)  
   140053a92:	add    al,BYTE PTR [rax]
   140053a94:	or     eax,0xf40002d6
   140053a99:	cmp    al,0x4
   140053a9b:	add    BYTE PTR [rax],dl
   140053a9d:	(bad)  
   140053a9e:	add    al,BYTE PTR [rax]
   140053aa0:	jbe    0x140053a78
   140053aa2:	add    al,BYTE PTR [rax]
   140053aa4:	js     0x140053ab1
   140053aa6:	add    al,0x0
   140053aa8:	adc    dh,0x2
   140053aab:	add    BYTE PTR [rbp-0x6bfffd2a],dl
   140053ab1:	rex.WRB add al,0x0
   140053ab4:	xchg   ebp,eax
   140053ab5:	(bad)  
   140053ab6:	add    al,BYTE PTR [rax]
   140053ab8:	loopne 0x140053a90
   140053aba:	add    al,BYTE PTR [rax]
   140053abc:	xor    BYTE PTR [rip+0xffffffffd6e00004],bh        # 0x116e53ac6
   140053ac2:	add    al,BYTE PTR [rax]
   140053ac4:	out    0xd6,al
   140053ac6:	add    al,BYTE PTR [rax]
   140053ac8:	and    BYTE PTR [rip+0xffffffffd6f00004],bh        # 0x116f53ad2
   140053ace:	add    al,BYTE PTR [rax]
   140053ad0:	(bad)  
   140053ad1:	xlat   BYTE PTR ds:[rbx]
   140053ad2:	add    al,BYTE PTR [rax]
   140053ad4:	xchg   esp,eax
   140053ad5:	rex.WRB add al,0x0
   140053ad8:	and    bh,dl
   140053ada:	add    al,BYTE PTR [rax]
   140053adc:	je     0x140053ab5
   140053ade:	add    al,BYTE PTR [rax]
   140053ae0:	fdivr  DWORD PTR [rbx]
   140053ae2:	add    al,0x0
   140053ae4:	adc    bh,0x2
   140053ae7:	add    BYTE PTR [rdi+rdx*8+0x4d940002],ch
   140053aee:	add    al,0x0
   140053af0:	mov    al,0xd7
   140053af2:	add    al,BYTE PTR [rax]
   140053af4:	xchg   ecx,eax
   140053af5:	fadd   DWORD PTR [rdx]
   140053af7:	add    BYTE PTR [rax],dh
   140053af9:	(bad)  
   140053afa:	add    al,0x0
   140053afc:	loopne 0x140053ad6
   140053afe:	add    al,BYTE PTR [rax]
   140053b00:	or     ebx,ecx
   140053b02:	add    al,BYTE PTR [rax]
   140053b04:	ins    BYTE PTR es:[rdi],dx
   140053b05:	cmp    eax,0xd90b0004
   140053b0a:	add    al,BYTE PTR [rax]
   140053b0c:	xor    al,0xda
   140053b0e:	add    al,BYTE PTR [rax]
   140053b10:	push   rsp
   140053b11:	cmp    eax,0xda340004
   140053b16:	add    al,BYTE PTR [rax]
   140053b18:	rex fiadd DWORD PTR [rdx]
   140053b1b:	add    BYTE PTR [rbp+rdi*1+0x4],al
   140053b1f:	add    BYTE PTR [rax-0x26],al
   140053b22:	add    al,BYTE PTR [rax]
   140053b24:	adc    bl,bl
   140053b26:	add    al,BYTE PTR [rax]
   140053b28:	js     0x140053b35
   140053b2a:	add    al,0x0
   140053b2c:	and    bl,bl
   140053b2e:	add    al,BYTE PTR [rax]
   140053b30:	rex.WX fild DWORD PTR [rdx]
   140053b33:	add    BYTE PTR [rcx*2-0x24b5fffc],ch
   140053b3a:	add    al,BYTE PTR [rax]
   140053b3c:	(bad)  
   140053b3d:	fild   DWORD PTR [rdx]
   140053b3f:	add    BYTE PTR [rax-0x38fffbc3],ah
   140053b45:	fild   DWORD PTR [rdx]
   140053b47:	add    dh,ah
   140053b49:	fild   DWORD PTR [rdx]
   140053b4b:	add    BYTE PTR [rbp+rdi*1-0x2419fffc],cl
   140053b52:	add    al,BYTE PTR [rax]
   140053b54:	clc    
   140053b55:	fild   DWORD PTR [rdx]
   140053b57:	add    BYTE PTR [rbp+rdi*1+0x4],bh
   140053b5b:	add    BYTE PTR [rax],dl
   140053b5d:	fadd   QWORD PTR [rdx]
   140053b5f:	add    BYTE PTR [rip+0xfffffffffc0002dc],ah        # 0x13c053e41
   140053b65:	cmp    eax,0xdc250004
   140053b6a:	add    al,BYTE PTR [rax]
   140053b6c:	rex.WXB fadd QWORD PTR [r10]
   140053b6f:	add    ah,al
   140053b71:	cmp    eax,0xdc4b0004
   140053b76:	add    al,BYTE PTR [rax]
   140053b78:	pop    rcx
   140053b79:	fadd   QWORD PTR [rdx]
   140053b7b:	add    BYTE PTR [rbp+rdi*1-0x238ffffc],dh
   140053b82:	add    al,BYTE PTR [rax]
   140053b84:	test   esp,ebx
   140053b86:	add    al,BYTE PTR [rax]
   140053b88:	cld    
   140053b89:	cmp    eax,0xdc850004
   140053b8e:	add    al,BYTE PTR [rax]
   140053b90:	stos   DWORD PTR es:[rdi],eax
   140053b91:	fadd   QWORD PTR [rdx]
   140053b93:	add    al,ch
   140053b95:	cmp    eax,0xdcab0004
   140053b9a:	add    al,BYTE PTR [rax]
   140053b9c:	mov    ecx,0xd80002dc
   140053ba1:	cmp    eax,0xdcd00004
   140053ba6:	add    al,BYTE PTR [rax]
   140053ba8:	jmp    0x140053b86
   140053baa:	add    al,BYTE PTR [rax]
   140053bac:	mov    ah,0x1e
   140053bae:	add    al,0x0
   140053bb0:	lock fadd QWORD PTR [rdx]
   140053bb3:	add    BYTE PTR [rbp+rbx*8+0x2],cl
   140053bb7:	add    BYTE PTR [rax+0x20],dl
   140053bba:	add    al,0x0
   140053bbc:	push   rax
   140053bbd:	fld    QWORD PTR [rdx]
   140053bbf:	add    BYTE PTR [rbp-0x23],dh
   140053bc2:	add    al,BYTE PTR [rax]
   140053bc4:	mov    ah,0x1e
   140053bc6:	add    al,0x0
   140053bc8:	sbb    ch,0x2
   140053bcb:	add    bh,cl
   140053bcd:	fld    QWORD PTR [rdx]
   140053bcf:	add    BYTE PTR [rax],ah
   140053bd1:	(bad)  
   140053bd2:	add    al,0x0
   140053bd4:	rcr    ch,1
   140053bd6:	add    al,BYTE PTR [rax]
   140053bd8:	sub    al,0xde
   140053bda:	add    al,BYTE PTR [rax]
   140053bdc:	js     0x140053be9
   140053bde:	add    al,0x0
   140053be0:	xor    dh,bl
   140053be2:	add    al,BYTE PTR [rax]
   140053be4:	push   rsi
   140053be5:	fiadd  WORD PTR [rdx]
   140053be7:	add    BYTE PTR [rax],dh
   140053be9:	(bad)  
   140053bea:	add    al,0x0
   140053bec:	(bad)  
   140053bed:	fiadd  WORD PTR [rdx]
   140053bef:	add    cl,ah
   140053bf1:	fiadd  WORD PTR [rdx]
   140053bf3:	add    ah,ah
   140053bf5:	(bad)  
   140053bf7:	add    al,dh
   140053bf9:	fiadd  WORD PTR [rdx]
   140053bfb:	add    BYTE PTR [rsi-0x6bfffd21],cl
   140053c01:	rex.WRB add al,0x0
   140053c04:	nop
   140053c05:	fild   WORD PTR [rdx]
   140053c07:	add    BYTE PTR [rdi],dl
   140053c09:	loopne 0x140053c0d
   140053c0b:	add    BYTE PTR [rax],cl
   140053c0d:	ds add al,0x0
   140053c10:	and    al,ah
   140053c12:	add    al,BYTE PTR [rax]
   140053c14:	in     al,0xe0
   140053c16:	add    al,BYTE PTR [rax]
   140053c18:	jl     0x140053c58
   140053c1a:	add    al,0x0
   140053c1c:	lock loopne 0x140053c21
   140053c1f:	add    BYTE PTR [rsi-0x13fffd1e],dl
   140053c25:	ds add al,0x0
   140053c28:	xchg   esi,eax
   140053c29:	loop   0x140053c2d
   140053c2b:	add    BYTE PTR [rbx],ch
   140053c2d:	jrcxz  0x140053c31
   140053c2f:	add    al,bl
   140053c31:	ds add al,0x0
   140053c34:	sub    esp,ebx
   140053c36:	add    al,BYTE PTR [rax]
   140053c38:	rex.RXB jrcxz 0x140053c3d
   140053c3b:	add    al,cl
   140053c3d:	ds add al,0x0
   140053c40:	push   rax
   140053c41:	jrcxz  0x140053c45
   140053c43:	add    BYTE PTR [rbp-0x6bfffd1d],cl
   140053c49:	rex.WRB add al,0x0
   140053c4c:	nop
   140053c4d:	jrcxz  0x140053c51
   140053c4f:	add    dl,al
   140053c51:	in     al,0x2
   140053c53:	add    BYTE PTR [rax],cl
   140053c55:	(bad)  
   140053c56:	add    al,0x0
   140053c58:	shl    ah,1
   140053c5a:	add    al,BYTE PTR [rax]
   140053c5c:	sbb    ah,dh
   140053c5e:	add    al,BYTE PTR [rax]
   140053c60:	ins    BYTE PTR es:[rdi],dx
   140053c61:	(bad)  
   140053c62:	add    al,0x0
   140053c64:	and    dh,ah
   140053c66:	add    al,BYTE PTR [rax]
   140053c68:	data16 out 0x2,al
   140053c6b:	add    BYTE PTR [rax+rax*2],al
   140053c6e:	add    al,0x0
   140053c70:	data16 out 0x2,al
   140053c73:	add    cl,cl
   140053c75:	out    0x2,al
   140053c77:	add    BYTE PTR [rdi+rdi*1-0x1936fffc],dh
   140053c7e:	add    al,BYTE PTR [rax]
   140053c80:	(bad)  
   140053c82:	add    al,BYTE PTR [rax]
   140053c84:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053c85:	(bad)  
   140053c86:	add    al,0x0
   140053c88:	loopne 0x140053c70
   140053c8a:	add    al,BYTE PTR [rax]
   140053c8c:	in     al,0xe9
   140053c8e:	add    al,BYTE PTR [rax]
   140053c90:	enter  0x43f,0x0
   140053c94:	lock jmp 0x12a213c9c
   140053c9a:	add    al,BYTE PTR [rax]
   140053c9c:	add    al,0x40
   140053c9e:	add    al,0x0
   140053ca0:	sbb    al,0xea
   140053ca2:	add    al,BYTE PTR [rax]
   140053ca4:	(bad)  
   140053ca5:	(bad)  
   140053ca6:	add    al,BYTE PTR [rax]
   140053ca8:	lock (bad) 
   140053caa:	add    al,0x0
   140053cac:	(bad)  
   140053cad:	(bad)  
   140053cae:	add    al,BYTE PTR [rax]
   140053cb0:	nop
   140053cb1:	(bad)  
   140053cb2:	add    al,BYTE PTR [rax]
   140053cb4:	loopne 0x140053cf5
   140053cb6:	add    al,0x0
   140053cb8:	nop
   140053cb9:	(bad)  
   140053cba:	add    al,BYTE PTR [rax]
   140053cbc:	jbe    0x140053caa
   140053cbe:	add    al,BYTE PTR [rax]
   140053cc0:	adc    al,0x40
   140053cc2:	add    al,0x0
   140053cc4:	sub    ah,0x2
   140053cc7:	add    BYTE PTR [rsi+rbp*8+0x2],cl
   140053ccb:	add    ah,al
   140053ccd:	add    al,0x0
   140053cd0:	push   rax
   140053cd1:	out    dx,al
   140053cd2:	add    al,BYTE PTR [rax]
   140053cd4:	pop    rsi
   140053cd5:	out    dx,eax
   140053cd6:	add    al,BYTE PTR [rax]
   140053cd8:	and    BYTE PTR [rcx+0x4],al
   140053cdb:	add    BYTE PTR [rax-0x11],ah
   140053cde:	add    al,BYTE PTR [rax]
   140053ce0:	mov    bh,0xf0
   140053ce2:	add    al,BYTE PTR [rax]
   140053ce4:	cmp    BYTE PTR [rcx+0x4],al
   140053ce7:	add    al,al
   140053ce9:	lock add al,BYTE PTR [rax]
   140053cec:	xchg   cl,dh
   140053cee:	add    al,BYTE PTR [rax]
   140053cf0:	mov    WORD PTR [rcx+0x4],es
   140053cf3:	add    BYTE PTR [rsi-0x45fffd0f],al
   140053cf9:	icebp  
   140053cfa:	add    al,BYTE PTR [rax]
   140053cfc:	js     0x140053d3f
   140053cfe:	add    al,0x0
   140053d00:	mov    edx,0xd00002f1
   140053d05:	icebp  
   140053d06:	add    al,BYTE PTR [rax]
   140053d08:	push   0xffffffffd0000441
   140053d0d:	icebp  
   140053d0e:	add    al,BYTE PTR [rax]
   140053d10:	jns    0x140053d04
   140053d12:	add    al,BYTE PTR [rax]
   140053d14:	push   rsp
   140053d15:	rex.B add al,0x0
   140053d18:	jns    0x140053d0c
   140053d1a:	add    al,BYTE PTR [rax]
   140053d1c:	shl    edx,0x2
   140053d1f:	add    BYTE PTR [rax+0x41],ch
   140053d22:	add    al,0x0
   140053d24:	shl    dl,1
   140053d26:	add    al,BYTE PTR [rax]
   140053d28:	and    ebp,esi
   140053d2a:	add    al,BYTE PTR [rax]
   140053d2c:	movabs al,ds:0xd10002f530000441
   140053d35:	cli    
   140053d36:	add    al,BYTE PTR [rax]
   140053d38:	loopne 0x140053d7b
   140053d3a:	add    al,0x0
   140053d3c:	loopne 0x140053d38
   140053d3e:	add    al,BYTE PTR [rax]
   140053d40:	(bad)  
   140053d41:	cld    
   140053d42:	add    al,BYTE PTR [rax]
   140053d44:	push   rsp
   140053d45:	rex.X add al,0x0
   140053d48:	add    ch,bh
   140053d4a:	add    al,BYTE PTR [rax]
   140053d4c:	int3   
   140053d4d:	add    DWORD PTR [rbx],eax
   140053d4f:	add    BYTE PTR [rdx+rax*2+0x4],ch
   140053d53:	add    al,dl
   140053d55:	add    DWORD PTR [rbx],eax
   140053d57:	add    BYTE PTR [rbp+0x3],bl
   140053d5a:	add    eax,DWORD PTR [rax]
   140053d5c:	xor    BYTE PTR [rbx+0x4],al
   140053d5f:	add    BYTE PTR [rax+0x3],ah
   140053d62:	add    eax,DWORD PTR [rax]
   140053d64:	outs   dx,BYTE PTR ds:[rsi]
   140053d65:	add    al,0x3
   140053d67:	add    BYTE PTR [rax],ch
   140053d69:	rex.R add al,0x0
   140053d6c:	jo     0x140053d72
   140053d6e:	add    eax,DWORD PTR [rax]
   140053d70:	ins    BYTE PTR es:[rdi],dx
   140053d71:	add    eax,0x451c0003
   140053d76:	add    al,0x0
   140053d78:	jo     0x140053d7f
   140053d7a:	add    eax,DWORD PTR [rax]
   140053d7c:	stos   BYTE PTR es:[rdi],al
   140053d7d:	(bad)  
   140053d7e:	add    eax,DWORD PTR [rax]
   140053d80:	add    BYTE PTR [rsi+0x4],al
   140053d83:	add    BYTE PTR [rax-0x33fffcfa],dh
   140053d89:	(bad)  
   140053d8a:	add    eax,DWORD PTR [rax]
   140053d8c:	mov    ah,0x27
   140053d8e:	add    al,0x0
   140053d90:	rol    BYTE PTR [rdi],1
   140053d92:	add    eax,DWORD PTR [rax]
   140053d94:	out    dx,al
   140053d95:	or     DWORD PTR [rbx],eax
   140053d97:	add    BYTE PTR [rax],bl
   140053d99:	rex.RX add al,0x0
   140053d9c:	lock or DWORD PTR [rbx],eax
   140053d9f:	add    BYTE PTR [rip+0x6000030a],dl        # 0x1a00540af
   140053da5:	rex.RX add al,0x0
   140053da8:	adc    eax,0x1a00030a
   140053dad:	or     eax,DWORD PTR [rbx]
   140053daf:	add    BYTE PTR [rsi+rax*2+0x4],al
   140053db3:	add    BYTE PTR [rdx],bl
   140053db5:	or     eax,DWORD PTR [rbx]
   140053db7:	add    BYTE PTR [rbx],ah
   140053db9:	or     eax,DWORD PTR [rbx]
   140053dbb:	add    BYTE PTR [rsi+rax*2],dh
   140053dbe:	add    al,0x0
   140053dc0:	xor    BYTE PTR [rbx],cl
   140053dc2:	add    eax,DWORD PTR [rax]
   140053dc4:	push   rbp
   140053dc5:	or     eax,DWORD PTR [rbx]
   140053dc7:	add    BYTE PTR [rax+0x55000446],bl
   140053dcd:	or     eax,DWORD PTR [rbx]
   140053dcf:	add    BYTE PTR [rbp+0x7c00030c],ch
   140053dd5:	rex.RX add al,0x0
   140053dd8:	lods   eax,DWORD PTR ds:[rsi]
   140053dd9:	or     al,0x3
   140053ddb:	add    BYTE PTR [rsi+0x6c00030c],dh
   140053de1:	rex.RX add al,0x0
   140053de4:	ror    BYTE PTR [rbx+rax*1],0x0
   140053de8:	out    0xc,al
   140053dea:	add    eax,DWORD PTR [rax]
   140053dec:	(bad)  
   140053ded:	rex.RX add al,0x0
   140053df0:	out    0xc,al
   140053df2:	add    eax,DWORD PTR [rax]
   140053df4:	imul   ecx,DWORD PTR [rsi],0x3
   140053df7:	add    BYTE PTR [rsi+rax*2+0xe6b0004],dh
   140053dfe:	add    eax,DWORD PTR [rax]
   140053e00:	jne    0x140053e10
   140053e02:	add    eax,DWORD PTR [rax]
   140053e04:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140053e05:	rex.RX add al,0x0
   140053e08:	or     BYTE PTR [rsi],0x3
   140053e0b:	add    BYTE PTR [rdi+0x13],cl
   140053e0e:	add    eax,DWORD PTR [rax]
   140053e10:	loopne 0x140053e58
   140053e12:	add    al,0x0
   140053e14:	jo     0x140053e29
   140053e16:	add    eax,DWORD PTR [rax]
   140053e18:	mov    esp,0x64000313
   140053e1d:	rex.RXB add al,0x0
   140053e20:	mov    esp,0x69000313
   140053e25:	adc    al,0x3
   140053e27:	add    BYTE PTR [rax+0x47],cl
   140053e2a:	add    al,0x0
   140053e2c:	imul   edx,DWORD PTR [rbx+rax*1],0x3148300
   140053e33:	add    BYTE PTR [rax],bh
   140053e35:	rex.RXB add al,0x0
   140053e38:	nop
   140053e39:	adc    al,0x3
   140053e3b:	add    ch,dh
   140053e3d:	adc    al,0x3
   140053e3f:	add    BYTE PTR [rax],bl
   140053e41:	sub    al,0x4
   140053e43:	add    BYTE PTR [rax],al
   140053e45:	adc    eax,0x15210003
   140053e4a:	add    eax,DWORD PTR [rax]
   140053e4c:	xchg   esp,eax
   140053e4d:	rex.WRB add al,0x0
   140053e50:	xor    BYTE PTR [rip+0x15550003],dl        # 0x1555a3e59
   140053e56:	add    eax,DWORD PTR [rax]
   140053e58:	xchg   esp,eax
   140053e59:	rex.WRB add al,0x0
   140053e5c:	(bad)  
   140053e5d:	adc    eax,0x15a70003
   140053e62:	add    eax,DWORD PTR [rax]
   140053e64:	test   BYTE PTR [rdi+0x4],al
   140053e67:	add    BYTE PTR [rax+0x69000315],dh
   140053e6d:	sbb    DWORD PTR [rbx],eax
   140053e6f:	add    ah,al
   140053e71:	rex.RXB add al,0x0
   140053e74:	jo     0x140053e8f
   140053e76:	add    eax,DWORD PTR [rax]
   140053e78:	jae    0x140053e94
   140053e7a:	add    eax,DWORD PTR [rax]
   140053e7c:	xor    al,0x48
   140053e7e:	add    al,0x0
   140053e80:	sbb    BYTE PTR [rdx],0x3
   140053e83:	add    BYTE PTR [rcx],dl
   140053e85:	sbb    eax,DWORD PTR [rbx]
   140053e87:	add    BYTE PTR [rax+rcx*2+0x1b200004],al
   140053e8e:	add    eax,DWORD PTR [rax]
   140053e90:	xor    eax,0xc400031d
   140053e95:	rex.W add al,0x0
   140053e98:	rex sbb eax,0x1d730003
   140053e9e:	add    eax,DWORD PTR [rax]
   140053ea0:	pop    rsp
   140053ea1:	rex.WB add al,0x0
   140053ea4:	sbb    BYTE PTR [rip+0x1dd20003],0x3        # 0x15dd73eae
   140053eab:	add    BYTE PTR [rcx+rcx*2+0x4],ah
   140053eaf:	add    al,ah
   140053eb1:	sbb    eax,0x1e3a0003
   140053eb6:	add    eax,DWORD PTR [rax]
   140053eb8:	ins    BYTE PTR es:[rdi],dx
   140053eb9:	rex.WB add al,0x0
   140053ebc:	rex (bad) 
   140053ebe:	add    eax,DWORD PTR [rax]
   140053ec0:	jbe    0x140053ee0
   140053ec2:	add    eax,DWORD PTR [rax]
   140053ec4:	and    al,0x31
   140053ec6:	add    al,0x0
   140053ec8:	sbb    BYTE PTR [rsi],0x3
   140053ecb:	add    BYTE PTR [rdi-0x13fffce2],ah
   140053ed1:	xor    BYTE PTR [rax+rax*1],al
   140053ed4:	mov    al,0x1e
   140053ed6:	add    eax,DWORD PTR [rax]
   140053ed8:	out    0x1e,al
   140053eda:	add    eax,DWORD PTR [rax]
   140053edc:	pop    rsp
   140053edd:	xor    DWORD PTR [rax+rax*1],eax
   140053ee0:	lock (bad) 
   140053ee2:	add    eax,DWORD PTR [rax]
   140053ee4:	es (bad) 
   140053ee6:	add    eax,DWORD PTR [rax]
   140053ee8:	and    al,0x31
   140053eea:	add    al,0x0
   140053eec:	xor    BYTE PTR [rdi],bl
   140053eee:	add    eax,DWORD PTR [rax]
   140053ef0:	rex.W (bad) 
   140053ef2:	add    eax,DWORD PTR [rax]
   140053ef4:	in     al,dx
   140053ef5:	xor    BYTE PTR [rax+rax*1],al
   140053ef8:	push   rax
   140053ef9:	(bad)  
   140053efa:	add    eax,DWORD PTR [rax]
   140053efc:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140053efd:	(bad)  
   140053efe:	add    eax,DWORD PTR [rax]
   140053f00:	in     al,dx
   140053f01:	xor    BYTE PTR [rax+rax*1],al
   140053f04:	(bad)  
   140053f05:	(bad)  
   140053f06:	add    eax,DWORD PTR [rax]
   140053f08:	cmp    esp,DWORD PTR [rax]
   140053f0a:	add    eax,DWORD PTR [rax]
   140053f0c:	xchg   esp,eax
   140053f0d:	rex.WB add al,0x0
   140053f10:	cmp    al,0x20
   140053f12:	add    eax,DWORD PTR [rax]
   140053f14:	(bad)  
   140053f15:	and    BYTE PTR [rbx],al
   140053f17:	add    ah,al
   140053f19:	rex.WB add al,0x0
   140053f1c:	fsub   DWORD PTR [rax]
   140053f1e:	add    eax,DWORD PTR [rax]
   140053f20:	(bad)  
   140053f21:	and    al,BYTE PTR [rbx]
   140053f23:	add    BYTE PTR [rdx+rcx*2],al
   140053f26:	add    al,0x0
   140053f28:	or     BYTE PTR [rdx],ah
   140053f2a:	add    eax,DWORD PTR [rax]
   140053f2c:	jno    0x140053f50
   140053f2e:	add    eax,DWORD PTR [rax]
   140053f30:	xchg   esp,eax
   140053f31:	rex.WRB add al,0x0
   140053f34:	je     0x140053f58
   140053f36:	add    eax,DWORD PTR [rax]
   140053f38:	shl    DWORD PTR [rdx],0x3
   140053f3b:	add    BYTE PTR [rax],ah
   140053f3d:	(bad)  
   140053f3e:	add    al,0x0
   140053f40:	(bad)
   140053f44:	add    DWORD PTR [rbx],esp
   140053f46:	add    eax,DWORD PTR [rax]
   140053f48:	js     0x140053f55
   140053f4a:	add    al,0x0
   140053f4c:	add    al,0x23
   140053f4e:	add    eax,DWORD PTR [rax]
   140053f50:	xor    al,0x23
   140053f52:	add    eax,DWORD PTR [rax]
   140053f54:	xchg   esp,eax
   140053f55:	rex.WRB add al,0x0
   140053f58:	xor    al,0x23
   140053f5a:	add    eax,DWORD PTR [rax]
   140053f5c:	pop    rcx
   140053f5d:	and    eax,DWORD PTR [rbx]
   140053f5f:	add    BYTE PTR [rax],dh
   140053f61:	(bad)  
   140053f62:	add    al,0x0
   140053f64:	pop    rsp
   140053f65:	and    eax,DWORD PTR [rbx]
   140053f67:	add    BYTE PTR [rbp-0x27fffcdd],bh
   140053f6d:	cmp    eax,DWORD PTR [rax+rax*1]
   140053f70:	enter  0x323,0x0
   140053f74:	adc    ah,BYTE PTR [rbx+rax*1]
   140053f77:	add    BYTE PTR [rbp+rcx*2+0x24140004],dl
   140053f7e:	add    eax,DWORD PTR [rax]
   140053f80:	push   0x24
   140053f82:	add    eax,DWORD PTR [rax]
   140053f84:	xchg   esp,eax
   140053f85:	rex.WRB add al,0x0
   140053f88:	ins    BYTE PTR es:[rdi],dx
   140053f89:	and    al,0x3
   140053f8b:	add    BYTE PTR [rsp+0x6300003],dl
   140053f92:	add    al,0x0
   140053f94:	xchg   esp,eax
   140053f95:	and    al,0x3
   140053f97:	add    BYTE PTR [rcx],dh
   140053f99:	and    eax,0xe200003
   140053f9e:	add    al,0x0
   140053fa0:	xor    al,0x25
   140053fa2:	add    eax,DWORD PTR [rax]
   140053fa4:	je     0x140053fcc
   140053fa6:	add    eax,DWORD PTR [rax]
   140053fa8:	adc    al,0x4a
   140053faa:	add    al,0x0
   140053fac:	xchg   esp,eax
   140053fad:	add    eax,DWORD PTR es:[rax]
   140053fb0:	mov    ebx,0x28000326
   140053fb5:	rex.WX add al,0x0
   140053fb8:	mov    esp,0xf0000326
   140053fbd:	add    eax,DWORD PTR es:[rax]
   140053fc0:	xchg   esp,eax
   140053fc1:	rex.WRB add al,0x0
   140053fc4:	lock add eax,DWORD PTR es:[rax]
   140053fc8:	ins    DWORD PTR es:[rdi],dx
   140053fc9:	(bad)  
   140053fca:	add    eax,DWORD PTR [rax]
   140053fcc:	js     0x140053fd9
   140053fce:	add    al,0x0
   140053fd0:	jl     0x140053ff9
   140053fd2:	add    eax,DWORD PTR [rax]
   140053fd4:	icebp  
   140053fd5:	sub    BYTE PTR [rbx],al
   140053fd7:	add    BYTE PTR [rax+0x4a],dl
   140053fda:	add    al,0x0
   140053fdc:	hlt    
   140053fdd:	sub    BYTE PTR [rbx],al
   140053fdf:	add    BYTE PTR [rdi+0x78000329],dl
   140053fe5:	rex.WX add al,0x0
   140053fe8:	cwde   
   140053fe9:	sub    DWORD PTR [rbx],eax
   140053feb:	add    ch,cl
   140053fed:	sub    DWORD PTR [rbx],eax
   140053fef:	add    BYTE PTR [rdx+rcx*2+0x29e00004],cl
   140053ff6:	add    eax,DWORD PTR [rax]
   140053ff8:	sub    al,BYTE PTR cs:[rbx]
   140053ffb:	add    BYTE PTR [rax+0x22],bh
   140053ffe:	add    al,0x0
   140054000:	sub    al,BYTE PTR [rbx]
   140054003:	add    BYTE PTR [rax+0x3000032a],al
   140054009:	sub    eax,DWORD PTR [rax+rax*1]
   14005400c:	sub    BYTE PTR [rdx],0x3
   14005400f:	add    BYTE PTR [rdi+0x3800032a],ah
   140054015:	(bad)  
   140054016:	add    al,0x0
   140054018:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140054019:	sub    al,BYTE PTR [rbx]
   14005401b:	add    bh,cl
   14005401d:	sub    al,BYTE PTR [rbx]
   14005401f:	add    al,dh
   140054021:	(bad)  
   140054022:	add    al,0x0
   140054024:	iret   
   140054025:	sub    al,BYTE PTR [rbx]
   140054027:	add    bl,bh
   140054029:	sub    al,BYTE PTR [rbx]
   14005402b:	add    BYTE PTR [rdi+rax*1+0x4],bh
   14005402f:	add    bl,bh
   140054031:	sub    al,BYTE PTR [rbx]
   140054033:	add    BYTE PTR [rdx],bl
   140054035:	sub    eax,DWORD PTR [rbx]
   140054037:	add    ah,dh
   140054039:	push   rbx
   14005403a:	add    al,0x0
   14005403c:	sbb    ch,BYTE PTR [rbx]
   14005403e:	add    eax,DWORD PTR [rax]
   140054040:	sub    eax,DWORD PTR ss:[rbx]
   140054043:	add    ah,dh
   140054045:	push   rbx
   140054046:	add    al,0x0
   140054048:	cmp    ch,BYTE PTR [rbx]
   14005404a:	add    eax,DWORD PTR [rax]
   14005404c:	pop    rcx
   14005404d:	sub    eax,DWORD PTR [rbx]
   14005404f:	add    ah,dh
   140054051:	push   rbx
   140054052:	add    al,0x0
   140054054:	pop    rcx
   140054055:	sub    eax,DWORD PTR [rbx]
   140054057:	add    BYTE PTR [rcx+0x2b],dh
   14005405a:	add    eax,DWORD PTR [rax]
   14005405c:	hlt    
   14005405d:	push   rbx
   14005405e:	add    al,0x0
   140054060:	jno    0x14005408d
   140054062:	add    eax,DWORD PTR [rax]
   140054064:	mov    DWORD PTR [rbx],ebp
   140054066:	add    eax,DWORD PTR [rax]
   140054068:	hlt    
   140054069:	push   rbx
   14005406a:	add    al,0x0
   14005406c:	mov    DWORD PTR [rbx],ebp
   14005406e:	add    eax,DWORD PTR [rax]
   140054070:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140054071:	sub    eax,DWORD PTR [rbx]
   140054073:	add    ah,dh
   140054075:	push   rbx
   140054076:	add    al,0x0
   140054078:	test   eax,0xc800032b
   14005407d:	sub    eax,DWORD PTR [rbx]
   14005407f:	add    ah,dh
   140054081:	push   rbx
   140054082:	add    al,0x0
   140054084:	leave  
   140054085:	sub    eax,DWORD PTR [rbx]
   140054087:	add    ch,dh
   140054089:	sub    eax,DWORD PTR [rbx]
   14005408b:	add    BYTE PTR [rax+0x9],dh
   14005408e:	add    al,0x0
   140054090:	stc    
   140054091:	sub    eax,DWORD PTR [rbx]
   140054093:	add    BYTE PTR [rcx],dl
   140054095:	sub    al,0x3
   140054097:	add    ah,dh
   140054099:	push   rbx
   14005409a:	add    al,0x0
   14005409c:	sbb    DWORD PTR [rbx+rax*1],ebp
   14005409f:	add    BYTE PTR [rcx],dh
   1400540a1:	sub    al,0x3
   1400540a3:	add    ah,dh
   1400540a5:	push   rbx
   1400540a6:	add    al,0x0
   1400540a8:	cmp    DWORD PTR [rbx+rax*1],ebp
   1400540ab:	add    BYTE PTR [rcx+0x2c],dl
   1400540ae:	add    eax,DWORD PTR [rax]
   1400540b0:	hlt    
   1400540b1:	push   rbx
   1400540b2:	add    al,0x0
   1400540b4:	push   rcx
   1400540b5:	sub    al,0x3
   1400540b7:	add    BYTE PTR [rcx+0x2c],ch
   1400540ba:	add    eax,DWORD PTR [rax]
   1400540bc:	hlt    
   1400540bd:	push   rbx
   1400540be:	add    al,0x0
   1400540c0:	imul   ebp,DWORD PTR [rbx+rax*1],0x32cb100
   1400540c7:	add    BYTE PTR [rax-0x4efffbf6],ah
   1400540cd:	sub    al,0x3
   1400540cf:	add    cl,cl
   1400540d1:	sub    al,0x3
   1400540d3:	add    ah,dh
   1400540d5:	push   rbx
   1400540d6:	add    al,0x0
   1400540d8:	leave  
   1400540d9:	sub    al,0x3
   1400540db:	add    cl,ah
   1400540dd:	sub    al,0x3
   1400540df:	add    ah,dh
   1400540e1:	push   rbx
   1400540e2:	add    al,0x0
   1400540e4:	loope  0x140054112
   1400540e6:	add    eax,DWORD PTR [rax]
   1400540e8:	fild   QWORD PTR [rip+0xbcc0003]        # 0x14bd140f1
   1400540ee:	add    al,0x0
   1400540f0:	loope  0x14005411f
   1400540f2:	add    eax,DWORD PTR [rax]
   1400540f4:	stc    
   1400540f5:	sub    eax,0x53f40003
   1400540fa:	add    al,0x0
   1400540fc:	stc    
   1400540fd:	sub    eax,0x2e110003
   140054102:	add    eax,DWORD PTR [rax]
   140054104:	hlt    
   140054105:	push   rbx
   140054106:	add    al,0x0
   140054108:	sbb    DWORD PTR [rsi],ebp
   14005410a:	add    eax,DWORD PTR [rax]
   14005410c:	xor    DWORD PTR [rsi],ebp
   14005410e:	add    eax,DWORD PTR [rax]
   140054110:	hlt    
   140054111:	push   rbx
   140054112:	add    al,0x0
   140054114:	cmp    DWORD PTR [rsi],ebp
   140054116:	add    eax,DWORD PTR [rax]
   140054118:	push   rsi
   140054119:	add    eax,DWORD PTR cs:[rax]
   14005411c:	cld    
   14005411d:	or     al,0x4
   14005411f:	add    BYTE PTR [rsi+0x2e],dl
   140054122:	add    eax,DWORD PTR [rax]
   140054124:	jb     0x140054154
   140054126:	add    eax,DWORD PTR [rax]
   140054128:	hlt    
   140054129:	push   rbx
   14005412a:	add    al,0x0
   14005412c:	jb     0x14005415c
   14005412e:	add    eax,DWORD PTR [rax]
   140054130:	mov    ch,BYTE PTR [rsi]
   140054132:	add    eax,DWORD PTR [rax]
   140054134:	hlt    
   140054135:	push   rbx
   140054136:	add    al,0x0
   140054138:	mov    ch,BYTE PTR [rsi]
   14005413a:	add    eax,DWORD PTR [rax]
   14005413c:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005413d:	add    eax,DWORD PTR cs:[rax]
   140054140:	hlt    
   140054141:	push   rbx
   140054142:	add    al,0x0
   140054144:	stos   BYTE PTR es:[rdi],al
   140054145:	add    eax,DWORD PTR cs:[rax]
   140054148:	(bad)  
   140054149:	add    eax,DWORD PTR cs:[rax]
   14005414c:	hlt    
   14005414d:	push   rbx
   14005414e:	add    al,0x0
   140054150:	retf   0x32e
   140054153:	add    dh,ah
   140054155:	add    eax,DWORD PTR cs:[rax]
   140054158:	hlt    
   140054159:	push   rbx
   14005415a:	add    al,0x0
   14005415c:	out    0x2e,al
   14005415e:	add    eax,DWORD PTR [rax]
   140054160:	or     eax,0xb000032f
   140054165:	(bad)  
   140054166:	add    al,0x0
   140054168:	or     eax,0x2900032f
   14005416d:	(bad)  
   14005416e:	add    eax,DWORD PTR [rax]
   140054170:	hlt    
   140054171:	push   rbx
   140054172:	add    al,0x0
   140054174:	sub    eax,0x4900032f
   140054179:	(bad)  
   14005417a:	add    eax,DWORD PTR [rax]
   14005417c:	hlt    
   14005417d:	push   rbx
   14005417e:	add    al,0x0
   140054180:	rex.WRB (bad) 
   140054182:	add    eax,DWORD PTR [rax]
   140054184:	imul   ebp,DWORD PTR [rdi],0x53f40003
   14005418a:	add    al,0x0
   14005418c:	imul   ebp,DWORD PTR [rdi],0x2fb70003
   140054192:	add    eax,DWORD PTR [rax]
   140054194:	add    BYTE PTR [rax],dl
   140054196:	add    al,0x0
   140054198:	mov    bh,0x2f
   14005419a:	add    eax,DWORD PTR [rax]
   14005419c:	jmp    FWORD PTR [rdi]
   14005419e:	add    eax,DWORD PTR [rax]
   1400541a0:	movabs al,ds:0x4800032fff00040a
   1400541a9:	xor    BYTE PTR [rbx],al
   1400541ab:	add    BYTE PTR [rax+0x48000410],dl
   1400541b1:	xor    BYTE PTR [rbx],al
   1400541b3:	add    BYTE PTR [rcx-0x5ffffcd0],dl
   1400541b9:	or     al,BYTE PTR [rax+rax*1]
   1400541bc:	xchg   ecx,eax
   1400541bd:	xor    BYTE PTR [rbx],al
   1400541bf:	add    BYTE PTR [rcx-0xbfffcd0],ch
   1400541c5:	push   rbx
   1400541c6:	add    al,0x0
   1400541c8:	test   eax,0xc1000330
   1400541cd:	xor    BYTE PTR [rbx],al
   1400541cf:	add    ah,dh
   1400541d1:	push   rbx
   1400541d2:	add    al,0x0
   1400541d4:	shl    DWORD PTR [rax],0x3
   1400541d7:	add    cl,bl
   1400541d9:	xor    BYTE PTR [rbx],al
   1400541db:	add    ah,dh
   1400541dd:	push   rbx
   1400541de:	add    al,0x0
   1400541e0:	fnstenv [rax]
   1400541e2:	add    eax,DWORD PTR [rax]
   1400541e4:	icebp  
   1400541e5:	xor    BYTE PTR [rbx],al
   1400541e7:	add    ah,dh
   1400541e9:	push   rbx
   1400541ea:	add    al,0x0
   1400541ec:	icebp  
   1400541ed:	xor    BYTE PTR [rbx],al
   1400541ef:	add    BYTE PTR [rip+0xfffffffff4000331],cl        # 0x134054526
   1400541f5:	push   rbx
   1400541f6:	add    al,0x0
   1400541f8:	or     eax,0x2d000331
   1400541fd:	xor    DWORD PTR [rbx],eax
   1400541ff:	add    ah,dh
   140054201:	push   rbx
   140054202:	add    al,0x0
   140054204:	sub    eax,0x75000331
   140054209:	xor    DWORD PTR [rbx],eax
   14005420b:	add    BYTE PTR [rax+0x7500040a],ah
   140054211:	xor    DWORD PTR [rbx],eax
   140054213:	add    cl,al
   140054215:	xor    DWORD PTR [rbx],eax
   140054217:	add    BYTE PTR [rdi+rdx*1+0x31c10004],al
   14005421e:	add    eax,DWORD PTR [rax]
   140054220:	fnstenv [rcx]
   140054222:	add    eax,DWORD PTR [rax]
   140054224:	hlt    
   140054225:	push   rbx
   140054226:	add    al,0x0
   140054228:	fnstenv [rcx]
   14005422a:	add    eax,DWORD PTR [rax]
   14005422c:	icebp  
   14005422d:	xor    DWORD PTR [rbx],eax
   14005422f:	add    ah,dh
   140054231:	push   rbx
   140054232:	add    al,0x0
   140054234:	icebp  
   140054235:	xor    DWORD PTR [rbx],eax
   140054237:	add    BYTE PTR [rax+0x32],ah
   14005423a:	add    eax,DWORD PTR [rax]
   14005423c:	fcomp  DWORD PTR [rax]
   14005423e:	add    al,0x0
   140054240:	(bad)  
   140054241:	xor    al,BYTE PTR [rbx]
   140054243:	add    BYTE PTR [rax+0x32],bh
   140054246:	add    eax,DWORD PTR [rax]
   140054248:	hlt    
   140054249:	push   rbx
   14005424a:	add    al,0x0
   14005424c:	js     0x140054280
   14005424e:	add    eax,DWORD PTR [rax]
   140054250:	nop
   140054251:	xor    al,BYTE PTR [rbx]
   140054253:	add    ah,dh
   140054255:	push   rbx
   140054256:	add    al,0x0
   140054258:	cwde   
   140054259:	xor    al,BYTE PTR [rbx]
   14005425b:	add    BYTE PTR [rax-0xbfffcce],dh
   140054261:	push   rbx
   140054262:	add    al,0x0
   140054264:	mov    eax,0xd0000332
   140054269:	xor    al,BYTE PTR [rbx]
   14005426b:	add    ah,dh
   14005426d:	push   rbx
   14005426e:	add    al,0x0
   140054270:	fdiv   DWORD PTR [rdx]
   140054272:	add    eax,DWORD PTR [rax]
   140054274:	lock xor al,BYTE PTR [rbx]
   140054277:	add    ah,dh
   140054279:	push   rbx
   14005427a:	add    al,0x0
   14005427c:	lock xor al,BYTE PTR [rbx]
   14005427f:	add    BYTE PTR [rax],cl
   140054281:	xor    eax,DWORD PTR [rbx]
   140054283:	add    ah,dh
   140054285:	push   rbx
   140054286:	add    al,0x0
   140054288:	adc    BYTE PTR [rbx],dh
   14005428a:	add    eax,DWORD PTR [rax]
   14005428c:	(bad)  
   14005428d:	xor    eax,DWORD PTR [rbx]
   14005428f:	add    BYTE PTR [rdx+rbx*1+0x33370004],dh
   140054296:	add    eax,DWORD PTR [rax]
   140054298:	xor    eax,0x5c000334
   14005429d:	sbb    eax,DWORD PTR [rax+rax*1]
   1400542a0:	(bad)  
   1400542a1:	xor    al,0x3
   1400542a3:	add    BYTE PTR [rdi+0x34],cl
   1400542a6:	add    eax,DWORD PTR [rax]
   1400542a8:	hlt    
   1400542a9:	push   rbx
   1400542aa:	add    al,0x0
   1400542ac:	rex.WRXB xor al,0x3
   1400542af:	add    BYTE PTR [rdi+0x34],ah
   1400542b2:	add    eax,DWORD PTR [rax]
   1400542b4:	hlt    
   1400542b5:	push   rbx
   1400542b6:	add    al,0x0
   1400542b8:	addr32 xor al,0x3
   1400542bb:	add    BYTE PTR [rdi+0x34],bh
   1400542be:	add    eax,DWORD PTR [rax]
   1400542c0:	hlt    
   1400542c1:	push   rbx
   1400542c2:	add    al,0x0
   1400542c4:	jg     0x1400542fa
   1400542c6:	add    eax,DWORD PTR [rax]
   1400542c8:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400542c9:	xor    al,0x3
   1400542cb:	add    BYTE PTR [rax-0x58fffbe4],dh
   1400542d1:	xor    al,0x3
   1400542d3:	add    BYTE PTR [rdi-0xbfffccc],bh
   1400542d9:	push   rbx
   1400542da:	add    al,0x0
   1400542dc:	mov    edi,0xd7000334
   1400542e1:	xor    al,0x3
   1400542e3:	add    ah,dh
   1400542e5:	push   rbx
   1400542e6:	add    al,0x0
   1400542e8:	xlat   BYTE PTR ds:[rbx]
   1400542e9:	xor    al,0x3
   1400542eb:	add    ch,dl
   1400542ed:	xor    eax,0x1e0c0003
   1400542f2:	add    al,0x0
   1400542f4:	xlat   BYTE PTR ds:[rbx]
   1400542f5:	xor    eax,0x35ef0003
   1400542fa:	add    eax,DWORD PTR [rax]
   1400542fc:	hlt    
   1400542fd:	push   rbx
   1400542fe:	add    al,0x0
   140054300:	out    dx,eax
   140054301:	xor    eax,0x360a0003
   140054306:	add    eax,DWORD PTR [rax]
   140054308:	hlt    
   140054309:	push   rbx
   14005430a:	add    al,0x0
   14005430c:	(bad)  
   14005430e:	add    eax,DWORD PTR [rax]
   140054310:	rex.WXB
   140054311:	add    eax,DWORD PTR ss:[rax]
   140054314:	pop    rax
   140054315:	(bad)  
   140054316:	add    al,0x0
   140054318:	rex.WXB
   140054319:	add    eax,DWORD PTR ss:[rax]
   14005431c:	movsxd esi,DWORD PTR [rsi]
   14005431e:	add    eax,DWORD PTR [rax]
   140054320:	hlt    
   140054321:	push   rbx
   140054322:	add    al,0x0
   140054324:	imul   esi,DWORD PTR [rsi],0x3
   140054327:	add    BYTE PTR [rbx-0xbfffcca],al
   14005432d:	push   rbx
   14005432e:	add    al,0x0
   140054330:	xor    DWORD PTR [rsi],0x3
   140054333:	add    BYTE PTR [rdi+0x7c000336],dh
   140054339:	and    BYTE PTR [rax+rax*1],al
   14005433c:	mov    bh,0x36
   14005433e:	add    eax,DWORD PTR [rax]
   140054340:	shl    DWORD PTR [rsi],cl
   140054342:	add    eax,DWORD PTR [rax]
   140054344:	hlt    
   140054345:	push   rbx
   140054346:	add    al,0x0
   140054348:	shl    DWORD PTR [rsi],cl
   14005434a:	add    eax,DWORD PTR [rax]
   14005434c:	(bad)  
   14005434d:	(bad)  
   14005434e:	add    eax,DWORD PTR [rax]
   140054350:	loopne 0x140054373
   140054352:	add    al,0x0
   140054354:	(bad)  
   140054355:	(bad)  
   140054356:	add    eax,DWORD PTR [rax]
   140054358:	sub    esi,DWORD PTR [rdi]
   14005435a:	add    eax,DWORD PTR [rax]
   14005435c:	hlt    
   14005435d:	push   rbx
   14005435e:	add    al,0x0
   140054360:	sub    esi,DWORD PTR [rdi]
   140054362:	add    eax,DWORD PTR [rax]
   140054364:	rex.WRB (bad) 
   140054366:	add    eax,DWORD PTR [rax]
   140054368:	hlt    
   140054369:	push   rbx
   14005436a:	add    al,0x0
   14005436c:	rex.WRB (bad) 
   14005436e:	add    eax,DWORD PTR [rax]
   140054370:	data16 (bad) 
   140054372:	add    eax,DWORD PTR [rax]
   140054374:	hlt    
   140054375:	push   rbx
   140054376:	add    al,0x0
   140054378:	data16 (bad) 
   14005437a:	add    eax,DWORD PTR [rax]
   14005437c:	jg     0x1400543b5
   14005437e:	add    eax,DWORD PTR [rax]
   140054380:	hlt    
   140054381:	push   rbx
   140054382:	add    al,0x0
   140054384:	xchg   BYTE PTR [rdi],dh
   140054386:	add    eax,DWORD PTR [rax]
   140054388:	lahf   
   140054389:	(bad)  
   14005438a:	add    eax,DWORD PTR [rax]
   14005438c:	hlt    
   14005438d:	push   rbx
   14005438e:	add    al,0x0
   140054390:	lahf   
   140054391:	(bad)  
   140054392:	add    eax,DWORD PTR [rax]
   140054394:	mov    eax,0xf4000337
   140054399:	push   rbx
   14005439a:	add    al,0x0
   14005439c:	mov    eax,0xd1000337
   1400543a1:	(bad)  
   1400543a2:	add    eax,DWORD PTR [rax]
   1400543a4:	hlt    
   1400543a5:	push   rbx
   1400543a6:	add    al,0x0
   1400543a8:	shl    DWORD PTR [rdi],1
   1400543aa:	add    eax,DWORD PTR [rax]
   1400543ac:	(bad)  
   1400543ad:	(bad)  
   1400543ae:	add    eax,DWORD PTR [rax]
   1400543b0:	rex.W
   1400543b1:	rex.WX add al,0x0
   1400543b4:	icebp  
   1400543b5:	(bad)  
   1400543b6:	add    eax,DWORD PTR [rax]
   1400543b8:	or     bh,BYTE PTR [rax]
   1400543ba:	add    eax,DWORD PTR [rax]
   1400543bc:	rex.W
   1400543bd:	rex.WX add al,0x0
   1400543c0:	adc    DWORD PTR [rax],edi
   1400543c2:	add    eax,DWORD PTR [rax]
   1400543c4:	sub    edi,DWORD PTR [rax]
   1400543c6:	add    eax,DWORD PTR [rax]
   1400543c8:	rex.W
   1400543c9:	rex.WX add al,0x0
   1400543cc:	sub    edi,DWORD PTR [rax]
   1400543ce:	add    eax,DWORD PTR [rax]
   1400543d0:	(bad)  
   1400543d1:	cmp    BYTE PTR [rbx],al
   1400543d3:	add    ah,dh
   1400543d5:	push   rbx
   1400543d6:	add    al,0x0
   1400543d8:	rex.WXB cmp BYTE PTR [r11],al
   1400543db:	add    BYTE PTR [rbx+0x38],dh
   1400543de:	add    eax,DWORD PTR [rax]
   1400543e0:	hlt    
   1400543e1:	push   rbx
   1400543e2:	add    al,0x0
   1400543e4:	jae    0x14005441e
   1400543e6:	add    eax,DWORD PTR [rax]
   1400543e8:	mov    bh,BYTE PTR [rax]
   1400543ea:	add    eax,DWORD PTR [rax]
   1400543ec:	hlt    
   1400543ed:	push   rbx
   1400543ee:	add    al,0x0
   1400543f0:	mov    bh,BYTE PTR [rax]
   1400543f2:	add    eax,DWORD PTR [rax]
   1400543f4:	jge    0x14005442f
   1400543f6:	add    eax,DWORD PTR [rax]
   1400543f8:	hlt    
   1400543f9:	push   rbx
   1400543fa:	add    al,0x0
   1400543fc:	mov    bh,BYTE PTR [rcx]
   1400543fe:	add    eax,DWORD PTR [rax]
   140054400:	sbb    bh,BYTE PTR [rdx]
   140054402:	add    eax,DWORD PTR [rax]
   140054404:	xor    BYTE PTR [rsi],ah
   140054406:	add    al,0x0
   140054408:	and    BYTE PTR [rdx],bh
   14005440a:	add    eax,DWORD PTR [rax]
   14005440c:	cmp    al,BYTE PTR [r11]
   14005440f:	add    ah,dh
   140054411:	push   rbx
   140054412:	add    al,0x0
   140054414:	cmp    al,BYTE PTR [r11]
   140054417:	add    BYTE PTR [rbp+0x3a],bl
   14005441a:	add    eax,DWORD PTR [rax]
   14005441c:	hlt    
   14005441d:	push   rbx
   14005441e:	add    al,0x0
   140054420:	pop    rbp
   140054421:	cmp    al,BYTE PTR [rbx]
   140054423:	add    BYTE PTR [rcx+0x3a],bh
   140054426:	add    eax,DWORD PTR [rax]
   140054428:	rex.W
   140054429:	rex.WX add al,0x0
   14005442c:	jns    0x140054468
   14005442e:	add    eax,DWORD PTR [rax]
   140054430:	nop
   140054431:	cmp    al,BYTE PTR [rbx]
   140054433:	add    BYTE PTR [rax+0x4a],cl
   140054436:	add    al,0x0
   140054438:	nop
   140054439:	cmp    al,BYTE PTR [rbx]
   14005443b:	add    BYTE PTR [rcx-0xbfffcc6],ch
   140054441:	push   rbx
   140054442:	add    al,0x0
   140054444:	test   eax,0xc200033a
   140054449:	cmp    al,BYTE PTR [rbx]
   14005444b:	add    ah,dh
   14005444d:	push   rbx
   14005444e:	add    al,0x0
   140054450:	ret    0x33a
   140054453:	add    al,ch
   140054455:	cmp    al,BYTE PTR [rbx]
   140054457:	add    ah,dh
   140054459:	push   rbx
   14005445a:	add    al,0x0
   14005445c:	repnz cmp al,BYTE PTR [rbx]
   14005445f:	add    BYTE PTR [rbx],cl
   140054461:	cmp    eax,DWORD PTR [rbx]
   140054463:	add    ah,dh
   140054465:	push   rbx
   140054466:	add    al,0x0
   140054468:	or     edi,DWORD PTR [rbx]
   14005446a:	add    eax,DWORD PTR [rax]
   14005446c:	and    edi,DWORD PTR [rbx]
   14005446e:	add    eax,DWORD PTR [rax]
   140054470:	rex.W
   140054471:	rex.WX add al,0x0
   140054474:	and    edi,DWORD PTR [rbx]
   140054476:	add    eax,DWORD PTR [rax]
   140054478:	cmp    bh,BYTE PTR [rbx]
   14005447a:	add    eax,DWORD PTR [rax]
   14005447c:	rex.W
   14005447d:	rex.WX add al,0x0
   140054480:	rex cmp eax,DWORD PTR [rbx]
   140054483:	add    BYTE PTR [rax+0x3b],bl
   140054486:	add    eax,DWORD PTR [rax]
   140054488:	mov    WORD PTR [rsi],gs
   14005448a:	add    al,0x0
   14005448c:	(bad)  
   14005448d:	cmp    eax,DWORD PTR [rbx]
   14005448f:	add    BYTE PTR [rbx+rdi*1+0x3],bh
   140054493:	add    BYTE PTR [rsi+rbp*1+0x3b800004],dl
   14005449a:	add    eax,DWORD PTR [rax]
   14005449c:	lahf   
   14005449d:	cmp    eax,DWORD PTR [rbx]
   14005449f:	add    BYTE PTR [rsi+rbp*1+0x3ba00004],bl
   1400544a6:	add    eax,DWORD PTR [rax]
   1400544a8:	mov    edi,0xa400033b
   1400544ad:	cs add al,0x0
   1400544b0:	sar    BYTE PTR [rbx],0x3
   1400544b3:	add    bh,bl
   1400544b5:	cmp    eax,DWORD PTR [rbx]
   1400544b7:	add    BYTE PTR [rsi+rbp*1+0x3bf00004],ch
   1400544be:	add    eax,DWORD PTR [rax]
   1400544c0:	(bad)  
   1400544c1:	cmp    al,0x3
   1400544c3:	add    BYTE PTR [rax+0x2f],cl
   1400544c6:	add    al,0x0
   1400544c8:	and    BYTE PTR [rbx+rax*1],bh
   1400544cb:	add    BYTE PTR [rbx],bh
   1400544cd:	cmp    al,0x3
   1400544cf:	add    BYTE PTR [rax+0x2f],dl
   1400544d2:	add    al,0x0
   1400544d4:	cmp    al,0x3
   1400544d7:	add    BYTE PTR [rbx+0x3c],bl
   1400544da:	add    eax,DWORD PTR [rax]
   1400544dc:	pop    rax
   1400544dd:	(bad)  
   1400544de:	add    al,0x0
   1400544e0:	(bad)  
   1400544e1:	cmp    al,0x3
   1400544e3:	add    BYTE PTR [rbx+0x3c],bh
   1400544e6:	add    eax,DWORD PTR [rax]
   1400544e8:	(bad)  
   1400544e9:	(bad)  
   1400544ea:	add    al,0x0
   1400544ec:	cmp    BYTE PTR [rbx+rax*1],0x0
   1400544f0:	fwait
   1400544f1:	cmp    al,0x3
   1400544f3:	add    BYTE PTR [rax+0x2f],ch
   1400544f6:	add    al,0x0
   1400544f8:	movabs al,ds:0x7000033cbb00033c
   140054501:	(bad)  
   140054502:	add    al,0x0
   140054504:	sar    BYTE PTR [rbx+rax*1],0x0
   140054508:	fstp   TBYTE PTR [rbx+rax*1]
   14005450b:	add    BYTE PTR [rax+0x2f],bh
   14005450e:	add    al,0x0
   140054510:	loopne 0x14005454e
   140054512:	add    eax,DWORD PTR [rax]
   140054514:	clc    
   140054515:	cmp    al,0x3
   140054517:	add    BYTE PTR [rax+0x42f],al
   14005451d:	cmp    eax,0x3d1b0003
   140054522:	add    eax,DWORD PTR [rax]
   140054524:	xor    BYTE PTR [rax+rax*1],r8b
   140054528:	and    BYTE PTR [rip+0x3d380003],bh        # 0x17d3d4531
   14005452e:	add    eax,DWORD PTR [rax]
   140054530:	rex.WR xor BYTE PTR [rax+rax*1],r8b
   140054534:	rex cmp eax,0x3d5b0003
   14005453a:	add    eax,DWORD PTR [rax]
   14005453c:	push   rsp
   14005453d:	xor    BYTE PTR [rax+rax*1],al
   140054540:	(bad)  
   140054541:	cmp    eax,0x3d7b0003
   140054546:	add    eax,DWORD PTR [rax]
   140054548:	pop    rsp
   140054549:	xor    BYTE PTR [rax+rax*1],al
   14005454c:	cmp    BYTE PTR [rip+0x3d980003],0x3        # 0x17d9d4556
   140054553:	add    BYTE PTR [rcx+rsi*1+0x4],bh
   140054557:	add    BYTE PTR [rax-0x44fffcc3],ah
   14005455d:	cmp    eax,0x31d40003
   140054562:	add    al,0x0
   140054564:	sar    BYTE PTR [rip+0x3ddb0003],0x3        # 0x17de0456e
   14005456b:	add    ah,bl
   14005456d:	xor    DWORD PTR [rax+rax*1],eax
   140054570:	loopne 0x1400545af
   140054572:	add    eax,DWORD PTR [rax]
   140054574:	clc    
   140054575:	cmp    eax,0x31e40003
   14005457a:	add    al,0x0
   14005457c:	add    BYTE PTR [rsi],bh
   14005457e:	add    eax,DWORD PTR [rax]
   140054580:	(bad)  
   140054581:	add    eax,DWORD PTR ds:[rax]
   140054584:	in     al,dx
   140054585:	xor    DWORD PTR [rax+rax*1],eax
   140054588:	rex
   140054589:	add    eax,DWORD PTR ds:[rax]
   14005458c:	pop    rbx
   14005458d:	add    eax,DWORD PTR ds:[rax]
   140054590:	push   rax
   140054591:	xor    al,BYTE PTR [rax+rax*1]
   140054594:	(bad)  
   140054595:	add    eax,DWORD PTR ds:[rax]
   140054598:	js     0x1400545d8
   14005459a:	add    eax,DWORD PTR [rax]
   14005459c:	pop    rax
   14005459d:	xor    al,BYTE PTR [rax+rax*1]
   1400545a0:	cmp    BYTE PTR [rsi],0x3
   1400545a3:	add    BYTE PTR [rsi+rdi*1+0x32e00003],bl
   1400545aa:	add    al,0x0
   1400545ac:	mov    al,0x3e
   1400545ae:	add    eax,DWORD PTR [rax]
   1400545b0:	retf   
   1400545b1:	add    eax,DWORD PTR ds:[rax]
   1400545b4:	push   rsp
   1400545b5:	xor    eax,DWORD PTR [rax+rax*1]
   1400545b8:	sar    BYTE PTR [rsi],1
   1400545ba:	add    eax,DWORD PTR [rax]
   1400545bc:	jmp    0x1400545fc
   1400545be:	add    eax,DWORD PTR [rax]
   1400545c0:	pop    rsp
   1400545c1:	xor    eax,DWORD PTR [rax+rax*1]
   1400545c4:	lock add eax,DWORD PTR ds:[rax]
   1400545c8:	or     BYTE PTR [rdi],bh
   1400545ca:	add    eax,DWORD PTR [rax]
   1400545cc:	xor    eax,DWORD PTR fs:[rax+rax*1]
   1400545d0:	adc    BYTE PTR [rdi],bh
   1400545d2:	add    eax,DWORD PTR [rax]
   1400545d4:	sub    edi,DWORD PTR [rdi]
   1400545d6:	add    eax,DWORD PTR [rax]
   1400545d8:	ins    BYTE PTR es:[rdi],dx
   1400545d9:	xor    eax,DWORD PTR [rax+rax*1]
   1400545dc:	xor    BYTE PTR [rdi],bh
   1400545de:	add    eax,DWORD PTR [rax]
   1400545e0:	rex.WXB (bad) 
   1400545e2:	add    eax,DWORD PTR [rax]
   1400545e4:	je     0x140054619
   1400545e6:	add    al,0x0
   1400545e8:	push   rax
   1400545e9:	(bad)  
   1400545ea:	add    eax,DWORD PTR [rax]
   1400545ec:	imul   edi,DWORD PTR [rdi],0x3
   1400545ef:	add    BYTE PTR [rbx+rsi*1+0x4],bh
   1400545f3:	add    BYTE PTR [rax+0x3f],dh
   1400545f6:	add    eax,DWORD PTR [rax]
   1400545f8:	lahf   
   1400545f9:	(bad)  
   1400545fa:	add    eax,DWORD PTR [rax]
   1400545fc:	test   BYTE PTR [rbx],dh
   1400545fe:	add    al,0x0
   140054600:	mov    al,0x3f
   140054602:	add    eax,DWORD PTR [rax]
   140054604:	retf   
   140054605:	(bad)  
   140054606:	add    eax,DWORD PTR [rax]
   140054608:	sbb    BYTE PTR [rsp+rax*1],dh
   14005460b:	add    al,dl
   14005460d:	(bad)  
   14005460e:	add    eax,DWORD PTR [rax]
   140054610:	call   0x160054954
   140054615:	xor    al,0x4
   140054617:	add    al,dh
   140054619:	(bad)  
   14005461a:	add    eax,DWORD PTR [rax]
   14005461c:	or     eax,DWORD PTR [rax+0x3]
   14005461f:	add    BYTE PTR [rax],ch
   140054621:	xor    al,0x4
   140054623:	add    BYTE PTR [rax],dl
   140054625:	rex add eax,DWORD PTR [rax]
   140054628:	sub    BYTE PTR [rax+0x3],al
   14005462b:	add    ah,dh
   14005462d:	push   rbx
   14005462e:	add    al,0x0
   140054630:	xor    BYTE PTR [rax+0x3],al
   140054633:	add    BYTE PTR [rax+rax*2+0x3],cl
   140054637:	add    ah,dh
   140054639:	push   rbx
   14005463a:	add    al,0x0
   14005463c:	push   rax
   14005463d:	rex add eax,DWORD PTR [rax]
   140054640:	outs   dx,DWORD PTR ds:[rsi]
   140054641:	rex add eax,DWORD PTR [rax]
   140054644:	hlt    
   140054645:	push   rbx
   140054646:	add    al,0x0
   140054648:	jo     0x14005468a
   14005464a:	add    eax,DWORD PTR [rax]
   14005464c:	mov    BYTE PTR [rax+0x3],al
   14005464f:	add    ah,dh
   140054651:	push   rbx
   140054652:	add    al,0x0
   140054654:	nop
   140054655:	rex add eax,DWORD PTR [rax]
   140054658:	mov    ecx,0xf4000340
   14005465d:	push   rbx
   14005465e:	add    al,0x0
   140054660:	rol    BYTE PTR [rax+0x3],0x0
   140054664:	fadd   DWORD PTR [rax+0x3]
   140054667:	add    ah,dh
   140054669:	push   rbx
   14005466a:	add    al,0x0
   14005466c:	loopne 0x1400546ae
   14005466e:	add    eax,DWORD PTR [rax]
   140054670:	cld    
   140054671:	rex add eax,DWORD PTR [rax]
   140054674:	hlt    
   140054675:	push   rbx
   140054676:	add    al,0x0
   140054678:	add    BYTE PTR [rcx+0x3],al
   14005467b:	add    BYTE PTR [rax],bl
   14005467d:	add    eax,DWORD PTR [r8]
   140054680:	hlt    
   140054681:	push   rbx
   140054682:	add    al,0x0
   140054684:	and    BYTE PTR [rcx+0x3],al
   140054687:	add    BYTE PTR [rax],bh
   140054689:	add    eax,DWORD PTR [r8]
   14005468c:	hlt    
   14005468d:	push   rbx
   14005468e:	add    al,0x0
   140054690:	rex
   140054691:	add    eax,DWORD PTR [r8]
   140054694:	pop    rax
   140054695:	add    eax,DWORD PTR [r8]
   140054698:	hlt    
   140054699:	push   rbx
   14005469a:	add    al,0x0
   14005469c:	(bad)  
   14005469d:	add    eax,DWORD PTR [r8]
   1400546a0:	js     0x1400546e3
   1400546a2:	add    eax,DWORD PTR [rax]
   1400546a4:	hlt    
   1400546a5:	push   rbx
   1400546a6:	add    al,0x0
   1400546a8:	add    BYTE PTR [rcx+0x3],0x0
   1400546ac:	cwde   
   1400546ad:	add    eax,DWORD PTR [r8]
   1400546b0:	hlt    
   1400546b1:	push   rbx
   1400546b2:	add    al,0x0
   1400546b4:	movabs al,ds:0xf4000341b8000341
   1400546bd:	push   rbx
   1400546be:	add    al,0x0
   1400546c0:	rol    BYTE PTR [rcx+0x3],0x0
   1400546c4:	fadd   DWORD PTR [rcx+0x3]
   1400546c7:	add    ah,dh
   1400546c9:	push   rbx
   1400546ca:	add    al,0x0
   1400546cc:	loopne 0x14005470f
   1400546ce:	add    eax,DWORD PTR [rax]
   1400546d0:	clc    
   1400546d1:	add    eax,DWORD PTR [r8]
   1400546d4:	hlt    
   1400546d5:	push   rbx
   1400546d6:	add    al,0x0
   1400546d8:	add    BYTE PTR [rdx+0x3],al
   1400546db:	add    BYTE PTR [rax],bl
   1400546dd:	rex.X add eax,DWORD PTR [rax]
   1400546e0:	hlt    
   1400546e1:	push   rbx
   1400546e2:	add    al,0x0
   1400546e4:	and    BYTE PTR [rdx+0x3],al
   1400546e7:	add    BYTE PTR [rdx+rax*2],bh
   1400546ea:	add    eax,DWORD PTR [rax]
   1400546ec:	hlt    
   1400546ed:	push   rbx
   1400546ee:	add    al,0x0
   1400546f0:	rex
   1400546f1:	rex.X add eax,DWORD PTR [rax]
   1400546f4:	pop    rax
   1400546f5:	rex.X add eax,DWORD PTR [rax]
   1400546f8:	hlt    
   1400546f9:	push   rbx
   1400546fa:	add    al,0x0
   1400546fc:	(bad)  
   1400546fd:	rex.X add eax,DWORD PTR [rax]
   140054700:	jl     0x140054744
   140054702:	add    eax,DWORD PTR [rax]
   140054704:	hlt    
   140054705:	push   rbx
   140054706:	add    al,0x0
   140054708:	add    BYTE PTR [rdx+0x3],0x0
   14005470c:	cwde   
   14005470d:	rex.X add eax,DWORD PTR [rax]
   140054710:	hlt    
   140054711:	push   rbx
   140054712:	add    al,0x0
   140054714:	movabs al,ds:0xf4000342b8000342
   14005471d:	push   rbx
   14005471e:	add    al,0x0
   140054720:	rol    BYTE PTR [rdx+0x3],0x0
   140054724:	fadd   DWORD PTR [rdx+0x3]
   140054727:	add    ah,dh
   140054729:	push   rbx
   14005472a:	add    al,0x0
   14005472c:	loopne 0x140054770
   14005472e:	add    eax,DWORD PTR [rax]
   140054730:	clc    
   140054731:	rex.X add eax,DWORD PTR [rax]
   140054734:	hlt    
   140054735:	push   rbx
   140054736:	add    al,0x0
   140054738:	add    BYTE PTR [rbx+0x3],al
   14005473b:	add    BYTE PTR [rax],bl
   14005473d:	rex.XB add eax,DWORD PTR [r8]
   140054740:	hlt    
   140054741:	push   rbx
   140054742:	add    al,0x0
   140054744:	and    BYTE PTR [rbx+0x3],al
   140054747:	add    BYTE PTR [rax],bh
   140054749:	rex.XB add eax,DWORD PTR [r8]
   14005474c:	hlt    
   14005474d:	push   rbx
   14005474e:	add    al,0x0
   140054750:	rex
   140054751:	rex.XB add eax,DWORD PTR [r8]
   140054754:	pop    rsp
   140054755:	rex.XB add eax,DWORD PTR [r8]
   140054758:	hlt    
   140054759:	push   rbx
   14005475a:	add    al,0x0
   14005475c:	(bad)  
   14005475d:	rex.XB add eax,DWORD PTR [r8]
   140054760:	jl     0x1400547a5
   140054762:	add    eax,DWORD PTR [rax]
   140054764:	hlt    
   140054765:	push   rbx
   140054766:	add    al,0x0
   140054768:	add    BYTE PTR [rbx+0x3],0x0
   14005476c:	cwde   
   14005476d:	rex.XB add eax,DWORD PTR [r8]
   140054770:	hlt    
   140054771:	push   rbx
   140054772:	add    al,0x0
   140054774:	movabs al,ds:0xf4000343b8000343
   14005477d:	push   rbx
   14005477e:	add    al,0x0
   140054780:	rol    BYTE PTR [rbx+0x3],0x0
   140054784:	fadd   DWORD PTR [rbx+0x3]
   140054787:	add    ah,dh
   140054789:	push   rbx
   14005478a:	add    al,0x0
   14005478c:	loopne 0x1400547d1
   14005478e:	add    eax,DWORD PTR [rax]
   140054790:	clc    
   140054791:	rex.XB add eax,DWORD PTR [r8]
   140054794:	hlt    
   140054795:	push   rbx
   140054796:	add    al,0x0
   140054798:	add    BYTE PTR [rbx+rax*1+0x0],al
   14005479c:	sbb    al,0x44
   14005479e:	add    eax,DWORD PTR [rax]
   1400547a0:	hlt    
   1400547a1:	push   rbx
   1400547a2:	add    al,0x0
   1400547a4:	and    BYTE PTR [rbx+rax*1+0x0],al
   1400547a8:	cmp    al,0x44
   1400547aa:	add    eax,DWORD PTR [rax]
   1400547ac:	hlt    
   1400547ad:	push   rbx
   1400547ae:	add    al,0x0
   1400547b0:	rex
   1400547b1:	add    r8d,DWORD PTR [rax]
   1400547b4:	pop    rsp
   1400547b5:	add    r8d,DWORD PTR [rax]
   1400547b8:	hlt    
   1400547b9:	push   rbx
   1400547ba:	add    al,0x0
   1400547bc:	(bad)  
   1400547bd:	add    r8d,DWORD PTR [rax]
   1400547c0:	jg     0x140054806
   1400547c2:	add    eax,DWORD PTR [rax]
   1400547c4:	hlt    
   1400547c5:	push   rbx
   1400547c6:	add    al,0x0
   1400547c8:	add    BYTE PTR [rbx+rax*1+0x0],0x9b
   1400547cd:	add    r8d,DWORD PTR [rax]
   1400547d0:	hlt    
   1400547d1:	push   rbx
   1400547d2:	add    al,0x0
   1400547d4:	movabs al,ds:0xf4000344cc000344
   1400547dd:	push   rbx
   1400547de:	add    al,0x0
   1400547e0:	rol    BYTE PTR [rbx+rax*1+0x0],1
   1400547e4:	call   0x134054b2d
   1400547e9:	push   rbx
   1400547ea:	add    al,0x0
   1400547ec:	lock add r8d,DWORD PTR [rax]
   1400547f0:	or     BYTE PTR [rbp+0x3],al
   1400547f3:	add    ah,dh
   1400547f5:	push   rbx
   1400547f6:	add    al,0x0
   1400547f8:	adc    BYTE PTR [rbp+0x3],al
   1400547fb:	add    BYTE PTR [rax],ch
   1400547fd:	add    r8d,DWORD PTR [r8]
   140054800:	hlt    
   140054801:	push   rbx
   140054802:	add    al,0x0
   140054804:	xor    BYTE PTR [rbp+0x3],al
   140054807:	add    BYTE PTR [rax+0x45],cl
   14005480a:	add    eax,DWORD PTR [rax]
   14005480c:	hlt    
   14005480d:	push   rbx
   14005480e:	add    al,0x0
   140054810:	push   rax
   140054811:	add    r8d,DWORD PTR [r8]
   140054814:	push   0xfffffffff4000345
   140054819:	push   rbx
   14005481a:	add    al,0x0
   14005481c:	jo     0x140054863
   14005481e:	add    eax,DWORD PTR [rax]
   140054820:	mov    BYTE PTR [rbp+0x3],al
   140054823:	add    ah,dh
   140054825:	push   rbx
   140054826:	add    al,0x0
   140054828:	nop
   140054829:	add    r8d,DWORD PTR [r8]
   14005482c:	test   al,0x45
   14005482e:	add    eax,DWORD PTR [rax]
   140054830:	hlt    
   140054831:	push   rbx
   140054832:	add    al,0x0
   140054834:	mov    al,0x45
   140054836:	add    eax,DWORD PTR [rax]
   140054838:	enter  0x345,0x0
   14005483c:	hlt    
   14005483d:	push   rbx
   14005483e:	add    al,0x0
   140054840:	rol    BYTE PTR [rbp+0x3],1
   140054843:	add    al,ch
   140054845:	add    r8d,DWORD PTR [r8]
   140054848:	hlt    
   140054849:	push   rbx
   14005484a:	add    al,0x0
   14005484c:	lock add r8d,DWORD PTR [r8]
   140054850:	or     BYTE PTR [rsi+0x3],al
   140054853:	add    ah,dh
   140054855:	push   rbx
   140054856:	add    al,0x0
   140054858:	adc    BYTE PTR [rsi+0x3],al
   14005485b:	add    BYTE PTR [rax],ch
   14005485d:	rex.RX add r8d,DWORD PTR [rax]
   140054860:	hlt    
   140054861:	push   rbx
   140054862:	add    al,0x0
   140054864:	xor    BYTE PTR [rsi+0x3],al
   140054867:	add    BYTE PTR [rbx+0x46],cl
   14005486a:	add    eax,DWORD PTR [rax]
   14005486c:	hlt    
   14005486d:	push   rbx
   14005486e:	add    al,0x0
   140054870:	push   rax
   140054871:	rex.RX add r8d,DWORD PTR [rax]
   140054874:	imul   eax,DWORD PTR [rsi+0x3],0x0
   140054878:	hlt    
   140054879:	push   rbx
   14005487a:	add    al,0x0
   14005487c:	jo     0x1400548c4
   14005487e:	add    eax,DWORD PTR [rax]
   140054880:	mov    BYTE PTR [rsi+0x3],al
   140054883:	add    ah,dh
   140054885:	push   rbx
   140054886:	add    al,0x0
   140054888:	nop
   140054889:	rex.RX add r8d,DWORD PTR [rax]
   14005488c:	test   al,0x46
   14005488e:	add    eax,DWORD PTR [rax]
   140054890:	hlt    
   140054891:	push   rbx
   140054892:	add    al,0x0
   140054894:	mov    al,0x46
   140054896:	add    eax,DWORD PTR [rax]
   140054898:	add    al,BYTE PTR [rdi+0x3]
   14005489b:	add    BYTE PTR [rax],ah
   14005489d:	rex.XB add al,0x0
   1400548a0:	adc    BYTE PTR [rdi+0x3],al
   1400548a3:	add    BYTE PTR [rax],ch
   1400548a5:	rex.RXB add r8d,DWORD PTR [r8]
   1400548a8:	hlt    
   1400548a9:	push   rbx
   1400548aa:	add    al,0x0
   1400548ac:	xor    BYTE PTR [rdi+0x3],al
   1400548af:	add    BYTE PTR [rax+0x47],cl
   1400548b2:	add    eax,DWORD PTR [rax]
   1400548b4:	hlt    
   1400548b5:	push   rbx
   1400548b6:	add    al,0x0
   1400548b8:	push   rax
   1400548b9:	rex.RXB add r8d,DWORD PTR [r8]
   1400548bc:	movabs ds:0xb000044418000347,al
   1400548c5:	rex.RXB add r8d,DWORD PTR [r8]
   1400548c8:	enter  0x347,0x0
   1400548cc:	hlt    
   1400548cd:	push   rbx
   1400548ce:	add    al,0x0
   1400548d0:	rol    BYTE PTR [rdi+0x3],1
   1400548d3:	add    al,ch
   1400548d5:	rex.RXB add r8d,DWORD PTR [r8]
   1400548d8:	hlt    
   1400548d9:	push   rbx
   1400548da:	add    al,0x0
   1400548dc:	lock rex.RXB add r8d,DWORD PTR [r8]
   1400548e0:	rex.X
   1400548e1:	add    rax,QWORD PTR [rax]
   1400548e4:	or     al,0x45
   1400548e6:	add    al,0x0
   1400548e8:	push   rax
   1400548e9:	add    rax,QWORD PTR [rax]
   1400548ec:	push   0xfffffffff4000348
   1400548f1:	push   rbx
   1400548f2:	add    al,0x0
   1400548f4:	jo     0x14005493e
   1400548f6:	add    eax,DWORD PTR [rax]
   1400548f8:	mov    BYTE PTR [rax+0x3],cl
   1400548fb:	add    ah,dh
   1400548fd:	push   rbx
   1400548fe:	add    al,0x0
   140054900:	nop
   140054901:	add    rax,QWORD PTR [rax]
   140054904:	test   al,0x48
   140054906:	add    eax,DWORD PTR [rax]
   140054908:	xchg   esp,eax
   140054909:	rex.RXB add al,0x0
   14005490c:	mov    al,0x48
   14005490e:	add    eax,DWORD PTR [rax]
   140054910:	retf   
   140054911:	add    rax,QWORD PTR [rax]
   140054914:	fadd   QWORD PTR [rdi+0x4]
   140054917:	add    al,dl
   140054919:	add    rax,QWORD PTR [rax]
   14005491c:	jmp    0x140054966
   14005491e:	add    eax,DWORD PTR [rax]
   140054920:	in     al,0x47
   140054922:	add    al,0x0
   140054924:	add    BYTE PTR [rcx+0x3],cl
   140054927:	add    BYTE PTR [rbx],bl
   140054929:	add    rax,QWORD PTR [r8]
   14005492c:	rex.R
   14005492d:	rex.W add al,0x0
   140054930:	and    BYTE PTR [rcx+0x3],cl
   140054933:	add    BYTE PTR [rax],bh
   140054935:	add    rax,QWORD PTR [r8]
   140054938:	rex.WR
   140054939:	rex.W add al,0x0
   14005493c:	rex
   14005493d:	add    rax,QWORD PTR [r8]
   140054940:	pop    rax
   140054941:	add    rax,QWORD PTR [r8]
   140054944:	xchg   esp,eax
   140054945:	rex.W add al,0x0
   140054948:	(bad)  
   140054949:	add    rax,QWORD PTR [r8]
   14005494c:	jnp    0x140054997
   14005494e:	add    eax,DWORD PTR [rax]
   140054950:	fmul   QWORD PTR [rax+0x4]
   140054953:	add    BYTE PTR [rax-0x67fffcb7],al
   140054959:	add    rax,QWORD PTR [r8]
   14005495c:	in     al,0x48
   14005495e:	add    al,0x0
   140054960:	movabs al,ds:0xf4000349b8000349
   140054969:	push   rbx
   14005496a:	add    al,0x0
   14005496c:	mov    eax,0xd0000349
   140054971:	add    rax,QWORD PTR [r8]
   140054974:	hlt    
   140054975:	push   rbx
   140054976:	add    al,0x0
   140054978:	fmul   DWORD PTR [rcx+0x3]
   14005497b:	add    al,dh
   14005497d:	add    rax,QWORD PTR [r8]
   140054980:	hlt    
   140054981:	push   rbx
   140054982:	add    al,0x0
   140054984:	lock add rax,QWORD PTR [r8]
   140054988:	adc    cl,BYTE PTR [rdx+0x3]
   14005498b:	add    ah,dh
   14005498d:	push   rbx
   14005498e:	add    al,0x0
   140054990:	adc    cl,BYTE PTR [rdx+0x3]
   140054993:	add    BYTE PTR [rdx],ch
   140054995:	rex.WX add rax,QWORD PTR [rax]
   140054998:	rex.W
   140054999:	rex.WX add al,0x0
   14005499c:	xor    BYTE PTR [rdx+0x3],cl
   14005499f:	add    BYTE PTR [rdx+rcx*2+0x3],ch
   1400549a3:	add    ah,dl
   1400549a5:	rex.WXB add al,0x0
   1400549a8:	jo     0x1400549f4
   1400549aa:	add    eax,DWORD PTR [rax]
   1400549ac:	mov    dh,0x4a
   1400549ae:	add    eax,DWORD PTR [rax]
   1400549b0:	ror    BYTE PTR [rbx+0x4],0x0
   1400549b4:	ror    BYTE PTR [rdx+0x3],0x0
   1400549b8:	fmul   DWORD PTR [rdx+0x3]
   1400549bb:	add    ah,dh
   1400549bd:	push   rbx
   1400549be:	add    al,0x0
   1400549c0:	loopne 0x140054a0c
   1400549c2:	add    eax,DWORD PTR [rax]
   1400549c4:	clc    
   1400549c5:	rex.WX add rax,QWORD PTR [rax]
   1400549c8:	hlt    
   1400549c9:	push   rbx
   1400549ca:	add    al,0x0
   1400549cc:	add    BYTE PTR [rbx+0x3],cl
   1400549cf:	add    BYTE PTR [rbx+rcx*2],bl
   1400549d2:	add    eax,DWORD PTR [rax]
   1400549d4:	hlt    
   1400549d5:	push   rbx
   1400549d6:	add    al,0x0
   1400549d8:	and    BYTE PTR [rbx+0x3],cl
   1400549db:	add    BYTE PTR [rdi],bh
   1400549dd:	rex.WXB add rax,QWORD PTR [r8]
   1400549e0:	hlt    
   1400549e1:	push   rbx
   1400549e2:	add    al,0x0
   1400549e4:	rex
   1400549e5:	rex.WXB add rax,QWORD PTR [r8]
   1400549e8:	pop    rdi
   1400549e9:	rex.WXB add rax,QWORD PTR [r8]
   1400549ec:	hlt    
   1400549ed:	push   rbx
   1400549ee:	add    al,0x0
   1400549f0:	(bad)  
   1400549f1:	rex.WXB add rax,QWORD PTR [r8]
   1400549f4:	jg     0x140054a41
   1400549f6:	add    eax,DWORD PTR [rax]
   1400549f8:	hlt    
   1400549f9:	push   rbx
   1400549fa:	add    al,0x0
   1400549fc:	or     BYTE PTR [rbx+0x3],0x0
   140054a00:	pushf  
   140054a01:	rex.WXB add rax,QWORD PTR [r8]
   140054a04:	hlt    
   140054a05:	push   rbx
   140054a06:	add    al,0x0
   140054a08:	movabs al,ds:0x1000034be900034b
   140054a11:	rex.WRX add al,0x0
   140054a14:	lock rex.WXB add rax,QWORD PTR [r8]
   140054a18:	or     ecx,DWORD PTR [rbx+rax*1+0x0]
   140054a1c:	hlt    
   140054a1d:	push   rbx
   140054a1e:	add    al,0x0
   140054a20:	adc    BYTE PTR [rbx+rax*1+0x0],cl
   140054a24:	sub    BYTE PTR [rbx+rax*1+0x0],cl
   140054a28:	hlt    
   140054a29:	push   rbx
   140054a2a:	add    al,0x0
   140054a2c:	xor    BYTE PTR [rbx+rax*1+0x0],cl
   140054a30:	rex.WXB
   140054a31:	add    r8,QWORD PTR [rax]
   140054a34:	hlt    
   140054a35:	push   rbx
   140054a36:	add    al,0x0
   140054a38:	push   rax
   140054a39:	add    r8,QWORD PTR [rax]
   140054a3c:	push   0xfffffffff400034c
   140054a41:	push   rbx
   140054a42:	add    al,0x0
   140054a44:	jo     0x140054a92
   140054a46:	add    eax,DWORD PTR [rax]
   140054a48:	mov    ecx,DWORD PTR [rbx+rax*1+0x0]
   140054a4c:	hlt    
   140054a4d:	push   rbx
   140054a4e:	add    al,0x0
   140054a50:	nop
   140054a51:	add    r8,QWORD PTR [rax]
   140054a54:	test   al,0x4c
   140054a56:	add    eax,DWORD PTR [rax]
   140054a58:	hlt    
   140054a59:	push   rbx
   140054a5a:	add    al,0x0
   140054a5c:	mov    al,0x4c
   140054a5e:	add    eax,DWORD PTR [rax]
   140054a60:	enter  0x34c,0x0
   140054a64:	hlt    
   140054a65:	push   rbx
   140054a66:	add    al,0x0
   140054a68:	ror    BYTE PTR [rbx+rax*1+0x0],1
   140054a6c:	jmp    0x140054aba
   140054a6e:	add    eax,DWORD PTR [rax]
   140054a70:	hlt    
   140054a71:	push   rbx
   140054a72:	add    al,0x0
   140054a74:	lock add r8,QWORD PTR [rax]
   140054a78:	or     ecx,DWORD PTR [rbp+0x3]
   140054a7b:	add    ah,dh
   140054a7d:	push   rbx
   140054a7e:	add    al,0x0
   140054a80:	adc    BYTE PTR [rbp+0x3],cl
   140054a83:	add    BYTE PTR [rax],ch
   140054a85:	add    r8,QWORD PTR [r8]
   140054a88:	hlt    
   140054a89:	push   rbx
   140054a8a:	add    al,0x0
   140054a8c:	xor    BYTE PTR [rbp+0x3],cl
   140054a8f:	add    BYTE PTR [rax+0x4d],cl
   140054a92:	add    eax,DWORD PTR [rax]
   140054a94:	hlt    
   140054a95:	push   rbx
   140054a96:	add    al,0x0
   140054a98:	push   rax
   140054a99:	add    r8,QWORD PTR [r8]
   140054a9c:	push   0xfffffffff400034d
   140054aa1:	push   rbx
   140054aa2:	add    al,0x0
   140054aa4:	jo     0x140054af3
   140054aa6:	add    eax,DWORD PTR [rax]
   140054aa8:	mov    WORD PTR [rbp+0x3],cs
   140054aab:	add    ah,dh
   140054aad:	push   rbx
   140054aae:	add    al,0x0
   140054ab0:	nop
   140054ab1:	add    r8,QWORD PTR [r8]
   140054ab4:	test   al,0x4d
   140054ab6:	add    eax,DWORD PTR [rax]
   140054ab8:	hlt    
   140054ab9:	push   rbx
   140054aba:	add    al,0x0
   140054abc:	mov    al,0x4d
   140054abe:	add    eax,DWORD PTR [rax]
   140054ac0:	int3   
   140054ac1:	add    r8,QWORD PTR [r8]
   140054ac4:	hlt    
   140054ac5:	push   rbx
   140054ac6:	add    al,0x0
   140054ac8:	ror    BYTE PTR [rbp+0x3],1
   140054acb:	add    BYTE PTR [rsi+rcx*2],bl
   140054ace:	add    eax,DWORD PTR [rax]
   140054ad0:	js     0x140054b26
   140054ad2:	add    al,0x0
   140054ad4:	and    BYTE PTR [rsi+0x3],cl
   140054ad7:	add    BYTE PTR [rsi+rcx*2],bh
   140054ada:	add    eax,DWORD PTR [rax]
   140054adc:	hlt    
   140054add:	push   rbx
   140054ade:	add    al,0x0
   140054ae0:	rex
   140054ae1:	rex.WRX add r8,QWORD PTR [rax]
   140054ae4:	mov    DWORD PTR [rsi+0x3],ecx
   140054ae7:	add    BYTE PTR [rax+0x55],al
   140054aea:	add    al,0x0
   140054aec:	nop
   140054aed:	rex.WRX add r8,QWORD PTR [rax]
   140054af0:	test   al,0x4e
   140054af2:	add    eax,DWORD PTR [rax]
   140054af4:	hlt    
   140054af5:	push   rbx
   140054af6:	add    al,0x0
   140054af8:	mov    al,0x4e
   140054afa:	add    eax,DWORD PTR [rax]
   140054afc:	enter  0x34e,0x0
   140054b00:	hlt    
   140054b01:	push   rbx
   140054b02:	add    al,0x0
   140054b04:	ror    BYTE PTR [rsi+0x3],1
   140054b07:	add    BYTE PTR [rbx+0x4f],bl
   140054b0a:	add    eax,DWORD PTR [rax]
   140054b0c:	push   rax
   140054b0d:	push   rsi
   140054b0e:	add    al,0x0
   140054b10:	(bad)  
   140054b11:	rex.WRXB add r8,QWORD PTR [r8]
   140054b14:	js     0x140054b65
   140054b16:	add    eax,DWORD PTR [rax]
   140054b18:	hlt    
   140054b19:	push   rbx
   140054b1a:	add    al,0x0
   140054b1c:	or     BYTE PTR [rdi+0x3],0x0
   140054b20:	ret    
   140054b21:	rex.WRXB add r8,QWORD PTR [r8]
   140054b24:	rex push rsi
   140054b26:	add    al,0x0
   140054b28:	ror    BYTE PTR [rdi+0x3],1
   140054b2b:	add    al,ch
   140054b2d:	rex.WRXB add r8,QWORD PTR [r8]
   140054b30:	hlt    
   140054b31:	push   rbx
   140054b32:	add    al,0x0
   140054b34:	lock rex.WRXB add r8,QWORD PTR [r8]
   140054b38:	or     BYTE PTR [rax+0x3],dl
   140054b3b:	add    ah,dh
   140054b3d:	push   rbx
   140054b3e:	add    al,0x0
   140054b40:	adc    BYTE PTR [rax+0x3],dl
   140054b43:	add    BYTE PTR [rdi],dh
   140054b45:	push   rax
   140054b46:	add    eax,DWORD PTR [rax]
   140054b48:	mov    WORD PTR [rdi+0x4],ss
   140054b4b:	add    BYTE PTR [rax+0x50],al
   140054b4e:	add    eax,DWORD PTR [rax]
   140054b50:	pop    rax
   140054b51:	push   rax
   140054b52:	add    eax,DWORD PTR [rax]
   140054b54:	hlt    
   140054b55:	push   rbx
   140054b56:	add    al,0x0
   140054b58:	(bad)  
   140054b59:	push   rax
   140054b5a:	add    eax,DWORD PTR [rax]
   140054b5c:	js     0x140054bae
   140054b5e:	add    eax,DWORD PTR [rax]
   140054b60:	hlt    
   140054b61:	push   rbx
   140054b62:	add    al,0x0
   140054b64:	adc    BYTE PTR [rax+0x3],0x0
   140054b68:	cwde   
   140054b69:	push   rax
   140054b6a:	add    eax,DWORD PTR [rax]
   140054b6c:	hlt    
   140054b6d:	push   rbx
   140054b6e:	add    al,0x0
   140054b70:	movabs al,ds:0xf4000350bb000350
   140054b79:	push   rbx
   140054b7a:	add    al,0x0
   140054b7c:	rcl    BYTE PTR [rax+0x3],0x0
   140054b80:	fist   DWORD PTR [rax+0x3]
   140054b83:	add    ah,dh
   140054b85:	push   rbx
   140054b86:	add    al,0x0
   140054b88:	loopne 0x140054bda
   140054b8a:	add    eax,DWORD PTR [rax]
   140054b8c:	sti    
   140054b8d:	push   rax
   140054b8e:	add    eax,DWORD PTR [rax]
   140054b90:	hlt    
   140054b91:	push   rbx
   140054b92:	add    al,0x0
   140054b94:	add    BYTE PTR [rcx+0x3],dl
   140054b97:	add    BYTE PTR [rbx],bl
   140054b99:	push   rcx
   140054b9a:	add    eax,DWORD PTR [rax]
   140054b9c:	hlt    
   140054b9d:	push   rbx
   140054b9e:	add    al,0x0
   140054ba0:	and    BYTE PTR [rcx+0x3],dl
   140054ba3:	add    BYTE PTR [rax],bh
   140054ba5:	push   rcx
   140054ba6:	add    eax,DWORD PTR [rax]
   140054ba8:	hlt    
   140054ba9:	push   rbx
   140054baa:	add    al,0x0
   140054bac:	rex push rcx
   140054bae:	add    eax,DWORD PTR [rax]
   140054bb0:	pop    rax
   140054bb1:	push   rcx
   140054bb2:	add    eax,DWORD PTR [rax]
   140054bb4:	hlt    
   140054bb5:	push   rbx
   140054bb6:	add    al,0x0
   140054bb8:	(bad)  
   140054bb9:	push   rcx
   140054bba:	add    eax,DWORD PTR [rax]
   140054bbc:	jnp    0x140054c0f
   140054bbe:	add    eax,DWORD PTR [rax]
   140054bc0:	hlt    
   140054bc1:	push   rbx
   140054bc2:	add    al,0x0
   140054bc4:	adc    BYTE PTR [rcx+0x3],0x0
   140054bc8:	fwait
   140054bc9:	push   rcx
   140054bca:	add    eax,DWORD PTR [rax]
   140054bcc:	hlt    
   140054bcd:	push   rbx
   140054bce:	add    al,0x0
   140054bd0:	movabs al,ds:0xf4000351bb000351
   140054bd9:	push   rbx
   140054bda:	add    al,0x0
   140054bdc:	rcl    BYTE PTR [rcx+0x3],0x0
   140054be0:	fist   DWORD PTR [rcx+0x3]
   140054be3:	add    ah,dh
   140054be5:	push   rbx
   140054be6:	add    al,0x0
   140054be8:	loopne 0x140054c3b
   140054bea:	add    eax,DWORD PTR [rax]
   140054bec:	clc    
   140054bed:	push   rcx
   140054bee:	add    eax,DWORD PTR [rax]
   140054bf0:	hlt    
   140054bf1:	push   rbx
   140054bf2:	add    al,0x0
   140054bf4:	add    BYTE PTR [rdx+0x3],dl
   140054bf7:	add    BYTE PTR [rax],bl
   140054bf9:	push   rdx
   140054bfa:	add    eax,DWORD PTR [rax]
   140054bfc:	hlt    
   140054bfd:	push   rbx
   140054bfe:	add    al,0x0
   140054c00:	and    BYTE PTR [rdx+0x3],dl
   140054c03:	add    BYTE PTR [rax],bh
   140054c05:	push   rdx
   140054c06:	add    eax,DWORD PTR [rax]
   140054c08:	hlt    
   140054c09:	push   rbx
   140054c0a:	add    al,0x0
   140054c0c:	rex push rdx
   140054c0e:	add    eax,DWORD PTR [rax]
   140054c10:	pop    rax
   140054c11:	push   rdx
   140054c12:	add    eax,DWORD PTR [rax]
   140054c14:	hlt    
   140054c15:	push   rbx
   140054c16:	add    al,0x0
   140054c18:	(bad)  
   140054c19:	push   rdx
   140054c1a:	add    eax,DWORD PTR [rax]
   140054c1c:	jnp    0x140054c70
   140054c1e:	add    eax,DWORD PTR [rax]
   140054c20:	hlt    
   140054c21:	push   rbx
   140054c22:	add    al,0x0
   140054c24:	adc    BYTE PTR [rdx+0x3],0x0
   140054c28:	fwait
   140054c29:	push   rdx
   140054c2a:	add    eax,DWORD PTR [rax]
   140054c2c:	hlt    
   140054c2d:	push   rbx
   140054c2e:	add    al,0x0
   140054c30:	movabs al,ds:0xf4000352b8000352
   140054c39:	push   rbx
   140054c3a:	add    al,0x0
   140054c3c:	rcl    BYTE PTR [rdx+0x3],0x0
   140054c40:	fcom   DWORD PTR [rdx+0x3]
   140054c43:	add    ah,dh
   140054c45:	push   rbx
   140054c46:	add    al,0x0
   140054c48:	loopne 0x140054c9c
   140054c4a:	add    eax,DWORD PTR [rax]
   140054c4c:	sti    
   140054c4d:	push   rdx
   140054c4e:	add    eax,DWORD PTR [rax]
   140054c50:	hlt    
   140054c51:	push   rbx
   140054c52:	add    al,0x0
   140054c54:	add    BYTE PTR [rbx+0x3],dl
   140054c57:	add    BYTE PTR [rbx],bl
   140054c59:	push   rbx
   140054c5a:	add    eax,DWORD PTR [rax]
   140054c5c:	hlt    
   140054c5d:	push   rbx
   140054c5e:	add    al,0x0
   140054c60:	and    BYTE PTR [rbx+0x3],dl
   140054c63:	add    BYTE PTR [rbx],bh
   140054c65:	push   rbx
   140054c66:	add    eax,DWORD PTR [rax]
   140054c68:	hlt    
   140054c69:	push   rbx
   140054c6a:	add    al,0x0
   140054c6c:	rex push rbx
   140054c6e:	add    eax,DWORD PTR [rax]
   140054c70:	fs push rbx
   140054c72:	add    eax,DWORD PTR [rax]
   140054c74:	loopne 0x140054cd0
   140054c76:	add    al,0x0
   140054c78:	jo     0x140054ccd
   140054c7a:	add    eax,DWORD PTR [rax]
   140054c7c:	mov    edx,DWORD PTR [rbx+0x3]
   140054c7f:	add    ah,dh
   140054c81:	push   rbx
   140054c82:	add    al,0x0
   140054c84:	nop
   140054c85:	push   rbx
   140054c86:	add    eax,DWORD PTR [rax]
   140054c88:	stos   DWORD PTR es:[rdi],eax
   140054c89:	push   rbx
   140054c8a:	add    eax,DWORD PTR [rax]
   140054c8c:	hlt    
   140054c8d:	push   rbx
   140054c8e:	add    al,0x0
   140054c90:	mov    al,0x53
   140054c92:	add    eax,DWORD PTR [rax]
   140054c94:	enter  0x353,0x0
   140054c98:	hlt    
   140054c99:	push   rbx
   140054c9a:	add    al,0x0
   140054c9c:	sbb    al,0x54
   140054c9e:	add    eax,DWORD PTR [rax]
   140054ca0:	cmp    al,0x54
   140054ca2:	add    eax,DWORD PTR [rax]
   140054ca4:	xor    BYTE PTR [rsi],al
   140054ca6:	add    al,0x0
   140054ca8:	rex.W push rsp
   140054caa:	add    eax,DWORD PTR [rax]
   140054cac:	fs push rsp
   140054cae:	add    eax,DWORD PTR [rax]
   140054cb0:	xor    BYTE PTR [rsi],al
   140054cb2:	add    al,0x0
   140054cb4:	fs push rsp
   140054cb6:	add    eax,DWORD PTR [rax]
   140054cb8:	repz push rsp
   140054cba:	add    eax,DWORD PTR [rax]
   140054cbc:	xor    BYTE PTR [rsi],al
   140054cbe:	add    al,0x0
   140054cc0:	hlt    
   140054cc1:	push   rsp
   140054cc2:	add    eax,DWORD PTR [rax]
   140054cc4:	xchg   DWORD PTR [rbp+0x3],edx
   140054cc7:	add    BYTE PTR [rax],dh
   140054cc9:	(bad)  
   140054cca:	add    al,0x0
   140054ccc:	mov    BYTE PTR [rbp+0x3],dl
   140054ccf:	add    BYTE PTR [rax],bl
   140054cd1:	push   rsi
   140054cd2:	add    eax,DWORD PTR [rax]
   140054cd4:	xor    BYTE PTR [rsi],al
   140054cd6:	add    al,0x0
   140054cd8:	sbb    BYTE PTR [rsi+0x3],dl
   140054cdb:	add    BYTE PTR [rbx+0x30000356],ch
   140054ce1:	(bad)  
   140054ce2:	add    al,0x0
   140054ce4:	mov    eax,0x356
   140054ce9:	push   rdi
   140054cea:	add    eax,DWORD PTR [rax]
   140054cec:	xor    BYTE PTR [rsi],al
   140054cee:	add    al,0x0
   140054cf0:	add    BYTE PTR [rdi+0x3],dl
   140054cf3:	add    BYTE PTR [rax+0x57],cl
   140054cf6:	add    eax,DWORD PTR [rax]
   140054cf8:	xor    BYTE PTR [rsi],al
   140054cfa:	add    al,0x0
   140054cfc:	rex.W push rdi
   140054cfe:	add    eax,DWORD PTR [rax]
   140054d00:	pop    rsp
   140054d01:	push   rdi
   140054d02:	add    eax,DWORD PTR [rax]
   140054d04:	xor    BYTE PTR [rsi],al
   140054d06:	add    al,0x0
   140054d08:	push   0xffffffff88000357
   140054d0d:	push   rdi
   140054d0e:	add    eax,DWORD PTR [rax]
   140054d10:	xor    BYTE PTR [rsi],al
   140054d12:	add    al,0x0
   140054d14:	xchg   esp,eax
   140054d15:	push   rdi
   140054d16:	add    eax,DWORD PTR [rax]
   140054d18:	mov    ah,0x57
   140054d1a:	add    eax,DWORD PTR [rax]
   140054d1c:	xor    BYTE PTR [rsi],al
   140054d1e:	add    al,0x0
   140054d20:	rcl    BYTE PTR [rdi+0x3],0x0
   140054d24:	loopne 0x140054d7d
   140054d26:	add    eax,DWORD PTR [rax]
   140054d28:	xor    BYTE PTR [rsi],al
   140054d2a:	add    al,0x0
   140054d2c:	mov    ah,0x58
   140054d2e:	add    eax,DWORD PTR [rax]
   140054d30:	clc    
   140054d31:	pop    rax
   140054d32:	add    eax,DWORD PTR [rax]
   140054d34:	xchg   esp,eax
   140054d35:	rex.WRB add al,0x0

Disassembly of section .rsrc:

0000000140055000 <.rsrc>:
	...
   140055008:	add    al,0x0
   14005500a:	add    BYTE PTR [rax],al
   14005500c:	add    BYTE PTR [rax],al
   14005500e:	add    eax,DWORD PTR [rax]
   140055010:	or     eax,DWORD PTR [rax]
   140055012:	add    BYTE PTR [rax],al
   140055014:	sub    BYTE PTR [rax],al
   140055016:	add    BYTE PTR [rax+0x10],al
   14005501c:	add    BYTE PTR [rax],al
   14005501f:	sbb    BYTE PTR [rax],0x0
   140055022:	add    BYTE PTR [rax],al
   140055024:	pop    rax
   140055025:	add    BYTE PTR [rax],al
   140055027:	add    BYTE PTR [rax],0x0
   14005502a:	add    BYTE PTR [rax],al
   14005502c:	add    BYTE PTR [rax],al
   14005502e:	add    BYTE PTR [rax],al
   140055030:	add    al,0x0
   140055032:	add    BYTE PTR [rax],al
   140055034:	add    BYTE PTR [rax],al
   140055036:	add    DWORD PTR [rax],eax
   140055038:	add    DWORD PTR [rax],eax
   14005503a:	add    BYTE PTR [rax],al
   14005503c:	jo     0x14005503e
   14005503e:	add    BYTE PTR [rax+0x0],al
   140055044:	add    BYTE PTR [rax],al
   140055046:	add    BYTE PTR [rax],al
   140055048:	add    al,0x0
   14005504a:	add    BYTE PTR [rax],al
   14005504c:	add    BYTE PTR [rax],al
   14005504e:	add    DWORD PTR [rax],eax
   140055050:	add    DWORD PTR [rax],eax
   140055052:	add    BYTE PTR [rax],al
   140055054:	mov    BYTE PTR [rax],al
   140055056:	add    BYTE PTR [rax+0x0],al
   14005505c:	add    BYTE PTR [rax],al
   14005505e:	add    BYTE PTR [rax],al
   140055060:	add    al,0x0
   140055062:	add    BYTE PTR [rax],al
   140055064:	add    BYTE PTR [rax],al
   140055066:	add    DWORD PTR [rax],eax
   140055068:	add    DWORD PTR [rax],eax
   14005506a:	add    BYTE PTR [rax],al
   14005506c:	movabs al,ds:0x800000
   140055075:	add    BYTE PTR [rax],al
   140055077:	add    BYTE PTR [rax+rax*1],al
   14005507a:	add    BYTE PTR [rax],al
   14005507c:	add    BYTE PTR [rax],al
   14005507e:	add    DWORD PTR [rax],eax
   140055080:	or     DWORD PTR [rax+rax*1],eax
   140055083:	add    BYTE PTR [rax+0x0],bh
   140055089:	add    BYTE PTR [rax],al
   14005508b:	add    BYTE PTR [rax],al
   14005508d:	add    BYTE PTR [rax],al
   14005508f:	add    BYTE PTR [rax+rax*1],al
   140055092:	add    BYTE PTR [rax],al
   140055094:	add    BYTE PTR [rax],al
   140055096:	add    DWORD PTR [rax],eax
   140055098:	or     DWORD PTR [rax+rax*1],eax
   14005509b:	add    al,cl
	...
   1400550a5:	add    BYTE PTR [rax],al
   1400550a7:	add    BYTE PTR [rax+rax*1],al
   1400550aa:	add    BYTE PTR [rax],al
   1400550ac:	add    BYTE PTR [rax],al
   1400550ae:	add    DWORD PTR [rax],eax
   1400550b0:	or     DWORD PTR [rax+rax*1],eax
   1400550b3:	add    al,bl
   1400550b5:	add    BYTE PTR [rax],al
   1400550b7:	add    al,ch
   1400550b9:	push   rax
   1400550ba:	add    eax,0x92c00
   1400550bf:	add    ah,ah
   1400550c1:	add    al,0x0
   1400550c3:	add    BYTE PTR [rax],al
   1400550c5:	add    BYTE PTR [rax],al
   1400550c7:	add    BYTE PTR [rdx+rbx*2],dl
   1400550ca:	add    eax,0x36400
   1400550cf:	add    ah,ah
   1400550d1:	add    al,0x0
   1400550d3:	add    BYTE PTR [rax],al
   1400550d5:	add    BYTE PTR [rax],al
   1400550d7:	add    BYTE PTR [rax+0x5d],bh
   1400550da:	add    eax,0x15a00
   1400550df:	add    ah,ah
   1400550e1:	add    al,0x0
   1400550e3:	add    BYTE PTR [rax],al
   1400550e5:	add    BYTE PTR [rax],al
   1400550e7:	add    BYTE PTR [rip+0x1000000],al        # 0x1410550ed
   1400550ed:	add    BYTE PTR [rax],al
   1400550ef:	add    al,0x0
   1400550f2:	add    BYTE PTR [rax+0x40],al
   1400550f5:	add    BYTE PTR [rax],al
   1400550f7:	add    BYTE PTR [rip+0x9c00000],al        # 0x149c550fd
   1400550fd:	add    BYTE PTR [rax],al
   1400550ff:	sar    ah,0x0
   140055102:	add    BYTE PTR [rax],al
   140055104:	adc    BYTE PTR [rax],al
   140055106:	add    al,al
   140055108:	sbb    DWORD PTR [rax],eax
   14005510a:	add    al,al
   14005510c:	jo     0x140055110
   14005510e:	add    BYTE PTR [rax],al
   140055110:	and    BYTE PTR [rax],al
   140055112:	add    al,al
   140055114:	sub    DWORD PTR [rax],eax
   140055116:	add    al,al
   140055118:	adc    BYTE PTR [rsi],al
   14005511a:	add    BYTE PTR [rax],al
   14005511c:	xor    BYTE PTR [rax],al
   14005511e:	add    al,al
   140055120:	xor    DWORD PTR [rax],eax
   140055122:	add    al,al
   140055124:	ror    BYTE PTR [rax],0x0
   140055127:	add    BYTE PTR [rax],dh
   140055129:	add    BYTE PTR [rcx],al
   14005512b:	add    BYTE PTR [rbx+0x0],dl
   14005512e:	add    BYTE PTR gs:[rdx+0x0],dh
   140055132:	jbe    0x140055134
   140055134:	imul   eax,DWORD PTR [rax],0x650063
   14005513a:	and    BYTE PTR [rax],al
   14005513c:	jb     0x14005513e
   14005513e:	add    BYTE PTR gs:[rdi+0x0],ah
   140055142:	imul   eax,DWORD PTR [rax],0x740073
   140055148:	add    BYTE PTR gs:[rdx+0x0],dh
   14005514c:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140055151:	add    BYTE PTR [rip+0xa00],cl        # 0x140055b57
   140055157:	add    BYTE PTR [rax+rax*1],dh
   14005515a:	add    DWORD PTR [rax],eax
   14005515c:	push   rbx
   14005515d:	add    BYTE PTR [rbp+0x0],ah
   140055160:	jb     0x140055162
   140055162:	jbe    0x140055164
   140055164:	imul   eax,DWORD PTR [rax],0x650063
   14005516a:	and    BYTE PTR [rax],al
   14005516c:	jne    0x14005516e
   14005516e:	outs   dx,BYTE PTR ds:[rsi]
   14005516f:	add    BYTE PTR [rdx+0x0],dh
   140055172:	add    BYTE PTR gs:[rdi+0x0],ah
   140055176:	imul   eax,DWORD PTR [rax],0x740073
   14005517c:	add    BYTE PTR gs:[rdx+0x0],dh
   140055180:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   140055185:	add    BYTE PTR [rip+0xa00],cl        # 0x140055b8b
   14005518b:	add    BYTE PTR [rax+rax*1],ch
   14005518e:	add    DWORD PTR [rax],eax
   140055190:	push   rbx
   140055191:	add    BYTE PTR [rbp+0x0],ah
   140055194:	jb     0x140055196
   140055196:	jbe    0x140055198
   140055198:	imul   eax,DWORD PTR [rax],0x650063
   14005519e:	and    BYTE PTR [rax],al
   1400551a0:	jb     0x1400551a2
   1400551a2:	jne    0x1400551a4
   1400551a4:	outs   dx,BYTE PTR ds:[rsi]
   1400551a5:	add    BYTE PTR [rsi+0x0],ch
   1400551a8:	imul   eax,DWORD PTR [rax],0x67006e
   1400551ae:	add    BYTE PTR cs:[rax],ah
   1400551b1:	add    BYTE PTR [rip+0xa00],cl        # 0x140055bb7
   1400551b7:	add    BYTE PTR [rax+rax*1],ch
   1400551ba:	add    DWORD PTR [rax],eax
   1400551bc:	push   rbx
   1400551bd:	add    BYTE PTR [rbp+0x0],ah
   1400551c0:	jb     0x1400551c2
   1400551c2:	jbe    0x1400551c4
   1400551c4:	imul   eax,DWORD PTR [rax],0x650063
   1400551ca:	and    BYTE PTR [rax],al
   1400551cc:	jae    0x1400551ce
   1400551ce:	je     0x1400551d0
   1400551d0:	outs   dx,DWORD PTR ds:[rsi]
   1400551d1:	add    BYTE PTR [rax+0x0],dh
   1400551d4:	jo     0x1400551d6
   1400551d6:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400551db:	add    BYTE PTR [rip+0xa00],cl        # 0x140055be1
   1400551e1:	add    BYTE PTR [rax],al
   1400551e3:	add    BYTE PTR [rax+0x0],al
   1400551e6:	add    DWORD PTR [rax],eax
   1400551e8:	add    BYTE PTR [r10+0x0],r14b
   1400551ec:	jb     0x1400551ee
   1400551ee:	outs   dx,DWORD PTR ds:[rsi]
   1400551ef:	add    BYTE PTR [rdx+0x0],dh
   1400551f2:	and    BYTE PTR [rax],al
   1400551f4:	jb     0x1400551f6
   1400551f6:	add    BYTE PTR gs:[rdi+0x0],ah
   1400551fa:	imul   eax,DWORD PTR [rax],0x740073
   140055200:	add    BYTE PTR gs:[rdx+0x0],dh
   140055204:	imul   eax,DWORD PTR [rax],0x67006e
   14005520a:	and    BYTE PTR [rax],al
   14005520c:	jae    0x14005520e
   14005520e:	add    BYTE PTR gs:[rdx+0x0],dh
   140055212:	jbe    0x140055214
   140055214:	imul   eax,DWORD PTR [rax],0x650063
   14005521a:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x140055c21
   140055221:	add    BYTE PTR [rax],al
   140055223:	add    BYTE PTR [rax+0x54000100],cl
   140055229:	add    BYTE PTR [rax+0x0],ch
   14005522c:	add    BYTE PTR gs:[rax],ah
   14005522f:	add    BYTE PTR [rsi+0x0],ch
   140055232:	(bad)  
   140055233:	add    BYTE PTR [rbp+0x0],ch
   140055236:	add    BYTE PTR gs:[rax],ah
   140055239:	add    BYTE PTR [rbx+0x0],dh
   14005523c:	jo     0x14005523e
   14005523e:	add    BYTE PTR gs:[rbx+0x0],ah
   140055242:	imul   eax,DWORD PTR [rax],0x690066
   140055248:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   14005524d:	add    BYTE PTR [rsi+0x0],ah
   140055250:	outs   dx,DWORD PTR ds:[rsi]
   140055251:	add    BYTE PTR [rdx+0x0],dh
   140055254:	and    BYTE PTR [rax],al
   140055256:	je     0x140055258
   140055258:	push   0x20006500
   14005525d:	add    BYTE PTR [rbx+0x0],dh
   140055260:	add    BYTE PTR gs:[rdx+0x0],dh
   140055264:	jbe    0x140055266
   140055266:	imul   eax,DWORD PTR [rax],0x650063
   14005526c:	and    BYTE PTR [rax],al
   14005526e:	imul   eax,DWORD PTR [rax],0x200073
   140055274:	imul   eax,DWORD PTR [rax],0x63006e
   14005527a:	outs   dx,DWORD PTR ds:[rsi]
   14005527b:	add    BYTE PTR [rdx+0x0],dh
   14005527e:	jb     0x140055280
   140055280:	add    BYTE PTR gs:[rbx+0x0],ah
   140055284:	je     0x140055286
   140055286:	add    BYTE PTR cs:[rax],ah
   140055289:	add    BYTE PTR [rsi+0x0],cl
   14005528c:	(bad)  
   14005528d:	add    BYTE PTR [rbp+0x0],ch
   140055290:	add    BYTE PTR gs:[rax],ah
   140055293:	add    BYTE PTR [rbp+0x0],dl
   140055296:	jae    0x140055298
   140055298:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
   14005529d:	add    BYTE PTR [rip+0x2e003100],ah        # 0x16e0583a3
   1400552a3:	add    BYTE PTR [rip+0xa00],cl        # 0x140055ca9
   1400552a9:	add    BYTE PTR [rax],al
   1400552ab:	add    BYTE PTR [rax+rax*1],bh
   1400552ae:	add    DWORD PTR [rax],eax
   1400552b0:	add    BYTE PTR [r10+0x0],r14b
   1400552b4:	jb     0x1400552b6
   1400552b6:	outs   dx,DWORD PTR ds:[rsi]
   1400552b7:	add    BYTE PTR [rdx+0x0],dh
   1400552ba:	and    BYTE PTR [rax],al
   1400552bc:	imul   eax,DWORD PTR [rax],0x73006e
   1400552c2:	je     0x1400552c4
   1400552c4:	(bad)  
   1400552c5:	add    BYTE PTR [rax+rax*1+0x6c],ch
   1400552c9:	add    BYTE PTR [rcx+0x0],ch
   1400552cc:	outs   dx,BYTE PTR ds:[rsi]
   1400552cd:	add    BYTE PTR [rdi+0x0],ah
   1400552d0:	and    BYTE PTR [rax],al
   1400552d2:	jae    0x1400552d4
   1400552d4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400552d8:	jbe    0x1400552da
   1400552da:	imul   eax,DWORD PTR [rax],0x650063
   1400552e0:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x140055ce7
   1400552e7:	add    BYTE PTR [rax],bh
   1400552e9:	add    BYTE PTR [rcx],al
   1400552eb:	add    BYTE PTR [rbp+0x0],al
   1400552ee:	jb     0x1400552f0
   1400552f0:	jb     0x1400552f2
   1400552f2:	outs   dx,DWORD PTR ds:[rsi]
   1400552f3:	add    BYTE PTR [rdx+0x0],dh
   1400552f6:	and    BYTE PTR [rax],al
   1400552f8:	jae    0x1400552fa
   1400552fa:	je     0x1400552fc
   1400552fc:	(bad)  
   1400552fd:	add    BYTE PTR [rdx+0x0],dh
   140055300:	je     0x140055302
   140055302:	imul   eax,DWORD PTR [rax],0x67006e
   140055308:	and    BYTE PTR [rax],al
   14005530a:	jae    0x14005530c
   14005530c:	add    BYTE PTR gs:[rdx+0x0],dh
   140055310:	jbe    0x140055312
   140055312:	imul   eax,DWORD PTR [rax],0x650063
   140055318:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x140055d1f
   14005531f:	add    BYTE PTR [rax],bh
   140055321:	add    BYTE PTR [rcx],al
   140055323:	add    BYTE PTR [rbp+0x0],al
   140055326:	jb     0x140055328
   140055328:	jb     0x14005532a
   14005532a:	outs   dx,DWORD PTR ds:[rsi]
   14005532b:	add    BYTE PTR [rdx+0x0],dh
   14005532e:	and    BYTE PTR [rax],al
   140055330:	jae    0x140055332
   140055332:	je     0x140055334
   140055334:	outs   dx,DWORD PTR ds:[rsi]
   140055335:	add    BYTE PTR [rax+0x0],dh
   140055338:	jo     0x14005533a
   14005533a:	imul   eax,DWORD PTR [rax],0x67006e
   140055340:	and    BYTE PTR [rax],al
   140055342:	jae    0x140055344
   140055344:	add    BYTE PTR gs:[rdx+0x0],dh
   140055348:	jbe    0x14005534a
   14005534a:	imul   eax,DWORD PTR [rax],0x650063
   140055350:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x140055d57
   140055357:	add    BYTE PTR [rax+0x54000100],cl
   14005535d:	add    BYTE PTR [rax+0x0],ch
   140055360:	add    BYTE PTR gs:[rax],ah
   140055363:	add    BYTE PTR [rsi+0x0],ah
   140055366:	imul   eax,DWORD PTR [rax],0x65006c
   14005536c:	and    BYTE PTR [rax],al
   14005536e:	jae    0x140055370
   140055370:	jo     0x140055372
   140055372:	add    BYTE PTR gs:[rbx+0x0],ah
   140055376:	imul   eax,DWORD PTR [rax],0x690066
   14005537c:	add    BYTE PTR gs:[rax+rax*1+0x20],ah
   140055381:	add    BYTE PTR [rsi+0x0],ah
   140055384:	outs   dx,DWORD PTR ds:[rsi]
   140055385:	add    BYTE PTR [rdx+0x0],dh
   140055388:	and    BYTE PTR [rax],al
   14005538a:	je     0x14005538c
   14005538c:	push   0x20006500
   140055391:	add    BYTE PTR [rbx+0x0],dh
   140055394:	add    BYTE PTR gs:[rdx+0x0],dh
   140055398:	jbe    0x14005539a
   14005539a:	imul   eax,DWORD PTR [rax],0x650063
   1400553a0:	and    BYTE PTR [rax],al
   1400553a2:	imul   eax,DWORD PTR [rax],0x200073
   1400553a8:	imul   eax,DWORD PTR [rax],0x63006e
   1400553ae:	outs   dx,DWORD PTR ds:[rsi]
   1400553af:	add    BYTE PTR [rdx+0x0],dh
   1400553b2:	jb     0x1400553b4
   1400553b4:	add    BYTE PTR gs:[rbx+0x0],ah
   1400553b8:	je     0x1400553ba
   1400553ba:	add    BYTE PTR cs:[rax],ah
   1400553bd:	add    BYTE PTR [rsi+0x0],al
   1400553c0:	imul   eax,DWORD PTR [rax],0x65006c
   1400553c6:	and    BYTE PTR [rax],al
   1400553c8:	push   rbp
   1400553c9:	add    BYTE PTR [rbx+0x0],dh
   1400553cc:	add    BYTE PTR gs:[rax+rax*1+0x3a],ah
   1400553d1:	add    BYTE PTR [rip+0x2e003100],ah        # 0x16e0584d7
   1400553d7:	add    BYTE PTR [rip+0xa00],cl        # 0x140055ddd
   1400553dd:	add    BYTE PTR [rax],al
   1400553df:	add    BYTE PTR [rax+rax*1+0x1],al
   1400553e3:	add    BYTE PTR [rbx+0x0],dl
   1400553e6:	add    BYTE PTR gs:[rdx+0x0],dh
   1400553ea:	jbe    0x1400553ec
   1400553ec:	imul   eax,DWORD PTR [rax],0x650063
   1400553f2:	and    BYTE PTR [rax],al
   1400553f4:	add    BYTE PTR [rax+rax*1+0x4c],r9b
   1400553f9:	add    BYTE PTR [rax],ah
   1400553fb:	add    BYTE PTR [rip+0x20003100],ah        # 0x160058501
   140055401:	add    BYTE PTR [rdi+0x0],dh
   140055404:	(bad)  
   140055405:	add    BYTE PTR [rbx+0x0],dh
   140055408:	and    BYTE PTR [rax],al
   14005540a:	outs   dx,BYTE PTR ds:[rsi]
   14005540b:	add    BYTE PTR [rdi+0x0],ch
   14005540e:	je     0x140055410
   140055410:	and    BYTE PTR [rax],al
   140055412:	data16 add BYTE PTR [rdi+0x0],ch
   140055416:	jne    0x140055418
   140055418:	outs   dx,BYTE PTR ds:[rsi]
   140055419:	add    BYTE PTR [rax+rax*1+0x2e],ah
   14005541d:	add    BYTE PTR [rip+0xa00],cl        # 0x140055e23
   140055423:	add    BYTE PTR [rax+rax*1+0x550001],al
   14005542a:	outs   dx,BYTE PTR ds:[rsi]
   14005542b:	add    BYTE PTR [rcx+0x0],ah
   14005542e:	(bad)  
   14005542f:	add    BYTE PTR [rax+rax*1+0x65],ch
   140055433:	add    BYTE PTR [rax],ah
   140055435:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140055439:	add    BYTE PTR [rax],ah
   14005543b:	add    BYTE PTR [rbx+0x0],dh
   14005543e:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   140055443:	add    BYTE PTR [rbx+0x0],dh
   140055446:	je     0x140055448
   140055448:	(bad)  
   140055449:	add    BYTE PTR [rax+rax*1+0x75],dh
   14005544d:	add    BYTE PTR [rbx+0x0],dh
   140055450:	and    BYTE PTR [rax],al
   140055452:	(bad)  
   140055453:	add    BYTE PTR [rbx+0x0],dh
   140055456:	and    BYTE PTR [rax],al
   140055458:	jo     0x14005545a
   14005545a:	add    BYTE PTR gs:[rsi+0x0],ch
   14005545e:	add    BYTE PTR fs:[rcx+0x0],ch
   140055462:	outs   dx,BYTE PTR ds:[rsi]
   140055463:	add    BYTE PTR [rdi+0x0],ah
   140055466:	and    BYTE PTR [rax],al
   140055468:	add    BYTE PTR fs:[rbp+0x0],dh
   14005546c:	jb     0x14005546e
   14005546e:	imul   eax,DWORD PTR [rax],0x67006e
   140055474:	and    BYTE PTR [rax],al
   140055476:	jae    0x140055478
   140055478:	add    BYTE PTR gs:[rdx+0x0],dh
   14005547c:	jbe    0x14005547e
   14005547e:	imul   eax,DWORD PTR [rax],0x650063
   140055484:	and    BYTE PTR [rax],al
   140055486:	jb     0x140055488
   140055488:	add    BYTE PTR gs:[rdi+0x0],ah
   14005548c:	imul   eax,DWORD PTR [rax],0x740073
   140055492:	jb     0x140055494
   140055494:	(bad)  
   140055495:	add    BYTE PTR [rax+rax*1+0x69],dh
   140055499:	add    BYTE PTR [rdi+0x0],ch
   14005549c:	outs   dx,BYTE PTR ds:[rsi]
   14005549d:	add    BYTE PTR [rsi],ch
   14005549f:	add    BYTE PTR [rip+0xa00],cl        # 0x140055ea5
   1400554a5:	add    BYTE PTR [rax],al
   1400554a7:	add    BYTE PTR [rax+rax*1+0x550001],al
   1400554ae:	outs   dx,BYTE PTR ds:[rsi]
   1400554af:	add    BYTE PTR [rcx+0x0],ah
   1400554b2:	(bad)  
   1400554b3:	add    BYTE PTR [rax+rax*1+0x65],ch
   1400554b7:	add    BYTE PTR [rax],ah
   1400554b9:	add    BYTE PTR [rax+rax*1+0x6f],dh
   1400554bd:	add    BYTE PTR [rax],ah
   1400554bf:	add    BYTE PTR [rbx+0x0],dh
   1400554c2:	add    BYTE PTR gs:[rax+rax*1+0x20],dh
   1400554c7:	add    BYTE PTR [rbx+0x0],dh
   1400554ca:	je     0x1400554cc
   1400554cc:	(bad)  
   1400554cd:	add    BYTE PTR [rax+rax*1+0x75],dh
   1400554d1:	add    BYTE PTR [rbx+0x0],dh
   1400554d4:	and    BYTE PTR [rax],al
   1400554d6:	(bad)  
   1400554d7:	add    BYTE PTR [rbx+0x0],dh
   1400554da:	and    BYTE PTR [rax],al
   1400554dc:	jb     0x1400554de
   1400554de:	jne    0x1400554e0
   1400554e0:	outs   dx,BYTE PTR ds:[rsi]
   1400554e1:	add    BYTE PTR [rsi+0x0],ch
   1400554e4:	imul   eax,DWORD PTR [rax],0x67006e
   1400554ea:	and    BYTE PTR [rax],al
   1400554ec:	add    BYTE PTR fs:[rbp+0x0],dh
   1400554f0:	jb     0x1400554f2
   1400554f2:	imul   eax,DWORD PTR [rax],0x67006e
   1400554f8:	and    BYTE PTR [rax],al
   1400554fa:	jae    0x1400554fc
   1400554fc:	add    BYTE PTR gs:[rdx+0x0],dh
   140055500:	jbe    0x140055502
   140055502:	imul   eax,DWORD PTR [rax],0x650063
   140055508:	and    BYTE PTR [rax],al
   14005550a:	jb     0x14005550c
   14005550c:	add    BYTE PTR gs:[rdi+0x0],ah
   140055510:	imul   eax,DWORD PTR [rax],0x740073
   140055516:	jb     0x140055518
   140055518:	(bad)  
   140055519:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005551d:	add    BYTE PTR [rdi+0x0],ch
   140055520:	outs   dx,BYTE PTR ds:[rsi]
   140055521:	add    BYTE PTR [rsi],ch
   140055523:	add    BYTE PTR [rip+0xa00],cl        # 0x140055f29
   140055529:	add    BYTE PTR [rax],al
   14005552b:	add    BYTE PTR [rax+0x0],cl
   14005552e:	add    DWORD PTR [rax],eax
   140055530:	add    BYTE PTR [r10+0x0],r14b
   140055534:	jb     0x140055536
   140055536:	outs   dx,DWORD PTR ds:[rsi]
   140055537:	add    BYTE PTR [rdx+0x0],dh
   14005553a:	and    BYTE PTR [rax],al
   14005553c:	jne    0x14005553e
   14005553e:	jo     0x140055540
   140055540:	add    BYTE PTR fs:[rcx+0x0],ah
   140055544:	je     0x140055546
   140055546:	imul   eax,DWORD PTR [rax],0x67006e
   14005554c:	and    BYTE PTR [rax],al
   14005554e:	jae    0x140055550
   140055550:	add    BYTE PTR gs:[rdx+0x0],dh
   140055554:	jbe    0x140055556
   140055556:	imul   eax,DWORD PTR [rax],0x650063
   14005555c:	and    BYTE PTR [rax],al
   14005555e:	jae    0x140055560
   140055560:	je     0x140055562
   140055562:	(bad)  
   140055563:	add    BYTE PTR [rax+rax*1+0x75],dh
   140055567:	add    BYTE PTR [rbx+0x0],dh
   14005556a:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x140055f71
   140055571:	add    BYTE PTR [rax],al
   140055573:	add    BYTE PTR [rax+rax*1+0x1],bh
   140055577:	add    BYTE PTR [rdi+0x0],dl
   14005557a:	imul   eax,DWORD PTR [rax],0x64006e
   140055580:	outs   dx,DWORD PTR ds:[rsi]
   140055581:	add    BYTE PTR [rdi+0x0],dh
   140055584:	jae    0x140055586
   140055586:	and    BYTE PTR [rax],al
   140055588:	jae    0x14005558a
   14005558a:	push   0x74007500
   14005558f:	add    BYTE PTR [rax+rax*1+0x6f],ah
   140055593:	add    BYTE PTR [rdi+0x0],dh
   140055596:	outs   dx,BYTE PTR ds:[rsi]
   140055597:	add    BYTE PTR [rax],ah
   140055599:	add    BYTE PTR [rbp+0x0],ch
   14005559c:	add    BYTE PTR gs:[rbx+0x0],dh
   1400555a0:	jae    0x1400555a2
   1400555a2:	(bad)  
   1400555a3:	add    BYTE PTR [rdi+0x0],ah
   1400555a6:	add    BYTE PTR gs:[rax],ah
   1400555a9:	add    BYTE PTR [rdx+0x0],dh
   1400555ac:	add    BYTE PTR gs:[rbx+0x0],ah
   1400555b0:	imul   eax,DWORD PTR [rax],0x760065
   1400555b6:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400555bb:	add    BYTE PTR [rax],ah
   1400555bd:	add    BYTE PTR [rbx+0x0],dl
   1400555c0:	add    BYTE PTR gs:[rdx+0x0],dh
   1400555c4:	jbe    0x1400555c6
   1400555c6:	imul   eax,DWORD PTR [rax],0x650063
   1400555cc:	and    BYTE PTR [rax],al
   1400555ce:	jae    0x1400555d0
   1400555d0:	push   0x74007500
   1400555d5:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400555d9:	add    BYTE PTR [rsi+0x0],ch
   1400555dc:	add    BYTE PTR [eax],ah
   1400555df:	add    BYTE PTR [rax+rax*1+0x6f],ah
   1400555e3:	add    BYTE PTR [rdi+0x0],dh
   1400555e6:	outs   dx,BYTE PTR ds:[rsi]
   1400555e7:	add    BYTE PTR [rsi],ch
   1400555e9:	add    BYTE PTR [rip+0xa00],cl        # 0x140055fef
   1400555ef:	add    BYTE PTR [rax+0x0],cl
   1400555f2:	add    DWORD PTR [rax],eax
   1400555f4:	push   rbx
   1400555f5:	add    BYTE PTR [rbp+0x0],ah
   1400555f8:	jb     0x1400555fa
   1400555fa:	jbe    0x1400555fc
   1400555fc:	imul   eax,DWORD PTR [rax],0x650063
   140055602:	and    BYTE PTR [rax],al
   140055604:	jae    0x140055606
   140055606:	je     0x140055608
   140055608:	outs   dx,DWORD PTR ds:[rsi]
   140055609:	add    BYTE PTR [rax+0x0],dh
   14005560c:	and    BYTE PTR [rax],al
   14005560e:	ins    DWORD PTR es:[rdi],dx
   14005560f:	add    BYTE PTR [rbp+0x0],ah
   140055612:	jae    0x140055614
   140055614:	jae    0x140055616
   140055616:	(bad)  
   140055617:	add    BYTE PTR [rdi+0x0],ah
   14005561a:	add    BYTE PTR gs:[rax],ah
   14005561d:	add    BYTE PTR [rdx+0x0],dh
   140055620:	add    BYTE PTR gs:[rbx+0x0],ah
   140055624:	add    BYTE PTR gs:[rcx+0x0],ch
   140055628:	jbe    0x14005562a
   14005562a:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   14005562f:	add    BYTE PTR [rip+0xa00],cl        # 0x140056035
   140055635:	add    BYTE PTR [rax],al
   140055637:	add    BYTE PTR [rax+rax*1+0x1],al
   14005563b:	add    BYTE PTR [rbp+0x0],al
   14005563e:	jb     0x140055640
   140055640:	jb     0x140055642
   140055642:	outs   dx,DWORD PTR ds:[rsi]
   140055643:	add    BYTE PTR [rdx+0x0],dh
   140055646:	and    BYTE PTR [rax],al
   140055648:	jae    0x14005564a
   14005564a:	je     0x14005564c
   14005564c:	outs   dx,DWORD PTR ds:[rsi]
   14005564d:	add    BYTE PTR [rax+0x0],dh
   140055650:	jo     0x140055652
   140055652:	imul   eax,DWORD PTR [rax],0x67006e
   140055658:	and    BYTE PTR [rax],al
   14005565a:	push   rdx
   14005565b:	add    BYTE PTR [rax+0x0],dl
   14005565e:	rex.XB add BYTE PTR [r8],spl
   140055661:	add    BYTE PTR [rax+rax*1+0x69],ch
   140055665:	add    BYTE PTR [rbx+0x0],dh
   140055668:	je     0x14005566a
   14005566a:	add    BYTE PTR gs:[rsi+0x0],ch
   14005566e:	add    BYTE PTR gs:[rdx+0x0],dh
   140055672:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x140056079
   140055679:	add    BYTE PTR [rax],al
   14005567b:	add    BYTE PTR [rax+rax*1],dh
   14005567e:	add    DWORD PTR [rax],eax
   140055680:	push   rdx
   140055681:	add    BYTE PTR [rax+0x0],dl
   140055684:	rex.XB add BYTE PTR [r8],spl
   140055687:	add    BYTE PTR [rax+rax*1+0x69],ch
   14005568b:	add    BYTE PTR [rbx+0x0],dh
   14005568e:	je     0x140055690
   140055690:	add    BYTE PTR gs:[rsi+0x0],ch
   140055694:	add    BYTE PTR gs:[rdx+0x0],dh
   140055698:	and    BYTE PTR [rax],al
   14005569a:	jae    0x14005569c
   14005569c:	je     0x14005569e
   14005569e:	outs   dx,DWORD PTR ds:[rsi]
   14005569f:	add    BYTE PTR [rax+0x0],dh
   1400556a2:	jo     0x1400556a4
   1400556a4:	add    BYTE PTR gs:[rax+rax*1+0x2e],ah
   1400556a9:	add    BYTE PTR [rip+0xa00],cl        # 0x1400560af
   1400556af:	add    BYTE PTR [rax+0x0],cl
   1400556b2:	add    DWORD PTR [rax],eax
   1400556b4:	add    BYTE PTR [r10+0x0],r14b
   1400556b8:	jb     0x1400556ba
   1400556ba:	outs   dx,DWORD PTR ds:[rsi]
   1400556bb:	add    BYTE PTR [rdx+0x0],dh
   1400556be:	and    BYTE PTR [rax],al
   1400556c0:	outs   dx,DWORD PTR ds:[rsi]
   1400556c1:	add    BYTE PTR [rax+0x0],dh
   1400556c4:	add    BYTE PTR gs:[rsi+0x0],ch
   1400556c8:	imul   eax,DWORD PTR [rax],0x67006e
   1400556ce:	and    BYTE PTR [rax],al
   1400556d0:	jae    0x1400556d2
   1400556d2:	add    BYTE PTR gs:[rdx+0x0],dh
   1400556d6:	jbe    0x1400556d8
   1400556d8:	imul   eax,DWORD PTR [rax],0x650063
   1400556de:	and    BYTE PTR [rax],al
   1400556e0:	ins    DWORD PTR es:[rdi],dx
   1400556e1:	add    BYTE PTR [rcx+0x0],ah
   1400556e4:	outs   dx,BYTE PTR ds:[rsi]
   1400556e5:	add    BYTE PTR [rcx+0x0],ah
   1400556e8:	add    BYTE PTR [ebp+0x0],ah
   1400556ec:	jb     0x1400556ee
   1400556ee:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x1400560f5
   1400556f5:	add    BYTE PTR [rax],al
   1400556f7:	add    BYTE PTR [rax+rax*1+0x1],al
   1400556fb:	add    BYTE PTR [rbp+0x0],al
   1400556fe:	jb     0x140055700
   140055700:	jb     0x140055702
   140055702:	outs   dx,DWORD PTR ds:[rsi]
   140055703:	add    BYTE PTR [rdx+0x0],dh
   140055706:	and    BYTE PTR [rax],al
   140055708:	outs   dx,DWORD PTR ds:[rsi]
   140055709:	add    BYTE PTR [rax+0x0],dh
   14005570c:	add    BYTE PTR gs:[rsi+0x0],ch
   140055710:	imul   eax,DWORD PTR [rax],0x67006e
   140055716:	and    BYTE PTR [rax],al
   140055718:	jae    0x14005571a
   14005571a:	add    BYTE PTR gs:[rdx+0x0],dh
   14005571e:	jbe    0x140055720
   140055720:	imul   eax,DWORD PTR [rax],0x650063
   140055726:	and    BYTE PTR [rax],al
   140055728:	push   0x6e006100
   14005572d:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140055731:	add    BYTE PTR [rbp+0x0],ah
   140055734:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x14005613b
   14005573b:	add    BYTE PTR [rax+rax*1+0x1],al
   14005573f:	add    BYTE PTR [rbp+0x0],al
   140055742:	jb     0x140055744
   140055744:	jb     0x140055746
   140055746:	outs   dx,DWORD PTR ds:[rsi]
   140055747:	add    BYTE PTR [rdx+0x0],dh
   14005574a:	and    BYTE PTR [rax],al
   14005574c:	outs   dx,DWORD PTR ds:[rsi]
   14005574d:	add    BYTE PTR [rax+0x0],dh
   140055750:	add    BYTE PTR gs:[rsi+0x0],ch
   140055754:	imul   eax,DWORD PTR [rax],0x67006e
   14005575a:	and    BYTE PTR [rax],al
   14005575c:	jae    0x14005575e
   14005575e:	add    BYTE PTR gs:[rdx+0x0],dh
   140055762:	jbe    0x140055764
   140055764:	imul   eax,DWORD PTR [rax],0x650063
   14005576a:	and    BYTE PTR [rax],al
   14005576c:	push   0x6e006100
   140055771:	add    BYTE PTR [rax+rax*1+0x6c],ah
   140055775:	add    BYTE PTR [rbp+0x0],ah
   140055778:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x14005617f
   14005577f:	add    BYTE PTR [rax+rax*1+0x1],al
   140055783:	add    BYTE PTR [rbp+0x0],al
   140055786:	jb     0x140055788
   140055788:	jb     0x14005578a
   14005578a:	outs   dx,DWORD PTR ds:[rsi]
   14005578b:	add    BYTE PTR [rdx+0x0],dh
   14005578e:	and    BYTE PTR [rax],al
   140055790:	movsxd eax,DWORD PTR [rax]
   140055792:	push   0x63006500
   140055797:	add    BYTE PTR [rbx+0x0],ch
   14005579a:	imul   eax,DWORD PTR [rax],0x67006e
   1400557a0:	and    BYTE PTR [rax],al
   1400557a2:	jae    0x1400557a4
   1400557a4:	add    BYTE PTR gs:[rdx+0x0],dh
   1400557a8:	jbe    0x1400557aa
   1400557aa:	imul   eax,DWORD PTR [rax],0x650063
   1400557b0:	and    BYTE PTR [rax],al
   1400557b2:	jae    0x1400557b4
   1400557b4:	je     0x1400557b6
   1400557b6:	(bad)  
   1400557b7:	add    BYTE PTR [rax+rax*1+0x65],dh
   1400557bb:	add    BYTE PTR [rsi],ch
   1400557bd:	add    BYTE PTR [rip+0xa00],cl        # 0x1400561c3
   1400557c3:	add    BYTE PTR [rax],bh
   1400557c5:	add    BYTE PTR [rcx],al
   1400557c7:	add    BYTE PTR [rbp+0x0],al
   1400557ca:	jb     0x1400557cc
   1400557cc:	jb     0x1400557ce
   1400557ce:	outs   dx,DWORD PTR ds:[rsi]
   1400557cf:	add    BYTE PTR [rdx+0x0],dh
   1400557d2:	and    BYTE PTR [rax],al
   1400557d4:	movsxd eax,DWORD PTR [rax]
   1400557d6:	jb     0x1400557d8
   1400557d8:	add    BYTE PTR gs:[rcx+0x0],ah
   1400557dc:	je     0x1400557de
   1400557de:	imul   eax,DWORD PTR [rax],0x67006e
   1400557e4:	and    BYTE PTR [rax],al
   1400557e6:	jae    0x1400557e8
   1400557e8:	add    BYTE PTR gs:[rdx+0x0],dh
   1400557ec:	jbe    0x1400557ee
   1400557ee:	imul   eax,DWORD PTR [rax],0x650063
   1400557f4:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x1400561fb
   1400557fb:	add    BYTE PTR [rax],bh
   1400557fd:	add    BYTE PTR [rcx],al
   1400557ff:	add    BYTE PTR [rbp+0x0],al
   140055802:	jb     0x140055804
   140055804:	jb     0x140055806
   140055806:	outs   dx,DWORD PTR ds:[rsi]
   140055807:	add    BYTE PTR [rdx+0x0],dh
   14005580a:	and    BYTE PTR [rax],al
   14005580c:	jae    0x14005580e
   14005580e:	je     0x140055810
   140055810:	(bad)  
   140055811:	add    BYTE PTR [rdx+0x0],dh
   140055814:	je     0x140055816
   140055816:	imul   eax,DWORD PTR [rax],0x67006e
   14005581c:	and    BYTE PTR [rax],al
   14005581e:	jae    0x140055820
   140055820:	add    BYTE PTR gs:[rdx+0x0],dh
   140055824:	jbe    0x140055826
   140055826:	imul   eax,DWORD PTR [rax],0x650063
   14005582c:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x140056233
   140055833:	add    BYTE PTR [rax],bh
   140055835:	add    BYTE PTR [rcx],al
   140055837:	add    BYTE PTR [rbp+0x0],al
   14005583a:	jb     0x14005583c
   14005583c:	jb     0x14005583e
   14005583e:	outs   dx,DWORD PTR ds:[rsi]
   14005583f:	add    BYTE PTR [rdx+0x0],dh
   140055842:	and    BYTE PTR [rax],al
   140055844:	add    BYTE PTR fs:[rbp+0x0],ah
   140055848:	ins    BYTE PTR es:[rdi],dx
   140055849:	add    BYTE PTR [rbp+0x0],ah
   14005584c:	je     0x14005584e
   14005584e:	imul   eax,DWORD PTR [rax],0x67006e
   140055854:	and    BYTE PTR [rax],al
   140055856:	jae    0x140055858
   140055858:	add    BYTE PTR gs:[rdx+0x0],dh
   14005585c:	jbe    0x14005585e
   14005585e:	imul   eax,DWORD PTR [rax],0x650063
   140055864:	add    BYTE PTR cs:[rip+0xa00],cl        # 0x14005626b
   14005586b:	add    BYTE PTR [rax+0x0],cl
   14005586e:	add    DWORD PTR [rax],eax
   140055870:	add    BYTE PTR [r10+0x0],r14b
   140055874:	jb     0x140055876
   140055876:	outs   dx,DWORD PTR ds:[rsi]
   140055877:	add    BYTE PTR [rdx+0x0],dh
   14005587a:	and    BYTE PTR [rax],al
   14005587c:	ins    BYTE PTR es:[rdi],dx
   14005587d:	add    BYTE PTR [rdi+0x0],ch
   140055880:	movsxd eax,DWORD PTR [rax]
   140055882:	imul   eax,DWORD PTR [rax],0x69
   140055885:	add    BYTE PTR [rsi+0x0],ch
   140055888:	add    BYTE PTR [eax],ah
   14005588b:	add    BYTE PTR [rbx+0x0],dh
   14005588e:	add    BYTE PTR gs:[rdx+0x0],dh
   140055892:	jbe    0x140055894
   140055894:	imul   eax,DWORD PTR [rax],0x650063
   14005589a:	and    BYTE PTR [rax],al
   14005589c:	add    BYTE PTR fs:[rcx+0x0],ah
   1400558a0:	je     0x1400558a2
   1400558a2:	(bad)  
   1400558a3:	add    BYTE PTR [rdx+0x0],ah
   1400558a6:	(bad)  
   1400558a7:	add    BYTE PTR [rbx+0x0],dh
   1400558aa:	add    BYTE PTR gs:[rsi],ch
   1400558ad:	add    BYTE PTR [rip+0xa00],cl        # 0x1400562b3
   1400558b3:	add    BYTE PTR [rax+rax*1+0x1],cl
   1400558b7:	add    BYTE PTR [rbp+0x0],al
   1400558ba:	jb     0x1400558bc
   1400558bc:	jb     0x1400558be
   1400558be:	outs   dx,DWORD PTR ds:[rsi]
   1400558bf:	add    BYTE PTR [rdx+0x0],dh
   1400558c2:	and    BYTE PTR [rax],al
   1400558c4:	jne    0x1400558c6
   1400558c6:	outs   dx,BYTE PTR ds:[rsi]
   1400558c7:	add    BYTE PTR [rax+rax*1+0x6f],ch
   1400558cb:	add    BYTE PTR [rbx+0x0],ah
   1400558ce:	imul   eax,DWORD PTR [rax],0x69
   1400558d1:	add    BYTE PTR [rsi+0x0],ch
   1400558d4:	add    BYTE PTR [eax],ah
   1400558d7:	add    BYTE PTR [rbx+0x0],dh
   1400558da:	add    BYTE PTR gs:[rdx+0x0],dh
   1400558de:	jbe    0x1400558e0
   1400558e0:	imul   eax,DWORD PTR [rax],0x650063
   1400558e6:	and    BYTE PTR [rax],al
   1400558e8:	add    BYTE PTR fs:[rcx+0x0],ah
   1400558ec:	je     0x1400558ee
   1400558ee:	(bad)  
   1400558ef:	add    BYTE PTR [rdx+0x0],ah
   1400558f2:	(bad)  
   1400558f3:	add    BYTE PTR [rbx+0x0],dh
   1400558f6:	add    BYTE PTR gs:[rsi],ch
   1400558f9:	add    BYTE PTR [rip+0xa00],cl        # 0x1400562ff
   1400558ff:	add    BYTE PTR [rax+rax*1+0x1],dl
   140055903:	add    BYTE PTR [rbp+0x0],al
   140055906:	jb     0x140055908
   140055908:	jb     0x14005590a
   14005590a:	outs   dx,DWORD PTR ds:[rsi]
   14005590b:	add    BYTE PTR [rdx+0x0],dh
   14005590e:	and    BYTE PTR [rax],al
   140055910:	movsxd eax,DWORD PTR [rax]
   140055912:	push   0x6e006100
   140055917:	add    BYTE PTR [rdi+0x0],ah
   14005591a:	imul   eax,DWORD PTR [rax],0x67006e
   140055920:	and    BYTE PTR [rax],al
   140055922:	jae    0x140055924
   140055924:	add    BYTE PTR gs:[rdx+0x0],dh
   140055928:	jbe    0x14005592a
   14005592a:	imul   eax,DWORD PTR [rax],0x650063
   140055930:	and    BYTE PTR [rax],al
   140055932:	movsxd eax,DWORD PTR [rax]
   140055934:	outs   dx,DWORD PTR ds:[rsi]
   140055935:	add    BYTE PTR [rsi+0x0],ch
   140055938:	data16 add BYTE PTR [rcx+0x0],ch
   14005593c:	add    BYTE PTR [ebp+0x0],dh
   140055940:	jb     0x140055942
   140055942:	(bad)  
   140055943:	add    BYTE PTR [rax+rax*1+0x69],dh
   140055947:	add    BYTE PTR [rdi+0x0],ch
   14005594a:	outs   dx,BYTE PTR ds:[rsi]
   14005594b:	add    BYTE PTR [rsi],ch
   14005594d:	add    BYTE PTR [rip+0xa00],cl        # 0x140056353
   140055953:	add    BYTE PTR [rax+rax*1+0x1],dl
   140055957:	add    BYTE PTR [rbp+0x0],al
   14005595a:	jb     0x14005595c
   14005595c:	jb     0x14005595e
   14005595e:	outs   dx,DWORD PTR ds:[rsi]
   14005595f:	add    BYTE PTR [rdx+0x0],dh
   140055962:	and    BYTE PTR [rax],al
   140055964:	jno    0x140055966
   140055966:	jne    0x140055968
   140055968:	add    BYTE PTR gs:[rdx+0x0],dh
   14005596c:	jns    0x14005596e
   14005596e:	imul   eax,DWORD PTR [rax],0x67006e
   140055974:	and    BYTE PTR [rax],al
   140055976:	jae    0x140055978
   140055978:	add    BYTE PTR gs:[rdx+0x0],dh
   14005597c:	jbe    0x14005597e
   14005597e:	imul   eax,DWORD PTR [rax],0x650063
   140055984:	and    BYTE PTR [rax],al
   140055986:	movsxd eax,DWORD PTR [rax]
   140055988:	outs   dx,DWORD PTR ds:[rsi]
   140055989:	add    BYTE PTR [rsi+0x0],ch
   14005598c:	data16 add BYTE PTR [rcx+0x0],ch
   140055990:	add    BYTE PTR [ebp+0x0],dh
   140055994:	jb     0x140055996
   140055996:	(bad)  
   140055997:	add    BYTE PTR [rax+rax*1+0x69],dh
   14005599b:	add    BYTE PTR [rdi+0x0],ch
   14005599e:	outs   dx,BYTE PTR ds:[rsi]
   14005599f:	add    BYTE PTR [rsi],ch
   1400559a1:	add    BYTE PTR [rip+0xa00],cl        # 0x1400563a7
   1400559a7:	add    BYTE PTR [rax+rax*1+0x1],bl
   1400559ab:	add    BYTE PTR [rbx+0x0],al
   1400559ae:	jb     0x1400559b0
   1400559b0:	imul   eax,DWORD PTR [rax],0x690074
   1400559b6:	movsxd eax,DWORD PTR [rax]
   1400559b8:	(bad)  
   1400559b9:	add    BYTE PTR [rax+rax*1+0x20],ch
   1400559bd:	add    BYTE PTR [rbp+0x0],ah
   1400559c0:	jb     0x1400559c2
   1400559c2:	jb     0x1400559c4
   1400559c4:	outs   dx,DWORD PTR ds:[rsi]
   1400559c5:	add    BYTE PTR [rdx+0x0],dh
   1400559c8:	and    BYTE PTR [rax],al
   1400559ca:	add    BYTE PTR fs:[rbp+0x0],dh
   1400559ce:	jb     0x1400559d0
   1400559d0:	imul   eax,DWORD PTR [rax],0x67006e
   1400559d6:	and    BYTE PTR [rax],al
   1400559d8:	jae    0x1400559da
   1400559da:	add    BYTE PTR gs:[rdx+0x0],dh
   1400559de:	jbe    0x1400559e0
   1400559e0:	imul   eax,DWORD PTR [rax],0x650063
   1400559e6:	and    BYTE PTR [rax],al
   1400559e8:	outs   dx,DWORD PTR ds:[rsi]
   1400559e9:	add    BYTE PTR [rax+0x0],dh
   1400559ec:	add    BYTE PTR gs:[rdx+0x0],dh
   1400559f0:	(bad)  
   1400559f1:	add    BYTE PTR [rax+rax*1+0x69],dh
   1400559f5:	add    BYTE PTR [rdi+0x0],ch
   1400559f8:	outs   dx,BYTE PTR ds:[rsi]
   1400559f9:	add    BYTE PTR [rsi],ch
   1400559fb:	add    BYTE PTR [rip+0xa00],cl        # 0x140056401
   140055a01:	add    BYTE PTR [rax],al
   140055a03:	add    BYTE PTR [rax],dl
   140055a05:	add    BYTE PTR [rcx],al
   140055a07:	add    BYTE PTR [rip+0xd003100],ah        # 0x14d058b0d
   140055a0d:	add    BYTE PTR [rdx],cl
   140055a0f:	add    BYTE PTR [rax],al
   140055a11:	add    BYTE PTR [rax],al
   140055a13:	add    BYTE PTR [rbx+rax*1+0x34],ah
   140055a17:	add    BYTE PTR [rax],al
   140055a19:	add    BYTE PTR [rsi+0x0],dl
   140055a1c:	push   rbx
   140055a1d:	add    BYTE PTR [rdi+0x0],bl
   140055a20:	push   rsi
   140055a21:	add    BYTE PTR [rbp+0x0],al
   140055a24:	push   rdx
   140055a25:	add    BYTE PTR [rbx+0x0],dl
   140055a28:	rex.WB add BYTE PTR [r15+0x0],cl
   140055a2c:	rex.WRX add BYTE PTR [rdi+0x0],r11b
   140055a30:	rex.WB add BYTE PTR [r14+0x0],cl
   140055a34:	rex.RX add BYTE PTR [rdi+0x0],r9b
   140055a38:	add    BYTE PTR [rax],al
   140055a3a:	add    BYTE PTR [rax],al
   140055a3c:	mov    ebp,0xfeef04
   140055a41:	add    BYTE PTR [rcx],al
   140055a43:	add    BYTE PTR [rdx],al
   140055a45:	add    BYTE PTR [rbx],al
   140055a47:	add    BYTE PTR [rsi],bh
   140055a49:	add    BYTE PTR [rax],al
   140055a4b:	add    BYTE PTR [rdx],al
   140055a4d:	add    BYTE PTR [rbx],al
   140055a4f:	add    BYTE PTR [rsi],bh
   140055a51:	add    BYTE PTR [rax],al
   140055a53:	add    BYTE PTR [rdi],dl
   140055a55:	add    BYTE PTR [rax],al
   140055a57:	add    BYTE PTR [rax],al
   140055a59:	add    BYTE PTR [rax],al
   140055a5b:	add    BYTE PTR [rax+rax*1],al
   140055a5e:	add    BYTE PTR [rax],al
   140055a60:	add    DWORD PTR [rax],eax
	...
   140055a6e:	add    BYTE PTR [rax],al
   140055a70:	ret    0x2
   140055a73:	add    BYTE PTR [rcx],al
   140055a75:	add    BYTE PTR [rbx+0x0],dl
   140055a78:	je     0x140055a7a
   140055a7a:	jb     0x140055a7c
   140055a7c:	imul   eax,DWORD PTR [rax],0x67006e
   140055a82:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140055a86:	ins    BYTE PTR es:[rdi],dx
   140055a87:	add    BYTE PTR [rbp+0x0],ah
   140055a8a:	rex.WB add BYTE PTR [r14+0x0],bpl
   140055a8e:	data16 add BYTE PTR [rdi+0x0],ch
   140055a92:	add    BYTE PTR [rax],al
   140055a94:	sahf   
   140055a95:	add    al,BYTE PTR [rax]
   140055a97:	add    BYTE PTR [rcx],al
   140055a99:	add    BYTE PTR [rax],dh
   140055a9b:	add    BYTE PTR [rax+rax*1],dh
   140055a9e:	xor    BYTE PTR [rax],al
   140055aa0:	cmp    DWORD PTR [rax],eax
   140055aa2:	xor    BYTE PTR [rax],al
   140055aa4:	xor    al,0x0
   140055aa6:	(bad)  
   140055aa7:	add    BYTE PTR [rax],dh
   140055aa9:	add    BYTE PTR [rax],al
   140055aab:	add    BYTE PTR [rdx+0x0],al
   140055aae:	adc    eax,0x43000100
   140055ab3:	add    BYTE PTR [rdi+0x0],ch
   140055ab6:	ins    DWORD PTR es:[rdi],dx
   140055ab7:	add    BYTE PTR [rbp+0x0],ch
   140055aba:	add    BYTE PTR gs:[rsi+0x0],ch
   140055abe:	je     0x140055ac0
   140055ac0:	jae    0x140055ac2
   140055ac2:	add    BYTE PTR [rax],al
   140055ac4:	xor    eax,DWORD PTR [rax]
   140055ac6:	add    BYTE PTR cs:[rdx],dh
   140055ac9:	add    BYTE PTR [rsi],ch
   140055acb:	add    BYTE PTR [rax],dh
   140055acd:	add    BYTE PTR [rax],ah
   140055acf:	add    BYTE PTR [rcx+0x0],al
   140055ad2:	rex.XB add BYTE PTR [r8],bpl
   140055ad5:	add    BYTE PTR [rdx+0x0],dl
   140055ad8:	add    BYTE PTR gs:[rax+rax*1+0x65],ch
   140055add:	add    BYTE PTR [rcx+0x0],ah
   140055ae0:	jae    0x140055ae2
   140055ae2:	add    BYTE PTR gs:[rax],ah
   140055ae5:	add    BYTE PTR [rax],dh
   140055ae7:	add    BYTE PTR [rcx],dh
   140055ae9:	add    BYTE PTR [rcx],ch
   140055aeb:	add    BYTE PTR [rax],al
   140055aed:	add    BYTE PTR [rax],al
   140055aef:	add    BYTE PTR [rax+0x0],bl
   140055af2:	sbb    al,0x0
   140055af4:	add    DWORD PTR [rax],eax
   140055af6:	rex.XB add BYTE PTR [r15+0x0],bpl
   140055afa:	ins    DWORD PTR es:[rdi],dx
   140055afb:	add    BYTE PTR [rax+0x0],dh
   140055afe:	(bad)  
   140055aff:	add    BYTE PTR [rsi+0x0],ch
   140055b02:	jns    0x140055b04
   140055b04:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140055b08:	ins    DWORD PTR es:[rdi],dx
   140055b09:	add    BYTE PTR [rbp+0x0],ah
   140055b0c:	add    BYTE PTR [rax],al
   140055b0e:	add    BYTE PTR [rax],al
   140055b10:	(bad)  
   140055b11:	add    BYTE PTR [rdx+0x0],dh
   140055b14:	jbe    0x140055b16
   140055b16:	(bad)  
   140055b17:	add    BYTE PTR [rax+rax*1+0x6f],dh
   140055b1b:	add    BYTE PTR [rax],ah
   140055b1d:	add    BYTE PTR [rax+rax*1+0x69],ah
   140055b21:	add    BYTE PTR [rdi+0x0],ah
   140055b24:	imul   eax,DWORD PTR [rax],0x610074
   140055b2a:	ins    BYTE PTR es:[rdi],dx
   140055b2b:	add    BYTE PTR [rax],ah
   140055b2d:	add    BYTE PTR [rbx+0x0],dh
   140055b30:	add    BYTE PTR gs:[rdx+0x0],dh
   140055b34:	jbe    0x140055b36
   140055b36:	imul   eax,DWORD PTR [rax],0x650063
   140055b3c:	jae    0x140055b3e
   140055b3e:	and    BYTE PTR [rax],al
   140055b40:	ins    BYTE PTR es:[rdi],dx
   140055b41:	add    BYTE PTR [rax+rax*1+0x63],ch
   140055b45:	add    BYTE PTR [rax],al
   140055b47:	add    BYTE PTR [rax+rax*1+0x16],dl
   140055b4b:	add    BYTE PTR [rcx],al
   140055b4d:	add    BYTE PTR [rsi+0x0],al
   140055b50:	imul   eax,DWORD PTR [rax],0x65006c
   140055b56:	add    BYTE PTR [rbp+0x0],r12b
   140055b5a:	jae    0x140055b5c
   140055b5c:	movsxd eax,DWORD PTR [rax]
   140055b5e:	jb     0x140055b60
   140055b60:	imul   eax,DWORD PTR [rax],0x740070
   140055b66:	imul   eax,DWORD PTR [rax],0x6e006f
   140055b6c:	add    BYTE PTR [rax],al
   140055b6e:	add    BYTE PTR [rax],al
   140055b70:	push   rax
   140055b71:	add    BYTE PTR [rbx+0x0],dh
   140055b74:	imul   eax,DWORD PTR [rax],0x650053
   140055b7a:	jb     0x140055b7c
   140055b7c:	jbe    0x140055b7e
   140055b7e:	imul   eax,DWORD PTR [rax],0x650063
   140055b84:	and    BYTE PTR [rax],al
   140055b86:	push   rax
   140055b87:	add    BYTE PTR [rbx+0x0],dh
   140055b8a:	imul   eax,DWORD PTR [rax],0x650053
   140055b90:	jb     0x140055b92
   140055b92:	jbe    0x140055b94
   140055b94:	imul   eax,DWORD PTR [rax],0x650063
   140055b9a:	add    BYTE PTR [rax],al
   140055b9c:	xor    al,BYTE PTR [rax]
   140055b9e:	or     DWORD PTR [rax],eax
   140055ba0:	add    DWORD PTR [rax],eax
   140055ba2:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140055ba6:	ins    BYTE PTR es:[rdi],dx
   140055ba7:	add    BYTE PTR [rbp+0x0],ah
   140055baa:	push   rsi
   140055bab:	add    BYTE PTR [rbp+0x0],ah
   140055bae:	jb     0x140055bb0
   140055bb0:	jae    0x140055bb2
   140055bb2:	imul   eax,DWORD PTR [rax],0x6e006f
   140055bb8:	add    BYTE PTR [rax],al
   140055bba:	add    BYTE PTR [rax],al
   140055bbc:	xor    eax,DWORD PTR [rax]
   140055bbe:	add    BYTE PTR cs:[rdx],dh
   140055bc1:	add    BYTE PTR [rsi],ch
   140055bc3:	add    BYTE PTR [rax],dh
   140055bc5:	add    BYTE PTR [rsi],ch
   140055bc7:	add    BYTE PTR [rsi],dh
   140055bc9:	add    BYTE PTR [rdx],dh
   140055bcb:	add    BYTE PTR [rax],al
   140055bcd:	add    BYTE PTR [rax],al
   140055bcf:	add    BYTE PTR [rsi],dh
   140055bd1:	add    BYTE PTR [rbx],cl
   140055bd3:	add    BYTE PTR [rcx],al
   140055bd5:	add    BYTE PTR [rcx+0x0],cl
   140055bd8:	outs   dx,BYTE PTR ds:[rsi]
   140055bd9:	add    BYTE PTR [rax+rax*1+0x65],dh
   140055bdd:	add    BYTE PTR [rdx+0x0],dh
   140055be0:	outs   dx,BYTE PTR ds:[rsi]
   140055be1:	add    BYTE PTR [rcx+0x0],ah
   140055be4:	ins    BYTE PTR es:[rdi],dx
   140055be5:	add    BYTE PTR [rsi+0x0],cl
   140055be8:	(bad)  
   140055be9:	add    BYTE PTR [rbp+0x0],ch
   140055bec:	add    BYTE PTR gs:[rax],al
   140055bef:	add    BYTE PTR [rax+0x0],dl
   140055bf2:	push   rbx
   140055bf3:	add    BYTE PTR [rcx+0x0],cl
   140055bf6:	push   rbx
   140055bf7:	add    BYTE PTR [rbp+0x0],ah
   140055bfa:	jb     0x140055bfc
   140055bfc:	jbe    0x140055bfe
   140055bfe:	imul   eax,DWORD PTR [rax],0x650063
   140055c04:	add    BYTE PTR [rax],al
   140055c06:	add    BYTE PTR [rax],al
   140055c08:	pop    rax
   140055c09:	add    BYTE PTR [rdx],bl
   140055c0b:	add    BYTE PTR [rcx],al
   140055c0d:	add    BYTE PTR [rax+rax*1+0x65],cl
   140055c11:	add    BYTE PTR [rdi+0x0],ah
   140055c14:	(bad)  
   140055c15:	add    BYTE PTR [rax+rax*1+0x43],ch
   140055c19:	add    BYTE PTR [rdi+0x0],ch
   140055c1c:	jo     0x140055c1e
   140055c1e:	jns    0x140055c20
   140055c20:	jb     0x140055c22
   140055c22:	imul   eax,DWORD PTR [rax],0x680067
   140055c28:	je     0x140055c2a
   140055c2a:	add    BYTE PTR [rax],al
   140055c2c:	test   eax,0x32002000
   140055c31:	add    BYTE PTR [rax],dh
   140055c33:	add    BYTE PTR [rax],dh
   140055c35:	add    BYTE PTR [rax],dh
   140055c37:	add    BYTE PTR [rip+0x30003200],ch        # 0x170058e3d
   140055c3d:	add    BYTE PTR [rax],dh
   140055c3f:	add    BYTE PTR [rip+0x50002000],dh        # 0x190057c45
   140055c45:	add    BYTE PTR [rdx+0x0],dh
   140055c48:	outs   dx,DWORD PTR ds:[rsi]
   140055c49:	add    BYTE PTR [rax+rax*1+0x65],dh
   140055c4d:	add    BYTE PTR [rax+0x0],bh
   140055c50:	imul   eax,DWORD PTR [rax],0x200073
   140055c56:	rex.WB add BYTE PTR [r14+0x0],bpl
   140055c5a:	movsxd eax,DWORD PTR [rax]
   140055c5c:	add    BYTE PTR cs:[rax],al
   140055c5f:	add    BYTE PTR [rsi+0x0],al
   140055c62:	sldt   WORD PTR [rcx]
   140055c65:	add    BYTE PTR [rdi+0x0],cl
   140055c68:	jb     0x140055c6a
   140055c6a:	imul   eax,DWORD PTR [rax],0x690067
   140055c70:	outs   dx,BYTE PTR ds:[rsi]
   140055c71:	add    BYTE PTR [rcx+0x0],ah
   140055c74:	ins    BYTE PTR es:[rdi],dx
   140055c75:	add    BYTE PTR [rsi+0x0],al
   140055c78:	imul   eax,DWORD PTR [rax],0x65006c
   140055c7e:	outs   dx,BYTE PTR ds:[rsi]
   140055c7f:	add    BYTE PTR [rcx+0x0],ah
   140055c82:	ins    DWORD PTR es:[rdi],dx
   140055c83:	add    BYTE PTR [rbp+0x0],ah
   140055c86:	add    BYTE PTR [rax],al
   140055c88:	push   rax
   140055c89:	add    BYTE PTR [rbx+0x0],dl
   140055c8c:	rex.WB add BYTE PTR [r11+0x0],dl
   140055c90:	add    BYTE PTR gs:[rdx+0x0],dh
   140055c94:	jbe    0x140055c96
   140055c96:	imul   eax,DWORD PTR [rax],0x650063
   140055c9c:	add    BYTE PTR cs:[rbp+0x0],ah
   140055ca0:	js     0x140055ca2
   140055ca2:	add    BYTE PTR gs:[rax],al
   140055ca5:	add    BYTE PTR [rax],al
   140055ca7:	add    BYTE PTR [rax+rax*1+0x1a],dl
   140055cab:	add    BYTE PTR [rcx],al
   140055cad:	add    BYTE PTR [rax+0x0],dl
   140055cb0:	jb     0x140055cb2
   140055cb2:	outs   dx,DWORD PTR ds:[rsi]
   140055cb3:	add    BYTE PTR [rax+rax*1+0x75],ah
   140055cb7:	add    BYTE PTR [rbx+0x0],ah
   140055cba:	je     0x140055cbc
   140055cbc:	rex.WRX add BYTE PTR [rcx+0x0],r12b
   140055cc0:	ins    DWORD PTR es:[rdi],dx
   140055cc1:	add    BYTE PTR [rbp+0x0],ah
   140055cc4:	add    BYTE PTR [rax],al
   140055cc6:	add    BYTE PTR [rax],al
   140055cc8:	push   rax
   140055cc9:	add    BYTE PTR [rbx+0x0],dh
   140055ccc:	imul   eax,DWORD PTR [rax],0x650053
   140055cd2:	jb     0x140055cd4
   140055cd4:	jbe    0x140055cd6
   140055cd6:	imul   eax,DWORD PTR [rax],0x650063
   140055cdc:	and    BYTE PTR [rax],al
   140055cde:	push   rbx
   140055cdf:	add    BYTE PTR [rcx+0x0],bh
   140055ce2:	jae    0x140055ce4
   140055ce4:	je     0x140055ce6
   140055ce6:	add    BYTE PTR gs:[rbp+0x0],ch
   140055cea:	and    BYTE PTR [rax],al
   140055cec:	push   rbx
   140055ced:	add    BYTE PTR [rbp+0x0],ah
   140055cf0:	jb     0x140055cf2
   140055cf2:	jbe    0x140055cf4
   140055cf4:	imul   eax,DWORD PTR [rax],0x650063
   140055cfa:	add    BYTE PTR [rax],al
   140055cfc:	add    BYTE PTR ss:[rcx],cl
   140055cff:	add    BYTE PTR [rcx],al
   140055d01:	add    BYTE PTR [rax+0x0],dl
   140055d04:	jb     0x140055d06
   140055d06:	outs   dx,DWORD PTR ds:[rsi]
   140055d07:	add    BYTE PTR [rax+rax*1+0x75],ah
   140055d0b:	add    BYTE PTR [rbx+0x0],ah
   140055d0e:	je     0x140055d10
   140055d10:	push   rsi
   140055d11:	add    BYTE PTR [rbp+0x0],ah
   140055d14:	jb     0x140055d16
   140055d16:	jae    0x140055d18
   140055d18:	imul   eax,DWORD PTR [rax],0x6e006f
   140055d1e:	add    BYTE PTR [rax],al
   140055d20:	xor    eax,DWORD PTR [rax]
   140055d22:	add    BYTE PTR cs:[rdx],dh
   140055d25:	add    BYTE PTR [rsi],ch
   140055d27:	add    BYTE PTR [rax],dh
   140055d29:	add    BYTE PTR [rsi],ch
   140055d2b:	add    BYTE PTR [rsi],dh
   140055d2d:	add    BYTE PTR [rdx],dh
   140055d2f:	add    BYTE PTR [rax],al
   140055d31:	add    BYTE PTR [rax],al
   140055d33:	add    BYTE PTR [rax+rax*1+0x0],al
   140055d37:	add    BYTE PTR [rcx],al
   140055d39:	add    BYTE PTR [rsi+0x0],dl
   140055d3c:	(bad)  
   140055d3d:	add    BYTE PTR [rdx+0x0],dh
   140055d40:	rex.RX add BYTE PTR [rcx+0x0],r13b
   140055d44:	ins    BYTE PTR es:[rdi],dx
   140055d45:	add    BYTE PTR [rbp+0x0],ah
   140055d48:	rex.WB add BYTE PTR [r14+0x0],bpl
   140055d4c:	data16 add BYTE PTR [rdi+0x0],ch
   140055d50:	add    BYTE PTR [rax],al
   140055d52:	add    BYTE PTR [rax],al
   140055d54:	and    al,0x0
   140055d56:	add    al,0x0
   140055d58:	add    BYTE PTR [rax],al
   140055d5a:	push   rsp
   140055d5b:	add    BYTE PTR [rdx+0x0],dh
   140055d5e:	(bad)  
   140055d5f:	add    BYTE PTR [rsi+0x0],ch
   140055d62:	jae    0x140055d64
   140055d64:	ins    BYTE PTR es:[rdi],dx
   140055d65:	add    BYTE PTR [rcx+0x0],ah
   140055d68:	je     0x140055d6a
   140055d6a:	imul   eax,DWORD PTR [rax],0x6e006f
   140055d70:	add    BYTE PTR [rax],al
   140055d72:	add    BYTE PTR [rax],al
   140055d74:	or     DWORD PTR [rax+rsi*4],eax
   140055d77:	add    al,0x3c
   140055d79:	(bad)  
   140055d7a:	jae    0x140055def
   140055d7c:	gs ins DWORD PTR es:[rdi],dx
   140055d7e:	(bad)  
   140055d7f:	ins    BYTE PTR es:[rdi],dx
   140055d80:	jns    0x140055da2
   140055d82:	js     0x140055df1
   140055d84:	ins    BYTE PTR es:[rdi],dx
   140055d85:	outs   dx,BYTE PTR ds:[rsi]
   140055d86:	jae    0x140055dc5
   140055d88:	and    dh,BYTE PTR [rbp+0x72]
   140055d8b:	outs   dx,BYTE PTR ds:[rsi]
   140055d8c:	cmp    dh,BYTE PTR [rbx+0x63]
   140055d8f:	push   0x73616d65
   140055d94:	sub    eax,0x7263696d
   140055d99:	outs   dx,DWORD PTR ds:[rsi]
   140055d9a:	jae    0x140055e0b
   140055d9c:	data16 je 0x140055dcc
   140055d9f:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140055da2:	cmp    ah,BYTE PTR [rcx+0x73]
   140055da5:	ins    DWORD PTR es:[rdi],dx
   140055da6:	cs jbe 0x140055dda
   140055da9:	and    ah,BYTE PTR [rax]
   140055dab:	ins    DWORD PTR es:[rdi],dx
   140055dac:	(bad)  
   140055dad:	outs   dx,BYTE PTR ds:[rsi]
   140055dae:	imul   esp,DWORD PTR [rsi+0x65],0x65567473
   140055db5:	jb     0x140055e2a
   140055db7:	imul   ebp,DWORD PTR [rdi+0x6e],0x2e31223d
   140055dbe:	xor    BYTE PTR [rdx],ah
   140055dc0:	ds or  eax,0x3c20200a
   140055dc6:	je     0x140055e3a
   140055dc8:	jne    0x140055e3d
   140055dca:	je     0x140055e15
   140055dcc:	outs   dx,BYTE PTR ds:[rsi]
   140055dcd:	outs   dx,WORD PTR ds:[rsi]
   140055dcf:	and    BYTE PTR [rax+0x6d],bh
   140055dd2:	ins    BYTE PTR es:[rdi],dx
   140055dd3:	outs   dx,BYTE PTR ds:[rsi]
   140055dd4:	jae    0x140055e13
   140055dd6:	and    dh,BYTE PTR [rbp+0x72]
   140055dd9:	outs   dx,BYTE PTR ds:[rsi]
   140055dda:	cmp    dh,BYTE PTR [rbx+0x63]
   140055ddd:	push   0x73616d65
   140055de2:	sub    eax,0x7263696d
   140055de7:	outs   dx,DWORD PTR ds:[rsi]
   140055de8:	jae    0x140055e59
   140055dea:	data16 je 0x140055e1a
   140055ded:	movsxd ebp,DWORD PTR [rdi+0x6d]
   140055df0:	cmp    ah,BYTE PTR [rcx+0x73]
   140055df3:	ins    DWORD PTR es:[rdi],dx
   140055df4:	cs jbe 0x140055e2a
   140055df7:	and    bh,BYTE PTR [rsi]
   140055df9:	or     eax,0x2020200a
   140055dfe:	and    BYTE PTR [rbx+rsi*2],bh
   140055e01:	movsxd esi,DWORD PTR gs:[rbp+0x72]
   140055e05:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140055e0d:	and    BYTE PTR [rax],ah
   140055e0f:	and    BYTE PTR [rax],ah
   140055e11:	cmp    al,0x72
   140055e13:	gs jno 0x140055e8b
   140055e16:	gs jae 0x140055e8d
   140055e19:	gs fs push rax
   140055e1c:	jb     0x140055e87
   140055e1e:	jbe    0x140055e89
   140055e20:	ins    BYTE PTR es:[rdi],dx
   140055e21:	gs addr32 gs jae 0x140055e64
   140055e26:	or     eax,0x2020200a
   140055e2b:	and    BYTE PTR [rax],ah
   140055e2d:	and    BYTE PTR [rax],ah
   140055e2f:	and    BYTE PTR [rdx+rsi*2],bh
   140055e32:	gs jno 0x140055eaa
   140055e35:	gs jae 0x140055eac
   140055e38:	gs fs rex.RB js 0x140055ea2
   140055e3d:	movsxd esi,DWORD PTR [rbp+0x74]
   140055e40:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140055e47:	ins    BYTE PTR es:[rdi],dx
   140055e48:	and    BYTE PTR [rbp+riz*2+0x76],ch
   140055e4c:	gs ins BYTE PTR es:[rdi],dx
   140055e4e:	cmp    eax,0x49736122
   140055e53:	outs   dx,BYTE PTR ds:[rsi]
   140055e54:	jbe    0x140055ec5
   140055e56:	imul   esp,DWORD PTR [rbp+0x72],0x22
   140055e5a:	and    BYTE PTR [rbp+0x69],dh
   140055e5d:	movsxd esp,DWORD PTR [r11+0x65]
   140055e61:	jae    0x140055ed6
   140055e63:	cmp    eax,0x6c616622
   140055e68:	jae    0x140055ecf
   140055e6a:	and    bh,BYTE PTR [rsi]
   140055e6c:	cmp    al,0x2f
   140055e6e:	jb     0x140055ed5
   140055e70:	jno    0x140055ee7
   140055e72:	gs jae 0x140055ee9
   140055e75:	gs fs rex.RB js 0x140055edf
   140055e7a:	movsxd esi,DWORD PTR [rbp+0x74]
   140055e7d:	imul   ebp,DWORD PTR [rdi+0x6e],0x6576654c
   140055e84:	ins    BYTE PTR es:[rdi],dx
   140055e85:	ds or  eax,0x2020200a
   140055e8b:	and    BYTE PTR [rax],ah
   140055e8d:	and    BYTE PTR [rdi+rbp*1],bh
   140055e90:	jb     0x140055ef7
   140055e92:	jno    0x140055f09
   140055e94:	gs jae 0x140055f0b
   140055e97:	gs fs push rax
   140055e9a:	jb     0x140055f05
   140055e9c:	jbe    0x140055f07
   140055e9e:	ins    BYTE PTR es:[rdi],dx
   140055e9f:	gs addr32 gs jae 0x140055ee2
   140055ea4:	or     eax,0x2020200a
   140055ea9:	and    BYTE PTR [rdi+rbp*1],bh
   140055eac:	jae    0x140055f13
   140055eae:	movsxd esi,DWORD PTR [rbp+0x72]
   140055eb1:	imul   esi,DWORD PTR [rcx+rdi*2+0x3e],0x20200a0d
   140055eb9:	cmp    al,0x2f
   140055ebb:	je     0x140055f2f
   140055ebd:	jne    0x140055f32
   140055ebf:	je     0x140055f0a
   140055ec1:	outs   dx,BYTE PTR ds:[rsi]
   140055ec2:	outs   dx,WORD PTR ds:[rsi]
   140055ec4:	ds or  eax,0x612f3c0a
   140055eca:	jae    0x140055f3f
   140055ecc:	gs ins DWORD PTR es:[rdi],dx
   140055ece:	(bad)  
   140055ecf:	ins    BYTE PTR es:[rdi],dx
   140055ed0:	jns    0x140055f10
   140055ed2:	push   rax
   140055ed3:	rex.B

Disassembly of section .reloc:

0000000140056000 <.reloc>:
   140056000:	add    BYTE PTR [rax+0x3],ah
   140056003:	add    ah,bl
   140056005:	add    BYTE PTR [rax],al
   140056007:	add    BYTE PTR [rax],ah
   140056009:	test   al,0x28
   14005600b:	test   al,0x30
   14005600d:	test   al,0x38
   14005600f:	test   al,0x40
   140056011:	test   al,0x48
   140056013:	test   al,0x50
   140056015:	test   al,0x58
   140056017:	test   al,0x60
   140056019:	test   al,0x68
   14005601b:	test   al,0x70
   14005601d:	test   al,0x78
   14005601f:	test   al,0x80
   140056021:	test   al,0x88
   140056023:	test   al,0x90
   140056025:	test   al,0x98
   140056027:	test   al,0xa0
   140056029:	test   al,0xa8
   14005602b:	test   al,0xb0
   14005602d:	test   al,0xb8
   14005602f:	test   al,0xc0
   140056031:	test   al,0xc8
   140056033:	test   al,0xd0
   140056035:	test   al,0xe8
   140056037:	test   al,0xf0
   140056039:	test   al,0xf8
   14005603b:	test   al,0x0
   14005603d:	test   eax,0xa920a918
   140056042:	movabs al,ds:0xc0a9b8a9b0a9a8a9
   14005604b:	test   eax,0xa9d0a9c8
   140056050:	fsubr  DWORD PTR [rcx-0x55575620]
   140056056:	shr    BYTE PTR [rdx-0x550f5528],0x8
   14005605d:	stos   DWORD PTR es:[rdi],eax
   14005605e:	and    BYTE PTR [rbx-0x54af54c8],ch
   140056064:	push   0xffffffffc0ab80ab
   140056069:	stos   DWORD PTR es:[rdi],eax
   14005606a:	enter  0xd0ab,0xab
   14005606e:	fsubr  DWORD PTR [rbx-0x54175420]
   140056074:	lock stos DWORD PTR es:[rdi],eax
   140056076:	clc    
   140056077:	stos   DWORD PTR es:[rdi],eax
   140056078:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   14005607f:	lods   al,BYTE PTR ds:[rsi]
   140056080:	and    BYTE PTR [rax+rbp*1+0x38ac30ac],ch
   140056087:	lods   al,BYTE PTR ds:[rsi]
   140056088:	lods   al,BYTE PTR ds:[rsi]
   14005608a:	rex.W lods al,BYTE PTR ds:[rsi]
   14005608c:	push   rax
   14005608d:	lods   al,BYTE PTR ds:[rsi]
   14005608e:	pop    rax
   14005608f:	lods   al,BYTE PTR ds:[rsi]
   140056090:	(bad)  
   140056091:	lods   al,BYTE PTR ds:[rsi]
   140056092:	push   0x78ac70ac
   140056097:	lods   al,BYTE PTR ds:[rsi]
   140056098:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   1400560a0:	enter  0xd0ac,0xac
   1400560a4:	sub    BYTE PTR [rbp-0x52c752d0],ch
   1400560aa:	rex lods eax,DWORD PTR ds:[rsi]
   1400560ac:	jo     0x14005605b
   1400560ae:	js     0x14005605d
   1400560b0:	sub    BYTE PTR [rbp-0x521f5278],0xe8
   1400560b7:	lods   eax,DWORD PTR ds:[rsi]
   1400560b8:	sub    BYTE PTR [rsi-0x518f51d0],ch
   1400560be:	js     0x14005606e
   1400560c0:	mov    eax,0x28aec0ae
   1400560c5:	scas   eax,DWORD PTR es:[rdi]
   1400560c6:	rex scas eax,DWORD PTR es:[rdi]
   1400560c8:	pop    rax
   1400560c9:	scas   eax,DWORD PTR es:[rdi]
   1400560ca:	(bad)  
   1400560cb:	scas   eax,DWORD PTR es:[rdi]
   1400560cc:	push   0x78af70af
   1400560d1:	scas   eax,DWORD PTR es:[rdi]
   1400560d2:	sub    BYTE PTR [rdi-0x502f5078],0xe8
   1400560d9:	scas   eax,DWORD PTR es:[rdi]
   1400560da:	add    BYTE PTR [rax],al
   1400560dc:	add    BYTE PTR [rax+0x3],dh
   1400560df:	add    BYTE PTR [rcx+rax*1+0x0],dl
   1400560e3:	add    BYTE PTR [rax],al
   1400560e5:	movabs al,ds:0xa020a018a010a008
   1400560ee:	sub    BYTE PTR [rax-0x5fc75fd0],ah
   1400560f4:	movabs al,ds:0xa1b8a150a138a048
   1400560fe:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   140056105:	movabs eax,ds:0xa280a278a1e8a1e0
   14005610e:	mov    BYTE PTR [rdx-0x5d175d20],ah
   140056114:	lock movabs ds:0xa368a358a338a318,al
   14005611e:	and    BYTE PTR [rbx-0x5c375c60],0xd0
   140056125:	movabs ds:0xa418a3e8a3e0a3d8,eax
   14005612e:	and    BYTE PTR [rax+rdx*1+0x20a518a5],ah
   140056135:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056136:	xor    BYTE PTR [rbp-0x580f5ac8],ah
   14005613c:	clc    
   14005613d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005613e:	add    BYTE PTR [rax-0x57ef57f8],ch
   140056144:	sbb    BYTE PTR [rax-0x57d757e0],ch
   14005614a:	xor    BYTE PTR [rax-0x57bf57c8],ch
   140056150:	rex.W test al,0x50
   140056153:	test   al,0x58
   140056155:	test   al,0x60
   140056157:	test   al,0x68
   140056159:	test   al,0x70
   14005615b:	test   al,0x78
   14005615d:	test   al,0x80
   14005615f:	test   al,0x88
   140056161:	test   al,0x90
   140056163:	test   al,0x98
   140056165:	test   al,0xa0
   140056167:	test   al,0xa8
   140056169:	test   al,0xb0
   14005616b:	test   al,0xb8
   14005616d:	test   al,0xc0
   14005616f:	test   al,0xc8
   140056171:	test   al,0xd0
   140056173:	test   al,0xd8
   140056175:	test   al,0xe0
   140056177:	test   al,0xe8
   140056179:	test   al,0xf0
   14005617b:	test   al,0xf8
   14005617d:	test   al,0x0
   14005617f:	test   eax,0xa910a908
   140056184:	sbb    BYTE PTR [rcx-0x56d756e0],ch
   14005618a:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   140056190:	test   rax,0xffffffffa958a950
   140056196:	(bad)  
   140056197:	test   eax,0xa970a968
   14005619c:	js     0x140056147
   14005619e:	sub    BYTE PTR [rcx-0x566f5678],0x98
   1400561a5:	test   eax,0xa9a8a9a0
   1400561aa:	mov    al,0xa9
   1400561ac:	mov    eax,0xc8a9c0a9
   1400561b1:	test   eax,0xa9d8a9d0
   1400561b6:	loopne 0x140056161
   1400561b8:	call   0x138af5266
   1400561bd:	test   eax,0xaa08aa00
   1400561c2:	adc    BYTE PTR [rdx-0x55df55e8],ch
   1400561c8:	sub    BYTE PTR [rdx-0x55c755d0],ch
   1400561ce:	stos   BYTE PTR es:[rdi],al
   1400561d0:	rex.W stos BYTE PTR es:[rdi],al
   1400561d2:	push   rax
   1400561d3:	stos   BYTE PTR es:[rdi],al
   1400561d4:	pop    rax
   1400561d5:	stos   BYTE PTR es:[rdi],al
   1400561d6:	(bad)  
   1400561d7:	stos   BYTE PTR es:[rdi],al
   1400561d8:	push   0x78aa70aa
   1400561dd:	stos   BYTE PTR es:[rdi],al
   1400561de:	sub    BYTE PTR [rdx-0x556f5578],0x98
   1400561e5:	stos   BYTE PTR es:[rdi],al
   1400561e6:	movabs al,ds:0xc0aab8aab0aaa8aa
   1400561ef:	stos   BYTE PTR es:[rdi],al
   1400561f0:	enter  0xd0aa,0xaa
   1400561f4:	fsubr  DWORD PTR [rdx-0x55175520]
   1400561fa:	lock stos BYTE PTR es:[rdi],al
   1400561fc:	clc    
   1400561fd:	stos   BYTE PTR es:[rdi],al
   1400561fe:	add    BYTE PTR [rbx-0x54ef54f8],ch
   140056204:	sbb    BYTE PTR [rbx-0x54d754e0],ch
   14005620a:	xor    BYTE PTR [rbx-0x54bf54c8],ch
   140056210:	stos   QWORD PTR es:[rdi],rax
   140056212:	push   rax
   140056213:	stos   DWORD PTR es:[rdi],eax
   140056214:	pop    rax
   140056215:	stos   DWORD PTR es:[rdi],eax
   140056216:	(bad)  
   140056217:	stos   DWORD PTR es:[rdi],eax
   140056218:	push   0x78ab70ab
   14005621d:	stos   DWORD PTR es:[rdi],eax
   14005621e:	sub    BYTE PTR [rbx-0x546f5478],0x98
   140056225:	stos   DWORD PTR es:[rdi],eax
   140056226:	movabs al,ds:0xc0abb8abb0aba8ab
   14005622f:	stos   DWORD PTR es:[rdi],eax
   140056230:	add    BYTE PTR [rax+0x1700003],al
   140056236:	add    BYTE PTR [rax],al
   140056238:	mov    al,0xa1
   14005623a:	mov    eax,0xc8a1c0a1
   14005623f:	movabs eax,ds:0xa1e8a1e0a1d8a1d0
   140056248:	lock movabs eax,ds:0xa218a210a200a1f8
   140056252:	and    BYTE PTR [rdx-0x5dcf5dd8],ah
   140056258:	cmp    BYTE PTR [rdx-0x5db75dc0],ah
   14005625e:	push   rax
   14005625f:	movabs ds:0xa270a268a260a258,al
   140056268:	js     0x14005620c
   14005626a:	and    BYTE PTR [rdx-0x5d6f5d78],0x98
   140056271:	movabs ds:0xa2b8a2b0a2a8a2a0,al
   14005627a:	shl    BYTE PTR [rdx-0x5d2f5d38],0xd8
   140056281:	movabs ds:0xa2f8a2f0a2e8a2e0,al
   14005628a:	add    BYTE PTR [rbx-0x5ccf5ce8],ah
   140056290:	movabs ds:0xa548a528a500a4f8,rax
   14005629a:	push   0xffffffffa8a588a5
   14005629f:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400562a0:	enter  0xe8a5,0xa5
   1400562a4:	or     BYTE PTR [rsi-0x59b759d8],ah
   1400562aa:	push   0xffffffffa8a688a6
   1400562af:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400562b0:	enter  0xe8a6,0xa6
   1400562b4:	or     BYTE PTR [rdi-0x58b758d8],ah
   1400562ba:	push   0xffffffffa8a788a7
   1400562bf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400562c0:	enter  0xe8a7,0xa7
   1400562c4:	or     BYTE PTR [rax-0x57b757d8],ch
   1400562ca:	push   0xffffffff88a880a8
   1400562cf:	test   al,0xa8
   1400562d1:	test   al,0x80
   1400562d3:	stos   DWORD PTR es:[rdi],eax
   1400562d4:	mov    BYTE PTR [rbx-0x54675470],ch
   1400562da:	movabs al,ds:0xc0abb8abb0aba8ab
   1400562e3:	stos   DWORD PTR es:[rdi],eax
   1400562e4:	enter  0xe0ab,0xab
   1400562e8:	call   0x138b15398
   1400562ed:	stos   DWORD PTR es:[rdi],eax
   1400562ee:	add    BYTE PTR [rax+rcx*1+0x18ac10ac],ch
   1400562f5:	lods   al,BYTE PTR ds:[rsi]
   1400562f6:	and    BYTE PTR [rax+rsi*1+0x40ac38ac],ch
   1400562fd:	lods   al,BYTE PTR ds:[rsi]
   1400562fe:	rex.W lods al,BYTE PTR ds:[rsi]
   140056300:	push   rax
   140056301:	lods   al,BYTE PTR ds:[rsi]
   140056302:	pop    rax
   140056303:	lods   al,BYTE PTR ds:[rsi]
   140056304:	(bad)  
   140056305:	lods   al,BYTE PTR ds:[rsi]
   140056306:	push   0x78ac70ac
   14005630b:	lods   al,BYTE PTR ds:[rsi]
   14005630c:	sub    BYTE PTR [rax+rcx*4-0x5f536f54],0xac
   140056314:	test   al,0xac
   140056316:	mov    al,0xac
   140056318:	mov    eax,0xc8acc0ac
   14005631d:	lods   al,BYTE PTR ds:[rsi]
   14005631e:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   140056325:	lods   al,BYTE PTR ds:[rsi]
   140056326:	clc    
   140056327:	lods   al,BYTE PTR ds:[rsi]
   140056328:	or     BYTE PTR [rbp-0x52df52f0],ch
   14005632e:	sub    BYTE PTR [rbp-0x52c752d0],ch
   140056334:	rex lods eax,DWORD PTR ds:[rsi]
   140056336:	push   rax
   140056337:	lods   eax,DWORD PTR ds:[rsi]
   140056338:	pop    rax
   140056339:	lods   eax,DWORD PTR ds:[rsi]
   14005633a:	push   0x78ad70ad
   14005633f:	lods   eax,DWORD PTR ds:[rsi]
   140056340:	sub    BYTE PTR [rbp-0x52675270],0xa0
   140056347:	lods   eax,DWORD PTR ds:[rsi]
   140056348:	mov    al,0xad
   14005634a:	mov    eax,0xc8adc0ad
   14005634f:	lods   eax,DWORD PTR ds:[rsi]
   140056350:	shr    BYTE PTR [rbp-0x521f5228],1
   140056356:	lock lods eax,DWORD PTR ds:[rsi]
   140056358:	clc    
   140056359:	lods   eax,DWORD PTR ds:[rsi]
   14005635a:	add    BYTE PTR [rsi-0x51ef51f8],ch
   140056360:	sbb    BYTE PTR [rsi-0x51d751e0],ch
   140056366:	xor    BYTE PTR [rsi-0x51bf51c8],ch
   14005636c:	rex.W scas al,BYTE PTR es:[rdi]
   14005636e:	push   rax
   14005636f:	scas   al,BYTE PTR es:[rdi]
   140056370:	pop    rax
   140056371:	scas   al,BYTE PTR es:[rdi]
   140056372:	(bad)  
   140056373:	scas   al,BYTE PTR es:[rdi]
   140056374:	push   0x78ae70ae
   140056379:	scas   al,BYTE PTR es:[rdi]
   14005637a:	sub    BYTE PTR [rsi-0x514f5178],0xb8
   140056381:	scas   al,BYTE PTR es:[rdi]
   140056382:	shr    BYTE PTR [rsi-0x50ff5138],0x10
   140056389:	scas   eax,DWORD PTR es:[rdi]
   14005638a:	sbb    BYTE PTR [rdi-0x50c750d0],ch
   140056390:	rex scas eax,DWORD PTR es:[rdi]
   140056392:	scas   rax,QWORD PTR es:[rdi]
   140056394:	push   rax
   140056395:	scas   eax,DWORD PTR es:[rdi]
   140056396:	pop    rax
   140056397:	scas   eax,DWORD PTR es:[rdi]
   140056398:	(bad)  
   140056399:	scas   eax,DWORD PTR es:[rdi]
   14005639a:	push   0x78af70af
   14005639f:	scas   eax,DWORD PTR es:[rdi]
   1400563a0:	add    BYTE PTR [rax+0xd80003],dl
   1400563a6:	add    BYTE PTR [rax],al
   1400563a8:	movabs al,ds:0xa0a0a088a070a058
   1400563b2:	mov    al,0xa0
   1400563b4:	mov    eax,0xe0a0d0a0
   1400563b9:	movabs al,ds:0xa110a108a100a0e8
   1400563c2:	sbb    BYTE PTR [rcx-0x5ed75ee0],ah
   1400563c8:	xor    BYTE PTR [rcx-0x5ebf5ec8],ah
   1400563ce:	movabs rax,ds:0xa168a160a158a150
   1400563d8:	jo     0x14005637b
   1400563da:	js     0x14005637d
   1400563dc:	and    BYTE PTR [rcx-0x5e6f5e78],0x98
   1400563e3:	movabs eax,ds:0xa1b8a1b0a1a8a1a0
   1400563ec:	shl    BYTE PTR [rcx-0x5e2f5e38],0xd8
   1400563f3:	movabs eax,ds:0xa1f8a1f0a1e8a1e0
   1400563fc:	add    BYTE PTR [rdx-0x5def5df8],ah
   140056402:	sbb    BYTE PTR [rdx-0x5dd75de0],ah
   140056408:	xor    BYTE PTR [rdx-0x5dbf5dc8],ah
   14005640e:	rex.W movabs ds:0xa2c0a260a258a250,al
   140056418:	enter  0xd0a2,0xa2
   14005641c:	fsub   DWORD PTR [rdx-0x5c7f5c98]
   140056422:	cwde   
   140056423:	movabs ds:0xa3c8a3b0a3a8a3a0,eax
   14005642c:	shl    BYTE PTR [rbx-0x5c1f5c28],1
   140056432:	adc    BYTE PTR [rax+rbx*1+0x40a420a4],ah
   140056439:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005643a:	rex.W movs BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005643c:	push   rax
   14005643d:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   14005643e:	pop    rax
   14005643f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056440:	(bad)  
   140056441:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056442:	push   rax
   140056443:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056444:	pop    rax
   140056445:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056446:	(bad)  
   140056447:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056448:	nop
   140056449:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005644a:	cwde   
   14005644b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005644c:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005644e:	add    BYTE PTR [rsi-0x59ef59f8],ah
   140056454:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   14005645a:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   140056460:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056462:	push   rax
   140056463:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056464:	pop    rax
   140056465:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056466:	(bad)  
   140056467:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056468:	push   0x78a670a6
   14005646d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005646e:	mov    al,0xad
   140056470:	mov    eax,0xc8adc0ad
   140056475:	lods   eax,DWORD PTR ds:[rsi]
   140056476:	add    BYTE PTR [rax],al
   140056478:	add    BYTE PTR [rax+0xc80003],ah
   14005647e:	add    BYTE PTR [rax],al
   140056480:	xor    BYTE PTR [rbp-0x5abf5ac8],ah
   140056486:	movs   QWORD PTR es:[rdi],QWORD PTR ds:[rsi]
   140056488:	push   rax
   140056489:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005648a:	pop    rax
   14005648b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005648c:	(bad)  
   14005648d:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005648e:	push   0x78a570a5
   140056493:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056494:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   14005649b:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   14005649c:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400564a5:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400564a6:	enter  0xd0a5,0xa5
   1400564aa:	fsub   DWORD PTR [rbp-0x5a175a20]
   1400564b0:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400564b2:	clc    
   1400564b3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400564b4:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400564ba:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   1400564c0:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400564c6:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564c8:	push   rax
   1400564c9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564ca:	pop    rax
   1400564cb:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564cc:	(bad)  
   1400564cd:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564ce:	push   0x78a670a6
   1400564d3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564d4:	and    BYTE PTR [rsi-0x596f5978],0x98
   1400564db:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564dc:	movabs al,ds:0xc0a6b8a6b0a6a8a6
   1400564e5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564e6:	enter  0xd0a6,0xa6
   1400564ea:	fsub   DWORD PTR [rsi-0x59175920]
   1400564f0:	lock cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564f2:	clc    
   1400564f3:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400564f4:	add    BYTE PTR [rdi-0x58ef58f8],ah
   1400564fa:	sbb    BYTE PTR [rdi-0x58d758e0],ah
   140056500:	xor    BYTE PTR [rdi-0x58bf58c8],ah
   140056506:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   140056508:	push   rax
   140056509:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005650a:	pop    rax
   14005650b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005650c:	(bad)  
   14005650d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005650e:	push   0x78a770a7
   140056513:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056514:	and    BYTE PTR [rdi-0x586f5878],0x98
   14005651b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005651c:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140056525:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056526:	enter  0xd0a7,0xa7
   14005652a:	fsub   DWORD PTR [rdi-0x58175820]
   140056530:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056532:	clc    
   140056533:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056534:	add    BYTE PTR [rax-0x57ef57f8],ch
   14005653a:	sbb    BYTE PTR [rax-0x57d757e0],ch
   140056540:	add    BYTE PTR [rax+0xe80003],dh
   140056546:	add    BYTE PTR [rax],al
   140056548:	(bad)  
   140056549:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005654a:	jo     0x1400564f3
   14005654c:	and    BYTE PTR [rdi-0x585f5870],0xb0
   140056553:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056554:	shl    BYTE PTR [rdi-0x581f5830],0xf0
   14005655b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005655c:	add    BYTE PTR [rax-0x57df57f0],ch
   140056562:	xor    BYTE PTR [rax-0x57af57c0],ch
   140056568:	(bad)  
   140056569:	test   al,0x70
   14005656b:	test   al,0x80
   14005656d:	test   al,0x90
   14005656f:	test   al,0xa0
   140056571:	test   al,0xb0
   140056573:	test   al,0xc0
   140056575:	test   al,0xd0
   140056577:	test   al,0xe0
   140056579:	test   al,0xf0
   14005657b:	test   al,0x0
   14005657d:	test   eax,0xa920a910
   140056582:	xor    BYTE PTR [rcx-0x56af56c0],ch
   140056588:	(bad)  
   140056589:	test   eax,0xa980a970
   14005658e:	nop
   14005658f:	test   eax,0xa9b0a9a0
   140056594:	shr    BYTE PTR [rcx-0x561f5630],0xf0
   14005659b:	test   eax,0xaa10aa00
   1400565a0:	and    BYTE PTR [rdx-0x55bf55d0],ch
   1400565a6:	push   rax
   1400565a7:	stos   BYTE PTR es:[rdi],al
   1400565a8:	(bad)  
   1400565a9:	stos   BYTE PTR es:[rdi],al
   1400565aa:	jo     0x140056556
   1400565ac:	sub    BYTE PTR [rdx-0x555f5570],0xb0
   1400565b3:	stos   BYTE PTR es:[rdi],al
   1400565b4:	shr    BYTE PTR [rdx-0x551f5530],0xf0
   1400565bb:	stos   BYTE PTR es:[rdi],al
   1400565bc:	add    BYTE PTR [rbx-0x54df54f0],ch
   1400565c2:	xor    BYTE PTR [rbx-0x54af54c0],ch
   1400565c8:	(bad)  
   1400565c9:	stos   DWORD PTR es:[rdi],eax
   1400565ca:	jo     0x140056577
   1400565cc:	sub    BYTE PTR [rbx-0x545f5470],0xb0
   1400565d3:	stos   DWORD PTR es:[rdi],eax
   1400565d4:	shr    BYTE PTR [rbx-0x541f5430],0xf0
   1400565db:	stos   DWORD PTR es:[rdi],eax
   1400565dc:	add    BYTE PTR [rax+rdx*1+0x30ac20ac],ch
   1400565e3:	lods   al,BYTE PTR ds:[rsi]
   1400565e4:	lods   al,BYTE PTR ds:[rsi]
   1400565e6:	push   rax
   1400565e7:	lods   al,BYTE PTR ds:[rsi]
   1400565e8:	(bad)  
   1400565e9:	lods   al,BYTE PTR ds:[rsi]
   1400565ea:	jo     0x140056598
   1400565ec:	sub    BYTE PTR [rax+rdx*4-0x4f535f54],0xac
   1400565f4:	shr    BYTE PTR [rax+rdx*8+0x40af38ac],0xaf
   1400565fc:	scas   rax,QWORD PTR es:[rdi]
   1400565fe:	push   rax
   1400565ff:	scas   eax,DWORD PTR es:[rdi]
   140056600:	pop    rax
   140056601:	scas   eax,DWORD PTR es:[rdi]
   140056602:	(bad)  
   140056603:	scas   eax,DWORD PTR es:[rdi]
   140056604:	jo     0x1400565b5
   140056606:	js     0x1400565b7
   140056608:	sub    BYTE PTR [rdi-0x506f5078],0x98
   14005660f:	scas   eax,DWORD PTR es:[rdi]
   140056610:	movabs al,ds:0xc0afb8afb0afa8af
   140056619:	scas   eax,DWORD PTR es:[rdi]
   14005661a:	enter  0xd0af,0xaf
   14005661e:	fsubr  DWORD PTR [rdi-0x50175020]
   140056624:	lock scas eax,DWORD PTR es:[rdi]
   140056626:	clc    
   140056627:	scas   eax,DWORD PTR es:[rdi]
   140056628:	add    al,al
   14005662a:	add    eax,DWORD PTR [rax]
   14005662c:	push   rsp
   14005662d:	add    DWORD PTR [rax],eax
   14005662f:	add    BYTE PTR [rax],al
   140056631:	movabs al,ds:0xa078a070a068a060
   14005663a:	and    BYTE PTR [rax-0x5f6f5f78],0x98
   140056641:	movabs al,ds:0xa0b8a0b0a0a8a0a0
   14005664a:	shl    BYTE PTR [rax-0x5f2f5f38],0xd8
   140056651:	movabs al,ds:0xa0f8a0f0a0e8a0e0
   14005665a:	add    BYTE PTR [rcx-0x5e075ef8],ah
   140056660:	add    BYTE PTR [rdx-0x5ccf5df8],ah
   140056666:	cmp    BYTE PTR [rbx-0x5cb75cc0],ah
   14005666c:	push   rax
   14005666d:	movabs ds:0xa370a368a360a358,eax
   140056676:	js     0x14005661b
   140056678:	and    BYTE PTR [rbx-0x5c6f5c78],0x98
   14005667f:	movabs ds:0xa3b8a3b0a3a8a3a0,eax
   140056688:	shl    BYTE PTR [rbx-0x5baf5c38],0x58
   14005668f:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056690:	(bad)  
   140056691:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056692:	push   0x78a470a4
   140056697:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   140056698:	and    BYTE PTR [rax+rcx*4-0x675b6f5c],0xa4
   1400566a0:	movabs al,ds:0xf0a4b8a4b0a4a8a4
   1400566a9:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400566aa:	clc    
   1400566ab:	movs   BYTE PTR es:[rdi],BYTE PTR ds:[rsi]
   1400566ac:	add    BYTE PTR [rbp-0x5aef5af8],ah
   1400566b2:	sbb    BYTE PTR [rbp-0x5acf5ae0],ah
   1400566b8:	cmp    BYTE PTR [rbp-0x5ab75ac0],ah
   1400566be:	push   rax
   1400566bf:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566c0:	pop    rax
   1400566c1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566c2:	(bad)  
   1400566c3:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566c4:	push   0x78a570a5
   1400566c9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566ca:	and    BYTE PTR [rbp-0x5a6f5a78],0x98
   1400566d1:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566d2:	movabs al,ds:0xc0a5b8a5b0a5a8a5
   1400566db:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566dc:	lock movs DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566de:	clc    
   1400566df:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400566e0:	add    BYTE PTR [rsi-0x59ef59f8],ah
   1400566e6:	sbb    BYTE PTR [rsi-0x59d759e0],ah
   1400566ec:	xor    BYTE PTR [rsi-0x59bf59c8],ah
   1400566f2:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400566f4:	push   rax
   1400566f5:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400566f6:	pop    rax
   1400566f7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400566f8:	(bad)  
   1400566f9:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400566fa:	push   0x78a670a6
   1400566ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056700:	and    BYTE PTR [rsi-0x59675970],0xa0
   140056707:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056708:	test   al,0xa6
   14005670a:	mov    al,0xa6
   14005670c:	mov    eax,0xc8a6c0a6
   140056711:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056712:	shl    BYTE PTR [rsi-0x591f5928],1
   140056718:	call   0x138ac57c3
   14005671d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005671e:	add    BYTE PTR [rdi-0x58ef58f8],ah
   140056724:	sbb    BYTE PTR [rdi-0x58af58e0],ah
   14005672a:	pop    rax
   14005672b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005672c:	(bad)  
   14005672d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005672e:	push   0x78a770a7
   140056733:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056734:	and    BYTE PTR [rdi-0x586f5878],0x98
   14005673b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005673c:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140056745:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056746:	enter  0xd0a7,0xa7
   14005674a:	fsub   DWORD PTR [rdi-0x58175820]
   140056750:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056752:	clc    
   140056753:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056754:	xor    BYTE PTR [rcx-0x56bf56c8],ch
   14005675a:	test   rax,0xffffffffa958a950
   140056760:	(bad)  
   140056761:	test   eax,0xa970a968
   140056766:	js     0x140056711
   140056768:	mov    al,0xaf
   14005676a:	mov    eax,0xc8afc0af
   14005676f:	scas   eax,DWORD PTR es:[rdi]
   140056770:	shr    BYTE PTR [rdi-0x501f5028],1
   140056776:	call   0x138b5582a
   14005677b:	scas   eax,DWORD PTR es:[rdi]
   14005677c:	add    al,dl
   14005677e:	add    eax,DWORD PTR [rax]
   140056780:	cmp    al,0x0
   140056782:	add    BYTE PTR [rax],al
   140056784:	add    BYTE PTR [rax-0x5fef5ff8],ah
   14005678a:	sbb    BYTE PTR [rax-0x5b275b30],ah
   140056790:	push   0x78a670a6
   140056795:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056796:	and    BYTE PTR [rsi-0x596f5978],0x98
   14005679d:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005679e:	movabs al,ds:0xe0a8d8a8d0a6a8a6
   1400567a7:	test   al,0x10
   1400567a9:	test   eax,0xa9b0a968
   1400567ae:	mov    eax,0xc8a9c0a9
   1400567b3:	test   eax,0xaa40aa20
   1400567b8:	add    BYTE PTR [rax+0xc80004],al
   1400567be:	add    BYTE PTR [rax],al
   1400567c0:	add    BYTE PTR [rax-0x5fcf5ff8],ah
   1400567c6:	pop    rax
   1400567c7:	movabs al,ds:0xa0e8a0b8a0a0a080
   1400567d0:	sbb    BYTE PTR [rcx-0x5e975ec0],ah
   1400567d6:	mov    BYTE PTR [rcx-0x5e1f5e50],ah
   1400567dc:	adc    BYTE PTR [rdx-0x5caf5d50],ah
   1400567e2:	lock movabs ds:0xa498a468a440a418,eax
   1400567ec:	shl    BYTE PTR [rax+rsi*8+0x40a518a4],0xa5
   1400567f4:	push   0xffffffffc0a598a5
   1400567f9:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   1400567fa:	call   0x178ab78a4
   1400567ff:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056800:	(bad)  
   140056801:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056802:	push   0xffffffffb0a688a6
   140056807:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056808:	shl    BYTE PTR [rsi-0x58c75900],1
   14005680e:	pop    rax
   14005680f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056810:	and    BYTE PTR [rdi-0x586f5878],0x98
   140056817:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056818:	movabs al,ds:0xc0a7b8a7b0a7a8a7
   140056821:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056822:	enter  0xd0a7,0xa7
   140056826:	fsub   DWORD PTR [rdi-0x58175820]
   14005682c:	lock cmps DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005682e:	clc    
   14005682f:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   140056830:	add    BYTE PTR [rax-0x57ef57f8],ch
   140056836:	jo     0x1400567e0
   140056838:	cwde   
   140056839:	test   al,0xc8
   14005683b:	test   al,0xe8
   14005683d:	test   al,0x18
   14005683f:	test   eax,0xa990a940
   140056844:	mov    eax,0xa9d8a9
   140056849:	stos   BYTE PTR es:[rdi],al
   14005684a:	stos   BYTE PTR es:[rdi],al
   14005684c:	jo     0x1400567f8
   14005684e:	shr    BYTE PTR [rdx-0x54c75510],0x48
   140056855:	stos   DWORD PTR es:[rdi],eax
   140056856:	push   rax
   140056857:	stos   DWORD PTR es:[rdi],eax
   140056858:	(bad)  
   140056859:	stos   DWORD PTR es:[rdi],eax
   14005685a:	push   0xffffffffb8ab90ab
   14005685f:	stos   DWORD PTR es:[rdi],eax
   140056860:	fsubr  DWORD PTR [rbx-0x53cf53f8]
   140056866:	push   rax
   140056867:	lods   al,BYTE PTR ds:[rsi]
   140056868:	loopne 0x140056816
   14005686a:	add    BYTE PTR [rbp-0x52bf52d0],ch
   140056870:	lods   rax,QWORD PTR ds:[rsi]
   140056872:	pop    rax
   140056873:	lods   eax,DWORD PTR ds:[rsi]
   140056874:	(bad)  
   140056875:	lods   eax,DWORD PTR ds:[rsi]
   140056876:	push   0xffffffff98ad90ad
   14005687b:	lods   eax,DWORD PTR ds:[rsi]
   14005687c:	scas   rax,QWORD PTR es:[rdi]
   14005687e:	push   rax
   14005687f:	scas   eax,DWORD PTR es:[rdi]
   140056880:	add    BYTE PTR [rax+0xec0004],dl
   140056886:	add    BYTE PTR [rax],al
   140056888:	movabs al,ds:0x68a548a528a4a0a3
   140056891:	movs   DWORD PTR es:[rdi],DWORD PTR ds:[rsi]
   140056892:	mov    BYTE PTR [rbp-0x5a175a58],ah
   140056898:	add    BYTE PTR [rsi-0x59ef59f8],ah
   14005689e:	sbb    BYTE PTR [rsi-0x59cf59e0],ah
   1400568a4:	cmp    BYTE PTR [rsi-0x599759a8],ah
   1400568aa:	js     0x140056852
   1400568ac:	mov    BYTE PTR [rsi-0x59575968],ah
   1400568b2:	mov    eax,0xd8a6c8a6
   1400568b7:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   1400568b8:	call   0x148ac6163
   1400568bd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400568be:	sbb    BYTE PTR [rdi-0x58c758d8],ah
   1400568c4:	cmps   QWORD PTR ds:[rsi],QWORD PTR es:[rdi]
   1400568c6:	pop    rax
   1400568c7:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400568c8:	push   0xffffffff88a778a7
   1400568cd:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400568ce:	cwde   
   1400568cf:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   1400568d0:	test   al,0xa7
   1400568d2:	mov    eax,0x30a828a7
   1400568d7:	test   al,0x60
   1400568d9:	test   al,0x68
   1400568db:	test   al,0x70
   1400568dd:	test   al,0x78
   1400568df:	test   al,0x80
   1400568e1:	test   al,0x88
   1400568e3:	test   al,0x90
   1400568e5:	test   al,0x98
   1400568e7:	test   al,0xa0
   1400568e9:	test   al,0xa8
   1400568eb:	test   al,0xb0
   1400568ed:	test   al,0xb8
   1400568ef:	test   al,0x90
   1400568f1:	stos   DWORD PTR es:[rdi],eax
   1400568f2:	cwde   
   1400568f3:	stos   DWORD PTR es:[rdi],eax
   1400568f4:	xor    BYTE PTR [rax+rdi*1+0x48ac40ac],ch
   1400568fb:	lods   al,BYTE PTR ds:[rsi]
   1400568fc:	push   rax
   1400568fd:	lods   al,BYTE PTR ds:[rsi]
   1400568fe:	pop    rax
   1400568ff:	lods   al,BYTE PTR ds:[rsi]
   140056900:	(bad)  
   140056901:	lods   al,BYTE PTR ds:[rsi]
   140056902:	push   0x78ac70ac
   140056907:	lods   al,BYTE PTR ds:[rsi]
   140056908:	sub    BYTE PTR [rax+rcx*4-0x67536f54],0xac
   140056910:	movabs al,ds:0xc0acb8acb0aca8ac
   140056919:	lods   al,BYTE PTR ds:[rsi]
   14005691a:	enter  0xd0ac,0xac
   14005691e:	fsubr  DWORD PTR [rax+riz*8-0xf531754]
   140056925:	lods   al,BYTE PTR ds:[rsi]
   140056926:	clc    
   140056927:	lods   al,BYTE PTR ds:[rsi]
   140056928:	add    BYTE PTR [rbp-0x52ef52f8],ch
   14005692e:	sbb    BYTE PTR [rbp-0x52d752e0],ch
   140056934:	xor    BYTE PTR [rbp-0x52bf52c8],ch
   14005693a:	lods   rax,QWORD PTR ds:[rsi]
   14005693c:	push   rax
   14005693d:	lods   eax,DWORD PTR ds:[rsi]
   14005693e:	pop    rax
   14005693f:	lods   eax,DWORD PTR ds:[rsi]
   140056940:	(bad)  
   140056941:	lods   eax,DWORD PTR ds:[rsi]
   140056942:	push   0x78ad70ad
   140056947:	lods   eax,DWORD PTR ds:[rsi]
   140056948:	sub    BYTE PTR [rbp-0x526f5278],0xa8
   14005694f:	lods   eax,DWORD PTR ds:[rsi]
   140056950:	shr    BYTE PTR [rbp-0x522f5238],0xd8
   140056957:	lods   eax,DWORD PTR ds:[rsi]
   140056958:	loopne 0x140056907
   14005695a:	call   0x138b35a0c
   14005695f:	lods   eax,DWORD PTR ds:[rsi]
   140056960:	add    BYTE PTR [rsi-0x51e751f8],ch
   140056966:	xor    BYTE PTR [rsi+0xae40],ch
   14005696c:	add    BYTE PTR [rax+0x880004],ah
   140056972:	add    BYTE PTR [rax],al
   140056974:	add    BYTE PTR [rsi-0x59d759f8],ah
   14005697a:	rex.W cmps BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   14005697c:	push   0xffffffff98a690a6
   140056981:	cmps   BYTE PTR ds:[rsi],BYTE PTR es:[rdi]
   140056982:	movabs al,ds:0x28a700a6d8a6c8a6
   14005698b:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005698c:	push   rax
   14005698d:	cmps   DWORD PTR ds:[rsi],DWORD PTR es:[rdi]
   14005698e:	js     0x140056937
   140056990:	movabs al,ds:0x30a820a7f8a7c8a7
   140056999:	test   al,0x40
   14005699b:	test   al,0x50
   14005699d:	test   al,0x60
   14005699f:	test   al,0x70
   1400569a1:	test   al,0x80
   1400569a3:	test   al,0xa8
   1400569a5:	test   al,0xd0
   1400569a7:	test   al,0x0
   1400569a9:	test   eax,0xa918a910
   1400569ae:	and    BYTE PTR [rcx-0x56cf56d8],ch
   1400569b4:	cmp    BYTE PTR [rcx-0x56b756c0],ch
   1400569ba:	push   rax
   1400569bb:	test   eax,0xa960a958
   1400569c0:	push   0x78a970a9
   1400569c5:	test   eax,0xa988a980
   1400569ca:	nop
   1400569cb:	test   eax,0xa9b8a998
   1400569d0:	shr    BYTE PTR [rcx-0x560f5618],0x0
   1400569d7:	stos   BYTE PTR es:[rdi],al
   1400569d8:	adc    BYTE PTR [rdx-0x556f5580],ch
   1400569de:	movabs al,ds:0xe0aab8aab0aaa8aa
   1400569e7:	stos   BYTE PTR es:[rdi],al
   1400569e8:	adc    BYTE PTR [rbx-0x549f54c8],ch
   1400569ee:	mov    BYTE PTR [rbx+0xabb0],ch
	...
